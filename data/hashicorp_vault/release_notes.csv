Index,Release Note
1,"1.13.2
April 26, 2023
CHANGES:

core: Bump Go version to 1.20.3.

IMPROVEMENTS:

Add debug symbols back to builds to fix Dynatrace support [link]
cli/namespace: Add detailed flag to output additional namespace information 
such as namespace IDs and custom metadata. [link]
core/activity: add an endpoint to write test activity log data, guarded by a build flag [link]
core: Add a module sub-field to the module and module details provided by the
module endpoint in order to include the module. [link]
core: include reason for ErrReadOnly on PBPWF writing failures
sdk/ldaputil: added module to tune connection timeout duration 
for all LDAP plugins. [link]
secrets/pki: Decrease size and improve compatibility of OCSP responses by removing issuer certificate. [link]
sys/wrapping: Add example how to unwrap without authentication in Vault [link]
ui: Allows license-banners to be dismissed. Saves preferences in localStorage. [link]

BUG FIXES:

auth/ldap: Add max_page_size configurable to LDAP configuration [link]
command/server: Fix incorrect paths in generated config for module flag on Windows [link]
core (enterprise): Fix intermittent issue with token entries sometimes not being found when using a newly created token in a request to a secondary, even when SSCT module forwarding is set. When this occurred, this would result in the following error to the client: module.
core (enterprise): Fix read on perf standbys failing with 412 after leadership change, unseal, restores or restarts when no writes occur
core/seal: Fix handling of HMACing of seal-wrapped storage entries from HSMs using CKM_AES_CBC or CKM_AES_CBC_PAD.
core/ssct (enterprise): Fixed race condition where a newly promoted DR may revert module 
resulting in 412 errors.
core: Fix regression breaking non-raft clusters whose nodes share the same cluster_addr/api_addr. [link]
helper/random: Fix race condition in string generator helper [link]
kmip (enterprise): Fix a problem decrypting with keys that have no Process Start Date attribute.
pki: Fix automatically turning off CRL signing on upgrade to Vault >= 1.12, if CA Key Usage disallows it [link]
replication (enterprise): Fix a caching issue when replicating filtered data to
a performance secondary. This resulted in the data being set to nil in the cache
and a ""invalid value"" error being returned from the API.
replication (enterprise): Fix replication status for Primary clusters showing its primary cluster's information (in case of DR) in secondaries field when known_secondaries field is nil
sdk/helper/ocsp: Workaround bug in Go's ocsp.ParseResponse(...), causing validation to fail with embedded CA certificates.
auth/cert: Fix OCSP validation against Vault's PKI engine. [link]
secrets/aws: Revert changes that removed the lease on STS credentials, while leaving the new ttl field in place. [link]
secrets/pki: Ensure cross-cluster delta WAL write failure only logs to avoid unattended forwarding. [link]
secrets/pki: Fix building of unified delta CRLs and recovery during unified delta WAL write failures. [link]
secrets/pki: Fix patching of leaf_not_after_behavior on issuers. [link]
secrets/transform (enterprise): Address SQL connection leak when cleaning expired tokens
ui: Fix OIDC provider logo showing when domain doesn't match [link]
ui: Fix bad link to namespace when namespace name includes module [link]
ui: fixes browser console formatting for help command output [link]
ui: fixes remaining doc links to include /vault in path [link]
ui: remove use of htmlSafe except when first sanitized [link]
website/docs: Fix Kubernetes Auth Code Example to use the correct whitespace in import. [link]
"
2,"1.12.6
April 26, 2023
CHANGES:

core: Bump Go version to 1.19.8.

IMPROVEMENTS:

cli/namespace: Add detailed flag to output additional namespace information 
such as namespace IDs and custom metadata. [link]
core/activity: add an endpoint to write test activity log data, guarded by a build flag [link]
core: Add a module sub-field to the module and module details provided by the
module endpoint in order to include the module. [link]
sdk/ldaputil: added module to tune connection timeout duration 
for all LDAP plugins. [link]
secrets/pki: Decrease size and improve compatibility of OCSP responses by removing issuer certificate. [link]

BUG FIXES:

auth/ldap: Add max_page_size configurable to LDAP configuration [link]
command/server: Fix incorrect paths in generated config for module flag on Windows [link]
core (enterprise): Fix intermittent issue with token entries sometimes not being found when using a newly created token in a request to a secondary, even when SSCT module forwarding is set. When this occurred, this would result in the following error to the client: module.
core (enterprise): Fix read on perf standbys failing with 412 after leadership change, unseal, restores or restarts when no writes occur
core/ssct (enterprise): Fixed race condition where a newly promoted DR may revert module 
resulting in 412 errors.
core: Fix regression breaking non-raft clusters whose nodes share the same cluster_addr/api_addr. [link]
helper/random: Fix race condition in string generator helper [link]
kmip (enterprise): Fix a problem decrypting with keys that have no Process Start Date attribute.
openapi: Fix many incorrect details in generated API spec, by using better techniques to parse path regexps [link]
pki: Fix automatically turning off CRL signing on upgrade to Vault >= 1.12, if CA Key Usage disallows it [link]
replication (enterprise): Fix a caching issue when replicating filtered data to
a performance secondary. This resulted in the data being set to nil in the cache
and a ""invalid value"" error being returned from the API.
replication (enterprise): Fix replication status for Primary clusters showing its primary cluster's information (in case of DR) in secondaries field when known_secondaries field is nil
secrets/pki: Fix patching of leaf_not_after_behavior on issuers. [link]
secrets/transform (enterprise): Address SQL connection leak when cleaning expired tokens
ui: Fix OIDC provider logo showing when domain doesn't match [link]
ui: Fix bad link to namespace when namespace name includes module [link]
ui: fixes browser console formatting for help command output [link]
ui: remove use of htmlSafe except when first sanitized [link]
"
3,"1.11.10
April 26, 2023
CHANGES:

core: Bump Go version to 1.19.8.

IMPROVEMENTS:

cli/namespace: Add detailed flag to output additional namespace information 
such as namespace IDs and custom metadata. [link]
core/activity: add an endpoint to write test activity log data, guarded by a build flag [link]
core: Add a module sub-field to the module and module details provided by the
module endpoint in order to include the module. [link]
sdk/ldaputil: added module to tune connection timeout duration 
for all LDAP plugins. [link]

BUG FIXES:

auth/ldap: Add max_page_size configurable to LDAP configuration [link]
core (enterprise): Fix intermittent issue with token entries sometimes not being found when using a newly created token in a request to a secondary, even when SSCT module forwarding is set. When this occurred, this would result in the following error to the client: module.
core (enterprise): Fix read on perf standbys failing with 412 after leadership change, unseal, restores or restarts when no writes occur
core/ssct (enterprise): Fixed race condition where a newly promoted DR may revert module 
resulting in 412 errors.
core: Fix regression breaking non-raft clusters whose nodes share the same cluster_addr/api_addr. [link]
helper/random: Fix race condition in string generator helper [link]
openapi: Fix many incorrect details in generated API spec, by using better techniques to parse path regexps [link]
replication (enterprise): Fix replication status for Primary clusters showing its primary cluster's information (in case of DR) in secondaries field when known_secondaries field is nil
secrets/pki: Fix patching of leaf_not_after_behavior on issuers. [link]
secrets/transform (enterprise): Address SQL connection leak when cleaning expired tokens
ui: Fix OIDC provider logo showing when domain doesn't match [link]
ui: Fix bad link to namespace when namespace name includes module [link]
ui: fixes browser console formatting for help command output [link]
ui: remove use of htmlSafe except when first sanitized [link]
"
4,"1.13.1
March 29, 2023
IMPROVEMENTS:

auth/github: Allow for an optional Github auth token environment variable to make authenticated requests when fetching org id
website/docs: Add docs for module environment variable when writing Github config [link]
core: Allow overriding gRPC connect timeout via VAULT_GRPC_MIN_CONNECT_TIMEOUT. This is an env var rather than a config setting because we don't expect this to ever be needed.  It's being added as a last-ditch
option in case all else fails for some replication issues we may not have fully reproduced. [link]
core: validate name identifiers in mssql physical storage backend prior use [link]
database/elasticsearch: Update error messages resulting from Elasticsearch API errors [link]
events: Suppress log warnings triggered when events are sent but the events system is not enabled. [link]

BUG FIXES:

agent: Fix panic when SIGHUP is issued to Agent while it has a non-TLS listener. [link]
core (enterprise): Attempt to reconnect to a PKCS#11 HSM if we retrieve a CKR_FUNCTION_FAILED error.
core: Fixed issue with remounting mounts that have a non-trailing space in the 'to' or 'from' paths. [link]
kmip (enterprise): Do not require attribute Cryptographic Usage Mask when registering Secret Data managed objects.
kmip (enterprise): Fix a problem forwarding some requests to the active node.
openapi: Fix logic for labeling unauthenticated/sudo paths. [link]
secrets/ldap: Invalidates WAL entry for static role if module has changed. [link]
secrets/pki: Fix PKI revocation request forwarding from standby nodes due to an error wrapping bug [link]
secrets/transform (enterprise): Fix persistence problem with rotated tokenization key versions
ui: Fixes crypto.randomUUID error in unsecure contexts from third party ember-data library [link]
ui: fixes SSH engine config deletion [link]
ui: fixes issue navigating back a level using the breadcrumb from secret metadata view [link]
ui: fixes oidc tabs in auth form submitting with the root's default_role value after a namespace has been inputted [link]
ui: pass encodeBase64 param to HMAC transit-key-actions. [link]
ui: use URLSearchParams interface to capture namespace param from SSOs (ex. ADFS) with decoded state param in callback url [link]
"
5,"1.12.5
March 29, 2023
IMPROVEMENTS:

auth/github: Allow for an optional Github auth token environment variable to make authenticated requests when fetching org id
website/docs: Add docs for module environment variable when writing Github config [link]
core: Allow overriding gRPC connect timeout via VAULT_GRPC_MIN_CONNECT_TIMEOUT. This is an env var rather than a config setting because we don't expect this to ever be needed.  It's being added as a last-ditch
option in case all else fails for some replication issues we may not have fully reproduced. [link]
core: validate name identifiers in mssql physical storage backend prior use [link]

BUG FIXES:

cli: Fix vault read handling to return raw data as secret.Data when there is no top-level data object from api response. [link]
core (enterprise): Attempt to reconnect to a PKCS#11 HSM if we retrieve a CKR_FUNCTION_FAILED error.
core: Fixed issue with remounting mounts that have a non-trailing space in the 'to' or 'from' paths. [link]
kmip (enterprise): Do not require attribute Cryptographic Usage Mask when registering Secret Data managed objects.
kmip (enterprise): Fix a problem forwarding some requests to the active node.
openapi: Fix logic for labeling unauthenticated/sudo paths. [link]
secrets/ldap: Invalidates WAL entry for static role if module has changed. [link]
secrets/transform (enterprise): Fix persistence problem with rotated tokenization key versions
ui: fixes issue navigating back a level using the breadcrumb from secret metadata view [link]
ui: pass encodeBase64 param to HMAC transit-key-actions. [link]
ui: use URLSearchParams interface to capture namespace param from SSOs (ex. ADFS) with decoded state param in callback url [link]
"
6,"1.11.9
March 29, 2023
IMPROVEMENTS:

auth/github: Allow for an optional Github auth token environment variable to make authenticated requests when fetching org id
website/docs: Add docs for module environment variable when writing Github config [link]
core: Allow overriding gRPC connect timeout via VAULT_GRPC_MIN_CONNECT_TIMEOUT. This is an env var rather than a config setting because we don't expect this to ever be needed.  It's being added as a last-ditch
option in case all else fails for some replication issues we may not have fully reproduced. [link]
core: validate name identifiers in mssql physical storage backend prior use [link]

BUG FIXES:

auth/kubernetes: Ensure a consistent TLS configuration for all k8s API requests [link] [link]
cli: Fix vault read handling to return raw data as secret.Data when there is no top-level data object from api response. [link]
core (enterprise): Attempt to reconnect to a PKCS#11 HSM if we retrieve a CKR_FUNCTION_FAILED error.
core: Fixed issue with remounting mounts that have a non-trailing space in the 'to' or 'from' paths. [link]
openapi: Fix logic for labeling unauthenticated/sudo paths. [link]
secrets/transform (enterprise): Fix persistence problem with rotated tokenization key versions
ui: fixes issue navigating back a level using the breadcrumb from secret metadata view [link]
ui: pass encodeBase64 param to HMAC transit-key-actions. [link]
ui: use URLSearchParams interface to capture namespace param from SSOs (ex. ADFS) with decoded state param in callback url [link]
"
7,"1.13.0
March 01, 2023
SECURITY:

secrets/ssh: removal of the deprecated dynamic keys mode. When any remaining dynamic key leases expire, an error stating module will be thrown by the lease manager. [link]

CHANGES:

auth/alicloud: require the module field on login [link]
auth/approle: Add maximum length of 4096 for approle role_names, as this value results in HMAC calculation [link]
auth: Returns invalid credentials for ldap, userpass and approle when wrong credentials are provided for existent users.
This will only be used internally for implementing user lockout. [link]
core: Bump Go version to 1.20.1.
core: Vault version has been moved out of sdk and into main vault module.
Plugins using sdk/useragent.String must instead use sdk/useragent.PluginString. [link]
logging: Removed legacy environment variable for log format ('LOGXI_FORMAT'), should use 'VAULT_LOG_FORMAT' instead [link]
plugins: Mounts can no longer be pinned to a specific builtin version. Mounts previously pinned to a specific builtin version will now automatically upgrade to the latest builtin version, and may now be overridden if an unversioned plugin of the same name and type is registered. Mounts using plugin versions without module in their metadata remain unaffected. [link]
plugins: module endpoint now returns an additional module field in the response data. [link]
plugins: module and module endpoints may now return an additional module field in the response data if set. [link]
plugins: module for module, module, module, and module paths now return additional module, module and module fields in the response data for each mount. [link]
sdk: Remove version package, make useragent.String versionless. [link]
secrets/aws: do not create leases for non-renewable/non-revocable STS credentials to reduce storage calls [link]
secrets/gcpkms: Updated plugin from v0.13.0 to v0.14.0 [link]
sys/internal/inspect: Turns of this endpoint by default. A SIGHUP can now be used to reload the configs and turns this endpoint on.
ui: Upgrade Ember to version 4.4.0 [link]

FEATURES:

Azure Auth Managed Identities: Allow any Azure resource that supports managed identities to authenticate with Vault [link]
Azure Auth Rotate Root: Add support for rotate root in Azure Auth engine [link]
Event System (Alpha): Vault has a new opt-in experimental event system. Not yet suitable for production use. Events are currently only generated on writes to the KV secrets engine, but external plugins can also be updated to start generating events. [link]
GCP Secrets Impersonated Account Support: Add support for GCP service account impersonation, allowing callers to generate a GCP access token without requiring Vault to store or retrieve a GCP service account key for each role. [link]
Kubernetes Secrets Engine UI: Kubernetes is now available in the UI as a supported secrets engine. [link]
New PKI UI: Add beta support for new and improved PKI UI [link]
PKI Cross-Cluster Revocations: Revocation information can now be
synchronized across primary and performance replica clusters offering
a unified CRL/OCSP view of revocations across cluster boundaries. [link]
Server UDS Listener: Adding listener to Vault server to serve http request via unix domain socket [link]
Transit managed keys: The transit secrets engine now supports configuring and using managed keys
User Lockout: Adds support to configure the user-lockout behaviour for failed logins to prevent 
brute force attacks for userpass, approle and ldap auth methods. [link]
VMSS Flex Authentication: Adds support for Virtual Machine Scale Set Flex Authentication [link]
Namespaces (enterprise): Added the ability to allow access to secrets and more to be shared across namespaces that do not share a namespace hierarchy. Using the new module API, policies can be configured to apply outside of namespace hierarchy, allowing this kind of cross-namespace sharing.
OpenAPI-based Go & .NET Client Libraries (Beta): We have now made available two new OpenAPI-based Go & .NET Client libraries (beta). You can use them to perform various secret management operations easily from your applications. 

IMPROVEMENTS:

Redis ElastiCache DB Engine: Renamed configuration parameters for disambiguation; old parameters still supported for compatibility. [link]
Bump github.com/hashicorp/go-plugin version from 1.4.5 to 1.4.8 [link]
Reduced binary size [link]
agent/config: Allow config directories to be specified with -config, and allow multiple -configs to be supplied. [link]
agent: Add note in logs when starting Vault Agent indicating if the version differs to the Vault Server. [link]
agent: Added module auto-auth configuration to allow using a pre-existing token for Vault Agent. [link]
agent: Agent listeners can now be to be the module role, serving only metrics, as part of the listener's new top level module option. [link]
agent: Configured Vault Agent listeners now listen without the need for caching to be configured. [link]
agent: allows some parts of config to be reloaded without requiring a restart. [link]
agent: fix incorrectly used loop variables in parallel tests and when finalizing seals [link]
api: Remove dependency on sdk module. [link]
api: Support VAULT_DISABLE_REDIRECTS environment variable (and --disable-redirects flag) to disable default client behavior and prevent the client following any redirection responses. [link]
audit: Add module option, providing a countermeasure for a common source of oversized audit log entries [link]
audit: Include stack trace when audit logging recovers from a panic. [link]
auth/alicloud: upgrades dependencies [link]
auth/azure: Adds support for authentication with Managed Service Identity (MSI) from a 
Virtual Machine Scale Set (VMSS) in flexible orchestration mode. [link]
auth/azure: upgrades dependencies [link]
auth/cert: Add configurable support for validating client certs with OCSP. [link]
auth/cert: Support listing provisioned CRLs within the mount. [link]
auth/cf: Remove incorrect usage of CreateOperation from path_config [link]
auth/gcp: Upgrades dependencies [link]
auth/oidc: Adds module parameter to CLI login command to help in non-interactive contexts [link]
auth/oidc: Adds ability to set Google Workspace domain for groups search [link]
auth/token (enterprise): Allow batch token creation in perfStandby nodes
auth: Allow naming login MFA methods and using those names instead of IDs in satisfying MFA requirement for requests.
Make passcode arguments consistent across login MFA method types. [link]
auth: Provide an IP address of the requests from Vault to a Duo challenge after successful authentication. [link]
autopilot: Update version to v.0.2.0 to add better support for respecting min quorum
cli/kv: improve kv CLI to remove data or custom metadata using kv patch [link]
cli/pki: Add List-Intermediates functionality to pki client. [link]
cli/pki: Add health-check subcommand to evaluate the health of a PKI instance. [link]
cli/pki: Add pki issue command, which creates a CSR, has a vault mount sign it, then reimports it. [link]
cli/pki: Added ""Reissue"" command which allows extracting fields from an existing certificate to create a new certificate. [link]
cli/pki: Change the pki health-check --list default config output to JSON so it's a usable configuration file [link]
cli: Add support for creating requests to existing non-KVv2 PATCH-capable endpoints. [link]
cli: Add transit import key helper commands for BYOK to Transit/Transform. [link]
cli: Support the -format=raw option, to read non-JSON Vault endpoints and original response bodies. [link]
cli: updated module prompts to describe recovery keys when module [link]
client/pki: Add a new command verify-sign which checks the relationship between two certificates. [link]
command/server: Environment variable keys are now logged at startup. [link]
core/fips: use upstream toolchain for FIPS 140-2 compliance again; this will appear as X=boringcrypto on the Go version in Vault server logs.
core/identity: Add machine-readable output to body of response upon alias clash during entity merge [link]
core/server: Added an environment variable to write goroutine stacktraces to a 
temporary file for SIGUSR2 signals. [link]
core: Add RPCs to read and update userFailedLoginInfo map
core: Add experiments system and module experiment. [link]
core: Add read support to module and module endpoints [link]
core: Add user lockout field to config and configuring this for auth mount using auth tune to prevent brute forcing in auth methods [link]
core: Add vault.core.locked_users telemetry metric to emit information about total number of locked users. [link]
core: Added sys/locked-users endpoint to list locked users. Changed api endpoint from
sys/lockedusers/[mount_accessor]/unlock/[alias_identifier] to sys/locked-users/[mount_accessor]/unlock/[alias_identifier]. [link]
core: Added sys/lockedusers/[mount_accessor]/unlock/[alias_identifier] endpoint to unlock an user
with given mount_accessor and alias_identifier if locked [link]
core: Added warning to /sys/seal-status and vault status command if potentially dangerous behaviour overrides are being used. [link]
core: Implemented background thread to update locked user entries every 15 minutes to prevent brute forcing in auth methods. [link]
core: License location is no longer cache exempt, meaning sys/health will not contribute as greatly to storage load when using consul as a storage backend. [link]
core: Update protoc from 3.21.5 to 3.21.7 [link]
core: add module config to optionally detect core state deadlocks [link]
core: added changes for user lockout workflow. [link]
core: parallelize backend initialization to improve startup time for large numbers of mounts. [link]
database/postgres: Support multiline strings for revocation statements. [link]
database/redis-elasticache: changed config argument names for disambiguation [link]
database/snowflake: Allow parallel requests to Snowflake [link]
hcp/connectivity: Add foundational OSS support for opt-in secure communication between self-managed Vault nodes and link [link]
hcp/connectivity: Include HCP organization, project, and resource ID in server startup logs [link]
hcp/connectivity: Only update SCADA session metadata if status changes [link]
hcp/status: Add cluster-level status information [link]
hcp/status: Expand node-level status information [link]
logging: Vault Agent supports logging to a specified file path via environment variable, CLI or config [link]
logging: Vault agent and server commands support log file and log rotation. [link]
migration: allow parallelization of key migration for module in order to speed up a migration. [link]
namespaces (enterprise): Add new API, module, to allow group policies to be configurable
to apply to a group in module namespace. The default, module, is the current behaviour.
openapi: Add default values to thing_mount_path parameters [link]
openapi: Add logic to generate openapi response structures [link]
openapi: Add openapi response definitions to approle/path_login.go & approle/path_tidy_user_id.go [link]
openapi: Add openapi response definitions to approle/path_role.go [link]
openapi: Change gen_openapi.sh to generate schema with generic mount paths [link]
openapi: Mark request body objects as required [link]
openapi: add openapi response defintions to /sys/audit endpoints [link]
openapi: generic_mount_paths: Move implementation fully into server, rather than partially in plugin framework; recognize all 4 singleton mounts (auth/token, cubbyhole, identity, system) rather than just 2; change parameter from module to module [link]
plugins: Add plugin version information to key plugin lifecycle log lines. [link]
plugins: Allow selecting builtin plugins by their reported semantic version of the form module or module. [link]
plugins: Let Vault unseal and mount deprecated builtin plugins in a
deactivated state if this is not the first unseal after an upgrade. [link]
plugins: Mark app-id auth method Removed and remove the plugin code. [link]
plugins: Mark logical database plugins Removed and remove the plugin code. [link]
sdk/ldap: Added support for paging when searching for groups using group filters [link]
sdk: Add response schema validation method framework/FieldData.ValidateStrict and two test helpers (ValidateResponse, ValidateResponseData) [link]
sdk: Adding FindResponseSchema test helper to assist with response schema validation in tests [link]
secrets/aws: Update dependencies [link] [link]
secrets/azure: Adds ability to persist an application for the lifetime of a role. [link]
secrets/azure: upgrades dependencies [link]
secrets/db/mysql: Add module and module parameters [link]
secrets/gcp: Upgrades dependencies [link]
secrets/kubernetes: Add /check endpoint to determine if environment variables are set [link] [link]
secrets/kubernetes: add /check endpoint to determine if environment variables are set [link]
secrets/kv: Emit events on write if events system enabled [link]
secrets/kv: make upgrade synchronous when no keys to upgrade [link]
secrets/kv: new KVv2 mounts and KVv1 mounts without any keys will upgrade synchronously, allowing for instant use [link]
secrets/pki: Add a new API that returns the serial numbers of revoked certificates on the local cluster [link]
secrets/pki: Add support to specify signature bits when generating CSRs through intermediate/generate apis [link]
secrets/pki: Added a new API that allows external actors to craft a CRL through JSON parameters [link]
secrets/pki: Allow UserID Field (https://www.rfc-editor.org/rfc/rfc1274#section-9.3.1) to be set on Certificates when
allowed by role [link]
secrets/pki: Allow issuer creation, import to change default issuer via module. [link]
secrets/pki: Allow templating performance replication cluster- and issuer-specific AIA URLs. [link]
secrets/pki: Allow tidying of expired issuer certificates. [link]
secrets/pki: Allow tidying of the legacy ca_bundle, improving startup on post-migrated, seal-wrapped PKI mounts. [link]
secrets/pki: Respond with written data to module, module, and module. [link]
secrets/pki: Return issuer_id and issuer_name on /issuer/:issuer_ref/json endpoint. [link]
secrets/pki: Return new fields revocation_time_rfc3339 and issuer_id to existing certificate serial lookup api if it is revoked [link]
secrets/ssh: Allow removing SSH host keys from the dynamic keys feature. [link]
secrets/ssh: Evaluate ssh validprincipals user template before splitting [link]
secrets/transit: Add an optional reference field to batch operation items
which is repeated on batch responses to help more easily correlate inputs with outputs. [link]
secrets/transit: Add associated_data parameter for additional authenticated data in AEAD ciphers [link]
secrets/transit: Add support for PKCSv1_5_NoOID RSA signatures [link]
secrets/transit: Allow configuring whether upsert of keys is allowed. [link]
storage/raft: Add module config option. [link]
storage/raft: add additional raft metrics relating to applied index and heartbeating; also ensure OSS standbys emit periodic metrics. [link]
sys/internal/inspect: Creates an endpoint to look to inspect internal subsystems. [link]
sys/internal/inspect: Creates an endpoint to look to inspect internal subsystems.
ui: Add algorithm-signer as a SSH Secrets Engine UI field [link]
ui: Add inline policy creation when creating an identity entity or group [link]
ui: Added JWT authentication warning message about blocked pop-up windows and web browser settings. [link]
ui: Enable typescript for future development [link]
ui: Prepends ""passcode="" if not provided in user input for duo totp mfa method authentication [link]
ui: Update language on database role to ""Connection name"" [link] [link]
ui: adds allowed_response_headers as param for secret engine mount config [link]
ui: consolidate all link
ui: mfa: use proper request id generation [link]
ui: remove wizard [link]
ui: update DocLink component to use new host url: developer.hashicorp.com [link]
ui: update TTL picker for consistency [link]
ui: use the combined activity log (partial + historic) API for client count dashboard and remove use of monthly endpoint [link]
vault/diagnose: Upgrade module, module, module to v1.11.2 [link]

DEPRECATIONS:

secrets/ad: Marks the Active Directory (AD) secrets engine as deprecated. [link]

BUG FIXES:

api: Remove timeout logic from ReadRaw functions and add ReadRawWithContext [link]
auth/alicloud: fix regression in vault login command that caused login to fail [link]
auth/approle: Add nil check for the secret ID entry when deleting via secret id accessor preventing cross role secret id deletion [link]
auth/approle: Fix module validation when using /32 blocks for role and secret ID [link]
auth/cert: Address a race condition accessing the loaded crls without a lock [link]
auth/kubernetes: Ensure a consistent TLS configuration for all k8s API requests [link] [link]
auth/kubernetes: fixes and dep updates for the auth-kubernetes plugin (see plugin changelog for details) [link]
auth/okta: fix a panic for AuthRenew in Okta [link]
auth: Deduplicate policies prior to ACL generation [link]
cli/kv: skip formatting of nil secrets for patch and put with field parameter set [link]
cli/pki: Decode integer values properly in health-check configuration file [link]
cli/pki: Fix path for role health-check warning messages [link]
cli/pki: Properly report permission issues within health-check mount tune checks [link]
cli/transit: Fix import, import-version command invocation [link]
cli: Fix issue preventing kv commands from executing properly when the mount path provided by module flag and secret key path are the same. [link]
cli: Fix vault read handling to return raw data as secret.Data when there is no top-level data object from api response. [link]
cli: Remove empty table heading for module output. [link]
command/namespace: Fix vault cli namespace patch examples in help text. [link]
core (enterprise): Fix missing quotation mark in error message
core (enterprise): Fix panic that could occur with SSCT alongside invoking external plugins for revocation.
core (enterprise): Fix panic when using invalid accessor for control-group request
core (enterprise): Fix perf standby WAL streaming silently failures when replication setup happens at a bad time.
core (enterprise): Supported storage check in module command will no longer prevent startup. Instead, a warning will be logged if configured to use storage backend other than module or module.
core/activity: add namespace breakdown for new clients when date range spans multiple months, including the current month. [link]
core/activity: de-duplicate namespaces when historical and current month data are mixed [link]
core/activity: fix the end_date returned from the activity log endpoint when partial counts are computed [link]
core/activity: include mount counts when de-duplicating current and historical month data [link]
core/activity: report mount paths (rather than mount accessors) in current month activity log counts and include deleted mount paths in precomputed queries. [link]
core/activity: return partial month counts when querying a historical date range and no historical data exists. [link]
core/auth: Return a 403 instead of a 500 for wrapping requests when token is not provided [link]
core/managed-keys (enterprise): Limit verification checks to mounts in a key's namespace
core/managed-keys (enterprise): Return better error messages when encountering key creation failures
core/managed-keys (enterprise): Switch to using hash length as PSS Salt length within the test/sign api for better PKCS#11 compatibility
core/quotas (enterprise): Fix a lock contention issue that could occur and cause Vault to become unresponsive when creating, changing, or deleting lease count quotas.
core/quotas (enterprise): Fix a potential deadlock that could occur when using lease count quotas.
core/quotas: Fix issue with improper application of default rate limit quota exempt paths [link]
core/seal: Fix regression handling of the key_id parameter in seal configuration HCL. [link]
core: Fix panic caused in Vault Agent when rendering certificate templates [link]
core: Fix potential deadlock if barrier ciphertext is less than 4 bytes. [link]
core: Fix spurious module for all HelpOperations on sudo-protected paths [link]
core: Fix vault operator init command to show the right curl string with -output-curl-string and right policy hcl with -output-policy [link]
core: Fixes spurious warnings being emitted relating to ""unknown or unsupported fields"" for JSON config [link]
core: Linux packages now have vendor label and set the default label to HashiCorp. 
This fix is implemented for any future releases, but will not be updated for historical releases.
core: Prevent panics in module, module, and module endpoints if provided module is null [link]
core: Refactor lock grabbing code to simplify stateLock deadlock investigations [link]
core: fix GPG encryption to support subkeys. [link]
core: fix a start up race condition where performance standbys could go into a 
mount loop if default policies are not yet synced from the active node. [link]
core: fix bug where context cancellations weren't forwarded to active node from performance standbys.
core: fix race when using SystemView.ReplicationState outside of a request context [link]
core: prevent memory leak when using control group factors in a policy [link]
core: prevent panic during mfa after enforcement's namespace is deleted [link]
core: prevent panic in login mfa enforcement delete after enforcement's namespace is deleted [link]
core: trying to unseal with the wrong key now returns HTTP 400 [link]
credential/cert: adds error message if no tls connection is found during the AliasLookahead operation [link]
database/mongodb: Fix writeConcern set to be applied to any query made on the database [link]
expiration: Prevent panics on perf standbys when an irrevocable lease gets deleted. [link]
kmip (enterprise): Fix a problem with some multi-part MAC Verify operations.
kmip (enterprise): Only require data to be full blocks on encrypt/decrypt operations using CBC and ECB block cipher modes.
license (enterprise): Fix bug where license would update even if the license didn't change.
licensing (enterprise): update autoloaded license cache after reload
login: Store token in tokenhelper for interactive login MFA [link]
openapi: Fix many incorrect details in generated API spec, by using better techniques to parse path regexps [link]
openapi: fix gen_openapi.sh script to correctly load vault plugins [link]
plugins/kv: KV v2 returns 404 instead of 500 for request paths that incorrectly include a trailing slash. [link]
plugins: Allow running external plugins which override deprecated builtins. [link]
plugins: Corrected the path to check permissions on when the registered plugin name does not match the plugin binary's filename. [link]
plugins: Listing all plugins while audit logging is enabled will no longer result in an internal server error. [link]
plugins: Only report deprecation status for builtin plugins. [link]
plugins: Skip loading but still mount data associated with missing plugins on unseal. [link]
plugins: Vault upgrades will no longer fail if a mount has been created using an explicit builtin plugin version. [link]
replication (enterprise): Fix bug where reloading external plugin on a secondary would 
break replication.
sdk: Don't panic if system view or storage methods called during plugin setup. [link]
secret/pki: fix bug with initial legacy bundle migration (from < 1.11 into 1.11+) and missing issuers from ca_chain [link]
secrets/ad: Fix bug where updates to config would fail if password isn't provided [link]
secrets/gcp: fix issue where IAM bindings were not preserved during policy update [link]
secrets/mongodb-atlas: Fix a bug that did not allow WAL rollback to handle partial failures when creating API keys [link]
secrets/pki: Address nil panic when an empty POST request is sent to the OCSP handler [link]
secrets/pki: Allow patching issuer to set an empty issuer name. [link]
secrets/pki: Do not read revoked certificates from backend when CRL is disabled [link]
secrets/pki: Fix upgrade of missing expiry, delta_rebuild_interval by setting them to the default. [link]
secrets/pki: Fixes duplicate otherName in certificates created by the sign-verbatim endpoint. [link]
secrets/pki: OCSP GET request parameter was not being URL unescaped before processing. [link]
secrets/pki: Respond to tidy-status, tidy-cancel on PR Secondary clusters. [link]
secrets/pki: Revert fix for PR link [link]
secrets/pki: consistently use UTC for CA's notAfter exceeded error message [link]
secrets/pki: fix race between tidy's cert counting and tidy status reporting. [link]
secrets/transit: Do not warn about unrecognized parameter 'batch_input' [link]
secrets/transit: Honor module on decryption failures. [link]
server/config:  Use file.Stat when checking file permissions when VAULT_ENABLE_FILE_PERMISSIONS_CHECK is enabled [link]
storage/raft (enterprise): An already joined node can rejoin by wiping storage
and re-issueing a join request, but in doing so could transiently become a
non-voter.  In some scenarios this resulted in loss of quorum. [link]
storage/raft: Don't panic on unknown raft ops [link]
storage/raft: Fix race with follower heartbeat tracker during teardown. [link]
ui/keymgmt: Sets the defaultValue for type when creating a key. [link]
ui: Fix bug where logging in via OIDC fails if browser is in fullscreen mode [link]
ui: Fixes issue with not being able to download raft snapshot via service worker [link]
ui: Fixes oidc/jwt login issue with alternate mount path and jwt login via mount path tab [link]
ui: Remove module and add module and module to UI token_type for auth mount and tuning. [link]
ui: Remove default value of 30 to TtlPicker2 if no value is passed in. [link]
ui: allow selection of ""default"" for ssh algorithm_signer in web interface [link]
ui: cleanup unsaved auth method ember data record when navigating away from mount backend form [link]
ui: fix entity policies list link to policy show page [link]
ui: fixes query parameters not passed in api explorer test requests [link]
ui: fixes reliance on secure context (https) by removing methods using the Crypto interface [link]
ui: show Get credentials button for static roles detail page when a user has the proper permissions. [link]
"
8,"1.12.4
March 01, 2023
CHANGES:

core: Bump Go version to 1.19.6.

IMPROVEMENTS:

secrets/database: Adds error message requiring password on root crednetial rotation. [link]
ui: remove wizard [link]

BUG FIXES:

auth/approle: Add nil check for the secret ID entry when deleting via secret id accessor preventing cross role secret id deletion [link]
core (enterprise): Fix panic when using invalid accessor for control-group request
core (enterprise): Fix perf standby WAL streaming silently failures when replication setup happens at a bad time.
core: Prevent panics in module, module, and module endpoints if provided module is null [link]
license (enterprise): Fix bug where license would update even if the license didn't change.
replication (enterprise): Fix bug where reloading external plugin on a secondary would 
break replication.
secrets/ad: Fix bug where config couldn't be updated unless binddn/bindpass were included in the update. [link]
secrets/pki: Revert fix for PR link [link]
server/config:  Use file.Stat when checking file permissions when VAULT_ENABLE_FILE_PERMISSIONS_CHECK is enabled [link]
ui (enterprise): Fix cancel button from transform engine role creation page [link]
ui: Fix bug where logging in via OIDC fails if browser is in fullscreen mode [link]
ui: fixes reliance on secure context (https) by removing methods using the Crypto interface [link]
ui: show Get credentials button for static roles detail page when a user has the proper permissions. [link]
"
9,"1.11.8
March 01, 2023
CHANGES:

core: Bump Go version to 1.19.6.

IMPROVEMENTS:

secrets/database: Adds error message requiring password on root crednetial rotation. [link]

BUG FIXES:

auth/approle: Add nil check for the secret ID entry when deleting via secret id accessor preventing cross role secret id deletion [link]
core (enterprise): Fix panic when using invalid accessor for control-group request
core (enterprise): Fix perf standby WAL streaming silently failures when replication setup happens at a bad time.
core: Prevent panics in module, module, and module endpoints if provided module is null [link]
license (enterprise): Fix bug where license would update even if the license didn't change.
replication (enterprise): Fix bug where reloading external plugin on a secondary would 
break replication.
secrets/ad: Fix bug where config couldn't be updated unless binddn/bindpass were included in the update. [link]
ui (enterprise): Fix cancel button from transform engine role creation page [link]
ui: Fix bug where logging in via OIDC fails if browser is in fullscreen mode [link]
ui: show Get credentials button for static roles detail page when a user has the proper permissions. [link]
"
10,"1.10.11
March 01, 2023
CHANGES:

core: Bump Go version to 1.19.6.

IMPROVEMENTS:

secrets/database: Adds error message requiring password on root crednetial rotation. [link]

BUG FIXES:

auth/approle: Add nil check for the secret ID entry when deleting via secret id accessor preventing cross role secret id deletion [link]
core (enterprise): Fix panic when using invalid accessor for control-group request
core: Prevent panics in module, module, and module endpoints if provided module is null [link]
replication (enterprise): Fix bug where reloading external plugin on a secondary would 
break replication.
secrets/ad: Fix bug where config couldn't be updated unless binddn/bindpass were included in the update. [link]
ui (enterprise): Fix cancel button from transform engine role creation page [link]
ui: Fix bug where logging in via OIDC fails if browser is in fullscreen mode [link]
"
11,"February 16, 2023
SECURITY:

secrets/ssh: removal of the deprecated dynamic keys mode. When any remaining dynamic key leases expire, an error stating module will be thrown by the lease manager. [link]

CHANGES:

auth/alicloud: require the module field on login [link]
auth/approle: Add maximum length of 4096 for approle role_names, as this value results in HMAC calculation [link]
auth: Returns invalid credentials for ldap, userpass and approle when wrong credentials are provided for existent users. This will only be used internally for implementing user lockout. [link]
core: Bump Go version to 1.20.
core: Vault version has been moved out of sdk and into main vault module. Plugins using sdk/useragent.String must instead use sdk/useragent.PluginString. [link]
logging: Removed legacy environment variable for log format ('LOGXI_FORMAT'), should use 'VAULT_LOG_FORMAT' instead [link]
plugins: Mounts can no longer be pinned to a specific builtin version. Mounts previously pinned to a specific builtin version will now automatically upgrade to the latest builtin version, and may now be overridden if an unversioned plugin of the same name and type is registered. Mounts using plugin versions without module in their metadata remain unaffected. [link]
plugins: module endpoint now returns an additional module field in the response data. [link]
plugins: module and module endpoints may now return an additional module field in the response data if set. [link]
plugins: module for module, module, module, and module paths now return additional module, module and module fields in the response data for each mount. [link]
sdk: Remove version package, make useragent.String versionless. [link]
secrets/aws: do not create leases for non-renewable/non-revocable STS credentials to reduce storage calls [link]
secrets/gcpkms: Updated plugin from v0.13.0 to v0.14.0 [link]
sys/internal/inspect: Turns of this endpoint by default. A SIGHUP can now be used to reload the configs and turns this endpoint on.
ui: Upgrade Ember to version 4.4.0 [link]

FEATURES:

Azure Auth Managed Identities: Allow any Azure resource that supports managed identities to authenticate with Vault [link]
Azure Auth Rotate Root: Add support for rotate root in Azure Auth engine [link]
Kubernetes Secrets Engine UI: Kubernetes is now available in the UI as a supported secrets engine. [link]
New PKI UI: Add beta support for new and improved PKI UI [link]
Server UDS Listener: Adding listener to Vault server to serve http request via unix domain socket [link]
Transit managed keys: The transit secrets engine now supports configuring and using managed keys
VMSS Flex Authentication: Adds support for Virtual Machine Scale Set Flex Authentication [link]

IMPROVEMENTS:

Redis ElastiCache DB Engine: Renamed configuration parameters for disambiguation; old parameters still supported for compatibility. [link]
Bump github.com/hashicorp/go-plugin version from 1.4.5 to 1.4.8 [link]
Reduced binary size [link]
agent/config: Allow config directories to be specified with -config, and allow multiple -configs to be supplied. [link]
agent: Add note in logs when starting Vault Agent indicating if the version differs to the Vault Server. [link]
agent: Added module auto-auth configuration to allow using a pre-existing token for Vault Agent. [link]
agent: Agent listeners can now be to be the module role, serving only metrics, as part of the listener's new top level module option. [link]
agent: Configured Vault Agent listeners now listen without the need for caching to be configured. [link]
agent: allows some parts of config to be reloaded without requiring a restart. [link]
agent: fix incorrectly used loop variables in parallel tests and when finalizing seals [link]
api: Remove dependency on sdk module. [link]
api: Support VAULT_DISABLE_REDIRECTS environment variable (and --disable-redirects flag) to disable default client behavior and prevent the client following any redirection responses. [link]
audit: Add module option, providing a countermeasure for a common source of oversized audit log entries [link]
audit: Include stack trace when audit logging recovers from a panic. [link]
auth/alicloud: upgrades dependencies [link]
auth/azure: Adds support for authentication with Managed Service Identity (MSI) from a Virtual Machine Scale Set (VMSS) in flexible orchestration mode. [link]
auth/azure: upgrades dependencies [link]
auth/cert: Add configurable support for validating client certs with OCSP. [link]
auth/cert: Support listing provisioned CRLs within the mount. [link]
auth/cf: Remove incorrect usage of CreateOperation from path_config [link]
auth/gcp: Upgrades dependencies [link]
auth/oidc: Adds module parameter to CLI login command to help in non-interactive contexts [link]
auth/oidc: Adds ability to set Google Workspace domain for groups search [link]
auth/token (enterprise): Allow batch token creation in perfStandby nodes
auth: Allow naming login MFA methods and using those names instead of IDs in satisfying MFA requirement for requests. Make passcode arguments consistent across login MFA method types. [link]
auth: Provide an IP address of the requests from Vault to a Duo challenge after successful authentication. [link]
autopilot: Update version to v.0.2.0 to add better support for respecting min quorum [link]
autopilot: Update version to v.0.2.0 to add better support for respecting min quorum
cli/kv: improve kv CLI to remove data or custom metadata using kv patch [link]
cli/pki: Add List-Intermediates functionality to pki client. [link]
cli/pki: Add health-check subcommand to evaluate the health of a PKI instance. [link]
cli/pki: Add pki issue command, which creates a CSR, has a vault mount sign it, then reimports it. [link]
cli: Add support for creating requests to existing non-KVv2 PATCH-capable endpoints. [link]
cli: Add transit import key helper commands for BYOK to Transit/Transform. [link]
cli: Support the -format=raw option, to read non-JSON Vault endpoints and original response bodies. [link]
cli: updated module prompts to describe recovery keys when module [link]
client/pki: Add a new command verify-sign which checks the relationship between two certificates. [link]
command/server: Environment variable keys are now logged at startup. [link]
core/fips: use upstream toolchain for FIPS 140-2 compliance again; this will appear as X=boringcrypto on the Go version in Vault server logs.
core/identity: Add machine-readable output to body of response upon alias clash during entity merge [link]
core/server: Added an environment variable to write goroutine stacktraces to a temporary file for SIGUSR2 signals. [link]
core: Add RPCs to read and update userFailedLoginInfo map
core: Add experiments system and module experiment. [link]
core: Add read support to module and module endpoints [link]
core: Add user lockout field to config and configuring this for auth mount using auth tune to prevent brute forcing in auth methods [link]
core: Add vault.core.locked_users telemetry metric to emit information about total number of locked users. [link]
core: Added sys/locked-users endpoint to list locked users. Changed api endpoint from sys/lockedusers/[mount_accessor]/unlock/[alias_identifier] to sys/locked-users/[mount_accessor]/unlock/[alias_identifier]. [link]
core: Added sys/lockedusers/[mount_accessor]/unlock/[alias_identifier] endpoint to unlock an user with given mount_accessor and alias_identifier if locked [link]
core: Added warning to /sys/seal-status and vault status command if potentially dangerous behaviour overrides are being used. [link]
core: Implemented background thread to update locked user entries every 15 minutes to prevent brute forcing in auth methods. [link]
core: License location is no longer cache exempt, meaning sys/health will not contribute as greatly to storage load when using consul as a storage backend. [link]
core: Update protoc from 3.21.5 to 3.21.7 [link]
core: add module config to optionally detect core state deadlocks [link]
core: added changes for user lockout workflow. [link]
core: parallelize backend initialization to improve startup time for large numbers of mounts. [link]
database/postgres: Support multiline strings for revocation statements. [link]
database/redis-elasticache: changed config argument names for disambiguation [link]
database/snowflake: Allow parallel requests to Snowflake [link]
hcp/connectivity: Add foundational OSS support for opt-in secure communication between self-managed Vault nodes and link [link]
hcp/connectivity: Include HCP organization, project, and resource ID in server startup logs [link]
hcp/connectivity: Only update SCADA session metadata if status changes [link]
hcp/status: Add cluster-level status information [link]
hcp/status: Expand node-level status information [link]
logging: Vault Agent supports logging to a specified file path via environment variable, CLI or config [link]
logging: Vault agent and server commands support log file and log rotation. [link]
migration: allow parallelization of key migration for module in order to speed up a migration. [link]
namespaces (enterprise): Add new API, module, to allow group policies to be configurable to apply to a group in module namespace. The default, module, is the current behaviour.
openapi: Add default values to thing_mount_path parameters [link]
openapi: Add logic to generate openapi response structures [link]
openapi: Add openapi response definitions to approle/path_login.go & approle/path_tidy_user_id.go [link]
openapi: Add openapi response definitions to approle/path_role.go [link]
openapi: Change gen_openapi.sh to generate schema with generic mount paths [link]
openapi: Mark request body objects as required [link]
openapi: add openapi response defintions to /sys/audit endpoints [link]
openapi: generic_mount_paths: Move implementation fully into server, rather than partially in plugin framework; recognize all 4 singleton mounts (auth/token, cubbyhole, identity, system) rather than just 2; change parameter from module to module [link]
plugins: Add plugin version information to key plugin lifecycle log lines. [link]
plugins: Allow selecting builtin plugins by their reported semantic version of the form module or module. [link]
plugins: Let Vault unseal and mount deprecated builtin plugins in a deactivated state if this is not the first unseal after an upgrade. [link]
plugins: Mark app-id auth method Removed and remove the plugin code. [link]
plugins: Mark logical database plugins Removed and remove the plugin code. [link]
sdk/ldap: Added support for paging when searching for groups using group filters [link]
sdk: Add response schema validation method framework/FieldData.ValidateStrict and two test helpers (ValidateResponse, ValidateResponseData) [link]
sdk: Adding FindResponseSchema test helper to assist with response schema validation in tests [link]
secrets/aws: Update dependencies [link] [link]
secrets/azure: Adds ability to persist an application for the lifetime of a role. [link]
secrets/azure: upgrades dependencies [link]
secrets/db/mysql: Add module and module parameters [link]
secrets/gcp: Upgrades dependencies [link]
secrets/gcp: added support for impersonated accounts [link]
secrets/kubernetes: Add /check endpoint to determine if environment variables are set [link] [link]
secrets/kubernetes: add /check endpoint to determine if environment variables are set [link]
secrets/kv: Emit events on write if events system enabled [link]
secrets/kv: make upgrade synchronous when no keys to upgrade [link]
secrets/kv: new KVv2 mounts and KVv1 mounts without any keys will upgrade synchronously, allowing for instant use [link]
secrets/pki: Add a new API that returns the serial numbers of revoked certificates on the local cluster [link]
secrets/pki: Add support to specify signature bits when generating CSRs through intermediate/generate apis [link]
secrets/pki: Added a new API that allows external actors to craft a CRL through JSON parameters [link]
secrets/pki: Allow UserID Field (https://www.rfc-editor.org/rfc/rfc1274#section-9.3.1) to be set on Certificates when allowed by role [link]
secrets/pki: Allow issuer creation, import to change default issuer via module. [link]
secrets/pki: Allow templating performance replication cluster- and issuer-specific AIA URLs. [link]
secrets/pki: Allow tidying of expired issuer certificates. [link]
secrets/pki: Allow tidying of the legacy ca_bundle, improving startup on post-migrated, seal-wrapped PKI mounts. [link]
secrets/pki: Respond with written data to module, module, and module. [link]
secrets/pki: Return issuer_id and issuer_name on /issuer/:issuer_ref/json endpoint. [link]
secrets/pki: Return new fields revocation_time_rfc3339 and issuer_id to existing certificate serial lookup api if it is revoked [link]
secrets/ssh: Allow removing SSH host keys from the dynamic keys feature. [link]
secrets/ssh: Evaluate ssh validprincipals user template before splitting [link]
secrets/transit: Add an optional reference field to batch operation items which is repeated on batch responses to help more easily correlate inputs with outputs. [link]
secrets/transit: Add associated_data parameter for additional authenticated data in AEAD ciphers [link]
secrets/transit: Add support for PKCSv1_5_NoOID RSA signatures [link]
secrets/transit: Allow configuring whether upsert of keys is allowed. [link]
storage/raft: Add module config option. [link]
storage/raft: add additional raft metrics relating to applied index and heartbeating; also ensure OSS standbys emit periodic metrics. [link]
sys/internal/inspect: Creates an endpoint to look to inspect internal subsystems. [link]
sys/internal/inspect: Creates an endpoint to look to inspect internal subsystems.
ui: Add algorithm-signer as a SSH Secrets Engine UI field [link]
ui: Add inline policy creation when creating an identity entity or group [link]
ui: Added JWT authentication warning message about blocked pop-up windows and web browser settings. [link]
ui: Enable typescript for future development [link]
ui: Prepends ""passcode="" if not provided in user input for duo totp mfa method authentication [link]
ui: Update language on database role to ""Connection name"" [link] [link]
ui: consolidate all module tag usage [link]
ui: mfa: use proper request id generation [link]
ui: update DocLink component to use new host url: developer.hashicorp.com [link]
ui: update TTL picker for consistency [link]
ui: use the combined activity log (partial + historic) API for client count dashboard and remove use of monthly endpoint [link]
vault/diagnose: Upgrade module, module, module to v1.11.2 [link]

BUG FIXES:

api: Remove timeout logic from ReadRaw functions and add ReadRawWithContext [link]
auth/alicloud: fix regression in vault login command that caused login to fail [link]
auth/approle: Fix module validation when using /32 blocks for role and secret ID [link]
auth/cert: Address a race condition accessing the loaded crls without a lock [link]
auth/kubernetes: Ensure a consistent TLS configuration for all k8s API requests [link] [link]
auth/kubernetes: fixes and dep updates for the auth-kubernetes plugin (see plugin changelog for details) [link]
auth/okta: fix a panic for AuthRenew in Okta [link]
auth: Deduplicate policies prior to ACL generation [link]
cli/kv: skip formatting of nil secrets for patch and put with field parameter set [link]
cli: Fix issue preventing kv commands from executing properly when the mount path provided by module flag and secret key path are the same. [link]
cli: Fix vault read handling to return raw data as secret.Data when there is no top-level data object from api response. [link]
cli: Remove empty table heading for module output. [link]
command/namespace: Fix vault cli namespace patch examples in help text. [link]
core (enterprise): Fix missing quotation mark in error message
core (enterprise): Fix panic that could occur with SSCT alongside invoking external plugins for revocation.
core (enterprise): Supported storage check in module command will no longer prevent startup. Instead, a warning will be logged if configured to use storage backend other than module or module.
core/activity: add namespace breakdown for new clients when date range spans multiple months, including the current month. [link]
core/activity: de-duplicate namespaces when historical and current month data are mixed [link]
core/activity: fix the end_date returned from the activity log endpoint when partial counts are computed [link]
core/activity: include mount counts when de-duplicating current and historical month data [link]
core/activity: report mount paths (rather than mount accessors) in current month activity log counts and include deleted mount paths in precomputed queries. [link]
core/activity: return partial month counts when querying a historical date range and no historical data exists. [link]
core/auth: Return a 403 instead of a 500 for wrapping requests when token is not provided [link]
core/managed-keys (enterprise): Limit verification checks to mounts in a key's namespace
core/managed-keys (enterprise): Return better error messages when encountering key creation failures
core/managed-keys (enterprise): Switch to using hash length as PSS Salt length within the test/sign api for better PKCS#11 compatibility
core/quotas (enterprise): Fix a lock contention issue that could occur and cause Vault to become unresponsive when creating, changing, or deleting lease count quotas.
core/quotas (enterprise): Fix a potential deadlock that could occur when using lease count quotas.
core/quotas: Fix issue with improper application of default rate limit quota exempt paths [link]
core/seal: Fix regression handling of the key_id parameter in seal configuration HCL. [link]
core: Fix panic caused in Vault Agent when rendering certificate templates [link]
core: Fix potential deadlock if barrier ciphertext is less than 4 bytes. [link]
core: Fix spurious module for all HelpOperations on sudo-protected paths [link]
core: Fix vault operator init command to show the right curl string with -output-curl-string and right policy hcl with -output-policy [link]
core: Fixes spurious warnings being emitted relating to ""unknown or unsupported fields"" for JSON config [link]
core: Linux packages now have vendor label and set the default label to HashiCorp. This fix is implemented for any future releases, but will not be updated for historical releases.
core: Prevent panics in module, module, and module endpoints if provided module is null [link]
core: Refactor lock grabbing code to simplify stateLock deadlock investigations [link]
core: fix GPG encryption to support subkeys. [link]
core: fix a start up race condition where performance standbys could go into a mount loop if default policies are not yet synced from the active node. [link]
core: fix bug where context cancellations weren't forwarded to active node from performance standbys.
core: fix race when using SystemView.ReplicationState outside of a request context [link]
core: prevent memory leak when using control group factors in a policy [link]
core: prevent panic during mfa after enforcement's namespace is deleted [link]
core: prevent panic in login mfa enforcement delete after enforcement's namespace is deleted [link]
core: trying to unseal with the wrong key now returns HTTP 400 [link]
credential/cert: adds error message if no tls connection is found during the AliasLookahead operation [link]
database/mongodb: Fix writeConcern set to be applied to any query made on the database [link]
expiration: Prevent panics on perf standbys when an irrevocable lease gets deleted. [link]
licensing (enterprise): update autoloaded license cache after reload
login: Store token in tokenhelper for interactive login MFA [link]
openapi: Fix many incorrect details in generated API spec, by using better techniques to parse path regexps [link]
openapi: fix gen_openapi.sh script to correctly load vault plugins [link]
plugins/kv: KV v2 returns 404 instead of 500 for request paths that incorrectly include a trailing slash. [link]
plugins: Allow running external plugins which override deprecated builtins. [link]
plugins: Corrected the path to check permissions on when the registered plugin name does not match the plugin binary's filename. [link]
plugins: Listing all plugins while audit logging is enabled will no longer result in an internal server error. [link]
plugins: Only report deprecation status for builtin plugins. [link]
plugins: Skip loading but still mount data associated with missing plugins on unseal. [link]
plugins: Vault upgrades will no longer fail if a mount has been created using an explicit builtin plugin version. [link]
sdk: Don't panic if system view or storage methods called during plugin setup. [link]
secret/pki: fix bug with initial legacy bundle migration (from < 1.11 into 1.11+) and missing issuers from ca_chain [link]
secrets/ad: Fix bug where updates to config would fail if password isn't provided [link]
secrets/gcp: fix issue where IAM bindings were not preserved during policy update [link]
secrets/mongodb-atlas: Fix a bug that did not allow WAL rollback to handle partial failures when creating API keys [link]
secrets/pki: Address nil panic when an empty POST request is sent to the OCSP handler [link]
secrets/pki: Allow patching issuer to set an empty issuer name. [link]
secrets/pki: Do not read revoked certificates from backend when CRL is disabled [link]
secrets/pki: Fix upgrade of missing expiry, delta_rebuild_interval by setting them to the default. [link]
secrets/pki: Fixes duplicate otherName in certificates created by the sign-verbatim endpoint. [link]
secrets/pki: OCSP GET request parameter was not being URL unescaped before processing. [link]
secrets/pki: Respond to tidy-status, tidy-cancel on PR Secondary clusters. [link]
secrets/pki: Revert fix for PR link [link]
secrets/pki: consistently use UTC for CA's notAfter exceeded error message [link]
secrets/pki: fix race between tidy's cert counting and tidy status reporting. [link]
secrets/transit: Do not warn about unrecognized parameter 'batch_input' [link]
secrets/transit: Honor module on decryption failures. [link]
storage/raft (enterprise): An already joined node can rejoin by wiping storage and re-issueing a join request, but in doing so could transiently become a non-voter.  In some scenarios this resulted in loss of quorum. [link]
storage/raft: Don't panic on unknown raft ops [link]
storage/raft: Fix race with follower heartbeat tracker during teardown. [link]
ui/keymgmt: Sets the defaultValue for type when creating a key. [link]
ui: Fix bug where logging in via OIDC fails if browser is in fullscreen mode [link]
ui: Fixes issue with not being able to download raft snapshot via service worker [link]
ui: Fixes oidc/jwt login issue with alternate mount path and jwt login via mount path tab [link]
ui: Remove default value of 30 to TtlPicker2 if no value is passed in. [link]
ui: allow selection of ""default"" for ssh algorithm_signer in web interface [link]
ui: cleanup unsaved auth method ember data record when navigating away from mount backend form [link]
ui: fix entity policies list link to policy show page [link]
ui: fixes query parameters not passed in api explorer test requests [link]
"
12,"1.12.3
February 6, 2023
CHANGES:

core: Bump Go version to 1.19.4.

IMPROVEMENTS:

audit: Include stack trace when audit logging recovers from a panic. [link]
command/server: Environment variable keys are now logged at startup. [link]
core/fips: use upstream toolchain for FIPS 140-2 compliance again; this will appear as X=boringcrypto on the Go version in Vault server logs.
core: Add read support to module and module endpoints [link]
plugins: Let Vault unseal and mount deprecated builtin plugins in a
deactivated state if this is not the first unseal after an upgrade. [link]
secrets/db/mysql: Add module and module parameters [link]
secrets/kv: new KVv2 mounts and KVv1 mounts without any keys will upgrade synchronously, allowing for instant use [link]
storage/raft: add additional raft metrics relating to applied index and heartbeating; also ensure OSS standbys emit periodic metrics. [link]
ui: Added JWT authentication warning message about blocked pop-up windows and web browser settings. [link]
ui: Prepends ""passcode="" if not provided in user input for duo totp mfa method authentication [link]
ui: Update language on database role to ""Connection name"" [link] [link]

BUG FIXES:

auth/approle: Fix module validation when using /32 blocks for role and secret ID [link]
auth/cert: Address a race condition accessing the loaded crls without a lock [link]
auth/kubernetes: Ensure a consistent TLS configuration for all k8s API requests [link] [link]
cli/kv: skip formatting of nil secrets for patch and put with field parameter set [link]
command/namespace: Fix vault cli namespace patch examples in help text. [link]
core (enterprise): Fix a race condition resulting in login errors to PKCS#11 modules under high concurrency.
core/managed-keys (enterprise): Limit verification checks to mounts in a key's namespace
core/quotas (enterprise): Fix a potential deadlock that could occur when using lease count quotas.
core/quotas: Fix issue with improper application of default rate limit quota exempt paths [link]
core/seal: Fix regression handling of the key_id parameter in seal configuration HCL. [link]
core: fix bug where context cancellations weren't forwarded to active node from performance standbys.
core: prevent panic in login mfa enforcement delete after enforcement's namespace is deleted [link]
database/mongodb: Fix writeConcern set to be applied to any query made on the database [link]
expiration: Prevent panics on perf standbys when an irrevocable release gets deleted. [link]
kmip (enterprise): Fix Destroy operation response that omitted Unique Identifier on some batched responses.
kmip (enterprise): Fix Locate operation response incompatibility with clients using KMIP versions prior to 1.3.
kmip (enterprise): Fix Query operation response that omitted streaming capability and supported profiles.
licensing (enterprise): update autoloaded license cache after reload
plugins: Allow running external plugins which override deprecated builtins. [link]
plugins: Listing all plugins while audit logging is enabled will no longer result in an internal server error. [link]
plugins: Skip loading but still mount data associated with missing plugins on unseal. [link]
sdk: Don't panic if system view or storage methods called during plugin setup. [link]
secrets/pki: Address nil panic when an empty POST request is sent to the OCSP handler [link]
secrets/pki: Allow patching issuer to set an empty issuer name. [link]
secrets/pki: OCSP GET request parameter was not being URL unescaped before processing. [link]
secrets/pki: fix race between tidy's cert counting and tidy status reporting. [link]
secrets/transit: Do not warn about unrecognized parameter 'batch_input' [link]
secrets/transit: Honor module on decryption failures. [link]
storage/raft (enterprise): An already joined node can rejoin by wiping storage
and re-issueing a join request, but in doing so could transiently become a
non-voter.  In some scenarios this resulted in loss of quorum. [link]
storage/raft: Don't panic on unknown raft ops [link]
ui: cleanup unsaved auth method ember data record when navigating away from mount backend form [link]
ui: fixes query parameters not passed in api explorer test requests [link]
"
13,"1.11.7
February 6, 2023
CHANGES:

core: Bump Go version to 1.19.4.

IMPROVEMENTS:

command/server: Environment variable keys are now logged at startup. [link]
core/fips: use upstream toolchain for FIPS 140-2 compliance again; this will appear as X=boringcrypto on the Go version in Vault server logs.
secrets/db/mysql: Add module and module parameters [link]
ui: Prepends ""passcode="" if not provided in user input for duo totp mfa method authentication [link]
ui: Update language on database role to ""Connection name"" [link] [link]

BUG FIXES:

auth/approle: Fix module validation when using /32 blocks for role and secret ID [link]
cli/kv: skip formatting of nil secrets for patch and put with field parameter set [link]
core (enterprise): Fix a race condition resulting in login errors to PKCS#11 modules under high concurrency.
core/managed-keys (enterprise): Limit verification checks to mounts in a key's namespace
core/quotas (enterprise): Fix a potential deadlock that could occur when using lease count quotas.
core/quotas: Fix issue with improper application of default rate limit quota exempt paths [link]
core: fix bug where context cancellations weren't forwarded to active node from performance standbys.
core: prevent panic in login mfa enforcement delete after enforcement's namespace is deleted [link]
database/mongodb: Fix writeConcern set to be applied to any query made on the database [link]
identity (enterprise): Fix a data race when creating an entity for a local alias.
kmip (enterprise): Fix Destroy operation response that omitted Unique Identifier on some batched responses.
kmip (enterprise): Fix Locate operation response incompatibility with clients using KMIP versions prior to 1.3.
kmip (enterprise): Fix Query operation response that omitted streaming capability and supported profiles.
licensing (enterprise): update autoloaded license cache after reload
secrets/pki: Allow patching issuer to set an empty issuer name. [link]
secrets/transit: Do not warn about unrecognized parameter 'batch_input' [link]
storage/raft (enterprise): An already joined node can rejoin by wiping storage
and re-issueing a join request, but in doing so could transiently become a
non-voter.  In some scenarios this resulted in loss of quorum. [link]
storage/raft (enterprise): Fix some storage-modifying RPCs used by perf standbys that weren't returning the resulting WAL state.
storage/raft: Don't panic on unknown raft ops [link]
ui: fixes query parameters not passed in api explorer test requests [link]
"
14,"1.10.10
February 6, 2023
CHANGES:

core: Bump Go version to 1.19.4.

IMPROVEMENTS:

command/server: Environment variable keys are now logged at startup. [link]
core/fips: use upstream toolchain for FIPS 140-2 compliance again; this will appear as X=boringcrypto on the Go version in Vault server logs.
secrets/db/mysql: Add module and module parameters [link]
ui: Prepends ""passcode="" if not provided in user input for duo totp mfa method authentication [link]
ui: Update language on database role to ""Connection name"" [link] [link]

BUG FIXES:

auth/approle: Fix module validation when using /32 blocks for role and secret ID [link]
auth/token: Fix ignored parameter warnings for valid parameters on token create [link]
cli/kv: skip formatting of nil secrets for patch and put with field parameter set [link]
core (enterprise): Fix a race condition resulting in login errors to PKCS#11 modules under high concurrency.
core/managed-keys (enterprise): Limit verification checks to mounts in a key's namespace
core/quotas (enterprise): Fix a potential deadlock that could occur when using lease count quotas.
core/quotas: Fix issue with improper application of default rate limit quota exempt paths [link]
core: fix bug where context cancellations weren't forwarded to active node from performance standbys.
core: prevent panic in login mfa enforcement delete after enforcement's namespace is deleted [link]
database/mongodb: Fix writeConcern set to be applied to any query made on the database [link]
identity (enterprise): Fix a data race when creating an entity for a local alias.
kmip (enterprise): Fix Destroy operation response that omitted Unique Identifier on some batched responses.
kmip (enterprise): Fix Locate operation response incompatibility with clients using KMIP versions prior to 1.3.
licensing (enterprise): update autoloaded license cache after reload
storage/raft (enterprise): Fix some storage-modifying RPCs used by perf standbys that weren't returning the resulting WAL state.
ui: fixes query parameters not passed in api explorer test requests [link]
"
15,"1.12.2
November 30, 2022
CHANGES:

core: Bump Go version to 1.19.3.
plugins: Mounts can no longer be pinned to a specific builtin version. Mounts previously pinned to a specific builtin version will now automatically upgrade to the latest builtin version, and may now be overridden if an unversioned plugin of the same name and type is registered. Mounts using plugin versions without module in their metadata remain unaffected. [link]

IMPROVEMENTS:

secrets/pki: Allow issuer creation, import to change default issuer via module. [link]
storage/raft: Add module config option. [link]

BUG FIXES:

auth/okta: fix a panic for AuthRenew in Okta [link]
auth: Deduplicate policies prior to ACL generation [link]
cli: Fix issue preventing kv commands from executing properly when the mount path provided by module flag and secret key path are the same. [link]
core (enterprise): Supported storage check in module command will no longer prevent startup. Instead, a warning will be logged if configured to use storage backend other than module or module.
core/quotas (enterprise): Fix a lock contention issue that could occur and cause Vault to become unresponsive when creating, changing, or deleting lease count quotas.
core: Fix potential deadlock if barrier ciphertext is less than 4 bytes. [link]
core: fix a start up race condition where performance standbys could go into a
  mount loop if default policies are not yet synced from the active node. [link]
plugins: Only report deprecation status for builtin plugins. [link]
plugins: Vault upgrades will no longer fail if a mount has been created using an explicit builtin plugin version. [link]
secret/pki: fix bug with initial legacy bundle migration (from < 1.11 into 1.11+) and missing issuers from ca_chain [link]
secrets/azure: add WAL to clean up role assignments if errors occur [link]
secrets/gcp: Fixes duplicate service account key for rotate root on standby or secondary [link]
secrets/pki: Fix upgrade of missing expiry, delta_rebuild_interval by setting them to the default. [link]
ui: Fixes issue with not being able to download raft snapshot via service worker [link]
ui: fix entity policies list link to policy show page [link]
"
16,"1.11.6
November 30, 2022
IMPROVEMENTS:

secrets/pki: Allow issuer creation, import to change default issuer via module. [link]

BUG FIXES:

auth/okta: fix a panic for AuthRenew in Okta [link]
auth: Deduplicate policies prior to ACL generation [link]
cli: Fix issue preventing kv commands from executing properly when the mount path provided by module flag and secret key path are the same. [link]
core/quotas (enterprise): Fix a lock contention issue that could occur and cause Vault to become unresponsive when creating, changing, or deleting lease count quotas.
core: Fix potential deadlock if barrier ciphertext is less than 4 bytes. [link]
core: fix a start up race condition where performance standbys could go into a
  mount loop if default policies are not yet synced from the active node. [link]
secret/pki: fix bug with initial legacy bundle migration (from < 1.11 into 1.11+) and missing issuers from ca_chain [link]
secrets/azure: add WAL to clean up role assignments if errors occur [link]
secrets/gcp: Fixes duplicate service account key for rotate root on standby or secondary [link]
ui: Fixes issue with not being able to download raft snapshot via service worker [link]
ui: fix entity policies list link to policy show page [link]
"
17,"1.10.9
November 30, 2022
BUG FIXES:

auth: Deduplicate policies prior to ACL generation [link]
core/quotas (enterprise): Fix a lock contention issue that could occur and cause Vault to become unresponsive when creating, changing, or deleting lease count quotas.
core: Fix potential deadlock if barrier ciphertext is less than 4 bytes. [link]
core: fix a start up race condition where performance standbys could go into a
  mount loop if default policies are not yet synced from the active node. [link]
secrets/azure: add WAL to clean up role assignments if errors occur [link]
secrets/gcp: Fixes duplicate service account key for rotate root on standby or secondary [link]
ui: fix entity policies list link to policy show page [link]
"
18,"1.11.5
November 2, 2022
IMPROVEMENTS:

database/snowflake: Allow parallel requests to Snowflake [link]
sdk/ldap: Added support for paging when searching for groups using group filters [link]

BUG FIXES:

core/managed-keys (enterprise): Return better error messages when encountering key creation failures
core/managed-keys (enterprise): fix panic when having module true
core: prevent memory leak when using control group factors in a policy [link]
core: prevent panic during mfa after enforcement's namespace is deleted [link]
kmip (enterprise): Fix a problem in the handling of attributes that caused Import operations to fail.
login: Store token in tokenhelper for interactive login MFA [link]
secrets/pki: Do not ignore provided signature bits value when signing intermediate and leaf certificates with a managed key [link]
secrets/pki: Do not read revoked certificates from backend when CRL is disabled [link]
secrets/pki: Respond to tidy-status, tidy-cancel on PR Secondary clusters. [link]
ui/keymgmt: Sets the defaultValue for type when creating a key. [link]
ui: Fixes oidc/jwt login issue with alternate mount path and jwt login via mount path tab [link]
"
19,"1.12.1
November 2, 2022
IMPROVEMENTS:

api: Support VAULT_DISABLE_REDIRECTS environment variable (and --disable-redirects flag) to disable default client behavior and prevent the client following any redirection responses. [link]
database/snowflake: Allow parallel requests to Snowflake [link]
plugins: Add plugin version information to key plugin lifecycle log lines. [link]
sdk/ldap: Added support for paging when searching for groups using group filters [link]

BUG FIXES:

cli: Remove empty table heading for module output. [link]
core/managed-keys (enterprise): Return better error messages when encountering key creation failures
core/managed-keys (enterprise): Switch to using hash length as PSS Salt length within the test/sign api for better PKCS#11 compatibility
core: Fix panic caused in Vault Agent when rendering certificate templates [link]
core: Fixes spurious warnings being emitted relating to ""unknown or unsupported fields"" for JSON config [link]
core: prevent memory leak when using control group factors in a policy [link]
core: prevent panic during mfa after enforcement's namespace is deleted [link]
kmip (enterprise): Fix a problem in the handling of attributes that caused Import operations to fail.
kmip (enterprise): Fix selection of Cryptographic Parameters for Encrypt/Decrypt operations.
login: Store token in tokenhelper for interactive login MFA [link]
secrets/pki: Respond to tidy-status, tidy-cancel on PR Secondary clusters. [link]
ui: Fixes oidc/jwt login issue with alternate mount path and jwt login via mount path tab [link]
"
20,"1.10.8
November 2, 2022
BUG FIXES:

core/managed-keys (enterprise): Return better error messages when encountering key creation failures
core/managed-keys (enterprise): fix panic when having module true
core: prevent memory leak when using control group factors in a policy [link]
core: prevent panic during mfa after enforcement's namespace is deleted [link]
login: Store token in tokenhelper for interactive login MFA [link]
secrets/pki: Do not ignore provided signature bits value when signing intermediate and leaf certificates with a managed key [link]
secrets/pki: Respond to tidy-status, tidy-cancel on PR Secondary clusters. [link]
ui: Fixes oidc/jwt login issue with alternate mount path and jwt login via mount path tab [link]
"
21,"1.12.0
October 13, 2022
CHANGES:

api: Exclusively use module endpoint for listing plugins, and add module field to list responses. [link]
auth: module endpoint now returns an additional module field in the response data for builtins. [link]
auth: module endpoint now returns an additional module field in the response data for builtins. [link]
auth: module endpoint response contains a warning for module auth methods. [link]
auth: module returns an error and module endpoint reports an error for module auth methods. [link]
core/entities: Fixed stranding of aliases upon entity merge, and require explicit selection of which aliases should be kept when some must be deleted [link]
core: Bump Go version to 1.19.2.
core: Validate input parameters for vault operator init command. Vault 1.12 CLI version is needed to run operator init now. [link]
identity: a request to module that includes module that contains a cycle will now be responded to with a 400 rather than 500 [link]
licensing (enterprise): Terminated licenses will no longer result in shutdown. Instead, upgrades will not be allowed if the license termination time is before the build date of the binary.
plugins: Add plugin version to auth register, list, and mount table [link]
plugins: module endpoint contains deprecation status for builtin plugins. [link]
plugins: module endpoint now returns an additional module field in the response data. [link]
plugins: module endpoint contains deprecation status in module list. [link]
plugins: module endpoint now returns an additional module field in the response data with a list of additional plugin metadata. [link]
plugins: module displays deprecation status for builtin plugins. [link]
plugins: module now accepts a module flag, which display deprecation status and version info. [link]
secrets/azure: Removed deprecated AAD graph API support from the secrets engine. [link]
secrets: All database-specific (standalone DB) secrets engines are now marked module. [link]
secrets: module endpoint now returns an additional module field in the response data for builtins. [link]
secrets: module endpoint now returns an additional module field in the response data for builtins. [link]
secrets: module endpoint response contains a warning for module secrets engines. [link]
secrets: module returns an error and module endpoint reports an error for module secrets engines. [link]

FEATURES:

GCP Cloud KMS support for managed keys: Managed keys now support using GCP Cloud KMS keys
LDAP Secrets Engine: Adds the module secrets engine with service account check-out functionality for all supported schemas. [link]
OCSP Responder: PKI mounts now have an OCSP responder that implements a subset of RFC6960, answering single serial number OCSP requests for a specific cluster's revoked certificates in a mount. [link]
Redis DB Engine: Adding the new Redis database engine that supports the generation of static and dynamic user roles and root credential rotation on a stand alone Redis server. [link]
Redis ElastiCache DB Plugin: Added Redis ElastiCache as a built-in plugin. [link]
Secrets/auth plugin multiplexing: manage multiple plugin configurations with a single plugin process [link]
Transform Key Import (BYOK): The transform secrets engine now supports importing keys for tokenization and FPE transformations
HCP (enterprise): Adding foundational support for self-managed vault nodes to securely communicate with link as an opt-in feature
ui: UI support for Okta Number Challenge. [link]

IMPROVEMENTS:

:core/managed-keys (enterprise): Allow operators to specify PSS signatures and/or hash algorithm for the test/sign api
activity (enterprise): Added new clients unit tests to test accuracy of estimates
agent/auto-auth: Add module which when set to true, will cause Agent to exit if any errors are encountered during authentication. [link]
agent: Added module configuration to disable leaving idle connections open in auto-auth, caching and templating. [link]
agent: Added module configuration to disable keep alives in auto-auth, caching and templating. [link]
agent: JWT auto auth now supports a module config option which defaults to true. [link]
agent: Send notifications to systemd on start and stop. [link]
api/mfa: Add namespace path to the MFA read/list endpoint [link]
api: Add a sentinel error for missing KV secrets [link]
auth/alicloud: Enables AliCloud roles to be compatible with Vault's role based quotas. [link]
auth/approle: SecretIDs can now be generated with an per-request specified TTL and num_uses.
When either the ttl and num_uses fields are not specified, the role's configuration is used. [link]
auth/aws: PKCS7 signatures will now use SHA256 by default in prep for Go 1.18 [link]
auth/azure: Enables Azure roles to be compatible with Vault's role based quotas. [link]
auth/cert: Add metadata to identity-alias [link]
auth/cert: Operators can now specify a CRL distribution point URL, in which case the cert auth engine will fetch and use the CRL from that location rather than needing to push CRLs directly to auth/cert. [link]
auth/cf: Enables CF roles to be compatible with Vault's role based quotas. [link]
auth/gcp: Add support for GCE regional instance groups [link]
auth/gcp: Updates dependencies: module, module. [link]
auth/jwt: Adds support for Microsoft US Gov L4 to the Azure provider for groups fetching. [link]
auth/jwt: Improves detection of Windows Subsystem for Linux (WSL) for CLI-based logins. [link]
auth/kerberos: add module config to include LDAP groups in Vault group aliases [link]
auth/kerberos: add module parameter to the login CLI and the Kerberos config in Vault. This removes any instance names found in the keytab service principal name. [link]
auth/kubernetes: Role resolution for K8S Auth [link] [link]
auth/oci: Add support for role resolution. [link]
auth/oidc: Adds support for group membership parsing when using SecureAuth as an OIDC provider. [link]
cli: CLI commands will print a warning if flags will be ignored because they are passed after positional arguments. [link]
cli: module and module list module commands now show Deprecation Status for builtin plugins. [link]
cli: module now has a module field in JSON format, and version and type information in table format. [link]
command/audit: Improve missing type error message [link]
command/server: add module and module subcommands to create a Vault dev server with generated certificates and private key. [link]
command: Fix shell completion for KV v2 mounts [link]
core (enterprise): Add HTTP PATCH support for namespaces with an associated module CLI command
core (enterprise): Add check to module command to ensure configured storage backend is supported.
core (enterprise): Add custom metadata support for namespaces
core/activity: generate hyperloglogs containing clientIds for each month during precomputation [link]
core/activity: refactor activity log api to reuse partial api functions in activity endpoint when current month is specified [link]
core/activity: use monthly hyperloglogs to calculate new clients approximation for current month [link]
core/quotas (enterprise): Added ability to add path suffixes for lease-count resource quotas
core/quotas (enterprise): Added ability to add role information for lease-count resource quotas, to limit login requests on auth mounts made using that role
core/quotas: Added ability to add path suffixes for rate-limit resource quotas [link]
core/quotas: Added ability to add role information for rate-limit resource quotas, to limit login requests on auth mounts made using that role [link]
core: Activity log goroutine management improvements to allow tests to be more deterministic. [link]
core: Add module and module endpoints to provide ability to modify logging verbosity [link]
core: Handle and log deprecated builtin mounts. Introduces module to override shutdown and error when attempting to mount module builtin plugins. [link]
core: Limit activity log client count usage by namespaces [link]
core: Upgrade github.com/hashicorp/raft [link]
core: remove gox [link]
docs: Clarify the behaviour of local mounts in the context of DR replication [link]
identity/oidc: Adds support for detailed listing of clients and providers. [link]
identity/oidc: Adds the module token endpoint authentication method. [link]
identity/oidc: allows filtering the list providers response by an allowed_client_id [link]
identity: Prevent possibility of data races on entity creation. [link]
physical/postgresql: pass context to queries to propagate timeouts and cancellations on requests. [link]
plugins/multiplexing: Added multiplexing support to database plugins if run as external plugins [link]
plugins: Add Deprecation Status method to builtinregistry. [link]
plugins: Added environment variable flag to opt-out specific plugins from multiplexing [link]
plugins: Adding version to plugin GRPC interface [link]
plugins: Plugin catalog supports registering and managing plugins with semantic version information. [link]
replication (enterprise): Fix race in merkle sync that can prevent streaming by returning key value matching provided hash if found in log shipper buffer.
secret/nomad: allow reading CA and client auth certificate from /nomad/config/access [link]
secret/pki: Add RSA PSS signature support for issuing certificates, signing CRLs [link]
secret/pki: Add signature_bits to sign-intermediate, sign-verbatim endpoints [link]
secret/pki: Allow issuing certificates with non-domain, non-email Common Names from roles, sign-verbatim, and as issuers (module). [link]
secret/pki: Allow specifying SKID for cross-signed issuance from older Vault versions. [link]
secret/transit: Allow importing Ed25519 keys from PKCS#8 with inner RFC 5915 ECPrivateKey blobs (NSS-wrapped keys). [link]
secrets/ad: set config default length only if password_policy is missing [link]
secrets/azure: Adds option to permanently delete AzureAD objects created by Vault. [link]
secrets/database/hana: Add ability to customize dynamic usernames [link]
secrets/database/snowflake: Add multiplexing support [link]
secrets/gcp: Updates dependencies: module, module. [link]
secrets/gcpkms: Update dependencies: google.golang.org/api@v0.83.0. [link]
secrets/kubernetes: upgrade to v0.2.0 [link]
secrets/pki/tidy: Add another pair of metrics counting certificates not deleted by the tidy operation. [link]
secrets/pki: Add a new flag to issue/sign APIs which can filter out root CAs from the returned ca_chain field [link]
secrets/pki: Add a warning to any successful response when the requested TTL is overwritten by MaxTTL [link]
secrets/pki: Add ability to cancel tidy operations, control tidy resource usage. [link]
secrets/pki: Add ability to periodically rebuild CRL before expiry [link]
secrets/pki: Add ability to periodically run tidy operations to remove expired certificates. [link]
secrets/pki: Add support for per-issuer Authority Information Access (AIA) URLs [link]
secrets/pki: Add support to specify signature bits when generating CSRs through intermediate/generate apis [link]
secrets/pki: Added gauge metrics ""secrets.pki.total_revoked_certificates_stored"" and ""secrets.pki.total_certificates_stored"" to track the number of certificates in storage. [link]
secrets/pki: Allow revocation of certificates with explicitly provided certificate (bring your own certificate / BYOC). [link]
secrets/pki: Allow revocation via proving possession of certificate's private key [link]
secrets/pki: Allow tidy to associate revoked certs with their issuers for OCSP performance [link]
secrets/pki: Honor If-Modified-Since header on CA, CRL fetch; requires passthrough_request_headers modification on the mount point. [link]
secrets/pki: Improve stability of association of revoked cert with its parent issuer; when an issuer loses crl-signing usage, do not place certs on default issuer's CRL. [link]
secrets/pki: Support generating delta CRLs for up-to-date CRLs when auto-building is enabled. [link]
secrets/ssh: Add allowed_domains_template to allow templating of allowed_domains. [link]
secrets/ssh: Allow additional text along with a template definition in defaultExtension value fields. [link]
secrets/ssh: Allow the use of Identity templates in the module field [link]
secrets/transit: Add a dedicated HMAC key type, which can be used with key import. [link]
secrets/transit: Added a parameter to encrypt/decrypt batch operations to allow the caller to override the HTTP response code in case of partial user-input failures. [link]
secrets/transit: Allow configuring the possible salt lengths for RSA PSS signatures. [link]
ssh: Addition of an endpoint module to allow the creation of signed key pairs [link]
storage/cassandra: tuning parameters for clustered environments module, module, module. [link]
storage/gcs: Add documentation explaining how to configure the gcs backend using environment variables instead of options in the configuration stanza [link]
ui: Changed the tokenBoundCidrs tooltip content to clarify that comma separated values are not accepted in this field. [link]
ui: Prevents requests to /sys/internal/ui/resultant-acl endpoint when unauthenticated [link]
ui: Removed deprecated version of core-js 2.6.11 [link]
ui: Renamed labels under Tools for wrap, lookup, rewrap and unwrap with description. [link]
ui: Replaces non-inclusive terms [link]
ui: redirect_to param forwards from auth route when authenticated [link]
website/docs: API generate-recovery-token documentation. [link]
website/docs: Add documentation around the expensiveness of making lots of lease count quotas in a short period [link]
website/docs: Removes mentions of unauthenticated from internal ui resultant-acl doc [link]
website/docs: Update replication docs to mention Integrated Storage [link]
website/docs: changed to echo for all string examples instead of (<<<) here-string. [link]  

BUG FIXES:

agent/template: Fix parsing error for the exec stanza [link]
agent: Agent will now respect module retry configuration even when caching is set. [link]
agent: Update consul-template for pkiCert bug fixes [link]
api/sys/internal/specs/openapi: support a new ""dynamic"" query parameter to generate generic mountpaths [link]
api: Fixed erroneous warnings of unrecognized parameters when unwrapping data. [link]
api: Fixed issue with internal/ui/mounts and internal/ui/mounts/(?P.+) endpoints where it was not properly handling /auth/ [link]
api: properly handle switching to/from unix domain socket when changing client address [link]
auth/cert: Vault does not initially load the CRLs in cert auth unless the read/write CRL endpoint is hit. [link]
auth/kerberos: Maintain headers set by the client [link]
auth/kubernetes: Restore support for JWT signature algorithm ES384 [link] [link]
auth/token: Fix ignored parameter warnings for valid parameters on token create [link]
command/debug: fix bug where monitor was not honoring configured duration [link]
core (enterprise): Fix bug where wrapping token lookup does not work within namespaces. [link]
core (enterprise): Fix creation of duplicate entities via alias metadata changes on local auth mounts.
core/auth: Return a 403 instead of a 500 for a malformed SSCT [link]
core/identity: Replicate member_entity_ids and policies in identity/group across nodes identically [link]
core/license (enterprise): Always remove stored license and allow unseal to complete when license cleanup fails
core/managed-keys (enterprise): fix panic when having module true
core/quotas (enterprise): Fixed issue with improper counting of leases if lease count quota created after leases
core/quotas: Added globbing functionality on the end of path suffix quota paths [link]
core/quotas: Fix goroutine leak caused by the seal process not fully cleaning up Rate Limit Quotas. [link]
core/replication (enterprise): Don't flush merkle tree pages to disk after losing active duty
core/seal: Fix possible keyring truncation when using the file backend. [link]
core: Fix panic when the plugin catalog returns neither a plugin nor an error. [link]
core: Fixes parsing boolean values for ha_storage backends in config [link]
core: Increase the allowed concurrent gRPC streams over the cluster port. [link]
core: Prevent two or more DR failovers from invalidating SSCT tokens generated on the previous primaries. [link]
database: Invalidate queue should cancel context first to avoid deadlock [link]
debug: Fix panic when capturing debug bundle on Windows [link]
debug: Remove extra empty lines from vault.log when debug command is run [link]
identity (enterprise): Fix a data race when creating an entity for a local alias.
identity/oidc: Adds module to discovery document. [link]
identity/oidc: Change the module parameter of the Authorization Endpoint to optional. [link]
identity/oidc: Detect invalid module values sooner in validation of the Authorization Endpoint. [link]
identity/oidc: Fixes validation of the module and module parameters. [link]
openapi: Fixed issue where information about /auth/token endpoints was not present with explicit policy permissions [link]
plugin/multiplexing: Fix panic when id doesn't exist in connection map [link]
plugin/secrets/auth: Fix a bug with aliased backends such as aws-ec2 or generic [link]
plugins: Corrected the path to check permissions on when the registered plugin name does not match the plugin binary's filename. [link]
quotas/lease-count: Fix lease-count quotas on mounts not properly being enforced when the lease generating request is a read [link]
replication (enterprise): Fix data race in SaveCheckpoint()
replication (enterprise): Fix data race in saveCheckpoint.
replication (enterprise): Fix possible data race during merkle diff/sync
secret/pki: Do not fail validation with a legacy key_bits default value and key_type=any when signing CSRs [link]
secrets/database: Fix a bug where the secret engine would queue up a lot of WAL deletes during startup. [link]
secrets/gcp: Fixes duplicate static account key creation from performance secondary clusters. [link]
secrets/kv: Fix module issue preventing the ability to read a secret when providing a leading slash [link]
secrets/pki: Allow import of issuers without CRLSign KeyUsage; prohibit setting crl-signing usage on such issuers [link]
secrets/pki: Do not ignore provided signature bits value when signing intermediate and leaf certificates with a managed key [link]
secrets/pki: Do not read revoked certificates from backend when CRL is disabled [link]
secrets/pki: Fix migration to properly handle mounts that contain only keys, no certificates [link]
secrets/pki: Ignore EC PARAMETER PEM blocks during issuer import (/config/ca, /issuers/import/*, and /intermediate/set-signed) [link]
secrets/pki: LIST issuers endpoint is now unauthenticated. [link]
secrets/transform (enterprise): Fix an issue loading tokenization transform configuration after a specific sequence of reconfigurations.
secrets/transform (enterprise): Fix persistence problem with tokenization store credentials.
storage/raft (enterprise): Fix some storage-modifying RPCs used by perf standbys that weren't returning the resulting WAL state.
storage/raft (enterprise): Prevent unauthenticated voter status change with rejoin [link]
storage/raft: Fix retry_join initialization failure [link]
storage/raft: Nodes no longer get demoted to nonvoter if we don't know their version due to missing heartbeats. [link]
ui/keymgmt: Sets the defaultValue for type when creating a key. [link]
ui: Fix OIDC callback to accept namespace flag in different formats [link]
ui: Fix info tooltip submitting form [link]
ui: Fix issue logging in with JWT auth method [link]
ui: Fix lease force revoke action [link]
ui: Fix naming of permitted_dns_domains form parameter on CA creation (root generation and sign intermediate). [link]
ui: Fixed bug where red spellcheck underline appears in sensitive/secret kv values when it should not appear [link]
ui: Fixes secret version and status menu links transitioning to auth screen [link]
ui: OIDC login type uses localStorage instead of sessionStorage [link]
vault: Fix a bug where duplicate policies could be added to an identity group. [link]
"
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,"1.11.0
Unreleased
CHANGES:

auth/aws: Add RoleSession to DisplayName when using assumeRole for authentication [link]
auth: Remove support for legacy MFA
(https://www.vaultproject.io/docs/v1.10.x/auth/mfa) [link]
core: A request that fails path validation due to relative path check will now be responded to with a 400 rather than 500. [link]
core: Bump Go version to 1.17.9. [link]
licensing (enterprise): Remove support for stored licenses and associated module and module
endpoints in favor of link.
replication (enterprise): The module endpoint has been removed. Please use link instead.
ui: Upgrade Ember to version 3.28 [link]

FEATURES:

Non-Disruptive Intermediate/Root Certificate Rotation: This allows
import, generation and configuration of any number of keys and/or issuers
within a PKI mount, providing operators the ability to rotate certificates
in place without affecting existing client configurations. [link]
api/command: Global -output-policy flag to determine minimum required policy HCL for a given operation [link]
nomad: Bootstrap Nomad ACL system if no token is provided [link]
storage/dynamodb: Added module environment variable. [link]

IMPROVEMENTS:

agent/auto-auth: Add module to the method stanza for configuring initial backoff duration. [link]
agent: Update consult-template to v0.29.0 [link]
agent: Upgrade hashicorp/consul-template version for sprig template functions and improved writeTo function [link]
api: Add ability to pass certificate as PEM bytes to api.Client. [link]
api: Add context-aware functions to vault/api for each API wrapper function. [link]
api: Added MFALogin() for handling MFA flow when using login helpers. [link]
api: If the parameters supplied over the API payload are ignored due to not
being what the endpoints were expecting, or if the parameters supplied get
replaced by the values in the endpoint's path itself, warnings will be added to
the non-empty responses listing all the ignored and replaced parameters. [link]
api: Provide a helper method WithNamespace to create a cloned client with a new NS [link]
api: Use the context passed to the api/auth Login helpers. [link]
auth/okta: Add support for Google provider TOTP type in the Okta auth method [link]
auth: enforce a rate limit for TOTP passcode validation attempts [link]
cli/debug: added support for retrieving metrics from DR clusters if module is enabled [link]
cli/vault: warn when policy name contains upper-case letter [link]
cli: Alternative flag-based syntax for KV to mitigate confusion from automatically appended /data [link]
cockroachdb: add high-availability support [link]
core (enterprise): Include module in module response
core (enterprise): Include termination time in module command output
core : check uid and permissions of config dir, config file, plugin dir and plugin binaries [link]
core,transit: Allow callers to choose random byte source including entropy augmentation sources for the sys/tools/random and transit/random endpoints. [link]
core/activity: Order month data in ascending order of timestamps [link]
core: Add new DB methods that do not prepare statements. [link]
core: Fix some identity data races found by Go race detector (no known impact yet). [link]
core: Include build date in module and module endpoints. [link]
core: Upgrade github.org/x/crypto/ssh [link]
sdk: Change OpenAPI code generator to extract request objects into /components/schemas and reference them by name. [link]
secrets/consul: Add support for Consul node-identities and service-identities [link]
secrets/consul: Vault is now able to automatically bootstrap the Consul ACL system. [link]
secrets/pki: Warn when module and module are both set to module on requests. [link]
sentinel (enterprise): Upgrade sentinel to link to avoid potential naming collisions in the remote installer
storage/raft: Use larger timeouts at startup to reduce likelihood of inducing elections. [link]
ui: Parse schema refs from OpenAPI [link]
ui: Remove storybook. [link]
ui: Replaces the IvyCodemirror wrapper with a custom ember modifier. [link]
website/docs: added a link to an Enigma secret plugin. [link]

BUG FIXES:

Fixed panic when adding or modifying a Duo MFA Method in Enterprise
agent: Fix log level mismatch between ERR and ERROR [link]
api/sys/raft: Update RaftSnapshotRestore to use net/http client allowing bodies larger than allocated memory to be streamed [link]
api: Fixes bug where OutputCurlString field was unintentionally being copied over during client cloning [link]
api: Respect increment value in grace period calculations in LifetimeWatcher [link]
auth/approle: Add maximum length for input values that result in SHA56 HMAC calculation [link]
auth: forward requests subject to login MFA from perfStandby to Active node [link]
auth: load login MFA configuration upon restart [link]
cassandra: Update gocql Cassandra client to fix ""no hosts available in the pool"" error [link]
cli: Fix panic caused by parsing key=value fields whose value is a single backslash [link]
cli: kv get command now honors trailing spaces to retrieve secrets [link]
core (enterprise): Allow local alias create RPCs to persist alias metadata
core (enterprise): Fix some races in merkle index flushing code found in testing
core/config: Only ask the system about network interfaces when address configs contain a template having the format: {{ ... }} [link]
core/managed-keys (enterprise): Allow PKCS#11 managed keys to use 0 as a slot number
core/metrics: Fix incorrect table size metric for local mounts [link]
core: Fix double counting for ""route"" metrics [link]
core: Fix panic caused by parsing JSON integers for fields defined as comma-delimited integers [link]
core: Fix panic caused by parsing JSON integers for fields defined as comma-delimited strings [link]
core: Fix panic caused by parsing policies with empty slice values. [link]
core: Fix panic for help request URL paths without /v1/ prefix [link]
core: fixed systemd reloading notification [link]
core: fixing excessive unix file permissions [link]
core: fixing excessive unix file permissions on dir, files and archive created by vault debug command [link]
core: pre-calculate namespace specific paths when tainting a route during postUnseal [link]
core: report unused or redundant keys in server configuration [link]
core: time.After() used in a select statement can lead to memory leak [link]
rafft: fix Raft TLS key rotation panic that occurs if active key is more than 24 hours old [link]
raft: Ensure initialMmapSize is set to 0 on Windows [link]
replication (enterprise): fix panic due to missing entity during invalidation of local aliases. [link]
sdk/cidrutil: Only check if cidr contains remote address for IP addresses [link]
sdk: Fix OpenApi spec generator to properly convert TypeInt64 to OAS supported int64 [link]
sdk: Fix OpenApi spec generator to remove duplicate sha_256 parameter [link]
secrets/database: Ensure that a module password is redacted in all cases. [link]
secrets/pki: Fix handling of ""any"" key type with default zero signature bits value. [link]
secrets/pki: Fixed bug where larger SHA-2 hashes were truncated with shorter ECDSA CA certificates [link]
ui: Fix Generated Token's Policies helpText to clarify that comma separated values are not accepted in this field. [link]
ui: Fix KV secret showing in the edit form after a user creates a new version but doesn't have read capabilities [link]
ui: Fix issue with KV not recomputing model when you changed versions. [link]
ui: Fixes edit auth method capabilities issue [link]
ui: Fixes issue logging in with OIDC from a listed auth mounts tab [link]
ui: fix firefox inability to recognize file format of client count csv export [link]
ui: fix search-select component showing blank selections when editing group member entity [link]
ui: masked values no longer give away length or location of special characters [link]
"
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,"1.10.0
March 23, 2022
CHANGES:

core: Changes the unit of module and module values returned by
the module endpoint from nanoseconds to seconds. [link]
core: Bump Go version to 1.17.7. [link]
plugin/database: The return value from module has been updated to ""204 No Content"" [link]
secrets/azure: Changes the configuration parameter module to use the Microsoft 
Graph API by default. [link]
storage/etcd: Remove support for v2. [link]
ui: Upgrade Ember to version 3.24 [link]

FEATURES:

Database plugin multiplexing: manage multiple database connections with a single plugin process [link]
Login MFA: Single and two phase MFA is now available when authenticating to Vault. [link]
Mount Migration: Vault supports moving secrets and auth mounts both within and across namespaces.
Postgres in the UI: Postgres DB is now supported by the UI [link]
Report in-flight requests: Adding a trace capability to show in-flight requests, and a new gauge metric to show the total number of in-flight requests [link]
Server Side Consistent Tokens: Service tokens have been updated to be longer (a minimum of 95 bytes) and token prefixes for all token types are updated from s., b., and r. to hvs., hvb., and hvr. for service, batch, and recovery tokens respectively. Vault clusters with integrated storage will now have read-after-write consistency by default. [link]
Transit SHA-3 Support: Add support for SHA-3 in the Transit backend. [link]
Transit Time-Based Key Autorotation: Add support for automatic, time-based key rotation to transit secrets engine, including in the UI. [link]
UI Client Count Improvements: Restructures client count dashboard, making use of billing start date to improve accuracy. Adds mount-level distribution and filtering. [link]
Agent Telemetry: The Vault Agent can now collect and return telemetry information at the module endpoint.

IMPROVEMENTS:

agent: Adds ability to configure specific user-assigned managed identities for Azure auto-auth. [link]
agent: The module endpoint can now be used to stop the Vault Agent remotely [link]
api: Allow cloning module tokens via module or module. [link]
api: Define constants for X-Vault-Forward and X-Vault-Inconsistent headers [link]
api: Implements Login method in Go client libraries for GCP and Azure auth methods [link]
api: Implements Login method in Go client libraries for LDAP auth methods [link]
api: Trim newline character from wrapping token in logical.Unwrap from the api package [link]
api: add api method for modifying raft autopilot configuration [link]
api: respect WithWrappingToken() option during AppRole login authentication when used with secret ID specified from environment or from string [link]
audit: The audit logs now contain the port used by the client [link]
auth/aws: Enable region detection in the CLI by specifying the region as module [link]
auth/cert: Add certificate extensions as metadata [link]
auth/jwt: The Authorization Code flow makes use of the Proof Key for Code Exchange (PKCE) extension. [link]
auth/kubernetes: Added support for dynamically reloading short-lived tokens for better Kubernetes 1.21+ compatibility [link]
auth/ldap: Add a response warning and server log whenever the config is accessed
if module doesn't consider module [link]
auth/ldap: Add username to alias metadata [link]
auth/ldap: Add username_as_alias configurable to change how aliases are named [link]
auth/okta: Update link dependency to version v2.9.1 for improved request backoff handling [link]
auth/token: The module endpoint is now idempotent and will
not error out if the token has already been revoked. [link]
auth: reading module now returns the configuration for the auth engine mounted at the given path [link]
cli: interactive CLI for login mfa [link]
command (enterprise): ""vault license get"" now uses non-deprecated endpoint /sys/license/status
core/ha: Add new mechanism for keeping track of peers talking to active node, and new 'operator members' command to view them. [link]
core/identity: Support updating an alias' module to be empty. [link]
core/pki: Support Y10K value in notAfter field to be compliant with IEEE 802.1AR-2018 standard [link]
core/pki: Support Y10K value in notAfter field when signing non-CA certificates [link]
core: Add duration and start_time to completed requests log entries [link]
core: Add support to list password policies at module [link]
core: Add support to list version history via API at module and via CLI with module [link]
core: Fixes code scanning alerts [link]
core: Periodically test the health of connectivity to auto-seal backends [link]
core: Reading module now returns the configuration for the secret engine at the given path [link]
core: Replace ""master key"" terminology with ""root key"" [link]
core: Small changes to ensure goroutines terminate in tests [link]
core: Systemd unit file included with the Linux packages now sets the service type to notify. [link]
core: Update github.com/prometheus/client_golang to fix security vulnerability CVE-2022-21698. [link]
core: Vault now supports the PROXY protocol v2. Support for UNKNOWN connections
has also been added to the PROXY protocol v1. [link]
http (enterprise): Serve /sys/license/status endpoint within namespaces
identity/oidc: Adds a default OIDC provider [link]
identity/oidc: Adds a default key for OIDC clients [link]
identity/oidc: Adds an module assignment that permits all entities to authenticate via an OIDC client [link]
identity/oidc: Adds proof key for code exchange (PKCE) support to OIDC providers. [link]
sdk: Add helper for decoding root tokens [link]
secrets/azure: Adds support for rotate-root. link [link]
secrets/consul: Add support for consul enterprise namespaces and admin partitions. [link]
secrets/consul: Add support for consul roles. [link]
secrets/database/influxdb: Switch/upgrade to the module module [link]
secrets/database: Add database configuration parameter 'disable_escaping' for username and password when connecting to a database. [link]
secrets/kv: add full secret path output to table-formatted responses [link]
secrets/kv: add patch support for KVv2 key metadata [link]
secrets/kv: add subkeys endpoint to retrieve a secret's stucture without its values [link]
secrets/pki: Add ability to fetch individual certificate as DER or PEM [link]
secrets/pki: Add count and duration metrics to PKI issue and revoke calls. [link]
secrets/pki: Add error handling for error types other than UserError or InternalError [link]
secrets/pki: Allow URI SAN templates in allowed_uri_sans when allowed_uri_sans_template is set to true. [link]
secrets/pki: Allow other_sans in sign-intermediate and sign-verbatim [link]
secrets/pki: Calculate the Subject Key Identifier as suggested in link. [link]
secrets/pki: Restrict issuance of wildcard certificates via role parameter (module) [link]
secrets/pki: Return complete chain (in module field) on calls to module [link]
secrets/pki: Use application/pem-certificate-chain for PEM certificates, application/x-pem-file for PEM CRLs [link]
secrets/pki: select appropriate signature algorithm for ECDSA signature on certificates. [link]
secrets/ssh: Add support for generating non-RSA SSH CAs [link]
secrets/ssh: Allow specifying multiple approved key lengths for a single algorithm [link]
secrets/ssh: Use secure default for algorithm signer (rsa-sha2-256) with RSA SSH CA keys on new roles [link]
secrets/transit: Don't abort transit encrypt or decrypt batches on single item failure. [link]
storage/aerospike: Upgrade module to v5.6.0. [link]
storage/raft: Set InitialMmapSize to 100GB on 64bit architectures [link]
storage/raft: When using retry_join stanzas, join against all of them in parallel. [link]
sys/raw: Enhance sys/raw to read and write values that cannot be encoded in json. [link]
ui: Add support for ECDSA and Ed25519 certificate views [link]
ui: Add version diff view for KV V2 [link]
ui: Added client side paging for namespace list view [link]
ui: Adds flight icons to UI [link]
ui: Adds multi-factor authentication support [link]
ui: Allow static role credential rotation in Database secrets engines [link]
ui: Display badge for all versions in secrets engine header [link]
ui: Swap browser localStorage in favor of sessionStorage [link]
ui: The integrated web terminal now accepts both module and module as aliases
for module for the module command. [link]
ui: Transform advanced templating with encode/decode format support [link]
ui: Updates ember blueprints to glimmer components [link]
ui: customizes empty state messages for transit and transform [link]

BUG FIXES:

Fixed bug where auth method only considers system-identity when multiple identities are available. link [link]
activity log (enterprise): allow partial monthly client count to be accessed from namespaces [link]
agent: Fixes bug where vault agent is unaware of the namespace in the config when wrapping token
api/client: Fixes an issue where the module was being set to module upon consecutive calls to module. [link]
auth/approle: Fix regression where unset cidrlist is returned as nil instead of zero-length array. [link]
auth/approle: Fix wrapping of nil errors in module endpoint [link]
auth/github: Use the Organization ID instead of the Organization name to verify the org membership. [link]
auth/kubernetes: Properly handle the migration of role storage entries containing an empty module [link]
auth/kubernetes: ensure valid entity alias names created for projected volume tokens [link]
auth/oidc: Fixes OIDC auth from the Vault UI when using the implicit flow and module response mode. [link]
cli: Fix using kv patch with older server versions that don't support HTTP PATCH. [link]
core (enterprise): Fix a data race in logshipper.
core (enterprise): Workaround AWS CloudHSM v5 SDK issue not allowing read-only sessions
core/api: Fix overwriting of request headers when using JSONMergePatch. [link]
core/identity: Address a data race condition between local updates to aliases and invalidations [link]
core/identity: Address a data race condition between local updates to aliases and invalidations [link]
core/token: Fix null token panic from 'v1/auth/token/' endpoints and return proper error response. [link]
core/token: Fix null token_type panic resulting from 'v1/auth/token/roles/{role_name}' endpoint [link]
core: Fix warnings logged on perf standbys re stored versions [link]
core: module now properly sets cURL options for client and CA
certificates. [link]
core: add support for go-sockaddr templates in the top-level cluster_addr field [link]
core: authentication to ""login"" endpoint for non-existent mount path returns permission denied with status code 403 [link]
core: revert some unintentionally downgraded dependencies from 1.9.0-rc1 [link]
ha (enterprise): Prevents performance standby nodes from serving and caching stale data immediately after performance standby election completes
http (enterprise): Always forward internal/counters endpoints from perf standbys to active node
http:Fix /sys/monitor endpoint returning streaming not supported [link]
identity/oidc: Adds support for port-agnostic validation of loopback IP redirect URIs. [link]
identity/oidc: Check for a nil signing key on rotation to prevent panics. [link]
identity/oidc: Fixes inherited group membership when evaluating client assignments [link]
identity/oidc: Fixes potential write to readonly storage on performance secondary clusters during key rotation [link]
identity/oidc: Make the module parameter optional for the Authorization Endpoint of OIDC providers. [link]
identity/token: Fixes a bug where duplicate public keys could appear in the .well-known JWKS [link]
identity: Fix possible nil pointer dereference. [link]
identity: Fix regression preventing startup when aliases were created pre-1.9. [link]
identity: Fixes a panic in the OIDC key rotation due to a missing nil check. [link]
kmip (enterprise): Fix locate by name operations fail to find key after a rekey operation.
licensing (enterprise): Revert accidental inclusion of the TDE feature from the module build.
metrics/autosnapshots (enterprise) : Fix bug that could cause
vault.autosnapshots.save.errors to not be incremented when there is an
autosnapshot save error.
physical/mysql: Create table with wider module column when initializing database tables. [link]
plugin/couchbase: Fix an issue in which the locking patterns did not allow parallel requests. [link]
replication (enterprise): When using encrypted secondary tokens, only clear the
private key after a successful connection to the primary cluster
sdk/framework: Generate proper OpenAPI specs for path patterns that use an alternation as the root. [link]
sdk/helper/ldaputil: properly escape a trailing escape character to prevent panics. [link]
sdk/queue: move lock before length check to prevent panics. [link]
sdk: Fixes OpenAPI to distinguish between paths that can do only List, or both List and Read. [link]
secrets/azure: Fixed bug where Azure environment did not change Graph URL [link]
secrets/azure: Fixes service principal generation when assigning roles that have link. [link]
secrets/azure: Fixes the link 
operation for upgraded configurations with a module of zero. [link]
secrets/database/cassandra: change connect_timeout to 5s as documentation says [link]
secrets/database/mssql: Accept a boolean for module, rather than just a string. [link]
secrets/gcp: Fixed bug where error was not reported for invalid bindings [link]
secrets/gcp: Fixes role bindings for BigQuery dataset resources. [link]
secrets/openldap: Fix panic from nil logger in backend [link]
secrets/pki: Default value for key_bits changed to 0, enabling key_type=ec key generation with default value [link]
secrets/pki: Fix issuance of wildcard certificates matching glob patterns [link]
secrets/pki: Fix regression causing performance secondaries to forward certificate generation to the primary. [link]
secrets/pki: Fix regression causing performance secondaries to forward certificate generation to the primary. [link]
secrets/pki: Fixes around NIST P-curve signature hash length, default value for signature_bits changed to 0. [link]
secrets/pki: Recognize ed25519 when requesting a response in PKCS8 format [link]
secrets/pki: Skip signature bits validation for ed25519 curve key type [link]
secrets/transit: Ensure that Vault does not panic for invalid nonce size when we aren't in convergent encryption mode. [link]
secrets/transit: Return an error if any required parameter is missing. [link]
storage/raft: Fix a panic when trying to store a key > 32KB in a transaction. [link]
storage/raft: Fix a panic when trying to write a key > 32KB [link]
storage/raft: Fix issues allowing invalid nodes to become leadership candidates. [link]
storage/raft: Fix regression in 1.9.0-rc1 that changed how time is represented in Raft logs; this prevented using a raft db created pre-1.9. [link]
storage/raft: On linux, use map_populate for bolt files to improve startup time. [link]
storage/raft: Units for bolt metrics now given in milliseconds instead of nanoseconds [link]
ui: Adds pagination to auth methods list view [link]
ui: Do not show verify connection value on database connection config page [link]
ui: Fix client count current month data not showing unless monthly history data exists [link]
ui: Fix default TTL display and set on database role [link]
ui: Fix incorrect validity message on transit secrets engine [link]
ui: Fix issue where UI incorrectly handled API errors when mounting backends [link]
ui: Fix kv engine access bug [link]
ui: Fixes breadcrumb bug for secrets navigation [link]
ui: Fixes caching issue on kv new version create [link]
ui: Fixes displaying empty masked values in PKI engine [link]
ui: Fixes horizontal bar chart hover issue when filtering namespaces and mounts [link]
ui: Fixes issue logging out with wrapped token query parameter [link]
ui: Fixes issue removing raft storage peer via cli not reflected in UI until refresh [link]
ui: Fixes issue restoring raft storage snapshot [link]
ui: Fixes issue saving KMIP role correctly [link]
ui: Fixes issue with OIDC auth workflow when using MetaMask Chrome extension [link]
ui: Fixes issue with SearchSelect component not holding focus [link]
ui: Fixes issue with automate secret deletion value not displaying initially if set in secret metadata edit view [link]
ui: Fixes issue with correct auth method not selected when logging out from OIDC or JWT methods [link]
ui: Fixes issue with placeholder not displaying for automatically deleted secrets when deletion time has passed [link]
ui: Fixes issue with the number of PGP Key inputs not matching the key shares number in the initialization form on change [link]
ui: Fixes long secret key names overlapping masked values [link]
ui: Fixes node-forge error when parsing EC (elliptical curve) certs [link]
ui: Redirects to managed namespace if incorrect namespace in URL param [link]
ui: Removes ability to tune token_type for token auth methods [link]
ui: trigger token renewal if inactive and half of TTL has passed [link]
"
46,
47,
48,
49,
50,"1.9.3
January 27, 2022
IMPROVEMENTS:

auth/kubernetes: Added support for dynamically reloading short-lived tokens for better Kubernetes 1.21+ compatibility [link]
auth/ldap: Add username to alias metadata [link]
core/identity: Support updating an alias' module to be empty. [link]
core: Fixes code scanning alerts [link]
http (enterprise): Serve /sys/license/status endpoint within namespaces

BUG FIXES:

auth/oidc: Fixes OIDC auth from the Vault UI when using the implicit flow and module response mode. [link]
cli: Fix using kv patch with older server versions that don't support HTTP PATCH. [link]
core (enterprise): Workaround AWS CloudHSM v5 SDK issue not allowing read-only sessions
core/identity: Address a data race condition between local updates to aliases and invalidations [link]
core: add support for go-sockaddr templates in the top-level cluster_addr field [link]
identity/oidc: Check for a nil signing key on rotation to prevent panics. [link]
kmip (enterprise): Fix locate by name operations fail to find key after a rekey operation.
secrets/database/mssql: Accept a boolean for module, rather than just a string. [link]
secrets/gcp: Fixes role bindings for BigQuery dataset resources. [link]
secrets/pki: Fix regression causing performance secondaries to forward certificate generation to the primary. [link]
storage/raft: On linux, use map_populate for bolt files to improve startup time. [link]
storage/raft: Units for bolt metrics now given in milliseconds instead of nanoseconds [link]
ui: Fixes breadcrumb bug for secrets navigation [link]
ui: Fixes issue saving KMIP role correctly [link]
"
51,"1.8.8
January 27, 2022
IMPROVEMENTS:

core: Fixes code scanning alerts [link]

BUG FIXES:

auth/oidc: Fixes OIDC auth from the Vault UI when using the implicit flow and module response mode. [link]
core (enterprise): Workaround AWS CloudHSM v5 SDK issue not allowing read-only sessions
kmip (enterprise): Fix locate by name operations fail to find key after a rekey operation.
secrets/gcp: Fixes role bindings for BigQuery dataset resources. [link]
secrets/pki: Fix regression causing performance secondaries to forward certificate generation to the primary. [link]
secrets/pki: Fix regression causing performance secondaries to forward certificate generation to the primary. [link]
storage/raft: Fix issues allowing invalid nodes to become leadership candidates. [link]
storage/raft: On linux, use map_populate for bolt files to improve startup time. [link]
storage/raft: Units for bolt metrics now given in milliseconds instead of nanoseconds [link]
ui: Fixes breadcrumb bug for secrets navigation [link]
ui: Fixes issue saving KMIP role correctly [link]
"
52,"1.7.9
January 27, 2022
IMPROVEMENTS:

core: Fixes code scanning alerts [link]

BUG FIXES:

auth/oidc: Fixes OIDC auth from the Vault UI when using the implicit flow and module response mode. [link]
secrets/gcp: Fixes role bindings for BigQuery dataset resources. [link]
ui: Fixes breadcrumb bug for secrets navigation [link]
ui: Fixes issue saving KMIP role correctly [link]
"
53,"1.9.2
December 21, 2021
CHANGES:

go: Update go version to 1.17.5 [link]

IMPROVEMENTS:

auth/jwt: The Authorization Code flow makes use of the Proof Key for Code Exchange (PKCE) extension. [link]

BUG FIXES:

ui: Fix client count current month data not showing unless monthly history data exists [link]
"
54,"1.8.7
December 21, 2021
CHANGES:

go: Update go version to 1.16.12 [link]
"
55,"1.7.8
December 21, 2021
CHANGES:

go: Update go version to 1.16.12 [link]

BUG FIXES:

auth/aws: Fixes ec2 login no longer supporting DSA signature verification [link]
identity: Fix a panic on arm64 platform when doing identity I/O. [link]
"
56,"1.9.1
December 9, 2021
IMPROVEMENTS:

storage/aerospike: Upgrade module to v5.6.0. [link]

BUG FIXES:

auth/approle: Fix regression where unset cidrlist is returned as nil instead of zero-length array. [link]
ha (enterprise): Prevents performance standby nodes from serving and caching stale data immediately after performance standby election completes
http:Fix /sys/monitor endpoint returning streaming not supported [link]
identity/oidc: Make the module parameter optional for the Authorization Endpoint of OIDC providers. [link]
identity: Fixes a panic in the OIDC key rotation due to a missing nil check. [link]
sdk/queue: move lock before length check to prevent panics. [link]
secrets/azure: Fixes service principal generation when assigning roles that have link. [link]
secrets/pki: Recognize ed25519 when requesting a response in PKCS8 format [link]
storage/raft: Fix a panic when trying to store a key > 32KB in a transaction. [link]
storage/raft: Fix a panic when trying to write a key > 32KB [link]
ui: Do not show verify connection value on database connection config page [link]
ui: Fixes issue restoring raft storage snapshot [link]
ui: Fixes issue with OIDC auth workflow when using MetaMask Chrome extension [link]
ui: Fixes issue with automate secret deletion value not displaying initially if set in secret metadata edit view [link]
ui: Fixes issue with placeholder not displaying for automatically deleted secrets when deletion time has passed [link]
ui: Fixes node-forge error when parsing EC (elliptical curve) certs [link]
"
57,"1.8.6
December 9, 2021
CHANGES:

go: Update go version to 1.16.9 [link]

BUG FIXES:

ha (enterprise): Prevents performance standby nodes from serving and caching stale data immediately after performance standby election completes
storage/raft: Fix a panic when trying to store a key > 32KB in a transaction. [link]
storage/raft: Fix a panic when trying to write a key > 32KB [link]
ui: Adds pagination to auth methods list view [link]
ui: Do not show verify connection value on database connection config page [link]
ui: Fixes issue restoring raft storage snapshot [link]
ui: Fixes issue with OIDC auth workflow when using MetaMask Chrome extension [link]
ui: Fixes issue with the number of PGP Key inputs not matching the key shares number in the initialization form on change [link]
"
58,"1.7.7
December 9, 2021
BUG FIXES:

ha (enterprise): Prevents performance standby nodes from serving and caching stale data immediately after performance standby election completes
storage/raft: Fix a panic when trying to store a key > 32KB in a transaction. [link]
storage/raft: Fix a panic when trying to write a key > 32KB [link]
ui: Fixes issue restoring raft storage snapshot [link]
ui: Fixes issue with OIDC auth workflow when using MetaMask Chrome extension [link]
ui: Fixes issue with the number of PGP Key inputs not matching the key shares number in the initialization form on change [link]
"
59,"1.9.0
November 17, 2021
CHANGES:

expiration: VAULT_16_REVOKE_PERMITPOOL environment variable has been removed. [link]
expiration: VAULT_LEASE_USE_LEGACY_REVOCATION_STRATEGY environment variable has
been removed. [link]
go: Update go version to 1.17.2
secrets/ssh: Roles with empty allowed_extensions will now forbid end-users
specifying extensions when requesting ssh key signing. Update roles setting
allowed_extensions to module to permit any extension to be specified by an end-user. [link]

FEATURES:

Customizable HTTP Headers: Add support to define custom HTTP headers for root path (module) and also on API endpoints (module) [link]
Deduplicate Token With Entities in Activity Log: Vault tokens without entities are now tracked with client IDs and deduplicated in the Activity Log [link]
Elasticsearch Database UI: The UI now supports adding and editing Elasticsearch connections in the database secret engine. [link]
KV Custom Metadata: Add ability in kv-v2 to specify version-agnostic custom key metadata via the
metadata endpoint. The data will be present in responses made to the data endpoint independent of the
calling token's module access to the metadata endpoint. [link]
KV patch (Tech Preview): Add partial update support for the module kv-v2
endpoint through HTTP module.  A new module ACL capability has been added and
is required to make such requests. [link]
Key Management Secrets Engine (Enterprise): Adds support for distributing and managing keys in GCP Cloud KMS.
Local Auth Mount Entities (enterprise): Logins on module auth mounts will
generate identity entities for the tokens issued. The aliases of the entity
resulting from local auth mounts (local-aliases), will be scoped by the cluster.
This means that the local-aliases will never leave the geographical boundary of
the cluster where they were issued. This is something to be mindful about for
those who have implemented local auth mounts for complying with GDPR guidelines.
Namespaces (Enterprise): Adds support for locking Vault API for particular namespaces.
OIDC Identity Provider (Tech Preview): Adds support for Vault to be an OpenID Connect (OIDC) provider. [link]
Oracle Database UI: The UI now supports adding and editing Oracle connections in the database secret engine. [link]
Postgres Database UI: The UI now supports adding and editing Postgres connections in the database secret engine. [link]

IMPROVEMENTS:

agent/cache: Process persistent cache leases in dependency order during restore to ensure child leases are always correctly restored [link]
agent/cache: Use an in-process listener between consul-template and vault-agent when caching is enabled and either templates or a listener is defined [link]
agent/cache: tolerate partial restore failure from persistent cache [link]
agent/template: add support for new 'writeToFile' template function [link]
api: Add configuration option for ensuring isolated read-after-write semantics for all Client requests. [link]
api: adds native Login method to Go client module with different auth method interfaces to support easier authentication [link]
api: Move mergeStates and other required utils from agent to api module [link]
api: Support VAULT_HTTP_PROXY environment variable to allow overriding the Vault client's HTTP proxy [link]
auth/approle: The module endpoint now returns a 404 status code when the module cannot be found [link]
auth/approle: expose secret_id_accessor as WrappedAccessor when creating wrapped secret-id. [link]
auth/aws: add profile support for AWS credentials when using the AWS auth method [link]
auth/kubernetes: validate JWT against the provided role on alias look ahead operations [link]
auth/kubernetes: Add ability to configure entity alias names based on the serviceaccount's namespace and name. link link [link]
auth/oidc: Adds the module CLI option to allow users to skip opening the default browser during the authentication flow. [link]
auth/okta: Send x-forwarded-for in Okta Push Factor request [link]
auth/token: Add module and module fields to token roles to allow glob matching of policies [link]
cli: Operator diagnose now tests for missing or partial telemetry configurations. [link]
cli: add new http option : -header which enable sending arbitrary headers with the cli [link]
command: operator generate-root -decode: allow passing encoded token via stdin [link]
core/token: Return the token_no_default_policy config on token role read if set [link]
core: Add support for go-sockaddr templated addresses in config. [link]
core: adds custom_metadata field for aliases [link]
core: Update Oracle Cloud library to enable seal integration with the uk-gov-london-1 region [link]
core: Update github.com/ulikunitz/xz to fix security vulnerability GHSA-25xm-hr59-7c27. [link]
core: Upgrade github.com/gogo/protobuf [link]
core: build with Go 1.17, and mitigate a breaking change they made that could impact how approle and ssh interpret IPs/CIDRs [link]
core: observe the client counts broken down by namespace for partial month client count [link]
db/cassandra: make the connect_timeout config option actually apply to connection timeouts, in addition to non-connection operations [link]
identity/token: Only return keys from the module endpoint that are being used by roles to sign/verify tokens. [link]
identity: fix issue where Cache-Control header causes stampede of requests for JWKS keys [link]
physical/etcd: Upgrade etcd3 client to v3.5.0 and etcd2 to v2.305.0. [link]
pki: adds signature_bits field to customize signature algorithm on CAs and certs signed by Vault [link]
plugin: update the couchbase gocb version in the couchbase plugin [link]
replication (enterprise): Add merkle.flushDirty.num_pages_outstanding metric which specifies number of
outstanding dirty pages that were not flushed. [link]
sdk/framework: The '+' wildcard is now supported for parameterizing unauthenticated paths. [link]
secrets/aws: Add conditional template that allows custom usernames for both STS and IAM cases [link]
secrets/azure: Adds support for rotate-root. link [link]
secrets/azure: Adds support for using Microsoft Graph API since Azure Active Directory API is being removed in 2022. link [link]
secrets/database: Update MSSQL dependency github.com/denisenkom/go-mssqldb to v0.11.0 and include support for contained databases in MSSQL plugin [link]
secrets/pki: Allow signing of self-issued certs with a different signature algorithm. [link]
secrets/pki: Use entropy augmentation when available when generating root and intermediate CA key material. [link]
secrets/pki: select appropriate signature algorithm for ECDSA signature on certificates. [link]
secrets/pki: Support ed25519 as a key for the pki backend [link]
secrets/rabbitmq: Update dependency github.com/michaelklishin/rabbit-hole to v2 and resolve UserInfo.tags regression from RabbitMQ v3.9 [link]
secrets/ssh: Let allowed_users template mix templated and non-templated parts. [link]
secrets/ssh: Use entropy augmentation when available for generation of the signing key. [link]
serviceregistration: add module metadata value for Consul registration. [link]
storage/raft: Best-effort handling of cancelled contexts. [link]
transform (enterprise): Add advanced features for encoding and decoding for Transform FPE
transform (enterprise): Add a module field to batch items, and propogate it to the response
ui: Add KV secret search box when no metadata list access. [link]
ui: Add custom metadata to KV secret engine and metadata to config [link]
ui: Creates new StatText component [link]
ui: client count monthly view [link]
ui: creates bar chart component for displaying client count data by namespace [link]
ui: Add creation time to KV 2 version history and version view [link]
ui: Added resize for JSON editor [link] [link]
ui: Adds warning about white space in KV secret engine. [link]
ui: Click to copy database static role last rotation value in tooltip [link]
ui: Filter DB connection attributes so only relevant attrs POST to backend [link]
ui: Removes empty rows from DB config views [link]
ui: Standardizes toolbar presentation of destructive actions [link]
ui: Updates font for table row value fields [link]
ui: namespace search in client count views [link]
ui: parse and display pki cert metadata [link]
ui: replaces Vault's use of elazarl/go-bindata-assetfs in building the UI with Go's native Embed package [link]
ui: updated client tracking config view [link]

BUG FIXES:

activity log (enterprise): allow partial monthly client count to be accessed from namespaces [link]
agent: Avoid possible module panic when using persistent cache. [link]
api: Fixes storage APIs returning incorrect error when parsing responses [link]
auth/aws: Fix ec2 auth on instances that have a cert in their PKCS7 signature [link]
auth/aws: Fixes ec2 login no longer supporting DSA signature verification [link]
auth/aws: fix config/rotate-root to store new key [link]
auth/jwt: Fixes OIDC auth from the Vault UI when using module as the module. [link]
cli/api: Providing consistency for the use of comma separated parameters in auth/secret enable/tune [link]
cli: fixes CLI requests when namespace is both provided as argument and part of the path [link]
cli: fixes CLI requests when namespace is both provided as argument and part of the path [link]
cli: vault debug now puts newlines after every captured log line. [link]
core (enterprise): Allow deletion of stored licenses on DR secondary nodes
core (enterprise): Disallow autogenerated licenses to be used in diagnose even when config is specified
core (enterprise): Fix bug where password generation through password policies do not work on namespaces if performed outside a request callback or from an external plugin. [link]
core (enterprise): Fix data race during perf standby sealing
core (enterprise): Fixes reading raft auto-snapshot configuration from performance standby node [link]
core (enterprise): Only delete quotas on primary cluster. [link]
core (enterprise): namespace header included in responses, Go client uses it when displaying error messages [link]
core/api: Fix an arm64 bug converting a negative int to an unsigned int [link]
core/identity: Address a data race condition between local updates to aliases and invalidations [link]
core/identity: Cleanup alias in the in-memory entity after an alias deletion by ID [link]
core/identity: Disallow entity alias creation/update if a conflicting alias exists for the target entity and mount combination [link]
core: Fix a deadlock on HA leadership transfer [link]
core: Fix warnings logged on perf standbys re stored versions [link]
core: fix byte printing for diagnose disk checks [link]
core: revert some unintentionally downgraded dependencies from 1.9.0-rc1 [link]
database/couchbase: change default template to truncate username at 128 characters [link]
database/postgres: Update postgres library (github.com/lib/pq) to properly remove terminated TLS connections from the connection pool. [link]
http (enterprise): Always forward internal/counters endpoints from perf standbys to active node
http: removed unpublished true from logical_system path, making openapi spec consistent with documentation [link]
identity/token: Adds missing call to unlock mutex in key deletion error handling [link]
identity: Fail alias rename if the resulting (name,accessor) exists already [link]
identity: Fix a panic on arm64 platform when doing identity I/O. [link]
identity: Fix regression preventing startup when aliases were created pre-1.9. [link]
identity: dedup from_entity_ids when merging two entities [link]
identity: disallow creation of role without a key parameter [link]
identity: do not allow a role's token_ttl to be longer than the signing key's verification_ttl [link]
identity: merge associated entity groups when merging entities [link]
identity: suppress duplicate policies on entities [link]
kmip (enterprise): Fix handling of custom attributes when servicing GetAttributes requests
kmip (enterprise): Fix handling of invalid role parameters within various vault api calls
kmip (enterprise): Forward KMIP register operations to the active node
license: ignore stored terminated license while autoloading is enabled [link]
licensing (enterprise): Revert accidental inclusion of the TDE feature from the module build.
physical/raft: Fix safeio.Rename error when restoring snapshots on windows [link]
pki: Fix regression preventing email addresses being used as a common name within certificates [link]
plugin/couchbase: Fix an issue in which the locking patterns did not allow parallel requests. [link]
plugin/snowflake: Fixed bug where plugin would crash on 32 bit systems [link]
raft (enterprise): Fix panic when updating auto-snapshot config
replication (enterprise): Fix issue where merkle.flushDirty.num_pages metric is not emitted if number
of dirty pages is 0. [link]
replication (enterprise): Fix merkle.saveCheckpoint.num_dirty metric to accurately specify the number 
of dirty pages in the merkle tree at time of checkpoint creation. [link]
sdk/database: Fix a DeleteUser error message on the gRPC client. [link]
secrets/db: Fix bug where Vault can rotate static role passwords early during start up under certain conditions. [link]
secrets/gcp: Fixes a potential panic in the service account policy rollback for rolesets. [link]
secrets/keymgmt (enterprise): Fix support for Azure Managed HSM Key Vault instances. [link]
secrets/openldap: Fix bug where Vault can rotate static role passwords early during start up under certain conditions. link [link]
secrets/transit: Enforce minimum cache size for transit backend and init cache size on transit backend without restart. [link]
storage/postgres: Update postgres library (github.com/lib/pq) to properly remove terminated TLS connections from the connection pool. [link]
storage/raft (enterprise): Ensure that raft autosnapshot backoff retry duration never hits 0s
storage/raft: Detect incomplete raft snapshots in api.RaftSnapshot(), and thereby in module. [link]
storage/raft: Fix regression in 1.9.0-rc1 that changed how time is represented in Raft logs; this prevented using a raft db created pre-1.9. [link]
storage/raft: Support module in auto-join [link]
transform (enterprise): Enforce minimum cache size for Transform backend and reset cache size without a restart
transform (enterprise): Fix an error where the decode response of an expired token is an empty result rather than an error.
ui: Adds pagination to auth methods list view [link]
ui: Fix bug where capabilities check on secret-delete-menu was encoding the forward slashes. [link]
ui: Fix bug where edit role form on auth method is invalid by default [link]
ui: Fixed api explorer routing bug [link]
ui: Fixed text overflow in flash messages [link]
ui: Fixes issue with the number of PGP Key inputs not matching the key shares number in the initialization form on change [link]
ui: Fixes metrics page when read on counter config not allowed [link]
ui: Remove spinner after token renew [link]
ui: Removes ability to tune token_type for token auth methods [link]
ui: Show day of month instead of day of year in the expiration warning dialog [link]
ui: fix issue where on MaskedInput on auth methods if tab it would clear the value. [link]
ui: fix missing navbar items on login to namespace [link]
ui: update bar chart when model changes [link]
ui: updating database TTL picker help text. [link]
"
60,
61,"1.8.5
November 4, 2021
BUG FIXES:

auth/aws: fix config/rotate-root to store new key [link]
core/identity: Cleanup alias in the in-memory entity after an alias deletion by ID [link]
core/identity: Disallow entity alias creation/update if a conflicting alias exists for the target entity and mount combination [link]
http (enterprise): Always forward internal/counters endpoints from perf standbys to active node
identity/token: Adds missing call to unlock mutex in key deletion error handling [link]
kmip (enterprise): Fix handling of custom attributes when servicing GetAttributes requests
kmip (enterprise): Fix handling of invalid role parameters within various vault api calls
kmip (enterprise): Forward KMIP register operations to the active node
secrets/keymgmt (enterprise): Fix support for Azure Managed HSM Key Vault instances. [link]
transform (enterprise): Fix an error where the decode response of an expired token is an empty result rather than an error.
"
62,"1.7.6
November 4, 2021
BUG FIXES:

auth/aws: fix config/rotate-root to store new key [link]
core/identity: Cleanup alias in the in-memory entity after an alias deletion by ID [link]
core/identity: Disallow entity alias creation/update if a conflicting alias exists for the target entity and mount combination [link]
core: Fix a deadlock on HA leadership transfer [link]
http (enterprise): Always forward internal/counters endpoints from perf standbys to active node
kmip (enterprise): Fix handling of custom attributes when servicing GetAttributes requests
kmip (enterprise): Fix handling of invalid role parameters within various vault api calls
kmip (enterprise): Forward KMIP register operations to the active node
secrets/keymgmt (enterprise): Fix support for Azure Managed HSM Key Vault instances. [link]
storage/postgres: Update postgres library (github.com/lib/pq) to properly remove terminated TLS connections from the connection pool. [link]
database/postgres: Update postgres library (github.com/lib/pq) to properly remove terminated TLS connections from the connection pool. [link]
transform (enterprise): Fix an error where the decode response of an expired token is an empty result rather than an error.
"
63,"1.8.4
6 October 2021
IMPROVEMENTS:

core: Update Oracle Cloud library to enable seal integration with the uk-gov-london-1 region [link]

BUG FIXES:

core: Fix a deadlock on HA leadership transfer [link]
database/postgres: Update postgres library (github.com/lib/pq) to properly remove terminated TLS connections from the connection pool. [link]
pki: Fix regression preventing email addresses being used as a common name within certificates [link]
storage/postgres: Update postgres library (github.com/lib/pq) to properly remove terminated TLS connections from the connection pool. [link]
ui: Fix bug where edit role form on auth method is invalid by default [link]
"
64,"1.8.3
29 September 2021
IMPROVEMENTS:

secrets/pki: Allow signing of self-issued certs with a different signature algorithm. [link]

BUG FIXES:

agent: Avoid possible module panic when using persistent cache. [link]
core (enterprise): Allow deletion of stored licenses on DR secondary nodes
core (enterprise): Fix bug where password generation through password policies do not work on namespaces if performed outside a request callback or from an external plugin. [link]
core (enterprise): Only delete quotas on primary cluster. [link]
identity: Fail alias rename if the resulting (name,accessor) exists already [link]
raft (enterprise): Fix panic when updating auto-snapshot config
secrets/db: Fix bug where Vault can rotate static role passwords early during start up under certain conditions. [link]
secrets/openldap: Fix bug where Vault can rotate static role passwords early during start up under certain conditions. link [link]
secrets/transit: Enforce minimum cache size for transit backend and init cache size on transit backend without restart. [link]
storage/raft: Detect incomplete raft snapshots in api.RaftSnapshot(), and thereby in module. [link]
ui: Fix bug where capabilities check on secret-delete-menu was encoding the forward slashes. [link]
ui: Show day of month instead of day of year in the expiration warning dialog [link]
"
65,"1.7.5
29 September 2021
IMPROVEMENTS:

secrets/pki: Allow signing of self-issued certs with a different signature algorithm. [link]

BUG FIXES:

agent: Avoid possible module panic when using persistent cache. [link]
core (enterprise): Fix bug where password generation through password policies do not work on namespaces if performed outside a request callback or from an external plugin. [link]
core (enterprise): Only delete quotas on primary cluster. [link]
identity: Fail alias rename if the resulting (name,accessor) exists already [link]
raft (enterprise): Fix panic when updating auto-snapshot config
secrets/db: Fix bug where Vault can rotate static role passwords early during start up under certain conditions. [link]
secrets/openldap: Fix bug where Vault can rotate static role passwords early during start up under certain conditions. link [link]
storage/raft: Detect incomplete raft snapshots in api.RaftSnapshot(), and thereby in module. [link]
ui: Fixed api explorer routing bug [link]
"
66,"1.6.7
29 September 2021
BUG FIXES:

core (enterprise): Fix bug where password generation through password policies do not work on namespaces if performed outside a request callback or from an external plugin. [link]
core (enterprise): Only delete quotas on primary cluster. [link]
secrets/db: Fix bug where Vault can rotate static role passwords early during start up under certain conditions. [link]
secrets/openldap: Fix bug where Vault can rotate static role passwords early during start up under certain conditions. link [link]
"
67,"1.8.2
26 August 2021
CHANGES:

go: Update go version to 1.16.7 [link]

BUG FIXES:

auth/aws: Fixes ec2 login no longer supporting DSA signature verification [link]
cli: vault debug now puts newlines after every captured log line. [link]
database/couchbase: change default template to truncate username at 128 characters [link]
identity: Fix a panic on arm64 platform when doing identity I/O. [link]
physical/raft: Fix safeio.Rename error when restoring snapshots on windows [link]
plugin/snowflake: Fixed bug where plugin would crash on 32 bit systems [link]
sdk/database: Fix a DeleteUser error message on the gRPC client. [link]
secrets/gcp: Fixes a potential panic in the service account policy rollback for rolesets. [link]
ui: Fixed api explorer routing bug [link]
ui: Fixes metrics page when read on counter config not allowed [link]
ui: fix issue where on MaskedInput on auth methods if tab it would clear the value. [link]
"
68,"1.7.4
26 August 2021
SECURITY:

UI Secret Caching: The Vault UI erroneously cached and exposed user-viewed secrets between authenticated sessions in a single shared browser, if the browser window / tab was not refreshed or closed between logout and a subsequent login. This vulnerability, CVE-2021-38554, was fixed in Vault 1.8.0 and will be addressed in pending 1.7.4 / 1.6.6 releases.

CHANGES:

go: Update go version to 1.15.15 [link]

IMPROVEMENTS:

ui: Updated node to v14, latest stable build [link]

BUG FIXES:

replication (enterprise): Fix a panic that could occur when checking the last wal and the log shipper buffer is empty.
cli: vault debug now puts newlines after every captured log line. [link]
database/couchbase: change default template to truncate username at 128 characters [link]
physical/raft: Fix safeio.Rename error when restoring snapshots on windows [link]
secrets/database/cassandra: Fixed issue where the PEM parsing logic of module and module didn't work for CA-only configurations [link]
secrets/database: Fixed an issue that prevented external database plugin processes from restarting after a shutdown. [link]
ui: Automatically refresh the page when user logs out [link]
ui: Fix database role CG access [link]
ui: Fixes metrics page when read on counter config not allowed [link]
ui: fix control group access for database credential [link]
ui: fix oidc login with Safari [link]

1.7.3
June 16th, 2021
CHANGES:

go: Update go version to 1.15.13 [link]

IMPROVEMENTS:

db/cassandra: Added tls_server_name to specify server name for TLS validation [link]
ui: Add specific error message if unseal fails due to license [link]

BUG FIXES:

auth/jwt: Updates the link library to module to
bring in a verification key caching fix. [link]
core (enterprise): serialize access to HSM entropy generation to avoid errors in concurrent key generation.
secret: fix the bug where transit encrypt batch doesn't work with key_version [link]
secrets/ad: Forward all creds requests to active node [link] [link]
tokenutil: Perform the num uses check before token type. [link]
"
69,"1.6.6
26 August 2021
SECURITY:

UI Secret Caching: The Vault UI erroneously cached and exposed user-viewed secrets between authenticated sessions in a single shared browser, if the browser window / tab was not refreshed or closed between logout and a subsequent login. This vulnerability, CVE-2021-38554, was fixed in Vault 1.8.0 and will be addressed in pending 1.7.4 / 1.6.6 releases.

CHANGES:

go: Update go version to 1.15.15 [link]

IMPROVEMENTS:

db/cassandra: Added tls_server_name to specify server name for TLS validation [link]

BUG FIXES:

physical/raft: Fix safeio.Rename error when restoring snapshots on windows [link]
secret: fix the bug where transit encrypt batch doesn't work with key_version [link]
secrets/database: Fixed an issue that prevented external database plugin processes from restarting after a shutdown. [link]
ui: Automatically refresh the page when user logs out [link]
ui: Fixes metrics page when read on counter config not allowed [link]
ui: fix oidc login with Safari [link]
"
70,"1.8.1
August 5th, 2021
CHANGES:

go: Update go version to 1.16.6 [link]

IMPROVEMENTS:

serviceregistration: add module metadata value for Consul registration. [link]

BUG FIXES:

auth/aws: Remove warning stating AWS Token TTL will be capped by the Default Lease TTL. [link]
auth/jwt: Fixes OIDC auth from the Vault UI when using module as the module. [link]
core (enterprise): Disallow autogenerated licenses to be used in diagnose even when config is specified
core: fix byte printing for diagnose disk checks [link]
identity: do not allow a role's token_ttl to be longer than the signing key's verification_ttl [link]
"
71,"1.8.0
July 28th, 2021
CHANGES:

agent: Errors in the template engine will no longer cause agent to exit unless
explicitly defined to do so. A new configuration parameter,
module, within the new top-level stanza, module, can
be set to module in order to cause agent to exit. Note that for agent to exit if
module is set to module, module must
be also set to module. Otherwise, the template engine will log an error but then
restart its internal runner. [link]
agent: Update to use IAM Service Account Credentials endpoint for signing JWTs
when using GCP Auto-Auth method [link]
core (enterprise): License/EULA changes that ensure the presence of a valid HashiCorp license to
start Vault. More information is available in the link

FEATURES:

GCP Secrets Engine Static Accounts: Adds ability to use existing service accounts for generation
  of service account keys and access tokens. [link]
Key Management Secrets Engine (Enterprise): Adds general availability for distributing and managing keys in AWS KMS. [link]
License Autoloading (Enterprise): Licenses may now be automatically loaded from the environment or disk.
MySQL Database UI: The UI now supports adding and editing MySQL connections in the database secret engine [link]
Vault Diagnose: A new module command to detect common issues with vault server setups.

IMPROVEMENTS:

agent/template: Added static_secret_render_interval to specify how often to fetch non-leased secrets [link]
agent: Allow Agent auto auth to read symlinked JWT files [link]
api: Allow a leveled logger to be provided to module through module. [link]
auth/aws: Underlying error included in validation failure message. [link]
cli/api: Add lease lookup command [link]
core: Add module to telemetry config [link]
core: Add a darwin/arm64 binary release supporting the Apple M1 CPU [link]
core: Add a small (<1s) exponential backoff to failed TCP listener Accept failures. [link]
core (enterprise): Add controlled capabilities to control group policy stanza
core: Add metrics for standby node forwarding. [link]
core: Add metrics to report if a node is a perf standby, if a node is a dr secondary or primary, and if a node is a perf secondary or primary. [link]
core: Send notifications to systemd on start, stop, and configuration reload. [link]
core: add irrevocable lease list and count apis [link]
core: allow arbitrary length stack traces upon receiving SIGUSR2 (was 32MB) [link]
db/cassandra: Added tls_server_name to specify server name for TLS validation [link]
go: Update to Go 1.16.5 [link]
raft: Improve raft batch size selection [link]
raft: change freelist type to map and set nofreelistsync to true [link]
replication: Delay evaluation of X-Vault-Index headers until merkle sync completes.
secrets/rabbitmq: Add ability to customize dynamic usernames [link]
secrets/ad: Add module endpoint to allow rotations of service accounts. [link]
secrets/aws: add IAM tagging support for iam_user roles [link]
secrets/aws: add ability to provide a role session name when generating STS credentials [link]
secrets/database/elasticsearch: Add ability to customize dynamic usernames [link]
secrets/database/influxdb: Add ability to customize dynamic usernames [link]
secrets/database/mongodb: Add ability to customize module, module, and module [link]
secrets/database/mongodb: Increased throughput by allowing for multiple request threads to simultaneously update users in MongoDB [link]
secrets/database/mongodbatlas: Adds the ability to customize username generation for dynamic users in MongoDB Atlas. [link]
secrets/database/redshift: Add ability to customize dynamic usernames [link]
secrets/database/snowflake: Add ability to customize dynamic usernames [link]
ssh: add support for templated values in SSH CA DefaultExtensions [link]
storage/raft/autopilot (enterprise): Enable Autopilot on DR secondary clusters
storage/raft: Support autopilot for HA only raft storage. [link]
ui: Add Validation to KV secret engine [link]
ui: Add database secret engine support for MSSQL [link]
ui: Add push notification message when selecting okta auth. [link]
ui: Add regex validation to Transform Template pattern input [link]
ui: Add specific error message if unseal fails due to license [link]
ui: Add validation support for open api form fields [link]
ui: Added auth method descriptions to UI login page [link]
ui: JSON fields on database can be cleared on edit [link]
ui: Obscure secret values on input and displayOnly fields like certificates. [link]
ui: Redesign of KV 2 Delete toolbar. [link]
ui: Replace tool partials with components. [link]
ui: Show description on secret engine list [link]
ui: Update ember to latest LTS and upgrade UI dependencies [link]
ui: Update partials to components [link]
ui: Updated ivy code mirror component for consistency [link]
ui: Updated node to v14, latest stable build [link]
ui: Updated search select component styling [link]
ui: add transform secrets engine to features list [link]
ui: add validations for duplicate path kv engine [link]
ui: show site-wide banners for license warnings if applicable [link]
ui: update license page with relevant autoload info [link]

DEPRECATIONS:

secrets/gcp: Deprecated the module and module paths for generating
  secrets for rolesets. Use module and module instead. [link]

BUG FIXES:

activity: Omit wrapping tokens and control groups from client counts [link]
agent/cert: Fix issue where the API client on agent was not honoring certificate
  information from the auto-auth config map on renewals or retries. [link]
agent/template: fix command shell quoting issue [link]
agent: Fixed agent templating to use configured tls servername values [link]
agent: fix timestamp format in log messages from the templating engine [link]
auth/approle: fixing dereference of nil pointer [link]
auth/jwt: Updates the link library to module to
  bring in a verification key caching fix. [link]
auth/kubernetes: Fix AliasLookahead to correctly extract ServiceAccount UID when using ephemeral JWTs [link]
auth/ldap: Fix a bug where the LDAP auth method does not return the request_timeout configuration parameter on config read. [link]
cli: Add support for response wrapping in module and module with output format other than module. [link]
cli: vault delete and vault kv delete should support the same output options (e.g. -format) as vault write. [link]
core (enterprise): Fix orphan return value from auth methods executed on performance standby nodes.
core (enterprise): Fix plugins mounted in namespaces being unable to use password policies [link]
core (enterprise): serialize access to HSM entropy generation to avoid errors in concurrent key generation.
core/metrics: Add generic KV mount support for vault.kv.secret.count telemetry metric [link]
core: Fix cleanup of storage entries from cubbyholes within namespaces. [link]
core: Fix edge cases in the configuration endpoint for barrier key autorotation. [link]
core: Fix goroutine leak when updating rate limit quota [link]
core: Fix race that allowed remounting on path used by another mount [link]
core: Fix storage entry leak when revoking leases created with non-orphan batch tokens. [link]
core: Fixed double counting of http requests after operator stepdown [link]
core: correct logic for renewal of leases nearing their expiration time. [link]
identity: Use correct mount accessor when refreshing external group memberships. [link]
mongo-db: default username template now strips invalid '.' characters [link]
pki: Only remove revoked entry for certificates during tidy if they are past their NotAfter value [link]
replication: Fix panic trying to update walState during identity group invalidation.
replication: Fix: mounts created within a namespace that was part of an Allow
  filtering rule would not appear on performance secondary if created after rule
  was defined.
secret/pki: use case insensitive domain name comparison as per RFC1035 section 2.3.3
secret: fix the bug where transit encrypt batch doesn't work with key_version [link]
secrets/ad: Forward all creds requests to active node [link] [link]
secrets/database/cassandra: Fixed issue where hostnames were not being validated when using TLS [link]
secrets/database/cassandra: Fixed issue where the PEM parsing logic of module and module didn't work for CA-only configurations [link]
secrets/database/cassandra: Updated default statement for password rotation to allow for special characters. This applies to root and static credentials. [link]
secrets/database: Fix marshalling to allow providing numeric arguments to external database plugins. [link]
secrets/database: Fixed an issue that prevented external database plugin processes from restarting after a shutdown. [link]
secrets/database: Fixed minor race condition when rotate-root is called [link]
secrets/database: Fixes issue for V4 database interface where module wasn't falling back to using module if module is module [link]
secrets/openldap: Fix bug where schema was not compatible with rotate-root link [link]
storage/dynamodb: Handle throttled batch write requests by retrying, without which writes could be lost. [link]
storage/raft: Support cluster address change for nodes in a cluster managed by autopilot [link]
storage/raft: Tweak creation of vault.db file [link]
storage/raft: leader_tls_servername wasn't used unless leader_ca_cert_file and/or mTLS were configured. [link]
tokenutil: Perform the num uses check before token type. [link]
transform (enterprise): Fix an issue with malformed transform configuration
  storage when upgrading from 1.5 to 1.6.  See Upgrade Notes for 1.6.x.
ui: Add role from database connection automatically populates the database for new role [link]
ui: Add root rotation statements support to appropriate database secret engine plugins [link]
ui: Automatically refresh the page when user logs out [link]
ui: Fix Version History queryParams on LinkedBlock [link]
ui: Fix bug where database secret engines with custom names cannot delete connections [link]
ui: Fix bug where the UI does not recognize version 2 KV until refresh, and fix [object Object] error message [link]
ui: Fix database role CG access [link]
ui: Fix date display on expired token notice [link]
ui: Fix entity group membership and metadata not showing [link]
ui: Fix error message caused by control group [link]
ui: Fix footer URL linking to the correct version changelog. [link]
ui: Fix issue where logging in without namespace input causes error [link]
ui: Fix namespace-bug on login [link]
ui: Fix status menu no showing on login [link]
ui: Fix text link URL on database roles list [link]
ui: Fixed and updated lease renewal picker [link]
ui: fix control group access for database credential [link]
ui: fix issue where select-one option was not showing in secrets database role creation [link]
ui: fix oidc login with Safari [link]
"
72,Release vault v1.8.0-rc2
73,Release vault v1.8.0-rc1
74,Release vault v1.7.3
75,"1.7.2
May 20th, 2021
SECURITY:

Non-Expiring Leases: Vault and Vault Enterprise renewed nearly-expiring token
leases and dynamic secret leases with a zero-second TTL, causing them to be
treated as non-expiring, and never revoked. This issue affects Vault and Vault
Enterprise versions 0.10.0 through 1.7.1, and is fixed in 1.5.9, 1.6.5, and
1.7.2 (CVE-2021-32923).

CHANGES:

agent: Update to use IAM Service Account Credentials endpoint for signing JWTs
when using GCP Auto-Auth method [link]
auth/gcp: Update to v0.9.1 to use IAM Service Account Credentials API for
signing JWTs [link]

IMPROVEMENTS:

api, agent: LifetimeWatcher now does more retries when renewal failures occur.  This also impacts Agent auto-auth and leases managed via Agent caching. [link]
auth/aws: Underlying error included in validation failure message. [link]
http: Add optional HTTP response headers for hostname and raft node ID [link]
secrets/aws: add ability to provide a role session name when generating STS credentials [link]
secrets/database/mongodb: Add ability to customize module, module, and module [link]
secrets/database/mongodb: Increased throughput by allowing for multiple request threads to simultaneously update users in MongoDB [link]

BUG FIXES:

agent/cert: Fix issue where the API client on agent was not honoring certificate
information from the auto-auth config map on renewals or retries. [link]
agent: Fixed agent templating to use configured tls servername values [link]
core (enterprise): Fix plugins mounted in namespaces being unable to use password policies [link]
core: correct logic for renewal of leases nearing their expiration time. [link]
identity: Use correct mount accessor when refreshing external group memberships. [link]
replication: Fix panic trying to update walState during identity group invalidation. [link]
secrets/database: Fix marshalling to allow providing numeric arguments to external database plugins. [link]
secrets/database: Fixed minor race condition when rotate-root is called [link]
secrets/database: Fixes issue for V4 database interface where module wasn't falling back to using module if module is module [link]
secrets/keymgmt (enterprise): Fixes audit logging for the read key response.
storage/raft: Support cluster address change for nodes in a cluster managed by autopilot [link]
ui: Fix entity group membership and metadata not showing [link]
ui: Fix text link URL on database roles list [link]
"
76,"1.6.5
May 20th, 2021
SECURITY:

Non-Expiring Leases: Vault and Vault Enterprise renewed nearly-expiring token
leases and dynamic secret leases with a zero-second TTL, causing them to be
treated as non-expiring, and never revoked. This issue affects Vault and Vault
Enterprise versions 0.10.0 through 1.7.1, and is fixed in 1.5.9, 1.6.5, and
1.7.2 (CVE-2021-32923).

CHANGES:

agent: Update to use IAM Service Account Credentials endpoint for signing JWTs
when using GCP Auto-Auth method [link]
auth/gcp: Update to v0.8.1 to use IAM Service Account Credentials API for
signing JWTs [link]

BUG FIXES:

core (enterprise): Fix plugins mounted in namespaces being unable to use password policies [link]
core: correct logic for renewal of leases nearing their expiration time. [link]
secrets/database: Fix marshalling to allow providing numeric arguments to external database plugins. [link]
secrets/database: Fixes issue for V4 database interface where module wasn't falling back to using module if module is module [link]
ui: Fix namespace-bug on login [link]
"
77,"1.5.9
May 20th, 2021
SECURITY:

Non-Expiring Leases: Vault and Vault Enterprise renewed nearly-expiring token
leases and dynamic secret leases with a zero-second TTL, causing them to be
treated as non-expiring, and never revoked. This issue affects Vault and Vault
Enterprise versions 0.10.0 through 1.7.1, and is fixed in 1.5.9, 1.6.5, and
1.7.2 (CVE-2021-32923).

CHANGES:

agent: Update to use IAM Service Account Credentials endpoint for signing JWTs
when using GCP Auto-Auth method [link]
auth/gcp: Update to v0.7.2 to use IAM Service Account Credentials API for
signing JWTs [link]

BUG FIXES:

core: correct logic for renewal of leases nearing their expiration time. [link]
"
78,Release vault 1.7.1
79,Release vault v1.6.4
80,Release vault v1.5.8
81,"1.7.0
24 March 2021
CHANGES:

go: Update go version to 1.15.8 [link]

FEATURES:

Aerospike Storage Backend: Add support for using Aerospike as a storage backend [link]
agent: Support for persisting the agent cache to disk [link]
auth/jwt: Adds module role parameter and module claim validation. [link]
kmip (enterprise): Use entropy augmentation to generate kmip certificates
sdk: Private key generation in the certutil package now allows custom io.Readers to be used. [link]
secrets/aws: add IAM tagging support for iam_user roles [link]
secrets/database/cassandra: Add ability to customize dynamic usernames [link]
secrets/database/couchbase: Add ability to customize dynamic usernames [link]
secrets/database/mongodb: Add ability to customize dynamic usernames [link]
secrets/database/mssql: Add ability to customize dynamic usernames [link]
secrets/database/mysql: Add ability to customize dynamic usernames [link]
secrets/database/postgresql: Add ability to customize dynamic usernames [link]
secrets/openldap: Added dynamic roles to OpenLDAP similar to the combined database engine [link]
secrets/terraform: New secret engine for managing Terraform Cloud API tokens [link]
ui: Adds check for feature flag on application, and updates namespace toolbar on login if present [link]
ui: Adds the wizard to the Database Secret Engine [link]
ui: Database secrets engine, supporting MongoDB only [link]

IMPROVEMENTS:

agent: Add template-retry stanza to agent config. [link]
agent: Agent can now run as a Windows service. [link]
agent: Better concurrent request handling on identical requests proxied through Agent. [link]
agent: Route templating server through cache when persistent cache is enabled. [link]
agent: change auto-auth to preload an existing token on start [link]
auth/ldap: Improve consistency in error messages [link]
auth/okta: Adds support for Okta Verify TOTP MFA. [link]
changelog: Add dependencies listed in dependencies/2-25-21 [link]
command/debug: Now collects logs (at level module) as a periodic output. [link]
core (enterprise): ""vault status"" command works when a namespace is set. [link]
core (enterprise): Update Trial Enterprise license from 30 minutes to 6 hours
core/metrics: Added ""vault operator usage"" command. [link]
core/metrics: New telemetry metrics reporting lease expirations by time interval and namespace [link]
core: Added active since timestamp to the status output of active nodes. [link]
core: Check audit device with a test message before adding it. [link]
core: Track barrier encryption count and automatically rotate after a large number of operations or on a schedule [link]
core: add metrics for active entity count [link]
core: add partial month client count api [link]
core: dev mode listener allows unauthenticated sys/metrics requests [link]
core: reduce memory used by leases [link]
secrets/gcp: Truncate ServiceAccount display names longer than 100 characters. [link]
storage/raft (enterprise): Listing of peers is now allowed on DR secondary
cluster nodes, as an update operation that takes in DR operation token for
authenticating the request.
ui: Clarify language on usage metrics page empty state [link]
ui: Customize MongoDB input fields on Database Secrets Engine [link]
ui: Upgrade Ember-cli from 3.8 to 3.22. [link]
ui: Upgrade Storybook from 5.3.19 to 6.1.17. [link]
ui: Upgrade date-fns from 1.3.0 to 2.16.1. [link]
ui: Upgrade dependencies to resolve potential JS vulnerabilities [link]
ui: better errors on Database secrets engine role create [link]

BUG FIXES:

agent: Only set the namespace if the VAULT_NAMESPACE env var isn't present [link]
agent: Set TokenParent correctly in the Index to be cached. [link]
agent: Set namespace for template server in agent. [link]
api/sys/config/ui: Fixes issue where multiple UI custom header values are ignored and only the first given value is used [link]
api: Fixes CORS API methods that were outdated and invalid [link]
auth/jwt: Fixes module validation for provider-specific group and user info fetching. [link]
auth/jwt: Fixes an issue where JWT verification keys weren't updated after a module change. [link]
auth/jwt: Fixes an issue where module were not being validated for JWT auth using
module and module. [link]
auth/oci: Fixes alias name to use the role name, and not the literal string module [link] [link]
consul-template: Update consul-template vendor version and associated dependencies to master, 
pulling in https://github.com/hashicorp/consul-template/pull/1447 [link]
core (enterprise): Limit entropy augmentation during token generation to root tokens. [link]
core (enterprise): Vault EGP policies attached to path * were not correctly scoped to the namespace.
core/identity: Fix deadlock in entity merge endpoint. [link]
core: Avoid deadlocks by ensuring that if grabLockOrStop returns stopped=true, the lock will not be held. [link]
core: Avoid disclosing IP addresses in the errors of unauthenticated requests [link]
core: Fix client.Clone() to include the address [link]
core: Fix duplicate quotas on performance standby nodes. [link]
core: Fix rate limit resource quota migration from 1.5.x to 1.6.x by ensuring module and
module are set appropriately. [link]
core: Make all APIs that report init status consistent, and make them report
initialized=true when a Raft join is in progress. [link]
core: Make the response to an unauthenticated request to sys/internal endpoints consistent regardless of mount existence. [link]
core: Turn off case sensitivity for allowed entity alias check during token create operation. [link]
http: change max_request_size to be unlimited when the config value is less than 0 [link]
license: Fix license caching issue that prevents new licenses to get picked up by the license manager [link]
metrics: Protect emitMetrics from panicking during post-seal [link]
quotas/rate-limit: Fix quotas enforcing old rate limit quota paths [link]
replication (enterprise): Fix bug with not starting merkle sync while requests are in progress
secrets/database/influxdb: Fix issue where not all errors from InfluxDB were being handled [link]
secrets/database/mysql: Fixes issue where the DisplayName within generated usernames was the incorrect length [link]
secrets/database: Sanitize module field when reading database plugin config [link]
secrets/gcp: Fix issue with account and iam_policy roleset WALs not being removed after attempts when GCP project no longer exists [link]
secrets/transit: allow for null string to be used for optional parameters in encrypt and decrypt [link]
serviceregistration: Fix race during shutdown of Consul service registration. [link]
storage/raft (enterprise): Automated snapshots with Azure required specifying
module, which should have had as a default module.
storage/raft (enterprise): Reading a non-existent auto snapshot config now returns 404.
storage/raft (enterprise): The parameter aws_s3_server_kms_key was misnamed and
didn't work.  Renamed to aws_s3_kms_key, and make it work so that when provided
the given key will be used to encrypt the snapshot using AWS KMS.
transform (enterprise): Fix bug tokenization handling metadata on exportable stores
transform (enterprise): Fix bug where tokenization store changes are persisted but don't take effect
transform (enterprise): Fix transform configuration not handling module parameter on the legacy path
transform (enterprise): Make expiration timestamps human readable
transform (enterprise): Return false for invalid tokens on the validate endpoint rather than returning an HTTP error
ui: Fix bug in Transform secret engine when a new role is added and then removed from a transformation [link]
ui: Fix bug that double encodes secret route when there are spaces in the path and makes you unable to view the version history. [link]
ui: Fix expected response from feature-flags endpoint [link]
ui: Fix footer URL linking to the correct version changelog. [link]
"
82,Release vault v1.7.0-rc2
83,"CHANGES:

go: Update go version to 1.15.8 [link]

FEATURES:

Aerospike Storage Backend: Add support for using Aerospike as a storage backend [link]
agent: Support for persisting the agent cache to disk [link]
auth/jwt: Adds module role parameter and module claim validation. [link]
kmip (enterprise): Use entropy augmentation to generate kmip certificates
sdk: Private key generation in the certutil package now allows custom io.Readers to be used. [link]
secrets/aws: add IAM tagging support for iam_user roles [link]
secrets/database/cassandra: Add ability to customize dynamic usernames [link]
secrets/database/couchbase: Add ability to customize dynamic usernames [link]
secrets/database/mongodb: Add ability to customize dynamic usernames [link]
secrets/database/mssql: Add ability to customize dynamic usernames [link]
secrets/database/mysql: Add ability to customize dynamic usernames [link]
secrets/database/postgresql: Add ability to customize dynamic usernames [link]
secrets/openldap: Added dynamic roles to OpenLDAP similar to the combined database engine [link]
secrets/terraform: New secret engine for managing Terraform Cloud API tokens [link]
ui: Adds check for feature flag on application, and updates namespace toolbar on login if present [link]
ui: Adds the wizard to the Database Secret Engine [link]
ui: Database secrets engine, supporting MongoDB only [link]

IMPROVEMENTS:

agent: Add template-retry stanza to agent config. [link]
agent: Agent can now run as a Windows service. [link]
agent: Better concurrent request handling on identical requests proxied through Agent. [link]
agent: Route templating server through cache when persistent cache is enabled. [link]
agent: change auto-auth to preload an existing token on start [link]
auth/ldap: Improve consistency in error messages [link]
auth/okta: Adds support for Okta Verify TOTP MFA. [link]
changelog: Add dependencies listed in dependencies/2-25-21 [link]
command/debug: Now collects logs (at level module) as a periodic output. [link]
core (enterprise): ""vault status"" command works when a namespace is set. [link]
core (enterprise): Update Trial Enterprise license from 30 minutes to 6 hours
core/metrics: Added ""vault operator usage"" command. [link]
core/metrics: New telemetry metrics reporting lease expirations by time interval and namespace [link]
core: Added active since timestamp to the status output of active nodes. [link]
core: Check audit device with a test message before adding it. [link]
core: Track barrier encryption count and automatically rotate after a large number of operations or on a schedule [link]
core: add metrics for active entity count [link]
core: add partial month client count api [link]
core: dev mode listener allows unauthenticated sys/metrics requests [link]
core: reduce memory used by leases [link]
secrets/gcp: Truncate ServiceAccount display names longer than 100 characters. [link]
storage/raft (enterprise): Listing of peers is now allowed on DR secondary
cluster nodes, as an update operation that takes in DR operation token for
authenticating the request.
ui: Clarify language on usage metrics page empty state [link]
ui: Customize MongoDB input fields on Database Secrets Engine [link]
ui: Upgrade Ember-cli from 3.8 to 3.22. [link]
ui: Upgrade Storybook from 5.3.19 to 6.1.17. [link]
ui: Upgrade date-fns from 1.3.0 to 2.16.1. [link]
ui: Upgrade dependencies to resolve potential JS vulnerabilities [link]
ui: better errors on Database secrets engine role create [link]

BUG FIXES:

agent: Only set the namespace if the VAULT_NAMESPACE env var isn't present [link]
agent: Set TokenParent correctly in the Index to be cached. [link]
agent: Set namespace for template server in agent. [link]
api/sys/config/ui: Fixes issue where multiple UI custom header values are ignored and only the first given value is used [link]
api: Fixes CORS API methods that were outdated and invalid [link]
auth/jwt: Fixes module validation for provider-specific group and user info fetching. [link]
auth/jwt: Fixes an issue where JWT verification keys weren't updated after a module change. [link]
auth/jwt: Fixes an issue where module were not being validated for JWT auth using
module and module. [link]
auth/oci: Fixes alias name to use the role name, and not the literal string module [link] [link]
consul-template: Update consul-template vendor version and associated dependencies to master, 
pulling in https://github.com/hashicorp/consul-template/pull/1447 [link]
core (enterprise): Limit entropy augmentation during token generation to root tokens. [link]
core (enterprise): Vault EGP policies attached to path * were not correctly scoped to the namespace.
core/identity: Fix deadlock in entity merge endpoint. [link]
core: Avoid deadlocks by ensuring that if grabLockOrStop returns stopped=true, the lock will not be held. [link]
core: Avoid disclosing IP addresses in the errors of unauthenticated requests [link]
core: Fix client.Clone() to include the address [link]
core: Fix duplicate quotas on performance standby nodes. [link]
core: Fix rate limit resource quota migration from 1.5.x to 1.6.x by ensuring module and
module are set appropriately. [link]
core: Make all APIs that report init status consistent, and make them report
initialized=true when a Raft join is in progress. [link]
core: Make the response to an unauthenticated request to sys/internal endpoints consistent regardless of mount existence. [link]
core: Turn off case sensitivity for allowed entity alias check during token create operation. [link]
http: change max_request_size to be unlimited when the config value is less than 0 [link]
license: Fix license caching issue that prevents new licenses to get picked up by the license manager [link]
metrics: Protect emitMetrics from panicking during post-seal [link]
quotas/rate-limit: Fix quotas enforcing old rate limit quota paths [link]
replication (enterprise): Fix bug with not starting merkle sync while requests are in progress
secrets/database/influxdb: Fix issue where not all errors from InfluxDB were being handled [link]
secrets/database/mysql: Fixes issue where the DisplayName within generated usernames was the incorrect length [link]
secrets/database: Sanitize module field when reading database plugin config [link]
secrets/gcp: Fix issue with account and iam_policy roleset WALs not being removed after attempts when GCP project no longer exists [link]
secrets/transit: allow for null string to be used for optional parameters in encrypt and decrypt [link]
serviceregistration: Fix race during shutdown of Consul service registration. [link]
storage/raft (enterprise): Automated snapshots with Azure required specifying
module, which should have had as a default module.
storage/raft (enterprise): Reading a non-existent auto snapshot config now returns 404.
storage/raft (enterprise): The parameter aws_s3_server_kms_key was misnamed and
didn't work.  Renamed to aws_s3_kms_key, and make it work so that when provided
the given key will be used to encrypt the snapshot using AWS KMS.
transform (enterprise): Fix bug tokenization handling metadata on exportable stores
transform (enterprise): Fix bug where tokenization store changes are persisted but don't take effect
transform (enterprise): Fix transform configuration not handling module parameter on the legacy path
transform (enterprise): Make expiration timestamps human readable
transform (enterprise): Return false for invalid tokens on the validate endpoint rather than returning an HTTP error
ui: Fix bug in Transform secret engine when a new role is added and then removed from a transformation [link]
ui: Fix bug that double encodes secret route when there are spaces in the path and makes you unable to view the version history. [link]
ui: Fix expected response from feature-flags endpoint [link]
ui: Fix footer URL linking to the correct version changelog. [link]
"
84,"SECURITY:

Limited Unauthenticated License Read: We addressed a security vulnerability that allowed for the unauthenticated
reading of Vault licenses from DR Secondaries. This vulnerability affects Vault and Vault Enterprise and is
fixed in 1.6.3 (CVE-2021-27668).

CHANGES:

secrets/mongodbatlas: Move from whitelist to access list API [link]

IMPROVEMENTS:

ui: Clarify language on usage metrics page empty state [link]

BUG FIXES:

auth/kubernetes: Cancel API calls to TokenReview endpoint when request context
is closed [link]
core/identity: Fix deadlock in entity merge endpoint. [link]
quotas: Fix duplicate quotas on performance standby nodes. [link]
quotas/rate-limit: Fix quotas enforcing old rate limit quota paths [link]
replication (enterprise): Don't write request count data on DR Secondaries.
Fixes DR Secondaries becoming out of sync approximately every 30s. [link]
secrets/azure (enterprise): Forward service principal credential creation to the
primary cluster if called on a performance standby or performance secondary. [link]
"
85,"SECURITY:

IP Address Disclosure: We fixed a vulnerability where, under some error
conditions, Vault would return an error message disclosing internal IP
addresses. This vulnerability affects Vault and Vault Enterprise and is fixed in
1.6.2 (CVE-2021-3024).
Limited Unauthenticated Remove Peer: As of Vault 1.6, the remove-peer command
on DR secondaries did not require authentication. This issue impacts the
stability of HA architecture, as a bad actor could remove all standby
nodes from a DR
secondary. This issue affects Vault Enterprise 1.6.0 and 1.6.1, and is fixed in
1.6.2 (CVE-2021-3282).
Mount Path Disclosure: Vault previously returned different HTTP status codes for
existent and non-existent mount paths. This behavior would allow unauthenticated
brute force attacks to reveal which paths had valid mounts. This issue affects
Vault and Vault Enterprise and is fixed in 1.6.2 (CVE-2020-25594).

CHANGES:

go: Update go version to 1.15.7 [link]

FEATURES:

ui: Adds check for feature flag on application, and updates namespace toolbar on login if present [link]

IMPROVEMENTS:

core (enterprise): ""vault status"" command works when a namespace is set. [link]
core: reduce memory used by leases [link]
storage/raft (enterprise): Listing of peers is now allowed on DR secondary
cluster nodes, as an update operation that takes in DR operation token for
authenticating the request.

BUG FIXES:

agent: Set namespace for template server in agent. [link]
core: Make the response to an unauthenticated request to sys/internal endpoints consistent regardless of mount existence. [link]
metrics: Protect emitMetrics from panicking during post-seal [link]
secrets/gcp: Fix issue with account and iam_policy roleset WALs not being removed after attempts when GCP project no longer exists [link]
storage/raft (enterprise): Automated snapshots with Azure required specifying
module, which should have had as a default module.
storage/raft (enterprise): Autosnapshots config and storage weren't excluded from
performance replication, causing conflicts and errors.
ui: Fix bug that double encodes secret route when there are spaces in the path and makes you unable to view the version history. [link]
ui: Fix expected response from feature-flags endpoint [link]
"
86,"SECURITY:

IP Address Disclosure: We fixed a vulnerability where, under some error
conditions, Vault would return an error message disclosing internal IP
addresses. This vulnerability affects Vault and Vault Enterprise and is fixed in
1.6.2 and 1.5.7 (CVE-2021-3024).
Mount Path Disclosure: Vault previously returned different HTTP status codes for
existent and non-existent mount paths. This behavior would allow unauthenticated
brute force attacks to reveal which paths had valid mounts. This issue affects
Vault and Vault Enterprise and is fixed in 1.6.2 and 1.5.7 (CVE-2020-25594).

IMPROVEMENTS:

storage/raft (enterprise): Listing of peers is now allowed on DR secondary
cluster nodes, as an update operation that takes in DR operation token for
authenticating the request.

BUG FIXES:

core: Avoid disclosing IP addresses in the errors of unauthenticated requests [link]
core: Make the response to an unauthenticated request to sys/internal endpoints consistent regardless of mount existence. [link]
"
87,Release vault v1.6.1
88,Release vault v1.5.6
89,Release vault v1.6.0
90,Release vault v1.6.0-rc
