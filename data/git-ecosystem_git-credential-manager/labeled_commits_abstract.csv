Commit Message,Score,Correspond Changelog Sentence,Commit Description,Label
Prefer authority from wwwauth[] if present for Azure Repos (#1289),0.66754377,Enable Azure Repos OAuth-mode by default on DevBox (#1245),"Now that Git can forward on the WWW-Authenticate headers from the remote, we no longer need to make a second, redundant, HEAD query to the organisation URL to rediscover the header values. If we have been provided such a header from Git, use it in the first instance! Otherwise continue to make a HEAD query (and cache it). Note this only affects the OAuth mode, just as the authority caching only works here.",0
build(deps): bump DavidAnson/markdownlint-cli2-action from 10.0.1 to 11.0.0 (#1292),0.5001496,Release pipeline fixes #995 #1009 #1061,Bumps DavidAnson/markdownlint-cli2-action from 10.0.1 to 11.0.0.,0
install from source: designate arch linux as unsupported (#1291),0.41949117,Support macOS arm64 installs via Homebrew (#798) ,"Arch Linux was incorrectly added to the install-from-source script and accompanying validation as a .NET-supported distribution, when this is not actually the case. A list of supported distributions can be found here: link Instead of removing unsupported distros, we plan to print out a message notifying users that, while they can be installed, they are not officially validated or supported by the GCM project.",0
install from source: designate archlinux as unsupported,0.40325058,Support macOS arm64 installs via Homebrew (#798) ,"Arch Linux was incorrectly added to the install-from-source script and accompanying validation as a .NET-supported distribution, when this is not actually the case. A list of supported distributions can be found here: link Instead of removing unsupported distros, we plan to print out a message notifying users that, while they can be installed, they are not officially validated or supported by the GCM project.",0
build(deps): bump DavidAnson/markdownlint-cli2-action,0.417691,Release pipeline fixes #995 #1009 #1061,Bumps DavidAnson/markdownlint-cli2-action from 10.0.1 to 11.0.0. - Release notes - Commits updated-dependencies: - dependency-name: DavidAnson/markdownlint-cli2-action   dependency-type: direct:production   update-type: version-update:semver-major ... Signed-off-by: dependabot[bot] support@github.com,0
azrepos: look at wwwauth[] for authority in first instance,0.4522471,Generic OAuth support via config 🎉 #1062,"Use the new wwwauth[] header information from Git to determine the Azure authority for Azure Repos, before needing to resort to a cached value, or making a HEAD call.",0
Read new wwwauth[] input from Git 2.41 (#1288),0.570158,Add preliminary support for OAuth with GitHub AE (requires server support/changes) (#343),,0
Use 127.0.0.1 redirect over localhost for GitHub (#1286),0.55227315,"- Allow overriding the selection of host provider; also supports GitHub Enterprise scenarios (configuration option, migration guide for users of the credential.authority setting) (#59)","Use an IPv4 loopback redirect URL instead of the localhost name. This is in accordance with the recommendation in the OAuth spec^1 and also GitHub's documentation^3. Note that this change depends on an update to the Git Credential Manager OAuth application on GitHub to add the ""link/"" redirect (with a trailing slash!). We will be strictly adding the new URL, and keep the older localhost-based redirect URL untouched for older clients. The change to the OAuth app registration can occur before this is merged. Fixes #594 ",0
streamexttests: use AssertDictionary helper,0.32879582,Guard against null pipe client (#1135),,0
input: parse and surface wwwauth[] Git input args,0.5193073,Improved usability for GitHub auth (#587),Add the new wwwauth[] credential property to the input arguments surfaced to providers and commands.,0
dict: add support for read/writing multidictionaries,0.18846485,Create Linux plaintext store with safer directory permissions (#397),"Add support for reading and writing multi-dictionaries in Git's credential helper I/O format. Multi-dictionaries differ from normal dictionaries by being key:value relation 1:N. Git prepends ""[]"" to the end of keys that should be treated as lists or having mutliple values. An empty value in the list has the effect of cleaning/resetting the values in the list so far. The first multiple-valued key is expected to be 'wwwauth[]' from this patch series: link/",0
github: use 127.0.0.1 redirect over localhost,0.5869516,"- Allow overriding the selection of host provider; also supports GitHub Enterprise scenarios (configuration option, migration guide for users of the credential.authority setting) (#59)","Use an IPv4 loopback redirect URL instead of the localhost name. This is in accordance with the recommendation in the OAuth spec[1] and also GitHub's documentation[2]. Note that this change depends on an update to the Git Credential Manager OAuth application on GitHub to add the ""link/"" redirect (with a trailing slash!). We will be strictly adding the new URL, and keep the older localhost-based redirect URL untouched for older clients. [1] link [2] link",0
Preserve exact original redirect URL in OAuth client (#1281),0.5540647,Handle expired OAuth refresh token for generic auth (#1196),"The OAuth 2.0 spec requires that redirect URLs be matched exactly if specified, including matching trailing slashes. Since the .NET Uri type's .ToString() method will append a trailing slash to the end of path-less URLs (e.g., ""link"" => ""link/"") we need to use the .OriginalString property instead. Shoring up this area in anticipation for changes to support multiple GitHub redirect URLs with #594",0
dotnet: update install from src script to target .NET 7 (#1282),0.6430812,Move to .NET Framework 4.7.2 on Windows (#283),,0
install from source: upgrade to .NET 7.0,0.6981799,Move to .NET Framework 4.7.2 on Windows (#283),Ensure all methods for installing .NET in the Linux install from source script use the .NET 7.0 SDK.,0
dotnet: update install from src script to target .NET 7,0.5936687,Move to .NET Framework 4.7.2 on Windows (#283),,0
Add support for httpCookieFile (#1251),0.5167128,"Respect http.sslCAInfo settings (#242, #411)","Add httpCookieFile support. If httpCookieFile is set in gitconfig, GCM will add cookie headers to requests, such as OAuth2 requests. This does not add support for http.saveCookies.",0
dependencies: migrate from json.net to system.text.json (#1274),0.49608165,Move to .NET Framework 4.7.2 on Windows (#283),"Overview Migrate GCM from JSON.NET to System.Text.Json. The first commit updates to .NET 7.0 to take advantage of certain features like JsonRequired. The second updates Microsoft.Identity.Client so that the workaround for this issue is no longer necessary. The third updates the current global Json.NET dependency to System.Text.Json and ensures it is only used for .NET Framework. The fourth adds a custom converter to handle Bitbucket's use of the non-standard 'scopes' property to provide token endpoint results. The fifth through ninth commits update Trace2Message, the Bitbucket REST API, the GitHub REST API, the Azure DevOps API tests, and OAuth-specific code to use System.Text.Json instead of Json.NET for JSON serialization/deserialization. Performance comparison Comparison runs were done using dotnet-trace with the command printf ""protocol=https\nhost=github.com"" | git-credential-manager get. The machine used was a Mac with a 2.4 GHz 8-Core Intel Core i9 processor running Ventura 13.4. Times are in milliseconds. Individual Run Times | Newtonsoft.json | System.Text.Json | |---------------------|----------------------| | 364.08              | 304.92               | | 366.11              | 305.23               | | 377.31              | 313.09               | | 381.3               | 313.51               | | 373.25              | 297.71               | | 373.98              | 312.78               | | 370.84              | 317.86               | | 368.25              | 311.78               | | 369.79              | 307.69               | Run Summary |             | Newtonsoft.json | System.Text.Json | |-------------|---------------------|----------------------| | Average | 371.66          | 309.40          | | Median  | 370.84              | 311.78               | Analysis Per the above, the transition to System.Text.Json and .NET 7.0 decreased end-to-end execution times by about 17% on average.",0
oauth: preserve exact original redirect URL,0.5187137,Generic OAuth support via config 🎉 #1062,"The OAuth 2.0 spec requires that redirect URLs be matched exactly if specified, including matching trailing slashes. Since the .NET Uri type's .ToString() method will append a trailing slash to the end of path-less URLs (e.g., ""link"" => ""link/"") we need to use the .OriginalString property instead.",0
http: remove CurlCookie,0.48880333,"Respect http.sslCAInfo settings (#242, #411)",,0
http: fix the namespace of CurlCookie.cs,0.45020366,"Respect http.sslCAInfo settings (#242, #411)",Co-authored-by: Matthew John Cheetham mjcheetham@github.com,0
http: modify UseCookies to be set to true,0.5690047,"Respect http.sslCAInfo settings (#242, #411)","Defaults to true, but overrides even if false Co-authored-by: Matthew John Cheetham mjcheetham@github.com",0
http: fix to use string.IsNullOrWhiteSpace,0.32425672,"Respect http.sslCAInfo settings (#242, #411)",Co-authored-by: Matthew John Cheetham mjcheetham@github.com,0
http: fix to use StringComparer,0.40563464,"Respect http.sslCAInfo settings (#242, #411)",Co-authored-by: Matthew John Cheetham mjcheetham@github.com,0
Fix the namespace of CurlCookie.cs,0.4062797,"Refactor namespace, assembly and project names (#500)",Co-authored-by: Matthew John Cheetham mjcheetham@github.com,0
system.text.json: update azure devops tests,0.44129214,- Azure Repos,Update Azure DevOps API tests to use System.Text.Json rather than Json.NET for JSON serialization.,0
system.text.json: update oauth,0.5076428,Handle expired OAuth refresh token for generic auth (#1196),Update OAuth-related code to use System.Text.Json rather than Json.NET for JSON serialization.,0
system.text.json: update github rest api,0.5059313,"Add GitHub OAuth support and refreshed Windows UI (#101, #103)",Update GitHub REST API-related code to use System.Text.Json rather than Json.NET for JSON deserialization.,0
system.text.json: update bitbucket rest api,0.54578936,Updated Bitbucket UI to separate OAuth and username/password options (#754),Update Bitbucket REST API-related code to use System.Text.Json rather than Json.NET for JSON deserialization. This change also removes Bitbucket API properties (for Cloud and DC) that we are not using.,0
system.text.json: trace2message updates,0.45947692,"Add TRACE2 support(#1131, #1151, #1156, #1162)",Update the Trace2Message class to use System.Text.Json instead of Json.NET for event format target messages. Note that ordering was purposefully added to ensure the expected format of the new JSON tests.,0
system.text.json: bitbucket rest api custom converter,0.53118145,"Fix a bug in parsing Bitbucket 2FA responses (#128, #126)","The Bitbucket authority returns the non-standard 'scopes' property with token endpoint results. With Json.NET, it was possible to handle this differentiation from the 'scope' property returned by other providers using inheritance. However, while this somewhat works in System.Text.Json, there is an issue with overwriting the value with the final property. So, for example, if 'scopes' is the final property in the JSON returned from Bitbucket's OAuth token endpoint, then the scopes property is correctly used in deserialization. However, if 'scope' is the final property, this value overwrites the scope value. For this reason, we use a custom converter to explicitly deserialize Bitbucket OAuth responses. For simplicity in working with System.Text.Json, we also store the 'expires_in' in a long rather than a TimeSpan.",0
dependencies: update json.net to system.text.json,0.47648305,Replace netstandard2.0 with dotnet6.0 (link),Update global reference to Json.NET (Newtonsoft.Json) to System.Text.Json. Note that this is only required for .NET Framework and can be removed when GCM migrates off it.,0
dependencies: update microsoft.identity.client,0.49380162,"Fix a bug with using Microsoft Accounts with Azure Repos (#143, #148)",Update Microsoft.Identity.Client and Microsoft.Identity.Broker to version 4.54.0 in anticipation of removing Json.NET dependency.,0
dependencies: update to .NET 7.0,0.7081319,Move to .NET Framework 4.7.2 on Windows (#283),Update to .NET 7.0 to take advantage of certain new features of System.Text.Json (e.g. JsonRequired).,1
Fix bug passing username hint to credential lookup (#1280),0.63640743,Fix a bug to prevent setting credential.provider when it wasn't needed (Only set credential.provider for dynamic matches #535),,0
github: fix bug passing username hint to cred lookup,0.6576236,Fix a bug with the GitHub provider on Windows in launching the auth UI with a username (#205),In adding support for multiple-user accounts for GitHub we introduced a bug that would mean we ignored a username-hint provided by Git/remote URL when looking up an existing credential. The result is that we'd return any credential rather than specifically one for the desired account! Fix this by always passing the input username hint when first evaluating which user account to select.,0
Upload artifacts from CI builds (#1279),0.5118644,Simplified build number included in artifact names (#638),We currently don't capture or upload artifacts from our CI builds.. we should do this! This will help with testing PRs and the tip of main.,0
ci: upload artifacts from CI builds,0.4438649,Target *-latest runner images in CI workflow (#1178),,0
github: add multi-account prompt and login/logout commands (#1267),0.64265364,- Fix TTY-based prompts for GitHub authentication (#30),"Add multi-account support for the GitHub host provider. Previously it was possible to use multiple accounts with GitHub, but this required prior knowledge about including the username in the remote URL (e.g. link), and without this the incorrect account may be selected, and subsequently erased due to insufficient permissions. This PR adds a few different features and prompts to improve discoverability and experience using multiple GitHub accounts with GCM: Add login, logout and list commands for the GitHub provider Add UI and TTY prompts to select between GitHub user accounts Abridged documentation and links to quickly discover the 'user-in-remote-URL' functionality (bonus!) Ability to suppress GUI prompts over text-based ones via the command-line using --no-ui One thing that is absent compared to the Azure Repos provider's multi-account support is the lack of account 'binding'. This is due to lack of knowledge, by default, of the full remote URL from Git to be able to discern between different repositories or organisations on the same host. Command-line usage: module Select account UI prompts: Avalonia|Windows legacy helper (WPF) -|- |",0
github: add double-click to select behaviour to select account,0.4587068,Improved usability for GitHub auth (#587),Add the ability to double-click to select an account and 'continue' for the account selection Avalonia window.,0
build(deps): bump actions/setup-dotnet from 3.1.0 to 3.2.0 (#1277),0.58213466,Fix release builds .NET SDK version (#358),Bumps actions/setup-dotnet from 3.1.0 to 3.2.0.,0
Link to relevant GitLab issue (#1275),0.5188924,"Add explicit PAT authentication mode for the GitHub Provider (#236, #259)",,0
build(deps): bump actions/setup-dotnet from 3.1.0 to 3.2.0,0.5564861,Fix release builds .NET SDK version (#358),Bumps actions/setup-dotnet from 3.1.0 to 3.2.0. - Release notes - Commits updated-dependencies: - dependency-name: actions/setup-dotnet   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] support@github.com,0
http: fix comment,0.36019343,"Respect http.sslCAInfo settings (#242, #411)",,0
http: add tests about CurlCookie.cs,0.46705008,"Respect http.sslCAInfo settings (#242, #411)",based on the review Co-authored-by: Matthew John Cheetham mjcheetham@outlook.com,0
http: CurlCookie as a separate file,0.32111514,Add preliminary support for OAuth with GitHub AE (requires server support/changes) (#343),based on the review Co-authored-by: Matthew John Cheetham mjcheetham@outlook.com,0
http: fix implementation of setting cookie,0.4597642,"Respect http.sslCAInfo settings (#242, #411)",based on the review Co-authored-by: Lessley Dennington ldennington@github.com Co-authored-by: Matthew John Cheetham mjcheetham@outlook.com,0
Link to relevant GitLab issue,0.48539853,- GitHub,,0
build(deps): bump actions/setup-dotnet from 3.0.3 to 3.1.0 (#1273),0.5791103,Fix release builds .NET SDK version (#358),Bumps actions/setup-dotnet from 3.0.3 to 3.1.0.,0
build(deps): bump actions/setup-dotnet from 3.0.3 to 3.1.0,0.5828277,Move to .NET Core 3.1 (LTS) (#101),Bumps actions/setup-dotnet from 3.0.3 to 3.1.0. - Release notes - Commits updated-dependencies: - dependency-name: actions/setup-dotnet   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] support@github.com,0
docs: add TL;DR section on how to update remote URL,0.46009797,Update documentation to use reference-style links (#680),,0
github: support multiple accounts with explicit prompt,0.666295,- Fix TTY-based prompts for GitHub authentication (#30),"Check for multiple existing accounts, and if there is more than one account with credentials in the store AND no user name hint provided in the remote URL, then show the new account selection prompt.",0
github: add prompt to select accounts,0.63753366,Improved usability for GitHub auth (#587),"Add a new prompt to allow the user to select between GitHub accounts, or using a new account.",0
github: only re-auth if --force option is used with login,0.6664469,Remove username/password authentication for GitHub.com (#171),"If we find a credential already exists for the same user prior to authenticating, require the user explicitly pass --force to make us re-authenticate the same account.",0
github: add --username and auth options to login,0.73113537,Remove username/password authentication for GitHub.com (#171),"Add a few options to the login command to customise how auth happens, without needing to respond to an interactive prompt. --username      Specify the user name to use; useful for login hints in the web --browser/--web     Select the web browser OAuth flow --device     Select the device code flow --pat/--token      Use the specified personal access token. The user name is resolved     if not provided with the --username option.",1
github: add basic cmds to manage accounts,0.544941,"Add explicit PAT authentication mode for the GitHub Provider (#236, #259)","Add a set of basic provider commands to add, remove and list GitHub accounts. Users can explicitly login to GitHub.com or any GHES instance, or remove an account.",0
github: refactor GenerateCredentialAsync to take URI,0.5221657,Add preliminary support for OAuth with GitHub AE (requires server support/changes) (#343),"Refactor the GenerateCredentialAsync method to take a remote URI and optional user name hint, rather than requiring an instance of InputArguments from Git.",0
github: inline impl of abstract HostProvider class,0.5474399,"- Allow overriding the selection of host provider; also supports GitHub Enterprise scenarios (configuration option, migration guide for users of the credential.authority setting) (#59)",Change GitHubHostProvider to implement IHostProvider directly rather than derive from the abstract HostProvider class. Inline the previously super-class implementations to preserve behaviour.,0
credentialstore: add ability to list accounts from stores,0.51833403,Add option to use the new DPAPI-based credential store on Windows (#464),Add the ability to pull all the accounts from a credential store.,0
secretservice: extract enumeration from get call,0.3606212,Fix a bug to prevent setting credential.provider when it wasn't needed (Only set credential.provider for dynamic matches #535),,0
cmd: add AddOptionSet extension method with arity support,0.33184934,Add ability to read GCM default settings from the Windows Registry (#404),"Add an extension method for adding multiple options to a Command, optionally setting a validator to enforce the arity of their usage. This allows us to create mutually exclusive option sets.",0
cmd: add ability to suppress GUI from cmdline,0.401399,Make Avalonia UI the default Windows and move to in-process (#1207),Add ability to suppress the GUI from the command-line argument --no-ui. We achieve this by setting the process enviroment variable that already exists and is used to control GUI prompts.,0
Update System.CommandLine to latest version (#1265),0.78386533,Update System.CommandLine and fix some bugs (#531),"Update System.CommandLine to the latest version. There have been some changes to the API since the last version around binding a command to a handler, and the removal of the model binding. We now explicitly specify the options when setting the handlers. This means we should be able to avoid the use of reflection inside of the package, making it trimable in the future!",1
cmd: update System.CommandLine to latest version,0.73982406,Update System.CommandLine and fix some bugs (#531),,1
platformutils: use Version.ToString() to get number only (#1264),0.45211834,Simplified build number included in artifact names (#638),"Use Environment.OSVersion.Version.ToString() over .VersionString to get a numerical version only on Windows and macOS. Using .VersionString on macOS you get values like ""Unix 13.3.1"" rather than ""13.3.1"", and on Windows you get ""Microsoft Windows NT 10.x.y.z"" rather than ""10.x.y.z"".",0
platformutils: use Version.ToString() to get number only,0.43332666,Simplified build number included in artifact names (#638),"Use Environment.OSVersion.Version.ToString() over .VersionString to get a numercal version only on Windows and macOS. Using .VersionString on macOS you get values like ""Unix 13.3.1"" rather than ""13.3.1"", and on Windows you get ""Microsoft Windows NT 10.x.y.z"" rather than ""10.x.y.z"".",0
release: remove .NET tool deployment from release workflow (#1263),0.5797701,Fix release builds .NET SDK version (#358),"Move deployment of .NET tool to nuget.org out of release workflow. With these changes, the .NET tool is published only after a release has been published (rather than with the creation of the release). This emulates what we currently do with Homebrew and ensures we only release the .NET tool when we are confident enough in a release's stability to publish it.",0
release: decouple .NET tool,0.46783113,.net tool: clarify install instructions (#1126),"Move deployment of .NET tool to nuget.org out of release workflow. With these changes, the .NET tool is published only after a release has been published (rather than with the creation of the release). This emulates what we currently do with Homebrew and ensures we only release the .NET tool when we are confident enough in a release's stability to publish it.",0
release: add release workflow environment (#1262),0.50160223,Target *-latest runner images in CI workflow (#1178),Migrate applicable secrets to the new 'release' workflow environment and update appropriate workflows to use these secrets. This is a security measure to help ensure secrets cannot be accessed by those without proper permissions. An example of a passing workflow with these changes can be found here.,0
release: move secrets to workflow environment,0.371108,Migrated release process from Azure DevOps to GitHub actions (#707),Migrate applicable secrets to a new 'release' workflow environment. This is a security measure to help ensure secrets cannot be accessed by those without proper permissions.,0
build(deps): bump lycheeverse/lychee-action from 1.7.0 to 1.8.0 (#1260),0.46034902,This release is a fast follow to 2.0.692 to fix issues with the Debian package generated as part of that release.,Bumps lycheeverse/lychee-action from 1.7.0 to 1.8.0.,0
build(deps): bump lycheeverse/lychee-action from 1.7.0 to 1.8.0,0.4189124,This release is a fast follow to 2.0.692 to fix issues with the Debian package generated as part of that release.,Bumps lycheeverse/lychee-action from 1.7.0 to 1.8.0. - Release notes - Commits updated-dependencies: - dependency-name: lycheeverse/lychee-action   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] support@github.com,0
Avoid creating external processes to read OS version info (#1240),0.42298836,"Future proof Windows broker ""WAM"" version detection (#465)","We are spending about 45ms on macOS to read version information by shelling out to sw_vers on each run of GCM. Let's try and be smarter and use BCL APIs, system APIs or file-based sources for the OS and distribution information before resorting to external processes. In my testing, on macOS, we went from 45ms to 4.5ms (10x speedup). Note that we are now also getting something a little bit more useful for Linux: Before: $ GCM_TRACE=1 ./git-credential-manager --version 20:55:36.776385 ...re/Application.cs:95 trace: [RunInternalAsync] Version: 2.1.1.0 20:55:36.787669 ...re/Application.cs:96 trace: [RunInternalAsync] Runtime: .NET 6.0.16 20:55:36.787711 ...re/Application.cs:97 trace: [RunInternalAsync] Platform: Linux (x86-64) 20:55:36.787749 ...re/Application.cs:98 trace: [RunInternalAsync] OSVersion: Linux ubuntu2204-vm1 5.15.0-1037-azure #44-Ubuntu SMP Thu Apr 20 13:19:31 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux .. After: $ GCM_TRACE=1 ./git-credential-manager --version 20:52:12.325628 ...re/Application.cs:95 trace: [RunInternalAsync] Version: 2.1.1.0 20:52:12.337234 ...re/Application.cs:96 trace: [RunInternalAsync] Runtime: .NET 6.0.16 20:52:12.337283 ...re/Application.cs:97 trace: [RunInternalAsync] Platform: Linux (x86-64) 20:52:12.337301 ...re/Application.cs:98 trace: [RunInternalAsync] OSVersion: Ubuntu 22.04.1 LTS ..",0
Code format in gitlab.md (#1243),0.44149733,Fix bug in Git config matching due due case sensitivity (#234),removed unnecessary tabs,0
Add support for httpCookieFile,0.47638094,"Respect http.sslCAInfo settings (#242, #411)",,0
version: bump version to 2.1.2,0.59488106,This release is a fast follow to 2.0.692 to fix issues with the Debian package generated as part of that release.,,0
Use OAuth tokens on DevBox by default for Azure Repos (#1245),0.91858506,Enable Azure Repos OAuth-mode by default on DevBox (#1245),Update the default for credential.azreposCredentialType or GCM_AZREPOS_CREDENTIALTYPE to oauth when on Microsoft DevBox. 917,1
azrepos: use OAuth tokens on DevBox by default,0.67864037,Enable Azure Repos OAuth-mode by default on DevBox (#1245),Update the default for credential.azreposCredentialType or GCM_AZREPOS_CREDENTIALTYPE to oauth when on Microsoft DevBox.,0
Update gitlab.md,0.5269049,Update to Git Credential Manager Core (beta) on macOS.,removed unnecessary tabs,0
Return GitHub PAT token from view model (#1241),0.61642027,"Add explicit PAT authentication mode for the GitHub Provider (#236, #259)",Fix a bug in the in-proc UI logic for returning the personal access token. We were accidentally returning the password field rather than the token field for PATs.,0
platformutils: avoid procstart to get Linux distro info,0.36772776,Ensure correct installation directory resolution for all OSes and distribution methods (link),"Try using the /etc/os-release file, for systemd distros, in favour of calling out to uname which can add extra overhead in the form of process startup. Direct file I/O and parsing should be faster.",0
github: return PAT token from view model,0.602635,"Add explicit PAT authentication mode for the GitHub Provider (#236, #259)",Fix a bug in the in-proc UI logic for returning the personal access token. We were accidentally returning the password field rather than the token field for PATs.,0
platformutils: use .NET Environment.OSVersion on CoreCLR,0.50673485,Move to .NET Core 3.1 (LTS) (#101),Since .NET 5 we can now use the Environment.OSVersion property to lookup the real OS version for macOS and Windows[1]. For .NET Framework (still used for our releases on Windows) we must continue to use the Win32 API RtlGetVersion to avoid any Windows compatibility nonsense. We continue to use uname on Linux. [1] link,0
Lazily initalise the HttpClient for the Bitbucket OAuth2ClientRegistry (#1239),0.73313594,"Allow forcing OAuth authentication with Bitbucket host provider (#329, #401)",Lazily acquire the HttpClient instance from the factory inside of the OAuth2ClientRegistry. There is a relatively large cost to creating a new HttpClient instance (especially the first; due to config reading) that is being paid each time we just register the entire Bitbucket host provider. Whilst we are here also cleanup some of the styling/field naming in this class to be consistent with the rest of GCM. This saves approximately 120ms of startup time.,1
bitbucket: guard against disposing a null ref,0.55619884,Lazily initialise Bitbucket host provider dependencies (#1239),,0
bitbucket: lazily init the HttpClient for OAuthRegistry,0.73409617,"Allow forcing OAuth authentication with Bitbucket host provider (#329, #401)",Lazily acquire the HttpClient instance from the factory inside of the OAuth2ClientRegistry. There is a relatively large cost to creating a new HttpClient instance (especially the first; due to config reading) that is being paid each time we just register the entire Bitbucket host provider. Whilst we are here also cleanup some of the styling/field naming in this class to be consistent with the rest of GCM.,1
Fix several UI bugs in 2.1 pre-release (#1238),0.87665266,"Fix several UI bugs (#1238, #1241)",Fix a few bugs that were spotted during testing of the 2.1 pre-release: Missing Atlassian logo resource from the compiled binaries Remote URL is shown even for Bitbucket cloud with in-proc GUI In-proc basic auth GUI user name field should only be set if non-null or whitespace Also bump the VERSION to 2.1.1 in the expectation for this to replace 2.1.0.,1
version: bump to 2.1.1.0,0.64529335,This release is a fast follow to 2.0.692 to fix issues with the Debian package generated as part of that release.,,0
basic-auth: only set username if not-null,0.45754302,Fix a bug to prevent setting credential.provider when it wasn't needed (Only set credential.provider for dynamic matches #535),,0
bitbucket: only show URL if not Bitbucket Cloud,0.6944424,Updated Bitbucket credential UI to show the URL of the Bitbucket Server or Data Center instance if applicable (#713),Only show the URL if the remote is NOT Bitbucket Cloud in the in-proc UI. This is same behaviour as the helper UI.,0
bitbucket: include Atlassian logo resource,0.58702606,Updated Bitbucket credential UI to show the URL of the Bitbucket Server or Data Center instance if applicable (#713),Make sure to include the Atlassian logo as an AvaloniaResource so it's included in the compiled binaries.,0
Merge branch 'release' into main,0.45088187,Migrated release process from Azure DevOps to GitHub actions (#707),,0
Add support for using the current Windows user for WAM on DevBox (#1197),1.0,Add support for using the current Windows user for WAM on DevBox (#1197),"Add the ability to configure MSAL to use the default OS account when the broker is enabled. Also detect when we are in a Microsoft Dev Box environment, and if we are, then default to enabling the new setting (and enable WAM). Show a confirmation prompt before continuing to use the current OS account, which is similar to how Microsoft Teams operates. Left: Avalonia UI, Right: fallback WPF window Fixes #917",1
build(deps): bump DavidAnson/markdownlint-cli2-action from 10.0.0 to 10.0.1 (#1232),0.49670118,This release is a fast follow to 2.0.692 to fix issues with the Debian package generated as part of that release.,Bumps DavidAnson/markdownlint-cli2-action from 10.0.0 to 10.0.1.,0
versioning: transition from nerdbank to version file (#1231),0.8621745,Transition from Nerdbank.GitVersioning to a version file (#1231),"With the plan to migrate GCM to a formula for release via Homebrew/homebrew-core, it became clear that Nerdbank.GitVersioning was no longer an option for versioning the project. This is because Nerdbank.GitVersioning requires history to calculate things like 'Git height', and the formula requires a tarball to build, which, of course, has no history. This change pivots GCM to the simpler strategy of using a version specified in a VERSION file at root. This version will be updated by maintainers prior to release - giving them more granular control of versioning, which in turn allows for versioning to be more predictable (i.e. maintainers will know what the version will be before publication of the release). The version specified in the file is the one slated for the next release: 2.1.0.0. Note: This change fails on Windows due to a bug in MSAL unless we ensure all projects have at least 1 dependency. We are working around this issue by adding Newtonsoft.Json as this dependency (since we were already shipping it anyway).",1
workflows: update checkout actions,0.21163738,Migrated release process from Azure DevOps to GitHub actions (#707),"Remove fetch-depth from checkout actions, since that was required by Nerdbank.GitVersioning. Also take this opportunity to use consistent version and naming for checkout actions.",0
version: remove nerdbank tasks,0.49082175,Transition from Nerdbank.GitVersioning to a version file (#1231),Remove Nerdbank.GitVersioning tasks (which have been superceded by the use of the new VERSION file) from the release workflow.,0
version: update release workflow versioning,0.45803127,Target *-latest runner images in CI workflow (#1178),"Update release workflow to use VERSION file for versioning, rather than Nerdbank.GitVersioning.",0
version: replace nerdbank with version file,0.77970076,Transition from Nerdbank.GitVersioning to a version file (#1231),"Remove Nerdbank.GitVersioning dependency from project in favor of a new VERSION file, which will be updated ahead of each release. Versioning in this file will begin with the version we plan to use for the next release: 2.1.0.0. This change involves the addition of a new custom MSBuild task, which reads in the contents of the VERSION file, converts it to a Version object, and then sets the various version-related MSBuild properties with the correct value (some with the Revision component appended, others without). Note that there is a bug in MSAL 1 that causes build failures for projects without dependencies with this change. We add Newtonsoft.Json as a global dependency in Directory.Build.props to work around this problem until the fix is released.",1
build(deps): bump DavidAnson/markdownlint-cli2-action from 9.0.0 to 10.0.0 (#1223),0.5118221,Release pipeline fixes #995 #1009 #1061,Bumps DavidAnson/markdownlint-cli2-action from 9.0.0 to 10.0.0.,0
docs: add trace2 to config/env documentation (#1230),0.9999999,docs: add trace2 to config/env documentation (#1230),Add Trace2 config/env var options to GCM's configuration/environment documentation to improve discoverability.,1
docs: add trace2 to config/env documentation,0.9691206,docs: add trace2 to config/env documentation (#1230),Add Trace2 config/env var options to GCM's configuration/environment documentation to improve discoverability.,1
Add Git configuration options for trace & debug (#1228),0.9999999,Add Git configuration options for trace & debug (#1228),Add options for enabling tracing and debugging in Git configuration. Today the below options were only supported via environment variable: GCM_TRACE GCM_TRACE_SECRETS GCM_TRACE_MSAUTH GCM_DEBUG,1
settings: add git cfg options for trace & debug,0.9072559,Add Git configuration options for trace & debug (#1228),Add options for enabling tracing and debugging in Git configuration. Today the below options were only supported via environment variable: GCM_TRACE GCM_TRACE_SECRETS GCM_TRACE_MSAUTH GCM_DEBUG,1
docs: add link to dotnet sdk,0.5040977,Fix release builds .NET SDK version (#358),"Add link to the install instructions for the dotnet SDK. Note that, due to installation instructions differing based on the distro and version users are running, the best we are able to do is link to the page that provides further links for users to follow to use their respective package managers to install.",0
devbox: enable msauth default account and broker in devbox,0.6639904,Enable Azure Repos OAuth-mode by default on DevBox (#1245),"Detect when we are in a Microsoft Dev Box environment, and if we are, then default to enabling the default OS account setting and enabling WAM.",0
msauth: use default OS account when enabled,0.5858273,"Use the user's default web browser for Microsoft authentication on macOS and drop the native helper (#274, #277)",Add the ability to configure MSAL to use the default OS account when the broker is enabled. Default to disabled.,0
Make Avalonia UI the default on all platforms and move in-process (#1207),0.8600142,Make Avalonia UI the default Windows and move to in-process (#1207),"Today GCM has an architecture that delegates all GUI prompting to (bundled) external executables, using WPF-based helpers on Windows and Avalonia UI helpers on Mac and Linux. Each host provider has its own GUI helper executable, meaning we currently bundle four (GitHub.UI, GitLab.UI, Atlassian.Bitbucket.UI, git-credential-manager.ui [for generic auth]) helpers in addition to the core git-credential-manager CLI executable. On Linux we use the ""publish as a single-file"" model for each of these executables, meaning we have a copy of the CLR included for each executable! That means five CLRs! Now that the Avalonia UI-based GUI helpers have matured, we can look at dropping the WPF helpers and reduce the effort required to ship new GUI by 50% (we no longer need to do everything twice: once with WPF and once with Avalonia UI). In addition, in a recent spike, I found that it may be possible to bring the Avalonia UI helpers in-process, with nearly zero net-new code. This would help reduce our installation footprint on Linux down to approximately 1/4 of the current size. The single executable model would also help decrease build times, and increase end-user performance since we no longer pay the process startup costs using external processes! We need to be mindful that this change may result in a small increase in the Windows installation as we now bring in extra libraries used to support Avalonia UI, whereas previously we relied on WPF libraries as included with Windows 'for free'. This is expected to be minimal. As for the current GUI extensibility model, we are not aware of any consumers, but it would not be much effort to keep the existing external process model, but now just default to using our in-process GUI options in the absence of external configuration. This still gives tools like VS or VSCode options to integrate native UI for GCM in the future. Initially, we are still keeping the WPF helpers around on Windows but disabled by default. We can drop these after at least one release using the in-proc Avalonia helpers. To switch back to the WPF helpers, use credential.devUseLegacyUIHelpers or GCM_DEV_USELEGACYUIHELPERS.",1
windows: simplify Inno setup defn and reduce payload size,0.33993128,Use System.CommandLine to handle our command line parsing and allow host providers to offer custom commands (#273),"To keep the size of the Windows distribution small, directly target the Win32 Avalonia packages rather than the Desktop package that includes macOS and Linux dependencies.",0
ui: draw window border on windows,0.28873274,Pass parent window handle information to MSAL (#306),,0
ui: fix textbox layout bug in v11,0.49237597,"Fix several UI bugs (#1238, #1241)",,0
ui: workaround AvaloniaUI/Avalonia #10296,0.7482637,Make Avalonia UI the default Windows and move to in-process (#1207),,1
ui: add app version to about window,0.36601642,Make Avalonia UI the default Windows and move to in-process (#1207),,0
ui: enable IDE Avalonia designer,0.5165951,Make Avalonia UI the default Windows and move to in-process (#1207),,0
ui: fix deadlock in Avalonia runloop start on Windows,0.6509954,Make Avalonia UI the default Windows and move to in-process (#1207),,0
ui: use custom window chrome on Windows,0.4373769,Make Avalonia UI the default Windows and move to in-process (#1207),,0
ui: support dark theme base colour resources,0.23740499,Add generic username/password UI (#871),Support dark theme resource dictionaries.,0
ui: target latest version of AvaloniaUI,0.643712,Make Avalonia UI the default Windows and move to in-process (#1207),,0
ui: only include Avn.Diagnostics in debug,0.5438349,Add new diagnose command to help debug problems in the wild (#463),,0
gitlab: move logos to resource files,0.3957572,"- Allow overriding the selection of host provider; also supports GitHub Enterprise scenarios (configuration option, migration guide for users of the credential.authority setting) (#59)",,0
gitlab: simplify terminal/interaction checks,0.60687447,"- Show the terminal/TTY based prompts when there is no desktop/GUI sessions present for GitHub (#453, #538)","Simplify where we check for user interaction and/or terminal prompts during authentication, to only need to check at the start of each GetAuthenticationAsync call. Note that is is a behaviour change - we now require user interaction to be allowed to perform authentication even with only 1 mode available. This is technically more 'correct' because when the user disables interactivity, we should never require interaction to continue. Although we are not asking the user to select a mode of authentication, we still either need them to enter a username/password, or respond to a browser OAuth flow.",0
gitlab: add in-proc UI implementation,0.48342177,"Add explicit PAT authentication mode for the GitHub Provider (#236, #259)",,0
github: add in-proc UI implementation,0.48510444,"Support ""SSO"" PATs for GitHub (#133, #134)",,0
bitbucket: add in-proc UI implementation,0.6389372,Introduce the Bitbucket host provider with Windows GUI (#37),,0
oauth: add in-proc UI implementation,0.6576587,Generic OAuth support via config 🎉 #1062,,0
basic: add in-proc UI implementation,0.41549492,Add generic username/password UI (#871),,0
docs: add bitbucket app password requirements (#1213),1.0000001,docs: add bitbucket app password requirements (#1213),"Separate instructions for authentication into a new bitbucket-authentication file. For Password/Token authentication, add a callout that, when using an App Password, account read permissions are required. Closes #1119",1
docs: add bitbucket app password requirements,0.97741467,docs: add bitbucket app password requirements (#1213),Separate Bitbucket Authentication information for users from development information for developers. Use this opportunity to also add the permissions requirements for users attempting to authenticate to Bitbucket with an App Password.,1
build(deps): bump lycheeverse/lychee-action from 1.6.1 to 1.7.0 (#1206),0.45878822,This release is a fast follow to 2.0.692 to fix issues with the Debian package generated as part of that release.,Bumps lycheeverse/lychee-action from 1.6.1 to 1.7.0.,0
ui: add window parent/cancellation helpers,0.44565293,Pass parent window handle information to MSAL (#306),,0
ui: set default GUI window title,0.5082657,"~Set MSAL embedded webview window title to give more context to the user (#347, #239)~ Not working currently (see here)",,0
ui: default to showing GCM branding in generic prompts,0.61983323,Add ability to read GCM default settings from the Windows Registry (#404),,0
ui: use in-proc by default with fallback option for WPF,0.41893494,Make Avalonia UI the default Windows and move to in-process (#1207),"Default to using the in-proc Avalonia GUI on all platforms, with a fallback flag that can be set on Windows to continue to use the legacy WPF, out-of-proc UI helpers.",0
gitlab: extract Helper and TTY prompt methods,0.5775,- Fix TTY-based prompts for GitHub authentication (#30),,0
github: extract Helper and TTY prompt methods,0.59513354,- Fix TTY-based prompts for GitHub authentication (#30),,0
bitbucket: extract Helper and TTY prompt methods,0.5619234,Updated Bitbucket UI to separate OAuth and username/password options (#754),,0
oauth: extract Helper and TTY prompt methods,0.55269885,Generic OAuth support via config 🎉 #1062,,0
basic: rename ByUi method to ViaHelper,0.29296058,"Refactor namespace, assembly and project names (#500)",,0
gitlab: merge .UI.Avn and .UI in to GitLab,0.4044519,Improved usability for GitHub auth (#587),,0
github: merge .UI.Avn and .UI in to GitHub,0.4350404,Improved usability for GitHub auth (#587),,0
bitbucket: merge .UI.Avn and .UI in to Atlassian.Bitbucket,0.6095798,Updated Bitbucket UI to separate OAuth and username/password options (#754),,0
gcm-ui: merge GCM.UI.Avn in to Core,0.63541526,"Set the full path to standalone GCM Core installs, enabling overriding of bundled versions (#188, #199)",,0
core: merge Core.UI.Avn and Core.UI into Core,0.35686898,Move to .NET Core 3.1 (LTS) (#101),,0
gcm: set up message pump in main GCM executable,0.5303738,- GCM Core now worked behind network proxies (configuration guide) (#11),"Set up a message pump on the main thread in the primary GCM executable in preparation to adding in-process, AvaloniaUI-based UI. Also move to explicitly shutdown the dispatcher correctly rather than just killing the process.",0
wpf: add .Windows to WPF project namespaces,0.47061488,"Refactor namespace, assembly and project names (#500)",Add the .Windows suffix to the WPF project namespaces to prevent name collisions that would otherwise occur in future commits where the Avalonia UI types are to be merged in to the core projects. Also clean up some unused XML namespace imports.,0
wpf: explicitly target WPF Dispatcher object,0.35305887,Pass parent window handle information to MSAL (#306),"Explicitly target the WPF Dispatcher type using the fully qualified type name to prevent an ambiguous reference that would otherwise occur in upcomming commits where the Avalonia Dispatcher, and the GCM Dispatcher are merged in to the Core project.",0
wpf: rename DialogWindow to WpfDialogWindow,0.36929908,Make Avalonia UI the default Windows and move to in-process (#1207),Rename the WPF implementation of DialogWindow to prevent name collisions that would otherwise occur in upcoming commits where we merge the Avalonia implementation of DialogWindow into the Core project.,0
gcm-ui: fix WPF device code view namespaces,0.44337648,"Set the full path to standalone GCM Core installs, enabling overriding of bundled versions (#188, #199)",,0
build(deps): bump lycheeverse/lychee-action from 1.6.1 to 1.7.0,0.4179945,This release is a fast follow to 2.0.692 to fix issues with the Debian package generated as part of that release.,Bumps lycheeverse/lychee-action from 1.6.1 to 1.7.0. - Release notes - Commits updated-dependencies: - dependency-name: lycheeverse/lychee-action   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] support@github.com,0
Update MSAL libraries and use new MSALRuntime-based broker implementation (#1191),0.64420575,Consume new MSAL library versions (#346),"Use the new Windows broker which is based on the MSALRuntime; an export wrapper around a native, cross-platform MSAL library. In this new set up, we drop the .Desktop package in favour of the .Broker package that also means we drop the WebView2Loader.dll, which we didn't make use of anyway. There are a few new binaries to be distributed in the new model, including a P/Invoke layer, IdentityModel abstractions library, and the native msalruntime_x86.dll. Note that GCM still only support x86 on Windows, and only supports broker use on Windows. For this reason we don't bother adding the broker package on non-.NET Framework builds to keep the sizes on Mac/Linux to a minimum. Also update the MSAL extensions library whilst we are here to pick up various bug fixes, and drop workarounds that are no longer required for this new broker implementation!",0
readme: add link to project roadmap (#1204),1.0,readme: add link to project roadmap (#1204),Add link to the new GCM roadmap to the README to increase discoverability.,1
readme: add link to project roadmap,0.93357056,readme: add link to project roadmap (#1204),Add link to the new GCM roadmap to the README to increase discoverability.,1
msauth: update MSAuth flow comment to reflect today,0.5241409,Allow users to select the type of interactive authentication flow for the Microsoft auth stack (#210),Update the large block comment on how we select which types of flows to use for Microsoft authentication.,0
msauth: use dummy window for WAM if no parent,0.5506381,Add workaround for Windows Broker (WAM) running as admin (#344),"If we are unable to get a parent window handle; because for example, we don't have a console, then create a small 'dummy' window using WinForms that we can use to pass a handle to MSAL.",0
Catch OAuth refresh token errors for generic provider (#1196),0.74641055,Handle expired OAuth refresh token for generic auth (#1196),"In case we have an existing refresh token, but it has expired or been revoked, we should gracefully fall back to performing an interactive OAuth flow.",1
generic: catch OAuth refresh token errors,0.73132575,Handle expired OAuth refresh token for generic auth (#1196),"In case we have an existing refresh token, but it has expired or been revoked, we should gracefully fall back to performing an interactive OAuth flow.",1
docs: update configure command for install from source,0.47869265,Fix computation of installation path on Linux/single-file publish (#310),The current install from source instructions are out of date - they still recommend using git-credential-manager-core configure rather than git-credential-manager configure. Update the documentation to instruct users to run the correct command.,0
msauth: always set the parent window for MSAL,0.6885501,"Update MSAL; set MS auth embedded window title (#239, #512)","Always set the parent window handle for MSAL on Windows. Previously we only set this if provided a handle by the user/config. Now however we must always try and provide a handle because using the new MSALRuntime-based Windows broker means we must do so - MSAL no longer provides us with a 'dummy' handle to use. Use the parent console window handle, as recommended by the MSAL docs: link",0
msauth: use new Windows broker based on MSALRuntime,0.57116824,"Future proof Windows broker ""WAM"" version detection (#465)","Use the new Windows broker which is based on the MSALRuntime; an export wrapper around a native, cross-platform MSAL library. In this new set up, we drop the .Desktop package in favour of the .Broker package that also means we drop the WebView2Loader.dll, which we didn't make use of anyway. There are a few new binaries to be distrubuted in the new model, including a P/Invoke layer, IdentityModel abstractions library, and the native msalruntime_x86.dll. Note that GCM still only support x86 on Windows, and only supports broker use on Windows. For this reason we don't bother adding the broker package on non-.NET Framework builds to keep the sizes on Mac/Linux to a minimium.",0
msauth: update MSAL library packages to latest,0.7186854,Consume new MSAL library versions (#346),,1
Fix app path name of Windows dropping file extension (#1181),1.0000002,Fix app path name of Windows dropping file extension (#1181),"During some refactoring we accidentially introduced an error in the 'app path' on the CommandContext`; rather than trimming the file extension off (for detection of the old executable name on Windows) on a local copy, we are now updating the app wide copy! Only mutate a local copy.",1
main: fix app path name of Windows dropping exe,0.78689635,Fix app path name of Windows dropping file extension (#1181),"During some refactoring we accidentially introduced an error in the 'app path' on the CommandContext; rather than trimming the file extension off (for detection of the old executable name on Windows) on a local copy, we are now updating the app wide copy! Only mutate a local copy.",1
issue templates: remove core suffix (#1180),1.0000004,issue templates: remove core suffix (#1180),"The Authentication Issue template currently directs users to run git-credential-manager-core rather than git-credential-manager, which results in a warning regarding the removal of the core suffix. This change corrects the applicable commands so that users will not see this warning.",1
Ensure we start child processes created with ProcessManager (#1177),1.0000002,Ensure we start child processes created with ProcessManager (#1177),Ensure that we actually start processes (and check they have started correctly) using the new ProcessManager/ChildProcess abstractions. Fixes #1170 Replaces #1171,1
issue templates: remove core suffix,0.9326507,issue templates: remove core suffix (#1180),"The Authentication issue template currently directs users to run git-credential-manager-core rather than git-credential-manager, which results in a warning regarding the removal of the core suffix. This change corrects the applicable commands so that users will not see this warning.",1
procmgr: ensure we start processes,0.63338053,Ensure we start child processes created with ProcessManager (#1177),Ensure that we actually start processes (and check they have started correctly) using the new ProcessManager/ChildProcess abstractions.,0
Target -latest runner images in CI workflow (#1178),0.9845171,Target *-latest runner images in CI workflow (#1178),"We are using the -latest runner images for release builds (win, linux), but for CI we're instead using ubuntu-18.04, ubuntu-20.04, and windows-2019 (alongside macos-latest). Let's run CI against the latest of all three OS images to match what we're using to build release bits. Ubuntu 18.04 is also deprecated as a GitHub hosted runner.",1
workflows: target -latest runner images,0.9042989,Target *-latest runner images in CI workflow (#1178),"We are using the -latest runner images for release builds, but for CI we're instead using ubuntu-18.04, ubuntu-20.04, and windows-2019 (alongside macos-latest). Let's run CI against the latest of all three OS images to match what we're using to build release bits.",1
Cache Git configuration used in Settings for the lifetime of the process (#1172),0.6672241,Use native Git path interpolation for config values (#439),"When enumerating all Git configuration values in Settings, we currently cache a copy of all values for the lifetime of the GetSettingValues() method. This saves us some calls to Git, but we can do better. Pull-up the cache of Git configuration entries to the lifetime of the Settings object, meaning all calls to GetSettingValues() over the lifetime of the process can benefit from the cache! The savings here can be significant as each ISettings property typically results in a call to GetSettingValues(). Whilst in this space we can fix a couple of bugs: We were not calling git config --type=path for isPath = true variables when resolving settings, and instead consulting the cache first. We always want to go to Git for these types of values. We were not using the existing cache for unscoped entries! In my limited testing this results in a 2-3x speedup in calls to get && store!",0
settings: replace isPath with true when we know,0.47197205,Updated to manually scanning $PATH instead of using which on POSIX systems (#717),"We have already checked isPath is true before calling TryGet, so let's just pass isPath: true in these calls.",0
settings: cache Git config values across process,0.7219384,Use native Git path interpolation for config values (#439),"When enumerating all Git configuration values in Settings, we currently cache a copy of all values for the lifetime of the GetSettingValues() method. This saves us some calls to Git, but we can do better. Pull-up the cache of Git configuration entries to the lifetime of the Settings object, meaning all calls to GetSettingValues() over the lifetime of the process can benefit from the cache! The savings here can be significant as each ISettings property typically results in a call to GetSettingValues().",1
settings: use cached Git config entries for unscoped vars,0.7160918,Use native Git path interpolation for config values (#439),"Use the cached copy of Git configuration entries not only for URL-scoped keys, but unscoped keys too!",1
settings: fix bug in path-type setting reading,0.5542602,Updated to manually scanning $PATH instead of using which on POSIX systems (#717),"If we are asked for a path-type setting then we should always consult Git directly for the value, and not used cached copies of values that were acquired using git config list without a --type parameter.",0
trace2: add regions (#1162),0.70356274,"Add TRACE2 support(#1131, #1151, #1156, #1162)","Add TRACE2 region tracing capability. The first six commits contain minor refactors, bug fixes, and cleanups. The first moves Trace2 messages into their own file. The second removes the unnecessary AddDots() method. The third fixes certain conflated timing information in child_start and child_exit events. The fourth ensures we're writing exit message times in UTC. The fifth adds descriptive comments to Trace2-related classes that did not yet have them. The sixth adds best-effort logic to capture thread names. The next three commits are dedicated to preparing for and adding region-related logic. The seventh commit updates custom performance format span handling to account for the repo and category fields, which are used in region tracing. The eighth adds region-related events, encapsulated in a class that inherits from DisposableObject (which in turn inherits from IDisposable). The ninth adds region tracing to methods of interest pertaining to OAuth authentication. The final commit updates GCM's documentation to inform users of how to enable and utilize Trace2 tracing. A final note: This implementation does not support nested regions, as it is not required for the current regions of interest.",1
trace2: documentation,0.7290747,docs: add trace2 to config/env documentation (#1230),Document how users can set up and utilize the Trace2 API.,1
trace2: add regions to OAuth,0.48561049,Generic OAuth support via config 🎉 #1062,Add region tracing to key methods in OAuth2Client. This was deemed a good starting point for regions due to the server interaction required to obtain tokens. Additional regions can and should be added to additional sections of the code that are deemed performance-critical in the future.,0
trace2: add region infrastructure,0.630041,"Add TRACE2 support(#1131, #1151, #1156, #1162)","Add supporting infrastructure for regions. This includes the normal Write methods in Trace2 and corresponding Trace2 messages with a few notable distinctions: There is an abstract parent RegionMessage that inherits from Trace2Message. The RegionEnterMessage and RegionLeave messages inherit from this parent (rather than Trace2Message) to maximize reuse of shared fields. We create a new Region class that implements DisposableObject and call it using a CreateRegion method in Trace2. This ensures that we call WriteRegionLeave before a Region object is disposed - a key requirement of Git's Trace2 API for regions.  Additionally, it allows us to manage getting the executing thread name and region timings within the class, thus removing this burden from consumers. An additional note is that the region_enter and region_leave events will always have the same line number with this model. This was deemed to be acceptable, however, given that knowing where a region begins executing provides enough information for inspection of the region if it is needed.",0
trace2: update span handling,0.5013411,"Add TRACE2 support(#1131, #1151, #1156, #1162)","Previously, we only set up custom performance format span handling for time-related information (see [1]). However, with the upcoming introduction of regions, we will need custom spans for the category and repo strings. This change refactors and adds to the current logic to correctly handle all 3 span types (i.e. time, repo, and category). [1] 59a2692",0
trace2: capture thread name,0.54422337,Initial TRACE2 tracing events #1045,"With the upcoming introduction of regions, we will need to capture thread names. This change adds a new static BuildThreadName() method that defines a thread name by: Determining if it is the entry thread and, if so, calling it ""main"", per Trace2 convention. If it's not the main thread, determining whether it is a thread pool thread and naming it with a static prefix and the thread pool thread id. If it is not the entry thread or a thread pool thread, use the thread name, if it has one. Return an empty string if none of the above are true.",0
trace2: add comments,0.6593542,"Add TRACE2 support(#1131, #1151, #1156, #1162)",Add descriptive comments to Trace2-related classes that currently do not have any.,0
trace2: exit message time in utc,0.53644574,Initial TRACE2 tracing events #1045,We are currently writing exit message times in local rather than UTC time. This change updates to UTC time to align with the expectations of the Trace2 API.,0
trace2: fix child process time recording,0.59488046,Initial TRACE2 tracing events #1045,"Currently, we are recording child process times incorrectly for the performance format target. This change fixes that by: Ensuring we're recording the absolute time in child_start messages for the performance format target, which we previously were not doing. Ensures we do not conflate the absolute and relative times in child_exit, which we were previously doing.",0
trace2: remove adddots method,0.6633253,"Add TRACE2 support(#1131, #1151, #1156, #1162)","In Git, dots are only used on nested region messages, which are currently not supported in GCM. Remove the AddDots() method that is used incorrectly for formatting child process messages.",0
trace2: messages in new file,0.64203763,Initial TRACE2 tracing events #1045,"Move Trace2 messages into a new file. The Trace2 file was getting a bit long and unwieldy, so this change is intended to separate it in a logical way into two smaller files that are (hopefully) easier to parse and reason about.",0
docs: call out different GCM install paths in WSL docs (#1168),1.0000004,docs: call out different GCM install paths in WSL docs (#1168),"Add a callout to the fact the exact location of GCM may differ depending on the Git for Windows version/installation options, in our WSL docs.",1
Ensure we init IEnvironment before SessionManager (#1167),0.99999994,Ensure we init IEnvironment before SessionManager (#1167),Ensure we have an instance of IEnvironment before we pass it to the SessionManager contructor. Also add some null guards to catch this problem earlier in the future.,1
docs: call out different GCM install paths in WSL docs,0.98889446,docs: call out different GCM install paths in WSL docs (#1168),,1
commandcontext: ensure we init IEnvironment before SessionManager,0.8444212,Ensure we init IEnvironment before SessionManager (#1167),Ensure we have an instance of IEnvironment before we pass it to the SessionManager contructor. Also add some null guards to catch this problem earlier in the future.,1
trace2: add error event (#1156),0.7720509,Initial TRACE2 tracing events #1045,"This series adds the TRACE2 error event. The first two commits are opportunistic fixes that remove unnecessary components of Trace2 messages. The next four commits add Trace2 as a dependency to certain classes where exceptions are thrown in order to capture those exceptions with the new error event. The seventh commit adds the error event, and eighth adds special exceptions that write to Trace2. Finally, the ninth commit adds error tracing exceptions and messages throughout the GCM codebase.",1
trace2: add error tracing statements,0.68430126,"Add TRACE2 support(#1131, #1151, #1156, #1162)","Add TRACE2 error tracing statements throughout GCM codebase. Note that this is a best effort - there are certain places (most notably certain static and unsafe methods) where statements were purposefully not added because it is either not safe or was deemed to much lift/churn to do so. Note that there are some instances in which a ""parameterized"" message is passed to TRACE2. This is used only when PII information could be passed into the message (e.g. through a path or remote URI) and should be redacted for collection purposes. Finally, there are certain instances in which we write an error with no exception thrown. These align with the places where we are currently writing to GCM Trace without throwing an error for the purposes of parity.",0
trace2: add exceptions,0.6559901,"Add TRACE2 support(#1131, #1151, #1156, #1162)","Add exceptions for which TRACE2 tracing can optionally be used. We choose to add these exceptions to ease the experience of writing TRACE2 error information - instead of having to add a call to Trace2's WriteError() message before every exception of interest, one can instead just use the appropriate Trace2 exception.",0
trace2: add error event,0.68017304,"Add TRACE2 support(#1131, #1151, #1156, #1162)","Add error event, which will capture exceptions, to Trace2 tracing system.",0
trace2: pass to GPG,0.50247717,"Add TRACE2 support(#1131, #1151, #1156, #1162)","Pass instance of Trace2 to Gpg in preparation for capturing exceptions, which will be added in a future commit.",0
trace2: pass to terminal classes,0.5990814,"Add TRACE2 support(#1131, #1151, #1156, #1162)","Pass instance of Trace2 to terminal classes in preparation for capturing exceptions, which will be added in a future commit.",0
trace2: pass to Git,0.7193739,Add Git configuration options for trace & debug (#1228),"Pass instance of Trace2 to Git in preparation for capturing exceptions, which will be added in a future commit.",1
trace2: pass to OAuth2Client,0.52955484,"Add an OAuth2 client implementation with PKCE support (#99, #102)","Pass instance of Trace2 to OAuth2Client in preparation for capturing exceptions, which will be added in a future commit. Note that this also removes the unused instance of Trace in GCM's OAuth2 infrastructure.",0
trace2: remove order from json properties,0.43079463,"Add TRACE2 support(#1131, #1151, #1156, #1162)","Order was originally included for each TRACE2 json property to ensure alignment with Git's TRACE2 json property ordering. However, given that the json output is meant for consumption only by tooling (e.g. the OTel Collector) andi that the order requirement adds overhead with each new message, this change removes it.",0
trace2: remove ToLower() from message file names,0.5827131,"Add TRACE2 support(#1131, #1151, #1156, #1162)","TRACE2 convention does not require file names to be lowercase. Remove the ToLower() call when setting messages' FileName properties, as it it unnecessary.",0
trace2: add performance format target (#1151),0.76806265,"Add TRACE2 support(#1131, #1151, #1156, #1162)","This series adds the performance format target for TRACE2 tracing. The first two patches are small fixes for bugs I noticed as I was testing the performance format target. The first moves the FormatTargetTypes enum from the specific Trace2StreamWriter class to the shared Trace2Writer class. The second ensures the normal format event names are written in snake case (rather than lowercase). The third patch adds the ability to get the ""depth"" of the process. Because Sids and depth are process-related concepts, it removes the SidManager class and moved depth/sid-related properties and methods into the ProcessManager class. The fourth patch adds the performance format target. It includes a few notable components: A new GetMessage method to ensure message strings written to normal and performance targets are not duplicated. A new PerformanceFormatComponent class to track sizing of optional properties of performance format messages. A BuildSpan method that Trace2Message children use to create correctly-sized ""spans"" for optional properties of performance format messages. A span is a piece of the message beginning with a pipe (|) and ending just before the next pipe or the end of the message. A BuildTimeSpan method that adjusts spans for long/short times. In future, when we have events that include performance format string span components, we will need to add an additional method to handle them.",1
Assume GitHub Enterprise instances with a null version number support OAuth (#1154),0.66388524,Add preliminary support for OAuth with GitHub AE (requires server support/changes) (#343),"Enterprise instances that return a null version are considered to support OAuth. Only disable OAuth as an option if we can verify we are talking to an old Enterprise Server. This is a less fragile option as we never block the user from using an auth method they could use, and don't need to special case GHAE.",0
github: enterprise instances w/ null ver support OAuth,0.6550718,Add preliminary support for OAuth with GitHub AE (requires server support/changes) (#343),Enterprise instances that return a null version are considered to support OAuth.,0
Better browser/interactive session detection inside of WSL (#1148),0.84245056,Better browser detection inside of WSL (#1148),"Today we're gating browser-based authentication mechanisms behind a GUI-possible session, which isn't 100% correct. When inside of a WSL session, without WSLg enabled, it is still possible to launch a web browser in the hosting Windows session. Split the determination between ""GUI session"" and ""browser possible"", and add the special case for WSL inside an interactive Windows session. Things are complicated here because it is possible to SSH in to the WSL instance from outside of the Windows host, meaning the Windows session also doesn't have UI. This case we still need to prevent browser-based options. In order to detect these cases we need to 'punch out' to the Windows host and run a script/cmdlet to determine the session type. Fixes #878",1
http: add support for client certificates (#1152),0.8526312,Add support for client TLS certificates (#1152),"Add support for automatically sending client TLS certificates using the Git configuration setting 'http.sslAutoClientCert'. This setting is currently only present in Git for Windows, and there is only respected when the SSL backend is ""schannel"". Fixes #369",1
trace2: add performance format target,0.7012709,"Add TRACE2 support(#1131, #1151, #1156, #1162)","Add the performance format target for TRACE2 tracing. This change includes a few notable components: A new GetMessage method to ensure message strings written to normal and performance targets are not duplicated. A new PerformanceFormatComponent class to track sizing of optional properties of performance format messages. A BuildSpan method that Trace2Message children use to create correctly-sized ""spans"" for optional properties of performance format messages. A span is a piece of the message beginning with a pipe (|) and ending just before the next pipe or the end of the message. A BuildTimeSpan method that adjusts spans for long/short times. In future, when we have events that include performance format string span components, we will need to add an additional method to handle them.",1
trace2: add process depth calculation,0.6007964,"Add TRACE2 support(#1131, #1151, #1156, #1162)","The performance format target requires recording of process depth. We use the number of forward slashes in the process's sid as a convenient way to determine this. Because the sid and the depth are process-related concepts, this change also moves sid/depth related properties into ProcessManager.cs and removes the SidManager.cs class.",0
http: add support for client certificates,0.73132265,Add support for client TLS certificates (#1152),"Add support for automatically sending client TLS certificates using the Git configuration setting 'http.sslAutoClientCert'. This setting is currently only present in Git for Windows, and there is only respected when the SSL backend is ""schannel"".",1
trace2: write normal format events in snake case,0.56823283,"Add TRACE2 support(#1131, #1151, #1156, #1162)","A previous patch 1 added the ability to write strings in snake case. However, this was not applied to writing events in the normal format - events that should be written as child_start or child_exit are currently written as childstart and childexit. This patch corrects this issue.",0
trace2: move formattargettypes,0.62472427,"Add TRACE2 support(#1131, #1151, #1156, #1162)","Move the FormatTargetTypes enum from the specific Trace2StreamWriter class to the shared Trace2Writer class, since the Trace2FileWriter class also uses values from this enum.",0
wsl: detect host Windows session 0 and disable browser,0.7276299,Better browser detection inside of WSL (#1148),"In order to detect if we have an interactive Windows desktop session from inside WSL we need to 'punch out' from WSL to determine the session ID and window station. Strictly speaking, except for session 0 (from Vista onwards), any Windows session can have exactly one interactive window station (always called WinSta0). However, because we cannot easily determine the window station name from a simple cmd/powershell script, we take a simplified approach which isn't 100% accurate. Instead, we only permit browser auth methods if we are NOT in Windows session 0; any other Windows session we assume we are in WinSta0. The default OpenSSH Server configuration (Windows 10+) has sshd running as the built-in NT user NETWORK_SERVICE, which means it runs in session 0 (the services session). This is most common scenario, other than using WSL from a 'real', interactive Windows session that we're likely to face.",1
wsl: add ability to run CMD/PowerShell scripts from WSL,0.6070596,Support the wslview command  to open the browser (#529),Add ability to launch cmd.exe or PowerShell.exe scripts from inside a WSL distribution. In order to discover the location of cmd.exe/powershell.exe we need search the Windows file system that's mounted by default /mnt/c. We inspect the /etc/wsl.conf file to respect users who have changed the default mount location for Windows drives.,0
ini: add basic INI file deserialiser,0.31774205,Use System.CommandLine to handle our command line parsing and allow host providers to offer custom commands (#273),Add a basic INI file deserialiser,0
wsl: add ability to detect WSL distro and version,0.632042,Better browser detection inside of WSL (#1148),"Add methods to the WslUtils class to enable detection of a WSL distribution, and also determine which WSL version is being used. Version 1 uses the Windows NT kernel and runs the distribution in the same user-mode space as Windows programs. Version 2 uses a light-weight VM to host a real Linux kernel, and runs the distribution also inside the VM; interop with Windows is achieved using other mechanisms.",0
browser: split browser-check from desktop session check,0.46524376,Correctly detect a UI interactive session on all platforms (#95),Split the web browser check from the desktop session checks. In future commits we will enhance the browser-check to take in to account the WSL special case.,0
fs: add abstractions for reading all text and enum dir,0.27187133,Create Linux plaintext store with safer directory permissions (#397),Add abstractions to the IFileSystem interface for enumerating directories and reading the entire contents of a file to a string.,0
posix-session: check for Wayland display envars,0.44165826,Correctly detect a UI interactive session on all platforms (#95),Also check for the WAYLAND_DISPLAY environment variable when determining if a graphical session/display exists for POSIX systems.,0
env: avoid virtual member call in ctor; all refresh,0.31187254,trace2: guard against null pipe client in dispose (#1135),"We had a virtual member call in the constructor of the various IEnvironment implementations, which is a code smell. Instead, lazily populate the _variables cache dictionary, and add an explict Refresh method to refresh the cache. We call Refresh in the SetEnvironmentVariable method for convenience. For testing we simply pipe through the pre-computed variables in the internal constructor.",0
settings: support scoped enterprise settings (#1149),0.7257627,Support URL-scoped enterprise default settings (#1149),Add support for remote URL-scoped enterprise default settings. Fixes #983,1
settings: support scoped enterprise settings,0.69540143,Support URL-scoped enterprise default settings (#1149),Add support for remote URL-scopes enterprise default settings.,0
Ensure we create a WindowsProcessManager on Windows (#1146),1.0000004,Ensure we create a WindowsProcessManager on Windows (#1146),"We are creating a WindowsProcessManager implementation on macOS and a non-Windows/WSL aware, plain ProcessManager on Windows - this is the reverse of what we should do. Fix this.",1
procmgr: ensure we create a WindowsProcessManager on Windows,0.75284725,Ensure we create a WindowsProcessManager on Windows (#1146),"We are creating a WindowsProcessManager implementation on macOS and a non-Windows/WSL aware, plain ProcessManager on Windows - this is the reverse of what we should do. Fix this.",1
trace2: add child start and exit events (#1131),0.6985483,Initial TRACE2 tracing events #1045,"This change adds the child_start and child_exit events to GCM's TRACE2 tracing system. The first patches are either bug fixes or prep for the bigger refactors involved in making child start and exit work. The first patch puts sid-related logic into its own class, which allows us to immediately set up GCM's sid in Program.cs to ensure Git processes that are executed before TRACE2 tracing is set up have the correct parent sid. The next patch adds a FileWriter class and uses it (rather than Trace2StreamWriter) to write to files, which ensures processes aren't overwriting one another's data. The third patch adds a snake casing string extension to ensure we write multi-word enum values according to the TRACE2 convention. The fourth patch ensures we do not redirect stderr for Git-related processes, as it was discovered to cause deadlocks when TRACE2 was enabled. The fifth patch refactors GCM's diagnostics to depend on an instance of CommandContext rather than individual dependencies within CommandContext. The sixth patch re-configures TRACE2 to depend on an instance of CommandContext rather than individual dependencies within CommandContext, to start up earlier, and for operations to no-op if Trace2 has not yet been initialized (i.e. when child git config processes run before we're able to set up tracing). The seventh patch wraps Process.cs to give us the needed level of control to write TRACE2 child process start and exit events. The eighth patch (finally) adds the new child start and exit events.",0
trace2: add child_start and child_exit events,0.59923244,Initial TRACE2 tracing events #1045,Write the TRACE2 child_start and child_exit events for each child process invoked by GCM.,0
trace2: add process wrapper,0.67510307,"Add TRACE2 support(#1131, #1151, #1156, #1162)","Wrap the Process class to allow finer-grained control for writing future process-related TRACE2 events. Pull process-relevant information out of IEnvironment/Environment and into its own process-oriented ProcessManager class, interface, and child classes. This allows us to  maintain a functional, non-circular order of dependencies with our process wrapper. Add a ChildProcess class to wrap certain functionality of Process.cs. This gives us the level of control required to write child process information to TRACE2 in the final patch in this series. Update all current invocations of Process to instead use this wrapper.",0
trace2: refactor to prepare for child process-related events,0.59164196,Initial TRACE2 tracing events #1045,"The TRACE2 child start and child exit events will require some refactoring around the way GCM handles processes to provide finer-grained control and the ability to capture process-related information. In preparation for this, we need to do some re-organization of the Trace2 code. With this change we: Move TRACE2 tracing startup into Program.cs for GCM and the helper exes. This allows us to start tracing earlier and capture more events. Add an Initialize() method to Trace2.cs to detect whether Trace2 tracing is enabled and set long-lived variables. This also sets a new _initialized property that allows us to determine whether Trace2 tracing has been initialized. Trace2 tracing is disabled until _initialized is set to true by the Initialize() method. Change the name of TryParseSettings() to InitializeWriters() for improved clarity. Pass the CommandContext to Trace2 to use its Streams and Environment.",0
trace2: refactor diagnostics,0.6746594,Add new diagnose command to help debug problems in the wild (#463),"Diagnostics classes are dependent on multiple pieces of the CommandContext. Adding child start and child exit events will mean yet another dependency (Trace2). To simplify in anticipation of this, update Diagnostic classes to take in the CommandContext and access applicable dependencies from it.",0
trace2: redirect standard error,0.6240169,"Add TRACE2 support(#1131, #1151, #1156, #1162)","When a new process is created, standard error can optionally be redirected. This is useful in situations where the output is verbose and should be suppressed rather than output to the console, for example. However, this can cause an issue with TRACE2 deadlocks, as Git writes to standard error and GCM does nothing. This change corrects this by not redirecting standard error for Git-related processes (which also extends to places such as Environment.cs, given Git's reliance on envars). Finally, there are some places where we should still redirect standard error for the reason mentioned above. For these scenarios, comments have been added to help readers understand the purposeful nature of these redirects.",0
trace2: add string extension for snake casing,0.62358505,"Add TRACE2 support(#1131, #1151, #1156, #1162)","The TRACE2 convention is for multi-word event names to be written in snake case (all lower case with words separated by underscores). While up until this point we've had single-word event names, this series will add the multi-word child start and child exit events. In anticipation of that, this change adds a string extension that will be used in later patches to write multi-word enum values in snake case.",0
trace2: add file writer,0.60997605,"Add TRACE2 support(#1131, #1151, #1156, #1162)","Our current strategy of using a Stream to write to files for Trace2 tracing is not working - Git processes are overwriting GCM's data and vice versa. To resolve this, switch from using the Trace2StreamWriter to write to files to a dedicated Trace2FileWriter class. This also includes a refactor to add a parent base class for Trace2Writers for shared functaionality between the Trace2StreamWriter and Trace2FileWriter.",0
trace2: create sid manager class,0.5717871,"Add TRACE2 support(#1131, #1151, #1156, #1162)","Create static class to manage session ids (sids). This allows us to immediately set up GCM's sid in Program.cs to ensure Git processes that are executed before Trace2 tracing is set up have the correct parent sid. We also use it to give helper exes unique child sids. Although this will also execute when TRACE2 tracing is not enabled, it should not be an issue - it will simply set the (unused) GIT_TRACE2_PARENT_SID varible for the process to a GUID.",0
org-rename: update references to GitCredentialManager (#1141),1.0000001,org-rename: update references to GitCredentialManager (#1141),"The GitCredentialManager org is being re-named to git-ecosystem. In light of this, update references to GitCredentialManager to instead reference git-ecosystem.",1
build(deps): bump mjcheetham/update-homebrew from 1.2 to 1.3 (#1142),0.4928698,Release pipeline fixes #995 #1009 #1061,Bumps mjcheetham/update-homebrew from 1.2 to 1.3.,0
build(deps): bump mjcheetham/update-homebrew from 1.2 to 1.3,0.44513535,Mac installer will now unlink the Java GCM via Homebrew if installed (#45),Bumps mjcheetham/update-homebrew from 1.2 to 1.3. - Release notes - Commits updated-dependencies: - dependency-name: mjcheetham/update-homebrew   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] support@github.com,0
org-rename: update references to GitCredentialManager,0.9596807,org-rename: update references to GitCredentialManager (#1141),"The GitCredentialManager org is being re-named to git-ecosystem. In light of this, update references to GitCredentialManager to instead reference git-ecosystem.",1
Add login hint support for GitHub browser-based OAuth authentication (#1137),0.7448468,Improved usability for GitHub auth (#587),"If a username is specified in the remote URL then include this as a login hint when performing OAuth authentication for GitHub. This can help users of multiple accounts select the correct account before the OAuth flow completes and returns a token for the wrong account. GitHub shows this nice prompt when a login hint is provided that does not match the currently logged-in user: At the same time, if there is no logged-in user, then the login page's username box is already filled in: The login hint is specified to GitHub via the extra login query parameter to the authorization endpoint.",1
uri: support ports and split queries/fragments from path (#825),0.6438317,Support ports in URL-scoped config (#825),"GCM currently ignores ports in URIs. This means attempting to authenticate to a URI with a port can lead to some unexpected behavior (e.g. shortcutting the provider auto-detect process won't work, even if the provider is set in config). This change adds support for ports by updating GetGitConfigurationScopes() to recognize them. This change also updates GetRemoteUri() to recognize paths with queries and fragments, as that issue was uncovered during the implementation of the GetGitConfigurationScopes() fix. Without it, input paths containing queries and/or fragments get saved as part of Uri.Path, which converts the query '?' and the fragment '#' to url encoding. I validated these changes with unit tests for applicable scenarios and by running a locally-compiled version of GCM with tracing enabled and the  following config set: credential.link bitbucket Trace logs showed that the override was recognized and auto-detection was skipped.",0
uri: support ports,0.7112589,Support ports in URL-scoped config (#825),"GCM currently ignores ports in URIs. This means attempting to authenticate to a URI with a port can lead to some unexpected behavior (e.g. shortcutting the provider auto-detect process won't work, even if the provider is set in config). This change adds support for ports by updating GetGitConfigurationScopes() to recognize them. This change also updates GetRemoteUri() to recognize paths with queries and fragments, as that issue was uncovered during the implementation of the GetGitConfigurationScopes() fix. Without it, input paths containing queries and/or fragments get saved as part of Uri.Path, which converts the query '?' and the fragment '#' to url encoding.",1
oauth: add test to validate extra params don't override std params,0.55782545,Generic OAuth support via config 🎉 #1062,Add a unit test to ensure that we do not allow overriding or replacing standard OAuth2 query parameters.,0
github: add login hint support for web browser login,0.60595524,Improved usability for GitHub auth (#587),If a username is specified in the remote URL then include this as a login hint when performing OAuth authentication for GitHub.,0
oauth: add ability to pass extra query params in authcode call,0.55419767,Generic OAuth support via config 🎉 #1062,Add the ability to include extra query parameters in the authorization code grant request. This allows consumers of the OAuth2Client to customise the login experience that may include vendor specific args.,0
oauth: drop unused protected properties from client,0.5414194,Generic OAuth support via config 🎉 #1062,,0
git: consistently read from stdout before exit wait (#1136),1.0000002,git: consistently read from stdout before exit wait (#1136),"We should always try and drain standard output before waiting for the Git process to exit. We do this for all other calls that expect output, but missed the TryGet method. This is important if Git ever writes out so much data to stdout that we buffer the output, and then Git will not exit until it can finish writing (and we'd be waiting for Git to exit).",1
trace2: guard against null pipe client in dispose (#1135),0.99999994,trace2: guard against null pipe client in dispose (#1135),Ensure that we don't try to dispose of the pipe client in the Trace2CollectorWriter when it hasn't been created yet.,1
git: consistently read from stdout before exit wait,0.97559756,git: consistently read from stdout before exit wait (#1136),"We should always try and drain standard output before waiting for the Git process to exit. We do this for all other calls that expect output, but missed the TryGet method.",1
trace2: guard against null pipe client in dispose,0.964762,trace2: guard against null pipe client in dispose (#1135),Ensure that we don't try to dispose of the pipe client in the Trace2CollectorWriter when it hasn't been created yet.,1
.net tool: clarify install instructions (#1126),0.9999998,.net tool: clarify install instructions (#1126),"Because we use dotnet publish (which requires a specific framework) to create the payload of our .NET tool package, the package is tied to the framework specified. This means that it will only work with the corresponding .NET SDK for that framework. In light of this, update the .NET tool install instructions to specify that users must download the latest .NET 6.0 SDK as a prerequisite for installing the package, since that is the framework for which we currently publish. This will also need to be updated whenever we upgrade to a new Target Framework. Additionally, remove Windows as a supported .NET tool platform. Since we currently target .NET Framework rather than .NET, the package cannot actually be installed on Windows.",1
.net tool: clarify install instructions,0.96128917,.net tool: clarify install instructions (#1126),"Because we use dotnet publish (which requires a specific framework) to create the payload of our .NET tool package, the package is tied to the framework specified. This means that it will only work with the corresponding .NET SDK for that framework. In light of this, update the .NET tool install instructions to specify that users must download the latest .NET 6.0 SDK as a prerequisite for installing the package, since that is the framework for which we currently publish. This will also need to be updated whenever we upgrade to a new Target Framework. Additionally, remove Windows as a supported .NET tool platform. Since we currently target .NET Framework rather than .NET, the package cannot actually be installed on Windows.",1
build(deps): bump lycheeverse/lychee-action from 1.5.4 to 1.6.1 (#1125),0.45293665,This release is a fast follow to 2.0.692 to fix issues with the Debian package generated as part of that release.,Bumps lycheeverse/lychee-action from 1.5.4 to 1.6.1.,0
build(deps): bump lycheeverse/lychee-action from 1.5.4 to 1.6.1,0.40880245,This release is a fast follow to 2.0.692 to fix issues with the Debian package generated as part of that release.,Bumps lycheeverse/lychee-action from 1.5.4 to 1.6.1. - Release notes - Commits updated-dependencies: - dependency-name: lycheeverse/lychee-action   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] support@github.com,0
Cut new release for Git 2.40 rc0 (#1124),0.48033947,Avoid using the newer --show-scope Git config option - work with downlevel Git versions (#318),GCM release for Git 2.40 release candidate 0.,0
trace2: remove inaccurate warning and add UI helper exit calls (#1114),0.6207206,"Add TRACE2 support(#1131, #1151, #1156, #1162)","Remove warning about being unable to set up tracing from Trace2 TryParseSettings method. This method should just check to see whether TRACE2 is enabled - if it is not, it does not need to warn the user, as we only collect traces from those who actively choose to opt in. Additionally, GCM's UI helpers are connected to the TRACE2 system via the Start() call in ApplicationBase.cs. Since this call records Version and Start events, ensure a corresponding Exit event is called before the helper process completes.",0
"trace2: add default thread name value of ""main""",0.58082587,"Add TRACE2 support(#1131, #1151, #1156, #1162)","The TRACE2 convention for thread naming is for each child process's main thread of execution to be named ""main."" In GCM, however, we encountered an issue with our UI Helper exes - their main threads of execution are named AppMain. To temporarily work around this issue, we default the thread name for all TRACE2 events to ""main"" (rather than changing GCM's process names). This will do for our current events, which are all called from the main thread of execution. However, it is important to note that future events (i.e. regions) will require deeper thought around the GCM/TRACE2 process model, as they will be called on threads from .NET's ThreadPool rather than the main thread of execution.",0
trace2: add exit event to UI helpers,0.5265156,Automatically trace to the debugger when attached (#94),"GCM's UI helpers are connected to the TRACE2 system via the Start() call in ApplicationBase.cs. Since this call records Version and Start events, ensure a corresponding Exit event is called before the helper process completes.",0
docs: fix path in docs/rename.md (#1115),0.46064758,Fix app path name of Windows dropping file extension (#1181),Fix an incorrectly-formatted Windows environment variable in rename.md.,0
fix path,0.5850611,"Fix problems with resolving the executable file path on Linux (#298, #229, #252)",,0
trace2: remove warning from tryparsesettings,0.6103249,docs: add trace2 to config/env documentation (#1230),"Remove warning about being unable to set up tracing from Trace2 TryParseSettings method. This method should just check to see whether TRACE2 is enabled - if it is not, it does not need to warn the user, as we only collect traces from those who actively choose to opt in.",0
docs: clarify .net tool install instructions (#1111),0.8970349,.net tool: clarify install instructions (#1126),"Clarify that the .NET SDK is needed, not just the runtime.",1
Pipe install script directly to sh (#1110),0.38116014,Ensure the /usr/local/bin directory exists on install (#257),This pipes the install from source script on Linux directly to sh.,0
add clarification to Linux installation instructions,0.4628089,Basic Windows installer (#41),also fix broken link,0
Pipe install script directly to sh,0.38176194,Ensure the /usr/local/bin directory exists on install (#257),Similar to flyctl installation instructions: link,0
trace2: add infrastructure and initial events (#1045),0.7787095,Initial TRACE2 tracing events #1045,"Add initial TRACE2 functionality, including: Small refactorings to make TryGetAssemblyVersion accessible outside of the DiagnosticCommand class and shared trace logic accessible from a TraceUtils class. Addition of a Trace2CollectorWriter class, which handles writing to the Telemetry Tool/OTel collector and a Trace2StreamWriter class, which handles writing to stderr/files. Basic TRACE2 functionality, including the ability to add writers to different format targets, logic to send messages to these writers, and the ability to release these writers before application exit. Support for session IDs. Ability for users to enable normal/event format targets. Writing Version, Start, and Exit events.",1
trace2: write exit event,0.61369085,Initial TRACE2 tracing events #1045,"Add TRACE2 exit event, following the pattern established with the version and start events.",0
trace2: write version and start events,0.66622275,Initial TRACE2 tracing events #1045,"Write the TRACE2 version event, which identifies the event format version (currently hardcoded as 3 as it is in Git) and the version of GCM. Additionally, write the TRACE2 start event, which reflects the elapsed time and application arguments (including the application name). These are paired because the telemetry tool/OTel collector require both these events to be sent for a given session.",0
trace2: detect event/normal formats,0.5620279,Initial TRACE2 tracing events #1045,"Add the infrastructure to detect whether a user has enabled the TRACE2 event format or normal format targets. This implementation has been designed to be extended to include the perf format target in a future series. Additionally it involved some refactoring/cleanup to set the Application Path and InstallationDirectory in the CommandContext, rather than in GCM/UI helper Program.cs files.",0
trace2: add sid,0.6568825,"Add TRACE2 support(#1131, #1151, #1156, #1162)","A key component of Git's TRACE2 tracing system is the session id (sid). This identifies the process instance to allow all events emitted by it to be identified. We check to see if a parent sid (i.e. from a Git process) exists. If so, we separate this sid from the GCM sid (a GUID) using a ""/"". If there is no parent sid, we simply generate a GUID for the GCM sid and use that. The above also requires addition of a new SetEnvironmentVariable() method in EnvironmentBase.cs to set the GCM-specific SID variable.",0
trace2: add streamwriter,0.6159649,"Add TRACE2 support(#1131, #1151, #1156, #1162)","Add Trace2StreamWriter class which will be used to write to stderr or a file, based on the TextWriter that is passed to it. It will also adapt the output format based on the format target that is passed to it.",0
trace2: add collectorwriter,0.61123323,"Add TRACE2 support(#1131, #1151, #1156, #1162)",Add the Trace2CollectorWriter class to accept Trace2 messages in the event target format and write them to the OTel Collector/Telemetry Service.,0
trace2: add initial functionality,0.7007939,"Add TRACE2 support(#1131, #1151, #1156, #1162)","Add initial TRACE2 functionality, including: The ability to add writers (which will eventually write to Normal, Perf, and Event format targets). An abstract Trace2Message class. Logic to send Trace2Messages to writers. Ability to release writers prior to application exit.",1
traceutils: add traceutils,0.7253286,docs: add trace2 to config/env documentation (#1230),"The implementation of TRACE2 tracing will require truncation of long file names just as TRACE does. To prepare for this, move this logic out of the TRACE class and into its own method in a new static TraceUtils class. Additionally, add a unit test to validate this logic.",1
assembly: add assemblyutils,0.40806973,"Refactor namespace, assembly and project names (#500)","The implementation of TRACE2 tracing will require use of the TryGetAssemblyVersion method. To prepare for this, move this method out of the DiagnoseCommand class and into its own static class.",0
Add OAuth support to generic host provider (#1062),0.7812691,Generic OAuth support via config 🎉 #1062,"Add ability to provide OAuth-based authentication for generic hosts by way of simple Git configuration. When a remote URL does not match any known host provider plugin, the generic provider will now first check for OAuth configuration in the Git config or environment variables. If such config is available then we try and perform OAuth authentication. Support for device code flow is optional, and refresh tokens will be used if the service supports and returns them. Users can make use of existing Git config include to easily organise and share custom OAuth configurations.",1
generic: add OAuth test for generic provider,0.68740624,Generic OAuth support via config 🎉 #1062,,0
docs: add generic OAuth documentation,0.7529205,Generic OAuth support via config 🎉 #1062,,1
oauth: provide UI prompts for generic OAuth auth,0.69641566,Generic OAuth support via config 🎉 #1062,Add detection and use of GUI prompts for OAuth authentication.,0
generic-ui: add WPF impl of OAuth and device code,0.52206236,Generic OAuth support via config 🎉 #1062,Add the WPF based GUI implementation of the OAuth and device code generic prompts.,0
generic-ui: add Avalonia impl of OAuth and Device Code,0.5621213,Generic OAuth support via config 🎉 #1062,Add AvaloniaUI based implementations of the OAuth and Device Code generic UI prompts.,0
oauth-ui: Add shared VMs and commands for OAuth,0.5992546,Generic OAuth support via config 🎉 #1062,"Add shared view models and commands for the OAuth GUI prompts. Two new commands and VMs are added, one for the initial 'mode' selection, and another to display the device code.",0
generic: add OAuth refresh token support,0.7716766,Handle expired OAuth refresh token for generic auth (#1196),"Add support for storing and using OAuth refresh tokens. Prepend ""refresh_token"" as a subdomain to give better chances of avoiding a name clash compared with appending ""/refresh_token"" to the path component.",1
generic: add OAuth support for browser & devicecode,0.6826173,Generic OAuth support via config 🎉 #1062,Add OAuth support for the generic provider offering browser (authcode grant) and device code (device auth grant) support. Device code and mode selection is initially only offered for TTY users.,0
generic: add ability to read generic OAuth config,0.8060614,Generic OAuth support via config 🎉 #1062,"Teach the Generic host provider to read configuration for OAuth-based authentication. These are largely parameters required for the OAuth2Client to be constructed including Client ID/Secret, Redirect URI and Scopes.",1
linux: ensure symbols tarball contains symbols (#1061),0.46924856,Sign Linux tarball and .NET tool #985 ,A user pointed out in a recent GCM issue that our symbols tarball does not actually contain symbols (see 1 for additional details). Fix the pack.sh script to package the correct files into the symbols tarball.,0
linux: ensure symbols tarball contains symbols,0.42788616,Sign Linux tarball and .NET tool #985 ,A user pointed out in a recent GCM issue that our symbols tarball does not actually contain symbols (see 1 for additional details). Fix the pack.sh script to package the correct files into the symbols tarball.,0
basic-ui: fix bug in VM property,0.4397276,"Fix several UI bugs (#1238, #1241)",Fix a bug in a view model property for the basic credentials prompt; we should be updating the backing field and also raising the PropertyChanged event.,0
docs: update git credential cache platforms (#1049),0.7626923,Support git-credential-cache as a credential backing store on Linux (#287),"GCM's documentation states that git's credential cache is supported on Windows. Unfortunately, due to lack of Unix socket support on Windows versions prior to Windows 10, this feature is not currently supported on Windows, so this change removes it from the list of platforms on which this credstore can be used. See this issue for more details.",1
docs: update git credential cache platforms,0.7772085,Support git-credential-cache as a credential backing store on Linux (#287),"GCM's documentation states that git's credential cache is supported on Windows. Unfortunately, due to lack of Unix socket support on Windows versions prior to Windows 10, this feature is not currently supported on Windows, so this change removes it from the list of platforms on which this credstore can be used. See 1 for more details.",1
docs: standardize gitlab documentation (#1023),0.5188911,Improved usability for GitHub auth (#587),Swap scopes order to match GitLab UI Update casing to match link,0
docs: fix typo in rename.md,0.45823,org-rename: update references to GitCredentialManager (#1141),Convert incorrect use of it's to its.,0
Fix typo,0.37581956,"Fix winget publishing (#332, #338)",,0
Swap order to match GitLab UI,0.3669873,"- Allow overriding the selection of host provider; also supports GitHub Enterprise scenarios (configuration option, migration guide for users of the credential.authority setting) (#59)",,0
build(deps): bump DavidAnson/markdownlint-cli2-action from 8.0.0 to 9.0.0 (#1015),0.5187864,Release pipeline fixes #995 #1009 #1061,Bumps DavidAnson/markdownlint-cli2-action from 8.0.0 to 9.0.0.,0
release: fix tarball signing and Debian compression (#1009),0.5382715,Release pipeline fixes #995 #1009 #1061,"While we added PGP signatures for tarballs in 7baac73, we did not notice that, while ESRP returns a file with the tar.gz extension, it is actually the signature file, not the tarball itself. Correct with this change and validate tarball moving forward so it doesn't happen again! Additionally, a user reported in #997 that the latest GCM Debian package didn't work on Debian distributions. It appears that the version of dpkg that ships with Debian does not support zstd compression. Enforcing xz compression resolves the issue. Finally, this provided an opportunity to clean up some unused variables in pack.sh for Linux and to ensure we check the architecture is found before attemping to use the ARCH variable. These changes were validated with this successful test run in my fork.",0
release: force xz compression for Debian package,0.53302544,Ensure Debian package is expected size and contains necessary files (link),"The GCM Debian package currently fails to install on Debian with the following error: error: archive 'gcm-linux_amd64.2.0.886.deb' uses unknown compression for member 'control.tar.zst', giving up It appears that the version of dpkg that ships with Debian does not support zstd compression 1. Enforcing xz compression resolves the issue. This also provides an opportunity to clean up some unused variables in pack.sh and ensure we check the architecture is found before attempting to use the ARCH variable.",0
release: fix tarball signing,0.67939436,Sign Linux tarball and .NET tool #985 ,"While we added PGP signatures for tarballs in 7baac73, we did not notice that, while ESRP returns a file with the tar.gz extension, it is actually the signature file, not the tarball itself. Correct with this change and validate tarball moving forward so it doesn't happen again!",0
"docs(install): fix link to the "".NET tool"" section (#1007)",0.6802443,.net tool: clarify install instructions (#1126),"Something I noticed today, while looking for a way to install Git Credential Manager for Windows/ARM64.",0
"docs(install): fix link to the "".NET tool"" section",0.654035,.net tool: clarify install instructions (#1126),"At least in GitHub-flavored Markdown, that section title gets transformed into the anchor net-tool, not .NET-tool. Signed-off-by: Johannes Schindelin johannes.schindelin@gmx.de",0
secret service: fix error creating credential (#996),0.7336575,Secret Service sec_free: Assertion cell->requested > 0 failed. error fix #996,"Multiple Linux users have reported that they are unable to use Secret Service as their credential store, as GCM throws the following error: sec_free: Assertion `cell->requested > 0' failed. The root cause is that we're using the libsecret secret_value_get function to obtain secret data, then attempting to free the string with secret_password_free. It appears that secret_password_free is only meant to be used to free nonpageable memory [1], however. Removing this call fixes the issue, as verified with a successful git-credential-manager diagnose (which was previously failing with the above error). [1] secret_password_free manpage link Fixes #793",1
secret service: fix error creating credential,0.6783803,Secret Service sec_free: Assertion cell->requested > 0 failed. error fix #996,"Multiple Linux users have reported that they are unable to use Secret Service as their credential store, as GCM throws the following error: sec_free: Assertion `cell->requested > 0' failed. The root cause is that we're using the libsecret secret_value_get() function to obtain secret data, then attempting to free the string with secret_password_free(). It appears that secret_password_free() is only meant to be used to free nonpageable memory [1], however. Removing this call fixes the issue, as verified with a successful git-credential-manager diagnose (which was previously failing with the above error). [1] secret_password_free manpage link",0
release: correct nupkg path for publishing (#995),0.65978813,Fix computation of installation path on Linux/single-file publish (#310),"When we began signing the .NET tool in 80cc677, we did not update the path used for publishing to nuget.org. Fixing with this change.",0
release: correct nupkg path for publishing,0.6582095,Fix computation of installation path on Linux/single-file publish (#310),"When we began signing the .NET tool in 80cc677, we did not update the path used for publishing to nuget.org. Fixing with this change.",0
GCM Release (#994),0.61511356,Distribute GCM as a dotnet tool (#886),Changes: - Fix various problems with install path and app path variables #968 - Sign Linux tarball and .NET tool #985,0
install from source: publish before attempting install (#987),0.6575023,Validate installers before publishing (#813),The changes from 3978b0e introduced a bug in the install from source workflow - we were attempting to copy binaries before publishing them! Fixing with this change. Validated with this passing workflow in my fork.,0
install from source: publish before attempting install,0.64915776,Validate installers before publishing (#813),The changes from 3978b0e introduced a bug in the install from source workflow - we were attempting to copy binaries before publishing them! Fixing with this change.,0
release: sign Linux tarball and .NET tool (#985),0.93198085,Sign Linux tarball and .NET tool #985 ,Update release workflow to: Split the Linux build.sh script and the .NET tool pack-tool.sh script to more closely align with our compilation and packaging for macOS. Sign Linux tarball in addition to the Debian package.and sign/validate/publish .NET tool .nupkg. Sign/validate/publish the .NET tool .nupkg with every release. I validated these changes with this successful workflow run in my fork.,1
release: sign and publish .NET tool nupkg,0.65416026,Sign Linux tarball and .NET tool #985 ,Update release workflow to sign the .NET tool payload and package and upload the nupkg with each release (in addition to publishing to nuget.org).,0
.NET tool: split packaging script,0.4206579,.net tool: clarify install instructions (#1126),Split pack-tool.sh into two scripts (layout.sh and pack.sh) to allow for payload and package signing.,0
release: sign Linux tarball,0.7382446,Sign Linux tarball and .NET tool #985 ,Sign Linux tarball in addition to Debian package.,1
build: split linux build.sh script,0.48211902,Fix build script error creating incorrect x64 packages for macOS (link),"Split the current build.sh script into 3 scripts: build.sh, layout.sh, and pack.sh. This has the advantages of decoupling building and packaging and more-closely reflects the process we use for building/packaging macOS binaries.",0
Fix various problems with install path and app path variables (#968),0.9793821,Fix various problems with install path and app path variables #968,,1
docs: fix debian uninstall instructions (#975),0.4056122,This release is a fast follow to 2.0.692 to fix issues with the Debian package generated as part of that release.,Update Debian package uninstall instructions to reflect re-name of GCM Core to GCM. Fixes #973,0
build(deps): bump DavidAnson/markdownlint-cli2-action from 7.0.0 to 8.0.0 (#976),0.5062884,This release is a fast follow to 2.0.692 to fix issues with the Debian package generated as part of that release.,Bumps DavidAnson/markdownlint-cli2-action from 7.0.0 to 8.0.0.,0
docs: fix debian uninstall instructions,0.38661948,Ensure Debian package is expected size and contains necessary files (link),Update Debian package uninstall instructions to reflect re-name of GCM Core to GCM.,0
app: fix Windows app-path resolution,0.66786534,Fix app path name of Windows dropping file extension (#1181),"Fix another bug in how we compute the Application Executable path on Windows. It some cases we can still get a relative/non-absolute path to the entry executable. If we get a filename/non-path from the native API calls then return null and fallback to using process/module image resolution instead. For .NET Framework on Windows, this is OK. We will want to revisit this on .NET (Core) on Windows, if and when we get around to that...",0
app: fix bug in oldname warning on Windows,0.62112087,Fix app path name of Windows dropping file extension (#1181),"Fix a bug in the old-name warning detection that only presents on Windows when bundled with Git for Windows, and when configured using the shorthand config credential.helper=manager-core. In this scenario, our argv[0] is missing the "".exe"" extension (that's actually present in the file name of course) because ... mingw reasons. Instead of matching ""git-credential-manager-core.exe"" on Windows, just strip "".exe"" if present on Windows, and always match ""git-credential-manager-core"" on all platforms.",0
app: fix installation dir calculation,0.60908693,Fix various problems with install path and app path variables #968,"On Windows, when invoked as a partial name (e.g., manager) our command line argv[0] is just a file name, not a full file path! We incorrectly assumed that Environment.GetCommandLineArgs()[0] was always absolute! We should instead use AppContext.BaseDirectory that, in all circumstances tested, all on TFMs and OSs, all publish options, and as a .NET tool... returns the expected full, absolute path to the installation directory.",0
env: ensure we don't return empty PATH vars on Windows,0.47108355,Updated to manually scanning $PATH instead of using which on POSIX systems (#717),"Ensure that we don't return empty PATH values on Windows when splitting. It's common that on Windows the PATH can be inadvertently modified such that an empty value is included, and this can lead to weird resolution of executables using the current directory. As it stands, no existing codepaths would trigger this today when invoked by Git for Windows, but let's make sure this never happens in the future by mistake!",0
authbase: gracefully handle no-default UI helper case,0.46256778,Add generic username/password UI (#871),"If there is no hard-coded UI helper, we should gracefully handle the lookup by returning false, rather than crashing due to a argument exception when passing null or an empty string to a Path API.",0
Release (#961),0.484286,Release pipeline fixes #995 #1009 #1061,Changes: Convert issue templates to YAML (link) Replace netstandard2.0 with dotnet6.0 (link) Ensure correct installation directory resolution for all OSes and distribution methods (#951) Align with dotnet-supported Linux distributions (#953),0
build(deps): bump lycheeverse/lychee-action from 1.5.2 to 1.5.4 (#955),0.44942272,This release is a fast follow to 2.0.692 to fix issues with the Debian package generated as part of that release.,"Bumps lycheeverse/lychee-action from 1.5.2 to 1.5.4. Release notes Sourced from lycheeverse/lychee-action's releases. Version 1.5.4 What's Changed Cleanup old lychee bin after install by @​mre in lycheeverse/lychee-action#172 Full Changelog: link Version 1.5.3 What's Changed Bump lychee version to fix issues with email checking by @​mre in lycheeverse/lychee-action#171 Full Changelog: link Commits 4dcb8be bump version 0682ed6 Cleanup old lychee bin after install (#172) 02de231 Update lychee-actionn release in docs 0fcec0b Bump lychee version (#171) See full diff in compare view Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase. Dependabot commands and options You can trigger Dependabot actions by commenting on this PR: - module will rebase this PR - module will recreate this PR, overwriting any edits that have been made to it - module will merge this PR after your CI passes on it - module will squash and merge this PR after your CI passes on it - module will cancel a previously requested merge and block automerging - module will reopen this PR if it is closed - module will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - module will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - module will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - module will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",0
Ensure certificate validation works on Mac/Linux (#954),0.45580184,Add support for client TLS certificates (#1152),"In 65cead2b5caa we removed the .NET Standard target in favour of a direct .NET 6 target, however we missed this conditional compilation symbol referrering to NETSTANDARD.",0
build(deps): bump lycheeverse/lychee-action from 1.5.2 to 1.5.4,0.40765703,This release is a fast follow to 2.0.692 to fix issues with the Debian package generated as part of that release.,Bumps lycheeverse/lychee-action from 1.5.2 to 1.5.4. - Release notes - Commits updated-dependencies: - dependency-name: lycheeverse/lychee-action   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] support@github.com,0
http: ensure cert validation works on Mac/Linux,0.4236407,"Respect http.sslCAInfo settings (#242, #411)","In 65cead2b5caa we removed the .NET Standard target in favour of a direct .NET 6 target, however we missed this conditional compilation symbol referrering to NETSTANDARD.",0
Fix problems with application path and installation directory resolution (#951),0.80048585,Fix various problems with install path and app path variables #968,"When we introduced the rename warning in #551, there was broken logic for resolving the actual invoked program name on Mac and Linux. Windows We continue to use CommandLineToArgvW(GetCommandLine(), ..) to return the absolute, full path to the entry executable. macOS Switch from _NSGetArgv() to _NSGetExecutablePath(..) which, like the Windows APIs above, returns the full path to the entry executable (or symlink). Linux As there is no equivalent to CommandLineToArgvW or _NSGetExecutablePath here, we instead do some path computation based on the form of argv[0] that we get from /proc/self/cmdline. - If the value is an absolute path, just use that. - If the value is relative to the current directory (./name) then combine this with the current directory. - If the value contains a directory separator (dir/name) then also resolve this from the current directory. - Otherwise, this argv[0] value must have been a file name (name) resolved from the $PATH. If we still don't manage to resolve from the $PATH, try and resolve the symlink /proc/self/exe that points to the executable image that was loaded from disk. Note that we may miss any intermediate link names here, but it's better than nothing. In addition, we also never tested the .NET Tool scenario after updating the ICommandContext.ApplicationPath to use the entry executable name, whereas previously this was computed from the .NET assembly path. Introduce a separate concept, the InstallationDirectory that always points to the home of the core assemblies. This is used for resolving things like in-box UI helpers.",1
libsecret: fix warning with move to net6.0 TFM,0.5214588,Allow use of older versions of libsecret such as in Ubuntu 18.04 (#244),"Moving to target .NET 6 directly with the core library has unearthed a bug/warning in the secret service implementation. IntPtr is a value type, so it can never be null.. we should have been comparing this pointer to IntPtr.Zero.",0
argv0: fix implementation of getting native argv[0],0.35870945,trace2: guard against null pipe client in dispose (#1135),"Our previous implementation of getting the native argv[0] was flawed on Linux and Mac. The Mac _NSArgv and Linux /proc/self/cmdline function/proc-file return the raw argv[0] which may not be an absolute or rooted path, but we expected this to be the same. Additionally, the logic of appending the CWD to the argv[0] value when the latter wasn't rooted was also just wrong! Update to now use _NSExecutablePath on macOS, which always returns the full absolute path, and add correct handling of unrooted argv[0] on Linux. Furthermore, on Linux, if we are unable to handle the value from /proc/self/cmdline, we fall back to resolving the /proc/self/exe symlink instead.",0
apppath: introduce ICommandContext.InstallationDirectory,0.5182607,Fix various problems with install path and app path variables #968,"Introduce a new property on the ICommandContext that represents the GCM installation directory, separate from the application executable path. The app executable is not always found in the installation directory if the app exe path is a symlink (or we're a .NET tool where the AppHost is outside of the tool store).",0
fs: resolve symlinks and fix bugs in *FileSystem impls,0.41834652,"Fix problems with resolving the executable file path on Linux (#298, #229, #252)","There is a systematic bug in all the IFileSystem implementations in that we were incorrectly calling Path.GetFileName rather than Path.GetFullPath, meaning we're only comparing the file names of two paths for equality! Fix this. For Mac and Linux we also handle symlinks (or firmlinks) by now using the .NET APIs to resolve links. On .NET Framework we don't do anything.",0
linux: align with dotnet distros (#953),0.9307947,Align with dotnet-supported Linux distributions (link),Update install-from-source.sh and validate-install-from-source.yml to align with dotnet-supported Linux distributions. Clarify in README.md that the dotnet-supported distributions are the only ones for which GCM guarantees support. Link to successful validation workflow: link,1
docs: udpate comment on supported distros,0.48274407,Very early support for Linux (#135),Update comment around GCM-supported distributions in README.md to reflect decision to align with dotnet-supported distributions.,0
install-from-source: align with dotnet-supported distros,0.787479,Align with dotnet-supported Linux distributions (link),Update install-from-source script to align with dotnet's supported Linux distributions: link,1
build(deps): bump lycheeverse/lychee-action from 1.5.1 to 1.5.2 (#952),0.45865914,This release is a fast follow to 2.0.692 to fix issues with the Debian package generated as part of that release.,Bumps lycheeverse/lychee-action from 1.5.1 to 1.5.2.,0
Convert issue templates to YAML,0.9682096,Convert issue templates to YAML (link),Co-authored-by: Matthew John Cheetham mjcheetham@outlook.com,1
build(deps): bump lycheeverse/lychee-action from 1.5.1 to 1.5.2,0.4165247,This release is a fast follow to 2.0.692 to fix issues with the Debian package generated as part of that release.,Bumps lycheeverse/lychee-action from 1.5.1 to 1.5.2. - Release notes - Commits updated-dependencies: - dependency-name: lycheeverse/lychee-action   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] support@github.com,0
build: replace netstandard2.0 TFM with net6.0,0.7905598,Replace netstandard2.0 with dotnet6.0 (link),"Replace netstandard2.0 where possible with net6.0, or dual target net6.0 and net472 for projects that are included on Windows.",1
docs: Update README docs links (#946),0.71650136,Update documentation to use reference-style links (#680),"Update README docs links to point at release branch. The goal of this change is to avoid confusing users when we merge major changes (e.g. the executable rename, the dotnet tool install option, etc.) to main but have not yet released them. With this update, the documentation should align with the latest release.",1
docs: Update README docs links,0.662517,Update documentation to use reference-style links (#680),"Update README docs links to point at release branch. The goal of this change is to avoid confusing users when we merge major changes (e.g. the executable rename, the dotnet tool install option, etc.) to main but have not yet released them. With this update, the documentation should align with the latest release.",0
Release (#944),0.50105524,Release pipeline fixes #995 #1009 #1061,Changes: Check for broken links in documentation (#700) Support macOS arm64 installs via Homebrew (#798)  Validate installers before publishing (#813) Auto-generate maintainer away notification issues (#842) Install dotnet via Jammy feeds on Ubuntu 22.04 and greater (#839) Access Azure storage account using service principle credentials (#851) Update documentation to use reference-style links (#680) Unify documentation line length (#862) Add generic username/password UI (#871) Bitbucket DC OAuth support (#607) Distribute GCM as a dotnet tool (#886) Drop -core suffix from entry executable #551  Speed up build graph (#924),0
release: remove automatic workflow trigger (#943),0.4444635,Release pipeline fixes #995 #1009 #1061,Remove the trigger to automatically run the release workflow when changes are merged to the release branch. This will give us better control over our release process and allow us to make changes to the branch if needed without running the workflow.,0
Update README.md,0.5066434,Various documentation updates:,,0
diagnose: always use IHttpClientFactory for diagnose (#942),0.3984793,Ensure we init IEnvironment before SessionManager (#1167),"The Network diagnostic currently makes two passes of the tests, one using a 'raw' HttpClient and another using one created by the product HttpClientFactory. However, we've not actually been using the factory-built client in the tests! Furthermore, the raw HTTP client will not exercise test correctly if the machine is behind a corporate proxy, so let's just drop that option. Fixes #927",0
release: remove automatic workflow trigger,0.3564487,Auto-generate maintainer away notification issues (#842),Remove the trigger to automatically run the release workflow when changes are merged to the release branch. This will give us better control over our release process and allow us to make changes to the branch if needed without running the workflow.,0
diagnose: always use IHttpClientFactory for diagnose,0.37352824,Ensure we init IEnvironment before SessionManager (#1167),"The Network diagnostic currently makes two passes of the tests, one using a 'raw' HttpClient and another using one created by the product HttpClientFactory. However, we've not actually been using the factory-built client in the tests! Furthermore, the raw HTTP client will not exercise test correctly if the machine is behind a corporate proxy, so let's just drop that option.",0
docs: absolute --> relative paths,0.473001,Updated to manually scanning $PATH instead of using which on POSIX systems (#717),Change absolute paths to relative paths in install.md to remain consistent with the style used in other files.,0
Fix docs/x.md relative links (#938),0.54773194,Check for broken links in documentation (#700),"Some link references were broken, e.g. [gcm-wsl]: docs/wsl.md led to .../docs/docs/wsl.md (note 2 docs in path) This PR fixes those links to properly point to .../docs/x.md (1 docs in path)",0
Fix docs/x.md relative links,0.48688745,Check for broken links in documentation (#700),"Some link references were broken, e.g. [gcm-wsl]: docs/wsl.md led to .../docs/docs/wsl.md (note 2 docs in path) This PR fixes those links to properly point to .../docs/x.md (1 docs in path)",0
docs: migrate install/resource README sections to new files (#937),0.5055755,Various documentation updates:,"In an effort to make the README more concise, move install instructions/additional resources into new install.md and docs/README.md files.",0
docs: separate additional resources from README,0.4611915,Various documentation updates:,"In an effort to make our README more concise, move additional resources into a new docs/README.md file.",0
docs: separate install information from README,0.4693281,Validate installers before publishing (#813),"In an effort to make our README more concise, move GCM install instructions into a new install.md file. Additionally, add a section detailing how to install GCM as a dotnet tool.",0
build: fix/speed-up build graph dependencies (#924),0.71425045,Speed up build graph (#924),"When building the entire solution, we need to ensure the various ""Installer."" and ""Packaging."" projects are not built at the same time as other projects, especially on Windows, where we may hit file locking problems. The installer projects call a build script internally that calls a dotnet publish on various projects. By making the installer projects reference (but not consume) the dependent projects we ensure MSBuild won't build them until the end, and prevent file access errors. At the same time, we can probably remove the ""-m:1"" flags that tell MSBuild to only build one project at a time.",1
build(deps): bump actions/setup-dotnet from 3.0.2 to 3.0.3 (#932),0.5611402,Fix release builds .NET SDK version (#358),build(deps): bump actions/setup-dotnet from 3.0.2 to 3.0.3,0
build(deps): bump actions/setup-dotnet from 3.0.2 to 3.0.3,0.5446721,Fix release builds .NET SDK version (#358),Bumps actions/setup-dotnet from 3.0.2 to 3.0.3. - Release notes - Commits updated-dependencies: - dependency-name: actions/setup-dotnet   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] support@github.com,0
Add KDE Gitlab (invent.kde.org) instance to the list of supported services (#920),0.43789798,"Add explicit PAT authentication mode for the GitHub Provider (#236, #259)",This adds support for another popular OSS project (KDE) to Git Credential Manager.,0
windows: add missing DllImport attribute to LocalFree (#923),0.42850235,Target 32-bit on Windows (#112),Accidentally left off the [DllImport] attribute when adding this extern.. now it'll actually point to the correct function in the DLL.,0
build: fix/speed-up build graph dependencies,0.6771604,Speed up build graph (#924),"When building the entire solution, we need to ensure the various ""Installer."" and ""Packaging."" projects are not built at the same time as other projects, especially on Windows, where we may hit file locking problems. The installer projects call a build script internally that calls a dotnet publish on various projects. By making the installer projects reference (but not consume) the dependent projects we ensure MSBuild won't build them until the end, and prevent file access errors. At the same time, we can probably remove the ""-m:1"" flags that tell MSBuild to only build one project at a time.",0
windows: add missing DllImport attribute to LocalFree,0.403013,Target 32-bit on Windows (#112),,0
Update markdownlint-cli2-action to 7.0.0 (#910),0.3849072,Release pipeline fixes #995 #1009 #1061,"This required fixing some newly found lint issues. Additionally some issues are in files (workflow templates) that are structured in such a way that do not easily allow correction, so I have adjusted the linter configuration to ignore these files for now. They could instead be corrected in a later commit.",0
"Rename entry executable to drop ""-core"" suffix (#551)",0.9193324,Drop -core suffix from entry executable #551 ,"Rename the main entry executable from git-credential-manager-core(.exe) to simply git-credential-manager(.exe), now that the older GCM4W has been removed from the Git for Windows project as an option (and the GCMC project has been renamed). We do not rename the Debian package ID, nor the Homebrew Cask name yet as this will require more thought forr migration. To help with migration somewhat, create symlinks and shim/copy-executables for the original executable name ""git-credential-manager-core(.exe)"" for consumers who have not updated to the new version. We detect if the consumer is launching us via the ""-core"" symlink or executable shim by consulting the platform-native APIs to get the original ""argv[0]"". All of the .NET APIs sadly don't give us the real ""argv[0]"", so we need to use native APIs... If we detect use of the old name, print a warning that the user should update their configuration, and a help link for more information.",1
docs: add documentation about the GCM.exe rename,0.5729767,Add ability to read GCM default settings from the Windows Registry (#404),"Add documentation with information about the GCM.exe rename, and how to fix-up any configuration after the change. The aka.ms/gcm/rename shortlink points to this document.",0
gcm: create symlinks and warn message for gcmcore exec,0.56907415,"Set the full path to standalone GCM Core installs, enabling overriding of bundled versions (#188, #199)","Create symlinks and shim/copy-executables for the original exec ""git-credential-manager-core(.exe)"" name for consumers who have not updated to the new name. We detect if the consumer is launching us via the ""-core"" symlink or executable shim by consulting the platform-native APIs to get the original ""argv[0]"". All of the .NET APIs sadly don't give us the real ""argv[0]"", so we need to use native APIs... If we detect use of the old name, print a warning that the user should update their configuration, and a help link for more information.",0
Add KDE Gitlab (invent.kde.org) instance to the list of supported services.,0.42460257,"Add explicit PAT authentication mode for the GitHub Provider (#236, #259)",,0
Update markdownlint-cli2-action to 7.0.0,0.3617134,Update System.CommandLine and fix some bugs (#531),"This required fixing some newly found lint issues. Additionally some issues are in files (workflow templates) that are structured in such a way that do not easily allow correction, so I have adjusted the linter configuration to ignore these files for now. They could instead be corrected in a later commit.",0
Merge pull request #905 from mjcheetham/pkgicon,0.38811117,Release pipeline fixes #995 #1009 #1061,Add icon to dotnet tool NuGet package,0
dotnet-tool: include core UI helper in package,0.48828578,Include UI helpers in Debian package for Linux release; move GCM symlink to /usr/local/bin (#405),We missed the core UI helper from the dotnet tool package - include it!,0
winui: fix up a bug that was introduced in an earlier PR,0.5392571,"Fix several UI bugs (#1238, #1241)",Fix a bug that was introduced in an earlier PR to build the Core UI helper (WPF) for Windows. We don't need to specify the TFM or RID for these projects.,0
dotnet-tool: add GCM icon to tool nuget package,0.64395034,Distribute GCM as a dotnet tool (#886),Add the GCM icon to the NuGet package used for the dotnet tool. The image is copied to the root of the package under a new images directory (/images). The tool payload continues to be copied under the required /tool/net6.0/any directory. Modify the pack-tool.sh script to keep all build output under the /out directory of the repository (which is in .gitignore). Output from running pack-tool.sh now looks like this: . └── out     └── shared         └── DotnetTool             └── nupkg                 └── Debug                     ├── git-credential-manager.$VERSION.nupkg                     ├── images       # icon                     ├── payload      # dotnet publish output                     └── payload.sym  # pdbs The contents of the NuGet package looks like this: . ├── [Content_Types].xml ├── _rels ├── git-credential-manager.nuspec ├── images │   └── icon.png          # copied from the output images/ dir ├── package │   └── services │       └── metadata/... └── tools     └── net6.0         └── any/...       # copied from the output payload/ dir,0
build: explicitly pass version and conf args to pack-tool.sh,0.48815224,Fix build script error creating incorrect x64 packages for macOS (link),"Explicitly pass the version and build configuration to the dotnet tool packaging script. Also revert to a default Debug config for local builds; this is consistent with all other artifacts in the build for dev (macOS pkg, Windows installers, deb, etc)",0
Merge pull request #902 from GitCredentialManager/dependabot/github_actions/actions/setup-dotnet-3.0.2,0.53785527,Migrated release process from Azure DevOps to GitHub actions (#707),build(deps): bump actions/setup-dotnet from 3.0.1 to 3.0.2,0
Merge pull request #903 from mjcheetham/fix-winstall,0.46749973,Release pipeline fixes #995 #1009 #1061,Include git-credential-manager-ui.exe in installer,0
gcm: rename entry executable to drop -core suffix,0.6809037,Drop -core suffix from entry executable #551 ,"Rename the main entry executable from git-credential-manager-core(.exe) to simply git-credential-manager(.exe), now that the older GCM4W has been removed from the Git for Windows project as an option (and the GCMC project has been renamed). We do not rename the Debian package ID, nor the Homebrew Cask name yet as this will require more thought for migration.",0
windows: include git-credential-manager-ui.exe in installer,0.6329652,Ensure git-credential-manager-core command is available after Debian package install (link),We forget to include the core UI helper (WPF) in the Windows installer manifest.. add it!,0
build(deps): bump actions/setup-dotnet from 3.0.1 to 3.0.2,0.55572903,Fix release builds .NET SDK version (#358),Bumps actions/setup-dotnet from 3.0.1 to 3.0.2. - Release notes - Commits updated-dependencies: - dependency-name: actions/setup-dotnet   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] support@github.com,0
Merge pull request #901 from ldennington/rename-dotnet-tool-package,0.5105255,Replace netstandard2.0 with dotnet6.0 (link),dotnet tool: rename package,0
dotnet tool: rename package,0.53139967,"Refactor namespace, assembly and project names (#500)","Change the name and author of the dotnet tool package from GitCredentialManager.Cli to git-credential-manager. The reason for this change is that we were able to transfer ownership of this package (which was previously owned by JetBrains) to the git-credential-manager organization on NuGet.org.  There should not be any customer impact related to this change, as the GitCredentialManager.Cli package had yet to be published.",0
Merge pull request #886 from ldennington/dotnet-tool,0.5238045,Align with dotnet-supported Linux distributions (link),release: package gcm as dotnet tool,0
release: publish gcm as dotnet tool,0.90391535,Distribute GCM as a dotnet tool (#886),"Add a new DotnetTool project containing the needed files to publish GCM as a cross-platform dotnet tool. Additionally, update GCM to use helper dlls if exes are not found in the Application directory. At present, dlls are only used in the dotnet tool scenario to minimize the package size and to make it cross-platform compatible.",1
Merge pull request #890 from GitCredentialManager/dependabot/github_actions/actions/checkout-3.1.0,0.49757499,Migrated release process from Azure DevOps to GitHub actions (#707),build(deps): bump actions/checkout from 3 to 3.1.0,0
Merge pull request #607 from mminns/issue/573-OAuth2-support-for-Bitbucket-DC,0.7741598,Bitbucket DC OAuth support (#607),Issue/573 OAuth2 support for Bitbucket DC,1
Merge pull request #895 from wolf99/document-doc-linting,0.4370721,More winget publishing fixes (#353),Document how to lint documentation,0
Merge pull request #894 from wolf99/github-usercontent-images,0.47049832,Improved usability for GitHub auth (#587),Replace githubusercontent images,0
Merge pull request #893 from wolf99/update-rfc-links,0.47432646,Update documentation to use reference-style links (#680),Updates RFC links to authoritative URL,0
Merge pull request #892 from GitCredentialManager/mjcheetham/linux-install-link,0.42564967,Fix computation of installation path on Linux/single-file publish (#310),docs: use short link for Linux install src,0
Merge pull request #887 from GitCredentialManager/dependabot/github_actions/actions/setup-dotnet-3.0.1,0.53856516,Migrated release process from Azure DevOps to GitHub actions (#707),build(deps): bump actions/setup-dotnet from 3.0.0 to 3.0.1,0
Document how to lint documentation,0.40111297,Various documentation updates:,Adds a brief section to the docs/document.md on how linting of documents is done.,0
Replace githubusercontent images,0.45073694,"Add explicit PAT authentication mode for the GitHub Provider (#236, #259)",Fixes #863,0
Updates RFC links to authoritative URL,0.5067864,Update documentation to use reference-style links (#680),"The current URLs use an outdated source. The rfc-editor.org site is stated to be the authoritative source, see aaragraph 3 on link/. The redirection used at the existing URL cause the later versions of the link checker to fail for the instances in the documentation. However, instances in the source code comments have also been updated.",0
docs: use short link for Linux install src,0.5328031,Fix computation of installation path on Linux/single-file publish (#310),Use a short link for the Linux install from source script. Signed-off-by: Matthew John Cheetham mjcheetham@outlook.com,0
build(deps): bump actions/checkout from 3 to 3.1.0,0.39475954,Move to .NET Core 3.1 (LTS) (#101),Bumps actions/checkout from 3 to 3.1.0. - Release notes - Changelog - Commits updated-dependencies: - dependency-name: actions/checkout   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] support@github.com,0
Issue 573 docs: Document the use and development of OAuth2 for Bitbucket DC,0.8639047,Bitbucket DC OAuth support (#607),Update docs/environment.md and docs/configuration.md to document the new configuration options for managing Bitbucket DC OAuth2 Client ID and Client Secrets Update docs//bitbucket-development.md to document how to create a test Bitbucket DC environment and OAuth2 setup,1
Issue 573 Add support for OAuth2 for Bitbucket DC,0.8797308,Bitbucket DC OAuth support (#607),New implementations of the interface IBitbucketRestApi and abstract class BitbucketOAuth2Client provide client code for interacting with the Bitbucket DC REST API and OAuth2 implementation. Extending the BitbucketRestApiRegistry and OAuth2ClientRegistry to provide these Bitbucket DC implementations when a DC host is detected means BitbucketAuthentication and BitbucketHostProvider remain agnostic about which form of Bitbcuket host they are interacting with Prior to this feature users were limited to using Basic Auth or HTTP Access Tokens to interact securely with a Bitbucket DC instance. OAuth2 provides a better solution for SSO environments,1
Issue 573 Refactor Bitbucket implementation to allow for the support of Bitbucket DC's OAuth2 implementation,0.8551463,Bitbucket DC OAuth support (#607),The BitbucketAuthentication and BitbucketHostProvider remain the single points of entry to processing authentication for all Bitbucket hosts. Bitbucket DC and Bitbucket Cloud do not share common REST APIs or common OAuth2 implementations. The interface IBitbucketRestApi and abstract class BitbucketOAuth2Client effectively hide the differences in implementation from BitbucketAuthentication and BitbucketHostProvider The interface IBitbucketRestApi and abstract class BitbucketOAuth2Client provide clear extension points to implement OAuth2 support for Bitbucket DC,1
Issue 573 Write the results of GET command calls to the log,0.41965204,Add new diagnose command to help debug problems in the wild (#463),"Use the WriteDictionarySecrets() method to safely log the dictionary of data that will be written back to the calling Git process When it is necessary to follow the processing in GCM during a call from Git the GCM_TRACE environment variable can be used to print trace information to standard error, however the ultimate output of GET commands would not be included in this trace information This lack of visibility is especially problematic during multi-stage authentication such as OAuth, adding safe logging of the final output makes it possible to follow the GCM process in realtime from inputs to outputs during Git GET requests",0
build(deps): bump actions/setup-dotnet from 3.0.0 to 3.0.1,0.56915414,Move to .NET Core 3.1 (LTS) (#101),Bumps actions/setup-dotnet from 3.0.0 to 3.0.1. - Release notes - Commits updated-dependencies: - dependency-name: actions/setup-dotnet   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] support@github.com,0
Merge pull request #883 from GitCredentialManager/dependabot/github_actions/actions/setup-dotnet-3.0.0,0.53478014,Migrated release process from Azure DevOps to GitHub actions (#707),build(deps): bump actions/setup-dotnet from 2 to 3.0.0,0
Merge pull request #884 from ldennington/fix-windows-zip,0.4358897,Update System.CommandLine and fix some bugs (#531),release: fix Windows archives,0
release: fix Windows archives,0.46974722,Patched an issue whereby cloning malicious repository on Windows could result in execution of an unverified executable,"When we transitioned our release workflow to GitHub actions, we started using Powershell's Compress-Archive cmdlet to zip our Windows binaries. However, this unfortunately does not play nicely with unzip in WSL. Since we're publishing the archives from an Ubuntu machine, switch to creating the archives with the zip command in the default bash shell to correct the issue.",0
build(deps): bump actions/setup-dotnet from 2 to 3.0.0,0.56320834,Fix release builds .NET SDK version (#358),Bumps actions/setup-dotnet from 2 to 3.0.0. - Release notes - Commits updated-dependencies: - dependency-name: actions/setup-dotnet   dependency-type: direct:production   update-type: version-update:semver-major ... Signed-off-by: dependabot[bot] support@github.com,0
Merge pull request #871 from mjcheetham/generic-ui,0.43823504,Add generic username/password UI (#871),Add generic username/password UI to all platforms,0
install: include core UI app in all installers,0.5296509,Split the Windows installer into user- and system-wide 'flavours' (#197),,0
basic: replace system UI with new UI helper,0.47187606,Add generic username/password UI (#871),Replace calls to the native system UI prompts with shelling out to the generic helper UI.,0
wpfui: add a WPF-based UI for generic cred prompt,0.6085892,Add native basic credential UI prompts for Windows (#92),Add a WPF/Windows UI prompt for the generic/basic username and password prompt.,0
ui: add Avalonia-based UI for generic cred prompt,0.603181,Make Avalonia UI the default Windows and move to in-process (#1207),Add an Avalonia-based UI prompt for the generic/basic credential prompt.,0
ui: add generic 'basic' credentials UI VM and command,0.61554986,Add generic username/password UI (#871),Add a generic credentials prompt view model and command for collecting username/passwords.,0
Merge pull request #867 from hickford/gitlab-config,0.52432406,Fix bug in Git config matching due due case sensitivity (#234),Add config for several popular GitLab instances to docs,0
Convenience config for several popular GitLab instances,0.5432627,Git Host Providers:,,0
avnui: include images in app app views in Avaloina UIs,0.24478114,Make Avalonia UI the default Windows and move to in-process (#1207),Include the images resource across all the Avalonia UI applications.,0
avn: workaround a macOS window focus bug,0.38143665,Make Avalonia UI the default Windows and move to in-process (#1207),"For some reason on macOS windows that are activated are not appearing on top, and get lost behind other application windows. The platform implementation on macOS is seemingly correctly calling the makeKeyAndOrderFront native windowing API, but it's not being made ""key and front"". Setting the ""topmost"" flag true (and then false again) brings our windows to the front, which is what we want.",0
avn: update to latest Avalonia UI,0.565253,Make Avalonia UI the default Windows and move to in-process (#1207),,0
Merge pull request #862 from wolf99/doc-line-length,0.6305915,Unify documentation line length (#862),Unify line length across docs,0
Update docs/gitlab.md,0.47526452,Update to Git Credential Manager Core (beta) on macOS.,Co-authored-by: Lessley Dennington ldennington@github.com,0
Break inline code line,0.23850936,Unify documentation line length (#862),,0
Unify line length across docs,0.59134936,Unify documentation line length (#862),,0
Merge pull request #680 from wolf99/ref-style-links,0.6596268,Update documentation to use reference-style links (#680),Switch to reference style links,0
Add review suggestions,0.21808454,@garvit-joshi ,,0
Switch to ref style links,0.6774029,Update documentation to use reference-style links (#680),,0
Fix azrepos link,0.39039588,Check for broken links in documentation (#700),,0
Convert prose ref links to snake-case,0.48490012,Update documentation to use reference-style links (#680),,0
Remove Host Provider doc front matter,0.5487479,Fix a bug with host provider disposal (#272),,0
Switch to reference style links,0.7434666,Update documentation to use reference-style links (#680),,1
Merge pull request #851 from ldennington/remove-azure-storage-key,0.52994215,"Fix a bug with using Microsoft Accounts with Azure Repos (#143, #148)",release: access Azure Storage Account with login credentials,0
release: access Azure Storage Account with login credentials,0.8001184,Access Azure storage account using service principle credentials (#851),Use --auth-mode login command to access ESRP Azure Storage Account instead of AZURE_STORAGE_KEY. This allows us to reuse the git-fundamentals-esrp service principal login credentials we're already using for other resources and is a more secure mode of access than using the storage key.,1
Merge pull request #839 from ldennington/ubuntu-jammy,0.37779382,This release is a fast follow to 2.0.692 to fix issues with the Debian package generated as part of that release.,install from source: use native feeds for Ubuntu 22.04,0
Merge pull request #842 from ldennington/ooo-template,0.41446018,issue templates: remove core suffix (#1180),workflows: auto-generate maintainer away issue,0
workflows: auto-generate maintainer away issue,0.74088323,Auto-generate maintainer away notification issues (#842),Add a new workflow to create issues that will notify GCM users and contributors of when maintainers are away and the repo is not being actively monitored. This workflow is controlled by a workflow_dispatch trigger that requires both a start date and end date for maintainer absence before running.,1
install from source: clean up comments,0.42985487,Validate installers before publishing (#813),Update comments in the install from source script so that: Sentences begin with capital letters. Sentences end with punctuation. Comments are within 80 characters per line.,0
install from source: add support for Jammy Jellyfish,0.34728608,Validate installers before publishing (#813),"The dotnet team recently added support for installing natively from Jammy feeds on Ubuntu 22.04: link This unfortunately created problems with our current install from source script, as it caused conflicts with the packages.microsoft.com feed we use for Debian/Ubuntu. This change modifies the Debian/Ubuntu dotnet install process to install from Jammy feeds for users on Ubuntu 22.04 and greater while continuing to use the packages.microsoft.com feed for Debian and older Ubuntu versions.",0
Merge pull request #813 from ldennington/validate-installers,0.6052637,Validate installers before publishing (#813),release: add installer validation,0
release: add installer validation,0.76356184,Validate installers before publishing (#813),"Add basic installer validation to release pipeline for Windows, macOS (x64 only), and Linux (Debian package only). Validation runs the installers/any necessary setup and checks that the installed version matches the expected version.",1
Merge pull request #798 from ldennington/homebrew-publish-m1-package,0.5071446,Discontinued incorrect use of Homebrew Git shim (#731),macos arm64: Homebrew updates,0
homebrew release: update regex and remove PR,0.44757056,Discontinued incorrect use of Homebrew Git shim (#731),"Update release asset regex to specify runtime and version groups so that update-homebrew task can correctly detect version. Additionally, remove alwaysUsePullRequest parameter so that Homebrew releases become automatic.",0
Merge pull request #826 from GitCredentialManager/dependabot/github_actions/mjcheetham/update-homebrew-1.2,0.554824,Discontinued incorrect use of Homebrew Git shim (#731),build(deps): bump mjcheetham/update-homebrew from 1.1 to 1.2,0
build(deps): bump mjcheetham/update-homebrew from 1.1 to 1.2,0.4400835,Mac installer will now unlink the Java GCM via Homebrew if installed (#45),Bumps mjcheetham/update-homebrew from 1.1 to 1.2. - Release notes - Commits updated-dependencies: - dependency-name: mjcheetham/update-homebrew   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] support@github.com,0
Merge pull request #819 from ldennington/update-azure-resource-names,0.5131643,"Fix a bug with using Microsoft Accounts with Azure Repos (#143, #148)",release: update Azure storage resource names,0
release: update Azure storage resource names,0.48882905,- Azure Repos,"The previous Azure resource architecture separated GCM and Microsoft Git resources into different Resource Groups. This led to redundancy - we were storing all our secrets, certificates, etc. in two places. These updates reflect the consolidation of these resources into the new esrp Resource Group.",0
Merge pull request #810 from GitCredentialManager/dependabot/github_actions/lycheeverse/lychee-action-1.5.1,0.4126772,Migrated release process from Azure DevOps to GitHub actions (#707),build(deps): bump lycheeverse/lychee-action from 1.5.0 to 1.5.1,0
build(deps): bump lycheeverse/lychee-action from 1.5.0 to 1.5.1,0.40802336,This release is a fast follow to 2.0.692 to fix issues with the Debian package generated as part of that release.,Bumps lycheeverse/lychee-action from 1.5.0 to 1.5.1. - Release notes - Commits updated-dependencies: - dependency-name: lycheeverse/lychee-action   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] support@github.com,0
Merge pull request #806 from GitCredentialManager/dependabot/github_actions/DavidAnson/markdownlint-cli2-action-6,0.45480713,Fix bug in Git config matching due due case sensitivity (#234),build(deps): bump DavidAnson/markdownlint-cli2-action from 5.1.0 to 6,0
Merge pull request #800 from GitCredentialManager/dependabot/nuget/src/shared/Core/Newtonsoft.Json-13.0.1,0.47711906,org-rename: update references to GitCredentialManager (#1141),build(deps): bump Newtonsoft.Json from 12.0.3 to 13.0.1 in /src/shared/Core,0
build(deps): bump DavidAnson/markdownlint-cli2-action from 5.1.0 to 6,0.4555714,This release is a fast follow to 2.0.692 to fix issues with the Debian package generated as part of that release.,Bumps DavidAnson/markdownlint-cli2-action from 5.1.0 to 6. - Release notes - Commits updated-dependencies: - dependency-name: DavidAnson/markdownlint-cli2-action   dependency-type: direct:production   update-type: version-update:semver-major ... Signed-off-by: dependabot[bot] support@github.com,0
Merge pull request #804 from mjcheetham/diagnose-hang,0.44847572,Add new diagnose command to help debug problems in the wild (#463),Reorder Git config list process exit wait in diagnose command,0
diagnose: don't await Git exit on config list,0.6791623,Fix reading empty Git configuration entry values (#215),"Do not wait for the Git process to exit until we start reading from the stdout stream, to prevent a deadlock. This is what we do in the product code too.",0
Merge pull request #803 from mjcheetham/macos-latest,0.39071506,Release pipeline fixes #995 #1009 #1061,,0
ci: use macos-latest image for CI builds,0.5809556,Target *-latest runner images in CI workflow (#1178),"The macos-10.15 image for CI builds is deprecated on GitHub Actions. We should update this to a supported image. Given we are actually running our release builds on macos-latest, we should probably be running CI on the same image too!",0
Merge pull request #700 from wolf99/link-checker,0.5013702,Check for broken links in documentation (#700),Add broken link checking Action,0
Ignore GitLab FAQ link,0.5254487,Remove username/password authentication for GitHub.com (#171),,0
Add broken link checking Action,0.5990962,Check for broken links in documentation (#700),Also adjusts the entire workflow to only run if a PR or push contains changes to a markdown file,0
build(deps): bump Newtonsoft.Json in /src/shared/Core,0.4017278,Fix build script error creating incorrect x64 packages for macOS (link),Bumps Newtonsoft.Json from 12.0.3 to 13.0.1. - Release notes - Commits updated-dependencies: - dependency-name: Newtonsoft.Json   dependency-type: direct:production ... Signed-off-by: dependabot[bot] support@github.com,0
Merge pull request #797 from ldennington/ssl-cert-updates,0.440964,Add preliminary support for OAuth with GitHub AE (requires server support/changes) (#343),release: consume auto-rotated SSL certificate,0
release: consume auto-rotated SSL certificate,0.43172115,Add support for client TLS certificates (#1152),"Update release workflows to consume new autorotated SSL certificate. There are two main parts: Add the ""SendX5c"" : ""true"" key value pair to the contents of our ESRP Auth Json file. This allows us to use the new auto-rotating certificate without having to upload/manage it from our App Registration.i Remove the AZURE_AAD_ID_SSL secret/environment variable. The new certificate was generated with our main AZURE_AAD_ID app registration, so this extra ID is no longer needed.",0
Merge pull request #790 from cornejom/gitlab-support-docs,0.49325028,Add preliminary support for OAuth with GitHub AE (requires server support/changes) (#343),Delete outdated instruction for GitLab Support,0
Deleted outdated instruction for GitLab Support,0.57119966,Discontinued incorrect use of Homebrew Git shim (#731),Deleted instruction concerning 'Expire access tokens' option when setting up OAuth app.,0
Merge pull request #788 from ldennington/arm-fix,0.4829921,Support macOS arm64 installs via Homebrew (#798) ,macos build: use runtime instead of osx-x64,0
macos build: use runtime instead of osx-x64,0.6487337,Fix build script error creating incorrect x64 packages for macOS (link),Update DISTOUT variable in build.sh to use RUNTIME variable instead of hard-coding osx-x64.,0
Merge pull request #785 from GitCredentialManager/main,0.54970825,org-rename: update references to GitCredentialManager (#1141),Release to fix macOS x64 installer,0
Merge pull request #778 from GyroJoe/main,0.386913,Add preliminary support for OAuth with GitHub AE (requires server support/changes) (#343),Fix Mac x64 pkg,0
Fixes typo in Mac dist script,0.48786536,Fix build script error creating incorrect x64 packages for macOS (link),,0
Merge pull request #764 from timsu92/patch-1,0.45795447,Release pipeline fixes #995 #1009 #1061,docs(WSL): Correct the path to the executable,0
docs(WSL): Correct the path to the executable,0.60009766,docs: call out different GCM install paths in WSL docs (#1168),,0
Merge pull request #759 from GitCredentialManager/readme-update,0.5593522,org-rename: update references to GitCredentialManager (#1141),docs: update readme to show osx-arm64 support,0
docs: update readme to show osx-arm64 support,0.70344484,Support macOS arm64 installs via Homebrew (#798) ,,1
Merge pull request #746 from GitCredentialManager/main,0.52585906,org-rename: update references to GitCredentialManager (#1141),Release,0
Merge pull request #754 from mjcheetham/bb-newui,0.40589088,"- Codebase and build improvements (#29, #33)",New Bitbucket UI with separate OAuth and User/Pass options,0
Merge pull request #756 from mjcheetham/win-manifest,0.45598203,"Add GitHub OAuth support and refreshed Windows UI (#101, #103)",Generate Windows application manifests for all executable projects,0
bb-winui: update WPF based Bitbucket prompt,0.6584058,Introduce the Bitbucket host provider with Windows GUI (#37),Update the WPF-based Bitbucket authentication prompt in a similar fashion to the Avalonia ones.,0
bb-avnui: update Avalonia-based Bitbucket UI,0.5886057,Updated Bitbucket UI to separate OAuth and username/password options (#754),"Update the Avalonia-based UI for Bitbucket authentication to use a tabbed interface, showing each authentication mode in a separate tab. The new ""credentials"" prompt can offer and serve all authentication modes in a simpler way that pushes users who can to authenticate using a more secure method (where we don't capture the user/pass).",0
bitbucket: update shared UI helper code for new UI model,0.58942634,Updated Bitbucket UI to separate OAuth and username/password options (#754),"Update shared UI helper code for Bitbucket to remove the separate OAuth prompt/command, and allow basic authentication (username/password) options to be hidden based on a command-line option.",0
windows: generate app manifests for all exe projects,0.38728648,Fix app path name of Windows dropping file extension (#1181),"Automatically generate the correct application manifest for Windows executable projects that we produce. The manifests are required on Windows systems newer than Windows 8 to correctly access versioning APIs that will otherwise always report ""Windows 8"", even on later versions. The manifest we generate states we are compatible with all versions of Windows from 7 to 11 (inclusive).",0
bitbucket: remove separate OAuth prompt/dialog,0.823384,Updated Bitbucket UI to separate OAuth and username/password options (#754),"Remove the separate ""OAuth Required"" UI prompt in favour of just always showing the ""Credentials"" prompt, where users can select the OAuth auth mode directly anyway.",1
bb-test: rename test/mock helper methods,0.3647974,Reduce warnings from tests (#337),Rename some of the test/mock helper methods to be a little easier to grok/be shorter.,0
bb-test: remove unused test helpers,0.48863274,Reduce warnings from tests (#337),,0
bb-test: inline 2FA mocking test helpers,0.37794593,Reduce warnings from tests (#337),Inline some 2FA mock setup helper methods that differ only by a single boolean argument.,0
bb-test: update tests to await ICredential results,0.34237552,Reduce warnings from tests (#337),,0
Merge pull request #743 from mminns/issue/722,0.38713256,Release pipeline fixes #995 #1009 #1061,bitbucket: remove 2FA test,0
Merge pull request #748 from mjcheetham/wincred-fix,0.46794772,Release pipeline fixes #995 #1009 #1061,Fix bug in Windows credential manager credential matching on port numbers,0
wincred: fix bug in credential matching on port nums,0.7049423,Corrected matching of Windows credentials when port numbers were used in search (#748),"Fix a bug whereby we would not correctly match existing credentials when port numbers were used in the search. Additionally, actually now store the non-default port number in the target URI if there is one given. We also now always trim any trailing '/' from the end of the path of a service/target URI. Previously we erronously only trimmed the '/' from a 'pathless' URI, i.e.: link/      => link   link/ => link/ This is a safe change since the Enumerate method that is used by both Get and Remove already matches both trailing and non-trailing slashes by virtue of creating and comparing components of a System.Uri which does normalisation of the path. Both Get and Remove would act (eventually) to remove any bad credentials stored with a trailing slash, even if new credentials are only written out without the slash.",1
Merge pull request #745 from GitCredentialManager/ubuntu-uninstall-docfix,0.4326396,org-rename: update references to GitCredentialManager (#1141),,0
docs: fix incorrect Ubuntu uninstall command,0.3244911,Fix WSL configuration instructions (#479),Fix the Ubuntu uninstall command which used the wrong package name.,0
issue #722,0.42178738,Release pipeline fixes #995 #1009 #1061,"BitbucketHostProvider: fix runtime exceptions  when authentication requests for Bitbucket DC would incorrectly call a Bitbucket Cloud REST API A bug was introduced in commit: 5a2cfd7. Prior to this only authentication requests for Bitbucket Cloud would try and automatically determine if 2FA was required by the current user by calling a Bitbucket Cloud REST API using user provided Basic Auth credentials Commit: 5a2cfd7 removed checking of the current host was Bitbucket Cloud vs DC. This meant the check would be run for Bitbucket Cloud and DC regardless. It would fail for Bitbucket DC The fix is more radical than simply re-instating the check on the type of Bitbucket host. From 1st March 2022 support for using a Bitbucket Cloud user's account password to access REST or Git HTTPS operations has been removed, link. As such this automatic test to see if 2FA is required no longer works. Therefore the check against the Bitbucket Cloud REST API has been removed in its entirety",0
Merge pull request #739 from mjcheetham/cred-noop,0.3743287,Release pipeline fixes #995 #1009 #1061,Avoid writing credentials when account & password have not changed,0
libsecret: don't write out identical creds,0.3266253,Allow use of older versions of libsecret such as in Ubuntu 18.04 (#244),Avoid writing out credentials that are the same as an already existing cred.,0
osx: only update keychain entries when needed,0.51899827,Better warning messages on macOS when there are Keychain issues (#305),Only update keychain entries when the password/secret is different to what is already stored.,0
Merge pull request #731 from ldennington/ignore-homebrew-git,0.6185592,Discontinued incorrect use of Homebrew Git shim (#731),Ignore Homebrew Git shim,0
wincred: do not write creds if nothing has changed,0.36170655,Ensure we create a WindowsProcessManager on Windows (#1146),"Do no bother writing out credentials if there is already an existing credential for the same account, with the same secret/password value.",0
plaintextstore: do not write creds if nothing has changed,0.44624385,Create Linux plaintext store with safer directory permissions (#397),Do not needlessly serialise the credential file again if nothing has changed from an existing credential found. This change also updates derived implementations (DPAPI and GPG).,0
plaintextstore: extract credential enumeration,0.40599334,Access Azure storage account using service principle credentials (#851),Extract common credential file enumeration from both the Get and Remove methods for the plaintext credential store.,0
Merge pull request #732 from GitCredentialManager/feature/m1,0.4975602,Discontinued incorrect use of Homebrew Git shim (#731),Revise and consolidate osx-arm64 commits,0
macos: build arm-64,0.78718805,Support macOS arm64 installs via Homebrew (#798) ,Add support for building osx-arm64 in addition to osx-x64 to produce native M1 binaries.,1
macos environment: unit test for ignoring paths,0.49604326,Updated to manually scanning $PATH instead of using which on POSIX systems (#717),Add a unit test to verify ignoring paths when searching the PATH for executables works as expected.,0
macos environment: ignore homebrew shim,0.5936397,Discontinued incorrect use of Homebrew Git shim (#731),"Ignore Homebrew shim to ensure the user's installed version of Git is called during brew uninstall (instead of the shim). Note that this involves explicitly passing the HOMEBREW_PREFIX environment variable, since the sudo -u/usr/bin/logname""$GCMBIN"" unconfigure command does not inherit it.",0
macos environment: add option to ignore paths,0.46167678,Updated to manually scanning $PATH instead of using which on POSIX systems (#717),Add ability to ignore specified paths when searching the PATH for an executable.,0
Merge pull request #729 from miya789/main,0.39839414,Release pipeline fixes #995 #1009 #1061,Remove windows from credential-cache in credstores.md,0
docs: fix rotten links,0.7334627,Check for broken links in documentation (#700),,1
dependencies: update Microsoft.NET.Test.Sdk and Avalonia,0.5889666,Fix release builds .NET SDK version (#358),"The upcoming specification of a macOS runtime led to the need to update the Microsoft.NET.Test.Sdk package. The old version, when combined with this specification, caused dependent packages to be downgraded, which resulted in NuGet errors. Upgrading to the latest version resolved this issue. Additionally, Avalonia has been upgraded to the latest version, which was necessitated by the upcoming changes to support osx-arm64.",0
credentialstore: add error about cache windows,0.5285119,Fix a bug to prevent setting credential.provider when it wasn't needed (Only set credential.provider for dynamic matches #535),Co-authored-by: Lessley Dennington lessleydennington@gmail.com,0
credentialstore: remove windows,0.45499676,Add option to use the new DPAPI-based credential store on Windows (#464),Co-authored-by: Johannes Schindelin johannes.schindelin@gmx.de Co-authored-by: Lessley Dennington lessleydennington@gmail.com,0
Merge pull request #721 from ldennington/fix-github-action-script,0.50945246,Improved usability for GitHub auth (#587),Fix failing GitHub Actions Release Script,0
fixup! release: publish draft release to GitHub,0.57423514,Release pipeline fixes #995 #1009 #1061,,0
Merge pull request #717 from mjcheetham/which-location,0.31817466,Release pipeline fixes #995 #1009 #1061,Manually scan $PATH on POSIX systems,0
Merge pull request #719 from ldennington/gitlab-add-read-repo-scope,0.4686696,Improved usability for GitHub auth (#587),Add read_repository GitLab OAuth Scope,0
docs: FAQ on revoking GitLab OAuth Application,0.52753186,Remove username/password authentication for GitHub.com (#171),"Add FAQ entry detailing how to revoke/re-authorize a GitLab OAuth Application's access. This is needed when the application is updated, e.g. when new scopes are added to it.",0
environment: add test for PosixEnv.TryLocateExec,0.47752905,Updated to manually scanning $PATH instead of using which on POSIX systems (#717),,0
Merge pull request #718 from samuel-lee-msft/patch-1,0.5046784,Release pipeline fixes #995 #1009 #1061,Update architecture.md,0
fixup! Web browser and PAT support for GitLab.,0.6116862,"Add explicit PAT authentication mode for the GitHub Provider (#236, #259)",,0
Update architecture.md,0.39190307,Various documentation updates:,Fix various typos,0
environment: manually scan $PATH on POSIX systems,0.7513112,Updated to manually scanning $PATH instead of using which on POSIX systems (#717),"Because the which command is not always located in /usr/bin on all POSIX systems, we cannot directly call /usr/bin/which to do program location for us. Oh the irony.. We might be able to use env to locate which, but again the env utility isn't always found in the same place, so we're stuck. Instead we now manually scan the $PATH variable directories looking for the program we need to find, in the same way we do on Windows (for different reasons). This should also be slightly faster as you'd hope .NET's String.Split method and lstat calls are faster than fork/exec-ing another executable?",1
Merge pull request #713 from mjcheetham/bb-links,0.38955694,Discontinued incorrect use of Homebrew Git shim (#731),Show Bitbucket Server/Data Center URL in UI and use better help links,0
bitbucket: add tests for IsBitbucketOrg method,0.5763558,Lazily initialise Bitbucket host provider dependencies (#1239),Add test for Bitbucket Cloud hostname detection method.,0
bitbucket: add unit test for GetCredAsync helper cmdline,0.55925703,Corrected runtime exceptions with Bitbucket DC authentication (#743),Add unit tests for the BitbucketAuthentication command line for UI helpers.,0
Merge pull request #716 from ldennington/fix-incorrect-emoji,0.36578262,Release pipeline fixes #995 #1009 #1061,,0
Merge pull request #715 from GitCredentialManager/dependabot/github_actions/actions/github-script-6,0.5391631,Migrated release process from Azure DevOps to GitHub actions (#707),build(deps): bump actions/github-script from 4 to 6,0
fixup! fixup! Add install from source instructions,0.51066554,Basic Windows installer (#41),,0
build(deps): bump actions/github-script from 4 to 6,0.5044941,Migrated release process from Azure DevOps to GitHub actions (#707),Bumps actions/github-script from 4 to 6. - Release notes - Commits updated-dependencies: - dependency-name: actions/github-script   dependency-type: direct:production   update-type: version-update:semver-major ... Signed-off-by: dependabot[bot] support@github.com,0
Merge pull request #707 from ldennington/release-process-migration,0.5091796,Migrated release process from Azure DevOps to GitHub actions (#707),Migrate release processes to GitHub Actions,0
release: remove .azurepipelines directory,0.48807594,- Azure Repos,Remove the no-longer-needed Azure Pipelines release workflows.,0
release: publish draft release to GitHub,0.5287276,Publish zip and tar balls of releases (#96),"Add final job to publish artifacts as a draft release on GitHub. This uses a custom github-script because the official action for adding assets to releases has been deprecated and archived. For more information, see: link",0
linux release: sign and publish,0.51415735,Validate installers before publishing (#813),"Add step two of Linux release process to sign and upload final installer. Additionally, remove the no-longer-needed build-signed-deb workflow.",0
linux release: build and lay out,0.4396165,"- Codebase and build improvements (#29, #33)","Add step one of Linux (Debian) release process to build and lay out Debian package. Additionally, drop 'core' suffix from package name and remove no-longer-needed build-installers workflow.",0
"windows release: build, sign, and publish",0.57919395,"Groundwork for upcoming Windows release, including:","Add the Windows release process to: Build and sign the payload Use the signed payload to build and sign the user and system installers Publish the signed installers, payload, and symbols This change also removes the no-longer-needed Payload.Windows project and removes the 'core' suffix from the Windows installers.",0
Merge pull request #711 from ldennington/add-uninstall-from-source-instructions,0.4394135,Discontinued incorrect use of Homebrew Git shim (#731),install-from-source: add instructions to uninstall,0
homebrew: update release asset name and uninstall script,0.4244977,Fix build script error creating incorrect x64 packages for macOS (link),Update release-homebrew.yaml to reflect removal of core from pkg name.,0
macOS release: sign and notarize package,0.637172,Notarize the macOS installer and binaries to permit running on macOS Catalina 10.15 (#84),Add step four of the macOS release process to sign and notarize the pkg and upload it as the final installer.,0
macOS release: package payload,0.48868275,Publish zip and tar balls of releases (#96),Add step three of the macOS release process to package the payload and upload the pkg artifact.,0
fixup! Add install from source instructions,0.48339832,Basic Windows installer (#41),,0
install-from-source: add instructions to uninstall,0.41247204,Validate installers before publishing (#813),Add instructions for Linux users on supported distros to remove GCM and its dependencies after installing from source.,0
macOS release: sign payload,0.51826775,Sign Linux tarball and .NET tool #985 ,"Add step two of the macOS release process to download the unsigned payload, use ESRP to sign it, and upload the signed payload as an artifact. Additionally, genericize the existing run_esrp_signing.py script to allow for signing of macOS payload/pkg and Windows exes in addition to Debian packages.",0
"macOS release: build, lay out, and codesign payload",0.48919767,Fix build script error creating incorrect x64 packages for macOS (link),"Add step one of the macOS release process to build, run applicable unit tests, lay out the symbols/payload, codesign the payload, and upload the payload and symbols as artifacts.",0
bitbucket: show on-prem URL in UI and use better help links,0.6832269,Updated Bitbucket credential UI to show the URL of the Bitbucket Server or Data Center instance if applicable (#713),"Update the Bitbucket credential UI to show the URL of the Bitbucket Server or Data Center instance, if we're talking to them. Also fix up the help links to point to a host-relative location; not always to Bitbucket Cloud pages. Note that the OAuth prompt will never been shown for Server/DC since 2FA is not supported there.",0
Merge pull request #712 from mjcheetham/all-protos,0.37715155,Release pipeline fixes #995 #1009 #1061,Update generic provider to support all protocols,0
generic: update generic provider to support all protocols,0.8998138,Updated generic provider to support all protocols (#712),"Update the generic host provider to support all protocols, not just HTTP/HTTPS. Since Git can also call upon credential helpers for credentials for send-mail and friends, we should try and provide basic storage and recall for all protocols.",1
Merge pull request #709 from GitCredentialManager/dependabot/github_actions/github/codeql-action-2,0.49579483,Migrated release process from Azure DevOps to GitHub actions (#707),build(deps): bump github/codeql-action from 1 to 2,0
Merge pull request #699 from Bene81/gitlab-hostname-only,0.49836683,Remove username/password authentication for GitHub.com (#171),Gitlab hostname only support.,0
build(deps): bump github/codeql-action from 1 to 2,0.4564851,Migrated release process from Azure DevOps to GitHub actions (#707),Bumps github/codeql-action from 1 to 2. - Release notes - Changelog - Commits updated-dependencies: - dependency-name: github/codeql-action   dependency-type: direct:production   update-type: version-update:semver-major ... Signed-off-by: dependabot[bot] support@github.com,0
Apply suggestions from code review.,0.42687,"- Codebase and build improvements (#29, #33)",Co-authored-by: Lessley Dennington ldennington@github.com,0
Merge pull request #708 from ldennington/fix-install-from-source-validation,0.51202214,Validate installers before publishing (#813),Fix install from source validation,0
Merge pull request #702 from GitCredentialManager/dependabot/github_actions/actions/download-artifact-3,0.50525033,Migrated release process from Azure DevOps to GitHub actions (#707),build(deps): bump actions/download-artifact from 2 to 3,0
fixup! Add validation workflow,0.29448107,Validate installers before publishing (#813),,0
build(deps): bump actions/download-artifact from 2 to 3,0.510858,Simplified build number included in artifact names (#638),Bumps actions/download-artifact from 2 to 3. - Release notes - Commits updated-dependencies: - dependency-name: actions/download-artifact   dependency-type: direct:production   update-type: version-update:semver-major ... Signed-off-by: dependabot[bot] support@github.com,0
Merge pull request #703 from GitCredentialManager/dependabot/github_actions/actions/upload-artifact-3,0.4996711,Migrated release process from Azure DevOps to GitHub actions (#707),build(deps): bump actions/upload-artifact from 2 to 3,0
Merge pull request #704 from GitCredentialManager/dependabot/github_actions/actions/setup-python-3,0.4934931,Migrated release process from Azure DevOps to GitHub actions (#707),build(deps): bump actions/setup-python from 2 to 3,0
Merge pull request #705 from GitCredentialManager/dependabot/github_actions/actions/checkout-3,0.50934666,Migrated release process from Azure DevOps to GitHub actions (#707),build(deps): bump actions/checkout from 2 to 3,0
Merge pull request #706 from GitCredentialManager/dependabot/github_actions/actions/setup-dotnet-2,0.539532,Migrated release process from Azure DevOps to GitHub actions (#707),build(deps): bump actions/setup-dotnet from 1 to 2,0
build(deps): bump actions/setup-dotnet from 1 to 2,0.47443995,Fix release builds .NET SDK version (#358),Bumps actions/setup-dotnet from 1 to 2. - Release notes - Commits updated-dependencies: - dependency-name: actions/setup-dotnet   dependency-type: direct:production   update-type: version-update:semver-major ... Signed-off-by: dependabot[bot] support@github.com,0
build(deps): bump actions/checkout from 2 to 3,0.3585031,"- Codebase and build improvements (#29, #33)",Bumps actions/checkout from 2 to 3. - Release notes - Changelog - Commits updated-dependencies: - dependency-name: actions/checkout   dependency-type: direct:production   update-type: version-update:semver-major ... Signed-off-by: dependabot[bot] support@github.com,0
build(deps): bump actions/setup-python from 2 to 3,0.38941166,Fix build script error creating incorrect x64 packages for macOS (link),Bumps actions/setup-python from 2 to 3. - Release notes - Commits updated-dependencies: - dependency-name: actions/setup-python   dependency-type: direct:production   update-type: version-update:semver-major ... Signed-off-by: dependabot[bot] support@github.com,0
build(deps): bump actions/upload-artifact from 2 to 3,0.48564,Simplified build number included in artifact names (#638),Bumps actions/upload-artifact from 2 to 3. - Release notes - Commits updated-dependencies: - dependency-name: actions/upload-artifact   dependency-type: direct:production   update-type: version-update:semver-major ... Signed-off-by: dependabot[bot] support@github.com,0
Merge pull request #674 from wolf99/dependabot,0.40841562,Discontinued incorrect use of Homebrew Git shim (#731),Add dependabot,0
Merge pull request #701 from ldennington/update-contributing-guidelines,0.43541163,Discontinued incorrect use of Homebrew Git shim (#731),Update contributing guidelines,0
docs: update commit requirements for contributors,0.4756642,docs: add bitbucket app password requirements (#1213),"Update CONTRIBUTING.md with a link to Victoria Dye's recent talk on crafting logical, well-ordered commit messages. Move this link into the 'Submitting a pull request' section so that new contributors are more likely to see it while following the prescribed steps.",0
docs: update contributor guidelines,0.55689377,Various documentation updates:,Customize CONTRIBUTING.md intro for GCM and update issue link to point to the 'New Issue' page rather than the pre-existing issues page.,0
Add dependabot,0.41643512,"Fix missing dependencies in Debian package (#506, #514, #528)",I am not familiar enough with nuget and dot net projects to know if it is worth adding nuget package-ecosystem (or others). If someone in the know could comment here I will be happy to adjust as needed. Info on dependabot usage can be seen here: link,0
Adapted test expectation to changed behaviour.,0.41912183,Reduce warnings from tests (#337),    modified:       src/shared/Core.Tests/UriExtensionsTests.cs,0
Allowing host names only now.,0.44916126,"Improve host provider auto-detection logic (#384, #481)",,0
Merge pull request #685 from easwarh/eahariha/linux-src-build-script,0.43532014,Fix build script error creating incorrect x64 packages for macOS (link),Pass through $PATH to find dotnet,0
Merge pull request #693 from GitCredentialManager/update-wsl-docs,0.6443464,Add support for using WSL Git configuration (#461),docs: update WSL guide with new Git For Windows path,0
docs: update WSL guide with new Git For Windows path,0.73433775,Add support for using WSL Git configuration (#461),Update WSL guide to reflect GCM's move from the libexec/git-core directory in Git for Windows to the bin directory.,1
Pass through $PATH to find dotnet,0.5110224,Improved detection of dotnet on Linux (#685),Signed-off-by: Easwar Hariharan easwar.hariharan@microsoft.com,0
Merge pull request #679 from mjcheetham/oauth-doc,0.6005509,Add preliminary support for OAuth with GitHub AE (requires server support/changes) (#343),Add GitHub.com OAuth app revoke instructions to FAQs,0
docs: add GitHub.com app revoke info to FAQ,0.608369,OAuth Device Authorization Grant support for GitHub (#147),Add an entry to the FAQ doc explaining how to revoke access to the GCM OAuth app for GitHub.com,0
Add link to GitHub application settings,0.5827962,Use native Git path interpolation for config values (#439),,0
Merge pull request #668 from wolf99/lint-markdown,0.4089424,More winget publishing fixes (#353),Lint markdown,0
Fix new list lint issue,0.32009426,"Fix several UI bugs (#1238, #1241)",,0
Improve link reference IDs,0.61465895,Update documentation to use reference-style links (#680),,0
Adjust list numbering format,0.21269158,issue templates: remove core suffix (#1180),,0
Ignore lint for anchor for Linux install instructions,0.4394985,Ensure correct installation directory resolution for all OSes and distribution methods (link),,0
Fix spellings,0.31489113,"Fix winget publishing (#332, #338)",,0
Add markdown linting to workflows,0.28000158,readme: add link to project roadmap (#1204),,0
Fix console commands without output,0.42690936,Update System.CommandLine and fix some bugs (#531),,0
Fix multiple top-level headings,0.29095256,"Refactor namespace, assembly and project names (#500)",,0
Remove spaces inside code-span elements,0.25038818,Remove use of box drawing characters in warning output (#243),,0
Fix inline HTML,0.2152247,"Fix several UI bugs (#1238, #1241)",,0
Fix bare URLs,0.4181179,Support URL-scoped enterprise default settings (#1149),,0
Fix md lint errors that do not alter content,0.38559225,Check for broken links in documentation (#700),,0
Merge pull request #673 from ldennington/add-gitlab-to-readme,0.4955835,Improved usability for GitHub auth (#587),docs: highlight GitLab support in README.md,0
Merge pull request #672 from hickford/gitlab-docs,0.48472565,Improved usability for GitHub auth (#587),Link to GitLab support docs,0
docs: highlight GitLab support in README.md,0.47304463,readme: add link to project roadmap (#1204),Add GitLab to list of supported host providers.,0
Link to GitLab support docs,0.47864574,Improved usability for GitHub auth (#587),,0
Merge pull request #670 from ldennington/supported-distros,0.4170565,This release is a fast follow to 2.0.692 to fix issues with the Debian package generated as part of that release.,docs: add supported Linux distributions to README.md,0
docs: add supported Linux distributions to README.md,0.48268634,readme: add link to project roadmap (#1204),Update README.md to call out explicitly supported Linux distributions.,0
Merge pull request #654 from GitCredentialManager/bring-oauth-into-the-light,0.717906,Add preliminary support for OAuth with GitHub AE (requires server support/changes) (#343),Make Azure Repos OAuth non-experimental,1
"when falling back, be explicit about what to use",0.27232528,"Return non-zero code for UI helpers on error (#440, #441)",,0
"remove ""experimental"" moniker from Azure DevOps OAuth in docs",0.55760217,Enable Azure Repos OAuth-mode by default on DevBox (#1245),,0
Merge pull request #651 from GitCredentialManager/main,0.54352957,org-rename: update references to GitCredentialManager (#1141),New release,0
Merge pull request #650 from ldennington/fix-symlink-linux,0.45193702,Update documentation to use reference-style links (#680),fixup! fixup! Add install from source script,0
fixup! fixup! Add install from source script,0.5072453,Fix computation of installation path on Linux/single-file publish (#310),,0
Merge pull request #648 from ldennington/fix-linux-compile,0.4377621,Release pipeline fixes #995 #1009 #1061,,0
fixup! Add install from source script,0.5365349,Fix computation of installation path on Linux/single-file publish (#310),,0
Merge pull request #642 from GitCredentialManager/main,0.5272263,org-rename: update references to GitCredentialManager (#1141),New release 2.0.703,0
Merge pull request #640 from ldennington/update-nuget-version-macos-release,0.44571483,Fix build script error creating incorrect x64 packages for macOS (link),.azure-pipelines: install .NET 6.0 sdk for macOS signing,0
.azure-pipelines: install .NET 6.0 sdk for macOS signing,0.5580097,Move to .NET 5.0 on macOS and Linux (#288),Install the .NET 6.0 SDK and enforce a minimum NuGet version for macOS signing workflow. This duplicates what we currently do in the Windows workflow and fixes the .NET error observed in this attempted release build: link Clean test build with this change: link,0
Merge pull request #635 from buchwasa/dotnet6,0.56324416,Replace netstandard2.0 with dotnet6.0 (link),Update to .NET 6,0
Merge pull request #638 from felipecrs/remove-build-number,0.57028675,Simplified build number included in artifact names (#638),Remove build number from the release artifacts,0
Use the self-contained option,0.3957877,Add option to prevent interactivity (#91),,0
Fix syntax error about build number in the Inno Setup file,0.46593457,Simplified build number included in artifact names (#638),,0
Remove build number from the Inno Setup file,0.5283145,Simplified build number included in artifact names (#638),,0
Remove build number from Azure pipeline files,0.5651058,Simplified build number included in artifact names (#638),,0
Remove build number from csproj files,0.5668303,Simplified build number included in artifact names (#638),,0
Didn't mean to update the comment,0.24403074,- Various bug fixes and improvements,,0
Updated to .NET 6,0.8962587,"Upgraded to .NET 6.0 (#635, #640)",,1
Merge pull request #630 from ldennington/install-from-source,0.4124503,Consume new MSAL library versions (#346),Add install-from-source.sh and surrounding infrastructure,0
Merge pull request #599 from ejball/ghe-raw-url,0.42272243,"Auto-detect GHES instances that have a ""github."" URL prefix (#241)",Fix GitHub Enterprise API URL for raw source code links.,0
Add install from source instructions,0.4753065,.net tool: clarify install instructions (#1126),Update README.md with instructions for downloading and running the install from source script.,0
Add validation workflow,0.23152159,Validate installers before publishing (#813),Add new GitHub actions workflow to validate install from source on supported distributions.,0
Add install from source script,0.46786046,Fix computation of installation path on Linux/single-file publish (#310),Add script to help users automatically install from source on supported distributions.,0
Add install from source option to build.sh,0.49992824,Fix build script error creating incorrect x64 packages for macOS (link),Update build.sh to support install from source scenario.,0
Merge pull request #621 from mjcheetham/gitlab-ui,0.4885049,Improved usability for GitHub auth (#587),Add GUI prompts for GitLab authentication,0
gitlab: pass --url arg to GitLab UI helpers,0.4581077,Use native Git path interpolation for config values (#439),Pass the instance URL argument to the GitLab UI helper.,0
gitlab: don't show logo for 3rd party instances,0.45294836,"- Allow overriding the selection of host provider; also supports GitHub Enterprise scenarios (configuration option, migration guide for users of the credential.authority setting) (#59)","On custom GitLab instances, don't show the GitLab ""fox"" logo, only the logotype. We also replace the old PNG logo with SVG/vector versions for better display on high-resolution displays. Ensure we only show the ""sign up"" link for GitLab.com fix wpf",0
gitlab: fix comment about Dispatcher method name,0.53564143,org-rename: update references to GitCredentialManager (#1141),,0
Merge pull request #629 from mjcheetham/wam-server2016,0.55535877,Updated WAM support to only include applicable OSes (#629),Exclude Windows Server 2016 from WAM support,0
Merge pull request #626 from hickford/patch-2,0.4493052,Release pipeline fixes #995 #1009 #1061,Clarify that plaintext store is distinct from git-credential-store,0
windows-broker: exclude WinServer2016 from WAM support,0.71985334,"Future proof Windows broker ""WAM"" version detection (#465)","Windows Server 2016 does not support WAM, so we should not try to enable the broker unless we're on Server 2019 and later. Also update the Windows (client; non-server) version checks to be tighter. Previously any major version of 10 or greater was considered ""supported"", but this is wrong. Windows 10 build 15063 was the first to support WAM.",1
linux: scrub signing logs,0.29895347,Sign Linux tarball and .NET tool #985 ,,0
Clarify that plaintext store is independent from git-credential-store,0.7091631,Support git-credential-cache as a credential backing store on Linux (#287),,1
gitlab: invoke GitLab UI helper if available,0.48222798,"- Show the terminal/TTY based prompts when there is no desktop/GUI sessions present for GitHub (#453, #538)","Invoke the GitLab UI helper if the current session is GUI interactive, the user has not disabled GUI prompts, and the helper is found.",0
gitlab: add WPF-based UI helper on Windows,0.6972543,WPF-based GitHub auth UI (#40),Implement a WPF-based UI helper for GitLab and include this in the Windows installers.,0
gitlab: add Avalonia-based UI helper on Mac/Linux,0.6171,UI on macOS and Linux thanks to AvaloniaUI 🎉 (#336),Implement an Avalonia-based UI helper for GitLab and include this in Mac and Linux packages/installers.,0
gitlab: add shared UI project,0.5062264,WPF-based GitHub auth UI (#40),Add shared UI project for GitLab. Project contains the shared view models and commands for the main auth prompt.,0
Merge pull request #614 from mjcheetham/gitlab-fixes,0.48661938,Improved usability for GitHub auth (#587),Sign and ship GitLab binaries (and some minor fixes),0
docs: include example cmd to set cred stores,0.42487186,Use System.CommandLine to handle our command line parsing and allow host providers to offer custom commands (#273),Update the credential stores document to include an example command.,0
gitlab: ensure GitLab.dll is signed and packaged,0.45432192,Ensure git-credential-manager-core command is available after Debian package install (link),"Add GitLab.dll to the set of files that need to be signed for Mac and Windows builds, and ensure the binary is included in the Windows installer.",0
gitlab: use auth mode constant and detect oauth cfg,0.588718,Add preliminary support for OAuth with GitHub AE (requires server support/changes) (#343),Use the constant to define the AuthenticationModes available for gitlab.com. Also dynamically allow browser as a supported auth mode for non-dotcom instances that have an OAuth client ID configured.,0
Merge pull request #612 from mjcheetham/wsl-localhost,0.59495246,Add support for using WSL Git configuration (#461),Update IsWslPath to detect \wsl.localhost-style paths,0
wsl: update IsWslPath to detect wsl.localhost,0.6346784,Better browser detection inside of WSL (#1148),"Starting in Windows build 21354, the preferred WSL UNC file path is ""\wsl.localhost\"" and not the older administrative-share style ""\wsl$\<distro\"". The older ""wsl$"" style will continue to be supported, but won't be the default type of path we'll see from the system going forwards. We now support detecting both styles as WSL paths.",0
gitlab: remove unused using statements,0.48100647,Remove username/password authentication for GitHub.com (#171),,0
gitlab: ensure correct sln config on Win/Mac/Linux,0.51492995,Use native Git path interpolation for config values (#439),"Ensure the correct project configuration is selected when the solution configuration is set for one of the platforms in ""release""; i.e, WindowsRelease, MacRelease, and LinuxRelease.",0
Merge pull request #591 from hickford/gitlab,0.45832914,Improved usability for GitHub auth (#587),"Add GitLab host provider, with web browser, PAT, and username/password support. This provider currently only supports text-based prompts.",0
Apply suggestions from code review,0.29836017,"- Codebase and build improvements (#29, #33)",Co-authored-by: Matthew John Cheetham mjcheetham@github.com,0
tidy,0.18816902,- macOS,,0
tinker,0.2271309,@garvit-joshi ,,0
refresh token,0.59686327,Handle expired OAuth refresh token for generic auth (#1196),,0
Web browser and PAT support for GitLab.,0.57112044,"Support ""SSO"" PATs for GitHub (#133, #134)",,0
Merge pull request #610 from jessehouwing/patch-1,0.44667378,Release pipeline fixes #995 #1009 #1061,Default installation path for GCM core has changed,0
Merge pull request #600 from mjcheetham/tty-pref,0.4412104,- Fix TTY-based prompts for GitHub authentication (#30),Add option to disable GUI prompts/prefer terminal prompts instead,0
docs: clarify custom ui helpers for appdevs only,0.48203063,Include UI helpers in Debian package for Linux release; move GCM symlink to /usr/local/bin (#405),,0
auth: add helper 'throw' method for GUI prompt setting,0.5065078,- Fix TTY-based prompts for GitHub authentication (#30),,0
basic: respect new GUI prompt enabled setting,0.56669635,Fix bug where GUI prompts would not be shown on Windows (#374),,0
bitbucket: respect new GUI prompt enabled setting,0.7069906,Updated Bitbucket UI to separate OAuth and username/password options (#754),,1
github: respect new GUI prompt enabled setting,0.7135707,- Fix TTY-based prompts for GitHub authentication (#30),,1
settings: add setting to disable GUI prompts,0.5236159,Fix bug where GUI prompts would not be shown on Windows (#374),Add a new setting and environment variable that allows a user to disable the use of GUI prompts (in favour of terminal/text-based ones where available).,0
docs: add FAQ for UI helper settings,0.40537655,"Fix several UI bugs (#1238, #1241)",,0
Default installation path for GCM core has changed,0.78617376,"Set the full path to standalone GCM Core installs, enabling overriding of bundled versions (#188, #199)","Default installation path now has ""Core"" in the name.",1
Add explanatory comment.,0.28369468,- macOS,,0
Merge pull request #587 from hickford/usability,0.42925203,Improved usability for GitHub auth (#587),Skip helper when no choice necessary,0
more unit tests,0.5173345,Reduce warnings from tests (#337),,0
Skip helper when unnecessary to make choice from one option.,0.40013796,Add option to prevent interactivity (#91),,0
fix possible NullReferenceException,0.31004548,"Upgraded to .NET 6.0 (#635, #640)",,0
Unit test for #453,0.47107163,Reduce warnings from tests (#337),Remove overzealous interactivity checks.,0
Remove overzealous ThrowIfTerminalPromptsDisabled check,0.43705958,Reduce warnings from tests (#337),,0
first unit test for GitHubAuthentication,0.5832573,Initial release of Git Credential Manager Core with beta support for...,,0
Merge pull request #604 from mjcheetham/fix-wsl-doc,0.60989165,Fix WSL configuration instructions (#479),Fix WSL instructions by adding missing quotes,0
docs: fix WSL instruction quotes,0.69473624,Fix WSL configuration instructions (#479),"Add missing double quotes ("") to the WSL documentation about using GCM without Git for Windows.",0
Merge pull request #584 from hickford/omnisharp-fix,0.46602753,Release pipeline fixes #995 #1009 #1061,Update package Nerdbank.GitVersioning,0
Merge pull request #601 from mjcheetham/title-fix,0.39084,Release pipeline fixes #995 #1009 #1061,Use correct window title for device code in GitHub UI,0
github: use correct window title for device code,0.5143236,Add explicit device code authentication for GitHub (#478),Use the correct window title for the GitHub device code dialog window. Previously this was re-using the same title as the 2FA code window.,0
Fix GitHub Enterprise API URL for raw source code links.,0.50657684,Add preliminary support for OAuth with GitHub AE (requires server support/changes) (#343),,0
Merge pull request #579 from mjcheetham/bb-oauth-shortcut,0.53461874,Add preliminary support for OAuth with GitHub AE (requires server support/changes) (#343),Allow shortcut to perform OAuth from first prompt with Bitbucket,0
bitbucket: update UI helpers for new OAuth option,0.8679173,Updated Bitbucket UI to separate OAuth and username/password options (#754),"Add a new ""Sign in with OAuth"" button to the initial credentials prompt for Bitbucket. This allows users to avoid typing in a username/password at all.",1
bitbucket: add OAuth option to first prompt,0.7997451,Updated Bitbucket UI to separate OAuth and username/password options (#754),"Add support for the user to select OAuth authentication in the first credential prompt. Previously the user must either update their config to remove the 'basic' auth mode, OR otherwise pass the initial username/password prompt (for example with an app password). Users can now signify they want to use OAuth immediately.",1
Update package Nerdbank.GitVersioning. Fixes #583,0.6635905,Transition from Nerdbank.GitVersioning to a version file (#1231),,0
docs: update WSL instructions for standalone GCM paths,0.8076555,docs: call out different GCM install paths in WSL docs (#1168),"Update the WSL documentation to point to the correct standalone system-wide GCM install, and also add a section about using the standalone\ user-only installer. The installation path is under %LocalAppData% in this case.",1
Merge pull request #575 from mjcheetham/azrepos-list-fix,0.42577556,Release pipeline fixes #995 #1009 #1061,Fix bug in Azure Repos binding list command,0
azrepos: fix bug in binding list command,0.4891575,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)","There has been a behaviour change in the System.CommandLine library. Previously string arguments that were missing would be null, but now they are the empty string. Update downlevel use of the organization parameter in BindCmd to also expect an empty/whitespace string, as well as null.",0
Merge pull request #518 from mminns/issue/218,0.42188862,Release pipeline fixes #995 #1009 #1061,Issue/218,0
Issue #218 Address PR comments with minor updates to XUnit usage and removed unused code and out of date comments,0.5194436,More winget publishing fixes (#353),,0
Issue #218 Address PR comments with minot updates to XUnit usage and log message formats,0.43765366,More winget publishing fixes (#353),,0
Merge pull request #567 from GitCredentialManager/main,0.5485052,org-rename: update references to GitCredentialManager (#1141),New release,0
Issue #218 Address PR comments with minor updates,0.420707,More winget publishing fixes (#353),,0
Issue #218 Return any stored credentials before attempting to refresh anything.,0.5721873,Fix a bug to prevent setting credential.provider when it wasn't needed (Only set credential.provider for dynamic matches #535),"Stored credentials for Bitbucket.org are validated before returning. Assume DC/Server credentials are good and rely on Git to try them and, if necessary, ask GCM to ERASE invalid ones. Add GCM_BITBUCKET_ALWAYS_REFRESH_CREDENTIALS/bitbucketAlwaysRefreshCredentials configuration option to revert to old behaviour Added additional tests to hit > 66% test coverage for Atlassian.Bitbucket",0
Merge pull request #563 from mjcheetham/wsl-trace-template,0.54106027,Fix WSL configuration instructions (#479),Update issue template for WSL tracing,0
docs: update issue template for WSL tracing,0.53286356,Fix WSL configuration instructions (#479),Update the new issue templates with the extra required WSLENV environment variable that is required for passing trace envars to the Windows host.,0
Merge pull request #559 from parapsychic/main,0.4127101,Discontinued incorrect use of Homebrew Git shim (#731),Update README.md,0
Merge pull request #560 from cjsimon/patch-2,0.4172196,Release pipeline fixes #995 #1009 #1061,Fix setx command,0
Fix setx command,0.2884152,Update System.CommandLine and fix some bugs (#531),,0
Merge pull request #499 from mminns/issue/498-add-code-coverage,0.40517008,Release pipeline fixes #995 #1009 #1061,Add basic support for generating code coverage reports,0
docs: fix a typo in multi-users doc,0.305853,"Fix winget publishing (#332, #338)",,0
docs: fix FAQs markdown table syntax,0.37639433,Update documentation to use reference-style links (#680),Fix a MD table that was not rendering correctly.,0
Merge pull request #547 from GitCredentialManager/vtbassmatt-fixes,0.48506552,Discontinued incorrect use of Homebrew Git shim (#731),Batch of documentation fixes,0
Merge GitHub-side fixes into vtbassmatt-fixes,0.41745484,Transition from Nerdbank.GitVersioning to a version file (#1231),,0
feedback,0.35543177,- Various bug fixes and improvements,,0
Update docs/multiple-users.md,0.38146204,"Enables support for multiple users for GitHub, Bitbucket, and Azure Repos (when using the *.visualstudio.com URLs) (#160)",Co-authored-by: Matthew John Cheetham mjcheetham@outlook.com,0
Basic support for generating code coverage reports,0.3740064,Reduce warnings from tests (#337),"TODO include in GitHub actions etc setup, e.g. link/, once link is fixed",0
draft multi-user doc,0.26123744,"Enables support for multiple users for GitHub, Bitbucket, and Azure Repos (when using the *.visualstudio.com URLs) (#160)",fixes #189,0
breadcrumbs to wsl doc,0.5172125,Support the wslview command  to open the browser (#529),fixes #394,0
document TLS 1.2 on Win7,0.4990136,Add support for client TLS certificates (#1152),fixes #412,0
uninstall instructions on linux,0.3470731,Drop -core suffix from entry executable #551 ,fixes #413,0
FAQ about probing,0.27651784,Initial TRACE2 tracing events #1045,fixes #424,0
Merge pull request #541 from ldennington/remove-core-from-docs,0.44539726,issue templates: remove core suffix (#1180),Remove 'core' from docs,0
Merge pull request #544 from GitCredentialManager/add-codeql,0.47613445,org-rename: update references to GitCredentialManager (#1141),workflows: add CodeQL,0
workflows: add CodeQL,0.32529056,"- Codebase and build improvements (#29, #33)",Re-adding CodeQL to ensure all checks work as expected in new org/repo.,0
Merge pull request #543 from ldennington/remove-codeql,0.39604086,Discontinued incorrect use of Homebrew Git shim (#731),workflows: remove CodeQL,0
workflows: remove CodeQL,0.31305963,Remove username/password authentication for GitHub.com (#171),The CodeQL Results task has been hanging in Pull Requests in our new repo. Planning to remove and re-add via the GitHub UI in the hopes that will make the task work as expected.,0
docs: remove gcmcore from test data,0.5003481,"Set the full path to standalone GCM Core installs, enabling overriding of bundled versions (#188, #199)",Update gcm-test@example.com to gcm@example.com.,0
Merge pull request #539 from mjcheetham/deb-fix,0.5139212,Release pipeline fixes #995 #1009 #1061,Fix Debian package build script copy command,0
Merge pull request #542 from mjcheetham/asset-update,0.39883018,Release pipeline fixes #995 #1009 #1061,"Drop ""Core"" from the social banner image",0
"assets: drop ""Core"" from the social banner image",0.36082417,Drop -core suffix from entry executable #551 ,,0
docs: update aka.ms links,0.57687616,Update documentation to use reference-style links (#680),Update references to aka.ms/gcmcore- to aka.ms/gcm/.,0
docs: update org and repo name,0.5355792,org-rename: update references to GitCredentialManager (#1141),Replacing references to microsoft/Git-Credential-Manager-Core with references to GitCredentialManager/git-credential-manager.,0
Merge pull request #538 from mjcheetham/github-tty,0.49571037,- Fix TTY-based prompts for GitHub authentication (#30),Show GitHub terminal prompts when no GUI session,0
docs: replace references to GCM Core/GCM-Core with GCM,0.690734,"Set the full path to standalone GCM Core installs, enabling overriding of bundled versions (#188, #199)","With the ongoing work to migrate GCM to its new org, we're taking the opportunity to update our references to GCM Core/GCM-Core in documentation to GCM. Note that this change is limited to documentation only - executables and assemblies will be updated at a later time.",0
deb: remove unnecessary symlinks from deb package,0.46734506,Ensure Debian package is expected size and contains necessary files (link),Remove the symlinks to the GitHub and Bitbucket UI helpers in /usr/local/bin. These are not required to have the core GCM application locate the helpers and just create more noise in the user's $PATH.,0
deb: fix Debian package build script,0.5814426,Fix build script error creating incorrect x64 packages for macOS (link),"The Debian package build script incorrectly copies the containing directory to the destination tree rather than just the contents recursively. This means we end up with: usr └── local     ├── bin     │   ├── Atlassian.Bitbucket.UI -> ../share/gcm-core/Atlassian.Bitbucket.UI     │   ├── git-credential-manager-core -> ../share/gcm-core/git-credential-manager-core     │   └── GitHub.UI -> ../share/gcm-core/GitHub.UI     └── share         └── gcm-core  ** --->    └── Release                 ├── Atlassian.Bitbucket.UI                 ├── git-credential-manager-core                 ├── GitHub.UI                 ├── libHarfBuzzSharp.so                 ├── libSkiaSharp.so                 └── NOTICE ..rather than: usr └── local     ├── bin     │   ├── Atlassian.Bitbucket.UI -> ../share/gcm-core/Atlassian.Bitbucket.UI     │   ├── git-credential-manager-core -> ../share/gcm-core/git-credential-manager-core     │   └── GitHub.UI -> ../share/gcm-core/GitHub.UI     └── share         └── gcm-core             ├── Atlassian.Bitbucket.UI             ├── git-credential-manager-core             ├── GitHub.UI             ├── libHarfBuzzSharp.so             ├── libSkiaSharp.so             └── NOTICE Since the symlinks are wrong, the installation is broken.",0
github: show terminal prompts when no GUI,0.8903326,"- Show the terminal/TTY based prompts when there is no desktop/GUI sessions present for GitHub (#453, #538)","Show the terminal/TTY based prompts when there is no desktop/GUI sessions present for GitHub. Currently the Bitbucket and Microsoft auth stacks correctly detect the lack of a desktop session and use terminal prompts - GitHub does not. Without this change, SSH-ing in to a machine we'd still try and show a UI prompt where there is no way to interact with it!",1
Merge pull request #536 from microsoft/main,0.44095585,"Fix a bug with using Microsoft Accounts with Azure Repos (#143, #148)",New release (episode 3: revenge of the release),0
Merge pull request #535 from mjcheetham/dynamic-provider-setting-only,0.45480677,Updated generic provider to support all protocols (#712),Only set credential.provider for dynamic matches,0
registry: only set credential.provider for dynamic matches,0.74348944,Fix a bug to prevent setting credential.provider when it wasn't needed (Only set credential.provider for dynamic matches #535),"Only set the credential.provider setting after auto-detection of the provider that used dynamic (network calls) matches. Currently we set the provider config setting after a successful auto-detection, even if we matched ""simply"" based on the host name (and didn't need a network call). The original idea of this ""set after detect"" was really to avoid having to do auto-detection that involved a network call, and not the cheap static matches. Change the logic in the host provider registry to only persist the provider setting if the network call was made.",1
Merge pull request #534 from microsoft/main,0.44859174,"Fix a bug with using Microsoft Accounts with Azure Repos (#143, #148)",New release (attempt 2),0
Merge pull request #529 from mjcheetham/wslview,0.48480874,Add support for using WSL Git configuration (#461),Use wslview to launch browser in Windows from WSL,0
Merge pull request #531 from mjcheetham/cmdline,0.37992913,"- Codebase and build improvements (#29, #33)",Update System.CommandLine to 2.0.0-beta1.21216.1,0
Merge pull request #533 from microsoft/release-fix,0.5782681,Release pipeline fixes #995 #1009 #1061,Fix release builds,0
build: authenticate to MicroBuild feeds,0.42904705,Add explicit device code authentication for GitHub (#478),,0
build: use new Microbuild signing tasks,0.43991965,Simplified build number included in artifact names (#638),,0
build: use new Microbuild package,0.49211812,Fix build script error creating incorrect x64 packages for macOS (link),,0
build: use new Microbuild 1ES pool,0.39529353,Simplified build number included in artifact names (#638),Use the new Microbuild pool from 1ES.,0
Merge pull request #532 from ldennington/add-linux-packages-note-to-readme,0.43461406,This release is a fast follow to 2.0.692 to fix issues with the Debian package generated as part of that release.,README: add information on removal from  MSFT Ubuntu feeds,0
README: add information on removal from  MSFT Ubuntu feeds,0.2967964,"Future proof Windows broker ""WAM"" version detection (#465)","As part of the migration of GCM  out of the microsoft org, we removed packages from the Microsoft Hirsute/Bionic feeds. Adding a note to the README informing users that these packages are no longer available and that installing the debian package from the releases page is the preferred mode at this time.",0
Merge pull request #530 from microsoft/main,0.46369925,"Fix a bug with using Microsoft Accounts with Azure Repos (#143, #148)",New release,0
cmdline: update System.CommandLine to 2.0.0-beta1.21216.1,0.7399569,Update System.CommandLine and fix some bugs (#531),Update the System.CommandLine package to 2.0.0-beta1.21216.1 to hopefully fix some problems with dotnet-suggest registration caused by Process::UseShellExecute differences between .NET Framework and .NET (Core). link link link,1
wsl: use wslview to launch browser in Windows from WSL,0.88027,Support the wslview command  to open the browser (#529),"When installed inside of a Linux environment we typically look for a set of utilities to open the user's preferred browser (xdg-open, gnome-open, kfmclient). However, if we are actually in a WSL (Windows Subsystem for Linux) distribution, these utilties may not be/are not present. Instead we can try and use the wslview utility that will launch the user's browser on the Windows host. Appending wslview to the list of utilities to open the browser means no behaviour change for existing Linux users, but for WSL distros we now have a chance to still open the browser.",1
docs: update version cmd in issue template,0.49878472,issue templates: remove core suffix (#1180),,0
Merge pull request #520 from ldennington/remove-winget,0.57456666,More winget publishing fixes (#353),Remove winget workflow,0
Remove winget workflow,0.41468656,"Fix winget publishing (#332, #338)","We have decided to remove GCM Core's winget publishing workflow for the following reasons: We want to encourage Windows users to install the bundled GCM Core that comes with Git for Windows GCM Core has 2 installers with the same arch and type (user and machine), which wingetcreate doesn't support Removing this option will decrease the complexity of our GCM Core's release matrix If users need to install GCM Core separately from Git for Windows, they can download the appropriate installer from the releases page Thus we are removing the workflow with this change. Note: We are unable to deprecate the packages we have already released due to lack of winget support for this scenario. Tracking here: link",0
Merge pull request #517 from mjcheetham/discovery-setconfig,0.4234415,Add support for using WSL Git configuration (#461),Set credential.provider after successful auto detection probe,0
docs: use new Git for Windows installer screenshot,0.47489583,Split the Windows installer into user- and system-wide 'flavours' (#197),,0
autodetect: set credential.provider after autodetect,0.6418201,Fix a bug to prevent setting credential.provider when it wasn't needed (Only set credential.provider for dynamic matches #535),"After we've detected the host provider from an auto-detection network probe, set the credential.provider setting so we can avoid the expensive operation in the future. If we fail to set this then warn the user and ask them to set the configuration manually.",0
Merge pull request #514 from mjcheetham/fix-deb,0.52262795,"Fix missing dependencies in Debian package (#506, #514, #528)",Include all shared libraries in Debian package,0
Merge pull request #516 from ldennington/remove-release-apt-get,0.43351328,This release is a fast follow to 2.0.692 to fix issues with the Debian package generated as part of that release.,Remove release-apt-get workflow,0
Remove apt-get install instructions from README.md,0.3642594,Fix computation of installation path on Linux/single-file publish (#310),"We are no longer deploying debian packages to Microsoft feeds. Further, all previous deployments have been removed from the applicable feeds. Removing the instructions for installation via apt-get in light of these changes.",0
Remove release-apt-get workflow,0.41338325,Migrated release process from Azure DevOps to GitHub actions (#707),"With the move to the Git Credential Manager org (and the general direction we're heading in for our release processes) we no longer want to deploy debian packages to Microsoft feeds. We may re-visit a different feed in the future, but removing the workflow for now - users can install the debian package from the releases page or install from source.",0
deb: include all shared libraries in Debian package,0.49826556,Ensure Debian package is expected size and contains necessary files (link),"Include missing Avalonia native shared libraries in the Debian package. They are already being included in the tarball, but omited from the Debian package. Change the build script to do a recursive copy cp -R so that as dependencies change over time, we don't miss any!",0
Merge pull request #513 from microsoft/docs-g4w,0.38873053,Add support for using WSL Git configuration (#461),Update readme to call out G4W bundling,0
Merge pull request #512 from mjcheetham/msal-4.37,0.5040893,Consume new MSAL library versions (#346),Update to MSAL.NET 4.37,0
docs: update readme to call out G4W bundling,0.436211,Various documentation updates:,Call out that installing GCM as part of G4W is preferred.,0
Merge pull request #503 from mjcheetham/curl-envars,0.435463,Add preliminary support for OAuth with GitHub AE (requires server support/changes) (#343),Match libcurl lowercase proxy environment variable behaviour,0
Merge pull request #508 from julescubtree/update-contributing-guide,0.4274277,More winget publishing fixes (#353),Fix CONTRIBUTING.md link to LICENSE,0
settings: match curl lowercase proxy envar behaviour,0.5559623,"Improve proxy environment variable handling (#497, #501, #503)","libcurl supports multiple different environment variables [1] to configure proxy behaviour: http_proxy, https_proxy, all_proxy, and no_proxy. Unlike most other environment variables these proxy envars are normally lowercase, not uppercase. This convention was set by libwww back in the early 1990s. When libcurl was first released however, it was not aware of this schism and only implemented checks for uppercase variants of these envars: HTTP_PROXY, HTTPS_PROXY, ALL_PROXY, and NO_PROXY. In time, libcurl learned to also read the lowercase variants, and gives them precedence over the uppercase forms (since the former are quasi- standards). However, to further complicate the matter, libcurl no longer reads the uppercase HTTP_PROXY variable specifically. This change was made to address a security concern with some CGI webservers [2]. The problem is that today GCM only reads the uppercase variants of the environment variables! This is inconsistent with libcurl, and therefore Git's behaviour (that we aim to be consistent/co-operative with). We change GCM's behaviour to match that of libcurl/Git in that the lowercase proxy envars are preferred to the uppercase ones, and the uppercase HTTP_PROXY variable is ignored. Dropping support for the HTTP_PROXY uppercase envar is technically a breaking change, but if the user had only set this uppercase envar then Git would not be proxying the actual remote calls, only GCM, which is most likely not what the user wanted. [1] link [2] link",0
Merge pull request #501 from mjcheetham/noproxy-globs,0.43761867,"Support for the NO_PROXY option to bypass the proxy for certain addresses (#299, #297)",Match NO_PROXY formats to libcurl behaviour,0
Merge pull request #510 from ldennington/add-ui-testing-instructions,0.38240695,Include UI helpers in Debian package for Linux release; move GCM symlink to /usr/local/bin (#405),Clean up README.md and CONTRIBUTING.md,0
proxy: match NO_PROXY formats to libcurl behaviour,0.6348706,"Support for the NO_PROXY option to bypass the proxy for certain addresses (#299, #297)","We aim to be compatible with the behaviour of Git as much as possible when it comes to network settings. This enables users to setup Git proxy settings and get the same setup ""for free"" with GCM. Git uses libcurl to provide it's HTTP interactions. The NO_PROXY setting is used by libcurl to disable proxy settings for specific hosts. We previously attempted to plumb the value of NO_PROXY through to the .NET WebProxy class' list of ""bypassed addresses"" (the set of hosts that should not be proxied). However, the .NET class expects a set of regular expressions which is unlike libcurl! As a result, libcurl permitted values for NO_PROXY were throwing errors inside of GCM since they are not valid regexs. In this commit we perform a transformation of the NO_PROXY list and construct a set of regular expressions that match addresses in the same way as libcurl does. The transformation is as follows: strip any leading periods '.' or wildcards '*.' escape the remaining input to match literally (e.g.: '.' becomes '.') prepend a group that matches either a period '.' or a URI scheme    delimiter '://' - this prevents partial domain matching append a end-of-string symbol '$' to ensure we only match to the    specified TLD and port See the libcurl documentation on NO_PROXY behaviour: link",0
msauth: update to MSAL.NET 4.37,0.5973998,"Update MSAL; set MS auth embedded window title (#239, #512)",Update our MSAL.NET dependency to 4.37 from 4.31. This should come with the following updates/fixes that we care about: Can set embedded web view (legacy) window title to custom message Fixes some problems with WAM dialogs appearing behind parent windows Moves WAM to no longer being experimental Better MSA-PT support when used with WAM Numerous performance improvements with authority discovery Various WAM bug fixes Fixes #239,0
Clean up README,0.41279495,Various documentation updates:,Remove line from README stating we don't deploy our debian packages to official Microsoft feeds.,0
Add UI testing instructions to CONTRIBUTING,0.39700317,"- Show the terminal/TTY based prompts when there is no desktop/GUI sessions present for GitHub (#453, #538)",Recommend testing of impacted projects with UI changes.,0
Merge pull request #500 from ldennington/remove-microsoft-from-namespace,0.4849779,"Refactor namespace, assembly and project names (#500)",Replace Microsoft in GCM namespaces/file names,0
fix the signing! woop yolo,0.34301925,Remove use of box drawing characters in warning output (#243),,0
Rename projects and directories,0.52557003,"Refactor namespace, assembly and project names (#500)",This change updates the following project/directory names according to the below: Microsoft.Git.CredentialManager --> Core Microsoft.Git.CredentialManager.Tests --> Core.Tests Microsoft.Git.CredentialManager.UI --> Core.UI Microsoft.Git.CredentialManager.UI.Avalonia --> Core.UI.Avalonia Shared.UI.Windows --> Core.UI.Windows,0
Remove Microsoft from/generally update namespaces,0.6141087,"Refactor namespace, assembly and project names (#500)",Updated the following namespaces: TestInfrastructure --> GitCredentialManager.Tests Microsoft.Git.CredentialManager --> GitCredentialManager Microsoft.Git.CredentialManager.Tests --> GitCredentialManager.Tests Microsoft.Git.CredentialManager.UI --> GitCredentialManager.UI Microsoft.Git.CredentialManager.UI.Avalonia --> GitCredentialManager.UI Shared.UI.Windows --> GitCredentialManager.UI Git-Credential-Manager --> GitCredentialManager,0
Remove Microsoft from assembly names,0.63793373,"Refactor namespace, assembly and project names (#500)",This change updates the following assembly names: Microsoft.Git.CredentialManager --> gcmcore Microsoft.Git.CredentialManager.UI --> gcmcoreui Microsoft.Git.CredentialManager.UI.Avalonia --> gcmcoreuiavn Shared.UI.Windows --> gcmcoreuiwpf It also updates the corresponding xaml/iss files with the new names.,0
Fix CONTRIBUTING.md link to LICENSE,0.37938803,Fix computation of installation path on Linux/single-file publish (#310),,0
Add PAT as possible option to credential.gitHubAuthModes (#496),0.8440834,"Add explicit PAT authentication mode for the GitHub Provider (#236, #259)",add pat as possible option to credential.gitHubAuthModes add pat as possible option to GCM_GITHUB_AUTHMODES fix formatting,1
Merge pull request #494 from mjcheetham/no-auto-noise,0.4195987,"Remove noisy messages during auto-detection (#492, #494)",Remove auto-detection progress/info message,0
registry: remove autodetection progress/info message,0.48615453,"Remove noisy messages during auto-detection (#492, #494)","Remove the ""info: detecting host provider for 'URL'..."" message that is only causing noise for users. Fixes #492",0
Merge pull request #488 from mjcheetham/badgitver-docs,0.4713518,Fix a bug with handling libgit2 errors (#111),Update README to list versions of Git that we are/not compatible with,0
docs: add missing DPAPI option to summary,0.5182248,Add option to use the new DPAPI-based credential store on Windows (#464),,0
docs: update README to list bad Git versions,0.46211088,Discontinued incorrect use of Homebrew Git shim (#731),"Add a section to the README document that lists versions of Git that GCM is known to have problems with, such as 2.26.2 that broke credential configuration parsing.",0
Merge pull request #483 from ldennington/update-metadata,0.40869713,Consume new MSAL library versions (#346),Set up infrastructure for wingetcreate,0
Update inno installer metadata,0.4381587,Fix Windows user-only installer configuration bug (#335),Updating inno installer metadata to align with the specification outlined in link. Also adding appropriate quotations to Installer.Windows.csproj to handle paths with spaces.,0
Merge pull request #482 from microsoft/main,0.4625333,"Fix a bug with using Microsoft Accounts with Azure Repos (#143, #148)",Cut new GCM release,0
Run release-winget on Windows Server,0.43175188,Introduce the Bitbucket host provider with Windows GUI (#37),wingetcreate is a Windows exe and thus must be run on Windows. Updating our release-winget workflow accordingly.,0
Merge pull request #481 from mjcheetham/autov2,0.34959063,Codebase and build improvements (#49),Speed up host provider auto-detection and make more robust,0
registry: speed up auto-detect and make more robust,0.454693,"Remove noisy messages during auto-detection (#492, #494)","Speed up the auto-detection mechanism in the HostProviderRegistry by setting a short(er) timeout on the probing network call (2 seconds). The default value from the framework is otherwise 100 seconds(!). We introduce a setting for the user to be able to configure this timeout value with the granularity of 1 millisecond. Another problem that occured with this network call was crashes due to TLS configuration issues. The network call was not wrapped in a try-catch block which meant that the entire process would crash if there was a problem. This isn't ideal for what is supposed to be a ""best effort"" feature. Here we wrap the HEAD call in a try-catch and display an appropriate warning message to the user. For completeness, add documentation that explains the auto-detection feature, how to configure the timeout, and how to disable this network call.",0
http: only wait for headers in HEAD calls,0.40917104,Auto-detect on-premises/self-hosted providers via HTTP headers (#262),"Speed up HTTP HEAD calls made via the HeadAsync extension method by only waiting until the headers have been received, rather than the entire message content.",0
Merge pull request #480 from mjcheetham/fix-winstall,0.46240142,Update System.CommandLine and fix some bugs (#531),Add missing assemblies/files to Windows installer,0
Merge pull request #479 from nimatt/patch-1,0.4253857,More winget publishing fixes (#353),Added missing quotes in WSL instructions,0
windows: add missing assemblies/files to Windows installer,0.5558023,Basic Windows installer (#41),"Add missing assemblies and files to the Windows installer setup script. Since the introduction of the shared UI view models between WPF and Avalonia, we neglected to include the new assemblies in the Windows installer package! Also include the NOTICE file that was left out.",0
Merge pull request #478 from mjcheetham/gh-device-ui,0.4819685,Add explicit device code authentication for GitHub (#478),Add explicit GitHub device code authentication option,0
docs: update docs for new GitHub auth modes,0.7518727,Improved usability for GitHub auth (#587),"Update documentation to include the new browser and device authentication modes for GitHub. The old oauth value expands to both browser, device for compatibility.",1
github: add explicit device code auth mode to UIs,0.8588384,Add explicit device code authentication for GitHub (#478),"Add the device code option to the Avalonia and WPF helper UI applications for GitHub. This includes adding a new explicit ""device code"" button to the primary authentication prompt view, and a new device code display prompt.",1
github: implement explicit device code flow option,0.6730643,Add explicit device code authentication for GitHub (#478),"Implement an explicit OAuth device code authentication mode for the GitHub host provider. Previously the 'web browser' option combined both the interactive/browser based flow (when a UI was present), and a TTY-based device code flow. This change allows users to select the device code flow even when they have a desktop/UI session present. This is useful to workaround possible problems with the browser loopback/redirect mechanism.",0
Added missing quotes in WSL instructions,0.7214523,Fix WSL configuration instructions (#479),One of the commands for WSL configuration was missing quotes which resulted in invalid configuration.,1
github: consolidate helper options; add --all option,0.50569856,Add Git configuration options for trace & debug (#1228),"Consolidate all the UI helper options for the GitHub prompt view in to an Options class (rather than bloat the execution handler with more arguments). Also fix a bug whereby the GitHub host provider would attempt to invoke the UI helper with an --all option when all authentication modes are available, but no such option is available! This option was only available on the old WPF UI helper, and was never carried forward to the Avalonia UI.",0
github: rename OAuth authmode to Browser,0.7070877,Fix bug in GitHub x-platform UI where the browser/OAuth option is not shown (#360),Rename the OAuth GitHub authentication mode to Browser to better match what interaction will happen when selecting this mode. Also prepare for the introduction of an explicit device code OAuth flow mode.,1
Merge pull request #472 from mjcheetham/combined-ui,0.40217558,"Fix several UI bugs (#1238, #1241)",Combine WPF and Avalonia UI view models and commands,0
avalonia: update to Avalonia 0.10.7,0.4746154,Make Avalonia UI the default Windows and move to in-process (#1207),"Update to the latest version of Avalonia to fix various rendering problems including, shadow issues on macOS, and DPI issues on macOS. Fixes #408.",0
bitbucket: reimplement credential and OAuth views,0.8087503,Updated Bitbucket UI to separate OAuth and username/password options (#754),"Reimplement WPF views for the Bitbucket credential and OAuth prompts. The layout is largely unchanged, but now more closely matches the Avalonia layout/implementation of these views.",1
bitbucket: add stub WPF-based UI helper for Bitbucket,0.67615056,Introduce the Bitbucket host provider with Windows GUI (#37),,0
github: reimplement credential and 2FA WPF views,0.75782526,WPF-based GitHub auth UI (#40),"Reimplement WPF views for the credential and 2FA GitHub prompts. The layout is now much simpler, and matches the Avalonia-based UI.",1
github: readd WPF GitHub divider and 2FA controls,0.6571544,WPF-based GitHub auth UI (#40),Reimplement/readd the WPF-based GitHub horizontal divider and six digit (2FA code) controls.,0
github: add stub WPF-based UI helper for GitHub,0.7273524,WPF-based GitHub auth UI (#40),,1
wpf: readd WPF UI/threading helpers,0.4701482,WPF-based GitHub auth UI (#40),,0
wpf: readd shared WPF controls and styles,0.4359836,WPF-based GitHub auth UI (#40),"Readd various WPF shared controls and styles including: DialogWindow control PromptTextBox control WPF converters Password Prompt control   Reintroduce a password text box control, that supports watermarked text   when empty. This is the same control as before, except now it uses a   plain System.String, rather than a SecureString (which is pointless in   practice). wpf: readd shared WPF styles and colours",0
wpf: delete old WPF UI helpers for BB and GH,0.38205004,"Fix several UI bugs (#1238, #1241)","Delete the old WPF-based UI helpers for both Bitbucket and GitHub. These will be rebuilt using the view models, commands, and architecture extracted from the Avalonia-based UI helpers.",0
xui: target netstandard2.0 for shared UI projects,0.45999992,Replace netstandard2.0 with dotnet6.0 (link),Change the target for the shared projects to .NET Standard 2.0 so they can be referenced from .NET Framework 4.7.2 and .NET 5 projects.,0
bitbucket: split Avalonia UI from agnostic VM/cmds,0.53845936,Make Avalonia UI the default Windows and move to in-process (#1207),"Extract Avalonia specific components from the Bitbucket UI helper in to their own project. The remaining agnostic components (view models, commands) can be shared with the WPF implementation.",0
github: split Avalonia UI from agnostic VM/cmds,0.5983234,Make Avalonia UI the default Windows and move to in-process (#1207),"Extract Avalonia specific components from the GitHub UI helper in to their own project. The remaining agnostic components (view models, commands) can be shared with the WPF implementation.",0
xui: extract Avalonia specific pieces from shared UI project,0.43472135,Make Avalonia UI the default Windows and move to in-process (#1207),"Pull out all Avalonia specific components from the shared UI project. This will later allow us to share the agnostic shared UI project components with the WPF implementation of the UI helpers, reducing duplicated code.",0
xui: remove Avalonia deps in WindowViewModel,0.4841137,Make Avalonia UI the default Windows and move to in-process (#1207),"Remove the direct dependency on Avalonia types in the base WindowViewModel. This will allow us later to extract UI framework agnostic components, to be shared between WPF and Avalonia implementations of the UI helpers.",0
xui: return -1 on exception in UI helpers,0.6668428,"Return non-zero code for UI helpers on error (#440, #441)",Return a non-zero exit code when encountering an exception in a UI helper.,0
helper: trace helper UI process starts,0.52795,Initial TRACE2 tracing events #1045,"Trace each UI helper invocation, along with any arguments.",0
Merge pull request #475: Update README.md,0.4904268,readme: add link to project roadmap (#1204),Typo.,0
docs: update FAQ with comment on credential.useHttp,0.54520714,Add preliminary support for OAuth with GitHub AE (requires server support/changes) (#343),Update the FAQ document with an explanation on why the credential.useHttpPath setting is required for Azure DevOps.,0
Merge pull request #468 from microsoft/support-matrix,0.3848192,"Fix a bug with using Microsoft Accounts with Azure Repos (#143, #148)",supported platforms,0
Merge pull request #464 from mjcheetham/dpapi,0.39244816,More winget publishing fixes (#353),Add DPAPI based credential store on Windows,0
dpapi: add unit tests of DPAPI cred store,0.53367054,Add option to use the new DPAPI-based credential store on Windows (#464),,0
supported platforms,0.5572028,Operating Systems:,,0
Merge pull request #463 from mjcheetham/diagnose,0.43532863,Add new diagnose command to help debug problems in the wild (#463),Add diagnostic command for debugging issues,0
Merge pull request #461 from mjcheetham/wsl,0.57703304,Add support for using WSL Git configuration (#461),Add support for using WSL Git for configuration,0
Merge pull request #465 from mjcheetham/win11,0.44629064,"Add GitHub OAuth support and refreshed Windows UI (#101, #103)",Correctly detect Windows 11 version numbers,0
fixup! docs: update docs for new credstore options,0.497208,Various documentation updates:,,0
win11: expand Win10 check to Win10+,0.41496295,"Groundwork for upcoming Windows release, including:","Expand existing checks for ""is Windows 10"" to ""is at least Windows 10"" to also capture Windows 11.",0
diagnose: add GitHub API diagnostic tests,0.5341335,Add new diagnose command to help debug problems in the wild (#463),,0
diagnose: add MS auth diagnostic tests,0.47577918,Add support for the Windows authentication broker - Windows Hello support (default off) (#323),,0
diagnose: add credential storage diagnostic tests,0.46412343,Stopped serializing/writing credentials that already exist (#739),,0
diagnose: add Git diagnostic tests,0.5999109,Add Git configuration options for trace & debug (#1228),,0
diagnose: add networking diagnostic tests,0.41624567,Add new diagnose command to help debug problems in the wild (#463),,0
diagnose: add file system diagnostic tests,0.5205102,Add new diagnose command to help debug problems in the wild (#463),,0
diagnose: add environment diagnostic tests,0.6265313,Add new diagnose command to help debug problems in the wild (#463),,0
diagnose: add diagnose command,0.71234965,Add new diagnose command to help debug problems in the wild (#463),Add a diagnostic command diagnose that can run various tests to verify the operation of various components of GCM. Log files can be written to an output directory.,1
platformutils: add ability to read OS version,0.4134212,"Future proof Windows broker ""WAM"" version detection (#465)",Add the ability to read the current OS version string.,0
docs: update docs for new credstore options,0.490403,Various documentation updates:,,0
wincred: add explicit test for cred persistence,0.3595413,Ensure we create a WindowsProcessManager on Windows (#1146),"Add an explicit test for credential persistence. If Windows indicates that either we don't have a credential set for the logon session, or the maximum allowed persistence for generic credentials is less than ""local machine"" then fail.",0
dpapi: add new credstore on Windows using DPAPI,0.671219,Add option to use the new DPAPI-based credential store on Windows (#464),"Add a new credential store on Windows that uses DPAPI to encrypt the password field in a file. The file format is otherwise identical to the Plaintext credential store. The default location for the DPAPI store is ~/.gcm/dpapi_store and this can be configured with the GCM_DPAPI_STORE_PATH or credential.dpapiStorePath. The addition of the DPAPI credential store allows for secure credential storage on Windows in cases where the Windows Credential Manager cannot work/has limitations. Specifically, DPAPI works over network sessions (like SSH) and is not subject to size limits.",0
credentialstore: allow users to select more credstores,0.5425205,Add option to use the new DPAPI-based credential store on Windows (#464),"Implement a unified proxy pattern for the available credential stores. This allows users to select from multiple stores on all platforms, as we currently support for Linux.",0
sln: remove unused external file nodes from solution,0.30063903,Drop -core suffix from entry executable #551 ,,0
fixup! wsl: support calling Git inside of WSL,0.8082125,Add support for using WSL Git configuration (#461),,1
fixup! docs: add WSL documentation,0.7296739,Fix WSL configuration instructions (#479),,1
docs: add WSL documentation,0.6123668,Fix WSL configuration instructions (#479),,0
wsl: support calling Git inside of WSL,0.7992504,Add support for using WSL Git configuration (#461),Add support for calling back to the Git executable in a Windows Subsystem for Linux (WSL).,1
git: use IEnvironment::CreateProcess,0.50866765,git: consistently read from stdout before exit wait (#1136),Use the new CreateProcess method on the IEnvironment component in the GitProcess class.,0
env: introduce CreateProcess method in IEnvironment,0.4944442,Ensure we init IEnvironment before SessionManager (#1167),Introduce a CreateProcess method on the IEnvironment component. This will serve as a place to consolidate Process object creation that currently exists in multiple places.,0
Merge pull request #456 from ldennington/upgrade-winget,0.56635356,More winget publishing fixes (#353),Upgrade update-winget action to v1.4,0
Upgrade update-winget action to v1.4,0.494492,More winget publishing fixes (#353),This version allows us to update existing winget manifests by specifying a manifest's SHA if it already exists in microsoft/winget-pkgs. Pull Requests 178: Allow updates to existing winget manifests,0
Merge pull request #450 from mjcheetham/dropubuntu16,0.37864363,Release pipeline fixes #995 #1009 #1061,Drop ubuntu 16.04 from CI before GitHub drops the runner,0
Merge pull request #449 from mjcheetham/proxy-noproxy,0.5074878,"Support for the NO_PROXY option to bypass the proxy for certain addresses (#299, #297)",Treat empty proxy settings as a signal to not use a proxy,0
ci: drop ubuntu 16.04 from CI before GitHub drop,0.41487116,Migrated release process from Azure DevOps to GitHub actions (#707),Drop the Ubuntu 16.04 CI build and test before GitHub drop the Ubuntu 16.04 hosted runner. link/,0
Merge pull request #446 from microsoft/codeql,0.39905635,"Fix a bug with using Microsoft Accounts with Azure Repos (#143, #148)",Add CodeQL scanning,0
Merge pull request #439 from vdye/git-config-prefix-expansion,0.6538949,Fix bug in Git config matching due due case sensitivity (#234),Use built-in git path interpolation for config settings,0
proxy: treat empty proxy settings as reset value,0.5879752,"Allow hostname-specific proxy override to use no proxy (#442, #449)","When proxy settings are set in Git, an empty value is treated as ""do not use a proxy"". We update GCM to do the same thing; when an empty value is set, we do not use a proxy. This allows for the scenario where a proxy has been set globally (unscoped) but a specific (scoped) remote does NOT have a proxy set.",0
Update codeql-analysis.yml,0.34956133,Convert issue templates to YAML (link),,0
remove autobuild,0.35232803,Simplified build number included in artifact names (#638),,0
Create codeql-analysis.yml,0.39861682,Convert issue templates to YAML (link),,0
git: add GitVersion type and Version property to IGit,0.5614801,Use native Git path interpolation for config values (#439),"The Version property (calculated only once, on first access) has type GitVersion, made up of the pre-custom components of a Git version (i.e., before a .windows or .vfs). This version is currently only used in GitConfiguration in order to determine whether to use the now-deprecated canonical type constraint flags (for backwards-compatibility purposes) when accessing a config value. Signed-off-by: Victoria Dye vdye@github.com",0
Merge pull request #441 from mjcheetham/exiterror,0.40459067,Release pipeline fixes #995 #1009 #1061,Return non-zero exit code on exception,0
fixup! config: update GitConfiguration to use --type,0.664412,Fix bug in Git config matching due due case sensitivity (#234),Switch to deprecated settings for config type (for better compatibility).,0
settings: add path expansion to settings,0.45303965,Use native Git path interpolation for config values (#439),Path interpolation enabled (using Settings.TryGetPathSetting) for the credential helper path and custom cert bundle (httpCAInfo) path. Signed-off-by: Victoria Dye vdye@github.com,0
settings: add path config handling in TryGetPathSetting,0.5061649,Use native Git path interpolation for config values (#439),"The GetSettingValues function is updated to include an isPath flag which, when true, will pass the flag to GitConfiguration.TryGet(...) when applicable. In order to have this work when a RemoteUri is specified, GitConfiguration.TryGet(...) is called directly if isPath is true after enumerating all settings (since Enumerate does not allow specifying a canonical type). Additionally, TryGetPathSetting is added as a convenience function for getting the first found path setting from GetSettingValues(...). This commit does not change the value of any existing settings  - it only introduces the ability to read settings as canonical paths (if sourced from the git config). Signed-off-by: Victoria Dye vdye@github.com",0
config: update GitConfiguration to use --type,0.6346304,Avoid using the newer --show-scope Git config option - work with downlevel Git versions (#318),"This change adds a GitConfigurationType enum to GitConfiguration and includes it as an argument to TryGet, GetAll, and GetRegex. This argument (if not None) includes the appropriate --type flag in the git config. In the TryGet extension function, an isPath boolean maps to usage of GitConfigurationType.Path for true and GitConfigurationType.None for false. Existing usage of the updated functions has not changed (that is, all usages specify GitConfigurationType.None). Signed-off-by: Victoria Dye vdye@github.com",0
app: return non-zero exit code on exception,0.52189183,"Return non-zero code for UI helpers on error (#440, #441)",Return a non-zero program exit code when an unhandled exception is encountered at the top-level command line handling.,0
Merge pull request #438 from microsoft/hubbify,0.45438865,"Fix a bug with using Microsoft Accounts with Azure Repos (#143, #148)",Changes to comply with GitHub OSS,0
remove metadata,0.27840012,Drop -core suffix from entry executable #551 ,,0
Merge branch 'main' into hubbify,0.33473268,Migrated release process from Azure DevOps to GitHub actions (#707),,0
Merge pull request #436 from mjcheetham/termios,0.35801673,Release pipeline fixes #995 #1009 #1061,Split macOS and Linux implementations and fix password echo bug,0
bring readme in line with GitHub requirements,0.49100113,Improved usability for GitHub auth (#587),,0
introduce SECURITY,0.451793,Security Fixes:,,0
introduce CoC,0.26972455,@mastercoms,,0
introduce CONTRIBUTING,0.40952653,Thanks to our contributors ❤️:,,0
Merge pull request #437 from mjcheetham/bb-async-fix,0.43421194,Release pipeline fixes #995 #1009 #1061,Drop unnecessary async keyword from method in tests,0
PosixTerminal: split macOS and Linux impl and fix,0.4274705,UI on macOS and Linux thanks to AvaloniaUI 🎉 (#336),"Previously the PosixTerminal class used the POSIX termios structure and tcgetattr/tcsetattr functions for both macOS and Linux systems. However, it transpires that the definition of the termios flags fields differs between Mac and Linux. On Linux the fields are unsigned int (4 bytes), but on macOS the fields are unsigned long (8 bytes). This change splits the termios structure into Mac and Linux flavours and sets the correct field offsets.",0
docs: update readme with new features,0.5938711,Various documentation updates:,Update readme doc to reflect current state of Linux support and features.,0
Merge pull request #431 from karlhorky/patch-1,0.44231403,Release pipeline fixes #995 #1009 #1061,"Remove planned features section, completed feature",0
Merge pull request #426 from microsoft/copyright,0.42796656,"Fix a bug with using Microsoft Accounts with Azure Repos (#143, #148)",Update copyright information,0
"Remove planned features section, completed feature",0.28297845,Simplified build number included in artifact names (#638),The native UI feature from issue link was completed in link by link .,0
bitbucket: drop unnecessary async keyword from method,0.60769737,Lazily initialise Bitbucket host provider dependencies (#1239),"Remove the unnecessary async keyword from the GetSupportedAuthModes method's test, and drop the Async suffix from the method name. This removes a warning from the build of the test assemblies that there is an async method.",0
Merge pull request #401 from mminns/ISSUE-329-force-bitbucket-oauth,0.66565865,"Allow forcing OAuth authentication with Bitbucket host provider (#329, #401)",Allow a user to force the GCMC to use Basic Auth and/or OAuth for interactions with bitbucket.org. Issue #329,0
ISSUE 329 address PR comments by simplifying the use of ThrowIfUserInteractionDisabled(),0.37314174,Fix a bug where Windows Integrated Authentication would be disabled by default (#194),,0
update copyright holder,0.3778642,"Fix winget publishing (#332, #338)",,0
remove copyright headers from .cs files,0.29503977,"Refactor namespace, assembly and project names (#500)",,0
Merge pull request #420 from microsoft/wam-doc-improvements,0.5895892,Updated WAM support to only include applicable OSes (#629),address feedback from Azure Identity team,0
note that dialogs can change,0.31876484,Make Avalonia UI the default Windows and move to in-process (#1207),,0
address feedback from Azure Identity team,0.5088188,"Fix a bug with using Microsoft Accounts with Azure Repos (#143, #148)",,0
Merge pull request #417 from mjcheetham/azr-binding-fix,0.41311985,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)",Only enumerate local Azure Repos user bindings when inside a repository,0
Merge pull request #411 from vdye/242-respect-sslCAInfo,0.4050581,Release pipeline fixes #995 #1009 #1061,242-respect-ssl-ca-info,0
http: respect http.sslCAInfo setting(s) in Git,0.75271446,"Respect http.sslCAInfo settings (#242, #411)","Replicate the behavior of http.sslCAInfo (internally, cURL's cainfo/ OpenSSL's cafile arguments). Implemented by manually comparing the server certificate with the config-specified CA file.",1
Merge pull request #405 from vdye/387-add-ui-and-symlink-deb,0.49190614,Include UI helpers in Debian package for Linux release; move GCM symlink to /usr/local/bin (#405),Add UI helpers to .deb package & change install location w/ symlinking,0
app: show exception stack trace if tracing enabled,0.53946054,Automatically trace to the debugger when attached (#94),"If application tracing is enabled, also print any exception stack traces to standard error.",0
azrepos: only enumerate local bindings inside repo,0.65498585,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)","Only attempt to enumerate Azure Repos user bindings in the local Git configuration, when inside a Git repository.",0
ISSUE 329 address PR comments with minor updates,0.42329884,Release pipeline fixes #995 #1009 #1061,,0
docs: nest Ubuntu install options and add configure,0.5131276,Split the Windows installer into user- and system-wide 'flavours' (#197),,0
"deb: move binary install location, add symlinks in /usr/bin",0.5426781,Fix computation of installation path on Linux/single-file publish (#310),,0
Merge pull request #409 from microsoft/main,0.46490577,"Fix a bug with using Microsoft Accounts with Azure Repos (#143, #148)",Cut new release,0
fixup! linux: add option for GCM_GPG_PATH environment variable,0.61878663,"Set the full path to standalone GCM Core installs, enabling overriding of bundled versions (#188, #199)",Whitespace cleanup,0
docs: clarify GCM_GPG_PATH has no config equiv.,0.66041476,"Set the full path to standalone GCM Core installs, enabling overriding of bundled versions (#188, #199)",,0
Merge pull request #406 from vdye/356-manually-specify-gpg-path,0.4178156,Allow users to specify path to GPG executable for gpg credential store on Linux (#406),Add option for GCM_GPG_PATH environment variable (Linux-only),0
deb: add UI helpers to debian package,0.7098268,Include UI helpers in Debian package for Linux release; move GCM symlink to /usr/local/bin (#405),,1
linux: add option for GCM_GPG_PATH environment variable,0.6400991,Allow users to specify path to GPG executable for gpg credential store on Linux (#406),"If GCM_GPG_PATH is specified, it is assumed to be the path to the GPG executable used by pass and will throw an exception if it is not found. If GCM_GPG_PATH is not specified, GCM Core will attempt to find the correct GPG executable by mimicking the behavior (currently) used by pass (that is, first searching for gpg2, then falling back on gpg if gpg2 is not found).",0
Merge pull request #397 from mjcheetham/chmod,0.37246838,Improved usability for GitHub auth (#587),Create plaintext credential store directory with safer permissions,0
Merge pull request #404 from mjcheetham/os-config,0.44312412,Fix bug in Git config matching due due case sensitivity (#234),Add ability to specify default settings values from the registry on Windows,0
osx: dynamically skip keychain test if invalid,0.5232536,Better warning messages on macOS when there are Keychain issues (#305),"Dynamically skip the macOS Keychain read/write/delete test if the Keychain is in a ""strange"" state. There is an unknown issue that the keychain can sometimes get itself in where all API calls result in an errSecAuthFailed error. The only solution seems to be a machine restart; not possible in CI! The problem has plagued others who are calling the same Keychain APIs from C# such as the MSAL.NET team - they don't know either. It might have something to do with the code signing signature of the binary (our collective best theory). It's probably only diagnosable at this point by Apple, but we don't have a reliable way to reproduce the problem.",0
docs: clarify registry settings for sysadmins and ordering,0.4653326,Add ability to read GCM default settings from the Windows Registry (#404),"Clarify that the new registry settings are aimed at enterprises and system administrators, and that the settings are at the lowest precedence; they can always be overridden by the user.",0
Merge pull request #402 from garvit-joshi/main,0.39155453,@garvit-joshi ,Updated ISSUE_TEMPLATE from version to --version,0
Merge pull request #398 from hickford/patch-1,0.4854606,Release pipeline fixes #995 #1009 #1061,Clarify that is necessary to run git-credential-manager-core configure.,0
docs: update docs for new enterprise default cfg,0.5013491,Various documentation updates:,Add documentation about the new enterprise/registry settings.,0
settings: add extra settings layer from WinRegistry,0.49408773,Add ability to read GCM default settings from the Windows Registry (#404),"Introduce the concept of another layer of settings (lowest precedence; default values only) below the existing environment variable and Git configuration file mechanisms. Implement on Windows using the Registry, under key: HKLM\SOFTWARE\GitCredentialManager\Configuration",0
docs: add instructions how to enable WAM,0.60771155,Updated WAM support to only include applicable OSes (#629),,0
ISSUE 329 Ignore auth overrides when calling Bitbucket DC,0.8049272,Corrected runtime exceptions with Bitbucket DC authentication (#743),,1
Updated ISSUE_TEMPLATE from version to --version,0.64541775,issue templates: remove core suffix (#1180),,0
ISSUE-329 Document the addition of Bitbucket AuthModes,0.7275971,Updated Bitbucket UI to separate OAuth and username/password options (#754),,1
Update linuxcredstores.md,0.4058662,Fix computation of installation path on Linux/single-file publish (#310),Clarify that is necessary to run git-credential-manager-core configure.,0
plaintextcredstore: create plaintext store with 700,0.5004332,Create Linux plaintext store with safer directory permissions (#397),"When creating the plaintext credential store root directory, create it with permissions such that only the owner/user can read/write/execute, and not the group or other users. This only impacts newly created store directories; existing directories do not have their permissions modified. Only applies to POSIX platforms.",0
ISSUE-329 Add configuration option to force Basic Auth or OAuth for Bitbucket,0.85362613,"Allow forcing OAuth authentication with Bitbucket host provider (#329, #401)",,1
ISSUE-329 Add tests before refactoring and extending provider code.,0.46524787,Reduce warnings from tests (#337),,0
Merge pull request #388 from microsoft/vtbassmatt-patch-1,0.45124766,Release pipeline fixes #995 #1009 #1061,Add a stable anchor for linking to Linux instructions,0
Merge pull request #386 from ldennington/update-linux,0.44876057,This release is a fast follow to 2.0.692 to fix issues with the Debian package generated as part of that release.,Add instructions for apt-get install to README,0
Clarify workflow_dispatch input description,0.2553966,Various documentation updates:,"We are currently using 'Release tag' to describe the required input to our workflow_dispatch trigger. This is inaccurate - this field actually requires a 'Release id', which I discovered when testing GCM Core apt-get deployments yesterday. Updating so that the description doesn't confuse folks running the workflow for a release that is not 'latest'.",0
Add instructions for apt-get install to README,0.4305002,Validate installers before publishing (#813),Updating README.md with instructions for apt-get setup and install for Ubuntu Bionic and Hirsute.,0
Merge pull request #377 from ldennington/update-linux-deployments,0.43164206,Release pipeline fixes #995 #1009 #1061,Update apt-get workflow to publish to official bionic/hirsute repos,0
Consolidate apt-get release flow,0.4351143,Publish zip and tar balls of releases (#96),This change replaces Python scripts we were calling from the release-apt-get pipeline with inline scripts. It also adds support for releasing to Ubuntu repositories hosted at link/ (hosting location for Microsoft's official apt/yum repos). This allows users to install via apt-get on Hirsute/Bionic. Details to configure appropriate repos can be found here: link).,0
Merge pull request #383 from microsoft/vtbassmatt-patch-1,0.45142838,Release pipeline fixes #995 #1009 #1061,"a small ""how to use"" tweak",0
Merge pull request #373 from mminns/issue-267-auto-detect-bitbucket-dc,0.6460737,Bitbucket DC OAuth support (#607),"Issue-267 Add fingerprint header, to autodetect Bitbucket DC instances.",0
"a small ""how to use"" tweak",0.35899162,Add option to prevent interactivity (#91),,0
"Issue-267 Add fingerprint header, to autodetect Bitbucket DC instances.",0.7717603,Autodetect Bitbucket DC instances (#373),Copied and refreshed the Bitbucket development doc from the Git Credential Manager for Windows project.,1
Merge pull request #379 from mjcheetham/fix-macos-hang,0.45353317,Release pipeline fixes #995 #1009 #1061,Avoid extra restore in macOS installer creation (fix CI hangs),0
osx: only publish using one MSBuild node,0.38310352,Validate installers before publishing (#813),,0
osx: avoid extra restore in macOS installer creation,0.450049,Notarize the macOS installer and binaries to permit running on macOS Catalina 10.15 (#84),"Avoid an extra dotnet restore during the dotnet publish commands in layout.sh when building the macOS installer. For some reason, the CI machines (and sometimes locally) hang during this step with: module Avoiding the restore during publish should be OK since the hosting Installer.Mac.csproj project will have already built (and restored) packages for the dependent projects.",0
Merge pull request #378 from ldennington/fix-tag-formatting,0.36949444,Release pipeline fixes #995 #1009 #1061,Fix winget tag specification,0
!fixup winget tag specification,0.53807026,More winget publishing fixes (#353),,0
Merge pull request #375 from microsoft/main,0.48500794,"Fix a bug with using Microsoft Accounts with Azure Repos (#143, #148)",Cut release,0
Merge pull request #374 from mjcheetham/fix-win-apppath,0.56696135,Fix app path name of Windows dropping file extension (#1181),Fix app entry path computation on Windows,0
app: fix app entry path computation on Windows,0.65666646,Fix app path name of Windows dropping file extension (#1181),The way we located the application (GCM) path was broken on .NET Framework (it worked OK for .NET Core/5.0+).,0
Merge pull request #361 from microsoft/main,0.47986218,"Fix a bug with using Microsoft Accounts with Azure Repos (#143, #148)",Cut another another release,0
Merge pull request #360 from mjcheetham/github-xui-fix,0.47068274,Release pipeline fixes #995 #1009 #1061,Fix bug in GitHub x-platform UI command line parsing/binding,0
github: fix bug in x-UI cmdline parsing,0.49895546,Fix bug in Git config matching due due case sensitivity (#234),"The System.CommandLine command line binding requires the parameter names match the option names. During the rebasing of the x-platform UI work, the argument name for the --oauth option was left as browser which means the OAuth browser flow is never shown, even though the base GCM program is passing the right argument/options.",0
Merge pull request #359 from microsoft/main,0.49055386,"Fix a bug with using Microsoft Accounts with Azure Repos (#143, #148)",Cut another release (fixed this time),0
Merge pull request #358 from mjcheetham/fixed-dotnet-sdk,0.60314816,Fix release builds .NET SDK version (#358),Fix the .NET SDK used in release builds,0
dotnet: fix the .NET SDK used in release builds,0.8490658,Fix release builds .NET SDK version (#358),"Fix the .NET SDK version used on Mac and Linux to build release builds in Azure Pipelines. The release build started to hang since .NET SDK 5.0.300 was available. Others have reported issues with new SDK patches: link The last successful release build used .NET SDK 5.0.203, so let's fix to that version. Last success: link Current failure: link",1
Merge pull request #357 from microsoft/main,0.49767655,"Fix a bug with using Microsoft Accounts with Azure Repos (#143, #148)",Cut new release with GHES OAuth support and x-platform UI,0
Merge pull request #336 from mjcheetham/xui2,0.41018343,More winget publishing fixes (#353),Add cross-platform UI based on Avalonia,0
"main: drop the useless ""Run!"" comments from prog.cs",0.3687956,"Remove noisy messages during auto-detection (#492, #494)",,0
Merge pull request #354 from mjcheetham/ghes-oauth,0.7528958,GHES OAuth support (#354),Mark GHES 3.2 as supporting GCM Core OAuth,1
Merge pull request #353 from ldennington/bump-winget-version,0.54965883,More winget publishing fixes (#353),Bumping version of update-winget action,0
github: mark GHES 3.2 as supporting GCM Core OAuth,0.72793317,GHES OAuth support (#354),Mark GitHub Enterprise Server (GHES; on-prem server) version 3.2 as supporting the OAuth authentication mechanism.,1
Merge branch 'main' into bump-winget-version,0.40223914,Transition from Nerdbank.GitVersioning to a version file (#1231),,0
Bumping version of update-winget action,0.48461038,More winget publishing fixes (#353),,0
"xui: add ""About GCM"" dialog window",0.52891695,Add ability to read GCM default settings from the Windows Registry (#404),,0
linux: add new Avalonia UI helpers on Linux,0.6589321,UI on macOS and Linux thanks to AvaloniaUI 🎉 (#336),,0
osx: include new Avalonia helpers on macOS,0.46335554,UI on macOS and Linux thanks to AvaloniaUI 🎉 (#336),,0
bitbucket: add Avalonia-based UI helper for BB,0.58726096,Introduce the Bitbucket host provider with Windows GUI (#37),Add a new UI helper for Bitbucket using Avalonia.,0
github: fix bug in 2FA UI helper invocation,0.5303626,Fix a bug with the GitHub provider on Windows in launching the auth UI with a username (#205),Pass the --sms option to the UI helper when prompting for a 2FA code sent via SMS for GitHub.,0
"github: add ""2FA"" prompt dialog",0.6505925,- Fix TTY-based prompts for GitHub authentication (#30),"Add new Avalonia-based ""two-factor"" auth code prompt dialog for GitHub.",0
"github: add main ""credential"" prompt",0.73877597,- Fix TTY-based prompts for GitHub authentication (#30),"Add the main ""credentials"" prompt for the Avalonia-based GitHub helper UI.",1
github: add new Avalonia-based UI helper for GitHub,0.59767693,Improved usability for GitHub auth (#587),Add a new Avalonia UI project for a GitHub UI helper.,0
xui: introduce a component for showing Avalonia UI,0.58005005,Make Avalonia UI the default Windows and move to in-process (#1207),"Add a component that uses our Dispatcher, and the Avalonia Dispatcher types to correctly initialise, show, and close windows and views in the Avalonia UI framework, ad-hoc.",0
xui: add a dispatcher class,0.23177633,"Return non-zero code for UI helpers on error (#440, #441)","Add a dispatcher type for use with Avalonia. This dispatcher is different from the built-in Avalonia Dispatcher type. On macOS the underlying platform requires that the main NSRunLoop be run on the entry thread of the process (that is, thread 0). This is unlike on Windows where all that is required is an ""STA"" thread. Because of this we need to ""reserve"" thread 0 (the main entry thread) for running the Avalonia infrastructure, and kick off a new thread to run the rest of the ""normal"" .NET application logic (such as command-line handling). The dispatcher allows queuing of work to be run on the initialised thread, until the loop is terminated. We can use this dispatcher and model to start the Avalonia app/runloops at a defered time, after main app startup. The Avalonia Dispatcher type is then used to push more work on to that inner message pump/runloop after the Avalonia application has started.",0
xui: add new HelperApplication base type,0.34461978,Trivially fix the macOS native helper crashes by deleting it 😅 (#264),Add a new application class for helper applications to surface commands and respond over standard output.,0
xui: add base dialog window control,0.33330655,Make Avalonia UI the default Windows and move to in-process (#1207),Add a styled dialog window control for use by UI helper applications built on Avalonia.,0
xui: add shared Avalonia UI class library,0.44734544,UI on macOS and Linux thanks to AvaloniaUI 🎉 (#336),Add a new project to host all the shared components for Avalonia-based UI helpers.,0
helper: allow helper processes to be terminated,0.3986081,Ensure we start child processes created with ProcessManager (#1177),Allow UI helper processes to be terminated by cancelling a CancelationToken that has been passes to InvokeHelperAsync.,0
oauth: extract OpenDefaultBrowser to reusable component,0.5367108,Generic OAuth support via config 🎉 #1062,Extract the OpenDefaultBrowser method to a helper/util class so it can be used by other components.,0
app: move GetApplicationPath to ApplicationBase class,0.4173091,Fix app path name of Windows dropping file extension (#1181),Push the GetApplicationPath method down to the ApplicationBase type so its logic can be shared across other applications.,0
Merge pull request #350 from microsoft/main,0.47807795,"Fix a bug with using Microsoft Accounts with Azure Repos (#143, #148)",Cut new release,0
Merge pull request #349 from mjcheetham/main-rename,0.44759557,org-rename: update references to GitCredentialManager (#1141),"Update CI for rename of default branch to main (and drop the ""beta"" moniker)",0
"main: rename master branch to main, and drop beta",0.34252533,Migrated release process from Azure DevOps to GitHub actions (#707),"Rename the master branch to main, and drop the ""beta"" moniker for the project now that the other Git credential ""manager"" helpers have all been fully deprecated.",0
Merge pull request #347 from mjcheetham/msal-title,0.38160247,Consume new MSAL library versions (#346),,0
Merge pull request #346 from mjcheetham/msal-vers,0.43873262,Consume new MSAL library versions (#346),,0
docs: fix more broken links in configuration.md,0.6622794,Check for broken links in documentation (#700),,0
docs: fix more broken links in environment.md,0.64974385,Check for broken links in documentation (#700),,0
Merge pull request #348 from microsoft/docs-fix,0.4718294,Release pipeline fixes #995 #1009 #1061,Fix documentation links for Windows Broker settings,0
docs: update environment docs to fix links,0.6330634,Check for broken links in documentation (#700),,0
docs: update configuration docs to fix links,0.651011,Update documentation to use reference-style links (#680),,0
Merge pull request #345 from microsoft/wam-docs,0.6079825,Updated WAM support to only include applicable OSes (#629),Add some new WAM docs,0
msauth: set MSAL embedded webview window title,0.86068064,"~Set MSAL embedded webview window title to give more context to the user (#347, #239)~ Not working currently (see here)","Set the MSAL embedded webview window to ""Git Credential Manager"" to give some context to the user where this dialog came from.",1
"link, spacing",0.33372194,Update documentation to use reference-style links (#680),,0
shrink images,0.21326485,Target *-latest runner images in CI workflow (#1178),,0
msauth: bump MSAL library versions,0.7375237,Consume new MSAL library versions (#346),"Upgrade our MSAL libraries to the latest versions: MS.ID.Client 4.29.0 -> 4.31.0 MS.ID.Client.Desktop 4.29.0 -> 4.31.0 MS.ID.Client.Extensions.Msal 2.18.3 -> 2.18.4 This brings a number of fixes that help us, including: Fix WAM account picker parenting Fix WAM exceptions in console apps Fix encoding of params sent to WAM WebView2 fallback to WebView1 Stop writing junk to standard out on Linux syswebview flows",1
move wam.md contents into broker doc,0.50041246,Add workaround for Windows Broker (WAM) running as admin (#344),,0
introduce new windows-broker doc,0.6243819,"Future proof Windows broker ""WAM"" version detection (#465)",,0
Merge pull request #344 from mjcheetham/wam-elevate,0.4916078,Updated WAM support to only include applicable OSes (#629),Add WAM workaround for elevated processes,0
msauth: address some linting issues with braces,0.53855693,"Update MSAL; set MS auth embedded window title (#239, #512)",,0
Merge pull request #343 from mjcheetham/ghae,0.4090883,Add preliminary support for OAuth with GitHub AE (requires server support/changes) (#343),Add support for OAuth with GitHub AE,0
msauth: add WAM workaround for elevated procs,0.7033427,Add workaround for Windows Broker (WAM) running as admin (#344),"Add a workaround to a broker bug whereby the account control does not appear when running from an elevated process. link The underlying issue is to do with COM and the OS account control not being able to call-back in to the elevated process. The workaround is to set the process COM security to ""none"" iif we are on Windows 10, the process is elevated, and the user hasn't disabled the broker. It is possible the call to CoInitializeSecurity may fail, as this can only be called once in the lifetime of a process, and must be called before any COM interactions occur. The CLR may perform some COM interop before we even get to the Main method(!) We try our best here and call the CoInitializeSecurity function as soon as we reasonably can in the lifetime of our process.",1
github: add support for OAuth with GHAE,0.7791963,Add preliminary support for OAuth with GitHub AE (requires server support/changes) (#343),Add support for detecting GitHub AE (GHAE) and enabling the OAuth authentication mode with the GitHub provider. link,1
Merge pull request #339 from microsoft/master,0.4738173,"Fix a bug with using Microsoft Accounts with Azure Repos (#143, #148)",Cut new release,0
Merge pull request #338 from ldennington/bump-update-winget,0.5594219,More winget publishing fixes (#353),Bumping mjcheetham/update-winget to v1.2.1,0
Bumping mjcheetham/update-winget to v1.2.1,0.52384543,More winget publishing fixes (#353),,0
Merge pull request #335 from mjcheetham/winstall-fix2,0.48862422,Release pipeline fixes #995 #1009 #1061,Fix post install configure bug,0
Merge pull request #337 from derrickstolee/fix-warnings,0.5106548,Release pipeline fixes #995 #1009 #1061,AzureReposHostProviderTests: fix warnings around orgName,0
AzureReposHostProviderTests: fix warnings around orgName,0.5564089,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)","We keep getting warnings from the actions bot saying: The variable 'orgName' is assigned but its value is never used However, these variables are used, just as parameters to lambdas within LINQ methods. By extracting this org string into a static readonly, we should be able to avoid these warnings.",0
windows: fix post install configure bug,0.6827058,Fix Windows user-only installer configuration bug (#335),"Fix a bug where an ""invalid"" argument was being passed to the GCM executable post-install of the user-only installer to configure the Git credential helper.",0
"Merge pull request #333: Add an ""s"" to the word ""work""",0.38954753,Fix bug in Git config matching due due case sensitivity (#234),This commit corrects a small grammatical error.,0
"Add an ""s"" to the word ""work"". ",0.2057656,Speed up build graph (#924),This commit corrects a small grammatical error.,0
Merge pull request #332 from ldennington/ldennington/update-winget-deployments,0.5725675,More winget publishing fixes (#353),Updating release-winget according to manifest schema changes,0
Removing repo,0.4500797,- Azure Repos,,0
Cleaning up,0.20407572,Fix a bug with host provider disposal (#272),,0
Fixing manifest,0.38499004,Release pipeline fixes #995 #1009 #1061,,0
Removing hard-coded values,0.2682348,Fix reading empty Git configuration entry values (#215),,0
Removing branch,0.28600493,Transition from Nerdbank.GitVersioning to a version file (#1231),,0
Attempting with hard-coded values,0.35912696,"Return non-zero code for UI helpers on error (#440, #441)",,0
Main,0.27176452,@mastercoms,,0
Putting branch in the right spot,0.22271234,Ensure correct installation directory resolution for all OSes and distribution methods (link),,0
Specifying master branch,0.37715518,Avoid using the newer --show-scope Git config option - work with downlevel Git versions (#318),,0
Fixing id,0.33657387,"Fix winget publishing (#332, #338)",,0
Test task version correction,0.47252402,Reduce warnings from tests (#337),,0
Updating workflow for testing,0.36270544,Target *-latest runner images in CI workflow (#1178),,0
Updates for testing,0.4557844,- Various bug fixes and improvements,,0
Updating gcm winget-release to use latest task version and manifest fields,0.5721745,"Set the full path to standalone GCM Core installs, enabling overriding of bundled versions (#188, #199)",,0
docs: update aztokens doc to add PAT REST API link,0.4865388,Experimental support for not using PATs for Azure Repos - default disabled (#294) (read more here),,0
Merge pull request #323 from mjcheetham/wam,0.4708236,Updated WAM support to only include applicable OSes (#629),Add support for Windows broker (WAM),0
msauth: default to NOT use WAM/broker,0.62018526,Add workaround for Windows Broker (WAM) running as admin (#344),,0
msauth: drop deprecated TokenCache storage props ctor,0.53577256,Share the MSAL token cache with Microsoft developer tools on macOS as we already do on Windows (#275),Remove the usage of a now deprecated constructor for the shared token cache storage properties. This constructor took the client ID which was only used to eventing; GCM doesn't use this.,0
msauth: fix typo,0.6392776,"Update MSAL; set MS auth embedded window title (#239, #512)",,0
docs: improve GCM_MSAUTH_FLOW wording,0.5231594,Allow users to select the type of interactive authentication flow for the Microsoft auth stack (#210),Improve the wording around which settings and values cause the auth-flow setting to be ignored. Grammer iz hard.,0
msauth: reorder CanUseBroker logic,0.49430594,Allow users to select the type of interactive authentication flow for the Microsoft auth stack (#210),Reorder the CanUseBroker logic to be easier to grok.,0
msauth: add support for Windows broker (WAM),0.71568155,Add support for the Windows authentication broker - Windows Hello support (default off) (#323),"Add support for broker-assisted authentication on Windows using ""WAM"" (Web Authentication Manager) as provided by the MSAL.Desktop library. The GCM_MSAUTH_USEBROKER environment variable or the credential.msauthUseBroker configuration option will control if WAM is enabled or not. By default WAM is enabled.",1
Update Windows build instructions,0.47966334,Fix release builds .NET SDK version (#358),,0
Add .NET SDK download link to dev docs,0.52801967,Fix release builds .NET SDK version (#358),,0
Use correct label on auth-problem issue template,0.48896134,"Update MSAL; set MS auth embedded window title (#239, #512)",,0
Create experimental issue template,0.5370669,Convert issue templates to YAML (link),,0
Merge pull request #318 from mjcheetham/downlevel-git-parse,0.46517903,Fix bug in Git config matching due due case sensitivity (#234),Drop the git config --show-scope option usage,0
git: drop config --show-scope option usage,0.72845125,Avoid using the newer --show-scope Git config option - work with downlevel Git versions (#318),"The Git config --show-scope option was only introduced in Git from version 2.26 onwards. The latest version of Git available in some distributions of Linux (or macOS) is often older. We only needed to know the scope of configuration values in one particular call site: reading all Azure Repos user bindinds. Replace the single IGitConfiguration::Enumerate call with two calls to Enumerate, one for the global scope, and one for the local one. Drop the --show-scope option parsing.",1
Merge pull request #308 from mjcheetham/osx-noroot-postinstall,0.4033934,Notarize the macOS installer and binaries to permit running on macOS Catalina 10.15 (#84),Run postinstall and uninstall configure commands as current user,0
osx: run postinstall configure cmd as current user,0.6059744,"Run postinstall actions as the current user, not root - stop changing ownership of ~/.gitconfig on macOS (#308)","In the macOS installer postinstall script we run the configure command to get GCM to configure the current user's credential helper as GCM. However, the postinstall script is often run as root (because that's how installer works out of the box), meaning although GCM will be writing to the ~/.gitconfig file, it will be doing so from a process running as root. To avoid having root take ownership of ~/.gitconfig we run sudo -u to run the configure command as the real user (not root).",0
docs: add link to git config/envars to switch cred types,0.6951361,Use native Git path interpolation for config values (#439),Add a link to the Azure Repos Users and Tokens document to the relevant config docs.,0
Merge pull request #306 from mjcheetham/msal-window-parent,0.5346863,Pass parent window handle information to MSAL (#306),Tell MSAL about any parent window handles GCM knows about,0
Merge pull request #310 from mjcheetham/fix-singlefile,0.47457117,Release pipeline fixes #995 #1009 #1061,Ensure we locate UI helpers correctly on Linux/published as a single file,0
app: ensure we locate helpers correctly with single file,0.4081584,"Return non-zero code for UI helpers on error (#440, #441)","Ensure that we are using the correct entry executable directory when published as a single file application. When looking for UI helpers we were still using the Assembly::Location property, which is null for single file applications. Move to pass the (correctly computed) application path to the ICommandContext, which is available everywhere.",0
Merge pull request #307 from microsoft/master,0.46733743,"Fix a bug with using Microsoft Accounts with Azure Repos (#143, #148)",Cut new release with experimental No-PAT support for AzRepos,0
Merge pull request #305 from mjcheetham/osx-msal-restartmsg,0.4487654,Share the MSAL token cache with Microsoft developer tools on macOS as we already do on Windows (#275),Include better warning message on MSAL Keychain errors,0
msauth: tell MSAL about any parent window handles,0.8079185,Pass parent window handle information to MSAL (#306),MSAL supports parenting windows it creates to another window. GCM also supports being told about a parent window by the caller. Pass through this parent window to MSAL if we have it!,1
msauth: include better warning message on Keychain errors,0.6952853,Better warning messages on macOS when there are Keychain issues (#305),"Sometimes the login Keychain is not accessible and the MSAL.Extensions library cannot read/write the token cache. The specific error encountered internally is errSecAuthFailed - neither we nor the MSAL team know why this happens sometimes. Locking and then unlocking the login Keychain manually, or simply restarting the computer appears to fix the problem. Include the lock+unlock/restart remedy in the warning message on macOS.",0
Merge pull request #294 from mjcheetham/users-in-config,0.48697686,Improved usability for GitHub auth (#587),Stop using PATs for Azure Repos (Attempt 2: Electric Boogaloo),0
git: add guards against malformed Git config data,0.6896515,Fix reading empty Git configuration entry values (#215),Add some checks/guards against malformed data output from Git configuration when enumerating all entries. If we hit the unexpected end of the data stream we trace and stop parsing.,0
azrepos: add commands to manager user bindings,0.31622395,Add generic username/password UI (#871),Add commands to manually manager the user/org bindings for the Azure Repos host provider.,0
azrepos: add a binding manager to store org-user maps,0.33636987,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)","Add a new binding manager component that can be used to 'bind' user accounts to Azure DevOps organisations. This enables the Azure Repos host provider to attempt silent authentication requests via MSAL - to attempt to use an existing access token from the cache. We only allow binding at the organisation level (and not any other level) as this is the most common scenario: one user for an entire Azure DevOps organisation. If the user wishes to override the chosen user for a particular clone they can do so by binding the user to the local repository configuration, rather than the default global configuration. Furthermore, if the user wishes to use a different user account for a particular remote within a repository, they can set the username in the remote URL.",0
azrepos: add cmd to clear the authority cache,0.3241698,Experimental support for not using PATs for Azure Repos - default disabled (#294) (read more here),Add a command to enable clearing of the Azure authority cache manually.,0
azrepos: add Azure authority cache,0.46839362,Experimental support for not using PATs for Azure Repos - default disabled (#294) (read more here),"Add a cache of the Azure backing authority for Azure DevOps orgs. This cache is only consulted when the credential type is ""oauth"" and not ""pat"". We use Git's configuration as the persistence mechanism.",0
azrepos: add non-PAT based auth method to AzRepos,0.49706483,Generic OAuth support via config 🎉 #1062,"Add a new settings to the Azure Repos provider that instructs GCM to return the Azure access token directly, rather than use that token to generate a new Azure DevOps Personal Access Token (PAT). At the moment the only indication as to what user account a user wants to use is via the userinfo parts of the remote URL. This must be set manually. The default configuration is to continue to use PATs, for now.",0
azrepos: add utility to extract AzDevOps org name,0.32944673,Simplified build number included in artifact names (#638),Add a utility to extract the Azure DevOps organisation name from a remote URL.,0
git: add ability to list remotes and get current repo dir,0.58724123,Git Host Providers:,"Add the ability to list the Git remotes for the current repository, as well as resolve the current repository path.",0
git: change git config API to push level filter to methods,0.6526637,Avoid using the newer --show-scope Git config option - work with downlevel Git versions (#318),"Change the way we interact with Git configuration so that we specify the level filter in each method call, instead of requesting the GitConfiguration object perform the filtering.",0
git: expose TrySplit git cfg key splitting helper,0.5212859,Use native Git path interpolation for config values (#439),Expose the Split method from the GitConfigurationKeyComparer as a TrySplit method and use this implementation for splitting keys in all existing instances. Also introduce a GitConfiguration::Enumerate extension method that filters based on section and property name parts of Git config entries.,0
git: include gitcfg scope/level in enumeration results,0.5424828,Avoid using the newer --show-scope Git config option - work with downlevel Git versions (#318),Teach GitConfiguration::Enumerate to parse results that include the 'level' of the Git config entry (--show-scope).,0
git: introduce GitCfgEntry wrapper type for enumeration,0.52235013,Use native Git path interpolation for config values (#439),"Introduce a wrapper type representing a single entry in Git's configuration, which is used in the Enumerate callback.",0
git: drop unused git config extension methods,0.57442605,Use native Git path interpolation for config values (#439),Remove some unused Git configuration extension methods for querying for entries based on 'split' keys (section.scope.property). These are only used in tests!,0
git: replace progdata/xdg config levels with unknown,0.64399904,Use native Git path interpolation for config values (#439),"Replace the unused ProgramData and Xdg Git configuration level enumeration members with an Unknown member. We never directly used any of those, and don't really care(!)",0
input: better input arg checking/handling,0.3215287,Correctly detect a UI interactive session on all platforms (#95),"Improve the handling of input arguments with missing required fields (e.g., protocol and host).",0
inputargs: fix a bug in remote URI generation,0.40033084,Support URL-scoped enterprise default settings (#1149),"Fix a bug in contruction of the remote URI when no username is provided, but the caller wishes to include the username.",0
app: fix exception handling/printing,0.3883224,"Return non-zero code for UI helpers on error (#440, #441)","When we moved to use the System.CommandLine library for command line parsing, we neglected to update the exception handling to match the new model.",0
Merge pull request #300 from microsoft/master,0.44607946,"Fix a bug with using Microsoft Accounts with Azure Repos (#143, #148)",,0
Merge pull request #299 from mjcheetham/noproxy2,0.44156367,"Support for the NO_PROXY option to bypass the proxy for certain addresses (#299, #297)",Add support for the NO_PROXY bypass environment variable,0
http: allow NO_PROXY split with space,0.5138837,"Support for the NO_PROXY option to bypass the proxy for certain addresses (#299, #297)",,0
docs: fix a typo in the HTTP proxy docs,0.52269185,"Support for the NO_PROXY option to bypass the proxy for certain addresses (#299, #297)",Co-authored-by: Johannes Schindelin dscho@github.com,0
http: add support for the NO_PROXY bypass envar,0.74283,"Support for the NO_PROXY option to bypass the proxy for certain addresses (#299, #297)","Add support for the cURL environment variable (also respected by Git) to list a set of host names that should connect directly (bypass), and not connect via the configured proxy.",1
Merge pull request #298 from mjcheetham/fix-singlefile-path,0.49065578,Fix computation of installation path on Linux/single-file publish (#310),"Fix computation of app path when published as a ""single file""",0
program: fix computation of app path with single file,0.569027,Fix app path name of Windows dropping file extension (#1181),"When publishing GCM as a 'single file' application, the computed path to the entry executable is no longer correct. On .NET Core 3.1, using Assembly.Location resolves to the temporary extracted DLL file path. On .NET 5 Assembly.Location always returns the empty string. Since .NET 5, published single-file apps no longer use the self- extraction model, and are real single file with all assemblies and native libraries statically linked/bundled. We now use the Environment.GetCommandLineArgs() method to get the raw underlying ""argv"" arguments, which argv[0] is the absolute file path to the entry executable. We also change how we get the application version number to look for the assembly attribute, rather than extract if from the file on disk. At app startup, also change the way we trace system information to be more readable.",0
Merge pull request #288 from NN---/net5.0,0.49941418,Replace netstandard2.0 with dotnet6.0 (link),.NET 5.0,0
Merge branch 'master' into net5.0,0.45585188,Move to .NET 5.0 on macOS and Linux (#288),,0
Merge pull request #293: Update link to .NET documentation,0.5781274,Update documentation to use reference-style links (#680),,0
docs: fix config reference typo,0.5117755,Fix bug in Git config matching due due case sensitivity (#234),,0
Merge pull request #287 from microsoft/git-credential-cache,0.6406483,Support git-credential-cache as a credential backing store on Linux (#287),Add Git credential cache as backing store on Linux,0
Update link to .NET documentation,0.6256784,Update documentation to use reference-style links (#680),,0
Update link to .NET,0.52138376,Replace netstandard2.0 with dotnet6.0 (link),,0
a less misleading comment,0.19647583,Codebase and build improvements (#49),,0
use cache as the option name,0.33161348,"Persist auto-detected provider setting (#507, #517)","env var for config is still the long form, but the git option is already namespaced to credential so it was also shortened.",0
update all docs,0.50089955,Various documentation updates:,,0
don't put CreateProcess on the interface,0.47287858,Ensure we create a WindowsProcessManager on Windows (#1146),,0
document new option,0.26119664,Add option to prevent interactivity (#91),,0
pass through options,0.3156889,Add option to prevent interactivity (#91),,0
fail loudly if a test depends on TestGit's process/helper,0.552411,Fix a bug with handling libgit2 errors (#111),,0
credential-cache requires EOF on stdin,0.4892792,Support git-credential-cache as a credential backing store on Linux (#287),,0
.NET 5.0,0.69145155,Move to .NET 5.0 on macOS and Linux (#288),,0
put the Git helper code on the Git object,0.46941173,Add Git configuration options for trace & debug (#1228),,0
elevate Git process creation to the interface,0.5280486,Add Git configuration options for trace & debug (#1228),,0
whitespace,0.23964769,- macOS,Co-authored-by: Matthew John Cheetham mjcheetham@outlook.com,0
username is the account,0.40028805,@samuel-lee-msft,Co-authored-by: Matthew John Cheetham mjcheetham@outlook.com,0
implement credential-cache as,0.5863182,Support git-credential-cache as a credential backing store on Linux (#287),backing store,0
rough in changes to talk to credential cache,0.5887011,Fix a bug to prevent setting credential.provider when it wasn't needed (Only set credential.provider for dynamic matches #535),,0
expose the copy of Git we're using,0.49270248,Git Host Providers:,,0
move InvokeAsync to the new HelperProcess,0.416146,Ensure we create a WindowsProcessManager on Windows (#1146),,0
created a place for the Helper helper,0.304082,Trivially fix the macOS native helper crashes by deleting it 😅 (#264),,0
Merge pull request #285 from microsoft/docs/useHttpPath,0.4258263,Updated generic provider to support all protocols (#712),documented behavior under credential.useHttpPath,0
Update docs/configuration.md,0.44203523,Various documentation updates:,Co-authored-by: Matthew John Cheetham mjcheetham@outlook.com,0
documented behavior under credential.useHttpPath,0.53036356,Fix a bug to prevent setting credential.provider when it wasn't needed (Only set credential.provider for dynamic matches #535),fixes link,0
Merge pull request #283 from mjcheetham/net472,0.40686476,Updated generic provider to support all protocols (#712),Target .NET Framework 4.7.2 and fix missing binaries in Windows installers,0
win: fix installer - include missing binaries,0.55065525,Fix Windows user-only installer configuration bug (#335),,0
win: target .NET Framework 4.7.2,0.7976748,Move to .NET Framework 4.7.2 on Windows (#283),,1
Merge pull request #282 from mjcheetham/docupdate,0.41205746,More winget publishing fixes (#353),Update various docs in response to new features and fix some typos,0
docs: update various docs with new code,0.46668842,Various documentation updates:,"Update various documentation and technical specifications to mirror changes to the product, such as the removal of the macOS authentication helper, and the introduction of new custom commands for host providers.",0
Merge pull request #273 from mjcheetham/cmdline,0.4020653,More winget publishing fixes (#353),Use System.CommandLine to parse cmdline args and allow provider to offer cmds,0
cmd: add ability for providers to expose custom cmds,0.5382549,Use System.CommandLine to handle our command line parsing and allow host providers to offer custom commands (#273),"Add the ability for host providers to register themselves as offering custom commands, under the provider ID name. For example a provider with the ID 'foo' would be able to expose commands under the git-credential-manager-core foo <..> command.",0
cmd: use System.CommandLine to parse cmdline args,0.5725134,Use System.CommandLine to handle our command line parsing and allow host providers to offer custom commands (#273),Replace our basic custom command-line handling code with the System.CommandLine library which provides simpler and easier handling.,0
Merge pull request #279 from mjcheetham/azr-msal-override,0.42170784,Consume new MSAL library versions (#346),Add ability to override Microsoft Authentication parameters for Azure Repos,0
azrepos: add ability to override MSAuth params,0.5265802,Allow users to select the type of interactive authentication flow for the Microsoft auth stack (#210),"Add the ability to override the Microsoft authentication parameters in the Azure DevOps API and MSAuth components - can change client ID, redirect URI, and the base authority.",0
Merge pull request #275 from mjcheetham/msalcache-osx,0.5112468,Share the MSAL token cache with Microsoft developer tools on macOS as we already do on Windows (#275),Integrate with the shared Microsoft developer tools AAD token cache on macOS,0
msauth: integrate with shared MS dev tool cache on macOS,0.77816767,Share the MSAL token cache with Microsoft developer tools on macOS as we already do on Windows (#275),Integrate with the shared Microsoft developer tools cache on macOS platforms. This allows us to share refresh tokens with VSMac and Azure CLI.,1
msauth: update MSAL library version to latest,0.75389737,Consume new MSAL library versions (#346),,1
fs: pull GCM data directory property up to IFileSystem,0.4917128,Add ability to read GCM default settings from the Windows Registry (#404),Full the ~/.gcm data directory path calculation to a property of the IFileSystem component.,0
Merge pull request #277 from mjcheetham/msal-api-harmony,0.42197692,Consume new MSAL library versions (#346),"Harmonise Microsoft Authentication APIs with AAD ""v2"" and MSAL concepts",0
Fix incorrect value separator in docs for github auth modes,0.6368324,"Add explicit PAT authentication mode for the GitHub Provider (#236, #259)",,0
Fix issue in environment doc regarding GitHub auth mode values,0.71966475,"Add explicit PAT authentication mode for the GitHub Provider (#236, #259)","We need to separate values for GitHub auth modes with a comma, not a space.",1
Merge pull request #278 from AlexanderLanin/patch-1,0.4713359,Release pipeline fixes #995 #1009 #1061,Fix multiple gitHubAuthModes,0
Fix multiple gitHubAuthModes,0.6316561,- Fix TTY-based prompts for GitHub authentication (#30),"List must be comma separated. Before: $ GCM_TRACE=1 git fetch 22:22:08.037216 ...\Application.cs:69   trace: [RunInternalAsync] Git Credential Manager version 2.0.318-beta+44acfafa98 (Windows, .NET Framework 4.0.30319.42000) 'get' 22:22:08.040208 ...\Command.cs:63       trace: [ExecuteAsync] Start 'get' command... 22:22:08.046193 ...\Command.cs:74       trace: [ExecuteAsync] Detecting host provider for input: 22:22:08.047214 ...\Command.cs:75       trace: [ExecuteAsync]   protocol=https 22:22:08.047214 ...\Command.cs:75       trace: [ExecuteAsync]   host= 22:22:08.206763 ...viderRegistry.cs:129 trace: [GetProvider] Performing auto-detection of host provider. 22:22:08.208757 ...\Command.cs:77       trace: [ExecuteAsync] Host provider 'GitHub' was selected. 22:22:08.211749 ...\HostProvider.cs:115 trace: [GetCredentialAsync] Looking for existing credential in store with service=https:// account=... 22:22:08.214770 ...\HostProvider.cs:120 trace: [GetCredentialAsync] No existing credentials found. 22:22:08.214770 ...\HostProvider.cs:123 trace: [GetCredentialAsync] Creating new credential... 22:22:08.266604 ...bHostProvider.cs:227 trace: [GetSupportedAuthenticationModesAsync] Invalid value for supported authentication modes override setting: 'OAuth Basic' After: $ GCM_TRACE=1 git fetch 22:22:32.792872 ...\Application.cs:69   trace: [RunInternalAsync] Git Credential Manager version 2.0.318-beta+44acfafa98 (Windows, .NET Framework 4.0.30319.42000) 'get' 22:22:32.796891 ...\Command.cs:63       trace: [ExecuteAsync] Start 'get' command... 22:22:32.801849 ...\Command.cs:74       trace: [ExecuteAsync] Detecting host provider for input: 22:22:32.802847 ...\Command.cs:75       trace: [ExecuteAsync]   protocol=https 22:22:32.802847 ...\Command.cs:75       trace: [ExecuteAsync]   host= 22:22:32.945493 ...viderRegistry.cs:129 trace: [GetProvider] Performing auto-detection of host provider. 22:22:32.947488 ...\Command.cs:77       trace: [ExecuteAsync] Host provider 'GitHub' was selected. 22:22:32.949455 ...\HostProvider.cs:115 trace: [GetCredentialAsync] Looking for existing credential in store with service=https:// account=... 22:22:32.951449 ...\HostProvider.cs:120 trace: [GetCredentialAsync] No existing credentials found. 22:22:32.951449 ...\HostProvider.cs:123 trace: [GetCredentialAsync] Creating new credential... 22:22:32.991343 ...bHostProvider.cs:222 trace: [GetSupportedAuthenticationModesAsync] Supported authentication modes override present: Basic, OAuth",0
msauth: rename resource to scopes and drop remote URI,0.49388903,Fix a bug to prevent setting credential.provider when it wasn't needed (Only set credential.provider for dynamic matches #535),"Rename the resource parameter to the MSAuth component to scopes, which is the AAD ""v2"" concept. Also drop the remote URI parameter which is no longer needed.",0
msauth: return MSAL wrapped result rather than JWT AT,0.50137174,Share the MSAL token cache with Microsoft developer tools on macOS as we already do on Windows (#275),Change the MSAuth GetToken method signature to return a wrapper result object rather than just the JWT access token. The result wrapper object includes the account UPN and the wrap AT as returned by MSAL. We do not need to inspect the claims of the AT (which might not even by a JWT in some cases anyway) since we have the account info elsewhere.,0
Merge pull request #274 from mjcheetham/drop-osx-helper,0.4071412,Trivially fix the macOS native helper crashes by deleting it 😅 (#264),Drop the native macOS ADAL-based Microsoft Authentication component,0
Merge pull request #272 from mjcheetham/dispose-fix,0.5279082,Fix a bug with host provider disposal (#272),Fix bug to ensure correct provider disposal,0
osx: remove native MS auth component on macOS,0.71983975,"Use the user's default web browser for Microsoft authentication on macOS and drop the native helper (#274, #277)",Remove the ADAL Objective-C based native authentication component for MSA/AAD. We now rely on the system brower of MSAL.NET.,1
msauth: remove ability to use external helper,0.56859034,"Use the user's default web browser for Microsoft authentication on macOS and drop the native helper (#274, #277)",Remove the ability to use an external authentication helper for Microsoft authentication (AAD/MSA). We now always rely on the in-process MSAL library calls.,0
hostregistry: fix bug to ensure correct provider disposal,0.81453776,Fix a bug with host provider disposal (#272),We are not correctly disposing of the host providers registered with the host provider registry. Fix this by actually calling Dispose() on the correct objects(!),1
Merge pull request #262 from mjcheetham/auto-gh,0.42068428,GHES OAuth support (#354),Auto-detect more (on-prem) providers using a simple HTTP query,0
Merge pull request #265: [Docs] Add configuration example,0.47427443,Various documentation updates:,Update docs/configuration.md to include an example of how to configure git-credential-manager-core.exe as git's credential store.,0
Docs: Add explanation to git configuration command,0.6548769,Add Git configuration options for trace & debug (#1228),Co-authored-by: Derrick Stolee derrickstolee@github.com,0
Add example of how to configure git-credential-core.exe as git's credential store,0.7143458,Support git-credential-cache as a credential backing store on Linux (#287),,1
Merge pull request #263: Fix readme brew uninstall instructions,0.5319171,Discontinued incorrect use of Homebrew Git shim (#731),This change is necessary because of a homebrew change around casks.,0
Fix readme brew uninstall instructions,0.43624404,Discontinued incorrect use of Homebrew Git shim (#731),,0
registry: add auto-detection via HTTP query,0.5589758,Add ability to read GCM default settings from the Windows Registry (#404),"Add the ability to let host providers additionally inspect a HTTP response message to determine and identify a supported service/endpoint. If the simple enumeration of providers matching against the static InputArguments does not produce a match (at each priority level), then check against the lazily evaluated HEAD call to the remote URL.",0
registry: enable registration of providers with priorities,0.5510874,"Persist auto-detected provider setting (#507, #517)","Enable host providers to be registered and enumerated for auto-detection in a simple priority order: high, normal, low.",0
registry: make GetProvider method async,0.42783827,Add ability to read GCM default settings from the Windows Registry (#404),Make the GetProvider method on the IHostProviderRegistry interface async in preparation for introducing some network I/O to the auto-detection of providers.,0
Merge pull request #260 from microsoft/master,0.4459808,"Fix a bug with using Microsoft Accounts with Azure Repos (#143, #148)",[Release] Create new release,0
docs: update readme explaining win install split,0.6046308,Split the Windows installer into user- and system-wide 'flavours' (#197),Update the readme file to explain the difference between the two Windows installers.,0
Merge pull request #259 from mjcheetham/fix-ghes-modes,0.47542787,GHES OAuth support (#354),Ensure the PAT option is always offered for GHES instances,0
github: ensure PAT is offered for GHES instances,0.69792867,"Add explicit PAT authentication mode for the GitHub Provider (#236, #259)",Ensure the Personal Access Token authentication mode is always offered for GitHub Enterprise Server instances.,0
Merge pull request #257 from mjcheetham/fixosxinstall,0.472912,Release pipeline fixes #995 #1009 #1061,Ensure the /usr/local/bin directory exists on install,0
nuget: use nuget.config to force only NuGet.org source,0.3919223,Fix release builds .NET SDK version (#358),Add a local nuget.config file to force the package source used for NuGet packages to be only the nuget.org public feed. There have been problems with some CI agents that don't have a global/default nuget.org package source.,0
osx: ensure /usr/local/bin dir exists on install,0.90998286,Ensure the /usr/local/bin directory exists on install (#257),Ensure the /usr/local/bin directory exists on macOS installations before we create the symlink for GCM Core. The directory does not exist on freshly installed Macs.,1
Update Homebrew install instructions,0.5099502,Support macOS arm64 installs via Homebrew (#798) ,Fixes #248,0
Merge pull request #241 from AlexanderLanin/subdomain,0.3936115,Fix bug in Git config matching due due case sensitivity (#234),Detect github.my-company-server.com as GitHub,0
Make tests actually test mixed case input,0.43726915,Reduce warnings from tests (#337),Uri converts to lowercase.,0
Make comparisons case insensitive,0.37329373,Fix bug in Git config matching due due case sensitivity (#234),Co-authored-by: Matthew John Cheetham mjcheetham@outlook.com,0
Merge branch 'release' into master,0.39685446,Migrated release process from Azure DevOps to GitHub actions (#707),,0
Update FAQ with some SSH questions,0.40526712,Various documentation updates:,"Some users had questions about SSH, and if it HTTPS-based remotes with GCM Core was preferred to SSH. SSH is here to stay and is a perfectly fine and valid mechanism. GCM Core is only useful for HTTP(S) remotes. Fixes #191",0
Merge pull request #244 from mjcheetham/libsecretfix,0.5039848,Allow use of older versions of libsecret such as in Ubuntu 18.04 (#244),Use down-level libsecret functions to get secret values,0
libsecret: use downlevel functions to get secrets,0.42466256,Allow use of older versions of libsecret such as in Ubuntu 18.04 (#244),"Replace our use of secret_value_unref_to_password which was only introduced in libsecret 0.19.0, with secret_value_get and a separate secret_value_unref call which is available in all versions. This will allow us to work on older distributions that may only include older versions of libsecret, specifically Ubuntu 18.04 LTS which includes libsecret 0.18. Version 0.20 of libsecret was only introduced from Ubuntu 19.04.",0
Merge pull request #243 from mjcheetham/noboxchars,0.37758538,More winget publishing fixes (#353),Remove use of box drawing characters in warning output,0
http: remove use of box drawing chars in warning output,0.7596149,Remove use of box drawing characters in warning output (#243),"Remove the use of box drawing characters in the warning output messages for TLS verification being disabled. Some systems (looking at you Windows) struggle with such characters. Replace them with simpler characters. Whilst we're at it, also remove box drawing characters from code comments. Even though these aren't a problem, let's just do it for consistency.",1
Detect github.my-company-server.com as GitHub,0.60803807,"- Allow overriding the selection of host provider; also supports GitHub Enterprise scenarios (configuration option, migration guide for users of the credential.authority setting) (#59)",,0
Merge pull request #236 from mjcheetham/githubpatmode,0.4313004,Improved usability for GitHub auth (#587),Add explicit PAT authentication mode for the GitHub Provider,0
authbase: quote cmdargs passed to helpers,0.37887612,- Fix TTY-based prompts for GitHub authentication (#30),Correctly quote and escape arguments passed to authentication helpers via the process arguments.,0
github: update Windows GitHub UI to add PAT support,0.71092606,"Add explicit PAT authentication mode for the GitHub Provider (#236, #259)","Update the WPF-based Windows GUI for GitHub authentication prompts to support the third authentication mode ""PAT"". Also make some changes to how the dialog window is sized to scale with the size of the content (mins and maxes included), which may now vary in the extreme from all three auth options, to just one.",1
github: add PAT authentication mode,0.91791564,"Add explicit PAT authentication mode for the GitHub Provider (#236, #259)","Add an authentication mode to the GitHub provider whereby a Personal Access Token can be returned directly, as generated by a user manually. Update the terminal-based UI menu to support the new PAT mode.",1
Merge pull request #234 from mjcheetham/fixconfigmatching,0.5077286,Release pipeline fixes #995 #1009 #1061,Match Git config in a mixed-sensitively way,0
stringcmp: add more tests to GitConfigKeyComparer,0.5683369,Use native Git path interpolation for config values (#439),"Add more tests to the GitConfigurationKeyComparer tests, specifically around cases that contain no period/dots '.'. In these cases we behave as StringComparer.Ordinal.",0
config: match Git config mixed-sensitively,0.76524746,Use native Git path interpolation for config values (#439),"Git configuration entry keys are neither case sensitive, nor in-sensitive. They are mixed sensitive. The section and property names are NOT sensitive, but the 'scope' or inner component of the full name IS sensitive. For example, credential.example.com.provider is the same as CREDENTIAL.example.com.PROVIDER, but credential.EXAMPLE.COM.provider is NOT. We introduce a new StringComparer type that performs insensitive comparison on the section and property components, and sensitive comparison on the scope component.",1
Merge pull request #233 from mjcheetham/credsuppress,0.39125293,Release pipeline fixes #995 #1009 #1061,Add suppressions for credscan false positives,0
credscan: add suppressions for credscan false positives,0.37026146,"Remove noisy messages during auto-detection (#492, #494)","Add the required source suppressions for false positive identification of credentials, raised by the internal CredScan tool. Most of the identified matches are fake credentials for unit tests. One match was the GitHub OAuth2 application client secret, which per issue #228 valid and an accepted & required 'secret' to be public.",0
Merge pull request #227 from AlexanderLanin/master,0.3925645,Improved usability for GitHub auth (#587),Refactor in order to simplify adding more tests,0
Remove dependency of GHES to gitub.com constant,0.64408803,"Auto-detect GHES instances that have a ""github."" URL prefix (#241)",Co-authored-by: Matthew John Cheetham mjcheetham@github.com,0
Refactor in order to simplify adding more tests: GetSupportedAuthenticationModes_WithMetadata,0.4224403,Reduce warnings from tests (#337),,0
Refactor in order to simplify adding more tests: GetSupportedAuthenticationModes,0.42891353,Reduce warnings from tests (#337),,0
Refactor in order to simplify adding more tests: GetCredentialServiceUrl,0.40502164,Reduce warnings from tests (#337),,0
Refactor in order to simplify adding more tests: IsSupported,0.59605604,Reduce warnings from tests (#337),,0
Create apt-get release pipeline (#221),0.54449236,Release pipeline fixes #995 #1009 #1061,Create a new Github workflow for deploying the .deb installer from a release to packages.microsoft.com,0
Merge pull request #224 from mjcheetham/fix-nbgv,0.47004956,Release pipeline fixes #995 #1009 #1061,Update GitVersioning package,0
build: update GitVersioning package,0.5133693,Transition from Nerdbank.GitVersioning to a version file (#1231),"Update the Nerdbank.GitVersioning package to the latest version (3.3.37) to consume a fix for the removal of the set-env command in GitHub Actions. Previous versions of GitVersioning use the set-env command to set the cloud build number. The new version uses ""environment files"" which is the replacement for set-env.",0
Merged PR 585338: Cut new release including security fix,0.5101615,Release pipeline fixes #995 #1009 #1061,Changes: Fix NTLM proxy authentication Fix reading empty Git configuration entry values Allow users to select the type of interactive authentication flow for the Microsoft auth stack,0
Merged PR 585167: [Security] Enumerate the PATH environment variable to locate programs on Windows,0.5007773,Updated to manually scanning $PATH instead of using which on POSIX systems (#717),"Enumerate the PATH environment variable to manually locate executables/programs rather than shell out to where.exe on Windows locate these for us. The where.exe utility first checks the current working directory before the PATH for the executable, which we do not want for various security reasons. The which utility on UNIX/POSIX systems does NOT include the current working directory in the search; only the PATH, which is exactly what we want - leave this in place on those platforms. Additionally for locating git(.exe) we first check in the GIT_EXEC_PATH directory for the executable, if that environment variable was set.",0
env: enumerate the PATH envar to locate programs on Windows,0.40418023,Fix app path name of Windows dropping file extension (#1181),"Enumerate the PATH environment variable to manually locate executables/programs rather than shell out to where.exe on Windows locate these for us. The where.exe utility first checks the current working directory before the PATH for the executable, which we do not want for various security reasons. The which utility on UNIX/POSIX systems does NOT include the current working directory in the search; only the PATH, which is exactly what we want - leave this in place on those platforms. Additionally for locating git(.exe) we first check in the GIT_EXEC_PATH directory for the executable, if that environment variable was set.",0
Merge pull request #217 from mjcheetham/ntlm-proxy-auth,0.6964979,Fix NTLM proxy authentication (#216),Treat empty credential proxy configuration as use system default credentials,0
http: treat empty cred proxy as system default creds,0.6216515,"Allow hostname-specific proxy override to use no proxy (#442, #449)","To enable using the default system credentials for authenticated proxies we must set the WebProxy.UseDefaultCredentials property to true. (For example, with Windows Integrated Authentication-based proxies - NTLM or Kerberos.) Currently we set this if no username and password information is specified at all in the proxy configuration. However, Git itself when presented with this configuration will prompt the user for a username/password (which isn't required). Specifying an empty string username/password in the proxy configuration will stop Git from prompting for them, and allow cURL to auto-negotiate proxy auth. However, GCM reads that same configuration as having a username/password based proxy with the empty string for both values. We change GCM to use the system default credentials when configuring a proxy if there is no userinfo OR if BOTH the username and password values are the empty string. Example proxy config value: link",0
Merge pull request #215 from mjcheetham/config-empty-fix,0.4993322,Fix bug in Git config matching due due case sensitivity (#234),Fix reading of empty string Git configuration values,0
config: fix reading of empty string Git config values,0.873083,Fix reading empty Git configuration entry values (#215),"Previously trying to read a single Git configuration setting that had the value of """" empty string resulted in returning false in our TryGet method. Move to using the null-terminating output from Git for easier parsing, just like we use for the other read-commands. The GetAll method didn't have this issue as it was already using --null.",1
Merge pull request #212 from mjcheetham/msauth-choice,0.5299805,Allow users to select the type of interactive authentication flow for the Microsoft auth stack (#210),Allow user to override which interactive authentication flow used for MS auth,0
azdev: use the localhost redirect URI for VS's client ID,0.39759895,"Enables support for multiple users for GitHub, Bitbucket, and Azure Repos (when using the *.visualstudio.com URLs) (#160)","Use the localhost redirect URI specified in the VS AAD application configuration. The localhost option allows us to use the system web view, whereas 'urn:ieft:wg:oauth:2.0:oob' does not.",0
msauth: allow user to select auth flow type,0.84555364,Allow users to select the type of interactive authentication flow for the Microsoft auth stack (#210),"Allow the user to override which Microsoft authentication flow to use when interaction is required. The options available are:  - embedded web view  - system web view  - device code Previously we always picked one of these flows (or used a native external helper) to use. In some instances it may be desirable for the user to force a particular flow, for instance to take advantage of browser sign-in state or OS integrations by using 'system'. If no option is set, or auto is selected the existing behaviour is preserved (we pick for the user).",1
Merge pull request #208 from microsoft/master,0.45405626,"Fix a bug with using Microsoft Accounts with Azure Repos (#143, #148)",Cut another release with fix to macOS publishing,0
Merge pull request #207 from mjcheetham/osx-realsign-fix,0.43903482,Release pipeline fixes #995 #1009 #1061,osx-sign: fix macOS release build sign/upload,0
osx-sign: fix macOS release build sign/upload,0.5230831,Fix build script error creating incorrect x64 packages for macOS (link),"Fix the macOS real-signed release build YAML files to also create the product archive (not just the component package), and upload and sign that instead.",0
Merge pull request #206 from microsoft/master,0.47121722,"Fix a bug with using Microsoft Accounts with Azure Repos (#143, #148)",Release GCM Core with various fixes and new Windows user-installer,0
Merge pull request #203 from mjcheetham/fixtypowin,0.46616787,Release pipeline fixes #995 #1009 #1061,"Make the system installer always append GCM Core entries, not outright set/replace existing values (and fix a typo)",0
Merge pull request #205 from mastercoms/patch-1,0.4814359,Release pipeline fixes #995 #1009 #1061,Fix missing space in username input,0
fix missing space in username input,0.34280074,"Stop echoing password on Linux in basic credentials prompt (#432, #436)",this caused the preceding argument to fail due to lack of separation between args,0
Merge pull request #204: Actions: use workflow_dispatch for manually running workflows,0.4366892,Target *-latest runner images in CI workflow (#1178),See [1] for more information. [1] link/,0
Actions: use workflow_dispatch for manually running workflows,0.32892323,Target *-latest runner images in CI workflow (#1178),See [1] for more information. [1] link/ Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
git: fix --get-all output parsing bug,0.6181222,Fix bug in Git config matching due due case sensitivity (#234),Since --null means that each config entry terminates with a null character ('\0') we are left with one extra entry in the array after splitting the string. This is NOT a real entry and we shouldn't return it from the method.,0
azrepos-cfg: only clear useHttpPath on Windows if no manager-core,0.3544798,"Allow hostname-specific proxy override to use no proxy (#442, #449)","Only clear the useHttpPath=true option on calls to unconfigure if the ""manager-core"" option is not present and we're in the system config on a Windows platform. This would be the case for the bundled GCM Core in Git for Windows, which we would break by removing this option.",0
git: better gitcfg error and trace messages,0.699432,Add Git configuration options for trace & debug (#1228),,0
configure: handle subsequent empty entries after GCM,0.5248968,Add ability to read GCM default settings from the Windows Registry (#404),"If we have empty helper entries after GCM, then we should attempt to reconfigure to put GCM back ""at the front"", since otherwise it's effectively being disabled by those subsequent empty entries.",0
git: drop the redundant 'Value' from Get/Set methods,0.58266085,Fix reading empty Git configuration entry values (#215),,0
git: add --get-all and --add Git config commands,0.5684579,Use native Git path interpolation for config values (#439),"Add the --get-all and --add Git configuration commands, and use them in place of --get-regexp and --replace-all where applicable.",0
configure: append GCMCore even in system case,0.6971876,"Set the full path to standalone GCM Core installs, enabling overriding of bundled versions (#188, #199)","Rather than set the helper to be only GCM Core in the system configuration when called with (un)configure --system, we do what we are already doing in the user-case. We only append an empty ("""") reset entry, and then the GCM full path entry. This means on uninstall of the standalone GCM (be that the system or user install), we restore the previous entry, always.",0
windows: fix a typo in the user windows installer,0.70861214,Fix Windows user-only installer configuration bug (#335),,1
Merge pull request #197 from mjcheetham/winstall-split,0.39332062,Release pipeline fixes #995 #1009 #1061,Split Windows installer in to user/system flavours,0
Merge pull request #201: Setup Microsoft ESRP Signing for .deb installer,0.49536198,Validate installers before publishing (#813),"This adds a new workflow build-installers.yml, where hopefully we can either migrate all installer builds in the future (or rename and split them across the platforms.) This workflow is heavily dependent on a lot of internal Microsoft infrastructure. What we have so far results in a GPG signed .deb for GCM-Core. This is currently uploaded as an artifact on the workflow itself but it not yet published. The 3rd and last build job yet to be added is using setting up yet another internal tool with the right security to use our internal publishing service. This does the signing, but does not actually publish the package to the Microsoft package feed. Replaces #170.",0
Merge pull request #202 from mjcheetham/osxinstall-fixwording,0.45919836,More winget publishing fixes (#353),Fix incorrect wording of installer welcome msg,0
osx: fix incorrect wording of installer welcome msg,0.4947947,Fix Windows user-only installer configuration bug (#335),Fix the incorrect wording of the macOS installer welcome screen. We do not configure different gitconfig files depending on the install mode - we always update the current user's gitconfig only.,0
Merge pull request #198 from mjcheetham/osx-installv2,0.4287538,Notarize the macOS installer and binaries to permit running on macOS Catalina 10.15 (#84),Update the Mac installer to make a product archive package/installer,0
Merge pull request #199 from mjcheetham/install-fix,0.57352173,Release pipeline fixes #995 #1009 #1061,Update the configure command to set the full path to GCM Core,0
windows: split Windows installer in to user/system,0.769122,Split the Windows installer into user- and system-wide 'flavours' (#197),"Split the Windows installer into two versions: a single-user installer, and a system-wide installer. The old installer installed in Program Files (x86) and set the system Git configuration, which is now what the system-flavoured installer does. The new single-user installer places files in %LOCALAPPDATA% and updates the ~/.gitconfig (global) user Git configuration instead. The benefit of the single-user installer is that it does not require an administrator to install it, and doesn't affect other users of the system.",1
configuration: update config cmd to set full path,0.49527732,Use native Git path interpolation for config values (#439),"Update the configure and unconfigure actions to now set the full file path to GCM Core, rather than rely on manager-core resolving to git-credential-manager-core on the PATH by Git. This was a problem because Git for Windows now bundles GCM Core, and even if a standalone install of GCM Core was present on the system with a higher version, since the bundled copy is found on the PATH before anything else, Git was always picking the old one. The change to using full paths helps fix this issue, and also another issue on macOS where sometimes the /usr/local/bin directory is not on the PATH (such as for the root user, or during a postinstall script for a flat-package [.pkg] file).",0
Release: build and sign Linux installers,0.5598712,Validate installers before publishing (#813),"This launches a job that downloads the ESRP signing tool client, then loads it with the necessary information for our signing abilities. Finally, it publishes our signed .deb to the build artifacts. Signed-off-by: Derrick Stolee dstolee@microsoft.com",0
Signing: add python script for Linux signing,0.4947577,Sign Linux tarball and .NET tool #985 ,The .github/run_esrp_signing.py script is executed on the signing machines. This mostly accumulates a set of JSON input files before running the ESRP signing tool that was securely downloaded. Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
.gitignore: ignore signing outputs,0.47474957,git: consistently read from stdout before exit wait (#1136),Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
Merge pull request #200: Just two tiny typos,0.4793847,Fix bug in Git config matching due due case sensitivity (#234),,0
Just two tiny typos,0.35643083,Various bug fixes:,,0
git: ensure that Git config quotes cmd args,0.7085452,Use native Git path interpolation for config values (#439),"Ensure that we are correclty quoting arguments to Git configuration commands. We must ensure double-quotes are escaped correclty, and also any runs of back-slashes ('\') are preserved UNLESS a double-quote ('""') follows.",1
osx: update the Mac installer to make product archives,0.4586867,Notarize the macOS installer and binaries to permit running on macOS Catalina 10.15 (#84),"Update the macOS installer build to also create a distribution/product archive package, that contains the flat component package we were already building. The product archive allows us to do things like set welcome and conclusion messages, titles, and display a license (like the Windows installers do). In the new welcome and conclusion screens we include helpful links and instructions on how to uninstall GCM Core, and how to configure it for other users on the system. The macOS installer continues to install in a global location, but only configure the user's global Git configuration.",0
Merge pull request #196 from mjcheetham/fix-wia,0.4780031,Release pipeline fixes #995 #1009 #1061,Fix bug where Allow Windows Integrated Authentication setting default wrong,0
wia: fix bug where Allow WIA setting default wrong,0.47942495,Fix a bug where Windows Integrated Authentication would be disabled by default (#194),"Fix a bug where the 'Allow Windows Integrated Authentication' setting was evaluating to false when unset, rather than true as per design and the documentation.",0
Merge pull request #195 from microsoft/gh-patdoc-update,0.4691878,Release pipeline fixes #995 #1009 #1061,Update GitHub auth change document PAT link,0
Update GitHub auth change document PAT link,0.65240914,"Add explicit PAT authentication mode for the GitHub Provider (#236, #259)","Update the GitHub auth change document PAT link to auto-select the repo, gist, and workflow scopes.",0
docs: add GitHub auth API deprecation docs,0.7157751,Add preliminary support for OAuth with GitHub AE (requires server support/changes) (#343),Add documentation regarding the upcoming removal of user/pass access to the authorizations API on GitHub. Outline how to upgrade to GCM Core from GCM4W to fix.,1
Merge pull request #187 from mjcheetham/winget,0.5532451,More winget publishing fixes (#353),winget: update winget pkg on release,0
winget: update winget pkg on release,0.545801,More winget publishing fixes (#353),Automatically create a new PR to update the winget package for GCM Core on release.,0
Update readme to say Linux support is in preview,0.6257699,Very early support for Linux (#135),,0
Merge pull request #185 from mjcheetham/docupdate,0.41102386,More winget publishing fixes (#353),Update readme and FAQs and drop preview wording,0
docs: update readme and FAQs; drop preview wording,0.56282127,Various documentation updates:,"Update the readme and FAQ documentation to include Linux preview support, and elevate macOS and Windows from ""preview"" to GA.",0
Merge pull request #184 from microsoft/master,0.47444788,"Fix a bug with using Microsoft Accounts with Azure Repos (#143, #148)",Cut new release to fix deadlock with large Git configs,0
Merge pull request #183 from dscho/avoid-deadlocks-when-reading-the-config,0.41628462,Fix reading empty Git configuration entry values (#215),gitconfig: avoid deadlock on large amounts of config data,0
gitconfig: avoid deadlock on large amounts of config data,0.55102277,Use native Git path interpolation for config values (#439),"As per the Remarks section in link we should first read the output until the end before waiting for the git config process to finish, to avoid deadlocks. This indeed helps in the situation of this developer whose config is so large that git config -l produces 25 kilobyte worth of output. Apparently, this fills up some buffer that seems to be around 8kB and then git config -l waits for its output to be consumed, and before this patch, the consumer (i.e. GCM Core) would wait for git config -l to exit already.",0
Merge pull request #179 from kyle-rader/user/kyrader/support-email,0.4202402,Release pipeline fixes #995 #1009 #1061,Linux build script updates,0
Update src/linux/Packaging.Linux/build.sh,0.5300373,Fix build script error creating incorrect x64 packages for macOS (link),Co-authored-by: Matthew John Cheetham mjcheetham@github.com,0
Merge pull request #181 from microsoft/master,0.44135797,"Fix a bug with using Microsoft Accounts with Azure Repos (#143, #148)",New release to fix Linux web browser launching,0
Merge pull request #180 from mjcheetham/fix-webopen,0.44376487,Release pipeline fixes #995 #1009 #1061,Disconnect standard output/error streams from xdg-open and friends,0
oauth: disconnect streams from xdg-open,0.4660549,Generic OAuth support via config 🎉 #1062,"When using the Process class to open the user's default browser on Linux, utilities like xdg-open are used. Some of these utilities do not disconnect child processes from our standard input/output/error streams. At the same time, browsers like Chromium like to write to stdout and stderr, which gets fed back to Git or the user's terminal, respectively. The latter looks messy, and the former causes Git to fail. On Linux, we instead manually locate a suitable 'shell execute' utility and launch them directly - this way we can redirect the standard output/error streams. For Windows and macOS, this is not an issue and we continue to use the Framework code to do 'shell execute'.",0
env: introduce TryLocateExecutable method,0.37320408,Drop -core suffix from entry executable #551 ,"Introduce a TryX method version of the existing LocateExecutable method on IEnvironment, for locating executables with which and where.exe.",0
Update support email and github url and run on pushes to release,0.49381077,Migrated release process from Azure DevOps to GitHub actions (#707),,0
Merge pull request #176 from microsoft/master,0.45275116,"Fix a bug with using Microsoft Accounts with Azure Repos (#143, #148)",Fix previous release (linux support) by adding config bug fix,0
Merge pull request #175 from mjcheetham/fix-config,0.549706,Fix bug in Git config matching due due case sensitivity (#234),Fix bug in Git configuration filtering logic,0
gitconfig: ensure config filter is passed down,0.65532285,Use native Git path interpolation for config values (#439),"Ensure the desired GitConfigurationLevel is passed to the GitConfiguration object so that the correct filter level can be selected. This is not so important for reading keys, but will fail when modifying keys since you need to specific which configuration level to edit. This bug resulted in calls to git-credential-manager-core unconfigure to fail. Add some tests of the config methods that modify values.",0
Merge pull request #173 from microsoft/master,0.445623,"Fix a bug with using Microsoft Accounts with Azure Repos (#143, #148)","Create new release including ""alpha"" Linux support",0
Merge pull request #174 from microsoft/linux-release-build,0.4850494,Release pipeline fixes #995 #1009 #1061,Add Linux Azure Pipelines release,0
linux: add Linux Azure Pipelines release,0.5963918,- Azure Repos,,0
Merge pull request #172 from mjcheetham/linux-credstores,0.3912872,Support git-credential-cache as a credential backing store on Linux (#287),Add a variety of credential stores on Linux,0
linux-credstore: extract credstore option constants,0.36136863,Use native Git path interpolation for config values (#439),Extract the Linux Credential Store option constant values.,0
docs: add docs for configuring Linux cred stores,0.45452037,Various documentation updates:,Add a document outlining the different credential stores available on Linux.,0
gpg-credstore: add GPG/pass based credential store,0.7355558,Allow users to specify path to GPG executable for gpg credential store on Linux (#406),"Add a pass compatible credential store that uses GPG to store encrypted credentials in files on disk. Defaults to the default pass password store, but can be overriden using standard pass envars.",1
"tests: introduce ""Posix"" and ""All"" PlatformFact support",0.4246653,Updated to manually scanning $PATH instead of using which on POSIX systems (#717),"Refactor the PlatformFact attribute to support a flags enum, such that compound platforms can be specified (e.g., Posix = Linux | Mac).",0
plaintext-credstore: add plaintext credstore,0.40709704,Create Linux plaintext store with safer directory permissions (#397),"Add a plaintext credential store option for Linux. Credentials are stored in plaintext files, by default in ~/.gcm/store, but configurable by settings/environment variables. Users can select between the Secret Service API and plaintext-based credential storage using the GCM_CREDENTIAL_STORE setting.",0
credstore: change contruction of existing credstores,0.27282533,Add option to use the new DPAPI-based credential store on Windows (#464),"Change how we construct the existing credential stores by simply new-ing them up, rather than calling a static Open method.",0
Merge pull request #171 from mjcheetham/gh-oauthonly,0.6582418,GHES OAuth support (#354),Remove username/password authentication for GitHub.com,0
"github: fix a typo in ""DotCom"" (- ""DotDom"")",0.5681735,Fix bug in Git config matching due due case sensitivity (#234),Fix a typo in a constant variable indicating the available authentication modes for GitHub.COM.,0
github: remove user/pass auth for GitHub.com,0.86871094,Remove username/password authentication for GitHub.com (#171),"Now that we have the GCM OAuth application in the allow-list for GitHub apps, we no longer need to offer username/password authentication for GitHub.com!",1
Merge pull request #162 from mjcheetham/newcred2,0.3860096,"- Codebase and build improvements (#29, #33)",Revamp credential storage system to allow for smarter searching,0
environment: fix environment process locator,0.45361927,Ensure we init IEnvironment before SessionManager (#1167),"Fix a bug in the WindowsEnvironment implementation of the LocateExectuable method. On .NET Core the UseShellExecute property of ProcessStartInfo defaults to false, whereas on .NET Framework (the runtime that we target on Windows) defaults to true. You must set this to false if you want to redirect standard streams (which we want to do). The .NET Framework-targeting build on Windows was throwing an exception here(!)",0
docs: update documentation to reflect changes,0.68273634,Various documentation updates:,Update the GCM Core Host Provider spec document and architecture document to reflect the changes made to the abstract HostProvider class; replacing GetCredentialKey with GetServiceName.,0
credstore: add support for custom cred namespaces,0.34810248,"Refactor namespace, assembly and project names (#500)","Add support for customising the namespace/prefix used to store credentials in the OS credential store. By default we use ""git:{service}"". Users can use GCM_NAMESPACE or credential.namespace to set this to something different. These configuration options are the same as in GCM for Windows to help with migration.",0
azrepos: workaround org@ user hackery,0.3880084,"Support ""SSO"" PATs for GitHub (#133, #134)","Now that we support multiple user accounts for each host/service/remote, we have hit an interesting issue with Azure Repos. With the introduction of the dev.azure.com-style URLs for Azure Repos there was an unfortunate hack or workaround invented to add the AzDevOps org name to the userinfo part of the remote URL, for example: org@dev.azure.com/org/blah. Since GCM for Windows (and older versions of GCM Core that initially followed the same model) always uses the value ""PersonalAccessToken"" for the username field when storing credentials it was free to ignore the user part of the input. The problem now is that since we support multiple user accounts, and will perform an exact match against the credential (with user) if a username is specified in the remote URL, we never find the credential we now store (we now always store with the actual, real users' UPN). To workaround this workaround (yuck) we ignore the username IF AND ONLY IF the host is dev.azure.com, and return the first matching dev.azure.com/org credential. The upshot of this is that dev.azure.com-style URLs do NOT support multiple users OR full paths, however vs.com-style URLs will.",0
azrepos: update azrepos to new credential model/APIs,0.4288541,Generic OAuth support via config 🎉 #1062,"Update the Azure Repos provider to support the new credential storage API/model, as well as support remote URLs with explicit port numbers.",0
github: update GitHub provider to impl new cred model,0.6620347,"Add explicit PAT authentication mode for the GitHub Provider (#236, #259)",Update the GitHub provider to implement and follow the new credential storage/recall/matching model and ICredentialStore APIs.,0
bitbucket: update BB provider to implement new cred APIs,0.59949565,"Bitbucket Server support (#140, #141)",Update the BitBucket provider to support and implement the new credential storage/recall model and APIs.,0
basic: update basic auth to match new cred interface,0.49082673,Generic OAuth support via config 🎉 #1062,Update the Basic authentication component to match the new ICredential interface.,0
genericprovider: update the generic provider for new APIs,0.65660006,Updated generic provider to support all protocols (#712),Update the generic host provider to support the new credential storage model and HostProvider base class APIs.,0
hostprovider: update host prvdr base to use service name,0.4620974,Fix a bug with host provider disposal (#272),Update the HostProvider base class to use the new 'service name' abstraction rather than the simple 'unique credential key' one. With this model we can better issue credential storage queries where the username may not be specified explicitly in a get request (often the case as the username is not always included in the remote URL for many services).,0
inputargs: update remote URI generation to support ports,0.6702579,Support ports in URL-scoped config (#825),"Update the remote URI generation from the program InputArguments to support port numbers, and special characters in usernames.",0
libsecret: update libsecret interop to match new interface,0.5440836,Allow use of older versions of libsecret such as in Ubuntu 18.04 (#244),Update the SecretServiceCollection credential store (backed by libsecret) to match the new ICredentialStore interface and access model.,0
wincredmgr: recover the correct service name,0.32432422,"Refactor namespace, assembly and project names (#500)","Recover the correct service name from the target name. Since the target name may contain a userinfo component (for example link), and the only place we store the service name is in the target name, we need to strip out any userinfo component. We do this by looking for the ""://"" and the first '@' character before the first '/', which act as the start and end of the userinfo component.",0
wincredmgr: update Windows CredManager to impl new interface,0.41186053,Add native basic credential UI prompts for Windows (#92),"Update the Windows Credential Manager component to implement the new ICredentialStore interface, including credential enumeration and matching by account/user as well as 'service name' (target).",0
macoskeychain: update macOS Keychain to match new interface,0.50839025,Better warning messages on macOS when there are Keychain issues (#305),"Update the macOS Keychain component implementation to match the new ICredentialStore interface. We now use the SecItemCopyMatching to perform a general query for items, and return a specialised credential object including all relevant attributes.",0
credstore: update credstore API to allow better search,0.30591106,Initial release of Git Credential Manager Core with beta support for...,"Update the ICredentialStore and ICredential API to allow for smarter searching of stored credentials. The new API exposes filtering by ""service name"" and ""account"" separately. Service name will typically be the URL the credential is stored against, and the account will be the username associated with the credential.",0
Merge pull request #164 from kyle-rader/user/kyrader/linux-installer,0.42345926,Validate installers before publishing (#813),Add a Linux .deb installer CI workflow,0
Merge pull request #166 from derrickstolee/actions-native,0.3780004,Codebase and build improvements (#49),CI: update configuration to build native bits,0
Only remove Payloud as Payload.Linux is built by the parent cs proj and we need that output.,0.32820144,Drop -core suffix from entry executable #551 ,,0
Clean up entire payload dir on build and publish deb and tar files.,0.49136817,Publish zip and tar balls of releases (#96),,0
CI: update configuration to build native bits,0.44074723,Use native Git path interpolation for config values (#439),"The build configuration ""Release"" only builds the managed portions of GCM Core. However, on macOS and Windows we have UI bits that are native to each platform. Update the --configuration build option to include these native bits by casing on the ""os"" variable in the matrix build. Signed-off-by: Derrick Stolee dstolee@microsoft.com",0
Merge pull request #163: Fix errors with 'git-credential-manager-core configure' with empty config,0.6676721,Update to Git Credential Manager Core (beta) on macOS.,"Resolves #161. The failures were due to subtleties when working without any credential.helper values in any level of config. This is typical for a fresh install on a Linux machine, but never happens with Git for Windows. Git on macOS might also come pre-loaded with this config.",0
build with inherit restore,0.38392466,"- Codebase and build improvements (#29, #33)",,0
Use force,0.21857022,@mastercoms,,0
Try also running tests,0.344704,Add new diagnose command to help debug problems in the wild (#463),,0
Copy steps from working ci pipeline,0.43913236,Target *-latest runner images in CI workflow (#1178),,0
Add pre build step,0.4103451,Speed up build graph (#924),,0
Build Linux.Payload specifically,0.43380296,Fix build script error creating incorrect x64 packages for macOS (link),,0
Add steps to create .deb package distro,0.5005666,Ensure Debian package is expected size and contains necessary files (link),,0
Simplify Linux build script into just build.sh,0.4885332,Fix build script error creating incorrect x64 packages for macOS (link),,0
Add explicit framework,0.37437785,Codebase and build improvements (#49),,0
Start a build-installers GH workflow,0.42605084,Validate installers before publishing (#813),,0
GitConfiguration: be careful about arguments and exit codes,0.5996512,Use native Git path interpolation for config values (#439),"When we re-set the configuration, we pass an empty value to clear the existing values. However, that only works if we quote around the empty value. Otherwise, Git does not ""see"" a value argument. If there is no configuration for a given key, the exit codes for 'git config' change. See the documentation [1] for full details. For now, be careful about exit codes 1 and 5, when appropriate. [1] link Signed-off-by: Derrick Stolee dstolee@microsoft.com",0
GitConfiguration: be careful about key-value pairs,0.67310655,Use native Git path interpolation for config values (#439),"For some situations, the key-value pairs we split from the response of 'git config' do not have two elements. Be careful to check the length before returning the value. If the length is not two, then this is an invalid key-value pair so skip that entry. Signed-off-by: Derrick Stolee dstolee@microsoft.com",0
SettingsTests: drop unused variables,0.4135061,Reduce warnings from tests (#337),Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
Merge pull request #159 from microsoft/linux,0.44595316,Align with dotnet-supported Linux distributions (link),Add initial Ubuntu & Secret Service support,0
Merge pull request #158: Fix some typos/errors in documentation,0.56867284,Various documentation updates:,,0
Merge pull request #157: GitHub Actions Workflow,0.5860836,Migrated release process from Azure DevOps to GitHub actions (#707),"Starting the creation of a Github Actions CI workflow, specifically including Linux.",0
"Use short workflow name so each job renders full name as ""GCM-Core / CI""",0.46483788,"Set the full path to standalone GCM Core installs, enabling overriding of bundled versions (#188, #199)",,0
Use shorter name so you can see os versions in Actions UI,0.3836696,Simplified build number included in artifact names (#638),,0
Spacing and use explicit ubuntu 20.04 version,0.32122028,Ensure correct installation directory resolution for all OSes and distribution methods (link),,0
Attempt using os matrix,0.402811,Operating Systems:,,0
Use with: for args to actions,0.18719423,Use System.CommandLine to handle our command line parsing and allow host providers to offer custom commands (#273),,0
Add fetch-depth: 0 so that Github actions clones with full history so the versioning task works,0.52926403,Migrated release process from Azure DevOps to GitHub actions (#707),,0
Copy in default dotnet core workflow template steps,0.38599175,Target *-latest runner images in CI workflow (#1178),,0
add '- name' for steps,0.33691174,Simplified build number included in artifact names (#638),,0
Fix typos in documentation,0.4846428,Various documentation updates:,,0
Add linux branch and spacing,0.3164409,Add support for using WSL Git configuration (#461),,0
Start ci actions yaml,0.39658612,Convert issue templates to YAML (link),,0
Merge pull request #153: Use OAuth by default on GitHub,0.7568773,Add preliminary support for OAuth with GitHub AE (requires server support/changes) (#343),Make OAuth the default authentication mechanism for GitHub provider,1
Merge pull request #155: FAQ minor writing fix,0.4809324,More winget publishing fixes (#353),,0
FAQ minor writing fix,0.3719682,More winget publishing fixes (#353),,0
github: replace link with button for OAuth login,0.6041746,Fix bug in GitHub x-platform UI where the browser/OAuth option is not shown (#360),"Replace the ""login using browser"" link with a button on the Windows GitHub login dialog.",0
github: move OAuth option to top of Windows dialog,0.64680934,Fix bug in GitHub x-platform UI where the browser/OAuth option is not shown (#360),Move the OAuth/login with browser option to the top of the Windows GitHub login dialog when both user/pass and OAuth options are available.,0
github: make OAuth the default auth mode,0.7025652,"Add explicit PAT authentication mode for the GitHub Provider (#236, #259)",Make OAuth the default authentication mode.,1
Merge pull request #152 from mjcheetham/homebrew-auto,0.53696966,Discontinued incorrect use of Homebrew Git shim (#731),Automatically update Homebrew Cask on release,0
homebrew: automatically update Homebrew Cask on release,0.4439417,Support macOS arm64 installs via Homebrew (#798) ,"On release, automatically update the Homebrew Cask in the microsoft/git Tap.",0
Merge pull request #150 from mjcheetham/fixworkflows,0.47812247,Release pipeline fixes #995 #1009 #1061,Fix workflows and builds,0
actions/workflows: fix workflows and builds,0.44904187,Release pipeline fixes #995 #1009 #1061,"Ensure the PR build is triggered on PRs into master or release. Also now that we're making real releases of GCM Core on GitHub and not just pre-releases, move to the simpler syntax/API calls for the Action that creates and updated the Homebrew cask on release publish.",0
Merge pull request #149 from microsoft/master,0.4515101,"Fix a bug with using Microsoft Accounts with Azure Repos (#143, #148)",Cut a new release,0
Merge pull request #147 from mjcheetham/github-oauthdevice,0.6457604,Add preliminary support for OAuth with GitHub AE (requires server support/changes) (#343),Enable OAuth device authorisation grant support for GitHub,0
github: enable OAuth2 device code flow for GitHub,0.8605871,OAuth Device Authorization Grant support for GitHub (#147),Enable the device code authorization grant flow for GitHub.,1
github: use final OAuth device code endpoint,0.7693527,OAuth Device Authorization Grant support for GitHub (#147),Use the final OAuth2 device authorization endpoint URI.,1
Merge pull request #148 from mjcheetham/msafix,0.40989316,Release pipeline fixes #995 #1009 #1061,Fix Azure Repos sign-in with Microsoft Accounts,0
azrepos: use organizations authority for MSA accounts,0.48242906,- Support AAD users as guest users in MSA-based Azure DevOps organizations (#32),"Use the /organizations authority for MSA accounts with Azure DevOps/Repos. This is because we're using MSA pass-through, an internal Microsoft mechanism to support both MSA and 'work' (AAD) accounts with the same auth stacks. You should be able to use /common, but this doesn't work. At the same time we're using ADAL Obj-C on macOS rather than MSAL.NET like we do on Windows, and ADAL speaks to the ""v1"" AAD endpoints, which don't know the /organizations tenant :( For macOS we need to fudge the authority back to /common for MSA accounts.",0
Merge pull request #146: FAQ: typo fix,0.456829,Fix bug in Git config matching due due case sensitivity (#234),A fix for a typo that I noticed in the FAQ 🙂,0
FAQ: typo fix,0.35355395,- Various bug fixes and improvements,,0
libsecret/secretservice: rename libsecret -> secretservice,0.5310995,Allow use of older versions of libsecret such as in Ubuntu 18.04 (#244),Rename the LibsecretCollection type to SecretService API to more accurately reflect the API we're using.,0
tests: skip Libsecret tests that require a GUI,0.37109536,Reduce warnings from tests (#337),,0
linux: add stub CredStore to select the best cred store API,0.39601457,Support git-credential-cache as a credential backing store on Linux (#287),Introduce a credential store for Linux that passes through to a backing store that is selected based on user preference and session features. Currently this is a stub that just uses LibsecretCollection (which only works in a GUI environment).,0
tests: run libsecret tests,0.49300486,Allow use of older versions of libsecret such as in Ubuntu 18.04 (#244),,0
linux: rewrite libsecret/glib interop,0.46500587,Allow use of older versions of libsecret such as in Ubuntu 18.04 (#244),Rewrite the libsecret and glib interop code for the Linux ICredentialStore implementation to be more thorough.,0
linux: add x86_64 Linux build (Ubuntu 18.04),0.5040127,Support macOS arm64 installs via Homebrew (#798) ,Extend the PR and CI build to produce a tarball of binaries for Linux x86_64 platforms; building on Ubuntu 18.04 LTS. The release build does not publish anything currently as we need to get signing working.,0
versioning: update Nerdbank.GitVersioning to latest,0.8315328,Transition from Nerdbank.GitVersioning to a version file (#1231),Update the Nerdbank.GitVersioning package to the latest to fix a bug where the package would fail to execute due to libgit2 dependency issues.,1
linux: add libsecret based ICredentialStore for Linux,0.42411378,Allow use of older versions of libsecret such as in Ubuntu 18.04 (#244),Implement a credential store for Linux platforms that use the libsecret Secret Service API.,0
linux: implement stub Linux ISystemPrompts component,0.3534782,trace2: guard against null pipe client in dispose (#1135),Implement a stub ISystemPrompts component that just throws. The component is currently not used on any platform that's not Windows anyway so this won't be hit.,0
linux: use PosixSessionManager on Linux,0.3315353,Ensure we start child processes created with ProcessManager (#1177),,0
linux: add IFileSystem impl for Linux,0.30004093,"Fix problems with resolving the executable file path on Linux (#298, #229, #252)",Add an implementation of the IFileSystem component for Linux distributions. We just simply assume that all file systems are case-sensitive at the moment. Also introduce a (empty) PosixFileSystem class shared between macOS and Linux.,0
libgit2: remove libgit2 references,0.656191,Fix a bug with handling libgit2 errors (#111),,0
install: update usage of Git config,0.67192966,Use native Git path interpolation for config values (#439),Update the use of the Git configuration components in the configuration service and configurable components; used to set up a system during install.,0
git: implement IGit/Config using the Git CLI,0.6731611,Use native Git path interpolation for config values (#439),"Implement IGit and IGitConfiguration components using the Git CLI executable, rather than libgit2.",0
which: add ability to locate executables via which,0.5226507,Updated to manually scanning $PATH instead of using which on POSIX systems (#717),"Add ability to locate executables on the current PATH by shelling out to which on UNIX platforms, and where.exe on Windows.",0
git: split out IGit and IGitConfiguration files,0.61264545,Use native Git path interpolation for config values (#439),Split out the IGit and IGitConfiguration interfaces and extension methods in to their own files.,0
Merge pull request #141 from itofinity/issue/support-bbs-basicauth,0.43635687,Bitbucket DC OAuth support (#607),Update support for Bitbucket Server,0
Fix PR suggestion typo,0.39539152,"Fix winget publishing (#332, #338)",,0
Provide a name with more context.,0.31212205,@garvit-joshi ,Co-authored-by: Matthew John Cheetham mjcheetham@github.com,0
Correct spacing,0.23110048,"Fix several UI bugs (#1238, #1241)",Co-authored-by: Matthew John Cheetham mjcheetham@github.com,0
Make the HTTP/S error message more specific.,0.50276685,"Respect http.sslCAInfo settings (#242, #411)",Co-authored-by: Matthew John Cheetham mjcheetham@github.com,0
Bitbucket Server Support: Fix storing of Bitbucker Server credentials. Save with and without usernames since BbS doesn't generally include them in its Git URLs,0.7174821,Updated Bitbucket credential UI to show the URL of the Bitbucket Server or Data Center instance if applicable (#713),,1
"Bitbucket Server Support: Added ability to set 'bitbucket' as the provier for an arbitrary host, i.e. a Bitbucket Server host",0.7458157,Updated Bitbucket credential UI to show the URL of the Bitbucket Server or Data Center instance if applicable (#713),Allow HTTP as well as HTTPS for Bitbucket Server hosts TODO test more complex URLs e.g. link,1
Merge pull request #139 from mjcheetham/svg,0.41289967,More winget publishing fixes (#353),Add SVG version of GCM logo,0
assets: add SVG version of GCM logo,0.37867394,Distribute GCM as a dotnet tool (#886),,0
Merge pull request #138 from mjcheetham/provider-spec,0.49125174,Updated generic provider to support all protocols (#712),Add host provider specification,0
docs: update readme,0.7020804,Various documentation updates:,,1
provider-spec: use one abbrev for GCMW/ML,0.45269862,docs: call out different GCM install paths in WSL docs (#1168),,0
provider-spec: add host provider specification,0.5851023,"Improve host provider auto-detection logic (#384, #481)",,0
Merge pull request #137 from mjcheetham/devguide,0.4536599,readme: add link to project roadmap (#1204),Add Architecture overview document to help developers,0
docs: wrap body text to 80 columns,0.3144305,Unify documentation line length (#862),,0
docs: address architecture doc feedback,0.47764933,Various documentation updates:,,0
docs: add Architecture overview,0.46275938,readme: add link to project roadmap (#1204),Add a document outlining the architecture of GCM Core.,0
Merge pull request #134 from mjcheetham/github-samlsso,0.4099213,Add support for using WSL Git configuration (#461),github: store the PAT on 'get' request for SAML SSO,0
github: store the PAT on 'get' request for SAML SSO,0.7095122,"Support ""SSO"" PATs for GitHub (#133, #134)","In order to allow a user that requires SAML SSO to be manually enabled on their newly generated PATs to access org repos, we must store the PAT as soon as we generate it. This then allows the user the ability to visit the web UI, enable SSO, and then repeat their Git operation using the same PAT. Workaround for issue: #133",1
Merge pull request #132 from microsoft/master,0.45914558,"Fix a bug with using Microsoft Accounts with Azure Repos (#143, #148)",Cut release fixing Bitbucket bug and 32-bit Windows support,0
Merge pull request #131 from mjcheetham/win-x86,0.45721138,Target 32-bit on Windows (#112),windows: compile to 32-bit x86 only,0
windows: compile to 32-bit x86 only,0.67339796,Target 32-bit on Windows (#112),"Since we want to ship with Git for Windows which offers both an x86 and x86_64 option, we should build an x86 (32-bit) application rather than an x86_64 (64-bit) one. Since 32-bit applications can run on 64-bit versions of Windows (including Windows on ARM) this is the more compatible target. We could also publish both a 32- and 64-bit build of GCM Core on Windows but this seems redundant as GCM Core really does not need 64-bits of addressable memory(!)",0
Merge pull request #127 from mjcheetham/fix-homebrew,0.5533619,Discontinued incorrect use of Homebrew Git shim (#731),homebrew: fix automatic Homebrew update,0
homebrew: fix automatic Homebrew update,0.51282585,Discontinued incorrect use of Homebrew Git shim (#731),The Octokit API does not find releases by tag when they are prerelease (like all the beta releases of GCM Core are). Instead enumerate the list of releases and manually filter to the matching tag name instead.,0
Merge pull request #126 from kzu/master,0.38613415,Release pipeline fixes #995 #1009 #1061,Don't attempt to deserialize nulls from bitbucket response,0
Don't attempt to deserialize nulls from bitbucket response,0.61214304,"Fix a bug in parsing Bitbucket 2FA responses (#128, #126)","In my case, the field has_2fa_enabled was coming back null and that caused deserialization to fail with: Error converting value {null} to type 'System.Boolean'. Path 'has_2fa_enabled', line 1, position 79. Another alternative is to make the property bool? instead.",0
Merge pull request #125 from microsoft/master,0.46326202,"Fix a bug with using Microsoft Accounts with Azure Repos (#143, #148)",Cut another release to fix the bug in 2.0.153,0
Merge pull request #124 from mjcheetham/fix-winuiflag,0.4781465,"Fix several UI bugs (#1238, #1241)",windows-ui: fix inverted user interactive check,0
windows-ui: fix inverted user interactive check,0.5354976,Fix bug where GUI prompts would not be shown on Windows (#374),The code that was copied from the .NET runtime code (dotnet/runtime) had a bug in it that inverted the check for the WSF_VISIBLE flag! Updated the code to match their now fixed version.,0
Merge pull request #122 from microsoft/fix-release-workflow,0.59546673,Release pipeline fixes #995 #1009 #1061,release: add required token to release workflow,0
release: add required token to release workflow,0.4493727,docs: add bitbucket app password requirements (#1213),Add the required GITHUB_TOKEN token to the release workflow.,0
Merge pull request #121 from microsoft/master,0.46201172,"Fix a bug with using Microsoft Accounts with Azure Repos (#143, #148)",Cut new release with Bitbucket provider,0
Merge pull request #116 from mjcheetham/bbui,0.41378352,"- Codebase and build improvements (#29, #33)",Add Bitbucket Windows UI project,0
bitbucket-ui: add Bitbucket Windows UI,0.77628124,Introduce the Bitbucket host provider with Windows GUI (#37),"Add a port of the Bitbucket UI from the old GCM for Windows, and update the UI to git with the new refreshed design.",1
bitbucket-ui: add stub UI project,0.57481414,Updated Bitbucket UI to separate OAuth and username/password options (#754),,0
winui: make SecurePasswordBox notify all changes,0.4374984,Add native basic credential UI prompts for Windows (#92),"Update the SecurePasswordBox control to notify all listeners of changes to the password value. Previously we only notified on the first character typed into the box. We clone the current password, modify it, and then replace the previous instance (triggering an INotifyPropertyChanged::PropertyChanged event). With a binding delay, we will batch updates of multiple keystrokes rather than one at a time.",0
winui: add shared validation helpers,0.45768923,"Return non-zero code for UI helpers on error (#440, #441)","Add property and model validation helpers, which will be used by Bitbucket's Windows UI helper in subsequent commits.",0
Merge pull request #115 from mjcheetham/extract-winui,0.42270428,"Add GitHub OAuth support and refreshed Windows UI (#101, #103)",Extract various shared WPF components into a separate project,0
winui: extract common DialogWindow to shared project,0.44999546,Make Avalonia UI the default Windows and move to in-process (#1207),Extract the GitHubDialogWindow into a shared control that can be used by multiple consumers. Also simplify the IGui interface and optimise creating a DialogWindow window with a control.,0
winui: extract parent window handling,0.59497386,Pass parent window handle information to MSAL (#306),Extract logic display a model window that is correctly parented to the GCM_MODAL_PARENTHWND window handle.,0
winui: extract cmdline util methods,0.45319924,Add ability to read GCM default settings from the Windows Registry (#404),Extract shared command line parsing methods used in Windows UI helpers.,0
winui: extract shared WPF UI into project,0.5190217,WPF-based GitHub auth UI (#40),Extract common/shared WPF UI into its own project to be consumed by the various UI helpers (GitHub.UI currently).,0
Merge pull request #114 from mjcheetham/github-actions,0.4636202,Migrated release process from Azure DevOps to GitHub actions (#707),homebrew: publish new package version on release,0
homebrew: publish new package version on release,0.413323,Publish zip and tar balls of releases (#96),Publish a new Homebrew Cask version on release via a GitHub action.,0
Merge pull request #95 from mjcheetham/fix-desktopcheck,0.48935992,Release pipeline fixes #995 #1009 #1061,Correctly check for GUI on Win/Mac/POSIX,0
ui: correctly check for GUI on Win/Mac/POSIX,0.61541426,Correctly detect a UI interactive session on all platforms (#95),Replace the PlatformUtils.IsDesktopSession util method with platform specific components that check use native APIs to determine the state of the current session. Environment.UserInteractive is hard-coded to return true for POSIX and Windows platforms on .NET Core 2.x and 3.x. link The .NET 5 implementation (not yet released) fixes this for the Windows platform only. We take a copy of that implementation for Windows. On macOS we use the SessionGetInfo from the Security.framework. On POSIX in general we also check for the X11 $DISPLAY environment variable.,0
Merge pull request #120 from mjcheetham/helperconfig,0.43785122,Fix bug in Git config matching due due case sensitivity (#234),helpers: allow auth helpers to be overridden by config,0
helpers: allow auth helpers to be overriden by config,0.5506769,Generic OAuth support via config 🎉 #1062,Allow authentication UI helpers to be overriden by environment variables and Git configuration options.,0
Merge pull request #118 from mjcheetham/doc-update,0.4123418,Release pipeline fixes #995 #1009 #1061,Update our out-of-date documentation,0
"docs: update README, FAQs, and build docs",0.68694484,Various documentation updates:,"Update our readme, FAQs documents, and actually put something in our build/debug docs!",0
Merge pull request #117 from mjcheetham/fix-bb,0.45498618,Release pipeline fixes #995 #1009 #1061,Ensure we ship the Bitbucket DLL on Windows,0
bitbucket: ensure we ship the Bitbucket DLL,0.6027136,"Bitbucket Server support (#140, #141)",Ensure we actually ship the Bitbucket host provider DLL!,0
Merge pull request #111 from mjcheetham/fix-lg2error,0.488123,Release pipeline fixes #995 #1009 #1061,Fix error message handling for LibGit2,0
libgit2: fix error message handling,0.8804366,Fix a bug with handling libgit2 errors (#111),Fix the reversed LibGit2 error message handling when no function-name was specified.,1
Merge pull request #104 from mjcheetham/bb-oauth,0.5629481,Add preliminary support for OAuth with GitHub AE (requires server support/changes) (#343),Add Bitbucket support (text prompts only),0
bitbucket: use Sourcetree's client ID and secret,0.6411962,docs: add bitbucket app password requirements (#1213),"Until we have the GCM OAuth application ready in Bitbucket, continue to use Sourcetree's client ID and secret as GCM Windows does.",0
bitbucket: allow OAuth params to be overridden at runtime,0.7918099,Updated Bitbucket UI to separate OAuth and username/password options (#754),"Allow the OAuth client ID, secret, and redirect URI to be overridden at runtime using environment variables or config.",1
bitbucket: add Bitbucket authentication provider,0.78270036,"Allow forcing OAuth authentication with Bitbucket host provider (#329, #401)","Add a Bitbucket authentication provider using OAuth2, with TTY-based interface only.",1
Merge pull request #110 from microsoft/release,0.5303614,Release pipeline fixes #995 #1009 #1061,Merge release branch changes back into master,0
Merge branch 'master' into release,0.37308633,Migrated release process from Azure DevOps to GitHub actions (#707),,0
Merge pull request #109 from microsoft/fix-rel,0.48010278,Release pipeline fixes #995 #1009 #1061,Fix bugs in release pipeline,0
github: make user/pass the default auth mode over TTY,0.7836436,- Fix TTY-based prompts for GitHub authentication (#30),Make username/password authentication the default mode when presented with the options over the TTY. This is because we still don't have a whitelisted OAuth application and any OAuth tokens will have restrictions when used for org-owned repos.,1
packaging: fix macOS pack job use of \ vs / file seps,0.4840024,Fix build script error creating incorrect x64 packages for macOS (link),Use the correct file path separator for the macOS packaging step,0
build: fix Windows packaging tool install step,0.5544895,Fix Windows user-only installer configuration bug (#335),"Fix the step where we install the nbgv tool on Windows. Looks like the build agents are not being cleaned and the --global install of the nbgv tool from previous runs is peristed and subsequent runs of that step fail due to ""already being installed"".",0
notarization: skip notarization step until fix in place,0.3560037,Notarize the macOS installer and binaries to permit running on macOS Catalina 10.15 (#84),"Skip notarization step until a fix is in place for #108. Notarization fails on macOS because during code signing with MicroBuild we are losing the ""Hardened Runtime"" flag, and the .NET Core runtime Mach-O binaries are not code signed.",0
github: fix 2FA code capture,0.62886375,"Fix a bug in parsing Bitbucket 2FA responses (#128, #126)",The GitHub 2FA code prompt was always reporting 'closed' rather than accepted!,0
signing: fix signing,0.47942942,Sign Linux tarball and .NET tool #985 ,Revert to the old MSBuild/NuGet tools for signed builds because the Microbuild signing tasks only work with these and not the dotnet tooling.,0
Merge pull request #107 from mjcheetham/add-banner,0.35907334,More winget publishing fixes (#353),Add GitHub banner image,0
Merge pull request #105 from microsoft/master,0.46311805,"Fix a bug with using Microsoft Accounts with Azure Repos (#143, #148)",Cut new release,0
assets: add GitHub banner image,0.43581614,"Add explicit PAT authentication mode for the GitHub Provider (#236, #259)",,0
Merge pull request #106 from mjcheetham/fix-winbuild,0.5178955,Release pipeline fixes #995 #1009 #1061,Workaround Azure Pipelines build bug,0
build: workaround Azure Pipelines build bug,0.5022282,Release pipeline fixes #995 #1009 #1061,"For some reason our Azure Pipelines builds are failing (occasionally) to restore packages unless we explicitly run a dotnet restore before our dotnet build. The Azure Pipelines team are still not sure why this is failing, or why it only happens one some of the hosted agents and not others (despite compiling the same commit)!",0
Merge pull request #103 from mjcheetham/gh-oauthenv,0.5467416,GHES OAuth support (#354),Allow GitHub OAuth params to be overridden at runtime,0
github: allow OAuth params to be overridden at runtime,0.6634288,Add preliminary support for OAuth with GitHub AE (requires server support/changes) (#343),"Allow the OAuth client ID, secret, and redirect URI to be overridden at runtime using environment variables or config.",0
Merge pull request #102 from mjcheetham/oauth2-pkce,0.6737695,"Add an OAuth2 client implementation with PKCE support (#99, #102)",Implement RFC 7636 PKCE in OAuth client and fix redirect URI bug,0
oauth: ensure auth grant redirect URI matches token req,0.5558712,Generic OAuth support via config 🎉 #1062,,0
oauth: implement RFC 7636 PKCE in OAuth client,0.8227566,"Add an OAuth2 client implementation with PKCE support (#99, #102)",Implement the Proof Key for Code Exchange (RFC 7636) specification in the OAuth2 client.,1
Merge pull request #101 from mjcheetham/github-oauth-ui,0.6374622,Add preliminary support for OAuth with GitHub AE (requires server support/changes) (#343),Support OAuth based authentication on GitHub; include a UI refresh,0
build: ignore Windows projects in Mac sln configs,0.45262903,Fix build script error creating incorrect x64 packages for macOS (link),,0
netcore: upgrade to .NET Core 3.1,0.8624391,Move to .NET Core 3.1 (LTS) (#101),Upgrade our .NET Core components from 2.1 to 3.1 (LTS).,1
build: use latest .NET Core SDK 3.1.201 to build,0.7687506,Move to .NET Core 3.1 (LTS) (#101),"Use the latest .NET Core 3.1.x SDK to build since we are using the new WindowsDesktop project SDK. We are not targeting .NET Core 3.1 yet, but need the newer toolchain.",1
github-ui: use new GitHub UI on Windows,0.67377096,"Add GitHub OAuth support and refreshed Windows UI (#101, #103)",Use a refreshed WPF-based UI on Windows for GitHub authentication. Supports selecting OAuth/browser authentication and also displays the URL of a GitHub Enterprise instance if authentication to one.,0
github: use OAuth2/web flow for GitHub,0.6820567,Add preliminary support for OAuth with GitHub AE (requires server support/changes) (#343),Add an OAuth2 web browser-based authentication flow to replace the username & password flow for GitHub.com and augment the u/p flow for GHE instances.,0
settings: pull generic 'get' methods up to interface,0.38093036,Updated generic provider to support all protocols (#712),Pull the general TryGetSetting and GetSettingValues methods up from the Settings class to the ISettings interface for all providers to use for their own settings.,0
terminal: add a simple TTY-based menu system,0.3387177,"- Show the terminal/TTY based prompts when there is no desktop/GUI sessions present for GitHub (#453, #538)",Add a simple menu system that works over the TTY. This is useful for presenting a selection of authentication options to the user when no UI is available.,0
Merge pull request #99 from mjcheetham/oauth2,0.59359276,Add preliminary support for OAuth with GitHub AE (requires server support/changes) (#343),Add an OAuth2 client implementation,0
oauth: add unit tests for OAuth2Client,0.5716561,"Add an OAuth2 client implementation with PKCE support (#99, #102)",,0
oauth: add an OAuth2 client implementation,0.8004565,"Add an OAuth2 client implementation with PKCE support (#99, #102)","Add an OAuth2 client implementation that supports the authorization code grant, and the device authorization grant (device code) flows.",1
build: update macOS build images,0.546181,Fix build script error creating incorrect x64 packages for macOS (link),,0
Merge pull request #94 from mjcheetham/debug-trace,0.4957381,Release pipeline fixes #995 #1009 #1061,Add debug trace listener when debugger is attached,0
Add debug trace listener when debugger is attached,0.8294405,Automatically trace to the debugger when attached (#94),"When a debugger is attached, automatically add a listener that will output to the debug console.",1
Merge pull request #92 from mjcheetham/basic-nativeui,0.4031818,"Fix several UI bugs (#1238, #1241)",Add ISystemPrompts component and impl for Windows,0
Set parent window handle based on GCM_MODAL_PARENTHWD,0.61987525,Pass parent window handle information to MSAL (#306),Wire up the parent window handle to system prompts and UI helpers.,0
Add ISystemPrompts component and impl for Windows,0.5426627,Ensure we create a WindowsProcessManager on Windows (#1146),"Introduce the ISystemPrompts component which provides native/system UI prompts, starting with basic credential prompts. Include a basic implementation for Windows.",0
Merge pull request #96 from microsoft/zippy,0.40989858,Publish zip and tar balls of releases (#96),Create and publish zip & tar.gz archives of app and symbols,0
Create and publish zip & tar.gz archives of app and symbols,0.6661087,Publish zip and tar balls of releases (#96),"Create and publish ZIP and TAR archives on Windows and Mac containing the GCM Core app binaries, and symbols.",0
Merge pull request #91 from mjcheetham/nointeractive,0.36904246,Release pipeline fixes #995 #1009 #1061,Add GCM_INTERACTIVE/credential.interactive setting,0
Add GCM_INTERACTIVE/credential.interactive setting,0.59659487,Add ability to read GCM default settings from the Windows Registry (#404),"Add a setting to disable all user interaction. By setting GCM_INTERACTIVE or credential.interactive to a 'falsey' value, GCM Core will now fail and return an error if user interaction is required. This is useful in headless and unattended environments, such as build servers, where is is preferable to fail than it is to hang waiting for input from a non-existent user. The setting also existed in the previous GCM for Windows, but its behaviour has been slightly modified to treat 'always' values as 'auto'. See more in the documentation and the code. The default value is true / permit interaction.",0
Merge pull request #87 from microsoft/release,0.5270432,Release pipeline fixes #995 #1009 #1061,Sync master branch with missing commits from release branch,0
Merge pull request #89 from microsoft/fixrelease,0.5449989,Release pipeline fixes #995 #1009 #1061,Fix up release build problems,0
Use correct path sep. for macOS notarize step,0.51870835,Notarize the macOS installer and binaries to permit running on macOS Catalina 10.15 (#84),Use the correct path separator in the macOS build YAML for notarizing the installer pkg file and containing binaries.,0
Merge pull request #88 from mjcheetham/release-prep,0.553041,Release pipeline fixes #995 #1009 #1061,Prepare release,0
Merge branch 'release' into release-prep,0.46565667,Migrated release process from Azure DevOps to GitHub actions (#707),,0
Merge pull request #85 from mjcheetham/notarize,0.39864454,Improved usability for GitHub auth (#587),Notarize and staple the installer pkg on macOS,0
Notarize and staple the installer pkg on macOS,0.62509775,Notarize the macOS installer and binaries to permit running on macOS Catalina 10.15 (#84),Enable installation and executable on macOS Catalina (10.15) now that Gate Keeper requires notarization. We staple the notarization ticket to the package too to allow for offline installs.,0
Merge pull request #83 from mjcheetham/fix-copypaste,0.44516686,More winget publishing fixes (#353),Enable copy/paste/cut in macOS MSAuth web view,0
Do not fail pipeline if optional tests fail,0.45891723,Reduce warnings from tests (#337),"The VSTest task now fails if no assemblies match the test filter. Since we don't have any Windows-only test assemblies currently, we can just continue on error for this task.",0
Enable copy/paste/cut in macOS MSAuth web view,0.87407327,Enable copy/paste/cut etc on fields in the Microsoft authentication WebView on MacOS (#82),"Add a basic application main menu bar, with 'Edit' submenu containing the standard text manipulation commands (cut, copy, paste, select all, delete) to enable these actions in the authentication webview. This is useful for users who use password managers and need to paste into the webview.",1
Merge pull request #80 from mjcheetham/port-winsignfix,0.37549034,Release pipeline fixes #995 #1009 #1061,[Port] Fix real-sign Windows build to actually sign,0
Fix real-sign Windows build to actually sign,0.5071187,Sign Linux tarball and .NET tool #985 ,Ensure the Signing MicroBuild plugin has been installed when doing a real-signed Windows build.,0
Merge pull request #79 from mjcheetham/fix-signwindows,0.4577295,Release pipeline fixes #995 #1009 #1061,Fix real-sign Windows build to actually sign,0
Merge pull request #78 from microsoft/master,0.4499629,"Fix a bug with using Microsoft Accounts with Azure Repos (#143, #148)","Prepare release with proxy support, Windows preview, inproc MS Auth",0
Merge pull request #67 from mjcheetham/msauth-inproc,0.52244174,"Add GitHub OAuth support and refreshed Windows UI (#101, #103)",Move Microsoft authentication in-proc,0
Add clarifying comments to new MS auth impl,0.47405493,"Update MSAL; set MS auth embedded window title (#239, #512)",,0
Return to building 64-bit in NetCore and NetFx on Windows,0.49183935,Move to .NET Framework 4.7.2 on Windows (#283),Now that we've moved the Microsoft authentication helper in-process we no longer have a need to force all entry executables to be the same bit-width. The GitHub authentication helper is still .NET Framework (as we're targeting .NET Core 2.x still) and using 32-bit WinForms. However that helper does not make use of the LibGit2 native bits (by virtue of not instantiating the CommandContext type).,0
Move Microsoft authentication in-proc,0.5423532,"- Microsoft authentication is performed in-process on Windows, with support for GUI-less environments (such as SSH) via device code flow (#75)",Move Microsoft authentication in-process when no external helper application is present. This simplifies the scenario on .NET Framework (Windows) where MSAL supports WinForms-based UI.,0
Use JsonWebToken type in place of strings for JWTs,0.4174173,Generic OAuth support via config 🎉 #1062,,0
Merge pull request #74 from mjcheetham/new-install,0.43482757,Validate installers before publishing (#813),New Install 6/6: Implement (un)configuration for GCM Core,0
Don't access managed objects in finalizer,0.25125712,Add ability to read GCM default settings from the Windows Registry (#404),,0
Always run in 32-bit on Windows,0.6833708,Target 32-bit on Windows (#112),"In order to ensure maximum compatibilty on Windows, we target 32-bit platforms (64-bit Windows can run 32-bit applications in WoW). Also fix a bug where we had mismatching/incompatible use of the native libgit2 binaries by the main GCM executable, and the .NET Framework-only WinForms 'authentication helpers' such as the Microsoft.Authentication.Helper project. These WinForms projects prefer 32-bit and failed to load the libgit2 binaries, which were restored as their 64-bit forms by the main CLI project.",0
Add Azure Repos host provider configuration component,0.61081153,Enable Azure Repos OAuth-mode by default on DevBox (#1245),Add the required configuration/unconfiguration to the Azure Repos host provider. The required config is to set useHttpPath to true for dev.azure.com hosts.,0
Add main application configuration component.,0.41282654,Ensure we init IEnvironment before SessionManager (#1167),"Add main application configuration component, which will ensure the exectuable is on the PATH (on Windows) and configure itself and Git's credential helper in the user's config.",0
Pass the executable path from the main CLI program,0.4450146,"Fix problems with resolving the executable file path on Linux (#298, #229, #252)",Pass the executable path from the main CLI project program into the Application object and HelpCommands. This path is also required for the future commit that uses the path to set up Git and the PATH correctly.,0
Merge pull request #73 from mjcheetham/configservice,0.45035005,Fix bug in Git config matching due due case sensitivity (#234),New Install 5/6: Add IConfigurationService and (un)configure commands,0
Add IConfigurationService and (un)configure commands,0.38203132,Add ability to read GCM default settings from the Windows Registry (#404),"Add service that can configure and unconfigure components at the user or system level, and two commands that map to configure and unconfigure. Call these new commands from the Windows and Mac (un)installers. Update the help command output to include the new commands.",0
Merge pull request #77 from mjcheetham/new-certs,0.42750072,Add preliminary support for OAuth with GitHub AE (requires server support/changes) (#343),Replace old SHA1 signing certificates with SHA256 ones,0
Replace old SHA1 signing certificates with SHA256 ones,0.2997568,Add support for client TLS certificates (#1152),Per policy we should stop using SHA1 certificates for signing binaries and installers. The replacement for the 'Microsoft' Authenticode certificate is 'Microsoft400'.,0
Merge pull request #72 from mjcheetham/multivar-git,0.42273313,Add support for using WSL Git configuration (#461),New Install 4/6: Extend IGitConfiguration to allow manipulating multivars,0
Extend IGitConfiguration to allow manipulating multivars,0.5240275,Use native Git path interpolation for config values (#439),Extend the IGitConfiguration to allow manipulation of Git configuration 'multivars' (config entries that can have multiple values). This will be used in future commits to set the credential.helper variable to have two values.,0
Merge pull request #71 from mjcheetham/environ,0.37705326,Release pipeline fixes #995 #1009 #1061,New Install 3/6: Introduce IEnvironment to replace IEnvironmentVariables,0
Introduce IEnvironment to replace IEnvironmentVariables,0.5493808,Ensure we init IEnvironment before SessionManager (#1167),Replace the simple IEnvironmentVariables envar wrapper with a component that includes the envars and other methods for manipulating the $PATH. This will be useful in future commits where we need to inspect and update the $PATH for postinstall and preuninstall. Also expose the new IEnvironment and existing IGit components on the command context in prep. Add a new path comparison method to IFileSystem and introduce platform-specific implementations.,0
Merge pull request #70 from mjcheetham/rename-exec,0.51510584,org-rename: update references to GitCredentialManager (#1141),New Install 2/6: Rename main executable to GCM Core to make SxS easier,0
Rename main executable to GCM Core to make SxS easier,0.6126679,"Set the full path to standalone GCM Core installs, enabling overriding of bundled versions (#188, #199)","Rename the main executable to include ""-core"" to make side-by-side installs of GCM Core and Windows-only GCM easier. We can just change the configuration between ""manager"" and ""manager-core"".",0
Merge pull request #69 from mjcheetham/optimise-gitcfg,0.44366026,"- Codebase and build improvements (#29, #33)",New Install 1/6: Optimise the use of Git configuration from the Settings component,0
Introduce DisposableObject base class to impl the dispose pattern,0.38095945,Fix a bug with host provider disposal (#272),Implement the dispose pattern correctly for all IDisposable objects by introducing a common abstract DisposableObject class which 'does the correct thing'.,0
Optimise use of Git config from Settings component,0.65875626,Use native Git path interpolation for config values (#439),Keep hold of a single IGitConfiguration object when creating an instance of the Settings component. When querying for scoped settings now we enumerate all configuration entries and store all those that have the same section and property name locally up-front. This prevents us from calling TryGetValue on the configuration object multiple times. Add tracing to the libgit2 calls.,0
Merge pull request #68 from jamill/fix_osx_postinstall,0.4029821,"Run postinstall actions as the current user, not root - stop changing ownership of ~/.gitconfig on macOS (#308)",Install: fix postinstall script on osx,0
Install: fix postinstall script on osx,0.54974174,Ensure the /usr/local/bin directory exists on install (#257),"The macOS install encounteres the following error when running the postinstall script: ./postinstall: /tmp/PKInstallSandbox.qGkbqk/Scripts/com.microsoft.GitCredentialManager.kjGWk5/postinstall: line 21: [: missing `]' This resulted in the credential helper not being correctly configured. The problem is with the test on the indicated line - the '[ ]' test does not support '&&' statements inside the test expression, as it splits the expression into separate commands.",0
Merge pull request #64 from czipperz/quote-bash-variables,0.3893245,- @czipperz,Quote bash variables in installation scripts,0
Quote bash variables in installation scripts,0.43760926,Fix various problems with install path and app path variables #968,,0
Merge pull request #62 from mjcheetham/proxy,0.3690549,"Support for the NO_PROXY option to bypass the proxy for certain addresses (#299, #297)",Use Git's HTTP proxy configuration,0
Use Git's HTTP proxy configuration,0.6080712,Git Host Providers:,"Use the Git HTTP proxy configuration to create new configured HttpClient instances with proxy support. Add new documentation for the network and HTTP configuration options in GCM, such as proxy and TLS verification.",0
Encapsulate stdin/out/err streams into IStandardStreams interface,0.45765403,Guard against null pipe client (#1135),"Extract the StdIn, StdOut, and StdErr properties from the bloated ICommandContext component into their own IStandardStreams component. This allows for a more granular dependency web between all the GCM components (no need to pass the entire ICommandContext just to write a message to standard error, for example`). This new abstraction model is used initially by the IHttpClientFactory which does not take in the entire context but just the other components that it needs. Existing callsites have been updated.",0
Merge pull request #61 from mjcheetham/provider-override,0.45084178,Updated generic provider to support all protocols (#712),Add ability to override host provider from configuration,0
Add ability to override host provider from configuration,0.6062454,"Improve host provider auto-detection logic (#384, #481)","Check the Git configuration for a specified host provider for the current repository remote URI. We look for the credential.authority configuration entry (and any URL scoped variants) for backwards compatibility with older GCMs, as well as the new credential.provider entry. Also introduce a new setting credential.allowWindowsAuth to allow users who used the basic authority to disable WIA detection of the new generic provider.",0
Simplify ISettings,0.35381943,"Persist auto-detected provider setting (#507, #517)",,0
Merge pull request #60 from mjcheetham/settings,0.40966374,More winget publishing fixes (#353),Introduce ISettings component to consolidate envar and Git cfg settings,0
Introduce ISettings component to consolidate envar and Git cfg settings,0.6879925,Use native Git path interpolation for config values (#439),Introduce a new component ISettings that provides an interface for looking up the value of various GCM settings that can be specified from either the environment or Git configuration.,0
Merge pull request #56 from mjcheetham/http-on-context,0.37519002,Updated generic provider to support all protocols (#712),Move IHttpClientFactory toICommandContext`,0
Move IHttpClientFactory toICommandContext`,0.38634956,Replace netstandard2.0 with dotnet6.0 (link),Move the IHttpClientFactory to the ICommandContext and simplify the instantiation points for the various *RestApi types.,0
Merge pull request #54 from mjcheetham/gitcfg,0.42931014,Improved usability for GitHub auth (#587),Add ability to read Git config via libgit2,0
Add ability to read Git config via libgit2,0.6679953,Use native Git path interpolation for config values (#439),Use libgit2 to read Git configuration files and call other helpful methods such as locating config files and root repository directories. LibGit2Sharp was not used as we only need a minimal subset of the APIs. P/Invoke wrapping the native libgit2 C functions was created instead.,0
Merge pull request #55 from mjcheetham/envar-refactor,0.38570437,"- Codebase and build improvements (#29, #33)",Cache environment variables dictionary,0
Cache environment variables dictionary,0.46887022,"Improve proxy environment variable handling (#497, #501, #503)",Cache the environment variables in a dictionary after first use and don't always reconstruct it per access.,0
Merge pull request #53 from mjcheetham/msal-winonly,0.46081415,"Add GitHub OAuth support and refreshed Windows UI (#101, #103)",Move to using MSAL.NET on Windows,0
Move to using MSAL.NET on Windows,0.57700884,Move to .NET Framework 4.7.2 on Windows (#283),Use MSAL.NET on Windows and update the Visual Studio token cache snooping to use the new 'extensions' library for MSAL to interact with the Visual Studio MSAL cache file.,0
Merge pull request #52 from microsoft/master,0.43129808,"Fix a bug with using Microsoft Accounts with Azure Repos (#143, #148)",Merge master to release,0
Merge pull request #51 from microsoft/readme-updates,0.44767183,Release pipeline fixes #995 #1009 #1061,Clarify Linux strategy in readme,0
Merge branch 'master' into readme-updates,0.3945511,Transition from Nerdbank.GitVersioning to a version file (#1231),,0
Merge pull request #49 from mjcheetham/host-refactor,0.44561303,Codebase and build improvements (#49),Refactor to allow HostProviders to override store and erase,0
Clarify Linux strategy in readme,0.4893055,Very early support for Linux (#135),,0
Refactor to allow HostProviders to override store and erase,0.49809033,Fix a bug with host provider disposal (#272),Refactor the core commands and host provider types to permit providers to customise how they store and erase credentials. This would allow for providers that do not want to use the OS credential store for example.,0
Merge pull request #41 from mjcheetham/windows-installer,0.5572345,Split the Windows installer into user- and system-wide 'flavours' (#197),Add Windows payload and installer projects,0
Add Windows payload and installer projects,0.5400067,Split the Windows installer into user- and system-wide 'flavours' (#197),Add two projects for building (and signing) the Windows payload and installer (using Inno setup).,0
Merge pull request #45 from mjcheetham/unlink-javagcm,0.47617465,Mac installer will now unlink the Java GCM via Homebrew if installed (#45),Unlink the Java GCM from Homebrew if installed,0
Unlink the Java GCM from Homebrew if installed,0.8640833,Mac installer will now unlink the Java GCM via Homebrew if installed (#45),,1
Mark GitHub support on Windows as done (with UI),0.6668552,"Add GitHub OAuth support and refreshed Windows UI (#101, #103)","Since #40 is complete, we now have UI for GitHub on Windows.. updating the markdown current status table. Also minor formatting change to the table, we now centre the tick columns.",0
Merge pull request #40 from mjcheetham/github-winui,0.5637821,"Add GitHub OAuth support and refreshed Windows UI (#101, #103)",Add GitHub helper on Windows using WPF on netfx,0
Add GitHub helper on Windows using WPF on netfx,0.6701785,WPF-based GitHub auth UI (#40),Add a Windows authentication helper for GitHub using WPF on .NET Framework 4.6.1.,0
Merge pull request #39 from microsoft/master,0.44978,"Fix a bug with using Microsoft Accounts with Azure Repos (#143, #148)","Merge master to release including #29, #30, #32, #33, #34, #35",0
Fix README.md check-marks in feature table,0.40348613,Simplified build number included in artifact names (#638),,0
Merge pull request #33 from mjcheetham/dsym-archive,0.37070087,"- Codebase and build improvements (#29, #33)",Produce and collect symbols on build,0
Produce and collect symbols on build,0.36290643,Codebase and build improvements (#49),,0
Merge pull request #35 from mjcheetham/docs,0.40516415,More winget publishing fixes (#353),Add and update documentation files,0
Add and update documentation files,0.5469914,Various documentation updates:,"Add more information about that aims and state of the project to the main README.md file, as well as some basic documentation under the new docs/ directory.",0
Merge pull request #30 from mjcheetham/native-tty,0.44054192,- Fix TTY-based prompts for GitHub authentication (#30),Implement a native TTY interface for POSIX and Windows platforms and fix GitHub TTY prompts,0
Change GitHub auth API to use async Task rather than Try-pattern,0.6445893,"Add explicit PAT authentication mode for the GitHub Provider (#236, #259)",Change the GitHub authentication/prompt interface to be async Task based rather than the existing TryGet pattern. These methods could throw exceptions (which would indicate failure).,0
Implement a native TTY interface for Windows,0.49208164,Add native basic credential UI prompts for Windows (#92),"Use the Kernel32 console APIs to directly read/write from the CONIN$ and CONOUT$ devices (the attached console, if available). Most of this code was ported from the GCM Windows project.",0
Implement a native TTY interface for POSIX platforms,0.41010344,Correctly detect a UI interactive session on all platforms (#95),Replace the Console.Read/Write interface for terminal prompts with a system-native implementation that uses /dev/tty directly. This allows us to read and write to the terminal even when our stdin/out/err streams have been redirected by parent processes. We can also now exercise control over the TTY echo which is useful for hiding user input of passwords and other secrets.,0
Introduce InteropException for all P/Invoke errors,0.35174853,"Return non-zero code for UI helpers on error (#440, #441)","Add a new custom exception type InteropException that wraps up failures from interop (P/Invoke) code. Win32Exceptions, macOS and POSIX error codes are now wrapped in InteropException.",0
Merge pull request #34 from mjcheetham/issue-templates,0.51537734,issue templates: remove core suffix (#1180),Add issue templates for GitHub,0
Add issue templates for GitHub,0.636518,Convert issue templates to YAML (link),,0
Merge pull request #29 from mjcheetham/interop-refactor,0.45279428,"- Codebase and build improvements (#29, #33)",Move all interop code under Interop namespace,0
Move all interop code under Interop namespace,0.5639892,"Refactor namespace, assembly and project names (#500)",Move all the platform specific interop code to the Interop namespace and also group the P/Invoke calls into classes representing the modules/libraries/headers the original C functions live in.,0
Merge pull request #32: Support AAD in MSA,0.5034839,- Support AAD users as guest users in MSA-based Azure DevOps organizations (#32),Support AAD in MSA,0
Support AAD in MSA,0.5528606,- Support AAD users as guest users in MSA-based Azure DevOps organizations (#32),use common endpoint for MSA accounts,0
Merge pull request #27 from Microsoft/fix-pkg-sign,0.48337704,Release pipeline fixes #995 #1009 #1061,Fix macOS installer package file signing,0
Fix macOS installer pkg file signing,0.60924745,Notarize the macOS installer and binaries to permit running on macOS Catalina 10.15 (#84),Manually zip the unsigned package file before sending it off for signing as there appears to be a problem with the signing task's logic for doing this itself.,0
Update master CI build badge,0.4028927,Target *-latest runner images in CI workflow (#1178),,0
Merge pull request #26 from Microsoft/newbuild,0.4715588,Release pipeline fixes #995 #1009 #1061,"Refactor repo layout, simplify build and use NB.GitVersioning, add release build YAML",0
"Refactor repo layout, simplify build and use NB.GitVersioning",0.5407641,Transition from Nerdbank.GitVersioning to a version file (#1231),"Change the repository layout to group all the source and test files under the src/ directory, then split by platform (windows, osx, and shared) at the next level. Redirect the build output for all the projects to the top-level out/ directory. This means it's easier to do the path-math for signing and building the installers. Use Nerdbank.GitVersioning to provide a unified Semantic Version model for all of our assemblies and installers. Integrate the Mac-native MSAuth helper Xcode workspace into the main .NET build by chaining the build into the main CLI .NET project so that MSBuild shells out to xcodebuild. Also create a wrapper .NET project for the Mac installer script with a two step process: 'layout.sh' for making the installer payload layout, and 'pack.sh' for constructing the pkg file. Building the MSBuild project will call both layout and pack to produce an unsigned pkg file for development purposes. The signed release build can call 'layout.sh' and 'pack.sh' separately (and do signing of binaries in between).",0
Merge pull request #25 from mjcheetham/erase-userpass-match,0.50653005,Remove username/password authentication for GitHub.com (#171),Only erase credentials that match the username/password if specified,0
Merge pull request #21 from mjcheetham/mac-adal-logs,0.39123368,Release pipeline fixes #995 #1009 #1061,Fix the MSAuthHelper on macOS to trace ADAL logs and return correct exit codes,0
Merge pull request #22 from mjcheetham/tracing-tweaks,0.4855518,"Add TRACE2 support(#1131, #1151, #1156, #1162)",Fix a few problems with tracing secrets and missing vital error codes,0
Capture ADAL logs; upgrade ADAL; use correct trace fmt; use exit code,0.4279505,Automatically trace to the debugger when attached (#94),Enable the Microsoft Authentication helper on macOS to include ADAL logging information in the trace output when GCM_TRACE_MSAUTH is set. Also respects PII or sensitive information tracing setting GCM_TRACE_SECRETS. Upgrade to ADAL 4.0.0 which has now fixed the problem of being noisy and writing to NSLog/stderr. Update the AHLogger trace format output to be consistent with that of the main GCM application and Git's own output. Correctly return a non-zero exit code and error message on failure.,0
Ensure we log the actual Win32 error on failure,0.41316295,Add new diagnose command to help debug problems in the wild (#463),Ensure we are reporting the actual Win32Exception error message when a failure to access the Windows credential store occurs. Also print all inner exceptions and any codes for Win32Exceptions.,0
Merge pull request #23 from mjcheetham/podrepoupdate,0.4347936,Release pipeline fixes #995 #1009 #1061,Ensure macOS build does pod repo update,0
Ensure macOS build does pod repo update,0.4383679,Fix build script error creating incorrect x64 packages for macOS (link),,0
Ensure we're not tracing secret info in dictionaries,0.25732,Create Linux plaintext store with safer directory permissions (#397),,0
Only erase credentials that match user/pass when present,0.39674318,"Stop echoing password on Linux in basic credentials prompt (#432, #436)","Only erase stored credentials when the user name and password values match those passed on standard input, if any. When no user name and/or password are given on standard input we skip checking the stored value and just erase the credential. This is an important but possibly subtle behaviour to help prevent erroneous erasure of credentials. Calls to git-credential fill should immediately be followed by git-credential approve or reject. If there are concurrent processes that have called fill but not yet approve or reject, there's a gap when another (faster) process could have completed the fill+approve combination and have stored a different credential value than what the first process got from fill. If the first process fails and calls reject the valid credential as approve-ed by the second process would be deleted. This change helps prevent such a scenario (although there is still a small gap inside the GCM erase command itself between reading the OS's credential store and deleting from it - we could look at some system-wide lock around the credential store if this is deemed a problem later).",0
Merge pull request #19 from mjcheetham/macos-msauth-helper,0.5506387,Share the MSAL token cache with Microsoft developer tools on macOS as we already do on Windows (#275),Add Microsoft Authentication helper for macOS,0
Update Azure Pipelines YAML to build macOS msauth helper,0.5750542,Share the MSAL token cache with Microsoft developer tools on macOS as we already do on Windows (#275),Update the Azure Pipelines YAML for macOS to build the Microsoft Authentication helper using Xcode and also build & publish the installer package.,0
Add basic .pkg installer script,0.43477094,Validate installers before publishing (#813),Add a simple flat-package installer with postinstall script to configure the user's system gitconfig.,0
Add initial version of Mac MSAuth helper using ADAL 2.5.1,0.48971057,"Update MSAL; set MS auth embedded window title (#239, #512)","Add the initial version of the Mac Microsoft Authentication Helper using ADAL 2.5.1 via CocoaPods. The pods are statically linked so only a single executable ""Microsoft.Authentication.Helper"" is required to be distributed with GCM. ADAL 2.5.1 was chosen because later ADAL versions include a bug where errors were being written to standard error: link",0
Merge pull request #16 from mjcheetham/windows-msauth-helper,0.57364774,"Add GitHub OAuth support and refreshed Windows UI (#101, #103)",Add Microsoft Authentication helper for Windows,0
Enable multi-targeting to NetFX 4.6.1 on Windows,0.41753066,Replace netstandard2.0 with dotnet6.0 (link),"Enable building the class libraries and head CLI project against .NET Framework 4.6.1 when compiling on Windows. This enables the Windows-only authentication helpers (which build against the Microsoft.Git.CredentialManager.dll library) to avoid pulling in the .NET Standard type-forwarding libraries, which not only allows us to deploy the helpers and the main GCM executable in to the same directory without conflicting type-fwd libraries, but also greatly reduces the number of assemblies required to ship on Windows.",0
Add Microsoft Authentication helper for Windows,0.63120514,Add support for the Windows authentication broker - Windows Hello support (default off) (#323),Add an authentication helper for AAD/MSA auth that runs on Windows. ADAL.NET is used to obtain an access token based on input fed over stdin by Git Credential Manager. The access token is returned back to GCM over stdout on success. Common application start-up code has been refactored into the ApplicationBase abstract class. This ensures consistent tracing and debug support using the GCM_TRACE & GCM_TRACE_SECRETS and GCM_DEBUG environment variables.,0
Merge pull request #15 from mjcheetham/github-provider,0.43864867,Improved usability for GitHub auth (#587),Add GitHub host provider (with basic TTY credential prompts),0
Add GitHub host provider with basic TTY cred prompts,0.7640606,- Fix TTY-based prompts for GitHub authentication (#30),The required web calls and call flow/patterns are based on the original Git Credential Manager GitHub code. The support for GitHub authentication is by a basic TTY credential prompt (also supporting 2FA). In the future a credential helper which can show GUI to capture the user/pass/auth-code can be added in a similar manner to the Microsoft Authentication Helper.,1
Merge pull request #18 from mjcheetham/reorganise-build,0.4457707,"- Codebase and build improvements (#29, #33)",Enable building Mac/Windows specific solution projects,0
Enable building Mac/Windows specific solution projects,0.37465936,Fix build script error creating incorrect x64 packages for macOS (link),"Rearrange the directory structure of the repository to make it easier to selectively build platform-specific code. The common/ directory contains any code that can be built and run on all platforms. The windows/ (and mac/, linux/, etc as needed) directory contains code that can only be built and/or run on Windows. Change the main .NET solution to be built for either Windows or Mac - building only those projects which are required for Windows/Mac. This is done via solution configurations, of which there are now four: Debug Release WindowsDebug WindowsRelease The Windows* configurations will build all the common class libraries (netstandard2.0), the Windows helpers (net461) and the CLI head project (netcoreapp2.1). The Debug/Release configurations will build only the common libraries (netstandard2.0) and the CLI head project (netcoreapp2.1). This is suitable for building on Mac & Linux (and Windows without the helpers).",0
Merge pull request #14 from mjcheetham/fix-httpclient,0.45331335,Updated generic provider to support all protocols (#712),Don't double dispose HttpClients and ensure all objects are correctly disposed on exit,0
Ensure all app resources are disposed on exit,0.34215295,Ensure we start child processes created with ProcessManager (#1177),Refactor the main Application class to be disposed on application exit. All components that have IDisposable object references have now been given a chance to dispose of them.,0
Update Azure Repos REST API class to reuse it's HttpClients,0.5537557,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)","Update the Azure Repos REST API class to only create one HttpClient instance, configure common headers, and reuse the same instance for all requests.",0
Revert back to new HttpClient instance per request,0.28882247,"Allow hostname-specific proxy override to use no proxy (#442, #449)","Move back to creating a new HttpClient instance per request for few reasons: The current code/pattern was broken - we were double disposing of    the singleton client instance. It makes setting headers slightly easier as the caller no longer    must create request message with the headers set manually - just    set the default headers on their exclusive client. In practice we're not going to be running for a long time, and we're not going to be making many requests, which would otherwise drain all the available network ports. If the individual providers wish to obtain a new HttpClient instance and reuse it for all their web calls, they are free to do so.",0
Merge pull request #13 from mjcheetham/fix-tracesecrets,0.53350234,"Add TRACE2 support(#1131, #1151, #1156, #1162)",Fix secret tracing to print correct masking characters,0
Fix secret tracing to print correct masking characters,0.4353367,Remove use of box drawing characters in warning output (#243),Fix the secret tracing facility to actually print the masking chararcters rather than a type name of the 'IEnumerable' or similar text.,0
Merge pull request #10 from mjcheetham/azure-repos-provider,0.5676142,- Azure Repos,Add Azure Repos provider (not including MSA/AAD authentication helpers),0
Add Azure Repos host provider,0.7425696,- Azure Repos,Add a host provider for the Azure Repos Git host provider. Authentication with AAD or MSA is performed by calling out to a platform-specific 'helper' application which can show native GUI. These AAD/MSA auth platform helpers will be added at a later date.,1
Update HttpClientFactory to use singleton client,0.3603552,Updated generic provider to support all protocols (#712),"Don't create a new HttpClient on each GetClient call; we run the risk of exhausting all available sockets because a socket is assigned per client instance, and the socket does not become free immediately after disposal of the client. In light of this change to use a singleton instance, don't set the default headers on that singleton client otherwise we will pollute the client setup for other callers. Instead we set the headers per request message that is sent. Tests have been updated to cover the above changes. Additional minor change: move the HTTP-y constants to a nested static class Constants.Http.* for better grouping.",0
Merge pull request #9 from mjcheetham/generic-provider,0.54175055,Updated generic provider to support all protocols (#712),Add a generic provider supporting basic and WIA,0
Broaden NTLM auth to all Windows Integrated Auth protocols,0.56213015,Add support for the Windows authentication broker - Windows Hello support (default off) (#323),Broaden the scope of supported Windows Integrated Authentication (WIA) protocols that GCM will try and detect to also include 'Negotiate' (which could be either NTLM or Kerberos) as well as NTLM.,0
Simplify prompt API and update basic auth API,0.5406371,Add native basic credential UI prompts for Windows (#92),Simplify the prompting API on ICommandContext to be explicit between the 'echoing' and 'non-echoing'/secret prompts. Also remove the not needed ability to specify the in/out streams. Update the IBasicAuthentication API to be transparent to the type of resource. Not all resources need to be valid URIs.,0
Add a generic provider supporting basic and NTLM auth,0.557109,Updated generic provider to support all protocols (#712),Add a generic host provider that supports capturing credentials for both basic and NTLM protected resources.,0
Add test HTTP objects,0.2557575,Reduce warnings from tests (#337),,0
Merge pull request #8 from mjcheetham/cmds,0.4229173,"- Codebase and build improvements (#29, #33)","Implement the get, erase and store commands",0
Remove IsCredentialStoredOnCreation from IHostProvider,0.4850163,Fix a bug where Windows Integrated Authentication would be disabled by default (#194),"Remove the IsCredentialStoredOnCreation extensibility point for host providers. Its purpose was largely to satisfy the AzureReposProvider's constraints, which we now believe is not required. If this turns out to be still required, we may consider re-adding it but only when the need arises.",0
Add noop erase cmd test; simplify assert,0.4733248,Reduce warnings from tests (#337),,0
Relax get command tests - ignore stdout ordering,0.4518195,git: consistently read from stdout before exit wait (#1136),Update the get command tests to be ignorant of the order in which the dictionary entries for username and password are output.,0
Tweak StoreCmd tracing; test for null args in CanExec.,0.40078956,trace2: guard against null pipe client in dispose (#1135),,0
Add unit tests for get/erase/store commands,0.35514766,Reduce warnings from tests (#337),Add unit tests covering the new Get/Erase/StoreCommands and also update the HostProviderRegistryTests to take advantage of the newly added 'test' implementation objects that have been added; this makes the tests less verbose.,0
Implement the erase and store commands,0.19481114,Create Linux plaintext store with safer directory permissions (#397),Implement the erase and store commands using the secure credential store APIs.,0
Implement get command,0.30628106,Use System.CommandLine to handle our command line parsing and allow host providers to offer custom commands (#273),,0
Merge pull request #7 from mjcheetham/add-license-info,0.4039573,Add preliminary support for OAuth with GitHub AE (requires server support/changes) (#343),Add license headers and update LICENSE file,0
Add license headers; update LICENSE file,0.39878803,Notarize the macOS installer and binaries to permit running on macOS Catalina 10.15 (#84),"Per legal requirements: Add license & copyright headers to every code file, Update the LICENSE file as given in an internal email: Add the product name, Update ordering of 'copyright' and 'MIT License' lines      to match order given in internal email.",0
Merge pull request #2 from mjcheetham/secure-storage,0.41290373,Improved usability for GitHub auth (#587),Add secure credential storage APIs for Windows+macOS,0
Update error handling in credstores,0.3611346,Validate installers before publishing (#813),"Update the error handling performed in both MacOSKeychain and WindowsCredentialManager to be clearer about which native return codes we consider to be 'OK', and ensure we're throwing exceptions for all other types of unknown errors.",0
Simplify native/managed marshaling code for MacOSKeychain,0.49259454,Better warning messages on macOS when there are Keychain issues (#305),"Simplify some of the marshaling code between native and managed by using more methods from the Marshal type, rather than using our own helpers.",0
Use the global alloc/free methods for native interop,0.31352106,Pass parent window handle information to MSAL (#306),Replace usages of the COM allocator (Marshal.AllocCoTaskMem and Marshal.FreeCoTaskMem) in the credential stores code with the global allocator (Marshal.AllocHGlobal and Marshal.FreeHGlobal). Since there is no COM heap on Mac using this allocator was not the correct thing to do. On Windows the CredRead/Write/Delete calls are Win32 API calls which don't use COM either. Use the global allocator for WindowsCredMgr native code,0
Rename cred store static OpenDefault ctors to Open,0.32725275,"Update MSAL; set MS auth embedded window title (#239, #512)",Rename the MacOSKeychain and WindowsCredentialManager static contructor methods from OpenDefault to Open. In the future should we want to or need to disambiguate between which store is being used we can add overloads to the that singularly named method.,0
Merge pull request #3 from mjcheetham/http,0.40594786,Improved usability for GitHub auth (#587),Add HTTP client factory and simplify app name/version collection,0
Add HttpClientFactory tests; include Cache-Control header,0.33579895,Fix a bug to prevent setting credential.provider when it wasn't needed (Only set credential.provider for dynamic matches #535),,0
Merge pull request #6 from mjcheetham/vscode,0.4471865,"- Codebase and build improvements (#29, #33)","Add VS Code config to enable build, test and debug",0
Drop 'Core' from public product name,0.594289,Drop -core suffix from entry executable #551 ,,0
Add Debug.Assert messages; rename helper methods,0.5750194,Add new diagnose command to help debug problems in the wild (#463),Add messages to the Debug.Assert calls in MacOSKeychain. Rename the GetDefaultCredentialStore helper method to   CreateCredentialStore in CommandContext.,0
"Add VS Code config to enable build, test and debug",0.54381263,Add Git configuration options for trace & debug (#1228),"Add launch.json and tasks.json files for building, running unit tests and debugging GCM in Visual Studio Code.",0
Merge pull request #5 from Microsoft/build-badge,0.43990365,"- Codebase and build improvements (#29, #33)",Add CI build badge to README.md,0
Add CI build badge to README.md,0.47415763,readme: add link to project roadmap (#1204),,0
Merge pull request #4 from mjcheetham/yaml,0.43292475,Convert issue templates to YAML (link),Add basic Azure Pipelines-based CI and PR builds,0
Make WriteDictionary ext methods use TextWriter.NewLine property,0.21006624,Unify documentation line length (#862),"Update the various WriteDictionary extension methods to use the TextWriter's configured NewLine property rather than forcing a line-feed (\n, LF). The CommandContext implementation correctly sets the NewLine property of the standard out and error TextWriters to LF, which Git is expecting. We will need to catch any regression here in functional tests. This simplifies the new-line writing code in the extensions methods (can now just use the WriteLine methods).",0
Fix bad ICredStore comment; add macOS native doc links,0.45779496,Update documentation to use reference-style links (#680),Fix an incorrect documentation comment on ICredentialStore that an exception is thrown for a missing credential key - it should return null instead. Add some more links to Apple documentation showing where various constant values came from.,0
Add Azure Pipelines YAML PR & CI build defns,0.48753524,- Azure Repos,,0
Build HTTP client user-agent string; simplify platform info,0.41987526,Auto-detect on-premises/self-hosted providers via HTTP headers (#262),"Build a valid user-agent string for use with HTTP clients for GCM. Also simplify the building of program header version strings and command-line usage text by using reflection GetEntryAssembly in the library, rather than passing strings in from the CLI app.",0
Add HTTP client factory and 'HEAD' extensions,0.44044274,Add support for client TLS certificates (#1152),Add HTTP client factory type and extension methods for sending HTTP 'HEAD' calls using HttpClient. TODO: generate a user-agent for the current machine,0
Add secure credential storage APIs for Windows+macOS,0.56334865,Add option to use the new DPAPI-based credential store on Windows (#464),Add secure credential storage APIs for the Windows Credential Manager and the macOS Keychain.,0
Merge pull request #1 from mjcheetham/framework,0.4360304,"- Codebase and build improvements (#29, #33)",Add basic framework for Git Credential Manager,0
Add extra parens for readability,0.22343665,Use System.CommandLine to handle our command line parsing and allow host providers to offer custom commands (#273),,0
Add documentation comments to public types and members,0.4496638,Various documentation updates:,,0
Add comment about null check in Trace,0.490149,"Add TRACE2 support(#1131, #1151, #1156, #1162)",,0
More PR feedback: better xplat debug wait; test provider w/ path,0.42616445,Add new diagnose command to help debug problems in the wild (#463),,0
Address PR feedback,0.24772206,- Various bug fixes and improvements,"Use 'Secret' rather than 'Sensitive' in tracing terminology   to be consistent with the environment variable name. Always print WriteLineSecrets but allow the caller to pass in   the secret parts as format arguments, which will now be masked   if EnableSecretTracing is false. The rationale for this is that   trace output will be more consistent, just with the secret parts   masked. git-credential treats the keys as case-sensitive; so should we. Use EnsureArgument helpers in Trace.cs Print usage information on incorrect usage.",0
Add basic framework for Git Credential Manager,0.7800249,Initial release of Git Credential Manager Core with beta support for...,"Add basic framework for Git Credential Manager:  - .NET Core CLI application  - common/shared library with     - minimal credential-helper command stubs (get, store, erase)     - help and version commands     - Git-style tracing     - abstracted file system and stdin/out/err for testing  - unit tests",1
Add .DS_Store to gitignore,0.44980422,Use native Git path interpolation for config values (#439),,0
Initial commit,0.3203573,Migrated release process from Azure DevOps to GitHub actions (#707),,0
