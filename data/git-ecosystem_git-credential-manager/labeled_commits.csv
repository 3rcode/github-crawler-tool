Index,Commit Message,Score,Correspond Changelog Sentence,Commit Description,Class
1,build: workaround Azure Pipelines build bug,0.5596754,- Azure Repos,"Use the new Windows broker which is based on the MSALRuntime; an export wrapper around a native, cross-platform MSAL library. In this new set up, we drop the .Desktop package in favour of the .Broker package that also means we drop the WebView2Loader.dll, which we didn't make use of anyway. There are a few new binaries to be distributed in the new model, including a P/Invoke layer, IdentityModel abstractions library, and the native msalruntime_x86.dll. Note that GCM still only support x86 on Windows, and only supports broker use on Windows. For this reason we don't bother adding the broker package on non-.NET Framework builds to keep the sizes on Mac/Linux to a minimum. Also update the MSAL extensions library whilst we are here to pick up various bug fixes, and drop workarounds that are no longer required for this new broker implementation!",0
2,bb-avnui: update Avalonia-based Bitbucket UI,0.68217903,Updated Bitbucket credential UI to show the URL of the Bitbucket Server or Data Center instance if applicable (#713),Add link to the new GCM roadmap to the README to increase discoverability.,0
3,Merge pull request #788 from ldennington/arm-fix,0.4865819,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)",Add link to the new GCM roadmap to the README to increase discoverability.,0
4,git: introduce GitCfgEntry wrapper type for enumeration,0.5633062,- GitHub,Update the large block comment on how we select which types of flows to use for Microsoft authentication.,0
5,Merge pull request #819 from ldennington/update-azure-resource-names,0.53684115,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)","If we are unable to get a parent window handle; because for example, we don't have a console, then create a small 'dummy' window using WinForms that we can use to pass a handle to MSAL.",0
6,Add .NET SDK download link to dev docs,0.5275717,Include UI helpers in Debian package for Linux release; move GCM symlink to /usr/local/bin (#405),"In case we have an existing refresh token, but it has expired or been revoked, we should gracefully fall back to performing an interactive OAuth flow.",0
7,bitbucket: split Avalonia UI from agnostic VM/cmds,0.4896211,Autodetect Bitbucket DC instances (#373),"In case we have an existing refresh token, but it has expired or been revoked, we should gracefully fall back to performing an interactive OAuth flow.",0
8,Merge pull request #890 from GitCredentialManager/dependabot/github_actions/actions/checkout-3.1.0,0.53019917,Migrated release process from Azure DevOps to GitHub actions (#707),"Always set the parent window handle for MSAL on Windows. Previously we only set this if provided a handle by the user/config. Now however we must always try and provide a handle because using the new MSALRuntime-based Windows broker means we must do so - MSAL no longer provides us with a 'dummy' handle to use. Use the parent console window handle, as recommended by the MSAL docs: https://github.com/AzureAD/microsoft-authentication-library-for-dotnet/wiki/wam#parent-window-handles",0
9,Add install from source instructions,0.5758666,Fix computation of installation path on Linux/single-file publish (#310),"Use the new Windows broker which is based on the MSALRuntime; an export wrapper around a native, cross-platform MSAL library. In this new set up, we drop the .Desktop package in favour of the .Broker package that also means we drop the WebView2Loader.dll, which we didn't make use of anyway. There are a few new binaries to be distrubuted in the new model, including a P/Invoke layer, IdentityModel abstractions library, and the native msalruntime_x86.dll. Note that GCM still only support x86 on Windows, and only supports broker use on Windows. For this reason we don't bother adding the broker package on non-.NET Framework builds to keep the sizes on Mac/Linux to a minimium.",0
10,Merge pull request #358 from mjcheetham/fixed-dotnet-sdk,0.4904826,Distribute GCM as a dotnet tool (#886),,0
11,created a place for the Helper helper,0.37315786,@WormJim ,"During some refactoring we accidentially introduced an error in the 'app path' on the CommandContext`; rather than trimming the file extension off (for detection of the old executable name on Windows) on a local copy, we are now updating the app wide copy! Only mutate a local copy.",0
12,trace2: remove adddots method,0.5277301,Initial TRACE2 tracing events #1045,"During some refactoring we accidentially introduced an error in the 'app path' on the CommandContext; rather than trimming the file extension off (for detection of the old executable name on Windows) on a local copy, we are now updating the app wide copy! Only mutate a local copy.",0
13,Add PAT as possible option to credential.gitHubAuthModes (#496),0.853485,"Add explicit PAT authentication mode for the GitHub Provider (#236, #259)","The Authentication Issue template currently directs users to run git-credential-manager-core rather than git-credential-manager, which results in a warning regarding the removal of the core suffix. This change corrects the applicable commands so that users will not see this warning.",1
14,xui: target netstandard2.0 for shared UI projects,0.51296985,Move to .NET Framework 4.7.2 on Windows (#283),Ensure that we actually start processes (and check they have started correctly) using the new ProcessManager/ChildProcess abstractions. Fixes #1170 Replaces #1171,0
15,Merge pull request #378 from ldennington/fix-tag-formatting,0.5024506,Fix WSL configuration instructions (#479),"The Authentication issue template currently directs users to run git-credential-manager-core rather than git-credential-manager, which results in a warning regarding the removal of the core suffix. This change corrects the applicable commands so that users will not see this warning.",0
16,dpapi: add unit tests of DPAPI cred store,0.6032413,Add option to use the new DPAPI-based credential store on Windows (#464),Ensure that we actually start processes (and check they have started correctly) using the new ProcessManager/ChildProcess abstractions.,0
17,docs: update git credential cache platforms (#1049),0.7499056,Support git-credential-cache as a credential backing store on Linux (#287),"We are using the *-latest runner images for release builds (win, linux), but for CI we're instead using ubuntu-18.04, ubuntu-20.04, and windows-2019 (alongside macos-latest). Let's run CI against the latest of all three OS images to match what we're using to build release bits. Ubuntu 18.04 is also deprecated as a GitHub hosted runner.",1
18,argv0: fix implementation of getting native argv[0],0.42547393,"Return non-zero code for UI helpers on error (#440, #441)","We are using the *-latest runner images for release builds, but for CI we're instead using ubuntu-18.04, ubuntu-20.04, and windows-2019 (alongside macos-latest). Let's run CI against the latest of all three OS images to match what we're using to build release bits.",0
19,assets: add GitHub banner image,0.5883758,- GitHub,"When enumerating all Git configuration values in Settings, we currently cache a copy of all values for the lifetime of the GetSettingValues() method. This saves us some calls to Git, but we can do better. Pull-up the cache of Git configuration entries to the lifetime of the Settings object, meaning all calls to GetSettingValues() over the lifetime of the process can benefit from the cache! The savings here can be significant as each ISettings property typically results in a call to GetSettingValues(). Whilst in this space we can fix a couple of bugs:   We were not calling git config --type=path for isPath = true variables when resolving settings, and instead consulting the cache first. We always want to go to Git for these types of values.   We were not using the existing cache for unscoped entries!   In my limited testing this results in a 2-3x speedup in calls to get && store!",0
20,Unit test for #453,0.4610023,Reduce warnings from tests (#337),"We have already checked isPath is true before calling TryGet, so let's just pass isPath: true in these calls.",0
21,osx: run postinstall configure cmd as current user,0.59383285,"Run postinstall actions as the current user, not root - stop changing ownership of ~/.gitconfig on macOS (#308)","When enumerating all Git configuration values in Settings, we currently cache a copy of all values for the lifetime of the GetSettingValues() method. This saves us some calls to Git, but we can do better. Pull-up the cache of Git configuration entries to the lifetime of the Settings object, meaning all calls to GetSettingValues() over the lifetime of the process can benefit from the cache! The savings here can be significant as each ISettings property typically results in a call to GetSettingValues().",0
22,ui: add Avalonia-based UI for generic cred prompt,0.67902,Add native basic credential UI prompts for Windows (#92),"Use the cached copy of Git configuration entries not only for URL-scoped keys, but unscoped keys too!",0
23,git: consistently read from stdout before exit wait (#1136),0.9617914,Consistently read from stdout before waiting for Git process exit (#1136),"If we are asked for a path-type setting then we should always consult Git directly for the value, and not used cached copies of values that were acquired using git config list without a --type parameter.",1
24,docs: clarify GCM_GPG_PATH has no config equiv.,0.6038782,- GCM Core now worked behind network proxies (configuration guide) (#11),"Add TRACE2 region tracing capability. The first six commits contain minor refactors, bug fixes, and cleanups. The first moves Trace2 messages into their own file. The second removes the unnecessary AddDots() method. The third fixes certain conflated timing information in child_start and child_exit events. The fourth ensures we're writing exit message times in UTC. The fifth adds descriptive comments to Trace2-related classes that did not yet have them. The sixth adds best-effort logic to capture thread names. The next three commits are dedicated to preparing for and adding region-related logic. The seventh commit updates custom performance format span handling to account for the repo and category fields, which are used in region tracing. The eighth adds region-related events, encapsulated in a class that inherits from DisposableObject (which in turn inherits from IDisposable). The ninth adds region tracing to methods of interest pertaining to OAuth authentication. The final commit updates GCM's documentation to inform users of how to enable and utilize Trace2 tracing. A final note: This implementation does not support nested regions, as it is not required for the current regions of interest.",0
25,github: add support for OAuth with GHAE,0.7904301,Add preliminary support for OAuth with GitHub AE (requires server support/changes) (#343),Document how users can set up and utilize the Trace2 API.,1
26,bitbucket-ui: add stub UI project,0.6229954,Updated Bitbucket credential UI to show the URL of the Bitbucket Server or Data Center instance if applicable (#713),Add region tracing to key methods in OAuth2Client. This was deemed a good starting point for regions due to the server interaction required to obtain tokens. Additional regions can and should be added to additional sections of the code that are deemed performance-critical in the future.,0
27,docs: update readme to show osx-arm64 support,0.58476686,Support macOS arm64 installs via Homebrew (#798) ,"Add supporting infrastructure for regions. This includes the normal Write methods in Trace2 and corresponding Trace2 messages with a few notable distinctions:  There is an abstract parent RegionMessage that inherits from Trace2Message. The RegionEnterMessage and RegionLeave messages inherit from this parent (rather than Trace2Message) to maximize reuse of shared fields. We create a new Region class that implements DisposableObject and call it using a CreateRegion method in Trace2. This ensures that we call WriteRegionLeave before a Region object is disposed - a key requirement of Git's Trace2 API for regions.  Additionally, it allows us to manage getting the executing thread name and region timings within the class, thus removing this burden from consumers.  An additional note is that the region_enter and region_leave events will always have the same line number with this model. This was deemed to be acceptable, however, given that knowing where a region begins executing provides enough information for inspection of the region if it is needed.",0
28,Added missing quotes in WSL instructions,0.5670092,Fix WSL configuration instructions (#479),"Previously, we only set up custom performance format span handling for time-related information (see [1]). However, with the upcoming introduction of regions, we will need custom spans for the category and repo strings. This change refactors and adds to the current logic to correctly handle all 3 span types (i.e. time, repo, and category). [1] 59a2692",0
29,release: force xz compression for Debian package,0.5210005,Ensure Debian package is expected size and contains necessary files (https://github.com/GitCredentialManager/git-credential-manager/pull/648),"With the upcoming introduction of regions, we will need to capture thread names. This change adds a new static BuildThreadName() method that defines a thread name by:  Determining if it is the entry thread and, if so, calling it ""main"", per Trace2 convention. If it's not the main thread, determining whether it is a thread pool thread and naming it with a static prefix and the thread pool thread id. If it is not the entry thread or a thread pool thread, use the thread name, if it has one. Return an empty string if none of the above are true.",0
30,linux release: build and lay out,0.7136545,Very early support for Linux (#135),Add descriptive comments to Trace2-related classes that currently do not have any.,1
31,deb: add UI helpers to debian package,0.7795458,Include UI helpers in Debian package for Linux release; move GCM symlink to /usr/local/bin (#405),We are currently writing exit message times in local rather than UTC time. This change updates to UTC time to align with the expectations of the Trace2 API.,1
32,Add license headers; update LICENSE file,0.54922205,Update documentation to use reference-style links (#680),"Currently, we are recording child process times incorrectly for the performance format target. This change fixes that by:  Ensuring we're recording the absolute time in child_start messages for the performance format target, which we previously were not doing. Ensures we do not conflate the absolute and relative times in child_exit, which we were previously doing.",0
33,Merge pull request #335 from mjcheetham/winstall-fix2,0.546399,Fix WSL configuration instructions (#479),"In Git, dots are only used on nested region messages, which are currently not supported in GCM. Remove the AddDots() method that is used incorrectly for formatting child process messages.",0
34,Merge pull request #544 from GitCredentialManager/add-codeql,0.513961,Convert issue templates to YAML (https://github.com/GitCredentialManager/git-credential-manager/commit/24ae90a4bd18fec6edcc860281ff82f715588e44),"Move Trace2 messages into a new file. The Trace2 file was getting a bit long and unwieldy, so this change is intended to separate it in a logical way into two smaller files that are (hopefully) easier to parse and reason about.",0
35,Update docs/configuration.md,0.5750897,Update System.CommandLine and fix some bugs (#531),"Add a callout to the fact the exact location of GCM may differ depending on the Git for Windows version/installation options, in our WSL docs.",0
36,Add explicit framework,0.4610014,Codebase and build improvements (#49),Ensure we have an instance of IEnvironment before we pass it to the SessionManager contructor. Also add some null guards to catch this problem earlier in the future.,0
37,http: add support for client certificates,0.59326583,"Add an OAuth2 client implementation with PKCE support (#99, #102)",,0
38,Merge pull request #22 from mjcheetham/tracing-tweaks,0.44455424,@WormJim ,Ensure we have an instance of IEnvironment before we pass it to the SessionManager contructor. Also add some null guards to catch this problem earlier in the future.,0
39,Merge pull request #439 from vdye/git-config-prefix-expansion,0.55770636,Add support for using WSL Git configuration (#461),"This series adds the TRACE2 error event. The first two commits are opportunistic fixes that remove unnecessary components of Trace2 messages. The next four commits add Trace2 as a dependency to certain classes where exceptions are thrown in order to capture those exceptions with the new error event. The seventh commit adds the error event, and eighth adds special exceptions that write to Trace2. Finally, the ninth commit adds error tracing exceptions and messages throughout the GCM codebase.",0
40,Better browser/interactive session detection inside of WSL (#1148),0.69345075,Support the wslview command  to open the browser (#529),"Add TRACE2 error tracing statements throughout GCM codebase. Note that this is a best effort - there are certain places (most notably certain static and unsafe methods) where statements were purposefully not added because it is either not safe or was deemed to much lift/churn to do so. Note that there are some instances in which a ""parameterized"" message is passed to TRACE2. This is used only when PII information could be passed into the message (e.g. through a path or remote URI) and should be redacted for collection purposes. Finally, there are certain instances in which we write an error with no exception thrown. These align with the places where we are currently writing to GCM Trace without throwing an error for the purposes of parity.",0
41,homebrew: publish new package version on release,0.51801234,This release is a fast follow to 2.0.692 to fix issues with the Debian package generated as part of that release.,"Add exceptions for which TRACE2 tracing can optionally be used. We choose to add these exceptions to ease the experience of writing TRACE2 error information - instead of having to add a call to Trace2's WriteError() message before every exception of interest, one can instead just use the appropriate Trace2 exception.",0
42,fixup! wsl: support calling Git inside of WSL,0.80003226,Add support for using WSL Git configuration (#461),"Add error event, which will capture exceptions, to Trace2 tracing system.",1
43,build(deps): bump actions/setup-dotnet from 3.0.2 to 3.0.3 (#932),0.5770978,Replace netstandard2.0 with dotnet6.0 (https://github.com/GitCredentialManager/git-credential-manager/commit/65cead2b5caa443fde1f9b86d02ab377a80a279c),"Pass instance of Trace2 to Gpg in preparation for capturing exceptions, which will be added in a future commit.",0
44,Merge pull request #610 from jessehouwing/patch-1,0.4701054,Fix WSL configuration instructions (#479),"Pass instance of Trace2 to terminal classes in preparation for capturing exceptions, which will be added in a future commit.",0
45,gitconfig: ensure config filter is passed down,0.5987828,Ensure git-credential-manager-core command is available after Debian package install (https://github.com/GitCredentialManager/git-credential-manager/pull/650),"Pass instance of Trace2 to Git in preparation for capturing exceptions, which will be added in a future commit.",0
46,trace2: refactor diagnostics,0.6412455,Initial TRACE2 tracing events #1045,"Pass instance of Trace2 to OAuth2Client in preparation for capturing exceptions, which will be added in a future commit. Note that this also removes the unused instance of Trace in GCM's OAuth2 infrastructure.",0
47,bitbucket: ensure we ship the Bitbucket DLL,0.6610639,"Bitbucket Server support (#140, #141)","Order was originally included for each TRACE2 json property to ensure alignment with Git's TRACE2 json property ordering. However, given that the json output is meant for consumption only by tooling (e.g. the OTel Collector) andi that the order requirement adds overhead with each new message, this change removes it.",0
48,Don't access managed objects in finalizer,0.41841945,Pass parent window handle information to MSAL (#306),"TRACE2 convention does not require file names to be lowercase. Remove the ToLower() call when setting messages' FileName properties, as it it unnecessary.",0
49,Merge pull request #483 from ldennington/update-metadata,0.48483455,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)","This series adds the performance format target for TRACE2 tracing. The first two patches are small fixes for bugs I noticed as I was testing the performance format target. The first moves the FormatTargetTypes enum from the specific Trace2StreamWriter class to the shared Trace2Writer class. The second ensures the normal format event names are written in snake case (rather than lowercase). The third patch adds the ability to get the ""depth"" of the process. Because Sids and depth are process-related concepts, it removes the SidManager class and moved depth/sid-related properties and methods into the ProcessManager class. The fourth patch adds the performance format target. It includes a few notable components:  A new GetMessage method to ensure message strings written to normal and performance targets are not duplicated. A new PerformanceFormatComponent class to track sizing of optional properties of performance format messages. A BuildSpan method that Trace2Message children use to create correctly-sized ""spans"" for optional properties of performance format messages. A span is a piece of the message beginning with a pipe (|) and ending just before the next pipe or the end of the message. A BuildTimeSpan method that adjusts spans for long/short times. In future, when we have events that include performance format string span components, we will need to add an additional method to handle them.",0
50,build(deps): bump DavidAnson/markdownlint-cli2-action from 8.0.0 to 9.0.0 (#1015),0.56904864,Codebase and build improvements (#49),"Enterprise instances that return a null version are considered to support OAuth. Only disable OAuth as an option if we can verify we are talking to an old Enterprise Server. This is a less fragile option as we never block the user from using an auth method they could use, and don't need to special case GHAE.",0
51,Switch to reference style links,0.75021374,Update documentation to use reference-style links (#680),Enterprise instances that return a null version are considered to support OAuth.,1
52,Fix GitHub Enterprise API URL for raw source code links.,0.62578017,- GitHub,"Today we're gating browser-based authentication mechanisms behind a GUI-possible session, which isn't 100% correct. When inside of a WSL session, without WSLg enabled, it is still possible to launch a web browser in the hosting Windows session. Split the determination between ""GUI session"" and ""browser possible"", and add the special case for WSL inside an interactive Windows session. Things are complicated here because it is possible to SSH in to the WSL instance from outside of the Windows host, meaning the Windows session also doesn't have UI. This case we still need to prevent browser-based options. In order to detect these cases we need to 'punch out' to the Windows host and run a script/cmdlet to determine the session type. Fixes #878",0
53,docs: update version cmd in issue template,0.49939373,Update System.CommandLine and fix some bugs (#531),"Add support for automatically sending client TLS certificates using the Git configuration setting 'http.sslAutoClientCert'. This setting is currently only present in Git for Windows, and there is only respected when the SSL backend is ""schannel"". Fixes #369",0
54,"when falling back, be explicit about what to use",0.27370456,Add option to prevent interactivity (#91),"Add the performance format target for TRACE2 tracing. This change includes a few notable components:  A new GetMessage method to ensure message strings written to normal and performance targets are not duplicated. A new PerformanceFormatComponent class to track sizing of optional properties of performance format messages. A BuildSpan method that Trace2Message children use to create correctly-sized ""spans"" for optional properties of performance format messages. A span is a piece of the message beginning with a pipe (|) and ending just before the next pipe or the end of the message. A BuildTimeSpan method that adjusts spans for long/short times. In future, when we have events that include performance format string span components, we will need to add an additional method to handle them.",0
55,Merge pull request #18 from mjcheetham/reorganise-build,0.3725785,Fix WSL configuration instructions (#479),"The performance format target requires recording of process depth. We use the number of forward slashes in the process's sid as a convenient way to determine this. Because the sid and the depth are process-related concepts, this change also moves sid/depth related properties into ProcessManager.cs and removes the SidManager.cs class.",0
56,git: change git config API to push level filter to methods,0.71945673,Avoid using the newer --show-scope Git config option - work with downlevel Git versions (#318),"Add support for automatically sending client TLS certificates using the Git configuration setting 'http.sslAutoClientCert'. This setting is currently only present in Git for Windows, and there is only respected when the SSL backend is ""schannel"".",1
57,Merge pull request #52 from microsoft/master,0.48547515,Add workaround for Windows Broker (WAM) running as admin (#344),"A previous patch 1 added the ability to write strings in snake case. However, this was not applied to writing events in the normal format - events that should be written as child_start or child_exit are currently written as childstart and childexit. This patch corrects this issue.",0
58,settings: replace isPath with true when we know,0.3735983,Fix reading empty Git configuration entry values (#215),"Move the FormatTargetTypes enum from the specific Trace2StreamWriter class to the shared Trace2Writer class, since the Trace2FileWriter class also uses values from this enum.",0
59,env: ensure we don't return empty PATH vars on Windows,0.3753736,"Fix problems with resolving the executable file path on Linux (#298, #229, #252)","In order to detect if we have an interactive Windows desktop session from inside WSL we need to 'punch out' from WSL to determine the session ID and window station. Strictly speaking, except for session 0 (from Vista onwards), any Windows session can have exactly one interactive window station (always called WinSta0). However, because we cannot easily determine the window station name from a simple cmd/powershell script, we take a simplified approach which isn't 100% accurate. Instead, we only permit browser auth methods if we are NOT in Windows session 0; any other Windows session we assume we are in WinSta0. The default OpenSSH Server configuration (Windows 10+) has sshd running as the built-in NT user NETWORK_SERVICE, which means it runs in session 0 (the services session). This is most common scenario, other than using WSL from a 'real', interactive Windows session that we're likely to face.",0
60,Correct spacing,0.36034372,Unify documentation line length (#862),Add ability to launch cmd.exe or PowerShell.exe scripts from inside a WSL distribution. In order to discover the location of cmd.exe/powershell.exe we need search the Windows file system that's mounted by default /mnt/c. We inspect the /etc/wsl.conf file to respect users who have changed the default mount location for Windows drives.,0
61,Merge pull request #212 from mjcheetham/msauth-choice,0.4414769,@mminns ,Add a basic INI file deserialiser,0
62,dotnet tool: rename package,0.61164093,Replace netstandard2.0 with dotnet6.0 (https://github.com/GitCredentialManager/git-credential-manager/commit/65cead2b5caa443fde1f9b86d02ab377a80a279c),"Add methods to the WslUtils class to enable detection of a WSL distribution, and also determine which WSL version is being used. Version 1 uses the Windows NT kernel and runs the distribution in the same user-mode space as Windows programs. Version 2 uses a light-weight VM to host a real Linux kernel, and runs the distribution also inside the VM; interop with Windows is achieved using other mechanisms.",0
63,app: show exception stack trace if tracing enabled,0.57392627,Initial TRACE2 tracing events #1045,Split the web browser check from the desktop session checks. In future commits we will enhance the browser-check to take in to account the WSL special case.,0
64,Merge pull request #702 from GitCredentialManager/dependabot/github_actions/actions/download-artifact-3,0.59075785,Migrated release process from Azure DevOps to GitHub actions (#707),Add abstractions to the IFileSystem interface for enumerating directories and reading the entire contents of a file to a string.,0
65,Merge pull request #386 from ldennington/update-linux,0.502197,"Fix winget publishing (#332, #338)",Also check for the WAYLAND_DISPLAY environment variable when determining if a graphical session/display exists for POSIX systems.,0
66,Fix docs/x.md relative links (#938),0.65115285,Check for broken links in documentation (#700),"We had a virtual member call in the constructor of the various IEnvironment implementations, which is a code smell. Instead, lazily populate the _variables cache dictionary, and add an explict Refresh method to refresh the cache. We call Refresh in the SetEnvironmentVariable method for convenience. For testing we simply pipe through the pre-computed variables in the internal constructor.",0
67,Merge pull request #887 from GitCredentialManager/dependabot/github_actions/actions/setup-dotnet-3.0.1,0.6139473,Align with dotnet-supported Linux distributions (https://github.com/GitCredentialManager/git-credential-manager/pull/953),Add support for remote URL-scoped enterprise default settings. Fixes #983,0
68,docs: update docs for new credstore options,0.5102948,Add option to use the new DPAPI-based credential store on Windows (#464),Add support for remote URL-scopes enterprise default settings.,0
69,proxy: treat empty proxy settings as reset value,0.68439215,"Allow hostname-specific proxy override to use no proxy (#442, #449)","We are creating a WindowsProcessManager implementation on macOS and a non-Windows/WSL aware, plain ProcessManager on Windows - this is the reverse of what we should do. Fix this.",0
70,Merge branch 'release' into master,0.36102292,- Renamed the main executable from git-credential-manager to git-credential-manager-core to allow for easier side-by-side use with Java GCM and Windows GCM during the preview (#70),"We are creating a WindowsProcessManager implementation on macOS and a non-Windows/WSL aware, plain ProcessManager on Windows - this is the reverse of what we should do. Fix this.",0
71,install from source: clean up comments,0.45959738,Validate installers before publishing (#813),"This change adds the child_start and child_exit events to GCM's TRACE2 tracing system. The first patches are either bug fixes or prep for the bigger refactors involved in making child start and exit work. The first patch puts sid-related logic into its own class, which allows us to immediately set up GCM's sid in Program.cs to ensure Git processes that are executed before TRACE2 tracing is set up have the correct parent sid. The next patch adds a FileWriter class and uses it (rather than Trace2StreamWriter) to write to files, which ensures processes aren't overwriting one another's data. The third patch adds a snake casing string extension to ensure we write multi-word enum values according to the TRACE2 convention. The fourth patch ensures we do not redirect stderr for Git-related processes, as it was discovered to cause deadlocks when TRACE2 was enabled. The fifth patch refactors GCM's diagnostics to depend on an instance of CommandContext rather than individual dependencies within CommandContext. The sixth patch re-configures TRACE2 to depend on an instance of CommandContext rather than individual dependencies within CommandContext, to start up earlier, and for operations to no-op if Trace2 has not yet been initialized (i.e. when child git config processes run before we're able to set up tracing). The seventh patch wraps Process.cs to give us the needed level of control to write TRACE2 child process start and exit events. The eighth patch (finally) adds the new child start and exit events.",0
72,configure: handle subsequent empty entries after GCM,0.5416009,Add ability to read GCM default settings from the Windows Registry (#404),Write the TRACE2 child_start and child_exit events for each child process invoked by GCM.,0
73,oauth: provide UI prompts for generic OAuth auth,0.7379468,Generic OAuth support via config 🎉 #1062,"Wrap the Process class to allow finer-grained control for writing future process-related TRACE2 events. Pull process-relevant information out of IEnvironment/Environment and into its own process-oriented ProcessManager class, interface, and child classes. This allows us to  maintain a functional, non-circular order of dependencies with our process wrapper. Add a ChildProcess class to wrap certain functionality of Process.cs. This gives us the level of control required to write child process information to TRACE2 in the final patch in this series. Update all current invocations of Process to instead use this wrapper.",1
74,"main: drop the useless ""Run!"" comments from prog.cs",0.44145834,Reduce warnings from tests (#337),"The TRACE2 child start and child exit events will require some refactoring around the way GCM handles processes to provide finer-grained control and the ability to capture process-related information. In preparation for this, we need to do some re-organization of the Trace2 code. With this change we:  Move TRACE2 tracing startup into Program.cs for GCM and the helper exes. This allows us to start tracing earlier and capture more events. Add an Initialize() method to Trace2.cs to detect whether Trace2 tracing is enabled and set long-lived variables. This also sets a new _initialized property that allows us to determine whether Trace2 tracing has been initialized. Trace2 tracing is disabled until _initialized is set to true by the Initialize() method. Change the name of TryParseSettings() to InitializeWriters() for improved clarity. Pass the CommandContext to Trace2 to use its Streams and Environment.",0
75,Add HttpClientFactory tests; include Cache-Control header,0.6030605,Auto-detect on-premises/self-hosted providers via HTTP headers (#262),"Diagnostics classes are dependent on multiple pieces of the CommandContext. Adding child start and child exit events will mean yet another dependency (Trace2). To simplify in anticipation of this, update Diagnostic classes to take in the CommandContext and access applicable dependencies from it.",0
76,Merge pull request #224 from mjcheetham/fix-nbgv,0.45995423,Fix WSL configuration instructions (#479),"When a new process is created, standard error can optionally be redirected. This is useful in situations where the output is verbose and should be suppressed rather than output to the console, for example. However, this can cause an issue with TRACE2 deadlocks, as Git writes to standard error and GCM does nothing. This change corrects this by not redirecting standard error for Git-related processes (which also extends to places such as Environment.cs, given Git's reliance on envars). Finally, there are some places where we should still redirect standard error for the reason mentioned above. For these scenarios, comments have been added to help readers understand the purposeful nature of these redirects.",0
77,Updated to .NET 6,0.85365415,"Upgraded to .NET 6.0 (#635, #640)","The TRACE2 convention is for multi-word event names to be written in snake case (all lower case with words separated by underscores). While up until this point we've had single-word event names, this series will add the multi-word child start and child exit events. In anticipation of that, this change adds a string extension that will be used in later patches to write multi-word enum values in snake case.",1
78,remove copyright headers from .cs files,0.39998686,Update documentation to use reference-style links (#680),"Our current strategy of using a Stream to write to files for Trace2 tracing is not working - Git processes are overwriting GCM's data and vice versa. To resolve this, switch from using the Trace2StreamWriter to write to files to a dedicated Trace2FileWriter class. This also includes a refactor to add a parent base class for Trace2Writers for shared functaionality between the Trace2StreamWriter and Trace2FileWriter.",0
79,docs: add Architecture overview,0.5085352,Codebase and build improvements (#49),"Create static class to manage session ids (sids). This allows us to immediately set up GCM's sid in Program.cs to ensure Git processes that are executed before Trace2 tracing is set up have the correct parent sid. We also use it to give helper exes unique child sids. Although this will also execute when TRACE2 tracing is not enabled, it should not be an issue - it will simply set the (unused) GIT_TRACE2_PARENT_SID varible for the process to a GUID.",0
80,Merge pull request #131 from mjcheetham/win-x86,0.4595572,Fix WSL configuration instructions (#479),"The GitCredentialManager org is being re-named to git-ecosystem. In light of this, update references to GitCredentialManager to instead reference git-ecosystem.",0
81,Attempting with hard-coded values,0.39186952,"- Codebase and build improvements (#29, #33)",Bumps mjcheetham/update-homebrew from 1.2 to 1.3.,0
82,release: correct nupkg path for publishing (#995),0.5426198,Fix computation of installation path on Linux/single-file publish (#310),Bumps mjcheetham/update-homebrew from 1.2 to 1.3. - Release notes - Commits  updated-dependencies: - dependency-name: mjcheetham/update-homebrew   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] support@github.com,0
83,gitlab: add shared UI project,0.6774559,- GitHub,"The GitCredentialManager org is being re-named to git-ecosystem. In light of this, update references to GitCredentialManager to instead reference git-ecosystem.",0
84,git: add GitVersion type and Version property to IGit,0.6481089,- GitHub,"If a username is specified in the remote URL then include this as a login hint when performing OAuth authentication for GitHub. This can help users of multiple accounts select the correct account before the OAuth flow completes and returns a token for the wrong account. GitHub shows this nice prompt when a login hint is provided that does not match the currently logged-in user:  At the same time, if there is no logged-in user, then the login page's username box is already filled in:  The login hint is specified to GitHub via the extra login query parameter to the authorization endpoint.",0
85,Convenience config for several popular GitLab instances,0.704708,- GitHub,"GCM currently ignores ports in URIs. This means attempting to authenticate to a URI with a port can lead to some unexpected behavior (e.g. shortcutting the provider auto-detect process won't work, even if the provider is set in config). This change adds support for ports by updating GetGitConfigurationScopes() to recognize them. This change also updates GetRemoteUri() to recognize paths with queries and fragments, as that issue was uncovered during the implementation of the GetGitConfigurationScopes() fix. Without it, input paths containing queries and/or fragments get saved as part of Uri.Path, which converts the query '?' and the fragment '#' to url encoding. I validated these changes with unit tests for applicable scenarios and by running a locally-compiled version of GCM with tracing enabled and the  following config set: credential.http://localhost:7990/bitbucket.provider bitbucket Trace logs showed that the override was recognized and auto-detection was skipped.",1
86,Merge pull request #707 from ldennington/release-process-migration,0.49353147,Migrated release process from Azure DevOps to GitHub actions (#707),"GCM currently ignores ports in URIs. This means attempting to authenticate to a URI with a port can lead to some unexpected behavior (e.g. shortcutting the provider auto-detect process won't work, even if the provider is set in config). This change adds support for ports by updating GetGitConfigurationScopes() to recognize them. This change also updates GetRemoteUri() to recognize paths with queries and fragments, as that issue was uncovered during the implementation of the GetGitConfigurationScopes() fix. Without it, input paths containing queries and/or fragments get saved as part of Uri.Path, which converts the query '?' and the fragment '#' to url encoding.",0
87,Remove build number from Azure pipeline files,0.49731767,Release pipeline fixes #995 #1009 #1061,Add a unit test to ensure that we do not allow overriding or replacing standard OAuth2 query parameters.,0
88,trace2: add comments,0.5476714,Initial TRACE2 tracing events #1045,If a username is specified in the remote URL then include this as a login hint when performing OAuth authentication for GitHub.,0
89,Merge pull request #446 from microsoft/codeql,0.44197357,"Fix a bug with using Microsoft Accounts with Azure Repos (#143, #148)",Add the ability to include extra query parameters in the authorization code grant request. This allows consumers of the OAuth2Client to customise the login experience that may include vendor specific args.,0
90,Specifying master branch,0.41605756,@mastercoms,,0
91,docs: fix debian uninstall instructions (#975),0.7007576,"Fix missing dependencies in Debian package (#506, #514, #528)","We should always try and drain standard output before waiting for the Git process to exit. We do this for all other calls that expect output, but missed the TryGet method. This is important if Git ever writes out so much data to stdout that we buffer the output, and then Git will not exit until it can finish writing (and we'd be waiting for Git to exit).",1
92,posix-session: check for Wayland display envars,0.5304779,Correctly detect a UI interactive session on all platforms (#95),Ensure that we don't try to dispose of the pipe client in the Trace2CollectorWriter when it hasn't been created yet.,0
93,git: split out IGit and IGitConfiguration files,0.6185992,Use native Git path interpolation for config values (#439),"We should always try and drain standard output before waiting for the Git process to exit. We do this for all other calls that expect output, but missed the TryGet method.",0
94,Merge pull request #709 from GitCredentialManager/dependabot/github_actions/github/codeql-action-2,0.5492635,Migrated release process from Azure DevOps to GitHub actions (#707),Ensure that we don't try to dispose of the pipe client in the Trace2CollectorWriter when it hasn't been created yet.,0
95,Document how to lint documentation,0.48305553,Unify documentation line length (#862),"Because we use dotnet publish (which requires a specific framework) to create the payload of our .NET tool package, the package is tied to the framework specified. This means that it will only work with the corresponding .NET SDK for that framework. In light of this, update the .NET tool install instructions to specify that users must download the latest .NET 6.0 SDK as a prerequisite for installing the package, since that is the framework for which we currently publish. This will also need to be updated whenever we upgrade to a new Target Framework. Additionally, remove Windows as a supported .NET tool platform. Since we currently target .NET Framework rather than .NET, the package cannot actually be installed on Windows.",0
96,github: add stub WPF-based UI helper for GitHub,0.7594703,WPF-based GitHub auth UI (#40),"Because we use dotnet publish (which requires a specific framework) to create the payload of our .NET tool package, the package is tied to the framework specified. This means that it will only work with the corresponding .NET SDK for that framework. In light of this, update the .NET tool install instructions to specify that users must download the latest .NET 6.0 SDK as a prerequisite for installing the package, since that is the framework for which we currently publish. This will also need to be updated whenever we upgrade to a new Target Framework. Additionally, remove Windows as a supported .NET tool platform. Since we currently target .NET Framework rather than .NET, the package cannot actually be installed on Windows.",1
97,linux: ensure symbols tarball contains symbols (#1061),0.67964375,Sign Linux tarball and .NET tool #985 ,Bumps lycheeverse/lychee-action from 1.5.4 to 1.6.1.,0
98,Merge pull request #800 from GitCredentialManager/dependabot/nuget/src/shared/Core/Newtonsoft.Json-13.0.1,0.4653687,Align with dotnet-supported Linux distributions (https://github.com/GitCredentialManager/git-credential-manager/pull/953),Bumps lycheeverse/lychee-action from 1.5.4 to 1.6.1. - Release notes - Commits  updated-dependencies: - dependency-name: lycheeverse/lychee-action   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] support@github.com,0
99,Simplify prompt API and update basic auth API,0.5588108,Improved usability for GitHub auth (#587),"Remove warning about being unable to set up tracing from Trace2 TryParseSettings method. This method should just check to see whether TRACE2 is enabled - if it is not, it does not need to warn the user, as we only collect traces from those who actively choose to opt in. Additionally, GCM's UI helpers are connected to the TRACE2 system via the Start() call in ApplicationBase.cs. Since this call records Version and Start events, ensure a corresponding Exit event is called before the helper process completes.",0
100,git: better gitcfg error and trace messages,0.6670683,Fix bug in Git config matching due due case sensitivity (#234),"The TRACE2 convention for thread naming is for each child process's main thread of execution to be named ""main."" In GCM, however, we encountered an issue with our UI Helper exes - their main threads of execution are named AppMain. To temporarily work around this issue, we default the thread name for all TRACE2 events to ""main"" (rather than changing GCM's process names). This will do for our current events, which are all called from the main thread of execution. However, it is important to note that future events (i.e. regions) will require deeper thought around the GCM/TRACE2 process model, as they will be called on threads from .NET's ThreadPool rather than the main thread of execution.",0
101,Remove build number from the Inno Setup file,0.50247633,Simplified build number included in artifact names (#638),"GCM's UI helpers are connected to the TRACE2 system via the Start() call in ApplicationBase.cs. Since this call records Version and Start events, ensure a corresponding Exit event is called before the helper process completes.",0
102,trace2: pass to GPG,0.6177306,Allow users to specify path to GPG executable for gpg credential store on Linux (#406),Fix an incorrectly-formatted Windows environment variable in rename.md.,0
103,build(deps): bump lycheeverse/lychee-action from 1.5.2 to 1.5.4,0.5401743,Speed up build graph (#924),,0
104,Merge pull request #842 from ldennington/ooo-template,0.51839924,Generic OAuth support via config 🎉 #1062,"Remove warning about being unable to set up tracing from Trace2 TryParseSettings method. This method should just check to see whether TRACE2 is enabled - if it is not, it does not need to warn the user, as we only collect traces from those who actively choose to opt in.",0
105,build(deps): bump lycheeverse/lychee-action from 1.5.0 to 1.5.1,0.5105655,Speed up build graph (#924),"Add initial TRACE2 functionality, including:  Small refactorings to make TryGetAssemblyVersion accessible outside of the DiagnosticCommand class and shared trace logic accessible from a TraceUtils class. Addition of a Trace2CollectorWriter class, which handles writing to the Telemetry Tool/OTel collector and a Trace2StreamWriter class, which handles writing to stderr/files. Basic TRACE2 functionality, including the ability to add writers to different format targets, logic to send messages to these writers, and the ability to release these writers before application exit. Support for session IDs. Ability for users to enable normal/event format targets. Writing Version, Start, and Exit events.",0
106,Merge pull request #803 from mjcheetham/macos-latest,0.4317281,Mac installer will now unlink the Java GCM via Homebrew if installed (#45),"Add TRACE2 exit event, following the pattern established with the version and start events.",0
107,Merge pull request #114 from mjcheetham/github-actions,0.45176,Migrated release process from Azure DevOps to GitHub actions (#707),"Write the TRACE2 version event, which identifies the event format version (currently hardcoded as 3 as it is in Git) and the version of GCM. Additionally, write the TRACE2 start event, which reflects the elapsed time and application arguments (including the application name). These are paired because the telemetry tool/OTel collector require both these events to be sent for a given session.",0
108,docs: update issue template for WSL tracing,0.60428566,Fix WSL configuration instructions (#479),"Add the infrastructure to detect whether a user has enabled the TRACE2 event format or normal format targets. This implementation has been designed to be extended to include the perf format target in a future series. Additionally it involved some refactoring/cleanup to set the Application Path and InstallationDirectory in the CommandContext, rather than in GCM/UI helper Program.cs files.",0
109,Copy steps from working ci pipeline,0.44210622,Speed up build graph (#924),"A key component of Git's TRACE2 tracing system is the session id (sid). This identifies the process instance to allow all events emitted by it to be identified. We check to see if a parent sid (i.e. from a Git process) exists. If so, we separate this sid from the GCM sid (a GUID) using a ""/"". If there is no parent sid, we simply generate a GUID for the GCM sid and use that. The above also requires addition of a new SetEnvironmentVariable() method in EnvironmentBase.cs to set the GCM-specific SID variable.",0
110,Merge pull request #318 from mjcheetham/downlevel-git-parse,0.4626689,Avoid using the newer --show-scope Git config option - work with downlevel Git versions (#318),"Add Trace2StreamWriter class which will be used to write to stderr or a file, based on the TextWriter that is passed to it. It will also adapt the output format based on the format target that is passed to it.",0
111,Merge pull request #163: Fix errors with 'git-credential-manager-core configure' with empty config,0.6085398,Fix reading empty Git configuration entry values (#215),Add the Trace2CollectorWriter class to accept Trace2 messages in the event target format and write them to the OTel Collector/Telemetry Service.,0
112,Merge pull request #104 from mjcheetham/bb-oauth,0.46548617,GHES OAuth support (#354),"Add initial TRACE2 functionality, including:  The ability to add writers (which will eventually write to Normal, Perf, and Event format targets). An abstract Trace2Message class. Logic to send Trace2Messages to writers. Ability to release writers prior to application exit.",0
113,issue templates: remove core suffix,0.5717357,Drop -core suffix from entry executable #551 ,"The implementation of TRACE2 tracing will require truncation of long file names just as TRACE does. To prepare for this, move this logic out of the TRACE class and into its own method in a new static TraceUtils class. Additionally, add a unit test to validate this logic.",0
114,nuget: use nuget.config to force only NuGet.org source,0.37608883,"Set the full path to standalone GCM Core installs, enabling overriding of bundled versions (#188, #199)","The implementation of TRACE2 tracing will require use of the TryGetAssemblyVersion method. To prepare for this, move this method out of the DiagnoseCommand class and into its own static class.",0
115,dotnet-tool: add GCM icon to tool nuget package,0.61073214,Distribute GCM as a dotnet tool (#886),"Add ability to provide OAuth-based authentication for generic hosts by way of simple Git configuration. When a remote URL does not match any known host provider plugin, the generic provider will now first check for OAuth configuration in the Git config or environment variables. If such config is available then we try and perform OAuth authentication. Support for device code flow is optional, and refresh tokens will be used if the service supports and returns them. Users can make use of existing Git config include to easily organise and share custom OAuth configurations.",0
116,Merge pull request #49 from mjcheetham/host-refactor,0.56215966,Fix a bug with host provider disposal (#272),,0
117,azrepos-cfg: only clear useHttpPath on Windows if no manager-core,0.4903919,Add workaround for Windows Broker (WAM) running as admin (#344),,0
118,feedback,0.45220298,Thanks to our contributors ❤️:,Add detection and use of GUI prompts for OAuth authentication.,0
119,traceutils: add traceutils,0.49648318,Initial TRACE2 tracing events #1045,Add the WPF based GUI implementation of the OAuth and device code generic prompts.,0
120,Catch OAuth refresh token errors for generic provider (#1196),0.68553984,Improved Bitbucket OAuth performance through verification of access token validity (#518),Add AvaloniaUI based implementations of the OAuth and Device Code generic UI prompts.,0
121,Merge pull request #449 from mjcheetham/proxy-noproxy,0.45888355,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)","Add shared view models and commands for the OAuth GUI prompts. Two new commands and VMs are added, one for the initial 'mode' selection, and another to display the device code.",0
122,Release: build and sign Linux installers,0.70091635,"The Linux support has currently only been tested on Ubuntu 18.04 and 20.04 on 64-bit Intel processors. The provided Debian package is not yet signed. Due to the varied nature of Linux distributions, you will need to select and configure a credential storage system manually – see more here: https://aka.ms/gcmcore-linuxcredstores.","Add support for storing and using OAuth refresh tokens. Prepend ""refresh_token"" as a subdomain to give better chances of avoiding a name clash compared with appending ""/refresh_token"" to the path component.",1
123,trace2: add exit event to UI helpers,0.5945998,Initial TRACE2 tracing events #1045,Add OAuth support for the generic provider offering browser (authcode grant) and device code (device auth grant) support. Device code and mode selection is initially only offered for TTY users.,0
124,Merge pull request #426 from microsoft/copyright,0.47209305,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)","Teach the Generic host provider to read configuration for OAuth-based authentication. These are largely parameters required for the OAuth2Client to be constructed including Client ID/Secret, Redirect URI and Scopes.",0
125,basic-ui: fix bug in VM property,0.4919626,- Various bug fixes and improvements,A user pointed out in a recent GCM issue that our symbols tarball does not actually contain symbols (see 1 for additional details). Fix the pack.sh script to package the correct files into the symbols tarball.,0
126,http: remove use of box drawing chars in warning output,0.89999306,Remove use of box drawing characters in warning output (#243),A user pointed out in a recent GCM issue that our symbols tarball does not actually contain symbols (see 1 for additional details). Fix the pack.sh script to package the correct files into the symbols tarball.,1
127,Merge pull request #345 from microsoft/wam-docs,0.59475636,Add workaround for Windows Broker (WAM) running as admin (#344),Fix a bug in a view model property for the basic credentials prompt; we should be updating the backing field and also raising the PropertyChanged event.,0
128,docs: nest Ubuntu install options and add configure,0.54217094,Fix Windows user-only installer configuration bug (#335),"GCM's documentation states that git's credential cache is supported on Windows. Unfortunately, due to lack of Unix socket support on Windows versions prior to Windows 10, this feature is not currently supported on Windows, so this change removes it from the list of platforms on which this credstore can be used. See this issue for more details.",0
129,Merge pull request #236 from mjcheetham/githubpatmode,0.48638844,Convert issue templates to YAML (https://github.com/GitCredentialManager/git-credential-manager/commit/24ae90a4bd18fec6edcc860281ff82f715588e44),"GCM's documentation states that git's credential cache is supported on Windows. Unfortunately, due to lack of Unix socket support on Windows versions prior to Windows 10, this feature is not currently supported on Windows, so this change removes it from the list of platforms on which this credstore can be used. See 1 for more details.",0
130,linux: add stub CredStore to select the best cred store API,0.44196856,Sign Linux tarball and .NET tool #985 , Swap scopes order to match GitLab UI Update casing to match https://github.com/GitCredentialManager/git-credential-manager/blob/main/docs/configuration.md,0
131,Merge pull request #867 from hickford/gitlab-config,0.510963,Fix reading empty Git configuration entry values (#215),,0
132,github: add explicit device code auth mode to UIs,0.73178935,Add explicit device code authentication for GitHub (#478),Convert incorrect use of it's to its.,1
133,Use the self-contained option,0.5299196,Add option to prevent interactivity (#91),,0
134,Merge pull request #244 from mjcheetham/libsecretfix,0.44265068,Fix a bug with handling libgit2 errors (#111),,0
135,docs: migrate install/resource README sections to new files (#937),0.5700542,Fix computation of installation path on Linux/single-file publish (#310),,0
136,Merge pull request #124 from mjcheetham/fix-winuiflag,0.5180002,Fix WSL configuration instructions (#479),,0
137,Use correct path sep. for macOS notarize step,0.6027708,Notarize the macOS installer and binaries to permit running on macOS Catalina 10.15 (#84),,0
138,Merge branch 'master' into net5.0,0.48386395,Move to .NET 5.0 on macOS and Linux (#288),,0
139,Merge pull request #512 from mjcheetham/msal-4.37,0.42330697,Fix WSL configuration instructions (#479),,0
140,Merge pull request #116 from mjcheetham/bbui,0.3867434,@WormJim ,,0
141,bb-test: update tests to await ICredential results,0.5660292,Reduce warnings from tests (#337),Bumps DavidAnson/markdownlint-cli2-action from 8.0.0 to 9.0.0.,0
142,Merge pull request #171 from mjcheetham/gh-oauthonly,0.5049079,GHES OAuth support (#354),Bumps DavidAnson/markdownlint-cli2-action from 8.0.0 to 9.0.0. - Release notes - Commits  updated-dependencies: - dependency-name: DavidAnson/markdownlint-cli2-action   dependency-type: direct:production   update-type: version-update:semver-major ... Signed-off-by: dependabot[bot] support@github.com,0
143,github: use correct window title for device code,0.51224923,"Add GitHub OAuth support and refreshed Windows UI (#101, #103)","While we added PGP signatures for tarballs in 7baac73, we did not notice that, while ESRP returns a file with the tar.gz extension, it is actually the signature file, not the tarball itself. Correct with this change and validate tarball moving forward so it doesn't happen again! Additionally, a user reported in #997 that the latest GCM Debian package didn't work on Debian distributions. It appears that the version of dpkg that ships with Debian does not support zstd compression. Enforcing xz compression resolves the issue. Finally, this provided an opportunity to clean up some unused variables in pack.sh for Linux and to ensure we check the architecture is found before attemping to use the ARCH variable. These changes were validated with this successful test run in my fork.",0
144,azrepos: add Azure authority cache,0.6803646,- Azure Repos,"The GCM Debian package currently fails to install on Debian with the following error: error: archive 'gcm-linux_amd64.2.0.886.deb' uses unknown compression for member 'control.tar.zst', giving up It appears that the version of dpkg that ships with Debian does not support zstd compression 1. Enforcing xz compression resolves the issue. This also provides an opportunity to clean up some unused variables in pack.sh and ensure we check the architecture is found before attempting to use the ARCH variable.",0
145,Merge pull request #517 from mjcheetham/discovery-setconfig,0.4544021,Fix WSL configuration instructions (#479),"While we added PGP signatures for tarballs in 7baac73, we did not notice that, while ESRP returns a file with the tar.gz extension, it is actually the signature file, not the tarball itself. Correct with this change and validate tarball moving forward so it doesn't happen again!",0
146,Merge pull request #179 from kyle-rader/user/kyrader/support-email,0.4009474,Align with dotnet-supported Linux distributions (https://github.com/GitCredentialManager/git-credential-manager/pull/953),"Something I noticed today, while looking for a way to install Git Credential Manager for Windows/ARM64.",0
147,Merge pull request #51 from microsoft/readme-updates,0.48927742,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)","At least in GitHub-flavored Markdown, that section title gets transformed into the anchor net-tool, not .NET-tool. Signed-off-by: Johannes Schindelin johannes.schindelin@gmx.de",0
148,wsl: use wslview to launch browser in Windows from WSL,0.87255514,Support the wslview command  to open the browser (#529),"Multiple Linux users have reported that they are unable to use Secret Service as their credential store, as GCM throws the following error: sec_free: Assertion `cell->requested > 0' failed. The root cause is that we're using the libsecret secret_value_get function to obtain secret data, then attempting to free the string with secret_password_free. It appears that secret_password_free is only meant to be used to free nonpageable memory [1], however. Removing this call fixes the issue, as verified with a successful git-credential-manager diagnose (which was previously failing with the above error). [1] secret_password_free manpage https://www.manpagez.com/html/libsecret-1/libsecret-1-0.18.6/libsecret-Password-storage.php#secret-password-free Fixes #793",1
149,Use force,0.2089892,Add option to prevent interactivity (#91),"Multiple Linux users have reported that they are unable to use Secret Service as their credential store, as GCM throws the following error: sec_free: Assertion `cell->requested > 0' failed. The root cause is that we're using the libsecret secret_value_get() function to obtain secret data, then attempting to free the string with secret_password_free(). It appears that secret_password_free() is only meant to be used to free nonpageable memory [1], however. Removing this call fixes the issue, as verified with a successful git-credential-manager diagnose (which was previously failing with the above error). [1] secret_password_free manpage https://www.manpagez.com/html/libsecret-1/libsecret-1-0.18.6/libsecret-Password-storage.php#secret-password-free",0
150,Add basic .pkg installer script,0.4926159,Include UI helpers in Debian package for Linux release; move GCM symlink to /usr/local/bin (#405),"When we began signing the .NET tool in 80cc677, we did not update the path used for publishing to nuget.org. Fixing with this change.",0
151,wpfui: add a WPF-based UI for generic cred prompt,0.627898,WPF-based GitHub auth UI (#40),"When we began signing the .NET tool in 80cc677, we did not update the path used for publishing to nuget.org. Fixing with this change.",0
152,Add initial version of Mac MSAuth helper using ADAL 2.5.1,0.6075289,Consume new MSAL library versions (#346),The changes from 3978b0e introduced a bug in the install from source workflow - we were attempting to copy binaries before publishing them! Fixing with this change. Validated with this passing workflow in my fork.,0
153,Make tests actually test mixed case input,0.3907249,Reduce warnings from tests (#337),The changes from 3978b0e introduced a bug in the install from source workflow - we were attempting to copy binaries before publishing them! Fixing with this change.,0
154,Return to building 64-bit in NetCore and NetFx on Windows,0.6178544,- Windows support (64-bit only) (#46),Update release workflow to:  Split the Linux build.sh script and the .NET tool pack-tool.sh script to more closely align with our compilation and packaging for macOS. Sign Linux tarball in addition to the Debian package.and sign/validate/publish .NET tool .nupkg. Sign/validate/publish the .NET tool .nupkg with every release.  I validated these changes with this successful workflow run in my fork.,0
155,winui: make SecurePasswordBox notify all changes,0.49590996,Security Fixes:,Update release workflow to sign the .NET tool payload and package and upload the nupkg with each release (in addition to publishing to nuget.org).,0
156,trace2: messages in new file,0.57154757,Initial TRACE2 tracing events #1045,Split pack-tool.sh into two scripts (layout.sh and pack.sh) to allow for payload and package signing.,0
157,win: target .NET Framework 4.7.2,0.6997397,Move to .NET Framework 4.7.2 on Windows (#283),Sign Linux tarball in addition to Debian package.,0
158,linux: use PosixSessionManager on Linux,0.53252816,Fix computation of installation path on Linux/single-file publish (#310),"Split the current build.sh script into 3 scripts: build.sh, layout.sh, and pack.sh. This has the advantages of decoupling building and packaging and more-closely reflects the process we use for building/packaging macOS binaries.",0
159,diagnose: add diagnose command,0.6967962,Add new diagnose command to help debug problems in the wild (#463),,0
160,windows: fix post install configure bug,0.7531692,Fix Windows user-only installer configuration bug (#335),Update Debian package uninstall instructions to reflect re-name of GCM Core to GCM. Fixes #973,1
161,github: make user/pass the default auth mode over TTY,0.6514983,- Fix TTY-based prompts for GitHub authentication (#30),Bumps DavidAnson/markdownlint-cli2-action from 7.0.0 to 8.0.0.,0
162,Merge pull request #23 from mjcheetham/podrepoupdate,0.4422,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)",Bumps DavidAnson/markdownlint-cli2-action from 7.0.0 to 8.0.0. - Release notes - Commits  updated-dependencies: - dependency-name: DavidAnson/markdownlint-cli2-action   dependency-type: direct:production   update-type: version-update:semver-major ... Signed-off-by: dependabot[bot] support@github.com,0
163,Update HttpClientFactory to use singleton client,0.5292102,"Add an OAuth2 client implementation with PKCE support (#99, #102)",Update Debian package uninstall instructions to reflect re-name of GCM Core to GCM.,0
164,msauth: update MSAL library packages to latest,0.8282339,Consume new MSAL library versions (#346),"Fix another bug in how we compute the Application Executable path on Windows. It some cases we can still get a relative/non-absolute path to the entry executable. If we get a filename/non-path from the native API calls then return null and fallback to using process/module image resolution instead. For .NET Framework on Windows, this is OK. We will want to revisit this on .NET (Core) on Windows, if and when we get around to that...",1
165,Merge pull request #456 from ldennington/upgrade-winget,0.5500214,"Fix winget publishing (#332, #338)","Fix a bug in the old-name warning detection that only presents on Windows when bundled with Git for Windows, and when configured using the shorthand config credential.helper=manager-core. In this scenario, our argv[0] is missing the "".exe"" extension (that's actually present in the file name of course) because ... mingw reasons. Instead of matching ""git-credential-manager-core.exe"" on Windows, just strip "".exe"" if present on Windows, and always match ""git-credential-manager-core"" on all platforms.",0
166,Merge pull request #401 from mminns/ISSUE-329-force-bitbucket-oauth,0.5532944,"Allow forcing OAuth authentication with Bitbucket host provider (#329, #401)","On Windows, when invoked as a partial name (e.g., manager) our command line argv[0] is just a file name, not a full file path! We incorrectly assumed that Environment.GetCommandLineArgs()[0] was always absolute! We should instead use AppContext.BaseDirectory that, in all circumstances tested, all on TFMs and OSs, all publish options, and as a .NET tool... returns the expected full, absolute path to the installation directory.",0
167,Convert prose ref links to snake-case,0.4810742,Update documentation to use reference-style links (#680),"Ensure that we don't return empty PATH values on Windows when splitting. It's common that on Windows the PATH can be inadvertently modified such that an empty value is included, and this can lead to weird resolution of executables using the current directory. As it stands, no existing codepaths would trigger this today when invoked by Git for Windows, but let's make sure this never happens in the future by mistake!",0
168,oauth: add ability to pass extra query params in authcode call,0.510445,Generic OAuth support via config 🎉 #1062,"If there is no hard-coded UI helper, we should gracefully handle the lookup by returning false, rather than crashing due to a argument exception when passing null or an empty string to a Path API.",0
169,libsecret: fix warning with move to net6.0 TFM,0.6187711,Fix a bug with handling libgit2 errors (#111),"Bumps lycheeverse/lychee-action from 1.5.2 to 1.5.4.  Release notes Sourced from lycheeverse/lychee-action's releases.  Version 1.5.4 What's Changed  Cleanup old lychee bin after install by @​mre in lycheeverse/lychee-action#172  Full Changelog: https://github.com/lycheeverse/lychee-action/compare/v1...v1.5.4 Version 1.5.3 What's Changed  Bump lychee version to fix issues with email checking by @​mre in lycheeverse/lychee-action#171  Full Changelog: https://github.com/lycheeverse/lychee-action/compare/v1...v1.5.3    Commits  4dcb8be bump version 0682ed6 Cleanup old lychee bin after install (#172) 02de231 Update lychee-actionn release in docs 0fcec0b Bump lychee version (#171) See full diff in compare view     Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)  ",0
170,"github: fix a typo in ""DotCom"" (- ""DotDom"")",0.5451851,- Fix TTY-based prompts for GitHub authentication (#30),"In 65cead2b5caa we removed the .NET Standard target in favour of a direct .NET 6 target, however we missed this conditional compilation symbol referrering to NETSTANDARD.",0
171,http: only wait for headers in HEAD calls,0.497828,Auto-detect on-premises/self-hosted providers via HTTP headers (#262),Bumps lycheeverse/lychee-action from 1.5.2 to 1.5.4. - Release notes - Commits  updated-dependencies: - dependency-name: lycheeverse/lychee-action   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] support@github.com,0
172,trace2: remove inaccurate warning and add UI helper exit calls (#1114),0.62200403,"Return non-zero code for UI helpers on error (#440, #441)","In 65cead2b5caa we removed the .NET Standard target in favour of a direct .NET 6 target, however we missed this conditional compilation symbol referrering to NETSTANDARD.",0
173,Add a generic provider supporting basic and NTLM auth,0.7097824,Updated generic provider to support all protocols (#712),"When we introduced the rename warning in #551, there was broken logic for resolving the actual invoked program name on Mac and Linux. Windows We continue to use CommandLineToArgvW(GetCommandLine(), ..) to return the absolute, full path to the entry executable. macOS Switch from _NSGetArgv() to _NSGetExecutablePath(..) which, like the Windows APIs above, returns the full path to the entry executable (or symlink). Linux As there is no equivalent to CommandLineToArgvW or _NSGetExecutablePath here, we instead do some path computation based on the form of argv[0] that we get from /proc/self/cmdline. - If the value is an absolute path, just use that. - If the value is relative to the current directory (./name) then combine this with the current directory. - If the value contains a directory separator (dir/name) then also resolve this from the current directory. - Otherwise, this argv[0] value must have been a file name (name) resolved from the $PATH. If we still don't manage to resolve from the $PATH, try and resolve the symlink /proc/self/exe that points to the executable image that was loaded from disk. Note that we may miss any intermediate link names here, but it's better than nothing.  In addition, we also never tested the .NET Tool scenario after updating the ICommandContext.ApplicationPath to use the entry executable name, whereas previously this was computed from the .NET assembly path. Introduce a separate concept, the InstallationDirectory that always points to the home of the core assemblies. This is used for resolving things like in-box UI helpers.",1
174,versioning: update Nerdbank.GitVersioning to latest,0.58832806,Improved usability for GitHub auth (#587),"Moving to target .NET 6 directly with the core library has unearthed a bug/warning in the secret service implementation. IntPtr is a value type, so it can never be null.. we should have been comparing this pointer to IntPtr.Zero.",0
175,Refactor to allow HostProviders to override store and erase,0.5013605,"Allow hostname-specific proxy override to use no proxy (#442, #449)","Our previous implementation of getting the native argv[0] was flawed on Linux and Mac. The Mac _NSArgv and Linux /proc/self/cmdline function/proc-file return the raw argv[0] which may not be an absolute or rooted path, but we expected this to be the same. Additionally, the logic of appending the CWD to the argv[0] value when the latter wasn't rooted was also just wrong! Update to now use _NSExecutablePath on macOS, which always returns the full absolute path, and add correct handling of unrooted argv[0] on Linux. Furthermore, on Linux, if we are unable to handle the value from /proc/self/cmdline, we fall back to resolving the /proc/self/exe symlink instead.",0
176,Issue 573 Write the results of GET command calls to the log,0.52372414,Consistently read from stdout before waiting for Git process exit (#1136),"Introduce a new property on the ICommandContext that represents the GCM installation directory, separate from the application executable path. The app executable is not always found in the installation directory if the app exe path is a symlink (or we're a .NET tool where the AppHost is outside of the tool store).",0
177,Update MSAL libraries and use new MSALRuntime-based broker implementation (#1191),0.7425827,Consume new MSAL library versions (#346),"There is a systematic bug in all the IFileSystem implementations in that we were incorrectly calling Path.GetFileName rather than Path.GetFullPath, meaning we're only comparing the file names of two paths for equality! Fix this. For Mac and Linux we also handle symlinks (or firmlinks) by now using the .NET APIs to resolve links. On .NET Framework we don't do anything.",1
178,Merge pull request #397 from mjcheetham/chmod,0.39815587,@mminns ,Update install-from-source.sh and validate-install-from-source.yml to align with dotnet-supported Linux distributions. Clarify in README.md that the dotnet-supported distributions are the only ones for which GCM guarantees support. Link to successful validation workflow: https://github.com/ldennington/git-credential-manager/actions/runs/3415831593,0
179,Make comparisons case insensitive,0.27108163,Reduce warnings from tests (#337),Update comment around GCM-supported distributions in README.md to reflect decision to align with dotnet-supported distributions.,0
180,Merge pull request #756 from mjcheetham/win-manifest,0.3692299,@mminns ,Update install-from-source script to align with dotnet's supported Linux distributions: https://learn.microsoft.com/en-us/dotnet/core/install/linux,0
181,fixup! docs: add WSL documentation,0.6870607,Fix WSL configuration instructions (#479),Bumps lycheeverse/lychee-action from 1.5.1 to 1.5.2.,0
182,Remove IsCredentialStoredOnCreation from IHostProvider,0.42341188,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)",Co-authored-by: Matthew John Cheetham mjcheetham@outlook.com,0
183,deb: fix Debian package build script,0.7025639,"Fix missing dependencies in Debian package (#506, #514, #528)",Bumps lycheeverse/lychee-action from 1.5.1 to 1.5.2. - Release notes - Commits  updated-dependencies: - dependency-name: lycheeverse/lychee-action   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] support@github.com,1
184,linux: add option for GCM_GPG_PATH environment variable,0.7276312,Allow users to specify path to GPG executable for gpg credential store on Linux (#406),"Replace netstandard2.0 where possible with net6.0, or dual target net6.0 and net472 for projects that are included on Windows.",1
185,Remove build number from csproj files,0.48866075,"Refactor namespace, assembly and project names (#500)","Update README docs links to point at release branch. The goal of this change is to avoid confusing users when we merge major changes (e.g. the executable rename, the dotnet tool install option, etc.) to main but have not yet released them. With this update, the documentation should align with the latest release.",0
186,Merge pull request #437 from mjcheetham/bb-async-fix,0.4586986,Fix a bug with host provider disposal (#272),"Update README docs links to point at release branch. The goal of this change is to avoid confusing users when we merge major changes (e.g. the executable rename, the dotnet tool install option, etc.) to main but have not yet released them. With this update, the documentation should align with the latest release.",0
187,Bumping mjcheetham/update-winget to v1.2.1,0.5820774,More winget publishing fixes (#353),Remove the trigger to automatically run the release workflow when changes are merged to the release branch. This will give us better control over our release process and allow us to make changes to the branch if needed without running the workflow.,0
188,Add and update documentation files,0.6642,Update documentation to use reference-style links (#680),,0
189,Merge pull request #373 from mminns/issue-267-auto-detect-bitbucket-dc,0.6900441,Autodetect Bitbucket DC instances (#373),"The Network diagnostic currently makes two passes of the tests, one using a 'raw' HttpClient and another using one created by the product HttpClientFactory. However, we've not actually been using the factory-built client in the tests! Furthermore, the raw HTTP client will not exercise test correctly if the machine is behind a corporate proxy, so let's just drop that option. Fixes #927",0
190,Mark GitHub support on Windows as done (with UI),0.74628687,"Add GitHub OAuth support and refreshed Windows UI (#101, #103)",Remove the trigger to automatically run the release workflow when changes are merged to the release branch. This will give us better control over our release process and allow us to make changes to the branch if needed without running the workflow.,1
191,Merge pull request #107 from mjcheetham/add-banner,0.3972349,Check for broken links in documentation (#700),"The Network diagnostic currently makes two passes of the tests, one using a 'raw' HttpClient and another using one created by the product HttpClientFactory. However, we've not actually been using the factory-built client in the tests! Furthermore, the raw HTTP client will not exercise test correctly if the machine is behind a corporate proxy, so let's just drop that option.",0
192,msauth: bump MSAL library versions,0.7909745,Consume new MSAL library versions (#346),Change absolute paths to relative paths in install.md to remain consistent with the style used in other files.,1
193,Merge pull request #153: Use OAuth by default on GitHub,0.6163174,Add preliminary support for OAuth with GitHub AE (requires server support/changes) (#343),"Some link references were broken, e.g. [gcm-wsl]: docs/wsl.md led to .../docs/docs/wsl.md (note 2 docs in path) This PR fixes those links to properly point to .../docs/x.md (1 docs in path)",0
194,gitlab: add WPF-based UI helper on Windows,0.7003112,WPF-based GitHub auth UI (#40),"Some link references were broken, e.g. [gcm-wsl]: docs/wsl.md led to .../docs/docs/wsl.md (note 2 docs in path) This PR fixes those links to properly point to .../docs/x.md (1 docs in path)",1
195,refresh token,0.48937592,Improved Bitbucket OAuth performance through verification of access token validity (#518),"In an effort to make the README more concise, move install instructions/additional resources into new install.md and docs/README.md files.",0
196,release: publish draft release to GitHub,0.65255773,Initial release of Git Credential Manager Core with beta support for...,"In an effort to make our README more concise, move additional resources into a new docs/README.md file.",0
197,Merge pull request #718 from samuel-lee-msft/patch-1,0.4589029,Fix WSL configuration instructions (#479),"In an effort to make our README more concise, move GCM install instructions into a new install.md file. Additionally, add a section detailing how to install GCM as a dotnet tool.",0
198,Merge pull request #739 from mjcheetham/cred-noop,0.40738276,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)","When building the entire solution, we need to ensure the various ""Installer."" and ""Packaging."" projects are not built at the same time as other projects, especially on Windows, where we may hit file locking problems. The installer projects call a build script internally that calls a dotnet publish on various projects. By making the installer projects reference (but not consume) the dependent projects we ensure MSBuild won't build them until the end, and prevent file access errors. At the same time, we can probably remove the ""-m:1"" flags that tell MSBuild to only build one project at a time.",0
199,browser: split browser-check from desktop session check,0.54757977,Correctly detect a UI interactive session on all platforms (#95),build(deps): bump actions/setup-dotnet from 3.0.2 to 3.0.3,0
200,github: move OAuth option to top of Windows dialog,0.7126233,"Add GitHub OAuth support and refreshed Windows UI (#101, #103)",Bumps actions/setup-dotnet from 3.0.2 to 3.0.3. - Release notes - Commits  updated-dependencies: - dependency-name: actions/setup-dotnet   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] support@github.com,1
201,Merge pull request #241 from AlexanderLanin/subdomain,0.41631263,Fix NTLM proxy authentication (#216),This adds support for another popular OSS project (KDE) to Git Credential Manager.,0
202,oauth: ensure auth grant redirect URI matches token req,0.53250664,Improved Bitbucket OAuth performance through verification of access token validity (#518),Accidentally left off the [DllImport] attribute when adding this extern.. now it'll actually point to the correct function in the DLL.,0
203,build: fix/speed-up build graph dependencies (#924),0.80645144,Speed up build graph (#924),"When building the entire solution, we need to ensure the various ""Installer."" and ""Packaging."" projects are not built at the same time as other projects, especially on Windows, where we may hit file locking problems. The installer projects call a build script internally that calls a dotnet publish on various projects. By making the installer projects reference (but not consume) the dependent projects we ensure MSBuild won't build them until the end, and prevent file access errors. At the same time, we can probably remove the ""-m:1"" flags that tell MSBuild to only build one project at a time.",1
204,Issue 573 Add support for OAuth2 for Bitbucket DC,0.8972784,Bitbucket DC OAuth support (#607),,1
205,osx: remove native MS auth component on macOS,0.6261414,Trivially fix the macOS native helper crashes by deleting it 😅 (#264),"This required fixing some newly found lint issues. Additionally some issues are in files (workflow templates) that are structured in such a way that do not easily allow correction, so I have adjusted the linter configuration to ignore these files for now. They could instead be corrected in a later commit.",0
206,Merge pull request #604 from mjcheetham/fix-wsl-doc,0.59062004,Fix WSL configuration instructions (#479),"Rename the main entry executable from git-credential-manager-core(.exe) to simply git-credential-manager(.exe), now that the older GCM4W has been removed from the Git for Windows project as an option (and the GCMC project has been renamed). We do not rename the Debian package ID, nor the Homebrew Cask name yet as this will require more thought forr migration. To help with migration somewhat, create symlinks and shim/copy-executables for the original executable name ""git-credential-manager-core(.exe)"" for consumers who have not updated to the new version. We detect if the consumer is launching us via the ""-core"" symlink or executable shim by consulting the platform-native APIs to get the original ""argv[0]"". All of the .NET APIs sadly don't give us the real ""argv[0]"", so we need to use native APIs... If we detect use of the old name, print a warning that the user should update their configuration, and a help link for more information.",0
207,build: fix/speed-up build graph dependencies,0.7822792,Speed up build graph (#924),"Add documentation with information about the GCM.exe rename, and how to fix-up any configuration after the change. The aka.ms/gcm/rename shortlink points to this document.",1
208,Add review suggestions,0.41753733,Thanks to our contributors ❤️:,"Create symlinks and shim/copy-executables for the original exec ""git-credential-manager-core(.exe)"" name for consumers who have not updated to the new name. We detect if the consumer is launching us via the ""-core"" symlink or executable shim by consulting the platform-native APIs to get the original ""argv[0]"". All of the .NET APIs sadly don't give us the real ""argv[0]"", so we need to use native APIs... If we detect use of the old name, print a warning that the user should update their configuration, and a help link for more information.",0
209,credstore: add support for custom cred namespaces,0.46671766,Add option to use the new DPAPI-based credential store on Windows (#464),,0
210,Merge pull request #287 from microsoft/git-credential-cache,0.5250551,Migrated release process from Azure DevOps to GitHub actions (#707),"This required fixing some newly found lint issues. Additionally some issues are in files (workflow templates) that are structured in such a way that do not easily allow correction, so I have adjusted the linter configuration to ignore these files for now. They could instead be corrected in a later commit.",0
211,Fix inline HTML,0.43318307,"~Set MSAL embedded webview window title to give more context to the user (#347, #239)~ Not working currently (see here)",Add icon to dotnet tool NuGet package,0
212,document new option,0.44103247,Add option to prevent interactivity (#91),We missed the core UI helper from the dotnet tool package - include it!,0
213,Merge pull request #99 from mjcheetham/oauth2,0.47837746,"Add an OAuth2 client implementation with PKCE support (#99, #102)",Fix a bug that was introduced in an earlier PR to build the Core UI helper (WPF) for Windows. We don't need to specify the TFM or RID for these projects.,0
214,provider-spec: add host provider specification,0.69276005,"Improve host provider auto-detection logic (#384, #481)",Add the GCM icon to the NuGet package used for the dotnet tool. The image is copied to the root of the package under a new images directory (/images). The tool payload continues to be copied under the required /tool/net6.0/any directory. Modify the pack-tool.sh script to keep all build output under the /out directory of the repository (which is in .gitignore). Output from running pack-tool.sh now looks like this: . └── out     └── shared         └── DotnetTool             └── nupkg                 └── Debug                     ├── git-credential-manager.$VERSION.nupkg                     ├── images       # icon                     ├── payload      # dotnet publish output                     └── payload.sym  # pdbs The contents of the NuGet package looks like this: . ├── [Content_Types].xml ├── _rels ├── git-credential-manager.nuspec ├── images │   └── icon.png          # copied from the output images/ dir ├── package │   └── services │       └── metadata/... └── tools     └── net6.0         └── any/...       # copied from the output payload/ dir,0
215,Merge pull request #648 from ldennington/fix-linux-compile,0.54487246,Fix computation of installation path on Linux/single-file publish (#310),"Explicitly pass the version and build configuration to the dotnet tool packaging script. Also revert to a default Debug config for local builds; this is consistent with all other artifacts in the build for dev (macOS pkg, Windows installers, deb, etc)",0
216,GitConfiguration: be careful about key-value pairs,0.6300853,Fix bug in Git config matching due due case sensitivity (#234),build(deps): bump actions/setup-dotnet from 3.0.1 to 3.0.2,0
217,Fix azrepos link,0.49951094,- Various bug fixes and improvements,Include git-credential-manager-ui.exe in installer,0
218,Merge pull request #630 from ldennington/install-from-source,0.49921638,Fix WSL configuration instructions (#479),"Rename the main entry executable from git-credential-manager-core(.exe) to simply git-credential-manager(.exe), now that the older GCM4W has been removed from the Git for Windows project as an option (and the GCMC project has been renamed). We do not rename the Debian package ID, nor the Homebrew Cask name yet as this will require more thought for migration.",0
219,Updating gcm winget-release to use latest task version and manifest fields,0.5714458,More winget publishing fixes (#353),We forget to include the core UI helper (WPF) in the Windows installer manifest.. add it!,0
220,Merge pull request #41 from mjcheetham/windows-installer,0.48023683,Add workaround for Windows Broker (WAM) running as admin (#344),Bumps actions/setup-dotnet from 3.0.1 to 3.0.2. - Release notes - Commits  updated-dependencies: - dependency-name: actions/setup-dotnet   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] support@github.com,0
221,Ensure we start child processes created with ProcessManager (#1177),0.4074806,Auto-generate maintainer away notification issues (#842),dotnet tool: rename package,0
222,libsecret/secretservice: rename libsecret -> secretservice,0.54648924,Allow use of older versions of libsecret such as in Ubuntu 18.04 (#244),"Change the name and author of the dotnet tool package from GitCredentialManager.Cli to git-credential-manager. The reason for this change is that we were able to transfer ownership of this package (which was previously owned by JetBrains) to the git-credential-manager organization on NuGet.org.  There should not be any customer impact related to this change, as the GitCredentialManager.Cli package had yet to be published.",0
223,Merge pull request #337 from derrickstolee/fix-warnings,0.5069089,"Fix winget publishing (#332, #338)",release: package gcm as dotnet tool,0
224,uninstall instructions on linux,0.5341077,Fix computation of installation path on Linux/single-file publish (#310),"Add a new DotnetTool project containing the needed files to publish GCM as a cross-platform dotnet tool. Additionally, update GCM to use helper dlls if exes are not found in the Application directory. At present, dlls are only used in the dotnet tool scenario to minimize the package size and to make it cross-platform compatible.",0
225,generic: update generic provider to support all protocols,0.9298904,Updated generic provider to support all protocols (#712),build(deps): bump actions/checkout from 3 to 3.1.0,1
226,diagnose: don't await Git exit on config list,0.6587453,Consistently read from stdout before waiting for Git process exit (#1136),Issue/573 OAuth2 support for Bitbucket DC,0
227,Merge pull request #797 from ldennington/ssl-cert-updates,0.4759069,Fix WSL configuration instructions (#479),Document how to lint documentation,0
228,CI: update configuration to build native bits,0.52447784,Codebase and build improvements (#49),Replace githubusercontent images,0
229,Merge pull request #406 from vdye/356-manually-specify-gpg-path,0.5314642,Allow users to specify path to GPG executable for gpg credential store on Linux (#406),Updates RFC links to authoritative URL,0
230,docs: remove gcmcore from test data,0.5365133,Reduce warnings from tests (#337),docs: use short link for Linux install src,0
231,Add basic framework for Git Credential Manager,0.7755797,Initial release of Git Credential Manager Core with beta support for...,build(deps): bump actions/setup-dotnet from 3.0.0 to 3.0.1,1
232,Merge pull request #472 from mjcheetham/combined-ui,0.42047057,Fix WSL configuration instructions (#479),Adds a brief section to the docs/document.md on how linting of documents is done.,0
233,Simplify Linux build script into just build.sh,0.45098275,Fix computation of installation path on Linux/single-file publish (#310),Fixes #863,0
234,Merge pull request #201: Setup Microsoft ESRP Signing for .deb installer,0.49584174,Validate installers before publishing (#813),"The current URLs use an outdated source. The rfc-editor.org site is stated to be the authoritative source, see aaragraph 3 on https://www.ietf.org/standards/rfcs/. The redirection used at the existing URL cause the later versions of the link checker to fail for the instances in the documentation. However, instances in the source code comments have also been updated.",0
235,Fixing manifest,0.52661,- Various bug fixes and improvements,Use a short link for the Linux install from source script. Signed-off-by: Matthew John Cheetham mjcheetham@outlook.com,0
236,msauth: integrate with shared MS dev tool cache on macOS,0.8077507,Share the MSAL token cache with Microsoft developer tools on macOS as we already do on Windows (#275),Bumps actions/checkout from 3 to 3.1.0. - Release notes - Changelog - Commits  updated-dependencies: - dependency-name: actions/checkout   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] support@github.com,1
237,homebrew release: update regex and remove PR,0.49151343,Discontinued incorrect use of Homebrew Git shim (#731),Update docs/environment.md and docs/configuration.md to document the new configuration options for managing Bitbucket DC OAuth2 Client ID and Client Secrets Update docs//bitbucket-development.md to document how to create a test Bitbucket DC environment and OAuth2 setup,0
238,Add ISystemPrompts component and impl for Windows,0.52285033,Split the Windows installer into user- and system-wide 'flavours' (#197),New implementations of the interface IBitbucketRestApi and abstract class BitbucketOAuth2Client provide client code for interacting with the Bitbucket DC REST API and OAuth2 implementation. Extending the BitbucketRestApiRegistry and OAuth2ClientRegistry to provide these Bitbucket DC implementations when a DC host is detected means BitbucketAuthentication and BitbucketHostProvider remain agnostic about which form of Bitbcuket host they are interacting with Prior to this feature users were limited to using Basic Auth or HTTP Access Tokens to interact securely with a Bitbucket DC instance. OAuth2 provides a better solution for SSO environments,0
239,docs: update WSL instructions for standalone GCM paths,0.58971083,Fix WSL configuration instructions (#479),The BitbucketAuthentication and BitbucketHostProvider remain the single points of entry to processing authentication for all Bitbucket hosts. Bitbucket DC and Bitbucket Cloud do not share common REST APIs or common OAuth2 implementations. The interface IBitbucketRestApi and abstract class BitbucketOAuth2Client effectively hide the differences in implementation from BitbucketAuthentication and BitbucketHostProvider The interface IBitbucketRestApi and abstract class BitbucketOAuth2Client provide clear extension points to implement OAuth2 support for Bitbucket DC,0
240,winui: add shared validation helpers,0.5182038,Improved Bitbucket OAuth performance through verification of access token validity (#518),"Use the WriteDictionarySecrets() method to safely log the dictionary of data that will be written back to the calling Git process When it is necessary to follow the processing in GCM during a call from Git the GCM_TRACE environment variable can be used to print trace information to standard error, however the ultimate output of GET commands would not be included in this trace information This lack of visibility is especially problematic during multi-stage authentication such as OAuth, adding safe logging of the final output makes it possible to follow the GCM process in realtime from inputs to outputs during Git GET requests",0
241,Merge pull request #713 from mjcheetham/bb-links,0.48381752,Check for broken links in documentation (#700),Bumps actions/setup-dotnet from 3.0.0 to 3.0.1. - Release notes - Commits  updated-dependencies: - dependency-name: actions/setup-dotnet   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] support@github.com,0
242,xui: add base dialog window control,0.6054975,Add native basic credential UI prompts for Windows (#92),build(deps): bump actions/setup-dotnet from 2 to 3.0.0,0
243,Merge pull request #790 from cornejom/gitlab-support-docs,0.5215941,Add support for using WSL Git configuration (#461),release: fix Windows archives,0
244,Merge pull request #420 from microsoft/wam-doc-improvements,0.5867075,Add workaround for Windows Broker (WAM) running as admin (#344),"When we transitioned our release workflow to GitHub actions, we started using Powershell's Compress-Archive cmdlet to zip our Windows binaries. However, this unfortunately does not play nicely with unzip in WSL. Since we're publishing the archives from an Ubuntu machine, switch to creating the archives with the zip command in the default bash shell to correct the issue.",0
245,"trace2: add default thread name value of ""main""",0.44550362,Initial TRACE2 tracing events #1045,Bumps actions/setup-dotnet from 2 to 3.0.0. - Release notes - Commits  updated-dependencies: - dependency-name: actions/setup-dotnet   dependency-type: direct:production   update-type: version-update:semver-major ... Signed-off-by: dependabot[bot] support@github.com,0
246,Merge pull request #508 from julescubtree/update-contributing-guide,0.46793598,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)",Add generic username/password UI to all platforms,0
247,azrepos: add commands to manager user bindings,0.47681582,Use System.CommandLine to handle our command line parsing and allow host providers to offer custom commands (#273),,0
248,trace2: detect event/normal formats,0.7079642,Initial TRACE2 tracing events #1045,Replace calls to the native system UI prompts with shelling out to the generic helper UI.,1
249,Add Azure Repos host provider configuration component,0.7171159,- Azure Repos,Add a WPF/Windows UI prompt for the generic/basic username and password prompt.,1
250,build: use new Microbuild signing tasks,0.5294451,Codebase and build improvements (#49),Add an Avalonia-based UI prompt for the generic/basic credential prompt.,0
251,Add documentation comments to public types and members,0.5048125,Update documentation to use reference-style links (#680),Add a generic credentials prompt view model and command for collecting username/passwords.,0
252,Fix incorrect value separator in docs for github auth modes,0.5385145,Use native Git path interpolation for config values (#439),Add config for several popular GitLab instances to docs,0
253,docs: fix rotten links,0.6512849,Check for broken links in documentation (#700),,0
254,Merge pull request #871 from mjcheetham/generic-ui,0.44415393,Generic OAuth support via config 🎉 #1062,Include the images resource across all the Avalonia UI applications.,0
255,whitespace,0.3143365,@4brunu,"For some reason on macOS windows that are activated are not appearing on top, and get lost behind other application windows. The platform implementation on macOS is seemingly correctly calling the makeKeyAndOrderFront native windowing API, but it's not being made ""key and front"". Setting the ""topmost"" flag true (and then false again) brings our windows to the front, which is what we want.",0
256,Docs: Add explanation to git configuration command,0.61683315,Add support for using WSL Git configuration (#461),,0
257,trace2: capture thread name,0.58222187,Initial TRACE2 tracing events #1045,Unify line length across docs,0
258,release: update Azure storage resource names,0.6450433,- Azure Repos,Co-authored-by: Lessley Dennington ldennington@github.com,0
259,documented behavior under credential.useHttpPath,0.5616847,"Respect http.sslCAInfo settings (#242, #411)",,0
260,install: update usage of Git config,0.7043526,Ensure git-credential-manager-core command is available after Debian package install (https://github.com/GitCredentialManager/git-credential-manager/pull/650),,1
261,trace2: guard against null pipe client in dispose,0.8209186,Guard against null pipe client (#1135),,1
262,Detect github.my-company-server.com as GitHub,0.70755213,Git Host Providers:,Switch to reference style links,1
263,windows-broker: exclude WinServer2016 from WAM support,0.73714393,Updated WAM support to only include applicable OSes (#629),,1
264,"docs(install): fix link to the "".NET tool"" section",0.56567705,Move to .NET Framework 4.7.2 on Windows (#283),,0
265,linux: add IFileSystem impl for Linux,0.52610505,Fix computation of installation path on Linux/single-file publish (#310),,0
266,Update Azure Repos REST API class to reuse it's HttpClients,0.7391974,- Azure Repos,,1
267,github: enable OAuth2 device code flow for GitHub,0.71640927,OAuth Device Authorization Grant support for GitHub (#147),,1
268,Merge pull request #139 from mjcheetham/svg,0.38422078,@mminns ,,0
269,Merge pull request #579 from mjcheetham/bb-oauth-shortcut,0.41981032,Fix WSL configuration instructions (#479),release: access Azure Storage Account with login credentials,0
270,secret service: fix error creating credential,0.6034453,Security Fixes:,Use --auth-mode login command to access ESRP Azure Storage Account instead of AZURE_STORAGE_KEY. This allows us to reuse the git-fundamentals-esrp service principal login credentials we're already using for other resources and is a more secure mode of access than using the storage key.,0
271,Merge pull request #134 from mjcheetham/github-samlsso,0.44275755,Discontinued incorrect use of Homebrew Git shim (#731),install from source: use native feeds for Ubuntu 22.04,0
272,Fix bare URLs,0.43642282,Auto-detect on-premises/self-hosted providers via HTTP headers (#262),workflows: auto-generate maintainer away issue,0
273,fix missing space in username input,0.43662083,Add generic username/password UI (#871),Add a new workflow to create issues that will notify GCM users and contributors of when maintainers are away and the repo is not being actively monitored. This workflow is controlled by a workflow_dispatch trigger that requires both a start date and end date for maintainer absence before running.,0
274,Merge pull request #54 from mjcheetham/gitcfg,0.45838767,Add support for using WSL Git configuration (#461),Update comments in the install from source script so that:  Sentences begin with capital letters. Sentences end with punctuation. Comments are within 80 characters per line.,0
275,introduce new windows-broker doc,0.66244614,Split the Windows installer into user- and system-wide 'flavours' (#197),"The dotnet team recently added support for installing natively from Jammy feeds on Ubuntu 22.04: https://github.com/dotnet/core/issues/7699 This unfortunately created problems with our current install from source script, as it caused conflicts with the packages.microsoft.com feed we use for Debian/Ubuntu. This change modifies the Debian/Ubuntu dotnet install process to install from Jammy feeds for users on Ubuntu 22.04 and greater while continuing to use the packages.microsoft.com feed for Debian and older Ubuntu versions.",0
276,dependencies: update Microsoft.NET.Test.Sdk and Avalonia,0.67592937,Fix release builds .NET SDK version (#358),release: add installer validation,0
277,Merge pull request #34 from mjcheetham/issue-templates,0.4557272,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)","Add basic installer validation to release pipeline for Windows, macOS (x64 only), and Linux (Debian package only). Validation runs the installers/any necessary setup and checks that the installed version matches the expected version.",0
278,"Refactor repo layout, simplify build and use NB.GitVersioning",0.5916,Improved usability for GitHub auth (#587),macos arm64: Homebrew updates,0
279,http: ensure cert validation works on Mac/Linux,0.5735341,Validate installers before publishing (#813),"Update release asset regex to specify runtime and version groups so that update-homebrew task can correctly detect version. Additionally, remove alwaysUsePullRequest parameter so that Homebrew releases become automatic.",0
280,provider-spec: use one abbrev for GCMW/ML,0.60763156,Distribute GCM as a dotnet tool (#886),build(deps): bump mjcheetham/update-homebrew from 1.1 to 1.2,0
281,Merge pull request #8 from mjcheetham/cmds,0.4124061,@mminns ,Bumps mjcheetham/update-homebrew from 1.1 to 1.2. - Release notes - Commits  updated-dependencies: - dependency-name: mjcheetham/update-homebrew   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] support@github.com,0
282,auth: add helper 'throw' method for GUI prompt setting,0.5040318,Add native basic credential UI prompts for Windows (#92),release: update Azure storage resource names,0
283,Merge pull request #102 from mjcheetham/oauth2-pkce,0.5272219,"Add an OAuth2 client implementation with PKCE support (#99, #102)","The previous Azure resource architecture separated GCM and Microsoft Git resources into different Resource Groups. This led to redundancy - we were storing all our secrets, certificates, etc. in two places. These updates reflect the consolidation of these resources into the new esrp Resource Group.",0
284,PosixTerminal: split macOS and Linux impl and fix,0.5784336,- macOS,build(deps): bump lycheeverse/lychee-action from 1.5.0 to 1.5.1,0
285,settings: add path expansion to settings,0.41053444,Fix various problems with install path and app path variables #968,Bumps lycheeverse/lychee-action from 1.5.0 to 1.5.1. - Release notes - Commits  updated-dependencies: - dependency-name: lycheeverse/lychee-action   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] support@github.com,0
286,bb-test: rename test/mock helper methods,0.46407393,Reduce warnings from tests (#337),build(deps): bump DavidAnson/markdownlint-cli2-action from 5.1.0 to 6,0
287,actions/workflows: fix workflows and builds,0.48470998,- Various bug fixes and improvements,build(deps): bump Newtonsoft.Json from 12.0.3 to 13.0.1 in /src/shared/Core,0
288,libsecret: use downlevel functions to get secrets,0.42305052,Allow use of older versions of libsecret such as in Ubuntu 18.04 (#244),Bumps DavidAnson/markdownlint-cli2-action from 5.1.0 to 6. - Release notes - Commits  updated-dependencies: - dependency-name: DavidAnson/markdownlint-cli2-action   dependency-type: direct:production   update-type: version-update:semver-major ... Signed-off-by: dependabot[bot] support@github.com,0
289,github: remove user/pass auth for GitHub.com,0.81753206,Remove username/password authentication for GitHub.com (#171),Reorder Git config list process exit wait in diagnose command,1
290,Merge pull request #563 from mjcheetham/wsl-trace-template,0.5304402,Fix WSL configuration instructions (#479),"Do not wait for the Git process to exit until we start reading from the stdout stream, to prevent a deadlock. This is what we do in the product code too.",0
291,Only erase credentials that match user/pass when present,0.607896,Remove username/password authentication for GitHub.com (#171),,0
292,readme: add link to project roadmap,0.47355947,Update documentation to use reference-style links (#680),"The macos-10.15 image for CI builds is deprecated on GitHub Actions. We should update this to a supported image. Given we are actually running our release builds on macos-latest, we should probably be running CI on the same image too!",0
293,"docs: update README, FAQs, and build docs",0.52205837,Update documentation to use reference-style links (#680),Add broken link checking Action,0
294,Just two tiny typos,0.37487048,- @czipperz,,0
295,build(deps): bump lycheeverse/lychee-action from 1.5.4 to 1.6.1 (#1125),0.5487131,Speed up build graph (#924),Also adjusts the entire workflow to only run if a PR or push contains changes to a markdown file,0
296,release: fix tarball signing,0.68331873,Sign Linux tarball and .NET tool #985 ,Bumps Newtonsoft.Json from 12.0.3 to 13.0.1. - Release notes - Commits  updated-dependencies: - dependency-name: Newtonsoft.Json   dependency-type: direct:production ... Signed-off-by: dependabot[bot] support@github.com,0
297,build(deps): bump actions/checkout from 2 to 3,0.49509668,Speed up build graph (#924),release: consume auto-rotated SSL certificate,0
298,Merge pull request #379 from mjcheetham/fix-macos-hang,0.47812498,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)","Update release workflows to consume new autorotated SSL certificate. There are two main parts:   Add the ""SendX5c"" : ""true"" key value pair to the contents of our ESRP Auth Json file. This allows us to use the new auto-rotating certificate without having to upload/manage it from our App Registration.i   Remove the AZURE_AAD_ID_SSL secret/environment variable. The new certificate was generated with our main AZURE_AAD_ID app registration, so this extra ID is no longer needed. ",0
299,Merge pull request #141 from itofinity/issue/support-bbs-basicauth,0.47182748,"Bitbucket Server support (#140, #141)",Delete outdated instruction for GitLab Support,0
300,windows: add missing assemblies/files to Windows installer,0.6293273,Fix Windows user-only installer configuration bug (#335),Deleted instruction concerning 'Expire access tokens' option when setting up OAuth app.,0
301,Add Windows payload and installer projects,0.62655026,Basic Windows installer (#41),macos build: use runtime instead of osx-x64,0
302,readme: add link to project roadmap (#1204),0.53035414,Update documentation to use reference-style links (#680),Update DISTOUT variable in build.sh to use RUNTIME variable instead of hard-coding osx-x64.,0
303,Merge pull request #708 from ldennington/fix-install-from-source-validation,0.5344878,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)",Fix Mac x64 pkg,0
304,inputargs: fix a bug in remote URI generation,0.45603207,"Return non-zero code for UI helpers on error (#440, #441)",,0
305,proxy: match NO_PROXY formats to libcurl behaviour,0.57565063,"Support for the NO_PROXY option to bypass the proxy for certain addresses (#299, #297)",docs(WSL): Correct the path to the executable,0
306,Broaden NTLM auth to all Windows Integrated Auth protocols,0.58926356,Allow users to select the type of interactive authentication flow for the Microsoft auth stack (#210),,0
307,Merge pull request #501 from mjcheetham/noproxy-globs,0.47198558,GHES OAuth support (#354),docs: update readme to show osx-arm64 support,0
308,docs: call out different GCM install paths in WSL docs,0.57143295,Allow users to specify path to GPG executable for gpg credential store on Linux (#406),,0
309,Remove apt-get install instructions from README.md,0.47900927,Fix computation of installation path on Linux/single-file publish (#310),New Bitbucket UI with separate OAuth and User/Pass options,0
310,Merge pull request #614 from mjcheetham/gitlab-fixes,0.51689506,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)",Generate Windows application manifests for all executable projects,0
311,docs: update org and repo name,0.53873193,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)",Update the WPF-based Bitbucket authentication prompt in a similar fashion to the Avalonia ones.,0
312,Merge pull request #137 from mjcheetham/devguide,0.4014452,Fix WSL configuration instructions (#479),"Update the Avalonia-based UI for Bitbucket authentication to use a tabbed interface, showing each authentication mode in a separate tab. The new ""credentials"" prompt can offer and serve all authentication modes in a simpler way that pushes users who can to authenticate using a more secure method (where we don't capture the user/pass).",0
313,Merge pull request #654 from GitCredentialManager/bring-oauth-into-the-light,0.533176,Convert issue templates to YAML (https://github.com/GitCredentialManager/git-credential-manager/commit/24ae90a4bd18fec6edcc860281ff82f715588e44),"Update shared UI helper code for Bitbucket to remove the separate OAuth prompt/command, and allow basic authentication (username/password) options to be hidden based on a command-line option.",0
314,build(deps): bump github/codeql-action from 1 to 2,0.4960527,Codebase and build improvements (#49),"Automatically generate the correct application manifest for Windows executable projects that we produce. The manifests are required on Windows systems newer than Windows 8 to correctly access versioning APIs that will otherwise always report ""Windows 8"", even on later versions. The manifest we generate states we are compatible with all versions of Windows from 7 to 11 (inclusive).",0
315,Add GitHub host provider with basic TTY cred prompts,0.7582984,Git Host Providers:,"Remove the separate ""OAuth Required"" UI prompt in favour of just always showing the ""Credentials"" prompt, where users can select the OAuth auth mode directly anyway.",1
316,"github: add main ""credential"" prompt",0.737201,- Fix TTY-based prompts for GitHub authentication (#30),Rename some of the test/mock helper methods to be a little easier to grok/be shorter.,1
317,Update Windows build instructions,0.5978447,Basic Windows installer (#41),,0
318,first unit test for GitHubAuthentication,0.62891173,- GitHub,Inline some 2FA mock setup helper methods that differ only by a single boolean argument.,0
319,Merge pull request #127 from mjcheetham/fix-homebrew,0.48888662,Mac installer will now unlink the Java GCM via Homebrew if installed (#45),,0
320,Merge pull request #732 from GitCredentialManager/feature/m1,0.5327769,Discontinued incorrect use of Homebrew Git shim (#731),bitbucket: remove 2FA test,0
321,docs: add WSL documentation,0.6179608,Fix WSL configuration instructions (#479),Fix bug in Windows credential manager credential matching on port numbers,0
322,Fix app path name of Windows dropping file extension (#1181),0.5241177,Fix various problems with install path and app path variables #968,"Fix a bug whereby we would not correctly match existing credentials when port numbers were used in the search. Additionally, actually now store the non-default port number in the target URI if there is one given. We also now always trim any trailing '/' from the end of the path of a service/target URI. Previously we erronously only trimmed the '/' from a 'pathless' URI, i.e.: https://example.com/      => https://example.com   https://example.com/path/ => https://example.com/path/ This is a safe change since the Enumerate method that is used by both Get and Remove already matches both trailing and non-trailing slashes by virtue of creating and comparing components of a System.Uri which does normalisation of the path. Both Get and Remove would act (eventually) to remove any bad credentials stored with a trailing slash, even if new credentials are only written out without the slash.",0
323,.net tool: clarify install instructions,0.61886513,Fix release builds .NET SDK version (#358),,0
324,secret service: fix error creating credential (#996),0.6033133,Secret Service sec_free: Assertion cell->requested > 0 failed. error fix #996,Fix the Ubuntu uninstall command which used the wrong package name.,0
325,Refactor in order to simplify adding more tests: GetSupportedAuthenticationModes,0.52830094,Reduce warnings from tests (#337),"BitbucketHostProvider: fix runtime exceptions  when authentication requests for Bitbucket DC would incorrectly call a Bitbucket Cloud REST API A bug was introduced in commit: 5a2cfd7. Prior to this only authentication requests for Bitbucket Cloud would try and automatically determine if 2FA was required by the current user by calling a Bitbucket Cloud REST API using user provided Basic Auth credentials Commit: 5a2cfd7 removed checking of the current host was Bitbucket Cloud vs DC. This meant the check would be run for Bitbucket Cloud and DC regardless. It would fail for Bitbucket DC The fix is more radical than simply re-instating the check on the type of Bitbucket host. From 1st March 2022 support for using a Bitbucket Cloud user's account password to access REST or Git HTTPS operations has been removed, https://atlassian.community/t5/x/x/ba-p/1948231. As such this automatic test to see if 2FA is required no longer works. Therefore the check against the Bitbucket Cloud REST API has been removed in its entirety",0
326,github: allow OAuth params to be overridden at runtime,0.580531,Add preliminary support for OAuth with GitHub AE (requires server support/changes) (#343),Avoid writing credentials when account & password have not changed,0
327,"Remove planned features section, completed feature",0.4046629,Add option to prevent interactivity (#91),Avoid writing out credentials that are the same as an already existing cred.,0
328,msauth: include better warning message on Keychain errors,0.7653661,Better warning messages on macOS when there are Keychain issues (#305),Only update keychain entries when the password/secret is different to what is already stored.,1
329,Merge pull request #62 from mjcheetham/proxy,0.40455338,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)",Ignore Homebrew Git shim,0
330,procmgr: ensure we start processes,0.4036095,- GCM Core now worked behind network proxies (configuration guide) (#11),"Do no bother writing out credentials if there is already an existing credential for the same account, with the same secret/password value.",0
331,Merge pull request #95 from mjcheetham/fix-desktopcheck,0.41056693,Check for broken links in documentation (#700),Do not needlessly serialise the credential file again if nothing has changed from an existing credential found. This change also updates derived implementations (DPAPI and GPG).,0
332,trace2: add file writer,0.4945196,Initial TRACE2 tracing events #1045,Extract common credential file enumeration from both the Get and Remove methods for the plaintext credential store.,0
333,Ensure we create a WindowsProcessManager on Windows (#1146),0.6696989,Add workaround for Windows Broker (WAM) running as admin (#344),Revise and consolidate osx-arm64 commits,0
334,Merge pull request #804 from mjcheetham/diagnose-hang,0.46659923,Add new diagnose command to help debug problems in the wild (#463),Add support for building osx-arm64 in addition to osx-x64 to produce native M1 binaries.,0
335,Merge pull request #703 from GitCredentialManager/dependabot/github_actions/actions/upload-artifact-3,0.5698215,Migrated release process from Azure DevOps to GitHub actions (#707),Add a unit test to verify ignoring paths when searching the PATH for executables works as expected.,0
336,github: fix 2FA code capture,0.645599,"Fix a bug in parsing Bitbucket 2FA responses (#128, #126)","Ignore Homebrew shim to ensure the user's installed version of Git is called during brew uninstall (instead of the shim). Note that this involves explicitly passing the HOMEBREW_PREFIX environment variable, since the sudo -u/usr/bin/logname""$GCMBIN"" unconfigure command does not inherit it.",0
337,Merge pull request #234 from mjcheetham/fixconfigmatching,0.47455007,Fix WSL configuration instructions (#479),Add ability to ignore specified paths when searching the PATH for an executable.,0
338,trace2: add process depth calculation,0.58251333,Initial TRACE2 tracing events #1045,Remove windows from credential-cache in credstores.md,0
339,build(deps): bump mjcheetham/update-homebrew from 1.1 to 1.2,0.57700133,Discontinued incorrect use of Homebrew Git shim (#731),,0
340,Merge pull request #494 from mjcheetham/no-auto-noise,0.57365406,"Remove noisy messages during auto-detection (#492, #494)","The upcoming specification of a macOS runtime led to the need to update the Microsoft.NET.Test.Sdk package. The old version, when combined with this specification, caused dependent packages to be downgraded, which resulted in NuGet errors. Upgrading to the latest version resolved this issue. Additionally, Avalonia has been upgraded to the latest version, which was necessitated by the upcoming changes to support osx-arm64.",0
341,Ensure we're not tracing secret info in dictionaries,0.33764923,"Respect http.sslCAInfo settings (#242, #411)",Co-authored-by: Lessley Dennington lessleydennington@gmail.com,0
342,Fix macOS installer pkg file signing,0.6208905,Fix build script error creating incorrect x64 packages for macOS (https://github.com/GitCredentialManager/git-credential-manager/pull/778),Co-authored-by: Johannes Schindelin johannes.schindelin@gmx.de Co-authored-by: Lessley Dennington lessleydennington@gmail.com,0
343,note that dialogs can change,0.41242665,Add option to prevent interactivity (#91),Fix failing GitHub Actions Release Script,0
344,Update linuxcredstores.md,0.5634556,Align with dotnet-supported Linux distributions (https://github.com/GitCredentialManager/git-credential-manager/pull/953),,0
345,Move all interop code under Interop namespace,0.42909086,"Refactor namespace, assembly and project names (#500)",Manually scan $PATH on POSIX systems,0
346,Merge pull request #32: Support AAD in MSA,0.5806333,- Support AAD users as guest users in MSA-based Azure DevOps organizations (#32),Add read_repository GitLab OAuth Scope,0
347,Merge pull request #680 from wolf99/ref-style-links,0.50052416,Check for broken links in documentation (#700),"Add FAQ entry detailing how to revoke/re-authorize a GitLab OAuth Application's access. This is needed when the application is updated, e.g. when new scopes are added to it.",0
348,Fix problems with application path and installation directory resolution (#951),0.7863869,Fix various problems with install path and app path variables #968,,1
349,Issue #218 Address PR comments with minot updates to XUnit usage and log message formats,0.4989493,@mminns ,Update architecture.md,0
350,which: add ability to locate executables via which,0.51297355,Automatically trace to the debugger when attached (#94),,0
351,Merge pull request #344 from mjcheetham/wam-elevate,0.44004086,Fix WSL configuration instructions (#479),Fix various typos,0
352,Update GitHub auth change document PAT link,0.6433617,Improved usability for GitHub auth (#587),"Because the which command is not always located in /usr/bin on all POSIX systems, we cannot directly call /usr/bin/which to do program location for us. Oh the irony.. We might be able to use env to locate which, but again the env utility isn't always found in the same place, so we're stuck. Instead we now manually scan the $PATH variable directories looking for the program we need to find, in the same way we do on Windows (for different reasons). This should also be slightly faster as you'd hope .NET's String.Split method and lstat calls are faster than fork/exec-ing another executable?",0
353,Merge pull request #67 from mjcheetham/msauth-inproc,0.4359728,@mminns ,Show Bitbucket Server/Data Center URL in UI and use better help links,0
354,diagnose: add Git diagnostic tests,0.59620714,Fix bug in Git config matching due due case sensitivity (#234),Add test for Bitbucket Cloud hostname detection method.,0
355,settings: fix bug in path-type setting reading,0.6083534,Fix various problems with install path and app path variables #968,Add unit tests for the BitbucketAuthentication command line for UI helpers.,0
356,github: fix bug in 2FA UI helper invocation,0.6510459,Fix bug in GitHub x-platform UI where the browser/OAuth option is not shown (#360),,0
357,Merge pull request #9 from mjcheetham/generic-provider,0.4232103,Updated generic provider to support all protocols (#712),build(deps): bump actions/github-script from 4 to 6,0
358,Merge pull request #79 from mjcheetham/fix-signwindows,0.49881315,Fix WSL configuration instructions (#479),,0
359,cmd: add ability for providers to expose custom cmds,0.5290323,Add ability to read GCM default settings from the Windows Registry (#404),Bumps actions/github-script from 4 to 6. - Release notes - Commits  updated-dependencies: - dependency-name: actions/github-script   dependency-type: direct:production   update-type: version-update:semver-major ... Signed-off-by: dependabot[bot] support@github.com,0
360,Refactor in order to simplify adding more tests: GetSupportedAuthenticationModes_WithMetadata,0.5107688,Reduce warnings from tests (#337),Migrate release processes to GitHub Actions,0
361,Merge pull request #478 from mjcheetham/gh-device-ui,0.47895944,Fix WSL configuration instructions (#479),Remove the no-longer-needed Azure Pipelines release workflows.,0
362,Merge pull request #126 from kzu/master,0.38738048,Align with dotnet-supported Linux distributions (https://github.com/GitCredentialManager/git-credential-manager/pull/953),"Add final job to publish artifacts as a draft release on GitHub. This uses a custom github-script because the official action for adding assets to releases has been deprecated and archived. For more information, see: https://github.com/actions/create-release",0
363,Merge pull request #206 from microsoft/master,0.49088216,Add workaround for Windows Broker (WAM) running as admin (#344),"Add step two of Linux release process to sign and upload final installer. Additionally, remove the no-longer-needed build-signed-deb workflow.",0
364,msauth: add WAM workaround for elevated procs,0.66622317,Add workaround for Windows Broker (WAM) running as admin (#344),"Add step one of Linux (Debian) release process to build and lay out Debian package. Additionally, drop 'core' suffix from package name and remove no-longer-needed build-installers workflow.",0
365,Merge pull request #450 from mjcheetham/dropubuntu16,0.43444204,Fix WSL configuration instructions (#479),"Add the Windows release process to:  Build and sign the payload Use the signed payload to build and sign the user and system installers Publish the signed installers, payload, and symbols  This change also removes the no-longer-needed Payload.Windows project and removes the 'core' suffix from the Windows installers.",0
366,ISSUE 329 Ignore auth overrides when calling Bitbucket DC,0.76170003,Corrected runtime exceptions with Bitbucket DC authentication (#743),install-from-source: add instructions to uninstall,1
367,Merge pull request #704 from GitCredentialManager/dependabot/github_actions/actions/setup-python-3,0.5588988,Migrated release process from Azure DevOps to GitHub actions (#707),Update release-homebrew.yaml to reflect removal of core from pkg name.,0
368,trace2: remove ToLower() from message file names,0.4848261,Drop -core suffix from entry executable #551 ,Add step four of the macOS release process to sign and notarize the pkg and upload it as the final installer.,0
369,Add noop erase cmd test; simplify assert,0.43586522,Reduce warnings from tests (#337),Add step three of the macOS release process to package the payload and upload the pkg artifact.,0
370,Merge pull request #705 from GitCredentialManager/dependabot/github_actions/actions/checkout-3,0.5592912,Migrated release process from Azure DevOps to GitHub actions (#707),,0
371,diagnose: always use IHttpClientFactory for diagnose (#942),0.50725174,Add new diagnose command to help debug problems in the wild (#463),Add instructions for Linux users on supported distros to remove GCM and its dependencies after installing from source.,0
372,docs: wrap body text to 80 columns,0.53574705,Unify documentation line length (#862),"Add step two of the macOS release process to download the unsigned payload, use ESRP to sign it, and upload the signed payload as an artifact. Additionally, genericize the existing run_esrp_signing.py script to allow for signing of macOS payload/pkg and Windows exes in addition to Debian packages.",0
373,GitConfiguration: be careful about arguments and exit codes,0.6376283,Consistently read from stdout before waiting for Git process exit (#1136),"Add step one of the macOS release process to build, run applicable unit tests, lay out the symbols/payload, codesign the payload, and upload the payload and symbols as artifacts.",0
374,windows: add missing DllImport attribute to LocalFree,0.49007285,"Update MSAL; set MS auth embedded window title (#239, #512)","Update the Bitbucket credential UI to show the URL of the Bitbucket Server or Data Center instance, if we're talking to them. Also fix up the help links to point to a host-relative location; not always to Bitbucket Cloud pages. Note that the OAuth prompt will never been shown for Server/DC since 2FA is not supported there.",0
375,Merge pull request #717 from mjcheetham/which-location,0.39138636,Fix WSL configuration instructions (#479),Update generic provider to support all protocols,0
376,Skip helper when unnecessary to make choice from one option.,0.570941,Add option to prevent interactivity (#91),"Update the generic host provider to support all protocols, not just HTTP/HTTPS. Since Git can also call upon credential helpers for credentials for send-mail and friends, we should try and provide basic storage and recall for all protocols.",0
377,build with inherit restore,0.48496404,Codebase and build improvements (#49),build(deps): bump github/codeql-action from 1 to 2,0
378,assets: add SVG version of GCM logo,0.4858671,- Renamed the main executable from git-credential-manager to git-credential-manager-core to allow for easier side-by-side use with Java GCM and Windows GCM during the preview (#70),Gitlab hostname only support.,0
379,trace2: add initial functionality,0.675902,Initial TRACE2 tracing events #1045,Bumps github/codeql-action from 1 to 2. - Release notes - Changelog - Commits  updated-dependencies: - dependency-name: github/codeql-action   dependency-type: direct:production   update-type: version-update:semver-major ... Signed-off-by: dependabot[bot] support@github.com,0
380,Merge pull request #262 from mjcheetham/auto-gh,0.44843364,GHES OAuth support (#354),Co-authored-by: Lessley Dennington ldennington@github.com,0
381,docs: separate additional resources from README,0.38869303,Create Linux plaintext store with safer directory permissions (#397),Fix install from source validation,0
382,Pass the executable path from the main CLI program,0.49242184,"Fix problems with resolving the executable file path on Linux (#298, #229, #252)",build(deps): bump actions/download-artifact from 2 to 3,0
383,Merge pull request #360 from mjcheetham/github-xui-fix,0.4944067,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)",,0
384,Add install from source option to build.sh,0.48572972,Add support for using WSL Git configuration (#461),Bumps actions/download-artifact from 2 to 3. - Release notes - Commits  updated-dependencies: - dependency-name: actions/download-artifact   dependency-type: direct:production   update-type: version-update:semver-major ... Signed-off-by: dependabot[bot] support@github.com,0
385,msauth: fix typo,0.53274196,"Update MSAL; set MS auth embedded window title (#239, #512)",build(deps): bump actions/upload-artifact from 2 to 3,0
386,Merge pull request #532 from ldennington/add-linux-packages-note-to-readme,0.4716839,Fix computation of installation path on Linux/single-file publish (#310),build(deps): bump actions/setup-python from 2 to 3,0
387,trace2: create sid manager class,0.469173,"Improve proxy environment variable handling (#497, #501, #503)",build(deps): bump actions/checkout from 2 to 3,0
388,Use JsonWebToken type in place of strings for JWTs,0.38863724,Add support for using WSL Git configuration (#461),build(deps): bump actions/setup-dotnet from 1 to 2,0
389,Merge pull request #109 from microsoft/fix-rel,0.5238829,"Fix a bug with using Microsoft Accounts with Azure Repos (#143, #148)",Bumps actions/setup-dotnet from 1 to 2. - Release notes - Commits  updated-dependencies: - dependency-name: actions/setup-dotnet   dependency-type: direct:production   update-type: version-update:semver-major ... Signed-off-by: dependabot[bot] support@github.com,0
390,docs: add link to git config/envars to switch cred types,0.5100533,Add support for using WSL Git configuration (#461),Bumps actions/checkout from 2 to 3. - Release notes - Changelog - Commits  updated-dependencies: - dependency-name: actions/checkout   dependency-type: direct:production   update-type: version-update:semver-major ... Signed-off-by: dependabot[bot] support@github.com,0
391,docs: replace references to GCM Core/GCM-Core with GCM,0.6415726,"Set the full path to standalone GCM Core installs, enabling overriding of bundled versions (#188, #199)",Bumps actions/setup-python from 2 to 3. - Release notes - Commits  updated-dependencies: - dependency-name: actions/setup-python   dependency-type: direct:production   update-type: version-update:semver-major ... Signed-off-by: dependabot[bot] support@github.com,0
392,Merge pull request #629 from mjcheetham/wam-server2016,0.4776729,Fix WSL configuration instructions (#479),Bumps actions/upload-artifact from 2 to 3. - Release notes - Commits  updated-dependencies: - dependency-name: actions/upload-artifact   dependency-type: direct:production   update-type: version-update:semver-major ... Signed-off-by: dependabot[bot] support@github.com,0
393,install-from-source: add instructions to uninstall,0.5144891,Fix computation of installation path on Linux/single-file publish (#310),Add dependabot,0
394,Merge pull request #635 from buchwasa/dotnet6,0.5230954,Replace netstandard2.0 with dotnet6.0 (https://github.com/GitCredentialManager/git-credential-manager/commit/65cead2b5caa443fde1f9b86d02ab377a80a279c),Update contributing guidelines,0
395,bb-test: inline 2FA mocking test helpers,0.5147002,Reduce warnings from tests (#337),"Update CONTRIBUTING.md with a link to Victoria Dye's recent talk on crafting logical, well-ordered commit messages. Move this link into the 'Submitting a pull request' section so that new contributors are more likely to see it while following the prescribed steps.",0
396,trace2: add error event,0.6812229,Initial TRACE2 tracing events #1045,Customize CONTRIBUTING.md intro for GCM and update issue link to point to the 'New Issue' page rather than the pre-existing issues page.,0
397,msauth: update MSAuth flow comment to reflect today,0.5492233,"Update MSAL; set MS auth embedded window title (#239, #512)",I am not familiar enough with nuget and dot net projects to know if it is worth adding nuget package-ecosystem (or others). If someone in the know could comment here I will be happy to adjust as needed. Info on dependabot usage can be seen here: https://docs.github.com/en/code-security/dependabot/dependabot-version-updates/about-dependabot-version-updates,0
398,helpers: allow auth helpers to be overriden by config,0.503407,Allow users to select the type of interactive authentication flow for the Microsoft auth stack (#210),    modified:       src/shared/Core.Tests/UriExtensionsTests.cs,0
399,tidy,0.34571782,- Various bug fixes and improvements,,0
400,Fix multiple gitHubAuthModes,0.69690764,- GitHub,Pass through $PATH to find dotnet,0
401,build(deps): bump lycheeverse/lychee-action from 1.5.4 to 1.6.1,0.53999346,Speed up build graph (#924),docs: update WSL guide with new Git For Windows path,0
402,Merge pull request #103 from mjcheetham/gh-oauthenv,0.46764004,GHES OAuth support (#354),Update WSL guide to reflect GCM's move from the libexec/git-core directory in Git for Windows to the bin directory.,0
403,github: mark GHES 3.2 as supporting GCM Core OAuth,0.70982003,GHES OAuth support (#354),Signed-off-by: Easwar Hariharan easwar.hariharan@microsoft.com,1
404,Web browser and PAT support for GitLab.,0.7093451,Improved usability for GitHub auth (#587),Add GitHub.com OAuth app revoke instructions to FAQs,1
405,wincred: add explicit test for cred persistence,0.37345833,"Future proof Windows broker ""WAM"" version detection (#465)",Add an entry to the FAQ doc explaining how to revoke access to the GCM OAuth app for GitHub.com,0
406,Merge pull request #294 from mjcheetham/users-in-config,0.4452414,Fix WSL configuration instructions (#479),,0
407,bitbucket: add tests for IsBitbucketOrg method,0.5669708,"Fix a bug in parsing Bitbucket 2FA responses (#128, #126)",Lint markdown,0
408,docs: add GitHub auth API deprecation docs,0.6271652,WPF-based GitHub auth UI (#40),,0
409,registry: add auto-detection via HTTP query,0.6111322,Auto-detect on-premises/self-hosted providers via HTTP headers (#262),,0
410,Add steps to create .deb package distro,0.5700013,Include UI helpers in Debian package for Linux release; move GCM symlink to /usr/local/bin (#405),,0
411,Add clarifying comments to new MS auth impl,0.5522227,"Update MSAL; set MS auth embedded window title (#239, #512)",,0
412,trace2: add collectorwriter,0.54145783,Initial TRACE2 tracing events #1045,,0
413,trace2: add exceptions,0.6088966,Initial TRACE2 tracing events #1045,,0
414,Merge pull request #535 from mjcheetham/dynamic-provider-setting-only,0.4402316,Auto-detect on-premises/self-hosted providers via HTTP headers (#262),,0
415,trace2: add region infrastructure,0.5136572,Initial TRACE2 tracing events #1045,,0
416,packaging: fix macOS pack job use of \ vs / file seps,0.5423867,- macOS,,0
417,Merge pull request #510 from ldennington/add-ui-testing-instructions,0.5159776,Fix WSL configuration instructions (#479),,0
418,install from source: publish before attempting install (#987),0.70668304,Validate installers before publishing (#813),,1
419,github: replace link with button for OAuth login,0.6917816,"Now that OAuth has been fully adopted for GitHub.com and works for all users (personal and organizational alike), the username/password option has been removed. The username/password option will soon be removed from the server-side anyway – see more here: https://github.blog/changelog/2019-08-08-password-based-http-basic-authentication-deprecation-and-removal/.",,0
420,gitconfig: avoid deadlock on large amounts of config data,0.5310302,Fix reading empty Git configuration entry values (#215),docs: highlight GitLab support in README.md,0
421,Ensure we log the actual Win32 error on failure,0.5278616,Fix a bug where Windows interactive sessions were not detected correctly (#123),Link to GitLab support docs,0
422,install-from-source: align with dotnet-supported distros,0.64913154,Align with dotnet-supported Linux distributions (https://github.com/GitCredentialManager/git-credential-manager/pull/953),Add GitLab to list of supported host providers.,0
423,macos environment: unit test for ignoring paths,0.5886125,- macOS,,0
424,Remove release-apt-get workflow,0.55937195,Migrated release process from Azure DevOps to GitHub actions (#707),docs: add supported Linux distributions to README.md,0
425,Fix various problems with install path and app path variables (#968),0.9912433,Fix various problems with install path and app path variables #968,Update README.md to call out explicitly supported Linux distributions.,1
426,Consolidate apt-get release flow,0.57668215,Migrated release process from Azure DevOps to GitHub actions (#707),Make Azure Repos OAuth non-experimental,0
427,macoskeychain: update macOS Keychain to match new interface,0.6426369,Better warning messages on macOS when there are Keychain issues (#305),,0
428,Merge pull request #6 from mjcheetham/vscode,0.3934964,Pass parent window handle information to MSAL (#306),,0
429,org-rename: update references to GitCredentialManager,0.6525037,- Renamed the main executable from git-credential-manager to git-credential-manager-core to allow for easier side-by-side use with Java GCM and Windows GCM during the preview (#70),fixup! fixup! Add install from source script,0
430,avn: workaround a macOS window focus bug,0.5467253,Trivially fix the macOS native helper crashes by deleting it 😅 (#264),,0
431,Merge pull request #61 from mjcheetham/provider-override,0.40413377,Updated generic provider to support all protocols (#712),,0
432,docs: update readme to call out G4W bundling,0.5469544,GHES OAuth support (#354),,0
433,fixup! linux: add option for GCM_GPG_PATH environment variable,0.68249524,Allow users to specify path to GPG executable for gpg credential store on Linux (#406),.azure-pipelines: install .NET 6.0 sdk for macOS signing,0
434,github: ensure PAT is offered for GHES instances,0.6682646,Git Host Providers:,Install the .NET 6.0 SDK and enforce a minimum NuGet version for macOS signing workflow. This duplicates what we currently do in the Windows workflow and fixes the .NET error observed in this attempted release build: https://dev.azure.com/mseng/AzureDevOps/_build/results?buildId=17051675&view=results Clean test build with this change: https://dev.azure.com/mseng/AzureDevOps/_build/results?buildId=17052160&view=results,0
435,docs: FAQ on revoking GitLab OAuth Application,0.64752555,OAuth Device Authorization Grant support for GitHub (#147),Update to .NET 6,0
436,Update src/linux/Packaging.Linux/build.sh,0.54297733,This release is a fast follow to 2.0.692 to fix issues with the Debian package generated as part of that release.,Remove build number from the release artifacts,0
437,install from source: add support for Jammy Jellyfish,0.37420946,Include UI helpers in Debian package for Linux release; move GCM symlink to /usr/local/bin (#405),,0
438,Merge pull request #158: Fix some typos/errors in documentation,0.51094913,Check for broken links in documentation (#700),,0
439,github: consolidate helper options; add --all option,0.62664837,- GitHub,,0
440,build: split linux build.sh script,0.46359614,Fix computation of installation path on Linux/single-file publish (#310),,0
441,generic: add ability to read generic OAuth config,0.76502883,Generic OAuth support via config 🎉 #1062,,1
442,Merge pull request #159 from microsoft/linux,0.43097723,Sign Linux tarball and .NET tool #985 ,,0
443,"Merge pull request #333: Add an ""s"" to the word ""work""",0.33200538,Fix WSL configuration instructions (#479),,0
444,bb-winui: update WPF based Bitbucket prompt,0.65822434,Introduce the Bitbucket host provider with Windows GUI (#37),Add install-from-source.sh and surrounding infrastructure,0
445,Merge pull request #265: [Docs] Add configuration example,0.50832736,Fix WSL configuration instructions (#479),Fix GitHub Enterprise API URL for raw source code links.,0
446,trace2: add error tracing statements,0.68058884,Initial TRACE2 tracing events #1045,Update README.md with instructions for downloading and running the install from source script.,0
447,release: remove .azurepipelines directory,0.4568879,"- Copy Debian package files to correct directory (#545, #566, #569, #539)",Add new GitHub actions workflow to validate install from source on supported distributions.,0
448,linux release: sign and publish,0.60048395,Very early support for Linux (#135),Add script to help users automatically install from source on supported distributions.,0
449,macOS release: package payload,0.6768705,Notarize the macOS installer and binaries to permit running on macOS Catalina 10.15 (#84),Update build.sh to support install from source scenario.,0
450,build: ignore Windows projects in Mac sln configs,0.49636418,Notarize the macOS installer and binaries to permit running on macOS Catalina 10.15 (#84),Add GUI prompts for GitLab authentication,0
451,cmdline: update System.CommandLine to 2.0.0-beta1.21216.1,0.7681378,Update System.CommandLine and fix some bugs (#531),Pass the instance URL argument to the GitLab UI helper.,1
452,generic-ui: add Avalonia impl of OAuth and Device Code,0.75132006,Generic OAuth support via config 🎉 #1062,"On custom GitLab instances, don't show the GitLab ""fox"" logo, only the logotype. We also replace the old PNG logo with SVG/vector versions for better display on high-resolution displays. Ensure we only show the ""sign up"" link for GitLab.com fix wpf",1
453,Use with: for args to actions,0.3238144,Add option to prevent interactivity (#91),,0
454,Removing repo,0.4702932,- Azure Repos,Exclude Windows Server 2016 from WAM support,0
455,Merge pull request #499 from mminns/issue/498-add-code-coverage,0.43527675,Fix WSL configuration instructions (#479),Clarify that plaintext store is distinct from git-credential-store,0
456,build(deps): bump actions/setup-dotnet from 2 to 3.0.0,0.5472016,Improved detection of dotnet on Linux (#685),"Windows Server 2016 does not support WAM, so we should not try to enable the broker unless we're on Server 2019 and later. Also update the Windows (client; non-server) version checks to be tighter. Previously any major version of 10 or greater was considered ""supported"", but this is wrong. Windows 10 build 15063 was the first to support WAM.",0
457,Fix bad ICredStore comment; add macOS native doc links,0.6087862,Trivially fix the macOS native helper crashes by deleting it 😅 (#264),,0
458,Produce and collect symbols on build,0.5969051,Simplified build number included in artifact names (#638),,0
459,app: move GetApplicationPath to ApplicationBase class,0.38266167,Fix various problems with install path and app path variables #968,"Invoke the GitLab UI helper if the current session is GUI interactive, the user has not disabled GUI prompts, and the helper is found.",0
460,msauth: return MSAL wrapped result rather than JWT AT,0.5279338,Pass parent window handle information to MSAL (#306),Implement a WPF-based UI helper for GitLab and include this in the Windows installers.,0
461,docs: add instructions how to enable WAM,0.7159735,Add workaround for Windows Broker (WAM) running as admin (#344),Implement an Avalonia-based UI helper for GitLab and include this in Mac and Linux packages/installers.,1
462,settings: use cached Git config entries for unscoped vars,0.5356841,Use native Git path interpolation for config values (#439),Add shared UI project for GitLab. Project contains the shared view models and commands for the main auth prompt.,0
463,gitlab: fix comment about Dispatcher method name,0.60998654,Fix bug in Git config matching due due case sensitivity (#234),Sign and ship GitLab binaries (and some minor fixes),0
464,Merge pull request #673 from ldennington/add-gitlab-to-readme,0.5301342,Add support for using WSL Git configuration (#461),Update the credential stores document to include an example command.,0
465,docs: fix typo in rename.md,0.421391,"Update MSAL; set MS auth embedded window title (#239, #512)","Add GitLab.dll to the set of files that need to be signed for Mac and Windows builds, and ensure the binary is included in the Windows installer.",0
466,Update error handling in credstores,0.5310217,Update System.CommandLine and fix some bugs (#531),Use the constant to define the AuthenticationModes available for gitlab.com. Also dynamically allow browser as a supported auth mode for non-dotcom instances that have an OAuth client ID configured.,0
467,docs: update environment docs to fix links,0.61643493,Update documentation to use reference-style links (#680),Update IsWslPath to detect \\wsl.localhost-style paths,0
468,"Issue-267 Add fingerprint header, to autodetect Bitbucket DC instances.",0.8199651,Autodetect Bitbucket DC instances (#373),"Starting in Windows build 21354, the preferred WSL UNC file path is ""\wsl.localhost\\"" and not the older administrative-share style ""\wsl$\<distro\"". The older ""wsl$"" style will continue to be supported, but won't be the default type of path we'll see from the system going forwards. We now support detecting both styles as WSL paths.",1
469,osx: fix incorrect wording of installer welcome msg,0.5556363,"Update MSAL; set MS auth embedded window title (#239, #512)",,0
470,Move to using MSAL.NET on Windows,0.66727006,"Update MSAL; set MS auth embedded window title (#239, #512)","Ensure the correct project configuration is selected when the solution configuration is set for one of the platforms in ""release""; i.e, WindowsRelease, MacRelease, and LinuxRelease.",0
471,github: update GitHub provider to impl new cred model,0.70287573,Git Host Providers:,"Add GitLab host provider, with web browser, PAT, and username/password support. This provider currently only supports text-based prompts.",1
472,Merge pull request #92 from mjcheetham/basic-nativeui,0.3968942,Generic OAuth support via config 🎉 #1062,Co-authored-by: Matthew John Cheetham mjcheetham@github.com,0
473,Add markdown linting to workflows,0.46862492,Add workaround for Windows Broker (WAM) running as admin (#344),,0
474,diagnose: add file system diagnostic tests,0.553561,Add new diagnose command to help debug problems in the wild (#463),,0
475,Merge pull request #1 from mjcheetham/framework,0.37778485,Auto-detect on-premises/self-hosted providers via HTTP headers (#262),,0
476,Fix setx command,0.40877005,Fix a bug to prevent setting credential.provider when it wasn't needed (Only set credential.provider for dynamic matches #535),Co-authored-by: Matthew John Cheetham mjcheetham@github.com,0
477,Fix console commands without output,0.57910126,Fix bug where GUI prompts would not be shown on Windows (#374),,0
478,msauth: set MSAL embedded webview window title,0.8821039,"~Set MSAL embedded webview window title to give more context to the user (#347, #239)~ Not working currently (see here)",Default installation path for GCM core has changed,1
479,http: add support for the NO_PROXY bypass envar,0.6110068,"Support for the NO_PROXY option to bypass the proxy for certain addresses (#299, #297)",Add option to disable GUI prompts/prefer terminal prompts instead,0
480,release: access Azure Storage Account with login credentials,0.8633095,Access Azure storage account using service principle credentials (#851),,1
481,FAQ: typo fix,0.50652933,- Various bug fixes and improvements,,0
482,docs: add FAQ for UI helper settings,0.52860487,Include UI helpers in Debian package for Linux release; move GCM symlink to /usr/local/bin (#405),,0
483,Merge pull request #748 from mjcheetham/wincred-fix,0.4859575,Fix WSL configuration instructions (#479),,0
484,Merge pull request #26 from Microsoft/newbuild,0.4518143,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)",,0
485,Merge branch 'main' into hubbify,0.36795497,"- Allow overriding the selection of host provider; also supports GitHub Enterprise scenarios (configuration option, migration guide for users of the credential.authority setting) (#59)",Add a new setting and environment variable that allows a user to disable the use of GUI prompts (in favour of terminal/text-based ones where available).,0
486,docs: absolute --> relative paths,0.34782687,Update documentation to use reference-style links (#680),,0
487,git: drop the redundant 'Value' from Get/Set methods,0.5726787,Fix reading empty Git configuration entry values (#215),"Default installation path now has ""Core"" in the name.",0
488,Merge pull request #110 from microsoft/release,0.47846466,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)",,0
489,Merge pull request #839 from ldennington/ubuntu-jammy,0.43670136,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)",Skip helper when no choice necessary,0
490,Fix docs/x.md relative links,0.5836915,Check for broken links in documentation (#700),Co-authored-by: Matthew John Cheetham mjcheetham@github.com,0
491,docs: update configuration docs to fix links,0.60740745,Update documentation to use reference-style links (#680),,0
492,docs: update readme with new features,0.4637093,Consume new MSAL library versions (#346),,0
493,.NET 5.0,0.71682346,Move to .NET Framework 4.7.2 on Windows (#283),,1
494,git: expose TrySplit git cfg key splitting helper,0.5230646,Fix bug in Git config matching due due case sensitivity (#234),Remove overzealous interactivity checks.,0
495,Merge pull request #176 from microsoft/master,0.50559837,Add workaround for Windows Broker (WAM) running as admin (#344),,0
496,"github: add ""2FA"" prompt dialog",0.6395264,- Fix TTY-based prompts for GitHub authentication (#30),,0
497,Merge pull request #166 from derrickstolee/actions-native,0.39396352,Drop -core suffix from entry executable #551 ,Fix WSL instructions by adding missing quotes,0
498,xui: extract Avalonia specific pieces from shared UI project,0.53261137,UI on macOS and Linux thanks to AvaloniaUI 🎉 (#336),"Add missing double quotes ("") to the WSL documentation about using GCM without Git for Windows.",0
499,"Use short workflow name so each job renders full name as ""GCM-Core / CI""",0.47108427,- Renamed the main executable from git-credential-manager to git-credential-manager-core to allow for easier side-by-side use with Java GCM and Windows GCM during the preview (#70),Update package Nerdbank.GitVersioning,0
500,Merge pull request #273 from mjcheetham/cmdline,0.43883604,@mminns ,Use correct window title for device code in GitHub UI,0
501,draft multi-user doc,0.44309554,Add workaround for Windows Broker (WAM) running as admin (#344),Use the correct window title for the GitHub device code dialog window. Previously this was re-using the same title as the 2FA code window.,0
502,Add unit tests for get/erase/store commands,0.42894167,Add new diagnose command to help debug problems in the wild (#463),,0
503,install: include core UI app in all installers,0.45800397,"Set the full path to standalone GCM Core installs, enabling overriding of bundled versions (#188, #199)",Allow shortcut to perform OAuth from first prompt with Bitbucket,0
504,Update Azure Pipelines YAML to build macOS msauth helper,0.59861493,Share the MSAL token cache with Microsoft developer tools on macOS as we already do on Windows (#275),"Add a new ""Sign in with OAuth"" button to the initial credentials prompt for Bitbucket. This allows users to avoid typing in a username/password at all.",0
505,Merge pull request #29 from mjcheetham/interop-refactor,0.39984423,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)","Add support for the user to select OAuth authentication in the first credential prompt. Previously the user must either update their config to remove the 'basic' auth mode, OR otherwise pass the initial username/password prompt (for example with an app password). Users can now signify they want to use OAuth immediately.",0
506,plaintext-credstore: add plaintext credstore,0.40212393,Create Linux plaintext store with safer directory permissions (#397),,0
507,app: fix installation dir calculation,0.5518756,Fix various problems with install path and app path variables #968,"Update the WSL documentation to point to the correct standalone system-wide GCM install, and also add a section about using the standalone\ user-only installer. The installation path is under %LocalAppData% in this case.",0
508,docs: update FAQ with comment on credential.useHttp,0.50408804,"Respect http.sslCAInfo settings (#242, #411)",Fix bug in Azure Repos binding list command,0
509,Merge pull request #7 from mjcheetham/add-license-info,0.4083936,Add workaround for Windows Broker (WAM) running as admin (#344),"There has been a behaviour change in the System.CommandLine library. Previously string arguments that were missing would be null, but now they are the empty string. Update downlevel use of the organization parameter in BindCmd to also expect an empty/whitespace string, as well as null.",0
510,Merge pull request #464 from mjcheetham/dpapi,0.39480934,Fix WSL configuration instructions (#479),Issue/218,0
511,github: make OAuth the default auth mode,0.6572088,Improved usability for GitHub auth (#587),,0
512,docs: fix path in docs/rename.md (#1115),0.5034298,"Refactor namespace, assembly and project names (#500)",,0
513,main: fix app path name of Windows dropping exe,0.5102776,Fix various problems with install path and app path variables #968,,0
514,Merge pull request #56 from mjcheetham/http-on-context,0.46038887,Auto-detect on-premises/self-hosted providers via HTTP headers (#262),"Stored credentials for Bitbucket.org are validated before returning. Assume DC/Server credentials are good and rely on Git to try them and, if necessary, ask GCM to ERASE invalid ones. Add GCM_BITBUCKET_ALWAYS_REFRESH_CREDENTIALS/bitbucketAlwaysRefreshCredentials configuration option to revert to old behaviour Added additional tests to hit > 66% test coverage for Atlassian.Bitbucket",0
515,osx: dynamically skip keychain test if invalid,0.50189257,Better warning messages on macOS when there are Keychain issues (#305),Update issue template for WSL tracing,0
516,introduce CoC,0.4401512,   (CVE-2020-26233),Update the new issue templates with the extra required WSLENV environment variable that is required for passing trace envars to the Windows host.,0
517,Merge pull request #674 from wolf99/dependabot,0.5328206,@wolf99 ,Update README.md,0
518,Merge pull request #181 from microsoft/master,0.49607903,Add workaround for Windows Broker (WAM) running as admin (#344),Fix setx command,0
519,Update markdownlint-cli2-action to 7.0.0,0.5350317,Update System.CommandLine and fix some bugs (#531),,0
520,Remove dependency of GHES to gitub.com constant,0.57613504,GHES OAuth support (#354),small formatting issues in uninstall section for linux.,0
521,Clarify Linux strategy in readme,0.47508097,Create Linux plaintext store with safer directory permissions (#397),Add basic support for generating code coverage reports,0
522,Merge pull request #53 from mjcheetham/msal-winonly,0.41188872,@mminns ,,0
523,win: fix installer - include missing binaries,0.6008149,"Fix missing dependencies in Debian package (#506, #514, #528)",Fix a MD table that was not rendering correctly.,0
524,Merge pull request #162 from mjcheetham/newcred2,0.4133433,@mminns ,Batch of documentation fixes,0
525,tests: skip Libsecret tests that require a GUI,0.5657949,Allow use of older versions of libsecret such as in Ubuntu 18.04 (#244),,0
526,trace2: redirect standard error,0.5892149,Initial TRACE2 tracing events #1045,,0
527,put the Git helper code on the Git object,0.6755588,- GitHub,Co-authored-by: Matthew John Cheetham mjcheetham@outlook.com,0
528,Merge pull request #719 from ldennington/gitlab-add-read-repo-scope,0.5522084,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)",Co-authored-by: Matthew John Cheetham mjcheetham@outlook.com,0
529,Improve link reference IDs,0.78202945,Update documentation to use reference-style links (#680),Co-authored-by: Matthew John Cheetham mjcheetham@outlook.com,1
530,docs: update contributor guidelines,0.547511,Update documentation to use reference-style links (#680),"TODO include in GitHub actions etc setup, e.g. https://josh-ops.com/posts/github-code-coverage/, once https://github.com/microsoft/vstest/issues/1811 is fixed",0
531,msauth: remove ability to use external helper,0.5301676,Trivially fix the macOS native helper crashes by deleting it 😅 (#264),fixes #189,0
532,xui: return -1 on exception in UI helpers,0.7269207,"Return non-zero code for UI helpers on error (#440, #441)",fixes #394,1
533,github: implement explicit device code flow option,0.6337392,Add explicit device code authentication for GitHub (#478),fixes #412,0
534,trace2: add regions to OAuth,0.5079236,Generic OAuth support via config 🎉 #1062,fixes #413,0
535,Merge pull request #118 from mjcheetham/doc-update,0.4229045,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)",fixes #424,0
536,build(deps): bump lycheeverse/lychee-action from 1.5.2 to 1.5.4 (#955),0.5445689,Speed up build graph (#924),Remove 'core' from docs,0
537,basic: update basic auth to match new cred interface,0.54718614,Add native basic credential UI prompts for Windows (#92),workflows: add CodeQL,0
538,ini: add basic INI file deserialiser,0.41364446,Drop -core suffix from entry executable #551 ,Re-adding CodeQL to ensure all checks work as expected in new org/repo.,0
539,Merge pull request #599 from ejball/ghe-raw-url,0.4776357,@ejball ,workflows: remove CodeQL,0
540,Remove winget workflow,0.59858334,"Fix winget publishing (#332, #338)",The CodeQL Results task has been hanging in Pull Requests in our new repo. Planning to remove and re-add via the GitHub UI in the hopes that will make the task work as expected.,0
541,Refactor in order to simplify adding more tests: GetCredentialServiceUrl,0.50691694,Reduce warnings from tests (#337),Update gcm-test@example.com to gcm@example.com.,0
542,Merge pull request #198 from mjcheetham/osx-installv2,0.4730328,Mac installer will now unlink the Java GCM via Homebrew if installed (#45),Fix Debian package build script copy command,0
543,Merge pull request #668 from wolf99/lint-markdown,0.5140722,@wolf99 ,"Drop ""Core"" from the social banner image",0
544,fs: resolve symlinks and fix bugs in *FileSystem impls,0.58580285,"Fix problems with resolving the executable file path on Linux (#298, #229, #252)",,0
545,docs: highlight GitLab support in README.md,0.62187433,- GitHub,Update references to aka.ms/gcmcore- to aka.ms/gcm/.,0
546,Signing: add python script for Linux signing,0.48843387,Sign Linux tarball and .NET tool #985 ,Replacing references to microsoft/Git-Credential-Manager-Core with references to GitCredentialManager/git-credential-manager.,0
547,Simplify native/managed marshaling code for MacOSKeychain,0.5590113,Enable copy/paste/cut etc on fields in the Microsoft authentication WebView on MacOS (#82),Show GitHub terminal prompts when no GUI session,0
548,Ignore lint for anchor for Linux install instructions,0.51054054,Fix computation of installation path on Linux/single-file publish (#310),"With the ongoing work to migrate GCM to its new org, we're taking the opportunity to update our references to GCM Core/GCM-Core in documentation to GCM. Note that this change is limited to documentation only - executables and assemblies will be updated at a later time.",0
549,Merge pull request #200: Just two tiny typos,0.42366606,"Fix winget publishing (#332, #338)",Remove the symlinks to the GitHub and Bitbucket UI helpers in /usr/local/bin. These are not required to have the core GCM application locate the helpers and just create more noise in the user's $PATH.,0
550,wincred: fix bug in credential matching on port nums,0.7446934,Corrected matching of Windows credentials when port numbers were used in search (#748),"The Debian package build script incorrectly copies the containing directory to the destination tree rather than just the contents recursively. This means we end up with: usr └── local     ├── bin     │   ├── Atlassian.Bitbucket.UI -> ../share/gcm-core/Atlassian.Bitbucket.UI     │   ├── git-credential-manager-core -> ../share/gcm-core/git-credential-manager-core     │   └── GitHub.UI -> ../share/gcm-core/GitHub.UI     └── share         └── gcm-core  ** --->    └── Release                 ├── Atlassian.Bitbucket.UI                 ├── git-credential-manager-core                 ├── GitHub.UI                 ├── libHarfBuzzSharp.so                 ├── libSkiaSharp.so                 └── NOTICE ..rather than: usr └── local     ├── bin     │   ├── Atlassian.Bitbucket.UI -> ../share/gcm-core/Atlassian.Bitbucket.UI     │   ├── git-credential-manager-core -> ../share/gcm-core/git-credential-manager-core     │   └── GitHub.UI -> ../share/gcm-core/GitHub.UI     └── share         └── gcm-core             ├── Atlassian.Bitbucket.UI             ├── git-credential-manager-core             ├── GitHub.UI             ├── libHarfBuzzSharp.so             ├── libSkiaSharp.so             └── NOTICE Since the symlinks are wrong, the installation is broken.",1
551,platformutils: add ability to read OS version,0.55690986,UI on macOS and Linux thanks to AvaloniaUI 🎉 (#336),"Show the terminal/TTY based prompts when there is no desktop/GUI sessions present for GitHub. Currently the Bitbucket and Microsoft auth stacks correctly detect the lack of a desktop session and use terminal prompts - GitHub does not. Without this change, SSH-ing in to a machine we'd still try and show a UI prompt where there is no way to interact with it!",0
552,Add linux branch and spacing,0.42667222,Fix computation of installation path on Linux/single-file publish (#310),Only set credential.provider for dynamic matches,0
553,Merge pull request #377 from ldennington/update-linux-deployments,0.5271102,Align with dotnet-supported Linux distributions (https://github.com/GitCredentialManager/git-credential-manager/pull/953),"Only set the credential.provider setting after auto-detection of the provider that used dynamic (network calls) matches. Currently we set the provider config setting after a successful auto-detection, even if we matched ""simply"" based on the host name (and didn't need a network call). The original idea of this ""set after detect"" was really to avoid having to do auto-detection that involved a network call, and not the cheap static matches. Change the logic in the host provider registry to only persist the provider setting if the network call was made.",0
554,Removing branch,0.39302096,Trivially fix the macOS native helper crashes by deleting it 😅 (#264),Use wslview to launch browser in Windows from WSL,0
555,Merge pull request #111 from mjcheetham/fix-lg2error,0.54350686,Fix a bug with handling libgit2 errors (#111),Update System.CommandLine to 2.0.0-beta1.21216.1,0
556,Updates RFC links to authoritative URL,0.62701184,Update documentation to use reference-style links (#680),Fix release builds,0
557,wincredmgr: update Windows CredManager to impl new interface,0.58512086,Add ability to read GCM default settings from the Windows Registry (#404),,0
558,env: introduce CreateProcess method in IEnvironment,0.4336277,"Refactor namespace, assembly and project names (#500)",,0
559,Merge pull request #672 from hickford/gitlab-docs,0.52451426,Add support for using WSL Git configuration (#461),,0
560,docs: add generic OAuth documentation,0.70490277,Generic OAuth support via config 🎉 #1062,Use the new Microbuild pool from 1ES.,1
561,gitlab: pass --url arg to GitLab UI helpers,0.7405038,- GitHub,README: add information on removal from  MSFT Ubuntu feeds,1
562,docs: update aztokens doc to add PAT REST API link,0.47685176,Experimental support for not using PATs for Azure Repos - default disabled (#294) (read more here),"As part of the migration of GCM  out of the microsoft org, we removed packages from the Microsoft Hirsute/Bionic feeds. Adding a note to the README informing users that these packages are no longer available and that installing the debian package from the releases page is the preferred mode at this time.",0
563,Add pre build step,0.474588,Codebase and build improvements (#49),Update the System.CommandLine package to 2.0.0-beta1.21216.1 to hopefully fix some problems with dotnet-suggest registration caused by Process::UseShellExecute differences between .NET Framework and .NET (Core). https://github.com/jonsequitur/command-line-api/commit/ad22b69ac8944fe29fd3433c4072828f3398d5af https://github.com/dotnet/command-line-api/issues/1254 https://github.com/microsoft/Git-Credential-Manager-Core/issues/505,0
564,build(deps): bump actions/setup-dotnet from 1 to 2,0.51538515,Improved detection of dotnet on Linux (#685),"When installed inside of a Linux environment we typically look for a set of utilities to open the user's preferred browser (xdg-open, gnome-open, kfmclient). However, if we are actually in a WSL (Windows Subsystem for Linux) distribution, these utilties may not be/are not present. Instead we can try and use the wslview utility that will launch the user's browser on the Windows host. Appending wslview to the list of utilities to open the browser means no behaviour change for existing Linux users, but for WSL distros we now have a chance to still open the browser.",0
565,Break inline code line,0.5177007,Unify documentation line length (#862),,0
566,Notarize and staple the installer pkg on macOS,0.67890966,Notarize the macOS installer and binaries to permit running on macOS Catalina 10.15 (#84),Remove winget workflow,0
567,Extend IGitConfiguration to allow manipulating multivars,0.3796075,Use native Git path interpolation for config values (#439),"We have decided to remove GCM Core's winget publishing workflow for the following reasons:  We want to encourage Windows users to install the bundled GCM Core that comes with Git for Windows GCM Core has 2 installers with the same arch and type (user and machine), which wingetcreate doesn't support Removing this option will decrease the complexity of our GCM Core's release matrix If users need to install GCM Core separately from Git for Windows, they can download the appropriate installer from the releases page  Thus we are removing the workflow with this change. Note: We are unable to deprecate the packages we have already released due to lack of winget support for this scenario. Tracking here: https://github.com/github/git-fundamentals/issues/756",0
568,linux: add Linux Azure Pipelines release,0.5454482,Migrated release process from Azure DevOps to GitHub actions (#707),Set credential.provider after successful auto detection probe,0
569,git: fix --get-all output parsing bug,0.60236245,Fix reading empty Git configuration entry values (#215),,0
570,Add KDE Gitlab (invent.kde.org) instance to the list of supported services (#920),0.5319641,- GitHub,"After we've detected the host provider from an auto-detection network probe, set the credential.provider setting so we can avoid the expensive operation in the future. If we fail to set this then warn the user and ask them to set the configuration manually.",0
571,elevate Git process creation to the interface,0.652075,- GitHub,Include all shared libraries in Debian package,0
572,msauth: reorder CanUseBroker logic,0.41836154,@mminns ,Remove release-apt-get workflow,0
573,Merge pull request #305 from mjcheetham/osx-msal-restartmsg,0.4392004,Consume new MSAL library versions (#346),"We are no longer deploying debian packages to Microsoft feeds. Further, all previous deployments have been removed from the applicable feeds. Removing the instructions for installation via apt-get in light of these changes.",0
574,windows: split Windows installer in to user/system,0.79906386,Split the Windows installer into user- and system-wide 'flavours' (#197),"With the move to the Git Credential Manager org (and the general direction we're heading in for our release processes) we no longer want to deploy debian packages to Microsoft feeds. We may re-visit a different feed in the future, but removing the workflow for now - users can install the debian package from the releases page or install from source.",1
575,Merge pull request #196 from mjcheetham/fix-wia,0.51399106,Fix WSL configuration instructions (#479),"Include missing Avalonia native shared libraries in the Debian package. They are already being included in the tarball, but omited from the Debian package. Change the build script to do a recursive copy cp -R so that as dependencies change over time, we don't miss any!",0
576,docs: update readme and FAQs; drop preview wording,0.47331607,Update documentation to use reference-style links (#680),Update readme to call out G4W bundling,0
577,build(deps): bump actions/checkout from 3 to 3.1.0,0.4747022,Speed up build graph (#924),Update to MSAL.NET 4.37,0
578,Build Linux.Payload specifically,0.63085485,Very early support for Linux (#135),Call out that installing GCM as part of G4W is preferred.,0
579,trace2: exit message time in utc,0.6041101,Initial TRACE2 tracing events #1045,Match libcurl lowercase proxy environment variable behaviour,0
580,ISSUE-329 Document the addition of Bitbucket AuthModes,0.71124816,Bitbucket DC OAuth support (#607),Fix CONTRIBUTING.md link to LICENSE,1
581,Fix typo,0.46728334,- Various bug fixes and improvements,"libcurl supports multiple different environment variables [1] to configure proxy behaviour: http_proxy, https_proxy, all_proxy, and no_proxy. Unlike most other environment variables these proxy envars are normally lowercase, not uppercase. This convention was set by libwww back in the early 1990s. When libcurl was first released however, it was not aware of this schism and only implemented checks for uppercase variants of these envars: HTTP_PROXY, HTTPS_PROXY, ALL_PROXY, and NO_PROXY. In time, libcurl learned to also read the lowercase variants, and gives them precedence over the uppercase forms (since the former are quasi- standards). However, to further complicate the matter, libcurl no longer reads the uppercase HTTP_PROXY variable specifically. This change was made to address a security concern with some CGI webservers [2]. The problem is that today GCM only reads the uppercase variants of the environment variables! This is inconsistent with libcurl, and therefore Git's behaviour (that we aim to be consistent/co-operative with). We change GCM's behaviour to match that of libcurl/Git in that the lowercase proxy envars are preferred to the uppercase ones, and the uppercase HTTP_PROXY variable is ignored. Dropping support for the HTTP_PROXY uppercase envar is technically a breaking change, but if the user had only set this uppercase envar then Git would not be proxying the actual remote calls, only GCM, which is most likely not what the user wanted. [1] https://everything.curl.dev/usingcurl/proxies#proxy-environment-variables [2] https://everything.curl.dev/usingcurl/proxies#http_proxy-in-lower-case-only",0
582,release: add installer validation,0.7862676,Validate installers before publishing (#813),Match NO_PROXY formats to libcurl behaviour,1
583,Update FAQ with some SSH questions,0.50666296,"- Microsoft authentication is performed in-process on Windows, with support for GUI-less environments (such as SSH) via device code flow (#75)",Clean up README.md and CONTRIBUTING.md,0
584,git: replace progdata/xdg config levels with unknown,0.5918704,Avoid using the newer --show-scope Git config option - work with downlevel Git versions (#318),"We aim to be compatible with the behaviour of Git as much as possible when it comes to network settings. This enables users to setup Git proxy settings and get the same setup ""for free"" with GCM. Git uses libcurl to provide it's HTTP interactions. The NO_PROXY setting is used by libcurl to disable proxy settings for specific hosts. We previously attempted to plumb the value of NO_PROXY through to the .NET WebProxy class' list of ""bypassed addresses"" (the set of hosts that should not be proxied). However, the .NET class expects a set of regular expressions which is unlike libcurl! As a result, libcurl permitted values for NO_PROXY were throwing errors inside of GCM since they are not valid regexs. In this commit we perform a transformation of the NO_PROXY list and construct a set of regular expressions that match addresses in the same way as libcurl does. The transformation is as follows:  strip any leading periods '.' or wildcards '*.' escape the remaining input to match literally (e.g.: '.' becomes '.') prepend a group that matches either a period '.' or a URI scheme    delimiter '://' - this prevents partial domain matching append a end-of-string symbol '$' to ensure we only match to the    specified TLD and port  See the libcurl documentation on NO_PROXY behaviour: https://curl.se/libcurl/c/CURLOPT_NOPROXY.html",0
585,avnui: include images in app app views in Avaloina UIs,0.5231502,UI on macOS and Linux thanks to AvaloniaUI 🎉 (#336),Update our MSAL.NET dependency to 4.37 from 4.31. This should come with the following updates/fixes that we care about:  Can set embedded web view (legacy) window title to custom message Fixes some problems with WAM dialogs appearing behind parent windows Moves WAM to no longer being experimental Better MSA-PT support when used with WAM Numerous performance improvements with authority discovery Various WAM bug fixes  Fixes #239,0
586,Replace githubusercontent images,0.59640545,- GitHub,Remove line from README stating we don't deploy our debian packages to official Microsoft feeds.,0
587,stringcmp: add more tests to GitConfigKeyComparer,0.5302173,Use native Git path interpolation for config values (#439),Recommend testing of impacted projects with UI changes.,0
588,app: fix Windows app-path resolution,0.53073347,Fix various problems with install path and app path variables #968,Replace Microsoft in GCM namespaces/file names,0
589,Merge pull request #388 from microsoft/vtbassmatt-patch-1,0.49511993,Add workaround for Windows Broker (WAM) running as admin (#344),,0
590,avalonia: update to Avalonia 0.10.7,0.4758312,More winget publishing fixes (#353),This change updates the following project/directory names according to the below: Microsoft.Git.CredentialManager --> Core Microsoft.Git.CredentialManager.Tests --> Core.Tests Microsoft.Git.CredentialManager.UI --> Core.UI Microsoft.Git.CredentialManager.UI.Avalonia --> Core.UI.Avalonia Shared.UI.Windows --> Core.UI.Windows,0
591,Merge pull request #813 from ldennington/validate-installers,0.50960064,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)",Updated the following namespaces: TestInfrastructure --> GitCredentialManager.Tests Microsoft.Git.CredentialManager --> GitCredentialManager Microsoft.Git.CredentialManager.Tests --> GitCredentialManager.Tests Microsoft.Git.CredentialManager.UI --> GitCredentialManager.UI Microsoft.Git.CredentialManager.UI.Avalonia --> GitCredentialManager.UI Shared.UI.Windows --> GitCredentialManager.UI Git-Credential-Manager --> GitCredentialManager,0
592,docs: update README to list bad Git versions,0.6283891,Avoid using the newer --show-scope Git config option - work with downlevel Git versions (#318),This change updates the following assembly names: Microsoft.Git.CredentialManager --> gcmcore Microsoft.Git.CredentialManager.UI --> gcmcoreui Microsoft.Git.CredentialManager.UI.Avalonia --> gcmcoreuiavn Shared.UI.Windows --> gcmcoreuiwpf It also updates the corresponding xaml/iss files with the new names.,0
593,Fix syntax error about build number in the Inno Setup file,0.5022962,Fix reading empty Git configuration entry values (#215),,0
594,github: reimplement credential and 2FA WPF views,0.64939475,WPF-based GitHub auth UI (#40), add pat as possible option to credential.gitHubAuthModes add pat as possible option to GCM_GITHUB_AUTHMODES fix formatting,0
595,Support AAD in MSA,0.6099889,- Support AAD users as guest users in MSA-based Azure DevOps organizations (#32),Remove auto-detection progress/info message,0
596,git: drop unused git config extension methods,0.67024755,Avoid using the newer --show-scope Git config option - work with downlevel Git versions (#318),"Remove the ""info: detecting host provider for 'URL'..."" message that is only causing noise for users. Fixes #492",0
597,tests: run libsecret tests,0.529693,Allow use of older versions of libsecret such as in Ubuntu 18.04 (#244),Update README to list versions of Git that we are/not compatible with,0
598,Merge pull request #480 from mjcheetham/fix-winstall,0.5540646,Fix WSL configuration instructions (#479),,0
599,Fix new list lint issue,0.5289143,"Fix winget publishing (#332, #338)","Add a section to the README document that lists versions of Git that GCM is known to have problems with, such as 2.26.2 that broke credential configuration parsing.",0
600,Clean up README,0.3877596,- Various bug fixes and improvements,Set up infrastructure for wingetcreate,0
601,Merge pull request #431 from karlhorky/patch-1,0.44843775,Fix WSL configuration instructions (#479),Updating inno installer metadata to align with the specification outlined in https://github.com/github/git-fundamentals/issues/700. Also adding appropriate quotations to Installer.Windows.csproj to handle paths with spaces.,0
602,git: include gitcfg scope/level in enumeration results,0.6199171,Avoid using the newer --show-scope Git config option - work with downlevel Git versions (#318),wingetcreate is a Windows exe and thus must be run on Windows. Updating our release-winget workflow accordingly.,0
603,"docs(install): fix link to the "".NET tool"" section (#1007)",0.60381687,Check for broken links in documentation (#700),Speed up host provider auto-detection and make more robust,0
604,build: use new Microbuild package,0.5557993,Codebase and build improvements (#49),"Speed up the auto-detection mechanism in the HostProviderRegistry by setting a short(er) timeout on the probing network call (2 seconds). The default value from the framework is otherwise 100 seconds(!). We introduce a setting for the user to be able to configure this timeout value with the granularity of 1 millisecond. Another problem that occured with this network call was crashes due to TLS configuration issues. The network call was not wrapped in a try-catch block which meant that the entire process would crash if there was a problem. This isn't ideal for what is supposed to be a ""best effort"" feature. Here we wrap the HEAD call in a try-catch and display an appropriate warning message to the user. For completeness, add documentation that explains the auto-detection feature, how to configure the timeout, and how to disable this network call.",0
605,move wam.md contents into broker doc,0.6275118,Add workaround for Windows Broker (WAM) running as admin (#344),"Speed up HTTP HEAD calls made via the HeadAsync extension method by only waiting until the headers have been received, rather than the entire message content.",0
606,Merge pull request #759 from GitCredentialManager/readme-update,0.52964616,Consistently read from stdout before waiting for Git process exit (#1136),Add missing assemblies/files to Windows installer,0
607,diagnose: add networking diagnostic tests,0.53101015,Add new diagnose command to help debug problems in the wild (#463),Added missing quotes in WSL instructions,0
608,gitlab: don't show logo for 3rd party instances,0.59367,- GitHub,"Add missing assemblies and files to the Windows installer setup script. Since the introduction of the shared UI view models between WPF and Avalonia, we neglected to include the new assemblies in the Windows installer package! Also include the NOTICE file that was left out.",0
609,trace2: pass to terminal classes,0.45441025,Initial TRACE2 tracing events #1045,Add explicit GitHub device code authentication option,0
610,Merge pull request #810 from GitCredentialManager/dependabot/github_actions/lycheeverse/lychee-action-1.5.1,0.5189092,Migrated release process from Azure DevOps to GitHub actions (#707),"Update documentation to include the new browser and device authentication modes for GitHub. The old oauth value expands to both browser, device for compatibility.",0
611,release: fix tarball signing and Debian compression (#1009),0.69453436,Sign Linux tarball and .NET tool #985 ,"Add the device code option to the Avalonia and WPF helper UI applications for GitHub. This includes adding a new explicit ""device code"" button to the primary authentication prompt view, and a new device code display prompt.",0
612,Merge pull request #685 from easwarh/eahariha/linux-src-build-script,0.4523496,Fix WSL configuration instructions (#479),"Implement an explicit OAuth device code authentication mode for the GitHub host provider. Previously the 'web browser' option combined both the interactive/browser based flow (when a UI was present), and a TTY-based device code flow. This change allows users to select the device code flow even when they have a desktop/UI session present. This is useful to workaround possible problems with the browser loopback/redirect mechanism.",0
613,wpf: delete old WPF UI helpers for BB and GH,0.54537255,WPF-based GitHub auth UI (#40),One of the commands for WSL configuration was missing quotes which resulted in invalid configuration.,0
614,Merge pull request #348 from microsoft/docs-fix,0.54479563,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)","Consolidate all the UI helper options for the GitHub prompt view in to an Options class (rather than bloat the execution handler with more arguments). Also fix a bug whereby the GitHub host provider would attempt to invoke the UI helper with an --all option when all authentication modes are available, but no such option is available! This option was only available on the old WPF UI helper, and was never carried forward to the Avalonia UI.",0
615,app: fix exception handling/printing,0.48601657,"Return non-zero code for UI helpers on error (#440, #441)",Rename the OAuth GitHub authentication mode to Browser to better match what interaction will happen when selecting this mode. Also prepare for the introduction of an explicit device code OAuth flow mode.,0
616,winui: extract common DialogWindow to shared project,0.4946763,Support the wslview command  to open the browser (#529),Combine WPF and Avalonia UI view models and commands,0
617,docs: fix debian uninstall instructions,0.65004694,"Fix missing dependencies in Debian package (#506, #514, #528)","Update to the latest version of Avalonia to fix various rendering problems including, shadow issues on macOS, and DPI issues on macOS. Fixes #408.",0
618,docs: improve GCM_MSAUTH_FLOW wording,0.47495306,Consume new MSAL library versions (#346),"Reimplement WPF views for the Bitbucket credential and OAuth prompts. The layout is largely unchanged, but now more closely matches the Avalonia layout/implementation of these views.",0
619,trace2: pass to OAuth2Client,0.56304157,Initial TRACE2 tracing events #1045,,0
620,Merge pull request #531 from mjcheetham/cmdline,0.41407755,@mminns ,"Reimplement WPF views for the credential and 2FA GitHub prompts. The layout is now much simpler, and matches the Avalonia-based UI.",0
621,windows: include git-credential-manager-ui.exe in installer,0.59817374,Ensure git-credential-manager-core command is available after Debian package install (https://github.com/GitCredentialManager/git-credential-manager/pull/650),Reimplement/readd the WPF-based GitHub horizontal divider and six digit (2FA code) controls.,0
622,git: ensure that Git config quotes cmd args,0.65914154,Ensure git-credential-manager-core command is available after Debian package install (https://github.com/GitCredentialManager/git-credential-manager/pull/650),,0
623,Remove overzealous ThrowIfTerminalPromptsDisabled check,0.5298659,Reduce warnings from tests (#337),,0
624,docs: separate install information from README,0.4872529,Fix computation of installation path on Linux/single-file publish (#310),"Readd various WPF shared controls and styles including:  DialogWindow control PromptTextBox control WPF converters Password Prompt control   Reintroduce a password text box control, that supports watermarked text   when empty. This is the same control as before, except now it uses a   plain System.String, rather than a SecureString (which is pointless in   practice).  wpf: readd shared WPF styles and colours",0
625,Merge pull request #903 from mjcheetham/fix-winstall,0.50734544,Fix WSL configuration instructions (#479),"Delete the old WPF-based UI helpers for both Bitbucket and GitHub. These will be rebuilt using the view models, commands, and architecture extracted from the Avalonia-based UI helpers.",0
626,README: add information on removal from  MSFT Ubuntu feeds,0.46488085,Add ability to read GCM default settings from the Windows Registry (#404),Change the target for the shared projects to .NET Standard 2.0 so they can be referenced from .NET Framework 4.7.2 and .NET 5 projects.,0
627,ISSUE 329 address PR comments by simplifying the use of ThrowIfUserInteractionDisabled(),0.52167904,Add option to prevent interactivity (#91),"Extract Avalonia specific components from the Bitbucket UI helper in to their own project. The remaining agnostic components (view models, commands) can be shared with the WPF implementation.",0
628,docs: call out different GCM install paths in WSL docs (#1168),0.58465743,Fix WSL configuration instructions (#479),"Extract Avalonia specific components from the GitHub UI helper in to their own project. The remaining agnostic components (view models, commands) can be shared with the WPF implementation.",0
629,Merge pull request #374 from mjcheetham/fix-win-apppath,0.44239873,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)","Pull out all Avalonia specific components from the shared UI project. This will later allow us to share the agnostic shared UI project components with the WPF implementation of the UI helpers, reducing duplicated code.",0
630,Merge pull request #45 from mjcheetham/unlink-javagcm,0.44721687,Mac installer will now unlink the Java GCM via Homebrew if installed (#45),"Remove the direct dependency on Avalonia types in the base WindowViewModel. This will allow us later to extract UI framework agnostic components, to be shared between WPF and Avalonia implementations of the UI helpers.",0
631,wsl: support calling Git inside of WSL,0.818195,Add support for using WSL Git configuration (#461),Return a non-zero exit code when encountering an exception in a UI helper.,1
632,Add ability to read Git config via libgit2,0.6322988,- GitHub,"Trace each UI helper invocation, along with any arguments.",0
633,Create apt-get release pipeline (#221),0.65427834,Release pipeline fixes #995 #1009 #1061,Typo.,0
634,xui: add new HelperApplication base type,0.53184843,Generic OAuth support via config 🎉 #1062,typo,0
635,Merge pull request #465 from mjcheetham/win11,0.4277113,Fix WSL configuration instructions (#479),Update the FAQ document with an explanation on why the credential.useHttpPath setting is required for Azure DevOps.,0
636,Merge pull request #33 from mjcheetham/dsym-archive,0.40641958,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)",supported platforms,0
637,osx: ensure /usr/local/bin dir exists on install,0.8371555,Ensure the /usr/local/bin directory exists on install (#257),Co-authored-by: Matthew John Cheetham mjcheetham@outlook.com,1
638,Fix PR suggestion typo,0.37888008,Fix a bug to prevent setting credential.provider when it wasn't needed (Only set credential.provider for dynamic matches #535),Add DPAPI based credential store on Windows,0
639,build(deps): bump actions/upload-artifact from 2 to 3,0.497025,Speed up build graph (#924),,0
640,address feedback from Azure Identity team,0.6373841,Access Azure storage account using service principle credentials (#851),,0
641,xui: remove Avalonia deps in WindowViewModel,0.509478,"~Set MSAL embedded webview window title to give more context to the user (#347, #239)~ Not working currently (see here)",Add diagnostic command for debugging issues,0
642,Merge branch 'main' into bump-winget-version,0.4061584,- Renamed the main executable from git-credential-manager to git-credential-manager-core to allow for easier side-by-side use with Java GCM and Windows GCM during the preview (#70),Add support for using WSL Git for configuration,0
643,Merge pull request #886 from ldennington/dotnet-tool,0.49958804,Distribute GCM as a dotnet tool (#886),Correctly detect Windows 11 version numbers,0
644,fixup! Add install from source script,0.5281606,Fix build script error creating incorrect x64 packages for macOS (https://github.com/GitCredentialManager/git-credential-manager/pull/778),,0
645,Merge pull request #308 from mjcheetham/osx-noroot-postinstall,0.4453846,"Fix winget publishing (#332, #338)","Expand existing checks for ""is Windows 10"" to ""is at least Windows 10"" to also capture Windows 11.",0
646,Merge pull request #197 from mjcheetham/winstall-split,0.5032033,Fix WSL configuration instructions (#479),,0
647,workflows: auto-generate maintainer away issue,0.7335875,Auto-generate maintainer away notification issues (#842),,1
648,docs: update git credential cache platforms,0.7651873,Support git-credential-cache as a credential backing store on Linux (#287),,1
649,http: respect http.sslCAInfo setting(s) in Git,0.7656034,"Respect http.sslCAInfo settings (#242, #411)",,1
650,release: consume auto-rotated SSL certificate,0.5131257,"Respect http.sslCAInfo settings (#242, #411)",,0
651,Merge pull request #383 from microsoft/vtbassmatt-patch-1,0.49371916,"Fix a bug with using Microsoft Accounts with Azure Repos (#143, #148)",,0
652,workflows: add CodeQL,0.5183619,Codebase and build improvements (#49),,0
653,uri: support ports,0.5046259,"Improve host provider auto-detection logic (#384, #481)",Add a diagnostic command diagnose that can run various tests to verify the operation of various components of GCM. Log files can be written to an output directory.,0
654,Adjust list numbering format,0.4024573,Simplified build number included in artifact names (#638),Add the ability to read the current OS version string.,0
655,implement credential-cache as,0.54988426,Access Azure storage account using service principle credentials (#851),,0
656,issue #722,0.510318,   (CVE-2020-26233),"Add an explicit test for credential persistence. If Windows indicates that either we don't have a credential set for the logon session, or the maximum allowed persistence for generic credentials is less than ""local machine"" then fail.",0
657,wpf: readd shared WPF controls and styles,0.5216389,WPF-based GitHub auth UI (#40),"Add a new credential store on Windows that uses DPAPI to encrypt the password field in a file. The file format is otherwise identical to the Plaintext credential store. The default location for the DPAPI store is ~/.gcm/dpapi_store and this can be configured with the GCM_DPAPI_STORE_PATH or credential.dpapiStorePath. The addition of the DPAPI credential store allows for secure credential storage on Windows in cases where the Windows Credential Manager cannot work/has limitations. Specifically, DPAPI works over network sessions (like SSH) and is not subject to size limits.",0
658,git: consistently read from stdout before exit wait,0.929288,Consistently read from stdout before waiting for Git process exit (#1136),"Implement a unified proxy pattern for the available credential stores. This allows users to select from multiple stores on all platforms, as we currently support for Linux.",1
659,Don't attempt to deserialize nulls from bitbucket response,0.55965877,"Fix a bug in parsing Bitbucket 2FA responses (#128, #126)",,0
660,Merge pull request #101 from mjcheetham/github-oauth-ui,0.45058203,Add preliminary support for OAuth with GitHub AE (requires server support/changes) (#343),,0
661,Merge pull request #541 from ldennington/remove-core-from-docs,0.5240818,Drop -core suffix from entry executable #551 ,,0
662,Merge pull request #712 from mjcheetham/all-protos,0.4329639,Fix WSL configuration instructions (#479),,0
663,winui: extract cmdline util methods,0.44430178,Distribute GCM as a dotnet tool (#886),Add support for calling back to the Git executable in a Windows Subsystem for Linux (WSL).,0
664,app: fix bug in oldname warning on Windows,0.5162875,Fix a bug with the GitHub provider on Windows in launching the auth UI with a username (#205),Use the new CreateProcess method on the IEnvironment component in the GitProcess class.,0
665,bitbucket: add OAuth option to first prompt,0.619511,Updated Bitbucket UI to separate OAuth and username/password options (#754),Introduce a CreateProcess method on the IEnvironment component. This will serve as a place to consolidate Process object creation that currently exists in multiple places.,0
666,ui: correctly check for GUI on Win/Mac/POSIX,0.5828377,UI on macOS and Linux thanks to AvaloniaUI 🎉 (#336),Upgrade update-winget action to v1.4,0
667,"assets: drop ""Core"" from the social banner image",0.36671776,Add option to prevent interactivity (#91),This version allows us to update existing winget manifests by specifying a manifest's SHA if it already exists in microsoft/winget-pkgs. Pull Requests  #178: Allow updates to existing winget manifests,0
668,fs: pull GCM data directory property up to IFileSystem,0.50580007,Add ability to read GCM default settings from the Windows Registry (#404),Drop ubuntu 16.04 from CI before GitHub drops the runner,0
669,Merge pull request #729 from miya789/main,0.44045216,@miya789,Treat empty proxy settings as a signal to not use a proxy,0
670,trace2: write version and start events,0.72896993,Initial TRACE2 tracing events #1045,Drop the Ubuntu 16.04 CI build and test before GitHub drop the Ubuntu 16.04 hosted runner. https://github.blog/changelog/2021-04-29-github-actions-ubuntu-16-04-lts-virtual-environment-will-be-removed-on-september-20-2021/,1
671,build(deps): bump mjcheetham/update-homebrew from 1.2 to 1.3,0.5754276,Discontinued incorrect use of Homebrew Git shim (#731),Add CodeQL scanning,0
672,use cache as the option name,0.45715424,"Allow hostname-specific proxy override to use no proxy (#442, #449)",Use built-in git path interpolation for config settings,0
673,Merge pull request #150 from mjcheetham/fixworkflows,0.43849778,Fix WSL configuration instructions (#479),"When proxy settings are set in Git, an empty value is treated as ""do not use a proxy"". We update GCM to do the same thing; when an empty value is set, we do not use a proxy. This allows for the scenario where a proxy has been set globally (unscoped) but a specific (scoped) remote does NOT have a proxy set.",0
674,uri: support ports and split queries/fragments from path (#825),0.5170283,Use native Git path interpolation for config values (#439),,0
675,github: enterprise instances w/ null ver support OAuth,0.6356128,OAuth Device Authorization Grant support for GitHub (#147),,0
676,SettingsTests: drop unused variables,0.50780654,Reduce warnings from tests (#337),,0
677,Merge pull request #2 from mjcheetham/secure-storage,0.4214276,Secret Service sec_free: Assertion cell->requested > 0 failed. error fix #996,,0
678,Fix README.md check-marks in feature table,0.5379319,Check for broken links in documentation (#700),"The Version property (calculated only once, on first access) has type GitVersion, made up of the pre-custom components of a Git version (i.e., before a .windows or .vfs). This version is currently only used in GitConfiguration in order to determine whether to use the now-deprecated canonical type constraint flags (for backwards-compatibility purposes) when accessing a config value. Signed-off-by: Victoria Dye vdye@github.com",0
679,Merge pull request #174 from microsoft/linux-release-build,0.47309202,Fix computation of installation path on Linux/single-file publish (#310),Return non-zero exit code on exception,0
680,Revert back to new HttpClient instance per request,0.45730573,Auto-detect on-premises/self-hosted providers via HTTP headers (#262),Switch to deprecated settings for config type (for better compatibility).,0
681,terminal: add a simple TTY-based menu system,0.54793286,"- Show the terminal/TTY based prompts when there is no desktop/GUI sessions present for GitHub (#453, #538)",Path interpolation enabled (using Settings.TryGetPathSetting) for the credential helper path and custom cert bundle (httpCAInfo) path. Signed-off-by: Victoria Dye vdye@github.com,0
682,Add Azure Repos host provider,0.77988505,- Azure Repos,"The GetSettingValues function is updated to include an isPath flag which, when true, will pass the flag to GitConfiguration.TryGet(...) when applicable. In order to have this work when a RemoteUri is specified, GitConfiguration.TryGet(...) is called directly if isPath is true after enumerating all settings (since Enumerate does not allow specifying a canonical type). Additionally, TryGetPathSetting is added as a convenience function for getting the first found path setting from GetSettingValues(...). This commit does not change the value of any existing settings  - it only introduces the ability to read settings as canonical paths (if sourced from the git config). Signed-off-by: Victoria Dye vdye@github.com",1
683,Implement a native TTY interface for Windows,0.5875881,Add native basic credential UI prompts for Windows (#92),"This change adds a GitConfigurationType enum to GitConfiguration and includes it as an argument to TryGet, GetAll, and GetRegex. This argument (if not None) includes the appropriate --type flag in the git config. In the TryGet extension function, an isPath boolean maps to usage of GitConfigurationType.Path for true and GitConfigurationType.None for false. Existing usage of the updated functions has not changed (that is, all usages specify GitConfigurationType.None). Signed-off-by: Victoria Dye vdye@github.com",0
684,windows: add missing DllImport attribute to LocalFree (#923),0.51355493,"Update MSAL; set MS auth embedded window title (#239, #512)",Return a non-zero program exit code when an unhandled exception is encountered at the top-level command line handling.,0
685,Merge pull request #288 from NN---/net5.0,0.5000926,@NN---,Changes to comply with GitHub OSS,0
686,trace2: add regions (#1162),0.60426587,Initial TRACE2 tracing events #1045,,0
687,settings: pull generic 'get' methods up to interface,0.51858515,Add generic username/password UI (#871),,0
688,input: better input arg checking/handling,0.39187235,Add option to prevent interactivity (#91),Split macOS and Linux implementations and fix password echo bug,0
689,Merge pull request #175 from mjcheetham/fix-config,0.44550455,Fix WSL configuration instructions (#479),,0
690,Merge pull request #275 from mjcheetham/msalcache-osx,0.43167543,@mminns ,,0
691,msauth: update MSAL library version to latest,0.84010553,Consume new MSAL library versions (#346),,1
692,Start a build-installers GH workflow,0.5096879,- Installation now configures GCM Core per-user (sets credential.helper in the current user's $HOME/.gitconfig) but continues to be installed in a system-wide location. Other users can opt-in to using GCM Core by setting their own configuration by running git-credential-manager-core configure (#57),,0
693,Fix spellings,0.4074039,- Various bug fixes and improvements,Drop unnecessary async keyword from method in tests,0
694,Updating workflow for testing,0.544016,Codebase and build improvements (#49),"Previously the PosixTerminal class used the POSIX termios structure and tcgetattr/tcsetattr functions for both macOS and Linux systems. However, it transpires that the definition of the termios flags fields differs between Mac and Linux. On Linux the fields are unsigned int (4 bytes), but on macOS the fields are unsigned long (8 bytes). This change splits the termios structure into Mac and Linux flavours and sets the correct field offsets.",0
695,Merge pull request #349 from mjcheetham/main-rename,0.39749208,Fix WSL configuration instructions (#479),Update readme doc to reflect current state of Linux support and features.,0
696,Create codeql-analysis.yml,0.4393176,"- Codebase and build improvements (#29, #33)","Remove planned features section, completed feature",0
697,oauth-ui: Add shared VMs and commands for OAuth,0.62154496,Generic OAuth support via config 🎉 #1062,Update copyright information,0
698,Merge pull request #612 from mjcheetham/wsl-localhost,0.53749365,Fix WSL configuration instructions (#479),The native UI feature from issue https://github.com/microsoft/Git-Credential-Manager-Core/issues/136 was completed in https://github.com/microsoft/Git-Credential-Manager-Core/pull/336 by https://github.com/mjcheetham .,0
699,msauth: drop deprecated TokenCache storage props ctor,0.58195895,Share the MSAL token cache with Microsoft developer tools on macOS as we already do on Windows (#275),"Remove the unnecessary async keyword from the GetSupportedAuthModes method's test, and drop the Async suffix from the method name. This removes a warning from the build of the test assemblies that there is an async method.",0
700,Update gitlab.md,0.6628185,- GitHub,Allow a user to force the GCMC to use Basic Auth and/or OAuth for interactions with bitbucket.org. Issue #329,0
701,macos build: use runtime instead of osx-x64,0.66391623,Notarize the macOS installer and binaries to permit running on macOS Catalina 10.15 (#84),,0
702,registry: speed up auto-detect and make more robust,0.5183586,"Improve host provider auto-detection logic (#384, #481)",,0
703,git: add --get-all and --add Git config commands,0.61923015,- GitHub,,0
704,Merge pull request #745 from GitCredentialManager/ubuntu-uninstall-docfix,0.5104994,Align with dotnet-supported Linux distributions (https://github.com/GitCredentialManager/git-credential-manager/pull/953),address feedback from Azure Identity team,0
705,env: enumerate the PATH envar to locate programs on Windows,0.42583808,"Fix problems with resolving the executable file path on Linux (#298, #229, #252)",,0
706,build: use latest .NET Core SDK 3.1.201 to build,0.70432746,Move to .NET Core 3.1 (LTS) (#101),,1
707,build: update macOS build images,0.62973833,Notarize the macOS installer and binaries to permit running on macOS Catalina 10.15 (#84),Only enumerate local Azure Repos user bindings when inside a repository,0
708,Capture ADAL logs; upgrade ADAL; use correct trace fmt; use exit code,0.44343305,Initial TRACE2 tracing events #1045,242-respect-ssl-ca-info,0
709,github: add PAT authentication mode,0.9050221,"Add explicit PAT authentication mode for the GitHub Provider (#236, #259)","Replicate the behavior of http.sslCAInfo (internally, cURL's cainfo/ OpenSSL's cafile arguments). Implemented by manually comparing the server certificate with the config-specified CA file.",1
710,generic-ui: add WPF impl of OAuth and device code,0.7353885,Generic OAuth support via config 🎉 #1062,Add UI helpers to .deb package & change install location w/ symlinking,1
711,Build HTTP client user-agent string; simplify platform info,0.53569037,Auto-detect on-premises/self-hosted providers via HTTP headers (#262),"If application tracing is enabled, also print any exception stack traces to standard error.",0
712,Clarify workflow_dispatch input description,0.39054906,Codebase and build improvements (#49),"Only attempt to enumerate Azure Repos user bindings in the local Git configuration, when inside a Git repository.",0
713,Rename projects and directories,0.67990535,"Refactor namespace, assembly and project names (#500)",,0
714,docs: fix more broken links in configuration.md,0.60320497,Check for broken links in documentation (#700),,0
715,macOS release: sign and notarize package,0.6387076,Notarize the macOS installer and binaries to permit running on macOS Catalina 10.15 (#84),,0
716,program: fix computation of app path with single file,0.5689603,Fix various problems with install path and app path variables #968,Whitespace cleanup,0
717,Update inno installer metadata,0.55228627,Validate installers before publishing (#813),,0
718,Merge pull request #183 from dscho/avoid-deadlocks-when-reading-the-config,0.43045363,Fix a bug with host provider disposal (#272),Add option for GCM_GPG_PATH environment variable (Linux-only),0
719,Merge pull request #481 from mjcheetham/autov2,0.425771,Fix WSL configuration instructions (#479),,0
720,settings: add extra settings layer from WinRegistry,0.5627852,Add ability to read GCM default settings from the Windows Registry (#404),"If GCM_GPG_PATH is specified, it is assumed to be the path to the GPG executable used by pass and will throw an exception if it is not found. If GCM_GPG_PATH is not specified, GCM Core will attempt to find the correct GPG executable by mimicking the behavior (currently) used by pass (that is, first searching for gpg2, then falling back on gpg if gpg2 is not found).",0
721,remove autobuild,0.51858234,Auto-generate maintainer away notification issues (#842),Create plaintext credential store directory with safer permissions,0
722,git: drop config --show-scope option usage,0.7571691,Avoid using the newer --show-scope Git config option - work with downlevel Git versions (#318),Add ability to specify default settings values from the registry on Windows,1
723,Fix readme brew uninstall instructions,0.49945712,Mac installer will now unlink the Java GCM via Homebrew if installed (#45),"Dynamically skip the macOS Keychain read/write/delete test if the Keychain is in a ""strange"" state. There is an unknown issue that the keychain can sometimes get itself in where all API calls result in an errSecAuthFailed error. The only solution seems to be a machine restart; not possible in CI! The problem has plagued others who are calling the same Keychain APIs from C# such as the MSAL.NET team - they don't know either. It might have something to do with the code signing signature of the binary (our collective best theory). It's probably only diagnosable at this point by Apple, but we don't have a reliable way to reproduce the problem.",0
724,Merge pull request #323 from mjcheetham/wam,0.45527473,Fix WSL configuration instructions (#479),"Clarify that the new registry settings are aimed at enterprises and system administrators, and that the settings are at the lowest precedence; they can always be overridden by the user.",0
725,github: add new Avalonia-based UI helper for GitHub,0.714422,Improved usability for GitHub auth (#587),Updated ISSUE_TEMPLATE from version to --version,1
726,release: correct nupkg path for publishing,0.5681084,Fix computation of installation path on Linux/single-file publish (#310),Clarify that is necessary to run git-credential-manager-core configure.,0
727,Add ability to override host provider from configuration,0.73969287,"- Allow overriding the selection of host provider; also supports GitHub Enterprise scenarios (configuration option, migration guide for users of the credential.authority setting) (#59)",Add documentation about the new enterprise/registry settings.,1
728,Merge pull request #701 from ldennington/update-contributing-guidelines,0.47376415,Update documentation to use reference-style links (#680),"Introduce the concept of another layer of settings (lowest precedence; default values only) below the existing environment variable and Git configuration file mechanisms. Implement on Windows using the Registry, under key: HKLM\SOFTWARE\GitCredentialManager\Configuration",0
729,docs: fix a typo in the HTTP proxy docs,0.5754005,"Allow hostname-specific proxy override to use no proxy (#442, #449)",,0
730,Introduce ISettings component to consolidate envar and Git cfg settings,0.5374147,Use native Git path interpolation for config values (#439),,0
731,release: publish gcm as dotnet tool,0.82250786,Distribute GCM as a dotnet tool (#886),,1
732,plaintextcredstore: create plaintext store with 700,0.46579772,Create Linux plaintext store with safer directory permissions (#397),,0
733,Merge pull request #600 from mjcheetham/tty-pref,0.42124593,Fix WSL configuration instructions (#479),Clarify that is necessary to run git-credential-manager-core configure.,0
734,gitlab: add Avalonia-based UI helper on Mac/Linux,0.6659521,Include UI helpers in Debian package for Linux release; move GCM symlink to /usr/local/bin (#405),"When creating the plaintext credential store root directory, create it with permissions such that only the owner/user can read/write/execute, and not the group or other users. This only impacts newly created store directories; existing directories do not have their permissions modified. Only applies to POSIX platforms.",0
735,libgit2: remove libgit2 references,0.6629071,Fix a bug with handling libgit2 errors (#111),,0
736,Ensure we init IEnvironment before SessionManager (#1167),0.5870595,Correctly detect a UI interactive session on all platforms (#95),,0
737,Merge pull request #115 from mjcheetham/extract-winui,0.36980057,@mminns ,Add a stable anchor for linking to Linux instructions,0
738,linux: rewrite libsecret/glib interop,0.5817963,Allow use of older versions of libsecret such as in Ubuntu 18.04 (#244),,0
739,diagnose: always use IHttpClientFactory for diagnose,0.43786666,Add new diagnose command to help debug problems in the wild (#463),Add instructions for apt-get install to README,0
740,trace2: refactor to prepare for child process-related events,0.6143225,Initial TRACE2 tracing events #1045,"We are currently using 'Release tag' to describe the required input to our workflow_dispatch trigger. This is inaccurate - this field actually requires a 'Release id', which I discovered when testing GCM Core apt-get deployments yesterday. Updating so that the description doesn't confuse folks running the workflow for a release that is not 'latest'.",0
741,libsecret: don't write out identical creds,0.49421033,Allow use of older versions of libsecret such as in Ubuntu 18.04 (#244),Updating README.md with instructions for apt-get setup and install for Ubuntu Bionic and Hirsute.,0
742,Pass through $PATH to find dotnet,0.6820757,Improved detection of dotnet on Linux (#685),Update apt-get workflow to publish to official bionic/hirsute repos,0
743,Merge pull request #542 from mjcheetham/asset-update,0.41031522,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)",This change replaces Python scripts we were calling from the release-apt-get pipeline with inline scripts. It also adds support for releasing to Ubuntu repositories hosted at http://packages.microsoft.com/ (hosting location for Microsoft's official apt/yum repos). This allows users to install via apt-get on Hirsute/Bionic. Details to configure appropriate repos can be found here: https://docs.microsoft.com/en-us/windows-server/administration/Linux-Package-Repository-for-Microsoft-Software).,0
744,Merge pull request #404 from mjcheetham/os-config,0.41374516,Mac installer will now unlink the Java GCM via Homebrew if installed (#45),"a small ""how to use"" tweak",0
745,settings: support scoped enterprise settings (#1149),0.55226934,"Respect http.sslCAInfo settings (#242, #411)","Issue-267 Add fingerprint header, to autodetect Bitbucket DC instances.",0
746,Merge pull request #715 from GitCredentialManager/dependabot/github_actions/actions/github-script-6,0.5328337,Migrated release process from Azure DevOps to GitHub actions (#707),,0
747,Didn't mean to update the comment,0.36974502,@4brunu,Copied and refreshed the Bitbucket development doc from the Git Credential Manager for Windows project.,0
748,Merge pull request #195 from microsoft/gh-patdoc-update,0.4593873,GHES OAuth support (#354),Avoid extra restore in macOS installer creation (fix CI hangs),0
749,credscan: add suppressions for credscan false positives,0.42771614,Reduce warnings from tests (#337),,0
750,trace2: add streamwriter,0.53064305,Initial TRACE2 tracing events #1045,"Avoid an extra dotnet restore during the dotnet publish commands in layout.sh when building the macOS installer. For some reason, the CI machines (and sometimes locally) hang during this step with: ``` Building Installer.Mac Copying uninstall script... Microsoft (R) Build Engine version 16.10.0-preview-21181-07+073022eb4 for .NET Copyright (C) Microsoft Corporation. All rights reserved. Determining projects to restore... ``` Avoiding the restore during publish should be OK since the hosting Installer.Mac.csproj project will have already built (and restored) packages for the dependent projects.",0
751,more unit tests,0.4839583,Reduce warnings from tests (#337),Fix winget tag specification,0
752,build: replace netstandard2.0 TFM with net6.0,0.7385763,Replace netstandard2.0 with dotnet6.0 (https://github.com/GitCredentialManager/git-credential-manager/commit/65cead2b5caa443fde1f9b86d02ab377a80a279c),,1
753,wsl: add ability to detect WSL distro and version,0.6552476,Fix WSL configuration instructions (#479),Fix app entry path computation on Windows,0
754,Update master CI build badge,0.492747,Update to Git Credential Manager Core (beta) on macOS.,The way we located the application (GCM) path was broken on .NET Framework (it worked OK for .NET Core/5.0+).,0
755,Link to GitLab support docs,0.75859,- GitHub,Fix bug in GitHub x-platform UI command line parsing/binding,1
756,helper: allow helper processes to be terminated,0.46077368,Trivially fix the macOS native helper crashes by deleting it 😅 (#264),"The System.CommandLine command line binding requires the parameter names match the option names. During the rebasing of the x-platform UI work, the argument name for the --oauth option was left as browser which means the OAuth browser flow is never shown, even though the base GCM program is passing the right argument/options.",0
757,Merge pull request #278 from AlexanderLanin/patch-1,0.42713946,"Fix winget publishing (#332, #338)",Fix the .NET SDK used in release builds,0
758,settings: support scoped enterprise settings,0.53271747,"Respect http.sslCAInfo settings (#242, #411)","Fix the .NET SDK version used on Mac and Linux to build release builds in Azure Pipelines. The release build started to hang since .NET SDK 5.0.300 was available. Others have reported issues with new SDK patches: https://github.com/dotnet/sdk/issues/16204 The last successful release build used .NET SDK 5.0.203, so let's fix to that version. Last success: https://mseng.visualstudio.com/AzureDevOps/_build/results?buildId=15246465 Current failure: https://mseng.visualstudio.com/AzureDevOps/_build/results?buildId=15390460",0
759,trace2: add performance format target,0.55176866,Initial TRACE2 tracing events #1045,Add cross-platform UI based on Avalonia,0
760,azrepos: add a binding manager to store org-user maps,0.53084636,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)",,0
761,generic: add OAuth support for browser & devicecode,0.7412539,Generic OAuth support via config 🎉 #1062,Mark GHES 3.2 as supporting GCM Core OAuth,1
762,Merge pull request #731 from ldennington/ignore-homebrew-git,0.6197344,Discontinued incorrect use of Homebrew Git shim (#731),Bumping version of update-winget action,0
763,Update link to .NET documentation,0.72040033,Update documentation to use reference-style links (#680),Mark GitHub Enterprise Server (GHES; on-prem server) version 3.2 as supporting the OAuth authentication mechanism.,1
764,trace2: write normal format events in snake case,0.56576633,Initial TRACE2 tracing events #1045,,0
765,Use the global alloc/free methods for native interop,0.49089265,Generic OAuth support via config 🎉 #1062,,0
766,msauth: address some linting issues with braces,0.43892327,- Various bug fixes and improvements,,0
767,azrepos: workaround org@ user hackery,0.5460576,- @czipperz,,0
768,Merge pull request #80 from mjcheetham/port-winsignfix,0.4066649,Fix WSL configuration instructions (#479),,0
769,Enable copy/paste/cut in macOS MSAuth web view,0.7443353,Enable copy/paste/cut etc on fields in the Microsoft authentication WebView on MacOS (#82),Add a new UI helper for Bitbucket using Avalonia.,1
770,docs: add docs for configuring Linux cred stores,0.49255493,Support git-credential-cache as a credential backing store on Linux (#287),Pass the --sms option to the UI helper when prompting for a 2FA code sent via SMS for GitHub.,0
771,Optimise use of Git config from Settings component,0.675835,Avoid using the newer --show-scope Git config option - work with downlevel Git versions (#318),"Add new Avalonia-based ""two-factor"" auth code prompt dialog for GitHub.",0
772,generic: add OAuth test for generic provider,0.72536343,Generic OAuth support via config 🎉 #1062,"Add the main ""credentials"" prompt for the Avalonia-based GitHub helper UI.",1
773,Merge pull request #346 from mjcheetham/msal-vers,0.42950302,@mminns ,Add a new Avalonia UI project for a GitHub UI helper.,0
774,build(deps): bump actions/github-script from 4 to 6,0.51423967,Speed up build graph (#924),"Add a component that uses our Dispatcher, and the Avalonia Dispatcher types to correctly initialise, show, and close windows and views in the Avalonia UI framework, ad-hoc.",0
775,macos environment: ignore homebrew shim,0.59238225,Discontinued incorrect use of Homebrew Git shim (#731),"Add a dispatcher type for use with Avalonia. This dispatcher is different from the built-in Avalonia Dispatcher type. On macOS the underlying platform requires that the main NSRunLoop be run on the entry thread of the process (that is, thread 0). This is unlike on Windows where all that is required is an ""STA"" thread. Because of this we need to ""reserve"" thread 0 (the main entry thread) for running the Avalonia infrastructure, and kick off a new thread to run the rest of the ""normal"" .NET application logic (such as command-line handling). The dispatcher allows queuing of work to be run on the initialised thread, until the loop is terminated. We can use this dispatcher and model to start the Avalonia app/runloops at a defered time, after main app startup. The Avalonia Dispatcher type is then used to push more work on to that inner message pump/runloop after the Avalonia application has started.",0
776,Merge pull request #21 from mjcheetham/mac-adal-logs,0.44876575,Mac installer will now unlink the Java GCM via Homebrew if installed (#45),Add a new application class for helper applications to surface commands and respond over standard output.,0
777,Merge pull request #185 from mjcheetham/docupdate,0.40311515,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)",Add a styled dialog window control for use by UI helper applications built on Avalonia.,0
778,linux: add libsecret based ICredentialStore for Linux,0.5677879,Allow use of older versions of libsecret such as in Ubuntu 18.04 (#244),Add a new project to host all the shared components for Avalonia-based UI helpers.,0
779,Remove Microsoft from assembly names,0.4944944,"Refactor namespace, assembly and project names (#500)",Allow UI helper processes to be terminated by cancelling a CancelationToken that has been passes to InvokeHelperAsync.,0
780,configure: append GCMCore even in system case,0.7087187,- Installation now configures GCM Core per-user (sets credential.helper in the current user's $HOME/.gitconfig) but continues to be installed in a system-wide location. Other users can opt-in to using GCM Core by setting their own configuration by running git-credential-manager-core configure (#57),Extract the OpenDefaultBrowser method to a helper/util class so it can be used by other components.,1
781,trace2: remove order from json properties,0.38656,Initial TRACE2 tracing events #1045,Push the GetApplicationPath method down to the ApplicationBase type so its logic can be shared across other applications.,0
782,Merge pull request #14 from mjcheetham/fix-httpclient,0.45049563,Fix a bug with host provider disposal (#272),"Update CI for rename of default branch to main (and drop the ""beta"" moniker)",0
783,build(deps): bump DavidAnson/markdownlint-cli2-action from 5.1.0 to 6,0.54873896,Codebase and build improvements (#49),"Rename the master branch to main, and drop the ""beta"" moniker for the project now that the other Git credential ""manager"" helpers have all been fully deprecated.",0
784,oauth: add test to validate extra params don't override std params,0.4782201,Improved Bitbucket OAuth performance through verification of access token validity (#518),,0
785,Merged PR 585338: Cut new release including security fix,0.5412334,Fix release builds .NET SDK version (#358),,0
786,Allowing host names only now.,0.5968428,"Allow hostname-specific proxy override to use no proxy (#442, #449)",,0
787,osx-sign: fix macOS release build sign/upload,0.6928704,Fix build script error creating incorrect x64 packages for macOS (https://github.com/GitCredentialManager/git-credential-manager/pull/778),,0
788,app: ensure we locate helpers correctly with single file,0.4598067,Automatically trace to the debugger when attached (#94),Fix documentation links for Windows Broker settings,0
789,Merge pull request #626 from hickford/patch-2,0.5423491,@hickford,,0
790,Simplify ISettings,0.46259025,"- Codebase and build improvements (#29, #33)",,0
791,deb: include all shared libraries in Debian package,0.5568581,Ensure Debian package is expected size and contains necessary files (https://github.com/GitCredentialManager/git-credential-manager/pull/648),Add some new WAM docs,0
792,azrepos: add non-PAT based auth method to AzRepos,0.46153426,Experimental support for not using PATs for Azure Repos - default disabled (#294) (read more here),"Set the MSAL embedded webview window to ""Git Credential Manager"" to give some context to the user where this dialog came from.",0
793,Remove spaces inside code-span elements,0.3959277,Remove use of box drawing characters in warning output (#243),,0
794,environment: fix environment process locator,0.5026506,"Improve proxy environment variable handling (#497, #501, #503)",,0
795,env: avoid virtual member call in ctor; all refresh,0.35839963,Add option to prevent interactivity (#91),"Upgrade our MSAL libraries to the latest versions:  MS.ID.Client 4.29.0 -> 4.31.0 MS.ID.Client.Desktop 4.29.0 -> 4.31.0 MS.ID.Client.Extensions.Msal 2.18.3 -> 2.18.4  This brings a number of fixes that help us, including:  Fix WAM account picker parenting Fix WAM exceptions in console apps Fix encoding of params sent to WAM WebView2 fallback to WebView1 Stop writing junk to standard out on Linux syswebview flows",0
796,Introduce IEnvironment to replace IEnvironmentVariables,0.44252473,"Improve proxy environment variable handling (#497, #501, #503)",,0
797,"macOS release: build, lay out, and codesign payload",0.68205476,Notarize the macOS installer and binaries to permit running on macOS Catalina 10.15 (#84),,0
798,Create and publish zip & tar.gz archives of app and symbols,0.5475327,Publish zip and tar balls of releases (#96),Add WAM workaround for elevated processes,0
799,Merge pull request #39 from microsoft/master,0.50333345,Add workaround for Windows Broker (WAM) running as admin (#344),,0
800,Implement a native TTY interface for POSIX platforms,0.49326634,"Add an OAuth2 client implementation with PKCE support (#99, #102)",Add support for OAuth with GitHub AE,0
801,credentialstore: remove windows,0.6150271,Fix a bug where Windows Integrated Authentication would be disabled by default (#194),"Add a workaround to a broker bug whereby the account control does not appear when running from an elevated process. https://github.com/AzureAD/microsoft-authentication-library-for-dotnet/issues/2560 The underlying issue is to do with COM and the OS account control not being able to call-back in to the elevated process. The workaround is to set the process COM security to ""none"" iif we are on Windows 10, the process is elevated, and the user hasn't disabled the broker. It is possible the call to CoInitializeSecurity may fail, as this can only be called once in the lifetime of a process, and must be called before any COM interactions occur. The CLR may perform some COM interop before we even get to the Main method(!) We try our best here and call the CoInitializeSecurity function as soon as we reasonably can in the lifetime of our process.",0
802,msauth: allow user to select auth flow type,0.6386467,Allow users to select the type of interactive authentication flow for the Microsoft auth stack (#210),Add support for detecting GitHub AE (GHAE) and enabling the OAuth authentication mode with the GitHub provider. https://docs.github.com/en/github-ae@latest/admin/overview/about-github-ae,0
803,Merge pull request #638 from felipecrs/remove-build-number,0.4466231,Fix a bug with host provider disposal (#272),Bumping mjcheetham/update-winget to v1.2.1,0
804,Set parent window handle based on GCM_MODAL_PARENTHWD,0.6461911,Pass parent window handle information to MSAL (#306),,0
805,introduce CONTRIBUTING,0.45925948,Thanks to our contributors ❤️:,Fix post install configure bug,0
806,Merge pull request #539 from mjcheetham/deb-fix,0.4354428,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)",AzureReposHostProviderTests: fix warnings around orgName,0
807,Move Microsoft authentication in-proc,0.6748483,"- Microsoft authentication is performed in-process on Windows, with support for GUI-less environments (such as SSH) via device code flow (#75)","We keep getting warnings from the actions bot saying: The variable 'orgName' is assigned but its value is never used However, these variables are used, just as parameters to lambdas within LINQ methods. By extracting this org string into a static readonly, we should be able to avoid these warnings.",0
808,Merge pull request #207 from mjcheetham/osx-realsign-fix,0.47903308,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)","Fix a bug where an ""invalid"" argument was being passed to the GCM executable post-install of the user-only installer to configure the Git credential helper.",0
809,settings: cache Git config values across process,0.58727455,Use native Git path interpolation for config values (#439),This commit corrects a small grammatical error.,0
810,Merge pull request #227 from AlexanderLanin/master,0.42427132,@AlexanderLanin,This commit corrects a small grammatical error.,0
811,gitlab: ensure GitLab.dll is signed and packaged,0.6663501,- GitHub,Updating release-winget according to manifest schema changes,0
812,azrepos: add utility to extract AzDevOps org name,0.3931051,- Azure Repos,,0
813,Merge pull request #187 from mjcheetham/winget,0.45649636,"Fix winget publishing (#332, #338)",,0
814,Implement get command,0.429521,Use System.CommandLine to handle our command line parsing and allow host providers to offer custom commands (#273),,0
815,Merge pull request #272 from mjcheetham/dispose-fix,0.44696754,Fix WSL configuration instructions (#479),,0
816,config: match Git config mixed-sensitively,0.7471775,Fix bug in Git config matching due due case sensitivity (#234),,1
817,wincredmgr: recover the correct service name,0.47509933,"Persist auto-detected provider setting (#507, #517)",,0
818,github: respect new GUI prompt enabled setting,0.72513425,"- Show the terminal/TTY based prompts when there is no desktop/GUI sessions present for GitHub (#453, #538)",,1
819,Create experimental issue template,0.48409832,"- Codebase and build improvements (#29, #33)",,0
820,Merge pull request #184 from microsoft/master,0.49669802,Add workaround for Windows Broker (WAM) running as admin (#344),,0
821,"Bitbucket Server Support: Added ability to set 'bitbucket' as the provier for an arbitrary host, i.e. a Bitbucket Server host",0.77576125,Introduce the Bitbucket host provider with Windows GUI (#37),,1
822,git: add guards against malformed Git config data,0.68183434,Fix bug in Git config matching due due case sensitivity (#234),,0
823,wsl: detect host Windows session 0 and disable browser,0.6730343,Support the wslview command  to open the browser (#529),,0
824,diagnose: add environment diagnostic tests,0.6218143,Add new diagnose command to help debug problems in the wild (#463),,0
825,FAQ about probing,0.32963622,Add new diagnose command to help debug problems in the wild (#463),,0
826,Refactor in order to simplify adding more tests: IsSupported,0.57766736,Reduce warnings from tests (#337),,0
827,trace2: write exit event,0.656964,Initial TRACE2 tracing events #1045,Add support for Windows broker (WAM),0
828,Add fetch-depth: 0 so that Github actions clones with full history so the versioning task works,0.611694,Improved usability for GitHub auth (#587),,0
829,Merge pull request #607 from mminns/issue/573-OAuth2-support-for-Bitbucket-DC,0.72671366,Bitbucket DC OAuth support (#607),Remove the usage of a now deprecated constructor for the shared token cache storage properties. This constructor took the client ID which was only used to eventing; GCM doesn't use this.,1
830,Add login hint support for GitHub browser-based OAuth authentication (#1137),0.7115261,"Allow forcing OAuth authentication with Bitbucket host provider (#329, #401)",,1
831,build: update GitVersioning package,0.7184642,- GitHub,Improve the wording around which settings and values cause the auth-flow setting to be ignored. Grammer iz hard.,1
832,Merge pull request #85 from mjcheetham/notarize,0.38817218,Add option to prevent interactivity (#91),Reorder the CanUseBroker logic to be easier to grok.,0
833,plaintextstore: extract credential enumeration,0.46495983,Stopped serializing/writing credentials that already exist (#739),"Add support for broker-assisted authentication on Windows using ""WAM"" (Web Authentication Manager) as provided by the MSAL.Desktop library. The GCM_MSAUTH_USEBROKER environment variable or the credential.msauthUseBroker configuration option will control if WAM is enabled or not. By default WAM is enabled.",0
834,bitbucket: remove separate OAuth prompt/dialog,0.68534577,Updated Bitbucket UI to separate OAuth and username/password options (#754),,0
835,docs: update commit requirements for contributors,0.48342964,Update documentation to use reference-style links (#680),,0
836,github: add login hint support for web browser login,0.638016,- Fix TTY-based prompts for GitHub authentication (#30),,0
837,bitbucket: reimplement credential and OAuth views,0.8077591,Improved Bitbucket OAuth performance through verification of access token validity (#518),,1
838,Merge pull request #706 from GitCredentialManager/dependabot/github_actions/actions/setup-dotnet-2,0.6093425,Align with dotnet-supported Linux distributions (https://github.com/GitCredentialManager/git-credential-manager/pull/953),Drop the git config --show-scope option usage,0
839,FAQ minor writing fix,0.57621396,- Various bug fixes and improvements,"The Git config --show-scope option was only introduced in Git from version 2.26 onwards. The latest version of Git available in some distributions of Linux (or macOS) is often older. We only needed to know the scope of configuration values in one particular call site: reading all Azure Repos user bindinds. Replace the single IGitConfiguration::Enumerate call with two calls to Enumerate, one for the global scope, and one for the local one. Drop the --show-scope option parsing.",0
840,macos: build arm-64,0.7206358,Support macOS arm64 installs via Homebrew (#798) ,Run postinstall and uninstall configure commands as current user,1
841,Merge pull request #500 from ldennington/remove-microsoft-from-namespace,0.47740263,Drop -core suffix from entry executable #551 ,"In the macOS installer postinstall script we run the configure command to get GCM to configure the current user's credential helper as GCM. However, the postinstall script is often run as root (because that's how installer works out of the box), meaning although GCM will be writing to the ~/.gitconfig file, it will be doing so from a process running as root. To avoid having root take ownership of ~/.gitconfig we run sudo -u to run the configure command as the real user (not root).",0
842,settings: add setting to disable GUI prompts,0.58978355,"- Show the terminal/TTY based prompts when there is no desktop/GUI sessions present for GitHub (#453, #538)",Add a link to the Azure Repos Users and Tokens document to the relevant config docs.,0
843,Merge pull request #173 from microsoft/master,0.5070754,Add workaround for Windows Broker (WAM) running as admin (#344),Tell MSAL about any parent window handles GCM knows about,0
844,Add CI build badge to README.md,0.4364938,Add option to use the new DPAPI-based credential store on Windows (#464),Ensure we locate UI helpers correctly on Linux/published as a single file,0
845,Update docs/multiple-users.md,0.5253266,Add workaround for Windows Broker (WAM) running as admin (#344),"Ensure that we are using the correct entry executable directory when published as a single file application. When looking for UI helpers we were still using the Assembly::Location property, which is null for single file applications. Move to pass the (correctly computed) application path to the ICommandContext, which is available everywhere.",0
846,Add comment about null check in Trace,0.44778392,Check for broken links in documentation (#700),Include better warning message on MSAL Keychain errors,0
847,Merge pull request #87 from microsoft/release,0.49443385,"Fix a bug with using Microsoft Accounts with Azure Repos (#143, #148)",MSAL supports parenting windows it creates to another window. GCM also supports being told about a parent window by the caller. Pass through this parent window to MSAL if we have it!,0
848,bitbucket: add Avalonia-based UI helper for BB,0.6104853,Introduce the Bitbucket host provider with Windows GUI (#37),"Sometimes the login Keychain is not accessible and the MSAL.Extensions library cannot read/write the token cache. The specific error encountered internally is errSecAuthFailed - neither we nor the MSAL team know why this happens sometimes. Locking and then unlocking the login Keychain manually, or simply restarting the computer appears to fix the problem. Include the lock+unlock/restart remedy in the warning message on macOS.",0
849,Main,0.41013947,@4brunu,Stop using PATs for Azure Repos (Attempt 2: Electric Boogaloo),0
850,Update Homebrew install instructions,0.58039355,Discontinued incorrect use of Homebrew Git shim (#731),Add some checks/guards against malformed data output from Git configuration when enumerating all entries. If we hit the unexpected end of the data stream we trace and stop parsing.,0
851,Merge pull request #764 from timsu92/patch-1,0.45428413,Fix WSL configuration instructions (#479),Add commands to manually manager the user/org bindings for the Azure Repos host provider.,0
852,"windows release: build, sign, and publish",0.68560195,"Groundwork for upcoming Windows release, including:","Add a new binding manager component that can be used to 'bind' user accounts to Azure DevOps organisations. This enables the Azure Repos host provider to attempt silent authentication requests via MSAL - to attempt to use an existing access token from the cache. We only allow binding at the organisation level (and not any other level) as this is the most common scenario: one user for an entire Azure DevOps organisation. If the user wishes to override the chosen user for a particular clone they can do so by binding the user to the local repository configuration, rather than the default global configuration. Furthermore, if the user wishes to use a different user account for a particular remote within a repository, they can set the username in the remote URL.",0
853,linux: scrub signing logs,0.5315093,Sign Linux tarball and .NET tool #985 ,Add a command to enable clearing of the Azure authority cache manually.,0
854,Merge pull request #468 from microsoft/support-matrix,0.40665686,Add workaround for Windows Broker (WAM) running as admin (#344),"Add a cache of the Azure backing authority for Azure DevOps orgs. This cache is only consulted when the credential type is ""oauth"" and not ""pat"". We use Git's configuration as the persistence mechanism.",0
855,update all docs,0.49739134,Update System.CommandLine and fix some bugs (#531),"Add a new settings to the Azure Repos provider that instructs GCM to return the Azure access token directly, rather than use that token to generate a new Azure DevOps Personal Access Token (PAT). At the moment the only indication as to what user account a user wants to use is via the userinfo parts of the remote URL. This must be set manually. The default configuration is to continue to use PATs, for now.",0
856,linux: align with dotnet distros (#953),0.7066766,Improved detection of dotnet on Linux (#685),Add a utility to extract the Azure DevOps organisation name from a remote URL.,1
857,Add HTTP client factory and 'HEAD' extensions,0.57110894,Auto-detect on-premises/self-hosted providers via HTTP headers (#262),"Add the ability to list the Git remotes for the current repository, as well as resolve the current repository path.",0
858,github: use final OAuth device code endpoint,0.67340606,OAuth Device Authorization Grant support for GitHub (#147),"Change the way we interact with Git configuration so that we specify the level filter in each method call, instead of requesting the GitConfiguration object perform the filtering.",0
859,Spacing and use explicit ubuntu 20.04 version,0.46337396,Unify documentation line length (#862),Expose the Split method from the GitConfigurationKeyComparer as a TrySplit method and use this implementation for splitting keys in all existing instances. Also introduce a GitConfiguration::Enumerate extension method that filters based on section and property name parts of Git config entries.,0
860,Merge pull request #203 from mjcheetham/fixtypowin,0.46036586,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)",Teach GitConfiguration::Enumerate to parse results that include the 'level' of the Git config entry (--show-scope).,0
861,build(deps): bump actions/setup-python from 2 to 3,0.4678807,Speed up build graph (#924),"Introduce a wrapper type representing a single entry in Git's configuration, which is used in the Enumerate callback.",0
862,Merge pull request #199 from mjcheetham/install-fix,0.4325076,Fix WSL configuration instructions (#479),Remove some unused Git configuration extension methods for querying for entries based on 'split' keys (section.scope.property). These are only used in tests!,0
863,docs: update documentation to reflect changes,0.5821135,Update documentation to use reference-style links (#680),"Replace the unused ProgramData and Xdg Git configuration level enumeration members with an Unknown member. We never directly used any of those, and don't really care(!)",0
864,Encapsulate stdin/out/err streams into IStandardStreams interface,0.35792923,"Improve proxy environment variable handling (#497, #501, #503)","Improve the handling of input arguments with missing required fields (e.g., protocol and host).",0
865,fix path,0.70575935,"Fix problems with resolving the executable file path on Linux (#298, #229, #252)","Fix a bug in contruction of the remote URI when no username is provided, but the caller wishes to include the username.",1
866,Merge pull request #538 from mjcheetham/github-tty,0.44747424,Discontinued incorrect use of Homebrew Git shim (#731),"When we moved to use the System.CommandLine library for command line parsing, we neglected to update the exception handling to match the new model.",0
867,Merge pull request #5 from Microsoft/build-badge,0.42486012,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)",Add support for the NO_PROXY bypass environment variable,0
868,docs: update readme explaining win install split,0.49116346,Updated WAM support to only include applicable OSes (#629),,0
869,Merge pull request #285 from microsoft/docs/useHttpPath,0.44845575,"Enables support for multiple users for GitHub, Bitbucket, and Azure Repos (when using the *.visualstudio.com URLs) (#160)",Co-authored-by: Johannes Schindelin dscho@github.com,0
870,Merge pull request #120 from mjcheetham/helperconfig,0.41896948,Fix WSL configuration instructions (#479),"Add support for the cURL environment variable (also respected by Git) to list a set of host names that should connect directly (bypass), and not connect via the configured proxy.",0
871,wsl: update IsWslPath to detect wsl.localhost,0.58795726,Fix WSL configuration instructions (#479),"Fix computation of app path when published as a ""single file""",0
872,Add dependabot,0.45435542,Add option to prevent interactivity (#91),"When publishing GCM as a 'single file' application, the computed path to the entry executable is no longer correct. On .NET Core 3.1, using Assembly.Location resolves to the temporary extracted DLL file path. On .NET 5 Assembly.Location always returns the empty string. Since .NET 5, published single-file apps no longer use the self- extraction model, and are real single file with all assemblies and native libraries statically linked/bundled. We now use the Environment.GetCommandLineArgs() method to get the raw underlying ""argv"" arguments, which argv[0] is the absolute file path to the entry executable. We also change how we get the application version number to look for the assembly attribute, rather than extract if from the file on disk. At app startup, also change the way we trace system information to be more readable.",0
873,Merge pull request #883 from GitCredentialManager/dependabot/github_actions/actions/setup-dotnet-3.0.0,0.6233329,Align with dotnet-supported Linux distributions (https://github.com/GitCredentialManager/git-credential-manager/pull/953),.NET 5.0,0
874,Merge pull request #851 from ldennington/remove-azure-storage-key,0.44529197,Access Azure storage account using service principle credentials (#851),,0
875,winget: update winget pkg on release,0.6242719,More winget publishing fixes (#353),,0
876,introduce SECURITY,0.76142544,Security Fixes:,,1
877,Merge pull request #68 from jamill/fix_osx_postinstall,0.44576007,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)",Add Git credential cache as backing store on Linux,0
878,Fix real-sign Windows build to actually sign,0.43196338,Add support for the Windows authentication broker - Windows Hello support (default off) (#323),,0
879,Merge pull request #70 from mjcheetham/rename-exec,0.4192378,Fix WSL configuration instructions (#479),,0
880,settings: match curl lowercase proxy envar behaviour,0.6293735,"Improve proxy environment variable handling (#497, #501, #503)",,0
881,Add example of how to configure git-credential-core.exe as git's credential store,0.77342546,Support git-credential-cache as a credential backing store on Linux (#287),"env var for config is still the long form, but the git option is already namespaced to credential so it was also shortened.",1
882,Merge pull request #587 from hickford/usability,0.53098875,@hickford,,0
883,Merge pull request #77 from mjcheetham/new-certs,0.40191498,Check for broken links in documentation (#700),,0
884,Merge pull request #217 from mjcheetham/ntlm-proxy-auth,0.4379226,Fix WSL configuration instructions (#479),,0
885,release: remove automatic workflow trigger,0.58156776,Auto-generate maintainer away notification issues (#842),,0
886,Merge pull request #299 from mjcheetham/noproxy2,0.43740594,Secret Service sec_free: Assertion cell->requested > 0 failed. error fix #996,,0
887,.azure-pipelines: install .NET 6.0 sdk for macOS signing,0.6651982,Move to .NET 5.0 on macOS and Linux (#288),,0
888,Merge pull request #155: FAQ minor writing fix,0.47822636,"Fix winget publishing (#332, #338)",,0
889,Update codeql-analysis.yml,0.5383947,"- Codebase and build improvements (#29, #33)",,0
890,Merge pull request #132 from microsoft/master,0.49839926,Add workaround for Windows Broker (WAM) running as admin (#344),,0
891,dpapi: add new credstore on Windows using DPAPI,0.79037714,Add option to use the new DPAPI-based credential store on Windows (#464),Co-authored-by: Matthew John Cheetham mjcheetham@outlook.com,1
892,azrepos: fix bug in binding list command,0.6561612,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)",Co-authored-by: Matthew John Cheetham mjcheetham@outlook.com,0
893,Merge pull request #417 from mjcheetham/azr-binding-fix,0.50957346,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)",backing store,0
894,Fix typos in documentation,0.46969792,Check for broken links in documentation (#700),,0
895,environment: add test for PosixEnv.TryLocateExec,0.5094058,"Add an OAuth2 client implementation with PKCE support (#99, #102)",,0
896,fixup! fixup! Add install from source instructions,0.5459124,Fix computation of installation path on Linux/single-file publish (#310),,0
897,hostprovider: update host prvdr base to use service name,0.6468163,Fix a bug with host provider disposal (#272),,0
898,Merge pull request #106 from mjcheetham/fix-winbuild,0.48695213,Fix WSL configuration instructions (#479),documented behavior under credential.useHttpPath,0
899,Merge pull request #117 from mjcheetham/fix-bb,0.4576283,Fix a bug with host provider disposal (#272),Co-authored-by: Matthew John Cheetham mjcheetham@outlook.com,0
900,ISSUE-329 Add configuration option to force Basic Auth or OAuth for Bitbucket,0.71534276,"Allow forcing OAuth authentication with Bitbucket host provider (#329, #401)",Co-authored-by: Matthew John Cheetham mjcheetham@outlook.com,1
901,Merge pull request #584 from hickford/omnisharp-fix,0.54654294,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)",Co-authored-by: Matthew John Cheetham mjcheetham@outlook.com,0
902,update copyright holder,0.44750333,"Fix winget publishing (#332, #338)",fixes https://github.com/microsoft/Git-Credential-Manager-Core/issues/253,0
903,Update link to .NET,0.6369711,Move to .NET Framework 4.7.2 on Windows (#283),Target .NET Framework 4.7.2 and fix missing binaries in Windows installers,0
904,linux: add x86_64 Linux build (Ubuntu 18.04),0.6164297,Very early support for Linux (#135),,0
905,Merge pull request #69 from mjcheetham/optimise-gitcfg,0.46678603,Add support for using WSL Git configuration (#461),,0
906,Fix secret tracing to print correct masking characters,0.5012584,Remove use of box drawing characters in warning output (#243),Update various docs in response to new features and fix some typos,0
907,helper: trace helper UI process starts,0.5291227,"Return non-zero code for UI helpers on error (#440, #441)","Update various documentation and technical specifications to mirror changes to the product, such as the removal of the macOS authentication helper, and the introduction of new custom commands for host providers.",0
908,commandcontext: ensure we init IEnvironment before SessionManager,0.5319998,Correctly detect a UI interactive session on all platforms (#95),Use System.CommandLine to parse cmdline args and allow provider to offer cmds,0
909,Merge pull request #411 from vdye/242-respect-sslCAInfo,0.5826044,"Respect http.sslCAInfo settings (#242, #411)","Add the ability for host providers to register themselves as offering custom commands, under the provider ID name. For example a provider with the ID 'foo' would be able to expose commands under the git-credential-manager-core foo <..> command.",0
910,settings: add path config handling in TryGetPathSetting,0.49047503,Fix various problems with install path and app path variables #968,Replace our basic custom command-line handling code with the System.CommandLine library which provides simpler and easier handling.,0
911,Address PR feedback,0.44196504,@felipecrs,Add ability to override Microsoft Authentication parameters for Azure Repos,0
912,fixup! Add validation workflow,0.5790174,Codebase and build improvements (#49),"Add the ability to override the Microsoft authentication parameters in the Azure DevOps API and MSAuth components - can change client ID, redirect URI, and the base authority.",0
913,win11: expand Win10 check to Win10+,0.4248101,Add ability to read GCM default settings from the Windows Registry (#404),Integrate with the shared Microsoft developer tools AAD token cache on macOS,0
914,Adapted test expectation to changed behaviour.,0.44942573,Reduce warnings from tests (#337),Integrate with the shared Microsoft developer tools cache on macOS platforms. This allows us to share refresh tokens with VSMac and Azure CLI.,0
915,trace2: add infrastructure and initial events (#1045),0.81767195,Initial TRACE2 tracing events #1045,,1
916,docs: fix more broken links in environment.md,0.63637745,Check for broken links in documentation (#700),Full the ~/.gcm data directory path calculation to a property of the IFileSystem component.,0
917,"Add an ""s"" to the word ""work"". ",0.21765114,@NN---,"Harmonise Microsoft Authentication APIs with AAD ""v2"" and MSAL concepts",0
918,trace2: pass to Git,0.61833465,Use native Git path interpolation for config values (#439),,0
919,oauth: disconnect streams from xdg-open,0.4837969,GHES OAuth support (#354),"We need to separate values for GitHub auth modes with a comma, not a space.",0
920,wincred: do not write creds if nothing has changed,0.45862418,Stopped serializing/writing credentials that already exist (#739),Fix multiple gitHubAuthModes,0
921,Merge pull request #105 from microsoft/master,0.472825,Add workaround for Windows Broker (WAM) running as admin (#344),"List must be comma separated. Before: $ GCM_TRACE=1 git fetch 22:22:08.037216 ...\Application.cs:69   trace: [RunInternalAsync] Git Credential Manager version 2.0.318-beta+44acfafa98 (Windows, .NET Framework 4.0.30319.42000) 'get' 22:22:08.040208 ...\Command.cs:63       trace: [ExecuteAsync] Start 'get' command... 22:22:08.046193 ...\Command.cs:74       trace: [ExecuteAsync] Detecting host provider for input: 22:22:08.047214 ...\Command.cs:75       trace: [ExecuteAsync]   protocol=https 22:22:08.047214 ...\Command.cs:75       trace: [ExecuteAsync]   host=*** 22:22:08.206763 ...viderRegistry.cs:129 trace: [GetProvider] Performing auto-detection of host provider. 22:22:08.208757 ...\Command.cs:77       trace: [ExecuteAsync] Host provider 'GitHub' was selected. 22:22:08.211749 ...\HostProvider.cs:115 trace: [GetCredentialAsync] Looking for existing credential in store with service=https://*** account=... 22:22:08.214770 ...\HostProvider.cs:120 trace: [GetCredentialAsync] No existing credentials found. 22:22:08.214770 ...\HostProvider.cs:123 trace: [GetCredentialAsync] Creating new credential... 22:22:08.266604 ...bHostProvider.cs:227 trace: [GetSupportedAuthenticationModesAsync] Invalid value for supported authentication modes override setting: 'OAuth Basic' After: $ GCM_TRACE=1 git fetch 22:22:32.792872 ...\Application.cs:69   trace: [RunInternalAsync] Git Credential Manager version 2.0.318-beta+44acfafa98 (Windows, .NET Framework 4.0.30319.42000) 'get' 22:22:32.796891 ...\Command.cs:63       trace: [ExecuteAsync] Start 'get' command... 22:22:32.801849 ...\Command.cs:74       trace: [ExecuteAsync] Detecting host provider for input: 22:22:32.802847 ...\Command.cs:75       trace: [ExecuteAsync]   protocol=https 22:22:32.802847 ...\Command.cs:75       trace: [ExecuteAsync]   host=*** 22:22:32.945493 ...viderRegistry.cs:129 trace: [GetProvider] Performing auto-detection of host provider. 22:22:32.947488 ...\Command.cs:77       trace: [ExecuteAsync] Host provider 'GitHub' was selected. 22:22:32.949455 ...\HostProvider.cs:115 trace: [GetCredentialAsync] Looking for existing credential in store with service=https://*** account=... 22:22:32.951449 ...\HostProvider.cs:120 trace: [GetCredentialAsync] No existing credentials found. 22:22:32.951449 ...\HostProvider.cs:123 trace: [GetCredentialAsync] Creating new credential... 22:22:32.991343 ...bHostProvider.cs:222 trace: [GetSupportedAuthenticationModesAsync] Supported authentication modes override present: Basic, OAuth",0
922,docs: fix FAQs markdown table syntax,0.5378797,Check for broken links in documentation (#700),"Rename the resource parameter to the MSAuth component to scopes, which is the AAD ""v2"" concept. Also drop the remote URI parameter which is no longer needed.",0
923,generic: add OAuth refresh token support,0.7162575,Generic OAuth support via config 🎉 #1062,Change the MSAuth GetToken method signature to return a wrapper result object rather than just the JWT access token. The result wrapper object includes the account UPN and the wrap AT as returned by MSAL. We do not need to inspect the claims of the AT (which might not even by a JWT in some cases anyway) since we have the account info elsewhere.,1
924,Fix issue in environment doc regarding GitHub auth mode values,0.6350716,Fix bug in Git config matching due due case sensitivity (#234),Drop the native macOS ADAL-based Microsoft Authentication component,0
925,Merge pull request #149 from microsoft/master,0.48779738,Add workaround for Windows Broker (WAM) running as admin (#344),Fix bug to ensure correct provider disposal,0
926,Merge pull request #514 from mjcheetham/fix-deb,0.44971716,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)",Remove the ADAL Objective-C based native authentication component for MSA/AAD. We now rely on the system brower of MSAL.NET.,0
927,Merge pull request #25 from mjcheetham/erase-userpass-match,0.41206414,@mminns ,Remove the ability to use an external authentication helper for Microsoft authentication (AAD/MSA). We now always rely on the in-process MSAL library calls.,0
928,config: fix reading of empty string Git config values,0.7880361,Fix reading empty Git configuration entry values (#215),We are not correctly disposing of the host providers registered with the host provider registry. Fix this by actually calling Dispose() on the correct objects(!),1
929,tinker,0.39251125,- Various bug fixes and improvements,Auto-detect more (on-prem) providers using a simple HTTP query,0
930,docs: update docs for new enterprise default cfg,0.501307,- Renamed the main executable from git-credential-manager to git-credential-manager-core to allow for easier side-by-side use with Java GCM and Windows GCM during the preview (#70),Update docs/configuration.md to include an example of how to configure git-credential-manager-core.exe as git's credential store.,0
931,ui: add generic 'basic' credentials UI VM and command,0.629666,Add native basic credential UI prompts for Windows (#92),Co-authored-by: Derrick Stolee derrickstolee@github.com,0
932,Merge pull request #503 from mjcheetham/curl-envars,0.37559065,Fix WSL configuration instructions (#479),,0
933,Merge pull request #778 from GyroJoe/main,0.51185626,GHES OAuth support (#354),This change is necessary because of a homebrew change around casks.,0
934,wsl: add ability to run CMD/PowerShell scripts from WSL,0.6166605,Fix WSL configuration instructions (#479),,0
935,linux: add new Avalonia UI helpers on Linux,0.6927182,Include UI helpers in Debian package for Linux release; move GCM symlink to /usr/local/bin (#405),"Add the ability to let host providers additionally inspect a HTTP response message to determine and identify a supported service/endpoint. If the simple enumeration of providers matching against the static InputArguments does not produce a match (at each priority level), then check against the lazily evaluated HEAD call to the remote URL.",0
936,Merge pull request #529 from mjcheetham/wslview,0.52527165,Support the wslview command  to open the browser (#529),"Enable host providers to be registered and enumerated for auto-detection in a simple priority order: high, normal, low.",0
937,macOS release: sign payload,0.64254206,First Windows preview release and updated macOS release.,Make the GetProvider method on the IHostProviderRegistry interface async in preparation for introducing some network I/O to the auto-detection of providers.,0
938,Merge pull request #310 from mjcheetham/fix-singlefile,0.42013618,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)",Update the readme file to explain the difference between the two Windows installers.,0
939,docs: add GitHub.com app revoke info to FAQ,0.6114961,- GitHub,Ensure the PAT option is always offered for GHES instances,0
940,Update architecture.md,0.54727596,Move to .NET Core 3.1 (LTS) (#101),Ensure the Personal Access Token authentication mode is always offered for GitHub Enterprise Server instances.,0
941,Target *-latest runner images in CI workflow (#1178),0.4740829,Speed up build graph (#924),Ensure the /usr/local/bin directory exists on install,0
942,Merge pull request #298 from mjcheetham/fix-singlefile-path,0.44099054,Fix computation of installation path on Linux/single-file publish (#310),Add a local nuget.config file to force the package source used for NuGet packages to be only the nuget.org public feed. There have been problems with some CI agents that don't have a global/default nuget.org package source.,0
943,bitbucket: show on-prem URL in UI and use better help links,0.64006674,Updated Bitbucket credential UI to show the URL of the Bitbucket Server or Data Center instance if applicable (#713),Ensure the /usr/local/bin directory exists on macOS installations before we create the symlink for GCM Core. The directory does not exist on freshly installed Macs.,0
944,trace2: add child start and exit events (#1131),0.6942312,Initial TRACE2 tracing events #1045,Fixes #248,0
945,osx: only publish using one MSBuild node,0.5157112,Share the MSAL token cache with Microsoft developer tools on macOS as we already do on Windows (#275),Detect github.my-company-server.com as GitHub,0
946,Add debug trace listener when debugger is attached,0.78829145,Automatically trace to the debugger when attached (#94),Uri converts to lowercase.,1
947,Merge pull request #332 from ldennington/ldennington/update-winget-deployments,0.5704389,"Fix winget publishing (#332, #338)",Co-authored-by: Matthew John Cheetham mjcheetham@outlook.com,0
948,release: add required token to release workflow,0.46118516,"Add an OAuth2 client implementation with PKCE support (#99, #102)",,0
949,ci: use macos-latest image for CI builds,0.5380774,- macOS,"Some users had questions about SSH, and if it HTTPS-based remotes with GCM Core was preferred to SSH. SSH is here to stay and is a perfectly fine and valid mechanism. GCM Core is only useful for HTTP(S) remotes. Fixes #191",0
950,Change GitHub auth API to use async Task rather than Try-pattern,0.5807973,Improved usability for GitHub auth (#587),Use down-level libsecret functions to get secret values,0
951,app: fix app entry path computation on Windows,0.5777909,Fix various problems with install path and app path variables #968,"Replace our use of secret_value_unref_to_password which was only introduced in libsecret 0.19.0, with secret_value_get and a separate secret_value_unref call which is available in all versions. This will allow us to work on older distributions that may only include older versions of libsecret, specifically Ubuntu 18.04 LTS which includes libsecret 0.18. Version 0.20 of libsecret was only introduced from Ubuntu 19.04.",0
952,github: show terminal prompts when no GUI,0.8827678,"- Show the terminal/TTY based prompts when there is no desktop/GUI sessions present for GitHub (#453, #538)",Remove use of box drawing characters in warning output,1
953,docs: update aka.ms links,0.60451657,Update documentation to use reference-style links (#680),"Remove the use of box drawing characters in the warning output messages for TLS verification being disabled. Some systems (looking at you Windows) struggle with such characters. Replace them with simpler characters. Whilst we're at it, also remove box drawing characters from code comments. Even though these aren't a problem, let's just do it for consistency.",0
954,a less misleading comment,0.3804954,@4brunu,,0
955,Merge pull request #35 from mjcheetham/docs,0.41349086,Check for broken links in documentation (#700),Add explicit PAT authentication mode for the GitHub Provider,0
956,bb-test: remove unused test helpers,0.62221014,Reduce warnings from tests (#337),Correctly quote and escape arguments passed to authentication helpers via the process arguments.,0
957,credstore: change contruction of existing credstores,0.37448698,"Refactor namespace, assembly and project names (#500)","Update the WPF-based Windows GUI for GitHub authentication prompts to support the third authentication mode ""PAT"". Also make some changes to how the dialog window is sized to scale with the size of the content (mins and maxes included), which may now vary in the extreme from all three auth options, to just one.",0
958,winui: fix up a bug that was introduced in an earlier PR,0.67471725,- Various bug fixes and improvements,"Add an authentication mode to the GitHub provider whereby a Personal Access Token can be returned directly, as generated by a user manually. Update the terminal-based UI menu to support the new PAT mode.",0
959,fixup! config: update GitConfiguration to use --type,0.6500844,Avoid using the newer --show-scope Git config option - work with downlevel Git versions (#318),Match Git config in a mixed-sensitively way,0
960,azrepos: update azrepos to new credential model/APIs,0.48368254,Fix a bug to prevent setting credential.provider when it wasn't needed (Only set credential.provider for dynamic matches #535),"Add more tests to the GitConfigurationKeyComparer tests, specifically around cases that contain no period/dots '.'. In these cases we behave as StringComparer.Ordinal.",0
961,dotnet-tool: include core UI helper in package,0.50915986,Include UI helpers in Debian package for Linux release; move GCM symlink to /usr/local/bin (#405),"Git configuration entry keys are neither case sensitive, nor in-sensitive. They are mixed sensitive. The section and property names are NOT sensitive, but the 'scope' or inner component of the full name IS sensitive. For example, credential.example.com.provider is the same as CREDENTIAL.example.com.PROVIDER, but credential.EXAMPLE.COM.provider is NOT. We introduce a new StringComparer type that performs insensitive comparison on the section and property components, and sensitive comparison on the scope component.",0
962,Merge pull request #700 from wolf99/link-checker,0.53273714,Check for broken links in documentation (#700),Add suppressions for credscan false positives,0
963,github: store the PAT on 'get' request for SAML SSO,0.7380832,"Support ""SSO"" PATs for GitHub (#133, #134)","Add the required source suppressions for false positive identification of credentials, raised by the internal CredScan tool. Most of the identified matches are fake credentials for unit tests. One match was the GitHub OAuth2 application client secret, which per issue #228 valid and an accepted & required 'secret' to be public.",1
964,Merge pull request #257 from mjcheetham/fixosxinstall,0.49464995,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)",Refactor in order to simplify adding more tests,0
965,shrink images,0.29530632,Unify documentation line length (#862),Co-authored-by: Matthew John Cheetham mjcheetham@github.com,0
966,gitlab: use auth mode constant and detect oauth cfg,0.5781158,WPF-based GitHub auth UI (#40),,0
967,Update readme to say Linux support is in preview,0.6553488,"The Linux support has currently only been tested on Ubuntu 18.04 and 20.04 on 64-bit Intel processors. The provided Debian package is not yet signed. Due to the varied nature of Linux distributions, you will need to select and configure a credential storage system manually – see more here: https://aka.ms/gcmcore-linuxcredstores.",,0
968,git: use IEnvironment::CreateProcess,0.61438024,- GitHub,,0
969,azrepos: only enumerate local bindings inside repo,0.6085517,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)",,0
970,Merge pull request #461 from mjcheetham/wsl,0.53308034,Fix WSL configuration instructions (#479),Create a new Github workflow for deploying the .deb installer from a release to packages.microsoft.com,0
971,azrepos: add ability to override MSAuth params,0.4788197,"Update MSAL; set MS auth embedded window title (#239, #512)",Update GitVersioning package,0
972,docs: clarify registry settings for sysadmins and ordering,0.45573542,Use System.CommandLine to handle our command line parsing and allow host providers to offer custom commands (#273),"Update the Nerdbank.GitVersioning package to the latest version (3.3.37) to consume a fix for the removal of the set-env command in GitHub Actions. Previous versions of GitVersioning use the set-env command to set the cloud build number. The new version uses ""environment files"" which is the replacement for set-env.",0
973,Move IHttpClientFactory toICommandContext`,0.43023407,"~Set MSAL embedded webview window title to give more context to the user (#347, #239)~ Not working currently (see here)",Changes:  Fix NTLM proxy authentication Fix reading empty Git configuration entry values Allow users to select the type of interactive authentication flow for the Microsoft auth stack,0
974,Merge pull request #138 from mjcheetham/provider-spec,0.40400836,Fix a bug with host provider disposal (#272),"Enumerate the PATH environment variable to manually locate executables/programs rather than shell out to where.exe on Windows locate these for us. The where.exe utility first checks the current working directory before the PATH for the executable, which we do not want for various security reasons. The which utility on UNIX/POSIX systems does NOT include the current working directory in the search; only the PATH, which is exactly what we want - leave this in place on those platforms. Additionally for locating git(.exe) we first check in the GIT_EXEC_PATH directory for the executable, if that environment variable was set.",0
975,gpg-credstore: add GPG/pass based credential store,0.7529561,Allow users to specify path to GPG executable for gpg credential store on Linux (#406),"Enumerate the PATH environment variable to manually locate executables/programs rather than shell out to where.exe on Windows locate these for us. The where.exe utility first checks the current working directory before the PATH for the executable, which we do not want for various security reasons. The which utility on UNIX/POSIX systems does NOT include the current working directory in the search; only the PATH, which is exactly what we want - leave this in place on those platforms. Additionally for locating git(.exe) we first check in the GIT_EXEC_PATH directory for the executable, if that environment variable was set.",1
976,trace2: fix child process time recording,0.6470441,Initial TRACE2 tracing events #1045,Treat empty credential proxy configuration as use system default credentials,0
977,Always run in 32-bit on Windows,0.7286056,- Windows support (64-bit only) (#46),"To enable using the default system credentials for authenticated proxies we must set the WebProxy.UseDefaultCredentials property to true. (For example, with Windows Integrated Authentication-based proxies - NTLM or Kerberos.) Currently we set this if no username and password information is specified at all in the proxy configuration. However, Git itself when presented with this configuration will prompt the user for a username/password (which isn't required). Specifying an empty string username/password in the proxy configuration will stop Git from prompting for them, and allow cURL to auto-negotiate proxy auth. However, GCM reads that same configuration as having a username/password based proxy with the empty string for both values. We change GCM to use the system default credentials when configuring a proxy if there is no userinfo OR if BOTH the username and password values are the empty string. Example proxy config value: http://:@proxy.example.com",1
978,docs: add missing DPAPI option to summary,0.468756,Add new diagnose command to help debug problems in the wild (#463),Fix reading of empty string Git configuration values,0
979,Merge pull request #15 from mjcheetham/github-provider,0.47640178,Align with dotnet-supported Linux distributions (https://github.com/GitCredentialManager/git-credential-manager/pull/953),"Previously trying to read a single Git configuration setting that had the value of """" empty string resulted in returning false in our TryGet method. Move to using the null-terminating output from Git for easier parsing, just like we use for the other read-commands. The GetAll method didn't have this issue as it was already using --null.",0
980,avn: update to latest Avalonia UI,0.57527083,UI on macOS and Linux thanks to AvaloniaUI 🎉 (#336),Allow user to override which interactive authentication flow used for MS auth,0
981,gitlab: invoke GitLab UI helper if available,0.7306438,- GitHub,"Use the localhost redirect URI specified in the VS AAD application configuration. The localhost option allows us to use the system web view, whereas 'urn:ieft:wg:oauth:2.0:oob' does not.",1
982,Merge pull request #27 from Microsoft/fix-pkg-sign,0.51901937,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)","Allow the user to override which Microsoft authentication flow to use when interaction is required. The options available are:  - embedded web view  - system web view  - device code Previously we always picked one of these flows (or used a native external helper) to use. In some instances it may be desirable for the user to force a particular flow, for instance to take advantage of browser sign-in state or OS integrations by using 'system'. If no option is set, or auto is selected the existing behaviour is preserved (we pick for the user).",0
983,docs: update readme,0.442684,Consume new MSAL library versions (#346),Cut another release with fix to macOS publishing,0
984,build: authenticate to MicroBuild feeds,0.4903666,Improved Bitbucket OAuth performance through verification of access token validity (#518),osx-sign: fix macOS release build sign/upload,0
985,install from source: publish before attempting install,0.635515,Validate installers before publishing (#813),"Fix the macOS real-signed release build YAML files to also create the product archive (not just the component package), and upload and sign that instead.",0
986,Merge pull request #3 from mjcheetham/http,0.42141044,Auto-detect on-premises/self-hosted providers via HTTP headers (#262),Release GCM Core with various fixes and new Windows user-installer,0
987,Merge pull request #591 from hickford/gitlab,0.51920164,@hickford,"Make the system installer always append GCM Core entries, not outright set/replace existing values (and fix a typo)",0
988,Rename main executable to GCM Core to make SxS easier,0.6837553,- Renamed the main executable from git-credential-manager to git-credential-manager-core to allow for easier side-by-side use with Java GCM and Windows GCM during the preview (#70),Fix missing space in username input,0
989,Merge branch 'release' into release-prep,0.47494492,Migrated release process from Azure DevOps to GitHub actions (#707),this caused the preceding argument to fail due to lack of separation between args,0
990,Merge pull request #892 from GitCredentialManager/mjcheetham/linux-install-link,0.6027586,Align with dotnet-supported Linux distributions (https://github.com/GitCredentialManager/git-credential-manager/pull/953),See [1] for more information. [1] https://github.blog/changelog/2020-07-06-github-actions-manual-triggers-with-workflow_dispatch/,0
991,"Add VS Code config to enable build, test and debug",0.6181439,Codebase and build improvements (#49),See [1] for more information. [1] https://github.blog/changelog/2020-07-06-github-actions-manual-triggers-with-workflow_dispatch/ Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
992,windows: fix a typo in the user windows installer,0.7365637,Fix Windows user-only installer configuration bug (#335),Since --null means that each config entry terminates with a null character ('\0') we are left with one extra entry in the array after splitting the string. This is NOT a real entry and we shouldn't return it from the method.,1
993,registry: enable registration of providers with priorities,0.51876307,"Persist auto-detected provider setting (#507, #517)","Only clear the useHttpPath=true option on calls to unconfigure if the ""manager-core"" option is not present and we're in the system config on a Windows platform. This would be the case for the bundled GCM Core in Git for Windows, which we would break by removing this option.",0
994,Merge pull request #716 from ldennington/fix-incorrect-emoji,0.47998658,Fix WSL configuration instructions (#479),,0
995,Merge pull request #74 from mjcheetham/new-install,0.4647365,Mac installer will now unlink the Java GCM via Homebrew if installed (#45),"If we have empty helper entries after GCM, then we should attempt to reconfigure to put GCM back ""at the front"", since otherwise it's effectively being disabled by those subsequent empty entries.",0
996,Convert issue templates to YAML,0.77376014,Convert issue templates to YAML (https://github.com/GitCredentialManager/git-credential-manager/commit/24ae90a4bd18fec6edcc860281ff82f715588e44),,1
997,Merge pull request #121 from microsoft/master,0.4925802,Add workaround for Windows Broker (WAM) running as admin (#344),"Add the --get-all and --add Git configuration commands, and use them in place of --get-regexp and --replace-all where applicable.",0
998,docs: include example cmd to set cred stores,0.49672866,Add option to use the new DPAPI-based credential store on Windows (#464),"Rather than set the helper to be only GCM Core in the system configuration when called with (un)configure --system, we do what we are already doing in the user-case. We only append an empty ("""") reset entry, and then the GCM full path entry. This means on uninstall of the standalone GCM (be that the system or user install), we restore the previous entry, always.",0
999,linux: implement stub Linux ISystemPrompts component,0.5320002,Fix computation of installation path on Linux/single-file publish (#310),,0
1000,Merge pull request #96 from microsoft/zippy,0.42477858,"Fix winget publishing (#332, #338)",Split Windows installer in to user/system flavours,0
1001,Merge pull request #826 from GitCredentialManager/dependabot/github_actions/mjcheetham/update-homebrew-1.2,0.58136386,Discontinued incorrect use of Homebrew Git shim (#731),"This adds a new workflow build-installers.yml, where hopefully we can either migrate all installer builds in the future (or rename and split them across the platforms.) This workflow is heavily dependent on a lot of internal Microsoft infrastructure. What we have so far results in a GPG signed .deb for GCM-Core. This is currently uploaded as an artifact on the workflow itself but it not yet published. The 3rd and last build job yet to be added is using setting up yet another internal tool with the right security to use our internal publishing service. This does the signing, but does not actually publish the package to the Microsoft package feed. Replaces #170.",0
1002,Merge pull request #670 from ldennington/supported-distros,0.4255643,Fix WSL configuration instructions (#479),Fix incorrect wording of installer welcome msg,0
1003,authbase: gracefully handle no-default UI helper case,0.54643774,Add option to prevent interactivity (#91),Fix the incorrect wording of the macOS installer welcome screen. We do not configure different gitconfig files depending on the install mode - we always update the current user's gitconfig only.,0
1004,Merge pull request #711 from ldennington/add-uninstall-from-source-instructions,0.51419055,Fix WSL configuration instructions (#479),Update the Mac installer to make a product archive package/installer,0
1005,Bitbucket Server Support: Fix storing of Bitbucker Server credentials. Save with and without usernames since BbS doesn't generally include them in its Git URLs,0.7284294,Updated Bitbucket credential UI to show the URL of the Bitbucket Server or Data Center instance if applicable (#713),Update the configure command to set the full path to GCM Core,1
1006,trace2: guard against null pipe client in dispose (#1135),0.85292935,Guard against null pipe client (#1135),"Split the Windows installer into two versions: a single-user installer, and a system-wide installer. The old installer installed in Program Files (x86) and set the system Git configuration, which is now what the system-flavoured installer does. The new single-user installer places files in %LOCALAPPDATA% and updates the ~/.gitconfig (global) user Git configuration instead. The benefit of the single-user installer is that it does not require an administrator to install it, and doesn't affect other users of the system.",1
1007,Merge branch 'master' into release,0.37342715,@mastercoms,"Update the configure and unconfigure actions to now set the full file path to GCM Core, rather than rely on manager-core resolving to git-credential-manager-core on the PATH by Git. This was a problem because Git for Windows now bundles GCM Core, and even if a standalone install of GCM Core was present on the system with a higher version, since the bundled copy is found on the PATH before anything else, Git was always picking the old one. The change to using full paths helps fix this issue, and also another issue on macOS where sometimes the /usr/local/bin directory is not on the PATH (such as for the root user, or during a postinstall script for a flat-package [.pkg] file).",0
1008,trace2: add child_start and child_exit events,0.6053871,Initial TRACE2 tracing events #1045,"This launches a job that downloads the ESRP signing tool client, then loads it with the necessary information for our signing abilities. Finally, it publishes our signed .deb to the build artifacts. Signed-off-by: Derrick Stolee dstolee@microsoft.com",0
1009,bitbucket-ui: add Bitbucket Windows UI,0.6965183,Introduce the Bitbucket host provider with Windows GUI (#37),The .github/run_esrp_signing.py script is executed on the signing machines. This mostly accumulates a set of JSON input files before running the ESRP signing tool that was securely downloaded. Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
1010,Relax get command tests - ignore stdout ordering,0.5238683,Consistently read from stdout before waiting for Git process exit (#1136),Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
1011,"main: rename master branch to main, and drop beta",0.52057,- Renamed the main executable from git-credential-manager to git-credential-manager-core to allow for easier side-by-side use with Java GCM and Windows GCM during the preview (#70),,0
1012,Merge pull request #559 from parapsychic/main,0.37520045,Secret Service sec_free: Assertion cell->requested > 0 failed. error fix #996,,0
1013,Merge pull request #475: Update README.md,0.45166406,"Fix winget publishing (#332, #338)","Ensure that we are correclty quoting arguments to Git configuration commands. We must ensure double-quotes are escaped correclty, and also any runs of back-slashes ('\') are preserved UNLESS a double-quote ('""') follows.",0
1014,Fix multiple top-level headings,0.46720436,"~Set MSAL embedded webview window title to give more context to the user (#347, #239)~ Not working currently (see here)","Update the macOS installer build to also create a distribution/product archive package, that contains the flat component package we were already building. The product archive allows us to do things like set welcome and conclusion messages, titles, and display a license (like the Windows installers do). In the new welcome and conclusion screens we include helpful links and instructions on how to uninstall GCM Core, and how to configure it for other users on the system. The macOS installer continues to install in a global location, but only configure the user's global Git configuration.",0
1015,diagnose: add GitHub API diagnostic tests,0.55318093,Add new diagnose command to help debug problems in the wild (#463),Fix bug where Allow Windows Integrated Authentication setting default wrong,0
1016,Merge pull request #543 from ldennington/remove-codeql,0.46620485,Drop -core suffix from entry executable #551 ,"Fix a bug where the 'Allow Windows Integrated Authentication' setting was evaluating to false when unset, rather than true as per design and the documentation.",0
1017,Update README.md,0.5394355,Consume new MSAL library versions (#346),Update GitHub auth change document PAT link,0
1018,config: update GitConfiguration to use --type,0.6559138,Avoid using the newer --show-scope Git config option - work with downlevel Git versions (#318),"Update the GitHub auth change document PAT link to auto-select the repo, gist, and workflow scopes.",0
1019,osx: avoid extra restore in macOS installer creation,0.6773013,Notarize the macOS installer and binaries to permit running on macOS Catalina 10.15 (#84),Add documentation regarding the upcoming removal of user/pass access to the authorizations API on GitHub. Outline how to upgrade to GCM Core from GCM4W to fix.,0
1020,docs(WSL): Correct the path to the executable,0.51287764,Fix WSL configuration instructions (#479),winget: update winget pkg on release,0
1021,Merge pull request #650 from ldennington/fix-symlink-linux,0.55725265,Fix WSL configuration instructions (#479),Automatically create a new PR to update the winget package for GCM Core on release.,0
1022,trace2: remove warning from tryparsesettings,0.5582794,Initial TRACE2 tracing events #1045,,0
1023,diagnose: add credential storage diagnostic tests,0.4786209,Validate installers before publishing (#813),Update readme and FAQs and drop preview wording,0
1024,Make WriteDictionary ext methods use TextWriter.NewLine property,0.4007781,Unify documentation line length (#862),"Update the readme and FAQ documentation to include Linux preview support, and elevate macOS and Windows from ""preview"" to GA.",0
1025,build(deps): bump actions/setup-dotnet from 3.0.0 to 3.0.1,0.5541228,Replace netstandard2.0 with dotnet6.0 (https://github.com/GitCredentialManager/git-credential-manager/commit/65cead2b5caa443fde1f9b86d02ab377a80a279c),Cut new release to fix deadlock with large Git configs,0
1026,Add Azure Pipelines YAML PR & CI build defns,0.5547613,- Azure Repos,gitconfig: avoid deadlock on large amounts of config data,0
1027,Merge pull request #172 from mjcheetham/linux-credstores,0.506882,Align with dotnet-supported Linux distributions (https://github.com/GitCredentialManager/git-credential-manager/pull/953),"As per the Remarks section in https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.processstartinfo.redirectstandardoutput we should first read the output until the end before waiting for the git config process to finish, to avoid deadlocks. This indeed helps in the situation of this developer whose config is so large that git config -l produces 25 kilobyte worth of output. Apparently, this fills up some buffer that seems to be around 8kB and then git config -l waits for its output to be consumed, and before this patch, the consumer (i.e. GCM Core) would wait for git config -l to exit already.",0
1028,Actions: use workflow_dispatch for manually running workflows,0.42529157,Add workaround for Windows Broker (WAM) running as admin (#344),Linux build script updates,0
1029,Merge pull request #533 from microsoft/release-fix,0.54313517,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)",Co-authored-by: Matthew John Cheetham mjcheetham@github.com,0
1030,Fixes typo in Mac dist script,0.54306483,Fix build script error creating incorrect x64 packages for macOS (https://github.com/GitCredentialManager/git-credential-manager/pull/778),Co-authored-by: Matthew John Cheetham mjcheetham@github.com,0
1031,app: return non-zero exit code on exception,0.6005248,"Return non-zero code for UI helpers on error (#440, #441)",Co-authored-by: Matthew John Cheetham mjcheetham@github.com,0
1032,Merge pull request #601 from mjcheetham/title-fix,0.44542754,Fix WSL configuration instructions (#479),New release to fix Linux web browser launching,0
1033,trace2: move formattargettypes,0.49704087,Initial TRACE2 tracing events #1045,Disconnect standard output/error streams from xdg-open and friends,0
1034,"xui: add ""About GCM"" dialog window",0.60756725,Add ability to read GCM default settings from the Windows Registry (#404),"When using the Process class to open the user's default browser on Linux, utilities like xdg-open are used. Some of these utilities do not disconnect child processes from our standard input/output/error streams. At the same time, browsers like Chromium like to write to stdout and stderr, which gets fed back to Git or the user's terminal, respectively. The latter looks messy, and the former causes Git to fail. On Linux, we instead manually locate a suitable 'shell execute' utility and launch them directly - this way we can redirect the standard output/error streams. For Windows and macOS, this is not an issue and we continue to use the Framework code to do 'shell execute'.",0
1035,autodetect: set credential.provider after autodetect,0.6687349,"Persist auto-detected provider setting (#507, #517)","Introduce a TryX method version of the existing LocateExecutable method on IEnvironment, for locating executables with which and where.exe.",0
1036,fixup! release: publish draft release to GitHub,0.6664929,- GitHub,,0
1037,gcm: rename entry executable to drop -core suffix,0.67106307,Drop -core suffix from entry executable #551 ,Fix previous release (linux support) by adding config bug fix,0
1038,Merge pull request #338 from ldennington/bump-update-winget,0.5971731,"Fix winget publishing (#332, #338)",Fix bug in Git configuration filtering logic,0
1039,Rename cred store static OpenDefault ctors to Open,0.4232967,Add option to use the new DPAPI-based credential store on Windows (#464),"Ensure the desired GitConfigurationLevel is passed to the GitConfiguration object so that the correct filter level can be selected. This is not so important for reading keys, but will fail when modifying keys since you need to specific which configuration level to edit. This bug resulted in calls to git-credential-manager-core unconfigure to fail. Add some tests of the config methods that modify values.",0
1040,macos environment: add option to ignore paths,0.5490508,- macOS,"Create new release including ""alpha"" Linux support",0
1041,fix the signing! woop yolo,0.46940812,@4brunu,Add Linux Azure Pipelines release,0
1042,configuration: update config cmd to set full path,0.5939657,"Set the full path to standalone GCM Core installs, enabling overriding of bundled versions (#188, #199)",,0
1043,msauth: use new Windows broker based on MSALRuntime,0.7122147,Add workaround for Windows Broker (WAM) running as admin (#344),Add a variety of credential stores on Linux,1
1044,hostregistry: fix bug to ensure correct provider disposal,0.870561,Fix a bug with host provider disposal (#272),Extract the Linux Credential Store option constant values.,1
1045,Use Git's HTTP proxy configuration,0.72346354,Git Host Providers:,Add a document outlining the different credential stores available on Linux.,1
1046,Update markdownlint-cli2-action to 7.0.0 (#910),0.5524935,Update System.CommandLine and fix some bugs (#531),"Add a pass compatible credential store that uses GPG to store encrypted credentials in files on disk. Defaults to the default pass password store, but can be overriden using standard pass envars.",0
1047,inputargs: update remote URI generation to support ports,0.47217485,Updated generic provider to support all protocols (#712),"Refactor the PlatformFact attribute to support a flags enum, such that compound platforms can be specified (e.g., Posix = Linux | Mac).",0
1048,git: implement IGit/Config using the Git CLI,0.65426874,Use native Git path interpolation for config values (#439),"Add a plaintext credential store option for Linux. Credentials are stored in plaintext files, by default in ~/.gcm/store, but configurable by settings/environment variables. Users can select between the Secret Service API and plaintext-based credential storage using the GCM_CREDENTIAL_STORE setting.",0
1049,Merge pull request #398 from hickford/patch-1,0.5555531,@hickford,"Change how we construct the existing credential stores by simply new-ing them up, rather than calling a static Open method.",0
1050,Merge pull request #205 from mastercoms/patch-1,0.54106283,@mastercoms,Remove username/password authentication for GitHub.com,0
1051,Install: fix postinstall script on osx,0.5762861,Fix build script error creating incorrect x64 packages for macOS (https://github.com/GitCredentialManager/git-credential-manager/pull/778),Fix a typo in a constant variable indicating the available authentication modes for GitHub.COM.,0
1052,winui: extract shared WPF UI into project,0.6254467,WPF-based GitHub auth UI (#40),"Now that we have the GCM OAuth application in the allow-list for GitHub apps, we no longer need to offer username/password authentication for GitHub.com!",0
1053,docs: Update README docs links (#946),0.6383041,Update documentation to use reference-style links (#680),Revamp credential storage system to allow for smarter searching,0
1054,Merge pull request #283 from mjcheetham/net472,0.410908,@mminns ,"Fix a bug in the WindowsEnvironment implementation of the LocateExectuable method. On .NET Core the UseShellExecute property of ProcessStartInfo defaults to false, whereas on .NET Framework (the runtime that we target on Windows) defaults to true. You must set this to false if you want to redirect standard streams (which we want to do). The .NET Framework-targeting build on Windows was throwing an exception here(!)",0
1055,Remove Microsoft from/generally update namespaces,0.49170965,"Update MSAL; set MS auth embedded window title (#239, #512)",Update the GCM Core Host Provider spec document and architecture document to reflect the changes made to the abstract HostProvider class; replacing GetCredentialKey with GetServiceName.,0
1056,Merge pull request #894 from wolf99/github-usercontent-images,0.49923572,@wolf99 ,"Add support for customising the namespace/prefix used to store credentials in the OS credential store. By default we use ""git:{service}"". Users can use GCM_NAMESPACE or credential.namespace to set this to something different. These configuration options are the same as in GCM for Windows to help with migration.",0
1057,Merge pull request #754 from mjcheetham/bb-newui,0.38939333,Check for broken links in documentation (#700),"Now that we support multiple user accounts for each host/service/remote, we have hit an interesting issue with Azure Repos. With the introduction of the dev.azure.com-style URLs for Azure Repos there was an unfortunate hack or workaround invented to add the AzDevOps org name to the userinfo part of the remote URL, for example: org@dev.azure.com/org/blah. Since GCM for Windows (and older versions of GCM Core that initially followed the same model) always uses the value ""PersonalAccessToken"" for the username field when storing credentials it was free to ignore the user part of the input. The problem now is that since we support multiple user accounts, and will perform an exact match against the credential (with user) if a username is specified in the remote URL, we never find the credential we now store (we now always store with the actual, real users' UPN). To workaround this workaround (yuck) we ignore the username IF AND ONLY IF the host is dev.azure.com, and return the first matching dev.azure.com/org credential. The upshot of this is that dev.azure.com-style URLs do NOT support multiple users OR full paths, however vs.com-style URLs will.",0
1058,fail loudly if a test depends on TestGit's process/helper,0.56461275,Reduce warnings from tests (#337),"Update the Azure Repos provider to support the new credential storage API/model, as well as support remote URLs with explicit port numbers.",0
1059,netcore: upgrade to .NET Core 3.1,0.8067515,Move to .NET Core 3.1 (LTS) (#101),Update the GitHub provider to implement and follow the new credential storage/recall/matching model and ICredentialStore APIs.,1
1060,docs: fix a typo in multi-users doc,0.43211013,Add workaround for Windows Broker (WAM) running as admin (#344),Update the BitBucket provider to support and implement the new credential storage/recall model and APIs.,0
1061,Issue #218 Address PR comments with minor updates to XUnit usage and removed unused code and out of date comments,0.48644,Update System.CommandLine and fix some bugs (#531),Update the Basic authentication component to match the new ICredential interface.,0
1062,Add validation workflow,0.52582103,Codebase and build improvements (#49),Update the generic host provider to support the new credential storage model and HostProvider base class APIs.,0
1063,Add GitHub helper on Windows using WPF on netfx,0.6605818,WPF-based GitHub auth UI (#40),Update the HostProvider base class to use the new 'service name' abstraction rather than the simple 'unique credential key' one. With this model we can better issue credential storage queries where the username may not be specified explicitly in a get request (often the case as the username is not always included in the remote URL for many services).,0
1064,fixup! fixup! Add install from source script,0.525023,Fix build script error creating incorrect x64 packages for macOS (https://github.com/GitCredentialManager/git-credential-manager/pull/778),"Update the remote URI generation from the program InputArguments to support port numbers, and special characters in usernames.",0
1065,bitbucket: update BB provider to implement new cred APIs,0.7155565,Updated Bitbucket credential UI to show the URL of the Bitbucket Server or Data Center instance if applicable (#713),Update the SecretServiceCollection credential store (backed by libsecret) to match the new ICredentialStore interface and access model.,1
1066,Merge pull request #125 from microsoft/master,0.4628938,"Fix a bug with using Microsoft Accounts with Azure Repos (#143, #148)","Recover the correct service name from the target name. Since the target name may contain a userinfo component (for example https://alice_domain.com@example.com/path), and the only place we store the service name is in the target name, we need to strip out any userinfo component. We do this by looking for the ""://"" and the first '@' character before the first '/', which act as the start and end of the userinfo component.",0
1067,build(deps): bump DavidAnson/markdownlint-cli2-action from 7.0.0 to 8.0.0 (#976),0.5574917,Codebase and build improvements (#49),"Update the Windows Credential Manager component to implement the new ICredentialStore interface, including credential enumeration and matching by account/user as well as 'service name' (target).",0
1068,Updated ISSUE_TEMPLATE from version to --version,0.5710702,Update System.CommandLine and fix some bugs (#531),"Update the macOS Keychain component implementation to match the new ICredentialStore interface. We now use the SecItemCopyMatching to perform a general query for items, and return a specialised credential object including all relevant attributes.",0
1069,Add IConfigurationService and (un)configure commands,0.45434368,Use System.CommandLine to handle our command line parsing and allow host providers to offer custom commands (#273),"Update the ICredentialStore and ICredential API to allow for smarter searching of stored credentials. The new API exposes filtering by ""service name"" and ""account"" separately. Service name will typically be the URL the credential is stored against, and the account will be the username associated with the credential.",0
1070,diagnose: add MS auth diagnostic tests,0.48387393,Add new diagnose command to help debug problems in the wild (#463),Add a Linux .deb installer CI workflow,0
1071,Merge pull request #884 from ldennington/fix-windows-zip,0.511476,Fix WSL configuration instructions (#479),CI: update configuration to build native bits,0
1072,windows-ui: fix inverted user interactive check,0.619445,Fix a bug where Windows interactive sessions were not detected correctly (#123),,0
1073,Fix md lint errors that do not alter content,0.5017628,"Update MSAL; set MS auth embedded window title (#239, #512)",,0
1074,msauth: update to MSAL.NET 4.37,0.7631253,Consume new MSAL library versions (#346),"The build configuration ""Release"" only builds the managed portions of GCM Core. However, on macOS and Windows we have UI bits that are native to each platform. Update the --configuration build option to include these native bits by casing on the ""os"" variable in the matrix build. Signed-off-by: Derrick Stolee dstolee@microsoft.com",1
1075,bitbucket: update shared UI helper code for new UI model,0.6120768,Updated Bitbucket credential UI to show the URL of the Bitbucket Server or Data Center instance if applicable (#713),"Resolves #161. The failures were due to subtleties when working without any credential.helper values in any level of config. This is typical for a fresh install on a Linux machine, but never happens with Git for Windows. Git on macOS might also come pre-loaded with this config.",0
1076,Merge pull request #463 from mjcheetham/diagnose,0.4598903,Add new diagnose command to help debug problems in the wild (#463),,0
1077,move InvokeAsync to the new HelperProcess,0.4643618,- Azure Repos,,0
1078,registry: only set credential.provider for dynamic matches,0.7859036,Fix a bug to prevent setting credential.provider when it wasn't needed (Only set credential.provider for dynamic matches #535),,1
1079,Add .DS_Store to gitignore,0.55277497,Add support for using WSL Git configuration (#461),,0
1080,sln: remove unused external file nodes from solution,0.40093213,"Fix problems with resolving the executable file path on Linux (#298, #229, #252)",,0
1081,Merge pull request #905 from mjcheetham/pkgicon,0.4285112,"Add an OAuth2 client implementation with PKCE support (#99, #102)",,0
1082,docs: clarify custom ui helpers for appdevs only,0.48623186,Include UI helpers in Debian package for Linux release; move GCM symlink to /usr/local/bin (#405),,0
1083,docs: update various docs with new code,0.5031923,"- Codebase and build improvements (#29, #33)",,0
1084,AzureReposHostProviderTests: fix warnings around orgName,0.6791358,"Fix a bug with using Microsoft Accounts with Azure Repos (#143, #148)",,0
1085,Merge pull request #215 from mjcheetham/config-empty-fix,0.46215063,Fix WSL configuration instructions (#479),,0
1086,credentialstore: add error about cache windows,0.5575366,Add option to use the new DPAPI-based credential store on Windows (#464),"  When we re-set the configuration, we pass an empty value to clear the existing values. However, that only works if we quote around the empty value. Otherwise, Git does not ""see"" a value argument.   If there is no configuration for a given key, the exit codes for 'git config' change. See the documentation [1] for full details. For now, be careful about exit codes 1 and 5, when appropriate.   [1] https://git-scm.com/docs/git-config Signed-off-by: Derrick Stolee dstolee@microsoft.com",0
1087,bitbucket: add unit test for GetCredAsync helper cmdline,0.5650797,Autodetect Bitbucket DC instances (#373),"For some situations, the key-value pairs we split from the response of 'git config' do not have two elements. Be careful to check the length before returning the value. If the length is not two, then this is an invalid key-value pair so skip that entry. Signed-off-by: Derrick Stolee dstolee@microsoft.com",0
1088,!fixup winget tag specification,0.6828617,More winget publishing fixes (#353),Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
1089,ISSUE 329 address PR comments with minor updates,0.5150354,More winget publishing fixes (#353),Add initial Ubuntu & Secret Service support,0
1090,Copy in default dotnet core workflow template steps,0.48642194,Codebase and build improvements (#49),,0
1091,org-rename: update references to GitCredentialManager (#1141),0.61950314,- Renamed the main executable from git-credential-manager to git-credential-manager-core to allow for easier side-by-side use with Java GCM and Windows GCM during the preview (#70),"Starting the creation of a Github Actions CI workflow, specifically including Linux.",0
1092,fixup! docs: update docs for new credstore options,0.49874002,- Various bug fixes and improvements,,0
1093,Merge pull request #274 from mjcheetham/drop-osx-helper,0.41135347,"Fix winget publishing (#332, #338)",,0
1094,"tests: introduce ""Posix"" and ""All"" PlatformFact support",0.46299502,Validate installers before publishing (#813),,0
1095,procmgr: ensure we create a WindowsProcessManager on Windows,0.6379357,Add workaround for Windows Broker (WAM) running as admin (#344),,0
1096,Merge pull request #19 from mjcheetham/macos-msauth-helper,0.4544813,@mminns ,,0
1097,trace2: add error event (#1156),0.6962168,Initial TRACE2 tracing events #1045,,0
1098,bitbucket: respect new GUI prompt enabled setting,0.61844635,Introduce the Bitbucket host provider with Windows GUI (#37),,0
1099,Update support email and github url and run on pushes to release,0.6046779,Improved usability for GitHub auth (#587),,0
1100,release: fix Windows archives,0.5436672,Fix Windows user-only installer configuration bug (#335),,0
1101,Merge pull request #233 from mjcheetham/credsuppress,0.40882352,@mminns ,,0
1102,Issue 573 docs: Document the use and development of OAuth2 for Bitbucket DC,0.8633066,Bitbucket DC OAuth support (#607),,1
1103,"deb: move binary install location, add symlinks in /usr/bin",0.616449,Include UI helpers in Debian package for Linux release; move GCM symlink to /usr/local/bin (#405),Make OAuth the default authentication mechanism for GitHub provider,0
1104,Merge pull request #16 from mjcheetham/windows-msauth-helper,0.5293757,Add workaround for Windows Broker (WAM) running as admin (#344),,0
1105,Merge pull request #575 from mjcheetham/azrepos-list-fix,0.51721466,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)",,0
1106,Merge pull request #488 from mjcheetham/badgitver-docs,0.4107475,Check for broken links in documentation (#700),"Replace the ""login using browser"" link with a button on the Windows GitHub login dialog.",0
1107,Merge pull request #347 from mjcheetham/msal-title,0.4520678,Consume new MSAL library versions (#346),Move the OAuth/login with browser option to the top of the Windows GitHub login dialog when both user/pass and OAuth options are available.,0
1108,document TLS 1.2 on Win7,0.5167676,Fix WSL configuration instructions (#479),Make OAuth the default authentication mode.,0
1109,.gitignore: ignore signing outputs,0.6379314,Consistently read from stdout before waiting for Git process exit (#1136),Automatically update Homebrew Cask on release,0
1110,Merge pull request #122 from microsoft/fix-release-workflow,0.56392914,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)","On release, automatically update the Homebrew Cask in the microsoft/git Tap.",0
1111,docs: add supported Linux distributions to README.md,0.5848512,Include UI helpers in Debian package for Linux release; move GCM symlink to /usr/local/bin (#405),Fix workflows and builds,0
1112,Merge pull request #405 from vdye/387-add-ui-and-symlink-deb,0.42611295,Drop -core suffix from entry executable #551 ,"Ensure the PR build is triggered on PRs into master or release. Also now that we're making real releases of GCM Core on GitHub and not just pre-releases, move to the simpler syntax/API calls for the Action that creates and updated the Homebrew cask on release publish.",0
1113,Provide a name with more context.,0.32698137,"Refactor namespace, assembly and project names (#500)",Cut a new release,0
1114,docs: update docs for new GitHub auth modes,0.72791636,Improved usability for GitHub auth (#587),Enable OAuth device authorisation grant support for GitHub,1
1115,Merge pull request #13 from mjcheetham/fix-tracesecrets,0.46895552,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)",Enable the device code authorization grant flow for GitHub.,0
1116,Merge pull request #164 from kyle-rader/user/kyrader/linux-installer,0.49460685,Align with dotnet-supported Linux distributions (https://github.com/GitCredentialManager/git-credential-manager/pull/953),Use the final OAuth2 device authorization endpoint URI.,0
1117,Merge pull request #64 from czipperz/quote-bash-variables,0.40152156,Fix build script error creating incorrect x64 packages for macOS (https://github.com/GitCredentialManager/git-credential-manager/pull/778),Fix Azure Repos sign-in with Microsoft Accounts,0
1118,Run release-winget on Windows Server,0.57091093,"Groundwork for upcoming Windows release, including:","Use the /organizations authority for MSA accounts with Azure DevOps/Repos. This is because we're using MSA pass-through, an internal Microsoft mechanism to support both MSA and 'work' (AAD) accounts with the same auth stacks. You should be able to use /common, but this doesn't work. At the same time we're using ADAL Obj-C on macOS rather than MSAL.NET like we do on Windows, and ADAL speaks to the ""v1"" AAD endpoints, which don't know the /organizations tenant :( For macOS we need to fudge the authority back to /common for MSA accounts.",0
1119,Add install from source script,0.498636,Fix computation of installation path on Linux/single-file publish (#310),A fix for a typo that I noticed in the FAQ 🙂,0
1120,docs: fix incorrect Ubuntu uninstall command,0.50942147,"Fix missing dependencies in Debian package (#506, #514, #528)",,0
1121,oauth: extract OpenDefaultBrowser to reusable component,0.5297053,Generic OAuth support via config 🎉 #1062,Rename the LibsecretCollection type to SecretService API to more accurately reflect the API we're using.,0
1122,Merge pull request #4 from mjcheetham/yaml,0.411601,Convert issue templates to YAML (https://github.com/GitCredentialManager/git-credential-manager/commit/24ae90a4bd18fec6edcc860281ff82f715588e44),,0
1123,docs: update WSL guide with new Git For Windows path,0.7140678,Add support for using WSL Git configuration (#461),Introduce a credential store for Linux that passes through to a backing store that is selected based on user preference and session features. Currently this is a stub that just uses LibsecretCollection (which only works in a GUI environment).,1
1124,oauth: implement RFC 7636 PKCE in OAuth client,0.83249927,"Add an OAuth2 client implementation with PKCE support (#99, #102)",,1
1125,fixup! Add install from source instructions,0.56774396,Fix computation of installation path on Linux/single-file publish (#310),Rewrite the libsecret and glib interop code for the Linux ICredentialStore implementation to be more thorough.,0
1126,Merge pull request #40 from mjcheetham/github-winui,0.4729901,WPF-based GitHub auth UI (#40),Extend the PR and CI build to produce a tarball of binaries for Linux x86_64 platforms; building on Ubuntu 18.04 LTS. The release build does not publish anything currently as we need to get signing working.,0
1127,msauth: use dummy window for WAM if no parent,0.6395948,Add workaround for Windows Broker (WAM) running as admin (#344),Update the Nerdbank.GitVersioning package to the latest to fix a bug where the package would fail to execute due to libgit2 dependency issues.,0
1128,Merge pull request #902 from GitCredentialManager/dependabot/github_actions/actions/setup-dotnet-3.0.2,0.63458943,Align with dotnet-supported Linux distributions (https://github.com/GitCredentialManager/git-credential-manager/pull/953),Implement a credential store for Linux platforms that use the libsecret Secret Service API.,0
1129,basic: replace system UI with new UI helper,0.5333748,"Add GitHub OAuth support and refreshed Windows UI (#101, #103)",Implement a stub ISystemPrompts component that just throws. The component is currently not used on any platform that's not Windows anyway so this won't be hit.,0
1130,Replace old SHA1 signing certificates with SHA256 ones,0.4345431,Stopped serializing/writing credentials that already exist (#739),,0
1131,generic: catch OAuth refresh token errors,0.67347467,Improved Bitbucket OAuth performance through verification of access token validity (#518),Add an implementation of the IFileSystem component for Linux distributions. We just simply assume that all file systems are case-sensitive at the moment. Also introduce a (empty) PosixFileSystem class shared between macOS and Linux.,0
1132,fs: add abstractions for reading all text and enum dir,0.38348332,Unify documentation line length (#862),,0
1133,build: use new Microbuild 1ES pool,0.5539446,Codebase and build improvements (#49),Update the use of the Git configuration components in the configuration service and configurable components; used to set up a system during install.,0
1134,Try also running tests,0.47973478,Reduce warnings from tests (#337),"Implement IGit and IGitConfiguration components using the Git CLI executable, rather than libgit2.",0
1135,oauth: add an OAuth2 client implementation,0.80699015,"Add an OAuth2 client implementation with PKCE support (#99, #102)","Add ability to locate executables on the current PATH by shelling out to which on UNIX platforms, and where.exe on Windows.",1
1136,Merge pull request #72 from mjcheetham/multivar-git,0.4448802,Add support for using WSL Git configuration (#461),Split out the IGit and IGitConfiguration interfaces and extension methods in to their own files.,0
1137,winui: extract parent window handling,0.54028666,Pass parent window handle information to MSAL (#306),Update support for Bitbucket Server,0
1138,Use correct label on auth-problem issue template,0.43780792,Check for broken links in documentation (#700),,0
1139,Unlink the Java GCM from Homebrew if installed,0.8910488,Mac installer will now unlink the Java GCM via Homebrew if installed (#45),Co-authored-by: Matthew John Cheetham mjcheetham@github.com,1
1140,azrepos: use organizations authority for MSA accounts,0.46684417,- Support AAD users as guest users in MSA-based Azure DevOps organizations (#32),Co-authored-by: Matthew John Cheetham mjcheetham@github.com,0
1141,bitbucket: use Sourcetree's client ID and secret,0.57470435,Updated Bitbucket credential UI to show the URL of the Bitbucket Server or Data Center instance if applicable (#713),Co-authored-by: Matthew John Cheetham mjcheetham@github.com,0
1142,github: readd WPF GitHub divider and 2FA controls,0.65379155,WPF-based GitHub auth UI (#40),Co-authored-by: Matthew John Cheetham mjcheetham@github.com,0
1143,expose the copy of Git we're using,0.6682779,- GitHub,Co-authored-by: Matthew John Cheetham mjcheetham@github.com,0
1144,authbase: quote cmdargs passed to helpers,0.48639134,Distribute GCM as a dotnet tool (#886),Co-authored-by: Matthew John Cheetham mjcheetham@github.com,0
1145,windows: compile to 32-bit x86 only,0.73003864,- Windows support (64-bit only) (#46),Co-authored-by: Matthew John Cheetham mjcheetham@github.com,1
1146,osx: update the Mac installer to make product archives,0.68269455,Notarize the macOS installer and binaries to permit running on macOS Catalina 10.15 (#84),,0
1147,Ignore GitLab FAQ link,0.7338805,- GitHub,Allow HTTP as well as HTTPS for Bitbucket Server hosts TODO test more complex URLs e.g. https://my.company.com/bitbucket,1
1148,Fix CONTRIBUTING.md link to LICENSE,0.5128118,Convert issue templates to YAML (https://github.com/GitCredentialManager/git-credential-manager/commit/24ae90a4bd18fec6edcc860281ff82f715588e44),Add SVG version of GCM logo,0
1149,Merge pull request #640 from ldennington/update-nuget-version-macos-release,0.5134633,Fix build script error creating incorrect x64 packages for macOS (https://github.com/GitCredentialManager/git-credential-manager/pull/778),,0
1150,Merge pull request #901 from ldennington/rename-dotnet-tool-package,0.52995175,Replace netstandard2.0 with dotnet6.0 (https://github.com/GitCredentialManager/git-credential-manager/commit/65cead2b5caa443fde1f9b86d02ab377a80a279c),Add host provider specification,0
1151,Merge pull request #208 from microsoft/master,0.49819964,Add workaround for Windows Broker (WAM) running as admin (#344),,0
1152,libsecret: update libsecret interop to match new interface,0.6298593,Allow use of older versions of libsecret such as in Ubuntu 18.04 (#244),,0
1153,"remove ""experimental"" moniker from Azure DevOps OAuth in docs",0.49199593,- Azure Repos,,0
1154,release: sign and publish .NET tool nupkg,0.56317997,Fix release builds .NET SDK version (#358),Add Architecture overview document to help developers,0
1155,build(deps): bump Newtonsoft.Json in /src/shared/Core,0.3584053,Codebase and build improvements (#49),,0
1156,Merge pull request #693 from GitCredentialManager/update-wsl-docs,0.61821204,Add support for using WSL Git configuration (#461),,0
1157,Add KDE Gitlab (invent.kde.org) instance to the list of supported services.,0.5492956,- GitHub,Add a document outlining the architecture of GCM Core.,0
1158,trace2: add process wrapper,0.5445918,Initial TRACE2 tracing events #1045,github: store the PAT on 'get' request for SAML SSO,0
1159,Merge pull request #73 from mjcheetham/configservice,0.4316694,Fix a bug with host provider disposal (#272),"In order to allow a user that requires SAML SSO to be manually enabled on their newly generated PATs to access org repos, we must store the PAT as soon as we generate it. This then allows the user the ability to visit the web UI, enable SSO, and then repeat their Git operation using the same PAT. Workaround for issue: #133",0
1160,http: allow NO_PROXY split with space,0.4352567,"Support for the NO_PROXY option to bypass the proxy for certain addresses (#299, #297)",Cut release fixing Bitbucket bug and 32-bit Windows support,0
1161,Upgrade update-winget action to v1.4,0.62717575,More winget publishing fixes (#353),,0
1162,docs: fix config reference typo,0.5357362,Update documentation to use reference-style links (#680),windows: compile to 32-bit x86 only,0
1163,Add extra parens for readability,0.38521466,Add option to prevent interactivity (#91),"Since we want to ship with Git for Windows which offers both an x86 and x86_64 option, we should build an x86 (32-bit) application rather than an x86_64 (64-bit) one. Since 32-bit applications can run on 64-bit versions of Windows (including Windows on ARM) this is the more compatible target. We could also publish both a 32- and 64-bit build of GCM Core on Windows but this seems redundant as GCM Core really does not need 64-bits of addressable memory(!)",0
1164,build(deps): bump lycheeverse/lychee-action from 1.5.1 to 1.5.2,0.5277369,Speed up build graph (#924),homebrew: fix automatic Homebrew update,0
1165,issue templates: remove core suffix (#1180),0.61010027,Drop -core suffix from entry executable #551 ,The Octokit API does not find releases by tag when they are prerelease (like all the beta releases of GCM Core are). Instead enumerate the list of releases and manually filter to the matching tag name instead.,0
1166,Add instructions for apt-get install to README,0.5482695,Fix computation of installation path on Linux/single-file publish (#310),Don't attempt to deserialize nulls from bitbucket response,0
1167,github: rename OAuth authmode to Browser,0.6796381,"Now that OAuth has been fully adopted for GitHub.com and works for all users (personal and organizational alike), the username/password option has been removed. The username/password option will soon be removed from the server-side anyway – see more here: https://github.blog/changelog/2019-08-08-password-based-http-basic-authentication-deprecation-and-removal/.","In my case, the field has_2fa_enabled was coming back null and that caused deserialization to fail with: Error converting value {null} to type 'System.Boolean'. Path 'has_2fa_enabled', line 1, position 79. Another alternative is to make the property bool? instead.",0
1168,Merge pull request #721 from ldennington/fix-github-action-script,0.49900782,Migrated release process from Azure DevOps to GitHub actions (#707),Cut another release to fix the bug in 2.0.153,0
1169,Merge pull request #152 from mjcheetham/homebrew-auto,0.45150536,Mac installer will now unlink the Java GCM via Homebrew if installed (#45),windows-ui: fix inverted user interactive check,0
1170,credentialstore: allow users to select more credstores,0.6193124,Add option to use the new DPAPI-based credential store on Windows (#464),The code that was copied from the .NET runtime code (dotnet/runtime) had a bug in it that inverted the check for the WSF_VISIBLE flag! Updated the code to match their now fixed version.,0
1171,fix possible NullReferenceException,0.51191044,"Return non-zero code for UI helpers on error (#440, #441)",release: add required token to release workflow,0
1172,workflows: remove CodeQL,0.45645395,Codebase and build improvements (#49),Add the required GITHUB_TOKEN token to the release workflow.,0
1173,Use shorter name so you can see os versions in Actions UI,0.50677586,UI on macOS and Linux thanks to AvaloniaUI 🎉 (#336),Cut new release with Bitbucket provider,0
1174,Merge pull request #180 from mjcheetham/fix-webopen,0.43698627,Fix a bug with host provider disposal (#272),Add Bitbucket Windows UI project,0
1175,build(deps): bump lycheeverse/lychee-action from 1.5.1 to 1.5.2 (#952),0.547845,Speed up build graph (#924),"Add a port of the Bitbucket UI from the old GCM for Windows, and update the UI to git with the new refreshed design.",0
1176,trace2: documentation,0.74673265,Initial TRACE2 tracing events #1045,,1
1177,Merge pull request #516 from ldennington/remove-release-apt-get,0.49950713,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)","Update the SecurePasswordBox control to notify all listeners of changes to the password value. Previously we only notified on the first character typed into the box. We clone the current password, modify it, and then replace the previous instance (triggering an INotifyPropertyChanged::PropertyChanged event). With a binding delay, we will batch updates of multiple keystrokes rather than one at a time.",0
1178,Merge pull request #148 from mjcheetham/msafix,0.46118024,@mminns ,"Add property and model validation helpers, which will be used by Bitbucket's Windows UI helper in subsequent commits.",0
1179,Merge pull request #862 from wolf99/doc-line-length,0.60326254,Unify documentation line length (#862),Extract various shared WPF components into a separate project,0
1180,Add GCM_INTERACTIVE/credential.interactive setting,0.6638057,Add ability to read GCM default settings from the Windows Registry (#404),Extract the GitHubDialogWindow into a shared control that can be used by multiple consumers. Also simplify the IGui interface and optimise creating a DialogWindow window with a control.,0
1181,osx: only update keychain entries when needed,0.54735947,Better warning messages on macOS when there are Keychain issues (#305),Extract logic display a model window that is correctly parented to the GCM_MODAL_PARENTHWND window handle.,0
1182,pass through options,0.43830192,Add option to prevent interactivity (#91),Extract shared command line parsing methods used in Windows UI helpers.,0
1183,Enable building Mac/Windows specific solution projects,0.5332278,Notarize the macOS installer and binaries to permit running on macOS Catalina 10.15 (#84),Extract common/shared WPF UI into its own project to be consumed by the various UI helpers (GitHub.UI currently).,0
1184,http: add support for client certificates (#1152),0.6341185,"Add an OAuth2 client implementation with PKCE support (#99, #102)",homebrew: publish new package version on release,0
1185,Merge pull request #71 from mjcheetham/environ,0.4126006,@mminns ,Publish a new Homebrew Cask version on release via a GitHub action.,0
1186,Test task version correction,0.6052043,Reduce warnings from tests (#337),Correctly check for GUI on Win/Mac/POSIX,0
1187,git: add ability to list remotes and get current repo dir,0.5443244,- GitHub,Replace the PlatformUtils.IsDesktopSession util method with platform specific components that check use native APIs to determine the state of the current session. Environment.UserInteractive is hard-coded to return true for POSIX and Windows platforms on .NET Core 2.x and 3.x. https://github.com/dotnet/runtime/issues/770 The .NET 5 implementation (not yet released) fixes this for the Windows platform only. We take a copy of that implementation for Windows. On macOS we use the SessionGetInfo from the Security.framework. On POSIX in general we also check for the X11 $DISPLAY environment variable.,0
1188,Do not fail pipeline if optional tests fail,0.53422266,Guard against null pipe client (#1135),helpers: allow auth helpers to be overridden by config,0
1189,Merge pull request #157: GitHub Actions Workflow,0.5892346,Migrated release process from Azure DevOps to GitHub actions (#707),Allow authentication UI helpers to be overriden by environment variables and Git configuration options.,0
1190,Merge pull request #806 from GitCredentialManager/dependabot/github_actions/DavidAnson/markdownlint-cli2-action-6,0.5183544,Align with dotnet-supported Linux distributions (https://github.com/GitCredentialManager/git-credential-manager/pull/953),Update our out-of-date documentation,0
1191,github: split Avalonia UI from agnostic VM/cmds,0.5756614,- Renamed the main executable from git-credential-manager to git-credential-manager-core to allow for easier side-by-side use with Java GCM and Windows GCM during the preview (#70),"Update our readme, FAQs documents, and actually put something in our build/debug docs!",0
1192,Merge pull request #259 from mjcheetham/fix-ghes-modes,0.503464,Fix WSL configuration instructions (#479),Ensure we ship the Bitbucket DLL on Windows,0
1193,Remove Host Provider doc front matter,0.65152,Fix a bug with host provider disposal (#272),Ensure we actually ship the Bitbucket host provider DLL!,0
1194,http: treat empty cred proxy as system default creds,0.59917027,"Allow hostname-specific proxy override to use no proxy (#442, #449)",Fix error message handling for LibGit2,0
1195,bitbucket: update UI helpers for new OAuth option,0.73756695,Updated Bitbucket UI to separate OAuth and username/password options (#754),Fix the reversed LibGit2 error message handling when no function-name was specified.,1
1196,Add main application configuration component.,0.48823088,- Installation now configures GCM Core per-user (sets credential.helper in the current user's $HOME/.gitconfig) but continues to be installed in a system-wide location. Other users can opt-in to using GCM Core by setting their own configuration by running git-credential-manager-core configure (#57),Add Bitbucket support (text prompts only),0
1197,linux: ensure symbols tarball contains symbols,0.6432404,Sign Linux tarball and .NET tool #985 ,"Until we have the GCM OAuth application ready in Bitbucket, continue to use Sourcetree's client ID and secret as GCM Windows does.",0
1198,Merge pull request #243 from mjcheetham/noboxchars,0.43082106,@mminns ,"Allow the OAuth client ID, secret, and redirect URI to be overridden at runtime using environment variables or config.",0
1199,Update package Nerdbank.GitVersioning. Fixes #583,0.6134249,Update System.CommandLine and fix some bugs (#531),"Add a Bitbucket authentication provider using OAuth2, with TTY-based interface only.",0
1200,release: sign Linux tarball,0.78840405,Sign Linux tarball and .NET tool #985 ,Merge release branch changes back into master,1
1201,gcm: create symlinks and warn message for gcmcore exec,0.5062291,Distribute GCM as a dotnet tool (#886),,0
1202,don't put CreateProcess on the interface,0.46395314,Add option to prevent interactivity (#91),Fix bugs in release pipeline,0
1203,Merge branch 'master' into readme-updates,0.41001987,@mastercoms,Make username/password authentication the default mode when presented with the options over the TTY. This is because we still don't have a whitelisted OAuth application and any OAuth tokens will have restrictions when used for org-owned repos.,0
1204,Apply suggestions from code review.,0.6384405,"- Codebase and build improvements (#29, #33)",Use the correct file path separator for the macOS packaging step,0
1205,bitbucket: allow OAuth params to be overridden at runtime,0.5830195,Improved Bitbucket OAuth performance through verification of access token validity (#518),"Fix the step where we install the nbgv tool on Windows. Looks like the build agents are not being cleaned and the --global install of the nbgv tool from previous runs is peristed and subsequent runs of that step fail due to ""already being installed"".",0
1206,Unify line length across docs,0.7614585,Unify documentation line length (#862),"Skip notarization step until a fix is in place for #108. Notarization fails on macOS because during code signing with MicroBuild we are losing the ""Hardened Runtime"" flag, and the .NET Core runtime Mach-O binaries are not code signed.",1
1207,Add broken link checking Action,0.68197304,Check for broken links in documentation (#700),The GitHub 2FA code prompt was always reporting 'closed' rather than accepted!,0
1208,ISSUE-329 Add tests before refactoring and extending provider code.,0.6210442,"- Codebase and build improvements (#29, #33)",Revert to the old MSBuild/NuGet tools for signed builds because the Microbuild signing tasks only work with these and not the dotnet tooling.,0
1209,env: introduce TryLocateExecutable method,0.4108683,Add option to prevent interactivity (#91),Add GitHub banner image,0
1210,Make the HTTP/S error message more specific.,0.51077056,"Respect http.sslCAInfo settings (#242, #411)",Cut new release,0
1211,github: update Windows GitHub UI to add PAT support,0.68950546,"Add GitHub OAuth support and refreshed Windows UI (#101, #103)",,0
1212,build: fix Windows packaging tool install step,0.6593835,Basic Windows installer (#41),Workaround Azure Pipelines build bug,0
1213,Merge pull request #353 from ldennington/bump-winget-version,0.58136207,"Fix winget publishing (#332, #338)","For some reason our Azure Pipelines builds are failing (occasionally) to restore packages unless we explicitly run a dotnet restore before our dotnet build. The Azure Pipelines team are still not sure why this is failing, or why it only happens one some of the hosted agents and not others (despite compiling the same commit)!",0
1214,xui: introduce a component for showing Avalonia UI,0.7137569,UI on macOS and Linux thanks to AvaloniaUI 🎉 (#336),Allow GitHub OAuth params to be overridden at runtime,1
1215,Merge pull request #560 from cjsimon/patch-2,0.42383623,Fix WSL configuration instructions (#479),"Allow the OAuth client ID, secret, and redirect URI to be overridden at runtime using environment variables or config.",0
1216,xui: add a dispatcher class,0.41814947,Codebase and build improvements (#49),Implement RFC 7636 PKCE in OAuth client and fix redirect URI bug,0
1217,Drop 'Core' from public product name,0.51957595,Drop -core suffix from entry executable #551 ,,0
1218,Add secure credential storage APIs for Windows+macOS,0.6283968,Enable copy/paste/cut etc on fields in the Microsoft authentication WebView on MacOS (#82),Implement the Proof Key for Code Exchange (RFC 7636) specification in the OAuth2 client.,0
1219,Add link to GitHub application settings,0.6645105,- GitHub,Support OAuth based authentication on GitHub; include a UI refresh,0
1220,credstore: update credstore API to allow better search,0.3975928,Fix a bug to prevent setting credential.provider when it wasn't needed (Only set credential.provider for dynamic matches #535),,0
1221,notarization: skip notarization step until fix in place,0.41117924,Add option to prevent interactivity (#91),Upgrade our .NET Core components from 2.1 to 3.1 (LTS).,0
1222,Merge pull request #441 from mjcheetham/exiterror,0.39910054,@mminns ,"Use the latest .NET Core 3.1.x SDK to build since we are using the new WindowsDesktop project SDK. We are not targeting .NET Core 3.1 yet, but need the newer toolchain.",0
1223,Merge pull request #520 from ldennington/remove-winget,0.49789745,"Fix winget publishing (#332, #338)",Use a refreshed WPF-based UI on Windows for GitHub authentication. Supports selecting OAuth/browser authentication and also displays the URL of a GitHub Enterprise instance if authentication to one.,0
1224,trace2: add sid,0.56941915,Initial TRACE2 tracing events #1045,Add an OAuth2 web browser-based authentication flow to replace the username & password flow for GitHub.com and augment the u/p flow for GHE instances.,0
1225,trace2: add performance format target (#1151),0.6056067,Initial TRACE2 tracing events #1045,Pull the general TryGetSetting and GetSettingValues methods up from the Settings class to the ISettings interface for all providers to use for their own settings.,0
1226,Add test HTTP objects,0.43206495,Auto-detect on-premises/self-hosted providers via HTTP headers (#262),Add a simple menu system that works over the TTY. This is useful for presenting a selection of authentication options to the user when no UI is available.,0
1227,Enable multi-targeting to NetFX 4.6.1 on Windows,0.50861835,Move to .NET Framework 4.7.2 on Windows (#283),Add an OAuth2 client implementation,0
1228,Cache environment variables dictionary,0.48976445,"Improve proxy environment variable handling (#497, #501, #503)",,0
1229,homebrew: update release asset name and uninstall script,0.48325026,Discontinued incorrect use of Homebrew Git shim (#731),"Add an OAuth2 client implementation that supports the authorization code grant, and the device authorization grant (device code) flows.",0
1230,homebrew: fix automatic Homebrew update,0.592439,Discontinued incorrect use of Homebrew Git shim (#731),,0
1231,Merge pull request #147 from mjcheetham/github-oauthdevice,0.47466773,OAuth Device Authorization Grant support for GitHub (#147),Add debug trace listener when debugger is attached,0
1232,Merge pull request #60 from mjcheetham/settings,0.4368214,Fix WSL configuration instructions (#479),"When a debugger is attached, automatically add a listener that will output to the debug console.",0
1233,Merge pull request #204: Actions: use workflow_dispatch for manually running workflows,0.41885683,Migrated release process from Azure DevOps to GitHub actions (#707),Add ISystemPrompts component and impl for Windows,0
1234,Implement the erase and store commands,0.3668884,Stopped serializing/writing credentials that already exist (#739),Wire up the parent window handle to system prompts and UI helpers.,0
1235,docs: Update README docs links,0.60011715,Update documentation to use reference-style links (#680),"Introduce the ISystemPrompts component which provides native/system UI prompts, starting with basic credential prompts. Include a basic implementation for Windows.",0
1236,Cache Git configuration used in Settings for the lifetime of the process (#1172),0.6286502,Consistently read from stdout before waiting for Git process exit (#1136),Create and publish zip & tar.gz archives of app and symbols,0
1237,oauth: drop unused protected properties from client,0.47609395,Generic OAuth support via config 🎉 #1062,"Create and publish ZIP and TAR archives on Windows and Mac containing the GCM Core app binaries, and symbols.",0
1238,Clarify that plaintext store is independent from git-credential-store,0.5757426,Support git-credential-cache as a credential backing store on Linux (#287),Add GCM_INTERACTIVE/credential.interactive setting,0
1239,docs: add documentation about the GCM.exe rename,0.60303736,Add ability to read GCM default settings from the Windows Registry (#404),"Add a setting to disable all user interaction. By setting GCM_INTERACTIVE or credential.interactive to a 'falsey' value, GCM Core will now fail and return an error if user interaction is required. This is useful in headless and unattended environments, such as build servers, where is is preferable to fail than it is to hang waiting for input from a non-existent user. The setting also existed in the previous GCM for Windows, but its behaviour has been slightly modified to treat 'always' values as 'auto'. See more in the documentation and the code. The default value is true / permit interaction.",0
1240,github: use OAuth2/web flow for GitHub,0.67705977,Add preliminary support for OAuth with GitHub AE (requires server support/changes) (#343),Sync master branch with missing commits from release branch,0
1241,build(deps): bump actions/setup-dotnet from 3.0.2 to 3.0.3,0.55262125,Replace netstandard2.0 with dotnet6.0 (https://github.com/GitCredentialManager/git-credential-manager/commit/65cead2b5caa443fde1f9b86d02ab377a80a279c),Fix up release build problems,0
1242,msauth: add support for Windows broker (WAM),0.8566131,Add workaround for Windows Broker (WAM) running as admin (#344),Use the correct path separator in the macOS build YAML for notarizing the installer pkg file and containing binaries.,1
1243,deb: remove unnecessary symlinks from deb package,0.52724767,Include UI helpers in Debian package for Linux release; move GCM symlink to /usr/local/bin (#405),Prepare release,0
1244,Merge pull request #354 from mjcheetham/ghes-oauth,0.5353816,GHES OAuth support (#354),,0
1245,Merge pull request #282 from mjcheetham/docupdate,0.42671233,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)",Notarize and staple the installer pkg on macOS,0
1246,msauth: rename resource to scopes and drop remote URI,0.45132482,"Update MSAL; set MS auth embedded window title (#239, #512)",Enable installation and executable on macOS Catalina (10.15) now that Gate Keeper requires notarization. We staple the notarization ticket to the package too to allow for offline installs.,0
1247,workflows: target *-latest runner images,0.4763356,Speed up build graph (#924),Enable copy/paste/cut in macOS MSAuth web view,0
1248,Merge pull request #83 from mjcheetham/fix-copypaste,0.42111433,"Fix winget publishing (#332, #338)","The VSTest task now fails if no assemblies match the test filter. Since we don't have any Windows-only test assemblies currently, we can just continue on error for this task.",0
1249,Updates for testing,0.65554136,Reduce warnings from tests (#337),"Add a basic application main menu bar, with 'Edit' submenu containing the standard text manipulation commands (cut, copy, paste, select all, delete) to enable these actions in the authentication webview. This is useful for users who use password managers and need to paste into the webview.",0
1250,Merge pull request #30 from mjcheetham/native-tty,0.41011947,@WormJim ,[Port] Fix real-sign Windows build to actually sign,0
1251,credential-cache requires EOF on stdin,0.52959853,Access Azure storage account using service principle credentials (#851),Ensure the Signing MicroBuild plugin has been installed when doing a real-signed Windows build.,0
1252,Basic support for generating code coverage reports,0.5962515,"- Codebase and build improvements (#29, #33)",Fix real-sign Windows build to actually sign,0
1253,Issue #218 Return any stored credentials before attempting to refresh anything.,0.63279086,Stopped serializing/writing credentials that already exist (#739),Ensure the Signing MicroBuild plugin has been installed when doing a real-signed Windows build.,0
1254,registry: remove autodetection progress/info message,0.68879867,"Remove noisy messages during auto-detection (#492, #494)","Prepare release with proxy support, Windows preview, inproc MS Auth",0
1255,environment: manually scan $PATH on POSIX systems,0.8483105,Updated to manually scanning $PATH instead of using which on POSIX systems (#717),Move Microsoft authentication in-proc,1
1256,Swap order to match GitLab UI,0.5706488,- GitHub,,0
1257,bring readme in line with GitHub requirements,0.6032555,Improved usability for GitHub auth (#587),Now that we've moved the Microsoft authentication helper in-process we no longer have a need to force all entry executables to be the same bit-width. The GitHub authentication helper is still .NET Framework (as we're targeting .NET Core 2.x still) and using 32-bit WinForms. However that helper does not make use of the LibGit2 native bits (by virtue of not instantiating the CommandContext type).,0
1258,Add issue templates for GitHub,0.6865539,Convert issue templates to YAML (https://github.com/GitCredentialManager/git-credential-manager/commit/24ae90a4bd18fec6edcc860281ff82f715588e44),Move Microsoft authentication in-process when no external helper application is present. This simplifies the scenario on .NET Framework (Windows) where MSAL supports WinForms-based UI.,0
1259,"Rename entry executable to drop ""-core"" suffix (#551)",0.8037603,Drop -core suffix from entry executable #551 ,,1
1260,Clean up entire payload dir on build and publish deb and tar files.,0.44926584,Fix computation of installation path on Linux/single-file publish (#310),New Install 6/6: Implement (un)configuration for GCM Core,0
1261,release: sign Linux tarball and .NET tool (#985),0.9273261,Sign Linux tarball and .NET tool #985 ,,1
1262,Merge pull request #78 from microsoft/master,0.49693614,Add workaround for Windows Broker (WAM) running as admin (#344),"In order to ensure maximum compatibilty on Windows, we target 32-bit platforms (64-bit Windows can run 32-bit applications in WoW). Also fix a bug where we had mismatching/incompatible use of the native libgit2 binaries by the main GCM executable, and the .NET Framework-only WinForms 'authentication helpers' such as the Microsoft.Authentication.Helper project. These WinForms projects prefer 32-bit and failed to load the libgit2 binaries, which were restored as their 64-bit forms by the main CLI project.",0
1263,Merge pull request #436 from mjcheetham/termios,0.43139672,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)",Add the required configuration/unconfiguration to the Azure Repos host provider. The required config is to set useHttpPath to true for dev.azure.com hosts.,0
1264,apppath: introduce ICommandContext.InstallationDirectory,0.46368325,Fix various problems with install path and app path variables #968,"Add main application configuration component, which will ensure the exectuable is on the PATH (on Windows) and configure itself and Git's credential helper in the user's config.",0
1265,github-ui: use new GitHub UI on Windows,0.7518706,"Add GitHub OAuth support and refreshed Windows UI (#101, #103)",Pass the executable path from the main CLI project program into the Application object and HelpCommands. This path is also required for the future commit that uses the path to set up Git and the PATH correctly.,1
1266,docs: udpate comment on supported distros,0.48535118,- Support AAD users as guest users in MSA-based Azure DevOps organizations (#32),New Install 5/6: Add IConfigurationService and (un)configure commands,0
1267,wpf: readd WPF UI/threading helpers,0.6010711,WPF-based GitHub auth UI (#40),"Add service that can configure and unconfigure components at the user or system level, and two commands that map to configure and unconfigure. Call these new commands from the Windows and Mac (un)installers. Update the help command output to include the new commands.",0
1268,Merge pull request #438 from microsoft/hubbify,0.50911367,"Fix a bug with using Microsoft Accounts with Azure Repos (#143, #148)",Replace old SHA1 signing certificates with SHA256 ones,0
1269,linux-credstore: extract credstore option constants,0.4003806,Sign Linux tarball and .NET tool #985 ,Per policy we should stop using SHA1 certificates for signing binaries and installers. The replacement for the 'Microsoft' Authenticode certificate is 'Microsoft400'.,0
1270,gitlab: ensure correct sln config on Win/Mac/Linux,0.58136266,Ensure correct installation directory resolution for all OSes and distribution methods (https://github.com/GitCredentialManager/git-credential-manager/pull/951),New Install 4/6: Extend IGitConfiguration to allow manipulating multivars,0
1271,Merge pull request #479 from nimatt/patch-1,0.4587109,Fix WSL configuration instructions (#479),Extend the IGitConfiguration to allow manipulation of Git configuration 'multivars' (config entries that can have multiple values). This will be used in future commits to set the credential.helper variable to have two values.,0
1272,Merge pull request #88 from mjcheetham/release-prep,0.41514653,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)",New Install 3/6: Introduce IEnvironment to replace IEnvironmentVariables,0
1273,Apply suggestions from code review,0.68209136,"- Codebase and build improvements (#29, #33)",Replace the simple IEnvironmentVariables envar wrapper with a component that includes the envars and other methods for manipulating the $PATH. This will be useful in future commits where we need to inspect and update the $PATH for postinstall and preuninstall. Also expose the new IEnvironment and existing IGit components on the command context in prep. Add a new path comparison method to IFileSystem and introduce platform-specific implementations.,0
1274,Issue 573 Refactor Bitbucket implementation to allow for the support of Bitbucket DC's OAuth2 implementation,0.8747212,Bitbucket DC OAuth support (#607),New Install 2/6: Rename main executable to GCM Core to make SxS easier,1
1275,Merge pull request #518 from mminns/issue/218,0.45606977,@mminns ,"Rename the main executable to include ""-core"" to make side-by-side installs of GCM Core and Windows-only GCM easier. We can just change the configuration between ""manager"" and ""manager-core"".",0
1276,build(deps): bump actions/setup-dotnet from 3.0.1 to 3.0.2,0.5576275,Replace netstandard2.0 with dotnet6.0 (https://github.com/GitCredentialManager/git-credential-manager/commit/65cead2b5caa443fde1f9b86d02ab377a80a279c),New Install 1/6: Optimise the use of Git configuration from the Settings component,0
1277,Only remove Payloud as Payload.Linux is built by the parent cs proj and we need that output.,0.5298893,Fix computation of installation path on Linux/single-file publish (#310),Implement the dispose pattern correctly for all IDisposable objects by introducing a common abstract DisposableObject class which 'does the correct thing'.,0
1278,Removing hard-coded values,0.4419102,Drop -core suffix from entry executable #551 ,Keep hold of a single IGitConfiguration object when creating an instance of the Settings component. When querying for scoped settings now we enumerate all configuration entries and store all those that have the same section and property name locally up-front. This prevents us from calling TryGetValue on the configuration object multiple times. Add tracing to the libgit2 calls.,0
1279,Bumping version of update-winget action,0.6493672,More winget publishing fixes (#353),Install: fix postinstall script on osx,0
1280,More PR feedback: better xplat debug wait; test provider w/ path,0.5024717,Validate installers before publishing (#813),"The macOS install encounteres the following error when running the postinstall script: ./postinstall: /tmp/PKInstallSandbox.qGkbqk/Scripts/com.microsoft.GitCredentialManager.kjGWk5/postinstall: line 21: [: missing `]'  This resulted in the credential helper not being correctly configured. The problem is with the test on the indicated line - the '[ ]' test does not support '&&' statements inside the test expression, as it splits the expression into separate commands.",0
1281,genericprovider: update the generic provider for new APIs,0.75361216,Updated generic provider to support all protocols (#712),Quote bash variables in installation scripts,1
1282,add '- name' for steps,0.30950004,Drop -core suffix from entry executable #551 ,,0
1283,Merge pull request #798 from ldennington/homebrew-publish-m1-package,0.49329543,"Fix winget publishing (#332, #338)",Use Git's HTTP proxy configuration,0
1284,Fixing id,0.533621,Fix a bug where Windows Integrated Authentication would be disabled by default (#194),"Use the Git HTTP proxy configuration to create new configured HttpClient instances with proxy support. Add new documentation for the network and HTTP configuration options in GCM, such as proxy and TLS verification.",0
1285,bitbucket: add Bitbucket authentication provider,0.7028196,Updated Bitbucket credential UI to show the URL of the Bitbucket Server or Data Center instance if applicable (#713),"Extract the StdIn, StdOut, and StdErr properties from the bloated ICommandContext component into their own IStandardStreams component. This allows for a more granular dependency web between all the GCM components (no need to pass the entire ICommandContext just to write a message to standard error, for example`). This new abstraction model is used initially by the IHttpClientFactory which does not take in the entire context but just the other components that it needs. Existing callsites have been updated.",1
1286,Add OAuth support to generic host provider (#1062),0.8267971,Generic OAuth support via config 🎉 #1062,Add ability to override host provider from configuration,1
1287,.NET tool: split packaging script,0.48049426,Move to .NET Framework 4.7.2 on Windows (#283),"Check the Git configuration for a specified host provider for the current repository remote URI. We look for the credential.authority configuration entry (and any URL scoped variants) for backwards compatibility with older GCMs, as well as the new credential.provider entry. Also introduce a new setting credential.allowWindowsAuth to allow users who used the basic authority to disable WIA detection of the new generic provider.",0
1288,oauth: add unit tests for OAuth2Client,0.6439432,Generic OAuth support via config 🎉 #1062,,0
1289,Introduce DisposableObject base class to impl the dispose pattern,0.4158247,"- Codebase and build improvements (#29, #33)",Introduce ISettings component to consolidate envar and Git cfg settings,0
1290,Merge pull request #94 from mjcheetham/debug-trace,0.50112104,Automatically trace to the debugger when attached (#94),Introduce a new component ISettings that provides an interface for looking up the value of various GCM settings that can be specified from either the environment or Git configuration.,0
1291,Add Microsoft Authentication helper for Windows,0.74847806,Add support for the Windows authentication broker - Windows Hello support (default off) (#323),Move IHttpClientFactory toICommandContext`,1
1292,Tweak StoreCmd tracing; test for null args in CanExec.,0.42607293,Autodetect Bitbucket DC instances (#373),Move the IHttpClientFactory to the ICommandContext and simplify the instantiation points for the various *RestApi types.,0
1293,msauth: tell MSAL about any parent window handles,0.8400237,Pass parent window handle information to MSAL (#306),Add ability to read Git config via libgit2,1
1294,Merge GitHub-side fixes into vtbassmatt-fixes,0.58377534,- GitHub,Use libgit2 to read Git configuration files and call other helpful methods such as locating config files and root repository directories. LibGit2Sharp was not used as we only need a minimal subset of the APIs. P/Invoke wrapping the native libgit2 C functions was created instead.,0
1295,cmd: use System.CommandLine to parse cmdline args,0.580945,Use System.CommandLine to handle our command line parsing and allow host providers to offer custom commands (#273),Cache environment variables dictionary,0
1296,bitbucket: drop unnecessary async keyword from method,0.500085,Updated Bitbucket credential UI to show the URL of the Bitbucket Server or Data Center instance if applicable (#713),Cache the environment variables in a dictionary after first use and don't always reconstruct it per access.,0
1297,Merged PR 585167: [Security] Enumerate the PATH environment variable to locate programs on Windows,0.5531701,"Fix problems with resolving the executable file path on Linux (#298, #229, #252)",Move to using MSAL.NET on Windows,0
1298,Ensure macOS build does pod repo update,0.6693573,Update to Git Credential Manager Core (beta) on macOS.,Use MSAL.NET on Windows and update the Visual Studio token cache snooping to use the new 'extensions' library for MSAL to interact with the Visual Studio MSAL cache file.,0
1299,Add UI testing instructions to CONTRIBUTING,0.5350833,Correctly detect a UI interactive session on all platforms (#95),Merge master to release,0
1300,wia: fix bug where Allow WIA setting default wrong,0.58810985,Fix WSL configuration instructions (#479),Clarify Linux strategy in readme,0
1301,msauth: default to NOT use WAM/broker,0.65997076,Add workaround for Windows Broker (WAM) running as admin (#344),,0
1302,Merge pull request #895 from wolf99/document-doc-linting,0.46063274,Unify documentation line length (#862),Refactor to allow HostProviders to override store and erase,0
1303,Ensure all app resources are disposed on exit,0.3878649,Access Azure storage account using service principle credentials (#851),,0
1304,Merge pull request #10 from mjcheetham/azure-repos-provider,0.4439798,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)",Refactor the core commands and host provider types to permit providers to customise how they store and erase credentials. This would allow for providers that do not want to use the OS credential store for example.,0
1305,"a small ""how to use"" tweak",0.4591639,- Various bug fixes and improvements,Add Windows payload and installer projects,0
1306,Add explanatory comment.,0.3528868,@4brunu,Add two projects for building (and signing) the Windows payload and installer (using Inno setup).,0
1307,username is the account,0.61042506,Add generic username/password UI (#871),Unlink the Java GCM from Homebrew if installed,0
1308,build(deps): bump actions/download-artifact from 2 to 3,0.4807827,Speed up build graph (#924),,0
1309,basic: respect new GUI prompt enabled setting,0.6357229,Add native basic credential UI prompts for Windows (#92),"Since #40 is complete, we now have UI for GitHub on Windows.. updating the markdown current status table. Also minor formatting change to the table, we now centre the tick columns.",0
1310,msauth: always set the parent window for MSAL,0.72571707,Pass parent window handle information to MSAL (#306),Add GitHub helper on Windows using WPF on netfx,1
1311,Merge pull request #279 from mjcheetham/azr-msal-override,0.38928336,@mminns ,Add a Windows authentication helper for GitHub using WPF on .NET Framework 4.6.1.,0
1312,fixup! Web browser and PAT support for GitLab.,0.7239708,Improved usability for GitHub auth (#587),"Merge master to release including #29, #30, #32, #33, #34, #35",1
1313,docs: standardize gitlab documentation (#1023),0.57971203,Use native Git path interpolation for config values (#439),,0
1314,.net tool: clarify install instructions (#1126),0.6636709,Fix release builds .NET SDK version (#358),Produce and collect symbols on build,0
1315,Initial commit,0.3043089,Stopped serializing/writing credentials that already exist (#739),,0
1316,Add Debug.Assert messages; rename helper methods,0.5459088,Add new diagnose command to help debug problems in the wild (#463),Add and update documentation files,0
1317,supported platforms,0.51307535,"Enables support for multiple users for GitHub, Bitbucket, and Azure Repos (when using the *.visualstudio.com URLs) (#160)","Add more information about that aims and state of the project to the main README.md file, as well as some basic documentation under the new docs/ directory.",0
1318,Default installation path for GCM core has changed,0.73902154,"Set the full path to standalone GCM Core installs, enabling overriding of bundled versions (#188, #199)",Implement a native TTY interface for POSIX and Windows platforms and fix GitHub TTY prompts,1
1319,Assume GitHub Enterprise instances with a null version number support OAuth (#1154),0.66706747,Add preliminary support for OAuth with GitHub AE (requires server support/changes) (#343),Change the GitHub authentication/prompt interface to be async Task based rather than the existing TryGet pattern. These methods could throw exceptions (which would indicate failure).,0
1320,build(deps): bump mjcheetham/update-homebrew from 1.2 to 1.3 (#1142),0.582709,Discontinued incorrect use of Homebrew Git shim (#731),"Use the Kernel32 console APIs to directly read/write from the CONIN$ and CONOUT$ devices (the attached console, if available). Most of this code was ported from the GCM Windows project.",0
1321,signing: fix signing,0.3940522,@4brunu,Replace the Console.Read/Write interface for terminal prompts with a system-native implementation that uses /dev/tty directly. This allows us to read and write to the terminal even when our stdin/out/err streams have been redirected by parent processes. We can also now exercise control over the TTY echo which is useful for hiding user input of passwords and other secrets.,0
1322,bitbucket: add stub WPF-based UI helper for Bitbucket,0.6510861,Introduce the Bitbucket host provider with Windows GUI (#37),"Add a new custom exception type InteropException that wraps up failures from interop (P/Invoke) code. Win32Exceptions, macOS and POSIX error codes are now wrapped in InteropException.",0
1323,xui: add shared Avalonia UI class library,0.5388668,UI on macOS and Linux thanks to AvaloniaUI 🎉 (#336),Add issue templates for GitHub,0
1324,breadcrumbs to wsl doc,0.43372768,Fix WSL configuration instructions (#479),,0
1325,Merge pull request #893 from wolf99/update-rfc-links,0.47845575,@wolf99 ,Move all interop code under Interop namespace,0
1326,docs: use new Git for Windows installer screenshot,0.5591038,- Renamed the main executable from git-credential-manager to git-credential-manager-core to allow for easier side-by-side use with Java GCM and Windows GCM during the preview (#70),Move all the platform specific interop code to the Interop namespace and also group the P/Invoke calls into classes representing the modules/libraries/headers the original C functions live in.,0
1327,trace2: add string extension for snake casing,0.3727537,Initial TRACE2 tracing events #1045,Support AAD in MSA,0
1328,Merge pull request #202 from mjcheetham/osxinstall-fixwording,0.49201646,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)", use common endpoint for MSA accounts,0
1329,remove metadata,0.43052518,"Remove noisy messages during auto-detection (#492, #494)",Fix macOS installer package file signing,0
1330,Merge pull request #91 from mjcheetham/nointeractive,0.4612493,Add option to prevent interactivity (#91),Manually zip the unsigned package file before sending it off for signing as there appears to be a problem with the signing task's logic for doing this itself.,0
1331,"link, spacing",0.4322493,Update documentation to use reference-style links (#680),,0
1332,Issue #218 Address PR comments with minor updates,0.5179142,More winget publishing fixes (#353),"Refactor repo layout, simplify build and use NB.GitVersioning, add release build YAML",0
1333,gitlab: remove unused using statements,0.58394694,Fix reading empty Git configuration entry values (#215),"Change the repository layout to group all the source and test files under the src/ directory, then split by platform (windows, osx, and shared) at the next level. Redirect the build output for all the projects to the top-level out/ directory. This means it's easier to do the path-math for signing and building the installers. Use Nerdbank.GitVersioning to provide a unified Semantic Version model for all of our assemblies and installers. Integrate the Mac-native MSAuth helper Xcode workspace into the main .NET build by chaining the build into the main CLI .NET project so that MSBuild shells out to xcodebuild. Also create a wrapper .NET project for the Mac installer script with a two step process: 'layout.sh' for making the installer payload layout, and 'pack.sh' for constructing the pkg file. Building the MSBuild project will call both layout and pack to produce an unsigned pkg file for development purposes. The signed release build can call 'layout.sh' and 'pack.sh' separately (and do signing of binaries in between).",0
1334,azdev: use the localhost redirect URI for VS's client ID,0.5002451,"Allow hostname-specific proxy override to use no proxy (#442, #449)",Only erase credentials that match the username/password if specified,0
1335,docs: use short link for Linux install src,0.52670014,Fix computation of installation path on Linux/single-file publish (#310),Fix the MSAuthHelper on macOS to trace ADAL logs and return correct exit codes,0
1336,windows: generate app manifests for all exe projects,0.47398534,Add workaround for Windows Broker (WAM) running as admin (#344),Fix a few problems with tracing secrets and missing vital error codes,0
1337,trace2: update span handling,0.6091754,Initial TRACE2 tracing events #1045,Enable the Microsoft Authentication helper on macOS to include ADAL logging information in the trace output when GCM_TRACE_MSAUTH is set. Also respects PII or sensitive information tracing setting GCM_TRACE_SECRETS. Upgrade to ADAL 4.0.0 which has now fixed the problem of being noisy and writing to NSLog/stderr. Update the AHLogger trace format output to be consistent with that of the main GCM application and Git's own output. Correctly return a non-zero exit code and error message on failure.,0
1338,Merge pull request #547 from GitCredentialManager/vtbassmatt-fixes,0.5381721,Fix bug in Git config matching due due case sensitivity (#234),Ensure we are reporting the actual Win32Exception error message when a failure to access the Windows credential store occurs. Also print all inner exceptions and any codes for Win32Exceptions.,0
1339,Merge pull request #306 from mjcheetham/msal-window-parent,0.5547692,Pass parent window handle information to MSAL (#306),Ensure macOS build does pod repo update,0
1340,osx: include new Avalonia helpers on macOS,0.71957177,Notarize the macOS installer and binaries to permit running on macOS Catalina 10.15 (#84),,1
1341,Merge pull request #402 from garvit-joshi/main,0.4733905,@garvit-joshi ,,0
1342,Ensure certificate validation works on Mac/Linux (#954),0.5653608,Validate installers before publishing (#813),"Only erase stored credentials when the user name and password values match those passed on standard input, if any. When no user name and/or password are given on standard input we skip checking the stored value and just erase the credential. This is an important but possibly subtle behaviour to help prevent erroneous erasure of credentials. Calls to git-credential fill should immediately be followed by git-credential approve or reject. If there are concurrent processes that have called fill but not yet approve or reject, there's a gap when another (faster) process could have completed the fill+approve combination and have stored a different credential value than what the first process got from fill. If the first process fails and calls reject the valid credential as approve-ed by the second process would be deleted. This change helps prevent such a scenario (although there is still a small gap inside the GCM erase command itself between reading the OS's credential store and deleting from it - we could look at some system-wide lock around the credential store if this is deemed a problem later).",0
1343,libgit2: fix error message handling,0.8924074,Fix a bug with handling libgit2 errors (#111),Add Microsoft Authentication helper for macOS,1
1344,Start ci actions yaml,0.37961608,Add option to prevent interactivity (#91),Update the Azure Pipelines YAML for macOS to build the Microsoft Authentication helper using Xcode and also build & publish the installer package.,0
1345,Merge pull request #55 from mjcheetham/envar-refactor,0.37675664,"Fix bug with enumerating Azure Repos bindings outside of a repository (#416, #417)",Add a simple flat-package installer with postinstall script to configure the user's system gitconfig.,0
1346,docs: fix WSL instruction quotes,0.5959649,Fix WSL configuration instructions (#479),"Add the initial version of the Mac Microsoft Authentication Helper using ADAL 2.5.1 via CocoaPods. The pods are statically linked so only a single executable ""Microsoft.Authentication.Helper"" is required to be distributed with GCM. ADAL 2.5.1 was chosen because later ADAL versions include a bug where errors were being written to standard error: https://github.com/AzureAD/azure-activedirectory-library-for-objc/issues/1362",0
1347,Switch to ref style links,0.5773537,Update documentation to use reference-style links (#680),Add Microsoft Authentication helper for Windows,0
1348,Merge pull request #146: FAQ: typo fix,0.42807984,"Fix winget publishing (#332, #338)","Enable building the class libraries and head CLI project against .NET Framework 4.6.1 when compiling on Windows. This enables the Windows-only authentication helpers (which build against the Microsoft.Git.CredentialManager.dll library) to avoid pulling in the .NET Standard type-forwarding libraries, which not only allows us to deploy the helpers and the main GCM executable in to the same directory without conflicting type-fwd libraries, but also greatly reduces the number of assemblies required to ship on Windows.",0
1349,Merge pull request #699 from Bene81/gitlab-hostname-only,0.5665375,Git Host Providers:,Add an authentication helper for AAD/MSA auth that runs on Windows. ADAL.NET is used to obtain an access token based on input fed over stdin by Git Credential Manager. The access token is returned back to GCM over stdout on success. Common application start-up code has been refactored into the ApplicationBase abstract class. This ensures consistent tracing and debug support using the GCM_TRACE & GCM_TRACE_SECRETS and GCM_DEBUG environment variables.,0
1350,release: remove automatic workflow trigger (#943),0.63597167,Auto-generate maintainer away notification issues (#842),Add GitHub host provider (with basic TTY credential prompts),0
1351,Merge pull request #513 from microsoft/docs-g4w,0.46905005,Add ability to read GCM default settings from the Windows Registry (#404),The required web calls and call flow/patterns are based on the original Git Credential Manager GitHub code. The support for GitHub authentication is by a basic TTY credential prompt (also supporting 2FA). In the future a credential helper which can show GUI to capture the user/pass/auth-code can be added in a similar manner to the Microsoft Authentication Helper.,0
1352,rough in changes to talk to credential cache,0.5073505,Fix NTLM proxy authentication (#216),Enable building Mac/Windows specific solution projects,0
1353,plaintextstore: do not write creds if nothing has changed,0.42762017,Enable copy/paste/cut etc on fields in the Microsoft authentication WebView on MacOS (#82),"Rearrange the directory structure of the repository to make it easier to selectively build platform-specific code. The common/ directory contains any code that can be built and run on all platforms. The windows/ (and mac/, linux/, etc as needed) directory contains code that can only be built and/or run on Windows. Change the main .NET solution to be built for either Windows or Mac - building only those projects which are required for Windows/Mac. This is done via solution configurations, of which there are now four:  Debug Release WindowsDebug WindowsRelease  The Windows* configurations will build all the common class libraries (netstandard2.0), the Windows helpers (net461) and the CLI head project (netcoreapp2.1). The Debug/Release configurations will build only the common libraries (netstandard2.0) and the CLI head project (netcoreapp2.1). This is suitable for building on Mac & Linux (and Windows without the helpers).",0
1354,ci: drop ubuntu 16.04 from CI before GitHub drop,0.55500793,Avoid using the newer --show-scope Git config option - work with downlevel Git versions (#318),Don't double dispose HttpClients and ensure all objects are correctly disposed on exit,0
1355,registry: make GetProvider method async,0.41769925,Fix a bug to prevent setting credential.provider when it wasn't needed (Only set credential.provider for dynamic matches #535),Refactor the main Application class to be disposed on application exit. All components that have IDisposable object references have now been given a chance to dispose of them.,0
1356,dotnet: fix the .NET SDK used in release builds,0.77472514,Fix release builds .NET SDK version (#358),"Update the Azure Repos REST API class to only create one HttpClient instance, configure common headers, and reuse the same instance for all requests.",1
1357,Merge pull request #336 from mjcheetham/xui2,0.4229196,"Fix winget publishing (#332, #338)","Move back to creating a new HttpClient instance per request for few reasons:  The current code/pattern was broken - we were double disposing of    the singleton client instance. It makes setting headers slightly easier as the caller no longer    must create request message with the headers set manually - just    set the default headers on their exclusive client.  In practice we're not going to be running for a long time, and we're not going to be making many requests, which would otherwise drain all the available network ports. If the individual providers wish to obtain a new HttpClient instance and reuse it for all their web calls, they are free to do so.",0
1358,Merge pull request #89 from microsoft/fixrelease,0.545601,"Fix a bug with using Microsoft Accounts with Azure Repos (#143, #148)",Fix secret tracing to print correct masking characters,0
1359,build(deps): bump DavidAnson/markdownlint-cli2-action,0.50976706,Codebase and build improvements (#49),Fix the secret tracing facility to actually print the masking chararcters rather than a type name of the 'IEnumerable' or similar text.,0
1360,Merge pull request #293: Update link to .NET documentation,0.53587466,Move to .NET Framework 4.7.2 on Windows (#283),Add Azure Repos provider (not including MSA/AAD authentication helpers),0
1361,Merge pull request #263: Fix readme brew uninstall instructions,0.4934073,Mac installer will now unlink the Java GCM via Homebrew if installed (#45),Add a host provider for the Azure Repos Git host provider. Authentication with AAD or MSA is performed by calling out to a platform-specific 'helper' application which can show native GUI. These AAD/MSA auth platform helpers will be added at a later date.,0
1362,Cleaning up,0.32479352,- Various bug fixes and improvements,"Don't create a new HttpClient on each GetClient call; we run the risk of exhausting all available sockets because a socket is assigned per client instance, and the socket does not become free immediately after disposal of the client. In light of this change to use a singleton instance, don't set the default headers on that singleton client otherwise we will pollute the client setup for other callers. Instead we set the headers per request message that is sent. Tests have been updated to cover the above changes. Additional minor change: move the HTTP-y constants to a nested static class Constants.Http.* for better grouping.",0
1363,Putting branch in the right spot,0.30709222,Add new diagnose command to help debug problems in the wild (#463),Add a generic provider supporting basic and WIA,0
1364,Update docs/gitlab.md,0.5709032,Ensure git-credential-manager-core command is available after Debian package install (https://github.com/GitCredentialManager/git-credential-manager/pull/650),Broaden the scope of supported Windows Integrated Authentication (WIA) protocols that GCM will try and detect to also include 'Negotiate' (which could be either NTLM or Kerberos) as well as NTLM.,0
1365,github: fix bug in x-UI cmdline parsing,0.5896654,Fix bug in Git config matching due due case sensitivity (#234),Simplify the prompting API on ICommandContext to be explicit between the 'echoing' and 'non-echoing'/secret prompts. Also remove the not needed ability to specify the in/out streams. Update the IBasicAuthentication API to be transparent to the type of resource. Not all resources need to be valid URIs.,0
1366,homebrew: automatically update Homebrew Cask on release,0.5405351,Discontinued incorrect use of Homebrew Git shim (#731),Add a generic host provider that supports capturing credentials for both basic and NTLM protected resources.,0
1367,Merge pull request #343 from mjcheetham/ghae,0.45875704,GHES OAuth support (#354),,0
1368,Quote bash variables in installation scripts,0.3621615,Ensure the /usr/local/bin directory exists on install (#257),"Implement the get, erase and store commands",0
1369,Attempt using os matrix,0.4601866,- macOS,"Remove the IsCredentialStoredOnCreation extensibility point for host providers. Its purpose was largely to satisfy the AzureReposProvider's constraints, which we now believe is not required. If this turns out to be still required, we may consider re-adding it but only when the need arises.",0
1370,Merge pull request #743 from mminns/issue/722,0.4270892,@mminns ,,0
1371,Deleted outdated instruction for GitLab Support,0.6645173,Avoid using the newer --show-scope Git config option - work with downlevel Git versions (#318),Update the get command tests to be ignorant of the order in which the dictionary entries for username and password are output.,0
1372,build: explicitly pass version and conf args to pack-tool.sh,0.4120422,"Set the full path to standalone GCM Core installs, enabling overriding of bundled versions (#188, #199)",,0
1373,Merge pull request #621 from mjcheetham/gitlab-ui,0.48507383,Add support for using WSL Git configuration (#461),Add unit tests covering the new Get/Erase/StoreCommands and also update the HostProviderRegistryTests to take advantage of the newly added 'test' implementation objects that have been added; this makes the tests less verbose.,0
1374,Merge pull request #679 from mjcheetham/oauth-doc,0.45303938,Generic OAuth support via config 🎉 #1062,Implement the erase and store commands using the secure credential store APIs.,0
1375,docs: address architecture doc feedback,0.46283904,"Improve host provider auto-detection logic (#384, #481)",,0
1376,azrepos: add cmd to clear the authority cache,0.43397358,"Persist auto-detected provider setting (#507, #517)",Add license headers and update LICENSE file,0
1377,assembly: add assemblyutils,0.5166465,"Refactor namespace, assembly and project names (#500)","Per legal requirements:  Add license & copyright headers to every code file, Update the LICENSE file as given in an internal email: Add the product name, Update ordering of 'copyright' and 'MIT License' lines      to match order given in internal email.",0
1378,Introduce InteropException for all P/Invoke errors,0.3989666,Fix a bug where Windows interactive sessions were not detected correctly (#123),Add secure credential storage APIs for Windows+macOS,0
1379,Merge pull request #277 from mjcheetham/msal-api-harmony,0.40040672,@mminns ,"Update the error handling performed in both MacOSKeychain and WindowsCredentialManager to be clearer about which native return codes we consider to be 'OK', and ensure we're throwing exceptions for all other types of unknown errors.",0
