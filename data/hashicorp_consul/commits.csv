Index,Message,Description
1,resource: owner references must include a uid (#17169),
2,Update HCP bootstrapping to support existing clusters (#16916)," Persist HCP management token from server config  We want to move away from injecting an initial management token into Consul clusters linked to HCP. The reasoning is that by using a separate class of token we can have more flexibility in terms of allowing HCP's token to co-exist with the user's management token. Down the line we can also more easily adjust the permissions attached to HCP's token to limit it's scope. With these changes, the cloud management token is like the initial management token in that iit has the same global management policy and if it is created it effectively bootstraps the ACL system.  Update SDK and mock HCP server  The HCP management token will now be sent in a special field rather than as Consul's ""initial management"" token configuration. This commit also updates the mock HCP server to more accurately reflect the behavior of the CCM backend.  Refactor HCP bootstrapping logic and add tests  We want to allow users to link Consul clusters that already exist to HCP. Existing clusters need care when bootstrapped by HCP, since we do not want to do things like change ACL/TLS settings for a running cluster. Additional changes:   Deconstruct MaybeBootstrap so that it can be tested. The HCP Go SDK   requires HTTPS to fetch a token from the Auth URL, even if the backend   server is mocked. By pulling the hcp.Client creation out we can modify   its TLS configuration in tests while keeping the secure behavior in   production code.   Add light validation for data received/loaded.   Sanitize initial_management token from received config, since HCP will   only ever use the CloudConfig.MangementToken.   Add changelog entry "
3,APIGW: Update how status conditions for certificates are handled (#17115),"  Move status condition for invalid certifcate to reference the listener that is using the certificate   Fix where we set the condition status for listeners and certificate refs, added tests   Add changelog "
4,Merge pull request #5288 from hashicorp/NET-3648_fix (#17163),NET-3648: perform envoy version verification
5,Support Envoy's MaxEjectionPercent and BaseEjectionTime config entries for passive health checks (#15979),  Add MaxEjectionPercent to config entry   Add BaseEjectionTime to config entry   Add MaxEjectionPercent and BaseEjectionTime to protobufs   Add MaxEjectionPercent and BaseEjectionTime to api   Fix integration test breakage   Verify MaxEjectionPercent and BaseEjectionTime in integration test upstream confings   Website docs for MaxEjectionPercent and BaseEjection time   Add make docs to browse docs at http://localhost:3000   Changelog entry   so that is the difference between consul-docker and dev-docker   blah   update proto funcs   update proto    Co-authored-by: Maliz maliheh.monshizadeh@hashicorp.com
6,fixed aliases for sameness group (sameness_group) (#17161),
7,docs: fixup note about node scope for admin partitions (#17147),
8,TProxy integration test (#17103)," TProxy integration test Fix GHA compatibility integration test command  Previously, when test splitting allocated multiple test directories to a runner, the workflow ran go tests ""./test/dir1 ./test/dir2"" which results in a directory not found error. This fixes that."
9,[CC-4519] Include Consul NodeID in Envoy bootstrap metadata (#17139),"This is being added so that metrics sent to HCP can be augmented with the source node's ID. Opting not to add this to stats_tag out of caution, since it would increase the cardinality of metrics emitted by Envoy for all users. There is no functional impact to Envoy expected from this change."
10,proto-public: document resource service (#17119),
11,fix backward compat issue caused by localities being set to null when they are unset (#17144),
12,api: ensure empty locality field is not transmitted to Consul (#17137),
13,add acl filter logs (#17143),
14,add sameness intentions in api package (#17096),
15,Cleanup from unblocking the pipeline 🧹 (#17121),
16,testing: RunResourceService helper (#17068),
17,Fix or disable pipeline breaking changes that made it into main in last day or so (#17130),  Fix straggler from renaming Register->RegisterTypes   somehow a lint failure got through previously   Fix lint-consul-retry errors   adding in fix for success jobs getting skipped. (#17132)   Temporarily disable inmem backend conformance test to get green pipeline   Another test needs disabling    Co-authored-by: John Murret john.murret@hashicorp.com
18,Update single-dc-multi-k8s.mdx (#17126),
19,De-flake snapshot test (#17120),
20,Controller Supervision (#17016),
21,storage: fix bug where WatchList would (rarely) return duplicate events (#17067),
22,Fix broken link in changelog (#17093),Co-authored-by: David Yu dyu@hashicorp.com
23,Clarify OpenTelemetry support for tracing (#17082),
24,remove envoy endpoint flag from k8s docs (#17105),
25,ci: fix runner calculation to exclude the top level directory as part of the calculation (#17090),"  fix runner calculation to exclude the top level directory as part of the calculation   fix the logic for generating the directories/functions   De-scope tenenacy requirements to OSS only for now. (#17087)   Partition and namespace must be ""default"" Peername must be ""local""   Fix virtual services being included in intention topology as downstreams. (#17099)   Merge pull request #5200 from hashicorp/NET-3758 (#17102)   Merge pull request #5200 from hashicorp/NET-3758   NET-3758: connect: update supported envoy versions to 1.26.0   lint   CI: remove uneeded AWS creds from test-integrations (#17104)   Update test-integrations.yml   removing permission lies now that vault is not used in this job.    Co-authored-by: John Murret john.murret@hashicorp.com  update based on feedback   Co-authored-by: Semir Patel semir.patel@hashicorp.com Co-authored-by: Derek Menteer 105233703+hashi-derek@users.noreply.github.com Co-authored-by: Anita Akaeze anita.akaeze@hashicorp.com Co-authored-by: Dan Bond danbond@protonmail.com"
26,APIGW Normalize Status Conditions (#16994),"  normalize status conditions for gateways and routes   Added tests for checking condition status and panic conditions for validating combinations, added dummy code for fsm store   get rid of unneeded gateway condition generator struct   Remove unused file   run go mod tidy   Update tests, add conflicted gateway status   put back removed status for test   Fix linting violation, remove custom conflicted status   Update fsm commands oss   Fix incorrect combination of type/condition/status   cleaning up from PR review   Change ""invalidCertificate"" to be of accepted status   Move status condition enums into api package   Update gateways controller and generated code   Update conditions in fsm oss tests   run go mod tidy on consul-container module to fix linting   Fix type for gateway endpoint test   go mod tidy from changes to api   go mod tidy on troubleshoot   Fix route conflicted reason   fix route conflict reason rename   Fix text for gateway conflicted status   Add valid certificate ref condition setting   Revert change to resolved refs to be handled in future PR "
27,Add sameness group field to prepared queries (#17089), added method for converting SamenessGroupConfigEntry added new method ToQueryFailoverTargets for converting a SamenessGroupConfigEntry's members to a list of QueryFailoverTargets  renamed ToFailoverTargets ToServiceResolverFailoverTargets to distinguish it from ToQueryFailoverTargets   Added SamenessGroup to PreparedQuery  exposed Service.Partition to API when defining a prepared query added a method for determining if a QueryFailoverOptions is empty This will be useful for validation  added unit tests   added method for retrieving a SamenessGroup to state store   added logic for using PQ with SamenessGroup  added branching path for SamenessGroup handling in execute. It will be handled separate from the normal PQ case added a new interface so that the GetSamenessGroupFailoverTargets can be properly tested separated the execute logic into a targetSelector function so that it can be used for both failover and sameness group PQs split OSS only methods into new PQ OSS files  added validation that samenessGroup is an enterprise only feature   added documentation for PQ SamenessGroup 
28,CI: remove uneeded AWS creds from test-integrations (#17104),  Update test-integrations.yml   removing permission lies now that vault is not used in this job.    Co-authored-by: John Murret john.murret@hashicorp.com
29,Merge pull request #5200 from hashicorp/NET-3758 (#17102), Merge pull request #5200 from hashicorp/NET-3758  NET-3758: connect: update supported envoy versions to 1.26.0  lint
30,Fix virtual services being included in intention topology as downstreams. (#17099),
31,De-scope tenenacy requirements to OSS only for now. (#17087),"Partition and namespace must be ""default"" Peername must be ""local"""
32,Bump raft to 1.5.0 (#17081),  Bump raft to 1.5.0   Add CHANGELOG entry   Add CHANGELOG entry with right extension (thanks VSCode)   Add CHANGELOG entry with right extension (thanks VSCode)   Go mod tidy 
33,Include virtual services from discovery chain in intention topology (#16862),
34,Add manual virtual IP support to state store (#16815),
35,ci: fix test splits that have less test packages than runner count from hanging (#17080),"  use proper TOTAL_RUNNER setting when generating runner matrix.  if matrix size is smaller than total_runners, use the smaller number   try again   try again 2   try again 3   try again 4   try again 5   try scenario where number is less   reset   get rid of cat ""$GITHUB_OUTPUT""   Apply suggestions from code review   Co-authored-by: Dan Bond danbond@protonmail.com  removing push trigger that was added for debug   Co-authored-by: Dan Bond danbond@protonmail.com"
36,ci: fix test splits that have less test packages than runner count from hanging (#17080),"  use proper TOTAL_RUNNER setting when generating runner matrix.  if matrix size is smaller than total_runners, use the smaller number   try again   try again 2   try again 3   try again 4   try again 5   try scenario where number is less   reset   get rid of cat ""$GITHUB_OUTPUT""   Apply suggestions from code review   Co-authored-by: Dan Bond danbond@protonmail.com  removing push trigger that was added for debug   Co-authored-by: Dan Bond danbond@protonmail.com"
37,Fix a bug with disco chain config entry fetching (#17078),"Before this change, we were not fetching service resolvers (and therefore service defaults) configuration entries for services on members of sameness groups."
38,fix the linter (#17077),
39,NET-3648: Add script to get consul and envoy version (#17060),
40,Enforce operator:write acl on WriteStatus endpoint (#17019),
41,Add sameness groups to service intentions. (#17064),
42,fix broken links (#17032),  fix broken links   Apply suggestions from code review   Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com  Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com
43,Fix generated proto files (#17063),  [COMPLIANCE] Add Copyright and License Headers   generate proto    Co-authored-by: hashicorp-copywrite[bot] 110428419+hashicorp-copywrite[bot]@users.noreply.github.com
44,[COMPLIANCE] Add Copyright and License Headers (#16854),Co-authored-by: hashicorp-copywrite[bot] 110428419+hashicorp-copywrite[bot]@users.noreply.github.com Co-authored-by: Ronald roncodingenthusiast@users.noreply.github.com
45,remove worklogs upload (#17056),
46,[NET-3091] Update service intentions to support jwt provider references (#17037),"  [NET-3090] Add new JWT provider config entry   Add initial test cases   update validations for jwt-provider config entry fields   more validation   start improving tests   more tests   Normalize   Improve tests and move validate fns   usage test update   Add split between ent and oss for partitions   fix lint issues   Added retry backoff, fixed tests, removed unused defaults   take into account default partitions   use countTrue and add aliases   omit audiences if empty   fix failing tests   add omit-entry   Add JWT intentions   generate proto   fix deep copy issues   remove extra field   added some tests   more tests   add validation for creating existing jwt   fix nil issue   More tests, fix conflicts and improve memdb call   fix namespace   add aliases   consolidate errors, skip duplicate memdb calls   reworked iteration over config entries   logic improvements from review    Co-authored-by: Ronald Ekambi ronekambi@gmail.com"
47,[NET-3090] Add new JWT provider config entry (#17036),"  [NET-3090] Add new JWT provider config entry   Add initial test cases   update validations for jwt-provider config entry fields   more validation   start improving tests   more tests   Normalize   Improve tests and move validate fns   usage test update   Add split between ent and oss for partitions   fix lint issues   Added retry backoff, fixed tests, removed unused defaults   take into account default partitions   use countTrue and add aliases   omit audiences if empty   fix failing tests   add omit-entry   update copyright headers ids    Co-authored-by: Ronald Ekambi ronekambi@gmail.com Co-authored-by: Ronald roncodingenthusiast@users.noreply.github.com"
48,Permissive mTLS (#17035),"This implements permissive mTLS , which allows toggling services into ""permissive"" mTLS mode. Permissive mTLS mode allows incoming ""non Consul-mTLS"" traffic to be forward unmodified to the application.  Update service-defaults and proxy-defaults config entries with a MutualTLSMode field Update the mesh config entry with an AllowEnablingPermissiveMutualTLS field and implement the necessary validation. AllowEnablingPermissiveMutualTLS must be true to allow changing to MutualTLSMode=permissive, but this does not require that all proxy-defaults and service-defaults are currently in strict mode. Update xDS listener config to add a ""permissive filter chain"" when MutualTLSMode=permissive for a particular service. The permissive filter chain matches incoming traffic by the destination port. If the destination port matches the service port from the catalog, then no mTLS is required and the traffic sent is forwarded unmodified to the application."
49,"Revert ""cache: refactor agent cache fetching to prevent unnecessary f… (#16818) (#17046)","Revert ""cache: refactor agent cache fetching to prevent unnecessary fetches on error (#14956)"" Co-authored-by: Derek Menteer 105233703+hashi-derek@users.noreply.github.com"
50,Avoid decoding nil pointer in map walker (#17048),
51,ci: remove test-integrations CircleCI workflow (#16928),  remove all CircleCI files   remove references to CircleCI   remove more references to CircleCI   pin golangci-lint to v1.51.1 instead of v1.51 
52,ci: add test-integrations (#16915),  add test-integrations workflow   add test-integrations success job   update vault integration testing versions (#16949)   change parallelism to 4 forgotestsum.  use env.CONSUL_VERSION so we can see the version.   use env for repeated values   match test to circleci   fix envvar   fix envvar 2   fix envvar 3   fix envvar 4   fix envvar 5   make upgrade and compatibility tests match circleci   run go env to check environment   debug docker   Signed-off-by: Dan Bond danbond@protonmail.com  debug docker  Signed-off-by: Dan Bond danbond@protonmail.com  revert debug docker  Signed-off-by: Dan Bond danbond@protonmail.com   going back to command that worked 5 days ago for compatibility tests   Update Envoy versions to reflect changes in #16889   cd to test dir   try running ubuntu latest   update PR with latest changes that work in enterprise   yaml still sucks   test GH fix (localhost resolution)   change for testing   test splitting and ipv6 lookup for compatibility and upgrade tests   fix indention   consul as image name   remove the on push   add gotestsum back in   removing the use of the gotestsum download action   yaml sucks today just like yesterday   fixing nomad tests   worked out the kinks on enterprise    Signed-off-by: Dan Bond danbond@protonmail.com Co-authored-by: John Eikenberry jae@zhar.net Co-authored-by: Dan Bond danbond@protonmail.com Co-authored-by: Nathan Coleman nathan.coleman@hashicorp.com Co-authored-by: Sarah sthompson@hashicorp.com
53,Don't send updates twice (#16999),
54,Bump the golang.org/x/net to 0.7.0 to address CVE-2022-41723 (#16754), Bump the golang.org/x/net to 0.7.0 to address CVE-2022-41723  https://nvd.nist.gov/vuln/detail/CVE-2022-41723  Add changelog entry   Co-authored-by: Nathan Coleman nathan.coleman@hashicorp.com
55,api: enable query options on agent force-leave endpoint (#15987),
56,feat: set up reporting agent (#16991),
57,add ability to start container tests in debug mode and attach a debugger (#16887),  add ability to start container tests in debug mode and attach a debugger to consul while running it.   add a debug message with the debug port   use pod to get the right port   fix image used in basic test   add more data to identify which container to debug.   fix comment   Co-authored-by: Evan Culver eculver@users.noreply.github.com  rename debugUri to debugURI   Co-authored-by: Evan Culver eculver@users.noreply.github.com
58,server: wire up in-process Resource Service (#16978),
59,docs: update docs related to GH-16779 (#17020),
60,"Tenancy wildcard validaton for Write, Read, and Delete endpoints (#17004)",
61,added an intro statement for the SI conf entry confiration model (#17017),  added an intro statement for the SI conf entry confiration model   caught a few more typos 
62,fixed bad link (#17009),
63,Add PrioritizeByLocality to config entries. (#17007),"This commit adds the PrioritizeByLocality field to both proxy-config and service-resolver config entries for locality-aware routing. The field is currently intended for enterprise only, and will be used to enable prioritization of service-mesh connections to services based on geographical region / zone."
64,added missing error message content to troubleshooting (#17005),
65,, added Sameness Group to proto files (#16998)   added Sameness Group to config entries   added Sameness Group to subscriptions   generated proto files   added Sameness Group events to the state store   added test cases   Refactored health RPC Client   moved code that is common to rpcclient under rpcclient common.go. This will help set us up to support future RPC clients   Refactored proxycfg glue views   Moved views to rpcclient config entry. This will allow us to reuse this code for a config entry client   added config entry RPC Client   Copied most of the testing code from rpcclient/health   hooked up new rpcclient in agent   fixed documentation and comments for clarity 
66,add IP rate limiting config update (#16997),  add IP rate limiting config update   fix review comments 
67,Enforce Owner rules in Write endpoint (#16983),
68,Fix delete when uid not provided (#16996),
69,move enterprise test cases out of open source (#16985),
70,"upgrade test: config nodeName, nodeid, and inherited persistent data for consul container (#16931)",
71,Add mutate hook to Write endpoint (#16958),
72,Update list of Envoy versions (#16889),  Update list of Envoy versions   Update docs + CI + tests   Add changelog entry   Add newly-released Envoy versions 1.23.8 and 1.24.6   Add newly-released Envoy version 1.22.11 
73,Enforce ACLs on resource Write and Delete endpoints (#16956),
74,circleci: remove frontend jobs (#16906), circleci: remove fronted jobs  Signed-off-by: Dan Bond danbond@protonmail.com  remove frontend-cache  Signed-off-by: Dan Bond danbond@protonmail.com  Signed-off-by: Dan Bond danbond@protonmail.com
75,add sameness to exported services structs in the api package (#16984),
76,Memdb Txn Commit race condition fix (#16871),  Add a test to reproduce the race condition   Fix race condition by publishing the event after the commit and adding a lock to prevent out of order events.   split publish to generate the list of events before committing the transaction.   add changelog   remove extra func   Apply suggestions from code review   Co-authored-by: Dan Upton daniel@floppy.co  add comment to explain test   Co-authored-by: Dan Upton daniel@floppy.co
77,ci: split frontend ember jobs (#16973),Signed-off-by: Dan Bond danbond@protonmail.com
78,Added backport labels to PR template checklist (#16966),
79,feat: add reporting config with reload (#16890),
80,ci: remove build-distros from CircleCI (#16941),
81,Remove global.name requirement for APs (#16964),This is not a requirement when using APs because each AP has its own auth method so it's okay if the names overlap.
82,resource: WriteStatus endpoint (#16886),
83,Update docs for service-defaults overrides. (#16960),Update docs for service-defaults overrides. Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
84,Fix the indentation of the copyAnnotations example (#16873),
85,Remove deprecated service-defaults upstream behavior. (#16957),"Prior to this change, peer services would be targeted by service-default overrides as long as the new peer field was not found in the config entry. This commit removes that deprecated backwards-compatibility behavior. Now it is necessary to specify the peer field in order for upstream overrides to apply to a peer upstream."
86,Resource validation hook for Write endpoint (#16950),
87,"Check acls on resource Read, List, and WatchList (#16842)",
88,ci: build-artifacts - fix platform missing in manifest error (#16940),  ci: build-artifacts - fix platform missing in manifest error   remove platform key 
89,ci: remove go-tests workflow from CircleCI (#16855),  remove go-tests workflow from CircleCI   add yaml anchor back 
90,ci: remove verify-ci from circleci (#16860),
91,APIGW: Routes with duplicate parents should be invalid (#16926),  ensure route parents are unique when creating an http route   Ensure tcp route parents are unique   Added unit tests 
92,ci: add GOTAGS to build-distros (#16934),
93,docs: fix typo in LocalRequestTimeoutMs (#16917),
94,Test: add noCleanup to TestServer stop (#16919),
95,docs: improve upgrade path guidance (#16925),
96,highlight the agent.tls cert metric with CA ones,Include server agent certificate with list of cert metrics that need monitoring.
97,log warning about certificate expiring sooner and with more details,"The old setting of 24 hours was not enough time to deal with an expiring certificates. This change ups it to 28 days OR 40% of the full cert duration, whichever is shorter. It also adds details to the log message to indicate which certificate it is logging about and a suggested action."
98,increase ENT runner size for xl to match OSS.  have guild-distros use xl to match CircleCI (#16920),
99,ci: Add success jobs. make go-test-enterprise conditional. build-distros and go-tests trigger on push to main and release branches (#16905),"  Add go-tests-success job and make go-test-enterprise conditional   fixing lint-32bit reference   fixing reference to -go-test-troubleshoot   add all jobs that fan out.   fixing success job to need set up   add echo to success job   adding success jobs to build-artifacts, build-distros, and frontend.   changing the name of the job in verify ci to be consistent with other workflows   enable go-tests, build-distros, and verify-ci to run on merge to main and release branches because they currently do not with just the pull_request trigger "
100,Fix API GW broken link (#16885),  Fix API GW broken link   Update website/content/docs/api-gateway/upgrades.mdx   Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com  Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
101,Wasm Envoy HTTP extension (#16877),
102,Resource Delete endpoint (#16756),
103,Resource Write endpoint (#16786),
104,temporarily disable macos-arm64 tests job in go-tests (#16898),
105,always test oss and conditionally test enterprise (#16827),
106,ci: fixes missing deps in frontend gha workflows (#16872),Signed-off-by: Dan Bond danbond@protonmail.com
107,Omit false positives from 404 checker (#16881),  Remove false positives from 404 checker   fix remaining 404s 
108,ad arm64 testing (#16876),
109,Raft storage backend (#16619),
110,ci: increase deep-copy and lint-enum jobs to use large runner as they hang in ENT (#16866),  docs: add envoy to the proxycfg diagram (#16834)   docs: add envoy to the proxycfg diagram   increase dee-copy job to use large runner.  disable lint-enums on ENT   set lint-enums to a large   remove redunant installation of deep-copy    Co-authored-by: cskh hui.kang@hashicorp.com
111,docs: add envoy to the proxycfg diagram (#16834), docs: add envoy to the proxycfg diagram
112,Fix broken doc in consul-k8s upgrade (#16852),Signed-off-by: dttung2905 ttdao.2015@accountancy.smu.edu.sg Co-authored-by: David Yu dyu@hashicorp.com
113,CA mesh CA expiration to it's own section,This is part of an effort to raise awareness that you need to monitor your mesh CA if coming from an external source as you'll need to manage the rotation.
114,Allow dialer to re-establish terminated peering (#16776),"Currently, if an acceptor peer deletes a peering the dialer's peering will eventually get to a ""terminated"" state. If the two clusters need to be re-peered the acceptor will re-generate the token but the dialer will encounter this error on the call to establish: ""failed to get addresses to dial peer: failed to refresh peer server addresses, will continue to use initial addresses: there is no active peering for ""<<>>"""" This is because in exchangeSecret().GetDialAddresses() we will get an error if fetching addresses for an inactive peering. The peering shows up as inactive at this point because of the existing terminated state. Rather than checking whether a peering is active we can instead check whether it was deleted. This way users do not need to delete terminated peerings in the dialing cluster before re-establishing them."
115,Fix typo on cli-flags.mdx (#16843),"Change ""segements"" to segments"
116,Update changelog with patch releases (#16856),  Update changelog with patch releases   Backport missed 1.0.4 patch release to changelog 
117,Connect CA Primary Provider refactor (#16749)," Rename Intermediate cert references to LeafSigningCert  Within the Consul CA subsystem, the term ""Intermediate"" is confusing because the meaning changes depending on provider and datacenter (primary vs secondary). For example, when using the Consul CA the ""ActiveIntermediate"" may return the root certificate in a primary datacenter. At a high level, we are interested in knowing which CA is responsible for signing leaf certs, regardless of its position in a certificate chain. This rename makes the intent clearer.   Move provider state check earlier   Remove calls to GenerateLeafSigningCert   GenerateLeafSigningCert (formerly known as GenerateIntermediate) is vestigial in non-Vault providers, as it simply returns the root certificate in primary datacenters. By folding Vault's intermediate cert logic into GenerateRoot we can encapsulate the intermediate cert handling within newCARoot.  Move GenerateLeafSigningCert out of PrimaryProvidder  Now that the Vault Provider calls GenerateLeafSigningCert within GenerateRoot, we can remove the method from all other providers that never used it in a meaningful way.   Add test for IntermediatePEM   Rename GenerateRoot to GenerateCAChain   ""Root"" was being overloaded in the Consul CA context, as different providers and configs resulted in a single root certificate or a chain originating from an external trusted CA. Since the Vault provider also generates intermediates, it seems more accurate to call this a CAChain."
118,add region field (#16825),  add region field   fix syntax error in test file   go fmt   go fmt   remove test 
119,[NET-3029] Migrate dev-* jobs to GHA (#16792), ci: add build-artifacts workflow  Signed-off-by: Dan Bond danbond@protonmail.com  makefile for gha dev-docker  Signed-off-by: Dan Bond danbond@protonmail.com  use docker actions instead of make  Signed-off-by: Dan Bond danbond@protonmail.com  Add context  Signed-off-by: Dan Bond danbond@protonmail.com  testing push  Signed-off-by: Dan Bond danbond@protonmail.com  set short sha  Signed-off-by: Dan Bond danbond@protonmail.com  upload to s3  Signed-off-by: Dan Bond danbond@protonmail.com  rm s3 upload  Signed-off-by: Dan Bond danbond@protonmail.com  use runner setup job  Signed-off-by: Dan Bond danbond@protonmail.com  on push  Signed-off-by: Dan Bond danbond@protonmail.com  testing  Signed-off-by: Dan Bond danbond@protonmail.com  on pr  Signed-off-by: Dan Bond danbond@protonmail.com  revert testing  Signed-off-by: Dan Bond danbond@protonmail.com  OSS/ENT logic  Signed-off-by: Dan Bond danbond@protonmail.com  add comments  Signed-off-by: Dan Bond danbond@protonmail.com  Update .github/workflows/build-artifacts.yml  Co-authored-by: John Murret john.murret@hashicorp.com  Signed-off-by: Dan Bond danbond@protonmail.com Co-authored-by: John Murret john.murret@hashicorp.com
120,Add default resolvers to disco chains based on the default sameness group (#16837),
121,Add sameness-group to exported-services config entries (#16836),"This PR adds the sameness-group field to exported-service config entries, which allows for services to be exported to multiple destination partitions / peers easily."
122,Remove UI brand-loader copyright headers as they do not render appropriately (#16835),
123,storage: fix resource leak in Watch (#16817),
124,updating command to reflect the additional package exclusions in CircleCI (#16829),
125,docs: raise awareness of GH-16779 (#16823),
126,port ENT upgrade tests flattening (#16824),
127,ci: changes resulting from running on consul-enterprise (#16816),  changes resulting from running on consul-enterprise   removing comment line 
128,add order by locality failover to Consul enterprise (#16791),
129,[COMPLIANCE] Add Copyright and License Headers (#16807),  [COMPLIANCE] Add Copyright and License Headers   fix headers for generated files   ignore dist folder    Co-authored-by: hashicorp-copywrite[bot] 110428419+hashicorp-copywrite[bot]@users.noreply.github.com Co-authored-by: Ronald Ekambi ronekambi@gmail.com Co-authored-by: Ronald roncodingenthusiast@users.noreply.github.com
130,port ENT ingress gateway upgrade tests [NET-2294] [NET-2296] (#16804),
131,docs: Updates to support HCP Consul cluster peering release (#16774),  New HCP Consul documentation section + links   Establish cluster peering usage cross-link   unrelated fix to backport to v1.15   nav correction + fixes   Tech specs fixes   specifications for headers   Tech specs fixes + alignments   sprawl edits   Tip -> note 
132,fix: export ReadWriteRatesConfig struct as it needs to referenced from consul-k8s (#16766),
133,Copyright headers for missing files/folders (#16708), copyright headers for agent folder
134,Github Actions Migration - move go-tests workflows to GHA (#16761),  go-tests workflow   add test splitting to go-tests   fix re-reun fails report path   fix re-reun fails report path another place   fixing tests for32bit and race   use script file to generate runners   fixing run path   add checkout   Apply suggestions from code review   Co-authored-by: Dan Bond danbond@protonmail.com  Apply suggestions from code review  Co-authored-by: Dan Bond danbond@protonmail.com  Apply suggestions from code review  Co-authored-by: Dan Bond danbond@protonmail.com   passing runs-on   setting up runs-on as a parameter to check-go-mod   making on pull_request   Update .github/scripts/rerun_fails_report.sh   Co-authored-by: Dan Bond danbond@protonmail.com  Apply suggestions from code review  Co-authored-by: Dan Bond danbond@protonmail.com   make runs-on required   removing go-version param that is not used.   removing go-version param that is not used.   Modify build-distros to use medium runners (#16773)   go-tests workflow   add test splitting to go-tests   fix re-reun fails report path   fix re-reun fails report path another place   fixing tests for32bit and race   use script file to generate runners   fixing run path   add checkout   Apply suggestions from code review   Co-authored-by: Dan Bond danbond@protonmail.com  Apply suggestions from code review  Co-authored-by: Dan Bond danbond@protonmail.com  Apply suggestions from code review  Co-authored-by: Dan Bond danbond@protonmail.com   passing runs-on   setting up runs-on as a parameter to check-go-mod   trying mediums   adding in script   fixing runs-on to be parameter   fixing merge conflict   changing to on push   removing whitespace   go-tests workflow   add test splitting to go-tests   fix re-reun fails report path   fix re-reun fails report path another place   fixing tests for32bit and race   use script file to generate runners   fixing run path   add checkout   Apply suggestions from code review   Co-authored-by: Dan Bond danbond@protonmail.com  Apply suggestions from code review  Co-authored-by: Dan Bond danbond@protonmail.com  Apply suggestions from code review  Co-authored-by: Dan Bond danbond@protonmail.com   passing runs-on   setting up runs-on as a parameter to check-go-mod   changing back to on pull_request    Co-authored-by: Dan Bond danbond@protonmail.com   Github Actions Migration - move verify-ci workflows to GHA (#16777)   add verify-ci workflow   adding comment and changing to on pull request.   changing to pull_requests   changing to pull_request   Apply suggestions from code review   Co-authored-by: Dan Bond danbond@protonmail.com   [NET-3029] Migrate frontend to GHA (#16731)   changing set up to a small   using consuls own custom runner pool.    Co-authored-by: Dan Bond danbond@protonmail.com
135,"Add copyright headers for acl, api and bench folders (#16706)","  copyright headers for agent folder   Ignore test data files   fix proto files and remove headers in agent/uiserver folder   ignore deep-copy files   copyright headers for agent folder   fix merge conflicts   copyright headers for agent folder   Ignore test data files   fix proto files   ignore agent/uiserver folder for now   copyright headers for agent folder   Add copyright headers for acl, api and bench folders "
136,Copyright headers for command folder (#16705),  copyright headers for agent folder   Ignore test data files   fix proto files and remove headers in agent/uiserver folder   ignore deep-copy files   copyright headers for agent folder   Copyright headers for command folder   fix merge conflicts 
137,copyright headers for agent folder (#16704),  copyright headers for agent folder   Ignore test data files   fix proto files and remove headers in agent/uiserver folder   ignore deep-copy files 
138,Update normalization of route refs (#16789),  Use merge of enterprise meta's rather than new custom method   Add merge logic for tcp routes   Add changelog   Normalize certificate refs on gateways   Fix infinite call loop   Explicitly call enterprise meta 
139,add scripts for testing locally consul-ui-toolkit (#16794),
140,changes to support new PQ enterprise fields (#16793),
141,Resource service List(..) endpoint (#16753),
142,add ip rate limiter controller OSS parts (#16790),
143,Allocate virtual ip for resolver/router/splitter config entries (#16760),
144,WatchList(..) endpoint for the resource service (#16726),
145,Expand route flattening test for multiple namespaces (#16745),  Exand route flattening test for multiple namespaces   Add helper for checking http route config entry exists without checking for bound status   Fix port and hostname check for http route flattening test 
146,Fix struct tags for TCPService enterprise meta (#16781),  Fix struct tags for TCPService enterprise meta   Add changelog 
147,Fix Edu Jira automation (#16778),
148,Read(...) endpoint for the resource service (#16655),
149,Fix bug in changelog checker where bash variable is not quoted (#16681),
150,Add storage backend interface and in-memory implementation (#16538),"Introduces storage.Backend, which will serve as the interface between the Resource Service and the underlying storage system (Raft today, but in the future, who knows!). The primary design goal of this interface is to keep its surface area small, and push as much functionality as possible into the layers above, so that new implementations can be added with little effort, and easily proven to be correct. To that end, we also provide a suite of ""conformance"" tests that can be run against a backend implementation to check it behaves correctly. In this commit, we introduce an initial in-memory storage backend, which is suitable for tests and when running Consul in development mode. This backend is a thin wrapper around the Store type, which implements a resource database using go-memdb and our internal pub/sub system. Store will also be used to handle reads in our Raft backend, and in the future, used as a local cache for external storage systems."
151,Docs/intentions refactor docs day 2022 (#16758),  converted intentions conf entry to ref CT format   set up intentions nav   add page for intentions usage   final intentions usage page   final intentions overview page   fixed old relative links   updated diagram for overview   updated links to intentions content   fixed typo in updated links   rename intentions overview page file to index   rollback link updates to intentions overview   fixed nav   Updated custom HTML in API and CLI pages to MD   applied suggestions from review to index page   moved conf examples from usage to conf ref   missed custom HTML section   applied additional feedback   Apply suggestions from code review   Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com   updated headings in usage page   renamed files and udpated nav   updated links to new file names   added redirects and final tweaks   typo    Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
152,Change partition for peers in discovery chain targets (#16769),"This commit swaps the partition field to the local partition for discovery chains targeting peers. Prior to this change, peer upstreams would always use a value of default regardless of which partition they exist in. This caused several issues in xds / proxycfg because of id mismatches. Some prior fixes were made to deal with one-off id mismatches that this PR also cleans up, since they are no longer needed."
153,Fix broken links in Consul docs (#16640),  Fix broken links in Consul docs   more broken link fixes   more 404 fixes   404 fixes   broken link fix    Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
154,add failover policy to ProxyConfigEntry in api (#16759),  add failover policy to ProxyConfigEntry in api   update docs 
155,RELENG-471: Remove obsolete load-test workflow (#16737),  Remove obsolete load-test workflow   remove load-tests from circleci config.    Co-authored-by: John Murret john.murret@hashicorp.com
156,tests instantiating clients w/o shutting down (#16755),noticed via their port still in use messages.
157,Remove version bump from CRT workflow (#16728),"This bumps the version to reflect the next patch release; however, we use a specific branch for each patch release and so never wind up cutting a release directly from the release/1.15.x (for example) where this is intended to work."
158,fix: remove unused tenancy category from rate limit spec (#16740),
159,Use GH issues type for edu board (#16750),
160,Changelog for audit logging fix. (#16700), Changelog for audit logging fix.
161,delete config when nil (#16690),  delete config when nil   fix mock interface implementation   fix handler test to use the right assertion   extract DeleteConfig as a separate API.   fix mock limiter implementation to satisfy the new interface   fix failing tests   add test comments 
162,add enterprise xds tests (#16738),
163,fix bug where pqs that failover to a cluster peer dont un-fail over (#16729),
164,Copyright headers for config files git + circleci (#16703),  Copyright headers for config files git + circleci   Release folder copyright headers 
165,fix: gracefully fail on invalid port number (#16721),
166,add extra resiliency to snapshot restore test (#16712),
167,Helm docs without developer.hashicorp.com prefix (#16711),This was causing linter errors
168,fix build workflow (#16719),Signed-off-by: Dan Bond danbond@protonmail.com
169,"Update envoy extension docs, service-defaults, add multi-config example for lua (#16710)",
170,[NET-3029] Migrate build-distros to GHA (#16669), migrate build distros to GHA  Signed-off-by: Dan Bond danbond@protonmail.com  build-arm  Signed-off-by: Dan Bond danbond@protonmail.com  don't use matrix  Signed-off-by: Dan Bond danbond@protonmail.com  check-go-mod  Signed-off-by: Dan Bond danbond@protonmail.com  add notify slack script  Signed-off-by: Dan Bond danbond@protonmail.com  notify slack if failure  Signed-off-by: Dan Bond danbond@protonmail.com  rm notify slack script  Signed-off-by: Dan Bond danbond@protonmail.com  fix check-go-mod job  Signed-off-by: Dan Bond danbond@protonmail.com  Signed-off-by: Dan Bond danbond@protonmail.com
171,Remove unused are hosts set check (#16691),  Remove unused are hosts set check   Remove all traces of unused 'AreHostsSet' parameter   Remove unused Hosts attribute   Remove commented out use of snap.APIGateway.Hosts 
172,Regen helm docs (#16701),
173,UI:  update Ember to 3.28.6 (#16616), Co-authored-by: wenincode tyler.wendlandt@hashicorp.com
174,Update WAL Known issues (#16676),
175,Fix broken links from api docs (#16695),
176,chore: replace hardcoded node name with a constant (#16692),
177,NET-2397: Add readme.md to upgrade test subdirectory (#16610),  NET-2397: Add readme.md to upgrade test subdirectory   remove test code   fix link and update  steps of adding new test cases (#16654)   fix link and update  steps of adding new test cases   Apply suggestions from code review   Co-authored-by: Nick Irvine 115657443+nfi-hashicorp@users.noreply.github.com  Co-authored-by: Nick Irvine 115657443+nfi-hashicorp@users.noreply.github.com  Co-authored-by: cskh hui.kang@hashicorp.com Co-authored-by: Nick Irvine 115657443+nfi-hashicorp@users.noreply.github.com
178,build(deps): bump tomhjp/gh-action-jira-comment from 0.1.0 to 0.2.0 (#16684),Bumps tomhjp/gh-action-jira-comment from 0.1.0 to 0.2.0. - Release notes - Commits  updated-dependencies: - dependency-name: tomhjp/gh-action-jira-comment   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] support@github.com Co-authored-by: dependabot[bot] 49699333+dependabot[bot]@users.noreply.github.com Co-authored-by: David Yu dyu@hashicorp.com
179,build(deps): bump tomhjp/gh-action-jira-create from 0.2.0 to 0.2.1 (#16685),Bumps tomhjp/gh-action-jira-create from 0.2.0 to 0.2.1. - Release notes - Commits  updated-dependencies: - dependency-name: tomhjp/gh-action-jira-create   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] support@github.com Co-authored-by: dependabot[bot] 49699333+dependabot[bot]@users.noreply.github.com Co-authored-by: David Yu dyu@hashicorp.com
180,Docs: Jira sync Update issuetype to bug (#16689),  update issuetype to bug   fix conditional for pr edu 
181,Docs/update jira sync pr issue (#16688),"  fix jira sync actions, remove custom fields   remove more additional fields, debug "
182,"fix jira sync actions, remove custom fields (#16686)",
183,peering: peering partition failover fixes (#16673),add local source partition for peered upstreams
184,Fix route subscription when using namespaces (#16677),  Fix route subscription when using namespaces   Update changelog   Fix changelog entry to reference that the bug was enterprise only 
185,Adds check to verify that the API Gateway is being created with at least one listener,
186,Update GH actions to create Jira issue automatically (#16656),
187,feat: add category annotation to RPC and gRPC methods (#16646),
188,add sameness groups to discovery chains (#16671),
189,Snapshot restore tests (#16647),  add snapshot restore test   add logstore as test parameter   Use the correct image version   make sure we read the logs from a followers to test the follower snapshot install path.   update to raf-wal v0.3.0   add changelog.   updating changelog for bug description and removed integration test.   setting up test container builder to only set logStore for 1.15 and higher    Co-authored-by: Paul Banks pbanks@hashicorp.com Co-authored-by: John Murret john.murret@hashicorp.com
190,build(deps): bump atlassian/gajira-transition from 2.0.1 to 3.0.1 (#15921),Bumps atlassian/gajira-transition from 2.0.1 to 3.0.1. - Release notes - Commits  updated-dependencies: - dependency-name: atlassian/gajira-transition   dependency-type: direct:production   update-type: version-update:semver-major ... Signed-off-by: dependabot[bot] support@github.com Co-authored-by: dependabot[bot] 49699333+dependabot[bot]@users.noreply.github.com Co-authored-by: David Yu dyu@hashicorp.com
191,Bump tomhjp/gh-action-jira-search from 0.2.1 to 0.2.2 (#16667),Bumps tomhjp/gh-action-jira-search from 0.2.1 to 0.2.2. - Release notes - Commits  updated-dependencies: - dependency-name: tomhjp/gh-action-jira-search   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] support@github.com Co-authored-by: dependabot[bot] 49699333+dependabot[bot]@users.noreply.github.com
192,[API Gateway] Fix invalid cluster causing gateway programming delay (#16661),  Add test for http routes   Add fix   Fix tests   Add changelog entry   Refactor and fix flaky tests 
193,Fix incorrect links on Envoy extensions documentation (#16666),
194,add sameness group support to service resolver failover and redirects (#16664),
195,fix: add AccessorID property to PUT token request (#16660),
196,Add in query options for catalog service existing in a specific (#16652),namespace when creating service for tests
197,First cluster grpc service should be NodePort for the second cluster to connect (#16430)," First cluster grpc service should be NodePort  This is based on the issue opened here https://github.com/hashicorp/consul-k8s/issues/1903 If you follow the documentation https://developer.hashicorp.com/consul/docs/k8s/deployment-configurations/single-dc-multi-k8s exactly as it is, the first cluster will only create the consul UI service on NodePort but not the rest of the services (including for grpc). By default, from the helm chart, they are created as headless services by setting clusterIP None. This will cause an issue for the second cluster to discover consul server on the first cluster over gRPC as it cannot simply cannot through gRPC default port 8502 and it ends up in an error as shown in the issue https://github.com/hashicorp/consul-k8s/issues/1903 As a solution, the grpc service should be exposed using NodePort (or LoadBalancer). I added those changes required in both cluster1-values.yaml and cluster2-values.yaml, and also a description for those changes for the normal users to understand. Kindly review and I hope this PR will be accepted.  Update website/content/docs/k8s/deployment-configurations/single-dc-multi-k8s.mdx  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com  Update website/content/docs/k8s/deployment-configurations/single-dc-multi-k8s.mdx  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com  Update website/content/docs/k8s/deployment-configurations/single-dc-multi-k8s.mdx  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com"
198,fix confusing spiffe ids in golden tests (#16643),
199,net 2731 ip config entry OSS version (#16642),  ip config entry   name changing   move to ent   ent version   renaming   change format   renaming   refactor   add default values 
200,Update e2e tests for namespaces (#16627),"  Refactored ""NewGatewayService"" to handle namespaces, fixed TestHTTPRouteFlattening test   Fixed existing http_route tests for namespacing   Squash aclEnterpriseMeta for ResourceRefs and HTTPServices, accept namespace for creating connect services and regular services   Use require instead of assert after creating namespaces in http_route_tests   Refactor NewConnectService and NewGatewayService functions to use cfg objects to reduce number of method args   Rename field on SidecarConfig in tests from SidecarServiceName to Name to avoid stutter "
201,Tune 404 checker to exclude false-positives and use intended file path (#16636),
202,Add known issues to Raft WAL docs. (#16600),  Add known issues to Raft WAL docs.   Refactor update based on review feedback 
203,feat: update typography to consume hds styles (#16577),
204,Backport ENT-4704 (#16612),
205,Basic resource type registry (#16622),
206,Fix issue with trust bundle read ACL check. (#16630),"This commit fixes an issue where trust bundles could not be read by services in a non-default namespace, unless they had excessive ACL permissions given to them. Prior to this change, service:write was required in the default namespace in order to read the trust bundle. Now, service:write to a service in any namespace is sufficient."
207,Docs discovery typo (#16628),  docs(discovery): typo   docs(discovery): EOF and trim lines    Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
208,Add UI copyright headers files (#16614),  Add copyright headers to UI files   Ensure copywrite file ignores external libs 
209,Preserve CARoots when updating Vault CA configuration (#16592),"If a CA config update did not cause a root change, the codepath would return early and skip some steps which preserve its intermediate certificates and signing key ID. This commit re-orders some code and prevents updates from generating new intermediate certificates."
210,Add sameness-group configuration entry. (#16608),This commit adds a sameness-group config entry to the API and structs packages. It includes some validation logic and a new memdb index that tracks the default sameness-group for each partition. Sameness groups will simplify the effort of managing failovers / intentions / exports for peers and partitions. Note that this change purely to introduce the configuration entry and does not include the full functionality of sameness-groups.
211,Add copywrite setup file (#16602),
212,Allow HCP metrics collection for Envoy proxies,"Co-authored-by: Ashvitha Sridharan ashvitha.sridharan@hashicorp.com Co-authored-by: Freddy freddygv@users.noreply.github.com Add a new envoy flag: ""envoy_hcp_metrics_bind_socket_dir"", a directory where a unix socket will be created with the name <namespace>_<proxy_id>.sock to forward Envoy metrics. If set, this will configure: - In bootstrap configuration a local stats_sink and static cluster.   These will forward metrics to a loopback listener sent over xDS.   A dynamic listener listening at the socket path that the previously   defined static cluster is sending metrics to.   A dynamic cluster that will forward traffic received at this listener   to the hcp-metrics-collector service.   Reasons for having a static cluster pointing at a dynamic listener: - We want to secure the metrics stream using TLS, but the stats sink can   only be defined in bootstrap config. With dynamic listeners/clusters   we can use the proxy's leaf certificate issued by the Connect CA,   which isn't available at bootstrap time.  We want to intelligently route to the HCP collector. Configuring its   addreess at bootstrap time limits our flexibility routing-wise. More   on this below.  Reasons for defining the collector as an upstream in proxycfg: - The HCP collector will be deployed as a mesh service.   Certificate management is taken care of, as mentioned above.   Service discovery and routing logic is automatically taken care of,   meaning that no code changes are required in the xds package.   Custom routing rules can be added for the collector using discovery   chain config entries. Initially the collector is expected to be   deployed to each admin partition, but in the future could be deployed   centrally in the default partition. These config entries could even be   managed by HCP itself. "
213,Consul WAN Fed with Vault Secrets Backend document updates (#16597),  Consul WAN Fed with Vault Secrets Backend document updates   Corrected dc1-consul.yaml and dc2-consul.yaml file highlights   Update website/content/docs/k8s/deployment-configurations/vault/wan-federation.mdx   Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com  Update website/content/docs/k8s/deployment-configurations/vault/wan-federation.mdx  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
214,Create a weekly 404 checker for all Consul docs content (#16603),
215,fixes for unsupported partitions field in CRD metadata block (#16604),  fixes for unsupported partitions field in CRD metadata block   Apply suggestions from code review   Co-authored-by: Luke Kysow 1034429+lkysow@users.noreply.github.com  Co-authored-by: Luke Kysow 1034429+lkysow@users.noreply.github.com
216,Add Peer Locality to Discovery Chains (#16588),Add peer locality to discovery chains
217,allow setting locality on services and nodes (#16581),
218,JIRA pr check: Filter out OSS/ENT merges (#16593), jira pr check filter out dependabot and oss/ent merges
219,Add namespace file with build tag for OSS gateway tests (#16590),  Add namespace file with build tag for OSS tests   Remove TODO comment 
220,UI: Fix htmlsafe errors throughout the app (#16574),  Upgrade ember-intl   Add changelog   Add yarn lock 
221,GRPC stub for the ResourceService (#16528),
222,auto-updated agent/uiserver/dist/ from commit 63204b518 (#16587),Co-authored-by: hc-github-team-consul-core github-team-consul-core@hashicorp.com
223,added a backport-checker GitHub action (#16567),  added a backport-checker GitHub action   Update .github/workflows/backport-checker.yml 
224,website: adds content-check command and README update (#16579),
225,Bump submodules from latest 1.15.1 patch release (#16578),"  Update changelog with Consul patch releases 1.13.7, 1.14.5, 1.15.1   Bump submodules from latest patch release   Forgot one "
226,Update changelog with patch releases (#16576),
227,fix bug that can lead to peering service deletes impacting the state of local services (#16570),
228,NET-2954: Improve integration tests CI execution time (#16565),  NET-2954: Improve integration tests CI execution time   fix ci   remove comments and modify config file 
229,Broken link fixes (#16566),
230,docs: Document config entry permissions (#16556),
231,add agent locality and replicate it across peer streams (#16522),
232,upgrade test: use retry with ModifyIndex and remove ent test file (#16553),
233,Update docs to reflect functionality (#16549),  Update docs to reflect functionality   make consistent with other client runtimes 
234,support vault auth config for alicloud ca provider,Add support for using existing vault auto-auth configurations as the provider configuration when using Vault's CA provider with AliCloud. AliCloud requires 2 extra fields to enable it to use STS (it's preferred auth setup). Our vault-plugin-auth-alicloud package contained a method to help generate them as they require you to make an http call to a faked endpoint proxy to get them (url and headers base64 encoded).
235,Fix flakey tests related to ACL token updates (#16545),  Fix flakey tests related to ACL token updates   update all acl token update tests   extra create_token function to its own thing 
236,feat: update notification to use hds toast component (#16519),
237,Delete test-link-rewrites.yml (#16546),
238,Update the consul-k8s cli docs for the new proxy log subcommand (#16458),  Update the consul-k8s cli docs for the new proxy log subcommand   Updated consul-k8s docs from PR feedback   Added proxy log command to release notes 
239,upgrade test: discovery chain across partition (#16543),
240,Merge pull request #4573 from hashicorp/NET-2841 (#16544), Merge pull request #4573 from hashicorp/NET-2841  NET-2841: PART 2 refactor upgrade tests to include version 1.15  update upgrade versions
241,Follow-up fixes to consul connect envoy command (#16530),
242,Improve ux around ACL token to help users avoid overwriting node/service identities (#16506),  Deprecate merge-node-identities and merge-service-identities flags   added tests for node identities changes   added changelog file and docs 
243,NET-2904 Fixes API Gateway Route Service Weight Division Error,
244,fixes empty link in DNS usage page (#16534),
245,Add some basic UI improvements for api-gateway services (#16508),  Add some basic ui improvements for api-gateway services   Add changelog entry   Use ternary for null check   Update gateway doc links   rename changelog entry for new PR   Fix test 
246,NET-2903 Normalize weight for http routes (#16512),  NET-2903 Normalize weight for http routes   Update website/content/docs/connect/gateways/api-gateway/configuration/http-route.mdx   Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
247,proxycfg: ensure that an irrecoverable error in proxycfg closes the xds session and triggers a replacement proxycfg watcher (#16497),"Receiving an ""acl not found"" error from an RPC in the agent cache and the streaming/event components will cause any request loops to cease under the assumption that they will never work again if the token was destroyed. This prevents log spam (#14144, #9738). Unfortunately due to things like:   authz requests going to stale servers that may not have witnessed the token   creation yet   authz requests in a secondary datacenter happening before the tokens get   replicated to that datacenter   authz requests from a primary TO a secondary datacenter happening before the   tokens get replicated to that datacenter   The caller will get an ""acl not found"" before the token exists, rather than just after. The machinery added above in the linked PRs will kick in and prevent the request loop from looping around again once the tokens actually exist. For consul-dataplane usages, where xDS is served by the Consul servers rather than the clients ultimately this is not a problem because in that scenario the agent/proxycfg machinery is on-demand and launched by a new xDS stream needing data for a specific service in the catalog. If the watching goroutines are terminated it ripples down and terminates the xDS stream, which CDP will eventually re-establish and restart everything. For Consul client usages, the agent/proxycfg machinery is ahead-of-time launched at service registration time (called ""local"" in some of the proxycfg machinery) so when the xDS stream comes in the data is already ready to go. If the watching goroutines terminate it should terminate the xDS stream, but there's no mechanism to re-spawn the watching goroutines. If the xDS stream reconnects it will see no ConfigSnapshot and will not get one again until the client agent is restarted, or the service is re-registered with something changed in it. This PR fixes a few things in the machinery:   there was an inadvertent deadlock in fetching snapshot from the proxycfg   machinery by xDS, such that when the watching goroutine terminated the   snapshots would never be fetched. This caused some of the xDS machinery to   get indefinitely paused and not finish the teardown properly.   Every 30s we now attempt to re-insert all locally registered services into   the proxycfg machinery.   When services are re-inserted into the proxycfg machinery we special case   ""dead"" ones such that we unilaterally replace them rather that doing that   conditionally. "
248,update connect/ca's vault AuthMethod conf section (#16346),"Updated Params field to re-frame as supporting arguments specific to the supported vault-agent auth-auth methods with links to each methods ""#configuration"" section. Included a call out limits on parameters supported."
249,add provider ca support for approle auth-method,Adds support for the approle auth-method. Only handles using the approle role/secret to auth and it doesn't support the agent's extra management configuration options (wrap and delete after read) as they are not required as part of the auth (ie. they are vault agent things).
250,fixed broken links associated with cluster peering updates (#16523),  fixed broken links associated with cluster peering updates   additional links to fix   typos   fixed redirect file 
251,Fix resolution of service resolvers with subsets for external upstreams (#16499),  Fix resolution of service resolvers with subsets for external upstreams   Add tests   Add changelog entry   Update view filter logic 
252,Remove private prefix from proto-gen-rpc-glue e2e test (#16433),
253,modified unsupported envoy version error (#16518)," When an envoy version is out of a supported range, we now return the envoy version being used as major.minor.x to indicate that it is the minor version at most that is incompatible When an envoy version is in the list of unsupported envoy versions we return back the envoy version in the error message as major.minor.patch as now the exact version matters."
254,Add support for failover policies (#16505),
255,Fix issue where terminating gateway service resolvers weren't properly cleaned up (#16498),  Fix issue where terminating gateway service resolvers weren't properly cleaned up   Add integration test for cleaning up resolvers   Add changelog entry   Use state test and drop integration test 
256,Add ServiceResolver RequestTimeout for route timeouts to make TerminatingGateway upstream timeouts configurable (#16495),  Leverage ServiceResolver ConnectTimeout for route timeouts to make TerminatingGateway upstream timeouts configurable   Regenerate golden files   Add RequestTimeout field   Add changelog entry 
257,Merge pull request #4584 from hashicorp/refactor_cluster_config (#16517),NET-2841: PART 1 - refactor NewPeeringCluster to support custom config
258,Merge pull request #4538 from hashicorp/NET-2396 (#16516),NET-2396: refactor test to reduce duplication
259,add provider ca auth support for kubernetes,Adds support for Kubernetes jwt/token file based auth. Only needs to read the file and save the contents as the jwt/token.
260,docs(architecture): remove merge conflict leftovers (#16507),
261,add provider ca support for jwt file base auth,Adds support for a jwt token in a file. Simply reads the file and sends the read in jwt along to the vault login. It also supports a legacy mode with the jwt string being passed directly. In which case the path is made optional.
262,Speed up test by registering services concurrently (#16509),
263,Suppress AlreadyRegisteredError to fix test retries (#16501),  Suppress AlreadyRegisteredError to fix test retries   Remove duplicate sink 
264,docs: Update release notes with Envoy compat issue (#16494), Update v1_15_x.mdx   Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
265,"NET-2292: port ingress-gateway test case ""http"" from BATS addendum (#16490)",
266,"Improve ux to help users avoid overwriting fields of ACL tokens, roles and policies (#16288)",  Deprecate merge-policies and add options add-policy-name/add-policy-id to improve CLI token update command   deprecate merge-roles fields   Fix potential flakey tests and update ux to remove 'completely' + typo fixes 
267,update services nav titles (#16484),
268,fix (cli): return error msg if acl policy not found (#16485),  fix: return error msg if acl policy not found   changelog   add test 
269,docs: Consul 1.15.0 and Consul K8s 1.0 release notes (#16481),* add new release notes Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
270,Changed titles for services pages to sentence style cap (#16477),  Changed titles for services pages to sentence style cap   missed a meta title 
271,add provider ca auth-method support for azure,Does the required dance with the local HTTP endpoint to get the required data for the jwt based auth setup in Azure. Keeps support for 'legacy' mode where all login data is passed on via the auth methods parameters. Refactored check for hardcoded /login fields.
272,docs: clarify license expiration upgrade behavior (#16464),
273,Docs/services refactor docs day 122022 (#16103),"  converted main services page to services overview page   set up services usage dirs   added Define Services usage page   converted health checks everything page to Define Health Checks usage page   added Register Services and Nodes usage page   converted Query with DNS to Discover Services and Nodes Overview page   added Configure DNS Behavior usage page   added Enable Static DNS Lookups usage page   added the Enable Dynamic Queries DNS Queries usage page   added the Configuration dir and overview page - may not need the overview, tho   fixed the nav from previous commit   added the Services Configuration Reference page   added Health Checks Configuration Reference page   updated service defaults configuraiton entry to new configuration ref format   fixed some bad links found by checker   more bad links found by checker   another bad link found by checker   converted main services page to services overview page   set up services usage dirs   added Define Services usage page   converted health checks everything page to Define Health Checks usage page   added Register Services and Nodes usage page   converted Query with DNS to Discover Services and Nodes Overview page   added Configure DNS Behavior usage page   added Enable Static DNS Lookups usage page   added the Enable Dynamic Queries DNS Queries usage page   added the Configuration dir and overview page - may not need the overview, tho   fixed the nav from previous commit   added the Services Configuration Reference page   added Health Checks Configuration Reference page   updated service defaults configuraiton entry to new configuration ref format   fixed some bad links found by checker   more bad links found by checker   another bad link found by checker   fixed cross-links between new topics   updated links to the new services pages   fixed bad links in scale file   tweaks to titles and phrasing   fixed typo in checks.mdx   started updating the conf ref to latest template   update SD conf ref to match latest CT standard   Apply suggestions from code review   Co-authored-by: Eddie Rowe 74205376+eddie-rowe@users.noreply.github.com   remove previous version of the checks page   fixed cross-links   Apply suggestions from code review   Co-authored-by: Eddie Rowe 74205376+eddie-rowe@users.noreply.github.com  Co-authored-by: Eddie Rowe 74205376+eddie-rowe@users.noreply.github.com"
274,cli: remove stray whitespace when loading the consul version from the VERSION file (#16467),Fixes a regression from #15631 in the output of consul version from: Consul v1.16.0-dev +ent Revision 56b86acbe5+CHANGES  to Consul v1.16.0-dev+ent Revision 56b86acbe5+CHANGES
275,Gateway Test HTTPPathRewrite (#16418),  add http url path rewrite   add Mike's test back in   update kind to use api.APIGateway 
276,gateways: add e2e test for API Gateway HTTPRoute ParentRef change (#16408),  test(gateways): add API Gateway HTTPRoute ParentRef change test   test(gateways): add checkRouteError helper   test(gateways): remove EOF check   in CI this seems to sometimes be 'connection reset by peer' instead  Update test/integration/consul-container/test/gateways/http_route_test.go
277,docs: Add backwards compatibility for Consul 1.14.x and consul-dataplane in the Envoy compat matrix (#16462), Update envoy.mdx
278,cli: ensure acl token read -self works (#16445),Fixes a regression in #16044 The consul acl token read -self cli command should not require an -accessor-id because typically the persona invoking this would not already know the accessor id of their own token.
279,grpc: fix data race in balancer registration (#16229),"Registering gRPC balancers is thread-unsafe because they are stored in a global map variable that is accessed without holding a lock. Therefore, it's expected that balancers are registered once at the beginning of your program (e.g. in a package init function) and certainly not after you've started dialing connections, etc.  NOTE: this function must only be called during initialization time (i.e. in an init() function), and is not thread-safe.  While this is fine for us in production, it's challenging for tests that spin up multiple agents in-memory. We currently register a balancer per- agent which holds agent-specific state that cannot safely be shared. This commit introduces our own registry that is thread-safe, and implements the Builder interface such that we can call gRPC's Register method once, on start-up. It uses the same pattern as our resolver registry where we use the dial target's host (aka ""authority""), which is unique per-agent, to determine which builder to use."
280,Update ingress-gateways.mdx (#16330), Update ingress-gateways.mdx  Added an example of running the HELM install for the ingress gateways using values.yaml   Apply suggestions from code review   Update ingress-gateways.mdx   Adds closing back ticks on example command. The suggesting UI strips them out.  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
281,Update docs for consul-k8s 1.1.0 (#16447),
282,UI: Fix rendering issue in search and lists (#16444),  Upgrade ember-cli-string-helpers   add extra lock change 
283,upgrade test: consolidate resolver test cases (#16443),
284,Delete Vagrantfile (#16442),
285,docs: remove extra whitespace in frontmatter (#16436),
286,Add missing link (#16437),
287,UI: Update Consul UI colors to use HDS colors (#16111),"  update red color variables to hds   change background red to be one step lighter   map oranges   map greens   map blues   map greys   delete themes, colours: lemon, magenta, strawberry, and vault color aliases   add unmapped rainbow colours   replace white and transparent vars, remove unused semantic vars and frame placeholders   small tweaks to improve contrast, change node health status x/check colours for non-voters to match design doc, replace semantic colour action w hds colour   add unmapped grays, remove dark theme, manually set nav bar to use dark colours   map consul pink colour   map yellows   add unmapped oranges, delete light theme   remove readme, base variables, clean up dangling colours   Start working on the nav disclosure menus   Update main-nav-horizontal dropdowns   Format template   Update box-shadow tokens   Replace --tone- usage with tokens   Update nav disabled state and panel border colour   Replace rgb usage on tile   Fix permissions modal overlay   More fixes   Replace orange-500 with amber-200   Update badge colors   Update vertical sidebar colors   Remove top border on consul peer list ul    Co-authored-by: wenincode tyler.wendlandt@hashicorp.com"
288,Refactor and move wal docs (#16387),  Add WAL documentation. Also fix some minor metrics registration details   Add tests to verify metrics are registered correctly   refactor and move wal docs   Updates to the WAL overview page   updates to enable WAL usage topic   updates to the monitoring WAL backend topic   updates for revert WAL topic   a few tweaks to overview and udpated metadescriptions   Apply suggestions from code review   Co-authored-by: Paul Banks pbanks@hashicorp.com   make revert docs consistent with enable   Apply suggestions from code review   Co-authored-by: Paul Banks pbanks@hashicorp.com   address feedback   address final feedback   Apply suggestions from code review   Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com  Co-authored-by: Paul Banks pbanks@hashicorp.com Co-authored-by: trujillo-adam ajosetru@gmail.com Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com
289,fix: ui tests run is fixed (applying class attribute twice to the hbs element caused the issue (#16428),
290,feat: update alerts to Hds::Alert component (CC-4035) (#16412),
291,update changelog (#16426),  update changelog   fix changelog formatting 
292,Fix attempt for test fail panics in xDS (#16319),  Fix attempt for test fail panics in xDS   switch to a mutex pointer 
293,Basic gobased API gateway spinup test (#16278),"  wip, proof of concept, gateway service being registered, don't know how to hit it   checkpoint   Fix up API Gateway go tests (#16297)   checkpoint, getting InvalidDiscoveryChain route protocol does not match targeted service protocol   checkpoint   httproute hittable   tests working, one header test failing   differentiate services by status code, minor cleanup   working tests   updated GetPort interface   fix getport    Co-authored-by: Andrew Stucki andrew.stucki@hashicorp.com"
294,NO_JIRA: refactor validate function in traffic mgt tests (#16422),
295,Fix a couple inconsistencies in operator usage instances command (#16260),
296,add back staging bits (#16411),
297,Try DRYing up createCluster in integration tests (#16199),
298,NET-2286: Add tests to verify traffic redirects between services (#16390),
299,Native API Gateway Docs (#16365),"  Create empty files   Copy over content for overview   Copy over content for usage   Copy over content for api-gateway config   Copy over content for http-route config   Copy over content for tcp-route config   Copy over content for inline-certificate config   Add docs to the sidebar   Clean up overview. Start cleaning up usage   Add BETA badge to API Gateways portion of nav   Fix header   Fix up usage   Fix up API Gateway config   Update paths to be consistent w/ other gateway docs   Fix up http-route   Fix up inline-certificate   rename path   Fix up tcp-route   Add CodeTabs   Add headers to config pages   Fix configuration model for http route and inline certificate   Add version callout to API gateway overview page   Fix values for inline certificate   Fix values for api gateway configuration   Fix values for TCP Route config   Fix values for HTTP Route config   Adds link from k8s gateway to vm gateway page   Remove versioning warning   Serve overview page at ../api-gateway, consistent w/ mesh-gateway   Remove weight field from tcp-route docs   Linking to usage instead of overview from k8s api-gateway to vm api-gateway   Fix issues in usage page   Fix links in usage   Capitalize Kubernetes   Apply suggestions from code review   Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com   remove optional callout   Apply suggestions from code review   Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com  Apply suggestions from code review  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com   Apply suggestions from code review   Update website/content/docs/connect/gateways/api-gateway/configuration/api-gateway.mdx   Fix formatting of Hostnames   Update website/content/docs/api-gateway/index.mdx   Update website/content/docs/connect/gateways/api-gateway/configuration/http-route.mdx   Co-authored-by: Andrew Stucki andrew.stucki@hashicorp.com   Add cross-linking of config entries   Fix rendering error on new operator usage docs   Update website/content/docs/connect/gateways/api-gateway/configuration/http-route.mdx   Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com  Update website/content/docs/connect/gateways/api-gateway/configuration/http-route.mdx  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com   Apply suggestions from code review   Apply suggestions from code review   Add BETA badges to config entry links   http route updates   Add Enterprise keys   Use map instead of list for meta field, use consistent formatting   Convert spaces to tabs   Add all Enterprise info to TCP Route   Use pascal case for JSON api-gateway example   Add enterprise to HCL api-gw cfg   Use pascal case for missed JSON config fields   Add enterprise to JSON api-gw cfg   Add enterprise to api-gw values   adds enterprise to http route   Update website/content/docs/connect/gateways/api-gateway/index.mdx   Co-authored-by: danielehc 40759828+danielehc@users.noreply.github.com   Add enterprise to api-gw spec   Add missing namespace, partition + meta to specification   fixes for http route   Fix ordering of API Gatetway cfg spec items   whitespace   Add linking of values to tcp   Apply suggestions from code review   Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com   Fix comma in wrong place   Apply suggestions from code review   Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com   Move Certificates down   Apply suggestions from code review   Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com   Tabs to spaces in httproute   Use configuration entry instead of config entry   Fix indentations on api-gateway and tcp-route   Add whitespace between code block and prose   Apply suggestions from code review   Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com  adds <> to http route   Co-authored-by: Nathan Coleman nathan.coleman@hashicorp.com Co-authored-by: Melisa Griffin melisa.griffin@hashicorp.com Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com Co-authored-by: Tu Nguyen im2nguyen@gmail.com Co-authored-by: Melisa Griffin missylbytes@users.noreply.github.com Co-authored-by: Andrew Stucki andrew.stucki@hashicorp.com Co-authored-by: danielehc 40759828+danielehc@users.noreply.github.com Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com"
300,Fix various flaky tests (#16396),
301,fix(docs): correct rate limit metrics (#16400),
302,add missing field to oss struct (#16401),
303,Fix rendering error on new operator usage docs (#16393),
304,Docs/cluster peering 1.15 updates (#16291),"  initial commit   initial commit   Overview updates   Overview page improvements   More Overview improvements   improvements   Small fixes/updates   Updates   Overview updates   Nav data   More nav updates   Fix   updates   Updates + tip test   Directory test   refining   Create restructure w/ k8s   Single usage page   Technical Specification   k8s pages   typo   L7 traffic management   Manage connections   k8s page fix   Create page tab corrections   link to k8s   intentions   corrections   Add-on intention descriptions   adjustments   Missing    Diagram improvements   Final diagram update   Apply suggestions from code review   Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com Co-authored-by: David Yu dyu@hashicorp.com   diagram name fix   Fixes   Updates to index.mdx   Tech specs page corrections   Tech specs page rename   update link to tech specs   K8s - new pages + tech specs   k8s - manage peering connections   k8s L7 traffic management   Separated establish connection pages   Directory fixes   Usage clean up   k8s docs edits   Updated nav data   CodeBlock Component fix   filename   CodeBlockConfig removal   Redirects   Update k8s filenames   Reshuffle k8s tech specs for clarity, fmt yaml files   Update general cluster peering docs, reorder CLI > API > UI, cross link to kubernetes   Fix config rendering in k8s usage docs, cross link to general usage from k8s docs   fix legacy link   update k8s docs   fix nested list rendering   redirect fix   page error    Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com Co-authored-by: David Yu dyu@hashicorp.com Co-authored-by: Tu Nguyen im2nguyen@gmail.com"
305,Troubleshoot service to service comms (#16385),  Troubleshoot service to service comms   adjustments   breaking fix   api-docs breaking fix   Links added to CLI pages   Update website/content/docs/troubleshoot/troubleshoot-services.mdx   Co-authored-by: Eric Haberkorn erichaberkorn@gmail.com  Update website/content/docs/troubleshoot/troubleshoot-services.mdx  Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com  Update website/content/docs/troubleshoot/troubleshoot-services.mdx  Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com   nav re-ordering   Edits recommended in code review    Co-authored-by: Eric Haberkorn erichaberkorn@gmail.com Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
306,upgrade test: peering with resolver and failover (#16391),
307,Add envoy extension docs (#16376),  Add envoy extension docs   Update message about envoy extensions with proxy defaults   fix tab error   Update website/content/docs/connect/proxies/envoy-extensions/usage/lua.mdx   fix operator prerender issue   Apply suggestions from code review   Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com   update envoyextension warning in proxy defaults so its inline   Update website/content/docs/connect/proxies/envoy-extensions/index.mdx    Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
308,Refactor the disco chain -> xds logic (#16392),
309,chore: remove stable-website (#16386),
310,Correct WAL metrics registrations (#16388),
311,"[UI] CC-4031: change from Action, a and button to hds::Button (#16251)",
312,Docs/rate limiting 1.15 (#16345),"  Added rate limit section to agent overview, updated headings per style guide   added GTRL section and overview   added usage docs for rate limiting 1.15   added file for initializing rate limits   added steps for initializing rate limits   updated descriptions for rate_limits in agent conf   updated rate limiter-related metrics   tweaks to agent index   Apply suggestions from code review   Co-authored-by: Dhia Ayachi dhia@hashicorp.com Co-authored-by: Krastin Krastev krastin@hashicorp.com  Apply suggestions from code review  Co-authored-by: Krastin Krastev krastin@hashicorp.com   Apply suggestions from code review   Apply suggestions from code review   Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com  Co-authored-by: Dhia Ayachi dhia@hashicorp.com Co-authored-by: Krastin Krastev krastin@hashicorp.com Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com"
313,set BRANCH_NAME to release-1.15.x (#16374),
314,NET-2285: Assert total number of expected instances by Consul (#16371),
315,Add docs for usage endpoint and command (#16258), Add docs for usage endpoint and command
316,Documentation update: Adding K8S clusters to external Consul servers (#16285)," Remove Consul Client installation option  With Consul-K8S 1.0 and introduction of Consul-Dataplane, K8S has the option to run without running Consul Client agents.   remove note referring to the same documentation   Added instructions on the use of httpsPort when servers are not running TLS enabled   Modified titile and description "
317,Rate limiter/add ip prefix (#16342),  add support for prefixes in the config tree   fix to use default config when the prefix have no config 
318,[API Gateway] Fix infinite loop in controller and binding non-accepted routes and gateways (#16377),
319,Add changelog entry for API Gateway (Beta) (#16369),  Placeholder commit for changelog entry   Add changelog entry announcing support for API Gateway on VMs   Adjust casing 
320,initial code (#16296),
321,Update existing docs from Consul API Gateway -> API Gateway for Kubernetes (#16360),  Update existing docs from Consul API Gateway -> API Gateway for Kubernetes   Update page header to reflect page title change   Update nav title to match new page title 
322,Upgrade Alpine image to 3.17 (#16358),
323,upgrade test: splitter and resolver config entry in peered cluster (#16356),
324,[API Gateway] Various fixes for Config Entry fields (#16347),  [API Gateway] Various fixes for Config Entry fields   simplify logic per PR review 
325,[API Gateway] Fix targeting service splitters in HTTPRoutes (#16350),  [API Gateway] Fix targeting service splitters in HTTPRoutes   Fix test description 
326,[API Gateway] Turn down controller log levels (#16348),
327,Fix issue with peer services incorrectly appearing as connect-enabled. (#16339),"Prior to this commit, all peer services were transmitted as connect-enabled as long as a one or more mesh-gateways were healthy. With this change, there is now a difference between typical services and connect services transmitted via peering. A service will be reported as ""connect-enabled"" as long as any of these conditions are met:  a connect-proxy sidecar is registered for the service name. a connect-native instance of the service is registered. a service resolver / splitter / router is registered for the service name. a terminating gateway has registered the service."
328,[API Gateway] Validate listener name is not empty (#16340),  [API Gateway] Validate listener name is not empty   Update docstrings and test 
329,chore: document and unit test sdk/testutil/retry (#16049),
330,fix flakieness (#16338),
331,fix: add tls config to unix socket when https is used (#16301),  fix: add tls config to unix socket when https is used   unit test and changelog 
332,"fix: revert go mod compat for sdk,api to 1.19 (#16323)",
333,ISSUE_TEMPLATE: formatting for comments (#16325), Update all templates.
334,Fix HTTPRoute and TCPRoute expectation for enterprise metadata (#16322),
335,Normalize all API Gateway references (#16316),
336,new docs for consul and consul-k8s troubleshoot command (#16284),"  new docs for consul and consul-k8s troubleshoot command   add changelog   add troubleshoot command   address comments, and update cli output to match   revert changes to troubleshoot upstreams, changes will happen in separate pr   Update .changelog/16284.txt   Co-authored-by: Nitya Dhanushkodi nitya@hashicorp.com   address comments   update trouble proxy output   add missing s, add required fields in usage    Co-authored-by: Nitya Dhanushkodi nitya@hashicorp.com"
337,Protobuf Refactoring for Multi-Module Cleanliness (#16302),"Protobuf Refactoring for Multi-Module Cleanliness This commit includes the following: Moves all packages that were within proto/ to proto/private Rewrites imports to account for the packages being moved Adds in buf.work.yaml to enable buf workspaces Names the proto-public buf module so that we can override the Go package imports within proto/buf.yaml Bumps the buf version dependency to 1.14.0 (I was trying out the version to see if it would get around an issue - it didn't but it also doesn't break things and it seemed best to keep up with the toolchain changes) Why: In the future we will need to consume other protobuf dependencies such as the Google HTTP annotations for openapi generation or grpc-gateway usage. There were some recent changes to have our own ratelimiting annotations. The two combined were not working when I was trying to use them together (attempting to rebase another branch) Buf workspaces should be the solution to the problem Buf workspaces means that each module will have generated Go code that embeds proto file names relative to the proto dir and not the top level repo root. This resulted in proto file name conflicts in the Go global protobuf type registry. The solution to that was to add in a private/ directory into the path within the proto/ directory. That then required rewriting all the imports. Is this safe? AFAICT yes The gRPC wire protocol doesn't seem to care about the proto file names (although the Go grpc code does tack on the proto file name as Metadata in the ServiceDesc) Other than imports, there were no changes to any generated code as a result of this."
338,[OSS] security: update go to 1.20.1 (#16263), security: update go to 1.20.1
339,ISSUE TEMPLATE: update issue templates to include comments instead of inline text for instructions (#16313), Update bug_report.md Update feature_request.md Update ui_issues.md Update pull_request_template.md
340,Add stricter validation and some normalization code for API Gateway ConfigEntries (#16304), Add stricter validation and some normalization code for API Gateway ConfigEntries
341,Fix panicky xDS test flakes (#16305),  Add defensive guard to make some tests less flaky and panic less   Do the actual fix 
342,Fix hostname alignment checks for HTTPRoutes (#16300), Fix hostname alignment checks for HTTPRoutes
343,ISSUE_TEMPLATE: Update issue template to include ask for HCL config files for bugs (#16307), Update bug_report.md
344,Inline API Gateway TLS cert code (#16295),  Include secret type when building resources from config snapshot   First pass at generating envoy secrets from api-gateway snapshot   Update comments for xDS update order   Add secret type + corresponding golden files to existing tests   Initialize test helpers for testing api-gateway resource generation   Generate golden files for new api-gateway xDS resource test   Support ADS for TLS certificates on api-gateway   Configure TLS on api-gateway listeners   Inline TLS cert code   update tests   Add SNI support so we can have multiple certificates   Remove commented out section from helper   regen deep-copy   Add tcp tls test    Co-authored-by: Nathan Coleman nathan.coleman@hashicorp.com
345,troubleshoot: fixes and updated messages (#16294),
346,API Gateway Envoy Golden Listener Tests (#16221),  Simple API Gateway e2e test for tcp routes   Drop DNSSans since we don't front the Gateway with a leaf cert   WIP listener tests for api-gateway   Return early if no routes   Add back in leaf cert to testing   Fix merge conflicts   Re-add kind to setup   Fix iteration over listener upstreams   New tcp listener test   Add tests for API Gateway with TCP and HTTP routes   Move zero-route check back   Drop generateIngressDNSSANs   Check for chains not routes    Co-authored-by: Andrew Stucki andrew.stucki@hashicorp.com
347,add server side rate-limiter changelog entry (#16292),
348,Fix mesh gateways incorrectly matching peer locality. (#16257),"Fix mesh gateways incorrectly matching peer locality. This fixes an issue where local mesh gateways use an incorrect address when attempting to forward traffic to a peered datacenter. Prior to this change it would use the lan address instead of the wan if the locality matched. This should never be done for peering, since we must route all traffic through the remote mesh gateway."
349,Docs/reformat service splitters conf entry (#16264),  for tab testing   updates   Update   adding sandbox to test conf ref types   testing tweaks to the conf ref template   reintroduce tabbed specification   applied feedback from MKO session   applied feedback on format from luke and jared   Apply suggestions from code review   Co-authored-by: Dan Upton daniel@floppy.co   fixed some minor HCL formatting in complete conf   Apply suggestions from code review   Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com   fixed bad link   resolving conflicts    Co-authored-by: boruszak jeffrey.boruszak@hashicorp.com Co-authored-by: Dan Upton daniel@floppy.co Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com
350,Fix infinite recursion in inline-certificate config entry (#16276), Fix infinite recursion on InlineCertificateConfigEntry  GetNamespace() + GetMeta() were calling themselves. This change also simplifies by removing nil-checking to match pre-existing config entries Co-Authored-By: Andrew Stucki 3577250+andrewstucki@users.noreply.github.com   Add tests for inline-certificate   Add alias for private key field on inline-certificate   Use valid certificate + private key for inline-certificate tests    Co-authored-by: Andrew Stucki 3577250+andrewstucki@users.noreply.github.com
351,Fix nil-pointer panics from proxycfg package. (#16277),"Prior to this PR, servers / agents would panic and crash if an ingress or api gateway were configured to use a discovery chain that both:  Referenced a peered service Had a mesh gateway mode of local  This could occur, because code for handling upstream watches was shared between both connect-proxy and the gateways. As a short-term fix, this PR ensures that the maps are always initialized for these gateway services. This PR also wraps the proxycfg execution and service registration calls with recover statements to ensure that future issues like this do not put the server into an unrecoverable state."
352,"[OSS] connect: Bump Envoy 1.22.5 to 1.22.7, 1.23.2 to 1.23.4, 1.24.0 to 1.24.2, add 1.25.1, remove 1.21.5 (#16274)"," Bump Envoy 1.22.5 to 1.22.7, 1.23.2 to 1.23.4, 1.24.0 to 1.24.2, add 1.25.1, remove 1.21.5"
353,Add inline-certificate as possible payload of config-entry wrapper (#16254),Co-authored-by: Andrew Stucki 3577250+andrewstucki@users.noreply.github.com
354,upgrade test: fix flaky peering through mesh gateway (#16271),
355,add integration tests for troubleshoot (#16223),"  draft   expose internal admin port and add proxy test   update tests   move comment   add failure case, fix lint issues   cleanup   handle error   revert changes to service interface   address review comments   fix merge conflict   merge the tests so cluster is created once   fix other test "
356,[OSS] Post Consul 1.15 updates (#16256),  chore: update dev build to 1.16   chore(ci): add nightly 1.15 test 
357,Update index.mdx (#16247),  Update index.mdx   Update website/content/docs/connect/dataplane/index.mdx   Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com  Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
358,get clusters from route if listener uses RDS (#16243),
359,integ test: fix retry upstream test (#16246),
360,[API Gateway] Add integration test for HTTP routes (#16236),  [API Gateway] Add integration test for conflicted TCP listeners   [API Gateway] Update simple test to leverage intentions and multiple listeners   Fix broken unit test   [API Gateway] Add integration test for HTTP routes 
361,upgrade test: peering with http router config entry (#16231), upgrade test: peering with http router config entry
362,UI: CC-4032 - Update sidebar width (#16204),  Update chrome-width var to be 280px   Formatting & Changelog 
363,Bump x/time to 0.3.0 and fix related breakage linked to RPCRateLimit (#16241),  Bump x/time to 0.3.0 and fix related breakage linked to RPCRateLimit initialization   Apply limitVal(...) to other rate.Limit config fields 
364,ui: add vercel info to the ui readme (#16239),
365,[UI]: update Ember to 3.27  (#16227),  Upgrade to 3.25 via ember-cli-update   v3.25.3...v3.26.1   v3.26.1...v3.27.0   Co-authored-by: Michael Klein michael@firstiwaslike.com
366,[API Gateway] Update simple test to leverage intentions and multiple listeners (#16228),  [API Gateway] Add integration test for conflicted TCP listeners   [API Gateway] Update simple test to leverage intentions and multiple listeners   Fix broken unit test   PR suggestions 
367,Fix missing references to enterprise metadata (#16237),
368,troubleshoot: make output have tables and colors (#16235),Adds tables and colors using libraries used in consul-k8s. It doesn't add the full terminal UI package that consul-k8s uses since there is an existing UI in Consul that I didn't want to affect too much. So instead this adds to the existing UI.
369,[API Gateway] Add integration test for conflicted TCP listeners (#16225),
370,Fix peering acceptors in secondary datacenters. (#16230),"Prior to this commit, secondary datacenters could not be initialized as peering acceptors if ACLs were enabled. This is due to the fact that internal server-to-server API calls would fail because the management token was not generated. This PR makes it so that both primary and secondary datacenters generate their own management token whenever a leader is elected in their respective clusters."
371,update the api in envoyextensions and troubleshoot modules (#16226),
372,Simple API Gateway e2e test for tcp routes (#16222),  Simple API Gateway e2e test for tcp routes   Drop DNSSans since we don't front the Gateway with a leaf cert 
373,Synthesize anonymous token pre-bootstrap when needed (#16200),  add bootstrapping detail for acl errors   error detail improvements   update acl bootstrapping test coverage   update namespace errors   update test coverage   consolidate error message code and update changelog   synthesize anonymous token   Update token language to distinguish Accessor and Secret ID usage (#16044)   remove legacy tokens   remove lingering legacy token references from docs   update language and naming for token secrets and accessor IDs   updates all tokenID references to clarify accessorID   remove token type references and lookup tokens by accessorID index   remove unnecessary constants   replace additional tokenID param names   Add warning info for deprecated -id parameter   Co-authored-by: Paul Glass pglass@hashicorp.com  Update field comment  Co-authored-by: Paul Glass pglass@hashicorp.com  Co-authored-by: Paul Glass pglass@hashicorp.com   revert naming change   add testing   revert naming change    Co-authored-by: Paul Glass pglass@hashicorp.com
374,Add some fixes to allow for registering via consul connect envoy -gateway api (#16219),  Add some fixes to allow for registering via consul connect envoy -gateway api   Fix infinite recursion    Co-authored-by: Nathan Coleman nathan.coleman@hashicorp.com
375,troubleshoot basic envoy stats for an upstream (#16215),  troubleshoot basic envoy stats for an upstream   remove envoyID arg 
376,Fix typo in checks.mdx (#16187),Typo severeal -> several
377,API Gateway to Ingress Gateway Snapshot Translation and Routes to Virtual Routers and Splitters (#16127),"  Stub proxycfg handler for API gateway   Add Service Kind constants/handling for API Gateway   Begin stubbing for SDS   Add new Secret type to xDS order of operations   Continue stubbing of SDS   Iterate on proxycfg handler for API gateway   Handle BoundAPIGateway config entry subscription in proxycfg-glue   Add API gateway to config snapshot validation   Add API gateway to config snapshot clone, leaf, etc.   Subscribe to bound route + cert config entries on bound-api-gateway   Track routes + certs on API gateway config snapshot   Generate DeepCopy() for types used in watch.Map   Watch all active references on api-gateway, unwatch inactive   Track loading of initial bound-api-gateway config entry   Use proper proto package for SDS mapping   Use ResourceReference instead of ServiceName, collect resources   Fix typo, add + remove TODOs   Watch discovery chains for TCPRoute   Add TODO for updating gateway services for api-gateway   make proto   Regenerate deep-copy for proxycfg   Set datacenter on upstream ID from query source   Watch discovery chains for http-route service backends   Add ServiceName getter to HTTP+TCP Service structs   Clean up unwatched discovery chains on API Gateway   Implement watch for ingress leaf certificate   Collect upstreams on http-route + tcp-route updates   Remove unused GatewayServices update handler   Remove unnecessary gateway services logic for API Gateway   Remove outdate TODO   Use .ToIngress where appropriate, including TODO for cleaning up   Cancel before returning error   Remove GatewayServices subscription   Add godoc for handlerAPIGateway functions   Update terminology from Connect => Consul Service Mesh   Consistent with terminology changes in https://github.com/hashicorp/consul/pull/12690   Add missing TODO   Remove duplicate switch case   Rerun deep-copy generator   Use correct property on config snapshot   Remove unnecessary leaf cert watch   Clean up based on code review feedback   Note handler properties that are initialized but set elsewhere   Add TODO for moving helper func into structs pkg   Update generated DeepCopy code   gofmt   Begin stubbing for SDS   Start adding tests   Remove second BoundAPIGateway case in glue   TO BE PICKED: fix formatting of str   WIP   Fix merge conflict   Implement HTTP Route to Discovery Chain config entries   Stub out function to create discovery chain   Add discovery chain merging code (#16131)   Test adding TCP and HTTP routes   Add some tests for the synthesizer   Run go mod tidy   Pairing with N8   Run deep copy   Clean up GatewayChainSynthesizer   Fix missing assignment of BoundAPIGateway topic   Separate out synthesizeChains and toIngressTLS   Fix build errors   Ensure synthesizer skips non-matching routes by protocol   Rebase on N8s work   Generate DeepCopy() for API gateway listener types   Improve variable name   Regenerate DeepCopy() code   Fix linting issue   fix protobuf import   Fix more merge conflict errors   Fix synthesize test   Run deep copy   Add URLRewrite to proto   Update agent/consul/discoverychain/gateway_tcproute.go   Co-authored-by: Nathan Coleman nathan.coleman@hashicorp.com   Remove APIGatewayConfigEntry that was extra   Error out if route kind is unknown   Fix formatting errors in proto    Co-authored-by: Nathan Coleman nathan.coleman@hashicorp.com Co-authored-by: Andrew Stucki andrew.stucki@hashicorp.com"
378,Add basic smoke test to make sure an APIGateway runs (#16217),
379,Clean-up Gateway Controller Binding Logic (#16214),  Fix detecting when a route doesn't bind to a gateway because it's already bound   Clean up status setting code   rework binding a bit   More cleanup   Flatten all files   Fix up docstrings 
380,Merge pull request #4216 from hashicorp/NET-2252-add-assert-fortioname (#16212),NET-2252: integration tests: add assert.FortioName
381,"update troubleshoot CLI, update flags and upstreams output (#16211)","  update troubleshoot CLI, update flags and upstreams output   update troubleshoot upstreams output "
382,ACL error improvements: incomplete bootstrapping and non-existent token (#16105),  add bootstrapping detail for acl errors   error detail improvements   update acl bootstrapping test coverage   update namespace errors   update test coverage   add changelog   update message for unbootstrapped error   consolidate error message code and update changelog   logout message change 
383,troubleshoot: handle tproxy dialed directly case (#16210),
384,UI: Update padding for the content wrapper (#16209),
385,Implement APIGateway proxycfg snapshot (#16194),"  Stub proxycfg handler for API gateway   Add Service Kind constants/handling for API Gateway   Begin stubbing for SDS   Add new Secret type to xDS order of operations   Continue stubbing of SDS   Iterate on proxycfg handler for API gateway   Handle BoundAPIGateway config entry subscription in proxycfg-glue   Add API gateway to config snapshot validation   Add API gateway to config snapshot clone, leaf, etc.   Subscribe to bound route + cert config entries on bound-api-gateway   Track routes + certs on API gateway config snapshot   Generate DeepCopy() for types used in watch.Map   Watch all active references on api-gateway, unwatch inactive   Track loading of initial bound-api-gateway config entry   Use proper proto package for SDS mapping   Use ResourceReference instead of ServiceName, collect resources   Fix typo, add + remove TODOs   Watch discovery chains for TCPRoute   Add TODO for updating gateway services for api-gateway   make proto   Regenerate deep-copy for proxycfg   Set datacenter on upstream ID from query source   Watch discovery chains for http-route service backends   Add ServiceName getter to HTTP+TCP Service structs   Clean up unwatched discovery chains on API Gateway   Implement watch for ingress leaf certificate   Collect upstreams on http-route + tcp-route updates   Remove unused GatewayServices update handler   Remove unnecessary gateway services logic for API Gateway   Remove outdate TODO   Use .ToIngress where appropriate, including TODO for cleaning up   Cancel before returning error   Remove GatewayServices subscription   Add godoc for handlerAPIGateway functions   Update terminology from Connect => Consul Service Mesh   Consistent with terminology changes in https://github.com/hashicorp/consul/pull/12690   Add missing TODO   Remove duplicate switch case   Rerun deep-copy generator   Use correct property on config snapshot   Remove unnecessary leaf cert watch   Clean up based on code review feedback   Note handler properties that are initialized but set elsewhere   Add TODO for moving helper func into structs pkg   Update generated DeepCopy code   gofmt   Generate DeepCopy() for API gateway listener types   Improve variable name   Regenerate DeepCopy() code   Fix linting issue   Temporarily remove the secret type from resource generation "
386,troubleshoot: output messages for the troubleshoot proxy command (#16208),
387,Add the operator usage instances command and api endpoint (#16205),"This endpoint shows total services, connect service instances and billable service instances in the local datacenter or globally. Billable instances = total service instances - connect services - consul server instances."
388,Add additional controller implementations (#16188),  Add additional controller implementations   remove additional interface   Fix comparison checks and mark unused contexts   Switch to time.Now().UTC()   Add a pointer helper for shadowing loop variables   Extract anonymous functions for readability   clean up logging   Add Type to the Condition proto   Update some comments and add additional space for readability   Address PR feedback   Fix up dirty checks and change to pointer receiver 
389,Adding experimental support for a more efficient LogStore implementation (#16176),  Adding experimental support for a more efficient LogStore implementation   Adding changelog entry   Fix go mod tidy issues 
390,feat: envoy extension - http local rate limit (#16196), http local rate limit Apply rate limit only to local_app unit test and integ test
391,Bump github.com/prometheus/client_golang from 1.4.0 to 1.14.0 (#15292),Bumps github.com/prometheus/client_golang from 1.4.0 to 1.14.0. - Release notes - Changelog - Commits  updated-dependencies: - dependency-name: github.com/prometheus/client_golang   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] support@github.com Co-authored-by: dependabot[bot] 49699333+dependabot[bot]@users.noreply.github.com Co-authored-by: Matt Keeler mkeeler@users.noreply.github.com
392,get upstream IPs (#16197),  get upstream IPs   separate test data   fix lint issue   fix lint issue 
393,remove redundant vault api retry logic (#16143),remove redundant vault api retry logic We upgraded Vault API module version to a version that has built-in retry logic. So this code is no longer necessary. Also add mention of re-configuring the provider in comments.
394,revert method name change in xds server protocol for version compatibility (#16195),
395,Upgrade test: verify the agent token is working after upgrade (#16164), Upgraded agent can inherit the persisted token and join the cluster Agent token prior to upgrade is still valid after upgrade Enable ACL in the agent configuration
396,Update token language to distinguish Accessor and Secret ID usage (#16044),  remove legacy tokens   remove lingering legacy token references from docs   update language and naming for token secrets and accessor IDs   updates all tokenID references to clarify accessorID   remove token type references and lookup tokens by accessorID index   remove unnecessary constants   replace additional tokenID param names   Add warning info for deprecated -id parameter   Co-authored-by: Paul Glass pglass@hashicorp.com  Update field comment  Co-authored-by: Paul Glass pglass@hashicorp.com  Co-authored-by: Paul Glass pglass@hashicorp.com
397,add cert tests (#16192),
398,docs: update redirected links (#16179),
399,Add missing doc for gRPC TLS (#16161),Signed-off-by: dttung2905 ttdao.2015@accountancy.smu.edu.sg
400,exclude inbound/outbound listeners from upstreams output (#16184),
401,revert ui changes (#16180),
402,Rotate Circle CI SSH Key (#16178),
403,change log level (#16128),
404,Remove empty tags 2 (#16113),  Add support for RemoveEmptyTags in API client   Add changelog    Co-authored-by: Rémi Lapeyre remi.lapeyre@lenstra.fr
405,Net 2229/rpc reduce max retries 2 (#16165),  feat: calculate retry wait time with exponential back-off   test: add test for getWaitTime method   feat: enforce random jitter between min value from previous iteration and current   extract randomStagger to simplify tests and use Milliseconds to avoid float math.   rename variables   add test and rename comment    Co-authored-by: Poonam Jadhav poonam.jadhav@hashicorp.com
406,docs(service-resolver): clarify the default time unit in service-resolver.ConnectTimeout (#16149),  doc: clarify the default time unit in service-resolver.ConnectTimeout   Update website/content/docs/connect/config-entries/service-resolver.mdx   Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
407,NET-2087: Restart proxy sidecar during cluster upgrade (#16140),
408,Add links in release-notes for the last five patch releases (#16109),
409,docs: refine server TLS Vault PKI role config (#16166),The generate_lease=true configuration is unnecessary and generates a note about performance implications in Vault logs. Remove this configuration so that the default value of generate_lease=false is used instead.
410,Document how numRetries can't be set to 0 (#16123), Document how numRetries can't be set to 0  Resolves https://github.com/hashicorp/consul/issues/11816 and https://github.com/hashicorp/consul/issues/8516.  Update website/content/docs/connect/config-entries/service-router.mdx  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
411,refactor: remove troubleshoot module dependency on consul top level module (#16162),"Ensure nothing in the troubleshoot go module depends on consul's top level module. This is so we can import troubleshoot into consul-k8s and not import all of consul.  turns troubleshoot into a go module [authored by @curtbushko] gets the envoy protos into the troubleshoot module [authored by @curtbushko] adds a new go module envoyextensions which has xdscommon and extensioncommon folders that both the xds package and the troubleshoot package can import adds testing and linting for the new go modules moves the unit tests in troubleshoot/validateupstream that depend on proxycfg/xds into the xds package, with a comment describing why those tests cannot be in the troubleshoot package fixes all the imports everywhere as a result of these changes   Co-authored-by: Curt Bushko cbushko@gmail.com"
412,feat: client RPC is retries on ErrRetryElsewhere error and forwardRequestToLeader method retries ErrRetryLater error (#16099),
413,Set codegen-tools to be a dependency of deep-copy (#16124),  Add a little message if the user runs deep-copy without it installed   Take codegen-tools as a dependency to deep-copy 
414,Remove legacy acl policies (#15922),  remove legacy tokens   remove legacy acl policies   flatten test policies to *_prefix   address oss feedback re: phrasing and tests 
415,Update helm docs based on consul-k8s release/1.0.x branch (#16157),  docs - Docs/k8s 1.0.3 helm docs   remove openebs entry 
416,command: Fix logger not initializing properly in envoy command (#16148),
417,docs: use proxy health checks when enabled (#16033),
418,fix goroutine leak in renew testing (#16142),fix goroutine leak in renew testing Test overwrote the stopWatcher() function variable for the test without keeping and calling the original value. The original value is the function that stops the goroutine... so it needs to be called.
419,docs(service-defaults): upstream overrides for peered services (#16122),Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
420,API Gateway Controller Logic (#16058), Add initial API gateway controller logic   Co-authored-by: Nathan Coleman nathan.coleman@hashicorp.com Co-authored-by: Andrew Stucki andrew.stucki@hashicorp.com Co-authored-by: Thomas Eckert teckert@hashicorp.com
421,[OSS] Add Peer field to service-defaults upstream overrides (#15956),"  Add Peer field to service-defaults upstream overrides.   add api changes, compat mode for service default overrides   Fixes based on testing    Co-authored-by: DanStough dan.stough@hashicorp.com"
422,add assertions (#16087),
423,Use agent token for service/check deregistration during anti-entropy (#16097),"Use only the agent token for deregistration during anti-entropy The previous behavior had the agent attempt to use the ""service"" token (i.e. from the token field in a service definition file), and if that was not set then it would use the agent token. The previous behavior was problematic because, if the service token had been deleted, the deregistration request would fail. The agent would retry the deregistration during each anti-entropy sync, and the situation would never resolve. The new behavior is to only/always use the agent token for service and check deregistration during anti-entropy. This approach is:  Simpler: No fallback logic to try different tokens Faster (slightly): No time spent attempting the service token Correct: The agent token is able to deregister services on that   agent's node, because: node:write permissions allow deregistration of services/checks on     that node. The agent token must have node:write permission, or else the agent     is not be able to (de)register itself into the catalog  Co-authored-by: Vesa Hagström weeezes@gmail.com"
424,"rate: add prometheus definitions, docs, and clearer names (#15945)",
425,refactor: move service to service validation to troubleshoot package (#16132),This is to reduce the dependency on xds from within the troubleshoot package.
426,validate certs and get stats (#16139),
427,Docs: change connect to SM for mTLS page  (#16082), Update connect-internals.mdx  Removed most references for 'Connect' given the terminology has long been deprecated in official use.  Apply suggestions from code review  Co-authored-by: Blake Covarrubias blake@covarrubi.as  Update connect-internals.mdx  Updates based on Blakes recommendations  Update connect-internals.mdx   Co-authored-by: Blake Covarrubias blake@covarrubi.as Co-authored-by: Kendall Strautman 36613477+kendallstrautman@users.noreply.github.com
428,update troubleshoot CLI (#16129),
429,Ent merge move envoy extension proto (#16126),"  Mw/lambda envoy extension parse region (#4107)   updated builtin extension to parse region directly from ARN  added a unit test  added some comments/light refactoring   updated golden files with proper ARNs   ARNs need to be right format now that they are being processed   updated tests and integration tests  removed 'region' from all EnvoyExtension arguments  added properly formatted ARN which includes the same region found in the removed ""Region"" field: 'us-east-1'   regenerated proto files "
430,add troubleshoot cli (#16070),  add troubleshoot cli   fix lint issue   fix merge conflict   fix lint issue 
431,Add unit test and update golden files. (#16115),
432,NO_JIRA: Add function to get container status before making api call (#16116),
433,APIGateway HTTPRoute scaffolding (#15859),"  Stub Config Entries for Consul Native API Gateway (#15644)   Add empty InlineCertificate struct and protobuf   apigateway stubs   new files   Stub HTTPRoute in api pkg   checkpoint   Stub HTTPRoute in structs pkg   Simplify api.APIGatewayConfigEntry to be consistent w/ other entries   Update makeConfigEntry switch, add docstring for HTTPRouteConfigEntry   Add TCPRoute to MakeConfigEntry, return unique Kind   proto generated files   Stub BoundAPIGatewayConfigEntry in agent   Since this type is only written by a controller and read by xDS, it doesn't need to be defined in the api pkg   Add RaftIndex to APIGatewayConfigEntry stub   Add new config entry kinds to validation allow-list   Add RaftIndex to other added config entry stubs   fix panic   Update usage metrics assertions to include new cfg entries   Regenerate proto w/ Go 1.19   Run buf formatter on config_entry.proto   Add Meta and acl.EnterpriseMeta to all new ConfigEntry types   Remove optional interface method Warnings() for now   Will restore later if we wind up needing it   Remove unnecessary Services field from added config entry types   Implement GetMeta(), GetEnterpriseMeta() for added config entry types   Add meta field to proto, name consistently w/ existing config entries   Format config_entry.proto   Add initial implementation of CanRead + CanWrite for new config entry types   Add unit tests for decoding of new config entry types   Add unit tests for parsing of new config entry types   Add unit tests for API Gateway config entry ACLs   Return typed PermissionDeniedError on BoundAPIGateway CanWrite   Add unit tests for added config entry ACLs   Add BoundAPIGateway type to AllConfigEntryKinds   Return proper kind from BoundAPIGateway   Add docstrings for new config entry types   Add missing config entry kinds to proto def   Update usagemetrics_oss_test.go   Use utility func for returning PermissionDeniedError   Add BoundAPIGateway to proto def   Co-authored-by: Sarah Alsmiller sarah.alsmiller@hashicorp.com Co-authored-by: Nathan Coleman nathan.coleman@hashicorp.com   Add APIGateway validation   Fix comment   Add additional validations   Add cert ref validation   Add protobuf definitions   Tabs to spaces   Fix up field types   Add API structs   Move struct fields around a bit   EventPublisher subscriptions for Consul Native API Gateway (#15757)   Create new event topics in subscribe proto  Add tests for PBSubscribe func Make configs singular, add all configs to PBToStreamSubscribeRequest Add snapshot methods Add config_entry_events tests Add config entry kind to topic for new configs Add unit tests for snapshot methods Start adding integration test Test using the new controller code Update agent/consul/state/config_entry_events.go Co-authored-by: Nathan Coleman nathan.coleman@hashicorp.com  Check value of error Co-authored-by: Nathan Coleman nathan.coleman@hashicorp.com   Add controller stubs for API Gateway (#15837)   update initial stub implementation   move files, clean up mutex references   Remove embed, use idiomatic names for constructors   Remove stray file introduced in merge   Co-authored-by: Nathan Coleman nathan.coleman@hashicorp.com   Initial server-side and proto defs   drop trailing whitespace   Add APIGateway validation (#15847)   Add APIGateway validation   Fix comment   Add additional validations   Add cert ref validation   Add protobuf definitions   Tabs to spaces   Fix up field types   Add API structs   Move struct fields around a bit   APIGateway InlineCertificate validation (#15856)   Add APIGateway validation   Add additional validations   Add protobuf definitions   Tabs to spaces   Add API structs   Move struct fields around a bit   Add validation for InlineCertificate   Fix ACL test   APIGateway BoundAPIGateway validation (#15858)   Add APIGateway validation   Fix comment   Add additional validations   Add cert ref validation   Add protobuf definitions   Tabs to spaces   Fix up field types   Add API structs   Move struct fields around a bit   Add validation for BoundAPIGateway   drop trailing whitespace   APIGateway TCPRoute validation (#15855)   Add APIGateway validation   Fix comment   Add additional validations   Add cert ref validation   Add protobuf definitions   Tabs to spaces   Fix up field types   Add API structs   Move struct fields around a bit   Add TCPRoute normalization and validation   Address PR feedback   Add forgotten Status   Add some more field docs in api package   Fix test   Fix bad merge   Remove duplicate helpers   Fix up proto defs   Fix up stray changes   remove extra newline    Co-authored-by: Thomas Eckert teckert@hashicorp.com Co-authored-by: Sarah Alsmiller sarah.alsmiller@hashicorp.com Co-authored-by: Nathan Coleman nathan.coleman@hashicorp.com Co-authored-by: sarahalsmiller 100602640+sarahalsmiller@users.noreply.github.com"
434,Add a flag for enabling debug logs to the connect envoy command (#15988),  Add a flag for enabling debug logs to the connect envoy command   Update website/content/commands/connect/envoy.mdx   Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com   Add changelog note   Add debug log note to envoy proxy doc page   Update website/content/docs/connect/proxies/envoy.mdx   Co-authored-by: Kendall Strautman 36613477+kendallstrautman@users.noreply.github.com  Wording tweak in envoy bootstrap section   Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com Co-authored-by: Kendall Strautman 36613477+kendallstrautman@users.noreply.github.com
435,Add Envoy extension metrics. (#16114),
436,improvement: prevent filter being added twice from any enovy extension (#16112),  improvement: prevent filter being added twice from any enovy extension   break if error != nil   update test 
437,feat: apply retry policy to read only grpc endpoints (#16085),
438,Add extension validation on config save and refactor extensions. (#16110),
439,Update docs for tls commands (#16077),
440,Upgrade test: retain sidecar containers during upgrade. (#16100),
441,add missing field to oss struct (#16094),
442,"Changelog for Consul 1.14.4, 1.13.6, and 1.12.9 (#16098)",
443,troubleshoot: service to service validation (#16096),"  Add Tproxy support to Envoy Extensions (this is needed for service to service validation)   Add validation for Envoy configuration for an upstream service   Use both /config_dump and /cluster to validate Envoy configuration This is because of a bug in Envoy where the EndpointsConfigDump does not include a cluster_name, making it impossible to match an endpoint to verify it exists.   This removes endpoints support for builtin extensions since only the validate plugin was using it, and it is no longer used. It also removes test cases for endpoint validation. Endpoints validation now only occurs in the top level test from config_dump and clusters json files. Co-authored-by: Eric eric@haberkorn.co"
444,Add a server-only method for updating ConfigEntry Statuses (#16053),  Add a server-only method for updating ConfigEntry Statuses   Address PR feedback   Regen proto 
445,Upgrade test: peering control plane traffic through mesh gateway (#16091),
446,integ test: remove hardcoded upstream local bind port and max number of envoy sidecar (#16092),
447,Remove legacy acl tokens (#15947),  remove legacy tokens   Update test comment   Co-authored-by: Paul Glass pglass@hashicorp.com   fix imports   update docs for additional CLI changes   add test case for anonymous token   set deprecated api fields to json ignore and fix patch errors   update changelog to breaking-change   fix import   update api docs to remove legacy reference   fix docs nav data    Co-authored-by: Paul Glass pglass@hashicorp.com
448,Match route and listener protocols when binding (#16057), Add GatewayMeta for matching routes to listeners based on protocols Add GetGatewayMeta Apply suggestions from code review Co-authored-by: Nathan Coleman nathan.coleman@hashicorp.com Make GatewayMeta private Bound -> BoundGateway Document gatewayMeta more Simplify conditional Parallelize tests and simplify bind conditional gofmt :droplet: getGatewayMeta   Co-authored-by: Nathan Coleman nathan.coleman@hashicorp.com
449,Mw/lambda envoy extension parse region (#4107) (#16069)," updated builtin extension to parse region directly from ARN added a unit test  added some comments/light refactoring   updated golden files with proper ARNs   ARNs need to be right format now that they are being processed   updated tests and integration tests  removed 'region' from all EnvoyExtension arguments added properly formatted ARN which includes the same region found in the removed ""Region"" field: 'us-east-1'"
450,Fixes (#16086),
451,Add trigger for doing reconciliation based on watch sets (#16052),  Add trigger for doing reconciliation based on watch sets   update doc string   Fix my grammar fail 
452,docs: Consul at scale guide (#15890),  Initial page and nav data   Formatting   Fixes   Page description   DNS lookup fixes   admin partition link   Control Plane Resiliency rephrase   Dataplanes/xDS callout   word choice correction   Consul as Vault backend clarifications   Link to blog post on testing   Update website/content/docs/architecture/scale.mdx   Co-authored-by: Jared Kirschner 85913323+jkirschner-hashicorp@users.noreply.github.com   Update website/content/docs/architecture/scale.mdx   Apply suggestions from code review   Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com   Update website/content/docs/architecture/scale.mdx   Update website/content/docs/architecture/scale.mdx   Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com Co-authored-by: Jared Kirschner 85913323+jkirschner-hashicorp@users.noreply.github.com
453,docs: CLI page descriptions for automated checker (#16056),  ACL   ACL   Catalog   consul config   consul connect   top-level updates   consul intention   consul kv   consul namespace   consul peering   consul peering delete   consul services   consul snapshot   consul tls   consul acl auth-method   acl binding-rule   acl policy   acl role   acl token   fix   standardization   Update website/content/commands/snapshot/save.mdx   Co-authored-by: Bryce Kalow bkalow@hashicorp.com  consul debug consul keyring  Co-authored-by: Bryce Kalow bkalow@hashicorp.com Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
454,docs: update Nomad 1.14 upgrade note to detail additonal info. (#16071),Co-authored-by: James Rasell jrasell@hashicorp.com Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
455,Update service-resolver.mdx (#16073), Update service-resolver.mdx  Fixing links in the Documentation for service-resolver filter options.  Update website/content/docs/connect/config-entries/service-resolver.mdx  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
456,flaky test: use retry long to wait for config entry upgrade (#16068),  flaky test: use retry long to wait for config entry upgrade   increase wait for rbac policy 
457,feat: panic handler in rpc rate limit interceptor (#16022),  feat: handle panic in rpc rate limit interceptor   test: additional test cases to rpc rate limiting interceptor   refactor: remove unused listener 
458,Run config entry controller routines on leader (#16054),
459,Post upgrade test validation: envoy endpoint and register service (#16067),
460,docs: Migrate link formats (#15976),  Adding check-legacy-links-format workflow   Adding test-link-rewrites workflow   Updating docs-content-check-legacy-links-format hash   Migrating links to new format   Co-authored-by: Kendall Strautman kendallstrautman@gmail.com
461,test: run integration tests in parallel (#16035),
462,Warn when the token query param is used for auth (#16009),
463,docs: clarify service defaults example (#16043),
464,test: container tests wait for available networks (#16045),
465,Updating MD links in ConfigEntryReference components (#16038),
466,docs: clarify reloadable config option usage (#15957),
467,test(integration): add access logging test (#16008),
468,test: prevent the container tests from depending on consul (#16029),"The consul container tests orchestrate running containers from various versions of consul to test things like upgrades. Having the test framework itself depend on the consul codebase inherently links it to a specific version of consul which may make some test approaches in the future difficult. This change prohibits any such relationship via a custom linting rule. Unfortunately because the api, sdk, and test/integration/consul-container packages are submodules of github.com/hashicorp/consul the gomodguard linter is incapable of handling those separately hence the need for some custom bash instead."
469,Implement BindRoutesToGateways (#15950), Stub out bind code Move into a new package and flesh out binding Fill in the actual binding logic Bind to all listeners if not specified Move bind code up to gateways package Fix resource type check Add UpsertRoute to listeners Add RemoveRoute to listener Implement binding as associated functions Pass in gateways to BindRouteToGateways Add a bunch of tests Fix hopping from one listener on a gateway to another Remove parents from HTTPRoute Apply suggestions from code review Fix merge conflict Unify binding into a single variadic function :raised_hands: @nathancoleman Remove vestigial error Add TODO on protocol check
470,Update gossip.mdx (#16030),Fix description of topic. I think it was copy pasted incorrectly.
471,Apply agent partition to load services and agent api (#16024), Apply agent partition to load services and agent api  changelog
472,Fix proxy-defaults incorrectly merging config on upstreams. (#16021),
473,docs: link fixes for Envoy proxy page (#16023),"  Link path fixes   update   Revert ""update""   This reverts commit 6b3344481c501a2d8e1190e80977cc1bb7ae7ee1.  Link fixes"
474,Add support for envoy readiness flags (#16015), Add support for envoy readiness flags add flags 'envoy-ready-bind-portandenvoy-ready-bind-addr` on consul connect envoy to create a ready listener on that address.
475,Major updates and reorganizing of checks.mdx (#15806),  Major updates and reorganizing of checks.mdx   Update checks.mdx   Additional suggestion for clarity around gRPC :/service-identifier example Signed-off-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com  Update website/content/docs/discovery/checks.mdx  Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com  Update website/content/docs/discovery/checks.mdx  Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com  Update website/content/docs/discovery/checks.mdx  Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com  Update website/content/docs/discovery/checks.mdx  Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com  Update website/content/docs/discovery/checks.mdx  Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com  Update website/content/docs/discovery/checks.mdx  Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com  Update website/content/docs/discovery/checks.mdx  Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com  Update website/content/docs/discovery/checks.mdx  Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com  Update website/content/docs/discovery/checks.mdx  Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com  Update website/content/docs/discovery/checks.mdx  Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com  Update website/content/docs/discovery/checks.mdx  Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com  Update website/content/docs/discovery/checks.mdx  Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com Signed-off-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
476,Integration test for server rate limiting (#15960),  rate limit test   Have tests for the 3 modes   added assertions for logs and metrics   add comments to test sections   add check for rate limit exceeded text in log assertion section.   fix linting error   updating test to use KV get and put.  move log assertion tolast.   Adding logging for blocking messages in enforcing mode.  refactoring tests.   modified test description   formatting   Apply suggestions from code review   Co-authored-by: Dan Upton daniel@floppy.co  Update test/integration/consul-container/test/ratelimit/ratelimit_test.go  Co-authored-by: Dhia Ayachi dhia@hashicorp.com   expand log checking so that it ensures both logs are they when they are supposed to be and not there when they are not expected to be.   add retry on test   Warn once when rate limit exceed regardless of enforcing vs permissive.   Update test/integration/consul-container/test/ratelimit/ratelimit_test.go   Co-authored-by: Dan Upton daniel@floppy.co Co-authored-by: Dan Upton daniel@floppy.co Co-authored-by: Dhia Ayachi dhia@hashicorp.com
477,Native API Gateway Config Entries (#15897)," Stub Config Entries for Consul Native API Gateway (#15644) Add empty InlineCertificate struct and protobuf apigateway stubs Stub HTTPRoute in api pkg Stub HTTPRoute in structs pkg Simplify api.APIGatewayConfigEntry to be consistent w/ other entries Update makeConfigEntry switch, add docstring for HTTPRouteConfigEntry Add TCPRoute to MakeConfigEntry, return unique Kind Stub BoundAPIGatewayConfigEntry in agent Add RaftIndex to APIGatewayConfigEntry stub Add new config entry kinds to validation allow-list Add RaftIndex to other added config entry stubs Update usage metrics assertions to include new cfg entries Add Meta and acl.EnterpriseMeta to all new ConfigEntry types Remove unnecessary Services field from added config entry types Implement GetMeta(), GetEnterpriseMeta() for added config entry types Add meta field to proto, name consistently w/ existing config entries Format config_entry.proto Add initial implementation of CanRead + CanWrite for new config entry types Add unit tests for decoding of new config entry types Add unit tests for parsing of new config entry types Add unit tests for API Gateway config entry ACLs Return typed PermissionDeniedError on BoundAPIGateway CanWrite Add unit tests for added config entry ACLs Add BoundAPIGateway type to AllConfigEntryKinds Return proper kind from BoundAPIGateway Add docstrings for new config entry types Add missing config entry kinds to proto def Update usagemetrics_oss_test.go Use utility func for returning PermissionDeniedError EventPublisher subscriptions for Consul Native API Gateway (#15757) Create new event topics in subscribe proto Add tests for PBSubscribe func Make configs singular, add all configs to PBToStreamSubscribeRequest Add snapshot methods Add config_entry_events tests Add config entry kind to topic for new configs Add unit tests for snapshot methods Start adding integration test Test using the new controller code Update agent/consul/state/config_entry_events.go Check value of error Add controller stubs for API Gateway (#15837) update initial stub implementation move files, clean up mutex references Remove embed, use idiomatic names for constructors Remove stray file introduced in merge Add APIGateway validation (#15847) Add APIGateway validation Add additional validations Add cert ref validation Add protobuf definitions Fix up field types Add API structs Move struct fields around a bit APIGateway InlineCertificate validation (#15856) Add APIGateway validation Add additional validations Add protobuf definitions Tabs to spaces Add API structs Move struct fields around a bit Add validation for InlineCertificate Fix ACL test APIGateway BoundAPIGateway validation (#15858) Add APIGateway validation Add additional validations Add cert ref validation Add protobuf definitions Fix up field types Add API structs Move struct fields around a bit Add validation for BoundAPIGateway APIGateway TCPRoute validation (#15855) Add APIGateway validation Add additional validations Add cert ref validation Add protobuf definitions Fix up field types Add API structs Add TCPRoute normalization and validation Add forgotten Status Add some more field docs in api package Fix test Format imports Rename snapshot test variable names Add plumbing for Native API GW Subscriptions (#16003)  Co-authored-by: Sarah Alsmiller sarah.alsmiller@hashicorp.com Co-authored-by: Nathan Coleman nathan.coleman@hashicorp.com Co-authored-by: sarahalsmiller 100602640+sarahalsmiller@users.noreply.github.com Co-authored-by: Andrew Stucki andrew.stucki@hashicorp.com"
478,NET-2038: Add envoy assertion function of listener verification (#15969),
479,Support Vault agent auth config for AWS/GCP CA provider auth (#15970),
480,Fix configuration merging for implicit tproxy upstreams. (#16000),"Fix configuration merging for implicit tproxy upstreams. Change the merging logic so that the wildcard upstream has correct proxy-defaults and service-defaults values combined into it. It did not previously merge all fields, and the wildcard upstream did not exist unless service-defaults existed (it ignored proxy-defaults, essentially). Change the way we fetch upstream configuration in the xDS layer so that it falls back to the wildcard when no matching upstream is found. This is what allows implicit peer upstreams to have the correct ""merged"" config. Change proxycfg to always watch local mesh gateway endpoints whenever a peer upstream is found. This simplifies the logic so that we do not have to inspect the ""merged"" configuration on peer upstreams to extract the mesh gateway mode."
481,xds: don't attempt to load-balance sessions for local proxies (#15789),"Previously, we'd begin a session with the xDS concurrency limiter regardless of whether the proxy was registered in the catalog or in the server's local agent state. This caused problems for users who run consul connect envoy directly against a server rather than a client agent, as the server's locally registered proxies wouldn't be included in the limiter's capacity. Now, the ConfigSource is responsible for beginning the session and we only do so for services in the catalog. Fixes: https://github.com/hashicorp/consul/issues/15753"
482,[docs] Adjusting links for rewrite project (#15999),
483,chore: updates generated author docs (#15980),
484,chore(ci): fix compat ent compat tests for sidecars and gateways (#15997),
485,fixes pre-devdot links in service defaults ref docs (#15989),
486,Warn if ACL is enabled but no token is provided to Envoy (#15967),
487,avoid logging RPC errors when it's specific rate limiter errors (#15968),  avoid logging RPC errors when it's specific rate limiter errors   simplify if statements 
488,Enforce lowercase peer names. (#15697),"Enforce lowercase peer names. Prior to this change peer names could be mixed case. This can cause issues, as peer names are used as DNS labels in various locations. It also caused issues with envoy configuration."
489,Update TG Docs with SAN match option when using SNI (#15971),"When using SNI in Terminating Gateway, Consul configures envoy to have strict SAN matching. This requires all external services to have SANs in their certificates and not having it will throw CERTIFICATE_VERIFY_FAILED error."
490,Update go-discover to support ECS discovery (#13782),Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
491,removed Consul requirements from documentation as it may be confusing (#15958), removed Consul requirements from documentation as it may be confusing
492,test: general cleanup and fixes for the container integration test suite (#15959), remove dep on consul main module use 'consul tls' subcommands instead of tlsutil use direct json config construction instead of agent/config structs merge libcluster and libagent packages together more widely use BuildContext get the OSS/ENT runner stuff working properly reduce some flakiness fix some correctness related to http/https API
493,feat: add access logs to dataplane bootstrap rpc (#15951),
494,ui/fix linting error and failing ui test (#15953),  fix linting error   Fix the failing version test as well 
495,docs(access logs): new docs for access logging (#15948),Co-authored-by: Jared Kirschner 85913323+jkirschner-hashicorp@users.noreply.github.com Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com
496,Protobuf Modernization (#15949), Protobuf Modernization  Remove direct usage of golang/protobuf in favor of google.golang.org/protobuf Marshallers (protobuf and json) needed some changes to account for different APIs. Moved to using the google.golang.org/protobuf/types/known/* for the well known types including replacing some custom Struct manipulation with whats available in the structpb well known type package. This also updates our devtools script to install protoc-gen-go from the right location so that files it generates conform to the correct interfaces.  Fix go-mod-tidy make target to work on all modules
497,Add new config_file_service_registration token (#15828),
498,[OSS] feat: add access log config to consul envoy connect (#15946),
499,Output user-friendly name for anonymous token (#15884),
500,Rate limit improvements and fixes (#15917), Fixes a panic when Operation.SourceAddr is nil (internal net/rpc calls) Adds proper HTTP response codes (429 and 503) for rate limit errors Makes the error messages clearer Enables automatic retries for rate-limit errors in the net/rpc stack
501,emit metrics for global rate limiting (#15891),
502,docs: cluster peering upgrade clarification (#15935),
503,Update the README for the Consul API (#15936),
504,Fix issue where TLS configuration was ignored for unix sockets in consul connect envoy. (#15913),Fix issue where TLS configuration was ignored for unix sockets in consul connect envoy. Disable xds check on bootstrap mode and change check to warn only.
505,inject logger and create logdrop sink (#15822),  inject logger and create logdrop sink   init sink with an empty struct instead of nil   wrap a logger instead of a sink and add a discard logger to avoid double logging   fix compile errors   fix linter errors   Fix bug where log arguments aren't properly formatted   Move log sink construction outside of handler   Add prometheus definition and docs for log drop counter   Co-authored-by: Daniel Upton daniel@floppy.co
506,Add the Lua Envoy extension (#15906),
507,docs: fix markdown heading levels (#15912),
508,Fix usage of protoc-gen-go-binary (#15920), Fix usage of protoc-gen-go-binary Pin protoc-gen-go-binary version
509,Update example link for Consul K8s NGINX ingress controller (#15916),
510,docs: Fix link (#14890),Co-authored-by: David Yu dyu@hashicorp.com
511,Onboard consul to use new version/VERSION file and reproducible actions (#15631),  Onboard consul to use new .release/VERSION file and reproducible actions-go-build   Onboard consul to use new .release/VERSION file and reproducible actions   Onboard consul to use new .release/VERSION file and reproducible actions   fix to consul   Onboard consul to use new .release/VERSION file and reproducible actions   Onboard consul to use new .release/VERSION file and reproducible actions   Onboard consul to use new .release/VERSION file and reproducible actions   test out ent changes   just or testing   Added setup go for build ui   try removing VERSION file out of .release dir   add checkout action for build ui and update checkout version   try no -dev marker   try removing extra ldflags   test version   add back in setup-go step?   Update utils.js   read from static VERSION file   remove actions-setup go   add 1.15.0-dev   Using prepare workflow for pre-stable channel workflow   Test prepare workflow   Remove set-product-version branch from release pipeline   Use METADATA in environment   Correct env vars   Remove current branch from build trigger list   Co-authored-by: emilymianeil emilymianeil@gmail.com Co-authored-by: Sarah sthompson@hashicorp.com Co-authored-by: hc-github-team-nomad-core github-team-nomad-core@hashicorp.com Co-authored-by: emily neil 63985869+emilymianeil@users.noreply.github.com
512,Fix TLS_BadVerify test assertions on macOS (#15903),
513,grpc/acl: fix bug where ACL token was required even if disabled (#15904),Fixes a bug introduced by #15346 where we'd always require an ACL token even if ACLs were disabled because we were erroneously treating nil identity as anonymous.
514,Fix missing comment in generated enterprise rate-limit file (#15895),Fixes bug in #15564 where gofmt would strip out the generated code warning comment because it was on the same line as the build tag.
515,grpc: switch servers and retry on error (#15892),"This is the OSS portion of enterprise PR 3822. Adds a custom gRPC balancer that replicates the router's server cycling behavior. Also enables automatic retries for RESOURCE_EXHAUSTED errors, which we now get for free."
516,fix: return error when config file with unknown extension is passed (#15107),
517,Update api gateway version to latest (#15197),  Update api gateway version to latest   Update website/content/docs/api-gateway/install.mdx   update to latest apigw version 0.5.1   update consul and helm version 
518,Refactoring the peering integ test to accommodate coming changes of o… (#15885),  Refactoring the peering integ test to accommodate coming changes of other upgrade scenarios.   Add a utils package under test that contains methods to set up various test scenarios.  Deduplication: have a single CreatingPeeringClusterAndSetup replace   CreatingAcceptingClusterAndSetup and CreateDialingClusterAndSetup.  Separate peering cluster creation and server registration.   Apply suggestions from code review   Co-authored-by: Dan Stough dan.stough@hashicorp.com
519,Allow Operator Generated bootstrap token (#14437),"Add support to provide an initial token via the bootstrap HTTP API, similar to hashicorp/nomad#12520"
520,Wire up the rate limiter to net/rpc calls (#15879),
521,Update links to new get started tutorials (#15154),
522,grpc: protoc plugin for generating gRPC rate limit specifications (#15564),"Adds automation for generating the map of gRPC Method Name → Rate Limit Type used by the middleware introduced in #15550, and will ensure we don't forget to add new endpoints. Engineers must annotate their RPCs in the proto file like so: rpc Foo(FooRequest) returns (FooResponse) {   option (consul.internal.ratelimit.spec) = {     operation_type: READ,   }; } When they run make proto a protoc plugin protoc-gen-consul-rate-limit will be installed that writes rate-limit specs as a JSON array to a file called .ratelimit.tmp (one per protobuf package/directory). After running Buf, make proto will execute a post-process script that will ingest all of the .ratelimit.tmp files and generate a Go file containing the mappings in the agent/grpc-middleware package. In the enterprise repository, it will write an additional file with the enterprise-only endpoints. If an engineer forgets to add the annotation to a new RPC, the plugin will return an error like so: ``` RPC Foo is missing rate-limit specification, fix it with: import ""proto-public/annotations/ratelimit/ratelimit.proto"";  service Bar {   rpc Foo(...) returns (...) {     option (hashicorp.consul.internal.ratelimit.spec) = {       operation_type: OPERATION_READ | OPERATION_WRITE | OPERATION_EXEMPT,     };   } }  ``` In the future, this annotation can be extended to support rate-limit category (e.g. KV vs Catalog) and to determine the retry policy."
523,"grpc/acl: relax permissions required for ""core"" endpoints (#15346)","Previously, these endpoints required service:write permission on any service as a sort of proxy for ""is the caller allowed to participate in the mesh?"". Now, they're called as part of the process of establishing a server connection by any consumer of the consul-server-connection-manager library, which will include non-mesh workloads (e.g. Consul KV as a storage backend for Vault) as well as ancillary components such as consul-k8s' acl-init process, which likely won't have service:write permission. So this commit relaxes those requirements to accept any valid ACL token on the following gRPC endpoints:  hashicorp.consul.dataplane.DataplaneService/GetSupportedDataplaneFeatures hashicorp.consul.serverdiscovery.ServerDiscoveryService/WatchServers hashicorp.consul.connectca.ConnectCAService/WatchRoots"
524,fix cli string for id flag (#15695),
525,Fix issue with incorrect proxycfg watch on upstream peer-targets. (#15865),"This fixes an issue where the incorrect partition was given to the upstream target watch, which meant that failover logic would not work correctly."
526,Fix agent cache incorrectly notifying unchanged protobufs. (#15866),"Fix agent cache incorrectly notifying unchanged protobufs. This change fixes a situation where the protobuf private fields would be read by reflect.DeepEqual() and indicate data was modified. This resulted in change notifications being fired every time, which could cause performance problems in proxycfg."
527,Wire in rate limiter to  handle internal and external gRPC calls (#15857),
528,chore: fix remote docker make target (#15870),
529,[OSS] feat: access logs for listeners and listener filters (#15864),  feat: access logs for listeners and listener filters   changelog   fix integration test 
530,docs: update intentions config (#15868),
531,Expand service mesh dev docs (#15867),
532,Removed technical preview callout (#15872),
533,add extensions for local service to GetExtensionConfigurations (#15871),"This gets the extensions information for the local service into the snapshot and ExtensionConfigurations for a proxy. It grabs the extensions from config entries and puts them in structs.NodeService.Proxy field, which already is copied into the config snapshot. Also: * add EnvoyExtensions to api.AgentService so that it matches structs.NodeService"
534,[OSS] extensions: refactor PluginConfiguration into a more generic type ExtensionConfiguration (#15846), extensions: refactor PluginConfiguration into a more generic type ExtensionConfiguration  Also: * adds endpoints configuration to lambda golden tests * uses string constant for builtin/aws/lambda Co-authored-by: Eric eric@haberkorn.co
535,Rate Limit Handler - ensure rate limiting is not in the code path when not configured (#15819),  Rate limiting handler - ensure configuration has changed before modifying limiters   Updating test to validate arguments to UpdateConfig   Removing duplicate test.  Updating mock.   Renaming NullRateLimiter to NullRequestLimitsHandler   Rate Limit Handler - ensure rate limiting is not in the code path when not configured   Update agent/consul/rate/handler.go   Co-authored-by: Dhia Ayachi dhia@hashicorp.com   formatting handler.go   Rate limiting handler - ensure configuration has changed before modifying limiters   Updating test to validate arguments to UpdateConfig   Removing duplicate test.  Updating mock.   adding logging for when UpdateConfig is called but the config has not changed.   Update agent/consul/rate/handler.go   Co-authored-by: Dhia Ayachi dhia@hashicorp.com  Update agent/consul/rate/handler_test.go  Co-authored-by: Dan Upton daniel@floppy.co   modifying existing variable name based on pr feedback   updating a broken merge conflict;   Co-authored-by: Dhia Ayachi dhia@hashicorp.com Co-authored-by: Dan Upton daniel@floppy.co
536,Rate limiting handler - ensure configuration has changed before modifying limiters (#15805),  Rate limiting handler - ensure configuration has changed before modifying limiters   Updating test to validate arguments to UpdateConfig   Removing duplicate test.  Updating mock.   adding logging for when UpdateConfig is called but the config has not changed.   Update agent/consul/rate/handler.go   Co-authored-by: Dhia Ayachi dhia@hashicorp.com Co-authored-by: Dhia Ayachi dhia@hashicorp.com
537,Update service-discovery.mdx (#15832),  Update service-discovery.mdx   Update website/content/docs/concepts/service-discovery.mdx   Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com
538,Enhancement: Consul Compatibility Checking (#15818), add functions for returning the max and min Envoy major versions added an UnsupportedEnvoyVersions list removed an unused error from TestDetermineSupportedProxyFeaturesFromString  modified minSupportedVersion to use the function for getting the Min Envoy major version. Using just the major version without the patch is equivalent to using .0   added a function for executing the envoy --version command   added a new exec.go file to not be locked to unix system   added envoy version check when using consul connect envoy   added changelog entry   added docs change 
539,Fix incorrect protocol check on discovery chains with peer targets. (#15833),
540,fixed bad markdown in network segments usage (#15852),
541,Docs/network segments tutorial docs conversion (#15829),  added a NS folder and refactored main page into the overview page   added NS usage page to NS folder   updated links to NS docs   updated nav   addressed feedback from review 
542,Map net/rpc endpoints to a read/write/exempt op for rate-limiting (#15825),Also fixed TestRequestRecorder flaky tests due to loss of precision in elapsed time in the test.
543,extensions: refactor serverless plugin to use extensions from config entry fields (#15817),docs: update config entry docs and the Lambda manual registration docs Co-authored-by: Nitya Dhanushkodi nitya@hashicorp.com Co-authored-by: Eric eric@haberkorn.co
544,Error out consul connect envoy if agent explicitly disabled grpc (#15794),Co-authored-by: Paul Glass pglass@hashicorp.com
545,Add Service Mesh work stream to JIRA API call (#15845),
546,Break instead (#15844),
547,Update docs to reflect vault and consul compatibility (#15826),  update docs to reflect vault and consul compatibility   Update website/content/docs/connect/ca/vault.mdx   Co-authored-by: Jared Kirschner 85913323+jkirschner-hashicorp@users.noreply.github.com   Apply suggestions from code review   Apply suggestions from code review   Co-authored-by: Jared Kirschner 85913323+jkirschner-hashicorp@users.noreply.github.com Co-authored-by: Jared Kirschner 85913323+jkirschner-hashicorp@users.noreply.github.com
548,Add custom balancer to always remove subConns (#15701),The new balancer is a patched version of gRPC's default pick_first balancer which removes the behavior of preserving the active subconnection if a list of new addresses contains the currently active address.
549,Change field to pointer so it will be parsed as nil (#15831),
550,Add async reconciliation controller subpackage (#15534),  Add async reconciliation controller subpackage   Address initial feedback   Add tests for panic assertions   Fix comment 
551,add missing code and fix enterprise specific code (#15375),  add missing code and fix enterprise specific code   fix retry   fix flaky tests   fix linter error in test 
552,JIRA: Small fix to search plugin for JIRA issues (#15816),
553,Upgrade test: test peering upgrade from an old version of consul (#15768), upgrade test: test peering upgrade from an old version of consul  NET-1809
554,Force installation of shadow-utils for access to groupadd executable in ubi image (#15812),"Removing curl inadvertently dropped the transitive dependency on shadow-utils which is required for the groupadd executable. Since curl-minimal does not have this dependency, make it explicit as part of microdnf install."
555,add log-drop package (#15670),  add log-drop package   refactor to extract level   extract metrics   Apply suggestions from code review   Co-authored-by: Dan Upton daniel@floppy.co   fix compile errors   change to implement a log sink   fix tests to remove sleep   rename and add go docs   fix expending variadic   Co-authored-by: Dan Upton daniel@floppy.co
556,Fix curl vs curl-minimail install conflict in ubi9 image (#15808),ubi9 already has curl-minimal installed. Attempting to install curl results in a microdnf conflict and errors out.
557,"docs: update changelog from 1.14.3, 1.13.5, 1.12.8 (#15804)",
558,add .yaml extension to enable Github Actions workflow (#15799),
559,connect: Add support for ConsulResolver to specifies a filter expression (#15659), connect: Add support for ConsulResolver to specifies a filter expression
560,Deprecate -join and -join-wan (#15598),
561,Setup JIRA sync for Community Issues and PRs via Github actions (#15778), Setup JIRA sync via Github actions
562,Server side rate limiter: handle the race condition for limiters tree write in multilimiter (#15767),  change to perform all tree writes in the same go routine to avoid race condition.   rename runStoreOnce to reconcile   Apply suggestions from code review   Co-authored-by: Dan Upton daniel@floppy.co  reduce nesting  Co-authored-by: Dan Upton daniel@floppy.co
563,Pass remote addr of incoming HTTP requests through to RPC(..) calls (#15700),
564,Dockerfile: bump UBI base image to 9.1 (#15386),
565,Update compat table for ECS (#15782),
566,adding config for request_limits (#15531)," server: add placeholder glue for rate limit handler  This commit adds a no-op implementation of the rate-limit handler and adds it to the consul.Server struct and setup code. This allows us to start working on the net/rpc and gRPC interceptors and config logic.   Add handler errors   Set the global read and write limits   fixing multilimiter moving packages   Fix typo   Simplify globalLimit usage   add multilimiter and tests   exporting LimitedEntity   Apply suggestions from code review   Co-authored-by: John Murret john.murret@hashicorp.com   add config update and rename config params   add doc string and split config   Apply suggestions from code review   Co-authored-by: Dan Upton daniel@floppy.co   use timer to avoid go routine leak and change the interface   add comments to tests   fix failing test   add prefix with config edge, refactor tests   Apply suggestions from code review   Co-authored-by: Dan Upton daniel@floppy.co   refactor to apply configs for limiters under a prefix   add fuzz tests and fix bugs found. Refactor reconcile loop to have a simpler logic   make KeyType an exported type   split the config and limiter trees to fix race conditions in config update   rename variables   fix race in test and remove dead code   fix reconcile loop to not create a timer on each loop   add extra benchmark tests and fix tests   fix benchmark test to pass value to func   server: add placeholder glue for rate limit handler   This commit adds a no-op implementation of the rate-limit handler and adds it to the consul.Server struct and setup code. This allows us to start working on the net/rpc and gRPC interceptors and config logic.   Set the global read and write limits   fixing multilimiter moving packages   add server configuration for global rate limiting.   remove agent test   remove added stuff from handler   remove added stuff from multilimiter   removing unnecessary TODOs   Removing TODO comment from handler   adding in defaulting to infinite   add disabled status in there   adding in documentation for disabled mode.   make disabled the default.   Add mock and agent test   addig documentation and missing mock file.   Fixing test TestLoad_IntegrationWithFlags   updating docs based on PR feedback.   Updating Request Limits mode to use int based on PR feedback.   Adding RequestLimits struct so we have a nested struct in ReloadableConfig.   fixing linting references   Update agent/consul/rate/handler.go   Co-authored-by: Dan Upton daniel@floppy.co  Update agent/consul/config.go  Co-authored-by: Dan Upton daniel@floppy.co   removing the ignore of the request limits in JSON.  addingbuilder logic to convert any read rate or write rate less than 0 to rate.Inf   added conversion function to convert request limits object to handler config.   Updating docs to reflect gRPC and RPC are rate limit and as a result, HTTP requests are as well.   Updating values for TestLoad_FullConfig() so that they were different and discernable.   Updating TestRuntimeConfig_Sanitize   Fixing TestLoad_IntegrationWithFlags test   putting nil check in place   fixing rebase   removing change for missing error checks.  will put in another PR   Rebasing after default multilimiter config change   resolving rebase issues   updating reference for incomingRPCLimiter to use interface   updating interface   Updating interfaces   Fixing mock reference   Co-authored-by: Daniel Upton daniel@floppy.co Co-authored-by: Dhia Ayachi dhia@hashicorp.com"
567,feat: add access logging API to proxy defaults (#15780),
568,feat(ingress-gateway): support outlier detection of upstream service for ingress gateway (#15614),  feat(ingress-gateway): support outlier detection of upstream service for ingress gateway   changelog   Co-authored-by: Eric Haberkorn erichaberkorn@gmail.com
569,Fix DialedDirectly configuration for Consul dataplane. (#15760),Fix DialedDirectly configuration for Consul dataplane.
570,grpc: add rate-limiting middleware (#15550),Implements the gRPC middleware for rate-limiting as a tap.ServerInHandle function (executed before the request is unmarshaled). Mappings between gRPC methods and their operation type are generated by a protoc plugin introduced by #15564.
571,server: add placeholder glue for rate limit handler (#15539),"Adds a no-op implementation of the rate-limit handler and exposes it on the consul.Server struct. It allows us to start working on the net/rpc and gRPC interceptors and config (re)loading logic, without having to implement the full handler up-front. Co-authored-by: John Murret john.murret@hashicorp.com Co-authored-by: Dhia Ayachi dhia@hashicorp.com"
572,add changelog for enterprise 3846 (#15773),
573,Update changelog checker to handle ent-only entry (#15774),
574,agent: Fix assignment of error when auto-reloading cert and key file changes. (#15769),  Adding the setting of errors missing in config file watcher code in agent.   add changelog 
575,Add initial dev docs on config entries (#15717),
576,Fixing CLI instructions so that the installing a cluster that is embedded in the mac instructions is moved outside of the tabbed instructions. (#15736), Fixing CLI instructions so that the installing a cluster that is embedded in the mac instructions is moved outside of the tabbed instructions. Co-authored-by: boruszak jeffrey.boruszak@hashicorp.com Co-authored-by: David Yu dyu@hashicorp.com
577,Remove mention of enterprise license form (#15752),The license form is no longer available so this recommends contacting a support representative instead.
578,test: remove variable shadowing in TestDNS_ServiceLookup_ARecordLimits (#15740),
579,docs: how to launch envoy when ACLs enabled (#15497),
580,docs: Enterprise Feature Table update (#15738),  Table update   Old table re-added and alphabetized   Update website/content/docs/enterprise/index.mdx   Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
581,[OSS] security: update x/net module (#15737),Co-authored-by: Dhia Ayachi dhia@hashicorp.com
582,Remove the connect.enable_serverless_plugin agent configuration option (#15710),
583,add multilimiter and tests (#15467),"  add multilimiter and tests   exporting LimitedEntity   go mod tidy   Apply suggestions from code review   Co-authored-by: John Murret john.murret@hashicorp.com   add config update and rename config params   add doc string and split config   Apply suggestions from code review   Co-authored-by: Dan Upton daniel@floppy.co   use timer to avoid go routine leak and change the interface   add comments to tests   fix failing test   add prefix with config edge, refactor tests   Apply suggestions from code review   Co-authored-by: Dan Upton daniel@floppy.co   refactor to apply configs for limiters under a prefix   add fuzz tests and fix bugs found. Refactor reconcile loop to have a simpler logic   make KeyType an exported type   split the config and limiter trees to fix race conditions in config update   rename variables   fix race in test and remove dead code   fix reconcile loop to not create a timer on each loop   add extra benchmark tests and fix tests   fix benchmark test to pass value to func   use a separate go routine to write limiters (#15643)   use a separate go routine to write limiters   Add updating limiter when another limiter is created   fix waiter to be a ticker, so we commit more than once.   fix tests and add tests for coverage   unexport members and add tests   make UpdateConfig thread safe and multi call to Run safe   replace swith with if   fix review comments   replace time.sleep with retries   fix flaky test and remove unnecessary init   fix test races   remove unnecessary negative test case   remove fixed todo   Co-authored-by: John Murret john.murret@hashicorp.com Co-authored-by: Dan Upton daniel@floppy.co"
584,ignore mktg-.* branches for CI tests (#15651),
585,docs: Fix go-sockaddr links (#15723),
586,Flakiness test: case-cfg-splitter-peering-ingress-gateways (#15707),  integ-test: fix flaky test - case-cfg-splitter-peering-ingress-gateways   add retry peering to all peering cases   Co-authored-by: Dan Stough dan.stough@hashicorp.com
587,added link to admin partitions under K8s SM (#15718),
588,update go version to 1.19.4 (#15705),  update go version to 1.19.4   add changelog 
589,Fix local mesh gateway with peering discovery chains. (#15690),"Fix local mesh gateway with peering discovery chains. Prior to this patch, discovery chains with peers would not properly honor the mesh gateway mode for two reasons.   An incorrect target upstream ID was used to lookup the mesh gateway mode. To fix this, the parent upstream uid is now used instead of the discovery-chain-target-uid to find the intended mesh gateway mode.   The watch for local mesh gateways was never initialized for discovery chains. To fix this, the discovery chains are now scanned, and a local GW watch is spawned if: the mesh gateway mode is local and the target is a peering connection. "
590,"docs: Small docs updates, peering and K8s CNI (#15702)",
591,docs: K8s CNI namespace  (#15696),
592,connect: use -dev-no-store-token for test vaults to reduce source of flakes (#15691),"It turns out that by default the dev mode vault server will attempt to interact with the filesystem to store the provided root token. If multiple vault instances are running they'll all awkwardly share the filesystem and if timing results in one server stopping while another one is starting then the starting one will error with: Error initializing Dev mode: rename /home/circleci/.vault-token.tmp /home/circleci/.vault-token: no such file or directory  This change uses -dev-no-store-token to bypass that source of flakes. Also the stdout/stderr from the vault process is included if the test fails. The introduction of more t.Parallel use in https://github.com/hashicorp/consul/pull/15669 increased the likelihood of this failure, but any of the tests with multiple vaults in use (or running multiple package tests in parallel that all use vault) were eventually going to flake on this."
593,connect: ensure all vault connect CA tests use limited privilege tokens (#15669),"All of the current integration tests where Vault is the Connect CA now use non-root tokens for the test. This helps us detect privilege changes in the vault model so we can keep our guides up to date. One larger change was that the RenewIntermediate function got refactored slightly so it could be used from a test, rather than the large duplicated function we were testing in a test which seemed error prone."
594,Detect Vault 1.11+ import in secondary datacenters and update default issuer (#15661),"The fix outlined and merged in #15253 fixed the issue as it occurs in the primary DC. There is a similar issue that arises when vault is used as the Connect CA in a secondary datacenter that is fixed by this PR. Additionally: this PR adds support to run the existing suite of vault related integration tests against the last 4 versions of vault (1.9, 1.10, 1.11, 1.12)"
595,Update consul-k8s docs based on the consul-k8s release/1.0.x branch (#15678),
596,docs: Update Consul K8s CRDs (#15675),
597,docs: Agentless performance clarifications (#15671), Requested changes
598,Add warn log when all ACL policies are filtered out (#15632),
599,Fix broken link to Consul Dataplane index (#15660),The /index appears to result in a 404.
600,docs: clarify Vault CA provider permissions needed (#15478),
601,Clarify Vault CA changelog entry (#15662),
602,docs: fix agent catalog-services caching method (#15645), docs: fix agent catalog-services caching method
603,Fixing CLI ACL token processing unexpected precedence (#15274),  Fixing CLI ACL token processing unexpected precedence   Minor flow format and add Changelog   Fixed failed tests and improve error logging message   Add unit test cases and minor changes from code review   Unset env var once the test case finishes running   remove label FINISH 
604,docs: Correct a typo in checks.mdx (#15426), Update checks.mdx  Correcting a typo under  UDP + Interval  Update website/content/docs/discovery/checks.mdx  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
605,update docs for exp v2 licensing changes (#15563),
606,clean up go.mod (#15638),
607,integ-test: test consul upgrade from the snapshot of a running cluster (#15595),  integ-test: test consul upgrade from the snapshot of a running cluster   use Target version as default   Co-authored-by: Dan Stough dan.stough@hashicorp.com
608,chore: updates from 1.14.2 release (#15633), chore: updates from 1.14.2 release
609,CHANGELOG: add alpn config for ingress and connect proxy (#15613),
610,docs: fix typos helm install (#15625), fix typos helm install and small compat matrix change related to host ports not required any longer
611,added changelog for enterprise only change (#15621),
612,ui: Add ServerExternalAddresses to peer token create form (#15555),  ui: Add ServerExternalAddresses field to token generation   Add test for ServerExternalAddresses on peer token create   Add changelog entry   Update translations   Format hbs files   Update translations 
613,peering: better represent non-passing states during peer check flattening (#15615),"During peer stream replication we flatten checks from the source cluster and build one thin overall check to hide the irrelevant details from the consuming cluster. This flattening logic did correctly flip to non-passing if there were any non-passing checks, but WHICH status it got during that was random (warn/error). Also it didn't represent ""maintenance"" operations. There is an api package call AggregatedStatus which more correctly flattened check statuses. This PR replicated the more complete logic into the peer stream package."
614,Remove log line about server mgmt token init (#15610)," Remove log line about server mgmt token init  Currently the server management token is only being bootstrapped in the primary datacenter. That means that servers on the secondary datacenter will never have this token available, and would log this line any time a token is resolved. Bootstrapping the token in secondary datacenters will be done in a follow-up.  Add changelog entry"
615,Add support for configuring Envoys route idle_timeout   (#14340), Add idleTimeout  Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com Co-authored-by: Dhia Ayachi dhia@hashicorp.com
616,docs: Update acl-tokens.mdx (#15607),
617,Fix AWS IAM trusted identity entity_tags. (#14727),Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
618,docs: typo on cluster peering k8s  (#15602),
619,docs: Clean up k8s cluster peering instructions (#15592),
620,Add peering .service and .node DNS lookups. (#15596),Add peering .service and .node DNS lookups.
621,docs: clarify envoy proxy configuration (#15562), Specify using the service config entry to configure   service's envoy proxy add missing fields in proxy.config
622,docs: Fix language to describe clients previously ran on each node (#15580),
623,fix(peering): increase the gRPC limit to 8MB (#15503),  fix(peering): increase the gRPC limit to 50MB   changelog   update gRPC limit to 8MB 
624,Load Balancer addition (#15583),
625,docs: Update Consul K8s Release Notes to mention updates to Cluster Peering  (#15573),
626,Fix Vault managed intermediate PKI bug (#15525),
627,docs: Dataplane performance impact (#15566),  New image + performance considerations   Image related updates   Update website/content/docs/connect/dataplane/index.mdx   Co-authored-by: David Yu dyu@hashicorp.com Co-authored-by: David Yu dyu@hashicorp.com
628,chore(ci): update backport-assistant to use gh automerge (#14839),
629,[OSS] chore(ci): add auto-approve workflow for consul bot (#15533),
630,docs: add peering control plane diagrams (#15498),
631,[OSS] Add boilerplate for proto files implementing BlockableQuery (#15554),
632,update docs with mesh and proxydefaults config (#15526),
633,Use backport-compatible assertion (#15546),  Use backport-compatible assertion   Add workaround for broken apt-get 
634,Use rpcHoldTimeout to calculate blocking timeout (#15541),Adds buffer to clients so that servers have time to respond to blocking queries.
635,Snapshot agent docs updates (#15504),
636,Add changelog for snapshot agent updates (#15516),
637,fix typo in cluster peering docs (#15519),
638,docs: add retry_max agent config option (#15487),
639,Add 1.14.1 release updates. (#15514),Add post-release changes for 1.14.1 updates.
640,ServerExternalAddresses parameter clarification (#15506),
641,docs: revert peering API changes (#15505),
642,Add -grpc-ca-file and -grpc-ca-path CLI info on upgrade notes. (#15500), Add -grpc-ca-file and -grpc-ca-path CLI info on upgrade notes.
643,Support RFC 2782 for prepared query DNS lookups (#14465),Format:     _._tcp.query[.].
644,docs: remove unnecessary ent label (#15081),
645,docs: clarify TLS cipher suite config (#15203),
646,docs: formatting release notes (#15484),
647,docs: Core 1.14 and K8s 1.0 release notes  (#15416),Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
648,docs: clarify -retry-max (#15477),
649,docs(peering): peering GA ACL updates (#15366),Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com Co-authored-by: Freddy freddygv@users.noreply.github.com
650,Add Consul 1.14.0 known issue. (#15469),Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com
651,Fix issue with connect Envoy choosing incorrect TLS settings. (#15466),This commit fixes a situation where the API TLS configuration incorrectly influences the GRPC port TLS configuration for XDS.
652,docs: include upgrade path to 1.14 (#15463),
653,docs: remaining agentless docs updates (#15455),  Update servers-outside-kubernetes.mdx   Update single-dc-multi-k8s.mdx   update Vault data integration for snapshot agent   update k8s health checks page   remove all instances of controller.enabled in helm values examples   API Gateway update   Apply suggestions from code review   Co-authored-by: Riddhi Shah riddhi@hashicorp.com   Apply suggestions from code review   Apply suggestions from code review   Cleaner diagram   added change around clients to workloads   Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com Co-authored-by: boruszak jeffrey.boruszak@hashicorp.com Co-authored-by: Riddhi Shah riddhi@hashicorp.com Co-authored-by: David Yu dyu@hashicorp.com
654,Fix SDK to support older versions of Consul. (#15423),"This change was necessary, because the configuration was always generated with a gRPC TLS port, which did not exist in Consul 1.13, and would result in the server failing to launch with an error. This code checks the version of Consul and conditionally adds the gRPC TLS port, only if the version number is greater than 1.14."
655,Update docs for the release of Consul API Gateway v0.5 (#15015),"  added usage folder to organize use case docs for CAPIgw   Add peer field to MeshService configuration page   Add first pass at guide for routing to peered services   Add exception to same-datacenter restriction for referenced Consul service   Add example HTTPRoute referencing the MeshService as backendRef   Add example ServiceResolver   Add note about current ServiceResolver requirement   ServiceResolver may eventually be created implicitly by the API gateway controller, but that decision is pending.   tweaks to the usage page for routing to peered services   tweaks to the  description in the  configuration reference   resolved TO-DOs from previous iteration   Remove datacenter federation from limited support matrix   added tolerations doc   Remove note excluding k8s 1.24 since we now support it   Reorder sections to maintain alphabetical sort   Add example configuration for MeshService resource   Adjust wording + indentation of other docs   Use consistent ""example-"" prefix for resource names in example code   reframed the tolerations documentation; STILL A WIP   add helm chart documentation   removed tolerations from gwcconfig configuration model reference   Apply suggestions from code review   Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com  Apply suggestions from code review  Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com   update version to 0.5.0   Update install.mdx   added release notes for v.0.5.x   Co-authored-by: Nathan Coleman nathan.coleman@hashicorp.com Co-authored-by: Sarah Alsmiller sarah.alsmiller@hashicorp.com Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com Co-authored-by: sarahalsmiller 100602640+sarahalsmiller@users.noreply.github.com"
656,docs: Update admin-partitions.mdx (#15428), Update admin-partitions.mdx Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com
657,docs: Consul Dataplane updates for v.1.14.0 (#15384),  Consul Architecture update   Consul on Kubernetes architecture   Install Consul on Kubernetes with Helm updates   Vault as the Secrets Backend Data Integration   Kubernetes Service Mesh Overview   Terminating Gateways   Fully updated   Join external service to k8s   Consul on Kubernetes   Configure metrics for Consul on Kubernetes   Service Sync for Consul on Kubernetes   Custom Resource Definitions for Consul on k8s   Upgrading Consul on Kubernetes Components   Rolling Updates to TLS   Dataplanes diagram   Upgrade instructions   k8s architecture page updates   Update website/content/docs/k8s/connect/observability/metrics.mdx   Co-authored-by: Riddhi Shah riddhi@hashicorp.com   Update website/content/docs/architecture/index.mdx   Update website/content/docs/k8s/connect/terminating-gateways.mdx   CRDs   updating version numbers   Updated example config   Image clean up   Apply suggestions from code review   Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com  Update website/content/docs/k8s/architecture.mdx  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com  Apply suggestions from code review  Co-authored-by: Riddhi Shah riddhi@hashicorp.com Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
658,Improve language on 1.14 upgrade instructions. (#15412),
659,generate helm docs (#15443),
660,Update licensing docs to account for virtual agents. (#15398),  Update licensing docs to account for virtual agents.   Update website/content/docs/enterprise/license/overview.mdx   Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
661,docs: Include env vars in consul-dataplane reference (#15369), docs: Include env vars in consul-dataplane reference docs: Consul Dataplane bundles Envoy 1.24 docs: Consul Dataplane is no longer beta
662,docs: Consul K8s 1.0/Consul 1.14 GA Compat Matrix change (#15400), docs: 1.0 GA Compat Matrix change
663,"Detect Vault 1.11+ import, update default issuer (#15253)","Consul used to rely on implicit issuer selection when calling Vault endpoints to issue new CSRs. Vault 1.11+ changed that behavior, which caused Consul to check the wrong (previous) issuer when renewing its Intermediate CA. This patch allows Consul to explicitly set a default issuer when it detects that the response from Vault is 1.11+. Signed-off-by: Alexander Scheel alex.scheel@hashicorp.com Co-authored-by: Chris S. Kim ckim@hashicorp.com"
664,Update guidance for vault PKI CA provider (#15422),  Update guidance for vault PKI CA provider   clarify workarounds if already using vault 1.11+   Update website/content/docs/connect/ca/vault.mdx   Update website/content/docs/k8s/connect/connect-ca-provider.mdx   Update website/content/docs/k8s/deployment-configurations/vault/data-integration/connect-ca.mdx   Apply suggestions from code review   Co-authored-by: Jared Kirschner 85913323+jkirschner-hashicorp@users.noreply.github.com  add suggestion from Matt  Co-authored-by: Jared Kirschner 85913323+jkirschner-hashicorp@users.noreply.github.com
665,docs(peering): update k8s docs for GA (#15417),  docs(peering): update k8s docs for GA   fix code formatting and typo 
666,docs: add nomad incompatibility to 1.14 docs (#15397),docs: add nomad incompatibility to 1.14 docs
667,fix: clarifying error message when acquiring a lock in remote dc (#15394),  fix: clarifying error message when acquiring a lock in remote dc   Update website/content/commands/lock.mdx   Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
668,Include addresses.grpc_tls in upgrade docs. (#15408),
669,docs: make the h1 title consistent with the page_title (#15396),
670,Fix issue with formatting in upgrade notes. (#15395),
671,update compatibility matrix (#15389),
672,integ-test: remove unnecessary step since connection is already via mgw (#15381),
673,Consul 1.14 post-release updates (#15382),  Update changelog with 1.14 notes.   gomod version bumps for 1.14 release. 
674,chore(ci): exempt backport docs and ui from go tests (#14223),
675,docs: minor clarifiation to mesh gateway (#15373),  doc: minor clarifiation to mesh gateway   update h1 title of mgw for wan fed control plan traffic 
676,auto-config: relax node name validation for JWT authorization (#15370)," auto-config: relax node name validation for JWT authorization  This changes the JWT authorization logic to allow all non-whitespace, non-quote characters when validating node names. Consul had previously allowed these characters in node names, until this validation was added to fix a security vulnerability with whitespace/quotes being passed to the bexpr library. This unintentionally broke node names with characters like . which aren't related to this vulnerability.  Update website/content/docs/agent/config/cli-flags.mdx  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com"
677,Fixes broken links (#15343),Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
678,Leadership transfer cmd (#14132),  add leadership transfer command   add RPC call test (flaky)   add missing import   add changelog   add command registration   Apply suggestions from code review   Co-authored-by: Matt Keeler mkeeler@users.noreply.github.com   add the possibility of providing an id to raft leadership transfer. Add few tests.   delete old file from cherry pick   rename changelog filename to PR #   rename changelog and fix import   fix failing test   check for OperatorWrite   Co-authored-by: Matt Keeler mkeeler@users.noreply.github.com   rename from leader-transfer to transfer-leader   remove version check and add test for operator read   move struct to operator.go   first pass   add code for leader transfer in the grpc backend and tests   wire the http endpoint to the new grpc endpoint   remove the RPC endpoint   remove non needed struct   fix naming   add mog glue to API   fix comment   remove dead code   fix linter error   change package name for proto file   remove error wrapping   fix failing test   add command registration   add grpc service mock tests   fix receiver to be pointer   use defined values   Co-authored-by: Matt Keeler mkeeler@users.noreply.github.com   reuse MockAclAuthorizer   add documentation   remove usage of external.TokenFromContext   fix failing tests   fix proto generation   Apply suggestions from code review   Co-authored-by: Jared Kirschner 85913323+jkirschner-hashicorp@users.noreply.github.com  Apply suggestions from code review  Co-authored-by: Jared Kirschner 85913323+jkirschner-hashicorp@users.noreply.github.com  Apply suggestions from code review  Co-authored-by: Jared Kirschner 85913323+jkirschner-hashicorp@users.noreply.github.com   Apply suggestions from code review   add more context in doc for the reason   Apply suggestions from docs code review   Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com   regenerate proto   fix linter errors   Co-authored-by: github-team-consul-core github-team-consul-core@hashicorp.com Co-authored-by: Matt Keeler mkeeler@users.noreply.github.com Co-authored-by: Jared Kirschner 85913323+jkirschner-hashicorp@users.noreply.github.com Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com
679,Remove unnecessary default test config. (#15361),
680,Peering Mesh Gateway Updates for GA (#15344), docs(peering): remove beta references  Co-authored-by: hc-github-team-consul-core github-team-consul-core@hashicorp.com Co-authored-by: Eric Haberkorn erichaberkorn@gmail.com Co-authored-by: Derek Menteer 105233703+hashi-derek@users.noreply.github.com
681,docs(peering): remove beta references (#15340), docs(peering): remove beta references
682,Ensure that NodeDump imported nodes are filtered (#15356),
683,add changelog (#15351),
684,Fixup authz for data imported from peers (#15347),"There are a few changes that needed to be made to to handle authorizing reads for imported data:   If the data was imported from a peer we should not attempt to read the   data using the traditional authz rules. This is because the name of   services/nodes in a peer cluster are not equivalent to those of the   importing cluster.   If the data was imported from a peer we need to check whether the   token corresponds to a service, meaning that it has service:write   permissions, or to a local read only token that can read all   nodes/services in a namespace.   This required changes at the policyAuthorizer level, since that is the only view available to OSS Consul, and at the enterprise partition/namespace level."
685,connect: strip port from DNS SANs for ingress gateway leaf cert (#15320),  connect: strip port from DNS SANs for ingress gateway leaf cert   connect: format DNS SANs in CreateCSR   connect: Test wildcard case when formatting SANs 
686,Add changelog (#15327),
687,Prevent serving TLS via ports.grpc (#15339),"Prevent serving TLS via ports.grpc We remove the ability to run the ports.grpc in TLS mode to avoid confusion and to simplify configuration. This breaking change ensures that any user currently using ports.grpc in an encrypted mode will receive an error message indicating that ports.grpc_tls must be explicitly used. The suggested action for these users is to simply swap their ports.grpc to ports.grpc_tls in the configuration file. If both ports are defined, or if the user has not configured TLS for grpc, then the error message will not be printed."
688,"Revert ""Add test coverage comments to PRs (#15183)"" (#15341)",This reverts commit 4870c4cae90fc13b15e834c338d3a508cea23963.
689,Add test coverage comments to PRs (#15183),"  add test coverage comments to PRs   [skip ci] update test coverage   [skip ci] add .gitattributes to avoid merge conflicts with test coverage   exempt main and release branches from coverage job   [skip ci] update test coverage   [skip ci] update test coverage   clean up debug line, exit early if missing files   [skip ci] update test coverage   extract repository into variable to make porting to ENT easier   [skip ci] update test coverage   Co-authored-by: hc-github-team-consul-core github-team-consul-core@hashicorp.com"
690,[OSS] fix: wait and try longer to peer through mesh gw (#15328),
691,removes ioutil usage everywhere which was deprecated in go1.16 (#15297)," update go version to 1.18 for api and sdk, go mod tidy removes ioutil usage everywhere which was deprecated in go1.16 in favour of io and os packages. Also introduces a lint rule which forbids use of ioutil going forward. Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com"
692,Add peering incompatibility warning to upgrade docs. (#15319),
693,update ACLs for cluster peering (#15317),  update ACLs for cluster peering   add changelog   Update .changelog/15317.txt   Co-authored-by: Eric Haberkorn erichaberkorn@gmail.com Co-authored-by: Eric Haberkorn erichaberkorn@gmail.com
694,Add description for anon token policy (#15311),
695,[COMPLIANCE] Update MPL-2.0 LICENSE (#14964),Co-authored-by: hashicorp-copywrite[bot] 110428419+hashicorp-copywrite[bot]@users.noreply.github.com
696,"update config defaults, add docs (#15302)","  update config defaults, add docs   update grpc tls port for non-default values   add changelog   Update website/content/docs/upgrading/upgrade-specific.mdx   Co-authored-by: Derek Menteer 105233703+hashi-derek@users.noreply.github.com  Update website/content/docs/agent/config/config-files.mdx  Co-authored-by: Derek Menteer 105233703+hashi-derek@users.noreply.github.com   update logic for setting grpc tls port value   move default config to default.go, update changelog   update docs   Fix config tests.   Fix linter error.   Fix ConnectCA tests.   Cleanup markdown on upgrade notes.   Co-authored-by: Derek Menteer 105233703+hashi-derek@users.noreply.github.com Co-authored-by: Derek Menteer derek.menteer@hashicorp.com"
697,Log Warnings When Peering With Mesh Gateway Mode None (#15304),warn when mesh gateway mode is set to none for peering
698,Fix mesh gateway configuration with proxy-defaults (#15186),"  Fix mesh gateway proxy-defaults not affecting upstreams.   Clarify distinction with upstream settings   Top-level mesh gateway mode in proxy-defaults and service-defaults gets merged into NodeService.Proxy.MeshGateway, and only gets merged with the mode attached to an an upstream in proxycfg/xds.  Fix mgw mode usage for peered upstreams  There were a couple issues with how mgw mode was being handled for peered upstreams. For starters, mesh gateway mode from proxy-defaults and the top-level of service-defaults gets stored in NodeService.Proxy.MeshGateway, but the upstream watch for peered data was only considering the mesh gateway config attached in NodeService.Proxy.Upstreams[i]. This means that applying a mesh gateway mode via global proxy-defaults or service-defaults on the downstream would not have an effect. Separately, transparent proxy watches for peered upstreams didn't consider mesh gateway mode at all. This commit addresses the first issue by ensuring that we overlay the upstream config for peered upstreams as we do for non-peered. The second issue is addressed by re-using setupWatchesForPeeredUpstream when handling transparent proxy updates. Note that for transparent proxies we do not yet support mesh gateway mode per upstream, so the NodeService.Proxy.MeshGateway mode is used.  Fix upstream mesh gateway mode handling in xds  This commit ensures that when determining the mesh gateway mode for peered upstreams we consider the NodeService.Proxy.MeshGateway config as a baseline. In absense of this change, setting a mesh gateway mode via proxy-defaults or the top-level of service-defaults will not have an effect for peered upstreams.  Merge service/proxy defaults in cfg resolver  Previously the mesh gateway mode for connect proxies would be merged at three points:  On servers, in ComputeResolvedServiceConfig. On clients, in MergeServiceConfig. On clients, in proxycfg/xds.  The first merge returns a ServiceConfigResponse where there is a top-level MeshGateway config from proxy/service-defaults, along with per-upstream config. The second merge combines per-upstream config specified at the service instance with per-upstream config specified centrally. The third merge combines the NodeService.Proxy.MeshGateway config containing proxy/service-defaults data with the per-upstream mode. This third merge is easy to miss, which led to peered upstreams not considering the mesh gateway mode from proxy-defaults. This commit removes the third merge, and ensures that all mesh gateway config is available at the upstream. This way proxycfg/xds do not need to do additional overlays.  Ensure that proxy-defaults is considered in wc  Upstream defaults become a synthetic Upstream definition under a wildcard key ""*"". Now that proxycfg/xds expect Upstream definitions to have the final MeshGateway values, this commit ensures that values from proxy-defaults/service-defaults are the default for this synthetic upstream.  Add changelog.  Co-authored-by: freddygv freddy@hashicorp.com"
699,docs: fix links in ent-license faq (#15242),
700,chore: remove unused argument from MergeNodeServiceWithCentralConfig (#15024),"Previously, the MergeNodeServiceWithCentralConfig method accepted a ServiceSpecificRequest argument, of which only the Datacenter and QueryOptions fields were used. Digging a little deeper, it turns out these fields were only passed down to the ComputeResolvedServiceConfig method (through the ServiceConfigRequest struct) which didn't actually use them. As such, not all call-sites passed a valid ServiceSpecificRequest so it's safer to remove the argument altogether to prevent future changes from depending on it."
701,Update dns-tools-compare.mdx (#15287),Corrected the markdown to correctly display the link
702,Bring back parameter ServerExternalAddresses in GenerateToken endpoint (#15267),Re-add ServerExternalAddresses parameter in GenerateToken endpoint This reverts commit 5e156772f6a7fba5324eb6804ae4e93c091229a6 and adds extra functionality to support newer peering behaviors.
703,docs: Admin Partition clarification for cluster peering (#15281),  Updates   datcenter statement   cluster peering page addition   typo fix   Update website/content/docs/enterprise/admin-partitions.mdx   Update website/content/docs/enterprise/admin-partitions.mdx   Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
704,Update api package exported services comment. (#15285),
705,fix(mesh-gateway): remove deregistered service from mesh gateway (#15272),  fix(mesh-gateway): remove deregistered service from mesh gateway   changelog   Co-authored-by: Derek Menteer 105233703+hashi-derek@users.noreply.github.com Co-authored-by: Evan Culver eculver@users.noreply.github.com
706,Avoid blocking child type updates on parent ack (#15083),
707,Backport test fix from ent. (#15279),
708,Update hcp-scada-provider to fix diamond dependency problem with go-msgpack (#15185),
709,test: fix envoy integration tests to explicitly create config entries (#15269),This is instead of the current behavior where we feed the config entries in using the config_entries.bootstrap configuration which oddly races against other setup code in some circumstances. I converted ALL tests to explicitly create config entries.
710,Fix a bug in mesh gateway proxycfg where ACL tokens aren't passed. (#15273),
711,docs: cluster peering docs feedback (#15268), docs: cluster peering docs feedback  Co-authored-by: Nathan Coleman nathan.coleman@hashicorp.com
712,fix: persist peering CA updates to dialing clusters (#15243),fix: persist peering CA updates to dialing clusters
713,Backport tests from ent. (#15260), Backport agent tests.  Original commit: 0710b2d12fb51a29cedd1119b5fb086e5c71f632 Original commit: aaedb3c28bfe247266f21013d500147d8decb7cd (partial)  Backport test fix and reduce flaky failures.
714,"Backport test from ENT: ""Fix missing test fields"" (#15258)"," Backport test from ENT: ""Fix missing test fields""  Original Author: Sarah Pratt Original Commit: a5c88bef7a969ea5d06ed898d142ab081ba65c69  Update with proper linting."
715,Backport various fixes from ENT. (#15254),"  Regenerate golden files.   Backport from ENT: ""Avoid race""   Original commit: 5006c8c858b0e332be95271ef9ba35122453315b Original author: freddygv  Backport from ENT: ""chore: fix flake peerstream test""  Original commit: b74097e7135eca48cc289798c5739f9ef72c0cc8 Original author: DanStough"
716,convert stream status time fields to pointers (#15252),
717,docs: Update consul-dataplane docs for post-beta (#15177), Update Consul Dataplane CLI reference Add new page for Consul Dataplane telemetry Add server_type label to agent grpc metrics Callout Consul Dataplane in Envoy bootstrap configuration section Update consul-dataplane unsupported features  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com Co-authored-by: Riddhi Shah riddhi@hashicorp.com
718,Added check for empty peeringsni in restrictPeeringEndpoints (#15239),Add check for empty peeringSNI in restrictPeeringEndpoints Co-authored-by: Derek Menteer derek.menteer@hashicorp.com
719,integ test: reduce flakiness due to compound output from retry (#15233),  integ test: avoid flakiness due to compound output from retry   changelog 
720,Prevent peering acceptor from subscribing to addr updates. (#15214),
721,test: refactor testcontainers and add peering integ tests (#15084),
722,Regenerate test certificates. (#15218),Regenerate test certificates
723,Update required Helm chart version to match APIGW release notes (#15168),
724,Decrease retry time for failed peering connections.,
725,test: fix flaky TestSubscribeBackend_IntegrationWithServer_DeliversAllMessages test (#15195),"Allow for some message duplication in subscription events during assertions. I'm pretty sure the subscriptions machinery allows for messages to occasionally be duplicated instead of dropping them, as a once-and-only-once queue is a pipe dream and you have to pick one of the other two options."
726,"connect: Add Envoy 1.24 to integration tests, remove Envoy 1.20 (#15093)",
727,Allow peering endpoints to bypass verify_incoming.,
728,Add tests.,
729,Fix peered service protocols using proxy-defaults.,
730,build: ensure 'make dev-docker' also produces a matching CLI binary at the same time (#15188),
731,Merge pull request #15187 from hashicorp/nathancoleman-patch-1,Fix broken link in Consul API Gateway docs
732,Fix broken link in Consul API Gateway docs,
733,build: ensure 'make dev-docker' updates consul-dev:latest too (#15176),Fixes a minor regression from #14222
734,Fix peering metrics bug (#15178),This bug was caused by the peering health metric being set to NaN.
735,Merge pull request #15153 from hashicorp/ui/chore/update-icons-to-use-flight-icons-component,ui: update icons to use flight icons component
736,Replace main consul logo with FlightIcon,
737,Format index template,
738,Merge pull request #15159 from hashicorp/ui/fix-peered-service-not-unique-based-on-peer,ui: Fix PeerName is part of service uniqueness
739,Merge pull request #15158 from hashicorp/ui/improve-layout-address-list-peer-detail,ui: Improve layout address list peer detail
740,Allow consul debug on non-ACL consul servers (#15155),
741,Format intentions table hbs template,
742,Replace k8s informed action with flight icon,
743,fix(peering): nil pointer in calling handleUpdateService (#15160),  fix(peering): nil pointer in calling handleUpdateService   changelog 
744,Fix PeerName is part of service uniqueness,We need to make a PeerName part of a the service id when present. This makes sure that peers can export services named the same as other peers but have the UI still treat them as separate services.
745,Merge pull request #15156 from hashicorp/ui/peer-create-redirect-to-show,ui: peer create redirect to show
746,Remove consul logo icons,
747,Update iconography documentation,
748,Improve layout address list peer detail,
749,Merge pull request #15148 from hashicorp/ui/update-hds-usage-best-practices,UI: update hds usage to hds best practices
750,Remove shadow-template/host and related components,
751,Remove template log,
752,Redirect to peers.show after establishing peering,
753,Prettify peers.index template,
754,prettify peer/initiate form,
755,Add back logo-consul-color,
756,Remove some icons,
757,fix bug that resulted in generating Envoy configs that use CDS with an EDS configuration (#15140),
758,Use FlightIcon component for k8s type select in authmethods,
759,ingress-gateways: don't log error when registering gateway (#15001)," ingress-gateways: don't log error when registering gateway  Previously, when an ingress gateway was registered without a corresponding ingress gateway config entry, an error was logged because the watch on the config entry returned a nil result. This is expected so don't log an error."
760,config entry: hardcode proxy-defaults name as global (#14833)," config entry: hardcode proxy-defaults name as global  proxy-defaults can only have the name global. Because of this, we support not even setting the name in the config file: kind = ""proxy-defaults"" Previously, writing this would result in the output: Config entry written: proxy-defaults/ Now it will output: Config entry written: proxy-defaults/global This change follows what was done for the new Mesh config entry."
761,Format auth method search bar template,
762,Set the color to black for vault,
763,autoencrypt: helpful error for clients with wrong dc (#14832)," autoencrypt: helpful error for clients with wrong dc  If clients have set a different datacenter than the servers they're connecting with for autoencrypt, give a helpful error message."
764,Share code with new icons for sources select,
765,Update hds-docs with custom utility class,
766,cache: refactor agent cache fetching to prevent unnecessary fetches on error (#14956),"This continues the work done in #14908 where a crude solution to prevent a goroutine leak was implemented. The former code would launch a perpetual goroutine family every iteration (+1 +1) and the fixed code simply caused a new goroutine family to first cancel the prior one to prevent the leak (-1 +1 == 0). This PR refactors this code completely to:  make it more understandable remove the recursion-via-goroutine strangeness prevent unnecessary RPC fetches when the prior one has errored.  The core issue arose from a conflation of the entry.Fetching field to mean:  there is an RPC (blocking query) in flight right now there is a goroutine running to manage the RPC fetch retry loop  The problem is that the goroutine-leak-avoidance check would treat Fetching like (2), but within the body of a goroutine it would flip that boolean back to false before the retry sleep. This would cause a new chain of goroutines to launch which #14908 would correct crudely. The refactored code uses a plain for-loop and changes the semantics to track state for ""is there a goroutine associated with this cache entry"" instead of the former. We use a uint64 unique identity per goroutine instead of a boolean so that any orphaned goroutines can tell when they've been replaced when the expiry loop deletes a cache entry while the goroutine is still running and is later replaced."
767,Update icon-map to work for auth methods,
768,Use HDS utilities instead of tailwind peer details,
769,Update HDS docs,
770,Disable custom color utilities based on hds colors,We want to use the utility classes that HDS provides instead.
771,Merge pull request #15113 from hashicorp/ui/fix-auto-import-public-url,ui: fix - customize ember-auto-import publicAssetURL in production
772,test: ensure that all dependencies in a test agent use the test logger (#14996),
773,Merge pull request #15142 from hashicorp/docs/update-changelog-vault-ca-provider-improvement,changelog: update Vault CA provider policy guidance
774,Merge pull request #15141 from hashicorp/docs/upgrade-vault-ca-provider-policy-guidance,docs: update Vault CA provider policy guidance
775,changelog: update Vault CA provider policy guidance,
776,docs: update Vault CA provider policy guidance,
777,Ignore ioutil linter messages,
778,Remove rsyslog from CI steps,The service was never successfully running and did not fail any tests
779,Fix build-date.sh reference,https://discuss.circleci.com/t/circle-working-directory-doesnt-expand/17007
780,Remove invalid 1xx HTTP codes,"These tests started failing in go1.19, presumably due to support for valid 1xx responses being added. https://github.com/golang/go/issues/56346"
781,Regenerate files according to 1.19.2 formatter,
782,Add changelog,
783,Update go version to 1.19,
784,fix(peering): replicating wan address (#15108),  fix(peering): replicating wan address   add changelog   unit test 
785,Use FlightIcon component for external sources,
786,proxycfg: watch service-defaults config entries (#15025),"To support Destinations on the service-defaults (for tproxy with terminating gateway), we need to now also make servers watch service-defaults config entries."
787,Move oss-only test to its own file,
788,test: fix flaky TestHealthServiceNodes_NodeMetaFilter by waiting until the streaming subsystem has a valid grpc connection (#15019),Also potentially unflakes TestHealthIngressServiceNodes for similar reasons.
789,chore: update golangci-lint to v1.50.1 (#15022),
790,Update error message when restoring ENT snapshot in OSS (#15066),
791,Merge pull request #15028 from hashicorp/docs/auto-cert-1-13-2,Update upgrade docs for 1.13.2.
792,fix: customize eai publicAssetURL in production,The lib/startup-addon is used to create a custom index.html page to boot up the app. Because this is a custom approach and we aren't relying on setting rootURL to a different value when running the app in production we need to set publicAssetURL in the configuration we pass to ember-auto-import. Reference: https://github.com/ef4/ember-auto-import/blob/9a2887f1d09c1df2a41d7e6800820ba23183365e/docs/upgrade-guide-2.0.md#quick-summary
793,Update website/content/docs/upgrading/upgrade-specific.mdx,
794,Update website/content/docs/upgrading/upgrade-specific.mdx,Co-authored-by: Jared Kirschner 85913323+jkirschner-hashicorp@users.noreply.github.com
795,Update website/content/docs/upgrading/upgrade-specific.mdx,Co-authored-by: Jared Kirschner 85913323+jkirschner-hashicorp@users.noreply.github.com
796,docs: update versions to include .x in release notes (#15104),
797,Merge pull request #15032 from hashicorp/docs/mgw-primary-upgrade,
798,Update website/content/docs/connect/gateways/mesh-gateway/wan-federation-via-mesh-gateways.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
799,Clarify how addresses are propagated,
800,Relax start version requirement,
801,Update website/content/docs/connect/gateways/mesh-gateway/wan-federation-via-mesh-gateways.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
802,Update website/content/docs/upgrading/upgrade-specific.mdx,Co-authored-by: Jared Kirschner 85913323+jkirschner-hashicorp@users.noreply.github.com
803,Update website/content/docs/upgrading/upgrade-specific.mdx,Co-authored-by: Jared Kirschner 85913323+jkirschner-hashicorp@users.noreply.github.com
804,Update website/content/docs/upgrading/upgrade-specific.mdx,Co-authored-by: Jared Kirschner 85913323+jkirschner-hashicorp@users.noreply.github.com
805,Merge pull request #14813 from hashicorp/docs/1-10-upgrade-compatibility-clarification,docs: clarify 1.10 upgrade compatibility
806,chore: update main for release/1.14.x branch,
807,cli/sdk: Allow redirection to a different consul dns port (#15050),
808,"builds: fix ""Killed"" error with make dev (#15003)","Previously, I would sometimes get Killed errors when executing the binary created by make dev. This is because we were using cp and OSX has a bug where it caches the old signature and so doesn't allow the new binary to run (see https://apple.stackexchange.com/a/428388)"
809,Merge pull request #15086 from hashicorp/peering/establish-forbidden,
810,docs: clarify 1.10 upgrade compatibility,
811,Merge pull request #15085 from hashicorp/ui/feature/net-889-prepopulate-partition-sso-login,ui: NET-889 pre-populate partition SSO login
812,Merge pull request #15045 from hashicorp/docs/fix-recently-broken-links,Docs/fix recently broken links
813,docs: use standard links in ent callout,
814,Return forbidden on permission denied,This commit updates the establish endpoint to bubble up a 403 status code to callers when the establishment secret from the token is invalid. This is a signal that a new peering token must be generated.
815,Remove extra partition test,
816,integration test: specify image name for testing dev container (#15069),  integration test: specify image name for testing dev container   Add todo 
817,Merge pull request #15080 from hashicorp/docs/fix-type-service-reg,fixed broken link/typo in service mesh reg page
818,Update go mod file for api package.,
819,Update changelog for release.,
820,fixed broken link/typo in service mesh reg page,
821,Merge pull request #15068 from hashicorp/kisunji/update-gomemdb,Update go-memdb to fix a goroutine leak
822,Update expected encoding in test,"go-memdb was updated in v1.3.3 to make integers in indexes sortable, which changed how integers were encoded."
823,Add changelog,
824,Update go-memdb to fix a goroutine leak,
825,Merge pull request #15063 from hashicorp/update-redhat-tag,[CI-only] Update RedHat registry tag
826,Merge pull request #14166 from nickwales/main,Typo fix
827,docker: update redhat_tag,
828,Merge pull request #15023 from hashicorp/ui/fix/token-secret-id-handling,ui: Fix token in cookie passthrough
829,Merge pull request #15065 from hashicorp/gh-15051-advertise_addr_wan,
830,Pre-populate partition on sso login,
831,Use plain TaggedAddressWAN,
832,Add unit test,
833,changelog,
834,fix: wan address isn't used by peering token,
835,Merge pull request #15064 from hashicorp/curtbushko/update-envoy-bootstrap,update prometheus template args
836,Update command/connect/envoy/bootstrap_tpl.go,Co-authored-by: Paul Glass pglass@hashicorp.com
837,update prometheus template args,
838,[CI-only] Update RedHat registry tag,"There are a few changes being made to RedHat's registry on October 20, 2022 that affect the way images need to be tagged prior to being pushed to the registry. This PR changes the tag to conform to the new standard.  We have other work queued up in crt-workflows-common and actions-docker-build to support the other required changes.  This PR should be merged to main and all release branches on or after October 20, 2022, and MUST be merged before your next production release. Otherwise, the automation to push to the RedHat registry will not work.  A detailed list of changes shared from RedHat (as an FYI): The following changes will occur for container certification projects that leverage the Red Hat hosted registry [registry.connect.redhat.com] for image distribution:   All currently published images are migrating to a NEW, Red Hat hosted quay registry. Partners do not have to do anything for this migration, and this will not impact customers. The registry will still utilize registry.connect.redhat.com as the registry URL.   The registry URL currently used to push, tag, and certify images, as well as the registry login key, will change. You can see these changes under the “Images” tab of the container certification project. You will now see a quay.io address and will no longer see scan.connect.redhat.com.   Partners will have the opportunity to auto-publish images by selecting “Auto-publish” in the Settings tab of your certification project. This will automatically publish images that pass all certification tests.   For new container image projects, partners will have the option to host within their own chosen image registry while using registry.connect.redhat.com as a proxy address. This means the end user can authenticate to the Red Hat registry to pull a partner image without having to provide additional authentication to the partner’s registry. "
839,Remove ability to specify external addresses in GenerateToken endpoint (#14930)," Reverts ""update generate token endpoint to take external addresses (#13844)""  This reverts commit f47319b7c6b6e7c7dd720a5af927ad2d33fa536d."
840,Merge pull request #14971 from hashicorp/ui/feature/agentless-nodes-banner,ui: agentless nodes notice banner banner
841,chore: fix the module path to align with the code structure (#15053),
842,Cleanup app boot by using hcp service,
843,Encapsulate hcp related logic in service,
844,Fix TokenSecretID-handling,
845,Add tests for TokenSecretID handling,
846,Merge pull request #15036 from hashicorp/update-ent-license-link,Update enterprise license link
847,Merge pull request #15035 from hashicorp/vault-ttl-update-warn,Warn instead of returning error when missing intermediate mount tune permissions
848,Merge pull request #14974 from hashicorp/ui/chore/enable-synthetic-nodes-in-mock-data,ui: enable synthetic nodes in mock data
849,Remove unused methods from template,
850,peering: skip registering duplicate node and check from the peer (#14994),"  peering: skip register duplicate node and check from the peer   Prebuilt the nodes map and checks map to avoid repeated for loop   use key type to struct: node id, service id, and check id "
851,docs: fix api docs anchor links,
852,Enable synthetic nodes in mock data via env var,
853,docs: fix ent feature matrix links,
854,Merge pull request #15033 from hashicorp/docs/fix-front-matter-typo,Docs/fix front matter typo
855,test: possibly fix flaky TestEnvoy/case-ingress-gateway-multiple-services test (#15034),The integration test TestEnvoy/case-ingress-gateway-multiple-services is flaky and this possibly reduces the flakiness by explicitly waiting for services to show up in the catalog as healthy before waiting for them to show up in envoy as healthy which gives it just a bit more time to sync.
856,Refactor client RPC timeouts (#14965),Fix an issue where rpc_hold_timeout was being used as the timeout for non-blocking queries. Users should be able to tune read timeouts without fiddling with rpc_hold_timeout. A new configuration rpc_read_timeout is created. Refactor some implementation from the original PR 11500 to remove the misleading linkage between RPCInfo's timeout (used to retry in case of certain modes of failures) and the client RPC timeouts.
857,Warn instead of returning an error when intermediate mount tune permission is missing,
858,Call super with arguments to safeguard against future changes,
859,Update enterprise license link,
860,Update yarn lockfile,
861,clarification that Consul K8s in these instructions refers to the the CLI tool,
862,Fixup links,
863,Add docs about upgrading primary mesh gateways,"Care must be taken when replacing mesh gateways in the primary datacenter, because if the old addresses become unreachable before the secondary datacenters receive the new addresses then the primary datacenter overall will become unreachable. This commit adds docs related to this class of upgrades."
864,removed quotation marks around front matter and revised the introduction,
865,test: possibly fix flake in TestIntentionGetExact (#15021),Restructure test setup to be similar to TestAgent_ServerCertificate and see if that's enough to avoid flaking after join.
866,Update upgrade docs for 1.13.2.,"In 1.13.2 we added a new flag called use_auto_cert to address issues previously documented in the upgrade guide. Originally there was no way to disable TLS for gRPC when auto-encrypt was in use, because TLS was enabled for gRPC due to the presence of auto-encrypt certs. As of 1.13.2, using auto-encrypt certs as the signal to enable TLS for gRPC is opt-in only. Meaning that if anyone who had upgraded to 1.13 relied on that side-effect, they now need to explicitly configure it."
867,Use local-storage service to manage localStorage,"Use local-storage service, prototyped here https://github.com/LevelbossMike/local-storage-service, to manage local storage usage in an octane way. Does not write to local storage in tests by default and is easy to stub out."
868,bump relevant modules versions (#14972),
869,Improve testability env-service,
870,Support auth method with snapshot agent [ENT] (#15020),Port of hashicorp/consul-enterprise#3303
871,cache: prevent goroutine leak in agent cache (#14908),"There is a bug in the error handling code for the Agent cache subsystem discovered:   NotifyCallback calls notifyBlockingQuery which calls getWithIndex in    a loop (which backs off on-error up to 1 minute)   getWithIndex calls fetch if there’s no valid entry in the cache   fetch starts a goroutine which calls Fetch on the cache-type, waits    for a while (again with backoff up to 1 minute for errors) and then    calls fetch to trigger a refresh   The end result being that every 1 minute notifyBlockingQuery spawns an ancestry of goroutines that essentially lives forever. This PR ensures that the goroutine started by fetch cancels any prior goroutine spawned by the same line for the same key. In isolated testing where a cache type was tweaked to indefinitely error, this patch prevented goroutine counts from skyrocketing."
872,ca: fix a masked bug in leaf cert generation that would not be notified of root cert rotation after the first one (#15005),In practice this was masked by #14956 and was only uncovered fixing the other bug. go test ./agent -run TestAgentConnectCALeafCert_goodNotLocal would fail when only #14956 was fixed.
873,docs: formatting on backend application and delete peering CRDs (#15007), docs: formatting on backend application and delete peering CRDs  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
874,proto: deep-copy PeeringTrustBundle using proto.Clone (#15004),"Fixes a go vet warning caused by the pragma.DoNotCopy on the protobuf message type. Originally I'd hoped we wouldn't need any reflection in the proxycfg hot path, but it seems proto.Clone is the only supported way to copy a message."
875,Merge pull request #13388 from deblasis/feature/health-checks_windows_service,Feature: Health checks windows service
876,proxycfg: fix goroutine leak when service is re-registered (#14988),Fixes a bug where we'd leak a goroutine in state.run when the given context was canceled while there was a pending update.
877,Merge pull request #14800 from hashicorp/mgw-tcp-keepalives,Add TCP keepalive settings to proxy config for mesh gateways
878,Extend tcp keepalive settings to work for terminating gateways as well,
879,Update docs and add tcp_keepalive_probes setting,
880,Add TCP keepalive settings to proxy config for mesh gateways,
881,docs: improvements on language from cluster peering steps (#14993), docs: improvements on language from cluster peering steps  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
882,Set postfix for agentless-notice storage key based on partition and dc,
883,Save agentless node notice dismissal per dc,
884,Fix issue with incorrect method signature on test.,
885,Merge pull request #14981 from hashicorp/peering/dial-through-gateways,
886,Merge pull request #14986 from hashicorp/ui/feature/filter-node-healthchecks-agentless,UI: filter node healthchecks on agentless service instances
887,proxycfg: rate-limit delivery of config snapshots (#14960),"Adds a user-configurable rate limiter to proxycfg snapshot delivery, with a default limit of 250 updates per second. This addresses a problem observed in our load testing of Consul Dataplane where updating a ""global"" resource such as a wildcard intention or the proxy-defaults config entry could starve the Raft or Memberlist goroutines of CPU time, causing general cluster instability."
888,Add tests for peering state snapshots / restores.,
889,Add test for ExportedServicesForAllPeersByName,
890,Update website/content/api-docs/agent/check.mdx,
891,perf: remove expensive reflection from xDS hot path (#14934),"Replaces the reflection-based implementation of proxycfg's ConfigSnapshot.Clone with code generated by deep-copy. While load testing server-based xDS (for consul-dataplane) we discovered this method is extremely expensive. The ConfigSnapshot struct, directly or indirectly, contains a copy of many of the structs in the agent/structs package, which creates a large graph for copystructure.Copy to traverse at runtime, on every proxy reconfiguration."
892,Merge pull request #14977 from hashicorp/ui/fix/scrollbar-bento-box,ui: Bento-Box show scrollbars only when necessary
893,Address linting errors,
894,Add changelog entry,
895,Add tests for filtering node health checks,
896,Use split var in tests,
897,Use split wildcard partition name,"This way OSS avoids passing a non-empty label, which will be rejected in OSS consul."
898,Merge pull request #14935 from hashicorp/fix/alias-leak,
899,Add changelog entry,
900,Add changelog entry,
901,Lint,
902,Format healthchecks template,
903,Filter healthchecks for synthetic-nodes,
904,1.14 dataplane docs beta: Bump to beta3 (#14979),Bump to beta
905,Reset wait on ensureServerAddrSubscription,
906,Fix CA init error code,
907,Add integ test for peering through gateways,
908,Update leader routine to maybe use gateways,
909,Update peering establishment to maybe use gateways,"When peering through mesh gateways we expect outbound dials to peer servers to flow through the local mesh gateway addresses. Now when establishing a peering we get a list of dial addresses as a ring buffer that includes local mesh gateway addresses if the local DC is configured to peer through mesh gateways. The ring buffer includes the mesh gateway addresses first, but also includes the remote server addresses as a fallback. This fallback is present because it's possible that direct egress from the servers may be allowed. If not allowed then the leader will cycle back to a mesh gateway address through the ring. When attempting to dial the remote servers we retry up to a fixed timeout. If using mesh gateways we also have an initial wait in order to allow for the mesh gateways to configure themselves. Note that if we encounter a permission denied error we do not retry since that error indicates that the secret in the peering token is invalid."
910,increase protobuf size limit for cluster peering (#14976),
911,Merge pull request #14975 from hashicorp/ui/bugfix/peering-misspelling,UI: Copy changes for peering detail page
912,Address PR comments.,
913,Disallow peering to the same cluster.,
914,Update peers show tests to look for serverAddresses tab,
915,Update index.js,
916,Bento-Box show scrollbars only when necessary,
917,Prevent consul peer-exports by discovery chain.,
918,"Prevent the ""consul"" service from being exported.",
919,UI: Copy changes for peering detail page,
920,Fix linting error,
921,Add changelog,
922,Move agentless-notice banner css to it's own file,
923,Merge pull request #14973 from hashicorp/ui/chore/consol-api-gateway-bottom-sources-filter,ui: Always sort consul-gateway to bottom sources list
924,Add tests for agentless-notice-banner,
925,Move banner to component and make it dismissable,
926,Add banner for agentless node notice,
927,Add remote peer partition and datacenter info.,
928,Always sort consul-gateway to bottom sources list,
929,Merge pull request #14970 from hashicorp/ui/feature/filter-synthetic-nodes,ui: Filter synthetic nodes on nodes list page
930,Merge pull request #14947 from hashicorp/ui/feat/peer-detail-page,ui: peer detail view
931,Add changelog for peers detail page,
932,Add tests peers.show,
933,Fix href-to persists hash,"Copy passed hash before manipulating it. Assigning to the same hash object will break href-to because in certain scenarios href-to-helper will not create a new object that gets passed to fsm-with-optional-hrefTo method. This is problematic for optional route-params, and lead to a situation where links to peered services would create the wrong url for their href-attribute."
934,Update peering mocks,
935,Fix linting error dimension service,
936,Fix peering regenerate test, only dialers will show a regenerate token action add test that receivers won't show regenerate action
937,Update yarn.lock,
938,Don't --focus for dist-vercel,This breaks the vercel deploy as --focus will try to install workspace dependency from the registry: Reference: https://github.com/yarnpkg/yarn/issues/5864 https://github.com/yarnpkg/yarn/issues/6715
939,Link to peer.show service-instance peer-info,
940,Prettify dc.services.show template,
941,Use translations for empty states peers.show,
942,Update dimension provider, simplify implementation add docs
943,Rename peers.edit to peers.show,
944,Fix bucket-list display depends on navigation,We need to explicitly tell the UI to not show the bucket-list when we are displaying imported services. If we make this depend on the data we will sometimes not show it due to data-loader caching.
945,Match design order health states imported-services,
946,Use existing freefilter to match existing design,
947,Add filtering for 'unknown' imported services,
948,Add unknown-state predicate services,Based on the new peer relationship
949,Update imported/export count on peers,Api has changed we need to adjust accordingly.
950,Add peer as a belongs-to to service,Working with a peer model as a relationship is much easier than to workaround a non-relationship in imported services. This is currently only relevant for imported-services where we know the peer in advance.
951,Always transition to imported peers.edit,
952,Prototype StreamStatus integration peers detail,
953,Move peering bento box into dedicated component,
954,Don't handle undefined in smart-date-format,We will handle that from the outside
955,Add bento box peers.edit,
956,Implement smart-date-format-helper,Add a helper that knows how to format past dates in a smart way. When less than a week ago we will use relative date strings - for dates older than a week we will use a friendly human-readable format. This matches best practices we want to adhere to based on what Terraform did for date-formatting.
957,Add empty state peers.edit.addresses,
958,Add tooltips exported/imported tabs,
959,Display tab tooltips in tab-nav,
960,Allow tabs to have tooltips,
961,Link service in exported-service list,
962,Show cursor peer-list,
963,Implement imported services tab peers.edit,
964,Display addresses when receiver peer.edit,
965,Return all items without search term exported,
966,Always display imported & exported on peer,"Peers are bi-directional, we need to reflect that"
967,fix placeholder empty-state exported,
968,Make exported-services searchable by name,
969,Create search-provider,
970,Pull in vertical-collection,We want to use a community solution for occlusion rendering for this problem instead of using a custom abstraction.
971,Create dimensions provider,"To measure the available space of an element when it should take up the ""rest"" of the page. This matches what ListCollection is doing internally but makes the mechanism available in a composable component."
972,Switch out ember-ref-modifier for ember-ref-bucket,ember-ref-bucket is the successor of ref-modifier. We weren't using ref-modifier anywhere so switching out is not an issue.
973,Use HDS in peers.edit.exported,
974,Expect a boolean from synthetic-node meta key,
975,Re-enable nodes in list feature test,
976,Use reject-by composable helper instead of provider,
977,"xds: properly merge central config for ""agentless"" services (#14962)",
978,bug: fix goroutine leaks caused by incorrect usage of WatchCh (#14916),"memdb's WatchCh method creates a goroutine that will publish to the returned channel when the watchset is triggered or the given context is canceled. Although this is called out in its godoc comment, it's not obvious that this method creates a goroutine who's lifecycle you need to manage. In the xDS capacity controller, we were calling WatchCh on each iteration of the control loop, meaning the number of goroutines would grow on each autopilot event until there was catalog churn. In the catalog config source, we were calling WatchCh with the background context, meaning that the goroutine would keep running after the sync loop had terminated."
979,adding configuration option cloud.scada_address (#14936),  adding scada_address   config tests   add changelog entry 
980,Configure tailwind-jit for sub-apps as well,
981,add external-services method to peer repo,
982,Move javascript tab class to tab-nav,
983,Pass provider data for peering tab-nav,
984,Create Peerings::Provider,We need a component abstraction that encapsulates creating the dynamic tabs based on peering-type. We create a PeerTab-abstraction that behaves like the data-structure the tab-nav expects to achieve this effect.
985,Transition to exported/imported based on peer type,
986,Add imported/exported tabs to peers.edit,
987,Add imported and exported routes for peers.edit,
988,Handle case when this.element is undefined outlet,
989,Add link to peers.edit to peerings list,
990,Bring back edit-route for peerings,
991,Only display regenerate token when peer is dialer,Regenerating only makes sense if we are dealing with the side that created  the token - i.e. the dialer.
992,Differentiate between dialer / receiver peer model,
993,Remove mocking synthetic nodes for now,
994,Add changelog,
995,Filter synthetic nodes on nodes list page,
996,Add consul.xds.server.streamStart metric (#14957),This adds a new consul.xds.server.streamStart metric to measure the time taken to first generate xDS resources after an xDS stream is opened.
997,cli: Add -node-name flag to redirect-traffic command (#14933),
998,fix(cli): missing error message (#14959),
999,Service http checks data source for agentless proxies (#14924),"Adds another datasource for proxycfg.HTTPChecks, for use on server agents. Typically these checks are performed by local client agents and there is no equivalent of this in agentless (where servers configure consul-dataplane proxies). Hence, the data source is mostly a no-op on servers but in the case where the service is present within the local state, it delegates to the cache data source."
1000,Merge pull request #14958 from hashicorp/peering/nonce,
1001,Actually track nonce in test,
1002,Fix incorrect backoff-wait logic.,
1003,bump raft version to v1.3.11 (#14897),  bump raft version to v1.3.11   Add change log   fix go.sum 
1004,Merge pull request #14938 from hashicorp/ui/chore/removable-terminated-peers,ui: make terminated peers removable
1005,Allow deleting terminated peers,
1006,pass dc/partition when normalizing peerings,
1007,default to an empty array peering services,
1008,Update peer repo with latest API changes,
1009,Add basic nonce management,"This commit adds a monotonically increasing nonce to include in peering replication response messages. Every ack/nack from the peer handling a response will include this nonce, allowing to correlate the ack/nack with a specific resource. At the moment nothing is done with the nonce when it is received. In the future we may want to add functionality such as retries on NACKs, depending on the class of error."
1010,gRPC server metrics (#14922), Move stats.go from grpc-internal to grpc-middleware Update grpc server metrics with server type label Add stats test to grpc-external Remove global metrics instance from grpc server tests
1011,Fixed broken links referring to tutorials running as local agent (#14954),
1012,docs: fix malformed yaml (#14952),
1013,chore: Update Digital Team Files (#14945),  Update generated scripts (website-build.sh)   Update generated scripts (should-build.sh)   Update generated scripts (website-start.sh)   Update generated website Makefile 
1014,chore: clear redirects (#14939),
1015,[Docs] Add docs for memberlist metrics (#14753),"  Add metrics for consul.memberlist.node.instances, consul.memberlist.queue.broadcast, consul.memberlist.size.local, and consul.memberlist.size.remote   Fixing last table on page that does not render properly   fixing queue name "
1016,ui: hide node name and meta on agentless instances (#14921),  [NET-950] hide node name and meta on agentless instances   Fix linting issues and set synthetic-node value   ui: changelog entry 
1017,Merge pull request #14746 from hashicorp/docs/search-refresh06,docs: Search Description Refresh Batch 06
1018,nav fix for deployment,
1019,Deployment issue fix,
1020,Merge branch 'main' into docs/search-refresh06,
1021,Mergimg,
1022,Nav fix for deployment,
1023,website: fix broken links (#14943),
1024,fix(peering): add missing grpc_tls_port for server address reconciliation (#14944),
1025,Merge branch 'main' into docs/search-refresh06,
1026,Update website/content/docs/dynamic-app-config/watches.mdx,Co-authored-by: Luke Kysow 1034429+lkysow@users.noreply.github.com
1027,Apply suggestions from code review,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1028,Apply suggestions from code review,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com Co-authored-by: Luke Kysow 1034429+lkysow@users.noreply.github.com Co-authored-by: Jared Kirschner 85913323+jkirschner-hashicorp@users.noreply.github.com
1029,Enable ironbank integration (#14931),
1030,Fix alias check leak,"Preivously when alias check was removed it would not be stopped nor cleaned up from the associated aliasChecks map. This means that any time an alias check was deregistered we would leak a goroutine for CheckAlias.run() because the stopCh would never be closed. This issue mostly affects service mesh deployments on platforms where the client agent is mostly static but proxy services come and go regularly, since by default sidecars are registered with an alias check."
1031,Configure Envoy alpn_protocols based on service protocol (#14356),  Configure Envoy alpn_protocols based on service protocol   define alpnProtocols in a more standard way   http2 protocol should be h2 only   formatting   add test for getAlpnProtocol()   create changelog entry   change scope is connect-proxy   ignore errors on ParseProxyConfig; fixes linter   add tests for grpc and http2 public listeners   remove newlines from PR   Add alpn_protocol configuration for ingress gateway   Guard against nil tlsContext   add ingress gateway w/ TLS tests for gRPC and HTTP2   getAlpnProtocols: add TCP protocol test   add tests for ingress gateway with grpc/http2 and per-listener TLS config   add tests for ingress gateway with grpc/http2 and per-listener TLS config   add Gateway level TLS config with mixed protocol listeners to validate ALPN   update changelog to include ingress-gateway   add http/1.1 to http2 ALPN   go fmt   fix test on custom-trace-listener 
1032,Merge pull request #14747 from hashicorp/kisunji/NET-801-add-peer-stream-status,
1033,Add changelog entry,
1034,Fixup test,
1035,Fix nil pointer,
1036,Include stream-related information in peering endpoints,
1037,docs: fix missing agent caching method (#14928),
1038,Merge central config for GetEnvoyBootstrapParams (#14869),This fixes GetEnvoyBootstrapParams to merge in proxy-defaults and service-defaults. Co-authored-by: Dan Upton daniel@floppy.co
1039,Merge pull request #14918 from hashicorp/fix/metrics-checker,
1040,Fix outdated support email address (#14907),The software delivery support email address is no longer valid. This replaces it with a link to the official support website.
1041,update helm docs (#14912),
1042,Merge pull request #14796 from hashicorp/peering/use-connect-ca,
1043,Merge pull request #14917 from hashicorp/dans/NET-718/peering-outbound-mesh-gateway-xds,
1044,Add changelog entry,
1045,Fixup test,
1046,Ensure lines were modified,It's possible that the output of the diff contains surrounding lines that were not modified. This change filters further to lines that were added or removed.
1047,Require Connect and TLS to generate peering tokens,By requiring Connect and a gRPC TLS listener we can automatically configure TLS for all peering control-plane traffic.
1048,Use internal server certificate for peering TLS,"A previous commit introduced an internally-managed server certificate to use for peering-related purposes. Now the peering token has been updated to match that behavior: - The server name matches the structure of the server cert - The CA PEMs correspond to the Connect CA Note that if Conect is disabled, and by extension the Connect CA, we fall back to the previous behavior of returning the manually configured certs and local server SNI. Several tests were updated to use the gRPC TLS port since they enable Connect by default. This means that the peering token will embed the Connect CA, and the dialer will expect a TLS listener."
1049,Simplify mgw watch mgmt,
1050,Use existing query options to build ctx,
1051,feat: xDS updates for peerings control plane through mesh gw,
1052,ui: Remove node name from agentless service instance (#14903),  [NET-949]: Remove node name from agentless instance   Add changelog entry 
1053,Fixes broken URLs in Dataplane docs (#14910),
1054,Merge pull request #14898 from hashicorp/docs/new-vault-connect-ca-permissions-needed,docs: vault ca provider patch upgrade guidance
1055,docs: vault ca provider patch upgrade guidance,
1056,website: upgrade next version (#14906),Co-authored-by: Bryce Kalow bkalow@hashicorp.com
1057,ui: Update empty-state copy throughout app (#14721), Update empty-state copy throughout app  Update empty-states throughout the app to only include mentions of ACLs if the user has ACLs enabled.   Update peers empty state copy Flip the empty state copy logic for peers. Small typo fixes on other empty states.   Update Node empty state with docs   Update intentions empty state Make ACL copy dependent on if acls are enabled.   Update Nodes empty state learn copy   Fix binding rule copy key 
1058,ui: Setup Hashicorp Design System for usage in consul-ui (#14394)," Use postcss instead of ember-cli-sass  This will make it possible to work with tailwindcss.  configure postcss to compile sass  add ""sub-app"" css into app/styles tree   pin node@14 via volta   Only used by people that use volta   Install tailwind and autoprefixer   Create tailwind config   Use tailwind via postcss   Fix: tailwind changes current styling   When adding tailwind to the bottom of app.scss we apparently change the way the application looks. We will import it first to make sure we don't change the current styling of the application right now.   Automatic import of HDS colors in tailwind   Install @hashicorp/design-system-components   install add-on  setup postcss scss pipeline to include tokens css  import add-on css   Install ember-auto-import v2   HDS depends on v2 of ember-auto-import so we need to upgrade.  Upgrade ember-cli-yadda  v0.6.0 of ember-cli-yadda adds configuration for webpack. This configuration is incompatible with webpack v5 which ember-auto-import v2 is using. We need to upgrade ember-cli-yadda to the latest version that fixes this incompatability with auto-import v2  Install ember-flight-icons  HDS components are using the addon internally.   Document HDS usage in engineering docs   Upgrade ember-cli-api-double   fix new linting errors "
1059,Make the mesh gateway changes to allow local mode for cluster peering data plane traffic (#14817),Make the mesh gateway changes to allow local mode for cluster peering data plane traffic
1060,fix: missing UDP field in checkType (#14885),  fix: missing UDP field in checkType   Add changelog   Update doc 
1061,Fix explicit tproxy listeners with discovery chains. (#14751),Fix explicit tproxy listeners with discovery chains.
1062,ui: Wrap service names on show and instance routes (#14771),  Wrap service names on show and instance routes Moves the trailing type/kind/actions to the second row of the header no matter what length the service name is. Wraps service name text.   Change grid format of AppView globally   Add tooltips to the last element of breadcrumbs 
1063,Add changelog entry for #12890,
1064,Add the ability to retry on reset connection to service-routers (#12890),
1065,fix broken links (#14892),
1066,fix(api): missing peer name in query option (#14835),
1067,Allow managed-runtime badge to be dynamic (#14853),
1068,Merge pull request #14880 from hashicorp/nathancoleman-patch-1,Update CAPIGW comparison docs
1069,Merge pull request #14878 from hashicorp/docs/amb.fix-broken-links,[docs] Fix broken Learn link
1070,empty commit,
1071,Upgrade serf to v0.10.1 and memberlist to v0.5.0 to get memberlist size metrics and broadcast queue depth metric (#14873),"  updating to serf v0.10.1 and memberlist v0.5.0 to get memberlist size metrics and memberlist broadcast queue depth metric   update changelog   update changelog   correcting changelog   adding ""QueueCheckInterval"" for memberlist to test   updating integration test containers to grab latest api "
1072,Update website/content/docs/consul-vs-other/api-gateway-compare.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1073,Update website/content/docs/consul-vs-other/api-gateway-compare.mdx,Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com
1074,"Use consistent casing for ""Consul API Gateway"" vs. ""API gateway""",
1075,Update documentation link to improve readability,
1076,Empty-Commit,
1077,"connect: Bump Envoy 1.20 to 1.20.7, 1.21 to 1.21.5 and 1.22 to 1.22.5 (#14831)",
1078,docs: Consul Dataplane Version Compatibility (#14710),Co-authored-by: David Yu dyu@hashicorp.com Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com
1079,update helm docs for consul-k8s 1.0.0-beta1 (#14875),
1080,Add peering integration tests (#14836),Add peering integration tests.
1081,Rename PeerName to Peer on prepared queries and exported services (#14854),
1082,Merge pull request #14870 from hashicorp/docs/hyperlink-fixes,docs: Windows tutorial hyperlink fix #2
1083,Remove unneeded in params,
1084,Fixing broken links,
1085,Link fix,
1086,Merge pull request #14867 from hashicorp/docs/hyperlink-fixes,docs: Windows VM tutorial link fix
1087,Tutorial link fix,
1088,Merge pull request #14794 from hashicorp/docs/cluster-peering,docs: Cluster peering 1.14 beta release
1089,Merge pull request #14770 from hashicorp/docs/agentless-beta,docs: Consul Dataplane (Agentless) Beta
1090,Merge pull request #14769 from hashicorp/docs/consul-on-windows-vms,docs: Consul on Windows VMs Envoy bootstrapping
1091,Merge pull request #14779 from hashicorp/docs/invoke-services-from-lambda,Docs/invoke services from lambda
1092,list,
1093,Reverts + fix,
1094,Remove terminal colouring from test output so it is (#14810),"more readable in CI. Running primary verification step for case-ingress-gateway-multiple-services... �[34;1mverify.bats �[0m�[1G   ingress proxy admin is up on :20000�[K�[75G 1/12�[2G�[1G ✓ ingress proxy admin is up on :20000�[K �[0m�[1G   s1 proxy admin is up on :19000�[K�[75G 2/12�[2G�[1G ✓ s1 proxy admin is up on :19000�[K �[0m�[1G   s2 proxy admin is up on :19001�[K�[75G 3/12�[2G�[1G ✓ s2 proxy admin is up on :19001�[K �[0m�[1G   s1 proxy listener should be up and have right cert�[K�[75G 4/12�[2G�[1G ✓ s1 proxy listener should be up and have right cert�[K �[0m�[1G   s2 proxy listener should be up and have right cert�[K�[75G 5/12�[2G�[1G ✓ s2 proxy listener should be up and have right cert�[K �[0m�[1G   ingress-gateway should have healthy endpoints for s1�[K�[75G 6/12�[2G�[31;1m�[1G ✗ ingress-gateway should have healthy endpoints for s1�[K �[0m�[31;22m   (from function `assert_upstream_has_endpoints_in_status' in file /workdir/primary/bats/helpers.bash, line 385, versus Running primary verification step for case-ingress-gateway-multiple-services... 1..12 ok 1 ingress proxy admin is up on :20000 ok 2 s1 proxy admin is up on :19000 ok 3 s2 proxy admin is up on :19001 ok 4 s1 proxy listener should be up and have right cert ok 5 s2 proxy listener should be up and have right cert not ok 6 ingress-gateway should have healthy endpoints for s1 not ok 7 s1 proxy should have been configured with max_connections in services ok 8 ingress-gateway should have healthy endpoints for s2"
1095,More group fix attempts,
1096,Tabs fix again,
1097,Tab groups fix,
1098,Apply suggestions from code review,Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com
1099,Minor fixes,
1100,Installation instructions moved,
1101,Apply suggestions from code review,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1102,Move Installation instructions,
1103,first commit with overview page (#14827), Why Choose Consul  Co-authored-by: David Yu dyu@hashicorp.com Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
1104,ci: Fix changelog-checker GHA workflow (#14842),
1105,fix flaky integration test (#14843),
1106,PeerName changed to Peer - fix,
1107,Tutorial links,
1108,Update website/content/docs/connect/proxies/envoy.mdx,
1109,Update website/content/docs/connect/proxies/envoy.mdx,
1110,Merge pull request #14734 from hashicorp/NET-643-update-mesh-gateway-envoy-config-for-inbound-peering-control-plane-traffic,
1111,Update website/content/docs/connect/proxies/envoy.mdx,
1112,Update xds generation for peering over mesh gws,"This commit adds the xDS resources needed for INBOUND traffic from peer clusters:  1 filter chain for all inbound peering requests. 1 cluster for all inbound peering requests. 1 endpoint per voting server with the gRPC TLS port configured.  There is one filter chain and cluster because unlike with WAN federation, peer clusters will not attempt to dial individual servers. Peer clusters will only dial the local mesh gateway addresses."
1113,Merge pull request #14694 from hashicorp/peering/mgw-addrs,
1114,Update website/content/docs/connect/dataplane/consul-dataplane.mdx,Co-authored-by: David Yu dyu@hashicorp.com
1115,Installation isntructions,
1116,Share mgw addrs in peering stream if needed,This commit adds handling so that the replication stream considers whether the user intends to peer through mesh gateways. The subscription will return server or mesh gateway addresses depending on the mesh configuration setting. These watches can be updated at runtime by modifying the mesh config entry.
1117,Return mesh gateway addrs if peering through mgw,
1118,Apply suggestions from code review,
1119,Update website/content/docs/connect/cluster-peering/index.mdx,
1120,Update tech-specs.mdx (#14840),
1121,Update website/content/docs/connect/dataplane/index.mdx,Co-authored-by: Riddhi Shah riddhi@hashicorp.com
1122,Removed external server constraint,
1123,proxy default behavior constraint,
1124,Apply suggestions from code review,Co-authored-by: Riddhi Shah riddhi@hashicorp.com
1125,Update website/content/docs/connect/dataplane/index.mdx,Co-authored-by: Riddhi Shah riddhi@hashicorp.com
1126,Merge pull request #14811 from hashicorp/chappie/dns,Add DNS gRPC proxying support
1127,applied feedback from review,
1128,Making suggested comments,
1129,Making suggested changes,
1130,Dynamic routing clarifications,
1131,updated 0.49.x helm docs (#14824),
1132,service-resolver alignment,
1133,Apply suggestions from code review,Co-authored-by: Eric Haberkorn erichaberkorn@gmail.com
1134,Add OpenShift CNI to list of install options for kubernetes (#14793),
1135,fix link back to hcp not showing up (#14812),
1136,Update comment,
1137,docs: admin partition docs improvements (#14774), docs: Update admin partitions versions and add requirement for unique global.name  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1138,chore: fix flakey scada provider test,
1139,Merge pull request #14807 from hashicorp/docs/nick-release-notes,docs: Consul K8s 0.49.x release notes
1140,Update website/content/docs/release-notes/consul-k8s/v0_49_x.mdx,Co-authored-by: David Yu dyu@hashicorp.com
1141,Update website/content/docs/release-notes/consul-k8s/v0_49_x.mdx,Co-authored-by: David Yu dyu@hashicorp.com
1142,Update website/content/docs/release-notes/consul-k8s/v0_49_x.mdx,Co-authored-by: David Yu dyu@hashicorp.com
1143,Update website/content/docs/release-notes/consul-k8s/v0_49_x.mdx,Co-authored-by: David Yu dyu@hashicorp.com
1144,added missing links per davids advice,
1145,Update website/content/docs/release-notes/consul-k8s/v0_49_x.mdx,Co-authored-by: David Yu dyu@hashicorp.com
1146,Update website/content/docs/release-notes/consul-k8s/v0_49_x.mdx,Co-authored-by: David Yu dyu@hashicorp.com
1147,Update website/content/docs/connect/proxies/envoy.mdx,
1148,Update website/content/docs/connect/proxies/envoy.mdx,
1149,Update website/content/docs/connect/proxies/envoy.mdx,
1150,Apply suggestions from code review,Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1151,Codeblock Added,
1152,Apply suggestions from code review,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1153,Adding changelog,
1154,Bind a dns mux handler to gRPC proxy,
1155,Adding grpc handler for dns proxy,
1156,Regenerate protos with mocks,
1157,Add mocks for probuf generation,
1158,Generate protobufs,
1159,Adding DNS proxy proto,
1160,Merge pull request #14783 from hashicorp/bear359-patch-1,Bear359 patch 1
1161,finalized 0.49 release notes,
1162,Fixing nav fixes,
1163,nav fix,
1164,Page location/nav edits,
1165,Fixes,
1166,Add exported services event to cluster peering replication. (#14797),
1167,Merge pull request #14752 from hashicorp/docs/updated-consul-arch-no-agentless,refresh of the Consul architecture overview page
1168,Apply suggestions from code review,Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com
1169,applied additional feedback from review,
1170,draft release notes,
1171,bug: watch local mesh gateways in non-default partitions with agentless (#14799),
1172,ui: Move nvmrc to the root of the workspace (#14567),
1173,ui: Amends to existing topology notice/banner texts (#14527),  ui: Amends to existing topology notice/banner texts   Changelog   Update ui/packages/consul-ui/translations/routes/en-us.yaml   Co-authored-by: Jared Kirschner 85913323+jkirschner-hashicorp@users.noreply.github.com Co-authored-by: Jared Kirschner 85913323+jkirschner-hashicorp@users.noreply.github.com
1174,ui: Add more acceptance tests for cluster peering (#14707),  ui: Add more acceptance tests for cluster peering   Lint 
1175,Update website/content/docs/integrate/partnerships.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1176,Update website/content/docs/integrate/partnerships.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1177,Update website/content/docs/integrate/partnerships.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1178,Update website/content/docs/integrate/partnerships.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1179,Update website/content/docs/integrate/partnerships.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1180,Update website/content/docs/integrate/partnerships.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1181,Update website/content/docs/integrate/partnerships.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1182,Update website/content/docs/integrate/partnerships.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1183,Update website/content/docs/integrate/partnerships.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1184,applied feedback from review,
1185,Typo fix,
1186,Typo fix,
1187,Typo fix,
1188,Fixes,
1189,Traffic Management,
1190,k8s page updates,
1191,Tab groupings,
1192,Kyle Rarey - requested constraints added,
1193,Mike Morris clean up requests,
1194,feat(ingress gateway: support configuring limits in ingress-gateway c… (#14749),"  feat(ingress gateway: support configuring limits in ingress-gateway config entry   a new Defaults field with max_connections, max_pending_connections, max_requests   is added to ingress gateway config entry  new field max_connections, max_pending_connections, max_requests in   individual services to overwrite the value in Default added unit test and integration test updated doc  Co-authored-by: Chris S. Kim ckim@hashicorp.com Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com Co-authored-by: Dan Stough dan.stough@hashicorp.com"
1195,Merge pull request #14764 from hashicorp/docs/clarify-license-behavior-on-restart,docs: clarify license behavior on restart
1196,Support Stale Queries for Trust Bundle Lookups (#14724),"  initial commit   add tags, add conversations   add test for query options utility functions   update previous tests   fix test   don't error out on empty context   add changelog   update decode config "
1197,Uploading updated Consul Ecosystem image ,Uploading updated Consul Ecosystem image from Design
1198,Updating Consul Integration Program,Updating Consul Integration Program to include additional links to better server as a one-stop solution for Partners wanting to integrate with Consul.
1199,nav fix,
1200,CLI reference page relocation,
1201,missed unsaved changes,
1202,added docs for invoking services from lambda functions,
1203,README: Consul Readme improvements  (#14773), README: Consul Readme improvements  Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
1204,EnterpriseAlert inline fix,
1205,Fixes,
1206,Bootstrap Consul on Windows VMs instructions,
1207,Make defaulting behaviour of connect.enabled clear (#14768),
1208,Update k8s.mdx (#14765),
1209,Main page nav add,
1210,CLI Page nav listing,
1211,Minor fixes,
1212,docs: clarify license behavior on restart,
1213,k8s installation pages updates,
1214,consul-dataplane command + main Dataplane pages,
1215,Enable outbound peered requests to go through local mesh gateway (#14763),
1216,docs: update to Vault secrets backend for partition init service account and Helm values for injector  (#14745), docs: update to Vault secrets backend
1217,Fix Link: Consul Enterprise Admin Partitions - Usage - CLI (#14755),Admin partition CLI documentation was pointing at /commands/admin-partition.  Updated to point at /commands/partition. https://www.consul.io/commands/admin-partition returns not found.
1218,add HCP integration component (#14723),  add HCP integration   lint: use non-deprecated logging interface 
1219,refresh of the Consul architecture overview page,
1220,Add envoy connection balancing. (#14616),Add envoy connection balancing config.
1221,/docs/dynamic-app-config/,
1222,/docs/lambda/,
1223,/docs/ecs/manual/,
1224,/docs/ecs/terraform/,
1225,/docs/ecs/,
1226,/docs/k8s/deployment-configuration/,
1227,/docs/k8s/deployment-configurations/multi-cluster/,
1228,/docs/security/acl/auth-methods,
1229,/docs/api-gateway/configuration,/docs/api-gateway/
1230,update helm docs for sync catalog and vault (#14733),
1231,Merge pull request #14735 from hashicorp/docs/capigw-typos-usage,fixed typos in CAPIgw usage docs
1232,fixed typos in CAPIgw usage docs,
1233,Add new internal endpoint to list exported services to a peer,
1234,Merge pull request #14232 from hashicorp/krastin/website/telemetry-labels,docs: fix website/docs/agent/telemetry labels chart
1235,Update website/content/docs/ecs/configuration-reference.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1236,Update website/content/api-docs/agent/check.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1237,Fix MD markup (#14702),
1238,Manage local server watches depending on mesh cfg,"Routing peering control plane traffic through mesh gateways can be enabled or disabled at runtime with the mesh config entry. This commit updates proxycfg to add or cancel watches for local servers depending on this central config. Note that WAN federation over mesh gateways is determined by a service metadata flag, and any updates to the gateway service registration will force the creation of a new snapshot. If enabled, WAN-fed over mesh gateways will trigger a local server watch on initialize(). Because of this we will only add/remove server watches if WAN federation over mesh gateways is disabled."
1239,docs: fix missing bugfix changelog entries,
1240,Add 1.11.10 changelog entries.,
1241,Merge pull request #14701 from mosceo/patch-1,Fix md markup
1242,Fix md markup,
1243,"release updates for 1.13.2, 1.12.5, and 1.11.9",
1244,Merge pull request #14690 from hashicorp/docs/fix-api-landing-page-typos,fixed typos in API landing page
1245,fixed typos in API landing page,
1246,Merge pull request #14571 from hashicorp/docs/fox-peering-metrics-labels-table,docs: fix peering metrics labels table
1247,fix(check): added missing OSService props,
1248,fix(checks): os_service OK message in output,
1249,fix(checks): os_service lifecycle bugfix,
1250,fix(agent): uninitialized map panic error,
1251,Merge pull request #14679 from hashicorp/docs/improve-ent-dns-flexibility-oss,docs: all enterprise locality labels now optional
1252,docs: address review feedback,
1253,ui: Topology notices testing/refactor prep (#14575),  ui: Topology notices testing/refactor prep   ui: During testing ensure that when global-config=true can be mocked to false (#14578) 
1254,ui: Add initial tests for peering searching/sorting (#14568),  ui: Add initial tests for peering searching/sorting   New lint 
1255,ui: Add merge-central-config to relevant HTTP requests (#14604),
1256,docs: fix peering metrics labels table,
1257,docs: all enterprise locality labels now optional,
1258,doc(peering): missing network requirement for peering and the partiti… (#14677),  doc(peering): missing network requirement for peering and the partition parameter in the list API   Delete API: move partition from path parameter to query parameter 
1259,increase the size of txn to support vault (#14599),"  increase the size of txn to support vault   add test, revert change to acl endpoint   add changelog   update test, add passing test case   Update .changelog/14599.txt   Co-authored-by: Freddy freddygv@users.noreply.github.com Co-authored-by: Freddy freddygv@users.noreply.github.com"
1260,add health metric docs (#14382),
1261,Merge pull request #14556 from hashicorp/NET-818-server-cert-v2,
1262,Add changelog entry,
1263,Add awareness of server mode to TLS configurator,Preivously the TLS configurator would default to presenting auto TLS certificates as client certificates. Server agents should not have this behavior and should instead present the manually configured certs. The autoTLS certs for servers are exclusively used for peering and should not be used as the default for outbound communication.
1264,Test fixes, Pulls in CLI test fix from main Updates psutils to fix TestAgent_Host on M1 Mac
1265,Add server certificate manager,This certificate manager will request a leaf certificate for server agents and then keep them up to date.
1266,Update TLS configurator for peering traffic,When the TLS-enabled gRPC port receives a request for the expected it must use the auto-tls certificates.
1267,Generate ACL token for server management,This commit introduces a new ACL token used for internal server management purposes. It has a few key properties: - It has unlimited permissions. - It is persisted through Raft as System Metadata rather than in the ACL tokens table. This is to avoid users seeing or modifying it. - It is re-generated on leadership establishment.
1268,Add handling in agent cache for server leaf certs,
1269,Update docs for merge-central-config support (#14597),Updates API docs to highlight merge-central-config support.
1270,changelog: fix missing backtick (#14663),
1271,Merge branch 'main' into main,
1272,Merge pull request #14656 from hashicorp/docs/search-metadata-headers,docs: Search Refresh Fixes
1273,Clean up,
1274,Spacing and title fixes,
1275,Merge pull request #14598 from hashicorp/root-removal-fix,connect/ca: Don't discard old roots on primaryInitialize
1276,Merge pull request #14643 from hashicorp/docs/search-metadata-headers,docs: Search Description Refresh
1277,Delete requirements.mdx,
1278,Merge 'main' into docs/search-metadata-headers,
1279,Add changelog note,
1280,connect/ca: don't discard old roots on primaryInitialize,
1281,Merge pull request #14621 from hashicorp/docs/search-desc-batch05,docs: Search Metadata Batch 05
1282,Apply suggestions from code review,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1283,Merge pull request #14596 from hashicorp/docs/search-desc-batch04,docs: Search Metadata Batch 04
1284,Apply suggestions from code review,Co-authored-by: Jared Kirschner 85913323+jkirschner-hashicorp@users.noreply.github.com Co-authored-by: Luke Kysow 1034429+lkysow@users.noreply.github.com Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1285,Merge pull request #14593 from hashicorp/docs/search-desc-batch03,docs: Search Metadata Batch 03
1286,Apply suggestions from code review,Co-authored-by: Jared Kirschner 85913323+jkirschner-hashicorp@users.noreply.github.com
1287,Merge pull request #14589 from hashicorp/docs/search-desc-batch02,docs: Search Metadata Batch 02
1288,Apply suggestions from code review,Co-authored-by: Jared Kirschner 85913323+jkirschner-hashicorp@users.noreply.github.com
1289,Middleware: RequestRecorder reports calls below 1ms as decimal value (#12905),  Typos   Test failing   Convert values <1ms to decimal   Fix test   Update docs and test error msg   Applied suggested changes to test case   Changelog file and suggested changes   Update .changelog/12905.txt   Co-authored-by: Chris S. Kim kisunji92@gmail.com   suggested change - start duration with microseconds instead of nanoseconds   fix error   suggested change - floats   Co-authored-by: alex 8968914+acpana@users.noreply.github.com Co-authored-by: Chris S. Kim kisunji92@gmail.com
1290,[BUGFIX] Do not use interval as timeout (#14619),Do not use interval as timeout
1291,docs: Fix spelling errors on website (#14634),
1292,Merge pull request #14560 from hashicorp/docs/search-desc-batch01,docs: Seach Metadata Batch 01
1293,Apply suggestions from code review,Co-authored-by: Jared Kirschner 85913323+jkirschner-hashicorp@users.noreply.github.com Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com Co-authored-by: Luke Kysow 1034429+lkysow@users.noreply.github.com
1294,Update website/content/docs/enterprise/admin-partitions.mdx,
1295,ui: chore - upgrade ember and friends  (#14518),"  v3.20.2...v3.24.0   Fix handle undefined outlet in route component   Don't use template helper for optional modal.open   Using the optional-helper here will trigger a computation in the same runloop error. This is because we are setting the modal-property when the <Ref> component gets rendered which will update the this.modal-property which will then recompute the optional-helper leading to this error. Instead we will create an action that will call the open-method on the modal when it is defined. This gets rid of the double computation error as we will not access the modal property twice in the same runloop when modal is getting set.  Fix - fn needs to be passed function tab-nav  We create functions in the component file instead so that fn-helper stops complaining about the need to pass a function.  Update ember-exam to 6.1 version  ""Makes it compatible"" with ember-qunit v5  scheduleOnce setMaxHeight paged-collection  We need to schedule to get around double-computation error.  Fix - model.data is removed from ember-data  This has been private API all along - we need to work around the removal. Reference: https://github.com/emberjs/data/pull/7338/files#diff-9a8746fc5c86fd57e6122f00fef3155f76f0f3003a24b53fb7c4621d95dcd9bfL1310  Fix propContains instead of deepEqual policy  Recent model.data works differently than iterating attributes. We use propContains instead of deepEqual. We are only interested in the properties we assert against and match the previous behavior with this change.   Fix propContains instead of deepEqual token   Better handling single-records repo test-helper   model.data has been removed we need to handle proxies and model instances differently.  Fix remaining repository tests with propContains  We don't want to match entire objects - we don't care about properties we haven't defined in the assertion.  Don't use template helper for optional modal.open  Using a template helper will give us a recomputation error - we work around it by creating an explicit action on the component instead.   Await I $verb the $pageObject object step   Fix no more customization ember-can   No need to customize, the helper handles destruction fine on its own.  Fix - don't pass optional functions to fn  We will declare the functions on the component instead. This gives us the same behavior but no error from fn, which expects a function to be passed.  Fix - handle undefined state on validate modifier  StateChart can yield out an undefined state we need to handle that in the validate modifier   Fix linting errors tests directory   Warn / turn off new ember linting issues   We will tackle them one by one and don't want to autofix issues that could be dangerous to auto-fix.   Auto-fix linting issues   More linting configuration   Fix remaining linting issues   Fix linting issues new files after rebase   ui: Remove ember-cli-uglify config now we are using terser (#14574)   Co-authored-by: John Cowen johncowen@users.noreply.github.com"
1296,ui: Update mock intention metadata to only include possible values (#14607),
1297,docs: add nginx ingress controller example (#14615),Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
1298,docs: update /install -> /downloads (#14631),
1299,Add more content to integration test docs (#14613),
1300,Merge pull request #14603 from hashicorp/docs/what-is-consul-devdot-update,Docs/what is consul devdot update
1301,Merge branch 'main' into docs/what-is-consul-devdot-update,
1302,/docs/k8s/connect/observability,
1303,/docs/k8s/connect,
1304,website: content updates for developer (#14419),Co-authored-by: Ashlee Boyer ashlee.boyer@hashicorp.com Co-authored-by: Ashlee M Boyer 43934258+ashleemboyer@users.noreply.github.com Co-authored-by: Tu Nguyen im2nguyen@gmail.com Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com Co-authored-by: HashiBot 62622282+hashibot-web@users.noreply.github.com Co-authored-by: Kevin Wang kwangsan@gmail.com
1305,/docs/k8s/installation + /installation/platforms,
1306,applied feedback from review,
1307,/docs/k8s/operations,
1308,/docs/k8s,
1309,/docs/k8s/upgrades,
1310,/docs/k8s/crds,
1311,Improve grpc_tls wording in docs. (#14608),Improve grpc_tls wording in docs. Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com
1312,connect: Bump latest Envoy to 1.23.1 in test matrix (#14573),
1313,updated meta desc for consistency,
1314,ui: Completely remove the Overview routes when running the UI in HCP (#14606),
1315,ui: Add AWS Lambda as potential external source (#14605),  ui: Add AWS Lambda as potential external source   Update mocks to expect lambda as an external-source meta   Additional mock to make sure all our mocks only contain whats possible 
1316,fix(peering): generate token metrics only for leader,
1317,feat(peering): validate server name conflicts on establish,
1318,Merge pull request #14516 from hashicorp/ca-ttl-fixes,Fix inconsistent TTL behavior in CA providers
1319,update to main what is consul page,
1320,Update intermediate pki mount/role when reconfiguring Vault provider,
1321,connect/ca: Clarify behavior around IntermediateCertTTL in CA config,
1322,minor updates to dup docs landing page,
1323,feat: add PeerThroughMeshGateways to mesh config,
1324,/docs/connect/config-entries,
1325,update enforcing consecutive 5xx type to pointer type (#14592),  update enforcing condecutive 5xx type to pointer type   update test 
1326,/docs/connect/proxies,
1327,/docs/connect/gateways/mesh-gateways,
1328,/docs/connect/gateways,
1329,/connect/cluster-peering,
1330,/docs/connect,
1331,/docs/connect/observability,
1332,/docs/connect/ca,
1333,/docs/connect/l7-traffic,
1334,/docs/connect/native,
1335,/docs/connect/registration,
1336,/docs/concepts,
1337,/docs/architecture,
1338,/docs/internals,
1339,/docs/agent,
1340,/docs/agent/config,
1341,/docs/discovery,
1342,/docs/integrate,
1343,/docs/security/acl,
1344,/docs/security,
1345,/docs/security/security-models,
1346,Add CSR check for number of URIs. (#14579),Add CSR check for number of URIs.
1347,Document integration tests (#14391),
1348,Add input validation for auto-config JWT authorization checks.,
1349,Config-entry: Support proxy config in service-defaults (#14395),  Config-entry: Support proxy config in service-defaults   Update website/content/docs/connect/config-entries/service-defaults.mdx   Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com
1350,ui: Pass through default environment settings when when booting dev/test (#14519), ui: Add initial peering listing acceptance tests (#14522)
1351,ui: Fix up tippy console warning... (#14524),...enabling/disabling now depends on whether the string is non-empty
1352,ui: Action docs typo (#14512),
1353,Update the service resolver documentation to include cluster peering failover and redirects (#14513),Update the service resolver documentation to include cluster peering failover and redirects
1354,[docs] use values.yaml instead of config.yaml everywhere for helm configurations (#14554), use values.yaml instead of config.yaml everywhere for helm values update docs
1355,/docs/enterprise/license,
1356,docs: Fix redirect to K8s and VM multi-cluster docs,"This commit fixes an oversight from PR #14009 where the K8s and VMs multi-cluster docs were moved, but not redirected to the proper location."
1357,/docs/enterprise,
1358,/docs/intro,
1359,/docs/troubleshoot,
1360,/docs/install/index.mdx,
1361,/docs/install pages,
1362,Implement Cluster Peering Redirects (#14445),implement cluster peering redirects
1363,[docs] update CNI docs to indicate how the CNI plugin is installed (#14546), update CNI docs to indicate that the CNI plugin is installed through the helm chart Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com Co-authored-by: Paul Banks banks@banksco.de
1364,add non-double-prefixed metrics (#14193),
1365,docs: fix helm stanza in admin-partitions (#14523),
1366,Fix test ordering (#14543),
1367,PR #14057 follow up fix: service id parsing from sidecar id (#14541),  fix service id parsing from sidecar id   simplify suffix trimming 
1368,xDS Load Balancing (#14397),"Prior to #13244, connect proxies and gateways could only be configured by an xDS session served by the local client agent. In an upcoming release, it will be possible to deploy a Consul service mesh without client agents. In this model, xDS sessions will be handled by the servers themselves, which necessitates load-balancing to prevent a single server from receiving a disproportionate amount of load and becoming overwhelmed. This introduces a simple form of load-balancing where Consul will attempt to achieve an even spread of load (xDS sessions) between all healthy servers. It does so by implementing a concurrent session limiter (limiter.SessionLimiter) and adjusting the limit according to autopilot state and proxy service registrations in the catalog. If a server is already over capacity (i.e. the session limit is lowered), Consul will begin draining sessions to rebalance the load. This will result in the client receiving a RESOURCE_EXHAUSTED status code. It is the client's responsibility to observe this response and reconnect to a different server. Users of the gRPC client connection brokered by the consul-server-connection-manager library will get this for free. The rate at which Consul will drain sessions to rebalance load is scaled dynamically based on the number of proxies in the catalog."
1369,Merge pull request #14534 from hashicorp/docs/capigw-tech-spec-update,Docs: add limitations to Tech Specs
1370,Update website/content/docs/api-gateway/tech-specs.mdx,
1371,Merge pull request #14294 from hashicorp/derekm/split-grpc-ports,Add separate grpc tls port.
1372,Update website/content/docs/api-gateway/tech-specs.mdx,
1373,Update website/content/docs/api-gateway/tech-specs.mdx,Co-authored-by: Nathan Coleman nathan.coleman@hashicorp.com
1374,Update website/content/docs/api-gateway/tech-specs.mdx,Co-authored-by: Nathan Coleman nathan.coleman@hashicorp.com
1375,Merge branch 'main' of github.com:hashicorp/consul into derekm/split-grpc-ports,
1376,Update website/content/docs/api-gateway/tech-specs.mdx,Co-authored-by: Nathan Coleman nathan.coleman@hashicorp.com
1377,Remove rebuilding grpc server.,
1378,Merge pull request #14353 from hashicorp/nia/docs-0.7.0,Nia/docs 0.7.0
1379,Docs: add limitations to Tech Specs,
1380,fix to redirects file,
1381,Merge branch 'main' into nia/docs-0.7.0,
1382,Merge branch 'nia/docs-0.7.0' of ssh://github.com/hashicorp/consul into nia/docs-0.7.0,
1383,Merge branch 'main' of ssh://github.com/hashicorp/consul,
1384,updated HA configuration ref,
1385,Apply suggestions from code review,Co-authored-by: Michael Wilkerson 62034708+wilkermichael@users.noreply.github.com
1386,Apply suggestions from code review,Co-authored-by: Michael Wilkerson 62034708+wilkermichael@users.noreply.github.com
1387,fixed bad links in status/cluster endpoint ref,
1388,applied AJs feedback and made a few additional improvements,
1389,udpated how to ID the leader in the usage docs,
1390,added no-HA API status error message to EMs page,
1391,added cluster endpoint to status API docs,
1392,Apply suggestions from code review,
1393,Update website/content/docs/nia/usage/run-ha.mdx,
1394,redirects for CTS 0.7,
1395,final content tweaks for CTS 0.7 docs,
1396,Apply suggestions from code review,Co-authored-by: lornasong lornasong@users.noreply.github.com
1397,Apply suggestions from code review,Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com Co-authored-by: Michael Wilkerson 62034708+wilkermichael@users.noreply.github.com
1398,Apply suggestions from code review,Co-authored-by: Michael Wilkerson 62034708+wilkermichael@users.noreply.github.com Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com
1399,Apply suggestions from code review,Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com
1400,replaced HA diagrams with SVG files,
1401,updated the compatibility table for 0.7,
1402,"add HA to configuration reference, updated other configuration params",
1403,added ha information to the API endpoints docs,
1404,updates to the architecture page,
1405,added error messages page and link fixes to a few pages,
1406,add HA usage page and small revisions to standard usage page,
1407,"partial update to the nav, revisisions to the usage requirements page",
1408,updated reset-store flag and other page content,
1409,update docs (#13842),  update docs   Update website/content/docs/nia/cli/start.mdx   Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com
1410,Nia/cts tasks not required (#13731),  update docs   Update website/content/docs/nia/configuration.mdx   Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com
1411,Updated the default service name to lower case,"Changes to doc : Changed default service_name to consul-terraform-sync. Service name is used in service registration it was previously proper case, it is now lower case."
1412,Merge branch 'main' into nia/docs-0.7.0,
1413,Various cleanups.,
1414,Reuse http.DefaultTransport in UIMetricsProxy (#14521),"http.Transport keeps a pool of connections and should be reused when possible. We instantiate a new http.DefaultTransport for every metrics request, making large numbers of concurrent requests inefficiently spin up new connections instead of reusing open ones."
1415,ui: update tab nav steps to use isVisible vs clickable (#14517),  Add isVisible property to tab-nav page-object   Use IsVisible when testing visibility of tabs 
1416,ui: Add 'self-managed' badge when CONSUL_HCP_MANAGED_RUNTIME=self (#14496),
1417,ui: Detect token in a cookie and passthrough (#14495),
1418,updated HA configuration ref,
1419,Apply suggestions from code review,Co-authored-by: Michael Wilkerson 62034708+wilkermichael@users.noreply.github.com
1420,Apply suggestions from code review,Co-authored-by: Michael Wilkerson 62034708+wilkermichael@users.noreply.github.com
1421,ui: Use HCPURL / .HCPURL (#14489),
1422,Merge pull request #14285 from hashicorp/NET-638-push-server-address-updates-to-the-peer,peering: Subscribe to server address changes and push updates to peers
1423,ui: fix - proper await page object step (#14510),"  Fix await page-object properties properly   Remove ""sleep""-hack show-routing test   Fix - change serviceInstacesSelected test order   We need to change the order of test as the  tab-nav tab-elements are actually clickable and will be triggered via the ""see"" step. Because we are now properly awaiting these promises we need to change the test order and check if the service-instances tab is selected first, as the following steps will actually click the respective tabs during testing and thus change what is selected on the tab-nav.  Update ember-cli-page-object to latest"
1424,docs: licensing improvements (#14488),Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com
1425,move port and default check logic to locked step (#14057),
1426,Add SpiffeID for Consul server agents (#14485),"Co-authored-by: Eric Haberkorn erichaberkorn@gmail.com By adding a SpiffeID for server agents, servers can now request a leaf certificate from the Connect CA. This new Spiffe ID has a key property: servers are identified by their datacenter name and trust domain. All servers that share these attributes will share a ServerURI. The aim is to use these certificates to verify the server name of ANY server in a Consul datacenter."
1427,docs: small typos in single dc k8s clusters (#14484), docs: small typos in single dc k8s clusters  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1428,fixed bad links in status/cluster endpoint ref,
1429,applied AJs feedback and made a few additional improvements,
1430,proxycfg-glue: server-local implementation of IntentionUpstreamsDestination,This is the OSS portion of enterprise PR 2463. Generalises the serverIntentionUpstreams type to support matching on a service or destination.
1431,proxycfg-glue: server-local implementation of InternalServiceDump,"This is the OSS portion of enterprise PR 2489. This PR introduces a server-local implementation of the proxycfg.InternalServiceDump interface that sources data from a blocking query against the server's state store. For simplicity, it only implements the subset of the Internal.ServiceDump RPC handler actually used by proxycfg - as such the result type has been changed to IndexedCheckServiceNodes to avoid confusion."
1432,proxycfg-glue: server-local implementation of ResolvedServiceConfig,This is the OSS portion of enterprise PR 2460. Introduces a server-local implementation of the proxycfg.ResolvedServiceConfig interface that sources data from a blocking query against the server's state store. It moves the service config resolution logic into the agent/configentry package so that it can be used in both the RPC handler and data source. I've also done a little re-arranging and adding comments to call out data sources for which there is to be no server-local equivalent.
1433,udpated how to ID the leader in the usage docs,
1434,added no-HA API status error message to EMs page,
1435,added cluster endpoint to status API docs,
1436,Make proto-public a Go module,"Our original intention was for projects to consume and generate their own Go code for these protobuf packages using Buf. While this is still the best route for many projects, it causes some headaches when using a library (e.g. consul-server-connection-manager) that pulls in the same protobuf package as your project, as Go's protobuf implementation only allows for a package/namespace to be registered once. In such cases, projects can depend on this Go module instead, as a single place where these protobuf packages are registered."
1437,,
1438,Merge branch 'main' of github.com:hashicorp/consul into derekm/split-grpc-ports,
1439,revert links to learn,
1440,Add kv txn get-not-exists operation.,
1441,Merge branch 'main' of ssh://github.com/hashicorp/consul,
1442,PR feedback on terminated state checking,
1443,Add testcase for parsing grpc_port,
1444,ui: Add support for prefixing the API path (#14342),
1445,ui: Additionally use message for displaying errors in DataWriter (#14074),
1446,Merge pull request #14429 from hashicorp/ca-prune-intermediates,Prune old expired intermediate certs when appending a new one
1447,docs: Update single dc multiple k8s clusters doc (#14476),Co-authored-by: Jona Apelbaum jona@hashicorp.com
1448,fix(txn api): missing proxy config in registering proxy service (#14471), fix(txn api): missing proxy config in registering proxy service
1449,lint net/rpc usage (#12816),Signed-off-by: acpana 8968914+acpana@users.noreply.github.com Co-authored-by: R.B. Boyer rb@hashicorp.com
1450,fix(api): OSS<->ENT exported service incompatibility,
1451,Fix early return in prototest.AssertElementsMatch (#14467),
1452,Properly assert for ServerAddresses replication request,
1453,Fix terminate not returning early,
1454,update helm docs for release 0.48.0 (#14459),
1455,Docs cni plugin (#14009),Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com
1456,docs: Consul K8s 0.48.0 release notes (#14414),Co-authored-by: Thomas Eckert teckert@hashicorp.com
1457,Address PR comments.,
1458,Prune intermediates before appending new one,
1459,feat(cli): add initial peering cli commands,
1460,Use proxy address for default check (#14433),"When a sidecar proxy is registered, a check is automatically added. Previously, the address this check used was the underlying service's address instead of the proxy's address, even though the check is testing if the proxy is up. This worked in most cases because the proxy ran on the same IP as the underlying service but it's not guaranteed and so the proper default address should be the proxy's address."
1461,fix TestProxyConfigEntry (#14435),
1462,[docs] update docs for kube-1.24 support (#14339), update docs for kube-1.24 support. Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com
1463,ui: Adds a HCP home link when in HCP (#14417),
1464,ui: Use credentials for all HTTP API requests (#14343),Adds withCredentials/credentials to all HTTP API requests.
1465,docs: minor changes to cluster peering k8s docs and typos (#14442), docs: minor changes to cluster peering k8s docs and typos
1466,Add additional parameters to envoy passive health check config (#14238),"  draft commit   add changelog, update test   remove extra param   fix test   update type to account for nil value   add test for custom passive health check   update comments and tests   update description in docs   fix missing commas "
1467,ui: chore upgrade to ember-qunit v5 (#14430)," Refactor remaining moduleFor-tests  moduleFor* will be removed from ember-qunit v5   Upgrade ember-qunit to v5   Update how we use ember-sinon-qunit   With ember-qunit v5 we need to use ember-sinon-qunit differently.  Fix submit-blank test  We can't click on disabled buttons with new test-helpers. We need to adapt the test accordingly.  Make sure we await fill-in with form yaml step  We need to await fill-in. This changes the reducer function in the step to create a proper await chain.  Fix show-routing test  We need to await a tick before visiting again.   Remove redundant wait one tick-step   remove unneeded ""next Tick"" promise from form step   Increase timeout show-routing feature   Comment on pause hack for show-routing test "
1468,Merge pull request #14439 from hashicorp/NET-795-fix-ui-services-endpoint-to-return-all-imported-services-for-a-partition,Add Internal.ServiceDump support for querying by PeerName
1469,Add Internal.ServiceDump support for querying by PeerName,
1470,Merge pull request #13998 from jorgemarey/f-new-tracing-envoy,Add new envoy tracing configuration
1471,[Automated] Merged main into target: dev-portal,
1472,Change serf-tag references to field references.,
1473,Fix typo on documentation,
1474,"Suppress ""unbound variable"" error. (#14424)","Without this change, you'd see this error: ./run-tests.sh: line 49: LAMBDA_TESTS_ENABLED: unbound variable ./run-tests.sh: line 49: LAMBDA_TESTS_ENABLED: unbound variable"
1475,validate args before deleting proxy defaults (#14290),  validate args before deleting proxy defaults   add changelog   validate name when normalizing proxy defaults   add test for proxyConfigEntry   add comments 
1476,Add changelog note,
1477,Prune old expired intermediate certs when appending a new one,
1478,Merge branch 'main' into dev-portal,
1479,Merge pull request #14426 from hashicorp/docs/fix-node-lookup-by-removing-tag,docs: node lookups don't support filtering on tag
1480,docs: node lookups don't support filtering on tag,
1481,Merge pull request #14425 from hashicorp/update-get-started,Fix Get Started IA
1482,"Update get started section to include learn, rename overview -> install Consul",
1483,Merge pull request #14420 from hashicorp/docs/fix-peering-guide,docs: Fix code example in cluster peering
1484,Fix code example,
1485,updates previews to render Developer,
1486,Typo fix in service-splitter.mdx,
1487,docs: re-organize service and node lookups for Consul Enterprise (#14389), docs: re-organize service and node lookups for Consul Enterprise  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com Co-authored-by: Jared Kirschner 85913323+jkirschner-hashicorp@users.noreply.github.com
1488,ci: update backport-assistant to pick merge commit (#14408),
1489,docs: Additional feedback from PR #12971,This commit incorporates additional feedback received related to PR #12971.
1490,Merge remote-tracking branch 'hashicorp/main' into feature/health-checks_windows_service,
1491,events compiled to JSON sentence structure (#13717),
1492,Merge pull request #14385 from hashicorp/snapshot-agent-path-addressing,
1493,Finish up cluster peering failover (#14396),
1494,Merge branch 'main' into NET-638-push-server-address-updates-to-the-peer,Conflicts: agent/grpc-external/services/peerstream/stream_test.go
1495,Change changelog message,
1496,Fix typos. Add test. Add documentation,
1497,add changelog file,
1498,Add new tracing configuration,
1499,Run integration tests locally using amd64 (#14365),"Locally, always run integration tests using amd64, even if running on an arm mac. This ensures the architecture locally always matches the CI/CD environment. In addition: * Use consul:local for envoy integration and upgrade tests. Previously,   consul:local was used for upgrade tests and consul-dev for integration   tests. I didn't see a reason to use separate images as it's more   confusing. * By default, disable the requirement that aws credentials are set.   These are only needed for the lambda tests and make it so you   can't run any tests locally, even if you're not running the   lambda tests. Now they'll only run if the LAMBDA_TESTS_ENABLED   env var is set. * Split out the building of the Docker image for integration   tests into its own target from dev-docker. This allows us to always   use an amd64 image without messing up the dev-docker target. * Add support for passing GO_TEST_FLAGs to test-envoy-integ target. * Add a wait_for_leader function because tests were failing locally   without it."
1500,Apply suggestions from code review,
1501,Merge pull request #13496 from maxb/fix-kv_entries-metric,
1502,Merge pull request #14364 from hashicorp/peering/term-delete,
1503,Merge branch 'main' into fix-kv_entries-metric,
1504,Merge pull request #14371 from hashicorp/kisunji/peering-metrics-update,Adjust metrics reporting for peering tracker
1505,Fix a breaking change to the API package introduced in #13835 (#14378),QueryDatacenterOptions was renamed to QueryFailoverOptions without creating an alias. This adds QueryDatacenterOptions back as an alias to QueryFailoverOptions and marks it is deprecated.
1506,Add support for S3 path based addressing,
1507,Add heartbeat timeout grace period when accounting for peering health,
1508,docs: Cluster peering with Transparent Proxy updates  (#14369), Update Cluster Peering docs to show example with Transparent Proxy  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1509,Add documentation and changelog entry.,
1510,Expose grpc_tls via serf for cluster peering.,
1511,Add separate grpc_tls port.,"To ease the transition for users, the original gRPC port can still operate in a deprecated mode as either plain-text or TLS mode. This behavior should be removed in a future release whenever we no longer support this. The resulting behavior from this commit is:   ports.grpc > 0 && ports.grpc_tls > 0 spawns both plain-text and tls ports.   ports.grpc > 0 && grpc.tls == undefined spawns a single plain-text port.   ports.grpc > 0 && grpc.tls != undefined spawns a single tls port (backwards compat mode)."
1512,docs: Update Consul K8s release notes (#14379),
1513,Add changelog entry,
1514,Add validation to prevent switching dialing mode,"This prevents unexpected changes to the output of ShouldDial, which should never change unless a peering is deleted and recreated."
1515,Update max_ejection_percent on outlier detection for peered clusters to 100% (#14373),"We can't trust health checks on peered services when service resolvers, splitters and routers are used."
1516,fix(agent): removed redundant code in docker check as well,
1517,fix(agent): removed redundant check on prev. running check,
1518,Update website/content/docs/discovery/checks.mdx,Co-authored-by: Jared Kirschner 85913323+jkirschner-hashicorp@users.noreply.github.com
1519,Update website/content/docs/discovery/checks.mdx,Co-authored-by: Jared Kirschner 85913323+jkirschner-hashicorp@users.noreply.github.com
1520,chore: add multi-arch docker build for testing,
1521,Rename test,
1522,Fix test,
1523,Update the structs and discovery chain for service resolver redirects to cluster peers. (#14366),
1524,Merge pull request #14358 from hashicorp/replace-references-to-learn,Replace references to Learn
1525,fix merge conflicts,
1526,Merge branch 'dev-portal' into replace-references-to-learn,
1527,Merge pull request #14357 from hashicorp/replace-learn-links,Update Learn links in prep for DevDot
1528,fix merge conflicts,
1529,Merge pull request #14355 from hashicorp/consul-docs-ia-reshuffle,
1530,docs(checks): updated OSService docs to match new format,
1531,Merge remote-tracking branch 'hashicorp/main' into feature/health-checks_windows_service,Signed-off-by: Alessandro De Blasis alex@deblasis.net
1532,fix(OSServiceCheck): fixes following code-review,
1533,Update website/content/api-docs/agent/check.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1534,Update website/content/docs/discovery/checks.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1535,Update website/content/docs/nia/usage/run-ha.mdx,
1536,Merge branch 'main' into nia/docs-0.7.0,
1537,redirects for CTS 0.7,
1538,final content tweaks for CTS 0.7 docs,
1539,Adjust metrics reporting for peering tracker,
1540,Apply suggestions from code review,Co-authored-by: lornasong lornasong@users.noreply.github.com
1541,"docs: Release notes for Consul 1.12, 1.13 and Consul K8s 0.47.0 (#14352)"," consul 1.12, consul 1.13, and consul-k8s release notes  Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com"
1542,Apply suggestions from code review,Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com Co-authored-by: Michael Wilkerson 62034708+wilkermichael@users.noreply.github.com
1543,Apply suggestions from code review,Co-authored-by: Michael Wilkerson 62034708+wilkermichael@users.noreply.github.com Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com
1544,Apply suggestions from code review,Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com
1545,Allow terminated peerings to be deleted,"Peerings are terminated when a peer decides to delete the peering from their end. Deleting a peering sends a termination message to the peer and triggers them to mark the peering as terminated but does NOT delete the peering itself. This is to prevent peerings from disappearing from both sides just because one side deleted them. Previously the Delete endpoint was skipping the deletion if the peering was not marked as active. However, terminated peerings are also inactive. This PR makes some updates so that peerings marked as terminated can be deleted by users."
1546,Merge pull request #14347 from hashicorp/update-terminating-gateway-docs,Update Kubernetes Terminating Gateway Docs
1547,Updated consul monitoring with Newrelic APM  (#14360), added newrelic consul quickstart link adding HCP Consul  Co-authored-by: David Yu dyu@hashicorp.com
1548,Fix casing,
1549,replaced HA diagrams with SVG files,
1550,Merge pull request #11742 from dekimsey/catalog-service-list-filter,Add support for filtering the 'List Services' API
1551,Merge branch 'main' into catalog-service-list-filter,
1552,Fix tests for enterprise,
1553,Merge branch 'main' into NET-638-push-server-address-updates-to-the-peer,Conflicts: agent/grpc-external/services/peerstream/stream_test.go
1554,Replace ring buffer with async version (#14314),"We need to watch for changes to peerings and update the server addresses which get served by the ring buffer. Also, if there is an active connection for a peer, we are getting up-to-date server addresses from the replication stream and can safely ignore the token's addresses which may be stale."
1555,Replace references to Learn,
1556,Update Learn links in prep for devdot,
1557,Update redirects,
1558,Merge pull request #14354 from hashicorp/main,Ensure that dev-portal reflects what's currently on main
1559,updated the compatibility table for 0.7,
1560,"add HA to configuration reference, updated other configuration params",
1561,added ha information to the API endpoints docs,
1562,updates to the architecture page,
1563,added error messages page and link fixes to a few pages,
1564,add HA usage page and small revisions to standard usage page,
1565,peering: add peer health metric (#14004),Signed-off-by: acpana 8968914+acpana@users.noreply.github.com
1566,Fix Consul KV CLI 'GET' flags 'keys' and 'recurse' to be set together (#13493),allow flags -recurse and -keys to be run at the same time in consul kv get CLI
1567,"partial update to the nav, revisisions to the usage requirements page",
1568,updated reset-store flag and other page content,
1569,Merge pull request #13932 from hashicorp/docs/crossref-maint-mode-from-health-checks,docs: improve health check related docs
1570,docs: improve health check related docs,Includes: - Improved scannability and organization of checks overview - Checks overview includes more guidance on   - How to register a health check   - The options available for a health check definition - Contextual cross-references to maintenance mode
1571,Capitalize Helm,
1572,Add links to requirements,
1573,Use tabs for destinations,
1574,Lil' more cleanup,
1575,Clean up copy in ACL role update,
1576,Normalize table with nobrs,
1577,Format traffic behaviors table,
1578,Clean up copy for registration,
1579,Use tabs for with and without TLS,
1580,Instruct users to use the CLI,
1581,Remove warning about 1.9,
1582,Exit loop when context is cancelled,
1583,docs: Update Envoy support matrix to match the code (#14338),
1584,Fix: the inboundconnection limit filter should be placed in front of http co… (#14325), fix: the inboundconnection limit should be placed in front of http connection manager  Co-authored-by: Freddy freddygv@users.noreply.github.com
1585,Add 14269 changelog entry.,
1586,Update test comment,
1587,Add check for zero-length server addresses,
1588,no-op: refactor usagemetrics tests for clarity and DRY cases (#14313),
1589,Added new auto_encrypt.grpc_server_tls config option to control AutoTLS enabling of GRPC Server's TLS usage,Fix for #14253 Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1590,doc: tproxy destination fixes,
1591,ui: Replace file-mask with file-text icon usage on policy list (#14275),
1592,dataplane: update envoy bootstrap params for consul-dataplane (#14017),"Contains 2 changes to the GetEnvoyBootstrapParams response to support consul-dataplane. Exposing node_name and node_id: consul-dataplane will support providing either the node_id or node_name in its configuration. Unfortunately, supporting both in the xDS meta adds a fair amount of complexity (partly because most tables are currently indexed on node_name) so for now we're going to return them both from the bootstrap params endpoint, allowing consul-dataplane to exchange a node_id for a node_name (which it will supply in the xDS meta). Properly setting service for gateways: To avoid the need to special case gateways in consul-dataplane, service will now either be the destination service name for connect proxies, or the gateway service name. This means it can be used as-is in Envoy configuration (i.e. as a cluster name or in metric tags)."
1593,Clarify docs around using either Consul or Vault managed PKI paths (#13295), Clarify docs around using either Consul or Vault managed PKI paths  The current docs can be misread to indicate that you need both the Consul and Vault managed PKI Paths policies. The Learning Tutorial is clearer. This tries to make the original docs as clear as the learning tutorial  Clarify that PKI secret engines are used to store certs  Co-authored-by: Blake Covarrubias blake.covarrubias@gmail.com
1594,Clarify transparent proxy documentation (#14301)," Clarify transparent proxy documentation  Some confusion over known limitations for transparent proxy, specifically over federation versus cluster peering. Updated KubeDNS to Kubernetes DNS for consistency with Kubernetes documentation. Co-authored-by: David Yu dyu@hashicorp.com Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com"
1595,more more reshuffling,
1596,more reshuffling,
1597,more reshuffling,
1598,proxycfg: terminate stream on irrecoverable errors,"This is the OSS portion of enterprise PR 2339. It improves our handling of ""irrecoverable"" errors in proxycfg data sources. The canonical example of this is what happens when the ACL token presented by Envoy is deleted/revoked. Previously, the stream would get ""stuck"" until the xDS server re-checked the token (after 5 minutes) and terminated the stream. Materializers would also sit burning resources retrying something that could never succeed. Now, it is possible for data sources to mark errors as ""terminal"" which causes the xDS stream to be closed immediately. Similarly, the submatview.Store will evict materializers when it observes they have encountered such an error."
1599,Updates docs for CRDs (#14267),Co-authored-by: NicoletaPopoviciu nicoleta@hashicorp.com
1600,ui: Update badge / pill icon sizing (#14282),  Update badge icon sizing to be 16x16   Update icon sizing in pill component 
1601,PR feedback to specify Node name in test mock,
1602,Merge pull request #13999 from hashicorp/docs/improve-dns-lookup-variable-consistency,docs: improve consistency of DNS lookup variables
1603,docs: improve consistency of DNS lookup variables,"Previously, some variables were wrapped in < > while others were not, creating ambiguity in whether some labels were a string literal or a variable. Now, all variables are wrapped in < >."
1604,Merge pull request #14034 from hashicorp/make-proxy-sidecar-for-case-insensitive,Allow uppercase in proxy launch -sidecar-for arg
1605,Merge pull request #13967 from hashicorp/jkirschner-hashicorp-patch-3,docs: link pq docs to relevant DNS lookup section
1606,Cluster peering failover disco chain changes (#14296),
1607,docs: link pq docs to relevant DNS lookup section,
1608,Merge pull request #14221 from hashicorp/jkirschner-hashicorp-patch-1,docs: update k8s vault connect ca config docs
1609,docs: update k8s vault connect ca config docs, Add namespace to additionalConfig example Improve the link to additional configuration options available
1610,Reshuffle Docs nav IA,
1611,Merge branch 'main' of ssh://github.com/hashicorp/consul,
1612,Merge pull request #14288 from hashicorp/apigw-docs-x-namespace-cert,Add example code for cross-namespace certificateRefs
1613,Update website/content/docs/api-gateway/configuration/gateway.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1614,Apply suggestions from code review,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1615,Fix flakes,
1616,Update website/content/docs/api-gateway/configuration/gateway.mdx,
1617,Apply suggestions from code review,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1618,Increase heartbeat rate to reduce test flakes,
1619,Update requirements.mdx (#14286), Update requirements.mdx
1620,Remove check for ResponseNonce,
1621,Add missing mock assertions,
1622,Fix data race,newMockSnapshotHandler has an assertion on t.Cleanup which gets called before the event publisher is cancelled. This commit reorders the context.WithCancel so it properly gets cancelled before the assertion is made.
1623,Fix: add missing ent meta for test (#14289),
1624,Add changelog,
1625,Handle server addresses update as client,
1626,Send server addresses on update from server,
1627,Add new subscription for server addresses,
1628,Cleanup unused logger,
1629,Correct structure of existing tls.certificateRefs example,
1630,Add example code for cross-namespace certificateRefs,
1631,Expose external gRPC port in autopilot,The grpc_port was added to a NodeService's meta in ea58f235f5da416224ba615405269661ba1f4d8d
1632,Add PeeringServerAddresses proto,
1633,Merge pull request #14279 from hashicorp/docs/1-13-upgrade-considerations-changelog,docs: add 1.13 upgrade considerations to changelog
1634,docs: add 1.13 upgrade considerations to changelog,
1635,fix:  missing MaxInboundConnections field in service-defaults config entry (#14072), fix:  missing max_inbound_connections field in merge config
1636,Skip Lambda integration tests for fork PRs (#14257),
1637,Merge pull request #14259 from hashicorp/docs/1-13-upgrade-considerations,docs: add 1.13 upgrade considerations
1638,docs: add 1.13 upgrade considerations,Adds guidance when upgrading a Consul service mesh deployment to 1.13 and: - using auto-encrypt or auto-config; or - the HTTPS port is not enabled on Consul agents
1639,Add missing changelog for 1.9.17 (#14053),
1640,Add version label to Docker image (#14204),
1641,Merge pull request #14231 from hashicorp/jkirschner-hashicorp-patch-4,docs: fix broken markdown
1642,Fix: upgrade pkg imdario/merg to prevent merge config panic (#14237),  upgrade imdario/merg to prevent merge config panic   test: service definition takes precedence over service-defaults in merged results 
1643,set PRODUCT_VERSION for docker build (#14242),"Changes proposed in this PR: In actions-docker-build we pass PRODUCT_VERSION to the docker build command. Since this was not set, the label did not populate properly which is used in a comparison to determine the minor-latest and latest docker image tags.  How I've tested this PR:  - build the image up to the point of label creation and pass in --build-arg PRODUCT_VERSION=1.2.3  - inspect the image for the label with the above command How I expect reviewers to test this PR: - same as above Related [internal-only] post about this: https://hashicorp.atlassian.net/wiki/spaces/RELENG/pages/2416934922/August+17+2022-+Docker+Build+Failures"
1644,Merge pull request #14230 from hashicorp/amb.use-badge-in-nav-data,Use badge for  tags in nav data JSON file
1645,Use the maximum jitter when calculating the timeout,The timeout should include the maximum possible jitter since the server will randomly add to it's timeout a jitter. If the server's timeout is less than the client's timeout then the client will return an i/o deadline reached error. Before: time curl 'http://localhost:8500/v1/catalog/service/service?dc=other-dc&stale=&wait=600s&index=15820644' rpc error making call: i/o deadline reached real    10m11.469s user    0m0.018s sys     0m0.023s After: time curl 'http://localhost:8500/v1/catalog/service/service?dc=other-dc&stale=&wait=600s&index=15820644' [...] real    10m35.835s user    0m0.021s sys     0m0.021s
1646,fix website/docs/agent/telemetry,"Labels' chart appears broken when rendered in the website, adding some spacing to fix it"
1647,docs: fix broken markdown,
1648,Replacing  tag with badge,
1649,ci: Replace Nomad integration tests with predictable compatibility matrix (#14220),
1650,Merge pull request #14196 from hashicorp/docs/capigw-v0.4.0,Docs updates for Consul API Gateway v0.4.0
1651,Added Known Issues and other edits to Rel Notes,
1652,Minor edits to Release Notes,
1653,Minor edits to Release Notes,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1654,Update website/content/docs/release-notes/consul-api-gateway/v0_4_x.mdx,
1655,Merge pull request #14205 from hashicorp/api-gateway-install-redirrects,Add missing install redirrect to redirrect.js for api-gateway docs
1656,Update redirects.js,
1657,Update redirects.js,
1658,Merge pull request #14175 from hashicorp/docs/capigw-040-route-details-prefix-rewrite,Docs/capigw 040 route details prefix rewrite
1659,Fix typo,
1660,Apply suggestions from code review,
1661,Apply suggestions from code review,Co-authored-by: Nathan Coleman nathan.coleman@hashicorp.com
1662,Merge branch 'docs/capigw-v0.4.0' into docs/capigw-040-route-details-prefix-rewrite,
1663,Update ReferencePolicy -> ReferenceGrant,
1664,Add missing code block,
1665,Replace MeshService section on Route page w/ link to new page,
1666,Add new MeshService config page to nav,
1667,Add page for MeshService configuration object for Consul API Gateway,
1668,Fix typo in Gateway docs header,
1669,Add Targets field to service resolver failovers. (#14162),This field will be used for cluster peering failover.
1670,Merge remote-tracking branch 'hashicorp/main' into feature/health-checks_windows_service,Signed-off-by: Alessandro De Blasis alex@deblasis.net
1671,Merge remote-tracking branch 'hashicorp/main' into feature/health-checks_windows_service,Signed-off-by: Alessandro De Blasis alex@deblasis.net
1672,implemented additional information about route configuration,
1673,"Correct problem with merge from master, including reformat of table",
1674,Release Notes for CAPIgw v0.4.x,
1675,fix: missing segment and partition (#14194),
1676,Refactor failover code to use Envoy's aggregate clusters (#14178),
1677,peering: update docs with exposing servers (#14191),
1678,Update helm docs for cluster peering (#14188),
1679,docs: bumping requirements for cluster peering to consul k8s 0.47.0 and 1.13.1 (#14177),
1680,docs: update consul-k8s compat matrix and remove 1.10.x version (#14106),
1681,Cluster Peering Prepared Query Failover Documentation (#13846),Add documentation for cluster peering prepared query failover
1682,added configuration model for routes,
1683,added usage docs for prefix rewrite,
1684,updated Routes configuration ref,
1685,Merge pull request #14154 from hashicorp/1.13.1-upgrade-considerations,
1686,feat(telemetry): add labels to serf and memberlist metrics (#14161), feat(telemetry): add labels to serf and memberlist metrics changelog doc update  Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com
1687,docs: changelog for 1.13.1 (#14168),
1688,Add changelog entry for peering fix (#14160),
1689,Typo fix,
1690,docs: changelog 1.12.4 and 1.11.8,
1691,Update with more details on 1.13.0 issue,
1692,Apply suggestions from code review,Co-authored-by: Jared Kirschner 85913323+jkirschner-hashicorp@users.noreply.github.com
1693,Merge branch 'main' of ssh://github.com/hashicorp/consul,
1694,Handle breaking change for ServiceVirtualIP restore (#14149),Consul 1.13.0 changed ServiceVirtualIP to use PeeredServiceName instead of ServiceName which was a breaking change for those using service mesh and wanted to restore their snapshot after upgrading to 1.13.0. This commit handles existing data with older ServiceName and converts it during restore so that there are no issues when restoring from older snapshots.
1695,Add upgrade instructions and considerations for Consul 1.13.1,
1696,docs(capigw): add v0.4.0 upgrade instructions (#14101),"docs(capigw): add manual ReferencePolicy -> ReferenceGrant migration steps, comment out kube-storage-version-migrator workflow in case we choose to publish it later"
1697,ci: Disable Arm RPM verifications (#14142),
1698,Add test to verify forwarding,
1699,Register peerStreamServer internally to enable RPC forwarding,
1700,Handle wrapped errors in isFailedPreconditionErr,
1701,Merge pull request #14126 from hashicorp/ashwin/recreate-token-docs,Add docs to recreate peering token.
1702,Merge pull request #14136 from hashicorp/boruszak/docs-fix,docs: Fixing merge error
1703,Blank commit,
1704,Add support for filtering the 'List Services' API, Create a bexpr filter for performing the filtering Change the state store functions to return the raw (not aggregated)    list of ServiceNodes. Move the aggregate service tags by name logic out of the state store    functions into a new function called from the RPC endpoint Perform the filtering in the endpoint before aggregation.
1705,Update website/content/docs/connect/cluster-peering/k8s.mdx,Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
1706,Add Consul ECS v0.5 release notes (#14010),
1707,Sync changes from 1.13.0 release (#14104),
1708,docs: Update supported Envoy versions (#14130),
1709,Update website/content/docs/connect/cluster-peering/k8s.mdx,Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
1710,ui: Improve display peer info in service list (#14111), Include nspace when surfacing peer in bucket-list  Whenever we display a peer and we are not on OSS we will surface the namespace as well. The rest of the ui logic of the bucket list has not changed.  Display bucket-list after instance-count service-list
1711,Don't surface partitions in service search sources (#14078),
1712,Use actual intention for permission check intentions edit (#14113),
1713,Add docs to recreate peering token.,
1714,Merge pull request #14114 from hashicorp/docs/peering-v113-update,docs: Cluster Peering Beta - Not avail on HCP Consul
1715,Update website/content/docs/connect/cluster-peering/k8s.mdx,Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
1716,Update website/content/docs/connect/cluster-peering/index.mdx,Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
1717,fix: shadowed err in retryJoin() (#14112), err value will be used later to surface the error message   if r.join() returns any err.
1718,Not available on HCP Consul update,
1719,Merge pull request #14056 from hashicorp/proxy-register-port-race,Refactor sidecar_service method to separate port assignment
1720,Merge branch 'main' into proxy-register-port-race,
1721,cli: update agent log preamble to reflect per-listener TLS config,
1722,update docs (#13909),
1723,Merge pull request #13860 from hashicorp/consul-1.13/update-consul-k8s-cli-docs,Update consul-k8s CLI docs with Envoy Debugging
1724,Empty commit,
1725,Merge pull request #14093 from hashicorp/kisunji/nomad-docs,Updates upgrade docs to clarify Nomad bug is fixed
1726,Updates upgrade docs to clarify Nomad bug is fixed,
1727,Merge pull request #14011 from hashicorp/docs/cluster-peering-beta,docs: Cluster Peering beta
1728,Merge pull request #14066 from hashicorp/consul-er-add-service-discovery-seo-doc,Add Service Discovery Use Case
1729,Retrigger CI,
1730,Merge pull request #14070 from hashicorp/kisunji/peering-tproxy-docs,docs: Update references for transparent proxy with peers
1731,Merge pull request #14081 from hashicorp/kisunji/fix-listener-leak,agent: Close existing active listeners when agent fails on an address
1732,Remove the beta warning for the upgrade command,
1733,Close active listeners on error,"If startListeners successfully created listeners for some of its input addresses but eventually failed, the function would return an error and existing listeners would not be cleaned up."
1734,trigger CI,
1735,Add retry in TestAgentConnectCALeafCert_good,
1736,Fixes,
1737,Merge branch 'docs/cluster-peering-beta' of github.com:hashicorp/consul into docs/cluster-peering-beta,
1738,Addt'l fixes,
1739,Fixes according to Freddy's review/comments,
1740,Update website/content/docs/connect/cluster-peering/k8s.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1741,Update website/content/docs/connect/cluster-peering/index.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1742,WAN Federation/Cluster Peering comparison table addition,
1743,Update website/content/docs/connect/cluster-peering/create-manage-peering.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1744,Update website/content/docs/connect/cluster-peering/create-manage-peering.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1745,Update website/content/docs/connect/cluster-peering/create-manage-peering.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1746,Update website/content/docs/connect/cluster-peering/create-manage-peering.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1747,Update wording on intentions,
1748,Update website/content/docs/connect/cluster-peering/create-manage-peering.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1749,Delete peering UI instructions,
1750,ui: Add undefined check for peer model creation (#14075),
1751,Apply Adam's suggestions,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1752,Fixed rendering,
1753,Update docs for peered transparent proxy,
1754,add suggestions from code review,
1755,Apply suggestions from code review,Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
1756,docs: destination docs for k8s,
1757,Clean up copy for the raw example,
1758,UI instructions,
1759,Track last user of a port,
1760,Clean up raw copy,Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
1761,Combine shell sessions,
1762,add doc to content nav,
1763,Clean up external links about proxies,Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
1764,Add colon,Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
1765,Add Service Discovery Use Case,
1766,Remove extra space from commands,
1767,See -> Refer to the,Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
1768,Note -> Tip,Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
1769,to -> on,Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
1770,Clarify use of Helm,
1771,Update website/content/docs/k8s/k8s-cli.mdx,Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
1772,Add peering connection UI iinitial commit.,
1773,add config parameters doc for destination in service-defaults (#13950),  add config parameters doc for destination in service-defaults   add destination config example   add documentations around tgateway config   Apply suggestions from code review   Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com  Apply suggestions from code review  Co-authored-by: Dan Stough dan.stough@hashicorp.com   fix based on comments   fix typo   fix code tab array   fix yaml description for addresses and port   do not split yaml and hcl when the description is the same   Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com Co-authored-by: Dan Stough dan.stough@hashicorp.com
1774,Added info about Consul server config requirements,
1775,Merge pull request #13958 from hashicorp/gateway-wildcard-fix,Fix wildcard picking up services it shouldn't for ingress/terminating gateways
1776,Make external reference links sentences,
1777,Add retries and debugging to flaky test,
1778,Add debugging logs to freeport,
1779,Add read command examples,
1780,Change   to ,
1781,Add some extra handling for destination deletes,
1782,Add peering ACL docs (#13855),Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com
1783,"Remove ""Required"" column from options (they are all optional)",
1784,Update the table of contents with better descriptions,
1785,Retry docker build steps,
1786,Merge pull request #13790 from hashicorp/post-publish-website,introduces the post publish website event
1787,Merge pull request #13675 from hashicorp/sa-restructure-documentation,Restructure Api Gateway Documentation
1788,Merge pull request #14024 from hashicorp/peering/secrets-fixes,
1789,Update snapshot test,
1790,fix identation,
1791,Re-validate existing secrets at state store,"Previously establishment and pending secrets were only checked at the RPC layer. However, given that these are Check-and-Set transactions we should ensure that the given secrets are still valid when persisting a secret exchange or promotion. Otherwise it would be possible for concurrent requests to overwrite each other."
1792,revert indent,
1793,test,
1794,Test fixes,
1795,indentation,
1796,Update website/content/docs/api-gateway/configuration/gateway.mdx,
1797,Update peerings docs links (#14040),
1798,ui: Add additional generation/initiation data-sources (#14018),
1799,ui: Ensure we dispatch validation state (#14021),  ui: Ensure we dispatch validation state   Changelog 
1800,ui: Make DataWriter also deal with more standard shaped errors (#14025),  ui: Make DataWriter also deal with more standard shaped errors   ui: Add error states/messages for peering establishment (#14026)   ui: Add error states/messages for peering establishment   Inspect state instead of asking about existence of error 
1801,Use proto message for each secrets write op,Previously there was a field indicating the operation that triggered a secrets write. Now there is a message for each operation and it contains the secret ID being persisted.
1802,Allow uppercase in proxy launch -sidecar-for arg,"Previously, when launching a sidecar proxy with one of the following commands: - consul connect envoy -sidecar-for=... - consul connect proxy -sidecar-for=... ... the -sidecar-for argument could only contain lowercase letters, even if the service was registered with some uppercase letters. Now, the -sidecar-for argument is treated as case-insensitive."
1803,Merge branch 'sa-restructure-documentation' of github.com:hashicorp/consul into sa-restructure-documentation,
1804,note rendering weird,
1805,bulleted list,
1806,Update website/content/docs/api-gateway/configuration/gateway.mdx,Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
1807,Update website/content/docs/api-gateway/configuration/gateway.mdx,Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
1808,delete confusing sentence,
1809,Merge branch 'sa-restructure-documentation' of github.com:hashicorp/consul into sa-restructure-documentation,
1810,remove configuration section,
1811,render issue,
1812,Update website/content/docs/api-gateway/configuration/gatewayclassconfig.mdx,Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
1813,Update website/redirects.js,Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
1814,Update website/content/docs/api-gateway/usage.mdx,Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
1815,Update website/content/docs/api-gateway/usage.mdx,Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
1816,clarify artifacts being applied,
1817,Update website/content/docs/api-gateway/install.mdx,Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
1818,Update website/content/docs/api-gateway/install.mdx,Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
1819,Update website/content/docs/api-gateway/configuration/gatewayclassconfig.mdx,Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
1820,Update website/content/docs/api-gateway/configuration/gatewayclassconfig.mdx,Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
1821,Update ingress/terminating wildcard logic and handle destinations,
1822,fix(cli): error message in service deregister subcommand (#14028),
1823,ui: Ensure CopyableCode copy icon/button is fully clickable (#14016),  ui: Ensure CopyableCode copy icon/button is fully clickable   Give it a 40px height also 
1824,Inherit active secret when exchanging,
1825,Pass explicit signal with op for secrets write,Previously the updates to the peering secrets UUID table relied on inferring what action triggered the update based on a reconciliation against the existing secrets. Instead we now explicitly require the operation to be given so that the inference isn't necessary. This makes the UUID table logic easier to reason about and fixes some related bugs. There is also an update so that the peering secrets get handled on snapshots/restores.
1826,Avoid deleting peering secret UUIDs at dialers,"Dialers do not keep track of peering secret UUIDs, so they should not attempt to clean up data from that table when their peering is deleted. We also now keep peer server addresses when marking peerings for deletion. Peer server addresses are used by the ShouldDial() helper when determining whether the peering is for a dialer or an acceptor. We need to keep this data so that peering secrets can be cleaned up accordingly."
1827,ui: peering UI fixes - api contract change / wrong link in peerings list (#14007),  Don't send Datacenter when establishing peer   Don't surface link to non-existing peers.edit route anymore 
1828,ui: Re-hook up regenerate button (#14015),
1829,Merge pull request #13906 from skpratt/validate-port-agent-split,Separate port and socket path validation for local agent
1830,Minor edit,
1831,Proofing edits,
1832,Proofing edits,
1833,New features/functions list,
1834,"New ""Mesh Gateways for Peered Clusters"" page",
1835,Initial new features commit,
1836,added required and type to parametersRef,
1837,Update website/content/docs/api-gateway/configuration/gateway.mdx,Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
1838,add token to the request when creating a cacheIntentions query (#14005),
1839,Update website/content/docs/api-gateway/configuration/gateway.mdx,Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
1840,typo,
1841,indent issue,
1842,flatten useage,
1843,Update website/content/docs/api-gateway/configuration/gatewayclass.mdx,
1844,Update website/content/docs/api-gateway/usage/basic-usage.mdx,Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
1845,Fix wildcard picking up services it shouldn't for ingress/terminating gateways,
1846,indent,
1847,Update website/content/docs/api-gateway/configuration/gatewayclassconfig.mdx,
1848,Update website/content/docs/api-gateway/configuration/gatewayclassconfig.mdx,
1849,added to,
1850,Update website/content/docs/api-gateway/install.mdx,Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
1851,Update website/content/docs/api-gateway/install.mdx,Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
1852,Update website/content/docs/api-gateway/install.mdx,Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
1853,reformat,
1854,Update website/content/docs/api-gateway/install.mdx,Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
1855,Update website/content/docs/api-gateway/configuration/index.mdx,Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
1856,Update website/content/docs/api-gateway/configuration/index.mdx,Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
1857,Update website/content/docs/api-gateway/configuration/index.mdx,Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
1858,Update website/content/docs/api-gateway/configuration/gatewayclassconfig.mdx,Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
1859,Update website/content/docs/api-gateway/configuration/gatewayclass.mdx,Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
1860,Update website/content/docs/api-gateway/install.mdx,Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
1861,chore: changelog for destinations,
1862,proxycfg-sources: fix hot loop when service not found in catalog,Fixes a bug where a service getting deleted from the catalog would cause the ConfigSource to spin in a hot loop attempting to look up the service. This is because we were returning a nil WatchSet which would always unblock the select. Kudos to @freddygv for discovering this!
1863,Various peering fixes (#13979), Avoid logging StreamSecretID Wrap additional errors in stream handler Fix flakiness in leader test and rename servers for clarity. There was   a race condition where the peering was being deleted in the test   before the stream was active. Now the test waits for the stream to be   connected on both sides before deleting the associated peering. Run flaky test serially
1864,Update website/content/docs/api-gateway/configuration/gatewayclassconfig.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1865,Update website/content/docs/api-gateway/configuration/gatewayclassconfig.mdx,
1866,Update website/content/docs/api-gateway/configuration/gatewayclass.mdx,
1867,Update website/content/docs/api-gateway/configuration/gatewayclassconfig.mdx,
1868,added tls config context,
1869,added context to tls settings,
1870,fix: ipv4 destination dns resolution,
1871,ci: Use pattern for CRT release branch config (#13955),
1872,Proofing updates & adjustments,
1873,Updated functionality + task instructions,
1874,peering: default to false (#13963), defaulting to false because peering will be released as beta Ignore peering disabled error in bundles cachetype  Co-authored-by: Matt Keeler mkeeler@users.noreply.github.com Co-authored-by: freddygv freddy@hashicorp.com Co-authored-by: Matt Keeler mjkeeler7@gmail.com
1875,Merge branch 'main' into fix-kv_entries-metric,
1876,Merge pull request #13499 from maxb/delete-unused-metric,Delete definition of metric consul.acl.blocked.node.deregistration
1877,Tgtwy egress HTTP support (#13953),  add golden files   add support to http in tgateway egress destination   fix slice sorting to include both address and port when using server_names   fix listener loop for http destination   fix routes to generate a route per port and a virtualhost per port-address combination   sort virtual hosts list to have a stable order   extract redundant serviceNode 
1878,update docs (#13842),  update docs   Update website/content/docs/nia/cli/start.mdx   Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com
1879,Nia/cts tasks not required (#13731),  update docs   Update website/content/docs/nia/configuration.mdx   Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com
1880,Updated the default service name to lower case,"Changes to doc : Changed default service_name to consul-terraform-sync. Service name is used in service registration it was previously proper case, it is now lower case."
1881,Beta release constraints updated,
1882,Merge pull request #13871 from hashicorp/docs-update-enterprise-licensing-description,docs: update enterprise licensing description
1883,Nav correction,
1884,"Update ""technical preview"" to ""beta""",
1885,Implement/Utilize secrets for Peering Replication Stream (#13977),
1886,Merge pull request #13966 from hashicorp/jkirschner-hashicorp-patch-1,docs: fix k8s prepared query upstream link
1887,docs: fix k8s prepared query upstream link,
1888,block PeerName register requests (#13887),Signed-off-by: acpana 8968914+acpana@users.noreply.github.com
1889,peering: retry establishing connection more quickly on certain errors (#13938),"When we receive a FailedPrecondition error, retry that more quickly because we expect it will resolve shortly. This is particularly important in the context of Consul servers behind a load balancer because when establishing a connection we have to retry until we randomly land on a leader node. The default retry backoff goes from 2s, 4s, 8s, etc. which can result in very long delays quite quickly. Instead, this backoff retries in 8ms five times, then goes exponentially from there: 16ms, 32ms, ... up to a max of 8152ms."
1890,Separate port and socket path requirement in case of local agent assignment,
1891,Update website/content/docs/api-gateway/configuration/gatewayclassconfig.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1892,Update website/content/docs/api-gateway/configuration/gatewayclassconfig.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1893,parametesRef set to optional,
1894,Ensure connections are closed before WaitGroup marked as done,The previous ordering of defers meant the listener's connWG could fire and wake up other goroutines before the connection closed. Unsure if this caused any real bugs but this commit should make the code more correct.
1895,Update website/content/docs/api-gateway/configuration/gatewayclassconfig.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1896,Update website/content/docs/api-gateway/configuration/gatewayclassconfig.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1897,Update website/content/docs/api-gateway/configuration/gatewayclassconfig.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1898,Update website/content/docs/api-gateway/configuration/gatewayclassconfig.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1899,Update website/content/docs/api-gateway/configuration/gatewayclassconfig.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1900,Update website/content/docs/api-gateway/configuration/gatewayclassconfig.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1901,Update website/content/docs/api-gateway/configuration/gatewayclassconfig.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1902,Update website/content/docs/api-gateway/configuration/gatewayclassconfig.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1903,Update website/content/docs/api-gateway/configuration/gatewayclassconfig.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1904,Update website/content/docs/api-gateway/configuration/gatewayclassconfig.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1905,Merge pull request #13952 from hashicorp/sync-more-acl,sync more acl enforcement
1906,inject gateway addons to destination clusters (#13951),
1907,sync more acl enforcement,sync w ent at 32756f7 Signed-off-by: acpana 8968914+acpana@users.noreply.github.com
1908,tweaks to the basic usage topic,
1909,tweaks to the configuration overview page,
1910,Merge pull request #13929 from hashicorp/fix-validation,[sync] fix empty partitions matching
1911,more tweaks to gatewayclass docs,
1912,ci: Use correct branch name for 1.13 nightly test (#13945),
1913,fix (cli): import empty directory to kv (#13939),"  fix (cli): import empty directory to kv   when import an empty directory like foo/, the import   command will remove the trailing /, making it a   non-directory key.  This change fixes the bug by adding back the / if   the imported key is an directory"
1914,refactor sidecare_service method into parts,
1915,minor changes to the gatewayclass documentation,
1916,Merge pull request #13917 from hashicorp/docs/show-cli-cmd-options-before-general-options-2,docs: show CLI cmd-specific opts before general opts
1917,docs: show CLI cmd-specific opts before general opts,Applied to all remaining CLI commands.
1918,Add peer counts to emitted metrics. (#13930),
1919,fixed small typo,
1920,fixed links and clarified some sections in gateway configuration doc,
1921,Merge pull request #13924 from hashicorp/lkysow/util-metric-peering,peering: don't track imported services/nodes in usage
1922,use EqualPartitions,Signed-off-by: acpana 8968914+acpana@users.noreply.github.com
1923,better fix,Signed-off-by: acpana 8968914+acpana@users.noreply.github.com
1924,"ci: Add nightly test workflow for 1.13, remove 1.10 (#13927)",Signed-off-by: Evan Culver eculver@hashicorp.com
1925,Merge branch 'main' of github.com:hashicorp/consul into sa-restructure-documentation,
1926,sync w ent,Signed-off-by: acpana 8968914+acpana@users.noreply.github.com
1927,Reduce arm64 flakes for TestConnectCA_ConfigurationSet_ChangeKeyConfig_Primary,"There were 16 combinations of tests but 4 of them were duplicates since the default key type and bits were ""ec"" and 256. That entry was commented out to reduce the subtest count to 12. testrpc.WaitForLeader was failing on arm64 environments; the cause is unknown but it might be due to the environment being flooded with parallel tests making RPC calls. The RPC polling+retry was replaced with a simpler check for leadership based on raft."
1928,Retry checks for virtual IP metadata,
1929,Sort slice of ServiceNames deterministically,
1930,Remove unnecessary goroutine in flaky test,The watch is established in a background goroutine and the first assertion proves that the watcher is active so there is no reason for the update to happen in a racy goroutine. Note that this does not completely remove the race condition as the first call to testGetConfigValTimeout could time out before a config is returned.
1931,Separate port and socket path requirement in case of local agent assignment,
1932,peering: don't track imported services/nodes in usage,Services/nodes that are imported from other peers are stored in state. We don't want to count those as part of our own cluster's usage.
1933,chore: clarify the error message: service.service must not be empty (#13907)," when register service using catalog endpoint, the key of service   name actually should be ""service"". Add this information to the   error message will help user to quickly fix in the request."
1934,Merge pull request #13914 from hashicorp/docs/remove-comparisons-from-ref-docs,docs: remove comparative info from ref docs site
1935,Merge pull request #12903 from hashicorp/docs/show-cli-cmd-options-before-general-options,Docs: Show CLI command-specific options before general options
1936,docs: show CLI cmd-specific opts before general opts,Applied to a single command (acl auth-method create).
1937,docs: update enterprise licensing description,Removes outdated instructions on using binaries with a built-in license.
1938,docs: remove comparative info from ref docs site,
1939,docs: update helm reference docs (#13910),
1940,chore: removed unused method AddService (#13905), This AddService is not used anywhere.   AddServiceWithChecks is place of AddService Test code is updated
1941,fix links,
1942,update controllername to match previous style,
1943,fix links,
1944,Remove duplicate comment,
1945,ui: Make peered intentions read-only (#13814),"  ui: Make peered intentions read-only   Replace """" to undefined for SourcePeer so its the same as PeerName   Fixup copypasta   Ensure tests run with no peers "
1946,fix links,
1947,restructure allowed values to be consistent,
1948,ui: Add peering establishment to the peer listing page (#13813),  ui: Add peering establishment to the peer listing page   Remove this.form.reset 
1949,clean up leftover table lines,
1950,clean up extra sentence,
1951,Update website/content/docs/api-gateway/configuration/gatewayclassconfig.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1952,ui: add deprecation worfklow addon (#13877),  add ember-cli-deprecation-workflow   Add deprecation workflow configuration   This will silence all deprecations by default reducing noise in the test output significantly. We can tackle deprecations now one by one but won't have to deal with very verbose console logs anymore.
1953,updated all pages to follow cm/s specification,
1954,left align table,
1955,peering: prevent peering in same partition (#13851),Co-authored-by: Chris S. Kim ckim@hashicorp.com
1956,Merge pull request #13897 from hashicorp/peering-metrics-docs-typo,fixed typo
1957,"peering: remove validation that forces peering token server addresses to be an IP, allow hostname based addresses (#13874)",
1958,Merge pull request #12045 from hashicorp/partition-cli-acl-info-and-api-crossref,Partitions: Include ACL Info and API cross-ref for CLI Commands
1959,Rename receive to recv in tracker (#13896),Because it's shorter
1960,build: add a build job to build and push UBI images to DockerHub (#13808),
1961,docs: remove unnecessary partition CLI cmd info,
1962,docs: adjust HTTP API/CLI characteristics tables,
1963,docs: restructure partition API characteristics,The existing characteristics were restructured into a list. The corresponding CLI command characteristic was added.
1964,docs: remove partition subcommand usage headings,
1965,docs: add partition command characteristics,Characteristics include: - Required ACL permissions - Corresponding HTTP API endpoint - (Lack of) support for blocking queries and agent caching
1966,docs: add partial for api/cli characteristics links,
1967,fixed typo,
1968,peering: read endpoints can now return failing status (#13849),Track streams that have been disconnected due to an error and set their statuses to failing.
1969,Merge pull request #13872 from hashicorp/remove-upstream-log,Remove extra logging from ingress upstream watch shutdown
1970,docs: followup on grammar and typo for latency requirements (#13888),
1971,docs: add peering metric doc (#13862),Co-authored-by: Freddy freddygv@users.noreply.github.com Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1972,Preserve PeeringState on upsert (#13666),"Fixes a bug where if the generate token is called twice, the second call upserts the zero-value (undefined) of PeeringState."
1973,docs: add details around Consul latency requirements (#13881), docs: add details around Consul latency requirements
1974,Update envoy metrics label extraction for peered clusters and listeners (#13818),"Now that peered upstreams can generate envoy resources (#13758), we need a way to disambiguate local from peered resources in our metrics. The key difference is that datacenter and partition will be replaced with peer, since in the context of peered resources partition is ambiguous (could refer to the partition in a remote cluster or one that exists locally). The partition and datacenter of the proxy will always be that of the source service. Regexes were updated to make emitting datacenter and partition labels mutually exclusive with peer labels. Listener filter names were updated to better match the existing regex. Cluster names assigned to peered upstreams were updated to be synthesized from local peer name (it previously used the externally provided primary SNI, which contained the peer name from the other side of the peering). Integration tests were updated to assert for the new peer labels."
1975,ui: add peers to node search (#13875),  Make nodes searchable by peer   fix only surface peer filter on service search when feature is on 
1976,chore: ignore vscode files,
1977,feat: convert destination address to slice,
1978,Re-document peering disabled (#13879),Change wording because it does have effect on clients because it disables peering in the UI served from that client.
1979,[OSS] Add ACL enforcement to peering endpoints (#13878),
1980,Enable/Disable Peering Support in the UI (#13816),We enabled/disable based on the config flag.
1981,Add ACL enforcement to peering endpoints,
1982,Remove excess debug log from ingress upstream shutdown,
1983,peering: use ShouldDial to validate peer role  (#13823),Signed-off-by: acpana 8968914+acpana@users.noreply.github.com
1984,peering: add config to enable/disable peering (#13867), peering: add config to enable/disable peering  Add config: peering {   enabled = true } Defaults to true. When disabled: 1. All peering RPC endpoints will return an error 2. Leader won't start its peering establishment goroutines 3. Leader won't start its peering deletion goroutines
1985,Merge pull request #13847 from hashicorp/gateway-goroutine-leak,Fix goroutine leaks in proxycfg when using ingress gateway
1986,[OSS] Add new peering ACL rule (#13848),"This commit adds a new ACL rule named ""peering"" to authorize actions taken against peering-related endpoints. The ""peering"" rule has several key properties: - It is scoped to a partition, and MUST be defined in the default   namespace.   Its access level must be ""read', ""write"", or ""deny"".   Granting an access level will apply to all peerings. This ACL rule   cannot be used to selective grant access to some peerings but not   others.   If the peering rule is not specified, we fall back to the ""operator""   rule and then the default ACL rule. "
1987,docs: Updates k8s annotation docs (#13809), Updates k8s annotation docs Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com Co-authored-by: David Yu dyu@hashicorp.com
1988,add redirects,
1989,peering: emit exported services count metric (#13811),Signed-off-by: acpana 8968914+acpana@users.noreply.github.com
1990,Rename some protobuf package names to be fqdn like (#13861),These are used in various bits of the wire format (for gRPC) and internally with Go’s registry so we want to namespace things properly.
1991,Add options and examples to proxy read,
1992,Add changelog note,
1993,Add ECS audit logging docs (#13729),
1994,Improve peered service empty downstreams message (#13854),
1995,Add descriptions to the subjects,
1996,Update website/content/docs/api-gateway/usage/basic-usage.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
1997,proxycfg-glue: server-local implementation of ExportedPeeredServices,This is the OSS portion of enterprise PR 2377. Adds a server-local implementation of the proxycfg.ExportedPeeredServices interface that sources data from a blocking query against the server's state store.
1998,Add Cluster Peering Failover Support to Prepared Queries (#13835),Add peering failover support to prepared queries
1999,fix tabs,
2000,fix tabs,
2001,fix tabs,
2002,update generate token endpoint to take external addresses (#13844),"Update generate token endpoint (rpc, http, and api module) If ServerExternalAddresses are set, it will override any addresses gotten from the ""consul"" service, and be used in the token instead, and dialed by the dialer. This allows for setting up a load balancer for example, in front of the consul servers."
2003,fix tabs,
2004,Add proxy list docs,
2005,erge branch 'sa-restructure-documentation' of github.com:hashicorp/consul into sa-restructure-documentation,
2006,add consul k8s install instructions,
2007,Update website/content/docs/api-gateway/configuration/gatewayclassconfig.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
2008,Merge branch 'sa-restructure-documentation' of github.com:hashicorp/consul into sa-restructure-documentation,
2009,merge back in mike's environment doc in install,
2010,Update website/content/docs/api-gateway/configuration/gateway.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
2011,Update website/content/docs/api-gateway/configuration/gateway.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
2012,Update website/content/docs/api-gateway/configuration/gateway.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
2013,Update website/content/docs/api-gateway/configuration/gateway.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
2014,Merge pull request #13845 from hashicorp/acpana/peering-rename-oss,[SYNC] Rename peering internal to ~
2015,Rename peering internal to ~,sync ENT to 5679392c81 Signed-off-by: acpana 8968914+acpana@users.noreply.github.com
2016,peering: Add heartbeating to peering streams (#13806), Add heartbeating to peering streams
2017,Add Consul Lambda integration tests (#13770),
2018,ui: Change initiate > establish for peering the modal tab (#13839),
2019,ui: Allow searching for peerings by ID (#13837),
2020,ui: Remove peering detail page (#13836),  ui: Remove links to the peering detail page   404 everything 
2021,ui: peered services only show instance- and tags-tabs  (#13840),  Only show instances- and tags-tab peered services   Adapt show-with-slashes test to peering changes   Tests always have the peering feature turned on and the default service we load from the mock-api will be peered. This is why the topology view of the service.show page will not be accessible in the updated test it will show the instances instead. This change does not change what the test is actually testing so just putting changing to the now different url is fine.
2022,ui: Surface peer info in nodes.show view (#13832),
2023,ui: Update peerings empty state copy (#13834),
2024,proxycfg-glue: server-local implementation of PeeredUpstreams,This is the OSS portion of enterprise PR 2352. It adds a server-local implementation of the proxycfg.PeeredUpstreams interface based on a blocking query against the server's state store. It also fixes an omission in the Virtual IP freeing logic where we were never updating the max index (and therefore blocking queries against VirtualIPsForAllImportedServices would not return on service deletion).
2025,Merge pull request #12592 from krastin/krastin/docs/sidecarservice-typo,docs: clean-up sidecar service expanded definition
2026,Merge branch 'main' into krastin/docs/sidecarservice-typo,
2027,Merge pull request #13682 from hashicorp/docs/deemphasize-token-query-param,"docs: suggest using token header, not query param"
2028,Add send mutex to protect against concurrent sends (#13805),
2029,"docs: suggest using token header, not query param",
2030,Merge pull request #13405 from hashicorp/jkirschner-hashicorp-patch-3,docs: correct Vault CA multiple namespace support
2031,Cancel upstream watches when the discovery chain has been removed,
2032,Fix duplicate Notify calls for discovery chains in ingress gateways,
2033,fix indent issue,
2034,Update website/content/docs/api-gateway/install.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
2035,Update website/data/docs-nav-data.json,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
2036,Update website/content/docs/api-gateway/usage/basic-usage.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
2037,Update website/content/docs/api-gateway/usage/basic-usage.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
2038,Update website/content/docs/api-gateway/usage/basic-usage.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
2039,Move uninstall down to be alphabetically sorted,
2040,Clean and clarify intro,
2041,Add heartbeat proto to peer stream (#13804),
2042,ui: no partition and peer in bucket-list at the same time (#13812),  don't show partition / peer at the same time in bucket-list   use bucket-list in intentions table   add bucket-list tests   Simplify bucket list - match old behavior   Refactor the bucket-list component to be easier to grok and match how the old template based approach worked. I.e. do not surface partition or namespace when it matches the passed nspace or partition property.   Update docs for bucket-list   fix linting 
2043,ui: Add Peer Form (#13794),
2044,ui: Peer token use form (#13792),
2045,"connect: Add support for Envoy 1.23, remove 1.19 (#13807)",
2046,Extract AWS auth implementation out of Consul (#13760),
2047,Make envoy resources for inferred peered upstreams (#13758),"Peered upstreams has a separate loop in xds from discovery chain upstreams. This PR adds similar but slightly modified code to add filters for peered upstream listeners, clusters, and endpoints in the case of transparent proxy."
2048,"peering: refactor reconcile, cleanup (#13795)",Signed-off-by: acpana 8968914+acpana@users.noreply.github.com
2049,Update Single DC Multi K8S doc (#13278), Updated note with details of various K8S CNI options  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
2050,makefile: give better error for tool installed by wrong package (#13797),"I had protoc-gen-go installed through google.golang.org/protobuf instead of github.com/golang/protobuf and make proto was failing silently. This change will ensure you get an error: protoc-gen-go is already installed by module ""google.golang.org/protobuf"" but should be installed by module ""github.com/golang/protobuf"". Delete it and re-run to re-install."
2051,ui: chore - fix CI test-suite (#13799),  fix linting issue   Update datacenter selector page-object to not include separator.   change non-valid li to div for singe dc name 
2052,Merge pull request #13787 from hashicorp/fix-acl-read-token-self-expanded-panic,Fix panic on acl token read with -self and -expanded
2053,peerstream: set keepalive enforcement to 15s (#13796),"The client is set to send keepalive pings every 30s. The server keepalive enforcement must be set to a number less than that, otherwise it will disconnect clients for sending pings too often. MinTime governs the minimum amount of time between pings."
2054,Fix panic on acl token read with -self and -expanded,
2055,fix leader annotation (#13786),Signed-off-by: acpana 8968914+acpana@users.noreply.github.com
2056,peering: track exported services (#13784),Signed-off-by: acpana 8968914+acpana@users.noreply.github.com
2057,ui: Add peer token generation form (#13755), ui: Add peer token generation form
2058,ui: Adds Peer initiation form (#13754),
2059,introduces the post publish website event,
2060,ui: Add a modal.opened property for inspecting whether the modal is open (#13723),"  ui: Add a modal.opened property for inspecting whether the modal is open   merge isOpen setting into the exiting event handler   Revert to multiple listeners, plus comment to explain   Wrap close in an afterRender "
2061,ui: wan federation message dc-dropdown (#13753),"  Only display dc dropdown when more than one dc is available   Add wan federation message to dc dropdown   Add test for conditionally displaying dc dropdown   Move single datacenter indicator into datacenter selector   Add DATACENTERS seperator dc dropdown   ""fix"" unnecessary margin-top in dc dropdown "
2062,docs: clean-up expanded service def,
2063,peerstream: require a resource subscription to receive updates of that type (#13767),"This mimics xDS's discovery protocol where you must request a resource explicitly for the exporting side to send those events to you. As part of this I aligned the overall ResourceURL with the TypeURL that gets embedded into the encoded protobuf Any construct. The CheckServiceNodes is now wrapped in a better named ""ExportedService"" struct now."
2064,peerstream: fix test assertions (#13780),
2065,Add docs for peerStreamServer vs peeringServer. (#13781),
2066,peerstream: dialer should reconnect when stream closes  (#13745)," peerstream: dialer should reconnect when stream closes  If the stream is closed unexpectedly (i.e. when we haven't received a terminated message), the dialer should attempt to re-establish the stream. Previously, the HandleStream would return nil when the stream was closed. The caller then assumed the stream was terminated on purpose and so didn't reconnect when instead it was stopped unexpectedly and the dialer should have attempted to reconnect."
2067,test: fix flaky test TestAPI_CatalogNodes (#13779),
2068,server: ensure peer replication can successfully use TLS over external gRPC (#13733),Ensure that the peer stream replication rpc can successfully be used with TLS activated. Also:   If key material is configured for the gRPC port but HTTPS is not   enabled now TLS will still be activated for the gRPC port.   peerstream replication stream opened by the establishing-side will now   ignore grpc.WithBlock so that TLS errors will bubble up instead of   being awkwardly delayed or suppressed 
2069,peering: track imported services (#13718),
2070,Latest submodule versions (#13750),
2071,peering: add warning about AllowStaleRead (#13768),
2072,Made changes based on Adams suggestions (#13490),"  Made changes based on Adams suggestions   updating list layout in systems integration guide.  updating wan federation docs.   fixing env vars on systems integration page   fixing h3 to h2 on enterprise license page   Changed The following steps will be performed to Complete the following steps   Replaced These steps will be repeated for each datacenter with Repeat the following steps for each datacenter in the cluster   Emphasizing that kv2 secrets only need to be stored once.   Move the sentence indicating where the vault path maps to the helm chart out of the -> Note callout   remaining suggestions   Removing store the secret in Vault from server-tls page   Making the Bootstrapping the Server PKI Engine sections the same on server-tls and webhook-cert pages   Apply suggestions from code review   Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com   Updating VAULT_ADDR on systems-integration to get it out of the shell.   Updating intro paragraph of Overview on systems-integration.mdx to what Adamsuggested.   Putting the GKE, AKS, AKS info into tabs on the systems integration page.   Apply suggestions from code review   Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com"
2073,Use Node Name for peering healthSnapshot instead of ID (#13773),A Node ID is not a required field with Consul’s data model. Therefore we cannot reliably expect all uses to have it. However the node name is required and must be unique so its equally as good of a key for the internal healthSnapshot node tracking.
2074,Enable partition support for peering establishment (#13772),"Prior to this the dialing side of the peering would only ever work within the default partition. This commit allows properly parsing the partition field out of the API struct request body, query param and header."
2075,[CI-only] Support fossa scanning (#13694),
2076,feat: connect proxy xDS for destinations,Signed-off-by: Dhia Ayachi dhia@hashicorp.com
2077,ui: remove with-peers query param (#13756), Don't request nodes/services with-peers anymore  This will be automatic - no need for the query-param anymore.   Return peering data based on feature flag mock-api services/nodes   Update tests to reflect removed with-peers query-param   setup cookie for turning peer feature flag on in mock-api in testing   Add missing S for renamed PEERING feature-flag cookie 
2078,fix rendering issue,
2079,restore tech specs,
2080,seperate technical specs back out,
2081,Changelog entry,
2082,proxycfg-glue: server-local implementation of FederationStateListMeshGateways,This is the OSS portion of enterprise PR 2265. This PR provides a server-local implementation of the proxycfg.FederationStateListMeshGateways interface based on blocking queries.
2083,proxycfg-glue: server-local implementation of GatewayServices,This is the OSS portion of enterprise PR 2259. This PR provides a server-local implementation of the proxycfg.GatewayServices interface based on blocking queries.
2084,proxycfg-glue: server-local implementation of TrustBundle and TrustBundleList,"This is the OSS portion of enterprise PR 2250. This PR provides server-local implementations of the proxycfg.TrustBundle and proxycfg.TrustBundleList interfaces, based on local blocking queries."
2085,proxycfg-glue: server-local implementation of the Health interface,"This is the OSS portion of enterprise PR 2249. This PR introduces an implementation of the proxycfg.Health interface based on a local materialized view of the health events. It reuses the view and request machinery from agent/rpcclient/health, which made it super straightforward."
2086,proxycfg-glue: server-local implementation of ServiceList,"This is the OSS portion of enterprise PR 2242. This PR introduces a server-local implementation of the proxycfg.ServiceList interface, backed by streaming events and a local materializer."
2087,proxycfg-glue: server-local compiled discovery chain data source,This is the OSS portion of enterprise PR 2236. Adds a local blocking query-based implementation of the proxycfg.CompiledDiscoveryChain interface.
2088,Merge pull request #13655 from hashicorp/docs/add-envoy-to-standard-upgrade-instructions,docs: add Envoy upgrade step to std upgrade docs
2089,fix formating issue,
2090,merge,
2091,change file name,
2092,add links,
2093,content,
2094,fix identation,
2095,docs: add Envoy upgrade step to std upgrade docs,
2096,ui: Add additional API requests for peering establishment (#13734),
2097,ui: Move peers to a subapplication (#13725),
2098,ui: Thread through data-source invalidate method (#13710),  ui: Thread through data-source invalidate method   Remove old invalidating state 
2099,ui: Make our old TabNav component easily usable with a state machine (#13705),  ui: Make our old TabNav component easily usable with a state machine   Add an event handler that receives an object 
2100,Add changelog entries from latest releases (#13746),
2101,Update website/content/docs/api-gateway/usage/basic-usage.mdx,Co-authored-by: Nathan Coleman nathan.coleman@hashicorp.com
2102,Update website/content/docs/api-gateway/usage/basic-usage.mdx,Co-authored-by: Nathan Coleman nathan.coleman@hashicorp.com
2103,Update website/content/docs/api-gateway/configuration/gatewayclassconfig.mdx,Co-authored-by: Nathan Coleman nathan.coleman@hashicorp.com
2104,Update website/content/docs/api-gateway/configuration/gatewayclass.mdx,Co-authored-by: Nathan Coleman nathan.coleman@hashicorp.com
2105,Check if an upstream is implicit from either intentions or peered services,
2106,Use new maps for proxycfg peered data,
2107,Add new watch.Map type to refactor proxycfg,
2108,Scrub VirtualIPs before exporting,
2109,Merge pull request #13699 from hashicorp/tgate-http2-upstream,Respect http2 protocol for upstreams of terminating gateways
2110,proto: add package prefixes for all proto files where it is safe (#13735),"We cannot do this for ""subscribe"" and ""partition"" this easily without breakage so those are omitted. Any protobuf message passed around via an Any construct will have the fully qualified package name embedded in the protobuf as a string. Also RPC method dispatch will include the package of the service during serialization.   We will be passing pbservice and pbpeering through an Any as part of   peer stream replication.   We will be exposing two new gRPC services via pbpeering and   pbpeerstream. "
2111,grpc: rename public/private directories to external/internal (#13721),"Previously, public referred to gRPC services that are both exposed on the dedicated gRPC port and have their definitions in the proto-public directory (so were considered usable by 3rd parties). Whereas private referred to services on the multiplexed server port that are only usable by agents and other servers. Now, we're splitting these definitions, such that external/internal refers to the port and public/private refers to whether they can be used by 3rd parties. This is necessary because the peering replication API needs to be exposed on the dedicated port, but is not (yet) suitable for use by 3rd parties."
2112,peerstream: some cosmetic refactors to make this easier to follow (#13732), Use some protobuf construction helper methods for brevity. Rename a local variable to avoid later shadowing. Rename the Nonce field to be more like xDS's naming. Be more explicit about which PeerID fields are empty.
2113,ui: Remove UNDEFINED state from being undeleteable (#13702),  ui: Remove UNDEFINED state from being undeleteable   Fixup node tests 
2114,ui: Remove horizontal scrollbar from peering list rows (#13701),
2115,"Use protocol from resolved config entry, not gateway service",
2116,Enable http2 options for grpc protocol,
2117,peering: always send the mesh gateway SpiffeID even for tcp services (#13728),If someone were to switch a peer-exported service from L4 to L7 there would be a brief SAN validation hiccup as traffic shifted to the mesh gateway for termination. This PR sends the mesh gateway SpiffeID down all the time so the clients always expect a switch.
2118,state: prohibit changing an exported tcp discovery chain in a way that would break SAN validation (#13727),For L4/tcp exported services the mesh gateways will not be terminating TLS. A caller in one peer will be directly establishing TLS connections to the ultimate exported service in the other peer. The caller will be doing SAN validation using the replicated SpiffeID values shipped from the exporting side. There are a class of discovery chain edits that could be done on the exporting side that would cause the introduction of a new SpiffeID value. In between the time of the config entry update on the exporting side and the importing side getting updated peer stream data requests to the exported service would fail due to SAN validation errors. This is unacceptable so instead prohibit the exporting peer from making changes that would break peering in this way.
2119,state: prohibit exported discovery chains to have cross-datacenter or cross-partition references (#13726),"Because peerings are pairwise, between two tuples of (datacenter, partition) having any exported reference via a discovery chain that crosses out of the peered datacenter or partition will ultimately not be able to work for various reasons. The biggest one is that there is no way in the ultimate destination to configure an intention that can allow an external SpiffeID to access a service. This PR ensures that a user simply cannot do this, so they won't run into weird situations like this."
2120,ui: peer permission handling (#13724),  Request peering permissions when peerings is active   Update peering ability to use peering resource   fix canDelete peer permission to check write permission   use super call in abilities.peer#canDelete 
2121,Return error if ServerAddresses is empty (#13714),
2122,ui: use environment variable for feature flagging peers (#13703),  ui: use environment variable for feature flagging peers   Add documentation for features-service   Allow setting feature flag for peers via bookmarklet   don't use features service for flagging peers   add ability for checking if peers feature is enabled   Use abilities to conditionally use peers feature   Remove unused features service 
2123,update docs (#13711),  update docs   Update website/content/docs/nia/enterprise/index.mdx   Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
2124,proto: ensure buf formatter has been applied to protobufs (#13709),
2125,Merge pull request #13693 from hashicorp/docs-cluster-peering-updates,docs: Cluster Peering docs fixes
2126,Merge pull request #13681 from hashicorp/docs/install-capigw-version-env-var,docs(consul-api-gateway): use VERSION env var in install steps
2127,Update website/content/docs/api-gateway/consul-api-gateway-install.mdx,
2128,feat(cli): enable to delete config entry from an input file (#13677),"  feat(cli): enable to delete config entry from an input file   A new flag to config delete to delete a config entry in a   valid config file, e.g., config delete -filename   intention-allow.hcl  Updated flag validation; -filename and -kind can't be set   at the same time Move decode config entry method from config_write.go to   helpers.go for reusing ParseConfigEntry() add changelog  Co-authored-by: Dan Upton daniel@floppy.co"
2129,Merge pull request #13678 from hashicorp/envoy-prometheus-tls-fix,Fix syntax for envoy bootstrap prometheus secret config
2130,Add changelog note,
2131,Respect http2 protocol for upstreams of terminating gateways,
2132,peering: move peer replication to the external gRPC port (#13698),"Peer replication is intended to be between separate Consul installs and effectively should be considered ""external"". This PR moves the peer stream replication bidirectional RPC endpoint to the external gRPC server and ensures that things continue to function."
2133,Update website/content/docs/api-gateway/configuration/gateway.mdx,Co-authored-by: Nathan Coleman nathan.coleman@hashicorp.com
2134,Update website/content/docs/api-gateway/consul-api-gateway-install.mdx,Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com
2135,Update website/content/docs/api-gateway/consul-api-gateway-install.mdx,Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com
2136,"Clarification around ""peering_token.json"" and adding Partition names",
2137,Docs: Fix path to consul-ecs Terraform modules (#13689),
2138,Update website/content/docs/api-gateway/configuration/gateway.mdx,Co-authored-by: Nathan Coleman nathan.coleman@hashicorp.com
2139,Update website/content/docs/api-gateway/configuration/gateway.mdx,Co-authored-by: Nathan Coleman nathan.coleman@hashicorp.com
2140,Update website/content/docs/api-gateway/configuration/gateway.mdx,Co-authored-by: Nathan Coleman nathan.coleman@hashicorp.com
2141,Update website/content/docs/api-gateway/configuration/gateway.mdx,Co-authored-by: Nathan Coleman nathan.coleman@hashicorp.com
2142,Update website/content/docs/api-gateway/configuration/gateway.mdx,Co-authored-by: Nathan Coleman nathan.coleman@hashicorp.com
2143,Update website/content/docs/api-gateway/configuration/gateway.mdx,Co-authored-by: Nathan Coleman nathan.coleman@hashicorp.com
2144,Update website/content/docs/api-gateway/configuration/gateway.mdx,Co-authored-by: Nathan Coleman nathan.coleman@hashicorp.com
2145,Update website/content/docs/api-gateway/configuration/gateway.mdx,Co-authored-by: Nathan Coleman nathan.coleman@hashicorp.com
2146,Update website/content/docs/api-gateway/configuration/gateway.mdx,Co-authored-by: Nathan Coleman nathan.coleman@hashicorp.com
2147,Update website/content/docs/api-gateway/configuration/gateway.mdx,Co-authored-by: Nathan Coleman nathan.coleman@hashicorp.com
2148,server: broadcast the public grpc port using lan serf and update the consul service in the catalog with the same data (#13687),"Currently servers exchange information about their WAN serf port and RPC port with serf tags, so that they all learn of each other's addressing information. We intend to make larger use of the new public-facing gRPC port exposed on all of the servers, so this PR addresses that by passing around the gRPC port via serf tags and then ensuring the generated consul service in the catalog has metadata about that new port as well for ease of non-serf-based lookup."
2149,ui: Peer Deletion (#13665), ui: Peer Deletion (#13665) ui: Add sorting peer listing by State (#13684) ui: Add filtering peer listing by State (#13685)
2150,ui: CopyableCode component (#13686), ui: CopyableCode component plus switch into existing implementations
2151,"""<service-name"" fix - added brackets",
2152,docs(consul-api-gateway): use VERSION env var in install steps,
2153,fix render issue,
2154,Consul on ECS compatibility matrix docs update (#13060),
2155,fix render issue,
2156,Fix syntax for bootstrap sds secret config,
2157,Parse peer name for virtual IP DNS queries (#13602),This commit updates the DNS query locality parsing so that the virtual IP for an imported service can be queried. Note that: - Support for parsing a peer in other service discovery queries was not   added. - Querying another datacenter for a virtual IP is not supported. This   was technically allowed in 1.11 but is being rolled back for 1.13   because it is not a use-case we intended to support. Virtual IPs in   different datacenters are going to collide because they are allocated   sequentially.
2158,delete extra file,
2159,merge,
2160,restructure documentation,
2161,test: update mockery use to put mocks into test files (#13656),--testonly doesn't do anything anymore so switch to --filename instead
2162,Merge pull request #13654 from hashicorp/docs/correct-1.10.x-upgrade-path,docs: improve large version change upgrade path
2163,ui: Slight update to peering mocks to more properly match actual (#13664),
2164,ui: Fixup peering imported/exported service counts (#13662), ui: Fix up peer states and counts in the listing
2165,Revise possible states for a peering. (#13661),"These changes are primarily for Consul's UI, where we want to be more specific about the state a peering is in.   The ""initial"" state was renamed to pending, and no longer applies to   peerings being established from a peering token.   Upon request to establish a peering from a peering token, peerings   will be set as ""establishing"". This will help distinguish between the   two roles: the cluster that generates the peering token and the   cluster that establishes the peering.   When marked for deletion, peering state will be set to ""deleting"".   This way the UI determines the deletion via the state rather than the   ""DeletedAt"" field.   Co-authored-by: freddygv freddy@hashicorp.com"
2166,ui: Add peer searching and sorting (#13634)," ui: Add peer searching and sorting  Initial name search and sort only, more to come here   Remove old peerings::search component   Use @model peers   ui: Peer listing with dc/ns/partition/name based unique IDs and polling deletion (#13648)   ui: Add peer repo with listing datasource   ui: Use data-loader component to use the data-source   ui: Remove ember-data REST things and Route.model hook   10 second not 1 second poll   Fill out Datacenter and Partition   route > routeName   Faker randomised mocks for peering endpoint   ui: Adds initial peer detail page plus address tab (#13651) "
2167,ui: Gradual deprecation of old StateChart interface (#13604),
2168,Changelog entry,
2169,proxycfg: server-local intention upstreams data source,This is the OSS portion of enterprise PR 2157. It builds on the local blocking query work in #13438 to implement the proxycfg.IntentionUpstreams interface using server-local data. Also moves the ACL filtering logic from agent/consul into the acl/filter package so that it can be reused here.
2170,proxycfg: server-local intentions data source,"This is the OSS portion of enterprise PR 2141. This commit provides a server-local implementation of the proxycfg.Intentions interface that sources data from streaming events. It adds events for the service-intentions config entry type, and then consumes event streams (via materialized views) for the service's explicit intentions and any applicable wildcard intentions, merging them into a single list of intentions. An alternative approach I considered was to consume all intention events (via SubjectWildcard) and filter out the irrelevant ones. This would admittedly remove some complexity in the agent/proxycfg-glue package but at the expense of considerable overhead from waking potentially many thousands of connect proxies every time any intention is updated."
2171,proxycfg: server-local config entry data sources,"This is the OSS portion of enterprise PR 2056. This commit provides server-local implementations of the proxycfg.ConfigEntry and proxycfg.ConfigEntryList interfaces, that source data from streaming events. It makes use of the LocalMaterializer type introduced for peering replication, adding the necessary support for authorization. It also adds support for ""wildcard"" subscriptions (within a topic) to the event publisher, as this is needed to fetch service-resolvers for all services when configuring mesh gateways. Currently, events will be emitted for just the ingress-gateway, service-resolver, and mesh config entry types, as these are the only entries required by proxycfg — the events will be emitted on topics named IngressGateway, ServiceResolver, and MeshConfig topics respectively. Though these events will only be consumed ""locally"" for now, they can also be consumed via the gRPC endpoint (confirmed using grpcurl) so using them from client agents should be a case of swapping the LocalMaterializer for an RPCMaterializer."
2172,docs: improve large version change upgrade path,
2173,ui: allow searching services by admin-partition (#13650),
2174,ui: peering chores (#13636),  Update empty state topology downstreams to included peer info   Add filter for filtering for service without ExternalSources 
2175,peering: add imported/exported counts to peering (#13644),Signed-off-by: acpana 8968914+acpana@users.noreply.github.com Co-authored-by: Chris S. Kim ckim@hashicorp.com
2176,Fix ENT drift in files (#13647),
2177,Allow the /v1/internal/acl/authorize endpoint to authorize the “peering” resource (#13646),Currently this just checks for operator read. In the near future it will check for peering specific rules once those are implemented.
2178,Add internal endpoint to fetch peered upstream candidates from VirtualIP table (#13642),"For initial cluster peering TProxy support we consider all imported services of a partition to be potential upstreams. We leverage the VirtualIP table because it stores plain service names (e.g. ""api"", not ""api-sidecar-proxy"")."
2179,Fix spelling mistake in serverless patcher (#13607),passhthrough -> passthrough
2180,docs: add controller to cluster peering docs (#13639), docs: add controller to cluster peering docs
2181,ui: Fix up peer ENT tests (#13633),  ui: Add missing @nspaces   Reorder peerings to be before any optionals   Merge params instead of overwriting   Reorder int tests 
2182,no 1.9 style metrics (#13532),Signed-off-by: acpana 8968914+acpana@users.noreply.github.com
2183,peering: reconcile/ hint active state for list (#13619),Signed-off-by: acpana 8968914+acpana@users.noreply.github.com
2184,xds: modify rbac rules to use the XFCC header for peered L7 enforcement (#13629),"When the protocol is http-like, and an intention has a peered source then the normal RBAC mTLS SAN field check is replaces with a joint combo of: mTLS SAN field must be the service's local mesh gateway leaf cert   AND the first XFCC header (from the MGW) must have a URI field that matches the original intention source  Also:   Update the regex program limit to be much higher than the teeny   defaults, since the RBAC regex constructions are more complicated now.   Fix a few stray panics in xds generation. "
2185,Fix typo in cluster peering docs (#13574)," Fix typo in cluster peering docs Remove highlight, update curly quotes"
2186,xds: have mesh gateways forward peered SpiffeIDs using the XFCC header (#13625),
2187,xds: mesh gateways now correctly load up peer-exported discovery chains using L7 protocols (#13624),A mesh gateway will now configure the filter chains for L7 exported services using the correct discovery chain information.
2188,test: for upgrade compatibility tests retain assigned container ip addresses on upgrade (#13615),Use a synthetic pod construct to hold onto the IP address in the interim.
2189,test: run Envoy integration tests against both servers and clients (#13610),
2190,Turn off sec-scanner check (#13614),
2191,Fix verifications by using updated arm package names (#13601),Co-authored-by: alex 8968914+acpana@users.noreply.github.com
2192,peering: replicate all SpiffeID values necessary for the importing side to do SAN validation (#13612),"When traversing an exported peered service, the discovery chain evaluation at the other side may re-route the request to a variety of endpoints. Furthermore we intend to terminate mTLS at the mesh gateway for arriving peered traffic that is http-like (L7), so the caller needs to know the mesh gateway's SpiffeID in that case as well. The following new SpiffeID values will be shipped back in the peerstream replication:   tcp: all possible SpiffeIDs resulting from the service-resolver         component of the exported discovery chain   http-like: the SpiffeID of the mesh gateway "
2193,Merge branch 'main' into fix-kv_entries-metric,
2194,Merge pull request #13611 from hashicorp/prometheus-tls-docs,Update docs for prometheus TLS options
2195,Update docs for prometheus TLS options,
2196,Merge pull request #13516 from maxb/docs-fix-metric-dots,Fix use of trailing dots on metric names in telemetry.mdx
2197,Merge pull request #13603 from loicsaintroch/patch-1,Add HashiBox to community tools
2198,Add HashiBox to community tools,
2199,Merge pull request #13481 from hashicorp/envoy-prometheus-tls,Add TLS support in Envoy Prometheus endpoint
2200,"peering, internal: support UIServices, UINodes, UINodeInfo  (#13577)",
2201,[CI-only] Dev tag update for main (#13541),
2202,Remove trigger-oss-merge job (#13600),
2203,Add new index for PeeredServiceName and ServiceVirtualIP (#13582),"For TProxy we will be leveraging the VirtualIP table, which needs to become peer-aware"
2204,tests: ensure integration tests show logs from the containers to help debugging (#13593),
2205,Clarify the wording of the peering limitations in the preview (#13590),
2206,update terraform module location for consul aws modules (#13522),Co-authored-by: Paul Glass pglass@hashicorp.com
2207,docs: Update ECS docs for IAM auth method support (#13222),
2208,docs: add missing $ gossip key rotation (#13581),
2209,docs: add indent to code block config tab to align with other branches (#13573),
2210,Merge pull request #13570 from hashicorp/acpance/peering-oss-intentions,"oss: peering, http: get peer service intentions (#2098)"
2211,Add per-node max indexes (#12399),"Adds fine-grained node.[node] entries to the index table, allowing blocking queries to return fine-grained indexes that prevent them from returning immediately when unrelated nodes/services are updated. Co-authored-by: kisunji ckim@hashicorp.com"
2212,Make memdb indexers generic (#13558),We have many indexer functions in Consul which take interface{} and type assert before building the index. We can use generics to get rid of the initial plumbing and pass around functions with better defined signatures. This has two benefits: 1) Less verbosity; 2) Developers can parse the argument types to memdb schemas without having to introspect the function for the type assertion.
2213,Port over the index 0 -> 1 code that lived in the old rpc setQueryMeta function. (#13561),
2214,ui: feature-flagged peering mvp (#13425),  add peers route   add peers to nav   use regular app ui patterns peers template   use empty state in peers UI   mock v1/peerings request   implement custom adapter/serializer for peers-model   index request for peerings on peers route   update peers list to show as proper list   Use tailwind for easier styling   Unique ids in peerings response mock-api   Add styling peerings list   Allow creating empty tooltip   To make it easier to iterate over a set of items where some items should not display a tooltip and others should.   Add tooltip Peerings:Badge   Add undefined peering state badge   Remove imported/exported services count peering   This won't be included in the initial version of the API response   Implement Peerings::Search   Make it possible to filter peerings by name   Install ember-keyboard   For idiomatic handling of key-presses.   Clear peering search input when pressing Escape   use peers.index instead of peers for peerings listing   Allow to include peered services in services-query   update services mock to add peerName   add Consul::Peer component   To surface peering information on a resource   add PeerName as attribute to service model   surface peering information in service list   Add tooltip to Consul::Peer   Make services searchable by peer-name   Allow passing optional query-params to href-to   Add peer query-param to dc.services.show   Pass peer as query-param services listing   support option peer route-param   set peer-name undefined in services serializer when empty   update peer route-param when navigating to peered service   request sercice with peer-name if need be   make sure to reset peer route-param when leaving service.show   componentize services.peer-info   surface peer info services.show   make sure to reset peer route-param in main nav   fix services breadcrumb services.intentions   we need to reset peer route-param here to not break the app   surface peer when querying for it on service api call   query for peer info service-instance api calls   surface peer info service-instance.show   Camelize peer attributes to match rest of app   Refactor peers.index to reflect camelized attributes for peer   Remove unused query-params services.show   make logo href reset peer route-param   Cleanup optional peer param query service-instance   Use replace decorator instead of serializer for empty peerName   make sure to only send peer info when correct qp is passed   Always send qp for querying peers services request   rename with-imports to with-peers   Use css for peer-icon   Refactor bucket-list component to surface peer-info   Remove Consul::Peer component   This info is now displayed via the bucket-list component   Fix bucket-list component to surface service again   Update bucket-list docs to reflect peer-info addition   Remove tailwind related styles   Remove consul-tailwind package   We won't be using tailwind for now   Fix typo badge scss   Add with-import handling mock-api nodes   Add peerName to node attributes   include peers when querying nodes   reflect api updates node list mock   Create consul::node::peer-info component   Surface peer-info in nodes list   Mock peer response for node request   Make it possible to add peer-name to node request   Update peer route-param when linking to node   Reset peers route-param when leaving nodes.show   We need to reset the route-param to not introduce a bug - otherwise subsequent node show request would request with the old peer query-param   Add sourcePeer intentions api mock   add SourcePeer attr to intentions model   Surface peering info on intentions list   Request peered intentions differently intentions.edit   Handle peer info in intentions/exact mock   Surface peering info intention view   Add randomized peer data topology mock   Surface peer info topology view   fix service/peer-info styling   We aren't using tailwind anymore - we need to create a custom scss file   Update peerings api mocks   Update peerings::badge with updated styling   cleanup intentions/exact mock   Create watcher component to declaratively register polling   Poll peers in background when on peers route   use existing colors for peering-badge   Add test for requesting service with with-peers-query   add imported/exported count to peers model   update mock-api to surface exported/imported count on peers   Show exported/imported peers count on peers list   Use translations for service import/export UI peers   Make sure to ask for nodes with peers   Add match-url step for easier url testing of service urls   Add test for peer-name on peered services   Add test for service navigation peered service   Implement feature-flag handling   Enable peering feature in test and development   Redirect peers to services.index when feature-flag is disabled   Only query for peers when feature is enabled   Only show peers in nav when feature is enabled   Componentize peering service count detail   Handle non-state Peerings::Badge   Use Peerings::ServiceCount in peerings list   Only send peer query for peered service-instances.   Add step to visit url directly   add test for accessing peered service directly   Remove unused service import peers.index   Only query for peer when peer provided node-adapter   fix tests 
2215,docs: add Core requirements to cluster peering k8s docs (#13569), docs: add Core requirements to cluster peering k8s docs  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
2216,"oss: peering, http: get peer service intentions (#2098)",Signed-off-by: acpana 8968914+acpana@users.noreply.github.com
2217,Merge pull request #13492 from hashicorp/docs-ecs-mesh-gw,Docs for ECS Mesh Gateway
2218,[docs] update doc headers (#13527), update helm docs to have correct headers
2219,Merge pull request #13526 from hashicorp/dns-parititon-docs,docs: Clarify section on partitioned node DNS lookups
2220,docs: Clarify section on partitioned node DNS lookups,
2221,applied feedback from review,
2222,Merge pull request #13550 from hashicorp/docs/peering-upstream-annotation,Docs/peering upstream annotation
2223,slight update to retrigger tests,
2224,Merge pull request #13538 from hashicorp/eculver/1.13.0-changelog,Add changelog entries for 1.13.0-alpha1 and 1.13.0-alpha2
2225,Merge pull request #13433 from hashicorp/docs-cluster-peering-technical-preview,docs: Cluster Peering for OSS Technical Preview
2226,Apply suggestions from code review,Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com
2227,Merge pull request #13501 from hashicorp/peering-helm-value,docs: add peering helm value
2228,Merge pull request #13427 from hashicorp/docs/capigw-0.3,docs: Update docs for release of Consul API Gateway v0.3.0
2229,Apply suggestions from code review,
2230,Apply suggestions from tech writer review,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
2231,removed most of 'ECS service' information,
2232,Apply suggestions from code review,Co-authored-by: Chris Thain 32781396+cthain@users.noreply.github.com
2233,Update website/content/docs/connect/cluster-peering/k8s.mdx,
2234,Apply suggestions from code review,
2235,adding fixes,
2236,fix formatting on upgrade and release note pages.,
2237,Update website/content/docs/connect/cluster-peering/k8s.mdx,Co-authored-by: David Yu dyu@hashicorp.com
2238,Update website/content/docs/connect/cluster-peering/create-manage-peering.mdx,
2239,Apply suggestions from code review,Co-authored-by: David Yu dyu@hashicorp.com Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
2240,Add changelog for 1.13.0-alpha2,
2241,Add changelog for 1.13.0-alpha1,
2242,merged,
2243,removed references to the word breaking,
2244,Update website/content/docs/api-gateway/upgrade-specific-versions.mdx,
2245,docs: move k8s compat matrix top level (#13534),
2246,clarified wording,
2247,typo,
2248,render issue,
2249,edit secret to certificateRef,
2250,Merge branch 'main' of github.com:hashicorp/consul into docs-ecs-mesh-gw,pulling merged changes into this branch
2251,"applied suggestions from review, udpates to TF secure configuration",
2252,Apply suggestions from code review,Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
2253,docs: Consul K8s compat matrix update for 0.45.0+ to include Consul 1.11 compatibility (#13528),
2254,Apply suggestions from code review,Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
2255,Update website/content/docs/api-gateway/consul-api-gateway-install.mdx,
2256,Update website/content/docs/api-gateway/consul-api-gateway-install.mdx,Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
2257,Use new release version in examples,
2258,Fix whitespace inconsistencies,
2259,Update version of consul Helm chart,
2260,state: peering ID assignment cannot happen inside of the state store (#13525),"Move peering ID assignment outisde of the FSM, so that the ID is written to the raft log and the same ID is used by all voters, and after restarts."
2261,Add server local blocking queries and watches (#13438),Co-authored-by: Dan Upton daniel@floppy.co
2262,Merge pull request #13448 from hashicorp/docs-cluster-peering-k8s-technical-preview,docs: Cluster Peering for Kubernetes Technical Preview
2263,"make ""changelog"" plural in the API GW 0.3 release notes.",
2264,update from review comments,
2265,removed terminating and ingress polices from secure manual installation,
2266,Update website/content/docs/release-notes/consul-api-gateway/v0_3_x.mdx,Co-authored-by: Mike Morris mikemorris@users.noreply.github.com
2267,update github.com/containerd/containerd to 1.5.13 (#13520),
2268,Merge branch 'main' of github.com:hashicorp/consul into docs-ecs-mesh-gw,
2269,Link reference to Kubernetes Gateway API site,
2270,docs: Lambda consul service mesh naming suggestions (#13506), docs: Lambda consul service mesh naming suggestions Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
2271,Apply suggestions from code review,Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com Co-authored-by: Chris Thain 32781396+cthain@users.noreply.github.com
2272,Update upgrade-specific-versions.mdx,
2273,Update website/content/docs/api-gateway/upgrade-specific-versions.mdx,Co-authored-by: Nathan Coleman nathan.coleman@hashicorp.com
2274,Update website/content/docs/release-notes/consul-api-gateway/v0_3_x.mdx,
2275,Fix use of trailing dots on metric names in telemetry.mdx,"In the metric documentation, some metrics are written with an extra trailing dot character. Often this is just spurious. In some cases, it is an allusion to the metric name having various variable dot-separated parts (which really ought to be labels, but that's another issue). 1) Trim all the dots which are without meaning. 2) Explicitly show with placeholders in angle brackets, where there are    variable parts. 3) Remove a json type indicator from a code block which was not JSON    (rather Prometheus metrics) format, since my IDE was reporting the    non-JSON syntax as an error. 4) Reformat each Markdown table which I had touched with other changes    to have consistent column spacing in the source representation. As    a result, this PR has a lot of whitespace changes, so please make use    of GitHub's ""ignore whitespace"" checkbox in the PR diff viewer. Let me know if you would prefer:   to not accept the table spacing reformat in the same PR as other   changes   to not accept the table spacing reformat ever   to have all tables in the file reformatted, not just ones touched with   other changes "
2276,Pass trust domain to RBAC to validate and fix use of wrong peer trust bundles (#13508),
2277,unnest partitions,
2278,un nest the sections,
2279,Apply suggestions from code review,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
2280,API GW 0.3 Release Notes and updated Tech Specs,
2281,"docs: Use ""error"" to use standard log level value (#13507)"," docs: Use ""error"" to use standard log level value"
2282,fixed links to TF install examples,
2283,Apply suggestions from code review,Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com
2284,Apply suggestions from code review,Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com
2285,Fix broken link,
2286,Address surprise format of reference-grant,
2287,Apply suggestions from code review,Co-authored-by: Freddy freddygv@users.noreply.github.com
2288,incorporated examples from @cthain,
2289,ReferenceGrant -> ReferencePolicy,
2290,upstream annotation,
2291,Merge remote-tracking branch 'origin/docs/cthain-ecs-mesh-gateway' into docs-ecs-mesh-gw,pulling in change from cthain
2292,add peering helm value,
2293,merge branch main,
2294,Add mesh gateway configuration examples.,
2295,Delete definition of metric consul.acl.blocked.node.registration,"Although the metric is defined, there is no code which ever sets its value - the code in question is genuinely asymmetric - there are 3 types of object for which registration can be tracked, but only 2 for which deregistration can be tracked."
2296,Fix incorrect name and doc for kv_entries metric,"The name of the metric as registered with the metrics library to provide the help string, was incorrect compared with the actual code that sets the metric value - bring them into sync. Also, the help message was incorrect. Rather than copy the help message from telemetry.mdx, which was correct, but felt a bit unnatural in the way it was worded, update both of them to a new wording."
2297,Additional service mesh docs updates for peering (#13464),This PR covers two sets of changes: - Documenting the new destination_peer for proxy upstream definitions. - Updating the exported-services config entry documentation. Updates to the exported-services config entry include: - As of 1.13.0 it is no longer only for Consul Enterprise - A PeerName is now a possible consumer for an exported service. - Added examples for OSS and Enterprise - Linked to peering docs
2298,tweaks to the enterprise section for ecs mesh gateways,
2299,tweaks to the secure configuration for manually installing consul ecs,
2300,Added note about manually creating mesh gw not being supported,
2301,tweaks to the secure TF install section,
2302,minor tweaks to TF install,
2303,updates to ECS Terraform install,
2304,Apply suggestions from code review,
2305,Merge branch 'main' of github.com:hashicorp/consul into docs-ecs-mesh-gw,
2306,update helm values docs and annotations (#13487),
2307,Update website/content/docs/connect/cluster-peering/create-manage-peering.mdx,
2308,Apply suggestions from code review,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
2309,Docs - k8s - Webhook Certs on Vault (#13441),  Docs - k8s - Webhook Certs on Vault   Adding webhook certs to data-integration overview page   marking items as code   Apply suggestions from code review   Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com   Updating prerequisites intro   Updating prerequisites intro   Updating Create a Vault auth roles that link the policy to each Consul on Kubernetes service account that requires access to Link the Vault policy to Consul workloads   changing Configure the Vault Kubernetes auth role in the Consul on Kubernetes helm chart to Update the Consul on Kubernetes helm chart.   Changed Create a Vault PKI role that establishes the domains that it is allowed to issue certificates for to Configure allowed domains for PKI certificates   Moved Create a Vault policy that authorizes the desired level of access to the secret to the Set up per Consul Datacenter section   Update website/content/docs/k8s/installation/vault/data-integration/webhook-certs.mdx   Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com   Moving Overview above Prerequisites.  Adding sentence where missing after page title.   Moving Overview above Prerequisites for webhook certs page.   fixing the end of the overview section that was not moved.   Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
2310,referred to mesh gateway functionality in ECS overview,
2311,Merge pull request #13466 from hashicorp/consul-lambda-broken-link,Fix broken link in lambda docs
2312,Move ACLResolveResult into acl/resolver package (#13467),"Having this type live in the agent/consul package makes it difficult to put anything that relies on token resolution (e.g. the new gRPC services) in separate packages without introducing import cycles. For example, if package foo imports agent/consul for the ACLResolveResult type it means that agent/consul cannot import foo to register its service. We've previously worked around this by wrapping the ACLResolver to ""downgrade"" its return type to an acl.Authorizer - aside from the added complexity, this also loses the resolved identity information. In the future, we may want to move the whole ACLResolver into the acl/resolver package. For now, putting the result type there at least, fixes the immediate import cycle issues."
2313,Add changelog note,
2314,command: Add TLS support for envoy prometheus endpoint,
2315,Update upgrade-specific-versions.mdx,
2316,Update docs with peer query parameter (#13462),Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
2317,feat: tgtwy xDS generation for destinations,Signed-off-by: Dhia Ayachi dhia@hashicorp.com
2318,peering: block Intention.Apply ops (#13451),Signed-off-by: acpana 8968914+acpana@users.noreply.github.com
2319,"peering, state: account for peer intentions (#13443)",Signed-off-by: acpana 8968914+acpana@users.noreply.github.com
2320,Add type info to options (#13477),
2321,Update index.mdx (#13476),
2322,Merge pull request #13469 from hashicorp/correct-redhat-tags,Correct redhat tags
2323,Update docs with Source.Peer field (#13463),
2324,Lambda documentation tweaks (#13459),Lambda documentation tweaks
2325,correct redgat_tag ospid,
2326,strip trailing whitespace,
2327,ui: Fix intl keys in order to render correct messages for empty states (#13409),  ui: Fix intl keys in order to render correct messages for empty states   Add a debug only debug log to warn about missing keys 
2328,Fix broken link in lambda docs,
2329,Additional consistency edits,
2330,Apply suggestions from code review,Co-authored-by: Nitya Dhanushkodi nitya@hashicorp.com Co-authored-by: Blake Covarrubias blake@covarrubi.as
2331,Add peering endpoint API docs (#13454),
2332,xds: begin refactor to always pass test snapshots through all xDS types (#13461),
2333,Add note about expected status for invalid CertificateRef,
2334,xds: mesh gateways now have their own leaf certificate when involved in a peering (#13460),This is only configured in xDS when a service with an L7 protocol is exported. They also load any relevant trust bundles for the peered services to eventually use for L7 SPIFFE validation during mTLS termination.
2335,Update website/data/docs-nav-data.json,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
2336,Update website/content/docs/connect/cluster-peering/index.mdx,
2337,Apply suggestions from code review,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
2338,Limitations -> Constraints,
2339,Apply suggestions from code review,Co-authored-by: Freddy freddygv@users.noreply.github.com
2340,typo fix,
2341,Switch fronend-service and backend-service,
2342,Apply suggestions from code review,
2343,Apply suggestions from code review,Co-authored-by: Blake Covarrubias blake@covarrubi.as Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
2344,Apply suggestions from code review,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com Co-authored-by: Blake Covarrubias blake@covarrubi.as
2345,peering_token.json addition,
2346,docs: instructions for interacting with the private gRPC server locally,
2347,[OSS] Support merge-central-config option in node services list API (#13450),"Adds the merge-central-config query param option to the /catalog/node-services/:node-name API, to get a service definition in the response that is merged with central defaults (proxy-defaults/service-defaults). Updated the consul connect envoy command to use this option when retrieving the proxy service details so as to render the bootstrap configuration correctly."
2348,Lambda Beta Documentation (#13426), Document the enable_serverless_plugin Agent Configuration Option (#13372) Initial AWS Lambda documentation (#13245)
2349,"Load test, upgrade packer version, fix k6s installation (#13382)", fix sg: need remote access to test server Give the load generator a name Update loadtest hcl filename in readme Add terraform init Disable access to the server machine by default
2350,Merge branch 'main' into jkirschner-hashicorp-patch-3,
2351,Merge pull request #13353 from hashicorp/jkirschner-hashicorp-patch-1,docs: show HCP Consul supports CTS enterprise
2352,Apply suggestions from code review,Co-authored-by: Freddy freddygv@users.noreply.github.com
2353,connect: Use Envoy 1.22.2 instead of 1.22.1 (#13444),
2354,Update website/content/docs/connect/cluster-peering/create-manage-peering.mdx,Co-authored-by: Freddy freddygv@users.noreply.github.com
2355,Update website/content/docs/connect/cluster-peering/create-manage-peering.mdx,
2356,Update website/content/docs/connect/cluster-peering/create-manage-peering.mdx,Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
2357,Update website/content/docs/connect/cluster-peering/index.mdx,Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
2358,Cluster Peering on Kubernetes page creation,
2359,Nav.json updates,
2360,Removing k8s updates on this branch,
2361,Updated nav.json,
2362,Merge pull request #13445 from hashicorp/peering/finalize-deletions,
2363, fixes,
2364,Code Block fixes,
2365,Avoid deleting peerings marked as terminated.,"When our peer deletes the peering it is locally marked as terminated. This termination should kick off deleting all imported data, but should not delete the peering object itself. Keeping peerings marked as terminated acts as a signal that the action took place."
2366,Add leader routine to clean up peerings,"Once a peering is marked for deletion a new leader routine will now clean up all imported resources and then the peering itself. A lot of the logic was grabbed from the namespace/partitions deferred deletions but with a handful of simplifications: - The rate limiting is not configurable.   Deleting imported nodes/services/checks is done by deleting nodes with   the Txn API. The services and checks are deleted as a side-effect.   There is no ""round rate limiter"" like with namespaces and partitions.   This is because peerings are purely local, and deleting a peering in   the datacenter does not depend on deleting data from other DCs like   with WAN-federated namespaces. All rate limiting is handled by the   Raft rate limiter. "
2367,Cluster Peering on Kubernetes initial draft,
2368,Indent points specific to xRoute backend references,
2369,Cluster Peering on Kubernetes page creation,
2370,connect: Update Envoy support matrix to latest patch releases (#13431),
2371,Add docs for ReferencePolicy as it applies to Gateways,
2372,peering: intentions list test (#13435),
2373,[docs] update terminating gateway docs for trust store path (#13432), update terminating gateway docs for trust store Update website/content/docs/k8s/connect/terminating-gateways.mdx Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
2374,Fixing double-ticks `,
2375,Added nav data,
2376,Removing Kubernetes page - will submit separate PR for timing reason,
2377,Typo fix,
2378,Create and Manage Peering Connections additional fixes,
2379,light restructureing/fixed some copypasta,
2380,What is Cluster Peering? additional fixes,
2381,"updated referencepolicy to referencegrant, added v0.3.0 upgrade instructions",
2382,Create and Manage Peering Connections page,
2383,Merge pull request #13430 from hashicorp/peering/deletion,
2384,What is Cluster Peering? additional fixes,
2385,What is Cluster Peering? page,
2386,Fixup api test,
2387,Fixup stream tear-down steps.,"  Fix a bug where the peering leader routine would not track all active    peerings in the ""stored"" reconciliation map. This could lead to    tearing down streams where the token was generated, since the    ConnectedStreams() method used for reconciliation returns all streams    and not just the ones initiated by this leader routine.   Fix a race where stream contexts were being canceled before    termination messages were being processed by a peer.   Previously the leader routine would tear down streams by canceling    their context right after the termination message was sent. This    context cancelation could be propagated to the server side faster    than the termination message. Now there is a change where the    dialing peer uses CloseSend() to signal when no more messages will    be sent. Eventually the server peer will read an EOF after receiving    and processing the preceding termination message. Using CloseSend() is actually not enough to address the issue    mentioned, since it doesn't wait for the server peer to finish    processing messages. Because of this now the dialing peer also reads    from the stream until an error signals that there are no more    messages. Receiving an EOF from our peer indicates that they    processed the termination message and have no additional work to do. Given that the stream is being closed, all the messages received by    Recv are discarded. We only check for errors to avoid importing new    data."
2388,Update peering state and RPC for deferred deletion,"When deleting a peering we do not want to delete the peering and all imported data in a single operation, since deleting a large amount of data at once could overload Consul. Instead we defer deletion of peerings so that:   When a peering deletion request is received via gRPC the peering is    marked for deletion by setting the DeletedAt field.   A leader routine will monitor for peerings that are marked for    deletion and kick off a throttled deletion of all imported resources    before deleting the peering itself.   This commit mostly addresses point #1 by modifying the peering service to mark peerings for deletion. Another key change is to add a PeeringListDeleted state store function which can return all peerings marked for deletion. This function is what will be watched by the deferred deletion leader routine."
2389,Initial page creation,
2390,Clean up imported nodes/services/checks as needed (#13367),"Previously, imported data would never be deleted. As nodes/services/checks were registered and deregistered, resources deleted from the exporting cluster would accumulate in the imported cluster. This commit makes updates to replication so that whenever an update is received for a service name we reconcile what was present in the catalog against what was received. This handleUpdateService method can handle both updates and deletions."
2391,Merge pull request #13333 from hashicorp/docs/capig-instances-config,docs: Consul API Gateway scaling config
2392,Merge pull request #13357 from hashicorp/ma/add-build-date-oss,Add build date (oss)
2393,Fix infinite recursion in bash_env,Signed-off-by: Mark Anderson manderson@hashicorp.com
2394,Update RBAC to handle imported services (#13404),"When converting from Consul intentions to xds RBAC rules, services imported from other peers must encode additional data like partition (from the remote cluster) and trust domain. This PR updates the PeeringTrustBundle to hold the sending side's local partition as ExportedPartition. It also updates RBAC code to encode SpiffeIDs of imported services with the ExportedPartition and TrustDomain."
2395,xds: allow for peered upstreams to use tagged addresses that are hostnames (#13422),"Mesh gateways can use hostnames in their tagged addresses (#7999). This is useful if you were to expose a mesh gateway using a cloud networking load balancer appliance that gives you a DNS name but no reliable static IPs. Envoy cannot accept hostnames via EDS and those must be configured using CDS. There was already logic when configuring gateways in other locations in the code, but given the illusions in play for peering the downstream of a peered service wasn't aware that it should be doing that. Also: - ensuring that we always try to use wan-like addresses to cross peer boundaries."
2396,Merge pull request #13421 from hashicorp/dns-node-query-partitions,OSS: Add dns node lookup support in partitions
2397,Add changelog note,
2398,Add dns node lookup support in partitions,
2399,Merge pull request #13316 from hashicorp/ma/vault-docs-report-backport,Update website/content/docs/connect/ca/vault.mdx
2400,peering: rename initiate to establish in the context of the APIs (#13419),
2401,Minor cleanup for build-date script,Signed-off-by: Mark Anderson manderson@hashicorp.com
2402,Change default dates,Signed-off-by: Mark Anderson manderson@hashicorp.com
2403,Add changelog,Signed-off-by: Mark Anderson manderson@hashicorp.com
2404,Fixup some more tests,Signed-off-by: Mark Anderson manderson@hashicorp.com
2405,Fix issue with consul version tests,Signed-off-by: Mark Anderson manderson@hashicorp.com
2406,Set default for build date,Signed-off-by: Mark Anderson manderson@hashicorp.com
2407,Fix build-date to use UTC,Signed-off-by: Mark Anderson manderson@hashicorp.com
2408,Add build date to self endpoint,Signed-off-by: Mark Anderson manderson@hashicorp.com
2409,Build date in config file,Signed-off-by: Mark Anderson manderson@hashicorp.com
2410,Fixup agent startup,Signed-off-by: Mark Anderson manderson@hashicorp.com
2411,Cleanup and extend basic build date,Signed-off-by: Mark Anderson manderson@hashicorp.com
2412,Fixup build scripts,Signed-off-by: Mark Anderson manderson@hashicorp.com
2413,Add BuildDate to version structure,Signed-off-by: Mark Anderson manderson@hashicorp.com
2414,chore(ci): fix false positive metrics check,
2415,ui: Disable licensing tab if the UI is running via HCP (#12771),Co-authored-by: Evan Rowe ev.rowe@gmail.com
2416,peering: mesh gateways are required for cross-peer service mesh communication (#13410),"Require use of mesh gateways in order for service mesh data plane traffic to flow between peers. This also adds plumbing for envoy integration tests involving peers, and one starter peering test."
2417,lint: conversion,
2418,tests: removed redundant probe test,
2419,tests: added syscall mocking and tests for Check_OSService,
2420,docs: correct Vault CA multiple namespace support,
2421,Change CTS docs to use the start subcommand.,
2422,Add missing index for read,
2423,Add IntentionMatch tests for source peers,
2424,Update ServiceIntentionSourceIndex to handle peer,
2425,Add SourcePeer fields to relevant Intentions types (#13390),
2426,peering: allow protobuf requests to populate the default partition or namespace (#13398),
2427,ui: upgrade ember composable helper (#13394),Upgrade ember-composable-helpers to version 5.x. This version contains the pick-helper which makes composition in the template layer easier with Octane. {{!-- this is usually hard to do with Octane --}}  Version 5.x also fixes a regression with sort-by that according to @johncowen was the reason why the version was pinned to 4.0.0 at the moment. Version 5 of ember-composable-helpers removes the contains-helper in favor of includes which I changed all occurences for.
2428,Fix intentions wildcard dest (#13397),  when enterprise meta are wildcard assume it's a service intention   fix partition and namespace   move kind outside the loops   get the kind check outside the loop and add a comment   Co-authored-by: github-team-consul-core github-team-consul-core@hashicorp.com
2429,Update go-grpc/grpc to resolve conection memory leak,"Reported in #12288 The initial test reported was ported and accurately reproduced the issue. However, since it is a test of an upstream library's internal behavior it won't be codified in our test suite. Refer to the ticket/PR for details on how to demonstrate the behavior."
2430,peering: avoid a race between peering establishment and termination (#13389),
2431,Update website/content/docs/api-gateway/consul-api-gateway-install.mdx,Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com
2432,Update website/content/docs/api-gateway/consul-api-gateway-install.mdx,Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com
2433,Egress gtw/intention rpc endpoint (#13354),"  update gateway-services table with endpoints   fix failing test   remove unneeded config in test   rename ""endpoint"" to ""destination""   more endpoint renaming to destination in tests   update isDestination based on service-defaults config entry creation   use a 3 state kind to be able to set the kind to unknown (when neither a service or a destination exist)   set unknown state to empty to avoid modifying alot of tests   fix logic to set the kind correctly on CRUD   fix failing tests   add missing tests and fix service delete   fix failing test   Apply suggestions from code review   Co-authored-by: Dan Stough dan.stough@hashicorp.com   fix a bug with kind and add relevant test   fix compile error   fix failing tests   add kind to clone   fix failing tests   fix failing tests in catalog endpoint   fix service dump test   Apply suggestions from code review   Co-authored-by: Dan Stough dan.stough@hashicorp.com   remove duplicate tests   first draft of destinations intention in connect proxy   remove ServiceDestinationList   fix failing tests   fix agent/consul failing tests   change to filter intentions in the state store instead of adding a field.   fix failing tests   fix comment   fix comments   store service kind destination and add relevant tests   changes based on review   filter on destinations when querying source match   change state store API to get an IntentionTarget parameter   add intentions tests   add destination upstream endpoint   fix failing test   fix failing test and a bug with wildcard intentions   fix failing test   Apply suggestions from code review   Co-authored-by: alex 8968914+acpana@users.noreply.github.com   add missing test and clarify doc   fix style   gofmt intention.go   fix merge introduced issue   Co-authored-by: Dan Stough dan.stough@hashicorp.com Co-authored-by: alex 8968914+acpana@users.noreply.github.com Co-authored-by: github-team-consul-core github-team-consul-core@hashicorp.com"
2434,Egress gtw/connect destination intentions (#13341),"  update gateway-services table with endpoints   fix failing test   remove unneeded config in test   rename ""endpoint"" to ""destination""   more endpoint renaming to destination in tests   update isDestination based on service-defaults config entry creation   use a 3 state kind to be able to set the kind to unknown (when neither a service or a destination exist)   set unknown state to empty to avoid modifying alot of tests   fix logic to set the kind correctly on CRUD   fix failing tests   add missing tests and fix service delete   fix failing test   Apply suggestions from code review   Co-authored-by: Dan Stough dan.stough@hashicorp.com   fix a bug with kind and add relevant test   fix compile error   fix failing tests   add kind to clone   fix failing tests   fix failing tests in catalog endpoint   fix service dump test   Apply suggestions from code review   Co-authored-by: Dan Stough dan.stough@hashicorp.com   remove duplicate tests   first draft of destinations intention in connect proxy   remove ServiceDestinationList   fix failing tests   fix agent/consul failing tests   change to filter intentions in the state store instead of adding a field.   fix failing tests   fix comment   fix comments   store service kind destination and add relevant tests   changes based on review   filter on destinations when querying source match   Apply suggestions from code review   Co-authored-by: alex 8968914+acpana@users.noreply.github.com   fix style   Apply suggestions from code review   Co-authored-by: Dan Stough dan.stough@hashicorp.com  rename destinationType to targetType.  Co-authored-by: Dan Stough dan.stough@hashicorp.com Co-authored-by: alex 8968914+acpana@users.noreply.github.com Co-authored-by: github-team-consul-core github-team-consul-core@hashicorp.com"
2435,chore: changelog,
2436,feat: windows service health checks,
2437,docs: added os_service,
2438,ci: Add package verifications to build workflow (#13294),Co-authored-by: cskh hui.kang@hashicorp.com
2439,test: retry the compat tests as often as other tests (#13369),The upgrade compatibility tests need frequent retrying to pass because they are slightly flaky. To alleviate manual work borrow similar gotestsum logic from the main go tests CI job to rerun them automatically here.
2440,test: break dep on main consul module (#13373),The main consul module is not a great library and complicates some oss/ent module issues. This undoes #13371
2441,peering: allow mesh gateways to proxy L4 peered traffic (#13339),Mesh gateways will now enable tcp connections with SNI names including peering information so that those connections may be proxied. Note: this does not change the callers to use these mesh gateways.
2442,UDP check for service stanza #12221 (#12722),  UDP check for service stanza #12221   add pass status on timeout condition   delete useless files   Update check_test.go   improve comment in test   fix test   fix requested changes and update TestRuntimeConfig_Sanitize.golden   add freeport to TestCheckUDPCritical   improve comment for CheckUDP struct   fix requested changes   fix requested changes   fix requested changes   add UDP to proto   add UDP to proto and add a changelog   add requested test on agent_endpoint_test.go   add test for given endpoints   fix failing tests   add documentation for udp healthcheck   regenerate proto using buf   Update website/content/api-docs/agent/check.mdx   Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com  Update website/content/api-docs/agent/check.mdx  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com  Update website/content/docs/discovery/checks.mdx  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com  Update website/content/docs/ecs/configuration-reference.mdx  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com  Update website/content/docs/ecs/configuration-reference.mdx  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com   add debug echo   add debug circle-ci   add debug circle-ci bash   use echo instead of status_stage   remove debug and status from devtools script and use echo instead   Update website/content/api-docs/agent/check.mdx   Co-authored-by: Jared Kirschner 85913323+jkirschner-hashicorp@users.noreply.github.com   fix test   replace status_stage with status   replace functions with echo   Co-authored-by: Dhia Ayachi dhia@hashicorp.com Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com Co-authored-by: Jared Kirschner 85913323+jkirschner-hashicorp@users.noreply.github.com
2443,test: use a go mod replace trick for the compat test dependency on the main repo (#13371),
2444,Add latest changelog entries (#13363),
2445,peering: send leader addr (#13342),Signed-off-by: acpana 8968914+acpana@users.noreply.github.com
2446,[OSS] consul connect envoy command changes for agentless (#13361),"Changes the sourcing of the envoy bootstrap configuration to not use agent APIs and instead use the catalog(server) API. This is done by passing a node-name flag to the command, (which can only be used with proxy-id). Also fixes a bug where the golden envoy bootstrap config files used for tests did not use the expected destination service name in certain places for connect proxy kind."
2447,add codeowners to protect release dirs (#13261), add codeowners to protect release dirs
2448,xds: remove HTTPCheckFetcher dependency (#13366),"This is the OSS portion of enterprise PR 1994 Rather than directly interrogating the agent-local state for HTTP checks using the HTTPCheckFetcher interface, we now rely on the config snapshot containing the checks. This reduces the number of changes required to support server xDS sessions. It's not clear why the fetching approach was introduced in 931d167ebb2300839b218d08871f22323c60175d."
2449,peering: update how cross-peer upstreams and represented in proxycfg and rendered in xds (#13362),"This removes unnecessary, vestigal remnants of discovery chains."
2450,Add isLeader metric to track if a server is a leader (#13304),CTIA-21: sdd is_leader metric to track if a server is a leader Co-authored-by: alex 8968914+acpana@users.noreply.github.com
2451,docs: show HCP Consul supports CTS enterprise,
2452,Merge pull request #13340 from hashicorp/peering/public-listener,
2453,chore: remove broken link from pr template (#13343),
2454,update multicluster docs (#13334),
2455,Fix KVSGet method to handle QueryOptions properly (#13344),
2456,Update public listener with SPIFFE Validator,"Envoy's SPIFFE certificate validation extension allows for us to validate against different root certificates depending on the trust domain of the dialing proxy. If there are any trust bundles from peers in the config snapshot then we use the SPIFFE validator as the validation context, rather than the usual TrustedCA. The injected validation config includes the local root certificates as well."
2457,Add agent cache-type for TrustBundleListByService,"There are a handful of changes in this commit: * When querying trust bundles for a service we need to be able to   specify the namespace of the service. * The endpoint needs to track the index because the cache watches use   it. * Extracted bulk of the endpoint's logic to a state store function   so that index tracking could be tested more easily. * Removed check for service existence, deferring that sort of work to ACL authz * Added the cache type"
2458,Update assumptions around exported-service config,"Given that the exported-services config entry can use wildcards, the precedence for wildcards is handled as with intentions. The most exact match is the match that applies for any given service. We do not take the union of all that apply. Another update that was made was to reflect that only one exported-services config entry applies to any given service in a partition. This is a pre-existing constraint that gets enforced by the Normalize() method on that config entry type."
2459,Configure upstream TLS context with peer root certs (#13321),"For mTLS to work between two proxies in peered clusters with different root CAs, proxies need to configure their outbound listener to use different root certificates for validation. Up until peering was introduced proxies would only ever use one set of root certificates to validate all mesh traffic, both inbound and outbound. Now an upstream proxy may have a leaf certificate signed by a CA that's different from the dialing proxy's. This PR makes changes to proxycfg and xds so that the upstream TLS validation uses different root certificates depending on which cluster is being dialed."
2460,[OSS] Pull split ns/partition var out of testing file (#13337),"The api module previously had defaultPartition and defaultNamespace vars for when we need default/empty split usage between ent/oss respectively. This commit moves those two variables out of test code so that they can be used for the service exports config entry's GetNamespace() method. Previously GetNamespace() would return ""default"" in both OSS and enterprise, which can trip up automation that passes the result of this method as the namespace to write a config entry. The split vars are kept private to prevent external usage, and prefixed with split for more clarity about their behavior."
2461,build: ensure tools match go toolchain version (#13338),
2462,test: regenerate golden files (#13336),make envoy-regen go test ./agent/config -update
2463,build: add 'make help' to simply list available make targets (#13322),
2464,docs(consul-api-gateway): fixup code snippets in gateway scaling section,
2465,docs(consul-api-gateway): fixup CLI prompt to match convention,
2466,docs(consul-api-gateway): add Gateway scaling section,
2467,ci: nomad main is now on go 1.18 (#13329),The nomad integration tests that use main need to be updated to reflect hashicorp/nomad#13036
2468,docs(consul-api-gateway): gateway instances -> instances per gateway,
2469,docs(consul-api-gateway): add GatewayClassConfig deployment.maxInstances and deployment.minInstances,
2470,docs(consul-api-gateway): add GatewayClassConfig deployment.defaultInstances,
2471,Revert getPathSuffixUnescaped (#13256),
2472,proxycfg: replace direct agent cache usage with interfaces (#13320),"This is the OSS portion of enterprise PRs 1904, 1905, 1906, 1907, 1949, and 1971. It replaces the proxycfg manager's direct dependency on the agent cache with interfaces that will be implemented differently when serving xDS sessions from a Consul server."
2473,Reimplement fs.FileInfo interface (#13315),Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com
2474,[Fix typo] Backport-reminder (#13313),
2475,yUpdate website/content/docs/connect/ca/vault.mdx,Port some changes that were made to the backport branch but not in the original PR. Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com Signed-off-by: Mark Anderson manderson@hashicorp.com
2476,Fix broken CI step (#13314),
2477,update gateway-services table with endpoints (#13217),"  update gateway-services table with endpoints   fix failing test   remove unneeded config in test   rename ""endpoint"" to ""destination""   more endpoint renaming to destination in tests   update isDestination based on service-defaults config entry creation   use a 3 state kind to be able to set the kind to unknown (when neither a service or a destination exist)   set unknown state to empty to avoid modifying alot of tests   fix logic to set the kind correctly on CRUD   fix failing tests   add missing tests and fix service delete   fix failing test   Apply suggestions from code review   Co-authored-by: Dan Stough dan.stough@hashicorp.com   fix a bug with kind and add relevant test   fix compile error   fix failing tests   add kind to clone   fix failing tests   fix failing tests in catalog endpoint   fix service dump test   Apply suggestions from code review   Co-authored-by: Dan Stough dan.stough@hashicorp.com   remove duplicate tests   rename consts and fix kind when no destination is defined in the service-defaults.   rename Kind to ServiceKind and change switch to use .(type)   Co-authored-by: Dan Stough dan.stough@hashicorp.com"
2478,Update repo to use go:embed (#10996),Replace bindata packages with stdlib go:embed. Modernize some uiserver code with newer interfaces introduced in go 1.16 (mainly working with fs.File instead of http.File. Remove steps that are no longer used from our build files. Add Github Action to detect differences in agent/uiserver/dist and verify that the files are correct (by compiling UI assets and comparing contents).
2479,chore(ci): add no-op jobs for branch protection rules,
2480,[OSS] Fix merge central config tests (#13309),Setting the right enterprise meta to fix the merge central config tests. Re-added the tests that were failing on the OSS to ENT merge.
2481,Use embedded SpiffeID for peered upstreams,
2482,Remove intermediate representation of SPIFFE IDs,"xDS only ever uses the string representation, so we can avoid passing around connect.SpiffeIDService objects around."
2483,Return SPIFFE ID for connect proxies in PeerMeta,Proxies dialing exporting services need to know the SPIFFE ID of services dialed so that the upstream's SANs can be validated. This commit attaches the SPIFFE ID to all connect proxies exported over the peering stream so that they are available to importing clusters. The data in the SPIFFE ID cannot be re-constructed in peer clusters because the partition of exported services is overwritten on imports.
2484,[OSS] Add grpc endpoint to fetch a specific trust bundle (#13292),Co-authored-by: R.B. Boyer rb@hashicorp.com
2485,Refactor some functions for better enterprise use (#13280),
2486,docs: Use .snap extension in API snapshot save/restore,"Change the .tgz file extension in the snapshot save and restore examples on /api-docs/snapshot to .snap. This is consistent with the file extension used in other example snapshot save and restore commands, as well as the default extension used by the Consul Snapshot Agent."
2487,Fix race during proxy closing (#13283),p.service is written to within the Serve method. The Serve method also waits for the stopChan to be closed. The race was between Close being called on the proxy causing Close on the service which was written to around the same time in the Serve method. The fix is to have Serve be responsible for closing p.service.
2488,ci: add docker build smoke test (#13200),
2489,CI: Verify built binaries in build job (#13221),Co-authored-by: Evan Culver eculver@hashicorp.com
2490,CTIA-16: add tags to load test resources and run test on PR commit (#13258), retry destroy terraform resources
2491,Fix a flaky test (#13282),"At the end of this test we were trying to ensure that updating a service in the local state causes it to re-register the service with the config manager. The config manager in the same method will also call RegisteredProxies to determine if any need to be removed. This portion of the test is not attempting to verify that behavior. Because the test is only blocked waiting for the Register event before it can end and assert all the mock expectations were met, we may not see the call to RegisteredProxies. This is especially apparent when tests are run with the race detector. As we don’t actually care if that method is executed before the end of the test we can simply transition from expecting it to be called exactly once to a 0 or 1 times assertion."
2492,Add build tag for oss (#13279),
2493,Replace CLI command registry with a new pattern. (#12729),
2494,Enable servers to configure arbitrary proxies from the catalog (#13244),"OSS port of enterprise PR 1822 Includes the necessary changes to the proxycfg and xds packages to enable Consul servers to configure arbitrary proxies using catalog data. Broadly, proxycfg.Manager now has public methods for registering, deregistering, and listing registered proxies — the existing local agent state-sync behavior has been moved into a separate component that makes use of these methods. When an xDS session is started for a proxy service in the catalog, a goroutine will be spawned to watch the service in the server's state store and re-register it with the proxycfg.Manager whenever it is updated (and clean it up when the client goes away)."
2495,monitor leadership in peering service (#13257),Signed-off-by: acpana 8968914+acpana@users.noreply.github.com Co-authored-by: Chris S. Kim ckim@hashicorp.com Co-authored-by: Freddy freddygv@users.noreply.github.com
2496,Add latest changelog entries (#13276),
2497,Termporarily disable validation of merge central config response (#13266),Temporarily disabling the validation of merge central config response since it is breaking OSS to ENT merging. A follow up PR will patch the fixes.
2498,Add support for streaming CA roots to peers (#13260),Sender watches for changes to CA roots and sends them through the replication stream. Receiver saves CA roots to tablePeeringTrustBundle
2499,Merge pull request #13239 from hashicorp/ui/bugfix/permissions-header,ui: Typography update for view-only Intentions
2500,Enable manual triggering of  load test (#13068),
2501,Remove tests failing on ent (#13255),Will follow up with the fixed version of these tests that passes in ent.
2502,[CI-only] Support UBI images (#13232),Co-authored-by: David Yu dyu@hashicorp.com
2503,Export top-level HCP Enabled go-template variable for UI (#13165), Update ui template data to export HCPEnabled at the top level
2504,updates,readded %reset-typo and defined .consul-intention-view h2
2505,fix: multiple grpc/http2 services for ingress listeners,
2506,removed %reset-typo,
2507,Merge pull request #13006 from hashicorp/docs/http-api-breakout-path-parameters,HTTP API Docs: Separate path parameters from query parameters
2508,docs: split HTTP API params into sections by type,"Path parameters, query parameters, and request body parameters are now shown in separate sections rather than combined into one general parameters section. This makes it much easier to understand quickly where a parameter should be provided."
2509,Add support for merge-central-config query param (#13001),"Adds a new query param merge-central-config for use with the below endpoints: /catalog/service/:service /catalog/connect/:service /health/service/:service /health/connect/:service If set on the request, the response will include a fully resolved service definition which is merged with the proxy-defaults/global and service-defaults/:service config entries (on-demand style). This is useful to view the full service definition for a mesh service (connect-proxy kind or gateway kind) which might not be merged before being written into the catalog (example: in case of services in the agentless model)."
2510,remove a source of test panics (#13227),
2511,api: ensure peering API endpoints do not use protobufs (#13204),"I noticed that the JSON api endpoints for peerings json encodes protobufs directly, rather than converting them into their api package equivalents before marshal/unmarshaling them. I updated this and used mog to do the annoying part in the middle.  Other changes: - the status enum was converted into the friendlier string form of the enum for readability with tools like curl - some of the api library functions were slightly modified to match other similar endpoints in UX (cc: @ndhanushkodi ) - peeringRead returns nil if not found - partitions are NOT inferred from the agent's partition (matching 1.11-style logic)"
2512,update docs for single-dc-multi-k8s install (#13008), update docs for single-dc-multi-k8s install  Co-authored-by: David Yu dyu@hashicorp.com Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com
2513,Nia/docs 0.6.0 (#13107)," updated docs added docs for start command deprecated running without a command  added instructions for autocomplete setup   addressed review comments   addressed review comments   addressed review comments   docs/nia: Terraform Cloud agent support   Add agent as a supported execution mode  Add terraform_cloud_workspace configuration  Deprecate existing terraform_version config   license block docs   added HCP Consul to compatibility   added HCP instructions   addressed review comments   added new auto-retrieval behavior to license docs   addressed review comments   addressed review comments   Apply suggestions from code review   Apply suggestions from code review   updated docs   updated docs   Apply suggestions from code review   Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com   fixed heading types   fixed heading types   update docs   docs/nia: Add service registration configurations   docs/nia: Style guide updates   docs/nia: Update with beta docs feedback   docs/nia: Update license config formatting   Other top-level blocks aren't included in the list of global config options, so removed the liciense entry.   docs/nia: Add auto-retrieval section to license page   docs/nia: Separate column for HCP Consul support   docs/nia: Compatiblity version upper bounds   docs/nia: Fix broken links   docs/nia: Style guide fixes   Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com   Remove RequestId field from cts health api docs.   docs/nia - Update CTS service id format (#13125)   docs/nia: Convert Consul config to table format   docs/nia: Add ACL token policy requirements   update docs (#13174)   docs/nia: Fix ca_path, key default, and some links   docs/nia: Add CTS service address config   Update website/content/docs/nia/cli/index.mdx   docs/nia: update for 0.6 GA (#13191)   Co-authored-by: devarshishah3 devarshishah3@gmail.com Co-authored-by: Michael Wilkerson 62034708+wilkermichael@users.noreply.github.com Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com Co-authored-by: Melissa Kam mkam@hashicorp.com Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com Co-authored-by: Melissa Kam 3768460+mkam@users.noreply.github.com Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com Co-authored-by: Derek Menteer derek.menteer@hashicorp.com Co-authored-by: lornasong lornasong@users.noreply.github.com Co-authored-by: hashi-derek 105233703+hashi-derek@users.noreply.github.com Co-authored-by: devarshishah3 devarshishah3@gmail.com"
2514,"peering: replicate expected SNI, SPIFFE, and service protocol to peers (#13218)","The importing peer will need to know what SNI and SPIFFE name corresponds to each exported service. Additionally it will need to know at a high level the protocol in use (L4/L7) to generate the appropriate connection pool and local metrics. For replicated connect synthetic entities we edit the Connect{} part of a NodeService to have a new section: {   ""PeerMeta"": {     ""SNI"": [       ""web.default.default.owt.external.183150d5-1033-3672-c426-c29205a576b8.consul""     ],     ""SpiffeID"": [       ""spiffe://183150d5-1033-3672-c426-c29205a576b8.consul/ns/default/dc/dc1/svc/web""     ],     ""Protocol"": ""tcp""   } }  This data is then replicated and saved as-is at the importing side. Both SNI and SpiffeID are slices for now until I can be sure we don't need them for how mesh gateways will ultimately work."
2515,build: re-add proto-tools dep to make proto (#13223),
2516,update main to reflect 1.13.0-dev (#13192),
2517,Update CHANGELOG to mention removal of Envoy 1.17.4 and 1.18.6 (#13207),
2518,peering: disable requirement for mesh gateways initially (#13213),
2519,Merge pull request #13143 from hashicorp/envoy-connection-limit,Add connection limit setting to service defaults
2520,ui: Icon related fixups (#13183),  ui: Use new icon-size and icon-color for popover-menus   Remove the default currentColor plus add some more defaults   Undo transparency overwrites now we don't need them   Fixup discochain icons   Undo a default icon rule for vert align   Fixup expanded icon for meatball popovers   Fixup intention permission labels/badges/icons   Remove different res icon   Remove icon resolutions 
2521,Fix proto lint errors after version bump,
2522,[CI-only] Update tagging for dev_tags (#13199),"Remove the hardcoded -dev suffix from dev_tags, which is causing tags to be in the format 1.12.0-dev-dev instead of just 1.12.0-dev. I'll clean up the old tags before making the dockerhub repo public, which will be available https://hub.docker.com/r/hashicorppreview/consul"
2523,Specify go_package explicitly,
2524,fix: non-leader agents return 404 on Get Intention exact api (#13179),"  fix: non-leader agents return 404 on Get Intention exact api   rpc call method appends extra error message, so change == to   ""Strings.Contains""   Co-authored-by: Chris S. Kim ckim@hashicorp.com"
2525,Add connection limit setting to service defaults,
2526,Merge pull request #13188 from hashicorp/ui/bugfix/permission-alignment,ui: Alignment of L7 permissions
2527,chore(test): Update bats version,
2528,feat: add endpoint struct to ServiceConfigEntry,
2529,"peering: expose IsLeader, hung up on dialer if follower (#13164)",Signed-off-by: acpana 8968914+acpana@users.noreply.github.com Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com
2530,ui: Center alignment of L7 permissions,
2531,ci: github actions run with TERM=dumb and can't do tput commands (#13187),
2532,build: wire up remaining 5 helper tools into the same auto-install logic used for protobuf tools (#13184),
2533,Migrate from protoc to buf (#12841), Install buf instead of protoc Created buf.yaml and buf.gen.yaml files in the two proto directories to control how buf generates/lints proto code. Invoke buf instead of protoc Added a proto-format make target. Committed the reformatted proto files. Added a proto-lint make target. Integrated proto linting with CI Fixed tons of proto linter warnings. Got rid of deprecated builtin protoc-gen-go grpc plugin usage. Moved to direct usage of protoc-gen-go-grpc. Unified all proto directories / go packages around using pb prefixes but ensuring all proto packages do not have the prefix.
2534,Upgrade golangci-lint for go v1.18 (#13176),
2535,test: fix flaky test TestEventBufferFuzz (#13175),
2536,Fix tests broken in #13173 (#13178),I changed the error type returned in a situation but didn’t update the tests to expect that error.
2537,Fix flaky tests in the agent/grpc/public/services/serverdiscovery package (#13173),"Occasionally we had seen the TestWatchServers_ACLToken_PermissionDenied be flagged as flaky in circleci. This change should fix that. Why it fixes it is complicated. The test was failing with a panic when a mocked ACL Resolver was being called more times than expected. I struggled for a while to determine how that could be. This test should call authorize once and only once and the error returned should cause the stream to be terminated and the error returned to the gRPC client. Another oddity was no amount of running this test locally seemed to be able to reproduce the issue. I ran the test hundreds of thousands of time and it always passed. It turns out that there is nothing wrong with the test. It just so happens that the panic from unexpected invocation of a mocked call happened during the test but was caused by a previous test (specifically the TestWatchServers_StreamLifecycle test) The stream from the previous test remained open after all the test Cleanup functions were run and it just so happened that when the EventPublisher eventually picked up that the context was cancelled during cleanup, it force closes all subscriptions which causes some loops to be re-entered and the streams to be reauthorized. Its that looping in response to forced subscription closures that causes the mock to eventually panic. All the components, publisher, server, client all operate based on contexts. We cancel all those contexts but there is no syncrhonous way to know when they are stopped. We could have implemented a syncrhonous stop but in the context of an actual running Consul, context cancellation + async stopping is perfectly fine. What we (Dan and I) eventually thought was that the behavior of grpc streams such as this when a server was shutting down wasn’t super helpful. What we would want is for a client to be able to distinguish between subscription closed because something may have changed requiring re-authentication and subscription closed because the server is shutting down. That way we can send back appropriate error messages to detail that the server is shutting down and not confuse users with potentially needing to resubscribe. So thats what this PR does. We have introduced a shutting down state to our event subscriptions and the various streaming gRPC services that rely on the event publisher will all just behave correctly and actually stop the stream (not attempt transparent reauthorization) if this particular error is the one we get from the stream. Additionally the error that gets transmitted back through gRPC when this does occur indicates to the consumer that the server is going away. That is more helpful so that a client can then attempt to reconnect to another server."
2538,ci: name unnamed GHA workflows (#13162),
2539,agent: allow for service discovery queries involving peer name to use streaming (#13168),
2540,proxycfg: remove dependency on cache.UpdateEvent (#13144),"OSS portion of enterprise PR 1857. This removes (most) references to the cache.UpdateEvent type in the proxycfg package. As we're going to be direct usage of the agent cache with interfaces that can be satisfied by alternative server-local datasources, it doesn't make sense to depend on this type everywhere anymore (particularly on the state.ch channel). We also plan to extract proxycfg out of Consul into a shared library in the future, which would require removing this dependency. Aside from a fairly rote find-and-replace, the main change is that the cache.Cache and health.Client types now accept a callback function parameter, rather than a chan<- cache.UpdateEvents. This allows us to do the type conversion without running another goroutine."
2541,telemetry: remove unused arg (#13161),
2542,api: add the ability to specify a path prefix (#12914),Specifically meant for when consul is behind a reverse proxy / API gateway Co-authored-by: Evan Culver eculver@hashicorp.com
2543,peering: accept replication stream of discovery chain information at the importing side (#13151),
2544,test: TestServer_RPC_MetricsIntercept should use a concurrency-safe metrics store (#13157),
2545,chore(ci): fix rate-limiting for backport-assistant,
2546,Retry on bad dogstatsd connection (#13091)," Introduce a new telemetry configurable parameter retry_failed_connection. User can set the value to true to let consul agent continue its start process on failed connection to datadog server. When set to false, agent will stop on failed start. The default behavior is true.  Co-authored-by: Dan Upton daniel@floppy.co Co-authored-by: Evan Culver eculver@users.noreply.github.com"
2547,Merge pull request #13150 from hashicorp/peering-replicate-connect-endpoints,peering: replicate discovery chains information to importing peers
2548,peering: replicate discovery chains information to importing peers,"Treat each exported service as a ""discovery chain"" and replicate one synthetic CheckServiceNode for each chain and remote mesh gateway. The health will be a flattened generated check of the checks for that mesh gateway node."
2549,prefactor some functions out of the monolithic file,
2550,test: fix more flakes in the compatibility test (#13145),
2551,test: fix incorrect use of t instead of r in retry test (#13146),
2552,chore(ci): squash backport-assistant commits in PRs,
2553,fix 'releases/..x' to 'release/..x' (#13132),
2554,docs: Update service/node identities text on ACL index (#13022),Modify node and service identities paragraphs on ACL index to better conform with the style guide. Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com
2555,test: cleanup and unflake parts of the upgrade compat tests (#13126),
2556,Updating compatibility matrix for consul-k8s version 0.44.0 (#13111),
2557,config: prevent top-level verify_incoming enabling mTLS on gRPC port (#13118),Fixes #13088 This is a backwards-compatibility bug introduced in 1.12.
2558,Merge pull request #13110 from hashicorp/ui/bugfix/misspelling,"Corrected ""visualization"" typo"
2559,"Corrected ""visualization"" typo",
2560,Merge pull request #13108 from hashicorp/remove-unused-constant,Remove unused constant in retry.go
2561,Remove unused constant in retry.go,
2562,[CI-only] Build and publish dev dockerhub images (#13084),
2563,fix yaml alignment (#13105),
2564,add a github workflow to trigger ent->oss merge on every PR merged (#13072),  add a github workflow to trigger ent->oss merge on every PR merged   remove the workflow automation ref to trigger-oss-merge in circle-ci   remove workflow automation   revert circle-ci changes   add actor   remove cherrypicker   add condition to avoid running in enterprise 
2565,update the version of the underlying vm for these two test types (#13099),
2566,docs: specify 1.12.0+ent incompat with nomad (#12883),Due to build changes in Consul 1.12.0 the +ent modifier is missing from the version reported by /v1/agent/self. Nomad looks for the ent modifier when determining whether to reconcile services in non-default namespaces. Without the modifier Nomad will only end up removing services from the default Consul namespace.
2567,Merge pull request #13098 from hashicorp/fix-insecure-load-test,fix insecure cidr_blocks in load test
2568,change to var.vpc_cidr,
2569,fix insecure cidr_blocks in load test,
2570,upgrade serf to v0.9.8 (#13062),  upgrade serf to v0.9.8   add changelog   Update .changelog/13062.txt   Co-authored-by: Dan Upton daniel@floppy.co Co-authored-by: Dan Upton daniel@floppy.co
2571,chore(ci): fixes and spilt nightly tests per release branch,
2572,Update pr-labeler.yml,Changing from pull_request to pull_request_target so that forks can get the write permissions to add labels. See this thread in the action repo.
2573,Patches to peering initiation for POC demo (#13076),Co-authored-by: R.B. Boyer rb@hashicorp.com
2574,chore(ci): fix automerge spelling,
2575,When a host header is defined override req.Host in the metrics ui (#13071),  When a host header is defined override the req.Host in the metrics ui endpoint.   add changelog 
2576,Merge pull request #12972 from hashicorp/docs/simplify-acl-policy-examples, Fix JSON formatted example ACL policies Remove HCL examples of roles since only JSON payloads can be used Remove unnecessary quotes from HCL variables Clarify purpose of example ACL rules and policies Redirect /api-docs/acl/acl to the new URL
2577,Redirect /api-docs/acl/acl to the new URL,
2578,Clarify purpose of example ACL rules and policies,
2579,Remove unnecessary quotes from HCL variables,
2580,Remove HCL examples of roles since only JSON payloads can be used,
2581,docs: Fix JSON formatted example ACL policies,"Commit 9333fad added JSON formatted examples for all ACL polices. Most of these these examples are not valid JSON, and thus an error is raised when attempting to create the example policies/rules in Consul. This commit fixes the example JSON formatted ACL rules so that they are valid JSON. This enables readers to use the policies as-is from the documentation to successfully create policies in Consul. It also removes unnecessary arrays from the example policies so that the policies are easier for practitioners to read and write."
2582,peering: fix panic in test (#13069),
2583,chore(ci): deprecate cherry-pick script and enable backport merge,
2584,Actually block when syncing subscriptions (#13066),"By changing to use WatchCtx we will actually block for changes to the peering list. WatchCh creates a goroutine to collect errors from WatchCtx and returns immediately. The existing behavior wouldn't result in a tight loop because of the rate limiting in the surrounding function, but it would still lead to more work than is necessary."
2585,peering: add TrustBundleListByService endpoint (#13048),
2586,[OSS] Add upsert handling for receiving CheckServiceNode (#13061),
2587,Watch the singular service resolver instead of the list + filtering to 1 (#13012),  Watch the singular service resolver instead of the list + filtering to 1   Rename the ConfigEntries cache type to ConfigEntryList 
2588,docs: add enterprise image (#13047),
2589,Merge pull request #13057 from hashicorp/consul-k8s-docs-typo,Consul k8s docs typo
2590,Merge pull request #13056 from sofixa/patch-1,fix small typo in multi-cluster k8s install docs
2591,fix small typo in multi-cluster k8s installs docs,
2592,structs: add convenience methods to sort slices of ServiceName values (#13038),
2593,Beta CTS Docs (#12916),  updated beta docs   Update website/content/docs/release-notes/consul-terraform-sync/v0_6_0_beta.mdx   Co-authored-by: AJ Jwair aj.jwair@hashicorp.com  Update website/content/docs/release-notes/consul-terraform-sync/v0_6_0_beta.mdx  Co-authored-by: Melissa Kam 3768460+mkam@users.noreply.github.com  Update website/content/docs/release-notes/consul-terraform-sync/v0_6_0_beta.mdx  Co-authored-by: Melissa Kam 3768460+mkam@users.noreply.github.com  Update website/content/docs/release-notes/consul-terraform-sync/v0_6_0_beta.mdx  Co-authored-by: Melissa Kam 3768460+mkam@users.noreply.github.com  Update website/content/docs/release-notes/consul-terraform-sync/v0_6_0_beta.mdx  Co-authored-by: Melissa Kam 3768460+mkam@users.noreply.github.com  Update website/content/docs/release-notes/consul-terraform-sync/v0_6_0_beta.mdx  Co-authored-by: Melissa Kam 3768460+mkam@users.noreply.github.com  Update website/content/docs/release-notes/consul-terraform-sync/v0_6_0_beta.mdx  Co-authored-by: Melissa Kam 3768460+mkam@users.noreply.github.com  Apply suggestions from code review  Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com Co-authored-by: Melissa Kam 3768460+mkam@users.noreply.github.com  Apply suggestions from code review  Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com  Apply suggestions from code review  Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com Co-authored-by: Melissa Kam 3768460+mkam@users.noreply.github.com  Apply suggestions from code review  Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com   updated beta docs   updated beta docs   updated beta docs   updated docs   updated docs   Apply suggestions from code review   Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com   update docs   Update website/content/docs/release-notes/consul-terraform-sync/v0_6_0_beta.mdx   Co-authored-by: Melissa Kam 3768460+mkam@users.noreply.github.com   docs/nia: Health endpoint and service registration   Add Health endpoint docs   Add CTS service registration docs   update docs   docs/nia: Miscellaneous fixes to beta docs   Co-authored-by: lornasong lornasong@users.noreply.github.com  docs/nia: Update TFC agents description  Co-authored-by: AJ Jwair aj.jwair@hashicorp.com Co-authored-by: Melissa Kam 3768460+mkam@users.noreply.github.com Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com Co-authored-by: lornasong lornasong@users.noreply.github.com Co-authored-by: Melissa Kam mkam@hashicorp.com
2594,docs: Remove unnecessary use of CodeBlockConfig (#12974),Remove empty CodeBlockConfig elements. These elements are not providing any benefit for the enclosed code blocks. This PR removes the elements so so that the source is easier to read.
2595,internal: port RPC glue changes from Enterprise (#13034),Co-authored-by: R.B. Boyer rb@hashicorp.com
2596,docs: Address comments from admin partitions docs changes around networking requirements (#13035), docs: Address comments from admin partitions changes  Co-authored-by: Blake Covarrubias blake@covarrubi.as
2597,test: ensure this package uses freeport for port allocation (#13036),
2598,Updates to fed docs for 0.43.0 (#13026), Updates to fed docs for 0.43.0 Fix docs for VMs and for auth method
2599,docs: Update Admin Partitions with more explicit commands by using shell variables (#12966), docs: Update Admin Partitions with more explicit commands by using shell variables  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
2600,docs: add section to 1.12 upgrade notes about new TLS config style (#12880),
2601,docs: Fix small errors for node identities and acl-rules (#13016), Fix node identities datacenter description to string type Fix service rules URL anchor
2602,remove remaining shim runStep functions (#13015),Wraps up the refactor from #13013
2603,add general runstep test helper instead of copying it all over the place (#13013),
2604,Document consul_datacenter param. (#13009),
2605,docs: Clarify version restriction for snapshot restore,Clarify that Consul snapshots must be restored into clusters running the same version as the cluster from where the snapshot was taken.
2606,remove replace directive for istio.io/gogo-genproto (#12990),This was added in #7194 and is no longer a transitive dependency.
2607,Merge pull request #12366 from hashicorp/docs/uri-decode-resource-names-for-http-api,Document API ability to URL-decode resource names
2608,Document API ability to URL-decode resource names,"All Consul HTTP API endpoints now URL-decode resource names specified in the path, enabling resource names containing URL-invalid characters to be used in HTTP API requests if URL-encoded into the path. Functionality implemented in Github Pull Requests: - #11335 - #11957 - #12103 - #12190 - #12297 Also documents CLI accepting URL-invalid resource names. All Consul HTTP API endpoints now URL-decode resource names specified in the path, enabling resource names containing URL-invalid characters to be used in HTTP API requests if URL-encoded into the path. The Consul HTTP API always supported URL-decoding of query parameters. The CLI automatically URL-encodes arguments which are inserted as resource names in the URL path, enabling the CLI to also interact with resource names that contain URL-invalid characters."
2609,docs: Fix spelling errors across site (#12973),
2610,Merge pull request #12463 from hashicorp/docs/consistency-mode-improvements,Improve consistency mode docs
2611,docs: clarify consistency mode operation,Changes include: - Add diagrams of the operation of different consistency modes - Note that only stale reads benefit from horizontal scaling - Increase scannability with headings - Document consistency mode defaults and how to override for   DNS and HTTP API interfaces - Document X-Consul-Effective-Consistency response header
2612,add err msg on PeeringRead not found (#12986),Signed-off-by: FFMMM FFMMM@users.noreply.github.com Co-authored-by: Freddy freddygv@users.noreply.github.com
2613,expose meta tags for peering (#12964),
2614,Add some docs on pprof usage (#12551),
2615,Merge pull request #12985 from hashicorp/jkirschner-hashicorp-patch-1,UI: update improve server fault tolerance link
2616,docs: provide option for installing using a specific version via Helm (#12968), docs: provide option for installing using a specific version via Helm  Co-authored-by: Tu Nguyen im2nguyen@users.noreply.github.com
2617,UI: update improve server fault tolerance link,
2618,sync changes to healthcheck tests (#12984),
2619,Create clients with specific version for integration tests (#12978),"  tidy code and add some doc strings   add doc strings to tests   add partitions tests, need to adapt to run in both oss and ent   split oss and enterprise versions   remove parallel tests   add error   fix queryBackend in test   revert unneeded change   fix failing tests "
2620,change mod go version to 1.18 (#12976),  change mod go version to 1.18   fix go.mod format for 1.18 
2621,Merge pull request #12961 from hashicorp/ma/fix-enterprise-version-string-oss,Ma/fix enterprise version string oss
2622,Changelog,Signed-off-by: Mark Anderson manderson@hashicorp.com
2623,Update version/version.go to match enterprise,Signed-off-by: Mark Anderson manderson@hashicorp.com
2624,Add oss test,Signed-off-by: Mark Anderson manderson@hashicorp.com
2625,Fix up enterprise version tag.,"Changes to how the version string was handled created small regression with the release of consul 1.12.0 enterprise. Many tools use the Config:Version field reported by the agent/self resource to determine whether Consul is an enterprise or OSS instance, expect something like 1.12.0+ent for enterprise and simply 1.12.0 for OSS. This was accidentally broken during the runup to 1.12.x This work fixes the value returned by both the self endpoint in [""Config""][""Version""] and the metrics consul.version field. Signed-off-by: Mark Anderson manderson@hashicorp.com"
2626,docs: Redirect /docs/security/acl/acl-system (#12975),"/docs/security/acl/acl-system was renamed in e9a42df from PR #12460 to /docs/security/acl. A corresponding redirect was not added for this page, resulting in a 404 being returned when accessing the old URL path. This commit redirects the former URL path to the new location, and also updates all links on the site to point to the new location."
2627,chore(ci): fix nightly UI test syntaxx,
2628,chore(ci): exempt backport PRs from changelog-checker,
2629,peering: add store.PeeringsForService implementation (#12957),
2630,ci: add nightly action for UI testing release branches,
2631,Merge pull request #12956 from hashicorp/suport-lambda-connect-proxy,Support Invoking Lambdas from Sidecar Proxies
2632,docs: Fix broken links for roles and service identities (#12954),
2633,Support making requests to lambda from connect proxies.,
2634,"api: add PeeeringList, polish (#12934)",
2635,build: speed up linting by 1.5x (#12908),
2636,Update website/content/docs/connect/config-entries/mesh.mdx (#12943),Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com Signed-off-by: Mark Anderson manderson@hashicorp.com Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
2637,docs: Restore agent config docs removed in PR #12562 (#12907), docs: Re-add config file content removed in PR #12562  Re-add agent config option content that was erroneously removed in #12562 with commit f4c03d234.  docs: Re-add CLI flag content removed in PR #12562  Re-add CLI flag content that was erroneously removed in #12562 with commit c5220fd18.  Update website/content/docs/agent/config/cli-flags.mdx  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
2638,Validate port on mesh service registration (#12881),Add validation to ensure connect native services have a port or socketpath specified on catalog registration. This was the only missing piece to ensure all mesh services are validated for a port (or socketpath) specification on catalog registration.
2639,Support vault namespaces in connect CA (#12904)," Support vault namespaces in connect CA  Follow on to some missed items from #12655 From an internal ticket ""Support standard ""Vault namespace in the path"" semantics for Connect Vault CA Provider"" Vault allows the namespace to be specified as a prefix in the path of a PKI definition, but our usage of the Vault API includes calls that don't support a namespaced key. In particular the sys.* family of calls simply appends the key, instead of prefixing the namespace in front of the path. Unfortunately it is difficult to reliably parse a path with a namespace; only vault knows what namespaces are present, and the '/' separator can be inside a key name, as well as separating path elements. This is in use in the wild; for example 'dc1/intermediate-key' is a relatively common naming schema. Instead we add two new fields: RootPKINamespace and IntermediatePKINamespace, which are the absolute namespace paths 'prefixed' in front of the respective PKI Paths. Signed-off-by: Mark Anderson manderson@hashicorp.com"
2640,Default discovery chain when upstream targets a DestinationPeer (#12942),
2641,Merge pull request #12878 from hashicorp/ma/x-forwarded-client-cert,Support x-forwarded-client-cert
2642,fix(ci): use correct variable syntax for build-distros job (#12933),
2643,acl: gRPC login and logout endpoints (#12935),Introduces two new public gRPC endpoints (Login and Logout) and includes refactoring of the equivalent net/rpc endpoints to enable the majority of logic to be reused (i.e. by extracting the Binder and TokenWriter types). This contains the OSS portions of the following enterprise commits:  75fcdbfcfa6af21d7128cb2544829ead0b1df603 bce14b714151af74a7f0110843d640204082630a cc508b70fbf58eda144d9af3d71bd0f483985893
2644,Fix tests for APPEND_FORWARD change,Signed-off-by: Mark Anderson manderson@hashicorp.com
2645,Change to use APPEND_FORWARD for terminating gateway,Signed-off-by: Mark Anderson manderson@hashicorp.com
2646,Update mesh config tests,Signed-off-by: Mark Anderson manderson@hashicorp.com
2647,Docs and changelog edits,Signed-off-by: Mark Anderson manderson@hashicorp.com
2648,Fixup missed config entry,Signed-off-by: Mark Anderson manderson@hashicorp.com
2649,Add some docs,Signed-off-by: Mark Anderson manderson@hashicorp.com
2650,Add x-forwarded-client-cert headers,"Description Add x-fowarded-client-cert information on trusted incoming connections. Envoy provides support forwarding and annotating the x-forwarded-client-cert header via the forward_client_cert_details set_current_client_cert_details filter fields. It would be helpful for consul to support this directly in its config. The escape hatches are a bit cumbersome for this purpose. This has been implemented on incoming connections to envoy. Outgoing (from the local service through the sidecar) will not have a certificate, and so are left alone. A service on an incoming connection will now get headers something like this: X-Forwarded-Client-Cert:[By=spiffe://efad7282-d9b2-3298-f6d8-38b37fb58df3.consul/ns/default/dc/dc1/svc/counting;Hash=61ad5cbdfcb50f5a3ec0ca60923d61613c149a9d4495010a64175c05a0268ab2;Cert=""-----BEGIN%20CERTIFICATE-----%0AMIICHDCCAcOgAwIBAgIBCDAKBggqhkjOPQQDAjAxMS8wLQYDVQQDEyZwcmktMTli%0AYXdyb2YuY29uc3VsLmNhLmVmYWQ3MjgyLmNvbnN1bDAeFw0yMjA0MjkwMzE0NTBa%0AFw0yMjA1MDIwMzE0NTBaMAAwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARVIZ7Y%0AZEXfbOGBfxGa7Vuok1MIng%2FuzLQK2xLVlSTIPDbO5hstTGP%2B%2FGx182PYFP3jYqk5%0Aq6rYWe1wiPNMA30Io4H8MIH5MA4GA1UdDwEB%2FwQEAwIDuDAdBgNVHSUEFjAUBggr%0ABgEFBQcDAgYIKwYBBQUHAwEwDAYDVR0TAQH%2FBAIwADApBgNVHQ4EIgQgrp4q50oX%0AHHghMbxz5Bk8OJFWMdfgH0Upr350WlhyxvkwKwYDVR0jBCQwIoAgUe6uERAIj%2FLM%0AyuFzDc3Wbp9TGAKBJYAwyhF14ToOQCMwYgYDVR0RAQH%2FBFgwVoZUc3BpZmZlOi8v%0AZWZhZDcyODItZDliMi0zMjk4LWY2ZDgtMzhiMzdmYjU4ZGYzLmNvbnN1bC9ucy9k%0AZWZhdWx0L2RjL2RjMS9zdmMvZGFzaGJvYXJkMAoGCCqGSM49BAMCA0cAMEQCIDwb%0AFlchufggNTijnQ5SUcvTZrWlZyq%2FrdVC20nbbmWLAiAVshNNv1xBqJI1NmY2HI9n%0AgRMfb8aEPVSuxEHhqy57eQ%3D%3D%0A-----END%20CERTIFICATE-----%0A"";Chain=""-----BEGIN%20CERTIFICATE-----%0AMIICHDCCAcOgAwIBAgIBCDAKBggqhkjOPQQDAjAxMS8wLQYDVQQDEyZwcmktMTli%0AYXdyb2YuY29uc3VsLmNhLmVmYWQ3MjgyLmNvbnN1bDAeFw0yMjA0MjkwMzE0NTBa%0AFw0yMjA1MDIwMzE0NTBaMAAwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARVIZ7Y%0AZEXfbOGBfxGa7Vuok1MIng%2FuzLQK2xLVlSTIPDbO5hstTGP%2B%2FGx182PYFP3jYqk5%0Aq6rYWe1wiPNMA30Io4H8MIH5MA4GA1UdDwEB%2FwQEAwIDuDAdBgNVHSUEFjAUBggr%0ABgEFBQcDAgYIKwYBBQUHAwEwDAYDVR0TAQH%2FBAIwADApBgNVHQ4EIgQgrp4q50oX%0AHHghMbxz5Bk8OJFWMdfgH0Upr350WlhyxvkwKwYDVR0jBCQwIoAgUe6uERAIj%2FLM%0AyuFzDc3Wbp9TGAKBJYAwyhF14ToOQCMwYgYDVR0RAQH%2FBFgwVoZUc3BpZmZlOi8v%0AZWZhZDcyODItZDliMi0zMjk4LWY2ZDgtMzhiMzdmYjU4ZGYzLmNvbnN1bC9ucy9k%0AZWZhdWx0L2RjL2RjMS9zdmMvZGFzaGJvYXJkMAoGCCqGSM49BAMCA0cAMEQCIDwb%0AFlchufggNTijnQ5SUcvTZrWlZyq%2FrdVC20nbbmWLAiAVshNNv1xBqJI1NmY2HI9n%0AgRMfb8aEPVSuxEHhqy57eQ%3D%3D%0A-----END%20CERTIFICATE-----%0A"";Subject="""";URI=spiffe://efad7282-d9b2-3298-f6d8-38b37fb58df3.consul/ns/default/dc/dc1/svc/dashboard] Closes #12852"
2651,Merge pull request #12917 from hashicorp/add-release-config-key,Add config key to the promote-staging event
2652,Merge pull request #12631 from driesgroblerw/patch-1,Updated the link to acl-policies
2653,chore(ci): fix backport-assistant for stable website,
2654,Merge pull request #12885 from hashicorp/acl-err-cache,Store and return RPC error in ACL cache entries
2655,Return ACLRemoteError from cache and test it correctly,
2656,chore(ci): fix backport assistant,
2657,ci: upgrade bats and the circle machine executors to get integration tests to function again (#12918),Bonus change: send less context when building the test-sds-server to speed up the setup.
2658,Add config key to the promote-staging event,
2659,[sync oss] api: add peering api module (#12911),
2660,docs: Add example Envoy escape hatch configs (#12764),Add example escape hatch configurations for all supported override types.
2661,chore(ci): add initial support for backport assistant,
2662,Merge pull request #12762 from hashicorp/jkirschner-hashicorp-patch-1,docs: use correct previous name of recovery token
2663,peering: Make Upstream peer-aware (#12900),Adds DestinationPeer field to Upstream. Adds Peer field to UpstreamID and its string conversion functions.
2664,Merge pull request #12902 from hashicorp/jkirschner-hashicorp-patch-2,docs: fix typo
2665,docs: fix typo,
2666,Merge pull request #12893 from hashicorp/docs/improve-consul-server-resilience,docs: add guidance on improving Consul resilience
2667,Cleanup peering files that used error types that were removed (#12892),
2668,docs: add guidance on improving Consul resilience,Discuss available strategies for improving server-level and infrastructure-level fault tolerance in Consul.
2669,Merge pull request #12891 from hashicorp/docs-api-gateway-0.2.1,Docs: update for API Gateway v0.2.1
2670,Unify various status errors into one HTTP error type. (#12594),Replaces specific error types for HTTP Status codes with  a generic HTTPError type. Co-authored-by: Chris S. Kim ckim@hashicorp.com
2671,Dcos: update for API Gateway v0.2.1,
2672,Merge pull request #11810 from hashicorp/update-enterprise-packaging-in-feature-docs,Update enterprise packaging in feature docs
2673,docs: improve ent overview headings,
2674,docs: explicitly fill all ent feature matrix cells,
2675,Add a Github action to remind people about backport automation (#12884),
2676,Store and return rpc error in acl cache entries,
2677,Merge pull request #12874 from hashicorp/japple-api-gw-fix-install-doc,Docs: updated versions on install page and other minor fixes.
2678,Docs: updated versions on install page and other minor fixes.,
2679,website(consul-api-gateway): fixup stray div tag and step 8 link rendering (#12873),
2680,Merge pull request #12872 from hashicorp/markdown-fix,docs: fixes makdown leakage
2681,docs: fixes makdown leakage,
2682,docs: update HCP Consul feature matrix,
2683,Merge pull request #12871 from hashicorp/apigw-crd-version,Update version pin for consul-api-gateway install docs
2684,Update version pin for consul-api-gateway CRD install,
2685,Merge pull request #12863 from hashicorp/api-gateway-v0.2-docs,Update product docs for release of Consul API Gateway v0.2
2686,Update minimum Consul version in Tech Specs,
2687,correction to the API Gateway 0.2 release notes.,
2688,Instruct user to update apiGateway.image in values.yaml,
2689,Adding release notes for API Gateway v0.2,
2690,Hide clipboard for codeblocks that shouldn't be copied,
2691,hid copy fn for codeblocks that don't need it,
2692,website(consul-api-gateway): add ReferencePolicy to overview docs (#12861),  website(consul-api-gateway): add ReferencePolicy to overview docs   website(consul-api-gateway): bump required Consul Helm chart version   For allowing Consul API Gateway controller to read ReferencePolicy resources and UX improvement re-using connectInject.consulNamespaces config for Consul API Gateway config.   added referencepolicy documentation to route section   Update website/content/docs/api-gateway/consul-api-gateway-install.mdx   Co-authored-by: Mike Morris mikemorris@users.noreply.github.com  Update website/content/docs/api-gateway/consul-api-gateway-install.mdx  Co-authored-by: Mike Morris mikemorris@users.noreply.github.com  Update website/content/docs/api-gateway/consul-api-gateway-install.mdx  Co-authored-by: Mike Morris mikemorris@users.noreply.github.com  Update website/content/docs/api-gateway/consul-api-gateway-install.mdx  Co-authored-by: Mike Morris mikemorris@users.noreply.github.com  Update website/content/docs/api-gateway/consul-api-gateway-install.mdx  Co-authored-by: Mike Morris mikemorris@users.noreply.github.com   Update consul-api-gateway-install.mdx   Update consul-api-gateway-install.mdx   Update website/content/docs/api-gateway/consul-api-gateway-install.mdx   Co-authored-by: Nathan Coleman nathandanielcoleman@gmail.com  Update website/content/docs/api-gateway/consul-api-gateway-install.mdx  Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com   Update website/content/docs/api-gateway/consul-api-gateway-install.mdx   Update website/content/docs/api-gateway/consul-api-gateway-install.mdx   Update website/content/docs/api-gateway/index.mdx   Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com   Update website/content/docs/api-gateway/index.mdx   Update website/content/docs/api-gateway/index.mdx   Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com Co-authored-by: Sarah Alsmiller sarah.alsmiller@hashicorp.com Co-authored-by: sarahalsmiller 100602640+sarahalsmiller@users.noreply.github.com Co-authored-by: Nathan Coleman nathandanielcoleman@gmail.com Co-authored-by: Jeff Boruszak 104028618+boruszak@users.noreply.github.com
2693,Update website/content/docs/api-gateway/upgrade-specific-versions.mdx,Co-authored-by: Karl Cardenas kcardenas@hashicorp.com
2694,Update website/content/docs/api-gateway/upgrade-specific-versions.mdx,Co-authored-by: Karl Cardenas kcardenas@hashicorp.com
2695,Update website/content/docs/api-gateway/upgrade-specific-versions.mdx,Co-authored-by: Karl Cardenas kcardenas@hashicorp.com
2696,Update website/content/docs/api-gateway/upgrade-specific-versions.mdx,Co-authored-by: Karl Cardenas kcardenas@hashicorp.com
2697,Update website/content/docs/api-gateway/upgrade-specific-versions.mdx,Co-authored-by: Karl Cardenas kcardenas@hashicorp.com
2698,Update consul-api-gateway pin in installation instructions,
2699,Remove Consul pin from installation instructions,"The consul-k8s chart has the correct version defaulted, and having it pinned here is another thing we have to include in all upgrade instructions"
2700,edits to draft of upgrades,
2701,docs: add missing space after ent feature matrix links,
2702,docs: improve enterprise overview page,Move enterprise feature/package matrix back to the overview page. Add descriptions for each enterprise feature that discuss use case.
2703,Upgrade Raft to v1.3.9 for saturation metrics (#12865),
2704,health: ensure /v1/health/service/:service endpoint returns the most recent results when a filter is used with streaming (#12640),"The primary bug here is in the streaming subsystem that makes the overall v1/health/service/:service request behave incorrectly when servicing a blocking request with a filter provided. There is a secondary non-streaming bug being fixed here that is much less obvious related to when to update the reply variable in a blockingQuery evaluation. It is unlikely that it is triggerable in practical environments and I could not actually get the bug to manifest, but I fixed it anyway while investigating the original issue. Simple reproduction (streaming):   Register a service with a tag. curl -sL --request PUT 'http://localhost:8500/v1/agent/service/register' \     --header 'Content-Type: application/json' \     --data-raw '{ ""ID"": ""ID1"", ""Name"": ""test"", ""Tags"":[ ""a"" ], ""EnableTagOverride"": true }'    Do an initial filter query that matches on the tag. curl -sLi --get 'http://localhost:8500/v1/health/service/test' --data-urlencode 'filter=a in Service.Tags'    Note you get one result. Use the X-Consul-Index header to establish    a blocking query in another terminal, this should not return yet. curl -sLi --get 'http://localhost:8500/v1/health/service/test?index=$INDEX' --data-urlencode 'filter=a in Service.Tags'    Re-register that service with a different tag. curl -sL --request PUT 'http://localhost:8500/v1/agent/service/register' \     --header 'Content-Type: application/json' \     --data-raw '{ ""ID"": ""ID1"", ""Name"": ""test"", ""Tags"":[ ""b"" ], ""EnableTagOverride"": true }'    Your blocking query from (3) should return with a header    X-Consul-Query-Backend: streaming and empty results if it works    correctly [].   Attempts to reproduce with non-streaming failed (where you add &near=_agent to the read queries and ensure X-Consul-Query-Backend: blocking-query shows up in the results)."
2705,structs: ensure exported-services PeerName field can be addressed as peer_name (#12862),
2706,docs: create enterprise feature/package matrix,
2707,docs: show features per enterprise package,
2708,add inlinecode blocks to kubernetes object references,
2709,Update website/content/docs/api-gateway/upgrade-specific-versions.mdx,Co-authored-by: Jeff Apple 79924108+Jeff-Apple@users.noreply.github.com
2710,fix upgrade path documentation,
2711,add upgrade path documentation,
2712,Merge pull request #12858 from hashicorp/japple-rel-notes-reorg,Reorganization of the Release Notes on Consul.io
2713,Apply suggestions from code review,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
2714,Merge pull request #12856 from hashicorp/docs-ent-modules,docs: updated connect docs and re-deploying missed changes
2715,Apply suggestions from code review,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
2716,docs: Redirect /agent/config to /agent/config/config-files,Redirect /docs/agent/config to /docs/agent/config/config-files so that external links to anchors for specific config parameters continue to work.
2717,Update website/content/docs/release-notes/consul/v1_9_x.mdx,Co-authored-by: Karl Cardenas kcardenas@hashicorp.com
2718,Update website/content/docs/release-notes/consul/v1_10_x.mdx,Co-authored-by: Karl Cardenas kcardenas@hashicorp.com
2719,Update website/content/docs/release-notes/consul/v1_11_x.mdx,Co-authored-by: Karl Cardenas kcardenas@hashicorp.com
2720,Update website/content/docs/release-notes/consul-ecs/v0_2_x.mdx,Co-authored-by: Karl Cardenas kcardenas@hashicorp.com
2721,Update website/content/docs/release-notes/consul-ecs/v0_3_x.mdx,Co-authored-by: Karl Cardenas kcardenas@hashicorp.com
2722,Update website/content/docs/release-notes/consul-ecs/v0_4_x.mdx,Co-authored-by: Karl Cardenas kcardenas@hashicorp.com
2723,Merge branch 'main' into japple-rel-notes-reorg,
2724,Docs: Release Notes reorg - adding ECS and NIA,
2725,Merge pull request #12857 from hashicorp/add-arm64-workflow,add notarize darwin arm64 workflow
2726,add notarize darwin arm64 workflow,
2727,changelog: snapshot-agent acl token fix for CLI and ENV,
2728,Update annotations-and-labels.mdx (#12768),
2729,docs: updated connect docs and re-deploying missed changes,
2730,try to read license from env and mapped to container (#12854),
2731,Add versions compatibility tests between Consul  (#12702),"  add a sample   Consul cluster test   add build dockerfile   add tests to cover mixed versions tests   use flag to pass docker image name   remove default config and rely on flags to inject the right image to test   add cluster abstraction   fix imports and remove old files   fix imports and remove old files   fix dockerIgnore   make a Node interface and encapsulate ConsulContainer   fix a test bug where we only check the leader against a single node.   add upgrade tests to CI   fix yaml alignment   fix alignment take 2   fix flag naming   fix image to build   fix test run and go mod tidy   add a debug command   run without RYUK   fix parallel run   add skip reaper code   make tempdir in local dir   chmod the temp dir to 0777   chmod the right dir name   change executor to use machine instead of docker   add docker layer caching   remove setup docker   add gotestsum   install go version   use variable for GO installed version   add environment   add environment in the right place   do not disable RYUK in CI   add service check to tests   assertions outside routines   add queryBackend to the api query meta.   check if we are using the right backend  for those tests (streaming)   change the tested endpoint to use one that have streaming.   refactor to test multiple scenarios for streaming   Fix dockerfile   Co-authored-by: FFMMM FFMMM@users.noreply.github.com  rename Clients to clients  Co-authored-by: FFMMM FFMMM@users.noreply.github.com   check if cluster have 0 node   tidy code and add some doc strings   use uuid instead of random string   add doc strings to tests   add queryBackend to the api query meta.   add a changelog   fix for api backend query   add missing require   fix q.QueryBackend   Revert ""fix q.QueryBackend""   This reverts commit cd0e5f7b1a1730e191673d624f8e89b591871c05.   fix circle ci config   tidy go mod after merging main   rename package and fix test scenario   update go download url   address review comments   rename flag in CI   add readme to the upgrade tests   fix golang download url   fix golang arch downloaded   fix AddNodes to handle an empty cluster case   use parseBool   rename circle job and add comment   update testcontainer to 0.13   fix circle ci config   remove build docker file and use make dev-docker instead   Apply suggestions from code review   Co-authored-by: Dan Upton daniel@floppy.co  fix a typo  Co-authored-by: FFMMM FFMMM@users.noreply.github.com Co-authored-by: Dan Upton daniel@floppy.co"
2732,update raft to v1.3.8 (#12844),  update raft to v1.3.7   add changelog   fix compilation error   fix HeartbeatTimeout   fix ElectionTimeout to reload only if value is valid   fix default values for ElectionTimeout and HeartbeatTimeout   fix test defaults   bump raft to v1.3.8 
2733,Update v0_4_x.mdx,
2734,add a general pull request template (#12827),Co-authored-by: Dan Upton daniel@floppy.co
2735,Adding Rel Notes for ECS and moved CTS one.,
2736,Merge pull request #12847 from hashicorp/boruszak-patch-1,Remove references to modules in consul/website/content/docs/enterprise
2737,Update to sentinel.mdx,Removed references to modules in callout box at the top of the page. Edit requested by Neena Pemmaraju via Slack on 4/21/22
2738,Update to redundancy.mdx,Removed references to modules in callout box at the top of the page. Edit requested by Neena Pemmaraju via Slack on 4/21/22
2739,Update to read-scale.mdx,Removed references to modules in callout box at the top of the page. Edit requested by Neena Pemmaraju via Slack on 4/21/22
2740,Update to network-segments.mdx,Removed references to modules in callout box at the top of the page. Edit requested by Neena Pemmaraju via Slack on 4/21/22
2741,Update to namespaces.mdx,Removed references to modules in callout box at the top of the page. Edit requested by Neena Pemmaraju via Slack on 4/21/22
2742,Update to federation.mdx,Removed references to modules in callout box at the top of the page. Edit requested by Neena Pemmaraju via Slack on 4/21/22
2743,Update to audit-logging.mdx,Removed references to modules in callout box at the top of the page. Edit requested by Neena Pemmaraju via Slack on 4/21/22
2744,Merge pull request #12846 from hashicorp/update-metadata-action,change action to pull v1 instead of main
2745,add changelog entry,
2746,Update to admin-partitions.mdx,Removed references to modules in callout box at the top of the page.  Edit requested by Neena Pemmaraju via Slack on 4/21/22
2747,change action to pull v1 instead of main,
2748,Add doc for proposed annotation (#12716),
2749,Add template for consul-k8s release notes.,
2750,peering: initial sync (#12842)," Add endpoints related to peering: read, list, generate token, initiate peering Update node/service/check table indexing to account for peers Foundational changes for pushing service updates to a peer Plumb peer name through Health.ServiceNodes path  see: ENT-1765, ENT-1280, ENT-1283, ENT-1283, ENT-1756, ENT-1739, ENT-1750, ENT-1679,      ENT-1709, ENT-1704, ENT-1690, ENT-1689, ENT-1702, ENT-1701, ENT-1683, ENT-1663,      ENT-1650, ENT-1678, ENT-1628, ENT-1658, ENT-1640, ENT-1637, ENT-1597, ENT-1634,      ENT-1613, ENT-1616, ENT-1617, ENT-1591, ENT-1588, ENT-1596, ENT-1572, ENT-1555 Co-authored-by: R.B. Boyer rb@hashicorp.com Co-authored-by: freddygv freddy@hashicorp.com Co-authored-by: Chris S. Kim ckim@hashicorp.com Co-authored-by: Evan Culver eculver@hashicorp.com Co-authored-by: Nitya Dhanushkodi nitya@hashicorp.com"
2751,Add timeout to Client RPC calls (#11500),"Adds a timeout (deadline) to client RPC calls, so that streams will no longer hang indefinitely in unstable network conditions. Co-authored-by: kisunji ckim@hashicorp.com"
2752,docs: small spelling typo on consul k8s compat matrix (#12840),
2753,docs: update acl token generation with uuidgen (#12821), update acl token generation with uuidgen
2754,docs: Update Consul K8s compatibility matrix (#12829), docs: Update Consul K8s compatibility matrix  Co-authored-by: Karl Cardenas kcardenas@hashicorp.com
2755,Adding documentation for WAN Federation with Vault as a secrets backend (#12802),  Adding documentation for WAN Federation with Vault as a secrets backend   Reformatting systems integration   fixing spacing and typos   Fixing link to createFederactionSecret helm chart value   More revisions in the Systems Integration section   Systems Integration - fixing brok shell-session and adding paragraph.   More formatting in data integration section   Formatting consul config sections   Fixing verbiage near helm installations.   Changing refence to dc1 and dc2 to be primary datacenter(dc1) and secondary dataceneter (dc2)   Apply suggestions from code review   Co-authored-by: Karl Cardenas kcardenas@hashicorp.com Co-authored-by: David Yu dyu@hashicorp.com   fixing missing s in Kubernetes   Providing reason in Usage section as to why someone would look at the Systems and Data Integration sections of the vault docs   fixing highlighted linenumbers that got through off by deleting the comment line at the beginning.   fixing indentation within order lists   Add a validation step to the next steps section.   making the data integration sections for dc1 and dc2 symmetrical   PR Feedback   Adding images   Remove confusing references to Systems Integration and Data Integration pages.   Updating images to be centered   Removed confusing reference to federation secret.   Co-authored-by: Karl Cardenas kcardenas@hashicorp.com Co-authored-by: David Yu dyu@hashicorp.com
2756,Implement the ServerDiscovery.WatchServers gRPC endpoint (#12819), Implement the ServerDiscovery.WatchServers gRPC endpoint Fix the ConnectCA.Sign gRPC endpoints metadata forwarding. Unify public gRPC endpoints around the public.TraceID function for request_id logging
2757,Merge pull request #12839 from hashicorp/ca-page-fix,docs: fixed broken url
2758,docs: fixed broken url,
2759,acl: Clarify node/service identities must be lowercase (#12807),Modify ACL error message for invalid node/service identities names to clearly state only lowercase alphanumeric characters are supported.
2760,Merge pull request #12832 from hashicorp/ma/update_changelog,Update changelog for 1.12.0
2761,chore: upgrade mockery to v2 and regenerate (#12836),
2762,website: remove unnecessary files (#12833),
2763,docs: remove 1.9.x row in Envoy compatibility matrix (#12828),
2764,Update changelog for 1.12.0,Signed-off-by: Mark Anderson manderson@hashicorp.com
2765,Merge pull request #12830 from hashicorp/kisunji/prune-files,Remove unused files
2766,Remove unused files,
2767,ca: fix a bug that caused a non blocking leaf cert query after a blocking leaf cert query to block (#12820),Fixes #12048 Fixes #12319 Regression introduced in #11693 Local reproduction steps: 1. consul agent -dev 2. curl -sLiv 'localhost:8500/v1/agent/connect/ca/leaf/web' 3. make note of the X-Consul-Index header returned  4. curl -sLi 'localhost:8500/v1/agent/connect/ca/leaf/web?index=<VALUE_FROM_STEP_3>' 5. Kill the above curl when it hangs with Ctrl-C 6. Repeat (2) and it should not hang.
2768,Fix spelling for secrurity/acl mdx.,
2769,docs: use correct previous name of recovery token,
2770,[OSS] gRPC call to get envoy bootstrap params (#12825),Adds a new gRPC endpoint to get envoy bootstrap params. The new consul-dataplane service will use this endpoint to generate an envoy bootstrap configuration.
2771,website: remove source code (#12806),
2772,Add event generation for autopilot state updates (#12626),"Whenever autopilot updates its state it notifies Consul. That notification will then trigger Consul to extract out the ready server information. If the ready servers have changed, then an event will be published to notify any subscribers of the full set of ready servers. All these ready server event things are contained within an autopilotevents package instead of the consul package to make importing them into the grpc related packages possible"
2773,Run arm64 builds on go1.18 (#12818),
2774,ui:fixed bug where license was showing in oss (#12795),Co-authored-by: Evan Rowe ev.rowe@gmail.com * fixed bug where license was showing in oss * ui:disable test for license read temporarily
2775,Merge pull request #12815 from hashicorp/ui/fix-renew-license-url,ui: fix overview's renew license link
2776,ui: fix overview's renew license link,
2777,Docs: IAM auth method (#12779), Docs: IAM auth method  Co-authored-by: Karl Cardenas kcardenas@hashicorp.com
2778,"connect: Add Envoy 1.22 to integration tests, remove Envoy 1.18 (#12805)",Co-authored-by: R.B. Boyer rb@hashicorp.com
2779,ui: Add documentation link to the Server Fault Tolerance panel (#12792),
2780,ui: Revert to Services route as default (#12804), ui: Revert to Services route as default ui: update page navigation tests to match routing change
2781,Update go version to 1.18.1,
2782,Merge pull request #12811 from hashicorp/japple-rename-apigw-install-doc,Docs: Rename and re-title docs page for installing Consul API Gateway
2783,Rename and re-title docs page for installing Consul API Gateway,
2784,Merge remote-tracking branch 'origin/main' into japple-rel-notes-reorg,
2785,Initial changes for reoranizing the Release Notes,
2786,Merge pull request #12738 from hashicorp/ui/bugfix/safari-icons,ui: Fixup icons not displaying in Safari
2787,Add an internal env var for managed cluster config in the ui (#12796),
2788,Merge pull request #12799 from hashicorp/redirect-fix,docs: fixed redirect issue
2789,docs: fixed redirect issue,
2790,Merge pull request #12793 from hashicorp/jm/vault-ns-auth,Set vault namespaces on vault client prior to logging in
2791,Fix incorrect severity syslog messages (#12079),Co-authored-by: Evan Culver eculver@hashicorp.com
2792,Update 12793.txt,
2793,Update 12793.txt,
2794,acl: Fix tag parsing for IAM users and roles in IAM auth method (#12797),  acl: Fix tag parsing on IAM users and roles in IAM auth method   Add changelog 
2795,Add changelog,Signed-off-by: Mark Anderson manderson@hashicorp.com
2796,set vault namespaces on vault client prior to logging in with the vault auth method,
2797,"connect: Add Envoy 1.21.1 to support matrix, remove 1.17.4 (#12777)",
2798,add queryBackend to the api query meta. (#12791),  add queryBackend to the api query meta.   add a changelog   use string type instead of int   Apply suggestions from code review   Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com
2799,fixed text color and added card hover states (#12790),
2800,ui: Adds support for AWS-IAM Auth Methods (#12786),  ui: Adds support for AWS-IAM Auth Methods   Changelog 
2801,ui: Only show optimistic details in Ent (#12788),
2802,ConnectCA.Sign gRPC Endpoint (#12787),"Introduces a gRPC endpoint for signing Connect leaf certificates. It's also the first of the public gRPC endpoints to perform leader-forwarding, so establishes the pattern of forwarding over the multiplexed internal RPC port."
2803,Merge pull request #12782 from hashicorp/FFMMM-patch-1,Update latest version on website to 1.11.5
2804,Update latest version on website to 1.11.5,Per the latest release
2805,Merge pull request #12780 from hashicorp/oss-expanded-token-fix,oss: Fix namespace default field names in expanded token output
2806,Fix namespace default field names in expanded token output,
2807,acl: Adjust region handling in AWS IAM auth method (#12774), acl: Adjust region handling in AWS IAM auth method
2808,Merge pull request #12736 from hashicorp/ma/update_vault_version,Update vault to 1.9.4
2809,Merge pull request #12773 from hashicorp/fix-lambda-intentions-and-routing,Implement Routing and Intentions for Lambdas
2810,Implement routing and intentions for AWS Lambdas,
2811,Setting DOCKER_DEFAULT_PLATFORM in make dev-docker so arm64 can build an amd64 containerwith and amd64 binary. (#12769),
2812,add changelog for enterprise bug fix (#12772),
2813,ui: Show read-replica health status (#12758),
2814,ui: Don't automatically move rz read-replicas out of the rz (#12740),
2815,add changelog for enterprise fix (#12761),
2816,Merge pull request #12562 from hashicorp/docs/blake-agent-config,docs: Agent configuration hierarchy reorganization
2817,add docs for new labels (#12757),
2818,deps: update to latest go-discover (#12739),Fixes #11253 $ go mod why -m github.com/dgrijalva/jwt-go # github.com/dgrijalva/jwt-go (main module does not need module github.com/dgrijalva/jwt-go)  $ go mod why -m github.com/form3tech-oss/jwt-go # github.com/form3tech-oss/jwt-go github.com/hashicorp/consul/agent github.com/hashicorp/go-discover github.com/hashicorp/go-discover/provider/azure github.com/Azure/go-autorest/autorest github.com/Azure/go-autorest/autorest/adal github.com/form3tech-oss/jwt-go
2819,add more labels to RequestRecorder (#12727),Co-authored-by: Daniel Nephin dnephin@hashicorp.com Signed-off-by: FFMMM FFMMM@users.noreply.github.com
2820,Correcting an uncapitalized word setup at the beginning of titles to be capitalized in vault section. (#12759),
2821,Move to using a shared EventPublisher (#12673),"Previously we had 1 EventPublisher per state.Store. When a state store was closed/abandoned such as during a consul snapshot restore, this had the behavior of force closing subscriptions for that topic and evicting event snapshots from the cache. The intention of this commit is to keep all that behavior. To that end, the shared EventPublisher now supports the ability to refresh a topic. That will perform the force close + eviction. The FSM upon abandoning the previous state.Store will call RefreshTopic for all the topics with events generated by the state.Store."
2822,ui: Adds licensing overview tab (#12706),  Add some utilities/helpers to temporal for formatting etc   Enable the licensing tab   Add licensing page   Add CSS for licensing page   Fixup typo   Remove box shadow from panel 
2823,Remove .html extensions from docs URLs,
2824,docs: fix yet more references to agent/options,
2825,docs: simplify agent docs slugs,
2826,docs: pr feedback,
2827,chore: rebase updates,
2828,docs: fix external links to agent config pages,
2829,docs: fix agent config links,
2830,docs: arrange agent configuration file parameters into logical groups,
2831,docs: move configuration files content from agent/config/index to agent/config/agent-config-files,
2832,docs: move cli content from agent/config/index to agent/config/agent-config-cli,And add sections for logical groupings of options
2833,docs: move agent/options.mdx into agent/config/index.mdx and add placeholder .mdx files for cli/files,Also update nav data
2834,redirect.js: fixing redirect to new compatibility matrix for k8s (#12755),
2835,website: redirect change consul k8s compatibility matrix link (#12751),
2836,ci: upsize many slow-running circleci builds (#12742),
2837,docs: Upgrade Consul K8s update link to combat matrix (#12744),
2838,fix broken test (#12741),
2839,test: use docker buildkit backend for envoy integration tests (#12726),
2840,ui: Add more explanatory texts for empty states (#12354),"  ui: Add more explanatory texts for empty states   Change all template ""Read the guide""s   Add missing htmlSafe   Remove the stuff I commented out to try and grok the hairy rebase   Changelog   More rebased yaml weirdness plus added node:read "
2841,Fixup any psuedo elements that don't need currentColor,
2842,Fallback icons to currentColor,
2843,Update vault to 1.9.4,"Vault hasn't been updated for a while, and we should be testing against a newer version. I'd update to 1.10.0, but we would run afoul of https://github.com/hashicorp/vault/issues/14863. We should update to 1.10.1 as soon as it comes our, or better yet move to using latest. Signed-off-by: Mark Anderson manderson@hashicorp.com"
2844,Merge pull request #12725 from hashicorp/clarify-service-deregister-after-critical-message,improve error msg for deregister critical service
2845,xds: ensure that all connect timeout configs can apply equally to tproxy direct dial connections (#12711),Just like standard upstreams the order of applicability in descending precedence:  caller's service-defaults upstream override for destination caller's service-defaults upstream defaults destination's service-resolver ConnectTimeout system default of 5s  Co-authored-by: mrspanishviking kcardenas@hashicorp.com
2846,improve error msg for deregister critical service,"If a service is automatically registered because it has a critical health check for longer than deregister_critical_service_after, the error message will now include: - mention of the deregister_critical_service_after option - the value of deregister_critical_service_after for that check"
2847,docs: Updating Gossip EncryptionKey Rotation page with Vault use case (#12720),  docs: Updating Gossip EncryptionKey Rotation page with Vault use case   Adding a note to the vault instructions linking to the gossip key encryption using Vault page.   Correcting Vault guide for storing the rotated gossip key.   adding $ to shell sessions where it is missing on the gossip rotation page   adding $ to more shell sessions where it is missing on the gossip rotation page 
2848,Consul on ECS 0.4.0 (#12694),Update website docs for Consul on ECS 0.4.0
2849,add changelog for rpc metric improv project (#12709),Co-authored-by: Dhia Ayachi dhia@hashicorp.com
2850,Merge pull request #12685 from hashicorp/http-check-redirect-option,Add a field to disable following redirects on http checks
2851,Update k8s docs for Vault as a Secrets Backend (#12691),"  Updating k8s Vault as a Secrets Backend docs   Moving files in data-integration folder   Updating routes to moved files   Removing known limitations since we have delivered them.   Revise overview page to point towards the System Integration and Data Integration pages.   Updating Systems Overview page   Making corrections to Overview and Systems Integration page   Updating Data Integration page   Gossip page   Enterprise Licensepage   Bootstrap Token   Replication Token   Revisions to bootrap, replication, and enterprise license   snapshot agent page.  revisiions to other data integration pages   Consul Service Mesh TLS Provider page   ServerTLS page   Spelling, grammar errors   Update website/content/docs/k8s/installation/vault/index.mdx   Co-authored-by: David Yu dyu@hashicorp.com  Update website/content/docs/k8s/installation/vault/systems-integration.mdx  Co-authored-by: David Yu dyu@hashicorp.com  Update website/content/docs/k8s/installation/vault/systems-integration.mdx  Co-authored-by: David Yu dyu@hashicorp.com  Update website/content/docs/k8s/installation/vault/systems-integration.mdx  Co-authored-by: David Yu dyu@hashicorp.com  Update website/content/docs/k8s/installation/vault/systems-integration.mdx  Co-authored-by: David Yu dyu@hashicorp.com  Update website/content/docs/k8s/installation/vault/data-integration/index.mdx  Co-authored-by: David Yu dyu@hashicorp.com  Update website/content/docs/k8s/installation/vault/data-integration/server-tls.mdx  Co-authored-by: David Yu dyu@hashicorp.com  Update website/content/docs/k8s/installation/vault/data-integration/connect-ca.mdx  Co-authored-by: David Yu dyu@hashicorp.com  Update website/content/docs/k8s/installation/vault/data-integration/gossip.mdx  Co-authored-by: David Yu dyu@hashicorp.com  Update website/content/docs/k8s/installation/vault/data-integration/snapshot-agent-config.mdx  Co-authored-by: David Yu dyu@hashicorp.com  Update website/content/docs/k8s/installation/vault/data-integration/bootstrap-token.mdx  Co-authored-by: David Yu dyu@hashicorp.com  Update website/content/docs/k8s/installation/vault/data-integration/connect-ca.mdx  Co-authored-by: David Yu dyu@hashicorp.com  Update website/content/docs/k8s/installation/vault/data-integration/enterprise-license.mdx  Co-authored-by: David Yu dyu@hashicorp.com  Update website/content/docs/k8s/installation/vault/data-integration/replication-token.mdx  Co-authored-by: David Yu dyu@hashicorp.com  Update website/content/docs/k8s/installation/vault/data-integration/replication-token.mdx  Co-authored-by: David Yu dyu@hashicorp.com   Updating data center to datacenter   Update website/content/docs/k8s/installation/vault/systems-integration.mdx   Co-authored-by: David Yu dyu@hashicorp.com  Update website/content/docs/k8s/installation/vault/systems-integration.mdx  Co-authored-by: David Yu dyu@hashicorp.com   interim changes   more formatting changes   adding additional formatting changes   more formatting on systems integration page   remove TODO   Update website/content/docs/k8s/installation/vault/systems-integration.mdx   Co-authored-by: David Yu dyu@hashicorp.com  Update website/content/docs/k8s/installation/vault/index.mdx  Co-authored-by: Iryna Shustava ishustava@users.noreply.github.com  Update website/content/docs/k8s/installation/vault/index.mdx  Co-authored-by: Iryna Shustava ishustava@users.noreply.github.com  Update website/content/docs/k8s/installation/vault/systems-integration.mdx  Co-authored-by: Iryna Shustava ishustava@users.noreply.github.com  Update website/content/docs/k8s/installation/vault/systems-integration.mdx  Co-authored-by: Iryna Shustava ishustava@users.noreply.github.com  Update website/content/docs/k8s/installation/vault/systems-integration.mdx  Co-authored-by: Iryna Shustava ishustava@users.noreply.github.com  Update website/content/docs/k8s/installation/vault/systems-integration.mdx  Co-authored-by: Iryna Shustava ishustava@users.noreply.github.com  Update website/content/docs/k8s/installation/vault/systems-integration.mdx  Co-authored-by: Iryna Shustava ishustava@users.noreply.github.com  Update website/content/docs/k8s/installation/vault/systems-integration.mdx  Co-authored-by: Iryna Shustava ishustava@users.noreply.github.com  Update website/content/docs/k8s/installation/vault/systems-integration.mdx  Co-authored-by: Iryna Shustava ishustava@users.noreply.github.com  Update website/content/docs/k8s/installation/vault/systems-integration.mdx  Co-authored-by: Iryna Shustava ishustava@users.noreply.github.com  Update website/content/docs/k8s/installation/vault/systems-integration.mdx  Co-authored-by: Iryna Shustava ishustava@users.noreply.github.com  Update website/content/docs/k8s/installation/vault/systems-integration.mdx  Co-authored-by: Iryna Shustava ishustava@users.noreply.github.com   Adding partition token   removing dangling word   Adding missing navlink for partitions page   Adding VAULT_TOKEN documentation and a note to VAULT_ADDR about https and the possible need for the VAULT_CACERT.   Fixing broken links and ordering lists   Fixing broken links.  Changing pre-requisites to prerequisites.   Co-authored-by: David Yu dyu@hashicorp.com Co-authored-by: Iryna Shustava ishustava@users.noreply.github.com"
2852,ci: run envoy integration tests on a real machine (#12715),
2853,Enable running autopilot state updates on all servers (#12617),  Fixes a lint warning about t.Errorf not supporting %w   Enable running autopilot on all servers   On the non-leader servers all they do is update the state and do not attempt any modifications.  Fix the RPC conn limiting tests  Technically they were relying on racey behavior before. Now they should be reliable.
2854,ui: Ignore Service/Node permissions for Overview just use operator (#12693),
2855,ui: Amend UI branching docs (#12705),
2856,Merge pull request #12698 from hashicorp/ma/backport-1.12-info,"Update branch list for 1.12, remove 1.8"
2857,k8s docs - ACLs refactor - Updating terminating gateway documentation to call out updating the role rather than the token with the policy (#12612),  k8s docs - ACLs refactor - Updating terminating gateway documentation to call out updating the role rather than the token with the policy   Modifying role and policy names based on naming convention change. 
2858,"[rpc/middleware][consul] plumb intercept off, add server level happy test (#12692)",
2859,lower log to trace (#12708),
2860,Update branch list,Signed-off-by: Mark Anderson manderson@hashicorp.com
2861,Merge pull request #12621 from hashicorp/ma/move-enterprise-meta-oss,Move EnterpriseMeta to acl package
2862,Add a field to disable following redirects on http checks,
2863,Fixup acl.EnterpriseMeta,Signed-off-by: Mark Anderson manderson@hashicorp.com
2864,Fixup script 2,Signed-off-by: Mark Anderson manderson@hashicorp.com
2865,SQ FIX,Signed-off-by: Mark Anderson manderson@hashicorp.com
2866,Add script (REMOVE LATER),' Signed-off-by: Mark Anderson manderson@hashicorp.com
2867,Manual Structs fixup,Change things by hand that I couldn't figure out how to automate Signed-off-by: Mark Anderson manderson@hashicorp.com
2868,add new entmeta stuff.,Signed-off-by: Mark Anderson manderson@hashicorp.com
2869,build: remove unused tools from being installed (#12671),
2870,syncing changes back from enterprise (#12701),
2871,Creating a changelog entry for #12565 (#12699),
2872,Merge pull request #12695 from hashicorp/feature-negotiation-grpc-api-oss,[OSS] Supported dataplane features gRPC endpoint
2873,routine: fix that acl stops replicating after regaining leadership (#12295) (#12565),  routine: fix that acl stops replicating after regaining leadership (#12295)   routine: add TestManager_StopBlocking (#12295)   routine: update TestManager_StopBlocking (#12295) 
2874,ca: move ConnectCA.Sign authorization logic to CAManager (#12609),OSS sync of enterprise changes at 8d6fd125
2875,Merge pull request #12672 from hashicorp/tgate-san-validation,Respect SNI with terminating gateways and log a warning if it isn't set alongside TLS
2876,build: conditionally install or reinstall protobuf supporting tools as needed (#12674),
2877,website: fix usages of img tag (#12696),
2878,Update .changelog/12695.txt,Co-authored-by: Matt Keeler mkeeler@users.noreply.github.com
2879,docs: rename Connect Service Mesh Kubernetes to Consul Service Mesh on Kubernetes (#12690), docs:rename Connect Service Mesh Kubernetes to Consul Service Mesh on Kubernetes
2880,Add changelog,
2881,[OSS] Supported dataplane features gRPC endpoint,Adds a new gRPC service and endpoint to return the list of supported consul dataplane features. The Consul Dataplane will use this API to customize its interaction with that particular server.
2882,WatchRoots gRPC endpoint (#12678),Adds a new gRPC streaming endpoint (WatchRoots) that dataplane clients will use to fetch the current list of active Connect CA roots and receive new lists whenever the roots are rotated.
2883,Update Helm docs to reflect 0.42.0 release (#12689), Update Helm docs to reflect 0.42.0 release  Co-authored-by: mrspanishviking kcardenas@hashicorp.com Co-authored-by: David Yu dyu@hashicorp.com Co-authored-by: mrspanishviking kcardenas@hashicorp.com
2884,docs: Update links to K8s service mesh annotations (#12652),The list of supported annotations for Consul service mesh were moved from /docs/k8s/connect to /docs/k8s/annotations-and-labels in PR 12323. This commit updates various across the site to point to the new URL for these annotations.
2885,Merge pull request #12687 from hashicorp/acl-fix,docs: fixes broken url in acl overview page
2886,Updating helm docs with additionalVault and ACLs refactor functionality. (#12669),  Updating helm docs with additionalVault and ACLs refactor funtionality.   PR Feedback corrections.   Fix indentation.  Fix description of secretName and secretKey to be consistent Change description of manageACLsRole to be more clear.  Make the added vault role field descriptions consistent   PR Feedback - correcting description for adminPartitionsRole   Fixing broken shell sessions   Fixing broken shell sessions by changing shell-session tobecloser tocomment marker 
2887,docs: fixes broken url in acl overview page,
2888,documentation for config auto reload feature (#12548),"  add config watcher to the config package   add logging to watcher   add test and refactor to add WatcherEvent.   add all API calls and fix a bug with recreated files   add tests for watcher   remove the unnecessary use of context   Add debug log and a test for file rename   use inode to detect if the file is recreated/replaced and only listen to create events.   tidy ups (#1535)   tidy ups   Add tests for inode reconcile   fix linux vs windows syscall   fix linux vs windows syscall   fix windows compile error   increase timeout   use ctime ID   remove remove/creation test as it's a use case that fail in linux   fix linux/windows to use Ino/CreationTime   fix the watcher to only overwrite current file id   fix linter error   fix remove/create test   set reconcile loop to 200 Milliseconds   fix watcher to not trigger event on remove, add more tests   on a remove event try to add the file back to the watcher and trigger the handler if success   fix race condition   fix flaky test   fix race conditions   set level to info   fix when file is removed and get an event for it after   fix to trigger handler when we get a remove but re-add fail   fix error message   add tests for directory watch and fixes   detect if a file is a symlink and return an error on Add   rename Watcher to FileWatcher and remove symlink deref   add fsnotify@v1.5.1   fix go mod   do not reset timer on errors, rename OS specific files   rename New func   events trigger on write and rename   add missing test   fix flaking tests   fix flaky test   check reconcile when removed   delete invalid file   fix test to create files with different mod time.   back date file instead of sleeping   add watching file in agent command.   fix watcher call to use new API   add configuration and stop watcher when server stop   add certs as watched files   move FileWatcher to the agent start instead of the command code   stop watcher before replacing it   save watched files in agent   add add and remove interfaces to the file watcher   fix remove to not return an error   use Add and Remove to update certs files   fix tests   close events channel on the file watcher even when the context is done   extract NotAutoReloadableRuntimeConfig is a separate struct   fix linter errors   add Ca configs and outgoing verify to the not auto reloadable config   add some logs and fix to use background context   add tests to auto-config reload   remove stale test   add tests to changes to config files   add check to see if old cert files still trigger updates   rename NotAutoReloadableRuntimeConfig to StaticRuntimeConfig   fix to re add both key and cert file. Add test to cover this case.   review suggestion   Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com   add check to static runtime config changes   fix test   add changelog file   fix review comments   Apply suggestions from code review   Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com  update flag description  Co-authored-by: FFMMM FFMMM@users.noreply.github.com   fix compilation error   add static runtime config support   fix test   fix review comments   fix log test   Update .changelog/12329.txt   Co-authored-by: Dan Upton daniel@floppy.co   transfer tests to runtime_test.go   fix filewatcher Replace to not deadlock.   avoid having lingering locks   Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com   split ReloadConfig func   fix warning message   Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com   convert FileWatcher into an interface   fix compilation errors   fix tests   extract func for adding and removing files   add a coalesceTimer with a very small timer   extract coaelsce Timer and add a shim for testing   add tests to coalesceTimer fix to send remaining events   set coalesceTimer to 1 Second   support symlink, fix a nil deref.   fix compile error   fix compile error   refactor file watcher rate limiting to be a Watcher implementation   fix linter issue   fix runtime config   fix runtime test   fix flaky tests   fix compile error   Apply suggestions from code review   Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com   fix agent New to return an error if File watcher New return an error   add a coalesceTimer with a very small timer   extract coaelsce Timer and add a shim for testing   set coalesceTimer to 1 Second   add flag description to agent command docs   fix link   add Static runtime config docs   fix links and alignment   fix typo   Revert ""add a coalesceTimer with a very small timer""   This reverts commit d9db2fcb8213a81ac761f04b458091409c5fb1ee.  Revert ""extract coaelsce Timer and add a shim for testing""  This reverts commit 0ab86012a415ffeb452acf58e52c9f37c9f49254.  Apply suggestions from code review  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com Co-authored-by: Ashwin Venkatesh ashwin@hashicorp.com Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com Co-authored-by: FFMMM FFMMM@users.noreply.github.com Co-authored-by: Daniel Upton daniel@floppy.co Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com"
2889,add a rate limiter to config auto-reload (#12490),"  add config watcher to the config package   add logging to watcher   add test and refactor to add WatcherEvent.   add all API calls and fix a bug with recreated files   add tests for watcher   remove the unnecessary use of context   Add debug log and a test for file rename   use inode to detect if the file is recreated/replaced and only listen to create events.   tidy ups (#1535)   tidy ups   Add tests for inode reconcile   fix linux vs windows syscall   fix linux vs windows syscall   fix windows compile error   increase timeout   use ctime ID   remove remove/creation test as it's a use case that fail in linux   fix linux/windows to use Ino/CreationTime   fix the watcher to only overwrite current file id   fix linter error   fix remove/create test   set reconcile loop to 200 Milliseconds   fix watcher to not trigger event on remove, add more tests   on a remove event try to add the file back to the watcher and trigger the handler if success   fix race condition   fix flaky test   fix race conditions   set level to info   fix when file is removed and get an event for it after   fix to trigger handler when we get a remove but re-add fail   fix error message   add tests for directory watch and fixes   detect if a file is a symlink and return an error on Add   rename Watcher to FileWatcher and remove symlink deref   add fsnotify@v1.5.1   fix go mod   do not reset timer on errors, rename OS specific files   rename New func   events trigger on write and rename   add missing test   fix flaking tests   fix flaky test   check reconcile when removed   delete invalid file   fix test to create files with different mod time.   back date file instead of sleeping   add watching file in agent command.   fix watcher call to use new API   add configuration and stop watcher when server stop   add certs as watched files   move FileWatcher to the agent start instead of the command code   stop watcher before replacing it   save watched files in agent   add add and remove interfaces to the file watcher   fix remove to not return an error   use Add and Remove to update certs files   fix tests   close events channel on the file watcher even when the context is done   extract NotAutoReloadableRuntimeConfig is a separate struct   fix linter errors   add Ca configs and outgoing verify to the not auto reloadable config   add some logs and fix to use background context   add tests to auto-config reload   remove stale test   add tests to changes to config files   add check to see if old cert files still trigger updates   rename NotAutoReloadableRuntimeConfig to StaticRuntimeConfig   fix to re add both key and cert file. Add test to cover this case.   review suggestion   Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com   add check to static runtime config changes   fix test   add changelog file   fix review comments   Apply suggestions from code review   Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com  update flag description  Co-authored-by: FFMMM FFMMM@users.noreply.github.com   fix compilation error   add static runtime config support   fix test   fix review comments   fix log test   Update .changelog/12329.txt   Co-authored-by: Dan Upton daniel@floppy.co   transfer tests to runtime_test.go   fix filewatcher Replace to not deadlock.   avoid having lingering locks   Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com   split ReloadConfig func   fix warning message   Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com   convert FileWatcher into an interface   fix compilation errors   fix tests   extract func for adding and removing files   add a coalesceTimer with a very small timer   extract coaelsce Timer and add a shim for testing   add tests to coalesceTimer fix to send remaining events   set coalesceTimer to 1 Second   support symlink, fix a nil deref.   fix compile error   fix compile error   refactor file watcher rate limiting to be a Watcher implementation   fix linter issue   fix runtime config   fix runtime test   fix flaky tests   fix compile error   Apply suggestions from code review   Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com   fix agent New to return an error if File watcher New return an error   quit timer loop if ctx is canceled   Apply suggestions from code review   Co-authored-by: Chris S. Kim ckim@hashicorp.com Co-authored-by: Ashwin Venkatesh ashwin@hashicorp.com Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com Co-authored-by: FFMMM FFMMM@users.noreply.github.com Co-authored-by: Daniel Upton daniel@floppy.co Co-authored-by: Chris S. Kim ckim@hashicorp.com"
2890,ui: Initial Server Status Overview Page (#12599),
2891,Merge pull request #12681 from hashicorp/lambda-patching-tweaks,Tweak the Lambda Envoy configuration generated by the serverless patcher
2892,"mark disable_compat_1.9 to deprecate in 1.13, change default to true (#12675)",Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com
2893,xds: errors from the xds serverless plugin are fatal (#12682),
2894,Tweak the Lambda Envoy configuration generated by the serverless patcher, Move from strip_matching_host_port to strip_any_host_port Remove auto_host_rewrite since it conflicts with strip_any_host_port
2895,Merge pull request #12680 from hashicorp/fix-k8s-dns-service-name,Fix the Kubernetes service name for DNS
2896,Fix the Kubernetes service name for DNS,
2897,Merge pull request #12676 from hashicorp/implement-lambda-patching,Implement Lambda Patching in the Serverless Plugin
2898,Avoid using sys/mounts to enable namespaces (#12655)," Avoid doing list of /sys/mounts  From an internal ticket ""Support standard ""Vault namespace in the path"" semantics for Connect Vault CA Provider"" Vault allows the namespace to be specified as a prefix in the path of a PKI definition, but this doesn't currently work for IntermediatePKIPath specifications, because we attempt to list all of the paths to check if ours is already defined. This doesn't really work in a namespaced world. This changes the IntermediatePKIPath code to follow the same pattern as the root key, where we directly get the key rather than listing. This code is difficult to write automated tests for because it relies on features of Vault Enterprise, which isn't currently part of our test framework, so it was tested manually. Signed-off-by: Mark Anderson manderson@hashicorp.com  add changelog  Signed-off-by: Mark Anderson manderson@hashicorp.com"
2899,Merge pull request #12677 from hashicorp/expanded-token-read-docs,docs: Add examples for expanded token read CLI and API
2900,Add doc examples for expanded token read CLI and API,
2901,Add changelog note,
2902,Use the GatewayService SNI field for upstream SAN validation,
2903,Implement Lambda Patching in the Serverless Plugin,
2904,docs: new rpc metric (#12608),
2905,Merge pull request #12670 from hashicorp/token-read-expanded,oss: Add expanded token read flag and endpoint option
2906,Recommend SNI with TLS in the terminating gateway docs,
2907,Log a warning when a terminating gateway service has TLS but not SNI configured,
2908,auto-reload configuration when config files change (#12329),"  add config watcher to the config package   add logging to watcher   add test and refactor to add WatcherEvent.   add all API calls and fix a bug with recreated files   add tests for watcher   remove the unnecessary use of context   Add debug log and a test for file rename   use inode to detect if the file is recreated/replaced and only listen to create events.   tidy ups (#1535)   tidy ups   Add tests for inode reconcile   fix linux vs windows syscall   fix linux vs windows syscall   fix windows compile error   increase timeout   use ctime ID   remove remove/creation test as it's a use case that fail in linux   fix linux/windows to use Ino/CreationTime   fix the watcher to only overwrite current file id   fix linter error   fix remove/create test   set reconcile loop to 200 Milliseconds   fix watcher to not trigger event on remove, add more tests   on a remove event try to add the file back to the watcher and trigger the handler if success   fix race condition   fix flaky test   fix race conditions   set level to info   fix when file is removed and get an event for it after   fix to trigger handler when we get a remove but re-add fail   fix error message   add tests for directory watch and fixes   detect if a file is a symlink and return an error on Add   rename Watcher to FileWatcher and remove symlink deref   add fsnotify@v1.5.1   fix go mod   do not reset timer on errors, rename OS specific files   rename New func   events trigger on write and rename   add missing test   fix flaking tests   fix flaky test   check reconcile when removed   delete invalid file   fix test to create files with different mod time.   back date file instead of sleeping   add watching file in agent command.   fix watcher call to use new API   add configuration and stop watcher when server stop   add certs as watched files   move FileWatcher to the agent start instead of the command code   stop watcher before replacing it   save watched files in agent   add add and remove interfaces to the file watcher   fix remove to not return an error   use Add and Remove to update certs files   fix tests   close events channel on the file watcher even when the context is done   extract NotAutoReloadableRuntimeConfig is a separate struct   fix linter errors   add Ca configs and outgoing verify to the not auto reloadable config   add some logs and fix to use background context   add tests to auto-config reload   remove stale test   add tests to changes to config files   add check to see if old cert files still trigger updates   rename NotAutoReloadableRuntimeConfig to StaticRuntimeConfig   fix to re add both key and cert file. Add test to cover this case.   review suggestion   Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com   add check to static runtime config changes   fix test   add changelog file   fix review comments   Apply suggestions from code review   Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com  update flag description  Co-authored-by: FFMMM FFMMM@users.noreply.github.com   fix compilation error   add static runtime config support   fix test   fix review comments   fix log test   Update .changelog/12329.txt   Co-authored-by: Dan Upton daniel@floppy.co   transfer tests to runtime_test.go   fix filewatcher Replace to not deadlock.   avoid having lingering locks   Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com   split ReloadConfig func   fix warning message   Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com   convert FileWatcher into an interface   fix compilation errors   fix tests   extract func for adding and removing files   Co-authored-by: Ashwin Venkatesh ashwin@hashicorp.com Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com Co-authored-by: FFMMM FFMMM@users.noreply.github.com Co-authored-by: Daniel Upton daniel@floppy.co"
2909,build: run mog separately after the protobufs are generated (#12665),Also ensure that we run mog serially on each package in dependency order.
2910,Add expanded token read flag and endpoint option,
2911,polish rpc.service.call metric behavior (#12624),
2912,Add IAM Auth Method (#12583),This adds an aws-iam auth method type which supports authenticating to Consul using AWS IAM identities. Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com
2913,website: redirect /api to /api-docs (#12660),
2914,website(api-gateway): add common errors page (#12643),  Adding common errors page for API Gateway   website(api-gateway): add missing CRDs common error message   Update website/content/docs/api-gateway/common-errors.mdx   Co-authored-by: Nathan Coleman nathandanielcoleman@gmail.com  Update website/content/docs/api-gateway/common-errors.mdx  Co-authored-by: Nathan Coleman nathandanielcoleman@gmail.com  Update website/content/docs/api-gateway/common-errors.mdx  Co-authored-by: Nathan Coleman nathandanielcoleman@gmail.com   Update website/content/docs/api-gateway/common-errors.mdx   Additional page editing instructions and formating   Update website/content/docs/api-gateway/common-errors.mdx   Update website/content/docs/api-gateway/common-errors.mdx   Update website/content/docs/api-gateway/common-errors.mdx   Update website/content/docs/api-gateway/common-errors.mdx   Update website/content/docs/api-gateway/common-errors.mdx   Co-authored-by: mrspanishviking kcardenas@hashicorp.com  Apply suggestions from code review  Co-authored-by: Jeff-Apple 79924108+Jeff-Apple@users.noreply.github.com Co-authored-by: Nathan Coleman nathandanielcoleman@gmail.com Co-authored-by: mrspanishviking kcardenas@hashicorp.com
2915,Merge pull request #12659 from hashicorp/bump-go-control-plane,Bump Go Control Plane
2916,xds: adding control of the mesh-wide min/max TLS versions and cipher suites from the mesh config entry (#12601),  tls.incoming: applies to the inbound mTLS targeting the public   listener on connect-proxy and terminating-gateway envoy instances   tls.outgoing: applies to the outbound mTLS dialing upstreams from   connect-proxy and ingress-gateway envoy instances   Fixes #11966
2917,similar bump,
2918,fail on error and use ptypes.MarshalAny for now instead of anypb.New,
2919,Bump go-control-plane, go get cloud.google.com/go@v0.59.0 go get github.com/envoyproxy/go-control-plane@v0.9.9 make envoy-library Bumpprotoc to 3.15.8
2920,Update raft-boltdb to pull in new writeCapacity metric (#12646),
2921,need two dollar signs for a shell variable in makefiles (#12657),
2922,build: auto install correct version of protoc locally (#12651),
2923,server: ensure that service-defaults meta is incorporated into the discovery chain response (#12511),"Also add a new ""Default"" field to the discovery chain response to clients"
2924,introduce EmptyReadRequest for status_endpoint (#12653),Co-authored-by: Daniel Nephin dnephin@hashicorp.com
2925,website(api-gateway): add consul namespace to helm install (#12644), website: api-gateway helm install consul namespace  To mirror instructions at https://learn.hashicorp.com/tutorials/consul/kubernetes-api-gateway   website(api-gateway): add notes on where to find available versions   website(api-gateway): fixup link to more clearly indicate Consul Helm chart releases   Update website/content/docs/api-gateway/api-gateway-usage.mdx 
2926,build: install mog and execute it during protobuf compilation (#12647), also import replace isn't needed anymore
2927,remove DualStack field from check TCP #12629 (#12630),
2928,add missing line from prototest.AssertDeepEqual (#12645),
2929,build: enforce protoc binary is the expected version (#12641),
2930,Merge pull request #12639 from hashicorp/gogo-away,Remove the Rest of Gogo
2931,code review changes,
2932,remove the rest of gogo,
2933,Merge pull request #12638 from hashicorp/remove-gogo-from-acls,Remove gogo from ACL Protobufs
2934,[RelAPI Onboarding] Add release API metadata file (#12591),
2935,remove gogo from acl protobufs,
2936,proto-gen-rpc-glue: support QueryMeta and QueryOptions (#12637),
2937,proto-gen-rpc-glue: use a shallow copy of proto/pbcommon instead of a consul dependency (#12634),
2938,Fix leaked Vault LifetimeRenewers (#12607), Fix leaked Vault LifetimeRenewers  When the Vault CA Provider is reconfigured we do not stop the LifetimeRenewers which can cause them to leak until the Consul processes recycles. On Configure execute stopWatcher if it exists and is not nil before starting a new renewal  Add jitter before restarting the LifetimeWatcher  If we fail to login to Vault or our token is no longer valid we can overwhelm a Vault instance with many requests very quickly by restarting the LifetimeWatcher. Before restarting the LifetimeWatcher provide a backoff time of 1 second or less.   Use a retry.Waiter instead of RandomStagger   changelog   gofmt'd   Swap out bool for atomic.Unit32 in test   Provide some extra clarification in comment and changelog 
2939,Merge pull request #12632 from hashicorp/kisunji-patch-1,Add example of goimports -local to contributing docs
2940,proto-gen-rpc-glue: fix behavior of renamed fields (#12633),
2941,Add example of goimports -local,
2942,Updated the link to acl-policies,https://www.consul.io/docs/security/acl was pointing to https://www.consul.io/docs/security/acl/policies (broken) and is now pointing to https://www.consul.io/docs/security/acl/acl-policies (working)
2943,Fix logic for website checker (#12627),Workflow should run when no docs/cherry-pick label && no pr/docs-label
2944,Merge pull request #12595 from hashicorp/k8s-cli-install,docs: add link to k8s cli install page
2945,regenerate rpc glue stubs in protobuf files using comments (#12625),
2946,Update consul-enterprise.mdx (#12622),
2947,Fixups for error messages from ACL Errors (#12620),"Fixups for error messages from ACL Errors Alter error messages to be more verbose and explanatory, something like: Permission denied: token with AccessorID '8a2d52a0-6b41-7077-8374-09d4fafa2d30 ' lacks permission 'service:read' on ""foobar"" on ""foobar"" in partition ""foo"" in namespace ""bar"" Signed-off-by: Mark Anderson manderson@hashicorp.com"
2948,Merge pull request #12616 from hashicorp/more-gogo-removal,Assorted changes required to remove gogo
2949,assorted changes required to remove gogo,
2950,"fix bad oss sync, use gauges not counters (#12611)",
2951,Merge pull request #12596 from hashicorp/overview-endpoint,oss: Add overview UI internal endpoint
2952,agent: convert listener config to TLS types (#12522)," tlsutil: initial implementation of types/TLSVersion  tlsutil: add test for parsing deprecated agent TLS version strings tlsutil: return TLSVersionInvalid with error tlsutil: start moving tlsutil cipher suite lookups over to types/tls tlsutil: rename tlsLookup to ParseTLSVersion, add cipherSuiteLookup agent: attempt to use types in runtime config agent: implement b.tlsVersion validation in config builder agent: fix tlsVersion nil check in builder tlsutil: update to renamed ParseTLSVersion and goTLSVersions tlsutil: fixup TestConfigurator_CommonTLSConfigTLSMinVersion tlsutil: disable invalid config parsing tests tlsutil: update tests auto_config: lookup old config strings from base.TLSMinVersion auto_config: update endpoint tests to use TLS types agent: update runtime_test to use TLS types agent: update TestRuntimeCinfig_Sanitize.golden agent: update config runtime tests to expect TLS types   website: update Consul agent tls_min_version values   agent: fixup TLS parsing and compilation errors   test: fixup lint issues in agent/config_runtime_test and tlsutil/config_test   tlsutil: add CHACHA20_POLY1305 cipher suites to goTLSCipherSuites   test: revert autoconfig tls min version fixtures to old format   types: add TLSVersions public function   agent: add warning for deprecated TLS version strings   agent: move agent config specific logic from tlsutil.ParseTLSVersion into agent config builder   tlsutil(BREAKING): change default TLS min version to TLS 1.2   agent: move ParseCiphers logic from tlsutil into agent config builder   tlsutil: remove unused CipherString function   agent: fixup import for types package   Revert ""tlsutil: remove unused CipherString function""   This reverts commit 6ca7f6f58d268e617501b7db9500113c13bae70c.   agent: fixup config builder and runtime tests   tlsutil: fixup one remaining ListenerConfig -> ProtocolConfig   test: move TLS cipher suites parsing test from tlsutil into agent config builder tests   agent: remove parseCiphers helper from auto_config_endpoint_test   test: remove unused imports from tlsutil   agent: remove resolved FIXME comment   tlsutil: remove TODO and FIXME in cipher suite validation   agent: prevent setting inherited cipher suite config when TLS 1.3 is specified   changelog: add entry for converting agent config to TLS types   agent: remove FIXME in runtime test, this is covered in builder tests with invalid tls9 value now   tlsutil: remove config tests for values checked at agent config builder boundary   tlsutil: remove tls version check from loadProtocolConfig   tlsutil: remove tests and TODOs for logic checked in TestBuilder_tlsVersion and TestBuilder_tlsCipherSuites   website: update search link for supported Consul agent cipher suites   website: apply review suggestions for tls_min_version description   website: attempt to clean up markdown list formatting for tls_min_version   website: moar linebreaks to fix tls_min_version formatting   Revert ""website: moar linebreaks to fix tls_min_version formatting""   This reverts commit 38585927422f73ebf838a7663e566ac245f2a75c.   autoconfig: translate old values for TLSMinVersion   agent: rename var for translated value of deprecated TLS version value   Update agent/config/deprecated.go   Co-authored-by: Dan Upton daniel@floppy.co   agent: fix lint issue   agent: fixup deprecated config test assertions for updated warning   Co-authored-by: Dan Upton daniel@floppy.co"
2953,Sort by partition/ns/servicename instead of the reverse,
2954,remove Telemetry.MergeDefaults (#12606),Signed-off-by: FFMMM FFMMM@users.noreply.github.com
2955,Merge pull request #12610 from hashicorp/agentless-rpc-acl-support,[oss] ACL pkg updates to support Agentless RPCs
2956,ACL pkg updates to support Agentless RPCs,"For many of the new RPCs that will be added in Consul servers for Agentless work, the ACL token will need to be authorized for service:write on any service in any namespace in any partition. The ACL package updates are to make ServiceWriteAny related helpers available on the different authorizers."
2957,[metrics][rpc]: add basic prefix filter test for new rpc metric (#12598),Signed-off-by: FFMMM FFMMM@users.noreply.github.com
2958,Clean up ent meta id usage in overview summary,
2959,Merge pull request #12603 from hashicorp/remove-gogo-pbservice,Remove gogo from pbservice
2960,Merge pull request #12602 from hashicorp/jkirschner-hashicorp-patch-1,docs: make gossip threat model more visible
2961,Lkysow/docs updates 2 (#12604), Document intermediate_cert_ttl
2962,remove gogo from pbservice,
2963,docs: make gossip threat model more visible,
2964,Merge pull request #12600 from hashicorp/remove-gogo-pbconnect,"Remove gogo pbconnect, pbconfig and pbautoconf"
2965,"remove gogo pbconnect, pbconfig and pbautoconf",
2966,ui: Tile CSS component (#12570),  ui: Tile CSS component   ui: Consul ServerCard component (#12576) 
2967,Merge pull request #12597 from hashicorp/ma/fix-bad-test,Fixup dropped SecretID usage
2968,Fixup dropped SecretID usage,"Looks like something got munged at some point. Not sure how it slipped in, but my best guess is that because TestTxn_Apply_ACLDeny is marked flaky we didn't block merge because it failed. Signed-off-by: Mark Anderson manderson@hashicorp.com"
2969,oss: Add overview UI internal endpoint,
2970,docs: removed the word page,
2971,docs: add link to k8s cli install page,
2972,Merge pull request #12523 from Petenerd/patch-1,Update install.mdx
2973,split  pbcommon to pbcommon and pbcommongogo (#12587),  mogify needed pbcommon structs   mogify needed pbconnect structs   fix compilation errors and make config_translate_test pass   add missing file   remove redundant oss func declaration   fix EnterpriseMeta to copy the right data for enterprise   rename pbcommon package to pbcommongogo   regenerate proto and mog files   add missing mog files   add pbcommon package   pbcommon no mog   fix enterprise meta code generation   fix enterprise meta code generation (pbcommongogo)   fix mog generation for gogo   use protoc-go-inject-tag to inject tags   rename proto package   pbcommon no mog   use protoc-go-inject-tag to inject tags   add non gogo proto to make file   fix proto get 
2974,docs: fix a trailing comma in JSON body,removing a comma after a last element in JSON body
2975,streaming: emit events when Connect CA Roots change (#12590),OSS sync of enterprise changes at 614f786d
2976,"factor out recording func, add unit tests (#12585)",Signed-off-by: FFMMM FFMMM@users.noreply.github.com
2977,Restructure gRPC server setup (#12586),OSS sync of enterprise changes at 0b44395e
2978,"pre register new rpc metric, rename metric (#12582)",
2979,Merge pull request #12584 from hashicorp/fix-cts-http-addr-var,updated docs
2980,updated docs,
2981,Merge pull request #12580 from hashicorp/docs/results-filtered-by-acl-awareness,docs: mention filtered by ACLs in affected APIs
2982,docs: mention filtered by ACLs in affected APIs,
2983,Merge pull request #12489 from hashicorp/docs/results-filtered-by-acl-awareness-coordinate,docs: mention filtered by ACLs in coordinate API
2984,docs: add filtered by ACLs header curl example,
2985,docs: mention filtered by ACLs in coordinate API,
2986,docs: Correction on rotating gossip key order per DC (#12579), docs: Correction on rotating gossip key order per DC
2987,"docs: consul-k8s Change ""Consul Connect Service Mesh"" to ""Consul Service Mesh"" (#12577)",
2988,docs: Consul K8s Overview update (#12575), docs: Consul K8s Overview update  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
2989,Add source of authority annotations to the PermissionDeniedError output. (#12567),This extends the acl.AllowAuthorizer with source of authority information. The next step is to unify the AllowAuthorizer and ACLResolveResult structures; that will be done in a separate PR. Part of #12481 Signed-off-by: Mark Anderson manderson@hashicorp.com
2990,docs: Consul Service Mesh overview - rename of title and K8s getting started (#12574),  Consul Service Mesh overview - rename of title and K8s getting started   reformat lines 
2991,Support per-listener TLS configuration ⚙️ (#12504),"Introduces the capability to configure TLS differently for Consul's listeners/ports (i.e. HTTPS, gRPC, and the internal multiplexed RPC port) which is useful in scenarios where you may want the HTTPS or gRPC interfaces to present a certificate signed by a well-known/public CA, rather than the certificate used for internal communication which must have a SAN in the form server.<dc>.consul."
2992,lib: add validation package + DNS label validation (#12535),Co-authored-by: Chris S. Kim ckim@hashicorp.com
2993,[sync oss] add net/rpc interceptor implementation (#12573), sync ent changes from 866dcb0667  Signed-off-by: FFMMM FFMMM@users.noreply.github.com  update oss go.mod  Signed-off-by: FFMMM FFMMM@users.noreply.github.com
2994,Merge pull request #12572 from hashicorp/pglass/fix-ecs-link,Fix broken link in ECS docs
2995,Fix broken link in ECS docs,
2996,Merge pull request #11821 from hashicorp/error-if-get-request-has-body,http: error if GET request has non-empty body
2997,http: WARN if GET request has non-empty body,"Give the user a hint that they might be doing something wrong if their GET request has a non-empty body, which can easily happen using curl's --data-urlencode if specifying request type via ""--request GET"" rather than ""--get"". See https://github.com/hashicorp/consul/issues/11471."
2998,Merge pull request #12569 from hashicorp/remove-gogo-stdduration,Remove the stdduration gogo extension
2999,Remove the stdduration gogo extension,
3000,Merge pull request #12566 from jbohanon/jbohanon-documentation,Update ui-visualization.mdx
3001,Update ui-visualization.mdx,
3002,Merge pull request #12561 from hashicorp/revert-12005-docs/agent-config,"Revert ""[Docs] Agent configuration hierarchy """
3003,"Revert ""[Docs] Agent configuration hierarchy """,
3004,Merge pull request #12005 from hashicorp/docs/agent-config,"[Docs] Agent configuration hierarchy - This PR reorganizes the Consul agent configuration documentation. CLI configuration options and configuration file options are now on separate pages. Additionally, options have been grouped into related categories. The goal is to make the content more consumable and navigable from the TOC menu."
3005,fixing merge conflicts part 3,
3006,fixed merge conflicts pt2,
3007,Merge pull request #12556 from hashicorp/wire-up-serverless-patcher,Create and wire up the serverless patcher
3008,Merge pull request #12557 from hashicorp/remove-healthcheck-gogo-stdduration,Remove Gogo Stdduration From the Healthcheck Protobufs
3009,Remove gogo stdduration from the healthcheck protobufs,
3010,Create and wire up the serverless patcher,
3011,ui: Overview UI Routing (#12493),This PR adds routes and an initial landing page for the Cluster Overview page
3012,ui: DisclosureCard component (#12541),
3013,ui: Native CSS Icon Composition (#12461),This commit/PR beings to move away from using CSS preprocessing for our icons and towards using native CSS via native CSS property composition
3014,merging new hierarchy for agent configuration,
3015,ui: App-ify Lock Sessions (#12482),"This commit moves our in-app LockSessions code into an external 'app', which can theoretically be side-loaded but for now it just makes for good isolation/code hygiene. Functionally, there is kind of one change here, and that is we only show the 'Lock Session' tab if you have permissions to see them. Currently as our UI authorization endpoint needs to be changed slightly to suit our usecase, you will always have permissions to see Lock Sessions as we hardcode the session:read to true (obvs this is a frontend thing, not a backend thing), so it doesn't really change anything from a user perspective. Also added very bare docs while I was here. Small note here, ideally we need to add the each individual tab depending on whether an 'app' is enabled or not instead of just permissions, ideally it would be done totally from The Outside rather than a can based conditional on the inside, just something else to be thinking about for the future."
3016,Refactor config checks oss (#12550),"Currently the config_entry.go subsystem delegates authorization decisions via the ConfigEntry interface CanRead and CanWrite code. Unfortunately this returns a true/false value and loses the details of the source. This is not helpful, especially since it the config subsystem can be more complex to understand, since it covers so many domains. This refactors CanRead/CanWrite to return a structured error message (PermissionDenied or the like) with more details about the reason for denial. Part of #12241 Signed-off-by: Mark Anderson manderson@hashicorp.com"
3017,Merge pull request #12484 from hashicorp/docs-amb-fix-prometheus-link,docs: Fixing Prometheus link in docs/agent/telemetry
3018,Fixing Prometheus link in docs/agent/telemetry,
3019,Merge pull request #12547 from hashicorp/remove-gogo-getters,Remove the gogo Getters
3020,Remove the gogo getters,
3021,Merge pull request #12536 from hashicorp/add-serverless-config,Add the connect.enable_serverless_plugin configuration option
3022,Merge pull request #12539 from hashicorp/make-xds-lib,Make the xdscommon package
3023,Add the connect.enable_serverless_plugin configuration option.,
3024,ui: Add CustomElement Transform (#12540),"This PR adds an Ember-Glimmer/Handlebars transform to drop the documentation copy from the CustomElement component out of the build, therefore it is not bundled into the code either at development time or production build time."
3025,Bulk acl message fixup oss (#12470)," First pass for helper for bulk changes  Signed-off-by: Mark Anderson manderson@hashicorp.com  Convert ACLRead and ACLWrite to new form  Signed-off-by: Mark Anderson manderson@hashicorp.com  AgentRead and AgentWRite  Signed-off-by: Mark Anderson manderson@hashicorp.com  Fix EventWrite  Signed-off-by: Mark Anderson manderson@hashicorp.com  KeyRead, KeyWrite, KeyList  Signed-off-by: Mark Anderson manderson@hashicorp.com  KeyRing  Signed-off-by: Mark Anderson manderson@hashicorp.com  NodeRead NodeWrite  Signed-off-by: Mark Anderson manderson@hashicorp.com  OperatorRead and OperatorWrite  Signed-off-by: Mark Anderson manderson@hashicorp.com  PreparedQuery  Signed-off-by: Mark Anderson manderson@hashicorp.com  Intention partial  Signed-off-by: Mark Anderson manderson@hashicorp.com  Fix ServiceRead, Write ,etc  Signed-off-by: Mark Anderson manderson@hashicorp.com  Error check ServiceRead?  Signed-off-by: Mark Anderson manderson@hashicorp.com  Fix Sessionread/Write  Signed-off-by: Mark Anderson manderson@hashicorp.com  Fixup snapshot ACL  Signed-off-by: Mark Anderson manderson@hashicorp.com  Error fixups for txn  Signed-off-by: Mark Anderson manderson@hashicorp.com  Add changelog  Signed-off-by: Mark Anderson manderson@hashicorp.com  Fixup review comments  Signed-off-by: Mark Anderson manderson@hashicorp.com"
3026,Merge pull request #12546 from hashicorp/k8s-cli,docs: cleaned up code blocks and added two sentences to the intro
3027,docs: cleaned up code blocks and added two sentences to the intro,
3028,update docs (#12543),
3029,ui: Add license endpoint/datasource (#12506),  ui: Add auto-pilot/state endpoint usage (merged into DC models) (#12514)   ui: Catalog Health Overview DataSource (#12520) 
3030,ui: Remove Settings Ember Route (#12488),
3031,ui: DistributionMeter Component (#12452),
3032,Merge pull request #12460 from hashicorp/docs-day-acl-improvements,Docs day acl improvements
3033,few more tweaks,
3034,Apply suggestions from code review,Co-authored-by: mrspanishviking kcardenas@hashicorp.com
3035,Apply suggestions from code review,Co-authored-by: Chris S. Kim ckim@hashicorp.com
3036,Make an xdscommon package that will be shared between Consul and Envoy plugins,
3037,Merge pull request #12529 from hashicorp/add-meta-to-service-config-response,Add Meta to ServiceConfigResponse
3038,Code review changes,
3039,Merge pull request #12400 from chinmaym07/ui/feature/add-tags-tab-to-gateways,ui: [Bugfix] Added Tags tab to gateways(just like exists for non-gateway services)
3040,proxycfg: change how various proxycfg test helpers for making ConfigSnapshot copies works to be more correct and less error prone (#12531),"Prior to this PR for the envoy xDS golden tests in the agent/xds package we were hand-creating a proxycfg.ConfigSnapshot structure in the proper format for input to the xDS generator. Over time this intermediate structure has gotten trickier to build correctly for the various tests. This PR proposes to switch to using the existing mechanism for turning a structs.NodeService and a sequence of cache.UpdateEvent copies into a proxycfg.ConfigSnapshot, as that is less error prone to construct and aligns more with how the data arrives. NOTE: almost all of this is in test-related code. I tried super hard to craft correct event inputs to get the golden files to be the same, or similar enough after construction to feel ok that i recreated the spirit of the original test cases."
3041,Add Meta to ServiceConfigResponse,
3042,ui: List Primary and Local DCs first in the Datacenter selector (#12478),
3043,ui: Fix loading icon size (adds a viewbox) (#12479),
3044,ui: CustomElement component (#12451),"Builds on attach-shadow, adopt-styles and ShadowTemplate, this commit adds ShadowHost and finally CustomElement. CustomElement is a renderless component to help with the creation of native HTML Custom Elements along with runtime type checking and self-documentation for attributes, slots, cssprops and cssparts. As you will probably see there is a little more work to come here. But in the same breath, everything would be fine to go in as is."
3045,Merge pull request #12521 from hashicorp/admin-limit,docs: adding text for maximum number of admin partitions
3046,Update install.mdx,missing a quote escape
3047,reduce flakiness/raciness of errNotFound and errNotChanged blocking query tests (#12518),"Improves tests from #12362 These tests try to setup the following concurrent scenario:  (goroutine 1) execute read RPC with index=0 (goroutine 1) get response from (1) @ index=10 (goroutine 1) execute read RPC with index=10 and block (goroutine 2) WHILE (3) is blocking, start slamming the system with stray writes that will cause the WatchSet to wakeup (goroutine 2) after doing all writes, shut down the reader above (goroutine 1) stops reading, double checks that it only ever woke up once (from 1)"
3048,docs: replaced ceiling with the word max,
3049,docs: updated the text based on feedback from PM,
3050,docs: adding text for maximum number of admin partitions,
3051,docs: Update Kubernetes YAML examples in UI visualization (#12419), Update Kubernetes related YAML config examples to document supported syntax in the latest version of the Helm chart. Fix syntax in JSON example configs.  Resolves #12403 Co-authored-by: mrspanishviking kcardenas@hashicorp.com
3052,server: fix spurious blocking query suppression for discovery chains (#12512),Minor fix for behavior in #12362 IsDefault sometimes returns true even if there was a proxy-defaults or service-defaults config entry that was consulted. This PR fixes that.
3053,docs: Clarify configuration options apply to agent,"Recently there have been a handful of GitHub issues and Discuss posts where users have expected the consul CLI to make use of config options defined in the agent configuration files, and are confused when it does not honor those config options. This change clarifies that command-line and configuration file options documented on the /agent/options page only apply to the Consul agent, instead of the Consul CLI."
3054,docs: Envoy 'compatibility' typo (#12513),
3055,docs: bump Envoy for 1.10.x (#12472),  docs: bump Envoy for 1.10.x   update security notes and remove previous versions older than n-2   Envoy 1.9.0 and older have last vulnerability.   Update envoy.mdx   Update envoy.mdx   Update envoy.mdx   Update envoy.mdx   formatting   Update website/content/docs/connect/proxies/envoy.mdx   Co-authored-by: Blake Covarrubias blake@covarrubi.as  Update website/content/docs/connect/proxies/envoy.mdx  Co-authored-by: Blake Covarrubias blake@covarrubi.as Co-authored-by: Blake Covarrubias blake@covarrubi.as
3056,Merge pull request #12508 from Petenerd/patch-1,Update install.mdx
3057,Update install.mdx,missing comma
3058,docs: consul-k8s service mesh overview - move verification section (#12500),
3059,Merge pull request #12298 from jorgemarey/b-persistnewrootandconfig,Avoid raft change when no config is provided on persistNewRootAndConfig
3060,ui: Add docs for <Action /> component (#12502),
3061,Update exported-services.mdx (#12499),
3062,ca: make sure the test fails without the fix,Also change the path used for the secondary so that both primary and secondary do not overwrite each other.
3063,raft: upgrade to v1.3.6 (#12496),Add additional protections on the Consul side to prevent NonVoters from bootstrapping raft. This should un-flake TestServer_Expect_NonVoters
3064,update changelog (#12495),
3065,build: ensure 'make linux' puts the binary in the expected location (#12494),Fixes regression from #10833 Fixes dev-docker and test-docker targets
3066,Merge pull request #12483 from hashicorp/consul-er-deprecate-proxy-tutorial,Remove deprecated built-in proxy tutorial reference
3067,added some ACL example use cases to policy section,
3068,Remove deprecated built-in proxy tutorial reference,
3069,"renamed acl-overview to index, fixed formatting, reworded node/service ID intros",
3070,Merge pull request #12467 from hashicorp/dnephin/ci-vault-test-safer,ca: require that tests that use Vault are named correctly
3071,Apply suggestions from code review,Co-authored-by: Blake Covarrubias blake@covarrubi.as
3072,fixing merge conflicts,
3073,test: parallelize more of TestLeader_ReapOrLeftMember_IgnoreSelf (#12468),before: $ go test ./agent/consul -run TestLeader_ReapOrLeftMember_IgnoreSelf ok      github.com/hashicorp/consul/agent/consul    21.147s  after: $ go test ./agent/consul -run TestLeader_ReapOrLeftMember_IgnoreSelf ok      github.com/hashicorp/consul/agent/consul    5.402s
3074,Fix vault test with suggested changes,
3075,Add test case to verify #12298,
3076,Add changelog file,
3077,Avoid raft change when no config is provided on CAmanager, This avoids a change to the raft store when no roots or config are provided to persistNewRootAndConfig
3078,Add changelog entries from latest releases (#12473),
3079,Update latest version on website to 1.11.4 (#12469),
3080,Merge pull request #12455 from hashicorp/docs/enterprise-license-faq-improvements,Enterprise license FAQ improvements
3081,ca: fix a test,"This test does not use Vault, so does not need ca.SkipIfVaultNotPresent"
3082,ca: require that tests that use Vault are named correctly,"Previously we were using two different criteria to decide where to run a test.  The main go-test job would skip Vault tests based on the presence of the vault binary, but the test-connect-ca-providers job would run tests based on the name. This led to a scenario where a test may never run in CI. To fix this problem I added a name check to the function we use to skip the test. This should ensure that any test that requires vault is named correctly to be run as part of the test-connect-ca-providers job. At the same time I relaxed the regex we use. I verified this runs the same tests using go test --list Vault.  I made this change because a bunch of tests in agent/connect/ca used Vault in the name, without the underscores. Instead of changing a bunch of test names, this seemed easier. With this approach, the worst case is that we run a few extra tests in the test-connect-ca-providers job, which doesn't seem like a problem."
3083,docs: clarify trial license FAQ,"Also use consistent language throughout to refer to the non-production license (just ""trial"" license, not both ""trial"" and ""evaluation"")."
3084,update helm docs for release 0.41.1 (#12465),  update helm docs for release 0.41.1   apply escape on :   Co-authored-by: David Yu dyu@hashicorp.com
3085,server: suppress spurious blocking query returns where multiple config entries are involved (#12362),"Starting from and extending the mechanism introduced in #12110 we can specially handle the 3 main special Consul RPC endpoints that react to many config entries in a single blocking query in Connect:  DiscoveryChain.Get ConfigEntry.ResolveServiceConfig Intentions.Match  All of these will internally watch for many config entries, and at least one of those will likely be not found in any given query. Because these are blends of multiple reads the exact solution from #12110 isn't perfectly aligned, but we can tweak the approach slightly and regain the utility of that mechanism. No Config Entries Found In this case, despite looking for many config entries none may be found at all. Unlike #12110 in this scenario we do not return an empty reply to the caller, but instead synthesize a struct from default values to return. This can be handled nearly identically to #12110 with the first 1-2 replies being non-empty payloads followed by the standard spurious wakeup suppression mechanism from #12110. No Change Since Last Wakeup Once a blocking query loop on the server has completed and slept at least once, there is a further optimization we can make here to detect if any of the config entries that were present at specific versions for the prior execution of the loop are identical for the loop we just woke up for. In that scenario we can return a slightly different internal sentinel error and basically externally handle it similar to #12110. This would mean that even if 20 discovery chain read RPC handling goroutines wakeup due to the creation of an unrelated config entry, the only ones that will terminate and reply with a blob of data are those that genuinely have new data to report. Extra Endpoints Since this pattern is pretty reusable, other key config-entry-adjacent endpoints used by agent/proxycfg also were updated:  ConfigEntry.List Internal.IntentionUpstreams (tproxy)"
3086,Merge pull request #12442 from danieleva/12422-keyring,Allows keyring operations on client agents
3087,Merge pull request #12449 from hashicorp/eculver/envoy-upgrades,connect: Update supported Envoy versions to include 1.19.3 and 1.18.6
3088,docs: add FAQ for obtaining copy of license,For existing enterprise customers who need access to the license.
3089,docs: add license renewal FAQ,
3090,docs: clarify license expiration behavior,"Also corrects the grace period between expiration and termination (10 years, not 24 hours)."
3091,Merge pull request #12378 from hashicorp/add-post-publish-events,Adding post-publish events to ci.hcl.
3092,Adds changelog,
3093,Added changelog,Signed-off-by: chinmaym07 b418020@iiit-bh.ac.in
3094,ui: PagedCollection component (#12404),"  ui: PagedCollection component   ui: Use PagedCollection (#12436)   ui: Integrate PagedCollection into DisclosureMenu   Integrate PageCollection into DC, Nspace and Partition menus "
3095,ui: Add new component blueprint (#12421),This adds a new component blueprint for all our components. We've been using README.mdx files for quite some time to document our components for other engineers. This adds a default file to help new engineers get started writing useful documentation. These README.mdx file are also very useful for building out components in isolation from scratch and and some point will be used to run automated component testing.
3096,Add changelog entry,
3097,connect: Update supported Envoy versions to include 1.19.3 and 1.18.6,
3098,connect: Upgrade Envoy 1.20 to 1.20.2 (#12443),
3099,fix flaky test panic (#12446),
3100,catalog: compare node names case insensitively in more places (#12444),"Many places in consul already treated node names case insensitively. The state store indexes already do it, but there are a few places that did a direct byte comparison which have now been corrected. One place of particular consideration is ensureCheckIfNodeMatches which is executed during snapshot restore (among other places). If a node check used a slightly different casing than the casing of the node during register then the snapshot restore here would deterministically fail. This has been fixed. Primary approach: git grep -i ""node.*[!=]=.*node"" -- ':!*_test.go' ':!docs' git grep -i '\[[^]]*member[^]]*\] git grep -i '\[[^]]*\(member\|name\|node\)[^]]*\]' -- ':!*_test.go' ':!website' ':!ui' ':!agent/proxycfg/testing.go:' ':!*.md'"
3101,Merge pull request #12416 from hashicorp/api-gateway-ga-docs,website: update API Gateway docs for v0.1.0 GA release
3102,Remove setup-qemu step from Docker build job (#12387),
3103,Update website/content/docs/api-gateway/index.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
3104,Update website/content/docs/api-gateway/api-gateway-usage.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
3105,Update website/content/docs/api-gateway/api-gateway-usage.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
3106,Update website/content/docs/api-gateway/index.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
3107,Update website/content/docs/api-gateway/api-gateway-usage.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
3108,Update website/content/docs/api-gateway/api-gateway-usage.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
3109,Merge pull request #12441 from hashicorp/retry-docs,docs: added example for service-router retry
3110,Merge branch 'api-gateway-ga-docs' of https://github.com/hashicorp/consul into api-gateway-ga-docs,
3111,Updated helm chart version number and a minor edit,
3112,docs: added example for service-router retry,
3113,Update website/content/docs/api-gateway/tech-specs.mdx,Co-authored-by: Andrew Stucki andrew.stucki@gmail.com
3114,Update website/content/docs/api-gateway/api-gateway-usage.mdx,Co-authored-by: Andrew Stucki andrew.stucki@gmail.com
3115,Allows keyring operations on client agents,
3116,Minor edits and additions to the API Gateway docs.,
3117,docs: set tproxy annotation to false for multi-port (#12431),
3118,add multiport docs for K8s (#12428),  add multiport docs for K8s   add formatting   Co-authored-by: David Yu dyu@hashicorp.com
3119,server: partly fix config entry replication issue that prevents replication in some circumstances (#12307),"There are some cross-config-entry relationships that are enforced during ""graph validation"" at persistence time that are required to be maintained. This means that config entries may form a digraph at times. Config entry replication procedes in a particular sorted order by kind and name. Occasionally there are some fixups to these digraphs that end up replicating in the wrong order and replicating the leaves (ingress-gateway) before the roots (service-defaults) leading to replication halting due to a graph validation error related to things like mismatched service protocol requirements. This PR changes replication to give each computed change (upsert/delete) a fair shot at being applied before deciding to terminate that round of replication in error. In the case where we've simply tried to do the operations in the wrong order at least ONE of the outstanding requests will complete in the right order, leading the subsequent round to have fewer operations to do, with a smaller likelihood of graph validation errors. This does not address all scenarios, but for scenarios where the edits are being applied in the wrong order this should avoid replication halting. Fixes #9319 The scenario that is NOT ADDRESSED by this PR is as follows:  create: service-defaults: name=new-web, protocol=http create: service-defaults: name=old-web, protocol=http create: service-resolver: name=old-web, redirect-to=new-web delete: service-resolver: name=old-web update: service-defaults: name=old-web, protocol=grpc update: service-defaults: name=new-web, protocol=grpc create: service-resolver: name=old-web, redirect-to=new-web  If you shutdown dc2 just before (4) and turn it back on after (7) replication is impossible as there is no single edit you can make to make forward progress."
3120,Merge pull request #12430 from hashicorp/ci/main-assetfs-build,auto-updated agent/uiserver/bindata_assetfs.go from commit 73b6687c5
3121,Adding documentation to store Enterprise License in Vault (#12375),  Adding documentation to store Enterprise License in Vault   Update website/content/docs/k8s/installation/vault/enterprise-license.mdx   Co-authored-by: mrspanishviking kcardenas@hashicorp.com  Update website/content/docs/k8s/installation/vault/enterprise-license.mdx  Co-authored-by: mrspanishviking kcardenas@hashicorp.com  Update website/content/docs/k8s/installation/vault/enterprise-license.mdx  Co-authored-by: mrspanishviking kcardenas@hashicorp.com  Update website/content/docs/k8s/installation/vault/enterprise-license.mdx  Co-authored-by: mrspanishviking kcardenas@hashicorp.com  Update website/content/docs/k8s/installation/vault/enterprise-license.mdx  Co-authored-by: mrspanishviking kcardenas@hashicorp.com  Update website/content/docs/k8s/installation/vault/enterprise-license.mdx  Co-authored-by: mrspanishviking kcardenas@hashicorp.com   Referencing Storing the Enterprise License in Vault from the Consul Enterprise installation instructions.   Added missing words about stroing in Vault   Update website/content/docs/k8s/installation/vault/enterprise-license.mdx   Co-authored-by: Kyle Schochenmaier kschoche@gmail.com  Clarifying that enterprise code block is just changes on top of your normal config.  Co-authored-by: mrspanishviking kcardenas@hashicorp.com Co-authored-by: Kyle Schochenmaier kschoche@gmail.com
3122,Updating consul on k8s to remove known limitations of serverAdditionalDNSSans and serverAdditionalIPSans (#12338),
3123,add changelog entry for enterprise only change (#12425),
3124,nia/docs 0.5.0 (#12381),"  docs/nia: new configuration for services condition & source_input (#11646)   docs/nia: new configuration for services condition   docs/nia: new configuration for services source_input   reword filter and cts_user_defined_meta   Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com  Update service block config to table format  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com   Remove deprecated driver.working_dir (#11831)   Deprecate workspace_prefix for now workspaces.prefix (#11836)   docs/nia: new config field names for services condition/source_input (#11896)   docs/nia: new config field names for services condition/source_input   Remove language about 'default condition' and services condition relation to services list   Context:  - Added a new names field to condition/source_input ""services""  - names or regexp must be configured for condition/source_input ""services"" This therefore:  - Removed relationship between condition/source_input ""services"" and  task.services list  - Removed concept of ""default condition"" i.e. condition ""services"" must be  configured with names or regexp, there is no meaningful unconfigured default Change: remove language regarding ""default condition"" and relationship with services list  docs/nia: Update paramters to table format  Changes from a bulleted list to a table. Also adds the possible response codes and fixes the update example response to include the inspect object.   docs/nia: Delete task API and CLI   docs/nia: Update wording for run values   Co-authored-by: Michael Wilkerson 62034708+wilkermichael@users.noreply.github.com  docs/nia: require condition ""catalog-services"" block's regexp to be configured (#11915)  Changes:  - Update Catalog Services Condition configuration docs to new table format  - Rewrite regexp field docs to be required, no longer optional  - Remove details about regexp field's original default behavior when the  field was optional   docs/nia: Update status API docs to table format   Cleaner wording for response descriptions   Co-authored-by: mrspanishviking kcardenas@hashicorp.com   docs/nia - 'source_includes_var' changes (#11939)   docs/nia - condition ""services"" new field source_includes_var   Add new configuration details for condition ""services"" block's  source_includes_var field.  Note: this field's description is worded differently from condition type's  source_includes_var since a services variable is always required (unlike  other vars) for CTS modules.  Also worded in a way to anticipate renaming to use_as_module_input   docs/nia - change 'source_includes_var' default value from false to true   Update configs   Table-ify Consul-KV condition (reuse wording from Consul-KV source input)   docs/nia - reword task execution page for source_includes_var changes   Note: switched to using ""module input"" language over ""source input"" language.  Separate PR will make a mass change across docs  Slim down general task condition section to have fewer details on module input Updated services, catalog-services, and consul-kv condition sections for  source_includes_var  Add config page links for details   Improve CTS acronym usage  Use Consul-Terraform-Sync at the first instance with CTS in brackets - Consul-Terraform-Sync (CTS) and then CTS for all following instances on a per-page basis.  some exceptions: left usage of the term Consul-Terraform-Sync in config examples and where it made sense for hyperlinking   Improve CTS acronym usage (part 2) (#11991)   Per page: - At first instance in text, use ""Consul-Terraform-Sync (CTS)"" - Subsequent instances in text, use ""CTS""   Update schedule condition config to table format   Update config tables with type column   docs/nia: Update required fields values   Standardizing Required/Optional over boolean values.  docs/nia: Standardize order of columns  Updated Required to come before Type, which is how the configurations are formatted. Also changed the empty strings to ""none"" for default values.   Deprecate port CLI option for CTS and updated example usage   docs/nia cts multiple source input configuration updates (#12158)   docs/nia cts multiple source input configuration updates   CTS expanded its usage of source_input block configurations and added some restrictions. This change accounts for the following changes:  source_input block can be configured for a task. No longer restricting to scheduled task Multiple source_input blocks can be configured for a task. No longer restricting to one Task cannot have multiple configurations defining the same variable type  Future work: We're planning to do some renaming from ""source"" to ""module"" for v0.5. These changes are made in the code and not yet in the docs. These will be taken care of across our docs in a separate PR. Perpetuating ""source"" in this PR to reduce confusion.  Apply suggestions from code review  Co-authored-by: mrspanishviking kcardenas@hashicorp.com  Apply suggestions from code review  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com  code review feedback  Co-authored-by: mrspanishviking kcardenas@hashicorp.com Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com  Add ""Consul object"" glossary entry  Changes:  - Add ""Consul object"" to CTS glossary  - Format glossary terms so that they can be linked  - Add link to ""Consul object"" glossary entry  Reorganize source_input limitations section  Co-authored-by: findkim 6362111+findkim@users.noreply.github.com Co-authored-by: mrspanishviking kcardenas@hashicorp.com Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com Co-authored-by: findkim 6362111+findkim@users.noreply.github.com   docs/nia: overview of config streamlining deprecations (#12193)   docs/nia: overview of config streamlining deprecations   Update config snippets to use CodeTabs   Apply code review feedback suggestions   Co-authored-by: mrspanishviking kcardenas@hashicorp.com  Apply suggestions from code review  Co-authored-by: mrspanishviking kcardenas@hashicorp.com   Clarify source table language   Add use_as_module_input callout   Co-authored-by: mrspanishviking kcardenas@hashicorp.com   docs/nia: deprecate ""services"" field and ""service"" block (#12234)   Deprecate services field   Did a search on ""services"", ""task.services"", ""services list"", and ""services field"" Changes:  - In config docs, mark services field as deprecated and condition block  as required.  - For necessary references to services field, mark with ""(deprecated)"" e.g.  when listing all options for source input  - Remove unnecessary references to services field from docs e.g. any docs  encouraging use of services  - Replace services field with condition / module_input ""services"" in  config snippets and explanations  Deprecate service block  Did a search for ""service block"", ""service"", and ""service {"" Changes:  - In config docs, mark service block as deprecated  - For necessary references to service block, mark with ""(deprecated)""  - Remove unnecessary references to service block from docs  Fix service block typos in config snippet  service block is singular and not plural   docs/nia: deprecate ""source includes var"" and ""source input"" (#12244)   Deprecate source_includes_var field   Did a search for ""source_includes_var"" and an audit of ""include"" Changes  - In config docs, mark source_includes_var field as deprecated  - In config docs, add new field for use_as_module_input  - For necessary references to source_includes_var, mark with ""(deprecated)""  - Audit and update ""include"" language  Deprecate source_input field and language  Did a search and replace for ""source_input"", ""source-input"", ""source input"" Changes:  - In config docs, mark source_input field as deprecated  - In config docs, add new entry for module_input  - For necessary references to source_input, mark with ""(deprecated)""  - Remove or replace ""sourceinput"" with ""moduleinput"" Note: added an anchor link alias e.g. # Module Input ((#source-input)) for headers that were renamed from ""Source Input"" so that bookmarked links won't break   Update config streamlining release removal version to 0.8   remove duplicate bullet   docs/nia: deprecate source (#12245)   Update ""source"" field in config snippets to ""module""   Deprecate task config source field   Did a search and replace for ""source"" and ""src"" Changes:  - In config docs, mark source field as deprecated  - In config docs, add new entry for module  - Remove or replace ""source"" with ""module""  Deprecate Status API Event source field  Changes:  - Mark source field as deprecated  - Add new entry for module   docs/nia - Get Task API docs & Task Status API deprecations (#12303)   docs/nia - Get Task API   Added a Task Object section intended to be shared with the Create Task API  docs/nia - Deprecate non-status fields from Task Status API  Deprecate the fields that Get Task API replaces  docs/nia - Align API docs on :task_name request resource  Followed a convention found in Nomad docs  docs/nia - misc fixes  Context for some:  - remove """" from license_path for consistency - do not specify the default  value when empty string  - remove ""optional"" language from task condition. we want to move towards it  being required   docs/nia - add new columns to API Task Object   Added Create Task API documentation   Added create task CLI documentation   addressed code review comments   fixed example   docs/nia: Update task delete with async behavior   CTS delete task command is now asynchronous, so updating docs to reflect this new behavior.   update create task CLI with new changes from code   update create task api and cli  update curl command to include the json header  update example task names to use 'task_a' to conform with other examples   docs/nia: Fix hyphens in CTS CLI output   docs/nia: Add auto-approve option in CLI   docs/nia: Clarify infrastructure is not destroyed on task deletion   Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com Co-authored-by: Kim Ngo 6362111+findkim@users.noreply.github.com Co-authored-by: Melissa Kam mkam@hashicorp.com Co-authored-by: Melissa Kam 3768460+mkam@users.noreply.github.com Co-authored-by: Michael Wilkerson 62034708+wilkermichael@users.noreply.github.com Co-authored-by: mrspanishviking kcardenas@hashicorp.com Co-authored-by: Michael Wilkerson mwilkerson@hashicorp.com Co-authored-by: AJ Jwair aj.jwair@hashicorp.com"
3125,Merge pull request #12228 from hashicorp/ecs-resource-usage,Document Consul ECS Resource Usage
3126,merged the k8s features section into the overview,
3127,separate the overview info from the usage info,
3128,separating usage from overview content,
3129,Update website/content/docs/api-gateway/index.mdx,Co-authored-by: Andrew Stucki andrew.stucki@gmail.com
3130,Merge pull request #12423 from andrewstucki/api-gateway-ga-docs-features,Add list of support K8s Gateway API Spec features
3131,Update website/content/docs/api-gateway/kubernetes-features.mdx,Co-authored-by: Jeff-Apple 79924108+Jeff-Apple@users.noreply.github.com
3132,Update website/content/docs/api-gateway/kubernetes-features.mdx,Co-authored-by: Jeff-Apple 79924108+Jeff-Apple@users.noreply.github.com
3133,Add links to sections of the spec,
3134,Add k8s features,
3135,Merge branch 'main' into api-gateway-ga-docs,
3136,forgot to include the usage page in the last commit,
3137,separated overview content and usage content into their own pages,
3138,docs: Add HCL examples to watch configs, Adds HCL configuration examples to Consul watch configs. Updates example output for several watch types.
3139,Remove metrics port from documentation,We've decided not to include this configurable in the Helm chart at this time
3140,Adjust navigation for Consul API Gateway,
3141,Adjust naming convention within api-gateway path,
3142,Move software requirements to Technical Specifications page,
3143,Add descriptor for resource allocation tables,Also fix typo under TCP Ports Required
3144,Add technical specifications,
3145,website: add link for serviceType Helm chart config for apiGateway,
3146,website: add DockerHub link for consulAPIGateway image config,
3147,website: remove ref to a specific version of envoyproxy/envoy from API Gateway docs,
3148,website: remove invalid caSecret config from GatewayGlassConfig example,
3149,website: add MeshService custom resource documentation,
3150,website: clarify usage section for API Gateway,
3151,website: remove nonexistant fatal log level from Gateway API docs,
3152,website: minor fixups on Consul API Gateway GatewayClassConfig,
3153,website: reorder GatewayClass below GatewayClassConfig,
3154,website: removed tls: enabled from minimal Consul API Gateway Helm config,
3155,"Revert ""website: adds docs for Consul Helm chart apiGateway > consulNamespaces""",This reverts commit 6356da1855d4663de36ffe977654d607cbb18d52. I didn't notice the DO NOT EDIT note that this file is generated automatically.
3156,website: clarify install step for Consul API Gateway CRDs,
3157,Merge pull request #11910 from hashicorp/dnephin/ca-provider-interface-for-ica-in-primary,ca: add support for an external trusted CA
3158,website: adds docs for Consul Helm chart apiGateway > consulNamespaces,
3159,website: bump Consul Helm chart req for Consul API Gateway to 0.41.0,
3160,configentry: make a new package to hold shared config entry structs that aren't used for RPC or the FSM (#12384),First two candidates are ConfigEntryKindName and DiscoveryChainConfigEntries.
3161,website: remove -beta prerelease tag from api-gateway CRD and image refs,
3162,file watcher to be used for configuration auto-reload feature (#12301),"  add config watcher to the config package   add logging to watcher   add test and refactor to add WatcherEvent.   add all API calls and fix a bug with recreated files   add tests for watcher   remove the unnecessary use of context   Add debug log and a test for file rename   use inode to detect if the file is recreated/replaced and only listen to create events.   tidy ups (#1535)   tidy ups   Add tests for inode reconcile   fix linux vs windows syscall   fix linux vs windows syscall   fix windows compile error   increase timeout   use ctime ID   remove remove/creation test as it's a use case that fail in linux   fix linux/windows to use Ino/CreationTime   fix the watcher to only overwrite current file id   fix linter error   fix remove/create test   set reconcile loop to 200 Milliseconds   fix watcher to not trigger event on remove, add more tests   on a remove event try to add the file back to the watcher and trigger the handler if success   fix race condition   fix flaky test   fix race conditions   set level to info   fix when file is removed and get an event for it after   fix to trigger handler when we get a remove but re-add fail   fix error message   add tests for directory watch and fixes   detect if a file is a symlink and return an error on Add   rename Watcher to FileWatcher and remove symlink deref   add fsnotify@v1.5.1   fix go mod   fix flaky test   Apply suggestions from code review   Co-authored-by: Ashwin Venkatesh ashwin@hashicorp.com   fix a possible stack overflow   do not reset timer on errors, rename OS specific files   start the watcher when creating it   fix data race in tests   rename New func   do not call handler when a remove event happen   events trigger on write and rename   fix watcher tests   make handler async   remove recursive call   do not produce events for sub directories   trim ""/"" at the end of a directory when adding   add missing test   fix logging   add todo   fix failing test   fix flaking tests   fix flaky test   add logs   fix log text   increase timeout   reconcile when remove   check reconcile when removed   fix reconcile move test   fix logging   delete invalid file   Apply suggestions from code review   Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com   fix review comments   fix is watched to properly catch a remove   change test timeout   fix test and rename id   fix test to create files with different mod time.   fix deadlock when stopping watcher   Apply suggestions from code review   Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com   fix a deadlock when calling stop while emitting event is blocked   make sure to close the event channel after the event loop is done   add go doc   back date file instead of sleeping   Apply suggestions from code review   Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com  check error  Co-authored-by: Ashwin Venkatesh ashwin@hashicorp.com Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com"
3163,auto-updated agent/uiserver/bindata_assetfs.go from commit 73b6687c5,
3164,ui: Transition App Chrome to use new Disclosure Menus (#12334),  Add %panel CSS component   Deprecate old menu-panel component   Various smallish tweaks to disclosure-menu   Move all menus in the app chrome to use new DisclosureMenu   Follow up CSS to move all app chrome menus to new components   Don't prevent default any events from anchors   Add a tick to click steps 
3165,fix: Added Tags tab to gateways(just like exists for non-gateway services),Signed-off-by: chinmaym07 b418020@iiit-bh.ac.in
3166,additional information about service and node ids,
3167,checks: populate interval and timeout when registering services (#11138),
3168,Merge pull request #12385 from hashicorp/tproxy-http-upstream-fix,xds: respect chain protocol on default discovery chain
3169,Merge pull request #12389 from hashicorp/dnephin/rpc-blocking-queries-not-found-nil,rpc: set response to nil when not found
3170,rpc: set response to nil when not found,"Otherwise when the query times out we might incorrectly send a value for the reply, when we should send an empty reply. Also document errNotFound and how to handle the result in that case."
3171,ui: Fixup displaying a Nspace default policy when expanding the preview pane (#12316),
3172,ui: Replace CollapsibleNotices with more a11y focussed Disclosure component (#12305),  Delete collapsible notices component and related helper   Add relative t action/helper to our Route component   Replace single use CollapsibleNotices with multi-use Disclosure 
3173,Document Consul ECS resource usage,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com Co-authored-by: Paul Glass pglass@hashicorp.com
3174,Merge pull request #11175 from kevinwojo/patch-azure-auto-join,Update docs: correct provider argument is tag_key
3175,fix godoc comment for Namespaces client method,Namespaces method godoc has same sentence as Operator method. Presumably a cut-n-paste error. Fix that.
3176,Add missing enhancement entries to appropriate spot in CHANGELOG (#12380),
3177,ci: combine 'enhancement' entry type with 'improvement' (#12376),
3178,ca: test that original certs from secondary still verify,"There's a chance this could flake if the secondary hasn't received the update yet, but running this test many times doesn't show any flakes yet."
3179,Update TODOs to reference an issue with more details,And remove a no longer needed TODO
3180,docs: add docs for using an external CA,
3181,ca: add test cases for rotating external trusted CA,
3182,ca: add a test for secondary with external CA,
3183,ca: examine the full chain in newCARoot,make TestNewCARoot much more strict compare the full result instead of only a few fields. add a test case with 2 and 3 certificates in the pem
3184,ca: small docs improvements,
3185,ca: cleanup validateSetIntermediate,
3186,ca: only return the leaf cert from Sign in vault provider,"The interface is documented as 'Sign will only return the leaf', and the other providers only return the leaf. It seems like this was added during the initial implementation, so is likely just something we missed. It doesn't break anything , but it does cause confusing cert chains in the API response which could break something in the future."
3187,Merge pull request #12110 from hashicorp/dnephin/blocking-queries-not-found,rpc: make blocking queries for non-existent items more efficient
3188,Parse datacenter from request (#12370), Parse datacenter from request Parse the value of the datacenter from the create/delete requests for AuthMethods and BindingRules so that they can be created in and deleted from the datacenters specified in the request.
3189,Merge pull request #12382 from hashicorp/consul-int-prog-changes,docs: uploaded two images and added new text to Consul Int. Program page
3190,Update website/content/docs/integrate/partnerships.mdx,Co-authored-by: mrspanishviking kcardenas@hashicorp.com
3191,Update website/content/docs/integrate/partnerships.mdx,Co-authored-by: mrspanishviking kcardenas@hashicorp.com
3192,Add changelog note,
3193,xds: respect chain protocol on default discovery chain,
3194,docs: uploaded two images and added new text to Consul Int. Program page,
3195,Adding post-publish events to ci.hcl.,
3196,ui: Start using mermaid state diagrams in our docs (#12350),
3197,Support for connect native services in topology view. (#12098),
3198,added 'Tech Specs' section under API Gateway,
3199,Fix build script (#12367),
3200,Move IndexEntryName helpers to common files (#12365),
3201,Separate Annotations/Labels and Add service-ignore to Docs (#12323),  Separate Annotations and Labels and add service-ignore label   changes to structure and call out for pod   add description and TOC   Update annotations-and-labels.mdx   Co-authored-by: David Yu dyu@hashicorp.com
3202,Merge pull request #12359 from hashicorp/dnephin/fix-debug-size,debug: limit the size of the trace
3203,rpc: add errNotFound to all Get queries,Any query that returns a list of items is not part of this commit.
3204,Make blockingQuery efficient with 'not found' results.,"By using the query results as state. Blocking queries are efficient when the query matches some results, because the ModifyIndex of those results, returned as queryMeta.Mindex, will never change unless the items themselves change. Blocking queries for non-existent items are not efficient because the queryMeta.Index can (and often does) change when other entities are written. This commit reduces the churn of these queries by using a different comparison for ""has changed"". Instead of using the modified index, we use the existence of the results. If the previous result was ""not found"" and the new result is still ""not found"", we know we can ignore the modified index and continue to block. This is done by setting the minQueryIndex to the returned queryMeta.Index, which prevents the query from returning before a state change is observed."
3205,Add a test for blocking query on non-existent entry,This test shows how blocking queries are not efficient when the query returns no results.  The test fails with 100+ calls instead of the expected 2. This test is still a bit flaky because it depends on the timing of the writes. It can sometimes return 3 calls. A future commit should fix this and make blocking queries even more optimal for not-found results.
3206,debug: update CLI docs,"To clarify how trace is captured. Also remove the minimum seconds check, because that is already done in prepare()"
3207,Merge pull request #12343 from hashicorp/dnephin/blocking-query-docs,rpc: improve docs for blockingQuery
3208,rpc: improve docs for blockingQuery,Follow the Go convention of accepting a small interface that documents the methods used by the function. Clarify the rules for implementing a query function passed to blockingQuery.
3209,debug: limit the size of the trace,We've noticed that a trace that is captured over the full duration is too large to open on most machines. A trace.out captured over just the interval period (30s by default) should be a more than enough time to capture trace data.
3210,ci: fix stalebot config (#12346),
3211,Merge pull request #12352 from hashicorp/Jeff-Apple-patch-1,Fix broken link on Downloads page on wedsite
3212,Fix broken link on Downloads page on wedsite,The link to the Kubernetes Quickstart guide had a typo (space character) in the URL.
3213,ci: Fix merge conflicts cleanly (#12249),
3214,server: conditionally avoid writing a config entry to raft if it was already the same (#12321),This will both save on unnecessary raft operations as well as unnecessarily incrementing the raft modify index of config entries subject to no-op updates.
3215,raft: update to v1.3.5 (#12325),This includes closing some leadership transfer gaps and adding snapshot restore progress logging.
3216,"Add release notes from 1.11.3, 1.10.8 and 1.9.15 (#12333)"," Did we want to update the individual branches as well ?  Yes, I have PRs for those: #12335, #12336, and #12337."
3217,Merge pull request #12332 from hashicorp/consul-1_11_3-version-update,Update version.js for Consul 1.11.3
3218,Update version.js,
3219,"Vendor in rpc mono repo for net/rpc fork, go-msgpack, msgpackrpc. (#12311)",This commit syncs ENT changes to the OSS repo. Original commit details in ENT: ``` commit 569d25f7f4578981c3801e6e067295668210f748 Author: FFMMM FFMMM@users.noreply.github.com Date:   Thu Feb 10 10:23:33 2022 -0800 Vendor fork net rpc (#1538)  * replace net/rpc w consul-net-rpc/net/rpc  Signed-off-by: FFMMM <FFMMM@users.noreply.github.com>  * replace msgpackrpc and go-msgpack with fork from mono repo  Signed-off-by: FFMMM <FFMMM@users.noreply.github.com>  * gofmt all files touched  Signed-off-by: FFMMM <FFMMM@users.noreply.github.com>  ``` Signed-off-by: FFMMM FFMMM@users.noreply.github.com
3220,missed this test adjustment (#12331),
3221,local: fixes a data race in anti-entropy sync (#12324),"The race detector noticed this initially in TestAgentConfigWatcherSidecarProxy but it is not restricted to just tests. The two main changes here were:  ensure that before we mutate the internal agent/local representation of a Service (for tags or VIPs) we clone those fields ensure that there's no function argument joint ownership between the caller of a function and the local state when calling AddService, AddCheck, and related using copystructure for now."
3222,URL-encode/decode resource names for HTTP API part 5 (#12297),
3223,Refactor to make ACL errors more structured. (#12308)," First phase of refactoring PermissionDeniedError  Add extended type PermissionDeniedByACLError that captures information about the accessor, particular permission type and the object and name of the thing being checked. It may be worth folding the test and error return into a single helper function, that can happen at a later date. Signed-off-by: Mark Anderson manderson@hashicorp.com"
3224,Merge pull request #12322 from hashicorp/dnephin/update-check-docs,Add 7th check registration flow to developer docs
3225,Add 7th check registration flow to docs,Credit to Freddy for finding this a while ago.
3226,ensure make dev target puts the newly constructed binary onto the PATH (#12318),This restores the prior behavior of make dev and ensures that tests using the sdk package (like the api package) will correctly locate the consul binary under test. Also ensure the constructed consul binary is present on the path for sdk-based tests.
3227,ui: Disclosure Component amends plus DisclosureMenu Component (#12304), ui: Disclosure amends plus DisclosureMenu  Co-authored-by: Jamie White jamie@jgwhite.co.uk
3228,ui: Make sure saving intentions from topology includes the partition (#12317),
3229,ui: Stop ember-data overwriting SyncTimes (#12315),
3230,ui: Exclude Service Health from Node listing page (#12248),"This commit excludes the health of any service instances from the Node Listing page. This means that if you are viewing the Node listing page you will only see failing nodes if there are any Node Checks failing, Service Instance Health checks are no longer taken into account. Co-authored-by: Jamie White jamie@jgwhite.co.uk"
3231,Merge pull request #12223 from hashicorp/proxycfg/passthrough-cleanup,
3232,Add changelog entry,
3233,Account for upstream targets in another DC.,"Transparent proxies typically cannot dial upstreams in remote datacenters. However, if their upstream configures a redirect to a remote DC then the upstream targets will be in another datacenter. In that sort of case we should use the WAN address for the passthrough."
3234,Fix race of upstreams with same passthrough ip,"Due to timing, a transparent proxy could have two upstreams to dial directly with the same address. For example: - The orders service can dial upstreams shipping and payment directly. - An instance of shipping at address 10.0.0.1 is deregistered. - Payments is scaled up and scheduled to have address 10.0.0.1. - The orders service receives the event for the new payments instance before seeing the deregistration for the shipping instance. At this point two upstreams have the same passthrough address and Envoy will reject the listener configuration. To disambiguate this commit considers the Raft index when storing passthrough addresses. In the example above, 10.0.0.1 would only be associated with the newer payments service instance."
3235,Ensure passthrough addresses get cleaned up,"Transparent proxies can set up filter chains that allow direct connections to upstream service instances. Services that can be dialed directly are stored in the PassthroughUpstreams map of the proxycfg snapshot. Previously these addresses were not being cleaned up based on new service health data. The list of addresses associated with an upstream service would only ever grow. As services scale up and down, eventually they will have instances assigned to an IP that was previously assigned to a different service. When IP addresses are duplicated across filter chain match rules the listener config will be rejected by Envoy. This commit updates the proxycfg snapshot management so that passthrough addresses can get cleaned up when no longer associated with a given upstream. There is still the possibility of a race condition here where due to timing an address is shared between multiple passthrough upstreams. That concern is mitigated by #12195, but will be further addressed in a follow-up."
3236,Prevent xDS tight loop on cfg errors (#12195),
3237,Merge pull request #12285 from hashicorp/readme-logo-dark-mode,Make README header look good in dark mode
3238,fix race when starting a service while the agent serviceManager is … (#12302),  fix race when starting a service while the agent serviceManager is stopping   add changelog 
3239,website: removes references to nextjs-scripts (#12299),
3240,ui: Ensure proxy instance health is taken into account in Service Instance Listings (#12279),"We noticed that the Service Instance listing on both Node and Service views where not taking into account proxy instance health. This fixes that up so that the small health check information in each Service Instance row includes the proxy instances health checks when displaying Service Instance health (afterall if the proxy instance is unhealthy then so is the service instance that it should be proxying)   Refactor Consul::InstanceChecks with docs   Add to-hash helper, which will return an object keyed by a prop   Stop using/relying on ember-data type things, just use a hash lookup   For the moment add an equivalent ""just give me proxies"" model prop   Start stitching things together, this one requires an extra HTTP request   ..previously we weren't even requesting proxies instances here   Finish up the stitching   Document Consul::ServiceInstance::List while I'm here   Fix up navigation mocks Name > Service "
3241,ui: ShadowTemplate component (#12259),
3242,Merge pull request #12277 from hashicorp/dnephin/panic-in-service-register,catalog: initialize the refs map to prevent a nil panic
3243,Refactored the ACL documentation,
3244,config-entry: fix a panic when registering a service or ingress gateway,
3245,Merge pull request #12296 from hashicorp/admin-tutorial-add,adding new tutorial
3246,adding new tutorial,
3247,Merge pull request #12291 from hashicorp/mgw-improve,docs: update the wan mesh gateway page
3248,ui: aria-menu modifier (#12262),aria-menu modifier plus Menu component (#12266)
3249,Add stalebot policy for closing inactive PRs (#11286), Add stalebot policy for closing inactive issues and PRs  Co-authored-by: Daniel Nephin dnephin@hashicorp.com
3250,ui: Disclosure Component (#12263),
3251,docs: updated per feedback,
3252,docs: update the wan mesh gateway page,
3253,xds: allow only one outstanding delta request at a time (#12236),"Fixes #11876 This enforces that multiple xDS mutations are not issued on the same ADS connection at once, so that we can 100% control the order that they are applied. The original code made assumptions about the way multiple in-flight mutations were applied on the Envoy side that was incorrect."
3254,Merge pull request #12282 from hashicorp/admin-fix,docs: updated admin partitions instructions
3255,Adjust README header to work in light and dark modes,
3256,Add Consul logomark (no text) asset,
3257,Merge pull request #12283 from hashicorp/dnephin/fix-go-test-arm64,ci: fix arm64 build
3258,ci: fix arm64 build,"'make dev' is not enough, we need to move it into PATH as well."
3259,Update website/content/docs/enterprise/admin-partitions.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
3260,Merge pull request #12189 from hashicorp/ds.ie11-warning,website: display warning in IE 11
3261,skipping verification,
3262,more markdown styling fixes,
3263,git commit hooks are changing the markdown,
3264,fixed markdown error,
3265,Merge pull request #11787 from odidev/arm64-testing,Add test jobs for arm64 in CircleCI
3266,Merge pull request #12265 from hashicorp/dnephin/logging-in-tests,sdk: add TestLogLevel for setting log level in tests
3267,updated admin partitions instructions,
3268,Update security scanner (#12281),
3269,feat: display warning in IE 11,
3270,Update docker image base to alpine:3.15 (#12276),
3271,Adding proper targets to (Dockerfile #12097),
3272,Merge branch 'main' into fix-broken-dockerfile,
3273,Merge pull request #12275 from hashicorp/fix-security-scan,Fix Security Scan
3274,clean up from testing,
3275,turning go modules to false due to jwt issue,
3276,reverting changes for the container + binary blocks,
3277,A test to reproduce the issue,
3278,Merge pull request #11956 from hashicorp/enable-security-scan,Enable Security Scan for CRT
3279,Merge pull request #12267 from hashicorp/dnephin/ca-relax-key-bit-validation,ca: change the PrivateKey type/bits validation
3280,docs: mention Consul API gateway in Ingress Controllers page (#12268),  docs: mention Consul API gateway   Remove Ambassador integration   Update ingress-controllers.mdx   Update website/content/docs/k8s/connect/ingress-controllers.mdx   Co-authored-by: mrspanishviking kcardenas@hashicorp.com Co-authored-by: mrspanishviking kcardenas@hashicorp.com
3281,Merge pull request #11962 from hashicorp/what_service_mesh,docs: SEO improvements
3282,updated all sub-headers to sentence case,
3283,Merge branch 'main' of github.com:hashicorp/consul into what_service_mesh,
3284,Merge branch 'enable-security-scan' of github.com:hashicorp/consul into enable-security-scan,
3285,updating the binary and container blocks in security-scan file,
3286,updated several sections based on feedback,
3287,adding more content per feedback,
3288,Make test more readable,And fix typo
3289,ci: skip building the binary,"The tests that require a Consul binary should be skipped by -short, so skip building the binary in go-test-arm64 to save after 3 minutes."
3290,ci: try to run only -short on PR branches,
3291,ci: share common go-test steps,
3292,Add test jobs for arm64 in CircleCI,
3293,add changelog,
3294,ca: relax and move private key type/bit validation for vault,"This commit makes two changes to the validation. Previously we would call this validation in GenerateRoot, which happens both on initialization (when a follower becomes leader), and when a configuration is updated. We only want to do this validation during config update so the logic was moved to the UpdateConfiguration function. Previously we would compare the config values against the actual cert. This caused problems when the cert was created manually in Vault (not created by Consul).  Now we compare the new config against the previous config. Using a already created CA cert should never error now. Adding the key bit and types to the config should only error when the previous values were not the defaults."
3295,ca: small cleanup of TestConnectCAConfig_Vault_TriggerRotation_Fails,Before adding more test cases
3296,testing: fix test failures caused by new log level,"These two tests require debug logging enabled, because they look for log lines. Also switched to testify assertions because the previous errors were not clear."
3297,docs: update for k8s support for igw and header manip (#12264),Add docs now that k8s supports these new config entry fields
3298,chmod +x on the sh file,
3299,Apply suggestions from code review,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
3300,Apply suggestions from code review,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
3301,Merge pull request #11944 from hashicorp/cts-docs-clean-up,
3302,sdk: add TestLogLevel for setting log level in tests,And default log level to WARN.
3303,docs: provide example for enabling mesh on a per namespace basis (#12255),  docs: provide example for enabling mesh on a per namespace basis   add headings   Update install.mdx   Update install.mdx   Update website/content/docs/k8s/installation/install.mdx   Co-authored-by: Blake Covarrubias blake@covarrubi.as   Update install.mdx   Update website/content/docs/k8s/installation/install.mdx   Co-authored-by: Blake Covarrubias blake@covarrubi.as  Update website/content/docs/k8s/installation/install.mdx  Co-authored-by: Iryna Shustava ishustava@users.noreply.github.com   add changes from review   Update install.mdx   Co-authored-by: Blake Covarrubias blake@covarrubi.as Co-authored-by: Iryna Shustava ishustava@users.noreply.github.com
3304,Merge pull request #12230 from hashicorp/badge-improvements,README Badge Improvements
3305,Improve README header,Improvements include: - separate the project name from the badges - use the project logo - show more relevant badges
3306,docs: formatting and update to consul-k8s 0.40.0 (#12256),  docs: formatting and update to consul-k8s 0.40.0   Update index.mdx   Update index.mdx   test indentation   Update index.mdx   formatting   Update index.mdx   Update index.mdx   Update index.mdx   Update index.mdx   Update website/content/docs/k8s/upgrade/index.mdx   Co-authored-by: mrspanishviking kcardenas@hashicorp.com  Update website/content/docs/k8s/upgrade/index.mdx  Co-authored-by: mrspanishviking kcardenas@hashicorp.com  Update website/content/docs/k8s/upgrade/index.mdx  Co-authored-by: mrspanishviking kcardenas@hashicorp.com Co-authored-by: mrspanishviking kcardenas@hashicorp.com
3307,Merge pull request #10833 from jkirschner-hashicorp/improve-compile-from-source-docs,docs: improve compile from source docs
3308,Update Consul logo assets on docs site,
3309,Replace build script with 'go build',
3310,ui: Change approach to loading debug.css (#12242),"We need a way to load certain CSS based on the environment you are viewing, i.e. we have debug CSS that we use for our Eng Documentation and various other DX utilities that shouldn't be compiled into our production or test builds. Previously we would compile two entirely different CSS files (app and debug) and the load one or the other depending on which environment you were in. This approach just empties out the debug.css file in certain environments (prod/test) which means we can just import that file from app. When in staging/development this imports the contents of debug.css (quite a bit of CSS) whereas when building for production/test this debug.css is emptied out during the build process. There is a slight little hack in order to have this work, we import _debug.scss which imports the debug.scss file. I couldn't for the life of me figure out how to have broccoli empty out a file during the build process, so instead we essentially copy over debug.scss during dev and create an empty file during prod to _debug.scss. When using make build to build an artifact for production CSS remains at ~58kb (during dev its a lot bigger than this)"
3311,docs: Fix discrepancy with sidecar min/max port range,Remove incorrect sidecar port range on docs for built-in proxy. Updates the bind_port/port fields on the built-in proxy and sidecar service registration pages to link to the sidecar_min_port and sidecar_max_port configuration options for the defined port range. Fixes #12253
3312,Use docker mirror,
3313,Merge branch 'enable-security-scan' of github.com:hashicorp/consul into enable-security-scan,
3314,Add changelog entry,
3315,Merge branch 'fix-broken-dockerfile' of github.com:hashicorp/consul into fix-broken-dockerfile,
3316,Merge pull request #11783 from hashicorp/dnephin/ca-vault-root-as-intermediate,ca: add a test that uses an intermediate CA as the primary CA
3317,Merge pull request #11391 from hashicorp/add-changelog-creation-to-contributor-docs,Add changelog creation to contributor docs
3318,Add changelog creation to contributor docs,
3319,ca: add a test that uses an intermediate CA as the primary CA,"This test found a bug in the secondary. We were appending the root cert to the PEM, but that cert was already appended. This was failing validation in Vault here: https://github.com/hashicorp/vault/blob/sdk/v0.3.0/sdk/helper/certutil/types.go#L329 Previously this worked because self signed certs have the same SubjectKeyID and AuthorityKeyID. So having the same self-signed cert repeated doesn't fail that check. However with an intermediate that is not self-signed, those values are different, and so we fail the check. A test I added in a previous commit should show that this continues to work with self-signed root certs as well."
3320,Merge branch 'main' into enable-security-scan,
3321,Merge pull request #12250 from hashicorp/dnephin/acl-resolver-safer-identity,acl: un-embed ACLIdentity
3322,acl: un-embed ACLIdentity,This is safer than embedding two interface because there are a number of places where we check the concrete type. If we check the concrete type on the top-level interface it will fail. So instead expose the ACLIdentity from a method.
3323,ui: Alias all our Structure Icons to Flight Icons (#12209),
3324,Apply suggestions from code review,Co-authored-by: Jared Kirschner 85913323+jkirschner-hashicorp@users.noreply.github.com
3325,Apply suggestions from code review,Co-authored-by: Jared Kirschner 85913323+jkirschner-hashicorp@users.noreply.github.com
3326,Merge pull request #12243 from gitrgoliveira/patch-1,Update redirect-traffic.mdx
3327,Update website/content/commands/connect/redirect-traffic.mdx,Co-authored-by: Blake Covarrubias blake.covarrubias@gmail.com
3328,packaging: fix issues in pre/postremove scripts (#12147),"Fixes several issues with the pre/postremove scripts for both rpm and deb packages. Specifically: For postremove: - the postremove script now functions correctly (i.e. restarts consul   after a package upgrade) on rpm-based systems (where $1 is numeric   rather than purge or upgrade) - systemctl daemon-reload is called on package removal (rather than   only on upgrade) - calls systemctl try-restart instead of systemctl restart, which   will only (re)start consul if it was already running when the upgrade   happened. For preremove: - if the package is being completely uninstalled (rather than upgraded),   stop consul before removing the package"
3329,ui: attach-shadow modifier (#12207), ui: attach-shadow modifier ui: adopt-styles helper (#12208)
3330,Updated copy based on feedback,
3331,docs: update install from source,"GOPATH is not longer necessary as of Go1.11. No additional tools are required, just Go."
3332,docs: link from makefile to compile instructions,Some practitioners look to the makefile directly rather than to the consul website for information on how to compile from source. Link to the website instructions directly from the makefile so the practitioner can accomplish their task successfully without a careful read of the makefile.
3333,docs: show how to cross-compile from source,
3334,Update website/content/commands/connect/redirect-traffic.mdx,Co-authored-by: mrspanishviking cardenas88karl@gmail.com
3335,Update redirect-traffic.mdx,
3336,ui: style-map helper (#12203),
3337,ui: on-outside modifier (#12206),
3338,docs: slight formatting update and provide example with service mesh enabled  (#12227),  docs: slight formatting update and provide example with service mesh install   add status   Update website/content/docs/k8s/installation/install.mdx   Co-authored-by: mrspanishviking kcardenas@hashicorp.com   Update install.mdx   Update install.mdx   Update install.mdx   Update install.mdx   Update install.mdx   Co-authored-by: mrspanishviking kcardenas@hashicorp.com
3339,Merge pull request #12167 from hashicorp/dnephin/acl-resolve-token-3,acl: rename ResolveTokenToIdentityAndAuthorizer to ResolveToken
3340,Merge pull request #12166 from hashicorp/dnephin/acl-resolve-token-2,acl: remove ResolveTokenToIdentity
3341,Merge pull request #12232 from hashicorp/pcmccarron-press-kit,updating press kit link
3342,acl: rename ResolveTokenToIdentityAndAuthorizer to ResolveToken,"This change allows us to remove one of the last remaining duplicate resolve token methods (Server.ResolveToken). With this change we are down to only 2, where the second one also handles setting the default EnterpriseMeta from the token."
3343,"acl: remove unused methods on fakes, and add changelog",Also document the metric that was removed in a previous commit.
3344,updating to brand,
3345,Update website/components/footer/index.jsx,Co-authored-by: Jared Kirschner 85913323+jkirschner-hashicorp@users.noreply.github.com
3346,updating press kit link,pointing to the brand page instead of a zip file.
3347,Merge pull request #12165 from hashicorp/dnephin/acl-resolve-token,acl: remove some of the duplicate resolve token methods
3348,docs: Small changes to API Gateway docs (#12226),  docs: Small changes to API Gateway docs   Update api-gateway.mdx   Update website/content/docs/api-gateway.mdx   Co-authored-by: mrspanishviking kcardenas@hashicorp.com Co-authored-by: mrspanishviking kcardenas@hashicorp.com
3349,Change error-handling across handlers.  (#12225),
3350,Merge remote-tracking branch 'origin/main' into fix-broken-dockerfile,
3351,Update Helm docs to reflect 0.40.0 release (#12224),
3352,Document new escape tag ability for k8s (#12175),
3353,URL-encode/decode resource names for HTTP API part 4 (#12190),
3354,website: Add Demandbase tag to consent manager (#12197),  chore: Add Demandbase tag to consent manager   fix: Add services to manager options 
3355,Merge pull request #12217 from hashicorp/odd_language,fixing a confusing sentence in network segments page
3356,streaming: split event buffer by key (#12080),
3357,docs: add transparent proxy visual aid (#12211),Co-authored-by: Paul Banks banks@banksco.de
3358,fixing a confusing sentence in network segments page,
3359,Add failing test,The updated test fails because passthrough upstream addresses are not being cleaned up.
3360,Merge pull request #11951 from hashicorp/docs/api-gateway-beta,API gateway docs going live for beta
3361,added min supported kubectl,
3362,docs: Add annotations for consul-sidecar resource overrides (#12142),
3363,more feedback about helm chart from Jeff,
3364,added link to tutorial,
3365,formatting,
3366,"fixed formatting, applied Jeff's feedback",
3367,Merge pull request #11706 from hashicorp/dnephin/ca-remove-provider-active-root,"ca: remove Provider.ActiveRoot, return the root from Provider.GenerateRoot"
3368,Fix #service-rules link in reference table,
3369,still trying to fix formatting,
3370,removed extra quotation mark typo,
3371,fixed formatting,
3372,reordered the installation steps,
3373,ca/provider: remove ActiveRoot from Provider,
3374,applying additional feedback,
3375,Merge pull request #11825 from hashicorp/pglass/ecs-merge-arch-into-overview,docs: ECS 0.3.0 Updates
3376,ca: update MockProvider for new interface,
3377,ca: update GenerateRoot godoc,
3378,Merge pull request #11663 from hashicorp/dnephin/ca-remove-one-call-to-active-root-2,ca: remove second call to Provider.ActiveRoot
3379,docs: Add configuration reference for ECS,
3380,docs: Fixes to ECS manual secure configuration,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
3381,docs: Manual secure configuration for ECS,
3382,docs: Refine ECS installation docs,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
3383,docs: Improving ECS installation docs,
3384,docs: Apply suggestions to ECS docs from code review,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
3385,docs: Correct ECS filename -> manual-installation.mdx,
3386,docs: Improving ECS manual installation page,
3387,docs: Apply suggestions for manual ECS installation,Co-authored-by: Luke Kysow 1034429+lkysow@users.noreply.github.com
3388,docs: Manual installation of Consul on ECS,
3389,docs: Unmerge ECS architecture from overview,
3390,"docs: Flatten ECS ""Getting Started"" navigation",
3391,docs: Merge ECS Architecture into overview,
3392,website: fix ordering of list with nested code blocks,
3393,website: fix indentation to resolve CodeBlockConfig syntax error,
3394,Apply suggestions from code review,Thanks for catching my typos! Co-authored-by: Nathan Coleman nathandanielcoleman@gmail.com
3395,ci: Update CI to stash changes before checkout (#12210),
3396,ui: css-prop modifier (#12205),Get the value for a single specific CSS Property from the modified element. returns can be specified either as a second parameter or an option.
3397,ui: class-map helper (#12202),"{{class-map}} is used to easily add a list of classes, conditionally, and have them all formatted nicely ready to be printed in a DOM class attribute. For ease, as well as using entries, you can also just provide a simple string without the boolean and that class will always be added."
3398,integrated TLS info,
3399,Apply suggestions from code review,Adding content and feedback from @mikemorris Co-authored-by: Mike Morris mikemorris@users.noreply.github.com
3400,Merge pull request #12109 from hashicorp/dnephin/blocking-query-1,rpc: make blockingQuery easier to read
3401,added more complete spec info and applied feedback,
3402,Update docs for new client daemonset name (#12200),
3403,acl: Remove a call to aclAccessorID,"I missed this on the first pass, we no longer need to look up this ID, because we have it from the Authorizer."
3404,Merge pull request #11221 from hashicorp/dnephin/acl-resolver-5,acl: extract a backend type for the ACLResolverBackend
3405,docs: Clarify docs for providing multiple join addresses,Rephrase the comment about specifying multiple join addresses to clarify that it pertains to joining a single cluster by attempting to contact one or more nodes.
3406,Update Dockerfile,Co-authored-by: Evan Culver eculver@users.noreply.github.com
3407,Merge pull request #11686 from hashicorp/dnephin/remove-demo,Remove demo directory
3408,Update distributed-tracing.mdx with caveat on 128 bit IDs (#12196), Update distributed-tracing.mdx
3409,docs: iptables for TProxy requirement (#12180), docs: iptables  Add iptables requirement  Update website/content/docs/connect/transparent-proxy.mdx  Co-authored-by: Kyle Schochenmaier kschoche@gmail.com Co-authored-by: Kyle Schochenmaier kschoche@gmail.com
3410,URL-encode/decode resource names for HTTP API part 3 (#12103),
3411,trying to fix persistent formatting problems,
3412,Merge pull request #10578 from hashicorp/pairing/contrib-ca-docs,contrib: add first draft of Connect CA developer docs
3413,fixed formattting issues,
3414,Apply suggestions from code review,Co-authored-by: Chris S. Kim ckim@hashicorp.com
3415,acl: extract a backend type for the ACLResolverBackend,This is a small step to isolate the functionality that is used for the ACLResolver from the large Client and Server structs.
3416,added GWclass and GWClassConfig,
3417,contrib: add CA manager states diagram,
3418,fix typo and add a TODO section for the remaining stuff,
3419,Add sequence diagram for leader boot sequence,
3420,fix types and add reference to mesh and auto_config docs,
3421,contrib: add CA operations,
3422,contrib: add description of cert relationship diagram,And links to code
3423,add HL diagram on the ca generation sequence,
3424,contrib: add first draft of Connect CA developer docs,Co-authored-by: Dhia Ayachi dhia@hashicorp.com
3425,Update telemetry page with advice for monitoring boltdb performance (#12141),Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com
3426,docs: Add ingress TLS cipher and version documentation (#12163),Document the new TLS cipher and version parameters that were added to ingress gateways in #11576. Co-authored-by: Mike Morris mikemorris@users.noreply.github.com
3427,"Remove trailing ,'s to keep commit history clean",
3428,Remove testing build trigger,
3429,Add docker target that pulls from releases.hashicorp.com,
3430,Fix broken docker builds,
3431,docs: Service Sync clarify requirements when using Service Mesh (#12177),  docs: Service Sync clarify requirements when using Service Mesh   replace with relative link 
3432,Merge pull request #12178 from hashicorp/RDX-205-add-netcgo-for-darwin-builds,RDX-205 add netcgo tag for darwin builds
3433,xds: fix for delta xDS reconnect bug in LDS/CDS (#12174),"When a wildcard xDS type (LDS/CDS/SRDS) reconnects from a delta xDS stream, prior to envoy 1.19.0 it would populate the ResourceNamesSubscribe field with the full list of currently subscribed items, instead of simply omitting it to infer that it wanted everything (which is what wildcard mode means). This upstream issue was filed in envoyproxy/envoy#16063 and fixed in envoyproxy/envoy#16153 which went out in Envoy 1.19.0 and is fixed in later versions (later refactored in envoyproxy/envoy#16855). This PR conditionally forces LDS/CDS to be wildcard-only even when the connected Envoy requests a non-wildcard subscription, but only does so on versions prior to 1.19.0, as we should not need to do this on later versions. This fixes the failure case as described here: #11833 (comment) Co-authored-by: Huan Wang fredwanghuan@gmail.com"
3434,Remove incorrect usage of url.PathEscape (#12184),"When r.toHTTP is called, http.Request is built with the path already escaped. This removes all calls to url.PathEscape that would have led to double-escaped URLs."
3435,add netcgo tag for darwin builds,
3436,Make systemd EnvironmentFile optional #12176,
3437,Adding changelog entry,
3438,Don't kill service  if envfile isn't present,
3439,Merge branch 'main' of github.com:hashicorp/consul,
3440,added learn tutorial link,
3441,updated introduction and service mesh styling,
3442,Apply suggestions from code review,Co-authored-by: Blake Covarrubias blake@covarrubi.as
3443,pushing up local changes,
3444,docs: Admin Partitions K8s requirement update (#12173),  docs: Admin Partitions K8s requirement update   Update admin-partitions.mdx   Update website/content/docs/enterprise/admin-partitions.mdx   Co-authored-by: mrspanishviking kcardenas@hashicorp.com  extra space  Co-authored-by: mrspanishviking kcardenas@hashicorp.com
3445,Add missing consul.env file for linux packaging (#12159),
3446,Merge pull request #11980 from krastin/krastin/docsday-ui-viz,adding JSON examples to /docs/connect/observability/ui-visualization
3447,fixing K8s notes placement in /docs/connect/observability/ui-visualization,
3448,Add api changes to agent endpoint for part 2 (#12150),
3449,migrating  to  in /docs/connect/observability/ui-visualization,
3450,acl: remove calls to ResolveIdentityFromToken,"We already have an ACLResolveResult, so we can get the accessor ID from it."
3451,acl: remove ResolveTokenToIdentity,By exposing the AccessorID from the primary ResolveToken method we can remove this duplication.
3452,acl: return a resposne from ResolveToken that includes the ACLIdentity,So that we can duplicate duplicate methods.
3453,acl: remove duplicate methods,Now that ACLResolver is embedded we don't need ResolveTokenToIdentity on Client and Server. Moving ResolveTokenAndDefaultMeta to ACLResolver removes the duplicate implementation.
3454,acl: embed ACLResolver in Client and Server,In preparation for removing duplicate resolve token methods.
3455,updated CTS compatibility page to account for vault and all support product versions,
3456,docs: 1.11.0 release notes  (#12138),"  Work in Progress   edit nav to show 1.11   slight updates to release note content   acl changes   add details on bbolt   first draft   add more admin partition details   revert package-lock.json   Update website/content/docs/release-notes/1-11-0.mdx   Co-authored-by: Blake Covarrubias blake@covarrubi.as  Update website/content/docs/release-notes/1-11-0.mdx  Co-authored-by: Blake Covarrubias blake@covarrubi.as  Update website/content/docs/release-notes/1-11-0.mdx  Co-authored-by: Blake Covarrubias blake@covarrubi.as  Update website/content/docs/release-notes/1-11-0.mdx  Co-authored-by: Blake Covarrubias blake@covarrubi.as  Update website/content/docs/release-notes/1-11-0.mdx  Co-authored-by: Blake Covarrubias blake@covarrubi.as  Update website/content/docs/release-notes/1-11-0.mdx  Co-authored-by: Blake Covarrubias blake@covarrubi.as   add sds change, and 1.10 change for tproxy   Small changes   Update website/content/docs/release-notes/1-11-0.mdx   Co-authored-by: mrspanishviking kcardenas@hashicorp.com  Update website/content/docs/release-notes/1-11-0.mdx  Co-authored-by: mrspanishviking kcardenas@hashicorp.com  adding Consul Service mesh term  Co-authored-by: Blake Covarrubias blake@covarrubi.as Co-authored-by: mrspanishviking kcardenas@hashicorp.com"
3457,Updated intro text,Jeff and I re-worded/expanded the text a bit here for the introduction section.
3458,Add missing consul.env file for linux packaging,
3459,Push bindata_assetfs.go to a non-protected branch (#12151),
3460,Generate bindata_assetfs.go (#12146),
3461,update main to reflect it is v1.12.0-dev (#12157),
3462,"docs: Vault Secrets Backend K8s, remove code tabs (#12156)",  Update connect-ca.mdx   Update gossip.mdx   Update index.mdx   Update server-tls.mdx 
3463,docs: Formatting Consul K8s Vault docs (#12148),  Update index.mdx   Update gossip.mdx   Update install-cli.mdx   Update gossip.mdx   Update website/content/docs/k8s/installation/vault/gossip.mdx   Co-authored-by: Bryce Kalow bkalow@hashicorp.com   fix MDX formatting   local changes   adding formatting changes   Update website/content/docs/k8s/installation/vault/connect-ca.mdx   Co-authored-by: mrspanishviking kcardenas@hashicorp.com  adding shell-session to service mesh certs  Co-authored-by: Bryce Kalow bkalow@hashicorp.com Co-authored-by: mrspanishviking kcardenas@hashicorp.com
3464,ui: Enable theming (#12134),plus Themeable icons (#12135)
3465,ui: Tweak some code related meta information (#12117),  ui: Correct some meta info   Encoder doesn't take an argument whereas decoder does   Math.trunc looks like the closest to parseInt but using the correct type   use a dynamic string when setting things on window 
3466,Provide an 'escape-hatch' for website-checker workflow (#11882),
3467,Add support for 'Partition' and 'RetryJoin' (#12126), Adding a 'Partition' and 'RetryJoin' command allows test cases where   one would like to spin up a Consul Agent in a non-default partition to test use-cases that are common when enabling Admin Partition on Kubernetes.
3468,docs: update config entry docs for proxy-defaults to follow new template (#12011),
3469,ci: Add explanation in forbidigo (#12140),
3470,lint: forbid require.New and assert.New (#12139),See #12137
3471,Merge pull request #12137 from hashicorp/testify-no-structs,test: stop using require.New and assert.New from testify
3472,Merge pull request #12024 from hashicorp/docs/update-links-to-avoid-redirects,docs: Avoid redirects by pointing links to new URLs
3473,Fix spelling errors,
3474,Redirect Ambassador tutorial to Learn,
3475,Redirect /platform/k8s/upgrading to new URL,
3476,Redirect old K8s uninstall URLs to new location,
3477,Consolidate /download-tools redirects,
3478,Remove duplicate redirects,
3479,Convert absolute URLs to relative URLs for consul.io,
3480,docs: Avoid redirects by pointing links to new URLs,Avoid HTTP redirects for internal site links by updating old URLs to point to the new location for the target content.
3481,bulk rewrite using this script,"set -euo pipefail  unset CDPATH  cd ""$(dirname ""$0"")""  for f in $(git grep '\brequire := require\.New(' | cut -d':' -f1 | sort -u); do     echo ""=== require: $f ===""     sed -i '/require := require.New(t)/d' $f     # require.XXX(blah) but not require.XXX(tblah) or require.XXX(rblah)     sed -i 's/\brequire\.\([a-zA-Z0-9_]*\)(\([^tr]\)/require.\1(t,\2/g' $f     # require.XXX(tblah) but not require.XXX(t, blah)     sed -i 's/\brequire\.\([a-zA-Z0-9_]*\)(\(t[^,]\)/require.\1(t,\2/g' $f     # require.XXX(rblah) but not require.XXX(r, blah)     sed -i 's/\brequire\.\([a-zA-Z0-9_]*\)(\(r[^,]\)/require.\1(t,\2/g' $f     gofmt -s -w $f done  for f in $(git grep '\bassert := assert\.New(' | cut -d':' -f1 | sort -u); do     echo ""=== assert: $f ===""     sed -i '/assert := assert.New(t)/d' $f     # assert.XXX(blah) but not assert.XXX(tblah) or assert.XXX(rblah)     sed -i 's/\bassert\.\([a-zA-Z0-9_]*\)(\([^tr]\)/assert.\1(t,\2/g' $f     # assert.XXX(tblah) but not assert.XXX(t, blah)     sed -i 's/\bassert\.\([a-zA-Z0-9_]*\)(\(t[^,]\)/assert.\1(t,\2/g' $f     # assert.XXX(rblah) but not assert.XXX(r, blah)     sed -i 's/\bassert\.\([a-zA-Z0-9_]*\)(\(r[^,]\)/assert.\1(t,\2/g' $f     gofmt -s -w $f done"
3482,test: normalize require.New and assert.New syntax,
3483,"docs: Add specific version install guide for consul-k8s CLI, refactor install (#12114)","  docs: Add specific version install guide for consul-k8s CLI   parameterize version   remove extra path   Update k8s-cli.mdx   slight formatting   Update k8s-cli.mdx   specific version details in overall install guide   shell details   Update install.mdx   Update k8s-cli.mdx   Update install.mdx   broken link   typo   Update website/content/docs/k8s/installation/compatibility.mdx   Co-authored-by: mrspanishviking kcardenas@hashicorp.com  Update website/content/docs/k8s/k8s-cli.mdx  Co-authored-by: mrspanishviking kcardenas@hashicorp.com  Update website/content/docs/k8s/k8s-cli.mdx  Co-authored-by: mrspanishviking kcardenas@hashicorp.com  Update website/content/docs/k8s/k8s-cli.mdx  Co-authored-by: mrspanishviking kcardenas@hashicorp.com  Update website/content/docs/k8s/k8s-cli.mdx  Co-authored-by: mrspanishviking kcardenas@hashicorp.com  Update website/content/docs/k8s/k8s-cli.mdx  Co-authored-by: mrspanishviking kcardenas@hashicorp.com  Update website/content/docs/k8s/k8s-cli.mdx  Co-authored-by: mrspanishviking kcardenas@hashicorp.com  Update website/content/docs/k8s/k8s-cli.mdx  Co-authored-by: mrspanishviking kcardenas@hashicorp.com  Update website/content/docs/k8s/k8s-cli.mdx  Co-authored-by: mrspanishviking kcardenas@hashicorp.com  Update website/content/docs/k8s/installation/install.mdx  Co-authored-by: mrspanishviking kcardenas@hashicorp.com   moving install cli commands to separate page   add tabs, wip   add specific distro install guides   add upgrade tabs   build failure   not sure why heading is not working   remove whitespace   add more whitespace   fixes on formatting   remove package lock   add back package lock json   test   latest   remove modified file   adding fix to yum install   create folder for upgrade and move upgrade cli there   revert package-lock   adding upgrade file   Update website/content/docs/k8s/upgrade/upgrade-cli.mdx   Co-authored-by: Thomas Eckert teckert@hashicorp.com  Update website/content/docs/k8s/installation/install-cli.mdx  Co-authored-by: Thomas Eckert teckert@hashicorp.com  Update website/content/docs/k8s/installation/install-cli.mdx  Co-authored-by: Thomas Eckert teckert@hashicorp.com   Update install-cli.mdx   multi-line copy   Co-authored-by: mrspanishviking kcardenas@hashicorp.com Co-authored-by: Thomas Eckert teckert@hashicorp.com"
3484,proxycfg: introduce explicit UpstreamID in lieu of bare string (#12125),"The gist here is that now we use a value-type struct proxycfg.UpstreamID as the map key in ConfigSnapshot maps where we used to use ""upstream id-ish"" strings. These are internal only and used just for bidirectional trips through the agent cache keyspace (like the discovery chain target struct). For the few places where the upstream id needs to be projected into xDS, that's what (proxycfg.UpstreamID).EnvoyID() is for. This lets us ALWAYS inject the partition and namespace into these things without making stuff like the golden testdata diverge."
3485,[OSS] Remove remaining references to master (#11827),
3486,update changelog (#12128),
3487,docs: Link to supported config kinds in config write,Remove statement about service-defaults and proxy-defaults being the only supported configuration entry types. Update the sentence to point to the configuration entry documentation for a list of supported types.
3488,docs: Fix typo in service resolver's RingHashConfig,Fix typo in documentation for service resolver's RingHashConfig. The correct child parameters are MinimumRingSize and MaximumRingSize.
3489,Update version to use 1.11.2 as base (#12127),
3490,Update k8s upgrade docs (#12123),There is no longer the lifecycle sidecar
3491,updated chart to reflect accurate cross app compatibility,
3492,Add GRPC and GRPCUseTLS to api.HealthCheckDefinition (#12108),  Add GRPC to HealthCheckDefinition   add GRPC and GRPCUseTLS 
3493,website: chore: upgrades react-content (#12120),
3494,docs: Document .addr DNS domain in SRV responses (#12056),Document .addr DNS subdomain that can be returned in SRV response records. Co-authored-by: Neena Pemmaraju neena@hashicorp.com
3495,ui: Runtime Injectable Components (#11969), Simplifies how we 'import' our configuration files a little in order to make them more grokable. Starts to exclude files based on explicit configuration rather than convention. Adds the first instance of us being able to select an implementation (of multiple) of a component at runtime.
3496,ui: Fixup KV folder creation then further creation within that folder (#12081),"The fix here is two fold:  We shouldn't be providing the DataSource (which loads the data) with an id when we are creating from within a folder (in the buggy code we are providing the parentKey of the new KV you are creating) Being able to provide an empty id to the DataSource/KV repository and that repository responding with a newly created object is more towards the ""new way of doing forms"", therefore the corresponding code to return a newly created ember-data object. As we changed the actual bug in point 1 here, we need to make sure the repository responds with an empty object when the request id is empty."
3497,docs: Fix typo on NIA architecture page (#10797),Fix typo under Task section. Change 'the dynamic service data' to 'that dynamic service data'.
3498,Merge pull request #12100 from hashicorp/update-gateway-overview-visual,docs: clarify gateways don't connect to public internet
3499,Merge pull request #11898 from hashicorp/docs/service-mesh-config-entries-add-partitions--1.11.0,updated configuration entry params for admin partitions 1.11
3500,applied final feedback,
3501,Apply suggestions from code review,Co-authored-by: Freddy freddygv@users.noreply.github.com
3502,fixed formatting,
3503,Apply suggestions from code review,Co-authored-by: Blake Covarrubias blake@covarrubi.as
3504,docs: removed a question pr marketing's gudiance,
3505,docs: answered the remaining questions,
3506,Merge branch 'main' of github.com:hashicorp/consul into what_service_mesh,
3507,docs: clarify gateways don't connect to internet,Consul's ingress and terminating gateways are meant to enable connectivity within your organizational network between services outside the Consul service mesh and those within. They are not meant to connect to the public internet.
3508,addressed feedback about binary - fixed bad formatting,
3509,addressed feedback about binary,
3510,connect: Upgrade Envoy 1.20 to 1.20.1 (#11895),
3511,Merge pull request #11860 from hashicorp/sm/rename-ecr-tag,Update ECR tag in CRT Builds
3512,docs: move K8s compatability matrix and add more details for compatibility  (#11936),  adding changes to move compat matrix   add back compat matrix   add Vault versions   adding details around monorepo   add note about secrets backend   small refactors   Slight update with OpenShift notes   Add note about OpenShift 4.4.x   Update website/content/docs/k8s/installation/compatibility.mdx   Co-authored-by: Nitya Dhanushkodi nitya@hashicorp.com   small formatting   Removing Consul image column from Vault as secrets backend section   Since we already imply that default consul-k8s image should be used for support  formating changes  Co-authored-by: Nitya Dhanushkodi nitya@hashicorp.com
3513,update serf to v0.9.7 (#12057),  update serf to v0.9.7   add change log   update changelog 
3514,added content to problems a mesh solves section,
3515,Merge pull request #12101 from hashicorp/wan-federation-with-mesh-gateways-networking-visual,docs: show WAN fed with/without mesh gateways
3516,rpc: cleanup exit and blocking condition logic in blockingQuery,"Remove some unnecessary comments around query_blocking metric. The only line that needs any comments in the atomic decrement. Cleanup the block and return comments and logic. The old comment about AbandonCh may have been relevant before, but it is expected behaviour now. The logic was simplified by inverting the err condition."
3517,rpc: extract rpcQueryTimeout method,This helps keep the logic in blockingQuery more focused. In the future we may have a separate struct for RPC queries which may allow us to move this off of Server.
3518,rpc: move the index defaulting to setQueryMeta.,"This safeguard should be safe to apply in general. We are already applying it to non-blocking queries that call blockingQuery, so it should be fine to apply it to others."
3519,rpc: add subtests to blockingQuery test,
3520,rpc: refactor blocking query,"To remove the TODO, and make it more readable. In general this reduces the scope of variables, making them easier to reason about. It also introduces more early returns so that we can see the flow from the structure of the function."
3521,docs: show WAN fed with/without mesh gateways,
3522,Merge pull request #12004 from hashicorp/consul-doc-day-changes-chip,Docs: Updating HTTP API endpoints with CLI equivalent links
3523,docs: add missing link for intention list,
3524,docs: don't treat CLI cmd cross-ref as info box,
3525,docs: Minor grammar change to ingress-gateway.mdx (#11365),"Use plural form of ""listeners"", not possessive form of ""listener's"""
3526,Add new page on multi DC ACLs (#12020),New docs page that details the steps needed to configure ACLS and replication in federated datacenters.
3527,typo fix,
3528,Merge pull request #12087 from hashicorp/cts-tf-1.1,docs/nia: CTS Terraform v1.1 compatibility
3529,api gw vs mesh section added,
3530,api gw vs mesh section added,
3531,Update website for latest version (#12099),Signed-off-by: Mark Anderson manderson@hashicorp.com
3532,Add changelog from latest releases (#12095),
3533,Merge branch 'docs/service-mesh-config-entries-add-partitions--1.11.0' of github.com:hashicorp/consul into docs/service-mesh-config-entries-add-partitions--1.11.0,pre and post docs day merge
3534,applying latest round of feedback,
3535,build(deps): bump github.com/ryanuber/columnize (#12062),Bumps github.com/ryanuber/columnize from 2.1.0+incompatible to 2.1.2+incompatible. - Release notes - Commits  updated-dependencies: - dependency-name: github.com/ryanuber/columnize   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] support@github.com Co-authored-by: dependabot[bot] 49699333+dependabot[bot]@users.noreply.github.com
3536,build(deps): bump github.com/kr/text from 0.1.0 to 0.2.0 (#12063),Bumps github.com/kr/text from 0.1.0 to 0.2.0. - Release notes - Commits  updated-dependencies: - dependency-name: github.com/kr/text   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] support@github.com Co-authored-by: dependabot[bot] 49699333+dependabot[bot]@users.noreply.github.com
3537,docs: Add HCL examples to agent config options,
3538,docs/nia: CTS Terraform v1.1 compatibility,
3539,first intro,
3540,Updating the docs to point out that 1.10.7 should be used instead of 1.10.6 (#12086),
3541,build(deps): bump github.com/mitchellh/pointerstructure (#12072),Bumps github.com/mitchellh/pointerstructure from 1.0.0 to 1.2.1. - Release notes - Commits  updated-dependencies: - dependency-name: github.com/mitchellh/pointerstructure   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] support@github.com Co-authored-by: dependabot[bot] 49699333+dependabot[bot]@users.noreply.github.com
3542,Bump github.com/aws/aws-sdk-go from 1.25.41 to 1.42.34 (#12083),Bumps github.com/aws/aws-sdk-go from 1.25.41 to 1.42.34. - Release notes - Changelog - Commits  updated-dependencies: - dependency-name: github.com/aws/aws-sdk-go   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] support@github.com Co-authored-by: dependabot[bot] 49699333+dependabot[bot]@users.noreply.github.com
3543,Merge branch 'main' of github.com:hashicorp/consul into what_service_mesh,
3544,docs: Show consul intention list in nav sidebar,Ensure consul intention list command is displayed in the navigation sidebar. Fixes #12036
3545,Merge pull request #12074 from hashicorp/agent-docs-updates,Update Web Components for Agent pages
3546,Apply suggestions from code review,
3547,Apply suggestions from code review,Co-authored-by: mrspanishviking kcardenas@hashicorp.com
3548,Merge pull request #11661 from hashicorp/dnephin/ca-remove-one-call-to-active-root,ca: remove one call to Provider.ActiveRoot
3549,Added hcl language to snippet.,
3550,Removed extra comment.,
3551,Missed CodeBlockConfig tag.,
3552,feat: versioned-docs (#11327),This PR introduces versioned docs
3553,Added CodeBlockConfig tags and $ to shell examples missing it.,
3554,Bump github.com/hashicorp/go-memdb from 1.3.1 to 1.3.2 (#11066),Bumps github.com/hashicorp/go-memdb from 1.3.1 to 1.3.2. - Release notes - Changelog - Commits  updated-dependencies: - dependency-name: github.com/hashicorp/go-memdb   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] support@github.com Co-authored-by: dependabot[bot] 49699333+dependabot[bot]@users.noreply.github.com
3555,Bump github.com/hashicorp/go-raftchunking from 0.6.1 to 0.6.2 (#11065),Bumps github.com/hashicorp/go-raftchunking from 0.6.1 to 0.6.2. - Release notes - Commits  updated-dependencies: - dependency-name: github.com/hashicorp/go-raftchunking   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] support@github.com Co-authored-by: dependabot[bot] 49699333+dependabot[bot]@users.noreply.github.com
3556,Merge pull request #12066 from hashicorp/dependabot/go_modules/github.com/hashicorp/go-multierror-1.1.1,build(deps): bump github.com/hashicorp/go-multierror from 1.1.0 to 1.1.1
3557,build(deps): bump github.com/hashicorp/go-multierror from 1.1.0 to 1.1.1,Bumps github.com/hashicorp/go-multierror from 1.1.0 to 1.1.1. - Release notes - Commits  updated-dependencies: - dependency-name: github.com/hashicorp/go-multierror   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] support@github.com
3558,Merge pull request #12059 from hashicorp/dnephin/update-dependabot-config,"remove api, sdk, and ui packages from dependabot"
3559,"remove api, sdk, and ui packages from dependabot","sdk and api are removed because those two are libraries, and updating libraries to the latest dependency versions only serves to make the library harder to use. A library which uses all the latest versions requires every application which uses it to update all its dependencies in a single batch, which is not great. It is applications that need the latest version of dependencies. Remove UI at the request as jc, since javascript libraries are updated so frequently it ends up being too much noise. Also update the number of PRs for gomod to 10, so we have a few more to work with."
3560,Merge pull request #12039 from hashicorp/krastin/docs-telemetry-consulversion,docs: Clarify consul.version telemetry description
3561,docs: Use long form of CLI flags (#12030),Use long form of CLI flags in all example commands. Co-authored-by: mrspanishviking kcardenas@hashicorp.com Co-authored-by: David Yu dyu@hashicorp.com
3562,moved consul api gateway to top of nav hierarchy,
3563,Merge pull request #12049 from hashicorp/term-gateway-vips,OSS: Add virtual IP generation for terminating gateway backed services
3564,CA certificates relationship HL diagram  (#12022),  add diagram and text to explain certificates in consul   use bullet points instead of enumeration   Apply suggestions from code review   Co-authored-by: mrspanishviking kcardenas@hashicorp.com   remove non needed text and improve image   fix cert naming   move section to the right place   rename DC   Co-authored-by: mrspanishviking kcardenas@hashicorp.com
3565,Add changelog note,
3566,Add virtual IP generation for term gateway backed services,
3567,fixes to the params table,
3568,added beta flag to nav link,
3569,missed a cmd block when adding dollar signs,
3570,forgot to update the image version,
3571,applied feedback,
3572,docs: Formatting for Consul K8s uninstall commands (#12031),  docs: Missing $ prior to command for Consul K8s uninstall   re-do numer bullets was mis-numbered   Update uninstall.mdx   simplify wording 
3573,Merge pull request #12044 from vanphan24/patch-3,Update server-tls.mdx
3574,Update memberlist to 0.3.1 (#12042),
3575,Update website/content/docs/k8s/installation/vault/server-tls.mdx,Co-authored-by: mrspanishviking cardenas88karl@gmail.com
3576,Update website/content/docs/k8s/installation/vault/server-tls.mdx,Co-authored-by: mrspanishviking cardenas88karl@gmail.com
3577,Update website/content/docs/k8s/installation/vault/server-tls.mdx,Co-authored-by: mrspanishviking cardenas88karl@gmail.com
3578,Update website/content/docs/k8s/installation/vault/server-tls.mdx,Co-authored-by: mrspanishviking cardenas88karl@gmail.com
3579,Update website/content/docs/k8s/installation/vault/server-tls.mdx,Co-authored-by: mrspanishviking cardenas88karl@gmail.com
3580,Update website/content/docs/k8s/installation/vault/server-tls.mdx,Co-authored-by: mrspanishviking cardenas88karl@gmail.com
3581,Update server-tls.mdx,Added k8s auth role for client Added to Consul yaml file: tls.enableAutoEncrypt: true Fixed name of CA policy: policies=ca-policy
3582,website: upgrade downloads page (#12043),
3583,Fix race with tags (#12041),
3584,Merge pull request #12014 from hashicorp/neenap-patch-1,docs: updated the description of min_quorum
3585,Merge pull request #11984 from hashicorp/msiege2/docs-day,Docs: Update CLI commands to show corresponding HTTP API commands and ACL policies required
3586,ui: Adds a notice for non-primary intention creation (#11985),
3587,ui: Fix up wiring or empty state login button (#11981), ui: Some ACL component documentation (#11982)
3588,Clarify consul.version telemetry description,"The description of consul.version telemetry is not very clear, fixing"
3589,ui: Alter position of dashboard button in the service instance header (#11988),
3590,ui: Allow templateName paths to be relative (#11955),
3591,ui: First pass at writing some data layer related Eng docs (#11203),
3592,Merge pull request #12034 from vanphan24/patch-2,Clarifies external CA config
3593,Clarifies external CA config,"It is not clear that this page is to configure an external CA for Connect CA. Added line to clarify that this page is for configuring external CA's for the Connect CA. For the built-in CA, no config is needed."
3594,Merge branch 'main' into msiege2/docs-day,
3595,docs: Update uninstall to ensure CRDs are deleted (#12021),  docs: Update uninstall to ensure CRDs are deleted   Update website/content/docs/k8s/operations/uninstall.mdx   Co-authored-by: Blake Covarrubias blake@covarrubi.as   add more details around CRD deletion   move around crd deletion to before unsintall   slight wording   move deletion of CRDs to first line   Co-authored-by: Blake Covarrubias blake@covarrubi.as
3596,CLI Link clean-up,
3597,CTS OSS vs Ent docs (#12006),"  Add CTS OSS and Ent feature comparision chart   Mention CTS Ent in intro   Update CTS install page with Ent and tab install options   Clarify local workspaces and add Collaboration row   Oxford comma, rename to Automation Driver, install +ent ctx   Update website/content/docs/nia/installation/install.mdx   Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com  Apply suggestions from code review  Co-authored-by: Melissa Kam 3768460+mkam@users.noreply.github.com Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com  Remove self-hosted row and add TFE explicitly  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com Co-authored-by: Melissa Kam 3768460+mkam@users.noreply.github.com"
3598,Fix races in anti-entropy tests (#12028),
3599,Clarify CTS monitoring of service and instances (#12008), Clarify CTS monitoring of service and instances  Co-authored-by: Michael Wilkerson 62034708+wilkermichael@users.noreply.github.com Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
3600,docs: Fix spelling errors,
3601,Merge pull request #11983 from hashicorp/resolver_examples,docs: added another resolver example for DC and namespace failover
3602,Fixing CircleCI issues and adding Partition CLI links,
3603,ingress: allow setting TLS min version and cipher suites in ingress gateway config entries (#11576),"  xds: refactor ingress listener SDS configuration   xds: update resolveListenerSDS call args in listeners_test   ingress: add TLS min, max and cipher suites to GatewayTLSConfig   xds: implement envoyTLSVersions and envoyTLSCipherSuites   xds: merge TLS config   xds: configure TLS parameters with ingress TLS context from leaf   xds: nil check in resolveListenerTLSConfig validation   xds: nil check in makeTLSParameters* functions   changelog: add entry for TLS params on ingress config entries   xds: remove indirection for TLS params in TLSConfig structs   xds: return tlsContext, nil instead of ambiguous err   Co-authored-by: Chris S. Kim ckim@hashicorp.com   xds: switch zero checks to types.TLSVersionUnspecified   ingress: add validation for ingress config entry TLS params   ingress: validate listener TLS config   xds: add basic ingress with TLS params tests   xds: add ingress listeners mixed TLS min version defaults precedence test   xds: add more explicit tests for ingress listeners inheriting gateway defaults   xds: add test for single TLS listener on gateway without TLS defaults   xds: regen golden files for TLSVersionInvalid zero value, add TLSVersionAuto listener test   types/tls: change TLSVersion to string   types/tls: update TLSCipherSuite to string type   types/tls: implement validation functions for TLSVersion and TLSCipherSuites, make some maps private   api: add TLS params to GatewayTLSConfig, add tests   api: add TLSMinVersion to ingress gateway config entry test JSON   xds: switch to Envoy TLS cipher suite encoding from types package   xds: fixup validation for TLSv1_3 min version with cipher suites   add some kitchen sink tests and add a missing struct tag   xds: check if mergedCfg.TLSVersion is in TLSVersionsWithConfigurableCipherSuites   xds: update connectTLSEnabled comment   xds: remove unsued resolveGatewayServiceTLSConfig function   xds: add makeCommonTLSContextFromLeafWithoutParams   types/tls: add LessThan comparator function for concrete values   types/tls: change tlsVersions validation map from string to TLSVersion keys   types/tls: remove unused envoyTLSCipherSuites   types/tls: enable chacha20 cipher suites for Consul agent   types/tls: remove insecure cipher suites from allowed config   TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 and TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 are both explicitly listed as insecure and disabled in the Go source. Refs https://cs.opensource.google/go/go/+/refs/tags/go1.17.3:src/crypto/tls/cipher_suites.go;l=329-330   types/tls: add ValidateConsulAgentCipherSuites function, make direct lookup map private   types/tls: return all unmatched cipher suites in validation errors   xds: check that Envoy API value matching TLS version is found when building TlsParameters   types/tls: check that value is found in map before appending to slice in MarshalEnvoyTLSCipherSuiteStrings   types/tls: cast to string rather than fmt.Printf in TLSCihperSuite.String()   xds: add TLSVersionUnspecified to list of configurable cipher suites   structs: update note about config entry warning   xds: remove TLS min version cipher suite unconfigurable test placeholder   types/tls: update tests to remove assumption about private map values   Co-authored-by: R.B. Boyer rb@hashicorp.com"
3604,Merge pull request #12002 from hashicorp/kubernetes-service-screenshot,added screenshot of k8s service
3605,Merge pull request #11995 from hashicorp/l7-routing-screenshots,Adding UI screenshots to L7 overview
3606,Correcting CLI links and grammer changes part 2,
3607,Add CTS and API Gateway to docs on tools page,
3608,Update website/content/docs/connect/config-entries/service-splitter.mdx,Co-authored-by: mrspanishviking kcardenas@hashicorp.com
3609,Update website/content/docs/connect/config-entries/service-router.mdx,Co-authored-by: mrspanishviking kcardenas@hashicorp.com
3610,Update website/content/docs/connect/config-entries/service-resolver.mdx,Co-authored-by: mrspanishviking kcardenas@hashicorp.com
3611,pushing for circleci,
3612,Correcting CLI links and grammer changes,
3613,Correcting CLI links and grammer changes,
3614,Editing links and grammer changes,
3615,ui: Adding Partition to topology card (#11805),
3616,"Added some missing ACL info, updated details around some permissions, added missing HTTP API refs",
3617,URL-encode/decode resource names for HTTP API part 2 (#11957),
3618,Fixed absolute links to HTTP apis.,
3619,ui: Ensure the partition is passed through to the request for the SSO auth URL (#11979),  Make sure the mocks reflect the requested partition/namespace   Ensure partition is passed through to the HTTP adapter   Pass AuthMethod object through to TokenSource in order to use Partition   Change up docs and add potential improvements for future   Pass the query partition back onto the response   Make sure the OIDC callback mock returns a Partition   Enable OIDC provider mock overwriting during acceptance testing   Make sure we can enable partitions and SSO post bootup only required   ...for now   Wire up oidc provider mocking   Add SSO full auth flow acceptance tests 
3620,docs: Add CodeBlockConfig to network coordinates page,
3621,Add go-sockaddr examples for multiple interfaces (#11998),  Add overview example for multiple interfaces with go-sockaddr   Include go-sockaddr examples in agent configuration   Add changelog entry   Make suggested changes   Simplify hcl comment   Update link and fix gRPC   Switch index.mdx from Tabs to CodeTabs   Reformat new links for screen readers   Apply suggestions from code review   Co-authored-by: mrspanishviking kcardenas@hashicorp.com  Fix spacing in code block  Co-authored-by: mrspanishviking kcardenas@hashicorp.com
3622,docs: fix yet more references to agent/options,
3623,docs: simplify agent docs slugs,
3624,docs: pr feedback,
3625,chore: rebase updates,
3626,docs: fix external links to agent config pages,
3627,docs: fix agent config links,
3628,docs: arrange agent configuration file parameters into logical groups,
3629,docs: move configuration files content from agent/config/index to agent/config/agent-config-files,
3630,docs: move cli content from agent/config/index to agent/config/agent-config-cli,And add sections for logical groupings of options
3631,docs: move agent/options.mdx into agent/config/index.mdx and add placeholder .mdx files for cli/files,Also update nav data
3632,Merge pull request #12016 from hashicorp/Screenshot-Updates,Consul UI Screenshot Updates
3633,Merge pull request #12017 from hashicorp/doc-changes,Doc changes
3634,updated image,
3635,fixed duplicated image path,
3636,Updated Consul UI Screenshots,
3637,docs: add gateway overview illustration,
3638,Add distributed tracing docs (#12010), Add distributed tracing docs
3639,updated topology image,
3640,updated datacenter dropdown image,
3641,updated topology image,
3642,docs: updated the description of min_quorum,
3643,docs: added gateway overview illustration,
3644,Updated health check docs page with HCL examples (#12000),All healthcheck JSON examples now have HCL equivalents.
3645,Added images to respective pages,Added the images to each respective page on splitting/routing/resolving along with a brief description on how to navigate there.
3646,Merge pull request #11997 from hashicorp/20sr20-patch-1,Adding texts in verify_leader metric
3647,Update website/content/docs/agent/telemetry.mdx,Co-authored-by: mrspanishviking kcardenas@hashicorp.com
3648,Merge pull request #12007 from hashicorp/Amier3-patch-1-1,docs: clarify hcl/cli differences
3649,Document Consul enterprise 1.10.0-1.10.4 forwards incompatibility with 1.11 (#11978),Also fixed a broken link in the 1.10.x upgrade instructions. Co-authored-by: mrspanishviking kcardenas@hashicorp.com
3650,Create options.mdx,Adding a small little note to the top of the 'command line options' section of this page following community feedback in #10628
3651,docs: move the ACL 'Authorization' section,This section was actually about authentication (not authorization). We already have sections in our api and cli docs. This commit removes the section and replaces it with a short paragraph in the Tokens section which links to the existing docs.
3652,Added ACL requirements for CLI commands,
3653,added screenshot of k8s service,
3654,Adding texts in verify_leader metric, Added description providing example case when the metric can go high
3655,updated based on feedback & testing searchability,
3656,Adding UI screenshots to L7 overview,
3657,Updating HTTP API endpoints with CLI equivalent links,
3658,Added HCL examples to service discovery page (#11989),Improved HCL examples in the service discovery docs page
3659,docs: improve ACL system introduction,
3660,Add LastErrorMessage to /acl/replication docs (#11990),
3661,added additonal example for failover within DC and unique namespace,
3662,Apply suggestions from code review,Co-authored-by: Blake Covarrubias blake@covarrubi.as
3663,Merge pull request #11977 from hashicorp/boxofrad/kv-docs-examples,docs: kv doc improvements
3664,removed empty {},
3665,added another example for DC and namespace failover,
3666,Added Corresponding HTTP API Endpoints for every CLI command,
3667,Update website/content/docs/nia/compatibility.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
3668,adding JSON examples to /docs/connect/observability/ui-visualization,
3669,Merge pull request #11930 from hashicorp/docs/admin-partition-updates-1.11.0-misc,added line about wildcard intentions not supported for admin partitions
3670,Incorporate feedback from @jkirschner-hashicorp and @karl-cardenas-coding,
3671,docs: clarify transaction usage and limitations in kv api docs,
3672,docs: call out kv export and the transaction API,
3673,docs: improve kv get examples, Split examples into sections with headers Hide the clipboard on examples as the copied text isn't useful Format inline flags as code using backticks
3674,docs: call out kv import and the transaction API,
3675,docs: improve read/scanability of kv put examples," Split examples into sections with headers Hide the clipboard on examples as the copied text isn't useful Add an example of supplying data in a heredoc Move the flags section to the bottom to clearly separate it from CAS   which also mentions ""flags"" of a different kind Slight re-wording for clarity"
3676,docs: fix placement of warning in kv put example,
3677,Add missing changelog entries (#11973),Added missing entries from: * 1.8.18 * 1.8.19 * 1.9.12 * 1.9.13 * 1.10.5 * 1.10.6 * 1.11.1
3678,applied feedback,
3679,Update website/content/docs/connect/config-entries/mesh.mdx,Co-authored-by: Freddy freddygv@users.noreply.github.com
3680,ui: Remove KV pre-flight auth check (#11968)," ui: Don't even ask whether we are authorized for a KV...  ...just let the actual API tell us in the response, thin-client style.  Add some similar commenting for previous PRs related to this problem"
3681,ui: Ensure service instance data does not get re-written on blocking refresh (#11903),  Add some less fake API data   Rename the models class so as to not be confused with JS Proxies   Rearrange routlets slightly and add some initial outletFor tests   Move away from a MeshChecks computed property and just use a helper   Just use ServiceChecks for healthiness filtering for the moment   Make TProxy cookie configurable   Amend exposed paths and upstreams so they know about meta AND proxy   Slight bit of TaggedAddresses refactor while I was checking for meta etc   Document CONSUL_TPROXY_ENABLE 
3682,ui: [BUGFIX] Fixes an issue when editing intentions from the service > intentions sub tab (#11937),"We recently changed the intentions form to take a full model of a dc rather than just the string identifier (so {Name: 'dc', Primary: true} vs just 'dc' in order to know whether the DC is the primary or not. Unfortunately, we only did this on the global intentions page not the per service intentions page. This makes it impossible to save an intention from the per service intention page (whilst you can still save intentions from the global intention page as normal). The fix here pretty much copy/pastes the approach taken in the global intention edit template over to the per service intention edit template. Tests have been added for creation in the per service intention section, which again are pretty much just copied from the global one, unfortunately this didn't exist previously which would have helped prevent this."
3683,ui: Upgrade AuthDialog (#11913)," Move AuthDialog to use a Glimmer Component plus native named blocks/slots. Unravel the Auth* contextual components, there wasn't a lot of point having them as contextual components and now the AuthDialog (non-view-specific state machine component) can be used entirely separately from the view-specific components (AuthForm and AuthProfile). Move all the ACL related components that are in the main app chrome/navigation (our HashicorpConsul component) in our consul-acls sub package/module (which will eventually be loaded on demand only when ACLs are enabled)"
3684,save,
3685,ui: Fix dark borders on certain visualizations (#11959),
3686,"ca: remove unnecessary var, and slightly reduce cyclo complexity","newIntermediate is always equal to needsNewIntermediate, so we can remove the extra variable and use the original directly. Also remove the activeRoot.ID != newActiveRoot.ID case from an if, because that case is already checked above, and needsNewIntermediate will already be true in that case. This condition now reads a lot better:  Persist a new root if we did not have one before, or if generated a new intermediate."
3687,ca: remove unused provider.ActiveRoot call,"In the previous commit the single use of this storedRoot was removed. In this commit the original objective is completed. The Provider.ActiveRoot is being removed because  the secondary should get the active root from the Consul primary DC,    not the provider, so that secondary DCs do not need to communicate    with a provider instance in a different DC. so that the Provider.ActiveRoot interface can be changed without    impacting other code paths."
3688,ca: extract the lookup of the active primary CA,"This method had only one caller, which always looked for the active root. This commit moves the lookup into the method to reduce the logic in the one caller. This is being done in preparation for a larger change. Keeping this separate so it is easier to see. The storedRootID != primaryRoots.ActiveRootID is being removed because these can never be different. The storedRootID comes from provider.ActiveRoot, the primaryRoots.ActiveRootID comes from the store CARoot from the primary. In both cases the source of the data is the primary DC. Technically they could be different if someone modified the provider outside of Consul, but that would break many things, so is not a supported flow. If these were out of sync because of ordering of events then the secondary will soon receive an update to primaryRoots and everything will be sorted out again."
3689,ca: update godoc,"To clarify what to expect from the data stored in this field, and the behaviour of this function."
3690,ca: remove one call to provider.ActiveRoot,"ActiveRoot should not be called from the secondary DC, because there should not be a requirement to run the same Vault instance in a secondary DC. SignIntermediate is called in a secondary DC, so it should not call ActiveRoot We would also like to change the interface of ActiveRoot so that we can support using an intermediate cert as the primary CA in Consul. In preparation for making that change I am reducing the number of calls to ActiveRoot, so that there are fewer code paths to modify when the interface changes. This change required a change to the mockCAServerDelegate we use in tests. It was returning the RootCert for SignIntermediate, but that is not an accurate fake of production. In production this would also be a separate cert."
3691,ca: remove redundant append of an intermediate cert,"Immediately above this line we are already appending the full list of intermediates. The provider.ActiveIntermediate MUST be in this list of intermediates because it must be available to all the other non-leader Servers.  If it was not in this list of intermediates then any proxy that received data from a non-leader would have the wrong certs. This is being removed now because we are planning on changing the Provider.ActiveIntermediate interface, and removing these extra calls ahead of time helps make that change easier."
3692,ca: only generate a single private key for the whole test case,"Using tracing and cpu profiling I found that the majority of the time in these test cases is spent generating a private key. We really don't need separate private keys, so we can generate only one and use it for all cases. With this change the test runs much faster."
3693,ca: cleanup a test,"Fix the name to match the function it is testing Remove unused code Fix the signature, instead of returning (error, string) which should be (string, error) accept a testing.T to emit errors. Handle the error from encode."
3694,ca: use the new leaf signing lookup func in leader metrics,
3695,docs: Redirect mesh-gateway page to new location,The mesh gateway docs at /docs/connect/gateways/mesh-gateway were moved in #11859 to a new location in order to accommodate the addition of separate instructions for using gateways with admin partitions. This commit redirects the old mesh gateway page to its new location at /connect/gateways/mesh-gateway/service-to-service-traffic-datacenters.
3696,Fix Windows logging to files (#11960),
3697,initializing SEO updates,
3698,api: Return 404 when deregistering a non-existent check (#11950),Update the /agent/check/deregister/ API endpoint to return a 404 HTTP response code when an attempt is made to de-register a check ID that does not exist on the agent. This brings the behavior of /agent/check/deregister/ in line with the behavior of /agent/service/deregister/ which was changed in #10632 to similarly return a 404 when de-registering non-existent services. Fixes #5821
3699,clone the service under lock to avoid a data race (#11940),"  clone the service under lock to avoid a data race   add change log   create a struct and copy the pointer to mutate it to avoid a data race   fix failing test   revert added space   add comments, to clarify the data race. "
3700,fix branch event convention,
3701,upgrade raft to v1.3.3 (#11958),  upgrade raft to v1.3.3   add change log   reword the changelog   Co-authored-by: FFMMM FFMMM@users.noreply.github.com Co-authored-by: FFMMM FFMMM@users.noreply.github.com
3702,Merge pull request #11945 from hashicorp/docs/exported-services-language-issues,tweaks to the language used in the requirements section
3703,fixing build error,
3704,clean up after testing,
3705,Merge pull request #11952 from hashicorp/david-yu-vault-gossip-indent,docs: Fix indentation for gossipEncryption when using Vault secrets backend
3706,docs: Fix indentation for gossipEncryption when using Vault secrets backend,
3707,initial commit/draft of the API gateway docs,
3708,Merge pull request #11918 from hashicorp/dnephin/tob-followup,Fix a few small bugs
3709,changelog,
3710,snapshot: return the error from replyFn,"The only function passed to SnapshotRPC today always returns a nil error, so there's no way to exercise this bug in practice. This change is being made for correctness so that it doesn't become a problem in the future, if we ever pass a different function to SnapshotRPC."
3711,cli: use file mode 0600 when saving a snapshot,So that other users on the machine can not access the snapshot data.
3712,config: correctly capture all errors.,"Some calls to multierror.Append were not using the existing b.err, which meant we were losing all previous errors."
3713,Fix test for ENT (#11946),
3714,tweaks to the language used in the requirements section,
3715,Fix test for ENT (#11941),
3716,reset coalesceTimer to nil as soon as the event is consumed (#11924),  reset coalesceTimer to nil as soon as the event is consumed   add change log   refactor to add relevant test.   fix linter   Apply suggestions from code review   Co-authored-by: Freddy freddygv@users.noreply.github.com  remove non needed check  Co-authored-by: Freddy freddygv@users.noreply.github.com
3717,Ensure consistency with error-handling across all handlers. (#11599),
3718,ui: Add selective no-console eslint rule (#11938),
3719,ui: Only allow partition creation with a single datacenter setup (#11817),
3720,ui: Configure routes in route config rather than classes (#11900),
3721,Updated Formatting on Compatibility Chart,
3722,Merge pull request #10894 from jkirschner-hashicorp/clarify-debug-msg-if-name-used-when-id-needed,Clarify service and health check not found error messages
3723,cli: Show node identities in acl token list output (#11926),Fix the pretty CLI output of consul acl token list so that it properly displays node identities that are associated with a token.
3724,Update glossary.mdx (#10766),Corrected spelling errors
3725,website: Update copy (#11853),
3726,Updating CTS compatability page,Updating compatability chart to refernce all versions of CTS and other HashiCorp products compatability
3727,Merge pull request #11884 from assareh/patch-1,consul pls cert create usage example provided in CLI help shows outdated arguments
3728,Clarify service and check error messages (use ID),"Error messages related to service and check operations previously included the following substrings: - service %q - check %q From this error message, it isn't clear that the expected field is the ID for the entity, not the name. For example, if the user has a service named test, the error message would read 'Unknown service ""test""'. This is misleading - a service with that name does exist, but not with that ID. The substrings above have been modified to make it clear that ID is needed, not name: - service with ID %q - check with ID %q"
3729,Merge pull request #11335 from littlestar642/url-encoded-args,URL-encode/decode resource names for HTTP API
3730,testing: Revert assertion for virtual IP flag (#11932),
3731,ui: Add XML syntax highlighting to key/value editor (#11785),  ui: Add XML syntax highlighting to key/value editor   ui: Make explicit options that are specific to XML for clarity 
3732,ui: Fix URL params decoding (#11931), ui: Move wildcard param decoding to routlet service
3733,ui: Ensure disconnect error doesn't appear w/auth change on some pages (#11905),
3734,added line about wildcard intentions not supported for admin partitions,
3735,proposed language about why there is no .meta.partition field,
3736,docs: Clarification of Vault Consul K8s requirements for Auth Method (#11929),  docs: Clarification of Vault Consul K8s requirements   link back to requirements   Update gossip.mdx   Update index.mdx   add details for K8s auth method requirement   Update gossip.mdx   Update server-tls.mdx   Update connect-ca.mdx   Update gossip.mdx   Update server-tls.mdx   Update website/content/docs/k8s/installation/vault/gossip.mdx   Co-authored-by: mrspanishviking kcardenas@hashicorp.com  Update website/content/docs/k8s/installation/vault/index.mdx  Co-authored-by: mrspanishviking kcardenas@hashicorp.com  Update website/content/docs/k8s/installation/vault/index.mdx  Co-authored-by: mrspanishviking kcardenas@hashicorp.com  Update website/content/docs/k8s/installation/vault/index.mdx  Co-authored-by: mrspanishviking kcardenas@hashicorp.com  Update website/content/docs/k8s/installation/vault/server-tls.mdx  Co-authored-by: mrspanishviking kcardenas@hashicorp.com  Update website/content/docs/k8s/installation/vault/index.mdx  Co-authored-by: mrspanishviking kcardenas@hashicorp.com  Update website/content/docs/k8s/installation/vault/index.mdx  Co-authored-by: mrspanishviking kcardenas@hashicorp.com   Update index.mdx   Update index.mdx   Co-authored-by: mrspanishviking kcardenas@hashicorp.com
3737,Merge branch 'docs/service-mesh-config-entries-add-partitions--1.11.0' of github.com:hashicorp/consul into docs/service-mesh-config-entries-add-partitions--1.11.0,updating local with GH comments
3738,Apply suggestions from code review,typos and minor corrections Co-authored-by: Freddy freddygv@users.noreply.github.com
3739,Merge pull request #11928 from hashicorp/consul-docs-issue,Consul docs issue
3740,removing markdown file for consul docs day issue,
3741,style update,
3742,updating Consul docs day issue template,
3743,Merge pull request #11775 from hashicorp/docs-day-issue,chore: created an issue template for Consul docs day
3744,Merge pull request #11820 from hashicorp/improve-ui-disabled-api-response,http: improve UI not enabled response message
3745,Apply suggestions from code review,Co-authored-by: Jared Kirschner 85913323+jkirschner-hashicorp@users.noreply.github.com
3746,add path escape and unescape to path params,
3747,Merge pull request #11920 from artemkozlenkov/patch-1,Update install.mdx; add port-forward missing namespace flag
3748,add the missing -n consul namespace to k pf ..,
3749,Update install.mdx,add port-forwad missing namespace flag
3750,add enterprise downloads page (#10550),"  add enterprise downloads page   remove beta block   clean up prop repetition, add hcp callout   move around external props pattern   add legal notice to ent page "
3751,Fix integration test with updated file perms (#11916),
3752,"Fix typo, Layer 7 is application layer not network",
3753,Merge pull request #11901 from hashicorp/why_consul,docs: added consul infographic
3754,Merge branch 'main' of github.com:hashicorp/consul into docs/service-mesh-config-entries-add-partitions--1.11.0,pulling main into the this branch
3755,Merge pull request #11796 from hashicorp/dnephin/cleanup-test-server,testing: stop using an old version in testServer
3756,Merge pull request #11877 from hashicorp/docs/acl-changes-admin-partitions-1.11.x,Docs/acl changes admin partitions 1.11.x
3757,Apply suggestions from code review,applied review feedback Co-authored-by: mrspanishviking kcardenas@hashicorp.com Co-authored-by: Freddy freddygv@users.noreply.github.com
3758,website: Upgrade  &  (#11894),  Update @hashicorp/react-subnav   Upgrade to latest/upgrade product-downloads-page 
3759,Merge pull request #11859 from hashicorp/docs/service-mesh-gateways-clarification-for-1.11.0,clarify mesh gateway docs use cases; include admin partition flow
3760,fixed bad md syntax,
3761,applied feedback,
3762,docs: Fix service_id description on agent deregister API,
3763,Merge pull request #11781 from marco-m/private-key-0600-permission,cli: consul tls: create private keys with mode 0600
3764,using svg instead of png,
3765,Add changelog,
3766,updated text to why consul,
3767,added consul infograhic,
3768,usage example given uses outdated arguments,the usage example shows incorrect arguments for ca cert and key. the correct arguments are now -ca and -key
3769,removed unused text area,
3770,Apply suggestions from code review,Co-authored-by: Jared Kirschner 85913323+jkirschner-hashicorp@users.noreply.github.com
3771,Minor doc fixes to K8s CA and Admin Partitions guides,K8s Vault CA config docs:  Re-add filename label on K8s Connect CA config. Remove call to jq when retrieving CA configuration. Clarify connect.ca_config and connect.ca_provider agent configs are only used at cluster initialization.  Admin Partitions tutorial:  Fix Helm client values filename. Use kubectl's template output to base64 decode Consul bootstrap token.
3772,ui: Remove any route level auth checks (#11891),
3773,"ui: Fixup names of Meta for instance search, also add Node (#11774)",
3774,ui: Various empty state improvements/fixups (#11892),  ui: Add login button to per service intentions for zero results   Add login button and consistent header for when you have zero nodes   services doesn't exists use items consequently:   Previous to this fix we would not show a more tailored message for when you empty result set was due to a user search rather than an empty result set straight from the backend   Fix error > @error in ErrorState plus code formatting and more docs   Changelog 
3775,"ui: Check for intention ACL resources, not intentions ACL resources (#11880)","  ui: Check for intention ACL resources, not intentions ACL resources   ui: Flip the test assertion to see the create button temporarily "
3776,ui: Fix up missing policy delete warning modal (#11868),Fixes an issue where the policy detail page delete button would disappear when clicking rather than showing a modal confirmation
3777,updated configuration entry params for admin partitions 1.11,
3778,Document /v1/agent/force-leave prune and wan params (#11886),Document prune parameter added in #6571 and wan parameter added in 11722. Co-authored-by: Freddy freddygv@users.noreply.github.com
3779,Homepage use case redesign (#11728),  init homepage   adds tutorials   update subnav   adds intro background   add offerings   adds in practice cta   include radial gradient   cleanup gradient   Fix learn more button display   include use case pages   connect subnav menu items   extract in practice section for reuse   use Products type   fix type error   add neutral option   rework cta logic   Fix links map   fix use case path   updates accent method   fix button prop usage   refactor customer case study   refactor case studies component   cleanup margin   refactor data props   fix offering cta   spacing updates and introduce intro component   adds intro interface   removes footer border   fix intro description color   add revalidate code to homepage   cleanup unused imports   bump subnav   makes stats optional   adjust border radius based on customer story   redirect /home to homepage   fix: turtorials link   fix: logo alignment   fix: section background color   feat: home reorder and tuts and docs links   fix: flush padding   formatting   feat: sort use cases in nav   fix: card overflow   fix: adjust overflow method   fix: padding on desktop   fix: card container overflow padding on mobile   fix: intro cta conditional   fix: simplify conditional   fix: customer logo sizing   cleanup old data   accept isInternalLink as arg   remove chunk   fix: isInternalLink usage   fix: isInternalLink prop usage   fix: add lang to document   init homepage   adds tutorials   add offerings   cleanup unused imports   bump subnav   fix: flush padding   formatting   fix: intro cta conditional   fix: simplify conditional   cleanup old data   add consul on kubernetes to menu items   add use case redirect   Add use case redirect 
3780,website: Update version.js (#11897),
3781,add a metrics test check GH action (#11536),Signed-off-by: FFMMM FFMMM@users.noreply.github.com
3782,docs: clarification on Limitations for Vault Secrets backend (#11885),  docs: clarification on Limitations for Vault Secrets backend   address typo in CLI docs   Update index.mdx   Update index.mdx 
3783,docs: ExportedServices YAML correction (#11883),  docs: ExportedServices YAML correction   Add enterprise alert to CRD index 
3784,Remove beta notice from cli doc (#11878),
3785,Merge pull request #11881 from hashicorp/david-yu-fix-typo,docs: fix ExportedServices typo on example
3786,additional clarification on upstream configurations for x-dc and x-partition traffic,
3787,docs: fix ExportedServices typo on example,Fix typlo
3788,updating the alpine version,
3789,testing out turining go modules false,
3790,Merge pull request #11879 from hashicorp/david-yu-exported-services,docs: add Exported Services to overview
3791,docs: remove BETA from Consul K8s CLI (#11863), docs: remove BETA from Consul K8s CLI
3792,add enterprise inline,
3793,docs: add exported services to overview,
3794,ACL system docs updates re: admin partitions in Consul v1.11.0,
3795,docs: fix typo in KV store API,
3796,website: Disable alert banner (#11869),
3797,docs: Add admin partitions to Enterprise Overview page (#11871),
3798,enabling security scan for CRT,
3799,docs: Remove BETA from Admin Partitions (#11862),
3800,docs: ExportedServices CRD typo and change heading for services (#11845),
3801,docs: Admin Partitions image bump to GA (#11846), docs: Admin Partitions image bump to GA Bump to the right versions for Consul 1.11.1
3802,Update ECR tag in CRT Builds,This updates the ECR tag to the correct naming convention. Signed-off-by: Scott Macfarlane smacfarlane@hashicorp.com
3803,clarify mesh gateway docs use cases; include admin partition flow,
3804,docs: consul-vault kubernetes integration docs (#11766)," Add documentation for the consul with vault integration that covers Server TLS, Connect CA and gossip encryption  Co-authored-by: David Yu dyu@hashicorp.com Co-authored-by: Iryna Shustava iryna@hashicorp.com"
3805,Merge pull request #11855 from hashicorp/eculver/fix-changelog,
3806,Merge pull request #11854 from hashicorp/kisunji/updatenet,
3807,Move changelog entry to match this PR,
3808,Remove compressed changelog entries,
3809,Resolve conflicts,
3810,Update golang.org/x/net to address CVE-2021-44716,
3811,Update golang.org/x/net to address CVE-2021-44716,
3812,Merge pull request #11844 from hashicorp/support-darwin-arm64,
3813,website: fix algolia indexing (#11413),
3814,ui: Fixes an issue with the version footer when scrolling (#11850),
3815,Removing test branch,
3816,Website fixups for admin partitions (#11842), Website fixups for admin partitions  Signed-off-by: Mark Anderson manderson@hashicorp.com
3817,Add darwin arm64 suport,
3818,Merge pull request #11778 from hashicorp/docs/admin-partitions-rc-updates,Updates for admin partitions to include changes for RC
3819,applying final feedback,
3820,Merge pull request #11838 from hashicorp/partitions-dns-docs,docs: Update dns sections for partition query format and virtual IPs
3821,Update product version extraction for CRT (#11843),
3822,Update wording of partition format section,
3823,Merge pull request #11837 from hashicorp/docs/upgrade-specific,
3824,Update website/content/docs/upgrading/upgrade-specific.mdx,Co-authored-by: mrspanishviking kcardenas@hashicorp.com
3825,deprecate another endpoint,
3826,also update for dns_prefer_namespace deprecation,
3827,docs: version specific upgrade content for 1.11.0,
3828,docs: Add API docs for Admin Partitions (#11834),
3829,docs: document partition config flag (#11840),
3830,docs: Update discovery chain compilation results with partition fields (#11835),
3831,Merge pull request #11839 from hashicorp/export-config-name-docs,docs: Update exported-services page to include required Name field
3832,fixed merge conflicts,
3833,docs: Update exported-services page to include required Name field,
3834,trying to fix merge conflicts and apply feedback,
3835,Apply suggestions from code review,Apply suggestions from code review Co-authored-by: Ashwin Venkatesh ashwin@hashicorp.com Co-authored-by: David Yu dyu@hashicorp.com
3836,Merge branch 'docs/admin-partitions-rc-updates' of github.com:hashicorp/consul into docs/admin-partitions-rc-updates,applying feedback on admin partitions rc docs
3837,docs: add virtual IP section to DNS docs,
3838,applying feedback on rc admin partition documentation,
3839,docs: Update namespaced DNS services section for partitions format,
3840,Merge pull request #11164 from hashicorp/docs/ingress-sds,Document SDS for ingress gateways
3841,Merge pull request #11829 from hashicorp/ap/upstream-metrics,
3842,Update golden files,
3843,Get partition label from upstream metrics,
3844,Merge pull request #11826 from hashicorp/proxycfg/valid-upstreams,[OSS] Handle discovery chain race
3845,Add changelog entry,
3846,Purge chain if it shouldn't be there,
3847,additional test fixes,
3848,Account for new upstreams constraint in tests,
3849,Check ingress upstreams when gating chain watches,
3850,Use ptr receiver in all Upstream methods,
3851,Avoid storing chain without an upstream,
3852,Clean up chains separately from their watches,
3853,Validate chains are associated with upstreams,Previously we could get into a state where discovery chain entries were not cleaned up after the associated watch was cancelled. These changes add handling for that case where stray chain references are encountered.
3854,Store intention upstreams in snapshot,
3855,proxycfg: ensure all of the watches are canceled if they are cancelable (#11824),
3856,Merge pull request #11818 from hashicorp/improve-url-not-found-response,http: improve 404 Not Found response message
3857,proxycfg: use external addresses in tproxy when crossing partition boundaries (#11823),
3858,http: improve 404 Not Found response message,"When a URL path is not found, return a non-empty message with the 404 status code to help the user understand what went wrong. If the URL path was not prefixed with '/v1/', suggest that may be the cause of the problem (which is a common mistake)."
3859,Use anonymousToken when querying by secret ID (#11813),"Co-authored-by: Chris S. Kim ckim@hashicorp.com Co-authored-by: Dan Upton daniel@floppy.co This query has been incorrectly querying by accessor ID since New ACLs were added. However, the legacy token compat allowed this to continue to work, since it made a fallback query for the anonymousToken ID. PR #11184 removed this legacy token query, which means that the query by accessor ID is now the only check for the anonymous token's existence. This PR updates the GetBySecret call to use the secret ID of the token."
3860,various partition related todos (#11822),
3861,http: improve UI not enabled response message,Response now clearly indicates: - the UI is disabled - how to enable the UI
3862,ui: Add version information back into the footer (#11803),
3863,ui: Disable setting wildcard partitions for intentions (#11804),
3864,ui: Change the URL prefix of partitions from - to _ (#11801),
3865,ui: Fix a problem showing the default part in a non-primary (#11800),"When switching to a non-primary datacenter we should only show the word 'default' in place of the partition menu, this fixes up a bug preventing that from happening due to erroneous if/let nesting"
3866,ui: Prefer shorter partition word in certain places vs Admin Partition (#11772),
3867,ui: Ensure we show a special readonly page for intentions (#11767),
3868,ui: reuse BucketList for intention view pages (#11765),
3869,Merge pull request #11812 from hashicorp/metrics-ui-acls,oss: use wildcard partition in metrics proxy ui endpoint
3870,Merge pull request #11798 from hashicorp/vip-goroutine-check,leader: move the virtual IP version check into a goroutine
3871,acl: use wildcard partition in metrics proxy ui endpoint,
3872,Merge pull request #11809 from hashicorp/vip-counter-fix,state: fix freed VIP table id index
3873,state: fix freed VIP table id index,
3874,Exit before starting the vip check routine if possible,
3875,Update CI and release go versions to 1.17.5 (#11799),
3876,connect: update SNI label extraction to support new taxonomy for partitions (#11786),
3877,ui: Change partitions to expect [] from the API (#11791),
3878,Update stray ref to old admin-partition cmd (#11797),
3879,testing: Deprecate functions for creating a server.,These helper functions actually end up hiding important setup details that should be visible from the test case. We already have a convenient way of setting this config when calling newTestServerWithConfig.
3880,testing: remove old config.Build version,"DefaultConfig already sets the version to version.Version, so by removing this our tests will run with the version that matches the code."
3881,leader: move the virtual IP version check into a goroutine,
3882,"[sync ent] increase segment max limit to 4*64, make configurable (#1424) (#11795)","  commit b6eb27563e747a78b7647d2b5da405e46364cc46 Author: FFMMM FFMMM@users.noreply.github.com Date:   Thu Dec 9 13:53:44 2021 -0800 increase segment max limit to 4*64, make configurable (#1424) Signed-off-by: FFMMM FFMMM@users.noreply.github.com   fix: rename ent changelog file   Signed-off-by: FFMMM FFMMM@users.noreply.github.com"
3883,update changelog for ent feature (#11794),
3884,Various Boltdb/Raft Documentation Updates (#11793), Documenting the new raft_boltdb configuration options Add documentation around new boltdb metrics. Correct documentation for the consul.raft.fsm.apply metric
3885,Improved performance of the version.GetHumanVersion function by 50% on memory allocation. (#11507),Co-authored-by: Evan Culver eculver@hashicorp.com
3886,Add partitions to prettyformatters (#11789),
3887,Merge pull request #11780 from hashicorp/dnephin/ca-test-vault-in-secondary,ca: improve test coverage for RenewIntermediate
3888,Update alert banner (#11790),
3889,agent: ensure service maintenance checks for matching partitions ahead of other errors (#11788),This matches behavior in most other agent api endpoints.
3890,ui: Amends to Routing visualization for partitions (#11747),  Update disco fixtures now we have partitions   Add virtual-admin-6 fixture with partition 'redirects' and failovers   Properly cope with extra partition segment for splitters and resolvers   Make 'redirects' and failovers look/act consistently   Fixup some unit tests 
3891,ui: Fixup notifications for tokens using and topology intention saving (#11763),
3892,ui: Make 'dangerous' buttons have white text even in dark theme (#11756),
3893,update docs (#11784),
3894,fix misleading errors on vault shutdown,
3895,ca: prune some unnecessary lookups in the tests,
3896,ca: remove duplicate WaitFor function,
3897,ca: fix flakes in RenewIntermediate tests,"I suspect one problem was that we set structs.IntermediateCertRenewInterval to 1ms, which meant that in some cases the intermediate could renew before we stored the original value. Another problem was that the 'wait for intermediate' loop was calling the provider.ActiveIntermediate, but the comparison needs to use the RPC endpoint to accurately represent a user request. So changing the 'wait for' to use the state store ensures we don't race. Also moves the patching into a separate function. Removes the addition of ca.CertificateTimeDriftBuffer as part of calculating halfTime. This was added in a previous commit to attempt to fix the flake, but it did not appear to fix the problem. Adding the time here was making the tests fail when using the shared patch function. It's not clear to me why, but there's no reason we should be including this time in the halfTime calculation."
3898,ca: improve RenewIntermediate tests,Use the new verifyLearfCert to show the cert verifies with intermediates from both sources. This required using the RPC interface so that the leaf pem was constructed correctly. Add IndexedCARoots.Active since that is a common operation we see in a few places.
3899,ca: add a test for Vault in secondary DC,
3900,ca: Add CARoots.Active method,Which will be used in the next commit.
3901,acl: ensure that the agent recovery token is properly partitioned (#11782),
3902,Merge pull request #11721 from hashicorp/dnephin/ca-export-fsm-operation,ca: use the real FSM operation in tests
3903,ca: use the real FSM operation in tests,"Previously we had a couple copies that reproduced the FSM operation. These copies introduce risk that the test does not accurately match production. This PR removes the test versions of the FSM operation, and exports the real production FSM operation so that it can be used in tests. The consul provider tests did need to change because of this. Previously we would return a hardcoded value of 2, but in production this value is always incremented."
3904,test: test server should auto cleanup (#11779),
3905,cli: consul tls: create private keys with mode 0600,This applies to consul tls ca create consul tls cert create -client consul tls cert create -server Closes: #11741
3906,rpc: Unset partition before forwarding to remote datacenter (#11758),
3907,Merge branch 'main' into docs/admin-partitions-rc-updates,
3908,Updates for admin partitions to include changes for RC,
3909,Add v1.11.0-rc changelog entry (#11776),
3910,chore: created an issue template for Consul docs day,
3911,docs: add missing verb,This change adds a missing verb at the end of the sentence.
3912,Merge pull request #10895 from bigmikes/serve-panic-recovery,"grpc, xds: recovery middleware to return and log error in case of panic"
3913,Merge remote-tracking branch 'origin/main' into serve-panic-recovery,
3914,Merge pull request #11769 from hashicorp/cts-typo-fix,docs/nia: Fix typo in CTS CLI options
3915,website: Upgrade  to latest (#11760),
3916,Merge pull request #11770 from hashicorp/move-dns-alt-domain-section,improve location of DNS alt domain docs section
3917,dependabot : add standard and hashicorp labels (#11676),
3918,improve location of DNS alt domain docs section,
3919,Rename Master and AgentMaster fields in config protobuf (#11764),
3920,docs/nia: Fix typo in CTS CLI options,
3921,Godocs updates for catalog endpoints (#11716),
3922,Transition all endpoint tests in agent_endpoint_test.go to go through ServeHTTP (#11499),
3923,"Remove references to ""master"" ACL tokens in tests (#11751)",
3924,Rename ACLMasterToken => ACLInitialManagementToken (#11746),
3925,agent/token: rename agent_master to agent_recovery (internally) (#11744),
3926,Merge pull request #11757 from hashicorp/ap/discovery-chain,
3927,return the max,
3928,sync back 1.11.0-beta3 changelogs (#11759),
3929,fix test failures,
3930,Add changelog entry,
3931,Update api module and decoding tests,
3932,Remove support for failover to partition,Failing over to a partition is more siimilar to failing over to another datacenter than it is to failing over to a namespace. In a future release we should update how localities for failover are specified. We should be able to accept a list of localities which can include both partition and datacenter.
3933,Allow cross-partition references in disco chain, Add partition fields to targets like service route destinations Update validation to prevent cross-DC + cross-partition references Handle partitions when reading config entries for disco chain Encode partition in compiled targets
3934,light refactors to support making partitions and serf-based wan federation are mutually exclusive (#11755),
3935,ui: Improve error messaging for when we can't make a slug (#11697),"Ember Data requires the usage of unique ID to identify its records in the frontend, and we use a centralized function to do that for all records. There are occasions where it can't make an ID, usually this is a bug our side, but there are occasions where Consul might not be giving us the data needed to make an ID, for example if a Service comes down to us with a blank Name. Whilst this isn't a problem to be fixed in the UI, I thought we could make an improvement here by giving a little more info as to why the UI cannot make a unique ID. This is currently semi-hidden away in the javascript console, but we could potentially surface this in the UI itself as a larger task. I figured this smaller task could help folks in the meantime if they hit upon this as they might open up the javascript console themselves to see whats up and they'd at least get this extra clue."
3936,ui: remove old head.hbs file we don't need (#11678),
3937,ui: Stop tables overlapping with their headers when scrolling (#11670),
3938,areas: make the gRPC server tracker network area aware (#11748),"Fixes a bug whereby servers present in multiple network areas would be properly segmented in the Router, but not in the gRPC mirror. This would lead servers in the current datacenter leaving from a network area (possibly during the network area's removal) from deleting their own records that still exist in the standard WAN area. The gRPC client stack uses the gRPC server tracker to execute all RPCs, even those targeting members of the current datacenter (which is unlike the net/rpc stack which has a bypass mechanism). This would manifest as a gRPC method call never opening a socket because it would block forever waiting for the current datacenter's pool of servers to be non-empty."
3939,Merge pull request #11739 from hashicorp/ap/exports-rename,
3940,ui: Adds basic support for partition exports to Service listings (#11702),Also:   ui: Add cross partition linking and rollout BucketList (#11712)   ui: Add exported service partition to the source filter menu (#11727) 
3941,ui: Adds partition support to Service and Node Identity templates (#11696),
3942,ui: Adds basic support for the Routing tab viz with partitions (#11679),
3943,ui: Add documentation link for partitions (#11668),
3944,Clean up additional refs to partition exports,
3945,Merge pull request #11738 from hashicorp/ap/tproxy,
3946,types: add types/tls.go for strongly-typed TLS versions and cipher suites (#11645),"types: add TLS constants types: distinguish between human and Envoy serialization for TLSVersion constants types: add DeprecatedAgentTLSVersions for backwards compatibility types: add methods for printing TLSVersion as strings types: add TLSVersionInvalid error value types: add a basic test for TLSVersion comparison types: add TLS cihper suite mapping using IANA constant names and values types: adding ConsulAutoConfigTLSVersionStrings changelog: add entry for TLSVersion and TLSCipherSuite types types: initialize TLSVerison constants starting at zero types: remove TLSVersionInvalid < 0 test types: update note for ConsulAutoConfigTLSVersionStrings types: programmatically invert TLSCipherSuites for HumanTLSCipherSuiteStrings lookup map Co-authored-by: Dan Upton daniel@floppy.co types: add test for TLSVersion zero-value types: remove unused EnvoyTLSVersionStrings types: implement MarshalJSON for TLSVersion types: implement TLSVersionUnspecified as zero value types: delegate TLS.MarshalJSON to json.Marshal, use ConsulConfigTLSVersionStrings as default String() values Co-authored-by: Dan Upton daniel@floppy.co"
3947,Merge pull request #11737 from hashicorp/ap/ap-rename,
3948,Add changelog entry,
3949,Move exported-services docs based on new name,
3950,Rename partition-exports to exported-services,Using a name less tied to partitions gives us more flexibility to use this config entry in OSS for exports between datacenters/meshes.
3951,Merge pull request #11682 from hashicorp/ap/renames,
3952,Add changelog entry,
3953,Update intention topology to use new table,
3954,Avoid updating default decision from wildcard ixn,"Given that we do not allow wildcard partitions in intentions, no one ixn can override the DefaultAllow setting. Only the default ACL policy applies across all partitions."
3955,Add a new table to query service names by kind,"This table purposefully does not index by partition/namespace. It's a global view into all service names. This table is intended to replace the current serviceListTxn watch in intentionTopologyTxn. For cross-partition transparent proxying we need to be able to calculate upstreams from intentions in any partition. This means that the existing serviceListTxn function is insufficient since it's scoped to a partition. Moving away from that function is also beneficial because it watches the main ""services"" table, so watchers will wake up when any instance is registered or deregistered."
3956,Update listener generation to account for consul VIP,
3957,Add changelog entry,
3958,Clarify feature name in partition docstring,
3959,Rename internal AdminPartition references,"This commit finishes replacing references to ""AdminPartition"" with ""Partition"". This now matches other uses in the codebase such as the CLI command, HTTP API, and the query parameter."
3960,Fix integ test,
3961,Merge pull request #11680 from hashicorp/ap/partition-exports-oss,
3962,Add changelog entry,
3963,internal: support ResultsFilteredByACLs flag/header (#11643),
3964,query: support ResultsFilteredByACLs in query list endpoint (#11620),
3965,port oss changes (#11736),
3966,Merge pull request #11720 from hashicorp/bbolt,
3967,fedstate: support ResultsFilteredByACLs in ListMeshGateways endpoint (#11644),
3968,catalog: support ResultsFilteredByACLs flag/header (#11594),
3969,coordinate: support ResultsFilteredByACLs flag/header (#11617),
3970,Merge pull request #11458 from kbabuadze/docs-altDomain-section,added Alternative Domain section to dns page in docs
3971,sessions: support ResultsFilteredByACLs flag/header (#11606),
3972,txn: support ResultsFilteredByACLs flag in Read endpoint (#11632),
3973,agent: support X-Consul-Results-Filtered-By-ACLs header in agent-local endpoints (#11610),
3974,sessions partitioning tests (#11734),  state: port KV and Tombstone tables to new pattern   go fmt'ed   handle wildcards for tombstones   Fix graveyard ent vs oss   fix oss compilation error   add partition to tombstones and kv state store indexes   refactor to use indexWithEnterpriseIndexable   Apply suggestions from code review   Co-authored-by: Chris S. Kim ckim@hashicorp.com Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com   add singleValueID implementation assertions   partition tableSessions table   fix sessions to use UUID and fix prefix index   fix oss build   clean up unused functions   fix oss compilation   add a partition indexer for sessions   Fix oss to not have partition index   fix oss tests   remove unused operations_ent.go and operations_oss.go func   remove unused const   convert IndexID of session_checks table   convert indexSession of session_checks table   convert indexNodeCheck of session_checks table   partition indexID and indexSession of tableSessionChecks   fix oss linter   fix review comments   remove partition for Checks as it's always use the session partition   fix tests   fix tests   do not namespace nodeChecks index   Co-authored-by: Daniel Nephin dnephin@hashicorp.com Co-authored-by: Chris S. Kim ckim@hashicorp.com Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com
3975,intention: support ResultsFilteredByACLs flag/header (#11612),
3976,update connect ca leaf endpoint docs (#11723), update connect ca leaf endpoint docs  Signed-off-by: FFMMM FFMMM@users.noreply.github.com   pr feedback   Update website/content/api-docs/agent/connect.mdx   Co-authored-by: Chris S. Kim ckim@hashicorp.com Co-authored-by: Chris S. Kim ckim@hashicorp.com
3977,Cross port of ent #1383 (#11726),"Cross port of ent #1383 ""Reject non-default datacenter when making partitioned ACLs"" On the OSS side this is a minor refactor to add some more checks that are only applicable to enterprise code. Signed-off-by: Mark Anderson manderson@hashicorp.com"
3978,config: support ResultsFilteredByACLs in list/list all endpoints (#11621),
3979,event: support X-Consul-Results-Filtered-By-ACLs header in list (#11616),
3980,kv: support ResultsFilteredByACLs in list/list keys (#11593),
3981,health: support ResultsFilteredByACLs flag/header (#11602),
3982,docs: X-Consul-Results-Filtered-By-ACLs header (#11629),
3983,Groundwork for exposing when queries are filtered by ACLs (#11569),
3984,website: bump deps to fix print styles (#11392),  website: bump deps to fix print styles   website: remove unnecessary print styles   fix: hide hashicorp header   fix: hashi-stack-menu print selector 
3985,Merge pull request #11725 from hashicorp/dns-virtual-ips,dns: add endpoint for querying service virtual IPs
3986,dns: add endpoint for querying service virtual IPs,
3987,Merge pull request #11724 from hashicorp/service-virtual-ips,oss: add virtual IP generation for connect services
3988,Add changelog note,
3989,consul: add virtual IP generation for connect services,
3990,agent: add variation of force-leave that exclusively works on the WAN (#11722),Fixes #6548
3991,added hcl,
3992,Add the changelog entry for bbolt modifications,
3993,Emit raft-boltdb metrics,
3994,config: add NoFreelistSync option,Conflicts: agent/config/testdata/TestRuntimeConfig_Sanitize-enterprise.golden agent/consul/server.go
3995,Use raft-boltdb/v2,
3996,Merge pull request #11672 from hashicorp/dnephin/ca-fix-signing-key-id-post-update,ca: set the correct SigningKeyID after config update with Vault provider
3997,ca: set the correct SigningKeyID after config update with Vault provider,"The test added in this commit shows the problem. Previously the SigningKeyID was set to the RootCert not the local leaf signing cert. This same bug was fixed in two other places back in 2019, but this last one was missed. While fixing this bug I noticed I had the same few lines of code in 3 places, so I extracted a new function for them. There would be 4 places, but currently the InitializeCA flow sets this SigningKeyID in a different way, so I've left that alone for now."
3998,Merge pull request #11713 from hashicorp/dnephin/ca-test-names,ca: make test naming consistent
3999,Merge pull request #11671 from hashicorp/dnephin/ca-fix-storing-vault-intermediate,ca: fix storing the leaf signing cert with Vault provider
4000,Merge pull request #11677 from hashicorp/dnephin/freeport-interface,sdk: use t.Cleanup in freeport and remove unnecessary calls
4001,Update website/content/docs/discovery/dns.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
4002,Update website/content/docs/discovery/dns.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
4003,Update website/content/docs/discovery/dns.mdx,Co-authored-by: Jared Kirschner 85913323+jkirschner-hashicorp@users.noreply.github.com
4004,Update website/content/docs/discovery/dns.mdx,Co-authored-by: Jared Kirschner 85913323+jkirschner-hashicorp@users.noreply.github.com
4005,ca: make test naming consistent,"While working on the CA system it is important to be able to run all the tests related to the system, without having to wait for unrelated tests. There are many slow and unrelated tests in agent/consul, so we need some way to filter to only the relevant tests. This PR renames all the CA system related tests to start with either TestCAMananger for tests of internal operations that don't have RPC endpoint, or TestConnectCA for tests of RPC endpoints. This allows us to run all the test with: go test -run 'TestCAMananger|TestConnectCA' ./agent/consul  The test naming follows an undocumented convention of naming tests as follows: Test[<struct name>_]<function name>[_<test case description>]  I tried to always keep Primary/Secondary at the end of the description, and Vault has to be in the middle because of our regex to run those tests as a separate CI job. You may notice some of the test names changed quite a bit. I did my best to identify the underlying method being tested, but I may have been slightly off in some cases."
4006,add MustRevalidate flag to connect_ca_leaf cache type; always use on non-blocking queries (#11693), always use MustRevalidate on non-blocking queries for connect ca leaf  Signed-off-by: FFMMM FFMMM@users.noreply.github.com  Update agent/agent_endpoint_test.go  Co-authored-by: Daniel Nephin dnephin@hashicorp.com  pr feedback  Signed-off-by: FFMMM FFMMM@users.noreply.github.com Co-authored-by: Daniel Nephin dnephin@hashicorp.com
4007,ca: make getLeafSigningCertFromRoot safer,"As a method on the struct type this would not be safe to call without first checking c.isIntermediateUsedToSignLeaf. So for now, move this logic to the CAMananger, so that it is always correct."
4008,ca: fix stored CARoot representation with Vault provider,"We were not adding the local signing cert to the CARoot. This commit fixes that bug, and also adds support for fixing existing CARoot on upgrade. Also update the tests for both primary and secondary to be more strict. Check the SigningKeyID is correct after initialization and rotation."
4009,Rename agent_master ACL token in the API and CLI (#11669),
4010,fix changelog file name (#11710),
4011,add changelog (#11708),
4012,Rename master and agent_master ACL tokens in the config file format (#11665),
4013,ENT to OSS sync (#11703),
4014,auto-config: ensure the feature works properly with partitions (#11699),
4015,Update issue templates to link to consul-k8s instead of consul-helm (#11701),
4016,Reformatting suggestions from review,
4017,Apply suggestions from code review,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
4018,Apply suggestions from code review,Co-authored-by: mrspanishviking kcardenas@hashicorp.com
4019,Add documentation for SDS support in ingress gateways.,
4020,docs: community tools - add string2files consul-template plugin (#11675),
4021,ui: Don't cache event sources following a 401 (#11681),
4022,ui: Refactor KV and Lock Sessions following partitions update (#11666),"This commit uses all our new ways of doing things to Lock Sessions and their interactions with KV and Nodes. This is mostly around are new under-the-hood things, but also I took the opportunity to upgrade some of the CSS to reuse some of our CSS utils that have been made over the past few months (%csv-list and %horizontal-kv-list). Also added (and worked on existing) documentation for Lock Session related components."
4023,ui: Don't check global session permissions for a single session (#11657),
4024,ui: Add Service.Partition as available variable for dashboard urls (#11654),
4025,ui: Don't show policy datacenter selector for non-default partitions (#11656),
4026,ui: Move nspace CRUD to use the same approach as partitions (#11633),"This sounds a bit 'backwards' as the end goal here is to add an improved UX to partitions, not namespaces. The reason for doing it this way is that Namespaces already has a type of 'improved UX' CRUD in that it has one to many relationship in the form when saving your namespaces (the end goal for partitions). In moving Namespaces to use the same approach as partitions we:  Ensure the new approach works with one-to-many forms. Test the new approach without writing a single test (we already have a bunch of tests for namespaces which are now testing the approach used by both namespaces and partitions)  Additionally:  Fixes issue with missing default nspace in the nspace selector In doing when checking to see that things where consistent between the two, I found a few little minor problems with the Admin Partition CRUD so fixed those up here also. Removed the old style Nspace notifications"
4027,ca: add some godoc and func for finding leaf signing cert,This will be used in a follow up commit.
4028,sdk/freeport: rename Port to GetOne,For better consistency with GetN
4029,Merge pull request #11558 from hashicorp/docs/admin-partitions-service-exports-configuration-entry,Admin partition docs: cross-partition support beta2/3
4030,addtional feedback; added PartitionExports to CRDs section,
4031,Refactor test helper (#11689),Allow custom ACL root tokens to be passed
4032,acl: Fill authzContext from token in Coordinate endpoints (#11688),
4033,sdk: upgrade freeport godoc,"To clarify how it works, and when it is important to use."
4034,Remove demo directory,This demo setups are no longer maintained. See https://github.com/hashicorp/demo-consul-101 for a maintained demo.
4035,applied additional feedback,
4036,docs: Notes about WAN Federation when using Vault as Connect CA (#11143),  docs: Notes about WAN Federation when using Vault as Connect CA   Apply suggestions from code review   Co-authored-by: Daniel Nephin dnephin@hashicorp.com  Update website/content/docs/connect/ca/vault.mdx  Co-authored-by: Daniel Nephin dnephin@hashicorp.com  Update website/content/docs/connect/ca/vault.mdx  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com  Update website/content/docs/connect/ca/vault.mdx  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com   Update vault.mdx   Update vault.mdx   Co-authored-by: Daniel Nephin dnephin@hashicorp.com Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
4037,Merge pull request #11673 from hashicorp/dnephin/ca-remove-raft-apply-resp-err-handle,ca: clean up unnecessary raft.Apply response checking
4038,Rename partition CLI command,
4039,Move ent config test to ent file,
4040,Prevent partition-exports entry from OSS usage,Validation was added on the config entry kind since that is called when validating config entries to bootstrap via agent configuration and when applying entries via the config RPC endpoint.
4041,testing: remove unnecessary calls to freeport,"Previously we believe it was necessary for all code that required ports to use freeport to prevent conflicts. https://github.com/dnephin/freeport-test shows that it is actually save to use port 0 (127.0.0.1:0) as long as it is passed directly to net.Listen, and the listener holds the port for as long as it is needed. This works because freeport explicitly avoids the ephemeral port range, and port 0 always uses that range. As you can see from the test output of https://github.com/dnephin/freeport-test, the two systems never use overlapping ports. This commit converts all uses of freeport that were being passed directly to a net.Listen to use port 0 instead. This allows us to remove a bit of wrapping we had around httptest, in a couple places."
4042,testing: use httptest with freeport,
4043,testing: use the new freeport interfaces,
4044,go-sso: remove returnFunc now that freeport handles return,
4045,sdk: add freeport functions that use t.Cleanup,
4046,ca: clean up unnecessary raft.Apply response checking,"In d2ab767fef21244e9fe3b9887ea70fc177912381 raftApply was changed to handle this check in a single place, instad of having every caller check it. It looks like these few places were missed when I did that clean up. This commit removes the remaining resp.(error) checks, since they are all no-ops now."
4047,Merge pull request #11339 from hashicorp/dnephin/ca-manager-isolate-secondary-2,ca: reduce use of state in the secondary
4048,ca: remove state check in secondarySetPrimaryRoots,"This function is only ever called from operations that have already acquired the state lock, so checking the value of state can never fail. This change is being made in preparation for splitting out a separate type for the secondary logic. The state can't easily be shared, so really only the expored top-level functions should acquire the 'state lock'."
4049,ca: remove actingSecondaryCA,"This commit removes the actingSecondaryCA field, and removes the stateLock around it. This field was acting as a proxy for providerRoot != nil, so replace it with that check instead. The two methods which called secondarySetCAConfigured already set the state, so checking the state again at this point will not catch runtime errors (only programming errors, which we can catch with tests). In general, handling state transitions should be done on the ""entrypoint"" methods where execution starts, not in every internal method. This is being done to remove some unnecessary references to c.state, in preparations for extracting types for primary/secondary."
4050,Merge pull request #11660 from hashicorp/dnephin/ca-reduce-consul-provider-state-iface,ca: reduce consul provider backend interface a bit
4051,Merge pull request #11468 from hashicorp/dnephin/acl-docs-namespace-rules,docs: update docs about namespace default policy/role
4052,docs: update docs about namespace default policy/role,To include details about the permissions the ACL token must have to perform the request.
4053,ca: reduce consul provider backend interface a bit,"This makes it easier to fake, which will allow me to use the ConsulProvider as an 'external PKI' to test a customer setup where the actual root CA is not the root we use for the Consul CA. Replaces a call to the state store to fetch the clusterID with the clusterID field already available on the built-in provider."
4054,ui: Add Service.Namespace variable to dashboard URL templates (#11640),"We currently allow only Datacenter, Service.Name, this PR adds Service.Namespace."
4055,ui: Notifications re-organization/re-style (#11577)," Moves where they appear up to the  component. Instead of a  wrapping component to move whatever you use for a notification up to where they need to appear (via ember-cli-flash), we now use a {{notification}} modifier now we have modifiers. Global notifications/flashes are no longer special styles of their own. You just use the {{notification}} modifier to hoist whatever component/element you want up to the top of the page. This means we can re-use our existing  component for all our global UI notifications (this is the user visible change here)"
4056,Partition/kv indexid sessions (#11639),  state: port KV and Tombstone tables to new pattern   go fmt'ed   handle wildcards for tombstones   Fix graveyard ent vs oss   fix oss compilation error   add partition to tombstones and kv state store indexes   refactor to use indexWithEnterpriseIndexable   Apply suggestions from code review   Co-authored-by: Chris S. Kim ckim@hashicorp.com Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com   partition tableSessions table   fix sessions to use UUID and fix prefix index   fix oss build   clean up unused functions   fix oss compilation   add a partition indexer for sessions   Fix oss to not have partition index   fix oss tests   remove unused operations_ent.go and operations_oss.go func   convert indexNodeCheck of session_checks table   partition indexID and indexSession of tableSessionChecks   remove partition for Checks as it's always use the session partition   partition sessions index id table   fix rebase issues   Co-authored-by: Daniel Nephin dnephin@hashicorp.com Co-authored-by: Chris S. Kim ckim@hashicorp.com Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com
4057,ui: Support for SSO with Admin Partitions (#11604)," Upgrade AuthForm and document current state a little better Hoist SSO out of the AuthForm Bare minimum admin partitioned SSO  also: ui: Tabbed Login with Token or SSO interface (#11619)  I upgraded our super old, almost the first ember component I wrote, to use glimmer/almost template only. This should use slots/contextual components somehow, but thats a bigger upgrade so I didn't go that far. I've been wanting to upgrade the shape of our StateChart component for a very long while now, here its very apparent that it would be much better to do this sooner rather than later. I left it as is for now, but there will be a PR coming soon with a slight reshaping of this component. Added a did-upsert modifier which is a mix of did-insert/did-update Documentation added/amended for all the new things."
4058,Partition session checks store (#11638),  state: port KV and Tombstone tables to new pattern   go fmt'ed   handle wildcards for tombstones   Fix graveyard ent vs oss   fix oss compilation error   add partition to tombstones and kv state store indexes   refactor to use indexWithEnterpriseIndexable   Apply suggestions from code review   Co-authored-by: Chris S. Kim ckim@hashicorp.com Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com   add singleValueID implementation assertions   partition tableSessions table   fix sessions to use UUID and fix prefix index   fix oss build   clean up unused functions   fix oss compilation   add a partition indexer for sessions   Fix oss to not have partition index   fix oss tests   remove unused operations_ent.go and operations_oss.go func   remove unused const   convert IndexID of session_checks table   convert indexSession of session_checks table   convert indexNodeCheck of session_checks table   partition indexID and indexSession of tableSessionChecks   fix oss linter   fix review comments   remove partition for Checks as it's always use the session partition   Co-authored-by: Daniel Nephin dnephin@hashicorp.com Co-authored-by: Chris S. Kim ckim@hashicorp.com Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com
4059,cleanup: Clarify deprecated legacy intention endpoints (#11635),
4060,docs: fix name for partition resource labels (#11634),
4061,ui: Fix brand coloring for inline-code plus docs (#11578), ui: Fix brand coloring for inline-code plus docs  Also use --tones instead of --black/--white (#11601) Co-authored-by: Evan Rowe ev.rowe@gmail.com
4062,updated server and client example yamls in usage section,
4063,nia/docs 0.4.2 (#11611),  nia/docs: Add TLS options for the CTS API   docs: Add workspace tags (#11564)   nia/docs: Change CLI options to table format   Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com Co-authored-by: Michael Wilkerson 62034708+wilkermichael@users.noreply.github.com  nia/docs: Update TLS CLI defaults  Also clarifies some behavior for the CLI options. Co-authored-by: Melissa Kam mkam@hashicorp.com Co-authored-by: Kim Ngo 6362111+findkim@users.noreply.github.com Co-authored-by: Melissa Kam 3768460+mkam@users.noreply.github.com Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com Co-authored-by: Michael Wilkerson 62034708+wilkermichael@users.noreply.github.com
4064,Merge pull request #11625 from hashicorp/version.js-1.10.4,website: bump latest binary version to 1.10.4
4065,Merge pull request #11567 from hashicorp/branches_fix,ci: update triggers for main branch
4066,ci: update triggers for main branch,
4067,website: bump latest binary version to 1.10.4,
4068,Merge pull request #11605 from hashicorp/fix_dockerfile,add dumb-init package to Dockerfile
4069,added missing 'be',
4070,Update website/content/docs/discovery/dns.mdx,Co-authored-by: Jared Kirschner 85913323+jkirschner-hashicorp@users.noreply.github.com
4071,Update website/content/docs/discovery/dns.mdx,Co-authored-by: Jared Kirschner 85913323+jkirschner-hashicorp@users.noreply.github.com
4072,Update website/content/docs/discovery/dns.mdx,Co-authored-by: Jared Kirschner 85913323+jkirschner-hashicorp@users.noreply.github.com
4073,removed 'flat network' requirements,
4074,Merge from ent (#11506),
4075,Merge pull request #11608 from hashicorp/proxy-codeblocks,docs: updated proxy page to use new codeblock
4076,docs: updated proxy page to use new codeblock,
4077,agent: purge service/check registration files for incorrect partitions on reload (#11607),
4078,connect: Support auth methods for the vault connect CA provider (#11573), Support vault auth methods for the Vault connect CA provider Rotate the token (re-authenticate to vault using auth method) when the token can no longer be renewed
4079,add dumb-init package to Dockerfile,
4080,ui: Upgrades token sourcing related components to Glimmer+docs (#11592),
4081,ui: Add eng docs for our render-template helper (#11359),"Adds Engineer documentation for our recently improved render-template helper, plus some ideas for further work/improvement here should anyone ever want to pick that up."
4082,Merge pull request #11600 from hashicorp/fix_entrypoint_main,Make entrypoint script always executable
4083,Make entrypoint script always executable,
4084,Fixing spelling under Matching and Prefix Values,
4085,Add docs for Consul Ent on ECS (#11537),
4086,ui: Store the default partition when logging in (#11591),Make sure we store the default Partition for a users token.
4087,ui: Adding partitions + icons to upstreams/upstream instances (#11556),Adds a partition badge/label/visual to upstreams and upstream instances.
4088,Merge pull request #11589 from hashicorp/dnephin/ca-cleanup-cluster-id-1,ca: small cleanup of SpiffeIDSigningForCluster args
4089,Merge pull request #11583 from hashicorp/consul-ecs-ga-docs,Consul ECS GA Docs
4090,Merge pull request #11584 from hashicorp/pglass/ecs-ga,docs: ECS GA doc update
4091,docs: Fix some typos in ECS overview,
4092,fixed typo and added link from partition exports to admin partitions section,
4093,fixed more bad links,
4094,ui: When certain menus are selected reset either nspace/partition (#11479),"For our dc, nspace and partition 'bucket' menus, sometimes when selecting one 'bucket' we need to reset a different 'bucket' back to the one that your token has by default (or the default if not). For example when switching to a different partition whilst you are in a non-default namespace of another partition, we need to switch you to the token default namespace of the partition you are switching to."
4095,Connect.enabled config option (#11533),
4096,changelog: entry for snapshot agent license_path bug (#11561),
4097,ca: use the cluster ID passed to the primary,instead of fetching it from the state store.
4098,ca: accept only the cluster ID to SpiffeIDSigningForCluster,"To make it more obivous where ClusterID is used, and remove the need to create a struct when only one field is used."
4099,update changelog (#11575),
4100,deps: update gopsutil to fix Windows ARM and macOS non-Apple LLVM builds (#11586),Bumps transitive dep go-ole to v1.2.6 with fixes
4101,add 1.11.x beta1/beta2 changelog entries (#11587),
4102,fixed bad links,
4103,Update website/content/docs/discovery/dns.mdx,Co-authored-by: Evan Culver eculver@users.noreply.github.com
4104,Update node info sync comment (#11465),
4105,added link to agent configuration from partition exports in usage section,
4106,applied freddy's feedback,
4107,api: ensure new partition fields are omit empty for back compat (#11585),
4108,build: switch to 'go install' over 'go get' (#11582),Also add lint-consul-retry to the 'make tools' set.
4109,re-run gofmt on 1.17 (#11579),This should let freshly recompiled golangci-lint binaries using Go 1.17 pass 'make lint'
4110,docs: correct some capitalization,
4111,docs: ECS docs for GA,
4112,Update Consul ECS documentation with health sync changes,This also switches the task startup image to an svg so it isn't pixelated anymore
4113,docs: Suggestions for ECS architecture from code review,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
4114,docs: ECS graceful shutdown refinements,
4115,docs: Apply suggestions to ecs docs from code review,Co-authored-by: Eric Haberkorn erichaberkorn@gmail.com Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
4116,docs: ECS graceful shutdown docs for GA,
4117,ui: Upstream CSS Tweaks (#11554),"Various CSS tweaks/HTML cleanup around upstreams (but impacts other 'rows')  Prefer {{tooltip}} to  Removed some now unnecessary spans Stop using an empty class="""" for styling purposes. Renamed any classes used to identify response properties to follow the exact property name but kebab-cased. Fixed up the alignment of things in the rows when used with a 'tiny copy button' (see screengrab) which was minus positioning and knocking things out (pending a proper refactor of our copy button CSS which is from the very very start of things)"
4118,ui: Fixup partiton > partition typo (#11572),
4119,Merge pull request #11574 from hashicorp/dnephin/update-changelog,"add changelog for 1.10.4, 1.9.11, 1.8.17"
4120,"add changelog for 1.10.4, 1.9.11, 1.8.17",
4121,partitions: various refactors to support partitioning the serf LAN pool (#11568),
4122,"Adding partition exports configuraiton entry details, upstream config, acl impact",
4123,Merge pull request #11566 from hashicorp/ap/ingress,OSS Backport: Allow ingress gateways to target other partitions
4124,changelog sync (#11565),
4125,Fix test,
4126,Add changelog entry,
4127,Add cross-partition integration test,
4128,Support partitions in connect expose cmd,
4129,Fixup shared oss/ent tests,
4130,Update proxycfg for ingress service partitions,
4131,Accept partition for ingress services,
4132,Merge pull request #11557 from hashicorp/dnephin/changelog-namespace-default,Add changelog entry for namespace default policy/role fix
4133,ui: Fix code editor resizing and restyle  (#11474),Fixes an issue where the code editor would not resizing to the full extent of the browser window plus CodeEditor restyling/refactoring  :label named block :tools named block :content named block code and CSS cleanup CodeEditor.mdx  Signed-off-by: Alessandro De Blasis alex@deblasis.net Co-authored-by: John Cowen johncowen@users.noreply.github.com
4134,first commit for cross-partition support - partition exports section,
4135,Add changelog entry,
4136,Merge pull request #11543 from hashicorp/envoy-token,docs: added more information to help endusers with proxies and ACL
4137,Update website/content/docs/connect/proxies/integrate.mdx,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
4138,changelog: entry for enterprise licensing bug fix (#11551),
4139,ui: Bump our browser support (#11505),"Bumps our browser support to a ""rough ~2 years back"" approach."
4140,ui: [Port] Ensure the tokens default nspace (and partition) is passed thru to the auth endpoint (#11490),"Most HTTP API calls will use the default namespace of the calling token to additionally filter/select the data used for the response if one is not specified by the frontend. The internal permissions/authorize endpoint does not do this (you can ask for permissions from different namespaces in on request). Therefore this PR adds the tokens default namespace in the frontend only to our calls to the authorize endpoint. I tried to do it in a place that made it feel like it's getting added in the backend, i.e. in a place which was least likely to ever require changing or thinking about. Note:  We are probably going to change this internal endpoint to also inspect the tokens default namespace on the backend. At which point we can revert this commit/PR.  Add the same support for the tokens default partition"
4141,ui: Add Consul API Gateway as an external source (#11371),
4142,Merge pull request #11546 from hashicorp/ui/bug/revert-11328,"ui: Revert #11328 allow-${}-style-interpolation due, to browser support"
4143,Merge pull request #11542 from hashicorp/vault-ca,docs: added link to the Learn tutorial in Vault CA integration page
4144,Update website/content/docs/connect/ca/vault.mdx,Co-authored-by: Daniel Nephin dnephin@hashicorp.com
4145,docs: provide more example CLI commands and reference Vault (#11528),  docs: provide more example CLI commands and reference Vault   Extra formatting   Update website/content/docs/k8s/operations/gossip-encryption-key-rotation.mdx   Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com  Update website/content/docs/k8s/operations/gossip-encryption-key-rotation.mdx  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com  Update website/content/docs/k8s/operations/gossip-encryption-key-rotation.mdx  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com  Update website/content/docs/k8s/operations/gossip-encryption-key-rotation.mdx  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com  Update website/content/docs/k8s/operations/gossip-encryption-key-rotation.mdx  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com  Update website/content/docs/k8s/operations/gossip-encryption-key-rotation.mdx  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com   adding more detail around gossip encryption rotation precautions   Update website/content/docs/k8s/operations/gossip-encryption-key-rotation.mdx   Co-authored-by: Matt Keeler mkeeler@users.noreply.github.com Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com Co-authored-by: Matt Keeler mkeeler@users.noreply.github.com
4146,Add changelog entry (#11549),
4147,Merge pull request #11545 from hashicorp/spiffe-assertion,Use ClusterID to check for readiness
4148,Bump retry time for cross-DC RPC,The secondary DC now takes longer to populate the MGW snapshot because it needs to wait for the secondary CA to be initialized before it can receive roots and generate xDS config. Previously MGWs could receive empty roots before the CA was initialized. This wasn't necessarily a problem since the cluster ID in the trust domain isn't verified.
4149,"Revert ""Merge pull request #11328 from radiantly/ui/feature/allow-${}-style-interpolation""","This reverts commit cd55c0cda3310c06abe989b8d145d9946945ae8d, reversing changes made to 14af8cb7a9e7fc0a65178e6ca7708b3f395f0d70."
4150,Move assertion to after config fetch,
4151,Use ClusterID to check for readiness,"The TrustDomain is populated from the Host() method which includes the hard-coded ""consul"" domain. This means that despite having an empty cluster ID, the TrustDomain won't be empty."
4152,Merge pull request #11541 from hashicorp/secondary-exports,OSS Backport: Prevent writing partition-exports entries to secondary DCs
4153,Merge pull request #11487 from hashicorp/docs/admin-partitions-feedback-acl-policies-redux,changed 'segments' in this page to 'resource labels' to disambiguate from 'network segments updated the code snippets to use CodeBlock component and to include JSON
4154,docs: added more information to help endusers with proxies and ACL tokens,
4155,docs: added link to the Learn tutorial in Vault CA integration page,
4156,command/redirect_traffic: Redirect DNS requests to Consul if -consul-dns-ip is passed in (#11480)," command/redirect_traffic: add rules to redirect DNS to Consul. Currently uses a hack to get the consul dns service ip, and this hack only works when the service is deployed in the same namespace as consul. command/redirect_traffic: redirect DNS to Consul when -consul-dns-ip is passed in Add unit tests to Consul DNS IP table redirect rules  Co-authored-by: Ashwin Venkatesh ashwin@hashicorp.com Co-authored-by: Iryna Shustava ishustava@users.noreply.github.com"
4157,ui: Temporarily force all UI capabilities (#11520),"Temporarily revert to pre-1.10 UI functionality by overwriting frontend permissions. These are used to hide certain UI elements, but they are still enforced on the backend. This temporary measure should be removed again once https://github.com/hashicorp/consul/issues/11098 has been resolved"
4158,added json versions for all hcl examples,
4159,Add changelog entry,
4160,Prevent replicating partition-exports,
4161,handle error scenario of empty local DC,
4162,Restrict DC for partition-exports writes,"There are two restrictions: - Writes from the primary DC which explicitly target a secondary DC. - Writes to a secondary DC that do not explicitly target the primary DC. The first restriction is because the config entry is not supported in secondary datacenters. The second restriction is to prevent the scenario where a user writes the config entry to a secondary DC, the write gets forwarded to the primary, but then the config entry does not apply in the secondary. This makes the scope more explicit."
4163,Update filter chain creation for sidecar/ingress listeners (#11245),"The duo of makeUpstreamFilterChainForDiscoveryChain and makeListenerForDiscoveryChain were really hard to reason about, and led to concealing a bug in their branching logic. There were several issues here:  They tried to accomplish too much: determining filter name, cluster name, and whether RDS should be used.  They embedded logic to handle significantly different kinds of upstream listeners (passthrough, prepared query, typical services, and catch-all) They needed to coalesce different data sources (Upstream and CompiledDiscoveryChain)  Rather than handling all of those tasks inside of these functions, this PR pulls out the RDS/clusterName/filterName logic. This refactor also fixed a bug with the handling of UpstreamDefaults. These defaults get stored as UpstreamConfig in the proxy snapshot with a DestinationName of ""*"", since they apply to all upstreams. However, this wildcard destination name must not be used when creating the name of the associated upstream cluster. The coalescing logic in the original functions here was in some situations creating clusters with a *. prefix, which is not a valid destination."
4164,Merge pull request #11521 from hashicorp/broken-link,docs: removed broken link to Ambassador
4165,Merge pull request #11485 from hashicorp/add_rpm_signing,Add rpm signing workflow
4166,ui: Filter global intentions list by selected partition (#11475), ui: Filter global intentions list by namespace and partition  Filters global intention listing by the current partition rather than trying to use a wildcard.
4167,Merge pull request #11461 from deblasis/feature/empty_client_addr_warning,config: warn the user if client_addr is empty
4168,Fixup changelog filename (#11501),Signed-off-by: Mark Anderson manderson@hashicorp.com
4169,xds: prefer fed state gateway definitions if they're fresher (#11522),"Fixes an issue described in #10132, where if two DCs are WAN federated over mesh gateways, and the gateway in the non-primary DC is terminated and receives a new IP address (as is commonly the case when running them on ephemeral compute instances) the primary DC is unable to re-establish its connection until the agent running on its own gateway is restarted. This was happening because we always preferred gateways discovered by the Internal.ServiceDump RPC (which would fail because there's no way to dial the remote DC) over those discovered in the federation state, which is replicated as long as the primary DC's gateway is reachable."
4170,docs: added link to Ambassador tutorial in k8s section,
4171,Update .release/ci.hcl,Co-authored-by: Scott Macfarlane 36851+smacfarlane@users.noreply.github.com
4172,Merge pull request #11514 from hashicorp/dnephin/ca-fix-secondary-init,ca: properly handle the case where the secondary initializes after the primary
4173,Add changelog entry,
4174,Avoid returning empty roots with uninitialized CA,Currently getCARoots could return an empty object with an empty trust domain before the CA is initialized. This commit returns an error while there is no CA config or no trust domain. There could be a CA config and no trust domain because the CA config can be created in InitializeCA before initialization succeeds.
4175,refactor session state store tables to use the new index pattern (#11525),  state: port KV and Tombstone tables to new pattern   go fmt'ed   handle wildcards for tombstones   Fix graveyard ent vs oss   fix oss compilation error   add partition to tombstones and kv state store indexes   refactor to use indexWithEnterpriseIndexable   Apply suggestions from code review   Co-authored-by: Chris S. Kim ckim@hashicorp.com Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com   add singleValueID implementation assertions   partition tableSessions table   fix sessions to use UUID and fix prefix index   fix oss build   clean up unused functions   fix oss compilation   add a partition indexer for sessions   Fix oss to not have partition index   fix oss tests   remove unused func prefixIndexFromServiceNameAsString   fix test error check   remove unused operations_ent.go and operations_oss.go func   remove unused const   Co-authored-by: Daniel Nephin dnephin@hashicorp.com Co-authored-by: Chris S. Kim ckim@hashicorp.com Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com
4176,"KV refactoring, part 2 (#11512)",  add partition to the kv get pretty print   fix failing test   add test for kvs RPC endpoint 
4177,docs: removed broken link to Ambassador,
4178,KV state store refactoring and partitioning (#11510),  state: port KV and Tombstone tables to new pattern   go fmt'ed   handle wildcards for tombstones   Fix graveyard ent vs oss   fix oss compilation error   add partition to tombstones and kv state store indexes   refactor to use indexWithEnterpriseIndexable   partition kvs indexID table   add partitionedIndexEntryName in oss for test purpose   Apply suggestions from code review   Co-authored-by: Chris S. Kim ckim@hashicorp.com Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com   add singleValueID implementation assertions   remove entmeta reference from oss   Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com Co-authored-by: Daniel Nephin dnephin@hashicorp.com Co-authored-by: Chris S. Kim ckim@hashicorp.com Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com
4179,Fix caveat about resolvers operating at L4 (#11497),"Service resolvers can specify L4 rules such as redirects, or L7 rules such as hash-based load balancing policies."
4180,Merge branch 'main' into serve-panic-recovery,
4181,docs: add brew install hashicorp/tap/consul-k8s and re-order install and uninstall workflows  (#11489),  docs: add brew install hashicorp/tap/consul-k8s   add consul k8s cli brew install to reference   Update k8s-cli.mdx   split home-brew commands into two steps   Update k8s-cli.mdx   slight changes on recommended way of installing Consul K8s for CLI or multi-DC   Update install.mdx   reorder cli and helm uninstall   Update website/content/docs/k8s/installation/install.mdx   Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com  Update website/content/docs/k8s/installation/install.mdx  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com  Update website/content/docs/k8s/installation/install.mdx  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com  Update website/content/docs/k8s/k8s-cli.mdx  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com  Update website/content/docs/k8s/installation/install.mdx  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com  Update website/content/docs/k8s/k8s-cli.mdx  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
4182,ca: Only initialize clusterID in the primary,The secondary must get the clusterID from the primary
4183,ca: return an error when secondary fails to initialize,"Previously secondaryInitialize would return nil in this case, which prevented the deferred initialize from happening, and left the CA in an uninitialized state until a config update or root rotation. To fix this I extracted the common parts into the delegate implementation. However looking at this again, it seems like the handling in secondaryUpdateRoots is impossible, because that function should never be called before the secondary is initialzied. I beleive we can remove some of that logic in a follow up."
4184,update changelog (#11513),
4185,ci: Loosen apt source verification (#11493),
4186,Merge pull request #11415 from hashicorp/dnephin/acl-policy-id-and-revision,acl: remove Policy.ID and Policy.Revision
4187,acl: remove id and revision from Policy constructors,The fields were removed in a previous commit. Also remove an unused constructor for PolicyMerger
4188,acl: remove Policy.ID and Policy.Revision,"These two fields do not appear to be used anywhere. We use the structs.ACLPolicy ID in the ACLResolver cache, but the acl.Policy ID and revision are not used."
4189,rename helper method to reflect the non-deprecated terminology (#11509),
4190,Document default storage class requirements (#11492),
4191,ui: Topology view with no dependencies (#11280),
4192,Support Vault Namespaces explicitly in CA config (#11477)," Support Vault Namespaces explicitly in CA config  If there is a Namespace entry included in the Vault CA configuration, set it as the Vault Namespace on the Vault client Currently the only way to support Vault namespaces in the Consul CA config is by doing one of the following: 1) Set the VAULT_NAMESPACE environment variable which will be picked up by the Vault API client 2) Prefix all Vault paths with the namespace Neither of these are super pleasant. The first requires direct access and modification to the Consul runtime environment. It's possible and expected, not super pleasant. The second requires more indepth knowledge of Vault and how it uses Namespaces and could be confusing for anyone without that context. It also infers that it is not supported   Add changelog   Remove fmt.Fprint calls   Make comment clearer   Add next consul version to website docs   Add new test for default configuration   go mod tidy   Add skip if vault not present   Tweak changelog text "
4193,applied feedback,
4194,change vault ca docs to mention root cert ttl config (#11488),Signed-off-by: FFMMM FFMMM@users.noreply.github.com
4195,segments: ensure that the serf_lan_allowed_cidrs applies to network segments (#11495),
4196,add changelog entry (#11494),
4197,Remove some usage of md5 from the system (#11491)," Remove some usage of md5 from the system  OSS side of https://github.com/hashicorp/consul-enterprise/pull/1253 This is a potential security issue because an attacker could conceivably manipulate inputs to cause persistence files to collide, effectively deleting the persistence file for one of the colliding elements. Signed-off-by: Mark Anderson manderson@hashicorp.com"
4198,plumb thru root cert tll to the aws ca provider (#11449), plumb thru root cert ttl to the aws ca provider  Signed-off-by: FFMMM FFMMM@users.noreply.github.com  Update .changelog/11449.txt  Co-authored-by: Dhia Ayachi dhia@hashicorp.com Co-authored-by: Dhia Ayachi dhia@hashicorp.com
4199,ui: Only show partition / partition selector if enabled (#11484),"I missed that partitions should never display if you can't use them, not just if you can't choose them."
4200,ui: Ensure we check intention service prefix permissions for per service (#11409),"Port of: Ensure we check intention service prefix permissions for per service (#11270) Previously, when showing some action buttons for 'per service intentions' we used a global 'can I do something with any intention' permission to decide whether to show a certain button or not. If a user has a token that does not have 'global' intention permissions, but does have intention permissions on one or more specific services (for example via service / service_prefix), this meant that we did not show them certain buttons required to create/edit the intentions for this specific service. This PR adds that extra permissions check so we now check the intentions permissions per service instead of using the 'global' ""can I edit intentions"" question/request. Notes:  If a HTML button is disabled this means tippy.js doesn't adopt the popover properly and subsequently hide it from the user, so aswell as just disabling the button so you can't active the popover, we also don't even put the popover on the page If ability.item or ability.item.Resources are empty then assume no access  We don't try to disable service > right hand side intention actions here Whether you can create intentions for a service depends on the destination of the intention you would like to create. For the topology view going from the LHS to the center, this is straightforwards as we only need to know the permissions for the central service, as when you are going from the LHS to the center, the center is the destination. When going from the center to the RHS the destination[s] are on the RHS. This means we need to know the permissions for potentially 1000s of services all in one go in order to know when to show a button or not. We can't realistically discover the permissions for service > RHS services as we'd have either make a HTTP request per right hand service, or potentially make an incredibly large POST request for all the potentially 1000s of services on the right hand side (more preferable to 1000s of HTTP requests). Therefore for the moment at least we keep the old functionality (thin client) for the middle to RHS here. If you do go to click on the button and you don't have permissions to update the intention you will still not be able to update it, only you won't know this until you click the button (at which point you'll get a UI visible 403 error) Note: We reversed the conditional here between 1.10 and 1.11 So this make 100% sense that the port is different here to 1.11"
4201,docs:  consul-k8s uninstall with namespace (#11478), docs:  consul-k8s uninstall with namespace  Uninstall with namespace   change release name to consul in uninstall   Update website/content/docs/k8s/operations/uninstall.mdx   Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com  add --create-namespace command to install for custom values file  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
4202,changed 'segments' in this page to 'resource labels' to disambiguate from 'network segments',
4203,chore: react-subnav (#11486),
4204,Merge pull request #10822 from hashicorp/krarey/patch-replication-policy,Update namespaced replication token example
4205,Update namespaced replication token example,
4206,fix aws pca certs (#11470),Signed-off-by: FFMMM FFMMM@users.noreply.github.com
4207,Add rpm signing workflow,
4208,Update Helm Docs for v0.36.0 Consul K8s release (#11483),Co-authored-by: David Yu dyu@hashicorp.com
4209,Add quick-link for users coming from UI (#11403),"The Consul UI topology view has an icon with the text ""Configure metrics dashboard"" that links to this page. Add a notice at the top of the page that links them directly to the relevant section."
4210,"Use ""Open dashboard"" everywhere (#11406)","Previously we had ""Open metrics Dashboard"" and ""Configure metrics dashboard"" in the topology cards and then we had ""Open Dashboard"" in the top nav when the dashboard was configured. Now we use ""Open dashboard"" and ""Configure dashboard"". This change was made for consistency in wording and casing. In addition, the dashboard could be used for metrics but also other dashboards so there's no need to scope it only to metrics. Also the config is: hcl ui_config {   dashboard_url_templates } Which does not mention metrics"
4211,Convert (some) test endpoints to use ServeHTTP instead of direct calls to handlers. (#11445),
4212,Merge pull request #11307 from hashicorp/docs/admin-partitions-cli-v1.11.0,admin partition docs part 1 - cli
4213,Remove Name/Namespace fields from upstream default (#11456),"The UpstreamConfig.Defaults field does not support setting Name or Namespace because the purpose is to apply defaults to all upstreams. I think this was just missed in the docs since those fields would error if set under Defaults. i.e. this is not supported: UpstreamConfig {   Defaults {     Name = ""foo""     Namespace = ""bar""     # Defaults config here   } }"
4214,"add root_cert_ttl option for consul connect, vault ca providers (#11428)"," add root_cert_ttl option for consul connect, vault ca providers  Signed-off-by: FFMMM FFMMM@users.noreply.github.com  Apply suggestions from code review  Co-authored-by: Chris S. Kim ckim@hashicorp.com  add changelog, pr feedback  Signed-off-by: FFMMM FFMMM@users.noreply.github.com  Update .changelog/11428.txt, more docs  Co-authored-by: Daniel Nephin dnephin@hashicorp.com  Update website/content/docs/agent/options.mdx  Co-authored-by: Kyle Havlovitz kylehav@gmail.com Co-authored-by: Chris S. Kim ckim@hashicorp.com Co-authored-by: Daniel Nephin dnephin@hashicorp.com Co-authored-by: Kyle Havlovitz kylehav@gmail.com"
4215,Merge pull request #10690 from tarat44/h2c-support-in-ping-checks,add support for h2c in h2 ping health checks
4216,Prevent running build workflows on all PRs (#11469),
4217,changelog,Signed-off-by: Alessandro De Blasis alex@deblasis.net
4218,config: warn the user if client_addr is empty,"if the provided value is empty string then the client services (DNS, HTTP, HTTPS, GRPC) are not listening and the user is not notified in any way about what's happening. Also, since a not provided client_addr defaults to 127.0.0.1, we make sure we are not getting unwanted warnings Signed-off-by: Alessandro De Blasis alex@deblasis.net"
4219,Merge pull request #10771 from hashicorp/dnephin/emit-telemetry-metrics-immediately,telemetry: improve cert expiry metrics
4220,Merge pull request #11450 from hashicorp/ap/best-addr,Ensure calls to BestAddress consider partition
4221,Exclude default partition from GatewayKey string,"This will behave the way we handle SNI and SPIFFE IDs, where the default partition is excluded. Excluding the default ensures that don't attempt to compare default.dc2 to dc2 in OSS."
4222,Update GatewayKeys deduplication,"Federation states data is only keyed on datacenter, so it cannot be directly compared against keys for gateway groups."
4223,Store GatewayKey in proxycfg snapshot for re-use,
4224,Update locality check in xds,
4225,Update locality check in proxycfg,
4226,adding K8s page to subnav (#11467)," adding K8s page to subnav  per request from HLT, updating use case tab to lead to K8s page instead of service mesh.  Update subnav.js"
4227,Merge pull request #11466 from hashicorp/cts-tls-typo,docs/nia: Fix typo in TLS configs for CTS
4228,docs/nia: Fix typo in TLS configs for CTS,
4229,Merge pull request #11340 from hashicorp/dnephin/ca-manager-provider,ca: split the Provider interface into Primary/Secondary
4230,Merge pull request #11338 from hashicorp/dnephin/ca-manager-isolate-secondary,ca: clearly identify methods that are primary-only or secondary-only
4231,Merge pull request #11417 from hashicorp/crt-migration-1.11.0-betax,Crt migration 1.11.0 betax
4232,Merge pull request #11463 from hashicorp/docs-cts-tls,docs/nia: Update TLS-related configurations for CTS
4233,Support Check-And-Set deletion of config entries (#11419),Implements #11372
4234,Merge pull request #11441 from hashicorp/docs/admin-partitions-feedback-acl-policies,admin partitions feedback related to ACLs; additional improvements to ACL rule docs
4235,Update website/content/docs/security/acl/acl-rules.mdx,Co-authored-by: mrspanishviking kcardenas@hashicorp.com
4236,docs/nia: Update TLS-related configurations for CTS, Clarify file types and uses of the configurations Update some wording to match between Consul and TFE TLS configs
4237,regenerate expired certs (#11462),  regenerate expired certs   add documentation to generate tests certificates 
4238,Apply suggestions from code review,fixed typos Co-authored-by: Blake Covarrubias blake@covarrubi.as
4239,added Alternative Domain section to dns page in docs,
4240,Merge pull request #11348 from kbabuadze/fix-answers-alt-domain,Fix answers for alt domain
4241,docs: add -verbose flag for install command (#11447),
4242,PR fixes,
4243,cli: update consul members output to display partitions and sort the results usefully (#11446),
4244,agent: for various /v1/agent endpoints parse the partition parameter on the request (#11444),Also update the corresponding CLI commands to send the parameter appropriately. NOTE: Behavioral changes are not happening in this PR.
4245,agent: add a clone function for duplicating the serf lan configuration (#11443),
4246,Fix back compat issues with UDS config (#11318),SocketPath needs to be omitted when empty to avoid confusing older versions of Consul Signed-off-by: Mark Anderson manderson@hashicorp.com
4247,docs: revised Helm install to create namespace and install on dedicated namespace  (#11440),  docs: revised Helm install to create namespace and install on dedicated Consul namespace   Update website/content/docs/k8s/installation/install.mdx   Co-authored-by: mrspanishviking kcardenas@hashicorp.com   Update install.mdx   changing to Helm 3.2+ as a pre-req to make it easier to follow  might as well bump to latest version  Co-authored-by: mrspanishviking kcardenas@hashicorp.com
4248,Add tests for cert expiry metrics,
4249,applying admin partitions feedback related to ACLs; additional immprovments to ACL rule docs,
4250,Update .github/workflows/build.yml,Co-authored-by: Daniel Nephin dnephin@hashicorp.com
4251,Merge pull request #10671 from hashicorp/dnephin/fix-subscribe-test-flake,subscribe: improve TestSubscribeBackend_IntegrationWithServer_DeliversAllMessages
4252,Merge pull request #11255 from hashicorp/dnephin/fix-auth-verify-incoming,tlsutil: only AuthorizerServerConn when VerifyIncomingRPC is true
4253,Refactor requireHttpCodes for segregated error handling (#11287),
4254,CTS document manual apply (#11426), CTS document manual apply Add Consul-Terraform-Sync parentheses to CTS acronym Add tf link for run notifications
4255,connect: Remove support for  Envoy 1.16 (#11354),
4256,connect: Add support for Envoy 1.20 (#11277),
4257,Merge pull request #11436 from hashicorp/api/exports-marshal,[OSS] Ensure partition-exports kind gets marshaled
4258,Update release branch to 1.11.x,
4259,Update filename to match entry kind - mesh,
4260,Ensure partition-exports kind gets marshalled,The api module has decoding functions that rely on 'kind' being present of payloads. This is so that we can decode into the appropriate api type for the config entry. This commit ensures that a static kind is marshalled in responses from Consul's api endpoints so that the api module can decode them.
4261,agent: move agent tls metric monitor to a more appropriate place,And add a test for it
4262,telemetry: set cert expiry metrics to NaN on start,"So that followers do not report 0, which would make alerting difficult."
4263,telemetry: fix cert expiry metrics by removing labels,"These labels should be set by whatever process scrapes Consul (for prometheus), or by the agent that receives them (for datadog/statsd). We need to remove them here because the labels are part of the ""metric key"", so we'd have to pre-declare the metrics with the labels. We could do that, but that is extra work for labels that should be added from elsewhere. Also renames the closure to be more descriptive."
4264,telemetry: only emit leader cert expiry metrics on the servers,
4265,telemetry: prevent stale values from cert monitors,"Prometheus scrapes metrics from each process, so when leadership transfers to a different node the previous leader would still be reporting the old cached value. By setting NaN, I believe we should zero-out the value, so that prometheus should only consider the value from the new leader."
4266,telemetry: improve cert expiry metrics,"Emit the metric immediately so that after restarting an agent, the new expiry time will be emitted. This is particularly important when this metric is being monitored, because we want the alert to resovle itself immediately. Also fixed a bug that was exposed in one of these metrics. The CARoot can be nil, so we have to handle that case."
4267,subscribe: attempt to fix a flaky test,"TestSubscribeBackend_IntegrationWithServer_DeliversAllMessages has been flaking a few times. This commit cleans up the test a bit, and improves the failure output. I don't believe this actually fixes the flake, but I'm not able to reproduce it reliably. The failure appears to be that the event with Port=0 is being sent in both the snapshot and as the first event after the EndOfSnapshot event. Hopefully the improved logging will show us if these are really duplicate events, or actually different events with different indexes."
4268,Merge pull request #11435 from hashicorp/ent-authorizer-refactor,[OSS] Export ACLs refactor
4269,Merge pull request #11432 from hashicorp/ap/exports-mgw,[OSS] Update mesh gateways to handle partitions
4270,Rework acl exports interface,
4271,Prefer concrete policyAuthorizer type,"There will only ever be policyAuthorizers embedded in namespaceAuthorizers, this commit swaps out the interface in favor of the concrete type."
4272,Merge pull request #11433 from hashicorp/exported-service-acls,[OSS] acl: Expand ServiceRead and NodeRead to account for partition exports
4273,Update comments,
4274,tlsutil: only AuthorizerServerConn when VerifyIncomingRPC is true,See github.com/hashicorp/consul/issues/11207 When VerifyIncomingRPC is false the TLS conn will not have the required certificates.
4275,Merge pull request #11431 from hashicorp/ap/exports-proxycfg,[OSS] Update partitioned mesh gw handling for connect proxies
4276,Merge pull request #11416 from hashicorp/ap/exports-update,Rename service-exports to partition-exports
4277,Fixup partitions assertion,
4278,Fixup imports,
4279,Split up locality check from hostname check,
4280,Move the exportingpartitions constant to enterprise,
4281,Replace default partition check,
4282,PR comments,
4283,Leave todo about default name,
4284,Add oss impl of registerEntCache,
4285,Register the ExportingPartitions cache type,
4286,Account for partitions in xds gen for mesh gw,This commit avoids skipping gateways in remote partitions of the local DC when generating listeners/clusters/endpoints.
4287,Account for partition in SNI for gateways,
4288,Add changelog entry,
4289,Update xds pkg to account for GatewayKey,
4290,Update mesh gateway proxy watches for partitions,This commit updates mesh gateway watches for cross-partitions communication.   Mesh gateways are keyed by partition and datacenter.   Mesh gateways will now watch gateways in partitions that export services to their partition.   Mesh gateways in non-default partitions will not have cross-datacenter watches. They are not involved in traditional WAN federation. 
4291,Add changelog entry,
4292,Final fixes,
4293,Avoid mixing named and unnamed params,
4294,Avoid passing nil config pointer,
4295,Avoid panic on nil partitionAuthorizer config,"partitionAuthorizer.config can be nil if it wasn't provided on calls to newPartitionAuthorizer outside of the ACLResolver. This usage happens often in tests. This commit: adds a nil check when the config is going to be used, updates non-test usage of NewPolicyAuthorizerWithDefaults to pass a non-nil config, and dettaches setEnterpriseConf from the ACLResolver."
4296,Update NodeRead for partition-exports,"When issuing cross-partition service discovery requests, ACL filtering often checks for NodeRead privileges. This is because the common return type is a CheckServiceNode, which contains node data."
4297,acl: pass PartitionInfo through ent ACLConfig,
4298,acl: Expand ServiceRead logic to look at service-exports for cross-partition,
4299,Swap in structs.EqualPartitions for cmp,
4300,Replace Split with SplitN,
4301,Finish removing useInDatacenter,
4302,Update XDS for sidecars dialing through gateways,
4303,Configure sidecars to watch gateways in partitions,"Previously the datacenter of the gateway was the key identifier, now it is the datacenter and partition. When dialing services in other partitions or datacenters we now watch the appropriate partition."
4304,Remove useInDatacenter from disco chain requests,"useInDatacenter was used to determine whether the mesh gateway mode of the upstream should be returned in the discovery chain target. This commit makes it so that the mesh gateway mode is returned every time, and it is up to the caller to decide whether mesh gateways should be watched or used."
4305,added changelog,
4306,fixed configurations options order in dns.mdx,
4307,agent: refactor the agent delegate interface to be partition friendly (#11429),
4308,docs: Document datacenter limitations for admin partitions (#11425),
4309,agent: Ensure partition is considered in agent endpoints (#11427),
4310,Switch to og-image & Fix build error with acl-legacy (#11423),  Update share card image & switch to og-image   Remove path from api-docs-nav-data. Working   Add redirect back in   Co-authored-by: Pamela Bortnick pbortnick@gmail.com
4311,ui: Ensure dc selector correctly shows the currently selected dc (#11380),  ui: Ensure dc selector correctly shows the currently selected dc   ui: Restrict access to non-default partitions in non-primaries (#11420)   This PR restricts access via the UI to only the default partition when in a non-primary datacenter i.e. you can only have multiple (non-default) partitions in the primary datacenter.
4312,"ui: Add initial ""How 2 Test UI"" docs (#11296)",Attempt to document out what a beginner to the project needs to know here in order to get started quickly Co-authored-by: Jared Kirschner 85913323+jkirschner-hashicorp@users.noreply.github.com
4313,Update CTS compatibility matrix to include TFC and flexible (#11424),
4314,ui: Ensure we provide an id for filtering policy-tokens (#11311),
4315,describe how alt-domain works in docs,
4316,remove spaces,
4317,"fix altDomain responses for services where address is IP, added tests",
4318,"fix encodeIPAsFqdn to return alt-domain when requested, added test case",
4319,"fixed altDomain response for NS type queries, and added test",
4320,"edited TestDNS_AltDomains_Service to test responses for altDomains, and added TXT additional section check",
4321,"fixed alt-domain answer for SRV records, and TXT records in additional section",
4322,ui: Pass primary dc through to uiserver (#11317),Co-authored-by: John Cowen johncowen@users.noreply.github.com
4323,Create linux packaging structure,Copied from hashicorp/linux-packaging https://github.com/hashicorp/linux-packaging/tree/24e7e2675b2795b02147313e18848233d6a3975c Signed-off-by: Scott Macfarlane smacfarlane@hashicorp.com
4324,Add crt release workflow,
4325,Add Dockerfile,
4326,Create initial ci.hcl for CRT Releases,Signed-off-by: Scott Macfarlane smacfarlane@hashicorp.com
4327,Remove outdated partition label from test,
4328,Rename service-exports to partition-exports,"Existing config entries prefixed by service- are specific to individual services. Since this config entry applies to partitions it is being renamed. Additionally, the Partition label was changed to Name because using Partition at the top-level and in the enterprise meta was leading to the enterprise meta partition being dropped by msgpack."
4329,Merge pull request #11232 from hashicorp/dnephin/acl-legacy-remove-docs,acl: add docs and changelog for the removal of the legacy ACL system
4330,docs: Move consul-k8s architecture docs to Overview (#11414), docs: Move consul-k8s architecture docs to Overview
4331,Merge pull request #11184 from hashicorp/dnephin/acl-legacy-remove-state-store,"acl: remove legacy type constants, and remove state store support for setting legacy ACLs"
4332,Merge pull request #11183 from hashicorp/dnephin/acl-legacy-remove-struct,acl: remove the remaining parts of structs/acl_legacy.go
4333,Update agent/consul/acl_client.go,Co-authored-by: Freddy freddygv@users.noreply.github.com
4334,state: remove support for updating legacy ACL tokens,
4335,acl: remove init check for legacy anon token,This token should always already be migrated from a previous version.
4336,acl: remove legacy parameter to ACLDatacenter,It is no longer used now that legacy ACLs have been removed.
4337,acl: remove ACLTokenTypeManagement,
4338,"acl: remove ACLTokenTypeClient,",along with the last test referencing it.
4339,acl: remove legacy arg to store.ACLTokenSet,And remove the tests for legacy=true
4340,acl: remove EmbeddedPolicy,"This method is no longer. It only existed for legacy tokens, which are no longer supported."
4341,acl: remove tests for resolving legacy tokens,"The code for this was already removed, which suggests this is not actually testing what it claims. I'm guessing these are still resolving because the tokens are converted to non-legacy tokens?"
4342,acl: stop replication on leadership lost,"It seems like this was missing. Previously this was only called by init of ACLs during an upgrade. Now that legacy ACLs are  removed, nothing was calling stop. Also remove an unused method from client."
4343,Remove incorrect TODO,
4344,acl: move the legacy ACL struct to the one package where it is used,It is now only used for restoring snapshots. We can remove it in phase 2.
4345,acl: remove most of the rest of structs/acl_legacy.go,
4346,Merge pull request #11163 from hashicorp/feature/ingress-tls-mixed,Add support for enabling connect-based ingress TLS per listener.
4347,"fix autopilot_failure_tolerance, add autopilot metrics test case (#11399)",Signed-off-by: FFMMM FFMMM@users.noreply.github.com
4348,fix social share image (#11235),  Fix social share image   Change name   make absolute path 
4349,docs: minor Consul K8s changes (#11402), docs: minor Consul K8s changes
4350,Use correct registry url,A small typo in the module source leads to an error when performing terraform init.
4351,test: pin the version of bats to one that works on CircleCI (#11401),
4352,Update segment.mdx,
4353,docs: bump reference to consul-k8s cli to beta and reformat helm config example (#11398),
4354,Merge pull request #11395 from hashicorp/dnephin/remove-old-test-flake-workflow,build-support: remove test-flake machinery
4355,build-support: remove test-flake machinery,"This machinery was not used, and does not appear to be maintained. In practice we really don't need anything to detect flaky tests. Our CI system identifies flaky tests at https://app.circleci.com/insights/github/hashicorp/consul/workflows/go-tests/tests?branch=main Mostly what we need is a way to reproduce flakes, which can be done directly with the Go CLI, using the -race, -count, and (new in Go 1.17) -shuffle flags."
4356,Merge pull request #11364 from hashicorp/use-go1.17,ci: test against go1.17
4357,Update docs for tls_cipher_suites (#11070),
4358,use *telemetry.MetricsPrefix as prometheus.PrometheusOpts.Name (#11290),Signed-off-by: FFMMM FFMMM@users.noreply.github.com
4359,ci: test against go1.17,
4360,fix leadership transfer on leave suggestions (#11387),  add suggestions   set isLeader to false when leadership transfer succeed 
4361,Merge pull request #11389 from hashicorp/cli-intentions-docs,docs: added deprecation message to CLI command intentions overview page
4362,docs: added deprecation message to CLI command intentions overview page,
4363,update raft to v1.3.2 (#11375),  update raft to v1.3.2   add changelog   fix changelog 
4364,try to perform a leadership transfer when leaving (#11376),  try to perform a leadership transfer when leaving   add a changelog 
4365,Merge pull request #11366 from hashicorp/service-exports,oss: Add new service-exports config entry
4366,Update HashiConf alert-banner expiration (#11373),Updates the HashiConf Alert Banner expiration to 10/20 @ 11pm (PT)
4367,new banner alert (#11370),updating with the latest blog
4368,test: remove some envoy integ test warnings (#11369),"We launch one container as part of the test with --pid=host but apparently within that container it launches a copy of ""tini"" as a process supervisor that prefers to be PID 1. Because it's not PID 1 it logs a warning message about this to the envoy integration test logs that can lead to thinking somehow that a test failure is related when in fact it's completely unrelated. Adding this environment variable avoids the warning."
4369,build: fix ui make target to use the same frontend stack as the regular release (#11368),
4370,Add new service-exports config entry,
4371,deps: update consul-api and consul-sdk (#11361),  deps: update consul/sdk in api/go.mod   deps: update consul/api to v1.11.0 
4372,Merge pull request #11325 from hashicorp/docs/admin-partitions-concept-v1.11.0,Docs/admin partitions concept v1.11.0 beta1
4373,Merge pull request #11358 from butuzov/refactor-strings,refactor: replace (*bytes.Buffer).WriteString with (*bytes.Buffer).Write
4374,added info about resource behavior when upgrading to 1.11 +,
4375,applying most of blake's feedback - still have a question,
4376,Merge pull request #11328 from radiantly/ui/feature/allow-${}-style-interpolation,ui: Allow ${ } interpolation for UI Dashboard template URLs
4377,Merge pull request #11293 from bisakhmondal/service_filter,expression validation of service-resolver subset filter
4378,Merge pull request #11278 from anihm136/main,Update docs: Mention grafana dashboard
4379,added changelog,
4380,refactor: replace (bytes.Buffer).WriteString with (bytes.Buffer).Write,"This PR change one method of bytes.Buffer struct package with a similar one, as result - code produce less allocations on heap."
4381,applying cfeedback left in comments,
4382,Apply suggestions from code review,Applying some of the feedback from review Co-authored-by: Freddy freddygv@users.noreply.github.com Co-authored-by: David Yu dyu@hashicorp.com
4383,Rebase and rebuild golden files for Envoy version bump,
4384,Update website/content/commands/admin-partition.mdx,Co-authored-by: David Yu dyu@hashicorp.com
4385,Refactor resolveListenerSDSConfig to pass in whole config,
4386,Add Changelog,
4387,Add support for enabling connect-based ingress TLS per listener.,
4388,docs: re-do docs update for consul k8s cli beta (#11341),  docs: re-do docs update for consul k8s cli beta   Update website/content/docs/k8s/k8s-cli.mdx   Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com  removing sentence fragment  Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
4389,Single link,
4390,Merge remote-tracking branch 'upstream/main',
4391,Remove note,
4392,website: Update alert banner for HashiConf (#11344),  Update alert banner for HashiConf   Closer expiration date   Remove unnecessary backticks   Final cleanup 
4393,ui: Remove remaining partition FIXME comments (#11312),
4394,docs: Mesh gateway requires 1.6.0 or newer (#11333),  1.6.0 or newer   Update website/content/docs/connect/gateways/mesh-gateway/index.mdx Co-authored-by: David Yu dyu@hashicorp.com Co-authored-by: mrspanishviking cardenas88karl@gmail.com 
4395,added basic instructions for deploying to k8s,
4396,Update docs for consul-k8s v0.35.0 (#11349),
4397,Add changelog note and amend docs,
4398,ui: Topology metrics view outbound bytes color blue (#11343),
4399,Restored comment.,
4400,Separete test file and no stack trace in ret error,
4401,Merge branch 'hashicorp-main' into serve-panic-recovery,
4402,Merge branch 'main' of https://github.com/hashicorp/consul into hashicorp-main,
4403,website: Upgrade platform analytics package (#11331),
4404,Add protocol example for TFC driver address (#11319), Add protocol example for TFC driver address Format cts code blocks
4405,docs: add partner badge (#11315), docs: add partner badge updates analytics package  Co-authored-by: Bryce Kalow bkalow@hashicorp.com
4406,ui: Allow ${} interpolation for template URLs,
4407,initial commit adding admin partitions section to docs - several more changes to come,
4408,acl: small OSS refactors to help ensure that auth methods with namespace rules work with partitions (#11323),
4409,Minor followup to nia 0.4.0 docs (#11306), Minor updates to source-input docs Co-authored-by: lornasong lornasong@users.noreply.github.com
4410,Merge pull request #11314 from hashicorp/ap/auto-encrypt,
4411,Use stored entmeta to fill authzContext,
4412,Ensure partition is handled by auto-encrypt,
4413,ci: Only install UI dependencies for CI frontend-cache (#11313),
4414,ui: Move the Role remove dialog to use InformedAction (#11298),
4415,website: Add Fathom analytics (#11243),  Impl Fathom analytics   Use analytics package instead of direct impl   Remove explicit fathom-client dep 
4416,Update partnerships.mdx (#11304), Update partnerships.mdx Temporarily removing badge until we can resize it  Co-authored-by: findkim 6362111+findkim@users.noreply.github.com
4417,admin partition docs part 1 - cli,
4418,Add files via upload (#11303),
4419,Merge pull request #11294 from hashicorp/nia/docs-0.4.0,nia/docs 0.4.0
4420,docs: Redirect /docs/commands/acl/role to new URL,
4421,fix: only add prom autopilot gauges to servers (#11241),Signed-off-by: FFMMM FFMMM@users.noreply.github.com
4422,Remove extra '\',
4423,docs/nia: scheduled tasks (#11283)," docs/nia: scheduled tasks  Add basic scheduled task documentation  Add source input documentation  Co-authored-by: Michael Wilkerson 62034708+wilkermichael@users.noreply.github.com   Fix some links   Update Optional Input Variables section   Apply suggestions from code review   Co-authored-by: Melissa Kam 3768460+mkam@users.noreply.github.com  Add source input documentation  Co-authored-by: Michael Wilkerson 62034708+wilkermichael@users.noreply.github.com   updated docs with new ""source input"" terminology where necessary   Apply suggestions from code review   applied Karl's recommendations Co-authored-by: mrspanishviking kcardenas@hashicorp.com  addressed code review comments added rendered input examples to terraform-modules.mdx added hyperlinks to terraform-modules.mdx in configuration.mdx  re-worded initial description of Services Source Input in terraform-modules.mdx   addressed code review comments  fixed spacing of regexp parameter for services source input  reworded description of source input in terraform-modules.mdx   Update from feedback   Add ""currently"" to clarify source input is currently only supported with schedule condition  Reword inspect mode behavaior for scheduled tasks  Co-authored-by: Michael Wilkerson 62034708+wilkermichael@users.noreply.github.com Co-authored-by: Melissa Kam 3768460+mkam@users.noreply.github.com Co-authored-by: Michael Wilkerson mwilkerson@hashicorp.com Co-authored-by: mrspanishviking kcardenas@hashicorp.com"
4424,Update Intentions.List with partitions (#11299),
4425,acl: fix bug in 'consul members' filtering with partitions (#11263),
4426,ui: Fixup route blueprint to reflect project conventions (#11153),
4427,Merge pull request #11218 from hashicorp/cts-tfc-tiers,docs/nia: Clarify that all TFC tiers are supported
4428,update changelog (#11262),
4429,add service resolver subset filter validation,
4430,ui: Topology - Fix up Default Allow and Permissive Intentions notices (#11216), ui: Default allow notices test (#11240)
4431,Update docs: Mention grafana dashboard,
4432,connect: Remove envoy_version from bootstrap template (#11215),
4433,Merge pull request #11222 from hashicorp/clly/service-mesh-metrics,Start tracking connect service mesh usage metrics
4434,Replace fmt.Sprintf with function,
4435,website: upgrade deps to fix search styles (#11271),
4436,ui: consistent empty state for intentions (#11261),
4437,ui: Improve dev-time SSO/OIDC visibility (#11248),"This commit tries to make the development experience of working on our OIDC support a little more realistic, essentially by creating our own OIDC provider in our application (only during development builds). You can still provide a real OIDC provider to work with via our dev time environment/cookie variables as before, just now we default to the behaviour in this commit. Overall this makes it much easier to verify our OIDC support in the UI, and also opens up avenues for us to be able to test more scenarios that we couldn't before (for example not only successful logins, but also erroneous, potentially with multiple error reasons)."
4438,ui: Ignore erroneous ember/jQuery eslint warnings (#11238),
4439,ci: Don't focus install JS deps (#11267),
4440,ui: Fix up socket icon (#11234),
4441,docs: Fixes a typo in the UI readme docs (#11268),
4442,docs/nia: Clearify enhanced backend and include ACL permissions for Consul backend (#11201),
4443,preload json values in structs to determine defaults,
4444,ca: split Primary/Secondary Provider,"To make it more clear which methods are necessary for each scenario. This can also prevent problems which force all DCs to use the same Vault instance, which is currently a problem."
4445,ca: extract primaryUpdateRootCA,This function is only run when the CAManager is a primary. Extracting this function makes it clear which parts of UpdateConfiguration are run only in the primary and also makes the cleanup logic simpler. Instead of both a defer and a local var we can call the cleanup function in two places.
4446,ca: rename functions to use a primary or secondary prefix,This commit renames functions to use a consistent pattern for identifying the functions that can only be called when the Manager is run as the primary or secondary. This is a step toward eventually creating separate types and moving these methods off of CAManager.
4447,ca: make receiver variable name consistent,Every other method uses c not ca
4448,add test cases for h2ping_use_tls default behavior,
4449,Consul on Kuberntes Link (#11265),  Add linke to consul on kubernetes page in homepage   Remove eyebrow 
4450,[Assembly] Consul on Kubernetes Page (#11047),"  Start new page   reset   Consul on Kubernetes - Features List Section (#11078)   Fix conflicts   Start adding and placing content   Add a lot of styling and background image   Looking like design. Before adding more global styles   Work on editing styles   Move imports and switch to flex   Add more styles and bottom left background image   Fix conflicts   Fix styles on mobile   Change images path in public   Updates from code review - Move data and update styles   Convert to tsx and add types   Change button props to get desired styling without using css   Remove margin on mobile   Consul On Kubernetes - Hero (#11089)   Start hero section   Increase max sizes for container   Minor Edits   Use g-grid-container   Edit video styles and test   Rename component   Start moving global styles over   Move hero styles to locl   Remove composes g-hero   Fix flex basis on media   Add display flex to media   Clean up some styles   Consul On Kubernetes - Block List (#11114)   Start block list   Enter data and start styles   Get all images in and update styles   Move data and convert to ts   Add comment in page   Consul On Kubernetes - Side by Side Section (#11122)   Start block list   Enter data and start styles   Get all images in and update styles   Start side by side   Add content and more styles   Some more styles   Add styles for text and titles   Edit styles and clean   Fix spacing between button and text in overview   Delete public folder   Fix images in block on page   remove extra file   Fix classnames import   Use fragment   Consul On Kubernetes - Docs List Component (#11150)   Add docs list component   Add docs list content   Change type declaration   Remove unecessary style   Use fragment   Change icons   Consul On Kubernetes - Card List & Get Started Section  (#11168)   Start card list component   Begin adding content   Start wrapper styles   Add more styles for card   Fix style   Edit styles   Use next Link   Add minor formatting   Make entire card a link   Add transition   Change import   Use svg instead of button and  make target blank   Move wrapper div to component and add classname prop, use color variable for border   Change min of card in grid   Less pxels for min   Update copy   Consul on Kubernetes Content (#11179)   Add content so far   Add hero content and switch video to embed - needs editing   Add overview and docs links   Use iframe in hero and style   Remove = null on prop   Add learn tutorials content so far   Change learn tutorials content   Change placeholder learn content   Add requested copy updates   Align numbers   Consul on Kubernetes Content & Design Updates (#11217)   Update docs icons   Update learn cards   Update challenges icon   Video poster pending   New image   Add split up background images   Looking pretty good   Fix up background image   Add more styles   Add meta description and new feature images   Revert img change   Fix up images and replace poster   Switch to grid   Move images   Clean up styles   Change hero button text   Update styles for hero video   Update youtube url   Use gray variable   Consul on Kubernetes Metadata (#11219)   Add meta data for sharing   Test   Test 2   Add meta title   Update share image   CHange name   Test   Test again   Use relative url   Swap urls for hero ctas   Update tutorial card to be uniform   Change overview button text   Resolve conflicts and fix dependencies "
4451,fix consul_autopilot_healthy metric emission (#11231),https://github.com/hashicorp/consul/issues/10730
4452,ui: Instructions for branch naming pattern (#11256),  Instructions for branch naming pattern   fix 
4453,docs: Remove Ambassador docs since they are outdated and link to Learn Guide (#11251), docs: Remove Ambassador docs since they are outdated Relink to Learn guide
4454,Rename ConfigUsageEnterprise to EnterpriseConfigEntryUsage,
4455,ui: Adds initial CRUD for partitions (#11188)," Add is and test helpers in a similar vein to can  Adds 2 new helpers in a similar vein to ember-cans can:  is allows you to use vocab/phrases such as (is ""something model"") which calls isSomething() on the models ability.  test allows you to use vocab/phrases such as (test ""is something model"") or (test ""can something model"")which calls isSomething() / canSomething() on the models ability. Mostly using the is helper and the can helper. It's basically the is/can helper combined.   Adds TextInput component + related modifiers/helpers/machines/services (#11189)   Adds a few new components/modifiers/helpers to aid building forms.  state-chart helper, used in lieu of a more generic approach for requiring our statecharts. A few modifications to our existing disabled modifier. A new 'validation' modifier, a super small form validation approach built to make use of state charts (optionally). Eventually we should be able to replace our current validation approach (ember-changeset-validations + extra deps) with this. A new TextInput component, which is the first of our new components specifically to make it easy to build forms with validations. This is still a WIP, I left some comments in pointing out where this one would be progressed, but as we don't need the planned functionality yet, I left it where it was. All of this will be fleshed out more at a later date.  Documentation is included for all of ^  ui: Adds initial CRUD for partitions (#11190)  Adds basic CRUD support for partitions. Engineering-wise probably the biggest takeaway here is that we needed to write very little javascript code to add this entire feature, and the little javascript we did need to write was very straightforwards. Everything is pretty much just HTML. Another note to make is that both ember-changeset and ember-data (model layer things) are now completely abstracted away from the view layer of the application. New components:  Consul::Partition::Form Consul::Partition::List Consul::Partition::Notifications Consul::Partition::SearchBar Consul::Partition::Selector  See additional documentation here for more details New Route templates:  index.hbs partition listing/searching/filtering edit.hbs partition editing and creation  Additionally: There is some additional debug work here for better observability and to prevent any errors regarding our href-to usage when a dc is not available in our documentation site. Our softDelete functionality has been DRYed out a little to be used across two repos. isLinkable was removed from our ListCollection component for lists like upstream and service listing, and instead use our new is helper from within the ListCollection, meaning we've added a few more lighterweight templateOnly components.  ui: Exclude all debug-like files from the build (#11211)  This PR adds /-debug. to our test/prod excluded files (realised I needed to add test-support.js also so added that here as its more or less the same thing). Conditionally juggling ES6 static imports (specifically debug ones) for this was also getting a little hairy, so I moved it all to use the same approach as our conditional routes. All in all it brings the vendor build back down to ~430kb gzipped."
4456,Merge pull request #11037 from hashicorp/docs/mesh-header-manip,Document HTTP Header manipulation options added in #10613
4457,Wording improvements from review,
4458,Document running tcpdump on Consul servers (#11249),  Document running tcpdump on Consul servers   Update website/content/docs/troubleshoot/faq.mdx   Co-authored-by: Daniel Nephin dnephin@hashicorp.com
4459,Rename and prefix ConfigEntry in Usage table,Rename ConfigUsage functions to ConfigEntry prefix ConfigEntry kinds with the ConfigEntry table name to prevent potential conflicts
4460,Add connect specific prefix to Usage table,Ensure that connect Kind's are separate from ConfigEntry Kind's to prevent miscounting
4461,github: Amends to the UI issue template (#11199),"Some updates to the UI specific issue template. The previous 'Old UI or New UI' question is no longer relevant and considering the amount of visual change we've had, this leads to folks answering things like 'Consul 1.10.0+ent with new, new UI'. Now it's just ""The Consul UI"". I mainly took the rest from the current Consul Core issue template but made it relevant to the UI both for issues/bugfixes and for suggestions/improvements."
4462,ui: Replaces almost all remaining instances of SASS variables with CSS (#11200),"From an engineers perspective, whenever specifying colors from now on we should use the form: color: rgb(var(--tone-red-500)); Please note:  Use rgb. This lets us do this like rgb(var(--tone-red-500) / 10%) so we can use a 10% opacity red-500 if we ever need to whilst still making use of our color tokens. Use --tone-colorName-000 (so the prefix tone). Previously we could use a mix of --gray-500: $gray-500 (note the left hand CSS prop and right hand SASS var) for the things we need to theme currently. As we no longer use SASS we can't do --gray-500: --gray-500, so we now do --tone-gray-500: --gray-500.  Just for clarity after that, whenever specifying a color anywhere, use rgb and --tone. There is only one reason where you might not use tone, and that is if you never want a color to be affected by a theme (for example a background shadow probably always should use --black) There are a 2 or 3 left for the code editor, plus our custom-query values"
4463,ui: Fix up blocking reconciliation for multiple models (#11237)," In the future, this should all be moved to each individual repository now, which will mean we can finally get rid of this service.  This PR moves reconciliation to 'each individual repository'. I stopped short of getting rid of the service, but its so small now we pretty much don't need it. I'd rather wait until I look at the equivalent DataSink service and see if we can get rid of both equivalent services together (this also currently dependant on work soon to be merged) Reconciliation of models (basically doing the extra work to clean up the ember-data store and bring our frontend 'truth' into line with the actual backend truth) when blocking/long-polling on different views/filters of data is slightly more complicated due to figuring out what should be cleaned up and what should be left in the store. This is especially apparent for KVs. I built in a such a way to hopefully make sure it will all make sense for the future. I also checked that this all worked nicely with all our models, even KV which has never supported blocking queries. I left all that work in so that if we want to enable blocking queries/live updates for KV it now just involves deleting a couple of lines of code. There is a tonne of old stuff that we can clean up here now (our 'fake headers' that we pass around) and I've added that to my list of thing for a 'Big Cleanup PR' that will remove lots of code that we no longer require."
4464,fix mistakes in docs,
4465,only set default on H2PingUseTLS if H2PING is set,
4466,api: remove the test for TestAPI_RulesTranslate_Raw,"The API endpoint was removed in a previous commit, so we can no longer test this deprecated method."
4467,docs: add notice that legacy ACLs have been removed.,Add changelog Also remove a metric that is no longer emitted that was missed in a previous step.
4468,acl: remove unused translate rules endpoint,"The CLI command does not use this endpoint, so we can remove it. It was missed in an earlier pass."
4469,add changelog entry for enterprise fix (#11226),
4470,Merge pull request #11205 from jmgilman/libraries-and-sdks,Adds consulrs Rust client library to SDK list
4471,"Add changelog, website and metric docs",Add changelog to document what changed. Add entry to telemetry section of the website to document what changed Add docs to the usagemetric endpoint to help document the metrics in code
4472,website: upgrades dependencies (#11178),
4473,api-docs: remove duplicate acl-legacy page,Redirect the url to the copy that is part of the left nav.
4474,docs/nia: Clarify that all TFC tiers are supported,
4475,Fixing SOA record to use alt domain when alt domain in use (#10431),
4476,Merge pull request #11209 from hashicorp/cts-beta-removal,nia/docs: Remove references to v0.4.0-beta
4477,fix test,
4478,fix protos,
4479,fix protos,
4480,fix formatting,
4481,fix formatting,
4482,change config option to H2PingUseTLS,
4483,remove trailing comma from example in docs,
4484,add support for h2c in h2 ping health checks,
4485,Merge pull request #11214 from hashicorp/docs-k8s-cli-add-version-command,added version flag to consul-k8s cli docs
4486,fixed command in install section,
4487,added version flag to consul-k8s cli docs,
4488,Merge pull request #11182 from hashicorp/dnephin/acl-legacy-remove-upgrade,"acl: remove upgrade from legacy, start in non-legacy mode"
4489,Merge pull request #11118 from hashicorp/eculver/remove-envoy-1.15,Remove support for Envoy 1.15
4490,Merge pull request #11115 from hashicorp/eculver/envoy-1.19.1,Add support for Envoy 1.19.1
4491,acl: remove updateEnterpriseSerfTags,"The only remaining caller is a test helper, and the tests don't use the enterprise gossip pools."
4492,Merge pull request #11126 from hashicorp/dnephin/acl-legacy-remove-resolve-and-get-policy,acl: remove ACL.GetPolicy RPC endpoint and ACLResolver.resolveTokenLegacy
4493,Merge pull request #11210 from hashicorp/dnephin/fix-raft-authz-error,rpc: include error for AuthorizeServerConn failures
4494,Add metrics to count the number of service-mesh config entries,
4495,Add metrics to count connect native service mesh instances,This will add the counts of the service mesh instances tagged by whether or not it is connect native
4496,Add metrics to count service mesh Kind instance counts,This will add the counts of service mesh instances tagged by the different ServiceKind's.
4497,rpc: include error for AuthorizeServerConn failures,The errs were not being captured because the value of append was not being assigned.
4498,nia/docs: Remove references to v0.4.0-beta,
4499,Merge pull request #11135 from hashicorp/cts-service-tag,nia/docs: Remove deprecated tag option from service config
4500,nia/docs: Remove deprecated tag option from service config,
4501,CTS: add TLS config for TFE connection (#11166),Co-authored-by: mrspanishviking kcardenas@hashicorp.com
4502,Adds consulrs Rust client library to SDK list,
4503,acl: fix test failures caused by remocving legacy ACLs,"This commit two test failures:  Remove check for ""in legacy ACL mode"", the actual upgrade will be removed in a following commit. Remove the early WaitForLeader in dc2, because with it the test was    failing with ACL not found."
4504,Add 1.15 versions to too old list,
4505,Merge branch 'eculver/envoy-1.19.1' into eculver/remove-envoy-1.15,
4506,Update default version in command docs,
4507,agent: Reject partitions in legacy intention endpoints (#11181),
4508,Support partitions in parseIntentionStringComponent (#11202),
4509,fix token list by auth method  (#11196),  add tests to OIDC authmethod and fix entMeta when retrieving auth-methods   fix oss compilation error 
4510,ui: Address some Admin Partition FIXMEs (#11057),This commit addresses some left over admin partition FIXMEs  Adds Partition correctly to Service Instances Converts non-important 'we can do this later' FIXMEs to TODOs Removes some FIXMEs that I've double checked and addressed.  Most of the remaining FIXMEs I'm waiting on responses to questions from the consul core folks for. I'll address those in a separate PR.
4511,Merge pull request #11185 from hashicorp/docs-improve-agent-overview,providing additional information about the Consul agent
4512,"applied feedback, moved the Lifecycle info to the front",
4513,Merge branch 'eculver/envoy-1.19.1' into eculver/remove-envoy-1.15,
4514,regenerate more envoy golden files,
4515,ui: Use of header default ACL policy (#11192),  Use of header default ACL policy   Update test for dc serializer 
4516,ui: Make it hard to not URLEncode DataSource srcs/URIs (#11117),"Our DataSource came in very iteratively, when we first started using it we specifically tried not to use it for things that would require portions of the @src="""" attribute to be URL encoded (so things like service names couldn't be used, but dc etc would be fine). We then gradually added an easy way to url encode the @src="""" attributes with a uri helper and began to use the DataSource component more and more. This meant that some DataSource usage continued to be used without our uri helper. Recently we hit #10901 which was a direct result of us not encoding @src values/URIs (I didn't realise this was one of the places that required URL encoding) and not going back over things to finish things off once we had implemented our uri helper, resulting in ~half of the codebase using it and ~half of it not. Now that almost all of the UI uses our DataSource component, this PR makes it even harder to not use the uri helper, by wrapping the string that it requires in a private URI class/object, that is then expected/asserted within the DataSource component/service. This means that as a result of this PR you cannot pass a plain string to the DataSource component without seeing an error in your JS console, which in turn means you have to use the uri helper, and it's very very hard to not URL encode any dynamic/user provided values, which otherwise could lead to bugs/errors similar to the one mentioned above. The error that you see when you don't use the uri helper is currently a 'soft' dev time only error, but like our other functionality that produces a soft error when you mistakenly pass an undefined value to a uri, at some point soon we will make these hard failing ""do not do this"" errors. Both of these 'soft error' DX features have been used this to great effect to implement our Admin Partition feature and these kind of things will minimize the amount of these types of bugs moving forwards in a preventative rather than curative manner. Hopefully these are the some of the kinds of things that get added to our codebase that prevent a multitude of problems and therefore are often never noticed/appreciated. Additionally here we moved the remaining non-uri using DataSources to use uri (that were now super easy to find), and also fixed up a place where I noticed (due to the soft errors) where we were sometimes passing undefined values to a uri call. The work here also led me to find another couple of non-important 'bugs' that I've PRed already separately, one of which is yet to be merged (#11105), hence the currently failing tests here. I'll rebase that once that PR is in and the tests here should then pass 🤞 Lastly, I didn't go the whole hog here to make DataSink also be this strict with its uri usage, there is a tiny bit more work on DataSink as a result of recently work, so I may (or may not) make DataSink equally as strict as part of that work in a separate PR."
4517,docs: Call out the UI in README and include details for contributing to it (#11187),
4518,providing additional information about the Consul agent,
4519,acl: call stop for the upgrade goroutine when done,"TestAgentLeaks_Server was reporting a goroutine leak without this. Not sure if it would actually be a leak in production or if this is due to the test setup, but seems easy enough to call it this way until we remove legacyACLTokenUpgrade."
4520,acl: only run startACLUpgrade once,Since legacy ACL tokens can no longer be created we only need to run this upgrade a single time when leadership is estalbished.
4521,wrap few doRequest calls for error handling (#11158),
4522,acl: remove reading of serf acl tags,"We no long need to read the acl serf tag, because servers are always either ACL enabled or ACL disabled. We continue to write the tag so that during an upgarde older servers will see the tag."
4523,acl: fix test failure,For some reason removing legacy ACL upgrade requires using an ACL token now for this WaitForLeader.
4524,acl: remove legacy ACL upgrades from Server,As part of removing the legacy ACL system
4525,acl: fix test failures caused by remocving legacy ACLs,"This commit two test failures:  Remove check for ""in legacy ACL mode"", the actual upgrade will be removed in a following commit. Use the root token in WaitForLeader, because without it the test was    failing with ACL not found."
4526,acl: remove ACL.GetPolicy endpoint and resolve legacy acls,And all code that was no longer used once those two were removed.
4527,acl: remove ACL upgrading from Clients,"As part of removing the legacy ACL system ACL upgrading and the flag for legacy ACLs is removed from Clients. This commit also removes the 'acls' serf tag from client nodes. The tag is only ever read from server nodes. This commit also introduces a constant for the acl serf tag, to make it easier to track where it is used."
4528,Merge pull request #11136 from hashicorp/dnephin/acl-resolver-fix-default-authz,acl: fix default Authorizer for down_policy extend-cache/async-cache
4529,Merge pull request #11110 from hashicorp/dnephin/acl-legacy-remove-initialize,acl: remove initializeLegacyACL and the rest of the legacy FSM commands
4530,Merge pull request #10999 from hashicorp/dnephin/revert-config-xds-port,Revert config xds_port
4531,command/envoy: stop using the DebugConfig from Self endpoint,"The DebugConfig in the self endpoint can change at any time. It's not a stable API. This commit adds the XDSPort to a stable part of the XDS api, and changes the envoy command to read this new field. It includes support for the old API as well, in case a newer CLI is used with an older API, and adds a test for both cases."
4532,Add changelog,
4533,acl: remove the last of the legacy FSM,"Replace it with an implementation that returns an error, and rename some symbols to use a Deprecated suffix to make it clear. Also remove the ACLRequest struct, which is no longer referenced."
4534,acl: remove bootstrap-init FSM operation,
4535,acl: remove initializeLegacyACL from leader init,
4536,"acl: remove ACLDelete FSM command, and state store function",These are no longer used now that ACL.Apply has been removed.
4537,acl: remove legacy field to ACLBoostrap,
4538,"Revert ""Merge pull request #10588 from hashicorp/dnephin/config-fix-ports-grpc""","This reverts commit 74fb650b6b966588f8faeec26935a858af2b8bb5, reversing changes made to 58bd8173364effb98b9fd9f9b98d31dd887a9bac."
4539,Merge pull request #11101 from hashicorp/dnephin/acl-legacy-remove-rpc-2,acl: remove legacy ACL.Apply RPC
4540,"Revert ""Merge pull request #10618 from hashicorp/dnephin/docs-add-deprecation-version-grpc-port""","This reverts commit 81bb5f33ebb33d1084fcc50aab62950eb7ddebc8, reversing changes made to 20feb42d3a663e72cb46cda6c08c0588f5bbf3b4."
4541,Merge pull request #11177 from hashicorp/dnephin/remove-entmeta-methods,structs: remove EnterpriseMeta helper methods
4542,Merge pull request #10986 from hashicorp/dnephin/acl-legacy-remove-rpc,acl: remove legacy ACL RPC - part 1
4543,nia/docs 0.4.0-beta1 (#11170),  docs/nia: Add Consul KV condition   docs/nia: Clarify boolean Consul KV condition options   Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com  nia/docs: Remove TFE-only restriction  Also updates Terraform Enterprise references to the more general Terraform Cloud term.   nia/docs: Update Terraform Cloud features   nia/docs: Callouts for v0.4.0-beta   docs/nia: Indicate version for removal of tag field   Clarifying when this tag will be removed so there is no confusion when it is not present in the v0.4.0-beta release. Co-authored-by: Melissa Kam mkam@hashicorp.com Co-authored-by: Melissa Kam 3768460+mkam@users.noreply.github.com Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
4544,structs: rename the last helper method.,"This one gets used a bunch, but we can rename it to make the behaviour more obvious."
4545,structs: remove another helper,We already have a helper funtion.
4546,structs: remove two methods that were only used once each.,"These methods only called a single function. Wrappers like this end up making code harder to read because it adds extra ways of doing things. We already have many helper functions for constructing these types, we don't need additional methods."
4547,Merge pull request #10988 from hashicorp/dnephin/acl-legacy-remove-config,acl: isolate deprecated config and warn when they are used
4548,Merge pull request #9456 from hashicorp/dnephin/config-deprecation,config: Use DeprecatedConfig struct for deprecated config fields
4549,Update docs: correct provider argument is tag_key,
4550,Add TOC to helm reference (#11144),
4551,Merge remote-tracking branch 'origin/eculver/remove-envoy-1.15' into eculver/remove-envoy-1.15,
4552,Fix typo,Co-authored-by: Freddy freddygv@users.noreply.github.com
4553,Merge branch 'eculver/envoy-1.19.1' into eculver/remove-envoy-1.15,
4554,Merge branch 'main' into eculver/envoy-1.19.1,
4555,Fix broken link (#11171),
4556,Cleanup unnecessary normalizing method (#11169),
4557,Merge pull request #11084 from krastin/krastin-autopilot-loggingtypo,Fix a tiny typo in logging in autopilot.go
4558,Merge branch 'main' into eculver/envoy-1.19.1,
4559,Merge pull request #11167 from hashicorp/add-cross-dc-comm-model-visual,Improve mesh gateway diagram
4560,Improve mesh gateway diagram,Diagram now shows all possible cross-DC communication models supported by mesh gateways for both the control and data planes.
4561,Apply suggestions from code review,Co-authored-by: Blake Covarrubias blake@covarrubi.as
4562,agent: Clean up unused built-in proxy config (#11165),
4563,acl: update GetPolicyByName method implementation (#11055),
4564,Merge pull request #10702 from jkirschner-hashicorp/network-segments-docs-enhancements,Network segments docs enhancements
4565,Merge pull request #10725 from hashicorp/banks-patch-3,Call out the incompatibility of wildcards and L7 permissions
4566,"docs: consul-k8s cli install, add bin/ to source path (#11146)",Add bin/ to path from which you move consul-k8s to /usr/local/bin/consul-k8s
4567,"changelog updates for 1.10.3, 1.9.10, and 1.8.16 (#11160)",
4568,Update alert banner for HashiConf Global 2021 (#11154),
4569,ui: Adds Flight icons to our icon set (#11097)," ui: Adds Flight icons to our icon set  This commit doesn't actually add anything to the UI, rather just makes the flight icons available for use."
4570,ui: Hide create buttons for policies/roles/namespaces with readonly access (#10914),"This PR adds a check to policy, role and namespace list pages to make sure the user has can write those things before offering to create them via a button. (The create page/form would then be a read-only form)"
4571,ui: Don't show the CRD menu for read-only intentions (#11149)," ui: Don't show the CRD menu for read-only intentions  The UI bug here manifests itself only when a user/token is configured to have read-only access to intentions. Instead of only letting folks click to see a read only page of the intention, we would show an additional message saying that the intention was read-only due to it being 'Managed by [a kubernetes] CRD'. Whilst the intention was still read only, this extra message was still confusing for users. This PR fixes up the conditional logic and further moves the logic to use ember-can - looking at the history of the files in question, this bug snuck itself in partly due to it being 'permission-y type stuff' previous to using ember-can and when something being editable or not was nothing to do with ACLs. Then we moved to start using ember-can without completely realising what IsEditable previously meant. So overall the code here is a tiny bit clearer/cleaner by adding a proper can view CRD intention instead of overloading the idea of 'editability'."
4572,ui: Adds a set of basic unit tests for abilities (#11132),
4573,Document HTTP Header manipulation options added in #10613,
4574,ui: Remove info panel from the nspace menu when editing nspaces (#11130), ui: Remove info panel form the nspace menu when editing nspaces
4575,ui: Add initial partition support to intentions (#11129), ui: Add initial partition support to intentions
4576,docs: Decode K8s secrets with base64decode function,Use kubectl's base64decode template function (added in K8s 1.11) to decode values in Secrets. Removes external call to base64 utility on the host system.
4577,ui: Use last-child for selecting the desired nspace instead of nth-child (#11127),
4578,ui: Remove refresh-route action for session invalidation (#11105),"  ui: Move action to the correct button for session invalidation   Remove refresh-route completely, its not needed "
4579,Merge pull request #11028 from hashicorp/docs-k8s-cli-alpha,adding k8s-cli alpha docs
4580,"adding timeout flags, wait flag, and updated build procedure",
4581,docs: clarify acl down policy,
4582,acl: fix default authorizer for down_policy,This was causing a nil panic because a nil authorizer is no longer valid after the cleanup done in https://github.com/hashicorp/consul/pull/10632.
4583,Remove t.Parallel from TestACLResolver_DownPolicy,"These tests run in under 10ms, t.Parallel does nothing but slow them down and make failures harder to debug when one panics."
4584,Refactor table index acl phase 2 (#11133),  extract common methods from oss and ent   remove unreachable code   add missing normalize for binding rules   fix oss to use Query 
4585,config: Move ACLEnableKeyListPolicy to DeprecatedConfig,
4586,config: move acl_ttl to DeprecatedConfig,
4587,"config: move acl_{default,down}_policy to DeprecatedConfig",
4588,config: Deprecate EnableACLReplication,replaced by ACL.TokenReplication
4589,config: move ACL master token and replication to DeprecatedConfig,
4590,docs: Fix grammatical errors in glossary (#10751),
4591,Merge pull request #10903 from hashicorp/feature/ingress-sds,Add Support to for providing TLS certificates for Ingress listeners from an SDS source
4592,Refactor table index (#11131),  convert tableIndex to use the new pattern   make indexFromString available for oss as well   refactor indexUpdateMaxTxn 
4593,Final readability tweaks from review,
4594,Add Envoy integration test for split-route SDS case,
4595,Minor improvements to SDS server from review,
4596,Fix subtle loop bug and add test,
4597,Refactor SDS validation to make it more contained and readable,
4598,Refactor Ingress-specific lister code to separate file,
4599,Minor PR typo and cleanup fixes,
4600,Revert abandonned changes to proxycfg for Ent test consistency,
4601,Fix merge conflict in xds tests,
4602,Allow skipping v2 compat tests for SDS as it's only the SDS server integration that doesn't support v2,
4603,Fix integration tests in CI - serve SDS certs from the Docker image not a mounted path,
4604,Fix integration test for older Envoy versions,
4605,Fix some more Enterprise Normalization issues affecting tests,
4606,Add changelog; Add API package support for new fields.,
4607,Remove unused argument to fix lint error,
4608,Handle namespaces in route names correctly; add tests for enterprise,
4609,Add basic integration test for Envoy ingress with SDS,
4610,Update xDS routes to support ingress services with different TLS config,
4611,Update xDS Listeners with SDS support,
4612,Update proxycfg to hold more ingress config state,
4613,Add ingress-gateway config for SDS,
4614,acl: remove ACL.Apply,As part of removing the legacy ACL system.
4615,acl: made acl rules in tests slightly more specific,"When converting these tests from the legacy ACL system to the new RPC endpoints I initially changed most things to use _prefix rules, because that was equivalent to the old legacy rules. This commit modifies a few of those rules to be a bit more specific by replacing the _prefix rule with a non-prefix one where possible."
4616,partitions/authmethod-index work from enterprise (#11056), partitions/authmethod-index work from enterprise  Signed-off-by: Mark Anderson manderson@hashicorp.com
4617,connect: Allow upstream listener escape hatch for prepared queries (#11109),
4618,connect: remove support for Envoy 1.15,
4619,grpc: strip local ACL tokens from RPCs during forwarding if crossing datacenters (#11099),Fixes #11086
4620,add changelog entry,
4621,update docs to indicate support for envoy 1.19.1 in Consul 1.11.x,
4622,ui: Add initial i18n docs page (#10888),
4623,ui: Add partition parameter when clearing child-selector forms in ACLs (#11106),
4624,ui: Add an isDestroyed check for the MenuPanel component (#11104),This solves an occasionally flakey tests I see every so often
4625,ui: Remove legacy ACLs (#11096),
4626,ui: Gracefully recover from non-existent DC errors (#11077)," ui: Gracefully recover from non-existent DC errors  This PR fixes what happens in the UI if you try to navigate to a non-existing DC. When we received a 500 error from an API response due to a non-existent DC, previously we would show a 404 error, which is what we were trying to convey. But in the spirit of the UI being a 'thin client', its probably best to just show the 500 error from the API response, which may help folks to debug any issues better.  Automatically set the CONSUL_DATACENTER_LOCAL env var for testing"
4627,ui: Always show main navigation Key/Value link (#10916)," ui: Ignore response from API for KV permissions  Currently there is no way for us to use our HTTP authorization API endpoint to tell us whether a user has access to any KVs (including the case where a user may not have access to the root KV store, but do have access to a sub item) This is a little weird still as in the above case the user would click on this link and still get a 403 for the root, and then have to manually type in the URL for the KV they do have access to. Despite this we think this change makes sense as at least something about KV is visible in the main navigation. Once we have the ability to know if any KVs are accessible, we can add this guard back in. We'd initially just removed the logic around the button, but then noticed there may be further related KV issues due to the nested nature of KVs so we finally decided on simply ignoring the responses from the HTTP API, essentially reverting the KV area back to being a thin client. This means when things are revisited in the backend we can undo this easily change in one place.  Move acceptance tests to use ACLs perms instead of KV ones"
4628,config: Move two more fields to DeprecatedConfig,And add a test for deprecated config fields.
4629,config: Introduce DeprecatedConfig,"This struct allows us to move all the deprecated config options off of the main config struct, and keeps all the deprecation logic in a single place, instead of spread across 3+ places."
4630,lib/decode: fix hook to work with embedded squash struct,"The decode hook is not call for the embedded squashed struct, so we need to recurse when we find squash tags. See https://github.com/mitchellh/mapstructure/issues/226"
4631,add 1.19.x versions to test config,
4632,regenerate more envoy golden files,
4633,Merge pull request #11090 from hashicorp/clly/kv-usage-metrics,Add KVUsage to consul state usage metrics
4634,Update docs (#11111),
4635,Strip out go 1.17 bits,
4636,Merge pull request #11108 from hashicorp/sync-1.11.0-alpha-tag,Sync 1.11.0 alpha tag
4637,Putting source back into Dev Mode,
4638,Merge tag 'v1.11.0-alpha' into main,Version 1.11.0-alpha
4639,Add changelog entry for audit logging header extraction improvement,
4640,Add a mock Agent delegate to ease/improve some types of testing,
4641,auto-updated agent/uiserver/bindata_assetfs.go from commit 9c0233cf5,
4642,"Revert ""ui: Add partition parameter when clearing child-selector forms in ACLs""",This reverts commit a670bde57d913cc27410fec2d62be19491c2bf66.
4643,ui: Add partition parameter when clearing child-selector forms in ACLs,
4644,auto-updated agent/uiserver/bindata_assetfs.go from commit cfbd1bb84,
4645,ui: [BUGFIX] Re-enable namespace menus whilst editing intentions (#11095),"This PR supersedes #10706 and fixes #10686 whilst making sure that saving intentions continues to work. The original fix in #10706 ignored the change action configured for the change event on the menus, meaning that the selected source/destination namespace could not be set by the user when editing/creating intentions. This, coupled with the fact that using the later intention exact endpoint for API requests endpoint means that you could not use wildcard namespaces for saving intentions. All in all this meant that intentions could no longer be saved using the UI (whilst using ENT) This PR reverts #10706 to fix the intention saving issue, and adds a fix for the original visual issue of nspaces doubling up in the menu once clicked. This meant repeating the existing functionality for nspaces aswell as services. It did seem strange to me that the original issue was only apparent for the nspace menus and not the service menus which should all function exactly the same way. There is potentially more to come here partly related to what the exact functionality should be, but I'm working with other folks to figure out what the best way forwards is longer term. In the meantime this brings us back to the original functionality with the visual issue fixed. Squashed commits:  Revert ""ui: Fix dropdown option duplications (#10706)""  This reverts commit eb5512fb74781ea49be743e2f0f16b3f1863ef61.   ui: Ensure additional nspaces are added to the unique list of nspaces   Add some acceptance tests "
4646,acl: remove remaining tests that use ACL.Apply,"In preparation for removing ACL.Apply. Tests for ACL.Apply, ACL.GetPolicy, and ACL upgrades were removed because all 3 of those will be removed shortly. The forth test appears to be for the ACLResolver cache, so the test was moved to the correct test file, and the name was updated to make it obvious what is being tested."
4647,regenerate envoy golden files,
4648,add envoy 1.19.1,
4649,fsm: restore the legacy commands,and emit a helpful error message.
4650,Convert tests to the new ACL system,In preparation for removing ACL.Apply
4651,config: use the new ACL system in tests,In preparation for removing ACL.Apply
4652,catalog: use the new ACL system in tests,In preparation for removing ACL.Apply
4653,Update 4 non-acl tests that used the legacy ACL.Apply,"These tests don't really care about the endpoint, they just need some way to create an ACL token."
4654,acl: remove two commented out tests for legacy ACL replication,They were commented out in 2018.
4655,acl: replace legacy Get and List RPCs with an error impl,These endpoints are being removed as part of the legacy ACL system.
4656,acl: remove a couple legacy ACL operation constants,"structs.ACLForceSet was deprecated 4 years ago, it should be safe to remove now. ACLBootstrapNow was removed in a recent commit. While it is technically possible that a cluster with mixed version could still attempt a legacy boostrap, we documented that the legacy system was deprecated in 1.4, so no clusters that are being upgraded should be attempting a legacy boostrap."
4657,acl: Remove unused ACLPolicyIDType,
4658,Merge pull request #10985 from hashicorp/dnephin/acl-legacy-remove-replication,acl: remove legacy ACL replication
4659,Apply suggestions from code review,Co-authored-by: Matt Keeler mkeeler@users.noreply.github.com
4660,xds: fix representation of incremental xDS subscriptions (#10987),"Fixes #10563 The resourceVersion map was doing two jobs prior to this PR. The first job was to track what version of every resource we know envoy currently has. The second was to track subscriptions to those resources (by way of the empty string for a version). This mostly works out fine, but occasionally leads to consul removing a resource and accidentally (effectively) unsubscribing at the same time. The fix separates these two jobs. When all of the resources for a subscription are removed we continue to track the subscription until envoy explicitly unsubscribes"
4661,"removed extra codeblock ticks, again",
4662,Merge branch 'docs-k8s-cli-alpha' of github.com:hashicorp/consul into docs-k8s-cli-alpha,implementing feedback
4663,fixed formatting,
4664,Apply suggestions from code review,Co-authored-by: David Yu dyu@hashicorp.com
4665,add StatusError to api package (#11054),  add require http codes in api and use in operator_autopilot health check   add StatusError type in api package   Signed-off-by: FFMMM FFMMM@users.noreply.github.com
4666,Rerun go-test and go-test-32bits tests up to 3 times before failing (#11059),  Rerun go-test and go-test-32bits tests up to 3 times before failing   do not run rerun fail report in oss   set back rerun fail report but print to stdin instead of comment 
4667,Fix test,
4668,removed extra codeblock ticks,
4669,Add changelog entry,
4670,Add new telemetry to website,This will add information about the new kv_usage metric to the website
4671,Add KVUsage to consul state usage metrics,This change will add the number of entries in the consul KV store to the already existing usage metrics.
4672,fixed indentation on install page,
4673,removed extra codeblock tic,
4674,xds: ensure the active streams counters are 64 bit aligned on 32 bit systems (#11085),
4675,Update autopilot.go,Fixing a minuscule typo in logging
4676,updating the helm uninstall instructions,
4677,api: add partition field to acl structs (#11080),
4678,fixing some syntax errors that didn't appear locally,
4679,sso/oidc: add support for acr_values request parameter (#11026),Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com
4680,Merge branch 'docs-k8s-cli-alpha' of github.com:hashicorp/consul into docs-k8s-cli-alpha,resolving merge conflict
4681,"applied additional feedback, updated uninstall flags",
4682,Release v1.11.0-alpha,
4683,update bindata_assetfs.go,
4684,Merge pull request #11074 from hashicorp/1.11.0-alpha-changelog,update changelog for v1.11.0-alpha
4685,update changelog for v1.11.0-alpha,
4686,Merge pull request #11050 from hashicorp/ecs-beta-doc-prep,docs: ECS docs for beta
4687,Merge pull request #11073 from hashicorp/changelog/admin-partitions,changelog: add admin partitions feature note
4688,Create _987.md,
4689,Merge pull request #11071 from hashicorp/partitions/ixn-decisions,
4690,Fixup proxycfg tproxy case,
4691,Remove ent checks from oss test,
4692,acl: ensure the global management policy grants all necessary partition privileges (#11072),
4693,Ensure partition is defaulted in authz,
4694,Default the partition in ixn check,
4695,Fixup test,
4696,Account for partitions in ixn match/decision,
4697,Bump go-discover to fix broken dep tree (#10898),
4698,Merge pull request #11048 from hashicorp/pglass/consul-ecs-migrate-task-doc,docs: Migrate Existing Tasks page for ECS
4699,auto-updated agent/uiserver/bindata_assetfs.go from commit 1d9d3349c,
4700,docs: correct link to ecs production installation,
4701,ui: Ensure we request permission wiht the correct partition (#11060),
4702,Fix merge conflict,
4703,Merge branch 'main' into docs-k8s-cli-alpha,
4704,Merge branch 'docs-k8s-cli-alpha' of github.com:hashicorp/consul into docs-k8s-cli-alpha,"removed name flag from install, added config-file flag, applied feedback"
4705,"removed  flag, added  flag, and applied feedback",
4706,docs: Add production installation ECS docs (#11049),Co-authored-by: Paul Glass pglass@hashicorp.com Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
4707,Update ecs docs (#11053),
4708,acl: fix intention:*:write checks (#11061),This is a partial revert of #10793
4709,"docs: adjust references between ECS ""migrate"" and ""install"" pages",
4710,Merge pull request #11051 from hashicorp/partitions/fixes,
4711,docs: Apply suggestions from code review,Co-authored-by: Luke Kysow 1034429+lkysow@users.noreply.github.com Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
4712,acl: small resolver changes to account for partitions (#11052),Also refactoring the enterprise side of a test to make it easier to reason about.
4713,Update website/content/docs/k8s/k8s-cli.mdx,Co-authored-by: Nitya Dhanushkodi nitya@hashicorp.com
4714,Update website/content/docs/k8s/installation/install.mdx,Co-authored-by: Nitya Dhanushkodi nitya@hashicorp.com
4715,Update website/content/docs/k8s/index.mdx,Co-authored-by: Nitya Dhanushkodi nitya@hashicorp.com
4716,Update website/content/docs/k8s/installation/install.mdx,Co-authored-by: Nitya Dhanushkodi nitya@hashicorp.com
4717,Fixup api config and Envoy test,
4718,Fixup manager tests,
4719,Bring back entmeta args defaulting,
4720,Default partition in match endpoint,
4721,Pass partition to intention match query,
4722,Ensure partition is used for SAN validation,
4723,Ensure Envoy can subscribe to non-default partition,
4724,Trim newlines before parenthesis end,
4725,docs: Update ECS sidebar with links to Fargate/EC2 examples,
4726,docs: update ECS Install guide for beta,
4727,docs: Migrate Existing Tasks page for ECS,
4728,Merge pull request #11043 from hashicorp/pglass/consul-ecs-arch-doc,ECS architecture docs for Beta
4729,Merge pull request #11033 from hashicorp/consul-ecs-beta-docs,updates to ECS docs per beta release
4730,docs: ECS architecture feedback,
4731,applied comment feedback about my_task example,
4732,ACL Binding Rules table partitioning (#11044), ACL Binding Rules table partitioning  Signed-off-by: Mark Anderson manderson@hashicorp.com
4733,docs: Address ECS architecture feedback,
4734,added a few more nbsp to improve table readability,
4735,docs: Reformat Uninstall steps (#11040), docs: Reformat Uninstall steps  Reformatting uninstall as steps to make uninstall instructions more clear.
4736,auto-updated agent/uiserver/bindata_assetfs.go from commit fc14a412f,
4737,"updates to the uninstall flags, preset descriptions",
4738,docs: remove T3 in ECS task startup arch doc,
4739,ui: Partitions Application Layer (#11017),"  Add Partition to all our models   Add partitions into our serializers/fingerprinting   Make some amends to a few adapters ready for partitions   Amend blueprints to avoid linting error   Update all  our repositories to include partitions, also   Remove enabled/disable nspace repo and just use a nspace with conditionals   Ensure nspace and parition parameters always return '' no matter what   Ensure data-sink finds the model properly   This will later be replaced by a @dataSink decorator but we are find kicking that can down the road a little more   Add all the new partition data layer   Add a way to set the title of the page from inside the route   and make it accessibile via a route announcer   Make the Consul Route the default/basic one   Tweak nspace and partition abilities not to check the length   Thread partition through all the components that need it   Some ACL tweaks   Move the entire app to use partitions   Delete all the tests we no longer need   Update some Unit tests to use partition   Fix up KV title tests   Fix up a few more acceptance tests   Fixup and temporarily ignore some acceptance tests   Stop using ember-cli-page-objects fillable as it doesn't seem to work   Fix lint error   Remove old ACL related test   Add a tick after filling out forms   Fix token warning modal   Found some more places where we need a partition var   Fixup some more acceptance tests   Tokens still needs a repo service for CRUD   Remove acceptance tests we no longer need   Fixup and ""FIXME ignore"" a few tests   Remove an s   Disable blocking queries for KV to revert to previous release for now   Fixup adapter tests to follow async/function resolving interface   Fixup all the serializer integration tests   Fixup service/repo integration tests   Fixup deleting acceptance test   Fixup some ent tests   Make sure nspaces passes the dc through for when thats important   ...aaaand acceptance nspaces with the extra dc param "
4740,docs: correct point about service health checks for ECS,
4741,ECS architecture docs for Beta,
4742,Apply suggestions from code review,Co-authored-by: mrspanishviking kcardenas@hashicorp.com
4743,auto-updated agent/uiserver/bindata_assetfs.go from commit b16a6fa03,
4744,ui: Adds Partitions to the HTTP layer (#10447),"This PR mainly adds partition to our HTTP adapter. Additionally and perhaps most importantly, we've also taken the opportunity to move our 'conditional namespaces' deeper into the app. The reason for doing this was, we like that namespaces should be thought of as required instead of conditional, 'special' things and would like the same thinking to be applied to partitions. Now, instead of using code throughout the app throughout the adapters to add/remove namespaces or partitions depending on whether they are enabled or not. As a UI engineer you just pretend that namespaces and partitions are always enabled, and we remove them for you deeper in the app, out of the way of you forgetting to treat these properties as a special case. Notes: Added a PartitionAbility while we were there (not used as yet) Started to remove the CONSTANT variables we had just for property names. I prefer that our adapters are as readable and straightforwards as possible, it just looks like HTTP. We'll probably remove our formatDatacenter method we use also at some point, it was mainly too make it look the same as our previous formatNspace, but now we don't have that, it instead now looks different! We enable parsing of partition in the UIs URL, but this is feature flagged so still does nothing just yet. All of the test changes were related to the fact that we were treating client.url as a function rather than a method, and now that we reference this in client.url (etc) it needs binding to client."
4745,docs: improve network segments agent options docs,
4746,docs: expand network segments documentation,"Includes a brief overview with images, descriptions of server and client configuration with examples, and how to join an agent to a segment."
4747,docs: Remove step for deleting webhook-cert-manager secret on Consul K8s uninstall (#11035), Remove step for deleting webhook-cert-manager secret Update website/content/docs/k8s/operations/uninstall.mdx
4748,use const instead of literals for tableIndex (#11039),
4749,Refactor indexAuthMethod in tableACLBindingRules (#11029), Port consul-enterprise #1123 to OSS  Signed-off-by: Mark Anderson manderson@hashicorp.com  Fixup missing query field  Signed-off-by: Mark Anderson manderson@hashicorp.com  change to re-trigger ci system  Signed-off-by: Mark Anderson manderson@hashicorp.com
4750,updates to ECS docs per beta release,
4751,Merge pull request #11032 from hashicorp/partitions/acl-rule-oss,oss: Add partition rule ACL type
4752,acl: rename merge context update() -> fill(),
4753,adding k8s-cli alpha docs,
4754,Merge pull request #11024 from hashicorp/partitions/rbac,
4755,Update error texts (#11022),Co-authored-by: Daniel Nephin dnephin@hashicorp.com
4756,Update spiffe ID patterns used for RBAC,
4757,Expand testing of simplifyNotSourceSlice for partitions,
4758,Expand testing of removeSameSourceIntentions for partitions,
4759,Account for partition when matching src intentions,
4760,Add failures_before_warning to checks (#10969),"Signed-off-by: Jakub Sokołowski jakub@status.im  agent: add failures_before_warning setting  The new setting allows users to specify the number of check failures that have to happen before a service status us updated to be warning. This allows for more visibility for detected issues without creating alerts and pinging administrators. Unlike the previous behavior, which caused the service status to not update until it reached the configured failures_before_critical setting, now Consul updates the Web UI view with the warning state and the output of the service check when failures_before_warning is breached. The default value of FailuresBeforeWarning is the same as the value of FailuresBeforeCritical, which allows for retaining the previous default behavior of not triggering a warning. When FailuresBeforeWarning is set to a value higher than that of FailuresBeforeCritical it has no effect asFailuresBeforeCritical` takes precedence. Resolves: https://github.com/hashicorp/consul/issues/10680 Signed-off-by: Jakub Sokołowski jakub@status.im Co-authored-by: Jakub Sokołowski jakub@status.im"
4761,Sync partition fields from enterprise (#11021),
4762,acl-tokens table partitioning (#11020),  convert Policies index to use indexerMulti   remove non used indexer   fix oss policy Get   add oss tests   remove reference to partition in oss test   convert Roles index to use indexerMulti   add role test in oss   fix oss to use the right index func   convert Roles index to use indexerSingle   split authmethod write indexer to oss and ent   add auth method unit tests   add index locality   move intFromBool to be available for oss   add expiry indexes   add api tests   fix rebase   use Bool func   preallocate slice   rename variable 
4763,convert expiration indexed in ACLToken table to use indexerSingle (#11018),  move intFromBool to be available for oss   add expiry indexes   remove dead code: TokenExpirationIndex   fix remove indexer TokenExpirationIndex   fix rebase issue 
4764,add locality indexer partitioning (#11016),  convert Roles index to use indexerSingle   split authmethod write indexer to oss and ent   add index locality   add locality unit tests   move intFromBool to be available for oss   use Bool func   refactor aclTokenList to merge func 
4765,Merge pull request #10837 from jkirschner-hashicorp/improve-docs-dns-with-acl,Improve documentation around using DNS with ACLs Enabled
4766,website: fixup incorrect markdown syntax (#11015),
4767,docs: add ACL component relationships visual,
4768,docs: discuss use of ACLs on DNS page,
4769,convert indexAuthMethod index to use indexerSingle (#11014),  convert Roles index to use indexerSingle   fix oss build   split authmethod write indexer to oss and ent   add auth method unit tests 
4770,Merge pull request #10613 from hashicorp/feature/mesh-header-manip,Feature: allow manipulation of HTTP headers in ingress and mesh routing
4771,Apply suggestions from code review,Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
4772,Document how to make namespace wildcard intentions. (#10724),  Update intentions.mdx   Apply suggestions from code review   Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com Co-authored-by: Blake Covarrubias blake@covarrubi.as Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com Co-authored-by: Blake Covarrubias blake@covarrubi.as
4773,Include namespace and partition in error messages when validating ingress header manip,
4774,Refactor HTTPHeaderModifiers.MergeDefaults based on feedback,
4775,Fix enterprise test failures caused by differences in normalizing EnterpriseMeta,
4776,Fix enterprise discovery chain tests; Fix multi-level split merging,
4777,Add Envoy integration test to show Header manip can interpolate Envoy variables,
4778,Add Changelog entry and api package support for HTTP Header manip,
4779,Remove unnecessary check,
4780,Remove stray file,
4781,Fix discovery chain test fixtures,
4782,Integration tests for all new header manip features,
4783,Header manip for split legs plumbing,
4784,Header manip for service-router plumbed through,
4785,Ingress gateway header manip plumbing,
4786,Add HTTP header manip for router and splitter entries,
4787,Header manip and validation added for ingress-gateway entries,
4788,convert Roles index to use indexerMulti (#11013),  convert Roles index to use indexerMulti   add role test in oss   fix oss to use the right index func   preallocate slice 
4789,convert indexPolicies in ACLTokens table to the new index (#11011),
4790,convert indexSecret to the new index (#11007),
4791,convert indexAccessor to the new index (#11002),
4792,tls: consider presented intermediates during server connection tls handshake. (#10964),  use intermediates when verifying   extract connection state   remove useless import   add changelog entry   golint   better error   wording   collect errors   use SAN.DNSName instead of CommonName   Add test for unknown intermediate   improve changelog entry 
4793,Merge pull request #10834 from jkirschner-hashicorp/improve-docs-configure-ui-https,docs: give tutorials links for securing UI access
4794,Merge pull request #10995 from hashicorp/pcmccarron-patch-1,adding NIA to sidebar nav
4795,fixing link error,path was pointing to the wrong page on new sidebar addition.
4796,Sync enterprise changes to oss (#10994),This commit updates OSS with files for enterprise-specific admin partitions feature work
4797,Allow configuring graceful stop in testutil (#10566), Allow configuring graceful stop in testutil  Signed-off-by: Sergey Matyukevich s.matyukevich@gmail.com  add a changelog  Co-authored-by: Dhia Ayachi dhia@hashicorp.com
4798,docs: give tutorials links for securing UI access,
4799,Merge pull request #10984 from hashicorp/mesh-resource,acl: adding a new mesh resource
4800,partition dicovery chains (#10983),  partition dicovery chains   fix default partition for OSS 
4801,adding NIA to sidebar nav,
4802,Merge pull request #10980 from hashicorp/docs-fix-policy-federation-vm-k8-secondary,fixing the policy for configuring k8 clusters as secondary in federated arch
4803,Update website/content/docs/k8s/installation/multi-cluster/vms-and-kubernetes.mdx,Co-authored-by: mrspanishviking kcardenas@hashicorp.com
4804,Add changelog known issues for latest patch releases (#10992),This is to advertise the issue with TLS verification and a temporary workaround.
4805,acl: remove ACL.IsSame,The only caller of this method was removed in a recent commit along with replication.
4806,acl: remove legacy ACL replication,
4807,Merge pull request #10815 from hashicorp/docs/prepared-query-consistency-modes-3475,docs: Add supported consistency modes to prepared queries
4808,acl: adding a new mesh resource,
4809,try to infer command partition from node partition (#10981),
4810,fixing the policy for configuring k8 clusters as secondary in federated arch,
4811,Merge pull request #10977 from hashicorp/nia-style-fix,docs: fixed numbering of license bullets and corrected indent
4812,docs: indenting pr web dev guidance and Blake,
4813,Update website/content/docs/nia/enterprise/license.mdx,Co-authored-by: Blake Covarrubias blake@covarrubi.as
4814,Merge pull request #10978 from hashicorp/pcmccarron-ent-update,Adding NIA to Consul Ent page
4815,Adding NIA to Consul Ent page,
4816,docs: fixed numbering of license bullets and corrected indent,
4817,fix(website): start script reloads app on save (#10973),
4818,"docs: Add missing ""is"" on core security models (#10975)","Add missing ""is"" in description of auto_encrypt.tls parameter on core security models page."
4819,Merge pull request #10974 from hashicorp/nia-docs,docs: link to the enterprise license tutorial
4820,docs: link to the enterprise license tutorial,
4821,nia/docs 0.3.0 (#10930),Co-authored-by: Kim Ngo 6362111+findkim@users.noreply.github.com Co-authored-by: Melissa Kam mkam@hashicorp.com Co-authored-by: Michael Wilkerson mwilkerson@hashicorp.com Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
4822,github: added CODEOWNERS to automatically request tech writer review (#10962), github: update CODEOWNERS to point to the @hashicorp/consul-docs group
4823,add partition to SNI when partition is non default (#10917),
4824,Update audit logging example (#10966), Update audit-logging.mdx
4825,connect: update envoy supported versions to latest patch release ,(#10961) Relevant advisory:  https://github.com/envoyproxy/envoy/security/advisories/GHSA-6g4j-5vrw-2m8h
4826,Revert early out errors in license API (#10952),"Licensing recently changed in Consul v1.10 and along with those changes the client API was updated such that PutLicense and ResetLicense both immediately return an error to avoid an unecessary round trip that will inevitably fail. For reference, see: https://github.com/hashicorp/consul/commit/08eb600ee5e4eacfeef8223fc217973eeecdc692 Unfortunately, this change broke forward compatibility such that a v1.10 client can no longer make these requests to a v1.9 server which is a valid use case. This commit reintroduces these requests to fix this compatibility breakage but leaves the deprecation notices in tact."
4827,Merge pull request #10892 from hashicorp/docs-tables-service-discovery-services,Reformatting service discovery parameters into tables
4828,missed typo,
4829,applying @blake 's feedback,
4830,Merge pull request #10957 from hashicorp/dnephin/dev-docs,Move ./contributing to ./docs
4831,Move contributing to docs,So that this documentation is more appropriated named.
4832,Merge pull request #10956 from hashicorp/dnephin/update-contrib,Update contributing guide
4833,Update contributing guide," Replace the mailing list link with Discuss. The mailing list has not been used for a few years. 'make format' no longer exists, so replace it with 'gofmt' Remove the instructions about running all tests locally, and debugging flakes. Update note about vendoring of dependencies. Add link to developer docs."
4834,Merge pull request #10891 from hashicorp/dnephin/docs-remove-old-overview,docs: move the remaining INTERNALS.md content
4835,Merge pull request #10912 from hashicorp/auto_config,docs: added information about a conflict when using auto_config and a…
4836,docs: fixed identation of warning components,
4837,"changelog: add entries for 1.10.2, 1.9.9 and 1.8.15 (#10953)","  changelog: add entries for 1.10.2, 1.9.9 and 1.8.15   changelog: reorder entries for 1.9.9 and 1.8.15   Co-authored-by: Mike Morris mikemorris@users.noreply.github.com"
4838,add partition flag to catalog commands (#10949),  add partition flag to catalog commands   add missing files 
4839,docs: Bad External VM Example (#10943),Adds a missing \ for continuation in the example command for connecting an external VM client outside of Kubernetes to the Consul server cluster.
4840,"Fix ""Try HCP Consul"" utm_source on consul.io (#10947)",  Change utm source to consul_io   revert package-lock 
4841,Apply suggestions from code review,Co-authored-by: Blake Covarrubias blake@covarrubi.as
4842,Update helm reference (#10939),  Update helm reference   Fix docs issue breaking build   Remove keys that aren't yet in the release 
4843,Sync partitions support in api module (#10938),
4844,rpc: authorize raft requests (#10925),
4845,auto-updated agent/uiserver/bindata_assetfs.go from commit eeeb91bea,
4846,ui: Hide all metrics for ingress gateway services (#10858),
4847,ent->oss test fix (#10926),
4848,auto-updated agent/uiserver/bindata_assetfs.go from commit a907e1d87,
4849,ui: Add support in Topology view for Routing Configurations (#10872),
4850,Update social share image (#10920),  Update social share image   Update image for social share 
4851,auto-updated agent/uiserver/bindata_assetfs.go from commit a0b0ed2bc,
4852,ui: [BUGFIX] Add missing @ to fix missing non-subset Failovers (#10913),This commit fixes a problem where parent Failovers where not showing (subset children were fine). Seems to have been introduced with a move/glimmer upgrade here #9154 so I'm adding a 1.9.x backport.
4853,Merge pull request #10911 from hashicorp/areas/update,
4854,docs: added information about a conflict when using auto_config and auto_encrypt,
4855,Add changelog entry,
4856,Update yamux,
4857,Merge pull request #10673 from hashicorp/srikrishmurthy-patch-1,Updated a note in the ingress-gateway YAML that the ingress gateway name must match with what's configured in the helm chart
4858,api: expose upstream routing configurations in topology view (#10811),Some users are defining routing configurations that do not have associated services. This commit surfaces these configs in the topology visualization. Also fixes a minor internal bug with non-transparent proxy upstream/downstream references.
4859,acl: some acl authz refactors for nodes (#10909),
4860,auto-updated agent/uiserver/bindata_assetfs.go from commit a777b0a9b,
4861,ui: Disabling policy form fields from users with 'read' permissions (#10902),
4862,auto-updated agent/uiserver/bindata_assetfs.go from commit 8192dde48,
4863,ui: Unskip auth-method serializer test (#10878),"During #9617 we added a list view only for AuthMethods, but not a detail view. We did add the Adapter/Serializer that collected/reshaped data for a detail view. The test for this serializer was skipped here, but I'm not sure why. We then added #9845 which began to use this AuthMethod Serializer, but we didn't go back to finish up the skipped test here either. This PR unskips this test and finishes off the test correctly."
4864,grpc: ensure that streaming gRPC requests work over mesh gateway based wan federation (#10838),Fixes #10796
4865,removed merge conflict chars,
4866,fixed merge conflicts,
4867,Merge branch 'main' of github.com:hashicorp/consul into docs-tables-service-discovery-services,
4868,"fixed more typos, applied additional tables, additional edits",
4869,"fixed typos, finished applying tables, minor editing",
4870,auto-updated agent/uiserver/bindata_assetfs.go from commit 05a28c311,
4871,ui: [BUGFIX] Properly encode non-URL safe characters in OIDC responses (#10901),"This commit fixes 2 problems with our OIDC flow in the UI, the first is straightforwards, the second is relatively more in depth: 1: A typo (1.10.1 only) During #10503 we injected our settings service into the our oidc-provider service, there are some comments in the PR as to the whys and wherefores for this change (https://github.com/hashicorp/consul/pull/10503/files#diff-aa2ffda6d0a966ba631c079fa3a5f60a2a1bdc7eed5b3a98ee7b5b682f1cb4c3R28) Fixing the typo so it was no longer looking for an unknown service (repository/settings > settings) fixed this. 2: URL encoding (1.9.x, 1.10.x) TL;DR: /oidc/authorize/provider/with/slashes/code/with/slashes/status/with/slashes should be /oidc/authorize/provider%2Fwith%2Fslashes/code%2Fwith%2Fslashes/status%2Fwith%2Fslashes When we receive our authorization response back from the OIDC 3rd party, we POST the code and status data from that response back to consul via acallback as part of the OIDC flow. From what I remember back when this feature was originally added, the method is a POST request to avoid folks putting secret-like things into API requests/URLs/query params that are more likely to be visible to the human eye, and POSTing is expected behaviour. Additionally, in the UI we identify all external resources using unique resource identifiers. Our OIDC flow uses these resources and their identifiers to perform the OIDC flow using a declarative state machine. If any information in these identifiers uses non-URL-safe characters then these characters require URL encoding and we added a helper a while back to specifically help us to do this once we started using this for things that required URL encoding. The final fix here make sure that we URL encode code and status before using them with one of our unique resource identifiers, just like we do with the majority of other places where we use these identifiers."
4872,doc: remove sentence that tproxy works cross-DC with config entries. (#10885),"It can only work if there is a running service instance in the local DC, so this is a bit misleading, since failover and redirects are typically used when there is not an instance in the local DC."
4873,Update website/content/docs/discovery/services.mdx,Co-authored-by: Geoffrey Grosenbach 26+topfunky@users.noreply.github.com
4874,Update website/content/docs/discovery/services.mdx,Co-authored-by: Geoffrey Grosenbach 26+topfunky@users.noreply.github.com
4875,Fix go.sum with go mod tidy,
4876,Fix merge conflicts,
4877,Merge branch 'main' into serve-panic-recovery,
4878,Added changelog for grpc and xds servers panic recovery.,
4879,"grpc, xds: recovery middleware to return and log error in case of panic",1) xds and grpc servers:    1.1) to use recovery middleware with callback that prints stack trace to log    1.2) callback turn the panic into a core.Internal error 2) added unit test for grpc server
4880,Merge pull request #10873 from hashicorp/fix/10825-pq-san-validation,
4881,Avoid passing zero value into variadic,
4882,Update comment for test function,
4883,Add changelog entry,
4884,Update prepared query cluster SAN validation,"Previously SAN validation for prepared queries was broken because we validated against the name, namespace, and datacenter for prepared queries. However, prepared queries can target:  Services with a name that isn't their own Services in multiple datacenters  This means that the SpiffeID to validate needs to be based on the prepared query endpoints, and not the prepared query's upstream definition. This commit updates prepared query clusters to account for that."
4885,Fixup proxy config test fixtures,"  The TestNodeService helper created services with the fixed name ""web"", and now that name is overridable.   The discovery chain snapshot didn't have prepared query endpoints so the endpoints tests were missing data for prepared queries "
4886,testing markdown table format for ref docs,
4887,docs: move the remaining content from INTERNALS.md,Into the appropriate section of the docs.
4888,docs: add important top level directories to the README,
4889,agent: add partition labels to catalog API metrics where appropriate (#10890),
4890,fixing various bits of enterprise meta plumbing to be more correct (#10889),
4891,oss portion of ent #1069 (#10883),
4892,Upgrade global styles (#10692),  website: upgrade global-styles packages   website: move community page to CSS modules   website: replace g-container with g-grid-container   website: hide alert-banner on mobile   website: backfill missing global type styles   website: fix code font-size in download custom content   website: bump to latest patched dependencies 
4893,state: partition the nodes.uuid and nodes.meta indexes as well (#10882),
4894,agent: ensure that most agent behavior correctly respects partition configuration (#10880),
4895,docs: Add common CA config options to provider doc pages (#10842),Add the list of common Connect CA configuration options to the provider-specific CA docs. Previously these options were only documented under the agent configuration options. This change makes it so that all supported CA provider configuration options are available from a single location. Co-authored-by: Daniel Nephin dnephin@hashicorp.com
4896,chore: update alert banner (#10816),
4897,Merge pull request #10806 from hashicorp/dnephin/debug-filenames-2,debug: use human readable dates for filenames and improve the tests
4898,Merge pull request #10849 from hashicorp/dnephin/contrib-doc-xds-auth,xds: document how authorization works
4899,Merge pull request #10804 from hashicorp/dnephin/debug-filenames,debug: rename cluster.json -> members.json  and fix handling of Interrupt Signal
4900,debug: use human readable dates for filenames,The unix timestamps that were used make the debug data a little bit more difficult to consume. By using human readable dates we can easily see when the profile data was collected. This commit also improves the test coverage. Two test cases are removed and the assertions from those cases are moved to TestDebugCommand. Now TestDebugCommand is able to validate the contents of all files. This change reduces the test runtime of the command/debug package by almost 50%. It also makes much more strict assertions about the contents by using gotest.tools/v3/fs.
4901,add changelog,
4902,debug: small cleanup,Use the new WriteJsonFile function to write index.json Remove .String() from time.local() since that is done by %s Remove an unused field.
4903,docs: update CLI reference docs for debug,the cluster target was renamed to members.
4904,debug: restore cancel on SigInt,"Some previous changes broke interrupting the debug on SigInterupt. This change restores the original behaviour by passing a context to requests. Since a new API client function was required to pass the context, I had it also return an io.ReadCloser, so that output can be streamed to files instead of fully buffering in process memory."
4905,debug: improve a couple of the test cases,"Use gotest.tools/v3/fs to make better assertions about the files Remove the TestAgent from TestDebugCommand_Prepare_ValidateTiming, since we can test that validation without making any API calls."
4906,debug: rename cluster target to members,The API is called members. Using the same name as the API should help describe the contents of the file.
4907,debug: remove unused,
4908,Merge pull request #10869 from roopakv/roopak/xsys,Update x/sys to support go 1.17
4909,state: partition the usage metrics subsystem (#10867),
4910,Update x/sys to support go 1.17,
4911,Update website/content/docs/k8s/connect/ingress-gateways.mdx,Co-authored-by: Blake Covarrubias blake@covarrubi.as
4912,xds: document how authorization works,
4913,state: adjust streaming event generation to account for partitioned nodes (#10860),Also re-enabled some tests that had to be disabled in the prior PR.
4914,state: partition nodes and coordinates in the state store (#10859),"Additionally:  partitioned the catalog indexes appropriately for partitioning removed a stray reference to a non-existent index named ""node.checks"""
4915,Merge pull request #10814 from hashicorp/dnephin/acl-resolver-4,acl: remove ACLDisabledTTL
4916,Merge pull request #10808 from hashicorp/dnephin/acl-resolver-3,acl: isolate the config used by ACLResolver
4917,proto: mark the DisabledTTL field as deprecated,Using both the name and the field option.
4918,acl: small improvements to ACLResolver disable due to RPC error,"Remove the error return, so that not handling is not reported as an error by errcheck. It was returning the error passed as an arg unmodified so there is no reason to return the same value that was passed in. Remove the term upstreams to remove any confusion with the term used in service mesh. Remove the AutoDisable field, and replace it with the TTL value, using 0 to indicate the setting is turned off. Replace ""not Before"" with ""After"". Add some test coverage to show the behaviour is still correct."
4919,acl: make ACLDisabledTTL a constant,"This field was never user-configurable. We always overwrote the value with 120s from NonUserSource. However, we also never copied the value from RuntimeConfig to consul.Config, So the value in NonUserSource was always ignored, and we used the default value of 30s set by consul.DefaultConfig. All of this code is an unnecessary distraction because a user can not actually configure this value. This commit removes the fields and uses a constant value instad. Someone attempting to set acl.disabled_ttl in their config will now get an error about an unknown field, but previously the value was completely ignored, so the new behaviour seems more correct. We have to keep this field in the AutoConfig response for backwards compatibility, but the value will be ignored by the client, so it doesn't really matter what value we set."
4920,Fix test failures,"Tests only specified one of the fields, but in production we copy the value from a single place, so we can do the same in tests. The AutoConfig test broke because of the problem noticed in a previous commit. The DisabledTTL is not wired up properly so it reports 0s here. Changed the test to use an explicit value."
4921,config: remove ACLResolver settings from RuntimeConfig,
4922,acl: remove ACLResolver config fields from consul.Config,
4923,acl: replace ACLResolver.Config with its own struct,This is step toward decoupling ACLResolver from the agent/consul package.
4924,Merge pull request #10661 from hashicorp/dnephin/remove-legacy-acls-1,http: disable legacy ACL API endpoints
4925,acl: remove ACLRulesTranslateLegacyToken API endpoint,
4926,acl: remove legacy bootstrap,"Return an explicit error from the RPC, and remove the flag from the HTTP API."
4927,cli: remove a test case for updating a legacy token,"Legacy tokens are no longer accepted, so we don't need to test their upgrade path."
4928,api: remove client library tests for old API endpoints,"These methods are being kept around in the api module for now to allow the api module to work with older versions of the HTTP API, but we are no longer able to test them. Since the endpoints are removed there is no way for them to change, so there does not appear to be a need to keep running the tests."
4929,agent: update some tests that were using legacy ACL endpoints,The tests were updated to use the new ACL endpoints now that the legacy ones have been removed.
4930,http: update legacy ACL endpoints to return an error,Also move a test for the ACLReplicationStatus endpoint into the correct file.
4931,acl: add some notes about removing legacy ACL system,
4932,Merge pull request #10792 from hashicorp/dnephin/rename-authz-vars,acl: use authz consistently as the variable name for an acl.Authorizer
4933,Merge pull request #10807 from hashicorp/dnephin/remove-acl-datacenter,config: remove ACLDatacenter
4934,acl: use authz consistently as the variable name for an acl.Authorizer,Follow up to https://github.com/hashicorp/consul/pull/10737#discussion_r682147950 Renames all variables for acl.Authorizer to use authz. Previously some places used rule which I believe was an old name carried over from the legacy ACL system. A couple places also used authorizer. This commit also removes another couple of authorizer nil checks that are no longer necessary.
4935,Update documentation for enable_key_list_policy,"The current suggests the option expects a string of either ""enabled"" or ""disabled"" but this results in an error 'acl.enable_key_list_policy' expected type 'bool', got unconvertible type 'string', value: 'enabled'. Setting to a boolean value resolves this, also had a quick look at the code (https://github.com/hashicorp/consul/blob/d2b58cd0d6e84f04eed08d233b8e8b396f6d7663/agent/config/runtime.go#L109) and it suggests this too"
4936,ci: make changelog-checker only validate PR number against main base (#10844),
4937,ci: upgrade to use Go 1.16.7 (#10856),
4938,auto-updated agent/uiserver/bindata_assetfs.go from commit ae9c31338,
4939,ui: Update intention permissions notice wording (#10836),
4940,ui: Create Routing Configurations route and page (#10835),
4941,Document possible risk w.r.t exposing the admin API in Envoy (#10817),Add a section to the Connect Security page which highlights the risks of exposing Envoy's administration interface outside of localhost. Resolves #5692 Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com Co-authored-by: Kent 'picat' Gruber kent@hashicorp.com
4942,Document tagged addresses (#10744),Add section for tagged addresses on service definition documentation. Resolves #6989 Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
4943,docs: Clarify ingress gateway's -address flag (#10810),Clarify the function of -address flag when instantiating an ingress gateway. Resolves #9849 Co-authored-by: trujillo-adam 47586768+trujillo-adam@users.noreply.github.com
4944,Merge pull request #10843 from hashicorp/partitions/rename-default,oss: Rename default partition
4945,oss: Rename default partition,
4946,Merge pull request #10824 from hashicorp/dnephin/acl-token-bug,proxycfg: Use acl.tokens.default token as a default when there is no token in the registration
4947,proxycfg: Lookup the agent token as a default,When no ACL token is provided with the service registration.
4948,proxycfg: Add a test to show the bug,"When a token is not provided at registration, the agent token is not being used."
4949,deps: upgrade gogo-protobuf to v1.3.2 (#10813),  deps: upgrade gogo-protobuf to v1.3.2   go mod tidy using go 1.16   proto: regen protobufs after upgrading gogo/protobuf   Co-authored-by: Daniel Nephin dnephin@hashicorp.com
4950,Fixup to support unix domain socket via command line (#10758),Missed the need to add support for unix domain socket config via api/command line. This is a variant of the problems described in it is easy to drop one. Signed-off-by: Mark Anderson manderson@hashicorp.com
4951,Merge pull request #10832 from hashicorp/dnephin/contrib-check-register-flows,contrib: add list of check register flows
4952,contrib: add list of check register flows,
4953,docs: remove note on ingress gateway hosts field needing a port number (#10827),"This was necessary in older versions of Consul, but was obsoleted by making Consul add the port number itself when constructing the Envoy configuration."
4954,docs: Update code blocks across website," Use CodeTabs for examples in multiple formats. Ensure correct language on code fences. Use CodeBlockConfig for examples with filenames, or which need highlighted content."
4955,auto-updated agent/uiserver/bindata_assetfs.go from commit ab6a67520,
4956,ui: Split up the socket mode from the socket path (#10581),
4957,docs: Add supported consistency modes to prepared queries,Resolves #3475
4958,docs: Add JSON examples to all config entries,This commit adds example JSON configs for several config entry resources were missing examples in this language. The examples have been updated to use the new CodeTabs resource instead of the Tab component.
4959,cli: Fix broken KV import on Windows (#10820),"Consul 1.10 (PR #9792) introduced the ability to specify a prefix when importing KV's. This however introduced a regression on Windows systems which breaks kv import. The key name is joined with specified-prefix using filepath.Join() which uses a forward slash (/) to delimit values on Unix-based systems, and a backslash () to delimit values on Windows – the latter of which is incompatible with Consul KV paths. This commit replaces filepath.Join() with path.Join() which uses a forward slash as the delimiter, providing consistent key join behavior across supported operating systems. Fixes #10583"
4960,cli: Use admin bind address in self_admin cluster (#10757),Configure the self_admin cluster to use the admin bind address provided when starting Envoy. Fixes #10747
4961,Merge pull request #10812 from hashicorp/docs-envoy-proxy-breaks-when-enabling-tls,docs: adding env var info
4962,Merge branch 'main' into docs-envoy-proxy-breaks-when-enabling-tls,
4963,Update website/content/docs/connect/proxies/envoy.mdx,Co-authored-by: Blake Covarrubias blake@covarrubi.as
4964,Update website/content/docs/connect/proxies/envoy.mdx,Co-authored-by: Blake Covarrubias blake@covarrubi.as
4965,"docs: adding env var info, resolves #7926",
4966,cli: Test API access using /status/leader in consul watch (#10795),"Replace call to /agent/self with /status/leader to verify agent reachability before initializing a watch. This endpoint is not guarded by ACLs, and as such can be queried by any API client regardless of their permissions. Fixes #9353"
4967,grpc Server: turn panic into error through middleware,
4968,server: remove defaulting of PrimaryDatacenter,The constructor for Server is not at all the appropriate place to be setting default values for a config struct that was passed in. In production this value is always set from agent/config. In tests we should set the default in a test helper.
4969,Merge pull request #10612 from bigmikes/acl-replication-fix,acl: acl replication routine to report the last error message
4970,acl: remove ACLDatacenter,"This field has been unnecessary for a while now. It was always set to the same value as PrimaryDatacenter. So we can remove the duplicate field and use PrimaryDatacenter directly. This change was made by GoLand refactor, which did most of the work for me."
4971,String type instead of error type and changelog.,
4972,"changelog: add 1.10.1, 1.9.8 and 1.8.14",
4973,Merge pull request #10743 from hashicorp/dnephin/acl-resolver-2,acl: decouple filtering from ACLResolver and remove a couple methods
4974,Merge pull request #10742 from hashicorp/dnephin/acl-resolver,acl: move agent/consul vet functions
4975,acl: remove Server.ResolveTokenIdentityAndDefaultMeta,"This method suffered from similar naming to a couple other methods on Server, and had not great re-use (2 callers). By copying a few of the lines into one of the callers we can move the implementation into the second caller. Once moved, we can see that ResolveTokenAndDefaultMeta is identical in both Client and Server, and likely should be further refactored, possibly into ACLResolver. This change is being made to make ACL resolution easier to trace."
4976,acl: remove Server.ResolveTokenToIdentityAndAuthorizer,This method was an alias for ACLResolver.ResolveTokenToIdentityAndAuthorizer. By removing the method that does nothing the code becomes easier to trace.
4977,acl: recouple acl filtering from ACLResolver,ACL filtering only needs an authorizer and a logger. We can decouple filtering from the ACLResolver by passing in the necessary logger. This change is being made in preparation for moving the ACLResolver into an acl package
4978,acl: remove unused error return,filterACLWithAuthorizer could never return an error. This change moves us a little bit closer to being able to enable errcheck and catch problems caused by unhandled error return values.
4979,acl: rename acl.Authorizer vars to authz,For consistency
4980,acl: move vet functions,These functions are moved to the one place they are called to improve code locality. They are being moved out of agent/consul/acl.go in preparation for moving ACLResolver to an acl package.
4981,acl: move vetRegisterWithACL and vetDeregisterWithACL,These functions are used in only one place. Move the functions next to their one caller to improve code locality. This change is being made in preparation for moving the ACLResolver into an acl package. The moved functions were previously in the same file as the ACLResolver. By moving them out of that file we may be able to move the entire file with fewer modifications.
4982,Merge pull request #10770 from hashicorp/dnephin/log-cert-expiration,telemetry: add log message when certs are about to expire
4983,Merge pull request #10793 from hashicorp/dnephin/acl-intentions,acl: small cleanup of a couple Authorization flows
4984,defer setting the state before returning to avoid  stuck in INITIALIZING state (#10630),  defer setting the state before returning to avoid being stuck in INITIALIZING state   add changelog   move comment with the right if statement   ca: report state transition error from setSTate   update comment to reflect state transition   Co-authored-by: Daniel Nephin dnephin@hashicorp.com
4985,Update website/content/docs/k8s/connect/ingress-gateways.mdx,Co-authored-by: Blake Covarrubias blake@covarrubi.as
4986,Merge pull request #10768 from hashicorp/dnephin/agent-tls-cert-expiration-metric,telemetry: add Agent TLS Certificate expiration metric
4987,acl: remove special handling of services in txn_endpoint,"Follow up to: https://github.com/hashicorp/consul/pull/10738#discussion_r680190210 Previously we were passing an Authorizer that would always allow the operation, then later checking the authorization using vetServiceTxnOp. On the surface this seemed strange, but I think it was actually masking a bug as well. Over time servicePreApply was changed to add additional authorization for service.Proxy.DestinationServiceName, but because we were passing a nil Authorizer, that authorization was not handled on the txn_endpoint. TxnServiceOp.FillAuthzContext has some special handling in enterprise, so we need to make sure to continue to use that from the Txn endpoint. This commit removes the vetServiceTxnOp function, and passes in the FillAuthzContext function so that servicePreApply can be used by both the catalog and txn endpoints. This should be much less error prone and prevent bugs like this in the future."
4988,auto-updated agent/uiserver/bindata_assetfs.go from commit bcd53e73a,
4989,ui: Add Vault as a Service External Source (#10769),
4990,acl: move check for Intention.DestinationName into Authorizer,"Follow up to https://github.com/hashicorp/consul/pull/10737#discussion_r680134445 Move the check for the Intention.DestinationName into the Authorizer to remove the need to check what kind of Authorizer is being used. It sounds like this check is only for legacy ACLs, so is probably just a safeguard ."
4991,Merge pull request #10738 from hashicorp/dnephin/remove-authorizer-nil-checks-2,acl: remove the last of the authz == nil checks
4992,Merge pull request #10737 from hashicorp/dnephin/remove-authorizer-nil-checks,acl: remove authz == nil checks
4993,Merge pull request #10763 from hashicorp/docs-proxy-integration-improvements,general language and readability improvements to proxy integration docs
4994,Merge pull request #10727 from hashicorp/dependabot-configuration,Add initial Dependabot configuration
4995,Applying more feedback from @black and @karl-cardenas-coding,
4996,Applying feedback from @blake,
4997,telemetry: add log message when certs are about to expire,
4998,telemetry: fix a couple bugs in cert expiry metrics," do not emit the metric if Query fails properly check for PrimaryUsersIntermediate, the logic was inverted  Also improve the logging by including the metric name in the log message"
4999,telemetry: add a metric for agent TLS cert expiry,
5000,Update website/content/docs/connect/proxies/integrate.mdx,Co-authored-by: Blake Covarrubias blake@covarrubi.as
5001,fix state index for CAOpSetRootsAndConfig op (#10675),  fix state index for CAOpSetRootsAndConfig op   add changelog   Update changelog   Co-authored-by: Daniel Nephin dnephin@hashicorp.com  remove the change log as it's not needed  Co-authored-by: Daniel Nephin dnephin@hashicorp.com
5002,auto-updated agent/uiserver/bindata_assetfs.go from commit 8ad1ab9c0,
5003,ui: Fix Health Checks in K/V form Lock Sessions Info section (#10767),
5004,general language and readability improvements to proxy integration docs,
5005,checks: Add Interval and Timeout to API response  (#10717),
5006,Merge pull request #10601 from hashicorp/joshwolfer-patch-1,docs: link to config entries from enable_central_service_config
5007,Update options.mdx,add service config link to description of enable_central_service_config.
5008,docs: Fix service checks docs on session endpoint (#10759),"The ServiceChecks parameter was incorrectly documented in e515c9d44 to state that it accepted a list of string values, when actually the API requires an array of ServiceCheck objects. This commit updates the docs for the parameter to correctly reflect the fields required by the API. Resolves #10752"
5009,Updated link to repo for native Scala Consul client Helm,
5010,docs: Note proxy-defaults can globally set service protocol (#10649),Add a note to the docs for the service defaults config entry which informs users that the service protocol can be configured for all services using the proxy defaults config entry. Resolves #8279 Co-authored-by: Freddy freddygv@users.noreply.github.com
5011,docs: Document supported consul connect env vars (#10667),Document the ability to specify -sidecar-for and -proxy-id flags via environment variables.
5012,website: Add redirect for /connect/ingress-gateways,"Add redirect /docs/connect/ingress-gateways, which currently returns 404, to /docs/connect/gateways/ingress-gateway. Fixes #10748"
5013,docs: Add namespace parameter to additional HTTP endpoints (#10731),"Document the namespace parameter can be specified on HTTP Check, Connect CA leaf, and Discovery Chain API endpoints. Co-authored-by: Freddy freddygv@users.noreply.github.com"
5014,docs: Add /v1/agent/host endpoint,Document /v1/agent/host endpoint which is used by consul debug. Originally added in #4754.
5015,chore: upgrade react-consent-manager (#10749),
5016,acl: Remove the remaining authz == nil checks,"These checks were a bit more involved. They were previously skipping some code paths when the authorizer was nil. After looking through these it seems correct to remove the authz == nil check, since it will never evaluate to true."
5017,acl: remove acl == nil checks,
5018,acl: remove authz == nil checks,"These case are already impossible conditions, because most of these functions already start with a check for ACLs being disabled. So the code path being removed could never be reached. The one other case (ConnectAuthorized) was already changed in a previous commit. This commit removes an impossible branch because authz == nil can never be true."
5019,acl: remove many instances of authz == nil,
5020,agent: remove unused agent methods,"These methods are no longer used. Remove the methods, and update the tests to use actual method used by production code. Also removes the 'authz == nil' check is no longer a possible code path now that we are returning a non-nil acl.Authorizer when ACLs are disabled."
5021,acl: remove rule == nil checks,
5022,auto-updated agent/uiserver/bindata_assetfs.go from commit 2ee501be8,
5023,ui: Add copy button for Secret ID in Tokens list page (#10735),
5024,Merge pull request #10632 from hashicorp/pairing/acl-authorizer-when-acl-disabled,acls: Update ACL authorizer to return meaningful permission when ACLs are disabled
5025,api: Support QueryOptions on additional agent endpoints (#10691),Add support for setting QueryOptions on the following agent API endpoints:  /agent/health/service/name/:name /agent/health/service/id/:id /agent/service/maintenance/:id  This follows the same pattern used in #9903 to support query options for other agent API endpoints. Resolves #9710
5026,Fix api/agent test,
5027,Fix maint test,
5028,Fix api/agent test,
5029,Fix intention endpoint test,
5030,acl: use acl.ManangeAll when ACLs are disabled,"Instead of returning nil and checking for nilness Removes a bunch of nil checks, and fixes one test failures."
5031,Add changelog,
5032,Add OSS changes for specifying audit log permission mode,
5033,Add github-actions,
5034,Add default open-pull-requests-limit for all updates,Using the default value just to start with.
5035,Add the /sdk module,
5036,Merge pull request #10729 from hashicorp/dnephin/fix-docs-cherrypick,ci: query for max number of possible labels
5037,ci: query for max number of possible labels,"To fix a failure in our docs-cherrypick automation. This started to fail today, I suspect because github silently changed the order the labels were being returned, and by default it only returns 30 labels. We currently have 68 labels, so using per_page=100 (the maximum allowed) we should be able to fix this failure."
5038,Merge pull request #10718 from hashicorp/dnephin/doc-agent-tls-ca,docs: give better guidance about how to configure the agent TLS CA
5039,Update website/content/docs/agent/options.mdx,Co-authored-by: Kent 'picat' Gruber kent@hashicorp.com
5040,Add initial Dependabot configuration,
5041,Call out the incompatibility of wildcards and L7 permissions,
5042,Merge pull request #10707 from hashicorp/dnephin/streaming-setup-default-timeout,streaming: set default query timeout
5043,docs: give better guidance about how to configure the agent TLS CA,
5044,Merge pull request #10716 from hashicorp/dnephin/remove-issue-labeler,Remove issue-labeler github workflow
5045,Remove issue-labeler github workflow,"It has been failing every time, ex: https://github.com/hashicorp/consul/runs/3186335298?check_suite_focus=true"
5046,add changelog,
5047,streaming: set a default timeout,"The blocking query backend sets the default value on the server side. The streaming backend does not using blocking queries, so we must set the timeout on the client."
5048,Add Citrix TF module links to NIA docs (#10710),
5049,Merge pull request #10709 from jkirschner-hashicorp/generalize-base64-command-usage-in-docs,Generalize base64 command usage in docs
5050,Generalize base64 command usage in docs,"The base64 CLI utility has two different short flag arguments for decode depending on the platform: -D and -d. Previously, the docs used the -D flag exclusively with the base64 utility. Luckily, the long form of the flag is the same across platforms: --decode. All uses of the base64 -D flag have been replaced with --decode."
5051,auto-updated agent/uiserver/bindata_assetfs.go from commit eb5512fb7,
5052,ui: Fix dropdown option duplications (#10706),
5053,sync enterprise files with oss (#10705),
5054,http: don't log an error if the request is cancelled,"Now that we have at least one endpoint that uses context for cancellation we can encounter this scenario where the returned error is a context.Cancelled or context.DeadlineExceeded. If the request.Context().Err() is not nil, then we know the request itself was cancelled, so we can log a different message at Info level, instad of the error."
5055,Merge pull request #10460 from jkirschner-hashicorp/how-to-run-subset-of-unit-tests,Describe how to run a subset of all unit tests
5056,Describe how to run a subset of all unit tests,
5057,Merge pull request #10399 from hashicorp/dnephin/debug-stream-metrics,debug: use the new metrics stream in debug command
5058,http: add tests for AgentMetricsStream,
5059,http: emit indented JSON in the metrics stream endpoint,To remove the need to decode and re-encode in the CLI
5060,Add changelog,
5061,debug: use the new metrics stream in debug command,
5062,Reset root prune interval after TestLeader_CARootPruning completes,10645 Co-authored-by: Daniel Nephin dnephin@hashicorp.com
5063,agent: update proxy upstreams to inherit namespace from service (#10688),
5064,Update armon/go-metrics,To pickup new InMemSink.Stream method
5065,Merge pull request #10685 from hashicorp/docs-fix-broken-link-swim-article,Docs fix broken link swim article
5066,Merge pull request #10672 from hashicorp/dnephin/remove-vendor,Remove vendor directory from git
5067,docs: Add version callout for kv import -prefix,Add a sentence stating the version of Consul that introduced the -prefix option for consul kv import. Resolves #10172
5068,Update vault.mdx (#10679),
5069,web: migrate to web platform- packages (#10640),  migrate usages of nextjs-scripts to platform packages   Updates hashi packages 
5070,Log the correlation ID when blocking queries fire (#10689),Knowing that blocking queries are firing does not provide much information on its own. If we know the correlation IDs we can piece together which parts of the snapshot have been populated. Some of these responses might be empty from the blocking query timing out. But if they're returning quickly I think we can reasonably assume they contain data.
5071,state: refactor some node/coordinate state store functions to take an EnterpriseMeta (#10687),Note the field is not used yet.
5072,General improvements to the wording,
5073,docs: fixed broken link to SWIM article in architecture/gossip ref,
5074,add http flag for admin partition (#10683),
5075,replumbing a bunch of api and agent structs for partitions (#10681),
5076,sync changes to oss files made in enterprise (#10670),
5077,agent/structs: add a bunch more EnterpriseMeta helper functions to help with partitioning (#10669),
5078,config raft apply silent error (#10657),  return an error when the index is not valid   check response as bool when applying CAOpSetConfig   remove check for bool response   fix error message and add check to test   fix comment   add changelog 
5079,Update ingress-gateways.mdx,Updated a note in the ingress-gateway YAML that the ingress gateway name must match with what's configured in the helm chart
5080,Update CI config and Makefile for vendor removal,"Now that vendor is removed our CI can check that 'go mod tidy' makes no changes, instad of checking vendor/modules.txt"
5081,Remove vendor,
5082,add partition cli flag to all cli commands that have namespace flag (#10668),
5083,Merge pull request #10462 from hashicorp/docs/add-ns-agent-services-9710,docs: Add namespace parameters to /agent/service* endpoints
5084,Update output for /v1/agent/health/service/(id|name)/ endpoints,
5085,docs: Add namespace parameters to /agent/service*,Document supported namespace parameters for /agent/service* API endpoints. Resolves #9710
5086,cli: Document pass-through option for consul connect envoy (#10666),Update help text of consul connect envoy command to mention the ability to provide pass-through options.
5087,docs: Update responses for /v1/session/ endpoints post 1.7,"Update output for /v1/session/ endpoints to match output post Consul 1.7.0. Documents new NodeChecks and ServiceChecks parameters which were added in that release. Resolves #7341, resolves #10095"
5088,docs: Refer to macOS vs Mac OS X in the main README (#10639),
5089,Avoid panic on concurrent writes to cached service config map (#10647),"If multiple instances of a service are co-located on the same node then their proxies will all share a cache entry for their resolved service configuration. This is because the cache key contains the name of the watched service but does not take into account the ID of the watching proxies. This means that there will be multiple agent service manager watches that can wake up on the same cache update. These watchers then concurrently modify the value in the cache when merging the resolved config into the local proxy definitions. To avoid this concurrent map write we will only delete the key from opaque config in the local proxy definition after the merge, rather than from the cached value before the merge."
5090,website: Fix circular redirect with TLS on existing cluster,Fix an issue where /docs/k8s/operations/tls-on-existing-cluster would never load when navigating directly to the URL because of a circular redirect.
5091,auto-updated agent/uiserver/bindata_assetfs.go from commit 1eb7a83ee,
5092,ui: Add tests for topology metrics stats (#10600),
5093,docs: Add intentions to ACL System docs (#10323),Adds mention of intentions rules to ACL System and ACL Rules pages. Resolves #9790
5094,Add DNS recursor strategy option (#10611),"This change adds a new dns_config.recursor_strategy option which controls how Consul queries DNS resolvers listed in the recursors config option. The supported options are sequential (default), and random. Closes #8807 Co-authored-by: Blake Covarrubias blake@covarrubi.as Co-authored-by: Priyanka Sengupta psengupta@flatiron.com"
5095,docs: Fix spelling errors across website,
5096,Merge pull request #10396 from hashicorp/dnephin/fix-more-data-races,Fix some data races
5097,Merge pull request #10009 from hashicorp/dnephin/trim-dns-response-with-edns,dns: properly trim response when EDNS is used
5098,acl: use SetHash consistently in testPolicyForID,A previous commit used SetHash on two of the cases to fix a data race. This commit applies that change to all cases. Using SetHash in this test helper should ensure that the test helper behaves closer to production.
5099,Merge pull request #10353 from hashicorp/dnephin/prune-build-scripts-1,Remove a few unused things from build-support
5100,dns: improve naming of error to match DNS terminology,Co-authored-by: Blake Covarrubias blake@covarrubi.as
5101,fix truncate when NS is set,Also: fix test to catch the issue
5102,acls: Show AuthMethodNamespace when reading/listing ACL token meta (#10598),
5103,Merge pull request #10567 from hashicorp/dnephin/config-unexport-build,config: unexport the remaining builder methods
5104,Merge pull request #10621 from hashicorp/vuln/validate-sans,
5105,Add changelog entry,
5106,Merge pull request #10617 from hashicorp/dnephin/config-add-missing-docs,docs: add config options that were missing
5107,Fix godoc comment,Co-authored-by: Freddy freddygv@users.noreply.github.com
5108,Merge pull request #10618 from hashicorp/dnephin/docs-add-deprecation-version-grpc-port,docs: add deprecation version for ports.grpc settings
5109,xds: ensure single L7 deny intention with default deny policy does not result in allow action (CVE-2021-36213) (#10619),
5110,auto-updated agent/uiserver/bindata_assetfs.go from commit 0762da3a6,
5111,ui: [BUGFIX] Ensure we use the ns query param name when requesting permissions (#10608),"Previously when namespaces were enabled, we weren't requesting permission for the actively selected namespace, and instead always checking the permissions for the default namespace. This commit ensures we request permissions for the actively selected namespace."
5112,acl: fix error type into a string type for serialization issue,acl_endpoint_test.go:507:             Error Trace:    acl_endpoint_test.go:507                                         retry.go:148                                         retry.go:149                                         retry.go:103                                         acl_endpoint_test.go:504             Error:          Received unexpected error:                             codec.decoder: decodeValue: Cannot decode non-nil codec value into nil error (1 methods)             Test:           TestACLEndpoint_ReplicationStatus
5113,Add TODOs about partition handling,
5114,Update golden files,
5115,Validate SANs for passthrough clusters and failovers,
5116,Update golden files to account for SAN validation,
5117,Validate Subject Alternative Name for upstreams,These changes ensure that the identity of services dialed is cryptographically verified. For all upstreams we validate against SPIFFE IDs in the format used by Consul's service mesh: spiffe:///ns//dc//svc/
5118,Fix a data race in TestACLResolver_Client,By setting the hash when we create the policy. ``` WARNING: DATA RACE Read at 0x00c0028b4b10 by goroutine 1182:   github.com/hashicorp/consul/agent/structs.(ACLPolicy).SetHash()       /home/daniel/pers/code/consul/agent/structs/acl.go:701 +0x40d   github.com/hashicorp/consul/agent/structs.ACLPolicies.resolveWithCache()       /home/daniel/pers/code/consul/agent/structs/acl.go:779 +0xfe   github.com/hashicorp/consul/agent/structs.ACLPolicies.Compile()       /home/daniel/pers/code/consul/agent/structs/acl.go:809 +0xf1   github.com/hashicorp/consul/agent/consul.(ACLResolver).ResolveTokenToIdentityAndAuthorizer()       /home/daniel/pers/code/consul/agent/consul/acl.go:1226 +0x6ef   github.com/hashicorp/consul/agent/consul.resolveTokenAsync()       /home/daniel/pers/code/consul/agent/consul/acl_test.go:66 +0x5c Previous write at 0x00c0028b4b10 by goroutine 1509:   github.com/hashicorp/consul/agent/structs.(ACLPolicy).SetHash()       /home/daniel/pers/code/consul/agent/structs/acl.go:730 +0x3a8   github.com/hashicorp/consul/agent/structs.ACLPolicies.resolveWithCache()       /home/daniel/pers/code/consul/agent/structs/acl.go:779 +0xfe   github.com/hashicorp/consul/agent/structs.ACLPolicies.Compile()       /home/daniel/pers/code/consul/agent/structs/acl.go:809 +0xf1   github.com/hashicorp/consul/agent/consul.(ACLResolver).ResolveTokenToIdentityAndAuthorizer()       /home/daniel/pers/code/consul/agent/consul/acl.go:1226 +0x6ef   github.com/hashicorp/consul/agent/consul.resolveTokenAsync()       /home/daniel/pers/code/consul/agent/consul/acl_test.go:66 +0x5c Goroutine 1182 (running) created at:   github.com/hashicorp/consul/agent/consul.TestACLResolver_Client.func4()       /home/daniel/pers/code/consul/agent/consul/acl_test.go:1669 +0x459   testing.tRunner()       /usr/lib/go/src/testing/testing.go:1193 +0x202 Goroutine 1509 (running) created at:   github.com/hashicorp/consul/agent/consul.TestACLResolver_Client.func4()       /home/daniel/pers/code/consul/agent/consul/acl_test.go:1668 +0x415   testing.tRunner()       /usr/lib/go/src/testing/testing.go:1193 +0x202 ```
5119,Update serf,To pick up data race fixes
5120,agent: remove deprecated call in a test,
5121,agent: fix a data race in a test,The test was modifying a pointer to a struct that had been passed to another goroutine. Instead create a new struct to modify. ``` WARNING: DATA RACE Write at 0x00c01407c3c0 by goroutine 832:   github.com/hashicorp/consul/agent.TestServiceManager_PersistService_API()       /home/daniel/pers/code/consul/agent/service_manager_test.go:446 +0x1d86   testing.tRunner()       /usr/lib/go/src/testing/testing.go:1193 +0x202 Previous read at 0x00c01407c3c0 by goroutine 938:   reflect.typedmemmove()       /usr/lib/go/src/runtime/mbarrier.go:177 +0x0   reflect.Value.Set()       /usr/lib/go/src/reflect/value.go:1569 +0x13b   github.com/mitchellh/copystructure.(walker).Primitive()       /home/daniel/go/pkg/mod/github.com/mitchellh/copystructure@v1.0.0/copystructure.go:289 +0x190   github.com/mitchellh/reflectwalk.walkPrimitive()       /home/daniel/go/pkg/mod/github.com/mitchellh/reflectwalk@v1.0.1/reflectwalk.go:252 +0x31b   github.com/mitchellh/reflectwalk.walk()       /home/daniel/go/pkg/mod/github.com/mitchellh/reflectwalk@v1.0.1/reflectwalk.go:179 +0x24d   github.com/mitchellh/reflectwalk.walkStruct()       /home/daniel/go/pkg/mod/github.com/mitchellh/reflectwalk@v1.0.1/reflectwalk.go:386 +0x4ec   github.com/mitchellh/reflectwalk.walk()       /home/daniel/go/pkg/mod/github.com/mitchellh/reflectwalk@v1.0.1/reflectwalk.go:188 +0x656   github.com/mitchellh/reflectwalk.walkStruct()       /home/daniel/go/pkg/mod/github.com/mitchellh/reflectwalk@v1.0.1/reflectwalk.go:386 +0x4ec   github.com/mitchellh/reflectwalk.walk()       /home/daniel/go/pkg/mod/github.com/mitchellh/reflectwalk@v1.0.1/reflectwalk.go:188 +0x656   github.com/mitchellh/reflectwalk.Walk()       /home/daniel/go/pkg/mod/github.com/mitchellh/reflectwalk@v1.0.1/reflectwalk.go:92 +0x164   github.com/mitchellh/copystructure.Config.Copy()       /home/daniel/go/pkg/mod/github.com/mitchellh/copystructure@v1.0.0/copystructure.go:69 +0xe7   github.com/mitchellh/copystructure.Copy()       /home/daniel/go/pkg/mod/github.com/mitchellh/copystructure@v1.0.0/copystructure.go:13 +0x84   github.com/hashicorp/consul/agent.mergeServiceConfig()       /home/daniel/pers/code/consul/agent/service_manager.go:362 +0x56   github.com/hashicorp/consul/agent.(serviceConfigWatch).handleUpdate()       /home/daniel/pers/code/consul/agent/service_manager.go:279 +0x250   github.com/hashicorp/consul/agent.(*serviceConfigWatch).runWatch()       /home/daniel/pers/code/consul/agent/service_manager.go:246 +0x2d4 Goroutine 832 (running) created at:   testing.(T).Run()       /usr/lib/go/src/testing/testing.go:1238 +0x5d7   testing.runTests.func1()       /usr/lib/go/src/testing/testing.go:1511 +0xa6   testing.tRunner()       /usr/lib/go/src/testing/testing.go:1193 +0x202   testing.runTests()       /usr/lib/go/src/testing/testing.go:1509 +0x612   testing.(M).Run()       /usr/lib/go/src/testing/testing.go:1417 +0x3b3   main.main()       _testmain.go:1181 +0x236 Goroutine 938 (running) created at:   github.com/hashicorp/consul/agent.(serviceConfigWatch).start()       /home/daniel/pers/code/consul/agent/service_manager.go:223 +0x4e4   github.com/hashicorp/consul/agent.(ServiceManager).AddService()       /home/daniel/pers/code/consul/agent/service_manager.go:98 +0x344   github.com/hashicorp/consul/agent.(Agent).addServiceLocked()       /home/daniel/pers/code/consul/agent/agent.go:1942 +0x2e4   github.com/hashicorp/consul/agent.(Agent).AddService()       /home/daniel/pers/code/consul/agent/agent.go:1929 +0x337   github.com/hashicorp/consul/agent.TestServiceManager_PersistService_API()       /home/daniel/pers/code/consul/agent/service_manager_test.go:400 +0x17c4   testing.tRunner()       /usr/lib/go/src/testing/testing.go:1193 +0x202 ```
5122,agent: fix a data race in DNS tests,"The dnsConfig pulled from the atomic.Value is a pointer, so modifying it in place creates a data race. Use the exported ReloadConfig interface instead."
5123,agent: fix two data race in agent tests,"The LogOutput io.Writer used by TestAgent must allow concurrent reads and writes, and a bytes.Buffer does not allow this. The bytes.Buffer must be wrapped with a lock to make this safe."
5124,consul: fix data race in leader CA tests,"Some global variables are patched to shorter values in these tests. But the goroutines that read them can outlive the test because nothing waited for them to exit. This commit adds a Wait() method to the routine manager, so that tests can wait for the goroutines to exit. This prevents the data race because the 'reset to original value' can happen after all other goroutines have stopped."
5125,add changelog entry,
5126,dns: correct rcode for qtype not supported,"A previous commit started using QueryRefuced, but that is not correct. QueryRefuced refers to the OpCode, not the query type. Instead use errNoAnswer because we have no records for that query type."
5127,Check response len do not exceed max Buffer size,
5128,add missing test for truncate,
5129,dns: remove network parameter from two funcs,"Now that trimDNSResponse is handled by the caller we don't need to pass this value around. We can remove it from both the serviceLookup struct, and two functions."
5130,dns: trim response immediately before the write,"Previously the response was being trimmed before adding the EDNS values, which could cause it to exceed the max size."
5131,dns: handle errors from dispatch,
5132,dns: error response from dispatch,So that dispatch can communicate status back to the caller.
5133,dns: refactor dispatch to use an explicit return in each case,"In preparation for changing the return value, so that SOA, eDNS trimming and 'not found' errors can be handled in a single place."
5134,dns: small refactor to setEDNS to return early,Using a guard clause instead of a long nested if. The diff is best viewed with whitespace turned off.
5135,dns: remove unused method,It was added in 5934f803bfb54c1ceeeb6518398f1b82a726459f but it was never used.
5136,dns: remove unnecessary function wrapping,The dispatch function was called from a single place and did nothing but add a default value. Removing it makes code easier to trace by removing an unnecessary hop.
5137,docs: add deprecation version for ports.grpc settings,
5138,Merge pull request #10568 from hashicorp/dnephin/contrib-docs-config,contrib: add first draft of agent configuration docs
5139,docs: add config options that were missing,https://github.com/hashicorp/consul/pull/128 added pid_file https://github.com/hashicorp/consul/pull/1331 added disable_coordinates
5140,contrib: add first draft of agent configuration docs,
5141,Merge pull request #10616 from hashicorp/partitions/oss-http-params,oss: add partition query param parsing
5142,http: add partition query param parsing,
5143,auto-updated agent/uiserver/bindata_assetfs.go from commit 3e80e637b,
5144,ui: [BUGFIX] Fix KV Code Editor syntax loading (#10605),"This commit adds a bit of string wrangling to avoid the keys in our javascript source file also being transformed. Additionally, whilst looking at this we decided that Maps are a better dictionary than javascript objects, so we moved to use those here also (but this doesn't affect the issue)"
5145,ui: Show the correct 'ACLs Disabled' page when ACLs are disabled (#10604),"Adds 'can access ACLs' which means one of two things  When ACLs are disabled I can access the 'please enable ACLs' page When ACLs are enabled, its the same as canRead"
5146,ui: [BUGFIX] Ensure in-folder KVs are created in the correct folder (#10569),"When clicking to create a KV within folder name, would would be viewing a form that was a form for creating a KV in the root, which when the user clicked to save, saved the KV in the root. For the moment at least I've removed the code that strips double slashes, and whilst this isn't ideal, it looks like we've picked up one of those bugs that turns into a 'feature', and completely reworking KV to not rely on the double slashes is not really an option right now."
5147,Merge pull request #10614 from hashicorp/nia/docs-0.2.1,nia/docs 0.2.1
5148,acl: acl replication routine to report the last error message,
5149,docs: Add link to learn guide on migrating ACL tokens (#10609), docs: Add link to learn guide on migrating ACL tokens
5150,Merge pull request #10588 from hashicorp/dnephin/config-fix-ports-grpc,config: rename ports.grpc to ports.xds
5151,fix backwards compat for envoy command,The compatv2 integration tests were failing because they use an older CLI version with a newer HTTP API. This commit restores the GRPCPort field to the DebugConfig output to allow older CIs to continue to fetch the port.
5152,Apply suggestions from code review,Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com
5153,command/envoy: stop using the DebugConfig from Self endpoint,"The DebugConfig in the self endpoint can change at any time. It's not a stable API. With the previous change to rename GRPCPort to XDSPort this command would have broken. This commit adds the XDSPort to a stable part of the XDS api, and changes the envoy command to read this new field. It includes support for the old API as well, in case a newer CLI is used with an older API, and adds a test for both cases."
5154,config: update config settings and flags for ports.xds,
5155,check expiry date of the root/intermediate before using it to sign a leaf (#10500)," ca: move provider creation into CAManager  This further decouples the CAManager from Server. It reduces the interface between them and removes the need for the SetLogger method on providers.  ca: move SignCertificate to CAManager  To reduce the scope of Server, and keep all the CA logic together   ca: move SignCertificate to the file where it is used   auto-config: move autoConfigBackend impl off of Server   Most of these methods are used exclusively for the AutoConfig RPC endpoint. This PR uses a pattern that we've used in other places as an incremental step to reducing the scope of Server.   fix linter issues   check error when raftApplyMsgpack   ca: move SignCertificate to CAManager   To reduce the scope of Server, and keep all the CA logic together   check expiry date of the intermediate before using it to sign a leaf   fix typo in comment   Co-authored-by: Kyle Havlovitz kylehav@gmail.com   Fix test name   do not check cert start date   wrap error to mention it is the intermediate expired   Fix failing test   update comment   Co-authored-by: Daniel Nephin dnephin@hashicorp.com   use shim to avoid sleep in test   add root cert validation   remove duplicate code   Revert ""fix linter issues""   This reverts commit 6356302b54f06c8f2dee8e59740409d49e84ef24.   fix import issue   gofmt leader_connect_ca   add changelog entry   update error message   Co-authored-by: Freddy freddygv@users.noreply.github.com  fix error message in test  Co-authored-by: Daniel Nephin dnephin@hashicorp.com Co-authored-by: Kyle Havlovitz kylehav@gmail.com Co-authored-by: Freddy freddygv@users.noreply.github.com"
5156,connect/ca: ensure edits to the key type/bits for the connect builtin CA will regenerate the roots (#10330),progress on #9572
5157,connect/ca: require new vault mount points when updating the key type/bits for the vault connect CA provider (#10331),progress on #9572
5158,cli/sdk: Allow applying redirect-traffic rules in a provided Linux namespace (#10564),
5159,Merge pull request #10606 from hashicorp/cts-tf-1.0,nia/docs: Terraform 1.0 compatability
5160,nia/docs: Terraform 1.0 compatability,
5161,Merge pull request #10579 from hashicorp/dnephin/improve-config-docs-tls,docs: Improve TLS user documentation
5162,Merge pull request #10479 from hashicorp/dnephin/ca-provider-explore-2,ca: move Server.SignIntermediate to CAManager
5163,Bump hashi-stack-menu (#10599),
5164,Fixed a typo that broke the example static-server deployment (#10582),The service account was typo'd and needs to be fixed
5165,Merge pull request #10445 from hashicorp/dnephin/ca-provider-explore,ca: isolate more of the CA logic in CAManager
5166,ca: use provider constructors to be more consistent,Adds a contructor for the one provider that did not have one.
5167,check error when raftApplyMsgpack,
5168,auto-config: move autoConfigBackend impl off of Server,Most of these methods are used exclusively for the AutoConfig RPC endpoint. This PR uses a pattern that we've used in other places as an incremental step to reducing the scope of Server.
5169,ca: move SignCertificate to the file where it is used,
5170,ca: move SignCertificate to CAManager,"To reduce the scope of Server, and keep all the CA logic together"
5171,docs: move TLS example next to field reference,
5172,Update website/content/docs/agent/options.mdx,Co-authored-by: Kent 'picat' Gruber kent@hashicorp.com
5173,Merge pull request #10590 from hashicorp/dnephin/tls-config-less-copy,config: remove duplicate tlsutil.Config fields from agent/consul.Config
5174,auto-updated agent/uiserver/bindata_assetfs.go from commit a96e87aec,
5175,add missing state reset when stopping ca manager,
5176,ca: fix mockCAServerDelegate to work with the new interface,raftApply was removed so ApplyCARequest needs to handle all the possible operations Also set the providerShim to use the mock provider. other changes are small test improvements that were necessary to debug the failures.
5177,ca: remove unused method,"and small refactor to getCAProvider so that GoLand is less confused about what it is doing. Previously it was reporting that the for condition was always true, which was not the case."
5178,ca: remove raftApply from delegate interface,After moving ca.ConsulProviderStateDelegate into the interface we now have the ApplyCARequest method which does the same thing. Use this more specific method instead of raftApply.
5179,ca: move generateCASignRequest to the delegate,"This method on Server was only used by the caDelegateWithState, so move it there until we can move it entirely into CAManager."
5180,ca: move provider creation into CAManager,This further decouples the CAManager from Server. It reduces the interface between them and removes the need for the SetLogger method on providers.
5181,ui: Add socket icon for UDS (#10573),
5182,ca-manager: move provider shutdown into CAManager,Reducing the coupling between Server and CAManager
5183,tests: skip cases that depend on test server when -short flag set (#10576),
5184,Merge pull request #10586 from hashicorp/docs-consult-license,docs: changing license faq title to align with Nomad and Vault faq pages
5185,config: remove misleading UseTLS field,"This field was documented as enabling TLS for outgoing RPC, but that was not the case. All this field did was set the use_tls serf tag. Instead of setting this field in a place far from where it is used, move the logic to where the serf tag is set, so that the code is much more obvious."
5186,config: remove duplicate TLSConfig fields from agent/consul.Config,"tlsutil.Config already presents an excellent structure for this configuration. Copying the runtime config fields to agent/consul.Config makes code harder to trace, and provides no advantage. Instead of copying the fields around, use the tlsutil.Config struct directly instead. This is one small step in removing the many layers of duplicate configuration."
5187,docs: changing license faq title to align with Nomad and Vault faq pages,
5188,config: update GRPCPort and addr in runtime config,
5189,rename GRPC->XDS where appropriate,
5190,Add support for returning ACL secret IDs for accessors with acl:write (#10546),
5191,docs: group all agent tls settings together.,To make it easier to see all of the related settings in one place. Also add some context about how these settings are applied.
5192,docs: fix example of TLS config,To actually enable TLS
5193,Merge pull request #10570 from hashicorp/copy-of-master,Changes that were accidentally merged into the old master branch
5194,docs: Update docs to reflect limitation in TProxy when using single Consul DC deployment with multiple k8s clusters (#10549), docs: Update to reflect single Consul DC deployment with multiple k8s clusters
5195,config: add agent config flag for enterprise clients to indicate they wish to join a particular partition (#10572),
5196,Merge pull request #10281 from hashicorp/docs-pairing,New structure for contributing docs
5197,contrib: add docs about the diagrams,
5198,Fix typo in overview diagram,
5199,contrib: add first draft of RPC docs,
5200,Add ca certificate metrics (#10504),  add intermediate ca metric routine   add Gauge config for intermediate cert   Stop metrics routine when stopping leader   add changelog entry   updage changelog   Co-authored-by: Daniel Nephin dnephin@hashicorp.com   use variables instead of a map   go imports sort   Add metrics for primary and secondary ca   start metrics routine in the right DC   add telemetry documentation   update docs   extract expiry fetching in a func   merge metrics for primary and secondary into signing ca metric   Co-authored-by: Daniel Nephin dnephin@hashicorp.com
5201,auto-updated agent/uiserver/bindata_assetfs.go from commit 6fbeea5de,
5202,"ui: Don't default to the default namespace, use the token default namespace instead (#10503)","The default namespace, and the tokens default namespace (or its origin namespace) is slightly more complicated than other things we deal with in the UI, there's plenty of info/docs on this that I've added in this PR. Previously: When a namespace was not specified in the URL, we used to default to the default namespace. When you logged in using a token we automatically forward you the namespace URL that your token originates from, so you are then using the namespace for your token by default. You can of course then edit the URL to remove the namespace portion, or perhaps revisit the UI at the root path with you token already set. In these latter cases we would show you information from the default namespace. So if you had no namespace segment/portion in the URL, we would assume default, perform actions against the default namespace and highlight the default namespace in the namespace selector menu. If you wanted to perform actions in your tokens origin namespace you would have to manually select it from the namespace selector menu. This PR: Now, when you have no namespace segment/portion in the URL, we use the token's origin namespace instead (and if you don't have a token, we then use the default namespace like it was previously) Notes/thoughts: I originally thought we were showing an incorrectly selected namespace in the namespace selector, but it also matched up with what we were doing with the API, so it was in fact correct. The issue was more that we weren't selecting the origin namespace of the token for the user when a namespace segment was omitted from the URL. Seeing as we automatically forward you to the tokens origin namespace when you log in, and we were correctly showing the namespace we were acting on when you had no namespace segment in the URL (in the previous case default), I'm not entirely sure how much of an issue this actually was. This characteristic of namespace+token+namespace is a little weird and its easy to miss a subtlety or two so I tried to add some documentation in here for future me/someone else (including some in depth code comment around one of the API endpoints where this is very subtle and very hard to miss). I'm not the greatest at words, so would be great to get some edits there if it doesn't seem clear to folks. The fact that we used to save your previous datacenter and namespace into local storage for reasons also meant the interaction here was slightly more complicated than it needed to be, so whilst we were here we rejigged things slightly to satisfy said reasons still but not use local storage (we try and grab the info from higher up). A lot of the related code here is from before we had our Routlets which I think could probably make all of this a lot less complicated, but I didn't want to do a wholesale replacement in this PR, we can save that for a separate PR on its own at some point."
5203,Merge pull request #10559 from jkirschner-hashicorp/fix-autopilot-config-post-default-values,Fix defaults for autopilot config update
5204,auto-updated agent/uiserver/bindata_assetfs.go from commit 2c4f22a9f,
5205,Merge pull request #10552 from hashicorp/dnephin/ca-remove-rotation-period,ca: remove unused RotationPeriod field
5206,config: unexport the remaining builder methods,And remove BuildAndValidate. This commit completes some earlier work to reduce the config interface a single Load function. The last remaining test was converted to use Load instad of BuildAndValidate.
5207,Add changelog for PR 10559,
5208,Fix defaults for autopilot config update,"Previously, for a POST request to the /v1/operator/autopilot/configuration endpoint, any fields not included in the payload were set to a zero-initialized value rather than the documented default value. Now, if an optional field is not included in the payload, it will be set to its documented default value: - CleanupDeadServers:      true - LastContactThreshold:    ""200ms"" - MaxTrailingLogs:         250 - MinQuorum:               0 - ServerStabilizationTime: ""10s"" - RedundancyZoneTag:       """" - DisableUpgradeMigration: false - UpgradeVersionTag:       """""
5209,Add changelog,
5210,Add headings to Helm docs (#10562),
5211,auto-updated agent/uiserver/bindata_assetfs.go from commit 74070c095,
5212,ui: Add intl debug helpers (#10513),This commit adds a couple of debug utilities to help us to continue slowly adding i18n support:  We've added a CONSUL_INTL_DEBUG env/cookie variable to turn off variable interpolation within the t helper so you can see which variables are being interpolated. We've added a CONSUL_INTL_LOCALE env/cookie which currently supports two 'pseudo-locales' - la-fk (fake latin) and - (just dashes) either of which will make it easier to see what has not been localized until we can add prettier rules to prevent adding any copy into templates at all. I would guess if we ever translated the app we would use this for looking at things whilst developing also - but as yet I've not adding anything for that here seeing as we don't translate anything. Both variables are dev-time only and all code for this is removed from the production build.
5213,ui: Allow disabling of sourcemaps via env var (#10491),
5214,ui: Fixup definition-table + copy-button margin (#10512),
5215,ui: CopyButton amends (#10511),  ui: Add with-copyable modifier   Use with-copyable modifier for our own CopyButton   Move copy-button styling and remove most of copy-btn 
5216,auto-updated agent/uiserver/bindata_assetfs.go from commit 5f73de6fb,
5217,Merge pull request #10560 from jkirschner-hashicorp/change-sane-to-reasonable,Replace use of 'sane' where appropriate
5218,ca: remove unused RotationPeriod field,This field was never used. Since it is persisted as part of a map[string]interface{} it is pretty easy to remove it.
5219,contrib: add first draft of ACL docs,
5220,contrib: Add cluster persistence docs,And remove sections from the INTERNALS.md page as they are replaced.
5221,contrib: Add CLI docs,
5222,contrib: move FAQ into a separate file.,
5223,contributing: start an outline for more docs,Add diagrams for rpc routing and acl entity relationship contributing: create directory structure for new docs WIP diagram for catalog entities Add overview diagram Co-Authored-By: Kelly Devlin kdevlin@hashicorp.com
5224,Remove a few unused things from build-support,
5225,Replace use of 'sane' where appropriate,"HashiCorp voice, style, and language guidelines recommend avoiding ableist language unless its reference to ability is accurate in a particular use."
5226,docs: Formatting for Ingress Controllers example repos (#10542), docs: Formatting for Ingress Controllers example repos Update ingress-controllers.mdx
5227,"changelog: add 1.10.0, 1.9.7 and 1.8.13 (#10537)",
5228,docs: Ingress controllers configurations  (#10495),Add high level documentation on how to enable ingress controllers in consul on k8s. Co-authored-by: Blake Covarrubias blake@covarrubi.as Co-authored-by: Luke Kysow 1034429+lkysow@users.noreply.github.com
5229,Format certificates properly (rfc7468) with a trailing new line (#10411),  trim carriage return from certificates when inserting rootCA in the inMemDB   format rootCA properly when returning the CA on the connect CA endpoint   Fix linter warnings   Fix providers to trim certs before returning it   trim newlines on write when possible   add changelog   make sure all provider return a trailing newline after the root and intermediate certs   Fix endpoint to return trailing new line   Fix failing test with vault provider   make test more robust   make sure all provider return a trailing newline after the leaf certs   Check for suffix before removing newline and use function   Add comment to consul provider   Update change log   Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com   fix typo   simplify code callflow   Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com   extract requireNewLine as shared func   remove dependency to testify in testing file   remove extra newline in vault provider   Add cert newline fix to envoy xds   remove new line from mock provider   Remove adding a new line from provider and fix it when the cert is read   Add a comment to explain the fix   Add missing for leaf certs   fix missing new line   fix missing new line in leaf certs   remove extra new line in test   updage changelog   Co-authored-by: Daniel Nephin dnephin@hashicorp.com   fix in vault provider and when reading cache (RPC call)   fix AWS provider   fix failing test in the provider   remove comments and empty lines   add check for empty cert in test   fix linter warnings   add new line for leaf and private key   use string concat instead of Sprintf   fix new lines for leaf signing   preallocate slice and remove append   Add new line to SignIntermediate and CrossSignCA   Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com Co-authored-by: Daniel Nephin dnephin@hashicorp.com
5230,Add changelog to backported bug fix for Topology Metrics (#10538),
5231,Merge pull request #10515 from hashicorp/dnephin/fix-arm32-atomic-aligment,Fix panic on 32-bit platforms
5232,docs: remove alpha from 1.10.0 reference for observability on k8s metrics merging (#10528),The docs note an alpha pre-release version on K8s observability. Updating to only reference the GA 1.10.0 version of Consul for observability on k8s and metrics merging.
5233,Merge pull request #10527 from hashicorp/rename-main-branch,Update references to the main branch
5234,build: ensure make go-build-image target builds tools in isolation (#10534),
5235,docs: Document setting dashboard_url on k8s (#10510),It's tricky because the {{ needs to be escaped with Helm.
5236,Add rs-consul client to community-provided SDKs list (#10529),  Add rs-consul   Update website/content/api-docs/libraries-and-sdks.mdx   Co-authored-by: Mike Morris mikemorris@users.noreply.github.com
5237,docs: Add Consul 1.10 release notes (#10489),Co-authored-by: Mike Morris mikemorris@users.noreply.github.com
5238,Rename main branch in CHANGELOG and website docs,
5239,Update references to the main branch,The main branch is being renamed from master->main. This commit should update all references to the main branch to the new name. Co-Authored-By: Mike Morris mikemorris@users.noreply.github.com
5240,docs: add docs for running a single Consul dc in multiple k8s clusters (#10508),
5241,ci: add go-test-32bit and lint-32bit to catch atomic misalignment panics,
5242,testing: fix a test for 32-bit,"The hcl decoding apparently uses strconv.ParseInt, which fails to parse a 64bit int. Since hcl v1 is basically EOl, it seems unlikely we'll fix this in hcl. Since this test is only about loading values from config files, the extra large number doesn't seem important. Trim a few zeros from the numbers so that they parse properly on 32bit platforms. Also skip a slow test when -short is used."
5243,fix 64-bit aligment for 32-bit platforms,"sync/atomic must be used with 64-bit aligned fields, and that alignment is difficult to ensure unless the field is the first one in the struct. https://golang.org/pkg/sync/atomic/#pkg-note-BUG."
5244,Merge pull request #10519 from jkirschner-hashicorp/fix-doc-service-splitter-example,docs: fix service splitter example weight sum
5245,Add docs for gossip encryption key rotation (#10522)," Add docs for gossip encryption key rotation with feedback from David, Kyle and Luke."
5246,Merge pull request #10437 from christopherlai/patch-1,Link to Reverse Proxy from Load Balancer
5247,docs: Add audit logging examples (#10382)," docs: Add audit logging examples  Resolves #8375, resolves #9055"
5248,docs: Clarify serf_lan/retry_join behavior with network segments (#10386)," docs: Add info on using cloud auto-join with Network Segments  Resolves hashicorp/go-discover#57  Add note about joining network segments  Specifically call out that agents can be configured to join a network segment by either specifying the Serf LAN port in the join address, changing the agent's default Serf LAN port by configuring ports.serf_lan, or specifying the port in the -serf-lan-port command line flag. Resolves #9972"
5249,docs: Remove Helm 2 mention in Consul K8s install and uninstall (#10517), docs: Remove Helm 2 mention in Consul K8s install and uninstall Helm 2 is no longer supported via Consul K8s. Helm 3 is now the supported version for Consul K8s.
5250,Update self-hosted-kubernetes.mdx (#10518),"Corrected typo, from you mean need to you may need."
5251,Fix service splitter example weight sum,Weight sum must be equal to 100.
5252,Merge pull request #10514 from hashicorp/dnephin/actually-enable-streaming,streaming: fix not being able to enable streaming
5253,streaming: support X-Cache-Hit header,"If a value was already available in the local view the request is considered a cache hit. If the materialized had to wait for a value, it is considered a cache miss."
5254,streaming: fix enable of streaming in the client,And add checks to all the tests that explicitly use streaming.
5255,Remove a racy and failing test,"This test is super racy (it's not just a single line). This test also starts failing once streaming is enabled, because the cache rate limit no longer applies to the requests in the test. The queries use streaming instead of the cache. This test is no longer valid, and the functionality is already well tested by TestCacheThrottle.  Instead of spending time rewriting this test, let's remove it. ``` WARNING: DATA RACE Read at 0x00c01de410fc by goroutine 735:   github.com/hashicorp/consul/agent.TestCacheRateLimit.func1()       /home/daniel/pers/code/consul/agent/agent_test.go:1024 +0x9af   github.com/hashicorp/consul/testrpc.WaitForTestAgent()       /home/daniel/pers/code/consul/testrpc/wait.go:99 +0x209   github.com/hashicorp/consul/agent.TestCacheRateLimit.func1()       /home/daniel/pers/code/consul/agent/agent_test.go:966 +0x1ad   testing.tRunner()       /usr/lib/go/src/testing/testing.go:1193 +0x202 Previous write at 0x00c01de410fc by goroutine 605:   github.com/hashicorp/consul/agent.TestCacheRateLimit.func1.2()       /home/daniel/pers/code/consul/agent/agent_test.go:998 +0xe9 Goroutine 735 (running) created at:   testing.(*T).Run()       /usr/lib/go/src/testing/testing.go:1238 +0x5d7   github.com/hashicorp/consul/agent.TestCacheRateLimit()       /home/daniel/pers/code/consul/agent/agent_test.go:961 +0x375   testing.tRunner()       /usr/lib/go/src/testing/testing.go:1193 +0x202 Goroutine 605 (finished) created at:   github.com/hashicorp/consul/agent.TestCacheRateLimit.func1()       /home/daniel/pers/code/consul/agent/agent_test.go:1022 +0x91e   github.com/hashicorp/consul/testrpc.WaitForTestAgent()       /home/daniel/pers/code/consul/testrpc/wait.go:99 +0x209   github.com/hashicorp/consul/agent.TestCacheRateLimit.func1()       /home/daniel/pers/code/consul/agent/agent_test.go:966 +0x1ad   testing.tRunner()       /usr/lib/go/src/testing/testing.go:1193 +0x202 ```"
5256,http: add an X-Consul-Query-Backend header to responses,So that it is easier to detect and test when streaming is being used.
5257,Merge pull request #10506 from hashicorp/dnephin/docs-rpc-query-metrics,docs: correct some misleading telemetry docs
5258,docs: correct some misleading telemetry docs,"The query metrics are actually reported for all read queries, not only ones that use a MinIndex to block for updates. Also clarify the raft.apply metric is only on the leader."
5259,chore: upgrade react-head and deps (#10499),
5260,Merge pull request #10497 from hashicorp/dnephin/tls-cert-exploration-3,tlsutil: unexport and remove methods
5261,connect: include optional partition prefixes in SPIFFE identifiers (#10507),NOTE: this does not include any intentions enforcement changes yet
5262,Update CONTRIBUTING.md,
5263,connect/ca: cease including the common name field in generated certs (#10424),"As part of this change, we ensure that the SAN extensions are marked as critical when the subject is empty so that AWS PCA tolerates the loss of common names well and continues to function as a Connect CA provider. Parts of this currently hack around a bug in crypto/x509 and can be removed after https://go-review.googlesource.com/c/go/+/329129 lands in a Go release. Note: the AWS PCA tests do not run automatically, but the following passed locally for me: ENABLE_AWS_PCA_TESTS=1 go test ./agent/connect/ca -run TestAWS"
5264,auto-updated agent/uiserver/bindata_assetfs.go from commit ace794d21,
5265,ui: Enable specifying additional docfy config as json (#10464),
5266,"return an empty record when asked for an addr dns with type other then A, AAAA and ANY (#10401)",  return an invalid record when asked for an addr dns with type other then A and AAAA   add changelog   fix ANY use case and add a test for it   update changelog type   Co-authored-by: Daniel Nephin dnephin@hashicorp.com   return empty response if the question record type do not match for addr   set comment in the right place   return A\AAAA record in extra section if record type is not A\AAAA for addr   Fix failing test   remove commented code   Co-authored-by: Daniel Nephin dnephin@hashicorp.com   use require for test validation   use variable to init struct   fix failing test   Update agent/dns.go   Co-authored-by: Daniel Nephin dnephin@hashicorp.com  Update .changelog/10401.txt  Co-authored-by: Daniel Nephin dnephin@hashicorp.com  Update agent/dns.go  Co-authored-by: Daniel Nephin dnephin@hashicorp.com  Update agent/dns.go  Co-authored-by: Daniel Nephin dnephin@hashicorp.com  Update agent/dns.go  Co-authored-by: Daniel Nephin dnephin@hashicorp.com  fix compilation error  Co-authored-by: Daniel Nephin dnephin@hashicorp.com
5267,Invert the logic of outgoingRPCTLSDisabled,"To remove the double negatives, which should make it easier to read."
5268,tlsutil: inline verifyIncomingHTTPS,"This function was only used in one place, and the indirection makes it slightly harder to see what the one caller is doing. Since it's only accesing a couple fields it seems like the logic can exist in the one caller."
5269,tlsutil: remove indirection and duplication,"VerifyIncomingRPC and verifyIncomingRPC were duplicate functions, and once one is removed, Config.verifyIncomingRPC is only called in one place. Remove 2 of the 3 functions to make the behaviour easier to follow (less indirection)."
5270,tlsutil: remove unnecessary getter functions,These functions did nothing but hide the fields they were returning.
5271,tlsutil: unexport and remove indirection,"Unexport outgoingALPNRPCConfig since it is only used internally Remove the MutualTLSCapable->mutualTLSCapable indirection, we only need the exported method. Inline enableAgentTLSForChecks to make it more clear what it does, since it only has a single caller and is wrapping a single field lookup."
5272,[Fix] Add missing quote (#10484),
5273,sdk: Stop making a special /tmp/consul-test directory for testutil.TempFile and testutil.TempDir (#10494),
5274,docs/nia: fix catalog-services typos pt 2 (#10493),
5275,connect/proxy: fixes logic bug preventing builtin/native proxy from starting upstream listeners (#10486),Fixes #10480 Also fixed a data race in the connect/proxy package that was unearthed by the tests changed for this bugfix.
5276,docs/nia: fix typo (#10492),
5277,Merge pull request #10490 from hashicorp/dnephin/fix-tls-for-health-check,tlsutil: fix ServerName used for health checks that use TLS
5278,Merge pull request #10476 from hashicorp/dnephin/ca-primary-uses-intermediate,ca: replace ca.PrimaryIntermediateProviders
5279,tlsutils: more test cases for OutgoingTLSConfigForCheck,
5280,tlsutil: fix default server name for health checks,Don't use the agent node name or agent server name when EnableAgentTLSForChecks=false.
5281,Merge pull request #10488 from hashicorp/dnephin/ci-lib-testing,ci: test api/sdk against last 2 Go versions
5282,tlsutil: convert tests for OutgoingTLSConfigForCheck to a table,In preparation for adding more test cases.
5283,ci: test api/sdk against last 2 Go versions,So that we catch any incompatibilities with the preivous Go version.
5284,docs: Remove beta version references from Helm reference (#10477),Removing references from the 1.10 beta that were included in Helm Configuration Reference
5285,Merge pull request #10473 from knusbaum/ioutil,"{api,command/agent}: change io.Discard to ioutil.Discard"
5286,docs/nia: Update CTS compatible versions (#10487),
5287,docs: Removal of Consul vs ZooKeeper analysis (#10469)," docs: Removal of Consul vs ZooKeeper  Although Consul does have a KV, we are not positioning Consul as a first class KV store versus other alternatives such as etcd or Zookeeper. Will remove this since this has not been updated with further analysis since this content was created.  Removing from Zookeeper analysis Navbar Removing Zookeeper analysis from redirects"
5288,update content param for improved attribution (#10468),
5289,structs: prohibit config entries from referencing more than one partition at a time (#10478),"affected kinds: service-defaults, ingress-gateway, terminating-gateway, service-intentions"
5290,structs: prevent service-defaults upstream configs from using wildcard names or namespaces (#10475),
5291,Updating alert for 1.10 announcement (#10474),
5292,ca: replace ca.PrimaryIntermediateProviders,With an optional interface that providers can use to indicate if they use an intermediate cert in the primary DC. This removes the need to look up the provider config when renewing the intermediate.
5293,website: bump use-cases to latest (#10472),  website: bump use-cases to latest   chore: bump use-cases to stable release 
5294,structs: add some missing config entry validation and clean up tests (#10465),"Affects kinds: service-defaults, ingress-gateway, terminating-gateway"
5295,Merge pull request #10440 from hashicorp/dnephin/contib-docs-dns,contrib: add some docs for the DNS interface
5296,Merge pull request #10467 from hashicorp/docs-upgrading-to-1-10-0-fixes,Docs upgrading to 1 10 0 fixes
5297,command/agent: change io.Discard to ioutil.Discard,
5298,api: change io.Discard to ioutil.Discard,
5299,contrib: Update DNS table description,
5300,docs: fixed instance of incorrect grammar usage,
5301,merge dns table with current dns page,
5302,add matrix for dns type vs kind,
5303,auto-updated agent/uiserver/bindata_assetfs.go from commit c78f7ecb2,
5304,ui: Colocate remaining CSS components to the app/components folder (#10328),
5305,docs - Adding Mesh as CRD in Consul K8s (#10459), docs - Adding Mesh as CRD in Consul K8s Removing extra left brace in ServiceDefaults
5306,Update config entry docs for CRDs (#10407)," Update mesh, proxy-defaults and service-defaults docs to properly document Kubernetes YAML.  Co-authored-by: David Yu dyu@hashicorp.com"
5307,update docs (#10405),Consul 1.10 GA for Consul K8s
5308,docs: upgrading to tproxy (/docs/upgrades/upgrade-specific) (#10416), docs: update tproxy docs Co-authored-by: Blake Covarrubias blake@covarrubi.as Co-authored-by: Iryna Shustava ishustava@users.noreply.github.com Co-authored-by: David Yu dyu@hashicorp.com
5309,docs: update docs/k8s/connect to for tproxy GA. (#10408), Assume tproxy is enabled by default and connect to upstreams   with kube DNS. Update docs for missing annotations.
5310,docs: update tproxy docs (/docs/connect/transparent-proxy) (#10415),  docs: update tproxy docs   add examples   links 
5311,docs: Update Consul K8s Compat Matrix for Consul 1.10 (#10456),
5312,Remove beta release callout on downloads page,
5313,docs: Remove beta tag for 1.10 features,Remove beta tag for 1.10 features which are now GA.
5314,docs: fixed some grammar errors and suggested some language improvments in the 'upgrading to 1.10.0' page,
5315,website: upgrade code-block (#10436),  website: upgrade code-block   website: bump to latest stable releases 
5316,Merge pull request #10434 from hashicorp/faq-license-update,docs: updated FAQ to accommodate new requirements prior to upgrading
5317,docs: Remove Grafana from Observability section (#10454), Remove Grafana from Observability section  Reference Grafana Config in the learn guide Co-authored-by: Blake Covarrubias blake@covarrubi.as
5318,docs: removed reduntant information from the client agent question,
5319,docs: removed npm file changes and re-submitted content,
5320,Apply suggestions from code review,Adding suggestion Co-authored-by: Blake Covarrubias blake@covarrubi.as
5321,Merge pull request #10444 from hashicorp/dnephin/tls-cert-exploration-2,tlsutil: reduce interface provided to auto-config
5322,Update 1.10 enterprise upgrade docs. (#10446),Co-authored-by: Paul Banks banks@banksco.de Co-authored-by: Ashwin Venkatesh ashwin@hashicorp.com
5323,tlsutil: reduce interface provided to auto-config,"Replace two methods with a single one that returns the cert. This moves more of the logic into the single caller (auto-config). tlsutil.Configurator is widely used. By keeping it smaller and focused only on storing and returning TLS config, we make the code easier to follow. These two methods were more related to auto-config than to tlsutil, so reducing the interface moves the logic closer to the feature that requires it."
5324,auto-updated agent/uiserver/bindata_assetfs.go from commit 043f631b7,
5325,ui: Rename icons for consistency and remove unused icons (#10311), ui: Standardize logo naming  According to structure it should always be logo-name not name-logo   Make sure all our logos use logo-name format   Upgrade to @hashicorp/structure-icons 1.9.0   Add -color to be consistent with other logos   Add ms logo back in   Remove all the old *-color icons from before when we got masks   Add missing files   Missed glimmer extend name change 
5326,docs: linked license faq to new section about upgrading to 1.10.x; also removed upgrade req details and table in faq,
5327,nia/docs 0.2.0,"  docs/nia: Add section on upgrading Terraform in CTS   docs/nia: Add service filter configuration, deprecate tag   docs/nia: Add version to deprecated note, use path to reference   docs/nia: catalog-services condition   Co-authored-by: Melissa Kam mkam@hashicorp.com Co-authored-by: Melissa Kam 3768460+mkam@users.noreply.github.com"
5328,Update website/content/docs/enterprise/license/faq.mdx,docs: Replaced absolute path to Consul docs with relative path in the license FAQ. Co-authored-by: Blake Covarrubias blake@covarrubi.as
5329,docs: mention that service defaults upstream config sections should not contain wildcards (#10451),
5330,Merge pull request #10439 from hashicorp/dnephin/tls-cert-exploration,tlsutil: additional godoc and small cleanup
5331,auto-updated agent/uiserver/bindata_assetfs.go from commit 4bddd5210,
5332,ui: Increase z-index of main menus to avoid layering issues (#10428),
5333,docs: applied feedback about licensing FAQ and upgrade paths,
5334,docs: updated licensing FAQ to include upgrade paths based on Consul server and client version,
5335,Merge pull request #9490 from hashicorp/dnephin/proxycfg-state-3,proxycfg: move each handler into a seprate file
5336,proxycfg: remove unused method,This method was accidentally re-introduced in an earlier rebase. It was removed in ed1082510dc80523b1f2a3a740fa5a13c77594f9 as part of the tproxy work.
5337,proxycfg: move each handler into a seprate file,"There is no interaction between these handlers, so splitting them into separate files makes it easier to discover the full implementation of each kindHandler."
5338,Update health checks docs for tproxy (#10419), Update health checks docs for tproxy Co-authored-by: Iryna Shustava ishustava@users.noreply.github.com
5339,website: this 1.10.0 upgrade table omitted two versions of envoy (#10443),
5340,contrib: add some docs for the DNS interface,
5341,tlsutil: un-ptr and document the manual struct,
5342,tlsutil: document Configurator and some of its fields,
5343,tlsutil: un-ptr and add godoc to autoTLs struct,the autoTLS field on Configurator is only set once. By making it a value receiver it should be allocated as a single block of memory along with Configurator. Also add godoc to document what it is used for.
5344,tlsutil: remove unused method,"Method was only used in tests, and an equivalent function alraedy exists."
5345,tlsutil: unexport two types,These types are only used internally and should not be exported. Also remove some unnecessary function wrapping.
5346,auto-updated agent/uiserver/bindata_assetfs.go from commit 5f17062b0,
5347,ui: Add resolution for xmlhttprequest-ssl at least 1.6.3 (#10370),
5348,auto-updated agent/uiserver/bindata_assetfs.go from commit 9eab71514,
5349,ui: Move all our icons to use CSS custom properties instead of SASS vars (#10298)," ui: Move all our icons to use CSS custom properties  The good thing about SASS vars is, if you don't use them they get removed from the final build. Whereas with CSS we have no tree-shaking to get rid of unused CSS custom properties. We can mostly work around this and for some things like colors its no big deal if we have some hex-codes in the build that we don't use as hex-codes are relatively small. We've been slowly but surely moving all of our colors (and other things) to use CSS custom properties instead of SASS vars now that we have them available. This commit makes use of the 'tree-shaking' abilities of @extend to ensure that we only compile in the icons that we use. This commit is mostly churn-less as we already use @extend for the majority of our icons, so generally there is zero change here for working on the UI, but I did spot one single place where we were using SASS vars instead of @extend. This now uses the new form (second commit) Interestingly this reduces our CSS payload by ~2kb to ~53kb (around 25kb of that is these icons)"
5350,auto-updated agent/uiserver/bindata_assetfs.go from commit ac424187f,
5351,ui: %horizontal-kv-list CSS component (and related) (#10285),"This commit uses docfy to isolate the individual parts and options and investigates the why you might use certain options and document how you might use certain options. Originally we used a single %icon-definition CSS component to represent this, but seeing as some of them don't have icons, it didn't seem like the best name. So this PR splits this component into various different ones and then uses the new ones to continue to provide a now deprecated %icon-definition. The component is currently a CSS only component that assumes a single (or multiple) description lists for its markup component, and provides for multiple different options (including a reversed mode which I'm still not totally sure about, but we don't use this right now anyway).  %icon-definition %horizontal-kv-list %csv-list  %tag-list %badge"
5352,Link to Reverse Proxy from Load Balancer,
5353,docs: updated FAQ to accommodate new requirements prior to upgrading,
5354,Merge pull request #9924 from hashicorp/dnephin/cert-expiration-metric,connect: emit a metric for the seconds until root CA expiry
5355,Merge pull request #9489 from hashicorp/dnephin/proxycfg-state-2,proxycfg: split state into a handler for each kind
5356,Merge pull request #10425 from hashicorp/dnephin/tls-cert-exploration,"tlsutil: fix a possible panic, and make the package safer"
5357,Fix links to ECS module (#10430),
5358,tlsutil: remove the RLock from log,"The log method only needed the lock because it accessed version. By using an atomic instead of a lock, we can remove the risk that the comments call out, making log safer to use. Also updates the log name to match the function names, and adds some comments about how the lock is used."
5359,tlsutil: Un-method Configurator.check,The method receiver was never used. Also rename it and add a godoc comment.
5360,tlsutil: fix a panic,"UpdateAutoTLSCA would panic if either of the calls errored, because the read lock was being unlocked incorrectly."
5361,Merge pull request #10373 from hashicorp/license-faq-docs,docs: adding a faq document in preparation for Consul Enterprise 1.10.0
5362,tlsutil: un-embed the RWMutex,"Embedded structs make code harder to navidate because an IDE can not show all uses of the methods of that field separate from other uses. Generally embedding of structs should only be used to satisfy an interface, and in this case the Configurator type does not need to implement the RWMutex interface."
5363,Update website/content/docs/enterprise/license/overview.mdx,Merged Co-authored-by: Blake Covarrubias blake@covarrubi.as
5364,Merge pull request #10423 from hashicorp/fix-map,
5365,inline assignment,
5366,Update .changelog/10423.txt,Co-authored-by: Freddy freddygv@users.noreply.github.com
5367,proxycfg: reference to entry in map should not panic,
5368,Replace type conversion with embedded structs,
5369,Update CHANGELOG.md,
5370,Merge pull request #10418 from hashicorp/changelog/eula-toe,
5371,changelog: add notes section to changelog template,
5372,changelog: add note about packaging EULA and ToE alongside Enterprise binaries,
5373,Update website/content/docs/enterprise/license/faq.mdx,Co-authored-by: Luke Kysow 1034429+lkysow@users.noreply.github.com
5374,docs: added question pertaining to Consul Kubernetes and Helm chart,
5375,Update k8s license docs to account for license autoload,
5376,proxycfg: split state into kind-specific types,"This commit extracts all the kind-specific logic into handler types, and keeps the generic parts on the state struct. This change should make it easier to add new kinds, and see the implementation of each kind more clearly."
5377,proxycfg: unmethod hostnameEndpoints,the method receiver can be replaced by the first argument. This will allow us to extract more from the state struct in the future.
5378,Merge pull request #10414 from hashicorp/dnephin/fix-lint,Fix lint on main branch
5379,Remove duplicate import,because two PRs crossed paths.
5380,Merge pull request #9466 from hashicorp/dnephin/proxycfg-state,proxycfg: prepare state for split by kind
5381,xds: fix flaky protocol tests (#10410),
5382,Merge pull request #10404 from hashicorp/ingress-stats,
5383,xds: adding more delta protocol tests (#10398),Fixes #10125
5384,Regen golden files,
5385,Add changelog entry,
5386,Update agent/xds/listeners.go,Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com
5387,Omit empty tproxy config in JSON responses (#10402),
5388,proxycfg: Ensure that endpoints for explicit upstreams in other datacenters are watched in transparent mode (#10391),Co-authored-by: Freddy Vallenilla freddy@hashicorp.com
5389,Remove unused param,
5390,improve monitor performance (#10368),"  remove flush for each write to http response in the agent monitor endpoint   fix race condition when we stop and start monitor multiple times, the doneCh is closed and never recover.   start log reading goroutine before adding the sink to avoid filling the log channel before getting a chance of reading from it   flush every 500ms to optimize log writing in the http server side.   add changelog file   add issue url to changelog   fix changelog url   Update changelog   Co-authored-by: Daniel Nephin dnephin@hashicorp.com   use ticker to flush and avoid race condition when flushing in a different goroutine   stop the ticker when done   Co-authored-by: Daniel Nephin dnephin@hashicorp.com  Revert ""fix race condition when we stop and start monitor multiple times, the doneCh is closed and never recover.""  This reverts commit 1eeddf7a  wait for log consumer loop to start before registering the sink  Co-authored-by: Daniel Nephin dnephin@hashicorp.com"
5391,docs: adding new content for review,
5392,Merge pull request #10400 from hashicorp/dnephin/api-client-response-body,api: properly close the response body
5393,Update ingress gateway stats labeling,"In the absence of stats_tags to handle this pattern, when we pass ""ingress_upstream.$port"" as the stat_prefix, Envoy splits up that prefix and makes the port a part of the metric name. For example: - stat_prefix: ingress_upstream.8080 This leads to metric names like envoy_http_8080_no_route. Changing the stat_prefix to ingress_upstream_80880 yields the expected metric names such as envoy_http_no_route. Note that we don't encode the destination's name/ns/dc in this stat_prefix because for HTTP services ingress gateways use a single filter chain. Only cluster metrics are available on a per-upstream basis."
5394,Update terminating gateway stats labeling,"This change makes it so that the stat prefix for terminating gateways matches that of connect proxies. By using the structure of ""upstream.svc.ns.dc"" we can extract labels for the destination service, namespace, and datacenter."
5395,docs: Add example of escaping tracing JSON using jq,
5396,docs: Add note about configurable KV size in FAQ,
5397,api: properly close the response body,"reads resp.Body until EOF, so that the http client is able to re-use the TCP connection."
5398,xds: ensure that dependent xDS resources are reconfigured during primary type warming (#10381),"Updates to a cluster will clear the associated endpoints, and updates to a listener will clear the associated routes. Update the incremental xDS logic to account for this implicit cleanup so that we can finish warming the clusters and listeners. Fixes #10379"
5399,Update metric name,and handle the case where there is no active root CA.
5400,connect: emit a metric for the number of seconds until root CA expiration,
5401,Rename CatalogDestinationsOnly (#10397),"CatalogDestinationsOnly is a passthrough that would enable dialing addresses outside of Consul's catalog. However, when this flag is set to true only connect endpoints for services can be dialed. This flag is being renamed to signal that non-Connect endpoints can't be dialed by transparent proxies when the value is set to true."
5402,grpc: move gRPC INFO logs to be emitted as TRACE logs from Consul (#10395),Fixes #10183
5403,Relax validation for expose.paths config (#10394),"Previously we would return an error if duplicate paths were specified. This could lead to problems in cases where a user has the same path, say /healthz, on two different ports. This validation was added to signal a potential misconfiguration. Instead we will only check for duplicate listener ports, since that is what would lead to ambiguity issues when generating xDS config. In the future we could look into using a single listener and creating distinct filter chains for each path/port."
5404,upgrade golang crypto from 0.0.0-20200930160638-afb6bcd081ae => v0.0.0-20210513164829-c07d793c2f9a (#10390),
5405,Update k8s term gateway docs to make address clear (#10389),"Previously if you were to follow these docs and register two external services, you would set the Address field on the node. The second registered service would change the address of the node for the first service. Now the docs explain the address key and how to register more than one external service."
5406,Homepage CTA button to point to Learn (#10380),redirecting users to learn instead of to the download page.
5407,docs: updated content in the overview page and faq,
5408,Merge pull request #10378 from hashicorp/dnephin/agent-self-primary-dc,http: add PrimaryDatacenter to the /v1/agent/self  response
5409,Apply suggestions from code review,Applying suggestions Co-authored-by: Blake Covarrubias blake@covarrubi.as Co-authored-by: Luke Kysow 1034429+lkysow@users.noreply.github.com
5410,Homepage Hero Upgrade w/ Alert (#10377),"  updating hero with ecs info   updates to hero   Include back the Basic Hero styles   The basic hero is still used on the use case pages  Revert the tsconfig changes  Nothing in the scope of this PR requires these changes!  Remove the old Carousel CSS file  This is no longer needed as we're using the @hashicorp/react-hero which comes with all the styling required for this carousel to work.  Rename ConsulHero -> HomepageHero imports/exports  This will help prevent any confusion for future devs here -- this is a convention we have that helps us from having to trace every import, which helps us find the source of the component without actually having to look at the import.  Pin the deps  These were previously pinned to the exact version; including ^ will allow minor & patch updates to sneak in, which normally shouldn't cause an issue but we tend to be more conservative on dep upgrades.   Revert unneeded changes to the document file   Revert changes to app.js file   Not needed in the scope of this PR!   Hard pin react-alert   Remove unneeded css   Co-authored-by: Brandon Romano brandon@hashicorp.com"
5411,proxycfg: extract two types from state struct,"These two new struct types will allow us to make polymorphic handler for each kind, instad of having all the logic for each proxy kind on the state struct."
5412,proxycfg: pass context around where it is needed,context.Context should never be stored on a struct (as it says in the godoc) because it is easy to to end up with the wrong context when it is stored. Also see https://blog.golang.org/context-and-structs This change is also in preparation for splitting state into kind-specific handlers so that the implementation of each kind is grouped together.
5413,http: add PrimaryDatacenter to the /v1/agent/self  response,"This field is available in DebugConfig, but that field is not stable and could change at any time. The consul-k8s needs to be able to detect the primary DC for tests, so adding this field to the stable part of the API response."
5414,docs: added more questions and marking ready for review,
5415,Aligns audit log code example (#10371),
5416,docs: update envoy docs for changes related to xDS v2->v3 and SoTW->Incremental (#10166),Fixes #10098
5417,Update CHANGELOG.md,
5418,docs: adding an faq in preperation for Consul Enterprise 1.10.0,
5419,Add flag for transparent proxies to dial individual instances (#10329),
5420,Merge pull request #10366 from hashicorp/pcmccarron-ecs-additions,Adding ECS copy and other edits
5421,Merge pull request #10367 from hashicorp/dnephin/submatview-store-get-tests,submatview: add test cases for store.Get with timeout and no index
5422,remove a race condition in sdk testutil server stop (#10342),  remove a race condition in sdk testutil server stop   ensure the process has actually stopped 
5423,Merge pull request #10369 from hashicorp/mw.post-hashiconf-alert-banner,Adjust alert banner for the end of HashiConf
5424,Adjust alert banner for the end of HashiConf,
5425,removing alert component,
5426,submatview: add test cases for store.Get with timeout and no index,Also set a more unique name for the serviceRequest.Type to prevent potential name conflicts in the future.
5427,Merge pull request #10364 from hashicorp/dnephin/streaming-e2e-test,submatview: and Store integration test with stream backend
5428,Merge pull request #10169 from hashicorp/dnephin/streaming-docs,docs: add streaming to api-docs
5429,Adding ECS copy and other edits,Updated the descriptions to match the right tiles and added a new alert for ECS integration
5430,"Revert ""Avoid adding original_dst filter when not needed"" (#10365)",
5431,docs: move streaming docs to blocking query page,
5432,fixup! docs: Add streaming to api features,
5433,docs: try to improve health api doc terminology,
5434,Document streaming on service health endpoint,
5435,docs: Add streaming to api features,
5436,submatview: and Store integration test with stream backend,
5437,Migrate from GitHub HashiBot to GitHub Actions,GitHub HashiBot is being decommissioned. This migrates the crash issue labeling and waiting-reply label removal to GitHub Actions. The stale issue handling is not migrated as neither behavior appears to be actively in use.
5438,website: bump latest binary version to 1.9.6,
5439,"changelog: add entries for 1.8.11, 1.8.12, 1.9.6 and 1.10.0-beta3",
5440,Merge pull request #10333 from hashicorp/ks.website/updates-alert-banner,chore: updates alert banner
5441,Merge pull request #10355 from hashicorp/dnephin/stream-fix-topic-head-bug,stream: fix a bug with subscriptions and the latest item in the topic buffers.
5442,stream: remove bufferItem.NextLink,"Both NextLink and NextNoBlock had the same logic, with slightly different return values. By adding a bool return value (similar to map lookups) we can remove the duplicate method."
5443,generate a single debug file for a long duration capture (#10279)," debug: remove the CLI check for debug_enabled  The API allows collecting profiles even debug_enabled=false as long as ACLs are enabled. Remove this check from the CLI so that users do not need to set debug_enabled=true for no reason. Also: - fix the API client to return errors on non-200 status codes for debug   endpoints - improve the failure messages when pprof data can not be collected Co-Authored-By: Dhia Ayachi dhia@hashicorp.com  remove parallel test runs  parallel runs create a race condition that fail the debug tests   snapshot the timestamp at the beginning of the capture   timestamp used to create the capture sub folder is snapshot only at the beginning of the capture and reused for subsequent captures   capture append to the file if it already exist   Revert ""snapshot the timestamp at the beginning of the capture""   This reverts commit c2d03346   Refactor captureDynamic to extract capture logic for each item in a different func   snapshot the timestamp at the beginning of the capture   timestamp used to create the capture sub folder is snapshot only at the beginning of the capture and reused for subsequent captures   capture append to the file if it already exist   Revert ""snapshot the timestamp at the beginning of the capture""   This reverts commit c2d03346   Refactor captureDynamic to extract capture logic for each item in a different func   extract wait group outside the go routine to avoid a race condition   capture pprof in a separate go routine   perform a single capture for pprof data for the whole duration   add missing vendor dependency   add a change log and fix documentation to reflect the change   create function for timestamp dir creation and simplify error handling   use error groups and ticker to simplify interval capture loop   Logs, profile and traces are captured for the full duration. Metrics, Heap and Go routines are captured every interval   refactor Logs capture routine and add log capture specific test   improve error reporting when log test fail   change test duration to 1s   make time parsing in log line more robust   refactor log time format in a const   test on log line empty the earliest possible and return   Co-authored-by: Freddy freddygv@users.noreply.github.com   rename function to captureShortLived   more specific changelog   Co-authored-by: Paul Banks banks@banksco.de   update documentation to reflect current implementation   add test for behavior when invalid param is passed to the command   fix argument line in test   a more detailed description of the new behaviour   Co-authored-by: Paul Banks banks@banksco.de   print success right after the capture is done   remove an unnecessary error check   Co-authored-by: Daniel Nephin dnephin@hashicorp.com  upgraded github.com/google/pprof v0.0.0-20181206194817-3ea8567a2e57 => v0.0.0-20210601050228-01bbb1931b22  Co-authored-by: Daniel Nephin dnephin@hashicorp.com Co-authored-by: Freddy freddygv@users.noreply.github.com Co-authored-by: Paul Banks banks@banksco.de"
5444,docs: Improve ECS routing example nesting (#10316),
5445,fix monitor to only start the monitor in json format when requested (#10358),  fix monitor to only start the monitor in json format when requested   add release notes   add test to validate json format when requested 
5446,Docs for Unix Domain Sockets (#10252)," Docs for Unix Domain Sockets  There are a number of cases where a user might wish to either 1) expose a service through a Unix Domain Socket in the filesystem ('downstream') or 2) connect to an upstream service by a local unix domain socket (upstream). As of Consul (1.10-beta2) we've added new syntax and support to configure the Envoy proxy to support this To connect to a service via local Unix Domain Socket instead of a port, add local_bind_socket_path and optionally local_bind_socket_mode to the upstream config for a service:     upstreams = [       {          destination_name = ""service-1""          local_bind_socket_path = ""/tmp/socket_service_1""          local_bind_socket_mode = ""0700""      ...       }       ...     ] This will cause Envoy to create a socket with the path and mode provided, and connect that to service-1 The mode field is optional, and if omitted will use the default mode for Envoy. This is not applicable for abstract sockets. See https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/core/v3/address.proto#envoy-v3-api-msg-config-core-v3-pipe for details NOTE: These options conflict the local_bind_socket_port and local_bind_socket_address options. We can bind to an port or we can bind to a socket, but not both. To expose a service listening on a Unix Domain socket to the service mesh use either the 'socket_path' field in the service definition or the 'local_service_socket_path' field in the proxy definition. These fields are analogous to the 'port' and 'service_port' fields in their respective locations.     services {       name = ""service-2""       socket_path = ""/tmp/socket_service_2""       ...     } OR     proxy {       local_service_socket_path = ""/tmp/socket_service_2""       ...     } There is no mode field since the service is expected to create the socket it is listening on, not the Envoy proxy. Again, the socket_path and local_service_socket_path fields conflict with address/port and local_service_address/local_service_port configuration entries. Set up a simple service mesh with dummy services: socat -d UNIX-LISTEN:/tmp/downstream.sock,fork UNIX-CONNECT:/tmp/upstream.sock socat -v tcp-l:4444,fork exec:/bin/cat services {   name = ""sock_forwarder""   id = ""sock_forwarder.1""   socket_path = ""/tmp/downstream.sock""   connect {     sidecar_service {       proxy {     upstreams = [       {         destination_name = ""echo-service""         local_bind_socket_path = ""/tmp/upstream.sock""         config {           passive_health_check {         interval = ""10s""         max_failures = 42           }         }       }     ]       }     }   } } services {   name = ""echo-service""   port = 4444   connect = { sidecar_service {} } Kind = ""ingress-gateway"" Name = ""ingress-service"" Listeners = [  {    Port = 8080    Protocol = ""tcp""    Services = [      {        Name = ""sock_forwarder""      }    ]  } ] consul agent -dev -enable-script-checks -config-dir=./consul.d consul connect envoy -sidecar-for sock_forwarder.1 consul connect envoy -sidecar-for echo-service -admin-bind localhost:19001 consul config write ingress-gateway.hcl consul connect envoy -gateway=ingress -register -service ingress-service -address '{{ GetInterfaceIP ""eth0"" }}:8888' -admin-bind localhost:19002 netcat 127.0.0.1 4444 netcat 127.0.0.1 8080 Signed-off-by: Mark Anderson manderson@hashicorp.com  fixup Unix capitalization  Signed-off-by: Mark Anderson manderson@hashicorp.com  Update website/content/docs/connect/registration/service-registration.mdx  Co-authored-by: Blake Covarrubias blake@covarrubi.as  Provide examples in hcl and json  Signed-off-by: Mark Anderson manderson@hashicorp.com  Apply suggestions from code review  Co-authored-by: Blake Covarrubias blake@covarrubi.as  One more fixup for docs  Signed-off-by: Mark Anderson manderson@hashicorp.com Co-authored-by: Blake Covarrubias blake@covarrubi.as"
5447,rotate algolia api key (#10297),
5448,stream: fix a bug with creating a snapshot,The head of the topic buffer was being ignored when creating a snapshot. This commit fixes the bug by ensuring that the head of the topic buffer is included in the snapshot before handing it off to the subscription.
5449,Add license inspect command documentation and changelog (#10351),Also reformatted another changelog entry.
5450,Merge pull request #10348 from hashicorp/dnephin/fix-submatview-store-bug,submatview: fix a bug with Store.Get
5451,submatview: fix a bug with Store.Get,"When info.Timeout is 0, it should have no timeout. Previously it was using a 0 duration timeout which caused it to return without waiting. This bug was masked by using a timeout in the tests. Removing the timeout caused the tests to fail."
5452,Follow on to PR 10336 (#10343),There was some PR feedback that came in just after I merged that other PR. This addresses that feedback.
5453,Merge pull request #10338 from hashicorp/dnephin/fix-logging-indent,agent: remove leading whitespace from agent log lines
5454,usagemetrics: add cluster members to metrics API (#10340),This PR adds cluster members to the metrics API. The number of members per segment are reported as well as the total number of members. Tested by running a multi-node cluster locally and ensuring the numbers were correct. Also added unit test coverage to add the new expected gauges to existing test cases.
5455,Merge pull request #10336 from hashicorp/docs/licensing-updates,[Docs] Update documentation with information about v1.10 licensing changes.
5456,Add enterprise v1.10 specific upgrade notes.,
5457,Add licensing information to snapshot agent docs.,
5458,Add deprecation/removal notices regarding the APIs/CLI commands for licensing that are going away.,Co-authored-by: Freddy freddygv@users.noreply.github.com
5459,Update licensing docs for 1.10 licensing,
5460,Add licensing telemetry docs.,
5461,Add changelog,
5462,cmd: remove unnecessary GatedUi,"The intent of this struct was to prevent non-json output to stdout. With the previous cleanup, this can now be done by simply changing the stdout stream to io.Discard. This is just one example of why passing around io.Writers for the streams is better than the UI interface."
5463,cmd: move agent running message to logs,"Previously this line was mixed up with logging, which made the output quite ugly. Use the logger to output this message, instead of printing directly to stdout. This has the advantage that the message will be visible when json logs are enabled."
5464,agent: fix agent logging,Remove the leading whitespace on every log line. This was causing problems for a customer because their logging system was interpretting the logs as a single multi-line log.
5465,cmd: introduce a shim to expose Stdout/Stderr writers,"This will allow commands to do the right thing, and write to the proper output stream."
5466,cmd: remove unnecessary args to agent.New,"The version args are static and passed in from the caller. Instead read the static values in New. The shutdownCh was never closed, so did nothing. Remove it as a field and an arg."
5467,Merge pull request #10334 from hashicorp/dnephin/grpc-fix-resolver-data-race,grpc: fix resolver data race
5468,grpc: fix a data race by using a static resolver,"We have seen test flakes caused by 'concurrent map read and map write', and the race detector reports the problem as well (prevent us from running some tests with -race). The root of the problem is the grpc expects resolvers to be registered at init time before any requests are made, but we were using a separate resolver for each test. This commit introduces a resolver registry. The registry is registered as the single resolver for the consul scheme. Each test uses the Authority section of the target (instead of the scheme) to identify the resolver that should be used for the test. The scheme is used for lookup, which is why it can no longer be used as the unique key. This allows us to use a lock around the map of resolvers, preventing the data race."
5469,Fix broken link (#10335),
5470,[Website] WIP - Update Homepage (#10314),  Initial structure for updated homepage   Bring back    Add section stubs   Add ecosystem section   Add features section   Iron out features section   Add Learn Callout section   Copy updates   Better together copy   Add updated copy & swap assets   Remove comment & just add existing icon for now   Copy and asset tweaks   Remove unwanted copy   Process the codeblock   Add transparent img   Swap for transparent img   More transparent img   Use Learn cards pattern   Rearrange img and finishing padding touches 
5471,submatview: improve a couple comments,
5472,chore: updates alert banner — hashiconf,
5473,Merge pull request #10325 from hashicorp/docs/clarify-acl-set-agent-token-persistence,docs: Clarify set-agent-token token persistence behavior
5474,Merge pull request #10315 from hashicorp/ma/haxandmat-replace,Fix strings.Replace->strings.ReplaceAll
5475,Merge pull request #10324 from hashicorp/dnephin/fix-envoy-bootstrap-exec,envoy: fix deadlock when input is larger than named pipe buffer size
5476,make tests use a dummy node_name to avoid environment related failures (#10262),  fix tests to use a dummy nodeName and not fail when hostname is not a valid nodeName   remove conditional testing   add test when node name is invalid 
5477,envoy: improve comments,
5478,Merge pull request #9556 from hashicorp/dnephin/add-more-cache-key-completness-tests,structs: Add more cache key completeness tests
5479,docs: Clarify set-agent-token token persistence behavior,Clarify that tokens configured via set-agent-token will not be persisted if acl.enable_token_persistence is false.
5480,envoy: fix bootstrap deadlock caused by a full named pipe,"Normally the named pipe would buffer up to 64k, but in some cases when a soft limit is reached, they will start only buffering up to 4k. In either case, we should not deadlock. This commit changes the pipe-bootstrap command to first buffer all of stdin into the process, before trying to write it to the named pipe. This allows the process memory to act as the buffer, instead of the named pipe. Also changed the order of operations in makeBootstrapPipe. The new test added in this PR showed that simply buffering in the process memory was not enough to fix the issue. We also need to ensure that the pipe-bootstrap process is started before we try to write to its stdin. Otherwise the write will still block. Also set stdout/stderr on the subprocess, so that any errors are visible to the user."
5481,envoy: start timeout func after validation,This removes the need to check arg length in the timeout function.
5482,structs: fix cache keys,"So that requests are cached properly, and the cache does not return the wrong data for a request."
5483,structs: add two cache completeness tests types that implement cache.Request,
5484,structs: improve the interface of assertCacheInfoKeyIsComplete,
5485,structs: Add more cache key tests,
5486,docs: Fix agent token name under ACL Agent Token,Reference the correct name of the agent token in the ACL Agent Token section for the ACL System docs.
5487,Fix strings.Replace->strings.ReplaceAll,
5488,RPC Timeout/Retries account for blocking requests (#8978),
5489,ui: Fix broken link format in ECS install page,
5490,fix(website): update node version to latest LTS for website (#10312),
5491,Add note about new ECS ARN format to ECS docs (#10304), docs: Add note about ECS task ARN format to ECS docs
5492,Bump raft-autopilot version to the latest. (#10306),
5493,docs: Bump core downloads to beta3 (#10309),Make 1.10beta3 available on Downloads for consul.io
5494,auto-updated agent/uiserver/bindata_assetfs.go from commit 18190fb07,
5495,ui: Move intention description field (#10292),...from under the permissions widget to over the permissions widget
5496,debug: remove the CLI check for debug_enabled (#10273), debug: remove the CLI check for debug_enabled  The API allows collecting profiles even debug_enabled=false as long as ACLs are enabled. Remove this check from the CLI so that users do not need to set debug_enabled=true for no reason. Also: - fix the API client to return errors on non-200 status codes for debug   endpoints - improve the failure messages when pprof data can not be collected Co-Authored-By: Dhia Ayachi dhia@hashicorp.com  remove parallel test runs  parallel runs create a race condition that fail the debug tests  Add changelog  Co-authored-by: Daniel Nephin dnephin@hashicorp.com
5497,auto-updated agent/uiserver/bindata_assetfs.go from commit ddee7afbb,
5498,ui: Fixup prettier for scss files and run (#10296),  ui: Ensure prettier makes all our scss files pretty   Run prettier on all our scss files 
5499,changelog: add entry for network areas WAN config fix,
5500,build: ensure each tool is built separately (#10303),
5501,Ensure passthrough clusters can be created (#10301),
5502,Avoid adding original_dst filter when not needed (#10302),
5503,Add tech preview label (#10300),
5504,Consul ecs docs (#10288), ECS docs
5505,ui: Unix Domain Socket support (#10287),This commit adds UI support for Unix Domain Sockets for upstream and downstreams (see #9981 and #10252)
5506,ui: Support Route optional parameters/segments (#10212),Moves our URLs with 'optional namespace segment' into a separately abstracted 'optional URL segment' feature
5507,ui: Colocate old base components into our app/component folder (#10275),
5508,ui: Minor CSS tweaks (#10295),
5509,Add readme for network area implementation (#10289),Co-authored-by: Hans Hasselberg me@hans.io Co-authored-by: Hans Hasselberg me@hans.io
5510,Update Kubernetes docs to point to install pages. (#10293),Adds more clear indicators that the collections on the learn.hashicorp.com sites have specific instructions for single node deployments. Co-Authored by: soonoo qpseh2m7@gmail.com
5511,Merge pull request #10290 from hashicorp/docs-rename-enterprise,docs: rename enterprise to Consul enterprise
5512,Always set the Content-Type header when a body is present (#10204), Always set the Content-Type header when a body is present  Closes https://github.com/hashicorp/consul/issues/10011   Add Changelog entry   Add more Content-Type exceptions   Fix tests 
5513,Always set the Content-Type header when a body is present (#10204), Always set the Content-Type header when a body is present  Closes https://github.com/hashicorp/consul/issues/10011   Add Changelog entry   Add more Content-Type exceptions   Fix tests 
5514,Always set the Content-Type header when a body is present (#10204), Always set the Content-Type header when a body is present  Closes https://github.com/hashicorp/consul/issues/10011   Add Changelog entry   Add more Content-Type exceptions   Fix tests 
5515,Always set the Content-Type header when a body is present (#10204), Always set the Content-Type header when a body is present  Closes https://github.com/hashicorp/consul/issues/10011   Add Changelog entry   Add more Content-Type exceptions   Fix tests 
5516,ui: Create and use collapsible notices component (#10270),  Create and use collapsible notices   Refactor collapsible-notices   Split up the topology acceptance tests   Add acceptance tests for tproxy notices   Add component file   Adds additional TProxy notices tests   Adds conditional to only show collapsable if more than 2 notices are present   Adds changelog   Refactorting the conditonal for collapsing the notices   Renaming undefinedIntention to be notDefinedIntention   Refactor tests 
5517,ui: Create and use collapsible notices component (#10270),  Create and use collapsible notices   Refactor collapsible-notices   Split up the topology acceptance tests   Add acceptance tests for tproxy notices   Add component file   Adds additional TProxy notices tests   Adds conditional to only show collapsable if more than 2 notices are present   Adds changelog   Refactorting the conditonal for collapsing the notices   Renaming undefinedIntention to be notDefinedIntention   Refactor tests 
5518,Move some things around to allow for license updating via config reload,The bulk of this commit is moving the LeaderRoutineManager from the agent/consul package into its own package: lib/gort. It also got a renaming and its Start method now requires a context. Requiring that context required updating a whole bunch of other places in the code.
5519,upgrade golangci-lint to v1.40.1 (#10276),Also: fix linter issue detected with newer version
5520,docs: rename enterprise to Consul enterprise,
5521,Updating Consul Glossary with more industry standard terms (#10074),"  Update glossary.mdx   Update header to the first section to ""Consul Vocabulary"" since these are the terms used in the context of Consul conversations.  Kept the header ""Consul Glossary"" since these are the terms useful for practitioners in the consul space. Removed interlinking to terms on the same page.  Co-authored-by: Hans Hasselberg me@hans.io Co-authored-by: Swarna Podila swarnap@users.noreply.github.com"
5522,hcs-1936: Prepare for adding license auto-retrieval to auto-config in enterprise,
5523,Preparation for changing where license management is done.,
5524,auto-updated agent/uiserver/bindata_assetfs.go from commit 600f85753,
5525,ui: Add docs for AppView (#10265),"  ui: change coloring of secondary navigation elements   Remove top border, this was probably from older designs/iterations   ui: Move app-view styles into components also...   Remove dead %app-view-content-error   Remove TabNav border overwriting   Bring into line with our 'project standard' class/attributes pattern   Add docs for AppView "
5526,auto-updated agent/uiserver/bindata_assetfs.go from commit dd4a66808,
5527,ui: change coloring of secondary navigation elements (#10259),
5528,docs: fix Amazon EKS service name (#10280),
5529,ci: allow bash_env in load-test (#10278),  setup bash shell usage for load-test   add cluster_name tf var 
5530,Merge pull request #10272 from hashicorp/dnephin/backport-namespace-license-fix,Backport some ent changes for serf tags
5531,Deprecate API driven licensing.,The two methods in the API client to Put or Reset a license will now always return an error.
5532,Docs: Add link for new Cisco TF module (#10268),
5533,Add OSS bits for supporting specifying the enterprise license via config,
5534,Merge pull request #9309 from hashicorp/docs/example-snapshot-agent-policy,docs: Add example ACL policy for snapshot agent
5535,docs: Add example ACL policy for snapshot agent,Co-Authored-By: Blake Covarrubias blake@covarrubi.as
5536,Add changelog,
5537,Refactor of serf feature flag tags.,"This refactor is to make it easier to see how serf feature flags are encoded as serf tags, and where those feature flags are read.  use constants for both the prefix and feature flag name. A constant   makes it much easier for an IDE to locate the read and write location. isolate the feature-flag encoding logic in the metadata package, so   that the feature flag prefix can be unexported. Only expose a function   for encoding the flags into tags. This logic is now next to the logic   which reads the tags. remove the duplicate addEnterpriseSerfTags functions. Both Client   and Server structs had the same implementation. And neither   implementation needed the method receiver."
5538,Fix doc note since we switched authorization mechanism in 1.9 (#10266),
5539,ui: Adds QUnit toggle bookmarklet to our docs (#10269),
5540,docs: update register check docs (closes #6635) (#10261),Update register check documentation clarify that Id returns as CheckId in the response Co-Authored-By: Shaker Islam shaqq@users.noreply.github.com Co-authored-by: Shaker Islam shaqq@users.noreply.github.com
5541,Merge pull request #10260 from hashicorp/ci/bump-provider-versions-load-test,ci: update terraform provider versions to within constraints
5542,update terraform provider versions to within constraints,
5543,Merge pull request #10253 from hashicorp/dnephin/fix-test-flake,redirecttraffic: fix a flaky test
5544,Merge pull request #10200 from hashicorp/dnephin/backport-audit-log-config-changes,config: backport audit log config changes from enterprise
5545,auto-updated agent/uiserver/bindata_assetfs.go from commit 39302041e,
5546,ui: Miscellaneous Lock Session fixes (#10225),
5547,chore: 'overview' nav item links to home page (#10255),
5548,Merge pull request #8812 from jjshanks/GH-8728,GH-8728 add raft default values
5549,add changelog,
5550,GH-8728 add raft default values,
5551,redirecttraffic: fix a flaky test,"https://app.circleci.com/pipelines/github/hashicorp/consul-enterprise/6408/workflows/e90b1140-daa2-458f-8197-d1821e3693e3/jobs/94694/tests#failed-test-0 The ExcludeInboundPorts can be in a different order sometimes, although I'm not sure how. Also removes t.Parallel. We should only need to use t.Parallel in large packages with many slow tests. In this case there is only a single slow test so we don't get any benefit. Also add struct field names to the testcases list, so that it is easier to see what each value is doing, and to make it easier to add new fields in the future."
5552,auto-updated agent/uiserver/bindata_assetfs.go from commit 8301e79c5,
5553,ui: Bump node to v14 (#10238),
5554,Merge pull request #10251 from hashicorp/br.hc-banner,Updates AlertBanner for HashiConf EU
5555,Updates AlertBanner for HashiConf EU,
5556,Merge pull request #10230 from hashicorp/consul-documentation-update,docs: updated the standard upgrade process
5557,chore: removed changelog file as not needed for documentation update,
5558,chore: added .changelog txt file,
5559,Merge branch 'master' of github.com:hashicorp/consul into consul-documentation-update,
5560,auto-updated agent/uiserver/bindata_assetfs.go from commit d1bbe0895,
5561,ui: Use babel plugin to strip calls to runInDebug (#10237),
5562,xds: emit a labeled gauge of connected xDS streams by version (#10243),Fixes #10099
5563,server: ensure that central service config flattening properly resets the state each time (#10239),"The prior solution to call reply.Reset() aged poorly since newer fields were added to the reply, but not added to Reset() leading serial blocking query loops on the server to blend replies. This could manifest as a service-defaults protocol change from default=>http not reverting back to default after the config entry reponsible was deleted."
5564,agent: ensure we hash the non-deprecated upstream fields on ServiceConfigRequest (#10240),
5565,Add changelog entry for network area timeout updates (#10241),
5566,Update k8s fed docs to clarify role of acl token (#10233),
5567,auto-updated agent/uiserver/bindata_assetfs.go from commit 04bd57617,
5568,ui: Serf Health Check warning notice (#10194),"When the Consul serf health check is failing, this means that the health checks registered with the agent may no longer be correct. Therefore we show a notice to the user when we detect that the serf health check is failing both for the health check listing for nodes and for service instances. There were a few little things we fixed up whilst we were here:  We use our @replace decorator to replace an empty Type with serf in the model. We noticed that ServiceTags can be null, so we replace that with an empty array. We added docs for both our Notice component and the Consul::HealthCheck::List component. Notice now defaults to @type=info."
5569,correct website documentation typo,
5570,Save exposed ports in agent's store and expose them via API (#10173), Save exposed HTTP or GRPC ports to the agent's store Add those the health checks API so we can retrieve them from the API Change redirect-traffic command to also exclude those ports from inbound traffic redirection when expose.checks is set to true.
5571,Merge pull request #10217 from hashicorp/dnephin/test-flakes,testing: attempt to fix some test flakes
5572,"connect: update supported envoy versions to 1.18.3, 1.17.3, 1.16.4, and 1.15.5 (#10231)",
5573,docs: updated the standard upgrade process,"Added a cross-reference link in the upgrade guides.  This resource https://www.consul.io/docs/upgrading/instructions/general-process including specific-version guides for breaking changes and a more detailed upgrade process, but it's not mentioned in the  https://www.consul.io/docs/upgrading#standard-upgrade overview page."
5574,Merge pull request #10226 from hashicorp/pcmccarron-patch-1,Update network-infrastructure-automation.jsx
5575,website: add /form redirect (#10227),
5576,Merge pull request #9995 from tarat44/fix-close-h2ping-client-connections,Add graceful shutdown of client connection and WaitGroup to H2PING
5577,Update network-infrastructure-automation.jsx,
5578,auto-updated agent/uiserver/bindata_assetfs.go from commit ecbeaa87c,
5579,ui: Add conditionals to Lock Session list items (#10121),  Add conditionals to Lock Session list items   Add changelog   Show ID in details if there is a name to go in title   Add copy-button if ID is in the title   Update TTL conditional   Update .changelog/10121.txt   Co-authored-by: John Cowen johncowen@users.noreply.github.com Co-authored-by: John Cowen johncowen@users.noreply.github.com
5580,Merge pull request #10219 from hashicorp/dnephin/connect-docs,docs: update notice on connect built-in proxy and native app integration
5581,docs: document the current state of built-in and native,
5582,Merge pull request #10188 from hashicorp/dnephin/dont-persist-agent-tokens,agent/local: do not persist the agent or user token
5583,Merge pull request #10214 from hashicorp/watsonian/raft-protocol-upgrade-note,Flesh out Raft Protocol Support note
5584,testing: don't run t.Parallel in a goroutine,TestACLEndpoint_Login_with_TokenLocality was reguardly being reported as failed even though it was not failing. I took another look and I suspect it is because t.Parllel was being called in a goroutine. This would lead to strange behaviour which apparently confused the 'go test' runner.
5585,ci: update gotestsum,To pickup this fix: https://github.com/gotestyourself/gotestsum/commit/e91cbd912ad379aebd1a4bec7643cc9c078869a1
5586,Fix some test flakes," return errors in TestAgent.Start so that the retry works correctly remove duplicate logging, the error is returned already add a missing t.Helper() to retry.Run properly set a.Agent to nil so that subsequent retry attempts will actually try to start"
5587,Flesh out Raft Protocol Support note,
5588,Retroactively update changelog to note metrics contention fixes (#10184),  Retroactively update changelog to note metrics contention fixes   Update CHANGELOG.md 
5589,auto-updated agent/uiserver/bindata_assetfs.go from commit 90d1a307e,
5590,ui: Fix nspace spacing issue (#10157),"This fixes the spacing bug in nspaces only by only showing Description if the namespace has one, and removing the extra 2 pixel margin of dds for when dts aren't rendered/don't exist."
5591,website: bump beta callout on downloads page to 1.10.0-beta2 (#10202),
5592,Merge pull request #10203 from hashicorp/br.hashistack-tweak,"Adjust order, remove titles, on HashiStack section"
5593,auto-updated agent/uiserver/bindata_assetfs.go from commit 0e4db3f24,
5594,ui: Adds ability to show a 'partial' list in list-collections (#10174),"  ui: Add support for showing partial lists in ListCollection   Add CSS for partial 'View more' button, and move all CSS to /components   Enable partial view for intention permissions "
5595,ui: Remove top border from Consul::AuthMethod::List (#10195),
5596,auto-updated agent/uiserver/bindata_assetfs.go from commit e3f9a0f8e,
5597,ui: Loader amends/improvements (#10181),  ui: Loader amends/improvements   Create a JS compatible template only 'glimmer' component so we can use it with or without glimmer.  Add a set of rose colors. Animate the brand loader to keep it centered when the side navigation appears. Tweak the color of Consul::Loader to use a 'rose' color. Move everything loader related to the app/components/ folder and add docs.
5598,auto-updated agent/uiserver/bindata_assetfs.go from commit 5400c81e2,
5599,ui: [BUGFIX] De-duplicate Tag rendering (#10186),  Add some tests for duplicated and non-duplicated tags   Ensure tags get de-duped and add docs   Update docs to include info on the recursive-ness 
5600,Adjust order & remove titles on HashiStack section,
5601,agent/local: only fallback to agent token for deletes,Fallback to the default user token for synching registrations.
5602,Add changelog,
5603,config: handled deprecated config key with a warning,
5604,Backport audit log config changes from enterprise,
5605,changelog: add 1.10.0-beta2 (#10198),and add two missed entries from 1.10.0-beta1
5606,docs/nia: simplify api and cli url paths (#10199),
5607,Merge pull request #10075 from hashicorp/dnephin/handle-raft-apply-errors,rpc: some cleanup of canRetry and ForwardRPC
5608,Merge pull request #10187 from hashicorp/fixup/ent-tproxy-test,
5609,Updates the homepage hero CTA (#10192),Plug in callouts content Most styles for the callout blade Re-export Consul Stack image Update icons Misc content tweaks Optimize mobile for the consul stack icon Better alignment Make full CTA box clickable
5610,Merge pull request #10064 from hashicorp/docs-fix-namespace-api-descriptions,docs: fix api-docs namespace descriptions
5611,K8s docs: Manual join: add note that kubeconfig not required (#9998),"Per Consul PM, kubeconfig is not required for manual join. I believe this should be clarified in the docs as the current wording refers to the auto join steps above which state kubeconfig is required."
5612,docs: fix api-docs namespace descriptions,Looks like some copy/paste from ACL docs.
5613,Merge pull request #10177 from hashicorp/dnephin/config-entry-remove-fields,docs: remove name field from Mesh config entry
5614,Merge pull request #10047 from hashicorp/dnephin/config-entry-validate,state: reduce arguments to validateProposedConfigEntryInServiceGraph
5615,Merge pull request #10189 from hashicorp/dnephin/http-api-health-query-meta,http: set consistency header properly for health endpoint
5616,Merge pull request #10165 from hashicorp/dnephin/improve-cert-pool-cmp,testing: slightly better comparison for x509.CertPool
5617,Update website/content/commands/config/delete.mdx,Co-authored-by: Jono Sosulska 42216911+jsosulska@users.noreply.github.com
5618,state: reduce arguments to validateProposedConfigEntryInServiceGraph,
5619,testing: slightly better comparison for x509.CertPool,
5620,website: support hidden pages in nav-data (#10180),"  website: bump to docs-page prerelease with hidden page support   website: replace hidden pages hot fix for /docs, /api-docs, and /commmands   website: remove unused files for old hidden pages hotfix   website: bump to stable docs-page, w next-mdx-remote bump   website: bump to latest markdown-page "
5621,fix failing integration tests,The new IDs include a leading slash for the partition ID section
5622,rpc: add tests for canRetry,"Also accept an RPCInfo instead of interface{}. Accepting an interface lead to a bug where the caller was expecting the arg to be the response when in fact it was always passed the request. By accepting RPCInfo it should indicate that this is actually the request value. One caller of canRetry already passed an RPCInfo, the second handles the type assertion before calling canRetry."
5623,rpc: remove unnecessary arg to ForwardRPC,
5624,api: fix mesh config entry tests for default namespace,
5625,docs: remove name field from Mesh config entry,"Also document the name of these config entries in the API docs, so that users know how to query for them. And fix the name of mesh on the index page."
5626,http: set consistency header properly,"A recent change in 1.9.x inverted the order of these two lines, which caused the X-Consul-Effective-Consistency header to be missing for the servie health endpoints"
5627,agent/local: do not persist the agent tokens,Only default to the user token and agent token for the sync. Change the exported methods to only return the stored tokens associated with a specific check or service.
5628,ci: add a verify CI job to ensure CI checks are run (#10179),This workflow will be added as a branch protection rule in github.
5629,auto-updated agent/uiserver/bindata_assetfs.go from commit 9801551f7,
5630,ui: add data-enterprise-logo to logo svg for enterprise,
5631,Fix config entry test for enterprise meta,
5632,Ensure entmeta is encoded in test correlationID,
5633,Merge pull request #10185 from hashicorp/ma/uds_fixups,Fixup UDS failing tests.
5634,Fixup more structs_test,Signed-off-by: Mark Anderson manderson@hashicorp.com
5635,fix protobufs for socketpath and re-mogrify,
5636,Fixup checksums for tests,Signed-off-by: Mark Anderson manderson@hashicorp.com
5637,Fixup filtering tests,"Missed annotations for SocketPath, LocalSocketPath, LocalServiceSocketPath Signed-off-by: Mark Anderson manderson@hashicorp.com"
5638,Fixup agent/config tests,Signed-off-by: Mark Anderson manderson@hashicorp.com
5639,refactor(downloads): source asset from mktg-logos (#10178),
5640,Merge pull request #10155 from hashicorp/dnephin/config-entry-remove-fields,config-entry: remove Kind and Name field from Mesh config entry
5641,config-entries: add a test for the API client,"Also fixes a bug with listing kind=mesh config entries. ValidateConfigEntryKind was only being used by the List endpoint, and was yet another place where we have to enumerate all the kinds. This commit removes ValidateConfigEntryKind and uses MakeConfigEntry instead. This change removes the need to maintain two separate functions at the cost of creating an instance of the config entry which will be thrown away immediately."
5642,Merge pull request #9981 from hashicorp/ma/uds_upstreams,Unix Domain Socket support for upstreams and downstreams
5643,Add changelog entry,Signed-off-by: Mark Anderson manderson@hashicorp.com
5644,Add simple test for downstream sockets,Signed-off-by: Mark Anderson manderson@hashicorp.com
5645,Add support for downstreams,"Enhance config by adding SocketPath and LocalSocketPath config values Supports syntax of the form: services {   name = ""sock_forwarder""   id = ""sock_forwarder.1""   socket_path = ""/tmp/downstream_3.sock""   connect {     sidecar_service {       proxy {     local_service_socket_path = ""/tmp/downstream.sock""       }     }   } } Signed-off-by: Mark Anderson manderson@hashicorp.com"
5646,Add tests for xds/listeners,Signed-off-by: Mark Anderson manderson@hashicorp.com
5647,Convert mode to string representation,Signed-off-by: Mark Anderson manderson@hashicorp.com
5648,Continue working through proxy and agent,"Rework/listeners, rename makeListener Refactor, tests pass Signed-off-by: Mark Anderson manderson@hashicorp.com"
5649,First changes for unix domain sockets upstreams,"Start making structure changes to support unix domain socket address for upstreams upstreams = [   {     destination_name = ""echo-service""     local_bind_socket_path = ""/tmp/upstream.sock""     config {       passive_health_check {     interval = ""10s""     max_failures = 42       }     }   }  Signed-off-by: Mark Anderson manderson@hashicorp.com"
5650,Merge pull request #10161 from hashicorp/dnephin/update-deps,Update a couple dependencies
5651,Add changelog,
5652,lint: fix warning by removing reference to deprecated interface,
5653,Update a couple dependencies,To pickup bug fixes
5654,Merge pull request #10167 from hashicorp/dnephin/ci-cherry-pick-on-release-branch,ci: allow cherry-picking a manual backport to other release branches
5655,auto-updated agent/uiserver/bindata_assetfs.go from commit 07e11f32e,
5656,ui: Remove extra nspace value from service upstreams (#10152), ui: Remove extra nspace value from service upstreams
5657,auto-updated agent/uiserver/bindata_assetfs.go from commit fc7fe23b4,
5658,ui: Fix text search for upstream instances (#10151),  ui: Fix text search for upstream instances   Clean up predicates for other model types   Add some docs around DataCollection and searching   Enable UI Engineering Docs for our preview sites   Use debug CSS in dev and staging 
5659,ui: Adds CRD popover 'informed action' for intentions managed by CRDs (#10100), ui: Adds CRD popover 'informed action' for intentions add via CRDs
5660,Fixup discovery chain handling in transparent mode (#10168),"Co-authored-by: R.B. Boyer 4903+rboyer@users.noreply.github.com Previously we would associate the address of a discovery chain target with the discovery chain's filter chain. This was broken for a few reasons:   If the upstream is a virtual service, the client proxy has no way of dialing it because virtual services are not targets of their discovery chains. The targets are distinct services. This is addressed by watching the endpoints of all upstream services, not just their discovery chain targets.   If multiple discovery chains resolve to the same target, that would lead to multiple filter chains attempting to match on the target's virtual IP. This is addressed by only matching on the upstream's virtual IP.   NOTE: this implementation requires an intention to the redirecting virtual service and not just to the final destination. This is how we can know that the virtual service is an upstream to watch. A later PR will look into traversing discovery chains when computing upstreams so that intentions are only required to the discovery chain targets."
5661,Make Raft trailing logs and snapshot timing reloadable (#10129),  WIP reloadable raft config   Pre-define new raft gauges   Update go-metrics to change gauge reset behaviour   Update raft to pull in new metric and reloadable config   Add snapshot persistance timing and installSnapshot to our 'protected' list as they can be infrequent but are important   Update telemetry docs   Update config and telemetry docs   Add note to oldestLogAge on when it is visible   Add changelog entry   Update website/content/docs/agent/options.mdx   Co-authored-by: Matt Keeler mkeeler@users.noreply.github.com Co-authored-by: Matt Keeler mkeeler@users.noreply.github.com
5662,Give descriptive error if auth method not found (#10163)," Give descriptive error if auth method not found  Previously during a consul login -method=blah, if the auth method was not found, the error returned would be ""ACL not found"". This is potentially confusing because there may be many different ACLs involved in a login: the ACL of the Consul client, perhaps the binding rule or the auth method. Now the error will be ""auth method blah not found"", which is much easier to debug."
5663,Only consider virtual IPs for transparent proxies (#10162),"Initially we were loading every potential upstream address into Envoy and then routing traffic to the logical upstream service. The downside of this behavior is that traffic meant to go to a specific instance would be load balanced across ALL instances. Traffic to specific instance IPs should be forwarded to the original destination and if it's a destination in the mesh then we should ensure the appropriate certificates are used. This PR makes transparent proxying a Kubernetes-only feature for now since support for other environments requires generating virtual IPs, and Consul does not do that at the moment."
5664,ci: allow cherry-picking a manual backport to other release branches,"If an automatic backport fails to more than one release branch we need to crate a PR to backport it. So far we've had to create a backport PR for each target release branch. With this change, we may be able to create only a single PR, and then run the backport automation to cherry-pick it into other release branches. The idea is that if a change introduced in version n-1 caused a conflict, and there are no other changes, then the backport automation should be able to use the same commit for version n-2 and n-3."
5665,[Assembly]: Website Branding Refresh (#9884),"  style: update gray brand colors   style: update brand colors   chore: upgrades base platform deps   style: updates learn callouts label color   style: icons to flat consul primary color   style: errand link styles   refactor(home): use react-learn-callout   chore; adds ts config, upgrades components   chore: upgrade deps   chore: upgrade to latest component styles chore: upgrades nextjs-scripts   chore: fix-router   update deps, add new downloads page   chore: upgrade to stable deps   chore: use npm 7   style: home callouts body copy to gray-2   chore: upgrade hashi-stack-menu   style: home feature icons update   chore: upgrade deps body copy colors   chore: upgrades alert banner   feat: updates favicon   style(downloads): adds pre-release and release candidate styles   fix(home): adds right padding to quote   content(home): swap assets   content(uses-cases): updates assets   chore: removes use cases icon override   content(use-cases): swap out svgs for pngs   content: copies asset   trying again with this asset   try putting asset in public   content(use-cases): updates mercedes case study aseset   chore: upgrades product download page prerelease   chore: updates product download page to stable   chore: updates favicon path   Co-authored-by: Jeff Escalante jescalan@users.noreply.github.com"
5666,auto-updated agent/uiserver/bindata_assetfs.go from commit 211bc824a,
5667,Update brand assets (#10081),"  Update header logo and inline icon   Update full logos + layout on loading screen   Update favicon assets and strategy  Switches to serve an ico file alongside an SVG file  Introduces an apple-touch-icon   Removes unused favicon/meta assets   Changelog item for ui   Create component for logo   Simplify logo component, set brand color   Fix docs loading state CSS issue "
5668,docs(discovery/service): Clarify multiple service definitions,"Be more explicit that the definition of multiple services only works in config files, not using the HTTP API. Ref: https://discuss.hashicorp.com/t/register-multiple-services-via-put-request/"
5669,Merge pull request #10149 from hashicorp/dnephin/config-use-streaming-backend-defualt-true,config: default UseStreamingBackend to true
5670,dev: adding a make target to regenerate envoy golden files (#10158),
5671,create separate function with its own context to shutdown http2 client conn in h2ping check,
5672,config-entry: use custom MarshalJSON for mesh type,So that the Kind field is added to the JSON object.
5673,config-entry: remove Kind and Name field from Mesh config entry,No config entry needs a Kind field. It is only used to determine the Go type to target. As we introduce new config entries (like this one) we can remove the kind field and have the GetKind method return the single supported value. In this case (similar to proxy-defaults) the Name field is also unnecessary. We always use the same value. So we can omit the name field entirely.
5674,"connect: update supported envoy versions to 1.18.2, 1.17.2, 1.16.3, and 1.15.4 (#10101)","The only thing that needed fixing up pertained to this section of the 1.18.x release notes:  grpc_stats: the default value for stats_for_all_methods is switched from true to false, in order to avoid possible memory exhaustion due to an untrusted downstream sending a large number of unique method names. The previous default value was deprecated in version 1.14.0. This only changes the behavior when the value is not set. The previous behavior can be used by setting the value to true. This behavior change by be overridden by setting runtime feature envoy.deprecated_features.grpc_stats_filter_enable_stats_for_all_methods_by_default.  For now to maintain status-quo I'm explicitly setting stats_for_all_methods=true in all versions to avoid relying upon the default. Additionally the naming of the emitted metrics for these gRPC requests changed slightly so the integration test assertions for case-grpc needed adjusting."
5675,xds: ensure that all envoyproxy/go-control-plane protobuf symbols are linked into the final binary (#10131),"This ensures that if someone does include some extension Consul does not currently make use of, that extension is actually usable. Without linking these envoy protobufs into the main binary it can't round trip the escape hatches to send them down to envoy. Whenenver the go-control-plane library is upgraded next we just have to re-run 'make envoy-library'."
5676,Support Incremental xDS mode (#9855),"This adds support for the Incremental xDS protocol when using xDS v3. This is best reviewed commit-by-commit and will not be squashed when merged. Union of all commit messages follows to give an overarching summary: xds: exclusively support incremental xDS when using xDS v3 Attempts to use SoTW via v3 will fail, much like attempts to use incremental via v2 will fail. Work around a strange older envoy behavior involving empty CDS responses over incremental xDS. xds: various cleanups and refactors that don't strictly concern the addition of incremental xDS support Dissolve the connectionInfo struct in favor of per-connection ResourceGenerators instead. Do a better job of ensuring the xds code uses a well configured logger that accurately describes the connected client. xds: pull out checkStreamACLs method in advance of a later commit xds: rewrite SoTW xDS protocol tests to use protobufs rather than hand-rolled json strings In the test we very lightly reuse some of the more boring protobuf construction helper code that is also technically under test. The important thing of the protocol tests is testing the protocol. The actual inputs and outputs are largely already handled by the xds golden output tests now so these protocol tests don't have to do double-duty. This also updates the SoTW protocol test to exclusively use xDS v2 which is the only variant of SoTW that will be supported in Consul 1.10. xds: default xds.Server.AuthCheckFrequency at use-time instead of construction-time"
5677,make h2ping changelog entry conform with changelog template (#10111),LGTM!
5678,Improve doc: add note about address validation (#10123), Update website/content/docs/discovery/services.mdx with address field behavior.  Co-authored-by: Jono Sosulska 42216911+jsosulska@users.noreply.github.com Co-authored-by: Jono Sosulska 42216911+jsosulska@users.noreply.github.com
5679,Implement traffic redirection exclusion based on proxy config and user-provided values (#10134)," Use proxy outbound port from TransparentProxyConfig if provided If -proxy-id is provided to the redirect-traffic command, exclude any listener ports   from inbound traffic redirection. This includes envoy_prometheus_bind_addr,   envoy_stats_bind_addr, and the ListenerPort from the Expose configuration. Allow users to provide additional inbound and outbound ports, outbound CIDRs   and additional user IDs to be excluded from traffic redirection.   This affects both the traffic-redirect command and the iptables SDK package."
5680,Add changelog,
5681,auto-updated agent/uiserver/bindata_assetfs.go from commit 5d89ba031,
5682,ui: Add a max height and scroll to the intention perm header lists (#10128),
5683,Rename cluster config files to mesh as well (#10148),
5684,config: default UseStreamingBackend to true,
5685,"Rename ""cluster"" config entry to ""mesh"" (#10127)","This config entry is being renamed primarily because in k8s the name cluster could be confusing given that the config entry applies across federated datacenters. Additionally, this config entry will only apply to Consul as a service mesh, so the more generic ""cluster"" name is not needed."
5686,Merge pull request #10146 from hashicorp/dnephin/connect-proxy-test-deadlock,connect/proxy: fix a few problems with tests
5687,Merge pull request #10112 from hashicorp/dnephin/remove-streaming-from-cache,streaming: replace agent/cache with submatview.Store
5688,connect/proxy: fix a number of problems with Listener,"We noticed that TestUpstreamListener would deadlock sometimes when run with the race detector. While debugging this issue I found and fixed the following problems.  the net.Listener was not being closed properly when Listener.Stop was    called. This caused the Listener.Serve goroutine to run forever.    Fixed by storing a reference to net.Listener and closing it properly    when Listener.Stop is called. call connWG.Add in the correct place. WaitGroup.Add must be called    before starting a goroutine, not from inside the goroutine. Set metrics config EnableRuntimeMetrics to false so that we don't    start a background goroutine in each test for no reason. There is no    way to shutdown this goroutine, and it was an added distraction while    debugging these timeouts. two tests were calling require.NoError from a goroutine.    require.NoError calls t.FailNow, which MUST be called from the main    test goroutine. Instead use t.Errorf, which can be called from other    goroutines and will still fail the test. assertCurrentGaugeValue wass breaking out of a for loop, which    would cause the RWMutex.RUnlock to be missed. Fixed by calling    unlock before break.  The core issue of a deadlock  was fixed by https://github.com/armon/go-metrics/pull/124."
5689,remove Codecov from CI runs (#10145),
5690,ui: Add TProxy Mode notice banner to service instance Upstreams tab (#10136),
5691,connect/proxy: remove t.Parallel from tests,"These tests run in under 10ms, t.Parallel provides no value and makes debuging failures more difficult."
5692,submatview: fix godoc and comment typos,Co-authored-by: Paul Banks banks@banksco.de
5693,ui: Update not-defined intention popover and banner (#10133),
5694,ui: Update conditional for topology empty state (#10124),
5695,ui: Fix empty SVG height to prevent service mesh from breaking when there are no upstreams (#10122),
5696,auto-updated agent/uiserver/bindata_assetfs.go from commit 345765f76,
5697,ui: Adds human formatting to nanosecond based session durations (#10062), ui: Adds human formatting to nanosecond based session durations
5698,Add changelog,
5699,submatview: avoid sorting results unnecessarily,"Previous getFromView would call view.Result when the result may not have been returned (because the index is updated past the minIndex. This would allocate a slice and sort it for no reason, because the values would never be returned. Fix this by re-ordering the operations in getFromView. The test changes in this commit were an attempt to cover the case where an update is received but the index does not exceed the minIndex."
5700,submatview: only return materializer from getEntry,"Also rename it to readEntry now that it doesn't return the entire entry. Based on feedback in PR review, the full entry is not used by the caller, and accessing the fields wouldn't be safe outside the lock, so it is safer to return only the Materializer"
5701,submatview: godoc,
5702,rpcclient/health: convert tests to the new submatview.Store interface,Also fixes a minor data race in Materializer. Capture the error before releasing the lock.
5703,agent: fix data race in tests caused by grpc log init,"grpclog.SetLoggerV2 is meant to be called only once before any gRPC requests are received, but each test that uses TestAgent will call NewBaseDeps again. Use a sync.Once to prevent the grpc logging from being re-initialized by each test. This will mean that a test can't use a fake logger to capture logs from the gRPC server."
5704,submatview: fix two flaky tests,These tests can flake when we get a notification for an earlier event. Retry the read from update channel a few times to make sure we get the event we expect.
5705,sdk/retry: support ending the iteration early,"I've found this feature to be very useful in https://pkg.go.dev/gotest.tools/v3/poll#WaitOn I have encountered a few cases where I wanted that same support, so this commit adds it."
5706,sdk/retry: remove the need to pass args to NextOr,
5707,rpcclient:health: fix a data race and flake in tests,"Split the TestStreamingClient into the two logical components the real client uses. This allows us to test multiple clients properly. Previously writing of ctx from multiple Subscribe calls was showing a data race. Once this was fixed a test started to fail because the request had to be made with a greater index, so that the store.Get call did not return immediately."
5708,rpcclient/health: fix data race in a test,The idleTTL was being written and read concurrently. Instead move the idleTTL to a struct field so that when one test patches the TTL it does not impact others. The background goroutines for the store can outlive a test because context cancellation is async.
5709,rpcclient: close the grpc.ClientConn on shutdown,
5710,health: create health.Client in Agent.New,
5711,rpcclient/health: move all backend routing logic to client,
5712,health: use blocking queries for near query parameter,
5713,connect: do not set QuerySource.Node,"Setting this field to a value is equivalent to using the 'near' query paramter. The intent is to sort the results by proximity to the node requesting them. However with connect we send the results to envoy, which doesn't care about the order, so setting this field is increasing the work performed for no gain. It is necessary to unset this field now because we would like connect to use streaming, but streaming does not support sorting by proximity."
5714,submatview: move error return to NewMaterializer,"So that we don't have to create views ahead of time, when we will never use that view."
5715,rpcclient/health: integrate submatview.Store into rpcclient/health,
5716,rpcclient: move streaming cache tests,
5717,submatview: test Store.Run,
5718,submatview: test store with Get and Notify calls together,
5719,submatview: more test cases for Store.Get,And simplify the return value by using a Result type.
5720,submatview: reduce the getFromView implementation,"Remove View.Result error return value, it was always nil, and seems like it will likely always remain nill since it is simply reading a stored value. Also replace some cache types with local types."
5721,submatview: track requests instead of notifiers,"And only start expiration time when the last request ends. This makes tracking expiry simpler, and ensures that no entry can be expired while there are active requests."
5722,submatview: set up expiry of materializers,
5723,submatview: setup testing structure,
5724,submatview: rough outline of the Get and Notify methods.,
5725,submatview: setup the interface for the store,
5726,Fix up changelog for 10002 (#10130),
5727,website: update readme (#10078),"  website: bump to latest nextjs-scripts prerelease   website: run generate:readme to update readme blocks   website: revert bump to nextjs-scripts, deferred "
5728,ui: Splitting up the translations file into folder structure (#10093),
5729,Add prometheus guage definitions for replication metrics. (#10109),
5730,Update changelog and add telemetry docs (#10107),
5731,Fix panic bug in snapshot inspect (#10091),  Fix panic bug in snapshot inspect   Add changelog entry   Update .changelog/10091.txt   Undo bad GitHub UI merge   Undo bad GitHub UI merge 
5732,test: switch envoy integration tests to use pkill instead of ps+grep+awk+kill (#10097),
5733,CLI: Allow snapshot inspect to work on internal raft snapshots directly. (#10089),  CLI: Add support for reading internal raft snapshots to snapshot inspect   Add snapshot inspect test for raw state files   Add changelog entry   Update .changelog/10089.txt 
5734,website: resolve unlinked content (#10087),  website: add back unlinked pages to match previous state   website: add unlinked content check   website: add hidden nav-data to unlinked content check 
5735,Merge pull request #10085 from hashicorp/dnephin/ttlcache-never-decrease-expiry,lib/ttlcache: never decrease the expiry on update
5736,Merge pull request #10086 from hashicorp/dnephin/remove-goroutine-from-retry-run,sdk/retry: a few small debug improvements
5737,Merge pull request #10094 from hashicorp/update-fingerprint,updating fingerprint
5738,Add replication metrics (#10073),
5739,updating fingerprint,
5740,auto-updated agent/uiserver/bindata_assetfs.go from commit 7a095e7d2,
5741,ui: Vertically stack methods listing in the L7 intentions form (#10052), ui: Vertically stack methods listing in the L7 intentions form
5742,ui: Add Admin Partition feature flag (#10051)," ui: Add Admin Partition feature flag  This adds a PartitionEnabled/CONSUL_PARTITIONS_ENABLED feature flag that can be set during production form the consul binary, or additionally during development/testing via cookies.  Add partitions bookmarklet and docs, and all eng docs from main README to the docs instead.  You probably already have the app running once you need these, and it reduces the amount of text/detail in the main README  Add the env variable section back into the README with actual env vars"
5743,auto-updated agent/uiserver/bindata_assetfs.go from commit f6f282ac7,
5744,ui: Add information regarding Host header for ingress gateways (#10050),  Add inline-code CSS component   Add %inline-code to all the places where we need it   Inject selected env variables into the translations file   Add ingress gateway upstream 'host header' intro text   Make sure we can use actual correct component casing for titles but still have nice consistent menu item casing in the side nav 
5745,docs - Adding json formatting to TProxy HCL examples (#10088),formatting
5746,sdk/retry: a few small debug improvements,"On a few occasions I've had to read timeout stack traces for tests and noticed that retry.Run runs the function in a goroutine. This makes debuging a timeout more difficult because the gourinte of the retryable function is disconnected from the stack of the actual test. It requires searching through the entire stack trace to find the other goroutine. By using panic instead of runtime.Goexit() we remove the need for a separate goroutine. Also a few other small improvements: * add R.Helper so that an assertion function can be used with both   testing.T and retry.R. * Pass t to Retryer.NextOr, and call t.Helper in a number of places   so that the line number reported by t.Log is the line in the test   where retry.Run was called, instead of some line in retry.go that   is not relevant to the failure. * improve the implementation of dedup by removing the need to iterate   twice. Instad track the lines and skip any duplicate when writing to   the buffer."
5747,lib/ttlcache: never decrease the expiry on update,
5748,add missing sentinel page to nav (#10082),
5749,Merge pull request #10045 from hashicorp/dnephin/state-proxy-defaults,state: remove config-entries kind index
5750,Merge pull request #9991 from hashicorp/dnephin/handle-raft-apply-errors,Handle FSM.Apply errors in raftApply
5751,Handle ErrChunkingResubmit.Error properly,"Previously canRetry was attempting to retrieve this error from args, however there was never any callers that would pass an error to args. With the change to raftApply to move this error to the error return value, it is now possible to receive this error from the err argument. This commit updates canRetry to check for ErrChunkingResubmit in err."
5752,Handle FSM.Apply errors in raftApply,"Previously we were inconsistently checking the response for errors. This PR moves the response-is-error check into raftApply, so that all callers can look at only the error response, instead of having to know that errors could come from two places. This should expose a few more errors that were previously hidden because in some calls to raftApply we were ignoring the response return value. Also handle errors more consistently. In some cases we would log the error before returning it. This can be very confusing because it can result in the same error being logged multiple times. Instead return a wrapped error."
5753,refactor get started links to new tutorial (#10066),
5754,Disallow * as service-defaults name (#10069),
5755,Merge pull request #10065 from hashicorp/ci/update-ssh-rw-key,ci: rotate the read/write SSH key fingerprint
5756,ci: rotate the read/write SSH key fingerprint,
5757,Release v1.9.5 (#10063),Co-authored-by: hashicorp-ci hashicorp-ci@users.noreply.github.com
5758,website: fix search indexing issue (#10059),
5759,website: add 1.10.0 beta callout (#10058),
5760,Merge pull request #10055 from hashicorp/dnephin/fix-master-update-vendor,vendor: commit changes from update-vendor
5761,Add docs for transparent proxy mode and config (#10038),Add docs for transparent proxy mode and config Co-authored-by: Nitya Dhanushkodi nitya@hashicorp.com Co-authored-by: Blake Covarrubias blake@covarrubi.as Co-authored-by: Iryna Shustava ishustava@users.noreply.github.com Co-authored-by: Jeff Escalante jescalan@users.noreply.github.com
5762,docs: update helm ref docs and connect docs (#10032),All k8s connect-related docs now need to mention that we require a Kubernetes service for all Connect services
5763,vendor: commit changes from update-vendor,I guess a couple PRs crossed streams and somehow that resulted in this line not being needed anymore in go.sum
5764,Merge pull request #10004 from hashicorp/dnephin/go1.16,ci: test against Go1.16.3
5765,"chore: sync changelog entries back from 1.10.0-beta1, 1.9.5, 1.8.10, 1.7.14 (#10054)",
5766,ui: Hoist DC menu into the top navigation bar (#10034),  Add story for %main-nav-vertical plus additions for hoisting menu items   Make sure we don't source app.css twice   Hoist the DC menu 
5767,Check for optionally prepended namespace in upstream assertion (#10049),
5768,fix test when run in enterprise (#10048),
5769,ui: fix mismatched curly brace in mock-api (#10044),  ui: fix mismatched curly brace in mock-api   ui: add missing closing paren in mock-api 
5770,Merge pull request #10046 from hashicorp/clone-panic,Don't panic on nil UpstreamConfiguration.Clone()
5771,Don't panic on nil UpstreamConfiguration.Clone(),
5772,Merge pull request #10043 from hashicorp/watsonian/update-upgrade-guide,docs: update upgrade guide to use 1.8.10
5773,state: remove unnecessary kind index,The query can be performed using a prefix query on the ID index. Also backport some enterprise changes to prevent conflicts.
5774,state: use index constants for ConfigEntry indexes,
5775,auto-updated agent/uiserver/bindata_assetfs.go from commit daf897f1a,
5776,Merge pull request #10002 from hashicorp/ui/feature/banners-and-labels-for-tproxy-changes,
5777,Merge pull request #10016 from hashicorp/topology-update,
5778,Add changelog entry,
5779,Split Upstream.Identifier() so non-empty namespace is always prepended in ent (#10031),
5780,connect: update centralized upstreams representation in service-defaults (#10015),
5781,ui: Never respond with empty gateway addresses (mock-api) (#10035),"We noticed that our mock API would sometimes respond with an empty array of addresses - which resulted in an empty space in the gateway upstream listing which looked as though it could be broken. I checked with backend, and as this will never happen, I made the change here also so the gateway upstream list is always fully populated with addresses."
5782,ui: remove old nspace argument from the proxy instance repository (#10039),"The extra argument meant that the blocking query configuration wasn't being read properly, and therefore the correct ?index wasn't being sent with the request."
5783,Also update the nav link,
5784,Update upgrade guide from 1.8.4 to 1.8.10,
5785,review note fixes,
5786,Update catalog mock data for Mode attr,
5787,Add changelog,
5788,Refactor TopologyMetrics Notices,
5789,Create placeholder *(All Services) Card,
5790,Add translations for topology-mterics and transparent-proxy components,
5791,Create icon and dashed line for intention not explictly defined,
5792,Create not explicitly defined intentions banner,
5793,Create TransparentProxy mode label for service instance page,
5794,Create Topology Metrics Source Type to be in each Card,
5795,Refactor Topology Metrics Card component,
5796,Create warning banners for permissive default-allow and wildcard-intention,
5797,"Update service-topology mock data with new attributes: TransparentProxy, DefaultAllow, WildcardIntention, and Source",
5798,Merge pull request #10030 from hashicorp/fix-ent-audit-log-bypass,Add synthetic enterprise entry for CVE-2021-28156
5799,Add component name to entry,Co-authored-by: Daniel Nephin dnephin@hashicorp.com
5800,Merge pull request #10023 from hashicorp/fix-raw-kv-xss,Add content type headers to raw KV responses
5801,Add synthetic enterprise entry for CVE-2021-28156,
5802,Merge pull request #10025 from hashicorp/dnephin/fix-snapshot-auth-methods,snapshot: fix saving of auth methods
5803,snapshot: fix saving of auth methods,"Previously only a single auth method would be saved to the snapshot. This commit fixes the typo and adds to the test, to show that all auth methods are now saved."
5804,Add security release-note changelog entry,
5805,Add better security warning to docs about the content-type change,
5806,Update KV docs to note new raw response content-type header,
5807,Add content type headers to raw KV responses,
5808,mod: bump to github.com/hashicorp/mdns v1.0.4 (#10018),
5809,Merge pull request #10014 from hashicorp/dnephin/changelog,Add changelog for enterprise change
5810,Avoid returning a nil slice,
5811,Move static token resolution into the ACLResolver (#10013),
5812,fix broken golden tests,
5813,Merge pull request #10006 from hashicorp/api-ptrs,
5814,Update viz endpoint to include topology from intentions,
5815,Merge pull request #9987 from hashicorp/remove-kube-dns-hack,
5816,Add changelog for enterprise change,
5817,Merge pull request #10008 from hashicorp/mw.update-homepage-links,website: update why hashicorp links
5818,add consul-haskell to libraries-and-sdks documentation (#9982),See also https://github.com/alphaHeavy/consul-haskell/issues/40.
5819,Fixup tests,
5820,website: update why hashicorp links,
5821,Convert new tproxy structs in api module into ptrs,"This way we avoid serializing these when empty. Otherwise users of the latest version of the api submodule cannot interact with older versions of Consul, because a new api client would send keys that the older Consul doesn't recognize yet."
5822,Merge pull request #10005 from hashicorp/tproxy-fixes,
5823,tlsutil: fix a test for go1.16,"Using a TestSigner was causing problems because go1.16 has this change:  CreateCertificate now verifies the generated certificate's signature using the signer's public key. If the signature is invalid, an error is returned, instead of a malformed certificate.  See https://golang.org/doc/go1.16#crypto/x509"
5824,connect: fix test for go1.16,There is no way to compare x509.CertPools now that it has an unexpected function field. This comparison is as close as we can get. See https://github.com/golang/go/issues/26614 for a related issue.
5825,Merge pull request #10000 from hashicorp/remove-upstream-cfg-validation,Remove zero-value validation of upstream cfg structs
5826,Remove todo that was todone,
5827,Avoid nil panic when cluster config doesn't exist,
5828,ci: test against Go1.16.3,
5829,Merge pull request #10003 from hashicorp/proxycfg-tproxy-ent-fixup,Fixup wildcard ent assertion
5830,Augment intention decision summary with DefaultAllow mode,
5831,Fixup wildcard ent assertion,
5832,Merge pull request #9999 from hashicorp/update-enabling-tproxy,
5833,fix(website): docs link text color (#10001),
5834,Fixup bexpr filtering,
5835,Remove zero-value validation of upstream cfg structs,The zero value of these flags was already being excluded in the xDS generation of circuit breaker/outlier detection config. See: makeThresholdsIfNeeded and ToOutlierDetection.
5836,Replace TransparentProxy bool with ProxyMode,"This PR replaces the original boolean used to configure transparent proxy mode. It was replaced with a string mode that can be set to:  """": Empty string is the default for when the setting should be defaulted from other configuration like config entries. ""direct"": Direct mode is how applications originally opted into the mesh. Proxy listeners need to be dialed directly. ""transparent"": Transparent mode enables configuring Envoy as a transparent proxy. Traffic must be captured and redirected to the inbound and outbound listeners.  This PR also adds a struct for transparent proxy specific configuration. Initially this is not stored as a pointer. Will revisit that decision before GA."
5837,Avoid failing test due to undiscoverable node name,
5838,auto-updated agent/uiserver/bindata_assetfs.go from commit 84064f972,
5839,ui: Return empty string  protocol for upstream/downstream metrics request (#9989),
5840,Fixup mesh gateway docs,
5841,fix formatting,
5842,add WaitGroup to h2ping,
5843,close h2ping client connections,
5844,add http2 ping health checks (#8431),"  add http2 ping checks   fix test issue   add h2ping check to config resources   add new test and docs for h2ping   fix grammatical inconsistency in H2PING documentation   resolve rebase conflicts, add test for h2ping tls verification failure   api documentation for h2ping   update test config data with H2PING   add H2PING to protocol buffers and update changelog   fix typo in changelog entry "
5845,cli: Add new consul connect redirect-traffic command for applying traffic redirection rules when Transparent Proxy is enabled. (#9910), Add new consul connect redirect-traffic command for applying traffic redirection rules when Transparent Proxy is enabled. Add new iptables package for applying traffic redirection rules with iptables.
5846,Merge pull request #9976 from hashicorp/centralized-upstream-fixups,
5847,Fixup test,
5848,Merge pull request #9042 from lawliet89/tg-rewrite,
5849,Stable sort cidr ranges to match on,
5850,PR comments,
5851,Merge pull request #9925 from hashicorp/dnephin/update-memberlist,Update memberlist to v0.2.3
5852,Merge pull request #9988 from hashicorp/dnephin/lib-retry-fix-max-wait,lib/retry: allow jitter to exceed max wait
5853,Merge pull request #9950 from hashicorp/dnephin/state-use-txn-everywhere,state: use Txn interface everywhere
5854,Merge pull request #9880 from hashicorp/dnephin/catalog-events-test-pattern,state: use runCase pattern for large test
5855,cache: Fix bug where connection errors can cause early cache expiry (#9979),Fixes a cache bug where TTL is not updated while a value isn't changing or cache entry is returning fetch errors.
5856,cache: fix bug where TTLs were ignored leading to leaked memory in client agents (#9978), Fix bug in cache where TTLs are effectively ignored  This mostly affects streaming since streaming will immediately return from Fetch calls when the state is Closed on eviction which causes the race condition every time. However this also affects all other cache types if the fetch call happens to return between the eviction and then next time around the Get loop by any client. There is a separate bug that allows cache items to be evicted even when there are active clients which is the trigger here.   Add changelog entry   Update .changelog/9978.txt 
5857,Merge pull request #9977 from hashicorp/grpc-tuning,streaming: Grpc tuning
5858,lib/retry: allow jitter to exceed max wait.,"I changed this in https://github.com/hashicorp/consul/pull/8802#pullrequestreview-500779357 because exceeding the MaxWait seemed wrong, but as other have pointed out, that behaviour is probably correct. When multiple waiters hit the max value, we don't want them to converge, so restore the behaviour of allowing jitter to exceed max, and document it."
5859,Avoid sending zero-value upstream defaults from api,
5860,"Revert ""Avoid accumulating synthetic upstreams""",This reverts commit 86672df4fad094cd7e044bf4db168162594517c2.
5861,Remove kube-dns resolution since clusterip will be a tagged addr,
5862,website: implement mktg 032 (#9953),  website: migrate to new nav-data format   website: clean up unused intro content   website: remove deprecated sidebar_title from frontmatter   website: add react-content to fix global style import issue 
5863,command: when generating envoy bootstrap configs to stdout do not mix informational logs into the json (#9980),Fixes #9921
5864,auto-updated agent/uiserver/bindata_assetfs.go from commit a0d12ff16,
5865,ui:  Reformat MaxTokenTTL to sortBy as an integer (#9969),  Install Duration JS   Use Duration.js to sortBy reformatted MaxTokenTTL   Remove @icholy/duration package   Install parse-duration package   Use parse-duration in auth-method model 
5866,Merge pull request #9975 from hashicorp/br.stackmenu,Upgrades the Stackmenu to latest
5867,Avoid accumulating synthetic upstreams,Synthetic upstreams from service-defaults config are stored locally in the Upstreams list. Since these come from service-defaults they should be cleaned up locally when no longer present in the service config response.
5868,Ensure mesh gateway mode override is set for upstreams for intentions,
5869,Finish resolving upstream defaults in proxycfg,
5870,Pass down upstream defaults to client proxies,"This is needed in case the client proxy is in TransparentProxy mode. Typically they won't have explicit configuration for every upstream, so this ensures the settings can be applied to all of them when generating xDS config."
5871,Prevent wildcard destinations for proxies and upstreams,
5872,Prevent requests without UpstreamIDs from being flagged as legacy.,"New clients in transparent proxy mode can send requests for service config resolution without any upstream args because they do not have explicitly defined upstreams. Old clients on the other hand will never send requests without the Upstreams args unless they don't have upstreams, in which case we do not send back upstream config."
5873,Fixup doc phrasing,
5874,Prevent synthetic upstreams without addresses from failing duplicate ip/port validation,
5875,Tune streaming backoff on errors to retry a bit faster when TCP connections drop,
5876,Set gRPC keepalives to mirror Yamux keepalive behaviour,
5877,Upgrades the Stackmenu to latest,
5878,missed build tag on this file (#9974),
5879,connect: add toggle to globally disable wildcard outbound network access when transparent proxy is enabled (#9973),"This adds a new config entry kind ""cluster"" with a single special name ""cluster"" where this can be controlled."
5880,Merge pull request #9958 from hashicorp/dnephin/state-improve-indexer-tests,state: support additional test cases in indexer tests
5881,ui: Move control of login modal to use JS rather than HTML (label/id) (#9883),"  Add before and after skip links portals   Move EmptyState and ErrorState to use a @login action/function   Move page title setting to the Route component   Add Routes and Outlets everywhere, and use those to access login modal   Add some aria-labels to the modals   Docs   Remove the label/input now we no longer need it, fixup pageobject   Add basic modal docs   Switch out old toggle names for ids   Wrap nspace Route template in a Route component   type > class "
5882,Changelog,
5883,Update assertion to not check for port,
5884,Merge branch 'master' of github.com:hashicorp/consul into tg-rewrite,
5885,api: ensure v1/health/ingress/:service endpoint works properly when streaming is enabled (#9967),The streaming cache type for service health has no way to handle v1/health/ingress/:service queries as there is no equivalent topic that would return the appropriate data. Ensure that attempts to use this endpoint will use the old cache-type for now so that they return appropriate data when streaming is enabled.
5886,Merge pull request #9964 from hashicorp/dnephin/streaming-docs-adding-a-topic,contributing: add a quick doc on adding new streaming topics.
5887,cross-linking for audit logging,
5888,changelog: fixup release-note formatting (#9966),so these changelog entries will be parsed successfully
5889,contributing: add a quick doc on adding new streaming topics.,
5890,Merge pull request #9936 from hashicorp/asm.nq.k8s-service-mesh-focus,website: homepage changes
5891,website: update homepage with focus on k8s,
5892,changelog: Auth Method feature release (#9963),
5893,changelog: fixup release-note formatting (#9960),so these changelog entries will be parsed successfully
5894,state: support additional test cases in indexer tests,And add a few additional cases.
5895,Merge pull request #9956 from hashicorp/tenants/patch-1,Backport enterprise changes to prevent merge conflicts
5896,Backport enterprise changes to prevent merge conflicts,Co-Authored-By: Kyle Havlovitz kylehav@gmail.com
5897,Merge pull request #9949 from hashicorp/dnephin/state-index-checks,state: convert remaining checks table indexers to functional pattern
5898,Merge pull request #9948 from hashicorp/dnephin/state-index-service,state: convert remaining services table indexers to functions
5899,Merge pull request #9947 from hashicorp/dnephin/state-ent-index-3,state: move indexer functions out of oss files
5900,auto-updated agent/uiserver/bindata_assetfs.go from commit ee5c3e3aa,
5901,ui: Auth Methods -  Namespace rules tab (#9935),  Add mock data for NamespaceRules   Create NamespaceTable component and styling   Add NamespaceRules route and add to model   Create Namespace Rules tab and implement with flag to only show in ent   Add emptystate to namespace rules page   Rename namespace-rules to be nspace-rules   Rename NamespaceTable to be NspaceList 
5902,Docs: add enterprise upgrade link (#9934), add enterprise upgrade note Update index.mdx
5903,state: use tableIndex constant,
5904,state: use ReadTxn and WriteTxn interface,"Instead of *txn, so that we can replace the txn implementation with others, and so that the function is easily documented as a read or write function."
5905,Merge pull request #9932 from hashicorp/dnephin/use-ent-meta-default,Set default enterprise meta in test case
5906,state: convert checks.service index to new pattern,
5907,state: convert checks.status indexer,"As part of this change the indexer will now be case insensitive by using the lower case value. This should be safe because previously we always had lower case strings. This change was made out of convenience. All the other indexers use lowercase, so we can re-use the indexFromQuery function by using lowercase here as well."
5908,state: add tests for checks indexers,
5909,state: use constants for table checks,
5910,state: pass Query in from caller,To reduce the number of arguments
5911,state: convert services.kind to functional indexer pattern,
5912,state: add tests for services.kind indexer,
5913,state: convert services table service and connect indexer,To the new functional indexer pattern
5914,state: add tests for services table service and connect indexers,
5915,state: use constant for tableServices,
5916,nia/docs 0.1.0 ga (#9946),  docs/nia: consul compatibilty   docs/nia: remove beta callouts (#9919)   Co-authored-by: Kim Ngo 6362111+findkim@users.noreply.github.com
5917,state: remove duplication of Query indexer,
5918,state: remove duplication in acl tables schema,
5919,state: reduce duplication in catalog table schema,
5920,state: share more indexer functions for config_entries,
5921,state: remove old schema test,This test has been replaced by TestNewDBSchema_Indexers
5922,state: use addNamespaceIndex again,
5923,website: add should-build script (#9896),
5924,Add link to TF module tutorial and example TF modules (#9937),Add link to TF tutorial Add links to print TF module and template for TF modules
5925,"Add Avi Network, AWS ALB and NS1 TF Registies and GitHub links (#9938)",Add Avi Network GH link Add AWS ALB TF Registry and GH link Add NS1 TF Registry and GH link
5926,auto-updated agent/uiserver/bindata_assetfs.go from commit 4d13e31ae,
5927,ui: Auth Methods - Create Binding Rules tab (#9914),  Create BindingRule adapter and tests   Create BindingRule serializer and test   Create BindingRule model and repository   Add binding-rules mock data   Create binding-rules router and call endpoint   Create Binding rules tab   Create and use BindingView component   Create empty state for BindingView   Remove binding rule requestForQueryRecord endpoint and tests   Update binding rules selector to be monospaced   Add bind type tooltip   Create and Tabular-dl styling component   Update hr tag global styling   Rename BindingView to BindingList and refactor   Add translations for bind types tooltip info   Remove unused endpoint   Refactor based on review notes 
5928,Allow passing ALPN next protocols down to connect services. Fixes #4466. (#9920),  Allow passing ALPN next protocols down to connect services. Fixes #4466.   Update connect/proxy/proxy_test.go   Co-authored-by: Paul Banks banks@banksco.de Co-authored-by: Paul Banks banks@banksco.de
5929,Merge pull request #9917 from Ranjandas/docs/exec-cmd-acl,Document agent token policy requirement for rexec
5930,Set default enterprise meta in test case,
5931,Merge pull request #7324 from alrs/prune-agent-test-functions,agent: Prune Unused Test Helper Functions
5932,agent: use testAgent_RegisterService_TranslateKeys(),When this test was refactored it looks like there was a copy+paste error and the test case was made to call the wrong function.
5933,agent: remove unused makeTelemetryDefaults(),
5934,Merge pull request #9923 from hashicorp/dnephin/fix-ui-config,http: fix a bug that would cause runtimeConfig to be cached
5935,Merge pull request #9911 from hashicorp/dnephin/state-index-acl-roles,state: convert ACLRoles policies index to new functional indexer pattern
5936,Merge pull request #9916 from hashicorp/dnephin/state-index-checks-id,state: convert checks.ID index to the functional indexer pattern
5937,Update memberlist to v0.2.3,To pickup data race fixes
5938,http: add a test for transform changing value,
5939,Add changelog,
5940,http: fix a bug that would cause runtimeConfig to be cached,"This bug would result in the UI not having the correct settings in Consul enterprise, which could produce many warnings in the logs. This bug occured because the index page, which includes a map of configuration was rendered when the HTTPHandler is first created. This PR changes the UIServer to instead render the index page when the page is requested. The rendering does not appear to be all that expensive, so rendering it when requested should not cause much extra latency."
5941,Cross linking Learn tutorials (#9893),  Cross linking Learn tutorials   Update website/content/docs/nia/index.mdx   Co-authored-by: Kim Ngo 6362111+findkim@users.noreply.github.com   Cross linking Learn tutorials   Cross linking Learn tutorials   Add links to doc   Co-authored-by: Kim Ngo 6362111+findkim@users.noreply.github.com
5942,auto-updated agent/uiserver/bindata_assetfs.go from commit 232921b60,
5943,ui: Add a README to the new Certificate component (#9908),
5944,Document agent token policy requirement for rexec,"The Agent token policy when using rexec should have write on ""_rexec"" key prefix. Updated the exec command documentation to explicitly state this requirement."
5945,Update telemetry docs (#9905),  Fixes #2379-Improve interval explanation in the telemetry doc   Fixes #4734-Update consul memory metrics   Fixes #4836-Removed node.deregistration as that isn't in state.go   Fixes #8986 partially-Trim redundant language   Fixes #9087-Adds helpful details to telemetry on autopilot   Fixes #9274-Addresses NaN output in autopilot 
5946,state: add tests for checks.ID indexer,
5947,state: use tx.First instead of tx.FirstWatch,Where appropriate. After removing the helper function a bunch of  these calls can be changed to tx.First.
5948,state: convert checks.ID index to new pattern,
5949,Update CHANGELOG.md (#9915),"Add entries for v1.9.4, v1.8.9 and v1.7.13"
5950,Retroactive Chagelog update for header fix (#9897),This was fixed as part of a refactor in 1.9.0 but no changelog entry was added. It affected some users who used automated security scanning tools which detected violations on Consul's error pages because appropriate security-related headers were not being added.
5951,fix: remove period to fix broken link (#9912),
5952,introduce certopts (#9606),  introduce cert opts   it should be using the same signer   lint and omit serial 
5953,state: use uuid for acl-roles.policies index,"Previously we were encoding the UUID as a string, but the index it references uses a UUID so this index can also use an encoded UUID to save a bit of memory."
5954,state: convert acl-roles.policies index to new pattern,
5955,state: convert acl-roles.name index to the functional indexer pattern,
5956,state: add indexer tests for acl-roles table,
5957,state: use constants for acl-roles table and indexes,
5958,docs/nia: Update CTS configuration example to not confuse vault provider with vault config block (#9909),
5959,Merge pull request #9885 from hashicorp/dnephin/state-index-acl-policies,state: convert acl-policies table to new functional indexer pattern
5960,state: convert acl-policies table to new pattern,
5961,state: use constants and add tests for acl-policies table,
5962,Merge pull request #9903 from hashicorp/f-agent-qopts,api: enable query options on agent endpoints
5963,Merge pull request #9866 from hashicorp/dnephin/state-index-service-id,state: convert services.ID to the new pattern of functional indexers
5964,state: add indexer test for services.ID index,
5965,state: handle wildcard for services.ID index,"When listing services, use the id_prefix directly if wildcards are allowed. Error if a wildcard is used for a query that does not index the wildcard"
5966,state: fix prefix index with the new pattern,"Prefix queries are generally being used to match part of a partial index. We can support these indexes by using a function that accept different types for each subset of the index. What I found interesting is that in the generic StringFieldIndexer the implementation for PrefixFromArgs would remove the trailing null, but at least in these 2 cases we actually want a null terminated string. We simply want fewer components in the string."
5967,state: move services.ID to new pattern,
5968,api: enable query options on agent endpoints,This PR adds support for setting QueryOptions on a few agent API endpoints. Nomad needs to be able to set the Namespace field on these endpoints to:  - query for services / checks in a namespace  - deregister services / checks in a namespace  - update TTL status on checks in a namespace
5969,docs: Update Helm reference docs (#9904),
5970,auto-updated agent/uiserver/bindata_assetfs.go from commit a7a56ca39,
5971,ui: Ensure intention form cancel button works (#9901), ui: Ensure intention form cancel button works  By adding @action decorators to the actions called form within the template
5972,ui: Dependency Upgrade (#9907), Pin ember-changeset-validations and its dependencies to 3.9  Future versions produce a 'validator is not a function' error   yarn upgrade   Upgrade the majority of user facing deps that don't required add. change   not upgraded here due to more changes required:  ember-page-title  ember-href-to   Upgrade ember-page-title which no longer requires ember-cli-head   Upgrade some devtools related dependencies   Upgrade some non ember-core test utils   Upgrade js-yaml which required safeLoad > load   Upgrade some compilation utils   Yarn install from workspace root   Add Python-2.0 to compliance checker 
5973,Add metrics documentation (#9848),
5974,Merge pull request #8564 from woz5999/support-env-var-expansion-in-statsd-url,support env var expansion in envoy statsd urls
5975,update docs and add changelog,
5976,support env var expansion in envoy statsd urls,Fixes #8561
5977,Removing unnecessary comment (#9890),"Removing unnecessary comment around CRL to avoid confusion, as discussed with @banks"
5978,Merge pull request #9882 from hashicorp/dnephin/state-index-mesh,state: use constants and add indexer tests for gateway tables
5979,state: add tests for gateway-service table indexers,
5980,state: use constants and remove wrapping,for GatewayServices table
5981,state: Move UpstreamDownstream to state package,
5982,state: add tests for mesh-topology table indexers,
5983,state: use constants for mesh-topology table operations,
5984,auto-updated agent/uiserver/bindata_assetfs.go from commit 980299d51,
5985,ui: Auth Methods- Updates to certificate and empty state in show page (#9895),  Update Certificate to be monospaced   Add empty states for claim and list claim mappings   Update the styling of empty state actions block   Update mocked PEM certificate format 
5986,auto-updated agent/uiserver/bindata_assetfs.go from commit 8dc590cf1,
5987,ui: Add all tooltips to the default tabbing order in the page (#9888)," ui: Add all tooltips to the default tabbing order in the page  This amends our tooltip modifier to automatically add a tabindex=""0"" to all of our tooltips (if they aren't tabbable already). This means that all tooltips will automatically be added to the natural tab order of the page. I'm pretty sure we don't currently require the ability to disable this automatic functionality but if we do at some point in the future we can add an option to disable it, meaning all tooltips will be tabbable by default."
5988,Merge pull request #9900 from hashicorp/ent-fixes,Fixup enterprise tests from tproxy changes
5989,Merge pull request #9899 from hashicorp/wildcard-ixn-oss,Add methods to check intention has wildcard src or dst
5990,Fixup enterprise tests from tproxy changes,
5991,Add support for transparent proxy in xDS generation,
5992,Add methods to check intention has wildcard src or dst,
5993,Add changelog entry,
5994,Cancel watch on all errors,
5995,Split up normalizing from defaulting values for upstream cfg,
5996,Uncomment listener tests,
5997,Merge master and fix upstream config protocol defaulting,
5998,Add internal RPC endpoint to compute upstreams from intentions,
5999,Temporarily silence spurious wakeup. Addressing false positive in beta.,
6000,Merge remote-tracking branch 'origin/master' into intention-topology-endpoint,
6001,Add TransparentProxy option to proxy definitions,
6002,Add per-upstream configuration to service-defaults,
6003,Add changelog and cleanup todo for beta,
6004,Rename hasChains for clarity,
6005,PR comments,
6006,Merge pull request #9865 from hashicorp/dnephin/state-index-config-entries,state: convert config-entries table to the new pattern of functional indexers
6007,Upstreams loop is only for prepared queries and they are not CentrallyConfigured,
6008,Handle prepared queries in Upstreams loop and escape hatches in disco chain loop,
6009,Update xds for transparent proxy,
6010,Update proxycfg for transparent proxy,
6011,Do not include consul as upstream or downstream,
6012,state: add tests for config-entry indexers,
6013,state: convert config-entries kind index to new pattern,
6014,state: remove config-entries namespace index,Use a prefix of the ID index instead.
6015,state: remove unnecessary method receiver,
6016,state: convert config-entries table to new indexer pattern,Using functional indexes to isolate enterprise differentiation and remove reflection.
6017,Merge pull request #9881 from hashicorp/dnephin/state-index-service-check-nodes,state: convert services.node and checks.node indexes
6018,Merge pull request #9863 from hashicorp/dnephin/config-entry-kind-name,state: move ConfigEntryKindName
6019,auto-updated agent/uiserver/bindata_assetfs.go from commit 9e715842d,
6020,ui: Improves UI engineering docs (#9875),Also fixes some typos in with-overlay
6021,auto-updated agent/uiserver/bindata_assetfs.go from commit f9e8b26af,
6022,ui: Create auth-method show page with General Info Tab (#9845),"  Update list items to be linkable to auth-methods show   Add general, namespace, and binding sub-routes   Remove namespace and binding tabs to be done separately   Update auth-method byId endpoint   Style the show auth-method kubernetes type   Finish Kubernetes auth-method type styling   OIDC and JWT auth-method styling   Create consul-auth-method-view component   Add navigation test for auth-methods   Create Certificate component "
6023,auto-updated agent/uiserver/bindata_assetfs.go from commit aca797658,
6024,ui: Adds warning icon to side menu when ACLs are disabled (#9864), ui: Adds warning icon to side menu when ACLs are are disabled
6025,auto-updated agent/uiserver/bindata_assetfs.go from commit 41471719e,
6026,ui: CSP Improvements (#9847),"  Configure ember-auto-import so we can use a stricter CSP   Create a fake filesystem using JSON to avoid inline scripts in index   We used to have inline scripts in index.html in order to support embers filepath fingerprinting and our configurable rootURL. Instead of using inline scripts we use application/json plus a JSON blob to create a fake filesystem JSON blob/hash/map to hold all of the rootURL'ed fingerprinted file paths which we can then retrive later in non-inline scripts. We move our inlined polyfills script into the init.js external script, and we move the CodeMirror syntax highlighting configuration inline script into the main app itself - into the already existing CodeMirror initializer (this has been moved so we can lookup a service located document using ember's DI container)  Set a strict-ish CSP policy during development"
6027,Refactor makePublicListener,"By accepting a name the function can be used for other inbound listeners, like the one for TransparentProxy."
6028,Merge pull request #9886 from hashicorp/sdk/to_testing_TB,[SDK] change all cases of *testing.T to testing.TB
6029,Merge pull request #9475 from cbroglie/tls-server-name,Add support for configuring TLS ServerName for health checks
6030,Add changelog for 9475,
6031,Add support for configuring TLS ServerName for health checks,"Some TLS servers require SNI, but the Golang HTTP client doesn't include it in the ClientHello when connecting to an IP address. This change adds a new TLSServerName field to health check definitions to optionally set it. This fixes #9473."
6032,[SDK] change all cases of *testing.T to testing.TB,Using the interface opens up the use of all methods to benchmarks as well as tests.
6033,Merge pull request #8698 from pierreca/fix-iserreof,Use errors.Is() in IsErrEOF()
6034,Add cache-type for Internal.IntentionUpstreams,
6035,state: convert services.node and checks.node indexes,Using NodeIdentity to share the indexes with both.
6036,Prefix match type vars to match use,
6037,Pass txn into service list queries,
6038,Pass txn into intention match queries,
6039,Replace CertURI.Authorize() calls.,"AuthorizeIntentionTarget is a generalized version of the old function, and can be evaluated against sources or destinations."
6040,"Fixup typo, comments, and regression",
6041,Fixup upstream test,
6042,Finish cleanup from ServiceConfigRequest changes,
6043,Update service manager to pass MeshGateway with config req,
6044,PR comments,
6045,state: use runCase pattern for large test,"The TestServiceHealthEventsFromChanges function was over 1400 lines. Attempting to debug test failures in test functions this large is difficult. It requires scrolling to the line which defines the testcase because the failure message only includes the line number of the assertion, not the line number of the test case. This is an excellent example of where test tables stop working well, and start being a problem. To mitigate this problem, the runCase pattern can be used. When one of these tests fails, a failure message will print the line number of both the test case and the assertion. This allows a developer to quickly jump to both of the relevant lines, signficanting reducing the time it takes to debug test failures. For example, one such failure could look like this: catalog_events_test.go:1610: case: service reg, new node catalog_events_test.go:1605: assertion failed: values are not equal"
6046,docs: rename SourceAddress to SourceIP (#9878),SourceAddress was probably renamed to SourceIP but the docs weren't updated.
6047,Pass MeshGateway config in service config request,ResolveServiceConfig is called by service manager before the proxy registration is in the catalog. Therefore we should pass proxy registration flags in the request rather than trying to fetch them from the state store (where they may not exist yet).
6048,Restore old Envoy prefix on escape hatches,This is done because after removing ID and NodeName from ServiceConfigRequest we will no longer know whether a request coming in is for a Consul client earlier than v1.10.
6049,Only lowercase the protocol when normalizing,
6050,Add omitempty across the board for UpstreamConfig,
6051,Merge pull request #9107 from hashicorp/docs-prepared-query-namespace,Add namespaces to prepared query API docs
6052,Add RPC endpoint for intention upstreams,
6053,Add state store function for intention upstreams,
6054,Refactor IntentionDecision,"This enables it to be called for many upstreams or downstreams of a service while only querying intentions once. Additionally, decisions are now optionally denied due to L7 permissions being present. This enables the function to be used to filter for potential upstreams/downstreams of a service."
6055,Add namespaces to prepared query API docs,Add missing section on creating prepared query for namespaced services
6056,Merge pull request #9152 from hashicorp/dnephin/streaming-enable-connect,use streaming backend for connect service health
6057,proxycfg: use rpcclient/health.Client instead of passing around cache name,This should allow us to swap out the implementation with something other than agent/cache without making further code changes.
6058,catalog_events: set the right key for connect snapshots,
6059,proxycfg: Use streaming in connect state,
6060,rpcclient: use streaming for connect health,
6061,AutopilotServerHealth now handles the 429 status code (#8599),AutopilotServerHealthy now handles the 429 status code Previously we would error out and not parse the response. Now either a 200 or 429 status code are considered expected statuses and will result in the method returning the reply allowing API consumers to not only see if the system is healthy or not but which server is unhealthy.
6062,Update content hash due to new field,
6063,And another test fix,
6064,Fixup more tests,
6065,Merge pull request #9874 from hashicorp/mw.patch-docs-issue,docs: fixup syntax issue
6066,fix: syntax issue,
6067,Fixup protobufs and tests,
6068,Small changes to gossip related telemetry docs (#9846),"Update gossip related telemetry docs to include correct descriptions, and added missing metrics"
6069,Merge pull request #9867 from hashicorp/mw.update-alert-banner,Update alert banner
6070,Merge pull request #9869 from DanielMabbett/patch-1,Fix typo in requirements.mdx
6071,Merge pull request #9672 from hashicorp/ca-force-skip-xc,connect/ca: Allow ForceWithoutCrossSigning for all providers
6072,Add a changelog note,
6073,Merge pull request #9770 from hashicorp/docs/fix-terminating-gateway-config-entry,Docs: Update terminating-gateway-config-entry
6074,Update service manager to store centrally configured upstreams,
6075,Add TransparentProxy opt to proxy definition,
6076,Restore old escape hatch alias,
6077,Turn Limits and PassiveHealthChecks into pointers,
6078,Merge pull request #9792 from dzeban/kv-import-prefix,command/kv: Add prefix option to kv import command
6079,Add a changelog entry,
6080,Update requirements.mdx,
6081,auto-updated agent/uiserver/bindata_assetfs.go from commit fa6687b7f,
6082,ui: Implement ACLs access based on ACLs (#9835),Adds restrictions to everything within the ACLs (and nspaces) area based on your ACLs (including readonly views etc.)
6083,Update server-side config resolution and client-side merging,
6084,finish moving UpstreamConfig and related fields to structs pkg,
6085,Add units and types to metrics tables (#9674),This commits adds units and types to key metrics tables to have consistent table views of all metrics in telemetry.mdx. Fixes: https://github.com/hashicorp/consul/issues/9069
6086,Update alert banner,
6087,Merge pull request #9797 from hashicorp/dnephin/state-index-node-id,state: convert nodes.ID to the new pattern of functional indexers
6088,state: move ConfigEntryKindName,"Previously this type was defined in structs, but unlike the other types in structs this type is not used by RPC requests. By moving it to state we can better indicate that this is not an API type, but part of the state implementation."
6089,Merge pull request #9796 from hashicorp/dnephin/state-cleanup-catalog-index-oss,state: remove duplicate tableCheck indexes
6090,Merge pull request #9851 from panascais-forks/fix-wan-ipv6-key,Fix advertise_addr_wan_ipv6 configuration key
6091,Merge pull request #9805 from hashicorp/dnephin/remove-ent-meta-get-namespace,structs: remove EnterpriseMeta.GetNamespace
6092,Merge pull request #9853 from hashicorp/dnephin/fix-ci-nomad-integ,ci: update config for nomad main branch rename
6093,structs: remove EnterpriseMeta.GetNamespace,I added this recently without realizing that the method already existed and was named NamespaceOrEmpty. Replace all calls to GetNamespace with NamespaceOrEmpty or NamespaceOrDefault as appropriate.
6094,ci: update config for nomad main branch rename,
6095,Merge pull request #9671 from hashicorp/streaming/terminating-gateway-events,state: Add terminating gateway events for streaming
6096,state: adjust compare for catalog events,"Document that this comparison should roughly match MatchesKey Only sort by overrideKey or service name, but not both Add namespace to the sort. The client side also builds a map of these based on the namespace/node/service key, so the only order that really matters is the ordering of register/dereigster events."
6097,state: handle terminating gateway events properly in snapshot,"Refactored out a function that can be used for both the snapshot and stream of events to translate an event into an appropriate connect event. Previously terminating gateway events would have used the wrong key in the snapshot, which would have caused them to be filtered out later on. Also removed an unused function, and some commented out code."
6098,Add remaining terminating gateway tests for namespaces,Co-Authored-By: Daniel Nephin dnephin@hashicorp.com
6099,Start to setup enterprise tests for terminating gateway streaming events.,Co-Authored-By: Kyle Havlovitz kylehav@gmail.com
6100,state: Add support for override of namespace,in MatchesKey also tests for MatchesKey Co-Authored-By: Kyle Havlovitz kylehav@gmail.com
6101,state: update calls to ensureConfigEntryTxn,"The EnterpriseMeta paramter was removed after this code was written, but before it merged. Also the table name constant has changed."
6102,state: add 2 more test cases for terminate gateway streaming events,Co-Authored-By: Kyle Havlovitz kylehav@gmail.com
6103,Added 6 new test cases for terminating gateway events,Co-Authored-By: Daniel Nephin dnephin@hashicorp.com
6104,state: Add two more tests for connect events with terminating gateways,And expand one test case to cover more. Co-Authored-By: Kyle Havlovitz kylehav@gmail.com
6105,state: Include the override key in the sorting of events,Co-Authored-By: Kyle Havlovitz kylehav@gmail.com
6106,state: Add terminating gateway events on updating a config entry,Co-Authored-By: Daniel Nephin dnephin@hashicorp.com
6107,state: add first terminating catalog catalog event,"Health of a terminating gateway instance changes - Generate an event for creating/destroying this instance of the terminating gateway,   duplicate it for each affected service Co-Authored-By: Kyle Havlovitz kylehav@gmail.com"
6108,Fix advertise_addr_wan_ipv6 configuration key,
6109,auto-updated agent/uiserver/bindata_assetfs.go from commit 33d038377,
6110,ui: a11y modals (#9819),"This PR uses the excellent a11y-dialog to implement our modal functionality across the UI. This package covers all our a11y needs - overlay click and ESC to close, controlling aria-* attributes, focus trap and restore. It's also very small (1.6kb) and has good DOM and JS APIs and also seems to be widely used and well tested. There is one downside to using this, and that is: We made use of a very handy characteristic of the relationship between HTML labels and inputs in order to implement our modals previously. Adding a for=""id"" attribute to a label meant you can control an  from anywhere else in the page without having to pass javascript objects around. It's just based on using the same string for the for attribute and the id attribute. This allowed us to easily open our login dialog with CSS from anywhere within the UI without having to manage passing around a javascript object/function/method in order to open the dialog. We've PRed #9813 which includes an approach which would make passing around JS modal object easier to do. But in the meantime we've added a little 'hack' here using an additional  element and a change listener which allows us to keep this label/input characteristic of our old modals. I'd originally thought this would be a temporary amend in order to wait on #9813 but the more I think about it, the more I think its quite a nice thing to keep - so longer term we may/may not keep this."
6111,Create new types for service-defaults upstream cfg,
6112,auto-updated agent/uiserver/bindata_assetfs.go from commit 308e5a480,
6113,"ui: Remove storybook, add docfy (#9831)","This PR removes storybook and adds docfy and uses docfy to render our existing README files. This now means we can keep adding README documentation without committing any specific format or framework. If we eventually move to storybook then fine, or if we just want to remove docfy for whatever reason then fine - we will still have a full set of README files viewable via GitHub."
6114,ui: Add Route component / routlet service (#9813),  Add Routlet service and Route Component   Add ember-assign-helper (already an indirect dependency)   Use EventListeners for is-href instead of observing   Don't include :active in '-intent' styles 
6115,state: convert nodes.ID to new functional pattern,In preparation for adding other identifiers to the index.
6116,Add flags to consul connect envoy for metrics merging. (#9768),"Allows setting -prometheus-backend-port to configure the cluster envoy_prometheus_bind_addr points to. Allows setting -prometheus-scrape-path to configure which path envoy_prometheus_bind_addr exposes metrics on. -prometheus-backend-port is used by the consul-k8s metrics merging feature, to configure envoy_prometheus_bind_addr to point to the merged metrics endpoint that combines Envoy and service metrics so that one set of annotations on a Pod can scrape metrics from the service and it's Envoy sidecar. -prometheus-scrape-path is used to allow configurability of the path where prometheus metrics are exposed on envoy_prometheus_bind_addr."
6117,Merge pull request #9838 from Ranjandas/master,Fix TLS cert creation instruction for Consul federation
6118,Add a sample error message,
6119,Update vms-and-kubernetes.mdx,
6120,Added references to node name,
6121,Update cert creation instruction for Federation,The Server certificates used for Federation require the node name in the form of <node>.server.<dc>.<domain>. Not having this would through bad tls certificate error.  Fixed cert create command Added note to create a wildcard cert (like the ones on Kubernetes) Fixed numbering
6122,fix typo in changelog,
6123,"xds: default to speaking xDS v3, but allow for v2 to be spoken upon request (#9658)", Also add support for envoy 1.17.0
6124,update changelog and website checks (#9781),  remove expression syntax for if conditional   make changelog check a status check 
6125,Merge pull request #9188 from hashicorp/dnephin/more-streaming-tests,Add more streaming tests
6126,Merge pull request #9759 from hashicorp/dnephin/streaming-default-rpc-enabled,streaming: default rpc.enable_streaming to true
6127,Merge pull request #9703 from pierresouchay/streaming_tags_and_case_insensitive,Streaming filter tags + case insensitive lookups for Service Names
6128,nia/docs 0.1.0 beta (#9803),nia/docs 0.1.0-beta Co-authored-by: Kent 'picat' Gruber kent@hashicorp.com Co-authored-by: Lorna Song lorna@hashicorp.com Co-authored-by: John Eikenberry jae@zhar.net
6129,docs: fix grpc metric names,
6130,catalog_events: set the right key for connect snapshots,Add a test for catalog_event snapshot on connect topic
6131,consul: Add integration tests of streaming.,Restored from streaming-rpc-final branch. Co-authored-by: Paul Banks banks@banksco.de
6132,state: Add a test for ServiceHealthSnapshot,
6133,agent: add a test for streaming in the service health endpoint,Co-authored-by: Paul Banks banks@banksco.de
6134,streaming: default rpc.enable_streaming to true,So that all servers will start the grpc server used by streaming
6135,docs: Fix reference to dns_config.use_cache,
6136,auto-updated agent/uiserver/bindata_assetfs.go from commit 779f7f7b6,
6137,ui: Side navigation tweaks (#9812),  Remove footer and add the Consul version to the Help menu   Tweak menu text and button styling   Tweak some coloring and spacing   Add slightly larger Consul logo 
6138,ui: Remove any trailing fullstop/period DNS characters from Gateways UI API (#9752),"Previous to this commit, the API response would include Gateway Addresses in the form domain.name.:8080, which due to the addition of the port is probably not the expected response. This commit rightTrims any . characters from the end of the domain before formatting the address to include the port resulting in domain.name:8080"
6139,test: omit envoy golden test files that differ from the latest version (#9807),Since we currently do no version switching this removes 75% of the PR noise. To generate all *.golden files were removed and then I ran: go test ./agent/xds -update
6140,auto-updated agent/uiserver/bindata_assetfs.go from commit f9b0e50ca,
6141,ui: Update project blueprints for native classes (#9775),
6142,Add integration test check,
6143,Update test fixtures,
6144,Auto Rewrite Host Headers for Terminating Gateways,Tries to partially address https://github.com/hashicorp/consul/issues/8707
6145,auto-updated agent/uiserver/bindata_assetfs.go from commit 8b12d0d09,
6146,ui: DataSource Decorator (#9746),"We use a <DataSource @src={{url}} /> component throughout our UI for when we want to load data from within our components. The URL specified as the @src is used to map/lookup what is used in to retrieve data, for example we mostly use our repository methods wrapped with our Promise backed EventSource implementation, but DataSource URLs can also be mapped to EventTarget backed EventSources and native EventSources or WebSockets if we ever need to use those (for example these are options for potential streaming support with the Consul backend). The URL to function/method mapping previous to this PR used a very naive humongous switch statement which was a temporary 'this is fine for the moment' solution, although we'd always wanted to replace with something more manageable. Here we add wayfarer as a dependency - a very small (1kb), very fast, radix trie based router, and use that to perform the URL to function/method mapping. This essentially turns every DataSource into a very small SPA - change its URL and the view of data changes. When the data itself changes, either the yielded view of data changes or the onchange event is fired with the changed data, making the externally sourced view of data completely reactive. ```javascript // use the new decorator a service somewhere to annotate/decorate // a method with the URL that can be used to access this method @dataSource('/:ns/:dc/services') async findAllByDatacenter(params) {   // get the data } // can use with JS in a route somewhere async model() {   return this.data.source(uri => uri/${nspace}/${dc}/services) } ``` hbs {{!-- or just straight in a template using the component --}} <DataSource @src=""/default/dc1/services"" @onchange="""" /> This also uses a new container Service to automatically execute/import certain services yet not execute them. This new service also provides a lookup that supports both standard ember DI lookup plus Class based lookup or these specific services. Lastly we also provide another debug function called DataSourceRoutes() which can be called from console which gives you a list of URLs and their mappings."
6147,docs: Fix code tag displaying on ACL binding rules,Fix indentation of code blocks on ACL binding rules page so that code fence does not display in JSON output.
6148,xds: remove deprecated usages of xDS (#9602),Note that this does NOT upgrade to xDS v3. That will come in a future PR. Additionally:  Ignored staticcheck warnings about how github.com/golang/protobuf is deprecated. Shuffled some agent/xds imports in advance of a later xDS v3 upgrade. Remove support for envoy 1.13.x but don't add in 1.17.x yet. We have to wait until the xDS v3 support is added in a follow-up PR.  Fixes #8425
6149,connect: if the token given to the vault provider returns no data avoid a panic (#9806),Improves #9800
6150,fix typo and add link to Learn (#9799),
6151,[Website] Use new logo for Mercedes use case (#9717),  Use new logo for Mercedes use case   Fix home logo 
6152,auto-updated agent/uiserver/bindata_assetfs.go from commit 2c2e9d1ce,
6153,ui: Add an optional environment variable to control how testem starts (#9793),"Here we look for a TESTEM_AUTOLAUNCH environment variable, which can be set to either Chrome, Firefox or Safari, which will control which browser to automatically start when running testem tests. If the variable is set to anything else, then it will not automatically start a browser in order to run the tests and you will need to visit the tests manually. e.g.: TESTEM_AUTOLAUNCH=0 make test-oss-view Previously we only ever tested in Chrome and therefore there are no specific settings for Firefox or Safari. If specific settings are required for these browsers they can be added at a later date."
6154,Merge pull request #9683 from hashicorp/dnephin/fix-zombie-service-dereg,local: use agent token to deregister services
6155,local: default to the agent token instead of the user token,"When de-registering in anti-entropy sync, when there is no service or check token. The agent token will fall back to the default (aka user) token if no agent token is set, so the existing behaviour still works, but it will prefer the agent token over the user token if both are set. ref: https://www.consul.io/docs/agent/options#acl_tokens The agent token seems more approrpiate in this case, since this is an ""internal operation"", not something initiated by the user."
6156,Merge pull request #9763 from hashicorp/dnephin/cache-warn-on-error-in-notify,cache: log a warning when Cache.Notify handles an error
6157,state: add a test case for memdb indexers,
6158,state: support for functional indexers,"These new functional indexers provide a few advantages:  enterprise differences can be isolated to a single function (the    indexer function), making code easier to change as a consequence of (1) we no longer need to wrap all the calls to    Txn operations, making code easier to read. by removing reflection we should increase the performance of all    operations.  One important change is in making all the function signatures the same. https://blog.golang.org/errors-are-values An extra boolean return value for SingleIndexer.FromObject is superfluous. The error value can indicate when the index value could not be created. By removing this extra return value we can use the same signature for both indexer functions. This has the nice properly of a function being usable for both indexing operations."
6159,state: remove duplicate index on the checks table,"By using a new pattern for more specific indexes. This allows us to use the same index for both service checks and node checks. It removes the abstraction around memdb.Txn operations, and isolates all of the enterprise differences in a single place (the indexer)."
6160,state: remove duplicate function,catalogChecksForNodeService was a duplicate of catalogListServiceChecks
6161,xds: only try to create an ipv6 expose checks listener if ipv6 is supported by the kernel (#9765),Fixes #9311 This only fails if the kernel has ipv6 hard-disabled. It is not sufficient to merely not provide an ipv6 address for a network interface.
6162,Merge pull request #9777 from hashicorp/dnephin/remove-some-deprecation,docs: remove a couple deprecations
6163,auto-updated agent/uiserver/bindata_assetfs.go from commit 8263879e6,
6164,ui: Restrict the viewing/editing of certain UI elements based on the users ACLs (#9687),This commit use the internal authorize endpoint along wiht ember-can to further restrict user access to certain UI features and navigational elements depending on the users ACL token
6165,command/kv: Add prefix option to kv import command,"Currently when data is imported via consul kv import it overwrites keys under the root key. Since consul kv export can retrieve data for the given prefix, i.e. part of the KV tree, importing it under root may be not what users want. To mirror prefix behavior from export this PR adds prefix feature to the import command that adds prefix to all keys that are imported."
6166,rotate homepage tutorials (#9787),
6167,auto-updated agent/uiserver/bindata_assetfs.go from commit 7be21a902,
6168,ui: Add some acceptance testing around the Metrics graph (#9785),  Add a way to set the local datacenter   Amend step so we can positively and negatively look for elements   Add a data-test selector so we can get to the topology series graph   Add a couple of tests to verify the series graph shows/doesn't show 
6169,remove reference to docker/ path for old docker mirror (#9783),
6170,Remove jfrog references (#9782),
6171,Update helm docs for consul-helm v0.30.0 (#9779),
6172,Docs describing migrating to CRDs (#9562), Document how users can migrate to CRDs. Update documentation for federation with new ProxyDefaults requirement. Ensure controller.enabled: true is set in our example configs. Remove connect-service-protocol annotation docs.
6173,auto-updated agent/uiserver/bindata_assetfs.go from commit 1507dd8ab,
6174,ui: Auth Methods List view (#9617),  Create mock-api endpoints for auth-methods   Implement auth-method endpoints and model with tests   Create route and tab for auth-methods   Create auth-method list and type components with styles   Add JWT and OIDC svg logos to codebase   Add brand translations   Add SearchBar to Auth Methods   Add acceptance test for Auth Methods UI   Skip auth method repo test   Changes from review notes   Fixup auth-method modela and mock-data   Update SearhBar with rebased changes   Add filterBy source and sortBy max token ttl   Update to SortBy MethodName   Update UI acceptance tests   Update mock data DisplayNames   Skip repo test   Fix to breaking serializer test   Implement auth-method endpoints and model with tests   Add acceptance test for Auth Methods UI   Update SearhBar with rebased changes   Add filterBy source and sortBy max token ttl   Update to SortBy MethodName   Update UI acceptance tests   Update mock data DisplayNames   Fix to breaking serializer test   Update class for search   Add auth-methods link to sidebar   Fixup PR review notes   Fixup review notes   Only show OIDC filter with enterprise   Update conditionals for MaxTokenTTL & TokenLocality   Refactor 
6175,auto-updated agent/uiserver/bindata_assetfs.go from commit 1b5087f6e,
6176,ui: Use ember-on-resize-modifier to fix bug with sidebar (#9761),  Use ember-on-resize-modifier to fix bug with sidebar   Fix recursive height by dynamically setting fixed height   Refactor 
6177,docs: remove a couple deprecations,These filters can not be reproduced with bexpr just yet.
6178,Add fields to the /acl/auth-methods endpoint. (#9741)," A GET of the /acl/auth-method/:name endpoint returns the fields MaxTokenTTL and TokenLocality, while a LIST (/acl/auth-methods) does not.  The list command returns a filtered subset of the full set. This is somewhat deliberate, so that secrets aren't shown, but the TTL and Locality fields aren't (IMO) security critical, and it is useful for the front end to be able to show them. For consistency these changes mirror the 'omit empty' and string representation choices made for the GET call. This includes changes to the gRPC and API code in the client. The new output looks similar to this curl 'http://localhost:8500/v1/acl/auth-methods' | jq '.' {     ""MaxTokenTTL"": ""8m20s"",     ""Name"": ""minikube-ttl-local2"",     ""Type"": ""kubernetes"",     ""Description"": ""minikube auth method"",     ""TokenLocality"": ""local"",     ""CreateIndex"": 530,     ""ModifyIndex"": 530,     ""Namespace"": ""default""   } ] Signed-off-by: Mark Anderson manderson@hashicorp.com  Add changelog  Signed-off-by: Mark Anderson manderson@hashicorp.com"
6179,Bump components to remove client-side md processing (#9773),
6180,Add docs for MIME sniffing on metrics endpoint. (#9696)," Add docs for MIME sniffing on metrics endpoint.  This was added in 1.7.2 last year but I realised we don't document it so it's kinda surprising Prometheus ""just works"" now.  Update website/content/api-docs/agent/index.mdx"
6181,Merge pull request #9452 from hashicorp/dnephin/config-tests-flags-and-edgecases,config: make TestBuilder_BuildAndValidate_ConfigFlagsAndEdgecases easier to work with
6182,Merge pull request #9720 from hashicorp/dnephin/ent-meta-ergo-1,structs: rename EnterpriseMeta constructor
6183,Merge pull request #9663 from hashicorp/dnephin/update-memdb,Update go-memdb
6184,Merge pull request #9772 from hashicorp/streamin-fix-bad-cached-snapshot,streaming: fix snapshot cache bug
6185,Merge pull request #9728 from hashicorp/dnephin/state-index-table,state: document how index table is used
6186,structs: rename EnterpriseMeta constructor,To match the Go convention.
6187,Update contrib docs for the new test name,
6188,config: rename testCase fields,So that their name better reflects their purpose
6189,config: make TestLoad_IntegrationWithFlags easier to work with,"Replace the large table of tests with individual calls to run(). By using runCase, failure messages will include the line number for the test case, as well as a line number from the test functions. Example: === FAIL: agent/config TestLoad_IntegrationWithFlags/failing_case (0.01s)     runtime_test.go:4721: case: failing case     runtime_test.go:4864: error ""data_dir cannot be empty"" does not contain ""I expected this error"" Previous:     runtime_test.go:4864: error ""data_dir cannot be empty"" does not contain ""I expected this error"" Without the line number to the testCase data, debugging these tests is difficult. It is impossible to jump directly to the test case, and difficult to find the location because of many similarly named cases."
6190,move test case iteration to caller,To make the test case logic more obvious
6191,config: remove test cases for impossible scenarios,"AEInterval is overridden by NonUserSource, so there is no way for a user to set this value. These two cases represented impossible real world scenarios. Instead the test is replaced with one that shows that the AEInterval can not be set by config. This change allows us to remove the hcltail and jsontail fields from testCase"
6192,Fix error checking,"There were two identical if lines, remove one and use a switch/case so the compiler can catch this problem."
6193,config: move testing shims to LoadOpts,This will allow us to eventually port these tests to use config.Load instead of unexported functions.
6194,"Remove patchActual, does not appear to be necessary",also small rename and fix comment
6195,stream: fix a snapshot cache bug,Previously a snapshot created as part of a resumse-stream request could have incorrectly cached the newSnapshotToFollow event. This would cause clients to error because they received an unexpected framing event.
6196,stream: test the snapshot cache is saved correctly,when the cache entry is created from resuming a stream.
6197,Update terminating-gateway.mdx,fix crds support reference and adding ACL clarification for linked services.
6198,Merge pull request #9762 from hashicorp/er/nagios-sensu-update,Consul vs Nagios/sensu page updates
6199,cache: log a warning when Cache.Notify handles an error,"Without these warnings, errors are silently ignored, which can make debugging problems more challenging."
6200,nagios vs sensu updates,
6201,Merge pull request #9758 from hashicorp/dnephin/fix-streaming-bugs,http: error if near is used with streaming
6202,streaming: move ServiceTag and NodeMetaFiltering to the cache-entry,"So that all the client side filtering is in the same place. Previously only the bexpr filter was in the cache-entry. Also makes a small change to the filtering so that instead of rebuilding slices of items, the filtering can return a bool to determine if the event payload is saved or not."
6203,Add docs section on regenerating expired CA certificates (#9709),  Updated docs on regenerating built in CA   review feedback   Add sentence about expected behavior after update CA endpoint is used. 
6204,Merge pull request #9727 from mbanikazemi/typos,Correcting the changed function name in comment
6205,http: error if near is used with streaming,
6206,auto-updated agent/uiserver/bindata_assetfs.go from commit 96204a21d,
6207,ui: [BUGFIX] Ensure we show the correct count of instances for each node (#9749),  Add MeshServiceInstances property to node model   Use MeshServiceInstances property   Make sure we show the 'No * checks' if Checks.length is zero 
6208,auto-updated agent/uiserver/bindata_assetfs.go from commit 369637aff,
6209,ui: Update browser targets to ~2016 browsers (#9729),"  ui: Reduce range of browsers in targets.js 'Chrome 55', 'Firefox 53', 'Safari 13', 'Edge 15'   ui: Remove auto-prefixer "
6210,auto-updated agent/uiserver/bindata_assetfs.go from commit eda38a0ba,
6211,ui: [BUGFIX] Replace all replaceAll with split.join for older browsers without replaceAll (#9715),  ui: replace all replaceAll with split.join   Use a div instead of fieldset for flex-box reasons 
6212,"connect: update supported envoy point releases to 1.16.2, 1.15.3, 1.14.6, 1.13.7 (#9737)",
6213,Do not filter tags unless req.TagFilter is set,"Send empty array [] instead of [""""] in DNS requests when TagFilter is not set Do not change case sensitivity of services anymore in getServiceNodes() since cache keys are now case insensitive"
6214,Merge pull request #9745 from hashicorp/dnephin/fix-streaming-bugs,streaming: fix a couple bugs
6215,streaming: double the cache TTL,10 minutes is the default blocking query timeout. Using the same value results in us hitting the expired cache entry bug frequently. By extending this TTL we at least mitigate the problem. The underlying bug still needs to be fixed.
6216,submatview: do not reset retry waiter when materializer is reset,The materializer is often reset when an error is received. By resetting the retryWaiter we effectively never wait. The retryWaiter should only be reset when we get an event without error. This is done in Materializer.updateView().
6217,api: Use blocking query for health when near is set,"Streaming can not be used for these queries because the near query paramter indicates a specific sort of the results, and that sort requires data that is not available to the client from the streaming API."
6218,Use lower case for serviceName computation of cache keys,
6219,website: update next and nextjs-scripts (#9698),Co-authored-by: Jeff Escalante jescalan@users.noreply.github.com Co-authored-by: Kendall Strautman 36613477+kendallstrautman@users.noreply.github.com
6220,Stop background refresh of cached data for requests that result in ACL not found errors (#9738),
6221,Avoid potential proxycfg/xDS deadlock using non-blocking send,
6222,connect: connect CA Roots in the primary datacenter should use a SigningKeyID derived from their local intermediate (#9428),This fixes an issue where leaf certificates issued in primary datacenters using Vault as a Connect CA would be reissued very frequently (every ~20 seconds) because the logic meant to detect root rotation was errantly triggering. The hash of the rootCA was being compared against a hash of the intermediateCA and always failing. This doesn't apply to the Consul built-in CA provider because there is no intermediate in use in the primary DC. This is reminiscent of #6513
6223,Crosslink new microservices collection. (#9704),
6224,Updated changelog,
6225,[Streaming] Properly filters node-meta queries on health,This wil fix https://github.com/hashicorp/consul/issues/9730
6226,Add changelog entry,
6227,Update comments on avoiding proxycfg deadlock,
6228,xds: prevent LDS flaps in mesh gateways due to unstable datacenter lists (#9651),Also fix a similar issue in Terminating Gateways that was masked by an overzealous test.
6229,Correcting the changed function name in comment,Signed-off-by: Mohammad Banikazemi mbanikazemi@gmail.com
6230,"Retry send after timer fires, in case no updates occur",
6231,state: Use the tableIndex constant,
6232,state: Document index table,And move the IndexEntry (which is stored in the table) next to the table schema definition.
6233,Merge pull request #9722 from hashicorp/dnephin/fix-master-build,Fix main build failing
6234,changleog: presense -> presence (#9713),presense -> presence
6235,xds: deduplicate mesh gateway listeners in a stable way (#9650),"In a situation where the mesh gateway is configured to bind to multiple network interfaces, we use a feature called 'tagged addresses'. Sometimes an address is duplicated across multiple tags such as 'lan' and 'lan_ipv4'. There is code to deduplicate these things when creating envoy listeners, but that code doesn't ensure that the same tag wins every time. If the winning tag flaps between xDS discovery requests it will cause the listener to be drained and replaced."
6236,Fix main build failing,"An old PR (#7623) was merged after #9585. The old code was incompatible with the new changes, but none of the lines caused a git conflict so the merge was allowed. The incompatible changes caused the tests to fail. This fixes the old code to work with the new changes."
6237,Make xDS labeling consistent with proxycfg,
6238,"Update proxycfg logging, labels were already attached",
6239,Merge pull request #9719 from hashicorp/oss/state-store-4,state: remove registerSchema
6240,Merge pull request #9718 from hashicorp/oss/dnephin/ent-meta-in-state-store-3,state: convert all table name constants to the new prefix pattern
6241,Merge pull request #9665 from hashicorp/dnephin/state-store-indexes-2,state: move config-entries table definition to config_entries_schema.go
6242,ci: escape backticks in github comment for website/ change check (#9711),
6243,Merge pull request #9664 from hashicorp/dnephin/state-store-indexes,state: move ACL schema and index definitions to acl_schema.go
6244,state: remove the need for registerSchema,registerSchema creates some indirection which is not necessary in this case. newDBSchema can call each of the tables. Enterprise tables can be added from the existing withEnterpriseSchema shim.
6245,state: rename table name constants to use pattern,"the 'table' prefix is shorter, and also reads better in queries."
6246,state: rename connect constants,
6247,state: rename table name constants to new pattern,Using Apps Hungarian Notation for these constants makes the memdb queries more readable.
6248,Merge pull request #9701 from hashicorp/dnephin/ent-meta-remove-extra-arg,state: Remove extra entMeta arg to EnsureConfigEntry
6249,Merge pull request #7623 from FriedCircuits/patch-1,Add support for RSA private key to TLS utils.
6250,docs: fix another broken link to upgrading k8s servers from token rotation page (#9707),fix another broken link to upgrading k8s servers from token rotation page
6251,docs: Small change to fix broken link to k8s upgrade from k8s tls certs page (#9705),Broken link to k8s server upgrade from tls certs page
6252,Streaming filter tags + case insensitive lookups for Service Names,Will fix:  * https://github.com/hashicorp/consul/issues/9695  * https://github.com/hashicorp/consul/issues/9702
6253,state: Remove unnecessary entMeta arg to EnsureConfigEntry,
6254,ci: add nightly load testing on master (#9693),
6255,ci: fix pr file checker (#9694),  filter github pr file checker on the right labels object   only check PR files when the PR is opened 
6256,ci:check that type/docs-cherrypick is attached to website PR changes (#9690),
6257,docs/nia: recommend sensitive variables for module authoring (#9692),
6258,ci: fix changelog check checkout (#9688),  ci: fix changelog check checkout   use fetch-depth 0 to get all commits to find a merge-base 
6259,Add trace logs to proxycfg state runner and xds srv,
6260,docs/nia: Update verbiage around securely configuring providers (#9684),This reorganizes and flags where and when sensitive information may be written in plain-text
6261,Avoid potential deadlock using non-blocking send,"Deadlock scenario:     1. Due to scheduling, the state runner sends one snapshot into     snapCh and then attempts to send a second. The first send succeeds     because the channel is buffered, but the second blocks.     2. Separately, Manager.Watch is called by the xDS server after     getting a discovery request from Envoy. This function acquires the     manager lock and then blocks on receiving the CurrentSnapshot from     the state runner.     3. Separately, there is a Manager goroutine that reads the snapshots     from the channel in step 1. These reads are done to notify proxy     watchers, but they require holding the manager lock. This goroutine     goes to acquire that lock, but can't because it is held by step 2. Now, the goroutine from step 3 is waiting on the one from step 2 to release the lock. The goroutine from step 2 won't release the lock until the goroutine in step 1 advances. But the goroutine in step 1 is waiting for the one in step 3. Deadlock. By making this send non-blocking step 1 above can proceed. The coalesce timer will be reset and a new valid snapshot will be delivered after it elapses or when one is requested by xDS."
6262,Merge pull request #9677 from hashicorp/km.hcp,website: 2/2 Updates for HCP
6263,website: add utm params for all cloud.hashi links,
6264,auto-updated agent/uiserver/bindata_assetfs.go from commit e0ff7080a,
6265,ui: Adds unique-id helper (#9676),
6266,Website updates for HCP (2/2),website: prep hcp ctas Add in updated HCP section Fix broken link website: remove superflous heading website: add new try cloud cta to nav website: adjust homepage hero CTAs Update HCP description to match latest Clean up Hero CTAs Updates banner
6267,ci: add script to check for .changelog file in PRs (#9641),  ci: add .changelog file check for PRs   Update .github/workflows/changelog-check.yml   Co-authored-by: Daniel Nephin dnephin@hashicorp.com  add better disclaimer in changelog check script description  Co-authored-by: Daniel Nephin dnephin@hashicorp.com
6268,Release 1.9.3 (#9680),
6269,auto-updated agent/uiserver/bindata_assetfs.go from commit 0b7d676dc,
6270,ui: Add 'Scenario' debug function for easy saving debug scenarios (#9675),
6271,auto-updated agent/uiserver/bindata_assetfs.go from commit 3aef5cde2,
6272,ui: Adds the dump router dumping function only in dev mode (#9666),
6273,ci: fail cherrypick if git push fails (#9673),
6274,website: add release notes for 1.9 (#9189),  website: initial draft of release notes framework   website: fixup ref to 1-9-0.mdx   Update website/pages/docs/release-notes/1-9-0.mdx   Update website/pages/docs/release-notes/1-9-0.mdx   website: add draft of 1.9.0 release notes   website: move release-notes directory from /pages to /content   Update 1-9-0.mdx   Update website/content/docs/release-notes/1-9-0.mdx   Co-authored-by: Blake Covarrubias blake@covarrubi.as  Update website/content/docs/release-notes/1-9-0.mdx  Co-authored-by: Blake Covarrubias blake@covarrubi.as  Update website/content/docs/release-notes/1-9-0.mdx  Co-authored-by: Blake Covarrubias blake@covarrubi.as  Update website/content/docs/release-notes/1-9-0.mdx  Co-authored-by: Blake Covarrubias blake@covarrubi.as  Update website/content/docs/release-notes/1-9-0.mdx  Co-authored-by: Blake Covarrubias blake@covarrubi.as  Update website/content/docs/release-notes/1-9-0.mdx  Co-authored-by: Blake Covarrubias blake@covarrubi.as  Update website/content/docs/release-notes/1-9-0.mdx  Co-authored-by: Blake Covarrubias blake@covarrubi.as  Update website/content/docs/release-notes/1-9-0.mdx  Co-authored-by: Blake Covarrubias blake@covarrubi.as  Update website/content/docs/release-notes/1-9-0.mdx  Co-authored-by: Blake Covarrubias blake@covarrubi.as Co-authored-by: Blake Covarrubias blake@covarrubi.as
6275,Add docs for TLS Server Certificate rotation for K8S (#9636), Add docs for TLS Server Certificate rotation for K8s
6276,connect/ca: Allow ForceWithoutCrossSigning for all providers,"This allows setting ForceWithoutCrossSigning when reconfiguring the CA for any provider, in order to forcibly move to a new root in cases where the old provider isn't reachable or able to cross-sign for whatever reason."
6277,Add operations section to k8s notes (#9625),  Add operations section to k8s notes   Unify faq/troubleshooting 
6278,chore: changelog for 9660 (#9668),
6279,auto-updated agent/uiserver/bindata_assetfs.go from commit 3477b1de7,
6280,ui: Keep track of previous node checks and avoid adding them twice (#9661), Keep track of previous node checks and avoid adding them twice
6281,ui: Check for a non-existent items argument/attribute within DataCollection (#9662),
6282,ui: [BUGFIX] Fix missing or duplicate service instance health checks (#9660),  Use NodeName not Node for cross checking proxies/instances   Also copy over the meta data to keep the correct cursor/index   When we sync checks to the ProxyInstance replace rather than accumulate 
6283,state: rename config-entries table const to match new pattern,
6284,state: move config-entries table to new pattern,
6285,state: use indexID,"this change was already made to enterprise, so backporting it."
6286,state: Move ACL schema indexes to match Ent,and use constants for table and index names.
6287,Update go-memdb,To use a version that will not panic when an iterator is used with modifications.
6288,Merge pull request #9302 from hashicorp/dnephin/add-service-3,agent: remove ServiceManager.Start goroutine
6289,Merge pull request #9541 from sadedil/patch-1,"Add a CLI tool for ""Client Libraries & SDKs"" page"
6290,Merge pull request #9493 from Mongey/master,Allow setting arbitrary headers in API client
6291,Merge pull request #9451 from hashicorp/dnephin/config-tests-full,config: make config.TestLoad_FullConfig use config.Load
6292,Merge pull request #9448 from hashicorp/dnephin/config-load-interface,config: reduce interface to a single Load function
6293,contrib: Update contributing checklist for config,
6294,config: make config.TestLoad_FullConfig use config.Load,"This commit makes a number of changes that should make TestLoad_FullConfig easier to work with, and make the test more like real world scenarios.  use separate files in testdata/ dir to store the config source.   Separate files are much easier to edit because editors can syntax   highlight json/hcl, and it makes strings easier to find. Previously   trying to find strings would match strings used in other tests. use the exported config.Load interface instead of internal NewBuilder   and BuildAndValidate. remove the tail config overrides, which are only necessary with   nonZero works."
6295,config: Unexport Builder and NewBuilder,This type and constructor are implementation details of config loading. All callers should use config.Load.
6296,docs: Update Compat Matrix for Consul Helm 0.29 (#9657), docs: Update Compat Matrix for Consul Helm 0.29  Adding 0.29  Update compatibility.mdx
6297,config: replace calls to config.NewBuilder with config.Load,This is another incremental change to reduce config loading to a single small interface. All calls to NewBuilder can be replaced with Load.
6298,config: improve the interface of Load,"This commit reduces the interface to Load() a bit, in preparation for unexporting NewBuilder and having everything call Load. The three arguments are reduced to a single argument by moving the other two into the options struct. The three return values are reduced to two by moving the RuntimeConfig and Warnings into a LoadResult struct."
6299,Merge pull request #9252 from hashicorp/dnephin/config-unmethod,config: remove Builder receiver from funcs that dont use it
6300,ci: reset working directory between cherrypick labels (#9656),
6301,Upgrade raft-autopilot and wait for autopilot it to stop when revoking leadership (#9644),Fixes: 9626
6302,auto-updated agent/uiserver/bindata_assetfs.go from commit 25f989753,
6303,ui: Adds @NullValue attr decorator (#9587),"There are many places in the API where we receive a property set to null which can then lead to defensive code deeper in the app in order to guard for this type of thing when usually we are expecting an array or for the property to be undefined using omitempty on the backend. Previously we had two places where we would deal with this in the serializer using our 'remove-null' util (KV and Intentions). This new decorator lets you declaritively define this type of data using a decorator @NullValue([]) (which would replce a null value with []. @NullValue in turn uses a more generic @replace helper, which we currently don't need but would let you replace any value with another, not just a null value. An additional benefit here is that the guard/replacement is executed lazily when we get the property instead of serializing all the values when they come in via the API. On super large datasets, where we only visualize part of the dataset (say in our scroll panes), this feels like a good improvement on the previous approach."
6304,Add flags to support CA generation for Connect (#9585),
6305,Document proxy-defaults config for prometheus (#9640),
6306,Add changelog entry for change to the temporary client license duration (#9642),
6307,auto-updated agent/uiserver/bindata_assetfs.go from commit 92f0eb3bd,
6308,ui: Re-organize our %h* placeholders (#9584),"We've always had this idea of being able to markup up information semantically without thinking about what it should look like, then applying our %h* placeholder styles to control what the information should look like. Back when we originally made our set of %h* placeholders, we tried to follow Structure as much as possible, which defined the largest header (which we thought would have been the h1 style) as a super large 3.5rem. Therefore we made our set of %h* placeholders the same as Structure beginning at a huge 3.5 size. We then re-overwrote those sizes only in Consul specific CSS files thinking that this was due to us existing before Structure did. Lately we saw an extra clue in Structure - the extra large 3.5 header was called 'h0'. This commit moves all our headers to use a zero based scale, and additionally uses our 3 digit scale as opposed to 1 digit (h1 vs h100), similar to our color scales (note we don't use a hypen, which we can alter later if need be), which means we can insert additional h150 etc if need be. Additional we stop styling our headers globally (h1 { @extend %h100; } ). This means there is no reason not to use headers for marking up content depending on what it is rather than what it should look like, and as a consequence means we can be more purposeful in ordering h* tags. Lastly, we use the new scale over the entire codebase and update a couple of places where we were using using header tags due to what the styleing for them looked like rather than what the meaning/order was."
6309,auto-updated agent/uiserver/bindata_assetfs.go from commit 82a62cd2e,
6310,ui: Sidebar navigation / redesign (#9553), CSS for moving from a horizontal main menu to a side/vertical one  Add  Component and rearrange  to use it   HashicorpConsul now uses    is now translated and adds 'skip to main content' functionality Adds ember-in-viewport addon in order to visibly hide main navigation items in order to take them out of focus/tabbing Slight amends to the dom service while I was there
6311,Merge pull request #9301 from hashicorp/dnephin/add-service-2,agent: reduce AddService 2
6312,fix error in component name on autopilot page (#9638),
6313,server: initialize mgw-wanfed to use local gateways more on startup (#9528),Fixes #9342
6314,Merge pull request #9300 from hashicorp/dnephin/add-service,agent: reduce AddService
6315,agent: use the new lib/mutex for stateLock,"Previously the ServiceManager had to run a separate goroutine so that it could block on a channel send/receive instead of a lock. Using this mutex with TryLock allows us to cancel the lock when the serviceConfigWatch is stopped. Without this change removing the ServiceManager.Start goroutine would not be possible because when AddService is called it acquires the stateLock. While that lock is held, if there are existing watches for the service, the old watch will be stopped, and the goroutine holding the lock will attempt to wait for that watcher goroutine to exit. If the goroutine is handling an update (serviceConfigWatch.handleUpdate) then it can block on acquiring the stateLock and deadlock the agent.  With this change the context is cancelled as and the goroutine will exit instead of waiting on the stateLock."
6316,lib/mutex: add mutex with TryLock and update vendor,
6317,agent: remove ServiceManager goroutine,"The ServiceManager.Start goroutine was used to serialize calls to agent.addServiceInternal. All the goroutines which sent events to the channel would block waiting for a response from that same goroutine, which is effectively the same as a synchronous call without any channels. This commit removes the goroutine and channels, and instead calls addServiceInternal directly. Since all of these goroutines will need to take the agent.stateLock, the mutex handles the serializing of calls."
6318,agent: Minor cosmetic changes in ServiceManager,Also use the non-deprecated func in a test
6319,agent: update godoc for AddServiceRequest,
6320,agent: move checkStateSnapshot,"Move the field into the struct for addServiceLocked. Also don't require setting a default value, so that the callers can leave it as nil if they don't already have a snapshot."
6321,agent: move two fields off of AddServiceRequest,
6322,agent: Replace two fields on AddServiceRequest with a func field,The two previous fields were mutually exclusive. They can be represented with a single function which provides the value.
6323,agent: remove serviceRegiration type,"Replace with the existing AddServiceRequest struct. These structs are almost identical. Additionally, the only reason the serviceRegistration struct existed was to recreate an AddServiceRequest. By storing and re-using the AddServiceRequest we remove the need to translate into one type and back to the original type. We also remove the extra parameters to a function, because those values are already available from the AddServiceRequest field. Also a minor optimization to only call tokens.AgentToken() when necessary. Previous it was being called every time, but the value was being ignored if the AddServiceRequest had a token."
6324,agent: remove an a branch in the AddService flow,"Handle the decision to use ServiceManager in a single place. Instead of calling ServiceManager.AddService, then calling back into addServiceInternal, only call ServiceManager.AddService if we are going to use it. This change removes some small duplication and removes a branch from the AddService flow."
6325,"agent: use fields directly, not temp variables",The temprorary variables make it much harder to trace where and how struct fields are used. If a field is only used a small number of times than refer to the field directly.
6326,agent: addServiceIternalRequest,Move fields that are only relevant for addServiceInternal onto a new struct and embed AddServiceRequest.
6327,agent: move deprecated AddServiceFromSource to a test file,"The method is only used in tests, and only exists for legacy calls. There was one other package which used this method in tests. Export the AddServiceRequest and a couple of its fields so the new function can be used in those tests."
6328,agent: use a single method for Agent.AddService,
6329,agent: rename AddService->AddServiceFromSource,In preparation for extracting a single AddService func that accepts a request struct.
6330,Merge pull request #9420 from hashicorp/dnephin/reduce-duplicate-in-catalog-schema,state: reduce interface for Enterprise schema
6331,"changelog: add entries for v1.8.8, v1.8.7, 1.7.12 and 1.7.11 (#9627)",
6332,chore: regenerate envoy golden files (#9634),
6333,connect: add local_request_timeout_ms to configure local_app http timeouts (#9554),
6334,server: use the presense of stored federation state data as a sign that we already activated the federation state feature flag (#9519),This way we only have to wait for the serf barrier to pass once before we can make use of federation state APIs Without this patch every restart needs to re-compute the change.
6335,auto-updated agent/uiserver/bindata_assetfs.go from commit 09d917618,
6336,Trailing ui/vercel fixes (#9633),"  update ui staging for vercel   move vercel.json   missed a couple things, sorry "
6337,auto-updated agent/uiserver/bindata_assetfs.go from commit 88d5e00f9,
6338,Update UI staging build for vercel hosting (#9628),  update ui staging for vercel   move vercel.json   add a couple more settings   fix comments 
6339,auto-updated agent/uiserver/bindata_assetfs.go from commit bb9573832,
6340,ui: Search/filtering 'Filtered by:' search status (#9442),"Adds a 'status' for the filtering/searching in the UI, without this its not super clear that you are filtering a recordset due to the menu selections being hidden once closed. You can also use the pills in this status view to delete individual filters."
6341,server: add OSS stubs supporting validation of source namespaces in service-intentions config entries (#9527),
6342,changing HCP Consul to reflect GA ,"currently still pointing at private beta link, need to fix for GA."
6343,docs: Add k8s troubleshooting docs (hostPort vs hostNetwork) (#9464),
6344,Merge pull request #9612 from hashicorp/ui-ingress,Update docs with fields for ingress support for consul UI
6345,Update docs with fields for ingress support for consul UI,
6346,Update index.mdx (#9618),
6347,ci: fix logic for check-vendor (#9619),
6348,server: when wan federating via mesh gateways only do heuristic primary DC bypass on the leader (#9366),Fixes #9341
6349,ci: change check-vendor to verify git status has no changes (#9615),
6350,chore: run 'make update-vendor' (#9614),
6351,Merge pull request #9477 from nathanejohnson/feature/allowvalidlocalbuilds,Allow any supported goos/goarch combination to be built locally
6352,Remove tool ref from the wrong page,
6353,Add new CLI tool to Community Tools Page (kvit),
6354,Note to steer consumers away from unmaintained python-consul (#9544), Quick note to steer consumers away from unmaintained python-consul
6355,Fix link color on home page (#9611),  Fix learn-callout theming   Fix link color in cloud-offerings-list 
6356,website: remove netlify artifacts and port missing redirects over to new format (#9601),  website: port existing new redirects old format   website: remove netlify specific artifacts 
6357,Merge pull request #9604 from hashicorp/merge/release-1.9.2,Release 1.9.2
6358,Release 1.9.2,
6359,Add RSA Test case for generating CA Cert,
6360,Reuse Connect.parseSigner.Adds change from #8898,Co-authored-by: Aliaksandr Mianzhynski amenzhinsky@gmail.com
6361,Add RSA Support to KeyID,
6362,Add support for RSA private key to TLS utils.,Co-authored-by: Thomas Detoux detoux@gmail.com
6363,auto-updated agent/uiserver/bindata_assetfs.go from commit 02772e46a,
6364,Fix -ui-content-path without regex (#9569), Add templating to inject JSON into an application/json script tag  Plus an external script in order to pick it out and inject the values we need injecting into ember's environment meta tag. The UI still uses env style naming (CONSUL_*) but we uses the new style JSON/golang props behind the scenes. Co-authored-by: Paul Banks banks@banksco.de
6365,ui: Changelog for #9593 (#9598),
6366,auto-updated agent/uiserver/bindata_assetfs.go from commit ffb6680e7,
6367,ui: Removing formatting to display LockDelay in nanoseconds (#9594),  Removing formatting to display LockDelay in nanoseconds   Update test   Add changelog 
6368,api: Ensure the internal/ui/gateway-service-nodes endpoint responds with an array (#9593),"In some circumstances this endpoint will have no results in it (dues to ACLs, Namespaces, filtering or missing configuration). This ensures that the response is at least an empty array ([]) rather than null"
6369,Fix flaky test by marking mock expectations as optional (#9596),These expectations are optional because in a slow CI environment the deadline to cancell the context might occur before the go routine reaches issuing the RPC. Either way we are successfully ensuring context cancellation is working.
6370,chore: Changelog entry for #9524 (#9595),
6371,auto-updated agent/uiserver/bindata_assetfs.go from commit 30014ff8f,
6372,ui: Convert Service.GatewayConfig to a model fragment (#9586)," ui: Convert Service.GatewayConfig to a model fragment  We added the ember-intl addon, which has its own format-number helper. We replaced our own similarly named helper with this one, but the ember-intl one is far stricter and errors if the arguments passed are undefined. Our previously one would cope with this. We'd rather continue to use the stricter ember-intl helper, so here we convert the GatewayConfig property to a model fragment so that we can give the GatewayConfig.AssociatedServices property a default zero value."
6373,Update topology mapping Refs on all proxy instance deletions (#9589),  Insert new upstream/downstream mapping to persist new Refs   Avoid upserting mapping copy if it's a no-op   Add test with panic repro   Avoid deleting up/downstreams from inside memdb iterator   Avoid deleting gateway mappings from inside memdb iterator   Add CHANGELOG entry   Tweak changelog entry   Co-authored-by: Paul Banks banks@banksco.de
6374,Move header methods from config to client,
6375,Only override headers if they're set,
6376,Prefer http.Header over map[string]string to allow for multi-valued headers,
6377,Allow setting arbitrary headers in API client,
6378,Merge pull request #9591 from hashicorp/dnephin/state-store-coordinates-iter,state: do not delete from inside an iteration (coordinates)
6379,state: do not delete from inside an iteration,"Deleting from memdb inside an interation can cause a panic from Iterator.Next. This case is technically safe (for now) because the iterator is using the root radix tree not a modified one. However this could break at any time if someone adds an insert or delete to the coordinates table before this place in the function. It also sets a bad example, because generally deletes in an interator are not safe. So this commit uses the pattern we have in other places to move the deletes out of the iteration."
6380,Merge pull request #9570 from hashicorp/bugfix/9498,
6381,Fix flaky CLI Intention Listing Test,
6382,Ensure that CA initialization does not block leader election.,After fixing that bug I uncovered a couple more: Fix an issue where we might try to cross sign a cert when we never had a valid root. Fix a potential issue where reconfiguring the CA could cause either the Vault or AWS PCA CA providers to delete resources that are still required by the new incarnation of the CA.
6383,auto-updated agent/uiserver/bindata_assetfs.go from commit be694366a,
6384,ui: Topology intention saving improvements (#9513)," ui: Keep track of existing intentions and use those to save changes  Previously we risked overwriting existing data in an intention if we tried to save an intention without having loaded it first, for example Description and Metadata would have been overwritten. This change loads in all the intentions for an origin service so we can pick off the one we need to save and change to ensure that we don't overwrite any existing data."
6385,auto-updated agent/uiserver/bindata_assetfs.go from commit 41a4a9f4f,
6386,ui: Improves the 'you must provide ... to generate' error from href-to (#9514),This originally comes form the ember-href-to helper and is one of those errors that when I see it I think ... hmmm This gives a little bit more of a clue as to what is wrong by logging the route name you asked for plus the params you passed to it so you:  Have more help finding the href-to that is problematic in the template/component Can see all the parameters you passed (including a potential null parameter for the thing you are missing)
6387,Update options.mdx (#9578),MInor typo.
6388,state: add a regression test for state store schema,To allow the index to be refactored without accidental changes. To update the expected value run: 'go test ./agent/consul/state -update'
6389,state: reduce interface for Enterprise schema,"Using withEnterpriseSchema() we can apply any enterprise schema changes with a single shim, removing the need to duplicate all of the table definitions. Also move all the catalog schemas to a new file to shrink catalog.go a bit."
6390,Merge pull request #9455 from hashicorp/dnephin/update-mapstructure,Update mapstructure dependency
6391,Merge pull request #9565 from hashicorp/ci/load-test-automation,ci: add load test automation
6392,docs: Update load test documentation and minor clean ups  (#9548),
6393,change trigger label to pr/load-test,
6394,Merge pull request #8696 from hashicorp/dnephin/fix-load-limits,agent/consul: make Client/Server config reloading more obvious
6395,Merge pull request #9436 from hashicorp/dnephin/fix-service-health-req-cache-key,structs: fix caching of ServiceSpecificRequest when ingress=true
6396,agent/consuk: Rename RPCRate -> RPCRateLimit,so that the field name is consistent across config structs.
6397,agent/consul: make Client/Server config reloading more obvious,"I believe this commit also fixes a bug. Previously RPCMaxConnsPerClient was not being re-read from the RuntimeConfig, so passing it to Server.ReloadConfig was never changing the value. Also improve the test runtime by not doing a lot of unnecessary work."
6398,Merge pull request #9460 from hashicorp/dnephin/fix-data-races,Fix a couple data races in tests
6399,structs: fix caching of ServiceSpecificRequest when ingress=true,"The field was not being included in the cache info key. This would result in a DNS request for web.service.consul returning the same result as web.ingress.consul, when those results should not be the same."
6400,Merge pull request #9558 from hashicorp/br.stack-menu,[Website] StackMenu updates for 1/14
6401,Remove guides that live in learn.hashicorp.com now (#9563),
6402,modify envoy test job names to make circleci happy,
6403,add load test configuration,
6404,upload zip instead of tar dev builds,
6405,modify aws assume role circleci command,
6406,add github action to trigger load tests based on PR label,
6407,add PR load test terraform config,
6408,add terraform files to gitignore,
6409,Fix link markup in docs/connect/ca/vault,
6410,Move cfg entry docs to under connect from agent (#9533),Since all config entries are currently related to service mesh it's a much more natural place to look for them under Service Mesh than under Agent.
6411,Website StackMenu updates for 1/14,
6412,auto-updated agent/uiserver/bindata_assetfs.go from commit 1e30503ec,
6413,ui: Show a feedback icon instead of a learn icon in the help menu (#9552),
6414,Docs Website: prepare for move to vercel hosting (#9427),  prepare for move to vercel hosting   add html extension redirect handling   temporarily add back netlify files for hosting transition 
6415,add completeness test for types with CacheInfo method (#9480),include all fields when fuzzing in tests split tests by struct type Ensure the new value for the field is different fuzzer.Fuzz could produce the same value again in some cases. Use a custom fuzz function for QueryOptions. That type is an embedded struct in the request types but only one of the fields is important to include in the cache key. Move enterpriseMetaField to an oss file so that we can change it in enterprise.
6416,Merge pull request #9212 from hashicorp/mkcp/telemetry/add-grafana-dash-json,add the latest export-for-public revision of the consul-server-monitoring grafana dash
6417,add readme outlining how to edit and publish,
6418,Fix bug in usage metrics when multiple service instances are changed in a single transaction (#9440)," Fix bug in usage metrics that caused a negative count to occur  There were a couple of instances were usage metrics would do the wrong thing and result in incorrect counts, causing the count to attempt to decrement below zero and return an error. The usage metrics did not account for various places where a single transaction could delete/update/add multiple service instances at once. We also remove the error when attempting to decrement below zero, and instead just make sure we do not accidentally underflow the unsigned integer. This is a more graceful failure than returning an error and not allowing a transaction to commit.  Add changelog"
6419,cli: Add consul intention list command (based on PR #6825) (#9468),"This PR is based on the previous work by @snuggie12 in PR #6825. It adds the command consul intention list to list all available intentions. The list functionality for intentions seems a bit overdue as it's just very handy. The web UI cannot list intentions outside of the default namespace, and using the API is sometimes not the friendliest option. ;) I cherry picked snuggie12's commits who did most of the heavy lifting (thanks again @snuggie12 for your great work!). The changes in the original commit mostly still worked on the current HEAD. On top of that I added support for namespaces and fixed the docs as they are managed differently today. Also the requested changes related to the ""Connect"" references in the original PRs have been addressed. Fixes #5652 Co-authored-by: Matt Hoey mhoey05@jcu.edu"
6420,Update mapstructure,
6421,auto-updated agent/uiserver/bindata_assetfs.go from commit b86eea4fb,
6422,ui: Rename a model attribute to not be overwritten by ember-data (#9524),"  Rename a model attr to not be overwritten by ember-data   Make sure we can click on the instances   Make sure we can click back to the preevious page, not root   Add a forwards/back/forwards navigation test for service instances   Rename a model attr to not be overwritten by ember-data   Co-authored-by: John Cowen jcowen@hashicorp.com"
6423,config: remove Builder receiver from funcs that dont use it,"This change allows us to re-use these functions in other places without the Builder, and makes it more explicit about which functions can warn/error and which can not."
6424,Merge pull request #9444 from hashicorp/dnephin/config-tests-sanitize,config: Use golden for TestRuntimeConfig_Sanitize
6425,contrib: update config checklist docs,
6426,config: Use golden for TestRuntimeConfig_Sanitize,A golden file makes the expected value easier to work with. This change also removes a number of shims for enterprise and replaces them with a single one for the golden filename.
6427,docs/nia: Fix example config block to execute properly (#9547),"CTS running with default configuration will communicate over http unless the Consul client is configured with TLS. Having the example set the scheme to https is misleading and will result in an error: ""http: server gave HTTP response to HTTPS client"""
6428,Merge pull request #9546 from hashicorp/mw.update-alert-banner-webinar,website: update alert banner to promote webinar
6429,website: update alert banner to promote webinar,
6430,"Add a CLI tool for ""Client Libraries & SDKs"" page","Hi everyone, I'm developing an open source CLI tool for easily editing Consul KV values from your favorite text editor. I've added to Client Libraries & SDKs page on website. Repository: https://github.com/sadedil/kvit Kind regards, Mustafa"
6431,Update k8s gateway docs for CRDs (#9538),
6432,Display a warning when rpc.enable_streaming = true is set on a client (#9530), Display a warning when rpc.enable_streaming = true is set on a client  This option has no effect when running as an agent   Added warning when server starts with use_streaming_backend but without rpc.enable_streaming   Added unit test 
6433,Log replication warnings when no error suppression is defined (#9320),  Log replication warnings when no error suppression is defined   Add changelog file 
6434,Merge pull request #9250 from hashicorp/dnephin/config-tags-2,config: remove unnecessary json/hcl struct tags
6435,chore: Adds changelog entry for accessibility improvements (#9509),
6436,Merge pull request #9249 from hashicorp/dnephin/config-tags,config: use fields to detect enterprise-only settings
6437,config: remove unnecessary json/hcl struct tags,"Using find/replace with regex     json:""[^""]+""     hcl:""[^""]+"""
6438,config: Use config fields to warn about enterprise settings,"It is no safe to assumes that the mapstructure keys will contain all the keys because some config can be specified with command line flags or literals. This change allows us to remove the json marshal/unmarshal cycle for command line flags, which will allow us to remove all of the hcl/json struct tags on config fields."
6439,Document how clients not on K8s can join a DC in K8s. (#9438),
6440,Merge pull request #9251 from hashicorp/dnephin/config-cleanup-flags-and-opts,config: move testing shims and cleanup some defaults
6441,Merge pull request #7583 from hashicorp/dnephin/id-printing,Fix printing of ID types
6442,config: use LiteralConfig for flag values,
6443,config: remove t.Parallel and some unused fields from tests,Use go-cmp for better diffs in tests
6444,structs: add tests for String() methods,To show that printing one of these IDs works properly now that the String() method receiver is no longer a pointer.
6445,structs: Fix printing of IDs,These types are used as values (not pointers) in other structs. Using a pointer receiver causes problems when the value is printed. fmt will not call the String method if it is passed a value and the String method has a pointer receiver. By using a value receiver the correct string is printed. Also remove some unused methods.
6446,Merge pull request #9461 from hashicorp/dnephin/xds-server,xds: enable race detector and some small cleanup
6447,Remove an unnecessary else,
6448,xds: remove Server.Initialize,Requiring a call to initialize to set a single field is not really substantially different from having to set that field to a value.
6449,xds: Fix data race,"TestEnvoy.Close used e.stream.recvCh == nil to indicate the channel had already been closed, so that TestEnvoy.Close can be called multiple times. The recvCh was not protected by a lock, so setting it to nil caused a data race with any goroutine trying to read from the channel. Instead set the stream to nil. The stream is guarded by a lock, so it does not race. This change allows us to test the agent/xds package using -race."
6450,xds: Pass in logger,small cleanup in tests
6451,Reword redirect docs for clarity (#9504),
6452,Document CRDs and kube namespaces (#9502), Document CRDs and kube namespaces
6453,Merge pull request #9516 from hashicorp/lkysow/config-entry-sidebar,Use full names for cfg entries in sidebar
6454,Merge pull request #9416 from hashicorp/luke-component-crd,Document Kube CRDs alongside config entry docs
6455,Add note about code duplication,
6456,auto-updated agent/uiserver/bindata_assetfs.go from commit e893ba7ea,
6457,"update start script, remove extra tabs code",
6458,"ci: Explicitly specify a default target, don't use the first target (#9521)",
6459,update to latest deps,
6460,Use nested tabs for gateway examples,
6461,Merge pull request #8609 from hashicorp/dnephin/add-query-options-to-ServiceRegister,api: Add a context to ServiceRegisterOpts
6462,Merge pull request #9213 from hashicorp/dnephin/resolve-tokens-take-2,acl: Remove some unused things and document delegate method
6463,Merge pull request #9518 from hashicorp/dnephin/fix-integration-test-fail,Pin alpine/socat image to a version
6464,Pin alpine/socat image to a version.,"To fix failing integration tests. The latest version (1.7.4.0-r0) appears to not be catting all the bytes, so the expected metrics are missing in the output."
6465,website source code moved (#9517),
6466,Merge pull request #9512 from pierresouchay/streaming_fix_grpc_tls2,[Streaming][bugfix] handle TLS signalisation when TLS is disabled on client side (alternative to #9494)
6467,Merge pull request #9515 from hashicorp/watsonian/docs-snapshot-save-tmpdir,docs: add note about TMPDIR for snapshots
6468,Added testing of GRPC with TLS combinations,This ensures that https://github.com/hashicorp/consul/issues/9474 will not reproduce.
6469,Use full names for cfg entries in sidebar,
6470,docs: add note about TMPDIR for snapshots,
6471,Merge pull request #9510 from pierresouchay/prometheus_metrics_help_duplicate_fix,[bugfix] Prometheus metrics without warnings
6472,ui: Remove ui-staging from CI (#9508), Remove all mention of ui-staging as we don't use that branch name
6473,ui: Add license checker to the workspace plus CI (#9507), ui: Adds license-checker plus manually run package script
6474,Clean up JS for ConfigEntryReference component,
6475,[Streaming][bugfix] handle TLS signalisation when TLS is disabled on client side,Tnis is an alternative to https://github.com/hashicorp/consul/pull/9494
6476,[bugfix] Prometheus metrics without warnings,go-metrics is updated to 0.3.6 to properly handle help in prometheus metrics This fixes https://github.com/hashicorp/consul/issues/9303 and https://github.com/hashicorp/consul/issues/9471
6477,acl: use the presence of a management policy in the state store as a sign that we already migrated to v2 acls (#9505),"This way we only have to wait for the serf barrier to pass once before we can upgrade to v2 acls. Without this patch every restart needs to re-compute the change, and potentially if a stray older node joins after a migration it might regress back to v1 mode which would be problematic."
6478,Update pr-labeler to new NIA docs path (#9501),Artifact from https://github.com/hashicorp/consul/pull/9352
6479,Update NIA discuss link to new tag (#9500),
6480,Add changelog for #9487 (#9491),
6481,auto-updated agent/uiserver/bindata_assetfs.go from commit 1304dc882,
6482,Document Kube CRDs alongside config entry docs, Adds a new react component ConfigEntryReference that allows us to document config entries for both HCL and Kubernetes CRDs. Rewrites config entry docs to use new component Add CRD examples alongside HCL examples Removes examples from Kube CRD doc because the examples are now in the main CRD docs
6483,ui: Adds localStorage to  mapping for user controlled theming (#9496),
6484,Merge pull request #9067 from naemono/6074-allow-config-MaxHeaderBytes,Adds option to configure HTTP Server's MaxHeaderBytes
6485,auto-updated agent/uiserver/bindata_assetfs.go from commit a42e844cc,
6486,"ui: Add EmptyState for exposed paths, plus additional details (#9445)","  ui: Add EmptyState for exposed paths, plus additional details   Add the port to the combined address   Use the proxy address for the ip address used   Convert to glimmer component   Add spaces to ListenerPort and LocalPathPort Tooltips "
6487,auto-updated agent/uiserver/bindata_assetfs.go from commit 17438020f,
6488,ui: Accessibility scan improvements (#9485),"  ui: Remove all vestiges of role=tabpanel   Switch out tablist role for a label, default to Secondary   Move healthcheckout-output headers to h2, ideally these would be outside the component   Add aria-label for empty button   Fix up non-unique ids in topology component   Temporarily fixup h2 in KV > LockSession   Fixup dl with no dt   h3 > h2   Fix up page objects that were reliant on ids "
6489,ui: Fix up erroneously placed conditional (#9447),"This meant that when where were no upstreams, no message would show telling you of that fact. This commit means an EmptyState will now show instead."
6490,Remove unneeded test,
6491,Merge pull request #9029 from zhsj/sysctl,sdk: read procfs instead of using sysctl command
6492,Special case the error returned when we have a Raft leader but are not tracking it in the ServerLookup (#9487),This can happen when one other node in the cluster such as a client is unable to communicate with the leader server and sees it as failed. When that happens its failing status eventually gets propagated to the other servers in the cluster and eventually this can result in RPCs returning “No cluster leader” error. That error is misleading and unhelpful for determing the root cause of the issue as its not raft stability but rather and client -> server networking issue. Therefore this commit will add a new error that will be returned in that case to differentiate between the two cases.
6493,auto-updated agent/uiserver/bindata_assetfs.go from commit 8c9d5ecc2,
6494,ui: [BUGFIX] Role/Policy selector default sort (#9434), Sort the options when they aren't being searched
6495,ci: update to Go 1.15.6 (#9373),
6496,server: deletions of intentions by name using the intention API is now idempotent (#9278),Restoring a behavior inadvertently changed while fixing #9254
6497,ui: [BUGFIX] Request intention listing with ns parameter (#9432),This PR adds the ns=* query parameter when namespaces are enabled to keep backwards compatibility with how the UI used to work (Intentions page always lists all intention across all namespace you have access to) I found a tiny dev bug for printing out the current URL during acceptance testing and fixed that up while I was there.
6498,changelog: add 1.9.1 entries (#9486),  add 1.9.1 changelog entries   bump dev version to 1.10.0 
6499,auto-updated agent/uiserver/bindata_assetfs.go from commit 8c0473a62,
6500,ui: [BUGFIX] Ensure namespace is used for node API requests (#9410),"Nodes themselves are not namespaced, so we'd originally assumed we did not need to pass through the ns query parameter when listing or viewing nodes. As it turns out the API endpoints we use to list and view nodes (and related things) return things that are namespaced, therefore any API requests for nodes do require a the ns query parameter to be passed through to the request. This PR adds the necessary ns query param to all things Node, apart from the querying for the leader which only returns node related information. Additionally here we decided to show 0 Services text in the node listing if there are nodes with no service instances within the namespace you are viewing, as this is clearer than showing nothing at all. We also cleaned up/standardized the text we use to in the empty state for service instances."
6501,Merge branch 'master' into 6074-allow-config-MaxHeaderBytes,
6502,Fixed failing tests,"Removed use of NewTestAgent, per review comment Removed CLI flag, per review comment Updated website documentation Added changelog entry"
6503,Allow any supported goos/goarch combination to be built locally,fixes #9476
6504,Update Helm reference docs (#9463),
6505,Maybe fix another data race in a test,
6506,Fix one race caused by t.Parallel,
6507,Update with 0.28 (#9450),
6508,Merge pull request #9431 from hashicorp/gen-docs2,Ensure type shown for maps in k8s docs
6509,Update helm docs for external client agents. (#9429),
6510,auto-updated agent/uiserver/bindata_assetfs.go from commit 99f102705,
6511,ui: Fuzzy and Regex searching (#9424),"Moves search things around to match an interface that can be switched in and out of fuzzy searching using fuse.js. We add both fuzzy searching and regex based searching to the codebase here, but it is not yet compiled in."
6512,auto-updated agent/uiserver/bindata_assetfs.go from commit 25d6a1277,
6513,ui: Use InformedAction for KV table row delete confirmations (#9425),
6514,docs: Remove beta tag for 1.8 and 1.9 features,Remove beta tag for 1.8 and 1.9 features which are now GA.
6515,Ensure type shown for maps in k8s docs,
6516,auto-updated agent/uiserver/bindata_assetfs.go from commit c7d917777,
6517,ui: Add Local flag to local dc in dropdown (#9419),  Add Local flag to local dc in dropdown   Remove brand color from the check   Move styling to main-nav-horizonal styling sheets 
6518,Use generated helm docs (#9324),
6519,Up testing threshold for Circle (#9418),
6520,auto-updated agent/uiserver/bindata_assetfs.go from commit 2e3a66efb,
6521,ui: Misc changes for Catalog area (#9414),  Use DataLoader errors for Service Detail and Service Instance   uiCfg > config use the repo-like async interface where possible   Clean up node show   Make sure you can put = in dev cookie values   Never default to default   Tweak chain variable   Remove env service   Pass chain through to the template for the tempalte to clean it up   Delete controller tests   Remove cleanup in Nodes show as this is still being used in another tab   Use dc.Local 
6522,auto-updated agent/uiserver/bindata_assetfs.go from commit 635cf4dc9,
6523,ui: Change references to L7 to say Layer 7 (#9412),
6524,auto-updated agent/uiserver/bindata_assetfs.go from commit 66cc91c69,
6525,ui: Show the No Dependencies message when a Topology has no streams (#9413),Also changes the upstreams docs link
6526,Merge pull request #9352 from hashicorp/je.mdx-remote,Implement mdx-remote
6527,add markdown page component,
6528,"update deps, restore search",
6529,"maintenance complete, pending markdown-page component addition",
6530,nia/docs 0.1.0-techpreview2 (#9405),Co-authored-by: Lorna Song lorna@hashicorp.com
6531,auto-updated agent/uiserver/bindata_assetfs.go from commit 0ca54c608,
6532,ui: Add new dev UI environment variables to the README (#9411),
6533,auto-updated agent/uiserver/bindata_assetfs.go from commit 4404b4f44,
6534,ui: Set overflow: auto on the tab nav (#9402),"This ensures scroll bars are mainly hidden, yet visible on small screens if the tabs are large enough for there to be an overflow"
6535,ui: Rearrange Service detail page to load Topology and Routing tabs separately (#9401),
6536,Minor load test fixes (#9394),
6537,update comment to correctly reflect type of data in the oidc auth method config (#9364),
6538,Merge pull request #9262 from hashicorp/dnephin/docs-deprecate-old-filters,docs: deprecate some old filter parameters
6539,Rotate Learn tutorials (#9404),  update Learn tutorials on landing page   add Vault image 
6540,update example for tag_name (#9226)," update example for tag_name  In the example for azure the ""tag_name"" field is wrong cause say ""tag_key"" and not ""tag_name""  change tag_key by tag_name in the description of azure"
6541,Merge pull request #9369 from brd/typo-fix,Fix a typo in the CHANGELOG
6542,auto-updated agent/uiserver/bindata_assetfs.go from commit a919b60f5,
6543,ui: Return empty state for no health check in Topology Cards (#9403),
6544,Fixed mesh gateway config instructions (#9396),"Added missing words to mesh gateway config instructions, and corrected punctuation a paragraph above. Please review for technical accuracy."
6545,auto-updated agent/uiserver/bindata_assetfs.go from commit e921b3cf9,
6546,ui: Install ember-intl (#9399), ui: Install ember-intl  Also:  Removes our own format-number in order to use ember-intl's instead Moves format-time to format-short-time so as to not clash with ember-intls own format-time
6547,auto-updated agent/uiserver/bindata_assetfs.go from commit 5e150d7f0,
6548,ui: Lint get-environment.js (#9400),
6549,api: Ensure the internal/ui/service endpoint responds with an array (#9397),"In some circumstances this endpoint will have no results in it (dues to ACLs, Namespaces or filtering). This ensures that the response is at least an empty array ([]) rather than null"
6550,auto-updated agent/uiserver/bindata_assetfs.go from commit 9f0787197,
6551,ui: Use InformedAction for intention confirmation dialogs (#9398),
6552,auto-updated agent/uiserver/bindata_assetfs.go from commit f111d6b3e,
6553,ui: Dev/Test environment configurable metrics (#9345),"In order to test certain setups for our metrics visualizations we need to be able to setup several different ui_config settings during development/testing. Generally in the UI, we use the Web Inspector to set various cookie values to configure the UI how we need to see it whilst developing, so this PR:  Routes ui_config through a dev time only CONSUL_UI_CONFIG env variable so we can change it via cookies vars. Adds CONSUL_METRICS_PROXY_ENABLE, CONSUL_METRICS_PROVIDER and CONSUL_SERVICE_DASHBOARD_URL so it's easy to set/unset these only values during development. Adds an acceptance testing step so we can setup ui_config to whatever we want during testing. Adds an async 'repository-like' method to the UiConfig Service so it feels like a repository - incase we ever need to get this via an HTTP API+blocking query. Vaguely unrelated: we allow cookie values to be set via the location.hash whilst in development only e.g. /ui/services#CONSUL_METRICS_PROXY_ENABLE=1 so we can link to different setups if we ever need to.  All values added here are empty/falsey by default, so in order to see how it was previously you'll need to set the appropriate cookies values, but you can now also easily preview/test the the metrics viz in different/disabled states (with differing ui_config)"
6554,docs: call out intentions upgrade issue for 1.9.0+ (#9386),
6555,auto-updated agent/uiserver/bindata_assetfs.go from commit 14d043e5f,
6556,ui: Show local datacenter by default on first visit (#9377),"  Add Local property to Datacenters   If you have not previous datacenter, redirect the user to the local dc   Add an is-local class to the local datacenter in the DC picker "
6557,ui: Move linting to the node:test script (#9385),  Reconfigure linting to be a node-test   Fixup linting across the project 
6558,auto-updated agent/uiserver/bindata_assetfs.go from commit 4e419b9b3,
6559,ui: Add External Sources Filter to Node > Service Instances (#9368),  Add service collections to get all ExternalServices   Add a basic collection helper   Use the collections to get all ExternalSources   Remove old Controllers 
6560,Merge pull request #8813 from hashicorp/dnephin/http-use-cache,http: Check HTTPUseCache in a single place
6561,Allow consul version/consul download url to be inputted via Terraform  (#9267),
6562,http: Check HTTPUseCache in a single place,"HTTPUseCache is only used is a gate for allowing QueryOptions.UseCache to be enabled. By moving it to the place where the query options are set, this behaviour is more obvious. Also remove parseInternal which was an alias for parse."
6563,Merge pull request #9340 from hashicorp/dnephin/skip-slow-tests-with-short,testing: skip slow tests with -short
6564,fix 'agent/check/pass/my-check-id' curl example in documentation (#9372),
6565,auto-updated agent/uiserver/bindata_assetfs.go from commit 514270a41,
6566,ui: Controller dead code removal (#9367), ui: Controller dead code removal  This commit removes a little code that became 'dead' as a result of previous PRs/commits   Remove a little more from the settings Controller   Remove CSS related to being able to set the dashboard_url in settings 
6567,auto-updated agent/uiserver/bindata_assetfs.go from commit 0f7c909f1,
6568,ui: Improved Discovery Chain resizing (#9360),  install on-resize modifier   Rerrange things to use on-resize modifier for positioning 
6569,auto-updated agent/uiserver/bindata_assetfs.go from commit 21e5a8f0f,
6570,ui: Remove random undefined from codemod run (#9370),
6571,"The config element is enabled, not enable",
6572,Filter API Docs (#9202),  reorganize for clarity and update for value syntax   fix quotes around value   Apply suggestions from code review   Co-authored-by: Blake Covarrubias blake@covarrubi.as  Apply suggestions from code review  Co-authored-by: Freddy freddygv@users.noreply.github.com Co-authored-by: Blake Covarrubias blake@covarrubi.as Co-authored-by: Freddy freddygv@users.noreply.github.com
6573,acl: global tokens created by auth methods now correctly replicate to secondary datacenters (#9351),Previously the tokens would fail to insert into the secondary's state store because the AuthMethod field of the ACLToken did not point to a known auth method from the primary.
6574,[Website] Update alert banner (#9361),  Update alert banner   Update expiration date for banner 
6575,auto-updated agent/uiserver/bindata_assetfs.go from commit 9d8131907,
6576,ui: Use pill/badge components for intention filter options (#9357),
6577,ui: Remove old style 'filterable' searching (#9356),  Switch upstream-instances to use new style of searchable   Add search action to DataCollection plus basic README   Use DataCollection for PowerSelect searching in child-selectors   Remove old style filterable search for role/policies and instances   Remove old helpers/components related to search/sort/filter 
6578,auto-updated agent/uiserver/bindata_assetfs.go from commit a78566e2d,
6579,ui: Send item name down to Stats to call endpoint (#9358),  Refactor Stats and Series components   Remove unused variable from being passed down to Stats   Add item name to be passed down to Stats 
6580,auto-updated agent/uiserver/bindata_assetfs.go from commit d6cb2b0d7,
6581,ui: Update UI README (#9346),
6582,Merge pull request #9343 from hashicorp/dnephin/developer-docs-streaming,docs: Add developer documentation and diagrams for streaming
6583,Create consul version metric with version label (#9350),  create consul version metric with version label   agent/agent.go: add pre-release Version as well as label   Co-Authored-By: Radha13 kumari.radha3@gmail.com   verion and pre-release version labels.   hyphen/- breaks prometheus   Add Prometheus gauge defintion for version metric   Add new metric to telemetry docs   Co-authored-by: Radha Kumari kumari.radha3@gmail.com Co-authored-by: Aestek thib.gilles@gmail.com Co-authored-by: Daniel Nephin dnephin@hashicorp.com
6584,auto-updated agent/uiserver/bindata_assetfs.go from commit 27c74f714,
6585,ui: New search/sort/filtering bar for Node > ServiceInstances (#9326)," Model layer changes to turn Node:ServiceInstances into hasMany  We tried to make something that feels a little like ember-data yet not leave our approach of re-shaping the JSON directly from the response.   We added transformHasManyResponse for re-shaping JSON for hasMany relationships. we avoided the normalize word as ember-data serialize methods usually return something JSON:API shaped and we distinctly don't want to do that. Transform was the best word we could think of.   The integration tests across all of our models here feel very much like those types of tests that aren't really testing much, or assert too much to an extent that they get in the way rather than be of any use. I'd very much like to move a lot of this to unit tests. Currently most of the fingerprinting functionality is unit tested and these integration tests were originally to give confidence that IDs and related properties were being added correctly.   We've added a hasMany relationship, but not the corresponding belongsTo - yet at least. We don't require the belongsTo right now, and if we do  we can add it later.   Integrate ServiceInstance search bar for Node:ServiceInstances   Hide Node.Meta when on the Node:ServiceINstance page   We use a little string replace hack here for a human-like label, this is soon to be replaced with proper i10n replacement  Always ensure that a Namespace is set, and add comment explaining"
6586,auto-updated agent/uiserver/bindata_assetfs.go from commit 613be01f4,
6587,ui: Change URI helper to a template based approach (#9344),This moves our uri helper to use a the template renderer we already have for rendering URLs.
6588,ui: document-attrs helper (#9336),"This commit adds a {{document-attrs}} helper, specifically for adding attributes to the root documentElement, which in our case is always "
6589,Update the NIA integration program diagram (#9349),
6590,docs: Fix broken URLs in Helm docs, Fix anchors for client.extraEnvironmentVars and server.extraEnvironmentVars. Change extraEnvironmentVars data type to map. Fix external link to kubernetes.io under connectInject.namespaceSelector.
6591,Move streaming docs to contributing/streaming,
6592,Fix typos in streaming docs,Co-authored-by: Paul Banks banks@banksco.de Co-authored-by: John Cowen johncowen@users.noreply.github.com
6593,Add changelog for fixing the namespace replication bug from #9271 (#9347),
6594,auto-updated agent/uiserver/bindata_assetfs.go from commit db5283ee2,
6595,ui: Refactor topology components (#9339),  Refactor Stats and Series components   Refactor metrics error message for ingress-gateway   Fix upLines icon positioning   Remove unused variable from being passed down to Stats 
6596,auto-updated agent/uiserver/bindata_assetfs.go from commit 3be03029f,
6597,ui: Native-ize class based helpers (#9337),  Install ember-decorators/observes   Remove filter-predicate   Nativize env and inject env service   Nativize all other class based helpers 
6598,ui: Lowercase the word 'instance' in Service listings (#9333),
6599,docs: Add developer documentation and diagrams for streaming,
6600,testing: skip slow tests with -short,Add a skip condition to all tests slower than 100ms. This change was made using gotestsum tool slowest with data from the last 3 CI runs of master. See https://github.com/gotestyourself/gotestsum#finding-and-skipping-slow-tests With this change: ``` $ time go test -count=1 -short ./agent ok      github.com/hashicorp/consul/agent       0.743s real    0m4.791s $ time go test -count=1 -short ./agent/consul ok      github.com/hashicorp/consul/agent/consul        4.229s real    0m8.769s ```
6601,auto-updated agent/uiserver/bindata_assetfs.go from commit 4dfa7622d,
6602,ui: Don't pluralize words when there is only 1 of the item (#9321),
6603,ui: HealthCheck Search/Sort/Filtering (#9314),"  Adds model layer changes around HealthChecks   Makes a HealthCheck model fragment and uses it in ServiceInstances and Nodes  Manually adds a relationship between a ServiceInstance and its potential ServiceInstanceProxy  Misc changes related to the above such as an Exposed property on MeshChecks, MeshChecks itself   Add a potential temporary endpoint to distinguish ProxyServiceInstance   Fix up Node search bar class   Add search/sort/filter logic   Fixup Service default sort key   Add Healthcheck search/sort/filtering   Tweak CSS add a default Type of 'Serf' when type is blank   Fix up tests and new test support   Add ability to search on Service/Node name depending on where you are   Fixup CheckID search predicate   Use computed for DataCollection to use caching   Alpha sort the Type menu   Temporary fix for new non-changing style Ember Proxys   Only special case EventSource proxies "
6604,docs: reword lack of additional required files,
6605,changelog: update 1.8.0 goroutine leak to note increasing memory usage (#9328),
6606,changelog: add entry for fixing active CA root unset (#9323),
6607,changelog: add entries for secondary datacenter CA fixes (#9322),
6608,auto-updated agent/uiserver/bindata_assetfs.go from commit adbd6c0c8,
6609,"ui: ServiceInstance.Name should be the Service.Name, never the Service.ID (#9316)"," ui: ServiceInstance.Name should be the Service.Name, never the ID  The ServiceInstance.ID should try Service.ID and fallback to Service.Name, not ServiceInstance.Name. ServiceInstance.Name is just an alias to Service.Name which is always set."
6610,Merge pull request #9273 from hashicorp/merge/release-1.9.0,merge: release/1.9.0
6611,Merge pull request #9318 from hashicorp/ca-update-followup,connect: Fix issue with updating config in secondary
6612,connect: Fix a case where the active root would get unset even when there wasn't a new one,
6613,auto-updated agent/uiserver/bindata_assetfs.go from commit e23b5b003,
6614,ui: Reorganize Tabs CSS (#9313),
6615,auto-updated agent/uiserver/bindata_assetfs.go from commit 9ac7bc180,
6616,ui: Asyncify Service Model Hooks (#9312),  ui: Add Kind grouping computed properties   Use new computed properties and move model hooks to async methods 
6617,auto-updated agent/uiserver/bindata_assetfs.go from commit a5b9ada9a,
6618,ui: New overlays (#9305),Replaces ember-popover with tippy.js based overlay modifier.
6619,auto-updated agent/uiserver/bindata_assetfs.go from commit cf38309f6,
6620,ui: Add 'Search Across' for finer grained searching (#9282),
6621,Merge pull request #9009 from hashicorp/update-secondary-ca,connect: Fix an issue with updating CA config in a secondary datacenter
6622,Use a buffered channel for CA intermediate renew func,
6623,auto-updated agent/uiserver/bindata_assetfs.go from commit afe0f2614,
6624,ui: Move identity components (#9298),
6625,auto-updated agent/uiserver/bindata_assetfs.go from commit b5abbf122,
6626,ui: Add copyable IDs to the Role and Policy views (#9296),
6627,Changelog,
6628,auto-updated agent/uiserver/bindata_assetfs.go from commit d1ebe8c14,
6629,ui: Moves healthcheck list to Glimmer template-only consul component (#9293),
6630,ui: Remove unused helpers or swap for helpers in ember-string-fns (#9294),  ui: Remove unused helpers or swap for helpers in ember-string-fns   starts-with > string-starts-with 
6631,auto-updated agent/uiserver/bindata_assetfs.go from commit f46ef3e3f,
6632,ui: Round Trip Time Tooltips (#9290),
6633,auto-updated agent/uiserver/bindata_assetfs.go from commit a59a2f860,
6634,ui: Modifier based tooltips (#9288),
6635,docs: fix mispelling in connect upstream docs (#9297),
6636,Fix typo in explanation of connect command (#9295),"Change Connect Connect to `Consul Connect, which is consistent with the command output as shown on this page."
6637,auto-updated agent/uiserver/bindata_assetfs.go from commit 9cf30e74e,
6638,ui: Nestable DataSources (plus glimmer upgrade) (#9275),
6639,ui: Add copyable IDs to the Role and Policy views,
6640,Merge pull request #9284 from hashicorp/dnephin/agent-service-register,local: mark service as InSync when added to local agent state
6641,local: mark service and checks as InSync when added,If the existing service and checks are the same as the new registration.
6642,fix serf_wan documentation (#9289),"WAN config is different than LAN config, source of truth is https://github.com/hashicorp/memberlist/blob/f72d2042a81632f45a86ad548580c1bd8890dbf9/config.go#L315-L326 and now the docs are correct."
6643,auto-updated agent/uiserver/bindata_assetfs.go from commit 408174f3b,
6644,ui: Change metrics link documentation link (#9281),  ui: Change metrics link documentation link   Update ui/packages/consul-ui/app/components/topology-metrics/index.hbs   Co-authored-by: Blake Covarrubias blake@covarrubi.as
6645,Bump supported chart to 0.27.0 for Consul 1.9 (#9279), Bump supported chart to 0.27.0 for Consul 1.9
6646,Merge pull request #9247 from pierresouchay/streaming_predictible_order_for_health,[Streaming] Predictable order for results of /health/service/:serviceName to mimic memdb
6647,Applied suggestions from @dnephin, Renamed cachedHealResultSorter into sortCheckServiceNodes Use < instead of strings.Compare Single line comparison in unit test
6648,Merge pull request #9270 from hashicorp/release/1.9.0,merge: release/1.9.0 back into 1.9.x
6649,Consul 1.9 GA Banner (#9272),
6650,Update CHANGELOG.md,
6651,docs: adding Consul 1.9.x to compat matrix and link to Envoy compat matrix (#9263), Adding Consul 1.9.x to compat matrix and link to Envoy compat matrix  Adding 1.9.x and link to Envoy compat matrix
6652,server: fix panic when deleting a non existent intention (#9254),  server: fix panic when deleting a non existent intention   add changelog   Always return an error when deleting non-existent ixn   Co-authored-by: freddygv gh@freddygv.xyz
6653,auto-updated agent/uiserver/bindata_assetfs.go from commit 6f8b5acbe,
6654,ui: Ensure the per item logout button logs you out (#9269),
6655,auto-updated agent/uiserver/bindata_assetfs.go from commit 9c3c7bcf3,
6656,ui: Include nspace in up/downstream link when nspaces are enabled (#9257),
6657,docs: deprecate some old filter parameters,The filtering can be done with the general purpose filter query parameter.
6658,Merge pull request #9261 from hashicorp/telemetry/fix-missing-and-stale-docs-2,Telemetry/fix missing and stale docs
6659,Merge pull request #9259 from hashicorp/dnephin/doc-streaming-experimental,docs: mark streaming as experimental
6660,add missing descriptions for metrics,
6661,docs: mark streaming as experimental,
6662,add entries for missing fsm operations and mark duplicated metrics prefixes as deprecated,
6663,Merge pull request #9012 from hashicorp/dnephin/log-fix-rotation,logging: prune logs on startup
6664,logging: improve tests,"Standardize naming Use stricter assertions and reduce boilerplate to make the intent of the tests more obvious. Also explicitly sort the filenames so that the correct files are pruned, and so that the tests can not flake."
6665,Update NIA architecture image (#9180),
6666,config: remove unused const,
6667,logging: call pruneFiles on startup,To ensure that files are pruned before a new one is created. Also clean up the logic in pruneFiles
6668,logging: remove unnecessary package vars,
6669,Clean up the logic in persistNewRootAndConfig,
6670,config: move testing shims to BuilderOpts,"And remove the devMode field from builder. This change helps make the Builder state more explicit by moving inputs to the BuilderOps struct, leaving only fields that can change during Builder.Build on the Builder struct."
6671,config: Use LiteralSource for some defaults,"Using the LiteralSource makes it much easier to find default values, because an IDE reports the location of a default. With an HCL string they are harder to discover. Also removes unnecessary mapstructure.Decodes of constant values."
6672,Merge pull request #9245 from hashicorp/telemetry/fix-missing-and-stale-docs,Telemetry/fix missing and stale docs
6673,Added changelog entry for 9247,
6674,[Streaming] Predictable order for results of /health/service/:serviceName to mimic memdb,This ensures the result is consitent with/witout streaming Will partially fix #9239
6675,Merge branch 'master' into 6074-allow-config-MaxHeaderBytes,
6676,Add CA server delegate interface for testing,
6677,Merge pull request #9246 from hashicorp/changelog-186,
6678,Update latest version,
6679,Add latest changelog entries,
6680,changelog: add 1.9.0-rc1 (#9231),
6681,add telemetry and definition help entries for missing catalog and acl metrics,
6682,command: when generating envoy bootstrap configs use the datacenter returned from the agent services endpoint (#9229),Fixes #9215
6683,remove stale entries and rename/define acl.resolveToken,
6684,auto-updated agent/uiserver/bindata_assetfs.go from commit d913af2bb,
6685,ui: Card component nspace refactor (#9228),  Refactoring conditional for showing nspaces   Styling empty state for Stats component 
6686,Require operator:write to get Connect CA config (#9240),"A vulnerability was identified in Consul and Consul Enterprise (“Consul”) such that operators with operator:read ACL permissions are able to read the Consul Connect CA configuration when explicitly configured with the /v1/connect/ca/configuration endpoint, including the private key. This allows the user to effectively privilege escalate by enabling the ability to mint certificates for any Consul Connect services. This would potentially allow them to masquerade (receive/send traffic) as any service in the mesh. -- This PR increases the permissions required to read the Connect CA's private key when it was configured via the /connect/ca/configuration endpoint. They are now operator:write."
6687,auto-updated agent/uiserver/bindata_assetfs.go from commit 687ce1f9c,
6688,ui: Alter background color of filter bars (#9238),
6689,ui: Surface 'detail' of API errors in the error page (#9237),  ui: Surface 'detail' of API errors in the error page   Make UI generated 404s look less bare 
6690,ui: ACL Tokens > Roles and Policy search and sort (#9236),  ui: Ensure search is enabled for child items in the ACLs area   Refactor comparators to reuse some utility functions   Add search and sorting to the ACLs child selector   Add tests for searching within child selectors   Allow sorting by CreateIndex 
6691,ui: Sort lists with health by unhealthy/healthy by default (#9234),  ui: Update lists with Health to sort by unhealthy/healthy by default   Fix up tests for new sorting   Make specific services page-navigation test 
6692,ui: All metrics cards should default to the default nspace if not set (#9223),  ui: All metrics cards should default to the default nspace if not set   Use the up/downstream as the data/nspace for up/downstreams not the service 
6693,ui: Remove ghost healthcheck from the service instance healthcheck list (#9220)," ui: Fixup service instance healthcheck list not to show ghost check  If the proxy is undefined, then an undefined vaule is appended to the list of checks  There are only 6 checks in the mocks so only expect 6"
6694,Merge pull request #9091 from scellef/correct-upgrade-guide,Correcting text on when default was changed in Consul
6695,Add docs for envoyExtraArgs (#9206),
6696,Merge pull request #9224 from hashicorp/dnephin/fix-multiple-http-listeners,agent: fix bug with multiple listeners
6697,Use freeport,To prevent other tests which already use freeport from flaking when port 0 steals their reserved port.
6698,auto-updated agent/uiserver/bindata_assetfs.go from commit 591a96d5b,
6699,ui: Fix empty state conditional for Series Graph (#9221),
6700,ui: Fix mutated nspace argument (#9222),
6701,auto-updated agent/uiserver/bindata_assetfs.go from commit 1edef424a,
6702,ui: Refactor tomography graph component to glimmer and remove deprecation (#9219),  ui: Refactor tomograph graph component to glimmer and remove deprecation   Avoid ember-data deprecation error 
6703,ui: Remove ember-computed-style to avoid deprecation error (#9218),
6704,agent: fix bug with multiple listeners,"Previously the listener was being passed to a closure in a loop without capturing the loop variable. The result is only the last listener is used, so the http/https servers only listen on one address. This problem is fixed by capturing the variable by passing it into a function."
6705,auto-updated agent/uiserver/bindata_assetfs.go from commit 664f1d9aa,
6706,ui: Change title helper to page-title (#9211),
6707,ui: Add triple curlies and reformat style attribute (#9210),
6708,connect: update some function comments in CA manager,
6709,acl: remove a test-only method,
6710,Remove two unused delegate methods,
6711,add the latest export-for-public revision of the consul-server-monitoring grafana dash,
6712,Merge pull request #9160 from hashicorp/dnephin/go-test-race-in-to-out-list,ci: change go-test-race package list to exclude list
6713,acl: remove t.Parallel,"These tests run faster without it, and it was causing races in enterprise tests."
6714,Refactor to call non-voting servers read replicas (#9191),Co-authored-by: Kit Patella kit@jepsen.io
6715,ui: Changelog changes (#9209),
6716,[docs] Change links to the DNS information to the right place (#8675),The redirects were working in many situations but some (INTERNALS.md) was not. This just flips everything over to using the real link.
6717,Merge pull request #9198 from hashicorp/mkcp/telemetry/add-all-metric-definitions,Add metric definitions for all metrics known at Consul start
6718,changelog component should mention agent not just server,
6719,add note about deleting TelemetryConfig.MergeDefaults in the future,
6720,auto-updated agent/uiserver/bindata_assetfs.go from commit fe728855e,
6721,Add DC and NS support for Envoy metrics (#9207),"This PR updates the tags that we generate for Envoy stats. Several of these come with breaking changes, since we can't keep two stats prefixes for a filter."
6722,add changelog entry,
6723,Merge branch 'mkcp/telemetry/add-all-metric-definitions' of ssh://github.com/hashicorp/consul into mkcp/telemetry/add-all-metric-definitions,
6724,fix some tests that were broken from the TelemetryConfig change,
6725,linting: sort and group import,
6726,update runtime_test to handle PrometheusOpts expiry field change,
6727,Prevent panic if autopilot health is requested prior to leader establishment finishing. (#9204),
6728,prometheussink has the same number of params again,
6729,use the MetricsPrefix to set the service name and provide as slice literal to avoid bugs from append modifying its first arg,
6730,Add changelog entry for namespace licensing fix (#9203),
6731,push prometheus sink definiitons into prometheus.PrometheusOpts,
6732,Merge pull request #9114 from hashicorp/dnephin/filtering-in-stream,stream: improve naming of Payload methods
6733,trim help strings to save a few bytes,
6734,merge master,
6735,auto-updated agent/uiserver/bindata_assetfs.go from commit 959974e96,
6736,ui: Replace NaN and undefined metrics values with - (#9200),  ui: Add functionality to metrics mocks:   More randomness during blocking queries  NaN and undefined values that come from prometheus  General trivial amends to bring things closer to the style of the project   Provider should always provide data as a string or undefined   Use a placeholder - if the metrics endpoint responds with undefined data 
6737,finish adding static server metrics,
6738,Docs for upgrading to CRDs (#9176), Add Upgrading to CRDs docs
6739,Reorganize some CA manager code for correctness/readability,
6740,Merge pull request #9195 from hashicorp/mkcp/changelog/add-1dot9-metrics-flag-note,add note about future metric fixes and deprecations under disable_com…
6741,connect: Add CAManager for synchronizing CA operations,
6742,connect: Add logic for updating secondary DC intermediate on config set,
6743,Trim to one deprecation entry,
6744,Merge pull request #9106 from hashicorp/security-model-docs-revamp,Revamp Security Model Documentation
6745,server: intentions CRUD requires connect to be enabled (#9194),Fixes #9123
6746,add note about future metric fixes and deprecations under disable_compat_1.9,
6747,ci: reword cherry-picker comment (#9192),
6748,Remove this constant as it is soon to be changing and we want to prevent backwards compat issues (#9193),
6749,Merge pull request #9155 from hashicorp/release/1.9.0-beta3,merge: 1.9.0-beta3
6750,ci: update to go 1.15.5 (#9187),
6751,add the service name in the agent rather than in the definitions themselves,
6752,server: remove config entry CAS in legacy intention API bridge code (#9151),Change so line-item intention edits via the API are handled via the state store instead of via CAS operations. Fixes #9143
6753,server: skip deleted and deleting namespaces when migrating intentions to config entries (#9186),
6754,ci: update to Go 1.15.4 and alpine:3.12 (#9036)," ci: stop building darwin/386 binaries  Go 1.15 drops support for 32-bit binaries on Darwin https://golang.org/doc/go1.15#darwin   tls: ConnectionState::NegotiatedProtocolIsMutual is deprecated in Go 1.15, this value is always true   correct error messages that changed slightly   Completely regenerate some TLS test data   Co-authored-by: R.B. Boyer rb@hashicorp.com"
6755,auto-updated agent/uiserver/bindata_assetfs.go from commit 1059a51a3,
6756,ui: Search/sort improvements (#9183),
6757,auto-updated agent/uiserver/bindata_assetfs.go from commit 78b704be8,
6758,ui: Pass down nspace and dc from Service model down to prometheus request (#9175),  Pass down nspace and dc from Service model down to prometheus request   Reviewing notes fix-ups   Fix on dc/nspace to send from upstream/downstream card 
6759,server: break up Intention.Apply monolithic method (#9007),"The Intention.Apply RPC is quite large, so this PR attempts to break it down into smaller functions and dissolves the pre-config-entry approach to the breakdown as it only confused things."
6760,first pass on agent-configured prometheusDefs and adding defs for every consul metric,
6761,docs: add link to the OpenShift platform guide to k8s docs (#9177),
6762,Docs: for consul-k8s health checks (#8819), docs for consul-k8s health checks  Co-authored-by: Derek Strickland 1111455+DerekStrickland@users.noreply.github.com Co-authored-by: Ashwin Venkatesh ashwin@hashicorp.com Co-authored-by: Iryna Shustava ishustava@users.noreply.github.com Co-authored-by: Luke Kysow 1034429+lkysow@users.noreply.github.com
6763,Merge pull request #9179 from hashicorp/ndhanushkodi-patch-1,Update Helm compatibility matrix
6764,Update compatibility matrix,Co-authored-by: Ashwin Venkatesh ashwin@hashicorp.com
6765,Merge pull request #9162 from hashicorp/dnephin/fix-grpc-metrics,grpc: fix metrics
6766,auto-updated agent/uiserver/bindata_assetfs.go from commit 6b2970402,
6767,ui: Upstream Instance Search and Sort (#9172),"  ui: Add predicate, comparator and necessary files for the search/sort   Implement search and sort for upstream instance list   ui: Tweak CSS so its all part of the component   Remove the old proxy test attribute "
6768,agent: return the default ACL policy to callers as a header (#9101),"Header is: X-Consul-Default-ACL-Policy= This is of particular utility when fetching matching intentions, as the fallthrough for a request that doesn't match any intentions is to enforce using the default acl policy."
6769,Update ui-visualization.mdx,
6770,auto-updated agent/uiserver/bindata_assetfs.go from commit 7243f1f4f,
6771,ui: Topology Intentions Popovers (#9137),  Refactor grid styling for Topology page   Crate TopologyMetrics Button component and move styling   Create intention ID   fixup button styling   Return a link to the create intention page   Rename Button to Popover component   Fixup serializer test   ui: Inline Topology Intention Actions  (#9153)   Add arrow and dot to/from metrics back in   Add addional space to have metrics wrap and show in smaller screens   Move logic for finding positioning   Use color variables   Co-authored-by: John Cowen johncowen@users.noreply.github.com
6772,Add changelog entry for autopilot state CLI (#9161),
6773,ci: go-test-race switch to exclude list,"Most packages should pass the race detector. An exclude list ensures that new packages are automatically tested with -race. Also fix a couple small test races to allow more packages to be tested. Returning readyCh requires a lock because it can be set to nil, and setting it to nil will race without the lock. Move the TestServer.Listening calls around so that they properly guard setting TestServer.l. Otherwise it races. Remove t.Parallel in a small package. The entire package tests run in a few seconds, so t.Parallel does very little. In auto-config, wait for the AutoConfig.run goroutine to stop before calling readPersistedAutoConfig. Without this change there was a data race on reading ac.config."
6774,grpc: fix grpc metrics,"defaultMetrics was being set at package import time, which meant that it received an instance of the original default. But lib/telemetry.InitTelemetry sets a new global when it is called. This resulted in the metrics being sent nowhere. This commit changes defaultMetrics to be a function, so it will return the global instance when called. Since it is called after InitTelemetry it will return the correct metrics instance."
6775,ci: publish bindata_assetfs.go for all release/.x branches (#9158),
6776,ci: remove nonexistant autopilot directory from go-test-race (#9159),
6777,Add a CLI command for retrieving the autopilot configuration. (#9142),
6778,Merge pull request #9098 from hashicorp/watsonian/kv-size-breakdown,Add detailed key size breakdown to snapshot inspect
6779,Fix some minor wording issues,
6780,auto-updated agent/uiserver/bindata_assetfs.go from commit 6423a2c10,
6781,ui: Add vendor directory as a target for JS linting and lint (#9157),  ui: Add vendor for js linting   Lint all the things 
6782,Back out implicit -kvdetails functionality,
6783,Length check is required here,"If one isn't included, then the nil check in the formatter never fails due to an empty slice being passed in, which causes the kv output to always get printed."
6784,Add a paramter in state store methods to indicate whether a resource insertion is from a snapshot restoration (#9156),"The Catalog, Config Entry, KV and Session resources potentially re-validate the input as its coming in. We need to prevent snapshot restoration failures due to missing namespaces or namespaces that are being deleted in enterprise."
6785,Add changelog entry,
6786,auto-updated agent/uiserver/bindata_assetfs.go from commit e1d977138,
6787,ui: Move discovery chain component (#9154),
6788,docs: add warning in 0.9.0 upgrade notes,
6789,Merge pull request #9149 from joel0/wrap-errors,Use error wrapping to preserve error type info
6790,Remove trailing tabs from output,
6791,Add more func comments,
6792,Move kvDetails default logic,
6793,Check for nil rather than length,
6794,Merge pull request #8976 from joel0/wrap-eof,Wrap rpc error object
6795,Use error wrapping to preserve error type info,
6796,Missed a spot with old params in docs,
6797,Update tests for new flag names,
6798,Allow omission of -kvdetails if another -kv* flag is set,
6799,Rename params to better reflect their purpose,
6800,auto-updated agent/uiserver/bindata_assetfs.go from commit e18d8e299,
6801,Make docs for params clearer,
6802,ui: Delete Proxy Info tab (#9141),"  Remove Proxy Info and create Upstreams and Exposed Paths tabs   Update routes formatting   Update typo for Expose.Checks   Remove, update, and add tests   Make consul-upstream-instance-list into a glimmer component   Create styling for upstream-instance-list component "
6803,Break KV portion of enchance into separate func,
6804,Move KV stat gen to separate func,
6805,auto-updated agent/uiserver/bindata_assetfs.go from commit fb6202929,
6806,ui: Correct AdapterError import (#9147),
6807,ui: Remove unnecessay reopens from sort and form services (#9146),
6808,Fixup the autopilot changelog (#9145),
6809,chore: update to Go 1.14.11,
6810,test: use direct service registration in envoy integration tests (#9138),"This has the biggest impact on enterprise test cases that use namespaced registrations, which prior to this change sometimes failed the initial registration because the namespace was not yet created."
6811,Add some autopilot docs and update the changelog (#9139),
6812,auto-updated agent/uiserver/bindata_assetfs.go from commit c8e40ee0d,
6813,ui: Move ember-data classes to use native JS classes/decorators (#9136),"  ui: Upgrade ember-data models to use native classes/decorators   ui: Update remaining ember-data imports   ui: Move ember-data Adapters to use native classes   ui: Upgrade serializers to native classes/decorators   ui: remove meta from roles, they never had it to start with "
6814,Merge pull request #9130 from hashicorp/dnephin/ci-make-backport-easier,ci: Make backporting post-merge a bit easier
6815,Merge pull request #9103 from hashicorp/feature/autopilot-mod,Switch to using the external autopilot module
6816,Fix a bunch of linter warnings,
6817,Switch to using the external autopilot module,
6818,auto-updated agent/uiserver/bindata_assetfs.go from commit 5c0ec13fb,
6819,ui: Run Ember native class code mod (#9093),  ui: Apply native class codemod to all services   ui: Apply native class codemod to routes   ui: Apply native class codemod to controllers   Fix up ember proxy content issue   Add a CreateTime on policy creation   Minor formatting   Convert child based saving to use ec instead of custom approach   Remove custom event source repo wrapping initializer   Repos here are no longer proxy objects revert to using them normally   Remove areas of code that were used to set up source backed repos 
6820,auto-updated agent/uiserver/bindata_assetfs.go from commit d9672bca8,
6821,ui: Move notice storybook to use controls addon (#9126),
6822,chore: upgrade to gopsutil/v3 (#9118),  deps: update golang.org/x/sys   deps: update imports to gopsutil/v3   chore: make update-vendor 
6823,connect: switch the default gateway port from 443 to 8443 (#9116),  test: update ingress gateway golden file to port 8443   test: update Envoy flags_test to port 8443   Co-authored-by: R.B. Boyer rb@hashicorp.com
6824,ui: remove consul-api-double from yarn.lock (#9115),
6825,changelog: add 1.9.0-beta2 release (#9132),
6826,website: update callout to 1.9.0-beta2 (#9131),
6827,ci: cherry-pick port-merge comment,
6828,changelog: add entries for 1.9.0-beta2 (#9129),
6829,Adjust the ACLs requirement section wording and add link to ACL docs,"It's better to avoid the ambiguous Vault statement that was not clarified and drop the loaded ""roles"" term in favor of ""capabilities"" since the ACL system is described as capability-based in previous ACL documentation."
6830,UI Metrics documentation (#9048),  UI Metrics documentation   Update website/pages/docs/connect/observability/ui-visualization.mdx   Fix some review comments   Fix review comments   Apply suggestions from code review   Co-authored-by: R.B. Boyer rb@hashicorp.com Co-authored-by: R.B. Boyer rb@hashicorp.com
6831,stream: document that Payload must be immutable,If they are sent to EventPublisher.Publish. Also document that PayloadEvents is expected to come from a subscription and that it is not immutable.
6832,"Revert ""Add namespace support for metrics (OSS) (#9117)"" (#9124)",This reverts commit 06b3b017d326853dbb53bc0ec08ce371265c5ce9.
6833,Use the EnterpriseAlert inline widget,
6834,Add mention of auto_encrypt to mTLS requirements,
6835,auto-updated agent/uiserver/bindata_assetfs.go from commit 3a68686cc,
6836,ui: Ensure per service intentions link to the correct place (#9122),  ui: Add a separate routeNsme to the per service intention listing   Add a test to make sure we go through to per service intention form 
6837,"ui: Intention ""Action change"" warning modal (#9108)","  ui: Add a warning dialog if you go to remove permissions from an intention   ui: Move modal styles next to component, add warning style   ui: Move back to using the input name for a selector   ui: Fixup negative ""isn't"" step so its optional   Add warning modal to pageobject   Fixup test for whether to show the warning modal or not   Intention change action warning acceptence test   Add a null/undefined Action "
6838,ui: Default to glimmer components (#9121),
6839,ui: Move gitignore file to workspace root and add storybook ignores (#9120),
6840,auto-updated agent/uiserver/bindata_assetfs.go from commit 848f72f66,
6841,ui: Move AppError and ErrorState to glimmer components (#9095),  ui: move AppError and ErrorState to glimmer components   yarn.lock changes 
6842,Add namespace support for metrics (OSS) (#9117),
6843,stream: rename FilterByKey,
6844,stream: Add HasReadPermission to Payload,Required now that filter is a method on PayloadEvents instead of Event
6845,stream: move event filtering to PayloadEvents,Removes the weirdness around PayloadEvents.FilterByKey
6846,Pull sorting into separate function,
6847,stream: Remove unused method,
6848,Fix sublist format for client agent threats,
6849,Add link to the keygen command,
6850,Use short link to keyring command,
6851,Add link to default_policy with code format to ACLs requirement section,
6852,Cleanup verify_server_hostname mTLS requirement,
6853,Add extra clarification around verify_incoming_https for localhost,In many cases access to localhost is restricted to trusted/privellged actors only
6854,Fix inline links + format in mTLS requirements section,
6855,Capitalize enterprise and add link to enerprise docs,
6856,Soften language by replacing utilize with use,
6857,Merge pull request #9112 from hashicorp/aaron-lane-patch-2,"Update loadtest AMI name, description"
6858,Refactor to reduce how many vars are being passed around,
6859,Merge pull request #9111 from hashicorp/aaron-lane-patch-1,Link to packer directory from terraform ReadMe
6860,Merge pull request #9088 from hashicorp/mkcp/telemetry/add-key-metrics-definitions,Add prometheus definitions for key metrics.
6861,rollback golang.org/x/sys version to fix distro-build,
6862,"Update loadtest AMI name, description",This commit updates the Packer properties ami_name and ami_description for the loadtest image to reflect the image intent.
6863,Link to packer directory from terraform ReadMe,
6864,apply make update-vendor,
6865,Fix NIA doc links (#9110),fix config link and anchor
6866,agent: sanitize ui metrics proxy header values on agent/self endpoint (#9104),
6867,Merge pull request #9073 from hashicorp/dnephin/backport-streaming-namespaces,streaming: backport namespace changes
6868,Merge pull request #9061 from hashicorp/dnephin/event-fields,stream: support filtering by namespace
6869,auto-updated agent/uiserver/bindata_assetfs.go from commit 6ff094976,
6870,ui: Fix up typo for the UI config template url (#9109),
6871,Bump HSM version (#9102),
6872,Fallback to alphabetic sorting if size is equal,
6873,Add tests for new snapshot inspect flags,
6874,Update snapshot inspect formatter test,
6875,Make key breakdown total size accurate,
6876,Update docs with new flags,
6877,Actually fix spelling of recommendations,I obviously have no idea how to spell this word
6878,auto-updated agent/uiserver/bindata_assetfs.go from commit 1ef18c4b6,
6879,ui: Move mocks into the ui project (#9084),  Add consul-api-double under api   Update config to reflect api change   Remove consul-api-double as a dependency   api -> mock-api   Fixup mocks path for staging 
6880,Fix spelling of recomendations,Thank you @rboyer!
6881,Revamp security model documentation,
6882,remove definitions for consul.runtime... metrics - they're prepended with hostnames and won't init,
6883,upgrade go-metrics to latest,
6884,Cleanup formatter,
6885,Get JSON formatting working,
6886,agent: protect the ui metrics proxy endpoint behind ACLs (#9099),"This ensures the metrics proxy endpoint is ACL protected behind a wildcard service:read and node:read set of rules. For Consul Enterprise these will need to span all namespaces: ``` service_prefix """" { policy = ""read"" } node_prefix """"    { policy = ""read"" } namespace_prefix """" {   service_prefix """" { policy = ""read"" }   node_prefix """"    { policy = ""read"" } } ``` This PR contains just the backend changes. The frontend changes to actually pass the consul token header to the proxy through the JS plugin will come in another PR."
6887,This ended up not being used.,
6888,Add snapshot inspect filter param,
6889,auto-updated agent/uiserver/bindata_assetfs.go from commit 0f6c0a5c1,
6890,ui: Metrics - Provide a fetch-like http client that automatically adds the current ACL token (#9094),  Remove local httpGet and shim one in from options   Add custom httpGet to pass through to provider   Make a fetch wrapper that adds your token   Pass the fetch like fetchWithToken wrapper through to the provider   Fix up httpGet to encode query params again and use fetch-like 
6891,Initial stab at snapshot inspect key breakdown,
6892,auto-updated agent/uiserver/bindata_assetfs.go from commit d5d4155e1,
6893,ui: Storybook Install (#9049),  ui: Install storybook into the main project   Add a basic story for a notice   Remove empty dependencies 
6894,Correcting text on when default was changed in Consul,
6895,add definitions for key metrics. This will not build until we have the definitions patch to go-metrics,
6896,use the docker proxy for more envoy integration test containers (#9085),
6897,wait_for_namespace should take two args (#9086),
6898,auto-updated agent/uiserver/bindata_assetfs.go from commit 56c2ff56e,
6899,ui: Update to not return metrics for ingress gateways (#9081),
6900,use hashicorp docker mirror in envoy helper (#9080),
6901,fix envoy integ test wait_for_namespace to actually work on CI (#9082),
6902,auto-updated agent/uiserver/bindata_assetfs.go from commit bf32a1799,
6903,ui: Remove string casting when passing index/checked for dropmenus (#9077),  ui: Remove string casting when passing index/checked   Check for e.target 
6904,auto-updated agent/uiserver/bindata_assetfs.go from commit 314eeda95,
6905,"ui: Use eslint vs ember-cli-lint, sass vs dart-sass (#9078)",These two dependency changes means that @hashicorp/pds-ember can be installed and used without any build/dependency issues
6906,use hashicorp docker mirror to prevent rate limit (#9070),
6907,agent: introduce path allow list for requests going through the metrics proxy (#9059),"Added a new option ui_config.metrics_proxy.path_allowlist. This defaults to [""/api/v1/query"", ""/api/v1/query_range""] when the metrics provider is set to prometheus. Requests that do not use one of the allow-listed paths (via exact match) get a 403 Forbidden response instead."
6908,structs: add a namespace test for CheckServiceNode.CanRead,
6909,cache-type: use namespace in tests,to verify that the namespace is passed through correctly to the server.
6910,state: test EventPayloadCheckServiceNode.FilterByKey,Also fix a bug in that function when only one of key or namespace were the empty string.
6911,stream: Add tests for filterByKey with namespace,And fix a bug where a request with a Namespace but no Key would not be properly filtered
6912,stream: Move FilterByKey events to a table,In preparation for adding new tests.
6913,proto: convert enterprise meta,
6914,state: use enterprise meta for creating events,
6915,stream: include the namespace in the snap cache key,Otherwise the wrong snapshot could be returned when the same key is used in different namespaces
6916,subscribe: set the request namespace,
6917,auto-updated agent/uiserver/bindata_assetfs.go from commit cf2cfbaf2,
6918,ui: make metrics work again (#9072),Fixes regression from #9040
6919,state: ensure we unblock intentions queries upon the upgrade to config entries (#9062), do a state store query to list intentions as the agent would do over in agent/proxycfg backing agent/xds upgrade the database and do a fresh service-intentions config entry write the blocking query inside of the agent cache in (1) doesn't notice (2)
6920,Merge pull request #9068 from hashicorp/restore-test-signature,restore prior signature of test helper so enterprise compiles
6921,restore prior signature of test helper so enterprise compiles,
6922,auto-updated agent/uiserver/bindata_assetfs.go from commit 1d6961248,
6923,ui: Update node_modules deps path in GNUMakefile (#9066),Updates node_modules path/makefile target to fix top-level make ui command.
6924,Resolves #6074.  Adds new option to configure HTTP Server's MaxHeaderBytes with option -http-max-header-bytes,Adds tests for behavior
6925,Merge pull request #9025 from hashicorp/dnephin/streaming-options,streaming: Use a no-op event publisher if streaming is disabled
6926,cli: Add JSON and Pretty Print formatting for consul snapshot inspect (#9006),
6927,docs: Add links in CTS docs for the community to get involved (#9060),
6928,stream: remove Event.Key,"Makes Payload a type with FilterByKey so that Payloads can implement filtering by key. With this approach we don't need to expose a Namespace field on Event, and we don't need to invest micro formats or require a bunch of code to be aware of exactly how the key field is encoded."
6929,state: use go-cmp for comparison,The output of the previous assertions made it impossible to debug the tests without code changes. With go-cmp comparing the entire slice we can see the full diffs making it easier to debug failures.
6930,proto:  remove Event.Key field,"The field is never used, and the value is available from the payload."
6931,proto: remove Event.Namespace field,"All events are part of a single Topic, so we don't need this field."
6932,proto: Add SubscribeRequest.Namespace,For subscribing to service events in a namespace
6933,stream: Use a no-op event publisher if streaming is disabled,
6934,Merge pull request #9058 from hashicorp/dnephin/fix-broken-github-workflow,Remove the workflow file
6935,Remove the workflow file,The comment out file causes github to send us error emails on every commit
6936,store: use a ReadDB for snapshots,to remove the cyclic dependency between the snapshot handlers and the state.Store
6937,add namespace waiting function to envoy integration tests (#9051),
6938,Merge pull request #9026 from hashicorp/dnephin/streaming-without-cache-query-param,streaming: rename config and remove requirement for cache=1
6939,Merge pull request #8618 from hashicorp/dnephin/remove-txn-readtxn,state: Use ReadTxn everywhere
6940,missed adding the test delay to the l7-intentions envoy integration test (#9052),
6941,Turn off issue labeler for now (#9054),
6942,Merge pull request #9053 from hashicorp/vault-token-lookupself,connect: Use the lookup-self endpoint for Vault token
6943,Merge pull request #8974 from hashicorp/dnephin/grpc-counter-metrics,agent/grpc: add counter metrics
6944,docs: Add the new metrics to telemetry.mdx,
6945,agent/grpc: add connection count metrics,"Gauge metrics are great for understanding the current state, but can somtimes hide problems if there are many disconnect/reconnects. This commit adds counter metrics for connections and streams to make it easier to see the count of newly created connections and streams."
6946,agent/grpc: rename metrics,These new names should make it easier to add counter metics with similar prefixes
6947,Merge pull request #8961 from hashicorp/dnephin/grpc-resolve-node-id,agent/grpc: fix some test flakes and handle duplicate server IDs in the pool
6948,Merge pull request #8998 from hashicorp/dnephin/lib-ttlcache,lib/ttlcache: extract a new package from agent/cache
6949,Merge pull request #8987 from hashicorp/dnephin/stream-filter,streaming: apply filter to a single item
6950,agent/grpc: Add an integration test for ClientPool with TLS,Also deregister the resolver.Builder in tests.
6951,tlsutil: remove unused UseTLS field,
6952,agent/grpc: pass metrics to constructor,"Instead of referencing a package var. This does not fix the flaky test, but it seems more correct."
6953,agent/grpc: fix a flaky test by performing more retries,"Instead of using retry.Run, which appears to have problems in some cases where it does not emit an error message, use a for loop. Increase the number of attempts and remove any sleep, since this operation is not that expensive to do in a tight loop"
6954,agent/grpc: remove misleading warnings from test output,Handle shutdown properly in tests so that the tests don't warn about using a closed connection.
6955,agent/grpc: fix a flake in TestHandler_EmitsStats,
6956,agent/grpc: use a separate channel for closing the Accept,Closing l.conns can lead to a race and a 'panic: send on closed chan' when a connection is in the middle of being handled when the server is shutting down. Found using '-race -count=800'
6957,agent/grpc/resolver: namespace the server ID with the DC name,So that if two datacenters end up with overlapping serverIDs we don't send requests to the wrong server
6958,connect: Use the lookup-self endpoint for Vault token,
6959,auto-updated agent/uiserver/bindata_assetfs.go from commit f4208b5fb,
6960,ui: Metrics - Don't swallow metrics errors (#9044),"  ui: Make eventsources use http-like errors for stopping   ui: Don't swallow errors from prometheus, pass them to the ui to handle "
6961,auto-updated agent/uiserver/bindata_assetfs.go from commit 30da884d5,
6962,ui: Delete old yarn lock file (#9046),  Update the make file to look for node_modules in the workspace   Delete old travis file 
6963,ui: Remove downstream dc filter (#9040),  Remove datacenter filter and update props passed down   Merging changes fixed   Fixup tests for metrics link 
6964,Remove auto-docs-cherrypick and update UI label (#9047), Remove auto-docs-cherrypick and update UI regex
6965,auto-updated agent/uiserver/bindata_assetfs.go from commit ed6a2c150,
6966,ui: Topology limited access banner (#9041),  Add limited access banner to Topology tab based on ACLs   Update to folder structure 
6967,"Turn down UI regex, removed things from PR labeler that wont be used (#8977)",
6968,auto-updated agent/uiserver/bindata_assetfs.go from commit 827e53694,
6969,ui: Upgrade consul-api-double to fix datacenter mocks (#9045),
6970,Fix even more test flakes in intentions related envoy integration tests (#9013),"The key thing here is to use curl --no-keepalive so that envoy pre-1.15 tests will reliably use the latest listener every time. Extra:   Switched away from editing line-item intentions the legacy way.   Removed some teardown scripts, as we don't share anything between cases anyway   Removed unnecessary use of run in some places. "
6971,Merge pull request #9021 from hashicorp/pruett.alertbanner-exp,Expose expirationDate prop in 
6972,auto-updated agent/uiserver/bindata_assetfs.go from commit 52d7283cd,
6973,UI metrics provider dc (#9001),  Plumb Datacenter and Namespace to metrics provider in preparation for them being usable.   Move metrics loader/status to a new component and show reason for being disabled.   Remove stray console.log   Rebuild AssetFS to resolve conflicts   Yarn upgrade   mend 
6974,Merge pull request #9038 from hashicorp/dnephin/upgrade-gotestsum,ci: upgrade gotestsum
6975,ci: upgrade gotestsum,So that we are using the same version as enterprise
6976,auto-updated agent/uiserver/bindata_assetfs.go from commit c4f027fa0,
6977,ui: Upgrade the rest of the UI to use the new Notice component (#9035),
6978,changelog: update to hashicorp/sentinel@v0.16.0 in Enterprise (#8984),
6979,Merge pull request #9028 from hashicorp/merge/release/1.8.5,changelog: update formatting from 1.8.5 release
6980,streaming: disable streaming when requesting connect events,Until the correct events are created for terminating gateways.
6981,state: disable streaming connect topic,
6982,Merge pull request #9027 from hashicorp/release/1.8.5,Merge back release/1.8.5
6983,website: update version.js (#9034),
6984,NIA: add Terraform version compatibility (#9023),
6985,auto-updated agent/uiserver/bindata_assetfs.go from commit 948917c6b,
6986,ui: Intention Custom Resource Banners (#9018),
6987,sdk: read procfs instead of using sysctl command,This drops the dependency of sysctl command
6988,changelog: add entries for 1.8.5,
6989,health: change the name of UseStreamingBackend config,"Remove it from the cache section, and update the docs."
6990,"health: use streaming, even when cache=1 is not set",
6991,server: config entry replication now correctly uses namespaces in comparisons (#9024),"Previously config entries sharing a kind & name but in different namespaces could occasionally cause ""stuck states"" in replication because the namespace fields were ignored during the differential comparison phase. Example: Two config entries written to the primary: kind=A,name=web,namespace=bar kind=A,name=web,namespace=foo  Under the covers these both get saved to memdb, so they are sorted by all 3 components (kind,name,namespace) during natural iteration. This means that before the replication code does it's own incomplete sort, the underlying data IS sorted by namespace ascending (bar comes before foo). After one pass of replication the primary and secondary datacenters have the same set of config entries present. If ""kind=A,name=web,namespace=bar"" were to be deleted, then things get weird. Before replication the two sides look like: primary: [     kind=A,name=web,namespace=foo ] secondary: [     kind=A,name=web,namespace=bar     kind=A,name=web,namespace=foo ] The differential comparison phase walks these two lists in sorted order and first compares ""kind=A,name=web,namespace=foo"" vs ""kind=A,name=web,namespace=bar"" and falsely determines they are the SAME and are thus cause an update of ""kind=A,name=web,namespace=foo"". Then it compares """" with ""kind=A,name=web,namespace=foo"" and falsely determines that the latter should be DELETED. During reconciliation the deletes are processed before updates, and so for a brief moment in the secondary ""kind=A,name=web,namespace=foo"" is erroneously deleted and then immediately restored. Unfortunately after this replication phase the final state is identical to the initial state, so when it loops around again (rate limited) it repeats the same set of operations indefinitely."
6992,state: convert the remaining functions to ReadTxn,Required also converting some of the transaction functions to WriteTxn because TxnRO() called the same helper as TxnRW. This change allows us to return a memdb.Txn for read-only txn instead of wrapping them with state.txn.
6993,Merge pull request #8975 from hashicorp/dnephin/stream-close-on-unsub,stream: close the subscription on Unsubscribe
6994,Add HasExact to topology endpoint (#9010),
6995,auto-updated agent/uiserver/bindata_assetfs.go from commit eedee07e7,
6996,ui: Initial Intention Permission Integration and acceptance testing (#9003),
6997,ci: add parallelism to envoy tests (#9005),add subtest output
6998,Expose expirationDate prop in ,
6999,Update managed-deprecated.mdx (#9016),fix typo / spell checker replacing w/ wrong word
7000,auto-updated agent/uiserver/bindata_assetfs.go from commit 7559f64d0,
7001,ui: Fixup CSS for create pages (#9019),
7002,auto-updated agent/uiserver/bindata_assetfs.go from commit 2a8a80638,
7003,ui: Fix the pointer events to view the tooltips when hovering over the icons (#9014),  Fix the pointer events to view the tooltips when hovering over the icons   Update to use class instead of id 
7004,ui: Prevent redirect to topology url and hide Topology tab if service has no services (#9008),  Prevent redirect to topology url and hide Topology tab if service has no proxies   Remove unused computed function from topology model   Fix up tests   Remove use of Exists computed function   Add tests for hiding topology tab 
7005,ui: Update Topology metrics dashboard and configuration links (#9002),  Update Topology metrics dashboard and configuration links   Fixup tests   Remove Dashboard Link from settings page   Removing use of settings Dashboard links 
7006,auto-updated agent/uiserver/bindata_assetfs.go from commit 45554e4e9,
7007,ui: Notice component (#9011),Add simple Notice template only glimmer component
7008,move static-assets dist to new path (#9015),
7009,fix flaky envoy integration tests involving intentions (#8996),"There is a delay between an intentions change being made, and it being reflected in the Envoy runtime configuration. Now that the enforcement happens inside of Envoy instead of over in the agent, our tests need to explicitly wait until the xDS reconfiguration is complete before attempting to assert intentions worked. Also remove a few double retry loops."
7010,"connect: add support for envoy 1.16.0, drop support for 1.12.x, and bump point releases as well (#8944)","Supported versions will be: ""1.16.0"", ""1.15.2"", ""1.14.5"", ""1.13.6"""
7011,NIA: document daemon exiting on task errors (#8985),
7012,speed up envoy integration tests by removing docker-compose (#8982),This speeds up individual envoy integration test runs from ~23m to ~14m. It's also a pre-req for possibly switching to doing the tests entirely within Go (no shell-outs).
7013,Merge pull request #8973 from hashicorp/dnephin/resolver-balance,agent/router: refactor calculation of delay between rebalances.
7014,stream: close the subscription on Unsubscribe,
7015,Merge pull request #8924 from ShimmerGlass/fix-sidecar-deregister-after-restart,Fix: service LocallyRegisteredAsSidecar property is not persisted
7016,Add extraEnvironmentVars and client.affinity to Helm values (#8997),"Document client.extraEnvironmentVars, server.extraEnvironmentVars, and client.affinity Helm chart values. Remove deprecated connectInject.imageEnvoy and meshGateway.imageEnvoy values."
7017,Merge pull request #9004 from hashicorp/dnephin/dns-small-cleanup-1,dns: remove goto INVALID and a naked return
7018,Merge pull request #8970 from hashicorp/dnephin/resolver-balance-test,agent/router: improve  the test for refreshServerRebalanceTimer
7019,Merge pull request #8771 from amenzhinsky/fix-grpc-use-tls-mapping,Fix GRPCUseTLS flag HTTP API mapping
7020,dns: remove goto INVALID and a naked return,This commit is one small step toward modernizing and making the DNSServer readable.
7021,ui: Move to Workspaced Structure (#8994),  ui: Add the most basic workspace root in /ui   We already have a LICENSE file in the repository root   Change directory path in build scripts ui-v2 -> ui   Make yarn install flags configurable from elsewhere   Minimal workspace root makefile   Call the new docker specific target   Update yarn in the docker build image   Reconfigure the netlify target and move to the higher makefile   Move ui-v2 -> ui/packages/consul-ui   Change repo root to refleect new folder structure   Temporarily don't hoist consul-api-double   Fixup CI configuration   Fixup lint errors   Fixup Netlify target 
7022,lib/ttlcache: unexport key and additional godoc,
7023,lib/ttlcache: add a constant for NotIndexed,
7024,cache: fix a bug with Prepopulate,"Prepopulate was setting entry.Expiry.HeapIndex to 0. Previously this would result in a call to heap.Fix(0) which wasn't correct, but was also not really a problem because at worse it would re-notify. With the recent change to extract cachettl it was changed to call Update(idx), which would have updated the wrong entry. A previous commit removed the setting of entry.Expiry so that the HeapIndex would be reported as -1, and this commit adds a test and handles the -1 heap index."
7025,lib/ttlcache: extract package from agent/cache,
7026,cache: export ExpiryHeap,"and hide internal methods on an unexported type, so that when it is extrated those methods are not exported."
7027,cache: Refactor heap.notify to make it more explicit.,"And remove duplicate notifications. Instead of performing the check in the heap implementation, check the index in the higher level interface (Add,Remove,Update) and notify if one of the relevant indexes is 0."
7028,cache: Move more of the expiryLoop into the Heap,
7029,cache: extract cache eviction heap,Start creating an interface that doesn't require using heap and hides more of the entry internals.
7030,Add changelog entry,
7031,docs: Remove sentence about pluggable CAs,"Consul's Connect CA documentation mentions future releases will support a pluggable CA system. This sentence has existed in the docs for over two years, however there are currently no plans to develop this feature on the near-term roadmap. This commit removes this sentence to avoid giving the impression that this feature will be available in an upcoming release."
7032,Merge pull request #8959 from hashicorp/docs-update-api-cli,Update docs-navigation.js
7033,Refactor metrics provider interface for time series. (#8989),
7034,streaming: apply filter to a single item,"Instead of the whole map. This should save a lot of time performing reflecting on a large map. The filter does not change, so there is no reason to re-apply it to older entries."
7035,restore the discovery of tests cases by file system existence (#8983),
7036,Update links (#8949),
7037,auto-updated agent/uiserver/bindata_assetfs.go from commit 2773daedc,
7038,ui: Move all our notification partials to components (#8968),
7039,ui: Prefer using a base route class instead of reopening routes (#8965),  Delete old controller lifecycle things we con't use anymore   Move route url decoding to our custom route class instead of reopening 
7040,ui: Clean up and document environment.js file (#8966),"  Move various environment getting utils out of the main file and test/doc   Clean up and document the entire environment file   Tweak the environment tests to reflect what they should be   Explicitly enable namespaces instead of defaulting   Allow env fallback functions to be called lazily   Otherwise the executables used for finding out things would be required during build, this way if env vars are set the executable aren't needed  Infer booleans from the fallback and cast them as such"
7041,ui: Remove nspace value from routeName (#8981),
7042,ui: Update route blueprint to use native classes and consul base route (#8967),
7043,auto-updated agent/uiserver/bindata_assetfs.go from commit b24c2227d,
7044,ui: Depend on less D3 (#8954),"  Only install the d3 parts we use, move dayjs to devDeps   Replace mouse with pointer "
7045,auto-updated agent/uiserver/bindata_assetfs.go from commit 02dcd422f,
7046,ui: Change text around L7 permissions to app aware (#8963),...also as a consequence of this we also moved around some of the CSS
7047,auto-updated agent/uiserver/bindata_assetfs.go from commit bf8bb7415,
7048,Change name to slug (#8955),
7049,ui: Upgrade ember-power-select and ember-basic-dropdown (#8922),This removes some {{-in-element}} deprecation errors
7050,Wrap rpc error object,
7051,Add A10 and Checkpoint TF modules (#8950),
7052,agent/router: refactor calculation of delay between rebalances.,"This change attempts to make the delay logic more obvious by:  remove indirection, inline a bunch of function calls move all the code and constants next to each other replace the two constant values with a single value reword the comments."
7053,agent/router: Add bounds test cases,
7054,router: organize the test by number of servers,And adddd some additional cases to show where the minimum value stops being used
7055,Update to CRD docs (#8956),"  Update to CRD docs   Update website/pages/docs/k8s/crds.mdx   Modify proxy default and service default protocols   Carry over from previous PR that I forgot to submit a review/suggestion to, TCP and HTTP are not valid protocols for Proxy Defaults and Service Defaults kubectl apply -f sdefault.yml Error from server: error when creating ""sdefault.yml"": admission webhook ""mutate-servicedefaults.consul.hashicorp.com"" denied the request: servicedefaults.consul.hashicorp.com ""your-service-name"" is invalid: spec.expose.paths[0].protocol: Invalid value: ""tcp"": must be one of ""http"", ""http2"" kubectl apply -f sdefault.yml Error from server: error when creating ""sdefault.yml"": admission webhook ""mutate-servicedefaults.consul.hashicorp.com"" denied the request: servicedefaults.consul.hashicorp.com ""your-service-name"" is invalid: spec.expose.paths[0].protocol: Invalid value: ""tcp"": must be one of ""http"", ""http2"" Co-authored-by: David Yu dyu@hashicorp.com"
7056,Update HSM version w/ Waypoint (#8971),
7057,speed up envoy integ tests by not politely stopping containers before destroying them (#8969),In local testing this sped up the stop_services call from 11s to 1s per test.
7058,router: make refreshServerRebalanceTimer test a lot more strict,
7059,auto-updated agent/uiserver/bindata_assetfs.go from commit d08e13e5b,
7060,Fix robots.txt to disallow indexing of all paths,The path pattern specified in allow / deny lines should start with a forward slash to designate the root. [1] https://tools.ietf.org/html/draft-koster-rep-00#section-2.2 [2] https://developers.google.com/search/reference/robots_txt
7061,Merge pull request #8962 from hashicorp/br.19-banner,Update banner for Consul 1.9
7062,Update banner for Consul 1.9,
7063,Merge pull request #8960 from hashicorp/mkcp/docs/truncate-old-jepsen-log,truncate jepsen.mdx log for length
7064,truncate jepsen.mdx log for length,
7065,[Website] Bump HSM version (#8957),  Bump HSM version   New pkg 
7066,Update docs-navigation.js,Added links for API and CLI docs to sidebar
7067,docs: all intention documentation updates (#8869),
7068,Merge pull request #8920 from hashicorp/crd-docs,CRD Docs
7069,Merge pull request #8947 from hashicorp/dnephin/changelog-for-streaming,Add streaming changelog file
7070,fix 1.9.0-beta1 changelog formatting (#8941),
7071,auto-updated agent/uiserver/bindata_assetfs.go from commit 5fd79ba40,
7072,ui: Move to a nested folder structure for Consul prefixed components (#8937),  ui: Move all consul- components to nested consul/ components   Move tomography-graph   Remove old basic rendering tests 
7073,CRD docs,
7074,Recommend using vault token auto-renew in 1.8.5 (#8945),
7075,Merge pull request #8946 from hashicorp/pcmccarron-nia-logo-grid,Add files via upload
7076,Add files via upload,updating logo grid image
7077,Add streaming changelog file,
7078,Merge pull request #8943 from hashicorp/vault-renew-docs,docs: Add a note about auto-renewing the Vault token
7079,website: add v1.9.0-beta1 download callout (#8939),
7080,docs: Add a note about auto-renewing the Vault token,
7081,Add ui metrics config docs (#8921),  Add ui metrics docs   Update website/pages/docs/agent/options.mdx   Co-authored-by: R.B. Boyer rb@hashicorp.com Co-authored-by: R.B. Boyer rb@hashicorp.com
7082,Remove email address (#8931),
7083,Fix: service LocallyRegisteredAsSidecar property is not persisted,"When a service is deregistered, we check whever matching services were registered as sidecar along with it and deregister them as well. To determine if a service is indeed a sidecar we check the structs.ServiceNode.LocallyRegisteredAsSidecar property. However, to avoid interal API leakage, it is excluded from JSON serialization, meaning it is not persisted to disk either. When the agent is restarted, this property lost and sidecars are no longer deregistered along with their parent service. To fix this, we now specifically save this property in the persisted service file."
7084,Add docs on what activates task execution (#8936),
7085,auto-updated agent/uiserver/bindata_assetfs.go from commit 7afcd7755,
7086,ui: Autofill intention destination as opposed to source on creation (#8933),
7087,Merge pull request #8935 from hashicorp/nia-docs-tfmod,Update Requirements doc: Terraform module links
7088,Update Requirements doc: Terraform module links,"Update ""Using Terraform Modules"" with latest module links from partners"
7089,Include integration docs for NIA with consul-terraform-sync label (#8926),
7090,Merge pull request #8929 from hashicorp/pcmccarron-service-mesh-page-updates,Service mesh page updates
7091,Plugs in proper links for NIA page,
7092,Fix failed build,
7093,Update network-infrastructure-automation.jsx,
7094,updating use case pages,
7095,updating NIA use case page,
7096,Update compatibility matrix (#8928),
7097,docs: add Helm docs for openshift; also add other missing Helm docs (#8833),
7098,Update a link and reword some sentences (#8925),Update PANOS link Update sentences
7099,Update version.js,
7100,Merge pull request #8923 from hashicorp/release/1.9.0-beta1,chore: merge 1.9.0-beta1 release branch back in
7101,chore: regenerate bindata_assetfs,
7102,Merge branch 'master' into release/1.9.0-beta1,
7103,Putting source back into Dev Mode,
7104,Release v1.9.0-beta1,
7105,update bindata_assetfs.go,
7106,auto-updated agent/uiserver/bindata_assetfs.go from commit 868cd47a6,
7107,ui: CSS amends (#8905),  Ensure uls have no overflow-x when overflow is added via JS   Remove some unused CSS and replace old  route targetting 
7108,Update CHANGELOG.md,
7109,ci: bump to Go 1.14.9,
7110,changelog: update UNRELEASED with go-changelog output,
7111,changelog: fixup note.tmpl syntax,
7112,changelog: add entries for ui_config and service metrics config (#8919),  Create 8694.txt   Apply suggestions from code review   Co-authored-by: Freddy freddygv@users.noreply.github.com Co-authored-by: Freddy freddygv@users.noreply.github.com
7113,changelog: add entries for UI topology viz (#8918),  Create 8858.txt   add separate changelog entries for original topology impl and intentions   Co-authored-by: Mike Morris mikemorris@users.noreply.github.com
7114,Consul Service meta wrongly computes and exposes non_voter meta (#8731)," Consul Service meta wrongly computes and exposes non_voter meta  In Serf Tags, entreprise members being non-voters use the tag nonvoter=1, not non_voter = false, so non-voters in members were wrongly displayed as voter. Demonstration: consul members -detailed|grep voter consul20-hk5 10.200.100.110:8301   alive   acls=1,build=1.8.4+ent,dc=hk5,expect=3,ft_fs=1,ft_ns=1,id=xxxxxxxx-5629-08f2-3a79-10a1ab3849d5,nonvoter=1,port=8300,raft_vsn=3,role=consul,segment=<all>,use_tls=1,vsn=2,vsn_max=3,vsn_min=2,wan_join_port=8302   Added changelog   Added changelog entry "
7115,auto-updated agent/uiserver/bindata_assetfs.go from commit 851705e93,
7116,ui: Make the topology cards into links (#8911),
7117,Update service-defaults.mdx (#8780),
7118,auto-updated agent/uiserver/bindata_assetfs.go from commit 27048a061,
7119,Add metrics rendering to the new topology view. (#8858),"  Remove unused StatsCard component   Create Card and Stats contextual components with styling   Send endpoint, item, and protocol to Stats as props   WIP basic plumbing for metrics in Ember   WIP metrics data source now works for different protocols and produces reasonable mock responses   WIP sparkline component   Mostly working metrics and graphs in topology   Fix date in tooltip to actually be correct   Clean up console.log   Add loading frame and create a style sheet for Stats   Various polish fixes:   Loading state for graph  Added fake latency cookie value to test loading If metrics provider has no series/stats for the service show something that doesn't look broken Graph hover works right to the edge now Stats boxes now wrap so they are either shown or not as will fit not cut off Graph resizes when browser window size changes  Some tweaks to number formats and stat metrics to make them more compact/useful   Thread Protocol through topology model correctly   Rebuild assetfs   Fix failing tests and remove stats-card now it's changed and become different   Fix merge conflict   Update api doublt   more merge fixes   Add data-permission and id attr to Card   Run JS linter   Move things around so the tests run with everything available   Get tests passing:   Remove fakeLatency setTimeout (will be replaced with CONSUL_LATENCY in mocks)   Make sure any event handlers are removed   Make sure the Consul/scripts are available before the app   Make sure interval gets set if there is no cookie value   Upgrade mocks so we can use CONSUL_LATENCY   Fix handling of no series values from Prometheus   Update assetfs and fix a comment   Rebase and rebuild assetfs; fix tcp metric series units to be bits not bytes   Rebuild assetfs   Hide stats when provider is not configured   Co-authored-by: kenia keniavalladarez@gmail.com Co-authored-by: John Cowen jcowen@hashicorp.com"
7120,[skip ci] ci: fix trigger-oss-merge yaml spacing (#8916),
7121,Enhance the output of consul snapshot inspect (#8787),
7122,Initial docs commit,
7123,Merge pull request #8914 from hashicorp/mkcp/changelog/8877,add changelog entries for 8877
7124,Merge pull request #8915 from hashicorp/mkcp/changelog/add-deprecation-to-template,add template generation for entries tagged deprecation
7125,add per commit oss->ent merge on master and release branches (#8740),
7126,add template generation for entries tagged deprecation,
7127,add changelog entries for 8877,
7128,Merge pull request #8913 from hashicorp/mkcp/docs/add-missing-options,adds missing options.mdx entry for telemetry {disable_compat_1.9}
7129,Stop intermediate renew routine on leader stop,
7130,adds missing options.mdx entry for telemetry {disable_compat_1.9},
7131,doc: Update acl-method command example (#8845),  Update acl-method command example   add tailing backtick 
7132,Merge pull request #8784 from hashicorp/renew-intermediate-primary,connect: Enable renewing the intermediate cert in the primary DC
7133,Minor updates to NIA partner docs (#8912), Renames Terraform module registry to its new name Terraform Registry
7134,note template with ent support (#8910),
7135,auto-updated agent/uiserver/bindata_assetfs.go from commit 766b28b8e,
7136,ui: Send kind query to the service-topology endpoint (#8909),
7137,Docs: Nia/docs tech preview (#8908), Add outline and basic content for Tech Preview docs Add Tech Preview tag Add auto-labler for Consul Terrform Sync Add Consul Terraform Sync config docs (#8837) CLI Docs for Consul Terraform Sync Task Docs for Consul Terraform Sync Add docs for NIA Terraform driver (#8871) Update Installation Docs for Consul Terraform Sync Initial high level architecture overview (#8872) Docs: compatible Terraform modules for Consul-Terraform-Sync (#8887) Update Requirements Docs for Consul Terraform Sync Remove empty partner module sections
7138,Merge pull request #8825 from hashicorp/streaming/add-config,streaming: add config and docs
7139,Docs: Nia/docs partner integration (#8907)," Add NIA Integration Program page Update name to Consul-Terraform-Sync and add Tech Preview tags Update diagram to include sequence numbers Remove Tech Preview tags and Update Images Add TF module naming convention, update image and links Add a note, update PANW link, and working updates Update URLs to local path"
7140,config: add field for enabling streaming in the client,agent: register the new streaming cache-type
7141,Merge pull request #8893 from hashicorp/dnephin/add-steps-to-subscribe-tests,"subscribe: add steps to long test cases, and add new cases for converting Events"
7142,Merge pull request #8896 from hashicorp/dnephin/go-test-race-more-pkgs,ci: go test -race more packages
7143,Merge pull request #8863 from hashicorp/update-hashicorp-deps,vendor: Update some hashicorp packages to latest versions
7144,Emit service usage metrics with correct labeling strategy (#8856),"Previously, we would emit service usage metrics both with and without a namespace label attached. This is problematic in the case when you want to aggregate metrics together, i.e. ""sum(consul.state.services)"". This would cause services to be counted twice in that aggregate, once via the metric emitted with a namespace label, and once in the metric emited without any namespace label."
7145,Fix intermediate refresh test comments,
7146,[Website] Add HashiStackMenu to website (#8854),  Add new HashiStackMenu   Add transpile option   Bump version   Bump HSM version and rm meganav styles 
7147,changelog: update raft to v1.2.0 (#8901),
7148,Add changelog note,
7149,Create _619.txt,
7150,ui: Add simple intention check interface to per service intentions (#8899),
7151,ui: Update instances count for ingress and terminating gateways (#8885),  Add associated services count to terminating and ingress gateways in Service List page   Update to not return instances for terminating and ingress gateways 
7152,Remove oss/ent divergence of runtime_test.go (#8903),
7153,Add capability for the v1/connect/ca/roots endpoint to return a PEM encoded certificate chain (#8774),Co-authored-by: R.B. Boyer rb@hashicorp.com
7154,upstream some differences from enterprise (#8902),
7155,auto-updated agent/uiserver/bindata_assetfs.go from commit b6f686fec,
7156,uiserver: upstream refactors done elsewhere (#8891),
7157,Merge pull request #8900 from hashicorp/metrics-proxy-query,Actually proxy the query string too
7158,Update CI for leader renew CA test using Vault,
7159,vendor: Update github.com/hashicorp/yamux,
7160,vendor: Update github.com/hashicorp/mdns,
7161,vendor: Update github.com/hashicorp/hil,
7162,vendor: Update github.com/hashicorp/go-version,
7163,vendor: Update github.com/hashicorp/go-memdb,
7164,vendor: Update github.com/hashicorp/go-checkpoint,
7165,Merge branch 'master' into renew-intermediate-primary,
7166,connect: Check for expired root cert when cross-signing,
7167,Actually proxy the query string too,
7168,cache-types: skip tests with races,
7169,grpc: fix data rate in stats handler test,
7170,Add protocol to the topology endpoint response (#8868),
7171,ci: go-test-race more packages,
7172,subscribe: add test cases for newEventFromStreamEvent,
7173,website: re-add forgotten updates (#8890),
7174,ui: fix the namespace flag (#8889),
7175,Merge pull request #8877 from hashicorp/mkcp/telemetry/consul.api.http,Add flag for disabling 1.9 metrics backwards compatibility and warnings when set to default
7176,Update telemetry.mdx,Make consul.http... have an ellipsis rather than just two dots to denote that there's a lot of different metrics under that path.
7177,agent: allow the /v1/connect/intentions/match endpoint to use the agent cache (#8875),This is the recommended proxy integration API for listing intentions which should not require an active connection to the servers to resolve after the initial cache filling.
7178,subscribe: Add steps to rpc/subscribe tests,To make them easier to follow
7179,auto-updated agent/uiserver/bindata_assetfs.go from commit 13dfde75a,
7180,"ui: Workaround FF and/or ember problem, trying to set a value="""" (#8884)",
7181,ui: Fix up positioning of subpage loader animation (#8879),
7182,chore: update raft to v1.2.0 (#8822),
7183,Add per-agent reconnect timeouts (#8781),"This allows for client agent to be run in a more stateless manner where they may be abruptly terminated and not expected to come back. If advertising a per-agent reconnect timeout using the advertise_reconnect_timeout configuration when that agent leaves, other agents will wait only that amount of time for the agent to come back before reaping it. This has the advantageous side effect of causing servers to deregister the node/services/checks for that agent sooner than if the global reconnect_timeout was used."
7184,Add UI metrics proxy (#8744),  Fix merge conflicts   Add /v1/internal/ui/metrics-proxy API endpoint that proxies to a configured metrics provider backend. 
7185,Add support for serving additional metrics provider JS in the UI (#8743),
7186,chore(ci): remove docs-cherrypick autolabel,This label should never be auto-applied to prevent accidentally publishing docs intended for a major release early.
7187,Add /v1/internal/ui/metrics-proxy API endpoint that proxies to a configured metrics provider backend.,
7188,Fix merge conflicts,
7189,config: add field for enabling streaming RPC endpoint,
7190,streaming: Use a shorter LastGetTTL for the cache,
7191,auto-updated agent/uiserver/bindata_assetfs.go from commit b373456c7,
7192,ui: Add deny SVG lines with icons (#8846),  Refactor and color SVG Lines based on intention permissions   Create Icon component with L7 and Deny icon styling   Reposition icons on the lines when the lines are redrawn   Create service/intention-permissions helper   Use service/intention-permissions helper to return allow or deny lines   Upgrade consul-api-double to v5.3.5   Update HasPermission attribute 
7193,Support ingress gateways in mesh viz endpoint (#8864),Co-authored-by: R.B. Boyer rb@hashicorp.com
7194,auto-updated agent/uiserver/bindata_assetfs.go from commit ef7b1f8a4,
7195,ui: Add namespaces to downstream cards (#8873),  Add nspace to downstream cards   Remove portion of conditional 
7196,auto-updated agent/uiserver/bindata_assetfs.go from commit d849f025c,
7197,ui: L7 intentions improvements (#8851),  Disable source as well as destination on editing   Various visual/textual amends   Make errors only appear once you've interacted with a field   Move tests that involve selecting menus to a create form   Revert fieldsets and checkboxes 
7198,ui: Use a custom request for nspace deletion (#8878),  Turn repo.remove into a custom action to bypass ember-data deletion   Don't show actions on a deleting nspace 
7199,Merge pull request #8841 from hashicorp/streaming/materialize-view-fix-service-unique-id,streaming: Use an ID that includes namespace to store services in the materialized view
7200,Merge pull request #8809 from hashicorp/streaming/materialize-view,Add StreamingHealthServices cache-type
7201,Merge pull request #8818 from hashicorp/streaming/add-subscribe-service-batch-events,stream: handle batch events as a special case of Event
7202,Merge pull request #8768 from hashicorp/streaming/add-subscribe-service,subscribe: add subscribe service for streaming change events
7203,Return intention info in svc topology endpoint (#8853),
7204,add config flag to disable 1.9 metrics backwards compatibility. Add warnings on start and reload on default value,
7205,structs: add CheckServiceNode.CanRead,And use it from the subscribe endpoint.
7206,test(vault): generate test coverage and upload to CodeCov (#8870),
7207,add testrpc.WaitForServiceIntentions to help unflake tests that manipulate intentions (#8867),
7208,api: unflake some intention-related api tests (#8857),
7209,Turns PR labeler to only trigger on create (#8838),
7210,chore(deps): update gopsutil to v2.20.9 (#8843), core(deps): bump golang.org/x/sys  To resolve /go/pkg/mod/github.com/shirou/gopsutil@v2.20.9+incompatible/host/host_bsd.go:20:13: undefined: unix.SysctlTimeval  chore(deps): make update-vendor
7211,command: remove conditional envoy bootstrap generation for versions <=1.10.0 since those are not supported (#8855),
7212,add missing changelog entry for #8839,
7213,auto-updated agent/uiserver/bindata_assetfs.go from commit 0d0de4309,
7214,ui: Change query param name for service instance listing from nspace to ns (#8852),
7215,auto-updated agent/uiserver/bindata_assetfs.go from commit a61b6c53d,
7216,ui: Move node listing copy button to the detail rather than the title (#8850),
7217,auto-updated agent/uiserver/bindata_assetfs.go from commit 222555c4c,
7218,ui: Fix up Service filtering by whether a Service is in the mesh or not in the mesh (#8836),"  Add MeshEnabled, InMesh properties and add Proxy back in   Change query param to in-mesh/not-in-mesh   Use new computed properties "
7219,add tailing backtick,
7220,Update acl-method command example,
7221,connect: support defining intentions using layer 7 criteria (#8839),Extend Consul’s intentions model to allow for request-based access control enforcement for HTTP-like protocols in addition to the existing connection-based enforcement for unspecified protocols (e.g. tcp).
7222,Added changelog for merged PR #8221,
7223,streaming: store services with a unique ID that includes namespace,
7224,proto: add Namespace to EnterpriseMeta,By adding Namespace to the OSS EnterpriseMeta we reduce the differences between OSS and Enterprise which simplifies the code quite a bit.
7225,Update CHANGELOG.md,
7226,add ui test-node (#8820),
7227,"connect: intentions are now managed as a new config entry kind ""service-intentions"" (#8834)",  Upgrade the ConfigEntry.ListAll RPC to be kind-aware so that older copies of consul will not see new config entries it doesn't understand replicate down.   Add shim conversion code so that the old API/CLI method of interacting with intentions will continue to work so long as none of these are edited via config entry endpoints. Almost all of the read-only APIs will continue to function indefinitely.   Add new APIs that operate on individual intentions without IDs so that the UI doesn't need to implement CAS operations.   Add a new serf feature flag indicating support for intentions-as-config-entries.   The old line-item intentions way of interacting with the state store will transparently flip between the legacy memdb table and the config entry representations so that readers will never see a hiccup during migration where the results are incomplete. It uses a piece of system metadata to control the flip.   The primary datacenter will begin migrating intentions into config entries on startup once all servers in the datacenter are on a version of Consul with the intentions-as-config-entries feature flag. When it is complete the old state store representations will be cleared. We also record a piece of system metadata indicating this has occurred. We use this metadata to skip ALL of this code the next time the leader starts up.   The secondary datacenters continue to run the old intentions replicator until all servers in the secondary DC and primary DC support intentions-as-config-entries (via serf flag). Once this condition it met the old intentions replicator ceases.   The secondary datacenters replicate the new config entries as they are migrated in the primary. When they detect that the primary has zeroed it's old state store table it waits until all config entries up to that point are replicated and then zeroes its own copy of the old state store table. We also record a piece of system metadata indicating this has occurred. We use this metadata to skip ALL of this code the next time the leader starts up. 
7228,streaming: improve godoc for cache-type,"And fix a bug where any error that implemented the temporary interface was considered a temporary error, even when the method would return false."
7229,submatview: remove notifyUpdateLocked from reset,"This call appears to only be necessary because reset() was called from NewMaterializer. This commit has the constructor set a default value for updateCh, and removes both the call to reset() from New(), and the call to notifyUpdateLocked() from reset(). This should ensure that we do not notify the Fetch() call before we have new values to report."
7230,submatview: remove method receiver from handlers,
7231,submatview: add a test for handling of NewSnapshotToFollow,Also add some godoc Rename some vars and functions Fix a data race in the new cache test for entry closing.
7232,submatview: refactor Materializer,"Refactor of Materializer.Run Use handlers to manage state in Materializer Rename Materializer receiver rename m.l to m.lock, and flip some conditionals to remove the negative. Improve godoc, rename Deps, move resetErr, and pass err into notifyUpdate Update for NewSnapshotToFollow events Refactor to move context cancel out of Materializer"
7233,submatview: Move the 'use materialize from result.State' logic,No need to do all this other work if we have one already. This logic moved closer to this call site 3 times during the process of refactoring.
7234,submatview: Move Materializer to submatview package,
7235,submatview: Refactor MaterializeView,"Replace InitFilter with Reset. Removes the need to store a fatalErr and the cache-type, and removes the need to recreate the filter each time. Pass dependencies into MaterializedView. Remove context from MaterializedView. Rename state to view. Rename MaterialziedView to Materialzier. Rename to NewMaterializer Pass in retry.Waiter"
7236,cache-types: Update Streaming health cache-type,To use latest protobuf types
7237,agent/cache: Add cache-type and materialized view for streaming health,Extracted from d97412ce4c399a35b41bbdae2716f0e32dce80bf Co-authored-by: Paul Banks banks@banksco.de
7238,stream: Return a single event from a subscription.Next,Handle batch events as a single event
7239,Remove label trigger on edit (#8832),
7240,subscribe: update to use NewSnapshotToFollow event,
7241,Move agent/subscribe -> agent/rpc/subscribe,
7242,subscirbe: extract streamID and logging from Subscribe,By extracting all of the tracing logic the core logic of the Subscribe endpoint is much easier to read.
7243,subscribe: add integration test for acl token updates,
7244,subscribe: add integration test for filtering events by acl,
7245,subscribe: Add an integration test for forward to DC,
7246,subscribe: add first integration test for Server,
7247,subscribe: add a stateless subscribe service for the gRPC server,With a Backend that provides access to the necessary dependencies.
7248,subscribe: add commented out test cases,Co-authored-by: Paul Banks banks@banksco.de
7249,subscribe: add initial impl from streaming-rpc-final branch,Co-authored-by: Paul Banks banks@banksco.de
7250,Merge pull request #8799 from hashicorp/streaming/rename-framing-events,"stream: remove EndOfEmptySnapshot, add NewSnapshotToFollow"
7251,Merge pull request #8806 from hashicorp/dnephin/service-health-interface,rpcclient: Add health.Client and use it in http and dns
7252,server: create new memdb table for storing system metadata (#8703),"This adds a new very tiny memdb table and corresponding raft operation for updating a very small effective map[string]string collection of ""system metadata"". This can persistently record a fact about the Consul state machine itself. The first use of this feature will come in a later PR."
7253,proto: fix RoundTrip test for enterprise (#8826),
7254,auto-updated agent/uiserver/bindata_assetfs.go from commit a7038b48c,
7255,ui: Service instance requests and proxy requests are ranges (#8828),
7256,ui: Restrict header styling to specific tabs (#8830),
7257,ui: Remove authorization and disabled partials/blocks (#8829),  Add disabled and unauthorized views into AppView without a block   Remove disabled/unauthorized block usage   Remove unauthorized and diabled partials   Passthrough allowLogin attribute 
7258,auto-updated agent/uiserver/bindata_assetfs.go from commit 5a39be47d,
7259,Fixup node tests to account for new runtime env var passing (#8817),
7260,ui: Leader API polling (#8814),  Allow configuring a datasource to poll instead of block   Add 30 second polling to the leader API request 
7261,auto-updated agent/uiserver/bindata_assetfs.go from commit 76d3909f3,
7262,ui: Replace proxy icon with mesh icon (#8804),
7263,auto-updated agent/uiserver/bindata_assetfs.go from commit e4a0dcf10,
7264,Allow configuring a datasource to poll instead of block (#8805),
7265,Add load testing framework  (#8571),
7266,Add default meta to test assertion (#8824),
7267,Fixes README overwrite (#8821),
7268,Merge pull request #8802 from hashicorp/dnephin/extract-lib-retry,lib/retry - extract a new package from lib/retry.go
7269,auto-updated agent/uiserver/bindata_assetfs.go from commit f26201a7a,
7270,ui: Service Mesh - Topology tab and basic layout (#8788),"  Create Topology Tab with foundational layout and styling   Create Toplogy Metrics component with dynamic SVG   Add ember-render-modifiers addon   Implement Topology Metrics comp and fix up styling   Create topology endpoint with tests   Move arrow drawing to index.js file   Add topology to show controller   Fix up conditional wrapper, tabs positioning, links, and styling   Group upstreams by dc and fix up styling   Create service/health-percentage helper   Add health check percentages to upstreams and downstreams   Basic Layout   Upgrade @hashicorp/consul-api-double to v5.2.3   Renamed endpoint to be service-topology   Refactor styling   Update to only show Topology tab when Connect is enabled   Fix bug and changes from review notes   Remove unused functions that are replaced with SVG markers   Refactor to resuse svg-curve helper   Use the render-template helper for the metrics link   Add topology default null to services show route   Removed unused ID   Fix up tests broken by redirect to /topology "
7271,docs: Add missing helm docs and make link anchors consistent (#8808),
7272,Service mesh topology visualization endpoint MVP,
7273,Do not evaluate discovery chain for topology upstreams,
7274,Single DB txn for ServiceTopology and other PR comments,
7275,Add topology HTTP endpoint,
7276,Add topology RPC endpoint,
7277,Add topology ACL filter,
7278,Add func to combine up+downstream queries,
7279,factor in discovery chain when querying up/downstreams,
7280,support querying upstreams/downstreams from registrations,
7281,Add method for downstreams from disco chain,
7282,Add github actions for PR and issue labeling (#8709)," Added Issue Labeler, PR labeler, .github readme Updated README with Issue Template information, and regex to metrics Co-authored-by: Kit Patella kit@jepsen.io"
7283,auto-updated agent/uiserver/bindata_assetfs.go from commit 3a89c7d23,
7284,ui: CSS margin/border alterations (#8796),  ui: Reorganize page top margins and borders   Tweak definition table copy-buttons   Make room for intro paragraphs 
7285,auto-updated agent/uiserver/bindata_assetfs.go from commit dfe57406d,
7286,ui: Defer requesting gateway related services until the tab is visible (#8803),  ui: Defer requesting gateway related services until the tab is visible   Extend one route with the other as they are the same thing dsatawise 
7287,auto-updated agent/uiserver/bindata_assetfs.go from commit b871837ee,
7288,ui: Create template-anchor helper and remove component (#8798),
7289,rpcclient: Add health.Client and use it in http and dns,"This new package provides a client agent implementation of an interface for fetching the health of services. This approach has a number of benefits:   It provides a much more explicit interface. Instead of everything    dependency on RPC() and Cache.Get() for many unrelated things    they can depend on a type that are named according to the behaviour    it provides.   It gives us a single place to vary the behaviour and migrate to    a new form of RPC (gRPC). The current implementation has two options    (cache, or direct RPC), and in the future we will have more.    It is also a great opporunity to start adding context.Context args    to these operations, which in the future will allow us to cancel    the operations.   As a concequence of the first, in the Server agent where we make    these calls we can replace the current in-memory RPC calls with    a thin adapter for the real method. This removes the net/rpc    machinery from the call in places where it is not needed.   This new package is quite small right now, but I think we can expect it to grow to a more reasonable size as other RPC calls are replaced. This change also happens to replace two very similar implementations with a single implementation."
7290,lib/retry: Refactor to reduce the interface surface,"Reduce Jitter to one function Rename NewRetryWaiter Fix a bug in calculateWait where maxWait was applied before jitter, which would make it possible to wait longer than maxWait."
7291,lib/retry: export fields,"The fields are only ever read by Waiter, and setting the fields makes the calling code read much better without having to create a bunch of constants that only ever get used once."
7292,lib/retry: extract a new package from lib,
7293,remove consul.api.http from filtered metric prefixes,
7294,"add doc entry for new metric consul.api.http, mark consul.http.. as deprecated in 1.9",
7295,Merge pull request #8271 from coignetp/http-metrics-label,Use method and path as labels for http metrics
7296,auto-updated agent/uiserver/bindata_assetfs.go from commit 8b409529a,
7297,ci: fix bindata autoupdate (#8801),"  update bindata on ui-v2/ changes   Revert ""Remove GIT_SHA environment variable""   This reverts commit f620f9aefd41362ce76c3a8e0f4addf402ee0ca2.  Revert ""Hardcode in an app version for ember-cli-app-version""  This reverts commit 5ae493d79b34ef2143d78a44c21a63623140bba8.  revert modtime change in #8712"
7298,stream: full test coverage for EventPublisher.Subscribe,
7299,Update proto for change to stream framing events,
7300,stream: refactor to support change in framing events,"Removing EndOfEmptySnapshot, add NewSnapshotToFollow"
7301,Merge pull request #8711 from hashicorp/streaming/add-protobuf-types-convert-gen,proto: add code to convert between protobuf types and structs types
7302,Merge pull request #8769 from hashicorp/streaming/prep-for-subscribe-service,state: use protobuf Topic and and export payload type
7303,ui: Show service and node checks as a merged list sorted by health (#8797),
7304,Update k8s upgrade docs (#8789), Update k8s upgrade docs
7305,Merge pull request #8694 from hashicorp/ui-config-metrics,Add config changes for UI metrics
7306,Update all the references in CI and makefile to the bindata file location,
7307,ensure these tests work fine with namespaces in enterprise (#8794),
7308,agent: enable enable_central_service_config by default (#8746),
7309,ui: Fix up tab separator CSS to not apply to all tabs (#8792),
7310,ui: Initialize chain variable to null (#8791),
7311,Fix ui dir where there is no index tests and lint issue.,
7312,"Refactor uiserver to separate package, cleaner Reloading",
7313,ui: Outlet Loading (#8779),Moves all Route/model hook loading to use Outlet components which listen on route change.
7314,server: ensure that we also shutdown network segment serf instances on server shutdown (#8786),"This really only matters for unit tests, since typically if an agent shuts down its server, it follows that up by exiting the process, which would also clean up all of the networking anyway."
7315,ci: only add consul binary to dev tarball (#8785),
7316,connect: Enable renewing the intermediate cert in the primary DC,
7317,Fix reload test; address other PR feedback,
7318,Fix JSON encoding of metrics options which broke the index but didn't break tests.,Also add tests that do catch that error.
7319,Add config changes for UI metrics,
7320,Merge pull request #8782 from hashicorp/dnephin/disable-codecov-annotations,Disable codecov annotations in github PRs
7321,Disable publish static assets,"The contents are diff on every change, so it is publishing in a loop"
7322,Disable codecov annotations in github PR diffs,
7323,auto-updated agent/bindata_assetfs.go from commit 1a6f3d524,
7324,auto-updated agent/bindata_assetfs.go from commit 8e174cae6,
7325,auto-updated agent/bindata_assetfs.go from commit 823d6dadb,
7326,add git config for static assets (#8777),  add git config for static assets   add commit sha to static-asset auto commit 
7327,ui: Update to service index page (#8775),  Add 'in service mesh ...' to the composite rows in Service List page   Add associated services count to terminating and ingress gateways in Service List page   Update mesh icon in icon-defintion files 
7328,ui: Centralized Config Intention Permission CRUD (#8762),
7329,Merge pull request #8776 from hashicorp/ci/fix-auto-bindata,commit a new bindata file if there are changes
7330,commit a new bindata file if there are changes,
7331,ci:add check for bindata_assetfs changes (#8712),"  add check for bindata_assetfs changes   Remove GIT_SHA environment variable   Hardcode in an app version for ember-cli-app-version   change ' to "" for CONSUL_UI_SETTINGS_PLACEHOLDER   Co-authored-by: John Cowen jcowen@hashicorp.com Co-authored-by: hashicorp-ci hashicorp-ci@users.noreply.github.com"
7332,ui: Upgrades ember and related to latest 3.20 LTS release (#8761),  ui: Upgrades ember and related to latest 3.20 LTS release   Delete ember-portal related tests   As we are running inline and block component tests in the same test an error is raised as we are adding the same named portal twice. Tests were deleted here as they weren't really testing anything anyway
7333,Fix GRPCUseTLS flag HTTP API mapping,
7334,UI Service Dump Gateway Enhancements,"This PR adds some enhancements needed for additional UI functionality related to gateways:  ConnectedWithProxy and ConnectedWithGateway track whether a service is proxied by a gateway or Connect proxy. GatewayConfig.AssociatedServiceCount tracks the number of service names associated with a gateway The main change is that Internal.ServiceDump now returns a dump of the gateway-services table, and we join the information from both of those on the client side."
7335,Resolve conflicts,
7336,api: support GetMeta() and GetNamespace() on all config entry kinds (#8764),"Fixes #8755 Since I was updating the interface, i also added the missing GetNamespace(). Depending upon how you look at it, this is a breaking change since it adds methods to the exported interface api.ConfigEntry. Given that you cannot define your own config entry kinds, and all of the machinery of the api.Client acts like a factory to construct the canned ones from the rest of the module, this feels like it's not a problematic change as it would only break someone who had reimplemented the ConfigEntry interface themselves for no apparent utility?"
7337,stream: move goroutine out of New,This change will make it easier to manage goroutine lifecycle from the caller. Also expose EventPublisher from state.Store
7338,state: use pbsubscribe.Topic for topic values,
7339,state: rename and export EventPayload,"The subscribe endpoint needs to be able to inspect the payload to filter events, and convert them into the protobuf types. Use the protobuf CatalogOp type for the operation field, for now. In the future if we end up with multiple interfaces we should be able to remove the protobuf dependency by changing this to an int32 and adding a test for the mapping between the values. Make the value of the payload a concrete type instead of interface{}. We can create other payloads for other event types."
7340,proto: Add a round trip test for converting types,
7341,Vendor gofuzz and google/go-cmp,
7342,proto: add code to convert between protobuf types and structs types,For streaming service health events. Code generated using mog.
7343,proto: add convert function for protobuf/types.Struct,Co-authored-by: Paul Banks banks@banksco.de
7344,docs: specify what version usage metrics were added in (#8767),
7345,Fix typos in telemetry.mdx,
7346,fix jepsen circular redirect (#8757),
7347,Merge pull request #8726 from amenzhinsky/grpc-hc-error,Return grpc serving status in health check errors
7348,Add changelog file,
7349,Merge pull request #8751 from karras/fix_docs_typo_services,Fix typo in Service Discovery/Services documentation
7350,fix ent error (#8750),
7351,Fix typo in Service Discovery/Services documentation,
7352,Improve the Azure cloud auto join documentation (#8530), Update the Azure cloud auto join documentation with more explicit information on how to configure the infrastructure. Add a note regarding the length of time taken for Azure to sync the MSI permissions. Update references from tag_name to tag_key in the Azure examples Co-authored-by: Jono Sosulska 42216911+jsosulska@users.noreply.github.com
7353,Merge pull request #8678 from hashicorp/watsonian/upgrade-docs,docs: Add documentation for large version jump upgrades
7354,agent: when enable_central_service_config is enabled ensure agent reload doesn't revert check state to critical (#8747),Likely introduced when #7345 landed.
7355,server: make sure that the various replication loggers use consistent logging (#8745),
7356,Merge pull request #8630 from hashicorp/streaming/add-protobuf-types,streaming: add protobuf for subscribe service and events
7357,docs: highlight Vault service mesh CA integration (#8730),
7358,use errors.As() for wrapped ServerError,
7359,proto: split pbservice into multiple files,"There are many types in this package, splitting them into node, service, healthcheck helps show the relationship between these types."
7360,proto: Add protos for subscribing to service health events.,Co-authored-by: Paul Banks banks@banksco.de
7361,Update build-support/scripts/proto-gen.sh,
7362,agent: make the json/hcl decoding of ConnectProxyConfig fully work with CamelCase and snake_case (#8741),Fixes #7418
7363,add -list-primary to consul keyring command (#8692),  add -list-primary   add docs   use builder   fix multiple actions 
7364,Merge pull request #8735 from ncode/master,remove nodeName call when using -service
7365,Merge pull request #8667 from hashicorp/streaming/grpc-client-conn-router,streaming: grpc.ClientConnPool and grpc resolver
7366,agent/grpc: always close the conn when dialing fails.,
7367,agent/grpc: seed the rand for shuffling servers,
7368,agent/grpc: use router.Manager to handle the rebalance,"The router.Manager is already rebalancing servers for other connection pools, so it can call into our resolver to do the same. This change allows us to remove the serf dependency from resolverBuilder, and remove Datacenter from the config. Also revert the change to refreshServerRebalanceTimer"
7369,grpc: restore integration tests for grpc client conn pool,Add a fake rpc Listener
7370,router: remove grpcServerTracker from managers,"It only needs to be refereced from the Router, because there is only 1 instance, and the Router can call AddServer/RemoveServer like it does on the Manager."
7371,"grpc: redeuce dependencies, unexport, and add godoc","Rename GRPCClient to ClientConnPool. This type appears to be more of a conn pool than a client. The clients receive the connections from this pool. Reduce some dependencies by adjusting the interface baoundaries. Remove the need to create a second slice of Servers, just to pick one and throw the rest away. Unexport serverResolver, it is not used outside the package. Use a RWMutex for ServerResolverBuilder, some locking is read-only. Add more godoc."
7372,grpc: move client conn pool to grpc package,
7373,grpc: client conn pool and resolver,Extracted from 936522a13c07e8b732b6fde61bba23d05f7b9a70 Co-authored-by: Paul Banks banks@banksco.de
7374,Merge pull request #8680 from hashicorp/dnephin/replace-consul-opts-with-base-deps,agent: Repalce ConsulOptions with a new struct from agent.BaseDeps
7375,ui: Correct readonly L7 Intentions API calls (#8725),"  Disable ability to select destination if not creating   Add a LegacyID for intentions that don't have them   Use /exact/ endpoint for reading single intentions   Fix up test for new API interaction   Upgrade consul-api-double   Comment out tests using destination for the moment   Also, removed any intention related things from the old page-navigation tests"
7376,Fix bad int -> string conversions caught by go vet changes in 1.15 (#8739),
7377,Add alias-node option info (#8706),
7378,fix command in cherry-picker script (#8738),
7379,remove nodeName call when using -service, fix #8734
7380,ui: Go back to expecting falsey values during config env tests (#8710),
7381,Update index.mdx (#8727),Fixed a gramatical mistake.
7382,Adding Vault ACL examples for Connect CA (#8536),
7383,added permission denied error message (#8044),
7384,use service datacenter for dns name (#8704), Use args.Datacenter instead of configured datacenter
7385,Return grpc serving status in health check errors,
7386,Reword docs to make k8s arch clear (#8723), Reword docs to make k8s arch clear  Co-authored-by: Iryna Shustava ishustava@users.noreply.github.com
7387,ui: Various CSS amends (#8708),  ui: Various CSS amends   Split out %icon-definition from %composite-row  Add hover effect to node listing Fix up proxy level list components Rename our various pills to use a 100-900 scale  Reogranize other icon related things (consul-kind and consul-external-source)   Fix up upstream test 
7388,Incorporate changes from engineering review,
7389,Language changes from review,Co-Authored-By: Derek Strickland 1111455+DerekStrickland@users.noreply.github.com
7390,Add documentation for large version jump upgrades.,
7391,Add Using in Production Question (#8718),  website: add using in prod question   adjust padding 
7392,cherrypick docs to latest release branch (#8719),
7393,Clarify consul maint enable/disable scope (#8615),Try to make it more clear to an operator that toggling off a node-level maintenance is independent of toggling service level maintenance.
7394,docs: Fix typo in tutorial URL (#8716),
7395,ServerError type check before EOF string comparison,
7396,Merge pull request #8619 from hashicorp/dnephin/http-server-rename,http: rename HTTPServer to HTTPHandlers
7397,api: rename HTTPServer to HTTPHandlers,"Resolves a TODO about naming. This type is a set of handlers for an http.Server, it is not itself a Server. It provides http.Handler functions."
7398,docs: Add go-sockaddr examples for bind_addr (#8677),Add examples of using a go-sockaddr template with bind_addr within HCL or JSON configuration. Resolves #8633
7399,docs: Add missing options for consul connect envoy (#8670),Document missing CLI options for the consul connect envoy command. Resolves #8041
7400,ui: Read-only CRD/Centralized Config Intentions (#8659),
7401,fix TestLeader_SecondaryCA_IntermediateRenew (#8702), fix lessThanHalfTime get lock for CAProvider() make a var to relate both vars rename to getCAProviderWithLock move CertificateTimeDriftBuffer to agent/connect/ca
7402,remove t.Parallel(),
7403,Add unit tests for isErrEOF(),
7404,Merge pull request #8638 from eckdanny/docs/clarify-kv-keys-url-safe,docs: clarify KV url-safe key names
7405,Merge pull request #8701 from hashicorp/mw.adjust-alert-banner-language,website: change sku to tier
7406,website: change sku to tier,
7407,Merge pull request #8700 from hashicorp/mw.add-hcs-azure-alert-bar,website: update alert bar for HCS prod sku
7408,fix typo in 1.8.4 changelog line,
7409,website: update alert bar for HCS prod sku,
7410,Merge pull request #8620 from hashicorp/dnephin/better-impl-of-TestAgent.HTTPAddr,http: fix tests incorrectly using HTTPAddr to get the address of the https server
7411,Use errors.Is() in IsErrEOF(),"IsErrEOF returns false when it should return true in a couple of cases:  if the error has been wrapped in another error (for example, if EOF is wrapped in an RPC error) if the error has been created from an Error field in an RPC response (as it is the case in CallWithCodec in the net-rpc-msgpackrpc package for example)"
7412,test: update tags for database service registrations and queries (#8693),
7413,ui: Add services count to node listings (#8690),
7414,Merge pull request #8668 from hashicorp/BeenzSyed-consulesm,Add Consul ESM to Consul Tools page
7415,Merge pull request #8560 from hashicorp/vault-ca-renew-token,Automatically renew the token used by the Vault CA provider
7416,Add Consul ESM to Consul Tools page,
7417,Add path-based routing example to Ingress docs (#8672),Add configuration example for HTTP path-based routing with virtual services to Ingress gateway configuration entry documentation. Resolves #8018
7418,Merge pull request #8685 from pierresouchay/do_not_flood_logs_with_Non-server_in_server-only_area,[BUGFIX] Avoid GetDatacenter* methods to flood Consul servers logs
7419,Update .changelog/8685.txt,
7420,Merge branch 'master' into vault-ca-renew-token,
7421,agent/consul: pass dependencies directly from agent,"In an upcoming change we will need to pass a grpc.ClientConnPool from BaseDeps into Server. While looking at that change I noticed all of the existing consulOption fields are already on BaseDeps. Instead of duplicating the fields, we can create a struct used by agent/consul, and use that struct in BaseDeps. This allows us to pass along dependencies without translating them into different representations. I also looked at moving all of BaseDeps in agent/consul, however that created some circular imports. Resolving those cycles wouldn't be too bad (it was only an error in agent/consul being imported from cache-types), however this change seems a little better by starting to introduce some structure to BaseDeps. This change is also a small step in reducing the scope of Agent. Also remove some constants that were only used by tests, and move the relevant comment to where the live configuration is set. Removed some validation from NewServer and NewClient, as these are not really runtime errors. They would be code errors, which will cause a panic anyway, so no reason to handle them specially here."
7422,agent/consul: make router required,
7423,Merge pull request #8679 from hashicorp/streaming/fix-TestHandler_EmitsStats,streaming: Fix TestHandler_EmitsStats
7424,Update vault CA for latest api client,
7425,Update UI Config passing to not use an inline script (#8645),  Update UI Config passing to not use an inline script   Update agent/http.go   Fix incorrect placeholder name 
7426,vendor: Update vault api package,
7427,Update API docs for GET /operator/keyring (#8691),The response includes a new field: PrimaryKeys that lists the installed primary keys.
7428,Clean up CA shutdown logic and error,
7429,Merge pull request #8646 from hashicorp/common-intermediate-ttl,Move IntermediateCertTTL to common CA config
7430,website: Add redirects for additional pages (#8684),Add redirects for additional pages which have old URLs being returned in search engine results.
7431,ui: Use runInDebug to add error logging to logger service (#8658),
7432,ui: Add in-repo addon to configure inclusion of components/*/.scss (#8660),
7433,Merge pull request #8689 from hashicorp/je.fix-redirects,Broken link fixes
7434,Create 8646.txt,
7435,round 2,
7436,redirect fix round 1,
7437,Added Changelog for PR #8685.,
7438,[BUGFIX] Avoid GetDatacenter* methods to flood Consul servers logs,"When calling GetDatacentersByDistance() or GetDatacentersMap(), an incorrect condition was used to diplay log message, thus flooding Consul's logs. Example of message: [WARN] agent.router: Non-server in server-only area: non_server=myClientNode area=lan This message is only valid for WAN areas, filter to avoid creating hundreds of logs/s on our clusters, each time someone is calling this method. Our logs were flooded by such messages when migrating our Consul servers from 1.7.7 to 1.8.4. This will issue fix #8663"
7439,docs: Add -node-identity option to token and role command (#8671),Document -node-identity option which was added in #7970 for acl token <create|update> and acl role <create|update> commands.
7440,agent/grpc: make TestHandler_EmitsStats predictable,"Occasionally this test would flake. The flakes were fixed by:   Stopping the service and retrying to check on metrics. This way we    also include the active_streams going to 0 in the metric calls.   Using a reference to the global Metrics. This way when other tests    have background goroutines that are still shutting down, they won't    emit metrics to the metric instance with the fake Sink. The stats    test can patch the local reference to the global, so the existing    statHandlers will continue to emit to the global, but the stats    test will send all metrics to the replacement. "
7441,"Update go-metrics dependencies, to use metrics.Default()",
7442,grpc: add Datacenter field to testing service response,
7443,Fix text type assertion,
7444,Merge master,
7445,Fix type assertion,
7446,Create 8585.txt,
7447,Merge pull request #8587 from hashicorp/streaming/add-grpc-server,streaming: add gRPC server for handling connections
7448,Support specifying load balancer configuration for destination services,"Load balancing policies are configured in service-resolvers. All Envoy load balancing algorithms are currently supported. Including: least_request, round_robin, random, maglev, and ring_hash. At the moment hash-based load balancing configuration is not applied at mesh gateways since they cannot decrypt traffic to inspect HTTP attributes like headers."
7449,Fixed broken install links (#8674),
7450,Create compatability.mdx for Consul Kubernetes docs (#8655),Create Compatibility Matrix page for Consul and Consul on Kubernetes underneath Upgrade section in the Kubernetes docs.
7451,Resolve conflicts against master,
7452,Add session flag to cookie config,
7453,Added docs link to Learn tutorial for Kind. (#8610),
7454,Merge pull request #8666 from hashicorp/update-docs-redirect,Update _redirects
7455,Website Links to Learn (#8641),  update links   Update website/pages/home/index.jsx 
7456,Update _redirects, updating old acl redirects removed duplicate ones I added previously toward the bottom
7457,"changelog: add 1.8.4, 1.7.8 and 1.6.9 [skip ci]",
7458,Update website docs,
7459,PR comments,
7460,Fixed broken link to Helm Chart install page. (#8662),
7461,Clean up Vault renew tests and shutdown,
7462,Revert EnvoyConfig nesting,
7463,vendor: bump consul/api to v1.7.0,
7464,Merge pull request #8647 from paulburlumi/dev/testutil_testing_interface,testutil: use TestingTB instead of testing.TB
7465,testutil: use TestingTB instead of testing.TB,
7466,add entry for 8588 (#8650),
7467,Use mapstructure for decoding vault data,
7468,Add a stop function to make sure the renewer is shut down on leader change,
7469,Move IntermediateCertTTL to common CA config,
7470,Add a test for token renewal,
7471,Merge pull request #8544 from hashicorp/watsonian/consul-acl-translate-rules-typo,Fix usage typo for consul acl translate-rules
7472,Merge pull request #8642 from hashicorp/update-docs-integration,added Integration category
7473,s/translate rules/translate-rules/,Just fixes a typo in the command's usage info.
7474,added Integration category," added ""Integration"" category added redirects"
7475,Merge pull request #8639 from hashicorp/k8s-docs-refactor,Move around k8s docs
7476,ui: Default test latency to 0 (#8640),"During development a HTTP request will pause for 1 minute ONLY when an ?index is set. This gives a realistic emulation of blocking queries. During testing we can change this latency when we are testing blocking queries, which we do in numerous places. A problem can arise during testing on a very slow machine. If you are not testing blocking queries and therefore not set a latency to test with, if the machine you are testing on is slow enough a normal page can assert during a test, yet not tear down before a further blocking query request is made. This blocking query then uses the default latency which cause the page to hang for 1 minute, which in turn causes the test to timeout. This only seems to happen on a very slow system, but it does potentially explain why we occasionally see the odd flakey test popping up."
7477,Move around k8s docs, k8s > ambassador integration moved to k8s > service mesh > ambassador integration k8s > get started > overview moved to k8s > get started > install with helm chart k8s > helm chart reference renamed to helm chart configuration
7478,Update index.mdx (#8632),renamed page to remain consistent
7479,ui: Move %definition-table to use CSS grid (#8629),
7480,ui: Reinstate listing of available test steps via CLI (#8614),  Unignore any bin files underneath the UI folder   Add previously ignored node exec script   Rearrange steps file so we can continue to list steps out 
7481,ui: [Bugfix] KV creation from within a 'folder' (#8613),  ui: Prefill an newly created KV for the when we are on a create route   ui: Add some KV creation tests 
7482,docs: clarify KV url-safe key names,
7483,docs: Fix rendering of link under service config endpoint,HTML and markdown cannot be present in the same line. Change markdown link to HTML anchor element.
7484,Merge pull request #8631 from hashicorp/update-docs,Update useSystemRoots docs for k8s
7485,Move helm reference out,
7486,Update useSystemRoots docs for k8s,
7487,grpc: Add a simple test service for testing the gRPC server,
7488,server: add gRPC server for streaming events,Includes a stats handler and stream interceptor for grpc metrics. Co-authored-by: Paul Banks banks@banksco.de
7489,Merge pull request #8593 from hashicorp/pruett.integrate-search,Integrate @hashicorp/react-search into layout
7490,Integrate @hashicorp/react-search into layout,
7491,Add support for -ca-path option in the connect envoy command (#8606), Add support for -ca-path option in the connect envoy command Adding changelog entry
7492,api: create fresh http client for unix sockets (#8602),Co-authored-by: Matt Keeler mkeeler@users.noreply.github.com
7493,Adds changelog entry for snapshot agent improvement (#8622),
7494,Make LockDelay configurable in api locks (#8621),
7495,http: fix tests incorrectly using HTTPAddr to get the address of the,"https server. In #8234 I changed a few tests to use TestAgent.HTTPAddr() to find the addr used in the test. Due to the way HTTPAddr() was implemented these tests were passing, but I think the pass was incidental. HTTPAddr() was not matching any servers, and was instead returning the last server, which happened to be the one these tests wanted. This commit fixes the implementation of HTTPAddr to panic if no match was found. The tests which require an HTTPS server are changed to use a new firstAddr() to look up the correct address."
7496,Set tgw filter router config name to cluster name,
7497,sdk: also print test agent logs in verbose mode (#8616),
7498,add checkout to dev-upload-s3 (#8617),
7499,secondaryIntermediateCertRenewalWatch abort on success (#8588),"secondaryIntermediateCertRenewalWatch was using retryLoopBackoff to renew the intermediate certificate. Once it entered the inner loop and started retryLoopBackoff it would never leave that. retryLoopBackoffAbortOnSuccess will return when renewing is successful, like it was intended originally."
7500,switch to new aws account s3 bucket for dev artifacts (#8612),
7501,Add server receiver to routes and log tgw err,
7502,Merge pull request #8357 from hashicorp/streaming/add-service-health-events,streaming: add ServiceHealth events
7503,Merge pull request #8554 from hashicorp/dnephin/agent-setup-persisted-tokens,agent: move token persistence from agent into token.Store
7504,state: handle terminating gateways in service health events,
7505,state: improve comments in catalog_events.go,Co-authored-by: Paul Banks banks@banksco.de
7506,state: use changeType in serviceChanges,"To be a little more explicit, instead of nil implying an indirect change"
7507,don't over allocate slice,
7508,state: fix a bug in building service health events,"The nodeCheck slice was being used as the first arg in append, which in some cases will modify the array backing the slice. This would lead to service checks for other services in the wrong event. Also refactor some things to reduce the arguments to functions."
7509,state: Remove unused args and return values,Also rename some functions to identify them as constructors for events
7510,state: use an enum for tracking node changes,
7511,state: serviceHealthSnapshot,refactored to remove unused return value and remove duplication
7512,state: Add Change processor and snapshotter for service health,Co-authored-by: Paul Banks banks@banksco.de
7513,state: fix bug in changeTrackerDB.publish,Creating a new readTxn does not work because it will not see the newly created objects that are about to be committed. Instead use the active write Txn.
7514,stream: have SnapshotFunc accept a non-pointer SubscribeRequest,The value is not expected to be modified. Passing a value makes that explicit.
7515,Merge pull request #8234 from hashicorp/dnephin/shutdown-on-http-server-error,agent: shutdown if the http server goroutine exits
7516,Update resolver defaulting,
7517,Update golden files after default route fix for tgw,
7518,Clarifying service definition requirements for registering a service … (#8608),
7519,agent: add apiServers type for managing HTTP servers,Remove Server field from HTTPServer. The field is no longer used.
7520,api: Add a context to ServiceRegisterOpts,So that operations can timeout instead of hanging forever
7521,Fix http assertion in route creation,
7522,docs: forgot to change this version number when the feature was backported (#8607),
7523,Add explicit protocol overrides in tgw xds test cases,
7524,Fixup stray LB infix refs,
7525,Ensure resolver node with LB isn't considered default,
7526,Move valid policies to pkg level,
7527,Remove LB infix and move injection to xds,
7528,connect: all config entries pick up a meta field (#8596),Fixes #8595
7529,Merge pull request #8603 from hashicorp/feature/usage-metrics,Track node and service counts in the state store and emit them periodically as metrics
7530,Changelog entry for usage metrics,
7531,connect: fix bug in preventing some namespaced config entry modifications (#8601),"Whenever an upsert/deletion of a config entry happens, within the open state store transaction we speculatively test compile all discovery chains that may be affected by the pending modification to verify that the write would not create an erroneous scenario (such as splitting traffic to a subset that did not exist). If a single discovery chain evaluation references two config entries with the same kind and name in different namespaces then sometimes the upsert/deletion would be falsely rejected. It does not appear as though this bug would've let invalid writes through to the state store so the correction does not require a cleanup phase."
7532,docs: add new usage metrics to telemetry page,
7533,Set metrics reporting interval to 9 seconds,"This is below the 10 second interval that lib/telemetry.go implements as its aggregation interval, ensuring that we always report these metrics."
7534,Update godoc string for memdb wrapper functions/structs,
7535,Refactor state store usage to track unique service names,"This commit refactors the state store usage code to track unique service name changes on transaction commit. This means we only need to lookup usage entries when reading the information, as opposed to iterating over a large number of service indices.  Take into account a service instance's name being changed Do not iterate through entire list of service instances, we only care about whether there is 0, 1, or more than 1."
7536,Use ReadTxn interface in state store helper functions,
7537,Add WriteTxn interface and convert more functions to ReadTxn,"We add a WriteTxn interface for use in updating the usage memdb table, with the forward-looking prospect of incrementally converting other functions to accept interfaces. As well, we use the ReadTxn in new usage code, and as a side effect convert a couple of existing functions to use that interface as well."
7538,Report node/service usage metrics from every server,"Using the newly provided state store methods, we periodically emit usage metrics from the servers. We decided to emit these metrics from all servers, not just the leader, because that means we do not have to care about leader election flapping causing metrics turbulence, and it seems reasonable for each server to emit its own view of the state, even if they should always converge rapidly."
7539,Add new usage memdb table that tracks usage counts of various elements,We update the usage table on Commit() by using the TrackedChanges() API of memdb. Track memdb changes on restore so that usage data can be compiled
7540,Restructure structs and other PR comments,
7541,ui: Reinstate tooltip for exposed paths pill (#8598),
7542,ui: Delete unused javascript/CSS components (#8597),
7543,add docs for dual stack options (#8407),
7544,ui: Improved filtering and sorting (#8591),
7545,docs: update structure (#8506)," moved and renamed files/folders based on new structure updated docs navigation based on new structure moved CLI to top nav (created commands.jsx and commands-navigation.js) updated and added redirects updating to be consistent with standalone categories changing ""overview"" link in top nav to lead to where intro was moved (docs/intro) adding redirects for intro content deleting old intro folders format all data/navigation files deleting old commands folder reverting changes to glossary page adjust intro navigation for removal of 'vs' paths add helm page redirect fix more redirects add a missing redirect fix broken anchor links and formatting mistakes deleted duplicate section, added redirect, changed link removed duplicate glossary page"
7546,Merge pull request #8581 from hashicorp/dnephin/logging-tests,logging: Remove t.Parallel from tests
7547,token: OSS support for enterprise tokens,
7548,config: use token.Config for ACLToken config,Using the target Config struct reduces the amount of copying and translating of configuration structs.
7549,agent/token: Move token persistence out of agent,And into token.Store. This change isolates any awareness of token persistence in a single place. It is a small step in allowing Agent.New to accept its dependencies.
7550,fix TestStore_RegularTokens,"This test was only passing because t.Parallel was causing every subtest to run with the last value in the iteration, which sets a value for all tokens. The test started to fail once t.Parallel was removed, but the same failure could have been produced by adding 'tt := tt' to the t.Run() func. These tests run in under 10ms, so there is no reason to use t.Parallel."
7551,Merge of auto-config and auto-encrypt code (#8523),auto-encrypt is now handled as a special case of auto-config. This also is moving all the cert-monitor code into the auto-config package.
7552,Merge pull request #8577 from hashicorp/dnephin/changelog-for-8537,Add missing changelog for PR 8537
7553,Merge pull request #8586 from pierresouchay/changelog_for_8552,Added changelog for #8552
7554,Added changelog for #8552,
7555,Add documentation for resolver LB cfg,
7556,Pass LB config to Envoy via xDS,
7557,Log error as error,
7558,Compile down LB policy to disco chain nodes,
7559,Merge pull request #8548 from edevil/fix_flake,Fix flaky TestACLResolver_Client/Concurrent-Token-Resolve
7560,Merge pull request #8552 from pierresouchay/reload_cache_throttling_config,Ensure that Cache options are reloaded when consul reload is performed
7561,ui: Redesign Node list page (#8567),  Create ConsulNodeList component   Implement ConsulNodeList and the new Search/Sort to Node List page   Minor styling fix to align the first icons in composite row   Fix-up and add tests for the redesigned Node List page   Add Leader to composite row for Node List page   Add test for node leader 
7562,Added Unit test for cache reloading,
7563,Add LB policy to service-resolver,
7564,logging: Remove t.Parallel from tests,The tests all run fast enough that we do not get any advantage from using Parallel. The one test that was slow used a long sleep. Changing the sleep to a few milliseconds speeds up the test considerably.
7565,Add http2 and grpc support to ingress gateways (#8458),
7566,xds: use envoy's rbac filter to handle intentions entirely within envoy (#8569),
7567,agent: ensure that we normalize bootstrapped config entries (#8547),
7568,Also test reload of EntryFetchMaxBurst,
7569,Retroactively add changelog for PR 8537,
7570,Move RPC router from Client/Server and into BaseDeps (#8559),This will allow it to be a shared component which is needed for AutoConfig
7571,Add helpers to the API client to help with getting information from AgentMember tags (#8575),Lots of constants were added for various tags that would concern users and are not already parsed out. Additionally two methods on the AgentMember type were added to ask a member what its ACL Mode is and whether its a server or not.
7572,Tests that changes in rate limit are taken into account by agent,
7573,Added options.Equals() and minor fixes indentation fixes,
7574,Fixes table formatting (#8572),
7575,Merge pull request #8563 from woz5999/docs-typo-fix,fix typo in contributing docs
7576,Update CONTRIBUTING.md,
7577,agent: expose the list of supported envoy versions on /v1/agent/self (#8545),
7578,ui: Split ember-data service model into service/service-instance (#8557),
7579,ui: Tooltip Bugs (#8562),  Fix tooltip offset in Discovery Chain for Firefox Browser   Add z-index to ember-tooltip to over over the search/sort in AppView 
7580,fix typo in contributing docsc,
7581,Automatically renew the token used by the Vault CA provider,
7582,Ensure that Cache options are reloaded when consul reload is performed.,"This will apply cache throttling parameters are properly applied:  * cache.EntryFetchMaxBurst  * cache.EntryFetchRate When values are updated, a log is displayed in info."
7583,Merge pull request #8531 from hashicorp/je.fix-broken-links,"Docs Sidenav Update, Fix Broken Links"
7584,Decrease test flakiness,Fix flaky TestACLResolver_Client/Concurrent-Token-Resolve and TestCacheNotifyPolling
7585,website: add link to certification on /community (#7807),
7586,Merge pull request #8546 from edevil/fix_vet,testing: Fix govet errors
7587,testing: Fix govet errors,
7588,ui: Add new Service.Mesh* properties for improved sorting (#8542)," ui: Serialize proxies into the model, add Mesh* model props  Serializes the proxies associated with a service onto the Service model itself, then adds various Mesh* properties  ui: Uses the new Mesh* properties throughout the app"
7589,Merge pull request #8537 from hashicorp/dnephin/fix-panic-on-connect-nil,Fix panic when decoding 'Connect: null'
7590,Fix panic when decoding 'Connect: null',Surprisingly the json Unmarshal updates the aux pointer to a nil.
7591,Merge pull request #8540 from hashicorp/dnephin/logging-setup-cleanup,logging: cleanup Setup and configuration
7592,ui: Redesign Node Lock Sessions Tab (#8535),  Add delay svg icon   Create ConsulLockSessionList component   Implement ConsulLockSession component in Lock Sessions tab   Create format-time helper   Add Invalidate button and fix up styling   Fixup and add additional tests 
7593,config: use logging.Config in RuntimeConfig,"To add structure to RuntimeConfig, and remove the need to translate into a third type."
7594,logging: move init of grpclog,This line initializes global state. Moving it out of the constructor and closer to where logging is setup helps keep related things together.
7595,logging: Setup accept io.Writer instead of []io.Writer,"Also accept a non-pointer Config, since the config is not modified"
7596,Merge pull request #8511 from hashicorp/dnephin/agent-setup,agent: extract dependency creation from New
7597,ui: Increase spacing between detail items in composite row (#8507),
7598,one more,
7599,testing: disable global metrics sink in tests,"This might be better handled by allowing configuration for the InMemSink interval and retail, and disabling the global. For now this is a smaller change to remove the goroutine leak caused by tests because go-metrics does not provide any way of shutting down the global goroutine."
7600,agent: extract dependency creation from New,"With this change, Agent.New() accepts many of the dependencies instead of creating them in New. Accepting fully constructed dependencies from a constructor makes the type easier to test, and easier to change. There are still a number of dependencies created in Start() which can be addressed in a follow up."
7601,more link fixes,
7602,Merge pull request #8514 from hashicorp/dnephin/testing-improvements-1,testing: small improvements to TestSessionCreate and testutil.retry
7603,Merge pull request #8528 from hashicorp/dnephin/move-node-name-validation,config: Move some config validation from Agent.Start to config.Builder.Validate
7604,fix a bunch of broken links,
7605,Adding warning for ACL replication data loss (#8210),
7606,fix more redirects,
7607,remove invalid redirects,
7608,"upgrade to latest docs-sidenav, fix some issues with the k8s section",
7609,add primary keys to list keyring (#8522),"During gossip encryption key rotation it would be nice to be able to see if all nodes are using the same key. This PR adds another field to the json response from GET v1/operator/keyring which lists the primary keys in use per dc. That way an operator can tell when a key was successfully setup as primary key. Based on https://github.com/hashicorp/serf/pull/611 to add primary key to list keyring output: json [   {     ""WAN"": true,     ""Datacenter"": ""dc2"",     ""Segment"": """",     ""Keys"": {       ""0OuM4oC3Os18OblWiBbZUaHA7Hk+tNs/6nhNYtaNduM="": 6,       ""SINm887hKTzmMWeBNKTJReaTLX3mBEJKriDyt88Ad+g="": 6     },     ""PrimaryKeys"": {       ""SINm887hKTzmMWeBNKTJReaTLX3mBEJKriDyt88Ad+g="": 6     },     ""NumNodes"": 6   },   {     ""WAN"": false,     ""Datacenter"": ""dc2"",     ""Segment"": """",     ""Keys"": {       ""0OuM4oC3Os18OblWiBbZUaHA7Hk+tNs/6nhNYtaNduM="": 8,       ""SINm887hKTzmMWeBNKTJReaTLX3mBEJKriDyt88Ad+g="": 8     },     ""PrimaryKeys"": {       ""SINm887hKTzmMWeBNKTJReaTLX3mBEJKriDyt88Ad+g="": 8     },     ""NumNodes"": 8   },   {     ""WAN"": false,     ""Datacenter"": ""dc1"",     ""Segment"": """",     ""Keys"": {       ""0OuM4oC3Os18OblWiBbZUaHA7Hk+tNs/6nhNYtaNduM="": 3,       ""SINm887hKTzmMWeBNKTJReaTLX3mBEJKriDyt88Ad+g="": 8     },     ""PrimaryKeys"": {       ""SINm887hKTzmMWeBNKTJReaTLX3mBEJKriDyt88Ad+g="": 8     },     ""NumNodes"": 8   } ] I intentionally did not change the CLI output because I didn't find a good way of displaying this information. There are a couple of options that we could implement later: * add a flag to show the primary keys * add a flag to show json output Fixes #3393."
7610,config: Move remote-script-checks warning to config,"Previously it was done in Agent.Start, but it can be done much earlier"
7611,config: move NodeName validation to config validation,"Previsouly it was done in Agent.Start, which is much later then it needs to be. The new 'dns' package was required, because otherwise there would be an import cycle. In the future we should move more of the dns server into the dns package."
7612,Merge pull request #8515 from hashicorp/dnephin/unexport-testing-shims,config: unexport fields and resolve TODOs in config.Builder
7613,Merge pull request #8517 from hashicorp/dnephin/remove-defer-os-removeall,testing: remove all the 'defer os.RemoveAll'
7614,Refactor api-docs links to learn (#8488),
7615,Refactor docs links to learn 2 (#8491),  Refactor docs links to learn   Apply suggestions from code review   Co-authored-by: Derek Strickland 1111455+DerekStrickland@users.noreply.github.com Co-authored-by: Derek Strickland 1111455+DerekStrickland@users.noreply.github.com
7616,Refactor docs links to learn (#8490),
7617,testing: use t.Cleanup in testutil.TempFile,So that it has the same behaviour as TempDir. Also remove the now unnecessary 'defer os.Remove'
7618,testing: Remove all the defer os.Removeall,Now that testutil uses t.Cleanup to remove the directory the caller no longer has to manage the removal
7619,config: unexport and resolve TODOs in config.Builder," unexport testing shims, and document their purpose resolve a TODO by moving validation to NewBuilder and storing the one   field that is used instead of all of Options create a slice with the correct size to avoid extra allocations"
7620,testing: Improve session_endpoint_test,"While working on another change I caused a bunch of these tests to fail. Unfortunately the failure messages were not super helpful at first. One problem was that the request and response were created outside of the retry. This meant that when the second attempt happened, the request body was empty (because the buffer had been consumed), and so the request was not actually being retried. This was fixed by moving more of the request creation into the retry block. Another problem was that these functions can return errors in two ways, and are not consistent about which way they use. Some errors are returned to the response writer, but the tests were not checking those errors, which was causing a panic later on. This was fixed by adding a check for the response code. Also adds some missing t.Helper(), and has assertIndex use checkIndex so that it is clear these are the same implementation."
7621,Use t.Helper in testutil/retry,
7622,Merge pull request #8509 from hashicorp/dnephin/use-t.cleanup-in-testagent,"testing: Use t.cleanup in TestAgent , and fix two flaky tests"
7623,Added link to Secure Consul on K8S Tutorial (#8402),
7624,testutil: Add t.Cleanup to TempDir,"TempDir registers a Cleanup so that the directory is always removed. To disable to cleanup, set the TEST_NOCLEANUP env var."
7625,"changelog: update for 1.8.3, 1.7.7 and 1.6.8 (#8508)","  Update CHANGELOG.md   changelog: update for 1.8.3, 1.7.7 and 1.6.8   Co-authored-by: Sarah Christoff schristoff@hashicorp.com"
7626,testing: fix flaky test TestDNS_NonExistentDC_RPC,"I saw this test flake locally, and it was easy to reproduce with -count=10. The failure was: 'TestAgent.dns: rpc error: error=No known Consul servers'. Waiting for the agent seems to fix it."
7627,testing: wait until monitor has started before shutdown,"This commit fixes a test that I saw flake locally while running tests. The test output from the monitor started immediately after the line the test was looking for. To fix the problem a channel is closed when the goroutine starts. Shutdown is not called until this channel is closed, which seems to greatly reduce the chance of a flake."
7628,testing: Remove TestAgent.Key and change TestAgent.DataDir,"TestAgent.Key was only used by 3 tests. Extracting it from the common helper that is used in hundreds of tests helps keep the shared part small and more focused. This required a second change (which I was planning on making anyway), which was to change the behaviour of DataDir. Now in all cases the TestAgent will use the DataDir, and clean it up once the test is complete."
7629,docs: add docs to use Connect CA providers with Helm (#8464),
7630,testing: use t.Cleanup in TestAgent for returnPorts,
7631,testing: remove unused fields from TestACLAgent,
7632,Learn/link updates derek (#8487), Updated Learn url paths.  Co-authored-by: danielehc 40759828+danielehc@users.noreply.github.com
7633,docs: consul on k8s doesn't support external servers requiring mTLS (#8484),
7634,Merge pull request #8473 from hashicorp/dnephin/unmethod-consul-config,agent: convert consulConfig method to a function
7635,agent: rename vars in newConsulConfig,"'base' is a bit misleading, since it is the return value. Renamed to cfg."
7636,agent: Move setupKeyring functions to keyring.go,There are a couple reasons for this change:  agent.go is way too big. Smaller files makes code eaasier to read    because tools that show usage also include filename which can give    a lot more context to someone trying to understand which functions    call other functions. these two functions call into a large number of functions already in    keyring.go.
7637,agent: unmethod consulConfig,To allow us to move newConsulConfig out of Agent.
7638,Merge pull request #8482 from hashicorp/dnephin/more-state-store-unmethod,state: remove unused Store method receiver
7639,Fix conflict in merged PRs,"One PR renamed the var from config->cfg, and another used the old name config, which caused the build to fail on master."
7640,state: remove unused Store method receiver,And use ReadTxn interface where appropriate.
7641,Merge pull request #8463 from hashicorp/dnephin/unmethod-make-node-id,agent: convert NodeID methods to functions
7642,Merge pull request #8461 from hashicorp/dnephin/remove-notify-shutdown,agent/consul: Remove NotifyShutdown
7643,Merge pull request #8365 from hashicorp/dnephin/fix-service-by-node-meta-flake,state: speed up tests that use watchLimit
7644,Link issue in note template (#8502),"Issue and PR numbers do not overlap, they are based of the same counter. A PR can be also linked to via issues, if it is a PR, Github will redirect to it. This change has the benefit that one can link to both - issues and PRs."
7645,Update k8s sync docs (#8452),  Update k8s sync docs   remove docs that said for nodeport service we register each instance on a node with its same node name. We instead register each instance onto the k8s-sync node  add docs describing which ports and ips are used
7646,Document k8s sidecar resource annotations (#8455),
7647,Update version.js to 1.8.3 (#8505),
7648,Merge pull request #8500 from hashicorp/dnephin/auto-config-loader,auto-config: reduce awareness of config
7649,Update CHANGELOG.md,
7650,auto-config: reduce awareness of config,"This is a small step to allowing Agent to accept its dependencies instead of creating them in New. There were two fields in autoconfig.Config that were used exclusively to load config. These were replaced with a single function, allowing us to move LoadConfig back to the config package. Also removed the WithX functions for building a Config. Since these were simple assignment, it appeared we were not getting much value from them."
7651,Remove check that hostID is a uuid.,"Immediately afterward we hash the ID, so it does not need to be a uuid anymore."
7652,agent: convert NodeID methods to functions,"Making these functions allows us to cleanup how an agent is initialized. They only make use of a config and a logger, so they do not need to be agent methods. Also cleanup the testing to use t.Run and require."
7653,Extract nodeID functions to a different file,"In preparation for turning them into functions. To reduce the scope of Agent, and refactor how Agent is created and started."
7654,update changelog snippet,
7655,connect: use stronger validation that ingress gateways have compatible protocols defined for their upstreams (#8470),"Fixes #8466 Since Consul 1.8.0 there was a bug in how ingress gateway protocol compatibility was enforced. At the point in time that an ingress-gateway config entry was modified the discovery chain for each upstream was checked to ensure the ingress gateway protocol matched. Unfortunately future modifications of other config entries were not validated against existing ingress-gateway definitions, such as:  create tcp ingress-gateway pointing to 'api' (ok) create service-defaults for 'api' setting protocol=http (worked, but not ok) create service-splitter or service-router for 'api' (worked, but caused an agent panic)  If you were to do these in a different order, it would fail without a crash:  create service-defaults for 'api' setting protocol=http (ok) create service-splitter or service-router for 'api' (ok) create tcp ingress-gateway pointing to 'api' (fail with message about    protocol mismatch)  This PR introduces the missing validation. The two new behaviors are:  create tcp ingress-gateway pointing to 'api' (ok) (NEW) create service-defaults for 'api' setting protocol=http (""ok"" for back compat) (NEW) create service-splitter or service-router for 'api' (fail with    message about protocol mismatch)  In consideration for any existing users that may be inadvertently be falling into item (2) above, that is now officiall a valid configuration to be in. For anyone falling into item (3) above while you cannot use the API to manufacture that scenario anymore, anyone that has old (now bad) data will still be able to have the agent use them just enough to generate a new agent/proxycfg error message rather than a panic. Unfortunately we just don't have enough information to properly fix the config entries."
7656,Notify alias checks when aliased service is [de]registered (#8456),
7657,Merge pull request #8469 from hashicorp/dnephin/config-source,config: make Source an interface to avoid the marshal/unmarshal cycle in auto-config
7658,ci: bump Go to v1.14.7 (#8449),
7659,Merge pull request #8471 from hashicorp/local_only,thread local-only through the layers
7660,Internal endpoint to query intentions associated with a gateway (#8400),
7661,docs: update helm chart ref (#8483),No longer require servers to be running on k8s when manageSystemACLs is true
7662,Merge pull request #8453 from hashicorp/dnephin/fix-test-server-timeout,sdk: mitigate api test timeout
7663,Fix a state store comment about version,
7664,Merge pull request #8474 from hashicorp/snapshot-index-fix,fsm: Fix snapshot bug with restoring node/service/check indexes
7665,fsm: Fix snapshot bug with restoring node/service/check indexes,
7666,Update CHANGELOG.md,
7667,ui: Reduce reconnection attempts on disconnection (#8481), ui: Reduce reconnection attempts on disconnection  The UI will attempt to reconnect/retry a blocking query to Consul after a disconnection in certain circumstances.  On receipt of a 5xx error (used for keeping blocking queries running through reverse proxies that have lowertimeouts than consul itself) When a user switches to a different tab and back again) When the connection to Consul is dropped entirely (when Consul itself has exited)  In the last case the retry attempts where not using a 3 second interval between attempts like the first case is. This commit changes the last case to use the same 3 second pause as the last case.
7668,ui: Add Optgroups and selectedItems to multiple select dropdown and use (#8476),  ui: Switch selects to use more HTML-like approach for optgroups   Add KV comparator   Use new option/optgroup approach for sort/select   Fix up tests for new order of menu items 
7669,ui: Passthrough any error from a route:application refresh (#8480),
7670,ui: Add unique slug key id to proxy (#8479),
7671,Update Go-Metrics 0.3.4 (#8478),
7672,Use SIGABRT to get a stack trace when the timeout is hit,
7673,Refactor keyring ops:, changes some functions to return data instead of modifying pointer   arguments renames globalRPC() to keyringRPCs() to make its purpose more clear restructures KeyringOperation() to make it more understandable
7674,thread local-only through the layers,$ consul keyring -list -local-only ==> Gathering installed encryption keys... dc1 (LAN):   aUlAW4ST3+vwseI61so24CoORkyjZofcmHk+j7QPSYQ= [1/1]
7675,auto-config: Avoid the marshal/unmarshal cycle in auto-config,Use a LiteralConfig and return a config.Config from translate.
7676,Update error handling,
7677,config: Make Source an interface,This will allow us to accept config from auto-config without needing to go through a serialziation cycle.
7678,ui: Dropdown/select improvements (#8468),  ui: Better org of split-button/sort-button ready for design change   ui: Improve keyboard accessibility of dropdown menu 
7679,ui: Add sorting to namespaces (#8405),  Add sorting to namespaces   Add sorting to namespaces   ui: Fix up default namespace no delete test (#8467)   Co-authored-by: John Cowen johncowen@users.noreply.github.com
7680,ui: Rework popover-menu auto closing (#8340),  ui: Move more menu subcomponents deeper down into popovermenu   ui: Simplify aria-menu component+remove auto menu close on route change   Add ember-string-fns   Use new PopoverMenu sub components and fix up tests   Fix up wrong closing let   Remove dcs from the service show page now we have it in the navigation 
7681,"changelog: Update for 1.8.2, 1.7.6, 1.7.5 and 1.6.7 (#8462)","  update bindata_assetfs.go   Release v1.8.2   Putting source back into Dev Mode   changelog: add entries for 1.7.6, 1.7.5 and 1.6.7   Co-authored-by: hashicorp-ci hashicorp-ci@users.noreply.github.com"
7682,testing: remove unnecessary defers in tests,The data directory is now removed by the test helper that created it.
7683,api: bump consul/api to v1.6.0 and consul/sdk to v0.6.0 (#8460),  api: bump consul/sdk dependency to v0.6.0   api: bump dependency to v1.6.0 
7684,testing: Remove NotifyShutdown,"NotifyShutdown was only used for testing. Now that t.Cleanup exists, we can use that instead of attaching cleanup to the Server shutdown. The Autopilot test which used NotifyShutdown doesn't need this notification because Shutdown is synchronous. Waiting for the function to return is equivalent."
7685,Specify allowed ingress gateway protocols in docs (#8454),Co-authored-by: Freddy freddygv@users.noreply.github.com
7686,Update CHANGELOG.md,
7687,Update CHANGELOG.md,
7688,Require token replication to be enabled in secondary dcs when ACLs are enabled with AutoConfig (#8451),"AutoConfig will generate local tokens for clients and the ability to use local tokens is gated off of token replication being enabled and being configured with a replication token. Therefore we already have a hard requirement on having token replication enabled, this commit just makes sure to surface that to the operator instead of having to discern what the issue is from RPC errors."
7689,Update CHANGELOG.md,
7690,auto_config implies connect (#8433),
7691,Merge pull request #8426 from hashicorp/docs/k8s-resources,Add lifecycle sidecar and init container resource settings docs
7692,Add lifecycle sidecar and init container resource settings docs,
7693,Introducing changelog-gen (#8387), add templates for changelog-gen add entry files for currently unreleased PRs on master
7694,sdk: mitigate api test timeout,"Occasionally we are seeing the go-test-api job timeout at 10 minutes. Looking at the stack trace I saw the following:   Lots of tests blocked on server.Stop in NewTestServerConfigT. This    suggests that SIGINT is being sent to the server, but the server is    not properly shutting down.   Over 20k goroutines that look like this:   goroutine 16355 [select, 8 minutes]: net/http.(persistConn).readLoop(0xc004270240)     /usr/local/go/src/net/http/transport.go:2099 +0x99e created by net/http.(Transport).dialConn     /usr/local/go/src/net/http/transport.go:1647 +0xc56 Issue 1 seems to be the main problem, but debugging that directly is not possible because our buffered logs do not get sent when the tests timeout. To mitigate this problem I've added a timeout to the cmd.Wait() to force kill the process and return an error. Unfortunately because we retry this operation, we still may not see the cause because the next attempt will likely pass. I'm tempted to remove the retry around NewTestServerConfigT. Issue 2 seems to be caused by not closing the response body. Since the request is performed many times in a loop, many goroutines are created and are not closed until the response body is closed."
7695,Update CHANGELOG.md,
7696,Fix test build,
7697,website: Redirect /mesh to new URL,Redirect service mesh use case page to point to new URL.
7698,Mark its own cluster as healthy when rebalancing. (#8406),This code started as an optimization to avoid doing an RPC Ping to itself. But in a single server cluster the rebalancing was led to believe that there were no healthy servers because foundHealthyServer was not set. Now this is being set properly. Fixes #8401 and #8403.
7699,PR comments and addtl tests,
7700,Update version.js to 1.8.1 (#8439),
7701,update changelog,
7702,xds: revert setting set_node_on_first_message_only to true when generating envoy bootstrap config (#8440),When consul is restarted and an envoy that had already sent DiscoveryRequests to the previous consul process sends a request to the new process it doesn't respect the setting and never populates DiscoveryRequest.Node for the life of the new consul process due to this bug: https://github.com/envoyproxy/envoy/issues/9682 Fixes #8430
7703,Merge pull request #8404 from hashicorp/dnephin/remove-log-output-field,"Use Logger consistently, instead of LogOutput"
7704,Rename NewClient/NewServer,Now that duplicate constructors have been removed we can use the shorter names for the single constructor.
7705,Remove LogOutput from Agent,"Now that it is no longer used, we can remove this unnecessary field. This is a pre-step in cleanup up RuntimeConfig->Consul.Config, which is a pre-step to adding a gRPCHandler component to Server for streaming. Removing this field also allows us to remove one of the return values from logging.Setup."
7706,Remove LogOutput from Server,
7707,Remove LogOutput from Client,
7708,Merge pull request #8437 from hashicorp/dnephin/fix-service-checks-cache-type,cache-type: Return nil value on error
7709,"Pass a logger to ConnPool and yamux, instead of an io.Writer",Allowing us to remove the LogOutput field from config.
7710,api: Use a Logger instead of an io.Writer in api.Watch,"So that we can pass around only a Logger, not a LogOutput"
7711,config: Remove unused field,
7712,Return nil value on error.,"The main bug was fixed in cb050b280ceb4186de765118611a7a92d8158c3f, but the return value of 'result' is still misleading. Change the return value to nil to make the code more clear."
7713,Merge pull request #8385 from hashicorp/dnephin/check-generated,ci: Add check-generated-protobuf
7714,update changelog,
7715,xds: add support for envoy 1.15.0 and drop support for 1.11.x (#8424),Related changes:  hard-fail the xDS connection attempt if the envoy version is known to be too old to be supported remove the RouterMatchSafeRegex proxy feature since all supported envoy versions have it stop using --max-obj-name-len (due to: envoyproxy/envoy#11740)
7716,collect GatewayServices from iter in a function,
7717,Simple tls cert create help text typo,
7718,Update CHANGELOG.md,
7719,Removed trailing backslash in CHANGELOG (#8414),
7720,Update CHANGELOG.md (#8413),
7721,Avoid panics during shutdown routine (#8412),
7722,Update CHANGELOG.md,
7723,end to end changes to pass gatewayservices to /ui/services/,
7724,Add some auto-config docs (#8410),We will probably want a tutorial about this in the future but for now at least we document it a little.
7725,Update CHANGELOG.md,
7726,Ensure certificates retrieved through the cache get persisted with auto-config (#8409),
7727,Support ConnectedWithProxy,
7728,Allow setting verify_incoming* when using auto_encrypt or auto_config (#8394),Ensure that enabling AutoConfig sets the tls configurator properly This also refactors the TLS configurator a bit so the naming doesn’t imply only AutoEncrypt as the source of the automatically setup TLS cert info.
7729,Mention agent-cache ratelimiting.,
7730,agent/cache test for cache throttling. (#8396),
7731,ui: Add sorting to Policies (#8373),  Add sorting to ACLs policies with comparator   Add acls/roles sorting test   Add navigation test for acls/policies   Update onchange value for sorting policies 
7732,Generate Go files using protobuf 3.12.3,
7733,ci: Add check-generated,And remove makefile targets that can be accomplished with --always-make
7734,api: restore Leader() and Peers() to avoid breaking function signatures (#8395),api: add TestAPI_StatusLeaderWithQueryOptions and TestAPI_StatusPeersWithQueryOptions api: make TestAPI_Status* error messages more verbose
7735,Update CHANGELOG.md,
7736,ui: Add sorting to Roles (#8369),  Add sorting to ACLs roles with comparator   Add acls/roles sorting test   Add navigation feature test to roles   Update onchange value target for sorting roles 
7737,ui: Update onchange value target for sorting tokens (#8399),
7738,ui: Ensure URLs for tabs change when selecting a different DC (#8397),"  ui: Add URLs to tabs to we can assert them   Add dcs to the service show page, temporarily   There is an ongoing PR which removes the need to do this by adding a dcs property to the navigation, hence temporary   Add a step to assert on whether text contains rather than exact match   Test whether the URL of the instance tab changes when the user switches dcs using the main navigation menu   Recompute href-to's on URL change, just like is-href "
7739,ui: Fix up on the onchange value to target for soting intentions (#8398),
7740,ui: Add sorting to ACLs tokens with tests (#8359),  Add sorting to ACLs tokens with tests   Create token comparator and implement in template   Upgrade @hashicorp/consul-api-double to 3.1.6   Add navigation test to acls tokens 
7741,ui: Use X-Range header as a signal as to whether to reconcile the ember-data store (#8384)," ui: Use X-Range header/meta to decide whether to reconcile or not  Previously we used a shouldReconcile method in order to decide whether a response should trigger a reconciliation of the frontend ember-data 'source of truth' or not. It's a lot nicer/clearer if this 'flag' can be set alongside the HTTP request information, moreover we almost have the same functionality in If-Range/Partial Content HTTP functionality. Here we partly follow this HTTP semantics but use a custom X-Range header instead."
7742,Agent Auto Config: Implement Certificate Generation (#8360),Most of the groundwork was laid in previous PRs between adding the cert-monitor package to extracting the logic of signing certificates out of the connect_ca_endpoint.go code and into a method on the server. This also refactors the auto-config package a bit to split things out into multiple files.
7743,add circleci job failure notifications for any jobs on master (#8393),  add circleci job failure notifications for any jobs on master   rename URL variable 
7744,Merge pull request #8389 from hashicorp/fix-master,
7745,docs: Fix typo in -pid file description,Fix typo in -pid file option description. This change restores text which was erroneously deleted in PR #736 with commit f41dce9. Fixes #8388
7746,Default Cache rate limiting options in New,Also get rid of the TestCache helper which was where these defaults were happening previously.
7747,Added QueryOptions for status api (#7818), Added QueryOptions & Tests for status api
7748,ui: Add sorting to Intentions with tests (#8348),  Add sorting to Intentions with tests   Skip Intentions url back test   Create comparator for intention and implement in template   Add a intentions navigation feature test 
7749,Fix some broken code in master,"There were several PRs that while all passed CI independently, when they all got merged into the same branch caused compilation errors in test code. The main changes that caused issues where changing agent/cache.Cache.New to require a concrete options struct instead of a pointer. This broke the cert monitor tests and the catalog_list_services_test.go. Another change was made to unembed the http.Server from the agent.HTTPServer struct. That coupled with another change to add a test to ensure cache rate limiting coming from HTTP requests was working as expected caused compilation failures."
7750,Added ratelimit to handle throtling cache (#8226),"This implements a solution for #7863 It does: Add a new config cache.entry_fetch_rate to limit the number of calls/s for a given cache entry, default value = rate.Inf Add cache.entry_fetch_max_burst size of rate limit (default value = 2)  The new configuration now supports the following syntax for instance to allow 1 query every 3s: command line HCL: -hcl 'cache = { entry_fetch_rate = 0.333}' in JSON  {   ""cache"": {     ""entry_fetch_rate"": 0.333   } }"
7751,docs: Modify website redirects for gateways,Modify the HTTP redirects for the gateway documentation to point to the updated URL locations. Missed in PR #8195.
7752,docs: Modify network segments limitation callout,Change the callout on the Network Segments page to specify the limitation applies to versions of Consul prior to version 1.7.3.
7753,"Revert ""ui: Use X-Range header/meta to decide whether to reconcile or not""",This reverts commit e9f6361d264a0bece6259ccbb5c438fe463d4c15.
7754,"Revert ""ui: Add X-Range header alongside the HTTP info for services/intentions""",This reverts commit f8771ae3eaf3f75a33a4c3ac6297bc6514c987cf.
7755,ui: Add X-Range header alongside the HTTP info for services/intentions,This header value controls whether ember-data should reconcile its local store/data or not.
7756,ui: Use X-Range header/meta to decide whether to reconcile or not,"Previously we used a shouldReconcile method in order to decide whether a response should trigger a reconciliation of the frontend ember-data 'source of truth' or not. It's a lot nicer/clearer if this 'flag' can be set alongside the HTTP request information, moreover we almost have the same functionality in If-Range/Partial Content HTTP functionality. Here we partly follow this HTTP semantics but use a custom X-Range header instead."
7757,docs: Add redirect for /docs/k8s/connect.html,Redirect /docs/k8s/connect.html to /docs/k8s/connect/overview.
7758,Gateway tasks and overview (#8195),Co-authored-by: Blake Covarrubias blake@covarrubi.as
7759,Move connect root retrieval and cert signing logic out of the RPC endpoints (#8364),The code now lives on the Server type itself. This was done so that all of this could be shared with auto config certificate signing.
7760,Merge pull request #8374 from hashicorp/dnephin/dependency-versions,Add script to print available module updates
7761,Add script to print available module updates,
7762,Move generation of the CA Configuration from the agent code into a method on the RuntimeConfig (#8363),This allows this to be reused elsewhere.
7763,Merge pull request #8372 from hashicorp/update-go-metrics,vendor: Update github.com/armon/go-metrics to v0.3.3
7764,vendor: Update github.com/armon/go-metrics to v0.3.3,
7765,Update CHANGELOG.md,
7766,Fix envoy bootstrap logic to not append multiple self_admin clusters (#8371),"Previously, the envoy bootstrap config would blindly copy the self_admin cluster into the list of static clusters when configuring either ReadyBindAddr, PrometheusBindAddr, or StatsBindAddr. Since ingress gateways always configure the ReadyBindAddr property, users ran into this case much more often than previously."
7767,Merge pull request #8323 from hashicorp/dnephin/add-event-publisher-2,stream: close subscriptions on shutdown
7768,Merge pull request #8368 from hashicorp/lkysow-patch-1,Update terminating-gateways.mdx
7769,Merge pull request #8370 from hashicorp/br.banner,Update alert banner to HCS GA
7770,Update alert banner to HCS GA,
7771,Update terminating-gateways.mdx, fix formatting issue use a command that will work with any pod id
7772,Merge pull request #8367 from hashicorp/br.cloud-offerings,Adds a cloud offerings section to website
7773,Refactor the agentpb package (#8362),First move the whole thing to the top-level proto package name. Secondly change some things around internally to have sub-packages.
7774,Fix tests,
7775,Adds cloud offerings section to website,
7776,stream: close all subs when EventProcessor is shutdown.,
7777,stream: fix overallocation in filter,And add tests
7778,terminating gw docs (#8300), terminating gw docs Co-authored-by: Rebecca Zanzig 16315901+adilyse@users.noreply.github.com Co-authored-by: Blake Covarrubias blake@covarrubi.as
7779,state: speed up TestStateStore_ServicesByNodeMeta,Make watchLimit a var so that we can patch it in tests and reduce the time spent creating state.
7780,state: Use subtests in TestStateStore_ServicesByNodeMeta,"These subtests make it much easier to identify the slow part of the test, but they also help enumerate all the different cases which are being tested."
7781,Update mapstructure to v1.3.3 (#8361),This was done in preparation for another PR where I was running into https://github.com/mitchellh/mapstructure/issues/202 and implemented a fix for the library.
7782,Restore link to /intro docs in main menu (#8356),"The ""Overview"" link previously went to a summary of Consul features and a comparison to other products. This commit restores that destination at the request of Consul PMs. This commit previously removed the link (it went to / instead of /intro). https://github.com/hashicorp/consul/commit/ac612a9cdcf81c713b4a2fadb3201980197a26ca#diff-f98b55875118725d1373dd2da36d9ee5"
7783,update changelog,
7784,gossip: Avoid issue where two unique leave events for the same node could lead to infinite rebroadcast storms (#8343),bump serf to v0.9.3 to include fix for https://github.com/hashicorp/serf/pull/606
7785,Merge pull request #7948 from hashicorp/dnephin/buffer-test-logs,testutil: NewLogBuffer - buffer logs until a test fails
7786,Update CHANGELOG.md,
7787,Merge pull request #8311 from hashicorp/bugfix/auto-encrypt-token-update,
7788,Merge pull request #8344 from hashicorp/dnephin/fix-flakes-in-stream,stream: handle empty event in TestEventSnapshot
7789,testutil: NewLogBuffer - buffer logs until a test fails,"Replaces #7559 Running tests in parallel, with background goroutines, results in test output not being associated with the correct test. go test does not make any guarantees about output from goroutines being attributed to the correct test case. Attaching log output from background goroutines also cause data races.  If the goroutine outlives the test, it will race with the test being marked done. Previously this was noticed as a panic when logging, but with the race detector enabled it is shown as a data race. The previous solution did not address the problem of correct test attribution because test output could still be hidden when it was associated with a test that did not fail. You would have to look at all of the log output to find the relevant lines. It also made debugging test failures more difficult because each log line was very long. This commit attempts a new approach. Instead of printing all the logs, only print when a test fails. This should work well when there are a small number of failures, but may not work well when there are many test failures at the same time. In those cases the failures are unlikely a result of a specific test, and the log output is likely less useful. All of the logs are printed from the test goroutine, so they should be associated with the correct test. Also removes some test helpers that were not used, or only had a single caller. Packages which expose many functions with similar names can be difficult to use correctly. Related: https://github.com/golang/go/issues/38458 (may be fixed in go1.15) https://github.com/golang/go/issues/38382#issuecomment-612940030"
7790,Add certificate disclaimer for TLS encryption (#8316),Co-authored-by: Freddy freddygv@users.noreply.github.com
7791,Disable background cache refresh for Connect Leaf Certs,"The rationale behind removing them is that all of our own code (xDS, builtin connect proxy) use the cache notification mechanism. This ensures that the blocking fetch behind the scenes is always executing. Therefore the only way you might go to get a certificate and have to wait is when 1) the request has never been made for that cert before or 2) you are using the v1/agent/connect/ca/leaf API for retrieving the cert yourself. In the first case, the refresh change doesn’t alter the behavior. In the second case, it can be mitigated by using blocking queries with that API which just like normal cache notification mechanism will cause the blocking fetch to be initiated and to get leaf certs as soon as needed. If you are not using blocking queries, or Envoy/xDS, or the builtin connect proxy but are retrieving the certs yourself then the HTTP endpoint might take a little longer to respond. This also renames the RefreshTimeout field on the register options to QueryTimeout to more accurately reflect that it is used for any type that supports blocking queries."
7792,Fix issue with changing the agent token causing failure to renew the auto-encrypt certificate,The fallback method would still work but it would get into a state where it would let the certificate expire for 10s before getting a new one. And the new one used the less secure RPC endpoint. This is also a pretty large refactoring of the auto encrypt code. I was going to write some tests around the certificate monitoring but it was going to be impossible to get a TestAgent configured in such a way that I could write a test that ran in less than an hour or two to exercise the functionality. Moving the certificate monitoring into its own package will allow for dependency injection and in particular mocking the cache types to control how it hands back certificates and how long those certificates should live. This will allow for exercising the main loop more than would be possible with it coupled so tightly with the Agent.
7793,Merge pull request #8346 from hashicorp/dnephin/fix-race-in-agent-checks,checks: wait for goroutine to complete (fix go-test-race failures)
7794,ui: Table element's have vertical scrollbars (#8296),"Close #8294. Set overflow to hidden for both x and y axis. This prevents the overflow-y defaulting to auto, and creating scrollbars. Given the text overflow is set to ellipsis, this doesn't change the UI functionality."
7795,ui: Fix swapped node & service checks by fixing filter-by & reject-by (#8338),
7796,ci: Add jsonfile artifact for go-test-race,So that we can better debug failures
7797,checks: wait for goroutine to complete,"CheckAlias already had a waitGroup, but the Add() call was happening too late, which was causing a race in tests. The add must happen before the goroutine is started. CheckHTTP did not have a waitGroup, so I added it to match CheckAlias. It looks like a lot of the implementation could be shared, and may not need all of channel, waitgroup and bool, but I will leave that refactor for another time."
7798,stream: handle empty event in TestEventSnapshot,"When the race detector is enabled we see this test fail occasionally. The reordering of execution seems to make it possible for the snapshot splice to happen before any events are published to the topicBuffers. We can handle this case in the test the same way it is handled by a subscription, by proceeding to the next event."
7799,docs: Add raft_multiplier default clarification (#8339),
7800,add v to version pretty formatter (#8341),  add v to version pretty formatter   remove v from json version output 
7801,Merge pull request #8245 from hashicorp/dnephin/use-not-modified-in-cache,agent/cache: Use AllowNotModified in CatalogListServices
7802,Merge pull request #8290 from hashicorp/dnephin/watch-decode,watch: fix script watches with single arg
7803,Merge pull request #8328 from hashicorp/dnephin/go1.14.6,ci: Use go1.14.6
7804,Merge pull request #8331 from hashicorp/cli/fix-cas-when-zero,command: fix cas put when index=0 and better errors in put and delete
7805,ui: Namespaces Redesign (#8336),  ui: Add new consul-nspace-list component   ui: Use new consul-nspace-list component   Fix up other components to use linkable list-collection action   ui: Remove some dead CSS 
7806,ui: KV Form and List Components (#8307),"  Add components for KV form, KV list and Session form   Pass through a @label attribute for a human label + don't require error   Ignore transition aborted errors for if you are re-transitioning   Make old confirmation dialog more ember-like and tagless   Make sure data-source and data-sink supports KV and sessions   Use new components and delete all the things   Fix up tests   Make list component tagless   Add component pageobject and fixup tests from that   Add eslint warning back in "
7807,ui: Add some missed spaces in component README files (#8335),
7808,command/kv: remove error case in put and edit error message for delete,
7809,Add default prefix_filter,
7810,command: fix cas put when index=0 and better errors in put and delete,
7811,Merge pull request #8269 from hashicorp/dnephin/ci-add-go-test-race,ci: add 'go test -race'
7812,ci: add 'go test -race' job,"Running every test with the race detector would add significant time to CI. That additionaltime won't provide much value as many of the integration tests use much of the same code. For now we can run -race on some of the smaller packages. As we move more code into smaller packages we should be able to add more packages to the list that runs with '-race'. For now this is running without parallelism, but we can enable that as well when we need it. boltdb fails the 'checkptr' check, which is automatically enabled by '-race', so I've disabled checkptr as well."
7813,ci: separate install-gotestsum step into its own config (#8327),
7814,ci: Use go1.14.6,Includes the security patches from go14.5 and https://github.com/golang/go/issues/39308 to fix our test logs.
7815,docs: Fix heading for list prepared queries endpoint,
7816,ui: Move routes to use data-sources (#8321),"  Add uri identifiers to all data source things and make them the same   Add uri identitifer to data-source service  Make  and  as close as possible  Add extra .closed method to get a list of inactive/closed/closing data-sources from elsewhere   Make the connections cleanup the least worst connection when required   Pass the uri/request id through all the things   Better user erroring   Make event sources close on error   Allow  data slot to be configurable   Allow the  removed state to be configurable   Don't error if meta is undefined   Stitch together all the repositories into the data-source/sink   Use data.source over repositories   Add missing   components   Fix up the views/templates   Disable all the old route based blocking query things   We still need the repo for the mixin for the moment   Don't default to default, default != '' "
7817,ui: Fix sticky action popover menus (#8326),  ui Close more-popover-menus in KV and nspaces on confirmation   ui: Close more-popovermenus on confirmation on composite-rows 
7818,ui: Change some components to use willDestroyElement vs willDestroy (#8313),  ui: Change  to use willDestroyElement vs willDestroy   Change 3 more components to use willDestroyElement vs willDestroy 
7819,docs: Fix link to kv_max_value_size config option (#8322),The sizing recommendation link should point to the config option for tuning kv_max_value_size.
7820,Merge pull request #8259 from hashicorp/enterprise_docs_update,Consul Enterprise docs update
7821,Merge pull request #8282 from hashicorp/dnephin/unmethod-store-funcs-oss,state: convert methods that don't use their receiver to functions
7822,state: update calls that are no longer state methods,"In a previous commit these methods were changed to functions, so remove the Store paramter."
7823,state: un-method funcs that don't use their receiver,"This change was mostly automated with the following First generate a list of functions with: git grep -o 'Store) ([^(]+)(tx *txn' ./agent/consul/state | awk '{print $2}' | grep -o '^[^(]+' Then the list was curated a bit with trial/error to remove and add funcs as necessary. Finally the replacement was done with: dir=agent/consul/state   file=${1-funcnames} while read fn; do     echo ""$fn""     sed -i -e ""s/(s *Store) $fn(/$fn(/"" $dir/.go     sed -i -e ""s/s.$fn(/$fn(/"" $dir/.go     sed -i -e ""s/s.store.$fn(/$fn(/"" $dir/*.go   done < $file"
7824,store: convert methods that don't use their receiver to functions,"Making these functions allows them to be used without introducing an artificial dependency on the struct. Many of these will be called from streaming Event processors, which do not have a store. This change is being made ahead of the streaming work to get to reduce the size of the streaming diff."
7825,ui: Better error message checking for cross dc connect check (#8320),
7826,minor: fix docstring of DNSOnlyPassing (#8318),"In runtime.go it had ""duration"" but it is actually a boolean."
7827,Merge pull request #8140 from hashicorp/k8s/gateway-setup-docs,K8s ingress and terminating gateway setup docs
7828,Apply suggestions from code review,
7829,Merge branch 'master' into k8s/gateway-setup-docs,
7830,ingress gw docs for k8s (#8291),Co-authored-by: Derek Strickland  Co-authored-by: Luke Kysow 1034429+lkysow@users.noreply.github.com
7831,Merge pull request #8230 from hashicorp/je.pin-deps,📌 Hard Pin Website Dependencies
7832,Merge pull request #8277 from hashicorp/je.website-maintenance-7-8-20,"Update dependencies, format all files"
7833,update sidebar,
7834,remove term-gw until its ready to merge and update redirects,
7835,add back missing quote in bashenv for CI (#8317),
7836,[skip ci] bump master to 1.9.0 to track next release version (#8315),
7837,Merge pull request #8160 from hashicorp/streaming/add-event-publisher,streaming: add EventPublisher and stream package
7838,agent/cache: Use AllowNotModifiedResponse in CatalogListServices,Co-authored-by: Pierre Souchay pierresouchay@users.noreply.github.com
7839,agent/cache: Update some docstrings,
7840,stream: Add forceClose and refactor subscription filtering,"Move the subscription context to Next. context.Context should generally never be stored in a struct because it makes that struct only valid while the context is valid. This is rarely obvious from the caller. Adds a forceClosed channel in place of the old context, and uses the new context as a way for the caller to stop the Subscription blocking. Remove some recursion out of bufferImte.Next. The caller is already looping so we can continue in that loop instead of recursing. This ensures currentItem is updated immediately (which probably does not matter in practice), and also removes the chance that we overflow the stack. NextNoBlock and FollowAfter do not need to handle bufferItem.Err, the caller already handles it. Moves filter to a method to simplify Next, and more explicitly separate filtering from looping. Also improve some godoc Only unwrap itemBuffer.Err when necessary"
7841,stream: Improve docstrings,Also rename ResumeStrema to EndOfEmptySnapshot to be more consistent with other framing events Co-authored-by: Paul Banks banks@banksco.de
7842,stream: change Topic to an interface,Consumers of the package can decide on which type to use for the Topic. In the future we may use a gRPC type for the topic.
7843,state: Move change processing out of EventPublisher,"EventPublisher was receiving TopicHandlers, which had a couple of problems:  ChangeProcessors were being grouped by Topic, but they completely   ignored the topic and were performed on every change ChangeProcessors required EventPublisher to be aware of database   changes  By moving ChangeProcesors out of EventPublisher, and having Publish accept events instead of changes, EventPublisher no longer needs to be aware of these things. Handlers is now only SnapshotHandlers, which are still mapped by Topic. Also allows us to remove the small 'db' package that had only two types. They can now be unexported types in state."
7844,server: Abandom state store to shutdown EventPublisher,So that we don't leak goroutines
7845,stream: unexport identifiers,Now that EventPublisher is part of stream a lot of the internals can be hidden
7846,stream: Move EventPublisher to stream package,The EventPublisher is the central hub of the PubSub system. It is toughly coupled with much of stream. Some stream internals were exported exclusively for EventPublisher. The two Subscribe cases (with or without index) were also awkwardly split between two packages. By moving EventPublisher into stream they are now both in the same package (although still in different files).
7847,state: Make handleACLUpdate async once again,So that we keep as much as possible out of the FSM commit hot path.
7848,state: Use interface for Txn,"Also store the index in Changes instead of the Txn. This change is in preparation for movinng EventPublisher to the stream package, and making handleACLUpdates async once again."
7849,stream.Subscription unexport fields and additiona docstrings,
7850,Add a context for stopping EventPublisher goroutine,
7851,EventPublisher: Make Unsubscribe a function on Subscription,"It is critical that Unsubscribe be called with the same pointer to a SubscriptionRequest that was used to create the Subscription. The docstring made that clear, but it sill allowed a caler to get it wrong by creating a new SubscriptionRequest. By hiding this detail from the caller, and only exposing an Unsubscribe method, it should be impossible to fail to Unsubscribe. Also update some godoc strings."
7852,EventPublisher: handleACL changes synchronously,"Use a separate lock for subscriptions.ByToken to allow it to happen synchronously in the commit flow. This removes the need to create a new txn for the goroutine, and removes the need for EventPublisher to contain a reference to DB."
7853,stream.EventSnapshot: reduce the fields on the struct,"Many of the fields are only needed in one place, and by using a closure they can be removed from the struct. This reduces the scope of the variables making it esier to see how they are used."
7854,stream.EventBuffer: Seed the fuzz test with time.Now(),Otherwise the test will run with exactly the same values each time. By printing the seed we can attempt to reproduce the test by adding an env var to override the seed
7855,state: memdb_wrapper.go -> memdb.go,Renaming in a separate commit so that git can merge changes to the file.
7856,state: publish changes from Commit,Make topicRegistry use functions instead of unbound methods Use a regular memDB in EventPublisher to remove a reference cycle Removes the need for EventPublisher to use a store
7857,EventPublisher: docstrings and getTopicBuffer,also rename commitCh -> publishCh
7858,ProcessChanges: use stream.Event,"Also remove secretHash, which was used to hash tokens. We don't expose these tokens anywhere, so we can use the string itself instead of a Hash. Fix acl_events_test.go for storing a structs type."
7859,stream: Use local types for Event Topic SubscriptionRequest,
7860,Rename stream_publisher.go -> event_publisher.go,
7861,Add streaming package with Subscription and Snapshot components.,The remaining files from 7965767de0bd62ab07669b85d6879bd5f815d157 Co-authored-by: Paul Banks banks@banksco.de
7862,remove GIT_DESCRIBE variable since we have a revision line (#8310),
7863,ui: Make sure the intention create form has a cancel button (#8308),
7864,Add ability for notifications when one of the agent tokens is updated (#8301),Co-authored-by: Chris Piraino cpiraino@hashicorp.com
7865,ui: Only try and load sessions and coordinates if the node exists (#8305),
7866,update changelog,
7867,"add support for envoy 1.14.4, 1.13.4, 1.12.6 (#8216)",
7868,Set enterprise metadata after resolving the token (#8302),"The token can encode enterprise metadata information, and we must make sure we set that on the reply so that we can correct filter ACLs."
7869,ui: Replaces old request method with rpc. (#8298),"rpc is used to define how to make a HTTP request/response messages. This used to be called 'request' but the term is overused  and sounded like only one leg of the message, so the naming was moved to rpc a while ago, this cleans up the places where we still used the old term."
7870,ui: Move dc sorting to the view/template (#8297),  ui: Move dc sorting to the view/template   Cleanup unused coordinates service from Node repo   Fix up integration test to not expect a sorted result 
7871,ui: Ensure any colons in headers aren't split out (#8293),
7872,watch: Allow args from different types,"Fixes a bug where specifying a slice of args with a single item was being converted to a string when config was loaded, causing an error."
7873,Add api mod support for /catalog/gateway-services (#8278),
7874,docs: add section for /health/ingress/:service API (#8108),  docs: add section for /health/ingress/:service API   Add documentation around consul version for API   docs: add note about gateway-services API release version 
7875,watch: extract makeWatchPlan to facilitate testing,There is a bug in here now that slices in opaque config are unsliced. But to test that bug fix we need a function that can be easily tested.
7876,ui: Revert ember-composable-helpers to ~4.0.0 due to faster sort-by (#8289),
7877,Update CHANGELOG.md,
7878,Merge pull request #8268 from hashicorp/feature/improved-version-output,Add Revision to version CLI output and add JSON support
7879,ui: Adds definition-table class to RTT values table (#8286),We changed our default definition list layout in https://github.com/hashicorp/consul/pull/8117. We replaced the default with a definition-table class but missed one place where the old default was previously used. This adds the definition-table class in RTT where it used to use the default.
7880,ui: Lint staged no longer requires git add to be specified (#8285),
7881,Keep both metrics,
7882,Small typo in docstring (#8280),
7883,update changelog,
7884,xds: version sniff envoy and switch regular expressions from 'regex' to 'safe_regex' on newer envoy versions (#8222), cut down on extra node metadata transmission split the golden file generation to compare all envoy version
7885,Merge pull request #8231 from hashicorp/dnephin/unembed-HTTPServer-Server,agent/http: un-embed the http.Server
7886,agent/http: Update TestSetupHTTPServer_HTTP2,To remove the need to store the http.Server. This will allow us to remove the http.Server field from the HTTPServer struct.
7887,Merge pull request #8237 from hashicorp/dnephin/remove-acls-enabled-from-delegate,Remove ACLsEnabled from delegate interface
7888,remove extra dependencies,
7889,Merge pull request #8270 from hashicorp/dnephin/oss-store-jsonfile,ci: Store a jsonfile for go-test and go-test-api
7890,ui: Dependency upgrade (#8276),  Remove curly brackets and pass through attributes   yarn upgrade and part manual deps upgrade of non-problematic things   from-entries from ember-composable helpers receives an array   PowerSelect destruction bug seems to be fixed upstream   Ensure all policies have a default 0 date for ember-c-h upgrade   sorting no longer works correctly unless CreateTime has a value
7891,Merge pull request #8253 from hashicorp/feature/auto-config/rpc-delegate,
7892,ui: Use top-level 'named index files' instead of in folder index files (#8274),  Remove unused phrase-editor CSS   Move index.scss files to top-level named files to make them more obvious 
7893,ui: Replace dom-buffering components with ember-stargate Portals (#8273), ui: Replace dom-buffering components with ember-stargate Portals
7894,ui: Extract and organize popover-menu and related from main-nav (#8272),
7895,ui: Enable keyboard access for the sorting dropdown menus (#8267),
7896,ui: New Intention Form/List components (#8172),
7897,Use method and path as labels,
7898,ci: Store a jsonfile,
7899,docs: Add Audit Logging page under Consul Enterprise,
7900,"update deps, format all files",
7901,update and hard-pin dependencies,
7902,Add Revision to version CLI output and add JSON support,Also add JSON format support
7903,Pass the Config and TLS Configurator into the AutoConfig constructor,This is instead of having the AutoConfigBackend interface provide functions for retrieving them. NOTE: the config is not reloadable. For now this is fine as we don’t look at any reloadable fields. If that changes then we should provide a way to make it reloadable.
7904,Rename (Server).forward to (Server).ForwardRPC,Also get rid of the preexisting shim in server.go that existed before to have this name just call the unexported one.
7905,Refactor AutoConfig RPC to not have a direct dependency on the Server type,Instead it has an interface which can be mocked for better unit testing that is deterministic and not prone to flakiness.
7906,Added undocumented CONSUL_NAMESPACE to website. (#8264),
7907,ui: Fix up styling for the Tags tab (#8263),
7908,ui: Use empty-state for our small empty states (#8262),
7909,Merge pull request #8252 from hashicorp/dnephin/docs-max-age-config,"docs: Document that dns_config.cache_max_age=0 means ""no max age"""
7910,sdk: Use /v1/status/leader endpoint when starting a test server (#8192),"Switch from /v1/agent/self to /v1/status/leader when checking if the test server has come up successfully in the waitForAPI function. Previously, the test server was relying (probably not intentionally) on the default value of the acl_enforce_version_8 in the TestConfig, which was false. So if you create a test server and enabled ACLs, they would not be enforced and the server would be able to come up pretty quickly because /v1/agent/self would return a 200 status pretty much as soon as the agent is running and most likely before leader election is finished. Now that we have removed acl_enforce_version_8 property (equivalent to being true by default) if you've created a test server with ACLs enabled, it will need to wait for leader election and for ACLs to be initialized before it'll get a successful response from the /v1/agent/self. Note: With this change, waitForAPI function no longer requires a 200 response status from the v1/status/leader endpoint. This is because in some tests, namely TestAPI_AgentLeave, we are only running clients, and this endpoint returns a 500 status."
7911,docs: Update Consul Enterprise Intro,
7912,docs: dns_config.cache_max_age=0,
7913,ui: Remove jQuery from the production build (#8088)," ui: Split up client/http and replace $.ajax  This splits the client/http service more in the following ways:  Connections are now split out into its own service The transport is now split out into its own service that returns a listener based http transport  Various string parsing/stringifying functions are now split out into utils   Remove jQuery from our production build   Move the coverage serving to the server.js file   Self review amends   Add X-Requested-With header   Move some files around, externalize some functions   Move connection tracking to use native Set   Ensure HTTP parsing doesn't encode headers   In the future this will change to deal with all HTTP parsing in one place, hence the commented out METHOD_PARSING etc  Start to fix up integration tests to use requestParams"
7914,ui: Re-adds gray backgrounds to old style %pills (#8251),
7915,Update CHANGELOG.md,
7916,Append port number to ingress host domain (#8190),"A port can be sent in the Host header as defined in the HTTP RFC, so we take any hosts that we want to match traffic to and also add another host with the listener port added. Also fix an issue with envoy integration tests not running the case-ingress-gateway-tls test."
7917,learn -> tutorials in subnav,
7918,docs: fix link to connect authorize endpoint (#8248),/docs/connect/intentions has a broken link presumably meant to go to /api-docs/agent/connect#authorize This PR fixes the link.
7919,Update URLs for gateway docs,PRs #7610 and #7962 changed the locations/URLs for the gateway docs which results in a HTTP 404 Not Found being returned when accessing the previous URLs. Update URLs for gateway docs to point to new URLs. PR #8243 adds corresponding redirects on consul.io.
7920,Append redirects,
7921,Merge pull request #8242 from hashicorp/pruett.ci-fixup,Update Algolia CI script
7922,Update Algolia CI script,
7923,Remove ACLsEnabled from delegate interface,"In all cases (oss/ent, client/server) this method was returning a value from config. Since the value is consistent, it doesn't need to be part of the delegate interface."
7924,Merge pull request #8215 from hashicorp/dnephin/support-not-modified-response-server,agent/consul: Add support for NotModified to two endpoints
7925,Upgrade go-connlimit to v0.3.0 / return http 429 on too many connections (#8221),"Fixes #7527 I want to highlight this and explain what I think the implications are and make sure we are aware:  HTTPConnStateFunc closes the connection when it is beyond the limit. Close does not block. HTTPConnStateFuncWithDefault429Handler(10 * time.Millisecond) blocks until the following is done (worst case):   1) conn.SetDeadline(10*time.Millisecond) so that   2) conn.Write(429error) is guaranteed to timeout after 10ms, so that the http 429 can be written and    3) conn.Close can happen  The implication of this change is that accepting any new connection is worst case delayed by 10ms. But only after a client reached the limit already."
7926,agent/http: un-embed the HTTPServer,"The embedded HTTPServer struct is not used by the large HTTPServer struct. It is used by tests and the agent. This change is a small first step in the process of removing that field. The eventual goal is to reduce the scope of HTTPServer making it easier to test, and split into separate packages."
7927,agent/consul: Add support for NotModified to two endpoints,"A query made with AllowNotModifiedResponse and a MinIndex, where the result has the same Index as MinIndex, will return an empty response with QueryMeta.NotModified set to true. Co-authored-by: Pierre Souchay pierresouchay@users.noreply.github.com"
7928,"Fix typos on commandline flags, updated config opts (#8227)","  Fix typos on commandline flags, updated config opts   Added anchors to https://github.com/hashicorp/consul/pull/8223  Fix Typos  Updated to include config file options as well as CLI."
7929,remove unneeded mdx provider option,
7930,drop out unused font,
7931,generate readme,
7932,"update dependencies, fapply upgrades, fix breaking changes",
7933,docs: Fix formatting issues on built-in proxy page (#8005),Fix markdown formatting and display issues on built-in proxy page.
7934,Fix typo in configuration documentation (#7997),
7935,Update CHANGELOG.md,
7936,Merge pull request #8211 from hashicorp/bugfix/auto-encrypt-various,
7937,Update CHANGELOG.md,
7938,update landing page links to learn to specific guides (#8214),
7939,ui: Redesign - Node service instances tab (#8204),  Upgrade consul-api-dobule to version 3.1.3   Create ConsulInstaceChecks component with test   Redesign: Service Instaces tab in for a Node   Update Node tests to work with the ConsulServiceInstancesList   Style fix to the copy button in the composite-row details   Delete helper and move logic to ConsulInstanceChecks component   Delete unused component consul-node-service-list 
7940,Update CHANGELOG.md,
7941,Merge pull request #8218 from yurkeen/fix-dns-rcode,
7942,Update lock.mdx (#8217),Remove duplicated -timeout value.
7943,Update gopsutil (#8208),"https://github.com/shirou/gopsutil/pull/895 is merged and fixes our problem. Time to update. Since there is no new version just yet, updating to the sha."
7944,ui: Ensure routing tab is shown when connect enabled (#8209),"In https://github.com/hashicorp/consul/pull/8065 we attempted to reduce the amount of times that the UI requests the discovery chain endpoint when connect is disabled on a datacenter. Currently we can only tell if connect is disabled on a datacenter by detecting a 500 error from a connect related endpoint. In the above PR we mistakenly returned from a catch instead of rethrowing the error, which meant that when a none 500 error was caught the discovery chain data would be removed. Whilst at first glance this doens't seem like a big problem due to the endpoint erroring, but we also receive a 0 error when we abort endpoints during blocking queries. This means that in certain cases we can remove cached data for the discovery chain and then delay reloading it via a blocking query. This PR replaces the return with a throw, which means that everything is dealt with correctly via the blocking query error detection/logic."
7945,DNS: add IsErrQueryNotFound function for easier error evaluation,
7946,DNS: fix agent returning SERVFAIL where NXDOMAIN should be returned,
7947,DNS: add test to verify NXDOMAIN is returned when a non-existent domain is queried over RPC,
7948,Add an AutoEncrypt “integration” test,Also fix a bug where Consul could segfault if TLS was enabled but no client certificate was provided. How no one has reported this as a problem I am not sure.
7949,Overwrite agent leaf cert trust domain on the servers,
7950,Store the Connect CA rate limiter on the server,This fixes a bug where auto_encrypt was operating without utilizing a common rate limiter.
7951,Initialize the agent leaf cert cache result with a state to prevent unnecessary second certificate signing,
7952,Fix auto_encrypt IP/DNS SANs,The initial auto encrypt CSR wasn’t containing the user supplied IP and DNS SANs. This fixes that. Also We were configuring a default :: IP SAN. This should be ::1 instead and was fixed.
7953,clean cli.Run error message (#8191),
7954,docs: Fix typo on openstack cloud-auto-join,
7955,cli: Output message on success when writing/deleting entries (#7806),"This provides a user with a better experience, knowing that the command worked appropriately. The output of the write/delete CLI commands are not going to be used in a bash script, in fact previously a success provided no ouput, so we do not have to worry about spurious text being injected into bash pipelines."
7956,Merge pull request #8202 from hashicorp/pruett.algolia-index-ci,Add Algolia indexing to CI
7957,Add Algolia indexing to CI,
7958,ui: Don't hide TTL check output (#8187),"We'd assumed that TTL check outputs shouldn't be shown as it seemed like they never had outputs, but they can be submitted with notes, which are then converted into the output. This unhides the output for TTLs and treats them exactly the same as other healthchecks."
7959,api/agent: enable setting SuccessBeforePassing and FailuresBeforeCritical in API (#7949),Fixes #7764 Until now these two fields could only be set through on-disk agent configuration. This change adds the fields to the agent API struct definition so that they can be set using the agent HTTP API.
7960,Merge pull request #8193 from hashicorp/feature/auto-config/suppress-config-warnings,
7961,update changelog,
7962,connect: various changes to make namespaces for intentions work more like for other subsystems (#8194),"Highlights:   add new endpoint to query for intentions by exact match   using this endpoint from the CLI instead of the dump+filter approach   enforcing that OSS can only read/write intentions with a SourceNS or   DestinationNS field of ""default"".   preexisting OSS intentions with now-invalid namespace fields will   delete those intentions on initial election or for wildcard namespaces   an attempt will be made to downgrade them to ""default"" unless one   exists.   also allow the '-namespace' CLI arg on all of the intention subcommands   update lots of docs "
7963,Use the DNS and IP SANs from the auto config stanza when set,
7964,Overhaul the auto-config translation,This fixes some issues around spurious warnings about using enterprise configuration in OSS.
7965,Split up unused key validation for oss/ent (#8189),Split up unused key validation in config entry decode for oss/ent. This is needed so that we can return an informative error in OSS if namespaces are provided.
7966,Merge pull request #8176 from hashicorp/dnephin/add-linter-unparam-1,lint: add unparam linter and fix some of the issues
7967,Merge pull request #8186 from hashicorp/docs-cleanup,
7968,Update website/pages/docs/acl/auth-methods/jwt.mdx,Co-authored-by: Daniel Nephin dnephin@hashicorp.com
7969,ui: Support ingress gateways upstreams with multiple addresses (#8185),  Upgrade consul-api-double to version 3.1.2   Display multiple addresses for ingress gateway upstreams 
7970,Merge pull request #8184 from hashicorp/bugfix/goroutine-leaks,
7971,Remove remaining beta tags,
7972,Remove stray instruction,
7973,Add docs for upstream destination's namespace,
7974,Merge pull request #7932 from hashicorp/ingress/internal-ui-endpoint-multiple-ports,Update gateway-services-nodes API endpoint to allow multiple addresses
7975,Add tabs to config entry examples,
7976,remove obsolete comments about test parallelization,
7977,Update gateway-services-nodes API endpoint to allow multiple addresses,"Previously, we were only returning a single ListenerPort for a single service. However, we actually allow a single service to be serviced over multiple ports, as well as allow users to define what hostnames they expect their services to be contacted over. When no hosts are defined, we return the default ingress domain for any configured DNS domain. To show this in the UI, we modify the gateway-services-nodes API to return a GatewayConfig.Addresses field, which is a list of addresses over which the specific service can be contacted."
7978,Add a test for go routine leaks,This is in its own separate package so that it will be a separate test binary that runs thus isolating the go runtime from other tests and allowing accurate go routine leak checking. This test would ideally use goleak.VerifyTestMain but that will fail 100% of the time due to some architectural things (blocking queries and net/rpc uncancellability). This test is not comprehensive. We should enable/exercise more features and more cluster configurations. However its a start.
7979,Fix go routine leak in auto encrypt ca roots tracking,
7980,Allow cancelling blocking queries in response to shutting down.,
7981,Rearrange k8s connect docs to make space for gateways,
7982,ui: Ensure the tooltip panel chevron isn't hidden by overflow (#8183),
7983,Update TestAgent_GetCoordinate,The old test case was a very specific regresion test for a case that is no longer possible. Replaced with a new test that checks the default coordinate is returned.
7984,Remove unused return values,
7985,Fix a bunch of unparam lint issues,
7986,Ensure that retryLoopBackoff can be cancelled,We needed to pass a cancellable context into the limiter.Wait instead of context.Background. So I made the func take a context instead of a chan as most places were just passing through a Done chan from a context anyways. Fix go routine leak in the gateway locator
7987,Add test to ensure the StopChannelContext works properly,
7988,Don’t leak metrics go routines in tests (#8182),
7989,ui: Refactor composite rows to use description lists and add Tooltips (#8175),  Update Consul Service List composite rows with Tooltips and description lists   Update Consul Service Instance List composite rows with Tooltips and description lists   Removed line height in reduced pill to match the description lists in the composite rows 
7990,agent-http: cleanup: return nil instead of err (#8043),"Since err is already checked, it should return nil"
7991,Update dev.mdx (#8090),"Remove ref to ""virtual service"" to avoid confusion with L7 routing virtual services, replace with ""debug service""."
7992,Fix quorum formula in consensus.mdx (#8166),"Add & Remove Servers guide uses (N/2)+1 quorum formula.  So does the Raft implementation. Consensus Protocol document uses (n+1)/2 formula. This formula is not only different, it conflicts with the Deployment Table in the same document; e.g., (6+1)/2 = 3, not 4. Replace (n+1)/2 with (N/2)+1 in Consensus Protocol document."
7993,remove set -e for cherry-pick script since we collect errors (#8177),
7994,connect: upgrade github.com/envoyproxy/go-control-plane to v0.9.5 (#8165),
7995,docs: Specify port in host for example (#8167),"This example shows a TLS enabled ingress config on a non-https port. Currently, that means we require the port to be specified in one of the host entries to route traffic."
7996,ui: Make sure right trim doesn't try to overtrim (#8171),
7997,Merge pull request #8169 from hashicorp/config-entry-ns,
7998,ui: Add namespaced versions of templated policies (#8173),
7999,Update namespaces subject-verb agreement,
8000,ui: Update helper to return Proxy and Service Health if the Service has a Proxy (#8168),
8001,ui: Redesigns for the token/policy/roles listings pages (#8144),
8002,ui: Support for Node Identities (#8137),  Add all the new data required for NodeIdentities   Add potential NodeIdentity to the token list component   Amend the policy-form/selector to allow node identity creation   Fix up CSS for radio buttons and select label   Add node-identity policy template component   Fix up and add acceptance tests for NodeIndentities   Make sure policy previews take node identities into account   Only show certain policy markup if those we have those policies   Potentially temporarily hide dt's that don't have icons yet 
8003,Remove break,
8004,Let users know namespaces are ent only in config entry decode,
8005,Merge http2 integration test case into grpc case (#8164),http2 is covered by grpc since grpc uses http2
8006,Add AgentMemberStatus const (#8110), Add AgentMemberStatus const
8007,Update CHANGELOG.md,
8008,Returns DNS Error NSDOMAIN when DC does not exists (#8103),This will allow to increase cache value when DC is not valid (aka return SOA to avoid too many consecutive requests) and will distinguish DC being temporarily not available from DC not existing. Implements https://github.com/hashicorp/consul/issues/8102
8009,Merge pull request #8162 from hashicorp/nav-update,Update Nav
8010,Update Nav,
8011,Require enabling TLS to enable Auto Config (#8159),"On the servers they must have a certificate. On the clients they just have to set verify_outgoing to true to attempt TLS connections for RPCs. Eventually we may relax these restrictions but right now all of the settings we push down (acl tokens, acl related settings, certificates, gossip key) are sensitive and shouldn’t be transmitted over an unencrypted connection. Our guides and docs should recoommend verify_server_hostname on the clients as well. Another reason to do this is weird things happen when making an insecure RPC when TLS is not enabled. Basically it tries TLS anyways. We should probably fix that to make it clearer what is going on."
8012,Update CHANGELOG.md,
8013,Update CHANGELOG.md,
8014,Always return a gateway cluster (#8158),
8015,Allow cancelling startup when performing auto-config (#8157),Co-authored-by: Daniel Nephin dnephin@hashicorp.com
8016,Merge pull request #8156 from hashicorp/docs-update-version,update version to 1.8.0
8017,remove prerelease tag,
8018,update alert banner,
8019,update version to 1.8.0,
8020,Finalize gateway documentation for 1.8.0 GA (#8121),Co-authored-by: Derek Strickland 1111455+DerekStrickland@users.noreply.github.com
8021,Remove ingress line items from UNRELEASED header,These all got squashed into the Ingress Gateway feature item in 1.8.0.
8022,Update master CHANGELOG to release 1.8.0 (#8152),
8023,Merge pull request #8150 from hashicorp/18-wan-fed-docs,Remove consul:beta now that 1.8 is out.
8024,Merge pull request #8147 from hashicorp/dnephin/remove-private-ip-2,Remove some dead code from agent/consul/util.go
8025,Change auto config authorizer to allow for future extension,The envisioned changes would allow extra settings to enable dynamically defined auth methods to be used instead of  or in addition to the statically defined one in the configuration.
8026,Remove consul:beta now that 1.8 is out.,
8027,Merge pull request #8126 from hashicorp/k8s/gateway-docs,Add helm chart options for ingress and terminating gateways
8028,Fixing multiple document updates (#8135)," Fixes #7663-ACL Token Reloadable#7432-Cipher Suites,#7385-KV Delete DC, raft list-peers docs  Co-authored-by: Freddy freddygv@users.noreply.github.com"
8029,Add helm chart options for ingress and terminating gateways,
8030,8059 Improve Clarity on TTL docs (#8141),
8031,Remove bytesToUint64 from agent/consul,
8032,Remove unused private IP code from agent/consul,
8033,Bump golang to 1.14.4 to avoid known runtime issue (#8146),An issue where the golang runtime would hang and loop forever
8034,Merge pull request #8086 from hashicorp/feature/auto-config/client-config-inject,
8035,ui: Remove with-listeners mixin (#8142),"This mixin was a very thin mixin over the top of our listeners utility, and we have been gradually preferring using the utility straight rather than using the mixin. This commit removes the last places where we still used the mixin, and also potentially the last few places where we continued to use the old API for our listeners utility."
8036,ui: Refactor Upstreams and Exposed Paths icons (#8139),  Update Ports to have copy-button to the left   Update exposed paths use a description list 
8037,Implement Client Agent Auto Config,"There are a couple of things in here. First, just like auto encrypt, any Cluster.AutoConfig RPC will implicitly use the less secure RPC mechanism. This drastically modifies how the Consul Agent starts up and moves most of the responsibilities (other than signal handling) from the cli command and into the Agent."
8038,Allow the Agent its its child Client/Server to share a connection pool,This is needed so that we can make an AutoConfig RPC at the Agent level prior to creating the Client/Server.
8039,Merge pull request #8035 from hashicorp/feature/auto-config/server-rpc,
8040,Remove ACLEnforceVersion8 from tests (#8138),"The field had been deprecated for a while and was recently removed, however a PR which added these tests prior to removal was merged."
8041,Updates docs with ingress Host header clarifications (#8062)," Updates docs with ingress Host header changes  Clarify that a Host header is required for L7 protocols, and specify that the default is to use the Consul DNS ingress subdomain   Add sentence about using '*' by itself for testing   Add optional step for using L7 routing config   Note that port numbers may need to be added in the Hosts field "
8042,Merge pull request #7762 from hashicorp/dnephin/warn-on-unknown-service-file,config: warn if a config file is being skipped because of its file extension
8043,config: warn when a config file is skipped,"All commands which read config (agent, services, and validate) will now print warnings when one of the config files is skipped because it did not match an expected format. Also ensures that config validate prints all warnings."
8044,Merge pull request #8136 from hashicorp/pruett.update-nextjs-scripts-dep,Update @hashicorp/nextjs-scripts dep
8045,Merge pull request #8034 from hashicorp/dnephin/add-linter-staticcheck-4,ci: enable SA4006 staticcheck check and add ineffassign
8046,Update @hashicorp/nextjs-scripts dep,
8047,Implement the insecure version of the Cluster.AutoConfig RPC endpoint,Right now this is only hooked into the insecure RPC server and requires JWT authorization. If no JWT authorizer is setup in the configuration then we inject a disabled “authorizer” to always report that JWT authorization is disabled.
8048,Fixed a typo (#8132),Fixed a little typo 🐰
8049,ui: Switch out WithResizingMixin for on-window helper (#8130),  ui: Add ember-on-helper   Switch out WithResizingMixin for {{on-window}} helper 
8050,"ui: Remove WithEventSource mixin, use a component instead (#7953)","The WithEventSource mixin was responsible for catching EventSource errors and cleaning up events sources then the user left a Controller. As we are trying to avoid mixin usage, we moved this all to an EventSource component, which can clean up when the component is removed from the page, and also fires an onerror event. Moving to a component firing an onerror event means we can also remove all of our custom computed property work that we were using previously to catch errors (thrown when a service etc. is removed)"
8051,ui: Change code-editor tested to use querySelectorAll (#8087) (#8131),
8052,ui: Don't show duplicate services in the intentions form dropdown (#8133), Add uniq-by helper Pass unique services through to intentions form Add acceptance test
8053,gossip: Ensure that metadata of Consul Service is updated (#7903),"While upgrading servers to a new version, I saw that metadata of existing servers are not upgraded, so the version and raft meta is not up to date in catalog. The only way to do it was to:  * update Consul server  * make it leave the cluster, then metadata is accurate That's because the optimization to avoid updating catalog does not take into account metadata, so no update on catalog is performed."
8054,ui: Token listing redesign (#8117),
8055,ci: Add ineffsign linter,And fix an additional ineffective assignment that was not caught by staticcheck
8056,Merge pull request #8070 from hashicorp/dnephin/add-gofmt-simplify,ci: Enable gofmt simplify
8057,Add helper for generating better permission denied errors,
8058,Agent Auto Configuration: Configuration Syntax Updates (#8003),
8059,Merge pull request #8007 from hashicorp/streaming/add-hooks-to-memdb-txn,streaming: track changes to state
8060,Formatting spaces between keys in Config entries (#8116),  Formatting spaces between keys in Config entries   Service Router spacing   Missing Camel Case proxy-defaults   Remove extra spaces service-splitter   Remove extra spsaces service-resolver   More spaces a la hclfmt   Nice!   Oh joy!   More spaces on proxy-defaults   Update website/pages/docs/agent/config-entries/proxy-defaults.mdx   Co-authored-by: Chris Piraino cpiraino@hashicorp.com
8061,ui: Add ...attributes to healthcheck-info (#8120),
8062,split out oss and ent ember builds for testing (#8122),
8063,Add GitHub Notifications for cherry picks (#8115),  add github PR notification for backport cherry picks   count number of backport failures and exit after looping through all of them 
8064,Enable gofmt simplify,Code changes done automatically with 'gofmt -s -w'
8065,ci: enable SA4006 staticcheck check,"And fix the 'value not used' issues. Many of these are not bugs, but a few are tests not checking errors, and one appears to be a missed error in non-test code."
8066,Rename txnWrapper to txn,
8067,Rename db,
8068,Handle return value from txn.Commit,
8069,state: Update docstrings for changeTrackerDB and txn,And un-embed memdb.DB to prevent accidental access to underlying methods.
8070,state: track changes so that they may be used to produce change events,
8071,Update go-memdb and go-lru dependencies,
8072,Update CHANGELOG.md,
8073,Update CHANGELOG.md,
8074,ACL Node Identities (#7970),"A Node Identity is very similar to a service identity. Its main targeted use is to allow creating tokens for use by Consul agents that will grant the necessary permissions for all the typical agent operations (node registration, coordinate updates, anti-entropy). Half of this commit is for golden file based tests of the acl token and role cli output. Another big updates was to refactor many of the tests in agent/consul/acl_endpoint_test.go to use the same style of tests and the same helpers. Besides being less boiler plate in the tests it also uses a common way of starting a test server with ACLs that should operate without any warnings regarding deprecated non-uuid master tokens etc."
8075,config: refactor to consolidate all File->Source loading,"Previously the logic for reading ConfigFiles and produces Sources was split between NewBuilder and Build. This commit moves all of the logic into NewBuilder so that Build() can operate entirely on Sources. This change is in preparation for logging warnings when files have an unsupported extension. It also reduces the scope of BuilderOpts, and gets us very close to removing Builder.options."
8076,config: Make ConfigFormat not a pointer,The nil value was never used. We can avoid a bunch of complications by making the field a string value instead of a pointer. This change is in preparation for fixing a silent config failure.
8077,config: rename Flags to BuilderOpts,"Flags is an overloaded term in this context. It generally is used to refer to command line flags. This struct, however, is a data object used as input to the construction. It happens to be partially populated by command line flags, but otherwise has very little to do with them. Renaming this struct should make the actual responsibility of this struct more obvious, and remove the possibility that it is confused with command line flags. This change is in preparation for adding additional fields to BuilderOpts."
8078,config: remove Args field from Flags,"This field was populated for one reason, to test that it was empty. Of all the callers, only a single one used this functionality. The rest constructed a Flags{} struct which did not set Args. I think this shows that the logic was in the wrong place. Only the agent command needs to care about validating the args. This commit removes the field, and moves the logic to the one caller that cares. Also fix some comments."
8079,Small changes to Readme around Consul description (#8114),Re-ordered features and revised Consul description.
8080,Merge pull request #7675 from hashicorp/dnephin/add-service,service_manager: small changes
8081,ui: Refactor detailed health checks to use more of the service/instance-checks helper (#8119),
8082,agent/service_manager: remove 'updateCh' field from serviceConfigWatch,"Passing the channel to the function which uses it significantly reduces the scope of the variable, and makes its usage more explicit. It also moves the initialization of the channel closer to where it is used. Also includes a couple very small cleanups to remove a local var and read the error from ctx.Err() directly instead of creating a channel to check for an error."
8083,agent/service_manager: remove 'defaults' field from serviceConfigWatch,"This field was always read by the same function that populated the field, so it does not need to be a field. Passing the value as an argument to functions makes it more obvious where the value comes from, and also reduces the scope of the variable significantly."
8084,agent/service_manager: Pass ctx around,"The documentation for context recommends not storing context in a struct field:  Do not store Contexts inside a struct type; instead, pass a Context explicitly to each function that needs it. The Context should be the first parameter, typically named ctx...  Sometimes there are good reasons to not follow this recommendation, but in this case it seems easy enough to follow. Also moved the ctx argument to be the first in one of the function calls to follow the same recommendation."
8085,ui: Add detailed Health Checks to Service Detail page (#8111),
8086,ui: Move healthcheck ordering to use new comparators (#8096),
8087,Update CHANGELOG.md,
8088,"Switching service-route, service-resolver, service-splitter examples to CamelCase (#8107)",  Switching service-route example to CamelCase   Switch service-resovler examples to CamelCase   Changing service-splitter examples to CamelCase 
8089,docs: Fix ingress dns entry (#8072),
8090,Merge pull request #8106 from hashicorp/dnephin/hook-translate-keys-make-a-copy,decode: do not modify the source data in HookTranslateKeys
8091,Merge pull request #8074 from hashicorp/dnephin/remove-references-to-PatchSliceOfMaps,Update comments that reference PatchSliceOfMaps
8092,decode: do not modify the source data in HookTranslateKeys,This was causing a 'fatal error: concurrent map iteration and map write' with gateways
8093,Merge pull request #8101 from hashicorp/dnephin/decode-hook-slice-interfaces,decode: recursively unslice opaque config
8094,decode: Only recursively unslice when the target is an interface{},
8095,Update CHANGELOG.md,
8096,Update CHANGELOG.md,
8097,Make the Agent Cache more Context aware (#8092),Blocking queries issues will still be uncancellable (that cannot be helped until we get rid of net/rpc). However this makes it so that if calling getWithIndex (like during a cache Notify go routine) we can cancell the outer routine. Previously it would keep issuing more blocking queries until the result state actually changed.
8098,decode: recursively unslice opaque config,Also handle []interface{} in HookWeakDecodeFromSlice Without this change only the top level []map[string]interface{} will be unpacked as a single item. With this change any nested config will be unpacked.
8099,Merge pull request #8099 from hashicorp/gateway-services-endpoint,
8100,Update telemetry for gateway-services endpoint,
8101,Remove unused method and fixup docs ref,
8102,Fixup stray sid references,
8103,Add docs,
8104,Move compound service names to use ServiceName type,
8105,Create HTTP endpoint,
8106,Move GatewayServices out of Internal,
8107,Only pass one hostname via EDS and prefer healthy ones (#8084),"Co-authored-by: Matt Keeler mkeeler@users.noreply.github.com Currently when passing hostname clusters to Envoy, we set each service instance registered with Consul as an LbEndpoint for the cluster. However, Envoy can only handle one per cluster: [2020-06-04 18:32:34.094][1][warning][config] [source/common/config/grpc_subscription_impl.cc:87] gRPC config for type.googleapis.com/envoy.api.v2.Cluster rejected: Error adding/updating cluster(s) dc2.internal.ddd90499-9b47-91c5-4616-c0cbf0fc358a.consul: LOGICAL_DNS clusters must have a single locality_lb_endpoint and a single lb_endpoint, server.dc2.consul: LOGICAL_DNS clusters must have a single locality_lb_endpoint and a single lb_endpoint Envoy is currently handling this gracefully by only picking one of the endpoints. However, we should avoid passing multiple to avoid these warning logs. This PR:  Ensures we only pass one endpoint, which is tied to one service instance. We prefer sending an endpoint which is marked as Healthy by Consul. If no endpoints are healthy we emit a warning and skip the cluster. If multiple unique hostnames are spread across service instances we emit a warning and let the user know which will be resolved."
8108,ui: Colocate pageobject components with their components (#8098),
8109,ui: Add health check icon to Ingress Upstreams and add Tooltips in additional areas (#8091),  Add Health Checks and update Tooltips in Ingress Upstreams   Update Tooltip in Proxy Info tab Upstreams   Add Tooltips to Proxy Info tab Exposed Paths   Add Health Checks with Tooltips to Service List page 
8110,ui: Ensure encoder.js polyfill is available (#8094),
8111,ui: Exclude any component/pageobject.js files from being included (#7978),This excludes any /components/**/pageobject.js files from our production builds which means we can co-locate all of our component page objects (and selectors) along with the components themselves.
8112,ui: Upgrade consul-api-double to use intention response w/o old fields (#8089),
8113,Allow users to set hosts to the wildcard specifier when TLS is disabled (#8083),"This allows easier demoing/testing of ingress gateways, while still preserving the validation we have for DNSSANs"
8114,Adding 1.7.4 and 1.6.6,
8115,"Support envoy 1.14.2, 1.13.2, 1.12.4 (#8057)",
8116,Move ingress param to a new endpoint (#8081),"In discussion with team, it was pointed out that query parameters tend to be filter mechanism, and that semantically the ""/v1/health/connect"" endpoint should return ""all healthy connect-enabled endpoints (e.g. could be side car proxies or native instances) for this service so I can connect with mTLS"". That does not fit an ingress gateway, so we remove the query parameter and add a new endpoint ""/v1/health/ingress"" that semantically means ""all the healthy ingress gateway instances that I can connect to to access this connect-enabled service without mTLS"""
8117,Merge pull request #8080 from hashicorp/ui-staging,ui: UI Release Merge (1.8-beta-3: ui-staging merge)
8118,ui: Reduce discovery-chain log errors (#8065)," ui: Reduce discovery-chain log spam  Currently the only way that the UI can know whether connect is enabled or not is whether we get 500 errors from certain endpoints. One of these endpoints we already use, so aswell as recovering from a 500 error, we also remember that connect is disabled for the rest of the page 'session' (so until the page is refreshed), and make no further http requests to the endpoint for that specific datacenter. This means that log spam is reduced to only 1 log per page refresh/dc instead of 1 log per service navigation. Longer term we'll need some way to dynamically discover whether connect is enabled per datacenter without relying on something that will add error logs to consul."
8119,Merge pull request #8076 from hashicorp/nq.basic-hero-tertiary-link-support,[Website] Support tertiary-styled third links
8120,ui: remove sort-control component (#8077),This was never actually used
8121,Support tertiary-styled third links,"Get the tertiary links to wrap below buttons Adjust color/spacing of tertiary via override Remove overrides, implement custom link Extract arrow icon to file Increase top margin for third link Apply Brandon's fixes Co-authored-by: Brandon Romano BrandonRRomano@gmail.com"
8122,Merge pull request #8075 from hashicorp/expose-cli-testfix,Fix a CLI test failure with namespaces in enterprise
8123,Fix a CLI test failure with namespaces in enterprise,
8124,Merge pull request #8071 from hashicorp/dnephin/update-vendor-2,Update google.golang.org/api and stretchr/testify
8125,Update comments that reference PatchSliceOfMaps,To reference decode.HookWeakDecodeFromSlice instead. Also removes a step from the adding config fields checklist which is no longer necessary.
8126,Merge pull request #8064 from hashicorp/ingress/health-query-param,Add API query parameter ?ingress to allow users to find ingress gateways associated to a service
8127,Update google.golang.org/api and stretchr/testify,"To match the versions used in enterprise, should slightly reduce the chances of getting a merge conflict when using go.mod."
8128,"Remove TODO note about ingress API, it is done!",
8129,Remove unnecessary defer from api.health_test.go,We do not need to deregister services because every test gets its own instance of the client agent and the tmp directories are all deleted at the end.
8130,Set connect or ingress boolean after checking for query param,
8131,Merge pull request #7900 from hashicorp/dnephin/add-linter-staticcheck-2,intentions: fix a bug in Intention.SetHash
8132,Merge pull request #8037 from hashicorp/dnephin/add-linter-staticcheck-5,ci: Enabled SA2002 staticcheck check
8133,Merge pull request #8067 from hashicorp/dnephin/update-vendor-1,Update protobuf and golang.org/x/... vendor
8134,acl: do not resolve local tokens from remote dcs (#8068),
8135,Merge pull request #8040 from hashicorp/ingress/expose-cli,Ingress expose CLI command
8136,Update protobuf and golang.org/x/... vendor,"Partially extracted from #7547 Updates protobuf to the most recent in the 1.3.x series, and updates golang.org/x/sys to a7d97aace0b0 because of https://github.com/shirou/gopsutil/issues/853 prevents updating to a more recent version. This breaking change in x/sys also prevents us from getting a newer version of x/net. In the future, if gopsutil is not patched,  we may want to run a fork version of gopsutil so that we can update both x/net and x/sys."
8137,Always allow updating the exposed service and differentiate by namespace,
8138,api: update api module with health.Ingress() method,
8139,Add ?ingress query parameter on /v1/health/connect,Refactor boolean query parameter logic from ?passing value to re-use with ingress
8140,ui: Reorder items in the Proxy Info tab (#8061),
8141,Merge pull request #8056 from hashicorp/docs-helm-survey,Update banner.js to call out helm chart survey
8142,ui: Reorder the tabs for Ingress/Terminating Gateway Service Detail page (#8060),
8143,ui: ConsulKind explanatory tooltip panels (#8048), ui: Add tooltip panels to ConsulKind
8144,fix link,
8145,Add -host flag to expose command,
8146,Merge pull request #7964 from hashicorp/dnephin/remove-patch-slice-of-maps-forward-compat,config: Use HookWeakDecodeFromSlice in place of PatchSliceOfMaps
8147,Allow multiple listeners per service via expose command,
8148,Update banner.js to call out helm chart survey,
8149,config: add HookWeakDecodeFromSlice,"Currently opaque config blocks (config entries, and CA provider config) are modified by PatchSliceOfMaps, making it impossible for these opaque config sections to contain slices of maps. In order to fix this problem, any lazy-decoding of these blocks needs to support weak decoding of []map[string]interface{} to a struct type before PatchSliceOfMaps is replaces. This is necessary because these config blobs are persisted, and during an upgrade an older version of Consul could read one of the new configuration values, which would cause an error. To support the upgrade path, this commit first introduces the new hooks for weak decoding of []map[string]interface{} and uses them only in the lazy-decode paths. That way, in a future release, new style configuration will be supported by the older version of Consul. This decode hook has a number of advantages:  It no longer panics. It allows mapstructure to report the error It no longer requires the user to declare which fields are slices of    structs. It can deduce that information from the 'to' value. It will make it possible to preserve opaque configuration, allowing    for structured opaque config."
8150,Tokens converted from legacy ACLs get their Hash computed (#8047), Fixes #5606: Tokens converted from legacy ACLs get their Hash computed  This allows new style token replication to work for legacy tokens as well when they change.  tests: fix timestamp comparison  Co-authored-by: Matt Keeler mjkeeler7@gmail.com
8151,Always require Host header values for http services (#7990),"Previously, we did not require the 'service-name.*' host header value when on a single http service was exposed. However, this allows a user to get into a situation where, if they add another service to the listener, suddenly the previous service's traffic might not be routed correctly. Thus, we always require the Host header, even if there is only 1 service. Also, we add the make the default domain matching more restrictive by matching ""service-name.ingress.*"" by default. This lines up better with the namespace case and more accurately matches the Consul DNS value we expect people to use in this case."
8152,docs: Fix rendering of markdown on performance page,Fix issue with markdown not being rendered on /docs/install/performance.mdx. Resolves #8049
8153,http: use default minsize for gzip handler. (#7354),Fixes #6306
8154,agent: add option to disable agent cache for HTTP endpoints (#8023),This allows the operator to disable agent caching for the http endpoint. It is on by default for backwards compatibility and if disabled will ignore the url parameter cached.
8155,website: fix a link in docs/agent/options,fixing the link to gopsutil in the -disable-host-node-id option text body
8156,a few more naming adjustments,
8157,"change page path, add redirect",
8158,Update Homepage Use Case Name and Link,resubmitting this PR to include a link change.
8159,Updating NMA use case to reflect new name,"Recently changed Network Middleware Automation use case to Network Infrastructure Automation, adding changes to the site to reflect this."
8160,Document the namespace format for expose CLI command,
8161,Add docs for expose command,
8162,Add connect expose CLI command,
8163,ci: Enabled SA2002 staticcheck check,And handle errors in the main test goroutine
8164,Setup intermediate_pki_path on secondary when using vault (#8001),Make sure to mount vault backend for intermediate_pki_path on secondary dc.
8165,intentions: fix a bug in Intention.SetHash,"Found using staticcheck. binary.Write does not accept int types without a size. The error from binary.Write was ignored, so we never saw this error. Casting the data to uint64 produces a correct hash. Also deprecate the Default{Addr,Port} fields, and prevent them from being encoded. These fields will always be empty and are not used. Removing these would break backwards compatibility, so they are left in place for now. Co-authored-by: Hans Hasselberg me@hans.io"
8166,Use linkmode=external for the arm builds (#8029),This gets around some issues regarding too large plt offsets when compiling with CGO Co-authored-by: Matt Keeler mjkeeler7@gmail.com
8167,ui: Blocking with filtering intentions amends (#8027),  ui: Now intentions use blocking queries invalidation isn't needed   ui: Ensure reconciliation doesn't happen when filtering for intentions 
8168,tests: ensure that the ServiceExists helper function normalizes entmeta (#8025),This fixes a unit test failure over in enterprise due to https://github.com/hashicorp/consul/pull/7384
8169,server: don't activate federation state replication or anti-entropy until all servers are running 1.8.0+ (#8014),
8170,tests: use constructor instead init (#8024),
8171,fixed links (#8020),
8172,Merge pull request #8022 from hashicorp/ui/bugfix/switch-help-icons,ui: Switch help menu icons to use the correct icons
8173,ui: Switch help menu icons to use the correct icons,
8174,"checks: when a service does not exists in an alias, consider it failing (#7384)","In current implementation of Consul, check alias cannot determine if a service exists or not. Because a service without any check is semantically considered as passing, so when no healthchecks are found for an agent, the check was considered as passing. But this make little sense as the current implementation does not make any difference between:  * a non-existing service (passing)  * a service without any check (passing as well) In order to make it work, we have to ensure that when a check did not find any healthcheck, the service does indeed exists. If it does not, lets consider the check as failing."
8175,Merge pull request #7966 from hashicorp/pool_improvements,Agent connection pool cleanup
8176,Update CHANGELOG.md,
8177,Enable gateways to resolve hostnames to IPv4 addresses (#7999),"The DNS resolution will be handled by Envoy and defaults to LOGICAL_DNS. This discovery type can be overridden on a per-gateway basis with the envoy_dns_discovery_type Gateway Option. If a service contains an instance with a hostname as an address we set the Envoy cluster to use DNS as the discovery type rather than EDS. Since both mesh gateways and terminating gateways route to clusters using SNI, whenever there is a mix of hostnames and IP addresses associated with a service we use the hostname + CDS rather than the IPs + EDS. Note that we detect hostnames by attempting to parse the service instance's address as an IP. If it is not a valid IP we assume it is a hostname."
8178,Merge pull request #8002 from pruett/pruett.quickfix-acl-docs,Add newline to fix rendering bug
8179,Updating Stopping Agent Section (#8016),Fixes #6935 to clarify agent behavior.
8180,Merge pull request #8017 from hashicorp/dnephin/increase-lint-timeout,ci: Increase lint timeout
8181,Increase lint timeout,"We occasionally see the lint job fail due to this timeout. Likely when the node running lint is under heavy load, because normally it runs much faster. This commit increases the timeout substantially to work around that problem."
8182,Add newline to fix rendering bug,
8183,fix some flaky snapshot tests (#8015),
8184,Merge pull request #8013 from hashicorp/ui-staging,ui: UI Release Merge (1.8-beta-3: ui-staging merge)
8185,Merge pull request #8008 from hashicorp/dnephin/fix-capture-logs-in-envoy-integration-test,ci: fix log capture for envoy integration tests
8186,ui: Add ability to sort service based on health (#7989),  ui: Add ability to sort service based on health   ui: Move custom sorting to sort/comparator Service/Helper (like search)   This moves custom sorting to use the same pattern as custom searching.  Remove old Controller based comparator
8187,ui: Customize link for an Upstream in a different namespace as the ingress gateway (#8006),  Add configuration default value for findGatewayBySlug   Customize link for an Upstream in a different nspace as the ingress gateway 
8188,ui: Add an Address copy button to the service instance page (#7977),  ui: Add an Address copy button to the service instance page   ui: Fallback to Node Address if no Service Address is configured 
8189,"ui: Remove WithSearching mixin, use helpers instead (#7961)"," ui: Remove WithSearching mixin, use composable helpers instead"
8190,ui: Add blocking queries to gateways (#7967),"  Remove gateway endpoint adapter, model, and serializer and tests   Update service tests to handle gateway-services-nodes   Upgrade consul-api-double to 2.15.2   Add a fairly temporary shouldReconcile method   Co-authored-by: John Cowen jcowen@hashicorp.com"
8191,ui: SSO Icon cleanup (#7959), Removes all icons not supported by the backend Adds other icons supported by the backend If there is no icon available don't add CSS positioning for one
8192,ui: New Empty States (#7940),"  ui: CSS and component changes to the  component   ui: Reset the auth-form component back to its initial state   Moving forwards we are going to have the auth-form on the page all the time, even when logged in (for relogging in purposes). This means the auth-form will not always be removed from the DOM when you log in. This sets the form back to its idle state before calling onsubmit   ui: Make a public api for modal-dialog with a single close method   ui : Move cache reset somewhere that makes more sense, + single refresh   Centralize cache resetting elsewhere, for now the store makes most sense, although I would prefer the Repository class, so using the store is temporary   We only need to refresh on login once, unless we have a differing nspace   ui: Ensure visibilitychange events are cleaned up   ui: Only cache DataSource data if we have any, + only clear the cache   ui: Add the modal login dialog to both unauth and auth views   This means we can 'relogin' when already logged in   ui: Add new empty states   ui: CSS Tweaks   Remove marketing grays "
8193,ui: Create Tags & Meta tab (#7954),
8194,ui: Make only existing services in Upstreams linkabled with hover effect (#7943),  Create service/exist helper to be used in ListCollection list items   Make only existing services in Upstreams linkabled with hover effect 
8195,ui: remove some components/javascript we are no longer using (#7941),
8196,ui: Implement EmberTooltips to Upstreams (#7930),  Add ember-tooltips addon   Create Tooltip component with styling and test   Implement Tooltip into Upstreams 
8197,ui: Blink/Webkit input[type=password] workaround (#7929),It seems that blink/webkit browsers at least will leak memory when using input[type=password] inputs. This only affects us during testing as we 'refresh' the ember app ~1000 times without actually refreshing the browser. This means references to these HTML input elements mount up now that every single page/test has an input[password] on it. Following this change our memory usage during testing seems to have reduced by as much as 75%. During normal usage the single password element is only added to the page once per login/logout.
8198,ui: Slightly refactor %composite-rows and reuse ConsulServiceList component (#7886),  ui: Move individual component types into a single %composite-list plus   Removes all out separate CSS components (that match HTML components) to favour not having those separate for the moemnt at least   Reuses  component for Terminating Gateways > Linked Services   ui: Tweak breadcrumb spacing for '/' separator   Fix up the tests i.e. services per tab so we can call them all services 
8199,Update CHANGELOG.md,
8200,Fix legacy management tokens in unupgraded secondary dcs (#7908),The ACL.GetPolicy RPC endpoint was supposed to return the “parent” policy and not always the default policy. In the case of legacy management tokens the parent policy was supposed to be “manage”. The result of us not sending this properly was that operations that required specifically a management token such as saving a snapshot would not work in secondary DCs until they were upgraded.
8201,Update CHANGELOG.md,
8202,Fix segfault due to race condition for checking server versions (#7957),The ACL monitoring routine uses c.routers to check for server version updates. Therefore it needs to be started after initializing the routers.
8203,ci: fix log capture for envoy integration tests,"The previous change, which moved test running to Go, appears to have broken log capturing. I am not entirely sure why, but the run_tests function seems to exit on the first error. This change moves test teardown and log capturing out of run_test, and has the go test runner call them when necessary."
8204,Replace goe/verify.Values with testify/require.Equal (#7993)," testing: replace most goe/verify.Values with require.Equal  One difference between these two comparisons is that go/verify considers nil slices/maps to be equal to empty slices/maps, where as testify/require does not, and does not appear to provide any way to enable that behaviour. Because of this difference some expected values were changed from empty slices to nil slices, and some calls to verify.Values were left.  Remove github.com/pascaldekloe/goe/verify  Reduce the number of assertion packages we use from 2 to 1"
8205,Added guideLinks prop for UseCaseLayout component and linked terminating gateways guide from documentation. (#7998),
8206,Merge pull request #7956 from hashicorp/update-master-to-1.8.0-beta2,Update master to 1.8.0 beta2
8207,update changelog,
8208,acl: allow auth methods created in the primary datacenter to optionally create global tokens (#7899),
8209,update changelog,
8210,acl: remove the deprecated acl_enforce_version_8 option (#7991),Fixes #7292
8211,Replace whitelist/blacklist terminology with allowlist/denylist (#7971), Replace whitelist/blacklist terminology with allowlist/denylist
8212,add gobetween to the Consul tools (#7973),add gobetween to the Consul tools
8213,pool: remove timeout parameter,"Timeout was never used in a meaningful way by callers, which is why it is now entirely internal to the pool."
8214,pool: remove useTLS and ForceTLS,"In the past TLS usage was enforced with these variables, but these days this decision is made by TLSConfigurator and there is no reason to keep using the variables."
8215,pool: remove version,The version field has been used to decide which multiplexing to use. It was introduced in 2457293dceec95ecd12ef4f01442e13710ea131a. But this is 6y ago and there is no need for this differentiation anymore.
8216,Remove underscores from gateway URL paths (#7962),
8217,update CHANGELOG after rebasing release/1.8.x after 1.8.0-beta2,
8218,Putting source back into Dev Mode,
8219,Release v1.8.0-beta2,
8220,update bindata_assetfs.go,
8221,Update CHANGELOG.md,
8222,Update CHANGELOG.md,
8223,Update CHANGELOG.md,
8224,Update CHANGELOG.md,
8225,Putting source back into Dev Mode,
8226,Release v1.8.0-beta1,
8227,update bindata_assetfs.go,
8228,Merge pull request #7936 from hashicorp/helm-k8s-mgw,Helm docs for k8s mesh gateways and federation
8229,Helm docs for k8s mesh gateways and federation,
8230,Merge pull request #7947 from hashicorp/dnephin/add-linter-staticcheck-3,ci: Enable staticcheck and fix most errors
8231,ci: Add staticcheck and fix most errors,"Three of the checks are temporarily disabled to limit the size of the diff, and allow us to enable all the other checks in CI. In a follow up we can fix the issues reported by the other checks one at a time, and enable them."
8232,Merge pull request #7963 from hashicorp/dnephin/replace-lib-translate-keys,Replace lib.TranslateKeys with a mapstructure decode hook
8233,config: use the new HookTranslateKeys instead of lib.TranslateKeys,"With the exception of CA provider config, which will be migrated at some later time."
8234,Add alias struct tags for new decode hook,
8235,config: add HookTranslteKeys,"This hook replaces lib.TranslateKeys and has a number of advantages:  Primarily, aliases for fields are defined on the field itself, making    the aliases much easier to maintain, and more obvious to the reader. TranslateKeys translation rules are not aware of structure. It could    very easily incorrectly translate a key on one struct that was intended    to be a translation rule for a completely different struct, leading    to very hard to debug errors. The hook removes the need for the    unexpected ""translation rule is an empty string to indicate stop    traversal"" special case. TranslateKeys attempts to duplicate a bunch of tree traversal logic    that already exists in mapstructure. Using mapstructure for traversal    removes the need to traverse the entire structure multiple times, and    makes the behaviour more obvious to the reader.  This change is being made to enable a future change of replacing PatchSliceOfMaps. TranslateKeys sits in between PatchSliceOfMaps and mapstructure.Decode, so it must be converted to a hook first, before PatchSliceOfMaps can be replaced by a decode hook."
8236,create lib/stringslice package (#7934),
8237,update changelog,
8238,agent: handle re-bootstrapping in a secondary datacenter when WAN federation via mesh gateways is configured (#7931),"The main fix here is to always union the primary-gateways list with the list of mesh gateways in the primary returned from the replicated federation states list. This will allow any replicated (incorrect) state to be supplemented with user-configured (correct) state in the config file. Eventually the game of random selection whack-a-mole will pick a winning entry and re-replicate the latest federation states from the primary. If the user-configured state is actually the incorrect one, then the same eventual correct selection process will work in that case, too. The secondary fix is actually to finish making wanfed-via-mgws actually work as originally designed. Once a secondary datacenter has replicated federation states for the primary AND managed to stand up its own local mesh gateways then all of the RPCs from a secondary to the primary SHOULD go through two sets of mesh gateways to arrive in the consul servers in the primary (one hop for the secondary datacenter's mesh gateway, and one hop through the primary datacenter's mesh gateway). This was neglected in the initial implementation. While everything works, ideally we should treat communications that go around the mesh gateways as just provided for bootstrapping purposes. Now we heuristically use the success/failure history of the federation state replicator goroutine loop to determine if our current mesh gateway route is working as intended. If it is, we try using the local gateways, and if those don't work we fall back on trying the primary via the union of the replicated state and the go-discover configuration flags. This can be improved slightly in the future by possibly initializing the gateway choice to local on startup if we already have replicated state. This PR does not address that improvement. Fixes #7339"
8239,bump beta callout to v1.8.0-beta2 (#7945),
8240,connect: fix endpoints clusterName when using cluster escape hatch (#7319),changelog * fix(connect): fix endpoints clusterName when using cluster escape hatch
8241,Stop all watches before shuting down anything dring shutdown. (#7526),This will prevent watches from being triggered. changelog * fix(agent):  stop all watches before shuting down
8242,Merge pull request #7944 from hashicorp/k8s-mgw-docs-update,Update for consul:1.8.0-beta2
8243,Update for consul:1.8.0-beta2,
8244,update changelog,
8245,connect: ensure proxy-defaults protocol is used for upstreams (#7938),
8246,env variable clarity,
8247,mod stylelint to be more accurate,
8248,upgrade to stylelint release,
8249,"remove unused dependencies, adjust 404 link color",
8250,update dependencies,
8251,Standardize support for Tagged and BindAddresses in Ingress Gateways (#7924), Standardize support for Tagged and BindAddresses in Ingress Gateways  This updates the TaggedAddresses and BindAddresses behavior for Ingress to match Mesh/Terminating gateways. The consul connect envoy command now also allows passing an address without a port for tagged/bind addresses.  Update command/connect/envoy/envoy.go  Co-authored-by: Freddy freddygv@users.noreply.github.com   PR comments   Check to see if address is an actual IP address   Update agent/xds/listeners.go   Co-authored-by: Freddy freddygv@users.noreply.github.com  fix whitespace  Co-authored-by: Chris Piraino cpiraino@hashicorp.com Co-authored-by: Freddy freddygv@users.noreply.github.com
8252,Updated resource heading to correct error,
8253,Merge pull request #7933 from hashicorp/dnephin/state-txn-missing-errors,state: fix unhandled error
8254,Update agent/consul/state/catalog.go,Co-authored-by: Hans Hasselberg me@hans.io
8255,grpc: use default resolver scheme for grpc dialing (#7617),"Currently checks of type gRPC will emit log messages such as, 2020/02/12 13:48:22 [INFO] parsed scheme: """" 2020/02/12 13:48:22 [INFO] scheme """" not registered, fallback to default scheme  Without adding full support for using custom gRPC schemes (maybe that's right long-term path) we can just supply the default scheme as provided by the grpc library. Fixes https://github.com/hashicorp/consul/issues/7274 and https://github.com/hashicorp/nomad/issues/7415"
8256,state: use an error to indicate compare failed,Errors are values. We can use the error value to identify the 'comparison failed' case which makes the function easier to use and should make it harder to miss handle the error case
8257,Update ingress/terminating gateway ACL docs (#7891),
8258,docs: Add Dart client to list of Libraries and SDKs (#7884),
8259,"docs: change ""is"" to ""can be"" in connect docs (#7902)","The doc says: ""When the Connect injector is installed, the Connect sidecar is automatically added to all pods."" But, it depends on the configuration, so I think it's better to say: ""When the Connect injector is installed, the Connect sidecar can automatically added to all pods."""
8260,tests: added unit test to ensure watches are not re-triggered on consul reload (#7449),This ensures no regression about https://github.com/hashicorp/consul/issues/7318 And ensure that https://github.com/hashicorp/consul/issues/7446 cannot happen anymore
8261,Allow to restrict servers that can join a given Serf Consul cluster. (#7628),Based on work done in https://github.com/hashicorp/memberlist/pull/196 this allows to restrict the IP ranges that can join a given Serf cluster and be a member of the cluster. Restrictions on IPs can be done separatly using 2 new differents flags and config options to restrict IPs for LAN and WAN Serf.
8262,Merge pull request #7894 from hashicorp/dnephin/add-linter-staticcheck-1,Fix some bugs/issues found by staticcheck
8263,consul/state: refactor tnxService to avoid missed cases,"Handling errors at the end of a log switch/case block is somewhat brittle. This block included a couple cases where errors were ignored, but it was not obvious the way it was written. This change moves all error handling into each case block. There is still potentially one case where err is ignored, which will be handled in a follow up."
8264,Remove unused var,"The usage was removed in 8e22d80e3550592a32144f2d1c84ebf6becb957b, however it seems there may be a bug here because the cluster name is not updated when the target changes."
8265,Handle error from template.Execute,"Refactored the function to make the problem more obvious, by using a guard."
8266,Fix a number of problems found by staticcheck,"Some of these problems are minor (unused vars), but others are real bugs (ignored errors). Co-authored-by: Matt Keeler mkeeler@users.noreply.github.com"
8267,Remove unused var,The usage of this var was removed in b92f895c233bf8a99ae35361117a90416fea29b5. Found by using staticcheck
8268,docs: remove todos (#7922),Fixes #7921
8269,Make envoy integration tests a go test suite (#7842)," test/integration: only run against 1 envoy version  These tests are slow enough that it seems unlikely that anyone is running multiple versions locally. If someone wants to, a for loop outside of run_test.sh should do the right thing. Remove unused vars.   Remove logic to iterate over test cases, run a single case   Add a golang runner for integration tests   Use build tags for envoy integration tests   And add junit-xml report"
8270,ci: limit parallelism for Ember builds (#7917),"If not artificially limited by setting JOBS env var, broccoli-babel-transpiler will attempt to parallelize across the number of CPUs on the host VM rather than the Docker container, resulting in CI jobs being killed due to running out of memory."
8271,UI Release Merge (1.8-beta-2: ui-staging merge) (#7919),"  ui: Styling fixes (#7885)   Move cellHeight to ListCollection js file   Fix composite row border-top-color onHover state   Add empty health check icon to CompositeRow styling   ui: Slightly refactor %composite-rows and reuse ConsulServiceList component (#7886)   ui: Move individual component types into a single %composite-list plus   Removes all out separate CSS components (that match HTML components) to favour not having those separate for the moemnt at least   Reuses  component for Terminating Gateways > Linked Services   ui: Tweak breadcrumb spacing for '/' separator   Fix up the tests i.e. services per tab so we can call them all services   ui: Misc discovery chain fixes (#7892)   Look for a default splitter before looking for a default resolver in order to route to.  Delay adding svg listeners until afterRender (fixes split tooltip)  Make router id's consistent for highlighting default routers in when clicking the graph   ui: If an error occurs on the server, surface it in the notification (#7893)   ui: Delete old unused CSS (#7909)   This commit deletes CSS that we no longer use and we definitely will not ever use. We also dedup all of our imports here as it turns out SASS doesn't dedupe imports. Strangely this increases out CSS weight by ~1kb instead of reducing but we'd rather keep things deduped as that was the intention   ui: Redesign - Exposed Paths (#7912)   Add new exposed paths icons to codebase   Redesign Exposed Paths and create copy-button hover on Composite Row   Refactor FeedbackDialog and CopyButton   Change this.element to use {{ref }} now we don't have an element   We changed this to a tagless component with an eye to moving this to a glimmer component, without spotting that this would also remove the this.element property. This adds an equivalent using the ref modifier. Co-authored-by: John Cowen jcowen@hashicorp.com  ui: Remove box-shadow and pointer cursor from metada list hover effect (#7914)  Co-authored-by: Kenia 19161242+kaxcode@users.noreply.github.com"
8272,ui: Only save the setting that you've changed (#7918),"Originally we assumed all settings would be editable in the settings page, but over time we've added thigns to localStorage that aren't user settable settings. This means we shouldn't save all you localStorage settings everything time only a single setting has been saved. This change only changes the setting you've changed via the settings page, meaning it will never update non-user-settable settings."
8273,ui: Ensure datacenter is sent to the API when loading in a policy panel (#7910),"  ui: Policies don't have datacenter properties, use the URL dc instead.   ui: Ensure policy saving proxy object is destroyed "
8274,ui: Ensure value is always passed to CONSUL_SSO_ENABLED (#7913),"ACLsEnabled is always set to either true or false. .SSOEnabled is only set if you are running enterprise (the same as .NamespacesEnabled). Therefore .SSOEnabled and .NamespacesEnabled require conditionals to check their existence. In order to avoid future confusion we moved all go-template variables to use the conditional form, and added a comment to that effect. Tests have been added to reflect this, but they only test that the template outputs what we expect, true e2e testing here would be advantageous."
8275,docs: update the 'consul tls' command docs to match the current flags (#7911),
8276,Update CHANGELOG.md,
8277,ui: Misc amends for Safari and Firefox (#7907), Ensure dropdown menus function correctly in Safari Ensure default grey color for buttons is not used Ensure IntersectionObservers are cleaned up properly in Safari
8278,Merge pull request #7898 from hashicorp/bug/update-gateways-on-config-entry-delete,Remove error from GatewayServices RPC when a service is not a gateway
8279,Add service id context to the proxycfg logger,This is especially useful when multiple proxies are all querying the same Consul agent.
8280,Do not return an error if requested service is not a gateway,"This commit converts the previous error into just a Warn-level log message. By returning an error when the requested service was not a gateway, we did not appropriately update envoy because the cache Fetch returned an error and thus did not propagate the update through proxycfg and xds packages."
8281,Merge pull request #7905 from BrandonRomano/nf.update-flexible-architecture-image,website: update flexible architecture image
8282,website: update flexible architecture image,
8283,Merge pull request #7895 from BrandonRomano/nf.fix-callouts-image,website: fix image size on learn callout
8284,Unindenting to remove shell pre-formatting (#7890),
8285,re-enable auto cherry-picking after website launch (#7897),  re-enable auto cherry-picking after website launch   change to regex since we renamed docs-cherrypick to type/docs-cherrypick 
8286,Preserve ModifyIndex for unchanged entry in KVS TXN (#7832),
8287,Update CHANGELOG.md,
8288,website: fix image size on learn callout,
8289,Merge pull request #7889 from hashicorp/br.18-alert,Updates alert Banner to point to 1.8 Blog Post
8290,Updates alert Banner to point to 1.8 Blog Post,
8291,Merge pull request #7882 from hashicorp/multi-cluster-k8s,Documentation for wan fed via mgw on k8s
8292,ui: Quote service names when filtering for intentions (#7888),  ui: Quote service names for intention filtering   ui: return null if we ever get an error with anything else 
8293,Documentation for wan fed via mgw on k8s,
8294,Merge pull request #7883 from BrandonRomano/consul-website-redesign,website: Landing & Use Case Pages redesign
8295,Merge pull request #7887 from hashicorp/website-beta-availability,Update version.js
8296,link to beta,
8297,Update version.js,
8298,fix typo in changelog,
8299,Update CHANGELOG.md,
8300,tests: fix unstable test TestAgentAntiEntropy_Checks. (#7594),Example of failure: https://circleci.com/gh/hashicorp/consul/153932#tests/containers/2
8301,Remove accidental import that sneaked in rebase,
8302,"Revert ""Temporarily switch og:image to staging env to test""",This reverts commit a71eb2170020884e701267db23fc6d5a0bc3a06b.
8303,Set og:title name for overriding,
8304,Adds og:title,
8305,Temporarily switch og:image to staging env to test,
8306,Adds page specific metadata to use case pages,
8307,Update base metadata,
8308,Further image optimizations,
8309,Remove raster images to CDN,
8310,Optimize why consul icons,
8311,Optimize use case diagrams to SVGs,
8312,Final content tweaks,
8313,Fix logo alignment bug,
8314,Preserve Barclays aspect ratio,
8315,Shrink quotes,
8316,Removes border,
8317,Adds Mulit-Platform Service Mesh page,
8318,No case studies on NMA page,
8319,Update use case screenshots,
8320,Shrink barclays logo,
8321,Add health checking page content,
8322,Update service discovery description,
8323,Adds NMA page content,
8324,Small copy tweaks to prefooter elements,
8325,Update order of use cases,
8326,Update home content up to quotes,
8327,Add Kubernetes icon,
8328,Adds FeaturedSlider to use case pages,
8329,Delete old use case pages w/ redirect to new,
8330,Point the subnav use case pages to the new pages,
8331,Stub other use case pages,
8332,Stub nma page,
8333,Pull out CTA content into component,
8334,Theme & Stub quotes section,
8335,Adjust nav to new recommended layout.,"This removes ""Intro"", which is actually no longer the recommended get-started place (Learn takes that spot). Additionally, there is now a separator between the high level business value stuff, and the low level developer stuff."
8336,Adds learn guides w/ temporary K8S icon,
8337,Plugs in use cases,
8338,Tweak CTA text,
8339,Plug in Hero content,
8340,Adds a border to the top of the footer for visual spacing,
8341,Plug in proper content for when enterprise component,
8342,Plug in proper content,
8343,Remove featured slider in this PR,
8344,remove from style.css,
8345,add features list,
8346,remove before/after diagram,
8347,add spaces,
8348,remove console.log,
8349,add majority of home page components,
8350,add majority of components,
8351,prep for redesign,
8352,Test Netlify build,
8353,removed duplicated line about JWT auth method,
8354,docs: add audit logging docs to agent configuration (#7880),
8355,Merge pull request #7881 from hashicorp/b-wanfed-update,temporarily remove link that 404s
8356,temporarily remove link that 404s,will be readded later when page is available
8357,Merge pull request #7879 from hashicorp/b-changelog-1.8,Update changelog
8358,Add blurb on audit logging,
8359,Update changelog,Moved a couple of key features to the top with longer descriptions
8360,Merge pull request #7878 from hashicorp/oss-sync/auditing-http,http: migrate from instrumentation in s.wrap() to an s.enterpriseHand…
8361,http: migrate from instrumentation in s.wrap() to an s.enterpriseHandler(),
8362,Add beta tags to gateway docs (#7876),
8363,Ingress and Terminating Gateway docs (#7710),"This PR contains documentation additions for ingress and terminating gateways. New pages for the config-entries and overall feature description were added, as well as various additions to related pages. Co-authored-by: Jono Sosulska 42216911+jsosulska@users.noreply.github.com Co-authored-by: freddygv gh@freddygv.xyz Co-authored-by: Freddy freddygv@users.noreply.github.com Co-authored-by: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com"
8364,Update CHANGELOG.md,
8365,Update CHANGELOG.md,
8366,Give ember-build a larger container (#7873),"  bump ember-build-prod and ember-build to medium+ to prevent OOM errors   filter frontend workflow to only run on master, ui-staging, and ui/* branches "
8367,Merge pull request #7823 from hashicorp/docs-wanfed-mesh,Redo PR #7430 for new website (docs for WAN federation over mesh gateways)
8368,docs: docs for jwt and oidc auth methods (#7847),
8369,"added links, removed todo",
8370,add tabs component,
8371,add to primary website readme,
8372,add docs for enterprise alert component,
8373,Use proxy-id in gateway auto-registration (#7845),
8374,Update FAQ with Compat Matrix information (#7861),
8375,Update CHANGELOG.md,
8376,Merge pull request #7870 from hashicorp/ui-staging,UI Release Merge (1.8: ui-staging merge)
8377,ui: Add namespaces to gateway services (#7868),  Add namespace info to gateway Linked Services and Upstreams tabs   Upgrade consul-api-double to version 2.15.1 
8378,ui: Create Upstreams tab for Ingress Gateways (#7865),
8379,ui: Create Linked Services Tab for Terminating Gateways (#7858),  Fix to bottom border not applying to the correct    Create Linked Services tab with styling and tests   Add internal endpoint gateway-services-nodes to the codebase with tests   Upgrade consul-api-double to version 2.15.0 
8380,Fix identity resolution on clients and in secondary dcs (#7862),"Previously this happened to be using the method on the Server/Client that was meant to allow the ACLResolver to locally resolve tokens. On Servers that had tokens (primary or secondary dc + token replication) this function would lookup the token from raft and return the ACLIdentity. On clients this was always a noop. We inadvertently used this function instead of creating a new one when we added logging accessor ids for permission denied RPC requests.  With this commit, a new method is used for resolving the identity properly via the ACLResolver which may still resolve locally in the case of being on a server with tokens but also supports remote token resolution."
8381,Update FAQ with Compat Matrix information,
8382,Update FAQ + formatting (#7816),  Update FAQ + formatting   Fix 80 chars lines in FAQ 
8383,"Clean up placeholder diagrams, rename file to use dashes",
8384,Make new gateway tests compatible with enterprise (#7856),
8385,Update CHANGELOG,
8386,Merge pull request #7469 from djmgit/log_dir,Fix #7468 : Out log error for invalid log directory
8387,Merge pull request #7857 from hashicorp/ui-staging-1-8,UI Release Merge (1.8: ui-staging merge)
8388,Merge pull request #7654 from hashicorp/dnephin/add-linter-unconvert,Add unconvert linter
8389,Add unconvert linter,To find unnecessary type convertions
8390,ui: Test Improvements (#7854),"  ui: Combine all ""see/don't see"" steps into one step   Fix up broken tests   Add some test meta data/titles   Test out proxies in the service listing   Remove comments "
8391,ui: Renames CopyButtonFeedback to CopyButton and use it everywhere (#7834),"  ui: Renames CopyButtonFeedback to CopyButton and use it everywhere   Uncapitalize output   Remove the ability to set the contents via an attr, and..   ..change the attribute for the string that gets copied to be called 'value' so it feels like HTML"
8392,ui: Restrict %secondary-button to only form buttons in the main content (#7836),
8393,ui: Add and use ProxyFor to get the connected with proxy boolean (#7820),  Add and use ProxyFor to get the connected with proxy boolean   Fix up page-navigation test   Upgrade to @hashicorp/consul-api-double@2.14.7 
8394,ui: refactor out the taglist component to use a recursive pattern (#7837),  ui: refactor out the taglist component to use a recursive pattern   Make sure simple rendering tests pass 
8395,ui: Remove debugging pause from our acceptance tests (#7852),
8396,ui: Misc SSO w/Namespace amends (#7851),"  ui: If an auth-method is in another namespace than default, make that clear   Pass through the namespace of the auth method rather than use the current   Make sure we refresh the application route, before redirecting   This ensure that the nspaces and are refreshed in the main nav menu"
8397,ui: Update copy button icon margin (#7835),
8398,UI: Improved Login/Logout flow inc SSO support (#7790)," 6 new components for new login/logout flow, plus SSO support  UI Components:  AuthDialog: Wraps/orchestrates AuthForm and AuthProfile AuthForm: Authorization form shown when logged out. AuthProfile: Simple presentational component to show the users 'Profile' OidcSelect: A 'select' component for selecting an OIDC provider, dynamically uses either a single select menu or multiple buttons depending on the amount of providers  Data Components:  JwtSource: Given an OIDC provider URL this component will request a token from the provider and fire an donchange event when it has been retrieved. Used by TokenSource. TokenSource: Given a oidc provider name or a Consul SecretID, TokenSource will use whichever method/API requests required to retrieve Consul ACL Token, which is emitted to the onchange event handler.  Very basic README documentation included here, which is likely to be refined somewhat.   CSS required for new auth/SSO UI components   Remaining app code required to tie the new auth/SSO work together   CSS code required to help tie the auth/SSO work together   Test code in order to get current tests passing with new auth/SSO flow   ..plus extremely basics/skipped rendering tests for the new components  Treat the secret received from the server as the truth  Previously we've always treated what the user typed as the truth, this breaks down when using SSO as the user doesn't type anything to retrieve a token. Therefore we change this so that we use the secret in the API response as the truth.  Make sure removing an dom tree from a buffer only removes its own tree"
8399,ui: Change wording used in the intention forms (#7831),"  When choosing Services/Nsmapces for intentions you can either choose a service from autocomplete menus, or write any service name, existing or not. We previous said this would be a 'Future' service, but it could also be a service in another datacenter, or a 'virtual service'.   Reword the hints underneath the autocomplete menus to reflect point 1 "
8400,ui: Improve language surrounding marking a token as local/global (#7830),"This commit moved the checkbox used for marking a token as local/global to use a more traditional UX, i.e.: [ ] Question? Clicking the radiobutton toggles true/false: true = yes false = no instead of: false=yes true=no"
8401,ui: Moves/loads policy datacenters info into the detail panel (#7828),
8402,"ui: Create PopoverSelect, CatalogToolbar, and update tests (#7489)","  Create PopoverSelect component and styling   Create CatalogToolbar component and Styling   ui: Adds selectable-key-values helper (#7472)   Preferably we want all copy/text to live in the template. Whilst you can achieve what we've done here with a combination of different helpers, as we will be using this approach in various places it's probably best to make a helper. We also hit an ember bug related to using the let helper and trying to access thingThatWasLet.firstObject (which can also be worked around using object-at). Moving everything to a helper 'sorted' everything. Probably worthwhile noting that if the sort option themselves become dynamic, I'm not sure if the helper here would actually react as you would expect (I'm aware that ember helpers on react on the root arguments, not necesarily sub properties of those arguments). If we get to that point this helper could take the same approach as what I believe ember-composable-helpers does to get around this, or move them to the view controller. If we do ever moved this to the view controller, we can still use the exported function from the new helper here to keep using the same functionality and tests we have here.   Create tests for sorting services with CatalogToolbar   Add rule to print 'ember/no-global-jquery' as a warning   Co-authored-by: John Cowen johncowen@users.noreply.github.com"
8403,ui: Small CSS tweaks (#7808), Reinstate top border on in page tabs Keep overflow:hidden just for dom-recycling-tables
8404,ui: Update Gateway headers to include Service Kind (#7805),
8405,ui: Redesign - Instance Detail Proxy Info tab (#7745),  Fix clickFirstAnchor bug   Create Proxy Info Tab for Instance Detail Page   Create tests for ProxyInfo and update other scenarios with Proxy data   ui: Refactors our app-view/%app-view component (#7752)   Co-authored-by: John Cowen johncowen@users.noreply.github.com
8406,ui: Redesign - Gateway Instances List page (#7796),  Hide Nav in Instances page for Gateway services   Fix up tests to have mocked Services with no Kind attribute   Upgrade consul-api-double to 2.14.4 
8407,"ui: Remove last instances of 'meta data', replace with 'metadata' (#7793)",
8408,ui: Fix CSS typo (#7791),
8409,ui: Tab Improvements (animations/branding) (#7772),  ui: Adds a tab selection animation to our app tabs   Replace all mentions of magenta with a themeable CSS property.  Add an easy way to inline style DOM nodes  Use CSS properties to add tab animation   Fix up rendering test   Avoid DOM noodling as much as possible 
8410,ui: Redesign - Service List page with Gateways (#7781),  Return all services except Proxies   Add Gateway icon to the codebase   Create and implement ConsulExternalSource component   Fix tests to work with new mock data and add a Gateway test   Update consul-api-double to 2.14.3 
8411,ui: Model Layer for SSO Support (#7771),"  ui: Adds model layer required for SSO   oidc-provider ember-data triplet plus repo, plus addition of torii addon  Make blocking queries support a Cache-Control: no-cache header  Tweaks to the token model layer in preparation for SSO work   Fix up meta related Cache-Control tests   Add tests adapter tests for URL shapes   Reset Cache-Control to the original value, return something from logout "
8412,ui: Metadata cleanup (#7767),  Use new ConsulMetadataList for service > instance > metadata tab   Meta Data vs Metadata everywhere (Metadata is correct)   Fix up wording in tests 
8413,ui: Remove headers from the Healthchecks tab (#7751),
8414,"ui: Misc CSS amends, mainly changes to empty-state (#7743)"," empty-state amends to bring it closer to what is in Structure and optionally support icons. You may have a button that semantically should be a button (it performs and action not a link), but you want it to look like an anchor, this means it shouldn't have an outline when :active. Adds label.type-password as a %form-element Adds an error state to our %notice CSS component"
8415,ui: Adds <StateChart /> component for wiring together Ember+XState (#7742),
8416,ui: Amends to the data-sink service/component (#7740)," Fix conditional typo Code style changes Don't use URL for parsing, Safari only likes http like URLs"
8417,ui: Add background-color: currentColor to all our icon masks (#7729),"We currently define our 'decorational' iconography in our CSS via background images and or psuedo content. For coloring these we use mask-image and a background color. This commit adds a background-color: currentColor to our %with-mask placeholder that makes the color of these icons default to the color of the current element, meaning the icons now inherit from things like :hover. This can easily be overwritten as before by just setting the background-color on the icon manually as before."
8418,ui: Add a way to reliably figure out where the UI is running (#7722)," ui: Add a way to reliably figure out where the UI is running  The main javascript that we use is at /ui/assets/consul-ui.js This uses this fact to provide and base path 'environment' variable to be used within the app. This is also overwritable via various methods (testing/development) if we ever need to do that.  Remove BASE_API_URL, the logic here isn't exactly correct  Right now the API always has to be at http://domain/v1/ i.e. the root of your domain /v1. If the URL of the ui is set differently to http://root.com/somewhere/else/ui/ then the API is still at http://root.com/v1 There is definitely a plan to add this env var back in at some stage so we can potentially allow this to be configured in other ways, but there isn't a need to do it just yet so we don't need to worry about how to do this right now."
8419,ui: ConsulLoader component (#7719),Moves the consul-loader partial to a template-only component
8420,ui: replace Makefile sed directive for coverage,Use .istanbul.yml config file instead.
8421,ui: Fix up the padding for FilterBar (#7705),
8422,ui: Reuse repo.reconcile and restartWhenAvailable (#7703),
8423,ui: Fixup intention notifications and add SyncTime (#7702),  ui: Specifically check for error rather than anything but success   ui: Add SyncTime to intentions for reconciliation 
8424,ui: enable Babel-generated source maps for non-production builds,
8425,ui: Update Breadcrumbs styling (#7687),
8426,ui: Use DataSources in ACLs area (#7681),"  ui: Use Datasource for loading related data in ACLs area   ui: Use more manual cleanup for Controller event-sources   Update reconcile to use nspace and add SyncTime to role/policy   Use the correct value for nspace and dc (the one from the item itself)   Remove the // check, we no longer need it. Add some TODO "
8427,ui: Instance detail redesign (#7683),  Remove Proxy link and add ExternalSource to instance detail page header   Create HealthChecks tab with route and styling   Fix up tests to fit redesign of Service Instances Detail page 
8428,ui: Improved main navigation (#7673),  Make datacenter queries use query vs findAll like the rest of the app   Make sure we have an element to pass to isInViewport   Make sure href-mut doesn't error even if the currentRoute === null   More post test cleanup and Safari fix (safari requires http:// URLs)   Reverse order of datasource nspace/dc's and add a namespace source   Rearrange routes/templates/controllers to only use HashicorpConsul once   Add datasources and correct token namespace detection/redirection   Remove old dc findAll adapter method   Add more comments around the 'child route/parent controller' vars 
8429,ui: Redesign - Service Detail Page (#7655), Create ConsulServiceInstanceList with styling and test Implement ConsulServiceInstanceList to Service Detail page Implement ConsulExternalSource to Services Show page header  Update services/show page object   Update the styling of CompositeRow   Refactor ConsulServiceList component and styling   Update ConsulExternalSource to say 'Registered via...'   Upgrade consul-api-double to patch 2.14.1   Fix up tests to not use Kind in service models   Update ListCollection with clickFirstAnchor action   Add $typo-size-450 to typography base variables 
8430,ui: Per Service Intentions Tab (#7615),"  Add model layer support for filtering intentions by service   Add Route, Controller and template for services.show.intentions tab   We are still loading the intentions themselves in the parent Route for the moment   Load the intentions in in the parent route for the moment   Temporarily add support for returning to history -1   Once we have an intention form underneath the service/intention tab this will no longer be needed   Add the new tab and enable blocking queries for it   Add some further acceptance testing around intention listings "
8431,ui: Redesign - Create ConsulExternalSource (#7632),  Create ConsulExternalSource with test and styling   Implement ConsulExternalSource to Service list page   Update icons for redesign   Refactor ListCollection and CompositeRow styling 
8432,ui: Redesign Service List page (#7605),  Create GridCollection for nodes page with styling   Update ListCollection styling   Update TagList styling   Create CompositeRow styling component   Update ConsulServiceList component with styling   Create service health-checks helper   Add InstanceCount to the service model   Add tag-svg to codebase   Create and update tests for service-list page   Upgrade @hashicorp/consul-api-double to 2.14.0 
8433,ui: Logout button (#7604)," ui: Logout button  This commit adds an easier way to logout of the UI using a logout button Notes:  Added a Logout button to the main navigation when you are logged in, meaning you have easy access to a way to log out of the UI. Changed all wording to use 'Log in/out' vocabulary instad of 'stop using'. The logout button opens a panel to show you your current ACL token and a logout button in order to logout. When using legacy ACLs we don't show the current ACL token as legacy ACLs tokens only have secret values, whereas the new ACLs use a non-secret ID plus a secret ID (that we don't show). We also added a new <EmptyState /> component to use for all our empty states. We currently only use this for the ACLs disabled screen to provide more outgoing links to more readind material/documentation to help you to understand and enable ACLs. The <DataSink /> component is the sibling to our <DataSource /> component and whilst is much simpler (as it doesn't require polling support), its tries to use the same code patterns for consistencies sake. We had a fun problem with ember-data's store.unloadAll here, and in the end went with store.init to empty the ember-data store instead due to timing issues. We've tried to use already existing patterns in the Consul UI here such as our preexisting feedback service, although these are likely to change in the future. The thinking here is to add this feature with as little change as possible.  Overall this is a precursor to a much larger piece of work centered on auth in the UI. We figured this was a feature complete piece of work as it is and thought it was worthwhile to PR as a feature on its own, which also means the larger piece of work will be a smaller scoped PR also."
8434,ui: Add tab navigation to the browser history/URLs (#7592)," ui: Add tab navigation to the browser history/URLs  This commit changes all our tabbed UI interfaces in the catalog to use actual URL changes rather than only updating the content in the page using CSS. Originally we had decided not to add tab clicks into the browser history for a variety of reasons. As the UI has progressed these tabs are a fairly common pattern we are using and as the UI grows and stabilizes around certain UX patterns we've decided to make these tabs 'URL changing'. Pros:  Deeplinking Potentially smaller Route files with a more concentrated scope of the contents of a tab rather than the entire page. Tab clicks now go into your history meaning backwards and forwards buttons take you through the tabs not just the pages. The majority of our partials are now fully fledged templates (Octane :tada:)  Cons:  Tab clicks now go into your history meaning backwards and forwards buttons take you through the tabs not just the pages. (Could be good and bad from a UX perspective) Many more Route and Controller files (yet as mentioned above each of these have a more reduced scope) Moving around the contents of these tabs, or changing the visual names of them means updates to the URL structure, which then should potentially entail redirects, therefore what things that seem like straightforwards design reorganizations are now a little more impactful.  It was getting to the point that the Pros outweight the Cons Apart from moving some files around we made a few more tiny tweaks to get this all working:  Our freetext-filter component now performs the initial search rather than this happening in the Controller (remove of the search method in the Controllers and the new didInsertElement hook in the component) All of the 's were changed to use its alternative href approach. s usage was mostly removed. This is th thing I dislike the most. I think this needs removing, but I'd also like to remove the HTML it creates. You'll see that every new page is wrappe din the HTML for the old , this is to continue to use the same HTML structure and id's as before to avoid making further changes to any CSS that might use this and being able to target things during testing. We could have also removed these here, but it would have meant a much larger changeset and can just as easily be done at a later date.  We made a new tabgroup page-object component, which is almost identical to the previous radiogroup one and injected that instead where needed during testing.   Make sure we pick up indexed routes when nspaces are enabled   Move session invalidation to the child (session) route   Revert back to not using didInsertElement for updating the searching   This adds a way for the searchable to remember the last search result instead, which changes less and stick to the previous method of searching."
8435,ui: Changes our global LEARN link to start at root instead of /consul (#7573),"In case we ever need to link to anywhere on learn that isn't in the /consul sub directory, this will let us do that whilst still using the global env var."
8436,ui: Add <ConsulMetadataList /> and use it in 2 places (#7568),We previoulsy had some pretty straightforward duplicated code for rendering our metadata list for both Service Metadata and Node Metadata. This moves this code into a component.
8437,ui: Moves intentions listing and form into components (#7549),"Whilst we tried to do this with the smallest amount of changes possible, our acceptance tests for trying to submit a blank form started failing due to usage of destroyRecord, its seems that the correct way to achieve the same thing is to use rollbackAttributes instead. We changed that here and the tests pass once again. Furture work related to this will involve change the rest of the UI where we use destroyRecord to achieve the same thing, to use rollbackAttributes instead"
8438,ui: Add <State /> and{{state-matches}}` ember component/helper (#7556),"This commit adds 2 ember component/helpers and a service to contain the shared functionality for matching/rendering content dependent on state identifiers. Currently a service.state method has been added to easily make manual state objects, but these are built towards using xstate to manage UI state in some of our future components. We've added some tests here, and we aren't currently using these components anywhere in this commit."
8439,ui: Exposes the  'click' action (#7479),"This exposes an api for  so you can call it from elsewhere, specifically here we use the api.click to close the dropdown menus which is required is the DOM containing the toggle button isn't redrawn as is the case with external links in a dropdown menu"
8440,ui: Add DataSource component (#7448),  ui: Add data-source component and related services (#6486)   ui: Add data-source component and related services:   DataSource component  Repository manager for retrieving repositories based on URIs Blocking data service for injection to the data-source component to support blocking query types of data sources 'Once' promise based data service for injection for potential fallback to old style promise based data (would need to be injected via an initial runtime variable) Several utility functions taken from elsewhere maybeCall - a replication of code from elsewhere for condition   calling a function based on the result of a promise restartWhenAvailable - used for restarting blocking queries when a   tab is brought to the front  ifNotBlocking - to check if blocking is NOT enabled   Move to a different organization based on protocols   Don't call open twice when eager   Workaround new ember error for reading and writing at the same time   Add first draft of a README.mdx file 
8441,ui: Adds blueprint for creating css-components (#7460)," ui: Adds blueprint for creating css-components  CSS Components are CSS only components, which can be one of 2 types:  A composable CSS component that is not commonly used on its own A CSS component that is commonly used along with a HTML/JS component, potentially made up of other composable CSS components.  For type 1. you probably don't need the ./styles/component-name.scss file. But instead of complicating matters with options for the blueprint right now, we just rely on the user to delete the ./styles/component-name.scss file if they don't need it. We also don't automatically add this import to the ./styles/components/index.scss file for 2 reasons:  We are potentially going to be moving the ./styles/components/index.scss file to ./styles/components.scss. If we aren't going to provide a CLI swicth to ask whether this is of component type 1. or component type 2. we don't want to automatically include things that the user might not need.  Both of these 2 reasons are a little TBD and at some point in the future we'll probably iterate on this blueprint to make it even easier to make either type of CSS component."
8442,ui: Move  docs to README.mdx (#7459),"README.mdx file are auto displayed in GH. Also added note on it being renderless, which is useful to know from a CSS standpoint"
8443,ui: Add Ref component (#7442), ui: Add Ref component
8444,ui: Move to new ember nested file structure for components (#7403),"  ui: Move components to the new nested structure   Move data-test attribute to the correct HTML element   We don't currently rely on this, but was incorrectly placed on the input rather than the label tag  Fix up left over curly bracket components that were causing issues  For some reason the combination of:  Old style curly bracket components data-test-* attributes Moving to the new component file structure  Meant that our data-test-* selectors where no longer being rendered. Whilst this had no effect on the app, it meant our tests suite could no longer select DOM elements in order to assert various things. Moving the old style curly bracket components to the new style XML/Angle bracket format fixes the issue  Update ui-v2/app/templates/dc/nodes/-services.hbs  Co-Authored-By: Greg Hoin 1416421+gregone@users.noreply.github.com  Update ui-v2/app/templates/dc/nodes/-services.hbs  Co-Authored-By: Greg Hoin 1416421+gregone@users.noreply.github.com Co-authored-by: Greg Hoin 1416421+gregone@users.noreply.github.com"
8445,ui: Update the shadows for radio buttons and the cards (#7391), Update box-shadowing for cards and radio buttons to low Update box-shadowing for hover cards to middle Create a new box-shadow CSS variable for form elements
8446,ui: Install ref modifier and use it instead of dom selecting (#7383),
8447,ui: Remove settings.findHeaders now we can use promises in our adapters (#7375),"Previously the API around setting headers wasn't within a Promised like code path, so we needed a little 'cheat' function to get a token from localStorage syncronously. Since we refactored our adapter layer, we now have a Promised codepath where we need to access this localStorage value and set our headers. This means we can remove our little 'cheat' function."
8448,ui: Delete the Promise rsvp imports from codebase (#7372),
8449,ui: Updates Consul blueprints to be compatible with new ED version (#7370),
8450,ui: Split out product css component into its separate elements (#7342),  Remove old %action-group   Remove old variables we no longer need   Use the discovery-chain component in the same manner as others   Split product out into its separate components 
8451,ui: Upgrade to ember 3.16 Octane Edition (#7334),"  v3.12.0...v3.16.0   Upgrades   Remove old wormhole fix   Fixup ember power select (camelcasing)   Fixup immedaitely closing dropdown   When clicking on the syntax selector, it seemed like an extra click event was firing from the label, which then immediately closed the dropdown. By adding a for="""" attribute this event isn't passed to the dropdown menu and therefore doesn't immediately close   Fix up integration tests with new style (plus standardize titles)   Temporarily disable some template linting rules   Add required methods (even though they aren't used anywhere)   Ensure event sources get closed on destruction "
8452,ui: Create CSS variables for box-shadowing consistency (#7337)," Table - Lowest (on-hover of table items) Buttons - Middle Form-elements - Removed, no box-shadowing in input forms mocks. Menu-panel -High Modal-dialog - Highest Stats-card -Middle/High(Active) Tooltip - Middle Card - Middle Expanded-single-select - Middle Tabular-details - High Discovery chain - High"
8453,ui: Make a specific CI coverage make target ensuring use of CI cache (#7335),
8454,ui: Create a helper to show the last 8 characters of token Accessor ID (#7327), Create substr helper Create a test for the new substr helper Display the last 8 characters of token Accessor ID in the Token lists page
8455,ui: Add box-shadow to table items on hover,
8456,ui: Move to angle brackets for ember components (#7321),  Modify templates with codemods angle brackets   ui: Fix up problem with intention filter action attribute   Co-authored-by: Kenia 19161242+kaxcode@users.noreply.github.com
8457,ui: Upgrade ember-cli-api-double (#7322), ui: Upgrade ember-cli-api-double
8458,"ui: Add new Help menu with links to docs, learn and GH (#7310)",
8459,ui: HTTP Body testing (#7290),"  ui: Test Coverage Reporting (#7027)   Serve up the /coverage folder whilst developing   Upgrade ember-cli-api-double now it supports passthrough per url   ui: make env into a service and use it where we need to be injectable   Give http/client a body method so we can use it on its own for testing   Add test helper for testing with and without nspaces enabled   Add two tests, one thay needs nspaces and one that doesn't   Keep cleaning up client/http, whilst figuring out a immutable bug   Convert tests to new return format ([actual, leftovers]) "
8460,ui: Use a service-proxy to test service removal notification (#7315),
8461,ui: Upgrade ember-cli-api-double and ember-data to fix up stage/preview site (#7316),
8462,ui: Upgrade circle CI node image to use node 12 (#7314),
8463,Upgrade to use structure-icons 1.8 (plus additional mask placeholders) (#7287),
8464,ui: Test coverage developer experience (#7275),  ui: Add getSplitters unit test and additional getResolvers test   Make ordering of makefile target consistent 
8465,ui: Add consul-service-list presentational component (#7279),"This commit moves our service list into a new presentational component, and is therefore mainly just moving things around. The main thing moved here is the logic required to resizing columns correctly is now moved to a component instead of the controller"
8466,ui: Remove next from usage from discovery-chain component (#7273),"In a previous iteration of discovery-chain wrapping some event listeners in a call to next (i.e. do this on next tick) was necessary. We added a comment in here to see if we could get rid of it at a later date. We've taken another look at this and it looks like this next is no longer required in this later iteration. Further more there is the tiniest chance that possibly, as we are adding listeners on next tick, that the listeners could be added after component destruction, which means when you click on the page we try to set a property of a destroyed object and boom. Removing this next removes this tiny possibility."
8467,ui: Remove custom css-vars 'polyfill' and use native CSS props (#7249)," ui: Remove custom css-vars 'polyfill' and use native CSS props  Previously we used a sort of polyfill for certain places where we needed CSS property-like behavior. This meant duplicating code between JS and CSS, specifically some of our SVG icons. We moved to CSS props only in the places where they are beneficial and populated the variables with our already existing SASS variables. This means we no longer have to duplicate CSS and we can remove our custom css-var helper/polyfill."
8468,ui: Upgrade to node 12 LTS (#7248),Upgrading our build tooling to use the latest node LTS and the lastest/current Alpine version in our container
8469,fix ember parallelization (#7221),
8470,ui: Use the dart-sass implementation of sass (#7175),
8471,ui: Test Coverage Reporting (#7027),  Serve up the /coverage folder whilst developing   Upgrade ember-cli-api-double now it supports passthrough per url 
8472,ui: Slight refactor 'name deciding' for request > rpc (#6850),"During the refactor of the data layer we had a method that you can use to do a request/response call i.e. adapter.request > serializer.respond We weren't sure what to name this but eventually wanted it to live on the HTTPAdapter itself (see removed comments in the changeset) We've decided rpc is a good name and we've moved this to where we want it. We've deprecated the old request method name but not removed it as yet. There's also opportunity now to reduce the 'read/write' functions further as they essentially do the same thing. Again we've left this for the moment, but we are hoping to get the code for our custom Adapter down to less than 100 LoC."
8473,"Value is already an int, remove type cast",
8474,Merge pull request #7848 from hashicorp/dnephin/debug-lint-download-fail,ci: debugging for golangci-lint download failing
8475,Merge pull request #7855 from bitsofinfo/master,added files-to-consul-kv to tools
8476,Merge pull request #7689 from hashicorp/dnephin/remove-deadcode-1,Remove some dead code
8477,Merge pull request #7819 from hashicorp/dnephin/remove-t.Parallel-1,test: Remove t.Parallel() from agent/structs tests
8478,added files-to-consul-kv to tools,added files-to-consul-kv to tools
8479,docs: header payload type change (#7763)," changed the header type from string to list as mentioned in doc in [website/pages/api-docs/agent/check.mdx, website/pages/docs/agent/checks.mdx]"
8480,docs: fix misleading example for HTTP healthcheck (#7773),"The documentation says the header field has type map[string][]string, but the example has map[string]string."
8481,update changelog,
8482,update changelog,
8483,acl: add auth method for JWTs (#7846),
8484,ci: debugging for golangci-lint download failing,"We've seen a few CI runs fail with ""exit status 52"". This will hopefully give us more detail about what is failing."
8485,Merge pull request #7843 from hashicorp/oss-sync/auditing-config,agent/config: Fix tests & include Audit struct as a pointer on Config
8486,"agent/config: include Audit struct as a pointer on Config, fix tests",
8487,Merge pull request #7841 from hashicorp/oss-sync/auditing-config,OSS sync - Auditing config
8488,agent/config: add auditing config to OSS and add to enterpriseConfigMap exclusions,
8489,Add Beta super script to page title,also moves version availability to below feature title
8490,Return early from updateGatewayServices if nothing to update (#7838)," Return early from updateGatewayServices if nothing to update  Previously, we returned an empty slice of gatewayServices, which caused us to accidentally delete everything in the memdb table  PR comment and better formatting"
8491,Fix TestInternal_GatewayServiceDump_Ingress (#7840),Protocol was added as a field on GatewayServices after GatewayServiceDump PR branch was created.
8492,cli: ensure 'acl auth-method update' doesn't deep merge the Config field (#7839),
8493,PR comment and better formatting,
8494,docs: add docs for configuring ACLs with external servers (#7802),
8495,Return early from updateGatewayServices if nothing to update,"Previously, we returned an empty slice of gatewayServices, which caused us to accidentally delete everything in the memdb table"
8496,Gateway Services Nodes UI Endpoint (#7685),The endpoint supports queries for both Ingress Gateways and Terminating Gateways. Used to display a gateway's linked services in the UI.
8497,Merge pull request #7759 from hashicorp/ingress/tls-hosts,Add TLS option for Ingress Gateway listeners
8498,Disallow the blanket wildcard prefix from being used as custom host,
8499,Remove development log line,
8500,Set default protocol to http in TLS integration test,
8501,Compute all valid DNSSANs for ingress gateways,For DNSSANs we take into account the following and compute the appropriate wildcard values: - source datacenter - namespaces - alt domains
8502,Add beta superscript to docs title for wan federation over mesh gateways,
8503,Redo PR #7430 for new website,Still has todos and diagrams to be added
8504,Merge pull request #7713 from hashicorp/dnephin/connect-proxy-passive-healthcheck,xds: Add passive health check config for upstreams (aka envoy outlier detection)
8505,Add outlier_detection check to integration test,Fix decoding of time.Duration types.
8506,xds: Add passive health check config for upstreams,
8507,Restoring config entries updates the gateway-services table (#7811), Adds a new validateConfigEntryEnterprise function Also fixes some state store tests that were failing in enterprise
8508,test: Remove t.Parallel() from agent/structs tests,"go test will only run tests in parallel within a single package. In this case the package test run time is exactly the same with or without t.Parallel() (~0.7s). In generally we should avoid t.Parallel() as it causes a number of problems with go test not reporting failure messages correctly. I encountered one of these problems, which is what prompted this change.  Since t.Parallel is not providing any benefit in this package, this commit removes it. The change was automated with: git grep -l 't.Parallel' | xargs sed -i -e '/t.Parallel/d'"
8509,Fix up enterprise compatibility for gateways (#7813),
8510,Fix spelling of deregister (#7804),
8511,Merge pull request #7815 from hashicorp/denislavdenov-patch-1,Update license.mdx
8512,Update website/pages/docs/commands/license.mdx,Co-authored-by: danielehc 40759828+danielehc@users.noreply.github.com
8513,Update license.mdx,"Hello team, I noticed that the reset part of the consul license command was missing in the documentation so I added it and created this PR."
8514,cli: oss refactors to support making the auth method CLI aware of namespace rules in enterprise (#7812),
8515,"Allow ingress gateways to send empty clusters, routes, and listeners (#7795)","This is useful when updating an config entry with no services, and the expected behavior is that envoy closes all listeners and clusters. We also allow empty routes because ingress gateways name route configurations based on the port of the listener, so it is important we remove any stale routes. Then, if a new listener with an old port is added, we will not have to deal with stale routes hanging around routing to the wrong place. Endpoints are associated with clusters, and thus by deleting the clusters we don't have to care about sending empty endpoint responses."
8516,Cleanup proxycfg for TLS, Use correct enterprise metadata for finding config entry nil out cancel functions on config snapshot copy Look at HostsSet when checking validity
8517,add alert banner to website,
8518,Require individual services in ingress entry to match protocols (#7774),"We require any non-wildcard services to match the protocol defined in the listener on write, so that we can maintain a consistent experience through ingress gateways. This also helps guard against accidental misconfiguration by a user.  Update tests that require an updated protocol for ingress gateways"
8519,Remove timeout and call to Fatal from goroutine (#7797),
8520,update changelog,
8521,test: make auth method cli crud test work in both oss and ent (#7800),
8522,Add a check for custom host to ingress TLS integration test,
8523,Add TLS field to ingress API structs, Adds test in api and command/config/write packages
8524,Add test for adding DNSSAN for ConnectCALeaf cache type,
8525,Add TLS integration test for ingress gateway, Pull Consul Root CA from API in order to verify certificate chain Assert on the DNSSAN as well to ensure it is correct
8526,Validate hosts input in ingress gateway config entry,"We can only allow host names that are valid domain names because we put these hosts into a DNSSAN. In addition, we validate that the wildcard specifier '*' is only present as the leftmost label to allow for a wildcard DNSSAN and associated wildcard Host routing in the ingress gateway proxy."
8527,Add TLS option and DNS SAN support to ingress config,xds: Only set TLS context for ingress listener when requested
8528,test: make auth method cli crud test helper ignore the default namespace (#7799),
8529,Merge pull request #7678 from hashicorp/ingress/host-header-routing,Allow ingress gateways to route traffic based on Host header
8530,A proxy-default config entry only exists in the default namespace,
8531,Correctly set a namespace label in the required domain for xds routes,"If an upstream is not in the default namespace, we expect DNS requests to be served over "".ingress..*"""
8532,Remove outdated comment,
8533,Better document wildcard specifier interactions,
8534,Re-add comment on connect-proxy virtual hosts,
8535,Make sure IngressHosts isn't parsed during JSON decode,
8536,Comment why it is ok to expect upstreams slice to not be empty,
8537,xds: Use only the port number as the configured route name,This removes duplication of protocol from the stats_prefix
8538,Filter wildcard gateway services to match listener protocol,"This now requires some type of protocol setting in ingress gateway tests to ensure the services are not filtered out.  small refactor to add a max(x, y) function Use internal configEntryTxn function and add MaxUint64 to lib"
8539,Allow Hosts field to be set on an ingress config entry, Validate that this cannot be set on a 'tcp' listener nor on a wildcard service. Add Hosts field to api and test in consul config write CLI xds: Configure envoy with user-provided hosts from ingress gateways
8540,Remove service_subset field from ingress config entry,"We decided that this was not a useful MVP feature, and just added unnecessary complexity"
8541,Support multiple listeners referencing the same service in gateway definitions,
8542,Allow ingress gateways to route traffic based on Host header,"This commit adds the necessary changes to allow an ingress gateway to route traffic from a single defined port to multiple different upstream services in the Consul mesh. To do this, we now require all HTTP requests coming into the ingress gateway to specify a Host header that matches "".*"" in order to correctly route traffic to the correct service.  Differentiate multiple listener's route names by port Adds a case in xds for allowing default discovery chains to create a   route configuration when on an ingress gateway. This allows default   services to easily use host header routing ingress-gateways have a single route config for each listener   that utilizes domain matching to route to different services."
8543,acl: oss plumbing to support auth method namespace rules in enterprise (#7794),This includes website docs updates.
8544,Merge pull request #7792 from hashicorp/changelog-fixup,Remove duplicated entries in CHANGELOG.md
8545,Remove duplicated entries in CHANGELOG.md,Remove some duplicated entries in the unreleased section of the changelog that were released in  1.7.3
8546,Update CHANGELOG.md,
8547,Merge pull request #7724 from hashicorp/helm-repo,Update k8s instructions for new helm repo
8548,test: make the kube auth method test helper use freeport (#7788),
8549,segments: oss changes for enterprise network area changes (#7786),OSS code changes for network segments
8550,network_segments: stop advertising segment tags,
8551,agent: refactor to use a single addrFn,
8552,agent: rename local/global to src/dst,
8553,Update CHANGELOG.md,
8554,Construct a default destination if one does not exist for service-router (#7783),
8555,Update CHANGELOG.md,
8556,Update CHANGELOG.md,
8557,vendor: revert golang.org/x/sys bump to avoid FreeBSD regression (#7780),
8558,docs: add Helm docs for external servers and bootstrapToken (#7725),
8559,update changelog,
8560,acl: add MaxTokenTTL field to auth methods (#7779),When set to a non zero value it will limit the ExpirationTime of all tokens created via the auth method.
8561,Update CHANGELOG.md,
8562,"cli: Add -config flag to ""acl authmethod update/create"" (#7776)",
8563,update changelog,
8564,acl: add DisplayName field to auth methods (#7769),Also add a few missing acl fields in the api.
8565,vendor: fix case issue (#7777),
8566,agent: don't let left nodes hold onto their node-id (#7747),
8567,Merge pull request #7714 from hashicorp/oss-sync/msp-agent-token,
8568,Update go-discover dependency (#7731),
8569,Update enterprise configurations to be in OSS,"This will emit warnings about the configs not doing anything but still allow them to be parsed. This also added the warnings for enterprise fields that we already had in OSS but didn’t change their enforcement behavior. For example, attempting to use a network segment will cause a hard error in OSS."
8570,acl: refactor the authmethod.Validator interface (#7760),"This is a collection of refactors that make upcoming PRs easier to digest. The main change is the introduction of the authmethod.Identity struct. In the one and only current auth method (type=kubernetes) all of the trusted identity attributes are both selectable and projectable, so they were just passed around as a map[string]string. When namespaces were added, this was slightly changed so that the enterprise metadata can also come back from the login operation, so login now returned two fields. Now with some upcoming auth methods it won't be true that all identity attributes will be both selectable and projectable, so rather than update the login function to return 3 pieces of data it seemed worth it to wrap those fields up and give them a proper name."
8571,update changelog,
8572,acl: change authmethod.Validator to take a logger (#7758),
8573,test: move some test helpers over from enterprise (#7754),
8574,docs: add docs for snapshot agent local_scratch_path option (#7730),Also fix some website upgrade bugs.
8575,"Adding redirect to discuss, moving question to old (#7732)",
8576,sdk: extracting testutil.RequireErrorContains from various places it was duplicated (#7753),
8577,rpc: oss changes for network area connection pooling (#7735),
8578,fix multiline note (#7744),
8579,Update k8s instructions for new helm repo,Also remove index page for operations since it just linked to the other pages in the list.
8580,ui: Fix using 'ui-like' KVs when using an empty default nspace (#7734),"When using namespaces, the 'default' namespace is a little special in that we wanted the option for all our URLs to stay the same when using namespaces if you are using the default namespace, with the option of also being able to explicitly specify ~default as a namespace. In other words both ui/services/service-name and ui/~default/services/service-name show the same thing. This means that if you switch between OSS and Enterprise, all of your URLs stay the same, but you can still specifically link to the default namespace itself. Our routing configuration is duplicated in order to achieve this: - :dc   - :service   - :kv     - :edit - :nspace   - :dc     - :service     - :kv       - :edit Secondly, ember routing resolves/matches routes in the order that you specify them, unless, its seems, when using wildcard routes, like we do in the KV area. When not using the wildcard routes the above routing configuration resolves/matches a /dc-1/kv/service to the dc.kv.edit route correctly (dc:dc-1, kv:services), that route having been configured in a higher priority than the nspace routes. However when configured with wildcards (required in the KV area), note the asterisk below: - :dc     :service   - :kv     - *edit - :nspace   - :dc     - :service     - :kv       - *edit Given something like /dc-1/kv/services the router instead matches the nspace.dc.service (nspace:dc-1, dc:kv, service:services) route first even though the dc.kv.edit route should still match first. Changing the dc.kv.edit route back to use a non-wildcard route (:edit instead of *edit), returns the router to match the routes in the correct order. In order to work around this, we catch any incorrectly matched routes (those being directed to the nspace Route but not having a ~ character in the nspace parameter), and then recalculate the correct route name and parameters. Lastly we use this recalculated route to direct the user/app to the correct route. This route recalcation requires walking up the route to gather up all of the required route parameters, and although this feels like something that could already exist in ember, it doesn't seem to. We had already done a lot of this work a while ago when implementing our href-mut helper. This commit therefore repurposes that work slighlty and externalizes it outside of the helper itself into a more usable util so we can import it where we need it. Tests have been added before refactoring it down to make the code easier to follow."
8581,Watch fallback channel for gateways that do not exist (#7715),"Also ensure that WatchSets in tests are reset between calls to watchFired.  Any time a watch fires, subsequent calls to watchFired on the same WatchSet will also return true even if there were no changes."
8582,Update CHANGELOG.md,
8583,docs: add Helm docs for external servers and bootstrapToken (#7725),"Also, backfill some Helm docs that got lost in the new website merge"
8584,disable stable-website auto cherry-pick until replatform is merged into stable-website (#7726),
8585,Merge pull request #7610 from hashicorp/je.new-website,New Documentation Website
8586,use environment variables in website-docker-image for website docker image push,
8587,dependencies,
8588,Fix broken markdown link,
8589,update dependencies,
8590,remove guides from sidebar,
8591,Add callouts to Enterprise features (#7548),Label all enterprise-related content with Enterprise badge/callout. Resolves #6887 Co-authored-by: Jeff Escalante jescalan@users.noreply.github.com
8592,update dependencies,
8593,update deps with a bunch of incremental fixes,
8594,[Docs] Kuberentes Guides (#7660),  Update k8s guide titles   Update website/pages/docs/k8s/installation/gke.mdx   Co-Authored-By: Luke Kysow 1034429+lkysow@users.noreply.github.com Co-authored-by: Luke Kysow 1034429+lkysow@users.noreply.github.com
8595,correct rebased k8s/eks location,
8596,anchor link analytics (#7648),
8597,add clearer safe write note to readme,
8598,add 301 to readme,
8599,circle docker image config,
8600,a couple more anchor link fixes,
8601,misc cleanup & fixes,
8602,update meta description,
8603,"update deps, add no-index category, fix downloads page",
8604,fix broken links,
8605,"fix homepage link, docs index",
8606,remove guides that were moved to learn,
8607,"add k8s/consul alias back, fix react prop name",
8608,remove 'sidebar_current' from frontmatter,
8609,home & use case pages,
8610,one more time,
8611,test,
8612,update to latest nextjs-scripts,
8613,fix new syntax error,
8614,"update deps, fixes for agent/options",
8615,add correct bugsnag and segment keys,
8616,another redirect fix,
8617,redirect corrections,
8618,redirect tinkering,
8619,add more redirects,
8620,replace internal .html link extensions,
8621,remove internal /index.html,
8622,add redirects,
8623,add one-off pages,
8624,remove export trailing slash,
8625,redirects port,
8626,correct favicon,
8627,anchor link fixes across a lot of pages,
8628,docs rendering,
8629,intro and api navigation converted,
8630,initial,
8631,Merge pull request #7716 from hashicorp/mw.add-alert-banner,website: add alert banner
8632,Update with proper notification,
8633,Updates to allow for using an enterprise specific token as the agents token,This is needed to allow for managed Consul instances to register themselves in the catalog with one of the managed service provider tokens.
8634,Some boilerplate to allow for ACL Bootstrap disabling configurability,
8635,Update mapstructure to v1.2.3,This release contains a fix to prevent duplicate keys in the Metadata after decoding where the output value contains pointer fields.
8636,website: add alert banner,
8637,TLS Origination for Terminating Gateways (#7671),
8638,Terminating Gateways Proxy Configuration (#7631),
8639,update changelog,
8640,update changelog,
8641,Remove fallthrough,
8642,Add authz filter when creating filterchain,
8643,Fix snapshot IsEmpty,
8644,"Clean up dead code, issue addressed by passing ws to serviceGatewayNodes",
8645,Update agent/proxycfg/state_test.go,
8646,PR comments,
8647,Fix internal endpoint test,
8648,Fix listener error handling,
8649,Skip filter chain creation if no client cert,
8650,Avoid deleting mappings for services linked to other gateways on dereg,
8651,Re-fix bug in CheckConnectServiceNodes,
8652,Use golden files for gateway certs and fix listener test flakiness,
8653,Un-nest switch in gateway update handler,
8654,Add envoy integration tests,
8655,Allow terminating-gateway to setup listener before servicegroups are known,
8656,Add subset support,
8657,Fix ConnectQueryBlocking test,
8658,Fix bug in CheckConnectServiceNodes,"Previously, if a blocking query called CheckConnectServiceNodes before the gateway-services memdb table had any entries, a nil watchCh would be returned when calling serviceTerminatingGatewayNodes. This means that the blocking query would not fire if a gateway config entry was added after the watch started. In cases where the blocking query started on proxy registration, the proxy could potentially never become aware of an upstream endpoint if that upstream was going to be represented by a gateway."
8659,Add xds cluster/listener/endpoint management,
8660,Add proxycfg state management for terminating-gateways,
8661,Require service:read to read terminating-gateway config,
8662,A couple testing helper updates (#7694),
8663,update changelog,
8664,cli: ensure that 'snapshot save' is fsync safe and also only writes to the requested file on success (#7698),
8665,update changelog,
8666,cli: fix usage of gzip.Reader to better detect corrupt snapshots during save/restore (#7697),
8667,Merge pull request #7699 from pierresouchay/fix_comment_misplaced,Fixed comment on wrong line
8668,Merge pull request #7677 from hashicorp/ingress/http-routing,Ingress gateways support discovery chain features and routing via mesh gateways Signed-off-by: Kyle Havlovitz kylehav@gmail.com
8669,Allow ingress gateways to route through mesh gateways, Adds integration test for mesh gateways local + remote modes with ingress ingress golden files updated for mesh gateway endpoints
8670,Add all the xds ingress tests,This commit copies many of the connect-proxy xds testcases and reuses for ingress gateways. This allows us to more easily see changes to the envoy configuration when make updates to ingress gateways.
8671,Pull out setupTestVariationConfigEntriesAndSnapshot in proxycfg,This allows us to reuse the same variations for ingress gateway testing
8672,Add http routing support and integration test to ingress gateways,
8673,"auto_encrypt: add validations for auto_encrypt.{tls,allow_tls} (#7704)",Fixes https://github.com/hashicorp/consul/issues/7407.
8674,Fixed comment on wrong line.,"While investigating and fixing an issue on our 1.5.1 branch, I saw you also/already fixed the bug I found (tags not updated for existing servers), but comment is misplaced."
8675,Fix check deletion in anti-entropy sync (#7690), Incorporate entMeta into service equality check
8676,Remove deadcode,"This UnmarshalJSON was never called. The decode function is passed a map[string]interface so it has no way of knowing that this function exists. Tested by adding a panic to this function and watching the tests pass. I attempted to use this Unmarshal function by passing in the type, however the tests showed that it does not work. The test was failing to parse the request. If the performance of this endpoint is indeed critical we can solve the problem by adding all the fields to the request struct and handling the normalziation without a custom Unmarshal."
8677,agent: remove deadcode that called lib.TranslateKeys,Move the last remaining function from agent/config.go to the one place it was called.
8678,Merge pull request #7680 from hashicorp/dnephin/upgrade-gotestsum,ci: Upgrade gotestsum to v0.4.2
8679,Upgrade gotestsum to latest,0.4.2 should fix some bugs in test2json causing missing output.
8680,"netlify CLI outputs ""Website Draft URL"" now instead of ""Live Draft URL"" (#7676)",
8681,Expect default enterprise metadata in gateway tests (#7664),"This makes it so that both OSS and enterprise tests pass correctly In the api tests, explicitly set namespace to empty string so that tests can be shared."
8682,Relates to #7447,This PR will allow consul to throw log error if provided log directory has permission issues for writing or is non existent. Signed-off-by: Deepjyoti Mondal djmdeveloper060796@gmail.com
8683,Merge pull request #7665 from hashicorp/refactor/http/parseTokenWithDefault,http: rename paresTokenResolveProxy to parseTokenWithDefault
8684,http: rename paresTokenResolveProxy to parseTokenWithDefault,
8685,Merge pull request #7656 from hashicorp/feature/audit/oss-merge,agent: stub out auditing functionality in OSS
8686,"agent,config: port enterprise only fields to embedded enterprise structs",
8687,Merge pull request #7641 from hashicorp/dnephin/agent-cache-request-info,agent/cache: reduce function arguments by removing duplicates
8688,Update API module to include the licensed modules in its output (#7661),
8689,Fix bug where non-typical services are associated with gateways (#7662),"On every service registration, we check to see if a service should be assassociated to a wildcard gateway-service. This fixes an issue where we did not correctly check to see if the service being registered was a ""typical"" service or not."
8690,agent/cache: remove error return from fetch,"A previous change removed the only error, so the return value can be removed now."
8691,agent/cache: reduce function arguments by removing duplicates,"A few of the unexported functions in agent/cache took a large number of arguments. These arguments were effectively overrides for values that were provided in RequestInfo. By using a struct we can not only reduce the number of arguments, but also simplify the logic by removing the need for overrides."
8692,Merge pull request #7647 from hashicorp/dnephin/agent-cache-register-opts,agent/cache: Make all cache options RegisterOptions
8693,config/runtime: fix an extra field in config sanitize,
8694,agent/cache: Make all cache options RegisterOptions,"Previously the SupportsBlocking option was specified by a method on the type, and all the other options were specified from RegisterOptions. This change moves RegisterOptions to a method on the type, and moves SupportsBlocking into the options struct. Currently there are only 2 cache-types. So all cache-types can implement this method by embedding a struct with those predefined values. In the future if a cache type needs to be registered more than once with different options it can remove the embedded type and implement the method in a way that allows for paramaterization."
8695,agent: stub out auditing functionality in OSS,
8696,Ingress Gateways for TCP services (#7509)," Implements a simple, tcp ingress gateway workflow  This adds a new type of gateway for allowing Ingress traffic into Connect from external services. Co-authored-by: Chris Piraino cpiraino@hashicorp.com"
8697,Merge pull request #7650 from hashicorp/dnephin/remove-id-init-methods,agent/structs: Remove ServiceID.Init and CheckID.Init
8698,Adding links to new GS track in learn (#7649), Adding links to new GS track in learn
8699,Merge pull request #7652 from hashicorp/dnephin/update-joyent-dep,Update github.com/joyent/triton-go to latest
8700,Update github.com/joyent/triton-go to latest,There was an RSA private key used for testing included in the old version. This commit updates it to a version that does not include the key so that the key is not detected by tools which scan the Consul binary for private keys. Commands run: go get github.com/joyent/triton-go@6801d15b779f042cfd821c8a41ef80fc33af9d47 make update-vendor
8701,agent/structs: Remove ServiceID.Init and CheckID.Init,"The Init method provided the same functionality as the New constructor. The constructor is both more widely used, and more idiomatic, so remove the Init method. This change is in preparation for fixing printing of these IDs."
8702,add DNSSAN and IPSAN to cache key (#7597),
8703,ui: Lazily detect HTTP protocol (#7644),"This commit includes 2 things:   Sometimes (seemingly due to client caching), performance entries aren't available, even for the currently executing script. This waits until the first retrieval of 'CONSUL_HTTP_PROTOCOL' before using the performance entries to decide this. This means that the entries aren't inspected until ember has initialized, which means that the entries are always available.   getCurrentResource/getResourceFor could potentially return undefined if the correct entry could not be found. This adds a default {} return value if the resource cannot be found. This means that if for whatever reason the correct resource cannot be found at least we don't fail with an error and just drop back to HTTP/1 functionality. "
8704,Update CHANGELOG.md,
8705,Add 1.6.5,
8706,Merge pull request #7638 from pierresouchay/fix_unstable_assert_alive_wan_member_count,More tolerant assert_alive_wan_member_count to fix unstable tests
8707,Update CHANGELOG.md,
8708,Update CHANGELOG.md,
8709,Update the Client code to use the common version checking infra… (#7558),Also reduce the log level of some version checking messages on the server as they can be pretty noisy during upgrades and really are more for debugging purposes.
8710,Allow the bootstrap endpoint to be disabled in enterprise. (#7614),
8711,Consul on Kubernetes Learn Guide Links (#7642), Adding EKS Learn Guide to Docs
8712,Add support for ingress-gateway in CLI command (#7618),  Add support for ingress-gateway in CLI command   Supports -register command  Creates a static Envoy listener that exposes only the /ready API so that we can register a TCP healthcheck against the ingress gateway itself Updates ServiceAddressValue.String() to be more in line with Value()
8713,docs: Link to compatibility matrix for imageEnvoy (#7387), docs: Link to compatibility matrix for imageEnvoy  Added a link to the Envoy supported version in the documentation for imageEnvoy parameter.  Update website/source/docs/platform/k8s/helm.html.md
8714,Merge pull request #7585 from hashicorp/dnephin/agent-cache,agent/cache: Small changes to hopefully improve readability
8715,Remove TTL from cacheEntryExpiry,"This should very slightly reduce the amount of memory required to store each item in the cache. It will also enable setting different TTLs based on the type of result. For example we may want to use a shorter TTL when the result indicates the resource does not exist, as storing these types of records could easily lead to a DOS caused by OOM."
8716,agent/cache: Reduce differences between notify implementations,"These two notify functions are very similar. There appear to be just enough differences that trying to parameterize the differences may not improve things. For now, reduce some of the cosmetic differences so that the material differences are more obvious."
8717,agent/cache: Inline the refresh function to make recursion more obvious,"fetch is already an exceptionally long function, but hiding the recrusion in a function call likely does not help."
8718,agent/cache: Make the return values of getEntryLocked more obvious,"Use named returned so that the caller has a better idea of what these bools mean. Return early to reduce the scope, and make it more obvious what values are returned in which cases. Also reduces the number of conditional expressions in each case."
8719,Merge pull request #7639 from hashicorp/dnephin/fix-master,Fix test failing on master
8720,Fix golden file for envoy tests,"The envoy version was updated after the PR which added this test was opened, and merged before the test was merged, so it ended up with the wrong version."
8721,agent/cache: Small formatting improvements to improve readability,Remove Cache.entryKey which called a single function. Format multiline struct creation one field per line.
8722,Remove SnapshotRPC passthrough,"The caller has access to the delegate, so we do not gain anything by wrapping the call in Agent."
8723,Merge pull request #7608 from hashicorp/dnephin/grpc-default-scheme,command/envoy: enable TLS when CONSUL_HTTP_ADDR=https://...
8724,Merge pull request #7596 from hashicorp/dnephin/agent-cache-type-entry,agent/cache: move typeEntry lookup to the edge
8725,Update CHANGELOG.md,
8726,More tolerant assert_alive_wan_member_count to fix unstable tests,Example of failure (very frequent): https://circleci.com/gh/hashicorp/consul/157985
8727,fix flaky TestReplication_FederationStates test due to race conditions (#7612),"The test had two racy bugs related to memdb references. The first was when we initially populated data and retained the FederationState objects in a slice. Due to how the inmemCodec works these were actually the identical objects passed into memdb. The second was that the checkSame assertion function was reading from memdb and setting the RaftIndexes to zeros to aid in equality checks. This was mutating the contents of memdb which is a no-no. With this fix, the command: i=0; while /usr/local/bin/go test -count=1 -timeout 30s github.com/hashicorp/consul/agent/consul -run '^(TestReplication_FederationStates)$'; do i=$((i + 1)); printf ""$i ""; done That used to break on my machine in less than 20 runs is now running 150+ times without any issue. Might also fix #7575"
8728,docs: document consulPrefix properly (#7603),
8729,Adding API version for example call (#7626),
8730,connect: support envoy 1.14.1 (#7624),
8731,tests: change default http_max_conns_per_client to 250 to ease tests (#7625),"On recent Mac OS versions, the ulimit defaults to 256 by default, but many systems (eg: some Linux distributions) often limit this value to 1024. On validation of configuration, Consul now validates that the number of allowed files descriptors is bigger than http_max_conns_per_client. This make some unit tests failing on Mac OS. Use a less important value in unit test, so tests runs well by default on Mac OS without need for tuning the OS."
8732,docs: Fix broken link to Nomad Consul Connect guide,
8733,Terminating gateway discovery (#7571),  Enable discovering terminating gateways   Add TerminatingGatewayServices to state store   Use GatewayServices RPC endpoint for ingress/terminating 
8734,Add decode rules for Expose cfg in service-defaults (#7611),
8735,Fix CONSUL_HTTP_ADDR=https not enabling TLS,Use the config instead of attempting to reparse the env var.
8736,Step 3: fix a bug in api.NewClient and fix the tests,"The api client should never rever to HTTP if the user explicitly requested TLS. This change broke some tests because the tests always use an non-TLS http server, but some tests explicitly enable TLS."
8737,docs: Add Helm docs for auto-encrypt and external servers (#7595), docs: Add Helm docs for auto-encrypt and external servers
8738,Merge pull request #7586 from hashicorp/helm-docs,Document bootstrapACLs deprecation
8739,Step 2: extract the grpc address logic and a new type,The new grpcAddress function contains all of the logic to translate the command line options into the values used in the template. The new type has two advantages.  It introduces a logical grouping of values in the BootstrapTplArgs    struct which is exceptionally large. This grouping makes the struct    easier to understand because each set of nested values can be seen    as a single entity. It gives us a reasonable return value for this new function.
8740,Step 1: move all the grpcAddr logic into the same spot,There is no reason a reader should have to jump around to find this value. It is only used in 1 place
8741,filter out non go branches from the 'go-tests' workflow (#7606),
8742,Update CHANGELOG.md,
8743,Enable filtering language support for the v1/connect/intentions… (#7593),  Enable filtering language support for the v1/connect/intentions listing API   Update website for filtering of Intentions   Update website/source/api/connect/intentions.html.md 
8744,Merge pull request #7598 from pierresouchay/preallocation_of_dns_meta,Pre-allocations of DNS meta to avoid several allocations
8745,Update website/source/docs/platform/k8s/helm.html.md,Co-Authored-By: Iryna Shustava ishustava@users.noreply.github.com
8746,[LINT] Close resp.Body to avoid linter complaining (#7600),
8747,Pre-allocations of DNS meta to avoid several allocations,
8748,"Change style to match ""join"" singular (#7569)","  Change style to match ""join"" singular   Replaced ""(Consul) cluster"" with  ""Consul Datacenter""  Removed ""ing"" so the feature fits ""Consul Auto-join"", and that the tense is correct.  Co-authored-by: danielehc 40759828+danielehc@users.noreply.github.com"
8749,agent/cache: move typeEntry lookup to the edge,"This change moves all the typeEntry lookups to the first step in the exported methods, and makes unexporter internals accept the typeEntry struct. This change is primarily intended to make it easier to extract the container of caches from the Cache type. It may incidentally reduce locking in fetch, but that was not a goal."
8750,[docs] Built-in Proxies not meant for production (#7579),  [docs] Built-in Proxies not meant for production   Adding link to Envoy for Connect   Update website/source/docs/connect/proxies/built-in.md   Co-Authored-By: Blake Covarrubias blake@covarrubi.as   Revising note   Update website/source/docs/connect/proxies/built-in.md   period Co-Authored-By: Hans Hasselberg me@hans.io Co-authored-by: Blake Covarrubias blake@covarrubi.as Co-authored-by: Hans Hasselberg me@hans.io
8751,Merge pull request #7589 from pierresouchay/fix_unstable_test_TestForwardSignals,Fixed unstable test TestForwardSignals()
8752,Fixed unstable test TestForwardSignals(),"Sometimes, in the CI, it could receive a SIGURG, producing this line: FAIL: TestForwardSignals/signal-interrupt (0.06s)         util_test.go:286: expected to read line ""signal: interrupt"" but got ""signal: urgent I/O condition"" Only forward the signals we test to avoid this kind of false positive Example of such unstable errors in CI: https://circleci.com/gh/hashicorp/consul/153571"
8753,tests: more tolerance to latency for unstable test TestCacheNotifyPolling(). (#7574),
8754,Document bootstrapACLs deprecation,
8755,Fix regression with gateway registration and update docs (#7582),
8756,Ensure that token clone copies the roles (#7577),
8757,Update CHANGELOG.md,
8758,Fix flapping of mesh gateway connect-service watches (#7575),
8759,agent: show warning when enable_script_checks is enabled without safty net (#7437),"In order to enforce a bit security on Consul agents, add a new method in agent to highlight possible security issues. This does not return an error for now, but might in the future. For now, it detects issues such as: https://www.hashicorp.com/blog/protecting-consul-from-rce-risk-in-specific-configurations/ This would display this kind of messages: 2020-03-11T18:27:49.873+0100 [ERROR] agent: [SECURITY] issue: error=""using enable-script-checks without ACLs and without allow_write_http_from is DANGEROUS, use enable-local-script-checks instead see https://www.hashicorp.com/blog/protecting-consul-from-rce-risk-in-specific-configurations/"""
8760,"agent: rewrite checks with proxy address, not local service address (#7518)","Exposing checks is supposed to allow a Consul agent bound to a different IP address (e.g., in a different Kubernetes pod) to access healthchecks through the proxy while the underlying service binds to localhost. This is an important security feature that makes sure no external traffic reaches the service except through the proxy. However, as far as I can tell, this is subtly broken in the case where the Consul agent cannot reach the proxy over localhost. If a proxy is configured with: { LocalServiceAddress: ""127.0.0.1"", Checks: true }, as is typical with a sidecar proxy, the Consul checks are currently rewritten to 127.0.0.1:<random port>. A Consul agent that does not share the loopback address cannot reach this address. Just to make sure I was not misunderstanding, I tried configuring the proxy with { LocalServiceAddress: ""<pod ip>"", Checks: true }. In this case, while the checks are rewritten as expected and the agent can reach the dynamic port, the proxy can no longer reach its backend because the traffic is no longer on the loopback interface. I think rewriting the checks to use proxy.Address, the proxy's own address, is more correct in this case. That is the IP where the proxy can be reached, both by other proxies and by a Consul agent running on a different IP. The local service address should continue to use 127.0.0.1 in most cases."
8761,proxycfg: support path exposed with non-HTTP2 protocol (#7510),"If a proxied service is a gRPC or HTTP2 service, but a path is exposed using the HTTP1 or TCP protocol, Envoy should not be configured with http2ProtocolOptions for the cluster backing the path. A situation where this comes up is a gRPC service whose healthcheck or metrics route (e.g. for Prometheus) is an HTTP1 service running on a different port. Previously, if these were exposed either using Expose: { Checks: true } or Expose: { Paths: ... }, Envoy would still be configured to communicate with the path over HTTP2, which would not work properly."
8762,config: validate system limits against limits.http_max_conns_per_client (#7434),"I spent some time today on my local Mac to figure out why Consul 1.6.3+ was not accepting limits.http_max_conns_per_client. This adds an explicit check on number of file descriptors to be sure it might work (this is no guarantee as if many clients are reaching the agent, it might consume even more file descriptors) Anyway, many users are fighting with RLIMIT_NOFILE, having a clear message would allow them to figure out what to fix. Example of message (reload or start): 2020-03-11T16:38:37.062+0100 [ERROR] agent: Error starting agent: error=""system allows a max of 512 file descriptors, but limits.http_max_conns_per_client: 8192 needs at least 8212"""
8763,Merge pull request #7572 from hashicorp/dnephin/ci-fix-go-mod-download,ci: Fix working_directory for go mod download
8764,ci: Fix working_directory for go mod download,"The previous PR which added these was accidentally performing the download in the root directory. For the api, and sdk directories it should be in done in the same directory that will be used to run tests. Otherwise the wrong dependencies will be downloaded which may add unnecessary time to the CI run."
8765,docs: document exported functions in agent.go (closes #7101) (#7366),and fix one linter error
8766,update changelog,
8767,[BUGFIX] Fix race condition in freeport (#7567),"This removes a race condition in reset since pendingPorts can be set to nil in reset() If ticker is hit at wrong time, it would crash the unit test. We ensure in reset to avoid this race condition by cancelling the goroutine using killTicker chan. We also properly clean up eveything, so garbage collector can work as expected. To reproduce existing bug: while go test -timeout 30s github.com/hashicorp/consul/sdk/freeport -run '^(Test.*)$'; do go clean -testcache; done Will crash after a few 10s runs on my machine. Error could be seen in unit tests sometimes: [INFO] freeport: resetting the freeport package state panic: runtime error: invalid memory address or nil pointer dereference [signal SIGSEGV: segmentation violation code=0x1 addr=0x28 pc=0x1125536] goroutine 25 [running]: container/list.(*List).Len(...)     /usr/local/Cellar/go/1.14/libexec/src/container/list/list.go:66 github.com/hashicorp/consul/sdk/freeport.checkFreedPortsOnce()     /Users/p.souchay/go/src/github.com/hashicorp/consul/sdk/freeport/freeport.go:157 +0x86 github.com/hashicorp/consul/sdk/freeport.checkFreedPorts()     /Users/p.souchay/go/src/github.com/hashicorp/consul/sdk/freeport/freeport.go:147 +0x71 created by github.com/hashicorp/consul/sdk/freeport.initialize     /Users/p.souchay/go/src/github.com/hashicorp/consul/sdk/freeport/freeport.go:113 +0x2cf FAIL    github.com/hashicorp/consul/sdk/freeport    1.607s"
8768,Merge pull request #7570 from pierresouchay/fix_lint_upstream_due_to_change_args_in_NewTestAgent,[FIX BUILD] fix build due to merge of #7562
8769,[FIX BUILD] fix build due to merge of #7562,"Due to merge #7562, upstream does not compile anymore. Error is: ERRO Running error: gofmt: analysis skipped: errors in package: [/Users/p.souchay/go/src/github.com/hashicorp/consul/agent/config_endpoint_test.go:188:33: too many arguments]"
8770,Merge pull request #7562 from hashicorp/dnephin/remove-tname-from-name,testing: Remove old default value from NewTestAgent() calls
8771,Merge pull request #7427 from hashicorp/dnephin/website-fix-errrors-in-upgrade-docs,docs: fix some errors in upgrade-specific
8772,Merge pull request #7465 from hashicorp/dnephin/correct-docs-log-file,docs: Update config reference for log-file
8773,Merge pull request #7519 from hashicorp/dnephin/help-to-stdout,cli: send requested help text to stdout
8774,Merge pull request #7533 from hashicorp/dnephin/xds-server-1,agent/xds: small cleanup
8775,"docs: revert ""docs: fix param for register checks id->checkid (#7393)"" (#7565)",This reverts commit ed5202943e43d054e31e958ff0178473974e4015.
8776,docs: fix param for register checks id->checkid (#7393),
8777,ui: Fix token duplication bug (#7552),"We need to detect whether an object is an ember-data snapshot or just a plain object, and we where restricted from using instanceof due to ember-data's Snapshot class being private. We'd chosen to go with constructor.name instead, which seemed to work, but when the javascript gets minifed the name of the contructor is also minified and therefore is not what you are expecting. This commit reverts to our original idea of checking for the existence and type of the .attributes function, which is the function we require within the conditional, and therefore is more reliable (if the function doesn't exist it will error out during development aswell as production)"
8778,"agent: add len, cap while initializing arrays",
8779,tests: fixed unstable test TestAPI_AgentMonitor (#7561),Similar fix as https://github.com/hashicorp/consul/pull/7541
8780,Rename NewTestAgentWithFields to StartTestAgent,"This function now only starts the agent. Using: git grep -l 'StartTestAgent(t, true,' | \         xargs sed -i -e 's/StartTestAgent(t, true,/StartTestAgent(t,/g'"
8781,Convert the remaining calls to NewTestAgentWithFields,"After removing the t.Name() parameter with sed, convert the last few tests which use a custom name to call NewTestAgentWithFields instead."
8782,Merge pull request #7557 from hashicorp/dnephin/ci-small-improvements,ci: Upload coverage from each job
8783,Merge pull request #7470 from hashicorp/dnephin/dns-unused-params,dns: Remove a few unused function parameters
8784,docs: make example code for RedundancyZoneTag match description (#7464),
8785,config: allow running consul agent -dev -ui-dir=some_path (#7525),"When run in with -dev in DevMode, it is not possible to replace the embeded UI with another one because -dev implies -ui. This commit allows this an slightly change the error message about Consul 0.7.0 which is very old and does not apply to current version anyway."
8786,docs: add link to Learn from downloads page (#7534),Adds a link to Learn from the downloads page as well as a link to the Consul Template guide.
8787,tests: fixed bats warning (#7544),"This fixes this bats warning: duplicate test name(s) in /workdir/primary/bats/verify.bats: test_s1_upstream_made_1_connection Test was already defined at line 42, rename it to avoid test name duplication"
8788,Remove name from NewTestAgent,"Using: git grep -l 'NewTestAgent(t, t.Name(),' | \     xargs sed -i -e 's/NewTestAgent(t, t.Name(),/NewTestAgent(t,/g'"
8789,Add config entry for terminating gateways (#7545),"This config entry will be used to configure terminating gateways. It accepts the name of the gateway and a list of services the gateway will represent. For each service users will be able to specify: its name, namespace, and additional options for TLS origination. Co-authored-by: Kyle Havlovitz kylehav@gmail.com Co-authored-by: Chris Piraino cpiraino@hashicorp.com"
8790,Upload coverage from each job,Allows us to remove the merge coverage report step
8791,Add config entry/state for Ingress Gateways (#7483),  Add Ingress gateway config entry and other relevant structs   Add api package tests for ingress gateways   Embed EnterpriseMeta into ingress service struct   Add namespace fields to api module and test consul config write decoding   Don't require a port for ingress gateways   Add snakeJSON and camelJSON cases in command test   Run Normalize on service's ent metadata   Sadly cannot think of a way to test this in OSS.   Every protocol requires at least 1 service   Validate ingress protocols   Update agent/structs/config_entry_gateways.go   Co-authored-by: Chris Piraino cpiraino@hashicorp.com Co-authored-by: Freddy freddygv@users.noreply.github.com
8792,Merge pull request #7555 from hashicorp/dnephin/ci-small-improvements,ci: small improvements
8793,ci: Increase GOMAXPROCS so that the tests run faster,
8794,ci: small improvements,"Run 'go mod download' first so that dependencies are pulled in a separate step. This makes the test splitting and test output easier to scroll through. Remove test splitting from the api/sdk test runs. These jobs do not use parallelism, so there is no test timing data injected into the job. They can't be split. Remove the dependencies from the go-test job, so that we can start the slowest test job earlier in the workflow."
8795,Merge pull request #7485 from hashicorp/dnephin/do-not-skip-tests-on-ci,"ci: Make it harder to accidentally skip tests on CI, and doc why some are skipped"
8796,Merge pull request #7546 from hashicorp/dnephin/logging-in-tests,testing: Improve logging from TestAgent
8797,"ui: Use the each key="""" parameter to force ember to reuse DOM (#7550)","Ember tries to reuse DOM elements when it can but as ember looks for changes to objects rather than the DOM itself sometimes. This and the fact that an objects identity may change even though its value hasn't, results in ember occasionally re-mutating DOM when it doesn't need to. The each helper includes a key attribute to hint to ember what it should look for when deciding whether something has changed, rather than the objects identity. https://api.emberjs.com/ember/release/classes/Ember.Templates.helpers/methods/each#specifying-keys We use this here to fix an issue where DOM was being redrawn after the user had scrolled the page and was therefore resetting the scroll back to 0 (the top of the page)"
8798,Remove t.Name() from TestAgent.Name,And re-add the name to the logger so that log messages from different agents in a single can be identified.
8799,Updated Security Model and FAQ pages (#7528), Updated Security Model and FAQ pages
8800,Document Agent.LogOutput,
8801,FIX flaky test: TestAPI_AgentMonitorJSON,
8802,command: remove unused logOutput field,
8803,testing: reduce verbosity of output log,"Previously the log output included the test name twice and a long date format. The test output is already grouped by test, so adding the test name did not add any new information. The date and time are only useful to understand elapsed time, so using a short format should provide succident detail. Also fixed a bug in NewTestAgentWithFields where nil was returned instead of the test agent."
8804,ui: Ensure blocking query configuration is passed through to findInstanceBySlug (#7543)," ui: Ensure configuration is passed through to findInstanceBySlug  Due to the addition of namespace support, this arguments passed to this method have been increased. Whilst the nspace support continues ot work here, the configuration for blocking queries is never passed through. This results in a 2 second poll rather than a blocking query. This commit fixes that  ui: Add a basic test to check the number of arguments passed through"
8805,Proper detection of ephemeral ports on Mac OS (#7539),"Use systemctl to properly detect ephemeral ports on Mac OS (aka darwin) by fetching systemctl values:  * net.inet.ip.portrange.first  * net.inet.ip.portrange.last This will avoid the message: [INFO] freeport: ephemeral port range detection not configured for GOOS=""darwin"" and properly detect the correct port range"
8806,Remove unused token parameter,
8807,A little less 'just',
8808,Remove unused customEDSClusterJSON,
8809,rebuild UI for master/ui-staging dev docker image (#7530),
8810,Ensure server requirements checks are done against ALL known se… (#7491),Co-authored-by: Paul Banks banks@banksco.de
8811,Add information about which services are proxied to ui services… (#7417),
8812,Add docs for v1/acl/policy/name endpoint (#7501),
8813,cli: slightly more direct way of printing custom version,
8814,cli: send requested help text to stdout,This behaviour matches the GNU CLI standard: http://www.gnu.org/prep/standards/html_node/_002d_002dhelp.html
8815,add ssh package and push to branch before notifying (#7517),
8816,Merge pull request #7495 from hashicorp/3242020-ent-docs-update,updating enterprise documentation with additional clarity
8817,Merge pull request #7516 from hashicorp/dnephin/remove-unused-method,agent: Remove unused method Encrypted from delegate interface
8818,Update CHANGELOG.md,
8819,Add optional JSON format to the ACL CLI commands output (#7198)," Add ACL CLI commands output format option.  Add command level formatter, that incapsulates command output printing logiс that depends on the command -format option. Move Print* functions from acl_helpers to prettyFormatter. Add jsonFormatter.   Return error code in case of formatting failure.   Add acl commands -format option to doc. "
8820,Exposing paths isn't an upstream configuration (#7515),
8821,agent: Remove unused Encrypted from interface,"It appears to be unused. It looks like it has been around a while, I geuss at some point we stopped using this method."
8822,Enable CLI to register terminating gateways (#7500),  Enable CLI to register terminating gateways   Centralize gateway proxy configuration 
8823,Add acl commands -format option to doc.,
8824,Return error code in case of formatting failure.,
8825,Add ACL CLI commands output format option.,"Add command level formatter, that incapsulates command output printing logiс that depends on the command -format option. Move Print* functions from acl_helpers to prettyFormatter. Add jsonFormatter."
8826,Merge pull request #7496 from hashicorp/dnephin/add-lint-to-makefile,Add lint to makefile
8827,command/envoy: Refactor flag parsing/validation (#7504),
8828,Merge pull request #7498 from hashicorp/dnephin/small-cleanup,envoy: small cleanup in cmd and server
8829,Merge pull request #7502 from hashicorp/dnephin/fix-cherry-picker-2,ci: Move shebang to first line of cherry pick script
8830,ci: Move shebang to first line of cherry pick script,Also ran shellcheck against the script and fixed the other errors
8831,Update CHANGELOG.md,
8832,Add PolicyReadByName for API (#6615),
8833,Fix flakey health check reload test (#7490),"This test would occasionally fail because we checked for a status of ""critical"" initially. This races with the actual healthcheck being run and declared passing. We instead use a ttl health check so that we don't rely on timing at all."
8834,updating enterprise documentation with additional clarity,Update website/source/docs/enterprise/backups/index.html.md Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com Update website/source/docs/enterprise/backups/index.html.md Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com Update website/source/docs/enterprise/backups/index.html.md Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com Update website/source/docs/enterprise/backups/index.html.md Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com Update website/source/docs/enterprise/backups/index.html.md Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com Update website/source/docs/enterprise/backups/index.html.md Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com Update website/source/docs/enterprise/namespaces/index.html.md Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com Update website/source/docs/enterprise/index.html.md Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com Update website/source/docs/enterprise/index.html.md Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com Update website/source/docs/enterprise/backups/index.html.md Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com Update website/source/docs/enterprise/namespaces/index.html.md Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com Update website/source/docs/enterprise/network-segments/index.html.md Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com Update website/source/docs/enterprise/read-scale/index.html.md Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com Update website/source/docs/enterprise/upgrades/index.html.md Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com Update website/source/docs/enterprise/upgrades/index.html.md Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com Update website/source/docs/enterprise/redundancy/index.html.md Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com Update website/source/docs/enterprise/redundancy/index.html.md Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com Update website/source/docs/enterprise/redundancy/index.html.md Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com Update website/source/docs/enterprise/redundancy/index.html.md Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com Update website/source/docs/enterprise/redundancy/index.html.md Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com Update website/source/docs/enterprise/network-segments/index.html.md Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com Update website/source/docs/enterprise/read-scale/index.html.md Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com Update website/source/docs/enterprise/read-scale/index.html.md Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com Update website/source/docs/enterprise/read-scale/index.html.md Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com Update website/source/docs/enterprise/redundancy/index.html.md Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com Update website/source/docs/enterprise/read-scale/index.html.md Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com Update website/source/docs/enterprise/redundancy/index.html.md Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com updating capitalization of namespaces
8835,Add missing Helm docs (#7492),
8836,Remove unnecessary methods,They call only a single method and add no additional functionality
8837,cmd: use env vars as defaults,Insted of setting them afterward in Run. This change required a small re-ordering of the test to patch the environment before calling New()
8838,agent: Remove xdsServer field,"The field is only referenced from a single method, it can be a local var"
8839,Add lint to makefile,And support for setting build tags in CI lint job. Removed the unused 'test-ci' target.
8840,Merge pull request #7481 from hashicorp/dnephin/go1.14,ci: Upgrade Go to 1.14.1
8841,Merge pull request #7440 from hashicorp/dnephin/golangci-lint,ci: Use golangci-lint for linting
8842,dns: Remove a few unused params,
8843,ci: Upgrade Go to 1.14.1,
8844,ci: Run all connect/ca tests from the integration suite,To reduce the chance of some tests not being run because it does not match the regex passed to '-run'. Also document why some tests are allowed to be skipped on CI.
8845,ci: Do not skip tests because of missing binaries on CI,"If the CI environment is not correct for running tests the tests should fail, so that we don't accidentally stop running some tests because of a change to our CI environment. Also removed a duplicate delcaration from init. I believe one was overriding the other as they are both in the same package."
8846,Merge pull request #7482 from hashicorp/dnephin/fix-cherry-pick-job,ci: fix cherry-pick job by using newer git
8847,Merge pull request #7484 from hashicorp/dnephin/fix-envoy-tests,Fix tests failing on master
8848,Fix tests failing on master,The default version was changed in https://github.com/hashicorp/consul/pull/7452 which caused these tests to fail.
8849,ci: fix cherry-pick job by using newer git,"https://github.com/git/git/commit/37897bfc27d3003dddf7722113e676e925fe9e21 made it possible to use the -m flag with cherry-pick, even when the target is not a merge commit. This commit changes the image used to run the cherry-pick job to alpine so that we get a more recent version of git. The alpine image will also download much faster when the CI node does not have the image cached."
8850,"Add link to Learn to the top, move service mesh higher up on list of features. (#7474)",
8851,docs: Update config reference for log-file,
8852,Merge pull request #7466 from hashicorp/dnephin/support-cherry-pick-merge-PRs,ci: support cherry-picking of merge PRs
8853,ci: support cherry-picking of merge PRs,This change assumes that it is always safe to use the first commit parent as the mainline. I believe this assumption is safe with a github merge workflow.
8854,Merge pull request #7458 from hashicorp/dnephin/small-doc-improvements,website/docs: small doc improvements to CLI reference
8855,envoy: default to 1.13.1 (#7452),
8856,Update CHANGELOG.md,
8857,docs: fix filenames (#7453),
8858,agent/xds: Update mesh gateway to use service router timeout (#7444), website/connect/proxy/envoy: specify timeout precedence for services behind mesh gateway
8859,ci: Use golangci-lint for linting,"Using golangci-lint has a number of advantages:   adding new linters becomes much easier, its a couple lines of yaml config   instead of more bash scripting   it enables whitelisting of issues using inline comments or regex   when running multiple linters less work is done. The parsed source can be reused   by multiple linters   linters are run in parallel to reduce CI runtime. "
8860,Update CHANGELOG.md,
8861,"Log ""vew version available"" message at info level (#7462)",
8862,docs: fixed typo on MIME in Changelog (#7461),
8863,website/docs: small doc improvements to CLI reference,Small improvements to the join docs. The help text for lock says -try is deprecated and replaced with -timeout. Update the docs to match.
8864,Update CHANGELOG.md to include 1.7.2,
8865,docs: update website version (#7456),
8866,Don’t pass -u to get get inside Go build image dockerfile (#7455),
8867,Update CHANGELOG.md,
8868,Fix ACL mode advertisement and detection (#7451),These changes are necessary to ensure advertisement happens correctly even when datacenters are connected via network areas in Consul enterprise. This also changes how we check if ACLs can be upgraded within the local datacenter. Previously we would iterate through all LAN members. Now we just use the ServerLookup type to iterate through all known servers in the DC.
8869,Update namespace docs for some new CLI commands (#7435),Co-Authored-By: Hans Hasselberg me@hans.io
8870,docs: fix typo in consul-template tutorial (#7454),
8871,Merge pull request #7438 from hashicorp/dnephin/remove-restore-cache,ci: Remove consul-modcache-v1 from ci config
8872,Update CHANGELOG.md,
8873,Update CHANGELOG.md,
8874,cherry pick 'docs-cherrypick' label rather than 'docs' to stable-website (#7443),
8875,ci: Remove restore_cache,"As of go1.13 it is faster to download dependencies from the module proxy service, than to download a cached /go/pkg/mod"
8876,Update MSP token and filtering (#7431),
8877,add Authorization header in GitHub API call (#7436),
8878,tls: remove old ciphers (#7282),"Following advice from: https://github.com/ssllabs/research/wiki/SSL-and-TLS-Deployment-Best-Practices, this PR removes old ciphers."
8879,update changelog,
8880,bump the expected go language version of the main module to 1.13 (#7429),
8881,docs: fix some errors in upgrade-specific,Fix 2 broken links Fix some gramatical errors
8882,set pr_url outside if (#7424),
8883,update changelog,
8884,server: strip local ACL tokens from RPCs during forwarding if crossing datacenters (#7419),Fixes #7414
8885,fix flaky TestCatalogListNodesCommand_verticalBar test (#7422),
8886,Update intention precedence table in the docs (#7421), Update intention precedence table in the docs  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com
8887,add slack notifications for cherry-pick (#7423),
8888,connect: support for envoy 1.13.1 and 1.12.3 (#7380), setup new envoy versions for CI bump version on the website too.
8889,Merge pull request #7373 from hashicorp/acl-segments-fix,Add stub methods for ACL/segment bug fix from enterprise
8890,update changelog,
8891,wan federation via mesh gateways (#6884),"This is like a Möbius strip of code due to the fact that low-level components (serf/memberlist) are connected to high-level components (the catalog and mesh-gateways) in a twisty maze of references which make it hard to dive into. With that in mind here's a high level summary of what you'll find in the patch: There are several distinct chunks of code that are affected:   new flags and config options for the server   retry join WAN is slightly different   retry join code is shared to discover primary mesh gateways from secondary datacenters   because retry join logic runs in the agent and the results of that   operation for primary mesh gateways are needed in the server there are   some methods like RefreshPrimaryGatewayFallbackAddresses that must occur   at multiple layers of abstraction just to pass the data down to the right   layer.   new cache type FederationStateListMeshGatewaysName for use in proxycfg/xds layers   the function signature for RPC dialing picked up a new required field (the   node name of the destination)   several new RPCs for manipulating a FederationState object:   FederationState:{Apply,Get,List,ListMeshGateways}   3 read-only internal APIs for debugging use to invoke those RPCs from curl   raft and fsm changes to persist these FederationStates   replication for FederationStates as they are canonically stored in the   Primary and replicated to the Secondaries.   a special derivative of anti-entropy that runs in secondaries to snapshot   their local mesh gateway CheckServiceNodes and sync them into their upstream   FederationState in the primary (this works in conjunction with the   replication to distribute addresses for all mesh gateways in all DCs to all   other DCs)   a ""gateway locator"" convenience object to make use of this data to choose   the addresses of gateways to use for any given RPC or gossip operation to a   remote DC. This gets data from the ""retry join"" logic in the agent and also   directly calls into the FSM.   RPC (:8300) on the server sniffs the first byte of a new connection to   determine if it's actually doing native TLS. If so it checks the ALPN header   for protocol determination (just like how the existing system uses the   type-byte marker).   2 new kinds of protocols are exclusively decoded via this native TLS   mechanism: one for ferrying ""packet"" operations (udp-like) from the gossip   layer and one for ""stream"" operations (tcp-like). The packet operations   re-use sockets (using length-prefixing) to cut down on TLS re-negotiation   overhead.   the server instances specially wrap the memberlist.NetTransport when running   with gateway federation enabled (in a wanfed.Transport). The general gist is   that if it tries to dial a node in the SAME datacenter (deduced by looking   at the suffix of the node name) there is no change. If dialing a DIFFERENT   datacenter it is wrapped up in a TLS+ALPN blob and sent through some mesh   gateways to eventually end up in a server's :8300 port.   a new flag when launching a mesh gateway via consul connect envoy to   indicate that the servers are to be exposed. This sets a special service   meta when registering the gateway into the catalog.   proxycfg/xds notice this metadata blob to activate additional watches for   the FederationState objects as well as the location of all of the consul   servers in that datacenter.   xds: if the extra metadata is in place additional clusters are defined in a   DC to bulk sink all traffic to another DC's gateways. For the current   datacenter we listen on a wildcard name (server.<dc>.consul) that load   balances all servers as well as one mini-cluster per node   (<node>.server.<dc>.consul)   the consul tls cert create command got a new flag (-node) to help create   an additional SAN in certs that can be used with this flavor of federation. "
8892,Update namespace docs for config entries (#7420),
8893,Update envoy.html.md.erb (#7394),Minor typo
8894,Gather instance counts of aggregated services (#7415),
8895,website:update middleman-hashicorp to 0.3.44 (#7382),
8896,agent: configuration reload preserves check's statuses for services (#7345),"This fixes issue #7318 Between versions 1.5.2 and 1.5.3, a regression has been introduced regarding health of services. A patch #6144 had been issued for HealthChecks of nodes, but not for healthchecks of services. What happened when a reload was:  save all healthcheck statuses cleanup everything add new services with healthchecks  In step 3, the state of healthchecks was taken into account locally, so at step 3, but since we cleaned up at step 2, state was lost. This PR introduces the snap parameter, so step 3 can use information from step 1"
8897,command: change delim in columnize to funny node names (#6652),When node name contains vertical bar symbol some commands output is garbled because | is used as a delimiter in columnize.SimpleFormat. This commit changes format string to use \x1f - ASCII unit separator1 as a delimiter and also adds test to cover this case. Affected commands:  consul catalog nodes consul members consul operator raft list-peers consul intention get  Fixes #3951.
8898,docs: add docs for kv_max_value_size (#7405),"Apart from the added docs, the error messages are similar now and are pointing to the corresponding options. Fixes #6708."
8899,agent: log error when agent crashes in an early stage (#7411),
8900,ui: Enable recovery from an unreachable datacenter (500 error) (#7404),"For URL maintenance reasons we store the last visited DC in localStorage incase you come back to a page (for example settings) that doesn't have a dc in the URL. A problem arises here if the last DC you tried to visit is unreachable. The first fix here clears out the last visited DC from localStorage if the API has errored out. Secondly, our href-mut helper which mutates the current current and replaces 'parts' in the URL rather than the whole thing functioned by detecting the current route/URL you are on an 'mutating' that. A problem arose here as even though you might be on the /ui/dc-1/services URL the actual route is the 'error' route which does not have a URL that can be changed properly. The second fix here uses route.currentRoute.name over route.currentRouteName. The latter is equal to error when an error occurs whereas the former gives you the name of the route before the error happened, which is actually what we want/the intent here. ie. when router.currentRouteName === 'error' then router.currentRoute.name === Name Of Route Before It Errored it seems"
8901,add auto cherry-picking (#7406),  add auto cherry-picking   exit on git cherry-pick failure   release branches are #.#.x 
8902,Update CHANGELOG.md,
8903,agent/txn_endpoint: configure max txn request length (#7388),configure max transaction size separately from kv limit
8904,Change where the envoy snapshots get put when a test fails (#7298),This will allow us to capture them in CI
8905,Update CHANGELOG.md,
8906,Fix session backwards incompatibility with 1.6.x and earlier.,
8907,1.7 upgrade note (#7397),The Session API in Consul 1.7.0 and 1.7.1 is incompatible with prior versions of Consul. This PR adds a note to our version-specific upgrade guide to guard against users upgrading before the fix in 1.7.2 is released.
8908,docs: Add that response_headers also affects the UI (#7376),
8909,update envoy doc notes (#7389),
8910,"ui: Coordinates don't require a nspace, so don't expect one in the repo (#7378)","  ui: Coordinates don't require a nspace, so don't expect one in the repo   Add a test to prove the correct number of arguments are being passed "
8911,ui: Alter position of logic for showing the Round Trip Time tab to prevent DOM refresh (#7377)," ui: Move tomography length check inside of the partial  Previously we checked the length of tomography.distances to decide whether to show the RTT tab or not. Previous to our ember upgrade this would not cause a DOM reload of so many elements (i.e. all of the tab content). Since our ember upgrade, any change to tomography (so not necessarily the length of distances) seems to fire a change to the length (even if the length remains the same). The knock on effect of this is that the array of tab panels seems to be recalculated (but remain the same) and all of the tab panels are completely re-rendered, causing the scroll of the page to be reset. This commit moves the check for tomography.distance.length to the lower down with the loop, which means the array of tab panels always remains the same, which consequently means that the entire array of tab panels is never re-rendered entirely, and therefore fixes the issue."
8912,Adds http_config.response_headers to the UI headers plus tests (#7369),
8913,agent: take Prometheus MIME-type header into account (#7371),This will avoid adding format=prometheus in request and to parse more easily metrics using Prometheus. This commit follows https://github.com/hashicorp/consul/pull/6514 as the PR has been closed and extends it by accepting old Prometheus mime-type.
8914,Add stub methods for ACL/segment bug fix from enterprise,
8915,docs:add documentation for Linode cloud auto-join (#6719),"The go-discover library supports Linode. This adds support for discovering other Consul agents running on Linode. Consul has supported this since 66b8c20 was merged, so this commit just updates the documentation to match current features."
8916,Merge pull request #7340 from hashicorp/docs/change-website-download-v1.7.1,Update Consul version on website to 1.7.1
8917,Update Consul version on website to 1.7.1,
8918,Merge pull request #7207 from hashicorp/namespace-k8s-docs,Docs for consul-k8s namespaces support
8919,ui: Use WithEventSource mixin on intentions to ensure cleanup (#7333),The WithEventSource mixin has a reset method when the Controller is exited which will close any open EventSources/Blocking queries. This adds it in for intentions
8920,Update CHANGELOG.md,
8921,Update CHANGELOG.md,
8922,Docs for Consul namespaces in kube,
8923,Update CHANGELOG.md,
8924,Merge pull request #7304 from hashicorp/docs/anti-entropy,Added links to Anti-entropy guide + catalog
8925,tls: support tls 1.3 (#7325),
8926,format changelog,
8927,Update CHANGELOG.md,
8928,Properly detect no alt domain set (#7323),
8929,Update CHANGELOG.md,
8930,xDS Mesh Gateway Resolver Subset Fixes (#7294), xDS Mesh Gateway Resolver Subset Fixes  The first fix was that clusters were being generated for every service resolver subset regardless of there being any service instances of the associated service in that dc. The previous logic didn’t care at all but now it will omit generating those clusters unless we also have service instances that should be proxied. The second fix was to respect the DefaultSubset of a service resolver so that mesh-gateways would configure the endpoints of the unnamed subset cluster to only those endpoints matched by the default subsets filters.  Refactor the gateway endpoint generation to be a little easier to read
8931,hashibot: let hashibot help us more (#7281),
8932,Update config.yml,
8933,docs: adding new guide for namespaces and service discovery (#6788),
8934,docs: setup secure namespaces (#6789),  Adding new guide for namespaces and ACLs   Update website/source/docs/guides/secure-namespaces.html.md   Co-Authored-By: Blake Covarrubias bcovarrubias@hashicorp.com Co-authored-by: Hans Hasselberg me@hans.io Co-authored-by: Blake Covarrubias blake.covarrubias@gmail.com
8935,ui: Be more specific with the display toggling checkboxes (#7309),
8936,Update CHANGELOG.md,
8937,Update CHANGELOG.md,
8938,fix: Destroying a session that doesn't exist returns status cod… (#6905),fix #6840
8939,Update CHANGELOG.md,
8940,Fix high cpu usage with IPv6 recursor address. Closes #6120 (#6128),
8941,Update CHANGELOG.md,
8942,Fixes envoy config when both RetryOn* values are set (#7280),
8943,ui: Use options.method for keying not options.type (#7308),
8944,agent/proxycfg: fix dropped error in state.initWatchesMeshGateway() (#7267),
8945,docs: add note bout change case in config files to specific version upgrade notes (#6870) (#6878),
8946,docs: add documentation for enabling reverse DNS lookup with systemd-resolved (#6731), Remove trailing whitespace in DNS forwarding guide. Add example for enabling reverse lookup of IP addrseses to .consul domain on systemd-resolved platforms
8947,docs: update libraries-and-sdks.html.md (#6745),"python-consul maintainer gone, this is my version you want to add to the recommended"
8948,docs: update connection for the openstack provider (#6776),"The option username does not work. Need to use user_name with underscore  Authentication failed: Exactly one of Username and UserID must be provided for password authentication  The option user_name works, however, it's need to use region, domain_name in additional."
8949,ui: Gracefully cope with 500 errors from the disco-chain API endpoint (#7291),"When connect is disabled the discovery-chain endpoint returns a 500 error status, which we previoulsy did not gracefully cope with. This commit gracefully copes with any errors from the disco-chain endpoint by supressing the error and hiding the Routing tab from the Service detail page. Acceptance test included"
8950,skip go build and tests on ui/* branches (#7303),  skip go build and tests on ui/* branches   also filter out lint-consul-retry since it runs in parallel with check-vendor 
8951,Added links to Anti-entropy guide + catalog,
8952,only run website workflow on docs/* branches (#7299),
8953,Allow the PolicyResolve and RoleResolve endpoints to process na… (#7296),
8954,website: put a note on the website re vault with 1.7.0 and 1.6.3 (#7295),
8955,agent: sensible keyring error (#7272),"Fixes #7231. Before an agent would always emit a warning when there is an encrypt key in the configuration and an existing keyring stored, which is happening on restart. Now it only emits that warning when the encrypt key from the configuration is not part of the keyring."
8956,Adjust formula for quorum size (#7286),Current formula for quorum size does not match numbers in table below.
8957,config: increase http_max_conns_per_client default to 200 (#7289),
8958,update contributing doc for go 1.13 (#7283),
8959,remove docker layer caching (#7277),
8960,update changelog,
8961,Switch to go 1.13.7 (#7262),  You can no longer cross submodule boundaries with ./... in go   subcommands like go list or go test. The makefile and CI scripts   were updated accordingly.   Also of note: go mod vendor now omits things build ignored. 
8962,avoid 'panic: Log in goroutine after TestCacheGet_refreshAge has completed' (#7276),
8963,fix use of hclog logger (#7264),
8964,docs: correct envoy versions (#7266),
8965,Fix -mesh-gateway flag help text (#7265),
8966,Merge pull request #7263 from hashicorp/david-yu-patch-2,1.7.0 Namespaces Learn Guides
8967,docs: add f5 guide text (#6493),
8968,docs: add splitting guide (#6597)," add splitting guide, originially adapted from nic's blog and drafted on learn"
8969,1.7.0 Namespaces Learn Guides,Attaching learn guides associated with Namespaces release
8970,fix changelog format,
8971,Merge branch 'master' of github.com:hashicorp/consul,
8972,Putting source back into Dev Mode,
8973,Release v1.7.0,
8974,update bindata_assetfs.go,
8975,Update CHANGELOG.md,
8976,[skip ci] add windows signing to changelog (#7260),
8977,[skip ci] add windows signing to changelog (#7260),
8978,Run make update-vendor and fixup various go.sum files,go mod tidy removes these lines because we have a replace directive
8979,"docs: changed the return value from null to empty JSON list, when a session does not exist (#7232)",
8980,website: bump middleman version (#7254),
8981,monitor: fix dropped error (#7206),
8982,Small readme changes.,
8983,"agent: add server raft.{last,applied}_index gauges (#6694)",These metrics are useful for : * Tracking the rate of update to the db * Allow to have a rough idea of when an index originated
8984,docs: document format for TTL values in Consul config (#6693),
8985,docs: adding note to ACL rules page for intentions. (#6569),
8986,tests: convert windows style path to posix style path to avoid hcl parsing error (#6351),
8987,Bump api and sdk module versions,api -> v1.4.0 sdk -> v0.4.0
8988,Bump sdk module version to 0.4.0,
8989,Make the config entry and leaf cert cache types ns aware (#7256),
8990,connect: add validations around intermediate cert ttl (#7213),
8991,"changelog: move ""calls"" outside code backticks",I clearly need an editor
8992,changelog: add accessorID logging ticket,Also fix ensure my previously added github links are bracketed
8993,Update CHANGELOG.md,
8994,make the TestRPC_RPCMaxConnsPerClient test less flaky (#7255),
8995,Update CHANGELOG.md,
8996,Fix flaky TestAutopilot_BootstrapExpect (#7242),
8997,Update CHANGELOG.md,
8998,Fix broken link to consul-aws guide on Learn,
8999,Update CHANGELOG.md,
9000,Update CHANGELOG.md,
9001,Update to miekg/dns v1.1.26 (#7252),
9002,Update CHANGELOG.md,
9003,Update CHANGELOG.md,
9004,add envoy version 1.12.2 and 1.13.0 to the matrix (#7240),  add 1.12.2   add envoy 1.13.0   Introduce -envoy-version to get 1.10.0 passing.   update old version and fix consul-exec case   add envoy_version and fix check   Update Envoy CLI tests to account for the 1.13 compatibility changes.   Co-authored-by: Matt Keeler mkeeler@users.noreply.github.com
9005,Remove the 1.7.0 beta banner on downloads page (#7253),
9006,changelog.md: add telemetry notes, breaking change: consul.rpc.query count semantics changed improvement: consul.rpc.queries_blocking added
9007,rpc: measure blocking queries (#7224),"  agent: measure blocking queries   agent.rpc: update docs to mention we only record blocking queries   agent.rpc: make go fmt happy   agent.rpc: fix non-atomic read and decrement with bitwise xor of uint64 0   agent.rpc: clarify review question   agent.rpc: today I learned that one must declare all variables before interacting with goto labels   Update agent/consul/server.go   agent.rpc: more precise comment on Server.queriesBlocking Co-Authored-By: Paul Banks banks@banksco.de  Update website/source/docs/agent/telemetry.html.md  agent.rpc: improve queries_blocking description Co-Authored-By: Paul Banks banks@banksco.de   agent.rpc: fix some bugs found in review   add a note about the updated counter behavior to telemetry.md   docs: add upgrade-specific note on consul.rpc.quer{y,ies_blocking} behavior   Co-authored-by: Paul Banks banks@banksco.de"
9008,CHANGELOG.md Squashing for 1.7.0 (#7251),
9009,Update CHANGELOG.md,
9010,feat: support sending body in HTTP checks (#6602),
9011,OSS Changes for agent local state namespace testing (#7250),
9012,Catalog + Namespace OSS changes. (#7219),  Various Prepared Query + Namespace things   Last round of OSS changes for a namespaced catalog 
9013,Adding upgrade-legacy doc (#7212),Addresses #7071
9014,agent: ensure that we always use the same settings for msgpack (#7245),We set RawToString=true so that []uint8 => string when decoding an interface{}. We set the MapType so that map[interface{}]interface{} decodes to map[string]interface{}. Add tests to ensure that this doesn't break existing usages. Fixes #7223
9015,Remove outdated TODO (#7244),
9016,Merge pull request #7243 from hashicorp/config-entry-namespace-docs,Update config entry docs for namespaces
9017,Update config entry docs for namespaces,
9018,Update CHANGELOG.md,
9019,Merge pull request #7241 from hashicorp/ui-staging,UI Release Merge (ui-staging merge)
9020,ui: oss don't ever POST/PUT Namespaces when writing data (#7238)," ui: Ensure we use nonEmptySet everywhere where we add Namespace  We missed a coupld of places where we use the noEmptySet function, which will only perform the set if the specified property is non-empty. Currently we aren't certain there is a place in OSS where a Namespace can make its way down via the API and endup being PUT/POSTed back out again when saved. If this did ever happen we would assume it would be the default namespace, but we add an extra check here to ensure we never PUT/POST the Namespace property if Namespaces are disabled.   ui: Add step/assertion for assert if a property is NOT set in the body   ui: Improve updated/create acc testing for policy/token/roles:   Including making sure a Namespace property is never sent through if you are running without namespace support"
9021,Fix a bug with ACL enforcement of reads on namespaced config entries. (#7239),
9022,ui: Run 2 separate test runs oss and ent (#7214),"  ui: Make API integration tests aware of CONSUL_NSPACES_ENABLED   ui: Allow passing CONSUL_NSPACES_ENABLED in via the cli in ember   ui: Add more makefile targets/package scripts to switch NSPACEs on/off   ui: Ensure all acceptance tests continue to pass with NSPACEs on/off   This required a little tweaking of the dictionary, at some point page-navigation and some of these little tweaks will no longer be required   ui: Try running CI frontend tests in two parellel runs oss/ent   ui: Use correct make target, use different names for the reports "
9023,agent/consul server: fix LeaderTest_ChangeNodeID  (#7236),"  fix LeaderTest_ChangeNodeID to use StatusLeft and add waitForAnyLANLeave   unextract the waitFor... fn, simplify, and provide a more descriptive error "
9024,Merge pull request #7235 from hashicorp/ui-staging,ui: UI Release Merge (ui-staging merge)
9025,ui: Fix for differences between uncompiled and compiled CSS (#7233),"We noticed that this relative positioning is not even applied when the CSS is compiled/compressed. When looking via Web Inspector this style/selector doesn't even appear even though it is in the CSS source. This !important reduces the amount of selectors for this style rule, which fixes the error, so potentially this isn't a specificity thing."
9026,docs: Indent secretName and secretKey under aclSyncToken,These are sub-parameters under aclSyncToken. Fix indentation so that they are properly displayed under that top-level key.
9027,OSS Changes for various config entry namespacing bugs (#7226),
9028,agent: ensure node info sync and full sync. (#7189),"This fixes #7020. There are two problems this PR solves:   * if the node info changes it is highly likely to get service and check registration permission errors unless those service tokens have node:write. Hopefully services you register don’t have this permission.   * the timer for a full sync gets reset for every partial sync which means that many partial syncs are preventing a full sync from happening Instead of syncing node info last, after services and checks, and possibly saving one RPC because it is included in every service sync, I am syncing node info first. It is only ever going to be a single RPC that we are only doing when node info has changed. This way we are guaranteed to sync node info even when something goes wrong with services or checks which is more likely because there are more syncs happening for them."
9029,docs: namespaces has erroneous HCL example (#7228),
9030,ui: Discovery chain improvements (#7222),  ui: remove the default word when describing routes   ui: Avoid mutating the chain and look for the default edges more safely   ui: Use not null check instead of a truthy check for showing disco-chain   ui: Upgrade consul-api-double for better disco-chain mocks/fixtures 
9031,cli: fix typo in -namespace help text (#7225),
9032,agent: differentiate wan vs lan loggers in memberlist and serf (#7205),This should be a helpful change until memberlist and serf can be properly switched to native hclog.
9033,Fix disco chain graph validation for namespaces (#7217),Previously this happened to be validating only the chains in the default namespace. Now it will validate all chains in all namespaces when the global proxy-defaults is changed.
9034,Minor Non-Functional Updates (#7215)," Cleanup the discovery chain compilation route handling  Nothing functionally should be different here. The real difference is that when creating new targets or handling route destinations we use the router config entries name and namespace instead of that of the top level request. Today they SHOULD always be the same but that may not always be the case. This hopefully also makes it easier to understand how the router entries are handled.  Refactor a small bit of the service manager tests in oss  We used to use the stringHash function to compute part of the filename where things would get persisted to. This has been changed in the core code to calling the StringHash method on the ServiceID type. It just so happens that the new method will output the same value for anything in the default namespace (by design actually). However, logically this filename computation in the test should do the same thing as the core code itself so I updated it here. Also of note is that newer enterprise-only tests for the service manager cannot use the old stringHash function at all because it will produce incorrect results for non-default namespaces."
9035,ui: Ensure KV flags are passed through to Consul on update (#7216),  ui: always pass KV flags through on update   ui: Integration test to prove the flags queryParams gets passed through   ui: Add Flags to the KV updating acceptance tests 
9036,Add managed service provider token (#7218),Stubs for enterprise-only ACL token to be used by managed service providers.
9037,ui: Add ability to search nodes listing page with IP Address (#7204),  Update search field placeholder to display Search   Add an acceptance test to search node listings with node name and IP Address   Update and add unit tests for filter/search node listing with IP Address 
9038,agent: increase watchLimit to 8192. (#7200),"The previous value was too conservative and users with many instances were having problems because of it. This change increases the limit to 8192 which reportedly fixed most of the issues with that. Related: #4984, #4986, #5050."
9039,Helm ref docs for consul-k8s namespaces support,
9040,Update CHANGELOG.md,
9041,Update CHANGELOG.md,
9042,build: update to golang 1.12.16 (#7153),
9043,Expose Envoy's /stats for statsd agents (#7173),  Expose Envoy /stats for statsd agents; Add testcases   Remove merge conflict leftover   Add support for prefix instead of path; Fix docstring to mirror these changes   Add new config field to docs; Add testcases to check that /stats/prometheus is exposed as well   Parametrize matchType (prefix or path) and value   Update website/source/docs/connect/proxies/envoy.md   Co-Authored-By: Paul Banks banks@banksco.de Co-authored-by: Paul Banks banks@banksco.de
9044,add 'make go-mod-tidy' to serially run tidy on all submodules in the correct order (#7179), also make go-mod-tidy a dependency of update-vendor
9045,[docs] Enabling connect requires server restarts (#6904),
9046,ui: Hides the Routing tab for a service proxy (#7195),  Adds conditional in route to not make discovery-chain request if service kind is equal to connect-proxy or mesh-gateway   Adds conditional in template to not show Routing tab if chain returns as null   Creates a new acceptance test to test the Routing tab not being displayed for a service proxy   Adds tabs to the services/show page object 
9047,Testing updates to support namespaced testing of the agent/xds… (#7185),  Various testing updates to support namespaced testing of the agent/xds package   agent/proxycfg package updates to support better namespace testing 
9048,docs: add Flightpath to the list of community tools (#7176),
9049,docs: rate limiting applies to Consul agents in server mode (#6932),
9050,docs: update available Sentinel imports (#6920),
9051,memberlist: vendor v0.1.6 to pull in new state: stateLeft (#7184),
9052,docs: add missing Autopilot -min-quorum documentation (#7192),
9053,Fix org name in Helm chart's imageEnvoy description,Update the description for the Helm chart's connectInject.imageEnvoy parameter to reflect the correct organization name for images published by EnvoyProxy.io.
9054,auto_encrypt: check previously ignored error (#6604),
9055,docs: add detailed documentation about Health Checking specific service using the gRPC method (#6574),
9056,cli: check previously ignored errors when updating a policy (#6565),
9057,api: add replace-existing-checks param to the api package (#7136),
9058,"docs: fix typos, IDs are UUIDs, /acl/token endpoints manage ACL tokens (#5736)",
9059,Release v1.7.0-beta4,
9060,update bindata_assetfs.go,
9061,"Revert ""Update question.md"" (#7183)",
9062,Add replace directive to prevent contacting istio.io during the… (#7194),They keep having TLS handshake timeouts. Its pointed at github instead.
9063,Update CHANGELOG.md,
9064,Update CHANGELOG.md,
9065,Update CHANGELOG.md,
9066,Security fixes (#7182), Mitigate HTTP/RPC Services Allow Unbounded Resource Usage  Fixes #7159. Co-authored-by: Matt Keeler mkeeler@users.noreply.github.com Co-authored-by: Paul Banks banks@banksco.de
9067,ACL enforcement for the agent/health/services endpoints (#7191),ACL enforcement for the agent/health/services endpoints
9068,update changelog,
9069,cli: improve the file safety of 'consul tls' subcommands (#7186), also fixing the signature of file.WriteAtomicWithPerms
9070,ui: Adds an acceptance test for hiding Blocking Queries (#7162),"  Adds an acceptance test for hiding Blocking Queries   Creates a new scenario - If a user adds CONSUL_UI_DISABLE_REALTIME to localStorage, the Blocking Queries section is hidden.   Updates page assertion to accept functions and booleans as properties   ui: Fix ""don't see"" step to watch for the different pageObject error   ember-cli-page object seems to throw a an error with a different message depending on how you call a function: currentPage()property // message = 'Element not found' const prop = currentPage()[property]; prop() // message = 'Something about destructuring' This changes the step/test/assertion to ensure we check for both types of errors Co-authored-by: John Cowen johncowen@users.noreply.github.com"
9071,agent: add ACL enforcement to the v1/agent/health/service/* endpoints,"This adds acl enforcement to the two endpoints that were missing it. Note that in the case of getting a services health by its id, we still must first lookup the service so we still ""leak"" information about a service with that ID existing. There isn't really a way around it though as ACLs are meant to check service names."
9072,Make PatchSliceOfMaps case insensitive,This fixes some case-sensitivity issues with using camel case in configuration files.
9073,ui: Actually remove CI parallelism (#7190),
9074,ui: Move CI to use the Makefile for testing (+ tmporary removal of exam) (#7188),"  ui: Move CI to use the Makefile for testing (+ tmporary removal of exam)   ui: make a specific test-ci target as we are using --path dist   --path dist looks for a previous build to test against, in CI this exists as we run a build first, but locally potentially this dist folder doesn't"
9075,ui:  Fix sticky nspace menu (#7164),  ui: Fix typo expanded > ariaExpanded   ui: Add the things we need to test this   ui: Add tests for testing the menu closes when clicked   ui: Ensure the aria-menu closes on route change 
9076,Update CHANGELOG.md,
9077,Merge pull request #7177 from hashicorp/ui-staging,ui: UI Release Merge (ui-staging merge)
9078,Add 1.6.3,
9079,ui: Split splitter names in the discovery-chain (#7180),Previous to 1.7 splitter names didn't include the namespace name i.e. 'service-name' as of 1.7 they now include the namespace i.e. 'service-name.namespace' This commit take account of that
9080,[docs] Clarify retry-join (#7078),
9081,Updates to the Txn API for namespaces (#7172),  Updates to the Txn API for namespaces   Update agent/consul/txn_endpoint.go   Co-Authored-By: R.B. Boyer rb@hashicorp.com Co-authored-by: R.B. Boyer public@richardboyer.net
9082,ui: Discovery-Chain: Cope with some edge case configs (#7174)," ui: Discovery-Chain: Cope with redirects that have failovers  We found a few stranger configurations for discovery-chain, one of which was redirects that can then failover. We altered the parsing here to include 2 passes, one to organize the nodes into resolvers and children/subsets based on the nodes themselves, which includes adding the failovers to resolvers and subsets. We then do a second pass which can more reliably figure out whether a target is a redirect or a failover (target failovers don't have a corresponding node), this then adds the redirect children to the already exising resolver (from the first pass) and then checks if the redirect also has failovers and adds those if so.  ui: Check to see if we have a user configured default route or not  ...if we don't add one so the visualization looks complete"
9083,Update question.md (#6778),
9084,Add some better waits to prevent CA is nil test flakes (#7171),
9085,docs: clarify that clients and servers need to talk over LAN if outside k8s (#7156),
9086,Update CHANGELOG.md,
9087,Small refactoring to move meta parsing into the switch statement (#7170),
9088,Fix a couple bugs regarding intentions with namespaces (#7169),
9089,Sync some feature flag support from enterprise (#7167),
9090,various tweaks on top of the hclog work (#7165),
9091,ui: Add live updates/blocking queries to the Intention listing page (#7161),  ui: Enable blocking queries/live updates for intentions   ui: Add acceptance tests for intention blocking queries   ui: Add copy to explain that intentions are also now 'real time' 
9092,docs: Clarify the use of kustomize or ship with the Helm chart (#7154),
9093,Allow users to configure either unstructured or JSON logging (#7130), hclog Allow users to choose between unstructured and JSON logging
9094,Output proper HTTP status codes for Txn requests that are too large (#7157),
9095,docs: update ACL perms for the /connect/ca/roots endpoint (#7155),
9096,ui: Add node based configuration / environment testing (#7140),"In an ember environment config/environment.js exports a JSON object whereas the file itself exports a function that receives a string of the environment name that would like returning. This is so ember can automatically provide you with an already configured object containing configuration values dependent on which environment you passed to ember-cli using serve, build or test. In order to bypass this so we can easily test what is returned for different environments, we've installed a lightweight functional test harness that is simple to use substack/tape, that can be run easily outside of ember. We've then written as simple test case using this to enable us to test/assert that different environments return the correct configuration values. Additionally we've added some yarn scripts/make targets (yarn run test-node / make test-node) to make this easy to run. We're yet to integrate this into CI."
9097,use 4 parallelism for go-test and print package names (#7152),
9098,ui: Fix wrapping service ids in the Node Detail > Services tab (#7149),
9099,ui: Fix positioning of active icon in the selected menu item (#7148),
9100,ui: Implements the ember-page-title addon to the UI (#7118),  Installs ember-page-title 5.x   Adds a page title to all template files that need one   Adds an assertion step to test the page titles 
9101,api: add option to set TLS options in-memory for API client (#7093),This PR adds the option to set in-memory certificates to the API client instead of requiring the certificate to be stored on disk in a file. This allows us to define API client TLS options per Consul secret backend in Vault. Related issue hashicorp/vault#4800
9102,ui: Remove the Policy/Service Identity selector from nspaces (#7124),"When editing Nspaces, although you can assign policies to a nspace using PolicyDefaults you cannot assign a Service Identity to a policy like you can when adding a policy to a token. This commit adds an extra attribute to our policy-form/policy-selector component so you can disable this setting. At a later date we may change this to have a conficgurable <Slot /> instead. Simple acceptance tests is included here"
9103,docs: Fix success/passing health check definition,"This commit changes the health check example shown for the success/failures_before_passing option to correctly show that the value of checks is an array of objects, not an object. Added text clarifying these check parameters are available in Consul 1.7.0 and later. Expanded the health check to provide a more complete configuration example. Resolves #7114."
9104,Add accessorID of token when ops are denied by ACL system (#7117),  agent: add and edit doc comments   agent: add ACL token accessorID to debugging traces   agent: polish acl debugging   agent: minor fix + string fmt over value interp   agent: undo export & fix logging field names   agent: remove note and migrate up to code review   Update agent/consul/acl.go   Co-Authored-By: Matt Keeler mkeeler@users.noreply.github.com   agent: incorporate review feedback   Update agent/acl.go   Co-Authored-By: R.B. Boyer public@richardboyer.net Co-authored-by: Matt Keeler mkeeler@users.noreply.github.com Co-authored-by: R.B. Boyer public@richardboyer.net
9105,Unflake the TestAPI_AgentConnectCALeaf test (#7142),  Unflake the TestAPI_AgentConnectCALeaf test   Modify the WaitForActiveCARoot to actually verify that at least one root exists Also verify that the active root id field is set 
9106,fix spelling errors (#7135),
9107,hashibot: disable most of hashibot (#7139),
9108,"Revert ""disable most of hashibot""",This reverts commit 977bafcd25dea9b493fc5df596c2f89e72e2a7b8.
9109,disable most of hashibot,
9110,Slow down Hashibot (#7134),
9111,Update CHANGELOG.md,
9112,Release v1.7.0-beta3,
9113,update bindata_assetfs.go,
9114,Merge pull request #7127 from hashicorp/bugfix/ui-correct-env-switch,ui: Change environment switch statement to correct env vars
9115,ui: Change environment switch statement to correct env vars,
9116,Pass the git commits year through as an env var to the ui build (#7126),
9117,Update CHANGELOG.md,
9118,Updates to Config Entries and Connect for Namespaces (#7116),
9119,Merge pull request #7125 from hashicorp/ui-staging,ui: UI Release Merge (ui-staging merge)
9120,Update CHANGELOG.md,
9121,Add the v1/catalog/node-services/:node endpoint (#7115),The backing RPC already existed but the endpoint will be useful for other service syncing processes such as consul-k8s as this endpoint can return all services registered with a node regardless of namespacing.
9122,ui: Acceptance test improvements to prepare for more NS tests (#6980),"  ui: Acceptance test improvements to prepare for more NS tests   ui: Namespace acceptance testing (#7005)   Update api-double and consul-api-double for http.body   Adds places where we missed passing the nspace through   Hardcode nspace CRUD to use the default nspace for policies and roles   Alter test helpers to allow us to control nspaces from the outside   Amends to allow tests to account for namespace, move ns from queryParam   We decided to move how we pass the namespace value through to the backend when performing write actions (create, update). Previoulsy we were using the queryParam although using the post body is the preferred method to send the Namespace details through to the backend.   Other various amends to take into account testing across multiple namespaced scenarios   Enable nspace testing by default   Remove last few occurances of old style http assertions   We had informally 'deprecated' our old style of http assertions that relied on the order of http calls (even though that order was not important for the assertion). Following on from our namespace work we removed the majority of the old occrances of these old style assertions. This commit removes the remaining few, and also then cleans up the assertions/http.js file to only include the ones we are using. This reduces our available step count further and prevents any confusion over the usage of the old types and the new types.   ui: Namespace CRUD acceptance tests (#7016)   Upgrade consul-api-double   Add all the things required for testing:   edit and index page objects  enable CONSUL_NSPACE_COUNT cookie setting  enable mutating HTTP response bodies based on URL   Add acceptance test for nspace edit/delete/list and searching "
9123,Redirect /docs/guides/outage.html to Learn,Resolves: #6953
9124,bot: replace stalebot with hashibot (#7113),
9125,Update CHANGELOG.md,
9126,Update CHANGELOG.md,
9127,Fix segfault when removing both a service and associated check (#7108)," Fix segfault when removing both a service and associated check  updateSyncState creates entries in the services and checks maps for remote services/checks that are not found locally, so that we can then make sure to delete them in our reconciliation process. However, the values added to the map are missing key fields that the rest of the code expects to not be nil.  Add comment stating Check field can be nil"
9128,update changelog,
9129,agent: default the primary_datacenter to the datacenter if not configured (#7111),"Something similar already happens inside of the server (agent/consul/server.go) but by doing it in the general config parsing for the agent we can have agent-level code rely on the PrimaryDatacenter field, too."
9130,Update CHANGELOG.md,
9131,bug: Consul lock does not receive signals if lock not acquired (#5909),
9132,Fix up formatting in sdk package (#7109),
9133,fix Unix socket path in docs,
9134,Merge pull request #7102 from hashicorp/david-yu-patch-2,Adding links to Kubernetes install to README.md
9135,Merge pull request #7103 from hashicorp/david-yu-patch-3,Adding Service Mesh reference to README.md
9136,Merge pull request #7104 from hashicorp/david-yu-patch-4,Small change to TLS connection wording
9137,tests: fix zombie consul process while invoking TestServer.Stop() method in sdk/testutil in Windows (#6032)," Fix zombie consul process in Windows   Windows doesn't support Interrupt signal, thus while stop it on Windows platform it would fail and left zombie consul process"
9138,docs: add Helm chart 'dns.clusterIP' value. (#5845),
9139,raft: increase raft notify buffer. (#6863), Increase raft notify buffer.  Fixes https://github.com/hashicorp/consul/issues/6852. Increasing the buffer helps recovering from leader flapping. It lowers the chances of the flapping leader to get into a deadlock situation like described in #6852.
9140,ui: Checks env CONSUL_UI_DISABLE_REALTIME to show/hide blocking queries toggle (#7099),Adds a conditional that checks env CONSUL_UI_DISABLE_REALTIME to show/hide the Blocking Queries toggle in the Settings page.
9141,ui: New Confirmation Dialogs (#7007),"  ui: Change action-group to use new popup-menu component in intentions   ui: Slight amends to aria-menu to prevent scrolling   ui: Begin to use aria-menu/popover-menu for other elements   Use a simpler, hackier method to fix up zIndexing   ui: Implement new confirmation dialogs in other list views (#7080)   This includes another amend to the popover-menu in order to allow mutiple confirmations/subpanels in the same popover menu. The functionality added here to allow this is likely to change in the future."
9142,agent: setup grpc server with auto_encrypt certs and add -https-port (#7086), setup grpc server with TLS config used across consul. add -https-port flag
9143,connect: use correct subject key id for leaf certificates. (#7091),
9144,Add docs about rolling out TLS on k8s (#7096), Add docs about gradually rolling out TLS on k8s  Co-authored-by: Luke Kysow 1034429+lkysow@users.noreply.github.com
9145,Small change to wording ,"Removing automatic connection wording for applications for the time being. From @blake   They can automatically establish TLS connections without being aware that TLS is happening. They are aware that they’re routed through the Connect proxy, the app has to configure itself to use the local upstream port."
9146,Small change,
9147,Adding change to mention a few guides,Previously mentioned just one one guide in the header
9148,Adding Service Mesh reference,Adding Service Mesh reference for Consul
9149,Adding links to Kubernetes install,Adding links to Kubernetes deployment guide and minikube install for visibility
9150,make TestCatalogNodes_Blocking less flaky (#7074),"  Explicitly wait to start the test until the initial AE sync of the node.   Run the blocking query in the main goroutine to cut down on possible poor goroutine scheduling issues being to blame for delays.   If the blocking query is woken up with no index change, rerun the query. This may happen if the CI server is loaded and time dilation is happening. "
9151,test: ensure we don't ask vault to sign a leaf that outlives its CA when acting as a secondary (#7100),
9152,fix the submodule go.mod and go.sum files (#7098),
9153,test: run both the TestVaultProvider and TestVaultCAProvider tests in CI (#7097),
9154,ui: Improve configuration/env/feature flag usage (also add build time year detection) (#7072),"  Add new getEnvironment util/function   Use new-ish env function in all the places   Clean up ember env file, add year detection from commit date "
9155,tests: fix autopilot test (#7092),
9156,Fix TestAPI_DiscoveryChain_Get flake (#7082),
9157,ui: Keyboard navigation improvements (#7090),  ui: Improve keyboard access for some custom components   ui: Add some accessibility related metadata 
9158,agent: remove service sidecars in Agent.cleanupRegistration (#7022),Sidecar proxies were left behind when cleaning up after an unsuccessful registration. There are now also removed when the service is cleanup up.
9159,raft: update raft to v1.1.2 (#7079), update raft use hclogger for raft.
9160,Merge pull request #6970 from hashicorp/k8s-docs-refactor,Kubernetes docs reorganization
9161,Reorg kube docs,
9162,connect: check if intermediate cert needs to be renewed. (#6835),"Currently when using the built-in CA provider for Connect, root certificates are valid for 10 years, however secondary DCs get intermediates that are valid for only 1 year. There is no mechanism currently short of rotating the root in the primary that will cause the secondary DCs to renew their intermediates. This PR adds a check that renews the cert if it is half way through its validity period. In order to be able to test these changes, a new configuration option was added: IntermediateCertTTL which is set extremely low in the tests."
9163,auto_encrypt: set dns and ip san for k8s and provide configuration (#6944), Add CreateCSRWithSAN Use CreateCSRWithSAN in auto_encrypt and cache Copy DNSNames and IPAddresses to cert Verify auto_encrypt.sign returns cert with SAN provide configuration options for auto_encrypt dnssan and ipsan rename CreateCSRWithSAN to CreateCSR
9164,".gitignore: cut IDE-specific entries, cleanup (#7083)","  .gitignore: add vscode and MacOS-specific files. add a little org   .gitignore: remove IDE-specific ignores, add docs "
9165,Update CHANGELOG.md,
9166,Add support for dual stack IPv4/IPv6 network (#6640),  Use consts for well known tagged adress keys   Add ipv4 and ipv6 tagged addresses for node lan and wan   Add ipv4 and ipv6 tagged addresses for service lan and wan   Use IPv4 and IPv6 address in DNS 
9167,agent: do not deregister service checks twice (#6168),"Deregistering a service from the catalog automatically deregisters its checks, however the agent still performs a deregister call for each service checks even after the service has been deregistered. With ACLs enabled this results in logs like: ""message:consul: ""Catalog.Deregister"" RPC failed to server server_ip:8300: rpc error making call: rpc error making call: Unknown check 'check_id'"" This change removes associated checks from the agent state when deregistering a service, which results in less calls to the servers and supresses the error logs."
9168,agent: configurable MaxQueryTime and DefaultQueryTime. (#3777),
9169,Fix Namespace Typo (#7030),
9170,ui: Discovery Chain Improvements (#7036),"  Reorganize resolvers so its clearer what's happening   Use entire route definition for id   Clean up a tiny bit more, use guid for ids instead of JSON   ui: Externalize disco-chain utils and add initial unit testing   Add some click outside-ness for de-highlighting things "
9171,ui: Use structure-icons as much as possible (#6851),  ui: Delete a bunch of CSS that we recently moved elsewhere   ui: Add some masking placeholders   Switch out hashicorp logo for one from structure-icons   Change copy-button to use new copy-action icon   Change secret-button to use new visibility-hide/show icons   New folder icon for KVs   Cleanup some of the icons we no longer use   Switch from %with-exit to standard-like %with-exit-icon   Move all chevrons to use structure-icons properly   Use star-fill as much as possible   Remove the remaining icons from icons/index plus the file itself 
9172,Update CHANGELOG.md,
9173,docs: Add note about using valid DNS labels for service names (#7035),Add note about using valid DNS labels for service names
9174,ui: Move slots to use attributes over positional params (#7032),  Change all instances of yield/block-slots to use attributes over positional arguments   Remove the ability to use yield/block-slots with positional params 
9175,Small improvements to Connect docs (#6910),  docs/connect add link to intentions and minor phrasing change   docs/connect pluralize 'applications'   Update website/source/docs/connect/connect-internals.html.md   Co-Authored-By: Paul Banks banks@banksco.de
9176,Update CHANGELOG.md,
9177,Update force-leave ACL requirement to operator:write (#7033),
9178,AuthMethod updates to support alternate namespace logins (#7029),
9179,Add contributing dir with Config file checklist (#7017),  Add contributing dir with Config file checklist and modify contribution guides   Apply suggestions from code review   Co-Authored-By: Chris Piraino cpiraino@hashicorp.com Co-authored-by: Chris Piraino piraino.chris@gmail.com
9180,Intentions ACL enforcement updates (#7028),  Renamed structs.IntentionWildcard to structs.WildcardSpecifier   Refactor ACL Config   Get rid of remnants of enterprise only renaming. Add a WildcardName field for specifying what string should be used to indicate a wildcard.  Add wildcard support in the ACL package  For read operations they can call anyAllowed to determine if any read access to the given resource would be granted. For write operations they can call allAllowed to ensure that write access is granted to everything.   Make v1/agent/connect/authorize namespace aware   Update intention ACL enforcement   This also changes how intention:read is granted. Before the Intention.List RPC would allow viewing an intention if the token had intention:read on the destination. However Intention.Match allowed viewing if access was allowed for either the source or dest side. Now Intention.List and Intention.Get fall in line with Intention.Matches previous behavior. Due to this being done a few different places ACL enforcement for a singular intention is now done with the CanRead and CanWrite methods on the intention itself.  Refactor Intention.Apply to make things easier to follow.
9181,rpc: log method when a server/server RPC call fails (#4548),"Sometimes, we have lots of errors in cross calls between DCs (several hundreds / sec) Enrich the log in order to help diagnose the root cause of issue."
9182,Move where the service-resolver watch is done so that it happen… (#7025),Before we were issuing 1 watch for every service in the services listing which would have caused the agent to process many more identical events simultaneously.
9183,connect: use inline_string instead for envoy ca(#7024),
9184,connect: derive connect certificate serial numbers from a memdb index instead of the provider table max index (#7011),
9185,connect: ensure that updates to the secondary root CA configuration use the correct signing key ID values for comparison (#7012),Fixes #6886
9186,added disclaimer about network segments due to Serf limitations (#7004), added disclaimer about network segments due to Serf limitations  using work made at https://github.com/hashicorp/consul/pull/6558 by @thepomeranian   Lowercasing functionality name   Update website/source/docs/enterprise/network-segments/index.html.md   Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com Co-authored-by: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com
9187,Update docs to point to new learn guide (#7003), Changed the link to point to new guide Removed querystring from link
9188,Azure MSI for cloud auto-join  (#7000), Azure MSI documentation  Adding in note about support for Azure MSI authentication method for Cloud auto-join  fixing text formatting  fixing text formatting  missing word  missing word - variable  Update website/source/docs/agent/cloud-auto-join.html.md  Language change to be specific about where the security risk mitigation is concerned Co-Authored-By: Jack Pearkes jackpearkes@gmail.com Co-authored-by: Jack Pearkes jackpearkes@gmail.com
9189,updating the ent docs to mention GCP (#7001),
9190,docs: Fix extraVolumes mount paths in helm.html.md (#7008),
9191,docs: fix typo in ACL legacy documentation (#7006),
9192,[docs] Managing ACL Policies (#6573),  New Acl policy guide   Update website/source/docs/guides/managing-acl-policies.html.md   Co-Authored-By: Paul Banks banks@banksco.de  Update website/source/docs/guides/managing-acl-policies.html.md  Co-Authored-By: Paul Banks banks@banksco.de  Update website/source/docs/guides/managing-acl-policies.html.md  Co-Authored-By: Paul Banks banks@banksco.de  Update website/source/docs/guides/managing-acl-policies.html.md  Co-Authored-By: Paul Banks banks@banksco.de  Update website/source/docs/guides/managing-acl-policies.html.md  Co-Authored-By: Paul Banks banks@banksco.de Co-authored-by: Paul Banks banks@banksco.de
9193,[docs] New Replication Guide (#5823),  new replication guide   Update website/source/docs/guides/acl-replication.md   Co-Authored-By: R.B. Boyer public@richardboyer.net   fixing list   Update website/source/docs/guides/acl-replication.md   Co-Authored-By: R.B. Boyer public@richardboyer.net  Update website/source/docs/guides/acl-replication.md  Co-Authored-By: R.B. Boyer public@richardboyer.net  Update website/source/docs/guides/acl-replication.md  Co-Authored-By: R.B. Boyer public@richardboyer.net  Update website/source/docs/guides/acl-replication.md  Co-Authored-By: R.B. Boyer public@richardboyer.net   fixing another list   Update website/source/docs/guides/acl-replication.md   Co-Authored-By: Matt Keeler mkeeler@users.noreply.github.com  Update website/source/docs/guides/acl-replication.md  Co-Authored-By: R.B. Boyer public@richardboyer.net   fixing formating   Updating based on feedback.   Update website/source/docs/guides/acl-replication.md   Co-Authored-By: Matt Keeler mkeeler@users.noreply.github.com  Update website/source/docs/guides/acl-replication.md  Co-Authored-By: Judith Malnick judith@hashicorp.com   updating introduction based on feedback   Update website/source/docs/guides/acl-replication.md   updating intro based on feedback   Update website/source/docs/guides/acl-replication.md   Co-Authored-By: Judith Malnick judith@hashicorp.com  Update website/source/docs/guides/acl-replication.md  Co-Authored-By: Judith Malnick judith@hashicorp.com  Update website/source/docs/guides/acl-replication.md  Co-Authored-By: Judith Malnick judith@hashicorp.com  Update website/source/docs/guides/acl-replication.md  Co-Authored-By: Judith Malnick judith@hashicorp.com   updating based on feedback   Update website/source/docs/guides/acl-replication.md   Co-Authored-By: Judith Malnick judith@hashicorp.com  Update website/source/docs/guides/acl-replication.md  Co-Authored-By: Judith Malnick judith@hashicorp.com  Update website/source/docs/guides/acl-replication.md  Co-Authored-By: Judith Malnick judith@hashicorp.com  Additional note about servers  Co-authored-by: R.B. Boyer public@richardboyer.net Co-authored-by: Matt Keeler mkeeler@users.noreply.github.com Co-authored-by: Judith Malnick judith@hashicorp.com
9194,New Connect guide for new users (#6749),
9195,Move Session.CheckIDs into OSS only code. (#6993),
9196,Merge pull request #6978 from hashicorp/docs/helm-move-bootstrapacls-under-global,Move bootstrapACLs under global key in Helm docs
9197,Move bootstrapACLs under global key in Helm docs,"The global.bootstrapACLs key in the Helm chart docs was inadvertently moved to a top-level key in commit 12e6ef8, which is incorrect. This commit reverts that error."
9198,Release v1.7.0-beta2,
9199,update bindata_assetfs.go,
9200,"Revert ""Remove docs refs to NS inference from ACL token"" (#6976)",This reverts commit 3a8426de9c76e7d8dd2728e4ae78bc4e5e18626a. Conflicts: command/flags/http.go website/source/api/acl/binding-rules.html.md website/source/api/acl/policies.html.md website/source/api/acl/roles.html.md website/source/api/acl/tokens.html.md website/source/api/kv.html.md website/source/api/session.html.md website/source/docs/commands/_http_api_namespace_options.html.md
9201,Update CHANGELOG.md,
9202,Merge pull request #6966 from hashicorp/ui-staging,ui: UI Release Merge (ui-staging merge)
9203,ui: Make sure that the namespace is passed when changing a token via [Use] (#6973), Pass the namespace parameter through to the repo when using a token Refresh the namespace menu when somebody [Use]s a token
9204,ui: Cope with the possibility of receiving no namespaces (#6975),
9205,Ensure ember-data ids are created correct taking into account the nspace (#6974),
9206,update changelog,
9207,Restore a few more service-kind index updates so blocking in ServiceDump works in more cases (#6948),Restore a few more service-kind index updates so blocking in ServiceDump works in more cases Namely one omission was that check updates for dumped services were not unblocking. Also adds a ServiceDump state store test and also fix a watch bug with the normal dump. Follow-on from #6916
9208,Add 'kind = connect-proxy' to mesh_gateway.html,
9209,Update CHANGELOG.md,
9210,log: handle discard all logfiles properly (#6945), Handle discard all logfiles properly  Fixes https://github.com/hashicorp/consul/issues/6892. The docs are stating:  -log-rotate-max-files - to specify the maximum number of older log file archives to keep. Defaults to 0 (no files are ever deleted). Set to -1 to disable rotation and discard all log files.  But the -1 case was not implemented and led to a panic when being used. Co-Authored-By: Freddy freddygv@users.noreply.github.com
9211,Update CHANGELOG.md,
9212,Update CHANGELOG.md,
9213,Enterprise Sync - 2019.12.18 (#6968),Enterprise Sync - 2019.12.18
9214,OSS changes for implementing token based namespace inferencing,remove debug log
9215,Unflake the TestACLEndpoint_TokenList test,In order to do this I added a waitForLeaderEstablishment helper which does the right thing to ensure that leader establishment has finished. fixup
9216,website: embed yt videos on intro pages (#6871), website: embed yt videos on intro pages for /docs/connect for /intro css to handle iframe responding at smaller viewports Update consul connect video with introductory description. Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com Update consul connect intro with introductory description. Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com
9217,Miscellaneous acl package cleanup,• Renamed EnterpriseACLConfig to just Config • Removed chained_authorizer_oss.go as it was empty • Renamed acl.go to errors.go to more closely describe its contents
9218,Rename EnterpriseAuthorizerContext -> AuthorizerContext,
9219,ui: Various amends for 1.7beta (#6965),"  Remove empty init   Actually make the disco chain endpoint send the nspace, note:   The backend doesn't support this as yet.   Tweak the font size of flash-messages ever so slightly   Make sure the nspace menu is kept up to date when creating a new one   Move comment to the correct place   Only refresh the namespace menu if you specifically created a nspace   Change FIXMEs to TODOs as we are happy for these to wait until later "
9220,Change how  namespaces are specified for the CLI (#6960),
9221,OSS changes to allow for parsing the enterprise DNS config prop… (#6959),
9222,ui: Discovery Chain (#6746),"  Add data layer for discovery chain (model/adapter/serializer/repo)   Add routing plus template for routing tab   Add extra deps - consul-api-double upgrade plus ngraph for graphing   Add discovery-chain and related components and helpers:   discovery-chain to orchestrate/view controller  route-card, splitter-card, resolver card to represent the 3 different node types. route-match helper for easy formatting of route rules dom-position to figure out where things are in order to draw lines svg-curve, simple wrapper around svg's  attribute format. data-structs service. This isn't super required but we are using other data-structures provided by other third party npm modules in other yet to be merged PRs. All of these types of things will live here for easy access/injection/changability  Some additions to our css-var 'polyfill' for a couple of extra needed rules   Related CSS for discovery chain   We add a %card base component here, eventually this will go into our base folder and %stats-card will also use it for a base component.   New icon for failovers   ui: Discovery Chain Continued (#6939)   Add in the things we use for the animations 2 Use IntersectionObserver so we know when the tab is visible, otherwise the dom-position helper won't work as the dom elements don't have any display.  Add some base work for animations and use them a little Try to detect if a resolver is a redirect. Right now this works for datacenters and namespaces, but it can't work for services and subsets - we are awaiting backend support for doing this properly. Add a fake 'this service has no routes' route that says 'Default' redirect icon Add CSS.escape polyfill for Edge"
9223,ui: Namespace Support (#6639),"Adds namespace support to the UI:  Namespace CRUD/management Show Namespace in relevant areas (intentions, upstreams) Main navigation bar improvements Logic/integration to interact with a new internal/acl/authorize endpoint"
9224,ui: %form-element-textarea > %form-area-textinput typo (#6952),
9225,ui: Fixes styling of 'duplicate intention' error message (#6936),
9226,ui: Remove writable usage from policy and use the request instead (#6934),
9227,ui: Use base fonts throughout the app (#6881),"We've had a set of %placeholders in our base styles for quite a while but not butten the bullet to use them. This begins to use them. We had to make a small amount of tweaks to base whilst doing this, but its as we'd prefer there to be as few font placeholders as possible. We might/should be able to reduce these further at somepoint, or potentially rename them. We currently have six header fonts (or 4 header fonts/2 strong body fonts) and 3 body fonts. We also noticed an empty CSS file and deleted that while we were here. We also noticed that the bottom border of structure tabs was a pixel larger than ours so we tweaked that here also."
9228,ui: Remove some javascript files we no longer use (#6853),
9229,ui: Ensure %app-content > %app-view-content rename is complete (#6843),"In https://github.com/hashicorp/consul/pull/6575 we changed the name of %app-content to %app-view-content, but missed a few places that needed renaming, this corrects that."
9230,ui: Expose checks (#6575),Adds visibility for Expose.Checks config setting for proxies.  Adds an 'Exposed Path' tab to the proxy detail page to show the user information on exposed paths. If the users has exposed their healthchecks we also add this information to the Service detail page for this proxy (only for http2 and gRPC checks)
9231,"ui: CSS Upgrade (action-group,form-elements,sliding-toggle,breadcrumbs) (#6495)","This includes an update of our CSS npm module. The majority of this is just moving files from one folder to another.  %breadrumbs: As well as moving we've added 'milestone' breadcrumbs %checkbox-group: Moved %radio-group: Moved %sliding-toggle: Moved (used to be called just %toggle) %form-elements: Moved and added a new %inline-alert for form field messaging (see Structure design system) %action-group is now a composition of %menu-panel, %toggle-button, plus edits to existing style to bring the %action-groups inline with the dropdowns from Structure). %action-group also includes a composed %confirmation-alert that is yet to be include. This will be compiled out until we integrate it.  We've also removed some of our old icon placeholders as the above work seased to use some of them. Now we done this I'd say all in all over half of our CSS components now use the CSS npm module. The CSS specific to Consul UI also uses much of this CSS module by way of helper placeholders such as our %frames."
9232,ui: Adds ember-data blueprints for Consul specific HTTP adapter etc (#6461)," ui: Adds ember-data blueprints for Consul specific HTTP adapter etc  These are currently quite Consul specific, but we also overwrite the default model-test blueprint to keep the names consistent (dasherized) for easy test filtering. ember generate [adapter|serializer|model|repository|route] <name>"
9233,"ui: Add optional name="""" attribute so you can name slots with it (#6740)","Pretty soon we would like to move to XML/Angle Bracket style components. As they are XML-y it means you can't use positional parameters anymore (every 'argument' for the component requires it to use an XML-like attribute). This adds a name="""" attribute to both block-slot and yield-slot components so we can use attributes to specify the name. We prefer using attributes from now on, whilst the positional parameter is still available yet deprecated so we can move over at whatever speed fits. We also did the same with the block params positional parameter. As a final note this entire in repo addon is a fork of ember-block-slots"
9234,ui: Add missed calls to _super (#6595),
9235,"ui: [dev] Adds express middleware, removes need to run api dev server (#6750)"," ui: Adds some express middleware, removes need to run api dev server  @hashicorp/api-double comes with a basic express based server to run the API double. This uses the express based server that ember-cli includes and uses to run your app instead. Eventually this will be moved to the @hashicorp/ember-cli-api-double addon instead.  Adds make start-consul to ease running a dev UI against Consul itself"
9236,ui: Upgrade tooling to node 10 now we are on a more recent ember (#6610),  ui: Upgrade tooling to node 10 now we are on a more recent ember   build: Also update the conatiner for building the UI   We bump alpine here as 3.8 doesn't have node 10 by default whereas 3.9 does. Yarn is bumped to latest current version while we are here.
9237,ui: Remove $radius-small in favour of the $decor-* ones in base (#6605),
9238,CI: Extract remaining values of /tmp/test-results into yaml reference (#6964),"  ci: extract value /tmp/test-results into yaml reference calls   ci: correctly subtitute a var in bash, womp womp "
9239,Add CI test-integrations job for connect Vault CA provider (#6949),"  vault-ca-provider: add make target and CI test-integration job for /agent/connect/ca/ Vault Provider tests   load env vars in the vault-ca-provider ci job   add checkout task, see if we need to attach workspace or not   ci: remove vault dependency from go-test job to ensure we only run the vault-provider tests in their job   ci: fix from RB and Alvin code review, add mod cache after checkout   ci: add CI context to make target and store test results   ci: fix whitespace   ci: create test results directory before we try to write to it "
9240,Clarify -retry-join can be provided multiple times,Update -retry-join documentation to explicitly state the option can be specified multiple times. Add corresponding config example showing multiple join addresses.
9241,Add kv meta to namespaces api module (#6958),
9242,"coverage: disable comment and project status, set informational mode (#6954)",  ci: set verbose mode for CodeCov upload   coverage: rename config to codecov.yml 
9243,autopilot: fix dead server removal condition to use correct failure tolerance (#4017), Make dead server removal condition in autopilot use correct failure tolerance rules Introduce func with explanation
9244,dns: fix memoryleak by upgrading outdated miekg/dns (#6748)," Add updated github.com/miekg/dns to go modules Add updated github.com/miekg/dns to vendor Fix github.com/miekg/dns api breakage Decrease size when trimming UDP packets Need more room for the header(?), if we don't decrease the size we get an ""overflow unpacking uint32"" from the dns library Fix dns truncate tests with api changes Make windows build working again. Upgrade x/sys and x/crypto and vendor This upgrade is needed because of API breakage in x/sys introduced by the minimal x/sys dependency of miekg/dns  This API breakage has been fixed in commit https://github.com/golang/sys/commit/855e68c8590b0d6a9d08863d2982eb8aeddd98d3"
9245,acl: use constant time comparing to check token (#6943),
9246,Merge pull request #6805 from hashicorp/issue-6804-sysctl-path,change sysctl call to use absolute path
9247,Fix formatting and add version info (#6926),
9248,ui: feature support templating for index.html (#6921),
9249,Merge pull request #6891 from hashicorp/helm-docs-dec5,Update Helm docs to match repo
9250,Update Helm docs to match repo,
9251,docs: Fix documentation for kv store create endpoint (#6940),
9252,envoy: replace ca filename with inline_bytes. (#6822),
9253,tests: switch to WithinDuration to improve test (#6860), Switch to WithinDuration to improve test  This test was flaky before because of the time logic. Now it uses WithinDuration and should be correct. Fixes https://github.com/hashicorp/consul/issues/6857.
9254,Document that env vars can't be used for config (#6912), Document that env vars can't be used for config  Environment variables are not read for config values when starting the Consul agent. Document this.
9255,accept go get command with go 1.13 (#6938),
9256,build: fix makefile and CI 'fmt' and 'vet' tasks (#6937),
9257,docs: Fixed typo for 'consul members' link (#6918),Quick fix on a small typo I noticed while reading the docs on this command.
9258,Merge pull request #6928 from mkcp/contributing-vrsn-note,Update CONTRIBUTING.md w/ stipulation that go 1.13 is not yet supported
9259,Update .github/CONTRIBUTING.md,Add rboyer's suggestion Co-Authored-By: R.B. Boyer public@richardboyer.net
9260,correct website download version to 1.6.2 (#6927),
9261,Update CONTRIBUTING.md w/ stipulation that go 1.13 is not yet supported,
9262,website: add 1.7.0 Beta announcement to Downloads page (#6911),  website: add 1.7.0 Beta announcement to Downloads page   Update downloads.html.erb 
9263,reset dev tree (#6925),
9264,Namespaces docs updates (#6924),Namespaces docs updates
9265,Fix typos and add expand wildcard ns docs,
9266,Remove docs refs to NS inference from ACL token,
9267,Release v1.7.0-beta1,
9268,update bindata_assetfs.go,
9269,Fix blocking for ServiceDumping by kind (#6919),
9270,ui: Explicitly remove properties that shouldn't be sent when saving (#6917),
9271,Update CHANGELOG.md,
9272,Update CHANGELOG.md,
9273,add arm fix and apple notarization to changelog (#6916),
9274,Update CHANGELOG.md,
9275,Update CHANGELOG.md,
9276,Update CHANGELOG.md,
9277,Ensure AbortErrors have a zero status (#6839),
9278,agent: fix watch event behavior (#5265),"Use an equality match on the last event id, not a small value, to correct the random nature of the trigger"
9279,Sync of OSS changes to support namespaces (#6909),
9280,Update CHANGELOG.md,
9281,ci: set GOMAXPROCS (#6908), ci: add comment clarify rationale for setting GOMAXPROCS
9282,coverage: add initial .codecov.yml config (#6873),  coverage: remove reach graph from comment   coverage: add patch status coverage target 
9283,[ci] fix: go-fmt fails on master branch (#6906),
9284,Merge pull request #6902 from hashicorp/k8s-auto-join-min-perms,Clarify the minimum permissions required for k8s auto-join
9285,Clarify minimum perms required for k8s auto-join,
9286,Fix the TestAPI_CatalogRegistration test,
9287,tls: auto_encrypt and verify_incoming (#6811) (#6899), relax requirements for auto_encrypt on server better error message when auto_encrypt and verify_incoming on docs: explain verify_incoming on Consul clients.
9288,agent: fewer file local differences between enterprise and oss (#6820) (#6898)," Increase number to test ignore. Consul Enterprise has more flags and since we are trying to reduce the differences between both code bases, we are increasing the number in oss. The semantics don't change, it is just a cosmetic thing. Introduce agent.initEnterprise for enterprise related hooks. Sync test with ent version. Fix import order. revert error wording."
9289,Merge pull request #6895 from hashicorp/reset-docs,Link directly to reset
9290,Miscellaneous Fixes (#6896),Ensure we close the Sentinel Evaluator so as not to leak go routines Fix a bunch of test logging so that various warnings when starting a test agent go to the ltest logger and not straight to stdout. Various canned ent meta types always return a valid pointer (no more nils). This allows us to blindly deref + assign in various places. Update ACL index tracking to ensure oss -> ent upgrades will work as expected. Update ent meta parsing to include function to disallow wildcarding.
9291,Link directly to reset,
9292,Add Namespace support to the API module and the CLI commands (#6874),Also update the Docs and fixup the HTTP API to return proper errors when someone attempts to use Namespaces with an OSS agent. Add Namespace HTTP API docs Make all API endpoints disallow unknown fields
9293,[Feature] API: Add a internal endpoint to query for ACL authori… (#6888),  Implement endpoint to query whether the given token is authorized for a set of operations   Updates to allow for remote ACL authorization via RPC   This is only used when making an authorization request to a different datacenter.
9294,docs: Fix expose path HTTP listener ports,"The listener ports specified in the headings for the HTTP and HTTP2 examples do not match the ports in the corresponding service registration configurations. This commit changes the port specified in the heading for the HTTP listener to match the port used in the service registration example. In addition, the listener_port specified for the HTTP2 listener is modified to match the port number specified in the heading."
9295,Fix the TestLeader_SecondaryCA_IntermediateRefresh test flakine… (#6885),Fix the TestLeader_SecondaryCA_IntermediateRefresh test flakiness
9296,Update CHANGELOG.md,
9297,Update CHANGELOG.md,
9298,add tencentcloud auto join docs (#6818),
9299,tests: increase TLSHandshakeTimeout to help slow tests (#6864),Fixes https://github.com/hashicorp/consul/issues/6858.
9300,Fix the TestLeader_SecondaryCA_IntermediateRefresh test flakiness,
9301,Fix consul connect token env variable doc (#5942),The cli documentation for consul connect commands incorrectly indicated to use CONSUL_TOKEN instead of CONSUL_HTTP_TOKEN env var.
9302,test: wait for Serf check in TestServicesWatch (#6867),Following example from TestNodesWatch  test: WaitForSerfCheck all the places in api/watch_funcs_test.go
9303,Bump go-discover to support EC2 Metadata Service v2 (#6865),"Refs https://github.com/hashicorp/go-discover/pull/128  deps: add replace directive for gocheck  Transitive dep, source at https://launchpad.net/gocheck indicates project moved. This also avoids a dependency on bzr when fetching modules. Refs https://github.com/hashicorp/consul/pull/6818   deps: make update-vendor   test: update retry-join expected names from go-discover "
9304,Merge pull request #6849 from hashicorp/helm-chart-docs,Reorg helm chart docs
9305,Reorg helm chart docs," Remove duplicate install instructions from the Helm Chart page and kept them in Running Consul Renamed Helm Chart to Helm Chart Reference because that's mostly what it contains (along with some examples) Renamed Running Consul to Installing Consul Changed instructions to be for installing using Helm 3 and added   notes if using Helm 2 Used release name ""hashicorp"" so subsequent instructions can be more concise and pastable, e.g. ""port forward to svc/hashicorp-consul-server"" vs. ""port forward to svc/-consul-server"" Use config.yaml as the name for the override values file since it differentiates from the default values.yaml file and its the name of the file used in the helm docs (https://helm.sh/docs/intro/using_helm/#customizing-the-chart-before-installing)"
9306,Update CHANGELOG.md,
9307,Allow configuration of upstream connection limits in Envoy (#6829)," Adds 'limits' field to the upstream configuration of a connect proxy  This allows a user to configure the envoy connect proxy with 'max_connections', 'max_queued_requests', and 'max_concurrent_requests'. These values are defined in the local proxy on a per-service instance basis and should thus NOT be thought of as a global-level or even service-level value."
9308,Docs/consul k8s existing pvc (#6872),Update docs for using pre-existing PVCs with helm
9309,Fix dns service SRV lookup when service address is a fqdn (#6792),Fix dns service SRV lookup when service address is a fqdn
9310,Merge pull request #6855 from hashicorp/opaque-config-examples,Document how to json encode envoy config
9311,Merge pull request #6798 from hashicorp/namespace-selector-docs,Fix documentation for namespaceSelector
9312,docs: Rename TTL to Timeout in Script/TCP checks,"TTL and Interval options were made mutually exclusive in https://github.com/hashicorp/consul/pull/3560. Change to Timeout, which is a correct parameter for HTTP, Script, and TCP checks. Resolves #6343"
9313,Fix documentation for namespaceSelector,Also remove the example for using namespace selector because it requires labelling a namespace which is harder to explain.
9314,give feedback to CLI user on forceleave command if node does not exist (#6841),
9315,Document how to json encode envoy config,It wasn't clear how users should encode their config.
9316,Merge pull request #6854 from hashicorp/fix-helm-docs,Fix helm docs bug
9317,Fix helm docs bug,"If the ServiceAccount isn't applied first, we get an error since the Pod references a non-existing ServiceAccount"
9318,update changelog,
9319,xds: mesh gateway CDS requests are now allowed to receive an empty CDS reply (#6787),This is the rest of the fix for #6543 that was incompletely fixed in #6576.
9320,Merge pull request #6722 from hashicorp/jump-to-section,"Add ""jump to section"" dropdown"
9321,"Add ""jump to section"" dropdown",
9322,OSS Modifications necessary for Sessions and KV namespacing (#6837),OSS Modifications necessary for Sessions and KV namespacing
9323,Turn down some parallelism,
9324,OSS KV Modifications to Support Namespaces,
9325,OSS Modifications necessary for sessions namespacing,
9326,docs: Fix links to K8s L7 observability guide (#6834),
9327,docs: Fix links to Sentinel docs for Consul,Current URL returns a 404 error. Correct links to point to the proper URL.
9328,removed kubecon banner (#6827),
9329,add code coverage reporting (#6682),  add coverage reporting   add codecov reports   pass in SHA to codecov   ignore bindata_assetfs.go file from codecov 
9330,Update CHANGELOG.md,
9331,connect: Add AWS PCA provider (#6795),"  Update AWS SDK to use PCA features.   Add AWS PCA provider   Add plumbing for config, config validation tests, add test for inheriting existing CA resources created by user   Unparallel the tests so we don't exhaust PCA limits   Merge updates   More aggressive polling; rate limit pass through on sign; Timeout on Sign and CA create   Add AWS PCA docs   Fix Vault doc typo too   Doc typo   Apply suggestions from code review   Co-Authored-By: R.B. Boyer rb@hashicorp.com Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com   Doc fixes; tests for erroring if State is modified via API   More review cleanup   Uncomment tests!   Minor suggested clean ups "
9332,fixing link (#6817),
9333,Replacing updgrade jtbd with k8s (#6813),
9334,website - add -moz-osx-font-smoothing for smooth firefox osx fonts (#6755),
9335,Update CHANGELOG.md,
9336,Update CHANGELOG.md for sentinel/v0.13.0,
9337,test: unflake two TestHealthServiceNode_* tests,Replaces WaitForLeader with WaitForTestAgent. This waits to make sure that the node itself is correctly registered in the catalog before attempting additional registrations.
9338,test: unflake TestDNS_ServiceLookup_WanTranslation,Use retry.R struct to check length of WANMembers so that retries can work appropriately.
9339,test: unflake TestCatalogServiceNodes_DistanceSort,Remove a time.Sleep and replace with retry.Run around call to CatalogServiceNodes.
9340,Improve session API documentation, Remove incorrect statement that LockDelay must be greater than 0 Add sentence to the top of the page pointing to the internal document describing the sessions mechanism for more context
9341,[WIP] Kubernetes Docs (#6770),  adding cloud providers for k8s   adding links   added utm parameters   Updating descriptions   fix sidenav   renaming page minikube 
9342,website: alert for kubecon (#6806),  website: alert for kubecon   Update website/source/index.html.erb 
9343,update changelog after 1.6.2 release (#6803),
9344,docs: add sentence linking to available service-resolver filters,Resolves #6434
9345,Change CA Configure struct to pass Datacenter through (#6775),  Change CA Configure struct to pass Datacenter through   Remove connect/ca/plugin as we don't have immediate plans to use it.   We still intend to one day but there are likely to be several changes to the CA provider interface before we do so it's better to rebuild from history when we do that work properly.  Rename PrimaryDC; fix endpoint in secondary DCs
9346,change sysctl call to use absolute path,Fixes: #6804
9347,Allow services register command to register an unnamed check,"The logic in parsing data files and converting them to data structures accidentally removed healthchecks with no Name field, even though we explicitly state in API documentation that is allowed. We remove the check for ""len(results.Checks) == 1"" because if the length of the array is more than 0, we know that it is not a zero value array. This allows us to register a singular, unnamed check via the CLI. Fixes #6796"
9348,Track the correct check id for idempotent service/check updates (#6794),
9349,Finish the comment,
9350,Track the correct check id for idempotent service/check updates,
9351,Fix dns service SRV lookup when service address is a fqdn,Refactor dns to have same behavior between A and SRV. Current implementation returns the node name instead of the service address. With this fix when querying for SRV record service address is return in the SRV record. And when performing a simple dns lookup it returns a CNAME to the service address.
9352,Add missing docs for checks Watch type (#5188),"Add configuration examples for specifying watch checks by health check state or service, and corresponding CLI examples. Resolves: #5188"
9353,add changelog entry for ARM builds (#6786),
9354,add arm download notes (#6785),
9355,Update CHANGELOG.md (#6489),
9356,tls: return auto_encrypt cert for listeners (#6489),  fix cert check   fix lock   add tests   test: add comments describing expected behavior for auto-encrypt and manual certificates   test: expect nil *tls.Certificate for empty string certFile or keyFile arg 
9357,fixing buttons (#6772),
9358,Support Connect CAs that can't cross sign (#6726),"  Support Connect CAs that can't cross sign   revert spurios mod changes from make tools   Add log warning when forcing CA rotation   Fixup SupportsCrossSigning to report errors and work with Plugin interface (fixes tests)   Fix failing snake_case test   Remove misleading comment   Revert ""Remove misleading comment""   This reverts commit bc4db9cabed8ad5d0e39b30e1fe79196d248349c.   Remove misleading comment   Regen proto files messed up by rebase "
9359,connect: Allow CA Providers to store small amount of state (#6751),  pass logger through to provider   test for proper operation of NeedsLogger   remove public testServer function   Ooops actually set the logger in all the places we need it - CA config set wasn't and causing segfault   Fix all the other places in tests where we set the logger   Allow CA Providers to persist some state   Update CA provider plugin interface   Fix plugin stubs to match provider changes   Update agent/connect/ca/provider.go   Co-Authored-By: R.B. Boyer rb@hashicorp.com  Cleanup review comments
9360,connect: Implement NeedsLogger interface for CA providers (#6556),  add NeedsLogger to Provider interface   implements NeedsLogger in default provider   pass logger through to provider   test for proper operation of NeedsLogger   remove public testServer function   Switch test to actually assert on logging output rather than reflection.   --amend   Ooops actually set the logger in all the places we need it - CA config set wasn't and causing segfault   Fix all the other places in tests where we set the logger   Add TODO comment 
9361,Make all Connect Cert Common Names valid FQDNs (#6423),
9362,Refactor the Read Namespace requests to not use the query funct… (#6720),The query function doesn’t handle non-200 return codes properly so this ended up still trying to decode the body which resulted in weird error messages.
9363,[Website] Add JTBD - WIP (#6673),  updating the landing page with jtbd   changed the buttons to pink   updating CSS based on John's help   updating a use case   updating the language and rearranging the guides   adding icons   fixed image width   fixing buttons and updating traffic splitting language. 
9364,Update CHANGELOG.md (#6761),
9365,"sdk: add NewTestServerT, deprecate NewTestServer (#6761)",  prevent nil pointer deref from t.Logf usage   enforce non-nil *testing.T in NewTestServerT 
9366,Update CHANGELOG.md (#6760),
9367,upgrade go to 1.12.13 (#6759),
9368,ignore all workflows except website for stable-website (#6747),
9369,docs: Add link to config entries,
9370,Adds crystal-consul to libraries & sdk docs,
9371,fix dead link in INTERNALS.md,
9372,Update proxies.html.md (#6754),Missing preposition.
9373,docs: Fix delete config entry description (#6593),Fix the documentation to correctly state the HTTP DELETE method will remove the specified config entry.
9374,website - font and brand updates (#6716),  website - font and brand updates   sidebar font-size adjustments and scss cleanup   adjust nav and inline code styles 
9375,docs: Miscellaneous docs cleanup (#6742),"Fix spelling errors, API doc inconsistencies, and formatting issues.  Fix several spelling errors. Prepend / to v1/event/list path in Watches. Rename script handlers to match Watch type. Remove /v1 path prefix on service health API endpoints.  Makes request path consistent with the rest of the HTTP API documentation which does not include the /v1 prefix.  Fix bracket formatting issue on Telemetry page.  The HTML codes used for brackets inside of the code block are not interpolated, and are shown as literal strings. Replace the numeric HTML codes with the intended character value to fix display formatting. Also placed variable reference on agent/options.html inside code block for consistency with the presentation of other options on the page.  Add missing word to Coordinate.Node docstring.  Resolves #6014"
9376,build: prevent 'make tools' from editing go.mod and go.sum (#6738),
9377,Fix docs for replace-existing-checks parameter,
9378,[docs] Fix sentence order for GCE Cloud Auto-Join,
9379,Fix typo in config HTTP API documentation,
9380,[Docs] Fix typo (#6523),
9381,Merge pull request #6710 from hashicorp/docs/connect-nomad,[docs] Updating Nomad Consul Connect info
9382,docs: fix hcl use on production acls guide (#6739),Also clean up some general whitespace formatting.
9383,Fill the Authz Context with a Sentinel Scope (#6729),
9384,Fix type name (#6728),
9385,Add DirEntry method to fill enterprise authz context,
9386,Miscellaneous fixes (#6727),
9387,update CHANGELOG.md,
9388,Update CHANGELOG.md,
9389,Case sensitive Authorization header with lower-cased scheme in… (#6724),
9390,Update CHANGELOG.md,
9391,Fix support for RSA CA keys in Connect. (#6638),"  Allow RSA CA certs for consul and vault providers to correctly sign EC leaf certs.   Ensure key type ad bits are populated from CA cert and clean up tests   Add integration test and fix error when initializing secondary CA with RSA key.   Add more tests, fix review feedback   Update docs with key type config and output   Apply suggestions from code review   Co-Authored-By: R.B. Boyer rb@hashicorp.com"
9392,docs: mention that all logging flags also work in the config file (#6705),
9393,update CONTRIBUTING.md to build consul with 1.12+ (#6723),
9394,Merge pull request #6583 from hashicorp/connect-annotations,Document new annotations for Connect injections
9395,Update mediums on main community page (#6699),"Updating all .io Community sites to direct practitioners to the Forum as the first medium for communicating with other users and HashiCorp employees. Deleted Gitter link and Google Group link, as these will be phased out over the next few months. Updated what appeared to be a typo on the page description. Chatted with Nic Jackson before submitting PR."
9396,Fix the Synthetic Policy Tests (#6715),
9397,Add hook for validating the enterprise meta attached to a reque… (#6695),
9398,Add note about RPC multiplexing and TLS content type mutual exc… (#6698),
9399,PreVerify acl:read access for listing endpoints (#6696),We still will need to filter results based on the authorizer too but this helps to give an early 403.
9400,removed the term easy and updated the formatting,
9401,Updating Nomad Consul Connect info,
9402,Use encoding/json as JSON decoder instead of mapstructure (#6680),Fixes #6147
9403,Update CHANGELOG.md,
9404,Set MinQuorum variable in Autopilot (#6654), Add MinQuorum to Autopilot
9405,Update -protocol doc (#6681), Update -protocol to have more clear version wording  Co-Authored-By: Judith Malnick judith.patudith@gmail.com
9406,More Replication Abstractions (#6689),Also updated ACL replication to use a function to fill in the desired enterprise meta for all remote listing RPCs.
9407,Merge pull request #6683 from hashicorp/service-account-connect-inject-docs,Document service account name requirements
9408,Ensure that cache entries for tokens are prefixed “token-secret… (#6688),This will be necessary once we store other types of identities in here.
9409,Update the ACL Resolver to allow for Consul Enterprise specific hooks. (#6687),
9410,Document service account name requirements,"If ACLs are enabled, service account name must match the name of the service in Consul. Fixes https://github.com/hashicorp/consul-helm/issues/202"
9411,Updates to allow for Namespacing ACL resources in Consul Enterp… (#6675),Main Changes: • method signature updates everywhere to account for passing around enterprise meta. • populate the EnterpriseAuthorizerContext for all ACL related authorizations. • ACL resource listings now operate like the catalog or kv listings in that the returned entries are filtered down to what the token is allowed to see. With Namespaces its no longer all or nothing. • Modified the acl.Policy parsing to abstract away basic decoding so that enterprise can do it slightly differently. Also updated method signatures so that when parsing a policy it can take extra ent metadata to use during rules validation and policy creation. Secondary Changes: • Moved protobuf encoding functions out of the agentpb package to eliminate circular dependencies. • Added custom JSON unmarshalers for a few ACL resource types (to support snake case and to get rid of mapstructure) • AuthMethod validator cache is now an interface as these will be cached per-namespace for Consul Enterprise. • Added checks for policy/role link existence at the RPC API so we don’t push the request through raft to have it fail internally. • Forward ACL token delete request to the primary datacenter when the secondary DC doesn’t have the token. • Added a bunch of ACL test helpers for inserting ACL resource test data.
9412,missed UTM parameter (#6679),
9413,fixing ACL reset links (#6678),
9414,modify netlify-cli installation (#6674),  modify netlify CLI installation   bump middleman-hashicorp to 0.3.40 to include ssh 
9415,regression tests for existing agent/ decoding behavior (#6624),tests for existing JSON decoding behavior
9416,Top Navigation change (#6630),  Changed Guides to Learn in the top nav and added utm parameters to the guide index page   Update website/source/docs/guides/index.html.md   Update website/source/docs/guides/index.html.md   Update website/source/layouts/layout.erb 
9417,Fix indention problems with stale.yml (#6663),
9418,chore: Add probot (#6642), add stalebot
9419,Update CHANGELOG.md,
9420,fix: incorrect struct tag and WaitGroup usage (#6649),  remove duplicated json tag   fix: incorrect wait group usage 
9421,update changelog,
9422,agent: allow mesh gateways to initialize even if there are no connect services registered yet (#6576),Fixes #6543 Also improved some of the proxycfg tests to cover snapshot validity better.
9423,update changelog,
9424,xds: tcp services using the discovery chain should not assume RDS during LDS (#6623),Previously the logic for configuring RDS during LDS for L7 upstreams was overapplied to TCP proxies resulting in a cluster name of  being used incorrectly. Fixes #6621
9425,Update CHANGELOG.md,
9426,Store check type in catalog (#6561),
9427,update changelog,
9428,sdk: ignore panics due to stray goroutines logging after a test completes (#6632),"If there is imperfect goroutine lifespan tracking if we pipe our logs through testing.T.Logf there is a chance of a stray goroutine attempting to log after the test that spawned it completes. This results in a panic of: panic: Log in goroutine after TestLeader_SecondaryCA_Initialize has completed...  This isn't great and should be fixed, but quickly runs into situations around externally cancelling blocking queries which isn't terribly possible at the moment. The concession here is to ignore these specific panics for now. This can be triggered easily when running some tests with a high -count=YYY value."
9429,update changelog,
9430,server: ensure the primary dc and ACL dc match (#6634),This is mostly a sanity check for server tests that skip the normal config builder equivalent fixup.
9431,unflake TestLeader_SecondaryCA_Initialize (#6631),
9432,updating broken link (#6633),
9433,fix flaky multidc acl tests that failed to wait for token replication (#6628),If acls have not yet replicated to the secondary then authz requests will be remotely resolved by the primary. Now these tests explicitly wait until replication has caught up first.
9434,appease the retry linter (#6629),
9435,Dependency: Update github.com/hashicorp/go-memdb to v1.0.3 (#6626),
9436,Allow time for secondary CA to initialize (#6627),
9437,ACL Authorizer overhaul (#6620), ACL Authorizer overhaul  To account for upcoming features every Authorization function can now take an extra *acl.EnterpriseAuthorizerContext. These are unused in OSS and will always be nil. Additionally the acl package has received some thorough refactoring to enable all of the extra Consul Enterprise specific authorizations including moving sentinel enforcement into the stubbed structs. The Authorizer funcs now return an acl.EnforcementDecision instead of a boolean. This improves the overall interface as it makes multiple Authorizers easily chainable as they now indicate whether they had an authoritative decision or should use some other defaults. A ChainedAuthorizer was added to handle this Authorizer enforcement chain and will never itself return a non-authoritative decision.   Include stub for extra enterprise rules in the global management policy   Allow for an upgrade of the global-management policy 
9438,Update CHANGELOG.md,
9439,Checks to passing/critical only after reaching a consecutive success/failure threshold (#5739),"A check may be set to become passing/critical only if a specified number of successive checks return passing/critical in a row. Status will stay identical as before until the threshold is reached. This feature is available for HTTP, TCP, gRPC, Docker & Monitor checks."
9440,[docs] Adding Links to Learn (#6611),  adding links to Learn   fixing a couple typos   adding utm paramaters   Update website/source/docs/connect/registration/sidecar-service.md   Update website/source/docs/connect/registration/sidecar-service.md   Update website/source/docs/acl/acl-system.html.md   Update website/source/docs/acl/acl-system.html.md   Update website/source/docs/agent/encryption.html.md   Co-Authored-By: Judith Malnick judith.patudith@gmail.com  Update website/source/docs/connect/proxies/built-in.md  Co-Authored-By: Judith Malnick judith.patudith@gmail.com  Update website/source/docs/connect/registration/sidecar-service.md  Co-Authored-By: Judith Malnick judith.patudith@gmail.com  Update website/source/docs/install/index.html.md  Co-Authored-By: Judith Malnick judith.patudith@gmail.com   Update website/source/docs/agent/kv.html.md   Update website/source/docs/connect/security.html.md   Update website/source/docs/connect/security.html.md   Update website/source/docs/internals/architecture.html.md 
9441,Add Consul's L7 features to Istio comparison,Add text listing Consul's L7 features (via Envoy). Re-organize text to flow similarly to Istio section. Co-Authored-By: Judith Malnick judith.patudith@gmail.com
9442,ui_content_path config option fix (#6601), fix ui-content-path config option
9443,Do not surface left servers (#6420), do not surface left servers in catalog
9444,add go cache to distro builds (#6600),
9445,add circleci and discuss badge (#6599),
9446,Remove gox usage (#6596),
9447,agent: clients should only attempt to remove pruned nodes once per call (#6591),
9448,Update CHANGELOG.md,
9449,Add support for the Namespace HTTP API in the API Client (#6581),
9450,Document new annotations for Connect injections,
9451,Update CHANGELOG.md,
9452,Prune Unhealthy Agents  (#6571), Add -prune flag to ForceLeave
9453,update changelog,
9454,agent: updates to the agent token trigger anti-entropy full syncs (#6577),
9455,Implement Leader Routine Management (#6580)," Implement leader routine manager  Switch over the following to use it for go routine management: • Config entry Replication • ACL replication - tokens, policies, roles and legacy tokens • ACL legacy token upgrade • ACL token reaping • Intention Replication • Secondary CA Roots Watching • CA Root Pruning Also added the StopAll call into the Server Shutdown method to ensure all leader routines get killed off when shutting down. This should be mostly unnecessary as revokeLeadership should manually stop each one but just in case we really want these to go away (eventually)."
9456,Use encoding/json instead of jsonpb even for protobuf types (#6572),This only works so long as we use simplistic protobuf types. Constructs such as oneof or Any types that require type annotations for decoding properly will fail hard but that is by design. If/when we want to use any of that we will probably need to consider a v2 API.
9457,check for go binary in ci builds (#6570),
9458,Add EnterpriseConfig stubs (#6566),
9459,Generate JSON and Binary Marshalers for Protobuf Types (#6564),  Add JSON and Binary Marshaler Generators for Protobuf Types   Generate files with the correct version of gogo/protobuf   I have pinned the version in the makefile so when you run make tools you get the right version. This pulls the version out of go.mod so it should remain up to date. The version at the time of this commit we are using is v1.2.1   Fixup some shell output   Update how we determine the version of gogo This just greps the go.mod file instead of expecting the go mod cache to already be present   Fixup vendoring and remove no longer needed json encoder functions 
9460,ui: UI Release Merge (ui-staging merge) (#6527),"HTTPAdapter (#5637) Ember upgrade 2.18 > 3.12 (#6448) Proxies can no longer get away with not calling _super This means that we can't use create anymore to define dynamic methods. Therefore we dynamically make 2 extended Proxies on demand, and then create from those. Therefore we can call _super in the init method of the extended Proxies. We aren't allowed to reset a service anymore We never actually need to now anyway, this is a remnant of the refactor from browser based confirmations. We fix it as simply as possible here but will revisit and remove the old browser confirm functionality at a later date Revert classes to use ES5 style to workaround babel transp. probs Using a mixture of ES6 classes (and hence super) and arrow functions means that when babel transpiles the arrow functions down to ES5, a reference to this is moved before the call to super, hence causing a js error. Furthermore, we the testing environment no longer lets use use apply/call on the constructor. These errors only manifests during testing (only in the testing environment), the application itself runs fine with no problems without this change. Using ES5 style class definitions give us freedom to do all of the above without causing any errors, so we reverted these classes back to ES5 class definitions Skip test that seems to have changed due to a change in RSVP timing This test tests a usecase/area of the API that will probably never ever be used, it was more testing out the API. We've skipped the test for now as this doesn't affect the application itself, but left a note to come back here later to investigate further Remove enumerableContentDidChange Initial testing looks like we don't need to call this function anymore, the function no longer exists Rework Changeset.isSaving to take into account new ember APIs Setting/hanging a computedProperty of an instantiated object no longer works. Move to setting it on the prototype/class definition instead Change how we detect whether something requires listening New ember API's have changed how you can detect whether something is a computedProperty or not. It's not immediately clear if its even possible now. Therefore we change how we detect whether something should be listened to or not by just looking for presence of addEventListener Potentially temporary change of ci test scripts to ensure deps exist All our tooling scripts run through a Makefile (for people familiar with only using those), which then call yarn scripts which can be called independently (for people familar with only using yarn). The Makefile targets always check to make sure all the dependencies are installed before running anything that requires them (building, testing etc). The CI scripts/targets didn't follow this same route and called the yarn scripts directly (usually CI builds a cache of the dependencies first). For some reason this cache isn't doing what it usually does, and it looks as though, in CI, ember isn't installed. This commit makes the CI scripts consistently use the same method as all of the other tooling scripts (Makefile target > Install Deps if required > call yarn script). This should install the dependencies if for some reason the CI cache building doesn't complete/isn't successful. Potentially this commit may be reverted if, the root of the problem is elsewhere, although consistency is always good, so it might be a good idea to leave this commit as is even if we need to debug and fix things elsewhere. Make test-parallel consistent with the rest of the tooling scripts As we are here making changes for CI purposes (making test-ci consistent), we spotted that test-parallel is also inconsistent and also the README manual instructions won't work without ember installed globally. This commit makes everything consistent and changes the manual instructions to use the local ember instance that gets installed via yarn Re-wrangle catchable to fit with new ember 3.12 APIs In the upgrade from ember 3.8 > 3.12 the public interfaces for ComputedProperties have changed slightly. meta is no longer a public property of ComputedProperty but of a ComputedDecoratorImpl mixin instead. https://github.com/emberjs/ember.js/blob/7e4ba1096e3c2e3e0dde186d5ca52ff19cb8720a/packages/%40ember/-internals/metal/lib/computed.ts#L725 There seems to be no way, by just using publically available methods, to replicate this behaviour so that we can create our own 'ComputedProperty` factory via injecting the ComputedProperty class as we did previously. https://github.com/hashicorp/consul/blob/3f333bada181aaf6340523ca2268a28d1a7db214/ui-v2/app/utils/computed/factory.js#L1-L18 Instead we dynamically hang our Catchable catch method off the instantiated ComputedProperty. In doing it like this ComputedProperty has already has its meta method mixed in so we don't have to manually mix it in ourselves (which doesn't seem possible) This functionality is only used during our work in trying to ensure our EventSource/BlockingQuery work was as 'ember-like' as possible (i.e. using the traditional Route.model hooks and ember-like Controller properties). Our ongoing/upcoming work on a componentized approach to data a.k.a <DataSource /> means we will be able to remove the majority of the code involved here now that it seems to be under an amount of flux in ember. Build bindata_assetfs.go with new UI changes"
9461,Update Force Leave docs (#6550),"Fixes #2742 Previously the docs didn't clarify that if a server restarts as a client then force-leave won't lead to removing the node from the raft config. This is because the node, which is alive after a restart, will refute messages about it having left . These messages about members leaving are in turn what trigger Consul's leader to remove a server from raft."
9462,Add support for parameterizing the ACL config used with a TestA… (#6559), Add support for parameterizing the ACL config used with a TestAgent  Using tokens that are UUIDs will get rid of some warnings  Refactor to allow setting all tokens and change the template to ignore unset values.
9463,docs: add managed proxy removal note to specific version upgrade notes (#6557),
9464,Specify that mesh gateways require Envoy (#6506),  Specify that mesh gateways must operate on L7   Add feedback from Matt   clarify gateway requirements 
9465,Update CHANGELOG.md,
9466,update changelog,
9467,connect: connect CA Roots in secondary datacenters should use a SigningKeyID derived from their local intermediate (#6513),This fixes an issue where leaf certificates issued in secondary datacenters would be reissued very frequently (every ~20 seconds) because the logic meant to detect root rotation was errantly triggering because a hash of the ultimate root (in the primary) was being compared against a hash of the local intermediate root (in the secondary) and always failing.
9468,Add Namespace as an api query/write option (#6551),
9469,update changelog,
9470,agent: cache notifications work after error if the underlying RPC returns index=1 (#6547),"Fixes #6521 Ensure that initial failures to fetch an agent cache entry using the notify API where the underlying RPC returns a synthetic index of 1 correctly recovers when those RPCs resume working. The bug in the Cache.notifyBlockingQuery used to incorrectly ""fix"" the index for the next query from 0 to 1 for all queries, when it should have not done so for queries that errored. Also fixed some things that made debugging difficult:  config entry read/list endpoints send back QueryMeta headers xds event loops don't swallow the cache notification errors"
9471,Expand the QueryOptions and QueryMeta interfaces (#6545),In a previous PR I made it so that we had interfaces that would work enough to allow blockingQueries to work. However to complete this we need all fields to be settable and gettable. Notes:    • If Go ever gets contracts/generics then we could get rid of all the Getters/Setters    • protoc / protoc-gen-gogo are going to generate all the getters for us.    • I copied all the getters/setters from the protobuf funcs into agent/structs/protobuf_compat.go    • Also added JSON marshaling funcs that use jsonpb for protobuf types.
9472,Expose HTTP-based paths through Connect proxy (#6446),"Fixes: #5396 This PR adds a proxy configuration stanza called expose. These flags register listeners in Connect sidecar proxies to allow requests to specific HTTP paths from outside of the node. This allows services to protect themselves by only listening on the loopback interface, while still accepting traffic from non Connect-enabled services. Under expose there is a boolean checks flag that would automatically expose all registered HTTP and gRPC check paths. This stanza also accepts a paths list to expose individual paths. The primary use case for this functionality would be to expose paths for third parties like Prometheus or the kubelet. Listeners for requests to exposed paths are be configured dynamically at run time. Any time a proxy, or check can be registered, a listener can also be created. In this initial implementation requests to these paths are not authenticated/encrypted."
9473,remove alert bar on homepage (#6544),
9474,tests: make envoy integration tests more tolerant of internal retries that may inflate counters (#6539),"This should remove false positives that look like: cluster.s2.default.primary.*cx_total - expected count: 2, actual count: 3"
9475,api/watch: try to avoid more flakes in this package (#6538),
9476,update changelog,
9477,agent: tolerate more failure scenarios during service registration with central config enabled (#6472),Also:   Finished threading replaceExistingChecks setting (from GH-4905)   through service manager.   Respected the original configSource value that was used to register a   service or a check when restoring persisted data.   Run several existing tests with and without central config enabled   (not exhaustive yet).   Switch to ioutil.ReadFile for all types of agent persistence. 
9478,Allow for enterprise only leader routines (#6533),Eventually I am thinking we may need a way to register these at different priority levels but for now sticking this here is fine
9479,update changelog,
9480,connect: don't colon-hex-encode the AuthorityKeyId and SubjectKeyId fields in connect certs (#6492),"The fields in the certs are meant to hold the original binary representation of this data, not some ascii-encoded version. The only time we should be colon-hex-encoding fields is for display purposes or marshaling through non-TLS mediums (like RPC)."
9481,connect: intermediate CA certs generated with the vault provider lack URI SANs (#6491),"This only affects vault versions >=1.1.1 because the prior code accidentally relied upon a bug that was fixed in https://github.com/hashicorp/vault/pull/6505 The existing tests should have caught this, but they were using a vendored copy of vault version 0.10.3. This fixes the tests by running an actual copy of vault instead of an in-process copy. This has the added benefit of changing the dependency on vault to just vault/api. Also update VaultProvider to use similar SetIntermediate validation code as the ConsulProvider implementation."
9482,ci: ensure build-distros uses the same go.mod file as normal builds,When running 'make tools' the go command indirectly edits both the go.mod and go.sum files in ways that can cause the later build of consul itself to build with slightly different dependencies than it normally would.
9483,website: update alert bar on homepage (#6518),Per @changli0617
9484,Nil checks in the testWriter to prevent using a bad testing.TB (#6517),Also needed to update some funcs that were taking a *testing.T to use a testing.TB. This prevents passing a nil pointer as a non-nil interface value and thus making it impossible to detect nil before using the interfaces functions.
9485,Dont crash in the testutil server creation (#6516),
9486,Add support for implementing new requests with protobufs instea… (#6502), Add build system support for protobuf generation  This is done generically so that we don’t have to keep updating the makefile to add another proto generation. Note: anything not in the vendor directory and with a .proto extension will be run through protoc if the corresponding namespace.pb.go file is not up to date. If you want to rebuild just a single proto file you can do so with: make proto-rebuild PROTOFILES= Providing the PROTOFILES var will override the default behavior of finding all the .proto files.  Start adding types to the agent/proto package  These will be needed for some other work and are by no means comprehensive.   Add ability to resolve/fixup the agentpb.ACLLinks structure in the state store.   Use protobuf marshalling of raft requests instead of msgpack for protoc generated types.   This does not change any encoding of existing types.  Removed structs package automatically encoding with protobuf marshalling  Instead the caller of raftApply that wants to opt-in to protobuf encoding will have to call raftApplyProtobuf  Run update-vendor to fixup modules.txt  Nothing changed as far as dependencies go but the ordering of modules in that file depends on the time they are first seen and its not alphabetical.  Rename some things and implement the structs.RPCInfo interface bits  agentpb.QueryOptions and agentpb.WriteRequest implement 3 of the 4 RPCInfo funcs and the new TargetDatacenter message type implements the fourth.   Use the right encoding function.   Renamed agent/proto package to agent/agentpb to prevent package name conflicts   Update modules.txt to fix ordering   Change blockingQuery to take in interfaces for the query options and meta   Add %T to error output.   Add/Update some comments 
9487,Merge pull request #6511 from hashicorp/code-highlighting,Give code blocks coloured background
9488,Merge pull request #6460 from hashicorp/helm-wait,Update consul-helm enterprise docs for ACLs
9489,"website, add git2consul-go to the tools list (#6286)",Signed-off-by: bjaroszewski bjaroszewski@griddynamics.com
9490,Update consul-helm enterprise docs for ACLs,If ACLs are added then slightly different commands are needed.
9491,Update Consul DNS on kube docs, fix instructions for CoreDNS (it updated) fix instructions for new component names recommend installing with the name 'consul' add disclaimer that catalog sync is not always required clean up example values.yaml files
9492,Give code blocks coloured background,This will make them stand out more and matches the style of terraform.io
9493,remove nightly master merge into release/ job (#6510),
9494,api/watch: reduce timing dependence on tests of watch behavior,Also for debugging purposes send the stdout/stderr streams from consul processes spawned for API tests to testing.T.Logf
9495,Merge pull request #6500 from hashicorp/typo-fix,"Fix typo in ""Service Ports"" section"
9496,[docs]Updated Containers Guide (#6215),  Adding the updated containers guide that will be deployed on Learn only.   Update website/source/docs/guides/containers-guide.md   Co-Authored-By: Freddy freddygv@users.noreply.github.com  Update website/source/docs/guides/containers-guide.md  Co-Authored-By: Freddy freddygv@users.noreply.github.com  Update website/source/docs/guides/containers-guide.md  Co-Authored-By: Freddy freddygv@users.noreply.github.com  Update website/source/docs/guides/containers-guide.md  Co-Authored-By: Freddy freddygv@users.noreply.github.com  Update website/source/docs/guides/containers-guide.md  Co-Authored-By: Freddy freddygv@users.noreply.github.com  Update website/source/docs/guides/containers-guide.md  Co-Authored-By: Freddy freddygv@users.noreply.github.com  Update website/source/docs/guides/containers-guide.md  Co-Authored-By: Freddy freddygv@users.noreply.github.com  Update website/source/docs/guides/containers-guide.md  Co-Authored-By: Freddy freddygv@users.noreply.github.com   Update website/source/docs/guides/containers-guide.md   Update website/source/docs/guides/containers-guide.md   Update website/source/docs/guides/containers-guide.md   Update website/source/docs/guides/containers-guide.md   Update website/source/docs/guides/containers-guide.md   Update website/source/docs/guides/containers-guide.md   Update website/source/docs/guides/containers-guide.md   Update website/source/docs/guides/containers-guide.md   Update website/source/docs/guides/containers-guide.md   Update website/source/docs/guides/containers-guide.md   Update website/source/docs/guides/containers-guide.md   Update website/source/docs/guides/containers-guide.md   Update website/source/docs/guides/containers-guide.md   Update website/source/docs/guides/containers-guide.md   Update website/source/docs/guides/containers-guide.md   Update website/source/docs/guides/containers-guide.md   Update website/source/docs/guides/containers-guide.md 
9497,sdk: add freelist tracking and ephemeral port range skipping to freeport,"This should cut down on test flakiness. Problems handled:   If you had enough parallel test cases running, the former circular approach to handling the port block could hand out the same port to multiple cases before they each had a chance to bind them, leading to one of the two tests to fail.   The freeport library would allocate out of the ephemeral port range. This has been corrected for Linux (which should cover CI).   The library now waits until a formerly-in-use port is verified to be free before putting it back into circulation. "
9498,"Fix typo in ""Service Ports"" section",
9499,ui: [bugfix] Tag wrapping on detail pages (#6478),Makes sure that tags wrap on the detail pages for service and nodes whilst making sure they don't wrap on the listing pages.
9500,docs: Fix typo in acl/acl-rules,
9501,docs: Add .tgz to snapshot restore example (#6476),
9502,fix typo of 'unknown' in log messages,
9503,Update CHANGELOG.md,
9504,docs (Consul Enterprise): Google Cloud Storage snapshot documentation (#6480),
9505,Move tar install forward (#6483),
9506,update changelog,
9507,cache: remove data race in agent cache,In normal operations there is a read/write race related to request QueryOptions fields. An example race: WARNING: DATA RACE Read at 0x00c000836950 by goroutine 30:   github.com/hashicorp/consul/agent/structs.(*ServiceConfigRequest).CacheInfo()       /go/src/github.com/hashicorp/consul/agent/structs/config_entry.go:506 +0x109   github.com/hashicorp/consul/agent/cache.(*Cache).getWithIndex()       /go/src/github.com/hashicorp/consul/agent/cache/cache.go:262 +0x5c   github.com/hashicorp/consul/agent/cache.(*Cache).notifyBlockingQuery()       /go/src/github.com/hashicorp/consul/agent/cache/watch.go:89 +0xd7  Previous write at 0x00c000836950 by goroutine 147:   github.com/hashicorp/consul/agent/cache-types.(*ResolvedServiceConfig).Fetch()       /go/src/github.com/hashicorp/consul/agent/cache-types/resolved_service_config.go:31 +0x219   github.com/hashicorp/consul/agent/cache.(*Cache).fetch.func1()       /go/src/github.com/hashicorp/consul/agent/cache/cache.go:495 +0x112  This patch does a lightweight copy of the request struct so that the embedded QueryOptions fields that are mutated during Fetch() are scoped to just that one RPC.
9508,Also install tar for the website deploy job (#6482),
9509,Release v1.6.1,
9510,update bindata_assetfs.go,
9511,Update CHANGELOG.md,
9512,Update memberlist to v0.1.5 (#6479),
9513,Update CHANGELOG.md,
9514,ci: inject missing tar binary (#6477),
9515,Update CHANGELOG.md,
9516,agent: handleEnterpriseLeave (#6453),
9517,docs: fix typo in install/performance (#6428),
9518,fixed broken links on consul program page (#6463),
9519,docs: added Consul Integration Program Docs Page (#6459), adding the Consul Integration Program page in docs section
9520,test: actually wait for the TestAgent to be fully shutdown (#6441),
9521,change DOCKER_LOGIN env name to DOCKER_USER (#6451),
9522,test: ensure all TestAgent constructions use a constructor (#6443),ensure all TestAgent constructions use a constructor to get start retries + test logs going to the right place Fixes #6435
9523,docs: Fix discovery chain internals link (#6449),
9524,remove funky panic/recover in agent tests (#6442),
9525,Update CHANGELOG.md,
9526,Merge pull request #6437 from hashicorp/ui-staging,ui: UI Release Merge (ui-staging merge)
9527,ui: re-remove the Type header on the service listing page (#6439),"The Type column used for giving details on what type of a service each item is was removed in https://github.com/hashicorp/consul/pull/6075. As a result of keeping long running branches in sync, this change was partly reverted in an earlier PR (the type header was re-added) https://github.com/hashicorp/consul/pull/5913 following a rebase. This commit re-removes the Type table header (the <th>)"
9528,ui: Fix metaData test as result of new consul-api-double (#6436),
9529,ui: Netlify previews (#6419), Add netlify redirects file Add netlify makefile target and commented config settings
9530,ui: Adds a sort-control component for asc/desc sorting of columns etc (#6034),This adds the component but doesn't yet use it anywhere. No tests are added here as there isn't an awful lot to test.
9531,ui: Leader icon for node listing view (#6265)," yarn upgrade consul-api-double which includes status/leader add all the ember-data things required to call a new endpoint Pass the new leader variable through to the template use the new leader variable in the template to set a leader add acceptance testing to verify leaders are highlighted Change testing navigation/api requests to status/leader (on the node listing page, status/leader is now the last get request to be called). Template whitespace commit (less indenting) adds a test to to assert no errors happen with an unelected leader"
9532,ui: fix/replace magnifier icon (#6308),
9533,ui: add some additional env level URLs for easier linking (#6145),"Right now we only use CONSUL_DOCS_URL, the others are for future usage"
9534,ui: Enable blocking queries by default (#6194),"-Enable blocking queries by default -Change assertion to check for the last PUT request, not just any request for session destruction from a node page. Since we've now turned on blocking queries by default this means that a second GET request is made after the PUT request that we are asserting for but before the assertion itself, this meant the assertion failed. We double checked this by turning off blocking queries for this test using ``` And settings from yaml  consul:client:   blocking: 0  ``` which made the test pass again. As moving forwards blocking queries will be on by default, we didn't want to disable blocking queries for this test, so we now assert the last PUT request specifically. This means we continue to assert that the session has been destroyed but means we don't get into problems of ordering of requests here"
9535,ui: [Bugfix] - Sticky KV Sessions (#6166),Initialize session value to null to prevent stickiness from a session the previous KV
9536,ui: Upgrade ember-cli-api-double. Adds new staging env (#6136),"ember-cli-api-double has been upgraded for 3 things:  Use the correct configuration flags Automatically include the necessary files to enable the api doubles without requiring a server. This can be disabled to provide custom functionality (so we can stitch our BDD style testing in with this) When used statically, read the cookies from the users browser to enable basic ad-hoc double editing (e.g. CONSUL_SERVICE_COUNT=100000)  Once upgraded we've now moved the config to the correct place, added a new environment (staging) to use the static-style of doubles The test environment continues to use custom cookie setting and url checking so we disable this 'auto importing' by setting 'auto-import' to false for the configuration for the addon. We also added a couple of new package script targets to explicitly serve or build the UI with the entirely static UI."
9537,"ui: Change layout styling for healthcheckoutput, add CheckID (#6195)",
9538,ui: Show the correct message when a session has been removed from a KV (#6167),
9539,"ui: Add stats-card component, integrate more @hashicorp/structure-icons (#6021)"," Rebuild the heathchecked-resource component now we can copy and paste As the above rebuild came with new icons, we also swapped out 'most' of the other areas where we were using these new icons, plus any icons that were effected by the new icon placeholders Begin to remove more and more of the project specific icons (now replaced by the shared ones)"
9540,ui: Add an additional 'more than 1 char' check for selection (#6022),We'd rather 'play it safe' for our selection detection (which avoids following links if you have some text selected). This commit adds an additional check of 'more than 1 character' to the 'isSelected' check. This is based on the fact that it's far quicker to type the character so why would a user select on character? This therefore caters for any fairly large (in the scheme of things) incidential mouse moves whilst clicking a link. Overall this is probably overkill
9541,ui: Be more exact with intent for table truncation (#6023),Truncation should only happen currently on table content if the tag within the td is the only child
9542,ui: Ensure event sources are closed to the correct state when connecting (#6036),"This fails the tests, but wouldn't produce an actual bug as the source is still set to closing, just 1 tick later."
9543,ui: removes npm: imports now we have standard importing (#6035),
9544,ui: {{phrase-editor}} amends (#5991), Re-focus the input element on phrase removal Move all actions to actions: Move to a form looking value rather than items Move placeholder functionalit yinto the component Force DDAU instead of two way binding with slice and onchange Begin to deprecate the searchable interface
9545,ui: Adds the ability to frontend search instances by address (ip:port) (#5993),
9546,ui: Small EventSource additions (#5978)," EventSources now pass themselves thorugh to the run function as a second argument. This enables the use of arrow functions along with the EventSources API (configuration, source) => source.close(). Order of arguments could potentially be switched at a later date. BlockingEventSources now let you pass an 'event' through at instantation time. If you do this, the event will immediately be dispatched once the EventSource is opened. The usecase for this is for 'unfreezing' cached BlockingEvents. This makes it easier to provide a cache for BlockingEventSources by caching its data rather than the entire BlockingEventSource itself.  ``` new BlockingEventSource(   (config, source) => { / something / },   {     cursor: 1024, // this would also come from a cache     currentEvent: getFromSomeSortOfCache(eventSourceId) //this is the new bit   } ); // more realistically new BlockingEventSource(   (config, source) => { return data.findSomething(slug, config) },   getFromSomeSortOfCache(eventSourceId) ); ```"
9547,ui: Enable creating listeners using an object/hash (#5975),"Makes listening to multiple events on one target slightly easier. Adding events can be rolled up into passing through an object, and the returned remove function removes all of the handlers in the object For example: //this.listen... const remove = listeners.add(   {     'message': handler,     'error': handler   } ); remove(); // removes all listeners in the object The entire API for listeners is now becoming slightly overloaded, so potentially we'd use this API always and remove the ability to use a string/function pair."
9548,ui: Reduce mutation of html.classList (#5974),"Throughout the app we mutate the value of the root node classList on navigation between separate pages (basically on URL change). Every template has a unique classList for example template-service template-show and template-service template-list etc etc. When navigating between 2 pages, both pages using the same template yet with different data, previoulsy we would entirely clear out the html.classList and then refill it again with eaxctly the same classes. This commit moves this to perform a diff previous to mutating the classList, and then potentially no classList mutating is needed when moving between 2 pages of the same template."
9549,ui: Change vocab of ReopenableEventSource from 'reopen' to 'open' (#5973),You can potentially close an EventSource before its first tick by immediately setting the readyState to a non-open state. Therefore it never opens. Calling open will then open it. 'Open' fits better than 'reopen' when taking the above into account
9550,ui: Include yadda/gherkin dictionaries we use for acc testing (#5956),"Currently these gherkin dictionaries are contained in ember-cli-api-double, which isn't the correct place for them. They belong with the steps themselves. This is also less complicated now we can require/import javascript using a standard approach Also runs an update of ember-cli-api-double which will be the last installation of version 1 of this module."
9551,ui: CSS Components Migration (#5913),"Migrate roughly half of the base components into base Adds a target for easily formatting CSS Further CSS amends/migration (#5921)  tooltips within tables where a slightly bit troublesome due to a mix of inline-flex, overflow and the need for truncation. This refineds tooltips a slight bit more to work 'everywhere'. We also move tooltip to use the correct color and min-width from structure, but we overwrite the min-width here until we get confirmation on widths/alignment of text within a tooltip. Tiny fixes for breadcrumbs and toggle-buttons in tabular listings Now we inline-flex our table cells, it means it is impossible to truncate text without wrapping it in another element. This wraps all Description like text in <p> tags. Generally the first column of text is already wrapped in an <a> tag. Other items such as consul tags and policy names etc get 'cutoff' rather than truncated. We are now using all the icons from @hashicorp/structure-icons"
9552,ui: Adds ember-auto-import and replaces the 3 places where we used npm: (#5952),Also removes ember-browserify
9553,ui: Put some options in for event source runners (behind flags) (#5738),
9554,ui: Ensure an EventSource isn't opened if closed before first tick (#5703),EventSources will wait for 1 tick before 'opening'. There is always the chance that the EventSource is '.close()'ed before that tick. We therefore check the 'readyState' before opening the EventSource
9555,ui: Allow text selection of clickable elements and their contents (#5770)," ui: Allow text selection of clickable elements and their contents  This commit disables a click on mousedown be removing the href attribute and moving it to a data-href attribute. On mouseup it will only move it back if there is no selection. This means that an anchor will only be followed on click if there is no selection. This fixes the fact that whenever you select some copy within a clickable element it immediately throws you into the linked page when you release your mouse. Further notes: We use the isCollapsed property here which 'seems' to be classed as 'experimental' in one place where I researched it: https://developer.mozilla.org/en-US/docs/Web/API/Selection/isCollapsed Although in others it makes no mention of this 'experimental' e.g:  https://webplatform.github.io/docs/dom/Selection/isCollapsed/ https://w3c.github.io/selection-api/#dom-selection-iscollapsed  I may have gone a little overboard in feature detection for this, but I conscious of that fact that if isCollapsed doesn't exist at some point in the future (something that seems unlikely). The code here will have no effect on the UI. But I'd specifically like a second pair of eyes on that.   ui: Don't break right click, detects a secondary click on mousedown   ui: Put anchor selection capability behind an ENV var "
9556,ui: Reconcile ember-data store when records are deleted via blocking (#5745)," ui: Reconciliate ember-data store when records are deleted via blocking  Currently we are barely using the ember-data store/cache, but it will still cache records in the store even though technically we aren't using it. This adds a SyncTime to every record that uses blocking queries so we can delete older records from the ember-data cache to prevent them building up  ui: Add basic timestamp method we can access from tests, fixup tests  Adds a timestamp method that we can access from within tests so we can test that the SyncTime is being set. There is probably a better way to do this, but this is also probably the simplest approach - we are also likely to revisit this at a later date"
9557,ui: Expands create-listeners API to allow recursive and functions (#5616)," Adds a Listeners class, which lets us... Add Listeners recursively. So you can createListeners().add(createListeners()) Also add the ability to .add as a plain function  This moves the entire idea more towards a generic teardown utility"
9558,refactor & add better retry logic to NewTestAgent (#6363),Fixes #6361
9559,Distinguish between DC not existing and not being available (#6399),
9560,Update CHANGELOG.md,
9561,Update CHANGELOG.md,
9562,Add option to register services and their checks idempotently (#4905),
9563,txn: don't try to decode request bodies > raft.SuggestedMaxDataSize (#6422),txn: don't try to decode request bodies > raft.SuggestedMaxDataSize
9564,Update CHANGELOG.md,
9565,Store primaries root in secondary after intermediate signature (#6333), Store primaries root in secondary after intermediate signature  This ensures that the intermediate exists within the CA root stored in raft and not just in the CA provider state. This has the very nice benefit of actually outputting the intermediate cert within the ca roots HTTP/RPC endpoints. This change means that if signing the intermediate fails it will not set the root within raft. So far I have not come up with a reason why that is bad. The secondary CA roots watch will pull the root again and go through all the motions. So as soon as getting an intermediate CA works the root will get set.  Make TestAgentAntiEntropy_Check_DeferSync less flaky  I am not sure this is the full fix but it seems to help for me.
9566,test: ensure the node name is a valid dns name (#6424),The space in the node name was making every test emit a useless warning.
9567,test: explicitly run the pprof tests for 1s instead of the 30s default (#6421),
9568,test: add additional http status code assertions in coordinate HTTP API tests (#6410),"When this test flakes sometimes this happens: --- FAIL: TestCoordinate_Node (1.69s) panic: interface conversion: interface {} is nil, not structs.Coordinates [recovered] FAIL    github.com/hashicorp/consul/agent       19.999s Exit code: 1 panic: interface conversion: interface {} is nil, not structs.Coordinates [recovered]         panic: interface conversion: interface {} is nil, not structs.Coordinates  There is definitely a bug lurking, but the code seems to imply this can only return nil on 404. The tests previously were not checking the status code. The underlying cause of the flake is unknown, but this should turn the failure into a more normal test failure."
9569,TxnCheckOp has a Check field not a Service field (#6418),
9570,Display IPs of machines when node names conflict to ease troubleshooting,"When there is an node name conflicts, such messages are displayed within Consul: consul.fsm: EnsureRegistration failed: failed inserting node: Error while renaming Node ID: ""e1d456bc-f72d-98e5-ebb3-26ae80d785cf"": Node name node001 is reserved by node 05f10209-1b9c-b90c-e3e2-059e64556d4a with name node001 While it is easy to find the node that has reserved the name, it is hard to find the node trying to aquire the name since it is not registered, because it is not part of consul members output This PR will display the IP of the offender and solve far more easily those issues."
9571,"[BUGFIX][BUILD] When test fail in circle-ci in main, have a proper error message (#6416)","Since FUNCNAME is not defined when running outside a function, trap does not work and display wrong error message. Example from https://circleci.com/gh/hashicorp/consul/69506 : ⨯ FAIL   /home/circleci/project/test/integration/connect/envoy/run-tests.sh: line 1: FUNCNAME[0]: unbound variable   make: *** [GNUmakefile:363: test-envoy-integ] Error 1 This fix will avoid this error message and display the real cause."
9572,revert commits on master (#6413),
9573,update tests to match new method signatures,
9574,confi\gure providers with DC and domain,
9575,create a common name for autoTLS agent certs,
9576,add subject names to issued certs,
9577,construct a common name for each CSR,
9578,add serviceID to leaf cert request,
9579,add domain and nodeName to agent cert request,
9580,Added DC and domain args to Configure method,
9581,test: send testagent logs through testing.Logf (#6411),
9582,test: fix TestAgent.Start() to not segfault if the DNSServer cannot ListenAndServe (#6409),"The embedded Server field on a DNSServer is only set inside of the ListenAndServe method. If that method fails for reasons like the address being in use and is not bindable, then the Server field will not be set and the overall Agent.Start() will fail. This will trigger the inner loop of TestAgent.Start() to invoke ShutdownEndpoints which will attempt to pretty print the DNS servers using fields on that inner Server field. Because it was never set, this causes a nil pointer dereference and crashes the test."
9583,add nil pointer check for pointer to ACLToken struct (#6407),
9584,Update CHANGELOG.md,
9585,website: Update middleman-hashicorp container and Gemfile.lock (#6374)," website: Update middleman-hashicorp container and Gemfile.lock  Time marches on, and so do security vulnerabilities in Nokogiri. So it's time for a new container. As with last time, here's a reminder for the next person who needs to update this:  You shouldn't just update the dependency in Gemfile.lock, because your build   times will go to heck as you compile Nokogiri from source on every run. So you   need an updated container with all the dependencies. To update the container, you need to push a new tag to the middleman-hashicorp   repo. Teamcity does the rest, and will ship a new container to Docker Hub   (unless its credentials are out of date, in which case go ask team-eng-serv.)  Once that's pushed:  Update Makefile Update the Gemfile Delete Gemfile.lock make website until it comes up, then ctrl-C Commit the changes    website: Specify a different json version in Gemfile.lock   The Consul website uses different containers for preview and deploy, and this oddball JSON version was causing issues. This commit sacrifices a little bit of preview startup speed for (hopefully) working deploys."
9586,changelog: add known issues section for 1.6.,Update CHANGELOG.md
9587,make sure auto_encrypt has private key type and bits (#6392),
9588,auto_encrypt: verify_incoming_rpc is good enough for auto_encrypt.allow_tls (#6376),"Previously verify_incoming was required when turning on auto_encrypt.allow_tls, but that doesn't work together with HTTPS UI in some scenarios. Adding verify_incoming_rpc to the allowed configurations."
9589,bump eventmachine to 1.2.7 in Gemfile.lock (#6389),
9590,test: actually run envoy 1.11.1 integration tests on PRs (#6397),
9591,test: don't leak agent goroutines in TestAgent_sidecarServiceFromNodeService (#6396),A goroutine dump using runtime.Stack() before/after shows a drop from 121 => 4.
9592,update dependencies for enterprise change (#6395),
9593,Rephrase bind docs (#6394),
9594,Putting source back into Dev Mode,
9595,Update CHANGELOG.md,Co-Authored-By: Alvin Huang 17609145+alvin-huang@users.noreply.github.com
9596,Update CHANGELOG.md,Co-Authored-By: Freddy freddygv@users.noreply.github.com
9597,Update CHANGELOG.md,
9598,make sure auto_encrypt has private key type and bits,
9599,Release v1.6.0,
9600,update bindata_assetfs.go,
9601,mod: bump main module to api v1.2.0 and sdk v0.2.0,
9602,api: bump to sdk v0.2.0,
9603,flatten 1.6 series changelog (#6390),
9604,Update CHANGELOG.md,
9605,Update CHANGELOG.md,
9606,Merge pull request #6388 from hashicorp/release/1-6,merging release/1-6 into master
9607,Secondary CA establishLeadership fix (#6383),This prevents ACL issues (or other issues) during intermediate CA cert signing from failing leader establishment.
9608,Update observability.html.md (#6379),
9609,Update agent.html.markdown.erb (#6380),Adding a note on how to make Consul trust S3-compatible storage that expose a self-signed certificate.
9610,auto_encrypt: use server-port (#6287),AutoEncrypt needs the server-port because it wants to talk via RPC. Information from gossip might not be available at that point and thats why the server-port is being used.
9611,update changelog,
9612,connect: allow 'envoy_cluster_json' escape hatch to continue to function (#6378),
9613,Merge Consul OSS branch 'master' at commit 59150281c52fafa4a3320c42128f1caf9dbd083b,
9614,print a proper error message for master merge CI job failures (#6371),
9615,website: fix typo on mesh page (#6368),Fixes #6345.
9616,docs: remove beta references; leave version notation (#6372),
9617,docs: document how envoy escape hatches work with the discovery chain (#6350), Bootstrap escape hatches are OK. Public listener/cluster escape hatches are OK. Upstream listener/cluster escape hatches are not supported.  If an unsupported escape hatch is configured and the discovery chain is activated log a warning and act like it was not configured. Fixes #6160
9618,Merge Consul OSS branch 'master' at commit ce9cfc773d529ae4b8259d195323c0c350c1f9f1,
9619,remove ci merge branches if nightly merge fails (#6369),
9620,docs: fixing L7 config entries documentation (#6358), add service-router example involving gRPC fix indentation on service-router page by splitting it up remove reference to removed setting
9621,docs: add documentation for discovery chains,Fixes #6273
9622,docs: ports docs missing paren fix (#6367),
9623,Merge Consul OSS branch 'master' at commit a7ded1bd8efcbc3c67978f050b6f16ec5e8a832d,
9624,Update CHANGELOG.md,
9625,Ensure that config entry writes are forwarded to the primary DC (#6339),
9626,Turned on Envoy 1.11.1 integration tests (#6347),I also ran this against 1.5.2 so the docs update claiming compatibility should still be accurate.
9627,docs: Fix typo layey > layer (#6352),
9628,Merge pull request #6341 from tryan225/docs/autopilot-updates,Clarifying autopilot bootstrap and config options
9629,update changelog,
9630,connect: ensure time.Duration fields retain their human readable forms in the API (#6348),This applies for both config entries and the compiled discovery chain. Also omit some other config entries fields when empty.
9631,update changelog,
9632,connect: generate the full SNI names for discovery targets in the compiler rather than in the xds package (#6340),
9633,connect: introduce ExternalSNI field on service-defaults (#6324),Compiling this will set an optional SNI field on each DiscoveryTarget. When set this value should be used for TLS connections to the instances of the target. If not set the default should be used. Setting ExternalSNI will disable mesh gateway use for that target. It also  disables several service-resolver features that do not make sense for an  external service.
9634,update changelog,
9635,connect: updating a service-defaults config entry should leave an unset protocol alone (#6342),If the entry is updated for reasons other than protocol it is surprising that the value is explicitly persisted as 'tcp' rather than leaving it empty and letting it fall back dynamically on the proxy-defaults value.
9636,website: update the vs. envoy and proxies page (#6326)," website: update the vs. envoy and proxies page  This is the second result on Google for ""consul envoy"" and it seemed like it needed a bit of an upgrade to help clarify the current state.  Update website/source/intro/vs/proxies.html.md  Co-Authored-By: Judith Malnick judith.patudith@gmail.com  Update website/source/intro/vs/proxies.html.md  Co-Authored-By: Judith Malnick judith.patudith@gmail.com  Update website/source/intro/vs/proxies.html.md  Co-Authored-By: Judith Malnick judith.patudith@gmail.com  Update website/source/intro/vs/proxies.html.md  Co-Authored-By: Judith Malnick judith.patudith@gmail.com  Apply suggestions from code review  Co-Authored-By: Judith Malnick judith.patudith@gmail.com"
9637,Clarifying autopilot bootstrap and config options,
9638,Update CHANGELOG.md,
9639,Filter out left/leaving serf members when determining if new AC… (#6332),
9640,update changelog,
9641,xds: improve how envoy metrics are emitted (#6312),Since generated envoy clusters all are named using (mostly) SNI syntax we can have envoy read the various fields out of that structure and emit it as stats labels to the various telemetry backends. I changed the delimiter for the 'customization hash' from ':' to '~' because ':' is always reencoded by envoy as '_' when generating metrics keys.
9642,Merge Consul OSS branch 'master' at commit 23cf22960af00a02530f51327d9566c8b52e4de7,
9643,Fix 404 (#6300),"On page: https://www.consul.io/discovery.html If you click the link for Health Checks -> Learn More the underlying resource is: https://learn.hashicorp.com/consul/getting-started/checks This page for me is a 404. I think you've bundled it together in the following page: Register a Service and Health Check - Service Discovery Located at: https://learn.hashicorp.com/consul/getting-started/services Thanks for Consul, it's really awesome."
9644,Update CHANGELOG.md,
9645,Update to google.golang.org/grpc v1.23.0 (#6320),
9646,Update CHANGELOG.md,
9647,update changelog,
9648,agent: blocking central config RPCs iterations should not interfere with each other (#6316),
9649,Update toolchain to Go 1.12.8 (#6319),
9650,Release v1.6.0-rc1,
9651,update bindata_assetfs.go,
9652,Fix changelog format (and alphabatize stuff),
9653,Merge Consul OSS branch 'master' at commit 8f7586b339dbb518eff3a2eec27d7b8eae7a3fbb,
9654,changelog: add snapshot half-close fix,
9655,changelog: add managed proxy removal to breaking changes,
9656,Update CHANGELOG.md,
9657,Add missing LicenseReset API function (#6311),
9658,add flag to allow /operator/keyring requests to only hit local servers (#6279),Add parameter local-only to operator keyring list requests to force queries to only hit local servers (no WAN traffic). HTTP API: GET /operator/keyring?local-only=true CLI: consul keyring -list --local-only Sending the local-only flag with any non-GET/list request will result in an error.
9659,snapshot: add TLS support to HalfCloser interface (#6216),"Calls net.TCPConn.CloseWrite or mtls.Conn.CloseWrite, which was added in https://go-review.googlesource.com/c/go/+/31318/"
9660,Merge Consul OSS branch 'master' at commit 8241787e922955e973c0e762ad3cb8db1804f6cd,
9661,Update CHANGELOG.md,
9662,Update the v1/agent/service/:service endpoint to output tagged… (#6304),
9663,docs: Update consul-helm example to pull latest tag,
9664,update changelog,
9665,connect: allow mesh gateways to use central config (#6302),
9666,website: restore accidental JSON deletion [skip ci] (#6303),
9667,connect: remove managed proxies (#6220),  connect: remove managed proxies implementation and all supporting config options and structs   connect: remove deprecated ProxyDestination   command: remove CONNECT_PROXY_TOKEN env var   agent: remove entire proxyprocess proxy manager   test: remove all managed proxy tests   test: remove irrelevant managed proxy note from TestService_ServerTLSConfig   test: update ContentHash to reflect managed proxy removal   test: remove deprecated ProxyDestination test   telemetry: remove managed proxy note   http: remove /v1/agent/connect/proxy endpoint   ci: remove deprecated test exclusion   website: update managed proxies deprecation page to note removal   website: remove managed proxy configuration API docs   website: remove managed proxy note from built-in proxy config   website: add note on removing proxy subdirectory of data_dir 
9668,update changelog,
9669,command: ensure that the json form of config entries can be submitted with 'consul config write' (#6290),The json decoder inside of the HCLv1 hcl.Decode function behaves unexpectedly when decoding generically into a map[string]interface{} as is done for 'consul config write' pre-submit decoding. This results in some subtle (service-router Match and Destinations being separated) and some not so subtle (service-resolver subsets and failover panic if multiple subsets are referenced) bugs when subsequently passed through mapstructure to finish decoding. Given that HCLv1 is basically frozen and the HCL part of it is fine instead of trying to figure out what the underlying bug is in the json decoder for our purposes just sniff the byte slice and selectively use the stdlib json decoder for JSON and hcl decoder for HCL.
9670,mesh-gateway ACL tokens should also have node:read on everyth… (#6291),
9671,update changelog,
9672,connect: ensure intention replication continues to work when the replication ACL token changes (#6288),
9673,Merge Consul OSS branch 'master' at commit d84863799deca45ccf4bec5ab9f645ccae6b3aeb,
9674,update changelog,
9675,api: un-deprecate api.DecodeConfigEntry (#6278),Add clarifying commentary about when it is not safe to use it. Also add tests.
9676,fallback to proxy config global protocol when upstream services' protocol is unset (#6277),fallback to proxy config global protocol when upstream services' protocol is unset Fixes #5857
9677,Update CHANGELOG.md,
9678,connect: fix failover through a mesh gateway to a remote datacenter (#6259),"Failover is pushed entirely down to the data plane by creating envoy clusters and putting each successive destination in a different load assignment priority band. For example this shows that normally requests go to 1.2.3.4:8080 but when that fails they go to 6.7.8.9:8080:  name: foo   load_assignment:     cluster_name: foo     policy:       overprovisioning_factor: 100000     endpoints: priority: 0   lb_endpoints: endpoint:       address:         socket_address:           address: 1.2.3.4           port_value: 8080 priority: 1   lb_endpoints: endpoint:       address:         socket_address:           address: 6.7.8.9           port_value: 8080    Mesh gateways route requests based solely on the SNI header tacked onto the TLS layer. Envoy currently only lets you configure the outbound SNI header at the cluster layer. If you try to failover through a mesh gateway you ideally would configure the SNI value per endpoint, but that's not possible in envoy today. This PR introduces a simpler way around the problem for now:   We identify any target of failover that will use mesh gateway mode local or    remote and then further isolate any resolver node in the compiled discovery    chain that has a failover destination set to one of those targets.   For each of these resolvers we will perform a small measurement of    comparative healths of the endpoints that come back from the health API for the    set of primary target and serial failover targets. We walk the list of targets    in order and if any endpoint is healthy we return that target, otherwise we    move on to the next target.   The CDS and EDS endpoints both perform the measurements in (2) for the    affected resolver nodes.   For CDS this measurement selects which TLS SNI field to use for the cluster    (note the cluster is always going to be named for the primary target)   For EDS this measurement selects which set of endpoints will populate the    cluster. Priority tiered failover is ignored.   One of the big downsides to this approach to failover is that the failover detection and correction is going to be controlled by consul rather than deferring that entirely to the data plane as with the prior version. This also means that we are bound to only failover using official health signals and cannot make use of data plane signals like outlier detection to affect failover. In this specific scenario the lack of data plane signals is ok because the effectiveness is already muted by the fact that the ultimate destination endpoints will have their data plane signals scrambled when they pass through the mesh gateway wrapper anyway so we're not losing much. Another related fix is that we now use the endpoint health from the underlying service, not the health of the gateway (regardless of failover mode)."
9679,Merge pull request #6274 from hashicorp/merge-master-de01a1e,Merge master at de01a1e279230624fcc2d7e692b7e773d570204b
9680,fix grpc-addr-config hosts template,
9681,Merge remote-tracking branch 'origin/master' into release/1-6,
9682,update changelog,
9683,connect: expose an API endpoint to compile the discovery chain (#6248),In addition to exposing compilation over the API cleaned up the structures that would be exchanged to be cleaner and easier to support and understand. Also removed ability to configure the envoy OverprovisioningFactor.
9684,Update CHANGELOG.md,
9685,Add license management functions to API client (#6268),  Add license management functions to API client   Get rid of jsonapi struct tags 
9686,add generic master merge into release/* branches (#6249),
9687,connect: generate intermediate at same time as root (#6272),Generate intermediate at same time as root Co-Authored-By: Freddy freddygv@users.noreply.github.com
9688,Add arm builds (#6263),  try arm builds   Update .circleci/config.yml   Co-Authored-By: Matt Keeler mkeeler@users.noreply.github.com  Update .circleci/config.yml  Co-Authored-By: Matt Keeler mkeeler@users.noreply.github.com  Update .circleci/config.yml  Co-Authored-By: Matt Keeler mkeeler@users.noreply.github.com
9689,update changelog,
9690,connect: detect and prevent circular discovery chain references (#6246),
9691,ui: Adds readonly meta data to the serviceInstance and node detail pages (#6196),
9692,update changelog,
9693,server: if inserting bootstrap config entries fails don't silence the errors (#6256),
9694,update changelog,
9695,connect: simplify the compiled discovery chain data structures (#6242),This should make them better for sending over RPC or the API. Instead of a chain implemented explicitly like a linked list (nodes holding pointers to other nodes) instead switch to a flat map of named nodes with nodes linking other other nodes by name. The shipped structure is just a map and a string to indicate which key to start from. Other changes:   inline the compiler option InferDefaults as true   introduce compiled target config to avoid needing to send back   additional maps of Resolvers; future target-specific compiled state   can go here   move compiled MeshGateway out of the Resolver and into the   TargetConfig where it makes more sense. 
9696,update changelog,
9697,connect: reconcile how upstream configuration works with discovery chains (#6225)," connect: reconcile how upstream configuration works with discovery chains  The following upstream config fields for connect sidecars sanely integrate into discovery chain resolution:   Destination Namespace/Datacenter: Compilation occurs locally but using different default values for namespaces and datacenters. The xDS clusters that are created are named as they normally would be.   Mesh Gateway Mode (single upstream): If set this value overrides any value computed for any resolver for the entire discovery chain. The xDS clusters that are created may be named differently (see below).   Mesh Gateway Mode (whole sidecar): If set this value overrides any value computed for any resolver for the entire discovery chain. If this is specifically overridden for a single upstream this value is ignored in that case. The xDS clusters that are created may be named differently (see below).   Protocol (in opaque config): If set this value overrides the value computed when evaluating the entire discovery chain. If the normal chain would be TCP or if this override is set to TCP then the result is that we explicitly disable L7 Routing and Splitting. The xDS clusters that are created may be named differently (see below).   Connect Timeout (in opaque config): If set this value overrides the value for any resolver in the entire discovery chain. The xDS clusters that are created may be named differently (see below).   If any of the above overrides affect the actual result of compiling the discovery chain (i.e. ""tcp"" becomes ""grpc"" instead of being a no-op override to ""tcp"") then the relevant parameters are hashed and provided to the xDS layer as a prefix for use in naming the Clusters. This is to ensure that if one Upstream discovery chain has no overrides and tangentially needs a cluster named ""api.default.XXX"", and another Upstream does have overrides for ""api.default.XXX"" that they won't cross-pollinate against the operator's wishes. Fixes #6159"
9698,update changelog,
9699,connect: validate upstreams and prevent duplicates (#6224),"  connect: validate upstreams and prevent duplicates   Actually run Upstream.Validate() instead of ignoring it as dead code.   Prevent two upstreams from declaring the same bind address and port.   It wouldn't work anyway.   Prevent two upstreams from being declared that use the same   type+name+namespace+datacenter. Due to how the Upstream.Identity()   function worked this ended up mostly being enforced in xDS at use-time,   but it should be enforced more clearly at register-time. "
9700,Fix typo in architecture.html.md (#6261),
9701,docs: Fix minor mistakes in index.html.md (#6239),
9702,fix 'consul connect envoy' to try to use previously-configured grpc port (#6245),fix 'consul connect envoy' to try to use previously-configured grpc port on running agent before defaulting to 8502 Fixes #5011
9703,"Revert ""connect: support AWS PCA as a CA provider"" (#6251)",This reverts commit 3497b7c00d49c4acbbf951d84f2bba93f3da7510.
9704,connect: support AWS PCA as a CA provider (#6189),Port AWS PCA provider from consul-ent
9705,connect: Support RSA keys in addition to ECDSA (#6055),Support RSA keys in addition to ECDSA
9706,Update CHANGELOG.md,
9707,Update default gossip encryption key size to 32 bytes,
9708,Update CHANGELOG.md,
9709,Fix envoy canBind (#6238), Fix envoy cli canBind function  The string form of an Addr was including the CIDR causing the str equals to not match.  Remove debug prints
9710,Merge Consul OSS branch 'master' at commit a1725e6b5299c6ce12e8273205f90fba31403686,
9711,Fix flaky tests (#6229),
9712,Update CHANGELOG.md,
9713,Update CHANGELOG.md,
9714,Fix prepared query upstream endpoint generation (#6236),Use the correct SNI value for prepared query upstreams
9715,Release v1.6.0-beta3,
9716,update bindata_assetfs.go,
9717,Merge remote-tracking branch 'origin/master' into release/1-6,
9718,Update CHANGELOG.md,
9719,Fix CA Replication when ACLs are enabled (#6201),"Secondary CA initialization steps are: • Wait until the primary will be capable of signing intermediate certs. We use serf metadata to check the versions of servers in the primary which avoids needing a token like the previous implementation that used RPCs. We require at least one alive server in the primary and the all alive servers meet the version requirement. • Initialize the secondary CA by getting the primary to sign an intermediate When a primary dc is configured, if no existing CA is initialized and for whatever reason we cannot initialize a secondary CA the secondary DC will remain without a CA. As soon as it can it will initialize the secondary CA by pulling the primaries roots and getting the primary to sign an intermediate. This also fixes a segfault that can happen during leadership revocation. There was a spot in the secondaryCARootsWatch that was getting the CA Provider and executing methods on it without nil checking. Under normal circumstances it wont be nil but during leadership revocation it gets nil'ed out. Therefore there is a period of time between closing the stop chan and when the go routine is actually stopped where it could read a nil provider and cause a segfault."
9720,Set --max-obj-name-len 256 when execing Envoy (#6202),  Pass -max-obj-name-len 256 to envoy   Update test expectations.   Add a note about requireing the max-obj-name-len option to be set 
9721,Merge pull request #6210 from hashicorp/docs/fix-ambassador-link,Fix links to ambassador website
9722,Merge pull request #6223 from hashicorp/master-merge-b3541c4f3,Master merge b3541c4f3
9723,Merge Consul OSS branch master at commit b3541c4f34d43ab92fe52256420759f17ea0ed73,
9724,Putting source back into Dev Mode,
9725,Release v1.5.3,
9726,update bindata_assetfs.go,
9727,Update CHANGELOG.md,
9728,docs: add TCP half-close broken pipe to common errors (#6203),
9729,config: correct limit to limits in config example (#6219),"This isn't yet documented on the website, but wanted to update this to add the missing s."
9730,Update CHANGELOG.md,
9731,Allow forwarding of some status RPCs (#6198),  Allow forwarding of some status RPCs   Update docs   add comments about not using the regular forward 
9732,check vendor folder (#6006),  check vendor in circleci   make vendor checking step more descriptive   reorganize check-vendor and gofmt jobs 
9733,remove sdk and api packages (#6214),
9734,add dev docker image upload (#5879),  add dev docker image upload   remove the go cache since that isn't needed   add comment and image labels   get password from stdin 
9735,Make the chunking test multidimensional (#6212),"This ensures that it's not just a single operation we restores successfully, but many. It's the same foundation, just with multiple going on at once."
9736,auto-encrypt: Fix port resolution and fallback to default port (#6205),"Auto-encrypt meant to fallback to the default port when it wasn't provided, but it hadn't been because of an issue with the error handling. We were checking against an incomplete error value: ""missing port in address"" vs ""address $HOST: missing port in address"" Additionally, all RPCs to AutoEncrypt.Sign were using a.config.ServerPort, so those were updated to use ports resolved by resolveAddrs, if they are available."
9737,Update CHANGELOG.md,
9738,Chunking support (#6172), Initial chunk support  This uses the go-raft-middleware library to allow for chunked commits to the KV
9739,Envoy Mesh Gateway integration tests (#6187),  Allow setting the mesh gateway mode for an upstream in config files   Add envoy integration test for mesh gateways   This necessitated many supporting changes in most of the other test cases. Add remote mode mesh gateways integration test
9740,Fix links to ambassador website,
9741,Make new config when retrying testServer creation (#6204),
9742,update changelog,
9743,connect: allow L7 routers to match on http methods (#6164),Fixes #6158
9744,connect: change router syntax for matching query parameters to resemble the syntax for matching paths and headers for consistency. (#6163),"This is a breaking change, but only in the context of the beta series."
9745,update changelog,
9746,connect: validate and test more of the L7 config entries (#6156),
9747,update changelog,
9748,connect: rework how the service resolver subset OnlyPassing flag works (#6173),"The main change is that we no longer filter service instances by health, preferring instead to render all results down into EDS endpoints in envoy and merely label the endpoints as HEALTHY or UNHEALTHY. When OnlyPassing is set to true we will force consul checks in a 'warning' state to render as UNHEALTHY in envoy. Fixes #6171"
9749,tests: adding new envoy integration tests for L7 service-resolvers (#6129),Additionally:   wait for bootstrap config entries to be applied   run the verify container in the host's PID namespace so we can kill envoys without mounting the docker socket   assert that we actually send HEALTHY and UNHEALTHY endpoints down in EDS during failover 
9750,resolve circleci config conflicts,
9751,Restore NotifyListen to avoid panic in newServer retry (#6200),
9752,Update CHANGELOG.md,
9753,Update CHANGELOG.md,
9754,Display nicely Networks (CIDR) in runtime configuration (#6029)," Display nicely Networks (CIDR) in runtime configuration  CIDR mask is displayed in binary in configuration. This add support for nicely displaying CIDR in runtime configuration. Currently, if a configuration contains the following lines: ""http_config"": {     ""allow_write_http_from"": [       ""127.0.0.0/8"",       ""::1/128""     ]   } A call to /v1/agent/self?pretty would display ""AllowWriteHTTPFrom"": [             {                 ""IP"": ""127.0.0.0"",                 ""Mask"": ""/wAAAA==""             },             {                 ""IP"": ""::1"",                 ""Mask"": ""/////////////////////w==""             }   ] This PR fixes it and it will now display: ""AllowWriteHTTPFrom"": [ ""127.0.0.0/8"", ""::1/128"" ]  Added test for cidr nice rendering in TestSanitize()."
9755,remove travis config (#6199),
9756,Update CHANGELOG.md,
9757,Update go-bexpr (#6190), Update go-bexpr to v0.1.1  This brings in: • in/not in operators to do substring matching • matches / not matches operators to perform regex string matching.  Add the capability to auto-generate the filtering selector ops tables for our docs
9758,Update CHANGELOG.md,
9759,Allow raft TrailingLogs to be configured. (#6186),"This fixes pathological cases where the write throughput and snapshot size are both so large that more than 10k log entries are written in the time it takes to restore the snapshot from disk. In this case followers that restart can never catch up with leader replication again and enter a loop of constantly downloading a full snapshot and restoring it only to find that snapshot is already out of date and the leader has truncated its logs so a new snapshot is sent etc. In general if you need to adjust this, you are probably abusing Consul for purposes outside its design envelope and should reconsider your usage to reduce data size and/or write volume."
9760,[docs] New K8s-Consul deployment guide (#5859),  New K8s-Consul deployment guide   Update website/source/docs/guides/kubernetes-production-deploy.md   Update website/source/docs/guides/kubernetes-production-deploy.md   Co-Authored-By: Rebecca Zanzig rebecca@hashicorp.com  Update website/source/docs/guides/kubernetes-production-deploy.md  Co-Authored-By: Rebecca Zanzig rebecca@hashicorp.com  Update website/source/docs/guides/kubernetes-production-deploy.md  Co-Authored-By: Rebecca Zanzig rebecca@hashicorp.com  Update website/source/docs/guides/kubernetes-production-deploy.md  Co-Authored-By: Rebecca Zanzig rebecca@hashicorp.com  Update website/source/docs/guides/kubernetes-production-deploy.md  Co-Authored-By: Rebecca Zanzig rebecca@hashicorp.com   updating based on comments   Update website/source/docs/guides/kubernetes-production-deploy.md   Co-Authored-By: Rebecca Zanzig rebecca@hashicorp.com   Update website/source/docs/guides/kubernetes-production-deploy.md   Update website/source/docs/guides/kubernetes-production-deploy.md 
9761,enable circleci go tests for forks and reorganize jobs (#6191),
9762,Run go test packages in parallel (#6165),  modify gotestsum hacking that is unnecessary with the latest version   try running 2 packages at a time   try running 3 packages at a time   remove old comments 
9763,Simplified code in various places (#6176),All these changes should have no side-effects or change behavior:  Use bytes.Buffer's String() instead of a conversion Use time.Since and time.Until where fitting Drop unnecessary returns and assignment
9764,Merge Consul OSS branch 'master' at commit ef257b084d2e2a474889518440515e360d0cd990,
9765,Fix typo chose/choose (#6170),
9766,log rotation: limit count of rotated log files (#5831),
9767,Avoid unnecessary conversions (#6178),Those values already have the right type.
9768,Fixed typos in comments (#6175),Just a few nitpicky typo fixes.
9769,Fixed a few tautological condition mistakes (#6177),None of these changes should have any side-effects. They're merely fixing tautological mistakes.
9770,Fixed nil check for token (#6179),"I can only assume we want to check for the retrieved updatedToken to not be nil, before accessing it below. token can't possibly be nil at this point, as we accessed token.AccessorID just before."
9771,Merge Consul OSS branch 'master' at commit 42dae36923ff08eb14658e78b22d56af78eb7b84,
9772,Merge pull request #6141 from hashicorp/hcl-multi-service-docs,Document multiple services config in hcl
9773,[docs] Encryption docs update (#6082),  Bad link in encryption docs   clarifying the guide link   Update website/source/docs/agent/encryption.html.md   Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/agent/encryption.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com
9774,fix changelog after merge,
9775,Merge branch 'master' into release/1-6,
9776,update changelog,
9777,update changelog,
9778,xds: allow http match criteria to be applied to routes on services using grpc protocols (#6149),
9779,agent: avoid reverting any check updates that occur while a service is being added or the config is reloaded (#6144),
9780,Detail required settings in Gateway doc (#6126),  Update mesh_gateway.html.md   Apply suggestions from code review   Co-Authored-By: Luke Kysow 1034429+lkysow@users.noreply.github.com   Add WAN joining requirement   re-word primary dc guidance   Co-Authored-By: Luke Kysow 1034429+lkysow@users.noreply.github.com  Update website/source/docs/connect/mesh_gateway.html.md
9781,turning on go tests in circle for non-forks (#6154),  turning on go tests in circle for non-forks   fix comment 
9782,Reduce number of servers in TestServer_Expect_NonVoters (#6155),
9783,Update CHANGELOG.md,
9784,More flaky test fixes (#6151),  Add retry to TestAPI_ClientTxn   Add retry to TestLeader_RegisterMember   Account for empty watch result in ConnectRootsWatch 
9785,Document multiple services config in hcl,Also change ttl => timeout since ttl doesn't work anymore.
9786,tests: when running envoy integration tests try to limit container bleedover between cases (#6148),
9787,Merge Consul OSS branch 'master' at commit 95dbb7f2f1b9fc3528a16335201e2324f1b388bd,
9788,add lint-consul-retry tool (#6139),  add lint-consul-retry tool   lint consul retry for forks too 
9789,http/tcp checks: fix long timeout behavior to default to user-configured value (#6094),Fixes #5834
9790,Update retries that weren't using retry.R (#6146),
9791,Putting source back into Dev Mode,
9792,Release v1.6.0-beta2,
9793,update bindata_assetfs.go,
9794,Merge remote-tracking branch 'origin/master' into release/1-6,
9795,add test for discovery chain agent cache-type (#6130),
9796,ui: Force upgrades lodash and lodash submodules: (#6137),All related to:  https://github.com/lodash/lodash/pull/4336
9797,ui: Forced upgrade handlebars from 4.0 to 4.1 (#6077),Force bumps handelbars from 4.0 to 4.1.2 using resolutions  Release Notes
9798,Update CHANGELOG.md,
9799,Merge branch 'master' into release/1-6,
9800,Various Gateway Fixes (#6093),  Ensure the mesh gateway configuration comes back in the api within each upstream   Add a test for the MeshGatewayConfig in the ToAPI functions   Ensure we don’t use gateways for dc local connections   Update the svc kind index for deletions   Replace the proxycfg.state cache with an interface for testing   Also start implementing proxycfg state testing.  Update the state tests to verify some gateway watches for upstream-targets of a discovery chain.
9801,fix flaky test TestACLEndpoint_SecureIntroEndpoints_OnlyCreateLocalData (#6116), fix test to write only to dc2 (typo) fix retry behavior in existing test (was being used incorrectly)
9802,implement some missing service-router features and add more xDS testing (#6065), also implement OnlyPassing filters for non-gateway clusters
9803,"unknown fields now fail, so omit these unimplemented fields (#6125)",
9804,Fix some retries in api pkg (#6124),
9805,Fix bug in service-resolver redirects if the destination uses a default resolver. (#6122),"Also: - add back an internal http endpoint to dump a compiled discovery chain for debugging purposes Before the CompiledDiscoveryChain.IsDefault() method would test:  is this chain just one resolver step? is that resolver step just the default?  But what I forgot to test:  is that resolver step for the same service that the chain represents?  This last point is important because if you configured just one config entry: kind = ""service-resolver"" name = ""web"" redirect {   service = ""other"" }  and requested the chain for ""web"" you'd get back a default resolver for ""other"".  In the xDS code the IsDefault() method is used to determine if this chain is ""empty"". If it is then we use the pre-discovery-chain logic that just uses data embedded in the Upstream object (and still lets the escape hatches function). In the example above that means certain parts of the xDS code were going to try referencing a cluster named ""web..."" despite the other parts of the xDS code maintaining clusters named ""other...""."
9806,handle structs.ConfigEntry decoding similarly to api.ConfigEntry decoding (#6106),"Both 'consul config write' and server bootstrap config entries take a decoding detour through mapstructure on the way from HCL to an actual struct. They both may take in snake_case or CamelCase (for consistency) so need very similar handling. Unfortunately since they are operating on mirror universes of structs (api. vs structs.) the code cannot be identitical, so try to share the kind-configuration and duplicate the rest for now."
9807,Envoy CLI bind addresses (#6107), Ensure we MapWalk the proxy config in the NodeService and ServiceNode structs  This gets rid of some json encoder errors in the catalog endpoints   Allow passing explicit bind addresses to envoy   Move map walking to the ConnectProxyConfig struct   Any place where this struct gets JSON encoded will benefit as opposed to having to implement it everywhere.   Fail when a non-empty address is provided and not bindable   camel case   Update command/connect/envoy/envoy.go   Co-Authored-By: Paul Banks banks@banksco.de
9808,tests: further reduce envoy integration test flakiness (#6112),"In addition to waiting until s2 shows up healthy in the Catalog, wait until s2 endpoints show up healthy via EDS in the s1 upstream clusters."
9809,Flaky test overhaul (#6100),
9810,Remove dummy config (#6121),
9811,Update TestServer creation in sdk/testutil (#6084)," Retry the creation of the test server three times. Reduce the retry timeout for the API wait to 2 seconds, opting to fail faster and start over. Remove wait for leader from server creation. This wait can be added on a test by test basis now that the function is being exported. Remove wait for anti-entropy sync. This is built into the existing WaitForSerfCheck func, so that can be used if the anti-entropy wait is needed"
9812,Clean up StatsFetcher work when context is exceeded (#6086),
9813,Move ctx and cancel func setup into the Replicator.Start (#6115),Previously a sequence of events like: Start Stop Start Stop would segfault on the second stop because the original ctx and cancel func were only initialized during the constructor and not during Start.
9814,Merge Consul OSS branch 'master' at commit 3f3cd9a164c8113092b1173d79b106cfae1e02b1,
9815,test: for envoy integration tests bump the time to wait for the upstream to be healthy (#6109),
9816,"test: for envoy integration tests, wait until 's2' is healthy in consul before interrogating envoy (#6108)","When the envoy healthy panic threshold was explicitly disabled as part of L7 traffic management it changed how envoy decided to load balance to endpoints in a cluster. This only matters when envoy is in ""panic mode"" aka ""when you have a bunch of unhealthy endpoints"". Panic mode sends traffic to unhealthy instances in certain circumstances. Note: Prior to explicitly disabling the healthy panic threshold, the default value is 50%. What was happening is that the test harness was bringing up consul the sidecars, and the service instances all at once and sometimes the proxies wouldn't have time to be checked by consul to be labeled as 'passing' in the catalog before a round of EDS happened. The xDS server in consul effectively queries /v1/health/connect/s2 and gets 1 result, but that one result has a 'critical' check so the xDS server sends back that endpoint labeled as UNHEALTHY. Envoy sees that 100% of the endpoints in the cluster are unhealthy and would enter panic mode and still send traffic to s2. This is why the test suites PRIOR to disabling the healthy panic threshold worked. They were incorrectly passing. When the healthy panic threshol is disabled, envoy never enters panic mode in this situation and thus the cluster has zero healthy endpoints so load balancing goes nowhere and the tests fail. Why does this only affect the test suites for envoy 1.8.0? My guess is that https://github.com/envoyproxy/envoy/pull/4442 was merged into the 1.9.x series and somehow that plays a role. This PR modifies the bats scripts to explicitly wait until the upstream sidecar is healthy as measured by /v1/health/connect/s2?passing BEFORE trying to interrogate envoy which should make the tests less racy."
9817,Update CHANGELOG.md,
9818,website: link to beta changelog,
9819,website: fix use-case dropdown size,
9820,website: remove configuration use-case,
9821,website: better mesh call to actions,
9822,website: better mesh links into new docs,
9823,config entry doc snippet for mesh gateways (#6095),
9824,Initial L7 Documentation (#6056),
9825,[docs] Guide - Connecting Services Across Datacenters (#6052),  add connect gateway guide   Remove stray space   Co-Authored-By: Freddy freddygv@users.noreply.github.com  Specify stanza and exact options  Co-Authored-By: Freddy freddygv@users.noreply.github.com   incorporate comments from freddy   integrate feedback from matt   make snippets all json   incorporate more comments from matt   added links   incorporate comments from neena on google doc draft   make learn lnks relative   clarify that gateways are new   change socat to netcat   add more description about replication token permissions   Apply suggestions from code review   Co-Authored-By: Matt Keeler mkeeler@users.noreply.github.com   add the prerequisite to enable centralized service config   finish adding docs links 
9826,Initial Mesh Gateway Docs (#6090),
9827,Update CHANGELOG.md,
9828,Better gateway image,
9829,Putting source back into Dev Mode,
9830,website: changes for 1.6.0 beta (#6083),"  website: link to 1.6.0 beta in downloads page   website: reorganize intention replication/ca federation   website: remove announcement bar   Update website/source/docs/connect/connect-internals.html.md   Co-Authored-By: Paul Banks banks@banksco.de  website: update homepage and service mesh page  Aligning messaging to current product.   website: fix link TODOs   Add Mesh Gateway to mesh page, update use case wording "
9831,Release v1.6.0-beta1,
9832,update bindata_assetfs.go,
9833,Update CHANGELOG.md,
9834,Make cluster names SNI always (#6081),  Make cluster names SNI always   Update some tests   Ensure we check for prepared query types   Use sni for route cluster names   Proper mesh gateway mode defaulting when the discovery chain is used   Ignore service splits from PatchSliceOfMaps   Update some xds golden files for proper test output   Allow for grpc/http listeners/cluster configs with the disco chain   Update stats expectation 
9835,Merge Consul OSS branch 'master' at commit c2c154eaf4135c155617b8ca902780105ac1ac00,
9836,[docs] Link to TLS guide in Encryption doc (#6071),Fixes issue #6067
9837,Update CHANGELOG.md,
9838,Update CHANGELOG.md,
9839,connect: allow overriding envoy listener bind_address (#6033),  connect: allow overriding envoy listener bind_address   Update agent/xds/config.go   Co-Authored-By: Kyle Havlovitz kylehav@gmail.com   connect: allow overriding envoy listener bind_port   envoy: support unix sockets for grpc in bootstrap   Add AgentSocket BootstrapTplArgs which if set overrides the AgentAddress and AgentPort to generate a bootstrap which points Envoy to a unix socket file instead of an ip:port.   Add a test for passing the consul addr as a unix socket   Fix config formatting for envoy bootstrap tests   Fix listeners test cases for bind addr/port   Update website/source/docs/connect/proxies/envoy.md 
9840,ui: Gateway Addresses (#6075),"  Removes 'type' icons (basically the proxy icon, not the text itself)   Add support for Mesh Gateways plus their addresses This adds a 'Mesh Gateway' type label to service and service instance pages, plus a new 'Addresses' tab if the service is a Mesh Gateway showing a table of addresses for the service - plus tests "
9841,Fix Internal.ServiceDump blocking (#6076),maxIndexWatchTxn was only watching the IndexEntry of the max index of all the entries. It needed to watch all of them regardless of which was the max. Also plumbed the query source through in the proxy config to help better track requests.
9842,make test-docker (#6059), Implement the test-docker make target  Running tests within docker allows us to resource constrain them better to not take over our systems. Additionally it allows us to run the tests on linux instead of the host OS which often times is macOS.   Use GOMAXPROCS instead of -p   Add a comment about docker cpus 
9843,Don't use WatchedDatacenters in the xds code(#6068), Don't use WatchedDatacenters in the xds code as that map gets nil'ed before the ConfigSnapshot is sent to the xds layer.
9844,Don't use WatchedDatacenters in the xds code as thsoe get nil'ed out prior to sending to xds,
9845,xds message ordering (#6061),xds message ordering
9846,Merge Consul OSS branch 'master' at commit a58d8e91ac258c04174afca3818cbdae23aa8d3f,
9847,ensure consul config write has snake case conversions for MeshGateway (#6062),
9848,Fix a bunch of xds flaky tests,The clusters/endpoints test were still relying on deterministic ordering of clusters/endpoints which cannot be relied upon due to golang purposefully not providing any guarantee about consistent interation ordering of maps. Also fixed a small bug in the connect proxy cluster generation that was causing the clusters slice to be double the size it needed to with the first half being all nil pointers.
9849,Fix Envoy 1.10 support note (#6045),
9850,Merge pull request #6053 from hashicorp/gateways_and_resolvers,Integrate Mesh Gateways with ServiceResolverSubsets
9851,digest the proxy-defaults protocol into the graph (#6050),
9852,Update xds/proxycfg tests to use the same looking trust domain as a normal system,This is to prevent confusion about what our SNI fields actually look like.
9853,Implement mesh gateway management of service subsets,Fixup some error handling
9854,Implement caching for config entry lists,Update agent/cache-types/config_entry.go Co-Authored-By: R.B. Boyer public@richardboyer.net
9855,activate most discovery chain features in xDS for envoy (#6024),
9856,Fix some tests that I broke when refactoring the ConfigSnapshot (#6051),  Fix some tests that I broke when refactoring the ConfigSnapshot   Make sure the MeshGateway config is added to all the right api structs   Fix some more tests 
9857,Bump timeout in TestManager_BasicLifecycle (#6030),
9858,Implement Mesh Gateways,This includes both ingress and egress functionality.
9859,Fix secondary dc connect CA roots watch issue,The general problem was that a the CA config which contained the trust domain was happening outside of the blocking mechanism so if the client started the blocking query before the primary dcs roots had been set then a state trust domain was being pushed down. This was fixed here but in the future we should probably fixup the CA initialization code to not initialize the CA config twice when it doesn’t need to.
9860,Include a content hash of the intention for use during replication,
9861,Implement intention replication and secondary CA initialization,
9862,Implement Kind based ServiceDump and caching of the ServiceDump RPC,
9863,"increase go test parallelism, resource_class and run tests on release branch (#2)",
9864,do some initial config entry graph validation during writes (#6047),
9865,website: fix link to raft paper (#6046),
9866,Merge Consul OSS branch 'master' at commit e91f73f59249f5756896b10890e9298e7c1fbacc,
9867,Update CHANGELOG.md,
9868,Remove failed nodes from serfWAN (#6028),"  Prune Servers from WAN and LAN   cleaned up and fixed LAN to WAN   moving things around   force-leave remove from serfWAN, create pruneSerfWAN   removed serfWAN remove, reduced complexity, fixed comments   add another place to remove from serfWAN   add nil check   Update agent/consul/server.go   Co-Authored-By: Paul Banks banks@banksco.de"
9869,Allow for both snake_case and CamelCase for config entries written with 'consul config write'. (#6044),This also has the added benefit of fixing an issue with passing time.Duration fields through config entries.
9870,fix glossary link (#6043),
9871,Putting source back into Dev Mode,
9872,Release v1.5.2,
9873,agent: check for gossip encrypt key (#6037),
9874,tls: auto_encrypt enables automatic RPC cert provisioning for consul clients (#5597),
9875,Update CHANGELOG.md,
9876,initial version of L7 config entry compiler (#5994),"With this you should be able to fetch all of the relevant discovery chain config entries from the state store in one query and then feed them into the compiler outside of a transaction. There are a lot of TODOs scattered through here, but they're mostly around handling fun edge cases and can be deferred until more of the plumbing works completely."
9877,Update CHANGELOG.md,
9878,adding new config entries for L7 discovery chain (unused) (#5987),
9879,Update CHANGELOG.md,
9880,Update CHANGELOG.md,
9881,connect: store signingKeyId instead of authorityKeyId (#6005),
9882,Update CHANGELOG.md,
9883,Update CHANGELOG.md,
9884,Update CHANGELOG.md,
9885,fix test that was failing after #6013 (#6026),
9886,acl: allow service deregistration with node write permission (#5217),With ACLs enabled if an agent is wiped and restarted without a leave it can no longer deregister the services it had previously registered because it no longer has the tokens the services were registered with. To remedy that we allow service deregistration from tokens with node write permission.
9887,Update CHANGELOG.md,
9888,dns: support alt domains for dns resolution (#5940),this adds an option for an alt domain to be used with dns while migrating to a new consul domain.
9889,Fix text and add feature test for copy button (#5958),Copied IP Address! > Copied output! Adds feature test for copy button
9890,Merge Consul OSS branch 'master' at commit 4eb73973b6e53336fd505dc727ac84c1f7e78872,
9891,agent: added metadata information about servers into consul service description (#5455),This allows have information about servers from HTTP APIs without using the command line.
9892,ui: modify content path (#5950),"  Add ui-content-path flag   tests complete, regex validator on string, index.html updated   cleaning up debugging stuff   ui: Enable ember environment configuration to be set via the go binary at runtime (#5934)   ui: Only inject {{.ContentPath}} if we are makeing a prod build...   ...otherwise we just use the current rootURL This gets injected into a  node which solves the assets path problem but not the ember problem  ui: Pull out the  value and inject it into ember env  See previous commit: The  value is 'sometimes' injected from go at index serve time. We pass this value down to ember by overwriting the ember config that is injected via a  tag. This has to be done before ember bootup. Sometimes (during testing and development, basically not production) this is injected with the already existing value, in which case this essentially changes nothing. The code here is slightly abstracted away from our specific usage to make it easier for anyone else to use, and also make sure we can cope with using this same method to pass variables down from the CLI through to ember in the future.  ui: We can't use  move everything to javascript (#5941)  Unfortuantely we can't seem to be able to use  and rootURL together as URL paths will get doubled up (ui/ui/). This moves all the things that we need to interpolate with .ContentPath to the startup javascript so we can conditionally print out {{.ContentPath}} in lots of places (now we can't use base)   fixed when we serve index.html   ui: For writing a ContentPath, we also need to cope with testing... (#5945)   ...and potentially more environments Testing has more additional things in a separate index.html in tests/ This make the entire thing a little saner and uses just javascriopt template literals instead of a pseudo handbrake synatx for our templating of these files. Intead of just templating the entire file this way, we still only template {{content-for 'head'}} and {{content-for 'body'}} in this way to ensure we support other plugins/addons   build: Loosen up the regex for retrieving the CONSUL_VERSION (#5946)   build: Loosen up the regex for retrieving the CONSUL_VERSION   Previously the sed replacement was searching for the CONSUL_VERSION comment at the start of a line, it no longer does this to allow for indentation.  Both grep and sed where looking for the omment at the end of the line. We've removed this restriction here. We don't need to remove it right now, but if we ever put the comment followed by something here the searching would break.  Added xargs for trimming the resulting version string. We aren't using this already in the rest of the scripts, but we are pretty sure this is available on most systems.   ui: Fix erroneous variable, and also force an ember cache clean on build   We referenced a variable incorrectly here, this fixes that.   We also made sure that every make target clears ember's tmp cache to ensure that its not using any caches that have since been edited everytime we call a make target.   added docs, fixed encoding   fixed go fmt   Update agent/config/config.go   Co-Authored-By: R.B. Boyer public@richardboyer.net   Completed Suggestions   run gofmt on http.go   fix testsanitize   fix fullconfig/hcl by setting correct 'want'   ran gofmt on agent/config/runtime_test.go   Update website/source/docs/agent/options.html.md   Co-Authored-By: Hans Hasselberg me@hans.io  Update website/source/docs/agent/options.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  remove contentpath from redirectFS struct"
9893,Update CHANGELOG.md,
9894,Support for maximum size for Output of checks (#5233)," Support for maximum size for Output of checks  This PR allows users to limit the size of output produced by checks at the agent  and check level. When set at the agent level, it will limit the output for all checks monitored by the agent. When set at the check level, it can override the agent max for a specific check but only if it is lower than the agent max. Default value is 4k, and input must be at least 1."
9895,docs: small typo/wording fixes for envoy (#6018),
9896,Update CHANGELOG.md,
9897,Merge Consul OSS branch 'master' at commit 98eddbdeec102b18805557660e8878d1dfbf3663,
9898,remove skip-checks on git merge (#6017),  remove skip-checks on git merge   remove comments for skip-checks 
9899,remove docs updates,
9900,Merge Consul OSS branch 'master' at commit 88b15d84f9fdb58ceed3dc971eb0390be85e3c15,skip-checks: true
9901,Override cla check and add slack notifications (#6007),  override CLA check   add slack notifications for merge   don't delete unmerged branch to ease debugging 
9902,docs: fixed typos on a few doc pages (#5870),
9903,[docs] New Glossary Page (#5999),  Moved the glossary to a new page and removed the advanced warnings from all internals docs.   Update website/source/layouts/docs.erb   Co-Authored-By: Judith Malnick judith@hashicorp.com   Updates based on PR feedback   Update website/source/docs/internals/index.html.md   Update website/source/docs/internals/index.html.md   Update website/source/docs/internals/index.html.md   Update website/source/docs/internals/index.html.md   Update website/source/docs/internals/index.html.md 
9904,Prepare for having different service kinds that are all generic… (#6013),Default to internal error when service kind is unknown
9905,New Cache Types (#5995),  Add a cache type for the Catalog.ListServices endpoint   Add a cache type for the Catalog.ListDatacenters endpoint 
9906,[docs] Architecture Node vs Agent (#6010),  Upating the term node to be more clear   Update website/source/docs/internals/architecture.html.md   Update website/source/docs/internals/architecture.html.md   Co-Authored-By: Paul Banks banks@banksco.de  Addressing the failure detection comment
9907,docs: document reset license in enterprise (#5977),
9908,Fix vendoring to not include our own code.,
9909,Ensure that looking for services by addreses works with Tagged Addresses (#5984),
9910,Fix weird sentence in the proxy docs (#6002),  Fix weird sentence in the proxy docs   Update website/source/docs/connect/proxies.html.md 
9911,Fix envoy 1.10 exec (#5964),"  Make exec test assert Envoy version - it was not rebuilding before and so often ran against wrong version. This makes 1.10 fail consistenty.   Switch Envoy exec to use a named pipe rather than FD magic since Envoy 1.10 doesn't support that.   Refactor to use an internal shim command for piping the bootstrap through.   Fmt. So sad that vscode golang fails so often these days.   go mod tidy   revert go mod tidy changes   Revert ""ignore consul-exec tests until fixed (#5986)""   This reverts commit 683262a6869033cb79e68fa1dba0f9ea83e9187d.  Review cleanups"
9912,ui: Implements a testable clipboard {{copy-button}} (#5967), Remove ember-cli-clipboard dependency Provide a new copy-button component implementing the same interface as ^ but make the clipboard functionality injectable Provide 2 implementations of a Clipboard. One using clipboard.js (as previously) and an additional local storage 'clipboard'. add a BDD step to assert whats in the clipboard (the fake one)  Main reason here is that document.exec must be called by a user interaction
9913,website - updates to home hero video carousel (#5932),
9914,skip checks on merge commit (#6000),
9915,[docs] update documentation for connect-service-upstreams (#5422)," update documentation for connect-service-upstreams  Adds documentation for services, multiple services, and prepared query under connect-service-upstreams annotation.   changing tone of voice   active voice fix   fixing spaces   fixed order, added clarification for multiple upstreams   Update website/source/docs/platform/k8s/connect.html.md   Co-Authored-By: s-christoff sarah.christoff13@gmail.com"
9916,[docs] Sidecar Registration  (#5998),  missing service option   fixing the second example 
9917,Update some tests to fix ContentHash broken by the tagged service addresses (#5996),
9918,fix invalid curl request (#5972),
9919,"ui: Normal proxies link to services, sidecars to instances (#5944)"," ui: Normal proxies line to services, sidecars to instances  Following on from https://github.com/hashicorp/consul/pull/5933 we noticed that 'normal' proxies should link to the service, rather than the service instance. Additionally proxy 'searching' within the repository should take into account the name of the node that the originating service is on (sidecar proxies are generally co-located) Added an additional test here to prove that a sidecar-proxy with the same service id but on a different node does not show the sidecar proxy link."
9920,agent: transfer leadership when establishLeadership fails (#5247),
9921,add master merge to release branch (#5980),"  add master merge to release branch   remove CircleCI token, use shallow API call, and use commit SHA for merge "
9922,ignore consul-exec tests until fixed (#5986),
9923,[docs] Internals (#5979),  Updating internals docs for clarity   Update website/source/docs/internals/consensus.html.md   Co-Authored-By: Hans Hasselberg me@hans.io
9924,add release branch to travis (#5981),
9925,kv: do not trigger watches when setting the same value (#5885),"If a KVSet is performed but does not update the entry, do not trigger watches for this key. This avoids releasing blocking queries for KV values that did not actually changed."
9926,docs: add agent to windows service (#5982),
9927,ae: use stale requests when performing full sync (#5873),"Read requests performed during anti antropy full sync currently target the leader only. This generates a non-negligible load on the leader when the DC is large enough and can be offloaded to the followers following the ""eventually consistent"" policy for the agent state. We switch the AE read calls to use stale requests with a small (2s) MaxStaleDuration value and make sure we do not read too fast after a write."
9928,Support relative and external URL rewrites (#5970),  switch to relative path redirects for non external links   update website deploy script to support relative+full url redirects 
9929,Add tagged addresses for services (#5965),This allows addresses to be tagged at the service level similar to what we allow for nodes already. The address translation that can be enabled with the translate_wan_addrs config was updated to take these new addresses into account as well.
9930,Update CHANGELOG.md,
9931,Fix CAS operations on Services (#5971),  Fix CAS operations on services   Update agent/consul/state/catalog_test.go   Co-Authored-By: R.B. Boyer public@richardboyer.net
9932,update website build to exclude guides (#5951),
9933,[docs] Correct typos in API agnet docs (#5966),
9934,Update CHANGELOG.md,
9935,Update CHANGELOG.md,
9936,[docs] Reorganize connect documentation for clarity (#5864),  clarify possibilities for centralized proxy configuration   add line breaks to config entries file   add info about centralized config to built in proxy doc   mondify connect landing page to help with navigation   move internals details to its own page   link fixes and shortening text on main page   put built-in proxy options on its own page   add configuration details for connect   clarify security title and add observability page   reorganize menu   remove observability from configuration section   Update website/source/docs/connect/configuration.html.md   Co-Authored-By: Paul Banks banks@banksco.de  Update website/source/docs/connect/index.html.md  Co-Authored-By: Paul Banks banks@banksco.de  Update website/source/docs/agent/config_entries.html.md  Co-Authored-By: Paul Banks banks@banksco.de  Update website/source/docs/connect/configuration.html.md  Co-Authored-By: Paul Banks banks@banksco.de   rename connect section to include service mesh   reorganize sections per suggestions from paul   add configuration edits from paul   add internals edits from paul   add observability edits from paul   reorganize pages and menu   Update website/source/docs/connect/configuration.html.md   Co-Authored-By: Paul Banks banks@banksco.de   menu corrections and edits   incorporate some of pauls comments   incorporate more of pauls comments   Update website/source/docs/connect/configuration.html.md   Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/connect/index.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/connect/index.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/connect/registration.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com   incorporate kaitlin and pavanni feedback   add redirect   fix conflicts in index file   Resolve conflicts in index file   correct links for new organization   Update website/source/docs/connect/proxies.html.md   Co-Authored-By: Paul Banks banks@banksco.de  Update website/source/docs/connect/registration.html.md  Co-Authored-By: Paul Banks banks@banksco.de  Update website/source/docs/connect/registration.html.md  Co-Authored-By: Paul Banks banks@banksco.de  Update website/source/docs/connect/registration.html.md  Co-Authored-By: Paul Banks banks@banksco.de  add title to service registration page
9937,Remove the misleading default separator for listing keys. (#5288),The default separator for key listing is an empty string - the docs incorrectly made it seem as if this was /.
9938,docs: fixed typos (#5854),Fixed typos: alterative/alternative & communciation/communication
9939,docs: wording (#5889),"Fixed wording: ""will be resolve to the"" -> ""will be resolved to the""."
9940,docs: fixed typo polices/policies (#5894),Fixed typo: polices/policies.
9941,docs: fix markdown consul operator (#5901),broken markdown
9942,api: update link to agent caching in comments (#5935),
9943,Update production-acls.html.md (#5959),
9944,Add rate limiting to RPCs sent within a server instance too (#5927),
9945,Merge pull request #5948 from hashicorp/lkysow-patch-1,Update kubernetes-reference.html.md
9946,Update questions issue template directing q's to the forum (#5957),  Update questions issue template directing q's to the forum   Update contributing guide to add link to forum 
9947,Add a redirect for the K8s reference arch guide (#5949),
9948,Update kubernetes-reference.html.md,
9949,Update CHANGELOG.md,
9950,ui: Ensure Service Instance pages account for nodes (#5933),Include node name in the URL for service instances Integrate the node name slug into tests for service instance pages
9951,Remove vendoring of github.com/hashicorp/consul (#5943),
9952,Upgrade xDS (go-control-plane) API to support Envoy 1.10. (#5872), Upgrade xDS (go-control-plane) API to support Envoy 1.10.  This includes backwards compatibility shim to work around the ext_authz package rename in 1.10. It also adds integration test support in CI for 1.10.0.   Fix go vet complaints   go mod vendor   Update Envoy version info in docs   Update website/source/docs/connect/proxies/envoy.md 
9953,connect: provide -admin-access-log-path for envoy (#5858),
9954,ui: Upgrade js-yaml (#5926),
9955,website: fix Sentinel time-of-day policy (#5930),"The policy in the time-of-day Sentinel example incorrectly references the top-level time.hour constant. This is actually the same as the time.Hour Go value, so in other words, 3600000000000 (the int64 value representing the time in nanoseconds). This is corrected by just using time.now.hour instead."
9956,docs: update default grpc-addr value in connect envoy command (#5886), Update envoy.html.md.erb
9957,"ui: Adds ability to search by policy, role or service ident names (#5811)",
9958,website: add azure storage options for enterprise (#5920),This documents the additional backup target for the snapshot agent. Co-Authored-By: Freddy freddygv@users.noreply.github.com
9959,UI: Test readonly ServiceIdentity rules (#5865),
9960,[docs] Enterprise Landing Page (#5804),  Updating enterprise landing page to be more clear about the licensing process.   Update website/source/docs/enterprise/index.html.md   Co-Authored-By: Jack Pearkes jackpearkes@gmail.com  Update website/source/docs/enterprise/index.html.md  Co-Authored-By: Judith Malnick judith@hashicorp.com  Update website/source/docs/enterprise/index.html.md  Co-Authored-By: Judith Malnick judith@hashicorp.com  Update website/source/docs/enterprise/index.html.md  Co-Authored-By: Judith Malnick judith@hashicorp.com  Updating based on Matt's feedback
9961,ui: Ensures nested policy forms are reset properly (#5838)," All {{ivy-codemirror}} components need 'refreshing' when they become visible via our own didAppear method on the {{code-editor}} component  (also see:) - https://github.com/hashicorp/consul/pull/4190#discussion_r193270223 - https://github.com/hashicorp/consul/pull/4789/files/73db111db8324e1c6710791b38ba1cd2bab08f15#r225264296  On initial investigation, it looks like the component we are using for the code editor doesn't distinguish between setting its value programatically and a keyup event, i.e. an interaction from the user. We currently pretend that whenever its value changes, it is a keyup event. This means that when we reset the value to """" programmatically for form resetting purposes, a 'pretend keyup' event would also be fired, which would in turn kick off the validation, which would fail and show an error message for empty values in other fields of the form - something that is perfectly valid if you haven't typed anything yet. We solved this by checking for isPristine on fields that are allowed to be empty before you have typed anything."
9962,ui: Replaces destroyRecord with unloadRecord for KV 404's (#5837),"Just because Consul gives us a 404 this doesn't guarantee the KV doesn't exist, it doesn't even mean we don't have access to it. Furthermore we should never destroyRecord's without user interaction (therefore only via the repo.delete method). This switches destroyRecord to unloadRecord which performs the additional legwork to keep ember-data in sync with the actual truth. unloadRecord unloads the record from ember-data rather than sending an API delete request, which would have been the intent here."
9963,ui: ACL Policies. Catch all server errors (#5836),"Always show any server errors under Rules, not just invalid HCL"
9964,Update CHANGELOG.md,
9965,Ensure Consul is IPv6 compliant (#5468),
9966,Update links to envoy docs on xDS protocol (#5871),
9967,Fix acl.enable_key_list to be acl.enable_key_list_policy in docs (#5907),
9968,ui: Upgrade fstream (#5912),Bumps fstream from 1.0.11 to 1.0.12. - Release notes - Commits
9969,update changelog,
9970,agent: fix several data races and bugs related to node-local alias checks (#5876),"The observed bug was that a full restart of a consul datacenter (servers and clients) in conjunction with a restart of a connect-flavored application with bring-your-own-service-registration logic would very frequently cause the envoy sidecar service check to never reflect the aliased service. Over the course of investigation several bugs and unfortunate interactions were corrected: (1) local.CheckState objects were only shallow copied, but the key piece of data that gets read and updated is one of the things not copied (the underlying Check with a Status field). When the stock code was run with the race detector enabled this highly-relevant-to-the-test-scenario field was found to be racy. Changes: a) update the existing Clone method to include the Check field  b) copy-on-write when those fields need to change rather than     incrementally updating them in place. This made the observed behavior occur slightly less often. (2) If anything about how the runLocal method for node-local alias check logic was ever flawed, there was no fallback option. Those checks are purely edge-triggered and failure to properly notice a single edge transition would leave the alias check incorrect until the next flap of the aliased check. The change was to introduce a fallback timer to act as a control loop to double check the alias check matches the aliased check every minute (borrowing the duration from the non-local alias check logic body). This made the observed behavior eventually go away when it did occur. (3) Originally I thought there were two main actions involved in the data race: A. The act of adding the original check (from disk recovery) and its    first health evaluation. B. The act of the HTTP API requests coming in and resetting the local    state when re-registering the same services and checks. It took awhile for me to realize that there's a third action at work: C. The goroutines associated with the original check and the later    checks. The actual sequence of actions that was causing the bad behavior was that the API actions result in the original check to be removed and re-added without waiting for the original goroutine to terminate. This means for brief windows of time during check definition edits there are two goroutines that can be sending updates for the alias check status. In extremely unlikely scenarios the original goroutine sees the aliased check start up in critical before being removed but does not get the notification about the nearly immediate update of that check to passing. This is interlaced wit the new goroutine coming up, initializing its base case to passing from the current state and then listening for new notifications of edge triggers. If the original goroutine ""finishes"" its update, it then commits one more write into the local state of critical and exits leaving the alias check no longer reflecting the underlying check. The correction here is to enforce that the old goroutines must terminate before spawning the new one for alias checks."
9971,Increase reliability of TestResetSessionTimerLocked_Renew,
9972,Update CHANGELOG.md,
9973,agent: Improve startup message to avoid confusing users when no error occurs (#5896)," Improve startup message to avoid confusing users when no error occurs  Several times, some users not very familiar with Consul get confused by error message at startup: [INFO] agent: (LAN) joined: 1 Err: <nil> Having Err: <nil> seems weird to many users, I propose to have the following instead:  Success: [INFO] agent: (LAN) joined: 1 Error:   [WARN] agent: (LAN) couldn't join: %d Err: ERROR"
9974,Run TestServer_Expect on its own (#5890),
9975,Flaky test: ACLReplication_Tokens (#5891),"  Exclude non-go workflows while testing   Wait for s2 global-management policy   Revert ""Exclude non-go workflows while testing""   This reverts commit 47a83cbe9f19d0e1e475eabaa223d61fb4c56019."
9976,Add retries to StatsFetcherTest (#5892),
9977,Putting source back into Dev Mode,
9978,docs: wording,"Fixed wording: ""will be resolve to the"" -> ""will be resolved to the""."
9979,Release v1.5.1,
9980,Update CHANGELOG.md,
9981,Update CHANGELOG to include 1.4.5 release,
9982,Fix to prevent allowing recursive KV deletions when we shouldn’t,
9983,Update CHANGELOG.md,
9984,"Revert ""Exclude non-go workflows while testing""",This reverts commit 47a83cbe9f19d0e1e475eabaa223d61fb4c56019.
9985,Wait for s2 global-management policy,
9986,Exclude non-go workflows while testing,
9987,Change log line used for verification,
9988,Stop running TestLeader_ChangeServerID in parallel,
9989,exclude agent/proxyprocess tests since it will be removed in 1.6 (#5878),
9990,Merge pull request #5867 from hashicorp/bug/test-flaky-TestCoordinate_Node,Update type assertion logic
9991,Add retries around obj,
9992,Add retries to all obj,
9993,Envoy integration test improvements (#5797),  Grab consul logs on integration test failures too and don't remove .gitignore   Don't wipe logs so we have some artifacts to upload at the end 
9994,Update agent/coordinate_endpoint_test.go,Co-Authored-By: Freddy freddygv@users.noreply.github.com
9995,Update type assertion logic,Logic updated to evaluate with a boolean after the type assertion. This allows us to check if the type assertion succeeded and be more clear with errors.
9996,bump middleman-hashicorp to 0.3.40 and exclude guide rendering (#5847),  bump middleman-hashicorp to 0.3.40 and exclude guide rendering   add notes to Makefile for volume mounts hack PR#5847   make note of the PR number in the comment 
9997,enable go tests (#5863),
9998,ui: Adds tick whilst editing the link template in the Settings area (#5820)," Amends our base animation placeholder to always reset transition-duration. This has no effect on other components that are already using this animation. Adds a confirming class whenever a key is pressed, to show the green tick. Uses CSS via transition-delay for debouncing."
9999,docs: Fixed typo: authorative/authoritative.,
10000,website: clarify removal for managed proxies (#5849),We didn't end up removing these completely in 1.5.0. See also #5848.
10001,Merge pull request #5485 from hashicorp/change-node-id,Allow nodes to change IDs when replacing a dead node
10002,Set the dead node reclaim timer at 30s,
10003,vendor: update memberlist,
10004,Merge branch 'master' into change-node-id,
10005,docs: fixed typo (#5844),Fixed typo: reqired/required.
10006,[docs] Updating links to guides (#5795),  fixing links in the docs post guide migartion.   fixed one more   Update website/source/docs/acl/acl-legacy.html.md   Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com   Update website/source/docs/enterprise/connect-multi-datacenter/index.html.md   Updating based on comments and fixing word wrap   Update website/source/api/acl-legacy.html.md   Update website/source/api/acl/acl.html.md   Update website/source/docs/agent/options.html.md   Update website/source/docs/faq.html.md   Update website/source/docs/internals/architecture.html.md   Update website/source/docs/agent/encryption.html.md 
10007,Fixed typo: registratered/registered.,
10008,Merge pull request #5843 from hashicorp/docs/helmtypos,[docs] Update to correct parameter name in docs
10009,Update to correct parameter name in docs,
10010,Merge pull request #5825 from hashicorp/docs/helming,Add docs for Helm chart features introduced in v0.8.0
10011,Add docs for Helm chart features introduced in v0.8.0,Additionally defines a new annotation that is used with these new features.
10012,docs: fixed typos (#5839),"Fixed spelling: defintions/definitions, Speficied/Specifies."
10013,docs: fixed spelling (#5840),Spelling: namepace/namespace.
10014,[docs] Add K8s L7 Observability Guide (#5826),  add l7 observability guide   fix urls 
10015,docs: spelling and wording (#5830),"Fixed spelling and wording: avaliable/available, upto/up to, an other/another, recieved/received, transfered/transferred (x2)"
10016,docs: fixed typos (#5832),Fixed typos: persmissions/permissions + regardles/regardless
10017,Update index.html.md (#5813),Missing dot in Consul Kubernetes landing page.
10018,docs/agent/options: Add go-sockaddr template examples for -bind (#5701),"Reference: https://github.com/hashicorp/consul/issues/4090 Examples covering a variety of potential use cases. Verified via sockaddr eval and console agent -bind on a test machine: ```console Baseline $ sockaddr eval 'GetAllInterfaces' [127.0.0.1/8 {1 65536 lo  up|loopback} ::1 {1 65536 lo  up|loopback} 10.0.0.10/8 {2 1500 eth0 b8:27:eb:7b:36:95 up|broadcast|multicast} fe80::12dc:5e4d:8ff8:2d96/64 {2 1500 eth0 b8:27:eb:7b:36:95 up|broadcast|multicast} 192.168.1.10/24 {3 1500 wlan0 b8:27:eb:2e:63:c0 up|broadcast|multicast} fe80::b6dc:5758:c306:b15b/64 {3 1500 wlan0 b8:27:eb:2e:63:c0 up|broadcast|multicast}] Using address within a specific CIDR $ sockaddr eval 'GetPrivateInterfaces | include ""network"" ""10.0.0.0/8"" | attr ""address""' 10.0.0.10 Using a static network interface name $ sockaddr eval 'GetInterfaceIP ""eth0""' 10.0.0.10 Using regular expression matching for network interface name that is forwardable and up $ sockaddr eval 'GetAllInterfaces | include ""name"" ""^eth"" | include ""flags"" ""forwardable|up"" | attr ""address""' 10.0.0.10 ```"
10019,Updating documentation of example systemd service to be of type notify. (#5689),"https://github.com/hashicorp/consul/issues/2121 https://www.freedesktop.org/software/systemd/man/systemd.service.html When set to notify, systemd will not attempt to start any dependent services until after consul sends the notify signal.  This is useful in cases where there services that rely on the local consul agent to be up and functional before they can start.  The default is simple, which will immediately mark the service as up and functioning even if consul has not yet joined the cluster and has started listening for connnections."
10020,Clarify mutual exclusivity of Azure scale set auto-join parameters (#5750),
10021,[docs] Updated Landing Page (#5803),  Updating docs landing page since all the guides have moved   fixing line wrap   Giving the docs landing page content with CTAs   Updated the language for the config and learn boxes   fixing spacing 
10022,website: update to 1.5 on homepage link (#5817),
10023,Envoy L7 config docs (#5809),  WIP   Document all the new Envoy L7 configs   Apply suggestions from code review   Co-Authored-By: banks banks@banksco.de  Rewrite dynamic config and add in TODO links
10024,Add some config entry docs (#5808),  Add some config entry docs   Update website/source/docs/agent/config_entries.html.md   Co-Authored-By: mkeeler mkeeler@users.noreply.github.com  Update website/source/docs/agent/config_entries.html.md  Co-Authored-By: mkeeler mkeeler@users.noreply.github.com   Get rid of double negative   Some incremental updates   Update the config list docs to not point to service-default related things.   A few more doc updates to get rid of some service-defaults specific linking info in the cli docs   In progress update   Update website/source/docs/agent/config_entries.html.md   Co-Authored-By: mkeeler mkeeler@users.noreply.github.com   Reword bootstrap section   Update example proxy-defaults config   Finish up the examples section for managing config entries with the CLI   Update website/source/docs/agent/config_entries.html.md   Co-Authored-By: mkeeler mkeeler@users.noreply.github.com   Use $ for shell command start   Make it very clear that the normal way to manage things is via the API/CLI   Update website/source/docs/agent/options.html.md   Co-Authored-By: mkeeler mkeeler@users.noreply.github.com
10025,Putting source back into Dev Mode,
10026,Release v1.5.0,
10027,bump versions of api and sdk,
10028,api: go mod tidy,
10029,api: bump sdk version to v0.1.1,
10030,Update CHANGELOG.md,
10031,Update CHANGELOG.md,
10032,Update CHANGELOG.md,
10033,Update CHANGELOG.md,
10034,Update CHANGELOG.md,
10035,"ui: Previously we were passing through 'fake' events, revert to real.. (#5810)","Previously we were creating a fake event and amending the name of the fake event, this meant that other event.target properties weren't being passed through (in this instance checked) this changes the approach to not use fake events, and allows you to overwrite the name that the form uses for handleEvent"
10036,[docs] WIP ports page (#5693),  Updating ports information to be consistent accross docs.   adding some extra notes based on feedback 
10037,update changelog ui (#5812),
10038,ui: Gives the minimal in-form token list use a maximum row size (#5807),"This means its more straightforwards to calculate the height of the listing itself. This component is currently only used on the form pages for tokens and roles, should therefore be a restricted size."
10039,ui: fix production build only empty role modal (#5806),Adds the ability for multiple components to use the same dom buffer
10040,"ui: Remove old 'default' template keyword, we now use '' for default (#5805)",
10041,ui: Ensure room for non-hidden scrollbars (#5802),
10042,ui: Make the proxy icon full size in service listings (#5799),
10043,[docs] ACL Legacy Docs (#5625),  updating the acl legacy doc   Updatine ACLs based on PR #5002 
10044,Merge pull request #5758 from hashicorp/f-consul-upgrade,Update to Consul Upgrading Doc
10045,Allow MapWalk to handle []interface{} elements that are []uint8 (#5800),  Allow MapWalk to handle []interface{} elements that are []uint8   Ensure ints are left alone. 
10046,Do not trigger update check when in dev mode,
10047,remove container after docker run exits (#5798),
10048,ui: Uses the default cursor instead of a pointer for upstream rows (#5785),
10049,ui: Make the Rules readonly when creating ServiceIdentities (#5784),Skipped test added for nagging for the moment
10050,Update CHANGELOG.md,
10051,Update CHANGELOG.md,
10052,Fixes race condition in Agent Cache (#5796), Fix race condition during a cache get  Check the entry we pulled out of the cache while holding the lock had Fetching set. If it did then we should use the existing Waiter instead of calling fetch. The reason this is better than just calling fetch is that fetch re-gets the entry out of the entries map and the previous fetch may have finished. Therefore this prevents erroneously starting a new fetch because we just missed the last update.  Fix race condition fully  The first commit still allowed for the following scenario: • No entry existing when checked in getWithIndex while holding the read lock • Then by time we had reached fetch it had been created and finished.   always use ok when returning   comment mentioning the reading from entries.   use cacheHit consistently 
10053,redirecting the containers guide until its complete (#5790),
10054,docs: tweak wording about service identities (#5794),
10055,docs: adding note about enabling acl token replication for auth methods (#5792),
10056,Copy the proxy config instead of direct assignment (#5786),This prevents modifying the data in the state store which is supposed to be immutable.
10057,acl: a role binding rule for a role that does not exist should be ignored (#5778),I wrote the docs under this assumption but completely forgot to actually enforce it.
10058,ui: Upgrades the indirect dependency on jQuery to ^3.4.0 (#5783),
10059,ui: Don't look for isDescriptor on null (related to null proxies) (#5782),
10060,Merge pull request #5777 from hashicorp/ui-staging,ui: Dashboard URL refinements
10061,[docs] New guide listing common error messages and what to do about them (#5433),"  New guide listing common error messages and what to do about them   Pasted in updates from StackPad edit   Update website/source/docs/guides/common-errors.md   Co-Authored-By: tradel todd@radel.us  Update website/source/docs/guides/common-errors.md  Co-Authored-By: tradel todd@radel.us  Update website/source/docs/guides/common-errors.md  Co-Authored-By: tradel todd@radel.us  add subheadings in config file errors, move doc out of guides"
10062,Merge pull request #5757 from hashicorp/consulPrefix,Update Helm Docs with consulPrefix
10063,[docs] fix kubernetes operations anchor link (#5775),  fix kubernetes operations anchor link   replace anchor links with cta to learn 
10064,acl: enforce that you cannot persist tokens and roles with missing links except during replication (#5779),
10065,Fix ConfigEntryResponse binary marshaller and ensure we watch the chan in ConfigEntry.Get even when no entry exists. (#5773),
10066,bump hashicorp/yamux (#5776),  bump hashicorp/yamux   go mod tidy to remove older yamux 
10067,Fix up the MapWalk function so that it properly handles nested map[interface{}]interface{} (#5774),
10068,ui: Adds {{Datacenter}} keyword for URL template interpolation (#5768), Includes Datacenter variable for intperolation Amends text on the Settings page to reflect new keyword Adds further acceptance testing around the new dashboard buttons
10069,ui: URL encodes any varaibles interpolated into the template... (#5766),"Encodes any variables passed in to be used for template interpolation, but importantly nothing else in the URL apart from the variables themselves. 'Generally' service names are reasonably URL safe, but we know of usecases using at least /s in service names."
10070,docs: add an overview section for the auth method docs (#5772),
10071,"[docs] Guide migration - index, menu, redirects (#5761)","  modify guide index to point to learn   adding to the redirects is a wip, updated the side navigation.   add tracks to list   Fixing redirects   Update website/source/docs/guides/index.html.md   Co-Authored-By: judithpatudith judith@hashicorp.com  Update website/source/docs/guides/index.html.md  Co-Authored-By: judithpatudith judith@hashicorp.com  Update website/source/docs/guides/index.html.md  Co-Authored-By: judithpatudith judith@hashicorp.com  Update website/source/docs/guides/index.html.md  Co-Authored-By: judithpatudith judith@hashicorp.com   finish out track listings   finishing redirects.   change advanced language to production, add relationship of guides and docs   Update website/source/redirects.txt   Co-Authored-By: judithpatudith judith@hashicorp.com"
10072,Fix previous accidental master push :facepalm: (#5771),  Fix previous accidental master push :facepalm:   Fix ACL test 
10073,Fix panic in Resolving service config when proxy-defaults isn't defined yet (#5769),
10074,Fix uint8 conversion issues for service config response maps.,
10075,Make central conf test work when run in a suite. (#5767), Make central conf test work when run in a suite.  This switches integration tests to hard restart Consul each time which causes less surpise when some tests need to set configs that don't work on consul reload. This also increases the isolation and repeatability of the tests by dropping Consul's state entirely for each case run.  Remove aborted attempt to make restart optional.
10076,Add integration test for central config; fix central config WIP (#5752),  Add integration test for central config; fix central config WIP   Add integration test for central config; fix central config WIP   Set proxy protocol correctly and begin adding upstream support   Add upstreams to service config cache key and start new notify watcher if they change.   This doesn't update the tests to pass though.   Fix some merging logic get things working manually with a hack (TODO fix properly)   Simplification to not allow enabling sidecars centrally - it makes no sense without upstreams anyway   Test compile again and obvious ones pass. Lots of failures locally not debugged yet but may be flakes. Pushing up to see what CI does   Fix up service manageer and API test failures   Remove the enable command since it no longer makes much sense without being able to turn on sidecar proxies centrally   Remove version.go hack - will make integration test fail until release   Remove unused code from commands and upstream merge   Re-bump version to 1.5.0 
10077,Update documentation for clarity,
10078,Add documentation for Serf member telemetry metrics,
10079,docs: add documentation for all secure acl introduction work (#5640),
10080,Merge pull request #5729 from hashicorp/ui-staging,UI: ui-staging merge
10081,ui: Fix CSS related to icons and h2 changes done in different PRs,"The way icons are positioned was changed to enable icons for policy names, and in a separate PR h2's where altered to provide a nicer looking settings page. Once these PR's where merged together they slighly effected each other. This commit tweaks the CSS to refine, but will be revisted at a later date"
10082,ui: Re-fix old erroneous link,
10083,ui: dashboard links (#5704),"This PR adds a new {{template-anchor}} component. This component lets you specify a 'href template' in a handlebars like format instead of a normal string href. This template will be interpolated with the contents of a vars="""" attribute. Also contains code to add an extra UI Setting to be able to store a template to be used for this anchor in localStorage"
10084,UI: ACL Roles (#5635),"Adds support for ACL Roles and Service Identities CRUD, along with necessary changes to Tokens, and the CSS improvements required. Also includes refinements/improvements for easier testing of deeply nested components.  ember-data adapter/serializer/model triplet for Roles repository, form/validations and searching filter for Roles Moves potentially, repeated, or soon to to repeated functionality into a mixin (mainly for 'many policy' relationships) A few styling tweaks for little edge cases around roles Router additions, Route, Controller and templates for Roles  Also see:   UI: ACL Roles cont. plus Service Identities (#5661 and #5720)"
10085,ui: Search improvements (#5540),"  ui: Replaces Service listing filterbar with a phrase-editor search (#5507)   New phrase-editor restricting search to whole phrases (acts on enter key). Allows removal of previously entered phrases  Searching now allows arrays of terms, multiple terms work via AND"
10086,ui: Adds easily accessible env for user settable 'debug' settings (#5668),"This is a synchronous only 'debug' setting accessor, uses localStorage first and falls back to ember config."
10087,ui: Closes the proxy blocking query for the service instance on dereg (#5667),"If a service instance show page is being viewed and the service instance is deregistered, this closes the blocking query for the proxy as well as the instance (the instances query will be clsed on the error) Also adds skipped tests to nag in future"
10088,"ui: Fixes RTT display, by ensuring use of ember proxies in tomography (#5666)",Previously the tomography wasn't using ember get so proxy updates (specifically here whilst receiving a blocking update) wasn't working. This adds get here until we update to newer getless ember and also refactors slightly removing n and using distance.length instead Skipped tests are adding here to nag us to come back here at some point.
10089,ui: Alter resizing for tabular-collection for sizing based on rows (#5586),
10090,ui: Improvements to modal-dialog (#5585)," If the modal gets bigger than 80% of the viewport height a scrollbar will be shown. Currently there isn't anywhere it can get this big, but future work involves possible larger modals Usually its difficult to figure out which was the 'unchecked' radio button using an onchange event. Luckily ember/handlebars changes its properties after the onchange event, so knowing that and using an extra data-checked attribute set via ember, we can figure out which radio button has been 'unchecked'. This means the logic for opening an closing modals becomes slightly easier"
10091,ui: Adds uid to tabular-details for/id's used in toggling for uniqueness (#5584),
10092,ui: Adds _super in places where it had been missed (mainly dom-buffer) (#5583),
10093,ui: Increases the pause between blocking queries to 2000ms (#5582),...also: Temporarily overwrites native setTimeout and setInterval for e2e/acceptance testing similar to how XHR is overwritten for e2e/acceptance testing. This makes the blocking query acceptance tests run faster until we add a better burstable rate limiter for blocking queries.
10094,ui: Remove index.html from the docs URL so we just point to /docs (#5547),
10095,UI: Add support for blocking queries on the service instance detail page (#5487),"This commit includes several pieces of functionality to enable services to be removed and the page to present information that this has happened but also keep the deleted information on the page. Along with the more usual blocking query based listing. To enable this:  Implements meta on the model (only available on collections in ember) Adds new catchable ComputedProperty alongside a listen helper for working with specific errors that can be thrown from EventSources in an ember-like way. Briefly, normal computed properties update when a property changes, EventSources can additionally throw errors so we can catch them and show different visuals based on that.  Also: Add support for blocking queries on the service instance detail page  Previous we could return  undefined when a service instance has no proxy, but this means we have nothing to attach meta to. We've changed this to return an almost empty object, so with only a meta property. At first glance there doesn't seem to be any way to provide a proxy object to templates and be able to detect whether it is actually null or not so we instead change some conditional logic in the templates to detect the property we are using to generate the anchor. Made a pauseUntil test helper function for steps where we wait for things. This helps for DRYness but also means if we can move away from setInterval to something else later, we can do it in one place Whilst running into point 1 here, we managed to make the blocking queries eternally loop. Whilst this is due to an error in the code and shouldn't ever happen whilst in actual use, we've added an extra check so that we only recur/loop the blocking query if the previous response has a meta.cursor  Adds support for blocking queries on the node detail page (#5489)  Moves data re-shaping for the templates variables into a repository so they are easily covered by blocking queries (into coordinatesRepo) The node API returns a 404 as signal for deregistration, we also close the sessions and coordinates blocking queries when this happens"
10096,ui: Adds blocking query support to the service detail page (#5479),"This commit includes several pieces of functionality to enable services to be removed and the page to present information that this has happened but also keep the deleted information on the page. Along with the more usual blocking query based listing. To enable this:  Implements meta on the model (only available on collections in ember) Adds new catchable ComputedProperty alongside a listen helper for working with specific errors that can be thrown from EventSources in an ember-like way. Briefly, normal computed properties update when a property changes, EventSources can additionally throw errors so we can catch them and show different visuals based on that."
10097,UI: Add blocking cursor validation and more straightforward throttle (#5470),"More recommendations for blocking queries clients was added here: https://github.com/hashicorp/consul/pull/5358 This commit mainly adds cursor/index validation/correction based on these recommendations (plus tests) The recommendations also suggest that clients should include rate limiting. Because of this, we've moved the throttling out of Consul UI specific code and into Blocking Query specific code. Currently the 'rate limiting' in this commit only adds a sleep to every iteration of the loop, which is not the recommended approach, but the code here organizes the throttling functionality into something we can work with later to provide something more apt."
10098,UI: Amends blocking queries text and toggle component in settings (#5467),
10099,ui: Add proxy icons to proxy services and instances where appropriate (#5463),
10100,ui: Fix erroneous HTML that was being fixed by either browser/ember (#5530),"The resulting DOM from this template was actually correct, we'd assume it was being fixed by the browser"
10101,UI: Add forking based on service instance id existence (#5392)," ui: Add forking based on service instance id existence  Proxies come in 2 flavours, 'normal' and sidecar. We know when a proxy is a sidecar proxy based on whether a DestinationServiceID is set. LocalServiceAddress and LocalServicePort are only relevant for sidecar proxies. This adds template logic to show different text depending on this information. Additionally adds test around connect proxies (#5418)  Adds page object for the instance detail page Adds further scenario steps used in the tests Adds acceptance testing around the instance detail page. Services with proxies and the sidecar proxies and proxies themselves Adds datacenter column for upstreams Fixes bug routing bug for decision as to whether to request proxy information or not"
10102,ui: remove call to super in setupController (#5383),
10103,ui: Amend breakpoints for new numberless filter buttons (#5381),
10104,UI: Use custom block-slots for changeableset,
10105,UI: Service Numbers (#5348),"Add totals to some listing views, remove healthcheck totals  Adds markup to render totals for Services, Nodes, Intentions and v1 ACLs Removes counts from healthcheck filters, and therefore simplify text, moving the copy to the templates Alter test to reflect the fact that the text of the buttons are no static in the component template rather than a dynamic attribute"
10106,UI: Service Instances (#5326),This gives more prominence to 'Service Instances' as opposed to 'Services'. It also begins to surface Connect related 'nouns' such as 'Proxies' and 'Upstreams' and begins to interconnect them giving more visibility to operators. Various smaller changes:  Move healthcheck-status component to healthcheck-output Create a new healthcheck-status component for showing the number of checks plus its icon Create a new healthcheck-info component to group multiple statuses plus a different view if there are no checks Componentize tag-list
10107,UI: Add ember steps:list command for listing available steps (#5255),"  ui: Add ember steps:list command for listing available steps   Adds command addon to house the new command  Start to organize out the steps themselves, bring a bit more order to things ready to dedupe and cleanup"
10108,UI: Add EventSource ready for implementing blocking queries (#5070), Maintain http headers as JSON-API meta for all API requests (#4946) Add EventSource ready for implementing blocking queries EventSource project implementation to enable blocking queries for service and node listings (#5267) Add setting to enable/disable blocking queries (#5352)
10109,ui: Correctly rebase own token/no delete change,
10110,ui: Adds XHR connection management to HTTP/1.1 installs (#5083),"Adds xhr connection managment to http/1.1 installs This includes various things:  An object pool to 'acquire', 'release' and 'dispose' of objects, also a 'purge' to completely empty it A Request data object, mainly for reasoning about the object better A pseudo http 'client' which doens't actually control the request itself but does help to manage the connections  An initializer is used to detect the script element of the consul-ui sourcecode which we use later to sniff the protocol that we are most likely using for API access"
10111,"ui: Adds 2 computed utilities, a factory and a purify (#5079)"," The factory is taken from the ember source, but makes it more reusable Purify converts conventional ember computed into a pure version  This commit only adds new files that could be used further down the line"
10112,ui: Adds controller lifecycle reset hook (#5056),
10113,ui: Adds document and viewport methods to the dom service (#5052),"window and document are easily injected anyhow, but this primarily this keeps everything dom related in the same place. Included here are changes to make all ember related objects use the dom service document and viewport instead of just document and window. Quote from a previous PR (#4924) which explains the thinking around this:  Now I have all these things in the dom service, it would make sense to get window from there also. I was thinking of making a viewport method, which would be a nice word whether window was a browser window, an iframe (not really a window) like when ember testing, or anything else. To me the viewport is what we are actually talking about here."
10114,ui: ember-data AbortError should have a 0 status (#5048),
10115,"ui: Prefer cursor over index, add configuration option to repos (#5042)",
10116,"ui: Adds better error passthrough, disable/unauthorize properly on error (#5041)"," Ensure any unexpected developer errors are passed through/shown Previously when errors where returns/resolved the special isEnabled/isAuthorized would never get resolved. This was fine as they were set to false to start with anyway, but this resolves them again to false for completeness Improved unit testing coverage"
10117,ui: Adds warning flash messages (yellow with warning icon) (#5033),
10118,"ui: Rename extended Component variables, tweak some comments (#5021)",
10119,ui: Resolve bad rebase and add in KV test for change of GET for KVs (#5000),
10120,ui: Pass GET data and clean certain values for KV's ensuring consistency (#4991),
10121,ui: Fixup tests to expect the new meta property on listings (#4990),
10122,ui: Maintain http headers as JSON-API meta for all API requests (#4946),
10123,UI: Use buttons instead of anchors where appropriate (#4939),Use buttons instead of anchors where appropriate
10124,ui: Move intention source/destination menus use text from the template (#4938),
10125,"UI: Move legacy ACLs, KVs and Intentions to use form functionality (#4936)","Change legacy acls, kvs and intentions to use forms"
10126,UI: Move legacy ACLs to use the new searchables/changeable-sets (#4933),
10127,UI: dom usage refactoring (#4924),"Move all the dom-things to use the dom service in tabular-collection, feedback-dialog, list-collection and node show. Move get-component-factory into utils/dom and use dom.root() in a few more places This includes an additional dom.components method which gives you a list of components matching the selector instead of just one."
10128,UI: CSS Refactor (#4919)," Adds full set of svg icons as CSS/Sass variables to the source Starts picking out some frame-grays, whilst commenting in possibles Remove color prefixing  The prefixes ui- and brand- for colors hav been removed. This makes colors slightly easier to type. In order to differentiate between brand colors and 'normal' colors, normal colors are named as 'true colors' i.e. blue, red, green etc etc whereas the brand colors used a more premium sounding name such as 'steel' for vault gray, 'magenta' for consul, 'cobalt' for vagrant etc etc."
10129,ui: Prefer using notOk(actual) instead of ok(!actual) in tests (#4925),And make sure its consistent throughout the app
10130,ui: Move ACL policy and token repos to use the RepositoryService (#4867),
10131,ui: Refactors the code-mirror linting/restrict legacy tokens to HCL (#4866),
10132,ui: Async Search (#4859),"This does several things to make improving the search experience easier moving forwards:  Separate searching off from filtering. 'Searching' can be thought of as specifically 'text searching' whilst filtering is more of a boolean/flag search. Decouple the actual searching functionality to almost pure, isolated / unit testable units and unit test. (I still import embers get which, once I upgrade to 3.5, I shouldn't need) Searching rules are now configurable from the outside, i.e. not wrapped in Controllers or Components. General searching itself now can use an asynchronous approach based on events. This prepares for future possibilities of handing off the searching to a web worker or elsewhere, which should aid in large scale searching and prepares the way for other searching methods. Adds the possibility of have multiple searches in one template/route/page.  Additionally, this adds a WithSearching mixin to aid linking the searching to ember in an ember-like way in a single place. Plus a WithListeners mixin to aid with cleaning up of event listeners on Controller/Component destruction. Post-initial work I slightly changed the API of create listeners: Returning the handler from a remover means you can re-add it again if you want to, this avoids having to save a reference to the handler elsewhere to do the same. The remove method itself now returns an array of handlers, again you might want to use these again or something, and its also more useful then just returning an empty array. The more I look at this the more I doubt that you'll ever use remove to remove individual handlers, you may aswell just use the remover returned from add. I've added some comments to reflect this, but they'll likely be removed once I'm absolutely sure of this. I also added some comments for WithSearching to explain possible further work re: moving searchParams so it can be hung off the controller object"
10133,Config Entry docs (#5734),  Add api docs for the config entry endpoints   Add enable_central_service_config field to agent docs   Add docs for config entry CLI operations   Fix wording and links in config entry docs   Add links to the central service config option   Update the central service config setting description. 
10134,Update to use a consulent build tag instead of just ent (#5759),
10135,Update to Consul Upgrading Doc,
10136,Centralized Config CLI (#5731),"  Add HTTP endpoints for config entry management   Finish implementing decoding in the HTTP Config entry apply endpoint   Add CAS operation to the config entry apply endpoint   Also use this for the bootstrapping and move the config entry decoding function into the structs package.   First pass at the API client for the config entries   Fixup some of the ConfigEntry APIs   Return a singular response object instead of a list for the ConfigEntry.Get RPC. This gets plumbed through the HTTP API as well. Dont return QueryMeta in the JSON response for the config entry listing HTTP API. Instead just return a list of config entries.   Minor API client fixes   Attempt at some ConfigEntry api client tests   These don’t currently work due to weak typing in JSON   Get some of the api client tests passing   Implement reflectwalk magic to correct JSON encoding a ProxyConfigEntry   Also added a test for the HTTP endpoint that exposes the problem. However, since the test doesn’t actually do the JSON encode/decode its still failing.   Move MapWalk magic into a binary marshaller instead of JSON.   Add a MapWalk test   Get rid of unused func   Get rid of unused imports   Fixup some tests now that the decoding from msgpack coerces things into json compat types   Stub out most of the central config cli   Fully implement the config read command.   Basic config delete command implementation   Implement config write command   Implement config list subcommand   Not entirely sure about the output here. Its basically the read output indented with a line specifying the kind/name of each type which is also duplicated in the indented output.   Update command usage   Update some help usage formatting   Add the connect enable helper cli command   Update list command output   Rename the config entry API client methods.   Use renamed apis   Implement config write tests   Stub the others with the noTabs tests.  Change list output format  Now just simply output 1 line per named config   Add config read tests   Add invalid args write test.   Add config delete tests   Add config list tests   Add connect enable tests   Update some CLI commands to use CAS ops   This also modifies the HTTP API for a write op to return a boolean indicating whether the value was written or not.   Fix up the HTTP API CAS tests as I realized they weren’t testing what they should.   Update config entry rpc tests to properly test CAS   Fix up a few more tests   Fix some tests that using ConfigEntries.Apply   Update config_write_test.go   Get rid of unused import "
10137,Update CHANGELOG.md,
10138,Ensure ServiceName is populated correctly for agent service checks,Also update some snapshot agent docs  Enforce correct permissions when registering a check  Previously we had attempted to enforce service:write for a check associated with a service instead of node:write on the agent but due to how we decoded the health check from the request it would never do it properly. This commit fixes that.  Update website/source/docs/commands/snapshot/agent.html.markdown.erb  Co-Authored-By: mkeeler mkeeler@users.noreply.github.com
10139,Update Helm Docs with consulPrefix,
10140,Make a few config entry endpoints return 404s and allow for snake_case and lowercase key names. (#5748),
10141,go fmt runtime_test.go,
10142,fix agent in connect docs,
10143,Restrict config file extensions read,
10144,fix redirects for acl-migrate-tokens (#5749),
10145,Update CHANGELOG.md,
10146,ui: fix 'make ui' again (#5751),When the v1 ui was removed the ui build incorrectly copied everything into a /dist/ subdirectory instead of directly into the top level.
10147,[docs] Fixing API broken links (#5732),  starting broken link fixes   Updating the other links for ACLs   Updating the rest of the links   fixing acl required links.   update a bunch of other links   updated a couple more broken links based on Alvins checker   removed the extra s 
10148,Update CHANGELOG.md,
10149,ACL Token ID Initialization (#5307),
10150,cli: actually allow the 'connect envoy' and 'watch' subcommands to work with -token-file (#5733),
10151,Modify ConfigEntry bootstrapping syntax more generic (#5744),  Modify ConfigEntry bootstrapping syntax to be generic and compatible with other CLI config syntax. Refs #5743   Fix gofmt issues. 
10152,Update CHANGELOG.md,
10153,Add HTTP endpoints for config entry management (#5718),
10154,"Enabling ""service"" watch handler to accept a slice of tags",Originally from PR #5347
10155,Update CHANGELOG.md,
10156,Connect: allow configuring Envoy for L7 Observability (#5558),  Add support for HTTP proxy listeners   Add customizable bootstrap configuration options   Debug logging for xDS AuthZ   Add Envoy Integration test suite with basic test coverage   Add envoy command tests to cover new cases   Add tracing integration test   Add gRPC support WIP   Merged changes from master Docker. get CI integration to work with same Dockerfile now   Make docker build optional for integration   Enable integration tests again!   http2 and grpc integration tests and fixes   Fix up command config tests   Store all container logs as artifacts in circle on fail   Add retries to outer part of stats measurements as we keep missing them in CI   Only dump logs on failing cases   Fix typos from code review   Review tidying and make tests pass again   Add debug logs to exec test.   Fix legit test failure caused by upstream rename in envoy config   Attempt to reduce cases of bad TLS handshake in CI integration tests   bring up the right service   Add prometheus integration test   Add test for denied AuthZ both HTTP and TCP   Try ANSI term for Circle 
10157,update changelog,
10158,remove reference to deleted branch,
10159,Update CHANGELOG.md,
10160,Merge pull request #5617 from hashicorp/f-acl-ux,Secure ACL Introduction for Kubernetes
10161,Fix: fail messages after a node rename replace the new node definition (#5520),"When receiving a serf faild message for a node which is not in the catalog, do not perform a register request to set is serf heath to critical as it could overwrite the node information and services if it was renamed. Fixes : #5518"
10162,acl: adding support for kubernetes auth provider login (#5600), auth providers binding rules auth provider for kubernetes login/logout
10163,acl: adding Roles to Tokens (#5514),"Roles are named and can express the same bundle of permissions that can currently be assigned to a Token (lists of Policies and Service Identities). The difference with a Role is that it not itself a bearer token, but just another entity that can be tied to a Token. This lets an operator potentially curate a set of smaller reusable Policies and compose them together into reusable Roles, rather than always exploding that same list of Policies on any Token that needs similar permissions. This also refactors the acl replication code to be semi-generic to avoid 3x copypasta."
10164,making ACLToken.ExpirationTime a *time.Time value instead of time.Time (#5663),"This is mainly to avoid having the API return ""0001-01-01T00:00:00Z"" as a value for the ExpirationTime field when it is not set. Unfortunately time.Time doesn't respect the json marshalling ""omitempty"" directive."
10165,acl: ACL Tokens can now be assigned an optional set of service identities (#5390),"These act like a special cased version of a Policy Template for granting a token the privileges necessary to register a service and its connect proxy, and read upstreams from the catalog."
10166,acl: tokens can be created with an optional expiration time (#5353),
10167,Implement bootstrapping proxy defaults from the config file (#5714),
10168,Implement config entry replication (#5706),
10169,Update CHANGELOG.md,
10170,Move the watch package into the api module (#5664), Move the watch package into the api module  It was already just a thin wrapper around the API anyways. The biggest change was to the testing. Instead of using a test agent directly from the agent package it now uses the binary on the PATH just like the other API tests. The other big changes were to fix up the connect based watch tests so that we didn’t need to pull in the connect package (and therefore all of Consul)
10171,fixing inconsitencies in agent/connect API documentation (#5715),
10172,docs: fix some minor acl related typos (#5711),
10173,fix sidebar for install (#5611),
10174,Add fmt and vet (#5671),  add go fmt and vet   go fmt fixes 
10175,Add website analytics back (#5699),  add website analytics to build   add segment analytics env var check 
10176,Merge pull request #5700 from hashicorp/service-reg-manager,Use centralized service config on agent service registrations
10177,Test an index=0 value in cache.Notify,
10178,Update alias checks on local add and remove,
10179,Update CHANGELOG.md,
10180,Add support for DNS config hot-reload (#4875),The DNS config parameters recursors and dns_config.* are now hot reloaded on SIGHUP or consul reload and do not need an agent restart to be modified. Config is stored in an atomic.Value and loaded at the beginning of each request. Reloading only affects requests that start after the reload. Ongoing requests are not affected. To match the current behavior the recursor handler is loaded and unloaded as needed on config reload.
10181,Fix a race in the ready logic,
10182,Make central service config opt-in and rework the initial registration,
10183,Fix a race in the service updates,
10184,Fill out the service manager functionality and fix tests,
10185,Add the service registration manager to the agent,
10186,Merge pull request #5615 from hashicorp/config-entry-rpc,Add RPC endpoints for config entry operations
10187,Rename config entry ACL methods,
10188,Clarify -log-rotate-duration string format and default value,
10189,Remove old redirects file (#5688),  add directions on how to update the redirects file   remove old redirects file 
10190,Add missing token field in the service definition in the docs (#5685),Fixes #5684
10191,Update CHANGELOG.md,
10192,Update go-msgpack version (#5683),Fixes #4673 Supercedes: #5677  There was an error decoding map[string]string values due to Go strings being immutable. This was fixes in our go-msgpack fork.
10193,Update consul-containers.html.md (#5645),To reflect the most recent version
10194,Fixed minor typos. (#5681),
10195,[docs] Leader Election Guide Updates (#5654),  Updating the Leader Election guide.   Update website/source/docs/guides/leader-election.html.md   updating key name   Update website/source/docs/guides/leader-election.html.md   Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/guides/leader-election.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com
10196,Updating network connectivity section based on feedback from Pavani. (#5612),
10197,tests: actually have TestSessionTTLRenew sleep during execution (#5669),Due to an unintended order of operations issue with integer division TestSessionTTLRenew was sleeping for 0s every time. Also add explicit failures for when the various session renewal returns nil unexpectedly.
10198,[docs] Geo Failover (#5641),"  Updated the headers, code snippets, and some language.   Update website/source/docs/guides/geo-failover.html.md   Changed banking-app to payments   Update website/source/docs/guides/geo-failover.html.md   Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com"
10199,[docs] Server Performance (#5627),  Moving server performance guide to docs.   fixing broken links   updating broken link   fixing broken links 
10200,Update CHANGELOG.md,
10201,Update Consul-Dev.dockerfile (#5678),This was putting the new binary on the wrong path so this wasn't updating the docker image in any effectual way.
10202,Remove redundant word.,
10203,[docs] Windows Guide (#5626),  Updating the windows guide for the migration.   adding config dir option 
10204,Update CHANGELOG.md,
10205,Fix some broken links (#5670),
10206,Filter non-passing nodes without modifying cache,
10207,Update CHANGELOG.md,
10208,Implement data filtering of some endpoints (#5579),Fixes: #4222  Data Filtering This PR will implement filtering for the following endpoints: Supported HTTP Endpoints  /agent/checks /agent/services /catalog/nodes /catalog/service/:service /catalog/connect/:service /catalog/node/:node /health/node/:node /health/checks/:service /health/service/:service /health/connect/:service /health/state/:state /internal/ui/nodes /internal/ui/services  More can be added going forward and any endpoint which is used to list some data is a good candidate. Usage When using the HTTP API a filter query parameter can be used to pass a filter expression to Consul. Filter Expressions take the general form of: <selector> == <value> <selector> != <value> <value> in <selector> <value> not in <selector> <selector> contains <value> <selector> not contains <value> <selector> is empty <selector> is not empty not <other expression> <expression 1> and <expression 2> <expression 1> or <expression 2> Normal boolean logic and precedence is supported. All of the actual filtering and evaluation logic is coming from the go-bexpr library Other changes Adding the Internal.ServiceDump RPC endpoint. This will allow the UI to filter services better.
10209,interpolate properly (#5665),
10210,Share Fastly and Netlify redirects (#5619),  consolidate netlify and fastly redirects   remove validation check to support full url redirects 
10211,Update CHANGELOG.md,
10212,Handle rules translation when coming from the JSON compat HCL (#5662),We were not handling some object keys when they were strings instead of identifiers. Now both are handled. Fixes #5493
10213,Build System Fixes for Go Modules (#5655),  Docker based builds can now use the module cache   Simplify building the consul-dev docker image.   Make sure to pull the latest consul image.   Allow selecting base image version for the dev image 
10214,"Remove old UI, option to use it, and its build processes",
10215,Update CHANGELOG.md,
10216,Enforce log level filter for log files,
10217,Update CHANGELOG.md,
10218,Move the ACL logic into the ConfigEntry interface,
10219,Merge pull request #5639 from hashicorp/checkout-outside-gopath,CircleCI: Checkout code outside GOPATH
10220,download tools without library,
10221,checkout code outside GOPATH,
10222,build: use only version tags in version output now api is tagged too (#5622)," build: use only version tags in version output now api is tagged too  Fixes #5621 Since we now have api package tags, our build tooling was picking up api tag when working out version to bake into builds. This fixes it by restricting to only tags that start with v. Before: $ make version Version:                    1.4.4 Version + release:          1.4.4-dev Version + git:              api/v1.0.1-90-g3ce60db0c Version + release + git:    api/v1.0.1-90-g3ce60db0c-dev (3ce60db0c) After: $ make version Version:                    1.4.4 Version + release:          1.4.4-dev Version + git:              v1.4.4-126-g3ce60db0c Version + release + git:    v1.4.4-126-g3ce60db0c-dev (3ce60db0c)  Update GNUmakefile"
10223,Add additional raft metrics (#5628), Add documentation for new raft metrics Revendor raft from master
10224,removing gocov packages (#5534),  removing gocov packages   revise cov make target 
10225,make changelog use proper syntax,
10226,update changelog,
10227,Add RPC endpoints for config entry operations,
10228,Merge pull request #5609 from hashicorp/update_ports,Update Ports Documentation
10229,Update CHANGELOG.md,
10230,Merge pull request #5607 from hashicorp/deploy-previews,Add Documentation Previews and Checks
10231,Updated Ports Documentation,
10232,link check only on non-forks,
10233,[docs] security warning about Helm chart (#5561), [docs] security warning about Helm chart  Correct security warning about helm chart to caution about default Consul install.  clarify that k8s or consul should be secure
10234,terraform: remove modules in repo (#5085)," terraform: remove modules in repo  These are not currently being maintained and tested, and were created prior to the existence of the Terraform Module Registry, which is the more appropriate way to share and distribute modules. In an effort to limit confusion of the purpose of these modules and not encourage usage of something we aren't confident about, this removes them from this repository. You can still access these modules if you depend on them by pinning to a specific ref in Git. It is recommended you pin against a recent major version where these modules existed: module ""consul-aws"" {   source = ""git::https://github.com/hashicorp/consul.git//terraform/aws?ref=v1.4.0"" } More detail about module sources can be found on this page: https://www.terraform.io/docs/modules/sources.html  terraform: add a readme for anyone who can't find the modules"
10235,add link checking to CI and split website build/deploy,
10236,add netlify redirects,
10237,add link checking script,
10238,Merge pull request #5376 from hashicorp/fix-tests,Fix tests in prep for CircleCI Migration
10239,Merge pull request #5596 from hashicorp/test-s3,add s3 upload to dev bucket
10240,remove envvar for s3 path from config file and error check s3 cp,
10241,add s3 upload to dev bucket,
10242,fix broken acl link (#5592),  fix broken acl link   Update website/source/docs/acl/acl-migrate-tokens.html.md   Co-Authored-By: alvin-huang alvin@hashicorp.com
10243,[docs] Connect in Production (#5503),  Updating guide to prepare for Learn migration.   Update website/source/docs/guides/connect-production.md   Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/guides/connect-production.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/guides/connect-production.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/guides/connect-production.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com
10244,tls: allow to add ip addresses as Subject Alternative Names when creating certificates (#5602),
10245,[docs] New k8s reference arch guide. (#5528),  New k8s reference arch guide.   Update website/source/docs/guides/kubernetes-reference.html.md   Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/guides/kubernetes-reference.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/guides/kubernetes-reference.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/guides/kubernetes-reference.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com   Update website/source/docs/guides/kubernetes-reference.html.md   Update website/source/docs/guides/kubernetes-reference.html.md   Update website/source/docs/guides/kubernetes-reference.html.md   Update website/source/docs/guides/kubernetes-reference.html.md   Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/guides/kubernetes-reference.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/guides/kubernetes-reference.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com   Update website/source/docs/guides/kubernetes-reference.html.md   Update website/source/docs/guides/kubernetes-reference.html.md   Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/guides/kubernetes-reference.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com   Update website/source/docs/guides/kubernetes-reference.html.md   Update website/source/docs/guides/kubernetes-reference.html.md   Update website/source/docs/guides/kubernetes-reference.html.md   Update website/source/docs/guides/kubernetes-reference.html.md   Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/guides/kubernetes-reference.html.md
10246,updated the graphic,
10247,Updates based on feedback,
10248,rename refs to areas guide to advanced-federation (#5603),
10249,Update website/source/docs/guides/kubernetes-reference.html.md,
10250,Update website/source/docs/guides/kubernetes-reference.html.md,Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com
10251,Update website/source/docs/guides/kubernetes-reference.html.md,
10252,Update website/source/docs/guides/kubernetes-reference.html.md,
10253,Pull go-discover to fix Sirupsen/logrus (#5598),  Pull go-discover to fix Sirupsen/logrus   Actually rename Sirupsen -> sirupsen in vendor (despite macOS)   Actually actually rename Sirupsen -> sirupsen in vendor (despite macOS) 
10254,Update website/source/docs/guides/kubernetes-reference.html.md,
10255,Update website/source/docs/guides/kubernetes-reference.html.md,Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com
10256,Update website/source/docs/guides/kubernetes-reference.html.md,Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com
10257,Update website/source/docs/guides/kubernetes-reference.html.md,
10258,Update website/source/docs/guides/kubernetes-reference.html.md,Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com
10259,Update website/source/docs/guides/kubernetes-reference.html.md,Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com
10260,Update website/source/docs/guides/kubernetes-reference.html.md,Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com
10261,Update website/source/docs/guides/kubernetes-reference.html.md,
10262,Update website/source/docs/guides/kubernetes-reference.html.md,
10263,Update website/source/docs/guides/kubernetes-reference.html.md,
10264,Update website/source/docs/guides/kubernetes-reference.html.md,Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com
10265,Minor Session / Lock Related Documentation Fixes (#5037),  website: specify value of acquire/release params for kv   website: clarify leader election usage in TTL docs   website: document minimal value of lockdelay   I believe it uses the default when parsing 0 as it views that as an empty parameter in this case.
10266,Update website/source/docs/guides/kubernetes-reference.html.md,Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com
10267,[docs] Basic Federation (#5537),  Adding headers and example output.   Update website/source/docs/guides/datacenters.html.md   Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/guides/datacenters.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/guides/datacenters.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/guides/datacenters.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com   Update website/source/docs/guides/datacenters.html.md   Update website/source/docs/guides/datacenters.html.md 
10268,EA has validated this content as working with Consul 1.4 (#5541),
10269,EA has validated that this content works with Consul 1.4 (#5542),
10270,Merge pull request #5539 from hashicorp/service-config,Service config state model
10271,Cleaned up some error handling/comments around config entries,
10272,Merge pull request #5553 from hashicorp/txn-check-serialization,Use the correct check duration fields when converting transaction ops
10273,[docs] reimplement changes from PR #5505 (#5591),
10274,Fix broken links (#5552),  fix network segments broken urls   fix iptables broken link   fix acl broken link   fix acl-rules broken link   fix acl migrate broken link   fix clone token link 
10275,"Revert ""[docs] Connect with Envoy Guide"" (#5589)",
10276,Merge pull request #5515 from tryan225/docs/helm-extra-volumes-example,[docs] Adding an example of extraVolumes with the Helm chart
10277,allow 'make dev-docker' to cache resolved modules (#5588),
10278,remove remaining references to govendor and vendorfmt (#5587),
10279,fix remaining CI failures after Go 1.12.1 Upgrade (#5576),
10280,Encode config entry FSM messages in a generic type,
10281,Clean up service config state store methods,
10282,acl: memdb filter of tokens-by-policy was inverted (#5575),The inversion wasn't noticed because the parallel execution of TokenList tests was operating incorrectly due to variable shadowing.
10283,Bump vendor to take in new sdk/api versions (#5574),
10284,Update api ver to 1.0.1 (#5573),
10285,Update SDK version (#5572),
10286,Move internal/ to sdk/ (#5568),  Move internal/ to sdk/   Add a readme to the SDK folder 
10287,[docs] Connect with Envoy Guide (#5505),  Updating the intro.   Update website/source/docs/guides/connect-envoy.md   Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/guides/connect-envoy.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com
10288,Update vendoring from go mod. (#5566),
10289,Update api/internal tags (#5565),
10290,Update internal dep (#5564),
10291,Bump cleanhttp to be the same version as the other modules (#5563),
10292,Convert to Go Modules (#5517),  First conversion   Use serf 0.8.2 tag and associated updated deps    Move freeport and testutil into internal/    Make internal/ its own module   Update imports   Add replace statements so API and normal Consul code are self-referencing for ease of development   Adapt to newer goe/values   Bump to new cleanhttp   Fix ban nonprintable chars test   Update lock bad args test   The error message when the duration cannot be parsed changed in Go 1.12 (ae0c435877d3aacb9af5e706c40f9dddde5d3e67). This updates that test.   Update another test as well   Bump travis   Bump circleci   Bump go-discover and godo to get rid of launchpad dep   Bump dockerfile go version   fix tar command   Bump go-cleanhttp 
10293,[docs] Advanced Federation (#5538),"  renaming guide and changing format.   Adding headers, updating output.   Update website/source/docs/guides/advanced-federation.html.md   Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/guides/advanced-federation.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/guides/advanced-federation.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/guides/advanced-federation.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/guides/advanced-federation.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com   Update website/source/docs/guides/advanced-federation.html.md   Update website/source/docs/guides/advanced-federation.html.md "
10294,[docs] Semaphore (#5524),  Updating and adding headings.   Update website/source/docs/guides/semaphore.html.md   Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/guides/semaphore.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com
10295,Re-add logic to handle the undocumented duration fields,
10296,http: use the correct check duration fields when converting txn ops,
10297,add redirects for ACL docs (#5550),
10298,missed a broken link (#5545),
10299,[docs] ACL Side Navigation Added (#5526),"  Adding new ACL menu item with guides and documentation.   removing sidebar stuff from under agent, some documenting "
10300,add redirects for ACL docs,
10301,[Docs] Launching K8s getting started path on Learn (#5511),  Moving Minikube guide.   Update website/source/layouts/docs.erb   Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/guides/index.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com
10302,Update website/source/docs/guides/connect-envoy.md,Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com
10303,Update website/source/docs/guides/connect-envoy.md,Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com
10304,Updated for migration. (#5512),
10305,Fixing smart quotes (#5522),
10306,Merge pull request #5544 from hashicorp/fix-broken-link,fix broken link
10307,fix broken link,
10308,Merge pull request #5525 from hashicorp/add-xc-builds,Add xc builds
10309,Connect: Fix Envoy getting stuck during load (#5499), Connect: Fix Envoy getting stuck during load  Also in this PR:  - Enabled outlier detection on upstreams which will mark instances unhealthy after 5 failures (using Envoy's defaults)  - Enable weighted load balancing where DNS weights are configured   Fix empty load assignments in the right place   Fix import names from review   Move millisecond parse to a helper function 
10310,adding distro builds to circleci,
10311,"[docs] improve telegraf guide with objectives, summary, formatting (#5527)",
10312,Add some basic normalize/validation logic for config entries,
10313,api: fix panic in 'consul acl set-agent-token' (#5533),api: fix panic in 'consul acl set-agent-token' Fixes #5531
10314,docs: update 'sc' usage in windows-guide.html.md (#5501)," the space after = is significant in sc parameters (binPath= "" , start= auto) given the text ""the service automatically starts up during/after boot"", added start= auto to   the example,  otherwise the service will be set to Manual start mode."
10315,Connect: Make Connect health queries unblock correctly (#5508),  Make Connect health queryies unblock correctly in all cases and use optimal number of watch chans. Fixes #5506.   Node check test cases and clearer bug test doc   Comment update 
10316,[docs] New doc on integration with Ambassador Proxy (#5497),"  New doc on integration with Ambassador Proxy   Remove reference to ""step 1""   Added link to docs for consul intention check   Update website/source/docs/platform/k8s/ambassador.html.md   Co-Authored-By: tradel todd@radel.us  Update website/source/docs/platform/k8s/ambassador.html.md  Co-Authored-By: tradel todd@radel.us  Update website/source/docs/platform/k8s/ambassador.html.md  Co-Authored-By: tradel todd@radel.us  Added links to install guide and Connect guide"
10317,Putting source back into Dev Mode,
10318,Merge branch 'master' of github.com:hashicorp/consul,
10319,Update website/source/docs/guides/kubernetes-reference.html.md,Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com
10320,Update website/source/docs/guides/kubernetes-reference.html.md,Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com
10321,Updating network segments guide (#5529),
10322,Merge pull request #5523 from hashicorp/docs/coredns,Add dns configuration info for CoreDNS users
10323,Add dns configuration info for CoreDNS users,
10324,New k8s reference arch guide.,
10325,Fix fsm serialization and add snapshot/restore,
10326,add optional parallel flag to gox,
10327,Release v1.4.4,
10328,Update CHANGELOG.md,
10329,Update CHANGELOG.md,
10330,Fill out state store/FSM functions and add tests,
10331,agent: ensure the TLS hostname verification knows about the currently configured domain (#5513),
10332,Adding an example of extraVolumes with the Helm chart,
10333,Add config types and state store table,
10334,Update CHANGELOG.md,
10335,[Docs] Added a note to GCE auto-join credentials option (#5391), Added a note to GCE auto-join credentials option  Simply added a note to remind users that putting a json file in the config-dir will make consul parse it as a config file. Hope to help someone else avoid wasting a day because of these errors: ==> Error parsing /etc/consul.d/credentials.json: 10 error(s) occurred: * invalid config key private_key  Updated according to style guidelines  Co-Authored-By: delamart erik@delamarter.ch
10336,Condense some test logic and add a comment about renaming,
10337,Updating the intro.,
10338,[Docs] Connect Sidecar Proxies: Fixes 'must may' typo and adds formatting to follow other docs (#5397),  Fixes 'must may' typo and adds formatting to follow other docs   Reverts local_service_port docs to state its optional 
10339,[docs] Added section on using Helm chart to deploy Enterprise binaries (#5454),  Added section on using Helm chart to deploy Enterprise binaries   Update website/source/docs/platform/k8s/helm.html.md   Switch to active voice. Co-Authored-By: tradel todd@radel.us  Update website/source/docs/platform/k8s/helm.html.md  Co-Authored-By: tradel todd@radel.us   Update website/source/docs/platform/k8s/helm.html.md   Update website/source/docs/platform/k8s/helm.html.md   Co-Authored-By: tradel todd@radel.us
10340,Add log_file attribute to agent configuration documentation (#5492),
10341,agent: only use TestAgent when appropriate (#5502),
10342,Update CHANGELOG.md,
10343,Optimize health watching to single chan/goroutine. (#5449),"Refs #4984. Watching chans for every node we touch in a health query is wasteful. In #4984 it shows that if there are more than 682 service instances we always fallback to watching all services which kills performance. We already have a record in MemDB that is reliably update whenever the service health result should change thanks to per-service watch indexes. So in general, provided there is at least one service instances and we actually have a service index for it (we always do now) we only ever need to watch a single channel. This saves us from ever falling back to the general index and causing the performance cliff in #4984, but it also means fewer goroutines and work done for every blocking health query. It also saves some allocations made during the query because we no longer have to populate a WatchSet with 3 chans per service instance which saves the internal map allocation. This passes all state store tests except the one that explicitly checked for the fallback behaviour we've now optimized away and in general seems safe."
10344,Update CHANGELOG.md,
10345,Ensure we remove Connect proxy before deregistering the service itself (#5482),This will fix https://github.com/hashicorp/consul/issues/5351
10346,Docs Proofing (#5424)," Docs: Remove default_policy From Code Example  It is not needed according to: https://www.consul.io/docs/agent/acl-system.html#configuring-acls  Docs: Cleanup Commands And Their Output On ACL Guide Page  Remove extra spaces and newlines Ensure rules match input rules  Docs: Remove Incomplete ""Added In Version"" Statement  Version added is specified on parent option   Docs: Fix Broken Links   Docs: Minor Sentence Tweaks "
10347,Update CHANGELOG.md,
10348,Fix checks removal when removing service (#5457),Fix my recently discovered issue described here: #5456
10349,acl: reduce complexity of token resolution process with alternative singleflighting (#5480),"acl: reduce complexity of token resolution process with alternative singleflighting Switches acl resolution to use golang.org/x/sync/singleflight. For the identity/legacy lookups this is a drop-in replacement with the same overall approach to request coalescing. For policies this is technically a change in behavior, but when considered holistically is approximately performance neutral (with the benefit of less code). There are two goals with this blob of code (speaking specifically of policy resolution here): 1) Minimize cross-DC requests.   2) Minimize client-to-server LAN requests. The previous iteration of this code was optimizing for the case of many possibly different tokens being resolved concurrently that have a significant overlap in linked policies such that deduplication would be worth the complexity. While this is laudable there are some things to consider that can help to adjust expectations: 1) For v1.4+ policies are always replicated, and once a single policy   shows up in a secondary DC the replicated data is considered   authoritative for requests made in that DC. This means that our   earlier concerns about minimizing cross-DC requests are irrelevant   because there will be no cross-DC policy reads that occur. 2) For Server nodes the in-memory ACL policy cache is capped at zero,   meaning it has no caching. Only Client nodes run with a cache. This   means that instead of having an entire DC's worth of tokens (what a   Server might see) that can have policy resolutions coalesced these   nodes will only ever be seeing node-local token resolutions. In a   reasonable worst-case scenario where a scheduler like Kubernetes has   ""filled"" a node with Connect services, even that will only schedule   ~100 connect services per node. If every service has a unique token   there will only be 100 tokens to coalesce and even then those requests   have to occur concurrently AND be hitting an empty consul cache. Instead of seeing a great coalescing opportunity for cutting down on redundant Policy resolutions, in practice it's far more likely given node densities that you'd see requests for the same token concurrently than you would for two tokens sharing a policy concurrently (to a degree that would warrant the overhead of the current variation of singleflighting. Given that, this patch switches the Policy resolution process to only singleflight by requesting token (but keeps the cache as by-policy)."
10350,Update state store test for changing node ID,
10351,Update memberlist for the node renaming change,
10352,Add a test for changing a failed node's ID,
10353,[docs] Deploying Consul with Kubernetes (#5471),  Adding new K8s guide.   Update website/source/docs/guides/kuberenetes-deployment.html.md   Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/guides/kuberenetes-deployment.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com   updating based on feedback.   Couple updates based on feedback.   Update website/source/docs/guides/kuberenetes-deployment.html.md   updating value file. 
10354,Add docs for using Helm --set to create extraConfig variables (#5474), Add docs for using Helm --set to create extraConfig variables  Based on info provided for consul-helm issue 74.  fixing formatting
10355,add sentinel redir (#5484),
10356,[docs] Move Sentinel documentation (#5478),"  Moving sentinel doc   updating links, fixing headings.   Update website/source/docs/agent/acl-rules.html.md "
10357,Merge pull request #5483 from hashicorp/add-bootstrap-redir,update bootstrap redirect
10358,update bootstrap redirect,
10359,[docs] Bootstrapping Guide -> Install docs (#5473),  moved the bootstrapping guide to the docs.   More edits for consistency.   Added arch link 
10360,Update CHANGELOG.md,
10361,agent: enable reloading of tls config (#5419),"This PR introduces reloading tls configuration. Consul will now be able to reload the TLS configuration which previously required a restart. It is not yet possible to turn TLS ON or OFF with these changes. Only when TLS is already turned on, the configuration can be reloaded. Most importantly the certificates and CAs."
10362,Remove misleading encrypt param documentation (#5452),"According to https://www.consul.io/docs/agent/options.html#_encrypt, the encrypt param specifies the 16-byte key to use, not the path to a config file containing the key."
10363,acl: correctly extend the cache for acl identities during resolution (#5475),
10364,Merge pull request #5451 from hashicorp/update_go_discover_for_azure,Update go-discover vendor
10365,Typo fix (segement > segment) (#5469),
10366,Update CHANGELOG.md,
10367,[catalog] Update the node's services indexes on update (#5458),"Node updates were not updating the service indexes, which are used for service related queries. This caused the X-Consul-Index to stay the same after a node update as seen from a service query even though the node data is returned in heath queries. If that happened in between queries the client would miss this change. We now update the indexes of the services on the node when it is updated. Fixes: #5450"
10368,"website: delete duplication of ""are"" (#5464)",
10369,Update go-discover vendor, Adds note about use of ENV variables for auto-join on Azure
10370,Merge pull request #5453 from hashicorp/circleci2.0-config,refactor circleci config to 2.0
10371,refactor circleci config to 2.0,
10372,Merge pull request #5445 from hashicorp/docs/helm-annotations,Add docs for new Helm annotations options
10373,[Docs] ACL Bootstrap Guide (#5399),  Adding updates for consul reload of token config.   Update website/source/docs/guides/acl.html.md 
10374,[doc] New Ports Documentation  (#5442),  Adding a ports table.   Updating layout based on feedback. 
10375,Add docs for new Helm annotations options,
10376,Merge pull request #5444 from hashicorp/docs/helm-priorityClassName,Add docs about new Helm priorityClassName options
10377,Add docs about new Helm priorityClassName options,
10378,Merge pull request #5443 from hashicorp/docs/acl-to-sync,Move aclSyncToken docs under syncCatalog
10379,Add logic to allow changing a failed node's ID,
10380,Move aclSyncToken docs under syncCatalog,Additionally updates the anchors to follow the established convention.
10381,[docs] fix link to prepared query rules (#5435),  [docs] fix link to prepared query rules   Update website/source/api/query.html.md   Co-Authored-By: judithpatudith judith@hashicorp.com
10382,Merge pull request #5431 from hashicorp/docs/helm-extraConfig,[docs] Add examples for the extraConfig options in the Helm chart
10383,Add examples for the extraConfig options in the Helm chart,
10384,Merge pull request #5436 from hashicorp/fix-typo,fix typos
10385,fix typos,
10386,fix typos reported by golangci-lint:misspell (#5434),
10387,[Docs] Production Guide for ACLs (#5385),  New guide for ACLs   Fixing some formatting issues.   Update website/source/docs/guides/production-acls.html.md   Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/guides/production-acls.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/guides/production-acls.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com   Resolving PR comments.   Closing the rest of the PR comments   Updates for persistence.   Updating commands.   Update website/source/docs/guides/production-acls.html.md   Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/guides/production-acls.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com
10388,Merge pull request #5420 from hashicorp/f-catalog-changes,Catalog API Doc Changes
10389,Update to registering services via Catalog API,
10390,Update to registering services via Catalog API,
10391,tlsutil: don't use server_name config for RPC connections (#5394), server name only for outgoing https for checks
10392,improve flaky LANReap tests by expliciting configuring the tombstone timeout,"In TestServer_LANReap autopilot is running, so the alternate flow through the serf reaping function is possible. In that situation the ReconnectTimeout is not relevant so for parity also override the TombstoneTimeout value as well. For additional parity update the TestServer_WANReap and TestClient_LANReap versions of this test in the same way even though autopilot is irrelevant here ."
10393,tests: avoid leaking child processes from agent/proxyprocess package,
10394,website: fix broken links,
10395,website: fix gemfile.lock (#5429),
10396,Putting source back into Dev Mode,
10397,Merge branch 'master' of https://github.com/hashicorp/consul,
10398,[docs] Add IntelliJ Consul to the list of community tools (#5379),
10399,Release v1.4.3,
10400,Update Changelog,
10401,Fixes for CVE-2019-8336,Fix error in detecting raft replication errors. Detect redacted token secrets and prevent attempting to insert. Add a Redacted field to the TokenBatchRead and TokenRead RPC endpoints This will indicate whether token secrets have been redacted. Ensure any token with a redacted secret in secondary datacenters is removed. Test that redacted tokens cannot be replicated.
10402,Update to registering services via Catalog API,
10403,Update to registering services via Catalog API,
10404,Update CHANGELOG.md,
10405,default to tls 1.2 as promised. (#5340),
10406,Update CHANGELOG.md,
10407,Register and deregisters services and their checks atomically in the local state (#5012),Prevent race between register and deregister requests by saving them together in the local state on registration. Also adds more cleaning in case of failure when registering services / checks.
10408,Update CHANGELOG.md,
10409,Dont modify memdb owned token data for get/list requests of tokens (#5412),"Previously we were fixing up the token links directly on the *ACLToken returned by memdb. This invalidated some assumptions that a snapshot is immutable as well as potentially being able to cause a crash. The fix here is to give the policy link fixing function copy on write semantics. When no fixes are necessary we can return the memdb object directly, otherwise we copy it and create a new list of links. Eventually we might find a better way to keep those policy links in sync but for now this fixes the issue."
10410,Fix race condition in DNS when using cache  (#5398)," Fix race condition in DNS when using cache  The healty node filtering was modifying the result from the cache, which caused a crash when multiple queries were made to the same service simultaneously. We now copy the node slice before filtering to ensure we do not modify the data stored in the cache.  Fix wording in dns cache config doc  s/dns_max_age/cache_max_age/"
10411,Update CHANGELOG.md,
10412,Call RemoveServer for reap events (#5317),This ensures that servers are removed from RPC routing when they are reaped.
10413,test: fix concurrent map access when setting up test vault,
10414,fix ignored errors in state store internals as reported by errcheck,
10415,fix a few leap-year related clock math inaccuracies and failing tests,
10416,typo (#5407),
10417,Update CHANGELOG.md,
10418,ACL Token Persistence and Reloading (#5328),"This PR adds two features which will be useful for operators when ACLs are in use.  Tokens set in configuration files are now reloadable. If acl.enable_token_persistence is set to true in the configuration, tokens set via the v1/agent/token endpoint are now persisted to disk and loaded when the agent starts (or during configuration reload)  Note that token persistence is opt-in so our users who do not want tokens on the local disk will see no change. Some other secondary changes:  Refactored a bunch of places where the replication token is retrieved from the token store. This token isn't just for replicating ACLs and now it is named accordingly. Allowed better paths in the v1/agent/token/ API. Instead of paths like: v1/agent/token/acl_replication_token the path can now be just v1/agent/token/replication. The old paths remain to be valid.  Added a couple new API functions to set tokens via the new paths. Deprecated the old ones and pointed to the new names. The names are also generally better and don't imply that what you are setting is for ACLs but rather are setting ACL tokens. There is a minor semantic difference there especially for the replication token as again, its no longer used only for ACL token/policy replication. The new functions will detect 404s and fallback to using the older token paths when talking to pre-1.4.3 agents. Docs updated to reflect the API additions and to show using the new endpoints. Updated the ACL CLI set-agent-tokens command to use the non-deprecated APIs."
10419,Merge pull request #5325 from hashicorp/consul-ca-panic,connect/ca: fix a potential panic in the Consul provider
10420,Centralise tls configuration part 2 (#5374),"This PR is based on #5366 and continues to centralise the tls configuration in order to be reloadable eventually! This PR is another refactoring. No tests are changed, beyond calling other functions or cosmetic stuff. I added a bunch of tests, even though they might be redundant."
10421,Add more details on SkipNodeUpdate option (#5345),  Add more details on SkipNodeUpdate option   Updating the language for the entire parameter. 
10422,Centralise tls configuration part 1 (#5366),"In order to be able to reload the TLS configuration, we need one way to generate the different configurations. This PR introduces a tlsutil.Configurator which holds a tlsutil.Config. Afterwards it is responsible for rendering every tls.Config. In this particular PR I moved IncomingHTTPSConfig, IncomingTLSConfig, and OutgoingTLSWrapper into tlsutil.Configurator. This PR is a pure refactoring - not a single feature added. And not a single test added. I only slightly modified existing tests as necessary."
10423,website: update bootstrap-saas depenency (#5387),https://blog.getbootstrap.com/2019/02/13/bootstrap-4-3-1-and-3-4-1/
10424,Update CHANGELOG.md,
10425,Allow DNS interface to use agent cache (#5300),"Adds two new configuration parameters ""dns_config.use_cache"" and ""dns_config.cache_max_age"" controlling how DNS requests use the agent cache when querying servers."
10426,add wait to TestClient_JoinLAN,
10427,add retry to TestResetSessionTimerLocked,
10428,"add serf check to testDNSServiceLookupResponseLimits, checkDNSService",
10429,add wait to TestOperator_AutopilotCASConfiguration,
10430,add wait to TestSnapshot,
10431,add serf check to TestAPI_ACLToken_List,
10432,add serf check to various api/agent tests,
10433,add serf check to TestAPI_CatalogNodes,
10434,"add serf check to TestAPI_ConnectCARoots_empty, TestAPI_ConnectCAConfig_get_set",
10435,add serf check to TestAPI_CoordinateUpdate,
10436,"add serf check to TestAPI_HealthChecks_NodeMetaFilter, TestAPI_HealthConnect",
10437,"add serf check to TestAPI_ClientPutGetDelete, TestAPI_ClientWatchGet",
10438,add serf check to TestAPI_SemaphoreConflict,
10439,add serf check to TestAPI_Snapshot,
10440,add serf check to TestLockCommand,
10441,add serf check to TestAPI_AgentServices_ManagedConnectProxyDeprecatedUpstreams,
10442,add wait to TestAgent_RPCPing,
10443,remove serf check,
10444,add serf check to TestAPI_SemaphoreConflict,
10445,fix TestAgent_CheckCriticalTime and better error output,
10446,skip TestCheckTCPPassing on CircleCI,
10447,fix incorrect body of TestACLEndpoint_PolicyBatchRead,Lifted from PR #5307 as it was an unrelated drive-by fix on that PR anyway. s/token/policy/
10448,Add common blocking implementation details to docs (#5358)," Add common blocking implementation details to docs  These come up over and over again with blocking query loops in our own code and third-party's. #5333 is possibly a case (unconfirmed) where ""badly behaved"" blocking clients cause issues, however since we've never explicitly documented these things it's not reasonable for third-party clients to have guessed that they are needed! This hopefully gives us something to point to for the future. It's a little wordy - happy to consider breaking some of the blocking stuff out of this page if we think it's appropriate but just wanted to quickly plaster over this gap in our docs for now.   Update index.html.md   Apply suggestions from code review   Co-Authored-By: banks banks@banksco.de   Update index.html.md   Update index.html.md   Clearified monotonically   Fixing formating "
10449,website: fix errant mention of 'snapshot save' on docs for 'snapshot restore',
10450,Merge pull request #5344 from hashicorp/test-no-log-buffer,testutil: Set the environment variable NOLOGBUFFER=1 to have test agent logs go straight to stdout
10451,Merge pull request #5361 from hashicorp/update-some-tests-to-new-tokens,update agent/agent_endpoint_test.go to use V2 tokens with attached policies
10452,[Docs] Helm Chart (#5350),  Updating the Helm chart to include ACL parameter and examples.   Updates based on feedback.   Update website/source/docs/platform/k8s/helm.html.md   Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com
10453,update agent/agent_endpoint_test.go to use V2 tokens with attached policies,
10454,[docs] ACL reset procedure (#5334),  Adding reset instructions.   Added link to the boostrapping guide for the reset procedure.   Update website/source/docs/guides/acl.html.md   Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/guides/acl.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/guides/acl.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com
10455,Update CHANGELOG.md,
10456,Envoy config cluster (#5308),  Start adding tests for cluster override   Refactor tests for clusters   Passing tests for custom upstream cluster override   Added capability to customise local app cluster   Rename config for local cluster override 
10457,Update CHANGELOG.md,
10458,Deferred updating response meta with consul headers (#5355),
10459,Update CHANGELOG.md,
10460,Fix logfile open filemode (#5354),Fixes #5346
10461,Merge pull request #5349 from hashicorp/acl-endpoint-test-consistency,test: switch test file from assert -> require for consistency
10462,test: switch test file from assert -> require for consistency,Also in acl_endpoint_test.go:  convert logical blocks in some token tests to subtests remove use of require.New  This removes a lot of noise in a later PR.
10463,[Docs] New KV documentation  (#5315),  Adding new KV doc   fixing the metadata   Update website/source/docs/agent/kv.html.md   Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/agent/kv.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/agent/kv.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/agent/kv.html.md
10464,Pass a testing.T into NewTestAgent and TestAgent.Start (#5342),"This way we can avoid unnecessary panics which cause other tests not to run. This doesn't remove all the possibilities for panics causing other tests not to run, it just fixes the TestAgent"
10465,travis: enable branch builds for f-acl-ux and stop doing them for f-envoy,
10466,Merge pull request #5343 from hashicorp/fixes-grab-bag,various small fixes
10467,testutil: Set the environment variable NOLOGBUFFER=1 to have test agent logs go straight to stdout,"This is a followup to the testing feature added in #5304. While it is very nice to have test agent logs to through testing.T.Logf so that only logs from failed tests are emitted, if a test is hanging or taking a long time those logs are delayed. In that case setting NOLOGBUFFER=1 will temporarily redirect them to stdout so you can see immediate feedback about hangs when running the tests in verbose mode. One current example of a test where this can be relevant is: $ go test ./agent/consul -run 'TestCatalog_ListServices_Stale' -v"
10468,correct some typos,
10469,ensure that we plumb our configured logger into all parts of the raft library,
10470,Docs EA update RA and DG (#5336), Confirm RA against Consul 1.3  Change product_version frontmatter to ea_version and increase to 1.3  Confirm DG against Consul 1.3  Change product_version frontmatter to ea_version and increase to 1.3
10471,reduce the local scope of variable,
10472,update changelog,
10473,agent: only enable TLS on gRPC if the HTTPS API port is enabled (#5287),Currently the gRPC server assumes that if you have configured TLS certs on the agent (for RPC) that you want gRPC to be encrypted. If gRPC is bound to localhost this can be overkill. For the API we let the user choose to offer HTTP or HTTPS API endpoints independently of the TLS cert configuration for a similar reason. This setting will let someone encrypt RPC traffic with TLS but avoid encrypting local gRPC traffic if that is what they want to do by only enabling TLS on gRPC if the HTTPS API port is enabled.
10474,clarify the ACL.PolicyDelete endpoint (#5337),"There was an errant early-return in PolicyDelete() that bypassed the rest of the function.  This was ok because the only caller of this function ignores the results. This removes the early-return making it structurally behave like TokenDelete() and for both PolicyDelete and TokenDelete clarify the lone callers to indicate that the return values are ignored. We may wish to avoid the entire return value as well, but this patch doesn't go that far."
10475,Merge pull request #5338 from petems/fix_cloud_auto_join_docs,Update Azurerm Cloud Auto-Join docs
10476,Adds newline for bullets, Formatting was previously broken
10477,Adds note about secret value," For future traveler, this literally ate up an entire day of debugging, so hopefully it helped you! :dancer:"
10478,Update specific perms for Azure, listAll is not valid
10479,Add note about equals signs,
10480,update TestStateStore_ACLBootstrap to not rely upon request mutation (#5335),
10481,Documentation - New plugin for frontend applications based in webpack (#5310),  Add new plugin for front-end applications based in webpack   Fix doc suggestion   Co-Authored-By: marlonmleite marlonmleite@gmail.com
10482,Update CHANGELOG.md,
10483,Move autopilot initialization to prevent race (#5322),establishLeadership invoked during leadership monitoring may use autopilot to do promotions etc. There was a race with doing that and having autopilot initialized and this fixes it.
10484,website: Update UI Policy recommendations from Guide (#5321),"The guide currently uses node, service, and service for the UI Policy. This will cause a practically useless UI. This patch uses the _prefix variants instead which will have the intended behavior."
10485,Merge pull request #5302 from hashicorp/docs/k8s-acl,Update k8s ACL documentation
10486,Add additional clarification to the ACL token wording,
10487,Apply suggestions from code review,Co-Authored-By: adilyse rebecca@hashicorp.com
10488,connect/ca: fix a potential panic in the Consul provider,
10489,Remove invalid option -name from ACL token read documentation (#5324),"It appears that the read command for ACL policies was used to template the read command for ACL tokens, and an invalid option was not dropped from the docs."
10490,Update CHANGELOG.md,
10491,Revendor memberlist to Fix #3217,"Upgrade leads to protocol version (2) is incompatible: [1, 0] (#5313) This is fixed in https://github.com/hashicorp/memberlist/pull/178, bump memberlist to fix possible split brain in Consul."
10492,cli: fix typo in help text for 'consul acl role read' (#5311),
10493,Update CHANGELOG.md,
10494,Improve Connect with Prepared Queries (#5291),"Given a query like: {    ""Name"": ""tagged-connect-query"",    ""Service"": {       ""Service"": ""foo"",       ""Tags"": [""tag""],       ""Connect"": true    } } And a Consul configuration like: {    ""services"": [       ""name"": ""foo"",       ""port"": 8080,       ""connect"": { ""sidecar_service"": {} },       ""tags"": [""tag""]    ] } If you executed the query it would always turn up with 0 results. This was because the sidecar service was being created without any tags. You could instead make your config look like: {    ""services"": [       ""name"": ""foo"",       ""port"": 8080,       ""connect"": { ""sidecar_service"": {          ""tags"": [""tag""]       } },       ""tags"": [""tag""]    ] } However that is a bit redundant for most cases. This PR ensures that the tags and service meta of the parent service get copied to the sidecar service. If there are any tags or service meta set in the sidecar service definition then this copying does not take place. After the changes, the query will now return the expected results. A second change was made to prepared queries in this PR which is to allow filtering on ServiceMeta just like we allow for filtering on NodeMeta."
10495,Apply suggestions from code review,Co-Authored-By: adilyse rebecca@hashicorp.com
10496,Update website/source/docs/platform/k8s/service-sync.html.md,Co-Authored-By: adilyse rebecca@hashicorp.com
10497,Remove consul-docs automatic PR review (#5306),"We no longer want this single codeowner rule, though we are keeping this group."
10498,Merge pull request #5284 from hashicorp/nomad_int_tests,add nomad int test
10499,testutil: redirect some test agent logs to testing.T.Logf (#5304),"When tests fail, only the logs for the failing run are dumped to the console which helps in diagnosis. This is easily added to other test scenarios as they come up."
10500,incorrect examples for 'consul acl policy' commands (#5303),
10501,Update k8s ACL documentation,Clarifies that an ACL token only needs to be provided when ACLs are enabled within the Consul cluster.
10502,Fix some docs formatting around DNS SOA RR configuration (#5297),
10503,Update changelog with a missing note for 1.2.3,
10504,ui: Custom version of ember-block-slots compatible with ember 3 (#5245),The original version of ember-block-slots doesn't support ember 3 and it seems like development has stalled on the original version. This adds a modified version as an in-repo-addon that is compatible with ember 3.
10505,Merge pull request #5292 from hashicorp/docs/acl-quotes,Switch smart quotes to straight quotes
10506,update changelog,
10507,Merge pull request #5237 from hashicorp/term-grpc-stream-on-token-failure,Check ACLs more often for xDS endpoints.
10508,Created a new index page that links to all the ACL guides. I also removed the sidebar nav drop down to be more consistent with the other guides. (#5260),
10509,"build: fix 'make ui' scripts so that it can handle versions like ""v1.4.0-rc1-55-g2c8675565-rc1 (2c8675565)"" (#4920)",
10510,Switch smart quotes to straight quotes,The ACL guide had a couple instances of smart quotes which get rendered as the incorrect character on the website.
10511,Remove the misleading default separator for listing keys.,The default separator for key listing is an empty string - the docs incorrectly made it seem as if this was /.
10512,add nomad int test,
10513,Merge branch 'master' of https://github.com/hashicorp/consul,
10514,Fix missed letter in the documentation (#5281),
10515,Merge branch 'master' of https://github.com/hashicorp/consul,
10516,Putting source back into Dev Mode,
10517,Fixing broken link. (#5283),
10518,Release v1.4.2,
10519,Merge pull request #5282 from hashicorp/agent-test-fix,Fix failing TestAgent_PurgeCheckOnDuplicate after merge
10520,Fix typo in Changelog,
10521,Fix failing TestAgent_PurgeCheckOnDuplicate after merge,
10522,Update CHANGELOG.md,
10523,Don't generate TXT records just to discard them (#5272),  Don't generate TXT records just to discard them   Add unit test for formatNodeRecord to ensure it prevents returning TXT records 
10524,Build/auto bump website version (#5280),Also of note is that for enterprise builds we can set CONSUL_NO_WEBSITE_UPDATE to prevent updating the version twice. Lastly we also do not update the website version for pre-releases like rc1. This just streamlines a release build a bit.
10525,Merge branch 'healthcheck-duration-fix',
10526,ui: Bump footer date (#5279),
10527,Fall back to using old fields when marshaling,Co-Authored-By: kyhavlov kylehav@gmail.com
10528,Invalid syntax in Envoy configuration docs. (#5275),
10529,Re-add ReadableDuration types to health check definition,This is to fix the backwards-incompatible change made in 1.4.1 by changing these fields to time.Duration.
10530,Update CHANGELOG.md,
10531,Adding quorum note on leave command page (#5102),Reusing the same phrasing as  https://github.com/hashicorp/consul/pull/5095/ to provide info on the effects of the consul leave command on Consul quorum
10532,ui: pin to using bundler v1 for now (#5274),
10533,Corrects defile to defined (#5262),
10534,fix broken link (#5273),
10535,website: reference last command's last field instead of background PID (#5264),
10536,speed up TestHTTPAPI_MethodNotAllowed_OSS from 11s -> 0.5s (#5268),
10537,correct name,
10538,simpler fix,
10539,do not export that type,
10540,fix marshalling,
10541,demo nomad problem,
10542,Update services.html.md,
10543,Putting source back into Dev Mode,
10544,Merge branch 'master' of https://github.com/hashicorp/consul,
10545,Update CHANGELOG.md,
10546,Bump website version,
10547,Update CHANGELOG.md,
10548,Release v1.4.1,
10549,Update CHANGELOG.md,
10550,Basic TLS Command Tests (#5259),  Add tls ca create tests   Add a basic tls cert create test 
10551,Disregard rules when set on a management token (#5261),  Disregard rules when set on a management token   Add unit test for legacy mgmt token with rules 
10552,Fix typo that prevented using the default ca domain for tls cert creation (#5258),
10553,Update to Go 1.11.4 and UI build container (#5257),  Update to Go 1.11.4   Update to Go 1.11.4 for travis   Update UI build to fix ember issues. 
10554,Update CHANGELOG.md,
10555,fix for arm32 (#5130),Signed-off-by: Saurabh Deoras sdeoras@gmail.com
10556,Update CHANGELOG.md,
10557,Fix repeating wording in sentence (#5256),Fix to join to join typo
10558,Update CHANGELOG.md,
10559,ui: Removes delete button form pages that show your current token (#5241),Tokens can no longer delete themselves see: https://github.com/hashicorp/consul/pull/5210 ...so we remove the button to allow you to do that from the UI
10560,UI: [BUGFIX] Decode/encode urls (#5206),"In https://github.com/hashicorp/consul/commit/858b05fc3127d3d20d9554e932353d767c7b5fdc#diff-46ef88aa04507fb9b039344277531584 we removed encoding values in pathnames as we thought they were eventually being encoded by ember. It looks like this isn't the case. Turns out sometimes they are encoded sometimes they aren't. It's complicated. If at all possible refer to the PR https://github.com/hashicorp/consul/pull/5206. It's related to the difference between dynamic routes and wildcard routes. Partly related to this is a decision on whether we urlencode the slashes within service names or not. Whilst historically we haven't done this, we feel its a good time to change this behaviour, so we'll also be changing services to use dynamic routes instead of wildcard routes. So service links will then look like /ui/dc-1/services/application%2Fservice rather than /ui/dc-1/services/application/service Here, we define our routes in a declarative format (for the moment at least JSON) outside of Router.map, and loop through this within Router.map to set all our routes using the standard this.route method. We essentially configure our Router from the outside. As this configuration is now done declaratively outside of Router.map we can also make this data available to href-to and paramsFor, allowing us to detect wildcard routes and therefore apply urlencoding/decoding. Where I mention 'conditionally' below, this is detection is what is used for the decision. We conditionally add url encoding to the {{href-to}} helper/addon. The reasoning here is, if we are asking for a 'href/url' then whatever we receive back should always be urlencoded. We've done this by reusing as much code from the original ember-href-to addon as possible, after this change every call to the {{href-to}} helper will be urlencoded. As all links using {{href-to}} are now properly urlencoded. We also need to decode them in the correct place 'on the other end', so.. We also override the default Route.paramsFor method to conditionally decode all params before passing them to the Route.model hook. Lastly (the revert), as we almost consistently use url params to construct API calls, we make sure we re-encode any slugs that have been passed in by the user/developer. The original API for the createURL function was to allow you to pass values that didn't need encoding, values that did need encoding, followed by query params (which again require url encoding) All in all this should make the entire ember app url encode/decode safe."
10561,Revendor serf to pull in keyring list truncation changes. (#5251),
10562,website: update nokogiri (#5252),
10563,Update CHANGELOG.md,
10564,agent: display messages from serf in cli (#5236), display messages from serf in cli
10565,Update CHANGELOG.md,
10566,Merge pull request #5250 from hashicorp/forward-intention-rpcs,connect: Forward intention RPCs if this isn't the primary
10567,connect: Forward intention RPCs if this isn't the primary,
10568,Merge pull request #5249 from hashicorp/ca-fixes-oss,Minor CA fixes
10569,Update CHANGELOG.md,
10570,Merge pull request #4869 from hashicorp/txn-checks,Add node/service/check operations to transaction api
10571,connect/ca: return a better error message if the CA isn't fully initialized when signing,
10572,Update CHANGELOG.md,
10573,Fix several ACL token/policy resolution issues. (#5246)," Fix 2 remote ACL policy resolution issues  1 - Use the right method to fire async not found errors when the ACL.PolicyResolve RPC returns that error. This was previously accidentally firing a token result instead of a policy result which would have effectively done nothing (unless there happened to be a token with a secret id == the policy id being resolved.   When concurrent policy resolution is being done we single flight the requests. The bug before was that for the policy resolution that was going to piggy back on anothers RPC results it wasn’t waiting long enough for the results to come back due to looping with the wrong variable.   Fix a handful of other edge case ACL scenarios   The main issue was that token specific issues (not able to access a particular policy or the token being deleted after initial fetching) were poisoning the policy cache. A second issue was that for concurrent token resolutions, the first resolution to get started would go fetch all the policies. If before the policies were retrieved a second resolution request came in, the new request would register watchers for those policies but then never block waiting for them to complete. This resulted in using the default policy when it shouldn't have."
10574,connect: tame thundering herd of CSRs on CA rotation (#5228),  Support rate limiting and concurrency limiting CSR requests on servers; handle CA rotations gracefully with jitter and backoff-on-rate-limit in client   Add CSR rate limiting docs   Fix config naming and add tests for new CA configs 
10575,Check ACLs more often for xDS endpoints.,"For established xDS gRPC streams recheck ACLs for each DiscoveryRequest or DiscoveryResponse. If more than 5 minutes has elapsed since the last ACL check, recheck even without an incoming DiscoveryRequest or DiscoveryResponse. ACL failures will terminate the stream."
10576,Add acl.enable_key_list_policy to agent config docs. (#5227),  Adding key list parameter to agent config docs.   Fixed typo in master token section   Updated based on comments from Paul and Matt. 
10577,oss: add the enterprise server stub for intention replication check,
10578,Fix some test typos.,
10579,Update CHANGELOG.md,
10580,Implement prepared query upstreams watching for envoy (#5224),Fixes #4969  This implements non-blocking request polling at the cache layer which is currently only used for prepared queries. Additionally this enables the proxycfg manager to poll prepared queries for use in envoy proxy upstreams.
10581,Merge pull request #5215 from hashicorp/deployment_guide_updates,Include information about multi-dc Connect
10582,UI: Text change and clarity Node Health > Health Checks (#5115),Text change Node Health > Health Checks Also adds an info icon and tooltip to Health Checks column header
10583,ui: Fix typo in acl-migration guide link (#5135),
10584,Merge pull request #5230 from hashicorp/docs/helm-formatting,Docs/helm formatting
10585,Fix broken links,
10586,Indent code blocks further to fix list formatting,
10587,Merge pull request #5222 from hashicorp/docs/helm-0.5.0,Add documentation about the two additional Helm chart options
10588,Fix typo in k8s connect documentation (#5229),
10589,txn: update existing txn api docs with new operations,
10590,Update links for learn migration (#5223),  Stared updaing links for the learn migration   Language change cluster -> datacenter (#5212)   Updating the language from cluster to datacenter in the backup guide to be consistent and more accurate.   missed some clusters   updated three broken links for the sidebar nav 
10591,Sorting entries in Changelog for upcoming release,
10592,Merge pull request #5213 from hashicorp/docs/helm-security,Add a security warning about the default Helm chart installation
10593,Add documentation about the two additional Helm chart options,"Adds info about k8stag and nodePortSyncType options that were added in consul-helm v0.5.0. Additionally moves the k8sprefix to match the order in the Helm chart values file, while also clarifying that it only affects one sync direction."
10594,Add a security warning about the default Helm chart installation,"If a user installs the default Helm chart Consul on a Kubernetes cluster that is open to the internet, it is lacking some important security configurations."
10595,Language change cluster -> datacenter (#5212),  Updating the language from cluster to datacenter in the backup guide to be consistent and more accurate.   missed some clusters 
10596,Update CHANGELOG.md,
10597,Store leaf cert indexes in raft and use for the ModifyIndex on the returned certs (#5211), Store leaf cert indexes in raft and use for the ModifyIndex on the returned certs  This ensures that future certificate signings will have a strictly greater ModifyIndex than any previous certs signed.
10598,Update CHANGELOG.md,
10599,Improve blocking queries on services that do not exist (#4810),"Background When making a blocking query on a missing service (was never registered, or is not registered anymore) the query returns as soon as any service is updated. On clusters with frequent updates (5~10 updates/s in our DCs) these queries virtually do not block, and clients with no protections againt this waste ressources on the agent and server side. Clients that do protect against this get updates later than they should because of the backoff time they implement between requests. Implementation While reducing the number of unnecessary updates we still want : * Clients to be notified as soon as when the last instance of a service disapears. * Clients to be notified whenever there's there is an update for the service. * Clients to be notified as soon as the first instance of the requested service is added. To reduce the number of unnecessary updates we need to block when a request to a missing service is made. However in the following case :  Client client1 makes a query for service foo, gets back a node and X-Consul-Index 42 foo is unregistered  client1  makes a query for foo with index=42 -> foo does not exist, the query blocks and client1 is not notified of the change on foo   We could store the last raft index when each service was last alive to know wether we should block on the incoming query or not, but that list could grow indefinetly.  We instead store the last raft index when a service was unregistered and use it when a query targets a service that does not exist.  When a service srv is unregistered this ""missing service index"" is always greater than any X-Consul-Index held by the clients while srv was up, allowing us to immediatly notify them.  Client client1 makes a query for service foo, gets back a node and X-Consul-Index: 42 foo is unregistered, we set the ""missing service index"" to 43  client1 makes a blocking query for foo with index=42 -> foo does not exist, we check against the ""missing service index"" and return immediatly with X-Consul-Index: 43 client1 makes a blocking query for foo with index=43 -> we block Other changes happen in the cluster, but foo still doesn't exist and ""missing service index"" hasn't changed, the query is still blocked foo is registered again on index 62 -> foo exists and its index is greater than 43, we unblock the query"
10600,website: minor acl guide fixes (#5214),
10601,website: add autowire in Community Tools list (#5118),  add autowire in Community Tools list   put list in the right alphabetic order 
10602,Update CHANGELOG.md,
10603,Update CHANGELOG.md,
10604,Update CHANGELOG.md,
10605,cache: Pass through wait query param to the cache.Get (#5203),This adds a MaxQueryTime field to the connect ca leaf cache request type and populates it via the wait query param. The cache will then do the right thing and timeout the operation as expected if no new leaf cert is available within that time. Fixes #4462  The reproduction scenario in the original issue now times out appropriately.
10606,Update CHANGELOG.md,
10607,"Allow ""disable_host_node_id"": false to work on Linux as non-root. (#4926)","Bump shirou/gopsutil to include https://github.com/shirou/gopsutil/pull/603 This will allow to have consistent node-id even when machine is reinstalled when using ""disable_host_node_id"": false It will fix https://github.com/hashicorp/consul/issues/4914 and allow having the same node-id even when reinstalling a node from scratch. However, it is only compatible with a single OS (installing to Windows will change the node-id, but it seems acceptable)."
10608,Update CHANGELOG.md,
10609,[Security] Allow blocking Write endpoints on Agent using Network Addresses (#4719),  Add -write-allowed-nets option   Add documentation for the new write_allowed_nets option 
10610,acl: Prevent tokens from deleting themselves (#5210),Fixes #4897  Also apparently token deletion could segfault in secondary DCs when attempting to delete non-existant tokens. For that reason both checks are wrapped within the non-nil check.
10611,Update CHANGELOG.md,
10612,Update CHANGELOG.md,
10613,connect: agent leaf cert caching improvements (#5091),"  Add State storage and LastResult argument into Cache so that cache.Types can safely store additional data that is eventually expired.   New Leaf cache type working and basic tests passing. TODO: more extensive testing for the Root change jitter across blocking requests, test concurrent fetches for different leaves interact nicely with rootsWatcher.   Add multi-client and delayed rotation tests.   Typos and cleanup error handling in roots watch   Add comment about how the FetchResult can be used and change ca leaf state to use a non-pointer state.   Plumb test override of root CA jitter through TestAgent so that tests are deterministic again!   Fix failing config test "
10614,Re-worked the ACL guide into two docs and an updated guide. (#5093), Re-worked the ACL guide into two docs and an updated guide.  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com   Updating syntax based on amayer5125's comments.   Missed one of amayer5125's comments   found a bad link in the acl system docs   fixing a link in the rules docs 
10615,txn: clean up some state store/acl code,
10616,Include information about multi-dc Connect,
10617,Update CHANGELOG.md,
10618,Fix data race (#5029),Fix #4357
10619,connect: add tls config for vault connect ca provider (#5125), add tlsconfig for vault connect ca provider. add options to the docs add tests for new configuration
10620,snapshot: read meta.json correctly. (#5193), snapshot: read meta.json correctly.  Fixes #4452.
10621,agent/config: Fix typo in comment (#5202),
10622,Update CHANGELOG.md,
10623,agent: add default weights to service in local state to prevent AE churn (#5126), Add default weights when adding a service with no weights to local state to prevent constant AE re-sync.  This fix was contributed by @42wim in https://github.com/hashicorp/consul/pull/5096 but was merged against the wrong base. This adds it to master and adds a test to cover the behaviour.  Fix tests that broke due to comparing internal state which now has default weights
10624,Update CHANGELOG.md,
10625,agent: Don't leave old errors around in cache (#5094),"  Fixes #4480. Don't leave old errors around in cache that can be hit in specific circumstances.   Move error reset to cover extreme edge case of nil Value, nil err Fetch "
10626,website: fixed ca provider references (#5185),Fixes https://github.com/hashicorp/consul/issues/5182.
10627,Update CHANGELOG.md,
10628,Avoid to have infinite recursion in DNS lookups when resolving CNAMEs (#4918), Avoid to have infinite recursion in DNS lookups when resolving CNAMEs  This will avoid killing Consul when a Service.Address is using CNAME to a Consul CNAME that creates an infinite recursion. This will fix https://github.com/hashicorp/consul/issues/4907  Use maxRecursionLevel = 3 to allow several recursions
10629,Update CHANGELOG.md,
10630,bugfix: use ServiceTags to generate cache key hash (#4987),  bugfix: use ServiceTags to generate cahce key hash   update unit test   update   remote print log   Update .gitignore   Completely deprecate ServiceTag field internally for clarity   Add explicit test for CacheInfo cases 
10631,Update CHANGELOG.md,
10632,"update github.com/hashicorp/{serf,memberlist,go-sockaddr} (#5189)",This activates large-cluster improvements in the gossip layer from https://github.com/hashicorp/memberlist/pull/167
10633,Update CHANGELOG.md,
10634,Prevent status flap when re-registering a check (#4904),"Fixes point #2 of: https://github.com/hashicorp/consul/issues/4903 When registering a service each healthcheck status is saved and restored (https://github.com/hashicorp/consul/blob/master/agent/agent.go#L1914) to avoid unnecessary flaps in health state. This change extends this feature to single check registration by moving this protection in AddCheck() so that both PUT /v1/agent/service/register and PUT /v1/agent/check/register behave in the same idempotent way. Steps to reproduce  Register a check : curl -X PUT \   http://127.0.0.1:8500/v1/agent/check/register \   -H 'Content-Type: application/json' \   -d '{   ""Name"": ""my_check"",   ""ServiceID"": ""srv"",   ""Interval"": ""10s"",   ""Args"": [""true""] }' The check will initialize and change to passing Run the same request again The check status will quickly go from critical to passing (the delay for this transission is determined by https://github.com/hashicorp/consul/blob/master/agent/checks/check.go#L95)"
10635,website: fix carousel bugs,
10636,CA Provider Plugins (#4751),"This adds the agent/connect/ca/plugin library for consuming/serving Connect CA providers as go-plugin plugins. This does not wire this up in any way to Consul itself, so this will not enable using these plugins yet.  Why? We want to enable CA providers to be pluggable without modifying Consul so that any CA or PKI system can potentially back the Connect certificates. This CA system may also be used in the future for easier bootstrapping and internal cluster security. go-plugin The benefit of go-plugin is that for the plugin consumer, the fact that the interface implementation is communicating over multi-process RPC is invisible. Internals of Consul will continue to just use ca.Provider interface implementations as if they're local. For plugin authors, they simply have to implement the interface. The network/transport/process management issues are handled by go-plugin itself. The CA provider plugins support both net/rpc and gRPC transports. This enables easy authoring in any language. go-plugin handles the actual protocol handshake and connection. This is just a feature of go-plugin.  go-plugin is already in production use for years by Packer, Terraform, Nomad, Vault, and Sentinel. We've shown stability for both desktop and server-side software. It is very mature. Implementation Details map[string]interface{} The Configure method passes a map[string]interface{}. This map contains only Go primitives and containers of primitives (no funcs, chans, etc.). For net/rpc we encode as-is using Gob. For gRPC we marshal to JSON and transmit as a bytes type. This is the same approach we take with Vault and other software. Note that this is just the transport protocol, the end software views it fully decoded. x509.Certificate and CertificateRequest We transmit the raw ASN.1  bytes and decode on the other side. Unit tests are verifying we get the same cert/csrs across the wire. Testing go-plugin exposes test helpers that enable testing the full plugin RPC over real loopback network connections. We test all endpoints for success and error for both net/rpc and gRPC. Vendoring This PR doesn't introduce vendoring for two reasons:  @banks's f-envoy branch introduces a lot of these and I didn't want conflict. The library isn't actually used yet so it doesn't introduce compile-time errors (it does introduce test errors).  Next Steps With this in place, we need to figure out the proper way to actually hook these up to Consul, load them, etc. This discussion can happen elsewhere, since regardless of approach this plugin library implementation is the exact same."
10637,website: fix stray sentinel references using the old syntax (#5191),[skip ci]
10638,Update CHANGELOG.md,
10639,Implement /v1/agent/health/service/ endpoint (#3551),"This endpoint aggregates all checks related to  on the agent and return an appropriate http code + the string describing the worst check. This allows to cleanly expose service status to other component, hiding complexity of multiple checks. This is especially useful to use consul to feed a load balancer which would delegate health checking to consul agent. Exposing this endpoint on the agent is necessary to avoid a hit on consul servers and avoid decreasing resiliency (this endpoint will work even if there is no consul leader in the cluster)."
10640,Merge pull request #5187 from hashicorp/add_ui_tests,Add ui tests
10641,Added the new monitoring guide (#5117),
10642,Update CHANGELOG.md,
10643,[Fix] Services sometimes not being synced with acl_enforce_version_8 = false (#4771),"Fixes: https://github.com/hashicorp/consul/issues/3676 This fixes a bug were registering an agent with a non-existent ACL token can prevent other  services registered with a good token from being synced to the server when using  acl_enforce_version_8 = false. Background When acl_enforce_version_8 is off the agent does not check the ACL token validity before  storing the service in its state. When syncing a service registered with a missing ACL token we fall into the default error  handling case (https://github.com/hashicorp/consul/blob/master/agent/local/state.go#L1255) and stop the sync (https://github.com/hashicorp/consul/blob/master/agent/local/state.go#L1082) without setting its Synced property to true like in the permission denied case. This means that the sync will always stop at the faulty service(s). The order in which the services are synced is random since we iterate on a map. So eventually all services with good ACL tokens will be synced, this can however take some time and is influenced  by the cluster size, the bigger the slower because retries are less frequent. Having a service in this state also prevent all further sync of checks as they are done after the services. Changes This change modify the sync process to continue even if there is an error.  This fixes the issue described above as well as making the sync more error tolerant: if the server repeatedly refuses a service (the ACL token could have been deleted by the time the service is synced, the servers  were upgraded to a newer version that has more strict checks on the service definition...).  Then all services and check that can be synced will, and those that don't will be marked as errors in  the logs instead of blocking the whole process."
10644,Merge pull request #5186 from hashicorp/add_codeowners,add codeowners for consul docs
10645,add documentation on how to use ember-exam,
10646,add test-parallel yarn command,
10647,refresh cache key and fix comments,
10648,change env to test,
10649,using build-ci target in circleci,
10650,adding build-ci yarn target,
10651,test circleci,
10652,output XML test results,
10653,enable ember-exam,
10654,update testem with newer conventions,
10655,adding ember-exam package,
10656,add codeowners for consul docs,
10657,website: Use secret id instead of policy id (#5049),The document uses the agent-token policy as agent token by mistake. So I fixed it to use the secret id instead of it.
10658,Update CHANGELOG.md,
10659,Fixed gziping function for debug archive (#5184),
10660,Fix Type in go integration (#5132),Fix Typo in second example From svc.ServeTLSConfig() to svc.ServerTLSConfig()
10661,Update CHANGELOG.md,
10662,Merge pull request #5112 from hashicorp/docs/helm-resources-example,Add examples for helm chart multi-line strings
10663,Update CHANGELOG.md,
10664,removed an extra period that messed up formatting (#5120),
10665,Adding the new backup guide (#5080),  Adding the new backup guide   Update website/source/docs/guides/backup.html.md   Looks good. Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/guides/backup.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/guides/backup.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/guides/backup.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com   Updated the directions for the restore command.   Update website/source/docs/guides/backup.html.md   Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/guides/backup.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com   updated the token env   Trying to make it extra clear where to run the commands.   added not that list of backed up items isn't inclusive 
10666,Encryption Docs and New Guide (#5059),"  Added the new encryption guide, updated the encryption docs, updated the side-nav and index page for new guide.   Update website/source/docs/guides/agent-encryption.html.md   Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/guides/agent-encryption.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/guides/agent-encryption.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com   Making updates based on feedback   Updating language   Update website/source/docs/guides/agent-encryption.html.md   Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/guides/agent-encryption.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/guides/agent-encryption.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/guides/agent-encryption.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/guides/agent-encryption.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com   Removing all reload mentions   Updated the final remarks about TLS encryption to include a note about HTTP connections   Update website/source/docs/guides/agent-encryption.html.md   Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/guides/agent-encryption.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/guides/agent-encryption.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/guides/agent-encryption.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/guides/agent-encryption.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com   removed the mention of cfssl   also removed the bit about cfssl in the doc   updating cert names   updated all cert values "
10667,Builtin tls helper (#5078), command: add tls subcommand website: update docs and guide
10668,website: highlight how to use agent certs for tls checks (#5086),Also clarifies that HTTP and gRPC checks both use the same TLS configuration.
10669,Add examples for helm chart multi-line strings,"There has been some confusion about the formating of multi-line string variables in the Helm chart. This adds examples for these situations, hopefully clarifying things for users."
10670,ui: serve /robots.txt when UI is enabled. (#5089), serve /robots.txt robots.txt: disallow everything
10671,agent: honor when ca is set but verify_outgoing is disabled (#4826),  honor when verify_outgoing is false but ca is set   Remove code that exists only for tests   fix formatting 
10672,Guide Update: Adding/Removing Server  (#5095),  first draft of updated content for consul leave   Changed the consul leave/bootstrap_expect scenario into a note 
10673,fix typo (#5099),encourge -> encourage
10674,txn: fix an issue with querying nodes by name instead of ID,
10675,Merge pull request #5065 from hashicorp/clarify_separator_api,clarify how separator should be in CLI and API
10676,Added consul-bench tool to list of community tools (#5010),Put consul-bench in aphabetical order
10677,[Travis][UnstableTests] Fixed unstable tests in travis (#5013),  [Travis][UnstableTests] Fixed unstable tests in travis as seen in https://travis-ci.org/hashicorp/consul/jobs/460824602   Fixed unstable tests in https://travis-ci.org/hashicorp/consul/jobs/460857687 
10678,api: add support for new txn operations,
10679,txn: add tests for RPC endpoint,
10680,txn: add ACL enforcement/validation to new txn ops,
10681,state: add tests for new txn ops,
10682,txn: add service operations,
10683,txn: add node operations,
10684,txn: add pre-check operations to txn endpoint,
10685,Add check operations to transaction api,
10686,Updates to the Adding/Removing Servers Guide (#5004),"  added a new section for adding servers, updated section titles, and added code snippets.   Fixing typos   fixing typos   Addressing some of Paul's feedback.   Updated the outage recovery recommendation "
10687,Outage Recover Guide Updates. (#5003),"  Adding examples and a summary. Minor structure updates.   Added a link to the deployment guide, but needed to remove a sentence referring to a guide that's not published yet.   fixed typo "
10688,website: clarify catalog registration ID behavior (#5019), website: clarify catalog registration ID behavior  Fixes #3769  Update catalog.html.md
10689,website: clarify format of check IDs for sessions (#5036),  website: clarify format of check IDs for sessions   Update website/source/api/session.html.md   Co-Authored-By: pearkes jackpearkes@gmail.com
10690,Merge pull request #5072 from hashicorp/docs/helm-clusterip-support,Add documentation about the new ClusterIP syncing
10691,Add documentation about the new ClusterIP syncing,"Adds ClusterIP as a supported service type in the sync doc, as well as add syncClusterIPServices to the helm chart detailed list."
10692,change depth to prefix,
10693,Update CHANGELOG.md,
10694,Merge pull request #5061 from hashicorp/blank-ca-fix,connect/ca: prevent blank CA config in snapshot
10695,Update CHANGELOG.md,
10696,connect/ca: prevent blank CA config in snapshot,This PR both prevents a blank CA config from being written out to a snapshot and allows Consul to gracefully recover from a snapshot with an invalid CA config. Fixes #4954.
10697,Documentation and changes for verify_server_hostname (#5069),  verify_server_hostname implies verify_outgoing   mention CVE in the docs. 
10698,Docs: clarify output vs notes,fixup
10699,clarify how separator should be in CLI and API,
10700,Update configuration.html.md (#5058),Link to Upstream Configuration was pointing to http://localhost:4567. Fixed reference.
10701,website: use smaller og image (#5053),This is done for the same reason as https://github.com/hashicorp/consul/pull/4005 and essentially reverts https://github.com/hashicorp/consul/pull/4953 which gave us unwanted unfurling behavior for links to consul.io from services such as Slack.
10702,ui: Correctly escape an inline svg icon (#5032),
10703,Fixed typos in autopilot doc (#5051),
10704,website: clarify format of prepared query upstreams (#5026),This just gives an example of a prepared query upstream configuration and clarifies the format in the description
10705,ui: Add AWS external-source icon (#5030),
10706,Merge branch 'doc-intro-learn-url',
10707,"Corrects you/your and camelcasing of ""GitHub"" (#5018)",
10708,website: capitalize headline (#5024),
10709,website: clarify uuid format (#5014),
10710,website: add consul-aws guide from @i0rek (#5023), website: add consul-aws guide from @i0rek
10711,Updates to DNS Caching Guide (#5001),  Updates to DNS Caching Guide   Spelling and grammar 
10712,agent: remove some stray fmt.Print* calls (#5015),
10713,Fixes URL paths to learn.hashicorp.com,Removes .html when not needed in order to clean up analytics.
10714,Update security notices around script checks,
10715,Update CHANGELOG.md,
10716,Updated autopilot guide (#4997),  Updated the autopilot guide to prepare for the migration to the learn platform.   Correcting typos 
10717,website: remove lingering beta note about Connect (#5009),[skip ci]
10718,Update open graph image (#4953),
10719,"Fix ""Read Self Token"" URL in acl/token docs (#4978)",
10720,UPDATE snapshot.html.erb - fix formatting on links (#4982),Links to the agent and inspect docpages were broken by errant whitespace.
10721,guides: remove references to specific versions (#4999),This changes with time so will opt to not hardcoding this. Investigated using the middleman helper to render out the current configured version but that won't exist on learn.hashicorp.com so I think this is the most future-proof way.
10722,"ui: If a service has no external-source, don't show the icon (#4996)",
10723,ui: Adds the CONSUL_VERSION env var into the HTML source in a comment (#4993),
10724,Fix sidecar-service docs,
10725,Merge pull request #4980 from hashicorp/docs/helm-resources,Update type for resources variables
10726,Merge pull request #4975 from hashicorp/circleci-website-build,add circleci website build
10727,Update type for resources variables,These were changed to multi-line strings to match the affinity definition.
10728,Adding the new Consul Template Guide. (#4947),  Adding the new Consul Template Guide.   Update website/source/docs/guides/consul-template.html.md   Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/guides/consul-template.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/guides/consul-template.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/guides/consul-template.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com   Making updates based on Pauls feedback.   Update website/source/docs/guides/consul-template.html.md   Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/guides/consul-template.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Update website/source/docs/guides/consul-template.html.md  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com   Couple more updates based on Pauls feedback.   updated the intro to include how template can replace api use   updated the address   Adding minikube guide to the index page. 
10729,Fixed another list of unstable unit tests in travis (#4915), Fixed another list of unstable unit tests in travis  Fixed failing tests in https://travis-ci.org/hashicorp/consul/jobs/451357061  Fixed another list of unstable unit tests in travis.  Fixed failing tests in https://travis-ci.org/hashicorp/consul/jobs/451357061
10730,update redirects doc comment for clarity,
10731,Consul on Minikube guide (#4949)," Adds images for Minikube guide Adds notes about Helm YAML configuration Embed Wistia video for Consul Minikube guide Cleans up menus, instructions, Helm steps Adds captions for all images Uses Docker images hosted on hashicorp org for demo Adds link to Minikube guide from menu and k8s index page Clarify steps in Minikube/Kubernetes guide"
10732,remove packer.json since CircleCI builds the site,
10733,add circleci website build,fix up run commands
10734,Document Fastly redirects (#4887)," Adds note about use of Fastly VCL for redirects  Some redirects are not possible with a redirect file, so we send traffic to learn.hashicorp.com with custom VCL (Varnish) handlers using the Fastly web admin. Future migrations of content to learn.hashicorp.com should also use this approach."
10735,Fixes links to ACL API docs (#4966),Was previously pointed to /api/acl.html but should be /api/acl/acl.html. This commit fixes all instances of the incorrect link.
10736,Merge pull request #4974 from hashicorp/fix_redirects,comment out redirects for learn site
10737,comment out redirects for learn site,
10738,website: dodge CVE-2018-16471 for rack (#4972),updates dependency.
10739,Redirect old ACL API,
10740,Please add file2consul to your tools page (#4959),  adding file2consul listing   minor edit   modified wording added some punctuation   Moved file2consul so it is listed in alpha order.   Replaces Pull Request # #4942 
10741,Update CHANGELOG.md,
10742,Put the tree in v1.4.1 dev mode,
10743,Putting source back into Dev Mode,
10744,Merge pull request #4958 from hashicorp/1.4-website-notif,website: re-add 1.4 notification to index.html
10745,website: re-add 1.4 notification to index.html,
10746,Bump website download version to 1.4.0,
10747,Release v1.4.0,
10748,Update upgrade-specific.html.md (#4956),
10749,changelog: acl v2 tweaks (#4957),[ci skip]
10750,Acl upgrade guide (#4880),  Very WIP upgrade docs. Actual Upgrade notes doneish; token migration guide WIP.   Token migration guide   Complete ACL migration guide   Upgrade guide cleanup   Updated upgrade and migration guides   Typo fix   Co-Authored-By: banks banks@banksco.de  Update website/source/docs/guides/acl-migrate-tokens.html.md  Co-Authored-By: banks banks@banksco.de  Update website/source/docs/guides/acl-migrate-tokens.html.md  Co-Authored-By: banks banks@banksco.de   Update upgrade-specific.html.md   Update website/source/docs/guides/acl-migrate-tokens.html.md   Update website/source/docs/guides/acl-migrate-tokens.html.md   Note Multi-DC changes in upgrade guide.   Update website/source/docs/upgrade-specific.html.md 
10751,Update changelog and website for 1.3.1 release,
10752,Merge pull request #4952 from hashicorp/test-version,tests: Bump test server version to 1.4.0
10753,acl: add stub hooks to support some plumbing in enterprise (#4951),
10754,oss: bump test server version to 1.4.0,
10755,Update CHANGELOG.md,
10756,Update CHANGELOG.md,
10757,Fix catalog tag filter backward compat (#4944),Fix catalog service node filtering (ex /v1/catalog/service/srv?tag=tag1) between agent version <=v1.2.3 and server >=v1.3.0. New server version did not account for the old field when filtering hence request made from old agent were not tag-filtered.
10758,Doc changes for 1.4 Final (#4870),"  website: add multi-dc enterprise landing page   website: switch all 1.4.0 alerts/RC warnings   website: connect product wording   Co-Authored-By: pearkes jackpearkes@gmail.com   website: remove RC notification   commmand/acl: fix usage docs for ACL tokens   agent: remove comment, OperatorRead   website: improve multi-dc docs   Still not happy with this but tried to make it slightly more informative.   website: put back acl guide warning for 1.4.0   website: simplify multi-dc page and respond to feedback   Fix Multi-DC typos on connect index page.   Improve Multi-DC overview.   A full guide is a WIP and will be added post-release.  Fixes typo avaiable > available"
10759,Merge pull request #4948 from hashicorp/docs/helm-auto-join,Update the helm chart join instructions
10760,Update the helm chart join instructions,This fixes some previous incorrect information about the join feature in the Helm chart. Based on the fix for consul-helm issue 59.
10761,connect: remove additional trust-domain validation (#4934),  connct: Remove additional trust-domain validation   Comment typos   Update connect_ca.go 
10762,Merge pull request #4917 from hashicorp/replication-token-cleanup,Use acl replication_token for connect
10763,Merge pull request #4940 from hashicorp/ent-test-diff,Update non-voting server test to fix enterprise diff
10764,Merge pull request #4941 from hashicorp/docs/helm-maxUnavilable,Update docs for Helm chart maxUnavailable value
10765,Update docs for Helm chart maxUnavailable value,"Due to a Helm templating limitation, setting this value to 0 requires an extra flag when installing. This adds information about that."
10766,update non-voting server test to fix enterprise diff,
10767,Merge pull request #4928 from hashicorp/docs/server-affinity,Add documentation of server affinity Helm chart variable
10768,oss: do a proper check-and-set on the CA roots/config fsm operation,
10769,Update agent tests to wait a bit longer for the /v1/agent/self endpoint (#4937),
10770,docs: use hcl heredoc syntax for multi line strings in sentinel examples (#4930),
10771,Add doc info for added server affinity value,Supports newly added functionality to the Helm chart.
10772,Reorder Helm chart server values,"This matches the ordering in the Helm chart, to make it easier for users to find information."
10773,docs: remove curly quotes from shell block (#4921),
10774,Merge pull request #4912 from hashicorp/acl-doc-fixes,docs: fix some examples in the new ACL guide
10775,docs: remove leftover typo from replication_token info,
10776,acl: fixes ACL replication for legacy tokens without AccessorIDs (#4885),
10777,UI: Removes success notification on faking a success response for self (#4906),"In order to continue supporting the legacy ACL system, we replace the 500 error from a non-existent self endpoint with a response of a null AccessorID - which makes sense (a null AccessorID means old API) We then redirect the user to the old ACL pages which then gives a 403 if their token was wrong which then redirects them back to the login page. Due to the multiple redirects and not wanting to test the validity of the token before redirecting (thus calling the same API endpoint twice), it is not straightforwards to turn the 'faked' response from the self endpoint into an error (flash messages are 'lost' through multiple redirects). In order to make this a slightly better experience, you can now return a false during execution of an action requiring success/failure feedback, this essentially skips the notification, so if the action is 'successful' but you don't want to show the notification, you can. This resolves showing a successful notification when the self endpoint response is faked. The last part of the puzzle is to make sure that the global 403 catching error in the application Route also produces an erroneous notification. Please note this can only happen with a ui client using the new ACL system when communicating with a cluster using the old ACL system, and only when you enter the wrong token. Lastly, further acceptance tests have been added around this This commit also adds functionality to avoid any possible double  notification messages, to avoid UI overlapping"
10778,agent: fix formatting,
10779,config: remote connect replication_token,
10780,Merge pull request #4911 from mtpettyp/kv_doc_updates,Update consul CLI docs for kv export and import
10781,docs: fix some examples in the new ACL guide,
10782,Update consul CLI docs for kv export and import,This will make the kv docs consistent with get/delete/put
10783,Merge pull request #4900 from hashicorp/docs/helm-extension,Document options for additional helm chart configuration
10784,Update CHANGELOG.md,
10785,Remove wrong space character (#4910),There should be no space before a comma
10786,ui: Make empty Rules ('') take priority over a Legacy: true (#4899),"Even if an old style token has a Legacy of true, yet it has an empty set of Rules, treat the token as a new style token, as its essentially the same"
10787,Merge pull request #4891 from hashicorp/docs/k8s-storage,Clarify storage usage for consul + k8s
10788,Document options for additional helm chart configuration,There is a fine line between making the helm chart easy and simple to use and supporting lots of configurability. This documents options for users who would like to extend the Helm chart beyond what is readily available in the values.yaml file.
10789,Clarify storage usage for consul + k8s,"This adds two Helm chart values into the documentation with details that have come up in several issues. Additionally, it notes that persistent volumes and their claims need to be removed manually because of current kubernetes and helm design."
10790,Allow ACL legacy migration via CLI (#4882), Adds a flag to consul acl token update that allows legacy ACLs to be upgraded via the CLI.  Also fixes a bug where descriptions are deleted if not specified.  Remove debug
10791,command/debug: make better use of atomic operations to write out the debug snapshots to disk,
10792,fix comment typos (#4890),
10793,UI: Catch 500 error on token endpoint and revert to legacy tokens (#4874),"In some circumstances a consul 1.4 client could be running in an un-upgraded 1.3 or lower cluster. Currently this gives a 500 error on the new ACL token endpoint. Here we catch this specific 500 error/message and set the users AccessorID to null. Elsewhere in the frontend we use this fact (AccessorID being null) to decide whether to present the legacy or the new ACL UI to the user. Also: - Re-adds in most of the old style ACL acceptance tests, now that we are keeping the old style UI - Restricts code editors to HCL only mode for all Rules editing (legacy/'half legacy'/new style) - Adds a [Stop using] button to the old style ACL rows so its possible to logout. - Updates copy and documentation links for the upgrade notices"
10794,Adds redirects and updates links for learn.hashicorp (#4878),"  Adds redirects for Getting Started pages   Uses correct links to resources at learn.hashicorp   Reconfigures ""Learn more"" links to point to learn.hashicorp   Links to learn.hashicorp on segmentation page   Adds redirect for sample config file   Fixes links to Getting Started guide on learn.hashicorp   Remove getting started guide which is now on learn.hashicorp   Corrects link to consul/io which should go to consul.io   Revert ""Remove getting started guide which is now on learn.hashicorp""   This reverts commit 2cebacf402f83fb936718b41ac9a27415f4e9f21 so a placeholder message can be written here while we are transitioning content to learn.hashicorp   Adding a new page for getting started to direct users to learn.   Added a note at the being of each doc to notify users about the temporary repo change.   Revert ""Added a note at the being of each doc to notify users about the temporary repo change.""   This reverts commit 9a2a8781f9705028e4f53f758ef235e74b2b7198. From conversation at https://github.com/hashicorp/consul/pull/4878   Removes redirect from sample web.json demo file   Removed typo "
10795,Update CHANGELOG.md,
10796,Merge pull request #4872 from hashicorp/node-snapshot-fix,Node ID/datacenter snapshot fix
10797,Adds documentation for the new ACL APIs (#4851),  Update the ACL API docs   Add a CreateTime to the anon token   Also require acl:read permissions at least to perform rule translation. Don’t want someone DoSing the system with an open endpoint that actually does a bit of work.   Fix one place where I was referring to id instead of AccessorID   Add godocs for the API package additions.   Minor updates: removed some extra commas and updated the acl intro paragraph   minor tweaks   Updated the language to be clearer   Updated the language to be clearer for policy page   I was also confused by that! Your updates are much clearer.   Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Sounds much better.  Co-Authored-By: kaitlincarter-hc 43049322+kaitlincarter-hc@users.noreply.github.com  Updated sidebar layout and deprecated warning
10798,Merge pull request #4873 from hashicorp/docs/helm-default-sync,Update Helm docs to include the default flag for catalog sync
10799,Clarify sync wording.,Co-Authored-By: adilyse rebecca@hashicorp.com
10800,Updating configuration wording.,Co-Authored-By: adilyse rebecca@hashicorp.com
10801,Remaining ACL Unit Tests (#4852),  Add leader token upgrade test and fix various ACL enablement bugs   Update the leader ACL initialization tests.   Add a StateStore ACL tests for ACLTokenSet and ACLTokenGetBy* functions   Advertise the agents acl support status with the agent/self endpoint.   Make batch token upsert CAS’able to prevent consistency issues with token auto-upgrade   Finish up the ACL state store token tests   Finish the ACL state store unit tests   Also rename some things to make them more consistent.  Do as much ACL replication testing as I can.
10802,Doc and whitespace fixes for translate-rules command (#4877),
10803,Update Helm docs to include the default flag for catalog sync,Additionally fixes an issue with quotes on the related annotation.
10804,fsm: update snapshot/restore test to include ID and datacenter,
10805,fsm: add missing ID/datacenter to persistNodes,
10806,Add support for multiple checks in Consul Client (#4849),
10807,website: clarify log file filename format (#4856),Fixes #4697
10808,Update CHANGELOG.md,
10809,website: broken partial rendering and missing id (#4862), Fix partial rendering in service command (CLI) help Fix sample JSON to be a valid json for service registration Add missing id field to make the complete document complete.
10810,website: fix minor typo in documentation (#4864),
10811,Spelling fix on K/V vs KV (#4860),"One of the mentions of KV store had a slash between K and V.  For consistency with the rest of the doc, I removed it."
10812,testutil: If testing.T is nil panic with error (#4725),
10813,Correct prometheus docs (#4805),
10814,Add the consult gem (#4832),
10815,Fix some broken links in docs (#4858),  website: let curl make noise during website deploy   website: fix a handful of broken links 
10816,ui: Brings the new ACLs into line with the new repo folder structure (#4857),"This PR updates the folder structure and naming of the new ACLs, the same as #4694 ."
10817,"ui: Some trivial test additions, support env var passing of port numbers (#4728)", Unskip some trivial tests that were being tested higher up Istanbul ignore some code for coverage. Things that I didn't write and need to 100% follow The source code checking test that has Istanbul code injected into   it Add a few simple test cases Support passing port numbers through to ember serve and ember test for use cases that would benefit from being able to configure the ports things are served over but still use yarn run thus reusing the yarn run config in package.json
10818,ui: Move repo services to repository/ folder and standardize naming (#4694),"Repositories are a class of services to help with CRUD actions, most of the functionality is reused across various Models. This creates a new repository service that centralizes all this reused functionality. Inheritance via ember Service.extend is used as opposed to decorating via Mixins.  Move all repository services (and their tests) to a services/repository folder Standardize on a singular name format 'node vs nodes' Create a new 'repository' service to centralize functionality. This should be extended by 'repository' services"
10819,Merge pull request #4828 from hashicorp/docs/helm-16-getting-started,Update the join command format in the k8s Running Consul section
10820,Merge pull request #4854 from hashicorp/docs/k8s+helm,Add connectInject image info into helm docs
10821,website: sync guides list with guides sidebar. (#4831),
10822,Add connectInject image info into helm docs,"This field was added back into the helm chart, but it was not added back to the documentation. This adds it, then additionally fixes a few typos in the same file."
10823,New ACL API Tests (#4848),  A few API mods and unit tests.   Update the unit tests to verify query/write metadata and to fix the rules endpoint tests.   Make sure the full information for the replication status is in the api packge 
10824,"website: mention node name for ""agent/force-leave"" HTTP endpoint (#4542)"," Adjust documentation for agent/force-leave endpoint  A node must be specified when calling agent/force-leave. See:  - https://github.com/hashicorp/consul/blob/master/agent/http_oss.go#L25  - https://github.com/hashicorp/consul/blob/master/agent/agent_endpoint.go#L323  - https://github.com/hashicorp/consul/blob/master/agent/agent.go#L1442 However, the documentation does not specify it. Note that Consul returns ""301 Moved Permanently v1/agent/force-leave/"" when sending PUT request on ""v1/agent/force-leave"".  Switch from node id to node name"
10825,docs: add return info for update and delete acl-token apis (#4584), Update Token API returns the ID of the token updated. Delete Token API returns a raw text which is true for successful deletions
10826,terraform: fix formatting of consul.tf (#4580),
10827,website: update the response json fields for sessions (#4604),Updated the response json with the true response from Consul 1.2.2
10828,Implement CLI token cloning & special ID handling (#4827),  Implement CLI token cloning & special ID handling   Update a couple CLI commands to take some alternative options.   Document the CLI.   Update the policy list and set-agent-token synopsis 
10829,Fix the NonVoter Bootstrap test (#4786),
10830,website: Update deprecated script tag in example. (#4790),Signed-off-by: Martin Logan mlogan@fanatics.com
10831,website: explain script exit code 1 in health check introduction guide (#4769),
10832,connect: Fix comment DYNAMIC_DNS to LOGICAL_DNS (#4799),LOGICAL_DNS is one of the supported service discovery types [1]. [1] https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/service_discovery#arch-overview-service-discovery-types
10833,Single quote a directory (#4846),Allows building the dev docker container to work when you have spaces in your cwd.
10834,Fix some uuids and make it clear that the SecretID is used for agent tokens (#4845),
10835,Update the join command format in the k8s Running Consul section,"Based on info from consul-helm issue 16, the formatting of the helm chart value for joining an external cluster needs to be specified as a yaml array. This updates the documentation to reflect this."
10836,website: add link to rc announce,
10837,ACL documentation (#4824),  Updating the ACL guide.   Update the docs correctly   Finish updating the ACL docs - for now. 
10838,Release v1.4.0-rc1,
10839,Dont expect the freebsd/arm build,
10840,Merge pull request #4823 from hashicorp/build-gopsutil,Fix build on uncommon platforms
10841,vendor: upgrade to latest version of gopsutil,
10842,build: exclude freebsd/arm,
10843,fsm: add Intention operations to transactions for internal use,
10844,Update CHANGELOG.md,
10845,Update CHANGELOG.md,
10846,Update CHANGELOG.md,
10847,Merge pull request #4822 from hashicorp/mis,A few misc fixes found by go vet
10848,ui: Adds multi syntax linting to the code editor (#4814),
10849,Update CHANGELOG.md,
10850,A few misc fixes found by go vet,
10851,Merge pull request #4821 from hashicorp/release/1.4-staging,1.4 Release
10852,New ACLs (#4791),"This PR is almost a complete rewrite of the ACL system within Consul. It brings the features more in line with other HashiCorp products. Obviously there is quite a bit left to do here but most of it is related docs, testing and finishing the last few commands in the CLI. I will update the PR description and check off the todos as I finish them over the next few days/week. Description At a high level this PR is mainly to split ACL tokens from Policies and to split the concepts of Authorization from Identities. A lot of this PR is mostly just to support CRUD operations on ACLTokens and ACLPolicies. These in and of themselves are not particularly interesting. The bigger conceptual changes are in how tokens get resolved, how backwards compatibility is handled and the separation of policy from identity which could lead the way to allowing for alternative identity providers. On the surface and with a new cluster the ACL system will look very similar to that of Nomads. Both have tokens and policies. Both have local tokens. The ACL management APIs for both are very similar. I even ripped off Nomad's ACL bootstrap resetting procedure. There are a few key differences though. Nomad requires token and policy replication where Consul only requires policy replication with token replication being opt-in. In Consul local tokens only work with token replication being enabled though. All policies in Nomad are globally applicable. In Consul all policies are stored and replicated globally but can be scoped to a subset of the datacenters. This allows for more granular access management. Unlike Nomad, Consul has legacy baggage in the form of the original ACL system. The ramifications of this are:     A server running the new system must still support other clients using the legacy system.     A client running the new system must be able to use the legacy RPCs when the servers in its datacenter are running the legacy system.     The primary ACL DC's servers running in legacy mode needs to be a gate that keeps everything else in the entire multi-DC cluster running in legacy mode.  So not only does this PR implement the new ACL system but has a legacy mode built in for when the cluster isn't ready for new ACLs. Also detecting that new ACLs can be used is automatic and requires no configuration on the part of administrators. This process is detailed more in the ""Transitioning from Legacy to New ACL Mode"" section below."
10853,website: minor notes about 1.4.0 (#4820),
10854,Update docs to include multiple tag support (#4797),"  Update docs to include multiple tag support   Sort tags before using them in metrics   This addresses the potential proliferation of metrics if a query of ""?tag=foo&tag=bar"" is treated differently than ""?tag=bar&tag=foo"". Now, tags are always sorted before being recorded, making these two emit the same metric.  Add caveat about multiple tags returned by the metrics endpoint"
10855,UI: New ACLs (#4789),UI to accompany the new ACLs APIs
10856,Update CHANGELOG.md,
10857,Update CHANGELOG.md,
10858,website: update sprockets and ffi to dodge CVEs (#4781), Update sprockets to dodge CVE-2018-3760 and CVE-2014-7819 update ffi to dodge CVE-2018-1000201
10859,dns: implements prefix lookups for DNS TTL (#4605),This will fix https://github.com/hashicorp/consul/issues/4509 and allow forinstance lb-* to match services lb-001 or lb-service-007.
10860,website: add service weights documentation in API doc (#4776),Adds weights documentation to the following API routes : * Agent: List Services * Agent Register Service * Health: List Nodes for Service
10861,website: note Envoy support in Nomad guide (#4787),
10862,New command: consul debug (#4754),"  agent/debug: add package for debugging, host info   api: add v1/agent/host endpoint   agent: add v1/agent/host endpoint   command/debug: implementation of static capture   command/debug: tests and only configured targets   agent/debug: add basic test for host metrics   command/debug: add methods for dynamic data capture   api: add debug/pprof endpoints   command/debug: add pprof   command/debug: timing, wg, logs to disk   vendor: add gopsutil/disk   command/debug: add a usage section   website: add docs for consul debug   agent/host: require operator:read   api/host: improve docs and no retry timing   command/debug: fail on extra arguments   command/debug: fixup file permissions to 0644   command/debug: remove server flags   command/debug: improve clarity of usage section   api/debug: add Trace for profiling, fix profile   command/debug: capture profile and trace at the same time   command/debug: add index document   command/debug: use ""clusters"" in place of members   command/debug: remove address in output   command/debug: improve comment on metrics sleep   command/debug: clarify usage   agent: always register pprof handlers and protect   This will allow us to avoid a restart of a target agent for profiling by always registering the pprof handlers. Given this is a potentially sensitive path, it is protected with an operator:read ACL and enable debug being set to true on the target agent. enable_debug still requires a restart. If ACLs are disabled, enable_debug is sufficient.  command/debug: use trace.out instead of .prof  More in line with golang docs.   agent: fix comment wording   agent: wrap table driven tests in t.run() "
10863,re-add Connect multi-dc config changes,This reverts commit 8bcfbaffb6588b024cd1a3cf0952e6bfa7d9e900.
10864,ui: Fix freetext searching within the nodes page (#4819),"Essentially this was missing a call to super. The error unfortuantely didn't arise in the tests as it only errors when the node list has 4 items are more (the 4 columns), and the acceptence tests by change were only filling the page with 3 nodes for test purposes. I've bumped the amount of nodes up to 4 in the tests, which then causes the tests to fail, made the fix by adding the super call, and the tests now pass. I also tested the UI/text searching on a 10,000 node system, and everything now works as expected."
10865,Merge pull request #4812 from hashicorp/docs/helm-16,Add additional formatting detail to the Helm join command docs
10866,Add additional formatting detail to the Helm join command,In response to consul-helm issue 16.
10867,fix some test hangs (#4785),"The default http.Client uses infinite timeouts, so if TestHTTPAPI_MethodNotAllowed_OSS experienced anything going wrong about setup it could hang forever. Switching to hard coding various http.Client timeouts to non-infinite values at least bounds the failure time."
10868,Putting source back into Dev Mode,
10869,website: bump website for 1.3.0,
10870,Release v1.3.0,
10871,typo: s/checks/services (#4783),
10872,"Revert ""Connect multi-dc config"" (#4784)",
10873,Update CHANGELOG.md,
10874,Update creating-certificates.html.md (#4780),"In case verify_server_hostname is set in the configuration, Consul checks the certificate against  server.<datacenter>.<domain>. The name suggested by the guide generates errors like the following: 2018/10/10 12:42:20 [ERR] consul: Failed to confirm peer status for consul-3: rpc error getting client: failed to get conn: x509: certificate is valid for server.node.consul.labs, localhost, not server.consul.labs. Retrying in 16s... Removing the node part from the certificate permits them to work also when that option is set."
10875,[Security] Add finer control over script checks (#4715), Add -enable-local-script-checks options  These options allow for a finer control over when script checks are enabled by giving the option to only allow them when they are declared from the local file system.   Add documentation for the new option   Nitpick doc wording 
10876,Quick fix for cache age flakiness in CI,
10877,Update CHANGELOG.md,
10878,Support multiple tags for health and catalog http api endpoints (#4717)," Support multiple tags for health and catalog api endpoints  Fixes #1781. Adds a ServiceTags field to the ServiceSpecificRequest to support multiple tags, updates the filter logic in the catalog store, and propagates these change through to the health and catalog endpoints. Note: Leaves ServiceTag in the struct, since it is being used as part of the DNS lookup, which in turn uses the health check.  Update the api package to support multiple tags  Includes additional tests.   Update new tests to use the require library   Update HealthConnect check after a bad merge "
10879,[Performance On Large clusters] Reduce updates on large services (#4720)," [Performance On Large clusters] Checks do update services/nodes only when really modified to avoid too many updates on very large clusters  In a large cluster, when having a few thousands of nodes, the anti-entropy mechanism performs lots of changes (several per seconds) while there is no real change. This patch wants to improve this in order to increase Consul scalability when using many blocking requests on health for instance.   [Performance for large clusters] Only updates index of service if service is really modified   [Performance for large clusters] Only updates index of nodes if node is really modified   Added comments / ensure IsSame() has clear semantics   Avoid having modified boolean, return nil directly if stutures are Same   Fixed unstable unit tests TestLeader_ChangeServerID   Rewrite TestNode_IsSame() for better readability as suggested by @banks   Rename ServiceNode.IsSame() into IsSameService() + added unit tests   Do not duplicate TestStructs_ServiceNode_Conversions() and increase test coverage of IsSameService   Clearer documentation in IsSameService   Take into account ServiceProxy into ServiceNode.IsSameService()   Fixed IsSameService() with all new structures "
10880,Bump Go version for CI and build to 1.11.1 (#4782),
10881,Be more explicit about rolling upgrade process,
10882,Move 1.0.6 upgrade docs that were added in the wrong place,
10883,f-envoy branch CHANGELOG entries,
10884,[WIP] Initial draft of Sidecar Service and Managed Proxy deprecation docs (#4752),  Initial draft of Sidecar Service and Managed Proxy deprecation docs   Service definition deprecation notices and sidecar service   gRPC and sidecar service config options; Deprecate managed proxy options   Envoy Docs: Basic envoy command; envoy getting started/intro   Remove change that snuck in   Envoy custom config example   Add agent/service API docs; deprecate proxy config endpoint   Misc grep cleanup for managed proxies; capitalize Envoy   Updates to getting started guide   Add missing link   Refactor Envoy guide into a separate guide and add bootstrap reference notes.   Add limitations to Envoy docs; Highlight no fixes for known managed proxy issues on deprecation page; clarify snake cae stuff; Sidecar Service lifecycle 
10885,Update CHANGELOG.md,
10886,ui: Improve layout of node cards on large and small screens (#4761),"  The grid based unhealthy cards are now clamped to only four wide maximum. This means that on larger screen the cards are much wider meaning you can view more information. Grid gutters are also clamped at a certain ideal width screen, remaining responsive for anything below this.   The healthy node columns are finally responsive following the same column rules as unhealthy nodes "
10887,ui: Add truncation to the .Address (#4760),
10888,ui: Cope with service names that contain slashes (#4756),
10889,ui: Reduce the breakpoint at which the smaller footer kicks in (#4723),
10890,Update CHANGELOG.md,
10891,Added SOA configuration for DNS settings. (#4714),"This will allow to fine TUNE SOA settings sent by Consul in DNS responses, for instance to be able to control negative ttl. Will fix: https://github.com/hashicorp/consul/issues/4713 Example Override all settings:  min_ttl: 0 => 60s retry: 600 (10m) => 300s (5 minutes), expire: 86400 (24h) => 43200 (12h) refresh: 3600 (1h) => 1800 (30 minutes)  consul agent -dev -hcl 'dns_config={soa={min_ttl=60,retry=300,expire=43200,refresh=1800}}' Result: ``` dig +multiline @localhost -p 8600 service.consul ; <<>> DiG 9.12.1 <<>> +multiline @localhost -p 8600 service.consul ; (2 servers found) ;; global options: +cmd ;; Got answer: ;; ->>HEADER<<- opcode: QUERY, status: NXDOMAIN, id: 36557 ;; flags: qr aa rd; QUERY: 1, ANSWER: 0, AUTHORITY: 1, ADDITIONAL: 1 ;; WARNING: recursion requested but not available ;; OPT PSEUDOSECTION: ; EDNS: version: 0, flags:; udp: 4096 ;; QUESTION SECTION: ;service.consul.        IN A ;; AUTHORITY SECTION: consul.         0 IN SOA ns.consul. hostmaster.consul. (                 1537959133 ; serial                 1800       ; refresh (30 minutes)                 300        ; retry (5 minutes)                 43200      ; expire (12 hours)                 60         ; minimum (1 minute)                 ) ;; Query time: 4 msec ;; SERVER: 127.0.0.1#8600(127.0.0.1) ;; WHEN: Wed Sep 26 12:52:13 CEST 2018 ;; MSG SIZE  rcvd: 93 ```"
10892,Merge pull request #4687 from hashicorp/connect-multidc-config,Connect multi-dc config
10893,connect/ca: more OSS split for multi-dc,
10894,connect/ca: split CA initialization logic between oss/enterprise,
10895,agent: add primary_datacenter and connect replication config options,
10896,connect: add ExternalTrustDomain to CARoot fields,
10897,docs: deprecate acl_datacenter and replace it with primary_datacenter,
10898,merge feedback: fix typos; actually use deliverLatest added previously but not plumbed in,
10899,cli: envoy command default gRPC port (#4768),  Default gRPC port; Start on some basic tests for argument and ENV handling; Make Exec test less platform-dependent.   Allow hot-restarts   Remove debug 
10900,cli: avoid passing envoy bootstrap configuration as arguments (#4747),"Play a trick with CLOEXEC to pass the envoy bootstrap configuration as an open file descriptor to the exec'd envoy process. The file only briefly touches disk before being unlinked. We convince envoy to read from this open file descriptor by using the /dev/fd/$FDNUMBER mechanism to read the open file descriptor as a file. Because the filename no longer has an extension envoy's sniffing logic falls back on JSON instead of YAML, so the bootstrap configuration must be generated as JSON instead."
10901,Fix up tests broken by master merge; add proxy tests to services command (and fix it!); actually run the proxycfg.Manager,
10902,Fix bug in leaf-cert cache type where multiple client tokens collide (#4736),  Fix bug in leaf-cert cache type where multiple clients with different tokens would share certs and block incorrectly   Use hash for issued certs key to avoid ambiguity concatenating 
10903,Connect Envoy Command (#4735),  Plumb xDS server and proxyxfg into the agent startup   Add consul connect envoy command to allow running Envoy as a connect sidecar.   Add test for help tabs; typos and style fixups from review 
10904,xDS Server Implementation (#4731),  Vendor updates for gRPC and xDS server   xDS server implementation for serving Envoy as a Connect proxy   Address initial review comments   consistent envoy package aliases; typos fixed; override TLS and authz for custom listeners   Moar Typos   Moar typos 
10905,XDS Server Config (#4730),  Config for the coming XDS server   Default gRPC to 8502 for -dev mode; Re-merge the command Info output that shows gRPC. 
10906,Proxy Config Manager (#4729)," Proxy Config Manager  This component watches for local state changes on the agent and ensures that each service registered locally with Kind == connect-proxy has it's state being actively populated in the cache. This serves two purposes:  1. For the built-in proxy, it ensures that the state needed to accept connections is available in RAM shortly after registration and likely before the proxy actually starts accepting traffic.  2. For (future - next PR) xDS server and other possible future proxies that require push based config discovery, this provides a mechanism to subscribe and be notified about updates to a proxy instance's config including upstream service discovery results.   Address review comments   Better comments; Better delivery of latest snapshot for slow watchers; Embed Config   Comment typos   Add upstream Stringer for funsies "
10907,Add cache.Notify to abstract watching for cache updates for types that support blocking semantics. (#4695),
10908,Add -sidecar-for and new /agent/service/:service_id endpoint (#4691)," A new endpoint /v1/agent/service/:service_id which is a generic way to look up the service for a single instance. The primary value here is that it: supports hash-based blocking and so; replaces /agent/connect/proxy/:proxy_id as the mechanism the built-in proxy uses to read its config. It's not proxy specific and so works for any service. It has a temporary shim to call through to the existing endpoint to preserve current managed proxy config defaulting behaviour until that is removed entirely (tested). The built-in proxy now uses the new endpoint exclusively for it's config The built-in proxy now has a -sidecar-for flag that allows the service ID of the target service to be specified, on the condition that there is exactly one ""sidecar"" proxy (that is one that has Proxy.DestinationServiceID set) for the service registered. Several fixes for edge cases for SidecarService A fix for Alias checks - when running locally they didn't update their state until some external thing updated the target. If the target service has no checks registered as below, then the alias never made it past critical."
10909,Add SidecarService Syntax sugar to Service Definition (#4686),  Added new Config for SidecarService in ServiceDefinitions.   WIP: all the code needed for SidecarService is written... none of it is tested other than config :). Need API updates too.   Test coverage for the new sidecarServiceFromNodeService method.   Test API registratrion with SidecarService   Recursive Key Translation :facepalm:   Add tests for nested sidecar defintion arrays to ensure they are translated correctly   Use dedicated internal state rather than Service Meta for tracking sidecars for deregistration.   Add tests for deregistration.   API struct for agent register. No other endpoint should be affected yet.   Additional test cases to cover updates to API registrations 
10910,Add Proxy Upstreams to Service Definition (#4639)," Refactor Service Definition ProxyDestination.  This includes:  - Refactoring all internal structs used  - Updated tests for both deprecated and new input for:    - Agent Services endpoint response    - Agent Service endpoint response    - Agent Register endpoint      - Unmanaged deprecated field      - Unmanaged new fields      - Managed deprecated upstreams      - Managed new    - Catalog Register      - Unmanaged deprecated field      - Unmanaged new fields      - Managed deprecated upstreams      - Managed new    - Catalog Services endpoint response    - Catalog Node endpoint response    - Catalog Service endpoint response  - Updated API tests for all of the above too (both deprecated and new forms of register) TODO:  - config package changes for on-disk service definitions  - proxy config endpoint  - built-in proxy support for new fields   Agent proxy config endpoint updated with upstreams   Config file changes for upstreams.   Add upstream opaque config and update all tests to ensure it works everywhere.   Built in proxy working with new Upstreams config   Command fixes and deprecations   Fix key translation, upstream type defaults and a spate of other subtele bugs found with ned to end test scripts...   TODO: tests still failing on one case that needs a fix. I think it's key translation for upstreams nested in Managed proxy struct.   Fix translated keys in API registration. ≈   Fixes from docs  omit some empty undocumented fields in API  Bring back ServiceProxyDestination in Catalog responses to not break backwards compat - this was removed assuming it was only used internally.   Documentation updates for Upstreams in service definition   Fixes for tests broken by many refactors.   Enable travis on f-connect branch in this branch too.   Add consistent Deprecation comments to ProxyDestination uses   Update version number on deprecation notices, and correct upstream datacenter field with explanation in docs "
10911,Rename proxy package (re-run of #4550) (#4638)," Rename agent/proxy package to reflect that it is limited to managed proxy processes  Rationale: we have several other components of the agent that relate to Connect proxies for example the ProxyConfigManager component needed for Envoy work. Those things are pretty separate from the focus of this package so far which is only concerned with managing external proxy processes so it's nota good fit to put code for that in here, yet there is a naming clash if we have other packages related to proxy functionality that are not in the agent/proxy package. Happy to bikeshed the name. I started by calling it managedproxy but managedproxy.Manager is especially unpleasant. proxyprocess seems good in that it's more specific about purpose but less clearly connected with the concept of ""managed proxies"". The names in use are cleaner though e.g. proxyprocess.Manager. This rename was completed automatically using golang.org/x/tools/cmd/gomvpkg. Depends on #4541  Fix missed windows tagged files"
10912,Support Agent Caching for Service Discovery Results (#4541),"  Add cache types for catalog/services and health/services and basic test that caching works   Support non-blocking cache types with Cache-Control semantics.   Update API docs to include caching info for every endpoint.   Comment updates per PR feedback.   Add note on caching to the 10,000 foot view on the architecture page to make the new data path more clear.   Document prepared query staleness quirk and force all background requests to AllowStale so we can spread service discovery load across servers. "
10913,Merge pull request #4766 from hashicorp/f-connect-inject,website: add docs for the Connect injection
10914,website: fix typo in connect example (#4774),
10915,website: address PR feedback,
10916,Clarify enable_tag_override explanation,"In designing a potential UI for a configuration of enable_tag_override, I found the documentation confusing and lengthy. Here, I've made an attempt at re-writing this section to be more concise and clear. I also made a few small changes to the organization of this file to map explanations to the order of the properties listing at the top. I find it easier to scan docs when explanations appear in the same order they are listed at the top. For explanations that span multiple paragraphs, I provided a subheading, which also helps in linking from other pages. Finally, I removed a duplicated paragraph from the documentation."
10917,Update CHANGELOG.md,
10918,watch: don't set TLSConfig.Address explicitly (#4727),Don't set the value of TLSConfig.Address explicitly. This will make sure env vars like CONSUL_TLS_SERVER_NAME are taken into account for the connection. Fixes #4718.
10919,website: note that env vars are set,
10920,ui: Move the text encoding polyfill to a a proper detecting polyfill (#4767),
10921,website: address some PR feedback,
10922,website: add docs for the Connect injection,
10923,Fix retry_join config documentation (#4757),"'retry_join': source data must be an array or slice, got string"
10924,Update the snapshot agent documentation(#4758),Detail the S3 permissions required in addition to a gotcha regarding having part of the key within the S3 bucket name configuration.
10925,typo: missing space,
10926,Contribution guide (#4704),  Add a contribution guide and link to it from readme   Add first pass at testing section for contribution guide   Format as in README.md   Add responding to community questions as way to contribute 
10927,Update semaphore guide (#4661), Fill in gaps in semaphore guide Update to match that values come back b64 encoded Add that the value needs to be decoded Remove outdated reference to session1 Fix some typos Clarify what is mean by a session having an active key Clarify requirements for lock holders in semaphore guide
10928,Update options.html.md (#4753),
10929,docs: correct link to top level agent package (#4750),Fixes #4749
10930,Add a Close method to cache that stops background goroutines. (#4746),"In a real agent the cache instance is alive until the agent shuts down so this is not a real leak in production, however in out test suite, every testAgent that is started and stops leaks goroutines that never get cleaned up which accumulate consuming CPU and memory through subsequent test in the agent package which doesn't help our test flakiness. This adds a Close method that doesn't invalidate or clean up the cache, and still allows concurrent blocking queries to run (for up to 10 mins which might still affect tests). But at least it doesn't maintain them forever with background refresh and an expiry watcher routine. It would be nice to cancel any outstanding blocking requests as well when we close but that requires much more invasive surgery right into our RPC protocol since we don't have a way to cancel requests currently. Unscientifically this seems to make tests pass a bit quicker and more reliably locally but I can't really be sure of that!"
10931,Enable compilation with Go 1.11 on Travis to avoid unstable tests (#4496), Enable compilation with Go 1.10 on Travis  There a minor compilation differences between Go 1.10 and 1.x which is currently Go 1.11 beta.x such as new compilation warnings. It will show more obviously the errors in Travus when error is linked for instance to a new compilation warning   Compile only for Go 1.10 as requested by @pearkes   Switch to golang 1.11 as requested by @pearkes 
10932,Fix prometheus error message (#4745),
10933,Add Deployment Guide and update links (#4487)," Adds Deployment Guide and update links Fixes releases link Re-organisation of content Cuts down ""deployment"" doc (which should focus on Reference Architecture) by moving raft and performance tuning to the Server Performance page which already covers some of this. Moves backups from ""deployment"" doc (which should focus on Reference Architecture) to ""deployment-guide"" Cleans up some notes and add single DC diagram Removes old link to deployment guide from nav Corrects minor styling, formatting, and grammar"
10934,UI: Package upgrades (#4740),"Upgrade all patch and minor upgradeable packages, also uses only in ember-cli-build to reduce the included helpers from certain helper packages. Make some major version upgrades for some dev tools  husky lint-staged ember-cli-yadda ember-cli-sass (also moved from node-sass to dart-sass)  Minor tweak: spotted css file (instead of scss file), rename The move to dart-sass: dart-sass has been the primary implementation of sass for ~6 months and will receive updates earlier than libsass (ruby-sass itself is now deprecated) Other benefits include not having to recompile (via npm rebuild or similar) when switching platforms and an 'almost' javascript based solution. This update also alters some media queries that, whilst wouldn't compile anymore with either an updated libsass or dart-sass, where probably a little over complicated anyway, I've therefore made them similar to other breakpoints that made sense."
10935,Update CHANGELOG.md,
10936,cli: forward SIGTERM to child process of 'lock' and 'watch' subcommands (#4737),cli: forward SIGTERM to child process of 'lock' and 'watch' subcommands on unix This also removes the signal handler for SIGKILL as it's impossible to receive these signals.
10937,command/services: just add additional output feedback on success,
10938,update CHANGELOG,
10939,Merge pull request #4732 from hashicorp/f-service-cli,cli: add services register and  deregister
10940,command/services: add test to ensure that dev mode introduces no,services
10941,Merge pull request #4733 from hashicorp/b-kube-docs,website: clarify that downward API works in any pod spec
10942,website: clarify that downward API works in any pod spec,
10943,website: docs for services CLI,
10944,command: register new commands,
10945,command/services/register: flag-based registration,
10946,command/services/deregister: tests for flag validation,
10947,command/services/deregister: -id flag for deletion,
10948,command/services/deregister: basics working from file,
10949,command/services: move the config helpers to parent package,
10950,command/services/register: registration from files work,
10951,UI: Reduce in-development deprecations (also use toLocaleString) (#4677),"Various ember addons produced deprecation messages, some in the browser console and some in terminal. Upgrading and replacing some of these has reduced this. Upgrades:  ember-collection ember-computed-style  Replacements:  ember-pluralize replaced with ember-inflector ember-cli-format-number replaced with custom helper using standard toLocaleString  Removing ember-cli-format-number also meant some further changes related to decimal places in the tomography graph, done using toFixed The ExternalSources background-images have also now been escaped correctly preventing in-development console warnings. The only deprecation warnings are now from ember-block-slots, only in terminal, making for a better development experience overall, especially now we have an empty browser console Also adds a callIfType 'helper util' which is a util specifically for helpers (it conforms to a helper argument signature) to be expanded upon later."
10952,command/services/register: config mapping tests,
10953,vendor: update mapstructure to v1.1.0,We require this change to support struct to struct decoding.
10954,command/services,
10955,Documentation for catalog sync w/ K8S (#4710),  website: docs for catalog sync   website: document consul-k8s   website: document helm options   Add new helm fields   website: fix the description of the sync page   website: address feedback   website: clarify coredns requirement   website: clarify that the server cluster can run anywhere   (NOTE: This was squashed to make cherry-picking to stable-website easier)
10956,website: clarify that the server cluster can run anywhere,
10957,website: clarify coredns requirement,
10958,website: address feedback,
10959,website: fix the description of the sync page,
10960,Add new helm fields,
10961,website: document helm options,
10962,website: document consul-k8s,
10963,website: docs for catalog sync,
10964,ui: Layout fix. Small padding additions to tables (#4701), The 'Services' header need to be knocked ot the right slightly to line up properly with the service name when there are no external source icons. Add a single space between ServiceName and ServiceID on the Node > [Services] tab table.
10965,UI: Tooltips and feedback-dialogs are the same thing - merge (#4678),
10966,UI: CSS Additions (mainly %frames) (#4623)," Move almost everything to use %frames Fix pill styles of ACL types Remove horizontal scrollbars from dom recycling scroller component Make text areas look ok in Firefox Remove ember-bulma-css New form elements, break out %toggle %button design tweaks %form-element design tweaks Better hashicorp logo Small screen CSS improvements (#4624) Reduce header size when there are no breadcrumbs Make the filters toggleable, closed by default Reduce the size of the footer on small screens Hide all non-primary columns for forms Slightly change the layout of various items, mainly buttons within forms Make some confirmation dialogs work vertically on small screens. Guessing we might be better just using native confirmations on small screens"
10967,Update CHANGELOG.md,
10968,Merge pull request #4699 from hashicorp/b-non-voter-bootstrap,Do not bootstrap with non voters
10969,ui: Turn off the code editor whilst making an edit during testing (#4668),"Having the code editor on removes the text area from the DOM, making it more difficult to enter text in the text editor during testing. This turns the code editor off whilst making edits during testing. No changes to UI code"
10970,do not bootstrap with non voters,
10971,Improve resilience of api pkg tests (#4676),  Add function to wait for serfHealth in api tests   Disable connect when creating semaphore test clients   Wait for serfHealth when creating sessions in their tests   Add helper functions to create lock/semaphore sessions without checks   Log passing tests to prevent timeout in Travis due to lack of output 
10972,Merge pull request #4672 from hashicorp/ca-refactor-2,connect/ca: add methods for generating and signing intermediate CSRs
10973,fix typo on connect/index (#4681),wtihin -> within
10974,website: quick typo fix (#4683),
10975,connect/ca: tighten up the intermediate signing verification,
10976,update ffi to dodge CVE-2018-1000201 (#4670),
10977,website: correct chart casing,
10978,connect/ca: add intermediate functions to Vault ca provider,
10979,connect/ca: add intermediate functions to Consul CA provider,
10980,Merge pull request #4644 from hashicorp/ca-refactor,connect/ca: rework initialization/root generation in providers
10981,Putting source back into Dev Mode,
10982,Update CHANGELOG.md,
10983,Update CHANGELOG.md,
10984,Update CHANGELOG.md,
10985,Release v1.2.3,
10986,Bump the website version,
10987,Update CHANGELOG.md,
10988,Fix CA pruning when CA config uses string durations. (#4669)," Fix CA pruning when CA config uses string durations.  The tl;dr here is:  Configuring LeafCertTTL with a string like ""72h"" is how we do it by default and should be supported Most of our tests managed to escape this by defining them as time.Duration directly Out actual default value is a string Since this is stored in a map[string]interface{} config, when it is written to Raft it goes through a msgpack encode/decode cycle (even though it's written from server not over RPC). msgpack decode leaves the string as a []uint8 Some of our parsers required string and failed So after 1 hour, a default configured server would throw an error about pruning old CAs If a new CA was configured that set LeafCertTTL as a time.Duration, things might be OK after that, but if a new CA was just configured from config file, intialization would cause same issue but always fail still so would never prune the old CA. Mostly this is just a janky error that got passed tests due to many levels of complicated encoding/decoding.  tl;dr of the tl;dr: Yay for type safety. Map[string]interface{} combined with msgpack always goes wrong but we somehow get bitten every time in a new way :D We already fixed this once! The main CA config had the same problem so @kyhavlov already wrote the mapstructure DecodeHook that fixes it. It wasn't used in several places it needed to be and one of those is notw in structs which caused a dependency cycle so I've moved them. This adds a whole new test thta explicitly tests the case that broke here. It also adds tests that would have failed in other places before (Consul and Vaul provider parsing functions). I'm not sure if they would ever be affected as it is now as we've not seen things broken with them but it seems better to explicitly test that and support it to not be bitten a third time!   Typo fix   Fix bad Uint8 usage "
10989,website: document k8s go-discover (#4666),This adds documentation for the k8s go-discover provider that will be part of 1.2.3.
10990,Update CHANGELOG.md,
10991,Allow disabling the HTTP API again. (#4655),If you provide an invalid HTTP configuration consul will still start again instead of failing. But if you do so the build-in proxy won't be able to start which you might need for connect.
10992,Update CHANGELOG.md,
10993,ui: Test bugfix. Specifically set deny for intention creation (#4663),Make sure we speficially set and test for deny on testing intention creation
10994,ui: Tests Bugfix. Reflect extra json property ExternalSources in mocks (#4662),The mocks where using randomly generated ExternalSources this change makes sure they are fixed so we can reliably test the values. No change to actual UI code
10995,UI: Set the CODE view as the default view for editing KV's (#4651),"Sets the code toggle on the KV edit/create page to be on by default, we figured most people probably prefer this view. Also, previously we forced the KV toggle back to a default setting for every time you visited a KV form page. We've now changed this so that the KV code toggle button acts as a 'global' toggle. So whatever you set it as will be the same for every KV for the lifetime of your 'ember session' If we are to keep this, then consider saving this into localStorage settings or similar, added some thoughts in comments re: this as it's very likely to happen."
10996,Merge pull request #4665 from hashicorp/docs/gh-4616,Update required golang version in Readme
10997,Update required golang version in Readme,Fixes #4616.
10998,connect/ca: hash the consul provider ID and include isRoot,
10999,ui: [BUGFIX] Intentions were showing the wrong notification on creation (#4658),"The error notification was being shown on creation of an intention. This was as a result of #4572 and/or #4572 and has not been included in a release. This includes a fix, plus tests to try to prevent any further regression."
11000,ui: Adds a default view helper for providing a default value (#4650),If the first value passed to the helper is an empty string or undefined then return the second value
11001,UI: External Source markers (#4640)," Addition of external source icons for services marked as such. New %with-tooltip css component (wip) New 'no healthcheck' icon as external sources might not have healthchecks, also minus icon on node cards in the service detail view If a service doesn't have healthchecks, we use the [Services] tabs as the default instead of the [Health Checks] tab in the Service detail page.  css-var helper. The idea here is that it will eventually be replaced with pure css custom properties instead of having to use JS. It would be nice to be able to build the css variables into the JS at build time (you'd probably still want to specify in config which variables you wanted available in JS), but that's possible future work.  Lastly there is probably a tiny bit more testing edits here than usual, I noticed that there was an area where the dynamic mocking wasn't happening, it was just using the mocks from consul-api-double, the mocks I was 'dynamically' setting happened to be the same as the ones in consul-api-double. I've fixed this here also but it wasn't effecting anything until actually made certain values dynamic."
11002,UI: Bugfix. Remove split view code editor (#4615),"When adding an auto resizing (heightwise) code editor, the ivy-codemirror plugin seems to do this using more nested divs. This div had a horizontal scroller but couldn't be seen on some platforms (with hidden scrollbars). This commit makes the code editor slightly more usable and more visually correct by removing the scroll bar in this div to stop producing the 'split view look', yet keeping the horizontal scroller at the bottom of the code editor for when you enter code that is wider than the area. A max-width has also been added here to prevent the text area from growing off the side of the page. Another improvement to the code editor here is the addition of a nicer color for hightlighting text selection so its at least visible. Lastly, there was a way you could get the bottom horizontal scrollbar to overlay the code in the editor. This makes sure there is always some space at the bottom of the editor to make sure the code won't be obscured"
11003,UI: Bugfix. Move to a different TextEncoder/Decoder (#4613), The previously used TextEncoder/Decoder (used as a polyfill for browsers that don't have a native version) didn't expose an encoder via CommonJS. Use a different polyfill that exposes both a decoder and an encoder. The feature detection itself was flawed. This does a less error prone detection that ensures native encoding/decoding where available and polyfilled encoding/decoding where not available.
11004,Update CHANGELOG.md,
11005,Exit with error code 1 when failing to list DCs (#4583),Fixes #4582.
11006,Initial Helm Chart/K8S Docs (#4653),  website: initial Kubernetes section with Helm information   website: extraConfig for clients   website: add more helm fields   website: document extraVolumes   website: document Consul DNS   website: fix typos and show example of downward API 
11007,Fix more unstable tests in agent and command,
11008,connect/ca: some cleanup and reorganizing of the new methods,
11009,Update CHANGELOG.md,
11010,"Ensure that Proxies ARE always cleaned up, event with DeregisterCriticalServiceAfter (#4649)",This fixes https://github.com/hashicorp/consul/issues/4648
11011,Update snapshot agent docs to include s3-endpoint (#4652),
11012,Update CHANGELOG.md,
11013,Update CHANGELOG.md,
11014,Update CHANGELOG.md,
11015,Update CHANGELOG.md,
11016,Add ECS option to EDNS responses where appropriate (#4647),"This implements parts of RFC 7871 where Consul is acting as an authoritative name server (or forwarding resolver when recursors are configured) If ECS opt is present in the request we will mirror it back and return a response with a scope of 0 (global) or with the same prefix length as the request (indicating its valid specifically for that subnet). We only mirror the prefix-length (non-global) for prepared queries as those could potentially use nearness checks that could be affected by the subnet. In the future we could get more sophisticated with determining the scope bits and allow for better caching of prepared queries that don’t rely on nearness checks. The other thing this does not do is implement the part of the ECS RFC related to originating ECS headers when acting as a intermediate DNS server (forwarding resolver). That would take a quite a bit more effort and in general provide very little value. Consul will currently forward the ECS headers between recursors and the clients transparently, we just don't originate them for non-ECS clients to get potentially more accurate ""location aware"" results."
11017,Merge pull request #4646 from hashicorp/b-fix-build,Detect correct GOOS/ARCH for copying binary with build_consul_local
11018,Detect correct GOOS/ARCH for copying binary with build_consul_local,"If GOOS/ARCH is set to something custom, we need to unset it before testing the value so we can compare to the original value."
11019,"Fix unstable tests in agent, api, and command/watch",
11020,Add script and makefile goal to help debug flaky tests,
11021,Merge pull request #4642 from hashicorp/f-ui-meta,agent: aggregate service instance meta for UI purposes
11022,agent: ExternalSources instead of Meta,
11023,Update CHANGELOG.md,
11024,Connect: Verify the leaf cert to determine its readiness. (#4540),This improves the checking so that if a certificate were to expire or the roots changed then we will go into a non-ready state. This parses the x509 certificates from the TLS certificate when the leaf is set. The readyCh will be closed whenever a parseable certificate is set and the ca roots are set. This does not mean that the certificate is valid but that it has been setup and is generally valid. The Ready function will now do x509 certificate verification which will in addition to verifying the signatures with the installed CA roots will also verify the certificate isn't expired or not set to become valid in the future.  The correct way to use these functions is to wait for the ReadyWait chan to be closed and then periodically check the readiness to determine if the certificate is currently useable.
11025,Update CHANGELOG.md,
11026,Ensure that errors setting up the DNS servers get propagated back to the shell (#4598),Fixes: #4578  Prior to this fix if there was an error binding to ports for the DNS servers the error would be swallowed by the gated log writer and never output. This fix propagates the DNS server errors back to the shell with a multierror.
11027,Update CHANGELOG.md,
11028,Implementation of Weights Data structures (#4468)," Implementation of Weights Data structures  Adding this datastructure will allow us to resolve the issues #1088 and #4198 This new structure defaults to values: { Passing: 1, Warning: 0 } Which means, use weight of 0 for a Service in Warning State while use Weight 1 for a Healthy Service. Thus it remains compatible with previous Consul versions.   Implemented weights for DNS SRV Records   DNS properly support agents with weight support while server does not (backwards compatibility)   Use Warning value of Weights of 1 by default   When using DNS interface with only_passing = false, all nodes with non-Critical healthcheck used to have a weight value of 1. While having weight.Warning = 0 as default value, this is probably a bad idea as it breaks ascending compatibility. Thus, we put a default value of 1 to be consistent with existing behaviour.   Added documentation for new weight field in service description   Better documentation about weights as suggested by @banks   Return weight = 1 for unknown Check states as suggested by @banks   Fixed typo (of -> or) in error message as requested by @mkeeler   Fixed unstable unit test TestRetryJoin   Fixed unstable tests   Fixed wrong Fatalf format in testrpc/wait.go   Added notes regarding DNS SRV lookup limitations regarding number of instances   Documentation fixes and clarification regarding SRV records with weights as requested by @banks   Rephrase docs "
11029,connect/ca: add Configure/GenerateRoot to provider interface,
11030,agent: aggregate service instance meta for UI purposes,
11031,Update CHANGELOG.md,
11032,Update Raft Vendoring (#4539),Pulls in a fix for a potential memory leak regarding consistent reads that invoke VerifyLeader.
11033,Update CHANGELOG,
11034,Merge pull request #4635 from hashicorp/f-discover-k8s,"Update go-discover, add k8s auto-join"
11035,Enable CI on f-envoy feature branch,
11036,vendor k8s client lib,
11037,agent: configure k8s go-discover,
11038,Update go-discover vendor,
11039,Update CHANGELOG.md,
11040,Use target service name instead of ID as connect proxy service name (#4620),
11041,Fixed more flaky tests in ./agent/consul (#4617),
11042,Fixed flaky watch tests (#4595),
11043,Fixed flaky tests (#4626),
11044,Keep same parameters on retry so results can be cached by go test (#4627),
11045,Adds XL machine spec and notes on large deployments (#4622)," Adds XL machine spec and notes on large deployments Clarifies machine sizes Fixes internal links within the document Moves datacenter size guidelines to ""Single Datacenter"" section"
11046,Updated CHANGELOG.md with the dns recursor fix. (#4618),  Updated CHANGELOG.md with the dns recursor fix.   Refined the words a bit 
11047,UI: Bugfix. Fix code toggle in Safari (#4608),"I'd mistakenly changed the checkbox event to listen to oninput, which works in Chrome and Firefox. Changed this back to onchange as it should be."
11048,Adds a new command line flag -log-file for file based logging. (#4581),"  Added log-file flag to capture Consul logs in a user specified file   Refactored code.   Refactored code. Added flags to rotate logs based on bytes and duration   Added the flags for log file and log rotation on the webpage   Fixed TestSantize from failing due to the addition of 3 flags   Introduced changes : mutex, data-dir log writes, rotation logic   Added test for logfile and updated the default log destination for docs   Log name now uses UnixNano   TestLogFile is now uses t.Parallel()   Removed unnecessary int64Val function   Updated docs to reflect default log name for log-file   No longer writes to data-dir and adds .log if the filename has no extension "
11049,UI: Simplify/refactor the actions/notification layer (#4572) + (#4573)," Move notification texts to a slightly different layer (#4572)  Further Simplify/refactor the actions/notification layer (#4573)   Move the 'with-feedback' actions to a 'with-blocking-action' mixin which better describes what it does  Additional set of unit tests almost over the entire layer to prove things work/add confidence for further changes  The multiple 'with-action' mixins used for every 'index/edit' combo are now reduced down to only contain the functionality related to their specific routes, i.e. where to redirect. The actual functionality to block and carry out the action and then notify are 'almost' split out so that their respective classes/objects do one thing and one thing 'well'. Mixins are chosen for the moment as the decoration approach used by mixins feels better than multiple levels of inheritence, but I would like to take this fuether in the future to a 'compositional' based approach. There is still possible further work to be done here, but I'm a lot happier now this is reduced down into separate parts."
11050,Update CHANGELOG.md (#4435),
11051,UI: CSS refactor (#4430) + Fullscreen Layout (#4435)," Begin refactoring CSS into component folders. Moved most components into layout/skin folders, left out a couple of ones I want to think about more. Adjust grays based on recent Structure changes  Switch to fullscreen layout for lists and detail, left aligned forms (#4435) Specifically use the 'actions_close' label, not just the :last-child (actions-group) Replace some non-var-ed colours in vaults code skin, plus prefixing (black and white)"
11052,UI: Repo layer integration tests (#4454) (#4563),"ui: Repo layer integration tests for methods that touch the API Includes a repo test helper to make repetitive tasks easier, plus a injectable reporter for sending performance metrics to a centralized metrics system Also noticed somewhere in the ember models that I'd like to improve, but left for the moment to make sure I concentrate on one task at a time, more or less: The tests currently asserts against the existing JSON tree, which doesn't seem to be a very nice tree. The work at hand here is to refactor what is there, so test for the not nice tree to ensure we don't get any regression, and add a skipped test so I can come back here later"
11053,UI: Begin unskipping some more trivial tests (#4574),"WIP Unskip some lower level trivial tests. This is the beginning of work to unskip some of the more trivial tests that I'd skipped a while back (if the thing they are testing broke, they would have failed higher up in other acceptance tests). I'd rather keep the tests, as they do test things in a more isolated manner, and the plan was to always come back and work to unskip them time allowing. I didn't get to far into this work in progress here, but I'd rather merge what I've done all the same and come back at a later date and continue."
11054,Correct rpc telemetry docs (#4602),
11055,Remove operator_area note from godoc overview (#4603),
11056,"Bugfix: Use ""%#v"" when formatting structs (#4600)",
11057,github: some minor changes to issue templates (#4521),Just cleaning these up a tiny bit based on seeing how they're being used.
11058,website: use 127.0.0.1 instead of consul.rocks (#4523),"By default, the Consul agent listens on the local interface at port 8500 for API requests. This change makes the API examples using curl copy-pasteable for this default configuration."
11059,TestAgentAntiEntropy: Wait until Consul service is up on the agent. (#4591),  Anti-Entropy test wait for Consul service added   Reverted some tests back to using WaitForLeader 
11060,Fixed unit test TestCatalogListServicesCommand (#4592),
11061,Fix unit test TestOperatorAutopilotGetConfigCommand (#4594),
11062,Fixed unstable test TestUiNodeInfo (#4586),
11063,Fixed unstable test TestProxy_public (#4587),
11064,Fixed unstable test TestRTTCommand_LAN in command/rtt (#4585),
11065,Fix unstable test TestRegisterMonitor_heartbeat (#4568),
11066,Merge pull request #4577 from remijouannet/patch-1,Update monitoring-telegraf.html.md
11067,Update monitoring-telegraf.html.md,
11068,UI: Fixes healthy node listing resize on large portrait screens (#4564)," Split the resizing functionality of into a separate mixin to be shared across components Add basic integration tests to prove that everything is getting called through out the lifetime of the app. I decided against unit testing as there isn't really any isolated logic to be tested, more checking that things are being called in the correct order etc i.e. the integration is correct.  Adds assertion to with-resizing so its obvious to override resize"
11069,Update CHANGELOG.md (#4562),
11070,[BUGFIX] Avoid returning empty data on startup of a non-leader server (#4554),Ensure that DB is properly initialized when performing stale queries Addresses: - https://github.com/hashicorp/consul-replicate/issues/82 - https://github.com/hashicorp/consul/issues/3975 - https://github.com/hashicorp/consul-template/issues/1131
11071,Intention ACL API clarification (#4547),
11072,Update intentions documentation to clarify ACL behavior (#4546),  Update intentions documentation to clarify ACL behavior   Incorprate @banks suggestions into docs   Fix my own typos! 
11073,Update CHANGELOG.md,
11074,Fixes #4483: Add support for Authorization: Bearer token Header  (#4502),"Added Authorization Bearer token support as per RFC6750  appended Authorization header token parsing after X-Consul-Token added test cases  updated website documentation to mention Authorization header   improve tests, improve Bearer parsing "
11075,Update CHANGELOG.md,
11076,Fix #4515: Segfault when serf_wan port was -1 but reconnect_time_wan was set (#4531),Fixes #4515  This just slightly refactors the logic to only attempt to set the serf wan reconnect timeout when the rest of the serf wan settings are configured - thus avoiding a segfault.
11077,Fixed a make build issue with Windows Binaries. (#4538),  Fixed an issue where Windows binary had trouble being copied correctly   Enclosed binname inside angular brackets 
11078,Merge pull request #4535 from hashicorp/ca-snapshot-fix,fsm: add missing CA config to snapshot/restore logic
11079,Merge branch 'master' into ca-snapshot-fix,
11080,fsm: add connect service config to snapshot/restore test,
11081,Update CHANGELOG.md,
11082,Added code to allow snapshot inclusion of NodeMeta (#4527),
11083,fsm: add missing CA config to snapshot/restore logic,
11084,Merge pull request #4528 from hashicorp/autopilot-fixes,Fix inconsistency caused by the autopilot StatsFetcher
11085,Addresses the flakiness of CatalogNodes (#4530),
11086,Clarify port usage for agents (#4510),
11087,autopilot: don't follow the normal server removal rules for nonvoters,
11088,Fix stats fetcher healthcheck RPCs not being independent,
11089,replace old fork of text package (#4501),
11090,Display more information about check being not properly added when it fails (#4405), Display more information about check being not properly added when it fails  It follows an incident where we add lots of error messages: [WARN] consul.fsm: EnsureRegistration failed: failed inserting check: Missing service registration That seems related to Consul failing to restart on respective agents. Having Node information as well as service information would help diagnose the issue.  Renamed ensureCheckIfNodeMatches() as requested by @banks
11091,Improve reliability of tests with TestAgent (#4525),  Add WaitForTestAgent to tests flaky due to missing serfHealth registration   Fix bug in retries calling Fatalf with *testing.T   Convert TestLockCommand_ChildExitCode to table driven test 
11092,Update intentions.html.md,
11093,Address flakiness in command/exec tests (#4517),  Add fn to wait for TestAgent node and check registration   Add waits for TestAgent and retries before timeouts in exec_test 
11094,Consul Production Deployment Guide,"Renames guide to ""Production Deployment"" Adds link in sidebar menu. Implements edits suggested by Consul engineering team."
11095,Update CHANGELOG.md,
11096,"Allow to rename nodes with IDs, will fix #3974 and #4413 (#4415)"," Allow to rename nodes with IDs, will fix #3974 and #4413  This change allow to rename any well behaving recent agent with an ID to be renamed safely, ie: without taking the name of another one with case insensitive comparison. Deprecated behaviour warning Due to asceding compatibility, it is still possible however to ""take"" the name of another name by not providing any ID. Note that when not providing any ID, it is possible to have 2 nodes having similar names with case differences, ie: myNode and mynode which might lead to DB corruption on Consul server side and lead to server not properly restarting. See #3983 and #4399 for Context about this change. Disabling registration of nodes without IDs as specified in #4414 should probably be the way to go eventually.  Removed the case-insensitive search when adding a node within the else block since it breaks the test TestAgentAntiEntropy_Services  While the else case is probably legit, it will be fixed with #4414 in a later release.  Added again the test in the else to avoid duplicated names, but enforce this test only for nodes having IDs.  Thus most tests without any ID will work, and allows us fixing  Added more tests regarding request with/without IDs.  TestStateStore_EnsureNode now test registration and renaming with IDs TestStateStore_EnsureNodeDeprecated tests registration without IDs and tests removing an ID from a node as well as updated a node without its ID (deprecated behaviour kept for backwards compatibility)   Do not allow renaming in case of conflict, including when other node has no ID   Fixed function GetNodeID that was not working due to wrong type when searching node from its ID   Thus, all tests about renaming were not working properly. Added the full test cas that allowed me to detect it.   Better error messages, more tests when nodeID is not a valid UUID in GetNodeID()   Added separate TestStateStore_GetNodeID to test GetNodeID.   More complete test coverage for GetNodeID  Added new unit test TestStateStore_ensureNoNodeWithSimilarNameTxn  Also fixed comments to be clearer after remarks from @banks   Fixed error message in unit test to match test case   Use uuid.ParseUUID to parse Node.ID as requested by @mkeeler "
11097,Update Serf and memberlist (#4511),"This includes fixes that improve gossip scalability on very large (> 10k node) clusters. The Serf changes:  - take snapshot disk IO out of the critical path for handling messages hashicorp/serf#524  - make snapshot compaction much less aggressive - the old fixed threshold caused snapshots to be constantly compacted (synchronously with request handling) on clusters larger than about 2000 nodes! hashicorp/serf#525 Memberlist changes:  - prioritize handling alive messages over suspect/dead to improve stability, and handle queue in LIFO order to avoid acting on info that 's already stale in the queue by the time we handle it. hashicorp/memberlist#159  - limit the number of concurrent pushPull requests being handled at once to 128. In one test scenario with 10s of thousands of servers we saw channel and lock blocking cause over 3000 pushPulls at once which ballooned the memory of the server because each push pull contained a de-serialised list of all known 10k+ nodes and their tags for a total of about 60 million objects and 7GB of memory stuck. While the rest of the fixes here should prevent the same root cause from blocking in the same way, this prevents any other bug or source of contention from allowing pushPull messages to stack up and eat resources. hashicorp/memberlist#158"
11098,PR to fix TestAgent_IndexChurn and TestPreparedQuery_Wrapper. (#4512),  Fixes TestAgent_IndexChurn   Fixes TestPreparedQuery_Wrapper   Increased sleep in agent_test for IndexChurn to 500ms   Made the comment about joinWAN operation much less of a cliffhanger 
11099,Merge pull request #4505 from hashicorp/f-channel-size,consul: Update buffer sizes
11100,Improve flaky connect/proxy Listener tests (#4498),Improve flaky connect/proxy Listener tests   Add sleep to TestEchoConn to allow for Read/Write to finish before fetching data in reportStats   Account for flakiness around interval for Gauge   Improve debug output when dumping metrics 
11101,consul: Update buffer sizes,
11102,Merge pull request #4485 from hashicorp/doc-remove-atlas,"Remove all mention of Atlas, even in deprecated changelogs"
11103,Merge pull request #4318 from hashicorp/doc-discovery-code-snippet,Improve styling of discovery snippet
11104,"Revert ""CA initialization while boostrapping and TestLeader_ChangeServerID fix."" (#4497)"," Revert ""BUGFIX: Unit test relying on WaitForLeader() did not work due to wrong test (#4472)""  This reverts commit cec5d7239621e0732b3f70158addb1899442acb3.  Revert ""CA initialization while boostrapping and TestLeader_ChangeServerID fix. (#4493)""  This reverts commit 589b589b53e56af38de25db9b56967bdf1f2c069."
11105,BUGFIX: Unit test relying on WaitForLeader() did not work due to wrong test (#4472),"  Improve resilience of testrpc.WaitForLeader()   Add additionall retry to CI   Increase ""go test"" timeout to 8m   Add wait for cluster leader to several tests in the agent package   Add retry to some tests in the api and command packages "
11106,CA initialization while boostrapping and TestLeader_ChangeServerID fix. (#4493),  connect: fix an issue with Consul CA bootstrapping being interrupted   streamline change server id test 
11107,"Remove all mention of Atlas, even in deprecated changelogs",
11108,Merge pull request #4484 from freddygv/travis-in-containers,Move travis build env back to containers
11109,Update Changelog,
11110,Clarification for serf_wan documentation (#4459), updates docs for agent options  trying to add a little more clarity to suggestion that folks should use port 8302 for both LAN and WAN comms  website: clarify language for serf wan port behavior
11111,Move travis build env back to containers,
11112,DNS : Fixes recursors answering the DNS query to properly return the correct response. (#4461),  Fixes the DNS recursor properly resolving the requests   Added a test case for the recursor bug   Refactored code && added a test case for all failing recursors   Inner indentation moved into else if check 
11113,Fixes memory leak when blocking on /event/list (#4482),
11114,Merge pull request #4464 from hashicorp/je.htmlfix,A couple more docs fixes
11115,Putting source back into Dev Mode,
11116,UI: Add conditional enterprise logo (#4432),Adds additional 'enterprise' text underneath the 'startup' logo if the ui is built with a CONSUL_BINARY_TYPE environment variable that doesn't equal oss.
11117,ui: Adds bottom breathing space on the bottom of forms (#4433),
11118,UI - Refactor Adapter.handleResponse (#4398),"  Add some tests to check the correct GET API endpoints are called   Refactor adapters   Add integration tests for urlFor... and majority handleResponse methods  Refactor out handleResponse a little more into single/batch/boolean methods Move setting of the Datacenter property into the handleResponse method, basically the same place that the uid is being set using the dc parsed form the URL Add some Errors for if you don't pass ids to certain urlFor methods"
11119,UI - Non-prod CSS sourcemaps (#4418),
11120,Release v1.2.2,
11121,Bump website version to 1.2.2,
11122,Update CHANGELOG.md,
11123,Update CHANGELOG.md,Update for fixing #4441
11124,Handle resolving proxy tokens when parsing HTTP requests (#4453),Fixes: #4441 This fixes the issue with Connect Managed Proxies + ACLs being broken. The underlying problem was that the token parsed for most http endpoints was sent untouched to the servers via the RPC request. These changes make it so that at the HTTP endpoint when parsing the token we additionally attempt to convert potential proxy tokens into regular tokens before sending to the RPC endpoint. Proxy tokens are only valid on the agent with the managed proxy so the resolution has to happen before it gets forwarded anywhere.
11125,Copy-and-paste Go client example (#4448)," Copy-and-paste Go client example  Includes Go source that runs without modification, as well as simple instructions for compiling, running, and viewing the output in the Consul UI.  Remove unnecessary flags from development server example  This is a bare minimum Go example needed to store keys and values in Consul. The -ui and -server flags aren't needed when running with -dev."
11126,a couple more corrections,
11127,ui: Changelog additions (#4458),
11128,fix a couple html errors (#4456),
11129,docs: Update links to ttl health check endpoints. (#4208),  docs: Update links to ttl health check endpoints.   remove absolute URLs 
11130,Update CHANGELOG.md,
11131,Gossip tuneables (#4444),Expose a few gossip tuneables for both lan and wan interfaces gossip_nodes gossip_interval probe_timeout probe_interval retransmit_mult suspicion_mult
11132,Merge pull request #4445 from hashicorp/bugfix/build-cross-compile,Fix cross compiling with make
11133,fix inconsistency in TestConnectCAConfig_GetSet,
11134,Update CHANGELOG.md,
11135,Update CHANGELOG.md,
11136,Document managed proxy logs (#4447),  Document proxy logs   Add extra note about terminating proxies 
11137,Add config option to disable HTTP printable char path check (#4442),
11138,Update CHANGELOG.md,
11139,Merge pull request #4400 from hashicorp/leaf-cert-ttl,Add configurable leaf cert TTL to Connect CA
11140,connect/ca: simplify passing of leaf cert TTL,
11141,Update CHANGELOG.md,
11142,Vendoring update for go-discover. (#4412),  New Providers added and updated vendoring for go-discover   Vendor.json formatted using make vendorfmt   Docs/Agent/auto-join: Added documentation for the new providers introduced in this PR   Updated the golang.org/x/sys/unix in the vendor directory   Agent: TestGoDiscoverRegistration updated to reflect the addition of new providers   Deleted terraform.tfstate from vendor.   Deleted terraform.tfstate.backup   Deleted terraform state file artifacts from unknown runs.  Updated x/sys/windows vendor for Windows binary compilation
11143,Added explainations on how having a working configuration for Prometheus (#4397)," Added explainations on how having a working configuration for Prometheus  Since Prometheus escapes by default query parameters, this paragraph explains how having format=prometheus to be taken into account by prometheus.  Rephrase Prometheus notes in documentation as requested by @pearkes"
11144,website: typo in node meta additional section  (#4429),
11145,Merge pull request #4446 from jharley/patch-1,Documentation: Add missing word for Watches clarification
11146,Add missing word for Watches clarification,"Watches use blocking queries monitor reads awkwardly, I figured 'to' was missing"
11147,Fixes #4421: General solution to stop blocking queries with index 0 (#4437),  Fix theoretical cache collision bug if/when we use more cache types with same result type   Generalized fix for blocking query handling when state store methods return zero index   Refactor test retry to only affect CI   Undo make file merge   Add hint to error message returned to end-user requests if Connect is not enabled when they try to request cert   Explicit error for Roots endpoint if connect is disabled   Fix tests that were asserting old behaviour 
11148,Fix cross compiling with make,make XC_OS=linux XC_ARCH=amd64 when running on macos puts its binaries in ${GOPATH}/bin/linux_amd64/consul and not ${GOPATH}/bin/consul This makes the build pull the binary from the right location.
11149,Allow config-file based Service Definitions for unmanaged proxies and Connect-natice apps. (#4443),
11150,Update CHANGELOG.md,
11151,Remove deprecated Ruby consul-client library (#4419),The GitHub repo for this library says that it is no longer maintained and should not be used. The Ruby Diplomat library provides similar functionality instead (and is already listed here).
11152,Merge pull request #4438 from hashicorp/bugfix/keyring-acl,ACL Bug Fixes
11153,Update CHANGELOG.md,
11154,Merge pull request #4314 from hashicorp/b-ignore-check,command/connect/proxy: ignore check doesn't exist on -register
11155,Ooops that was meant to be to a branch no master... EMORECOFFEE,"Revert ""Add config option to disable HTTP printable char path check"" This reverts commit eebe45a47b4df5c0271b17f0fd1bd85db8bdefca."
11156,Add config option to disable HTTP printable char path check,
11157,Rewrite all of acl_test.go,"This is now using table driven testing. In addition to conversion of old tests I also implemented several new tests for the acl fixes in my previous commit. In particular the issues I saw with ACLs for prepared queries, keyring and operator all have tests for those and comments indicating that they would have previously failed."
11158,Fix ACL enforcement,This creates one function that takes a rule and the required permissions and returns whether it should be allowed and whether to leave the decision to the parent acl. Then this function is used everywhere. This makes acl enforcement consistent. There were several places where a default allow policy with explicit deny rules wasnt being handled and several others where it wasn’t using the parent acl appropriately but would lump no policy in with a deny policy. All of that has been fixed.
11159,Refactor test retry to only affect CI (#4436),  Refactor test retry to only affect CI   Move test install deps out of the retry loop   Add internal targets to PHONY too 
11160,Update CHANGELOG.md,
11161,Merge pull request #4353 from azam/add-serf-lan-wan-port-args,"Make RPC, Serf LAN, Serf WAN port configurable from CLI"
11162,Adds Monitoring with Telegraf guide (#4227), Installing Telegraf Configuring Telegraf  Configuring Consul to send metrics to Telegraf Important metrics and aggregates
11163,Update CHANGELOG.md,
11164,connect/ca: check LeafCertTTL when rotating expired roots,
11165,Merge pull request #4427 from hashicorp/connect-api-docs,Add /health/connect to docs and make consistent with /catalog/connect
11166,Merge pull request #4320 from hashicorp/f-alias-check,"Add ""Alias"" Check Type"
11167,Make Serf LAN & WAN port configurable from CLI,"Make RPC port accessible to CLI Add tests and documentation for server-port, serf-lan-port, serf-wan-port CLI arguments"
11168,Add /health/connect to docs and make consistent with /catalog/connect,
11169,Update CHANGELOG.md,
11170,Merge pull request #4407 from hashicorp/proxy-persist,Persist proxies from config files
11171,readme: add note about security related issues (#4401), readme: add note about security related issues  This is a reminder to encourage responsible disclosure (vs. publicly on GitHub) for security-related issues.  readme: link to security page
11172,agent/local: silly spacing on select statements,
11173,agent/local: address remaining test feedback,
11174,Use the agent logger instead of log module,
11175,Update a couple erroneous tests.,
11176,agent/local: don't use time.After in test since notify is instant,
11177,Persist proxies from config files,"Also change how loadProxies works. Now it will load all persisted proxies into a map, then when loading config file proxies will look up the previous proxy token in that map."
11178,Merge pull request #4410 from hashicorp/bugfix/gh-4175-service-ip,UI - Bugfix: Show Service IP not the Node IP
11179,Merge pull request #4383 from hashicorp/feature/ui-tag-text-search,UI - Tag Text Search
11180,Use some for the tags search instead of munging and searching,
11181,ADd some extra tests to pick up on searching by two joined tags,
11182,Add basic searching by tags using the freetext search near-term,
11183,Acceptance test for searching service by tag,
11184,Merge pull request #4349 from hashicorp/feature/remove-rm-api-double,UI - Stop trying to remove consul-api-double we don't need to anymore
11185,Show the Service.IP address instead of the Node.IP address in detail,
11186,Make the tests break by switching to a Service.IP,
11187,Update CHANGELOG.md,
11188,Put the tree back in dev mode,
11189,Merge pull request #4403 from hashicorp/bugfix/choose-client-address,Fix issue with managed proxies and watches attempting to use a client addr that is 0.0.0.0 or ::
11190,Merge pull request #4352 from hashicorp/doc-dev-flag-generates-certs,Note that -dev generates certs for Connect.
11191,Clarify Connect-related implications for -dev flag,
11192,website: update docs for leaf cert TTL option,
11193,connect/ca: add configurable leaf cert TTL,
11194,Fix issue with choosing a client addr that is 0.0.0.0 or ::,
11195,Merge pull request #4392 from hashicorp/connect-sdk-http,Implement missing HTTP host to ConsulResolver func for Connect SDK.
11196,Merge pull request #4393 from MagnumOpus21/master,Docs: Removed text about proxies on Windows not starting up.
11197,Typos,
11198,Add notes about hostname gotchas to Connect HTTPClient docs,
11199,Docs: Removed text about proxies on Windows not starting up.,
11200,Implement missing HTTP host to ConsulResolver func for Connect SDK.,
11201,Merge pull request #4263 from hashicorp/kv-get-docs,Update kv docs detail for accuracy
11202,Merge pull request #4387 from hashicorp/feature/ui-service-ids,UI - Show/search by service ids
11203,Merge pull request #4373 from hashicorp/bugfix/gh-4324-kv-trailing-slashes,UI Bugfix - kv trailing slashes
11204,website: fix some website typos,
11205,website: document alias check,
11206,agent/checks: prevent overflow of backoff,
11207,Change let to var,
11208,agent: use the correct ACL token for alias checks,
11209,Update website version,
11210,agent: address some basic feedback,
11211,agent: alias checks have no interval,
11212,agent/structs: check is alias if node is empty,
11213,agent/checks: support node-only checks,
11214,agent/checks: set critical if RPC fails,
11215,agent/checks: use local state for local services,
11216,agent/local: support local alias checks,
11217,agent: run alias checks,
11218,agent/checks: reflect node failure as alias check failure,
11219,agent/config: support configuring alias check,
11220,agent/checks: add Alias check type,
11221,Release v1.2.1,
11222,Update CHANGELOG.md,
11223,Update CHANGELOG.md,
11224,Update CHANGELOG.md,
11225,Merge pull request #4364 from hashicorp/notice-file,Add copyright notice file
11226,Merge pull request #4379 from hashicorp/persist-intermediates,connect: persist intermediate CAs on leader change
11227,Merge pull request #4381 from hashicorp/proxy-check-default,Proxy check default
11228,Update CHANGELOG.md,
11229,Merge pull request #4388 from hashicorp/vendor-windows-svc,Vendor golang.org/x/sys/windows/svc
11230,Vendor golang.org/x/sys/windows/svc,
11231,Update CHANGELOG.md,
11232,Merge pull request #4386 from hashicorp/revert-3983-node_renaming,"Revert ""Allow changing Node names since Node now have IDs"""
11233,"Revert ""Allow changing Node names since Node now have IDs""",
11234,Merge pull request #4375 from pierresouchay/fix_travis_build_temp_errors,Avoid travis to fail with unstable tests
11235,Merge pull request #4384 from hashicorp/revert-4294,Revert PR 4294 - Catalog Register: Generate UUID for services registered without one
11236,Fixup formatting,
11237,Revert PR 4294 - Catalog Register: Generate UUID for services registered without one,UUID auto-generation here causes trouble in a few cases. The biggest being older nodes reregistering will fail when the UUIDs are different and the names match This reverts commit 0f700340828f464449c2e0d5a82db0bc5456d385. This reverts commit d1a8f9cb3f6f48dd9c8d0bc858031ff6ccff51d0. This reverts commit cf69ec42a418ab6594a6654e9545e12160f30970.
11238,Grammar,
11239,Update CHANGELOG.md,
11240,Merge pull request #4374 from hashicorp/feature/proxy-env-vars,Setup managed proxy environment with API client env vars
11241,Bump consul-api-double,
11242,"Show Service.ID's throughout the app, allow searching by Service.ID"," In the Services > Services detail page for both healthy and unhealthy nodes, also add searching by Service.ID here In the Nodes > Node detail > [Services] tab only if its different from the Service name, add searching by Service.ID here"
11243,Acceptance tests to search/look for service id's,
11244,Update proxy config docs and add test for ipv6,
11245,Default managed proxy TCP check address sanely when proxy is bound to 0.0.0.0.,This also provides a mechanism to configure custom address or disable the check entirely from managed proxy config.
11246,Set api.Config’s InsecureSkipVerify to the value of !RuntimeConfig.VerifyOutgoing,
11247,Add some tests for GenerateEnv,
11248,Use type switch instead of .Network for more reliably detecting UnixAddrs,
11249,Merge pull request #4347 from hashicorp/feature/ui-build-tweaks,Build - Tiny ui build additions
11250,Look specifically for tcp instead of unix,Add runtime -> api.Config tests
11251,Update proxy manager test - test passing ProxyEnv vars,
11252,connect: use reflect.DeepEqual instead for test,
11253,Update CHANGELOG.md,
11254,Merge pull request #3983 from pierresouchay/node_renaming,Allow changing Node names since Node now have IDs
11255,connect: add provider state to snapshots,
11256,connect: update leader initializeCA comment,
11257,connect: persist intermediate CAs on leader change,
11258,PR Updates,Proxy now doesn’t need to know anything about the api as we pass env vars to it instead of the api config.
11259,Update CHANGELOG.md,
11260,Merge pull request #4371 from hashicorp/bugfix/gh-4358,Remove https://prefix from TLSConfig.Address
11261,"When renaming a node, ensure the name is not taken by another node.","Since DNS is case insensitive and DB as issues when similar names with different cases are added, check for unicity based on case insensitivity. Following another big incident we had in our cluster, we also validate that adding/renaming a not does not conflicts with case insensitive matches. We had the following error once:  one node called: mymachine.MYDC.mydomain was shut off another node (different ID) was added with name: mymachine.mydc.mydomain before    72 hours  When restarting the consul server of domain, the consul server restarted failed to start since it detected an issue in RAFT database because mymachine.MYDC.mydomain and mymachine.mydc.mydomain had the same names. Checking at registration time with case insensitivity should definitly fix those issues and avoid Consul DB corruption."
11262,"Instead of rewriting the API call, use ember to rewrite the URL","We now essentially do 2 redirects if you hit a folder/  If you visit /ui/dc1/kv/folder/, consul will redirect you to /ui/dc1/kv/folder Once redirected to /ui/dc1/kv/folder via a 301, use ember/history API to redirect you back to /ui/dc1/kv/folder/.  Bit long winded, but achieves what we want without having to get stuck into consul itself to remove the 301 for the UI"
11263,Merge pull request #4348 from hashicorp/bugfix/last-healthcheck-icon,UI - CSS: don't assume the last item in the healthcheck listing is passing
11264,Tune GNUMakefile to pass more easily Travis tests,
11265,Avoid travis to fail with flacky tests,
11266,Merge pull request #4365 from pierresouchay/fix_test_warning,Fixed compilation warning about wrong type
11267,Pass around an API Config object and convert to env vars for the managed proxy,
11268,"Use %q, not %s as it used to",
11269,Update CHANGELOG.md,
11270,Merge pull request #4328 from hashicorp/bugfix/prevent-multi-c,Only allow 1 CNAME when querying for a service.
11271,Update CHANGELOG.md,
11272,Update CHANGELOG.md,
11273,Merge pull request #4346 from hamishforbes/lock_timeout,Fix lock and semaphore timeouts
11274,Merge remote-tracking branch 'origin/master' into bugfix/prevent-multi-cname,
11275,Update CHANGELOG.md,
11276,Merge pull request #4303 from pierresouchay/non_blocking_acl,Only send one single ACL cache refresh across network when TTL is over
11277,Update CHANGELOG.md,
11278,Merge pull request #4362 from hashicorp/bugfix/gh-4354,Ensure TXT RRs always end up in the Additional section except for ANY or TXT queries
11279,Merge pull request #4361 from lganzzzo/patch-1,C++ oatpp-consul integration added to Libraries & SDKs page
11280,Fixed message: testutil/server.go:317: missing ... in args forwarded to print-like function,
11281,Fixed compilation warning about wrong type,It fixes the following warnings: agent/config/builder.go:1201: Errorf format %q has arg s of wrong type string   agent/config/builder.go:1240: Errorf format %q has arg s of wrong type string
11282,Merge pull request #4038 from pierresouchay/ACL_additional_info,Track calls blocked by ACLs using metrics
11283,add copyright notice file,Fixes #1390
11284,Merge pull request #4363 from MagnumOpus21/master,Agent/Proxy : Fixes Windows's basic managed proxy support problem.
11285,Tests/Proxy : Changed function name to match the system being tested.,
11286,Resolved merge conflicts,
11287,Agent/Proxy: Formatting and test cases fix,
11288,Remove https://prefix from TLSConfig.Address,
11289,Ensure TXT RRs always end up in the Additional section except for ANY or TXT queries,This also changes where the enforcement of the enable_additional_node_meta_txt configuration gets applied. formatNodeRecord returns the main RRs and the meta/TXT RRs in separate slices. Its then up to the caller to add to the appropriate sections or not.
11290,Proxy/Tests: Added test cases to check env variables,
11291,Agent/Proxy : Properly passes env variables to child,
11292,Merge pull request #4325 from hashicorp/ca-pruning,connect/ca: add logic for pruning old stale RootCA entries
11293,If we are indexing or foldering then its going to be folder-like,...therefore add a trailing slash to the API call
11294,Add tests that break when you request a folder without a trailing slash,
11295,oatpp-consul integration added to Libraries & SDKs page,
11296,Merge pull request #4351 from hashicorp/doc-config-dir-reads-hcl-files,"Notes that both ""hcl"" and ""json"" files are loaded from the config-dir."
11297,Fix formatting issue in config docs.,The floating paragraph seems to need additional indentation to work correctly on the markdown parser middle man uses - GitHub got it right before in the preview but the website broke dumping the new config option inline.
11298,Added new ACL blocked Metrics to telemetry.html,
11299,Merge remote-tracking branch 'origin/master' into ACL_additional_info,
11300,Fixed indentation in test,
11301,Store the time CARoot is rotated out instead of when to prune,
11302,Note that -dev generates certs for Connect.,"Previous version of the documentation didn't mention this, which can lead to confusion when experimenting with Connect. Many other features of Consul work fine without -dev mode, but Connect needs certs in order to proxy, which must be done with this flag or by generating certs directly and passing them to Consul in configs."
11303,"Notes that both ""hcl"" and ""json"" files are loaded from the config-dir.","The previous version only mentioned ""json"" but the behavior was to read ""hcl"" files as well."
11304,Stop trying to remove consul-api-double we don't need to anymore,
11305,Don't assume the last item in the healthcheck listing is passing,
11306,Tiny ui build additions," Use ls -A to list dotfiles also, ready for tarring Don't copy ember's ./tmp if you have one"
11307,Merge pull request #4343 from hashicorp/bugfix/gh-4336-update-empty-kv,UI - Bugfix: Saving empty key/value pairs
11308,"Don't clone prev, there's no need",
11309,Merge pull request #4341 from hashicorp/feature/more-acceptance-tests,UI - More acceptance tests
11310,Fix a couple of typos in the comments,
11311,Fix lock and semaphore timeouts,
11312,Agent/Proxy : Properly passes env variables to child,
11313,Merge pull request #4335 from MagnumOpus21/Telemetry,Website/Docs/Telemetry : Adds more telemetry metrics for memberlist and raft.
11314,Tests and comments regarding the previous 2 commits,
11315,"Looking into atob functionality, consequence of Value: null","The Consul API can pass through Value: null which does not get cast to a string by ember-data. This snowballs into problems with atob which then tried to decode null. There are 2 problems here.  Value should never be null  I've added a removeNull function to shallowly loop though props and   remove properties that are null, for the moment this is only on   single KV JSON responses - therefore Value will never be null   which is the root of the problem   atob doesn't quite follow the window.atob API in that the window.atob API casts everything down to a string first, therefore it will try to decode null > 'null' > crazy unicode thing.  I've commented in a fix for this, but whilst this shouldn't be   causing anymore problems in our UI (now that Value is never null),   I'll uncomment it in another future release. Tests are already written   for it which more closely follow window.atob but skipped for now   (next commit)"
11316,Remove validation for presence of KV values,
11317,Add some more detail to the README pre-adding a CONTRIBUTING,
11318,Upgrade consul-api-double for session destroy,
11319,Basic acceptance testing for navigating via cancel buttons,
11320,Merge pull request #4337 from msvbhat/consul-connect-doc-trivial,Trivial spell correction in connect configuration doc
11321,Add some navigation testing for back buttons and create buttons,
11322,Acceptance test for using tokens from listing and detail pages,
11323,Trivial spell correction in connect configuration doc,Signed-off-by: M S Vishwanath Bhat msvbhat@gmail.com
11324,Move deleting to a top level feature,
11325,Start purifying page objects,
11326,Lock Session invalidation acceptance test,
11327,"Add some low hanging intention tests, basically add intentions to others"," There are various things tests that can just have intentions added into them, like filters and such like, add intentions to these Start thinking about being able to negate steps easily, which will lead on to a cleanup of the steps"
11328,Website/Docs/Telemetry : Errata,
11329,Website/Docs/Telemetry: Added more raft and memberlist items.,
11330,Merge pull request #4326 from hashicorp/feature/embedded-test-api,Move testing doubles to use data embedded in the HTML vs HTTP/fetch
11331,Merge pull request #4331 from hashicorp/feature/hedge-empty-node-ids,Hedge for when consul sends nodes with an empty ID
11332,Refactor to make this much less confusing,
11333,Merge pull request #4309 from MagnumOpus21/Telemetry,Website: Added more telemetry metrics for raft and memberlist.
11334,Website/Telemetry: Errata for snapshot.compact and reworded memberlist.health.score,
11335,Merge pull request #4334 from hashicorp/bugfix/gh-4304-mouse-paste,Use html5 oninput instead of onkeyup for native textual inputs
11336,Merge branch 'master' of github.com:hashicorp/consul into Telemetry,
11337,Use html5 oninput instead of onkeyup for native textual inputs,"This enables people to enter things using the mouse to paste for example, plus possible other things. As an aside it also answers my query regarding fillIn for testing, nothing needs to be actually typed anymore! Doh"
11338,Add a bunch of comments about preventing multi-cname,Hopefully this a bit clearer as to the reasoning
11339,Website: Added more telemetry details for raft and memberlist.,
11340,Remove the TODO latency measurement.,
11341,Ensure we catch empty ID's for single nodes also,I don't think this would have a large effect on the UI whichever but best to make sure
11342,Hedge for when consul sends nodes with an empty ID,
11343,Website: Added more telemetry metrics,
11344,Merge pull request #4322 from hashicorp/feature/unignore-startup-tests,"Reset <html class> after every test, back to its original static value"
11345,Merge pull request #4280 from hashicorp/bugfix/encode-all-svg-colors,Encode all the hexcodes
11346,Fix some edge cases and add some tests.,
11347,Only allow 1 CNAME when querying for a service.,This just makes sure that if multiple services are registered with unique service addresses that we don’t blast back multiple CNAMEs for the same service DNS name and keeps us within the DNS specs.
11348,Move testing doubles to use data embedded in the HTML vs HTTP/fetch,"Previously api-double usage in ember would require a bunch of fetch requests to pull in the 'api double', this had a number of disadvantages.   The doubles needed to be available via HTTP, which meant a short term solution of rsyncing the double files over to public in order to be served over HTTP. An alternative to that would have been figuring out how to serve something straight from node_modules, which would have been preferable.   ember/testem would not serve dot files (so anything starting with a ., like .config. To solve this via ember/testem would have involved digging in to understand how to enable the serving of dot files.   ember/testem automatically rewrote urls for non-existant files to folders, i.e. adding a slash for you, so /v1/connect/intentions would be rewritten to /v1/connect/intentions/. This is undesirable, and solving this via ember/testem would have involved digging deep to disable that.   Serving the files via HTTP has now changed. The double files are now embedded into the HTML has 'embedded templates' that can be found by using the url of the file and a simple querySelector. This of course only happens during testing and means I can fully control the 'serving' of the doubles now, so I can say goodbye to the need to move files around, worry about the need to serve dotfiles and the undesirable trailing slashes rewriting. Winner! Find the files and embedding them is done using a straightforward recursive-readdir-sync (the content-for functionality is a synchronous api) as oppose to getting stuck into broccoli."
11349,connect/ca: add logic for pruning old stale RootCA entries,
11350,Merge pull request #4315 from hashicorp/bugfix/fix-server-enterprise,Move starting enterprise functionality
11351,Merge pull request #4323 from hashicorp/bugfix/missed-merge-step,Tweak vocabulary to match new step vocab
11352,Merge pull request #4244 from MagnumOpus21/WinService,Added a new package service_os that can make Consul run as a service on Windows.
11353,Rule out quoting issue with Travis versioning,
11354,Tweak vocabulary to match new step vocab,
11355,Updated swith case to use same branch for async-cache and extend-cache,
11356,Merge pull request #4316 from hashicorp/docs-connect-native,website: make performance impact explicit for connect-native
11357,Trying to fix Travis tests,
11358,Improve doc for async-cache,
11359,Updated documentation and adding more test case for async-cache,
11360,Added async-cache with similar behaviour as extend-cache but asynchronously,
11361,Updated ACL guide,
11362,Only send one single ACL cache refresh across network when TTL is over,"It will allow the following:  when connectivity is limited (saturated linnks between DCs), only one    single request to refresh an ACL will be sent to ACL master DC instead    of statcking ACL refresh queries when extend-cache is used for ACL, do not wait for result, but refresh    the ACL asynchronously, so no delay is not impacting slave DC When extend-cache is not used, keep the existing blocking mechanism,    but only send a single refresh request.  This will fix https://github.com/hashicorp/consul/issues/3524"
11363,Merge pull request #4319 from achanda/fix-tests,Fix broken tests
11364,Change bind_port to an int,
11365,Merge pull request #4317 from hashicorp/doc-segmentation-ensures-spelling,"Fix ""ensures all data"" from original ""ensure all data"""
11366,Corrects formatting of JSON in snippet,"The original snippet did not put the JSON output on its own line, which made it look like it was part of the previous or next curl command. This patch formats and highlights the command and output to appear as they would in the terminal while also highlighting the multi-datacenter elements of the output."
11367,Improve styling of discovery snippet,Original discovery snippet had a curl command that mentioned multi-datacenter support. This removes part of the command that was incorrect. It adds styling for the dc2 section of the JSON output that highlights the part of the query that relates to multiple data centers.
11368,"Fix ""ensures all data"" from original ""ensure all data""","The original text was ""Using TLS...ensure all data in transit is encrypted."" It should be ""ensures all data..."" This patch fixes it."
11369,website: make performance impact explicit for connect-native,I was going to the public feedback on Connect-Native app integration and came across this thread. Added a few statements in the Connect-Native app integration page.
11370,Move starting enterprise functionality,
11371,Merge pull request #4310 from MagnumOpus21/IPDoc,Website : Errata in -bind option for the agent.
11372,Website: Errata in -bind option for the agent,
11373,command/connect/proxy: ignore check doesn't exist on -register,
11374,update CHANGELOG,
11375,Merge pull request #4308 from hashicorp/b-connect-services,agent/config: parse upstreams with multiple service definitions
11376,Changes made :,1. Website Changed some of the wordings and reorganized the content of the website. 2. Code: Removed sleep and exit lines from the code.
11377,agent/config: parse upstreams with multiple service definitions,
11378,Merge pull request #4286 from hashicorp/bugfix/ui-release-version,Post-release build updates
11379,website: an assortment of front-end updates (#4296),  website: add object-fit-image polyfill for ie compatibility   website: make entire carousel cards linkable   website: adjust hero background positioning   website: responsive updates to the home hero   website: update home hero js to work better with turbolinks   website: a few font weight adjustments   website: add an overlay to ui video 
11380,website: optimize images (#4290),
11381,Update CHANGELOG,
11382,Merge pull request #4297 from hashicorp/b-intention-500-2,"agent: 400 error on invalid UUID format, api handles errors properly"
11383,Merge pull request #4299 from roidelapluie/patch-1,docs: Fix JSON in service configuration
11384,Fix default make target to build everything,
11385,Update CHANGELOG.md,
11386,Merge pull request #4294 from hashicorp/bugfix/4249-gen-ext-node-id,Catalog Register: Generate UUID for services registered without one
11387,Move default uuid test into the consul package,
11388,go fmt changes,
11389,Fix JSON in service configuration,
11390,"agent: 400 error on invalid UUID format, api handles errors properly",
11391,Added guide for Windows Service,
11392,Merge pull request #4295 from HowieLee/patch-1,Fixed typo
11393,Fixed typo,
11394,Make sure to generate UUIDs when services are registered without one,This makes the behavior line up with the docs and expected behavior
11395,Merge branch 'master' of github.com:hashicorp/consul into WinService,
11396,Merge pull request #4287 from hashicorp/bugfix/4273-doc-formatting,Fix layout issue with discovery_max_stale
11397,Merge pull request #4288 from hashicorp/service-meta-docs,website: correct parameter for service meta on catalog register
11398,Merge pull request #4289 from hashicorp/cbeckhashicorp-patch-1,Clarify beta release/feature and spelling
11399,Merge pull request #4291 from hashicorp/b-connect-edits,website: update vs. istio page and clarify control plane & pluggable data layer
11400,website: update vs. istio page and clarify pluggable data layer,
11401,Clarify beta release/feature and spelling,Changed beta release to beta feature to clarify connect is beta feature and 1.2 is not beta release.
11402,website: correct paramater for service meta on catalog register,"I believe this may have been missed as part of #3994. Note that the API returns ServiceMeta, but accepts Meta. $ curl -X PUT -d \   '{     ""Datacenter"": ""dc1"",     ""Node"": ""example"",     ""Address"": ""www.example.com"",     ""Service"": {       ""Service"": ""example-service"",       ""Port"": 80,       ""Meta"": {""foo"": ""bar""}       }   }' \   http://localhost:8500/v1/catalog/register $ curl localhost:8500/v1/catalog/service/example-service [   {     ""ID"": """",     ""Node"": ""example"",     ""Address"": ""www.example.com"",     ""Datacenter"": ""dc1"",     ""TaggedAddresses"": null,     ""NodeMeta"": null,     ""ServiceKind"": """",     ""ServiceID"": ""example-service"",     ""ServiceName"": ""example-service"",     ""ServiceTags"": [],     ""ServiceAddress"": """",     ""ServiceMeta"": {       ""foo"": ""bar""     },     ""ServicePort"": 80,     ""ServiceEnableTagOverride"": false,     ""ServiceProxyDestination"": """",     ""ServiceConnect"": {       ""Native"": false,       ""Proxy"": null     },     ""CreateIndex"": 11,     ""ModifyIndex"": 37   } ]"
11403,Fix layout issue with discovery_max_stale,It was indented when it shouldn't have been.
11404,Merge pull request #4275 from hashicorp/je.fix-config-progress-bars,Configuration page animation fix
11405,Merge pull request #4285 from sandstrom/patch-1,Fix spelling
11406,Make sure to disable cgo for dev builds without gox,
11407,Default dev-build to not using GOX,
11408,Fix bug in makefile that prevented running the website publish.,
11409,Update verify.sh script,
11410,Added capability to make dev-tree without pushing,No push is the default
11411,Added release verification script,Also implemented shasum verification and gpg signature verification
11412,Putting source back into Dev Mode,
11413,Create a new ui_version function to pull it out of an index.html file,Also verify the ui version after it was built that it matches the env var we set in the build container.
11414,Merge remote-tracking branch 'origin/feature/ui-build-version-messages' into bugfix/ui-release-version,
11415,Make sure the release builds for the UI version to be consistent with the binary version.,
11416,spelling,
11417,Encode all the hexcodes,
11418,Adds version messages both before and after the ui-v2 build, Prints the $version that you are passing through to the docker container Prints the CONSUL_VERSION that is used in the UI v2 footer Additionally added a mkdir -p so so make ui-docker runs with a clean exit if run in isolation
11419,Update README.md,
11420,fix progress bar animation on configuration page,
11421,correct README,
11422,Remove empty file,
11423,Update Consul version for the website,
11424,Release v1.2.0,
11425,Merge remote-tracking branch 'connect/f-connect',
11426,website: fix an assortment of broken links,
11427,website: whitespace fix,
11428,website: minor example and copy fix for multi-dc,
11429,website: getting started next/previous step change,
11430,website: correct a few last things in CA docs,
11431,website: split out CA docs by provider type,
11432,website: add an example of TLS encryption,
11433,website - some visual updates including css bug fixes and image updates (#111),
11434,Small tweaks to video playback,
11435,Adds small polyfill for classlist because IE does not support it on SVG elements,
11436,website: fix scrolling/loading issue on iOS,
11437,tenenacy > tenancy,
11438,website - some js fixes to make sure scripts are firing (#108),
11439,website: fix two links on discovery page,
11440,Fix some doc typos.,
11441,website: update cli output content,
11442,website: add back intro link in header,
11443,website - animation updates,
11444,website - various styling bug fixes and updates,
11445,Fix some formatting and a typo.,
11446,Add proxy config reference and Complete TODOs in production guide,
11447,Fix relative links,
11448,Link from getting started; note on incremental adoption,
11449,Connect production guide draft 1,
11450,Initial draft of connect production guide,
11451,Add use case drop down to nav,
11452,Update CHANGELOG.md,
11453,fix up pearkes feedback,
11454,copy and doc links,
11455,homepage copy edits,
11456,add real screenshots to new website,
11457,website - remove video files and point to cdn,
11458,revert go changes to hide rotation config,
11459,connect/ca: hide the RotationPeriod config field since it isn't used yet,
11460,website: clarify windows support,
11461,website - separate js components so they're only called if needed,
11462,Change the appearance of * for intention listings, Use 'All Services ()' as opposed to '' Set 'Destination' in teh same bold font as 'Source' Ensure you can search for all services by using '' or 'All Services ()'
11463,agent: convert the proxy bind_port to int if it is a float,
11464,website - add homepage video hero,
11465,fix firefox bugs and a small issue with the segmentation challenge animation,
11466,mobile styling for homepage animations,
11467,add missing images/animations to homepage,
11468,segmentation page animations complete,
11469,discovery page animations working,
11470,timing adjustments,
11471,"second animation added, page styles in",
11472,first animation working :tada:,
11473,website - add case studies components with content,
11474,website - responsive styling for timeline component,
11475,"website - update logo-grid styles, add a bunch of logo assets",
11476,website - use-cases responsive styling,
11477,"website - some button sizing adjustments, hero and cta-section padding adjustments",
11478,"website - responsive heroes, hero bg bleed into header, header overrides",
11479,website - responsive styles for ul/li section,
11480,website - homepage cta section responsive styling,
11481,website - logo-grid responsive updates,
11482,website - add appropriately sized assets and adjust styles,
11483,website - a couple of text-asset component reponsive tweaks,
11484,website - responsive styling for section and text/asset components,
11485,"website - some button and section updates, add home hero start",
11486,website - add g-section li styles,
11487,website - add second button to hero,
11488,website - cta section and button updates,
11489,website - some section component refactoring and adding code samples,
11490,website - timeline component font-size adjustment,
11491,website - hero bg image update,
11492,initial commit for website upgrade,
11493,website: fix a TODO in a page description,
11494,website: note windows support,
11495,Remove build tags from vendored vault file to allow for this to merge properly into enterprise,
11496,Remove x509 name constraints,"These were only added as SPIFFE intends to use the in the future but currently does not mandate their usage due to patch support in common TLS implementations and some ambiguity over how to use them with URI SAN certificates. We included them because until now everything seem fine with it, however we've found the latest version of openssl (1.1.0h) fails to validate our certificats if its enabled. LibreSSL as installed on OS X by default doesn’t have these issues. For now it's most compatible not to have them and later we can find ways to add constraints with wider compatibility testing."
11497,Make sure we omit the Kind value in JSON if empty,
11498,Vendor the vault api,
11499,website: fix example config in vault CA docs,
11500,bump to beta4,
11501,website: add vs. Envoy page,
11502,website: address Armon's feedback,
11503,"website: remove redundant ""as well""",
11504,website: address pearkes feedback,
11505,website: address feedback,
11506,website: istio vs. and nomad platform guide,
11507,update UI to latest,
11508,connect/ca: pull the cluster ID from config during a rotation,
11509,connect/ca: use weak type decoding in the Vault config parsing,
11510,connect/ca: leave blank root key/cert out of the default config (unnecessary),
11511,website: add Vault CA provider doc sections,
11512,connect/ca: undo the interface changes and use sign-self-issued in Vault,
11513,connect/ca: add leaf verify check to cross-signing tests,
11514,connect/ca: update Consul provider to use new cross-sign CSR method,
11515,connect/ca: update Vault provider to add cross-signing methods,
11516,connect/ca: add URI SAN support to the Vault provider,
11517,connect/ca: fix vault provider URI SANs and test,
11518,connect/ca: add the Vault CA provider,
11519,Sign certificates valid from 1 minute earlier to avoid failures caused by clock drift,
11520,Note leadership issues in comments,
11521,Fix test broken by final telemetry PR change!,
11522,Actually return Intermediate certificates bundled with a leaf!,
11523,Check for NOT connect-proxy,
11524,Filter Source and Destination menus by Kind,
11525,Output the service Kind in the /v1/internal/ui/services endpoint,
11526,Fix merge error,
11527,register TCP check for managed proxies,
11528,Make proxy only listen after initial certs are fetched,
11529,"Fix linting typo, caused the selection of future services to break",
11530,Add proxy telemetry to docs,
11531,Limit proxy telemetry config to only be visible with authenticated with a proxy token,
11532,Misc test fixes,
11533,Refactor to use embedded struct.,
11534,Remove go-diff vendor as assert.JSONEq output is way better for our case,
11535,Revert telemetry config changes ready for cleaner approach,
11536,StartupTelemetry => InitTelemetry,
11537,Allow user override of proxy telemetry config,
11538,Misc rebase and test fixes,
11539,Basic proxy active conns and bandwidth telemetry,
11540,Add accessor and helpers to SDK for fetching self-name and client service ID,
11541,Basic proxy telemetry working; not sure if it's too  ugly; need to instrument things we care about,
11542,WIP,
11543,Expose telemetry config from RuntimeConfig to proxy config endpoint,
11544,Disable TestAgent proxy execution properly,
11545,Fix hot loop in cache for RPC returning zero index.,
11546,Get agent cache tests passing without global hit count (which is racy).,Few other fixes in here just to get a clean run locally - they are all also fixed in other PRs but shouldn't conflict. This should be robust to timing between goroutines now.
11547,website: clarify that modifying intentions will not kill the conn,
11548,website: clearly note beta for Connect,
11549,Move intentions menu item to after ACLs,
11550,Update UI for beta3,
11551,version: set the right version to beta3,
11552,Formatting change keeps coming up running make,
11553,Lint,
11554,Icons in the filter bar,
11555,"Validate all the things, all the time",
11556,More detailed error messages for duplicate intentions,
11557,Only offer to create a future service if the name doesn't already exist,
11558,Make sure future services are available when editing intentions,
11559,Add support for specifying future services and wildcards,
11560,Tie up real endpoints,
11561,Switch to single selects rather than inputs,
11562,Have a look at power select for select elements,
11563,Add intentions actions mixin,
11564,Remove SourceType for the moment,
11565,Include logger for generated tests,
11566,WIP: First draft intentions," Listing, filtering by action and searching by source name and destination name Edit/Create page, edits ping the API double fine, need to work through creates and deletes Currently uses a Precedence intention keyname that doesn't yet exist in the real API"
11567,WIP: Logger,
11568,agent/cache: always schedule the refresh,
11569,agent: clarify comment,
11570,agent: add additional assertion to test,
11571,website: Fix getting started connect dependent service example," Needs a port The upstream service is socat in the previous example, make   the dependent service section use socat consistently throughout"
11572,website: Fix link in connect intentions doc,
11573,website: Typo fix in connect intentions doc,
11574,More test tweaks,
11575,Fix misc test failures (some from other PRs),
11576,Only set precedence on write path,
11577,Fix some tests failures caused by the sorting change and some cuased by previous UpdatePrecedence() change,
11578,Sort intention list by precedence,
11579,agent: intention update/delete responess match ACL/KV behavior,
11580,agent/structs: JSON marshal the configuration for a managed proxy,
11581,agent: disallow deregistering a managed proxy directly,
11582,agent: deregister service deregisters the proxy along with it,
11583,agent: RemoveProxy also removes the proxy service,
11584,Fix broken tests from PR merge related to proxy secure defaults,
11585,agent/cache: always fetch with minimum index of 1 at least,
11586,website: fix spacing issue,
11587,website: fix proxies to work via copy/paste,
11588,agent/proxy: remove debug println,
11589,website: document proxy security settings,
11590,agent: disallow API registration with managed proxy if not enabled,
11591,agent/config: AllowManagedAPIRegistration,
11592,agent/proxy: AllowRoot to disable executing managed proxies when root,
11593,agent/proxy: set the proper arguments so we only run the helper process,
11594,agent/config: add AllowManagedRoot,
11595,connect: fix two CA tests that were broken in a previous PR (#60),
11596,Return defensive error if API response is jank,
11597,Refactor resolver logic to be clearer,
11598,Fix roots race with CA setup hammering bug and defensive nil check hit during obscure upgrade scenario,
11599,website: example typo,
11600,website: clarify custom proxy integration and custom managed proxies,
11601,"Fix ""fail open"" wording","""fail open"" implies that we just allow anything if an agent gets partitioned which is not the right meaning!"
11602,docs: add Connect CA overview,
11603,docs: add agent config options for connect/CA,
11604,agent: format all CA config fields,
11605,agent: update accepted CA config fields and defaults,
11606,agent/proxy: fix build on Windows,
11607,website: update security model,
11608,"website: clarify namespaces, conflict",
11609,More misc comment cleanup,
11610,Misc comment cleanups,
11611,Warn about killing proxies in dev mode,
11612,api: update intention struct for precedence,
11613,website: clarify tiebreaker behavior,
11614,website: document the precedence table,
11615,agent/consul: set precedence value on struct itself,
11616,"website: document multi-DC, caching, clarify prepared queries and",multi-DC
11617,website: fix typo,
11618,"agent/config: move ports to ports structure, update docs",
11619,Fix unreachable code warning from go vet,
11620,Fixs a few issues that stopped this working in real life but not caught by tests:, Dev mode assumed no persistence of services although proxy state is persisted which caused proxies to be killed on startup as their services were no longer registered. Fixed. Didn't snapshot the ProxyID which meant that proxies were adopted OK from snapshot but failed to restart if they died since there was no proxyID in the ENV on restart Dev mode with no persistence just kills all proxies on shutdown since it can't recover them later Naming things
11621,api: change Connect to a query option,
11622,connect: remove old unused code,
11623,website: address feedback,
11624,Don't kill proxies on agent shutdown; backport manager close fix,
11625,Test for adopted process Stop race and fix,
11626,website: Go native integration with Connect,
11627,website: connect native overview,
11628,command/connect/proxy: can specify prepared query upstream types,
11629,connect: support prepared query resolution,
11630,connect: resolver works with native services,
11631,website: clarify where constraints go,
11632,api: support ExecuteConnect,
11633,agent: accept connect param for execute,
11634,agent/consul: support a Connect option on prepared query request,
11635,"agent/consul: prepared query supports ""Connect"" field",
11636,agent: intention create returns 500 for bad body,
11637,api: support native connect,
11638,agent: switch ConnectNative to an embedded struct,
11639,website: add docs for connect native services API,
11640,Make tests pass and clean proxy persistence. No detached child changes yet.,This is a good state for persistence stuff to re-start the detached child work that got mixed up last time.
11641,Abandon daemonize for simpler solution (preserving history):,Reverts:   - bdb274852ae469c89092d6050697c0ff97178465   - 2c689179c4f61c11f0016214c0fc127a0b813bfe   - d62e25c4a7ab753914b6baccd66f88ffd10949a3   - c727ffbcc98e3e0bf41e1a7bdd40169bd2d22191   - 31b4d18933fd0acbe157e28d03ad59c2abf9a1fb   - 85c3f8df3eabc00f490cd392213c3b928a85aa44
11642,WIP,
11643,Sanity check that we are never trying to self-exec a test binary. Add daemonize bypass for TestAgent so that we don't have to jump through ridiculous self-execution hooks for every package that might possibly invoke a managed proxy,
11644,agent/proxy: Manager.Close also has to stop all proxy watchers,
11645,Fix import tooling fail,
11646,Make daemoinze an option on test binary without hacks. Misc fixes for racey or broken tests. Still failing on several though.,
11647,Run daemon processes as a detached child.,This turns out to have a lot more subtelty than we accounted for. The test suite is especially prone to races now we can only poll the child and many extra levels of indirectoin are needed to correctly run daemon process without it becoming a Zombie. I ran this test suite in a loop with parallel enabled to verify for races (-race doesn't find any as they are logical inter-process ones not actual data races). I made it through ~50 runs before hitting an error due to timing which is much better than before. I want to go back and see if we can do better though. Just getting this up.
11648,Persist proxy state through agent restart,
11649,agent/consul/state: support querying by Connect native,
11650,agent/cache: update comment from PR review to clarify,
11651,agent: agent service registration supports Connect native services,
11652,agent/consul: support catalog registration with Connect native,
11653,agent/cache: update comments,
11654,agent/cache: correct test name,
11655,agent/cache: change behavior to return error rather than retry,"The cache behavior should not be to mask errors and retry. Instead, it should aim to return errors as quickly as possible. We do that here."
11656,agent/cache: perform backoffs on error retries on blocking queries,
11657,website: remove sergmentation from sidebar,"we'll move east-west to a ""use case"" section, didnt' feel right in the reference docs."
11658,website: how it works,
11659,Starting Docs (#46),"  website: first stab at Connect docs   website: lots more various stuff (bad commit messages)   website: getting started page for Connect   website: intentions   website: intention APIs   website: agent API docs   website: document agent/catalog proxy kind service values   website: /v1/catalog/connect/:service   website: intention CLI docs   website: custom proxy docs   website: remove dedicated getting started guide   website: add docs for CA API endpoints   website: add docs for connect ca commands   website: add proxy CLI docs   website: clean up proxy command, add dev docs   website: todo pages   website: connect security "
11660,Merge pull request #4264 from hashicorp/api-warning-compat,website: remove backwards compat warning
11661,Merge pull request #4272 from hashicorp/bugfix/fix-ui-build,Add a npm configuration
11662,Add a npm configuration,This is only necessary when dockerd is running on ubuntu and I dont know why it matters.
11663,Merge pull request #4271 from hashicorp/build-system-linux-compat,Build system linux compat
11664,sed extended regex on linux sometimes requires -r,
11665,Try a different way of doing x-platform in place sed,
11666,"Reset <html class> after every test, back to its original static value",
11667,Merge pull request #4268 from hashicorp/bugfix/sed-in-place,Fix sed on linux
11668,Fix sed on linux,
11669,Merge pull request #4267 from hashicorp/feature/remove-v1-banner,Remove upgrade banner html from v1 ui
11670,Remove upgrade banner html from v1 ui,
11671,Merge pull request #4266 from hashicorp/bugfix/first-datacenter-services-500,Make sure the dc menu is as useful as possible when things go wrong
11672,Make sure the dc menu is as useful as possible when things go wrong, Check the dc's model for both dcs list and the requested dc. If the dc model doesn't exist use and empty array for dcs and a fake dc with the Name 'Error' as we can't even trust what is in the paramsFor
11673,Merge pull request #4252 from hashicorp/feature/ui-node-ports-for-service,Add port the service is running on for each node in the service view
11674,Merge branch 'master' into feature/ui-node-ports-for-service,
11675,Merge pull request #4251 from hashicorp/bugfix/ui-null-tokens,Ensure a blank/empty token is sent if the localStorage kv doesn't exist
11676,Merge pull request #4253 from hashicorp/feature/ui-clearer-tags,UI - Clearer tags
11677,Merge pull request #4226 from petems/monitoring_doc,Adds Monitoring Guide
11678,Adds extra thresholds and aggregates to Telemetry, Thresholds and aggregates of metrics for monitoring in Consul
11679,Merge pull request #4259 from hashicorp/feature/failing-ttl-test,[BUGFIX] UI - Make sure lock session TTLs are shown
11680,Merge pull request #4261 from hashicorp/feature/dc-redirect,UI - Add a beforeModel hook at dc/index to auto transition to services
11681,website: remove backwards compat warning,"In practice, we strive for compatibility given the usage of the API in the wild, and don't need to make this warning as we once felt we should."
11682,Update kv docs detail for accuracy,
11683,Add a beforeModel hook at dc/index to auto transition to services,
11684,Merge remote-tracking branch 'shilov/master' into feature/failing-ttl-test,
11685,"Fix up following rebase, use array of strings rather than its own func",
11686,Add a failing test to show that lock session TTL's are not shown,
11687,Merge pull request #4245 from hashicorp/release-build-updates,Release build updates
11688,Add override capability to blacklist a remote,
11689,Allow showing git diff interactively to inspect release commits.,
11690,Dont duplicate release versions in prereleases,
11691,Added more validation during publishing,"We verify the git remote/url with whoever is running (in addition to other automated checks) We also now run consul agent -dev, check is first 25 lines of output, consul info output and that consul leave works."
11692,Graceful exits added,
11693,Merge pull request #4150 from hashicorp/topfunky-patch-1,Minor clarification of server nodes
11694,Merge pull request #4177 from jun06t/demo-udp,demo: Added udp port forwarding for DNS
11695,Add missing scss file,
11696,Make sure the updated tag view doesn't break the tests,
11697,Use the pill styling elsewhere...,TODO: Probably change the %tag to %pill now I've remembered the word I was looking for!
11698,Make sure token is set to blank if nothing is typed in settings,
11699,Update CHANGELOG.md,
11700,Merge pull request #4234 from hashicorp/feature/default-new-ui,Switch over to defaulting to the new UI
11701,Update CHANGELOG.md,
11702,Merge pull request #4216 from hashicorp/rpc-limiting,Make RPC limits reloadable
11703,Add a reusable %tag and use it for the ACL 'tags' ready to use elsewhere,
11704,Update CHANGELOG.md,
11705,Merge pull request #4215 from hashicorp/feature/config-node-meta-dns-txt,Add configuration entry to control including TXT records for node meta in DNS responses
11706,Make sure the colon doesn't wrap with lots of tags,
11707,Add port the service is running on for each node in the service view,
11708,Ensure a blank token is sent if the localStorage kv doesn't exist,
11709,Merge pull request #4247 from hashicorp/feature/acl-sort-by-name,UI - Sort ACL tokens by name
11710,Merge pull request #4242 from hashicorp/feature/ui-code-editor-autosizing,"Sets code editor height to be automatic (growable), with a reasonable min height"
11711,Merge pull request #4241 from hashicorp/bugfix/gh-4203-multi-tags,[BUGFIX] Ensure all tags for a service are listed on the service detail page
11712,Merge branch 'master' into bugfix/gh-4203-multi-tags,
11713,Merge pull request #4228 from hashicorp/feature/minor-css-amends,UI - minor css amends
11714,Update the runtime tests,
11715,Update ui-v2 makefile to handle updating node_modules when needed,Also dont include the dist and node_modules folders in the build context.
11716,PR Updates,
11717,Fix a couple find warnings on linux,Additionally add the ability to use go install for dev builds rather than gox (travis doesn’t have gox)
11718,Make filtering out TXT RRs only apply when they would end up in Additional section,ANY queries are no longer affected.
11719,Sort ACL tokens by name,
11720,Make sure the body background is white,
11721,Allow for building pre-releases/rcs/betas,
11722,update encryption doc and add guide for creating certificates (#4238),  update encryption doc and add guide for creating certificates in consul with cfssl   add details about CLI and disabling HTTP   delete $ symbols and add guide elements   add missing periods and steps heading 
11723,Merge branch 'master' of github.com:hashicorp/consul into WinService,
11724,Added Side Effect import for Windows Service,
11725,Quote $@ when passing around,
11726,Added Hook for Windows Service,
11727,Sessions TTL should be of type string in ui-v2,
11728,Quote some make vars,
11729,"Sets code editor height to be auto, with a reasonable min height",
11730,Merge pull request #4235 from hashicorp/bugfix/move-rsync-to-test,Move the rsync dependency to the test scripts
11731,"Fix gpg_key usage, also make the location of the binary to check the version of overridable",
11732,Don’t automatically populate release with dev when not generating a version based off git vars,
11733,Set the binary type,
11734,Pass the right var to git_push_ref,
11735,Return early when git changes are denied,
11736,Fixup version release detection,
11737,Refactor a little to accomodate overriding packaging using directories,
11738,Ensure all tags for a service are listed on the service detail page,
11739,Use CONSUL_PKG_NAME in package_release,
11740,Fix a bug in parse_version that prevented using auxillary version files,
11741,Only remove builds with the same suffix,
11742,Add notion of a consul pkg name to coexist with enterprise,
11743,Make sure to commit all version*.go files,
11744,Update the name of a function source,
11745,Dont override set but null vars,
11746,Make some room for overrides of build system functions,
11747,Generalize git pushing in a bash function,
11748,Add rsync so the ui can build again,Also add back the init target to the ui-v2 makefile
11749,Merge remote-tracking branch 'origin/master' into release-build-updates,Conflicts: scripts/consul-builder/Dockerfile ui-v2/GNUmakefile
11750,Merge pull request #4233 from fossas/master,Fix invalid vendor.json syntax for go-discover
11751,Move the rsync dependency to the test scripts for now.," You only need the fixtures for testing, don't force rsync on people for just building Eventually this will go and be replaced by something broccoli-y"
11752,Switch over to defaulting to the new UI,
11753,Find a way to test pre-ember load," Also add index.html things to test/index.html Use content-for to hedge against keeping content in sync (requires an addon) Test passes but only when run on its own, as we need to rely on content in the QUnit runner, theoretically it is not running our test in isolation. Skipping the test for the moment so we don't have a filaing test when all run together"
11754,Add capability to put tree back into dev mode via make dev-tree,
11755,Fix invalid vendor.json syntax for go-discover,
11756,Update the scripting,Automated putting the source tree into release mode.
11757,Merge pull request #4229 from hashicorp/mitchellh/builder-rsync,Add rsync to consul-builder
11758,Add rsync to consul-builder,"The V2 UI build now requires rsync to be installed as part of its build process. Without this, make ui will fail today."
11759,Re-use uint8ToString,
11760,Clarify CA commands' help text,
11761,Add CA CLI commands for getting/setting config,
11762,Add client api support for CA config endpoints,
11763,Support giving the duration as a string in CA config,
11764,command/connect/proxy: register monitor tests,
11765,connect/proxy: remove dev CA settings,
11766,address comment feedback,
11767,command/connect/proxy: register monitor and -register flag,
11768,command/connect/proxy: output information when starting similar to agent,
11769,command/connect/proxy: detailed help,
11770,command/connect/proxy: -service-addr required for -listen,
11771,command/connect/proxy: can set public listener from flags,
11772,command/connect/proxy: tests for configuration,
11773,"connect/proxy: add a full proxy test, parallel",
11774,connect/proxy: don't start public listener if 0 port,
11775,command/connect/proxy: accept -service and -upstream,
11776,connect/proxy: use the right variable for loading the new service,
11777,connect/proxy: don't require proxy ID,
11778,"agent: leaf endpoint accepts name, not service ID",This change is important so that requests can made representing a service that may not be registered with the same local agent.
11779,command/intention: address comment feedback,
11780,agent: address feedback,
11781,command/intention/create: -replace does an atomic change,
11782,api: IntentionUpdate API,
11783,command/intention/match,
11784,command/intention/delete: tests,
11785,command/intention/check: check tests,
11786,command/intention/get: tests,
11787,command/intention/match,
11788,command/intentions/check,
11789,"command/intention/create: -replace flag, jank, we should change to PUT",
11790,command/intentions/delete,
11791,api: IntentionDelete + tests,
11792,command/intention/get: the get command without tests,
11793,command/intention/finder: package for finding based on src/dst,
11794,command/intention/create,
11795,api: IntentionCheck,
11796,agent: rename test to check,
11797,agent: implement HTTP endpoint,
11798,agent/consul: forward request if necessary,
11799,agent: comments to point to differing logic,
11800,agent/consul: implement Intention.Test endpoint,
11801,Make invalid clusterID be fatal,
11802,Make Service logger log to right place again,
11803,Make connect client resolver resolve trust domain properly,
11804,Fix logical conflicts with CA refactor,
11805,Fix broken api test for service Meta (logical conflict rom OSS). Add test that would make this much easier to catch in future.,
11806,Add default CA config back - I didn't add it and causes nil panics,
11807,Ooops remove the CA stuff from actual server defaults and make it test server only,
11808,More test cleanup,
11809,Fixed many tests after rebase. Some still failing and seem unrelated to any connect changes.,
11810,Comment cleanup,
11811,Verify trust domain on /authorize calls,
11812,Generate CSR using real trust-domain,
11813,"Add CSR signing verification of service ACL, trust domain and datacenter.",
11814,Return TrustDomain from CARoots RPC,
11815,Rename some of the CA structs/files,
11816,Add more metadata to structs.CARoot,
11817,Use provider state table for a global serial index,
11818,Add test for ca config http endpoint,
11819,Move connect CA provider to separate package,
11820,agent/cache: change uint8 to uint,
11821,agent/cache: string through attempt rather than storing on the entry,
11822,agent/cache: implement refresh backoff,
11823,agent/consul: change provider wait from goto to a loop,
11824,agent/consul: check nil on getCAProvider result,
11825,agent/consul: retry reading provider a few times,
11826,agent: verify local proxy tokens for CA leaf + tests,
11827,agent: verify proxy token for ProxyConfig endpoint + tests,
11828,command/connect/proxy: set ACL token based on proxy token flag,
11829,command/connect/proxy: set proxy ID from env var if set,
11830,agent/proxy: pass proxy ID as an env var,
11831,agent/config: add managed proxy upstreams config to skip,"agent/config will turn [{}] into {} (single element maps into a single map) to work around HCL issues. These are resolved in HCL2 which I'm sure Consul will switch to eventually. This breaks the connect proxy configuration in service definition FILES since we call this patch function. For now, let's just special-case skip this. In the future we maybe Consul will adopt HCL2 and fix it, or we can do something else if we want. This works and is tested."
11832,Add missing vendor dep github.com/stretchr/objx,
11833,"agent/structs: validate service definitions, port required for proxy",
11834,agent/config: default connect enabled in dev mode,This enables consul agent -dev to begin using Connect features with the built-in CA. I think this is expected behavior since you can imagine that new users would want to try. There is no real downside since we're just using the built-in CA.
11835,Make CSR work with jank domain,
11836,agent/proxy: delete pid file on Stop,
11837,agent: increase timer for blocking cache endpoints,
11838,agent/proxy: address PR feedback,
11839,agent: clarify why we Kill still,
11840,lib/file: add tests for WriteAtomic,
11841,agent: restore proxy snapshot but still Kill proxies,
11842,agent/proxy: check if process is alive in addition to Wait,
11843,agent: only set the proxy manager data dir if its set,
11844,agent/proxy: improve comments on snapshotting,
11845,agent/proxy: implement periodic snapshotting in the manager,
11846,agent/proxy: check if process is alive,
11847,agent/proxy: implement snapshotting for daemons,
11848,agent/proxy: manager configures the daemon pid path to write pids,
11849,agent/proxy: write pid file whenever the daemon process changes,
11850,agent/proxy: change LogDir to DataDir to reuse for other things,
11851,agent/proxy: make the logs test a bit more robust by waiting for file,
11852,agent/proxy: don't create the directory in newProxy,
11853,agent/proxy: send logs to the correct location for daemon proxies,
11854,agent: add additional tests for defaulting in AddProxy,
11855,agent: clean up defaulting of proxy configuration,This cleans up and unifies how proxy settings defaults are applied.
11856,Remove temporary hacks from Makefile,
11857,agent: resolve some conflicts and fix tests,
11858,agent/local: clarify the non-risk of a full buffer,
11859,agent/local: remove outdated comment,
11860,agent: use os.Executable,
11861,agent/proxy: local state event coalescing,
11862,agent/proxy: implement force kill of unresponsive proxy process,
11863,agent: fix crash that could happen if proxy was nil on load,
11864,agent/proxy: pull exit status extraction to constrained file,
11865,agent: start proxy manager,
11866,agent/proxy: detect config change to stop/start proxies,
11867,agent/proxy: test removing proxies and stopping them,
11868,"agent/proxy: manager and basic tests, not great coverage yet coming soon",
11869,agent/local: add Notify mechanism for proxy changes,
11870,agent: start/stop proxies,
11871,"agent/proxy: clean up usage, can't be restarted",
11872,"agent: change connect command paths to be slices, not strings",This matches other executable configuration and allows us to cleanly separate executable from arguments without trying to emulate shell parsing.
11873,"agent/local: store proxy on local state, wip, not working yet",
11874,agent/proxy: exponential backoff on restarts,
11875,"agent/proxy: Daemon works, tests cover it too",
11876,wip,
11877,TLS watching integrated into Service with some basic tests.,There are also a lot of small bug fixes found when testing lots of things end-to-end for the first time and some cleanup now it's integrated with real CA code.
11878,Wire up agent leaf endpoint to cache framework to support blocking.,
11879,Fix build error introduced in bad merge of TLS stuff,
11880,Add TODO for false-sharing,
11881,Add support for measuring tx/rx packets through proxied connections.,
11882,Fill out connect CA rpc endpoint tests,
11883,Fix config tests,
11884,Add tests for the built in CA's state store table,
11885,Add more tests for built-in provider,
11886,Fix some inconsistencies around the CA provider code,
11887,Don't allow connect watches in agent/cli yet,
11888,Fix tests and listeners to work with Config changes (splitting host and port fields),
11889,Support legacy watch.HandlerFunc type for backward compat reduces impact of change,
11890,Working proxy config reload tests,
11891,Basic watch support for connect proxy config and certificate endpoints., Includes some bug fixes for previous api work and agent that weren't tested Needed somewhat pervasive changes to support hash based blocking - some TODOs left in our watch toolchain that will explicitly fail on hash-based watches. Integration into connect is partially done here but still WIP
11892,Refactor reloadableTLSConfig and verifyier shenanigans into simpler dynamicTLSConfig,
11893,Connect verification and AuthZ,
11894,Add CA config to connect section of agent config,
11895,Move ConsulCAProviderConfig into structs package,
11896,Simplify the CAProvider.Sign method,
11897,Simplify the CA provider interface by moving some logic out,
11898,Clarify some comments and names around CA bootstrapping,
11899,Fix racy connect network tests that always fail in Docker due to listen races,
11900,"agent: resolve flaky test by checking cache hits increase, rather than",exact
11901,agent: use helper/retry instead of timing related tests,
11902,"agent/cache: address PR feedback, lots of typos",
11903,"agent/cache: address feedback, clarify comments",
11904,agent/cache: don't every block on NotifyCh,
11905,"agent/cache: unit tests for ExpiryHeap, found a bug!",
11906,agent/cache: send the total entries count on eviction to go-metrics,
11907,agent/cache: make edge case with prev/next idx == 0 handled better,
11908,agent/cache: rework how expiry data is stored to be more efficient,
11909,agent/cache: initial TTL work,
11910,agent/cache: send the RefreshTimeout into the backend fetch,
11911,"agent/cache: on error, return from Get immediately, don't block forever",
11912,Add Makefile hack for tests to run,
11913,agent/cache: lots of comment/doc updates,
11914,agent: augment /v1/connect/authorize to cache intentions,
11915,agent/cache-types: support intention match queries,
11916,agent/cache: return the error as part of Get,
11917,agent/cache: integrate go-metrics so the cache is debuggable,
11918,agent/structs: DCSpecificRequest sets all the proper fields for,CacheInfo
11919,"agent/cache-types/ca-leaf: proper result for timeout, race on setting CA",
11920,agent/cache: support timeouts for cache reads and empty fetch results,
11921,agent/cache-types: rename to separate root and leaf cache types,
11922,"agent/cache-types: got basic CA leaf caching work, major problems still",
11923,"agent: check cache hit count to verify CA root caching, background update",
11924,agent: initialize the cache and cache the CA roots,
11925,agent/cache: partition by DC/ACL token,
11926,"agent/cache: Reorganize some files, RequestInfo struct, prepare for partitioning",
11927,agent/cache: ConnectCA roots caching type,
11928,agent/cache: blank cache key means to always fetch,
11929,agent/cache: initial kind-of working cache,
11930,Add cross-signing mechanism to root rotation,
11931,Add the root rotation mechanism to the CA config endpoint,
11932,Have the built in CA store its state in raft,
11933,Fix the testing endpoint's root set op,
11934,Update the CA config endpoint to enable GETs,
11935,Hook the CA RPC endpoint into the provider interface,
11936,Add CA bootstrapping on establishing leadership,
11937,Add the bootstrap config for the CA,
11938,Add the CA provider interface and built-in provider,
11939,Add CA config set to fsm operations,
11940,Add the Connect CA config to the state store,
11941,"Adds api client code and tests for new Proxy Config endpoint, registering with proxy and seeing proxy config in /agent/services list.",
11942,Make test output more useful now we uses testify with multi-line error messages,
11943,Fix various test failures and vet warnings.,Intention de-duplication in previously merged PR actualy failed some tests that were not caught be me or CI. I ran the test files for state changes but they happened not to trigger this case so I made sure they did first and then fixed. That fixed some upstream intention endpoint tests that I'd not run as part of testing the previous fix.
11944,Refactor localBlockingQuery to use memdb.WatchSet. Much simpler and correct as a bonus!,
11945,Super ugly hack to get TeamCity build to work for this PR without adding a vendor that is being added elsewhere and will conflict...,
11946,Add X-Consul-ContentHash header; implement removing all proxies; add load/unload test.,
11947,Agent Connect Proxy config endpoint with hash-based blocking,
11948,HTTP agent registration allows proxy to be defined.,
11949,Added connect proxy config and local agent state setup on boot.,
11950,Add tests all the way up through the endpoints to ensure duplicate src/destination is supported and so ultimately deny/allow nesting works.,Also adds a sanity check test for api.Agent().ConnectAuthorize() and a fix for a trivial bug in it.
11951,"Allow duplicate source or destination, but enforce uniqueness across all four.",
11952,Rework connect/proxy and command/connect/proxy. End to end demo working again,
11953,Remove old connect client and proxy implementation,
11954,connect.Service based implementation after review feedback.,
11955,Original proxy and connect.Client implementation. Working end to end.,
11956,agent: rename authorize param ClientID to ClientCertURI,
11957,api: rename Authorize field to ClientCertURI,
11958,api: fix up some comments and rename IssuedCert to LeafCert,
11959,api: IntentionMatch,
11960,"api: starting intention endpoints, reorganize files slightly",
11961,"api: endpoints for working with CA roots, agent authorize, etc.",
11962,agent: add TODO for verification,
11963,acl: IntentionDefault => IntentionDefaultAllow,
11964,"agent: ACL checks for authorize, default behavior",
11965,"agent/structs: String format for Intention, used for logging",
11966,agent: bolster commenting for clearer understandability,
11967,agent: default deny on connect authorize endpoint,
11968,"agent: /v1/agent/connect/authorize is functional, with tests",
11969,agent/connect: Authorize for CertURI,
11970,agent: get rid of method checks since they're done in the http layer,
11971,require -> assert until rebase,
11972,"Add Connect agent, catalog and health endpoints to api Client",
11973,agent/consul/state: ensure exactly one active CA exists when setting,
11974,agent/connect: support any values in the URL,
11975,agent/connect: support SpiffeIDSigning,
11976,agent/connect: rename SpiffeID to CertURI,
11977,agent/connect: use proper keyusage fields for CA and leaf,
11978,agent/connect: address PR feedback for the CA.go file,
11979,agent: implement an always-200 authorize endpoint,
11980,agent/consul: encode issued cert serial number as hex encoded,
11981,agent/structs: hide some fields from JSON,
11982,agent: /v1/connect/ca/configuration PUT for setting configuration,
11983,"agent/consul/fsm,state: snapshot/restore for CA roots",
11984,"agent/consul/fsm,state: tests for CA root related changes",
11985,agent/consul: set more fields on the issued cert,
11986,agent: /v1/connect/ca/leaf/:service_id,
11987,agent: CA root HTTP endpoints,
11988,agent/consul: CAS operations for setting the CA root,
11989,agent/consul: tests for CA endpoints,
11990,"agent/consul: key the public key of the CSR, verify in test",
11991,agent/consul: test for ConnectCA.Sign,
11992,agent/consul: basic sign endpoint not tested yet,
11993,"agent/connect: package for agent-related Connect, parse SPIFFE IDs",
11994,connect: create connect package for helpers,
11995,agent/structs: json omit QueryMeta,
11996,agent: /v1/connect/ca/roots,
11997,agent/consul: RPC endpoints to list roots,
11998,agent/consul/state: CARoot structs and initial state store,
11999,agent: address PR feedback,
12000,agent: commenting some tests,
12001,agent: clarified a number of comments per PR feedback,
12002,agent/consul: Health.ServiceNodes ACL check for Connect,
12003,agent/consul: Catalog endpoint ACL requirements for Connect proxies,
12004,agent: remove ConnectProxyServiceName,
12005,agent/consul: require name for proxies,
12006,agent: validate service entry on register,
12007,agent/structs: tests for PartialClone and IsSame for proxy fields,
12008,agent/local: anti-entropy for connect proxy services,
12009,agent: clean up connect/non-connect duplication by using shared methods,
12010,agent: /v1/health/connect/:service,
12011,"agent/consul: implement Health.ServiceNodes for Connect, DNS works",
12012,"agent: working DNS for Connect queries, I think, but have to",implement Health endpoints to be sure
12013,agent: /v1/catalog/connect/:service,
12014,agent/consul: Catalog.ServiceNodes supports Connect filtering,
12015,agent/consul/state: ConnectServiceNodes,
12016,agent/consul: enforce ACL on ProxyDestination,
12017,agent/consul: proxy registration and tests,
12018,agent: /v1/agent/services test with connect proxies (works w/ no change),
12019,agent: test /v1/catalog/node/:node to list connect proxies,
12020,agent: /v1/catalog/service/:service works with proxies,
12021,agent/consul/state: convert proxy test to testify/assert,
12022,agent/consul/state: service registration with proxy works,
12023,agent/consul: convert intention ACLs to  testify/assert,
12024,"agent/consul,structs: add tests for ACL filter and prefix for intentions",
12025,agent/consul: Intention.Match ACLs,
12026,agent/consul: Intention.Get ACLs,
12027,agent/consul: Intention.Apply ACL on rename,
12028,agent/consul: tests for ACLs on Intention.Apply update/delete,
12029,agent/consul: Basic ACL on Intention.Apply,
12030,acl: implement IntentionRead/Write methods on ACL interface,
12031,acl: parsing intentions in service block,
12032,agent: convert all intention tests to testify/assert,
12033,"agent/consul/fsm,state: snapshot/restore for intentions",
12034,"agent: use UTC time for intention times, move empty list check to",agent/consul
12035,agent/consul/fsm: switch tests to use structs.TestIntention,
12036,agent/consul/state: need to set Meta for intentions for tests,
12037,agent/consul/state: remove TODO,
12038,agent: use testing intention to get valid intentions,
12039,"agent/consul: set default intention SourceType, validate it",
12040,agent/structs: Intention validation,
12041,"agent/consul: support intention description, meta is non-nil",
12042,agent/consul/fsm: add tests for intention requests,
12043,"agent,agent/consul: set default namespaces",
12044,"agent/consul: set CreatedAt, UpdatedAt on intentions",
12045,agent: GET /v1/connect/intentions/match,
12046,agent/consul: RPC endpoint for Intention.Match,
12047,agent/consul/state: IntentionMatch for performing match resolution,
12048,agent/structs: IntentionPrecedenceSorter for sorting based on precedence,
12049,agent: PUT /v1/connect/intentions/:id,
12050,agent: DELETE /v1/connect/intentions/:id,
12051,agent/consul: test that Apply works to delete an intention,
12052,"agent/consul/state,fsm: support for deleting intentions",
12053,agent/consul: creating intention must not have ID set,
12054,agent/consul: support updating intentions,
12055,agent: GET /v1/connect/intentions/:id,
12056,agent: POST /v1/connect/intentions,
12057,agent: GET /v1/connect/intentions endpoint,
12058,agent/consul: Intention.Get endpoint,
12059,"agent/consul: Intention.Apply, FSM methods, very little validation",
12060,"agent/consul: start Intention RPC endpoints, starting with List",
12061,agent/consul/state: list intentions,
12062,agent/consul/state: initial work on intentions memdb table,
12063,Readme for Fork Instructions,
12064,Move healthcheck text down by 1px,
12065,Ensure startup/load image is removed if you hit an error on first load,
12066,Merge pull request #4225 from hashicorp/bugfix/hide-anon-acl-delete,[BUGFIX] Remove anonymous ACL delete button in the listing
12067,Merge pull request #4223 from hashicorp/feature/search-acls-by-token,UI - Search ACLs by token aswell as name
12068,Move some things around and add in consul version confirmation to publishing checks,
12069,Add test for not showing the delete button for the first acl...,"Also, change the action group page objects to use data-test attributes instead of last-child which isn't reliable (and stay consistent)"
12070,Disable the delete button in the acl list for the anon token only,
12071,Add a test for searching by token,
12072,Add searching ACL's by token,
12073,Add more functionality related to verifying a build and publishing,
12074,Merge pull request #4219 from hashicorp/feature/ui-v2-2,UI integration branch merge
12075,Update CHANGELOG.md,
12076,Merge pull request #4220 from guidoiaquinti/master,Client: add metric for failed RPC calls to a consul server
12077,Attach server.Name label to client.rpc.failed,
12078,Attach server.ID label to client.rpc.failed,
12079,Client: add metric for failed RPC calls to server,
12080,Redo the build system,"Improvements:    - More modular    - Building within docker doesn’t use volumes so can be run on a remote docker host    - Build containers include only minimal context so they only rarely need to be rebuilt and most of the time can be used from the cache.    - 3 build containers instead of 1. One based off of the upstream golang containers for building go stuff with all our required GOTOOLS installed. One like the old container based off ubuntu bionic for building the old UI (didn’t bother creating a much better container as this shouldn’t be needed once we completely remove the legacy UI). One for building the new UI. Its alpine based with all the node, ember, yarn stuff installed.    - Top level makefile has the ability to do a container based build without running make dist    - Can build for arbitrary platforms at the top level using: make consul-docker XC_OS=… XC_ARCH=…    - overridable functionality to allow for customizations to the enterprise build (like to generate multiple binaries)    - unified how we compile our go. always use gox even for dev-builds or rather always use the tooling around our scripts which will make sure things get copied to the correct places throughout the filesystem."
12081,Comment up custom visitable and add a couple of comments to be clearer,
12082,Use defaultValue for making sure Name is at least '',
12083,Prevent being able to submit a create form with empty values,
12084,Explicitly sort by Key after folder/file,
12085,Remove buts,
12086,Make this steps file the same as the others...,WIP: Ideally all of these would go
12087,Make sure KV clicking is tested (WIP),
12088,Tweak vocab,
12089,Add a couple more unit tests for the utils folder,
12090,Upgrade consul-api-double,
12091,Add some delete testing to KV and ACL,
12092,"QSA doesn't like searching with sibling selectors, make a sibling",
12093,Make sure didAppear and therefore resize is called on change,"Tables need to calculate their sizing depending on other things in the DOM. When a table is in a tab panel, some of these things aren't visible and therefore some values are zero during didInsertElement. This commit ensures that the resize calc of the table is performed when it's parent tab is clicked (and therefore when the table 'appears')"
12094,WIP: Make sure I can get the values I need to calculate sizing,"rect.top is zero until the tab panel becomes visible, resize will need to be called when the tab is clicked also"
12095,Remove some pauses,
12096,"Move testing bits to hashicorp org, also..",Go with rsync over cp for putting the api double into public for the moment
12097,Bump,
12098,WIP: Feature/acceptance tests,
12099,Fix tear down click handler problem in tests,"It's not obvious what ""the way"" to teardown window event handlers is in Ember. The datacenter-picker is permanently in the app during usage, but in tests I'm assuming it gets added and removed lots. So when you run the tests, as the tests aren't run in an isolated runner the QUnit test runner ends up with a click handler on it, So if you click on the test runner one of the tests will fail. The failure is related to there not being an element with a .contains method. So this checks that the element is truthy first, i.e. it exists. If it doesn't it just bails out."
12100,"Use this.element for context, thus avoiding jQuery, plus..",Add comments for clarity
12101,Tweak placeholder text to add 'port',
12102,Adds filtering to the KV listing page,
12103,Prevent action groups from being cutoff by the footer," Calculate where group is going to be, if it will get cut off, then dropup instead of down As the action group can now drop up, the z-index should be higher than the previous rows, so add a top z-index higher than the others and use that when opened"
12104,Auto calculate the height of the tables depending on the space left,Additionally make the footer lookup more unique seeing as we are in js here
12105,"Change KV inputs to textareas, also JSON > CODE","As the input field was used for KV's it looked like you couldn't save multiline KV's. Changed to textarea so you can see the multilines. Also, JSON is slightly misleading as clicking the toggle doesn't necessarily mean 'I'm going to edit some JSON' it means I want the code editor with syntax highlighting, so renamed the toggle to say 'Code'"
12106,Enable searching by port in the Node > [Service] listing,
12107,Fixup a weird merge problem,
12108,Add a Client ReloadConfig test,
12109,Merge branch 'master' of github.com:hashicorp/consul into rpc-limiting,Conflicts: agent/agent.go agent/consul/client.go
12110,Update docs about rpc limits being reloadable,
12111,Apply the limits to the clients rpcLimiter,
12112,Add configuration entry to control including TXT records for node meta in DNS responses,"If set to false, the only way to retrieve TXT records for node meta is to specifically query for TXT records."
12113,Merge pull request #4191 from hashicorp/doc-gh-4155,Add systemd-resolved DNS forwarding guide
12114,Merge remote-tracking branch 'origin/master' into release-build-updates,
12115,Initial progress on build system updates,
12116,Removed labels from new ACL denied metrics,
12117,Removed consul prefix from metrics as requested by @kyhavlov,
12118,Merge pull request #4194 from hashicorp/fix-kv-del-validation,Fix KV del command validation error
12119,Merge pull request #4156 from hashicorp/enterprise-coexistence,Enterprise/Licensing Cleanup
12120,Put systemd-resolved in backticks,
12121,Fix KV del command validation error,"This has an explcit unit test already which somehow passes at least some of the time. I suspect it passes because under some conditions the actual KV delete fails and returns non-zero as well as printing the warning which is what is being checked for in the test. For some reason despite working for quite some time like this, I now have a branch in which this test fails consistently. It may be a timing/env issue where another process running an agent causes the delete to be successful so the command returns a 0 by chance. Either way this is clearly wrong and fixing it stops the test being flaky in my branch."
12122,Update CHANGELOG.md,
12123,Merge pull request #4193 from hashicorp/bugfix/gh-3040,Update yamux vendoring
12124,Remove bogus second yamux vendoring,
12125,Update yamux vendoring,Pulls in logging fixes.
12126,Mention that PTR queries get sent to all resolvers,
12127,Update DNS forwarding docs to include how to use with systemd-resolved,
12128,Update CHANGELOG.md,
12129,Merge pull request #4169 from rskrishnar/adds-a-link-to-agent-config-options,adds link to agent config options from basic.html
12130,Merge pull request #4154 from hashicorp/licensing-docs,Add licensing documentation.
12131,Merge pull request #4013 from sethvargo/sethvargo/user_agent,Add a helper for generating Consul's user-agent string
12132,Merge pull request #4164 from hashicorp/raft-default-docs,website: add raft snapshot setting defaults
12133,Update CHANGELOG.md,
12134,Merge pull request #4131 from pierresouchay/enable_full_dns_compression,Enable full dns compression
12135,Update CHANGELOG.md,
12136,Merge pull request #4184 from hashicorp/bugfix/gh-4076,Fix #4076 - Agent configured Watches now work with HTTPS only agents
12137,Update CHANGELOG.md,
12138,Merge pull request #4185 from hashicorp/reload-fix,command/agent: don't re-parse the flags on reload
12139,Merge pull request #4181 from Qonfucius/fix/scaleway-autojoin-doc,[Doc][Scaleway autoJoin] Fix given + mandatory fields
12140,Add RunWithConfig and put Run signature back to normal,
12141,command/agent: don't re-parse the flags on reload,
12142,Update unit tests to reflect change to func signature,
12143,Allow passing in a config to the watch plan to use when creating the API client,This allows watches from consul agent config (rather than consul watch command) to be able to utilize HTTPs
12144,Update docs to describe the 30 minute temp license,
12145,Fixed comments for max DNS records returned as requested by @mkeeler,
12146,Fix given + mandatory fields,
12147,demo: Added udp port forwarding,
12148,adds link to agent config options from basic.html,
12149,website: add raft snapshot setting defaults,
12150,Use new discover and useragent libs,
12151,Update vendor for go-discover,
12152,Add a helper for generating Consul's user-agent string,
12153,Merge pull request #4117 from eduardev/patch-1,Update downloads_tools.html.erb
12154,Merge pull request #4133 from rskrishnar/add-missing-telemetry,add missing metrics to telemetry documentation
12155,Merge pull request #4075 from j-collier/patch-1,Update index.html.md build instuctions
12156,Allow for easy enterprise/oss coexistence,Uses struct/interface embedding with the embedded structs/interfaces being empty for oss. Also methods on the server/client types are defaulted to do nothing for OSS
12157,Update .gitignore - ignore some macos fs event notification stuff,
12158,Move data source loading into a command helpers function,
12159,Add BadRequestError handling,
12160,Add licensing documentation.,
12161,Minor clarification of server nodes,"In Node Removal section, clarify that server nodes are being discussed."
12162,Merge pull request #4146 from phaer/patch-1,"doc fix: put ""Near"" into ""Service"" in prepared_queries"
12163,"prepared_queryes: put ""Near"" into ""Service""",
12164,Put version.go back in dev mode,
12165,Update CHANGELOG.md - PR-4083,
12166,Merge pull request #4083 from 42wim/serviceptr,DNS: Add support for reverse lookup of services
12167,Add service reverse lookup tests,
12168,Do reverse service lookup only if address doesn't match node,
12169,Add github.com/coredns/coredns/plugin/pkg/dnsutil files,
12170,Add github.com/coredns/coredns/plugin/pkg/dnsutil to vendor.json,
12171,Add support for reverse lookup of services,
12172,"Revert ""Certificate for Alice was too old, updating it for tests""",This reverts commit aeac0580acd4b5de977a4024417753a67f64820e.
12173,Merge pull request #4114 from hashicorp/fix-certs,Update test certificates that expire this year to be way in the future
12174,Merge pull request #4127 from pierresouchay/documentation_discovery_max_stale,Error in documentation: discovery_max_stale is not in dns_config
12175,"Test fix, trying to pass Travis tests",
12176,"Certificate for Alice was too old, updating it for tests",
12177,add missing metrics to telemetry documentation,
12178,Ensure to never send messages more than 64k,
12179,Fixed unit tests and updated limits,
12180,"Re-Enable compression while computing Len(), so we can send more answers",This will fix https://github.com/hashicorp/consul/issues/4071
12181,Bump DNS lib to 1.0.7 with 14bits Len() fix,
12182,Merge pull request #4129 from hashicorp/doc-production-deployment-guide-revert,Revert sidebar link to Production Deployment Guide
12183,Revert sidebar link to Production Deployment Guide,Will be published when it has been reviewed.
12184,Error in documentation: discovery_max_stale is not in dns_config,Moved the entry at the top level instead of DNS
12185,Merge pull request #4113 from hashicorp/doc-production-deployment-guide,Production deployment guide
12186,Update downloads_tools.html.erb,
12187,Update test certificates that expire this year to be way in the future,
12188,Consul production deployment guide,
12189,Update CHANGELOG.md,
12190,website: fix broken link,
12191,Publish 1.1.0 release on the website,
12192,Release v1.1.0,
12193,Release v1.1.0,
12194,Update bindata_assetfs for 1.1,
12195,Release v1.1.0,
12196,Release v1.1.0,
12197,Release v1.1.0,
12198,Update CHANGELOG and version for release,
12199,v1.1.0 UI Build,
12200,Go fmt cleanup,
12201,Merge pull request #4105 from hashicorp/f-raft-threshold-config,Make raft snapshot commit threshold configurable
12202,Change default raft threshold config values and add a section to upgrade notes,
12203,More docs and removed SnapShotInterval from raft timing struct stanza,
12204,Also make snapshot interval configurable,
12205,fix spacing,
12206,Make raft snapshot commit threshold configurable,
12207,Merge pull request #4111 from hashicorp/b-fix-vendoring,Fix vendoring of two missed libs
12208,Fix vendoring of two missed libs,
12209,Session Delete confirmation button and KV console error message (#4109),"Fix session invalidation in table confirmation dialog, plus console error message when deleting deep KV's"
12210,Merge pull request #4110 from hashicorp/b-fix-vendoring,Make sure transitive deps are in vendor.json
12211,Update prometheus indirect deps,
12212,Update the various deps of miekg/dns in our vendor.json,
12213,Update CHANGELOG.md,
12214,Pull in miekg/dns deps on the golang crypto ed25519 packages,
12215,Update CHANGELOG.md,
12216,WIP Edits to Consul production deployment guide,
12217,WIP Sidebar menu for Consul Deployment Guide,
12218,WIP Consul deployment guide,
12219,Update CHANGELOG.md,
12220,github: more tweaking of bug issue template,
12221,Merge pull request #4108 from hashicorp/vendor-go-discover,Update go-discover and add triton provider
12222,github: fix issue template formatting for bugs,
12223,github: fix formatting in feature template,
12224,github: fix yaml format for feature issue template,
12225,Merge pull request #4096 from hashicorp/issue-templates,WIP Issue template for UI issues
12226,Move cloud auto-join docs to a separate page and add Triton,
12227,Update CHANGELOG.md,
12228,Update CHANGELOG.md,
12229,Update CHANGELOG.md,
12230,Merge pull request #4097 from hashicorp/remove-deprecated,Remove deprecated check/service fields and metric names
12231,vendor: pull in latest version of go-discover,
12232,website: formatting and link to deprecation notice from 1.0,
12233,Directions for using the new Consul UI,
12234,change the bug report tempate to use the collapsable details view,
12235,remove old issue template,
12236,"add feature request, bug report, and question issue templates",
12237,add frontmatter to UI issue template,
12238,UI V2 (#4086),"  Move settings to use the same service/route API as the rest of the app   Put some ideas down for unit testing on adapters   Favour Model over Entity   Move away from using reopen to using Mixins   Amend messages, comment/document some usage   Make sure the returns are consistent in normalizePayload, also   Add some todo's in to remind me to think consider this further at a later date. For example, is normalizePayload to be a hook or an overridable method   Start stripping back the HTML to semantics   Use a variable rather than chaining   Remove unused helpers   Start picking through the new designs, start with listing pages   First draft HTML for every page   Making progress on the CSS   Keep plugging away at the catalog css   Looking at scrolling   Wire up filtering   Sort out filter counting, more or less done a few outstanding   Start knocking the forms into shape   Add in codemirror   Keep moving forwards with the form like layouts   Start looking at ACL editing page, add footer in   Pull the filters back in, look at an autoresizer for scroll views   First draft toggles   2nd draft healthcheck icons   Tweak node healthcheck icons   Looking at healthcheck detail icons   Tweak the filter-bar and add selections to the in content tabs   Add ACL create, pill-like acl type highlight   Tweaking the main nav some more   Working on the filter-bar and freetext-filter   Masonry layout   Stick with checks instead of healthy/unhealthy   Fix up the filter numbers/counts   Use the thead for a measure   First draft tomography back in   First draft DC dropdown   Add a temporary create buttong to kv's   Move KV and ACL to use a create page   Move tags   Run through old tests   Injectable server   Start adding test attributes   Add some page objects   More test attributes and pages   Acl filter objects   Add a page.. page object   Clickable items in lists   Add rest/spread babel plugin, remove mirage for now   Add fix for ember-collection   Keep track of acl filters   ember-cli-page-object   ember-test-selectors   ui: update version of ui compile deps   Update static assets   Centralize radiogroup helper   Rejig KV's and begin to clean it up   Work around lack of Tags for the moment..   Some little css tweaks and start to remove possibles   Working on the dc page and incidentals   Sort the datacenter-picker list  Add a selected state to the datacenter-picker Make dc an {Name: dc}  Add an env helper to get to 'env vars' from within templates   Click outside stuff for the datacenter-picker, is-active on nav   Make sure the dropdown CTA can be active   Bump ember add pluralize helper   Little try at sass based custom queries   Rejig tablular collection so it deals with resizing, actions   WIP: start building actions dropdowns   Move tabular collection to deal with resizing to rule out differences   First draft actions dropdowns   Add ports, selectable IP's   Flash messages, plus general cleanup/consistency   Add ember-cli-flash for flash messages  Move everything to get() instead of item.get  Spotted a few things that weren't consistent   DOn't go lower than zero   First draft vertical menu   Missed a get, tweak dropmenu tick   Big cleanup   this.get(), this.set() > get(), set()  assign > {...{}, ...{}}  Seperator > separator   WIP: settings   Moved things into a ui-v2 folder   Decide on a way to do the settings page whilst maintaining the url + dc's   Start some error pages   Remove base64 polyfill   Tie in settings, fix atob bug, tweak layout css   Centralize confirmations into a component   Allow switching between the old and new UI with the CONSUL_UI_BETA env var   Currently all the assets are packaged into a single AssetFS and a prefix is configured to switch between the two.   Attempt at some updates to integrate the v2 ui build into the main infrastructure   Add redirect to index.html for unknown paths   Allow redictor to /index.html for new ui when using -ui-dir   Take ACLs to the correct place on save   First pass breadcrumbs   Remove datacenter selector on the index page   Tweak overall layout   Make buttons 'resets'   Tweak last DC stuff   Validations plus kv keyname viewing tweaks   Pull sessions back in   Tweak the env vars to be more reusable   Move isAnon to the view   No items and disabled acl css   ACL and KV details   Unauthorized page  Make sure the ACL is always selected when it needs it  Check record deletion with a changeset   Few more acl tweaks/corrections   Add no items view to node > services   Tags for node > services   Make sure we have tags   Fix up the labels on the tomography graph   Add node link (agent) to kv sessions   Duplicate up create for KV 'root creation'   Safety check for health checks   Fix up the grids   Truncate td a's, fix kv columns   Watch for spaces in KV id's   Move actions to their own mixins for now at least   Link reset to settings incase I want to type it in   Tweak error page   Cleanup healthcheck icons in service listing   Centralize errors and make getting back easier   Nice numbers   Compact buttons   Some incidental css cleanups   Use 'Key / Value' for root   Tweak tomography layout   Fix single healthcheck unhealthy resource   Get loading screen ready   Fix healthy healthcheck tick   Everything in header starts white   First draft loader   Refactor the entire backend to use proper unique keys, plus..   Make unique keys form dc + slug (uid)   Fun with errors...   Tweak header colors   Add noopener noreferrer to external links   Add supers to setupController   Implement cloning, using ember-data...   Move the more expensive down the switch order   First draft empty record cleanup..   Add the cusomt store test   Temporarily use the htmlSafe prototype to remove the console warning   Encode hashes in urls   Go back to using title for errors for now   Start removing unused bulma   Lint   WIP: Start looking at failing tests   Remove single redirect test   Finish off error message styling   Add full ember-data cache invalidation to avoid stale data...   Add uncolorable warning icons   More info icon   Rearrange single service, plus tag printing   Logo   No quotes   Add a simple startup logo   Tweak healthcheck statuses   Fix border-color for healthchecks   Tweak node tabs   Catch 401 ACL errors and rethrow with the provided error message   Remove old acl unauth and error routes   Missed a super   Make 'All' refer to number of checks, not services   Remove ember-resizer, add autoprefixer   Don't show tomography if its not worth it, viewify it more also   Little model cleanup   Chevrons   Find a way to reliably set the class of html from the view   Consistent html   Make sure session id's are visible as long as possible   Fix single service check count   Add filters and searchs to the query string   Don't remember the selected tab   Change text   Eror tweaking   Use chevrons on all breadcrumbs even in kv's   Clean up a file   Tweak some messaging   Makesure the footer overlays whats in the page   Tweak KV errors   Move json toggle over to the right   feedback-dialog along with copy buttons   Better confirmation dialogs   Add git sha comment   Same title as old UI   Allow defaults   Make sure value is a string   WIP: Scrolling dropdowns/confirmations   Add to kv's   Remove set   First pass trace   Better table rows   Pull over the hashi code editor styles   Editor tweaks   Responsive tabs   Add number formatting to tomography   Review whats left todo   Lint   Add a coordinate ember data triplet   Bump in a v2.0.0   Update old tests   Get coverage working again   Make sure query keys are also encoded   Don't test console.error   Unit test some more utils   Tweak the size of the tabular collections   Clean up gitignore   Fix copy button rollovers   Get healthcheck 'icon icons' onto the text baseline   Tweak healthcheck padding and alignment   Make sure commas kick in in rtt, probably never get to that   Improve vertical menu   Tweak dropdown active state to not have a bg   Tweak paddings   Search entire string not just 'startsWith'   Button states   Most buttons have 1px border   More button tweaks   You can only view kv folders   CSS cleanup reduction   Form input states and little cleanup   More CSS reduction   Sort checks by importance   Fix click outside on datacenter picker   Make sure table th's also auto calculate properly   Make sure json isn't remembered in KV editing   Fix recursive deletion in KV's   Centralize size   Catch updateRecord   Don't double envode   model > item consistency   Action loading and ACL tweaks   Add settings dependencies to acl tests   Better loading   utf-8 base64 encode/decode   Don't hang off a prototype for htmlSafe   Missing base64 files...   Get atob/btoa polyfill right   Shadowy rollovers   Disabled button styling for primaries   autofocuses only onload for now   Fix footer centering   Beginning of 'notices'   Remove the isLocked disabling as we are letting you do what the API does   Don't forget the documentation link for sessions   Updates are more likely   Use exported constant   Dont export redirectFS and a few other PR updates   Remove the old bootstrap config which was used for the old UI skin   Use curlies for multiple properties "
12239,Merge pull request #4106 from hashicorp/feature/ui-v1-notification,Add v2 notification banner at the top of the page
12240,Fix typo ot > to,
12241,Merge pull request #4104 from cocaccola/patch-1,Update faq.html.md
12242,Update CHANGELOG.md,
12243,Merge pull request #4102 from hashicorp/join-sockaddr,Support sockaddr templates in start/retry join
12244,Add v2 notification banner at the top of the page,
12245,Update faq.html.md,fixed typo
12246,Update config docs with places sockaddr is supported,
12247,Make it work for WAN join too and add tests,
12248,Added support for sockaddr templates in start-join and retry-join configuration,
12249,Add a note about removals to the version upgrade docs,
12250,Merge pull request #4098 from jkohrman/master,Add link to privacy policy in website footer
12251,Add link to privacy policy in website footer,Added link to updated privacy policy in footer of layout.erb for the OSS website.
12252,Remove unused retry join structs from config,
12253,Remove deprecated metric names,
12254,Remove the script field from checks in favor of args,
12255,Issue template for UI issues,
12256,Update CHANGELOG.md,
12257,Merge pull request #3970 from pierresouchay/node_health_should_change_service_index,"[BUGFIX] When a node level check is removed, ensure all services of node are notified"
12258,Remove support for EnableTagOverride in config files,
12259,Remove support for CheckID field in service check definitions,
12260,Update CHANGELOG.md,
12261,Merge pull request #4088 from hashicorp/b-clean-leave-serf-update,Update serf to pick up clean leave fix
12262,Update serf to pick up clean leave fix,
12263,Update index.html.md,Corrects the bootstrap command.
12264,Merge pull request #4077 from dlukman/fix/telemetry-prefix,Fix telemetry default prefix filter
12265,Fix telemetry default prefix filter,"If telemetry metrics contain a hostname starting with 'consul', the metrics will be filtered out the same way as the deprecated metrics."
12266,Update index.html.md build instuctions,No target for $ make bootstrap currently exists. If building from source you have to run $ make and then $ make dev to install one of the built binaries that is appropriate for your system.
12267,Merge pull request #4064 from hashicorp/je.fout,Resolve FOUT Issue
12268,resolve fout issue,
12269,Merge pull request #4021 from fomentia/master,Close HTTP response in Agent test (HTTPAPI_MethodNotAllowed_OSS)
12270,Merge pull request #4052 from hashicorp/je.remove-turbolinks,Turbolinks adjustments
12271,Update CHANGELOG.md,
12272,Merge pull request #4047 from pierresouchay/added_missing_meta_in_service_definition,[BUGFIX] Added Service Meta support in configuration files
12273,Improved unit test (example close to actual value),
12274,Changed a bit doc,(Fighting with Travis)
12275,Improved documentation,
12276,Added documentation for meta,
12277,Update CHANGELOG.md,
12278,Update CHANGELOG.md,
12279,Update CHANGELOG.md,
12280,Merge pull request #4016 from pierresouchay/support_for_prometheus,Support for prometheus for metrics endpoint
12281,Fixed Meta name for JSON + Added unit tests for HCL/JSON,
12282,Removed Nanoseconds cast as requested by @banks,
12283,Removed content negotiation of Prometheus as requested by @banks,
12284,Update CHANGELOG.md,
12285,Merge pull request #4037 from pierresouchay/dns_large_responses_binary_search,Perform a binary search to find optimal size of DNS responses
12286,adjust analytics and scripts for turbolinks,
12287,Added Missing Service Meta synchronization and field,
12288,More Tests cases compression/no compression,
12289,Removed unecessary copy of Extra and index,
12290,Update CHANGELOG.md,
12291,Merge pull request #4024 from jen20/signal-notify-once,Only call signal.Notify once during agent startup
12292,Merge pull request #4035 from hashicorp/website-description-default,website: set a default page description
12293,Add consul-kv-json (#4050), Add consul-kv-json to community tools alphabetize
12294,Merge pull request #4049 from hashicorp/f-vendor-new,vendor: add hashstructure and mock
12295,vendor: add hashstructure and mock,
12296,Merge pull request #4044 from pierresouchay/add_consul_templaterb_tool,Add consul-templaterb to community tools
12297,"gem, not GEM + Added information about process management",
12298,Use safer stringVal(),
12299,Added unit test on key length,
12300,Added unit tests for bad meta values,
12301,[BUGFIX] Added Service Meta support in configuration files,Fixes https://github.com/hashicorp/consul/issues/4045 Was not added by mistake in https://github.com/hashicorp/consul/pull/3881
12302,Add consul-templaterb to community tools,
12303,Fixed import,
12304,Added labels to improve new metric,
12305,Allow renaming nodes when ID is unchanged,
12306,Improved unit tests debug info when it fails,
12307,Fixed sync of Extra in binarySearch,
12308,Revert timeout changes,
12309,Run new test in parallel,
12310,Track calls blocked by ACLs using metrics,
12311,Increase timeout in travis tests,
12312,More test cases + travis flacky,
12313,Added Unit tests + fixed boudary limit,
12314,Added comment for function dnsBinaryTruncate,
12315,Perform a binary search to find optimal size of DNS responses,"Will fix https://github.com/hashicorp/consul/issues/4036 Instead of removing one by one the entries, find the optimal size using binary search. For SRV records, with 5k nodes, duration of DNS lookups is divided by 4 or more."
12316,website: set a default page description,"This is related to the updated unfurling behavior, see https://github.com/hashicorp/terraform-website/pull/242."
12317,Merge pull request #4029 from freddygv/dnsutils-vagrant-cluster,Enables dig in vagrant-cluster demo by installing dnsutils
12318,Put tree back into dev mode,
12319,website: fix a broken link,
12320,website: bump version of middleman used in packer build,
12321,Update website to download version 1.0.7,
12322,Release v1.0.7,
12323,Update static assets,
12324,Enables dig in cluster demo by installing dnsutils,
12325,Update make static-assets goal and run format,
12326,ui: update version of ui compile deps,
12327,Update middleman docker image to 0.3.35,
12328,update middleman-hashicorp to 0.3.35,
12329,Put the tree in 1.0.7 release mode,
12330,Update CHANGELOG.md,
12331,Merge pull request #4023 from hashicorp/f-near-ip,Add near=_ip support for prepared queries
12332,GH-3798: More PR Updates,Update docs a little Update/add tests. Make sure all the various ways of determining the source IP work Update X-Forwarded-For header parsing. This can be a comma separated list with the first element being the original IP so we now handle csv data there. Got rid of error return from sourceAddrFromRequest
12333,GH-3798: A couple more PR updates,Test HTTP/DNS source IP without header/extra EDNS data. Add WARN log for when prepared query with near=_ip is executed without specifying the source ip
12334,GH-3798: A few more PR updates,
12335,GH-3798: Updates for PR,Allow DNS peer IP as the source IP. Break early when the right node was found for executing the preapred query. Update docs
12336,GH-3798: Wrap DNS request validation in a retry,
12337,Merge pull request #4015 from hashicorp/ui-service-tags,api/ui: return tags on internal UI endpoints
12338,Merge pull request #3950 from hashicorp/je.segment,Switch web analytics to segment
12339,GH-3798: Update prepared query documentation to mention the near=_ip param,
12340,GH-3798: Add DNS near=_ip test,
12341,Update CHANGELOG.md,
12342,Merge pull request #4022 from hashicorp/pq-filter-checks,Allow ignoring checks by ID when defining a PreparedQuery. Fixes #3727.
12343,Only call signal.Notify once during agent startup,"Calling twice appears to have no adverse effects, however serves to confuse as to what the semantics of such code may be! This seems like it was probably introduced while resolving conflicts during the merge of the fix for #2404."
12344,GH-3798: Add HTTP prepared query near=_ip test,Also fixed an issue where we need to have the X-Forwarded-For header processed before the RemoteAddr. This shouldn’t have any functional difference for prod code but for mocked request objects it allows them to work.
12345,GH-3798: Add near=_ip support for prepared queries,
12346,Close HTTP response in Agent test (HTTPAPI_MethodNotAllowed_OSS),
12347,Allow ignoring checks by ID when defining a PreparedQuery. Fixes #3727.,
12348,Clearer documentation and comments for enabling Prometheus support,
12349,Enable compression / automatic Mime-Type detection for Prometheus endpoint,
12350,agent: reload limits upon restart,
12351,add unit tests: limits configuration should be reloadable,
12352,switch analytics from ga to segment,
12353,Merge pull request #4005 from hashicorp/og-image,website: use a smaller og image for unfurling / expansion behavior
12354,Update CHANGELOG.md,
12355,Merge pull request #4006 from kjothen/patch-1,Update check.go
12356,Merge pull request #4007 from v-karbovnichy/patch-1,"website: Add description what the ""recent events"" means"
12357,Added documentation for telemetry{ prometheus_retention_time = duration },
12358,Now use prometheus_retention_time > 0 to enable prometheus support,
12359,Added support exposing metrics in Prometheus format,
12360,Added dependency github.com/prometheus/client_golang/prometheus/promhttp,
12361,api/ui: return tags on internal UI endpoints,This is to allow the UI to display tags in the services index pages without needing to make additional queries.
12362,Bump github.com/armon/go-metrics to allow having prometheus support,
12363,Update CHANGELOG.md,
12364,Merge pull request #3752 from yfouquet/issue_3687,Add support for compression in http api
12365,Update CHANGELOG.md,
12366,Add support for compression in http api,"The need has been spotted in issue https://github.com/hashicorp/consul/issues/3687. Using ""NYTimes/gziphandler"", the http api responses can now be compressed if required. The Go API requires compressed response if possible and handle the compressed response. We here change only the http api (not the UI for instance)."
12367,Update CHANGELOG.md,
12368,Merge pull request #4002 from hashicorp/b-gh-3996,Add --config-format option to the validate subcommand
12369,Merge pull request #3998 from zte-opensource/wip-fix-shutdown,minor fix for endpoints shutdown
12370,Address PR feedback,
12371,Merge remote-tracking branch 'origin/master' into b-gh-3996,
12372,"website: Add description what the ""recent events"" means",According to this answer on SO https://stackoverflow.com/a/49495985/1875339 that has references to code lines: https://github.com/hashicorp/consul/blob/94835a2715892f48ffa9f81a9a32808d544b1ca5/agent/agent.go#L221 https://github.com/hashicorp/consul/blob/94835a2715892f48ffa9f81a9a32808d544b1ca5/agent/user_event.go#L229 https://github.com/hashicorp/consul/blob/94835a2715892f48ffa9f81a9a32808d544b1ca5/agent/user_event.go#L235
12373,Update check.go,"Cosmetic fix to the agent's HTTP check function which always formats the result as ""HTTP GET ..."", ignoring any non-GET supplied HTTP method such as POST, PUT, etc."
12374,website: use a smaller og image for unfurling / expansion behavior,Currently the large image can load in Slack (or other clients that expand links) and dominate the viewport. This is just following the pattern from a recent change to the Terraform website in https://github.com/hashicorp/terraform-website/pull/214
12375,Update CHANGELOG.md,Mark issue #3850 as fixed.
12376,Merge pull request #3948 from pierresouchay/fix_tcp_dns_limit,[BUGFIX] do not break when TCP DNS answer exceeds 64k
12377,Add CHANGELOG.md,
12378,Adds discovery_max_stale (#4004),Adds a new option to allow service discovery endpoints to return stale results if configured at the agent level.
12379,Update unit-tests to use requirements instead of manual checks.,
12380,Fix typo in changelog,
12381,Merge pull request #3994 from hashicorp/f-rename-servicemeta,"Renames agent API layer for service metadata to ""meta"" for consistency"
12382,Update case of member in comment,
12383,Formatting update,
12384,GH-3996: Add config-format flag to validate subcommand,
12385,Merge pull request #4000 from hashicorp/docs-3984,website: document and warn users about disabling serf_wan port
12386,Merge pull request #4001 from hashicorp/really-add-require-vendor,Actually add the require vendored files I missed in #3986
12387,Actually add the require vendored files I intended to add in https://github.com/hashicorp/consul/commit/0d5600ff6090063e6d51368d6eb6c479820fc250,Note that the vendor.json is already correct but the actual files were never checked in so report as missing: $ govendor list | grep testify  v  github.com/stretchr/testify/assert   m github.com/stretchr/testify/require
12388,website: document and warn users about disabling serf_wan port,See https://github.com/hashicorp/consul/pull/3984 for more. This also fixes a link to a heading that existed twice in the document.
12389,minor fix for endpoints shutdown,Signed-off-by: runsisi runsisi@zte.com.cn
12390,Update CHANGELOG.md,
12391,Merge pull request #3990 from hashicorp/b-gh-3854,Warn when node name isnt a valid DNS label
12392,Merge pull request #3995 from hashicorp/f-update-dns-lib,update dns lib
12393,Merge pull request #3991 from hashicorp/community-organization,Alphabetizing community tools list
12394,Update CHANGELOG,
12395,vendorfmt,
12396,Bump version of miekg/dns to 1.0.4,"See https://github.com/hashicorp/consul/issues/3977 While trying to improve furthermore #3948 (This pull request is still valid since we are not using Compression to compute the result anyway). I saw a strange behaviour of dns library. Basically, msg.Len() and len(msg.Pack()) disagree on Message len. Thus, calculation of DNS response is false consul relies on msg.Len() instead of the result of Pack() This is linked to miekg/dns#453 and a fix has been provided with miekg/dns#454 Would it be possible to upgrade miekg/dns to a more recent function ? Consul might for instance upgrade to a post 1.0 release such as https://github.com/miekg/dns/releases/tag/v1.0.4"
12397,"Renames agent API layer for service metadata to ""meta"" for consistency",
12398,Update changelog,
12399,Merge pull request #3881 from pierresouchay/service_metadata,Feature Request: Support key-value attributes for services
12400,Update CHANGELOG,
12401,Merge pull request #3984 from hashicorp/f-allow-federation-disable,Allows disabling WAN federation by setting serf WAN port to -1
12402,Formatting update,
12403,Added validation of ServiceMeta in Catalog,Fixed Error Message when ServiceMeta is not valid Added Unit test for adding a Service with badly formatted ServiceMeta
12404,fix typo and remove comment,
12405,GH-3854: Warn when node name isnt a valid DNS label,
12406,Merge pull request #3988 from guidoiaquinti/master,Bumps go version to 1.10
12407,Updates CHANGELOG.md,
12408,Bumps go version to 1.10,
12409,Remove unnecessary nil checks,
12410,Fix test and remove unused method,
12411,Add vendored testify/require subpackage; upgrade assert to match. (#3986),
12412,Update CHANGELOG.md,
12413,Merge pull request #3982 from hashicorp/yamux_update,Update yamux to pick up performance improvements
12414,Allows disabling WAN federation by setting serf WAN port to -1,
12415,Merge pull request #3979 from guidoiaquinti/master,Consolidate logging output
12416,Added support for renaming nodes when their IP does not change,
12417,Update yamux to pick up performance improvements,
12418,Merge pull request #3927 from hashicorp/docs-encrypt-key-note,Docs: Clarify encrypt key for WAN joined DCs
12419,Alphabetizing community tools list,
12420,Merge remote-tracking branch 'origin/master' into node_health_should_change_service_index,
12421,More test cases,
12422,Added new test regarding checks index,
12423,Fixed minor typo in comments,Might fix unstable travis build
12424,Add package name to log output,
12425,Merge pull request #3929 from sryabkov/patch-1,Highlighting the dead link in documentation
12426,Note TLS cipher suite support changes,
12427,Spelling (#3958),  spelling: another   spelling: autopilot   spelling: beginning   spelling: circonus   spelling: default   spelling: definition   spelling: distance   spelling: encountered   spelling: enterprise   spelling: expands   spelling: exits   spelling: formatting   spelling: health   spelling: hierarchy   spelling: imposed   spelling: independence   spelling: inspect   spelling: last   spelling: latest   spelling: client   spelling: message   spelling: minimum   spelling: notify   spelling: nonexistent   spelling: operator   spelling: payload   spelling: preceded   spelling: prepared   spelling: programmatically   spelling: required   spelling: reconcile   spelling: responses   spelling: request   spelling: response   spelling: results   spelling: retrieve   spelling: service   spelling: significantly   spelling: specifies   spelling: supported   spelling: synchronization   spelling: synchronous   spelling: themselves   spelling: unexpected   spelling: validations   spelling: value 
12428,Merge pull request #3961 from canterberry/docs/tls-cipher-suites,📝 Clarify the list of supported TLS cipher suites
12429,Use master,
12430,Merge pull request #3962 from canterberry/upgrade/tls-cipher-suites,🔒 Update supported TLS cipher suites
12431,Merge pull request #3966 from hashicorp/docs-ui-acls,website: add UI section to ACL guide
12432,Fixed typo in comments,
12433,Refactoring to have clearer code without weird bool,
12434,"[BUGFIX] When a node level check is removed, ensure all services of node are notified","Bugfix for https://github.com/hashicorp/consul/pull/3899 When a node level check is removed (example: maintenance), some watchers on services might have to recompute their state. If those nodes are performing blocking queries, they have to be notified. While their state was updated when node-level state did change or was added this was not the case when the check was removed. This fixes it."
12435,Update CHANGELOG,
12436,cleanup unit test code a bit,
12437,Merge pull request #3885 from eddsteel/support-options-requests,Support OPTIONS requests
12438,🎨 Formatting changes only; convert leading space to tabs,
12439,📝 Prefer brevity at the cost of some ambiguity,
12440,✅ Match expectation of TLSCipherSuites to values of tls_cipher_suites,
12441,🐛 Formatting changes only; add missing trailing commas,
12442,🔒 Update supported TLS cipher suites,"The list of cipher suites included in this commit are consistent with the values and precedence in the Golang TLS documentation.  Note: Cipher suites with RC4 are still included within the list of accepted values for compatibility, but these cipher suites are not safe to use and should be deprecated with warnings and subsequently removed. Support for RC4 ciphers has already been removed or disabled by default in many prominent browsers and tools, including Golang. References:  RC4 on Wikipedia Mozilla Security Blog "
12443,⤵️ Merge from master; no conflicts,
12444,website: clarify where ACL token is set in the UI,
12445,website: add section on securing the UI with ACLs,Figured it would be worth documenting due to #3931.
12446,Call out the service-watch upgrade notice,
12447,Merge pull request #3884 from rberlind/master,Updated Stale Reads section of DNS Caching Guide
12448,Merge pull request #3952 from slopeinsb/patch-1,Update index.html.md
12449,Update CHANGELOG.md,
12450,📝 Clarify the list of supported TLS cipher suites,"Previously, the documentation linked to Golang's source code, which can drift from the list of cipher suites supported by Consul. Consul has a hard-coded mapping of string values to Golang cipher suites, so this is a more direct source of truth to help users understand which string values are accepted in the tls_cipher_suites configuration value."
12451,Merge pull request #3946 from hashicorp/je.fixes,Small Adjustments
12452,Update index.html.md,update cli commands for consul 1.x
12453,Fixed minor typo (+ travis tests is unstable),
12454,"Optimize size for SRV records, should improve performance a bit",Stricter Unit tests that checks if truncation was OK.
12455,Update CHANGELOG.md,
12456,Merge pull request #3940 from pierresouchay/dns_max_size,Allow to control the number of A/AAAA Record returned by DNS
12457,Some tweaks to the documentation for a_record_limit,
12458,Updated documentation as requested by @preetapan,
12459,Fixed wrong format of debug msg in unit test,
12460,Performance optimization for services having more than 2k records,
12461,Avoid issue with compression of DNS messages causing overflow,
12462,Cleaner Unit tests from suggestions from @preetapan,
12463,64000 max limit to DNS messages since there is overhead,Added debug log to give information about truncation.
12464,[BUGFIX] do not break when TCP DNS answer exceeds 64k,It will avoid having discovery broken when having large number of instances of a service (works with SRV and A* records). Fixes https://github.com/hashicorp/consul/issues/3850
12465,update to latest middleman-hashicorp,this includes minor text fixes for the universal nav
12466,First instance of 'Consul' on homepage -> 'HashiCorp Consul',
12467,Merge pull request #3944 from hashicorp/f-testify,agent/consul/fsm: begin using testify/assert
12468,agent/consul/fsm: begin using testify/assert,
12469,Allow to control the number of A/AAAA Record returned by DNS,"This allows to have randomized resource records (i.e. each answer contains only one IP, but the IP changes every request) for A, AAAA records. It will fix https://github.com/hashicorp/consul/issues/3355 and https://github.com/hashicorp/consul/issues/3937 See https://github.com/hashicorp/consul/issues/3937#issuecomment-370610509 for details. It basically add a new option called a_record_limit and will not return more than a_record_limit when performing A, AAAA or ANY DNS requests. The existing udp_answer_limit option is still working but should be considered as deprecated since it works only with DNS clients not supporting EDNS."
12470,Re-use defined endpoints for tests,
12471,Highlighting the dead link,"I am proposing to remove a dead link (https://atlas.hashicorp.com/help/consul/alternatives). If the page has moved and the new location is known, it would be of course better to update the link."
12472,Merge pull request #3928 from hashicorp/service-token-docs,Notes on ACL token storage and permissions
12473,Update CHANGELOG.md,
12474,Merge pull request #3899 from pierresouchay/fix_blocking_queries_index,Services Indexes modified per service instead of using a global Index
12475,Notes on ACL token storage and permissions,
12476,Notes on ACL token storage and permissions,
12477,Clarify encrypt key for WAN joined DCs,
12478,Better information and advices for upgrade to 1.0.7+,
12479,Simplified error handling for maxIndexForService, added unit tests to ensure service index is properly garbage collected added Upgrade from Version 1.0.6 to higher section in documentation
12480,Update CHANGELOG.md,
12481,Merge pull request #3922 from hashicorp/docs-fix-two-dc-links,website: override automatic linking of list items for softlayer dc
12482,website: override automatic linking of list items for softlayer dc,"This avoids a conflict with #datacenter later on the page. We're mixing histroic manually specified anchors with generated anchors (via redcarpet / middleman-hashicorp) so we have to manually override the automatic generation here. I was tempted to rewrite the old manual anchors to use the automatic generation, but there is no way to maintain backwards compatibility, so will leave that for a time when it is appropriate for us to break links (or redirect them, etc). Fixes #3916"
12483,Merge pull request #3914 from alvin-huang/fix_vendor,remove old pkgs and put deps of missing packages in vendor.json
12484,remove old pkgs and put deps of missing packages in vendor.json,
12485,Merge pull request #3903 from hashicorp/build-fixes,[WIP] Attempt to find some low-hanging fruit for CI failures
12486,Merge pull request #3910 from hashicorp/fix-shell,Fix test running in non-bash shells
12487,Add a link to the leader election guide in the lock API docs,
12488,Use GOTAGS in the vet make goal,
12489,Fix test running in non-bash shells,
12490,"Revert ""Change .travis.yml, set parallel to 1 to pass tests""",This reverts commit e7d1668347c751104ccebcd384f9ab742d9e0f55.
12491,"Change .travis.yml, set parallel to 1 to pass tests",
12492,[Revert] travis tunning as requested by @banks,
12493,Merge pull request #3900 from hashicorp/fix-monitor-sigint-3891,Fixes #3891: agent monitor no longer unresponsive before logs stream.
12494,Update CHANGELOG,
12495,Merge pull request #3909 from hashicorp/b-leaderloop-revokeonerror,Make sure revokeLeadership is called if establishLeadership errors
12496,Remove extra newline,
12497,Unit test that calls revokeLeadership twice to make sure its idempotent,
12498,Make sure revokeLeadership is called if establishLeadership errors,
12499,Merge pull request #3908 from hashicorp/f-improved-autopilot-shutdown,Improve autopilot shutdown to be idempotent
12500,Test autopilots start/stop idempotency,
12501,Travis evaluates ENV before cloning git repo and cding so we need to delay gathering packages until the makefile,
12502,Use relative paths as Travis doesn't setup GOPATH right,
12503,Split the heavy test packages out to their own Jobs.,
12504,Try parallel packages but not tests,
12505,Improve autopilot shutdown to be idempotent,
12506,Fixed comments for function maxIndexForService,
12507,[Revert] Only update services if tags are different,"This patch did give some better results, but break watches on the services of a node. It is possible to apply the same optimization for nodes than to services (one index per instance), but it would complicate further the patch. Let's do it in another PR."
12508,Only update services if tags are different,
12509,try enabling sudo in Travis to run builds in GCE,https://docs.travis-ci.com/user/reference/overview/#Virtualisation-Environment-vs-Operating-System
12510,Portability!,
12511,Only output sparse lines to keep Travis happy while logging verbosely to disk,
12512,Output from test as we run to stop travis killing us and try no parallelism to avoid timing issues on their contended CPUs,
12513,"Improve travis parameters to avoid flacky tests, use -p 3",
12514,Improve travis parameters to avoid flacky tests,
12515,Enable Raft index optimization per service name on health endpoint,Had to fix unit test in order to check properly indexes.
12516,[Revert] Do not run tests in parallel since it breaks randomly,This is causing timeouts on Travis (more than 10min tests)
12517,Do not run tests in parallel since it breaks randomly,
12518,Fixes #3891: agent monitor no longer unresponsive before logs stream.,"The root cause is actually that the agent's streaming HTTP API didn't flush until the first log line was found which commonly was pretty soon since the default level is INFO. In cases where there were no logs immediately due to level for instance, the client gets stuck in the HTTP code waiting on a response packet from the server before we enter the loop that checks the shutdown channel from the signal handler. This fix flushes the initial status immediately on the streaming endpoint which lets the client code get into it's expected state where it's listening for shutdown or log lines."
12519,Get only first service to test whether we have to cleanup index of a service,
12520,Fixed comment about raftIndex + use test.Helper(),
12521,Merge remote-tracking branch 'origin/master' into fix_blocking_queries_index,
12522,Services Indexes modified per service instead of using a global Index,"This patch improves the watches for services on large cluster: each service has now its own index, such watches on a specific service are not modified by changes in the global catalog. It should improve a lot the performance of tools such as consul-template or libraries performing watches on very large clusters with many services/watches."
12523,Merge pull request #3894 from hashicorp/anubhavmishra-patch-1,fix typo
12524,fix typo,
12525,Clarify comments,
12526,Test every endpoint for OPTIONS/MethodNotFound,
12527,Allow endpoints to handle OPTIONS/MethodNotFound themselves,
12528,Initialise allowedMethods in init(),
12529,Update CHANGELOG.md,
12530,Merge pull request #3892 from hashicorp/coordinate-acl-fix,Fix the coordinate update endpoint not passing the ACL token
12531,Fix the coordinate update endpoint not passing the ACL token,
12532,Merge pull request #3889 from arthurlogilab/patch-1,[demo/vagrant-cluster] upgrade from jessie to stretch
12533,Merge pull request #3888 from hashicorp/fix-doc-typos,Fix a couple of minor typos found in docs.
12534,[demo/vagrant-cluster] upgrade from jessie to stretch,
12535,Fix a couple of minor typos found in docs.,
12536,Support OPTIONS requests," register endpoints with supported methods support OPTIONS requests, indicating supported methods extract method validation (error 405) from individual endpoints on 405 where multiple methods are allowed, create a single Allow   header with comma-separated values, not multiple Allow headers."
12537,Updated Stale Reads section of DNS Caching Guide,I updated the content based on discussion with James Phillips in #team-connect on 2/8/2018.
12538,adding human readability for dns requests debug log (#3751),
12539,Update check script exit code explanation (#3882),"Change misleading formulation which might imply, that any non-zero code is enough to mark check as failing. (https://www.consul.io/docs/agent/checks.html#check-scripts)"
12540,Added ServiceMeta documentation in website source,
12541,Merge remote-tracking branch 'origin/master' into service_metadata,
12542,Fixed TestSanitize unit test,
12543,Add gRPC fields to client api and agent check endpoint docs,
12544,Puts the tree back into dev mode,
12545,Updates download version to 1.0.6,
12546,Release v1.0.6,
12547,Puts tree in release mode for 1.0.6,
12548,Update CHANGELOG.md,
12549,Bumps Go version back down to 1.9.3.,See #3879.
12550,Updates the change log.,
12551,Merge pull request #3878 from hashicorp/issue-3877,Fixes a panic on TCP-based DNS lookups.
12552,Fixes a panic on TCP-based DNS lookups.,This came in via the monkey patch in #3861. Fixes #3877
12553,Adds a basic INTERNALS.md guide with some pointers into the code.,
12554,Added unit tests for structs and fixed PartialClone(),
12555,Update CHANGELOG.md,
12556,Fix panic in azure go discover provider (#3876),
12557,Merge pull request #3873 from hashicorp/travis-redux,Makes Travis build a little more reliable.
12558,Bumps the standard retry up.,
12559,Makes Travis build run less parallel.,This makes it run less packages in parallel as well as less parallel tests per package.
12560,Updates the change log.,
12561,Merge pull request #3872 from hashicorp/go-1.9.4,Bumps Go version to 1.9.4.
12562,Bumps Go version to 1.9.4.,
12563,Puts tree back in dev mode,
12564,Update CHANGELOG,
12565,Bump download version to 1.0.5,
12566,Release v1.0.5,
12567,Puts version in 1.0.5 release mode,
12568,Update CHANGELOG with release date,
12569,Update CHANGELOG.md,
12570,Updates the change log.,
12571,Merge pull request #3867 from hashicorp/churn-fix,Fixes accidental state store updates from output-side fixups.
12572,Switches to HashiCorp fork of jteeuwen/go-bindata.,"This was reported in #3868. We make a HashiCorp hard fork of the jteeuwen/go-bindata hard fork that was replaced and diffed the code against a Dec 1, 2015 copy of the original repository we had as a cross-check of that hard fork. This replaces references to jteeuwen/go-bindata to point to the HashiCorp fork. Fixes #3868"
12573,Addresses additional state mutations.,Did a sweep of https://github.com/hashicorp/consul/commit/84d6ac2d51eb9ef5fdfb291fdf0a479d3e6885d1 and checked them all.
12574,Fixes all the racy output-side updates to tags.,
12575,Adds a more robust unit test for index churn.,
12576,Rolls back to 1.0.3 release for downloads.,
12577,Added support for Service Metadata,
12578,Puts version.go into dev mode,
12579,Puts the tree back into dev mode,
12580,Update version for downloads,
12581,Release v1.0.4,
12582,Bumps tree to 1.0.4 release mode,
12583,Release prep,
12584,Updates the change log.,
12585,Merge pull request #3864 from hashicorp/proactive-fail,Makes server manager shift away from failed servers from Serf events.
12586,Makes server manager shift away from failed servers from Serf events.,"Because this code was doing pointer equality checks, it would work for the case of a failed attempted RPC because the objects are from the manager itself: https://github.com/hashicorp/consul/blob/v1.0.3/agent/consul/rpc.go#L283-L302 But the pointer check would always fail for events coming in from the Serf path because the server object is newly-created: https://github.com/hashicorp/consul/blob/v1.0.3/agent/router/serf_adapter.go#L14-L40 This means that we didn't proactively shift RPC traffic away from a failed server, we'd have to wait for an RPC to fail, which exposes the error to the calling client. By switching over to a name check vs. a pointer check we get the correct behavior. We added a DEBUG log as well to help observe this behavior during integrated testing. Related to #3863 since the fix here needed the same logic duplicated, owing to the complicated atomic stuff. /cc @dadgar for a heads up in case this also affects Nomad."
12587,Updates the change log.,
12588,Adds a before/after test for #3845.,
12589,Merge pull request #3845 from 42wim/tagfix,Fix service tags not added to health check. Part two
12590,Moved DNS vendor update to security section,
12591,Update CHANGELOG.md,
12592,Update CHANGELOG,
12593,Patch dns vendor code for picking up a TCP DOS attack bugfix (#3861),
12594,Update CHANGELOG.md,
12595,Update CHANGELOG.md,
12596,Pull http config flag merge into public method,
12597,Merge pull request #3858 from hashicorp/enterprise-defaults,Add enterprise default config section
12598,Add enterprise default config section,
12599,Updates the change log.,
12600,Merge pull request #3855 from hashicorp/pr-3782-slackpad,Adds support for gRPC health checks.
12601,Adds documentation for gRPC health checks.,
12602,"Changes ""TLS"" to ""GRPCUseTLS"" since it only applies to GRPC checks.",
12603,Merge pull request #3840 from KosToZyB/master,remove golint warnings
12604,Clarification around locking (#3853),
12605,Fix service tags not added to health check. Part two,
12606,fix refactoring,
12607,fix refactoring,
12608,remove golint warnings,
12609,Merge pull request #3839 from yfouquet/change_jvm_httpclient,Adjust link to Java HTTP API
12610,Adjust link to Java HTTP API,OrbitzWorldwide/consul-client has moved to rickfast/consul-client.
12611,Improves user lookup error message.,Closes #3188 Closes #3184
12612,Remove nonvoter from metadata.Server,
12613,Gets rid of named return parameters.,This wasn't wrong before but we don't generally use this style in Consul.
12614,Moves non-stdlib includes into their own section.,
12615,Merge pull request #3819 from burdandrei/docker-compose-demo,docker-compose based demo
12616,Merge pull request #3833 from szemek/curl-binary,"Documentation KV Create/upload key, upload binary data or file with line breaks via curl"
12617,Updates the change log.,
12618,Merge pull request #3837 from hashicorp/bump-go,Bumps Go version to 1.9.3.
12619,Bumps Go version to 1.9.3.,
12620,Bumps to latest middleman-hashicorp version.,
12621,Puts the tree into 1.0.4 dev mode.,
12622,Bumps website Consul version to 1.0.3.,
12623,Release v1.0.3,
12624,Puts the tree into 1.0.3 release mode.,
12625,Updates the change log.,
12626,Update kv.html.md,
12627,Removes obsolete bash/zsh completion scripts.,"Consul can now set this up for you, see https://www.consul.io/docs/commands/index.html#autocompletion."
12628,Reset clusterHealth when autopilot starts,
12629,Merge pull request #3831 from hashicorp/slackpad-patch-1,Adds a link to Consul Enterprise in the README.
12630,Adds a link to Consul Enterprise in the README.,
12631,Merge pull request #3830 from hashicorp/autopilot-health-loop,Move autopilot health loop into leader operations
12632,Move autopilot health loop into leader operations,
12633,Updates web assets to latest.,
12634,Update CHANGELOG.md,
12635,Merge pull request #3821 from hashicorp/persist-file-handling,Add graceful handling of malformed persisted service/check files.
12636,Merge pull request #3815 from johncowen/b-erroneous-p-tag,Fixes erroneous closed  tag
12637,Merge pull request #3825 from kalafut/master,Fix broken link to SWIM paper
12638,Fix broken link to SWIM paper,
12639,Updates the change log.,
12640,Merge pull request #3824 from hashicorp/azure-vmss,Adds retry-join support for Azure Virtual Machine Scale Sets.
12641,Updates configuration docs for Azure VMSS support.,
12642,Updates hashicorp/go-discover to pull in support for Azure Virtual Machine Scale Sets.,
12643,Updates the change log.,
12644,Merge pull request #3822 from hashicorp/rtt-spam,Updates Serf to pickup fix for spammy zero RTT log messages.
12645,Update CHANGELOG.md,
12646,Merge pull request #3820 from hashicorp/serfwan-port-fix,Enforce a valid port for the Serf WAN since it can't be disabled.
12647,Moves the coordinate fetch after the ACL check.,
12648,Updates Serf to pickup fix for spammy zero RTT log messages.,Fixes #3789.
12649,"Don't remove the files, just log an error",
12650,Enforce a valid port for the Serf WAN since it can't be disabled.,Fixes #3817
12651,Add graceful handling of malformed persisted service/check files.,"Previously a change was made to make the file writing atomic, but that wasn't enough to cover something like an OS crash so we needed something here to handle the situation more gracefully. Fixes #1221."
12652,docker-compose based demo,
12653,Update CHANGELOG.md,
12654,Merge pull request #3799 from fastest963/fileNotDir,Resolve symlinks in config directory
12655,Fixes erroneous closed  tag,
12656,Update external.html.md,
12657,Resolve symlinks in config directory,"Docker/Openshift/Kubernetes mount the config file as a symbolic link and IsDir returns true if the file is a symlink. Before calling IsDir, the symlink should be resolved to determine if it points at a file or directory. Fixes #3753"
12658,Reorders the issue template.,
12659,Update CHANGELOG.md,
12660,Updates the change log.,
12661,Merge pull request #3788 from fastest963/checkID,Added CheckID and Name to AgentServiceCheck struct
12662,Merge pull request #3794 from hashicorp/tls-cleanup,Removes stale TLS config clone() in favor of new supported method.
12663,Removes stale TLS config clone() in favor of new supported method.,
12664,Updates the change log.,
12665,Merge pull request #3793 from hashicorp/node-id,Adds the NodeID field back to the /v1/agent/self Config block.
12666,Adds the NodeID field back to the /v1/agent/self Config block.,Fixes #3778
12667,Adds more info about how to fix the private IP error.,Closes #3790
12668,Merge pull request #3792 from hashicorp/issue-3791,Fixes crash where body was optional for PQ endpoint (it is not).
12669,Updates the change log.,
12670,Fixes crash where body was optional for PQ endpoint (it is not).,Fixes #3791
12671,Merge pull request #3787 from kopaka/patch-2,Corrected word order sequence
12672,Updates builder to newer Ubuntu version.,
12673,Updates website Ruby gems to get newer nokogiri.,
12674,Added CheckID and Name to AgentServiceCheck struct,
12675,Corrected word order sequence,Also removed a couple of extraneous spaces.
12676,Merge pull request #3786 from jamesearl/docs/prefix-filter-dead-link,fix dead telemetry prefix filter link
12677,fix dead telemetry prefix filter link,
12678,Merge pull request #3785 from whit537/over-parallelization,Provide hint about test over-parallelization
12679,Provide hint about test over-parallelization,
12680,Fix typo,
12681,Updates the change log.,
12682,Updates the change log.,
12683,Updates the change log.,
12684,Merge pull request #3765 from diptanu/f-agent-telemetry,Added telemetry around Catalog APIs
12685,Merge pull request #3781 from whit537/default-GOPATH,Allow for default GOPATH
12686,Update CHANGELOG.md,
12687,Merge pull request #3783 from whit537/doc-tweaks,Fix some small doc errors
12688,Fix some small doc errors,
12689,Add gRPC health-check #3073,
12690,Allow for default GOPATH,
12691,Merge pull request #3770 from akrymets/patch-1,Update checks.html.md
12692,Update checks.html.md,
12693,Merge pull request #3775 from bagerard/fix_doc,fix in documentation
12694,Merge pull request #3776 from rskrishnar/add-missing-part-of-doc,add missing 'Port' description in register service doc
12695,Merge pull request #3780 from hashicorp/monkey-patch-trace,Updates go-discover to get monkey patch for golang.org/x/net/trace.
12696,Updates go-discover to get monkey patch for golang.org/x/net/trace.,
12697,add missing Port description in register service doc,
12698,fix in documentation,
12699,Update checks.html.md," Replace deprecated ""script"" option with ""args"" in check definition examples (Not sure in correctness of arguments splitting)"
12700,Updated docs,
12701,Using labels,
12702,Added docs,
12703,Added telemetry around Catalog APIs,
12704,Merge pull request #3763 from hashicorp/handlebars-patch,Patches handlebars JS to escape = to prevent XSS.
12705,Updates the change log.,
12706,Updates the checked in web assets.,
12707,Manually patches handlebars JS to escape = to prevent XSS.,
12708,Updates the built-in web assets.,
12709,Fixes a JS error that came in as part of #3760.,
12710,Merge pull request #3762 from hashicorp/ban-nonprint,Wraps HTTP mux to ban all non-printable characters from paths.
12711,Updates the change log.,
12712,Wraps HTTP mux to ban all non-printable characters from paths.,
12713,Updates hashicorp/go-cleanhttp to pick up new sanitizer.,
12714,Merge pull request #3760 from hashicorp/ui-updates,Updates the web UI to escape invalid characters in keys.
12715,Updates the change log.,
12716,Updates the built-in web UI assets.,
12717,Fixes a go fmt cleanup.,
12718,Wraps the key in a property that URL encodes it.,
12719,Update community.html.erb,
12720,Fix vet error,
12721,Move autopilot initializing to oss file,
12722,Move autopilot setup to a separate file,
12723,Make some final tweaks to autopilot package,
12724,Merge pull request #3737 from hashicorp/autopilot-refactor,Move autopilot to a standalone package
12725,Puts the tree in 1.0.3 dev mode.,
12726,Bumps website version to 1.0.2.,
12727,Release v1.0.2,
12728,Puts the tree into 1.0.2 release mode.,
12729,Update CHANGELOG.md,
12730,Update CHANGELOG.md,
12731,Updates the change log.,
12732,Merge pull request #3728 from weiwei04/fix_globalRPC_goroutine_leak,fix globalRPC goroutine leak
12733,Updates the change log.,
12734,Merge pull request #3646 from posener/update-complete,vendor: update complete version to v1.1
12735,Merge pull request #3740 from yfouquet/issue_3709,"Update documentation for ""serf_lan_bind"" and ""serf_wan_bind"""
12736,Merge pull request #3749 from tjcelaya/rpc-warning-datacenter-guide,Clarify RPC listen address usage in Basic WAN guide
12737,Updates the change log.,
12738,Merge pull request #3750 from hashicorp/kv-get-base64,Adds -base64 support to kv get command.
12739,Adds -base64 support to kv get command.,Fixes #3736
12740,Updates the change log.,
12741,Merge pull request #3642 from yfouquet/master,[Fix] Service tags not added to health checks
12742,Updates the change log.,
12743,Merge pull request #3747 from hashicorp/session-checks,Works around mapstructure behavior to enable sessions with no checks.
12744,Include a warning about the interaction between translate_wan_addrs and bind_addr in the Basic WAN guide.,
12745,Tightens up the API test verification.,
12746,Works around mapstructure behavior to enable sessions with no checks.,Fixes #3732
12747,Updates the change log.,
12748,Merge pull request #3746 from hashicorp/node-meta-merge,Changes maps to merge vs. overwrite when processing configs.
12749,Expose IsPotentialVoter for advanced autopilot logic,
12750,Changes maps to merge vs. overwrite when processing configs.,Fixes #3716
12751,Updates the change log.,
12752,Merge pull request #3745 from hashicorp/restore-timeout,Removes timeout when restoring snapshots.
12753,Removes timeout when restoring snapshots.,"Fixes #3326 Originally I started out making this configurable, but realized it wasn't worth the complexity. If you are restoring a snapshot, you really need to wait until it's done, or something bad happens like losing leadership, which will already trigger an error. Rather than have operators have to tune this to cover whatever their snapshot size is, we just make it block here. There's also already a bocking barrier right after the restore that hasn't been a problem."
12754,Merge branch 'master' into autopilot-refactor,
12755,Updates the change log.,
12756,Merge pull request #3743 from hashicorp/autopilot-config,Copies the autopilot settings from the runtime config.
12757,A few last autopilot adjustments,
12758,More autopilot reorganizing,
12759,Adds TODOs referencing #3744.,
12760,Copies the autopilot settings from the runtime config.,Fixes #3730
12761,More refactoring to make autopilot consul-agnostic,
12762,"Update documentation for ""serf_lan_bind"" and ""serf_wan_bind""","These was spotted in issue #3709. These two configuration elements were renamed ""serf_lan"" and ""serf_wan"" in commit https://github.com/hashicorp/consul/commit/12216583a124e25de630fb8d3e96ed0c7b431142 Update documentation to fit the new code. Note that flags ""-serf-lan-bind"" and ""-serf-wan-bind"" were not renamed."
12763,Adjust documentation for service tags of checks,Add some missing ServiceTags. Replace null ServiceTags by empty list (ServiceTags cannot be null).
12764,[Fix] Service tags not added to health checks,"Since commit 9685bdcd0ba4b4b3adb04f9c1dd67d637ca7894e, service tags are added to the health checks. Otherwise, when adding a service, tags are not added to its check. In updateSyncState, we compare the checks of the local agent with the checks of the catalog. It appears that the service tags are different (missing in one case), and so the check is synchronized. That increase the ModifyIndex periodically when nothing changes. Fixed it by adding serviceTags to the check. Note that the issue appeared in version 0.8.2. Looks related to #3259."
12765,Move autopilot to a standalone package,
12766,Merge pull request #3735 from youngjl1/master,Name correction in documentation
12767,Name correction in documentation,
12768,Moves Serf helper into lib to fix import cycle in consul-enterprise.,
12769,Updates the change log.,
12770,Merge pull request #3731 from hashicorp/intent-queue,Turns of intent queue warnings and enables dynamic queue sizing for Serf.
12771,Turns of intent queue warnings and enables dynamic queue sizing.,
12772,Updates Serf to pull in new queue depth controls.,
12773,Updates the change log.,
12774,fix globalRPC goroutine leak,Signed-off-by: Wei Wei weiwei.inf@gmail.com
12775,Merge pull request #3720 from hashicorp/fork-friendly,Restructures Consul to make it easier to maintain the Consul Enterprise fork.
12776,Creates a registration mechanism for snapshot and restore.,
12777,Begins split out of snapshots from the main FSM class.,
12778,Creates a registration mechanism for FSM commands.,
12779,Moves the FSM into its own package.,This will help make it clearer what happens when we add some registration plumbing for the different operations and snapshots.
12780,Resolves an FSM snapshot TODO.,"This adds checks for sink write calls before we continue the refactor, which will resolve the other TODO comment we deleted as part of this change."
12781,Creates a registration mechanism for schemas.,This also splits out the registration into the table-specific source files.
12782,Creates a registration mechanism for RPC endpoints.,
12783,Creates HTTP endpoint registry.,
12784,Moves coordinate disabled logic down into endpoints.,Similar rationale to the previous change for ACLs.
12785,Moves ACL disabled response logic down into endpoints.,"This lets us make the registration of endpoints less fancy, on the road to adding a registration mechanism."
12786,Adds a registry mechanism for CLI commands.,
12787,"Renames ""segments"" to ""segment"" to be consistent with other files.",
12788,Renames stubs to be more consistent.,
12789,Gets rid of obsolete configtest exception.,
12790,Bumps freeport's block size.,"We were seeing some rollover artifacts where something would be shut down so a port could be re-used, but it was still being referenced by some running thing. This gives more time before rolling over."
12791,Updates the change log.,
12792,Merge pull request #3719 from hashicorp/issue-3670,Sheds monotonic time info so tombstone GC bins work properly.
12793,Sheds monotonic time info so tombstone GC bins work properly.,
12794,Updated memberlist to fix negative RTT measurements.,Fixes #3704
12795,Merge pull request #3702 from issmirnov/patch-1,Fix syntax error.
12796,Fix syntax error.,"Running consul 1.0.0, 'consul operator raft' requires 'list-peers' rather than '-list-peers'"
12797,Puts the tree into 1.0.2 dev mode.,
12798,Bumps website version to 1.0.1.,
12799,Release v1.0.1,
12800,Puts the tree into 1.0.1 release mode.,
12801,Adds a version note about rolling updates.,
12802,Updates the change log.,
12803,Merge pull request #3701 from hashicorp/issue-3700,Gives back the lock before writing to the expire channel.
12804,Gives back the lock before writing to the expire channel.,"The lock isn't needed after we clean up the expire bin, and as seen in #3700 we can get into a deadlock waiting to place the expire index into the channel while holding this lock. Fixes #3700"
12805,Merge pull request #3698 from amitsaha/fix-tag-doc,Update documentation for tag filter
12806,Update documentation for tag filter,
12807,Update CHANGELOG.md,
12808,Release v1.0.1-rc1,
12809,Merge pull request #3686 from hashicorp/skip-unknown,Skips files with unknown extensions when not forcing a format.
12810,Skips files with unknown extensions when not forcing a format.,Fixes #3685
12811,Puts the tree into 1.0.1-rc1 release mode.,
12812,Merge pull request #3684 from hashicorp/ignore-snap,Makes consul agent ignore co-located snapshot agent configs.
12813,Updates the change log.g,
12814,Adds a snapshot agent stub to the config structure.,Fixes #3678
12815,Opens up the timing on the metrics test so it's less flaky.,
12816,Updates the change log.,
12817,Merge pull request #3683 from hashicorp/check-logging-redux,Cleans up check logging.
12818,Cleans up check logging.,"There were places where we still didn't have the script vs. args sorted correctly so changed all the logging to be just based on check IDs and also made everything uniform. Also removed some annoying debug logging, and moved some of the large output logging to TRACE level. Closes #3602"
12819,Merge pull request #3682 from hashicorp/issue-3680,Moves the LAN event handler after the router is created.
12820,Updates the change log.,
12821,Moves the LAN event handler after the router is created.,Fixes #3680
12822,Updates the change log.,
12823,Merge pull request #3681 from hashicorp/update-memberlist,Updates memberlist to pick up https://github.com/hashicorp/memberlist/pull/69.
12824,Updates memberlist to pick up https://github.com/hashicorp/memberlist/pull/69.,Fixes #3671
12825,Delete development_config.json,
12826,Update CHANGELOG.md,
12827,Merge pull request #3673 from hashicorp/revert-3672-gc-flake,"Revert ""Adds a small sleep to make sure we are in the next GC bucket."""
12828,"Revert ""Adds a small sleep to make sure we are in the next GC bucket.""",
12829,Merge pull request #3672 from hashicorp/gc-flake,Adds a small sleep to make sure we are in the next GC bucket.
12830,"Adds a sleep to make sure we are in the next GC bucket, ups time.",Fixes #3670
12831,Skips the tombstone GC test in Travis for now.,Related to #3670
12832,Update CHANGELOG.md,
12833,Adds missing os import.,
12834,Removes bogus getPort() in favor of freeport.,
12835,Gets rid of full log in Travis for now.,
12836,Skips IPv6 test in Travis.,
12837,Adds a longer retry period for the AE deferred output test.,There's some justification in the comments about this and a TODO to improve this later. Fixes #3668
12838,Tightens timing up and reorders GC test to be less flaky.,
12839,Doubles the GC timing.,
12840,Opens up test timing a little more.,
12841,Shifts off a gran boundary to help make test less flaky.,
12842,Opens up the tombstone GC test timing.,
12843,vendor: update complete version to v1.1,"Update posener/complete to revision=v1.1. Leave only once occurrence of posener/complete in vendor, there was an occurrence for each package individualy. The formatting of vendor/vendor.json has changed after using the command ""govendor fetch github.com/posener/complete@=v1.1"""
12844,Updates the change log.,
12845,Merge pull request #3663 from hashicorp/go-1.9.2,Bumps Go version to 1.9.2.
12846,Bumps Go version to 1.9.2.,
12847,Adds doc links to the change log.,
12848,Updates the change log.,
12849,Adds enable_agent_tls_for_checks configuration option which allows (#3661),HTTP health checks for services requiring 2-way TLS to be checked using the agent's credentials.
12850,Updates the change log.,
12851,Saves the cycled server list after a failed ping when rebalancing. (#3662),Fixes #3463
12852,Updates the change log.,
12853,"Double-books the HTTP metrics w/ and w/o the ""consul"" prefix.",Fixes #3654
12854,Update CHANGELOG.md,
12855,Adds HTTP/2 support to Consul's HTTPS server. (#3657),  Refactors the HTTP listen path to create servers in the same spot.   Adds HTTP/2 support to Consul's HTTPS server.   Vendors Go HTTP/2 library and associated deps. 
12856,Makes the metrics ACL test call the right endpoint.,This also required setting up a proper in-mem sink so we don't get metrics-related errors. Fixes #3655
12857,Fetches metrics in the retry loop so there's some hope.,Fixes #3656
12858,"Sets tty in docker client back to true, as a potential fix for docker exec weirdness",
12859,Merge pull request #3643 from jhmartin/changelog_rfc1434,"Update CHANGELOG, as GH-3343 references RFC1464 not 1434."
12860,"Update CHANGELOG, as GH-3343 references RFC1464 not 1434.",
12861,Update atlas.html.md,
12862,Merge pull request #3636 from hashicorp/esm-changes,Add coordinate update endpoint and http/tcp check fields
12863,Update AgentCheck struct in api,
12864,Move check definition to a sub-struct,
12865,Merge branch 'master' into esm-changes,
12866,Merge pull request #3622 from hashicorp/coordinate-node-endpoint,agent: add /v1/coordianate/node/:node endpoint
12867,Remove redundant lines from coordinate test,
12868,Update coordinates.html.md,
12869,Updates the change log.,
12870,vendor: update github.com/hashicorp/go-sockaddr (#3633),Pull in changes for  hashicorp/go-sockaddr#12 hashicorp/go-sockaddr#13 hashicorp/go-sockaddr#14 hashicorp/go-sockaddr#16
12871,Fill out the tests around coordinate/node functionality,
12872,Updates the change log.,
12873,config: add -config-format option (#3626), config: refactor ReadPath(s) methods without side-effects  Return the sources instead of modifying the state.   config: clean data dir before every test   config: add tests for config-file and config-dir   config: add -config-format option   Starting with Consul 1.0 all config files must have a '.json' or '.hcl' extension to make it unambigous how the data should be parsed. Some automation tools generate temporary files by appending a random string to the generated file which obfuscates the extension and prevents the file type detection. This patch adds a -config-format option which can be used to override the auto-detection behavior by forcing all config files or all files within a config directory independent of their extension to be interpreted as of this format. Fixes #3620
12874,Updates the change log.,
12875,vendor: update go-discover (#3634)," vendor: update go-discover  Pull in providers:  Aliyun (Alibaba Cloud) Digital Ocean OpenStack (os)  Scaleway   doc: use ... instead of xxx   doc: strip trailing whitespace   doc: add docs for aliyun, digitalocean, os and scaleway   agent: fix test "
12876,Factor out registerNodes function,
12877,Updates the change log.,
12878,Relaxes Autopilot promotion logic. (#3623)," Relaxes Autopilot promotion logic.  When we defaulted the Raft protocol version to 3 in #3477 we made the numPeers() routine more strict to only count voters (this is more conservative and more correct). This had the side effect of breaking rolling updates because it's at odds with the Autopilot non-voter promotion logic. That logic used to wait to only promote to maintain an odd quorum of servers. During a rolling update (add one new server, wait, and then kill an old server) the dead server cleanup would still count the old server as a peer, which is conservative and the right thing to do, and no longer count the non-voter. This would wait to promote, so you could get into a stalemate. It is safer to promote early than remove early, so by promoting as soon as possible we have chosen that as the solution here. Fixes #3611  Gets rid of unnecessary extra not-a-voter check."
12879,Merge pull request #3632 from hashicorp/b-rate-scale,Integer division rounding to zero for rate scaling
12880,docker: fix failing test,
12881,docker: render errors with %v since they can be nil,
12882,Update cluster.go,
12883,Integer division rounding to zero for rate scaling,This fixes an issue in which integer division was scaling down to zero.
12884,Fix a panic in snapshot inspect command,
12885,Add docs for the coordinate update endpoint,
12886,Add tests around coordinate update endpoint,
12887,Merge branch 'coordinate-node-endpoint' of github.com:hashicorp/consul into esm-changes,
12888,Added Coordinate.Node rpc endpoint and client api method,
12889,Update CHANGELOG.md,
12890,Update CHANGELOG.md,
12891,Merge pull request #3621 from hashicorp/issue-3576-docker-check-flaps,"Docker check flaps with ""connection reset by peer"""
12892,agent: add /v1/coordianate/node/:node endpoint,This patch adds a /v1/coordinate/node/:node endpoint to get the network coordinates for a single node in the network. Since Consul Enterprise supports network segments it is still possible to receive mutiple entries for a single node - one per segment.
12893,"docker: add comment about ""connection reset by peer"" error",
12894,docker: stop previous check on replace,
12895,docker: close idle connections on stop,
12896,docker: do not alloc a tty since this is not interactive,
12897,docker: make sure to log the error when we fall through,
12898,"docker: ignore ""connection reset by peer""","The Docker agent closes the connection during read after we have read the body. This causes a ""connection reset by peer"" even though the command was successful. We ignore that error here since we got the correct status code and a response body."
12899,Add deregister critical service field and refactor duration parsing,
12900,Merge pull request #3618 from hashicorp/b-lazy-freeport,Initialize freeport lazily to avoid runtime issues
12901,Initialize freeport lazily to avoid runtime issues,This PR makes freeport initialize lazily rather than using an init method.
12902,Adds retry to API metrics test (flaky test).,
12903,Added coordinate update http endpoint,
12904,Added remaining HTTP health check fields to structs,
12905,Expose SkipNodeUpdate field and some health check info in the http api,
12906,Merge pull request #3612 from hashicorp/decouple-checks-from-agent,Decouple the code that executes checks from the agent
12907,fix go vet issue,
12908,replace custom unique id with a UUID,
12909,Decouple the code that executes checks from the agent,
12910,Merge pull request #3610 from hashicorp/fix-skipped-tests,Fix skipped tests
12911,agent: fix TestRetryJoin,
12912,agent: fix TestRetryJoinFail,
12913,agent: fix TestRetryJoinWanFail,
12914,watch: make sure invoke channels timeout evenutally,
12915,watch: run tests in parallel,
12916,watch: convert TestEventWatch to use channels,
12917,watch: convert TestKeyPrefixWatch to use channels,
12918,watch: convert TestKeyWatch_With_PrefixDelete to use channels,
12919,watch: convert TestKeyWatch to use channels,
12920,watch: convert TestChecksWatch_Service to use channels,
12921,watch: convert TestChecksWatch_State to use channels,
12922,watch: convert TestServicesWatch to use channels,
12923,watch: convert TestServiceWatch to use channels,
12924,watch: convert TestNodesWatch to use channels,
12925,watch: use test agent instead of external Consul instance,
12926,Update CHANGELOG.md,
12927,Update CHANGELOG.md,
12928,Merge pull request #3609 from hashicorp/f-freeport-testing,Make freeport testing friendly
12929,format vendor,
12930,Make freeport testing friendly,"This PR allows the caller to decide if they would like to have the calling test fail, have the caller panic on error, or handle the errors themselves."
12931,Update CHANGELOG.md,
12932,Update CHANGELOG.md,
12933,Update README.md,Mention vendorfmt in the Vendoring section.
12934,"Changes ""ip"" to ""IP"".",
12935,Merge pull request #3391 from hashicorp/refactor-local-state-2,This patch decouples the local state and the anti-entropy code from the agent and from each other to have cleaner separation of concerns and to ensure that data structures are properly locked.
12936,local state: fix go vet issue,
12937,local state: remove stale comment,
12938,local state: make test more robust,
12939,local state: clone check to avoid side effect,
12940,local state: use synchronized access to internal maps,
12941,ae: do not trigger on Resume while holding the lock,
12942,ae: add remaining test cases,
12943,ae: refactor StateSyncer to state machine for better testing,
12944,ae: add test that we run a full before a partial sync,
12945,ae: make control flow more explicit,
12946,ae: fix typo in constructor name,
12947,ae: add test for resume triggering SyncChanges,
12948,ae: add test for ifNotPausedRun,
12949,ae: make stagger function pluggable for testing,
12950,ae: restore previous pause/resume behavior,
12951,ae: ensure that syncs are blocked when paused,
12952,"local state: rename Add{Check,Service}State to Set{Check,Service}State",
12953,local state: move Metadata methods together,
12954,local state: update documentation of updateSyncState,
12955,local state: update comments,
12956,local state: address review comments, move non-blocking notification mechanism into ae.Trigger move Pause/Resume into separate type
12957,local state: refactor TestAgentAntiEntropy_EnableTagOverride,Make intent clearer by being more explicit and adding some comments. Use verify.Values to compare service entries.
12958,local state: fix TestAgentAntiEntropy_EnableTagOverride,The test had a race condition where it relied on the first service to be synced to the remote catalog which sometimes failed.
12959,local state: rename tests,
12960,local state: drop retry loops from tests,Since the tests are now using synchronous calls for state syncing we no longer need to use retry loops to wait for the changes to propagate.
12961,agent: skip non-sensical TestCatalogRegister,It is not clear what this test is supposed to verify.
12962,local state: fix anti-entropy state tests,The anti-entropy tests relied on the side-effect of the StartSync() method to perform a full sync instead of a partial sync. This lead to multiple anti-entropy go routines being started unnecessary retry loops. This change changes the behavior to perform synchronous full syncs when necessary removing the need for all of the time.Sleep and most of the retry loops.
12963,local state: fix test with updated error message,
12964,local state: fix failing tests,
12965,local state: tests compile,
12966,local state: replace multi-map state with structs,The state of the service and health check records was spread out over multiple maps guarded by a single lock. Access to the maps has to happen in a coordinated effort and the tests often violated this which made them brittle and racy. This patch replaces the multiple maps with a single one for both checks and services to make the code less fragile. This is also necessary since moving the local state into its own package creates circular dependencies for the tests. To avoid this the tests can no longer access internal data structures which they should not be doing in the first place. The tests still don't compile but this is a ncessary step in that direction.
12967,local state: move to separate package,This patch moves the local state to a separate package to further decouple it from the agent code. The code compiles but the tests do not yet.
12968,agent: simplify some loops,
12969,agent: refactor sync loop to linear flow of control,
12970,agent: cleanup StateSyncer,"This patch cleans up the state syncer code by renaming fields, adding helpers and documentation."
12971,agent: decouple anti-entropy from local state,"The anti-entropy code manages background synchronizations of the local state on a regular basis or on demand when either the state has changed or a new consul server has been added. This patch moves the anti-entropy code into its own package and decouples it from the local state code since they are performing two different functions. To simplify code-review this revision does not make any optimizations, renames or refactorings. This will happen in subsequent commits."
12972,Merge pull request #3585 from hashicorp/document-runtime-config,Moving the previous agent/config.go documentation to agent/config/runtime.go.
12973,Merge pull request #3598 from hashicorp/issue-3397-error-with-extra-flags,"The consul agent command was ignoring extra command line arguments which can lead to confusion when the user has for example forgotten to add a dash in front of an argument or is not using an = when setting boolean flags to true. -bootstrap true is not the same as -bootstrap=true, for example. Since all command line flags are known and we don't expect unparsed arguments we can return an error. However, this may make it slightly more difficult in the future if we ever wanted to have these kinds of arguments. Fixes #3397"
12974,Merge pull request #3600 from hashicorp/support-go-sockaddr-for-dns-recursors,DNS recursors can be added through go-sockaddr templates. Entries are deduplicated while the order is maintained. Originally proposed by @taylorchu See #2932
12975,"Revert ""config: add support for go-sockaddr templates for DNS recursors""",This reverts commit 72bee6284d44e0ed3e18e6819188f1d32528478c.
12976,"Revert ""doc: update docs for dns recursor go-sockaddr templates""",This reverts commit 6d4a57aedc55a4664537033c0c69edea20fd919b.
12977,"Revert ""config: do not allow an ANY address as DNS recursor""",This reverts commit 1db8d3cb00bec980480d525571cea76c6c49c3e7.
12978,"Revert ""doc: address review comment""",This reverts commit 6ba9690e812089ba3dbda43f17e6b862201d16a8.
12979,"Revert ""Changes ""ip"" to ""IP"".""",This reverts commit dca5dcb68c573373536bdb4891d000eac0ece95b.
12980,"Revert ""agent: decouple anti-entropy from local state""",This reverts commit a842dc9c2bf00855ef93211232da36b2d91eab5b.
12981,"Revert ""agent: cleanup StateSyncer""",This reverts commit b7136e100bef727144c202ae55f81152ac6a8b5f.
12982,"Revert ""agent: refactor sync loop to linear flow of control""",This reverts commit 7a2af206ea964fc0846f9b80c10ea9d91cb3c99e.
12983,"Revert ""agent: simplify some loops""",This reverts commit b5dbad910c63b29dadf10731808d6891067a2bfa.
12984,"Revert ""local state: move to separate package""",This reverts commit d447e823c63720c74bb02459a985724f035f023e.
12985,"Revert ""local state: replace multi-map state with structs""",This reverts commit ccbae7da5bceeb2328ab7993a8badbf2e72a4597.
12986,"Revert ""local state: tests compile""",This reverts commit 1af52bf7be02d952e16e14209899a9715451f7ba.
12987,"Revert ""local state: fix failing tests""",This reverts commit 76682da4a048b623a1c201eb56710639437a9ed9.
12988,"Revert ""local state: fix test with updated error message""",This reverts commit e9149f64d9afb38246f9432edd806321c1eefb83.
12989,"Revert ""local state: fix anti-entropy state tests""",This reverts commit f8e20cd9960e19bbe61e258c445250723870816f.
12990,"Revert ""agent: skip non-sensical TestCatalogRegister""",This reverts commit ce1f35373e6ad1486cb83398fce70f5c54f910d3.
12991,"Revert ""local state: drop retry loops from tests""",This reverts commit 2bdba8ab06d1c9dd99d5e7cf8370c94b4f7adfaa.
12992,"Revert ""local state: rename tests""",This reverts commit ff62eaf0634a4c09377c53d4623685437f217b49.
12993,"Revert ""local state: fix TestAgentAntiEntropy_EnableTagOverride""",This reverts commit 86f7ea601342d6f3ceb9d0dc74bd5b33dae0b8d8.
12994,"Revert ""local state: refactor TestAgentAntiEntropy_EnableTagOverride""",This reverts commit c28e23eac8ada7a668b13e9a4a3d8066457488ef.
12995,"Revert ""local state: address review comments""",This reverts commit 1d315075b15647db7fcd42986c9c5673cbb77a77.
12996,"Revert ""local state: update comments""",This reverts commit 42188164f885188e3bc8cff70ea5aeb47d633b83.
12997,"Revert ""local state: update documentation of updateSyncState""",This reverts commit e86521e637d742bce1e460b6b960037cef3578ed.
12998,"Revert ""local state: move Metadata methods together""",This reverts commit 9bc8127728a62beb94b28849070b6ac35c181404.
12999,"Revert ""local state: rename Add{Check,Service}State to Set{Check,Service}State""",This reverts commit 9280841a80d98b253a8f23967875e45e5e37e093.
13000,"Revert ""ae: ensure that syncs are blocked when paused""",This reverts commit ffb265dd939cefd7e865d624d0a4ba81f88e4505.
13001,"Revert ""ae: restore previous pause/resume behavior""",This reverts commit 126046be2366afde97fdf01d0dceece2977dd6d6.
13002,"Revert ""ae: make stagger function pluggable for testing""",This reverts commit 066ad01c3804a39161c4d46147aa2eb86e48cd67.
13003,"Revert ""ae: add test for ifNotPausedRun""",This reverts commit f5177ef332b8396aea368b7dea18a976e029a54f.
13004,"Revert ""ae: add test for resume triggering SyncChanges""",This reverts commit cd0262744deab9294af17e4039ed2e2a27818cde.
13005,"Revert ""ae: fix typo in constructor name""",This reverts commit e88f49e2ccc79f77b5395de28d8fbdfc6eeb36f6.
13006,"Revert ""ae: make control flow more explicit""",This reverts commit b9a8b53d5257d679c427422c324e6f124664db60.
13007,"Revert ""ae: add test that we run a full before a partial sync""",This reverts commit 8158cec82969a1262de793ee46e13f63cc2954e6.
13008,"Revert ""ae: refactor StateSyncer to state machine for better testing""",This reverts commit 8a45365f68147dd13c1232bc574bd54e4a12e478.
13009,"Revert ""ae: add remaining test cases""",This reverts commit c32915bb4ff28b1670e88edaf0bbb9779dc6e2bc.
13010,"Revert ""ae: do not trigger on Resume while holding the lock""",This reverts commit bd00814301bbf5db037e739e91a0b66ebb564821.
13011,"Revert ""local state: use synchronized access to internal maps""",This reverts commit 39a2d8d25e629823e183e384e8414171edcf4164.
13012,"Revert ""local state: clone check to avoid side effect""",This reverts commit af1243c7251fe6291145bbe4f4dacd374779c425.
13013,"Revert ""local state: make test more robust""",This reverts commit f9267380dbcdb2746393eee5067e5037dff2b184.
13014,"Revert ""local state: remove stale comment""",This reverts commit 35f4acdddc38f0371543e12b0d2ccb27a0a64869.
13015,"Revert ""config: document telemetry options""",This reverts commit 7fede4472d4db87b4652253510556906821ac756.
13016,"Revert ""config: document http options""",This reverts commit 5f598574483e59af377ae447857d40872563ac87.
13017,"Revert ""config: document dns options""",This reverts commit 5e57e9273ea6e27eb79ed531189fd3c69e19c7b2.
13018,"Revert ""config: document autopilot options""",This reverts commit 7685ef409c9340227e3969a86e0bfa627eafdd0f.
13019,"Revert ""config: document acl options""",This reverts commit 7396bd31fd1c35347d0c88284ea358bfbd9ca948.
13020,"Revert ""config: document config options""",This reverts commit a38c69d7844a4e4a9d54051470977c7446fc8e57.
13021,"Revert ""config: document more acl options""",This reverts commit 2682ce0b825528f379487cbd11c2c2a321fd94e8.
13022,"Revert ""config: document more config options""",This reverts commit bf81cdea6eb90ae099201c545910780ccd020540.
13023,"Revert ""config: document more config options""",This reverts commit 9864609201f333cd90af9535e2e4d4c7c1e65c4a.
13024,"Revert ""config: document remaining config options""",This reverts commit 0ed4561f12cf52a44ab1f1887d4f4bfd27df77f4.
13025,"Revert ""config: address review comments""",This reverts commit f6e9ad99ec6d230c1eb7f655d2a83e5a4e33807d.
13026,"Revert ""fix go vet issue""",This reverts commit 078e50b635846920a17a3b06c678b2b63b40677a.
13027,"Revert ""config: rename test struct field to args""",This reverts commit f2a291a4704c9954c441567860ca740ac0f58308.
13028,"Revert ""config: return error on extra command line arguments (#3397)""",This reverts commit ce935cef55f7298e85843b3ca17ad13415e40e0b.
13029,fix go vet issue,
13030,config: return error on extra command line arguments (#3397),"The consul agent command was ignoring extra command line arguments which can lead to confusion when the user has for example forgotten to add a dash in front of an argument or is not using an = when setting boolean flags to true. -bootstrap true is not the same as -bootstrap=true, for example. Since all command line flags are known and we don't expect unparsed arguments we can return an error. However, this may make it slightly more difficult in the future if we ever wanted to have these kinds of arguments. Fixes #3397"
13031,config: rename test struct field to args,
13032,config: return error on extra command line arguments (#3397),"The consul agent command was ignoring extra command line arguments which can lead to confusion when the user has for example forgotten to add a dash in front of an argument or is not using an = when setting boolean flags to true. -bootstrap true is not the same as -bootstrap=true, for example. Since all command line flags are known and we don't expect unparsed arguments we can return an error. However, this may make it slightly more difficult in the future if we ever wanted to have these kinds of arguments. Fixes #3397"
13033,config: rename test struct field to args,
13034,config: address review comments,
13035,config: document remaining config options,
13036,config: document more config options,
13037,config: document more config options,
13038,config: document more acl options,
13039,config: document config options,
13040,config: document acl options,
13041,config: document autopilot options,
13042,config: document dns options,
13043,config: document http options,
13044,config: document telemetry options,
13045,config: address review comments,
13046,config: document remaining config options,
13047,config: document more config options,
13048,config: document more config options,
13049,config: document more acl options,
13050,config: document config options,
13051,config: document acl options,
13052,config: document autopilot options,
13053,config: document dns options,
13054,config: document http options,
13055,config: document telemetry options,
13056,local state: remove stale comment,
13057,local state: make test more robust,
13058,local state: clone check to avoid side effect,
13059,local state: use synchronized access to internal maps,
13060,ae: do not trigger on Resume while holding the lock,
13061,ae: add remaining test cases,
13062,ae: refactor StateSyncer to state machine for better testing,
13063,ae: add test that we run a full before a partial sync,
13064,ae: make control flow more explicit,
13065,ae: fix typo in constructor name,
13066,ae: add test for resume triggering SyncChanges,
13067,ae: add test for ifNotPausedRun,
13068,ae: make stagger function pluggable for testing,
13069,ae: restore previous pause/resume behavior,
13070,ae: ensure that syncs are blocked when paused,
13071,"local state: rename Add{Check,Service}State to Set{Check,Service}State",
13072,local state: move Metadata methods together,
13073,local state: update documentation of updateSyncState,
13074,local state: update comments,
13075,local state: address review comments, move non-blocking notification mechanism into ae.Trigger move Pause/Resume into separate type
13076,local state: refactor TestAgentAntiEntropy_EnableTagOverride,Make intent clearer by being more explicit and adding some comments. Use verify.Values to compare service entries.
13077,local state: fix TestAgentAntiEntropy_EnableTagOverride,The test had a race condition where it relied on the first service to be synced to the remote catalog which sometimes failed.
13078,local state: rename tests,
13079,local state: drop retry loops from tests,Since the tests are now using synchronous calls for state syncing we no longer need to use retry loops to wait for the changes to propagate.
13080,agent: skip non-sensical TestCatalogRegister,It is not clear what this test is supposed to verify.
13081,local state: fix anti-entropy state tests,The anti-entropy tests relied on the side-effect of the StartSync() method to perform a full sync instead of a partial sync. This lead to multiple anti-entropy go routines being started unnecessary retry loops. This change changes the behavior to perform synchronous full syncs when necessary removing the need for all of the time.Sleep and most of the retry loops.
13082,local state: fix test with updated error message,
13083,local state: fix failing tests,
13084,local state: tests compile,
13085,local state: replace multi-map state with structs,The state of the service and health check records was spread out over multiple maps guarded by a single lock. Access to the maps has to happen in a coordinated effort and the tests often violated this which made them brittle and racy. This patch replaces the multiple maps with a single one for both checks and services to make the code less fragile. This is also necessary since moving the local state into its own package creates circular dependencies for the tests. To avoid this the tests can no longer access internal data structures which they should not be doing in the first place. The tests still don't compile but this is a ncessary step in that direction.
13086,local state: move to separate package,This patch moves the local state to a separate package to further decouple it from the agent code. The code compiles but the tests do not yet.
13087,agent: simplify some loops,
13088,agent: refactor sync loop to linear flow of control,
13089,agent: cleanup StateSyncer,"This patch cleans up the state syncer code by renaming fields, adding helpers and documentation."
13090,agent: decouple anti-entropy from local state,"The anti-entropy code manages background synchronizations of the local state on a regular basis or on demand when either the state has changed or a new consul server has been added. This patch moves the anti-entropy code into its own package and decouples it from the local state code since they are performing two different functions. To simplify code-review this revision does not make any optimizations, renames or refactorings. This will happen in subsequent commits."
13091,"Changes ""ip"" to ""IP"".",
13092,doc: address review comment,
13093,config: do not allow an ANY address as DNS recursor,
13094,doc: update docs for dns recursor go-sockaddr templates,
13095,config: add support for go-sockaddr templates for DNS recursors,DNS recursors can be added through go-sockaddr templates. Entries are deduplicated while the order is maintained. Originally proposed by @taylorchu See #2932
13096,Tweaks watch docs.,
13097,Cleans up import sorting.,
13098,Update CHANGELOG.md,
13099,Update CHANGELOG.md,
13100,Update CHANGELOG.md,
13101,Update serf library to pick up coordinate persistence fix,
13102,Update CHANGELOG.md,
13103,Update CHANGELOG.md,
13104,Update watches.html.md,
13105,Small grammar correction,
13106,Improve HTTP handler documentation,
13107,Implement HTTP Watch handler (#3413),Implement HTTP Watch handler
13108,test: replace porter tool with freeport lib,This patch removes the porter tool which hands out free ports from a given range with a library which does the same thing. The challenge for acquiring free ports in concurrent go test runs is that go packages are tested concurrently and run in separate processes. There has to be some inter-process synchronization in preventing processes allocating the same ports. freeport allocates blocks of ports from a range expected to be not in heavy use and implements a system-wide mutex by binding to the first port of that block for the lifetime of the application. Ports are then provided sequentially from that block and are tested on localhost before being returned as available.
13109,Adds a canary test to fail Consul's test w/o porter.,
13110,Updates the change log.,
13111,dns: return NXDOMAIN if datacenter is invalid (#3200) (#3596),"Queries to the DNS server can contain an optional datacenter name in the query name. You can query for 'foo.service.consul' or 'foo.service.dc.consul' to get a response for either the default or a specific datacenter. Datacenter names cannot have dots, therefore the datacenter name can refer to only one element in the DNS query name. The DNS server allowed extra labels between the optional datacenter name and the domain and returned a valid response instead of returning NXDOMAIN. For example, if the domain is set to '.consul' then 'foo.service.dc1.extra.consul' should return NXDOMAIN because of 'extra' being between the datacenter name 'dc1' and the domain '.consul'. Fixes #3200"
13112,Testutil falls back to random ports w/o porter (#3604), Testutil falls back to random ports w/o porter  This PR allows the testutil server to be used without porter.  Adds sterner-sounding fallback comments.
13113,doc: address review comment,
13114,config: do not allow an ANY address as DNS recursor,
13115,Merge pull request #3601 from hashicorp/serf_update,Serf update
13116,REbase master serf,
13117,Update CHANGELOG.md,
13118,Vendor update serf to pick up fix for out of range ping periods in coordinate subsystem,
13119,doc: update docs for dns recursor go-sockaddr templates,
13120,config: add support for go-sockaddr templates for DNS recursors,DNS recursors can be added through go-sockaddr templates. Entries are deduplicated while the order is maintained. Originally proposed by @taylorchu See #2932
13121,Fixed indentation in Script + Interval,Remove newlines which were causing the text to not be rendered under the intended bullet point.
13122,Updates documentation for consul validate.,"This makes it clear that you need to pass the full configuration, and that the command won't work with config fragments. Closes #3591"
13123,Update CHANGELOG.md,
13124,Merge pull request #3595 from hashicorp/kms_doc_update,Documentation update for KMS support
13125,Documentation update for KMS support,
13126,Update autopilot documentation to mention correct Consul version that defaults raft protocol to 3.,
13127,s/acesss/access (#3593),"Spell ""access"" correctly"
13128,Simplify string(buf.Bytes()) to buf.String() (#3590),
13129,Updates the change log.,
13130,Fixes API client for ScriptArgs and updates documentation. (#3589),"  Updates the API client to support the current ScriptArgs parameter for checks.   Updates docs for checks to explain the ScriptArgs parameter issue.   Adds mappings for ""args"" and ""script-args"" to give th API parity with config.   Adds checks on return codes.   Removes debug logging that shows empty when args are used. "
13131,consul upgraded to 1.0.0 in terraform scripts (#3588),
13132,Update check.html.md,
13133,porter: add better warning if missing,
13134,commands: add shorter helper vars to keep fmt sane,
13135,commands: cleanup init,
13136,Adds a pointer to the /v1/txn API from the KV read docs.,Closes #3558
13137,Updating go-checkpoint lib to have a fixed timeout (#3564),  Updating go-checkpoint lib to have a fixed timeout   formatting vendor/vendor.json file per project spec 
13138,"upgrading ubuntu ami to 16.04, switching to systemd, allowing multiple AZ/subnets through subnets={} map, upgrading consul to 0.9.3 (#3566)",
13139,Update docs for retry_join cloud discovery to include snippet around (#3577),"using HTTP_PROXY, HTTPS_PROXY and NO_PROXY env vars when needed"
13140,commands: get HTTP API flags for usage automatically,
13141,commands: drop http server flags from reload command,
13142,commands: drop http server flags from leave command,
13143,commands: drop http server flags from keyring command,
13144,commands: drop http server flags from force-leave command,
13145,commands: run all tests in parallel (again),
13146,commands: cleanup help and synopsis., move Help and Synopsis to bottom make help and synopsis constants make sure help output is formatted
13147,commands: do not run cmd tests in parallel,Package level parallelization is sufficient.
13148,commands: add missing noTabs test,
13149,commands: cleanup test names,
13150,commands: cleanup catalog list services tests,
13151,commands: cleanup catalog list nodes tests,
13152,commands: simplify import names,
13153,commands: move operator subcommands to subdirs,
13154,commands: move kv subcommands to subdirs,
13155,commands: move catalog subcommands to subdirs,
13156,commands: move snapshot subcommands to subdirs,
13157,commands: simplify commands.go,
13158,commands: drop base command and utils,
13159,commands: move agent command to separate pkg,
13160,commands: move watch command to separate pkg,
13161,add token and addr to http flags,
13162,commands: move snapshot save command to separate pkg,
13163,commands: move snapshot restore command to separate pkg,
13164,commands: move version command to separate pkg,
13165,commands: move snapshot inspect command to separate pkg,
13166,commands: move snapshot command to separate pkg,
13167,commands: move rtt command to separate pkg,
13168,commands: move reload command to separate pkg,
13169,commands: move operator autopilot set command to separate pkg,
13170,commands: move operator autopilot get command to separate pkg,
13171,commands: move operator autopilot command to separate pkg,
13172,commands: move operator list remove-peer command to separate pkg,
13173,commands: move operator raft list-peers command to separate pkg,
13174,commands: move operator raft command to separate pkg,
13175,commands: move operator command to separate pkg,
13176,Move monitor command to its own package,
13177,Fix import order,
13178,Move members command to its own package,
13179,Move maint command to its own package,
13180,Move lock command to its own package,
13181,Fix leave and validate commands to build help string in constructor,
13182,Fix KV CLI subcommands to build help string in constructor,
13183,Fix Keyring and keygen commands to build help string in constructor,
13184,Fix join command to build help string in constructor,
13185,Fix up info and forceleave to build help string in constructor,
13186,s/initFlags/init/g,
13187,Fix exec and event commands to build help string in constructor,
13188,Fix up catalog list services to build help string in constructor,
13189,Fix up list datacenters to build help string in constructor,
13190,Fix tests by calling initFlags for each test case to reset state.,
13191,Better name for usage string and moving constant definition down,
13192,Construct the help string in constructor using helper function.,
13193,commands: move catalog list services to separate pkg,
13194,commands: move catalog list nodes command to separate pkg,
13195,commands: move catalog list datacenters command to separate pkg,
13196,commands: move catalog command to separate pkg,
13197,commands: move leave command to separate pkg,
13198,commands: move force-leave command to separate pkg,
13199,commands: move keyring command to separate pkg,
13200,commands: move kv put command to separate pkg,
13201,commands: move kv get command to separate pkg,
13202,commands: move kv import command to separate pkg,
13203,commands: move export entry struct to separate pkg,
13204,commands: move kv export command to separate pkg,
13205,commands: move kv delete command to separate pkg,
13206,commands: move kv command to separate pkg,
13207,commands: move keygen command to separate pkg,
13208,commands: move info command to separate pkg,
13209,commands: move rExec helper to bottom,
13210,commands: move exec command to separate pkg,
13211,commands: move event command to separate pkg,
13212,commands: move join command to separate pkg,
13213,commands: move validate command to separate pkg,
13214,commands: move flag handling into flags pkg,
13215,revert monkey patch for mitchellh/cli,
13216,config: refactor commands to print help for flags (#3536),"This patch refactors the commands that use the mitchellh/cli library to populate the command line flag set in both the Run() and the Help() method. Earlier versions of the mitchellh/cli library relied on the Run() method to populuate the flagset for generating the usage screen. This has changed in later versions and was previously solved with a small monkey patch to the library to restore the old behavior. However, this makes upgrading the library difficult since the patch has to be restored every time. This patch addresses this by moving the command line flags into an initFlags() method where appropriate and also moving all variables for the flags from the Run() method into the command itself. Fixes #3536"
13217,Merge pull request #3582 from ryanslade/time-since,Replace time.Now().Sub(x) with time.Since(x)
13218,vendor: update github.com/mitchellh/mapstructure to replace monkey patch,
13219,vendor: update github.com/hashicorp/hcl to replace monkey patch,
13220,Replace time.Now().Sub(x) with time.Since(x),
13221,Puts the tree in 1.0.1 dev mode.,
13222,Bumps website version to 1.0.0.,
13223,Release v1.0.0,
13224,Puts the tree in 1.0 final release mode.,
13225,Fixes an XSS issue with unescaped node names. (#3578),  Fixes an XSS issue with node names in the tomography graph.   Updates built-in static web assets.   Updates the change log. 
13226,Adds a note about the Raft protocol not being the same as the Consul protocol.,
13227,Adds a 1.0 section to the upgrade guide and cleans up the change log.,
13228,Update sentinel.html.markdown.erb,
13229,Update dns forwarding documentation (#3574),"Add details about setting up macOS to point to consul for services without the headache of dnsmasq, bind, etc."
13230,Adds a brief wait and poll period to update check status after a timeout. (#3573), Adds a brief wait and poll period to update the check status if we get stucking waiting for the processes to terminate.  Fixes #3570  Jumps out of timeout case and includes script output.
13231,Cleans up some drift between the OSS and Enterprise trees.,
13232,Clarify the docs around script check timeout behavior,
13233,Updates the change log.,
13234,Kill check processes after the timeout is reached (#3567), Kill check processes after the timeout is reached  Kill the subprocess spawned by a script check once the timeout is reached. Previously Consul just marked the check critical and left the subprocess around. Fixes #3565.   Set err to non-nil when timeout occurs   Fix check timeout test   Kill entire process subtree on check timeout   Add a docs note about windows subprocess termination 
13235,Updates the change log.,
13236,retry locks on network errors (#3553)," retry locks on network errors  When communicating with a local agent and watching a lock, a dropped connection between the agent and server will show up as a server error and immediately be retried. However if the client is connected to a remote server, a dropped connection immediately aborts the lock.  Updates comment about it being unsafe for writes."
13237,Fix example code formatting in godoc,
13238,config: remove redundant code,
13239,config: fix check for segment.port <= 0 and add test,
13240,Adds check to make sure port is given so we avoid a nil bind address.,
13241,Removes obsolete segment stub.,
13242,agent: add option to discard health output (#3562)," agent: add option to discard health output  In high volatile environments consul will have checks with ""noisy"" output which changes every time even though the status does not change. Since the output is stored in the raft log every health check update unblocks a blocking call on health checks since the raft index has changed even though the status of the health checks may not have changed at all. By discarding the output of the health checks the users can choose a different tradeoff. Less visibility on why a check failed in exchange for a reduced change rate on the raft log.   agent: discard output also when adding a check   agent: add test for discard check output   agent: update docs   go vet   Adds discard_check_output to reloadable config table.   Updates the change log. "
13243,Fixes agent error handling when check definition is invalid. Distingu… (#3560),"  Fixes agent error handling when check definition is invalid. Distinguishes between empty checks vs invalid checks   Made CheckTypes return Checks from service definition struct rather than a new copy, and other changes from code review. This also errors when json payload contains empty structs   Simplify and improve validate method, and make sure that CheckTypes always returns a new copy of validated check definitions   Tweaks some small style things and error messages.   Updates the change log. "
13244,config: add generic method to translate between CamelCase and snake_case (#3557),  doc: document discrepancy between id and CheckID   doc: document enable_tag_override change   config: add TranslateKeys helper   TranslateKeys makes it easier to map between different representations of internal structures. It allows to recursively map alias keys to canonical keys in structured maps.  config: use TranslateKeys for config file  This also adds support for 'enabletagoverride' and removes the need for a separate CheckID alias field.   config: remove dead code   agent: use TranslateKeys for FixupCheckType   agent: translate enable_tag_override during service registration   doc: add '.hcl' as valid extension   config: map ScriptArgs to args   config: add comment for TranslateKeys 
13245,Updates documentation to s/script/args/ in API docs.,
13246,Updates the change log.,
13247,Makes RPC handling more robust when rolling servers. (#3561)," Adds client-side retry for no leader errors.  This paves over the case where the client was connected to the leader when it loses leadership.  Adds a configurable server RPC drain time and a fail-fast path for RPCs.  When a server leaves it gets removed from the Raft configuration, so it will never know who the new leader server ends up being. Without this we'd be doomed to wait out the RPC hold timeout and then fail. This makes things fail a little quicker while a sever is draining, and since we added a client retry AND since the server doing this has already shut down and left the Serf LAN, clients should retry against some other server.   Makes the RPC hold timeout configurable.   Reorders struct members.   Sets the RPC hold timeout default for test servers.   Bumps the leave drain time up to 5 seconds.   Robustifies retries with a simpler client-side RPC hold.   Reverts untended delete. "
13248,Update compatibility.html.md,
13249,Update compatibility.html.md,
13250,docs: agent/options gcp's project_name is optional,Per https://github.com/hashicorp/go-discover/blob/master/provider/gce/gce_discover.go#L53-L61
13251,Fix unit test after dns library upgrade to account for correct data length,
13252,Update raft.html.md,
13253,Updates the change log.,
13254,Updating CHANGELOG.md,
13255,Merge pull request #3412 from hashicorp/jbs-autocomplete,Autocomplete support via @brianshumate
13256,Update documentation with subcommand example,
13257,Autocomplete support,
13258,Merge pull request #3548 from hashicorp/go_retryablehttp_update,Update go-retryablehttp
13259,Update go-retryablehttp,
13260,Updates the change log.,
13261,Vendor update miekg/dns to pick up bugfixes and features (#3547),
13262,"Adds a basic Linux Vagrant setup, stolen from Nomad.",
13263,Updates the change log.,
13264,Fixes handling of stop channel and failed barrier attempts. (#3546)," Fixes handling of stop channel and failed barrier attempts.  There were two issues here. First, we needed to not exit when there was a timeout trying to write the barrier, because Raft might not step down, so we'd be left as the leader but having run all the step down actions. Second, we didn't close over the stopCh correctly, so it was possible to nil that out and have the leaderLoop never exit. We close over it properly AND sequence the nil-ing of it AFTER the leaderLoop exits for good measure, so the code is more robust. Fixes #3545   Cleans up based on code review feedback.   Tweaks comments.   Renames variables and removes comments. "
13265,Updates the change log.,
13266,command: show full help text on usage,
13267,Update CHANGELOG.md,
13268,command: do not merge flags in-place,
13269,command: simplify duplicate code,
13270,command: drop hidden flags from base command,
13271,command: drop unused hidden flags for 'validate',
13272,command: drop legacy 'operator raft' tests,
13273,command: simplify 'operator raft',"The cli library can handle subcommands. Therefore, most of the code is no longer necessary."
13274,command: don't show confusing error on usage output,
13275,command: backport patch for mitchellh/cli help flag handling (#3536),This patch backports a fix which will show the correct usage screen for command line flags. This is considered a temporary fix until the code has been refactored. Newer versions of the cli library require that the flag set is populated when Help() is called or that it is populated within Help() itself. Fixes #3536
13276,command: drop deprecated 'configtest' command,'configtest' has been replaced with 'validate'
13277,Minor typo (boostrap),
13278,Release v1.0.0-beta2,
13279,Puts the tree in 1.0.0-beta2 release mode.,
13280,Updates the change log.,
13281,Updates Go version to 1.9.1. (#3537),
13282,Adds script warning and fixes Docker args recognition.,
13283,Update CHANGELOG.md,
13284,Updates the change log.,
13285,Update CHANGELOG.md,
13286,Merge pull request #3535 from hashicorp/metric-docs,Update metric names and add a legacy config flag
13287,Move http request metric to the agent section,
13288,Add a test for legacy metrics with a whitelist filter,
13289,Update CHANGELOG.md,
13290,Update CHANGELOG.md,
13291,Clean up subprocess handling and make shell use optional (#3509),"  Clean up handling of subprocesses and make using a shell optional   Update docs for subprocess changes   Fix tests for new subprocess behavior   More cleanup of subprocesses   Minor adjustments and cleanup for subprocess logic   Makes the watch handler reload test use the new path.   Adds check tests for new args path, and updates existing tests to use new path.   Adds support for script args in Docker checks.   Fixes the sanitize unit test.   Adds panic for unknown watch type, and reverts back to Run().   Adds shell option back to consul lock command.   Adds shell option back to consul exec command.   Adds shell back into consul watch command.   Refactors signal forwarding and makes Windows-friendly.   Adds a clarifying comment.   Changes error wording to a warning.   Scopes signals to interrupt and kill.   This avoids us trying to send SIGCHILD to the dead process.   Adds an error for shell=false for consul exec.   Adds notes about the deprecated script and handler fields.   De-nests an if statement. "
13292,Update metric names and add a legacy config flag,
13293,build: add changelogfmt target to format [GH-xxxx] references to links,
13294,Make GH-xxxx issue numbers clickable. (#3533),
13295,"Revert ""Test using issue numbers in CHANGELOG""",This reverts commit 3d069781ff2a63bb020d93f7089874c317449057.
13296,Test using issue numbers in CHANGELOG,
13297,"Revert ""Test using github links in CHANGELOG""",This reverts commit e72ff5dd43db1e58ec52d7ac2f7ab5b20f4054ba.
13298,Test using github links in CHANGELOG,
13299,Update CHANGELOG.md,
13300,Provide stable config for agent/self (#3532), config: provide stable config for /v1/agent/self (#3530)  This patch adds a stable subset of the previous Config struct to the agent/self response. The actual runtime configuration is moved into DebugConfig and will be documented to change. Fixes #3530   config: fix tests   doc: update api documentation for /v1/agent/self 
13301,Update CHANGELOG.md,
13302,doc: drop last references to -retry-join-* options,
13303,doc: document go-discover format change,
13304,Update github.com/hashicorp/go-discover to pull in new config parser,"This patch updates the go-discover library to use the new config parser which uses a different encoding scheme for the go-discover config DSL. Values are no longer URL encoded but taken literally unless they contain spaces, backslashes or double quotes. To support keys or values with these special characters the string needs to be double quoted and usual escaping rules apply. Fixes #3417"
13305,Update CHANGELOG.md,
13306,Merge pull request #3531 from hashicorp/pr-3521-slackpad,ui: Use monospace font for textarea controls.
13307,Updates checked in web assets to pick up CSS change.,Closes #3521
13308,Update CHANGELOG.md,
13309,Merge pull request #3523 from hashicorp/issue_3511,Introduces new 'list' permission that applies to KV store recursive reads
13310,Update ACL guide to describe the new list policy for Keys,
13311,Merge pull request #3528 from hashicorp/raft_vendor_update,Updates vendor directory for raft to record raft v1.0.0. No functiona…
13312,Updates vendor directory for raft to record raft v1.0.0. No functional changes,
13313,Remove extra newline,
13314,Only allow 'list' policies within 'key' policy definitions. Consolidated two similar tests into one and fixed alignment.,
13315,"Introduces new 'list' permission that applies to KV store recursive reads, and enforced only when opted in.",
13316,ui: Use monospace font for textarea controls.,
13317,Update snapshot agent docs,
13318,Split BaseCommand http config into a separate function,
13319,Update CHANGELOG.md,
13320,Update CHANGELOG.md,
13321,use ports from derived addresses,
13322,update docs,
13323,config: drop advertise_addrs,Fixes #3516
13324,Fix grammar in containers guide.,
13325,Update containers guide to mention that Consul now handles nodes changing IP addresses.,
13326,Clarifies server requirement for bootstrap-expect.,Fixes #3510.
13327,"Update CHANGELOG,md",
13328,Update CHANGELOG.md with operator API endpoints whose http verb enforcement behavior change with 1.0,
13329,Merge pull request #3515 from hashicorp/sentinel_doc_update,Update sentinel documentation to remove features that are coming in a…
13330,Update sentinel documentation to remove features that are coming in a future release,
13331,Add base command option for hiding generated help for normal args,
13332,Update CHANGELOG.md,
13333,Merge pull request #3513 from hashicorp/list-peers-error,Returns errors properly from the consul operator raft list-peers comm…
13334,Returns errors properly from the consul operator raft list-peers command.,
13335,Update CHANGELOG.md,
13336,Merge pull request #3343 from zeroae/f-node-dns-txt-record,
13337,Fix tests after config refactor,
13338,Update docs on RFC1464 vs RFC1035 options,
13339,Implement encodeKVasRFC1464 function,
13340,Add RFC1464 tests,
13341,Turn encodeKVasRFC1464 into a plain function,
13342,"Use verify for NodeLookup CNAME, and TXT tests",
13343,Refactor formatTxtRecords as encodeKVasRFC1464, Move the logic of rfc1035 out of the encoding function Left basic version of encodingKV as 'k=v'
13344,Fix editorial suggestions,
13345,Remove redundant check of Node.Meta size,
13346,Return Node.Meta info using the DNS interface,
13347,Add test for NoteLookup ANY request,
13348,Add test for querying Node.Meta with DNS TXT," Lookup TXT records using recursive lookups Expect TXT record equal to value if key starts with rfc1035- Expect TXT record in rfc1464 otherwise, i.e. (k=v)  ref #2709"
13349,Update docs to include support for TXT records, Add explanation to the difference between RFC1035     and RFC1464 queries.
13350,Update CHANGELOG.md,
13351,Update CHANGELOG.md,
13352,Release v1.0.0-beta1,
13353,Puts the tree in 1.0.0-beta1 release mode.,
13354,Update CHANGELOG.md,
13355,Update CHANGELOG.md,
13356,Update CHANGELOG.md,
13357,Update CHANGELOG.md,
13358,Update CHANGELOG.md,
13359,Update CHANGELOG.md,
13360,Update CHANGELOG.md,
13361,Update options.html.md,
13362,Update CHANGELOG.md,
13363,Update CHANGELOG.md,
13364,Update CHANGELOG.md,
13365,Update options.html.md,
13366,Update CHANGELOG.md,
13367,Update CHANGELOG.md,
13368,Cleans up some docs for the 1.0 release. (#3508),"  Cleans up information about file extensions, now that they are required.   Removes references to deprecated configuration options.   Adds docs for multiple bind address support. "
13369,fail early when advertise addr is set to ANY (#3507),
13370,only detect advertise address if derived value is any (#3506),  only detect advertise address if derived value is any   determine detect function only when advertise addr is any 
13371,Adds a comment about Datacenter and NodeName being stable interfaces,in the runtime config strucutre.
13372,Recursive sanitize (#3505),  vendor: add github.com/sergi/go-diff/diffmatchpatch for diff'ing test output   config: refactor Sanitize to recursively clean runtime config and format complex fields   Removes an extra int cast.   Adds a top-level check test case for sanitization. 
13373,Fix mispelled words,
13374,Gets rid of flaky clause in stats fetcher unit test.,Given how the rutine is coded we can still get data so this wasn't a reliable thing to check.
13375,Update CHANGELOG.md,
13376,Issue 3452 (#3500),"  Make sure that id and address are set in member created during reaping of catalog nodes that have been removed from serf   Get address from node table in the state store rather than from service address   Fix incorrect lookup by checkname instead of node name   Make sure that serverlookup is called with the right address format, added unit test.   Address code review comments   Tweaks style stuff. "
13377,"Adds a ""required"" note for the port in the network segments configuration.",
13378,Update CHANGELOG.md,
13379,Metrics service prefix (#3498)," metrics: replace statsite_prefix with service_prefix  The metrics prefix isn't statsite specific and is in fact used for all metrics providers. Since we are deprecating fields anyway we should fix this one as well. Fixes #3293   Updates docs and sorts telemetry section.   Renames to ""metrics_prefix"" to disambiguate with Consul services.   Updates the change log. "
13380,Merge pull request #3503 from hashicorp/porter-ci,Makes porter clean up if a porter instance died.
13381,Makes porter take over if an existing instance died.,
13382,Update CHANGELOG.md,
13383,Merge pull request #3502 from hashicorp/update-boltdb,Updates BoltDB to 1.3.1.
13384,Updates BoltDB to 1.3.1.,
13385,Merge pull request #3501 from hashicorp/snapshot-test-hang,Cleans up some edge cases in TestSnapshot_Forward_Leader.
13386,Cleans up some edge cases in TestSnapshot_Forward_Leader.,These could cause the tests to hang.
13387,Update CHANGELOG.md,
13388,Fix watch error when http & https are disabled (#3493),"Remove an error in watch reloading that happens when http and https are both disabled, and use an https address for running watches if no http addresses are present. Fixes #3425."
13389,Update CHANGELOG.md,
13390,Merge pull request #3499 from hashicorp/issue_3449,"Move Raft protocol version for list peers end point to server side, f…"
13391,"Move Raft protocol version for list peers end point to server side, fix unit tests. This fixes #3449",
13392,Revert monkey patch since it is not clear whether this is an issue at all.,
13393,fix data race,"Since state.Checks() returns a shallow copy its elements must not be modified. Copying the elements in the handler does not guarantee consistency since that list is guarded by a different lock. Therefore, the only solution is to have state.Checks() return a deep copy."
13394,serf: monkey patch https://github.com/hashicorp/serf/pull/486,
13395,Monkey patch mitchellh/mapstructure with code from https://github.com/mitchellh/mapstructure/pull/101,
13396,Replace monkey patch with code from https://github.com/hashicorp/hcl/pull/213,
13397,config: do not clobber multiple check and service definitions,This patch ensures that multiple files with single 'check' or 'service' definitions result in the combination of them.
13398,Merge pull request #3496 from hashicorp/ui-rename,Renames enable_ui to ui to keep compatibility with existing configs.
13399,Renames enable_ui to ui to keep compatibility with existing configs.,
13400,Update CHANGELOG.md,
13401,Update CHANGELOG.md,
13402,Update CHANGELOG.md,
13403,Update CHANGELOG.md,
13404,Update CHANGELOG.md,
13405,agent: consolidate handling of 405 Method Not Allowed (#3405)," agent: consolidate http method not allowed checks  This patch uses the error handling of the http handlers to handle HTTP method not allowed errors across all available endpoints. It also adds a test for testing whether the endpoints respond with the correct status code.   agent: do not panic on metrics tests   agent: drop other tests for MethodNotAllowed   agent: align /agent/join with reality   /agent/join uses PUT instead of GET as documented.  agent: align /agent/check/{fail,warn,pass} with reality  /agent/check/{fail,warn,pass} uses PUT instead of GET as documented.   fix some tests   Drop more tests for method not allowed   Align TestAgent_RegisterService_InvalidAddress with reality   Changes API client join to use PUT instead of GET.   Fixes agent endpoint verbs and removes obsolete tests.   Updates the change log. "
13406,Merge pull request #3495 from hashicorp/porter-checker,Makes porter more conservative by trying to connect to ports before handing them out.
13407,Makes porter more conservative by trying to connect to ports before handing them out.,
13408,Fix import order,
13409,Merge pull request #3494 from hashicorp/enforce_json_extension,"Enforce json or hcl extension to Consul config files, updated unit tests"
13410,Bumps default Raft protocol to version 3. (#3477),"  Changes default Raft protocol to 3.   Changes numPeers() to report only voters.   This should have been there before, but it's more obvious that this is incorrect now that we default the Raft protocol to 3, which puts new servers in a read-only state while Autopilot waits for them to become healthy.   Fixes TestLeader_RollRaftServer.   Fixes TestOperator_RaftRemovePeerByAddress.   Fixes TestServer_*.   Relaxed the check for a given number of voter peers and instead do a thorough check that all servers see each other in their Raft configurations.  Fixes TestACL_*.  These now just check for Raft replication to be set up, and don't care about the number of voter peers.   Fixes TestOperator_Raft_ListPeers.   Fixes TestAutopilot_CleanupDeadServerPeriodic.   Fixes TestCatalog_ListNodes_ConsistentRead_Fail.   Fixes TestLeader_ChangeServerID and adjusts the conn pool to throw away sockets when it sees io.EOF.   Changes version to 1.0.0 in the options doc.   Makes metrics test more deterministic with autopilot metrics possible. "
13411,Fix one more unit test that created a config file,
13412,"Enforce json or hcl extension to Consul config files, updated unit tests",
13413,Tweaks some versions around 1.0.0.,
13414,Removes unused imports in agent_test.go.,
13415,Merge pull request #3488 from hashicorp/sentinel_oss,"Introduce Code Policy validation via sentinel into ACLs, with a noop implementation"
13416,"Introduce Code Policy validation via sentinel, with a noop implementation",
13417,"New config parser, HCL support, multiple bind addrs (#3480)"," new config parser for agent  This patch implements a new config parser for the consul agent which makes the following changes to the previous implementation:  add HCL support all configuration fragments in tests and for default config are    expressed as HCL fragments HCL fragments can be provided on the command line so that they    can eventually replace the command line flags. HCL/JSON fragments are parsed into a temporary Config structure    which can be merged using reflection (all values are pointers).    The existing merge logic of overwrite for values and append    for slices has been preserved. A single builder process generates a typed runtime configuration    for the agent.  The new implementation is more strict and fails in the builder process if no valid runtime configuration can be generated. Therefore, additional validations in other parts of the code should be removed. The builder also pre-computes all required network addresses so that no address/port magic should be required where the configuration is used and should therefore be removed.   Upgrade github.com/hashicorp/hcl to support int64   improve error messages   fix directory permission test   Fix rtt test   Fix ForceLeave test   Skip performance test for now until we know what to do   Update github.com/hashicorp/memberlist to update log prefix   Make memberlist use the default logger   improve config error handling   do not fail on non-existing data-dir   experiment with non-uniform timeouts to get a handle on stalled leader elections   Run tests for packages separately to eliminate the spurious port conflicts   refactor private address detection and unify approach for ipv4 and ipv6.   Fixes #2825   do not allow unix sockets for DNS   improve bind and advertise addr error handling   go through builder using test coverage   minimal update to the docs   more coverage tests fixed   more tests   fix makefile   cleanup   fix port conflicts with external port server 'porter'   stop test server on error   do not run api test that change global ENV concurrently with the other tests   Run remaining api tests concurrently   no need for retry with the port number service   monkey patch race condition in go-sockaddr until we understand why that fails   monkey patch hcl decoder race condidtion until we understand why that fails   monkey patch spurious errors in strings.EqualFold from here   add test for hcl decoder race condition. Run with go test -parallel 128   Increase timeout again   cleanup   don't log port allocations by default   use base command arg parsing to format help output properly   handle -dc deprecation case in Build   switch autopilot.max_trailing_logs to int   remove duplicate test case   remove unused methods   remove comments about flag/config value inconsistencies   switch got and want around since the error message was misleading.   Removes a stray debug log.   Removes a stray newline in imports.   Fixes TestACL_Version8.   Runs go fmt.   Adds a default case for unknown address types.   Reoders and reformats some imports.   Adds some comments and fixes typos.   Reorders imports.   add unix socket support for dns later   drop all deprecated flags and arguments   fix wrong field name   remove stray node-id file   drop unnecessary patch section in test   drop duplicate test   add test for LeaveOnTerm and SkipLeaveOnInt in client mode   drop ""bla"" and add clarifying comment for the test   split up tests to support enterprise/non-enterprise tests   drop raft multiplier and derive values during build phase   sanitize runtime config reflectively and add test   detect invalid config fields   fix tests with invalid config fields   use different values for wan sanitiziation test   drop recursor in favor of recursors   allow dns_config.udp_answer_limit to be zero   make sure tests run on machines with multiple ips   Fix failing tests in a few more places by providing a bind address in the test   Gets rid of skipped TestAgent_CheckPerformanceSettings and adds case for builder.   Add porter to server_test.go to make tests there less flaky   go fmt "
13418,Update docs for addr_type option for AWS Cloud auto-join (#3471),Fixes #3471
13419,Update CHANGELOG,
13420,Add support to discover public v4 and v6 addresses on AWS (#3471),"Update github.com/hashicorp/go-discover/provider/aws to support the 'addr_type' option which allows detection of private_v4, public_v4 and public_v6 addresses. Fixes #3471"
13421,Fix Azure cloud auto-join docs (#3466),Fixes #3466
13422,Merge pull request #3490 from ruslansennov/javadoc-fix,minor doc fix
13423,minor doc fix,
13424,Merge pull request #3485 from mstewa34/master,Fix docs/guides/segements sidebar selection.
13425,Fix health endpoint docs (#3483),Fixes #3483
13426,Fix docs/guides/segements sidebar selection.,
13427,Adds documentation for Sentinel integration in Consul Enterprise.,
13428,Robustifies check in TestCatalog_ListNodes_ConsistentRead_Fail test.,Fixes #3469
13429,Merge branch 'komamitsu-fix-doc-meta-to-nodemeta',
13430,Update example,
13431,Fix wrong field name: Meta -> NodeMeta,
13432,Puts tree in 0.9.4 dev mode.,
13433,Bumps website version to 0.9.3.,
13434,Release v0.9.3,
13435,Puts the tree in 0.9.3 release mode.,
13436,"Revert ""Manages segments list via a pointer.""",This reverts commit c277a4250461443cbd63de0259e5e32766f651ea.
13437,Manages segments list via a pointer.,
13438,Gets rid of spurious $(GOTEST_FLAGS) in the log file name.,
13439,Merge pull request #3456 from hashicorp/gossip-fix,Adds gossip keys to network segment memberlist configs.
13440,Cleans up formatting.,
13441,Shows the segment name in the keyring API and command output.,
13442,Populates the segment keyrings based on the LAN keyring.,
13443,Removes Go 1.8.x.,
13444,Merge pull request #3455 from dvrkps/patch-1,travis: clean go versions
13445,travis: clean go versions,
13446,Update CHANGELOG.md,
13447,Update outage.html.md,
13448,Moves reconcile loop into segment stub.,
13449,Merge pull request #3451 from hashicorp/merge-fix,Takes the skip out of the client check.
13450,Takes the skip out of the client check.,Without this the merge delegate won't check the segment for non-servers a little below here.
13451,Update segments.html.markdown.erb,
13452,Fixed typo in CHANGELOG.md,
13453,Release v0.9.3-rc2,
13454,Puts the tree into 0.9.3-rc2 release mode.,
13455,Update CHANGELOG.md,
13456,Merge pull request #3447 from hashicorp/issue-3070,Skips unique node ID check for old versions of Consul.
13457,Fixes incorrect comment.,
13458,Merge pull request #3450 from hashicorp/raft_peers_fix,"Change member join reconcile step to process joining itself, to handl…"
13459,Pulls down some code for the check loop.,
13460,Uses the Raft configuration for the self-add skip check.,
13461,"Change member join reconcile step to process joining itself, to handle node IP address changes correctly when number of servers < 3",
13462,Update CHANGELOG.md,
13463,Updates vendor.json using latest vendorfmt.,
13464,Merge pull request #3448 from hashicorp/sethvargo/updatecli,Update vendor to regroup by root commands
13465,Update vendor to regroup by root commands,
13466,Skips unique node ID check for old versions of Consul.,Fixes #3070.
13467,Release v0.9.3-rc1,
13468,Updates vendor.json for latest vendorfmt changes.,
13469,"Remaps servers to """" only when listing multiple segments.",
13470,Allow _all for WAN as a no-op.,
13471,Merge pull request #3445 from hashicorp/members-only,Simplifies members command to not fetch segments.
13472,"Makes the all segments query explict, and the default for consul members.",
13473,Simplifies members command to not fetch segments.,
13474,Puts the tree in 0.9.3-rc1 release mode.,
13475,Fix a typo in output.,Closes #3444.
13476,Merge pull request #3441 from KFishner/master,Add Network Segments overview page
13477,add newtork segments overview page,
13478,Update options.html.md,
13479,Update maint.html.markdown.erb,
13480,Updating maint.html to remove node maint (#3354), Updating maint.html to remove node maint  as discussed in #3268 maint mode does not have any affect on the node health.  Update maint.html.markdown.erb
13481,Update check.html.md,
13482,Update CHANGELOG.md,
13483,Update CHANGELOG.md,
13484,Fixes a bad link.,
13485,Adds simple rate limiting for client agent RPC calls to Consul servers. (#3440)," Added rate limiting for agent RPC calls. Initializes the rate limiter based on the config. Adds the rate limiter into the snapshot RPC path. Adds unit tests for the RPC rate limiter. Groups the RPC limit parameters under ""limits"" in the config. Adds some documentation about the RPC limiter. Sends a 429 response when the rate limiter kicks in. Adds docs for new telemetry. Makes snapshot telemetry look like RPC telemetry and cleans up comments."
13486,Update CHANGELOG.md,
13487,Update segment api docs,
13488,Change segment list endpoint in docs/client api,
13489,Tweaks network segments guide.,
13490,Update CHANGELOG.md,
13491,Update CHANGELOG.md,
13492,Merge pull request #3431 from hashicorp/network-segments-oss,
13493,Remove duplicate error message,
13494,Pass listeners into setupSegments,
13495,Update segment docs,
13496,Organize segments for a cleaner split between enterprise and OSS,
13497,Add doc sections for network segments,
13498,Fill in the segment in the QuerySource for prepared query lookups,
13499,Fix some inconsistencies with segment logic and comments,
13500,Merge pull request #3432 from xwvvvvwx/docs/add-quotes-to-gce-retry-join,docs: add quotes around example invocation for google cloud retry join
13501,docs: add quotes around example invocation for google cloud retry join,
13502,Default bind/advertise for segments to BindAddr/AdvertiseAddr,
13503,Merge pull request #3430 from hashicorp/server_provider_optional,Wire server provider for raft layer only on protocol version 3 and ab…
13504,"Wire server provider for raft layer only on protocol version 3 and above, and update changelog",
13505,Update coord display in ui to account for segments,
13506,Add segment addr field to tags for LAN flood joiner,
13507,Add agent.segment interpolation to prepared queries,
13508,Add rpc_listener option to segment config,
13509,Add segment config validation,
13510,Adds open source side of network segments (feature is Enterprise-only).,
13511,Merge pull request #3403 from hashicorp/raft_peers_fixes,This fixes #1580
13512,More cleanup from code review,
13513,"Remove copy pasted duplicate line, update documentation.",
13514,Updating vendor directory for raft address provider interface changes,
13515,Consolidate server lookup into one place and replace usages of localConsuls.,
13516,Remove unused function,
13517,Remove stray commented line,
13518,"Remove server address tracking logic from manager/router and maintain it as part of lan event listener instead. Used sync.Map to track this, and added unit tests",
13519,ServerAddressProvider interface also returns an error now,
13520,Use config struct to create NetworkTransport layer when setting up raft,
13521,Implement AddressProvider and wire that up to raft transport layer to support server nodes changing their IP addresses in containerized environments,
13522,build: fix scripts/dist.sh, get OSS version from version/version.go fix indenting to two spaces
13523,build: drop 'consul' build tag for OSS build,
13524,build: make tests independent of build tags,"When the metadata server is scanning the agents for potential servers it is parsing the version number which the agent provided when it joined. This version number has to conform to a certain format, i.e. 'n.n.n'. Without this version number properly set some tests fail with error messages that disguise the root cause. The default version number is currently set to 'unknown' in version/version.go which does not parse and triggers the tests to fail. The work around is to use a build tag 'consul' which will use the version number set in version_base.go instead which has the correct format and is set to the current release version. In addition, some parts of the code also require the version number to be of a certain value. Setting it to '0.0.0' for example makes some tests pass and others fail since they don't pass the semantic check. When using go build/install/test one has to remember to use '-tags consul' or tests will fail with non-obvious error messages. Using build tags makes the build process more complex and error prone since it prevents the use of the plain go toolchain and - at least in its current form - introduces subtle build and test issues. We should try to eliminate build tags for anything else but platform specific code. This patch removes all references to specific version numbers in the code and tests and sets the default version to '9.9.9' which is syntactically correct and passes the semantic check. This solves the issue of running go build/install/test without tags for the OSS build."
13525,Updates the change log.,
13526,Merge pull request #3428 from hashicorp/go-1.9,Upgrades Go version to 1.9.
13527,Upgrades Go version to 1.9.,
13528,API DOCS: Update snapshot curl example (#3423),
13529,doc: document that retry-join values are URL encoded,Fixes #3417
13530,doc: fix parameter name for aws retry-join,Fixes #3417
13531,Update CHANGELOG.md,
13532,Updating CHANGELOG,
13533,Merge pull request #3416 from hashicorp/issue_3409,Update raft library for windows snapshot fsync fixes.  This fixes #3409
13534,Update raft library for windows snapshot fsync fixes. This fixes #3409,
13535,Update CHANGELOG.md,
13536,Update CHANGELOG.md,
13537,agent: drop status code comments,
13538,agent: use http.StatusRequestEntityTooLarge instead of 413,
13539,agent: use http.StatusInternalServerError instead of 500,
13540,agent: use http.StatusMethodNotAllowed instead of 405,
13541,agent: use http.StatusNotFound instead of 404,
13542,agent: use http.StatusForbidden instead of 403,
13543,agent: use http.StatusUnauthorized instead of 401,
13544,agent: use http.StatusBadRequest instead of 400,
13545,doc: document cloud auto-joining for retry-join-wan,
13546,agent: support go-discover retry-join for wan,
13547,vendor: upgrade github.com/hashicorp/go-discover,Pull in improved debug logging for AWS
13548,doc: fix operator keyring delete method,
13549,acl: consolidate error handling (#3401),"The error handling of the ACL code relies on the presence of certain magic error messages. Since the error values are sent via RPC between older and newer consul agents we cannot just replace the magic values with typed errors and switch to type checks since this would break compatibility with older clients. Therefore, this patch moves all magic ACL error messages into the acl package and provides default error values and helper functions which determine the type of error."
13550,Update CHANGELOG.md,
13551,Update CHANGELOG.md,
13552,agent: drop unused code,This code from http://github.com/hashicorp/consul/pull/3353 is no longer required.
13553,dns: replace nameserver lookup with consistent rpc call,This patch replaces the code which determines the list of servers in the current cluster with an RPC call to get the list of active consul service instances which only run on servers. This replaces the previous implementation which was more complex and relied on serf messages which can provide a different view than the consistent response from the raft log. As a side effect it makes the implementation independent of the server and the agent which means it works consistently across both. Different behavior for server and agent was the root cause for the bug in http://github.com/hashicorp/consul/issue/3047. Fixes #3407
13554,dns: split node lookup from request handling,
13555,dns: refactor label by unrolling loop,
13556,dns: move ttl closer to usage,
13557,Update CHANGELOG.md,
13558,Merge pull request #3395 from Illirgway/patch-1,"Fix bug with unused (replaced with """") CONSUL_HTTP_AUTH in some places This fixes #3392"
13559,Merge pull request #3404 from zevin/master,Added configuration instructions for forwarding DNS queries from Unbound
13560,Added configuration instructions for forwarding DNS queries from Unbound to consul.,
13561,Update serf to pick up fixes for fsyncing snapshots and panic when coordinates are disabled,
13562,doc: update check example for agent api call,
13563,doc: add method and header to agent API docs for HTTP checks (#3400),
13564,Update CHANGELOG.md,
13565,Merge pull request #3396 from hashicorp/memberlist_deadlock,Update memberlist for a deadlock fix
13566,Update memberlist for a deadlock fix,
13567,"Fix bug with unused (replaced with """") CONSUL_HTTP_AUTH in some places","example: https://github.com/hashicorp/consul/blob/master/watch/plan.go#L26 conf := consulapi.DefaultConfig() conf.Address = address conf.Datacenter = p.Datacenter conf.Token = p.Token                             # <-- replace Token from DefaultConfig/CONSUL_HTTP_AUTH with """" client, err := consulapi.NewClient(conf)  how to reproduce bug: 0. consul -> localhost:8500 with more than 0 service checks 1. deny all for anonymous token 2. create appropriate acl  for watch checks (agent:read + node:read,service:read) 3. bash: CONSUL_HTTP_AUTH= consul watch -http-addr=localhost:8500 -type=checks # --> return [] consul watch -http-addr=localhost:8500 -type=checks -token= # -> return { .... right json result .... }"
13568,doc: retry_join is a string array (#3388),
13569,fix command/kv_import.go help text (#3387),
13570,Removes partial details in the retry_join config file section. (#3386),
13571,Document the new auto-join in the config and CLI (#3381), Document the new auto-join in the config and CLI Mention and example DNS
13572,Adds a note about the 429 response code.,
13573,Merge pull request #3385 from hashicorp/issue-3376,Switches to using a read lock for the agent's RPC dispatcher.
13574,Switches to using a read lock for the agent's RPC dispatcher.,This prevents RPC calls from getting serialized in this spot. Fixes #3376
13575,Puts tree in 0.9.3 dev mode.,
13576,Bumps website version to 0.9.2.,
13577,Release v0.9.2,
13578,Puts the tree in 0.9.2 release mode.,
13579,Update CHANGELOG.md,
13580,"agent: honor deprecated flags for retry-join-{ec2,azure,gce} (#3384)",
13581,Update CHANGELOG.md,
13582,Merge pull request #3383 from hashicorp/revert-3340-issue_2637,"Revert ""Return 403 rather than a 404 when acls cause all results to be filter…"""
13583,"Revert ""Return 403 rather than a 404 when acls cause all results to be filter…""",
13584,Merge pull request #3382 from hashicorp/revert-3380-fix_acls,"Revert ""Ensure that we return a permission denied only if the list of keys/en…"""
13585,"Revert ""Ensure that we return a permission denied only if the list of keys/en…""",
13586,Merge pull request #3380 from hashicorp/fix_acls,Ensure that we return a permission denied only if the list of keys/en…
13587,Added unit test case to kvs_endpointtest,
13588,Ensure that we return a permission denied only if the list of keys/entries prior to filtering by ACL is non empty,
13589,Merge pull request #3377 from hashicorp/refactor-pkgs,Refactor packages
13590,Add note about configuring recursors to be able to resolve external services.,
13591,agent: move agent/consul/agent to agent/metadata,
13592,agent: move agent/consul/servers to agent/router,
13593,agent: move agent/consul/structs to agent/structs,
13594,Merge pull request #3375 from sin5th/sin5th,fix UnitTest in acl
13595,Puts tree into 0.9.2 dev mode.,
13596,fix UnitTest in acl,
13597,Bumps download version to 0.9.1.,
13598,Release v0.9.1,
13599,Puts the tree into 0.9.1 release mode.,
13600,Cleans up some go fmt issues.,
13601,vendor: update github.com/armon/go-metrics,
13602,Update CHANGELOG.md,
13603,Merge pull request #3373 from hashicorp/issue-3253,Adds a guard to make sure that empty log lines don't close consul monitor.
13604,Adds a guard to make sure that empty log lines don't close consul monitor.,Fixes #3253.
13605,Fixes a vet error.,
13606,Update CHANGELOG.md,
13607,Update CHANGELOG.md,
13608,Merge pull request #3369 from hashicorp/metrics-enhancements,Add support for labels/filters from go-metrics
13609,Add doc links for metrics endpoint,
13610,Update api structs for metrics endpoint,
13611,vendor: update github.com/armon/go-metrics,
13612,Update docs for metrics endpoint,
13613,Update CHANGELOG.md,
13614,Merge pull request #3353 from hashicorp/issue_1301,Add NS records and other DNS RFC fixes.
13615,dns: minor cleanups,
13616,Add support for labels/filters from go-metrics,
13617,vendor: update go-metrics,
13618,Update CHANGELOG.md,
13619,Merge pull request #3367 from hashicorp/propagate-error,Propagates a better error message from memberlist.
13620,Propagates a better error message from memberlist.,Fixes #3312.
13621,Go back to using .node.dc.consul as the name of the ns record being returned.,
13622,Merge pull request #3365 from nicolaevladescu/master,Add a more elegant alternative to the reap option
13623,dns: keep NS names in consul domain,
13624,dns: postmaster -> hostmaster,
13625,dns: we do not support zone transfers,
13626,dns: drop CNAME for primary name server,
13627,"Added test case with IPV6 bind address for NS records, rewrote tests to use verify library and other code review feedback",
13628,"Added back glue records in NS response, expanded unit test. Also reused same function used in node lookup for adding A/AAAA records in the extra section of the NS response",
13629,"Don't add A records for NS requests, because the record being returned already resolves correctly. Also fixed all the unit tests, and ignored hostnames that don't meet valid dns hostname criteria",
13630,dns: provide correct SOA and NS responses,"This patch changes the behavior of the DNS server as follows:  The SOA response contains the SOA record in the Answer section instead   of the Authority section. It also contains NS records in the Authority   and the corresponding A glue records in the Extra section.   In addition, CNAMEs are added to the Extra section to make the   MNAME of the SOA record resolvable.  AAAA glue records are not yet supported.  The NS response returns up to three random servers from the   consul cluster in the Answer section and the glue A   records in the Extra section.  AAAA glue records are not yet supported."
13631,Unify regex used to identify invalid dns characters,
13632,"Use sanitized version of node name of server in NS record, and start with ""server"" rather than ""ns""",
13633,"Removed a copy pasted irrelevant comment, and other code review feedback",
13634,Add NS records and A records for each server. Constructs ns host names using the advertise address of the server.,
13635,Add a more elegant alternative to the reap option,Add a more elegant alternative to the reap option using the native built-in docker init process
13636,Adds a note about not replicating data to FAQ and federation-related spots.,
13637,Updated CHANGELOG.md,
13638,Pick up raft library change that fsyncs snapshot files correctly,
13639,Update CHANGELOG.md,
13640,Update CHANGELOG.md,
13641,Update CHANGELOG.md,
13642,Update CHANGELOG.md,
13643,Update CHANGELOG.md,
13644,Fixes a bunch of borken list nesting in the options doc.,
13645,Update CHANGELOG.md,
13646,Adds secure introduction for the ACL replication token. (#3357),"Adds secure introduction for the ACL replication token, as well as a separate enable config for ACL replication."
13647,Fix incorrect punctuation,
13648,Update CHANGELOG.md,
13649,doc: add retry-join docs for Softlayer,
13650,agent: fix code for updated go-discover signature,Closes #3351
13651,vendor: update hashicorp/go-discover to pull in hashicorp/go-discover#7,
13652,"Revert ""Rename GNUMakefile to Makefile (#3348)""",This reverts commit b0adb8af92de6bb1079a95e9ea28cadd4c0fcf06.
13653,Update CHANGELOG.md,
13654,Adds a new /v1/acl/bootstrap API (#3349),
13655,Remove people from community section (#3352)," Remove people from community section  This is going to be replaced with dynamic content from our CMS in the future, but we agreed to remove it in the interim.  Update deploy process"
13656,Rename GNUMakefile to Makefile (#3348),
13657,agent: Fix script quoting on windows (#1875),This patch fixes the quoting for executing scripts on windows and splits the platform dependent code. Fixes #1875
13658,Changes sidebar to match title (and be shorter).,
13659,Merge pull request #3347 from hashicorp/containers_guide,Adds a containers guide to the documentation section.
13660,"Minor tweaks, fixed spacing issue with docker run examples",
13661,Address more review comments,
13662,Added links to new containers guide to navbar and index pages,
13663,Added a section on configuration,
13664,More tweaks and grammar corrections,
13665,More review feedback,
13666,Adds missing Oxford comma :-),
13667,Update CHANGELOG.md,
13668,agent: use github.com/hashicorp/go-discover,"Replace the provider specific node discovery code with go-discover to support AWS, Azure and GCE. Fixes #3282"
13669,vendor: add go-discover,
13670,vendor: drop unused deps for old discover code,
13671,Addressed review comments,
13672,Merge pull request #3342 from ElijahCaine/patch-1,Register Entity Meta -> NodeMeta
13673,Register Entity Meta -> NodeMeta,Corrects a typo in the description of parameters for the Register Entity API endpoint.
13674,Capitalize Consul and Docker throughout,
13675,Update CHANGELOG.md,
13676,Merge pull request #3340 from hashicorp/issue_2637,This fixes issue #2637
13677,"Return nil instead of empty list when returning a PermissionDenied error, updated unit test",
13678,First pass at a consul containers guide,
13679,"Removes ""consul"" from .gitignore.","This was missing a lot of local changes during development (added files, etc.)."
13680,Return 403 rather than a 404 when acls cause all results to be filtered out. This fixes #2637,
13681,Adds a Guides link to the nav. (#3337),
13682,s/nodes/keys/,
13683,"Updated CHANGELOG.md to include GH#3322, and moved recursive delete fix to the improvements section.",
13684,Merge pull request #3332 from hashicorp/issue_3322,This fixes #3322
13685,Tweaked parsing error message to quote properly,
13686,Adds missing autopilot snapshot test and avoids snapshotting nil. (#3333),
13687,"Validate unix sockets and ip addresses as needed, more test cases",
13688,"Modify ResolveTmplAddrs to parse advertise IPs, added test cases that fail to parse correctly",
13689,Update area.html.md,
13690,Update area.html.md,
13691,Removed extra newlines,
13692,"Fix comments, and remove redundant TestConfig init from a couple of unit tests",
13693,add tests for go-sockaddr template parsing,
13694,agent: unix sockets are not ip addrs,
13695,config: refactor tmpl resolution fn,
13696,"Moved handling advertise address to readConfig and out of the agent's constructor, plus unit test fixes",
13697,Move go-socketaddr template parsing into config package to make it happen before creating a new agent. Also removed redundant parsetemplate calls from agent.go.,
13698,Update CHANGELOG.md,
13699,Adds option to prepared queries to remove empty tags. (#3330),
13700,Update CHANGELOG.md,
13701,"command/lock: Add -child-exitcode, return 2 on child error (#3329)"," Exit 2 if -child-exit-code and the child returned with an error. There is no platform independent way to check the exact return code of the child, so on error always return 2. Closes #947 Closes #1503"
13702,Update geo-failover.html.md,
13703,Update geo-failover.html.md,
13704,Update CHANGELOG.md,
13705,Adds a geo failover guide using prepared queries. (#3328),
13706,Update CHANGELOG.md,
13707,Update CHANGELOG.md,
13708,Adds support for agent-side ACL token management via API instead of config files. (#3324), Adds token store and removes all runtime use of config for ACL tokens. Adds a new API for changing agent tokens on the fly.
13709,Merge pull request #3313 from hashicorp/delete_prefix,This fixes #1278
13710,Update CHANGELOG.md,
13711,Add extra test case for deleting entire tree with empty prefix,
13712,Don't insert tombstone for empty prefix delete. Other minor unit test fixes,
13713,Removed redundant comments and unit test,
13714,Removed redundant call to reap tombstone from unit test,
13715,Improved unit test per code review,
13716,Govendor update go-memdb and go-immutable-radix to pick up changes for DeletePrefix,
13717,Use new DeletePrefixMethod for implementing KVSDeleteTree operation. This makes deletes on sub trees larger than one million nodes about 100 times faster. Added unit tests.,
13718,Update consul to version 0.9.0,
13719,Update options.html.md,
13720,Update catalog.html.md,
13721,Removes an unnecessary close.,
13722,Merge pull request #3318 from hashicorp/issue_3207,"Clean up temporary files on write errors, and ignore any temporary se…"
13723,Removed redundant logging,
13724,"Clean up temporary files on write errors, and ignore any temporary service files on load with a warning. This fixes #3207",
13725,Fix spelling (#3311),
13726,Update acl.html.md,
13727,Update index.html.md,
13728,Updates consul exec docs to mention ACLs. (#3308),"  Update documentation for consul exec to mention all permissions it needs.   Removed node write perm, not needed for consul exec   Converts ACL note into a table like the API docs, adds ACL guide x-ref. "
13729,Tweaks the error when scripts are disabled.,This will hopefully help people self-serve if they upgrade without accounting for this.
13730,Puts the tree in 0.9.1 dev mode.,
13731,Bumps download version to 0.9.0.,
13732,Release v0.9.0,
13733,Puts the tree in 0.9.0 release mode.,
13734,Fix UpgradeVersionTag field not being passed correctly (#3304),
13735,Update CHANGELOG.md,
13736,Clarifies endpoint blocking in the docs.,
13737,Update CHANGELOG.md,
13738,Made unit test for AddCheck error check the actual error string,
13739,Merge pull request #3303 from hashicorp/addcheck_test,Unit test for failure case of AddCheck
13740,Unit test for failure case of AddCheck,
13741,fix spelling in filenames,Fixes #3301
13742,agent: make docker client work on windows,
13743,agent: add dependencies for docker on windows,
13744,vendor: do not report appengine packages as missing (#3299),
13745,vendor: remove unused dependencies from vendor.json,
13746,build: add missing dependency for solaris/amd64,
13747,build: add missing build tags,
13748,Update CHANGELOG.md,
13749,Merge pull request #3296 from hashicorp/ensure_registration_race,Fix race condition between removing a service and adding a check for …
13750,Update CHANGELOG.md,
13751,Update CHANGELOG.md,
13752,Merge pull request #3298 from hashicorp/advanced-ap-upgrades,Add docs around custom versions in autopilot upgrades
13753,Clean up any watch monitors associated with a failed AddCheck,
13754,Tweaks title.,
13755,"Removed unit test, added clarifying comment and returned a friendlier error message similar to the one in agent's AddService method",Fixes #3297
13756,"Fix race condition between removing a service and adding a check for the same service, which was causing orphaned checks",
13757,Add UpgradeVersionTag information to docs,
13758,Add UpgradeVersionTag to autopilot get/set commands,
13759,Add UpgradeVersionTag to autopilot config,
13760,Update CHANGELOG.md,
13761,agent: stop docker checks on shutdown,
13762,agent: stop and remove docker checks,Note that there is no test since the correct way to solve (and test) this is to replace the different maps with a single one or to hide that functionality behind a separate data structure. This will be addressed in #3294. Fixes #3265
13763,Update CHANGELOG.md,
13764,agent: replace docker check,This patch replaces the Docker client which is used for health checks with a simplified version tailored for that purpose. See #3254 See #3257 Fixes #3270
13765,vendor: drop unused dependencies,
13766,Update acl.html.md,
13767,Improves structure of ACL guide.,
13768,Removes a merge conflict marker from the ACL guide.,
13769,Update upgrade-specific.html.md,
13770,Update upgrade-specific.html.md,
13771,build: fix travis build,
13772,build: use vendorfmt to make vendor.json more merge friendly,
13773,Update CHANGELOG.md,
13774,Removes the web UI as a separately released package.,"Since we have this built-in via the -ui configuration, the only reason to use -ui-dir is if you are tweaking the web UI, so there's no need to release the web UI as a .zip archive separately."
13775,Adds a missing newline to the snapshot agent page.,
13776,Update CHANGELOG.md,
13777,Removed localhost from links (#3289),Two links were still referring to localhost. Made them relative and tested.
13778,Release v0.9.0-rc1,
13779,Bumps tree into 0.9.0-rc1 release mode.,
13780,Performs surgery on Docker deps so we can build on Solaris and Windows. (#3288),
13781,Update upgrade-specific.html.md,
13782,Update CHANGELOG.md,
13783,Updates memberlist to pick up Lifeguard research findings. (#3287),See https://www.hashicorp.com/blog/making-gossip-more-robust-with-lifeguard/.
13784,Update CHANGELOG.md,
13785,Update CHANGELOG.md,
13786,Prevents disabling gossip keyring file from disabling gossip encryption. (#3278),
13787,Update CHANGELOG.md,
13788,"Adds new config to make script checks opt-in, updates documentation. (#3284)",
13789,Fixes a broken link.,
13790,Update CHANGELOG.md,
13791,Update CHANGELOG.md,
13792,Changes remote exec KV read to call GetTokenForAgent(). (#3283)," Changes remote exec KV read to call GetTokenForAgent(), which can use the acl_agent_token instead of the acl_token.  Fixes #3160.   Fixes remote exec unit test with ACLs.   Adds unhappy ACL path to unit tests for remote exec. "
13793,Update CHANGELOG.md,
13794,Adds node read privileges to the acl_agent_master_token. (#3277),Fixes #3113.
13795,Update CHANGELOG.md,
13796,azure: tag map can return nil (#3280),Fixes #3193
13797,Update CHANGELOG.md,
13798,vendor: drop unused dependencies,
13799,Update CHANGELOG.md,
13800,Obfuscates ACL tokens appearing in /v1/acl// APIs. (#3276),  Obfuscates ACL tokens appearing in /v1/acl APIs.   Makes test positively identify the desired strings.   Adds an example and explanation of the regular expression. 
13801,Update CHANGELOG.md,
13802,"Changes ACL clone response to 403 if not authorized, or if token doesn't exist. (#3275)",Fixes #1113
13803,Update CHANGELOG.md,
13804,Merge pull request #3274 from hashicorp/tls-area-docs,Add network area TLS setting to docs
13805,Add TLS setting to router areas,
13806,Update CHANGELOG.md,
13807,Expands and rework context support in the API client. (#3273),
13808,Add network area TLS setting to docs,
13809,Sort tags so output is deterministic.,
13810,Update CHANGELOG.md,
13811,accept recv-only channels for cancellations (#3271),"Cancellation channels are often derived from a Context, which returns a directional <-chan struct{} from Done(). In order to use this with parts of of the consul API, one is required to create a new channel and dispatch a separate goroutine to watch for context cancellation and close the new channel. Changing the signature for the methods that take cancellation channels will allow easier integration with existing uses of Context. Since the cancellation pattern only reads from these channels, there should be no backwards incompatibility with existing codebases, and most of the methods already accept only the correct type."
13812,vendor: github.com/Sirupsen -> github.com/sirupsen,
13813,vendor: update github.com/fsouza/go-dockerclient,Update go-dockerclient and dependant dependencies to add fix for go-dockerclient#622. Fixes #3254
13814,Update CHANGELOG.md,
13815,Update CHANGELOG.md,
13816,Add catalog CLI functions (#3204),
13817,Update acl.html.md,
13818,Update CHANGELOG.md,
13819,Update CHANGELOG.md,
13820,Cleans up version 8 ACLs in the agent and the docs. (#3248),"  Moves magic check and service constants into shared structs package.   Removes the ""consul"" service from local state.   Since this service is added by the leader, it doesn't really make sense to also keep it in local state (which requires special ACLs to configure), and requires a bunch of special cases in the local state logic. This requires fewer special cases and makes ACL bootstrapping cleaner.   Makes coordinate update ACL log message a warning, similar to other AE warnings.   Adds much more detailed examples for bootstrapping ACLs.   This can hopefully replace https://gist.github.com/slackpad/d89ce0e1cc0802c3c4f2d84932fa3234."
13821,Update agent.html.md (#3266),
13822,build: run vet on make test,
13823,update .gitignore,
13824,Update CHANGELOG.md,
13825,agent: fix go vet issue,
13826,Merge pull request #3258 from hashicorp/raft_library_update,Update raft library to pick up cleanup of temporary snapshot files
13827,Update raft library to pick up cleanup of temporary snapshot files,
13828,Adds a version note about block_endpoints config.,
13829,Update CHANGELOG.md,
13830,Adds the ability to blacklist specific HTTP endpoints. (#3252),
13831,Update CHANGELOG.md,
13832,UI cleanup follow up from #3245. (#3251),"  Removes unnecessary set for model component which will be null.   Returns a 404 for a missing node, not a 200 with an empty response.   Updates built-in web assets. "
13833,Update CHANGELOG.md,
13834,"Changes the default ACL token type to ""client"" in web UI. (#3246)","  Changes the default ACL token type to ""client"".   Updates built-in web assets. "
13835,Update CHANGELOG.md,
13836,"Cleans up web UI and fixes ACL token ""stuckness"" issue. (#3245)","  Removes GitHub reference.   Doesn't display ACL token on the unauthorized page.   Removes useless fetch for nodes and cleans up comments.   Provides a path to reset the ACL token when it's invalid.   This included making the settings page global so it's reachable, and adding some more information about an error on the error page.  Updates built-in web assets."
13837,Update autopilot.html.md,
13838,Update autopilot.html.md (#3244),
13839,Update CHANGELOG.md,
13840,DOCS: Add note in Ports Used section (#3241), Add note about port 8302 to address #3058
13841,Update CHANGELOG.md,
13842,vendor: update golang.org/x/sys/unix,Update golang.org/x/sys/unix to add s390 platform files Fixes #3240
13843,Pull in vendor updates,
13844,address review comments,
13845,build: build all packages together,"Build all packages together with a global timeout. Locally, the tests pass within 40 sec. On travis, we complete within 3-4 min. travis truncates the logs after 4MB which we are hitting so show the relevant information first and then whatever is left."
13846,agent: remove unused code,
13847,agent: make TestClient_RPC_ConsulServerPing more robust,
13848,agent: fix data races with registerEndpoint,Only register a different endpoint after it has been fully created.
13849,agent: make Reap test timing less aggressive,
13850,api: do not block in waitForLeader since the retry loop is handling this,
13851,Adds a temporary band-aid to the API tests.,"Once we can run the agent directly in-process with random ports from the kernel, and the special retry just in memberlist, we shouldn't need this."
13852,Adds a comment about flood joining.,
13853,Simplifies Serf dynamic port selection code.,"This isn't racy, it's just a little dirty. The listen will happen and a port will be selected and injected into the config once the Serf instance is created, so we don't need the retry loop here."
13854,memberlist: Monkey patch memberlist to fix port 0 behavior.,https://github.com/hashicorp/memberlist/pull/128
13855,test: Changes WAN/LAN join confirmer to use port number vs. address.,This fixes TestServer_JoinSeparateLanAndWanAddresses which sets bogus advertise addresses as part of the test. Port numbers uniquely identify members since everything is running on localhost.
13856,test: make joinLAN/WAN reliable,only return if the members can see each other
13857,rpc: make TestServer_JoinSeparateLanAndWanAddresses more robust,
13858,rpc: make TestClient_SnapshotRPC_TLS more robust,
13859,agent: make timing sensitive tests more robust, make timing less aggressive mark timing tests as non-parallel
13860,agent: fix TestCheckHTTP_TLSSkipVerify_true_pass,Make check timing less aggressive and give the test some time to execute.
13861,api: fix TestAPI_CatalogNodes test,
13862,retry: relax timing for test a bit,
13863,command: make TestExecCommandRun_CrossDC more resilient,Wait after WAN join that both members see each other.
13864,agent: do not modify agent config after NewAgent,
13865,agent: fix pending data races between localState and agent,This patch creates a local config structure for the local state which is independent from the agent but populated from its configuration. This avoids data races between the agent configuration which can change during tests and concurrent go routines using the configuraiton at the same time.
13866,dns: fix data race in TestDNS_ServiceLookup_FilterACL,The agent config cannot be modified after start.
13867,agent: fix data race in TestAgentAntiEntropy_EnableTagOverride,
13868,agent: clone partial consul config,The agent configuration for the consul server is a partial configuration which needs to be cloned to avoid data races. This is a stop-gap measure before moving the configuration into a separate package.
13869,dns: fix data races in DNS compression tests,Make the DisableCompression value configurable at runtime to allow tests to change it without restarting/recreating the server.
13870,agent: fix failing test from localState decoupling,Would be nice to know what changed though.
13871,agent: fix data race between consul server and local state,
13872,serf: monkey patch data race in github.com/hashicorp/serf,https://github.com/hashicorp/serf/pull/476 This should be replaced when the patch is merged upstream and the library is upgraded.
13873,rpc: monkey patch fix for data races for localState,"The tests that use the localState of the agent access the internal variables and call methods which are not guarded by locks creating data races in tests. While the use of internal variables is somewhat easy to spot the fact that not all methods are thread-safe is a surprise. A proper fix requires the localState struct to be moved into its own package so that tests in the agent can only access the external interface. However, the localState is currently dependent on the agent.Config which would create a circular dependency. Therefore, the Config struct needs to be moved first for this to happen. This patch literally monkey patches the use of the lock around the cases which have data races and marks them with a // todo(fs): data race comment."
13874,rpc: try shutting down leader first to avoid hang in TestLeader_LeftServer,
13875,rpc: fix logging and try quicker timing of TestServer_JoinSeparateLanAndWanAddresses,
13876,rpc: less agressive raft timeouts,Allowing more time for raft to consolidate should drop the number of leader elections.
13877,rpc: run agent/consul tests in parallel,
13878,rpc: refactor sessionTimers and fix racy tests,The sessionTimers map was secured by a lock which wasn't used properly in the tests. This lead to data races and failing tests when accessing the length or the members of the map. This patch adds a separate SessionTimers struct which is safe for concurrent use and which ecapsulates the behavior of the sessionTimers map.
13879,rpc: fix TestServer_Leave,wait for the leader election.
13880,rpc: fix TestSession_Renew,make the timing less tight
13881,rpc: fix TestReadyForConsistentRead,timing was too tight. Standardized name.
13882,rpc: fix for 'no leader' in TLS tests,Ensure both servers know about each other before looking for a leader.
13883,rpc: fix TestServer_JoinWAN_Flood,The second server in the first data center should not be in bootstrap mode.
13884,rpc: provide unique node names for server and client,
13885,rpc: prefix log output with test name,
13886,rpc: discover serf wan port before starting serf lan,When using dynamic ports for the serf clusters then the actual bind port of the serf WAN cluster needs to be discovered before the serf LAN cluster is started since the serf LAN cluster announces the port of the WAN cluster.
13887,rpc: bind rpc test server to port 0,
13888,rpc: refactor: unify test server setup,
13889,rpc: fix typos,
13890,api: refactor: unify naming of API tests,
13891,api: refactor: prefix all API tests with API_,
13892,agent: refactor: log to stderr during tests,
13893,agent: refactor: use handler for test http tls server,
13894,agent: refactor: make address translation part of the agent,
13895,Update # of ports (#3238),I counted twice.
13896,Adds links to Lifeguard info.,
13897,Update CHANGELOG.md,
13898,Updating CHANGELOG.md,
13899,Merge pull request #3231 from hashicorp/issue_3230,Fixes deadlock between barrier write and leader notify channel read .…
13900,"Rename to raftNotifyCh, fix typo",
13901,Merge pull request #3236 from hashicorp/serf_update,Update serf to pull in disk space failure recovery changes
13902,Update serf to pull in disk space failure recovery changes,
13903,Fixes deadlock between barrier write and leader notify channel read . Fixes #3230,
13904,Fix mistake in curl example for join agent API call,
13905,Update CHANGELOG.md,
13906,Correctly forward Host header in healthcheck (#3203),Host header must be set explicitely on http requests Change-Id: I91a32f0fb1ec3fbc713adf0e10869797e91172c7 Signed-off-by: Grégoire Seux g.seux@criteo.com
13907,Update CHANGELOG.md,
13908,Missing tools in makefile (#3205),
13909,Update CHANGELOG.md,
13910,fix type in make file,
13911,Update CHANGELOG.md,
13912,Bumps Raft library. (#3201),"This picks up the fix for https://github.com/hashicorp/raft/issues/212, which can cause out-of-date followers to get stuck in a loop trying to sync because they don't discard old snapshot data. There's some incidental reordering of the vendor.json since the last update to that file was merged by hand."
13913,Merge pull request #3195 from hashicorp/issue-3018-filehandle-leaks,Fix socket file handle leaks from old blocking queries upon consul reload
13914,Fix missing formatting directive causing go vet to fail,
13915,Updating CHANGELOG.md,
13916,Make sure to call cancel on the context,
13917,Puts the tree back in 0.9.0 dev mode.,
13918,Bumps download version to 0.8.5.,
13919,Release v0.8.5,
13920,Puts tree into 0.8.5 release mode.,
13921,Update CHANGELOG.md,
13922,"Revert ""agent: add allowStale option for HTTP API (#3142)""",This reverts commit 1e0fd27a74f5b18775ce91a84310430de35a4a80.
13923,Update CHANGELOG.md,
13924,Puts the tree in 0.8.5 dev mode.,
13925,Made helper method for query options with context,
13926,Fix socket file handle leaks from old blocking queries upon consul reload. This fixes issue #3018,
13927,Update middleman-hashicorp to 0.3.28 for mega nav fixes (#3194),
13928,agent: fix DNS recursor tests (#3190),"The makeRecursor function was using an unreliable mechanism to start a server with a random port. This patch changes this so that the server starts on port 0 to let the kernel pick a free port. In addition, to similar functions for starting a test DNS server were folded into one."
13929,Removes unneeded shutdown channel in config reading tests.,
13930,Removes some useless comments.,
13931,Fix invalid JSON in agent-api /v1/self example output. (#3183),
13932,Adds missing tls_skip_verify option to HTTP check example.,
13933,Update options.html.md,
13934,Update CHANGELOG.md,
13935,Update CHANGELOG.md,
13936,Fixes watch tracking during reloads and fixes address issue. (#3189),This patch fixes watch registration through the config file and a broken log line when the watch registration fails. It also plumbs all the watch loading through a common function and tweaks the unit test to create the watch before the reload.
13937,Update CHANGELOG.md,
13938,Update CHANGELOG.md,
13939,Changes host-based node IDs from opt-out to opt-in. (#3187),
13940,"Revert ""discover: move instance discover code into separate package (#3144)"" (#3180)",This reverts commit 26bfb2d00a30bf30ebdd85ba2e1e19f37355853f.
13941,Update CHANGELOG.md,
13942,Fixes broken HTTP header and method for health checks. (#3178), Fixes broken HTTP header and method for health checks. Adds a fuzz utility and test to make sure copy is complete.
13943,Update CHANGELOG.md,
13944,Update CHANGELOG.md,
13945,vendor: update github.com/hashicorp/memberlist (#3176),
13946,vendor: update github.com/hashicorp/go-discover,
13947,Update CHANGELOG.md,
13948,agent: add allowStale option for HTTP API (#3142),"This patch adds an ""allowStale"" option to the HTTP API configuration which allows stale reads to provide linear read scalability. Fixes #3142"
13949,"agent: add ""http_config""","This patch adds an ""http_config"" object to the config file and moves the ""http_api_response_headers"" option there. ""http_api_response_headers"" is now deprecated in favor of ""http_config.response_headers"""
13950,Update documentation and json examples for snapshot agent,
13951,Update CHANGELOG with consul enterprise static snapshot name feature,
13952,Update CHANGELOG.md,
13953,Warn when attempting to bootstrap an even number of nodes (#3158), Warn when attempting to bootstrap an even number of nodes.  Addresses #1282 add more detailed warning for two server case
13954,make test should fail fast on test compilation errors (#3172),
13955,Fixes checked in web assets and associated build scripts. (#3173),
13956,add missing packages,Moving the discover package dependencies out removed some packages we need.
13957,discover: move instance discover code into separate package (#3144),This patch moves the code that discovers instances from metadata information to github.com/hashicorp/go-discover with sub-packages for each provider.
13958,Update CHANGELOG.md,
13959,Update CHANGELOG.md,
13960,agent: notify systemd after JoinLAN (#2121),This patch adds support for notifying systemd via the NOTIFY_SOCKET by sending 'READY=1' to the socket after a successful JoinLAN. Fixes #2121
13961,Update CHANGELOG.md,
13962,agent: fix 'consul leave' shutdown race (#2880),"When the agent is triggered to shutdown via an external 'consul leave' command delivered via the HTTP API then the client expects to receive a response when the agent is down. This creates a race on when to shutdown the agent itself like the RPC server, the checks and the state and the external endpoints like DNS and HTTP. This patch splits the shutdown process into two parts:  shutdown the agent shutdown the endpoints (http and dns)  They can be executed multiple times, concurrently and in any order but should be executed first agent, then endpoints to provide consistent behavior across all use cases. Both calls have to be executed for a proper shutdown. This could be partially hidden in a single function but would introduce some magic that happens behind the scenes which one has to know of but isn't obvious. Fixes #2880"
13963,agent: drop unused constant,
13964,agent: make registerEndpoint private,This is only used for testing.
13965,agent: make the RPC endpoint overwrite mechanism more transparent,"This patch hides the RPC handler overwrite mechanism from the rest of the code so that it works in all cases and that there is no cooperation required from the tested code, i.e. we can drop a.getEndpoint()."
13966,agent: rename agent var,
13967,agent: move structs into consul/structs pkg, CheckDefinition ServiceDefinition CheckType
13968,agent: move NotifyGroup into the agent pkg,
13969,agent: move conn pool for muxed connections into separate pkg,
13970,agent: move the SnapshotReplyFn out of the way,When splitting up the consul package into server and client the SnapshotReplyFn needs to be in a separate package to avoid a circular dependency.
13971,agent: use the delegate interface for local state,
13972,agent: rename clientServer interface to delegate,
13973,Update CHANGELOG.md,
13974,Merge pull request #3154 from hashicorp/issue_2644_redux,"Fix stale reads on server startup. Consistent reads will now wait for up to config.RPCHoldTimeout for the server to get past its raft log, before returning an error. Servers that are starting up will eventually catch up.  This fixes issue #2644"
13975,Minor fixes per code review,
13976,Adds ConsulSwift Client to docs (#3166),
13977,Moves flag slice helper into configutil.,
13978,Moves config util helpers into their own package. (#3165),
13979,"Revert ""agent: fix 'consul leave' shutdown race (#2880)""",This reverts commit 90c83a32b586c7d4add8d8ca0096025ecb886a77.
13980,agent: fix 'consul leave' shutdown race (#2880),"When the agent is triggered to shutdown via an external 'consul leave' command delivered via the HTTP API then the client expects to receive a response when the agent is down. This creates a race on when to shutdown the agent itself like the RPC server, the checks and the state and the external endpoints like DNS and HTTP. Ideally, the external endpoints should be shutdown before the internal state but if the goal is to respond reliably that the agent is down then this is not possible. This patch splits the agent shutdown into two parts implemented in a single method to keep it simple and unambiguos for the caller. The first stage shuts down the internal state, checks, RPC server, ... synchronously and then triggers the shutdown of the external endpoints asychronously. This way the caller is guaranteed that the internal state services are down when Shutdown returns and there remains enough time to send a response. Fixes #2880"
13981,Update encryption.html.md,
13982,Added unit test to verify consistentRead method behavior,
13983,"Code review feedback, fixed major logic bug",
13984,"Redo bug fix for stale reads on server startup, leveraging RPCHOldtimeout instead of maxQueryTime, plus tests",
13985,Create CHANGELOG.md,
13986,Add an option to disable keyring file (#3145),Also disables keyring file in dev mode.
13987,Typo in CHANGELOG (#3149),
13988,Create CHANGELOG.md,
13989,Add EDNS0 support (#3131),"This is a refactor of GH-1980. Originally I tried to do a straight rebase, but the code has changed too much."
13990,Merge pull request #3143 from hashicorp/fix_build,Fixed static asset build target and checked in new executable for ass…
13991,Fixed static asset build target and checked in new executable for assetfs,
13992,Fix bad copy/paste (#3139),"Description was probably originally copied from the ""delete"" request."
13993,simplify main.go,
13994,pkg refactor,"command/agent/*                  -> agent/* command/consul/*                 -> agent/consul/* command/agent/command{,_test}.go -> command/agent{,_test}.go command/base/command.go          -> command/base.go command/base/*                   -> command/* commands.go                      -> command/commands.go  The script which did the refactor is: (     cd $GOPATH/src/github.com/hashicorp/consul     git mv command/agent/command.go command/agent.go     git mv command/agent/command_test.go command/agent_test.go     git mv command/agent/flag_slice_value{,_test}.go command/     git mv command/agent .     git mv command/base/command.go command/base.go     git mv command/base/config_util{,_test}.go command/     git mv commands.go command/     git mv consul agent     rmdir command/base/ gsed -i -e 's|package agent|package command|' command/agent{,_test}.go gsed -i -e 's|package agent|package command|' command/flag_slice_value{,_test}.go gsed -i -e 's|package base|package command|' command/base.go command/config_util{,_test}.go gsed -i -e 's|package main|package command|' command/commands.go  gsed -i -e 's|base.Command|BaseCommand|' command/commands.go gsed -i -e 's|agent.Command|AgentCommand|' command/commands.go gsed -i -e 's|\tCommand:|\tBaseCommand:|' command/commands.go gsed -i -e 's|base\.||' command/commands.go gsed -i -e 's|command\.||' command/commands.go  gsed -i -e 's|command|c|' main.go gsed -i -e 's|range Commands|range command.Commands|' main.go gsed -i -e 's|Commands: Commands|Commands: command.Commands|' main.go  gsed -i -e 's|base\.BoolValue|BoolValue|' command/operator_autopilot_set.go gsed -i -e 's|base\.DurationValue|DurationValue|' command/operator_autopilot_set.go gsed -i -e 's|base\.StringValue|StringValue|' command/operator_autopilot_set.go gsed -i -e 's|base\.UintValue|UintValue|' command/operator_autopilot_set.go  gsed -i -e 's|\bCommand\b|BaseCommand|' command/base.go gsed -i -e 's|BaseCommand Options|Command Options|' command/base.go gsed -i -e 's|base.Command|BaseCommand|' command/*.go gsed -i -e 's|c\.Command|c.BaseCommand|g' command/*.go gsed -i -e 's|\tCommand:|\tBaseCommand:|' command/*_test.go gsed -i -e 's|base\.||' command/*_test.go  gsed -i -e 's|\bCommand\b|AgentCommand|' command/agent{,_test}.go gsed -i -e 's|cmd.AgentCommand|cmd.BaseCommand|' command/agent.go  gsed -i -e 's|cli.AgentCommand = new(Command)|cli.Command = new(AgentCommand)|' command/agent_test.go gsed -i -e 's|exec.AgentCommand|exec.Command|' command/agent_test.go gsed -i -e 's|exec.BaseCommand|exec.Command|' command/agent_test.go gsed -i -e 's|NewTestAgent|agent.NewTestAgent|' command/agent_test.go gsed -i -e 's|= TestConfig|= agent.TestConfig|' command/agent_test.go gsed -i -e 's|: RetryJoin|: agent.RetryJoin|' command/agent_test.go  gsed -i -e 's|\.\./\.\./|../|' command/config_util_test.go  gsed -i -e 's|\bverifyUniqueListeners|VerifyUniqueListeners|' agent/config{,_test}.go command/agent.go gsed -i -e 's|\bserfLANKeyring\b|SerfLANKeyring|g' agent/{agent,keyring,testagent}.go command/agent.go gsed -i -e 's|\bserfWANKeyring\b|SerfWANKeyring|g' agent/{agent,keyring,testagent}.go command/agent.go gsed -i -e 's|\bNewAgent\b|agent.New|g' command/agent{,_test}.go gsed -i -e 's|\bNewAgent|New|' agent/{acl_test,agent,testagent}.go  gsed -i -e 's|\bAgent\b|agent.&|g' command/agent{,_test}.go gsed -i -e 's|\bBool\b|agent.&|g' command/agent{,_test}.go gsed -i -e 's|\bConfig\b|agent.&|g' command/agent{,_test}.go gsed -i -e 's|\bDefaultConfig\b|agent.&|g' command/agent{,_test}.go gsed -i -e 's|\bDevConfig\b|agent.&|g' command/agent{,_test}.go gsed -i -e 's|\bMergeConfig\b|agent.&|g' command/agent{,_test}.go gsed -i -e 's|\bReadConfigPaths\b|agent.&|g' command/agent{,_test}.go gsed -i -e 's|\bParseMetaPair\b|agent.&|g' command/agent{,_test}.go gsed -i -e 's|\bSerfLANKeyring\b|agent.&|g' command/agent{,_test}.go gsed -i -e 's|\bSerfWANKeyring\b|agent.&|g' command/agent{,_test}.go  gsed -i -e 's|circonus\.agent|circonus|g' command/agent{,_test}.go gsed -i -e 's|logger\.agent|logger|g' command/agent{,_test}.go gsed -i -e 's|metrics\.agent|metrics|g' command/agent{,_test}.go gsed -i -e 's|// agent.Agent|// agent|' command/agent{,_test}.go gsed -i -e 's|a\.agent\.Config|a.Config|' command/agent{,_test}.go  gsed -i -e 's|agent\.AppendSliceValue|AppendSliceValue|' command/{configtest,validate}.go  gsed -i -e 's|consul/consul|agent/consul|' GNUmakefile  gsed -i -e 's|\.\./test|../../test|' agent/consul/server_test.go  # fix imports f=$(grep -rl 'github.com/hashicorp/consul/command/agent' * | grep '\.go') gsed -i -e 's|github.com/hashicorp/consul/command/agent|github.com/hashicorp/consul/agent|' $f goimports -w $f  f=$(grep -rl 'github.com/hashicorp/consul/consul' * | grep '\.go') gsed -i -e 's|github.com/hashicorp/consul/consul|github.com/hashicorp/consul/agent/consul|' $f goimports -w $f  goimports -w command/*.go main.go  )"
13995,test: move discover tests,
13996,use 'c' as command receiver for simple commands,
13997,agent: move watch plans into agent,
13998,Update CHANGELOG.md,
13999,Create CHANGELOG.md,
14000,Fixed regression with dns server start condition (#3137),
14001,Update CHANGELOG,
14002,Merge pull request #3136 from hashicorp/sethvargo/api-ux,Parse values given to ?passing in the API
14003,Simplify,
14004,Update comment,
14005,Parse values given to ?passing in the API,"This PR fixes GH-2212 in the most backwards-compatible way I can think of. If the user does not pass a value for ?passing, it's assumed to be true, which mirrors the current behavior. However, if the user passes any value for passing, that value is parsed as a bool using strconv. It's important to note that this is technically a breaking change. Previously using ?passing=false would return only passing nodes. While this behavior is obviously incorrect, it was the previous behavior. We should call this out very clearly in the CHANGELOG."
14006,Puts the tree into 0.9.0 dev mode.,
14007,Bumps the website version to 0.8.4.,
14008,Release v0.8.4,
14009,Puts the tree into 0.8.4. release mode.,
14010,Removes obsolete Windows build scripts.,
14011,Removes obsolete Windows batch file and instructions.,"We officially just cross-compile to Windows, and soon will have the normal Go build working. Since we no longer have any cgo dependencies, none of this complexity is really needed."
14012,Merge pull request #3133 from hashicorp/less-parallel,Makes tests less parallel and relaxes timing.
14013,Opens up timing bound on flaky test.,
14014,Removes t.Parallel() on any consul package tests that use a test server.,
14015,Merge pull request #3128 from hashicorp/broken-tests,Fixes HTTP header compare by including standard headers.
14016,Fixes HTTP header compare by including standard headers.,
14017,agent: fix time.Duration parsing,"The duration can be passed as a string, a float64 or a time.Duration and this patch handles this properly."
14018,Create CHANGELOG.md,
14019,Updated changelog,
14020,Merge pull request #3127 from hashicorp/s3_encrypt_doc,Added documentation for new s3 server side encryption
14021,Added documentation for new s3 server side encryption,
14022,Merge pull request #3126 from hashicorp/doc-eureka,website: Add a vs Eureka. Fixes #1295
14023,website: Add a vs Eureka. Fixes #1295,
14024,Create CHANGELOG.md,
14025,Create CHANGELOG.md,
14026,Create CHANGELOG.md,
14027,Merge pull request #3124 from hashicorp/log-signal-events,agent: log events and exit code to the log file
14028,Update middleman,
14029,test: log exit code in cluster.bash,
14030,agent: log events and exit code to the log file,"This patch logs the signals, events, errors and the exit code to the log file instead of printing it on the console. This should provide a more complete picture for debugging."
14031,log: use prefix [ERR] instead of [ERROR],
14032,Fixes version reference in encryption docs.,
14033,Updates static assets to latest.,
14034,Merge pull request #3123 from hashicorp/upgrade-warn,Changes FSM catalog info messages into warnings.
14035,Changes FSM catalog info messages into warnings.,
14036,Update CHANGELOG.md,
14037,Merge pull request #3121 from hashicorp/increase-graceful-timeout,agent: increase graceful shutdown timeout
14038,Merge pull request #3118 from katiebayes/master,Add enterprise badges and update middleman version
14039,Merge pull request #3120 from hashicorp/better-shutdown-logs,agent: log different shutdown stages
14040,Merge pull request #3119 from hashicorp/contrib-cluster-test-script,test: add script for starting a multi-node cluster
14041,Update CHANGELOG.md,
14042,agent: increase graceful shutdown timeout,"When triggering a leave through an INT/TERM signal the hard-coded timeout of 5 seconds is too short to complete the leave successfully. Therefore, the agent always times out. This value should probably configurable."
14043,agent: log differnt shutdown stages,Log the different code paths during shutdown.
14044,test: add script for starting a multi-node cluster,
14045,Update CHANGELOG.md,
14046,update middleman version from 25 to 26,
14047,agent: support custom header and method for http checks (#3106),This patch adds support for custom headers and method for HTTP checks. Fixes #2474 Fixes #2657 Fixes #3106
14048,Merge branch 'master' of https://github.com/katiebayes/consul,
14049,update middleman version,
14050,Merge pull request #3116 from hashicorp/reup-certs,Updates unit test certs for another year.
14051,Updates unit test certs for another year.,
14052,Merge pull request #3114 from hashicorp/minor_readme_fixes,update README to mention using CONSUL_DEV
14053,update README to mention using CONSUL_DEV,
14054,test: refactor TestDecodeConfig test,This patch refactors the multiple tests for DecodeConfig into a single table-driven test that tests most fields individually.
14055,test: Fix TestAgent_Reload,This test was still referring to cmd.agent which has been removed.
14056,"add enterprise badge style alert boxes, change guides/areas.html.md to erb file",
14057,Merge pull request #3105 from hashicorp/test-stability,Tweaks things for better test stability.
14058,agent: fix graceful http server shutdown,
14059,agent: cleanup run method,
14060,agent: move registerWatches out of the run method,
14061,agent: move telemetry out of the run method,
14062,agent: move update check out of the run method,
14063,agent: simplify signal handling,
14064,agent: move config reloading into the agent,
14065,agent: move parseMetaPair to config and export,
14066,agent: remove agent from command,Decouple command and agent a bit more.
14067,agent: move retry join into agent,
14068,agent: add GossipEncrypted function,Remove dead code and expose a GossipEncrypted() method on the agent instead of accessing the internal delegate.
14069,Update CHANGELOG.md,
14070,Update CHANGELOG.md,
14071,Merge pull request #3077 from jwasinger/issue-2850,Prevent Session.Destroy from leaving open TCP connections
14072,Cleans up an unrelated vet error.,
14073,Adds back the port shuffle on agent start retries.,
14074,Takes parallel away from some currently flaky tests.,
14075,Merge pull request #3104 from hashicorp/bad-shutdown,Cleans up incorrect router shutdown.
14076,Cleans up incorrect router shutdown.,Fixes #3102.
14077,Merge pull request #3103 from hashicorp/fail-for-sure,Makes test target fail based on return code from go test.
14078,Makes test target fail based on return code from go test.,
14079,Update CHANGELOG.md,
14080,Update CHANGELOG.md,
14081,Merge pull request #2621 from alicebob/devwatch,reset watch's lastIndex on error
14082,"Revert ""test: run all tests together again""",This reverts commit e48df7b57272f1075175d5bcd44746ec6eb8ca02.
14083,vendor: Update github.com/shirou/gopsutil,Pull in fix for data race on host.BootTime.
14084,vendor: upgrade github.com/armon/go-metrics,Pull in changes to fix race condition for concurrent tests.
14085,Do not recurse when the service address is a local cname,Fixes #2795
14086,agent: LastContact cannot be negative (#3067),The X-Consul-LastContact header cannot be negative. Fixes #3067
14087,vendor: upgrade github.com/go-ole/go-ole,This replaces the monkey patch for github.com/go-ole/go-ole/pull/144 See #3097
14088,vendor: monkey patch github.com/go-ole/go-ole support for s390x,Remove this once https://github.com/go-ole/go-ole/pull/144 gets merged. Fixes #3097
14089,"Revert ""vendor: monkey patch github.com/go-ole/go-ole support for s390x""",This reverts commit 50fe2148a81a2d91c7b6f75246f16b452d811e0f.
14090,vendor: monkey patch github.com/go-ole/go-ole support for s390x,Remove this once https://github.com/go-ole/go-ole/pull/144 gets merged.
14091,test: use random ports for consul tests,
14092,test: replace one more BoolFalse with agent.Bool(),
14093,test: we will not use dev mode for testing for now,
14094,test: stagger retry attempts of TestAgent.Start,
14095,test: make TestAgent setup reusable,Pick the random ports only once and try starting with them a number of times so that the configuration can be re-used. This is because the ports are written into the data files and a subsequent agent reading the files needs to have the same ports. For the same reason we do not remove the data directory on every attempt since this makes it impossible to re-read the data files.
14096,agent: use agent logger for consul client and deps,
14097,test: start secondary agents also via TestAgent,
14098,agent: set tcpKeepAliveListener when there is no error,
14099,test: run all tests together again,Looks like I have eliminated the troublesome tests for now.
14100,test: use test name as log prefix,
14101,agent: simplify shutdown timeout logging,Note that we are currently timing out every time. This still needs to be investigated.
14102,agent: set proto to http since we are logging it now,
14103,test: Use Bool() instead of &BoolTrue/False since,
14104,test: don't panic if there is no error,
14105,Address review comments,
14106,agent: start HTTPS only if there is a cert and key,
14107,agent: refactor DNS and HTTP server, refactor DNS server to be ready for multiple bind addresses drop tcpKeepAliveListener since it is default for the HTTP servers add startup timeout watcher for HTTP servers identical to DNS server
14108,test: fail if there is no leader,
14109,vendor: patch github.com/mitchellh/cli until help output is fixed,We need to init the flagset that cli uses to generate the help outside of the Run method since Run isn't called anymore for printing help.
14110,build: update makefile, capture all output to test.log only and print only failures always print output on travis test github.com/hashicorp/consul/consul separately until we've   found the interactions with the other packages during testing.
14111,test: increase sleep time for test,
14112,test: allow tests to control anti-entropy syncs,
14113,test: run mock dns recursors on random ports,
14114,test: skip tests that use cmd.Run until signal handling is fixed,
14115,test: add test for starting/stopping lots of agents,
14116,test: use UniqueID prefix for check tests to unify log output,
14117,test: improve TestAgent,  don't use retry to try restarting the agent   this caused some issues when the startup would fail in   a separate go routine   clear out the data directory on every retry since the ports   are stored in the raft data files   set a unique id for every agent to allow for tracking of   concurrent output 
14118,agent: fix logging, use agent logger for consul/serf/raft/dns/agent/... support optional id for concurrent tests
14119,test: call t.Fatal() from main go routine,
14120,dns: do not log socket close during shutdown,
14121,agent: print more useful shutdown message,
14122,consul: use correct shutdownCh for Router,
14123,test: start sync after agent start,
14124,test: add test name to output,
14125,test: perform blocking query on agent,
14126,test: parallelize dns test,
14127,test: fix failing test,
14128,test: remove output to stdout,
14129,test: use cli.NewMockUi instead of new(cli.MockUi),Use the constructor function to prevent a nil panic if there was no write to the output buffers.
14130,test: run consul tests in parallel,
14131,test: fix data race with endpoints,
14132,agent: shutdown delegate if created,When the TestAgent shuts down a half-started agent the delegate may not have been created at this point.
14133,agent: shutdown dns servers on error,
14134,test: Shutdown half-started agent before retrying,
14135,test: fix data race in MockNotify,42 -> 32 data races
14136,vendor: fix data race in github.com/armon/go-metrics/start.go,96 -> 42 data races
14137,vendor: update github.com/mitchellh/cli,This pulls in the patch that fixes the nil panic and the data race in MockUi.
14138,build: add target for running tests with race detector,
14139,test: run command tests in parallel,
14140,test: address pull request comments,
14141,test: remove ACL options from default test config,
14142,test: allocate ports in blocks of 10,
14143,test: refactor command tests to use TestAgent,
14144,test: retry a bit more often,
14145,agent: rename *Config vars to 'cfg',
14146,agent: rename *Command vars to 'cmd','c' is ambigious and it conflicts with 'config'.
14147,test: rename *Config vars to 'cfg','c' is ambigous since Command also uses this and we want to use 'config' as a package name.
14148,test: use less aggressive retry for agent startup,
14149,test: use system temp dir for TestAgent,
14150,test: a.config -> a.Config,
14151,test: refactor httpTest with TestAgent,
14152,test: run agent tests in parallel,This brings down the test run from 108 sec to 15 sec. There is an occasional port conflict because of the nature the next port is chosen. So far it seems rare enough to live with it.
14153,agent: refactor tests for TestAgent,Refactored tests that use  makeAgentXXX makeDNSServerXXX makeHTTPServerXXX
14154,agent: add TestAgent to replace other mechanisms,TestAgent will replace the following mechanisms to start test agents in subsequent requests:  makeAgentXXX makeDNSServerXXX makeHTTPServerXXX testServer httpTest
14155,agent: simplify agent creation,This patch creates an agent with just a config struct and allows for other fields to be set as required.
14156,agent: move http/dns endpoints into agent,Move the HTTP and DNS endpoints into the agent and control their lifespan via the agent. This removes the requirement to manage HTTP and DNS servers indpendent of the agent since the agent is mostly useless without an endpoint and the endpoints without the agent.
14157,agent: fix comment,
14158,agent: simplify socket address helper,
14159,agent: replace goto with local function,
14160,agent: inline uiDir field,uiDir can be inlined as agent.config.UIDir
14161,agent: drop logOutput parameter,agent.logOutput is identical to logOutput
14162,agent: drop config argument,agent.config and config are identical.
14163,test: shutdown server properly,
14164,test: sanitize temp dir names since subtest names have slashes,
14165,test: capture stderr in test.log,
14166,Update CHANGELOG.md,
14167,Add settings for upshifting to encrypted gossip (#3079),
14168,Removes an obsolete endpoints document.,
14169,Removes obsolete agent API documentation.,
14170,Merge pull request #3072 from hashicorp/api-httpclient,Tweaks to api's TLS logic in NewClient
14171,Update CHANGELOG.md,
14172,Update CHANGELOG.md,
14173,Merge pull request #3076 from hashicorp/reject-nan,Adds defensive checks for NaN and Inf values in network coordinates.
14174,Pulls in Serf logger fix.,
14175,Prevent Session.Destroy from leaving open TCP connections,
14176,Prevents bad coordinates and cleans them up in the database.,
14177,Updates Serf to pick up small fixes and coordinate NaN/Inf defenses.,
14178,Update CHANGELOG.md,
14179,Merge pull request #3074 from hashicorp/go-1.8.3,Bumps Go version to 1.8.3.
14180,Bumps Go version to 1.8.3.,
14181,Don't overwrite Transport's TLS config if it's been set,
14182,Remove superfluous default HttpClient check in NewClient,
14183,Update CHANGELOG.md,
14184,doc: update comments and run goimports,
14185,agent: add RetryJoin support for Azure,Pull #2978 from leowmjw/develop Resolves #2978
14186,vendor: add github.com/Azure/azure-sdk-for-go,
14187,vendor: add github.com/Azure/go-autorest/autorest/to,
14188,vendor: add github.com/Azure/go-autorest/autorest/validation,
14189,vendor: add github.com/Azure/go-autorest/autorest/azure,
14190,vendor: add github.com/Azure/go-autorest/autorest/date,
14191,vendor: add github.com/Azure/go-autorest/autorest,
14192,vendor: add github.com/dgijalva/jwt-go,
14193,Update CHANGELOG.md,
14194,Merge pull request #3068 from sean-/f-vendor-sockaddr-update,Update hashicorp/go-sockaddr to the latest version.
14195,Update hashicorp/go-sockaddr to the latest version.," Adds plural IP helpers (e.g. GetPrivateIPs, GetPublicIPs)   hashicorp/go-sockaddr#11 Adds subnet math hashicorp/go-sockaddr#8 Fixes helper functions for dual-homed hosts hashicorp/go-sockaddr#10)"
14196,vendor: remove github.com/hashicorp/scada-client,
14197,Merge pull request #3062 from kopaka/patch-1,Spelling Error
14198,Spelling Error,Sample Respons should be Sample Response.
14199,Update CHANGELOG.md,
14200,Merge pull request #2812 from naaaargle/master,UI Improvement: Add sticky scroll to side panel
14201,Update CHANGELOG.md,
14202,Merge pull request #2901 from deckarep/consul-ensure-exit-non-zero-on-timeout,Ensure to exit with a non-zero status code when a timeout and all jobs are not completed.
14203,website: rename .markdown to .md,
14204,Update CHANGELOG.md,
14205,website: fix typo,
14206,agent: support custom check id and name,This patch adds support for a custom check id and name when registering a service. This is achieved by adding a CheckID and a Name field to the CheckType structure which is used to register checks with a service and when returning health check definitions. CheckDefinition is a superset of CheckType which duplicates some of the fields of CheckType. This patch decouples these two structures by removing the embedding of CheckType in CheckDefinition. Fixes #3047
14207,agent: move isAddrANY to separate package,
14208,agent: Replace client/server with delegate interface,"This patch adds a new internal interface clientServer which defines the common methods of consul.Client and consul.Server. This allows to replace the following code if a.server != nil {     a.server.do() } else {     a.client.do() }  with a.delegate.do()  In case a specific type is required a type check can be performed: if srv, ok := a.delegate.(*consul.Server); ok {     srv.doSrv() }"
14209,Update CHANGELOG.md,
14210,"agent: allow ""::"" as IPv6 bind address",Fixes #2285
14211,build: make linux/arm64 package,Fixes #3042
14212,test: fix go vet issue,
14213,test: make test less flaky,
14214,test: bump ReadyTimeout to 10s,
14215,test: add helper for ioutil.TempDir/TempFile,This creates a simplified helper for temporary directories and files. All path names are prefixed with the name of the current test. All files and directories are stored either in /tmp/consul-test or /tmp if the former could not be created. Using the system temp dir breaks some tests on macOS where the unix socket path becomes too long.
14216,test: simplify makefile,
14217,test: lower wait time for some tests,
14218,test: suppress osx firewall warning,macOS displays a firewall warning dialog when an unsigned application is trying to bind to a non-loopback address. This patch updates some test configurations to ensure binding to a loopback address where possible to suppress these warnings.
14219,test: include test name in temp file/dir,This helps identifying hanging tests by looking at the process list.
14220,Merge pull request #3038 from jkodroff/patch-2,Update install.sh for Consul 0.8.3
14221,Update install.sh for Consul 0.8.3,
14222,Bumps website download link to 0.8.3.,
14223,Updates expired test certs and includes a script to generate new certs.,
14224,Puts the tree in version 0.8.4 dev mode.,
14225,test: drop unused code,
14226,Removes a stale comment about the RPC source address.,
14227,Update CHANGELOG.md,
14228,Update CHANGELOG.md,
14229,agent: use bind address as src unless INADDR_ANY,"Use the bind address as source address for outgoing RPC connections unless it is INADDR_ANY. The current code uses the advertise address which will not work in certain environments where the advertise address is not routable in the network of the agent, e.g. NAT environment, container... After all, that is the purpose of the advertise address. See #2822"
14230,agent: use helper for INADDR_ANY,
14231,Update CHANGELOG.md,
14232,Update CHANGELOG.md,
14233,Add a path for transitioning to TLS on an existing cluster (#3001),Fixes #1705
14234,agent: drop atlas/scada code,
14235,test: refactor TestAgent_Leave_ACLDeny to use only one server,
14236,test: use isPermissionDenied,
14237,test: replace blocks and comments with sub-tests,
14238,test: inline request body encoding,
14239,test: add helper for permission denied check,
14240,test: drop error check on http.NewRequest,Most URLs are static so the error check is redundant. The subsequent test wouldn't work if the url is wrong.
14241,Update CHANGELOG.md,
14242,Update CHANGELOG.md,
14243,Update CHANGELOG.md,
14244,Update CHANGELOG.md,
14245,Merge pull request #3024 from sean-/f-illumos-duex,Add the minimal fix to restore being able to compile on Illumos.
14246,agent: Disallow :: or [::] as advertise or advertise-wan address,
14247,agent: Disallow :: and [::] as service address,
14248,agent: Disallow 0.0.0.0 as advertise or advertise-wan address,Fixes #2961
14249,agent: Disallow 0.0.0.0 as service address,Fixes #2961
14250,test: Make testserver start timeout configurable.,
14251,Add the minimal fix to restore being able to compile on Illumos.,This brings in the necessary fix to satisfy #2989 without dragging along additional vendor updates reverted in #3019.
14252,Puts tree into 0.8.3 development mode.,
14253,Bumps Consul version to 0.8.2.,
14254,Release v0.8.2,
14255,Puts tree into 0.8.2 release mode.,
14256,Merge pull request #3020 from hashicorp/test-tweaks,Cleans up vet errors and tweaks unit tests that were failing in Travis CI.
14257,Fixes vet errors.,
14258,Tweaks some tests that were having a hard time in Travis CI and,bumps up the default retry time.
14259,Adds prepared query API to ACLs table.,
14260,Merge pull request #3008 from hashicorp/d-index-enterprise-features,Add Consul Enterprise section to Docs
14261,Update CHANGELOG.md,
14262,Merge pull request #3019 from hashicorp/revert-2989-f-fix-illumos-build,"Revert ""Fix the build on Illumos."""
14263,"Revert ""Fix the build on Illumos.""",
14264,Updates built-in static assets for web UI.,
14265,Merge pull request #3013 from justinwalz/justinwalz/doc_fix,Fixup ACL docs
14266,Fixup ACL docs,
14267,use relative links; remove extra spaces between words,
14268,Merge pull request #3012 from hashicorp/jbs-2944,DOCS: Minor clarification to address #2944
14269,DOCS: Minor clarification to address #2944,
14270,Merge pull request #3011 from hashicorp/jbs-2950,DOCS: minor clarification to address #2950
14271,Update CHANGELOG.md,
14272,DOCS: minor clarification to address #2950,
14273,Merge pull request #3010 from hashicorp/jbs-ui-acl-docs,UI: open docs links in new tab
14274,Use updated ACL guide URL instead,
14275,UI: open docs links in new tab," set target=""_blank"" on all docs URLs"
14276,test: simplify joining clusters,
14277,test: simplify tests that check for peers,
14278,test: Fix badly formatted retry.Run tests,
14279,test: Drop WaitForResult from testutil and testrpc,
14280,test: convert remaining WaitForResult tests,
14281,retry: Removes the description parameter.,
14282,test: Tweaks ACL replication tests to converge faster w/less spam.,
14283,test: Turns off ACLs for catalog and health WAN translation tests.,"Since this was doing registration to a foreign DC, it needs extra time for the route to the ACL datacenter to be set up. ACLs aren't part of this test, so by disabling them we make this more reliable and converge faster than if we had added a retry."
14284,test: Moves a variable closer to where it's used.,
14285,test: Turns down server health interval for faster convergence.,This fixes the autopilot tests.
14286,test: Refactor WaitForResult tests with retry,Refactor tests that use testutil.WaitForResult to use retry. Since this requires refactoring the test functions in general this patch also shows the use of the github.com/pascaldekloe/goe/verify library which provides a good mechanism for comparing nested data structures. Instead of just converting the tests from testutil.WaitForResult to retry the tests that performing a nested comparison of data structures are converted to the verify library at the same time.
14287,retry: add retry package for retriable tests,"The current retry framework in testutil/testprc.WaitForResult uses a func() (bool, error) callback until it succeeds or times out. It captures the last error and returns it. if err := testutil.WaitForResult(t, func() (bool, error) { if err := foo(); err != nil {     return false, err } ... return true, nil }); err != nil { t.Fatal(err) }  This makes the test functions more complex than they need to be since both the boolean and the error indicate a success or a failure. The retry.Run framework uses a an approach similar to t.Run() from the testing framework. retry.Run(t, func(r *retry.R) { if err := foo(); err != nil {     r.Fatal(err) } })  The behavior of the Run function is configurable so that different timeouts can be used for different tests."
14288,Fix imports on website,
14289,Fix imports,
14290,Eliminated 'consul' from all paths; misc. edits; wrap text at 80 characters,
14291,Add Consul Enterprise section to Docs,
14292,Update CHANGELOG.md,
14293,Merge pull request #3007 from hashicorp/config-json,Adds support for peers.json recover with Raft protocol version 3.
14294,Adds support for new-style peers.json recovery for newer Raft protocol versions.,
14295,Updates vendored Raft library.,This pulls in https://github.com/hashicorp/raft/pull/207 to get support for the new-style peers.json recovery file.
14296,Merge pull request #3006 from hashicorp/issue-2980-redux,Adds timeout and waits for feedback when asking the leader loop to reassert.
14297,Adds timeout and waits for feedback when asking the leader loop to reassert.,This adds on to the fix in #3004 for issue #2980.
14298,Update CHANGELOG.md,
14299,Merge pull request #3004 from hashicorp/issue-2980,Fixes panic in leader loop on step down w/o step up
14300,Do not block on reassertLeader during shutdown,
14301,Straighten control flow in leader.go,
14302,"Kick the leader loop on the proper thread after a snapshot restore, and",only if leadership is already established.
14303,Runs revoke leadership actions only if we've established leadership.,
14304,Add make target for linux binary,
14305,Update CHANGELOG.md,
14306,Use bind address as source for outgoing connections (#2822),This patch configures consul to use the bind address as the source address for outgoing connections. Fixes #2822
14307,Do not modify config after creation II,Move code for finding the advertise address via a template into consulConfig() so that the config object is not modified after creation.
14308,Do not modify config after creation,Make sure the RPCAdvertise address is always set so that the configuration does not have to be modified after creation.
14309,Move GCE discovery code to command/agent/config_gce.go,
14310,Move AWS discovery code to command/agent/config_aws.go,
14311,Move verifyUniqueListeners to command/agent/config.go,
14312,Cleanup agent config,
14313,Cleanup consul/config,
14314,Added Spring Consul SDK for Spring applications,
14315,Merge pull request #2996 from cryptomeme/patch-1,Itty bitty typo in consul watch help
14316,Itty bitty typo,
14317,Merge pull request #2995 from hashicorp/revert-2517-feature/ui-remove-acl-id-from-list,"Revert ""UI: remove ACL ID from the left list"""
14318,"Revert ""UI: remove ACL ID from the left list""",
14319,Merge pull request #2517 from bhuisgen/feature/ui-remove-acl-id-from-list,UI: remove ACL ID from the left list
14320,Updates static assets to pick up #2712.,
14321,Update CHANGELOG.md,
14322,Merge pull request #2712 from hebeworks/add-json-validation-to-ui,Add JSON validation to UI
14323,Add JSON validation to update view,"JSON validation has now been added to the update view following the same format as create. Since 'valueDecoded' does not have the ability to check if the value is base64 before decoding then this must be checked first; if it is base64 then use the decoded one, if not just get the value. Change incorrect trailing span close to label."
14324,Add JSON validation to UI,JSON validation added to UI. This has been implemented through the use of a flag to enable/disable the functionality with a watcher on the value to set the success/error class on the textarea itself. No hard validation added to the field.
14325,Merge pull request #2976 from jk563/master,Rearranged into alphabetical order
14326,Merge pull request #2993 from hashicorp/sethvargo/pr-2375,Add AddAccessibleService to testutil
14327,Add AddAccessibleService to testutil,"AddAccessibleService works just like AddService but also passing ""address"" and ""port"". It is helpfu when you need to prepare a fakeService that will be accessed later in target source code."
14328,Update CHANGELOG.md,
14329,Merge pull request #2989 from sean-/f-fix-illumos-build,Fix the build on Illumos.
14330,Fix the build on Illumos.,Update github.com/docker/docker/pkg/system.
14331,Merge pull request #2987 from sean-/b-fix-dev-paths,Fix make dev when the bin/ directory doesn't exist.
14332,Fix make dev when the bin/ directory doesn't exist.,"Without this patch you end up with a nifty consul build named bin, not bin/consul."
14333,Update CHANGELOG.md,
14334,Update CHANGELOG.md,
14335,Add separate option for verifying incoming HTTPS traffic (#2974), Add separate option for verifying incoming HTTPS traffic
14336,api: Return empty list instead of nil,
14337,api: Add ServiceTags to Health state endpoint (#153),This patch adds the ServiceTags to the /v1/health/state/ endpoint. Fixes #153
14338,vendor: add github.com/pascaldekloe/goe/verify,
14339,Update CHANGELOG.md,
14340,Faster dev server startup,This patch reduces the timeouts for the development server so that it starts up almost instantly.
14341,Update CHANGELOG.md,
14342,Merge pull request #2973 from hashicorp/b-2087,Fixes panic in tombstone GC.
14343,Gets rid of zero-value initializer.,
14344,Rearranged into alphabetical order,Swapped a couple of the guides around in the index page so that they are in alphabetical order and match the navigation order.
14345,Removes panic repro test.,
14346,Embeds the mutex since it covers all fields.,
14347,Fixes panic when timer fires as tombstone GC is being stopped.,
14348,Cleans up some bad unit test failure cases.,
14349,Cleans up comments.,
14350,"Revert ""test: Run command/agent tests in parallel""",This reverts commit 17be40a73310e1a0d2461b175f6214381ac41039.
14351,test: Do not run RetryJoin tests in parallel,I am suspecting port conflicts with the agents that are started. This needs further investigation.
14352,Update CHANGELOG.md,
14353,build: Use bash for building,
14354,build: Do not swallow go test exit code,
14355,test: Speedup session renew tests,
14356,test: Speedup TestClient_RPC_ConsulServerPing,
14357,test: Speedup Retry*Join tests,
14358,test: Run command/agent tests in parallel,
14359,test: Retry more aggressively,
14360,build: cleanup .gitignore,
14361,build: Simplify make test and log output,
14362,Merge pull request #2964 from hashicorp/d-remove-atlas-references,Remove references to the deprecated Consul/Atlas integration
14363,Merge pull request #2965 from amorken/docfix-query,"(Website doc fix, trivial) Prepared query creation uses POST, not PUT"
14364,Add TLS cipher suite options and CA path support (#2963),This patch adds options to configure the available TLS cipher suites and adds support for a path for multiple CA certificates. Fixes #2959
14365,"Prepared query creation uses POST, not PUT",
14366,add link to Consul Enterprise page,
14367,Remove references to the deprecated Consul/Atlas integration,
14368,Merge pull request #2962 from winpat/patch-1,fixed typo
14369,fixed typo,
14370,Update CHANGELOG.md,
14371,Merge pull request #2947 from bogdanov1609/added_ACLReplication,API: Add ACLReplication
14372,Tweaks ACL replication struct name.,
14373,Tweaks ACL replication status struct name.,
14374,Merge pull request #2958 from hashicorp/pr/2957,ui: Add favicon.png for Chrome
14375,Updates compiled static assets.,
14376,ui: Add favicon.png for Chrome, This completes all favicon related additions and   completely resolves error in Chrome
14377,ui: Update index to fix #2945 (#2956),
14378,Update CHANGELOG,
14379,golint: Fix existing comments,This needs more work.
14380,golint: Untangle if blocks with return in else,
14381,golint: No stutter,
14382,golint: Rename fields and structs,
14383,golint: Replace a += 1 with a++,
14384,golint: Consistent receiver name,Ensure the receiver name is consistent
14385,golint: Use fmt.Errorf(...),"Replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) gofmt -w -r 'errors.New(fmt.Sprintf(a, b)) -> fmt.Errorf(a, b)' *.go"
14386,golint: Drop the unused value from range,"for i, _ := range foo -> for i := range foo"
14387,ui: Add and update favicons (#2948),ui: Add and update favicons  Add most popular device/size favicon combinations Update existing favicons Change permissions to 0644 on static assets  Fixes #2945
14388,Bump travis.yml to Go 1.8.1 (#2955),
14389,Docs: fix typo (#2951),
14390,API: Add ACLReplication,
14391,link to vertx-consul-client (#2937),Signed-off-by: Ruslan Sennov ruslan.sennov@gmail.com
14392,Issue #2905: Add check-not-exists to TXN endpoint,This patch adds support for asserting that a given key does not exist in the KV store. Fixes #2905
14393,Remove duplicate constants,This patch removes duplicate internal copies of constants in the structs package which are also defined in the api package. The api.KVOp type with all its values for the TXN endpoint and the api.HealthXXX constants are now used throughout the codebase. This resulted in some circular dependencies in the testutil package which have been resolved by copying code and constants and moving the WaitForLeader function into a separate testrpc package.
14394,Use fmt.Fprint/Fprintf/Fprintln,"Used the following rewrite rules: gofmt -w -r 'resp.Write([]byte(fmt.Sprintf(a, b, c, d))) -> fmt.Fprintf(resp, a, b, c, d)' .go gofmt -w -r 'resp.Write([]byte(fmt.Sprintf(a, b, c))) -> fmt.Fprintf(resp, a, b, c)' .go gofmt -w -r 'resp.Write([]byte(fmt.Sprintf(a, b))) -> fmt.Fprintf(resp, a, b)'  .go gofmt -w -r 'resp.Write([]byte(fmt.Sprintf(a))) -> fmt.Fprint(resp, a)' .go gofmt -w -r 'resp.Write([]byte(a + ""\n"")) -> fmt.Fprintln(resp, a)' .go gofmt -w -r 'resp.Write([]byte(a)) -> fmt.Fprint(resp, a)' .go"
14395,Update CHANGELOG.md,
14396,Update CHANGELOG.md,
14397,Show raft protocol in list-peers command (#2929),
14398,Merge pull request #2928 from hashicorp/docs/nicj/autopilot,Updated autopilot guide to correct synax issue with example config
14399,Updated autopilot guide to correct synax issue with example config,
14400,Make the API client's httpClient more pluggable (#2926),
14401,Fix help text on client cert/key options,
14402,Merge pull request #2925 from hashicorp/autopilot-guide-example,Add a config example to autopilot guide
14403,Faster dev builds (#2924),This patch runs 'go install' instead of gox which runs 'go build' for 'make dev' and copies the binary into ./bin and ./pkg/${GOOS}_${GOARCH} to mimick the previous behavior. This reduces the roundtrip times for a dev build from 11 sec to 500ms if there weren't any changes.
14404,Add a config example to autopilot guide,
14405,Fix terminal a bit,
14406,Fix terminal a bit,
14407,Merge pull request #2923 from hashicorp/sethvargo/css,Fix homepage css
14408,Use HashiCorp logo for jsonld,
14409,Fix homepage css,
14410,Update CHANGELOG,
14411,Add datacenter to catalog node API (#2917),This patch stores the datacenter of a node in memdb and exposes it via the API in all places where a Node structure is returned.  /catalog/nodes /catalog/node/:node /catalog/service/:service /health/service/:service /query/:uuid/execute
14412,Merge pull request #2919 from InTheCloudDan/patch-1,Docs: fix typo
14413,Docs: fix typo,
14414,Update CHANGELOG.md,
14415,Merge pull request #2918 from hashicorp/pr-2577-slackpad,Provide error if -ui and -ui-dir are both specified
14416,Updating documentation regarding webui flags,
14417,Added check to see if ui and ui-dir flags are both specified,
14418,Merge pull request #2916 from Ashald/patch-1,ACL guide fixes
14419,ACL guide fixes,
14420,Puts the tree in 0.8.2 dev mode.,
14421,Bumps download link to 0.8.1.,
14422,Release v0.8.1,
14423,Puts the tree in 0.8.1 release mode.,
14424,Merge pull request #2915 from hashicorp/watcher-test,Makes watcher test more robust.
14425,Makes watcher test more robust.,
14426,Update CHANGELOG.md,
14427,Merge pull request #2914 from hashicorp/tls-client-options,Add tls client options to api/cli
14428,Fix help text for -ca-path,
14429,Vendor the go-rootcerts lib for the client tls options,
14430,Add tls client options to api/cli,
14431,Tweaks 404 message.,
14432,Update CHANGELOG.md,
14433,Merge pull request #2912 from hashicorp/issue-2624,Adds guard in session ACL check in case session is not found.
14434,Fixes broken link to network areas API.,
14435,Removes old Atlas ecosystem doc from Consul.,
14436,Update CHANGELOG.md,
14437,Merge pull request #2842 from vaLski/supress_sigpipe_logging,Supress signal logging on SIGPIPE. Should address #2768
14438,Adds guard in session ACL check in case session is not found.,Fixes #2624.
14439,Update CHANGELOG.md,
14440,Merge pull request #2911 from hashicorp/serial-leader-loop,Switches to reliable Raft leader notifications.
14441,Updates static assets to pick up #2899.,
14442,Merge pull request #2899 from hashicorp/jbs-ui-color,UI: use new pink hues for active/primary btns
14443,Update CHANGELOG.md,
14444,Merge pull request #2908 from hashicorp/jbs-2882,"API: Add struct fields, fixes #2882"
14445,Switches to reliable Raft leader notifications.,"This fixes #2896 by switching to the notifyCh instead of the leaderCh, so we get all up/down events from Raft regarding leadership. We also wait for the old leader loop to shut down before we ever consider starting a new one, which keeps that single-threaded and fixes the panic in that issue."
14446,Merge pull request #2910 from hashicorp/jbs-2867,"Docs: update bootstrapping and config, fixes #2867"
14447,Put back manual process steps,
14448,Update CHANGELOG.md,
14449,Merge pull request #2897 from hashicorp/autopilot-config-fix,Wait to initialize autopilot until all servers are >= 0.8.0
14450,Update CHANGELOG.md,
14451,Merge pull request #2904 from hashicorp/non-host-id,Adds a new -disable-host-node-id option to help when testing with containers.
14452,Add nil check to operator autopilot endpoint,
14453,Merge pull request #2909 from hashicorp/consul-color,consuls color was reverted to incorrect
14454,"Docs: update bootstrapping and config, fixes #2867", Add various join options to bootstrapping guide Add note about Atlas deprecation to bootstrapping guide Add notes about -retry-join and retry_join to -join option Add notes about -retry-join and retry_join to start_join option
14455,consuls color was reverted to incorrect color. Rename to red,
14456,"API: Add struct fields, fixes #2882", Add CreateIndex and ModifyIndex to AgentService Add CreateIndex and ModifyIndex to Node
14457,Everything is pink now,
14458,Adds a new -disable-host-node-id option to help when testing with containers.,Fixes #2877.
14459,Merge pull request #2900 from deckarep/consul-kv-get-doc-spelling-fix,Fixed spelling for consul kv get command --help comments.
14460,Add formatting to autopilot init messages,
14461,Ensure to exit with a non-zero status code when a timeout occurs and we don't complete all the jobs.,
14462,Fixed spelling for consul kv get command --help comments.,
14463,Pink cylon image!,
14464,Reorganize version check logic for autopilot,
14465,UI: use new pink hues for active/primary btns,
14466,Update CHANGELOG.md,
14467,Merge pull request #2898 from hashicorp/jbs-ui-new-logo,UI updates for new Consul logo
14468,Wait to initialize autopilot until all servers are >= 0.8.0,
14469,UI updates for new Consul logo, Update consul-logo.png Update all favicons Update UI README
14470,Update CHANGELOG.md,
14471,Merge pull request #2895 from hashicorp/pr/2878,Adds brackets around ipv6 addresses for flood joins.
14472,Tweaks error handling case to not panic further down.,
14473,Merge pull request #2892 from BenFradet/patch-2,Replace scala-consul by helm in libraries and SDKs
14474,scala-consul -> helm,
14475,Merge pull request #2869 from liozN/master,Added jenkins consul plugin
14476,Merge pull request #2849 from bbriggs/issue-2848,Add --quiet option to wget to prevent crashing when running remote-exec
14477,Merge pull request #2885 from schalkwijk/clickable-homepage-cta,Make READ THE INTRODUCTION button on homepage clickable
14478,Merge pull request #2881 from mterron/patch-1,Update index.html
14479,Update CHANGELOG.md,
14480,Merge pull request #2884 from hashicorp/f-distributed-host-id,Hash host ID so its stable and well distributed
14481,Adds a note about upgrading the current leader last.,
14482,Update CHANGELOG.md,
14483,Merge pull request #2888 from hashicorp/go-1.8.1,Upgrades Go version to 1.8.1.
14484,Upgrades Go version to 1.8.1.,
14485,Merge pull request #2887 from devopsrebels/master,Fix wrong option name in options.html.markdown
14486,Merge pull request #2886 from hashicorp/jbs-doc-faq,Docs: FAQ updates
14487,Address link issues / add GCE,
14488,add new FAQ details,
14489,Docs updates:, Add a FAQ for per-key value size limitation in the KV Update Atlas FAQ with post-deprecation recommendations
14490,Fix wrong option name in options.html.markdown,
14491,Make READ THE INTRODUCTION button on homepage clickable,"The ""call to action"" button at the bottom of the homepage is currently unclickable, since it has a negative top margin and is thus ""hidden"" behind the bottom margin of the terminal div above it. I opted to remove the negative top margin and instead diminish the bottom margin of the terminal div. This approach ends up adding a bit more padding between the ""DNS Query Interface"" h2 and the marketing div above it, but I think overall the look is in-line with the aesthetics of the page. I'm fairly unfamiliar with HTML / CSS, so if there is a better way to do what I've done, I'd love to hear it. I've tested this in Chrome and Safari."
14492,Hash host ID so its stable and well distributed,This PR takes the host ID and runs it through a hash so that it is well distributed. This makes it so that machines that report similar host IDs are easily distinguished. Instances of similar IDs occur on EC2 where the ID is prefixed and on motherboards created in the same batch.
14493,[docs] Autopilot guide: clarify left status,
14494,Update index.html,Correct link to the ACL guide.
14495,Import fonts,
14496,Update variables,
14497,Update font,
14498,Fix ipv6 join failure,
14499,Use hashicorp logo,
14500,Add press-kit,
14501,Update installed consul version to 0.8.0,
14502,Cleans up some typos in the ACL Guide.,
14503,Fixes deep link on ACL bounce page.,
14504,Merge pull request #2876 from hashicorp/enterprise-links,update all links to enterprise to avoid redirect
14505,Add open graph images,
14506,update all links to enterprise to avoid redirect,
14507,Merge pull request #2875 from hashicorp/consul-color,correct consul brand colors
14508,Capitalze,
14509,correct consul brand colors,
14510,Removed RPC link from the sidebar.,
14511,Fixes a broken link.,
14512,Updates download link to 0.8.0.,
14513,Cleans up some doc typos.,
14514,Merge pull request #2874 from hashicorp/acl-guide,Updates the ACL guide.
14515,Does a complete rework of the ACL guide.,
14516,Wider column sidebar,
14517,Update CHANGELOG.md,
14518,Puts the tree back in dev mode.,
14519,Release v0.8.0,
14520,Puts the tree into release mode.,
14521,Deprecates the ACLs internals doc in favor of a guide.,
14522,Removes guide link for Atlas integration.,
14523,Prefix autopilot log messages with 'autopilot',
14524,Merge pull request #2872 from hashicorp/b-required-quorum,Use voter count instead of server count to calculate required quorum
14525,Use voter count instead of server count for required quorum,
14526,Merge pull request #2865 from moofish32/doc/v8-compatibility,Raft Protocol vs Consul Protocol Doc Clarification
14527,Update upgrade-specific.html.markdown,
14528,Link to new api,
14529,Merge pull request #2871 from hashicorp/sethvargo/api,Update API docs
14530,Tabs v spaces,
14531,Rename sidebar link items,
14532,Add Makefile target for compiling entire website,
14533,Update API docs,
14534,Added jenkins consul plugin,
14535,Raft version in 0.8 is 3,
14536,compatibility table update and note about Raft version being separate,
14537,Changes title to Server Read Scaling.,
14538,Adds top-level guide links that were missing.,
14539,Merge pull request #2862 from wjimenez5271/wjimenez5271-docs,clarify when acl_default_policy takes effect
14540,Fix GitHub link,
14541,Fix enterprise link,
14542,Remove app init,
14543,Merge pull request #2859 from hashicorp/sethvargo/rebrand,Move to new branding
14544,Update CHANGELOG.md,
14545,Merge pull request #2548 from boingram/master,Use ErrorWriter in cli so that errors get written to stderr
14546,Move to new branding,"This JUST moves over to the new branding. Once we get this in, I can work on making the sidebar links and splitting out the API into its own section."
14547,Merge pull request #2858 from hashicorp/operator-shuffle,Moves operator sub-functions into their own files.
14548,Moves operator sub-functions into their own files.,
14549,Merge pull request #2857 from hashicorp/jbs-1264,"docs: Clarify force-remove limited to same DC, fixes #1264"
14550,"docs: Clarify force-remove limited to same DC, fixes #1264",
14551,Merge pull request #2856 from hashicorp/jbs-1203,"docs: Configuration precedence clarification, fixes #1203"
14552,"docs: Configuration precedence clarification, fixes #1203",
14553,Merge pull request #2855 from hashicorp/jbs-1628,"docs: add user resource limits FAQ, fixes #1628"
14554,"docs: add user resource limits FAQ, fixes #1628",
14555,Update CHANGELOG.md,
14556,Merge pull request #2854 from hashicorp/remote-exec,Changes disable_remote_exec default to true so remote exec is opt-in.
14557,Update CHANGELOG.md,
14558,Merge pull request #2847 from hashicorp/remove-peer-by-id,Add CLI/API endpoints for removing peer by ID
14559,Add CLI/API endpoints for removing peer by ID,
14560,Changes disable_remote_exec default to true so remote exec is opt-in.,
14561,Adds a link from the autopilot CLI page to the guide.,
14562,Add --quiet option to wget to prevent crashing when running remote-exec,
14563,Update CHANGELOG.md,
14564,Merge pull request #2846 from hashicorp/check-match,Bans check updates for nodes other than top-level reg. updates.
14565,Bans check updates for nodes other than top-level reg. updates.,
14566,Merge pull request #2845 from hashicorp/stale-raft-servers,Clean up raft servers without a corresponding serf entry
14567,Remove stale raft servers differently depending on minRaftVersion,
14568,Updates change log and upgrade guide with details about #2844.,
14569,Merge pull request #2844 from hashicorp/agent-acl-default,Disables agent-level enforcement on Consul agents unless acl_datacenter is set.
14570,Clean up raft servers without a corresponding serf entry,
14571,Disables agent-level enforcement on Consul agents unless acl_datacenter is set.,
14572,Capitalizes title.,
14573,Adds which DC each command runs in and a DNS example to the areas guide.,
14574,Supress signal logging on SIGPIPE. Should address #2768,"When consul-template is communicating with consul and the job is done, consul thread receives SIGPIPE. This cause the logs to be filled ""Caught signal: broken pipe"" and they does not bring any usefull info with them. Skipping those."
14575,Merge pull request #2840 from hashicorp/f-advanced-autopilot-guide,Add section on advanced autopilot features to the guide
14576,Update CHANGELOG.md,
14577,Merge pull request #2839 from hashicorp/network-area-docs,Adds network area docs.
14578,Adds network areas guide.,
14579,Add section on advanced autopilot features to the guide,
14580,Adds network area CLI documentation.,
14581,Adds basic operator area HTTP documentation.,
14582,Merge pull request #2835 from tviaud/patch-1,Update autopilot.html.markdown
14583,Update autopilot.html.markdown,
14584,Update CHANGELOG.md,
14585,Breaks the operator HTTP doc into sections.,
14586,Puts tree back in dev mode.,
14587,Release v0.8.0-rc1,
14588,Puts the tree in -rc1 release mode.,
14589,Updates the change log for advanced autopilot and network areas.,
14590,Merge pull request #2834 from hashicorp/leave-newapi,Use the new raft api function for leaving if applicable
14591,Use the new raft api function for leaving if applicable,
14592,Update CHANGELOG.md,
14593,Update CHANGELOG.md,
14594,Merge pull request #2832 from hashicorp/node-id-integrity,Adds node ID integrity checking to the catalog and the LAN and WAN clusters.
14595,Cleans up a stray mark and fixes unit tests.,"Ended up removing the leader_test.go server address change test as part of this. The join was failing becase we were using a new node name with the new logic here, but realized this was hitting some of the memberlist conflict logic and not working as we expected. We need some additional work to fully support address changes, so removed the test for now."
14596,Adds node ID integrity checking for cluster merges.,
14597,Adds node ID integrity checking for the catalog.,
14598,Merge pull request #2830 from VEBERArnaud/docs/agent-options-duplicate,docs(agent/options): remove atlas_endpoint duplicate
14599,docs(agent/options): remove atlas_endpoint dup,
14600,Update CHANGELOG.md,
14601,Update CHANGELOG.md,
14602,Update upgrade-specific.html.markdown,
14603,Update CHANGELOG.md,
14604,Merge pull request #2829 from hashicorp/acl-cleanup-redux,"Switches version 8 ACLs to opt-out, and fixes a few issues."
14605,Fixes up some broken unit tests.,
14606,Keeps the service and check tokens around for deregistration.,"We fixed a few related issues while we were in here. We now only let services register checks with a matching token, and we also close out service and check delete operations if the catalog deregister claims it doesn't know about the ID of the service or check being deleted."
14607,Changes verson 8 ACLs to opt-out.,
14608,Gets rid of the Consul service exception under version 8.,Fixes #2816.
14609,Adds node metadata to the reload list.,
14610,Adds a note about the deprecated RPC ports.,
14611,Adds an Enterprise link to the Consul top nav.,
14612,Fixes up some stale BUILD_TAGS references in the scripts.,
14613,Fixes test server startup returning wrong error.,Seen in https://travis-ci.org/hashicorp/consul/builds/214521317.
14614,Turns of parallel tests for now.,
14615,Makes WaitForResult always return an error if it times out.,
14616,Makes the start/stop test less flaky.,
14617,Merge pull request #2828 from hashicorp/pr/2827,Updates testing harness.
14618,Fixes up some new tests for the updated testutil.,
14619,Only install on Travis,
14620,"Install packages, then build",
14621,Modernize makefile a bit,
14622,Only build binary if api tests are running,
14623,Fix vet issues,
14624,Merge pull request #2824 from hashicorp/sethvargo/testutil,Reduce coupling with testing.T
14625,Update CHANGELOG.md,
14626,Merge pull request #2826 from hashicorp/acl-cleanup,Cleans up reconcile issues with ACLs and reverting node information.
14627,Use new APIs,
14628,Add RPC,
14629,Add pkg/errors,
14630,Reduce coupling with testing.T,"This reduces the coupling with testing.T, allowing many of the server's startup-related functions to return an error. This makes them more re-usable."
14631,Fixes an issue where servers would delete catalog information set by,the node when they were trying to reconcile a member.
14632,Merge pull request #2823 from hashicorp/sethvargo/rpc,Re-add RPC parsing
14633,Re-add RPC parsing,"This makes the upgrade path a bit nicer, since people will likely have older configurations. This prints out a warning instead of just failing if the old rpc addr or ports definition is in the config."
14634,Modifies server reconcile path to not use the server's token for internal operations.,
14635,Merge pull request #2821 from hashicorp/jbs-2782,docs: Point of clarifcation about cluster leadership for #2782
14636,docs: Point of clarifcation about cluster leadership for #2782,
14637,Renames some operator unit tests.,
14638,Merge pull request #2815 from hashicorp/advanced-autopilot-oss,Add advanced autopilot config/docs
14639,Add advanced autopilot features,
14640,Tweaks the agent leave test to patch an occasional local failure.,
14641,Adds missing area API.,
14642,Add sticky scroll to side panel,
14643,Update CHANGELOG.md,
14644,Merge pull request #2801 from hashicorp/spoken-hub-oss,Adds support for WAN soft fail and join flooding.
14645,Cleans up based on review feedback.,
14646,Merge pull request #2805 from hashicorp/stats-fetcher,Adds a stats fetcher to make sure we don't block the autopilot loop.
14647,Updates to latest built-in static assets.,
14648,Adds a warning if the context is canceled.,
14649,Converts the stats fetch from serial to parallel and snaps the last index.,
14650,Adds a stats fetcher to make sure we don't block the autopilot loop.,
14651,Updates memberlist to get NACK penalty improvements.,
14652,Update CHANGELOG.md,
14653,Lowers log spam from the join flooder.,
14654,Tweaks the join response to be more useful.,
14655,Updates memberlist to get new transport interface.,
14656,Adds public API for the network area endpoints.,
14657,Makes the flood goroutine more reusable.,
14658,Shuts down flooder when either Serf is shut down.,
14659,Fixes a unit test that needed to account for WAN flooding.,
14660,Adds LAN -> WAN join flooding.,
14661,Walks back the changes to change pool address interface into strings.,
14662,Adds a hook for the route lookup function.,
14663,Cleans up some small things based on review feedback.,
14664,Adds offline detection.,
14665,Adds missing unit tests and cleans up some router bugs.,
14666,Makes the raft_vsn optional in Serf tags to support older servers.,
14667,Simplifies median calculation.,
14668,Fixes RTT command to only compare coordinates in the same area.,
14669,Removes remoteConsuls in favor of the new router.,This has the next wave of RTT integration with the router and also factors some common RTT-related helpers out to lib. While we were in here we also got rid of the coordinate disable config so we don't need to deal with the complexity in the router (there was never a user-visible way to disable coordinates).
14670,Fixes snapshot endpoint after merge.,
14671,Cleans up after merge.,
14672,Adds router into RPC paths with work in progress on coordinates.,
14673,Adds an area request type.,
14674,Changes pool's dial address to a string and adds a timeout.,
14675,Only count healthy voters for FailureTolerance,
14676,Merge pull request #2802 from hashicorp/f-autopilot-improvements,Fix an issue with changing server ID when re-joining
14677,Tweak last_contact health logic for leader,
14678,Reorganized cluster health check loop and logic,
14679,Add tests for servers changing address/ID,
14680,Fix an issue with changing server IDs and add a few UX enhancements around autopilot features,
14681,Merge pull request #2800 from hashicorp/nicjackson/docs,Updated documentation to add information that bootstrap overrides ser…
14682,Updated documentation to add information that bootstrap overrides server mode,
14683,Update CHANGELOG.md,
14684,Merge pull request #2798 from hashicorp/f-lower-id,Forces user-supplied node IDs to lower case for consistency.
14685,Forces user-supplied node IDs to lower case for consistency.,
14686,Update CHANGELOG.md,
14687,Merge pull request #2796 from hashicorp/f-autopilot-guide,Add autopilot guide to the docs
14688,Adjust autopilot sections based on feedback,
14689,Add autopilot guide to the docs,
14690,Update CHANGELOG.md,
14691,Merge pull request #2788 from hashicorp/f-autopilot-2,Autopilot server health monitoring
14692,Use defers for WaitGroup and Ticker stop,
14693,Cleaned up and reorganized some autopilot-related code,
14694,Adds back the RPC page with a deprecation notice.,Fixes #2794.
14695,Update CHANGELOG.md,
14696,Merge pull request #2793 from hashicorp/b-dereg-acl,Adds token to deregister request when reconciling.
14697,Adds token to deregister request when reconciling.,Fixes #2792.
14698,Fixes a typo in the snapshot docs.,
14699,Merge pull request #2790 from hashicorp/website-add-meganav,Website add meganav
14700,website: middleman-hashicorp bump to 0.3.13,
14701,Small optical adjustment to center Jumbotron logo mark,
14702,Fix font-scoping,
14703,Update middleman-hashicorp to 0.3.11,
14704,"Remove 'by hashicorp""",
14705,Remove announcement banner,
14706,Update middleman-hashicorp,
14707,Add meganav,
14708,Remove unnecessary font,
14709,Add AutopilotPolicy interface and BasicAutopilot,
14710,Update license,
14711,Update license,
14712,Update middleman-hashicorp,
14713,Move RaftStats to Status endpoint,
14714,Merge branch 'master' into f-autopilot-2,
14715,Add autopilot server health tracking,"This adds two goroutines to perform autopilot tasks on the leader - one to monitor the health of servers and another to periodically clean up dead servers with a limit on removal count. Also adds a new http endpoint, /v1/operator/autopilot/health, for querying this information through an operator RPC endpoint."
14716,Merge pull request #2787 from hashicorp/revert-2786-f-client-addr-fallback,"Revert ""Change ClientAddr to default to BindAddr when not present."""
14717,"Revert ""Change ClientAddr to default to BindAddr when not present.""",
14718,Merge pull request #2786 from hashicorp/f-client-addr-fallback,Change ClientAddr to default to BindAddr when not present.
14719,Note the default value prior to 0.8 for -client was 127.0.0.1.,
14720,Change ClientAddr to default to BindAddr when not present.,"With this change, it is now possible to only specify the -bind or bind_addr attributes and get a functioning consul agent."
14721,Moves raft_protocol config out into its own top-level item.,
14722,Update CHANGELOG.md,
14723,Merge pull request #2690 from zeroae/f-simple-rfc2782,RFC 2782 support with optional .service tag
14724,Merge pull request #2781 from hashicorp/jbs-demo-update,Demo: install latest version by default
14725,Install latest version by default, Query Checkpoint to determine latest Consul version and install that   (can override installed version with CONSUL_DEMO_VERSION variable) Update README
14726,"Re-enable soft purging, stale-if-error",
14727,Merge pull request #2771 from hashicorp/f-autopilot,"Autopilot dead server cleanup, config, and raft version compatibility"
14728,Update CHANGELOG.md,
14729,Merge pull request #2774 from hashicorp/f-cli-deprecation-docs,Add CLI RPC deprecation section to docs
14730,Rename DeadServerCleanup and make wording adjustments,
14731,Fix up command and api tests,
14732,Remove the RPC client interface and update docs,
14733,Merge pull request #2777 from hashicorp/sethvargo/cache,Cache for a longer time on Fastly
14734,Cache for a longer time on Fastly,
14735,Follow the lead in https://github.com/hashicorp/nomad/commit/6fc901a8f346fafe289452a10347fe317951dd40 and set the default DisplayName to Consul,
14736,Convert agent command to use base.Command,
14737,Add CLI RPC deprecation notice to docs,
14738,Add cli docs and minor test/comment tweaks,
14739,Use BoolValue for flag type,
14740,Merge branch 'master' into f-autopilot,
14741,Added operator autopilot subcommands,
14742,Add CAS capability to autopilot config endpoint,
14743,Reserves an RPC selector byte for Consul Enterprise.,
14744,Exports config functions from base.,
14745,Exports visit function from base.,
14746,Add docs and api client methods for autopilot config,
14747,Add state store table and endpoints for autopilot,
14748,Merge pull request #2764 from hashicorp/website-typography-updates,Website typography updates
14749,Move raft_protocol out of autopilot config,
14750,Add config section to docs for autopilot,
14751,Add raft version 2/3 compatibility,
14752,Mobile tweak,
14753,Docs typographic tweaks,
14754,Remove redundant declarations,
14755,Beef up lead paragraph in Jumbotron,
14756,"Adjustments to , and general letter-spacing",
14757,Improved mono declaration scope,
14758,"Update logo, remove old assets",
14759,Various adjustments,
14760,Remove refs to Museo,
14761,"Wire up Klavika, remove Museo declarations",
14762,Add configurable cleanup of dead servers when a new server joins,
14763,Update CHANGELOG.md,
14764,Merge pull request #2755 from hashicorp/aws-sdk-update,Updates AWS Go SDK.
14765,Updates AWS Go SDK.,Needed as part of Go 1.8 transition; see https://aws.amazon.com/blogs/developer/aws-sdk-for-go-update-needed-for-go-1-8/.
14766,Merge pull request #2753 from ellery44/patch-1,Adds missing double quote
14767,Adds missing double quote,
14768,Update CHANGELOG.md,
14769,Merge pull request #2752 from hashicorp/f-go-1.8,Bumps Go version to 1.8.
14770,Bumps Go version to 1.8.,
14771,Update CHANGELOG.md,
14772,Merge pull request #2748 from hashicorp/f-operator-rework,Split operator raft command into subcommands
14773,Condense raft subcommand into one doc page,
14774,Merge pull request #2749 from hadielmougy/master,New clojure discovery client for Consul HTTP API
14775,Merge pull request #1 from hadielmougy/clj-catalog-patch-1,Update downloads_tools.html.erb
14776,Update downloads_tools.html.erb,add link to clojure client for consul http catalog api
14777,Split operator raft command into subcommands,
14778,Bumps website to Consul version 0.7.5.,
14779,Update CHANGELOG.md,
14780,Merge pull request #2743 from v6/patch-1,"// , Add another way to update config"
14781,Update CHANGELOG.md,
14782,"// , Add another way to update config","// , I got this from the consul --help output, and it seemed like a useful detail for people unfamiliar with the system."
14783,Update CHANGELOG.md,
14784,Update CHANGELOG.md,
14785,Update CHANGELOG.md,
14786,Merge pull request #2739 from hashicorp/b-radix-leaf-fixes,Updates hashicorp/go-immutable-radix to pick up leaf panic fixes.
14787,Updates hashicorp/go-immutable-radix to pick up leaf panic fixes.,This fixes #2724 by properly tracking leaf updates during very large delete transactions.
14788,Update CHANGELOG.md,
14789,Merge pull request #2735 from hashicorp/update-cleanhttp,Update unix dial functions to use DialContext with new go-cleanhttp
14790,Update TestHTTPServer_UnixSocket with DialContext,
14791,Update unix dial functions to use DialContext with new go-cleanhttp,
14792,Update CHANGELOG.md,
14793,Merge pull request #2732 from hashicorp/f-validate-command,Deprecate configtest and add validate command
14794,Update CHANGELOG.md,
14795,Merge pull request #2730 from hashicorp/f-cli-https-parsing,Clean up http-addr parsing for https and unix sockets
14796,Add -quiet flag to validate,
14797,Update CHANGELOG.md,
14798,Merge pull request #2733 from hashicorp/revert-2731-update-cleanhttp,"Revert ""Updates go-cleanhttp to get better tuning for newer Go versions."""
14799,"Revert ""Updates go-cleanhttp to get better tuning for newer Go versions.""",
14800,Update docs and give better error for unknown client scheme,
14801,Update CHANGELOG.md,
14802,Merge pull request #2731 from hashicorp/update-cleanhttp,Updates go-cleanhttp to get better tuning for newer Go versions.
14803,Updates go-cleanhttp to get better tuning for newer Go versions.,
14804,Update website docs for validate command,
14805,Deprecate the configtest command and add the validate command,
14806,Allow internal watches to use https and unix sockets,
14807,Allow prefixing -http-addr with http/https schemes,
14808,Merge pull request #2729 from hashicorp/f-cli-remove-rpc,Remove CLI rpc functions
14809,Remove cli rpc functions,
14810,Merge pull request #2726 from hashicorp/f-cli-rework-3,Centralize command-line parsing part 3
14811,Formatting fix in members output,
14812,Adds clarifying note about the wakeup jitter.,Closes #2727.
14813,Merge branch 'master' into f-cli-rework-3,
14814,Update CHANGELOG.md,
14815,Merge pull request #2723 from hashicorp/f-cli-rework-2,Centralize command-line parsing part 2
14816,Cleanup and formatting adjustments,
14817,Convert watch command to use base.Command,
14818,Add missing doc page for version command,
14819,Convert snapshot command to use base.Command,
14820,Convert rtt command to use base.Command,
14821,Convert reload command to use base.Command,
14822,Convert operator command to use base.Command,
14823,Convert monitor command to use base.Command,
14824,Convert members command to use base.Command,
14825,Convert maint command to use base.Command,
14826,Convert leave command to use base.Command,
14827,Cache assets longer,
14828,Change cache to 4h,
14829,Make join exit non-zero if no nodes were joined,
14830,Convert kv commands to use base.Command,
14831,Convert keyring command to use base.Command,
14832,Convert keygen command to use base.Command,
14833,Update CHANGELOG.md,
14834,Convert join command to use base.Command,
14835,Merge pull request #2722 from hashicorp/update-deps,Updates memberlist and Serf (and adds new dependencies).
14836,Update CHANGELOG.md,
14837,Convert info command to use base.Command,
14838,Convert exec command to use base.Command,
14839,Convert event command to use base.Command,
14840,Updates memberlist and Serf (and adds new dependencies).,"This gets a number of improvements:  Fixed a missing case where gossip would stop flowing to dead nodes for a short while. Uses the go-sockaddr library to look for private IP addresses, which prefers non-loopback   private addresses over loopback ones when trying to automatically determine the advertise address. Properly seeds Go's random number generator using the seed library. Serf snapshots no longer have the executable bit set on thie file."
14841,Merge pull request #2721 from hashicorp/d-remove-atlas-auto-join,Remove Atlas references from getting-started pages
14842,remove https://consul.io from join links; remove UI link to downloads.html,
14843,remove Atlas references from getting-started pages,
14844,Update vendor/vendor.json to reflect shiriou/gopsutil#313 being merged.,
14845,Merge pull request #2669 from legendtkl/master,Fix consul kv example with flag separator
14846,Removes broken WriteRequest ACL reference for catalog endpoints.,Fixes #1034.
14847,Merge pull request #2717 from hashicorp/f-cli-rework,Begin centralizing command-line parsing
14848,Small tweaks to base command,
14849,Add utility types to enable checking for unset flags,
14850,Move command Meta to base.Command and split http options,
14851,Merge pull request #2718 from jonathanwcrane/patch-1,fix grammatical error in 2nd paragraph
14852,fix grammatical error in 2nd paragraph,
14853,Fix the check for displaying the command options,
14854,Convert configtest and force-leave commands to use Meta,
14855,Merge pull request #2716 from hashicorp/b-lower-hostid,Update shirou/gopsutil/313 to pull in lowercased HostIDs.
14856,Update shirou/gopsutil/313 to pull in lowercased HostIDs.,
14857,Merge pull request #2715 from hashicorp/slackpad-patch-1,Drop testutil wait to 2 seconds.
14858,Drop testutil wait to 2 seconds.,"There's likely a race (related to https://github.com/hashicorp/consul/issues/2644) where the catalog update might be in but the leader tracking doesn't report a leader, so this blocks forever and then times out. As a workaround we can lower the query wait time to always allow for a few retries."
14859,Points at new release and puts tree in 0.8.0 dev mode.,
14860,vendor: Add golang-text dependency,
14861,Release v0.7.4,
14862,Merge branch 'master' into f-cli-rework,
14863,Puts the tree in 0.7.4 release mode.,
14864,Updates Serf library to get relay fixes.,https://github.com/hashicorp/serf/pull/447
14865,Update github.com/shiriou/gopsutil's vendor.json entries.,Direct to master commit now that https://github.com/shirou/gopsutil/pull/312 has been merged.
14866,Chase an upstream go fmt that has been long overdue.,
14867,Remove _test.go files from shirou/gopsutil,
14868,Add durable HostID generation for Windows.,https://github.com/shirou/gopsutil/pull/312
14869,Merge pull request #2708 from oliora/master,Fix acquire parameter nesting
14870,Fix acquire parameter nesting,
14871,Merge pull request #2707 from hashicorp/e-reduce-len-constraint,E reduce len constraint
14872,Round the node lookup prefix down to the nearest modulo two size before,performing the lookup. Hat tip: @dadgar
14873,Reduce the size of the UUID Lookup Length restriction from 8 to 2.,"I'm torn on this.  It's useful from a UX perspective for an operator to be able to type in something that's short.  At the same time, by enforcing an 8 character length, we reduced the probability of a user depending on the behavior and having it suddenly stop working in the future when a duplicate prefix is injected into the environment."
14874,Update CHANGELOG.md,
14875,Merge pull request #2704 from hashicorp/f-relay-query-responses,Add relay-factor arg to keyring operations
14876,Merge pull request #2572 from hashicorp/jbs-2535,Notes about memory usage (helps with #2535)
14877,Added -relay-factor param to keyring operations,
14878,Update serf deps,
14879,Removes an obsolete environment variable from the example upstart script.,
14880,Adds a test for node UUID or name lookups.,
14881,Revert 97904cec95f1a1fafd18405f0dd143eb63d595a9,
14882,Add a note about looking up nodes by their node id.,
14883,Merge pull request #2702 from hashicorp/f-dns-nodeid,DNS lookup by Consul node ID
14884,"Treat a uuid prefix lookup error as a soft error, as if a node name",lookup returned nil. Add a TODO to note where a future point of logging should occur once a logger is present and a few additional comments to explain the program flow.
14885,"Treat a uuid prefix lookup error as a soft error, as if a node name lookup returned nil.",Add a TODO to note where a future point of logging should occur once a logger is present.
14886,Run a test of NodeServices() with a NodeID as an argument.,
14887,Whoops.  Return an empty set in the event that there are multiple matches.,
14888,Rename nodeName to nodeNameOrID.,
14889,Toggle AllowMissing to false to accommodate old clients without Node IDs.,
14890,Enable looking up consul nodes by their node ID.,"Assuming the following output from a consul agent: ==> Consul agent running!            Version: 'v0.7.3-43-gc5e140c-dev (c5e140c+CHANGES)'            Node ID: '40e4a748-2192-161a-0510-9bf59fe950b5'          Node name: 'myhost' it is now possible to lookup nodes by their Node Name or Node ID, or a prefix match of the Node ID, with the following caveats re: the prefix match: 1) first eight digits of the Node ID are a required minimum (eight was    chosen as an arbitrary number) 2) the length of the Node ID must be an even number or no result will be    returned. % dig @127.0.0.1 -p 8600 myhost.node.dc1.consul. myhost.node.dc1.consul. 0   IN  A   127.0.0.1 % dig @127.0.0.1 -p 8600 40e4a748-2192-161a-0510-9bf59fe950b5.node.dc1.consul. 40e4a748-2192-161a-0510-9bf59fe950b5.node.dc1.consul. 0 IN A 127.0.0.1 % dig @127.0.0.1 -p 8600 40e4a748.node.dc1.consul. 40e4a748.node.dc1.consul. 0 IN  A   127.0.0.1 % dig @127.0.0.1 -p 8600 40e4a74821.node.dc1.consul. 40e4a74821.node.dc1.consul. 0   IN  A   127.0.0.1 % dig @127.0.0.1 -p 8600 40e4a748-21.node.dc1.consul. 40e4a748-21.node.dc1.consul. 0  IN  A   127.0.0.1"
14891,Update CHANGELOG.md,
14892,Update CHANGELOG.md,
14893,Merge pull request #2699 from hashicorp/f-tls-min-version,Add TLSMinVersion to config options
14894,Add TLSMinVersion to config options,
14895,Merge pull request #2698 from Cbeck527/master,Docs: add consul kv import/export links to sidebar
14896,Add consul kv import/export links to sidebar,
14897,Small premature optimization in isUUID().,"If the length isn't 36, return false immediately before firing up the regexp engine."
14898,Update CHANGELOG.md,
14899,Merge pull request #2697 from hashicorp/f-gopsutil,Reintroduce the necessary vendor bits for per-node IDs
14900,Re-cherry-pick 71d807f607589f2eb4fea4e83e3876d122c8afc0 and e2320d69b6b155d8223758415aabafc60a0e9d3b.,
14901,Add missing shirou/gopsutils vendor dependencies and files that were reverted,
14902,Catch cross-compiliation build failures at Travis.,
14903,Merge branch 'master' into f-gopsutil,
14904,Reintroduce the necessary vendor bits for per-node IDs, shirou/gopsutil shirou/w32
14905,Update CHANGELOG.md,
14906,Merge pull request #2695 from hashicorp/b-srv-cname,Fixes issue with missing CNAME for services with non-IP addresses set in SRV responses.
14907,Merge pull request #2692 from Toady00/patch-1,Specify PUT for agent maintenance endpoint
14908,Merge pull request #2666 from hashicorp/sethvargo-patch-1,Say which ec2 perms to use
14909,Fixes issue with missing CNAME for services with non-IP addresses set in SRV responses.,
14910,Update CHANGELOG.md,
14911,Merge pull request #2694 from hashicorp/revert-2691-f-gopsutil,"Revert ""Adds gopsutil in the loop when trying to make the node ID."""
14912,"Revert ""Adds gopsutil in the loop when trying to make the node ID.""",
14913,Update CHANGELOG.md,
14914,Merge pull request #2691 from hashicorp/f-gopsutil,Adds gopsutil in the loop when trying to make the node ID.
14915,Gets rid of a goto.,
14916,Specify PUT for agent maintenance endpoint,"Through most of the documentation if the method isn't specified it should be a GET request, but here it should be a PUT."
14917,"Adds gopsutil into node ID process and attempts to use host ID, if availabile.",
14918,Adds gopsutil to vendored deps.,
14919,Simple RFC 2782 support with optional .service tag,Add support for SRV queries of names matching: ..[.service][.datacenter]<.domain>
14920,Merge pull request #2688 from ryon/master,Add Google Tag Manager #GTM-NR2SD7C
14921,Add Google Tag Manager #GTM-NR2SD7C,
14922,Merge pull request #2687 from hashicorp/add-vault-to-ecosystem,docs: Added 'vault' to ecosystem page
14923,docs: Added 'vault' to ecosystem page,
14924,Merge pull request #2685 from jdanekrh/patch-1,Update README.org
14925,Update README.org,
14926,Merge pull request #2684 from hashicorp/b-early-acls,Fixes up ACL timing issues with unit tests.
14927,Lets the leave unit test proceed even after an EOF.,
14928,Adds a little wait after we get the event we were seeking.,
14929,Merge pull request #2683 from hashicorp/f-unit-test-robustify,Robustifies unit tests.
14930,"Run the waited-for function before sleeping, and ramp up the sleep exponentially.",
14931,Drops the unit test wait time back down and turns initial wait into blocking query.,
14932,Update CHANGELOG.md,
14933,Builds with Go 1.7.5 in Travis.,
14934,Merge pull request #2682 from hashicorp/slackpad-patch-1,Bumps Go version up to 1.7.5.
14935,Bumps Go version up to 1.7.5.,
14936,Updates to Consul 0.7.3.,
14937,Bumps the wait even more.,
14938,Update CHANGELOG.md,
14939,Puts tree in 0.7.4 dev mode.,
14940,Release v0.7.3,
14941,Puts the tree in 0.7.3 release mode.,
14942,Merge pull request #2680 from hashicorp/slackpad-patch-1,Bumps the wait a little more.
14943,Bumps the wait a little more.,
14944,Adds more time to WaitForResult.,"The last change here made the time overall theoretically the same, but the overhead of running so quickly before probably meant that we were spending longer. Tests seemed marginal in Travis so doubling this to see how things go."
14945,Merge pull request #2679 from hashicorp/b-leader-test,Tweaks leader test now that we have new wait timing.
14946,Tweaks leader test now that we have new wait timing.,
14947,Update CHANGELOG.md,
14948,Merge pull request #2678 from hashicorp/sethvargo/utilfixes,testutil updates
14949,"Sleep for longer, but try less often",This fixes an issue where the system can quickly run out of file descriptors because they are accumulating faster than the kernel can release them.
14950,Check to see if TaggedAddresses have been populated,This ensures the node's anti-entropy checks have finished before telling the client Consul is ready.
14951,Update CHANGELOG.md,
14952,Merge pull request #2677 from hashicorp/b-redact-aws-creds,Redacts AWS join credientials from /v1/agent/self output.
14953,Redacts AWS join credientials from /v1/agent/self output.,
14954,Update CHANGELOG.md,
14955,Merge pull request #2676 from hashicorp/f-go-1.7.4,Updates Consul to build with Go 1.7.4.
14956,Updates Consul to build with Go 1.7.4.,
14957,Merge pull request #2675 from hashicorp/f-fine-watch-redux,Cleans up state store restore behavior.
14958,Keeps the old state store state if a restore fails.,
14959,Bails out of blocking queries when a state restore occurs.,
14960,Update CHANGELOG.md,
14961,Update CHANGELOG.md,
14962,Merge pull request #2671 from hashicorp/f-fine-watch,Adds support for fine-grained watches in blocking queries.
14963,Merge pull request #2674 from oliora/master,Fix missing query parameters formatting in HTTP API documentation
14964,Tweaks a few comments.,
14965,Pass state store pointer into the blocking query work function.,"Previously the blocking functions all closed over the state store from their first query, with would not have worked properly when a restore occurred. This makes sure they get a frest state store pointer each time, and that pointer is synchronized with the abandon watch."
14966,Guts all the old blocking query code.,
14967,Cuts KVS endpoints over to new fine-grained watch plumbing.,
14968,Adds a facility to notify when restores occur.,
14969,Adds fine-grained watches to session endpoints.,
14970,Adds fine-grained watches to prepared query endpoints.,
14971,Adds fine-grained watches to internal endpoints.,
14972,Adds fine-grained watches to coordinate endpoints.,
14973,Adds fine-grained watch support to ACL endpoints.,
14974,Updates a comment to point to new blockingQuery function.,
14975,Adds fine-grained watches to health endpoints.,
14976,Fixes a race condition when updating the state store during a snapshot restore.,
14977,Adds fine-grained watches to catalog endpoints.,
14978,Adds diff check for node and service parts of register requests.,"We always did an update before which caused excessive watch churn, even with our new fine-grained queries. This does a diff any only updates the node and service records if something actually changed."
14979,Don't do any watch tracking for non-blocking queries.,
14980,Removes some incorrect comments.,"We can't actually return a fine-grained index from these tables unless support is added for tombstones. Otherwise, the index could slip backwards as things are deleted."
14981,Adds new variant of blocking query wrapper with WatchSet support.,
14982,Updates go-immutable-radix and go-memdb to get fine-grained watches.,
14983,Pulls in latest static asset updates.,
14984,Fix missing query parameters formatting in HTTP API documentation,
14985,Merge pull request #2668 from hashicorp/f-prepared-query-nodemeta,Node metadata support in prepared queries
14986,Fix consul kv example with flag separator, fix consul kv example with flag separator
14987,Fix test import,
14988,Merge branch 'master' into f-prepared-query-nodemeta,
14989,Add tests for node meta in prepared queries and update docs,
14990,Say which ec2 perms to use,
14991,Typo in docs/upgrade-specific page.,
14992,Merge pull request #2665 from dblackdblack/sp-givne,Fix misspelled 'givne' → 'given'
14993,s/givne/given/,
14994,Update CHANGELOG.md,
14995,Merge pull request #2661 from hashicorp/f-node-id,Adds basic support for node IDs.
14996,Fixes a paste-o in the docs.,
14997,Uses clean replies each time so they are safe to receive map changes.,
14998,Fixes a startup ordering issue between Raft and Serf.,"This fixes #2663 and fixes #1899. It's not super related to this PR, but the startup time changes that this PR brings made this a lot worse so I was able to track it down."
14999,Adds catalog support for node IDs.,
15000,First pass at adding node meta filter to prepared queries,
15001,Adds a test to make sure we get the same ID on the second run.,
15002,Adds basic support for node IDs.,
15003,Merge pull request #2660 from hashicorp/sethvargo-patch-1,Omit empty node_meta
15004,Omit empty node_meta,
15005,Update CHANGELOG.md,
15006,Minor formatting tweaks as a follow-up to #2654,
15007,Merge pull request #2659 from hashicorp/f-update-go-sockaddr,Update hashicorp/go-sockaddr to account for tun(4) interfaces.
15008,Merge pull request #2658 from hashicorp/sethvargo/fatal,Do not skip tests when Consul is missing
15009,Update hashicorp/go-sockaddr to account for tun(4) interfaces.,
15010,Do not skip tests when Consul is missing,"This bit me on CI. The current behavior of the testutil server is to skip if consul isn't present. When lots of output is scrolling by, you're likely to miss the message that the test was skipped. Instead, I propose that we hard fatal if consul doesn't exist, and upstream consumers can skip the tests if they want."
15011,Merge pull request #2639 from tanuck/master,Standardize the case of all check log messages
15012,Update CHANGELOG.md,
15013,Merge pull request #2578 from ybubnov/concurrent-safe-notification-mock,Concurrent-safe notification mock
15014,Merge pull request #2656 from legal90/fix-website-raft-multiplier,"website: Fix nesting for ""raft_multiplier"" option"
15015,"website: Fix nesting for ""raft_multiplier"" option",
15016,reset the watch index when somehow the index goes backwards,
15017,"reset index to 0, not to 1",
15018,Merge pull request #2654 from hashicorp/f-metafilter-endpoints,Add node metadata filtering to remaining endpoints
15019,Add support for multiple metadata filters to remaining endpoints,Enabled multiple meta filters for /v1/catalog/nodes and /v1/catalog/services
15020,Add node metadata filtering to remaining health/catalog endpoints,
15021,Merge pull request #2651 from hashicorp/jbs-demo-version,Demo: configurable Consul version
15022,Merge pull request #2653 from hashicorp/f-split-state-store,Breaks up the state store into several files.
15023,Breaks up the state store into several files.,
15024,Demo: configurable Consul version, Add CONSUL_DEMO_VERSION env var for specifying Consul version
15025,Merge pull request #2650 from needkane/patch-1,occasionally->occasionally
15026,occasionally->occasionally,
15027,Merge pull request #2649 from hashicorp/test-fix,Fix inconsistency in TestStateStore_ServicesByNodeMeta
15028,Fix inconsistency in TestStateStore_ServicesByNodeMeta,
15029,Update CHANGELOG.md,
15030,Merge pull request #2570 from vancluever/f-gce-discovery,command/agent: Google Compute Engine host discovery
15031,vendor: pull in GCE deps,
15032,"Revert ""vendor: Add GCE deps""",This reverts commit 4831b6de40a9291ed461d5c757e7459bbe2c307d.
15033,Style tweaks and vendor.json cleanup,
15034,Merge pull request #2647 from majormoses/master,fixing typo in documentaion
15035,fixing typo in documentaion,
15036,Merge branch 'master' into f-gce-discovery,
15037,Condense gce discovery logging a bit,
15038,Fix formatting,
15039,Update CHANGELOG.md,
15040,Merge pull request #2643 from hashicorp/f-node-metadata,Node metadata
15041,Update client api and docs for node metadata,
15042,Update website docs for node metadata,
15043,Add -node-meta to agent command line options,
15044,Validate metadata config earlier and handle multiple filters,
15045,Merge pull request #2645 from agy/agy/typo-fix,Pedantic typo fix
15046,Pedantic typo fix,
15047,Fix formatting,
15048,vendor: Update go-memdb dependency,
15049,Add meta key validations and more tests,
15050,Merge pull request #2641 from hashicorp/jbs-envvars-move,DOCS: update environment variables
15051,DOCS: update environment variables, Move environment variables to section of CLI page Remove environment variables page Remove environment variables nagivation menu entry
15052,Merge pull request #2638 from hashicorp/jbs-envupdate,DOCS: update Environment Variables page
15053,DOCS: update environment variables page, Relocate Environment Variables page to Agent section Correct front matter newlines issue
15054,Add tests for node metadata functionality,
15055,Add support for setting node metadata fields,
15056,Merge pull request #2573 from hashicorp/jbs-envvars,Add a page for CLI environment variables
15057,Update CHANGELOG.md,
15058,Merge pull request #2611 from amiryal/patch-1,Correct heading level in encryption documentation
15059,Merge pull request #2612 from amiryal/patch-2,Systemd unit to use default KillSignal of SIGTERM
15060,Merge pull request #2613 from jrasell/master,Update the AWS terraform variables file to include us-east-2 AMIs.
15061,Merge branch 'master' into master,
15062,Merge pull request #2615 from ruslansennov/master,update /v1/agent/service/register endpoint doc
15063,Merge pull request #2620 from mooyoul/tf-module-support-aws-seoul,Add Seoul region to the map for ubuntu
15064,Merge pull request #2627 from legendtkl/master,fix typo Check-And_set to Check-And-Set
15065,Merge pull request #2628 from jippi/patch-1,Adding hashi-ui to community tools
15066,Merge pull request #2629 from Ashald/f-website/add-consul-announcer,Add consul-announcer to Community Tools
15067,Merge pull request #2636 from hashicorp/jbs-ui-noscript,UI: add notification for disabled JavaScript
15068,Merge pull request #2635 from hashicorp/kv-put-crash,cli: Fix panic on empty data argument to kv put
15069,cli: Fix printf format in KV Export Test,Fix vet issue: command/kv_export_test.go:48: arg code for printf verb %s of wrong type: int
15070,Update CHANGELOG.md,
15071,Merge pull request #2633 from hashicorp/kv-export-import,cli: Add KV export and import
15072,UI: add notification for disabled JavaScript,
15073,cli: Fix panic on empty data argument to kv put,"Passing in an empty quoted argument from the shell currently panics as we never check the length being greater than 0 prior to indexing into the first rune, as illustrated in the test in this commit. We also fix the panic, treating an empty string for data as equivalent to not having passed it in the first place."
15074,cli: Add KV export and import,"This commit adds two new commands to the Consul KV CLI, which export and import a JSON formatted representation of the Consul KV tree. It is useful to migrate parts of the KV tree between unrelated Consul clusters, and could also be used for initial data population of the KV store."
15075,Standardize the case of all check log messages,
15076,Merge pull request #2632 from hashicorp/kv-put-base64,cli: Add -base64 option to consul kv put
15077,cli: Add -base64 option to consul kv put,"This commit adds a -base64 option to the consul kv put command, which base 64 decodeds the data prior to writing it. This can be used in conjunction with consul kv get -base64 key."
15078,Merge pull request #2631 from hashicorp/kv-get-base64,cli: Add -base64 option to consul kv get
15079,cli: Add -base64 option to consul kv get,"This commit adds a -base64 option to the consul kv get command, which base 64 encodes the output such that it can be processed by terminal tools in the event that the data is binary. The flag defaults to false."
15080,Add consul-announcer to Community Tools,
15081,Update downloads_tools.html.erb,
15082,fix typo Check-And_set to Check-And-Set,
15083,reset watch's lastIndex on error,"When a -dev agent is restarted it'll have a clean state, including a reset index. A watch() will reconnect after a restart, but it won't notice that the index counter has reset and it will keep waiting until we reached the old index again, which is wrong. Resetting the index will prevent that and makes watch work for -dev agents."
15084,Add Seoul region to the map for ubuntu,
15085,update /v1/agent/service/register endpoint doc,
15086,Update the AWS terraform variables file to include us-east-2 AMIs.,"AMIs have been added for Ubuntu, CentOS[6-7] and RH[6-7]. Terraform fmt has also been run on the file."
15087,Systemd unit to use default KillSignal of SIGTERM,"Since Consul 0.7, client-mode agents are shutting down gracefully by default, so no need to send them a SIGINT specially. The default for server-mode agents is still not to leave gracefully on SIGTERM, but it was left this way for a reason. To override this, it is better to set the leave_on_terminate option, rather than changing the KillSignal."
15088,Correct heading level in encryption documentation,The ‘RPC Encryption’ heading is semantically at the same level as ‘Gossip Encryption’.
15089,Updates downloads page link to 0.7.2.,
15090,Merge pull request #2607 from bradleyfalzon/patch-2,Fix typo in command/kv/put doc
15091,Fix typo in command/kv/put doc,
15092,Puts the tree in 0.7.3 dev mode.,
15093,Release v0.7.2,
15094,Puts the tree into 0.7.2 release mode.,
15095,Merge pull request #2599 from hashicorp/data-dir-handling,Don't error if data-dir doesn't exist
15096,Don't error if the given data-dir doesn't exist,
15097,Release v0.7.2-rc1,
15098,Puts tree in release mode for -rc1.,
15099,Adds exception for data-dir check in -dev mode.,This was changed in #2529.
15100,Adds session policy example to ACL internals doc.,
15101,Updates web assets to match latest.,
15102,Update CHANGELOG.md,
15103,Fixes a typo in the agent options docs.,
15104,Merge pull request #2594 from hashicorp/acl-complete,Adds complete ACL support for /v1/agent endpoints.
15105,Adds some basic documentation about the new ACL changes.,
15106,Adds complete ACL support for listing events.,
15107,Adds remaining unit tests for agent ACL vet and filter functions.,
15108,Fixes a race in the monitor endpoint test that would cause panics.,
15109,Update CHANGELOG.md,
15110,Merge pull request #2529 from mckennajones/bug/1838,Give a better error message when data-dir is not a directory
15111,Handle error from stat on data-dir and shorten error message,
15112,Adds a leader wait when testing with ACLs.,
15113,Adds complete ACL coverage for non-utility agent endpoints.,This is a checkpoint - we need to complete some unit tests for agent/acl.go.
15114,Update CHANGELOG.md,
15115,Merge pull request #2553 from mckennajones/bug/ignoresigpipe,Ignore sigpipe signals
15116,Update CHANGELOG.md,
15117,Merge pull request #2597 from hashicorp/atlas-deprecation-notice,Add a notice about deprecation of atlas features
15118,Add a notice about deprecation of atlas features,
15119,Adds complete ACL support for agent utility endpoints.,
15120,Adds ACL management support to the agent.,
15121,Adds support to the ACL package for agent policies.,
15122,Adds a unit test to make sure the status endpoint doesn't ever show anything,"with ""token"" in the name."
15123,Merge pull request #2595 from btfak/master,fix fmt.Errorf usage bug
15124,fix fmt.Errorf error,"missing argument for Errorf(""%q""): format reads arg 1, have only 0 args"
15125,Update CHANGELOG.md,
15126,Merge pull request #2593 from hashicorp/f-vendor-memberlist,Update memberlist vendor deps
15127,Update memberlist vendor deps,
15128,Merge pull request #2592 from hashicorp/acl-complete-node-session,Adds complete ACL coverage for nodes and sessions.
15129,Adds complete ACL coverage for /v1/session endpoints.,
15130,Adds support to ACL package for session policies.,
15131,Adds complete ACL coverage for /v1/internal/ui/node endpoints.,
15132,Adds complete ACL support for /v1/query//execute.,"This was already supported by previous changes to the ACL filter, so we just added a test to show it working."
15133,Fixes implementation of node ACLs for /v1/catalog/node/.,"This would return a ""permission denied"" error, but this changes it to return the same response as a node that doesn't exist (as was originally intended and written in the code comments)."
15134,Adds full ACL coverage for /v1/health endpoints.,
15135,Update CHANGELOG.md,
15136,Merge pull request #2591 from hashicorp/snapshot-interval,Change raft snapshot interval to 5 seconds
15137,Adds complete ACL coverage for /v1/coordinate/nodes and Coordinate.Update RPC.,
15138,"Adds support for a new ""acl_agent_token"" which is used for internal",catalog operations.
15139,Bans anonymous queries that aren't tied to a session.,This gets us coverage of PQ creation under the existing service policy or the soon-to-be-added session policy.
15140,Merge pull request #2590 from hashicorp/acl-complete-catalog,Adds new node ACL policy and applies it to catalog endpoints.
15141,Change raft snapshot interval to 5 seconds,
15142,Adds complete ACL coverage for /v1/catalog/service/.,
15143,Adds complete ACL coverage for /v1/catalog/nodes.,
15144,Adds complete ACL coverage for /v1/catalog/node/.,
15145,Adds complete ACL coverage for /v1/catalog/deregister.,This included some state store helpers to make this more efficient.
15146,Adds complete ACL coverage for /v1/catalog/register.,
15147,Merge pull request #2575 from bradleyfalzon/patch-1,Link to consensus.html#deployment-table not #toc_4
15148,"Removes the exception for the ""consul"" service in the catalog.",
15149,Merge pull request #2580 from hashicorp/sethvargo/kv_main,Switch to KV CLI in getting started
15150,Switch to KV CLI in getting started,
15151,Merge pull request #2579 from hashicorp/sethvargo/kv_main,Update homepage to use KV CLI instead of curl
15152,Update homepage to use KV CLI instead of curl,
15153,Concurrent-safe notification mock,This patch provides additional attribute to the notification mock in order to protect an access to the internal maps from multiple go-routines. This is required to prevent panic errors caused by inconsistent map state.
15154,Adds support to ACL package for node policies.,
15155,vendor: Add GCE deps,Add Google API and related dependencies for GCE discovery.
15156,command/agent: Google Compute Engine host discovery,"This commit adds several command-line and config options that facilitate host discovery through Google Compute Engine (GCE), much like the recently added EC2 host discovery options. This should assist with bootstrapping and joining servers within GCE when non-static addresses are used, such as when using managed instance groups. Documentation has also been added. It should be noted that if running from within a GCE instance, the only option that should be necessary is -retry-join-gce-tag-value."
15157,Update CHANGELOG.md,
15158,Overlooked saving a couple changes,
15159,updates based on feedback,
15160,Merge pull request #2574 from hashicorp/f-udp-checksum,Update memberlist vendor deps
15161,Address feedback,
15162,Sorts all the ACl policy handlers for easier navigation (no functional changes).,
15163,Adds an opt-in for new ACL policies and features coming in Consul 0.8.,
15164,Merge pull request #2557 from hashicorp/sethvargo/safer_server,Use a random port instead of idx in testutil
15165,Link to consensus.html#deployment-table not #toc_4,
15166,Fixes broken link in options doc.,
15167,Clarifies ACL replication token.,
15168,Update memberlist vendor deps,
15169,Some examples where sockets are possible as well,
15170,Add a table of CLI environment variables,
15171,Notes about memory usage (helps with #2535),
15172,Merge pull request #2568 from shantanugadgil/patch-1,Update kv.html.markdown
15173,Update kv.html.markdown,
15174,Update CHANGELOG.md,
15175,Update CHANGELOG.md,
15176,Small vendor update for go-sockaddr: now able to filter by CIDR.,
15177,Merge pull request #2563 from hashicorp/f-sockaddr-0.7,F sockaddr 0.7
15178,Update Windows support.,
15179,Merge pull request #2564 from mzupan/fix-query-doc,Doc Fix: The Near key is out of place
15180,Needs to be moved,This took 2 hours from my life. The near has to be inside a service and not in the main block.
15181,Fix compilation on Windows.,
15182,Run all known addresses through go-sockaddr/template.,"The following is now possible: $ consul agent -dev -client=""{{GetPrivateIP}}"" -bind='{{GetInterfaceIP ""en0""}}'"
15183,Import github.com/hashicorp/go-sockaddr,
15184,Add retry with backoff to initial bootstrap checks (#2561),
15185,Fix race issue in monitor endpoint test,
15186,Merge pull request #2556 from williamlord/master,Update snapshot.html.markdown for spelling mistake
15187,Update CHANGELOG.md,
15188,Merge pull request #2531 from alicebob/txntypes,fix KVOp types
15189,Use a random port instead of idx in testutil,"The testutil server uses an atomic incrementer to generate unique port numbers. This works great until tests are run in parallel, across packages. Because each package starts at the same ""offset"" idx, they collide. One way to overcome this is to run each packages' test in isolation, but that makes the test suite much longer as it does not maximize parallelization. Alternatively, instead of having ""predictable"" ports, we can let the OS choose a random open port automatically. This still has a (albeit smaller) race condition in that the OS could return an open port twice, before the server has a chance to actually start and occupy said port. In practice, I have not been able to hit this race condition, so it either doesn't happen or it happens far less frequently that the existing implementation. I'm not sure how I feel about the panic, but this is just test code, so I'm including to say it's okay?"
15190,Update snapshot.html.markdown,
15191,Update CHANGELOG.md,
15192,Merge pull request #2533 from mckennajones/bug2526,Fix for KV put command
15193,Update CHANGELOG.md,
15194,Merge pull request #2555 from hashicorp/pr-2497-slackpad,Updates Circonus library and adds support for custom display name and tags.
15195,Changes Consul version number for new Circonus options.,
15196,Update CHANGELOG.md,
15197,Merge pull request #2551 from hashicorp/jbs-2541,Remove Deregister from UI for #2541
15198,Update CHANGELOG.md,
15199,Add reload/leave http endpoints (#2516),
15200,ignore sigpipe signals to fix journalctl issue #2404,
15201,Merge pull request #2552 from hashicorp/jbs-2540,Update compatibility table for #2540
15202,Update compatibility table for #2540,
15203,Remove Deregister from UI for #2541, Remove Deregister button Remove Deregister functionality
15204,Merge pull request #2547 from hashicorp/sethvargo/return_type,Return the correct type
15205,Unit test for kv_put with negative values,
15206,Use ErrorWriter in cli so that errors get written to stderr,
15207,Return the correct type,
15208,Update CHANGELOG.md,
15209,Merge pull request #2544 from hashicorp/sethvargo/best_status,Add an API method for determining the best status
15210,Update CHANGELOG.md,
15211,Merge pull request #2530 from coffeehc/master,adapt to server's checker field TLSSkipVerify type
15212,Do not log,
15213,Add an API method for determining the best status,"Given a list of HealthChecks, this determines the ""best"" status for the collective group. This is useful for nodes and services, which may have multiple checks associated with them."
15214,Merge pull request #2532 from jamtur01/docspass,Documentation pass
15215,Update dns.html.markdown,
15216,Merge pull request #2538 from tolitius/clojure-client,[website]: Clojure client to SDK section
15217,Merge pull request #2543 from hashicorp/f-bench,Gets benchmarks running again and does a rough pass for 0.7.1.
15218,Gets benchmarks running again and does a rough pass for 0.7.1.,
15219,[website]: Clojure client to SDK,"in the ""Download Consul Tools"" list"
15220,Update CHANGELOG.md,
15221,Add QueryOptions to api package's monitor,
15222,Add logWriter to agent Create() method,
15223,Add monitor http endpoint,
15224,Simple check to differentiate between stdin flag or value that contains,a -
15225,Fix to watch command docs,
15226,Final dc pass,
15227,Removed two space after period exceptions,
15228,Another catch,
15229,And a handful more,
15230,More consistency,
15231,Documentation pass,"I was reviewing some docs and found a few issues.  Fixed some spelling mistakes. Re-formatted some paragraphs. Changed some potentially loaded language. Fixed some grammar issues. Tried to consistently use syntax-highlighting. Fixed post-period spacing. Fixed some formatting issues and inconsistency. All ""notes"" are either proper notes or re-written."
15232,fix KVOp types,
15233,Merge branch 'master' of github.com:hashicorp/consul,
15234,Runs go fmt.,
15235,Update CHANGELOG.md,
15236,Updates static assets to pick up #2340 and and #2525.,
15237,Merge pull request #2525 from hashicorp/jbs-2485,Bootstrap w/o Glyphicon Halflings (resolves #2485)
15238,Update CHANGELOG.md,
15239,Update CHANGELOG.md,
15240,Fix keyring doc method wording,
15241,Combine keyring endpoints into one,
15242,Add version specific note to keyring http docs,
15243,Add keyring api website doc sections,
15244,Add keyring http endpoints,
15245,check if data-dir is actually a directory,
15246,Makes addresses blank in service definition.,
15247,Bootstrap w/o Glyphicons (resolves #2485), Remove reference to Glyphicon Halflings @fontface Remove unused Glphyicon related classes
15248,Merge pull request #2523 from hashicorp/jbs-2153,Update demo
15249,Update demo, Add DEMO_BOX_NAME env var for specifing different boxes (#2153) Update default box to debian/jessie64 Update README
15250,Tweaks title of snapshot link.,
15251,adapt to server's checker field TLSSkipVerify type,
15252,Merge pull request #2515 from hashicorp/f-snapshot-agent-docs,Adds a draft of the snapshot agent docs.
15253,Adds details about config files.,
15254,Tweaks local option name.,
15255,Merge pull request #2520 from hashicorp/jbs-2393,Attempt to describe entire response (for #2393)
15256,tweaks,
15257,Attempt to describe entire response (for #2393),Describe fields returned by /v1/catalog/service/
15258,Update CHANGELOG.md,
15259,Merge pull request #2518 from hashicorp/f-pretty,Defaults to pretty JSON in dev mode.
15260,Defaults to pretty JSON in dev mode.,
15261,Remove ACL ID from the left list,
15262,Update CHANGELOG.md,
15263,Merge pull request #2504 from tolitius/envoy,[website]: adding a Clojure client
15264,Merge pull request #2501 from Drawaes/master,[Website] Update community tools page to add condenserdotnet
15265,Tweaks markup on community page.,
15266,Merge pull request #2397 from sdinakar85/patch-1,Multiple Datacenter Documentation
15267,Tweaks formatting of example JSON.,
15268,Merge pull request #2366 from aksentyev/master,"api client: CatalogService added fields CreateIndex, ModifyIndex"
15269,Moves index fields to the bottom of the structure.,
15270,Merge pull request #2340 from kushniro/b-ui-tags-commas,UI: remove redundant commas in tags list (services view)
15271,Adds notes field to API.,Closes #2336.
15272,Tweaks DO example Terraform.,
15273,Merge pull request #2326 from greenbrian/master,Add Terraform config for Digital Ocean
15274,Merge pull request #2238 from hasyimibhar/master,Remove duplicated environment variables
15275,Adds a draft of the snapshot agent docs.,
15276,~ docs: Typo in agent options page.,
15277,Merge pull request #2510 from BenjaminFarley/master,Update to operator docs/comments
15278,Operator docs update,
15279,Small change to how operator docs read,
15280,Merge pull request #2508 from hashicorp/f-s3,Adds AWS S3 SDK.
15281,Adds AWS S3 SDK.,This isn't used in OSS but CE needs it. It'll be easier to manage common deps in OSS and take them to CE.
15282,Cleans up vendor metadata. (#2507),"  Removes bad ""context"" dep.   Updates Raft checksum.   Cleans up go-msgpack vendoring.   Cleans up EC2 vendor entry. "
15283,Cleans up EC2 vendor entry.,
15284,Cleans up go-msgpack vendoring.,
15285,Updates Raft checksum.,
15286,"Removes bad ""context"" dep.",
15287,Docs: Web UI config updates (#2411),  Updates around Web UI directory configuration   consistent terms 
15288,[website]: adding a Clojure client,"to the ""Download Consul Tools"" list"
15289,update vagrant demo to 0.7.1 (#2503),
15290,Update downloads_tools.html.erb,Added condenserdotnet
15291,Update upgrade-specific.html.markdown,
15292,Update dns-cache.html.markdown,
15293,Points web at 0.7.1 release.,
15294,Puts the tree into 0.7.2 dev mode.,
15295,Release v0.7.1,
15296,Sets the release date in the change log.,
15297,Puts the tree in release mode.,
15298,Updated broken Extended Key Usage link (#2500),
15299,Remove Extra > (#2499),
15300,Update raft deps to fix snapshot races in -dev mode (#2498),
15301,Merge branch 'master' of https://github.com/maier/consul,
15302,revert to previous circonusllhist,
15303,Update CHANGELOG.md,
15304,"Revert ""Updates Circonus metrics library and adds support for display name and tags.""",This reverts commit bd490ec937a5859ba43b07d9103b3cb8f037e9e5 from #2491.
15305,Use uuids in persist temp files to avoid race (#2494),
15306,Update CHANGELOG.md,
15307,Update CHANGELOG.md,
15308,Improve logging when deregistering a nonexistent service (#2492),"Log a warning instead of a success message when attempting to deregister a nonexistent service. In Consul 0.8 this can be changed to giving an error outright, but for now we can keep the idempotent delete behavior."
15309,Update CHANGELOG.md,
15310,Updates Circonus metrics library and adds support for display name and tags., Update circonus-gometrics  vendor circonus-labs/circonus-gometrics vendor circonus-labs/circonus-gometrics/api vendor circonus-labs/circonus-gometrics/checkmgr vendor circonus-labs/circonusllhist vendor hashicorp/go-retryablehttp   Update Circonus integration expose Check Display Name and Check Tags configuration options.   Adds version info to docs for new Circonus options. 
15311,Adds version info to docs for new Circonus options.,
15312,Update Circonus integration expose Check Display Name and Check Tags configuration options.,
15313,Update circonus-gometrics,vendor circonus-labs/circonus-gometrics vendor circonus-labs/circonus-gometrics/api vendor circonus-labs/circonus-gometrics/checkmgr vendor circonus-labs/circonusllhist vendor hashicorp/go-retryablehttp
15314,Removes stale reference to reap lock which causes a panic. (#2490),
15315,Adjusts path for injected GIT_* variables.,This fixes #2486 and was broken when we refactored for build tags.
15316,Runs the static asset packaging inside the container; updates assets.,
15317,Fixes a typo in the build script.,
15318,Updates embedded static assets.,
15319,Update upgrade-specific.html.markdown,
15320,Update CHANGELOG.md,
15321,Set MaxStale default to 10 years and add a stale counter (#2481),"Default MaxStale to 10 years and add a counter at consul.dns.stale_queries that tracks when an agent serves a query that's stale by at least 5 seconds. Previously, MaxStale defaulted to 5 seconds and DNS would become unavailable after a short period of time with no leader. This new default allows DNS requests to still be served in the event of a long outage. Fixes #2460."
15322,Update CHANGELOG.md,
15323,Update CHANGELOG.md,
15324,Adding in us-west-1-ubuntu (#2373),  Adding in us-west-1-ubuntu   Update variables.tf   Update variables.tf 
15325,Update CHANGELOG.md,
15326,Lowercase ACL Datacenter (#2478),  Lowercase ACL Datacenter   move lowercasing of ACLDatacenter to command.go and add validation   Tweaks error message about bad ACL datacenter. 
15327,Upgrades to Go 1.7 and fixes vet finding and TLS behavior change. (#2281),"  Upgrades to Go 1.7 and fixes vet finding and TLS behavior change.   Fixes unit tests in a better manner by closing the client connection on errors.   We traced through and realized that https://github.com/golang/go/issues/15709 causes the output from the client to get buffered, which cuts off the alert feedback due to the flush() call getting bypassed by the error return."
15328,Update CHANGELOG.md,
15329,Merge pull request #2480 from hashicorp/b-atomic-writes,Atomic writes for persisting service/check state
15330,Add a note about not calling sync for persistCheckState,
15331,Update README.md (#2479),
15332,Call fsync() for saving check/service state,
15333,Update CHANGELOG.md,
15334,Add WaitForResult to some flaky tests (#2477),This replaces some hard sleeps with testutil.WaitForResult retry logic in some recently added tests around TLSSkipVerify in checks.
15335,Trim leading slash on key to avoid redirect (golang/go#4800) (#2476),
15336,Retry with backoff on session invalidation failure (#2475),
15337,Adjusts location of archive test fixtures.,
15338,Moves the snapshot package up one level. (#2472),
15339,Moves logger setup into its own package. (#2471),  Moves logger setup into its own package.   Removes a stray regex mark in the test locator. 
15340,Clarify -retry-join docs. (#2469),
15341,Finishes move of datacenter into client vs. options. (#2470),
15342,Update CHANGELOG.md,
15343,Add setting to skip ssl certificate verification for HTTP checks (#1984),  http check: add setting to skip ssl certificate verification   update http check documentation   fix typo in documentation   Add TLSSkipVerify to agent api 
15344,Update CHANGELOG.md,
15345,Update CHANGELOG.md,
15346,Supports WAN and LAN Serf Bind Addresses. (#2468),   adding cli config and config file support for specifying the serf wan and lan bind addresses    updating documentation for serf wan and lan options Fixes #2007   Cleans up some small things from #2380.   Uses the bind default for the agent test for Serf WAN and LAN. 
15347,Delete prepared query using WriteOptions (#2417),
15348,Removes unnecessary clause in unit test check.,
15349,Update CHANGELOG.md,
15350,Adds support for DNS recurse truncation. (#2467), Return message from recurse even if truncated  Signed-off-by: Evan Farrar efarrar@pivotal.io  Tweaks unit test.
15351,Update CHANGELOG.md,
15352,Adds missing datacenter arg to API client for snapshot commands. (#2466),
15353,Update CHANGELOG.md,
15354,Merge pull request #2459 from hashicorp/f-aws-autodiscovery,AWS -retry-join-ec2 option
15355,Small tweaks to docs and syntax,
15356,Update CHANGELOG.md,
15357,Disallow -bootstrap-expect flag in dev mode (#2464),
15358,Makes vendor pattern more generic.,
15359,Adds basic build tag support with different versions. (#2463),
15360,Builds static assets to pick up #2456 (redux).,Built this time using the same container that the dist build uses so it won't see a difference and fail the build.
15361,Adds a UI build in a Docker container. (#2462),
15362,Add support for ECS task roles as an auth mechanism,
15363,Move EC2 discovery logic into retryJoin for robustness,
15364,Support more forms of EC2 authentication,
15365,Add testing around EC2 discovery config,
15366,Fixed up config structure for EC2 discovery,
15367,vendor: Add aws-go-sdk,
15368,Merge branch 'master' of github.com:hashicorp/consul into aws_autodiscovery,
15369,Typo fix (#2457),
15370,Update CHANGELOG.md,
15371,Update CHANGELOG.md,
15372,Update CHANGELOG.md,
15373,Builds static assets to pick up #2456.,
15374,properly escape session and acl data in UI (#2456),"  update libv8 gem to something that compiles   properly escape session and acl data in UI   fixes an XSS vulnerability caused by having the sessionName, sessionMeta, and aclName blindly returning data as Handlebars.SafeStrings"
15375,Retry periodically for 60s if syslog setup fails (#2455),
15376,Add snapshot inspect subcommand (#2451),
15377,"Revert ""Added website docs for snapshot inspect command""",This reverts commit 7d0318252ca8fd81192b1bdc45a4c37407aecd37.
15378,Added website docs for snapshot inspect command,
15379,Switch to Docker-based website build process (#2448),"This has been working really well on Nomad and hashicorp.com, so I am ready to port it out to Consul as a beta. This moves the local development to a Docker container, which is the same container that we use to publish the website in production. The result is much faster and more consistent deploys."
15380,Enable snapshots in dev mode (#2453),
15381,More flaky unit test fixes (#2449), More flaky unit test fixes Raise some test timeouts that were too low
15382,Add security page (#2447),
15383,Update CHANGELOG.md,
15384,Added tests for lookups on the 'addr.consul' domain,
15385,Add a service address SRV lookup test for IPv6,
15386,Fix test cases,
15387,Give the service address in SRV lookup when it differs from the node's,
15388,Update CHANGELOG.md,
15389,Update CHANGELOG.md,
15390,Resolve Consul CNAME records on external services (#2444),
15391,Add Python 3 KV store client to community tools (#2431),
15392,Update CHANGELOG.md,
15393,Update CHANGELOG.md,
15394,Adds support for snapshots and restores. (#2396),"  Updates Raft library to get new snapshot/restore API.   Basic backup and restore working, but need some cleanup.   Breaks out a snapshot module and adds a SHA256 integrity check.   Adds snapshot ACL and fills in some missing comments.   Require a consistent read for snapshots.   Make sure snapshot works if ACLs aren't enabled.   Adds a bit of package documentation.   Returns an empty response from restore to avoid EOF errors.   Adds API client support for snapshots.   Makes internal file names match on-disk file snapshots.   Adds DC and token coverage for snapshot API test.   Adds missing documentation.   Adds a unit test for the snapshot client endpoint.   Moves the connection pool out of the client for easier testing.   Fixes an incidental issue in the prepared query unit test.   I realized I had two servers in bootstrap mode so this wasn't a good setup.   Adds a half close to the TCP stream and fixes panic on error.   Adds client and endpoint tests for snapshots.   Moves the pool back into the snapshot RPC client.   Adds a TLS test and fixes half-closes for TLS connections.   Tweaks some comments.   Adds a low-level snapshot test.   This is independent of Consul so we can pull this out into a library later if we want to.   Cleans up snapshot and archive and completes archive tests.   Sends a clear error for snapshot operations in dev mode.   Snapshots require the Raft snapshots to be readable, which isn't supported in dev mode. Send a clear error instead of a deep-down Raft one.   Adds docs for the snapshot endpoint.   Adds a stale mode and index feedback for snapshot saves.   This gives folks a way to extract data even if the cluster has no leader.   Changes the internal format of a snapshot from zip to tgz.   Pulls in Raft fix to cancel inflight before a restore.   Pulls in new Raft restore interface.   Adds metadata to snapshot saves and a verify function.   Adds basic save and restore snapshot CLI commands.   Gets rid of tarball extensions and adds restore message.   Fixes an incidental bad link in the KV docs.   Adds documentation for the snapshot CLI commands.   Scuttle any request body when a snapshot is saved.   Fixes archive unit test error message check.   Allows for nil output writers in snapshot RPC handlers.   Renames hash list Decode to DecodeAndVerify.   Closes the client connection for snapshot ops.   Lowers timeout for restore ops.   Updates Raft vendor to get new Restore signature and integrates with Consul.   Bounces the leader's internal state when we do a restore. "
15395,Update to the higher quality Travis build icon,
15396,Wait for agent joins to finish in TestClient_RPC,
15397,Fix race condition in TestClient_WatchList and TestClient_WatchGet,
15398,Add wait logic to TestClient_RPC_Pool,
15399,Agent anti-entropy test fixes,
15400,Merge pull request #2437 from hashicorp/f-travis-pr-lite,Only builds the binary stuff under master branch CI.
15401,Only builds the binary stuff under master branch CI.,
15402,Test fixes (#2434)," Test fixes in health_endpoint_test.go, agent_endpoint_test.go and rtt_test.go Don't reuse the same agent config in TestAgent_ReconnectConfigSettings"
15403,Merge pull request #2389 from hashicorp/jbs-2019,Lower Service tag DNS warning to DEBUG for #2019
15404,Merge pull request #2383 from hashicorp/jbs-1462,Clarify retry_join addresses for #1462
15405,Reworded and applied to -retry-join also,
15406,Merge pull request #2382 from zaunerc/master,Add info about return values for function Get().
15407,Merge pull request #2381 from bluefeet/master,Add the Perl Consul client library to the list of SDKs on the web site.
15408,Centralize command-line parsing,
15409,Adds a version note for the consul kv command.,Closes #2410.
15410,Merge pull request #2408 from Kourkis/patch-1,Fix typo
15411,Fix typo,"The double ""to"" was distracting"
15412,Multiple Datacenter Documentation,Updated the slightly confusing documentation on how to join the clusters over WAN. Also the inputs from #1656 is taken in account in this documentation update.
15413,Update CHANGELOG.md,
15414,Update CHANGELOG.md,
15415,Update CHANGELOG.md,
15416,Removes reap config option.,
15417,Update CHANGELOG.md,
15418,Adds a note about child process reaping going away.,
15419,Merge pull request #2394 from adamwg/reap-the-reaper,Remove the child process reaper (resolve #1988)
15420,Update community.html.erb,
15421,Update README.md,
15422,Update README.md,
15423,Merge pull request #2395 from gitter-badger/gitter-badge,Add a Gitter chat badge to README.md
15424,Add Gitter badge,
15425,Merge pull request #2392 from Tecsisa/Fix_DNS_Cache_doc,Doc fix - allow_stale enabled by default in v0.7
15426,Doc fix - allow_stale enabled by default in v0.7,
15427,Merge pull request #2386 from aboettger-tuhh/patch-1,json syntax corrected
15428,Update CHANGELOG.md,
15429,Merge pull request #2391 from hashicorp/b-peers-docs,Fixes port numbers in peers.info.
15430,Fixes port numbers in peers.info.,
15431,Update CHANGELOG.md,
15432,Adds comment about SessionOpts.,
15433,Merge pull request #2372 from HotelsDotCom/flexible-lock-sessions,More flexible Session configuration when using api.Lock
15434,Lower Service tag DNS warning to DEBUG for #2019,
15435,vendor: Remove go-reap,go-reap is no longer used since we no longer reap child processes.
15436,agent: Stop reaping child processes (resolves #1988),"The consul docker image now uses dumb-init to reap child processes, so there's no need to reap them ourselves."
15437,json syntax corrected,
15438,Clarify retry_join addresses for #1462," Initial pass at adding note about address formats for retry_join;   IPv4 is a list of IPs only, whereas IPv6 are bracketed IPs + port"
15439,Add info about return values for function Get().,
15440,Add the Perl Consul client library to the list of SDKs on the web site.,
15441,Merge pull request #2369 from hashicorp/jbs-2204,Update getting started/join to address #2204
15442,Merge pull request #2377 from hashicorp/jbs-2210,"Update variable value information, fixes #2210"
15443,"Update variable value information as port must also be specified, fixes #2210",
15444,correction,
15445,More flexible Session configuration when using api.Lock,
15446,Update getting started/join to address #2204,
15447,Merge pull request #2364 from hashicorp/jbs-docs,"Correct inaccurate bind reference, closes #2234"
15448,Finalize update for -bind,
15449,"CreateIndex, ModifyIndex added for CatalogService",
15450,Clarification,
15451,"Correct inaccurate bind reference, closes #2234",
15452,Merge pull request #2362 from mckennajones/cliflagformatting,Making CLI flag formatting consistent in the docs
15453,Update operator.html.markdown,
15454,Merge branch 'cliflagformatting' of https://github.com/mckennajones/consul into cliflagformatting,
15455,cli flag formatting for agent docs and one guide,
15456,cli flag formatting for agent docs,
15457,updating cli formatting for intro docs,
15458,Update CHANGELOG.md,
15459,Update CHANGELOG.md,
15460,Update CHANGELOG.md,
15461,Merge pull request #2360 from hashicorp/sethvargo/kv_cli,Add kv subcommand and CLI
15462,Update cas docs,
15463,Fix kv put flags,
15464,Fix up kv put help output,
15465,Remove base64 comment entirely,
15466,Remove debugging code,
15467,Fix typo,
15468,Fix CAS operations for put,
15469,Update kv get docs,
15470,Change delete CAS behavior to require ModifyIndex,
15471,Rename session name to session ID,
15472,Update ModifyIndex comment,
15473,Gemfile was wonky,
15474,Fix copy-paste comments,
15475,Fix styles,
15476,Add top-level docs command,
15477,Add kv delete command,
15478,Add kv put command,
15479,Add kv get,
15480,Add kv command stubs,
15481,Update middleman,
15482,Add test function for returning an API client,
15483,Add documentation to KVPair,"Based on discussions with @slackpad, some of the values in the KVPair are ReadOnly. This commit updates the docs to reflect that."
15484,Merge pull request #2361 from jfbibeau/patch-1,Docs: Update command to create sample service
15485,Docs: Update command to create sample service,"Since the previous command creates /etc/consul.d with sudo, a regular user won't have permission to echo and redirect a file to the directory. Switch to using tee with sudo to ensure the file gets created."
15486,Merge pull request #2359 from ehaydenr/master,Terraform AWS Private Key
15487,key_file is deprecated. Switching to private_key using the file() interpolation function.,
15488,Update CHANGELOG.md,
15489,Merge pull request #2358 from hashicorp/b-windows-spam,"Makes Windows error check case-insensitive, runs go fmt."
15490,Runs go-fmt (incidental to this PR).,
15491,Makes string search for Windows case-insensitive.,Fixes #2356.
15492,Updates middleman-hashicorp.,
15493,Update keyring.html.markdown,
15494,Update CHANGELOG.md,
15495,Merge pull request #2353 from hashicorp/b-local-panic,Cleans up state management for remote deletes from local state.
15496,Calls remove on checks and services in the local test.,
15497,Cleans up state management for remote deletes from local state.,Fixes #2125.
15498,Merge pull request #2352 from hashicorp/sethvargo/check_Default,Clarify that hostname defaults to localhost for tcp
15499,Clarify that hostname defaults to localhost for tcp,
15500,Merge pull request #2351 from hashicorp/jbs-doc-updates,Remove references to the 'unknown' state.
15501,Remove references to the 'unknown' state., Remove reference to 'unknown' state in catalog endpoint docs Remove reference to 'unknown' state in health endpoint docs
15502,Update CHANGELOG.md,
15503,Merge pull request #2262 from WIZARD-CXY/master,Fixes go race bug in startup log buffering.
15504,Merge pull request #2346 from svetlyak40wt/patch-1,Fixed header level for version 0.7.0
15505,Fixed header level for version 0.7.0,Wrong header level breaks automatic changelog parsing at allmychanges.com.
15506,Merge pull request #2344 from soupdiver/return_error_when_no_logger_is_provided_on_http_server_creation,Returns an error if no logOutput is provided.
15507,return an error if no logOutput is provided,Otherwise the code will panic at a later stage where it is more complicated to figure out what’s actually going on.
15508,Updates getting started to remove broken links.,Fixes #2293.
15509,Adds Operator endpoint link.,
15510,Merge pull request #2341 from hashicorp/jbs-getting-started-updates,Command output updates.
15511,Restore command line.,
15512,Command output updates., Updated starting agent example to show new output/timestamps Updated curl example to show TaggedAddresses Updated dig example to return 127.0.0.1
15513,UI: remove redundant commas in tags list (services view),When some services had no tags(Tags is null) and some did have tags redundant commas were added to the tags list.
15514,Tweaks wording in lifeguard section.,
15515,Adds a section about lifeguard.,
15516,Updates website to version 0.7.0.,
15517,Puts tree back into development mode.,
15518,Release v0.7.0,
15519,Puts tree in final release mode.,
15520,Merge pull request #2337 from pszymczyk/master,Remove reference to localhost in operator.html.markdown
15521,remove reference to localhost in operator.html.markdown,
15522,Update CHANGELOG.md,
15523,Cleaned up some errors and did a general edit pass.,
15524,Gets rid of empty spaces.,
15525,Adds some line breaks.,
15526,Cleans up change log.,
15527,Adds version note to near parameter.,
15528,Add Terraform config for Digital Ocean,
15529,Update CHANGELOG.md,
15530,Tweaks options doc after latest merges.,
15531,Merge pull request #2263 from sweeneyb/dnsPort,Add support for dns port as a command line option
15532,Does some go fmt cleanup.,
15533,Merge pull request #2322 from hashicorp/pr-2321-slackpad,Adds a configurable timeout for DNS recursor client.
15534,Merge pull request #2313 from martinivanov/master,Replace key_path with private_key and file() interpolation in consul GCE terraform deployment.
15535,Adds a recursor timeout line to the merge test.,
15536,Fixes a typo in a test error message.,
15537,Tweaks documentation.,
15538,Update CHANGELOG.md,
15539,Merge pull request #2319 from hashicorp/f-bootstrap-abort,Adds check that aborts bootstrap mode if there's an existing cluster.
15540,Fixes error message in test.,
15541,Update CHANGELOG.md,
15542,Merge pull request #2320 from hashicorp/f-leave,Changes default for leave_on_terminate based on server or client mode.
15543,Merge remote-tracking branch 'upstream/master',
15544,Makes port selection atomic in unit tests.,
15545,Cleans up the upgrade guide.,
15546,Tweaks comment to be more correct.,
15547,Changes default for leave_on_terminate based on server or client mode.,
15548,Adds check that aborts bootstrap mode if there's an existing cluster.,
15549,Puts tree back in dev mode.,
15550,Adds a note about stale reads to the performance guide.,
15551,Release v0.7.0-rc2,
15552,Preps tree for 0.7.0-rc2 release.,
15553,Merge pull request #2316 from hashicorp/b-operator,Copies the member data instead of referencing by pointer.
15554,Copies the member data instead of referencing by pointer.,
15555,Removes Raft types from public API interface.,This will cause a lot of breakage because we've currently vendored a branch of the Raft library.
15556,Update CHANGELOG.md,
15557,Merge pull request #2315 from hashicorp/f-allow-stale,Changes default DNS allow_stale to true.
15558,Changes default DNS allow_stale to true.,
15559,Update CHANGELOG.md,
15560,Merge pull request #2312 from hashicorp/f-op-command,"Adds new consul operator endpoint, CLI, and ACL and some basic Raft commands."
15561,Updates documentation with details on the Consul operator actions.,
15562,Makes the Raft configuration API easier to consume.,
15563,Adds a log warning when operator peer changes occur.,
15564,Replace key_path with private_key and file() interpolation.,
15565,Fixes a stale comment.,
15566,"Adds new consul operator endpoint, CLI, and ACL and some basic Raft commands.",
15567,Makes empty checkServiceNode return a nil.,"The change in #2308 had an inadvertent interface change, so we fix that with a special case in this fix."
15568,Fixed code formatting,
15569,Added website documentation for the new recursor_timeout parameter,
15570,Made the dns recursor timeout test more reliable,
15571,Tweaks platform information in the README.,
15572,Merge pull request #2308 from hashicorp/f-pre-allocate,"Preallocates result struct, which was a profiling hot spot."
15573,"Preallocates result struct, which was a profiling hot spot.",
15574,Renamed dns config parameter internal_client_timeout for recursor_timeout,
15575,Merge remote-tracking branch 'pierre/master',
15576,Tweaks formatting of Consul version.,
15577,Adds top-level link to performance guide.,
15578,Sorts the guides (redux).,
15579,Sorts the guides.,
15580,Fixes a typo in the performance guide.,
15581,Adds a note about 2 CPU cores.,
15582,Update CHANGELOG.md,
15583,Merge pull request #2303 from hashicorp/f-tunes,"Adds performance tuning capability for Raft, detuned defaults, and supplemental docs."
15584,Removes leader_lease_timeout from stats.,
15585,Adds a max raft multiplier and tweaks documentation.,
15586,Stops scaling the commit timeout.,
15587,Increases RPC hold timeout for new default timing.,"Rather than scale this we just bump it up a bit. It'll be on the edge in the lower-performance default mode, and will have plenty of margin in the high-performance mode. This seems like a reasonable compromise to keep the logic here simple vs. scaling, and seems inline with the expectations of the different modes of operation."
15588,Merge pull request #2304 from hashicorp/b-circonus-token,Redacts the Circonus API token from stats JSON.
15589,Redacts the Circonus API token from stats JSON.,
15590,Tweaks wording in performance guide.,
15591,"Adds performance tuning capability for Raft, detuned defaults, and supplemental docs.",
15592,Added a configurable timeout to the client making DNS queries to downstream name servers,
15593,Fix link to outage recovery guide.,Fixes #2291.
15594,Merge pull request #2289 from hashicorp/jbs-typofix,Fix typo
15595,Fix typo,
15596,Update outage.html.markdown,
15597,Merge pull request #2235 from robwdux/patch-1,update ca tutorial to one more recent and relevant
15598,Merge pull request #2288 from hashicorp/b-unknown,Removed bad error message for health check status.
15599,Removed bad error message for health check status.,
15600,Merge pull request #2226 from abhinavdahiya/rm-health-unknown,Fixes #1775; Removes 'unknown' state
15601,Puts tree back in dev mode.,
15602,Release v0.7.0-rc1,
15603,Preps for RC1 release.,
15604,Merge pull request #2287 from hashicorp/f-version-tweaks,Makes protocol version a little clearer.
15605,Makes protocol version a little clearer.,
15606,Update acl.html.markdown,
15607,Merge pull request #2286 from kyhavlov/patch-1,Fix doc links for ACL replication status
15608,Fix links for ACL replication status,
15609,Update CHANGELOG.md,
15610,Update outage.html.markdown,
15611,Bumps Travis to Go 1.6.3.,
15612,Merge pull request #2283 from hashicorp/f-outage-docs,Updates docs for new peers.json behavior.
15613,Updates the changelog with peers.json info.,
15614,Updates the 0.7-specific upgrade notes.,
15615,Updates the outage docs with details about new Raft behavior.,
15616,Merge pull request #2282 from hashicorp/b-upgrade-docs,Updates version documentation.
15617,Updates version documentation.,
15618,Update CHANGELOG.md,
15619,Update CHANGELOG.md,
15620,Merge pull request #2276 from hashicorp/f-deregister-critical,Adds ability to deregister a service based on critical check state longer than a timeout.
15621,Merge branch 'master' into f-deregister-critical,
15622,Cleans up based on code review feedback.,
15623,Update CHANGELOG.md,
15624,Update CHANGELOG.md,
15625,Update CHANGELOG.md,
15626,Update CHANGELOG.md,
15627,Merge pull request #2280 from hashicorp/f-lan-tag,"Adds missing TaggedAddress structures to Go API client, adapts for address translation."
15628,Adds an X-Consul-Translate-Addresses to signal translation is enabled.,
15629,"Adds an ""lan"" tagged address so we have a way to get them all.","If we didn't have this, then there would be no way to know the LAN address if address translation was turned on."
15630,Adds missing TaggedAddress structures to API client.,
15631,Fixes a typo and adds an admonition about only being in Consul 0.7+.,
15632,Adds ability to deregister a service based on critical check state longer than a timeout.,
15633,Tweaks translate_wan_addr documentation.,Adds a note about HTTP being 0.7 and later only.
15634,Update CHANGELOG.md,
15635,Update CHANGELOG.md,
15636,Merge pull request #2275 from hashicorp/pr-2118-slackpad,Translates node addresses to WAN addresses where appropriate.
15637,Updates docs for WAN address translation and tweaks some nearby unrelated docs.,
15638,Tweaks the WAN address translation unit tests.,
15639,Merge pull request #2274 from hashicorp/jbs-command-line-anchor,Add anchor
15640,Factors translate out into a separate file and makes safe for in-memory RPCs.,
15641,Add anchor,
15642,Update gated_writer.go,
15643,Makes the filled-in parts of ServiceNode more explicit.,
15644,Translate Address to tagged WAN address in HTTP API when appropriate.,
15645,Merge pull request #2272 from hashicorp/f-asset-update,Updates built-in UI static assets to latest.
15646,Updates built-in UI static assets to latest.,
15647,Update CHANGELOG.md,
15648,Merge pull request #2271 from hashicorp/pr-2219-slackpad,Fixes incorrect domain and address translation for failed-over prepared query DNS responses.
15649,Runs go fmt.,
15650,Tweaks DNS prepared query failover unit test.,
15651,Corrects two issues with DNS prepared query failover,"When DNS prepared query fails over to another datacenter and the datacenter returns some nodes, the DNS result does not translate WAN addresses even when translation is enabled for SRV and A queries, and returns the wrong datacenter (the one that failed over) for SRV queries."
15652,Merge pull request #2241 from io41/patch-1,Update upgrading.html.markdown
15653,Merge pull request #2244 from johananl/master,Fix string concatenation in consul.tf
15654,Merge pull request #2246 from atomicpirate/patch-1,"Minor fix: ""lookup up"" -> ""looking up"""
15655,Update CHANGELOG.md,
15656,Merge pull request #2267 from hashicorp/b-srv-trim,Fixes bug when trimming DNS SRV records.
15657,Passes the index by reference so we can control the allocation.,
15658,Makes name compares case-insensitive.,
15659,Merge pull request #2270 from hashicorp/pr-2148-slackpad,Validates gossip encryption key before made persistent in local.keyring.
15660,Updates the change log.,
15661,Updates vendor info for memberlist.,
15662,Validate gossip encryption key before made persistent in local.keyring,
15663,Avoids allocations and function calls if no extra data is present.,
15664,"Renames ""seen"" to ""resolved"".",
15665,Fixes the DNS SRV trim bug.,
15666,Update CHANGELOG.md,
15667,Merge pull request #2266 from hashicorp/pr-2096-slackpad,Compresses all DNS responses by default.
15668,"Finishes up DNS compression by adding opt-out, tests, and documentation. Fixes trim routine.",
15669,Fix panic where r.Compress would be set before checking for errors.,
15670,Compress all DNS responses to prevent them from going over the 512 byte,limit from RFC 1035
15671,"Use the gox binary found in a user's $PATH, which we assume includes",$GOPATH/bin/ Fixes: 2110
15672,Merge pull request #2122 from pszymczyk/master,Add embedded-consul to download_tools page
15673,Merge pull request #2006 from fusiondog/patch-1,Adds documentation about DNS forwarding with iptables.
15674,Update CHANGELOG.md,
15675,Merge pull request #2055 from patrickbaber/master,Removes fixed height of node/service boxes.
15676,Update CHANGELOG.md,
15677,Merge pull request #2264 from hashicorp/pr-2045-slackpad,Enables stale mode for watchers.
15678,Moves stale code to same spot and adds it everywhere that supports it.,
15679,Fixes a typo and adds stale documentation to website.,
15680,Add support for dns port as a command line option,
15681,Update CHANGELOG.md,
15682,fix go race bug,
15683,Release v0.7.0-test3,
15684,Merge pull request #2261 from hashicorp/b-update-assetfs,Updates bindata after vendor update.
15685,Updates bindata after vendor update.,
15686,Update CHANGELOG.md,
15687,Merge pull request #2260 from hashicorp/f-go-1.6.3,Upgrades to Go 1.6.3.
15688,Upgrades to Go 1.6.3.,
15689,Update CHANGELOG.md,
15690,Merge pull request #2259 from hashicorp/f-retire-muxado,Removes support for muxado and protocol version 1.
15691,Removes upper end of muxado handler.,
15692,Closes the conn on bad protocol version.,
15693,Removes support for muxado and protocol version 1.,
15694,Update CHANGELOG.md,
15695,Merge pull request #2258 from hashicorp/f-vendor-updates,Updates vendored dependencies.
15696,"Updates metadata for golang.org/x/sys/unix, keeps SHA the same.",
15697,Updates ryanuber/columnize.,
15698,"Updates mitchellh/copystructure, mitchellh/mapstructure, and mitchellh/reflectwalk.",
15699,Updates mattn/go-isatty and mitchellh/cli.,
15700,Updates hashicorp/yamux.,
15701,Updates hashicorp/scada-client.,
15702,Updates hashicorp/raft-boltdb.,
15703,Updates hashicorp/net-rpc-msgpackrpc.,
15704,Updates hashicorp/memberlist.,
15705,Updates hashicorp/logutils.,
15706,Updates hashicorp/go-uuid.,
15707,Updates hashicorp/go-syslog.,
15708,Updates hashicorp/go-retryablehttp.,
15709,Updates hashicorp/go-reap.,
15710,Updates hashicorp/go-cleanhttp.,
15711,Upates hashicorp/go-checkpoint.,
15712,Updates hashicorp/errwrap and hashicorp/go-multierror.,
15713,Updates hashicorp/go-immutable-radix and hashicorp/go-memdb.,
15714,Updates hashicorp/hcl and hashicorp/hil.,This required a small mod to core Consul code to cope with an interface change.
15715,Removes some unused vendored dependencies.,
15716,Updates fsouza/go-dockerclient.,https://github.com/fsouza/go-dockerclient/compare/9b6c9720043b74304a6dd07a2a901d16e7bf3d3d...a53ba79627e888ef775bdcf15813f07d7a232867
15717,Updates elazarl/go-bindata-assetfs.,
15718,Updates circonus-labs/circonus-gometrics and circonus-labs/circonusllhist.,
15719,Updates boltdb/bolt.,
15720,Updates bgentry/speakeasy.,
15721,Updates armon/go-radix.,
15722,Updates armon/circbuf.,
15723,Updates DataDog/datadog-go.,
15724,Updates armon/go-metrics.,
15725,Updates miekg/dns.,https://github.com/miekg/dns/compare/75e6e86cc601825c5dbcd4e0c209eab180997cd7...db96a2b759cdef4f11a34506a42eb8d1290c598e
15726,Updates hashicorp/golang-lru.,
15727,Update CHANGELOG.md,
15728,Update CHANGELOG.md,
15729,Merge pull request #2222 from hashicorp/f-raft-v2,"Integrates Consul with ""stage one"" of HashiCorp Raft library v2."
15730,Update CHANGELOG.md,
15731,Merge pull request #2257 from hashicorp/f-doc-http-metrics,Adds a note about HTTP telemetry.
15732,Adds a note about HTTP telemetry.,
15733,Merge pull request #2256 from hashicorp/f-http-metrics,Installs a wrapper around HTTP endpoints that generate metrics.
15734,Installs a wrapper around HTTP endpoints that generate metrics.,
15735,Moves the peers.info content down into a constant.,
15736,"Adds peers back into bootstrap log, makes initial case consistent.",
15737,Update CHANGELOG.md,
15738,Merge pull request #2237 from hashicorp/f-acl-replication,Adds ACL replication.
15739,Tweaks select style.,
15740,Adds I/O-sensitive metrics to ACL replication operations.,
15741,Switches to a smooth rate limit vs. a bursty one.,
15742,Clarifies replication index shown in the log message.,
15743,Returns from the shutdown wait right away.,
15744,Moves ACL ID sorting interface onto the iterator.,
15745,Switches all ACL caches to 2Q.,
15746,Removes brew info callout.,
15747,Merge pull request #2104 from jpartain89/patch-1,Update install.html.markdown OS X Instructions
15748,Moves ACL ID generation down into the endpoint.,We don't want ACL replication to have this behavior so it was a little dangerous to have in the shared helper function.
15749,"Removes unsafe ""recover to empty"" code.","This isn't safe because it would implicitly commit all outstanding log entries. The new Raft library already has logic to not start a vote if the current node isn't in the configuration, so this shoudn't be needed."
15750,Tweaks recovery based on interface changes.,
15751,Moves to a safer design where we don't ingest the initial peers.json file.,
15752,Touches up Raft integration after latest changes.,
15753,Formats log messages to be consistent.,
15754,Adds more comments about the raftSafeFn.,
15755,Clarifies a comment about no-op peer operations.,
15756,"Adds back ""safing"" the configuration when a server leaves.",
15757,Integrates Consul with new version of Raft library.,
15758,Vendors first stage branch of the v2 Raft library.,
15759,Update CHANGELOG.md,
15760,Merge pull request #2253 from hashicorp/b-intent-queue,Updates Serf to pick up intent queue fix.
15761,Updates Serf to pick up intent queue fix.,"This fixes #1062 by storing intents per-node instead of in a small, fixed- size circular buffer."
15762,Merge pull request #2252 from hashicorp/f-govendor,Switches over to govendor.
15763,Switches over to govendor.,
15764,Merge pull request #2251 from hashicorp/b-tomography-js-error,Fixes JS exception when there are no coordinates present.
15765,Fixes JS exception when there are no coordinates present.,
15766,Merge pull request #2249 from hashicorp/sethvargo/link,Update links to serf
15767,Update links to serf,
15768,"Minor fix: ""lookup up"" -> ""looking up""",
15769,Updates documentation for ACL replication.,
15770,Adds an ACL replication status endpoint.,
15771,Increases the ACL cache size to 10k.,
15772,Adds a full integrated test for ACL replication.,
15773,Adds remaining core replication tests.,
15774,Removes a TODO comment.,"Decided we don't need to log anything about the token here. If the token is not valid then the client will get an error about that, so anything that can happen here is related to talking to the server in the ACL datacenter, so not specific to the token."
15775,Update upgrade-specific.html.markdown,
15776,Fix string concatenation in consul.tf,"Since Terraform 0.7 doesn't support the concat() function for string concatenation, a replacement for concat() needs to be used when joining strings."
15777,Adds tests for the ACL reconcile algorithm.,
15778,Activates fallback to replicated ACLs.,
15779,"Hides the acl_replication_token from JSON output, like in /v1/agent/self.",
15780,Adds basic ACL replication plumbing.,
15781,Update upgrading.html.markdown,"The change fixes a minor bug in the document that says consul supports back to version 0 when the example output says version 1, and makes the document less ambiguous by having a different ""current"" protocol and earliest supported protocol."
15782,"atomic write service state and checks files, fixes #1221",
15783,Add api environment variables as constants for consistency,
15784,Remove redundant hardcoded environment variables,The following hardcoded environment variables are removed:  CONSUL_RPC_ADDR CONSUL_HTTP_ADDR
15785,update ca tutorial to one more recent and relevant,
15786,Update CHANGELOG.md,
15787,Merge pull request #2233 from hashicorp/token-in-header,Use header to send Consul token rather than query param.
15788,Use header to send Consul token rather than query param.,
15789,Merge pull request #2229 from hashicorp/sethvargo/archdiag,Update arch diagram
15790,Update arch diagram,
15791,Merge pull request #2228 from burdandrei/patch-1,Added missing comma
15792,Added missing comma,
15793,Fixes #1775; Removes 'unknown' state,Signed-off-by: Abhinav Dahiya abhinavdtu2012@gmail.com
15794,Merge pull request #2225 from hashicorp/f-stats-note,Adds a cautionary note about the stats in the self API.
15795,Adds a cautionary note about the stats in the self API.,
15796,Merge pull request #2224 from hashicorp/jbs-faq-ports,Network ports
15797,Updated FAQ entry,
15798,Network ports., Added a table of protocols an ports used by Consul to FAQ.
15799,Puts tree back in dev mode.,
15800,Release v0.7.0-test2,
15801,Preps for an internal test build v0.7.0-test2.,
15802,Update CHANGELOG.md,
15803,Merge pull request #2211 from hashicorp/b-bolt-1.2.1,Updates Bolt DB to v1.2.1.
15804,Updates Bolt DB to v1.2.1.,This fixes #2203 which was a consistency problem on Windows.
15805,Merge pull request #2207 from grange74/leave-command-args-check,add extra check for unexpected args to leave command
15806,Merge pull request #2208 from hashicorp/pr-2205-slackpad,Adds api agent docs for EnableTagOverride.
15807,Tweaks the agent docs for EnableTagOverride.,
15808,add extra check for unexpected args to leave command,
15809,Update CHANGELOG.md,
15810,Added api agent docs enableTagOverride var,
15811,Merge pull request #2201 from jhmartin/patch-3,Escape verify_server_hostname angle-brackets
15812,Escape verify_server_hostname angle-brackets,
15813,Merge pull request #2199 from hashicorp/f-stats,Adds consul info data into /v1/agent/self endpoint.
15814,Adds consul info data into /v1/agent/self endpoint.,
15815,Merge pull request #2197 from maier/master,Documentation update
15816,Change circonus_broker_search_tag to circonus_broker_select_tag to match same change to command/agent/config.go,
15817,Merge pull request #2196 from hashicorp/b-print-version,Fixes startup version print to show the human version.
15818,Fixes startup version print to show the human version.,
15819,Merge pull request #2195 from hashicorp/b-fix-version,Adds version info back into the config.
15820,Adds version info back into the config.,"In #2191 I accedentally broke SCADA by not populating the agent's version information into the config structure. This adds it back, and makes the distinction between the raw parts we send to APIs and the human form of the version that we display."
15821,Update CHANGELOG.md,
15822,Merge pull request #2193 from hashicorp/pr-2188-slackpad,Adds Circonus support for telemetry metrics.
15823,Adds a vendoring cheat sheet.,
15824,Updates armon/go-metrics and adds Circonus vendored libraries.,
15825,Tweaks the docs a bit.,
15826,Removes top-level key support for Circonus configs.,"This was a feature to help migrate to the new telemetry sub-structure, but since this is all new we don't need it."
15827,Merge pull request #2192 from hashicorp/f-short-sha,Switches to the short form of the SHA for the build info.
15828,Switches to the short form of the SHA for the build info.,
15829,Simplifies the version formatter.,
15830,Update CHANGELOG.md,
15831,Merge pull request #2191 from hashicorp/f-version-tweak,Makes sure version is always displayed consistently.
15832,Makes sure version is always displayed consistently.,
15833,Merge pull request #2185 from richard-hulm/issue-1404,Add the version (from config) to the Starting Consul Agent printout
15834,Merge pull request #2190 from DynomiteDB/master,Unnest TaggedAddresses in Catalog Register endpoint
15835,Merge remote-tracking branch 'upstream/master',
15836,Unnest TaggedAddresses. Add sentence to mention that multiple Checks may,be specified as an array. Closes hashicorp/consul#2176
15837,RH: Add revision (if it exists),
15838,Documentation for Circonus Telemetry integration,
15839,"fix: typo coupled, default token app to ""consul"", switch submit_interval/SubmitInterval to submission_interval/SubmissionInterval",
15840,Add Circonus support for Telemetry metrics,
15841,Add the version (from config) to the Starting Consul Agent printout,
15842,Merge pull request #2183 from stusmall/master,Fixing minor punctuation mistake.
15843,Fixing minor punctuation mistake.,
15844,Merge branch 'master' into let-watches-be-stale,Attempt to let the tests pass
15845,Merge pull request #2182 from dcarbone/dcarbone-lib-addition,Adding my lib to list of downloads
15846,Adding my lib to list of downloads,
15847,Update CHANGELOG.md,
15848,Merge pull request #2178 from hashicorp/f-rpc-test,"Adds some supplemental tests for RPC ""no leader"" retries."
15849,"Adds some supplemental tests for RPC ""no leader"" retries.",This adds some extra tests for #2175.
15850,Merge pull request #2175 from hashicorp/f-hold-rpc,Gracefully handle short lived outages by holding RPC calls
15851,consul: change tests to not expect ErrNoLeader,
15852,consul: Refactor forward to hold RPC when no leader is known,
15853,consul: Add RPCHoldTimeout as tunable hold period,
15854,Merge pull request #2144 from janisz/add_marathon-consul,Added allegor/marathon-consul in community tools
15855,Merge pull request #2159 from myENA/website/consul-backinator,Add link to consul-backinator utility
15856,Merge pull request #1837 from cleung2010/obfuscate-acl-token,Obfuscate token for lookupACL error
15857,Merge pull request #1836 from shaneog/terraform-google,Add Terraform config for Google Cloud Platform
15858,Add Terraform config for Google Cloud Platform,Supports: - Ubuntu 14.04 LTS - RHEL 6 - RHEL 7 - CentOS 6 - CentOS 7
15859,Add RPC port to iptables config,From https://www.consul.io/docs/agent/options.html#ports
15860,Move scripts to a shared directory,
15861,Merge pull request #1847 from mssola/dc-to-datacenter,[proposal] command: deprecated the -dc flag in the agent CLI
15862,Merge pull request #1971 from iadknet/feature/terraform-centos7,terraform: added support for centos7 to aws
15863,Fix substring length on obfuscated token,
15864,Merge pull request #1863 from mssola/bash-completion,contrib: added bash completion
15865,Merge pull request #2160 from hashicorp/f-api-pq-template,Adds query templates to the api package
15866,api: add query templates,
15867,Alter instructions for adding tools to the list,
15868,Add link to consul-backinator utility,
15869,Merge pull request #2158 from sean9999/patch-1,small typo
15870,small typo,
15871,Merge pull request #2157 from hashicorp/f-near-api,Adds near param to API client
15872,api: add Near parameter to PQ's,
15873,Merge pull request #2156 from hashicorp/f-sort-local,Sort source node first if at position <= 10 in PQ's
15874,consul: sort source node first if at position <= 10 in PQ's,
15875,Update CHANGELOG.md,
15876,Merge pull request #2137 from hashicorp/f-pq-near,"Support ""near"" parameter in prepared query service block"
15877,website: add upgrading note for Near param in PQ's,
15878,consul: mention magic _agent token in struct comments,
15879,website: document near parameter of prepared queries,
15880,agent: parseSource still subs for _agent,
15881,agent: test that DNS passes the agent data through,
15882,consul: send agent source data as separate query source,
15883,"agent: always pass local agent query source, allow override",
15884,consul: use source parameter for near prepared queries,
15885,Merge pull request #2149 from hashicorp/slackpad-patch-1,Adds a note about prepared queries to the coordinates internals guide.
15886,Adds a note about prepared queries to the coordinates internals guide.,
15887,Update CHANGELOG.md,
15888,Update CHANGELOG.md,
15889,Added allegor/marathon-consul in community tools,With @dankraw we authored https://github.com/allegro/marathon-consul/ this is fork of https://github.com/CiscoCloud/marathon-consul that is no longer developed (see this comment https://github.com/CiscoCloud/marathon-consul/issues/17#issuecomment-161678453).
15890,agent: fix test,
15891,consul: send origin node + dc when executing prepared queries,
15892,consul: test baked-in distance sort,
15893,consul: use the Near field instead of PreferLocal,
15894,Merge pull request #2127 from hashicorp/b-remote-consuls-locking,Ensure locking of Server's remoteConsuls.
15895,Merge pull request #2131 from hashicorp/b-misc-microoptimizations,Misc micro optimizations
15896,Merge pull request #2130 from hashicorp/b-fix-rtt-deadlock,Fix deadlock in Consul RTT.
15897,Ensure locking of Server's remoteConsuls.,
15898,Merge pull request #2128 from hashicorp/b-stable-test-portnumbers,"Use stable, monotonically increasing port numbers for tests"
15899,Pack Port to be slightly more optimal in terms of struct memory usage.,
15900,Misc comment improvements,
15901,Initialize a non-empty number of Consul Datacenters. No functional change.,
15902,Prefer rand.Int31n() over rand.Int31().,
15903,Give log reviewers a hint as to which check is failing,
15904,Fix deadlock in Consul RTT.," consul/rtt.go:388: s.getDatacentersByDistance().  Acquires RLock() consul/rtt.go:341: sortDatacentersByDistance() RLock still held. consul/rtt.go:282: getDatacenterDistance() RLock still held. consul/rtt.go:268: getNodesForDatacenter(). Attempts to reacquire RLock(), hangs indefinitely."
15905,consul: test raw PreferLocal functionality,
15906,"Use stable, monotonically increasing port numbers for tests",
15907,agent: set origin during PQ execution,
15908,consul: support PreferLocal in PQ's,
15909,Merge pull request #2123 from hashicorp/f-key-metrics,Adds a key metrics section to the telemetry guide.
15910,Adds a key metrics section to the telemetry guide.,
15911,Adds a link to the changelog.,
15912,Add embedded-consul to download_tools page,
15913,Added an and,
15914,Merge pull request #2108 from sheldonkwok/patch-1,Update agent.html.markdown
15915,Update agent.html.markdown,The documentation was not clear and I had to try with the cli to figure it out.
15916,Adding more detail about best use case.,
15917,Update CHANGELOG.md,
15918,Merge pull request #2106 from hashicorp/f-update-radix,Updates go-immutable-radix to pull in caching fix.
15919,Updates go-immutable-radix to pull in caching fix.,
15920,Update CHANGELOG.md,
15921,Merge pull request #2105 from hashicorp/f-update-serf,Updates serf to get health score in stats.
15922,Updates serf to get health score in stats.,
15923,Update install.html.markdown OS X Instructions,"Homebrew is phasing out the use of the homebrew-cask add-on, moving it all over to just using brew install <app>. Also, if you type brew info consul you can see that you can even automatically install the web-ui through brew as well."
15924,Merge pull request #2097 from hashicorp/f-checkid-type,types package w/ CheckID
15925,Merge pull request #2101 from hashicorp/f-update-serf-memberlist,Updates to latest Serf/memberlist to get lifeguard and TCP joins over DNS.
15926,Updates to latest Serf/memberlist to get lifeguard and TCP joins over DNS.,
15927,Chase casting types.CheckID to a string into the state_store.,"It turns out the indexer can only use strings as arguments when creating a query.  Cast types.CheckID to a string before calling into memdb. Ideally the indexer would be smart enough to do this at compile-time, but I need to look into how to do this without reflection and the runtime package.  For the time being statically cast types.CheckID to a string at the call sites."
15928,"Revert ""Move structs.CheckID to a new top-level package, types.""",This reverts commit 2bbd52e3b44ff1b60939a8400264d534662d6d51.
15929,"Move structs.CheckID to a new top-level package, types.","Per discussion w/ @slackpad, move this type to its own top-level package"
15930,"Move structs.CheckID to a new top-level package, types.","Per discussion w/ @slackpad, move this type to its own top-level package"
15931,Float a type balloon. Some strings are square pegs in round holes.,This experiment was brought about because of variable naming confusion where name and checkIDs were interchanged.  Gave CheckID an Qualified Type Name and chased downstream changes.
15932,Merge pull request #2100 from hashicorp/f-update-web,Updates web assets to pull in RTT viz.
15933,Updates web assets to pull in RTT viz.,
15934,Merge pull request #2099 from hashicorp/f-update-serf,Pulls in latest Serf to get flap metric.
15935,Pulls in latest Serf to get flap metric.,
15936,Merge pull request #2098 from hashicorp/b-scada,Removes stale scada client and test sections that use (now) unexported fields.
15937,Removes stale scada client and test sections that use (now) unexported fields.,Fixes #2092.
15938,Merge pull request #2093 from hashicorp/b-certs,Re-ups the snake oil certs for the unit tests.
15939,Re-ups the snake oil certs for the unit tests.,Ref #979 for a link to the blog with the commands to use :-)
15940,Merge pull request #2091 from hashicorp/b-travis,Enables fallback git tag check to fix Travis.
15941,Enables fallback git tag check to fix Travis.,
15942,Merge pull request #2090 from evan2645/document-consul-lock-shell-execution,Document consul lock shell execution
15943,Document consul lock shell execution,"Consul lock executes children under a shell, which was previously undocumented. Document it, and warn against cases where this can cause children to leak when the lock is lost. I have made this a dedicated section so it can easily be removed later when we move to exec https://github.com/hashicorp/consul/issues/1692"
15944,Merge pull request #2088 from lihz1990/master,add tcp in service/register
15945,add tcp in service/register,I found consul /service/register interface supprt TCP check as well.
15946,Use upstream high-level SCADA provider,
15947,Merge pull request #2075 from mlbarrow/patch-1,Fix typo
15948,Fix typo,Simple typo fix.
15949,Fix the href target for the /v1/catalog/node/<node> endpoint.,
15950,Merge pull request #2072 from awiddersheim/patch-1,Fix typo
15951,Fix typo,
15952,Merge pull request #2071 from logikal/telemetry_address,docs: clarify address specification for telemetry
15953,docs: clarify address specification for telemetry,"Earlier on this page, under addresses, we say ""For TCP addresses, these should simply be an IP address without the port. For example: 10.0.0.1, not 10.0.0.1:8500."" Since we expect the port to be included for _address for telemetry, call it out specifically."
15954,Update CHANGELOG.md,
15955,Merge pull request #2058 from nathan7/master,Parse ACL tokens for the catalog register/deregister endpoints
15956,Merge pull request #2060 from saifabid/patch-1,Fix json for /v1/catalog/node in markdown
15957,Fix json for /v1/catalog/node in markdown,"add in a missing comma after the ""Address"" field"
15958,Merge pull request #2046 from ross/ui-tomography,Implementation of a per-node tomography graph
15959,Implement a first-pass of tomography node hover,Not at all using Emeber's facilities and no clue how to do so with this.
15960,Rework sampling to avoid 0 case and always include min and max,
15961,Merge pull request #2057 from hashicorp/sethvargo/training,Add note about paid training
15962,Sample tomography distances to cap number around 360,
15963,Switch tomography to median rather than avg,
15964,Parse ACL tokens for the catalog register/deregister endpoints,Fix #1738
15965,Add note about paid training,
15966,remove fixed height,
15967,Update CHANGELOG.md,
15968,Merge pull request #2028 from hashicorp/f-atomic-kv,Adds support for atomic transactions spanning multiple KV entries.
15969,Remove completely unused structs,
15970,Speling police,
15971,Merge pull request #2047 from hashicorp/b-raft-peers,Remove unused peers variable from setupRaft().
15972,Remove unused peers variable from setupRaft().,
15973,Handle no peers in tomography graph,
15974,Don't include self in tomography,
15975,Reduces the number of operations in a transaction to 64.,
15976,Implementation of a per-node tomography graph,"Adds a new section to the node information, Network Tomography. There's a radar plot of the distances (in ms) between the current node and its peers as well as min, avg, and max."
15977,Adds a get-tree verb to KV transaction operations.,
15978,Switches GETs to a filtering model for ACLs.,
15979,Adds some size limiting features to transactions to help prevent abuse.,
15980,"Removes null results for deletes, and preps for more than one result from an operation.",
15981,Adds a read-only optimized path for transactions.,
15982,Update README.md,Fixes #2041.
15983,Adds a comment for the txnKVS() function.,
15984,Hoists KV processing helper functions up as static functions.,
15985,Merge pull request #2040 from hashicorp/go-1.6.2,Upgrades to Go 1.6.2.
15986,Upgrades to Go 1.6.2.,
15987,allow automatically discovering aws ec2 consul servers,
15988,Adds documentation for the transaction endpoint.,
15989,Makes get fail a transaction if the key doesn't exist.,
15990,De-nests the KV output structure (removes DirEnt member).,
15991,"Switches to ""KV"" instead of ""KV"" for the KV operations.",
15992,Refactors TxnRequest/TxnResponse into a form that will allow non-KV ops.,"This isn't needed/used yet, but it's a good hook to get in there so we can add more atomic operations in the future. The Go API hides this detail so that feels like a KV-specific API. The implications on the REST API are pretty minimal."
15993,"Moves txn code into a new endpoint, not specific to KV.",
15994,Terminates pretty responses with a newline.,
15995,Fixes some go vet findings in a unit test.,
15996,Remove stray type definition,Noticed while working on Nomad Client's server selection code.
15997,Adds type for API ops and an example transaction.,
15998,Adds unit tests for HTTP endpoint.,
15999,Adds internal endpoint read ACL support and full unit tests.,
16000,Enable Stale mode for watchers,Solves https://github.com/hashicorp/consul/issues/917 by giving consul watch a -stale flag
16001,Adds an empty get test case.,
16002,Performs basic plumbing of KVS transactions through all the layers.,
16003,Merge pull request #2014 from hashicorp/f-secure-rand,Use a cryptographically secure seed
16004,Bump Go to 1.6.2 for Travis (just added),
16005,Merge pull request #2029 from hashicorp/f-test-coverage,Update testing output
16006,Don't build darwin/arm until we figure out what's going on with Travis,
16007,Revert to Go 1.6 to see if that fixes Travis,
16008,Bump Go back to 1.6.1 to see if this breaks darwin/arm again,
16009,Revert to Go 1.6 to see if that fixes Travis,
16010,Bump Go to 1.6.1,
16011,Include the test coverage report in the output,Inspired by: Nomad project
16012,Add tools/cmd/cover to GOTOOLS,
16013,golang.org/x/tools/cmd/vet is obsolete after Go1.5,go tool vet is builtin starting with Go 1.5
16014,Adds state store support for atomic KVS ops.,
16015,Merge pull request #2023 from hashicorp/f-current-version-checkpoint,Include the current version along side the available version.
16016,Include the current version along side the available version.,"When checkpoint emits a log message indicating an agent is out of date, include the current version along with the available version according to checkpoint. Inspired by: log output in #993"
16017,Splits existing KVS operations into *Txn helpers for later reuse.,
16018,Merge pull request #2021 from MansM/patch-2,Update install.sh
16019,Merge pull request #2020 from MansM/patch-1,Update install.sh
16020,Update install.sh,version bump
16021,Update install.sh,version bump
16022,Merge pull request #2018 from hashicorp/jt-ie,add height to fix svg in announcement bnr
16023,add height to fix svg in announcement bnr,
16024,Use a cryptographically secure seed,SeededSecurely is present if someone or something wants to query the way the library was seeded. Obtained from: nomad
16025,Moves KVS-related state store code out into its own set of files.,
16026,Merge pull request #2012 from hashicorp/sethvargo/elink,Track enhanced links
16027,Track enhanced links,
16028,Clarify need for recursors option.,Reiterating that the iptables option requires recursors to be set to resolve for any domain besides .consul
16029,Merge pull request #2003 from hashicorp/f-issue-template,Add a Github issue template
16030,DNS forwarding with iptables,Adding notes on using iptables to forward ports
16031,Revise issue template to include a hint to use a gist,
16032,Add a Github issue template,
16033,Merge pull request #2001 from hashicorp/f-consul-info-peers,Add the list of Raft peers to Consul's Stats
16034,Add the list of Raft peers to Consul's Stats,% consul info [snip] raft: [snip]     raft_peers = 127.0.0.1:8300 [snip] Poached from: Nomad Project
16035,Merge pull request #1996 from kjtanaka/update-demo,update vagrant demo
16036,Fixes and clarifies the only_passing docs.,
16037,update vagrant demo,
16038,Merge pull request #1989 from hashicorp/persist-errors,Fixes some bad error returns in the persist service and check paths.
16039,Fixes some bad error returns in the persist service and check paths.,
16040,Update CHANGELOG.md,
16041,Merge pull request #1762 from mshean/script-timeout,Add Timeout field to CheckMonitor
16042,Gets rid of obsolete go get command in the README.,
16043,Merge pull request #1979 from hashicorp/b-checkapi-update,Update Check API to use constants
16044,Clean up the test example in README,This works without an import cycle and has been go fmt'ified
16045,Correct a small typo,
16046,"consul/ uses structs.Health, the api uses api.Health",
16047,Update Check API to use constants,Use constants where appropriate to advocate their use.  Also add a deprecation notice re: updateTTL.
16048,Merge pull request #1973 from hashicorp/b-random-stagger,Guard against divide by zero in lib.RandomStagger()
16049,Guard against divide by zero in lib.RandomStagger(),"While I'm at it, add a DurationMinusBufferDomain() function to calculate the min/max for a given call to DurationMinusBuffer() in order to keep the implementation details self-contained."
16050,Add a helper function DurationMinusBuffer() to calculate an interval,"used to schedule a TTL check.  e.g. d := lib.DurationMinusBuffer(60 * time.Duration, 10 * time.Second, 16) will return a duration between 46.875s and 50s."
16051,Merge pull request #1972 from hashicorp/sethvargo/referrer,Do not allow referrer to modify the sender
16052,Do not allow referrer to modify the sender,http://mathiasbynens.github.io/rel-noopener/
16053,terraform: added support for centos7 to aws,
16054,Merge pull request #1970 from hashicorp/d-recommend-reap,Recommend against adjusting reap times
16055,Tweak discussion regarding reaping to advise against adjusting these,values.
16056,Fix broken markdown,
16057,Update CHANGELOG.md,
16058,Merge pull request #1935 from hashicorp/f-reap-time,Makes reap time configurable for LAN and WAN.
16059,Sets an anti-footgun floor for the configurable reap time.,
16060,Update documentation for CheckMonitor timeout,
16061,add Timeout field to CheckMonitor,
16062,Clarifies default behavior of blank service addresses.,
16063,Update CHANGELOG.md,
16064,Update CHANGELOG.md,
16065,Merge pull request #1954 from kaskavalci/master,Make testutil.TestServer work correctly on Windows.
16066,Make testutil.TestServer work correctly on Windows.,
16067,Merge pull request #1952 from hashicorp/b-http-buf,Apply a 4K limit to the output size for HTTP checks
16068,website: mention 4K output limit for checks,
16069,agent: limit HTTP check output to 4k,
16070,Merge pull request #1884 from mtchavez/1541-data-dir-perms,command: Data directory permission error message
16071,Merge pull request #1895 from shoenig/fixtypo,doc: fix trivial typo s/NewFSMPath/NewFSM/
16072,Update CHANGELOG.md,
16073,Merge pull request #1948 from hashicorp/f-go-1.6.1,Upgrades to Go 1.6.1.
16074,Upgrades to Go 1.6.1.,
16075,Update website metadata fixes,
16076,Merge pull request #1891 from romansky/patch-1,clerify RPC usage
16077,Merge pull request #1890 from talonx/master,Added help text for -dev option #1804 for zsh completion.
16078,Merge pull request #1942 from hashicorp/b-tag-sync,Makes a detached copy of the tags when doing the override.
16079,Makes a detached copy of the tags when doing the override.,
16080,Tweaks comment about side effects.,
16081,Updates some docs that say reaping is not configurable.,
16082,Makes reap time configurable for LAN and WAN.,
16083,Merge pull request #1934 from hashicorp/b-check-output,Syncs a check's output with the catalog when output rate limiting isn't in effect.
16084,Uses the HealthCheck Clone() method in local_test.go.,
16085,Adds a clone method to HealthCheck and uses that in local.go.,
16086,Syncs a check's output with the catalog when output rate limiting isn't in effect.,
16087,Merge pull request #1928 from msoedov/bind_addr,Set default bind address to 127.0.0.1 in development mode
16088,1878 Set default bind address to 127.0.0.1 in development mode,
16089,Merge pull request #1926 from hashicorp/phinze/website-mime-types,website: force JS/CSS mime-types on deploy
16090,website: force JS/CSS mime-types on deploy,Should fix occassional issues with application/octet-stream mime type assets breaking JS/CSS on site.
16091,Switch version back to dev,
16092,Merge pull request #1920 from hashicorp/f-remove-warning,Removes a bogus warning for Windows.
16093,Removes a bogus warning for Windows.,
16094,Release v0.7.0-test1,
16095,Preps tree for test build with server balancing changes.,
16096,Merge pull request #1915 from hashicorp/f-update-assets,Updates static assets to pull in #1702.
16097,Updates static assets to pull in #1702.,
16098,Clean up verifyUniqueListners,The first pass over this was a hackjob in the sense that it was not elegant.  Fixed. Pointed out by: subcionscious in the middle of the night
16099,Retry http server connecting in agent/http_test,
16100,Add description to rpc test client pool member failure message,
16101,Test agent RPC client connection retries,
16102,command: Data directory permission error message, Check for invalid data directory permissions Display appropriate permissions error message Add command test for bad data directory permissions
16103,Merge pull request #1910 from hashicorp/f-detect-dupe-addrs,Print a helpful message re: duplicate addresses
16104,Rely exclusively on error to signal failure,Pointed out by: slackpad
16105,Print a helpful message re: duplicate addresses,"IP sockets provide nice endpoints where the kernel will fail to bind and will error out saying socket already in use.  UNIX sockets, however, don't enjoy this nice property when cleaning up stale sockets on listen.  Given the number of addresses in Consul, provide operators with a helpful message that indicates the source of the reused address. Before this fix, it was possible for the HTTP socket to unlink the RPC socket, leading to confusing blocked behavior when running commands like consul info. % cat tmp.config.json {     ""addresses"": {     ""http"": ""unix:///tmp/.consul.sock"",     ""rpc"": ""unix:///tmp/.consul.sock""     },     ""unix_sockets"": {     ""mode"": ""0700""     } } % consul agent -config-file tmp.config.json -advertise=127.0.0.1 -data-dir=/tmp/ ==> All listening endpoints must be unique: HTTP address already configured for RPC Exit 1"
16106,Merge pull request #1909 from hashicorp/f-toggle-skip-leave-on-int-server,skip_leave_on_int's default changes based on agent mode
16107,Add a note re: pre-0.7 behavior,
16108,Add changelog entry for skip_leave_on_interrupt default behavior changing,
16109,skip_leave_on_int's default changes based on agent mode,skip_leave_on_int's behavior now changes based on whether or not the agent is acting as a client or server. Fixes: 1687
16110,Merge pull request #1908 from hashicorp/b-empty-node-name,B empty node name
16111,Merge branch 'master' of ssh://github.com/hashicorp/consul into b-empty-node-name,
16112,Guard against a node name containing pure whitespace for real,
16113,Merge pull request #1907 from hashicorp/b-empty-node-name,Node names are not allowed to be empty
16114,Guard against a node name containing pure whitespace,
16115,Node names are not allowed to be empty,
16116,Add a changelog entry for #1712,
16117,Merge pull request #1898 from hashicorp/b-dns-single-record,Fix DNS tests
16118,"Change tests to accept an ""at least this many"" answers semantic",The size of answers vary based on the target platform.  Accomodate this variance.
16119,Add lib.AbsInt() helper function,
16120,Fix tests,"I'm not sure how I thought this passed last night, it was obviously wrong."
16121,fix correct RPC entity,
16122,Merge pull request #1712 from hashicorp/b-dns-single-record,Expose a tunable to adjust the number of DNS records in an answer (useful for defeating RFC3484 §6 Rule 9).
16123,Editorialize the comment re: UDPAnswerLimit,Prodded by: slackpad & fusiondog
16124,Use table-driven test for response limits,Much more exhaustive testing and shows where the limits are of the 512B limitation (quering by ID is less space efficient than querying by just a prepared query or service).
16125,Reword udp_answer_limit for the better.,
16126,Remove duplicate paste-o,Pointed out by: slackpad
16127,Test services and PQT limits,
16128,Improve the use of constants across DNS tests,
16129,Use industry jargon re: DNS round-robin,s/randomized DNS round-robin/round-robin DNS/
16130,Use a non-default config value,
16131,Test missing config inputs,Alpha sort where appropriate to make it easier to keep in sync in the future.
16132,Correctly detect that an answer has been truncated,
16133,Move lib's tests to lib_test,This suite of tests is only testing the exported functions
16134,Remove dead and incorrect code,This functionality is handled further upstream in trimUDPAnswers()
16135,"Whitespace, indent markdown correctly",
16136,Trim UDP responses per configuration,
16137,Merge branch 'b-dns-single-record' of ssh://github.com/hashicorp/consul into b-dns-single-record,Conflicts: command/agent/dns.go
16138,Allow adjusting the number of DNS records in a response...,"Based on work done by @fusiondog in #1583, extend the concept to use an integer instead of a boolean. Fixes: #1583 && #1481"
16139,Adding singleton option to DNS for getaddrinfo bug.,
16140,doc: fix trivial typo s/NewFSMPath/NewFSM/,
16141,Merge pull request #1894 from hashicorp/f-rename-server-manager,F rename server manager
16142,Rename server_details package to agent,
16143,Add a quick package doc for the servers package,
16144,Rename serverConfig to serverList,serverList is a vastly more accurate name.  Chase accordingly.  No functional change other than types and APIs.
16145,Gratuitous rename 1/2,"Reduce cognative load and perform an overdue rename.  No functional change. Rename the server_manager package to servers.  Rename the ServerManager package to Manager.  In client, rename serverMgr to servers."
16146,Merge pull request #1880 from hashicorp/f-pretest-server,Pre-connect new rebalanced server
16147,Remove two unused constants,
16148,Remove useless comment residual from decomposing functions,
16149,EDYSLEXICMOMENT,
16150,clerify RPC usage,
16151,Get latest updates,
16152,Refactor out recocileServerList anon function,Add testing to reconcileServerList and test various server sizes. Test that a percentage of nodes fail their Ping (50% in testing atm)
16153,Teach fauxConnPool to fail a pct of the time,50% failure rate seems legit as a starting point w/ 100 servers.
16154,Call NotifyFailedServers to rotate the server list,
16155,Add log line re: server manager backing off and sleeping,This is useful in situations where the RPC rotate duration is greater than 1µs.  WTB exponential backoff of logging so we don't spam forever.
16156,Remove old debugging lines of questionable future value,
16157,Shuffle in place,"Don't create a copy and save the copy, not necessary any more."
16158,Nuke unnecessary comment,See above function comments for details
16159,Move FIXME comment to the right call site,
16160,Rename the ConnPoolPinger interface to Pinger,
16161,Return error from PingConsulServer,"In order to report why a Ping failed, change the signature of PingConsulServers to include an error message."
16162,Change the definition of the ServerDetails struct key,Use only the serf Name for now.  Leaving the plumbing for now.
16163,Correct the comment to match reality,
16164,Rename serverCfg to sc for consistency,
16165,Add a quick length check,Verify that AddServer behaved as expected
16166,Switch the order of ServerDetails.String(),It's more natrual to have the network first.  I think I flipped the order accidentally.
16167,Added help text for -dev option #1804 for zsh completion.,
16168,Added help text for -dev option #1804 for zsh completion.,
16169,Move rebalance log statement from INFO to DEBUG,
16170,Chase the API bump re: refreshServerRebalanceTimer,"If it works in prod, why shouldn't it work in the tests?"
16171,Move initialization of the rebalanceTimer to New(),
16172,Add a test for ConnPool.PingConsulServer,"Spin up 5x servers, join and ping each server"
16173,Expose ServerManager.ResetRebalanceTimer,Move the rebalance timer from ServerManager.Start's stack to struct ServerManager.  This makes it possible to shuffle during tests without actually waiting >120s.
16174,Logging improvements,Comment out noisly loggers for the time being. Improve the final logging statement to be useful and hint what the next active server for the client is going to be.
16175,Standardize the log message based on the package,This log statement used to belong in the consul package but has since moved to the server manager package.
16176,Reduce the error level from Fatal when unit testing,
16177,Start server rebalance task after init'ing Serf,"Now that there is no longer an event loop driven directly by Serf, start the ServerManager task after Serf has been setup.  When testing and adjusting timers and timeouts to unreasonably low values, it's possible to tickle a race condition where Serf's NumNodes() would fail because Serf had not been initialized."
16178,Catch up to a few renames,
16179,Use empty string for addr in ServerDetails.String(),
16180,Guard against a nil ServerDetails.Addr,"It's not clear how or why this would ever be nil, but some of the unit tests produce a nil addr.  Be defensive."
16181,Proactively ping server before rotation,"Before shuffling the server list, proactively ping the next server in the list to establish the connection and verify the remote endpoint is healthy."
16182,Factor out the shuffle server,
16183,Revise comments re: cycleServer,Improve the comments to discuss what happens presently.  Add a note to consider possibly calling to TestConsulServer proactively.
16184,Comment why the interface is needed: cyclic import,
16185,Add a struct key type for server_details,
16186,Merge pull request #1873 from hashicorp/f-rebalance-worker-0.7,Periodically rebalance the servers that agents talk to
16187,Add additional checks,
16188,Delete the right tag,"""role"" != ""consul"""
16189,"Don't pass in sm, server manager is already in scope",Go closures are implicitly capturing lambdas.
16190,Trim residual complexity from server join notifications,"Now that serf node join events are decoupled from rebalancing activities completely, remove the complixity of draining the channel and ensuring only one go routine was rebalancing the server list. Now that we're no longer initializing a notification channel, we can remove the config load/save from Start()"
16191,Only log in FindServers,"In FindServer this is a useful warning hinting why its call failed. RPC returns error and leaves it to the higher level caller to do whatever it wants. As an operator, I'd have the detail necessary to know why the RPC call(s) failed."
16192,Initialize the rebalancce to clientRPCMinReuseDuration,"In an earlier version there was a channel to notify when a new server was added, however this has long since been removed.  Just default to the sane value of 2min before the first rebalance calc takes place. Pointed out by: slackpad"
16193,Guard against very small or negative rates,Pointed out by: slackpad
16194,Use range vs for,Returning a new array vs mutating an array in place so we can use range now.
16195,Comment updates,
16196,Only rotate server list with more than one server,Fantastic observation by slackpad.  This was left over from when there was a boolean for health in the server struct (vs current strategy where we use server position in the list and rely on serf to cleanup the stale members). Pointed out by: slackpad
16197,Relocate saveServerConfig next to getServerConfig,Requested by: slackpad
16198,Clarify that ConsulClusterInfo is an interface over serf,An interface was used to break a cyclic import dependency.
16199,Reword comment after moving code into new packages,
16200,Change initialReblaanaceTimeout to a time.Duration,Pointed out by: @slackpad
16201,Negative check: test an invalid condition,
16202,Test to make sure bootstrap is missing,
16203,Be more Go idiomatic w/ variable names: s/valid/ok/g,"Cargo culting is bad, m'kay? Pointy Hat: sean-"
16204,Fix stale comment,Pointed out by: @slackpad
16205,Add a comment for Client serverMgr,
16206,Merge pull request #1876 from hashicorp/f-tls-helper,Adds TLS config helper to API client.
16207,Improves the comment for the Address field.,
16208,Merge pull request #1877 from hashicorp/api-constants,Added some constants in the api for check health statuses
16209,Added some constants in the api for check health statuses,
16210,Adds TLS config helper to API client.,
16211,Add CHANGELOG entry re: agent rebalancing,
16212,Correct a bogus goimport rewrite for tests,
16213,Test ServerManager.refreshServerRebalanceTimer,Change the signature so it returns a value so that this can be tested externally with mock data.  See the sample table in TestServerManagerInternal_refreshServerRebalanceTimer() for the rate at which it will back off.  This function is mostly used to not cripple large clusters in the event of a partition.
16214,Add a handful more unit tests to the public interface,
16215,Rename GetNumServers to NumServers(),Matches the style of the rest of the repo
16216,Rename NewServerManger to just New,Follow go style recommendations now that this has been refactored out of the consul package and doesn't need the qualifier in the name.
16217,Rename FindHealthyServer() to FindServer(),"There is no guarantee the server coming back is healthy.  It's apt to be healthy by virtue of its place in the server list, but it's not guaranteed."
16218,"cycleServer is a pure function, save the result",
16219,Missed unit test cruft,
16220,Update comments to reflect reality,
16221,Remove additional cruft from ServerManager's channels,No longer needed code.
16222,Emulate a TryLock using atomic.CompareAndSwap,Prevent possible queueing behind serverConfigLock in the event that a server fails on a busy host.
16223,Make use of interfaces,Use an interface instead of serf.Serf as arg to NewServerManager.  Bonus points for improved testability. Pointed out by: @slackpad
16224,Simplify error handling,"Rely on Serf for liveliness.  In the event of a failure, simply cycle the server to the end of the list.  If the server is unhealthy, Serf will reap the dead server. Additional simplifications: ) Only rebalance servers based on timers, not when a new server is readded to the cluster. ) Back out the failure count in server_details.ServerDetails"
16225,Unbreak client tests by reverting to original test,Debugging code crept into the actual test and hung out for much longer than it should have.
16226,Introduce asynchronous management of consul server lists,"Instead of blocking the RPC call path and performing a potentially expensive calculation (including a call to c.LANMembers()), introduce a channel to request a rebalance.  Some events don't force a reshuffle, instead the extend the duration of the current rebalance window because the environment thrashed enough to redistribute a client's load."
16227,Comment nits,
16228,Update Serf to include serf.NumNodes(),
16229,Use saveServerConfig vs atomic.Value.Store(config),
16230,Commit a handful of refactoring && copy/paste-o fixes,
16231,"Mutate copies of serverCfg.servers, not original",Removing any ambiguity re: ownership of the mutated server lists is a win for maintenance and debugging.
16232,rebalanceTimer may be nil during initialization,"When first starting the server manager, it's possible that the rebalanceTimer in serverConfig will be nil, test accordingly."
16233,Properly retain a pointer to the rebalanceTimer,
16234,Cosmetic and various other wordsmithing cleanups,
16235,Document the various functions and their locking,
16236,Use config convenience method to get config,'cause ELETTHECOMPILERSDOTHEWORK.  I don't need that cluttering up the subconscious with more complexity.
16237,Move consul.serverConfig out of the consul package,"Relocated to its own package, server_manager.  This now greatly simplifies the RPC() call path and appropriately hides the locking behind the package boundary.  More work is needed to be done here"
16238,Rename serverConfigMtx to serverConfigLock,Pointed out by: @slackpad
16239,Refactor out the management of Consul servers,"Move the management of c.consulServers (fka c.consuls) into consul/server_manager.go. This commit brings in a background task that proactively manages the server list and: ) reshuffles the list ) manages the timer out of the RPC() path *) uses atomics to detect a server has failed This is a WIP, more work in testing needs to be completed."
16240,Move consul.serverConfig out of the consul package,"Relocated to its own package, server_manager.  This now greatly simplifies the RPC() call path and appropriately hides the locking behind the package boundary.  More work is needed to be done here"
16241,Rename serverConfigMtx to serverConfigLock,Pointed out by: @slackpad
16242,Refactor out the management of Consul servers,"Move the management of c.consulServers (fka c.consuls) into consul/server_manager.go. This commit brings in a background task that proactively manages the server list and: ) reshuffles the list ) manages the timer out of the RPC() path *) uses atomics to detect a server has failed This is a WIP, more work in testing needs to be completed."
16243,Move consul.serverConfig out of the consul package,"Relocated to its own package, server_manager.  This now greatly simplifies the RPC() call path and appropriately hides the locking behind the package boundary.  More work is needed to be done here"
16244,Rename serverConfigMtx to serverConfigLock,Pointed out by: @slackpad
16245,Refactor out the management of Consul servers,"Move the management of c.consulServers (fka c.consuls) into consul/server_manager.go. This commit brings in a background task that proactively manages the server list and: ) reshuffles the list ) manages the timer out of the RPC() path *) uses atomics to detect a server has failed This is a WIP, more work in testing needs to be completed."
16246,Commit miss re: consuls variable rename,
16247,Move consul.serverConfig out of the consul package,"Relocated to its own package, server_manager.  This now greatly simplifies the RPC() call path and appropriately hides the locking behind the package boundary.  More work is needed to be done here"
16248,Refactor consul.serverParts into server_details.ServerDetails,"This may be short-lived, but it also seems like this is going to lead us down a path where ServerDetails is going to evolve into a more powerful package that will encapsulate more behavior behind a coherent API."
16249,Rename serverConfigMtx to serverConfigLock,Pointed out by: @slackpad
16250,Handle the case where there are no healthy servers,Pointed out by: @slackpad
16251,Refactor out the management of Consul servers,"Move the management of c.consulServers (fka c.consuls) into consul/server_manager.go. This commit brings in a background task that proactively manages the server list and: ) reshuffles the list ) manages the timer out of the RPC() path *) uses atomics to detect a server has failed This is a WIP, more work in testing needs to be completed."
16252,Add a flag to denote that a server is disabled,"A server is not normally disabled, but in the event of an RPC error, we want to mark a server as down to allow for fast failover to a different server.  This value must be an int in order to support atomic operations. Additionally, this is the preliminary work required to bring up a server in a disabled state.  RPC health checks in the future could mark the server as alive, thereby creating an organic ""slow start"" feature for Consul."
16253,Rename lastServer to preferredServer,Expanding the domain of lastServer beyond RPC() changes the meaning of this variable.  Rename accordingly to match the intent coming in a subsequent commit: a background thread will be in charge of rotating preferredServer.
16254,Introduce GOTEST_FLAGS to conditionally add -v to go test,Trivial change that makes it possible for developers to set an environment variable and change the output of go test to be detailed (i.e. GOTEST_FLAGS=-v).
16255,Warn if serf events have queued up past 80% of the limit,"It is theoretically possible that the number of queued serf events can back up.  If this happens, emit a warning message if there are more than 200 events in queue. Most notably, this can happen if c.consulServerLock is held for an ""extended period of time"".  The probability of anyone ever seeing this log message is hopefully low to nonexistent, but if it happens, the warning message indicating a large number of serf events fired while a lock was held is likely to be helpful (vs serf mysteriously blocking when attempting to add an event to a channel)."
16256,Commit miss re: consuls variable rename,
16257,Remove lastRPCTime,This mechanism isn't going to provide much value in the future.  Preemptively reduce the complexity of future work.
16258,Rename c.consuls to c.consulServers,Prep for breaking out maintenance of consuls into a new goroutine.
16259,Fix whitespace alignment in a comment,
16260,Use rand.Int31n() to get power of two optimization,"In cases where i+1 is a power of two, skip one modulo operation."
16261,Fixes JSON in wildcard query example.,
16262,Merge pull request #1865 from hashicorp/f-upgrade-boltdb,Updates BoltDB to v1.2.0 release.
16263,Updates BoltDB to v1.2.0 release.,
16264,contrib: added bash completion,Signed-off-by: Miquel Sabaté Solà msabate@suse.com
16265,Merge pull request #1861 from hashicorp/b-flaky-test,Widens coordinate update sleeps in unit tests.
16266,Widens coordinate update sleeps in unit tests.,
16267,Merge pull request #1854 from talonx/master,Added help text for -dev option #1804
16268,Merge pull request #1860 from hashicorp/b-flaky-sort,Gets rid of flaky sort check.
16269,Gets rid of flaky sort check.,"If we get a coordinate then this test will fail, so we only check the first item in the list, which is deterministic."
16270,Merge pull request #1859 from hashicorp/b-flaky-coord-tests,Increases timeouts for coordinate tests.
16271,Increases timeouts for coordinate tests.,"We take the interval and add the random stagger to it, so 2X is cutting it too close and the unit tests are often flaky."
16272,Merge pull request #1839 from foxel/patch-1,Clarification for advertise_addrs.rpc
16273,Update the docs slightly re: only_passing,Signed-off by: @slackpad
16274,Added help text for -dev option #1804,
16275,Merge pull request #1852 from Sayalic0/patch-1,add inline code segment to enableTagOverride
16276,add inline code segment to enableTagOverride,
16277,Merge pull request #1851 from hashicorp/f-ipv6-bind,Allow [::] as a bind address (binds to first public IPv6 address)
16278,Adds more specific checks for ipv6 addresses.,
16279,Merge pull request #1846 from TeaBough/master,Define a TestingT interface in server.go
16280,Merge pull request #1702 from far-blue/ui-configurable-api-url,Configurable consul host address
16281,Merge pull request #1848 from mssola/unconvert,Used 'unconvert' to remove unneeded conversions
16282,Merge pull request #1849 from hashicorp/f-leader-stats,Add leader address to consul stats
16283,Removes leader from members and changes name since it's an address.,
16284,735 add information about leader to consul members,
16285,Allow [::] as a bind address (binds to first public IPv6 address),
16286,Used 'unconvert' to remove unneeded conversions,I've removed unneeded conversions by performing the following commands: $ go get -u github.com/mdempsky/unconvert $ go list ./... | grep -v vendor | xargs unconvert -apply  Signed-off-by: Miquel Sabaté Solà msabate@suse.com
16287,command: deprecated the -dc flag in the agent CLI,"The -dc flag from the agent CLI command has been deprecated in favor of -datacenter. This is done this way because:  Other CLI commands used -datacenter. See: event, exec and watch. The agent configuration file uses datacenter.  Signed-off-by: Miquel Sabaté Solà msabate@suse.com"
16288,Define a TestingT interface in server.go,
16289,Fixes a few bugs in the prepared query doc.,
16290,Merge pull request #1844 from hashicorp/b-go-linker-flag,Go's -X linker flag now requires only one argument
16291,Go's -X linker flag now requires only one argument,
16292,Adds a note about template query ACLs.,
16293,Puts tree into ready state for 0.7.0 work (again).,
16294,Updates website to version 0.6.4.,
16295,Release v0.6.4,
16296,Preps for 0.6.4 release.,
16297,Clarification for advertise_addrs.rpc,Clarification for advertise_addrs.rpc as it sets the server RPC port (default 8300)
16298,Obfuscate token for lookupACL error,
16299,Merge pull request #1814 from tylert/env-shebangs,Use more portable shebangs for bash scripts
16300,Fix shebangs in new scripts after rebasing,
16301,Use more portable shebangs for bash scripts,
16302,Merge pull request #1803 from tylert/doc-enc-update,Update agent encryption doc example
16303,Update CHANGELOG.md,
16304,Update CHANGELOG.md,
16305,Release v0.6.4-rc3,
16306,Update CHANGELOG.md,
16307,Update CHANGELOG.md,
16308,Merge pull request #1825 from hashicorp/f-pool-sense,Switches default for API client to pooled connections.
16309,Preps for a 0.6.4 release out of master.,
16310,Update CHANGELOG.md,
16311,Update CHANGELOG.md,
16312,Switches default for API client to pooled connections.,
16313,Fixes the link in the change log.,
16314,Merge pull request #1823 from burdiyan/patch-1,Update Consul Tools links
16315,Update Consul Tools links,Docker Consul and Registrator projects were moved to another repositories.
16316,Merge pull request #1629 from moofish32/update_terraform_rhel7,Add support for RHEL7/Systemd in Terraform example
16317,Update quick start AWS Terraform,"This change started out as a quick update to RHEL 7 support (aka systemd), in the process I realized most of the other platforms could use an update. While trying to cleanup there I discovered I was repeating of bunch of information that might be better maintained in one place - as a result:  * consolidated server.sh and install.sh  * removed upstart-join.conf in a favor of join flag in the consul start  * removed platform specific folders and increased complexity of install.sh to    include handling the differences  * updated and extracted consul version  * added a consistent ip_table.sh file to open ports on firewalls  * updating consul service management configurations to enable proper restarting behavior for each platform  * the configuration naming convention is _file_name  * added platform to the security group name so you can easily launch multpile platforms at once  * fixes #1304"
16318,Merge pull request #1820 from hashicorp/f-port-docs,Adds a reference to the network ports from the security guide.
16319,Adds a reference to the network ports from the security page.,
16320,Merge pull request #1819 from hashicorp/f-check-accept,Adds default set of accept headers for HTTP checks.
16321,Adds default set of accept headers for HTTP checks.,
16322,Merge pull request #1818 from hashicorp/f-health-doc,Adds a reference to the health endpoint in the intro.
16323,Adds a reference to the health endpoint in the intro.,Fixes #1739.
16324,Updates the change log.,
16325,Merge pull request #1817 from hashicorp/b-docker-client,Updates Docker client to fix issue with .10 Docker engine.
16326,Merge pull request #1816 from idubinskiy/master,Fix doc typo
16327,Fix doc typo,
16328,Updates Docker client to fix issue with .10 Docker engine.,
16329,Updates the change log.,
16330,Update agent encryption doc example,
16331,Merge pull request #1813 from hashicorp/f-dns-trim,Makes sure UDP DNS responses aren't larger than allowed.
16332,Tweaks algorithm so it's safe with an empty list and adds a PQ test.,
16333,Merge pull request #1810 from hashicorp/jt-enterprise-bnr-fix,Enerprise bnr caused header to display incorrectly on subpages
16334,refactor to encapsulate all side affects of displaying announcement bnr in one file,
16335,fix header on subpages when displaying annoucement bnr,
16336,Merge pull request #1809 from hashicorp/slackpad-patch-1,Adds a note that Go 1.6+ is required.
16337,Adds a note that Go 1.6+ is required.,
16338,Make sure UDP DNS responses aren't larger than allowed,
16339,Updates to latest compiled ui assets.,
16340,Updates the change log.,
16341,Merge pull request #1764 from hashicorp/f-query-templates,Adds support for prepared query templates.
16342,Hardens the match interoplator against negative arguments.,
16343,Adds a comment about the embedded struct.,
16344,Fixes broken example JSON.,
16345,"Renames ""debug"" endpoint and structures to ""explain"".",
16346,Adds a prepared query debug endpoint.,
16347,Applies prefix ACL to a catch-all template as a special case.,
16348,Adds basic docs for prepared query templates.,
16349,Adds a test for the custom prepared query template indexer.,
16350,Adds core query template tests to the state store.,
16351,Adds in basic query template lookups and vendors newly-updated memdb as well as improved iradix tree.,
16352,Adds tests for the low-level template functions.,
16353,Adds tests for the string visitor.,
16354,Factors rendering down into the resolve function.,
16355,Updates vendored dependencies.,"This removes some unused dependencies that I know we plan to re-add later, but this makes for a clean godep save for now."
16356,Splits walk functions out from the rest of the template code.,
16357,Integrates templates into state store and endpoint (sans tests).,
16358,Wraps the prepared query to also store the compiled template.,
16359,Adds basic query template compiler and renderer.,
16360,Merge pull request #1802 from hashicorp/b-ping-leak,Updates memberlist to get goroutine leak fix for TCP pings.
16361,Updates memberlist to get goroutine leak fix for TCP pings.,
16362,Merge pull request #1801 from hashicorp/docs-fix,Minor docs fix
16363,minor docs fix,
16364,Merge pull request #1789 from hashicorp/jt-enterprise-bnr,add announcement banner for Consul Enterprise
16365,Preps master for 0.7 development.,
16366,Preps for the 0.6.4 release.,
16367,Catches up the change log.,
16368,Fixes name of new query ACL.,
16369,Merge pull request #1794 from hashicorp/f-check-api,Adds support for new PUT API for checks.
16370,Merge pull request #1793 from cleung2010/rrt-error-msg,Correct the rtt -wan error message
16371,Adds support for new PUT API for checks.,
16372,Correct the rtt -wan error message,
16373,fix UTMs,
16374,update copyedit to add the word build,
16375,add announcement banner for Consul Enterprise launch,
16376,Merge pull request #1786 from moofish32/consol_node_schema_fix,Session Table index require Node
16377,"one line schema change to not allow missing for sessions Table node index, Fixes #1774",
16378,Merge pull request #1785 from hashicorp/f-check-put-api,Adds a PUT-based API for TTL checks and retains output on timeouts.
16379,Tweaks formatting of inline output messages.,
16380,Retains the last output when a TTL check times out.,
16381,Adds a new PUT-based TTL check update endpoint.,
16382,Merge pull request #1777 from hashicorp/b-port-docfix,TLS example and correcting error
16383,Tweaks the address and advertise docs.,
16384,Merge pull request #1766 from hashicorp/b-redact-in-get,Adds missing token redact in the GET path.
16385,Adds missing token redact in the GET path.,
16386,Merge pull request #1759 from hashicorp/f-prep-version,Preps for 0.6.4 release before 0.7.0.
16387,Preps for 0.6.4 release before 0.7.0.,
16388,Merge pull request #1758 from matschaffer/patch-1,Metric name typo
16389,Metric name typo,
16390,Merge pull request #1757 from hashicorp/f-revert-1667,Reverts server connection rebalancing changes from #1667
16391,Merge pull request #1748 from hashicorp/f-client-pq-acls,"Creates new ""prepared-query"" ACL type and new token capture behavior."
16392,Cleans up the documents.,
16393,Adds a check for users re-submitting the redacted token.,
16394,"Renames ""prepared_query"" ACL policy to ""query"".",
16395,"Changes to more idiomatic ""ok"" pattern for prefix getter.",
16396,Renames a unit test.,
16397,Reverts the change log for GH-1667.,
16398,"Revert ""Merge pull request #1667 from hashicorp/b-redistribute-clients""","This reverts commit 8f30dea4209491ebbe4ef9ab94dd8052d17bdbe9, reversing changes made to eb27a02956e7e052c0bec6f96a0c0f7f6675f6a6."
16399,Fixes a typo in the change log.,
16400,Adds an upgrade note about the new ACL behavior.,
16401,Completes switch of prepared_query ACLs to govern query names.,
16402,Refactors docs into a more complete state for prepared query ACLs.,
16403,"Creates new ""prepared-query"" ACL type and new token capture behavior.","Prior to this change, prepared queries had the following behavior for ACLs, which will need to change to support templates:   A management token, or a token with read access to the service being    queried needed to be provided in order to create a prepared query.   The token used to create the prepared query was stored with the query    in the state store and used to execute the query.   A management token, or the token used to create the query needed to be    supplied to perform and CRUD operations on an existing prepared query.   This was pretty subtle and complicated behavior, and won't work for templates since the service name is computed at execution time. To solve this, we introduce a new ""prepared-query"" ACL type, where the prefix applies to the query name for static prepared query types and to the prefix for template prepared query types. With this change, the new behavior is:   A management token, or a token with ""prepared-query"" write access to    the query name or (soon) the given template prefix is required to do    any CRUD operations on a prepared query, or to list prepared queries    (the list is filtered by this ACL).   You will no longer need a management token to list prepared queries,    but you will only be able to see prepared queries that you have access    to (you get an empty list instead of permission denied).   When listing or getting a query, because it was easy to capture    management tokens given the past behavior, this will always blank out    the ""Token"" field (replacing the contents as ) for all tokens    unless a management token is supplied. Going forward, we should    discourage people from binding tokens for execution unless strictly    necessary.   No token will be captured by default when a prepared query is created.    If the user wishes to supply an execution token then can pass it in via    the ""Token"" field in the prepared query definition. Otherwise, this    field will default to empty.   At execution time, we will use the captured token if it exists with the    prepared query definition, otherwise we will use the token that's passed    in with the request, just like we do for other RPCs (or you can use the    agent's configured token for DNS).   Prepared queries with no name (accessible only by ID) will not require    ACLs to create or modify (execution time will depend on the service ACL    configuration). Our argument here is that these are designed to be    ephemeral and the IDs are as good as an ACL. Management tokens will be    able to list all of these.   These changes enable templates, but also enable delegation of authority to manage the prepared query namespace."
16404,Update documentation - add Network Ports.,Update security.html.markdown add section on Network Port usage. TODO: add Atlas port usage.
16405,add accept header / for agent check,
16406,Merge pull request #1741 from benhinchley/master,Add asia pacific region to list in terraform module
16407,Merge pull request #1 from benhinchley/benhinchley-patch-1,add asia pacific region to list for ubuntu
16408,add asia pacific region to list for ubuntu,using these images ap-northeast-1 => ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150528 ap-southeast-1 => ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150528 ap-southeast-2 => ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150528
16409,Merge pull request #1740 from hashicorp/f-1.6-only-ci,Takes away Go tip build which is failing for odd reasons.
16410,Takes away Go tip build which is failing for odd reasons.,This should cut down on build noise. When we get further with 1.6 we can reintroduce the tip build to help spot issues with the next version of Go.
16411,Merge pull request #1736 from hashicorp/f-makefile-cleanup,Refactors dist into a Docker-based build with extra safety checks.
16412,Sets CGO_ENABLED to 0 in the Dockerfile.,
16413,Moves release build into Docker container and adds web asset check at dist time.,
16414,Tweaks some of the default makefile targets.,
16415,Removes from cruft from the makefile.,
16416,Merge pull request #1735 from hashicorp/f-go-1.6,Starts switch to Go 1.6.
16417,Starts switch to Go 1.6.,
16418,Merge pull request #1726 from hashicorp/f-tag-override-api,Adds support for EnableTagOverride to the API client.
16419,Merge pull request #1732 from hashicorp/pr/1716,Don't run go vet on vendor/
16420,Makes vet check more sure fire now that it's xargs-ed.,
16421,Adds a note about the new go-cleanhttp behavior to the change log.,
16422,Merge pull request #1731 from hashicorp/update-cleanhttp,Update go-cleanhttp
16423,Update go-cleanhttp,
16424,Merge pull request #1729 from xenji/add-new-eu-amis,Add ubuntu AMIs for eu-west-1 and eu-central-1 to the map.
16425,Add eu-west-1 and eu-central-1 to the map.,Used image: ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150325
16426,TLS example and correcting error,"The example configuration file omits TLS support in the HTTP API. This is fine, but a second example demonstrating how to enable TLS over the HTTP API is harmless and, in fact, should be default practice. Using the format ip:port in the ""addresses"" block will cause Consul to crash on reload/start. See issue (#1727)[https://github.com/hashicorp/consul/issues/1727#issuecomment-184980751]"
16427,Merge pull request #1703 from alistanis/fix-issue-#1661,fixes issue #1661 and adds supporting test
16428,Adds support for EnableTagOverride to the API client.,
16429,Merge pull request #1717 from kim-toms/patch-1,Update leader-election.html.markdown
16430,Update leader-election.html.markdown,Remove duplicate 'leader'
16431,Don't run go vet on vendor/,
16432,Merge pull request #1715 from hashicorp/b-travis,Removes the obsolete deps target from Travis.
16433,Removes the obsolete deps target from Travis.,
16434,Merge pull request #1714 from hashicorp/e-godeps,Manage dependencies via Godep
16435,"Remove deps folder, no longer needed",
16436,Add a tools target that fetches various build-time tools,
16437,Manage dependencies via Godep,Embrace the future and use Go 1.6's vendor support via Godep. Go 1.5 users should export GO15VENDOREXPERIMENT=1
16438,Merge pull request #1713 from hashicorp/b-internal-ui-redirect,Fixes redirect from / to /ui when internal UI is enabled.
16439,Fixes redirect from / to /ui when internal UI is enabled.,
16440,Allow adjusting the number of DNS records in a response...,"Based on work done by @fusiondog in #1583, extend the concept to use an integer instead of a boolean. Fixes: #1583 && #1481"
16441,Merge pull request #1710 from shaneog/master,Fix Consul download links
16442,Fix Consul download link in benchmark scripts,Use https://releases.hashicorp.com
16443,Fix Consul download link in Terraform scripts,Use https://releases.hashicorp.com
16444,Merge pull request #1707 from hashicorp/b-typo,Fixes a typo.
16445,Fixes a typo.,
16446,add missing test,
16447,fixes issue #1661 and adds supporting test,
16448,Included support to override the assumed location of the consul so you can run the UI on a normal web server potentially on a different host to your consul servers.,
16449,Adding singleton option to DNS for getaddrinfo bug.,
16450,Merge pull request #1700 from michaeldejong/tools-consultant,Added a reference to Consultant in the Community Tools section.
16451,Added a reference to Consultant in the Community Tools section.,
16452,Merge pull request #1699 from hashicorp/b-sanity-check,Adds a sanity check to the local node info compare.
16453,Adds a sanity check to the local node info compare.,
16454,Updates the change log.,
16455,Merge pull request #1698 from hashicorp/pr-1547-slackpad,Implements WAN address translation.
16456,Adds a test to make sure we get the local address within the DC.,
16457,Increases wait to account for random stagger.,
16458,Factors address translation into a single function.,
16459,Adds a test for node registration and tagged addresses.,
16460,"Moves tagged wan address to be managed by anti-entropy, not serf.",
16461,Adds an FSM persist and restore test for tagged addresses.,
16462,Adds a test to make sure the local sync doesn't clobber tagged addresses.,
16463,Adds documentation for WAN address translation.,
16464,"Sets up config for more address tags down the road, renames struct members.",
16465,Use a map for additional node addresses,
16466,Add tests for consul WAN translation,
16467,Explicitly set advertise address in agent tests,"Otherwise, the tests will fail when run on a machine with multiple private addresses"
16468,Consider WAN addresses during Node and SRV record lookup,
16469,Implement translate_wan_addrs config option,This knob tells consul whether it should prefer the WAN address (if set) when making service lookups in remote datacenters. This enables reachability for remote services which are behind a NAT.
16470,Rectify value of AdvertiseAddrWan when set elsewhere,"AdvertiseAddrs has been introduced as a configuration option, which duplicates a few other options, namely AdvertiseAddrWan. We need to use this value elsewhere, so rather than doing a precedence check every time we need to access it, rectify the value of AdvertiseAddrWan to match"
16471,Use idiomatic name for wan_addr serf tag,
16472,Store WanAddress during Service/Check sync,
16473,Store WanAddress during node registration,
16474,Store WanAddress on Node,
16475,Merge pull request #1636 from zenware/master,"Fix Already Closed Issue #1488 ""Unable to find gox"""
16476,Merge pull request #1690 from alistanis/use-http-package-statuses,refactors http server error codes
16477,Updates the change log.,
16478,Merge pull request #1609 from kevinsimper/patch-1,Updating dns forwarding
16479,Merge pull request #1697 from hashicorp/f-doc-tweaks,Tweaks the telemetry docs.
16480,Tweaks the telemetry docs.,
16481,Merge pull request #1284 from nbrownus/telemetry,Option to disable hostnames from telemetry
16482,Merge pull request #1695 from DavidWittman/exec-help-formatting,Fix formatting in exec help
16483,Fix formatting in exec help,"The description for -node was separated by tabs instead of spaces, causing it to be incorrectly aligned."
16484,Merge pull request #1693 from hashicorp/f-doc-dos-warning,Adds a warning about DoS-ing the cluster with consul exec.
16485,Adds a warning about DoS-ing the cluster with consul exec.,
16486,Merge pull request #1654 from ryanslade/invalid-check-message,Updated invalid check error message.
16487,Merge pull request #1691 from hashicorp/b-gnumakefiles,Acknowledge that we're using GNU make's dialect and rename appropriate
16488,Merge branch 'master' of https://github.com/alistanis/consul into use-http-package-statuses,
16489,Acknowledge that we're using GNU make's dialect and rename appropriate,Makefiles to GNUmakefiles so that non-GNU make(1) will error out.  This should be a transparent change to the universe of people using GNU make.
16490,add comment codes,
16491,refactors http server error codes to use the http statuses defined in the http package instead of literals,
16492,Order,
16493,Merge pull request #1685 from jplock/patch-1,Add dropwizard-consul to the Community Tools page
16494,Add dropwizard-consul to the Community Tools page,
16495,Merge pull request #1678 from hashicorp/b-consul-rpc-server-nil,"Use the server's address in debug logging, not the c.lastServer"
16496,"Use the server's address in debug logging, not the c.lastServer, which may be nil",
16497,Merge pull request #1676 from hashicorp/b-env-bash,Don't assume /bin/bash is installed on all OSes
16498,Don't assume /bin/bash is installed on all OSes,Use /usr/bin/env bash where appropriate.
16499,Merge pull request #1675 from hashicorp/d-dnsmasq-reverse-dns,Iterate on the DNS forwarding docs
16500,Iterate on the DNS forwarding docs,"Specifically:  add Dnsmasq examples for reverse DNS for most of the RFC1918, 5735, and 6598 netblocks. Highlight some example options for dnsmasq that are probably of interest. Add a small section on reverse DNS testing Break out BINDs troubleshooting with Dnsmasq's troubleshooting  Not an exhaustive sweep, but should be helpful when introducing consul to new environments."
16501,Fix misc typos,
16502,Add a note re: GH-1667 and redistributing client RPC requests,
16503,Merge pull request #1667 from hashicorp/b-redistribute-clients,Continually redistribute client RPC connections
16504,"Remove unnecessary check, test was moved further up in scope",
16505,Merge branch 'master' of ssh://github.com/hashicorp/consul into b-redistribute-clients,
16506,Chase case change in the function name now that GenerateUUID is an,exported function.
16507,Cull unused function and its unit test.,Pointed out by: @slackpad
16508,Cull unused function and its unit test.,Pointed out by: @slackpad
16509,Use panic instead of returning a sentinel UUID values in unit tests,
16510,Merge pull request #1666 from hashicorp/f-consul-lib,Refactor various utility functions into a consul/lib package
16511,Chase case change in the function name now that GenerateUUID is an,exported function.
16512,Cull unused function and its unit test.,Pointed out by: @slackpad
16513,Cull unused function and its unit test.,Pointed out by: @slackpad
16514,Use panic instead of returning a sentinel UUID values in unit tests,
16515,Continually rebalance client connections,"Introduce a low-level background connection expiration mechanism wherein connections will be recycled periodically based on the size and health of the cluster. For the vast majority of consul users, this will mean an average connection age of 150s.  For 10K node clusters it will take ~3min for clusters to rebalance their connections.  In the pathological case for a 100K cluster where 99K clients are in the minority talking to 1x server it will take ~26min to rebalance all connections. It's possibe for clients recovering from a parititon to become fixated on a single server until the server or agent is restarted.  This is of particular interest to long-running environments with stable agents, where allow_stale is true, and partitions occur periodically."
16516,Use rand.Int31n() vs unconditionally using modulus,
16517,Merge branch 'f-consul-lib' of ssh://github.com/hashicorp/consul into b-redistribute-clients,
16518,"Rename clientRPCCache to clientRPCConnMaxIdle, change value","Increase the max idle time for agents talking to servers from 30s to 127s in order to allow for the reuse of connections that are being initiated by cron. 127s was chosen as the first prime above 120s (arbitrarily chose to use a prime) with the intent of reusing connections who are used by once-a-minute cron(8) jobs and who use a 60s jitter window (e.g. in vixie cron job execution can drift by up to 59s per job, or 119s for a once-a-minute cron job)."
16519,Reuse the results from gettimeofday(2)...,"Inside of a single RPC call, reuse time.Now()."
16520,Always seed math/rand on consul startup,"Required for jitter calcs.  This could be done in consul/agent, but this makes it clear it is done only once process-wide."
16521,Factor out duplicate functions into a lib package,Consolidate code duplication and tests into a single lib package.  Most of these functions were from various **/util.go functions that couldn't be imported due to cyclic imports.  The consul/lib package is intended to be a terminal node in an import DAG and a place to stash various consul-only helper functions.  Pulled in hashicorp/go-uuid instead of consolidating UUID access.
16522,Option to disable hostnames from telemetry,
16523,Merge pull request #1662 from rajanadar/patch-1,fixing small typo in json
16524,fixing small typo in json,
16525,Updated invalid check error message.,Added some of the newer reasons this error could have occured.
16526,Merge pull request #1651 from jk563/consul-intro-not-terraform,Edit intro to present Consul instead of Terraform.
16527,Edit intro to present Consul instead of Terraform.,"As this is Consul, not Terraform, it makes sense to use Consul in this intro instead of Terraform."
16528,Merge pull request #1657 from jrw972/patch-1,Update services.html.markdown
16529,Update services.html.markdown,
16530,Add structured data,
16531,Merge pull request #1641 from brentrojas/patch-1,Update hashicorp-ecosystem.html.markdown
16532,Update hashicorp-ecosystem.html.markdown,"Remove slash from link to blog, which was causing 404 error."
16533,Fix #1488,"gox doesn't get copied anywhere that might be in the users $PATH by default, however if someone has a functional Go setup they are required to have a $GOPATH variable which will contain their Go workspace and executables of all built go programs under $GOPATH/bin There are certainly many solutions to this but after reading the Go documentation this seemed to me like it would be the quickest and most cross-platform."
16534,Catches up the change log.,
16535,Merge pull request #1632 from hashicorp/b-orphaned-watches,Prevents watches from being orphaned when KVS blocking queries loop.
16536,Prevents watches from being orphaned when KVS blocking queries loop.,
16537,Merge pull request #1631 from Cinderhaze/master,Correcting count of checks
16538,Correcting count of checks,"I saw there were 5 checks listed - script, tcp, http, ttl, docker."
16539,Merge pull request #1619 from hashicorp/b-internal-ui,"Fixes the static asset generator for new pkg path, updates assets."
16540,"Fixes the static asset generator for new pkg path, updates assets.",
16541,Merge pull request #1617 from hashicorp/slackpad-patch-1,Fixes the years in the change log.
16542,Fixes the years in the change log.,
16543,Merge pull request #1613 from hashicorp/slackpad-patch-1,Changes readme Go version to 1.5.3.
16544,Changes readme Go version to 1.5.3.,
16545,Merge pull request #1612 from hashicorp/slackpad-patch-1,Bumps website version to 0.6.3.
16546,Bumps website version to 0.6.3.,
16547,Merge pull request #948 from hashicorp/iface-down-fix,Don't try to bind on address from inactive interface
16548,Merge pull request #1611 from hashicorp/f-next-version,Puts tree in state ready for work on Consul 0.7.
16549,Puts tree in state ready for work on Consul 0.7.,
16550,Updating dns forwarding,It is not really clear that you only have to do one of the following and not all three.
16551,Release v0.6.3,
16552,Merge pull request #1608 from hashicorp/f-deps,Adds deps for the 0.6.3 release.
16553,Adds deps for the 0.6.3 release.,
16554,Merge pull request #1607 from hashicorp/slackpad-patch-1,Preps the change log for the 0.6.3 release.
16555,Preps the change log for the 0.6.3 release.,
16556,Merge pull request #1606 from hashicorp/f-vbox,Bumps up vbox resources for better unit test performance.
16557,Bumps up vbox resources for better unit test performance.,
16558,Merge pull request #1598 from Cbeck527/master,Update consul version for vagrant demo
16559,Remove old heroku stuff,
16560,Merge pull request #1603 from hashicorp/f-post-release-picks,Post 0.6.2 release picks
16561,Bumps version up to 0.6.3.,
16562,Adds deps for v0.6.2.,
16563,Merges the 0.6.2 change log with master.,
16564,Bumps Go version to 1.5.3.,
16565,Merge pull request #1602 from hashicorp/slackpad-patch-1,Bumps website version to 0.6.2.
16566,Bumps website version to 0.6.2.,
16567,Remove old website push script,
16568,Merge pull request #1601 from bensojona/b-semaphore-typo,Fix semaphore typo
16569,Fix semaphore typo,
16570,Use sync instead of put,
16571,Fix broken link,
16572,Remove bad CSS,
16573,Update middleman,
16574,Merge pull request #1600 from hashicorp/sethvargo/deploy,Add Atlas deployment scripts
16575,Add Atlas deployment scripts,
16576,Remove Ruby requirement from Gemfile,
16577,Merge pull request #1599 from hashicorp/sethvargo/image_optim,Optimize images
16578,Optimize images,
16579,Update consul version for vagrant demo,
16580,Merge pull request #1597 from hashicorp/sethvargo/links,Use HTTPS + www. where appropriate
16581,Use HTTPS + www. where appropriate,
16582,Merge pull request #1595 from hashicorp/f-next-release,"Preps for the next Consul release, 0.6.2."
16583,"Preps for the next Consul release, 0.6.2.",
16584,Merge pull request #1592 from hashicorp/b-reap,Adds support for the reap lock.
16585,Adds support for the reap lock.,
16586,Merge pull request #1589 from hashicorp/header-fonts,Header fonts
16587,fix consul logo position in safari,
16588,fix header fonts safari,
16589,Merge pull request #1585 from mattnenterprise/advertise-wan-cli,Add consul agent help for advertise-wan
16590,Add consul agent help for advertise-wan,
16591,Merge pull request #1582 from hashicorp/slackpad-patch-1,Adds a note about 2X memory provisioning.
16592,Adds a note about 2X memory provisioning.,
16593,Merge pull request #1581 from hashicorp/slackpad-patch-1,Adds a cautionary note about data fitting into RAM.
16594,Adds a cautionary note about data fitting into RAM.,
16595,Merge pull request #1577 from hashicorp/f-unpin-go,Un-pins Go version so we always run CI with the latest.
16596,Un-pins Go version so we always run CI with the latest.,
16597,Merge pull request #1575 from hashicorp/slackpad-patch-1,Updates middleman-hashicorp version to get new Solaris logo.
16598,Updates middleman-hashicorp version to get new Solaris logo.,
16599,Bumps the website version to 0.6.1.,
16600,Tweaks wording of reap config option section.,
16601,Tweaks working in the change log.,
16602,Release v0.6.1 (added deps),
16603,Adds deps for 0.6.1 build.,
16604,Release v0.6.1,
16605,Adds release build date to the change log.,
16606,Takes Consul out of dev mode.,
16607,Updates the change log with the new consul lock features.,
16608,Merge pull request #1567 from hashicorp/f-lock-try,"Adds ""try"" and ""monitor-retry"" options to consul lock command"
16609,Factors server error checking into a new function.,
16610,Makes the API behave better with small wait values.,
16611,Makes the timeout behavior more intuitive.,"Previously, it would try once ""up to"" the timeout, but in practice it would just fall through. This modifies the behavior to block until the timeout has been reached."
16612,Catches up the change log.,
16613,Defaults monitor retries to 3 retries @ 1s for the consul lock command.,
16614,Adds monitor retries to the consul lock command.,
16615,Adds the ability for semaphore monitors to ride out brief periods of 500 errors.,
16616,"Adds ""try"" support to locks and semaphores.",
16617,Merge pull request #1568 from hashicorp/f-solaris,Adds a solaris target.
16618,Adds a solaris target.,
16619,Merge pull request #1550 from hashicorp/f-devmode,Add a -dev mode for easy prototyping
16620,Merge pull request #1448 from gozer/issue/1447/http-access-logs,Add client ip to http access logs
16621,website: address comments,
16622,consul: address comments,
16623,remove address splitting,
16624,Merge branch 'master' of http://github.com/hashicorp/consul into issue/1447/http-access-logs,
16625,Merge pull request #1559 from hashicorp/slackpad-patch-1,Fixes a bad merge in the UI.
16626,Fixes a bad merge in the UI.,
16627,Merge pull request #1422 from railsguru/master,Propagate token in UI
16628,Merge pull request #1549 from kikitux/patch-1,[doc] fix identation on statsd_addr
16629,Move logged client IP to the end of the log message,
16630,Merge branch 'master' of http://github.com/hashicorp/consul into issue/1447/http-access-logs,
16631,Merge pull request #1553 from peterfschaadt/patch-2,Fixing typos in Coordinate documentation.
16632,Fixing typos in Coordinate documentation.,
16633,website: add docs for dev mode,
16634,fix identation on statsd_addr,ditto
16635,consul: disable serf snapshots in dev mode,
16636,agent: enable ui for dev mode,
16637,consul: dev mode works,
16638,website: update setup instructions for self-hosted ui,
16639,Merge pull request #1543 from hashicorp/f-ui-static,Static asset compilation for Consul UI
16640,agent: update assetfs output,
16641,website: document the static ui flag,
16642,agent: static UI is configurable,
16643,agent: initial web assets,
16644,agent: compile web assets into consul binary,
16645,Merge branch 'master' of http://github.com/hashicorp/consul into issue/1447/http-access-logs,
16646,Merge pull request #1539 from hashicorp/f-reap,Adds child process reaping when Consul is running as PID 1.
16647,Adds a Bool helper function.,
16648,Moves logger down where it's used for reaping.,
16649,"Changes sense of option to ""reap"" and uses nil for ""not set"".",
16650,Adds child process reaping when Consul is running as PID 1.,
16651,Merge pull request #1537 from hashicorp/f-dns-counting,"Adds telemetry on number of DNS queries served, per-agent."
16652,Converts the DNS metric to a gauge which gives us a count and a time.,
16653,"Adds telemetry on number of DNS queries served, per-agent.",
16654,Tweaks RTT command docs.,
16655,Merge pull request #1522 from sboily/patch-1,Update documentation to use consul rtt command with https
16656,Merge pull request #1494 from foostan/update_consul,Update Consul in demo
16657,Tweaks the change log for TCP checks.,
16658,Merge pull request #1496 from berendt/vagrant_cluster_060,Use Consul version 0.6.0 in the Vagrant demo environment
16659,Merge pull request #1397 from hashicorp/new_header,New header/footer design
16660,position edit this page link to bottom of page,
16661,make sure #demo h2 color is readable,
16662,capital C in header by hashicorp lockup,
16663,Merge branch 'master' into new_header,
16664,cleanup,
16665,Merge pull request #1533 from hashicorp/b-statsd-doc,Clarifies format of stats aggregator configurations as host:port.
16666,Clarifies format of stats aggregator configurations as host:port.,
16667,Merge pull request #1532 from hashicorp/f-clean-vet,Cleans up some small go vet findings.
16668,Cleans up some small go vet findings.,
16669,Update options.html.markdown,clarify that setting acl_default_policy won't have any effect unless ACL support is also enabled by setting acl_datacenter
16670,Merge pull request #1526 from hashicorp/f-transport,Builds the insecure SSL transport off the clean default transport.
16671,Builds the insecure SSL transport off the clean default transport.,
16672,Merge pull request #1525 from hashicorp/f-pin-go,Pins Go to 1.5.2 in Travis until we figure out #1524.
16673,Pins Go to 1.5.2 in Travis until we figure out #1524.,
16674,Update documentation to use rtt with https,
16675,Merge pull request #1519 from hashicorp/revert-1517-f-api-pooling,"Revert ""Adds client and transport pooling in the API so we don't leak connections."""
16676,"Revert ""Adds client and transport pooling in the API so we don't leak connections.""",
16677,Merge pull request #1517 from hashicorp/f-api-pooling,Adds client and transport pooling in the API so we don't leak connections.
16678,Makes the insecure transport work like the default one.,
16679,Merge pull request #1518 from hashicorp/f-base64,Adds a base64 decode step to the example.
16680,Adds a base64 decode step to the example.,
16681,Catches up the change log.,
16682,Adds client and transport pooling in the API so we don't leak connections.,
16683,Merge pull request #1513 from hashicorp/f-logging,Adds source address logging on RPC errors.
16684,Adds source address logging on RPC errors.,
16685,Merge pull request #1514 from oswell/master,Add the token to /v1/internal/ui/nodes. (issue #1071)
16686,Add the token to /v1/internal/ui/nodes. (issue #1071),
16687,Merge pull request #1504 from pshima/b-demo-url-fix-1497,Fix the demo URL in the getting started guide.
16688,Fix the demo URL in the getting started guide.,
16689,Adds a note about the new web UI layout.,
16690,Bumps the Go version up to 1.5.2.,
16691,Preps for a smaller 0.6.1 release before 0.7.,
16692,Fixes a typo on the website.,
16693,Use Consul version 0.6.0 in the Vagrant demo environment,
16694,Update Consul in demo,
16695,Merge pull request #1493 from hashicorp/sethvargo/bios,"Add bios for @ryanuber, @slackpad, and @sethvargo"
16696,Period,
16697,"Add bios for @ryanuber, @slackpad, and @sethvargo",/cc @armon
16698,Merge pull request #1483 from sepn/master,Change example filename to use .json instead of .js
16699,"Puts the version file into the ""next version"" state.",
16700,Change example filename to use .json instead of .js,Since only .json files are loaded using .js as an example here is confusing.
16701,Merge pull request #1475 from WangFenjin/master,Fix typo
16702,Fix typo,
16703,Adds blank line to fix Docker check formatting.,
16704,Adds some more upgrade notes for Consul 0.6.,
16705,Adds some additional upgrade notes for 0.6.,
16706,Merge pull request #1473 from nftw/nftw-patch-1,Update atlas.html.markdown
16707,Update atlas.html.markdown,Fixed minor typo
16708,Merge pull request #1469 from hashicorp/settings-icon,ui: swap unicode glyph with inline svg for the settings icon
16709,ui: swap unicode glyph with inline svg for the settings icon,
16710,Bumps the website version to 0.6.0.,
16711,Release v0.6.0,
16712,Adds a release date for 0.6.0 to the change log for the final build.,
16713,Updates the version specific instructions for 0.6.0.,
16714,Merge pull request #1463 from hashicorp/b-query-name-alias,Adds a check to make sure query names can't be registered twice.
16715,Adds a check to make sure query names can't be registered twice.,
16716,Adds deps for 0.6.0 release build.,
16717,Drops the pre-release marker.,
16718,Tweaks wording in change log.,
16719,Updates the change log.,
16720,Merge pull request #1452 from hashicorp/f-shrink,consul: shrink yamux recv buffer on idle streams
16721,Tightens up wording in the change log.,
16722,Updates the change log.,
16723,Merge pull request #1457 from hashicorp/f-monitor-retries,Adds a retry capability to lock monitors in the API client.
16724,Adds a unit test for lock monitor retries.,
16725,Adds custom retry time for lock monitors.,
16726,Adds a retry capability to lock monitors in the API client.,
16727,Updates API docs for version 0.6.0.,
16728,Merge pull request #1453 from thanhson1085/patch-1,Make the packages up to date
16729,Make the packages up to date,
16730,consul: shrink yamux recv buffer on idle streams,
16731,Merge pull request #1450 from hashicorp/f-proc-warnings,Removes the GOMAXPROCS warnings which are obsolete for Go 1.5+.
16732,Removes the GOMAXPROCS warnings which are obsolete for Go 1.5+.,
16733,Add client ip to http access logs,Fixes #1447
16734,Merge pull request #1445 from hashicorp/f-check-cert,Switches to curl with certificate checking.
16735,Switches to curl with certificate checking.,
16736,Merge pull request #1443 from mindscratch/patch-1,Fix version support
16737,Fix version support,Updated the version that the library supports.
16738,Update health.html.markdown,Correct json syntax in example.
16739,Merge pull request #1441 from raboof/patch-1,Include 'Service'/'Address' field in example
16740,Include 'Service'/'Address' field in example,"Add the Service/Address field to the example output for the /v1/health/service/\<service\> endpoint. Even though it's an optional value, this is probably the one consumers are looking for (rather than the Node address)"
16741,Fixes a typo in the prepared queries doc.,
16742,Removes old logging doc which was empty.,
16743,Merge pull request #1424 from hashicorp/b-docker-client-api,Adds Docker checks support to client API.
16744,Adds Docker checks support to client API.,"Also changed DockerContainerId to DockerContainerID, and updated the agent API docs to reflect their support for Docker checks."
16745,Propagate token in UI,
16746,Adds a deps file for v0.6.0-rc2.,
16747,Release v0.6.0-rc2,
16748,Merge pull request #1420 from sean-/master,Fix markdown's markup: 2^(64-1) != 2^(64)-1
16749,Fix markdown's markup: 2^(64-1) != 2^(64)-1,
16750,Bumps the pre-release version for RC2.,
16751,Updates change log pre-RC2.,
16752,Merge pull request #1389 from hashicorp/f-prepared-queries,Adds prepared queries.
16753,Makes all the query ops the correct type.,
16754,Returns a zero index for a lookup error case.,
16755,Breaks up huge HTTP endpoint functions.,
16756,Avoids taking the length again when parsing DNS queries.,
16757,Removes a useless empty import and fixes some stale comments.,
16758,Switches to helpers for prepared query API wrappers.,
16759,Makes UUID regex case-insensitive.,
16760,Moves conversion of nil slices up to HTTP layer for prepared queries.,
16761,Adds a paranoia set of the nodes slice to nil.,
16762,Adds a test to ensure we don't return a nil slice.,
16763,Updates the changelog.,
16764,Adds and updates docs for prepared queries.,
16765,Adds API client support for prepared queries.,
16766,Gets rid of some unused constants.,
16767,Adds a test to make sure a stale retry terminates.,
16768,Returns a 404 from a get or execute of a nonexistent query.,
16769,Plumbs the service name back and uses agent-specific TTL settings as a fallback.,
16770,"Adds unit tests for prepared queries and DNS, using existing tests for equivalence.",
16771,Adds DNS support for prepared queries (needs tests).,
16772,Adds a slightly more flexible mock system so we can test DNS.,
16773,Adds a note about obfuscating query name/ID from the logs.,
16774,Adds query metadata to prepared query execute response.,
16775,"Makes an empty prepared query list an empty slice, not a nil one.",
16776,Adds a unit test for the new RTT getDatacentersByDistance fn.,
16777,Completes FSM support for prepared queries.,
16778,Adds an HTTP endpoint for prepared queries.,
16779,Adds an RPC endpoint injection method for testing.,
16780,Changes Lookup to Get since we don't need it (only Execute does).,
16781,"Always increments the failovers counter, even for error-ed DCs.",
16782,Adds test for remote datacenter selection and query logic.,
16783,Adds a test for the server wrapper.,
16784,Adds tag filter tests.,
16785,Adds execute tests for prepared queries.,
16786,Adds status information about failovers to query results.,
16787,Removes unused ACL filter.,
16788,Adds execute leader forward test for prepared queries.,
16789,Adds a leader forwarding case for prepared queries.,
16790,Adds tests for query lookup and list endpoints.,
16791,Adds query parsing unit tests.,
16792,Adds ACL cases for apply.,
16793,Completes non-ACL version of apply test.,
16794,Adds lookup and list endpoints and basic end-to-end apply test.,
16795,Checks for valid UUIDs before calling in to index function.,
16796,Clarifies comment about name vs. ID.,
16797,Skips unknown DCs during queries and chugs along in the face of errors.,
16798,Moves sort to a query-time decision and adds back the limit.,
16799,Adds an explicit ACL check that will fail vs. trying other DCs.,
16800,"Changes ""not"" prefix from ""~"" to ""!"".",
16801,"Adds prefix ""prepared"" to everything prepared query-related.",
16802,Adds basic structure for prepared queries (needs tests).,
16803,Factors code for pulling the sorted list of DCs into a common place.,
16804,Adds a better shuffle test (similar to DNS).,
16805,Moves DNS over to new shuffle and filter functions.,
16806,Changes structs and state store for prepared queries.,
16807,Adds a new management ACL for prepared queries.,
16808,Merge pull request #1413 from hashicorp/b-coord-raft-errors,Adds a check for in-band error returns in the coordinate RaftApply.
16809,Merge pull request #1412 from hashicorp/f-longer-ttl,"Extends the session TTL max to 24 hours, and adds a warning to the docs."
16810,"Extends the session TTL max to 24 hours, and adds a warning to the docs.",
16811,Adds a check for in-band error returns in the coordinate RaftApply.,
16812,Merge pull request #1414 from hashicorp/b-nil-slices,Fixes nil slices leading to null fields in HTTP JSON responses
16813,Fixes nil slices from HTTP endpoints.,"These would manifest in the HTTP output as Javascript nulls instead of empty lists, so we had unintentionally changed the interface while porting to the new state store. We added code to each HTTP endpoint to convert nil slices to empty ones so they JSON-ify properly, and we added tests to catch this in the future."
16814,Adds a note about the new acquire behavior into the sessions internals guide.,
16815,Updates wording on new lock operation.,
16816,Adds a note about the new KV lock behavior.,
16817,Updates the changelog.,
16818,Merge pull request #1293 from talwai/master,Add options to send telemetry to DogStatsD
16819,Kill unused import in command.go,
16820,Merge pull request #1411 from hashicorp/b-truncated,Fixes unit test fail due to expected truncated message.
16821,Fixes unit test fail due to expected truncated message.,
16822,Add DogStatsD configuration options to documentation source,
16823,Add DogStatsd configuration,
16824,Adds a note about the new acquire behavior for lock holders.,
16825,community does not use the same layout as the rest of the inner pages. add edit link,
16826,edit page link does not belong in footer appearing like a nav link. should be associated with page content. updated,
16827,refactor styles to be more atomic for header/footer usage,
16828,whitespace,
16829,use method terraform uses to keep footer at bottom of page,
16830,fix source sans refs,
16831,fix #cta responsive bug,
16832,mobile-header,
16833,footer redesign,
16834,most styles,
16835,basic structure of redesign,
16836,Fixes a typo.,
16837,Adds a note about the new service discovery ACLs.,
16838,Merge pull request #1366 from hashicorp/run-vet-before-test,Running go vet before test
16839,Running go vet before test,
16840,Release v0.6.0-rc1,
16841,Merge pull request #1365 from hashicorp/sethvargo/trail,Add trailing slash to avoid a redirect
16842,Add trailing slash to avoid a redirect,
16843,Release v0.6.0rc1,
16844,Merge pull request #1363 from hashicorp/b-vet,Fixes a go vet finding with a log message.
16845,Fixes a go vet finding.,
16846,Updates the CHANGELOG with all the 0.6.0 updates.,
16847,Merge pull request #1362 from hashicorp/f-zip,Adds zip to the Vagrant box so a make works there without any fiddling.
16848,Adds zip to the Vagrant box so a make works there without any fiddling.,
16849,Merge pull request #1361 from hashicorp/f-warn-on-batch-fail,Changes batch update failure to a WARN since it's nbd.
16850,Changes batch update failure to a WARN since it's nbd.,
16851,Merge pull request #1357 from hashicorp/b-agent-spam,Prevents agents from considering Raft information when doing sync checks.
16852,Merge pull request #1356 from hashicorp/docker-check-docs,Added some docs for the docker check
16853,Some more grammer corrections and formatting to docker check docs,
16854,Prevents agents from considering Raft information when doing sync checks.,
16855,Some changes to the docker check docs,
16856,Added some docs for the docker check,
16857,Fixes a bad error message.,
16858,Removes netbsd and openbsd for now.,These are super close but we need to fix an issue with the Docker client before we can include them.
16859,Merge pull request #1354 from hashicorp/b-static,Moves the static assets into a subfolder where index.html expects them.
16860,Moves the static assets into a subfolder where index.html expects them.,
16861,Merge pull request #1353 from hashicorp/b-upshift,"Uses correct version for automatic upshift, sets coordinate Raft log entries to ignore."
16862,Adds a check for the minimum version as well.,
16863,Sets the ignore flag on coordinate update Raft log entries.,
16864,Makes the version upshift code look at the correct version field.,
16865,Merge pull request #1352 from clstokes/docs-agent-option-atlas,Clarify format of the -atlas agent option.
16866,Clarify format of the -atlas agent option.,
16867,Merge pull request #1343 from hashicorp/f-docker-check,Docker Support for Consul Health Checks
16868,Forcing the Env variable to empty while testing the default shell logic,
16869,Added a test for selecting shell from env,
16870,Making an explicit check to test whether a check is of type Monitor,
16871,Fixed the tests,
16872,Added a test to check if we are properly truncating docker exec outputs,
16873,Added a test for exit code 1 with docker exec,
16874,Fixed the Fake Docker client to simulate Exec start failures,
16875,Not adding the docker check if we couldn't create the client,
16876,Merge pull request #1345 from hashicorp/f-release-cleanup,Cleans up some small things in preparation for a 0.6.0 RC1.
16877,Making sure the script is not empty if it's a docker check,
16878,Preps the version for the first RC.,
16879,Makes the Makefile pull the tools it needs on the first run.,
16880,"Updates go version to 1.5.1, and modernizes the Vagrantfile.",Drops 32bit in the Vagrantfile as well since we can build that with gox and don't need a special environment for it. The Vagrantfile is now just a good default development environment.
16881,Updated the comment for CheckType,
16882,Collect and truncate the output from docker exec,
16883,Defaulting to Monitor check,
16884,Extracted the logic of figuring out the shell and fixing the logic to find out if the check is a Docker check,
16885,Merge pull request #1344 from hashicorp/sethvargo/hc-releases,Use hc-releases to upload during dist
16886,Use hc-releases to upload during dist,
16887,Merge pull request #1342 from victortrac/master,Mote -> Note typo
16888,Mote -> Note typo,
16889,Merge pull request #1341 from hashicorp/site-header-fix,fix for jumping header issues on the website
16890,Added some tests for docker check,
16891,fix for jumping header issues on the website,"this fix was both a bit more involved and a bit hackier than I was hoping the soultion would be, but that's how things go sometimes to test:  - open up the website in a browser and resize your window  - make sure that the nav is always legible"
16892,Merge pull request #1296 from hashicorp/f-fast-sync,agent: remove an N^2 check. See #1265
16893,"Removes the integration test runner, there weren't any tests using it.",
16894,Merge pull request #1338 from hashicorp/js-cleaning,Clean up the JS a bit and make Ember code more idiomatic
16895,Merge pull request #1340 from hashicorp/failing-node-service,Show node status as failing if a service on the node is failing
16896,Marking the state of a service as critical if the Docker Daemon doesn't respond while running checks,
16897,Adding a debug log to indicate the exit code of failed check,
16898,Fixed merge conflicts,
16899,Registering the Exec with Docker Daemon everytime the check is invoked,
16900,Implemented Docker health checks,
16901,Merge pull request #1336 from hashicorp/sethvargo/releases,Use releases for pulling binaries
16902,Use vendored fastly logo,
16903,Use releases for releases,
16904,Merge pull request #1339 from hashicorp/b-1334,"Revert ""Fixed Header background"""
16905,Show node status as failing if a service on the node is failing,
16906,"Revert ""Fixed Header background""",This reverts commit 809ed3634403a90dbc62d05e18351262fed10d4c.
16907,Clean up the JS a bit and make Ember code more idiomatic,
16908,Runs go fmt (sorts new go-cleanhttp imports).,
16909,Merge pull request #1331 from slackpad/f-network-tomography,Adds network tomography features to Consul.
16910,Completes rebase of network coordinates to new memdb.,
16911,Updates docs for network coordinates.,
16912,Fixes configs now that Serf always caches coordinates.,
16913,Gives RTT class a more Go-like name.,
16914,Defaults second node to agent if not given. Removes -short option and tweaks output formatting.,
16915,"Cleans up after code review, adds a -short option to ""consul rtt"" command.",
16916,"Adds a ""consul rtt"" command.",
16917,Adds support for coordinates to client API.,
16918,Makes the default protocol 2 and lets 3 interoperate with 2.,
16919,Zeroes out the height when testing exact distances.,
16920,Cleans up after latest rebase.,
16921,Runs go fmt after latest rebase.,
16922,Adds a test for the DisableCoordinate config.,
16923,Adds coordinate of agent to self endpoint.,
16924,Moves sorting up into coordinate endpoint HTTP handlers.,
16925,Installs a friendly handler for coordinate endpoints when coordinates are disabled.,
16926,Fixes config merge fn for disabling coordinates and adds it to JSON.,
16927,Adds endpoints for raw network coordinates.,
16928,Fixes bad name for DC forwarding of Coordinate.Get.,
16929,"Changes ?near=self to a safer ?near=_agent, which is also clearer about what it does.",
16930,Adds distance sorting to health endpoint. Cleans up unit tests.,
16931,Switches to the median over all DC nodes with known coordinates.,
16932,"Adds a magic ""self"" node name to distance queries.",
16933,Adds explicit check for empty node in source parameter.,
16934,Moves disable checks down into the sort routine.,
16935,Adds tests for HTTP interface. Removes a stray mark.,
16936,Adds sort of DCs in catalog queries based on RTT. Cleans up., Makes the catalog endpoint respect disabling coordinates for all   RTT-sorting query types.
16937,Adds coordinate sorting support to catalog queries for nodes and service nodes.,
16938,Turns down the coordinate sync rate a bit more.,
16939,Scales coordinate sends to hit a fixed aggregate rate across the cluster.,
16940,Simplifies the batching function and adds some comments.,
16941,Adds snapshot save and restore of coordinates.,
16942,Does some small cleanups based on PR feedback., Holds coordinate updates in map and gets rid of the update channel. Cleans up config variables a bit.
16943,Hardens Consul from bad coordinates from other nodes.,
16944,Takes the node name out of the coordinate get call.,
16945,Moves batching down into the state store and changes it to fail-fast.," A batch of updates is done all in a single transaction. We no longer need to get an update to kick things, there's a periodic flush. If incoming updates overwhelm the configured flush rate they will be dumped with an error."
16946,Flips the sense of the coordinate enable option.,
16947,Removes one more WAN leftover.,
16948,Does a clean up pass on the Consul side.,
16949,Merges config changes after rebase.,
16950,Address comments,
16951,Add test for the GetWAN endpoint,
16952,Add an endpoint for getting WAN coordinates,
16953,Fix tests,
16954,Address comments,
16955,Add state store tests,
16956,Add more tests,
16957,Address comments,
16958,Add a test case,
16959,Use IndexedCoordinate instead,
16960,Improve a test,
16961,Some fixes,
16962,Fix a comment,
16963,Complete logic for sending coordinates,
16964,Fix tests,
16965,Some fixes,
16966,Change GET API a little bit,
16967,Adding tests and stuff,
16968,Start adding stuff,
16969,Merge branch 'master' into f-docker-check,
16970,Merge pull request #1329 from eicca/improve-api-readme,Handle error in api README example
16971,Handle error in api README example,
16972,Implemented Docker health checks,
16973,Merge pull request #1318 from daveadams/f-http-header-token,Allow specifying Consul token in an HTTP request header
16974,Merge pull request #1328 from hashicorp/sethvargo/build_gox,Use gox for building
16975,Typos,
16976,Use gox for building,
16977,Update cleanhttp repo location,
16978,Merge pull request #1327 from hashicorp/cleanhttp,Use cleanhttp to get rid of DefaultTransport
16979,Use cleanhttp to get rid of DefaultTransport,
16980,Cleans up a little whitespace with go fmt.,
16981,Merge pull request #1291 from hashicorp/f-memdb,New memdb-based state store
16982,Gets rid of LMDB reference in the FAQ.,
16983,Gets rid of error prefixing in leader.go.,
16984,Puts all restore operations into a single transaction and optimizes watches.,
16985,Merge pull request #1321 from daveadams/b-safari-ui-403,Fix #1316: Safari 403 error on k/v page of web UI
16986,UI formatURL: render null token correctly,"If the token argument to formatURL is null, it should be rendered as the empty string and not the string 'null'. Should fix #1316 in which Safari gets a 403 error when visiting the key/value page in the web UI."
16987,Gets rid of unique constraint on sessions index in session_checks.,
16988,Switches sessions over to UUIDFieldIndex.,
16989,Adds a special case for fill KVS listings to avoid a tombstone scan.,
16990,Makes the iterator naming more consistent.,
16991,Converts sessions and ACLs over to iterators.,
16992,Converts KVS snapshot over to iterator.,
16993,"Converts nodes, services, checks to iterators duing dumps; fixes tag drift bug.",Realized that the conversions ServiceNode <-> NodeService were incomplete in a few places so centralized those and added some tests.
16994,Merge pull request #1319 from magiconair/patch-1,Add fabio - consul-aware HTTP/HTTPS lb/router
16995,Add fabio - consul-aware HTTP/HTTPS lb/router,"Hi hashicorp team, I work at eBay in Amsterdam and I have written a zero-conf consul aware HTTP(S) load-balancer in Go which can be used instead of consul-template + haproxy/varnish/apache/nginx. It builds its routing table from host/path prefixes the services publish via tags and the service status. Once a change is detected it switches the routing table dynamically without restart. It also supports canary testing by routing N% of traffic to a variable number of instances of a service.  https://github.com/eBay/fabio  We're using it to run all of marktplaats.nl (> 5-10k req/sec peak) through it and parts of kijiji.it which are eBay classifieds sites in the Netherlands and Italy.  The code has been under development for the last 5 months and runs now in production and I was able to open-source it a couple of days ago.  consul has quickly become our state and coordination backend for our micro services architecture for multiple different platforms in several countries. We're very happy with the quality and ease-of-use of your products and I'm personally looking forward to testing nomad.  It would be cool if you could list the project on your consul tools page. Please let me know whether it meets your standards and/or expectations for tools to be listed there. Feel free to ask questions."
16996,Add HTTP request header X-Consul-Token,"Add support for an X-Consul-Token HTTP request header to specify the token with which this request should be fulfilled. The header would have precedence over the responding Agent's default token, but would have lower precedence than a token specified in the query string."
16997,"Gets rid of non-idomatic ""state_store"" alias in FSM.",
16998,Merge pull request #1294 from hashicorp/edit-this-page,"Add ""Edit this page"" link everywhere except /"
16999,Ports a couple of new RPC calls to the updated codec mechanism.,
17000,Update CHANGELOG.md,
17001,Fixes a typo.,
17002,Runs go fmt after latest changes.,
17003,Adds unit tests for new structs clone functions.,
17004,Adds benchmarks back in to the state store.,
17005,Removes a todo that's no longer needed.,
17006,Adds unit tests for the graveyard.,
17007,Does some go fmt after latest round of changes.,
17008,Adds a delay test.,
17009,Adds watch unit tests and does some related watch cleanup.,
17010,Adds tests for GC.,
17011,Adds clone for service nodes so we don't twiddle the database's object.,
17012,Fixes remaining non-KV index calclulations and adds a general getWatchTables thing.,
17013,Fixes index management for KVS.,
17014,Fixes up verify_no_uuid checks for new path.,
17015,Makes session invalidate loops use a separate slice to protect the iterator.,
17016,Makes all delete loops use a separate slice to protect the iterator.,
17017,Cleans up some go vet warnings.,
17018,Gets rid of todo that we discussed is ok.,
17019,"Gets rid of the transitional ""New"" suffix on state store and RPC.",
17020,Deletes the old state store and all its accoutrements.,
17021,Knocks out the Raft indexes before doing compare.,
17022,Nukes old state store's connection to FSM and RPC.,
17023,Integrates session TTL tests with new state store.,
17024,Integrates new state store into internal endpoint.,
17025,Abstracts the table names away from the RPC call sites.,
17026,Integrates new state store into session endpoint; returns table index always.,
17027,Integrates new state store into leader and catalog/health endpoints.,
17028,Integrates KVS endopint with new state store (changes KVSList to match old behavior).,
17029,Cuts FSM unit tests over to new state store.,
17030,Adds twiddling of the real state store in snapshot tests.,
17031,"Updates docs about new ""acquire when you already have it"" behavior.",
17032,Ports over session invalidation tests (and fixes some bugs).,
17033,Adds a note about updating sessions after they are created.,
17034,Beefs up node and service watch tests for multi-table triggers.,
17035,Adds session snapshot/restore and basic watch tests (and fixes some bugs).,
17036,Adds tombstone tests and gets rid of unused logger.,
17037,Makes sure we don't create a full table watch for tombstones.,
17038,Adds snapshot/restore and watch tests for KVS.,
17039,"Allows lock holder to re-lock and set a KV, adds tests for corner cases around sessions.",
17040,Adds kvs lock/unlock tests.,
17041,"Adds snap and watch tests for nodes, services, and checks.",
17042,Adds node snap and watch tests as well as a general watch test.,
17043,De-generalizes graveyard since that ended up as a YAGNI (only useful for KV).,
17044,Cleans up unit tests for consistency.,
17045,Adds ensure registration unit test (and fixes bugs).,
17046,Adds reap tombstone test (and fixes bugs).,
17047,Adds ACL snapshot/restore test.,
17048,Adds a watch tester helper that helps cut the cruft.,
17049,"Completes state store for KV, sessions, tombstones, and nodes/services/checks (needs tests and integration).",
17050,Integrates new state store for ACLs.,
17051,"Gets new structs changes to compile, adds some corner case handling and extra unit tests.",
17052,consul/state: list acls,
17053,consul/state: implement acl delete,
17054,consul/state: basic acl set/get/delete,
17055,consul/state: basic session destroy works,
17056,consul/state: more tests,
17057,consul/state: refactor some tests,
17058,consul/state: session lookup by node id works,
17059,consul/state: add session list method,
17060,consul/state: adding session registration,
17061,consul/state: adding tree delete for kvs store,
17062,consul/state: list keys from the kv with a prefix/separator,
17063,consul/state: fix for maxIndex and better tests,
17064,consul/state: add CAS method for kv set,
17065,consul/state: initial pass at CAS delete operation for kvs,
17066,consul/state: adding KVSList for listing a given prefix,
17067,consul/state: adding shallow delete for kvs store,
17068,consul/state: basic k/v operations,
17069,consul/state: adding node dump methods,
17070,consul/state: testing service registration update,
17071,consul/state: fetch node/check sets by service ID,
17072,consul/state: filter checks by state,
17073,consul/state: support check lookups by service name,
17074,consul/state: return highest index for queries with compound results,
17075,consul/state: cleanup,
17076,consul/state: better tests for index table updates,
17077,consul/state: test helpers,
17078,consul/state: node checks are removed with their associated nodes,
17079,consul/state: services are removed with their associated nodes,
17080,consul/state: remove checks during service deregistration,
17081,consul/state: add check deletion method,
17082,consul/state: set index if we have an existing health check,
17083,consul/state: negative tests,
17084,consul/state: basic health check retrieval works,
17085,consul/state: persisting health checks works,
17086,consul/state: test for index modification during deletes,
17087,consul/state: add service delete functions,
17088,consul/state: working on node deletion,
17089,consul/state: add function for returning all nodes,
17090,consul/state: track highest index when querying services,
17091,consul/state: querying node services works,
17092,consul/state: read transactions don't block writes,
17093,consul/state: more tests for EnsureNode/GetNode,
17094,consul/state: working on service registration storage,
17095,consul/state: node registration and retrieval works,
17096,consul/state: start tests for schema,
17097,consul/state: round out schema,
17098,consul/state: starting on new state store,
17099,Merge pull request #1307 from hashicorp/f-rpc,Switch to net-rpc-msgpackrpc
17100,consul: comment msgpack handle,
17101,Fix CHANGELOG,
17102,Merge pull request #1309 from hashicorp/f-remove-migrate,Removes consul-migrate for 0.6
17103,Merge pull request #1310 from hashicorp/fix-http-defaultclient,Don't use http.DefaultClient
17104,Don't use http.DefaultClient,Two of the changes are in tests; the one of consequence is in the API. As explained in #1308 this can cause conflicts with downstream programs. Fixes #1308.
17105,Update CHANGELOG.md,
17106,website: add note for consul migrate utility.,
17107,agent: consolidates data dir checker,
17108,agent: test mdb dir protection,
17109,"agent: remove migrator, refuse to start if mdb dir found",
17110,consul: revert session endpoint test,
17111,Update datacenters.html.markdown,Fix GH-1305.
17112,consul: initial pass at refactoring RPC using net-rpc-msgpackrpc,
17113,Merge pull request #1300 from magsout/fix.Header-background-firefox/ie,Fixed Header background
17114,Fixed Header background,
17115,agent: remove an N^2 check. See #1265,
17116,bundle update middleman-hashicorp,
17117,Add edit this page link in footer,
17118,Add github_slug to website/config.rb,
17119,Add makefile and update readme,
17120,Add shopt globs to include hidden files,
17121,Merge pull request #1270 from mpuncel/mpuncel/log-http-method,Add http method to log output
17122,Add http method to log output,
17123,Merge pull request #1262 from norbertpotocki/master,Add cfg4j-pusher to tools section
17124,add cfg4j-pusher to tools section,
17125,Merge pull request #1041 from rboyer/api-fix-session-renew,Fix Session.Renew to care about 404s properly
17126,Merge pull request #1258 from jeffawang/master,website: Make the DNS Interface documentation notation consistent with functionality
17127,Make service lookup DNS documentation consistent,
17128,Make node lookup DNS documentation consistent,
17129,Merge pull request #1251 from hashicorp/sethvargo/faster_deploy,Use a faster website deploy
17130,Use a faster middleman deploy,
17131,Merge pull request #1235 from wuub/master,fix conflict between handleReload and antiEntropy critical sections
17132,panic when unbalanced localState.Resume() is detected,
17133,Merge pull request #1242 from dwijnand/fix-typos,Fix a bunch of typos.
17134,Fix a bunch of typos.,
17135,Merge pull request #1240 from hashicorp/sethvargo/link_warnings,Fix link warnings
17136,Fix link warnings,
17137,"Correct the Session.Renew{,Periodic} to handle session expiration better",
17138,Merge pull request #1187 from sfncook/enable_tag_drift_03,Enable tag drift 03
17139,Doc changes in response to review.,
17140,Docs - add verbage to anti-entropy page.,
17141,Merge pull request #1236 from scalp42/typos,remove various typos
17142,remove various typos,
17143,Update documentation for service definition,
17144,Merge pull request #1234 from jovandeginste/quote-variable,Add quotes to locations in case pwd contains spaces
17145,make Pause()/Resume()/isPaused() behave more like a semaphore,"see: https://github.com/hashicorp/consul/issues/1173 #1173 Reasoning: somewhere during consul development Pause()/Resume() and PauseSync()/ResumeSync() were added to protect larger changes to agent's localState.  A few of the places that it tries to protect are:  (a *Agent) AddService(...)      # part of the method (c *Command) handleReload(...)  # almost the whole method (l *localState) antiEntropy(...)# isPaused() prevents syncChanges()  The main problem is, that in the middle of handleReload(...)'s critical section it indirectly (loadServices()) calls  AddService(...). AddService() in turn calls Pause() to protect itself against syncChanges(). At the end of AddService() a defered call to Resume() is made. With the current implementation, this releases isPaused() ""lock"" in the middle of handleReload() allowing antiEntropy to kick in while configuration reload is still in progress. Specifically almost all services and probably all check are unloaded when syncChanges() is allowed to run. This in turn can causes massive service/check de-/re-registration, and since checks are by default registered in the critical state, a majority of services on a node can be marked as failing. It's made worse with automation, often calling consul reload in close proximity on many nodes in the cluster. This change basically turns Pause()/Resume() into P()/V() of a garden-variety semaphore. Allowing Pause() to be called multiple times, and releasing isPaused() only after all matching/defered Resumes() are called as well. TODO/NOTE: as with many semaphore implementations, it might be reasonable to panic() if l.paused ever becomes negative."
17146,Add quotes to locations in case pwd contains spaces,
17147,failing test showing that nested Pause()/Resume() release too early,see: #1173 / https://github.com/hashicorp/consul/issues/1173
17148,Rename EnableTagOverride and update formatting,
17149,Remove debug lines,
17150,Merge pull request #1233 from hashicorp/b-maint-test,Adds missing token to maint unit test.
17151,Merge remote-tracking branch 'hashicorp/master' into enable_tag_drift_03,
17152,Adds missing token to maint unit test.,
17153,Add test cases TestAgentAntiEntropy_EnableTagDrift,
17154,Update CHANGELOG.md,
17155,Merge pull request #1230 from hashicorp/f-maintfix,Respect tokens in maintenance mode
17156,agent: testing node/service maintenance using tokens,
17157,agent: thread tokens through for maintenance mode,
17158,Merge pull request #1222 from 42wim/node-aaaa-queries,Allow AAAA queries for nodeLookup
17159,Allow AAAA queries for nodeLookup,
17160,Merge pull request #1217 from 42wim/fix-rfc2308-part3,No NXDOMAIN when the answer is empty
17161,Merge pull request #1218 from hashicorp/b-typo,Fixes a typo in the telemetry docs.
17162,Fixes a typo in the telemetry docs.,
17163,Merge pull request #1214 from zendesk/fix_lock_race_2,lock.go: fix another race condition
17164,Merge pull request #1216 from hashicorp/sethvargo/update_middleman,Update Middleman
17165,Update Middleman,
17166,No NXDOMAIN when the answer is empty,
17167,Bind to loopback only as last resort,
17168,Don't try to bind on address from inactive interface,
17169,Treat 127.0.0.0/8 and 169.254.0.0/16 as private network,
17170,Merge pull request #1167 from railsguru/master,Add -http-port option to change the HTTP API port
17171,Merge pull request #1215 from hashicorp/f-ui-endpoint,agent: Always enable the UI endpoints
17172,Position it alphabetically,
17173,Update agent options section on the website,
17174,agent: Always enable the UI endpoints,
17175,Merge pull request #1194 from 42wim/fix-maxServiceResponses,Limit the DNS responses after getting the NodeRecords (fixes 0 A/AAAA responses)
17176,lock.go: fix another race condition,"The previous fix to consul lock (commit 6875e8d) didn't completely eliminate the race that could occur if the lock was acquired around the same time SIGTERM was received:  It was still possible for Run() to spawn the process via startChild() after killChild() had released the shared mutex. Now, when SIGTERM is received, we acquire a mutex that prevents spawning a new process and never release it. We've tested this fix pretty thoroughly and believe it completely resolves the issue."
17177,Limit the DNS responses after getting the NodeRecords,
17178,Merge pull request #1195 from 42wim/fix-rfc2308-part2,Return SOA/NXDOMAIN when the answer is empty
17179,Merge pull request #1211 from kikitux/master,add consul-do to community tools
17180,Update downloads_tools.html.erb,
17181,Return SOA/not found when the answer is empty,
17182,Merge pull request #1213 from mainframe/nodefabric-patch-1,Adding NodeFabric reference to Community Tools
17183,Adding NodeFabric reference to Community Tools,
17184,add consul-do to community tools,"adding consul-do Do something based on leadership status https://github.com/zeroXten/consul-do From README.md Useful for running cronjobs in HA mode. Run something like this on two or more servers:          /usr/bin/consul-do JOB-1 $(/bin/hostname) && /path/to/job1 */10 * * * * /usr/bin/consul-do JOB-2 $(/bin/hostname) && /path/to/job2 Only one of the servers will be elected leader and will therefore run the job. Should the leader fail, a follower will take over.        "
17185,Merge pull request #1200 from ryotarai/lock-pass-stdin,command/lock: Pass stdin to child process when -pass-stdin passed.
17186,Removes incorrect protocol version in change log.,
17187,website: description of -pass-stdin option,
17188,Merge pull request #1209 from hashicorp/f-downgrade,Bumps protocol version back down as we've made memberlist smarter.
17189,Bumps protocol version back down as we've made memberlist smarter.,
17190,Cleanup for guides/forwarding.html,
17191,Merge pull request #1204 from tamsky/docs/forwarding-dnsmasq-example,"add a dnsmasq example, explain the utility of 'recursors'"
17192,Explain 'recursors' behavior with an example.,
17193,"add dnsmasq example, add pointer to 'recursors'",
17194,website: document precedence of Atlas endpoint inputs,
17195,Update CHANGELOG.md,
17196,agent: reload SCADA client if endpoint changes,
17197,Merge pull request #1201 from hashicorp/f-atlas-endpoint,Configurable Atlas endpoint
17198,website: document atlas endpoint config,
17199,website: rebundle,
17200,command: atlas endpoint can be passed,
17201,agent: atlas_endpoint is configurable,
17202,Merge pull request #1199 from hashicorp/f-scada-reload,SCADA client is reload-able
17203,command/lock: Pass stdin to child process when -pass-stdin passed.,
17204,agent: log a message when making a new scada connection,
17205,agent: don't reload scada client if there is no config change,
17206,agent: testing scada client creation in command,
17207,agent: test scada HTTP server creation,
17208,agent: clean up scada connection manager,
17209,website: add atlas token/infra to reloadable config,
17210,agent: document the scada http creation func,
17211,agent: scada client and HTTP server are tracked separately,
17212,Merge pull request #1197 from hashicorp/b-doc-fix,Clarifies services docs a bit.
17213,Clarifies services docs a bit.,
17214,Merge pull request #1175 from macb/testing_getPrivateIP,consul: refactor GetPrivateIP for testability
17215,Merge pull request #1192 from kikitux/master,update: add consul-cli to downloads_tools.html.erb
17216,update: add consul-cli to downloads_tools.html.erb,update: add consul-cli to downloads_tools.html.erb
17217,Remove duplicate code,
17218,Use Ports.HTTP directly,
17219,Add documentation for http-port option,
17220,Merge remote-tracking branch 'hashicorp/master' into enable_tag_drift_03,
17221,Update tests - NodeService init needs bool,
17222,Merge pull request #1174 from hashicorp/b-fix-typo,"Fixes a typo in the event docs, and twiddles the formatting."
17223,Add EnableTagDrift logic to command/agent/local.go,
17224,Remove from command/agent/config_test.go,
17225,Remove from testutil/server.go,
17226,EnableTagDrift in NodeService struct,
17227,consul: refactor GetPrivateIP for testability,
17228,Merge pull request #1166 from hashicorp/f-dns-log,Log network address of DNS clients
17229,Merge pull request #1161 from hashicorp/b-website-vagrantfile,website/Vagrantfile works again.
17230,"Fixes a typo in the event docs, and twiddles the formatting.",
17231,Merge pull request #1170 from hashicorp/b-connection-spam,Fixes #1165 by having threads wait for any outstanding connect to finish.
17232,"Changes to an unbuffered channel, since we just close it.",
17233,Cleans up locking and factors markForUse into a Conn method.,
17234,Gets rid of follow up attempts if the lead thread can't connect.,
17235,Adds missing ref count for the race condition case.,
17236,Fixes #1165 by having threads wait for any outstanding connect to finish.,
17237,agent: log network address of DNS clients,
17238,Add -http-port option to change the HTTP API port,This is useful when pushing consul to PaaS like Cloud Foundry making the HTTP API easily routable.
17239,"revert 8bf8871, fc2aad3, 503d338.",some misplaced UI development changes
17240,ui: update development config to not use ACLs to simplify life,
17241,ui: update gems for development,
17242,"ui: add 'map' route and button, tighten up the nav to give space",
17243,Merge pull request #1160 from hashicorp/docs-reaping-left-nodes,Added detail about left/failed nodes and 72h reaping
17244,website/Vagrantfile works again., Added gpg key Updated to ruby 2.2.2 bundle -> bundle update
17245,Added detail about left/failed nodes and 72h reaping,Ref: https://groups.google.com/forum/#!searchin/consul-tool/left/consul-tool/KVl0u91uCdw/bfzrUO4r-1QJ
17246,Merge pull request #1158 from mfischer-zd/fix_1155,lock.go: fix race condition
17247,lock.go: fix race condition,Fix a race condition between startChild() and killChild() that could lead to an orphaned managed process. Fixes #1155
17248,Merge pull request #1146 from hashicorp/website-broken-link,website: fix broken link on acl page
17249,website: fix broken link on acl page,
17250,Merge pull request #1145 from jrgarcia/trim-trailing-slash-lock,Remove trailing slash from lock
17251,Remove trailing slash from lock,Lock command will remove trailing slash from path (as it is invalid). Fixes #1136.
17252,Merge pull request #1143 from hashicorp/GH-1142,Check NXDOMAIN after filtering nodes
17253,Test for GH-1142.,
17254,Merge pull request #1137 from 42wim/fix-1124,Recurse when PTR answer is empty
17255,Check NXDOMAIN after filtering nodes,Move the check for NXDOMAIN below the service health filter.
17256,update analytics,
17257,Merge pull request #1141 from hashicorp/f-travis,Try moving to newer Travis-CI infrastructure
17258,travis-ci: skip syslog tests for container-based travis infra,
17259,Merge pull request #1140 from hashicorp/h-acl,Filter services when using ChecksInState.
17260,travis-ci: use newer build infra,
17261,consul: filter services by ACL when using ChecksInState.,
17262,Recurse when PTR answer is empty,
17263,Merge pull request #1130 from pdf/check_socket,Add Socket check type
17264,Document TCP check type,
17265,Merge pull request #1090 from hashicorp/f-keyring-acl,Keyring ACLs
17266,Add TCP check type,"Adds the ability to simply check whether a TCP socket accepts connections to determine if it is healthy.  This is a light-weight - though less comprehensive than scripting - method of checking network service health. The check parameter tcp should be set to the address:port combination for the service to be tested.  Supports both IPv6 and IPv4, in the case of a hostname that resolves to both, connections will be attempted via both protocol versions, with the first successful connection returning a successful check result. Example check: json {   ""check"": {     ""id"": ""ssh"",     ""name"": ""SSH (TCP)"",     ""tcp"": ""example.com:22"",     ""interval"": ""10s""   } }"
17267,agent: disable ACLs for RPC client tests,
17268,Merge pull request #1128 from kongchen/master,Fix the display issue in consul ui
17269,fix base64 issue,
17270,fix 中文乱码问题,
17271,Merge pull request #1119 from trumant/multiple_private_IPs,Fixes #1099 by raising an error when we multiple private IPs are found
17272,command/lock: Check for shutdown during lock acquisition. Fixes #800,
17273,Merge pull request #1080 from zendesk/master,Return every time lock acquisition fails
17274,Merge pull request #1127 from carlpett/master,Fix missing config-dir in getting started guide
17275,Return every time lock acquisition fails,
17276,Fix missing config-dir in getting started guide,
17277,Fixes #1099 by raising an error when we multiple private IPs are found,
17278,Merge pull request #1093 from buddhamagnet/master,Switch to more idiomatic var syntax
17279,Merge pull request #1112 from drawks/iss-1111,Fix issue #1111 - vagrant cluster demo doesn't work
17280,Fix issue #1111 - vagrant cluster demo doesn't work,Switch demo Vagrantfile to use official debian 7 base box and reflect change in the README
17281,agent: vet fixes,
17282,consul: fixes for events and related tests,
17283,Merge pull request #1109 from hashicorp/sethvargo/rack_protection,Use Rack::Protection
17284,Use Rack::Protection,
17285,Update middleman-hashicorp,
17286,Merge pull request #995 from 42wim/rfc2308-soa-ttl,Send SOA with negative responses (RFC2308)
17287,Merge pull request #1094 from BrianHicks/website/ciscocloud-consul-tools,website: add marathon-consul and mesos-consul
17288,website: add marathon-consul and mesos-consul,
17289,switch to more idiomatic var syntax,
17290,agent: testing keyring ACLs,
17291,acl: adding negative tests for bad policy,
17292,website: docs for keyring ACLs,
17293,acl: more keyring tests,
17294,"acl: allow omitting keyring policy, add tests",
17295,acl: keyring policy uses a flat string,
17296,agent: write-level keyring ACLs work,
17297,agent: read-level keyring ACLs work,
17298,Merge pull request #1087 from edwardbadboy/master,Website: Delete the unnecessary backslash at the end shell command line
17299,Website: Delete the unnecessary backslash at the end shell command line,"Shell thinks '\' as line continuation only when it's unquoted or in double quotes. It's not necessary to manually mark '\' in single quotes, because when shell sees the a single quote starts, it continues the line automatically until it sees the matching single quote ends. Thus, echo 'a\   b' would give the following output a\   b And echo 'a   b' gives the following output a   b Since we don't want to leave backslashes in the resulting json files, we should remove the line continuation backslashes inside single quotes."
17300,acl: initial pass at keyring ACLs,
17301,consul: fixing test using wrong FSM,
17302,Merge pull request #1046 from hashicorp/f-event-acl,Event ACLs
17303,agent: remove unnecessary EventFire function,
17304,Merge pull request #1074 from ketzacoatl/patch-1,Minor improvement to acl_master_token docs
17305,Minor improvement to acl_master_token docs,"Confirm the expected format, and what happens if not provided."
17306,Merge pull request #1029 from hashicorp/f-travis,"Use test target for travis-ci, remove flowdock"
17307,Merge pull request #1066 from norbertpotocki/master,Add cfg4j to website (community projects section)
17308,restore alphabetical order,
17309,add cfg4j communicty project,
17310,Merge pull request #1055 from thorduri/master,gc duplicate platform variable
17311,website: adding tag/service name dns compliance docs,
17312,gc duplicate platform variable,
17313,Update CHANGELOG.md,
17314,Merge pull request #1004 from i0rek/advertise_addrs,Add advertise_addrs.
17315,"Implement advertise_addrs for SerfLan, SerfWan and RPC.","Fixes #550. This will make it possible to configure the advertised adresses for SerfLan, SerfWan and RPC. It will enable multiple consul clients on a single host which is very useful in a container environment. This option might override advertise_addr and advertise_addr_wan depending on the configuration. It will be configureable with advertise_addrs. Example: {   ""advertise_addrs"": {     ""serf_lan"": ""10.0.120.91:4424"",     ""serf_wan"": ""201.20.10.61:4423"",     ""rpc"": ""10.20.10.61:4424""   } }"
17316,website: document -token parameter for exec/event commands,
17317,command: remote exec takes -token parameter,
17318,command: event command supports -token arg,
17319,Update CHANGELOG.md,
17320,Merge pull request #1050 from highlyunavailable/master,Add RFC 6598 private IP range
17321,website: link to check pass/fail endpoint docs from checks page,
17322,Add RFC 6598 private IP range,Fixes #1031 by adding 100.64.0.0/10 as a private IP range.
17323,website: fix event acl policy docs,
17324,acl: fix spelling in tests,
17325,website: add docs for user event acls,
17326,agent: avoid masking errors when ACLs deny a request,
17327,agent: testing user event endpoint ACLs,
17328,consul: always fire events from server nodes,
17329,consul: use acl cache struct in server,
17330,consul: split ACL cache into a reusable struct,
17331,agent: enforce event policy during event fire,
17332,consul: check ACLs when firing events,
17333,acl: support for user events,
17334,website: fix mention of read-only policy for service acls,
17335,Merge pull request #1042 from hashicorp/b-broken-vagrantfile,Fixes the Vagrantfile on VMWare.
17336,Fixes the Vagrantfile on VMWare.,
17337,Merge pull request #1037 from siddharthist/docs/health-check-user,Specified which user health checks get run as.
17338,Specified which user health checks get run as.,Fixes issue #1036
17339,website: document passing ACL tokens in catalog register/deregister,
17340,Merge pull request #1030 from gogolok/api_run_acl_tests_by_default,api: run ACL tests by default
17341,Send SOA with negative responses,
17342,api: run ACL tests by default,
17343,Merge pull request #1028 from sebastianmarkow/master,Remove unreachable error handling in AgentRPC.listen()
17344,"Use test target for travis-ci, remove flowdock",
17345,consul: fast path a typed nil during ACL filtering,
17346,agent: testing dns when acls are in use,
17347,agent: dns uses the configured token during queries,
17348,consul: Remove unreachable error handling,
17349,Update CHANGELOG.md,
17350,Merge pull request #1027 from ctheune/master,Clarify keyprefix behaviour in docs
17351,Wording.,
17352,Make behaviour of keyprefixes always matching all keys in a prefix more clear.,
17353,"agent: don't replace empty tokens in the logs, fixes #1020",
17354,Merge pull request #1024 from hashicorp/f-discovery-acl,Service Discovery ACLs
17355,website: add a note in the upgrade notes for 0.6 discovery ACLs,
17356,website: add note about anonymous token and discovery ACLs,
17357,consul: fail badly if an unsupported type is passed to the ACL filter,
17358,agent: fix failing test,
17359,Merge pull request #1021 from gogolok/testutil_acl_support,"testutil: support ACLMasterToken, ACLDatacenter and ACLDefaultPolicy"
17360,consul: fix log message,
17361,website: document service discovery ACLs,
17362,consul: testing acl filters in isolation,
17363,consul: better tests for acl filtering,
17364,consul: testing internal endpoint acl filtering,
17365,consul: rename function to avoid collision and clean up,
17366,consul: break acl filtering into a separate struct,
17367,consul: testing health endpoint service acl filtering,
17368,"testutil: support ACLMasterToken, ACLDatacenter and ACLDefaultPolicy",
17369,consul: testing catalog endpoint acl filtering,
17370,consul: begin testing discovery ACLs,
17371,consul: use anonymous function for acl filtering,
17372,consul: filter internal endpoints for acls,
17373,acl: initial pass at service discovery acls,
17374,Merge pull request #1018 from mrwacky42/master,Spleling.
17375,Spleling.,
17376,Merge pull request #1016 from hashicorp/b-broken-kv-test,Fixes a broken unit test introduced by #834.
17377,Fixes a broken unit test introduced by #834.,
17378,Merge pull request #1008 from highlyunavailable/master,Check to see why a lock acquisition failed
17379,Merge pull request #1009 from hashicorp/f-persist-status,Persist check state for TTL checks
17380,agent: use persist/load/purge convention for function names,
17381,Merge pull request #1014 from hashicorp/sethvargo/control_out,Allow the user to control the output of the test server
17382,Allow the user to control the output of the test server,
17383,Merge pull request #1002 from sathiyas/terraform-aws-centos,centos6 Initial commit
17384,agent: test check state restoration from AddCheck,
17385,website: document TTL check persistence,
17386,agent: check state is purged if expired,
17387,agent: purge check state when checks are deregistered,
17388,"agent: testing state persistence, recovery, and expiration",
17389,agent: first stab at persisting check state,
17390,Merge pull request #834 from apoydence/master,Returns an error for a key with a '/'
17391,Check to see why a lock acquisition failed,
17392,"agent: refactor loadChecks/loadServices, fixes a few minor bugs",
17393,Update CHANGELOG.md,
17394,Merge pull request #996 from hashicorp/f-tcp-pings,Bumps protocol version to 3 to get serf version 5.
17395,Merge pull request #1000 from siddharthist/docs/interval-clarification,Clarify how intervals are parsed
17396,Clarify how intervals are parsed,"Current docs only show second intervals and do not specify other valid options, this commit specifically outlines how the times are parsed."
17397,centos6 Initial commit,
17398,Bumps protocol version to 3 to get serf version 5.,
17399,Update CHANGELOG.md,
17400,Merge pull request #988 from rafikk/master,UI: Fix restoring state for service names containing slashes
17401,Merge pull request #992 from sathiyas/terraform-aws-rhelcentos-enhancement,Terraform aws rhel6 enhancement
17402,AMI changes to reflect latest HVM and instance type changes to t2.micro,
17403,Merge pull request #994 from andrewortman/patch-2,Fix confusing statement about BoltDB upgrade for 0.5.2
17404,Update upgrade instructions for 0.5.2,"The docs were confusing as to whether or not 0.5.2 includes the migration tool, which it does. This edit should make it more clear for the end user"
17405,removed kill signal INT from upstart,
17406,adding README,
17407,Merge pull request #991 from hashicorp/lock-typo,"Fix typo, probably"
17408,fix typo,
17409,variable changes for instance types,
17410,Rename rhel to rhel6,
17411,Adding rhel scripts and changes for rhel paramaters,
17412,moved scripts/* under scripts/ubuntu to add support for other platforms,
17413,agent: don't replace config on SIGHUP if parsing fails,
17414,UI: Fix restoring state for service names containing slashes,
17415,Merge pull request #986 from ceh/skip-testsetfilepermissions-windows,command/agent: skip unix file permissions test on windows
17416,command/agent: skip unix file permissions test on windows,
17417,Merge pull request #983 from spencergibb/patch-1,add Spring Cloud Consul to Community tools
17418,add Spring Cloud Consul to Community tools,"Spring Cloud provides tools for JVM developers to quickly build some of the common patterns in distributed systems (e.g. configuration management, service discovery, circuit breakers, intelligent routing, micro-proxy, control bus, one-time tokens, global locks, leadership election, distributed sessions, cluster state). We have just released the first milestone of Spring Cloud Consul (announcement blog post, github repo). This implements configuration management, service discovery and the control bus using the Consul HTTP API. In the future we plan to implement global locks, leadership election, distributed sessions using Consul."
17419,website: add status field for check registration in http docs,
17420,website: document setting initial status of health checks in config,
17421,website: be explicit about grace period in lock command,
17422,Merge pull request #979 from hashicorp/b-expired-test-certs,"Reissues cert for the unit tests, which expired a few days ago."
17423,"Reissues cert for the unit tests, which expired a few days ago.",
17424,Merge pull request #977 from sdboyer/master,nit: Condense switch fallthroughs into expression lists
17425,Separate cases is better when its more verbose,
17426,Condense switch fallthroughs into expr lists,
17427,Merge pull request #974 from hashicorp/b-vagrantfile-syntax,Vagrantfile: fix provider syntax
17428,Vagrantfile: fix provider syntax,No provider config was being set.
17429,Merge pull request #964 from sathiyas/fix-terraform-aws-variables,Fix terraform aws variables
17430,Merge pull request #969 from tgwizard/members-command-sorted,Sort output in the consul members command
17431,Sort members in by name for consul members,
17432,Sort tags in consul members -detailed output,
17433,Merge pull request #966 from trumant/arch_diagram_network_ports,Adding networking info to the arch diagram
17434,Adding networking info to the arch diagram,
17435,Added tags for EC2 instances,
17436,Merge pull request #961 from hashicorp/b-cleanup-vagrantfile,Cleans up Vagrantfile.
17437,agent: flush progress info to console during migrations,
17438,Cleans up Vagrantfile., Fixes up permissions so make runs cleanly after bringing up an environment. Adds better use of variables for Go paths. Adds a note about the ancient boxes. Silences wget spam while provisioning.
17439,Merge pull request #955 from amirkibbar/master,added gradle-consul-plugin to the community tools
17440,added gradle-consul-plugin to the community tools,
17441,Fixing yanked gem,
17442,Bump version references,
17443,Adding dep,
17444,Update version,
17445,Update CL,
17446,Merge pull request #951 from carlanton/http-user-agent,Set the User Agent for HTTP health checks
17447,Set the User Agent for HTTP health checks,
17448,Merge pull request #941 from highlyunavailable/remove-DefaultSemaphoreRetryTime,Remove unused DefaultSemaphoreRetryTime
17449,Merge pull request #946 from tgwizard/include-dc-in-members-output,Include DC in the members command output
17450,Include DC in the members command output,
17451,Merge pull request #945 from highlyunavailable/cdotnet,Add Consul.NET to the tools page
17452,Add Consul.NET to the tools page,Fixes #944
17453,Merge pull request #943 from hashicorp/sethvargo/update_middleman,Use new middleman-hashicorp
17454,Use new middleman-hashicorp,
17455,Remove unused DefaultSemaphoreRetryTime,"Fixes #932 DefaultSemaphoreRetryTime is actually unused, unlike DefaultLockRetryTime."
17456,Merge pull request #939 from hashicorp/f-leak,Fixing memory leak caused by blocking query
17457,consul: adding StopWatch test,
17458,consul: lower default query time and add small stagger,
17459,consul: adding randomStagger util method,
17460,consul: proactively clear timers,
17461,consul: ensure blocking query cleans any lingering state,
17462,consul: Adding methods to stop watching for changes,
17463,consul: adding Clear to NotifyGroup,
17464,Merge pull request #936 from ceh/intro-getting-started-join-typo,website: fix typo
17465,website: fix typo,"Clarify that the user is assured that Consul will listen to a specific address when specifying a bind address, rather than providing some kind of insurance policy."
17466,Cutting 0.5.1,
17467,Fixed typo in tag section,
17468,agent: log a message when data migrations start,
17469,Merge pull request #931 from colinrymer/patch-1,Typo fix
17470,Typo fix,
17471,api: improve test reliability,
17472,Cutting v0.5.1,
17473,Fix tests after merge,
17474,Tagging as 0.5.1 RC,
17475,CL updates,
17476,Merge pull request #927 from hashicorp/f-tls,Add new verify_server_hostname to mitigate possibility of MITM
17477,CL updates,
17478,Merge branch 'Heuriskein-master',
17479,Fixing merge conflict,
17480,website: document the new TLS changes,
17481,test: Adding hostname certs,
17482,tlsutil: Testing hostname verification,
17483,tlsutil: Testing VerifyServerHostname on OutgoingConfig,
17484,agent: copy config into consul config,
17485,consul: support the new TLS wrapper,
17486,tlsutil: Adding wrappers for hostname verification,
17487,agent: Adding new VerifyHostname config,
17488,consul: thread the target DC through the RPC path,
17489,consul: use tlsutil.Wrapper instead of tls.Config directly,
17490,tls: define wrapper type,
17491,Merge pull request #926 from cruatta/multiple-config-dir-help-text,Multiple config dir help text
17492,Adding docs about configuration directory sub-directories,
17493,Adding documentation about specifying multiple configuration directories,
17494,command: fix configtest help format,
17495,website: link and formatting adjustments for configtest command,
17496,Merge pull request #904 from josephholsten/configtest-clean,add minimal configtest command
17497,"Added access/secret key variables and added Tag to instances, removed egress section since it comes by default",
17498,testutil: key leader wait on bootstrap flag,
17499,"testutil: allow skipping leader wait, update example",
17500,command/configtest: add,
17501,Merge pull request #912 from rojojo23/renew-periodic,modify RenewPeriodic to retry failed Renew until TTL elapses
17502,Merge pull request #921 from hashicorp/b-tf-module-typo,terraform/aws module: typo
17503,consul: updating for Raft API changes,
17504,terraform/aws module: typo,This is what I get for thinking that the GitHub in-browser editor would be sufficient. -_-
17505,Merge pull request #920 from hashicorp/tf-module-0.5-compat,Add egress rule to SG for TF 0.5 compat
17506,Add egress rule to SG for TF 0.5 compat,"See ""NOTE on Egress rules"" here http://www.terraform.io/docs/providers/aws/r/security_group.html As reported here: https://github.com/hashicorp/terraform/issues/1873"
17507,Merge pull request #919 from hashicorp/f-parallel,api: run tests in parallel
17508,api: run tests in parallel,
17509,consul: more telemetry on RPCs and queries,
17510,Merge pull request #918 from hashicorp/h-checkfix,Deregister all associated checks on service deregistration
17511,agent: use service ID field to determine associated health checks during deregister,
17512,Merge pull request #914 from mkostrikin/patch-2,Change upstart stop consul result
17513,Change upstart stop consul result,
17514,modify RenewPeriodic to retry failed Renews until TTL elapses,
17515,agent: restore check status when re-registering (updating) services,
17516,website: Document peers api consistency. Fixes #880,
17517,website: Update ACL description to longest-prefix,
17518,Merge pull request #905 from maver1ck/master,Consul prefix services ACLs
17519,Merge pull request #909 from hashicorp/f-create,Support ACL upsert behavior
17520,Merge pull request #910 from hashicorp/f-update-persisted,Update agent-persisted services/checks
17521,agent: allow persisted services to be updated on disk,
17522,Merge pull request #891 from hashicorp/f-token,ACL tokens for service/check registration
17523,consul: Adding flag to support future incompatible commands. Future self will thank me.,
17524,website: Document new ACL upsert behavior,
17525,agent: Support ACL upserting,
17526,consul: ACL.Apply allows upserting with custom ID,
17527,agent: Adding test for DNS enable_truncate,
17528,command/agent: Lowercase DC. Fixes #761,
17529,consul: fixing overly redundant logging,
17530,Consul prefix services ACLs,
17531,agent: use an additional parameter for passing tokens,
17532,Merge pull request #816 from pepov/master,Support different advertise address for WAN gossip
17533,api: Fixing test compilation issue,
17534,Merge pull request #861 from fraenkel/reclaim_lock,Reclaim locks
17535,Merge pull request #902 from hashicorp/f-stats-prefix,Allow configuring the stats prefix
17536,Merge pull request #862 from hashicorp/f-recurse-cname,Return all CNAME's during service DNS resolution
17537,Merge pull request #884 from artushin/check-update-stagger,Check update stagger
17538,website: FAQ for delta updates,
17539,Move diplomat to SDK section.,
17540,Merge pull request #900 from sandstrom/patch-1,Include diplomat
17541,website: document statsite_prefix option,
17542,agent: allow configuring the stats prefix,
17543,Include diplomat,
17544,Reclaim locks," When attempting to lock with the same session that already owns the lock,   Lock() will re-acquire the lock."
17545,website: document service and check acl options,
17546,agent: more tests,
17547,agent: restore tokens for services and checks in config,
17548,agent: backwards compat for persisted services from pre-0.5.1,
17549,agent: safer read methods for tokens,
17550,agent: test coverage loading service/check tokens from persisted files,
17551,agent: fix deadlock reading tokens from state,
17552,agent: add service/check token methods to reduce invasiveness,
17553,agent: persist tokens from API registrations,
17554,agent: initial pass threading through tokens for services/checks,
17555,Upgrade Ruby,
17556,Upgrading to Cedar-14,
17557,Update middleman-hashicorp,
17558,Merge pull request #888 from evtuhovich/master,Fix ambiguity in server start
17559,Fix disambiguty,"When i look how to start server, a read ""simply start new server with the -server flag"" and understand nothing. I think ""agent"" is a correct word here."
17560,remove config,
17561,use existing randomStagger,
17562,add CheckUpdateStagger to MergeConfig,
17563,adding check_update_stagger,
17564,Merge pull request #881 from hashicorp/f-testharness,Move test harness into testutil
17565,testutil: add a readme with sample usage,
17566,testutil: error instead of panic,
17567,Merge pull request #879 from vgv/master,Fix invalid link to sessions page
17568,Fix invalid link to sessions page,
17569,Merge pull request #878 from c4milo/patch-1,Upstart: Consul leave now works as expected.
17570,Upstart: Consul leave now works as expected.,
17571,Merge pull request #874 from cruatta/add-service-id-to-api-docs,Updating the docs to include information about registering a check with a ServiceID.
17572,Caps not necessary here,
17573,Updating the docs to include information about registering a check with,a serviceid.
17574,Merge pull request #872 from KFishner/hashicorp-ecosystem,"Add ""Consul and the HashiCorp ecosystem"""
17575,ampersand,
17576,add consul and the hc ecosystem,
17577,Website: minor fix for docs/agent/http/agent.html.,
17578,Website: cleanup for docs/internals/sessions.html.,
17579,agent: re-work DNS tests to not rely on the external network,
17580,agent: pass through CNAME types for service resolution,
17581,agent: Add test for CNAME recursion,
17582,agent: parse raw query URL to avoid closing the request body early,
17583,Website: cleanup for docs/internals/security.html.,
17584,Remove 'unknown' as one of the valid states when setting the initial state of a check.,
17585,Website: minor tweaks for docs/internals/jepsen.html.,
17586,Merge pull request #860 from hashicorp/f-hide-tokens,Hide tokens from logs and monitor
17587,agent: hide tokens from logs and monitor,
17588,Merge pull request #858 from Heuriskein/mktempbackwardscompat,Add XXX to the end of mktemp template to support more linux versions.
17589,Allow specifying a status field in the agent/service/register and agent/check/register endpoints.,"This status must be one of the valid check statuses: 'passing', 'warning', 'critical', 'unknown'. If the status field is not present or the empty string, the default of 'critical' is used."
17590,Add XXX to the end of mktemp template to support more linux versions.,
17591,Website: fix caps issue in docs/internals/consensus.html.,
17592,Build consul to a temp dir for API tests,
17593,Website: revert link to securing Consul doc since it's not ready yet.,
17594,Website: minor additional tweaks for docs/internals/consensus.html.,
17595,"Website: cleanup for docs/internals/consensus.html, including removing LMDB references in favor of BoltDB per GH-857.",
17596,agent: Don't attempt migration on new server,
17597,Update CHANGELOG.md,
17598,Merge pull request #857 from hashicorp/f-boltdb,Raft uses BoltDB
17599,website: add example cli output from migration,
17600,website: add mention of consul-migrate,
17601,Merge pull request #850 from hashicorp/f-ae-missing,Anti-entropy sync services/checks missing entirely from Consul
17602,agent: handle nil node services in anti-entropy,
17603,Merge pull request #784 from byu/master,Add Terraform Variable for AWS instance type
17604,Merge pull request #844 from mkostrikin/patch-1,Small tip for gracefull kill
17605,Merge pull request #846 from parasitid/master,Adds terraform openstack provider support
17606,command: automatically migrate raft data on start,
17607,agent: fix anti-entropy check sync,
17608,agent: test anti-entropy sync,
17609,agent: anti-entropy sync services/checks if they don't exist in the catalog,
17610,website: fix typo,
17611,Adds terraform openstack provider support,
17612,version update for dev,
17613,consul: do not clear connection cache on RPC errors,
17614,Small tip for gracefull kill,
17615,"Website: GH-831, mention that https port must be specified to start an https listener.",
17616,agent: fix dns test,
17617,Merge pull request #827 from mfischer-zd/lock_sigterm,Handle SIGTERM when running commands
17618,Returns an error for a key with a '/',
17619,Merge pull request #833 from mgood/dns-startup-hooks,Simplify DNS server startup check
17620,Remove unnecessary DNS test entry,"By using the startup callbacks, the DNS test entry is not needed to check that the server is alive."
17621,Use DNS server startup callbacks,"Simplify waiting for the DNS server to start with the newer ""NotifyStartedFunc"" callback."
17622,Website: GH-826 fix anchor links in /docs/agent/watches.html.,
17623,Change node name based on idx,
17624,Handle SIGTERM when running commands,"Make Consul treat SIGTERM like it does SIGINT when running commands. This is especially important when running Consul as a daemon, since Unix process managers send SIGTERM to restart or terminate a process. This change is untested on Windows. Fixes hashicorp/consul#797"
17625,Website: tweaks to docs/internals/architecture.html.,
17626,Website: very minor tweaks to docs/internals/anti-entropy.html.,
17627,Website: more cleanup for docs/internals/acl.html.,
17628,Website: GH-781 and cleanup for docs/internals/acl.html.,
17629,update the docs: add advertise-wan cli and advertise_addr_wan json config,
17630,add and test -advertise-wan cli flag,
17631,add test using separate advertise addresses for wan and for lan,
17632,add AdvertiseAddrWan to TestMergeConfig and use different values for Addr values in b than in a,
17633,Add configuration option to specify a separate address for advertising on the wan,
17634,Merge pull request #823 from silas/doc-link-fix,Fix create session link in semaphore guide
17635,Fix create session link in semaphore guide,
17636,Update CHANGELOG.md,
17637,website: document minimum session TTL setting,
17638,Merge pull request #821 from fraenkel/sessionttlmin,Support SesionTTLMin configuration
17639,Website: GH-730 for docs/guides/manual-bootstrap.html.,
17640,Support SesionTTLMin configuration, Allow setting SessionTTLMin Validate on the Server
17641,consul: swap over to raft-boltdb,
17642,Website: GH-730 for docs/agent/watches.html.,
17643,Website: GH-730 for docs/agent/telemetry.html.,
17644,Website: GH-730 for docs/agent/encryption.html,
17645,testutil: add ListKV method,
17646,"testutil: disable checkpoint, fix waitForLeader",
17647,testutil: bind to localhost address,
17648,Website: GH-730 for docs/agent/dns.html.,
17649,Website: GH-730 for docs/internals/acl.html.,
17650,Website: cleanup for docs/internals/index.html.,
17651,testutil: helpers return responses,
17652,Merge pull request #805 from discordianfish/add-domain-flag,Add -domain command line flag to agent
17653,Add -domain command line flag to agent,This makes it possible to configure the domain on the command line additionally to the config file.
17654,Merge pull request #806 from vgv/master,Update downloads_tools.html.erb
17655,Update downloads_tools.html.erb,Fix typo
17656,testutil: test server supports domain sockets,
17657,testutil: support retrieving kv pairs,
17658,testutil: support joining and specifying datacenters,
17659,testutil: Use HTTPAddr,
17660,testutil: server comments,
17661,testutil: Support creating additional checks,
17662,testutil: allow creation of services,
17663,testutil: working on helpers,
17664,testutil: exposing the API address from the test server,
17665,testutil: initial pass at moving test server harness into testutil,
17666,Website: change order of UIs listed in intro/getting-started/ui.html.,
17667,Merge branch 'master' of github.com:hashicorp/consul,
17668,Website: GH-730 and cleanup for intro/getting-started/ui.html.,
17669,Merge pull request #799 from tummychow/https-docs,Document some configuration for HTTPS
17670,Add doc notes for HTTPS API, the HTTPS API address can be configured just like any other address the verify_incoming setting also applies to the HTTPS API
17671,Merge pull request #794 from hashicorp/sethvargo/default_envvars,Read select environment variables in the API client
17672,Website: cleanup for node reaping detail in the FAQ.,
17673,Website: add node reaping detail to the FAQ.,
17674,Read select environment variables when generating the default configuration,
17675,Website: cleanup for intro/getting-started/kv.html.,
17676,Website: cleanup for intro/getting-started/checks.html.,
17677,Merge pull request #785 from ryanbreen/join-doc,Website: substantial rewrite of intro/getting-started/join.html
17678,agent: disable HTTP keepalives for checks,
17679,Website: a few additional tweaks to intro/getting-started/join.html.,
17680,Website: substantial rewrite of intro/getting-started/join.html.,
17681,Add Terraform Variable for AWS instance type,"Details: * Adds an input variable to the consul terraform template module to   allow a user of the module to specify a different   AWS instance type to launch. * The default is still ""m1.small"". * The module input variable is named ""instance_type""."
17682,Website: GH-730 and cleanup for intro/getting-started/services.html,
17683,Website: cleanup for intro/vs/zookeeper.html.,
17684,main: do not process -v or --version after a '--',
17685,agent: warn and purge checks which cannot be restored from agent state,
17686,Website: cleanup for intro/vs/smartstack.html.,
17687,Website: cleanup for intro/vs/skydns,
17688,Merge pull request #773 from hashicorp/button_overflow,make sure button text overflow is set to ellipsis
17689,make sure button text overflow is set to ellipsis,fixes #549
17690,website: Adding some SDK links,
17691,Merge pull request #771 from hashicorp/h-utm,fix utm param
17692,fix utm param,
17693,website: Clarify consistency in FAQ,
17694,website: Formating fix,
17695,website: Update FAQ about UDP multicast,
17696,Website: cleanup for intro/vs/serf.html,
17697,Website: clean up intro/vs/nagios-sensu.html.,
17698,Website: tweaks to intro/vs/custom,
17699,Website: minor tweaks to intro/vs/chef-puppet.,
17700,Merge pull request #763 from bpot/fix-session-doc-typo,website: default health check is 'serfHealth'
17701,website: default health check is 'serfHealth',
17702,website: Fixing documentation bug,
17703,Website: cleanup for docs/faq.html.,
17704,Merge pull request #759 from KFishner/consul-atlas,Explain how consul and atlas work together
17705,fix utm typo,
17706,explain how consul and atlas work together,
17707,Merge pull request #755 from fourcube/master,Add 'ServiceAddress' field to 'CatalogService's truct
17708,Website: GH-751 Link to anti-entropy doc everywhere that the term is used.,
17709,Add 'ServiceAddress' field to 'CatalogService's truct,
17710,website: fix typo in anti-entropy docs,
17711,Merge pull request #751 from hashicorp/f-ae-doc,Document anti-entropy internals
17712,website: adjustments to anti-entropy docs,
17713,website: first pass at anti-entropy docs,
17714,Merge pull request #749 from ryanbreen/GH-747,Website: GH-747 Add docs on acl_master_token installation.
17715,Website: GH-747 change acl_master token to acl_master_token,
17716,Website: GH-747 Add docs on acl_master_token installation.,
17717,Merge pull request #745 from highlyunavailable/NRC-docs,Add information about Negative Response Caching
17718,Add information about Negative Response Caching,Fixes #743
17719,Website: improve flow between getting-started docs.,
17720,Merge branch 'master' of github.com:hashicorp/consul,
17721,Website: cleanups for intro/getting-started/install.html,
17722,Merge pull request #744 from ryanbreen/outage_doc_rework,Website: rework docs/guides/outage.html
17723,Website: remove confusing language from docs/guides/outage.html,
17724,Website: rework docs/guides/outage.html to cover cases where recovery might be easier than manual removal of failed nodes from peers.json.,
17725,Website: GH-730 and cleanup for docs/guides/semaphore.html,
17726,Website: GH-730 and cleanup for docs/guides/outage.html,
17727,Website: GH-730 and cleanup for docs/guides/datacenters.html,
17728,Website: GH-730 and cleanup for docs/guides/leader-election.html.,
17729,Website: Cleanup for docs/guides/external.html.,
17730,Website: cleanup for docs/guides/forwarding.html.,
17731,Website: GH-730 links and clean-up for /docs/guides/dns-cache.html,
17732,Website: GH-730 links for /docs/guides/atlas.html,
17733,Be consistent in docs about Consul Replicate vs consul-replicate,
17734,Adding the dep file for 0.5.0,
17735,Merge pull request #736 from ryanbreen/GH-730,Website: GH-730 (deep link into options and commands where appropriate)
17736,Merge branch 'master' of github.com:hashicorp/consul into GH-730,
17737,Website: Add links to options and commands referenced in docs/agent/basics.html and docs/guide/bootstrapping.html.,
17738,api: remove unneeded static config,
17739,"Manually specify anchors for each LI in options.html.  This is necessary because the middleman-hashicorp logic only inserts anchors if the body of the LI contains no links.  For consistent presentation, we need to specify all anchors rather than relying on middleman.",
17740,Merge branch 'master' of github.com:hashicorp/consul into GH-730,
17741,website: Force deploy (newline),
17742,Website: /docs/agent/options Fix internal links in options.html to match the anchors created by middleman-hashicorp.,
17743,Merge pull request #732 from hashicorp/f-merge-err,consul: allow returning custom error for merge delegate
17744,Merge branch 'master' of github.com:hashicorp/consul,
17745,Website: docs/agent/options.html Fix config-file reference.,
17746,Merge pull request #723 from hashicorp/f-agent-block,Block until service/check sync is attempted from /v1/agent API's
17747,website: document -recursor arg for agent cli,
17748,website: update middleman-hashicorp,
17749,command: clarify -recursor agent arg,
17750,Merge pull request #724 from zoli/master,Support multiple recursor flag
17751,Website: Cleanup for docs/guides/bootstrapping,
17752,consul: allow returning custom error for merge delegate,
17753,Merge pull request #726 from ryanbreen/atlas,Website: cleanup for docs/guides/atlas.
17754,Website: cleanup for docs/guides/atlas.,
17755,Support multiple recursor flag,
17756,agent: write API's on /v1/agent block for anti-entropy,
17757,agent: fix test compilation,
17758,Merge pull request #722 from ryanbreen/checks,Website: cleanup for getting-started/checks
17759,Website: finalize cleanup for intro/getting-started/checks.,
17760,Website: cleanup for intro/getting-started/checks.,
17761,agent: Better warning for keyring with -encrypt option. Fixes #718.,
17762,Merge pull request #715 from ryanbreen/datacenter,s/data center/datacenter/g
17763,s/data center/datacenter/g,
17764,Merge pull request #713 from ryanbreen/agent,Website: cleanup for getting-started/agent
17765,Website: revert changes to 'data center' from 'datacenter',
17766,Website: finalize cleanup for getting-started/agent.html.,
17767,Website: cleanup for getting-started/agent.html.,
17768,website: Fixing image link,
17769,Cut v0.5.0,
17770,Update Vagrantfile,
17771,ui: fix listener on dc controller content,fixes #694
17772,website: Upgrading 0.5 docs,
17773,website: Added missing link,
17774,Merge pull request #711 from hashicorp/f-scada,Add support for SCADA for Atlas Integration
17775,agent: Cleanup a comment,
17776,api: Refactoring into shared write logic,
17777,api: Refactoring into shared query logic,
17778,agent: Fixing blocking queries on internal endpoints,
17779,agent: Enable UI endpoints for SCADA,
17780,agent: Do not expose AtlasToken or AtlasACLToken,
17781,agent: Updating for new client API,
17782,website: FAQ cleanup,
17783,website: Adding Atlas docs,
17784,website: Document new options,
17785,agent: Test ACL token resolution,
17786,agent: Adding SCADA tests,
17787,agent: Use AtlasACLToken,
17788,agent: Rename AtlasCluster to AtlasInfrastructure,
17789,agent: Fixing setup of SCADA HTTP listener,
17790,agent: Fixing panic on shutdown,
17791,agent: Provide auto-join metadata to SCADA,
17792,agent: Adding atlas_join configuration,
17793,agent: SCADA HTTP integration,
17794,agent: SCADA HTTP listener,
17795,agent: Starting SCADA integration,
17796,agent: Adding Atlas CLI flags,
17797,agent: Adding new Atlas configs,
17798,Change tabs to spaces,
17799,Merge pull request #710 from hashicorp/f-ui-undefined,ui: Only set blank token if none set
17800,ui: Only set blank token if none set,
17801,Website: cleanup intro.,
17802,Only build pushes to master and PR's on travis,
17803,Merge pull request #707 from hashicorp/f-snapshot,agent: Snapshot and restore health state on reload. Fixes #693
17804,CHANGELOG updates,
17805,agent: Snapshot and restore health state on reload. Fixes #693,
17806,Website: clean up docs/compatibility.,
17807,Website: add some missing intra-page links in docs/agent/options,
17808,Website: clean up a few intra-page links in docs/agent/options,
17809,Website: add intra-page links in docs/agent/options,
17810,CHANGELOG updates,
17811,command/exec: Handle a missing key during cancelation. Fixes #626,
17812,CHANGELOG updates,
17813,"Revert ""* use defer to avoid tracking lock""",This reverts commit a030abdefc54470394a2a44008e02f3b3d0510ec. This commit causes a connection to be leaked if there is a race with another concurrent RPC.
17814,Website: finalize edits for configuration file options in docs/agent/options.,
17815,Website: edits for configuration file options in docs/agent/options.,
17816,Add myself to the community page.,
17817,Merge pull request #695 from ryanbreen/session,Website: cleanup for docs/agent/http/session
17818,Merge pull request #700 from ryanbreen/options,Website: cleanup for the docs/agent/options Command-line options section
17819,Website: tweak cleanup for the docs/agent/options Command-line options section.,
17820,Website: cleanup for the docs/agent/options Command-line options section.,
17821,Remove language about LockDelay parsing.,
17822,Merge pull request #691 from artushin/master,close idle connections after stopping http checks to service
17823,Merge pull request #696 from michaeltchapman/watchcommand,website: Fix list of types available to watch
17824,Merge pull request #692 from ryanbreen/kv,Website: cleanup of docs/agent/http/kv
17825,website: Fix list of types available to watch,The list of types erroneously had services listed twice in place of 'service' and 'services'
17826,More cleanup for docs/agent/http/session.,
17827,Website: cleanup for docs/agent/http/session.,
17828,oops. DefaultTransport being used.,
17829,Website: finalize cleanup of docs/agent/http/kv,
17830,Website: cleanup of docs/agent/http/kv,
17831,ui: add session behavior and ttl to UI,fixes #649
17832,ui: update gemfile,
17833,ui: add service address,fixes #686
17834,website: fix white bar,fixes #690
17835,close idle connections after stopping http checks to service,
17836,Merge pull request #689 from ryanbreen/health,Website: cleanup for docs/agent/http/health.
17837,Website: finalize cleanup for docs/agent/http/health.,
17838,Website: cleanup for docs/agent/http/health.,
17839,Merge pull request #687 from nelhage/ssl-images,Load images over SSL
17840,Use protocol-relative URL for bintray logo.,
17841,Load gravatars over protocol-relative links.,Fixes mixed content warnings on https://consul.io/community.html
17842,agent: clarify the valid characters for dns,
17843,Merge pull request #678 from ryanbreen/agent,Cleanup for docs/agent/http/agent.
17844,Merge pull request #681 from ryanbreen/catalog,Website: cleanup of docs/agent/http/catalog
17845,Merge pull request #684 from ryanbreen/event,Website: cleanup for docs/agent/http/event.
17846,agent: warn on service tags with invalid chars,
17847,agent: Warn on dns-incompatible characters during service registration. Fixes #683.,
17848,Website: cleanup for docs/agent/http/event.,
17849,Merge pull request #680 from sequenceiq/fix-version-check,fixing version numbers RCs should be labeled x.x.x-rcx
17850,fixing version numbers RCs should be labeled x.x.x-rcx,see conversation with ryanuber: https://github.com/hashicorp/go-checkpoint/issues/2#issuecomment-73199209
17851,Website: finalize cleanup of docs/agent/http/catalog.,
17852,Website: edits for docs/agent/http/catalog.,
17853,Finalize cleanup of docs/agent/http/agent.,
17854,Cleanup for docs/agent/http/agent.,
17855,Merge pull request #676 from ryanbreen/status,Fixes for docs/agent/http/status
17856,Fixes for docs/agent/http/status,
17857,api: allow timeout field to be specified for checks,
17858,website: document http check timeout configuration,
17859,agent: fix test case examples,
17860,Merge pull request #654 from arnaudbriche/http-check-timeout,Configurable CheckHTTP timeout
17861,Merge pull request #673 from ryanbreen/watches,Very minor tweaks to docs/agent/watches
17862,Merge pull request #674 from ryanbreen/acl,Cleanups to docs/agent/http/acl
17863,Finalize cleanups for docs/agent/http/acl.,
17864,Cleanups for docs/agent/http/acl.,
17865,Pare off unnecessary space.,
17866,Minor fixes for docs/agent/watches.,
17867,Merge pull request #672 from ryanbreen/master,Cleanup docs/agent/telemetry
17868,Finalize telemetry docs edits.,
17869,Merge pull request #669 from nicholascapo/http-check-client-api,api/agent: Support HTTP service checks in client api
17870,Merge pull request #670 from ryanbreen/master,Cleanups for docs/agent/rpc
17871,Cleanup docs/agent/telemetry,
17872,Cleanup docs/agent/rpc,
17873,Cleanup docs/agent/rpc,
17874,api/agent: Support HTTP service checks in client api,
17875,Merge pull request #666 from ryanbreen/http_docs,Cleanup docs/agent/http
17876,Merge branch 'master' of https://github.com/hashicorp/consul into http_docs,
17877,Merge pull request #664 from ryanbreen/master,Grammatical cleanups to doc/agent/encryption
17878,,add tests for CheckHTTP with new timeout parameter && CheckType.Timeout parsing
17879,,add proper parsing of CheckType.Timeout from string
17880,Some further cleanups to the root http doc.,
17881,Begin editing the docs/agent/http.,
17882,Final edits to encryption doc.,
17883,Final edits to encryption doc.,
17884,Final edits to encryption doc.,
17885,Tighten up TLS setting language a bit.,
17886,Tighten up TLS mode language a bit.,
17887,Substantial and potentially inaccurate rewrite to docs/agent/encryption.,
17888,Merge pull request #663 from ryanbreen/master,Grammatical cleanups to doc/agent/dns
17889,Clean up double 'is'.,
17890,Final tweaks to DNS doc.,
17891,More heavy-handed reorg of content for flow.,
17892,Restructure opening paragraphs to have better flow.,
17893,Finish first pass of DNS updates.,
17894,Update docs for standard DNS queries.,
17895,Minor cleanups to docs/agent/dns.,
17896,Merge pull request #660 from gkze/master,Add zsh completion
17897,Merge pull request #662 from ryanbreen/master,Grammatical cleanups to doc/agent/basics
17898,Make capitalization of agent more consistent.,
17899,Minor cleanups to docs/agent/basics.,
17900,Add new 0.5 commands,
17901,Merge pull request #659 from ryanbreen/master,Minor grammar and content tweaks to improve readability of docs/agent/check
17902,Add zsh completion,
17903,A bit more language cleanup to checks.,
17904,No need to confine the example to a web app.,
17905,Some reorg of the TTL description.,
17906,"Make it clear that checks persist with the node, period, not just across runs of the agent but across reboots as well.",
17907,Add a bit more detail around checks and clarify some language.,
17908,Language touch-ups for the checks docs.,
17909,agent: http checks work inside of service definitions,
17910,Merge pull request #655 from hashicorp/f-exec-acl,agent: pass locally configured token during remote exec
17911,Merge pull request #653 from ryanbreen/master,Grammatical cleanups to doc/agent/services
17912,agent: pass locally configured token during remote exec,
17913,,add Timeout field to CheckType and CheckHTTP to make http request timeout configurable by the client
17914,Move the note about checks to its own line.,
17915,Grammatical cleanup in services.html.,
17916,agent: test service/check deletion with empty ID,
17917,Merge pull request #644 from foostan/add_validation_of_deregistration,Validate ServiceID/CheckID when deregistering.
17918,Validation ServiceID/CheckID when deleting in deleteService() in local.go,
17919,Add tests to remove service/check without an ID,
17920,Merge pull request #642 from ceh/clean-tmpdirs,consul: clean up TempDirs in FSM tests
17921,Validate ServiceID/CheckID when deregistering.,
17922,consul: clean up TempDirs in FSM tests,
17923,Merge pull request #638 from ceh/bat-build,make.bat: add Makefile functionality for Windows
17924,Clarify the compatibility,
17925,Merge pull request #641 from ceh/lock-docs,docs: describe child process handling on Windows for lock command
17926,docs: describe child process handling on Windows for lock command,Add website documentation for how the lock command handles child process termination on Windows.
17927,make.bat: add Makefile functionality for Windows,"Converted the Makefile functionality into several bat files to better support building on Windows. All targets have been introduced in the make.bat file, except for ""cov"" and ""format"". Running make.bat with no arguments runs the all target per default, just like Makefile. If an argument is supplied, it must be one of all, cover, deps, integ, test, vet, or updatedeps. For example  make.bat test  runs the test target."
17928,Merge pull request #637 from ceh/win-build,command: fix Windows build
17929,command: fix Windows build,Add a per GOOS implementation to send signals to PIDs since syscall.Kill does not exist on Windows. It will always send a SIGKILL on Windows since there seems to be no POSIX compatible notion. Fixes build on Windows.
17930,agent/http: fix service registration with nil checks value,
17931,agent/http: clean up socket setup,
17932,agent: make check tests more reliable,
17933,Update CHANGELOG,
17934,Merge pull request #632 from ceh/release-go1.4,Vagrantfile: use Go 1.4 release branch from new git repo
17935,Merge pull request #635 from ceh/spell,website: fix minor typos in docs
17936,Merge pull request #634 from hashicorp/f-httpargs-conflict,agent: error from KVS endpoint if incompatible flags are passed.
17937,website: fix minor typos in docs,
17938,agent: error from KVS endpoint if incompatible flags are passed. Fixes #432,
17939,Vagrantfile: use Go 1.4 release branch from new git repo,
17940,Merge pull request #631 from joeholley/cover_uri_fix,Update URI for cover as per https://groups.google.com/forum/#!topic/consul-tool/AytN6_RqTDQ
17941,Update URI for cover,
17942,Use separate updatedeps target for Makefile,
17943,agent: more lenient dns response test,
17944,"CHANGELOG update, gofmt",
17945,"Updating changelog, bump to 0.5.0rc1",
17946,Merge pull request #625 from hashicorp/f-maintcmd,"New ""maint"" command"
17947,command/maint: better arg conflict checking,
17948,command/maint: clean up,
17949,website: update maint command documentation for list mode,
17950,command/maint: display active maintenance when no args are passed,
17951,Merge pull request #627 from sttts/api-agent-service-address,Add agent service Address field to the api
17952,Add test case for service Address field,
17953,Add agent service Address field to the api,The Address field was introduced in #570. This patch extends this to the api.
17954,website: Cleanup the 'lock' documentation,
17955,Merge pull request #622 from hashicorp/f-sockets,Unix domain sockets
17956,Merge pull request #621 from hashicorp/f-leave,Changing interaction between Leave and RemovePeers
17957,agent: use const for default maintenance reason strings,
17958,website: document reason flag for http api,
17959,agent: fix test,
17960,website: document maint command,
17961,command: more maint command tests,
17962,command: test maint command,
17963,agent: prevent duplicate error messages for maintenance api,
17964,command: maint command works,
17965,api: support reason flag for maintenance mode,
17966,command: starting maint command,
17967,agent: support passing ?reason= for custom notes field values on maintenance checks,
17968,Merge pull request #617 from hashicorp/f-httpdoc,Split HTTP API documentation into a page per section
17969,website: update maintenance mode endpoint,
17970,api: finish up maintenance tests,
17971,agent: fix maintenance check ID,
17972,agent: change node maintenance endpoint,
17973,api: add node/service maintenance mode functions,
17974,agent: use strconv.ParseBool for parsing maintenance enable flag,
17975,fix space/tab mixing in docs.erb,
17976,website: fix tab/space mixing in _docs.scss,
17977,website: fix health endpoint page,
17978,website: move content from monolithic http page,
17979,website: separate pages for top-level endpoints,
17980,website: beginning http docs update,
17981,Merge pull request #591 from hashicorp/f-multicheck,Support multiple health checks per service
17982,agent: comments for new anti-entropy functionality,
17983,"agent: simplify anti-entropy of services with multiple checks, add tests",
17984,agent: only send service with check sync if it is out of sync,
17985,agent: refactor syncChecks,
17986,api: support multiple checks during service/check registration,
17987,agent: support adding multiple checks during service registration from the API,
17988,agent: support multiple checks per service,
17989,agent: use squash mapstructure tag to properly decode embedded structs,
17990,website: add notice about socket permission portability,
17991,agent: use interface for file permissions,
17992,agent: test permissions are set on rpc socket,
17993,agent: fix tests,
17994,consul: Testing leave as leader and non-leader,
17995,website: document unix_sockets config,
17996,agent: re-add support for user name in socket perms,
17997,consul: Wait for RemovePeer in Leave as a follower,
17998,consul: remove ourself from raft peer set if we are the leader,
17999,consul: Do not remove ourself as raft peer in Serf event handler,
18000,Adding fast-path for testing without depedency updates,
18001,agent: test Unix domain socket permission settings,
18002,agent: adjusting tests for new behavior of sockets,
18003,agent: beginning socket user/group/mode support as discussed in #612,
18004,Fixing merge conflict,
18005,command/lock: Fixing mixed spaces and tabs,
18006,api: Fixing some comments,
18007,Merge pull request #616 from ceh/updatedeps,Makefile: update dependencies
18008,api: Refactor to share session renew code,
18009,website: Document the lock command,
18010,website: Document a distributed semaphore,
18011,command/lock: Adding simple test,
18012,"command/lock: Calculate name, use provided token",
18013,api: Detect conflicting existing values for lock/semaphore,
18014,command/lock: Ensure a conflict between lock and semaphore with shared prefix,
18015,Adding new command 'lock',
18016,command/lock: First pass at lock,
18017,api: Make channels receive only,
18018,agent: test agent rpc unix socket create failure,
18019,Merge pull request #608 from imkira/fixBodyLeak,fixed: body not closed for non HTTP 200 responses
18020,fixed: requireOK should close Body on error,
18021,"Revert ""fixed: body not closed for non HTTP 200 responses""",This reverts commit dafa61ad10d67d1992201f8499ef681e01de8a09.
18022,README: go get -f requires Go 1.4+,
18023,Makefile: update dependencies,"Prevent build failures which may occur when dependencies is not up to date by updating them with the go get -u flag. Add the go get -f flag as well, to override the check that each package has been checked out from the repo implied by its import path."
18024,Merge pull request #615 from ceh/vet-fix,command: address vet report in test
18025,Merge pull request #614 from ceh/vet-target,Makefile: add vet target
18026,command: address vet report in test,"Fixes the following vet report: command/rpc_test.go:61: missing argument for Fatalf(%s): format reads arg 3, have only 2 args"
18027,Makefile: add vet target,"Add a vet target in order to catch suspicious constructs reported by go vet. Vet has successfully detected problems in the past, for example, see c9333b1b9b472feb5cad80e2c8276d41b64bde88 Some vet flags are noisy. In particular, the following flags reports a large amount of generally unharmful constructs: -assign: check for useless assignments   -composites: check that composite literals used field-keyed                elements   -shadow: check for shadowed variables   -shadowstrict: whether to be strict about shadowing   -unreachable: check for unreachable code In order to skip running the flags mentioned above, vet is invoked on a directory basis with go tool vet . since package- level type-checking with go vet doesn't accept flags. Hence, each file is vetted in isolation, which is weaker than package-level type-checking. But nevertheless, it might catch suspicious constructs that pose a real issue. The vet target runs the following flags on the entire repo: -asmdecl: check assembly against Go declarations   -atomic: check for common mistaken usages of the            sync/atomic package   -bool: check for mistakes involving boolean operators   -buildtags: check that +build tags are valid   -copylocks: check that locks are not passed by value   -methods: check that canonically named methods are canonically             defined   -nilfunc: check for comparisons between functions and nil   -printf: check printf-like invocations   -rangeloops: check that range loop variables are used correctly   -shift: check for useless shifts   -structtags: check that struct field tags have canonical format                and apply to exported fields as needed   -unsafeptr: check for misuse of unsafe.Pointer Now and then, it might make sense to check the output of the disabled flags manually. For example, VETARGS=-unreachable make vet can detect several lines of dead code that can be deleted, etc."
18028,command: fix up env var/cli arg precedence and tests,
18029,Merge pull request #610 from dave-tucker/bug/609,Don't forget to Shutdown the DNS Server!
18030,Don't forget to Shutdown the DNS Server!,Fixes #609 Signed-off-by: Dave Tucker dave@dtucker.co.uk
18031,Merge pull request #606 from hashicorp/f-maint,Support node and service maintenance mode
18032,agent: maintenance logging + unique service check IDs,
18033,website: document node maintenance mode,
18034,agent: test node maintenance mode,
18035,agent: node maintenance mode works,
18036,agent: maintenance mode api's are idempotent,
18037,agent: maintenance mode is persistent,
18038,website: document service maintenance endpoint,
18039,agent: test http endpoints for maintenance mode,
18040,agent: test agent service maintenance mode,
18041,agent: first pass at service maintenance mode,
18042,Merge pull request #612 from hashicorp/f-refactor,Refactor UNIX domain socket
18043,command: fix env var reader for HTTP addr,
18044,website: update docs for agent socket options,
18045,agent: error if binding to existing socket file,
18046,api: simple test for unix socket connectivity,
18047,agent: test socket file overwrite,
18048,command: style fixes for env addr reading,
18049,agent: fixing up tests,
18050,agent: only ignore errors on IsNotExist(),
18051,fixed: body not closed for non HTTP 200 responses,
18052,agent: beginning refactor,
18053,Merge pull request #587 from jefferai/unixlisten,RPC and HTTP interfaces fully generically-sockified so Unix is supported...
18054,Ensure a socket is created for permissions adjustment tests and fix some,"items pointed out in the code review This code is copyright 2014 Akamai Technologies, Inc. opensource@akamai.com"
18055,Merge pull request #604 from hashicorp/f-log-cache,consul: Use new LogCache to improve write throughput
18056,consul: Use new LogCache to improve write throughput,
18057,Update option text to describe how to use Unix listening sockets.,
18058,Unix socket-based HTTP API test functionality. As a consequence this,"also required making some hardcoded values into more generic functionality, which is generally a good thing. I verified that each test function that I modified still passed.: This code is copyright 2014 Akamai Technologies, Inc. opensource@akamai.com"
18059,Add a Unix socket RPC test. I modified some code in the testing library to not make assumptions about the listening socket; all RPC tests still pass. Still to do: Unix socket HTTP test.,"This code is copyright 2014 Akamai Technologies, Inc. opensource@akamai.com"
18060,Remove unnecessary ClientListenerAddr function. Rework config test functions to be cleaner. Start of runtime tests.,"This code is copyright 2014 Akamai Technologies, Inc. opensource@akamai.com"
18061,"Tests for populateUnixSocket. Still need to write tests for the other major function, and basic socket listening tests.","This code is copyright 2014 Akamai Technologies, Inc. opensource@akamai.com"
18062,RPC and HTTP interfaces fully generically-sockified so Unix is supported.,"Client works for RPC; will honor CONSUL_RPC_ADDR. HTTP works via consul/api; honors CONSUL_HTTP_ADDR. The format of a Unix socket in configuration data is: ""unix://[/path/to/socket];[username or uid];[gid];[mode]"" Obviously, the user must have appropriate permissions to create the socket file in the given path and assign the requested uid/gid. Also note that Go does not support gid lookups from group name, so gid must be numeric. See https://codereview.appspot.com/101310044 When connecting from the client, the format is just the first part of the above line: ""unix://[/path/to/socket]"" This code is copyright 2014 Akamai Technologies, Inc. opensource@akamai.com"
18063,Merge pull request #601 from hashicorp/f-api-clean,"Adding KV.DeleteCAS and {Lock,Semaphore}.Destroy."
18064,api: Adding Destroy to cleanup a semaphore,
18065,api: Adding Destroy to cleanup a lock,
18066,api: Add support for DeleteCAS,
18067,command/agent: Minor cleanups,
18068,Merge pull request #592 from nicholascapo/check-http,command/agent: Add simple HTTP check type
18069,Merge pull request #595 from ebroder/dns-only-passing,"Add ""only_passing"" option to DNS config"
18070,"consul: Fixing potential issue with blocking queries for {Session,ACL}.Get",
18071,Merge pull request #600 from hashicorp/f-api-semaphore,Adding Semaphore support to API
18072,consul: Fixing blocking query returning old result,
18073,api: Changing default semaphore key,
18074,api: More reliable session check,
18075,api: Enable debug output from Consul for tests,
18076,api: make node health test more reliable,
18077,Add more thorough testing for only_passing behavior,
18078,api: More semaphore tests,
18079,api: Adding semaphore tests and fixes,
18080,api: First pass at semaphore,
18081,api: Minor cleanups in lock,
18082,Update HTTP Check documentation: 503 -> 429,
18083,command/agent: Add tests for HTTP Check,
18084,agent: make dns randomization test more reliable,
18085,command/agent: HTTP Check: Create httpClient in Start(),"For long (>10s) interval checks the http timeout is 10s, otherwise thetimeout is the interval. This means that a check should return before the next check begins."
18086,Merge pull request #594 from hashicorp/f-api-lock,api: Adding Lock helpers for leader election
18087,api: Fixing typo,
18088,command/agent: HTTP Check: Include response in check status,
18089,command/agent: Stop HTTP checks when the check is removed,
18090,"command/agent: HTTP check: Any 2xx is OK, 429 is WARNING",
18091,"Add ""only_passing"" option to DNS config","This excludes nodes from DNS results if their healthchecks are in any non-passing state, not just if they're critical."
18092,consul: fix server left test,
18093,api: Fixing typos,
18094,api: Adding Lock helpers for leader election,
18095,consul: improve test reliability for session ttls,
18096,agent: fix local_test.go,
18097,agent: wrap deferred anti-entropy sync test in WaitForResult,
18098,api: test for a known leader as well as index > 0,
18099,command/agent: Add simple HTTP check type,"These checks make an HTTP GET request every Interval to the specified URL. The status of the service depends on the HTTP Response Code. 200 is passing, 503 is warning and anything else is failing."
18100,Merge pull request #590 from ceh/website-docs,website: fix typo and omit excessive use of the word lastly
18101,website: omit excessive use of the word lastly,Simplify wording by removing various uses of the word lastly.
18102,website: fix typo,s/patameters/parameters/
18103,Merge pull request #589 from hashicorp/f-delete-cas,Add support for DELETE with CAS
18104,website: Documenting ?cas with KV DELETE,
18105,agent: Testing the KV DELETE with cas,
18106,consul: Testing KVSDeleteCAS in FSM,
18107,consul: Test the KVSDeleteCheckAndSet method,
18108,agent: Support the ?cas parameter to KV DELETE,
18109,consul: Expose the KVSDeleteCAS operation in FSM,
18110,consul: Implement KVSDeleteCheckAndSet,
18111,consul: Adding KVSDeleteCAS operation type,
18112,Merge branch 'MerlinDMC-feature/configurable_service_address',
18113,website: Updating the documentation,
18114,agent: Testing anti-entropy with service address,
18115,agent: Adding test for DNS lookup with service address,
18116,consul: Do not override the node address,
18117,agent: Fix de-duplication of SRV with service address,
18118,consul: Fixing merge conflict,
18119,agent: Testing reverse lookup with custom TLD,
18120,Merge pull request #586 from dankennedy/master,replaced consul domain with configured domain. Fixes #582
18121,replaced consul domain with configured domain. Fixes #582,
18122,agent: test service and check unloading,
18123,"agent: consolidate service loading code, better logging",
18124,agent: separate service and check loading/unloading concerns,
18125,agent: persist service/check data using hashed service/check IDs (fixes #573),
18126,api: improve reliability of catalog endpoint tests,
18127,consul: Remove cruft from KV watching,
18128,consul: Enforce lock-delay with delete behavior,
18129,website: Document session behavior and TTL,
18130,Ignore vim swap files,
18131,website: Update session API documentation,
18132,command: check LastIndex is not zero while waiting for leader,
18133,Change version to dev,
18134,Merge pull request #584 from hashicorp/f-exec-dc,"Support ""exec"" in foreign datacenters"
18135,command/exec: Use TTL for local and foreign,
18136,command/exec: Support foreign datacenters,
18137,api: Adding constants for session behaviors,
18138,website: Link to consul-replicate. Fixes #439,
18139,Import HTTP basic auth patch from armon/consul-api#16,
18140,Remove go 1.2 from Travis config,
18141,Merge pull request #581 from hashicorp/f-consulapi,Bring in consulapi
18142,api: improve test reliability,
18143,api: use WaitForResult() to improve health tests,
18144,api: run consul instance on testing ports,
18145,api: add harnessing for tests,"This is necessary as consul-api's tests require a real consul instance to be running. We can't directly import an agent to fire up an instance, due to the way this would create an import cycle. These tests instead will start a consul instance using the binary in $PATH (if it exists)."
18146,Merge pull request #580 from hashicorp/f-merge,Adding merge delegate to prevent mixing clusters
18147,consul: Adding merge delegate to prevent mixing clusters,
18148,api: initial import from armon/consul-api,
18149,Merge pull request #578 from hashicorp/f-kv-watch,Optimize performance of KV watchers
18150,consul: Test WatchKV,
18151,consul: Adding test for KVS.List blocking query,
18152,consul: Remove dead code,
18153,consul: Optimize KV watching,
18154,consul: First pass to reduce KV watch cost,
18155,Merge pull request #577 from hashicorp/f-tombstone,Adding KV tombstones to fix non-monotonic index on deletes
18156,consul: Adding more useful metrics,
18157,consul: Fixing the KVS tests,
18158,consul: Disable tombstones as follower,
18159,Merge pull request #576 from hashicorp/f-verify-config,agent: reject config with invalid options
18160,use the service specific address in SRV response,
18161,consul: Improve log message,
18162,consul: Reverting some index compute logic,
18163,consul: List Keys should handle tombstones,
18164,consul: Ensure KVS List handles tombstones,
18165,consul: Mesure time for reapTombstones,
18166,consul: Testing leader issue of reap command,
18167,consul: Test FSM Reap operations,
18168,consul: Test FSM restore of tombstones,
18169,consul: Testing tombstone snapshot,
18170,consul: Testing tombstone reaping,
18171,consul: Test tombstone creation,
18172,consul: Persist tombstones,
18173,consul: First pass at tombstone reaping,
18174,consul: TombstoneReapRequestType -> TombstoneRequestType,
18175,consul: Generate a raft operation to reap tombstones,
18176,consul: Adding new request to reap tombstones,
18177,consul: Leader should reset the tombstone GC clock,
18178,consul: Adding PendingExpiration,
18179,consul: Thread Tombstone GC through,
18180,consul: Fixing accidental commit of transaction,
18181,consul: Fixing tombstone creation and hinting of GC,
18182,consul: Adding GetTxnLimit to MDBTable,
18183,consul: Support reset of tombstone GC,
18184,consul: Adding TombstoneGC to track TTLs,
18185,consul: Rename TombstoneGC to TombstoneTTL,
18186,consul: Create tombstones before key deletes,
18187,consul: Adding TombstoneGC config,
18188,agent: use mapstructure's Metadata.Unused to detect extraneous config,
18189,agent: reject config with invalid options,
18190,Merge pull request #558 from ceh/http-api-response-headers,add ability to specify response headers on the HTTP API
18191,Merge pull request #568 from justinclayton/patch-1,Update exec.html.markdown
18192,Merge pull request #572 from ceh/doc-typo,"website: fix typo, casing and links"
18193,"website: fix typo, casing and links",Fix typo in Leader Election guide: s/blog/blob/ Also fix various casing issues and prefer HTTPS links for HashiCorp projects.
18194,Clearfix all the bio pages,
18195,Disable rack rewrite,
18196,Minor deployment fixes,
18197,advertise specific address for a service,Enable setting a specific address in a service definition for advertise. If no specific address is given it will fallback to the node address and reassemble the old behaviour.
18198,Update exec.html.markdown,fixing near-meaningless spelling and grammar typos ;-)
18199,consul: Collect useful session metrics,
18200,Merge pull request #563 from hashicorp/sethvargo/update_docs,Update middleman docs
18201,Merge pull request #556 from darron/master,Docs: It's not key - it's service.
18202,Merge pull request #567 from thorduri/master,"?pretty, work without value."
18203,Test both ?pretty both bare and with value.,
18204,"Revert ""correct the doc for obtaining formatted json""",This reverts commit cf3b9ec4fee09075481fd5c521dd6c4b8db58e91.
18205,"handle ?pretty similarly to ?stale, ?consistent etc.",
18206,agent: test pretty printed json,
18207,Make app private,
18208,Move IE compat into middleman-hashicorp,
18209,Update gems to latest versions,
18210,Update titles to be consistent with other sites,
18211,add ability to specify response headers on the HTTP API,"Add an config object that allows adding HTTP header response fields to every HTTP API response. Each specified header is added to every response from all HTTP API endpoints. Each individual endpoint may overwrite the specified header, which makes sure that Consul headers such as 'X-Consul-Index' is enforced by the API."
18212,It's not key - it's service.,"It's right in the description, but the example seems to be wrong."
18213,Merge pull request #546 from ryanbreen/master,Add a randomized start before running CheckMonitors.
18214,Clean up log line and reduce test time.,
18215,Test that staggered checks run within the defined interval.,
18216,"Well, that sure is cleaner.",
18217,Add a randomized start before running CheckMonitors.,
18218,Merge pull request #543 from lyrixx/patch-2,[DOC] Rework downloads_tools and add PHP SDK
18219,Merge pull request #542 from sequenceiq/add-rpc-addr-env-var,Add default rpc address configuration option as CONSUL_RPC_ADDR env vari...
18220,Add default rpc address configuration option as CONSUL_RPC_ADDR env variable,Similar as in serf: https://github.com/hashicorp/serf/pull/210
18221,[DOC] Rework downloads_tools and add PHP SDK,
18222,Merge pull request #541 from carlanton/website-helios-consul,Add helios-consul to community tools page
18223,Add helios-consul to community tools page,
18224,Merge pull request #536 from awesomenix/master,Add Build.bat for building on Windows 32bit or 64bit
18225,Merge remote-tracking branch 'upstream/master',
18226,Make modulename param so build.bat can be generalized and used for any go project,
18227,"Add missing switch -u, which updates packages",
18228,Add Instructions on Downloading Mingw 64bit for Building memdb,
18229,consul: Minor cleanup,
18230,consul: Test Session.Apply updates session timers,
18231,consul: Adding more tests for session TTLs,
18232,consul: Setup ACLs and timers after initial barrier,
18233,consul: Make sessionTimersLock a plain mutex,
18234,consul: Ignore zero ttl on session,
18235,consul: Minor cleanups,
18236,Merge pull request #524 from amalaviy/session_ttl,Consul Session TTLs
18237,Merge pull request #515 from mtchavez/master,Vagrant updates
18238,Add invalidateSession test,
18239,"Fixed clearSessionTimer, created invalidateSession, added invalid TTL test",
18240,Merge pull request #531 from ijin/patch-1,minor grammer fix
18241,minor grammer fix,
18242,Took out usage of snapshot SessionListTTL,
18243,Remove hardcoded wait time in session TTL tests,
18244,Took out StateSnapshot SessionListTTL also,
18245,Clean up code based on feedback from armon,
18246,Added more tests,
18247,Added more tests. Also added return of 404 if the session id to renew is not found,
18248,Merge pull request #521 from hoffoo/master,ui: ask for confirmation before deleting keys
18249,Merge pull request #522 from alouche/minor_cleanup,Minor cleanup
18250,Consul Session TTLs,"The design of the session TTLs is based on the Google Chubby approach (http://research.google.com/archive/chubby-osdi06.pdf). The Session struct has an additional TTL field now. This attaches an implicit heartbeat based failure detector. Tracking of heartbeats is done by the current leader and not persisted via the Raft log. The implication of this is during a leader failover, we do not retain the last heartbeat times. Similar to Chubby, the TTL represents a lower-bound. Consul promises not to terminate a session before the TTL has expired, but is allowed to extend the expiration past it. This enables us to reset the TTL on a leader failover. The TTL is also extended when the client does a heartbeat. Like Chubby, this means a TTL is extended on creation, heartbeat or failover. Additionally, because we must account for time requests are in transit and the relative rates of clocks on the clients and servers, Consul will take the conservative approach of internally multiplying the TTL by 2x. This helps to compensate for network latency and clock skew without violating the contract. Reference: https://docs.google.com/document/d/1Y5-pahLkUaA7Kz4SBU_mehKiyt9yaaUGcBTMZR7lToY/edit?usp=sharing"
18251,ui: confirm dialog only when deleting key directories #521,
18252,"since dns.TXT is an external dependency, it is safer to add keys to the fields to avoid some potential ordering issues if changes in this field occur with upstream",
18253,cleanup and simplify,
18254,remove control flow on errExit by switching from bool to int,
18255,,use defer to avoid tracking lock simplify control flow
18256,Merge pull request #518 from larsks/master,updates to leader election documentation
18257,Merge pull request #516 from mtchavez/tests/fix-failing,Tests/fix failing
18258,Separate cover target for tests,
18259,ui: ask for confirmation before deleting keys #520,
18260,updates to leader election documentation,Clarify the steps involved in the leader election process.  provide examples of creating a session provide links to appropriate documentation
18261,consul: Server leave test fix,
18262,agent: agent test fixes,
18263,consul: Fix failing globalRPC test,
18264,Fix typo,
18265,Vagrant updates, Add go tools to provision script Sync project folder Fix ruby styling issues Add --cover flag to test commands
18266,Merge pull request #514 from vlajos/typofixes-vlajos-20141204,typofixes - https://github.com/vlajos/misspell_fixer
18267,typofixes - https://github.com/vlajos/misspell_fixer,
18268,Merge pull request #511 from catsby/exec-doc-update,Small doc update for exec command
18269,Small doc update for exec command,"the documentation for -tag says it must be used with -service, but example used is -server, which doesn't work. This changes -server to -service."
18270,agent: Handle service ACLs when doing anti-entropy,
18271,Merge pull request #506 from hashicorp/f-service-acl,Service ACL support
18272,consul: Check that ACL also allows registration,
18273,consul: Enforce service registration ACLs,
18274,acl: Expose service policy checks,
18275,acl: Support for service policies,
18276,website: Update ACL docs,
18277,agent: fixup all check definitions from json config,
18278,agent: persist CheckType with health checks,
18279,agent: allow config reload to modify checks/services persistence,"This change consolidates loading services and checks from both config and persisted state into methods on the agent. As part of this, we introduce optional persistence when calling RemoveCheck/RemoveService. Fixes a bug where config reloads would kill persisted services/checks. Also fixes an edge case:  A service or check is registered via the HTTP API A new service or check definition with the same ID is added to config Config is reloaded  The desired behavior (which this implements) is:  All services and checks deregistered in memory All services and checks in config are registered first All persisted checks are restored using the same logic as the agent    start sequence, which prioritizes config over persisted, and removes    any persistence files if new config counterparts are present."
18280,Merge pull request #499 from alouche/fix_potential_race_condition_shutdown,Fix potential race condition on shutdown (pool.reap/server.handleConsulConn)
18281,Merge pull request #500 from d3xf/pr-minor-doc-fixes,Minor documentation fixes
18282,docs: agent/watches: minor fixes,
18283,docs: agent/checks: minor fixes,
18284,docs: agent/dns: minor fixes,
18285,docs: agent/basics: minor fixes,
18286,docs: internals/security: minor fixes,
18287,docs: internals/acl: minor fixes,
18288,docs: internals/sessions: minor fixes,
18289,docs: internals/architecture: minor fixes,
18290,docs: compatibility: minor fixes,
18291,docs: intro/kv: minor fixes,
18292,docs: intro/checks: minor fixes,
18293,docs: intro/join: minor fixes,
18294,docs: intro/services: minor fixes,
18295,docs: intro/agent: minor fixes,
18296,,"Fix race condition on read/write of shutdown bool variable of server and connection pool. In connection pool, there is no guarantee that .reap() cannot execute the same time as .Shutdown() is called. It also did not benefit to eval shutdown when a select is run on the shutdown channel. In server, same principle applies to handleConsulConn. Since we also have a shutdown channel, it makes more to use this than to loop on a bool variable."
18297,website: Improve docs for reloading config. Fixes #407,
18298,Merge pull request #498 from alouche/fix_sprintf_unreachable_code,Fix sprintf formatting and cleanup unreachable code
18299,fix Sprintf formatting,
18300,cleanup unreachable code,
18301,website: load fonts over https,
18302,agent: prefer config over persisted services/checks (#497),
18303,Merge pull request #497 from hashicorp/f-persist,Persist locally registered services and checks
18304,agent: Adding TODO for future optimization,
18305,Merge pull request #475 from sequenceiq/reverse-lookup,feature: handle PTR requests to implement dns reverse lookup
18306,Only override version pre-release if blank,
18307,Merge pull request #494 from epankala/version,Update to 'consul version' behaviour
18308,agent: pass error through when writing state files,
18309,agent: default restored checks to critical status,
18310,agent: first pass at local service and check persistence,
18311,Merge pull request #492 from sosedoff/comment-fix,Comment fix
18312,Update to 'consul version' behaviour,"After e6b6f181728b88c2e430fc7ad71fe1f84db3418c if consul was built with just running ""go build"" the GitDescribe would be empty and consul version would be empty. This change alters the behaviour so that if consul is build without proper ldflags the version will be postfixed with ""dev"" prerelease to indicate that it is self compiled in a wrong way. Should someone have a bug in such a binary at least devs should easily see from the version number that binary has not been created by recommended means."
18313,agent: implementing reverse dns lookup for ipv4 and ipv6,
18314,Fix comment for commands map,
18315,Merge pull request #491 from BCWilsonDotCom/patch-1,correct the doc for obtaining formatted json
18316,correct the doc for obtaining formatted json,"was ""?pretty"" should be ""?pretty=1"""
18317,Merge pull request #487 from amalaviy/ephemeral_keys,Ephemeral Nodes for via Session behavior settings.
18318,Merge pull request #489 from hashicorp/h-event-watch,Preserve ordering of event buffer when filtering on name
18319,agent: make event buffer test non-sequential,
18320,agent: Test event order preservation for watches,
18321,agent: Preserve ordering of event buffer. Fixes #479,
18322,Set empty Behavior setting into SessionKeysRelease and flag error for unrecognized values,
18323,"Clean up tests, use switch to default session.Behavior value if unspecified, unrecognized",
18324,Ephemeral Nodes for via Session behavior settings.,"Added a ""delete"" behavior for session invalidation, in addition to the default ""release"" behavior. On session invalidation, the sessions Behavior field is checked and if it is set to ""delete"", all nodes owned by the session are deleted. If it is ""release"", then just the locks are released as default."
18325,Merge pull request #336 from ryanuber/f-keyring,feature: gossip encryption key rotation
18326,agent: remove unused config variable,
18327,Rebase against upstream,
18328,agent: fix gossip encryption detection,
18329,agent: fix loading keyring on agent start,
18330,agent: ignore -encrypt if provided when keyring exists,
18331,"consul: clean up comments, fix globalRPC tests",
18332,consul: fix obscure bug when launching goroutines from for loop,
18333,"consul: more tests, remove unused KeyManager() method",
18334,consul: simplify keyring operations,
18335,consul: add test for internal keyring rpc endpoint,
18336,consul: simplify keyring operations,
18337,command/keyring: adjust command help,
18338,command/keyring: clean up tests,
18339,agent: fix test cases,
18340,agent: make rpc tests more reliable,
18341,website: document new behavior of the -encrypt option,
18342,agent: -encrypt appends to keyring if one exists,
18343,command/agent: fix up gossip encryption indicator,
18344,"command: remove -init argument from keyring, auto-persist keyrings when using agent -encrypt",
18345,agent: squash some more common keyring semantics,
18346,consul: detach executeKeyringOp() from *Internal,
18347,agent: guard against empty keyring files,
18348,consul: use keyring operation type to cut out duplicated logic,
18349,consul: generalize multi-DC RPC call broadcasts,
18350,agent: fix install key test,
18351,website: clean up keyring command docs and add output examples,
18352,command/keyring: cleanup,
18353,consul: test rpc errors returned from remote datacenters,
18354,consul: make forwarding to multiple datacenters parallel,
18355,consul: break rpc forwarding and response ingestion out of internal endpoints,
18356,"command/keyring: refactor, adjust tests",
18357,command: fix panic when client RPC is asked for a keyring operation,
18358,consul: kill unused struct fields,
18359,"command/keyring: remove unneeded -wan arg, fix tests",
18360,agent: adjust rpc client tests for keyring,
18361,command: fixing test cases for keyring,
18362,command/keyring: clean up output,
18363,consul: cross-dc key rotation works,
18364,consul: use a function for ingesting responses,
18365,consul: restructuring,
18366,"consul: refactor keyring, repeat RPC calls to all DC's",
18367,command: allow wan ring to be modified separately from lan pools,
18368,agent: split keyring functionality out of agent.go,
18369,website: documentation updates for keyring command,
18370,command: test generated keyring file content and conflicting args for agent,
18371,agent: test loading keyring files for client and server,
18372,command: various cleanup,
18373,website: remove keyring persistence options from agent page,
18374,agent: add tests for keyring presence checks,
18375,command/keyring: add tests for init,
18376,command: use separate key files for LAN/WAN,
18377,command: renamed keys to keyring to disambiguate usage,
18378,"command/keys: refactor, restrict key operations to server nodes",
18379,"agent: move keyring initialization out of agent, add -init option to keys command",
18380,agent: fix keyring loading when config is passed off,
18381,agent: clean up keyring file implementation,
18382,agent: refactor keyring loader,
18383,website: update consul keys documentation,
18384,website: document keys command,
18385,agent: install/use/remove key tests,
18386,agent: add rpc tests for listing lan/wan gossip keys,
18387,command/keys: test network connection failure,
18388,command/keys: adding more tests,
18389,command/keys: begin tests,
18390,command/keys: remove key command implemented,
18391,command/keys: use key command implemented,
18392,command/keys: customize info message when listing keys,
18393,agent: install key command implemented,
18394,command/keys: use PrefixedUi for keys command,
18395,command/keys: fail fast if no actionable args were passed,
18396,agent: fix inversed lan/wan key listing,
18397,command/keys: list keys working end-to-end,
18398,command: add option for -wan to keys command,
18399,command: basic rpc works for keys command,
18400,"consul: use rpc layer only for key management functions, add rpc commands",
18401,command: add skeletons for keys command,
18402,command: warn when passing -encrypt when keyring already exists,
18403,"command: create serf dir if it doesn't exist, document -disable-keyring arg",
18404,consul: fix json marshaling,
18405,consul: first pass at keyring integration,
18406,agent: Fixing wan join tests,
18407,agent: Fixing config merge test,
18408,agent: Fixing UiDir in test,
18409,agent: Fixing port collision in tests,
18410,Merge pull request #478 from amalaviy/https,Added HTTPS support via a new HTTPS Port configuration option
18411,Merge pull request #480 from epankala/consul_version,Make the 'consul version' to return value that is from 'git describe --tags'
18412,consul: Increase maximum number of parallel readers,
18413,"consul.Config() helper to generate the tlsutil.Config{} struct, 30 second keepalive, use keepalive for HTTP and HTTPS",
18414,Make the 'consul version' to return value that is from 'git describe --tags',
18415,Merge pull request #477 from amalaviy/retry_wan_join,"Add start-wan-join, retry-wan-join and related configuration and commandline options"
18416,Moved TLS Config stuff to tlsutil package,
18417,"Change names to StartJoinWan, RetryJoinWan etc",
18418,Added HTTPS support via a new HTTPS Port configuration option similar to the HTTP Port.,
18419,"deps: add 0.4.1 deps file, rename 0-4.1 to match naming convention",
18420,"Add start-wan-join, retry-wan-join and related configuration options and commandline options",
18421,Merge pull request #471 from lra/doc_acl_rexec,Doc explaining the blacklist mode and consul exec
18422,Another typo,
18423,extra ',
18424,Doc explaining the blacklist mode and consul exec,
18425,website: better description of config merging in agent options. Closes #470,
18426,Merge pull request #469 from lyrixx/patch-1,[Doc] Added missing link to leader-election
18427,[Doc] Added missing link to leader-election,
18428,consul: Fixing key list index calculation,
18429,Merge pull request #462 from vindir/feature/typo-fix,Typo fix for events command doc
18430,Typo fix for events command doc,
18431,Merge pull request #458 from hashicorp/h-notes,Pass notes field from service checks through
18432,agent: pass notes field through for checks inside of service definitions. Fixes #449,
18433,Merge pull request #455 from neilbaylorrulez/patch-1,improved Parallax scrolling performance in webkit
18434,improved Parallax scrolling performance in webkit,
18435,Merge pull request #453 from dpb587/patch-typos,Fix some typos in website docs
18436,Fix some typos in website docs,
18437,Fixing unit tests,
18438,Support old recursor config for backwards compatibility,
18439,Merge pull request #448 from foostan/multiple_recursor,Add multiple recursor definition support
18440,Merge pull request #450 from ceh/fix-missing-arguments,Fix missing arguments
18441,Fix missing arguments,
18442,Add multiple recursor definition support,
18443,Merge pull request #444 from lra/acl_doc_clarification,Acl doc clarification
18444,Rephrase,
18445,ACL doc clarification,Fixes #443
18446,Merge pull request #441 from tomlanyon/master,website: fix download link for web UI in intro guide.
18447,website: fix download link for web UI in intro guide.,
18448,Merge pull request #433 from hashicorp/f-multi-checks,agent: add support for multiple checks and config mixing
18449,website: fix JSON in multiple checks documentation,
18450,Force a bundle update for rack-rewrite,
18451,Merge pull request #435 from hashicorp/sethvargo/no_index,"Do not index ""Jespen"" code block"
18452,"Do not index ""Jespen"" code block","The word ""Jespen"" is one of our top keywords because it appears so many times in the Jespen Testing page. This commit adds a comment to disable Google indexing in that code block so we can better target keywords."
18453,Merge pull request #436 from hashicorp/sethvargo/redirect_web_ui_downloads,Redirect old WebUI downloads page to new one
18454,Redirect old WebUI downloads page to new one,"There are currently a number of sites on the Internet that link to the old downloads_web_ui.html page, including some popular blog posts. Since the WebUI has been moved onto the Consul page itself, these links are now broken. This commit adds a 301 (to preserve SEO) redirect from the old page to the new one."
18455,website: update docs for multiple checks in config,
18456,agent: add support for multiple checks and config mixing,
18457,agent: test config as a whole in services test,
18458,Merge pull request #431 from soundcloud/xla-multiple-service-definitions,Add multiple service definition support
18459,Add multiple service definition support,"This change-set adds another key to the configuration decoding called services, which is expected to be a list of service definitions. It follows the established convention of only allowing one of the keys: service, check, services. For every entry in the list it calls the corresponding decode method and appends it to the Servics of the resulting Config. While a similar result could be achieved with changing the Services member of the Config struct to have named mapstruct tag it lacks the proper time conversions provided by DecodeServiceDefinition."
18460,website: Fixing formatting,
18461,Merge pull request #427 from blalor/agent_http_links,website: Improve navigability of agent HTTP API categories
18462,website: document retry_join and retry_interval flags for config file,
18463,Merge pull request #429 from lra/doc_fix,Small typo in the doc
18464,Small typo in the doc,
18465,Merge pull request #426 from leocassarani/patch-1,"website: Fix spelling of ""separator"" in the HTTP API docs"
18466,Add links for status endpoints,
18467,Add links for event endpoints,
18468,Add links for ACL endpoints,
18469,Add links for session endpoints,
18470,Add links for health endpoints,
18471,Add links for catalog endpoints,
18472,Add links for agent endpoints,
18473,Improve navigability of agent HTTP API categories,
18474,"Fix spelling of ""separator"" in the HTTP API docs",
18475,"Create unified ""Consul Tools"" page to showcase our tools and the communities",
18476,Fix the duplicate navigation active classes,
18477,Fix small typo in link,
18478,Fix copy-paste fail,
18479,Merge pull request #416 from hashicorp/sethvargo/download_consul_template,Add Consul Template to the download list
18480,Add Consul Template to the download list,
18481,website: Fixing link to demo cluster,
18482,Merge pull request #409 from mark-rushakoff/fuller-vagrantfile,Install curl in vagrant-cluster demo's Vagrantfile
18483,Bump website version,
18484,Gofmt,
18485,CHANGELOG updates,
18486,Merge pull request #412 from ErikDubbelboer/website-fix,Fix small doc mistake
18487,Fix small doc mistake,
18488,Merge pull request #411 from hashicorp/sethvargo/more_website_updates,SEO and latest middleman goodness
18489,Update gems to latest versions,
18490,Use new Markdown syntaxes and add SEO descriptions,
18491,Use a description attribute for HTML descriptions,
18492,Import fonts in CSS instead of HTML,
18493,Move more javascript into the footer,
18494,Cleanup header HTML,
18495,Add robots.txt and sitemap,
18496,Do not underline API doc links,
18497,Remove prettify css,
18498,Use codeblocks for code,
18499,Remove highlighting javascript files,
18500,Remove unused font file,
18501,Install curl,"The getting started guide mentions has several examples using curl, so preinstall curl on the Vagrant box to make the guide easier to follow."
18502,CHANGELOG updates,
18503,Switching to the pinned version of msgpack,
18504,Encode/Decode test,
18505,consul: Improving test reliability,
18506,agent: test services are in sync when added from the API,
18507,agent: add test for consul service sync state,
18508,agent: initialize local consul service tags to fix service sync,
18509,agent: skip syslog test on windows,
18510,Cutting v0.4.1,
18511,agent: optimize rpc monitor test,
18512,Create build.bat,
18513,agent: fix failing monitor test,
18514,CHANGELOG updates,
18515,CHANGELOG updates,
18516,Merge pull request #401 from hashicorp/f-healthcheck,"Default services to ""critical"" state instead of ""unknown"""
18517,Merge pull request #400 from hashicorp/f-service-filter,"agent: Register ""consul"" service in agent layer"
18518,ui: fix session name overflow,fixes #353
18519,ui: reload acls after creating,fixes #323
18520,agent: fix tests after default status change,
18521,consul: Fixing FSM path tests,
18522,agent: fix failing test,
18523,consul: Ensure FSM stores data in the data dir,
18524,formatting,
18525,consul: FSM stores state in a given path only,
18526,consul: Allow providing a path for the state store,
18527,"agent: remove special case of consul service, adjust tests",
18528,consul/structs: keep HealthUnknown around for backward compatibility,
18529,consul: Reduce mmap size on 32bit,
18530,consul: kill remaining use of HealthUnknown,
18531,agent: Default health checks to critical. Fixes #341,
18532,agent: account for consul service in anti-entropy tests,
18533,agent: fix node name in cli test,
18534,agent: re-use ConsulServiceID from consul package,
18535,agent: auto-register the consul service on server nodes,
18536,agent: Allow 'consul' service to be targeted for events. Fixes #344,
18537,Merge pull request #397 from hashicorp/f-syslog,Filter messages logged to syslog
18538,Merge pull request #398 from hashicorp/ryanuber-docs,website: Documentation adjustments
18539,consul: less aggressive deadlock timer. Fixes #389,
18540,consul: Improve variable name,
18541,consul: Reap left members ignoring state. Fixes #371,
18542,consul: Log why invalidation happened. Fixes #390,
18543,website: re-word a few things,
18544,agent: Filter messages logged to syslog. Fixes #272,
18545,consul: Fixing graceful leave of current leader. Fixes #360.,
18546,website: Document Checkpoint. Fixes #340.,
18547,agent: Fixing multiple headers for /v1/event/list endpoint. Fixes #361,
18548,agent: Fixing tests,
18549,website: Adding FAQ page. Fixes #363.,
18550,website: add 0.4 to compatibility chart,
18551,Merge pull request #396 from ryanuber/f-retry-join,agent: Retry failed joins on agent start
18552,command: formatting,
18553,agent: test max retries in config,
18554,command/agent: add help for retry join,
18555,website: document retry join,
18556,agent: add retry join tests,
18557,agent: test retry join config,
18558,agent: merge RetryInterval in config merger,
18559,agent: first pass at join retry,
18560,Merge pull request #394 from iconara/patch-1,Fix mistake in the watches documentation
18561,terraform modules (for TF 0.3),
18562,Fix mistake in the watches documentation,
18563,CHANGELOG updates,
18564,consul: Deprecate ACLForceSet,
18565,consul: Fix non-deterministic ACL IDs,
18566,consul: Fix non-deterministic session IDs,
18567,Ensure FSM also does not use UUIDs,
18568,Adding script to verify no UUID generation done in state store,
18569,Use middleman-hashicorp for docs generation,
18570,Consul does not have prefixed packages (yet),
18571,Update extension version,
18572,Update WebUI download link,
18573,Remove glyphicons (vendored in extension),
18574,Use middleman-hashicorp :),
18575,Move sidebar helper inline,
18576,Include one javascript file and use sprockets,
18577,Update config.ru to cache everything at /assets,
18578,Pre-process Consul UI docs as ERB for image tags,
18579,Pre-process sessions docs as ERB for image tags,
18580,Pre-process architecture docs as ERB for image tags,
18581,Remove Gruntfile,
18582,Remove download_helpers helper,
18583,Merge pull request #385 from sarlalian/master,In FreeBSD bash is located at /usr/local/bin/bash instead of /bin/bash
18584,"Removed the FreeBSD export CGO_LDFLAGS option, as the workaround listed is no longer needed,",and breaks the build using any recent go on FreeBSD 10.
18585,Altered the /bin/bash line to use the /usr/bin/env command to,acquire the location of bash from the environment.  This should work on Linux/OS X/FreeBSD.  FreeBSD puts bash in /usr/local/bin instead of /bin/ so builds don't work without modification there.
18586,Merge pull request #378 from hashicorp/sethvargo/update_middleman,Update website to use latest middleman
18587,Merge pull request #379 from hashicorp/f-ui-deregister-node,Deregister node button in web UI
18588,Remove node from node list after deregristration,
18589,Drop debug console.log,
18590,Fix leaking objs variables,
18591,Add deregister node button,
18592,Update website to use the latest middleman and other gems,
18593,Remove dummy and version files (@pearkes said so),
18594,consul: don't close a nil connection,
18595,agent: tests for DNS truncate config,
18596,Merge pull request #376 from awheeler/master,agent: Adding support for enabling the DNS truncate flag for UDP queries.
18597,Added the dns_config option enable_truncate to the docs.,
18598,Adding support for enabling the DNS truncate flag for UDP queries.,
18599,Merge pull request #373 from carlanton/master,agent: Remove redundant assignment
18600,Remove redundant assignment,
18601,website: fixing formatting,
18602,Merge pull request #358 from SnehaM/master,Documenation fix : reload command
18603,Merge pull request #359 from christianberg/patch-1,Fix typo
18604,Fix typo,"Should be whitelist, not whilelist."
18605,reload command triggers reload,
18606,Hide vertical scrollbar in Safari,
18607,UI fix for OS X when having scrollbars always on,Resolves #343.
18608,Go format fix,
18609,Merge pull request #347 from sorenh/remote_exec_exit_code,agent: Pass exitCode by reference
18610,Merge pull request #349 from SnehaM/master,removed repeated 'can' Watches documentation
18611,Also change the call sites. sigh,
18612,Fix style issue in remote_exec_test,
18613,removed repeated 'can',
18614,Remove test code duplication,
18615,Pass exitCode by reference,"Arguments to defer statements are evaluated when the defer statement is evaluated, so pass exitCode by reference instead. Fixes issue #346"
18616,agent: Fixing issue with multiple watches. Fixes #337,
18617,Merge pull request #330 from sequenceiq/fix-forbidden-kv-ui,Change default token to empty string instead of undefined
18618,Change default token to empty string instead of undefined,fixes #329
18619,Merge pull request #324 from lalyos/patch-1,json sample fixed for PUT /v1/acl/create
18620,json sample fixed for PUT /v1/acl/create,
18621,ui: add footer,
18622,website: update web ui image in docs,
18623,Adding deps file for 0.4.0,
18624,Cutting v0.4.0,
18625,Merge pull request #322 from foostan/typofix,command: fix indent space
18626,Fix indent space,
18627,website: implicit -> explicit,
18628,Adding upgrade note,
18629,agent: Fixing config merge issue,
18630,Merge pull request #314 from drnic/goget,"make failure? - suggest ""go get -u ./..."""
18631,Preparing for 0.4RC,
18632,CHANGELOG updates,
18633,website: Documenting new options,
18634,agent: Support for checkpoint,
18635,CHANGELOG updates,
18636,website: document addresses config,
18637,agent: Address overrides. Fixes #301 and #253,
18638,agent: Adding address configurations,
18639,agent: statsd support. Fixes #247,
18640,suggest 'go get -u ./... before running make,
18641,Merge pull request #315 from drnic/publish-website,website - how to build & deploy site
18642,Merge pull request #316 from rubenv/patch-2,Fix typo
18643,Fix typo,
18644,website - how to build & deploy site,
18645,CHANGELOG updates,
18646,CHANGELOG updates,
18647,Merge pull request #312 from hashicorp/f-rexec,Adding support for 'exec' command
18648,website: Updating docs,
18649,command/exec: Improving output,
18650,command/exec: Tuning constants,
18651,agent: Handle cancel for idle wait,
18652,command/exec: Fixing verbose flag,
18653,command/exec: Testing exec,
18654,command/exec: High level tests,
18655,agent: Testing remote exec,
18656,agent: Refactor remote exec write code,
18657,agent: testing remote exec writer,
18658,command/exec: Fixing use of shutdown ch,
18659,agent: First pass at remote exec support,
18660,command/exec: First pass at exec command,
18661,command: Adding method to get client with datacenter,
18662,agent: Refactor msgpack serialization into util,
18663,agent: Adding remote exec configuration,
18664,Merge pull request #311 from josephholsten/alphatize-options,alphabetize config options in docs. Fixes #221
18665,alphabetize config options in docs. Fixes #221,
18666,website: typo fixes,
18667,Merge pull request #310 from josephholsten/raft-viz,add link to raft visualization
18668,add link to raft visualization,
18669,Merge pull request #308 from joonas/patch-1,website: fix typo
18670,Fixed a small typo,
18671,website: typo fixes,
18672,Merge pull request #307 from hashicorp/f-events,Adding support for user events
18673,website: Adding docs,
18674,command/event: Adding new event command,
18675,agent: Prevent hot spin on event list,
18676,command/watch: Changes for event watch,
18677,watch: Adding support for events,
18678,agent: Support event filtering on name,
18679,agent: First pass at multi-DC support,
18680,agent: Testing event endpoints,
18681,agent: First pass at event endpoints,
18682,agent: Testing user events,
18683,agent: Methods to get the user events,
18684,agent: remove userEventEnc type,
18685,agent: Adding event ingestion,
18686,agent: working on user events,
18687,consul: Testing user events,
18688,consul: Adding user event name tests,
18689,consul: Adding user event handler for callbacks,
18690,consul: expose UserEvent from Serf,
18691,ui: ambient dc failing checks,
18692,ui: use ACLs everywhere,
18693,ui: don't uppercase acl id,
18694,Merge pull request #302 from hashicorp/ui-acls,"UI: ACLs, Notifications, Settings"
18695,ui: remove stray debugging,
18696,ui: small acl mobile fix,
18697,ui: mobile fixes for acl,
18698,ui: more touches on create acl,
18699,ui: acl edit and creation,
18700,ui: add notification system,
18701,ui: initial settings ui,
18702,"ui: more acl integration, condensing top bar",
18703,ui: use ember object to wrap localstorag,
18704,ui: update readme for dev confi,
18705,ui: add a development config,
18706,ui: remove useless file,
18707,"ui/acls: compact nav, add ACL and url helpers",
18708,ui/acls: initial commit,
18709,website: Document node lifecycle. Fixes #282.,
18710,agent: Support encrypt CLI flag. Fixes #245.,
18711,website: Document client auth for TLS. Fixes #255.,
18712,website: Document data dir requirements. Fixes #264.,
18713,consul: Deny delete anonymous or update of root policies,
18714,agent: ACL violation returns 403 code,
18715,agent: Use SHELL if provided. Fixes #237.,
18716,consul: Ensure node/service/check registration is in a single txn,
18717,consul: fixing a unit test,
18718,consul: Refactor txn handling in state store,
18719,Merge pull request #298 from hashicorp/f-watch,Adding support for 'watches'
18720,website: Minor cleanups,
18721,website: Document watches,
18722,watch: Fixing bug with null keys,
18723,command/watch: Adding tests,
18724,command/watch: First pass at command,
18725,agent: Refactor script invoke,
18726,agent: First pass at agent-based watches,
18727,ui/views: jshint,
18728,ui/routes: jshint,
18729,agent: Changing to use nested JSON for watches,
18730,watch: Remove DSL in place of JSON,
18731,ui/models: jshint,
18732,ui/controllers: jshint,
18733,watch: Set the ACL token,
18734,watch: support parameter exemption,
18735,watch: support checks watch,
18736,go fmt,
18737,watch: supporting service watch,
18738,watch: node watcher,
18739,watch: service watcher,
18740,watch: Support for key prefix,
18741,watch: test key watch,
18742,watch: Testing plan execution,
18743,watch: First pass at query parsing,
18744,agent: Adding watches config,
18745,agent: Fixing ACL tests with token param,
18746,agent: Strict PUT for modifying ACLs,
18747,CHANGELOG updates,
18748,agent: Enforce PUT for session destroy. Fixes #285.,
18749,website: Fixing docs,
18750,Merge pull request #288 from gmr/rfc-2782-srv-lookups,Add RFC-2782 style SRV lookups
18751,Merge pull request #291 from hashicorp/f-acl,Adding support for ACL system
18752,consul: Ensure authoritative cache is purged after update,
18753,consul: Provide ETag to avoid expensive policy fetch,
18754,website: rewording,
18755,website: ACL internals,
18756,acl: Test parsing JSON,
18757,website: Documenting ACL endpoints,
18758,agent: Rename acl delete to destroy,
18759,acl: Updating for HCL changes,
18760,website: document configuration,
18761,agent: Copy token in KV PUT/DELETE,
18762,acl: Avoid shared cache with different parents,
18763,consul: ACL enforcement for KV updates,
18764,acl: Support checking write permissions on a prefix,
18765,consul: ACL enforcement for key reads,
18766,"consul: Filter keys, refactor to interface",
18767,consul: Helpers to filter on ACL rules,
18768,consul: Starting token enforcement,
18769,acl: Avoid infinite recursion...,
18770,"acl: Support ACL checks, adding new root policy",
18771,agent: Fixing the ACL tests,
18772,agent: Adding token parsing,
18773,agent: Special handler if ACL support is disabled,
18774,consul: Prevent resolution of root policy,
18775,consul: Resolve parent ACLs,
18776,acl: Return the parent with GetACLPolicy,
18777,consul: Support management tokens,
18778,"acl: Simplify parent ACL, adding root policies",
18779,consul: Adding some metrics for ACL usage,
18780,consul: Create anonymous and master tokens,
18781,consul: Testing down policies and multi-DC,
18782,consul: Testing ACL resolution,
18783,acl: Use only a single Radix tree per ACL,
18784,acl: Adding cache purging,
18785,consul: Use Etag for policy caching,
18786,acl: Adding additional tier of caching,
18787,consul: Support conditional policy fetch,
18788,acl: Associate policy ID,
18789,consul: Verify compilation of rules,
18790,acl: Change types,
18791,consul: Enable ACL lookup,
18792,consul: Pulling in ACLs,
18793,acl: Adding cached policy fetch via ACL,
18794,acl: Adding caching mechanism,
18795,acl: First pass,
18796,agent: ACL endpoint tests,
18797,agent: ACL endpoint,
18798,consul: ACL Endpoint tests,
18799,consul: Adding ACL endpoint,
18800,consul: register the ACL queries,
18801,consul: FSM support for ACLsg,
18802,consul: Adding ACLs to the state store,
18803,consul: ACL structs,
18804,agent: Adding ACL master token,
18805,consul: ACL setting passthrough,
18806,agent: Changing ACL config names,
18807,agent: Adding new ACL flags,
18808,Fix the over-indent,
18809,Add RFC-2782 style SRV lookups,
18810,website: More port use docs,
18811,Merge pull request #271 from lra/doc_ports,website: Document used ports
18812,Merge pull request #270 from lra/another_typo,"website: Missing ""it"" and other small fixes"
18813,Updated links to the deployment table,
18814,Some breath,
18815,Add a ports used section to the doc,
18816,paramter -> parameter,
18817,"Missing ""it""",
18818,Merge pull request #269 from lra/typos_in_doc,"Website: ""is"" extra word"
18819,extra word,
18820,website: Clarify the ?pretty docs,
18821,Merge pull request #267 from econnell/master,"agent: added URL query parameter of ""pretty=true"" to output formatted json"
18822,modified so ?pretty=anything will work,
18823,make pretty condition more readable,
18824,"updated website documentation with the ""pretty"" parameter",
18825,"added URL query parameter of ""pretty=true"" to output formatted json from the HTTP API",
18826,Merge pull request #1 from hashicorp/master,merging from hashicorp
18827,Run go fmt,
18828,Merge pull request #224 from hashicorp/f-case-insensitivity,DNS case-insensitivity
18829,Update CHANGELOG.md,
18830,Short doc note about DNS case-insensitivity,
18831,Don't override ServiceTags,
18832,Change order of fixtures,
18833,Make service tag filter case-insensitive,
18834,Make service index case-insensitive,
18835,Lowercase index key and lookup value if flag is set,
18836,Remove DC case-insensitive check from node test,
18837,Always lowercase incoming DNS query,
18838,Test DNS case-insensitivity,
18839,Add case-insensitive flag to MDBIndex,
18840,Add helper for lowercase list of strings,
18841,ui: add tests param to readme,
18842,Merge pull request #256 from gmr/favicon,Add the logo favicon to the webui
18843,Add the logo favicon to the webui,
18844,consul: Defer serf handler until initialized. Fixes #254.,
18845,Adding the deps file for 0.3.1,
18846,website: Update dummy,
18847,Cutting v0.3.1,
18848,agent: Provide better DNS setup error messages,
18849,ui: scroll extra items on nodes/services,fixes #232
18850,agent: Fixing issue with excessive failed node filtering,
18851,website: remove old docs on the -encrypt flag,
18852,Merge pull request #243 from nelhage/statsite,Fix statsite integration
18853,"While we're at it, make statsite_addr work at all.",
18854,There is no -statsite command-line flag.,
18855,agent: Fixing passing filter. Fixes #241,
18856,Merge pull request #239 from bscofield/clarify-rpc-addr,Improve clarity around changing the -client param
18857,Improve clarity around changing the -client param,"This is a small change that (IMO) makes more explicit the effect of changing -client -- namely, that you'll have to provide -rpc-addr to every other consul command you run."
18858,website: Keep old bootstrapping docs,
18859,Updating documentation for new bootstrap method,
18860,Merge pull request #233 from nelhage/tls-no-subjname,Restore the 0.2 TLS verification behavior.
18861,Merge pull request #235 from nelhage/fix-make-rules,Fix a Makefile typo that was breaking Travis.
18862,Fix a Makefile typo.,"The broken .PHONY declaration is breaking Travis: 'make deps' is now a no-op, because of the new 'deps' directory."
18863,Add some basic smoke tests for wrapTLSclient.,"Check the success case, and check that we reject a self-signed certificate."
18864,Restore the 0.2 TLS verification behavior.,"Namely, don't check the DNS names in TLS certificates when connecting to other servers. As of golang 1.3, crypto/tls no longer natively supports doing partial verification (verifying the cert issuer but not the hostname), so we have to disable verification entirely and then do the issuer verification ourselves. Fortunately, crypto/x509 makes this relatively straightforward. If the ""server_name"" configuration option is passed, we preserve the existing behavior of checking that server name everywhere. No option is provided to retain the current behavior of checking the remote certificate against the local node name, since that behavior seems clearly buggy and unintentional, and I have difficulty imagining it is actually being used anywhere. It would be relatively straightforward to restore if desired, however."
18865,Rename Expect to BootstrapExpect. Fixes #223.,
18866,ui: display session name on list of sessions under locked key,
18867,Merge pull request #227 from pkwarren/rpc_typo,Fix a small typo in RPC docs.
18868,Fix a small typo in RPC docs.,
18869,consul: Minor cleanups,
18870,Merge branch 'robxu9-master',
18871,Fixing merge conflict,
18872,Minor cleanup to logic and testsuite.,Signed-off-by: Robert Xu robxu9@gmail.com
18873,CHANGELOG updates,
18874,agent: Fixing missing copy of RejoinAfterLeave flag. #110,
18875,"Utilise new raft.SetPeers() method, move expect logic to leader.go.","This way, we don't use EnableSingleMode, nor cause chaos adding peers. Signed-off-by: Robert Xu robxu9@gmail.com"
18876,agent: Fix issues with re-registration. Fixes #216,
18877,Merge branch 'pmarkert-semantic',
18878,Fix merge conflict,
18879,Update leader-election.html.markdown,
18880,Merge pull request #217 from zembutsu/patch-2,website: fix typos
18881,Merge pull request #219 from pmarkert/master,Fixing small website typos
18882,website: Fixed semantic meaning of upstream in DNS guide,
18883,website: Format hyperlink inside HTML literal,
18884,website: Fixing small typos in guides section,
18885,fix typos,
18886,Add expect bootstrap '-expect=n' mode.,"This allows for us to automatically bootstrap a cluster of nodes after 'n' number of server nodes join. All servers must have the same 'n' set, or they will fail to join the cluster; all servers will not join the peer set until they hit 'n' server nodes. If the raft commit index is not empty, '-expect=n' does nothing because it thinks you've already bootstrapped. Signed-off-by: Robert Xu robxu9@gmail.com"
18887,agent: Copy ServerName config,
18888,Adding server_name configuration for TLS,
18889,Adding the build versions,
18890,Cutting v0.3.0,
18891,Merge pull request #212 from rbg/master,Seems like we should actually check the reference count.
18892,Merge pull request #210 from robholland/patch-1,Improve clarity of ?keys behaviour.
18893,Seems like we should actually check the reference count.,
18894,Improve clarity of ?keys behaviour.,"I read the previous version initially as meaning that it would return a list of keys which have no value set, which I couldn't understand. I think this removes some ambiguity."
18895,CHANGELOG updates,
18896,bench: results for 0.3rc,
18897,"ui: show service level tags, remove Node.nodeTags",
18898,ui: show tags inline in list of services in node view,
18899,Version bump for 0.3 RC,
18900,agent: Improve test reliability,
18901,website: Clarify upgrade procedures. Fixes #187.,
18902,website: Update compatibility table for 0.3,
18903,website: Show join help instead of members,
18904,website: Mention reload command in addition to SIGHUP,
18905,website: Document the new reload command,
18906,command/reload: Adding new command,
18907,website: Document reload RPC command,
18908,agent: Add reload to RPC clien,
18909,agent: Watch reload channel for trigger,
18910,agent: Adding reload RPC command,
18911,agent: Set custom syslog facility. Fixes #170.,
18912,agent: Adding SyslogFacility configuration,
18913,"consul: Start RPC before Raft, wait to accept connecitons",
18914,scripts: Ensure OSX build works on older versions. Fixes #147.,
18915,consul: start RPC after fully initialized. Fixes #160,
18916,consul: Avoid network for server RPC. Fixes #148.,
18917,testutil: Using the correct RPC struct,
18918,Merge pull request #205 from hashicorp/ui-testing,Initial UI tests
18919,ui: add nodeShow test,
18920,ui: add some basic tests,
18921,agent: Cleanup handling of defer checks,
18922,agent: Fixing merge of CheckUpdateInterval,
18923,consul: Provide output for serfHealth check. Fixes #176.,
18924,agent: Prevent anti-entropy from doing early sync of check output,
18925,Merge pull request #204 from hashicorp/f-check-freq,Add deferred sync for check output
18926,agent: Update config test to handle zero value CheckUpdateInterval,
18927,agent: leave inSync until the defer runs,
18928,website: Document the check_update_interval config,
18929,agent: Defer sync based on CheckUpdateInterval,
18930,agent: Allow CheckUpdateInterval to be zero,
18931,agent: Adding new CheckUpdateInterval config,
18932,ui: show session name if there is one,
18933,agent: Validate datacenter is valid. Fixes #169.,
18934,consul: Adding support for optional session name,
18935,consul: fixing use of nil log output. Fixes #203,
18936,Merge pull request #200 from hashicorp/f-dns,Adding support for DNS TTLs and stale reads
18937,ui: fix padding on panel bodies to align,
18938,ui: bump padding on double line list,
18939,Merge pull request #196 from hashicorp/ui-key-locking,UI Key Locking
18940,ui: add checks for sessions and a double line list,
18941,website: clarify unique per-ndoe,
18942,website: Documenting DNS settings,
18943,agent: Testing DNS TTLs,
18944,agent: First pass supporting DNS TTLs,
18945,agent: Support stale queries with retries,
18946,agent: Test DNSConfig merge logic,
18947,agent: Testing DNSConfig parsing,
18948,agent: Adding DNS more configuration,
18949,Rename shared msgpack handle,
18950,command/members: Remove tests for old role filter,
18951,Merge pull request #199 from abursavich/master,reuse codec.MsgpackHandle
18952,reuse codec.MsgpackHandle,
18953,command/members: Improve output. Fixes #143,
18954,consul: Gossip the build using Serf,
18955,agent: Add version to info output,
18956,agent: Ensure we don't retry too often,
18957,consul: Sort datacenter list. Fixes #198,
18958,ui: properly close h4 panel title,
18959,ui: list sessions on the nodes and allow invalidation,
18960,ui: add locking session below lock,
18961,ui: show isLocked for key,
18962,website: Clarify outage vs forced server removal,
18963,Merge pull request #194 from hashicorp/f-ui-improvements,UI Improvements
18964,ui: remove components from index,
18965,ui: remove components from compile,
18966,ui: clean up comments and old file,
18967,ui: remove debugging statement,
18968,ui: improve kv mobile view,
18969,ui: improve mobile scaling,
18970,ui: condense and improve UI for check display under services,
18971,ui: show and hide list view on mobile,
18972,Merge pull request #193 from davidpelaez/patch-1,website: Fix typo in TTL check update endpoints
18973,Fix typo in check update endpoints,The current website says that you can send output with the update of a check using the ?node parameter. It wasn't working and I check the source to find that it was (the more logical noun of) note! I changed the indication to replace ?node for ?note
18974,ui: don't record characters for search filter in browser histroy,
18975,ui: make 2nd pane scrollable,
18976,ui: kv layout improvements,
18977,ui: further compression of the nav,
18978,ui: pad service view in the middle,
18979,ui: expanded view collection height for services,
18980,ui: remove nodes debugging,
18981,ui: scrub out scrollable classes,
18982,ui: upgrade handlebars and use query params,
18983,ui: add version tags to ember files,
18984,"ui: ember to canary for query params, add query params",
18985,"ui: change ember to debug build, add list-view",
18986,ui: compile in list view,
18987,"ui: upgrade to ember 1.6.0 beta5, add list-view",
18988,ui: fix missing div in healthchecks,
18989,ui: can't check if notes/output on run loop,
18990,Merge pull request #188 from ultrabug/master,fix make dependency for the format target
18991,ui: improve health check formatting,
18992,"ui: call tags ""service tags""",
18993,ui: show tags on node view,
18994,"ui: condense entire layout, remove middle gap, kv condense",
18995,fix make dependency for the format target,
18996,"ui: action bar layout adjustments, ""no results"" text",
18997,ui: filter nodes/services by passing/failing statuses,
18998,"ui: default to condensed view, add secondary actions",
18999,ui: fix list border radi,
19000,ui: initial pass at filtering and condensed view for nodes/services,
19001,Merge pull request #183 from myfreeweb/master,fix freebsd build
19002,Merge pull request #182 from christianromney/master,website: Fixed spelling of 'service'
19003,fix freebsd build,
19004,Log peers when TestLeader_LeftServer fail,
19005,Re-configure LeaderLeaseTimeout to pass validation,
19006,ui: add condensed node view,
19007,Fixed spelling of 'service',
19008,Add myself to the community page,
19009,Merge pull request #179 from andrewwatson/patch-1,Minor Typo
19010,Minor Typo,
19011,agent: Omit certains keys from the /self endpoint,
19012,consul: Ensure clients also implement LocalMember,
19013,Merge pull request #173 from hashicorp/f-agent-self,Add /v1/agent/self and return local agent config
19014,"consul: Conn pool clean, spare existing streams",
19015,consul: Provide logger to yamux,
19016,consul: Suppress messages about closed connections,
19017,consul: ensure connections are properly closed,
19018,consul: Add new protocol version for yamux,
19019,consul: Pass protocol version for leader forwarding,
19020,"consul: remove explicit leave, use reconciliation",
19021,consul: Server processes local Serf join,
19022,consul: Fix client server reaping,
19023,consul: Store the protocol version for a server,
19024,consul: Adding Addr to serverParts,
19025,"consul: Pool client connections, support for yamux connections",
19026,consul: Support for incoming Yamux connections,
19027,Return both member and config in /v1/agent/self,
19028,bench: Fixing benchmark address on some systems,
19029,Merge pull request #174 from nelhage/multi-ca-cert,Allow multiple PEM-encoded certificates in the ca_file.
19030,Add /v1/agent/self and return local agent config,
19031,Increase wait time after agent.StartSync(),
19032,Wait for joining member in TestClient_JoinLAN,
19033,Fix tests on Go 1.3 and greater,Go 1.3 and greater require ServerName or InsecureSkipVerify to be set. https://codereview.appspot.com/67010043/
19034,"Revert ""Remove WaitForResult from two failing tests""",This reverts commit f0842409cde194ce2102ff2baf3de821cb6ac9d5.
19035,Remove TODO comments,
19036,Remove WaitForResult from two failing tests,
19037,Merge pull request #175 from nelhage/fix-tests,Fix some issues in tests.
19038,WaitForLeader: Also wait for a non-zero index.,"On my laptop, I'm currently seeing a huge number of intermittent test failures all related to WaitForLeader returning after the test node has become a leader, but before it has actually finished starting up, in particular, performing the serf/Raft reconciliation. Waiting for the index to become nonzero makes the tests pass reliably, by also blocking until the new leader has started committing state."
19039,tests: Don't generate binary output from checks.,"The tests will end up logging the check output, and spewing random binary all over a terminal never results in anything good."
19040,Allow multiple PEM-encoded certificates in the ca_file.,fixes #167
19041,consul: Suppress error if connection is closed,
19042,Merge pull request #168 from ryanuber/syslog-wrapper,command/agent: added missing syslog wrapper
19043,command/agent: added missing syslog wrapper,
19044,Support wildcard for check lookup. Fixes #152,
19045,Support rejoin after leave. Fixes #110.,
19046,agent: Improving test reliability,
19047,CHANGELOG updates,
19048,agent: syslog support. Fixes #105.,
19049,agent: Provide log info about encryption. Fixes #151.,
19050,agent: Support for raw key lookup. Fixes #150.,
19051,website: Document DNS truncation. Fixes #144.,
19052,Merge pull request #162 from hashicorp/f-locking,Adding support for sessions and locking in the KV store
19053,website: Document KV changes,
19054,website: Documenting the session endpoints,
19055,website: Adding guide on leader election,
19056,website: Starting to document sessions,
19057,agent: Adding locking support to KV store,
19058,"agent: Adding support for specifying LockDelay, defaults to 15 seconds.",
19059,consul: Adding support for lock-delay in sessions,
19060,agent: Session endpoint tests,
19061,agent: Require PUT to SessionCreate,
19062,gofmt,
19063,agent: First pass at session endpoints,
19064,consul: Adding tests for session endpoints,
19065,consul: First pass at Session RPC endpoints,
19066,consul: Testing FSM snapshot of sessions,
19067,consul: Testing KVS Lock/Unlock in FSM,
19068,consul: FSM tests for session,
19069,consul: Adding support for sessions to FSM,
19070,consul: Adding SessionList to snapshot,
19071,consul: Session invalidation releases locks,
19072,consul: Support KVSLock and KVSUnlock,
19073,consul: Switch notify to using txn defer,
19074,consul: Adding session invalidation,
19075,consul: Adding Defer to MDBTxn,
19076,consul: Adding session tests,
19077,bench: minor updates,
19078,consul: Adding SessionDestroy,
19079,consul: Adding session lookup methods,
19080,consul: Adding SessionCreate and SessionRestore,
19081,consul: Adding util method to generate a UUID,
19082,consul: Adding new session tables,
19083,Merge pull request #161 from rymai/patch-1,website: typo
19084,Typo,
19085,scripts: chmod for dist,
19086,Cutting v0.2.1,
19087,CHANGELOG updates,
19088,Merge pull request #145 from abursavich/master,consul: use empty slice instead of nil slice when no tags exist for /v1/catalog/services
19089,Merge pull request #136 from hashicorp/f-testutil-package,WIP: Proof of concept using WaitForResult in tests
19090,consul: Disable conflict resolution. See #97.,
19091,consul: Avoid name conflict on WAN ring. Fixes #158.,
19092,ui: add a create key shortcut into breadcrumbs,this fixes #100
19093,agent: Support -advertise cli flag. Fixes #156.,
19094,command/agent: block windows socket errors,
19095,command/agent: find proper private IP on Windows,/cc @armon
19096,consul: Remove RPC client tracking. Fixes #149.,
19097,Merge pull request #146 from lalyos/install-docs,Install docs includes OSX specific oneliner method
19098,Install docs includes OSX specific oneliner method,
19099,use empty slice instead of nil slice when no tags exist for service,
19100,consul: Adding a Raft command enqueue limit,
19101,Add TODOs for failing tests,
19102,Wait wrap tests in TestServer_JoinLAN,
19103,Run checks more often in expectStatus,
19104,Sleep since no obvious way to wait for shutdown,
19105,Fix race condition in TestLeader_RegisterMember,
19106,Fix race condition in TestCatalogListNodes,
19107,Speed up test runs in WaitForResult,
19108,Merge pull request #139 from zenazn/patch-1,docs: spelling
19109,s/direclty/directly/,
19110,Increase timeout for WaitForResult,
19111,Change blocking call sleep time,
19112,Fix race condition in TestHTTPAgentJoin_WAN,
19113,Remove all sleeps from client_test.go,
19114,Fix race condition in TestLeader_FailedMember,
19115,Remove all sleeps from internal_endpoint_test.go,
19116,Remove all sleeps from kvs_endpoint_test.go,
19117,Remove all sleeps from ui_endpoint_test.go,
19118,Remove all sleeps from `status_endpoint_test.go,
19119,Remove all sleeps from leader_test.go,
19120,Remove all sleeps from server_test.go,
19121,Remove all sleeps from status_endpoint_test.go,
19122,Fix imports in health_endpoint_test.go,
19123,Remove most sleeps from rpc_client_test.go,
19124,Remove all sleeps from catalog_endpoint_test.go,
19125,Remove all sleeps from health_endpoint_test.go,
19126,Require datacenter argument for WaitForLeader,
19127,website: mention client_addr,
19128,"bench: Read not representative, cache increasing read rate.",
19129,bench: Adding a simple benchmarking setup,
19130,agent: Correct spelling of separator. Fixes #101.,
19131,"website: update docs, CLI flag no longer available",
19132,Merge pull request #138 from nelhage/docfix,"docs: The config key is ""encrypt"", not ""encrypt_key"""
19133,"docs: The config key is ""encrypt"", not ""encrypt_key""",
19134,Move argument structs back in original position,
19135,Move WaitForLeader calls to top of test,
19136,Add test file for testutil,
19137,Drop client arguments from WaitForLeader,
19138,Remove some sleeps from local_test.go,
19139,Remove all sleeps from kvs_endpoint_test.go,
19140,Drop unnecessary sleep,
19141,Remove all sleeps from health_endpoint_test.go,
19142,Remove all sleeps from catalog_endpoint_test.go,
19143,Fix formatting in TestForceLeaveCommandRun,
19144,Remove all sleeps from agent_endpoint_test.go,
19145,Remove all sleeps from force_leave_test.go,
19146,Fix TestCatalogListNodes_StaleRaad with WaitForLeader,
19147,Add testutils.WaitForLeader and truly wait,
19148,Proof of concept using WaitForResult in tests,
19149,agent: Limit KV entries to 512KB. Fixes #123.,
19150,consul: Drop the Raft logs size warning from 8MB to 1MB,
19151,agent: Minor cleanups,
19152,Fix race condition in TestCheckTTL,Apparently the execution of TestCheckTTL could sometime take > 10ms causing it to fail. This commit will eliminate the race condition for most modern hardware.
19153,Update CHANGELOG.md,
19154,Merge pull request #128 from carlosdp/pid-file,Add pid-file flag to agent
19155,website: improve the docs for the agent TTL endpoints,
19156,Return pid file errors and fix help formatting,
19157,Merge pull request #129 from carlosdp/makefile-format,LGTM! Thanks! Good read on go fmt: http://blog.golang.org/go-fmt-your-code
19158,Add format task to all and silence large output,
19159,Add make format task,
19160,Use proper shell expansion in Makefile,
19161,Add pid-file option to agent docs,
19162,Add flag to agent to write pid file,
19163,Merge pull request #127 from tiwilliam/fix-cancel-transition,ui: Fix parentKey transitions to root on cancel
19164,Fix parentKey transitions to root,"Previously, deleting a key in /dc1/kv/ would transition to /dc1/kv// on success. A refresh at this stage would lead to 404, this commit will fix this and generate the correct route key in a helper function."
19165,update changelog,
19166,"ui: actually render an error message, hide delete on root",cc/ @tiwilliam
19167,Merge pull request #124 from tiwilliam/delete-folders,Add delete folder button to web UI
19168,Rename KvHelpController to KvBaseController,
19169,Drop duplicate isLoading set to false,
19170,Transition to nearest parent on key delete,
19171,Clean up root check,
19172,Redirect to correct root path when deleting keys,
19173,Revert modifications to getParentAndGrandparent,
19174,Add delete folder button to web UI,
19175,Merge pull request #122 from tiwilliam/cancel-edit-key,ui: Add cancel button to key edit
19176,Add cancel button to key edit,
19177,update changelog,
19178,update changelog,
19179,Merge pull request #119 from tiwilliam/dash-in-keys,Allow keys with dashes in web UI
19180,Rename root variable,
19181,Allow using dashes in keys,
19182,Merge pull request #116 from tiwilliam/master,command/members: Return exit code 2 if member filter doesn't match any node
19183,website: Fixing old reference to dns_addr,
19184,Merge pull request #117 from tiwilliam/fix-js-paths,Fix broken paths to vendor minified JS
19185,Fix broken paths to vendor minified JS,
19186,Return exit code 2 if member filter doesn't match any node,
19187,Merge pull request #113 from pooya/master,website: fix a couple of typos.
19188,website: fix a couple of typos.,
19189,"website: remove some serf stuff, old js files",
19190,ui: pre-minify JS libs,
19191,Merge pull request #107 from darron/patch-1,website: typo
19192,Fix typo.,
19193,website: fixing demo link,
19194,Merge pull request #103 from alex-sherwin/patch-1,"fixing typo, missing ""like"""
19195,"fixing typo, missing ""like""",
19196,consul: Fixing for upstream API changes,
19197,ui: fix responsiveness for medium-sm screens,
19198,ui: delete backup files,
19199,ui: slight typo in makefile,
19200,ui: README,
19201,ui: Automatically replace assets,
19202,ui: improve build instructions,
19203,website: web is not an OS,
19204,website: update UI,
19205,website: link to proper UI page,
19206,website: getting started UI page,
19207,Using older OS's for compilation,
19208,scripts: dist handles UI,
19209,Split GOPATH properly on Windows builds,
19210,Update CHANGELOG style,
19211,website: pages for UI download,
19212,Version bump for v0.2.0,
19213,Merge pull request #98 from hashicorp/f-web-ui,Adding the Web UI
19214,website: Adding links to demo,
19215,ui: fix dc # of failing checks,
19216,ui: add panelbar helper,
19217,ui: see warning as failing,
19218,ui: fix index page to show sleect,
19219,ui: show services and then checks,
19220,ui: hide dropdown when activating route,
19221,ui: hide dropdown after switching dc,
19222,ui: fix link to services in header nav,
19223,ui: more loading indicators,
19224,ui: loading,
19225,ui: fix datacenter route typo,
19226,ui: better error handling,
19227,ui: clean with makefile,
19228,ui: add default js path for dist,
19229,"ui: pre fixes, dist build changes",
19230,"ui: ignore compiled js, dist",
19231,"ui: update ember, dist steps",
19232,ui: mobile improvements,
19233,ui: better error handling,
19234,"ui: refactor kv controllers, finish multi-dc support",
19235,ui: improve mobile view,
19236,ui: more fixes around the readme,
19237,ui: update readme,
19238,ui: button default focus states,
19239,ui: bump down the size on the health check name under service,
19240,"ui: error pages, help text",
19241,ui: refresh node list after create,
19242,ui: fix edit view breadcrumbs,
19243,"ui: handle ""folders"", directory browsing with parents",
19244,ui: fix nesting KV,
19245,"ui: datacenter support, kv fixes",
19246,ui: fix makefile,
19247,ui: use parent/grandparent keys for key creation,
19248,ui: handle empty kv index,
19249,"ui: refactor controllers, routes to use promise hash, comments",
19250,agent: Key list of root returns empty list with 200 instead of 404,
19251,ui: kv wire to API,
19252,ui: use a promise hash for nodes,
19253,ui: wire up kv,
19254,"ui: wire up services, nodes, checks",
19255,agent: Summarize node level checks as well,
19256,ui: more ui / focus / animation states,
19257,"ui: more animations, fix container layout for kv",
19258,ui: experiment with the vertical line,
19259,ui: add delete key functionality,
19260,ui: new key for padding,
19261,ui: add support for creating/validating keys,
19262,ui: kv styling and active states,
19263,ui: lighten button border primary,
19264,ui: kv updates and improved active list view,
19265,ui: show address and properly depend on Checks,
19266,ui: better kv parent navigation,
19267,ui: kv load from url,
19268,ui: properly nest kv resources,
19269,ui: further k/v improvements,
19270,website: Document the KV API changes,
19271,agent: Support key listing with seperator,
19272,consul: Support listkeys without seperator,
19273,consul: Adding ListKeys endpoint,
19274,consul: Adding a key listing mechanism,
19275,agent: Adding UI services endpoint,
19276,ui: basic k/v layout,
19277,agent: Adding node UI endpoint,
19278,agent: Adding nodes UI endpoint,
19279,consul: Rename Misc RPC to Internal,
19280,ui: more mobile work,
19281,consul: Testing the Misc endpoitns,
19282,consul: Adding Misc RPC endpoint,
19283,consul: Adding methods to dump node info,
19284,agent: Redirect to UI if we have one,
19285,ui: add dcs to index,
19286,"ui: light up the nav, aggregate checks",
19287,"ui: styles, simpler active state",
19288,"ui: link to panels, drop actions",
19289,ui: refactor file structure,
19290,"ui: add kv to nav, embed",
19291,ui: more refactoring for nested resources,
19292,ui: refactor nodes as embedded resource,
19293,"ui: refactor services, dc to be nested resources",
19294,"ui: link-to for list items, active state",
19295,ui: clickable nodes in list,
19296,agent: Simplify serving of ui files,
19297,ui: improved fixtures,
19298,ui: improve comments,
19299,ui: nodes fixtures revision,
19300,ui: add nodes,
19301,"ui: tags, service fixture changes",
19302,ui: basic styles for check list,
19303,ui: more work on loading data for /services,
19304,ui: add comments to application so far,
19305,ui: initial ember application,
19306,ui: smaller font in list list's,
19307,ui: Use relative import paths,
19308,agent: Improving UI file serving,
19309,agent: Adding endpoint to serve the UI,
19310,agent: Pass UiDir into the HTTP layer,
19311,website: Document the ui-dir flags,
19312,agent: Adding -ui-dir CLI flag,
19313,agent: Adding UiDir config param,
19314,ui: lead-in info for style guide,
19315,ui: more improvements to the style guide,
19316,ui: progress on style guide,
19317,ui: add base ember,
19318,ui: use a /static directory,
19319,ui: initial commit,
19320,CHANGELOG updates,
19321,Merge pull request #96 from gmr/master,website: Minor documentation fixes
19322,Revert the interval and TTL values,
19323,Minor documentation fixes, Correct spotted typos Ran JSON snippets through jsonpp for consistent display of JSON results Unfortunately my editor stripped EOL whitespace so there's a bit of whitespace diff
19324,consul: Hack around LMDB delete issue. Fixes #85.,
19325,agent: Limit health check output to 4K. Fixes #83.,
19326,command/info: Move warning output to the top,
19327,command/info: Warn on GOMAXPROCS = 1. Fixes #87.,
19328,consul: Expose runtime stats for debugging,
19329,consul: Adding a warning for large raft entries,
19330,consul: Increase DB size on 64bit systems. Fixes #81.,
19331,agent: Write out the meta data before a potential 404,
19332,Merge pull request #78 from tarrant/case_insensitive_durations,agent: Case insensitive durations
19333,scripts: Protect against multiple gopaths,
19334,Merge pull request #80 from rbg/master,scripts: pick first directory from GOPATH
19335,Merge pull request #79 from zembutsu/patch-1,Website: fix typo
19336,fix typo,
19337,When mangaling JSON to parse durations do a case insensitive key lookup,
19338,pick first directory from GOPATH,
19339,Merge pull request #76 from garethr/patch-1,website: Remove SRV from DNS query tag example
19340,Remove SRV from DNS query tag example,"The results show the A record, not the SRV record"
19341,agent: Adding debug log messages,
19342,agent: Adding random stagger to anti-entropy. Fixes #72.,
19343,consul: Do not fire ServerUp on WAN node join,
19344,consul: Clear peer set on leave. Fixes #69,
19345,website: Adding the output key to docs examples,
19346,Store check output in dedicated field. Fixes #59.,
19347,website: typo fix,
19348,agent: Support server-side filtering of passing checks. Fixes #57.,
19349,Merge pull request #68 from hashicorp/f-consistency,"Adding support for ""stale"" and ""consistent"" read modes"
19350,agent: Improve DNS parser. Fixes #39.,
19351,agent: Fix decoding of checks. Fixes #60,
19352,agent: Adding minimum check interval. Fixes #64.,
19353,website: Cleanup verbage,
19354,website: Document the consistency modes,
19355,website: Document HTTP changes,
19356,agent: Adding HTTP tests for new features,
19357,agent: Updating tests for new API,
19358,"agent: Remove wrapQuery, call setMeta directly",
19359,agent: Parse the consistency flags,
19360,agent: Updating to remove BlockingQuery,
19361,consul: Adding strongly consistent read tests,
19362,consul: Testing a stale read,
19363,consul: Adding consistent read enforcement,
19364,consul: Merging BlockingQuery into QueryOptions,
19365,consul: Use QueryMeta to simplify blockingRPC interface,
19366,consul: Move the Index into QueryMeta,
19367,consul: Moving QueryMeta handling into blockingRPC,
19368,consul: Adding a method to enforce consistent read,
19369,consul: Testing QueryMeta,
19370,consul: Adding support for QueryMeta on all queries,
19371,consul: Support a stale read query,
19372,consul: Switch to RPCInfo,
19373,consul: Adding RPCInfo to get common info,
19374,consul: Adding additional query options and return meta data,
19375,Merge pull request #66 from s0enke/vagrant_example_name_nodes,demo: Make example vagrant boxes easier to handle.
19376,Make example vagrant boxes easier to handle.,By setting the hostname of the testnodes in order to make them distinguishable from each other (currently both nodes have precise64 as default hostname).
19377,Adding travis badge,
19378,Adding Travis file,
19379,consul: Update to use raft-mdb package,
19380,Merge pull request #62 from zyegfryed/patch-1,website: typo
19381,Merge pull request #63 from zyegfryed/patch-2,demo: typo
19382,Typo,
19383,Typo,
19384,website: Clarify the Serf vs Consul,
19385,agent: Fixing similar deregister routing bug with checks,
19386,agent: Fix service deregister routing,
19387,website: Typo fix,
19388,Merge pull request #56 from hmrm/documentation_minor-consistency-fixes,documentation: minor comment consistency in agent.go
19389,documentation: minor comment consistency in agent.go,
19390,Merge pull request #53 from chrono/patch-1,website: fix small doc typo
19391,fix typo,
19392,Merge pull request #49 from cespare/copy-fixes-1,"website: Copy fixes: typos, misspellings, grammar, wording"
19393,"Copy fixes: typos, misspellings, grammar, wording",
19394,Merge pull request #47 from kanzure/chef-puppet-typo,website: Fix typo in comparison to chef/puppet
19395,typo: configuraiton -> configuration,
19396,Merge pull request #46 from jpfuentes2/jf_fix_json_header,agent: Ensure we write json header before writing bytes
19397,Ensure we write json header before writing bytes,In net/http once we've issued a Write() the response is sent over the wire including the header! The tests didn't catch this because I used a net/http/httptest.RequestRecorder which doesn't follow those semantics.
19398,Update CHANGELOG,
19399,Merge pull request #45 from jpfuentes2/jf_use_json_content_type,command/agent: add content-type: application/json header to HTTP API
19400,HTTP: add content-type: application/json header,
19401,Merge pull request #44 from mwarkentin/patch-1,Fix typo: connecitons -> connections
19402,Fix typo,
19403,website: Typo. Fixes #43.,
19404,scripts: fix issue with dist files havig bad format,
19405,website: fix downloads,
19406,website: fix download style,
19407,website: fix download finder,
19408,website: up version for website,
19409,website: fix clickability of the intro button,
19410,website: update wording for dns/hostname warning,
19411,"website: grammar, I think",
19412,website: add a warning about dns/hostnames on os x,
19413,website: fix outline on button focus,
19414,website: add a favicon and seo description,
19415,website: lower padding for intro button section,
19416,website: fix name in license,
19417,website: add a clear next step to intro after demos,
19418,website: fix readme (serf -> consul),
19419,Update README,
19420,scripts: dist should have version in filename,
19421,website: Grammar cleanup,
19422,website: Add note about jepsen testing,
19423,website: Adding page on Jepsen testing,
19424,Adding 32bit box to Vagrantfile,
19425,scripts: dist script,
19426,Up version for dev,
19427,v0.1.0,
19428,Fix release date,
19429,Add CHANGELOG,
19430,command/members: API update for columnize,
19431,Merge pull request #37 from jpfuentes2/jf_internals_tweaks,"website: Round 2: Fix typos, grammar errors, and misspellings"
19432,"Round 2: Fix typos, grammar errors, and misspellings",
19433,Merge pull request #36 from jpfuentes2/jf_intro_tweaks,"website: fix typos, grammar errors, and misspellings"
19434,"Fix typos, grammar errors, and misspellings",
19435,agent: Add warning if windows and running server mode,
19436,website: update community,
19437,website: Google analytics,
19438,website: downloads,
19439,website: update gemfile lock and add version text,
19440,website: Remove the build dir,
19441,Ignore the website build dir,
19442,Disable compression for now,
19443,Update Gemfile to not have byebug,
19444,Make websites push,
19445,Add the website push script,
19446,website: update next steps,
19447,website: k/v getting started,
19448,website: health checks page,
19449,Merge pull request #35 from captainill/master,sidebar-dots.jpg!
19450,missed tracking dots.jpg,
19451,agent: Simplify the local state sync,
19452,website: compress all images losslessly,
19453,website: creating a cluster,
19454,website: getting started registeringa  service changes,
19455,website: agent getting started modifications,
19456,agent: Fixing wrong port usage for server,
19457,README: fixing link,
19458,website: Fixing Google group link,
19459,website: intro add basic architecture,
19460,website: Typo fix,
19461,website: some vs copy changes,
19462,website: Fixing various links,
19463,website: Fixing link to github,
19464,Minor copy changes,
19465,website: it is 2014,
19466,website: Copy changes,
19467,Filling in READMe,
19468,website: fix homepage,
19469,website: homepage,
19470,website: homepage copy,
19471,website: darken features sections,
19472,website: homepage copy and some stylesheet fixes,
19473,website: fix json in example,
19474,website: better spacing on the json,
19475,website: fix margin under terminals,
19476,website: Add a Vagrantfile,
19477,website: fix whitespace on terminal demos,
19478,website: add terminal demos,
19479,website: don't use compiled CSS,
19480,"website: update middleman, use asset pipeline",
19481,remove random bootstrap file from docs,
19482,agent: Testing start_join parsing,
19483,agent: Adding support for -join flag. Fixes #33.,
19484,command: Fixing more tests,
19485,website: Document the port configurations,
19486,website: Documentation cleanup,
19487,main: Fixing app name,
19488,agent: Nice info output,
19489,agent: Simplifying configs,
19490,agent: First pass at improving flags,
19491,website: Adding guide on outage recovery,
19492,website: Multiple warnings about single server deployment,
19493,website: Guide for adding/removing servers,
19494,website: Minor cleanups,
19495,website: Adding multiple datacenter guide,
19496,consul: Fix a 64bit alignment issue for x86-32,
19497,website: finishing up getting started,
19498,website: More getting started info,
19499,website: Working on getting started guide,
19500,website: Remove event handlers and user events pages,
19501,website: Update link to deployment table,
19502,demo: Adding a basic vagrant file for a simple cluster,
19503,website: Update custom solutions page,
19504,website: Adding the Serf comparison,
19505,website: Add skydns and smartstack pages,
19506,website: remove fabric comparison,
19507,website: Adding the vs nagios/sensu page,
19508,website: Update Chef comparison,
19509,website: remove use cases,
19510,website: Fill in the intro page,
19511,website: typo,
19512,website: Filling in the vs ZooKeeper,
19513,website: Move the comparisons to sub-dir,
19514,website: Doc cleanup,
19515,Merge branch 'bindGuide' of https://github.com/andrewwatson/consul into andrewwatson-bindGuide,Conflicts:     website/source/docs/guides/index.html.markdown
19516,small verbiage update,
19517,updated docs to remove multiple zones and provide examples of testing,
19518,website: Documentation cleanup,
19519,Merge pull request #31 from captainill/master,Subpages and more responsive tweaks
19520,responsive/finishing touches,
19521,new guide for setting up bind and Consul to play nice,
19522,footer responsive nav,
19523,footer responsive nav,
19524,responsive cleanup,
19525,responsive docs,
19526,docs background color sorted out,
19527,add layout class names and subpage class,
19528,cleanup,
19529,website: Clarify the DNS documentation,
19530,Merge pull request #28 from hashicorp/f-tls,Adding support for TLS
19531,website: Remove roadmap,
19532,website: More info on TLS encryption,
19533,website: Document new TLS flags,
19534,Adding testing certificates,
19535,consul: Adding client/server TLS tests,
19536,consul: Refactor to pull out server config,
19537,consul: Adding configuration tests,
19538,agent: Adding tests for TLS configs,
19539,consul: Fix decoding of certificate,
19540,consul: Simplify TLS handling in RPC server,
19541,agent: Passthrough of TLS configurations,
19542,consul: Enforce TLS if VerifyIncoming is set,
19543,consul: Ensure Raft also uses TLS connections,
19544,consul: Enable incoming TLS connections to server,
19545,consul: Server initializes pool with TLS settings,
19546,consul: Client initializes TLS settings,
19547,consul: Connection pool supports TLS mode,
19548,consul: Adding basic TLS configuraiton,
19549,Merge pull request #27 from captainill/master,Homepage design
19550,Merge branch 'master' of github.com:captainill/consul,
19551,homepage,
19552,consul: Export some telemetry on service queries,
19553,website: Mention that telemetry can be streamed,
19554,Merge pull request #26 from hashicorp/f-tags,Adding support for multiple tags
19555,consul: Adding reconcilation to handle reaped Serf nodes. Fixes #15.,
19556,website: Correct some empty lists to null,
19557,agent: Add backwards compatibility hack for old 'tag' definitions,
19558,website: Updating the tags documentation,
19559,agent: Support multiple tags per service registration,
19560,consul: Adding test for multiple tags with lookup,
19561,consul: Updating all the tests,
19562,consul: Change state store to support multiple tags,
19563,consul: Replace single tag with list of tags,
19564,Merge pull request #19 from jpfuentes2/master,Fix some docs/internals typos and add raft link
19565,Merge pull request #20 from andrewwatson/patch-1,website: s/Serf/Consul/g
19566,s/Serf/Consul/,
19567,Merge branch 'master' into jf_improve_consensus_internals_doc,
19568,Merge pull request #17 from hashicorp/f-kv,Adding simple Key/Value Store
19569,consul: FSM snapshot can avoid type assertion,
19570,consul: Avoid loading all KV pairs during a snapshot,
19571,consul: Support a streaming transaction,
19572,consul: More efficient restore of KVS entriesg,
19573,website: Document the Key/Value API,
19574,website: Update format of consul info,
19575,agent: Adding tests for the KV endpoints,
19576,consul: Adding raft endpoint to force a snapshot,
19577,consul: Fixing blocking query if set table is at index 0,
19578,agnet: Fix parsing of cas flag,
19579,consul: Return 404 if no entries found,
19580,consul: Enable a recursive delete of all keys,
19581,agent: First pass at KVS endpoints,
19582,consul: Test the remaining KVS endpoints,
19583,consul: Adding tests for endpoint method,
19584,consul: First pass at KVS endpoints for RPC,
19585,consul: Adding KVS RPC endpoint,
19586,consul: Testing FSM application of KVS commands,
19587,consul: FSM support to snapshot/restore KVS values,
19588,consul: Adding FSM support for KVS operations,
19589,consul: Snapshot KVS store support,
19590,consul: Support DeleteTree,
19591,consul: Adding support for KVSList,
19592,consul: Adding support for virtual indexes,
19593,consul: Implementing Check-And-Set,
19594,consul: Implement KVSDelete,
19595,consul: Implement and test KV get and set,
19596,consul: Adding KVSDeleteTree operation,
19597,consul: Adding kvs table to state store,
19598,consul: Adding new directory structs for KVS,
19599,Add raft link and fix some typos,
19600,consul: Only close the cursor for read-only transactions (mdb),
19601,consul: Should not clear the peer set,
19602,consul: Fixing issue with cursors not closing in MDB,
19603,consul: Set maximum consul DB size to 128MB,
19604,consul: Set maximum raft log size to 128MB,
19605,Updated gitignore,
19606,consul: Handle reaping of serf members,
19607,consul: Increase default reap time to 3 days,
19608,agent: Use EnableDebug to control adding pprof HTTP endpoints,
19609,agent: adding EnableDebug config,
19610,consul: Ignore new Serf events,
19611,agent: Support protocol version setting,
19612,command/version: Print the version ranges,
19613,"command/members: Remove the detailed flag, abstraction leak",
19614,consul: Add tags for consul protocol versions,
19615,consul: Adding protocol version numbers,
19616,command/members: USe the columnize library for members,
19617,consul: Fixing subtle delete issue,
19618,consul: Peg Serf proto version to 3,
19619,Vagrantfile,
19620,agent: Handle API changes,
19621,consul: Handle API changes in StateStore,
19622,command/info: remove unused import,
19623,consul: Log instead of panic. Change NodeServices to return nil.,
19624,consul: Providing logOutput to StateStore,
19625,consul: Update example output,
19626,agent: Fixing DNS CNAME recursion,
19627,agent: Tell client DNS recursion is available,
19628,agent: Support CNAME recursion if we have a recursor,
19629,website: document registering of external services,
19630,agent: DNS layer properly handles AAAA and CNAME records,
19631,website: Update bootstrapping guide to use the info command,
19632,website: Update sample output again,
19633,website: Update sample output,
19634,consul: Passthrough the Serf Stats(),
19635,agent: Fixing bug in dns service filtering,
19636,website: Documenting the info command,
19637,command/info: Adding new info command,
19638,agent: Adding Stats() export,
19639,consul: Adding Stats() method to get various debugging information,
19640,website: adding guide on bootstrapping a DC. Fixes #5.,
19641,agent: Disallow bootstrap mode when a client. Fixes #3,
19642,website: document registering checks and services better. Fixes #6,
19643,website: Clarify the ?index parameter. Fixes #7,
19644,agent: Adding a check for GOMAXPROCS. Fixes #10.,
19645,"agent: Switch to -data-dir, better error if missing. Fixes #2.",
19646,consul: Default recursor port 53. Fixes #4,
19647,Update scripts for cross-compile,IT doesn't really work though because of cgo but... at least its there.
19648,consul: Increase network timeout value,
19649,consul: Reduce the number of raft snapshots we keep,
19650,"If not in bootstrap mode, clear the raft peerset",
19651,consul: Only add ourself to the peerset if we are in bootstrap mode,
19652,consul: Do not replay events on serf join,
19653,agent: Copy the help text,
19654,consul: Adding telemetry,
19655,agent: Adding support for statsite telemetry,
19656,agent: Enable dumping telemetry on SIGUSR1,
19657,website: documenting the internals,
19658,website: fixing typo,
19659,website: document the high level architecture,
19660,website: finish the HTTP documentation,
19661,agent: simplify a select block,
19662,consul: Use serf event to announce new leader,
19663,website: working on documenting http api,
19664,website: document the DNS interface,
19665,website: document checks and services,
19666,website: replace serf with consul,
19667,website: replacing serf references,
19668,website: updating documentation on commands,
19669,website: working on docs,
19670,agent: Only truncate DNS results for a UDP query,
19671,"agent: Shuffle DNS responses, limit records",
19672,website: bulk copy from serf,
19673,Add test file for structs package,
19674,agent: adding ability to reload services and checks,
19675,agent: Adding server up callback to make state sync faster,
19676,agent: Adding support to edge trigger consul server coming up for state sync,
19677,agent: Adding some primitive config reloading,
19678,agent: adding ability to pause syncing,
19679,agent: Adding tests for config parsing,
19680,consul: ConnPool multiplexes a single connection instead of using multiple,
19681,consul: Make some ConnPool methods private,
19682,consul: Allow receiving RPC connections,
19683,TODO cleanups,
19684,agent: adding more tests,
19685,agent: RPC changes and blocking query support,
19686,consul: Fixing struct type,
19687,consul: ensure conn pool shutdown is fast,
19688,agent: Adding CLI flags,
19689,consul: Health endpoints support blocking queries,
19690,consul: Adding a sanity check,
19691,consul: Support blocking queries for the Catalog,
19692,consul: Enable ListNodes and ListServices to be a blocking query,
19693,"consul: Cleanup the FSM, running out of file handles",
19694,consul: Adding indexed versions of return structs,
19695,consul: blockingRPC is a helper method for queries that need to block,
19696,"consul: State store can return the tables for a query, and watch for changes",
19697,consul: Adding BlockingQuery to structs to wait for changes,
19698,consul: Add a guard against deadlock in MDB,
19699,consul: reduce the scope of various transactions,
19700,consul: Notify watchers of changes,
19701,consul: Move notification group from MDBTable into the state store,
19702,consul: updating state store to associate changes with raft index,
19703,agent: Fixing test with new struct,
19704,consul: Add a NotifyGroup to the MDBTable,
19705,consul: Adding a simple notification mechansim,
19706,consul: MDBTable can track a special 'last index' value,
19707,consul: Log state store errors,
19708,agent: First pass at parsing service and check definition,
19709,consul: client re-uses the last connection if error free,
19710,consul: benchmark the ListNodes RPC method,
19711,consul: Adding some benchmarks to test state store,
19712,command/members: update for serf changes,
19713,agent: test the register/deregister service endpoint,
19714,agent: Adding tests for agent check endpoints,
19715,agent: First pass at register service and check locally,
19716,agent: First pass at the easy endpoints,
19717,agent: Skeleton for HTTP based service/check registration,
19718,agent: Adding methods to register services and checks,
19719,agent: Adding CheckType which is used to wrap either a CheckMonitor or CheckTTL,
19720,agent: syncCheck provides the relevant check to prevent a race condition,
19721,consul: Update for serf 0.4,
19722,Adding CheckMonitors and CheckTTLs to agent,
19723,Seperate localState from Agent,
19724,Adding LANMembers to the Consul.Interface,
19725,Allow setting the health check notes,
19726,Adding CheckTTL for TTL based checks,
19727,Testing the CheckMonitor,
19728,CheckMonitor runs forever and runs the first check immediately,
19729,Adding basic CheckMonitor to invoke scripts,
19730,Accept command line advertise addr,
19731,Adding tests for checks and services endpoints,
19732,Exposing the agent checks and services over HTTP endpoints,
19733,Adding tests for check anti-entropy,
19734,Testing anti-entropy of services,
19735,Preventing multiple nodes in bootstrap mode from adding each other as Raft peers,
19736,change isConsulServer to parse flags,
19737,Handle the serf check and consul service,
19738,Export the consul service id and name,
19739,Export the serf check ID,
19740,First pass at local state + anti-entropy,
19741,Methods for random staggering,
19742,Adding AEConfig and some methods to scale timing,
19743,DNS filters service nodes if they have failing checks,
19744,DNS Lookup uses Health.ServiceNodes,
19745,CheckServiceNodes will return node checks that are not service associated,
19746,Adding tests for the health endpoints,
19747,First pass at health endpoints,
19748,Do not remove ourself when we leave from Raft,
19749,Fixing testServerDC method,
19750,Simplify Raft peer adds using only reconciliation,
19751,Check for error when sending RPC byte,
19752,Refactor testServerDC,
19753,Cleanup log,
19754,Log cleanup,
19755,Improve idempotence check for consul service registration,
19756,Verify that consul service is registered,
19757,Fixing issue that would prevent consul server registration,
19758,Auto-register the consul service,
19759,Testing leader functions and reconciliation,
19760,Fixing some tests,
19761,First pass at Serf reconciliation,
19762,Adding utility method to parse consul nodes,
19763,Adding a ReconcileInterval config,
19764,Retain reference to RPC endpoints,
19765,Cleanup,
19766,Updating agent to deal with new API,
19767,Adding Health endpoint to combine service nodes with health,
19768,Adding CheckServiceNodes to get health info with service nodes,
19769,Minor structs cleanup,
19770,Testing the health endpoints,
19771,First pass at health endpoints,
19772,Adding stubs for Health endpoints,
19773,Adding FSM support for register/deregister health checks,
19774,Support getting node checks in the snapshot,
19775,Implementing the health methods with tests,
19776,Skeleton methods for health info,
19777,Adding HealthCheck and an associated table,
19778,Adding test for last row id restore,
19779,Remove unused variable,
19780,Delete node in a transaction,
19781,Update for new interfaces,
19782,Switch state store to MDBTables,
19783,Adding ServiceName to ServiceNode to simplify,
19784,Support multi-table transactions with MDBTable,
19785,Handle record updates,
19786,Supporting table Delete,
19787,Refactoring some code to share with Delete,
19788,Support blank fields,
19789,Working on abstracting MDB storage,
19790,Adding some utility functions,
19791,Testing DNS correctly deduplicates records,
19792,Remove fix for upstream DNS bug,
19793,Support non-unique service entries per node,
19794,Adding tests for the agent HTTP endpoints,
19795,Adding more HTTP endpoints,
19796,Handle new Raft API,
19797,Support DNS recursion and TCP queries,
19798,Support Service lookups,
19799,Adding DNS based node lookup,
19800,NodeServices struct now includes the node address,
19801,Domain pass through,
19802,Adding a DNS domain config,
19803,"Start DNS server, change logs, add SOA records",
19804,Adding basic DNS framework,
19805,Rename HTTP server method,
19806,Fixing bug in state store,
19807,Fix indexing error when getting nodes,
19808,Allow for more cached connections,
19809,Increase maximum MDB map size,
19810,Fixing some tests,
19811,Adding support for advertise address,
19812,Testing Raft advertise addr,
19813,Methods to get a private IP,
19814,Guard against a bad advertise address,
19815,API cleanup,
19816,Adding the various CLI commands,
19817,Adding RPC and Monitor commands,
19818,Start the RPC server with the agent,
19819,Pulling in the RPC framework from serf,
19820,Adding RemoveFailedNode to consul.Client,
19821,Changing the Join interfaces to match Serf,
19822,Serf API changes,
19823,Ensure lexical ordering for config files,
19824,Update for the new Serf config,
19825,Adding index page with 404 catchall,
19826,Enable bootstrap mode for the tests,
19827,Adding a bootstrap flag to allow single server raft,
19828,Guard MDB against 0 byte slices,
19829,Mark a few txn's as being readonly,
19830,Defer the txn aborts,
19831,Stronger API validation,
19832,Do not leave raft pool if we are the only member,
19833,Add Datacenter to output,
19834,Better error logging,
19835,Finish implementing the HTTP catalog interface,
19836,Remove debug line,
19837,More HTTP endpoints,
19838,Setup logging for Raft properly,
19839,Adding catalog datacenter http methods,
19840,Adding more agent tests,
19841,Remove useless config,
19842,Ensure local server is always a raft peer,
19843,Adding a Status.Peers endpoint to get peerset,
19844,Working on Agent HTTP interface,
19845,Working on the agent,
19846,Filling in Agent basics,
19847,Agent skeleton,
19848,Adding time based reaping to ConnPool,
19849,Rename ConsulRPC to just consul.Interface,
19850,Server also implements ConsulRPC interface,
19851,Minimize open connections maintained by client,
19852,Testing Client RPC to server,
19853,Test joining a Serf pool,
19854,Adding client tests,
19855,Adding initial consul client,
19856,Refactor isConsulServer into util,
19857,Refactor ensurePath to util,
19858,Adding agent skeleton,
19859,Move rpc structs into sub-package,
19860,Adding basic CLI infrastructure,
19861,Remove comment,
19862,Make tests more reliable,
19863,Guard against accessing slices that may have contents changed,
19864,Switch Raft from SQLite to MDB,
19865,Adding snapshot support,
19866,Starting port of state store to MDB,
19867,FSM logs snapshot time,
19868,Adding support and tests for FSM snapshotting,
19869,Adding ability to snapshot StateStore,
19870,Changing how state store is opened to allow shared connections,
19871,Remove unused raft endpoints,
19872,Adding NodeServices endpoing,
19873,Support querying for ServiceNodes,
19874,Remove useless check since we are doing a DISTINCT query,
19875,Adding ability to list services,
19876,Adding node listing,
19877,Support datacenter listing,
19878,Remove unused methods,
19879,Test leader forwarding,
19880,Adding support for cross-dc forwarding,
19881,Track remote consul servers,
19882,Adding support for deregistration,
19883,Testing Catalog.Register endpoint,
19884,Adding FSM support for Register,
19885,Adding state store methods,
19886,consul: starting work on some RPC layers,
19887,Adding some state store methods with tests,
19888,Stubs,
19889,consul: working on fsm state,
19890,Adding Status.Leader endpoint,
19891,consul: Adding method to force remove failed nodes,
19892,consul: Adding LANMembers and WANMembers,
19893,consul: abandon join on shutdown or member fail,
19894,"consul: Adding tons of shit, leave test",
19895,consul: type safe event handlers,
19896,consul: status rpc endpoint,
19897,consul: store the peerstore,
19898,consul: Leave does a RemovePeer RPC call,
19899,consul: helper to make RPC calls,
19900,consul: ConnPool creates RPC client,
19901,consul: Adding Raft rpc endpoint,
19902,consul: gossip role includes rpc addr,
19903,consul: Write the byte to set the RPC mode,
19904,consul: RaftLayer does not use ConnPool,
19905,consul: fixing test,
19906,consul: Remove the RaftBindAddr,
19907,consul: close raft transport before layer,
19908,consul: sharing the RPC layer between Consul/Raft,
19909,ignore test files,
19910,consul: Adding leave function,
19911,consul: adding connection pool,
19912,consul: Add+test JoinLAN/JoinWAN,
19913,consul: refactor into more files,
19914,consul: Basic RPC framework,
19915,consul: Rename to LAN/WAN instead of Local/Remote,
19916,consul: adding basic skeleton,
19917,Initial commit,
