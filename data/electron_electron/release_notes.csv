Index,Release Note,Release Note Abstract
1,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@26.0.0-alpha.7.
# Release Notes for v26.0.0-alpha.7
Features

node: prefixed requires are now supported in sandboxed renderer preloads for events, timers and url. #38728 (Also in 24, 25)

Fixes

Fixed webContents.printToPDF preferCSSPageSize type error. #38793 (Also in 24, 25)

Other Changes

Updated Chromium to 116.0.5831.0. #38783 
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@26.0.0-alpha.7.
Release Notes for v26.0.0-alpha.7
Features
node: prefixed requires are now supported in sandboxed renderer preloads for events, timers and url. #38728 (Also in 24, 25)
Fixes
Fixed webContents.printToPDF preferCSSPageSize type error. #38793 (Also in 24, 25)
Other Changes
Updated Chromium to 116.0.5831.0. #38783 "
2,"Release Notes for v25.1.1
Fixes

Added transparent color support for WCO on Windows. #38715 (Also in 26)
Fixed an error with webContents.print parameter validation by adding missing options required to set printer printable area. #38720 (Also in 26)
Fixed an issue where passing webContents.print(null) could incorrectly trigger an error. #38642 (Also in 24, 26)
Fixed an issue with potential use-after-free of child windows on close and reparent. #38678 (Also in 24, 26)
Fixed potential invalid protocol error handling. #38634 (Also in 26)
Fixed visibility of menu bar when exiting full screen. #38682 (Also in 23, 24, 26)
","Release Notes for v25.1.1
Fixes
Added transparent color support for WCO on Windows. #38715 (Also in 26)
Fixed an error with webContents.print parameter validation by adding missing options required to set printer printable area. #38720 (Also in 26)
Fixed an issue where passing webContents.print(null) could incorrectly trigger an error. #38642 (Also in 24, 26)
Fixed an issue with potential use-after-free of child windows on close and reparent. #38678 (Also in 24, 26)
Fixed potential invalid protocol error handling. #38634 (Also in 26)
Fixed visibility of menu bar when exiting full screen. #38682 (Also in 23, 24, 26)"
3,"Release Notes for v24.5.1
Fixes

Fixed an issue where passing webContents.print(null) could incorrectly trigger an error. #38640 (Also in 25, 26)
Fixed an issue with potential use-after-free of child windows on close and reparent. #38677 (Also in 25, 26)
Fixed visibility of menu bar when exiting full screen. #38681 (Also in 23, 25, 26)

Other Changes

Backported fix for b:251677220, 1431532. #38711 
Security: backported fix for 1447430.
Security: backported fix for CVE-2023-3079. #38654 
Security: backported fix for CVE-2023-2933.
Security: backported fix for CVE-2023-2932.
Security: backported fix for CVE-2023-2931.
Security: backported fix for 1444195.
Security: backported fix for CVE-2023-2936.
Security: backported fix for CVE-2023-2935.
Security: backported fix for CVE-2023-2934
Security: backported fix for CVE-2023-2930. #38536 
","Release Notes for v24.5.1
Fixes
Fixed an issue where passing webContents.print(null) could incorrectly trigger an error. #38640 (Also in 25, 26)
Fixed an issue with potential use-after-free of child windows on close and reparent. #38677 (Also in 25, 26)
Fixed visibility of menu bar when exiting full screen. #38681 (Also in 23, 25, 26)
Other Changes
Backported fix for b:251677220, 1431532. #38711 
Security: backported fix for 1447430.
Security: backported fix for CVE-2023-3079. #38654 
Security: backported fix for CVE-2023-2933.
Security: backported fix for CVE-2023-2932.
Security: backported fix for CVE-2023-2931.
Security: backported fix for 1444195.
Security: backported fix for CVE-2023-2936.
Security: backported fix for CVE-2023-2935.
Security: backported fix for CVE-2023-2934
Security: backported fix for CVE-2023-2930. #38536 "
4,"Release Notes for v23.3.7
Fixes

Fixed visibility of menu bar when exiting full screen. #38680 (Also in 24, 25, 26)

Other Changes

Security: backported fix for 1439691.
Security: backported fix for CVE-2023-2724.
Security: backported fix for 1425115.
Security: backported fix for 1431761.
Security: backported fix for CVE-2023-2725.
Security: backported fix for CVE-2023-2721.
Security: backported fix for 1442263. #38331 
Security: backported fix for 1447430.
Security: backported fix for CVE-2023-3079. #38652 
Security: backported fix for CVE-2023-2933.
Security: backported fix for CVE-2023-2932.
Security: backported fix for CVE-2023-2931.
Security: backported fix for 1444195.
Security: backported fix for CVE-2023-2936.
Security: backported fix for CVE-2023-2935.
Security: backported fix for CVE-2023-2934
Security: backported fix for CVE-2023-2930. #38533 
","Release Notes for v23.3.7
Fixes
Fixed visibility of menu bar when exiting full screen. #38680 (Also in 24, 25, 26)
Other Changes
Security: backported fix for 1439691.
Security: backported fix for CVE-2023-2724.
Security: backported fix for 1425115.
Security: backported fix for 1431761.
Security: backported fix for CVE-2023-2725.
Security: backported fix for CVE-2023-2721.
Security: backported fix for 1442263. #38331 
Security: backported fix for 1447430.
Security: backported fix for CVE-2023-3079. #38652 
Security: backported fix for CVE-2023-2933.
Security: backported fix for CVE-2023-2932.
Security: backported fix for CVE-2023-2931.
Security: backported fix for 1444195.
Security: backported fix for CVE-2023-2936.
Security: backported fix for CVE-2023-2935.
Security: backported fix for CVE-2023-2934
Security: backported fix for CVE-2023-2930. #38533 "
5,"Release Notes for v22.3.13
Other Changes

Security: backported fix for 1437346.
Security: backported fix for 1439691.
Security: backported fix for CVE-2023-2724.
Security: backported fix for CVE-2023-2723.
Security: backported fix for 1425115.
Security: backported fix for 1431761.
Security: backported fix for CVE-2023-2725.
Security: backported fix for CVE-2023-2721.
Security: backported fix for 1442263. #38332 
Security: backported fix for 1447430.
Security: backported fix for CVE-2023-3079. #38653 
Security: backported fix for CVE-2023-2933.
Security: backported fix for CVE-2023-2932.
Security: backported fix for CVE-2023-2931.
Security: backported fix for 1444195.
Security: backported fix for CVE-2023-2936.
Security: backported fix for CVE-2023-2935.
Security: backported fix for CVE-2023-2930. #38534 
","Release Notes for v22.3.13
Other Changes
Security: backported fix for 1437346.
Security: backported fix for 1439691.
Security: backported fix for CVE-2023-2724.
Security: backported fix for CVE-2023-2723.
Security: backported fix for 1425115.
Security: backported fix for 1431761.
Security: backported fix for CVE-2023-2725.
Security: backported fix for CVE-2023-2721.
Security: backported fix for 1442263. #38332 
Security: backported fix for 1447430.
Security: backported fix for CVE-2023-3079. #38653 
Security: backported fix for CVE-2023-2933.
Security: backported fix for CVE-2023-2932.
Security: backported fix for CVE-2023-2931.
Security: backported fix for 1444195.
Security: backported fix for CVE-2023-2936.
Security: backported fix for CVE-2023-2935.
Security: backported fix for CVE-2023-2930. #38534 "
6,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@26.0.0-alpha.6.
# Release Notes for v26.0.0-alpha.6
Fixes

Added transparent color support for WCO on Windows. #38716 (Also in 25)
Fixed an error with webContents.print parameter validation by adding missing options required to set printer printable area. #38721 (Also in 25)
Fixed an issue where webContents.print() stopped triggering its callback when the user cancelled the print dialog. #38735 

Other Changes

Updated Chromium to 116.0.5817.0. #38546 
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@26.0.0-alpha.6.
Release Notes for v26.0.0-alpha.6
Fixes
Added transparent color support for WCO on Windows. #38716 (Also in 25)
Fixed an error with webContents.print parameter validation by adding missing options required to set printer printable area. #38721 (Also in 25)
Fixed an issue where webContents.print() stopped triggering its callback when the user cancelled the print dialog. #38735 
Other Changes
Updated Chromium to 116.0.5817.0. #38546 "
7,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@26.0.0-alpha.5.
# Release Notes for v26.0.0-alpha.5
Fixes

Fixed an issue where passing webContents.print(null) could incorrectly trigger an error. #38641 (Also in 24, 25)
Fixed an issue with potential use-after-free of child windows on close and reparent. #38679 (Also in 25)
Fixed potential invalid protocol error handling. #38635 (Also in 25)
Fixed visibility of menu bar when exiting full screen. #38683 
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@26.0.0-alpha.5.
Release Notes for v26.0.0-alpha.5
Fixes
Fixed an issue where passing webContents.print(null) could incorrectly trigger an error. #38641 (Also in 24, 25)
Fixed an issue with potential use-after-free of child windows on close and reparent. #38679 (Also in 25)
Fixed potential invalid protocol error handling. #38635 (Also in 25)
Fixed visibility of menu bar when exiting full screen. #38683 "
8,"Release Notes for v25.1.0
Features

Added setUSBProtectedClassesHandler to allow access to protected USB classes with WebUSB. #38493 (Also in 24)
Added setUSBProtectedClassesHandler to allow access to protected USB classes with WebUSB. #38493 (Also in 24)

Fixes

Fixed an issue where <datalist> popups are positions incorrectly in BrowserViews. #38609 (Also in 23, 24, 26)

Other Changes

Improved error message when contentTracing.stopRecording() fails because no trace was in progress. #38519 (Also in 23, 24)
Updated Chromium to 114.0.5735.91. #38516 
","Release Notes for v25.1.0
Features
Added setUSBProtectedClassesHandler to allow access to protected USB classes with WebUSB. #38493 (Also in 24)
Added setUSBProtectedClassesHandler to allow access to protected USB classes with WebUSB. #38493 (Also in 24)
Fixes
Fixed an issue where  popups are positions incorrectly in BrowserViews. #38609 (Also in 23, 24, 26)
Other Changes
Improved error message when contentTracing.stopRecording() fails because no trace was in progress. #38519 (Also in 23, 24)
Updated Chromium to 114.0.5735.91. #38516 "
9,"Release Notes for v24.5.0
Features

Added setUSBProtectedClassesHandler to allow access to protected USB classes with WebUSB. #38498 (Also in 25)

Fixes

Fixed an issue where <datalist> popups are positions incorrectly in BrowserViews. #38608 (Also in 23, 25, 26)
","Release Notes for v24.5.0
Features
Added setUSBProtectedClassesHandler to allow access to protected USB classes with WebUSB. #38498 (Also in 25)
Fixes
Fixed an issue where  popups are positions incorrectly in BrowserViews. #38608 (Also in 23, 25, 26)"
10,"Release Notes for v23.3.6
Fixes

Fixed an issue where <datalist> popups are positions incorrectly in BrowserViews. #38607 (Also in 24, 25, 26)
Fixed potential issues when minimizing parent windows with non-modal children on macOS. #38507 (Also in 24, 25)

Other Changes

Improved error message when contentTracing.stopRecording() fails because no trace was in progress. #38518 (Also in 24, 25)
","Release Notes for v23.3.6
Fixes
Fixed an issue where  popups are positions incorrectly in BrowserViews. #38607 (Also in 24, 25, 26)
Fixed potential issues when minimizing parent windows with non-modal children on macOS. #38507 (Also in 24, 25)
Other Changes
Improved error message when contentTracing.stopRecording() fails because no trace was in progress. #38518 (Also in 24, 25)"
11,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@26.0.0-alpha.4.
# Release Notes for v26.0.0-alpha.4
Fixes

Fixed an issue where <datalist> popups are positions incorrectly in BrowserViews. #38610 (Also in 23, 24, 25)
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@26.0.0-alpha.4.
Release Notes for v26.0.0-alpha.4
Fixes
Fixed an issue where  popups are positions incorrectly in BrowserViews. #38610 (Also in 23, 24, 25)"
12,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@26.0.0-alpha.3.
# Release Notes for v26.0.0-alpha.3
Fixes

Fixed an issue where files could in some circumstances be selection when openFile was not passed as a dialog property. #38590 
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@26.0.0-alpha.3.
Release Notes for v26.0.0-alpha.3
Fixes
Fixed an issue where files could in some circumstances be selection when openFile was not passed as a dialog property. #38590 "
13,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@26.0.0-alpha.2.
# Release Notes for v26.0.0-alpha.2
Features

Added net.resolveHost that resolves hosts using defaultSession object. #37853 (Also in 24, 25)
Added new 'did-resign-active' event on app. #37933 (Also in 25)
Added setUSBProtectedClassesHandler to allow access to protected USB classes with WebUSB. #38263 (Also in 24, 25)
Added several new cursor values to the cursor-changed event. #38210 (Also in 24, 25)
Added support for Mica and Acrylic background effects on Windows. #38163 (Also in 24, 25)
Added thermal management information to powerMonitor. #37935 (Also in 24, 25)
Expose webContents methods to center text selection, scroll to the page bottom and top, as well as adjust selected text. #37978 (Also in 25)
Surface the context-menu event from extensions. #38029 (Also in 25)

Fixes

Added about panel for menu role about on Linux as well. #37828 (Also in 23, 24, 25)
Ensured that Electron's custom AXManualAccessibility attribute works as expected in all relevant protocol methods. #38142 (Also in 23, 24, 25)
Fixed a potential crash when calling webContents.print with invalid settings. #38165 (Also in 25)
Fixed a potential crash when right-clicking on macOS windows with draggable regions. #38100 (Also in 24, 25)
Fixed an issue on Linux where menus would not open after resizing/maximizing/unmaximizing a window. #37798 (Also in 23, 24, 25)
Fixed an issue where Windows FrameViews always appeared inactive regardless of focus status. #38468 (Also in 25)
Fixed an issue where BrowserWindow.isMaximized() could incorrectly return true for minimized or fullscreened windows on macOS. #38291 (Also in 23, 24, 25)
Fixed an issue where BrowserWindow.isVisible() would incorrectly return true for minimized windows on Windows. #38242 (Also in 23, 24, 25)
Fixed an issue where MediaStreamTrack.getCaptureHandle() always returned null. #38390 (Also in 24, 25)
Fixed an issue where getNormalBounds() returns incorrect bounds for transparent maximized windows on Windows. #38218 (Also in 23, 24, 25)
Fixed an issue where navigator.connection returned incorrect data. #38491 
Fixed an issue where accessing BrowserWindow.id threw an error after the window was destroyed. #38241 (Also in 23, 24, 25)
Fixed an issue where calling win.minimize() directly after calling win.maximize(), and then calling win.isMaximized() incorrectly returns true. #38234 (Also in 23, 24, 25)
Fixed an issue where calls to window.setKiosk(false) would exit fullscreen regardless of the fullscreen state prior to kiosk mode. #38219 
Fixed an issue where certain buttons in the PDF viewer didn't work. #37856 (Also in 23, 24, 25)
Fixed an issue where default background color for windows might be incorrect. #36914 (Also in 23, 24, 25)
Fixed an issue where the 'swipe' event wasn't being emitted properly on macOS. #37946 (Also in 24, 25)
Fixed an issue which made defaultFontFamily in webPreferences have no effect. #37863 (Also in 22, 23, 24, 25)
Fixed an perceived failure when when using Accessibility attribute AXManualAccessibility to enable a11y features in Electron. #38102 (Also in 23, 24, 25)
Fixed broken defaults in shell.openExternal() options. #38038 (Also in 22, 23, 24, 25)
Fixed crash when executing eval in the utility process. #38014 (Also in 22, 23, 24, 25)
Fixed potential issues when minimizing parent windows with non-modal children on macOS. #38460 (Also in 23, 24, 25)
Fixed recommended node-gyp version in node.h error. #37829 (Also in 22, 23, 24, 25)

Other Changes

Backported fix for 1404797. #38323 (Also in 25)
Fixed a console error seen when loading PDFs. #38127 (Also in 25)
Fixed an error seen in the Top Level Windows section of chrome://accessibility. #38179 (Also in 25)
Fixed an issue where mksnapshot would crash with a sigbus error. #38490 (Also in 25)
Improved error message when contentTracing.stopRecording() fails because no trace was in progress. #38488 (Also in 24, 25)
The enable_desktop_capturer build flag has been removed. #38412 
Updated Chromium to 116.0.5791.0. #38448 
Updated Node.js to v18.16.0. #37973 

Documentation

Documentation changes: #37955, #38035
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@26.0.0-alpha.2.
Release Notes for v26.0.0-alpha.2
Features
Added net.resolveHost that resolves hosts using defaultSession object. #37853 (Also in 24, 25)
Added new 'did-resign-active' event on app. #37933 (Also in 25)
Added setUSBProtectedClassesHandler to allow access to protected USB classes with WebUSB. #38263 (Also in 24, 25)
Added several new cursor values to the cursor-changed event. #38210 (Also in 24, 25)
Added support for Mica and Acrylic background effects on Windows. #38163 (Also in 24, 25)
Added thermal management information to powerMonitor. #37935 (Also in 24, 25)
Expose webContents methods to center text selection, scroll to the page bottom and top, as well as adjust selected text. #37978 (Also in 25)
Surface the context-menu event from extensions. #38029 (Also in 25)
Fixes
Added about panel for menu role about on Linux as well. #37828 (Also in 23, 24, 25)
Ensured that Electron's custom AXManualAccessibility attribute works as expected in all relevant protocol methods. #38142 (Also in 23, 24, 25)
Fixed a potential crash when calling webContents.print with invalid settings. #38165 (Also in 25)
Fixed a potential crash when right-clicking on macOS windows with draggable regions. #38100 (Also in 24, 25)
Fixed an issue on Linux where menus would not open after resizing/maximizing/unmaximizing a window. #37798 (Also in 23, 24, 25)
Fixed an issue where Windows FrameViews always appeared inactive regardless of focus status. #38468 (Also in 25)
Fixed an issue where BrowserWindow.isMaximized() could incorrectly return true for minimized or fullscreened windows on macOS. #38291 (Also in 23, 24, 25)
Fixed an issue where BrowserWindow.isVisible() would incorrectly return true for minimized windows on Windows. #38242 (Also in 23, 24, 25)
Fixed an issue where MediaStreamTrack.getCaptureHandle() always returned null. #38390 (Also in 24, 25)
Fixed an issue where getNormalBounds() returns incorrect bounds for transparent maximized windows on Windows. #38218 (Also in 23, 24, 25)
Fixed an issue where navigator.connection returned incorrect data. #38491 
Fixed an issue where accessing BrowserWindow.id threw an error after the window was destroyed. #38241 (Also in 23, 24, 25)
Fixed an issue where calling win.minimize() directly after calling win.maximize(), and then calling win.isMaximized() incorrectly returns true. #38234 (Also in 23, 24, 25)
Fixed an issue where calls to window.setKiosk(false) would exit fullscreen regardless of the fullscreen state prior to kiosk mode. #38219 
Fixed an issue where certain buttons in the PDF viewer didn't work. #37856 (Also in 23, 24, 25)
Fixed an issue where default background color for windows might be incorrect. #36914 (Also in 23, 24, 25)
Fixed an issue where the 'swipe' event wasn't being emitted properly on macOS. #37946 (Also in 24, 25)
Fixed an issue which made defaultFontFamily in webPreferences have no effect. #37863 (Also in 22, 23, 24, 25)
Fixed an perceived failure when when using Accessibility attribute AXManualAccessibility to enable a11y features in Electron. #38102 (Also in 23, 24, 25)
Fixed broken defaults in shell.openExternal() options. #38038 (Also in 22, 23, 24, 25)
Fixed crash when executing eval in the utility process. #38014 (Also in 22, 23, 24, 25)
Fixed potential issues when minimizing parent windows with non-modal children on macOS. #38460 (Also in 23, 24, 25)
Fixed recommended node-gyp version in node.h error. #37829 (Also in 22, 23, 24, 25)
Other Changes
Backported fix for 1404797. #38323 (Also in 25)
Fixed a console error seen when loading PDFs. #38127 (Also in 25)
Fixed an error seen in the Top Level Windows section of chrome://accessibility. #38179 (Also in 25)
Fixed an issue where mksnapshot would crash with a sigbus error. #38490 (Also in 25)
Improved error message when contentTracing.stopRecording() fails because no trace was in progress. #38488 (Also in 24, 25)
The enable_desktop_capturer build flag has been removed. #38412 
Updated Chromium to 116.0.5791.0. #38448 
Updated Node.js to v18.16.0. #37973 
Documentation
Documentation changes: #37955, #38035"
14,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@26.0.0-alpha.1.
# Release Notes for v26.0.0-alpha.1
Features

Added net.resolveHost that resolves hosts using defaultSession object. #37853 (Also in 24, 25)
Added new 'did-resign-active' event on app. #37933 (Also in 25)
Added setUSBProtectedClassesHandler to allow access to protected USB classes with WebUSB. #38263 
Added several new cursor values to the cursor-changed event. #38210 (Also in 24, 25)
Added support for Mica and Acrylic background effects on Windows. #38163 (Also in 24, 25)
Added thermal management information to powerMonitor. #37935 (Also in 24, 25)
Expose webContents methods to center text selection, scroll to the page bottom and top, as well as adjust selected text. #37978 (Also in 25)
Surface the context-menu event from extensions. #38029 (Also in 25)

Fixes

Added about panel for menu role about on Linux as well. #37828 (Also in 23, 24, 25)
Ensured that Electron's custom AXManualAccessibility attribute works as expected in all relevant protocol methods. #38142 (Also in 23, 24, 25)
Fixed a potential crash when calling webContents.print with invalid settings. #38165 (Also in 25)
Fixed a potential crash when right-clicking on macOS windows with draggable regions. #38100 (Also in 24, 25)
Fixed an issue on Linux where menus would not open after resizing/maximizing/unmaximizing a window. #37798 (Also in 23, 24, 25)
Fixed an issue where Windows FrameViews always appeared inactive regardless of focus status. #38468 (Also in 25)
Fixed an issue where BrowserWindow.isMaximized() could incorrectly return true for minimized or fullscreened windows on macOS. #38291 (Also in 23, 24, 25)
Fixed an issue where BrowserWindow.isVisible() would incorrectly return true for minimized windows on Windows. #38242 (Also in 23, 24, 25)
Fixed an issue where MediaStreamTrack.getCaptureHandle() always returned null. #38390 (Also in 24, 25)
Fixed an issue where getNormalBounds() returns incorrect bounds for transparent maximized windows on Windows. #38218 (Also in 23, 24, 25)
Fixed an issue where navigator.connection returned incorrect data. #38491 
Fixed an issue where accessing BrowserWindow.id threw an error after the window was destroyed. #38241 (Also in 23, 24, 25)
Fixed an issue where calling win.minimize() directly after calling win.maximize(), and then calling win.isMaximized() incorrectly returns true. #38234 (Also in 23, 24, 25)
Fixed an issue where calls to window.setKiosk(false) would exit fullscreen regardless of the fullscreen state prior to kiosk mode. #38219 
Fixed an issue where certain buttons in the PDF viewer didn't work. #37856 (Also in 23, 24, 25)
Fixed an issue where default background color for windows might be incorrect. #36914 (Also in 23, 24, 25)
Fixed an issue where the 'swipe' event wasn't being emitted properly on macOS. #37946 (Also in 24, 25)
Fixed an issue which made defaultFontFamily in webPreferences have no effect. #37863 (Also in 22, 23, 24, 25)
Fixed an perceived failure when when using Accessibility attribute AXManualAccessibility to enable a11y features in Electron. #38102 (Also in 23, 24, 25)
Fixed broken defaults in shell.openExternal() options. #38038 (Also in 22, 23, 24, 25)
Fixed crash when executing eval in the utility process. #38014 (Also in 22, 23, 24, 25)
Fixed potential issues when minimizing parent windows with non-modal children on macOS. #38460 (Also in 24, 25)
Fixed recommended node-gyp version in node.h error. #37829 (Also in 22, 23, 24, 25)

Other Changes

Backported fix for 1404797. #38323 (Also in 25)
Fixed a console error seen when loading PDFs. #38127 (Also in 25)
Fixed an error seen in the Top Level Windows section of chrome://accessibility. #38179 (Also in 25)
Fixed an issue where mksnapshot would crash with a sigbus error. #38490 (Also in 25)
Improved error message when contentTracing.stopRecording() fails because no trace was in progress. #38488 
The enable_desktop_capturer build flag has been removed. #38412 
Updated Chromium to 116.0.5791.0. #38448 
Updated Node.js to v18.16.0. #37973 

Documentation

Documentation changes: #37955, #38035
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@26.0.0-alpha.1.
Release Notes for v26.0.0-alpha.1
Features
Added net.resolveHost that resolves hosts using defaultSession object. #37853 (Also in 24, 25)
Added new 'did-resign-active' event on app. #37933 (Also in 25)
Added setUSBProtectedClassesHandler to allow access to protected USB classes with WebUSB. #38263 
Added several new cursor values to the cursor-changed event. #38210 (Also in 24, 25)
Added support for Mica and Acrylic background effects on Windows. #38163 (Also in 24, 25)
Added thermal management information to powerMonitor. #37935 (Also in 24, 25)
Expose webContents methods to center text selection, scroll to the page bottom and top, as well as adjust selected text. #37978 (Also in 25)
Surface the context-menu event from extensions. #38029 (Also in 25)
Fixes
Added about panel for menu role about on Linux as well. #37828 (Also in 23, 24, 25)
Ensured that Electron's custom AXManualAccessibility attribute works as expected in all relevant protocol methods. #38142 (Also in 23, 24, 25)
Fixed a potential crash when calling webContents.print with invalid settings. #38165 (Also in 25)
Fixed a potential crash when right-clicking on macOS windows with draggable regions. #38100 (Also in 24, 25)
Fixed an issue on Linux where menus would not open after resizing/maximizing/unmaximizing a window. #37798 (Also in 23, 24, 25)
Fixed an issue where Windows FrameViews always appeared inactive regardless of focus status. #38468 (Also in 25)
Fixed an issue where BrowserWindow.isMaximized() could incorrectly return true for minimized or fullscreened windows on macOS. #38291 (Also in 23, 24, 25)
Fixed an issue where BrowserWindow.isVisible() would incorrectly return true for minimized windows on Windows. #38242 (Also in 23, 24, 25)
Fixed an issue where MediaStreamTrack.getCaptureHandle() always returned null. #38390 (Also in 24, 25)
Fixed an issue where getNormalBounds() returns incorrect bounds for transparent maximized windows on Windows. #38218 (Also in 23, 24, 25)
Fixed an issue where navigator.connection returned incorrect data. #38491 
Fixed an issue where accessing BrowserWindow.id threw an error after the window was destroyed. #38241 (Also in 23, 24, 25)
Fixed an issue where calling win.minimize() directly after calling win.maximize(), and then calling win.isMaximized() incorrectly returns true. #38234 (Also in 23, 24, 25)
Fixed an issue where calls to window.setKiosk(false) would exit fullscreen regardless of the fullscreen state prior to kiosk mode. #38219 
Fixed an issue where certain buttons in the PDF viewer didn't work. #37856 (Also in 23, 24, 25)
Fixed an issue where default background color for windows might be incorrect. #36914 (Also in 23, 24, 25)
Fixed an issue where the 'swipe' event wasn't being emitted properly on macOS. #37946 (Also in 24, 25)
Fixed an issue which made defaultFontFamily in webPreferences have no effect. #37863 (Also in 22, 23, 24, 25)
Fixed an perceived failure when when using Accessibility attribute AXManualAccessibility to enable a11y features in Electron. #38102 (Also in 23, 24, 25)
Fixed broken defaults in shell.openExternal() options. #38038 (Also in 22, 23, 24, 25)
Fixed crash when executing eval in the utility process. #38014 (Also in 22, 23, 24, 25)
Fixed potential issues when minimizing parent windows with non-modal children on macOS. #38460 (Also in 24, 25)
Fixed recommended node-gyp version in node.h error. #37829 (Also in 22, 23, 24, 25)
Other Changes
Backported fix for 1404797. #38323 (Also in 25)
Fixed a console error seen when loading PDFs. #38127 (Also in 25)
Fixed an error seen in the Top Level Windows section of chrome://accessibility. #38179 (Also in 25)
Fixed an issue where mksnapshot would crash with a sigbus error. #38490 (Also in 25)
Improved error message when contentTracing.stopRecording() fails because no trace was in progress. #38488 
The enable_desktop_capturer build flag has been removed. #38412 
Updated Chromium to 116.0.5791.0. #38448 
Updated Node.js to v18.16.0. #37973 
Documentation
Documentation changes: #37955, #38035"
15,"Release Notes for v25.0.1
Fixes

Fixed potential issues when minimizing parent windows with non-modal children on macOS. #38509 (Also in 24)

Other Changes

Fixed an issue where mksnapshot would crash with a sigbus error. #38510 
","Release Notes for v25.0.1
Fixes
Fixed potential issues when minimizing parent windows with non-modal children on macOS. #38509 (Also in 24)
Other Changes
Fixed an issue where mksnapshot would crash with a sigbus error. #38510 "
16,"Release Notes for v24.4.1
Fixes

Fixed an issue where MediaStreamTrack.getCaptureHandle() always returned null. #38434 (Also in 25)
Fixed potential issues when minimizing parent windows with non-modal children on macOS. #38508 (Also in 25)

Other Changes

Improved error message when contentTracing.stopRecording() fails because no trace was in progress. #38520 
","Release Notes for v24.4.1
Fixes
Fixed an issue where MediaStreamTrack.getCaptureHandle() always returned null. #38434 (Also in 25)
Fixed potential issues when minimizing parent windows with non-modal children on macOS. #38508 (Also in 25)
Other Changes
Improved error message when contentTracing.stopRecording() fails because no trace was in progress. #38520 "
17,"Release Notes for v23.3.5
Fixes

Fixed an issue where getNormalBounds() returns incorrect bounds for transparent maximized windows on Windows. #38347 (Also in 24, 25)

Other Changes

Security: backported fix for 1423360. #38276 
","Release Notes for v23.3.5
Fixes
Fixed an issue where getNormalBounds() returns incorrect bounds for transparent maximized windows on Windows. #38347 (Also in 24, 25)
Other Changes
Security: backported fix for 1423360. #38276 "
18,"Release Notes for v22.3.12
Other Changes

Security: backported fix for 1423360. #38277 
","Release Notes for v22.3.12
Other Changes
Security: backported fix for 1423360. #38277 "
19,"Release Notes for v25.0.0
Stack Upgrades

Chromium 114.0.5735.45
New in Chrome 114
New in Chrome 113
Node.js 18.15.0
Node 18.15.0 blog post
V8 11.4

Features

Added net.resolveHost that resolves hosts using defaultSession object. #38152 (Also in 24)
Added several new cursor values to the cursor-changed event. #38363 (Also in 24)
Added support for Mica and Acrylic background effects on Windows. #38357 (Also in 24)
Expose webContents methods to center text selection, scroll to the page bottom and top, as well as adjust selected text. #38362 
Surface the context-menu event from extensions. #38356 
Added BrowserWindow.set/getWindowButtonPosition APIs. #37094 
Added httpOnly to the cookie filter. #37255 (Also in 24)
Added logUsage to shell.openExternal() options, which allows passing the SEE_MASK_FLAG_LOG_USAGE flag to ShellExecuteEx on Windows. #37139 (Also in 24)
Added net.fetch(). #36733 
Added protocol.handle, replacing and deprecating protocol.{register,intercept}{String,Buffer,Stream,Http,File}Protocol. #36674 
Added types to webRequest filter. #30914 (Also in 24)
Added a will-frame-navigate event to webContents and the <webview> tag, which fires whenever any frame within the frame hierarchy attempts to navigate. #34418 
Added initiator information to navigator events. #37085 
Added net.resolveHost that resolves hosts using defaultSession object. #38152 (Also in 24)
Added new 'did-resign-active' event on app. #38018 
Added several standard page size options to webContents.print(). #37159 (Also in 22, 23, 24)
Added the enableLocalEcho flag to the session handler ses.setDisplayMediaRequestHandler() callback for allowing remote audio input to be echoed in the local output stream when audio is a WebFrameMain. #37315 (Also in 23, 24)
Added thermal management information to powerMonitor. #38028 (Also in 24)
Allows an absolute path to be passed to the session.fromPath() API. #37604 
Changed net.fetch to support requests to file: URLs and custom protocols registered with protocol.register*Protocol. #36606 
Exposes the audio-state-changed event on webContents. #37366 

Fixes

Ensured that Electron's custom AXManualAccessibility attribute works as expected in all relevant protocol methods. #38223 (Also in 23, 24)
Fixed a potential crash when calling webContents.print with invalid settings. #38230 
Fixed an issue where Windows FrameViews always appeared inactive regardless of focus status. #38473 
Fixed an issue where BrowserWindow.isMaximized() could incorrectly return true for minimized or fullscreened windows on macOS. #38307 (Also in 23, 24)
Fixed an issue where BrowserWindow.isVisible() would incorrectly return true for minimized windows on Windows. #38314 (Also in 23, 24)
Fixed an issue where MediaStreamTrack.getCaptureHandle() always returned null. #38433 (Also in 24)
Fixed an issue where getNormalBounds() returns incorrect bounds for transparent maximized windows on Windows. #38348 (Also in 23, 24)
Fixed an issue where accessing BrowserWindow.id threw an error after the window was destroyed. #38311 (Also in 23, 24)
Fixed an issue where calling win.minimize() directly after calling win.maximize(), and then calling win.isMaximized() incorrectly returns true. #38345 (Also in 23, 24)
Fixed an issue where default background color for windows might be incorrect. #38157 (Also in 23, 24)
Fixed an perceived failure when when using Accessibility attribute AXManualAccessibility to enable a11y features in Electron. #38146 (Also in 23, 24)
Fixed an issue where Windows FrameViews always appeared inactive regardless of focus status. #38473 
Fixed an issue where MediaStreamTrack.getCaptureHandle() always returned null. #38433 (Also in 24)
Added about panel for menu role about on Linux as well. #37873 (Also in 23, 24)
Corrects an issue with HTML fullscreen when BrowserWindow fullscreening is disabled. #37348 (Also in 23, 24)
Ensured that Electron's custom AXManualAccessibility attribute works as expected in all relevant protocol methods. #38223 (Also in 23, 24)
Fixed WebUSB on ARM64 macs. #37441 (Also in 23, 24)
Fixed destroyed event not emitted on close for BrowserView.webContents. #37420 (Also in 23, 24)
Fixed a crash on capturing sources when using desktopCapturer API on Wayland. #37511 (Also in 23, 24)
Fixed a crash when BrowserViews are present and a user attempts to prevent beforeunload in the renderer process. #37205 (Also in 22, 23, 24)
Fixed a potential crash when calling webContents.print with invalid settings. #38230 
Fixed a potential crash when right-clicking on macOS windows with draggable regions. #38115 (Also in 24)
Fixed an incorrect result returned when using secure as a cookies filter. #37203 (Also in 22, 23, 24)
Fixed an issue on Linux where menus would not open after resizing/maximizing/unmaximizing a window. #37905 (Also in 23, 24)
Fixed an issue on macOS where entering fullscreen with the Fn+F system shortcut would fail or create strange window side effects. #37803 (Also in 23, 24)
Fixed an issue where BroadcastChannel did not work correctly when contextIsolation: false. #37421 (Also in 24)
Fixed an issue where minWidth/minHeight and maxWidth/maxHeight would not be enforced if the user set an aspectRatio on macOS. #37306 (Also in 22, 23, 24)
Fixed an issue where calling port.postMessage in MessagePortMain with some invalid parameters could cause a crash. #37585 (Also in 22, 23, 24)
Fixed an issue where certain buttons in the PDF viewer didn't work. #37920 (Also in 23, 24)
Fixed an issue where default background color for windows might be incorrect. #38157 (Also in 23, 24)
Fixed an issue where draggable regions incorrectly captured clicks in framed windows. #37594 (Also in 23, 24)
Fixed an issue where passing both hasReply and actions to a main process Notification on macOS resulted in the first action being obscured and unavailable. #37381 (Also in 22, 23, 24)
Fixed an issue where successfully loaded media documents emitted did-fail-load. #37824 
Fixed an issue where the 'swipe' event wasn't being emitted properly on macOS. #37966 (Also in 24)
Fixed an issue where unhandled rejections could cause duplicate logs in some cases. #37464 (Also in 22, 24)
Fixed an issue which made defaultFontFamily in webPreferences have no effect. #37967 (Also in 22, 23, 24)
Fixed an issue with potential dock icon duplication on macOS. #37599 (Also in 22, 23, 24)
Fixed an perceived failure when when using Accessibility attribute AXManualAccessibility to enable a11y features in Electron. #38146 (Also in 23, 24)
Fixed broken defaults in shell.openExternal() options. #38071 (Also in 22, 23, 24)
Fixed canceling of bluetooth requests when no devices are returned. #37601 (Also in 23, 24)
Fixed crash when executing eval in the utility process. #38039 (Also in 22, 23, 24)
Fixed draggable regions not working in Mac App Store builds. #37466 (Also in 23, 24)
Fixed issue with BrowserWindow not updating after call to previewFile. #37530 (Also in 22, 23, 24)
Fixed potential private API usage for MAS builds on macOS. #37309 (Also in 23, 24)
Fixed recommended node-gyp version in node.h error. #37926 (Also in 22, 23, 24)
Fixed right-click events not being delivered in frameless window draggable regions. #37386 (Also in 23, 24)
Fixed the active background color for top-level menu items on Windows. #37766 (Also in 22, 23, 24)
Fixed window could not go back to maximized state when restored on Linux. #37346 (Also in 22, 23, 24)
Improved error messages on session.cookies.set failure. #37586 (Also in 22, 23, 24)
Security: Fixed an issue with Content-Security-Policy not being correctly enforced when sandbox: false and contextIsolation: false. (CVE-2023-23623). #37756 (Also in 24)
Setting the about panel's options no longer crashes. #37373 (Also in 24)
app.showAboutPanel() no longer blocks the main thread on Windows or Linux, thus matching macOS. #37440 (Also in 24)

Other Changes

Backported fix for 1404797. #38333 
Fixed a console error seen when loading PDFs. #38148 
Fixed an error seen in the Top Level Windows section of chrome://accessibility. #38211 
Security: backported fix for 1437346.
Security: backported fix for 1439691.
Security: backported fix for CVE-2023-2724.
Security: backported fix for CVE-2023-2723.
Security: backported fix for 1425115.
Security: backported fix for 1431761.
Security: backported fix for CVE-2023-2725.
Security: backported fix for CVE-2023-2721. #38329 
Fixed a console error seen when loading PDFs. #38148 
Fixed an error seen in the Top Level Windows section of chrome://accessibility. #38211 
Improved error messages for contents.takeHeapSnapshot. #37434 (Also in 22, 23, 24)
nativeImage.createThumbnailFromPath() now takes size instead of maxSize. #37362 (Also in 24)

Documentation

Documentation changes: #37956, #38095
","Release Notes for v25.0.0
Stack Upgrades
Chromium 114.0.5735.45
New in Chrome 114
New in Chrome 113
Node.js 18.15.0
Node 18.15.0 blog post
V8 11.4
Features
Added net.resolveHost that resolves hosts using defaultSession object. #38152 (Also in 24)
Added several new cursor values to the cursor-changed event. #38363 (Also in 24)
Added support for Mica and Acrylic background effects on Windows. #38357 (Also in 24)
Expose webContents methods to center text selection, scroll to the page bottom and top, as well as adjust selected text. #38362 
Surface the context-menu event from extensions. #38356 
Added BrowserWindow.set/getWindowButtonPosition APIs. #37094 
Added httpOnly to the cookie filter. #37255 (Also in 24)
Added logUsage to shell.openExternal() options, which allows passing the SEE_MASK_FLAG_LOG_USAGE flag to ShellExecuteEx on Windows. #37139 (Also in 24)
Added net.fetch(). #36733 
Added protocol.handle, replacing and deprecating protocol.{register,intercept}{String,Buffer,Stream,Http,File}Protocol. #36674 
Added types to webRequest filter. #30914 (Also in 24)
Added a will-frame-navigate event to webContents and the  tag, which fires whenever any frame within the frame hierarchy attempts to navigate. #34418 
Added initiator information to navigator events. #37085 
Added net.resolveHost that resolves hosts using defaultSession object. #38152 (Also in 24)
Added new 'did-resign-active' event on app. #38018 
Added several standard page size options to webContents.print(). #37159 (Also in 22, 23, 24)
Added the enableLocalEcho flag to the session handler ses.setDisplayMediaRequestHandler() callback for allowing remote audio input to be echoed in the local output stream when audio is a WebFrameMain. #37315 (Also in 23, 24)
Added thermal management information to powerMonitor. #38028 (Also in 24)
Allows an absolute path to be passed to the session.fromPath() API. #37604 
Changed net.fetch to support requests to file: URLs and custom protocols registered with protocol.register*Protocol. #36606 
Exposes the audio-state-changed event on webContents. #37366 
Fixes
Ensured that Electron's custom AXManualAccessibility attribute works as expected in all relevant protocol methods. #38223 (Also in 23, 24)
Fixed a potential crash when calling webContents.print with invalid settings. #38230 
Fixed an issue where Windows FrameViews always appeared inactive regardless of focus status. #38473 
Fixed an issue where BrowserWindow.isMaximized() could incorrectly return true for minimized or fullscreened windows on macOS. #38307 (Also in 23, 24)
Fixed an issue where BrowserWindow.isVisible() would incorrectly return true for minimized windows on Windows. #38314 (Also in 23, 24)
Fixed an issue where MediaStreamTrack.getCaptureHandle() always returned null. #38433 (Also in 24)
Fixed an issue where getNormalBounds() returns incorrect bounds for transparent maximized windows on Windows. #38348 (Also in 23, 24)
Fixed an issue where accessing BrowserWindow.id threw an error after the window was destroyed. #38311 (Also in 23, 24)
Fixed an issue where calling win.minimize() directly after calling win.maximize(), and then calling win.isMaximized() incorrectly returns true. #38345 (Also in 23, 24)
Fixed an issue where default background color for windows might be incorrect. #38157 (Also in 23, 24)
Fixed an perceived failure when when using Accessibility attribute AXManualAccessibility to enable a11y features in Electron. #38146 (Also in 23, 24)
Fixed an issue where Windows FrameViews always appeared inactive regardless of focus status. #38473 
Fixed an issue where MediaStreamTrack.getCaptureHandle() always returned null. #38433 (Also in 24)
Added about panel for menu role about on Linux as well. #37873 (Also in 23, 24)
Corrects an issue with HTML fullscreen when BrowserWindow fullscreening is disabled. #37348 (Also in 23, 24)
Ensured that Electron's custom AXManualAccessibility attribute works as expected in all relevant protocol methods. #38223 (Also in 23, 24)
Fixed WebUSB on ARM64 macs. #37441 (Also in 23, 24)
Fixed destroyed event not emitted on close for BrowserView.webContents. #37420 (Also in 23, 24)
Fixed a crash on capturing sources when using desktopCapturer API on Wayland. #37511 (Also in 23, 24)
Fixed a crash when BrowserViews are present and a user attempts to prevent beforeunload in the renderer process. #37205 (Also in 22, 23, 24)
Fixed a potential crash when calling webContents.print with invalid settings. #38230 
Fixed a potential crash when right-clicking on macOS windows with draggable regions. #38115 (Also in 24)
Fixed an incorrect result returned when using secure as a cookies filter. #37203 (Also in 22, 23, 24)
Fixed an issue on Linux where menus would not open after resizing/maximizing/unmaximizing a window. #37905 (Also in 23, 24)
Fixed an issue on macOS where entering fullscreen with the Fn+F system shortcut would fail or create strange window side effects. #37803 (Also in 23, 24)
Fixed an issue where BroadcastChannel did not work correctly when contextIsolation: false. #37421 (Also in 24)
Fixed an issue where minWidth/minHeight and maxWidth/maxHeight would not be enforced if the user set an aspectRatio on macOS. #37306 (Also in 22, 23, 24)
Fixed an issue where calling port.postMessage in MessagePortMain with some invalid parameters could cause a crash. #37585 (Also in 22, 23, 24)
Fixed an issue where certain buttons in the PDF viewer didn't work. #37920 (Also in 23, 24)
Fixed an issue where default background color for windows might be incorrect. #38157 (Also in 23, 24)
Fixed an issue where draggable regions incorrectly captured clicks in framed windows. #37594 (Also in 23, 24)
Fixed an issue where passing both hasReply and actions to a main process Notification on macOS resulted in the first action being obscured and unavailable. #37381 (Also in 22, 23, 24)
Fixed an issue where successfully loaded media documents emitted did-fail-load. #37824 
Fixed an issue where the 'swipe' event wasn't being emitted properly on macOS. #37966 (Also in 24)
Fixed an issue where unhandled rejections could cause duplicate logs in some cases. #37464 (Also in 22, 24)
Fixed an issue which made defaultFontFamily in webPreferences have no effect. #37967 (Also in 22, 23, 24)
Fixed an issue with potential dock icon duplication on macOS. #37599 (Also in 22, 23, 24)
Fixed an perceived failure when when using Accessibility attribute AXManualAccessibility to enable a11y features in Electron. #38146 (Also in 23, 24)
Fixed broken defaults in shell.openExternal() options. #38071 (Also in 22, 23, 24)
Fixed canceling of bluetooth requests when no devices are returned. #37601 (Also in 23, 24)
Fixed crash when executing eval in the utility process. #38039 (Also in 22, 23, 24)
Fixed draggable regions not working in Mac App Store builds. #37466 (Also in 23, 24)
Fixed issue with BrowserWindow not updating after call to previewFile. #37530 (Also in 22, 23, 24)
Fixed potential private API usage for MAS builds on macOS. #37309 (Also in 23, 24)
Fixed recommended node-gyp version in node.h error. #37926 (Also in 22, 23, 24)
Fixed right-click events not being delivered in frameless window draggable regions. #37386 (Also in 23, 24)
Fixed the active background color for top-level menu items on Windows. #37766 (Also in 22, 23, 24)
Fixed window could not go back to maximized state when restored on Linux. #37346 (Also in 22, 23, 24)
Improved error messages on session.cookies.set failure. #37586 (Also in 22, 23, 24)
Security: Fixed an issue with Content-Security-Policy not being correctly enforced when sandbox: false and contextIsolation: false. (CVE-2023-23623). #37756 (Also in 24)
Setting the about panel's options no longer crashes. #37373 (Also in 24)
app.showAboutPanel() no longer blocks the main thread on Windows or Linux, thus matching macOS. #37440 (Also in 24)
Other Changes
Backported fix for 1404797. #38333 
Fixed a console error seen when loading PDFs. #38148 
Fixed an error seen in the Top Level Windows section of chrome://accessibility. #38211 
Security: backported fix for 1437346.
Security: backported fix for 1439691.
Security: backported fix for CVE-2023-2724.
Security: backported fix for CVE-2023-2723.
Security: backported fix for 1425115.
Security: backported fix for 1431761.
Security: backported fix for CVE-2023-2725.
Security: backported fix for CVE-2023-2721. #38329 
Fixed a console error seen when loading PDFs. #38148 
Fixed an error seen in the Top Level Windows section of chrome://accessibility. #38211 
Improved error messages for contents.takeHeapSnapshot. #37434 (Also in 22, 23, 24)
nativeImage.createThumbnailFromPath() now takes size instead of maxSize. #37362 (Also in 24)
Documentation
Documentation changes: #37956, #38095"
20,"Release Notes for v24.4.0
Features

Added several new cursor values to the cursor-changed event. #38364 (Also in 25)
Added support for Mica and Acrylic background effects on Windows. #38361 (Also in 25)

Fixes

Fixed an issue where getNormalBounds() returns incorrect bounds for transparent maximized windows on Windows. #38349 (Also in 23, 25)

Other Changes

Updated Chromium to 112.0.5615.204. #38350 
","Release Notes for v24.4.0
Features
Added several new cursor values to the cursor-changed event. #38364 (Also in 25)
Added support for Mica and Acrylic background effects on Windows. #38361 (Also in 25)
Fixes
Fixed an issue where getNormalBounds() returns incorrect bounds for transparent maximized windows on Windows. #38349 (Also in 23, 25)
Other Changes
Updated Chromium to 112.0.5615.204. #38350 "
21,"Release Notes for v23.3.4
Fixes

Fixed an issue where getNormalBounds() returns incorrect bounds for transparent maximized windows on Windows. #38347 (Also in 24, 25)

Other Changes

Security: backported fix for 1423360. #38276 
","Release Notes for v23.3.4
Fixes
Fixed an issue where getNormalBounds() returns incorrect bounds for transparent maximized windows on Windows. #38347 (Also in 24, 25)
Other Changes
Security: backported fix for 1423360. #38276 "
22,"Release Notes for v22.3.11
Other Changes

Security: backported fix for 1423360. #38277 
","Release Notes for v22.3.11
Other Changes
Security: backported fix for 1423360. #38277 "
23,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@25.0.0-beta.8.
# Release Notes for v25.0.0-beta.8
Features

Added support for Mica and Acrylic background effects on Windows. #38357 (Also in 24)
Expose webContents methods to center text selection, scroll to the page bottom and top, as well as adjust selected text. #38362 
Surface the context-menu event from extensions. #38356 

Other Changes

Security: backported fix for 1437346.
Security: backported fix for 1439691.
Security: backported fix for CVE-2023-2724.
Security: backported fix for CVE-2023-2723.
Security: backported fix for 1425115.
Security: backported fix for 1431761.
Security: backported fix for CVE-2023-2725.
Security: backported fix for CVE-2023-2721. #38329 
Updated Chromium to 114.0.5735.35. #38320 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@25.0.0-beta.8.
Release Notes for v25.0.0-beta.8
Features
Added support for Mica and Acrylic background effects on Windows. #38357 (Also in 24)
Expose webContents methods to center text selection, scroll to the page bottom and top, as well as adjust selected text. #38362 
Surface the context-menu event from extensions. #38356 
Other Changes
Security: backported fix for 1437346.
Security: backported fix for 1439691.
Security: backported fix for CVE-2023-2724.
Security: backported fix for CVE-2023-2723.
Security: backported fix for 1425115.
Security: backported fix for 1431761.
Security: backported fix for CVE-2023-2725.
Security: backported fix for CVE-2023-2721. #38329 
Updated Chromium to 114.0.5735.35. #38320 "
24,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@25.0.0-beta.7.
# Release Notes for v25.0.0-beta.7
Features

Added several new cursor values to the cursor-changed event. #38363 

Fixes

Fixed an issue where BrowserWindow.isMaximized() could incorrectly return true for minimized or fullscreened windows on macOS. #38307 (Also in 23, 24)
Fixed an issue where BrowserWindow.isVisible() would incorrectly return true for minimized windows on Windows. #38314 (Also in 23, 24)
Fixed an issue where getNormalBounds() returns incorrect bounds for transparent maximized windows on Windows. #38348 
Fixed an issue where accessing BrowserWindow.id threw an error after the window was destroyed. #38311 (Also in 23, 24)
Fixed an issue where calling win.minimize() directly after calling win.maximize(), and then calling win.isMaximized() incorrectly returns true. #38345 (Also in 23, 24)

Other Changes

Backported fix for 1404797. #38333 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@25.0.0-beta.7.
Release Notes for v25.0.0-beta.7
Features
Added several new cursor values to the cursor-changed event. #38363 
Fixes
Fixed an issue where BrowserWindow.isMaximized() could incorrectly return true for minimized or fullscreened windows on macOS. #38307 (Also in 23, 24)
Fixed an issue where BrowserWindow.isVisible() would incorrectly return true for minimized windows on Windows. #38314 (Also in 23, 24)
Fixed an issue where getNormalBounds() returns incorrect bounds for transparent maximized windows on Windows. #38348 
Fixed an issue where accessing BrowserWindow.id threw an error after the window was destroyed. #38311 (Also in 23, 24)
Fixed an issue where calling win.minimize() directly after calling win.maximize(), and then calling win.isMaximized() incorrectly returns true. #38345 (Also in 23, 24)
Other Changes
Backported fix for 1404797. #38333 "
25,"Release Notes for v24.3.1
Fixes

Fixed an issue where BrowserWindow.isMaximized() could incorrectly return true for minimized or fullscreened windows on macOS. #38308 (Also in 23, 25)
Fixed an issue where BrowserWindow.isVisible() would incorrectly return true for minimized windows on Windows. #38313 (Also in 23, 25)
Fixed an issue where accessing BrowserWindow.id threw an error after the window was destroyed. #38310 (Also in 23, 25)
Fixed an issue where calling win.minimize() directly after calling win.maximize(), and then calling win.isMaximized() incorrectly returns true. #38343 (Also in 23, 25)

Other Changes

Security: backported fix for 1433328. #38271 
Updated Chromium to 112.0.5615.183. #38319 
","Release Notes for v24.3.1
Fixes
Fixed an issue where BrowserWindow.isMaximized() could incorrectly return true for minimized or fullscreened windows on macOS. #38308 (Also in 23, 25)
Fixed an issue where BrowserWindow.isVisible() would incorrectly return true for minimized windows on Windows. #38313 (Also in 23, 25)
Fixed an issue where accessing BrowserWindow.id threw an error after the window was destroyed. #38310 (Also in 23, 25)
Fixed an issue where calling win.minimize() directly after calling win.maximize(), and then calling win.isMaximized() incorrectly returns true. #38343 (Also in 23, 25)
Other Changes
Security: backported fix for 1433328. #38271 
Updated Chromium to 112.0.5615.183. #38319 "
26,"Release Notes for v23.3.3
Fixes

Fixed an issue where BrowserWindow.isMaximized() could incorrectly return true for minimized or fullscreened windows on macOS. #38306 (Also in 24, 25)
Fixed an issue where BrowserWindow.isVisible() would incorrectly return true for minimized windows on Windows. #38315 (Also in 24, 25)
Fixed an issue where accessing BrowserWindow.id threw an error after the window was destroyed. #38309 (Also in 24, 25)
Fixed an issue where calling win.minimize() directly after calling win.maximize(), and then calling win.isMaximized() incorrectly returns true. #38344 (Also in 24, 25)

Other Changes

Security: backported fix for CVE-2023-29469. #38273 
","Release Notes for v23.3.3
Fixes
Fixed an issue where BrowserWindow.isMaximized() could incorrectly return true for minimized or fullscreened windows on macOS. #38306 (Also in 24, 25)
Fixed an issue where BrowserWindow.isVisible() would incorrectly return true for minimized windows on Windows. #38315 (Also in 24, 25)
Fixed an issue where accessing BrowserWindow.id threw an error after the window was destroyed. #38309 (Also in 24, 25)
Fixed an issue where calling win.minimize() directly after calling win.maximize(), and then calling win.isMaximized() incorrectly returns true. #38344 (Also in 24, 25)
Other Changes
Security: backported fix for CVE-2023-29469. #38273 "
27,"Release Notes for v22.3.10
Other Changes

Security: backported fix for CVE-2023-29469. #38274 
","Release Notes for v22.3.10
Other Changes
Security: backported fix for CVE-2023-29469. #38274 "
28,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@25.0.0-beta.6.
# Release Notes for v25.0.0-beta.6","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@25.0.0-beta.6.
Release Notes for v25.0.0-beta.6"
29,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@25.0.0-beta.5.
# Release Notes for v25.0.0-beta.5
Fixes

Ensured that Electron's custom AXManualAccessibility attribute works as expected in all relevant protocol methods. #38223 (Also in 23, 24)
Fixed a potential crash when calling webContents.print with invalid settings. #38230 

Other Changes

Updated Chromium to 114.0.5735.16. #38118 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@25.0.0-beta.5.
Release Notes for v25.0.0-beta.5
Fixes
Ensured that Electron's custom AXManualAccessibility attribute works as expected in all relevant protocol methods. #38223 (Also in 23, 24)
Fixed a potential crash when calling webContents.print with invalid settings. #38230 
Other Changes
Updated Chromium to 114.0.5735.16. #38118 "
30,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@25.0.0-beta.4.
# Release Notes for v25.0.0-beta.4
Fixes

Ensured that Electron's custom AXManualAccessibility attribute works as expected in all relevant protocol methods. #38223 (Also in 23, 24)
Fixed a potential crash when calling webContents.print with invalid settings. #38230 

Other Changes

Updated Chromium to 114.0.5735.16. #38118 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@25.0.0-beta.4.
Release Notes for v25.0.0-beta.4
Fixes
Ensured that Electron's custom AXManualAccessibility attribute works as expected in all relevant protocol methods. #38223 (Also in 23, 24)
Fixed a potential crash when calling webContents.print with invalid settings. #38230 
Other Changes
Updated Chromium to 114.0.5735.16. #38118 "
31,"Release Notes for v24.3.0
Features

Added net.resolveHost that resolves hosts using defaultSession object. #38153 (Also in 25)

Fixes

Ensured that Electron's custom AXManualAccessibility attribute works as expected in all relevant protocol methods. #38224 (Also in 23, 25)
","Release Notes for v24.3.0
Features
Added net.resolveHost that resolves hosts using defaultSession object. #38153 (Also in 25)
Fixes
Ensured that Electron's custom AXManualAccessibility attribute works as expected in all relevant protocol methods. #38224 (Also in 23, 25)"
32,"Release Notes for v23.3.2
Fixes

Ensured that Electron's custom AXManualAccessibility attribute works as expected in all relevant protocol methods. #38225 (Also in 24, 25)
Fixed an issue where default background color for windows might be incorrect. #38159 (Also in 24, 25)
","Release Notes for v23.3.2
Fixes
Ensured that Electron's custom AXManualAccessibility attribute works as expected in all relevant protocol methods. #38225 (Also in 24, 25)
Fixed an issue where default background color for windows might be incorrect. #38159 (Also in 24, 25)"
33,"Release Notes for v22.3.9
Other Changes

Fixed drag-and-drop crash on Wayland. #38199 
","Release Notes for v22.3.9
Other Changes
Fixed drag-and-drop crash on Wayland. #38199 "
34,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@25.0.0-beta.3.
# Release Notes for v25.0.0-beta.3
Features

Added net.resolveHost that resolves hosts using defaultSession object. #38152 (Also in 24)

Other Changes

Fixed an error seen in the Top Level Windows section of chrome://accessibility. #38211 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@25.0.0-beta.3.
Release Notes for v25.0.0-beta.3
Features
Added net.resolveHost that resolves hosts using defaultSession object. #38152 (Also in 24)
Other Changes
Fixed an error seen in the Top Level Windows section of chrome://accessibility. #38211 "
35,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@25.0.0-beta.2.
# Release Notes for v25.0.0-beta.2
Fixes

Fixed an issue where default background color for windows might be incorrect. #38157 (Also in 23, 24)
Fixed an perceived failure when when using Accessibility attribute AXManualAccessibility to enable a11y features in Electron. #38146 (Also in 23, 24)

Other Changes

Fixed a console error seen when loading PDFs. #38148 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@25.0.0-beta.2.
Release Notes for v25.0.0-beta.2
Fixes
Fixed an issue where default background color for windows might be incorrect. #38157 (Also in 23, 24)
Fixed an perceived failure when when using Accessibility attribute AXManualAccessibility to enable a11y features in Electron. #38146 (Also in 23, 24)
Other Changes
Fixed a console error seen when loading PDFs. #38148 "
36,"Release Notes for v24.2.0
Features

Added thermal management information to powerMonitor. #38027 (Also in 25)

Fixes

Fixed a potential crash when right-clicking on macOS windows with draggable regions. #38136 (Also in 25)
Fixed an issue where default background color for windows might be incorrect. #38158 (Also in 25)
Fixed an perceived failure when when using Accessibility attribute AXManualAccessibility to enable a11y features in Electron. #38147 (Also in 23)
","Release Notes for v24.2.0
Features
Added thermal management information to powerMonitor. #38027 (Also in 25)
Fixes
Fixed a potential crash when right-clicking on macOS windows with draggable regions. #38136 (Also in 25)
Fixed an issue where default background color for windows might be incorrect. #38158 (Also in 25)
Fixed an perceived failure when when using Accessibility attribute AXManualAccessibility to enable a11y features in Electron. #38147 (Also in 23)"
37,"Release Notes for v23.3.1
Fixes

Fixed an perceived failure when when using Accessibility attribute AXManualAccessibility to enable a11y features in Electron. #38151 (Also in 24)
","Release Notes for v23.3.1
Fixes
Fixed an perceived failure when when using Accessibility attribute AXManualAccessibility to enable a11y features in Electron. #38151 (Also in 24)"
38,"Release Notes for v22.3.8
Fixes

Fixed crash when executing eval in the utility process. #38156 (Also in 23, 24, 25)
","Release Notes for v22.3.8
Fixes
Fixed crash when executing eval in the utility process. #38156 (Also in 23, 24, 25)"
39,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@25.0.0-beta.1.
# Release Notes for v25.0.0-beta.1
Fixes

Fixed a potential crash when right-clicking on macOS windows with draggable regions. #38115 (Also in 24)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@25.0.0-beta.1.
Release Notes for v25.0.0-beta.1
Fixes
Fixed a potential crash when right-clicking on macOS windows with draggable regions. #38115 (Also in 24)"
40,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@25.0.0-alpha.6.
# Release Notes for v25.0.0-alpha.6
Fixes

Fixed a potential crash when right-clicking on macOS windows with draggable regions. #38115 
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@25.0.0-alpha.6.
Release Notes for v25.0.0-alpha.6
Fixes
Fixed a potential crash when right-clicking on macOS windows with draggable regions. #38115 "
41,"Release Notes for v24.1.3
Fixes

Fixed broken defaults in shell.openExternal() options. #38072 (Also in 22, 23, 25)
Fixed crash when executing eval in the utility process. #38041 (Also in 23, 25)

Other Changes

Security: backported fix for CVE-2023-2136. #38082 
Updated Chromium to 112.0.5615.165. #38047 
","Release Notes for v24.1.3
Fixes
Fixed broken defaults in shell.openExternal() options. #38072 (Also in 22, 23, 25)
Fixed crash when executing eval in the utility process. #38041 (Also in 23, 25)
Other Changes
Security: backported fix for CVE-2023-2136. #38082 
Updated Chromium to 112.0.5615.165. #38047 "
42,"Release Notes for v23.3.0
Features

Added httpOnly to the cookie filter. #38043 (Also in 24)

Fixes

Fixed broken defaults in shell.openExternal() options. #38091 (Also in 22, 24, 25)
Fixed crash when executing eval in the utility process. #38040 (Also in 24, 25)

Other Changes

Backported fix for 1408315. #38011 
Security: backported fix for 1360571. #38061 
Security: backported fix for 1404790. #38063 
Security: backported fix for 1427388. #37982 
Security: backported fix for 1428820.
Security: backported fix for CVE-2023-2133.
Security: backported fix for CVE-2023-2134.
Security: backported fix for CVE-2023-2136.
Security: backported fix for CVE-2023-2135. #38083 
Security: backported fix for 1428820. #38067 
Security: backported fix for CVE-2023-2033. #37981 
Security: backported fix for CVE-2023-2133. #38057 
Security: backported fix for CVE-2023-2136. #38065 
","Release Notes for v23.3.0
Features
Added httpOnly to the cookie filter. #38043 (Also in 24)
Fixes
Fixed broken defaults in shell.openExternal() options. #38091 (Also in 22, 24, 25)
Fixed crash when executing eval in the utility process. #38040 (Also in 24, 25)
Other Changes
Backported fix for 1408315. #38011 
Security: backported fix for 1360571. #38061 
Security: backported fix for 1404790. #38063 
Security: backported fix for 1427388. #37982 
Security: backported fix for 1428820.
Security: backported fix for CVE-2023-2133.
Security: backported fix for CVE-2023-2134.
Security: backported fix for CVE-2023-2136.
Security: backported fix for CVE-2023-2135. #38083 
Security: backported fix for 1428820. #38067 
Security: backported fix for CVE-2023-2033. #37981 
Security: backported fix for CVE-2023-2133. #38057 
Security: backported fix for CVE-2023-2136. #38065 "
43,"Release Notes for v22.3.7
Fixes

Fixed an issue which made defaultFontFamily in webPreferences have no effect. #37970 (Also in 23, 24, 25)
Fixed broken defaults in shell.openExternal() options. #38092 (Also in 23, 24, 25)
Fixed the active background color for top-level menu items on Windows. #37991 (Also in 23, 24)

Other Changes

Security: backported fix for 1360571. #38062 
Security: backported fix for 1404790. #38064 
Security: backported fix for 1417317. #37665 
Security: backported fix for 1427388. #37983 
Security: backported fix for 1428820. #38068 
Security: backported fix for CVE-2023-2033. #37980 
Security: backported fix for CVE-2023-2133. #38058 
Security: backported fix for CVE-2023-2134. #38056 
Security: backported fix for CVE-2023-2135. #38060 
Security: backported fix for CVE-2023-2136. #38066 
","Release Notes for v22.3.7
Fixes
Fixed an issue which made defaultFontFamily in webPreferences have no effect. #37970 (Also in 23, 24, 25)
Fixed broken defaults in shell.openExternal() options. #38092 (Also in 23, 24, 25)
Fixed the active background color for top-level menu items on Windows. #37991 (Also in 23, 24)
Other Changes
Security: backported fix for 1360571. #38062 
Security: backported fix for 1404790. #38064 
Security: backported fix for 1417317. #37665 
Security: backported fix for 1427388. #37983 
Security: backported fix for 1428820. #38068 
Security: backported fix for CVE-2023-2033. #37980 
Security: backported fix for CVE-2023-2133. #38058 
Security: backported fix for CVE-2023-2134. #38056 
Security: backported fix for CVE-2023-2135. #38060 
Security: backported fix for CVE-2023-2136. #38066 "
44,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@25.0.0-alpha.5.
# Release Notes for v25.0.0-alpha.5
Features

Added new 'did-resign-active' event on app. #38018 
Added thermal management information to powerMonitor. #38028 

Fixes

Fixed broken defaults in shell.openExternal() options. #38071 (Also in 22, 23, 24)
Fixed crash when executing eval in the utility process. #38039 (Also in 23, 24)

Other Changes

Updated Chromium to 114.0.5719.0. #38034 

Documentation

Documentation changes: #38095
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@25.0.0-alpha.5.
Release Notes for v25.0.0-alpha.5
Features
Added new 'did-resign-active' event on app. #38018 
Added thermal management information to powerMonitor. #38028 
Fixes
Fixed broken defaults in shell.openExternal() options. #38071 (Also in 22, 23, 24)
Fixed crash when executing eval in the utility process. #38039 (Also in 23, 24)
Other Changes
Updated Chromium to 114.0.5719.0. #38034 
Documentation
Documentation changes: #38095"
45,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@25.0.0-alpha.4.
# Release Notes for v25.0.0-alpha.4
Fixes

Fixed an issue which made defaultFontFamily in webPreferences have no effect. #37967 (Also in 22, 23, 24)
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@25.0.0-alpha.4.
Release Notes for v25.0.0-alpha.4
Fixes
Fixed an issue which made defaultFontFamily in webPreferences have no effect. #37967 (Also in 22, 23, 24)"
46,"Release Notes for v24.1.2
Fixes

Fixed an issue on Linux where menus would not open after resizing/maximizing/unmaximizing a window. #37906 (Also in 23, 25)
Fixed an issue where the 'swipe' event wasn't being emitted properly on macOS. #37965 (Also in 25)
Fixed an issue which made defaultFontFamily in webPreferences have no effect. #37968 (Also in 22, 23, 25)

Other Changes

Updated Chromium to 112.0.5615.87. #37974 
","Release Notes for v24.1.2
Fixes
Fixed an issue on Linux where menus would not open after resizing/maximizing/unmaximizing a window. #37906 (Also in 23, 25)
Fixed an issue where the 'swipe' event wasn't being emitted properly on macOS. #37965 (Also in 25)
Fixed an issue which made defaultFontFamily in webPreferences have no effect. #37968 (Also in 22, 23, 25)
Other Changes
Updated Chromium to 112.0.5615.87. #37974 "
47,"Release Notes for v23.2.4
Fixes

Fixed an issue on Linux where menus would not open after resizing/maximizing/unmaximizing a window. #37908 (Also in 24, 25)
Fixed an issue which made defaultFontFamily in webPreferences have no effect. #37969 (Also in 22, 24, 25)
","Release Notes for v23.2.4
Fixes
Fixed an issue on Linux where menus would not open after resizing/maximizing/unmaximizing a window. #37908 (Also in 24, 25)
Fixed an issue which made defaultFontFamily in webPreferences have no effect. #37969 (Also in 22, 24, 25)"
48,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@25.0.0-alpha.3.
# Release Notes for v25.0.0-alpha.3
Fixes

Fixed an issue where the 'swipe' event wasn't being emitted properly on macOS. #37966 
Fixed recommended node-gyp version in node.h error. #37926 (Also in 22, 23, 24)

Other Changes

Updated Chromium to 114.0.5710.0. #37957 

Documentation

Documentation changes: #37956
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@25.0.0-alpha.3.
Release Notes for v25.0.0-alpha.3
Fixes
Fixed an issue where the 'swipe' event wasn't being emitted properly on macOS. #37966 
Fixed recommended node-gyp version in node.h error. #37926 (Also in 22, 23, 24)
Other Changes
Updated Chromium to 114.0.5710.0. #37957 
Documentation
Documentation changes: #37956"
49,"Release Notes for v22.3.6
Fixes

Fixed recommended node-gyp version in node.h error. #37942 (Also in 23, 24, 25)
Security: Fixed an issue with Content-Security-Policy not being correctly enforced when sandbox: false and contextIsolation: false. (CVE-2023-23623). #37843 (Also in 24)

Other Changes

Fixed a memory leak in v8.serialize() when running Node.js within Electron. #37774 (Also in 23)
Security: backported fix for CVE-2023-1810. #37850 
Security: backported fix for CVE-2023-1811. #37848 
","Release Notes for v22.3.6
Fixes
Fixed recommended node-gyp version in node.h error. #37942 (Also in 23, 24, 25)
Security: Fixed an issue with Content-Security-Policy not being correctly enforced when sandbox: false and contextIsolation: false. (CVE-2023-23623). #37843 (Also in 24)
Other Changes
Fixed a memory leak in v8.serialize() when running Node.js within Electron. #37774 (Also in 23)
Security: backported fix for CVE-2023-1810. #37850 
Security: backported fix for CVE-2023-1811. #37848 "
50,"Release Notes for v24.1.1
Fixes

Fixed recommended node-gyp version in node.h error. #37927 (Also in 22, 23, 25)
","Release Notes for v24.1.1
Fixes
Fixed recommended node-gyp version in node.h error. #37927 (Also in 22, 23, 25)"
51,"Release Notes for v23.2.3
Fixes

Added about panel for menu role about on Linux as well. #37874 (Also in 24, 25)
Fixed an issue on macOS where entering fullscreen with the Fn+F system shortcut would fail or create strange window side effects. #37822 (Also in 24)
Fixed an issue where certain buttons in the PDF viewer didn't work. #37919 (Also in 24, 25)
Fixed recommended node-gyp version in node.h error. #37941 (Also in 22, 24, 25)
Fixed the active background color for top-level menu items on Windows. #37784 (Also in 24)
Security: Fixed an issue with Content-Security-Policy not being correctly enforced when sandbox: false and contextIsolation: false. (CVE-2023-23623). #37844 (Also in 24)

Other Changes

Security: backported fix for CVE-2023-1810. #37851 
Security: backported fix for CVE-2023-1811. #37849 
","Release Notes for v23.2.3
Fixes
Added about panel for menu role about on Linux as well. #37874 (Also in 24, 25)
Fixed an issue on macOS where entering fullscreen with the Fn+F system shortcut would fail or create strange window side effects. #37822 (Also in 24)
Fixed an issue where certain buttons in the PDF viewer didn't work. #37919 (Also in 24, 25)
Fixed recommended node-gyp version in node.h error. #37941 (Also in 22, 24, 25)
Fixed the active background color for top-level menu items on Windows. #37784 (Also in 24)
Security: Fixed an issue with Content-Security-Policy not being correctly enforced when sandbox: false and contextIsolation: false. (CVE-2023-23623). #37844 (Also in 24)
Other Changes
Security: backported fix for CVE-2023-1810. #37851 
Security: backported fix for CVE-2023-1811. #37849 "
52,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@25.0.0-alpha.2.
# Release Notes for v25.0.0-alpha.2
Features

Added BrowserWindow.set/getWindowButtonPosition APIs. #37094 
Added httpOnly to the cookie filter. #37255 (Also in 24)
Added logUsage to shell.openExternal() options, which allows passing the SEE_MASK_FLAG_LOG_USAGE flag to ShellExecuteEx on Windows. #37139 (Also in 24)
Added net.fetch(). #36733 
Added protocol.handle, replacing and deprecating protocol.{register,intercept}{String,Buffer,Stream,Http,File}Protocol. #36674 
Added types to webRequest filter. #30914 (Also in 24)
Added a will-frame-navigate event to webContents and the <webview> tag, which fires whenever any frame within the frame hierarchy attempts to navigate. #34418 
Added initiator information to navigator events. #37085 
Added several standard page size options to webContents.print(). #37159 (Also in 22, 23, 24)
Added the enableLocalEcho flag to the session handler ses.setDisplayMediaRequestHandler() callback for allowing remote audio input to be echoed in the local output stream when audio is a WebFrameMain. #37315 (Also in 23, 24)
Allows an absolute path to be passed to the session.fromPath() API. #37604 
Changed net.fetch to support requests to file: URLs and custom protocols registered with protocol.register*Protocol. #36606 
Exposes the audio-state-changed event on webContents. #37366 
Feat: introduce session.resolveHost for resolving hostnames with Chromium's DNS resolver. #37690 (Also in 24)

Fixes

Added about panel for menu role about on Linux as well. #37873 (Also in 23, 24)
Corrects an issue with HTML fullscreen when BrowserWindow fullscreening is disabled. #37348 (Also in 23, 24)
Fixed WebUSB on ARM64 macs. #37441 (Also in 23, 24)
Fixed destroyed event not emitted on close for BrowserView.webContents. #37420 (Also in 23, 24)
Fixed a crash on capturing sources when using desktopCapturer API on Wayland. #37511 (Also in 23, 24)
Fixed a crash when BrowserViews are present and a user attempts to prevent beforeunload in the renderer process. #37205 (Also in 22, 23, 24)
Fixed an incorrect result returned when using secure as a cookies filter. #37203 (Also in 22, 23, 24)
Fixed an issue on Linux where menus would not open after resizing/maximizing/unmaximizing a window. #37905 
Fixed an issue on macOS where entering fullscreen with the Fn+F system shortcut would fail or create strange window side effects. #37803 (Also in 23, 24)
Fixed an issue where BroadcastChannel did not work correctly when contextIsolation: false. #37421 (Also in 23, 24)
Fixed an issue where minWidth/minHeight and maxWidth/maxHeight would not be enforced if the user set an aspectRatio on macOS. #37306 (Also in 22, 23, 24)
Fixed an issue where calling port.postMessage in MessagePortMain with some invalid parameters could cause a crash. #37585 (Also in 22, 23, 24)
Fixed an issue where certain buttons in the PDF viewer didn't work. #37920 (Also in 24)
Fixed an issue where draggable regions incorrectly captured clicks in framed windows. #37594 (Also in 23, 24)
Fixed an issue where passing both hasReply and actions to a main process Notification on macOS resulted in the first action being obscured and unavailable. #37381 (Also in 22, 23, 24)
Fixed an issue where successfully loaded media documents emitted did-fail-load. #37824 
Fixed an issue where unhandled rejections could cause duplicate logs in some cases. #37464 (Also in 22, 23, 24)
Fixed an issue with potential dock icon duplication on macOS. #37599 (Also in 22, 23, 24)
Fixed canceling of bluetooth requests when no devices are returned. #37601 (Also in 23, 24)
Fixed draggable regions not working in Mac App Store builds. #37466 (Also in 23, 24)
Fixed issue with BrowserWindow not updating after call to previewFile. #37530 (Also in 22, 23, 24)
Fixed potential private API usage for MAS builds on macOS. #37309 (Also in 23, 24)
Fixed right-click events not being delivered in frameless window draggable regions. #37386 (Also in 23, 24)
Fixed the active background color for top-level menu items on Windows. #37766 (Also in 23, 24)
Fixed window could not go back to maximized state when restored on Linux. #37346 (Also in 22, 23, 24)
Improved error messages on session.cookies.set failure. #37586 (Also in 22, 23, 24)
Security: Fixed an issue with Content-Security-Policy not being correctly enforced when sandbox: false and contextIsolation: false. (CVE-2023-23623). #37756 (Also in 24)
Setting the about panel's options no longer crashes. #37373 (Also in 24)
app.showAboutPanel() no longer blocks the main thread on Windows or Linux, thus matching macOS. #37440 (Also in 24)

Other Changes

Improved error messages for contents.takeHeapSnapshot. #37434 (Also in 22, 23, 24)
Updated Chromium to 114.0.5694.0. #37820 
Updated Node.js to v18.15.0. #37532 
nativeImage.createThumbnailFromPath() now takes size instead of maxSize. #37362 (Also in 24)
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@25.0.0-alpha.2.
Release Notes for v25.0.0-alpha.2
Features
Added BrowserWindow.set/getWindowButtonPosition APIs. #37094 
Added httpOnly to the cookie filter. #37255 (Also in 24)
Added logUsage to shell.openExternal() options, which allows passing the SEE_MASK_FLAG_LOG_USAGE flag to ShellExecuteEx on Windows. #37139 (Also in 24)
Added net.fetch(). #36733 
Added protocol.handle, replacing and deprecating protocol.{register,intercept}{String,Buffer,Stream,Http,File}Protocol. #36674 
Added types to webRequest filter. #30914 (Also in 24)
Added a will-frame-navigate event to webContents and the  tag, which fires whenever any frame within the frame hierarchy attempts to navigate. #34418 
Added initiator information to navigator events. #37085 
Added several standard page size options to webContents.print(). #37159 (Also in 22, 23, 24)
Added the enableLocalEcho flag to the session handler ses.setDisplayMediaRequestHandler() callback for allowing remote audio input to be echoed in the local output stream when audio is a WebFrameMain. #37315 (Also in 23, 24)
Allows an absolute path to be passed to the session.fromPath() API. #37604 
Changed net.fetch to support requests to file: URLs and custom protocols registered with protocol.register*Protocol. #36606 
Exposes the audio-state-changed event on webContents. #37366 
Feat: introduce session.resolveHost for resolving hostnames with Chromium's DNS resolver. #37690 (Also in 24)
Fixes
Added about panel for menu role about on Linux as well. #37873 (Also in 23, 24)
Corrects an issue with HTML fullscreen when BrowserWindow fullscreening is disabled. #37348 (Also in 23, 24)
Fixed WebUSB on ARM64 macs. #37441 (Also in 23, 24)
Fixed destroyed event not emitted on close for BrowserView.webContents. #37420 (Also in 23, 24)
Fixed a crash on capturing sources when using desktopCapturer API on Wayland. #37511 (Also in 23, 24)
Fixed a crash when BrowserViews are present and a user attempts to prevent beforeunload in the renderer process. #37205 (Also in 22, 23, 24)
Fixed an incorrect result returned when using secure as a cookies filter. #37203 (Also in 22, 23, 24)
Fixed an issue on Linux where menus would not open after resizing/maximizing/unmaximizing a window. #37905 
Fixed an issue on macOS where entering fullscreen with the Fn+F system shortcut would fail or create strange window side effects. #37803 (Also in 23, 24)
Fixed an issue where BroadcastChannel did not work correctly when contextIsolation: false. #37421 (Also in 23, 24)
Fixed an issue where minWidth/minHeight and maxWidth/maxHeight would not be enforced if the user set an aspectRatio on macOS. #37306 (Also in 22, 23, 24)
Fixed an issue where calling port.postMessage in MessagePortMain with some invalid parameters could cause a crash. #37585 (Also in 22, 23, 24)
Fixed an issue where certain buttons in the PDF viewer didn't work. #37920 (Also in 24)
Fixed an issue where draggable regions incorrectly captured clicks in framed windows. #37594 (Also in 23, 24)
Fixed an issue where passing both hasReply and actions to a main process Notification on macOS resulted in the first action being obscured and unavailable. #37381 (Also in 22, 23, 24)
Fixed an issue where successfully loaded media documents emitted did-fail-load. #37824 
Fixed an issue where unhandled rejections could cause duplicate logs in some cases. #37464 (Also in 22, 23, 24)
Fixed an issue with potential dock icon duplication on macOS. #37599 (Also in 22, 23, 24)
Fixed canceling of bluetooth requests when no devices are returned. #37601 (Also in 23, 24)
Fixed draggable regions not working in Mac App Store builds. #37466 (Also in 23, 24)
Fixed issue with BrowserWindow not updating after call to previewFile. #37530 (Also in 22, 23, 24)
Fixed potential private API usage for MAS builds on macOS. #37309 (Also in 23, 24)
Fixed right-click events not being delivered in frameless window draggable regions. #37386 (Also in 23, 24)
Fixed the active background color for top-level menu items on Windows. #37766 (Also in 23, 24)
Fixed window could not go back to maximized state when restored on Linux. #37346 (Also in 22, 23, 24)
Improved error messages on session.cookies.set failure. #37586 (Also in 22, 23, 24)
Security: Fixed an issue with Content-Security-Policy not being correctly enforced when sandbox: false and contextIsolation: false. (CVE-2023-23623). #37756 (Also in 24)
Setting the about panel's options no longer crashes. #37373 (Also in 24)
app.showAboutPanel() no longer blocks the main thread on Windows or Linux, thus matching macOS. #37440 (Also in 24)
Other Changes
Improved error messages for contents.takeHeapSnapshot. #37434 (Also in 22, 23, 24)
Updated Chromium to 114.0.5694.0. #37820 
Updated Node.js to v18.15.0. #37532 
nativeImage.createThumbnailFromPath() now takes size instead of maxSize. #37362 (Also in 24)"
53,"Release Notes for v24.1.0
Features

Introduced session.resolveHost for resolving hostnames with Chromium's DNS resolver. #37847 

Fixes

Added about panel for menu role about on Linux as well. #37872 (Also in 23, 25)
Fixed an issue on macOS where entering fullscreen with the Fn+F system shortcut would fail or create strange window side effects. #37823 (Also in 23)
Fixed an issue where certain buttons in the PDF viewer didn't work. #37918 (Also in 25)
Security: Fixed an issue with Content-Security-Policy not being correctly enforced when sandbox: false and contextIsolation: false. (CVE-2023-23623). #37839 

Other Changes

Updated Chromium to 112.0.5615.50. #37833 
","Release Notes for v24.1.0
Features
Introduced session.resolveHost for resolving hostnames with Chromium's DNS resolver. #37847 
Fixes
Added about panel for menu role about on Linux as well. #37872 (Also in 23, 25)
Fixed an issue on macOS where entering fullscreen with the Fn+F system shortcut would fail or create strange window side effects. #37823 (Also in 23)
Fixed an issue where certain buttons in the PDF viewer didn't work. #37918 (Also in 25)
Security: Fixed an issue with Content-Security-Policy not being correctly enforced when sandbox: false and contextIsolation: false. (CVE-2023-23623). #37839 
Other Changes
Updated Chromium to 112.0.5615.50. #37833 "
54,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@25.0.0-alpha.1.
# Release Notes for v25.0.0-alpha.1
Features

Added BrowserWindow.set/getWindowButtonPosition APIs. #37094 
Added httpOnly to the cookie filter. #37255 (Also in 24)
Added logUsage to shell.openExternal() options, which allows passing the SEE_MASK_FLAG_LOG_USAGE flag to ShellExecuteEx on Windows. #37139 (Also in 24)
Added net.fetch(). #36733 
Added protocol.handle, replacing and deprecating protocol.{register,intercept}{String,Buffer,Stream,Http,File}Protocol. #36674 
Added types to webRequest filter. #30914 (Also in 24)
Added a will-frame-navigate event to webContents and the <webview> tag, which fires whenever any frame within the frame hierarchy attempts to navigate. #34418 
Added initiator information to navigator events. #37085 
Added several standard page size options to webContents.print(). #37159 (Also in 22, 23, 24)
Added the enableLocalEcho flag to the session handler ses.setDisplayMediaRequestHandler() callback for allowing remote audio input to be echoed in the local output stream when audio is a WebFrameMain. #37315 (Also in 23, 24)
Allows an absolute path to be passed to the session.fromPath() API. #37604 
Changed net.fetch to support requests to file: URLs and custom protocols registered with protocol.register*Protocol. #36606 
Exposes the audio-state-changed event on webContents. #37366 
Feat: introduce session.resolveHost for resolving hostnames with Chromium's DNS resolver. #37690 (Also in 24)

Fixes

Corrects an issue with HTML fullscreen when BrowserWindow fullscreening is disabled. #37348 (Also in 23, 24)
Fixed WebUSB on ARM64 macs. #37441 (Also in 23, 24)
Fixed destroyed event not emitted on close for BrowserView.webContents. #37420 (Also in 23, 24)
Fixed a crash on capturing sources when using desktopCapturer API on Wayland. #37511 (Also in 23, 24)
Fixed a crash when BrowserViews are present and a user attempts to prevent beforeunload in the renderer process. #37205 (Also in 22, 23, 24)
Fixed an incorrect result returned when using secure as a cookies filter. #37203 (Also in 22, 23, 24)
Fixed an issue on macOS where entering fullscreen with the Fn+F system shortcut would fail or create strange window side effects. #37803 (Also in 23, 24)
Fixed an issue where BroadcastChannel did not work correctly when contextIsolation: false. #37421 (Also in 23, 24)
Fixed an issue where minWidth/minHeight and maxWidth/maxHeight would not be enforced if the user set an aspectRatio on macOS. #37306 (Also in 22, 23, 24)
Fixed an issue where calling port.postMessage in MessagePortMain with some invalid parameters could cause a crash. #37585 (Also in 22, 23, 24)
Fixed an issue where draggable regions incorrectly captured clicks in framed windows. #37594 (Also in 23, 24)
Fixed an issue where passing both hasReply and actions to a main process Notification on macOS resulted in the first action being obscured and unavailable. #37381 (Also in 22, 23, 24)
Fixed an issue where successfully loaded media documents emitted did-fail-load. #37824 
Fixed an issue where unhandled rejections could cause duplicate logs in some cases. #37464 (Also in 22, 23, 24)
Fixed an issue with potential dock icon duplication on macOS. #37599 (Also in 22, 23, 24)
Fixed canceling of bluetooth requests when no devices are returned. #37601 (Also in 23, 24)
Fixed draggable regions not working in Mac App Store builds. #37466 (Also in 23, 24)
Fixed issue with BrowserWindow not updating after call to previewFile. #37530 (Also in 22, 23, 24)
Fixed potential private API usage for MAS builds on macOS. #37309 (Also in 23, 24)
Fixed right-click events not being delivered in frameless window draggable regions. #37386 (Also in 23, 24)
Fixed the active background color for top-level menu items on Windows. #37766 (Also in 23, 24)
Fixed window could not go back to maximized state when restored on Linux. #37346 (Also in 22, 23, 24)
Improved error messages on session.cookies.set failure. #37586 (Also in 22, 23, 24)
Security: Fixed an issue with Content-Security-Policy not being correctly enforced when sandbox: false and contextIsolation: false. (CVE-2023-23623). #37756 (Also in 24)
Setting the about panel's options no longer crashes. #37373 (Also in 24)
app.showAboutPanel() no longer blocks the main thread on Windows or Linux, thus matching macOS. #37440 (Also in 24)

Other Changes

Improved error messages for contents.takeHeapSnapshot. #37434 (Also in 22, 23, 24)
Updated Chromium to 114.0.5694.0. #37820 
Updated Node.js to v18.15.0. #37532 
nativeImage.createThumbnailFromPath() now takes size instead of maxSize. #37362 (Also in 24)
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@25.0.0-alpha.1.
Release Notes for v25.0.0-alpha.1
Features
Added BrowserWindow.set/getWindowButtonPosition APIs. #37094 
Added httpOnly to the cookie filter. #37255 (Also in 24)
Added logUsage to shell.openExternal() options, which allows passing the SEE_MASK_FLAG_LOG_USAGE flag to ShellExecuteEx on Windows. #37139 (Also in 24)
Added net.fetch(). #36733 
Added protocol.handle, replacing and deprecating protocol.{register,intercept}{String,Buffer,Stream,Http,File}Protocol. #36674 
Added types to webRequest filter. #30914 (Also in 24)
Added a will-frame-navigate event to webContents and the  tag, which fires whenever any frame within the frame hierarchy attempts to navigate. #34418 
Added initiator information to navigator events. #37085 
Added several standard page size options to webContents.print(). #37159 (Also in 22, 23, 24)
Added the enableLocalEcho flag to the session handler ses.setDisplayMediaRequestHandler() callback for allowing remote audio input to be echoed in the local output stream when audio is a WebFrameMain. #37315 (Also in 23, 24)
Allows an absolute path to be passed to the session.fromPath() API. #37604 
Changed net.fetch to support requests to file: URLs and custom protocols registered with protocol.register*Protocol. #36606 
Exposes the audio-state-changed event on webContents. #37366 
Feat: introduce session.resolveHost for resolving hostnames with Chromium's DNS resolver. #37690 (Also in 24)
Fixes
Corrects an issue with HTML fullscreen when BrowserWindow fullscreening is disabled. #37348 (Also in 23, 24)
Fixed WebUSB on ARM64 macs. #37441 (Also in 23, 24)
Fixed destroyed event not emitted on close for BrowserView.webContents. #37420 (Also in 23, 24)
Fixed a crash on capturing sources when using desktopCapturer API on Wayland. #37511 (Also in 23, 24)
Fixed a crash when BrowserViews are present and a user attempts to prevent beforeunload in the renderer process. #37205 (Also in 22, 23, 24)
Fixed an incorrect result returned when using secure as a cookies filter. #37203 (Also in 22, 23, 24)
Fixed an issue on macOS where entering fullscreen with the Fn+F system shortcut would fail or create strange window side effects. #37803 (Also in 23, 24)
Fixed an issue where BroadcastChannel did not work correctly when contextIsolation: false. #37421 (Also in 23, 24)
Fixed an issue where minWidth/minHeight and maxWidth/maxHeight would not be enforced if the user set an aspectRatio on macOS. #37306 (Also in 22, 23, 24)
Fixed an issue where calling port.postMessage in MessagePortMain with some invalid parameters could cause a crash. #37585 (Also in 22, 23, 24)
Fixed an issue where draggable regions incorrectly captured clicks in framed windows. #37594 (Also in 23, 24)
Fixed an issue where passing both hasReply and actions to a main process Notification on macOS resulted in the first action being obscured and unavailable. #37381 (Also in 22, 23, 24)
Fixed an issue where successfully loaded media documents emitted did-fail-load. #37824 
Fixed an issue where unhandled rejections could cause duplicate logs in some cases. #37464 (Also in 22, 23, 24)
Fixed an issue with potential dock icon duplication on macOS. #37599 (Also in 22, 23, 24)
Fixed canceling of bluetooth requests when no devices are returned. #37601 (Also in 23, 24)
Fixed draggable regions not working in Mac App Store builds. #37466 (Also in 23, 24)
Fixed issue with BrowserWindow not updating after call to previewFile. #37530 (Also in 22, 23, 24)
Fixed potential private API usage for MAS builds on macOS. #37309 (Also in 23, 24)
Fixed right-click events not being delivered in frameless window draggable regions. #37386 (Also in 23, 24)
Fixed the active background color for top-level menu items on Windows. #37766 (Also in 23, 24)
Fixed window could not go back to maximized state when restored on Linux. #37346 (Also in 22, 23, 24)
Improved error messages on session.cookies.set failure. #37586 (Also in 22, 23, 24)
Security: Fixed an issue with Content-Security-Policy not being correctly enforced when sandbox: false and contextIsolation: false. (CVE-2023-23623). #37756 (Also in 24)
Setting the about panel's options no longer crashes. #37373 (Also in 24)
app.showAboutPanel() no longer blocks the main thread on Windows or Linux, thus matching macOS. #37440 (Also in 24)
Other Changes
Improved error messages for contents.takeHeapSnapshot. #37434 (Also in 22, 23, 24)
Updated Chromium to 114.0.5694.0. #37820 
Updated Node.js to v18.15.0. #37532 
nativeImage.createThumbnailFromPath() now takes size instead of maxSize. #37362 (Also in 24)"
55,"Release Notes for v21.4.4
End of Support for 21.x.y
Electron 21.x.y has reached end-of-support as per the project's support policy. Developers and applications are encouraged to upgrade to a newer version of Electron.
Fixes

Fixed race condition during update on macOS that could result in TCC and Keychain errors. #37794 (Also in 22)

Other Changes

Backported fix for CVE-2023-1219. #37738 
Security: backported fix for 1412991. #37660 
Security: backported fix for 1415249. #37672 
Security: backported fix for 1416916. #37658 
Security: backported fix for 1417317. #37666 
Security: backported fix for 1417585. #37664 
Security: backported fix for 1418734. #37662 
Security: backported fix for CVE-2023-1214. #37655 
Security: backported fix for CVE-2023-1215. #37649 
Security: backported fix for CVE-2023-1217. #37653 
Security: backported fix for CVE-2023-1218. #37651 
Security: backported fix for CVE-2023-1219. #37670 
Security: backported fix for CVE-2023-1220. #37668 
Security: backported fix for CVE-2023-1529. #37695 
Security: backported fix for CVE-2023-1530. #37699 
Security: backported fix for CVE-2023-1531. #37697 
Security: backported fix for CVE-2023-1534. #37692 
","Release Notes for v21.4.4
End of Support for 21.x.y
Electron 21.x.y has reached end-of-support as per the project's support policy. Developers and applications are encouraged to upgrade to a newer version of Electron.
Fixes
Fixed race condition during update on macOS that could result in TCC and Keychain errors. #37794 (Also in 22)
Other Changes
Backported fix for CVE-2023-1219. #37738 
Security: backported fix for 1412991. #37660 
Security: backported fix for 1415249. #37672 
Security: backported fix for 1416916. #37658 
Security: backported fix for 1417317. #37666 
Security: backported fix for 1417585. #37664 
Security: backported fix for 1418734. #37662 
Security: backported fix for CVE-2023-1214. #37655 
Security: backported fix for CVE-2023-1215. #37649 
Security: backported fix for CVE-2023-1217. #37653 
Security: backported fix for CVE-2023-1218. #37651 
Security: backported fix for CVE-2023-1219. #37670 
Security: backported fix for CVE-2023-1220. #37668 
Security: backported fix for CVE-2023-1529. #37695 
Security: backported fix for CVE-2023-1530. #37699 
Security: backported fix for CVE-2023-1531. #37697 
Security: backported fix for CVE-2023-1534. #37692 "
56,"Release Notes for v24.0.0
Stack Upgrades

Chromium 112.0.5615.49
New in Chrome 112
New in Chrome 111
Node.js 18.14.0
Node 18.14.0 blog post
V8 11.2

Breaking Changes

nativeImage.createThumbnailFromPath() now takes size instead of maxSize. #37796 

Features

Added httpOnly to the cookie filter. #37365 
Added logUsage to shell.openExternal() options, which allows passing the SEE_MASK_FLAG_LOG_USAGE flag to ShellExecuteEx on Windows. #37291 
Added types to webRequest filter. #37427 
Added several standard page size options to webContents.print(). #37265 (Also in 22, 23)
Added the enableLocalEcho flag to the session handler ses.setDisplayMediaRequestHandler() callback for allowing remote audio input to be echoed in the local output stream when audio is a WebFrameMain. #37528 (Also in 23)

Fixes

Corrects an issue with HTML fullscreen when BrowserWindow fullscreening is disabled. #37368 (Also in 23)
Fixed WebUSB on ARM64 macs. #37522 (Also in 23)
Fixed destroyed event not emitted on close for BrowserView.webContents. #37450 (Also in 23)
Fixed a crash on capturing sources when using desktopCapturer API on Wayland. #37527 (Also in 23)
Fixed a crash when BrowserViews are present and a user attempts to prevent beforeunload in the renderer process. #37268 (Also in 22, 23)
Fixed an incorrect result returned when using secure as a cookies filter. #37246 (Also in 22, 23)
Fixed an issue where BroadcastChannel did not work correctly when contextIsolation: false. #37443 (Also in 23)
Fixed an issue where minWidth/minHeight and maxWidth/maxHeight would not be enforced if the user set an aspectRatio on macOS. #37456 (Also in 22, 23)
Fixed an issue where calling port.postMessage in MessagePortMain with some invalid parameters could cause a crash. #37726 (Also in 22, 23)
Fixed an issue where draggable regions incorrectly captured clicks in framed windows. #37741 (Also in 23)
Fixed an issue where passing both hasReply and actions to a main process Notification on macOS resulted in the first action being obscured and unavailable. #37449 (Also in 22, 23)
Fixed an issue where unhandled rejections could cause duplicate logs in some cases. #37500 (Also in 22, 23)
Fixed an issue with potential dock icon duplication on macOS. #37625 (Also in 22, 23)
Fixed canceling of bluetooth requests when no devices are returned. #37717 (Also in 23)
Fixed draggable regions not working in Mac App Store builds. #37474 (Also in 23)
Fixed issue with BrowserWindow not updating after call to previewFile. #37578 (Also in 22, 23)
Fixed potential private API usage for MAS builds on macOS. #37364 (Also in 23)
Fixed right-click events not being delivered in frameless window draggable regions. #37395 (Also in 23)
Fixed the active background color for top-level menu items on Windows. #37785 
Fixed window could not go back to maximized state when restored on Linux. #37358 (Also in 22, 23)
Improved error messages on session.cookies.set failure. #37597 (Also in 22, 23)
Setting the about panel's options no longer crashes. #37442 
app.showAboutPanel() no longer blocks the main thread on Windows or Linux, thus matching macOS. #37508 

Other Changes

Improved error messages for contents.takeHeapSnapshot. #37461 (Also in 22, 23)
Updated Chromium to 112.0.5615.49.  Fixed performance regression. #37767 

Documentation

Documentation changes: #37288
","Release Notes for v24.0.0
Stack Upgrades
Chromium 112.0.5615.49
New in Chrome 112
New in Chrome 111
Node.js 18.14.0
Node 18.14.0 blog post
V8 11.2
Breaking Changes
nativeImage.createThumbnailFromPath() now takes size instead of maxSize. #37796 
Features
Added httpOnly to the cookie filter. #37365 
Added logUsage to shell.openExternal() options, which allows passing the SEE_MASK_FLAG_LOG_USAGE flag to ShellExecuteEx on Windows. #37291 
Added types to webRequest filter. #37427 
Added several standard page size options to webContents.print(). #37265 (Also in 22, 23)
Added the enableLocalEcho flag to the session handler ses.setDisplayMediaRequestHandler() callback for allowing remote audio input to be echoed in the local output stream when audio is a WebFrameMain. #37528 (Also in 23)
Fixes
Corrects an issue with HTML fullscreen when BrowserWindow fullscreening is disabled. #37368 (Also in 23)
Fixed WebUSB on ARM64 macs. #37522 (Also in 23)
Fixed destroyed event not emitted on close for BrowserView.webContents. #37450 (Also in 23)
Fixed a crash on capturing sources when using desktopCapturer API on Wayland. #37527 (Also in 23)
Fixed a crash when BrowserViews are present and a user attempts to prevent beforeunload in the renderer process. #37268 (Also in 22, 23)
Fixed an incorrect result returned when using secure as a cookies filter. #37246 (Also in 22, 23)
Fixed an issue where BroadcastChannel did not work correctly when contextIsolation: false. #37443 (Also in 23)
Fixed an issue where minWidth/minHeight and maxWidth/maxHeight would not be enforced if the user set an aspectRatio on macOS. #37456 (Also in 22, 23)
Fixed an issue where calling port.postMessage in MessagePortMain with some invalid parameters could cause a crash. #37726 (Also in 22, 23)
Fixed an issue where draggable regions incorrectly captured clicks in framed windows. #37741 (Also in 23)
Fixed an issue where passing both hasReply and actions to a main process Notification on macOS resulted in the first action being obscured and unavailable. #37449 (Also in 22, 23)
Fixed an issue where unhandled rejections could cause duplicate logs in some cases. #37500 (Also in 22, 23)
Fixed an issue with potential dock icon duplication on macOS. #37625 (Also in 22, 23)
Fixed canceling of bluetooth requests when no devices are returned. #37717 (Also in 23)
Fixed draggable regions not working in Mac App Store builds. #37474 (Also in 23)
Fixed issue with BrowserWindow not updating after call to previewFile. #37578 (Also in 22, 23)
Fixed potential private API usage for MAS builds on macOS. #37364 (Also in 23)
Fixed right-click events not being delivered in frameless window draggable regions. #37395 (Also in 23)
Fixed the active background color for top-level menu items on Windows. #37785 
Fixed window could not go back to maximized state when restored on Linux. #37358 (Also in 22, 23)
Improved error messages on session.cookies.set failure. #37597 (Also in 22, 23)
Setting the about panel's options no longer crashes. #37442 
app.showAboutPanel() no longer blocks the main thread on Windows or Linux, thus matching macOS. #37508 
Other Changes
Improved error messages for contents.takeHeapSnapshot. #37461 (Also in 22, 23)
Updated Chromium to 112.0.5615.49.  Fixed performance regression. #37767 
Documentation
Documentation changes: #37288"
57,"Release Notes for v23.2.2
Fixes

Fixed an issue where draggable regions incorrectly captured clicks in framed windows. #37740 (Also in 24)
","Release Notes for v23.2.2
Fixes
Fixed an issue where draggable regions incorrectly captured clicks in framed windows. #37740 (Also in 24)"
58,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@24.0.0-beta.7.
# Release Notes for v24.0.0-beta.7","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@24.0.0-beta.7.
Release Notes for v24.0.0-beta.7"
59,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@24.0.0-beta.6.
# Release Notes for v24.0.0-beta.6
Fixes

Fixed an issue where calling port.postMessage in MessagePortMain with some invalid parameters could cause a crash. #37726 (Also in 22, 23)
Fixed an issue where draggable regions incorrectly captured clicks in framed windows. #37741 
Fixed canceling of bluetooth requests when no devices are returned. #37717 (Also in 23)

Other Changes

Updated Chromium to 112.0.5615.39. #37700 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@24.0.0-beta.6.
Release Notes for v24.0.0-beta.6
Fixes
Fixed an issue where calling port.postMessage in MessagePortMain with some invalid parameters could cause a crash. #37726 (Also in 22, 23)
Fixed an issue where draggable regions incorrectly captured clicks in framed windows. #37741 
Fixed canceling of bluetooth requests when no devices are returned. #37717 (Also in 23)
Other Changes
Updated Chromium to 112.0.5615.39. #37700 "
60,"Release Notes for v23.2.1
Fixes

Fixed an issue where calling port.postMessage in MessagePortMain with some invalid parameters could cause a crash. #37724 (Also in 22, 24)
Fixed canceling of bluetooth requests when no devices are returned. #37720 (Also in 24)

Other Changes

Security: backported fix for CVE-2023-1213. #37708 
Updated Chromium to 110.0.5481.208. #37645 
","Release Notes for v23.2.1
Fixes
Fixed an issue where calling port.postMessage in MessagePortMain with some invalid parameters could cause a crash. #37724 (Also in 22, 24)
Fixed canceling of bluetooth requests when no devices are returned. #37720 (Also in 24)
Other Changes
Security: backported fix for CVE-2023-1213. #37708 
Updated Chromium to 110.0.5481.208. #37645 "
61,"Release Notes for v22.3.5
Fixes

Fixed an issue where calling port.postMessage in MessagePortMain with some invalid parameters could cause a crash. #37725 (Also in 23, 24)
Fixed canceling of bluetooth requests when no devices are returned. #37739 (Also in 23, 24)

Other Changes

Security: backported fix for 1412991. #37659 
Security: backported fix for 1418734. #37661 
Security: backported fix for CVE-2023-1214. #37654 
Security: backported fix for CVE-2023-1217. #37652 
Security: backported fix for CVE-2023-1218. #37650 
Security: backported fix for CVE-2023-1219. #37669 
Security: backported fix for CVE-2023-1529. #37694 
Security: backported fix for CVE-2023-1530. #37698 
Security: backported fix for CVE-2023-1531. #37696 
Security: backported fix for CVE-2023-1532. #37693 
Security: backported fix for CVE-2023-1534. #37691 
","Release Notes for v22.3.5
Fixes
Fixed an issue where calling port.postMessage in MessagePortMain with some invalid parameters could cause a crash. #37725 (Also in 23, 24)
Fixed canceling of bluetooth requests when no devices are returned. #37739 (Also in 23, 24)
Other Changes
Security: backported fix for 1412991. #37659 
Security: backported fix for 1418734. #37661 
Security: backported fix for CVE-2023-1214. #37654 
Security: backported fix for CVE-2023-1217. #37652 
Security: backported fix for CVE-2023-1218. #37650 
Security: backported fix for CVE-2023-1219. #37669 
Security: backported fix for CVE-2023-1529. #37694 
Security: backported fix for CVE-2023-1530. #37698 
Security: backported fix for CVE-2023-1531. #37696 
Security: backported fix for CVE-2023-1532. #37693 
Security: backported fix for CVE-2023-1534. #37691 "
62,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@24.0.0-beta.5.
# Release Notes for v24.0.0-beta.5
Fixes

Fixed an issue with potential dock icon duplication on macOS. #37625 (Also in 22, 23)
Fixed issue with BrowserWindow not updating after call to previewFile. #37578 (Also in 22, 23)

Other Changes

Updated Chromium to 112.0.5615.29. #37598 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@24.0.0-beta.5.
Release Notes for v24.0.0-beta.5
Fixes
Fixed an issue with potential dock icon duplication on macOS. #37625 (Also in 22, 23)
Fixed issue with BrowserWindow not updating after call to previewFile. #37578 (Also in 22, 23)
Other Changes
Updated Chromium to 112.0.5615.29. #37598 "
63,"Release Notes for v22.3.4
Fixes

Fixed an issue with potential dock icon duplication on macOS. #37623 (Also in 23, 24)
Fixed issue with BrowserWindow not updating after call to previewFile. #37576 (Also in 23, 24)
Improved error messages on session.cookies.set failure. #37595 (Also in 23, 24)

Other Changes

Security: backported fix for 1415249. #37671 
Security: backported fix for 1416916. #37657 
Security: backported fix for 1417585. #37663 
Security: backported fix for CVE-2023-1213. #37656 
Security: backported fix for CVE-2023-1215. #37648 
Security: backported fix for CVE-2023-1220. #37667 
","Release Notes for v22.3.4
Fixes
Fixed an issue with potential dock icon duplication on macOS. #37623 (Also in 23, 24)
Fixed issue with BrowserWindow not updating after call to previewFile. #37576 (Also in 23, 24)
Improved error messages on session.cookies.set failure. #37595 (Also in 23, 24)
Other Changes
Security: backported fix for 1415249. #37671 
Security: backported fix for 1416916. #37657 
Security: backported fix for 1417585. #37663 
Security: backported fix for CVE-2023-1213. #37656 
Security: backported fix for CVE-2023-1215. #37648 
Security: backported fix for CVE-2023-1220. #37667 "
64,"Release Notes for v23.2.0
Features

Added the enableLocalEcho flag to the session handler ses.setDisplayMediaRequestHandler() callback for allowing remote audio input to be echoed in the local output stream when audio is a WebFrameMain. #37529 (Also in 24)

Fixes

Fixed an issue where BroadcastChannel did not work correctly when contextIsolation: false. #37444 (Also in 24)
Fixed an issue with potential dock icon duplication on macOS. #37624 (Also in 22, 24)
Fixed issue with BrowserWindow not updating after call to previewFile. #37577 (Also in 22, 24)
Improved error messages on session.cookies.set failure. #37596 (Also in 22, 24)
","Release Notes for v23.2.0
Features
Added the enableLocalEcho flag to the session handler ses.setDisplayMediaRequestHandler() callback for allowing remote audio input to be echoed in the local output stream when audio is a WebFrameMain. #37529 (Also in 24)
Fixes
Fixed an issue where BroadcastChannel did not work correctly when contextIsolation: false. #37444 (Also in 24)
Fixed an issue with potential dock icon duplication on macOS. #37624 (Also in 22, 24)
Fixed issue with BrowserWindow not updating after call to previewFile. #37577 (Also in 22, 24)
Improved error messages on session.cookies.set failure. #37596 (Also in 22, 24)"
65,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@24.0.0-beta.4.
# Release Notes for v24.0.0-beta.4
Features

Added the enableLocalEcho flag to the session handler ses.setDisplayMediaRequestHandler() callback for allowing remote audio input to be echoed in the local output stream when audio is a WebFrameMain. #37528 (Also in 23)

Fixes

Improved error messages on session.cookies.set failure. #37597 (Also in 22, 23)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@24.0.0-beta.4.
Release Notes for v24.0.0-beta.4
Features
Added the enableLocalEcho flag to the session handler ses.setDisplayMediaRequestHandler() callback for allowing remote audio input to be echoed in the local output stream when audio is a WebFrameMain. #37528 (Also in 23)
Fixes
Improved error messages on session.cookies.set failure. #37597 (Also in 22, 23)"
66,"Release Notes for v21.4.3
Other Changes

Security: backported fix for 1414224. #37484 
Security: backported fix for CVE-2023-0928. #37482 
Security: backported fix for CVE-2023-0929. #37480 
Security: backported fix for CVE-2023-0931. #37478 
Security: backported fix for CVE-2023-0932. #37486 
","Release Notes for v21.4.3
Other Changes
Security: backported fix for 1414224. #37484 
Security: backported fix for CVE-2023-0928. #37482 
Security: backported fix for CVE-2023-0929. #37480 
Security: backported fix for CVE-2023-0931. #37478 
Security: backported fix for CVE-2023-0932. #37486 "
67,"Release Notes for v23.1.4
Fixes

Fixed an issue where unhandled rejections could cause duplicate logs in some cases. #37501 (Also in 22, 24)

Other Changes

Updated Chromium to 110.0.5481.192. #37533 
","Release Notes for v23.1.4
Fixes
Fixed an issue where unhandled rejections could cause duplicate logs in some cases. #37501 (Also in 22, 24)
Other Changes
Updated Chromium to 110.0.5481.192. #37533 "
68,"Release Notes for v22.3.3
Fixes

Fixed an issue where unhandled rejections could cause duplicate logs in some cases. #37502 (Also in 23, 24)

Other Changes

Security: backported fix for 1414224. #37483 
Security: backported fix for CVE-2023-0928. #37481 
Security: backported fix for CVE-2023-0929. #37479 
Security: backported fix for CVE-2023-0931. #37477 
Security: backported fix for CVE-2023-0932. #37485 
","Release Notes for v22.3.3
Fixes
Fixed an issue where unhandled rejections could cause duplicate logs in some cases. #37502 (Also in 23, 24)
Other Changes
Security: backported fix for 1414224. #37483 
Security: backported fix for CVE-2023-0928. #37481 
Security: backported fix for CVE-2023-0929. #37479 
Security: backported fix for CVE-2023-0931. #37477 
Security: backported fix for CVE-2023-0932. #37485 "
69,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@24.0.0-beta.3.
# Release Notes for v24.0.0-beta.3
Other Changes

Updated Chromium to 112.0.5615.20. #37546 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@24.0.0-beta.3.
Release Notes for v24.0.0-beta.3
Other Changes
Updated Chromium to 112.0.5615.20. #37546 "
70,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@24.0.0-beta.2.
# Release Notes for v24.0.0-beta.2
Fixes

Fixed WebUSB on ARM64 macs. #37522 (Also in 23)
Fixed a crash on capturing sources when using desktopCapturer API on Wayland. #37527 (Also in 23)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@24.0.0-beta.2.
Release Notes for v24.0.0-beta.2
Fixes
Fixed WebUSB on ARM64 macs. #37522 (Also in 23)
Fixed a crash on capturing sources when using desktopCapturer API on Wayland. #37527 (Also in 23)"
71,"Release Notes for v23.1.3
Fixes

Fixed WebUSB on ARM64 macs. #37521 (Also in 24)
Fixed a crash on capturing sources when using desktopCapturer API on Wayland. #37526 

Other Changes

Updated Chromium to 110.0.5481.179. #37471 
","Release Notes for v23.1.3
Fixes
Fixed WebUSB on ARM64 macs. #37521 (Also in 24)
Fixed a crash on capturing sources when using desktopCapturer API on Wayland. #37526 
Other Changes
Updated Chromium to 110.0.5481.179. #37471 "
72,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@24.0.0-beta.1.
# Release Notes for v24.0.0-beta.1
Fixes

Fixed an issue where unhandled rejections could cause duplicate logs in some cases. #37500 
Fixed draggable regions not working in Mac App Store builds. #37474 (Also in 23)
app.showAboutPanel() no longer blocks the main thread on Windows or Linux, thus matching macOS. #37508 

Other Changes

Updated Chromium to 111.0.5563.50. #37223 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@24.0.0-beta.1.
Release Notes for v24.0.0-beta.1
Fixes
Fixed an issue where unhandled rejections could cause duplicate logs in some cases. #37500 
Fixed draggable regions not working in Mac App Store builds. #37474 (Also in 23)
app.showAboutPanel() no longer blocks the main thread on Windows or Linux, thus matching macOS. #37508 
Other Changes
Updated Chromium to 111.0.5563.50. #37223 "
73,"Release Notes for v23.1.2
Fixes

Fixed destroyed event not emitted on close for BrowserView.webContents. #37451 (Also in 24)
Fixed an incorrect result returned when using secure as a cookies filter. #37248 (Also in 22, 24)
Fixed an issue where minWidth/minHeight and maxWidth/maxHeight would not be enforced if the user set an aspectRatio on macOS. #37457 (Also in 22, 24)
Fixed an issue where passing both hasReply and actions to a main process Notification on macOS resulted in the first action being obscured and unavailable. #37448 (Also in 22, 24)
Fixed draggable regions not working in Mac App Store builds. #37473 (Also in 24)
Fixed right-click events not being delivered in frameless window draggable regions. #37394 (Also in 24)

Other Changes

Improved error messages for contents.takeHeapSnapshot. #37460 (Also in 22, 24)
Updated Chromium to 110.0.5481.177. #37389 
","Release Notes for v23.1.2
Fixes
Fixed destroyed event not emitted on close for BrowserView.webContents. #37451 (Also in 24)
Fixed an incorrect result returned when using secure as a cookies filter. #37248 (Also in 22, 24)
Fixed an issue where minWidth/minHeight and maxWidth/maxHeight would not be enforced if the user set an aspectRatio on macOS. #37457 (Also in 22, 24)
Fixed an issue where passing both hasReply and actions to a main process Notification on macOS resulted in the first action being obscured and unavailable. #37448 (Also in 22, 24)
Fixed draggable regions not working in Mac App Store builds. #37473 (Also in 24)
Fixed right-click events not being delivered in frameless window draggable regions. #37394 (Also in 24)
Other Changes
Improved error messages for contents.takeHeapSnapshot. #37460 (Also in 22, 24)
Updated Chromium to 110.0.5481.177. #37389 "
74,"Release Notes for v22.3.2
Fixes

Fixed an issue where minWidth/minHeight and maxWidth/maxHeight would not be enforced if the user set an aspectRatio on macOS. #37458 (Also in 23, 24)
Fixed an issue where passing both hasReply and actions to a main process Notification on macOS resulted in the first action being obscured and unavailable. #37447 (Also in 23, 24)
Fixed window could not go back to maximized state when restored on Linux. #37360 (Also in 23, 24)

Other Changes

Improved error messages for contents.takeHeapSnapshot. #37459 (Also in 23, 24)
","Release Notes for v22.3.2
Fixes
Fixed an issue where minWidth/minHeight and maxWidth/maxHeight would not be enforced if the user set an aspectRatio on macOS. #37458 (Also in 23, 24)
Fixed an issue where passing both hasReply and actions to a main process Notification on macOS resulted in the first action being obscured and unavailable. #37447 (Also in 23, 24)
Fixed window could not go back to maximized state when restored on Linux. #37360 (Also in 23, 24)
Other Changes
Improved error messages for contents.takeHeapSnapshot. #37459 (Also in 23, 24)"
75,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@24.0.0-alpha.7.
# Release Notes for v24.0.0-alpha.7
Features

Added types to webRequest filter. #37427 

Fixes

Fixed destroyed event not emitted on close for BrowserView.webContents. #37450 (Also in 23)
Fixed an issue where BroadcastChannel did not work correctly when contextIsolation: false. #37443 
Fixed an issue where minWidth/minHeight and maxWidth/maxHeight would not be enforced if the user set an aspectRatio on macOS. #37456 (Also in 22, 23)
Fixed an issue where passing both hasReply and actions to a main process Notification on macOS resulted in the first action being obscured and unavailable. #37449 (Also in 22, 23)
Setting the about panel's options no longer crashes. #37442 

Other Changes

Improved error messages for contents.takeHeapSnapshot. #37461 (Also in 22, 23)
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@24.0.0-alpha.7.
Release Notes for v24.0.0-alpha.7
Features
Added types to webRequest filter. #37427 
Fixes
Fixed destroyed event not emitted on close for BrowserView.webContents. #37450 (Also in 23)
Fixed an issue where BroadcastChannel did not work correctly when contextIsolation: false. #37443 
Fixed an issue where minWidth/minHeight and maxWidth/maxHeight would not be enforced if the user set an aspectRatio on macOS. #37456 (Also in 22, 23)
Fixed an issue where passing both hasReply and actions to a main process Notification on macOS resulted in the first action being obscured and unavailable. #37449 (Also in 22, 23)
Setting the about panel's options no longer crashes. #37442 
Other Changes
Improved error messages for contents.takeHeapSnapshot. #37461 (Also in 22, 23)"
76,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@24.0.0-alpha.6.
# Release Notes for v24.0.0-alpha.6
Features

Added httpOnly to the cookie filter. #37365 
Added logUsage to shell.openExternal() options, which allows passing the SEE_MASK_FLAG_LOG_USAGE flag to ShellExecuteEx on Windows. #37291 

Fixes

Fixed right-click events not being delivered in frameless window draggable regions. #37395 (Also in 23)
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@24.0.0-alpha.6.
Release Notes for v24.0.0-alpha.6
Features
Added httpOnly to the cookie filter. #37365 
Added logUsage to shell.openExternal() options, which allows passing the SEE_MASK_FLAG_LOG_USAGE flag to ShellExecuteEx on Windows. #37291 
Fixes
Fixed right-click events not being delivered in frameless window draggable regions. #37395 (Also in 23)"
77,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@24.0.0-alpha.5.
# Release Notes for v24.0.0-alpha.5
Fixes

Corrects an issue with HTML fullscreen when BrowserWindow fullscreening is disabled. #37368 (Also in 23)
Fixed potential private API usage for MAS builds on macOS. #37364 (Also in 23)
Fixed window could not go back to maximized state when restored on Linux. #37358 (Also in 22, 23)
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@24.0.0-alpha.5.
Release Notes for v24.0.0-alpha.5
Fixes
Corrects an issue with HTML fullscreen when BrowserWindow fullscreening is disabled. #37368 (Also in 23)
Fixed potential private API usage for MAS builds on macOS. #37364 (Also in 23)
Fixed window could not go back to maximized state when restored on Linux. #37358 (Also in 22, 23)"
78,"Release Notes for v23.1.1
Fixes

Corrects an issue with HTML fullscreen when BrowserWindow fullscreening is disabled. #37367 (Also in 24)
Fixed potential private API usage for MAS builds on macOS. #37363 (Also in 24)
Fixed window could not go back to maximized state when restored on Linux. #37359 (Also in 24)

Other Changes

Security: backported fix for chromium:1408392. #37297 
Updated Chromium to 110.0.5481.104. #37333 

Documentation

Documentation changes: #37290
","Release Notes for v23.1.1
Fixes
Corrects an issue with HTML fullscreen when BrowserWindow fullscreening is disabled. #37367 (Also in 24)
Fixed potential private API usage for MAS builds on macOS. #37363 (Also in 24)
Fixed window could not go back to maximized state when restored on Linux. #37359 (Also in 24)
Other Changes
Security: backported fix for chromium:1408392. #37297 
Updated Chromium to 110.0.5481.104. #37333 
Documentation
Documentation changes: #37290"
79,"Release Notes for v22.3.1
Other Changes

Security: backported fix for chromium:1408392. #37298 

Documentation

Documentation changes: #37289
","Release Notes for v22.3.1
Other Changes
Security: backported fix for chromium:1408392. #37298 
Documentation
Documentation changes: #37289"
80,"Release Notes for v21.4.2
Fixes

Basic accessibility support is now enabled when macOS Voice Control is activated to allow for full voice control of Electron applications. #37144 (Also in 22, 23)
Fixed audio worklet scripts failing to run when nodeIntegrationInWorker: true. #37103 (Also in 22, 23)

Other Changes

Security: backported fix for 1406115. #37170 
Security: backported fix for CVE-2023-0472. #37057 
Security: backported fix for chromium:1408392. #37299 

Documentation

Documentation changes: #37106
","Release Notes for v21.4.2
Fixes
Basic accessibility support is now enabled when macOS Voice Control is activated to allow for full voice control of Electron applications. #37144 (Also in 22, 23)
Fixed audio worklet scripts failing to run when nodeIntegrationInWorker: true. #37103 (Also in 22, 23)
Other Changes
Security: backported fix for 1406115. #37170 
Security: backported fix for CVE-2023-0472. #37057 
Security: backported fix for chromium:1408392. #37299 
Documentation
Documentation changes: #37106"
81,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@24.0.0-alpha.4.
# Release Notes for v24.0.0-alpha.4
Documentation

Documentation changes: #37288
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@24.0.0-alpha.4.
Release Notes for v24.0.0-alpha.4
Documentation
Documentation changes: #37288"
82,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@24.0.0-alpha.3.
# Release Notes for v24.0.0-alpha.3
Features

Added label property to Display objects. #36855 (Also in 21, 22, 23)
Added a new devtools-open-url event to webContents to allow developers to open new windows with them. #36774 
Added several standard page size options to webContents.print(). #37265 (Also in 22, 23)
Allow a application-specific username to be passed to inAppPurchase.purchaseProduct(). #35902 
Exposed window.invalidateShadow() to clear residual visual artifacts on macOS. #32452 
Whole-program optimization is enabled by default in electron node headers config file. #36937 (Also in 21, 22, 23)
SystemPreferences::CanPromptTouchID (macOS) now supports Apple Watch. #36935 

Fixes

Basic accessibility support is now enabled when macOS Voice Control is activated to allow for full voice control of Electron applications. #37122 (Also in 21, 22, 23)
Changed HTML5 Notifications created with the requireInteraction option to not timeout on Linux and Windows. #36477 (Also in 21, 22, 23)
ESM loads of CJS modules that have null exports no longer throw. #37009 (Also in 23)
Enabled support for  WebAssembly.{compileStreaming|instantiateStreaming} in Node.js. #36420 
Fixed a BrowserWindow maxWidth or maxHeight of 0 causing strange resizing behavior. #36487 (Also in 21, 22, 23)
Fixed a crash that could occur when running eval in inline scripts in unsandboxed renderer processes. #36567 (Also in 22, 23)
Fixed a crash when BrowserViews are present and a user attempts to prevent beforeunload in the renderer process. #37268 (Also in 22, 23)
Fixed a potential crash in some types of Worklets. #37050 (Also in 23)
Fixed a printing crash caused by an uninitialized pref. #37052 (Also in 23)
Fixed an RTL issue that could happen in some locales when calling BrowserWindow.setTrafficLightPosition() on macOS. #36839 (Also in 21, 22, 23)
Fixed an error when fs.readdir gets null for options. #34764 (Also in 21, 22, 23)
Fixed an incorrect result returned when using secure as a cookies filter. #37246 (Also in 22)
Fixed an issue on macOS when trying to switch processes with Cmd+Tab after exiting Kiosk Mode. #36854 (Also in 21, 22, 23)
Fixed an issue where <datalist> elements were improperly positioned within the page. #36934 (Also in 23)
Fixed an issue where webViews could have an incorrect initial background color following reloads. #36920 (Also in 21, 22, 23)
Fixed an issue where some frameless windows with draggable regions were not resizable on Windows. #37016 (Also in 23)
Fixed an issue where the setPermissionRequestHandler callback would be invoked twice when using navigator.getUserMedia(...). #36787 (Also in 22, 23)
Fixed an issue with incorrect focus ring highlighting when using dialog.showMessageBox(). #36772 (Also in 21, 22, 23)
Fixed audio worklet scripts failing to run when nodeIntegrationInWorker: true. #37041 (Also in 22, 23)
Fixed binary stripping for branded release builds on Linux. #36641 (Also in 21, 22, 23)
Fixed missing headers in libcxx_headers bundle. #36863 
Fixed net.request response headers missing Content-Type. #36666 
Fixed tray icon not showing on desktop environments that have no support for app indicator. #36815 (Also in 22, 23)
Fixed warning about duplicate WebSwapCGLLayer symbols when Electron starts on macOS. #35961 (Also in 21, 22, 23)
Removed plugin helper checks on macOS gated behind enable_plugins buildflag. #36971 (Also in 22, 23)
Use the process cache to reduce the memory for asar file. #36600 (Also in 21, 22, 23)

Other Changes

<!-- Please add a one-line description for app developers to read in the release notes, or 'none' if no notes relevant to app developers. Examples and help on special cases: https://github.com/electron/clerk/blob/master/README.md#examples - ->none. #36649 (Also in 23)
Backported fix for v8:11880, chromium:1393256. #36651 
Fixed a memory leak in v8.serialize() when running Node.js within Electron. #37021 (Also in 23)
Removed unneeded --turbo-profiling-input argument from mksnapshot_args for Linux mksnapshot zips. #36531 (Also in 22, 23)
The deprecated incrementCapturerCount() / decrementCapturerCount() methods have been removed. #37075 (Also in 23)
Updated Chromium to 111.0.5544.3. #36820 
Updated Node.js to v18.14.0. #37129 
Updates Node.js types to v18. #36924 
Windows 7, Windows 8, and Windows 8.1 are not supported anymore as Chromium 110 dropped support. #36427 (Also in 23)

Documentation

Documentation changes: #36952, #37095
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@24.0.0-alpha.3.
Release Notes for v24.0.0-alpha.3
Features
Added label property to Display objects. #36855 (Also in 21, 22, 23)
Added a new devtools-open-url event to webContents to allow developers to open new windows with them. #36774 
Added several standard page size options to webContents.print(). #37265 (Also in 22, 23)
Allow a application-specific username to be passed to inAppPurchase.purchaseProduct(). #35902 
Exposed window.invalidateShadow() to clear residual visual artifacts on macOS. #32452 
Whole-program optimization is enabled by default in electron node headers config file. #36937 (Also in 21, 22, 23)
SystemPreferences::CanPromptTouchID (macOS) now supports Apple Watch. #36935 
Fixes
Basic accessibility support is now enabled when macOS Voice Control is activated to allow for full voice control of Electron applications. #37122 (Also in 21, 22, 23)
Changed HTML5 Notifications created with the requireInteraction option to not timeout on Linux and Windows. #36477 (Also in 21, 22, 23)
ESM loads of CJS modules that have null exports no longer throw. #37009 (Also in 23)
Enabled support for  WebAssembly.{compileStreaming|instantiateStreaming} in Node.js. #36420 
Fixed a BrowserWindow maxWidth or maxHeight of 0 causing strange resizing behavior. #36487 (Also in 21, 22, 23)
Fixed a crash that could occur when running eval in inline scripts in unsandboxed renderer processes. #36567 (Also in 22, 23)
Fixed a crash when BrowserViews are present and a user attempts to prevent beforeunload in the renderer process. #37268 (Also in 22, 23)
Fixed a potential crash in some types of Worklets. #37050 (Also in 23)
Fixed a printing crash caused by an uninitialized pref. #37052 (Also in 23)
Fixed an RTL issue that could happen in some locales when calling BrowserWindow.setTrafficLightPosition() on macOS. #36839 (Also in 21, 22, 23)
Fixed an error when fs.readdir gets null for options. #34764 (Also in 21, 22, 23)
Fixed an incorrect result returned when using secure as a cookies filter. #37246 (Also in 22)
Fixed an issue on macOS when trying to switch processes with Cmd+Tab after exiting Kiosk Mode. #36854 (Also in 21, 22, 23)
Fixed an issue where  elements were improperly positioned within the page. #36934 (Also in 23)
Fixed an issue where webViews could have an incorrect initial background color following reloads. #36920 (Also in 21, 22, 23)
Fixed an issue where some frameless windows with draggable regions were not resizable on Windows. #37016 (Also in 23)
Fixed an issue where the setPermissionRequestHandler callback would be invoked twice when using navigator.getUserMedia(...). #36787 (Also in 22, 23)
Fixed an issue with incorrect focus ring highlighting when using dialog.showMessageBox(). #36772 (Also in 21, 22, 23)
Fixed audio worklet scripts failing to run when nodeIntegrationInWorker: true. #37041 (Also in 22, 23)
Fixed binary stripping for branded release builds on Linux. #36641 (Also in 21, 22, 23)
Fixed missing headers in libcxx_headers bundle. #36863 
Fixed net.request response headers missing Content-Type. #36666 
Fixed tray icon not showing on desktop environments that have no support for app indicator. #36815 (Also in 22, 23)
Fixed warning about duplicate WebSwapCGLLayer symbols when Electron starts on macOS. #35961 (Also in 21, 22, 23)
Removed plugin helper checks on macOS gated behind enable_plugins buildflag. #36971 (Also in 22, 23)
Use the process cache to reduce the memory for asar file. #36600 (Also in 21, 22, 23)
Other Changes
<!-- Please add a one-line description for app developers to read in the release notes, or 'none' if no notes relevant to app developers. Examples and help on special cases: link - ->none. #36649 (Also in 23)
Backported fix for v8:11880, chromium:1393256. #36651 
Fixed a memory leak in v8.serialize() when running Node.js within Electron. #37021 (Also in 23)
Removed unneeded --turbo-profiling-input argument from mksnapshot_args for Linux mksnapshot zips. #36531 (Also in 22, 23)
The deprecated incrementCapturerCount() / decrementCapturerCount() methods have been removed. #37075 (Also in 23)
Updated Chromium to 111.0.5544.3. #36820 
Updated Node.js to v18.14.0. #37129 
Updates Node.js types to v18. #36924 
Windows 7, Windows 8, and Windows 8.1 are not supported anymore as Chromium 110 dropped support. #36427 (Also in 23)
Documentation
Documentation changes: #36952, #37095"
83,"Release Notes for v22.3.0
Features

Added several standard page size options to webContents.print(). #37263 (Also in 23, 24)

Fixes

Fixed a crash when BrowserViews are present and a user attempts to prevent beforeunload in the renderer process. #37266 (Also in 23, 24)
Fixed an incorrect result returned when using secure as a cookies filter. #37247 (Also in 24)

Other Changes

Security: backported fix for CVE-2023-0696. #37192 
","Release Notes for v22.3.0
Features
Added several standard page size options to webContents.print(). #37263 (Also in 23, 24)
Fixes
Fixed a crash when BrowserViews are present and a user attempts to prevent beforeunload in the renderer process. #37266 (Also in 23, 24)
Fixed an incorrect result returned when using secure as a cookies filter. #37247 (Also in 24)
Other Changes
Security: backported fix for CVE-2023-0696. #37192 "
84,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@24.0.0-alpha.2.
# Release Notes for v24.0.0-alpha.2
Features

Added label property to Display objects. #36855 (Also in 21, 22, 23)
Added a new devtools-open-url event to webContents to allow developers to open new windows with them. #36774 
Added several standard page size options to webContents.print(). #37265 (Also in 22, 23)
Allow a application-specific username to be passed to inAppPurchase.purchaseProduct(). #35902 
Exposed window.invalidateShadow() to clear residual visual artifacts on macOS. #32452 
Whole-program optimization is enabled by default in electron node headers config file. #36937 (Also in 21, 22, 23)
SystemPreferences::CanPromptTouchID (macOS) now supports Apple Watch. #36935 

Fixes

Basic accessibility support is now enabled when macOS Voice Control is activated to allow for full voice control of Electron applications. #37122 (Also in 21, 22, 23)
Changed HTML5 Notifications created with the requireInteraction option to not timeout on Linux and Windows. #36477 (Also in 21, 22, 23)
ESM loads of CJS modules that have null exports no longer throw. #37009 (Also in 23)
Enabled support for  WebAssembly.{compileStreaming|instantiateStreaming} in Node.js. #36420 
Fixed a BrowserWindow maxWidth or maxHeight of 0 causing strange resizing behavior. #36487 (Also in 21, 22, 23)
Fixed a crash that could occur when running eval in inline scripts in unsandboxed renderer processes. #36567 (Also in 22, 23)
Fixed a crash when BrowserViews are present and a user attempts to prevent beforeunload in the renderer process. #37268 (Also in 22, 23)
Fixed a potential crash in some types of Worklets. #37050 (Also in 23)
Fixed a printing crash caused by an uninitialized pref. #37052 (Also in 23)
Fixed an RTL issue that could happen in some locales when calling BrowserWindow.setTrafficLightPosition() on macOS. #36839 (Also in 21, 22, 23)
Fixed an error when fs.readdir gets null for options. #34764 (Also in 21, 22, 23)
Fixed an incorrect result returned when using secure as a cookies filter. #37246 (Also in 22)
Fixed an issue on macOS when trying to switch processes with Cmd+Tab after exiting Kiosk Mode. #36854 (Also in 21, 22, 23)
Fixed an issue where <datalist> elements were improperly positioned within the page. #36934 (Also in 23)
Fixed an issue where webViews could have an incorrect initial background color following reloads. #36920 (Also in 21, 22, 23)
Fixed an issue where some frameless windows with draggable regions were not resizable on Windows. #37016 (Also in 23)
Fixed an issue where the setPermissionRequestHandler callback would be invoked twice when using navigator.getUserMedia(...). #36787 (Also in 22, 23)
Fixed an issue with incorrect focus ring highlighting when using dialog.showMessageBox(). #36772 (Also in 21, 22, 23)
Fixed audio worklet scripts failing to run when nodeIntegrationInWorker: true. #37041 (Also in 22, 23)
Fixed binary stripping for branded release builds on Linux. #36641 (Also in 21, 22, 23)
Fixed missing headers in libcxx_headers bundle. #36863 
Fixed net.request response headers missing Content-Type. #36666 
Fixed tray icon not showing on desktop environments that have no support for app indicator. #36815 (Also in 22, 23)
Fixed warning about duplicate WebSwapCGLLayer symbols when Electron starts on macOS. #35961 (Also in 21, 22, 23)
Removed plugin helper checks on macOS gated behind enable_plugins buildflag. #36971 (Also in 22, 23)
Use the process cache to reduce the memory for asar file. #36600 (Also in 21, 22, 23)

Other Changes

<!-- Please add a one-line description for app developers to read in the release notes, or 'none' if no notes relevant to app developers. Examples and help on special cases: https://github.com/electron/clerk/blob/master/README.md#examples - ->none. #36649 (Also in 23)
Backported fix for v8:11880, chromium:1393256. #36651 
Fixed a memory leak in v8.serialize() when running Node.js within Electron. #37021 (Also in 23)
Removed unneeded --turbo-profiling-input argument from mksnapshot_args for Linux mksnapshot zips. #36531 (Also in 22, 23)
The deprecated incrementCapturerCount() / decrementCapturerCount() methods have been removed. #37075 (Also in 23)
Updated Chromium to 111.0.5544.3. #36820 
Updated Node.js to v18.14.0. #37129 
Updates Node.js types to v18. #36924 
Windows 7, Windows 8, and Windows 8.1 are not supported anymore as Chromium 110 dropped support. #36427 (Also in 23)

Documentation

Documentation changes: #36952, #37095
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@24.0.0-alpha.2.
Release Notes for v24.0.0-alpha.2
Features
Added label property to Display objects. #36855 (Also in 21, 22, 23)
Added a new devtools-open-url event to webContents to allow developers to open new windows with them. #36774 
Added several standard page size options to webContents.print(). #37265 (Also in 22, 23)
Allow a application-specific username to be passed to inAppPurchase.purchaseProduct(). #35902 
Exposed window.invalidateShadow() to clear residual visual artifacts on macOS. #32452 
Whole-program optimization is enabled by default in electron node headers config file. #36937 (Also in 21, 22, 23)
SystemPreferences::CanPromptTouchID (macOS) now supports Apple Watch. #36935 
Fixes
Basic accessibility support is now enabled when macOS Voice Control is activated to allow for full voice control of Electron applications. #37122 (Also in 21, 22, 23)
Changed HTML5 Notifications created with the requireInteraction option to not timeout on Linux and Windows. #36477 (Also in 21, 22, 23)
ESM loads of CJS modules that have null exports no longer throw. #37009 (Also in 23)
Enabled support for  WebAssembly.{compileStreaming|instantiateStreaming} in Node.js. #36420 
Fixed a BrowserWindow maxWidth or maxHeight of 0 causing strange resizing behavior. #36487 (Also in 21, 22, 23)
Fixed a crash that could occur when running eval in inline scripts in unsandboxed renderer processes. #36567 (Also in 22, 23)
Fixed a crash when BrowserViews are present and a user attempts to prevent beforeunload in the renderer process. #37268 (Also in 22, 23)
Fixed a potential crash in some types of Worklets. #37050 (Also in 23)
Fixed a printing crash caused by an uninitialized pref. #37052 (Also in 23)
Fixed an RTL issue that could happen in some locales when calling BrowserWindow.setTrafficLightPosition() on macOS. #36839 (Also in 21, 22, 23)
Fixed an error when fs.readdir gets null for options. #34764 (Also in 21, 22, 23)
Fixed an incorrect result returned when using secure as a cookies filter. #37246 (Also in 22)
Fixed an issue on macOS when trying to switch processes with Cmd+Tab after exiting Kiosk Mode. #36854 (Also in 21, 22, 23)
Fixed an issue where  elements were improperly positioned within the page. #36934 (Also in 23)
Fixed an issue where webViews could have an incorrect initial background color following reloads. #36920 (Also in 21, 22, 23)
Fixed an issue where some frameless windows with draggable regions were not resizable on Windows. #37016 (Also in 23)
Fixed an issue where the setPermissionRequestHandler callback would be invoked twice when using navigator.getUserMedia(...). #36787 (Also in 22, 23)
Fixed an issue with incorrect focus ring highlighting when using dialog.showMessageBox(). #36772 (Also in 21, 22, 23)
Fixed audio worklet scripts failing to run when nodeIntegrationInWorker: true. #37041 (Also in 22, 23)
Fixed binary stripping for branded release builds on Linux. #36641 (Also in 21, 22, 23)
Fixed missing headers in libcxx_headers bundle. #36863 
Fixed net.request response headers missing Content-Type. #36666 
Fixed tray icon not showing on desktop environments that have no support for app indicator. #36815 (Also in 22, 23)
Fixed warning about duplicate WebSwapCGLLayer symbols when Electron starts on macOS. #35961 (Also in 21, 22, 23)
Removed plugin helper checks on macOS gated behind enable_plugins buildflag. #36971 (Also in 22, 23)
Use the process cache to reduce the memory for asar file. #36600 (Also in 21, 22, 23)
Other Changes
<!-- Please add a one-line description for app developers to read in the release notes, or 'none' if no notes relevant to app developers. Examples and help on special cases: link - ->none. #36649 (Also in 23)
Backported fix for v8:11880, chromium:1393256. #36651 
Fixed a memory leak in v8.serialize() when running Node.js within Electron. #37021 (Also in 23)
Removed unneeded --turbo-profiling-input argument from mksnapshot_args for Linux mksnapshot zips. #36531 (Also in 22, 23)
The deprecated incrementCapturerCount() / decrementCapturerCount() methods have been removed. #37075 (Also in 23)
Updated Chromium to 111.0.5544.3. #36820 
Updated Node.js to v18.14.0. #37129 
Updates Node.js types to v18. #36924 
Windows 7, Windows 8, and Windows 8.1 are not supported anymore as Chromium 110 dropped support. #36427 (Also in 23)
Documentation
Documentation changes: #36952, #37095"
85,"Release Notes for v23.1.0
Features

Added several standard page size options to webContents.print(). #37264 (Also in 22, 24)

Fixes

Changed HTML5 Notifications created with the requireInteraction option to not timeout on Linux and Windows. #36502 (Also in 21, 22)
Fixed a crash when BrowserViews are present and a user attempts to prevent beforeunload in the renderer process. #37267 (Also in 22, 24)
Fixed a potential crash in some types of Worklets. #37081 

Other Changes

Updated Chromium to 110.0.5481.100. #37183 

Documentation

Documentation changes: #37108
","Release Notes for v23.1.0
Features
Added several standard page size options to webContents.print(). #37264 (Also in 22, 24)
Fixes
Changed HTML5 Notifications created with the requireInteraction option to not timeout on Linux and Windows. #36502 (Also in 21, 22)
Fixed a crash when BrowserViews are present and a user attempts to prevent beforeunload in the renderer process. #37267 (Also in 22, 24)
Fixed a potential crash in some types of Worklets. #37081 
Other Changes
Updated Chromium to 110.0.5481.100. #37183 
Documentation
Documentation changes: #37108"
86,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@24.0.0-alpha.1.
# Release Notes for v24.0.0-alpha.1
Features

Added label property to Display objects. #36855 (Also in 21, 22, 23)
Added a new devtools-open-url event to webContents to allow developers to open new windows with them. #36774 
Allow a application-specific username to be passed to inAppPurchase.purchaseProduct(). #35902 
Exposed window.invalidateShadow() to clear residual visual artifacts on macOS. #32452 
Whole-program optimization is enabled by default in electron node headers config file. #36937 (Also in 21, 22, 23)
SystemPreferences::CanPromptTouchID (macOS) now supports Apple Watch. #36935 

Fixes

Basic accessibility support is now enabled when macOS Voice Control is activated to allow for full voice control of Electron applications. #37122 (Also in 21, 22, 23)
Changed HTML5 Notifications created with the requireInteraction option to not timeout on Linux and Windows. #36477 (Also in 21, 22, 23)
ESM loads of CJS modules that have null exports no longer throw. #37009 (Also in 23)
Enabled support for  WebAssembly.{compileStreaming|instantiateStreaming} in Node.js. #36420 
Fixed a BrowserWindow maxWidth or maxHeight of 0 causing strange resizing behavior. #36487 (Also in 21, 22, 23)
Fixed a crash that could occur when running eval in inline scripts in unsandboxed renderer processes. #36567 (Also in 22, 23)
Fixed a potential crash in some types of Worklets. #37050 
Fixed a printing crash caused by an uninitialized pref. #37052 (Also in 23)
Fixed an RTL issue that could happen in some locales when calling BrowserWindow.setTrafficLightPosition() on macOS. #36839 (Also in 21, 22, 23)
Fixed an error when fs.readdir gets null for options. #34764 (Also in 21, 22, 23)
Fixed an issue on macOS when trying to switch processes with Cmd+Tab after exiting Kiosk Mode. #36854 (Also in 21, 22, 23)
Fixed an issue where <datalist> elements were improperly positioned within the page. #36934 (Also in 23)
Fixed an issue where webViews could have an incorrect initial background color following reloads. #36920 (Also in 21, 22, 23)
Fixed an issue where some frameless windows with draggable regions were not resizable on Windows. #37016 (Also in 23)
Fixed an issue where the setPermissionRequestHandler callback would be invoked twice when using navigator.getUserMedia(...). #36787 (Also in 22, 23)
Fixed an issue with incorrect focus ring highlighting when using dialog.showMessageBox(). #36772 (Also in 21, 22, 23)
Fixed audio worklet scripts failing to run when nodeIntegrationInWorker: true. #37041 (Also in 22, 23)
Fixed binary stripping for branded release builds on Linux. #36641 (Also in 21, 22, 23)
Fixed missing headers in libcxx_headers bundle. #36863 
Fixed net.request response headers missing Content-Type. #36666 
Fixed tray icon not showing on desktop environments that have no support for app indicator. #36815 (Also in 22, 23)
Fixed warning about duplicate WebSwapCGLLayer symbols when Electron starts on macOS. #35961 (Also in 21, 22, 23)
Removed plugin helper checks on macOS gated behind enable_plugins buildflag. #36971 (Also in 22, 23)
Use the process cache to reduce the memory for asar file. #36600 (Also in 21, 22, 23)

Other Changes

<!-- Please add a one-line description for app developers to read in the release notes, or 'none' if no notes relevant to app developers. Examples and help on special cases: https://github.com/electron/clerk/blob/master/README.md#examples - ->none. #36649 (Also in 23)
Backported fix for v8:11880, chromium:1393256. #36651 
Fixed a memory leak in v8.serialize() when running Node.js within Electron. #37021 (Also in 23)
Removed unneeded --turbo-profiling-input argument from mksnapshot_args for Linux mksnapshot zips. #36531 (Also in 22, 23)
The deprecated incrementCapturerCount() / decrementCapturerCount() methods have been removed. #37075 (Also in 23)
Updated Chromium to 111.0.5544.3. #36820 
Updated Node.js to v18.14.0. #37129 
Updates Node.js types to v18. #36924 
Windows 7, Windows 8, and Windows 8.1 are not supported anymore as Chromium 110 dropped support. #36427 (Also in 23)

Documentation

Documentation changes: #36952, #37095
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@24.0.0-alpha.1.
Release Notes for v24.0.0-alpha.1
Features
Added label property to Display objects. #36855 (Also in 21, 22, 23)
Added a new devtools-open-url event to webContents to allow developers to open new windows with them. #36774 
Allow a application-specific username to be passed to inAppPurchase.purchaseProduct(). #35902 
Exposed window.invalidateShadow() to clear residual visual artifacts on macOS. #32452 
Whole-program optimization is enabled by default in electron node headers config file. #36937 (Also in 21, 22, 23)
SystemPreferences::CanPromptTouchID (macOS) now supports Apple Watch. #36935 
Fixes
Basic accessibility support is now enabled when macOS Voice Control is activated to allow for full voice control of Electron applications. #37122 (Also in 21, 22, 23)
Changed HTML5 Notifications created with the requireInteraction option to not timeout on Linux and Windows. #36477 (Also in 21, 22, 23)
ESM loads of CJS modules that have null exports no longer throw. #37009 (Also in 23)
Enabled support for  WebAssembly.{compileStreaming|instantiateStreaming} in Node.js. #36420 
Fixed a BrowserWindow maxWidth or maxHeight of 0 causing strange resizing behavior. #36487 (Also in 21, 22, 23)
Fixed a crash that could occur when running eval in inline scripts in unsandboxed renderer processes. #36567 (Also in 22, 23)
Fixed a potential crash in some types of Worklets. #37050 
Fixed a printing crash caused by an uninitialized pref. #37052 (Also in 23)
Fixed an RTL issue that could happen in some locales when calling BrowserWindow.setTrafficLightPosition() on macOS. #36839 (Also in 21, 22, 23)
Fixed an error when fs.readdir gets null for options. #34764 (Also in 21, 22, 23)
Fixed an issue on macOS when trying to switch processes with Cmd+Tab after exiting Kiosk Mode. #36854 (Also in 21, 22, 23)
Fixed an issue where  elements were improperly positioned within the page. #36934 (Also in 23)
Fixed an issue where webViews could have an incorrect initial background color following reloads. #36920 (Also in 21, 22, 23)
Fixed an issue where some frameless windows with draggable regions were not resizable on Windows. #37016 (Also in 23)
Fixed an issue where the setPermissionRequestHandler callback would be invoked twice when using navigator.getUserMedia(...). #36787 (Also in 22, 23)
Fixed an issue with incorrect focus ring highlighting when using dialog.showMessageBox(). #36772 (Also in 21, 22, 23)
Fixed audio worklet scripts failing to run when nodeIntegrationInWorker: true. #37041 (Also in 22, 23)
Fixed binary stripping for branded release builds on Linux. #36641 (Also in 21, 22, 23)
Fixed missing headers in libcxx_headers bundle. #36863 
Fixed net.request response headers missing Content-Type. #36666 
Fixed tray icon not showing on desktop environments that have no support for app indicator. #36815 (Also in 22, 23)
Fixed warning about duplicate WebSwapCGLLayer symbols when Electron starts on macOS. #35961 (Also in 21, 22, 23)
Removed plugin helper checks on macOS gated behind enable_plugins buildflag. #36971 (Also in 22, 23)
Use the process cache to reduce the memory for asar file. #36600 (Also in 21, 22, 23)
Other Changes
<!-- Please add a one-line description for app developers to read in the release notes, or 'none' if no notes relevant to app developers. Examples and help on special cases: link - ->none. #36649 (Also in 23)
Backported fix for v8:11880, chromium:1393256. #36651 
Fixed a memory leak in v8.serialize() when running Node.js within Electron. #37021 (Also in 23)
Removed unneeded --turbo-profiling-input argument from mksnapshot_args for Linux mksnapshot zips. #36531 (Also in 22, 23)
The deprecated incrementCapturerCount() / decrementCapturerCount() methods have been removed. #37075 (Also in 23)
Updated Chromium to 111.0.5544.3. #36820 
Updated Node.js to v18.14.0. #37129 
Updates Node.js types to v18. #36924 
Windows 7, Windows 8, and Windows 8.1 are not supported anymore as Chromium 110 dropped support. #36427 (Also in 23)
Documentation
Documentation changes: #36952, #37095"
87,"Release Notes for v22.2.1
Features

Whole-program optimization is enabled by default in electron node headers config file. #37047 (Also in 21, 23)

Fixes

Basic accessibility support is now enabled when macOS Voice Control is activated to allow for full voice control of Electron applications. #37146 (Also in 21, 23)
Fixed audio worklet scripts failing to run when nodeIntegrationInWorker: true. #37102 (Also in 23)

Documentation

Documentation changes: #37107
","Release Notes for v22.2.1
Features
Whole-program optimization is enabled by default in electron node headers config file. #37047 (Also in 21, 23)
Fixes
Basic accessibility support is now enabled when macOS Voice Control is activated to allow for full voice control of Electron applications. #37146 (Also in 21, 23)
Fixed audio worklet scripts failing to run when nodeIntegrationInWorker: true. #37102 (Also in 23)
Documentation
Documentation changes: #37107"
88,"Release Notes for v20.3.12
End of Support for 20.x.y
Electron 20.x.y has reached end-of-support as per the project's support policy. Developers and applications are encouraged to upgrade to a newer version of Electron.
Other Changes

Security: backported fix for 1376354. #37172 
Security: backported fix for 1406115. #37171 
Security: backported fix for CVE-2023-0472. #37058 
","Release Notes for v20.3.12
End of Support for 20.x.y
Electron 20.x.y has reached end-of-support as per the project's support policy. Developers and applications are encouraged to upgrade to a newer version of Electron.
Other Changes
Security: backported fix for 1376354. #37172 
Security: backported fix for 1406115. #37171 
Security: backported fix for CVE-2023-0472. #37058 "
89,"Release Notes for v23.0.0
Stack Upgrades

Chromium 110.0.5481.77.
New in 110
New in 109


Node v18.12.1.
v16.17.1 release notes


V8 v11.0

Breaking Changes

Windows 7, Windows 8, and Windows 8.1 are not supported anymore, as Chromium 110 dropped support. #36513

Features

Added label property to Display objects. #36933 (Also in 21, 22)
Added an app.getPreferredSystemLanguages() API to return the user's system languages. #36035 (Also in 21, 22)
Added new UtilityProcess API to launch chromium child process with node integration. #34980 (Also in 22)
Added support for WebUSB. #36289 
Added support for serialPort.forget() as well as a new event serial-port-revoked emitted when a given origin is revoked. #35310 (Also in 22)
Adds new setHiddenInMissionControl API to allow developers to opt out of mission control on macOS. #36092 (Also in 22)

Fixes

Basic accessibility support is now enabled when macOS Voice Control is activated to allow for full voice control of Electron applications. #37145 
Fixed a printing crash caused by an uninitialized pref. #37149 
Default margin has been added in the code. #36060 (Also in 21, 22)
Doing require('electron/*') where * is not one of main, common or renderer no longer resolves with the built-in electron module. #35915 
Enable crashpad for ELECTRON_RUN_AS_NODE processes. #36460 (Also in 22)
Fixed click event and tooltip of Tray not working on Linux. #36333 (Also in 22)
Fixed a crash that could occur when running eval in inline scripts in unsandboxed renderer processes. #36667 (Also in 22)
Fixed a drag-and-drop issue on macOS where items would be incorrectly moved instead of copied in some contexts. #35963 (Also in 20, 21, 22)
Fixed a potential issue when calling webContents.printToPDF(). #36046 (Also in 21, 22)
Fixed a potential memory leak. #35932 (Also in 21, 22)
Fixed an RTL issue that could happen in some locales when calling BrowserWindow.setTrafficLightPosition() on macOS. #36850 (Also in 21, 22)
Fixed an error when fs.readdir gets null for options. #36848 (Also in 21, 22)
Fixed an issue on macOS when trying to switch processes with Cmd+Tab after exiting Kiosk Mode. #36917 (Also in 21, 22)
Fixed an issue where <datalist> elements were improperly positioned within the page. #36959 
Fixed an issue where webViews could have an incorrect initial background color following reloads. #36938 (Also in 21, 22)
Fixed an issue where calling app.dock.setIcon(/path/t/icon) would crash when called before the ready event on app. #36279 (Also in 20, 21, 22)
Fixed an issue where frameless non-resizable windows showed a Windows 7 frame during startup. #35365 (Also in 22)
Fixed an issue where some options were incorrectly ignored when using webContents.printToPDF(). #35975 (Also in 21, 22)
Fixed an issue where the setPermissionRequestHandler callback would be invoked twice when using navigator.getUserMedia(...). #36874 (Also in 22)
Fixed an issue with incorrect focus ring highlighting when using dialog.showMessageBox(). #36803 (Also in 21, 22)
Fixed binary stripping for branded release builds on Linux. #36656 (Also in 21, 22)
Fixed missing headers in libcxx_headers bundle. #36864 
Fixed on-screen-keyboard not hiding on input rendered in webview is blurred. #35921 (Also in 20, 21, 22)
Fixed race condition during update on macOS that could result in TCC and Keychain errors. #36130 (Also in 22)
Fixed spurious promise rejection in webContents.loadURL when navigating to a hash. #36129 (Also in 20, 21, 22)
Fixed v8 flags and desktop name in package.json does not hornored when running local app using electron cli. #35997 (Also in 20, 21, 22)
Fixed warning about duplicate WebSwapCGLLayer symbols when Electron starts on macOS. #36799 (Also in 21, 22)
Removed plugin helper checks on macOS gated behind enable_plugins buildflag. #36977 (Also in 22)
Removed support for nodeIntegrationInWorker in Service Workers and Shared Workers owing to sandboxing policies. #35919 (Also in 21, 22)
Removed unneeded --turbo-profiling-input argument from mksnapshot_args. #36378 (Also in 22)
The keychain account name for MAS and Darwin builds of the same Electron application now differ. #35864 
Use the process cache to reduce the memory for asar file. #36665 (Also in 21, 22)
You can now import the built-in electron module via ESModule loaders, i.e. import('electron') and import 'electron' now work natively. #35930 (Also in 20, 21, 22)

Other Changes

The deprecated incrementCapturerCount() / decrementCapturerCount() methods have been removed. #37148 
Updated Chromium to 110.0.5481.77. #37120 
Added node-api: handle no support for external buffers. #36623 
Enabled out-of-process iframe printing to PDF with webContents.printToPDF().. #36051 (Also in 22)
Removed unneeded --turbo-profiling-input argument from mksnapshot_args for Linux mksnapshot zips. #36534 (Also in 22)
Updated Chromium to 110.0.5481.38. #36955 
Updated Node.js to v18.12.1. #36356 
Upgraded Node.js to v18.10.0. #35999

Documentation

Documentation changes: #35894

## Notices
Sunsetting Windows 7/8/8.1
Electron has ended support for Windows 7/8/8.1 in version 23.x.y following Chromium's plan to end support. Older versions of Electron will continue to work, but no further updates will be made for these operating systems.
End of Support for 20.x.y
Electron 20.x.y has reached end-of-support as per the project's support policy. Developers and applications are encouraged to upgrade to a newer version of Electron.","Release Notes for v23.0.0
Stack Upgrades
Chromium 110.0.5481.77.
New in 110
New in 109
Node v18.12.1.
v16.17.1 release notes
V8 v11.0
Breaking Changes
Windows 7, Windows 8, and Windows 8.1 are not supported anymore, as Chromium 110 dropped support. #36513
Features
Added label property to Display objects. #36933 (Also in 21, 22)
Added an app.getPreferredSystemLanguages() API to return the user's system languages. #36035 (Also in 21, 22)
Added new UtilityProcess API to launch chromium child process with node integration. #34980 (Also in 22)
Added support for WebUSB. #36289 
Added support for serialPort.forget() as well as a new event serial-port-revoked emitted when a given origin is revoked. #35310 (Also in 22)
Adds new setHiddenInMissionControl API to allow developers to opt out of mission control on macOS. #36092 (Also in 22)
Fixes
Basic accessibility support is now enabled when macOS Voice Control is activated to allow for full voice control of Electron applications. #37145 
Fixed a printing crash caused by an uninitialized pref. #37149 
Default margin has been added in the code. #36060 (Also in 21, 22)
Doing require('electron/*') where * is not one of main, common or renderer no longer resolves with the built-in electron module. #35915 
Enable crashpad for ELECTRON_RUN_AS_NODE processes. #36460 (Also in 22)
Fixed click event and tooltip of Tray not working on Linux. #36333 (Also in 22)
Fixed a crash that could occur when running eval in inline scripts in unsandboxed renderer processes. #36667 (Also in 22)
Fixed a drag-and-drop issue on macOS where items would be incorrectly moved instead of copied in some contexts. #35963 (Also in 20, 21, 22)
Fixed a potential issue when calling webContents.printToPDF(). #36046 (Also in 21, 22)
Fixed a potential memory leak. #35932 (Also in 21, 22)
Fixed an RTL issue that could happen in some locales when calling BrowserWindow.setTrafficLightPosition() on macOS. #36850 (Also in 21, 22)
Fixed an error when fs.readdir gets null for options. #36848 (Also in 21, 22)
Fixed an issue on macOS when trying to switch processes with Cmd+Tab after exiting Kiosk Mode. #36917 (Also in 21, 22)
Fixed an issue where  elements were improperly positioned within the page. #36959 
Fixed an issue where webViews could have an incorrect initial background color following reloads. #36938 (Also in 21, 22)
Fixed an issue where calling app.dock.setIcon(/path/t/icon) would crash when called before the ready event on app. #36279 (Also in 20, 21, 22)
Fixed an issue where frameless non-resizable windows showed a Windows 7 frame during startup. #35365 (Also in 22)
Fixed an issue where some options were incorrectly ignored when using webContents.printToPDF(). #35975 (Also in 21, 22)
Fixed an issue where the setPermissionRequestHandler callback would be invoked twice when using navigator.getUserMedia(...). #36874 (Also in 22)
Fixed an issue with incorrect focus ring highlighting when using dialog.showMessageBox(). #36803 (Also in 21, 22)
Fixed binary stripping for branded release builds on Linux. #36656 (Also in 21, 22)
Fixed missing headers in libcxx_headers bundle. #36864 
Fixed on-screen-keyboard not hiding on input rendered in webview is blurred. #35921 (Also in 20, 21, 22)
Fixed race condition during update on macOS that could result in TCC and Keychain errors. #36130 (Also in 22)
Fixed spurious promise rejection in webContents.loadURL when navigating to a hash. #36129 (Also in 20, 21, 22)
Fixed v8 flags and desktop name in package.json does not hornored when running local app using electron cli. #35997 (Also in 20, 21, 22)
Fixed warning about duplicate WebSwapCGLLayer symbols when Electron starts on macOS. #36799 (Also in 21, 22)
Removed plugin helper checks on macOS gated behind enable_plugins buildflag. #36977 (Also in 22)
Removed support for nodeIntegrationInWorker in Service Workers and Shared Workers owing to sandboxing policies. #35919 (Also in 21, 22)
Removed unneeded --turbo-profiling-input argument from mksnapshot_args. #36378 (Also in 22)
The keychain account name for MAS and Darwin builds of the same Electron application now differ. #35864 
Use the process cache to reduce the memory for asar file. #36665 (Also in 21, 22)
You can now import the built-in electron module via ESModule loaders, i.e. import('electron') and import 'electron' now work natively. #35930 (Also in 20, 21, 22)
Other Changes
The deprecated incrementCapturerCount() / decrementCapturerCount() methods have been removed. #37148 
Updated Chromium to 110.0.5481.77. #37120 
Added node-api: handle no support for external buffers. #36623 
Enabled out-of-process iframe printing to PDF with webContents.printToPDF().. #36051 (Also in 22)
Removed unneeded --turbo-profiling-input argument from mksnapshot_args for Linux mksnapshot zips. #36534 (Also in 22)
Updated Chromium to 110.0.5481.38. #36955 
Updated Node.js to v18.12.1. #36356 
Upgraded Node.js to v18.10.0. #35999
Documentation
Documentation changes: #35894
Notices
Sunsetting Windows 7/8/8.1
Electron has ended support for Windows 7/8/8.1 in version 23.x.y following Chromium's plan to end support. Older versions of Electron will continue to work, but no further updates will be made for these operating systems.
End of Support for 20.x.y
Electron 20.x.y has reached end-of-support as per the project's support policy. Developers and applications are encouraged to upgrade to a newer version of Electron."
90,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@23.0.0-beta.8.
# Release Notes for v23.0.0-beta.8
Features

Whole-program optimization is enabled by default in electron node headers config file. #37046 (Also in 21, 22)

Fixes

Fixed audio worklet scripts failing to run when nodeIntegrationInWorker: true. #37104 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@23.0.0-beta.8.
Release Notes for v23.0.0-beta.8
Features
Whole-program optimization is enabled by default in electron node headers config file. #37046 (Also in 21, 22)
Fixes
Fixed audio worklet scripts failing to run when nodeIntegrationInWorker: true. #37104 "
91,"Release Notes for v22.0.0
Stack Upgrades

Chromium 108.0.5359.62.
New in 108
New in 107


Node v16.17.1.
v16.17.1 release notes
v16.17.0 release notes


V8 v10.8

Breaking Changes

Added WebContents input-event event.
Deprecated BrowserWindow scroll-touch-* events. #35531
The deprecated new-window event has been removed. #34526 

Features

Added LoadBrowserProcessSpecificV8Snapshot as a new fuse that will let the main/browser process load its v8 snapshot from a file at browser_v8_context_snapshot.bin. Any other process will use the same path as is used today. #35266 (Also in 20, 21)
Added WebContents.opener to access window opener.
Added webContents.fromFrame(frame) to get the WebContents corresponding to a WebFrameMain instance. #35140 (Also in 21)
Added app.getSystemLocale() method. #35697 (Also in 21)
Added contextBridge.exposeInIsolatedWorld(worldId, key, api) to expose an API to an isolatedWorld within a renderer from a preload script. #34974 
Added webContents.close() method. #35509 
Added webFrameMain.origin. #35438 (Also in 19, 20, 21)
Added an app.getPreferredSystemLanguages() API to return the user's system languages. #36291 (Also in 21)
Added new UtilityProcess API to launch chromium child process with node integration. #36089 
Added new WebContents event content-bounds-updated. #35533 
Added new WebContents.ipc and WebFrameMain.ipc APIs. #34959 (Also in 21)
Added support for Web Bluetooth pin pairing on Linux and Windows. #35416 (Also in 21)
Added support for navigator.mediaDevices.getDisplayMedia via a new session handler, ses.setDisplayMediaRequestHandler. #30702 
Added support for serialPort.forget() as well as a new event serial-port-revoked emitted when a given origin is revoked. #36062 

Fixes

Added support for Webauthn discoverable keys (aka resident keys), allowing users to authenticate without first having to select or type a username. #35374
Enable crashpad for ELECTRON_RUN_AS_NODE processes on linux. #36483
Fixed click event and tooltip of Tray not working on Linux. #36472 
Fixed an issue where frameless non-resizable windows showed a Windows 7 frame during startup. #36024
Fixed an issue with incomplete EventEmitter object in sandboxed renderer preload script. #35522
Fixed race condition during update on macOS that could result in TCC and Keychain errors. #36362
Removed unneeded --turbo-profiling-input argument from mksnapshot_args. #36463 

Also in earlier versions...

Added a background to the WCO container to avoid rendering glitches. #35569 (Also in 19, 20, 21)
Added support for Windows drop-down dialog extensions. #35618 (Also in 18, 19, 20, 21)
Default margin has been added in the code. #36073 (Also in 21)
Enable WCO maximize button when window enters tablet mode and is not already maximized. #35617 (Also in 19, 20, 21)
Fixed uv_os_gethostname failing on Windows 7. #35702 (Also in 19, 20, 21)
Fixed a bug where calling atob in the renderer process could fail under some circumstances. #35415 (Also in 19, 20, 21)
Fixed a crash that occured when loading non-standard schemes from iframes. #35485 (Also in 21)
Fixed a crash when switching origins with emulation settings set. #35466 (Also in 21)
Fixed a drag-and-drop issue on macOS where items would be incorrectly moved instead of copied in some contexts. #35976 (Also in 20, 21)
Fixed a potential crash on WebWorker destruction. #35422 (Also in 19, 20, 21)
Fixed a potential issue when calling webContents.printToPDF(). #36065 (Also in 21)
Fixed a potential memory leak. #35964 (Also in 21)
Fixed an edge case in app.isInApplicationsFolder() which would return false incorrectly in some cases. #35636 (Also in 19, 20, 21)
Fixed an issue where DevTools could not be docked with Windows Control Overlay enabled. #35754 (Also in 19, 20, 21)
Fixed an issue where WCO could occlude DevTools opened in any non-detached mode. #35209 (Also in 18, 19, 20, 21)
Fixed an issue where screen.getCursorScreenPoint() crashed on Wayland when it was called before a BrowserWindow had been created. #35503 (Also in 21)
Fixed an issue where serialPort.open() failed with NetworkError: Failed to open serial port.. #35306 (Also in 21)
Fixed an issue where app.relaunch loses args when execPath is specified. #35108 (Also in 19, 20, 21)
Fixed an issue where calling app.dock.setIcon(/path/t/icon) would crash when called before the ready event on app. #36293 (Also in 20, 21) 
Fixed an issue where frameless resizable windows showed Window 7 style frames while opening. #35189 (Also in 18, 19, 20, 21)
Fixed an issue where frameless windows with roundedCorners: false couldn't enter fullscreen without crashing. #35421 (Also in 19, 20, 21)
Fixed an issue where part of the BrowserView could be cut off when calling setBounds on some windows. #34713 (Also in 19, 20, 21)
Fixed an issue where some options were incorrectly ignored when using webContents.printToPDF(). #35993 (Also in 21) 
Fixed crash in renderer when resuming system from sleep. #35322 (Also in 18, 19, 20, 21)
Fixed enable promise support with webFrameMain.executeJavaScript. #35292 (Also in 20, 21)
Fixed issue with history.back() in sandboxed iframes affecting parent browsing context. #35420 (Also in 19, 20, 21)
Fixed on-screen-keyboard not hiding on input rendered in webview is blurred. #35983 (Also in 20, 21) 
Fixed session.getBlobData never resolves with blob sizes > 65536. #35277 (Also in 19, 20, 21)
Fixed spurious promise rejection in webContents.loadURL when navigating to a hash. #36151 (Also in 20, 21)
Fixed undefined details.requestingUrl from session.setPermissionCheckHandler. #35281 (Also in 20, 21)
Fixed v8 flags and desktop name in package.json does not hornored when running local app using electron cli. #36049 (Also in 20, 21)
Fixed: If a custom Electron build contains an electron.d.ts file, it is now being used. #33979 (Also in 20, 21)
Picture-In-Picture mode no longer becomes a red rectangle on hover. #35034 (Also in 19, 20, 21)
Provided display_id for desktopCapturer on Linux. #33861 (Also in 19, 20, 21)
Removed support for nodeIntegrationInWorker in Service Workers and Shared Workers owing to sandboxing policies. #36010 (Also in 21)
Usage of safeStorage now consistently uses the correct service name on macOS regardless of timing with browser window construction. #34683 (Also in 19, 20)
You can now import the built-in electron module via ESModule loaders, i.e. import('electron') and import 'electron' now work natively. #35957 (Also in 20, 21)
Fixed a typo in the section on debugging with VSCode. #35256 (Also in 19, 20, 21)

Other Changes

Backported fix for chromium:1352405. #36458 
Bumps the minimum required version of Node.js needed to install Electron to 12.20.55. #35301 
Enabled out-of-process iframe printing to PDF with webContents.printToPDF().. #36095 
Fixed win.getBrowserViews() not being updated when a BrowserView was moved to a different window. #35511 
Fixed an issue where some spellcheck functionality would incorrectly throw errors on macOS. #35514 (Also in 21)
Modified the WCO maximized button style to match Windows 11 more closely. #35370 (Also in 20, 21)
Updated common.gypi for native modules to support C++17 features in V8. #36369 (Also in 20, 21)

Documentation

Documentation changes: 
#35283
#35324 
#35413
#35525
#35563
#35908



Notices
Sunsetting Windows 7/8/8.1
Electron will be ending support for Windows 7/8/8.1 after version 22.x.y following Chromium's plan to end support. Older versions of Electron will continue to work, but no further updates will be made for these operating systems.
End of Support for 19.x.y
Electron 19.x.y has reached end-of-support as per the project's support policy. Developers and applications are encouraged to upgrade to a newer version of Electron.","Release Notes for v22.0.0
Stack Upgrades
Chromium 108.0.5359.62.
New in 108
New in 107
Node v16.17.1.
v16.17.1 release notes
v16.17.0 release notes
V8 v10.8
Breaking Changes
Added WebContents input-event event.
Deprecated BrowserWindow scroll-touch-* events. #35531
The deprecated new-window event has been removed. #34526 
Features
Added LoadBrowserProcessSpecificV8Snapshot as a new fuse that will let the main/browser process load its v8 snapshot from a file at browser_v8_context_snapshot.bin. Any other process will use the same path as is used today. #35266 (Also in 20, 21)
Added WebContents.opener to access window opener.
Added webContents.fromFrame(frame) to get the WebContents corresponding to a WebFrameMain instance. #35140 (Also in 21)
Added app.getSystemLocale() method. #35697 (Also in 21)
Added contextBridge.exposeInIsolatedWorld(worldId, key, api) to expose an API to an isolatedWorld within a renderer from a preload script. #34974 
Added webContents.close() method. #35509 
Added webFrameMain.origin. #35438 (Also in 19, 20, 21)
Added an app.getPreferredSystemLanguages() API to return the user's system languages. #36291 (Also in 21)
Added new UtilityProcess API to launch chromium child process with node integration. #36089 
Added new WebContents event content-bounds-updated. #35533 
Added new WebContents.ipc and WebFrameMain.ipc APIs. #34959 (Also in 21)
Added support for Web Bluetooth pin pairing on Linux and Windows. #35416 (Also in 21)
Added support for navigator.mediaDevices.getDisplayMedia via a new session handler, ses.setDisplayMediaRequestHandler. #30702 
Added support for serialPort.forget() as well as a new event serial-port-revoked emitted when a given origin is revoked. #36062 
Fixes
Added support for Webauthn discoverable keys (aka resident keys), allowing users to authenticate without first having to select or type a username. #35374
Enable crashpad for ELECTRON_RUN_AS_NODE processes on linux. #36483
Fixed click event and tooltip of Tray not working on Linux. #36472 
Fixed an issue where frameless non-resizable windows showed a Windows 7 frame during startup. #36024
Fixed an issue with incomplete EventEmitter object in sandboxed renderer preload script. #35522
Fixed race condition during update on macOS that could result in TCC and Keychain errors. #36362
Removed unneeded --turbo-profiling-input argument from mksnapshot_args. #36463 
Also in earlier versions...
Added a background to the WCO container to avoid rendering glitches. #35569 (Also in 19, 20, 21)
Added support for Windows drop-down dialog extensions. #35618 (Also in 18, 19, 20, 21)
Default margin has been added in the code. #36073 (Also in 21)
Enable WCO maximize button when window enters tablet mode and is not already maximized. #35617 (Also in 19, 20, 21)
Fixed uv_os_gethostname failing on Windows 7. #35702 (Also in 19, 20, 21)
Fixed a bug where calling atob in the renderer process could fail under some circumstances. #35415 (Also in 19, 20, 21)
Fixed a crash that occured when loading non-standard schemes from iframes. #35485 (Also in 21)
Fixed a crash when switching origins with emulation settings set. #35466 (Also in 21)
Fixed a drag-and-drop issue on macOS where items would be incorrectly moved instead of copied in some contexts. #35976 (Also in 20, 21)
Fixed a potential crash on WebWorker destruction. #35422 (Also in 19, 20, 21)
Fixed a potential issue when calling webContents.printToPDF(). #36065 (Also in 21)
Fixed a potential memory leak. #35964 (Also in 21)
Fixed an edge case in app.isInApplicationsFolder() which would return false incorrectly in some cases. #35636 (Also in 19, 20, 21)
Fixed an issue where DevTools could not be docked with Windows Control Overlay enabled. #35754 (Also in 19, 20, 21)
Fixed an issue where WCO could occlude DevTools opened in any non-detached mode. #35209 (Also in 18, 19, 20, 21)
Fixed an issue where screen.getCursorScreenPoint() crashed on Wayland when it was called before a BrowserWindow had been created. #35503 (Also in 21)
Fixed an issue where serialPort.open() failed with NetworkError: Failed to open serial port.. #35306 (Also in 21)
Fixed an issue where app.relaunch loses args when execPath is specified. #35108 (Also in 19, 20, 21)
Fixed an issue where calling app.dock.setIcon(/path/t/icon) would crash when called before the ready event on app. #36293 (Also in 20, 21) 
Fixed an issue where frameless resizable windows showed Window 7 style frames while opening. #35189 (Also in 18, 19, 20, 21)
Fixed an issue where frameless windows with roundedCorners: false couldn't enter fullscreen without crashing. #35421 (Also in 19, 20, 21)
Fixed an issue where part of the BrowserView could be cut off when calling setBounds on some windows. #34713 (Also in 19, 20, 21)
Fixed an issue where some options were incorrectly ignored when using webContents.printToPDF(). #35993 (Also in 21) 
Fixed crash in renderer when resuming system from sleep. #35322 (Also in 18, 19, 20, 21)
Fixed enable promise support with webFrameMain.executeJavaScript. #35292 (Also in 20, 21)
Fixed issue with history.back() in sandboxed iframes affecting parent browsing context. #35420 (Also in 19, 20, 21)
Fixed on-screen-keyboard not hiding on input rendered in webview is blurred. #35983 (Also in 20, 21) 
Fixed session.getBlobData never resolves with blob sizes > 65536. #35277 (Also in 19, 20, 21)
Fixed spurious promise rejection in webContents.loadURL when navigating to a hash. #36151 (Also in 20, 21)
Fixed undefined details.requestingUrl from session.setPermissionCheckHandler. #35281 (Also in 20, 21)
Fixed v8 flags and desktop name in package.json does not hornored when running local app using electron cli. #36049 (Also in 20, 21)
Fixed: If a custom Electron build contains an electron.d.ts file, it is now being used. #33979 (Also in 20, 21)
Picture-In-Picture mode no longer becomes a red rectangle on hover. #35034 (Also in 19, 20, 21)
Provided display_id for desktopCapturer on Linux. #33861 (Also in 19, 20, 21)
Removed support for nodeIntegrationInWorker in Service Workers and Shared Workers owing to sandboxing policies. #36010 (Also in 21)
Usage of safeStorage now consistently uses the correct service name on macOS regardless of timing with browser window construction. #34683 (Also in 19, 20)
You can now import the built-in electron module via ESModule loaders, i.e. import('electron') and import 'electron' now work natively. #35957 (Also in 20, 21)
Fixed a typo in the section on debugging with VSCode. #35256 (Also in 19, 20, 21)
Other Changes
Backported fix for chromium:1352405. #36458 
Bumps the minimum required version of Node.js needed to install Electron to 12.20.55. #35301 
Enabled out-of-process iframe printing to PDF with webContents.printToPDF().. #36095 
Fixed win.getBrowserViews() not being updated when a BrowserView was moved to a different window. #35511 
Fixed an issue where some spellcheck functionality would incorrectly throw errors on macOS. #35514 (Also in 21)
Modified the WCO maximized button style to match Windows 11 more closely. #35370 (Also in 20, 21)
Updated common.gypi for native modules to support C++17 features in V8. #36369 (Also in 20, 21)
Documentation
Documentation changes: 
35283
35324
35413
35525
35563
35908
Notices
Sunsetting Windows 7/8/8.1
Electron will be ending support for Windows 7/8/8.1 after version 22.x.y following Chromium's plan to end support. Older versions of Electron will continue to work, but no further updates will be made for these operating systems.
End of Support for 19.x.y
Electron 19.x.y has reached end-of-support as per the project's support policy. Developers and applications are encouraged to upgrade to a newer version of Electron."
92,"Release Notes for v21.4.1
Features

Whole-program optimization is enabled by default in electron node headers config file. #37048 

Other Changes

Security: backported fix for CVE-2023-0471. #37023 
","Release Notes for v21.4.1
Features
Whole-program optimization is enabled by default in electron node headers config file. #37048 
Other Changes
Security: backported fix for CVE-2023-0471. #37023 "
93,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@23.0.0-beta.6.
# Release Notes for v23.0.0-beta.6
Fixes

ESM loads of CJS modules that have null exports no longer throw. #37024 
Fixed a BrowserWindow maxWidth or maxHeight of 0 causing strange resizing behavior. #36511 (Also in 21, 22)
Fixed tray icon not showing on desktop environments that have no support for app indicator. #37033 (Also in 22)

Other Changes

Fixed a memory leak in v8.serialize() when running Node.js within Electron. #37030 
Updated Chromium to 110.0.5481.52. #37035 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@23.0.0-beta.6.
Release Notes for v23.0.0-beta.6
Fixes
ESM loads of CJS modules that have null exports no longer throw. #37024 
Fixed a BrowserWindow maxWidth or maxHeight of 0 causing strange resizing behavior. #36511 (Also in 21, 22)
Fixed tray icon not showing on desktop environments that have no support for app indicator. #37033 (Also in 22)
Other Changes
Fixed a memory leak in v8.serialize() when running Node.js within Electron. #37030 
Updated Chromium to 110.0.5481.52. #37035 "
94,"Release Notes for v22.1.0
Features

Added label property to Display objects. #36932 (Also in 21, 23)

Fixes

Fixed an issue where webViews could have an incorrect initial background color following reloads. #36940 (Also in 21, 23)
Removed plugin helper checks on macOS gated behind enable_plugins buildflag. #36978 (Also in 23)

Other Changes

Fixed voiceover repeating selected text when expanding selection in a textarea. #36991 
","Release Notes for v22.1.0
Features
Added label property to Display objects. #36932 (Also in 21, 23)
Fixes
Fixed an issue where webViews could have an incorrect initial background color following reloads. #36940 (Also in 21, 23)
Removed plugin helper checks on macOS gated behind enable_plugins buildflag. #36978 (Also in 23)
Other Changes
Fixed voiceover repeating selected text when expanding selection in a textarea. #36991 "
95,"Release Notes for v21.4.0
Features

Added label property to Display objects. #36931 (Also in 22, 23)

Fixes

Fixed an error when fs.readdir gets null for options. #36846 (Also in 22, 23)
Fixed an issue where webViews could have an incorrect initial background color following reloads. #36939 (Also in 22, 23)

Other Changes

Security: backported fix for CVE-2022-4178. #36586 
","Release Notes for v21.4.0
Features
Added label property to Display objects. #36931 (Also in 22, 23)
Fixes
Fixed an error when fs.readdir gets null for options. #36846 (Also in 22, 23)
Fixed an issue where webViews could have an incorrect initial background color following reloads. #36939 (Also in 22, 23)
Other Changes
Security: backported fix for CVE-2022-4178. #36586 "
96,"Release Notes for v20.3.11
Other Changes

Security: backported fix for 1395604. #36883 
Security: backported fix for 1399424. #36880 
Security: backported fix for CVE-2022-4174. #36581 
Security: backported fix for CVE-2023-0129. #36886 
","Release Notes for v20.3.11
Other Changes
Security: backported fix for 1395604. #36883 
Security: backported fix for 1399424. #36880 
Security: backported fix for CVE-2022-4174. #36581 
Security: backported fix for CVE-2023-0129. #36886 "
97,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@23.0.0-beta.5.
# Release Notes for v23.0.0-beta.5
Fixes

Fixed an issue where <datalist> elements were improperly positioned within the page. #36959 
Removed plugin helper checks on macOS gated behind enable_plugins buildflag. #36977 (Also in 22)

Other Changes

Updated Chromium to 110.0.5481.38. #36955 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@23.0.0-beta.5.
Release Notes for v23.0.0-beta.5
Fixes
Fixed an issue where  elements were improperly positioned within the page. #36959 
Removed plugin helper checks on macOS gated behind enable_plugins buildflag. #36977 (Also in 22)
Other Changes
Updated Chromium to 110.0.5481.38. #36955 "
98,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@23.0.0-beta.4.
# Release Notes for v23.0.0-beta.4
Features

Added label property to Display objects. #36933 (Also in 21, 22)

Fixes

Fixed an issue on macOS when trying to switch processes with Cmd+Tab after exiting Kiosk Mode. #36917 (Also in 21, 22)
Fixed an issue where webViews could have an incorrect initial background color following reloads. #36938 (Also in 21, 22)

Other Changes

Updated Chromium to 110.0.5481.30. #36819 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@23.0.0-beta.4.
Release Notes for v23.0.0-beta.4
Features
Added label property to Display objects. #36933 (Also in 21, 22)
Fixes
Fixed an issue on macOS when trying to switch processes with Cmd+Tab after exiting Kiosk Mode. #36917 (Also in 21, 22)
Fixed an issue where webViews could have an incorrect initial background color following reloads. #36938 (Also in 21, 22)
Other Changes
Updated Chromium to 110.0.5481.30. #36819 "
99,"Release Notes for v22.0.3
Fixes

Fixed an issue on macOS when trying to switch processes with Cmd+Tab after exiting Kiosk Mode. #36918 (Also in 21, 23)
Fixed an issue where the setPermissionRequestHandler callback would be invoked twice when using navigator.getUserMedia(...). #36873 (Also in 23)
Use the process cache to reduce the memory for asar file. #36664 (Also in 21, 23)
","Release Notes for v22.0.3
Fixes
Fixed an issue on macOS when trying to switch processes with Cmd+Tab after exiting Kiosk Mode. #36918 (Also in 21, 23)
Fixed an issue where the setPermissionRequestHandler callback would be invoked twice when using navigator.getUserMedia(...). #36873 (Also in 23)
Use the process cache to reduce the memory for asar file. #36664 (Also in 21, 23)"
100,"Release Notes for v21.3.5
Fixes

Fixed an issue on macOS when trying to switch processes with Cmd+Tab after exiting Kiosk Mode. #36919 (Also in 22, 23)
Use the process cache to reduce the memory for asar file. #36663 (Also in 22, 23)

Other Changes

Security: backported fix for 1395604. #36882 
Security: backported fix for 1399424. #36879 
Security: backported fix for CVE-2023-0129. #36885 
","Release Notes for v21.3.5
Fixes
Fixed an issue on macOS when trying to switch processes with Cmd+Tab after exiting Kiosk Mode. #36919 (Also in 22, 23)
Use the process cache to reduce the memory for asar file. #36663 (Also in 22, 23)
Other Changes
Security: backported fix for 1395604. #36882 
Security: backported fix for 1399424. #36879 
Security: backported fix for CVE-2023-0129. #36885 "
101,"Release Notes for v20.3.10
Other Changes

Security: backported fix for 1395604. #36883 
Security: backported fix for 1399424. #36880 
Security: backported fix for CVE-2022-4174. #36581 
Security: backported fix for CVE-2023-0129. #36886 
","Release Notes for v20.3.10
Other Changes
Security: backported fix for 1395604. #36883 
Security: backported fix for 1399424. #36880 
Security: backported fix for CVE-2022-4174. #36581 
Security: backported fix for CVE-2023-0129. #36886 "
102,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@23.0.0-beta.3.
# Release Notes for v23.0.0-beta.3","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@23.0.0-beta.3.
Release Notes for v23.0.0-beta.3"
103,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@23.0.0-beta.2.
# Release Notes for v23.0.0-beta.2
Fixes

Fixed an RTL issue that could happen in some locales when calling BrowserWindow.setTrafficLightPosition() on macOS. #36850 (Also in 21, 22)
Fixed an error when fs.readdir gets null for options. #36848 (Also in 22)
Fixed an issue where the setPermissionRequestHandler callback would be invoked twice when using navigator.getUserMedia(...). #36874 
Fixed missing headers in libcxx_headers bundle. #36864 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@23.0.0-beta.2.
Release Notes for v23.0.0-beta.2
Fixes
Fixed an RTL issue that could happen in some locales when calling BrowserWindow.setTrafficLightPosition() on macOS. #36850 (Also in 21, 22)
Fixed an error when fs.readdir gets null for options. #36848 (Also in 22)
Fixed an issue where the setPermissionRequestHandler callback would be invoked twice when using navigator.getUserMedia(...). #36874 
Fixed missing headers in libcxx_headers bundle. #36864 "
104,"Release Notes for v22.0.2
Fixes

Fixed an RTL issue that could happen in some locales when calling BrowserWindow.setTrafficLightPosition() on macOS. #36851 (Also in 21, 23)
Fixed an error when fs.readdir gets null for options. #36849 (Also in 23)
Fixed missing headers in libcxx_headers bundle. #36865 

Other Changes

Security: backported fix for CVE-2023-0129. #36884 
Updated Chromium to 108.0.5359.179. #36877 
","Release Notes for v22.0.2
Fixes
Fixed an RTL issue that could happen in some locales when calling BrowserWindow.setTrafficLightPosition() on macOS. #36851 (Also in 21, 23)
Fixed an error when fs.readdir gets null for options. #36849 (Also in 23)
Fixed missing headers in libcxx_headers bundle. #36865 
Other Changes
Security: backported fix for CVE-2023-0129. #36884 
Updated Chromium to 108.0.5359.179. #36877 "
105,"Release Notes for v21.3.4
Fixes

Changed HTML5 Notifications created with the requireInteraction option to not timeout on Linux and Windows. #36503 (Also in 22)
Fixed a BrowserWindow maxWidth or maxHeight of 0 causing strange resizing behavior. #36510 
Fixed an RTL issue that could happen in some locales when calling BrowserWindow.setTrafficLightPosition() on macOS. #36852 (Also in 22)
Fixed an issue with incorrect focus ring highlighting when using dialog.showMessageBox(). #36801 (Also in 22, 23)
Fixed binary stripping for branded release builds on Linux. #36655 (Also in 22, 23)
Fixed warning about duplicate WebSwapCGLLayer symbols when Electron starts on macOS. #36798 (Also in 22, 23)

Other Changes

Added node-api: handle no support for external buffers. #36625 
Security: backported fix for 1365082. #36591 
Security: backported fix for 1367993. #36675 
Security: backported fix for 1393177. #36685 
Security: backported fix for CVE-2022-4174. #36580 
Security: backported fix for CVE-2022-4174. #36821 
Security: backported fix for CVE-2022-4175. #36578 
Security: backported fix for CVE-2022-4179. #36584 
Security: backported fix for CVE-2022-4180. #36582 
Security: backported fix for CVE-2022-4181. #36576 
Security: backported fix for CVE-2022-4190. #36589 
Security: backported fix for CVE-2022-4193. #36593 
Security: backported fix for CVE-2022-4436. #36687 
Security: backported fix for CVE-2022-4437. #36677 
Security: backported fix for CVE-2022-4438. #36681 
Security: backported fix for CVE-2022-4439. #36679 
Security: backported fix for [CVE-2022-4262]. #36553 
Security: backported fix for chromium:1393384. #36683 
","Release Notes for v21.3.4
Fixes
Changed HTML5 Notifications created with the requireInteraction option to not timeout on Linux and Windows. #36503 (Also in 22)
Fixed a BrowserWindow maxWidth or maxHeight of 0 causing strange resizing behavior. #36510 
Fixed an RTL issue that could happen in some locales when calling BrowserWindow.setTrafficLightPosition() on macOS. #36852 (Also in 22)
Fixed an issue with incorrect focus ring highlighting when using dialog.showMessageBox(). #36801 (Also in 22, 23)
Fixed binary stripping for branded release builds on Linux. #36655 (Also in 22, 23)
Fixed warning about duplicate WebSwapCGLLayer symbols when Electron starts on macOS. #36798 (Also in 22, 23)
Other Changes
Added node-api: handle no support for external buffers. #36625 
Security: backported fix for 1365082. #36591 
Security: backported fix for 1367993. #36675 
Security: backported fix for 1393177. #36685 
Security: backported fix for CVE-2022-4174. #36580 
Security: backported fix for CVE-2022-4174. #36821 
Security: backported fix for CVE-2022-4175. #36578 
Security: backported fix for CVE-2022-4179. #36584 
Security: backported fix for CVE-2022-4180. #36582 
Security: backported fix for CVE-2022-4181. #36576 
Security: backported fix for CVE-2022-4190. #36589 
Security: backported fix for CVE-2022-4193. #36593 
Security: backported fix for CVE-2022-4436. #36687 
Security: backported fix for CVE-2022-4437. #36677 
Security: backported fix for CVE-2022-4438. #36681 
Security: backported fix for CVE-2022-4439. #36679 
Security: backported fix for [CVE-2022-4262]. #36553 
Security: backported fix for chromium:1393384. #36683 "
106,"Release Notes for v20.3.9
Other Changes

Added node-api: handle no support for external buffers. #36626 
Security: backported fix for 1365082. #36592 
Security: backported fix for 1367993. #36676 
Security: backported fix for 1393177. #36686 
Security: backported fix for CVE-2022-4175. #36579 
Security: backported fix for CVE-2022-4178. #36587 
Security: backported fix for CVE-2022-4179. #36585 
Security: backported fix for CVE-2022-4180. #36583 
Security: backported fix for CVE-2022-4181. #36577 
Security: backported fix for CVE-2022-4190. #36590 
Security: backported fix for CVE-2022-4193. #36594 
Security: backported fix for CVE-2022-4436. #36688 
Security: backported fix for CVE-2022-4437. #36678 
Security: backported fix for CVE-2022-4438. #36682 
Security: backported fix for CVE-2022-4439. #36680 
Security: backported fix for [CVE-2022-4262]. #36552 
Security: backported fix for chromium:1393384. #36684 
","Release Notes for v20.3.9
Other Changes
Added node-api: handle no support for external buffers. #36626 
Security: backported fix for 1365082. #36592 
Security: backported fix for 1367993. #36676 
Security: backported fix for 1393177. #36686 
Security: backported fix for CVE-2022-4175. #36579 
Security: backported fix for CVE-2022-4178. #36587 
Security: backported fix for CVE-2022-4179. #36585 
Security: backported fix for CVE-2022-4180. #36583 
Security: backported fix for CVE-2022-4181. #36577 
Security: backported fix for CVE-2022-4190. #36590 
Security: backported fix for CVE-2022-4193. #36594 
Security: backported fix for CVE-2022-4436. #36688 
Security: backported fix for CVE-2022-4437. #36678 
Security: backported fix for CVE-2022-4438. #36682 
Security: backported fix for CVE-2022-4439. #36680 
Security: backported fix for [CVE-2022-4262]. #36552 
Security: backported fix for chromium:1393384. #36684 "
107,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@23.0.0-beta.1.
# Release Notes for v23.0.0-beta.1
Fixes

Fixed a crash that could occur when running eval in inline scripts in unsandboxed renderer processes. #36667 (Also in 22)
Fixed an issue with incorrect focus ring highlighting when using dialog.showMessageBox(). #36803 (Also in 21, 22)
Fixed binary stripping for branded release builds on Linux. #36656 (Also in 21, 22)
Fixed warning about duplicate WebSwapCGLLayer symbols when Electron starts on macOS. #36799 (Also in 21, 22)
Use the process cache to reduce the memory for asar file. #36665 

Other Changes

Added node-api: handle no support for external buffers. #36623 
Updated Chromium to 110.0.5478.5. #36574 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@23.0.0-beta.1.
Release Notes for v23.0.0-beta.1
Fixes
Fixed a crash that could occur when running eval in inline scripts in unsandboxed renderer processes. #36667 (Also in 22)
Fixed an issue with incorrect focus ring highlighting when using dialog.showMessageBox(). #36803 (Also in 21, 22)
Fixed binary stripping for branded release builds on Linux. #36656 (Also in 21, 22)
Fixed warning about duplicate WebSwapCGLLayer symbols when Electron starts on macOS. #36799 (Also in 21, 22)
Use the process cache to reduce the memory for asar file. #36665 
Other Changes
Added node-api: handle no support for external buffers. #36623 
Updated Chromium to 110.0.5478.5. #36574 "
108,"Release Notes for v22.0.1
Fixes

Changed HTML5 Notifications created with the requireInteraction option to not timeout on Linux and Windows. #36501 (Also in 21)
Fixed a crash that could occur when running eval in inline scripts in unsandboxed renderer processes. #36668 (Also in 23)
Fixed an issue with incorrect focus ring highlighting when using dialog.showMessageBox(). #36802 (Also in 21, 23)
Fixed binary stripping for branded release builds on Linux. #36654 (Also in 21, 23)
Fixed warning about duplicate WebSwapCGLLayer symbols when Electron starts on macOS. #36800 (Also in 21, 23)

Other Changes

Added node-api: handle no support for external buffers. #36624 
Backported fix for chromium:1352405. #36517 
Backported fix for chromium:1352405. #36518 
Removed unneeded --turbo-profiling-input argument from mksnapshot_args for Linux mksnapshot zips. #36782 (Also in 23)
Updated Chromium to 108.0.5359.99. #36613 
","Release Notes for v22.0.1
Fixes
Changed HTML5 Notifications created with the requireInteraction option to not timeout on Linux and Windows. #36501 (Also in 21)
Fixed a crash that could occur when running eval in inline scripts in unsandboxed renderer processes. #36668 (Also in 23)
Fixed an issue with incorrect focus ring highlighting when using dialog.showMessageBox(). #36802 (Also in 21, 23)
Fixed binary stripping for branded release builds on Linux. #36654 (Also in 21, 23)
Fixed warning about duplicate WebSwapCGLLayer symbols when Electron starts on macOS. #36800 (Also in 21, 23)
Other Changes
Added node-api: handle no support for external buffers. #36624 
Backported fix for chromium:1352405. #36517 
Backported fix for chromium:1352405. #36518 
Removed unneeded --turbo-profiling-input argument from mksnapshot_args for Linux mksnapshot zips. #36782 (Also in 23)
Updated Chromium to 108.0.5359.99. #36613 "
109,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@23.0.0-alpha.3.
# Release Notes for v23.0.0-alpha.3","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@23.0.0-alpha.3.
Release Notes for v23.0.0-alpha.3"
110,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@23.0.0-alpha.2.
# Release Notes for v23.0.0-alpha.2
Other Changes

Updated Chromium to 110.0.5451.0. #36568 
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@23.0.0-alpha.2.
Release Notes for v23.0.0-alpha.2
Other Changes
Updated Chromium to 110.0.5451.0. #36568 "
111,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@23.0.0-alpha.1.
# Release Notes for v23.0.0-alpha.1
Features

Added an app.getPreferredSystemLanguages() API to return the user's system languages. #36035 (Also in 21, 22)
Added new UtilityProcess API to launch chromium child process with node integration. #34980 (Also in 22)
Added support for WebUSB. #36289 
Added support for serialPort.forget() as well as a new event serial-port-revoked emitted when a given origin is revoked. #35310 (Also in 22)
Adds new setHiddenInMissionControl API to allow developers to opt out of mission control on macOS. #36092 

Fixes

Default margin has been added in the code. #36060 (Also in 21, 22)
Doing require('electron/*') where * is not one of main, common or renderer no longer resolves with the built-in electron module. #35915 
Enable crashpad for ELECTRON_RUN_AS_NODE processes. #36460 (Also in 22)
Fixed click event and tooltip of Tray not working on Linux. #36333 (Also in 22)
Fixed a drag-and-drop issue on macOS where items would be incorrectly moved instead of copied in some contexts. #35963 (Also in 20, 21, 22)
Fixed a potential issue when calling webContents.printToPDF(). #36046 (Also in 21, 22)
Fixed a potential memory leak. #35932 (Also in 21, 22)
Fixed an issue where calling app.dock.setIcon(/path/t/icon) would crash when called before the ready event on app. #36279 (Also in 20, 21, 22)
Fixed an issue where frameless non-resizable windows showed a Windows 7 frame during startup. #35365 (Also in 22)
Fixed an issue where some options were incorrectly ignored when using webContents.printToPDF(). #35975 (Also in 21, 22)
Fixed on-screen-keyboard not hiding on input rendered in webview is blurred. #35921 (Also in 20, 21, 22)
Fixed race condition during update on macOS that could result in TCC and Keychain errors. #36130 (Also in 22)
Fixed spurious promise rejection in webContents.loadURL when navigating to a hash. #36129 (Also in 20, 21, 22)
Fixed v8 flags and desktop name in package.json does not hornored when running local app using electron cli. #35997 (Also in 20, 21, 22)
Removed support for nodeIntegrationInWorker in Service Workers and Shared Workers owing to sandboxing policies. #35919 (Also in 21, 22)
Removed unneeded --turbo-profiling-input argument from mksnapshot_args. #36378 (Also in 22)
The keychain account name for MAS and Darwin builds of the same Electron application now differ. #35864 
You can now import the built-in electron module via ESModule loaders, i.e. import('electron') and import 'electron' now work natively. #35930 (Also in 20, 21, 22)

Other Changes

Enabled out-of-process iframe printing to PDF with webContents.printToPDF().. #36051 (Also in 22)
Removed unneeded --turbo-profiling-input argument from mksnapshot_args for Linux mksnapshot zips. #36534 
Updated Chromium to 110.0.5415.0. #36186 
Updated Node.js to v18.12.1. #36356 
Upgraded Node.js to v18.10.0. #35999 
Windows 7, Windows 8, and Windows 8.1 are not supported anymore as Chromium 110 dropped support. #36513 

Documentation

Documentation changes: #35894
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@23.0.0-alpha.1.
Release Notes for v23.0.0-alpha.1
Features
Added an app.getPreferredSystemLanguages() API to return the user's system languages. #36035 (Also in 21, 22)
Added new UtilityProcess API to launch chromium child process with node integration. #34980 (Also in 22)
Added support for WebUSB. #36289 
Added support for serialPort.forget() as well as a new event serial-port-revoked emitted when a given origin is revoked. #35310 (Also in 22)
Adds new setHiddenInMissionControl API to allow developers to opt out of mission control on macOS. #36092 
Fixes
Default margin has been added in the code. #36060 (Also in 21, 22)
Doing require('electron/*') where * is not one of main, common or renderer no longer resolves with the built-in electron module. #35915 
Enable crashpad for ELECTRON_RUN_AS_NODE processes. #36460 (Also in 22)
Fixed click event and tooltip of Tray not working on Linux. #36333 (Also in 22)
Fixed a drag-and-drop issue on macOS where items would be incorrectly moved instead of copied in some contexts. #35963 (Also in 20, 21, 22)
Fixed a potential issue when calling webContents.printToPDF(). #36046 (Also in 21, 22)
Fixed a potential memory leak. #35932 (Also in 21, 22)
Fixed an issue where calling app.dock.setIcon(/path/t/icon) would crash when called before the ready event on app. #36279 (Also in 20, 21, 22)
Fixed an issue where frameless non-resizable windows showed a Windows 7 frame during startup. #35365 (Also in 22)
Fixed an issue where some options were incorrectly ignored when using webContents.printToPDF(). #35975 (Also in 21, 22)
Fixed on-screen-keyboard not hiding on input rendered in webview is blurred. #35921 (Also in 20, 21, 22)
Fixed race condition during update on macOS that could result in TCC and Keychain errors. #36130 (Also in 22)
Fixed spurious promise rejection in webContents.loadURL when navigating to a hash. #36129 (Also in 20, 21, 22)
Fixed v8 flags and desktop name in package.json does not hornored when running local app using electron cli. #35997 (Also in 20, 21, 22)
Removed support for nodeIntegrationInWorker in Service Workers and Shared Workers owing to sandboxing policies. #35919 (Also in 21, 22)
Removed unneeded --turbo-profiling-input argument from mksnapshot_args. #36378 (Also in 22)
The keychain account name for MAS and Darwin builds of the same Electron application now differ. #35864 
You can now import the built-in electron module via ESModule loaders, i.e. import('electron') and import 'electron' now work natively. #35930 (Also in 20, 21, 22)
Other Changes
Enabled out-of-process iframe printing to PDF with webContents.printToPDF().. #36051 (Also in 22)
Removed unneeded --turbo-profiling-input argument from mksnapshot_args for Linux mksnapshot zips. #36534 
Updated Chromium to 110.0.5415.0. #36186 
Updated Node.js to v18.12.1. #36356 
Upgraded Node.js to v18.10.0. #35999 
Windows 7, Windows 8, and Windows 8.1 are not supported anymore as Chromium 110 dropped support. #36513 
Documentation
Documentation changes: #35894"
112,"Release Notes for v21.3.3
Fixes

Removed unneeded --turbo-profiling-input argument from mksnapshot_args. #36495 (Also in 22)

Other Changes

Updated Chromium to 106.0.5249.199. #36448 
","Release Notes for v21.3.3
Fixes
Removed unneeded --turbo-profiling-input argument from mksnapshot_args. #36495 (Also in 22)
Other Changes
Updated Chromium to 106.0.5249.199. #36448 "
113,"Release Notes for v20.3.8
Other Changes

Security: backported fix for CVE-2022-4135. #36444 
","Release Notes for v20.3.8
Other Changes
Security: backported fix for CVE-2022-4135. #36444 "
114,"Release Notes for v19.1.9
End of Support for 19.x.y
Electron 19.x.y has reached end-of-support as per the project's support policy. Developers and applications are encouraged to upgrade to a newer version of Electron.
Other Changes

Security: backported fix for 1333333. #35053 
Security: backported fix for CVE-2022-4135. #36447 
","Release Notes for v19.1.9
End of Support for 19.x.y
Electron 19.x.y has reached end-of-support as per the project's support policy. Developers and applications are encouraged to upgrade to a newer version of Electron.
Other Changes
Security: backported fix for 1333333. #35053 
Security: backported fix for CVE-2022-4135. #36447 "
115,"Release Notes for v22.0.0
Stack Upgrades

Chromium 108.0.5359.62.
New in 108
New in 107


Node v16.17.1.
v16.17.1 release notes
v16.17.0 release notes


V8 v10.8

Breaking Changes

Added WebContents input-event event.
Deprecated BrowserWindow scroll-touch-* events. #35531
The deprecated new-window event has been removed. #34526 

Features

Added LoadBrowserProcessSpecificV8Snapshot as a new fuse that will let the main/browser process load its v8 snapshot from a file at browser_v8_context_snapshot.bin. Any other process will use the same path as is used today. #35266 (Also in 20, 21)
Added WebContents.opener to access window opener.
Added webContents.fromFrame(frame) to get the WebContents corresponding to a WebFrameMain instance. #35140 (Also in 21)
Added app.getSystemLocale() method. #35697 (Also in 21)
Added contextBridge.exposeInIsolatedWorld(worldId, key, api) to expose an API to an isolatedWorld within a renderer from a preload script. #34974 
Added webContents.close() method. #35509 
Added webFrameMain.origin. #35438 (Also in 19, 20, 21)
Added an app.getPreferredSystemLanguages() API to return the user's system languages. #36291 (Also in 21)
Added new UtilityProcess API to launch chromium child process with node integration. #36089 
Added new WebContents event content-bounds-updated. #35533 
Added new WebContents.ipc and WebFrameMain.ipc APIs. #34959 (Also in 21)
Added support for Web Bluetooth pin pairing on Linux and Windows. #35416 (Also in 21)
Added support for navigator.mediaDevices.getDisplayMedia via a new session handler, ses.setDisplayMediaRequestHandler. #30702 
Added support for serialPort.forget() as well as a new event serial-port-revoked emitted when a given origin is revoked. #36062 

Fixes

Added support for Webauthn discoverable keys (aka resident keys), allowing users to authenticate without first having to select or type a username. #35374
Enable crashpad for ELECTRON_RUN_AS_NODE processes on linux. #36483
Fixed click event and tooltip of Tray not working on Linux. #36472 
Fixed an issue where frameless non-resizable windows showed a Windows 7 frame during startup. #36024
Fixed an issue with incomplete EventEmitter object in sandboxed renderer preload script. #35522
Fixed race condition during update on macOS that could result in TCC and Keychain errors. #36362
Removed unneeded --turbo-profiling-input argument from mksnapshot_args. #36463 

Also in earlier versions...

Added a background to the WCO container to avoid rendering glitches. #35569 (Also in 19, 20, 21)
Added support for Windows drop-down dialog extensions. #35618 (Also in 18, 19, 20, 21)
Default margin has been added in the code. #36073 (Also in 21)
Enable WCO maximize button when window enters tablet mode and is not already maximized. #35617 (Also in 19, 20, 21)
Fixed uv_os_gethostname failing on Windows 7. #35702 (Also in 19, 20, 21)
Fixed a bug where calling atob in the renderer process could fail under some circumstances. #35415 (Also in 19, 20, 21)
Fixed a crash that occured when loading non-standard schemes from iframes. #35485 (Also in 21)
Fixed a crash when switching origins with emulation settings set. #35466 (Also in 21)
Fixed a drag-and-drop issue on macOS where items would be incorrectly moved instead of copied in some contexts. #35976 (Also in 20, 21)
Fixed a potential crash on WebWorker destruction. #35422 (Also in 19, 20, 21)
Fixed a potential issue when calling webContents.printToPDF(). #36065 (Also in 21)
Fixed a potential memory leak. #35964 (Also in 21)
Fixed an edge case in app.isInApplicationsFolder() which would return false incorrectly in some cases. #35636 (Also in 19, 20, 21)
Fixed an issue where DevTools could not be docked with Windows Control Overlay enabled. #35754 (Also in 19, 20, 21)
Fixed an issue where WCO could occlude DevTools opened in any non-detached mode. #35209 (Also in 18, 19, 20, 21)
Fixed an issue where screen.getCursorScreenPoint() crashed on Wayland when it was called before a BrowserWindow had been created. #35503 (Also in 21)
Fixed an issue where serialPort.open() failed with NetworkError: Failed to open serial port.. #35306 (Also in 21)
Fixed an issue where app.relaunch loses args when execPath is specified. #35108 (Also in 19, 20, 21)
Fixed an issue where calling app.dock.setIcon(/path/t/icon) would crash when called before the ready event on app. #36293 (Also in 20, 21) 
Fixed an issue where frameless resizable windows showed Window 7 style frames while opening. #35189 (Also in 18, 19, 20, 21)
Fixed an issue where frameless windows with roundedCorners: false couldn't enter fullscreen without crashing. #35421 (Also in 19, 20, 21)
Fixed an issue where part of the BrowserView could be cut off when calling setBounds on some windows. #34713 (Also in 19, 20, 21)
Fixed an issue where some options were incorrectly ignored when using webContents.printToPDF(). #35993 (Also in 21) 
Fixed crash in renderer when resuming system from sleep. #35322 (Also in 18, 19, 20, 21)
Fixed enable promise support with webFrameMain.executeJavaScript. #35292 (Also in 20, 21)
Fixed issue with history.back() in sandboxed iframes affecting parent browsing context. #35420 (Also in 19, 20, 21)
Fixed on-screen-keyboard not hiding on input rendered in webview is blurred. #35983 (Also in 20, 21) 
Fixed session.getBlobData never resolves with blob sizes > 65536. #35277 (Also in 19, 20, 21)
Fixed spurious promise rejection in webContents.loadURL when navigating to a hash. #36151 (Also in 20, 21)
Fixed undefined details.requestingUrl from session.setPermissionCheckHandler. #35281 (Also in 20, 21)
Fixed v8 flags and desktop name in package.json does not hornored when running local app using electron cli. #36049 (Also in 20, 21)
Fixed: If a custom Electron build contains an electron.d.ts file, it is now being used. #33979 (Also in 20, 21)
Picture-In-Picture mode no longer becomes a red rectangle on hover. #35034 (Also in 19, 20, 21)
Provided display_id for desktopCapturer on Linux. #33861 (Also in 19, 20, 21)
Removed support for nodeIntegrationInWorker in Service Workers and Shared Workers owing to sandboxing policies. #36010 (Also in 21)
Usage of safeStorage now consistently uses the correct service name on macOS regardless of timing with browser window construction. #34683 (Also in 19, 20)
You can now import the built-in electron module via ESModule loaders, i.e. import('electron') and import 'electron' now work natively. #35957 (Also in 20, 21)
Fixed a typo in the section on debugging with VSCode. #35256 (Also in 19, 20, 21)

Other Changes

Backported fix for chromium:1352405. #36458 
Bumps the minimum required version of Node.js needed to install Electron to 12.20.55. #35301 
Enabled out-of-process iframe printing to PDF with webContents.printToPDF().. #36095 
Fixed win.getBrowserViews() not being updated when a BrowserView was moved to a different window. #35511 
Fixed an issue where some spellcheck functionality would incorrectly throw errors on macOS. #35514 (Also in 21)
Modified the WCO maximized button style to match Windows 11 more closely. #35370 (Also in 20, 21)
Updated common.gypi for native modules to support C++17 features in V8. #36369 (Also in 20, 21)

Documentation

Documentation changes: 
#35283
#35324 
#35413
#35525
#35563
#35908



Notices
Sunsetting Windows 7/8/8.1
Electron will be ending support for Windows 7/8/8.1 after version 22.x.y following Chromium's plan to end support. Older versions of Electron will continue to work, but no further updates will be made for these operating systems.
End of Support for 19.x.y
Electron 19.x.y has reached end-of-support as per the project's support policy. Developers and applications are encouraged to upgrade to a newer version of Electron.","Release Notes for v22.0.0
Stack Upgrades
Chromium 108.0.5359.62.
New in 108
New in 107
Node v16.17.1.
v16.17.1 release notes
v16.17.0 release notes
V8 v10.8
Breaking Changes
Added WebContents input-event event.
Deprecated BrowserWindow scroll-touch-* events. #35531
The deprecated new-window event has been removed. #34526 
Features
Added LoadBrowserProcessSpecificV8Snapshot as a new fuse that will let the main/browser process load its v8 snapshot from a file at browser_v8_context_snapshot.bin. Any other process will use the same path as is used today. #35266 (Also in 20, 21)
Added WebContents.opener to access window opener.
Added webContents.fromFrame(frame) to get the WebContents corresponding to a WebFrameMain instance. #35140 (Also in 21)
Added app.getSystemLocale() method. #35697 (Also in 21)
Added contextBridge.exposeInIsolatedWorld(worldId, key, api) to expose an API to an isolatedWorld within a renderer from a preload script. #34974 
Added webContents.close() method. #35509 
Added webFrameMain.origin. #35438 (Also in 19, 20, 21)
Added an app.getPreferredSystemLanguages() API to return the user's system languages. #36291 (Also in 21)
Added new UtilityProcess API to launch chromium child process with node integration. #36089 
Added new WebContents event content-bounds-updated. #35533 
Added new WebContents.ipc and WebFrameMain.ipc APIs. #34959 (Also in 21)
Added support for Web Bluetooth pin pairing on Linux and Windows. #35416 (Also in 21)
Added support for navigator.mediaDevices.getDisplayMedia via a new session handler, ses.setDisplayMediaRequestHandler. #30702 
Added support for serialPort.forget() as well as a new event serial-port-revoked emitted when a given origin is revoked. #36062 
Fixes
Added support for Webauthn discoverable keys (aka resident keys), allowing users to authenticate without first having to select or type a username. #35374
Enable crashpad for ELECTRON_RUN_AS_NODE processes on linux. #36483
Fixed click event and tooltip of Tray not working on Linux. #36472 
Fixed an issue where frameless non-resizable windows showed a Windows 7 frame during startup. #36024
Fixed an issue with incomplete EventEmitter object in sandboxed renderer preload script. #35522
Fixed race condition during update on macOS that could result in TCC and Keychain errors. #36362
Removed unneeded --turbo-profiling-input argument from mksnapshot_args. #36463 
Also in earlier versions...
Added a background to the WCO container to avoid rendering glitches. #35569 (Also in 19, 20, 21)
Added support for Windows drop-down dialog extensions. #35618 (Also in 18, 19, 20, 21)
Default margin has been added in the code. #36073 (Also in 21)
Enable WCO maximize button when window enters tablet mode and is not already maximized. #35617 (Also in 19, 20, 21)
Fixed uv_os_gethostname failing on Windows 7. #35702 (Also in 19, 20, 21)
Fixed a bug where calling atob in the renderer process could fail under some circumstances. #35415 (Also in 19, 20, 21)
Fixed a crash that occured when loading non-standard schemes from iframes. #35485 (Also in 21)
Fixed a crash when switching origins with emulation settings set. #35466 (Also in 21)
Fixed a drag-and-drop issue on macOS where items would be incorrectly moved instead of copied in some contexts. #35976 (Also in 20, 21)
Fixed a potential crash on WebWorker destruction. #35422 (Also in 19, 20, 21)
Fixed a potential issue when calling webContents.printToPDF(). #36065 (Also in 21)
Fixed a potential memory leak. #35964 (Also in 21)
Fixed an edge case in app.isInApplicationsFolder() which would return false incorrectly in some cases. #35636 (Also in 19, 20, 21)
Fixed an issue where DevTools could not be docked with Windows Control Overlay enabled. #35754 (Also in 19, 20, 21)
Fixed an issue where WCO could occlude DevTools opened in any non-detached mode. #35209 (Also in 18, 19, 20, 21)
Fixed an issue where screen.getCursorScreenPoint() crashed on Wayland when it was called before a BrowserWindow had been created. #35503 (Also in 21)
Fixed an issue where serialPort.open() failed with NetworkError: Failed to open serial port.. #35306 (Also in 21)
Fixed an issue where app.relaunch loses args when execPath is specified. #35108 (Also in 19, 20, 21)
Fixed an issue where calling app.dock.setIcon(/path/t/icon) would crash when called before the ready event on app. #36293 (Also in 20, 21) 
Fixed an issue where frameless resizable windows showed Window 7 style frames while opening. #35189 (Also in 18, 19, 20, 21)
Fixed an issue where frameless windows with roundedCorners: false couldn't enter fullscreen without crashing. #35421 (Also in 19, 20, 21)
Fixed an issue where part of the BrowserView could be cut off when calling setBounds on some windows. #34713 (Also in 19, 20, 21)
Fixed an issue where some options were incorrectly ignored when using webContents.printToPDF(). #35993 (Also in 21) 
Fixed crash in renderer when resuming system from sleep. #35322 (Also in 18, 19, 20, 21)
Fixed enable promise support with webFrameMain.executeJavaScript. #35292 (Also in 20, 21)
Fixed issue with history.back() in sandboxed iframes affecting parent browsing context. #35420 (Also in 19, 20, 21)
Fixed on-screen-keyboard not hiding on input rendered in webview is blurred. #35983 (Also in 20, 21) 
Fixed session.getBlobData never resolves with blob sizes > 65536. #35277 (Also in 19, 20, 21)
Fixed spurious promise rejection in webContents.loadURL when navigating to a hash. #36151 (Also in 20, 21)
Fixed undefined details.requestingUrl from session.setPermissionCheckHandler. #35281 (Also in 20, 21)
Fixed v8 flags and desktop name in package.json does not hornored when running local app using electron cli. #36049 (Also in 20, 21)
Fixed: If a custom Electron build contains an electron.d.ts file, it is now being used. #33979 (Also in 20, 21)
Picture-In-Picture mode no longer becomes a red rectangle on hover. #35034 (Also in 19, 20, 21)
Provided display_id for desktopCapturer on Linux. #33861 (Also in 19, 20, 21)
Removed support for nodeIntegrationInWorker in Service Workers and Shared Workers owing to sandboxing policies. #36010 (Also in 21)
Usage of safeStorage now consistently uses the correct service name on macOS regardless of timing with browser window construction. #34683 (Also in 19, 20)
You can now import the built-in electron module via ESModule loaders, i.e. import('electron') and import 'electron' now work natively. #35957 (Also in 20, 21)
Fixed a typo in the section on debugging with VSCode. #35256 (Also in 19, 20, 21)
Other Changes
Backported fix for chromium:1352405. #36458 
Bumps the minimum required version of Node.js needed to install Electron to 12.20.55. #35301 
Enabled out-of-process iframe printing to PDF with webContents.printToPDF().. #36095 
Fixed win.getBrowserViews() not being updated when a BrowserView was moved to a different window. #35511 
Fixed an issue where some spellcheck functionality would incorrectly throw errors on macOS. #35514 (Also in 21)
Modified the WCO maximized button style to match Windows 11 more closely. #35370 (Also in 20, 21)
Updated common.gypi for native modules to support C++17 features in V8. #36369 (Also in 20, 21)
Documentation
Documentation changes: 
35283
35324
35413
35525
35563
35908
Notices
Sunsetting Windows 7/8/8.1
Electron will be ending support for Windows 7/8/8.1 after version 22.x.y following Chromium's plan to end support. Older versions of Electron will continue to work, but no further updates will be made for these operating systems.
End of Support for 19.x.y
Electron 19.x.y has reached end-of-support as per the project's support policy. Developers and applications are encouraged to upgrade to a newer version of Electron."
116,"Release Notes for v19.1.8
Other Changes

Security: backported fix for 1333333. #35053 
Security: backported fix for CVE-2022-4135. #36447 
","Release Notes for v19.1.8
Other Changes
Security: backported fix for 1333333. #35053 
Security: backported fix for CVE-2022-4135. #36447 "
117,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@22.0.0-beta.8.
# Release Notes for v22.0.0-beta.8","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@22.0.0-beta.8.
Release Notes for v22.0.0-beta.8"
118,"Release Notes for v21.3.1
Other Changes

Updated common.gypi for native modules to support C++17 features in V8. #36383 (Also in 20)
","Release Notes for v21.3.1
Other Changes
Updated common.gypi for native modules to support C++17 features in V8. #36383 (Also in 20)"
119,"Release Notes for v20.3.7
Fixes

Fixed an issue where calling app.dock.setIcon(/path/t/icon) would crash when called before the ready event on app. #36292 (Also in 21, 22)

Other Changes

Security: backported fix for 1376637. #36311 
Security: backported fix for 1377775. #36303 
Security: backported fix for CVE-2022-3885. #36296 
Security: backported fix for CVE-2022-3887. #36304 
Security: backported fix for CVE-2022-3888. #36298 
Security: backported fix for CVE-2022-3889. #36300 
Security: backported fix for CVE-2022-3890. #36302 
Updated common.gypi for native modules to support C++17 features in V8. #36382 (Also in 21)

Unknown

Reverted fix for chromium:1361612 due to stability issues. #36263 
","Release Notes for v20.3.7
Fixes
Fixed an issue where calling app.dock.setIcon(/path/t/icon) would crash when called before the ready event on app. #36292 (Also in 21, 22)
Other Changes
Security: backported fix for 1376637. #36311 
Security: backported fix for 1377775. #36303 
Security: backported fix for CVE-2022-3885. #36296 
Security: backported fix for CVE-2022-3887. #36304 
Security: backported fix for CVE-2022-3888. #36298 
Security: backported fix for CVE-2022-3889. #36300 
Security: backported fix for CVE-2022-3890. #36302 
Updated common.gypi for native modules to support C++17 features in V8. #36382 (Also in 21)
Unknown
Reverted fix for chromium:1361612 due to stability issues. #36263 "
120,"Release Notes for v19.1.7
Fixes

Fixed crash in AXNodeObject::TextFromDescendants(). #36285 

Other Changes

Security: backported fix for 1376637. #36312 
Security: backported fix for CVE-2022-3885. #36295 
Security: backported fix for CVE-2022-3887. #36305 
Security: backported fix for CVE-2022-3888. #36297 
Security: backported fix for CVE-2022-3889. #36299 
Security: backported fix for CVE-2022-3890. #36301 
","Release Notes for v19.1.7
Fixes
Fixed crash in AXNodeObject::TextFromDescendants(). #36285 
Other Changes
Security: backported fix for 1376637. #36312 
Security: backported fix for CVE-2022-3885. #36295 
Security: backported fix for CVE-2022-3887. #36305 
Security: backported fix for CVE-2022-3888. #36297 
Security: backported fix for CVE-2022-3889. #36299 
Security: backported fix for CVE-2022-3890. #36301 "
121,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@22.0.0-beta.7.
# Release Notes for v22.0.0-beta.7
Other Changes

Updated Chromium to 108.0.5359.48. #36388 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@22.0.0-beta.7.
Release Notes for v22.0.0-beta.7
Other Changes
Updated Chromium to 108.0.5359.48. #36388 "
122,"Release Notes for v20.3.6
Fixes

Fixed an issue where calling app.dock.setIcon(/path/t/icon) would crash when called before the ready event on app. #36292 (Also in 21, 22)

Other Changes

Security: backported fix for 1376637. #36311 
Security: backported fix for 1377775. #36303 
Security: backported fix for CVE-2022-3885. #36296 
Security: backported fix for CVE-2022-3887. #36304 
Security: backported fix for CVE-2022-3888. #36298 
Security: backported fix for CVE-2022-3889. #36300 
Security: backported fix for CVE-2022-3890. #36302 
Updated common.gypi for native modules to support C++17 features in V8. #36382 (Also in 21)

Unknown

Reverted fix for chromium:1361612 due to stability issues. #36263 
","Release Notes for v20.3.6
Fixes
Fixed an issue where calling app.dock.setIcon(/path/t/icon) would crash when called before the ready event on app. #36292 (Also in 21, 22)
Other Changes
Security: backported fix for 1376637. #36311 
Security: backported fix for 1377775. #36303 
Security: backported fix for CVE-2022-3885. #36296 
Security: backported fix for CVE-2022-3887. #36304 
Security: backported fix for CVE-2022-3888. #36298 
Security: backported fix for CVE-2022-3889. #36300 
Security: backported fix for CVE-2022-3890. #36302 
Updated common.gypi for native modules to support C++17 features in V8. #36382 (Also in 21)
Unknown
Reverted fix for chromium:1361612 due to stability issues. #36263 "
123,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@22.0.0-beta.6.
# Release Notes for v22.0.0-beta.6
Features

Added new UtilityProcess API to launch chromium child process with node integration. #36089 

Fixes

Fixed race condition during update on macOS that could result in TCC and Keychain errors. #36362 

Other Changes

Updated common.gypi for native modules to support C++17 features in V8. #36369 (Also in 20)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@22.0.0-beta.6.
Release Notes for v22.0.0-beta.6
Features
Added new UtilityProcess API to launch chromium child process with node integration. #36089 
Fixes
Fixed race condition during update on macOS that could result in TCC and Keychain errors. #36362 
Other Changes
Updated common.gypi for native modules to support C++17 features in V8. #36369 (Also in 20)"
124,"Release Notes for v21.3.0
Features

Added an app.getPreferredSystemLanguages() API to return the user's system languages. #36290 (Also in 22)

Fixes

Fixed an issue where calling app.dock.setIcon(/path/t/icon) would crash when called before the ready event on app. #36294 (Also in 20, 22)

Other Changes

Updated Chromium to 106.0.5249.181. #36288 

Unknown

Reverted fix for chromium:1361612 due to stability issues. #36264 
","Release Notes for v21.3.0
Features
Added an app.getPreferredSystemLanguages() API to return the user's system languages. #36290 (Also in 22)
Fixes
Fixed an issue where calling app.dock.setIcon(/path/t/icon) would crash when called before the ready event on app. #36294 (Also in 20, 22)
Other Changes
Updated Chromium to 106.0.5249.181. #36288 
Unknown
Reverted fix for chromium:1361612 due to stability issues. #36264 "
125,"Release Notes for v19.1.6
Fixes

Fixed crash in AXNodeObject::TextFromDescendants(). #36285 

Other Changes

Security: backported fix for 1376637. #36312 
Security: backported fix for CVE-2022-3885. #36295 
Security: backported fix for CVE-2022-3887. #36305 
Security: backported fix for CVE-2022-3888. #36297 
Security: backported fix for CVE-2022-3889. #36299 
Security: backported fix for CVE-2022-3890. #36301 
","Release Notes for v19.1.6
Fixes
Fixed crash in AXNodeObject::TextFromDescendants(). #36285 
Other Changes
Security: backported fix for 1376637. #36312 
Security: backported fix for CVE-2022-3885. #36295 
Security: backported fix for CVE-2022-3887. #36305 
Security: backported fix for CVE-2022-3888. #36297 
Security: backported fix for CVE-2022-3889. #36299 
Security: backported fix for CVE-2022-3890. #36301 "
126,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@22.0.0-beta.5.
# Release Notes for v22.0.0-beta.5
Features

Added an app.getPreferredSystemLanguages() API to return the user's system languages. #36291 (Also in 21)

Fixes

Fixed an issue where calling app.dock.setIcon(/path/t/icon) would crash when called before the ready event on app. #36293 (Also in 20, 21)

Other Changes

Updated Chromium to 108.0.5359.40. #36308 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@22.0.0-beta.5.
Release Notes for v22.0.0-beta.5
Features
Added an app.getPreferredSystemLanguages() API to return the user's system languages. #36291 (Also in 21)
Fixes
Fixed an issue where calling app.dock.setIcon(/path/t/icon) would crash when called before the ready event on app. #36293 (Also in 20, 21)
Other Changes
Updated Chromium to 108.0.5359.40. #36308 "
127,"Release Notes for v21.2.3
Other Changes

Security: backported fix for 1356234. #36219 
Security: backported fix for 1361612. #36216 
","Release Notes for v21.2.3
Other Changes
Security: backported fix for 1356234. #36219 
Security: backported fix for 1361612. #36216 "
128,"Release Notes for v20.3.5
Other Changes

Security: backported fix for 1361612. #36217 
Security: backported fix for 1373314. #36214 
Security: backported fix for CVE-2022-3654. #36208 
Security: backported fix for CVE-2022-3723. #36226 
","Release Notes for v20.3.5
Other Changes
Security: backported fix for 1361612. #36217 
Security: backported fix for 1373314. #36214 
Security: backported fix for CVE-2022-3654. #36208 
Security: backported fix for CVE-2022-3723. #36226 "
129,"Release Notes for v19.1.5
Other Changes

Security: backported fix for 1356234. #36221 
Security: backported fix for 1361612. #36218 
Security: backported fix for CVE-2022-3654. #36207 
Security: backported fix for CVE-2022-3656. #36224 
Security: backported fix for CVE-2022-3723. #36225 

Unknown

Reverted fix for chromium:1361612 due to stability issues. #36262 
","Release Notes for v19.1.5
Other Changes
Security: backported fix for 1356234. #36221 
Security: backported fix for 1361612. #36218 
Security: backported fix for CVE-2022-3654. #36207 
Security: backported fix for CVE-2022-3656. #36224 
Security: backported fix for CVE-2022-3723. #36225 
Unknown
Reverted fix for chromium:1361612 due to stability issues. #36262 "
130,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@22.0.0-beta.4.
# Release Notes for v22.0.0-beta.4
Fixes

Fixed spurious promise rejection in webContents.loadURL when navigating to a hash. #36151 (Also in 20, 21)

Other Changes

Updated Chromium to 108.0.5359.29. #36243 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@22.0.0-beta.4.
Release Notes for v22.0.0-beta.4
Fixes
Fixed spurious promise rejection in webContents.loadURL when navigating to a hash. #36151 (Also in 20, 21)
Other Changes
Updated Chromium to 108.0.5359.29. #36243 "
131,"Release Notes for v21.2.2
Other Changes

Security: backported fix for CVE-2022-3656. #36222 
Updated Chromium to 106.0.5249.168. #36185 
","Release Notes for v21.2.2
Other Changes
Security: backported fix for CVE-2022-3656. #36222 
Updated Chromium to 106.0.5249.168. #36185 "
132,"Release Notes for v20.3.4
Fixes

Fixed spurious promise rejection in webContents.loadURL when navigating to a hash. #36149 (Also in 21, 22)

Other Changes

Security: backported fix for 1356234. #36220 
Security: backported fix for 1364604. #36080 
Security: backported fix for 1368076. #36085 
Security: backported fix for CVE-2022-3448. #36079 
Security: backported fix for CVE-2022-3450. #36078 
Security: backported fix for CVE-2022-3652. #36206 
Security: backported fix for CVE-2022-3653. #36210 
","Release Notes for v20.3.4
Fixes
Fixed spurious promise rejection in webContents.loadURL when navigating to a hash. #36149 (Also in 21, 22)
Other Changes
Security: backported fix for 1356234. #36220 
Security: backported fix for 1364604. #36080 
Security: backported fix for 1368076. #36085 
Security: backported fix for CVE-2022-3448. #36079 
Security: backported fix for CVE-2022-3450. #36078 
Security: backported fix for CVE-2022-3652. #36206 
Security: backported fix for CVE-2022-3653. #36210 "
133,"Release Notes for v19.1.4
Other Changes

Security: backported fix for 1364604. #36081 
Security: backported fix for 1368076. #36086 
Security: backported fix for 1373314. #36215 
Security: backported fix for CVE-2022-3450. #36077 
Security: backported fix for CVE-2022-3652. #36205 
Security: backported fix for CVE-2022-3653. #36209 
","Release Notes for v19.1.4
Other Changes
Security: backported fix for 1364604. #36081 
Security: backported fix for 1368076. #36086 
Security: backported fix for 1373314. #36215 
Security: backported fix for CVE-2022-3450. #36077 
Security: backported fix for CVE-2022-3652. #36205 
Security: backported fix for CVE-2022-3653. #36209 "
134,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@22.0.0-beta.3.
# Release Notes for v22.0.0-beta.3","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@22.0.0-beta.3.
Release Notes for v22.0.0-beta.3"
135,"Release Notes for v21.2.1
Fixes

Default margin has been added in the code. #36072 (Also in 22)
Fixed a potential issue when calling webContents.printToPDF(). #36064 (Also in 22)
Fixed spurious promise rejection in webContents.loadURL when navigating to a hash. #36150 

Other Changes

Updated Chromium to 106.0.5249.165. #36162 
","Release Notes for v21.2.1
Fixes
Default margin has been added in the code. #36072 (Also in 22)
Fixed a potential issue when calling webContents.printToPDF(). #36064 (Also in 22)
Fixed spurious promise rejection in webContents.loadURL when navigating to a hash. #36150 
Other Changes
Updated Chromium to 106.0.5249.165. #36162 "
136,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@22.0.0-beta.2.
# Release Notes for v22.0.0-beta.2","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@22.0.0-beta.2.
Release Notes for v22.0.0-beta.2"
137,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@22.0.0-beta.1.
# Release Notes for v22.0.0-beta.1
Other Changes

Enabled out-of-process iframe printing to PDF with webContents.printToPDF().. #36095 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@22.0.0-beta.1.
Release Notes for v22.0.0-beta.1
Other Changes
Enabled out-of-process iframe printing to PDF with webContents.printToPDF().. #36095 "
138,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@22.0.0-alpha.8.
# Release Notes for v22.0.0-alpha.8
Features

Added support for serialPort.forget() as well as a new event serial-port-revoked emitted when a given origin is revoked. #36062 

Fixes

Default margin has been added in the code. #36073 (Also in 21)

Other Changes

Updated Chromium to 108.0.5359.10. #36063 
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@22.0.0-alpha.8.
Release Notes for v22.0.0-alpha.8
Features
Added support for serialPort.forget() as well as a new event serial-port-revoked emitted when a given origin is revoked. #36062 
Fixes
Default margin has been added in the code. #36073 (Also in 21)
Other Changes
Updated Chromium to 108.0.5359.10. #36063 "
139,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@22.0.0-alpha.7.
# Release Notes for v22.0.0-alpha.7
Fixes

Fixed a potential issue when calling webContents.printToPDF(). #36065 

Other Changes

Updated Chromium to 108.0.5355.0. #36056 
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@22.0.0-alpha.7.
Release Notes for v22.0.0-alpha.7
Fixes
Fixed a potential issue when calling webContents.printToPDF(). #36065 
Other Changes
Updated Chromium to 108.0.5355.0. #36056 "
140,"Release Notes for v21.2.0
Fixes

Added support for Windows drop-down dialog extensions. #36027 (Also in 18, 19, 20)
Fixed v8 flags and desktop name in package.json does not hornored when running local app using electron cli. #36050 (Also in 20, 22)
Removed support for nodeIntegrationInWorker in Service Workers and Shared Workers owing to sandboxing policies. #36009 (Also in 22)

Other Changes

Updated Chromium to 106.0.5249.119. #36001 
","Release Notes for v21.2.0
Fixes
Added support for Windows drop-down dialog extensions. #36027 (Also in 18, 19, 20)
Fixed v8 flags and desktop name in package.json does not hornored when running local app using electron cli. #36050 (Also in 20, 22)
Removed support for nodeIntegrationInWorker in Service Workers and Shared Workers owing to sandboxing policies. #36009 (Also in 22)
Other Changes
Updated Chromium to 106.0.5249.119. #36001 "
141,"Release Notes for v20.3.3
Fixes

Fixed v8 flags and desktop name in package.json does not hornored when running local app using electron cli. #36048 (Also in 21, 22)
","Release Notes for v20.3.3
Fixes
Fixed v8 flags and desktop name in package.json does not hornored when running local app using electron cli. #36048 (Also in 21, 22)"
142,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@22.0.0-alpha.6.
# Release Notes for v22.0.0-alpha.6
Fixes

Fixed an issue where frameless non-resizable windows showed a Windows 7 frame during startup. #36024 
Fixed v8 flags and desktop name in package.json does not hornored when running local app using electron cli. #36049 (Also in 20, 21)
Removed support for nodeIntegrationInWorker in Service Workers and Shared Workers owing to sandboxing policies. #36010 (Also in 21)
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@22.0.0-alpha.6.
Release Notes for v22.0.0-alpha.6
Fixes
Fixed an issue where frameless non-resizable windows showed a Windows 7 frame during startup. #36024 
Fixed v8 flags and desktop name in package.json does not hornored when running local app using electron cli. #36049 (Also in 20, 21)
Removed support for nodeIntegrationInWorker in Service Workers and Shared Workers owing to sandboxing policies. #36010 (Also in 21)"
143,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@22.0.0-alpha.5.
# Release Notes for v22.0.0-alpha.5
Fixes

Fixed a drag-and-drop issue on macOS where items would be incorrectly moved instead of copied in some contexts. #35976 (Also in 20, 21)
Fixed an issue where some options were incorrectly ignored when using webContents.printToPDF(). #35993 (Also in 21)
Fixed on-screen-keyboard not hiding on input rendered in webview is blurred. #35983 (Also in 20, 21)
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@22.0.0-alpha.5.
Release Notes for v22.0.0-alpha.5
Fixes
Fixed a drag-and-drop issue on macOS where items would be incorrectly moved instead of copied in some contexts. #35976 (Also in 20, 21)
Fixed an issue where some options were incorrectly ignored when using webContents.printToPDF(). #35993 (Also in 21)
Fixed on-screen-keyboard not hiding on input rendered in webview is blurred. #35983 (Also in 20, 21)"
144,"Release Notes for v21.1.1
Fixes

Fixed a drag-and-drop issue on macOS where items would be incorrectly moved instead of copied in some contexts. #35977 (Also in 20, 22)
Fixed a potential memory leak. #35965 (Also in 22)
Fixed an issue where some options were incorrectly ignored when using webContents.printToPDF(). #35992 (Also in 22)
Fixed on-screen-keyboard not hiding on input rendered in webview is blurred. #35982 (Also in 20, 22)
You can now import the built-in electron module via ESModule loaders, i.e. import('electron') and import 'electron' now work natively. #35958 (Also in 20, 22)

Other Changes

Modified the Windows 11 WCO to match the native look more closely. #35970 (Also in 20)
Updated Chromium to 106.0.5249.103. #35933 
","Release Notes for v21.1.1
Fixes
Fixed a drag-and-drop issue on macOS where items would be incorrectly moved instead of copied in some contexts. #35977 (Also in 20, 22)
Fixed a potential memory leak. #35965 (Also in 22)
Fixed an issue where some options were incorrectly ignored when using webContents.printToPDF(). #35992 (Also in 22)
Fixed on-screen-keyboard not hiding on input rendered in webview is blurred. #35982 (Also in 20, 22)
You can now import the built-in electron module via ESModule loaders, i.e. import('electron') and import 'electron' now work natively. #35958 (Also in 20, 22)
Other Changes
Modified the Windows 11 WCO to match the native look more closely. #35970 (Also in 20)
Updated Chromium to 106.0.5249.103. #35933 "
145,"Release Notes for v20.3.2
Fixes

Fixed a drag-and-drop issue on macOS where items would be incorrectly moved instead of copied in some contexts. #35978 (Also in 21, 22)
Fixed on-screen-keyboard not hiding on input rendered in webview is blurred. #35981 (Also in 21, 22)
You can now import the built-in electron module via ESModule loaders, i.e. import('electron') and import 'electron' now work natively. #35956 (Also in 21, 22)

Other Changes

Modified the Windows 11 WCO to match the native look more closely. #35968 (Also in 21)
Security: backported fix for CVE-2022-3307. #35883 
Security: backported fix for CVE-2022-3315. #35929 
","Release Notes for v20.3.2
Fixes
Fixed a drag-and-drop issue on macOS where items would be incorrectly moved instead of copied in some contexts. #35978 (Also in 21, 22)
Fixed on-screen-keyboard not hiding on input rendered in webview is blurred. #35981 (Also in 21, 22)
You can now import the built-in electron module via ESModule loaders, i.e. import('electron') and import 'electron' now work natively. #35956 (Also in 21, 22)
Other Changes
Modified the Windows 11 WCO to match the native look more closely. #35968 (Also in 21)
Security: backported fix for CVE-2022-3307. #35883 
Security: backported fix for CVE-2022-3315. #35929 "
146,"Release Notes for v19.1.3
Other Changes

Security: backported fix for CVE-2022-3304. #35879 
Security: backported fix for CVE-2022-3307. #35882 
Security: backported fix for CVE-2022-3315. #35918 
","Release Notes for v19.1.3
Other Changes
Security: backported fix for CVE-2022-3304. #35879 
Security: backported fix for CVE-2022-3307. #35882 
Security: backported fix for CVE-2022-3315. #35918 "
147,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@22.0.0-alpha.4.
# Release Notes for v22.0.0-alpha.4
Fixes

Fixed a potential memory leak. #35964 (Also in 21)
You can now import the built-in electron module via ESModule loaders, i.e. import('electron') and import 'electron' now work natively. #35957 
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@22.0.0-alpha.4.
Release Notes for v22.0.0-alpha.4
Fixes
Fixed a potential memory leak. #35964 (Also in 21)
You can now import the built-in electron module via ESModule loaders, i.e. import('electron') and import 'electron' now work natively. #35957 "
148,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@22.0.0-alpha.3.
# Release Notes for v22.0.0-alpha.3","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@22.0.0-alpha.3.
Release Notes for v22.0.0-alpha.3"
149,"Release Notes for v21.1.0
Features

Added WebContents.opener to access window opener.
Added webContents.fromFrame(frame) to get the WebContents corresponding to a WebFrameMain instance. #35819 

Fixes

Provided display_id for desktopCapturer on Linux. #35836 (Also in 19, 20)

Other Changes

Updated Chromium to 106.0.5249.91. #35871 

Documentation

Documentation changes: #35907
","Release Notes for v21.1.0
Features
Added WebContents.opener to access window opener.
Added webContents.fromFrame(frame) to get the WebContents corresponding to a WebFrameMain instance. #35819 
Fixes
Provided display_id for desktopCapturer on Linux. #35836 (Also in 19, 20)
Other Changes
Updated Chromium to 106.0.5249.91. #35871 
Documentation
Documentation changes: #35907"
150,"Release Notes for v20.3.1
Fixes

Provided display_id for desktopCapturer on Linux. #35834 (Also in 19, 21)

Other Changes

Security: backported fix for 1356308. #35892 
Security: backported fix for CVE-2022-3304. #35880 
Security: backported fix for CVE-2022-3373. #35889 
","Release Notes for v20.3.1
Fixes
Provided display_id for desktopCapturer on Linux. #35834 (Also in 19, 21)
Other Changes
Security: backported fix for 1356308. #35892 
Security: backported fix for CVE-2022-3304. #35880 
Security: backported fix for CVE-2022-3373. #35889 "
151,"Release Notes for v19.1.2
Fixes

Provided display_id for desktopCapturer on Linux. #35835 (Also in 20, 21)

Other Changes

Security: backported fix for 1356308. #35891 
Security: backported fix for CVE-2022-3370. #35885 
Security: backported fix for CVE-2022-3373. #35888 
","Release Notes for v19.1.2
Fixes
Provided display_id for desktopCapturer on Linux. #35835 (Also in 20, 21)
Other Changes
Security: backported fix for 1356308. #35891 
Security: backported fix for CVE-2022-3370. #35885 
Security: backported fix for CVE-2022-3373. #35888 "
152,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@22.0.0-alpha.1.
# Release Notes for v22.0.0-alpha.1
Features

Added WebContents input-event event.
Deprecated BrowserWindow scroll-touch-* events. #35531 
Added LoadBrowserProcessSpecificV8Snapshot as a new fuse that will let the main/browser process load its v8 snapshot from a file at browser_v8_context_snapshot.bin. Any other process will use the same path as is used today. #35266 (Also in 20, 21)
Added WebContents.opener to access window opener.
Added webContents.fromFrame(frame) to get the WebContents corresponding to a WebFrameMain instance. #35140 (Also in 21)
Added app.getSystemLocale() method. #35697 (Also in 21)
Added contextBridge.exposeInIsolatedWorld(worldId, key, api) to expose an API to an isolatedWorld within a renderer from a preload script. #34974 
Added webContents.close() method. #35509 
Added webFrameMain.origin. #35438 (Also in 19, 20, 21)
Added new WebContents event content-bounds-updated. #35533 
Added new WebContents.ipc and WebFrameMain.ipc APIs. #34959 (Also in 21)
Added support for Web Bluetooth pin pairing on Linux and Windows. #35416 (Also in 21)
Added support for navigator.mediaDevices.getDisplayMedia via a new session handler, ses.setDisplayMediaRequestHandler. #30702 

Fixes

Added a background to the WCO container to avoid rendering glitches. #35569 (Also in 19, 20, 21)
Added support for Webauthn discoverable keys (aka resident keys), allowing users to authenticate without first having to select or type a username. #35374 
Added support for Windows drop-down dialog extensions. #35618 (Also in 18, 19, 20)
Enable WCO maximize button when window enters tablet mode and is not already maximized. #35617 (Also in 19, 20, 21)
Fixed uv_os_gethostname failing on Windows 7. #35702 (Also in 19, 20, 21)
Fixed a bug where calling atob in the renderer process could fail under some circumstances. #35415 (Also in 19, 20, 21)
Fixed a crash that occured when loading non-standard schemes from iframes. #35485 (Also in 21)
Fixed a crash when switching origins with emulation settings set. #35466 (Also in 21)
Fixed a potential crash on WebWorker destruction. #35422 (Also in 19, 20, 21)
Fixed an edge case in app.isInApplicationsFolder() which would return false incorrectly in some cases. #35636 (Also in 19, 20, 21)
Fixed an issue where DevTools could not be docked with Windows Control Overlay enabled. #35754 (Also in 19, 20, 21)
Fixed an issue where WCO could occlude DevTools opened in any non-detached mode. #35209 (Also in 18, 19, 20, 21)
Fixed an issue where screen.getCursorScreenPoint() crashed on Wayland when it was called before a BrowserWindow had been created. #35503 (Also in 21)
Fixed an issue where serialPort.open() failed with NetworkError: Failed to open serial port.. #35306 (Also in 21)
Fixed an issue where app.relaunch loses args when execPath is specified. #35108 (Also in 19, 20, 21)
Fixed an issue where frameless resizable windows showed Window 7 style frames while opening. #35189 (Also in 18, 19, 20, 21)
Fixed an issue where frameless windows with roundedCorners: false couldn't enter fullscreen without crashing. #35421 (Also in 19, 20, 21)
Fixed an issue where part of the BrowserView could be cut off when calling setBounds on some windows. #34713 (Also in 19, 20, 21)
Fixed an issue with incomplete EventEmitter object in sandboxed renderer preload script. #35522 
Fixed crash in renderer when resuming system from sleep. #35322 (Also in 18, 19, 20, 21)
Fixed enable promise support with webFrameMain.executeJavaScript. #35292 (Also in 20, 21)
Fixed issue with history.back() in sandboxed iframes affecting parent browsing context. #35420 (Also in 19, 20, 21)
Fixed session.getBlobData never resolves with blob sizes > 65536. #35277 (Also in 19, 20, 21)
Fixed undefined details.requestingUrl from session.setPermissionCheckHandler. #35281 (Also in 20, 21)
Fixed: If a custom Electron build contains an electron.d.ts file, it is now being used. #33979 (Also in 20, 21)
Picture-In-Picture mode no longer becomes a red rectangle on hover. #35034 (Also in 19, 20, 21)
Provided display_id for desktopCapturer on Linux. #33861 
Usage of safeStorage now consistently uses the correct service name on macOS regardless of timing with browser window construction. #34683 (Also in 19, 20)

Other Changes

Bumps the minimum required version of Node.js needed to install Electron to 12.20.55. #35301 
Fixed win.getBrowserViews() not being updated when a BrowserView was moved to a different window. #35511 
Fixed an issue where some spellcheck functionality would incorrectly throw errors on macOS. #35514 (Also in 21)
Modified the WCO maximized button style to match Windows 11 more closely. #35370 
The deprecated new-window event has been removed. #34526 
Updated Chromium to 107.0.5286.0. #35590 
Updated Node.js to v16.17.1. #35800 

Documentation

Documentation changes: #35283, #35324, #35413, #35525, #35563

Unknown

Fixed a typo in the section on debugging with VSCode. #35256 (Also in 19, 20, 21)
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@22.0.0-alpha.1.
Release Notes for v22.0.0-alpha.1
Features
Added WebContents input-event event.
Deprecated BrowserWindow scroll-touch-* events. #35531 
Added LoadBrowserProcessSpecificV8Snapshot as a new fuse that will let the main/browser process load its v8 snapshot from a file at browser_v8_context_snapshot.bin. Any other process will use the same path as is used today. #35266 (Also in 20, 21)
Added WebContents.opener to access window opener.
Added webContents.fromFrame(frame) to get the WebContents corresponding to a WebFrameMain instance. #35140 (Also in 21)
Added app.getSystemLocale() method. #35697 (Also in 21)
Added contextBridge.exposeInIsolatedWorld(worldId, key, api) to expose an API to an isolatedWorld within a renderer from a preload script. #34974 
Added webContents.close() method. #35509 
Added webFrameMain.origin. #35438 (Also in 19, 20, 21)
Added new WebContents event content-bounds-updated. #35533 
Added new WebContents.ipc and WebFrameMain.ipc APIs. #34959 (Also in 21)
Added support for Web Bluetooth pin pairing on Linux and Windows. #35416 (Also in 21)
Added support for navigator.mediaDevices.getDisplayMedia via a new session handler, ses.setDisplayMediaRequestHandler. #30702 
Fixes
Added a background to the WCO container to avoid rendering glitches. #35569 (Also in 19, 20, 21)
Added support for Webauthn discoverable keys (aka resident keys), allowing users to authenticate without first having to select or type a username. #35374 
Added support for Windows drop-down dialog extensions. #35618 (Also in 18, 19, 20)
Enable WCO maximize button when window enters tablet mode and is not already maximized. #35617 (Also in 19, 20, 21)
Fixed uv_os_gethostname failing on Windows 7. #35702 (Also in 19, 20, 21)
Fixed a bug where calling atob in the renderer process could fail under some circumstances. #35415 (Also in 19, 20, 21)
Fixed a crash that occured when loading non-standard schemes from iframes. #35485 (Also in 21)
Fixed a crash when switching origins with emulation settings set. #35466 (Also in 21)
Fixed a potential crash on WebWorker destruction. #35422 (Also in 19, 20, 21)
Fixed an edge case in app.isInApplicationsFolder() which would return false incorrectly in some cases. #35636 (Also in 19, 20, 21)
Fixed an issue where DevTools could not be docked with Windows Control Overlay enabled. #35754 (Also in 19, 20, 21)
Fixed an issue where WCO could occlude DevTools opened in any non-detached mode. #35209 (Also in 18, 19, 20, 21)
Fixed an issue where screen.getCursorScreenPoint() crashed on Wayland when it was called before a BrowserWindow had been created. #35503 (Also in 21)
Fixed an issue where serialPort.open() failed with NetworkError: Failed to open serial port.. #35306 (Also in 21)
Fixed an issue where app.relaunch loses args when execPath is specified. #35108 (Also in 19, 20, 21)
Fixed an issue where frameless resizable windows showed Window 7 style frames while opening. #35189 (Also in 18, 19, 20, 21)
Fixed an issue where frameless windows with roundedCorners: false couldn't enter fullscreen without crashing. #35421 (Also in 19, 20, 21)
Fixed an issue where part of the BrowserView could be cut off when calling setBounds on some windows. #34713 (Also in 19, 20, 21)
Fixed an issue with incomplete EventEmitter object in sandboxed renderer preload script. #35522 
Fixed crash in renderer when resuming system from sleep. #35322 (Also in 18, 19, 20, 21)
Fixed enable promise support with webFrameMain.executeJavaScript. #35292 (Also in 20, 21)
Fixed issue with history.back() in sandboxed iframes affecting parent browsing context. #35420 (Also in 19, 20, 21)
Fixed session.getBlobData never resolves with blob sizes > 65536. #35277 (Also in 19, 20, 21)
Fixed undefined details.requestingUrl from session.setPermissionCheckHandler. #35281 (Also in 20, 21)
Fixed: If a custom Electron build contains an electron.d.ts file, it is now being used. #33979 (Also in 20, 21)
Picture-In-Picture mode no longer becomes a red rectangle on hover. #35034 (Also in 19, 20, 21)
Provided display_id for desktopCapturer on Linux. #33861 
Usage of safeStorage now consistently uses the correct service name on macOS regardless of timing with browser window construction. #34683 (Also in 19, 20)
Other Changes
Bumps the minimum required version of Node.js needed to install Electron to 12.20.55. #35301 
Fixed win.getBrowserViews() not being updated when a BrowserView was moved to a different window. #35511 
Fixed an issue where some spellcheck functionality would incorrectly throw errors on macOS. #35514 (Also in 21)
Modified the WCO maximized button style to match Windows 11 more closely. #35370 
The deprecated new-window event has been removed. #34526 
Updated Chromium to 107.0.5286.0. #35590 
Updated Node.js to v16.17.1. #35800 
Documentation
Documentation changes: #35283, #35324, #35413, #35525, #35563
Unknown
Fixed a typo in the section on debugging with VSCode. #35256 (Also in 19, 20, 21)"
153,"Release Notes for v21.0.1
Fixes

Fixed: If a custom Electron build contains an electron.d.ts file, it is now being used. #35822 (Also in 20)

Other Changes

Updated Chromium to 106.0.5249.61. #35833 
","Release Notes for v21.0.1
Fixes
Fixed: If a custom Electron build contains an electron.d.ts file, it is now being used. #35822 (Also in 20)
Other Changes
Updated Chromium to 106.0.5249.61. #35833 "
154,"Release Notes for v20.3.0
Features

Added LoadBrowserProcessSpecificV8Snapshot as a new fuse that will let the main/browser process load its v8 snapshot from a file at browser_v8_context_snapshot.bin. Any other process will use the same path as is used today. #35694 (Also in 21)

Fixes

Fixed an issue where DevTools could not be docked with Windows Control Overlay enabled. #35764 (Also in 19, 21)
Fixed: If a custom Electron build contains an electron.d.ts file, it is now being used. #35823 (Also in 21)
Usage of safeStorage now consistently uses the correct service name on macOS regardless of timing with browser window construction. #35796 (Also in 19)
","Release Notes for v20.3.0
Features
Added LoadBrowserProcessSpecificV8Snapshot as a new fuse that will let the main/browser process load its v8 snapshot from a file at browser_v8_context_snapshot.bin. Any other process will use the same path as is used today. #35694 (Also in 21)
Fixes
Fixed an issue where DevTools could not be docked with Windows Control Overlay enabled. #35764 (Also in 19, 21)
Fixed: If a custom Electron build contains an electron.d.ts file, it is now being used. #35823 (Also in 21)
Usage of safeStorage now consistently uses the correct service name on macOS regardless of timing with browser window construction. #35796 (Also in 19)"
155,"Release Notes for v19.1.1
Fixes

Fixed an issue where DevTools could not be docked with Windows Control Overlay enabled. #35763 (Also in 20, 21)
Usage of safeStorage now consistently uses the correct service name on macOS regardless of timing with browser window construction. #35795 (Also in 20)

Other Changes

Security: backported fix chromium:1346938. #35826 
Security: backported fix for 1348283. #35793 
Security: backported fix for CVE-2022-3196. #35787 
Security: backported fix for CVE-2022-3197. #35789 
Security: backported fix for CVE-2022-3198. #35791 
Security: backported fix for chromium:1359294,v8:12578. #35774 

Documentation

Documentation changes: #35330
","Release Notes for v19.1.1
Fixes
Fixed an issue where DevTools could not be docked with Windows Control Overlay enabled. #35763 (Also in 20, 21)
Usage of safeStorage now consistently uses the correct service name on macOS regardless of timing with browser window construction. #35795 (Also in 20)
Other Changes
Security: backported fix chromium:1346938. #35826 
Security: backported fix for 1348283. #35793 
Security: backported fix for CVE-2022-3196. #35787 
Security: backported fix for CVE-2022-3197. #35789 
Security: backported fix for CVE-2022-3198. #35791 
Security: backported fix for chromium:1359294,v8:12578. #35774 
Documentation
Documentation changes: #35330"
156,"Release Notes for v18.3.15
End of Support for 18.x.y
Electron 18.x.y has reached end-of-support as per the project's support policy. Developers and applications are encouraged to upgrade to a newer version of Electron.
Other Changes

Security: backported fix chromium:1346938. #35827 
Security: backported fix for CVE-2022-3196. #35788 
Security: backported fix for CVE-2022-3198. #35792 
","Release Notes for v18.3.15
End of Support for 18.x.y
Electron 18.x.y has reached end-of-support as per the project's support policy. Developers and applications are encouraged to upgrade to a newer version of Electron.
Other Changes
Security: backported fix chromium:1346938. #35827 
Security: backported fix for CVE-2022-3196. #35788 
Security: backported fix for CVE-2022-3198. #35792 "
157,"Release Notes for v21.0.0
Stack Upgrades

Chromium 106.0.5249.51
New in 106
New in 105


Node v16.16.0
v16.16.0 release notes


V8 v10.6 

Breaking Changes

Enabled the V8 memory cage for external buffers. See https://www.electronjs.org/blog/v8-memory-cage for more details. #34724 
Refactored webContents.printToPDF to align with the Chrome Devtools implementation. #33654 

Features

Added LoadBrowserProcessSpecificV8Snapshot as a new fuse that will let the main/browser process load its v8 snapshot from a file at browser_v8_context_snapshot.bin. Any other process will use the same path as is used today. #35695 (Also in 20)
Added app.getSystemLocale() method. #35794 
Added webFrameMain.origin. #35534 (Also in 19, 20)
Added deprecation warning for the new-window event. #34528 (Also in 20)
Added immersive dark mode on Windows. #33624 (Also in 20)
Added new WebContents.ipc and WebFrameMain.ipc APIs. #35231
Added support for Web Bluetooth pin pairing on Linux and Windows. #35818 
Added support for panel-like behavior. Window can float over full-screened apps. #34388 (Also in 20)
Added support for push notifications from APNs for macOS apps. #33574 

Fixes

Enable missing HKDF support in Node.js crypto. #34767 
Fixed a crash that occured when loading non-standard schemes from iframes. #35517 
Fixed a crash when switching origins with emulation settings set. #35488 
Fixed an issue where screen.getCursorScreenPoint() crashed on Wayland when it was called before a BrowserWindow had been created. #35575 
Fixed an issue where serialPort.open() failed with NetworkError: Failed to open serial port.. #35339 
Fixed an issue where invalid pageSize values would cause a silent hang and eventual crash. #34893
Fixed an issue where some spellcheck functionality would incorrectly throw errors on macOS. #35679
Fixed the 'length' property in UploadFile objects being ignored. #34657 

Also in earlier versions...

Added a background to the WCO container to avoid rendering glitches. #35612 (Also in 19, 20)
Added support for --ozone-platform-hint flag on Linux. #34937 (Also in 19, 20)
Adds a warning for building native modules with node-gyp and electron-rebuild, encouraging users to upgrade to >=8.4.0 for node-gyp and >=3.2.8 for electron-rebuild if using Electron 20 or higher.. #35159 (Also in 20)
Do not exit when logging initialization fails. #35138 (Also in 20)
Enable WCO maximize button when window enters tablet mode and is not already maximized. #35664 (Also in 19, 20)
Ensures that requestMediaKeySystemAccess eventually resolves / rejects. #34886 (Also in 19, 20)
Fixed 20.0.0-beta.8 X11 crash regression. #35075 (Also in 20)
Fixed WCO not responding to touch events on windows. #35117 (Also in 18, 19, 20)
Fixed _dyld_missing_symbol_abort crash on macOS when using c++ native modules. #34932 (Also in 20)
Fixed serial-port-added and serial-port-removed events not firing. #34958 (Also in 20)
Fixed uv_os_gethostname failing on Windows 7. #35704 (Also in 19, 20)
Fixed webContents.getUserAgent() incorrectly returning an empty string unless previously set. #35069 (Also in 18, 19, 20)
Fixed a Windows Control Overlay issue where a window taken directly from minimized to maximized state could have incorrect hover state. #35070 (Also in 19, 20)
Fixed a bug where calling atob in the renderer process could fail under some circumstances. #35443 (Also in 19, 20)
Fixed a crash when calling BrowserWindow.setEnabled(). #34904 (Also in 18, 19, 20)
Fixed a crash when loading a same-origin URL after a render process crash. #34428 (Also in 18, 19, 20)
Fixed a performance problem in crashReporter.start() on macOS. #34609 (Also in 17, 18, 19, 20)
Fixed a potential crash on WebWorker destruction. #35492 (Also in 19, 20)
Fixed a potential crash when changing window settings after initializing WCO with an invalid titleBarStyle. #34833 (Also in 17, 18, 19, 20)
Fixed a potential printing hang. #34892 (Also in 20)
Fixed alwaysOnTop BrowserWindow option for X11 Linux. #34766 (Also in 18, 19, 20)
Fixed an edge case in app.isInApplicationsFolder() which would return false incorrectly in some cases. #35730 (Also in 19, 20)
Fixed an error where setWindowOpenHandler() would crash if the callback threw an error. #34523 (Also in 17, 18, 19, 20)
Fixed an issue in which calling setBounds() after e.preventDefault in a 'will-move' or 'will-resize' event wouldn't change the window's shape until the mouse button was released. #34843 (Also in 19, 20)
Fixed an issue where BrowserViews didn't always visually update after call to setBounds. #34581 (Also in 18, 19, 20)
Fixed an issue where BrowserWindows on macOS were incorrectly marked as resizable. #34379 (Also in 18, 19, 20)
Fixed an issue where DataList bounds had part of the item text cut off vertically. #34759 (Also in 19, 20)
Fixed an issue where DevTools could not be docked with Windows Control Overlay enabled. #35765 (Also in 19, 20)
Fixed an issue where WCO could occlude DevTools opened in any non-detached mode. #35688 (Also in 18, 19, 20)
Fixed an issue where Windows Control Overlay buttons did not respect  maximizable/minimizable/closable states of a BrowserWindow. #34677 (Also in 17, 18, 19, 20)
Fixed an issue where app.relaunch loses args when execPath is specified. #35254 (Also in 19, 20)
Fixed an issue where calling BrowserWindow.setRepresentedFilename on macOS with titlebarStyle: 'hiddenInset'  or titlebarStyle: 'hidden' inadvertently moves the traffic light location. #34834 (Also in 18, 19, 20)
Fixed an issue where calling w.setWindowButtonVisibility(true) immediately after exiting fullscreen fails to show window buttons. #34530 (Also in 18, 19, 20)
Fixed an issue where draggable regions were not recalculated when BrowserView bounds changed on Windows. #34582 (Also in 18, 19, 20)
Fixed an issue where frameless resizable windows showed Window 7 style frames while opening. #35353 (Also in 18, 19, 20)
Fixed an issue where frameless windows with roundedCorners: false couldn't enter fullscreen without crashing. #35454 (Also in 19, 20)
Fixed an issue where invalid print job settings would correctly call back Invalid print settings as the failure reason, but would then not terminate the print job, leading to an eventual crash on exit. #34894 (Also in 20)
Fixed an issue where media keys would be sent to Electron on Windows no matter which window was in focus. #34594 (Also in 19, 20)
Fixed an issue where normal bounds would not be appropriately updated if the user minimized with the minimize button. #34473 (Also in 18, 19, 20)
Fixed an issue where part of the BrowserView could be cut off when calling setBounds on some windows. #35502 (Also in 19, 20)
Fixed an issue where passing { name: 'All Files', extensions: ['*'] } in the filters param of open or save dialogs on Linux would disallow choosing files without an extension. #34496 (Also in 18, 19, 20)
Fixed an issue where printing with an invalid deviceName on Linux caused silent failures. #34872 (Also in 19, 20)
Fixed an issue where the minimize button with WCO enabled would incorrectly be highlighted in some cases. #34771 (Also in 17, 18, 19, 20)
Fixed an issue where zombie windows can be created if window.close() is called during a fullscreen transition. #34378 (Also in 17, 18, 19, 20)
Fixed an issue with fullscreen transitions when HTML fullscreen is requested. #32905 (Also in 20)
Fixed child about:blank windows from inheriting their parents' preload scripts when sandbox: false and nodeIntegrationInSubFrames: true. #34531 (Also in 20)
Fixed context menu not showing all items on macOS when dock is not hidden. #35194 (Also in 18, 19, 20)
Fixed crash in renderer when resuming system from sleep. #35336 (Also in 18, 19, 20)
Fixed empty app_id when running under wayland. #34855 (Also in 18, 19, 20)
Fixed enable promise support with webFrameMain.executeJavaScript. #35359 (Also in 20)
Fixed issue with history.back() in sandboxed iframes affecting parent browsing context. #35623 (Also in 19, 20)
Fixed linux arm64 builds to not require glibc 2.29+. #34491 (Also in 19, 20)
Fixed missing Sec-CH-UA headers and empty navigator.userAgentData. #34481 (Also in 17, 18, 19, 20)
Fixed native module compilation issues on arm. #34914 (Also in 20)
Fixed potential crash in WebFrameMain when performing a cross-origin navigation. #34411 (Also in 18, 19, 20)
Fixed session.getBlobData never resolves with blob sizes > 65536. #35602 (Also in 19, 20)
Fixed spontaneous crashing in native modules that depended on nan. #34844 (Also in 20)
Fixed support for Wayland client-side decorations. #34955 (Also in 19, 20)
Fixed symbol generation on 32-bit Windows release builds. #35078 (Also in 18, 19, 20)
Fixed undefined details.requestingUrl from session.setPermissionCheckHandler. #35409 (Also in 20)
Picture-In-Picture mode no longer becomes a red rectangle on hover. #35401 (Also in 19, 20)
Removed the skip-taskbar feature on Linux. #35123 (Also in 20)
Updated Windows Control Overlay buttons to look and feel more native on Windows 11. #34790 (Also in 20)

Other Changes

Backported fix for v8:13055. #34931 
Changed release uploads to now upload libcxx objects for MacOS x64 and arm64. #34586 
On Linux, changed the libgdk-pixbuf dependency to be dynamically linked rather than statically linked. #34077 (Also in 18, 19, 20)
Security: backported fix for CVE-2022-3075. #35543 
The undocumented page-title-set webview event has been removed. #34533 
WebContents for <webview> are now only created after the 'will-attach-webview' event is emitted and preventDefault is not called. #32941 (Also in 20)

Documentation

Documentation changes: 
#34451 
#35332 
#35334 
#35648 
#35667 
#35285



End of Support for 18.x.y
Electron 18.x.y has reached end-of-support as per the project's support policy. Developers and applications are encouraged to upgrade to a newer version of Electron.","Release Notes for v21.0.0
Stack Upgrades
Chromium 106.0.5249.51
New in 106
New in 105
Node v16.16.0
v16.16.0 release notes
V8 v10.6 
Breaking Changes
Enabled the V8 memory cage for external buffers. See link for more details. #34724 
Refactored webContents.printToPDF to align with the Chrome Devtools implementation. #33654 
Features
Added LoadBrowserProcessSpecificV8Snapshot as a new fuse that will let the main/browser process load its v8 snapshot from a file at browser_v8_context_snapshot.bin. Any other process will use the same path as is used today. #35695 (Also in 20)
Added app.getSystemLocale() method. #35794 
Added webFrameMain.origin. #35534 (Also in 19, 20)
Added deprecation warning for the new-window event. #34528 (Also in 20)
Added immersive dark mode on Windows. #33624 (Also in 20)
Added new WebContents.ipc and WebFrameMain.ipc APIs. #35231
Added support for Web Bluetooth pin pairing on Linux and Windows. #35818 
Added support for panel-like behavior. Window can float over full-screened apps. #34388 (Also in 20)
Added support for push notifications from APNs for macOS apps. #33574 
Fixes
Enable missing HKDF support in Node.js crypto. #34767 
Fixed a crash that occured when loading non-standard schemes from iframes. #35517 
Fixed a crash when switching origins with emulation settings set. #35488 
Fixed an issue where screen.getCursorScreenPoint() crashed on Wayland when it was called before a BrowserWindow had been created. #35575 
Fixed an issue where serialPort.open() failed with NetworkError: Failed to open serial port.. #35339 
Fixed an issue where invalid pageSize values would cause a silent hang and eventual crash. #34893
Fixed an issue where some spellcheck functionality would incorrectly throw errors on macOS. #35679
Fixed the 'length' property in UploadFile objects being ignored. #34657 
Also in earlier versions...
Added a background to the WCO container to avoid rendering glitches. #35612 (Also in 19, 20)
Added support for --ozone-platform-hint flag on Linux. #34937 (Also in 19, 20)
Adds a warning for building native modules with node-gyp and electron-rebuild, encouraging users to upgrade to >=8.4.0 for node-gyp and >=3.2.8 for electron-rebuild if using Electron 20 or higher.. #35159 (Also in 20)
Do not exit when logging initialization fails. #35138 (Also in 20)
Enable WCO maximize button when window enters tablet mode and is not already maximized. #35664 (Also in 19, 20)
Ensures that requestMediaKeySystemAccess eventually resolves / rejects. #34886 (Also in 19, 20)
Fixed 20.0.0-beta.8 X11 crash regression. #35075 (Also in 20)
Fixed WCO not responding to touch events on windows. #35117 (Also in 18, 19, 20)
Fixed _dyld_missing_symbol_abort crash on macOS when using c++ native modules. #34932 (Also in 20)
Fixed serial-port-added and serial-port-removed events not firing. #34958 (Also in 20)
Fixed uv_os_gethostname failing on Windows 7. #35704 (Also in 19, 20)
Fixed webContents.getUserAgent() incorrectly returning an empty string unless previously set. #35069 (Also in 18, 19, 20)
Fixed a Windows Control Overlay issue where a window taken directly from minimized to maximized state could have incorrect hover state. #35070 (Also in 19, 20)
Fixed a bug where calling atob in the renderer process could fail under some circumstances. #35443 (Also in 19, 20)
Fixed a crash when calling BrowserWindow.setEnabled(). #34904 (Also in 18, 19, 20)
Fixed a crash when loading a same-origin URL after a render process crash. #34428 (Also in 18, 19, 20)
Fixed a performance problem in crashReporter.start() on macOS. #34609 (Also in 17, 18, 19, 20)
Fixed a potential crash on WebWorker destruction. #35492 (Also in 19, 20)
Fixed a potential crash when changing window settings after initializing WCO with an invalid titleBarStyle. #34833 (Also in 17, 18, 19, 20)
Fixed a potential printing hang. #34892 (Also in 20)
Fixed alwaysOnTop BrowserWindow option for X11 Linux. #34766 (Also in 18, 19, 20)
Fixed an edge case in app.isInApplicationsFolder() which would return false incorrectly in some cases. #35730 (Also in 19, 20)
Fixed an error where setWindowOpenHandler() would crash if the callback threw an error. #34523 (Also in 17, 18, 19, 20)
Fixed an issue in which calling setBounds() after e.preventDefault in a 'will-move' or 'will-resize' event wouldn't change the window's shape until the mouse button was released. #34843 (Also in 19, 20)
Fixed an issue where BrowserViews didn't always visually update after call to setBounds. #34581 (Also in 18, 19, 20)
Fixed an issue where BrowserWindows on macOS were incorrectly marked as resizable. #34379 (Also in 18, 19, 20)
Fixed an issue where DataList bounds had part of the item text cut off vertically. #34759 (Also in 19, 20)
Fixed an issue where DevTools could not be docked with Windows Control Overlay enabled. #35765 (Also in 19, 20)
Fixed an issue where WCO could occlude DevTools opened in any non-detached mode. #35688 (Also in 18, 19, 20)
Fixed an issue where Windows Control Overlay buttons did not respect  maximizable/minimizable/closable states of a BrowserWindow. #34677 (Also in 17, 18, 19, 20)
Fixed an issue where app.relaunch loses args when execPath is specified. #35254 (Also in 19, 20)
Fixed an issue where calling BrowserWindow.setRepresentedFilename on macOS with titlebarStyle: 'hiddenInset'  or titlebarStyle: 'hidden' inadvertently moves the traffic light location. #34834 (Also in 18, 19, 20)
Fixed an issue where calling w.setWindowButtonVisibility(true) immediately after exiting fullscreen fails to show window buttons. #34530 (Also in 18, 19, 20)
Fixed an issue where draggable regions were not recalculated when BrowserView bounds changed on Windows. #34582 (Also in 18, 19, 20)
Fixed an issue where frameless resizable windows showed Window 7 style frames while opening. #35353 (Also in 18, 19, 20)
Fixed an issue where frameless windows with roundedCorners: false couldn't enter fullscreen without crashing. #35454 (Also in 19, 20)
Fixed an issue where invalid print job settings would correctly call back Invalid print settings as the failure reason, but would then not terminate the print job, leading to an eventual crash on exit. #34894 (Also in 20)
Fixed an issue where media keys would be sent to Electron on Windows no matter which window was in focus. #34594 (Also in 19, 20)
Fixed an issue where normal bounds would not be appropriately updated if the user minimized with the minimize button. #34473 (Also in 18, 19, 20)
Fixed an issue where part of the BrowserView could be cut off when calling setBounds on some windows. #35502 (Also in 19, 20)
Fixed an issue where passing { name: 'All Files', extensions: ['*'] } in the filters param of open or save dialogs on Linux would disallow choosing files without an extension. #34496 (Also in 18, 19, 20)
Fixed an issue where printing with an invalid deviceName on Linux caused silent failures. #34872 (Also in 19, 20)
Fixed an issue where the minimize button with WCO enabled would incorrectly be highlighted in some cases. #34771 (Also in 17, 18, 19, 20)
Fixed an issue where zombie windows can be created if window.close() is called during a fullscreen transition. #34378 (Also in 17, 18, 19, 20)
Fixed an issue with fullscreen transitions when HTML fullscreen is requested. #32905 (Also in 20)
Fixed child about:blank windows from inheriting their parents' preload scripts when sandbox: false and nodeIntegrationInSubFrames: true. #34531 (Also in 20)
Fixed context menu not showing all items on macOS when dock is not hidden. #35194 (Also in 18, 19, 20)
Fixed crash in renderer when resuming system from sleep. #35336 (Also in 18, 19, 20)
Fixed empty app_id when running under wayland. #34855 (Also in 18, 19, 20)
Fixed enable promise support with webFrameMain.executeJavaScript. #35359 (Also in 20)
Fixed issue with history.back() in sandboxed iframes affecting parent browsing context. #35623 (Also in 19, 20)
Fixed linux arm64 builds to not require glibc 2.29+. #34491 (Also in 19, 20)
Fixed missing Sec-CH-UA headers and empty navigator.userAgentData. #34481 (Also in 17, 18, 19, 20)
Fixed native module compilation issues on arm. #34914 (Also in 20)
Fixed potential crash in WebFrameMain when performing a cross-origin navigation. #34411 (Also in 18, 19, 20)
Fixed session.getBlobData never resolves with blob sizes > 65536. #35602 (Also in 19, 20)
Fixed spontaneous crashing in native modules that depended on nan. #34844 (Also in 20)
Fixed support for Wayland client-side decorations. #34955 (Also in 19, 20)
Fixed symbol generation on 32-bit Windows release builds. #35078 (Also in 18, 19, 20)
Fixed undefined details.requestingUrl from session.setPermissionCheckHandler. #35409 (Also in 20)
Picture-In-Picture mode no longer becomes a red rectangle on hover. #35401 (Also in 19, 20)
Removed the skip-taskbar feature on Linux. #35123 (Also in 20)
Updated Windows Control Overlay buttons to look and feel more native on Windows 11. #34790 (Also in 20)
Other Changes
Backported fix for v8:13055. #34931 
Changed release uploads to now upload libcxx objects for MacOS x64 and arm64. #34586 
On Linux, changed the libgdk-pixbuf dependency to be dynamically linked rather than statically linked. #34077 (Also in 18, 19, 20)
Security: backported fix for CVE-2022-3075. #35543 
The undocumented page-title-set webview event has been removed. #34533 
WebContents for  are now only created after the 'will-attach-webview' event is emitted and preventDefault is not called. #32941 (Also in 20)
Documentation
Documentation changes: 
34451
35332
35334
35648
35667
35285
End of Support for 18.x.y
Electron 18.x.y has reached end-of-support as per the project's support policy. Developers and applications are encouraged to upgrade to a newer version of Electron."
158,"Release Notes for v19.1.0
Features

Added webFrameMain.origin. #35624 (Also in 20, 21)

Fixes

Enable WCO maximize button when window enters tablet mode and is not already maximized. #35677 (Also in 20, 21)
Fixed uv_os_gethostname failing on Windows 7. #35703 (Also in 20, 21)
Fixed a bug where calling atob in the renderer process could fail under some circumstances. #35444 (Also in 20, 21)
Fixed an edge case in app.isInApplicationsFolder() which would return false incorrectly in some cases. #35729 (Also in 20, 21)

Other Changes

Fixed an issue where a child of a window using WCO would not have the navigator defined. #35701 
Security: backported fix for CVE-2022-3038. #35548 
Security: backported fix for CVE-2022-3199. #35750 
","Release Notes for v19.1.0
Features
Added webFrameMain.origin. #35624 (Also in 20, 21)
Fixes
Enable WCO maximize button when window enters tablet mode and is not already maximized. #35677 (Also in 20, 21)
Fixed uv_os_gethostname failing on Windows 7. #35703 (Also in 20, 21)
Fixed a bug where calling atob in the renderer process could fail under some circumstances. #35444 (Also in 20, 21)
Fixed an edge case in app.isInApplicationsFolder() which would return false incorrectly in some cases. #35729 (Also in 20, 21)
Other Changes
Fixed an issue where a child of a window using WCO would not have the navigator defined. #35701 
Security: backported fix for CVE-2022-3038. #35548 
Security: backported fix for CVE-2022-3199. #35750 "
159,"Release Notes for v18.3.14
Other Changes

Security: backported fix for CVE-2022-3039. #35561 
Security: backported fix for CVE-2022-3040. #35551 
Security: backported fix for CVE-2022-3045. #35554 
Security: backported fix for CVE-2022-3046. #35550 
Security: backported fix for CVE-2022-3075. #35546 
Security: backported fix for CVE-2022-3197. #35790 
Security: backported fix for CVE-2022-3199. #35749 
Security: backported fix for chromium:1359294,v8:12578. #35775 
","Release Notes for v18.3.14
Other Changes
Security: backported fix for CVE-2022-3039. #35561 
Security: backported fix for CVE-2022-3040. #35551 
Security: backported fix for CVE-2022-3045. #35554 
Security: backported fix for CVE-2022-3046. #35550 
Security: backported fix for CVE-2022-3075. #35546 
Security: backported fix for CVE-2022-3197. #35790 
Security: backported fix for CVE-2022-3199. #35749 
Security: backported fix for chromium:1359294,v8:12578. #35775 "
160,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@21.0.0-beta.8.
# Release Notes for v21.0.0-beta.8
Fixes

Fixed uv_os_gethostname failing on Windows 7. #35704 (Also in 19, 20)
Fixed a crash that occured when loading non-standard schemes from iframes. #35517 
Fixed an edge case in app.isInApplicationsFolder() which would return false incorrectly in some cases. #35730 (Also in 19, 20)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@21.0.0-beta.8.
Release Notes for v21.0.0-beta.8
Fixes
Fixed uv_os_gethostname failing on Windows 7. #35704 (Also in 19, 20)
Fixed a crash that occured when loading non-standard schemes from iframes. #35517 
Fixed an edge case in app.isInApplicationsFolder() which would return false incorrectly in some cases. #35730 (Also in 19, 20)"
161,"Release Notes for v20.2.0
Features

Added webFrameMain.origin. #35535 (Also in 19, 21)

Fixes

Fixed uv_os_gethostname failing on Windows 7. #35705 (Also in 19, 21)
Fixed an edge case in app.isInApplicationsFolder() which would return false incorrectly in some cases. #35731 (Also in 19, 21)

Other Changes

Fixed an issue where a child of a window using WCO would not have the navigator defined. #35530 (Also in 19)
Updated Chromium to 104.0.5112.124. #35674 

Documentation

Documentation changes: #35666
","Release Notes for v20.2.0
Features
Added webFrameMain.origin. #35535 (Also in 19, 21)
Fixes
Fixed uv_os_gethostname failing on Windows 7. #35705 (Also in 19, 21)
Fixed an edge case in app.isInApplicationsFolder() which would return false incorrectly in some cases. #35731 (Also in 19, 21)
Other Changes
Fixed an issue where a child of a window using WCO would not have the navigator defined. #35530 (Also in 19)
Updated Chromium to 104.0.5112.124. #35674 
Documentation
Documentation changes: #35666"
162,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@21.0.0-beta.7.
# Release Notes for v21.0.0-beta.7
Features

Added webFrameMain.origin. #35534 (Also in 19, 20)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@21.0.0-beta.7.
Release Notes for v21.0.0-beta.7
Features
Added webFrameMain.origin. #35534 (Also in 19, 20)"
163,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@21.0.0-beta.6.
# Release Notes for v21.0.0-beta.6
Fixes

Enable WCO maximize button when window enters tablet mode and is not already maximized. #35664 (Also in 19, 20)
Fixed an issue where WCO could occlude DevTools opened in any non-detached mode. #35688 (Also in 18, 19, 20)
Fixed issue with history.back() in sandboxed iframes affecting parent browsing context. #35623 (Also in 19, 20)

Other Changes

Fixed an issue where some spellcheck functionality would incorrectly throw errors on macOS. #35679 
Updated Chromium to 106.0.5249.40. #35686 

Documentation

Documentation changes: #35648, #35667
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@21.0.0-beta.6.
Release Notes for v21.0.0-beta.6
Fixes
Enable WCO maximize button when window enters tablet mode and is not already maximized. #35664 (Also in 19, 20)
Fixed an issue where WCO could occlude DevTools opened in any non-detached mode. #35688 (Also in 18, 19, 20)
Fixed issue with history.back() in sandboxed iframes affecting parent browsing context. #35623 (Also in 19, 20)
Other Changes
Fixed an issue where some spellcheck functionality would incorrectly throw errors on macOS. #35679 
Updated Chromium to 106.0.5249.40. #35686 
Documentation
Documentation changes: #35648, #35667"
164,"Release Notes for v20.1.4
Fixes

Added support for Windows drop-down dialog extensions. #35659 (Also in 18, 19)
Enable WCO maximize button when window enters tablet mode and is not already maximized. #35663 (Also in 21)
Fixed issue with history.back() in sandboxed iframes affecting parent browsing context. #35622 (Also in 19, 21)

Other Changes

Security: backported fix for CVE-2022-3039. #35560 

Documentation

Documentation changes: #35649
","Release Notes for v20.1.4
Fixes
Added support for Windows drop-down dialog extensions. #35659 (Also in 18, 19)
Enable WCO maximize button when window enters tablet mode and is not already maximized. #35663 (Also in 21)
Fixed issue with history.back() in sandboxed iframes affecting parent browsing context. #35622 (Also in 19, 21)
Other Changes
Security: backported fix for CVE-2022-3039. #35560 
Documentation
Documentation changes: #35649"
165,"Release Notes for v19.0.17
Fixes

Added a background to the WCO container to avoid rendering glitches. #35610 (Also in 20, 21)
Added support for Windows drop-down dialog extensions. #35660 (Also in 18, 20)
Fixed issue with history.back() in sandboxed iframes affecting parent browsing context. #35621 (Also in 20, 21)
Fixed session.getBlobData never resolves with blob sizes > 65536. #35600 (Also in 20, 21)

Other Changes

Security: backported fix for CVE-2022-3075. #35545 

Documentation

Documentation changes: #35647
","Release Notes for v19.0.17
Fixes
Added a background to the WCO container to avoid rendering glitches. #35610 (Also in 20, 21)
Added support for Windows drop-down dialog extensions. #35660 (Also in 18, 20)
Fixed issue with history.back() in sandboxed iframes affecting parent browsing context. #35621 (Also in 20, 21)
Fixed session.getBlobData never resolves with blob sizes > 65536. #35600 (Also in 20, 21)
Other Changes
Security: backported fix for CVE-2022-3075. #35545 
Documentation
Documentation changes: #35647"
166,"Release Notes for v18.3.13
Fixes

Added support for Windows drop-down dialog extensions. #35661 (Also in 19, 20)
","Release Notes for v18.3.13
Fixes
Added support for Windows drop-down dialog extensions. #35661 (Also in 19, 20)"
167,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@21.0.0-beta.5.
# Release Notes for v21.0.0-beta.5
Fixes

Added a background to the WCO container to avoid rendering glitches. #35612 (Also in 19, 20)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@21.0.0-beta.5.
Release Notes for v21.0.0-beta.5
Fixes
Added a background to the WCO container to avoid rendering glitches. #35612 (Also in 19, 20)"
168,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@21.0.0-beta.4.
# Release Notes for v21.0.0-beta.4
Fixes

Fixed session.getBlobData never resolves with blob sizes > 65536. #35602 (Also in 19, 20)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@21.0.0-beta.4.
Release Notes for v21.0.0-beta.4
Fixes
Fixed session.getBlobData never resolves with blob sizes > 65536. #35602 (Also in 19, 20)"
169,"Release Notes for v20.1.3
Fixes

Added a background to the WCO container to avoid rendering glitches. #35611 (Also in 21)
Fixed session.getBlobData never resolves with blob sizes > 65536. #35601 (Also in 19, 21)
","Release Notes for v20.1.3
Fixes
Added a background to the WCO container to avoid rendering glitches. #35611 (Also in 21)
Fixed session.getBlobData never resolves with blob sizes > 65536. #35601 (Also in 19, 21)"
170,"Release Notes for v18.3.12
Other Changes

Security: backported fix for 1352549. #35556 
Security: backported fix for CVE-2022-3038. #35547 
Security: backported fix for CVE-2022-3041. #35559 
","Release Notes for v18.3.12
Other Changes
Security: backported fix for 1352549. #35556 
Security: backported fix for CVE-2022-3038. #35547 
Security: backported fix for CVE-2022-3041. #35559 "
171,"Release Notes for v20.1.2
Other Changes

Security: backported fix for CVE-2022-3038. #35549 
Security: backported fix for CVE-2022-3040. #35553 
Security: backported fix for CVE-2022-3041. #35557 
Security: backported fix for CVE-2022-3075. #35544 
Updated Chromium to 104.0.5112.114. #35570 
","Release Notes for v20.1.2
Other Changes
Security: backported fix for CVE-2022-3038. #35549 
Security: backported fix for CVE-2022-3040. #35553 
Security: backported fix for CVE-2022-3041. #35557 
Security: backported fix for CVE-2022-3075. #35544 
Updated Chromium to 104.0.5112.114. #35570 "
172,"Release Notes for v19.0.16
Other Changes

Security: backported fix for 1352549. #35555 
Security: backported fix for CVE-2022-3040. #35552 
Security: backported fix for CVE-2022-3041. #35558 
","Release Notes for v19.0.16
Other Changes
Security: backported fix for 1352549. #35555 
Security: backported fix for CVE-2022-3040. #35552 
Security: backported fix for CVE-2022-3041. #35558 "
173,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@21.0.0-beta.3.
# Release Notes for v21.0.0-beta.3
Fixes

Fixed an issue where screen.getCursorScreenPoint() crashed on Wayland when it was called before a BrowserWindow had been created. #35575 

Other Changes

Security: backported fix for CVE-2022-3075. #35543 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@21.0.0-beta.3.
Release Notes for v21.0.0-beta.3
Fixes
Fixed an issue where screen.getCursorScreenPoint() crashed on Wayland when it was called before a BrowserWindow had been created. #35575 
Other Changes
Security: backported fix for CVE-2022-3075. #35543 "
174,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@21.0.0-beta.2.
# Release Notes for v21.0.0-beta.2
Fixes

Fixed a crash when switching origins with emulation settings set. #35488 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@21.0.0-beta.2.
Release Notes for v21.0.0-beta.2
Fixes
Fixed a crash when switching origins with emulation settings set. #35488 "
175,"Release Notes for v20.1.1
Fixes

Fixed a bug where calling atob in the renderer process could fail under some circumstances. #35445 (Also in 21)
Fixed a potential crash on WebWorker destruction. #35491 (Also in 19, 21)
Fixed an issue where frameless windows with roundedCorners: false couldn't enter fullscreen without crashing. #35455 (Also in 19, 21)
Fixed an issue where part of the BrowserView could be cut off when calling setBounds on some windows. #35494 (Also in 19)
","Release Notes for v20.1.1
Fixes
Fixed a bug where calling atob in the renderer process could fail under some circumstances. #35445 (Also in 21)
Fixed a potential crash on WebWorker destruction. #35491 (Also in 19, 21)
Fixed an issue where frameless windows with roundedCorners: false couldn't enter fullscreen without crashing. #35455 (Also in 19, 21)
Fixed an issue where part of the BrowserView could be cut off when calling setBounds on some windows. #35494 (Also in 19)"
176,"Release Notes for v19.0.15
Fixes

Fixed a potential crash on WebWorker destruction. #35490 (Also in 20, 21)
Fixed an issue where frameless resizable windows showed Window 7 style frames while opening. #35351 (Also in 18, 20, 21)
Fixed an issue where frameless windows with roundedCorners: false couldn't enter fullscreen without crashing. #35456 (Also in 20, 21)
Fixed an issue where part of the BrowserView could be cut off when calling setBounds on some windows. #35495 (Also in 20)

Other Changes

Security: backported fix for CVE-2022-2854. #35427 
Security: backported fix for CVE-2022-2855. #35425 
","Release Notes for v19.0.15
Fixes
Fixed a potential crash on WebWorker destruction. #35490 (Also in 20, 21)
Fixed an issue where frameless resizable windows showed Window 7 style frames while opening. #35351 (Also in 18, 20, 21)
Fixed an issue where frameless windows with roundedCorners: false couldn't enter fullscreen without crashing. #35456 (Also in 20, 21)
Fixed an issue where part of the BrowserView could be cut off when calling setBounds on some windows. #35495 (Also in 20)
Other Changes
Security: backported fix for CVE-2022-2854. #35427 
Security: backported fix for CVE-2022-2855. #35425 "
177,"Release Notes for v18.3.11
Fixes

Fixed an issue where frameless resizable windows showed Window 7 style frames while opening. #35477 (Also in 19, 20, 21)

Other Changes

Security: backported fix for CVE-2022-2855. #35424 
Security: backported fix for CVE-2022-2857. #35426 
Security: backported fix for CVE-2022-2860. #35434 
","Release Notes for v18.3.11
Fixes
Fixed an issue where frameless resizable windows showed Window 7 style frames while opening. #35477 (Also in 19, 20, 21)
Other Changes
Security: backported fix for CVE-2022-2855. #35424 
Security: backported fix for CVE-2022-2857. #35426 
Security: backported fix for CVE-2022-2860. #35434 "
178,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@21.0.0-beta.1.
# Release Notes for v21.0.0-beta.1
Fixes

Fixed a potential crash on WebWorker destruction. #35492 (Also in 19)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@21.0.0-beta.1.
Release Notes for v21.0.0-beta.1
Fixes
Fixed a potential crash on WebWorker destruction. #35492 (Also in 19)"
179,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@21.0.0-alpha.6.
# Release Notes for v21.0.0-alpha.6
Fixes

Fixed a bug where calling atob in the renderer process could fail under some circumstances. #35443 (Also in 20)
Fixed an issue where frameless windows with roundedCorners: false couldn't enter fullscreen without crashing. #35454 (Also in 19, 20)
Fixed enable promise support with webFrameMain.executeJavaScript. #35359 (Also in 20)
Fixed undefined details.requestingUrl from session.setPermissionCheckHandler. #35409 (Also in 20)
Picture-In-Picture mode no longer becomes a red rectangle on hover. #35401 (Also in 19, 20)

Other Changes

Updated Chromium to 106.0.5216.0. #35363 
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@21.0.0-alpha.6.
Release Notes for v21.0.0-alpha.6
Fixes
Fixed a bug where calling atob in the renderer process could fail under some circumstances. #35443 (Also in 20)
Fixed an issue where frameless windows with roundedCorners: false couldn't enter fullscreen without crashing. #35454 (Also in 19, 20)
Fixed enable promise support with webFrameMain.executeJavaScript. #35359 (Also in 20)
Fixed undefined details.requestingUrl from session.setPermissionCheckHandler. #35409 (Also in 20)
Picture-In-Picture mode no longer becomes a red rectangle on hover. #35401 (Also in 19, 20)
Other Changes
Updated Chromium to 106.0.5216.0. #35363 "
180,"Release Notes for v20.1.0
Fixes

Fixed enable promise support with webFrameMain.executeJavaScript. #35358 (Also in 21)
Fixed undefined details.requestingUrl from session.setPermissionCheckHandler. #35408 (Also in 21)
Picture-In-Picture mode no longer becomes a red rectangle on hover. #35402 (Also in 19, 21)

Other Changes

Updated Chromium to 104.0.5112.102. #35361 
","Release Notes for v20.1.0
Fixes
Fixed enable promise support with webFrameMain.executeJavaScript. #35358 (Also in 21)
Fixed undefined details.requestingUrl from session.setPermissionCheckHandler. #35408 (Also in 21)
Picture-In-Picture mode no longer becomes a red rectangle on hover. #35402 (Also in 19, 21)
Other Changes
Updated Chromium to 104.0.5112.102. #35361 "
181,"Release Notes for v19.0.14
Fixes

Picture-In-Picture mode no longer becomes a red rectangle on hover. #35400 (Also in 20, 21)
","Release Notes for v19.0.14
Fixes
Picture-In-Picture mode no longer becomes a red rectangle on hover. #35400 (Also in 20, 21)"
182,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@21.0.0-alpha.5.
# Release Notes for v21.0.0-alpha.5","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@21.0.0-alpha.5.
Release Notes for v21.0.0-alpha.5"
183,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@21.0.0-alpha.4.
# Release Notes for v21.0.0-alpha.4
Features

Added new WebContents.ipc and WebFrameMain.ipc APIs. #35231 

Fixes

Fixed an issue where serialPort.open() failed with NetworkError: Failed to open serial port.. #35339 
Fixed an issue where frameless resizable windows showed Window 7 style frames while opening. #35353 (Also in 20)
Fixed crash in renderer when resuming system from sleep. #35336 (Also in 18, 19, 20)
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@21.0.0-alpha.4.
Release Notes for v21.0.0-alpha.4
Features
Added new WebContents.ipc and WebFrameMain.ipc APIs. #35231 
Fixes
Fixed an issue where serialPort.open() failed with NetworkError: Failed to open serial port.. #35339 
Fixed an issue where frameless resizable windows showed Window 7 style frames while opening. #35353 (Also in 20)
Fixed crash in renderer when resuming system from sleep. #35336 (Also in 18, 19, 20)"
184,"Release Notes for v20.0.3
Fixes

Fixed an issue where WCO could occlude DevTools opened in any non-detached mode. #35309 (Also in 18, 19)
Fixed an issue where frameless resizable windows showed Window 7 style frames while opening. #35352 
Fixed crash in renderer when resuming system from sleep. #35338 (Also in 18, 19, 21)
Prevent brief display of ""Ozone X11"" in window title on Linux. #35317 (Also in 18)

Documentation

Documentation changes: #35331, #35333
","Release Notes for v20.0.3
Fixes
Fixed an issue where WCO could occlude DevTools opened in any non-detached mode. #35309 (Also in 18, 19)
Fixed an issue where frameless resizable windows showed Window 7 style frames while opening. #35352 
Fixed crash in renderer when resuming system from sleep. #35338 (Also in 18, 19, 21)
Prevent brief display of ""Ozone X11"" in window title on Linux. #35317 (Also in 18)
Documentation
Documentation changes: #35331, #35333"
185,"Release Notes for v19.0.13
Fixes

Fixed an issue where WCO could occlude DevTools opened in any non-detached mode. #35308 (Also in 18, 20)
Fixed crash in renderer when resuming system from sleep. #35337 (Also in 18, 20, 21)
Fixed the alignment of the WCO restore button. #35314 (Also in 20)

Other Changes

Backported fix for 1333970. #35267 
Security: backported fix for CVE-2022-2618. #35273 
Security: backported fix for CVE-2022-2624. #35269 
","Release Notes for v19.0.13
Fixes
Fixed an issue where WCO could occlude DevTools opened in any non-detached mode. #35308 (Also in 18, 20)
Fixed crash in renderer when resuming system from sleep. #35337 (Also in 18, 20, 21)
Fixed the alignment of the WCO restore button. #35314 (Also in 20)
Other Changes
Backported fix for 1333970. #35267 
Security: backported fix for CVE-2022-2618. #35273 
Security: backported fix for CVE-2022-2624. #35269 "
186,"Release Notes for v18.3.9
Fixes

Fixed an issue where WCO could occlude DevTools opened in any non-detached mode. #35307 (Also in 19, 20)
Fixed crash in renderer when resuming system from sleep. #35340 (Also in 19, 20, 21)

Other Changes

Backported fix for 1333970. #35268 
Security: backported fix for CVE-2022-2610. #35272 
Security: backported fix for CVE-2022-2615. #35276 
","Release Notes for v18.3.9
Fixes
Fixed an issue where WCO could occlude DevTools opened in any non-detached mode. #35307 (Also in 19, 20)
Fixed crash in renderer when resuming system from sleep. #35340 (Also in 19, 20, 21)
Other Changes
Backported fix for 1333970. #35268 
Security: backported fix for CVE-2022-2610. #35272 
Security: backported fix for CVE-2022-2615. #35276 "
187,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@21.0.0-alpha.3.
# Release Notes for v21.0.0-alpha.3
Documentation

Documentation changes: #35332, #35334
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@21.0.0-alpha.3.
Release Notes for v21.0.0-alpha.3
Documentation
Documentation changes: #35332, #35334"
188,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@21.0.0-alpha.2.
# Release Notes for v21.0.0-alpha.2
Fixes

Fixed an issue where app.relaunch loses args when execPath is specified. #35254 (Also in 19, 20)

Unknown

Fixed a typo in the section on debugging with VSCode. #35285 (Also in 19, 20)
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@21.0.0-alpha.2.
Release Notes for v21.0.0-alpha.2
Fixes
Fixed an issue where app.relaunch loses args when execPath is specified. #35254 (Also in 19, 20)
Unknown
Fixed a typo in the section on debugging with VSCode. #35285 (Also in 19, 20)"
189,"Release Notes for v20.0.2
Fixes

Fixed an issue where app.relaunch loses args when execPath is specified. #35253 (Also in 19, 21)
Fixed context menu not showing all items on macOS when dock is not hidden. #35200 (Also in 18, 19)
Fixed support for Wayland client-side decorations. #35206 (Also in 19)

Unknown

Fixed a typo in the section on debugging with VSCode. #35286 (Also in 19, 21)
","Release Notes for v20.0.2
Fixes
Fixed an issue where app.relaunch loses args when execPath is specified. #35253 (Also in 19, 21)
Fixed context menu not showing all items on macOS when dock is not hidden. #35200 (Also in 18, 19)
Fixed support for Wayland client-side decorations. #35206 (Also in 19)
Unknown
Fixed a typo in the section on debugging with VSCode. #35286 (Also in 19, 21)"
190,"Release Notes for v19.0.12
Fixes

Fixed an issue where app.relaunch loses args when execPath is specified. #35252 (Also in 20, 21)
Fixed support for Wayland client-side decorations. #35207 (Also in 20)

Other Changes

Security: backported fix for 1264288. #35237 
Security: backported fix for CVE-2022-2610. #35271 
Security: backported fix for CVE-2022-2615. #35275 
Security: backported fix for chromium:1343889. #35239 

Unknown

Fixed a typo in the section on debugging with VSCode. #35284 (Also in 20, 21)
","Release Notes for v19.0.12
Fixes
Fixed an issue where app.relaunch loses args when execPath is specified. #35252 (Also in 20, 21)
Fixed support for Wayland client-side decorations. #35207 (Also in 20)
Other Changes
Security: backported fix for 1264288. #35237 
Security: backported fix for CVE-2022-2610. #35271 
Security: backported fix for CVE-2022-2615. #35275 
Security: backported fix for chromium:1343889. #35239 
Unknown
Fixed a typo in the section on debugging with VSCode. #35284 (Also in 20, 21)"
191,"Release Notes for v18.3.8
Fixes

Added support for --ozone-platform-hint flag on Linux. #35013 (Also in 19, 20)
Fixed a Windows Control Overlay issue where a window taken directly from minimized to maximized state could have incorrect hover state. #35072 (Also in 19, 20)

Other Changes

Security: backported fix for 1264288. #35236 
Security: backported fix for CVE-2022-2618. #35274 
Security: backported fix for CVE-2022-2624. #35270 
Security: backported fix for chromium:1343889. #35238 
","Release Notes for v18.3.8
Fixes
Added support for --ozone-platform-hint flag on Linux. #35013 (Also in 19, 20)
Fixed a Windows Control Overlay issue where a window taken directly from minimized to maximized state could have incorrect hover state. #35072 (Also in 19, 20)
Other Changes
Security: backported fix for 1264288. #35236 
Security: backported fix for CVE-2022-2618. #35274 
Security: backported fix for CVE-2022-2624. #35270 
Security: backported fix for chromium:1343889. #35238 "
192,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@21.0.0-alpha.1.
# Release Notes for v21.0.0-alpha.1
Breaking Changes

Enabled the V8 memory cage for external buffers. See https://www.electronjs.org/blog/v8-memory-cage for more details. #34724 
Refactored webContents.printToPDF to align with the Chrome Devtools implementation. #33654 
Renderers are now sandboxed by default unless nodeIntegration: true or sandbox: false is specified. #32869 (Also in 20)

Features

Added immersive dark mode on Windows. #33624 (Also in 20)
Added support for panel-like behavior. Window can float over full-screened apps. #34388 (Also in 20)
Added support for push notifications from APNs for macOS apps. #33574 

Fixes

Added support for --ozone-platform-hint flag on Linux. #34937 (Also in 19, 20)
Adds a warning for building native modules with node-gyp and electron-rebuild, encouraging users to upgrade to >=8.4.0 for node-gyp and >=3.2.8 for electron-rebuild if using Electron 20 or higher.. #35159 (Also in 20)
Do not exit when logging initialization fails. #35138 (Also in 20)
Enable missing HKDF support in Node.js crypto. #34767 
Ensures that requestMediaKeySystemAccess eventually resolves / rejects. #34886 (Also in 19, 20)
Fixed 20.0.0-beta.8 X11 crash regression. #35075 (Also in 20)
Fixed WCO not responding to touch events on windows. #35117 (Also in 18, 19, 20)
Fixed _dyld_missing_symbol_abort crash on macOS when using c++ native modules. #34932 (Also in 20)
Fixed serial-port-added and serial-port-removed events not firing. #34958 (Also in 20)
Fixed webContents.getUserAgent() incorrectly returning an empty string unless previously set. #35069 (Also in 17, 18, 19, 20)
Fixed a Windows Control Overlay issue where a window taken directly from minimized to maximized state could have incorrect hover state. #35070 (Also in 19, 20)
Fixed a crash when calling BrowserWindow.setEnabled(). #34904 (Also in 18, 19, 20)
Fixed a crash when loading a same-origin URL after a render process crash. #34428 (Also in 18, 19, 20)
Fixed a performance problem in crashReporter.start() on macOS. #34609 (Also in 17, 18, 19, 20)
Fixed a potential crash when changing window settings after initializing WCO with an invalid titleBarStyle. #34833 (Also in 17, 18, 19, 20)
Fixed a potential printing hang. #34892 (Also in 20)
Fixed alwaysOnTop BrowserWindow option for X11 Linux. #34766 (Also in 18, 19, 20)
Fixed an error where setWindowOpenHandler() would crash if the callback threw an error. #34523 (Also in 17, 18, 19, 20)
Fixed an issue in which calling setBounds() after e.preventDefault in a 'will-move' or 'will-resize' event wouldn't change the window's shape until the mouse button was released. #34843 (Also in 18, 19, 20)
Fixed an issue where BrowserWindows on macOS were incorrectly marked as resizable. #34379 (Also in 18, 19, 20)
Fixed an issue where DataList bounds had part of the item text cut off vertically. #34759 (Also in 19, 20)
Fixed an issue where Windows Control Overlay buttons did not respect  maximizable/minimizable/closable states of a BrowserWindow. #34677 (Also in 17, 18, 19, 20)
Fixed an issue where calling BrowserWindow.setRepresentedFilename on macOS with titlebarStyle: 'hiddenInset'  or titlebarStyle: 'hidden' inadvertently moves the traffic light location. #34834 (Also in 18, 19, 20)
Fixed an issue where calling w.setWindowButtonVisibility(true) immediately after exiting fullscreen fails to show window buttons. #34530 (Also in 18, 19, 20)
Fixed an issue where draggable regions were not recalculated when BrowserView bounds changed on Windows. #34582 (Also in 18, 19, 20)
Fixed an issue where invalid pageSize values would cause a silent hang and eventual crash. #34893 
Fixed an issue where invalid print job settings would correctly call back Invalid print settings as the failure reason, but would then not terminate the print job, leading to an eventual crash on exit. #34894 (Also in 20)
Fixed an issue where media keys would be sent to Electron on Windows no matter which window was in focus. #34594 (Also in 19, 20)
Fixed an issue where normal bounds would not be appropriately updated if the user minimized with the minimize button. #34473 (Also in 18, 19, 20)
Fixed an issue where passing { name: 'All Files', extensions: ['*'] } in the filters param of open or save dialogs on Linux would disallow choosing files without an extension. #34496 (Also in 18, 19, 20)
Fixed an issue where printing with an invalid deviceName on Linux caused silent failures. #34872 (Also in 19, 20)
Fixed an issue where the minimize button with WCO enabled would incorrectly be highlighted in some cases. #34771 (Also in 17, 18, 19, 20)
Fixed an issue where zombie windows can be created if window.close() is called during a fullscreen transition. #34378 (Also in 17, 18, 19, 20)
Fixed an issue with fullscreen transitions when HTML fullscreen is requested. #32905 (Also in 19, 20)
Fixed child about:blank windows from inheriting their parents' preload scripts when sandbox: false and nodeIntegrationInSubFrames: true. #34531 (Also in 20)
Fixed context menu not showing all items on macOS when dock is not hidden. #35194 (Also in 18, 19)
Fixed empty app_id when running under wayland. #34855 (Also in 18, 19, 20)
Fixed linux arm64 builds to not require glibc 2.29+. #34491 (Also in 19, 20)
Fixed missing Sec-CH-UA headers and empty navigator.userAgentData. #34481 (Also in 17, 18, 19, 20)
Fixed native module compilation issues on arm. #34914 (Also in 20)
Fixed potential crash in WebFrameMain when performing a cross-origin navigation. #34411 (Also in 18, 19, 20)
Fixed spontaneous crashing in native modules that depended on nan. #34844 (Also in 20)
Fixed support for Wayland client-side decorations. #34955 
Fixed symbol generation on 32-bit Windows release builds. #35078 (Also in 18, 19, 20)
Fixed the 'length' property in UploadFile objects being ignored. #34657 
None. #34723 (Also in 18, 19, 20)
Removed the skip-taskbar feature on Linux. #35123 (Also in 20)
Updated Windows Control Overlay buttons to look and feel more native on Windows 11. #34790 (Also in 20)

Other Changes

Added deprecation warning for the new-window event. #34528 (Also in 20)
Backported fix for v8:13055. #34931 
Changed release uploads to now upload libcxx objects for MacOS x64 and arm64. #34586 
Fixed an issue where BrowserViews didn't always visually update after call to setBounds. #34581 (Also in 18, 19, 20)
On Linux, changed the libgdk-pixbuf dependency to be dynamically linked rather than statically linked. #34077 (Also in 18, 19, 20)
The undocumented page-title-set webview event has been removed. #34533 
Updated Chromium to 105.0.5187.0. #34921 
Updated Node.js to v16.16.0. #34853 
WebContents for <webview> are now only created after the 'will-attach-webview' event is emitted and preventDefault is not called. #32941 (Also in 20)

Documentation

Documentation changes: #34451
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@21.0.0-alpha.1.
Release Notes for v21.0.0-alpha.1
Breaking Changes
Enabled the V8 memory cage for external buffers. See link for more details. #34724 
Refactored webContents.printToPDF to align with the Chrome Devtools implementation. #33654 
Renderers are now sandboxed by default unless nodeIntegration: true or sandbox: false is specified. #32869 (Also in 20)
Features
Added immersive dark mode on Windows. #33624 (Also in 20)
Added support for panel-like behavior. Window can float over full-screened apps. #34388 (Also in 20)
Added support for push notifications from APNs for macOS apps. #33574 
Fixes
Added support for --ozone-platform-hint flag on Linux. #34937 (Also in 19, 20)
Adds a warning for building native modules with node-gyp and electron-rebuild, encouraging users to upgrade to >=8.4.0 for node-gyp and >=3.2.8 for electron-rebuild if using Electron 20 or higher.. #35159 (Also in 20)
Do not exit when logging initialization fails. #35138 (Also in 20)
Enable missing HKDF support in Node.js crypto. #34767 
Ensures that requestMediaKeySystemAccess eventually resolves / rejects. #34886 (Also in 19, 20)
Fixed 20.0.0-beta.8 X11 crash regression. #35075 (Also in 20)
Fixed WCO not responding to touch events on windows. #35117 (Also in 18, 19, 20)
Fixed _dyld_missing_symbol_abort crash on macOS when using c++ native modules. #34932 (Also in 20)
Fixed serial-port-added and serial-port-removed events not firing. #34958 (Also in 20)
Fixed webContents.getUserAgent() incorrectly returning an empty string unless previously set. #35069 (Also in 17, 18, 19, 20)
Fixed a Windows Control Overlay issue where a window taken directly from minimized to maximized state could have incorrect hover state. #35070 (Also in 19, 20)
Fixed a crash when calling BrowserWindow.setEnabled(). #34904 (Also in 18, 19, 20)
Fixed a crash when loading a same-origin URL after a render process crash. #34428 (Also in 18, 19, 20)
Fixed a performance problem in crashReporter.start() on macOS. #34609 (Also in 17, 18, 19, 20)
Fixed a potential crash when changing window settings after initializing WCO with an invalid titleBarStyle. #34833 (Also in 17, 18, 19, 20)
Fixed a potential printing hang. #34892 (Also in 20)
Fixed alwaysOnTop BrowserWindow option for X11 Linux. #34766 (Also in 18, 19, 20)
Fixed an error where setWindowOpenHandler() would crash if the callback threw an error. #34523 (Also in 17, 18, 19, 20)
Fixed an issue in which calling setBounds() after e.preventDefault in a 'will-move' or 'will-resize' event wouldn't change the window's shape until the mouse button was released. #34843 (Also in 18, 19, 20)
Fixed an issue where BrowserWindows on macOS were incorrectly marked as resizable. #34379 (Also in 18, 19, 20)
Fixed an issue where DataList bounds had part of the item text cut off vertically. #34759 (Also in 19, 20)
Fixed an issue where Windows Control Overlay buttons did not respect  maximizable/minimizable/closable states of a BrowserWindow. #34677 (Also in 17, 18, 19, 20)
Fixed an issue where calling BrowserWindow.setRepresentedFilename on macOS with titlebarStyle: 'hiddenInset'  or titlebarStyle: 'hidden' inadvertently moves the traffic light location. #34834 (Also in 18, 19, 20)
Fixed an issue where calling w.setWindowButtonVisibility(true) immediately after exiting fullscreen fails to show window buttons. #34530 (Also in 18, 19, 20)
Fixed an issue where draggable regions were not recalculated when BrowserView bounds changed on Windows. #34582 (Also in 18, 19, 20)
Fixed an issue where invalid pageSize values would cause a silent hang and eventual crash. #34893 
Fixed an issue where invalid print job settings would correctly call back Invalid print settings as the failure reason, but would then not terminate the print job, leading to an eventual crash on exit. #34894 (Also in 20)
Fixed an issue where media keys would be sent to Electron on Windows no matter which window was in focus. #34594 (Also in 19, 20)
Fixed an issue where normal bounds would not be appropriately updated if the user minimized with the minimize button. #34473 (Also in 18, 19, 20)
Fixed an issue where passing { name: 'All Files', extensions: ['*'] } in the filters param of open or save dialogs on Linux would disallow choosing files without an extension. #34496 (Also in 18, 19, 20)
Fixed an issue where printing with an invalid deviceName on Linux caused silent failures. #34872 (Also in 19, 20)
Fixed an issue where the minimize button with WCO enabled would incorrectly be highlighted in some cases. #34771 (Also in 17, 18, 19, 20)
Fixed an issue where zombie windows can be created if window.close() is called during a fullscreen transition. #34378 (Also in 17, 18, 19, 20)
Fixed an issue with fullscreen transitions when HTML fullscreen is requested. #32905 (Also in 19, 20)
Fixed child about:blank windows from inheriting their parents' preload scripts when sandbox: false and nodeIntegrationInSubFrames: true. #34531 (Also in 20)
Fixed context menu not showing all items on macOS when dock is not hidden. #35194 (Also in 18, 19)
Fixed empty app_id when running under wayland. #34855 (Also in 18, 19, 20)
Fixed linux arm64 builds to not require glibc 2.29+. #34491 (Also in 19, 20)
Fixed missing Sec-CH-UA headers and empty navigator.userAgentData. #34481 (Also in 17, 18, 19, 20)
Fixed native module compilation issues on arm. #34914 (Also in 20)
Fixed potential crash in WebFrameMain when performing a cross-origin navigation. #34411 (Also in 18, 19, 20)
Fixed spontaneous crashing in native modules that depended on nan. #34844 (Also in 20)
Fixed support for Wayland client-side decorations. #34955 
Fixed symbol generation on 32-bit Windows release builds. #35078 (Also in 18, 19, 20)
Fixed the 'length' property in UploadFile objects being ignored. #34657 
None. #34723 (Also in 18, 19, 20)
Removed the skip-taskbar feature on Linux. #35123 (Also in 20)
Updated Windows Control Overlay buttons to look and feel more native on Windows 11. #34790 (Also in 20)
Other Changes
Added deprecation warning for the new-window event. #34528 (Also in 20)
Backported fix for v8:13055. #34931 
Changed release uploads to now upload libcxx objects for MacOS x64 and arm64. #34586 
Fixed an issue where BrowserViews didn't always visually update after call to setBounds. #34581 (Also in 18, 19, 20)
On Linux, changed the libgdk-pixbuf dependency to be dynamically linked rather than statically linked. #34077 (Also in 18, 19, 20)
The undocumented page-title-set webview event has been removed. #34533 
Updated Chromium to 105.0.5187.0. #34921 
Updated Node.js to v16.16.0. #34853 
WebContents for  are now only created after the 'will-attach-webview' event is emitted and preventDefault is not called. #32941 (Also in 20)
Documentation
Documentation changes: #34451"
193,"Release Notes for v20.0.1
Fixes

Do not exit when logging initialization fails. #35190 
Fixed WCO not responding to touch events on windows. #35174 (Also in 18, 19)

Other Changes

Updated Chromium to 104.0.5112.81. #35181 
","Release Notes for v20.0.1
Fixes
Do not exit when logging initialization fails. #35190 
Fixed WCO not responding to touch events on windows. #35174 (Also in 18, 19)
Other Changes
Updated Chromium to 104.0.5112.81. #35181 "
194,"Release Notes for v19.0.11
Fixes

Fixed WCO not responding to touch events on windows. #35176 (Also in 18, 20)
Fixed webContents.getUserAgent() incorrectly returning an empty string unless previously set. #35132 (Also in 17, 18, 20)
Fixed context menu not showing all items on macOS when dock is not hidden. #35199 (Also in 18)
None. #35172 (Also in 18, 20)

Other Changes

Disabled GPU acceleration on VMware on Linux. #35185 
","Release Notes for v19.0.11
Fixes
Fixed WCO not responding to touch events on windows. #35176 (Also in 18, 20)
Fixed webContents.getUserAgent() incorrectly returning an empty string unless previously set. #35132 (Also in 17, 18, 20)
Fixed context menu not showing all items on macOS when dock is not hidden. #35199 (Also in 18)
None. #35172 (Also in 18, 20)
Other Changes
Disabled GPU acceleration on VMware on Linux. #35185 "
195,"Release Notes for v18.3.7
Fixes

Fixed WCO not responding to touch events on windows. #35177 (Also in 19, 20)
Fixed webContents.getUserAgent() incorrectly returning an empty string unless previously set. #35130 (Also in 17, 19, 20)
Fixed an issue in which calling setBounds() after e.preventDefault in a 'will-move' or 'will-resize' event wouldn't change the window's shape until the mouse button was released. #35082 (Also in 19, 20)
Fixed context menu not showing all items on macOS when dock is not hidden. #35198 (Also in 19)
None. #35171 (Also in 19, 20)

Other Changes

Fixed page size always being restricted to 4k on Linux arm64. #35184 
Security: backported fix for CVE-2022-2478. #35099 
Security: backported fix for chromium:1334864. #35097 
","Release Notes for v18.3.7
Fixes
Fixed WCO not responding to touch events on windows. #35177 (Also in 19, 20)
Fixed webContents.getUserAgent() incorrectly returning an empty string unless previously set. #35130 (Also in 17, 19, 20)
Fixed an issue in which calling setBounds() after e.preventDefault in a 'will-move' or 'will-resize' event wouldn't change the window's shape until the mouse button was released. #35082 (Also in 19, 20)
Fixed context menu not showing all items on macOS when dock is not hidden. #35198 (Also in 19)
None. #35171 (Also in 19, 20)
Other Changes
Fixed page size always being restricted to 4k on Linux arm64. #35184 
Security: backported fix for CVE-2022-2478. #35099 
Security: backported fix for chromium:1334864. #35097 "
196,"Release Notes for v20.0.0
Stack Upgrades

Chromium 104.0.5112.65.
New in 104
New in 103


Node v16.15.0
v16.15.0 release notes


V8 v10.4

Breaking Changes

Removed the skip-taskbar feature on Linux. #35156 
Renderers are now sandboxed by default unless nodeIntegration: true or sandbox: false is specified. #35125
Added safeguards when building native modules with nan. Use node-gyp >=8.4.0 and electron-rebuild >=3.2.9 for when rebuilding native modules. #35160

Features
Additions

Added a warning for building native modules with node-gyp and electron-rebuild, asking users to upgrade to >=8.4.0 for node-gyp and >=3.2.8 for electron-rebuild if using Electron 20 or higher. #35160
Added app.isHidden() to check if the app is hidden (e.g. with Command-H) on macOS. #32155 
Added browserData to app.setPath/getPath. #33554 
Added immersive dark mode on Windows. #34549 
Added support for HIDDevice.forget(). #34210 
Added support for panel-like behavior. Window can float over full-screened apps. #34665 
Enabled systemPreferences.subscribe{Local|Workspace}Notification to take a null value for the event parameter. #33641 (Also in 18, 19)
Fixed an issue where the PDF Viewer would fail if a user attempted to reload. #33560 (Also in 18, 19)

Fixes

Fixed 20.0.0-beta.8 X11 crash regression. #35092
Fixed _dyld_missing_symbol_abort crash on macOS when using c++ native modules. #34944 
Fixed serial-port-added and serial-port-removed events not firing. #35047 
Fixed a potential printing hang. #34968
Fixed an issue where invalid print job settings would correctly call back Invalid print settings as the failure reason, but would then not terminate the print job, leading to an eventual crash on exit. #35141 
Fixed an issue with fullscreen transitions when HTML fullscreen is requested. #34468
Fixed child about:blank windows from inheriting their parents' preload scripts when sandbox: false and nodeIntegrationInSubFrames: true. #34585
Fixed initialization race when registering partition allocator on macOS. #33832
Fixed native module compilation issues on arm. #35137 
Fixed spontaneous crashing in native modules that depended on nan. #34851
Updated Windows Control Overlay buttons to look and feel more native on Windows 11. #34888 

Also in earlier versions....

Added support for --ozone-platform-hint flag on Linux. #35014 (Also in 19)
Apply senderFrame details to ipcMain port event. #33756 (Also in 16, 17, 18, 19)
Ensures that requestMediaKeySystemAccess eventually resolves / rejects. #34891 (Also in 19)
Fixed webContents.getUserAgent() incorrectly returning an empty string unless previously set. #35131 (Also in 18, 19)
Fixed a Windows Control Overlay issue where a window taken directly from minimized to maximized state could have incorrect hover state. #35074 (Also in 19)
Fixed a crash in safeStorage on Linux. #33913 (Also in 15, 16, 17, 18, 19)
Fixed a crash on Windows when opening apps in multiple, separate user sessions. #34139 (Also in 18, 19)
Fixed a crash when calling BrowserWindow.setEnabled(). #34972 (Also in 18, 19)
Fixed a crash when calling loadExtension on an extension directory that's missing a manifest file. #34168 (Also in 16, 17, 19)
Fixed a crash when loading a same-origin URL after a render process crash. #34432 (Also in 18, 19)
Fixed a performance problem in crashReporter.start() on macOS. #34639 (Also in 17, 18, 19)
Fixed a potential crash when calling webContents.print(). #34271 (Also in 19)
Fixed a potential crash when changing window settings after initializing WCO with an invalid titleBarStyle. #34875 (Also in 17, 18, 19)
Fixed alwaysOnTop BrowserWindow option for X11 Linux. #34913 (Also in 18, 19)
Fixed an OSR crash happening when input select items were rendered. #34069 (Also in 17, 18, 19)
Fixed an error where setWindowOpenHandler() would crash if the callback threw an error. #34547 (Also in 17, 18, 19)
Fixed an issue in which calling setBounds() after e.preventDefault in a 'will-move' or 'will-resize' event wouldn't change the window's shape until the mouse button was released. #35084 (Also in 19)
Fixed an issue where BrowserWindows on macOS were incorrectly marked as resizable. #34433 (Also in 18, 19)
Fixed an issue where DataList bounds had part of the item text cut off vertically. #34786 (Also in 19)
Fixed an issue where Windows Control Overlay buttons did not respect  maximizable/minimizable/closable states of a BrowserWindow. #34721 (Also in 17, 18, 19)
Fixed an issue where #ARGB ->#RGBA and #AARRGGBB ->#RRGGBBAA were converted improperly when setting background color. #33707 (Also in 19)
Fixed an issue where BrowserWindow#isFocused() was returning false when blur() was called on macOS. #33734 (Also in 17, 18, 19)
Fixed an issue where Escape keyboard events would not be properly propagated to the parent window after entering fullscreen and then exiting it again on Windows. #33757 (Also in 18, 19)
Fixed an issue where bounds changes were incorrectly delayed in the case where a window was moved or resized and event.preventDefault was called in either will-resize or will-move on Windows. #34204 (Also in 16, 17, 19)
Fixed an issue where calling BrowserWindow.setRepresentedFilename on macOS with titlebarStyle: 'hiddenInset'  or titlebarStyle: 'hidden' inadvertently moves the traffic light location. #34849 (Also in 18, 19)
Fixed an issue where calling SetLoginItemSettings() could potentially cause network volumes to be incorrectly mounted. #34068 (Also in 17, 18, 19)
Fixed an issue where calling setTitlebarOverlay with an initially invalid titleBarStyle on Windows would result in a crash. #34140 (Also in 19)
Fixed an issue where calling w.setWindowButtonVisibility(true) immediately after exiting fullscreen fails to show window buttons. #34675 (Also in 18, 19)
Fixed an issue where draggable regions were not recalculated when BrowserView bounds changed on Windows. #34612 (Also in 18, 19)
Fixed an issue where media keys would be sent to Electron on Windows no matter which window was in focus. #34647 (Also in 19)
Fixed an issue where mixed-case extension filters in file dialogs were ignored on Linux. #33918 (Also in 18, 19)
Fixed an issue where normal bounds would not be appropriately updated if the user minimized with the minimize button. #34486 (Also in 18, 19)
Fixed an issue where passing { name: 'All Files', extensions: ['*'] } in the filters param of open or save dialogs on Linux would disallow choosing files without an extension. #34516 (Also in 18, 19)
Fixed an issue where pressing escape would not un-fullscreen on Windows or Linux in some circumstances. #34317 (Also in 18, 19)
Fixed an issue where printing with an invalid deviceName on Linux caused silent failures. #34901 (Also in 19)
Fixed an issue where running second instances of the same application would cause a deadlock on Windows. #34297 (Also in 18, 19)
Fixed an issue where some BrowserWindows opened from new links wouldn't properly load URLs. #34159 (Also in 19)
Fixed an issue where the minimize button with WCO enabled would incorrectly be highlighted in some cases. #34840 (Also in 17, 18, 19)
Fixed an issue where the window bounds would incorrectly change if BrowserWindow.unmaximize was called on a window whose user bounds were maximized. #33480 (Also in 16, 17, 18, 19)
Fixed an issue where tray items wouldn't highlight in some scenarios on macOS. #34173 (Also in 16, 17, 18, 19)
Fixed an issue where zombie windows can be created if window.close() is called during a fullscreen transition. #34393 (Also in 17, 18, 19)
Fixed an issue with the app.requestSingleInstanceLock() API where it would sometimes hang. #33777 (Also in 18, 19)
Fixed behavior of BrowserWindow.maximize on macOS for not shown windows. #32949 (Also in 15, 16, 17, 18, 19)
Fixed building node modules with Visual Studio 2017. #34109 (Also in 18, 19)
Fixed building node modules with Visual Studio 2017. #34217 (Also in 19)
Fixed crash on startup due to missing gtk symbol on older distros. #34141 (Also in 18, 19)
Fixed crash when calling navigator.serial.getPorts(). #34280 (Also in 17, 18, 19)
Fixed crash when img without alt is shown with accessibility features enabled. #33840 (Also in 19)
Fixed crash when opening gtk file dialogs due to mismatched versions. #33650 (Also in 18, 19)
Fixed empty app_id when running under wayland. #34879 (Also in 18, 19)
Fixed incorrect return value of app.requestSingleInstanceLock() when setting non-existent user data folder. #33559 (Also in 16, 17, 18, 19)
Fixed issues with frameless window animations and styling. #33599 (Also in 15, 16, 17, 18, 19)
Fixed linux arm64 builds to not require glibc 2.29+. #34503 (Also in 19)
Fixed missing Sec-CH-UA headers and empty navigator.userAgentData. #34524 (Also in 17, 18, 19)
Fixed potential crash in WebFrameMain when performing a cross-origin navigation. #34417 (Also in 18, 19)
Fixed potential crash while generating accessibility trees for certain images. #33614 (Also in 18, 19)
Fixed potential crash with WebFrameMain when navigating between cross-origin websites. #33919 (Also in 18, 19)
Fixed service worker registration with custom protocols. #34290 (Also in 18, 19)
Fixed symbol generation on 32-bit Windows release builds. #35091 (Also in 18, 19)
Fixed the initialization of First Party Sets. #33971 (Also in 19)
Fixed the initialization of first party sets in the browser process. #33998 (Also in 19)
[Mac] Fixed Partition Alloc related crash in pre-BigSur (macos <= 10.15). #33704 (Also in 18, 19)
shell.openExternal() now reports more detailed errors on Windows. #33620 (Also in 15, 16, 17, 18, 19)

Other Changes

Added a TRACE call named crash_reporter::Start under the electron category for crash_reporter::Start(). #34268 (Also in 17, 18, 19)
Added deprecation warning for the new-window event. #34593 
Added minimum GITHUB_TOKEN permissions. #34298 
Fixed an issue where BrowserViews didn't always visually update after call to setBounds. #34643 (Also in 18, 19)
Fixed child_process.spawn ENOENT error with cwd option. #33815 (Also in 16, 17, 18, 19)
Minimum required node version to install the electron npm package is now >10. #34166 
On Linux, changed the libgdk-pixbuf dependency to be dynamically linked rather than statically linked. #34635 (Also in 18, 19)
Re-enabled symbol generation on 32-bit Windows. #34162 (Also in 19)
Temporarily disabled symbol generation on 32-bit Windows due to issues with symbol generation on that platform. #33653 (Also in 19)
WebContents for <webview> are now only created after the 'will-attach-webview' event is emitted and preventDefault is not called. #35016 

Documentation

Documentation changes: 
#34278


","Release Notes for v20.0.0
Stack Upgrades
Chromium 104.0.5112.65.
New in 104
New in 103
Node v16.15.0
v16.15.0 release notes
V8 v10.4
Breaking Changes
Removed the skip-taskbar feature on Linux. #35156 
Renderers are now sandboxed by default unless nodeIntegration: true or sandbox: false is specified. #35125
Added safeguards when building native modules with nan. Use node-gyp >=8.4.0 and electron-rebuild >=3.2.9 for when rebuilding native modules. #35160
Features
Additions
Added a warning for building native modules with node-gyp and electron-rebuild, asking users to upgrade to >=8.4.0 for node-gyp and >=3.2.8 for electron-rebuild if using Electron 20 or higher. #35160
Added app.isHidden() to check if the app is hidden (e.g. with Command-H) on macOS. #32155 
Added browserData to app.setPath/getPath. #33554 
Added immersive dark mode on Windows. #34549 
Added support for HIDDevice.forget(). #34210 
Added support for panel-like behavior. Window can float over full-screened apps. #34665 
Enabled systemPreferences.subscribe{Local|Workspace}Notification to take a null value for the event parameter. #33641 (Also in 18, 19)
Fixed an issue where the PDF Viewer would fail if a user attempted to reload. #33560 (Also in 18, 19)
Fixes
Fixed 20.0.0-beta.8 X11 crash regression. #35092
Fixed _dyld_missing_symbol_abort crash on macOS when using c++ native modules. #34944 
Fixed serial-port-added and serial-port-removed events not firing. #35047 
Fixed a potential printing hang. #34968
Fixed an issue where invalid print job settings would correctly call back Invalid print settings as the failure reason, but would then not terminate the print job, leading to an eventual crash on exit. #35141 
Fixed an issue with fullscreen transitions when HTML fullscreen is requested. #34468
Fixed child about:blank windows from inheriting their parents' preload scripts when sandbox: false and nodeIntegrationInSubFrames: true. #34585
Fixed initialization race when registering partition allocator on macOS. #33832
Fixed native module compilation issues on arm. #35137 
Fixed spontaneous crashing in native modules that depended on nan. #34851
Updated Windows Control Overlay buttons to look and feel more native on Windows 11. #34888 
Also in earlier versions....
Added support for --ozone-platform-hint flag on Linux. #35014 (Also in 19)
Apply senderFrame details to ipcMain port event. #33756 (Also in 16, 17, 18, 19)
Ensures that requestMediaKeySystemAccess eventually resolves / rejects. #34891 (Also in 19)
Fixed webContents.getUserAgent() incorrectly returning an empty string unless previously set. #35131 (Also in 18, 19)
Fixed a Windows Control Overlay issue where a window taken directly from minimized to maximized state could have incorrect hover state. #35074 (Also in 19)
Fixed a crash in safeStorage on Linux. #33913 (Also in 15, 16, 17, 18, 19)
Fixed a crash on Windows when opening apps in multiple, separate user sessions. #34139 (Also in 18, 19)
Fixed a crash when calling BrowserWindow.setEnabled(). #34972 (Also in 18, 19)
Fixed a crash when calling loadExtension on an extension directory that's missing a manifest file. #34168 (Also in 16, 17, 19)
Fixed a crash when loading a same-origin URL after a render process crash. #34432 (Also in 18, 19)
Fixed a performance problem in crashReporter.start() on macOS. #34639 (Also in 17, 18, 19)
Fixed a potential crash when calling webContents.print(). #34271 (Also in 19)
Fixed a potential crash when changing window settings after initializing WCO with an invalid titleBarStyle. #34875 (Also in 17, 18, 19)
Fixed alwaysOnTop BrowserWindow option for X11 Linux. #34913 (Also in 18, 19)
Fixed an OSR crash happening when input select items were rendered. #34069 (Also in 17, 18, 19)
Fixed an error where setWindowOpenHandler() would crash if the callback threw an error. #34547 (Also in 17, 18, 19)
Fixed an issue in which calling setBounds() after e.preventDefault in a 'will-move' or 'will-resize' event wouldn't change the window's shape until the mouse button was released. #35084 (Also in 19)
Fixed an issue where BrowserWindows on macOS were incorrectly marked as resizable. #34433 (Also in 18, 19)
Fixed an issue where DataList bounds had part of the item text cut off vertically. #34786 (Also in 19)
Fixed an issue where Windows Control Overlay buttons did not respect  maximizable/minimizable/closable states of a BrowserWindow. #34721 (Also in 17, 18, 19)
Fixed an issue where #ARGB ->#RGBA and #AARRGGBB ->#RRGGBBAA were converted improperly when setting background color. #33707 (Also in 19)
Fixed an issue where BrowserWindow#isFocused() was returning false when blur() was called on macOS. #33734 (Also in 17, 18, 19)
Fixed an issue where Escape keyboard events would not be properly propagated to the parent window after entering fullscreen and then exiting it again on Windows. #33757 (Also in 18, 19)
Fixed an issue where bounds changes were incorrectly delayed in the case where a window was moved or resized and event.preventDefault was called in either will-resize or will-move on Windows. #34204 (Also in 16, 17, 19)
Fixed an issue where calling BrowserWindow.setRepresentedFilename on macOS with titlebarStyle: 'hiddenInset'  or titlebarStyle: 'hidden' inadvertently moves the traffic light location. #34849 (Also in 18, 19)
Fixed an issue where calling SetLoginItemSettings() could potentially cause network volumes to be incorrectly mounted. #34068 (Also in 17, 18, 19)
Fixed an issue where calling setTitlebarOverlay with an initially invalid titleBarStyle on Windows would result in a crash. #34140 (Also in 19)
Fixed an issue where calling w.setWindowButtonVisibility(true) immediately after exiting fullscreen fails to show window buttons. #34675 (Also in 18, 19)
Fixed an issue where draggable regions were not recalculated when BrowserView bounds changed on Windows. #34612 (Also in 18, 19)
Fixed an issue where media keys would be sent to Electron on Windows no matter which window was in focus. #34647 (Also in 19)
Fixed an issue where mixed-case extension filters in file dialogs were ignored on Linux. #33918 (Also in 18, 19)
Fixed an issue where normal bounds would not be appropriately updated if the user minimized with the minimize button. #34486 (Also in 18, 19)
Fixed an issue where passing { name: 'All Files', extensions: ['*'] } in the filters param of open or save dialogs on Linux would disallow choosing files without an extension. #34516 (Also in 18, 19)
Fixed an issue where pressing escape would not un-fullscreen on Windows or Linux in some circumstances. #34317 (Also in 18, 19)
Fixed an issue where printing with an invalid deviceName on Linux caused silent failures. #34901 (Also in 19)
Fixed an issue where running second instances of the same application would cause a deadlock on Windows. #34297 (Also in 18, 19)
Fixed an issue where some BrowserWindows opened from new links wouldn't properly load URLs. #34159 (Also in 19)
Fixed an issue where the minimize button with WCO enabled would incorrectly be highlighted in some cases. #34840 (Also in 17, 18, 19)
Fixed an issue where the window bounds would incorrectly change if BrowserWindow.unmaximize was called on a window whose user bounds were maximized. #33480 (Also in 16, 17, 18, 19)
Fixed an issue where tray items wouldn't highlight in some scenarios on macOS. #34173 (Also in 16, 17, 18, 19)
Fixed an issue where zombie windows can be created if window.close() is called during a fullscreen transition. #34393 (Also in 17, 18, 19)
Fixed an issue with the app.requestSingleInstanceLock() API where it would sometimes hang. #33777 (Also in 18, 19)
Fixed behavior of BrowserWindow.maximize on macOS for not shown windows. #32949 (Also in 15, 16, 17, 18, 19)
Fixed building node modules with Visual Studio 2017. #34109 (Also in 18, 19)
Fixed building node modules with Visual Studio 2017. #34217 (Also in 19)
Fixed crash on startup due to missing gtk symbol on older distros. #34141 (Also in 18, 19)
Fixed crash when calling navigator.serial.getPorts(). #34280 (Also in 17, 18, 19)
Fixed crash when img without alt is shown with accessibility features enabled. #33840 (Also in 19)
Fixed crash when opening gtk file dialogs due to mismatched versions. #33650 (Also in 18, 19)
Fixed empty app_id when running under wayland. #34879 (Also in 18, 19)
Fixed incorrect return value of app.requestSingleInstanceLock() when setting non-existent user data folder. #33559 (Also in 16, 17, 18, 19)
Fixed issues with frameless window animations and styling. #33599 (Also in 15, 16, 17, 18, 19)
Fixed linux arm64 builds to not require glibc 2.29+. #34503 (Also in 19)
Fixed missing Sec-CH-UA headers and empty navigator.userAgentData. #34524 (Also in 17, 18, 19)
Fixed potential crash in WebFrameMain when performing a cross-origin navigation. #34417 (Also in 18, 19)
Fixed potential crash while generating accessibility trees for certain images. #33614 (Also in 18, 19)
Fixed potential crash with WebFrameMain when navigating between cross-origin websites. #33919 (Also in 18, 19)
Fixed service worker registration with custom protocols. #34290 (Also in 18, 19)
Fixed symbol generation on 32-bit Windows release builds. #35091 (Also in 18, 19)
Fixed the initialization of First Party Sets. #33971 (Also in 19)
Fixed the initialization of first party sets in the browser process. #33998 (Also in 19)
[Mac] Fixed Partition Alloc related crash in pre-BigSur (macos <= 10.15). #33704 (Also in 18, 19)
shell.openExternal() now reports more detailed errors on Windows. #33620 (Also in 15, 16, 17, 18, 19)
Other Changes
Added a TRACE call named crash_reporter::Start under the electron category for crash_reporter::Start(). #34268 (Also in 17, 18, 19)
Added deprecation warning for the new-window event. #34593 
Added minimum GITHUB_TOKEN permissions. #34298 
Fixed an issue where BrowserViews didn't always visually update after call to setBounds. #34643 (Also in 18, 19)
Fixed child_process.spawn ENOENT error with cwd option. #33815 (Also in 16, 17, 18, 19)
Minimum required node version to install the electron npm package is now >10. #34166 
On Linux, changed the libgdk-pixbuf dependency to be dynamically linked rather than statically linked. #34635 (Also in 18, 19)
Re-enabled symbol generation on 32-bit Windows. #34162 (Also in 19)
Temporarily disabled symbol generation on 32-bit Windows due to issues with symbol generation on that platform. #33653 (Also in 19)
WebContents for  are now only created after the 'will-attach-webview' event is emitted and preventDefault is not called. #35016 
Documentation
Documentation changes: 
34278"
197,"Release Notes for v17.4.11
Fixes

Fixed a potential crash when changing window settings after initializing WCO with an invalid titleBarStyle. #35031 (Also in 18, 19, 20)
Fixed an issue where the minimize button with WCO enabled would incorrectly be highlighted in some cases. #34837 (Also in 18, 19, 20)

Other Changes

Backported fix for CVE-2022-2294. #34883 
Security: backported fix for 1287804. #35103 
Security: backported fix for 1339844. #35001 
Security: backported fix for 1340335. #34999 
Security: backported fix for 1340654. #34997 
Security: backported fix for CVE-2022-2295. #34880 
Security: backported fix for CVE-2022-2478. #35100 
Security: backported fix for chromium:1334864. #35098 
Security: backported fix for chromium:1336014. #35101 
","Release Notes for v17.4.11
Fixes
Fixed a potential crash when changing window settings after initializing WCO with an invalid titleBarStyle. #35031 (Also in 18, 19, 20)
Fixed an issue where the minimize button with WCO enabled would incorrectly be highlighted in some cases. #34837 (Also in 18, 19, 20)
Other Changes
Backported fix for CVE-2022-2294. #34883 
Security: backported fix for 1287804. #35103 
Security: backported fix for 1339844. #35001 
Security: backported fix for 1340335. #34999 
Security: backported fix for 1340654. #34997 
Security: backported fix for CVE-2022-2295. #34880 
Security: backported fix for CVE-2022-2478. #35100 
Security: backported fix for chromium:1334864. #35098 
Security: backported fix for chromium:1336014. #35101 "
198,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@20.0.0-beta.13.
# Release Notes for v20.0.0-beta.13
Fixes

Fixed 20.0.0-beta.8 X11 crash regression. #35092 
Fixed serial-port-added and serial-port-removed events not firing. #35047 
Fixed a Windows Control Overlay issue where a window taken directly from minimized to maximized state could have incorrect hover state. #35074 (Also in 19)
Fixed an issue in which calling setBounds() after e.preventDefault in a 'will-move' or 'will-resize' event wouldn't change the window's shape until the mouse button was released. #35084 (Also in 19)
Fixed symbol generation on 32-bit Windows release builds. #35091 (Also in 18, 19)

Other Changes

Updated Chromium to 104.0.5112.57. #35018 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@20.0.0-beta.13.
Release Notes for v20.0.0-beta.13
Fixes
Fixed 20.0.0-beta.8 X11 crash regression. #35092 
Fixed serial-port-added and serial-port-removed events not firing. #35047 
Fixed a Windows Control Overlay issue where a window taken directly from minimized to maximized state could have incorrect hover state. #35074 (Also in 19)
Fixed an issue in which calling setBounds() after e.preventDefault in a 'will-move' or 'will-resize' event wouldn't change the window's shape until the mouse button was released. #35084 (Also in 19)
Fixed symbol generation on 32-bit Windows release builds. #35091 (Also in 18, 19)
Other Changes
Updated Chromium to 104.0.5112.57. #35018 "
199,"Release Notes for v18.3.6
Fixes

Fixed a crash when calling BrowserWindow.setEnabled(). #34973 (Also in 19, 20)
Fixed a potential crash when changing window settings after initializing WCO with an invalid titleBarStyle. #34873 (Also in 17, 19, 20)
Fixed alwaysOnTop BrowserWindow option for X11 Linux. #34911 (Also in 19, 20)
Fixed an issue where BrowserWindows on macOS were incorrectly marked as resizable. #34907 (Also in 19, 20)
Fixed an issue where Windows Control Overlay buttons did not respect  maximizable/minimizable/closable states of a BrowserWindow. #34720 (Also in 17, 19, 20)
Fixed an issue where calling BrowserWindow.setRepresentedFilename on macOS with titlebarStyle: 'hiddenInset'  or titlebarStyle: 'hidden' inadvertently moves the traffic light location. #34847 (Also in 19, 20)
Fixed an issue where some BrowserWindows opened from new links wouldn't properly load URLs. #34910 (Also in 19)
Fixed an issue where the minimize button with WCO enabled would incorrectly be highlighted in some cases. #34838 (Also in 17, 19, 20)
Fixed an issue with background colors being improperly applied to BrowserViews on Windows. #33478 (Also in 16)
Fixed empty app_id when running under wayland. #34877 (Also in 19, 20)
Fixed missing Sec-CH-UA headers and empty navigator.userAgentData. #34758 (Also in 17, 19, 20)
Fixed symbol generation on 32-bit Windows release builds. #35096 (Also in 19, 20)
Prevent brief display of ""Ozone X11"" in window title on Linux. #34943 

Other Changes

Backported fix for CVE-2022-2294. #34882 
Security: backported fix for 1287804. #35102 
Security: backported fix for 1333333. #34689 
Security: backported fix for 1335054. #34687 
Security: backported fix for 1335458. #34685 
Security: backported fix for 1336014. #35004 
Security: backported fix for 1339844. #35002 
Security: backported fix for 1340335. #35000 
Security: backported fix for 1340654. #34998 
Security: backported fix for CVE-2022-2162. #34714 
Security: backported fix for CVE-2022-2295. #34881 
","Release Notes for v18.3.6
Fixes
Fixed a crash when calling BrowserWindow.setEnabled(). #34973 (Also in 19, 20)
Fixed a potential crash when changing window settings after initializing WCO with an invalid titleBarStyle. #34873 (Also in 17, 19, 20)
Fixed alwaysOnTop BrowserWindow option for X11 Linux. #34911 (Also in 19, 20)
Fixed an issue where BrowserWindows on macOS were incorrectly marked as resizable. #34907 (Also in 19, 20)
Fixed an issue where Windows Control Overlay buttons did not respect  maximizable/minimizable/closable states of a BrowserWindow. #34720 (Also in 17, 19, 20)
Fixed an issue where calling BrowserWindow.setRepresentedFilename on macOS with titlebarStyle: 'hiddenInset'  or titlebarStyle: 'hidden' inadvertently moves the traffic light location. #34847 (Also in 19, 20)
Fixed an issue where some BrowserWindows opened from new links wouldn't properly load URLs. #34910 (Also in 19)
Fixed an issue where the minimize button with WCO enabled would incorrectly be highlighted in some cases. #34838 (Also in 17, 19, 20)
Fixed an issue with background colors being improperly applied to BrowserViews on Windows. #33478 (Also in 16)
Fixed empty app_id when running under wayland. #34877 (Also in 19, 20)
Fixed missing Sec-CH-UA headers and empty navigator.userAgentData. #34758 (Also in 17, 19, 20)
Fixed symbol generation on 32-bit Windows release builds. #35096 (Also in 19, 20)
Prevent brief display of ""Ozone X11"" in window title on Linux. #34943 
Other Changes
Backported fix for CVE-2022-2294. #34882 
Security: backported fix for 1287804. #35102 
Security: backported fix for 1333333. #34689 
Security: backported fix for 1335054. #34687 
Security: backported fix for 1335458. #34685 
Security: backported fix for 1336014. #35004 
Security: backported fix for 1339844. #35002 
Security: backported fix for 1340335. #35000 
Security: backported fix for 1340654. #34998 
Security: backported fix for CVE-2022-2162. #34714 
Security: backported fix for CVE-2022-2295. #34881 "
200,"Release Notes for v19.0.10
Fixes

Added support for --ozone-platform-hint flag on Linux. #35015 (Also in 20)
Fixed a Windows Control Overlay issue where a window taken directly from minimized to maximized state could have incorrect hover state. #35073 (Also in 20)
Fixed a crash when calling BrowserWindow.setEnabled(). #34971 (Also in 18, 20)
Fixed an issue in which calling setBounds() after e.preventDefault in a 'will-move' or 'will-resize' event wouldn't change the window's shape until the mouse button was released. #35083 (Also in 20)
Fixed an issue with fullscreen transitions when HTML fullscreen is requested. #34908 (Also in 20)
Fixed inertial scroll is broken when the scrollable element has an overlay with pointer-events: none. #35051 
Fixed symbol generation on 32-bit Windows release builds. #35090 (Also in 20)
","Release Notes for v19.0.10
Fixes
Added support for --ozone-platform-hint flag on Linux. #35015 (Also in 20)
Fixed a Windows Control Overlay issue where a window taken directly from minimized to maximized state could have incorrect hover state. #35073 (Also in 20)
Fixed a crash when calling BrowserWindow.setEnabled(). #34971 (Also in 18, 20)
Fixed an issue in which calling setBounds() after e.preventDefault in a 'will-move' or 'will-resize' event wouldn't change the window's shape until the mouse button was released. #35083 (Also in 20)
Fixed an issue with fullscreen transitions when HTML fullscreen is requested. #34908 (Also in 20)
Fixed inertial scroll is broken when the scrollable element has an overlay with pointer-events: none. #35051 
Fixed symbol generation on 32-bit Windows release builds. #35090 (Also in 20)"
201,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@20.0.0-beta.12.
# Release Notes for v20.0.0-beta.12
Fixes

Added support for --ozone-platform-hint flag on Linux. #35014 

Other Changes

WebContents for <webview> are now only created after the 'will-attach-webview' event is emitted and preventDefault is not called. #35016 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@20.0.0-beta.12.
Release Notes for v20.0.0-beta.12
Fixes
Added support for --ozone-platform-hint flag on Linux. #35014 
Other Changes
WebContents for  are now only created after the 'will-attach-webview' event is emitted and preventDefault is not called. #35016 "
202,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@20.0.0-beta.11.
# Release Notes for v20.0.0-beta.11
Fixes

Fixed a crash when calling BrowserWindow.setEnabled(). #34972 
Fixed a potential printing hang. #34968 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@20.0.0-beta.11.
Release Notes for v20.0.0-beta.11
Fixes
Fixed a crash when calling BrowserWindow.setEnabled(). #34972 
Fixed a potential printing hang. #34968 "
203,"Release Notes for v19.0.9
Fixes

Ensures that requestMediaKeySystemAccess eventually resolves / rejects. #34890 (Also in 20)
Fixed a potential crash when changing window settings after initializing WCO with an invalid titleBarStyle. #34874 (Also in 18, 20)
Fixed alwaysOnTop BrowserWindow option for X11 Linux. #34912 (Also in 18, 20)
Fixed an issue where BrowserWindows on macOS were incorrectly marked as resizable. #34906 (Also in 18, 20)
Fixed an issue where calling BrowserWindow.setRepresentedFilename on macOS with titlebarStyle: 'hiddenInset'  or titlebarStyle: 'hidden' inadvertently moves the traffic light location. #34848 (Also in 18, 20)
Fixed an issue where printing with an invalid deviceName on Linux caused silent failures. #34900 (Also in 20)
Fixed an issue where the minimize button with WCO enabled would incorrectly be highlighted in some cases. #34839 (Also in 17, 18, 20)
Fixed empty app_id when running under wayland. #34878 (Also in 18, 20)
Prevent brief display of ""Ozone X11"" in window title on Linux. #34929 (Also in 18)

Other Changes

Updated Chromium to 102.0.5005.167. #35017 
","Release Notes for v19.0.9
Fixes
Ensures that requestMediaKeySystemAccess eventually resolves / rejects. #34890 (Also in 20)
Fixed a potential crash when changing window settings after initializing WCO with an invalid titleBarStyle. #34874 (Also in 18, 20)
Fixed alwaysOnTop BrowserWindow option for X11 Linux. #34912 (Also in 18, 20)
Fixed an issue where BrowserWindows on macOS were incorrectly marked as resizable. #34906 (Also in 18, 20)
Fixed an issue where calling BrowserWindow.setRepresentedFilename on macOS with titlebarStyle: 'hiddenInset'  or titlebarStyle: 'hidden' inadvertently moves the traffic light location. #34848 (Also in 18, 20)
Fixed an issue where printing with an invalid deviceName on Linux caused silent failures. #34900 (Also in 20)
Fixed an issue where the minimize button with WCO enabled would incorrectly be highlighted in some cases. #34839 (Also in 17, 18, 20)
Fixed empty app_id when running under wayland. #34878 (Also in 18, 20)
Prevent brief display of ""Ozone X11"" in window title on Linux. #34929 (Also in 18)
Other Changes
Updated Chromium to 102.0.5005.167. #35017 "
204,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@20.0.0-beta.10.
# Release Notes for v20.0.0-beta.10
Fixes

Fixed _dyld_missing_symbol_abort crash on macOS when using c++ native modules. #34944 

Other Changes

Updated Chromium to 104.0.5112.48. #34920 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@20.0.0-beta.10.
Release Notes for v20.0.0-beta.10
Fixes
Fixed _dyld_missing_symbol_abort crash on macOS when using c++ native modules. #34944 
Other Changes
Updated Chromium to 104.0.5112.48. #34920 "
205,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@20.0.0-beta.9.
# Release Notes for v20.0.0-beta.9
Fixes

Ensures that requestMediaKeySystemAccess eventually resolves / rejects. #34891 (Also in 19)
Fixed a potential crash when changing window settings after initializing WCO with an invalid titleBarStyle. #34875 (Also in 18, 19)
Fixed alwaysOnTop BrowserWindow option for X11 Linux. #34913 (Also in 19)
Fixed an issue where printing with an invalid deviceName on Linux caused silent failures. #34901 (Also in 19)
Fixed empty app_id when running under wayland. #34879 (Also in 18, 19)
Updated Windows Control Overlay buttons to look and feel more native on Windows 11. #34888 

Other Changes

Updated Chromium to 104.0.5112.39. #34425 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@20.0.0-beta.9.
Release Notes for v20.0.0-beta.9
Fixes
Ensures that requestMediaKeySystemAccess eventually resolves / rejects. #34891 (Also in 19)
Fixed a potential crash when changing window settings after initializing WCO with an invalid titleBarStyle. #34875 (Also in 18, 19)
Fixed alwaysOnTop BrowserWindow option for X11 Linux. #34913 (Also in 19)
Fixed an issue where printing with an invalid deviceName on Linux caused silent failures. #34901 (Also in 19)
Fixed empty app_id when running under wayland. #34879 (Also in 18, 19)
Updated Windows Control Overlay buttons to look and feel more native on Windows 11. #34888 
Other Changes
Updated Chromium to 104.0.5112.39. #34425 "
206,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@20.0.0-beta.8.
# Release Notes for v20.0.0-beta.8
Fixes

Fixed an issue where calling BrowserWindow.setRepresentedFilename on macOS with titlebarStyle: 'hiddenInset'  or titlebarStyle: 'hidden' inadvertently moves the traffic light location. #34849 (Also in 18, 19)
Fixed an issue where the minimize button with WCO enabled would incorrectly be highlighted in some cases. #34840 (Also in 17, 18, 19)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@20.0.0-beta.8.
Release Notes for v20.0.0-beta.8
Fixes
Fixed an issue where calling BrowserWindow.setRepresentedFilename on macOS with titlebarStyle: 'hiddenInset'  or titlebarStyle: 'hidden' inadvertently moves the traffic light location. #34849 (Also in 18, 19)
Fixed an issue where the minimize button with WCO enabled would incorrectly be highlighted in some cases. #34840 (Also in 17, 18, 19)"
207,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@20.0.0-beta.7.
# Release Notes for v20.0.0-beta.7
Fixes

Fixed spontaneous crashing in native modules that depended on nan. #34851 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@20.0.0-beta.7.
Release Notes for v20.0.0-beta.7
Fixes
Fixed spontaneous crashing in native modules that depended on nan. #34851 "
208,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@20.0.0-beta.6.
# Release Notes for v20.0.0-beta.6
Fixes

Fixed an issue where DataList bounds had part of the item text cut off vertically. #34786 (Also in 19)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@20.0.0-beta.6.
Release Notes for v20.0.0-beta.6
Fixes
Fixed an issue where DataList bounds had part of the item text cut off vertically. #34786 (Also in 19)"
209,"Release Notes for v17.4.10
Other Changes

Security: backported fix for 1335054. #34686 
Security: backported fix for 1335458. #34684 
","Release Notes for v17.4.10
Other Changes
Security: backported fix for 1335054. #34686 
Security: backported fix for 1335458. #34684 "
210,"Release Notes for v19.0.8
Fixes

Fixed an issue where DataList bounds had part of the item text cut off vertically. #34785 (Also in 20)

Other Changes

Updated Chromium to 102.0.5005.148. #34824 
","Release Notes for v19.0.8
Fixes
Fixed an issue where DataList bounds had part of the item text cut off vertically. #34785 (Also in 20)
Other Changes
Updated Chromium to 102.0.5005.148. #34824 "
211,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@20.0.0-beta.5.
# Release Notes for v20.0.0-beta.5","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@20.0.0-beta.5.
Release Notes for v20.0.0-beta.5"
212,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@20.0.0-beta.4.
# Release Notes for v20.0.0-beta.4","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@20.0.0-beta.4.
Release Notes for v20.0.0-beta.4"
213,"Release Notes for v19.0.7
Fixes

Fixed an issue where Windows Control Overlay buttons did not respect  maximizable/minimizable/closable states of a BrowserWindow. #34722 (Also in 17, 18, 20)
Fixed missing Sec-CH-UA headers and empty navigator.userAgentData. #34757 (Also in 17, 18, 20)

Other Changes

Security: backported fix for CVE-2022-2162. #34712 
Updated Chromium to 102.0.5005.134. #34702 
","Release Notes for v19.0.7
Fixes
Fixed an issue where Windows Control Overlay buttons did not respect  maximizable/minimizable/closable states of a BrowserWindow. #34722 (Also in 17, 18, 20)
Fixed missing Sec-CH-UA headers and empty navigator.userAgentData. #34757 (Also in 17, 18, 20)
Other Changes
Security: backported fix for CVE-2022-2162. #34712 
Updated Chromium to 102.0.5005.134. #34702 "
214,"Release Notes for v17.4.9
Fixes

Fixed an error where setWindowOpenHandler() would crash if the callback threw an error. #34772 (Also in 18, 19, 20)
Fixed an issue where Windows Control Overlay buttons did not respect  maximizable/minimizable/closable states of a BrowserWindow. #34733 (Also in 18, 19, 20)
Fixed crash when opening gtk file dialogs due to mismatched versions. #34774 (Also in 18, 19)
Fixed missing Sec-CH-UA headers and empty navigator.userAgentData. #34760 (Also in 18, 19, 20)
[Mac] Fixed Partition Alloc related crash in pre-BigSur (macos <= 10.15). #34734 (Also in 18, 19)

Other Changes

Security: backported fix for 1321078. #34691 
Security: backported fix for 1333333. #34688 
Security: backported fix for CVE-2022-2162. #34715 
","Release Notes for v17.4.9
Fixes
Fixed an error where setWindowOpenHandler() would crash if the callback threw an error. #34772 (Also in 18, 19, 20)
Fixed an issue where Windows Control Overlay buttons did not respect  maximizable/minimizable/closable states of a BrowserWindow. #34733 (Also in 18, 19, 20)
Fixed crash when opening gtk file dialogs due to mismatched versions. #34774 (Also in 18, 19)
Fixed missing Sec-CH-UA headers and empty navigator.userAgentData. #34760 (Also in 18, 19, 20)
[Mac] Fixed Partition Alloc related crash in pre-BigSur (macos <= 10.15). #34734 (Also in 18, 19)
Other Changes
Security: backported fix for 1321078. #34691 
Security: backported fix for 1333333. #34688 
Security: backported fix for CVE-2022-2162. #34715 "
215,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@20.0.0-beta.3.
# Release Notes for v20.0.0-beta.3
Fixes

Fixed an issue where Windows Control Overlay buttons did not respect  maximizable/minimizable/closable states of a BrowserWindow. #34721 (Also in 17, 18, 19)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@20.0.0-beta.3.
Release Notes for v20.0.0-beta.3
Fixes
Fixed an issue where Windows Control Overlay buttons did not respect  maximizable/minimizable/closable states of a BrowserWindow. #34721 (Also in 17, 18, 19)"
216,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@20.0.0-beta.2.
# Release Notes for v20.0.0-beta.2
Features

Added support for panel-like behavior. Window can float over full-screened apps. #34665 

Fixes

Fixed an issue where calling w.setWindowButtonVisibility(true) immediately after exiting fullscreen fails to show window buttons. #34675 (Also in 18, 19)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@20.0.0-beta.2.
Release Notes for v20.0.0-beta.2
Features
Added support for panel-like behavior. Window can float over full-screened apps. #34665 
Fixes
Fixed an issue where calling w.setWindowButtonVisibility(true) immediately after exiting fullscreen fails to show window buttons. #34675 (Also in 18, 19)"
217,"Release Notes for v19.0.6
Fixes

Fixed an issue where calling w.setWindowButtonVisibility(true) immediately after exiting fullscreen fails to show window buttons. #34674 (Also in 18, 20)
","Release Notes for v19.0.6
Fixes
Fixed an issue where calling w.setWindowButtonVisibility(true) immediately after exiting fullscreen fails to show window buttons. #34674 (Also in 18, 20)"
218,"Release Notes for v18.3.5
Fixes

Fixed a performance problem in crashReporter.start() on macOS. #34640 (Also in 17, 19, 20)
Fixed an error where setWindowOpenHandler() would crash if the callback threw an error. #34627 (Also in 19, 20)
Fixed an issue where calling w.setWindowButtonVisibility(true) immediately after exiting fullscreen fails to show window buttons. #34673 (Also in 19, 20)
Fixed an issue where draggable regions were not recalculated when BrowserView bounds changed on Windows. #34610 (Also in 19, 20)

Other Changes

Backported fix for CVE-2022-2010. #34540 
Fixed an issue where BrowserViews didn't always visually update after call to setBounds. #34641 (Also in 19, 20)
On Linux, changed the libgdk-pixbuf dependency to be dynamically linked rather than statically linked. #34601 (Also in 19, 20)
Security: Backported fix for CVE-2022-1867. #34631 
Security: backported fix for 1228661. #34569 
Security: backported fix for 1306751. #34560 
Security: backported fix for 1314310. #34558 
Security: backported fix for 1316578. #34568 
Security: backported fix for 1317673. #34566 
Security: backported fix for 1318610. #34556 
Security: backported fix for 1321078. #34692 
","Release Notes for v18.3.5
Fixes
Fixed a performance problem in crashReporter.start() on macOS. #34640 (Also in 17, 19, 20)
Fixed an error where setWindowOpenHandler() would crash if the callback threw an error. #34627 (Also in 19, 20)
Fixed an issue where calling w.setWindowButtonVisibility(true) immediately after exiting fullscreen fails to show window buttons. #34673 (Also in 19, 20)
Fixed an issue where draggable regions were not recalculated when BrowserView bounds changed on Windows. #34610 (Also in 19, 20)
Other Changes
Backported fix for CVE-2022-2010. #34540 
Fixed an issue where BrowserViews didn't always visually update after call to setBounds. #34641 (Also in 19, 20)
On Linux, changed the libgdk-pixbuf dependency to be dynamically linked rather than statically linked. #34601 (Also in 19, 20)
Security: Backported fix for CVE-2022-1867. #34631 
Security: backported fix for 1228661. #34569 
Security: backported fix for 1306751. #34560 
Security: backported fix for 1314310. #34558 
Security: backported fix for 1316578. #34568 
Security: backported fix for 1317673. #34566 
Security: backported fix for 1318610. #34556 
Security: backported fix for 1321078. #34692 "
219,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@20.0.0-beta.1.
# Release Notes for v20.0.0-beta.1
Fixes

Fixed a performance problem in crashReporter.start() on macOS. #34639 (Also in 17, 18, 19)
Fixed an issue where media keys would be sent to Electron on Windows no matter which window was in focus. #34647 (Also in 19)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@20.0.0-beta.1.
Release Notes for v20.0.0-beta.1
Fixes
Fixed a performance problem in crashReporter.start() on macOS. #34639 (Also in 17, 18, 19)
Fixed an issue where media keys would be sent to Electron on Windows no matter which window was in focus. #34647 (Also in 19)"
220,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@20.0.0-alpha.7.
# Release Notes for v20.0.0-alpha.7
Features

Added immersive dark mode on Windows. #34549 

Fixes

Fixed an issue where draggable regions were not recalculated when BrowserView bounds changed on Windows. #34612 (Also in 18, 19)
Fixed child about:blank windows from inheriting their parents' preload scripts when sandbox: false and nodeIntegrationInSubFrames: true. #34585 

Other Changes

Added deprecation warning for the new-window event. #34593 
Fixed an issue where BrowserViews didn't always visually update after call to setBounds. #34643 (Also in 18, 19)
On Linux, changed the libgdk-pixbuf dependency to be dynamically linked rather than statically linked. #34635 (Also in 18, 19)
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@20.0.0-alpha.7.
Release Notes for v20.0.0-alpha.7
Features
Added immersive dark mode on Windows. #34549 
Fixes
Fixed an issue where draggable regions were not recalculated when BrowserView bounds changed on Windows. #34612 (Also in 18, 19)
Fixed child about:blank windows from inheriting their parents' preload scripts when sandbox: false and nodeIntegrationInSubFrames: true. #34585 
Other Changes
Added deprecation warning for the new-window event. #34593 
Fixed an issue where BrowserViews didn't always visually update after call to setBounds. #34643 (Also in 18, 19)
On Linux, changed the libgdk-pixbuf dependency to be dynamically linked rather than statically linked. #34635 (Also in 18, 19)"
221,"Release Notes for v19.0.5
Fixes

Fixed a performance problem in crashReporter.start() on macOS. #34638 (Also in 17, 18)
Fixed an error where setWindowOpenHandler() would crash if the callback threw an error. #34546 (Also in 18, 20)
Fixed an issue where draggable regions were not recalculated when BrowserView bounds changed on Windows. #34611 (Also in 18, 20)
Fixed an issue where media keys would be sent to Electron on Windows no matter which window was in focus. #34646 
Fixed an issue where normal bounds would not be appropriately updated if the user minimized with the minimize button. #34484 (Also in 18, 20)
Fixed an issue where passing { name: 'All Files', extensions: ['*'] } in the filters param of open or save dialogs on Linux would disallow choosing files without an extension. #34517 (Also in 18, 20)
Fixed linux arm64 builds to not require glibc 2.29+. #34502 (Also in 20)

Other Changes

Fixed an issue where BrowserViews didn't always visually update after call to setBounds. #34642 (Also in 18, 20)
On Linux, changed the libgdk-pixbuf dependency to be dynamically linked rather than statically linked. #34602 (Also in 18, 20)
Updated Chromium to 102.0.5005.115. #34498 
","Release Notes for v19.0.5
Fixes
Fixed a performance problem in crashReporter.start() on macOS. #34638 (Also in 17, 18)
Fixed an error where setWindowOpenHandler() would crash if the callback threw an error. #34546 (Also in 18, 20)
Fixed an issue where draggable regions were not recalculated when BrowserView bounds changed on Windows. #34611 (Also in 18, 20)
Fixed an issue where media keys would be sent to Electron on Windows no matter which window was in focus. #34646 
Fixed an issue where normal bounds would not be appropriately updated if the user minimized with the minimize button. #34484 (Also in 18, 20)
Fixed an issue where passing { name: 'All Files', extensions: ['*'] } in the filters param of open or save dialogs on Linux would disallow choosing files without an extension. #34517 (Also in 18, 20)
Fixed linux arm64 builds to not require glibc 2.29+. #34502 (Also in 20)
Other Changes
Fixed an issue where BrowserViews didn't always visually update after call to setBounds. #34642 (Also in 18, 20)
On Linux, changed the libgdk-pixbuf dependency to be dynamically linked rather than statically linked. #34602 (Also in 18, 20)
Updated Chromium to 102.0.5005.115. #34498 "
222,"Release Notes for v17.4.8
Fixes

Fixed a performance problem in crashReporter.start() on macOS. #34637 (Also in 18, 19)

Other Changes

Backported fix for CVE-2022-2010. #34541 
Backported fix for CVE-2022-2011. #34538 
Security: Backported fix for CVE-2022-1867. #34632 
Security: backported fix for 1227995. #34561 
Security: backported fix for 1228661. #34570 
Security: backported fix for 1306751. #34559 
Security: backported fix for 1314310. #34557 
Security: backported fix for 1316578. #34567 
Security: backported fix for 1317673. #34565 
Security: backported fix for 1318610. #34555 
Security: backported fix for 1320024. #34553 
Security: backported fix for 1324864, 1218100. #34535 
","Release Notes for v17.4.8
Fixes
Fixed a performance problem in crashReporter.start() on macOS. #34637 (Also in 18, 19)
Other Changes
Backported fix for CVE-2022-2010. #34541 
Backported fix for CVE-2022-2011. #34538 
Security: Backported fix for CVE-2022-1867. #34632 
Security: backported fix for 1227995. #34561 
Security: backported fix for 1228661. #34570 
Security: backported fix for 1306751. #34559 
Security: backported fix for 1314310. #34557 
Security: backported fix for 1316578. #34567 
Security: backported fix for 1317673. #34565 
Security: backported fix for 1318610. #34555 
Security: backported fix for 1320024. #34553 
Security: backported fix for 1324864, 1218100. #34535 "
223,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@20.0.0-alpha.6.
# Release Notes for v20.0.0-alpha.6
Fixes

Fixed an error where setWindowOpenHandler() would crash if the callback threw an error. #34547 (Also in 19)
Fixed an issue where passing { name: 'All Files', extensions: ['*'] } in the filters param of open or save dialogs on Linux would disallow choosing files without an extension. #34516 (Also in 18, 19)
Fixed missing Sec-CH-UA headers and empty navigator.userAgentData. #34524 
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@20.0.0-alpha.6.
Release Notes for v20.0.0-alpha.6
Fixes
Fixed an error where setWindowOpenHandler() would crash if the callback threw an error. #34547 (Also in 19)
Fixed an issue where passing { name: 'All Files', extensions: ['*'] } in the filters param of open or save dialogs on Linux would disallow choosing files without an extension. #34516 (Also in 18, 19)
Fixed missing Sec-CH-UA headers and empty navigator.userAgentData. #34524 "
224,"Release Notes for v18.3.4
Fixes

Fixed an issue where normal bounds would not be appropriately updated if the user minimized with the minimize button. #34485 (Also in 19, 20)
Fixed an issue where passing { name: 'All Files', extensions: ['*'] } in the filters param of open or save dialogs on Linux would disallow choosing files without an extension. #34518 (Also in 19, 20)

Other Changes

Backported fix for CVE-2022-2011. #34537 
Security: backported fix for 1227995. #34562 
Security: backported fix for 1320024. #34554 
Security: backported fix for 1324864, 1218100. #34534 
","Release Notes for v18.3.4
Fixes
Fixed an issue where normal bounds would not be appropriately updated if the user minimized with the minimize button. #34485 (Also in 19, 20)
Fixed an issue where passing { name: 'All Files', extensions: ['*'] } in the filters param of open or save dialogs on Linux would disallow choosing files without an extension. #34518 (Also in 19, 20)
Other Changes
Backported fix for CVE-2022-2011. #34537 
Security: backported fix for 1227995. #34562 
Security: backported fix for 1320024. #34554 
Security: backported fix for 1324864, 1218100. #34534 "
225,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@20.0.0-alpha.5.
# Release Notes for v20.0.0-alpha.5
Fixes

Fixed an issue where normal bounds would not be appropriately updated if the user minimized with the minimize button. #34486 (Also in 18, 19)
Fixed linux arm64 builds to not require glibc 2.29+. #34503 (Also in 19)
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@20.0.0-alpha.5.
Release Notes for v20.0.0-alpha.5
Fixes
Fixed an issue where normal bounds would not be appropriately updated if the user minimized with the minimize button. #34486 (Also in 18, 19)
Fixed linux arm64 builds to not require glibc 2.29+. #34503 (Also in 19)"
226,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@20.0.0-alpha.4.
# Release Notes for v20.0.0-alpha.4
Fixes

Fixed an issue where BrowserWindows on macOS were incorrectly marked as resizable. #34433 
Fixed an issue with fullscreen transitions when HTML fullscreen is requested. #34468 
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@20.0.0-alpha.4.
Release Notes for v20.0.0-alpha.4
Fixes
Fixed an issue where BrowserWindows on macOS were incorrectly marked as resizable. #34433 
Fixed an issue with fullscreen transitions when HTML fullscreen is requested. #34468 "
227,"Release Notes for v19.0.4
Fixes

Fixed behavior of BrowserWindow.maximize on macOS for not shown windows. #34365 (Also in 15, 16, 17, 18)
","Release Notes for v19.0.4
Fixes
Fixed behavior of BrowserWindow.maximize on macOS for not shown windows. #34365 (Also in 15, 16, 17, 18)"
228,"Release Notes for v18.3.3
Fixes

Fixed a crash when loading a same-origin URL after a render process crash. #34430 (Also in 19, 20)
Fixed potential crash in WebFrameMain when performing a cross-origin navigation. #34415 (Also in 19, 20)
","Release Notes for v18.3.3
Fixes
Fixed a crash when loading a same-origin URL after a render process crash. #34430 (Also in 19, 20)
Fixed potential crash in WebFrameMain when performing a cross-origin navigation. #34415 (Also in 19, 20)"
229,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@20.0.0-alpha.3.
# Release Notes for v20.0.0-alpha.3
Fixes

Fixed a crash when loading a same-origin URL after a render process crash. #34432 (Also in 18, 19)
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@20.0.0-alpha.3.
Release Notes for v20.0.0-alpha.3
Fixes
Fixed a crash when loading a same-origin URL after a render process crash. #34432 (Also in 18, 19)"
230,"Release Notes for v19.0.3
Fixes

Fixed a crash when loading a same-origin URL after a render process crash. #34431 
Fixed potential crash in WebFrameMain when performing a cross-origin navigation. #34416 (Also in 18, 20)
","Release Notes for v19.0.3
Fixes
Fixed a crash when loading a same-origin URL after a render process crash. #34431 
Fixed potential crash in WebFrameMain when performing a cross-origin navigation. #34416 (Also in 18, 20)"
231,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@20.0.0-alpha.2.
# Release Notes for v20.0.0-alpha.2
Fixes

Fixed an issue where zombie windows can be created if window.close() is called during a fullscreen transition. #34393 (Also in 17, 18, 19)
Fixed potential crash in WebFrameMain when performing a cross-origin navigation. #34417 (Also in 18, 19)

Other Changes

Updated Chromium to 104.0.5073.0. #34352 
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@20.0.0-alpha.2.
Release Notes for v20.0.0-alpha.2
Fixes
Fixed an issue where zombie windows can be created if window.close() is called during a fullscreen transition. #34393 (Also in 17, 18, 19)
Fixed potential crash in WebFrameMain when performing a cross-origin navigation. #34417 (Also in 18, 19)
Other Changes
Updated Chromium to 104.0.5073.0. #34352 "
232,"Release Notes for v19.0.2
Fixes

Fixed an issue where pressing escape would not un-fullscreen on Windows or Linux in some circumstances. #34359 (Also in 18)
Fixed an issue where zombie windows can be created if window.close() is called during a fullscreen transition. #34391 (Also in 17, 18, 20)
Fixed printing crash when using webContents.print(). #34369 

Other Changes

Updated Chromium to 102.0.5005.63. #34349 
","Release Notes for v19.0.2
Fixes
Fixed an issue where pressing escape would not un-fullscreen on Windows or Linux in some circumstances. #34359 (Also in 18)
Fixed an issue where zombie windows can be created if window.close() is called during a fullscreen transition. #34391 (Also in 17, 18, 20)
Fixed printing crash when using webContents.print(). #34369 
Other Changes
Updated Chromium to 102.0.5005.63. #34349 "
233,"Release Notes for v18.3.2
Fixes

Fixed an issue where pressing escape would not un-fullscreen on Windows or Linux in some circumstances. #34361 (Also in 19)
Fixed an issue where zombie windows can be created if window.close() is called during a fullscreen transition. #34392 (Also in 17, 19, 20)

Other Changes

Enable 16k page sizes support for linux arm64. #34385 
","Release Notes for v18.3.2
Fixes
Fixed an issue where pressing escape would not un-fullscreen on Windows or Linux in some circumstances. #34361 (Also in 19)
Fixed an issue where zombie windows can be created if window.close() is called during a fullscreen transition. #34392 (Also in 17, 19, 20)
Other Changes
Enable 16k page sizes support for linux arm64. #34385 "
234,"Release Notes for v17.4.7
Fixes

Fixed an issue where zombie windows can be created if window.close() is called during a fullscreen transition. #34390 (Also in 18, 19, 20)
","Release Notes for v17.4.7
Fixes
Fixed an issue where zombie windows can be created if window.close() is called during a fullscreen transition. #34390 (Also in 18, 19, 20)"
235,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@20.0.0-alpha.1.
# Release Notes for v20.0.0-alpha.1
Features

Added app.isHidden() to check if the app is hidden (e.g. with Command-H) on macOS. #32155 
Added browserData to app.setPath/getPath. #33554 
Added support for HIDDevice.forget(). #34210 
Enabled systemPreferences.subscribe{Local|Workspace}Notification to take a null value for the event parameter. #33641 (Also in 18, 19)
Fixed an issue where the PDF Viewer would fail if a user attempted to reload. #33560 (Also in 18, 19)

Fixes

Apply senderFrame details to ipcMain port event. #33756 (Also in 16, 17, 18, 19)
Fixed a crash in safeStorage on Linux. #33913 (Also in 15, 16, 17, 18, 19)
Fixed a crash on Windows when opening apps in multiple, separate user sessions. #34139 (Also in 18, 19)
Fixed a crash when calling loadExtension on an extension directory that's missing a manifest file. #34168 (Also in 16, 17, 18, 19)
Fixed a potential crash when calling webContents.print(). #34271 (Also in 19)
Fixed an OSR crash happening when input select items were rendered. #34069 (Also in 17, 18, 19)
Fixed an issue where #ARGB ->#RGBA and #AARRGGBB ->#RRGGBBAA were converted improperly when setting background color. #33707 (Also in 19)
Fixed an issue where BrowserWindow#isFocused() was returning false when blur() was called on macOS. #33734 (Also in 17, 18, 19)
Fixed an issue where Escape keyboard events would not be properly propagated to the parent window after entering fullscreen and then exiting it again on Windows. #33757 (Also in 18, 19)
Fixed an issue where bounds changes were incorrectly delayed in the case where a window was moved or resized and event.preventDefault was called in either will-resize or will-move on Windows. #34204 (Also in 16, 17, 18, 19)
Fixed an issue where calling SetLoginItemSettings() could potentially cause network volumes to be incorrectly mounted. #34068 (Also in 17, 18, 19)
Fixed an issue where calling setTitlebarOverlay with an initially invalid titleBarStyle on Windows would result in a crash. #34140 (Also in 19)
Fixed an issue where mixed-case extension filters in file dialogs were ignored on Linux. #33918 (Also in 18, 19)
Fixed an issue where pressing escape would not un-fullscreen on Windows or Linux in some circumstances. #34317 
Fixed an issue where some BrowserWindows opened from new links wouldn't properly load URLs. #34159 (Also in 19)
Fixed an issue where the the window bounds would incorrectly change if BrowserWindow.unmaximize was called on a window whose user bounds were maximized. #33480 (Also in 16, 17, 18, 19)
Fixed an issue where tray items wouldn't highlight in some scenarios on macOS. #34173 (Also in 16, 17, 18, 19)
Fixed an issue with the app.requestSingleInstanceLock() API where it would sometimes hang. #33777 (Also in 18, 19)
Fixed behavior of BrowserWindow.maximize on macOS for not shown windows. #32949 (Also in 15, 16, 17, 18)
Fixed building node modules with Visual Studio 2017. #34109 (Also in 18, 19)
Fixed building node modules with Visual Studio 2017. #34217 (Also in 19)
Fixed crash on startup due to missing gtk symbol on older distros. #34141 (Also in 18, 19)
Fixed crash when calling navigator.serial.getPorts(). #34280 (Also in 17, 18, 19)
Fixed crash when img without alt is shown with accessibility features enabled. #33840 (Also in 19)
Fixed crash when opening gtk file dialogs due to mismatched versions. #33650 (Also in 18, 19)
Fixed incorrect return value of app.requestSingleInstanceLock() when setting non-existent user data folder. #33559 (Also in 16, 17, 18, 19)
Fixed initialization race when registering partition allocator on macOS. #33832 
Fixed issues with frameless window animations and styling. #33599 (Also in 15, 16, 17, 18, 19)
Fixed potential crash while generating accessibility trees for certain images. #33614 (Also in 18, 19)
Fixed potential crash with WebFrameMain when navigating between cross-origin websites. #33919 (Also in 18, 19)
Fixed service worker registration with custom protocols. #34290 (Also in 18, 19)
Fixed the initialization of First Party Sets. #33971 (Also in 19)
Fixed the initialization of first party sets in the browser process. #33998 (Also in 19)
Notes: Fixed an issue where running second instances of the same application would cause a deadlock on Windows. #34297 (Also in 18, 19)
[Mac] Fixed Partition Alloc related crash in pre-BigSur (macos <= 10.15). #33704 (Also in 18, 19)
shell.openExternal() now reports more detailed errors on Windows. #33620 (Also in 15, 16, 17, 18, 19)

Other Changes

Added a TRACE call named crash_reporter::Start under the electron category for crash_reporter::Start(). #34268 (Also in 17, 18, 19)
Added minimum GITHUB_TOKEN permissions. #34298 
Fixed child_process.spawn ENOENT error with cwd option. #33815 (Also in 16, 17, 18, 19)
Minimum required node version to install the electron npm package is now >10. #34166 
Re-enabled symbol generation on 32-bit Windows. #34162 (Also in 19)
Temporarily disabled symbol generation on 32-bit Windows due to issues with symbol generation on that platform. #33653 (Also in 19)
Updated Chromium to 103.0.5046.0. #33906 
Updated Node.js to v16.15.0. #33947 

Documentation

Documentation changes: #34278
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@20.0.0-alpha.1.
Release Notes for v20.0.0-alpha.1
Features
Added app.isHidden() to check if the app is hidden (e.g. with Command-H) on macOS. #32155 
Added browserData to app.setPath/getPath. #33554 
Added support for HIDDevice.forget(). #34210 
Enabled systemPreferences.subscribe{Local|Workspace}Notification to take a null value for the event parameter. #33641 (Also in 18, 19)
Fixed an issue where the PDF Viewer would fail if a user attempted to reload. #33560 (Also in 18, 19)
Fixes
Apply senderFrame details to ipcMain port event. #33756 (Also in 16, 17, 18, 19)
Fixed a crash in safeStorage on Linux. #33913 (Also in 15, 16, 17, 18, 19)
Fixed a crash on Windows when opening apps in multiple, separate user sessions. #34139 (Also in 18, 19)
Fixed a crash when calling loadExtension on an extension directory that's missing a manifest file. #34168 (Also in 16, 17, 18, 19)
Fixed a potential crash when calling webContents.print(). #34271 (Also in 19)
Fixed an OSR crash happening when input select items were rendered. #34069 (Also in 17, 18, 19)
Fixed an issue where #ARGB ->#RGBA and #AARRGGBB ->#RRGGBBAA were converted improperly when setting background color. #33707 (Also in 19)
Fixed an issue where BrowserWindow#isFocused() was returning false when blur() was called on macOS. #33734 (Also in 17, 18, 19)
Fixed an issue where Escape keyboard events would not be properly propagated to the parent window after entering fullscreen and then exiting it again on Windows. #33757 (Also in 18, 19)
Fixed an issue where bounds changes were incorrectly delayed in the case where a window was moved or resized and event.preventDefault was called in either will-resize or will-move on Windows. #34204 (Also in 16, 17, 18, 19)
Fixed an issue where calling SetLoginItemSettings() could potentially cause network volumes to be incorrectly mounted. #34068 (Also in 17, 18, 19)
Fixed an issue where calling setTitlebarOverlay with an initially invalid titleBarStyle on Windows would result in a crash. #34140 (Also in 19)
Fixed an issue where mixed-case extension filters in file dialogs were ignored on Linux. #33918 (Also in 18, 19)
Fixed an issue where pressing escape would not un-fullscreen on Windows or Linux in some circumstances. #34317 
Fixed an issue where some BrowserWindows opened from new links wouldn't properly load URLs. #34159 (Also in 19)
Fixed an issue where the the window bounds would incorrectly change if BrowserWindow.unmaximize was called on a window whose user bounds were maximized. #33480 (Also in 16, 17, 18, 19)
Fixed an issue where tray items wouldn't highlight in some scenarios on macOS. #34173 (Also in 16, 17, 18, 19)
Fixed an issue with the app.requestSingleInstanceLock() API where it would sometimes hang. #33777 (Also in 18, 19)
Fixed behavior of BrowserWindow.maximize on macOS for not shown windows. #32949 (Also in 15, 16, 17, 18)
Fixed building node modules with Visual Studio 2017. #34109 (Also in 18, 19)
Fixed building node modules with Visual Studio 2017. #34217 (Also in 19)
Fixed crash on startup due to missing gtk symbol on older distros. #34141 (Also in 18, 19)
Fixed crash when calling navigator.serial.getPorts(). #34280 (Also in 17, 18, 19)
Fixed crash when img without alt is shown with accessibility features enabled. #33840 (Also in 19)
Fixed crash when opening gtk file dialogs due to mismatched versions. #33650 (Also in 18, 19)
Fixed incorrect return value of app.requestSingleInstanceLock() when setting non-existent user data folder. #33559 (Also in 16, 17, 18, 19)
Fixed initialization race when registering partition allocator on macOS. #33832 
Fixed issues with frameless window animations and styling. #33599 (Also in 15, 16, 17, 18, 19)
Fixed potential crash while generating accessibility trees for certain images. #33614 (Also in 18, 19)
Fixed potential crash with WebFrameMain when navigating between cross-origin websites. #33919 (Also in 18, 19)
Fixed service worker registration with custom protocols. #34290 (Also in 18, 19)
Fixed the initialization of First Party Sets. #33971 (Also in 19)
Fixed the initialization of first party sets in the browser process. #33998 (Also in 19)
Notes: Fixed an issue where running second instances of the same application would cause a deadlock on Windows. #34297 (Also in 18, 19)
[Mac] Fixed Partition Alloc related crash in pre-BigSur (macos <= 10.15). #33704 (Also in 18, 19)
shell.openExternal() now reports more detailed errors on Windows. #33620 (Also in 15, 16, 17, 18, 19)
Other Changes
Added a TRACE call named crash_reporter::Start under the electron category for crash_reporter::Start(). #34268 (Also in 17, 18, 19)
Added minimum GITHUB_TOKEN permissions. #34298 
Fixed child_process.spawn ENOENT error with cwd option. #33815 (Also in 16, 17, 18, 19)
Minimum required node version to install the electron npm package is now >10. #34166 
Re-enabled symbol generation on 32-bit Windows. #34162 (Also in 19)
Temporarily disabled symbol generation on 32-bit Windows due to issues with symbol generation on that platform. #33653 (Also in 19)
Updated Chromium to 103.0.5046.0. #33906 
Updated Node.js to v16.15.0. #33947 
Documentation
Documentation changes: #34278"
236,"Release Notes for v19.0.1
Other Changes

Added a TRACE call named crash_reporter::Start under the electron category for crash_reporter::Start(). #34326 (Also in 17, 18)
","Release Notes for v19.0.1
Other Changes
Added a TRACE call named crash_reporter::Start under the electron category for crash_reporter::Start(). #34326 (Also in 17, 18)"
237,"Release Notes for v18.3.1
Fixes

Fixed crash when calling navigator.serial.getPorts(). #34327 (Also in 17, 19)

Other Changes

Added a TRACE call named crash_reporter::Start under the electron category for crash_reporter::Start(). #34325 (Also in 17, 19)
","Release Notes for v18.3.1
Fixes
Fixed crash when calling navigator.serial.getPorts(). #34327 (Also in 17, 19)
Other Changes
Added a TRACE call named crash_reporter::Start under the electron category for crash_reporter::Start(). #34325 (Also in 17, 19)"
238,"Release Notes for v17.4.6
Fixes

Fixed an issue where bounds changes were incorrectly delayed in the case where a window was moved or resized and event.preventDefault was called in either will-resize or will-move on Windows. #34283 (Also in 16, 18, 19)
Fixed crash when calling navigator.serial.getPorts(). #34328 (Also in 18, 19)

Other Changes

Added a TRACE call named crash_reporter::Start under the electron category for crash_reporter::Start(). #34324 (Also in 18, 19)
","Release Notes for v17.4.6
Fixes
Fixed an issue where bounds changes were incorrectly delayed in the case where a window was moved or resized and event.preventDefault was called in either will-resize or will-move on Windows. #34283 (Also in 16, 18, 19)
Fixed crash when calling navigator.serial.getPorts(). #34328 (Also in 18, 19)
Other Changes
Added a TRACE call named crash_reporter::Start under the electron category for crash_reporter::Start(). #34324 (Also in 18, 19)"
239,"Release Notes for v16.2.8
Fixes

Fixed an issue where Pointer Lock behavior could not be properly exited. #32826 (Also in 18)
Fixed an issue where bounds changes were incorrectly delayed in the case where a window was moved or resized and event.preventDefault was called in either will-resize or will-move on Windows. #34282 (Also in 17, 18, 19)
Fixed an issue with background colors being improperly applied to BrowserViews on Windows. #33546 
Fixed crash when calling navigator.serial.getPorts(). #34334 (Also in 17, 18, 19)
","Release Notes for v16.2.8
Fixes
Fixed an issue where Pointer Lock behavior could not be properly exited. #32826 (Also in 18)
Fixed an issue where bounds changes were incorrectly delayed in the case where a window was moved or resized and event.preventDefault was called in either will-resize or will-move on Windows. #34282 (Also in 17, 18, 19)
Fixed an issue with background colors being improperly applied to BrowserViews on Windows. #33546 
Fixed crash when calling navigator.serial.getPorts(). #34334 (Also in 17, 18, 19)"
240,"Release Notes for v15.5.7
Fixes

Fixed crash when calling navigator.serial.getPorts(). #34333 (Also in 17, 19)
","Release Notes for v15.5.7
Fixes
Fixed crash when calling navigator.serial.getPorts(). #34333 (Also in 17, 19)"
241,"Release Notes for v19.0.0
Stack Upgrades

Chromium 102.0.5005.61
New in 101


Node v16.14.2
v16.14.2 release notes
v16.14.1 release notes
v16.14.0 release notes


V8 10.2

Features
Additions

Added BrowserWindow method to change the button color, symbol color, and height of a window with WCO enabled. #33066 (Also in 18)
Added nativeTheme.inForcedColorsMode API to allow detecting forced color mode. #32956 (Also in 15, 16, 17, 18)
Added ses.setCodeCachePath() API for setting code cache directory. #31154 (Also in 17, 18)
Added ability to configure if window should close when opener closes. #31314 
Added support for more color formats in setBackgroundColor. #31868 (Also in 18)
Added warning that preload scripts will be sandboxed by default beginning in Electron 20. #32868 (Also in 18)
Enabled systemPreferences.subscribe{Local|Workspace}Notification to take a null value for the event parameter. #33770 (Also in 18)
Fixed an issue where calling setTitlebarOverlay with an initially invalid titleBarStyle on Windows would result in a crash. #34302
Fixed an issue where the PDF Viewer would fail if a user attempted to reload. #33712 (Also in 18)

Fixes

Added support for the --unsafely-treat-insecure-origin-as-secure command-line flag. #33189
Fixed a potential crash when calling webContents.print(). #34299 
Fixed an issue where #ARGB ->#RGBA and #AARRGGBB ->#RRGGBBAA were converted improperly when setting background color. #33755 
Fixed an issue where some BrowserWindows opened from new links wouldn't properly load URLs. #34189
Fixed an issue with background colors being improperly applied to BrowserViews on Windows. #33435
Fixed crash when img without alt is shown with accessibility features enabled. #33841
Fixed the initialization of First Party Sets on Windows, where First Party Sets would sometimes fail to load. #34138 
Fixed the initialization of First Party Sets. #33972 
Fixed the initialization of first party sets in the browser process. #34011

Also in earlier versions....

Apply senderFrame details to ipcMain port event. #33783 (Also in 16, 17, 18)
Fire 'show' event when a BrowserWindow is shown via maximize(). #32979 (Also in 16, 17, 18)
Fix: initialize asar support in worker threads. #33216 (Also in 18)
Fixed BrowserWindow.showInactive restoring a maximized window to non-maximized on Windows. #32870 (Also in 16, 17, 18)
Fixed a V8 crash that could happen randomly in non-sandboxed renderer processes. #33252 (Also in 18)
Fixed a bug where BrowserWindow.fromWebContents would return undefined during the browser-window-created event. #33257 (Also in 18)
Fixed a crash in safeStorage on Linux. #34147 (Also in 15, 16, 17, 18)
Fixed a crash on Windows when opening apps in multiple, separate user sessions. #34160 (Also in 18)
Fixed a crash when calling loadExtension on an extension directory that's missing a manifest file. #34303 (Also in 16, 17)
Fixed a network service crash that could occur when using setCertificateVerifyProc. #33204 (Also in 17, 18)
Fixed a potential crash in Browser.getFocusedWindow() when child windows are closed. #33404 (Also in 16, 17, 18)
Fixed an OSR crash happening when input select items were rendered. #34093 (Also in 17, 18)
Fixed an issue where BrowserView layout bounds where limited to it's visible bounds. #32747 (Also in 17, 18)
Fixed an issue where Chrom DevTools settings didn't persist between loads. #33120 (Also in 17, 18)
Fixed an issue where First Party Sets were not correctly loaded on app launch. #33339 (Also in 18)
Fixed an issue where Pointer Lock behavior could not be properly exited. #32369 (Also in 18)
Fixed an issue where BrowserWindow#isFocused() was returning false when blur() was called on macOS. #34031 (Also in 17, 18)
Fixed an issue where Escape keyboard events would not be properly propagated to the parent window after entering fullscreen and then exiting it again on Windows. #33788 (Also in 18)
Fixed an issue where alternateImages did not work properly on macOS. #33026 (Also in 15, 16, 17, 18)
Fixed an issue where webContents.openDevTools({ mode }) did not work for certain dock positions. #32829 (Also in 17, 18)
Fixed an issue where webContents.savePage failed when passing a relative path instead of an absolute one. #32728 (Also in 15, 16, 17, 18)
Fixed an issue where bounds changes were incorrectly delayed in the case where a window was moved or resized and event.preventDefault was called in either will-resize or will-move on Windows. #34285 (Also in 16, 17)
Fixed an issue where calling SetLoginItemSettings() could potentially cause network volumes to be incorrectly mounted. #34108 (Also in 17, 18)
Fixed an issue where clicking ""Open in Containing Folder"" in the Sources tab in Devtools caused a crash. #33024 (Also in 16, 17, 18)
Fixed an issue where frameless windows on Windows would incorrectly show a small frame during the loading process. #32692 (Also in 14, 15, 16, 17, 18)
Fixed an issue where mixed-case extension filters in file dialogs were ignored on Linux. #34015 (Also in 18)
Fixed an issue where new bounds set via setBounds was not correctly applied if the user was moving or resizing the window concurrently on Windows. #33288 (Also in 18)
Fixed an issue where pages would not properly print on macOS due to a rendering failure. #32767 (Also in 18)
Fixed an issue where setting window maxHeight or maxWidth made it so the width and height could no longer be resized. #33025 (Also in 17, 18) 
Fixed an issue where the Tray could get garbage collected incorrectly under some circumstances. #33040 (Also in 15, 16, 17, 18)
Fixed an issue where the the window bounds would incorrectly change if BrowserWindow.unmaximize was called on a window whose user bounds were maximized. #33549 (Also in 16, 17, 18)
Fixed an issue where tray items wouldn't highlight in some scenarios on macOS. #34208 (Also in 16, 17, 18) 
Fixed an issue with the app.requestSingleInstanceLock() API where it would sometimes hang. #34071 (Also in 18)
Fixed an occasional crash on Mac when spawning a child process. #33114 (Also in 17, 18)
Fixed broken event loop in renderer process when process reuse is enabled on windows platform. #33207 (Also in 16, 17, 18)
Fixed broken transparency option in offscreen window rendering. #32885 (Also in 16, 17, 18)
Fixed building node modules with Visual Studio 2017. #34164 (Also in 18)
Fixed command string registered via setAsDefaultProtocolClient on windows. #32953 (Also in 14, 15, 16, 17, 18)
Fixed crash in the render process on reload with pending node fs.promises. #33280 (Also in 15, 16, 17, 18)
Fixed crash on startup due to missing gtk symbol on older distros. #34151 (Also in 18)
Fixed crash when WindowButtonsProxy references cleared NSWindow. #33069 (Also in 15, 16, 17, 18) 
Fixed crash when opening gtk file dialogs due to mismatched versions. #33813 (Also in 18)
Fixed drag regions on WCO windows on Windows. #32871 (Also in 15, 16, 17, 18)
Fixed effect when hovering over window controls on Windows in a WCO-enabled window. #32672 (Also in 14, 15, 16, 17, 18)
Fixed incorrect external memory allocation tracking in nativeImage module. #33266 (Also in 15, 16, 17, 18)
Fixed incorrect return value of app.requestSingleInstanceLock() when setting non-existent user data folder. #33593 (Also in 16, 17, 18)
Fixed issues with frameless window animations and styling. #33609 (Also in 15, 16, 17, 18)
Fixed maximizing frameless windows by double-clicking on a draggable (title bar) region. #33438 (Also in 15, 16, 17, 18)
Fixed multiple issues when running under Wayland caused by calling X11 functions. #33355 (Also in 17, 18)
Fixed possible race conditions between frame state and electron ipc. #32734 (Also in 17)
Fixed potential crash while generating accessibility trees for certain images. #33617 (Also in 18)
Fixed potential crash with WebFrameMain when navigating between cross-origin websites. #34294 (Also in 18)
Fixed slowness when using child_process.spawn and related methods on macOS Big Sur and newer. #33337 (Also in 16, 17, 18)
Fixed stale renderer process when application is quit while renderer is busy. #32888 (Also in 14, 15, 16, 17, 18)
Fixed the IncrementCapturerCount regression introduced by 13.0.0-beta.21. #32973 (Also in 18) 
SIGUSR1 is no longer handled when the node_cli_inspect fuse is disabled. #33188 (Also in 16, 17, 18)
Strip crashpad_handler binary on Linux, reducing bundle size. #33126 (Also in 15, 16, 17, 18)
Theoretical fix for a crash we're seeing when closing multiple child windows at the same time on macOS. #33063 (Also in 17, 18)
[Mac] Fixed Partition Alloc related crash in pre-BigSur (macos <= 10.15). #33966 (Also in 18)
shell.openExternal() now reports more detailed errors on Windows. #33660 (Also in 15, 16, 17, 18)

Other Changes

Chore: backport EPROTOTYPE fixes from libuv. #32856 (Also in 16, 17, 18)
Fixed an issue where adding/removing display changes the BrowserWindow size. #33109 (Also in 14, 15, 16, 17, 18)
Fixed child_process.spawn ENOENT error with cwd option. #33872 (Also in 16, 17, 18) 
Re-enabled symbol generation on 32-bit Windows. #34179 
Removed the semi-documented preloadURL property from WebPreferences. #33228 
Temporarily disabled symbol generation on 32-bit Windows due to issues with symbol generation on that platform. #33689
Updated node types version. #33452 (Also in 18) 

Documentation

Documentation changes: 
#33042 
#33170
#33226



End of Support for 15.x.y and 16.x.y
Electron 15.x.y and 16.x.y has reached end-of-support. As per Electron's new 8-week cadence, we were supporting the latest four versions of Electron until May 2022. With this Electron 19 release, we'll return to supporting the latest three major versions, as well as the alpha, beta, and nightly releases.","Release Notes for v19.0.0
Stack Upgrades
Chromium 102.0.5005.61
New in 101
Node v16.14.2
v16.14.2 release notes
v16.14.1 release notes
v16.14.0 release notes
V8 10.2
Features
Additions
Added BrowserWindow method to change the button color, symbol color, and height of a window with WCO enabled. #33066 (Also in 18)
Added nativeTheme.inForcedColorsMode API to allow detecting forced color mode. #32956 (Also in 15, 16, 17, 18)
Added ses.setCodeCachePath() API for setting code cache directory. #31154 (Also in 17, 18)
Added ability to configure if window should close when opener closes. #31314 
Added support for more color formats in setBackgroundColor. #31868 (Also in 18)
Added warning that preload scripts will be sandboxed by default beginning in Electron 20. #32868 (Also in 18)
Enabled systemPreferences.subscribe{Local|Workspace}Notification to take a null value for the event parameter. #33770 (Also in 18)
Fixed an issue where calling setTitlebarOverlay with an initially invalid titleBarStyle on Windows would result in a crash. #34302
Fixed an issue where the PDF Viewer would fail if a user attempted to reload. #33712 (Also in 18)
Fixes
Added support for the --unsafely-treat-insecure-origin-as-secure command-line flag. #33189
Fixed a potential crash when calling webContents.print(). #34299 
Fixed an issue where #ARGB ->#RGBA and #AARRGGBB ->#RRGGBBAA were converted improperly when setting background color. #33755 
Fixed an issue where some BrowserWindows opened from new links wouldn't properly load URLs. #34189
Fixed an issue with background colors being improperly applied to BrowserViews on Windows. #33435
Fixed crash when img without alt is shown with accessibility features enabled. #33841
Fixed the initialization of First Party Sets on Windows, where First Party Sets would sometimes fail to load. #34138 
Fixed the initialization of First Party Sets. #33972 
Fixed the initialization of first party sets in the browser process. #34011
Also in earlier versions....
Apply senderFrame details to ipcMain port event. #33783 (Also in 16, 17, 18)
Fire 'show' event when a BrowserWindow is shown via maximize(). #32979 (Also in 16, 17, 18)
Fix: initialize asar support in worker threads. #33216 (Also in 18)
Fixed BrowserWindow.showInactive restoring a maximized window to non-maximized on Windows. #32870 (Also in 16, 17, 18)
Fixed a V8 crash that could happen randomly in non-sandboxed renderer processes. #33252 (Also in 18)
Fixed a bug where BrowserWindow.fromWebContents would return undefined during the browser-window-created event. #33257 (Also in 18)
Fixed a crash in safeStorage on Linux. #34147 (Also in 15, 16, 17, 18)
Fixed a crash on Windows when opening apps in multiple, separate user sessions. #34160 (Also in 18)
Fixed a crash when calling loadExtension on an extension directory that's missing a manifest file. #34303 (Also in 16, 17)
Fixed a network service crash that could occur when using setCertificateVerifyProc. #33204 (Also in 17, 18)
Fixed a potential crash in Browser.getFocusedWindow() when child windows are closed. #33404 (Also in 16, 17, 18)
Fixed an OSR crash happening when input select items were rendered. #34093 (Also in 17, 18)
Fixed an issue where BrowserView layout bounds where limited to it's visible bounds. #32747 (Also in 17, 18)
Fixed an issue where Chrom DevTools settings didn't persist between loads. #33120 (Also in 17, 18)
Fixed an issue where First Party Sets were not correctly loaded on app launch. #33339 (Also in 18)
Fixed an issue where Pointer Lock behavior could not be properly exited. #32369 (Also in 18)
Fixed an issue where BrowserWindow#isFocused() was returning false when blur() was called on macOS. #34031 (Also in 17, 18)
Fixed an issue where Escape keyboard events would not be properly propagated to the parent window after entering fullscreen and then exiting it again on Windows. #33788 (Also in 18)
Fixed an issue where alternateImages did not work properly on macOS. #33026 (Also in 15, 16, 17, 18)
Fixed an issue where webContents.openDevTools({ mode }) did not work for certain dock positions. #32829 (Also in 17, 18)
Fixed an issue where webContents.savePage failed when passing a relative path instead of an absolute one. #32728 (Also in 15, 16, 17, 18)
Fixed an issue where bounds changes were incorrectly delayed in the case where a window was moved or resized and event.preventDefault was called in either will-resize or will-move on Windows. #34285 (Also in 16, 17)
Fixed an issue where calling SetLoginItemSettings() could potentially cause network volumes to be incorrectly mounted. #34108 (Also in 17, 18)
Fixed an issue where clicking ""Open in Containing Folder"" in the Sources tab in Devtools caused a crash. #33024 (Also in 16, 17, 18)
Fixed an issue where frameless windows on Windows would incorrectly show a small frame during the loading process. #32692 (Also in 14, 15, 16, 17, 18)
Fixed an issue where mixed-case extension filters in file dialogs were ignored on Linux. #34015 (Also in 18)
Fixed an issue where new bounds set via setBounds was not correctly applied if the user was moving or resizing the window concurrently on Windows. #33288 (Also in 18)
Fixed an issue where pages would not properly print on macOS due to a rendering failure. #32767 (Also in 18)
Fixed an issue where setting window maxHeight or maxWidth made it so the width and height could no longer be resized. #33025 (Also in 17, 18) 
Fixed an issue where the Tray could get garbage collected incorrectly under some circumstances. #33040 (Also in 15, 16, 17, 18)
Fixed an issue where the the window bounds would incorrectly change if BrowserWindow.unmaximize was called on a window whose user bounds were maximized. #33549 (Also in 16, 17, 18)
Fixed an issue where tray items wouldn't highlight in some scenarios on macOS. #34208 (Also in 16, 17, 18) 
Fixed an issue with the app.requestSingleInstanceLock() API where it would sometimes hang. #34071 (Also in 18)
Fixed an occasional crash on Mac when spawning a child process. #33114 (Also in 17, 18)
Fixed broken event loop in renderer process when process reuse is enabled on windows platform. #33207 (Also in 16, 17, 18)
Fixed broken transparency option in offscreen window rendering. #32885 (Also in 16, 17, 18)
Fixed building node modules with Visual Studio 2017. #34164 (Also in 18)
Fixed command string registered via setAsDefaultProtocolClient on windows. #32953 (Also in 14, 15, 16, 17, 18)
Fixed crash in the render process on reload with pending node fs.promises. #33280 (Also in 15, 16, 17, 18)
Fixed crash on startup due to missing gtk symbol on older distros. #34151 (Also in 18)
Fixed crash when WindowButtonsProxy references cleared NSWindow. #33069 (Also in 15, 16, 17, 18) 
Fixed crash when opening gtk file dialogs due to mismatched versions. #33813 (Also in 18)
Fixed drag regions on WCO windows on Windows. #32871 (Also in 15, 16, 17, 18)
Fixed effect when hovering over window controls on Windows in a WCO-enabled window. #32672 (Also in 14, 15, 16, 17, 18)
Fixed incorrect external memory allocation tracking in nativeImage module. #33266 (Also in 15, 16, 17, 18)
Fixed incorrect return value of app.requestSingleInstanceLock() when setting non-existent user data folder. #33593 (Also in 16, 17, 18)
Fixed issues with frameless window animations and styling. #33609 (Also in 15, 16, 17, 18)
Fixed maximizing frameless windows by double-clicking on a draggable (title bar) region. #33438 (Also in 15, 16, 17, 18)
Fixed multiple issues when running under Wayland caused by calling X11 functions. #33355 (Also in 17, 18)
Fixed possible race conditions between frame state and electron ipc. #32734 (Also in 17)
Fixed potential crash while generating accessibility trees for certain images. #33617 (Also in 18)
Fixed potential crash with WebFrameMain when navigating between cross-origin websites. #34294 (Also in 18)
Fixed slowness when using child_process.spawn and related methods on macOS Big Sur and newer. #33337 (Also in 16, 17, 18)
Fixed stale renderer process when application is quit while renderer is busy. #32888 (Also in 14, 15, 16, 17, 18)
Fixed the IncrementCapturerCount regression introduced by 13.0.0-beta.21. #32973 (Also in 18) 
SIGUSR1 is no longer handled when the node_cli_inspect fuse is disabled. #33188 (Also in 16, 17, 18)
Strip crashpad_handler binary on Linux, reducing bundle size. #33126 (Also in 15, 16, 17, 18)
Theoretical fix for a crash we're seeing when closing multiple child windows at the same time on macOS. #33063 (Also in 17, 18)
[Mac] Fixed Partition Alloc related crash in pre-BigSur (macos <= 10.15). #33966 (Also in 18)
shell.openExternal() now reports more detailed errors on Windows. #33660 (Also in 15, 16, 17, 18)
Other Changes
Chore: backport EPROTOTYPE fixes from libuv. #32856 (Also in 16, 17, 18)
Fixed an issue where adding/removing display changes the BrowserWindow size. #33109 (Also in 14, 15, 16, 17, 18)
Fixed child_process.spawn ENOENT error with cwd option. #33872 (Also in 16, 17, 18) 
Re-enabled symbol generation on 32-bit Windows. #34179 
Removed the semi-documented preloadURL property from WebPreferences. #33228 
Temporarily disabled symbol generation on 32-bit Windows due to issues with symbol generation on that platform. #33689
Updated node types version. #33452 (Also in 18) 
Documentation
Documentation changes: 
33042
33170
33226
End of Support for 15.x.y and 16.x.y
Electron 15.x.y and 16.x.y has reached end-of-support. As per Electron's new 8-week cadence, we were supporting the latest four versions of Electron until May 2022. With this Electron 19 release, we'll return to supporting the latest three major versions, as well as the alpha, beta, and nightly releases."
242,"Release Notes for v18.3.0
Fixes

Fixed a crash when calling loadExtension on an extension directory that's missing a manifest file. #34304 (Also in 16, 17, 19)
Fixed an issue where bounds changes were incorrectly delayed in the case where a window was moved or resized and event.preventDefault was called in either will-resize or will-move on Windows. #34284 (Also in 16, 17, 19)
Fixed an issue where running second instances of the same application would cause a deadlock on Windows. #34295 (Also in 19)
Fixed potential crash with WebFrameMain when navigating between cross-origin websites. #34293 (Also in 19)
Fixed service worker registration with custom protocols. #34291 (Also in 19)
","Release Notes for v18.3.0
Fixes
Fixed a crash when calling loadExtension on an extension directory that's missing a manifest file. #34304 (Also in 16, 17, 19)
Fixed an issue where bounds changes were incorrectly delayed in the case where a window was moved or resized and event.preventDefault was called in either will-resize or will-move on Windows. #34284 (Also in 16, 17, 19)
Fixed an issue where running second instances of the same application would cause a deadlock on Windows. #34295 (Also in 19)
Fixed potential crash with WebFrameMain when navigating between cross-origin websites. #34293 (Also in 19)
Fixed service worker registration with custom protocols. #34291 (Also in 19)"
243,"Release Notes for v15.5.6
Fixes

Fixed issues with frameless window animations and styling. #33608 (Also in 16, 17, 18, 19)

Other Changes

Backported fix for CVE-2022-1477. #34014 
Backported fix for CVE-2022-1638. #34224 
Backported fix for CVE-2022-1639. #34201 
Backported fix for chromium:1297283. #34234 
Backported fix for chromium:1298867. #34231 
Backported fix for chromium:1312563. #34227 
","Release Notes for v15.5.6
Fixes
Fixed issues with frameless window animations and styling. #33608 (Also in 16, 17, 18, 19)
Other Changes
Backported fix for CVE-2022-1477. #34014 
Backported fix for CVE-2022-1638. #34224 
Backported fix for CVE-2022-1639. #34201 
Backported fix for chromium:1297283. #34234 
Backported fix for chromium:1298867. #34231 
Backported fix for chromium:1312563. #34227 "
244,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@19.0.0-beta.8.
# Release Notes for v19.0.0-beta.8
Other Changes

Updated Chromium to 102.0.5005.49. #34198 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@19.0.0-beta.8.
Release Notes for v19.0.0-beta.8
Other Changes
Updated Chromium to 102.0.5005.49. #34198 "
245,"Release Notes for v18.2.4
Fixes

Fixed an issue where tray items wouldn't highlight in some scenarios on macOS. #34207 (Also in 16, 17, 19)
Fixed crash on startup on old Ubuntu versions. #34155 
SIGUSR1 is no longer handled when the node_cli_inspect fuse is disabled. #34180 (Also in 16, 17)

Other Changes

Backported fix for chromium:1320614. #34202 
Updated Chromium to 100.0.4896.160. #34171 
","Release Notes for v18.2.4
Fixes
Fixed an issue where tray items wouldn't highlight in some scenarios on macOS. #34207 (Also in 16, 17, 19)
Fixed crash on startup on old Ubuntu versions. #34155 
SIGUSR1 is no longer handled when the node_cli_inspect fuse is disabled. #34180 (Also in 16, 17)
Other Changes
Backported fix for chromium:1320614. #34202 
Updated Chromium to 100.0.4896.160. #34171 "
246,"Release Notes for v17.4.5
Fixes

Fixed a crash when calling loadExtension on an extension directory that's missing a manifest file. #34193 (Also in 16)
Fixed an issue where tray items wouldn't highlight in some scenarios on macOS. #34206 (Also in 16, 18, 19)
SIGUSR1 is no longer handled when the node_cli_inspect fuse is disabled. #34181 (Also in 16, 18)

Other Changes

Backported fix for CVE-2022-1637. #34228 
Backported fix for CVE-2022-1638. #34222 
Backported fix for CVE-2022-1639. #34199 
Backported fix for chromium:1297283. #34232 
Backported fix for chromium:1298867. #34229 
Backported fix for chromium:1312563. #34225 
Backported fix for chromium:1320614. #34203 
","Release Notes for v17.4.5
Fixes
Fixed a crash when calling loadExtension on an extension directory that's missing a manifest file. #34193 (Also in 16)
Fixed an issue where tray items wouldn't highlight in some scenarios on macOS. #34206 (Also in 16, 18, 19)
SIGUSR1 is no longer handled when the node_cli_inspect fuse is disabled. #34181 (Also in 16, 18)
Other Changes
Backported fix for CVE-2022-1637. #34228 
Backported fix for CVE-2022-1638. #34222 
Backported fix for CVE-2022-1639. #34199 
Backported fix for chromium:1297283. #34232 
Backported fix for chromium:1298867. #34229 
Backported fix for chromium:1312563. #34225 
Backported fix for chromium:1320614. #34203 "
247,"Release Notes for v16.2.7
Fixes

Fixed a crash when calling loadExtension on an extension directory that's missing a manifest file. #34192 (Also in 17)
Fixed an issue where tray items wouldn't highlight in some scenarios on macOS. #34205 (Also in 17, 18, 19)
SIGUSR1 is no longer handled when the node_cli_inspect fuse is disabled. #34182 (Also in 17, 18)

Other Changes

Backported fix for CVE-2022-1638. #34223 
Backported fix for CVE-2022-1639. #34200 
Backported fix for chromium:1297283. #34233 
Backported fix for chromium:1298867. #34230 
Backported fix for chromium:1312563. #34226 
","Release Notes for v16.2.7
Fixes
Fixed a crash when calling loadExtension on an extension directory that's missing a manifest file. #34192 (Also in 17)
Fixed an issue where tray items wouldn't highlight in some scenarios on macOS. #34205 (Also in 17, 18, 19)
SIGUSR1 is no longer handled when the node_cli_inspect fuse is disabled. #34182 (Also in 17, 18)
Other Changes
Backported fix for CVE-2022-1638. #34223 
Backported fix for CVE-2022-1639. #34200 
Backported fix for chromium:1297283. #34233 
Backported fix for chromium:1298867. #34230 
Backported fix for chromium:1312563. #34226 "
248,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@19.0.0-beta.7.
# Release Notes for v19.0.0-beta.7
Fixes

Fixed an issue where some BrowserWindows opened from new links wouldn't properly load URLs. #34189 
Fixed an issue where tray items wouldn't highlight in some scenarios on macOS. #34208 (Also in 16, 17, 18)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@19.0.0-beta.7.
Release Notes for v19.0.0-beta.7
Fixes
Fixed an issue where some BrowserWindows opened from new links wouldn't properly load URLs. #34189 
Fixed an issue where tray items wouldn't highlight in some scenarios on macOS. #34208 (Also in 16, 17, 18)"
249,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@19.0.0-beta.6.
# Release Notes for v19.0.0-beta.6
Fixes

Fixed a crash in safeStorage on Linux. #34147 (Also in 18)
Fixed a crash on Windows when opening apps in multiple, separate user sessions. #34160 (Also in 18)
Fixed building node modules with Visual Studio 2017. #34164 (Also in 18)
Fixed crash on startup due to missing gtk symbol on older distros. #34151 (Also in 18)

Other Changes

Re-enabled symbol generation on 32-bit Windows. #34179 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@19.0.0-beta.6.
Release Notes for v19.0.0-beta.6
Fixes
Fixed a crash in safeStorage on Linux. #34147 (Also in 18)
Fixed a crash on Windows when opening apps in multiple, separate user sessions. #34160 (Also in 18)
Fixed building node modules with Visual Studio 2017. #34164 (Also in 18)
Fixed crash on startup due to missing gtk symbol on older distros. #34151 (Also in 18)
Other Changes
Re-enabled symbol generation on 32-bit Windows. #34179 "
250,"Release Notes for v18.2.3
Fixes

Fixed a crash in safeStorage on Linux. #34148 (Also in 19)
Fixed building node modules with Visual Studio 2017. #34110 (Also in 19)
","Release Notes for v18.2.3
Fixes
Fixed a crash in safeStorage on Linux. #34148 (Also in 19)
Fixed building node modules with Visual Studio 2017. #34110 (Also in 19)"
251,"Release Notes for v18.2.2
Fixes

Fixed a crash on Windows when opening apps in multiple, separate user sessions. #34161 (Also in 19)
Fixed an OSR crash happening when input select items were rendered. #34092 (Also in 17, 19)
Fixed an issue where calling SetLoginItemSettings() could potentially cause network volumes to be incorrectly mounted. #34106 (Also in 17, 19)
Fixed crash on startup due to missing gtk symbol on older distros. #34150 (Also in 19)

Other Changes

Backported fix for CVE-2022-1485. #34052 
Backported fix for CVE-2022-1497. #34072 
","Release Notes for v18.2.2
Fixes
Fixed a crash on Windows when opening apps in multiple, separate user sessions. #34161 (Also in 19)
Fixed an OSR crash happening when input select items were rendered. #34092 (Also in 17, 19)
Fixed an issue where calling SetLoginItemSettings() could potentially cause network volumes to be incorrectly mounted. #34106 (Also in 17, 19)
Fixed crash on startup due to missing gtk symbol on older distros. #34150 (Also in 19)
Other Changes
Backported fix for CVE-2022-1485. #34052 
Backported fix for CVE-2022-1497. #34072 "
252,"Release Notes for v17.4.4
Fixes

Fixed an OSR crash happening when input select items were rendered. #34091 (Also in 18, 19)
Fixed an issue where calling SetLoginItemSettings() could potentially cause network volumes to be incorrectly mounted. #34107 (Also in 18, 19)

Other Changes

Backported fix for CVE-2022-1477. #34012 
Backported fix for CVE-2022-1497. #34073 
Fixed 32-bit native module builds with node-gyp >= 9.0.0. #34136 (Also in 16)
","Release Notes for v17.4.4
Fixes
Fixed an OSR crash happening when input select items were rendered. #34091 (Also in 18, 19)
Fixed an issue where calling SetLoginItemSettings() could potentially cause network volumes to be incorrectly mounted. #34107 (Also in 18, 19)
Other Changes
Backported fix for CVE-2022-1477. #34012 
Backported fix for CVE-2022-1497. #34073 
Fixed 32-bit native module builds with node-gyp >= 9.0.0. #34136 (Also in 16)"
253,"Release Notes for v16.2.6
Other Changes

Backported fix for CVE-2022-1477. #34013 
Backported fix for CVE-2022-1479. #34036 
Backported fix for CVE-2022-1485. #34054 
Backported fix for CVE-2022-1492. #34050 
Backported fix for CVE-2022-1497. #34074 
Fixed 32-bit native module builds with node-gyp >= 9.0.0. #34167 
","Release Notes for v16.2.6
Other Changes
Backported fix for CVE-2022-1477. #34013 
Backported fix for CVE-2022-1479. #34036 
Backported fix for CVE-2022-1485. #34054 
Backported fix for CVE-2022-1492. #34050 
Backported fix for CVE-2022-1497. #34074 
Fixed 32-bit native module builds with node-gyp >= 9.0.0. #34167 "
254,"Release Notes for v15.5.5
Other Changes

Backported fix for CVE-2022-1482. #34040 
Backported fix for CVE-2022-1483. #34009 
Backported fix for CVE-2022-1497. #34075 
","Release Notes for v15.5.5
Other Changes
Backported fix for CVE-2022-1482. #34040 
Backported fix for CVE-2022-1483. #34009 
Backported fix for CVE-2022-1497. #34075 "
255,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@19.0.0-beta.5.
# Release Notes for v19.0.0-beta.5
Fixes

Fixed an OSR crash happening when input select items were rendered. #34093 (Also in 17, 18)
Fixed an issue where calling SetLoginItemSettings() could potentially cause network volumes to be incorrectly mounted. #34108 (Also in 17, 18)
Fixed the initialization of First Party Sets on Windows, where First Party Sets would sometimes fail to load. #34138 

Other Changes

Updated Chromium to 102.0.5005.40. #34089 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@19.0.0-beta.5.
Release Notes for v19.0.0-beta.5
Fixes
Fixed an OSR crash happening when input select items were rendered. #34093 (Also in 17, 18)
Fixed an issue where calling SetLoginItemSettings() could potentially cause network volumes to be incorrectly mounted. #34108 (Also in 17, 18)
Fixed the initialization of First Party Sets on Windows, where First Party Sets would sometimes fail to load. #34138 
Other Changes
Updated Chromium to 102.0.5005.40. #34089 "
256,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@19.0.0-beta.4.
# Release Notes for v19.0.0-beta.4
Fixes

Fixed an issue where BrowserWindow#isFocused() was returning false when blur() was called on macOS. #34031 (Also in 17, 18)
Fixed an issue with the app.requestSingleInstanceLock() API where it would sometimes hang. #34071 (Also in 18)

Other Changes

Updated Chromium to 102.0.5005.27. #33932 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@19.0.0-beta.4.
Release Notes for v19.0.0-beta.4
Fixes
Fixed an issue where BrowserWindow#isFocused() was returning false when blur() was called on macOS. #34031 (Also in 17, 18)
Fixed an issue with the app.requestSingleInstanceLock() API where it would sometimes hang. #34071 (Also in 18)
Other Changes
Updated Chromium to 102.0.5005.27. #33932 "
257,"Release Notes for v17.4.3
Fixes

Fixed an issue where BrowserWindow#isFocused() was returning false when blur() was called on macOS. #34029 (Also in 18, 19)

Other Changes

Backported fix for CVE-2022-1478. #34043 
Backported fix for CVE-2022-1479. #34035 
Backported fix for CVE-2022-1480. #34017 
Backported fix for CVE-2022-1482. #34038 
Backported fix for CVE-2022-1483. #34007 
Backported fix for CVE-2022-1485. #34053 
Backported fix for CVE-2022-1492. #34049 
","Release Notes for v17.4.3
Fixes
Fixed an issue where BrowserWindow#isFocused() was returning false when blur() was called on macOS. #34029 (Also in 18, 19)
Other Changes
Backported fix for CVE-2022-1478. #34043 
Backported fix for CVE-2022-1479. #34035 
Backported fix for CVE-2022-1480. #34017 
Backported fix for CVE-2022-1482. #34038 
Backported fix for CVE-2022-1483. #34007 
Backported fix for CVE-2022-1485. #34053 
Backported fix for CVE-2022-1492. #34049 "
258,"Release Notes for v18.2.1
Fixes

Fixed an issue where BrowserWindow#isFocused() was returning false when blur() was called on macOS. #34030 (Also in 17, 19)
Fixed an issue where mixed-case extension filters in file dialogs were ignored on Linux. #34016 (Also in 19)
[Mac] Fixed Partition Alloc related crash in pre-BigSur (macos <= 10.15). #33965 (Also in 19)

Other Changes

Backported fix for CVE-2022-1492. #34048 
","Release Notes for v18.2.1
Fixes
Fixed an issue where BrowserWindow#isFocused() was returning false when blur() was called on macOS. #34030 (Also in 17, 19)
Fixed an issue where mixed-case extension filters in file dialogs were ignored on Linux. #34016 (Also in 19)
[Mac] Fixed Partition Alloc related crash in pre-BigSur (macos <= 10.15). #33965 (Also in 19)
Other Changes
Backported fix for CVE-2022-1492. #34048 "
259,"Release Notes for v16.2.5
Other Changes

Backported fix for CVE-2022-1478. #34044 
Backported fix for CVE-2022-1480. #34018 
Backported fix for CVE-2022-1482. #34039 
Backported fix for CVE-2022-1483. #34008 
","Release Notes for v16.2.5
Other Changes
Backported fix for CVE-2022-1478. #34044 
Backported fix for CVE-2022-1480. #34018 
Backported fix for CVE-2022-1482. #34039 
Backported fix for CVE-2022-1483. #34008 "
260,"Release Notes for v15.5.4
Other Changes

Backported fix for CVE-2022-1138. #33682 
Backported fix for CVE-2022-1478. #34045 
Backported fix for CVE-2022-1479. #34037 
Backported fix for CVE-2022-1480. #34019 
Backported fix for CVE-2022-1492. #34051 
","Release Notes for v15.5.4
Other Changes
Backported fix for CVE-2022-1138. #33682 
Backported fix for CVE-2022-1478. #34045 
Backported fix for CVE-2022-1479. #34037 
Backported fix for CVE-2022-1480. #34019 
Backported fix for CVE-2022-1492. #34051 "
261,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@19.0.0-beta.3.
# Release Notes for v19.0.0-beta.3
Fixes

Fixed an issue where mixed-case extension filters in file dialogs were ignored on Linux. #34015 
Fixed the initialization of first party sets in the browser process. #34011 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@19.0.0-beta.3.
Release Notes for v19.0.0-beta.3
Fixes
Fixed an issue where mixed-case extension filters in file dialogs were ignored on Linux. #34015 
Fixed the initialization of first party sets in the browser process. #34011 "
262,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@19.0.0-beta.2.
# Release Notes for v19.0.0-beta.2
Features

Enabled systemPreferences.subscribe{Local|Workspace}Notification to take a null value for the event parameter. #33770 (Also in 18)

Fixes

Fixed the initialization of First Party Sets. #33972 
[Mac] Fixed Partition Alloc related crash in pre-BigSur (macos <= 10.15). #33966 (Also in 18)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@19.0.0-beta.2.
Release Notes for v19.0.0-beta.2
Features
Enabled systemPreferences.subscribe{Local|Workspace}Notification to take a null value for the event parameter. #33770 (Also in 18)
Fixes
Fixed the initialization of First Party Sets. #33972 
[Mac] Fixed Partition Alloc related crash in pre-BigSur (macos <= 10.15). #33966 (Also in 18)"
263,"Release Notes for v18.2.0
Features

Fixed an issue where the PDF Viewer would fail if a user attempted to reload. #33711 (Also in 19)

Fixes

Fixed an issue with the app.requestSingleInstanceLock() API where it would sometimes hang. #33778 

Other Changes

Fixed child_process.spawn ENOENT error with cwd option. #33871 (Also in 16, 17, 19)
Updated Chromium to 100.0.4896.143. #33948 
","Release Notes for v18.2.0
Features
Fixed an issue where the PDF Viewer would fail if a user attempted to reload. #33711 (Also in 19)
Fixes
Fixed an issue with the app.requestSingleInstanceLock() API where it would sometimes hang. #33778 
Other Changes
Fixed child_process.spawn ENOENT error with cwd option. #33871 (Also in 16, 17, 19)
Updated Chromium to 100.0.4896.143. #33948 "
264,"Release Notes for v17.4.2
Other Changes

Backported fix for CVE-2022-1305. #33858 
Backported fix for CVE-2022-1308. #33886 
Backported fix for CVE-2022-1310. #33829 
Backported fix for CVE-2022-1314. #33882 
Backported fix for CVE-2022-1364. #33834 
Backported fix for chromium:1310761. #33854 
Fixed child_process.spawn ENOENT error with cwd option. #33870 (Also in 16, 18, 19)
Security: backported fix for CVE-2022-1306. #33850 
Security: backported fix for chromium:1280852. #33671 
","Release Notes for v17.4.2
Other Changes
Backported fix for CVE-2022-1305. #33858 
Backported fix for CVE-2022-1308. #33886 
Backported fix for CVE-2022-1310. #33829 
Backported fix for CVE-2022-1314. #33882 
Backported fix for CVE-2022-1364. #33834 
Backported fix for chromium:1310761. #33854 
Fixed child_process.spawn ENOENT error with cwd option. #33870 (Also in 16, 18, 19)
Security: backported fix for CVE-2022-1306. #33850 
Security: backported fix for chromium:1280852. #33671 "
265,"Release Notes for v15.5.3
Fixes

Fixed a network service crash that could occur when using setCertificateVerifyProc. #33256 (Also in 16, 17, 18)
shell.openExternal() now reports more detailed errors on Windows. #33656 (Also in 16, 17, 18, 19)

Other Changes

Backported fix for CVE-2022-1134. #33763 
Backported fix for CVE-2022-1305. #33860 
Backported fix for CVE-2022-1310. #33831 
Backported fix for CVE-2022-1314. #33884 
Backported fix for CVE-2022-1364. #33836 
Backported fix for chromium:1286816. #33679 
Backported fix for chromium:1291482. #33676 
Backported fix for chromium:1310761. #33856 
Security: backported fix for CVE-2022-0116 and CVE-2022-1306. #33852 
Security: backported fix for CVE-2022-23308. #33670 
Security: backported fix for chromium:1280743. #33715 
Security: backported fix for chromium:1280852. #33673 
","Release Notes for v15.5.3
Fixes
Fixed a network service crash that could occur when using setCertificateVerifyProc. #33256 (Also in 16, 17, 18)
shell.openExternal() now reports more detailed errors on Windows. #33656 (Also in 16, 17, 18, 19)
Other Changes
Backported fix for CVE-2022-1134. #33763 
Backported fix for CVE-2022-1305. #33860 
Backported fix for CVE-2022-1310. #33831 
Backported fix for CVE-2022-1314. #33884 
Backported fix for CVE-2022-1364. #33836 
Backported fix for chromium:1286816. #33679 
Backported fix for chromium:1291482. #33676 
Backported fix for chromium:1310761. #33856 
Security: backported fix for CVE-2022-0116 and CVE-2022-1306. #33852 
Security: backported fix for CVE-2022-23308. #33670 
Security: backported fix for chromium:1280743. #33715 
Security: backported fix for chromium:1280852. #33673 "
266,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@19.0.0-beta.1.
# Release Notes for v19.0.0-beta.1
Features

Fixed an issue where the PDF Viewer would fail if a user attempted to reload. #33712 (Also in 18)

Other Changes

Updated Chromium to 102.0.4999.0. #33848 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@19.0.0-beta.1.
Release Notes for v19.0.0-beta.1
Features
Fixed an issue where the PDF Viewer would fail if a user attempted to reload. #33712 (Also in 18)
Other Changes
Updated Chromium to 102.0.4999.0. #33848 "
267,"Release Notes for v16.2.4
Other Changes

Backported fix for CVE-2022-1305. #33859 
Backported fix for CVE-2022-1308. #33885 
Backported fix for CVE-2022-1310. #33830 
Backported fix for CVE-2022-1314. #33883 
Backported fix for CVE-2022-1364. #33835 
Backported fix for chromium:1291482. #33675 
Backported fix for chromium:1310761. #33855 
Fixed child_process.spawn ENOENT error with cwd option. #33869 (Also in 17, 18, 19)
Security: backported fix for CVE-2022-0116 and CVE-2022-1306. #33851 
","Release Notes for v16.2.4
Other Changes
Backported fix for CVE-2022-1305. #33859 
Backported fix for CVE-2022-1308. #33885 
Backported fix for CVE-2022-1310. #33830 
Backported fix for CVE-2022-1314. #33883 
Backported fix for CVE-2022-1364. #33835 
Backported fix for chromium:1291482. #33675 
Backported fix for chromium:1310761. #33855 
Fixed child_process.spawn ENOENT error with cwd option. #33869 (Also in 17, 18, 19)
Security: backported fix for CVE-2022-0116 and CVE-2022-1306. #33851 "
268,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@19.0.0-alpha.5.
# Release Notes for v19.0.0-alpha.5
Fixes

Apply senderFrame details to ipcMain port event. #33783 (Also in 16, 17, 18)
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@19.0.0-alpha.5.
Release Notes for v19.0.0-alpha.5
Fixes
Apply senderFrame details to ipcMain port event. #33783 (Also in 16, 17, 18)"
269,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@19.0.0-alpha.4.
# Release Notes for v19.0.0-alpha.4
Fixes

Fixed crash when img without alt is shown with accessibility features enabled. #33841 

Other Changes

Fixed child_process.spawn ENOENT error with cwd option. #33872 (Also in 16, 17, 18)
Updated Chromium to 102.0.4989.0. #33556 
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@19.0.0-alpha.4.
Release Notes for v19.0.0-alpha.4
Fixes
Fixed crash when img without alt is shown with accessibility features enabled. #33841 
Other Changes
Fixed child_process.spawn ENOENT error with cwd option. #33872 (Also in 16, 17, 18)
Updated Chromium to 102.0.4989.0. #33556 "
270,"Release Notes for v18.1.0
Features

Enabled systemPreferences.subscribe{Local|Workspace}Notification to take a null value for the event parameter. #33771 

Fixes

Fixed crash when img without alt is shown with accessibility features enabled. #33843 (Also in 19)
Fixed crash when opening gtk file dialogs due to mismatched versions. #33812 (Also in 19)

Other Changes

Updated Chromium to 100.0.4896.127. #33730 
","Release Notes for v18.1.0
Features
Enabled systemPreferences.subscribe{Local|Workspace}Notification to take a null value for the event parameter. #33771 
Fixes
Fixed crash when img without alt is shown with accessibility features enabled. #33843 (Also in 19)
Fixed crash when opening gtk file dialogs due to mismatched versions. #33812 (Also in 19)
Other Changes
Updated Chromium to 100.0.4896.127. #33730 "
271,"Release Notes for v17.4.1
Fixes

Apply senderFrame details to ipcMain port event. #33781 (Also in 16, 18)
Fixed behavior of BrowserWindow.maximize on macOS for not shown windows. #33536 (Also in 15, 16, 18)
shell.openExternal() now reports more detailed errors on Windows. #33658 (Also in 15, 16, 18, 19)

Other Changes

Backported fix for CVE-2022-1134. #33761 
Backported fix for CVE-2022-1138. #33680 
Backported fix for chromium:1286816. #33677 
Backported fix for chromium:1291482. #33674 
Backported fix for chromium:1297731, b/218211225. #33709 
Security: backported fix for CVE-2022-23308. #33668 
","Release Notes for v17.4.1
Fixes
Apply senderFrame details to ipcMain port event. #33781 (Also in 16, 18)
Fixed behavior of BrowserWindow.maximize on macOS for not shown windows. #33536 (Also in 15, 16, 18)
shell.openExternal() now reports more detailed errors on Windows. #33658 (Also in 15, 16, 18, 19)
Other Changes
Backported fix for CVE-2022-1134. #33761 
Backported fix for CVE-2022-1138. #33680 
Backported fix for chromium:1286816. #33677 
Backported fix for chromium:1291482. #33674 
Backported fix for chromium:1297731, b/218211225. #33709 
Security: backported fix for CVE-2022-23308. #33668 "
272,"Release Notes for v16.2.3
Fixes

Apply senderFrame details to ipcMain port event. #33780 (Also in 17, 18)
Fixed a network service crash that could occur when using setCertificateVerifyProc. #33255 (Also in 15, 17, 18)
Fixed a potential crash in Browser.getFocusedWindow() when child windows are closed. #33540 (Also in 17, 18)
Fixed an issue where new bounds set via setBounds was not correctly applied if the user was moving or resizing the window concurrently on Windows. #33544 (Also in 17, 18)
Fixed emojis appearing black and white in Chromium 96. #33683 
Fixed issues with frameless window animations and styling. #33607 (Also in 17, 18, 19)
shell.openExternal() now reports more detailed errors on Windows. #33657 (Also in 15, 17, 18, 19)

Other Changes

Backported fix for CVE-2022-1134. #33762 
Backported fix for CVE-2022-1138. #33681 
Backported fix for chromium:1286816. #33678 
Backported fix for chromium:1297731, b/218211225. #33710 
Security: backported fix for CVE-2022-23308. #33669 
Security: backported fix for chromium:1280852. #33672 
","Release Notes for v16.2.3
Fixes
Apply senderFrame details to ipcMain port event. #33780 (Also in 17, 18)
Fixed a network service crash that could occur when using setCertificateVerifyProc. #33255 (Also in 15, 17, 18)
Fixed a potential crash in Browser.getFocusedWindow() when child windows are closed. #33540 (Also in 17, 18)
Fixed an issue where new bounds set via setBounds was not correctly applied if the user was moving or resizing the window concurrently on Windows. #33544 (Also in 17, 18)
Fixed emojis appearing black and white in Chromium 96. #33683 
Fixed issues with frameless window animations and styling. #33607 (Also in 17, 18, 19)
shell.openExternal() now reports more detailed errors on Windows. #33657 (Also in 15, 17, 18, 19)
Other Changes
Backported fix for CVE-2022-1134. #33762 
Backported fix for CVE-2022-1138. #33681 
Backported fix for chromium:1286816. #33678 
Backported fix for chromium:1297731, b/218211225. #33710 
Security: backported fix for CVE-2022-23308. #33669 
Security: backported fix for chromium:1280852. #33672 "
273,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@19.0.0-alpha.3.
# Release Notes for v19.0.0-alpha.3
Fixes

Fixed crash when opening gtk file dialogs due to mismatched versions. #33813 (Also in 18)
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@19.0.0-alpha.3.
Release Notes for v19.0.0-alpha.3
Fixes
Fixed crash when opening gtk file dialogs due to mismatched versions. #33813 (Also in 18)"
274,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@19.0.0-alpha.2.
# Release Notes for v19.0.0-alpha.2
Fixes

Fixed an issue where #ARGB ->#RGBA and #AARRGGBB ->#RRGGBBAA were converted improperly when setting background color. #33755 
Fixed an issue where Escape keyboard events would not be properly propagated to the parent window after entering fullscreen and then exiting it again on Windows. #33788 (Also in 18)
Fixed an issue where the the window bounds would incorrectly change if BrowserWindow.unmaximize was called on a window whose user bounds were maximized. #33549 (Also in 16, 17, 18)
Fixed incorrect return value of app.requestSingleInstanceLock() when setting non-existent user data folder. #33593 (Also in 16, 17, 18)
Fixed issues with frameless window animations and styling. #33609 (Also in 16, 17, 18)
Fixed potential crash while generating accessibility trees for certain images. #33617 (Also in 18)
shell.openExternal() now reports more detailed errors on Windows. #33660 (Also in 15, 16, 17, 18)

Other Changes

Temporarily disabled symbol generation on 32-bit Windows due to issues with symbol generation on that platform. #33689 
Updated Chromium to 102.0.4971.0. #33518 
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@19.0.0-alpha.2.
Release Notes for v19.0.0-alpha.2
Fixes
Fixed an issue where #ARGB ->#RGBA and #AARRGGBB ->#RRGGBBAA were converted improperly when setting background color. #33755 
Fixed an issue where Escape keyboard events would not be properly propagated to the parent window after entering fullscreen and then exiting it again on Windows. #33788 (Also in 18)
Fixed an issue where the the window bounds would incorrectly change if BrowserWindow.unmaximize was called on a window whose user bounds were maximized. #33549 (Also in 16, 17, 18)
Fixed incorrect return value of app.requestSingleInstanceLock() when setting non-existent user data folder. #33593 (Also in 16, 17, 18)
Fixed issues with frameless window animations and styling. #33609 (Also in 16, 17, 18)
Fixed potential crash while generating accessibility trees for certain images. #33617 (Also in 18)
shell.openExternal() now reports more detailed errors on Windows. #33660 (Also in 15, 16, 17, 18)
Other Changes
Temporarily disabled symbol generation on 32-bit Windows due to issues with symbol generation on that platform. #33689 
Updated Chromium to 102.0.4971.0. #33518 "
275,"Release Notes for v18.0.4
Fixes

Apply senderFrame details to ipcMain port event. #33782 (Also in 16, 17)
Fixed an issue where Escape keyboard events would not be properly propagated to the parent window after entering fullscreen and then exiting it again on Windows. #33787 
Fixed the built-in PDF renderer. #33664 
shell.openExternal() now reports more detailed errors on Windows. #33659 (Also in 15, 16, 17, 19)
shell.openExternal() now reports more detailed errors on Windows. #33705 (Also in 15, 16, 17, 19)

Other Changes

Backported fix for chromium:1297731, b/218211225. #33708 
","Release Notes for v18.0.4
Fixes
Apply senderFrame details to ipcMain port event. #33782 (Also in 16, 17)
Fixed an issue where Escape keyboard events would not be properly propagated to the parent window after entering fullscreen and then exiting it again on Windows. #33787 
Fixed the built-in PDF renderer. #33664 
shell.openExternal() now reports more detailed errors on Windows. #33659 (Also in 15, 16, 17, 19)
shell.openExternal() now reports more detailed errors on Windows. #33705 (Also in 15, 16, 17, 19)
Other Changes
Backported fix for chromium:1297731, b/218211225. #33708 "
276,"Release Notes for v18.0.3
Other Changes

Updated Chromium to 100.0.4896.75. #33619 
","Release Notes for v18.0.3
Other Changes
Updated Chromium to 100.0.4896.75. #33619 "
277,"Release Notes for v16.2.2
Fixes

Fixed an issue where the the window bounds would incorrectly change if BrowserWindow.unmaximize was called on a window whose user bounds were maximized. #33552 (Also in 17, 18)
Fixed behavior of BrowserWindow.maximize on macOS for not shown windows. #33535 (Also in 15, 18)
Fixed incorrect return value of app.requestSingleInstanceLock() when setting non-existent user data folder. #33590 (Also in 17, 18, 19)

Other Changes

Security: backported fix for chromium:1260129. #33524 
Security: backported fix for chromium:1311641. #33605 
","Release Notes for v16.2.2
Fixes
Fixed an issue where the the window bounds would incorrectly change if BrowserWindow.unmaximize was called on a window whose user bounds were maximized. #33552 (Also in 17, 18)
Fixed behavior of BrowserWindow.maximize on macOS for not shown windows. #33535 (Also in 15, 18)
Fixed incorrect return value of app.requestSingleInstanceLock() when setting non-existent user data folder. #33590 (Also in 17, 18, 19)
Other Changes
Security: backported fix for chromium:1260129. #33524 
Security: backported fix for chromium:1311641. #33605 "
278,"Release Notes for v15.5.2
Fixes

Fixed behavior of BrowserWindow.maximize on macOS for not shown windows. #33523 (Also in 16, 18)

Other Changes

Security: backported fix for chromium:1260129. #33525 
Security: backported fix for chromium:1311641. #33606 
","Release Notes for v15.5.2
Fixes
Fixed behavior of BrowserWindow.maximize on macOS for not shown windows. #33523 (Also in 16, 18)
Other Changes
Security: backported fix for chromium:1260129. #33525 
Security: backported fix for chromium:1311641. #33606 "
279,"Release Notes for v18.0.2
Fixes

Fixed a potential crash in Browser.getFocusedWindow() when child windows are closed. #33538 (Also in 17)
Fixed an issue where the the window bounds would incorrectly change if BrowserWindow.unmaximize was called on a window whose user bounds were maximized. #33550 (Also in 16, 17)
Fixed behavior of BrowserWindow.maximize on macOS for not shown windows. #33537 (Also in 15, 16)
Fixed incorrect return value of app.requestSingleInstanceLock() when setting non-existent user data folder. #33592 (Also in 16, 17, 19)
Fixed issues with frameless window animations and styling. #33610 (Also in 19)
Fixed potential crash while generating accessibility trees for certain images. #33616 (Also in 19)
","Release Notes for v18.0.2
Fixes
Fixed a potential crash in Browser.getFocusedWindow() when child windows are closed. #33538 (Also in 17)
Fixed an issue where the the window bounds would incorrectly change if BrowserWindow.unmaximize was called on a window whose user bounds were maximized. #33550 (Also in 16, 17)
Fixed behavior of BrowserWindow.maximize on macOS for not shown windows. #33537 (Also in 15, 16)
Fixed incorrect return value of app.requestSingleInstanceLock() when setting non-existent user data folder. #33592 (Also in 16, 17, 19)
Fixed issues with frameless window animations and styling. #33610 (Also in 19)
Fixed potential crash while generating accessibility trees for certain images. #33616 (Also in 19)"
280,"Release Notes for v17.4.0
Features

Added BrowserWindow method to change the button color, symbol color, and height of a window with WCO enabled. #33439 (Also in 18)

Fixes

Fixed a potential crash in Browser.getFocusedWindow() when child windows are closed. #33539 (Also in 18)
Fixed an issue where new bounds set via setBounds was not correctly applied if the user was moving or resizing the window concurrently on Windows. #33543 (Also in 18)
Fixed an issue where the the window bounds would incorrectly change if BrowserWindow.unmaximize was called on a window whose user bounds were maximized. #33551 (Also in 16, 18)
Fixed incorrect return value of app.requestSingleInstanceLock() when setting non-existent user data folder. #33591 (Also in 16, 18, 19)
Fixed issues with frameless window animations and styling. #33611 (Also in 18, 19)

Other Changes

Fixed scroll lag on macOS with promotion displays. #33618 
Security: backported fix for chromium:1311641. #33613 
","Release Notes for v17.4.0
Features
Added BrowserWindow method to change the button color, symbol color, and height of a window with WCO enabled. #33439 (Also in 18)
Fixes
Fixed a potential crash in Browser.getFocusedWindow() when child windows are closed. #33539 (Also in 18)
Fixed an issue where new bounds set via setBounds was not correctly applied if the user was moving or resizing the window concurrently on Windows. #33543 (Also in 18)
Fixed an issue where the the window bounds would incorrectly change if BrowserWindow.unmaximize was called on a window whose user bounds were maximized. #33551 (Also in 16, 18)
Fixed incorrect return value of app.requestSingleInstanceLock() when setting non-existent user data folder. #33591 (Also in 16, 18, 19)
Fixed issues with frameless window animations and styling. #33611 (Also in 18, 19)
Other Changes
Fixed scroll lag on macOS with promotion displays. #33618 
Security: backported fix for chromium:1311641. #33613 "
281,"Release Notes for v18.0.1
Fixes

Fixed an issue where Pointer Lock behavior could not be properly exited. #32828 
Fixed crash when WindowButtonsProxy references cleared NSWindow. #33490 (Also in 15, 16, 17)
Fixed crash when running under Wayland caused by calling X11 functions. #33498 (Also in 17)

Other Changes

Updated Chromium to 100.0.4896.60. #33501 
","Release Notes for v18.0.1
Fixes
Fixed an issue where Pointer Lock behavior could not be properly exited. #32828 
Fixed crash when WindowButtonsProxy references cleared NSWindow. #33490 (Also in 15, 16, 17)
Fixed crash when running under Wayland caused by calling X11 functions. #33498 (Also in 17)
Other Changes
Updated Chromium to 100.0.4896.60. #33501 "
282,"Release Notes for v17.3.1
Fixes

Fixed crash when WindowButtonsProxy references cleared NSWindow. #33488 (Also in 15, 16, 18)
Fixed crash when running under Wayland caused by calling X11 functions. #33499 (Also in 18)
","Release Notes for v17.3.1
Fixes
Fixed crash when WindowButtonsProxy references cleared NSWindow. #33488 (Also in 15, 16, 18)
Fixed crash when running under Wayland caused by calling X11 functions. #33499 (Also in 18)"
283,"Release Notes for v16.2.1
Fixes

Fixed crash when WindowButtonsProxy references cleared NSWindow. #33489 (Also in 15, 17, 18)
","Release Notes for v16.2.1
Fixes
Fixed crash when WindowButtonsProxy references cleared NSWindow. #33489 (Also in 15, 17, 18)"
284,"Release Notes for v15.5.1
Fixes

Fixed crash when WindowButtonsProxy references cleared NSWindow. #33487 (Also in 16, 17, 18)
Fixed slowness when using child_process.spawn and related methods on macOS Big Sur and newer. #33406 (Also in 16, 17, 18)
","Release Notes for v15.5.1
Fixes
Fixed crash when WindowButtonsProxy references cleared NSWindow. #33487 (Also in 16, 17, 18)
Fixed slowness when using child_process.spawn and related methods on macOS Big Sur and newer. #33406 (Also in 16, 17, 18)"
285,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@19.0.0-alpha.1.
# Release Notes for v19.0.0-alpha.1
Breaking Changes

Marked .skipTaskbar as unsupported on Linux. #33226 

Features

Added BrowserWindow method to change the button color, symbol color, and height of a window with WCO enabled. #33066 (Also in 18)
Added nativeTheme.inForcedColorsMode API to allow detecting forced color mode. #32956 (Also in 15, 16, 17, 18)
Added ses.setCodeCachePath() API for setting code cache directory. #31154 (Also in 17, 18)
Added ability to configure if window should close when opener closes. #31314 
Added support for more color formats in setBackgroundColor. #31868 (Also in 18)
Added warning that preload scripts will be sandboxed by default beginning in Electron 20. #32868 (Also in 18)

Fixes

Added support for the --unsafely-treat-insecure-origin-as-secure command-line flag. #33189 
Fire 'show' event when a BrowserWindow is shown via maximize(). #32979 (Also in 16, 17, 18)
Fix: initialize asar support in worker threads. #33216 (Also in 18)
Fixed BrowserWindow.showInactive restoring a maximized window to non-maximized on Windows. #32870 (Also in 16, 17, 18)
Fixed a V8 crash that could happen randomly in non-sandboxed renderer processes. #33252 (Also in 18)
Fixed a bug where BrowserWindow.fromWebContents would return undefined during the browser-window-created event. #33257 (Also in 18)
Fixed a network service crash that could occur when using setCertificateVerifyProc. #33204 (Also in 17, 18)
Fixed a potential crash in Browser.getFocusedWindow() when child windows are closed. #33404 
Fixed an issue where BrowserView layout bounds where limited to it's visible bounds. #32747 (Also in 17, 18)
Fixed an issue where Chrom DevTools settings didn't persist between loads. #33120 (Also in 17, 18)
Fixed an issue where First Party Sets were not correctly loaded on app launch. #33339 (Also in 18)
Fixed an issue where Pointer Lock behavior could not be properly exited. #32369 
Fixed an issue where alternateImages did not work properly on macOS. #33026 (Also in 15, 16, 17, 18)
Fixed an issue where webContents.openDevTools({ mode }) did not work for certain dock positions. #32829 (Also in 17, 18)
Fixed an issue where webContents.savePage failed when passing a relative path instead of an absolute one. #32728 (Also in 15, 16, 17, 18)
Fixed an issue where clicking ""Open in Containing Folder"" in the Sources tab in Devtools caused a crash. #33024 (Also in 16, 17, 18)
Fixed an issue where frameless windows on Windows would incorrectly show a small frame during the loading process. #32692 (Also in 14, 15, 16, 17, 18)
Fixed an issue where new bounds set via setBounds was not correctly applied if the user was moving or resizing the window concurrently on Windows. #33288 (Also in 18)
Fixed an issue where pages would not properly print on macOS due to a rendering failure. #32767 (Also in 18)
Fixed an issue where setting window maxHeight or maxWidth made it so the width and height could no longer be resized. #33025 (Also in 17, 18)
Fixed an issue where the Tray could get garbage collected incorrectly under some circumstances. #33040 (Also in 15, 16, 17, 18)
Fixed an issue with background colors being improperly applied to BrowserViews on Windows. #33435 
Fixed an occasional crash on Mac when spawning a child process. #33114 (Also in 17, 18)
Fixed broken event loop in renderer process when process reuse is enabled on windows platform. #33207 (Also in 16, 17, 18)
Fixed broken transparency option in offscreen window rendering. #32885 (Also in 16, 17, 18)
Fixed command string registered via setAsDefaultProtocolClient on windows. #32953 (Also in 14, 15, 16, 17, 18)
Fixed crash in the render process on reload with pending node fs.promises. #33280 (Also in 15, 16, 17, 18)
Fixed crash when WindowButtonsProxy references cleared NSWindow. #33069 (Also in 16, 17, 18)
Fixed drag regions on WCO windows on Windows. #32871 (Also in 15, 16, 17, 18)
Fixed effect when hovering over window controls on Windows in a WCO-enabled window. #32672 (Also in 14, 15, 16, 17, 18)
Fixed incorrect external memory allocation tracking in nativeImage module. #33266 (Also in 15, 16, 17, 18)
Fixed maximizing frameless windows by double-clicking on a draggable (title bar) region. #33438 (Also in 15, 16, 17, 18)
Fixed multiple issues when running under Wayland caused by calling X11 functions. #33355 (Also in 18)
Fixed possible race conditions between frame state and electron ipc. #32734 (Also in 17)
Fixed slowness when using child_process.spawn and related methods on macOS Big Sur and newer. #33337 (Also in 16, 17, 18)
Fixed stale renderer process when application is quit while renderer is busy. #32888 (Also in 14, 15, 16, 17, 18)
Fixed the IncrementCapturerCount regression introduced by 13.0.0-beta.21. #32973 (Also in 17, 18)
SIGUSR1 is no longer handled when the node_cli_inspect fuse is disabled. #33188 
Strip crashpad_handler binary on Linux, reducing bundle size. #33126 (Also in 15, 16, 17, 18)
Theoretical fix for a crash we're seeing when closing multiple child windows at the same time on macOS. #33063 (Also in 17, 18)

Other Changes

Chore: backport EPROTOTYPE fixes from libuv. #32856 (Also in 16, 17, 18)
Fixed an issue where adding/removing display changes the BrowserWindow size. #33109 (Also in 14, 15, 16, 17, 18)
None. #32731 
Removed the semi-documented preloadURL property from WebPreferences. #33228 
Updated Chromium to 102.0.4962.3. #33447 
Updated Node.js to v16.14.2. #32833 
Updated node types version. #33452 (Also in 18)

Documentation

Documentation changes: #33042, #33170
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@19.0.0-alpha.1.
Release Notes for v19.0.0-alpha.1
Breaking Changes
Marked .skipTaskbar as unsupported on Linux. #33226 
Features
Added BrowserWindow method to change the button color, symbol color, and height of a window with WCO enabled. #33066 (Also in 18)
Added nativeTheme.inForcedColorsMode API to allow detecting forced color mode. #32956 (Also in 15, 16, 17, 18)
Added ses.setCodeCachePath() API for setting code cache directory. #31154 (Also in 17, 18)
Added ability to configure if window should close when opener closes. #31314 
Added support for more color formats in setBackgroundColor. #31868 (Also in 18)
Added warning that preload scripts will be sandboxed by default beginning in Electron 20. #32868 (Also in 18)
Fixes
Added support for the --unsafely-treat-insecure-origin-as-secure command-line flag. #33189 
Fire 'show' event when a BrowserWindow is shown via maximize(). #32979 (Also in 16, 17, 18)
Fix: initialize asar support in worker threads. #33216 (Also in 18)
Fixed BrowserWindow.showInactive restoring a maximized window to non-maximized on Windows. #32870 (Also in 16, 17, 18)
Fixed a V8 crash that could happen randomly in non-sandboxed renderer processes. #33252 (Also in 18)
Fixed a bug where BrowserWindow.fromWebContents would return undefined during the browser-window-created event. #33257 (Also in 18)
Fixed a network service crash that could occur when using setCertificateVerifyProc. #33204 (Also in 17, 18)
Fixed a potential crash in Browser.getFocusedWindow() when child windows are closed. #33404 
Fixed an issue where BrowserView layout bounds where limited to it's visible bounds. #32747 (Also in 17, 18)
Fixed an issue where Chrom DevTools settings didn't persist between loads. #33120 (Also in 17, 18)
Fixed an issue where First Party Sets were not correctly loaded on app launch. #33339 (Also in 18)
Fixed an issue where Pointer Lock behavior could not be properly exited. #32369 
Fixed an issue where alternateImages did not work properly on macOS. #33026 (Also in 15, 16, 17, 18)
Fixed an issue where webContents.openDevTools({ mode }) did not work for certain dock positions. #32829 (Also in 17, 18)
Fixed an issue where webContents.savePage failed when passing a relative path instead of an absolute one. #32728 (Also in 15, 16, 17, 18)
Fixed an issue where clicking ""Open in Containing Folder"" in the Sources tab in Devtools caused a crash. #33024 (Also in 16, 17, 18)
Fixed an issue where frameless windows on Windows would incorrectly show a small frame during the loading process. #32692 (Also in 14, 15, 16, 17, 18)
Fixed an issue where new bounds set via setBounds was not correctly applied if the user was moving or resizing the window concurrently on Windows. #33288 (Also in 18)
Fixed an issue where pages would not properly print on macOS due to a rendering failure. #32767 (Also in 18)
Fixed an issue where setting window maxHeight or maxWidth made it so the width and height could no longer be resized. #33025 (Also in 17, 18)
Fixed an issue where the Tray could get garbage collected incorrectly under some circumstances. #33040 (Also in 15, 16, 17, 18)
Fixed an issue with background colors being improperly applied to BrowserViews on Windows. #33435 
Fixed an occasional crash on Mac when spawning a child process. #33114 (Also in 17, 18)
Fixed broken event loop in renderer process when process reuse is enabled on windows platform. #33207 (Also in 16, 17, 18)
Fixed broken transparency option in offscreen window rendering. #32885 (Also in 16, 17, 18)
Fixed command string registered via setAsDefaultProtocolClient on windows. #32953 (Also in 14, 15, 16, 17, 18)
Fixed crash in the render process on reload with pending node fs.promises. #33280 (Also in 15, 16, 17, 18)
Fixed crash when WindowButtonsProxy references cleared NSWindow. #33069 (Also in 16, 17, 18)
Fixed drag regions on WCO windows on Windows. #32871 (Also in 15, 16, 17, 18)
Fixed effect when hovering over window controls on Windows in a WCO-enabled window. #32672 (Also in 14, 15, 16, 17, 18)
Fixed incorrect external memory allocation tracking in nativeImage module. #33266 (Also in 15, 16, 17, 18)
Fixed maximizing frameless windows by double-clicking on a draggable (title bar) region. #33438 (Also in 15, 16, 17, 18)
Fixed multiple issues when running under Wayland caused by calling X11 functions. #33355 (Also in 18)
Fixed possible race conditions between frame state and electron ipc. #32734 (Also in 17)
Fixed slowness when using child_process.spawn and related methods on macOS Big Sur and newer. #33337 (Also in 16, 17, 18)
Fixed stale renderer process when application is quit while renderer is busy. #32888 (Also in 14, 15, 16, 17, 18)
Fixed the IncrementCapturerCount regression introduced by 13.0.0-beta.21. #32973 (Also in 17, 18)
SIGUSR1 is no longer handled when the node_cli_inspect fuse is disabled. #33188 
Strip crashpad_handler binary on Linux, reducing bundle size. #33126 (Also in 15, 16, 17, 18)
Theoretical fix for a crash we're seeing when closing multiple child windows at the same time on macOS. #33063 (Also in 17, 18)
Other Changes
Chore: backport EPROTOTYPE fixes from libuv. #32856 (Also in 16, 17, 18)
Fixed an issue where adding/removing display changes the BrowserWindow size. #33109 (Also in 14, 15, 16, 17, 18)
None. #32731 
Removed the semi-documented preloadURL property from WebPreferences. #33228 
Updated Chromium to 102.0.4962.3. #33447 
Updated Node.js to v16.14.2. #32833 
Updated node types version. #33452 (Also in 18)
Documentation
Documentation changes: #33042, #33170"
286,"Release Notes for v18.0.0
Stack Upgrades

Chromium 100.0.4896.56
New in 100
New in 99


Node v16.13.2
v16.13.2 release notes
v16.13.1 release notes


V8 v10.0
V8 10.0 blog post
V8 9.9 blog post 



Breaking Changes

Removed the old BrowserWindowProxy-based implementation of window.open. This also removes the nativeWindowOpen option from webPreferences. #29405 

Features
Additions

Added 'focus' and 'blur' events to WebContents. #25873
Added BrowserWindow method to change the button color, symbol color, and height of a window with WCO enabled. #33440
Added nativeTheme.inForcedColorsMode API to allow detecting forced color mode. #33357 (Also in 15, 16, 17) 
Added Substitutions menu roles on macOS: showSubstitutions, toggleSmartQuotes, toggleSmartDashes, toggleTextReplacement. #32024 
Added first-instance-ack event to the app.requestSingleInstanceLock() flow, so that users can pass some data back from the second instance to the first instance. #31460 
Added height option for Windows Control Overlay. #31222 (Also in 15, 16, 17)
Added ses.setCodeCachePath() API for setting code cache directory. #33286 (Also in 17)
Added rawHeaders to IncomingMessage. #31853 
Added support for more color formats in setBackgroundColor. #33364 
Added warning that preload scripts will be sandboxed by default beginning in Electron 20. #33203
Support obsolete blowfish ciphers bf-{cbc,cfb,ecb} through the Node.js crypto API. #32356 (Also in 17)

Fixes

Fixed a V8 crash that could happen randomly in non-sandboxed renderer processes. #33260 
Fixed a bug where BrowserWindow.fromWebContents would return undefined during the browser-window-created event. #33316
Fixed an issue where First Party Sets were not correctly loaded on app launch. #33345
Fixed an issue where new bounds set via setBounds was not correctly applied if the user was moving or resizing the window concurrently on Windows. #33375 
Fixed an issue where pages would not properly print on macOS due to a rendering failure. #32813
Fix: initialize asar support in worker threads. #33396
Fixed the IncrementCapturerCount regression introduced by 13.0.0-beta.21. #33371

Also in earlier versions....

Allowed specifying x64 arch on Mac Rosetta via npm_config_arch. #32266 (Also in 15, 16, 17)
Assertion failure happening in the showSaveDialogSync() code path has been fixed. (Fixes #31997). #32049 (Also in 14, 15, 16, 17)
Bug fixed for registering protocol in windows which used to set invalid command if the execution path included space. #32220 (Also in 14, 15, 16, 17)
Fire 'show' event when a BrowserWindow is shown via maximize(). #33214 (Also in 16, 17)
Fixed BrowserWindow.showInactive restoring a maximized window to non-maximized on Windows. #33022 (Also in 16, 17)
Fixed VoiceOver not reading typed words correctly in MAS builds. #32543 (Also in 17)
Fixed maxWidth not working in BrowserWindow constructor options. #32628 (Also in 17)
Fixed window.open not overriding parent's webPreferences. #32057 (Also in 15, 16, 17) 
Fixed a crash caused by app.getLocaleCountryCode(). #32256 (Also in 15, 16, 17)
Fixed a crash that occurred when a user attempted to print a document either with window.print(), the print button in the PDF viewer, or with BrowserWindow.webContents() and clicked cancel in the resulting print dialog. #32632 (Also in 17)
Fixed a crash that occurred when user attempted to download an edited PDF. #32512 (Also in 15, 16, 17)
Fixed a crash when starting VoiceOver on macOS. #32564 (Also in 17)
Fixed a network service crash that could occur when using setCertificateVerifyProc. #33253 (Also in 17)
Fixed a potential crash in v8 by using allocation type: kOld in v8 ScriptOrModule legacy lifetime. #32339 (Also in 17)
Fixed a potential crash when importing media files or custom file types. #31881 (Also in 16, 17)
Fixed a potential issue when setting backgroundColor on BrowserViews. #31863 (Also in 14, 15, 16, 17)
Fixed an issue that the alert() dialog title is corrupted. #32434 (Also in 14, 15, 16, 17)
Fixed an issue where BrowserView layout bounds where limited to it's visible bounds. #33399 (Also in 17)
Fixed an issue where Chrom DevTools settings didn't persist between loads. #33206 (Also in 17) 
Fixed an issue where alternateImages did not work properly on macOS. #33107 (Also in 15, 16, 17)
Fixed an issue where ipcRenderer.postMessage would throw errors when the transfer argument was not passed. #32433 (Also in 14, 15, 16, 17)
Fixed an issue where webContents.openDevTools({ mode }) did not work for certain dock positions. #32946 (Also in 17)
Fixed an issue where webContents.savePage failed when passing a relative path instead of an absolute one. #33019 (Also in 15, 16, 17)
Fixed an issue where adding/removing display changes the BrowserWindow size. #33250 (Also in 14, 15, 16, 17)
Fixed an issue where calling screen capture on macOS does not properly release underlying OS capture mechanisms. #32435 (Also in 17)
Fixed an issue where clicking ""Open in Containing Folder"" in the Sources tab in Devtools caused a crash. #33197 (Also in 16, 17)
Fixed an issue where frameless vibrant windows would not show transparency correctly on macOS. #32593 (Also in 16, 17)
Fixed an issue where frameless windows on Windows would incorrectly show a small frame during the loading process. #32714 (Also in 14, 15, 16, 17)
Fixed an issue where if backgroundColor was set to undefined, vibrancy failed to work and the backgroundColor would show up as white. #32517 (Also in 16, 17) 
Fixed an issue where setting window maxHeight or maxWidth made it so the width and height could no longer be resized. #33119 (Also in 17)
Fixed an issue where the 'maximize' and 'unmaximize' events didn't fire properly on linux. #32441 (Also in 14, 15, 16, 17)
Fixed an issue where the Tray could get garbage collected incorrectly under some circumstances. #33074 (Also in 15, 16, 17)
Fixed an issue with transparent windows failing to fire the maximize and unmaximize events on Windows. #32643 (Also in 17)
Fixed an occasional crash on Mac when spawning a child process. #33117 (Also in 17)
Fixed aspect ratio resize for frameless windows on macOS. #32287 (Also in 15, 16, 17)
Fixed broken event loop in renderer process when process reuse is enabled on windows platform. #33361 (Also in 16, 17)
Fixed broken transparency option in offscreen window rendering. #33053 (Also in 16, 17)
Fixed command string registered via setAsDefaultProtocolClient on windows. #33013 (Also in 14, 15, 16, 17)
Fixed console windows from ELECTRON_RUN_AS_NODE instances. #31963 (Also in 16, 17)
Fixed crash in the render process on reload with pending node fs.promises. #33302 (Also in 15, 16, 17)
Fixed crash when calling webContents.setZoomFactor(1.0). #32604 (Also in 13, 14, 15, 16, 17)
Fixed crash when playing media files on Windows 7/8 or macOS 10.11/10.12. #32046 (Also in 13, 14, 15, 16, 17)
Fixed drag regions on WCO windows on Windows. #33202 (Also in 15, 16, 17)
Fixed effect when hovering over window controls on Windows in a WCO-enabled window. #32723 (Also in 14, 15, 16, 17)
Fixed incorrect skipTransformProcessType option parsing in win.setVisibleOnAllWorkspaces(). #32364 (Also in 13, 14, 15, 16, 17)
Fixed incorrect external memory allocation tracking in nativeImage module. #33305 (Also in 15, 16, 17)
Fixed issue where not all serial devices were exposed to the handler specified by session.setDevicePermissionHandler. #32651 (Also in 17)
Fixed maximizing frameless windows by double-clicking on a draggable (title bar) region. #33446 (Also in 15, 16, 17)
Fixed minimized BrowserWindow being restored by BrowserWindow.unmaximize(). #32438 (Also in 14, 15, 16, 17)
Fixed possible race conditions between frame state and electron ipc. #32851 (Also in 17)
Fixed potential crash on Windows and Linux when using desktopCapturer.getSources. #32052 (Also in 16, 17)
Fixed regression where console windows would open for execSync and some spawnSync calls for Windows users. #32340 (Also in 16, 17)
Fixed respecting aspect ratio when maximum size is set on BrowserWindow. #29101 (Also in 14, 15, 16, 17)
Fixed slowness when using child_process.spawn and related methods on macOS Big Sur and newer. #33407 (Also in 16, 17)
Fixed stale renderer process when application is quit while renderer is busy. #32971 (Also in 14, 15, 16, 17) 
Fixed windows with roundedCorners: false unable to be closed. #32597 (Also in 15, 16, 17)
Strip crashpad_handler binary on Linux, reducing bundle size. #33175 (Also in 15, 16, 17)
Strip symbols from crashpad_handler binary on Linux, reducing bundle size. #32540 (Also in 15, 16, 17)
The <webview> implementation was made more robust, it no longer breaks when will-attach-webview handler modifies the internal params.instanceId. #32386 (Also in 16, 17)
Theoretical fix for a crash we're seeing when closing multiple child windows at the same time on macOS. #33284 (Also in 17)

Other Changes

Updated Chromium to 100.0.4896.56. #33475 
Updated node types version. #33477 
Chore: backport EPROTOTYPE fixes from libuv. #32944 (Also in 16, 17)

Documentation

Documentation changes: 
#31991
#32422 
#32533



End of Support for 14.x.y
Electron 14.x.y has reached end-of-support. As per Electron's new 8-week cadence, we are supporting the latest four versions of Electron until May 2022, with the release of Electron 19. After Electron 19 is released, we'll return to supporting the latest three major versions, as well as the alpha, beta, and nightly releases.
|   E18 (Mar'22) |  E19 (May'22) |
| ---- | ---- |
|   18.x.y |    19.x.y |
|   17.x.y |    18.x.y |
|   16.x.y |    17.x.y |
|   15.x.y |    -- |","Release Notes for v18.0.0
Stack Upgrades
Chromium 100.0.4896.56
New in 100
New in 99
Node v16.13.2
v16.13.2 release notes
v16.13.1 release notes
V8 v10.0
V8 10.0 blog post
V8 9.9 blog post 
Breaking Changes
Removed the old BrowserWindowProxy-based implementation of window.open. This also removes the nativeWindowOpen option from webPreferences. #29405 
Features
Additions
Added 'focus' and 'blur' events to WebContents. #25873
Added BrowserWindow method to change the button color, symbol color, and height of a window with WCO enabled. #33440
Added nativeTheme.inForcedColorsMode API to allow detecting forced color mode. #33357 (Also in 15, 16, 17) 
Added Substitutions menu roles on macOS: showSubstitutions, toggleSmartQuotes, toggleSmartDashes, toggleTextReplacement. #32024 
Added first-instance-ack event to the app.requestSingleInstanceLock() flow, so that users can pass some data back from the second instance to the first instance. #31460 
Added height option for Windows Control Overlay. #31222 (Also in 15, 16, 17)
Added ses.setCodeCachePath() API for setting code cache directory. #33286 (Also in 17)
Added rawHeaders to IncomingMessage. #31853 
Added support for more color formats in setBackgroundColor. #33364 
Added warning that preload scripts will be sandboxed by default beginning in Electron 20. #33203
Support obsolete blowfish ciphers bf-{cbc,cfb,ecb} through the Node.js crypto API. #32356 (Also in 17)
Fixes
Fixed a V8 crash that could happen randomly in non-sandboxed renderer processes. #33260 
Fixed a bug where BrowserWindow.fromWebContents would return undefined during the browser-window-created event. #33316
Fixed an issue where First Party Sets were not correctly loaded on app launch. #33345
Fixed an issue where new bounds set via setBounds was not correctly applied if the user was moving or resizing the window concurrently on Windows. #33375 
Fixed an issue where pages would not properly print on macOS due to a rendering failure. #32813
Fix: initialize asar support in worker threads. #33396
Fixed the IncrementCapturerCount regression introduced by 13.0.0-beta.21. #33371
Also in earlier versions....
Allowed specifying x64 arch on Mac Rosetta via npm_config_arch. #32266 (Also in 15, 16, 17)
Assertion failure happening in the showSaveDialogSync() code path has been fixed. (Fixes #31997). #32049 (Also in 14, 15, 16, 17)
Bug fixed for registering protocol in windows which used to set invalid command if the execution path included space. #32220 (Also in 14, 15, 16, 17)
Fire 'show' event when a BrowserWindow is shown via maximize(). #33214 (Also in 16, 17)
Fixed BrowserWindow.showInactive restoring a maximized window to non-maximized on Windows. #33022 (Also in 16, 17)
Fixed VoiceOver not reading typed words correctly in MAS builds. #32543 (Also in 17)
Fixed maxWidth not working in BrowserWindow constructor options. #32628 (Also in 17)
Fixed window.open not overriding parent's webPreferences. #32057 (Also in 15, 16, 17) 
Fixed a crash caused by app.getLocaleCountryCode(). #32256 (Also in 15, 16, 17)
Fixed a crash that occurred when a user attempted to print a document either with window.print(), the print button in the PDF viewer, or with BrowserWindow.webContents() and clicked cancel in the resulting print dialog. #32632 (Also in 17)
Fixed a crash that occurred when user attempted to download an edited PDF. #32512 (Also in 15, 16, 17)
Fixed a crash when starting VoiceOver on macOS. #32564 (Also in 17)
Fixed a network service crash that could occur when using setCertificateVerifyProc. #33253 (Also in 17)
Fixed a potential crash in v8 by using allocation type: kOld in v8 ScriptOrModule legacy lifetime. #32339 (Also in 17)
Fixed a potential crash when importing media files or custom file types. #31881 (Also in 16, 17)
Fixed a potential issue when setting backgroundColor on BrowserViews. #31863 (Also in 14, 15, 16, 17)
Fixed an issue that the alert() dialog title is corrupted. #32434 (Also in 14, 15, 16, 17)
Fixed an issue where BrowserView layout bounds where limited to it's visible bounds. #33399 (Also in 17)
Fixed an issue where Chrom DevTools settings didn't persist between loads. #33206 (Also in 17) 
Fixed an issue where alternateImages did not work properly on macOS. #33107 (Also in 15, 16, 17)
Fixed an issue where ipcRenderer.postMessage would throw errors when the transfer argument was not passed. #32433 (Also in 14, 15, 16, 17)
Fixed an issue where webContents.openDevTools({ mode }) did not work for certain dock positions. #32946 (Also in 17)
Fixed an issue where webContents.savePage failed when passing a relative path instead of an absolute one. #33019 (Also in 15, 16, 17)
Fixed an issue where adding/removing display changes the BrowserWindow size. #33250 (Also in 14, 15, 16, 17)
Fixed an issue where calling screen capture on macOS does not properly release underlying OS capture mechanisms. #32435 (Also in 17)
Fixed an issue where clicking ""Open in Containing Folder"" in the Sources tab in Devtools caused a crash. #33197 (Also in 16, 17)
Fixed an issue where frameless vibrant windows would not show transparency correctly on macOS. #32593 (Also in 16, 17)
Fixed an issue where frameless windows on Windows would incorrectly show a small frame during the loading process. #32714 (Also in 14, 15, 16, 17)
Fixed an issue where if backgroundColor was set to undefined, vibrancy failed to work and the backgroundColor would show up as white. #32517 (Also in 16, 17) 
Fixed an issue where setting window maxHeight or maxWidth made it so the width and height could no longer be resized. #33119 (Also in 17)
Fixed an issue where the 'maximize' and 'unmaximize' events didn't fire properly on linux. #32441 (Also in 14, 15, 16, 17)
Fixed an issue where the Tray could get garbage collected incorrectly under some circumstances. #33074 (Also in 15, 16, 17)
Fixed an issue with transparent windows failing to fire the maximize and unmaximize events on Windows. #32643 (Also in 17)
Fixed an occasional crash on Mac when spawning a child process. #33117 (Also in 17)
Fixed aspect ratio resize for frameless windows on macOS. #32287 (Also in 15, 16, 17)
Fixed broken event loop in renderer process when process reuse is enabled on windows platform. #33361 (Also in 16, 17)
Fixed broken transparency option in offscreen window rendering. #33053 (Also in 16, 17)
Fixed command string registered via setAsDefaultProtocolClient on windows. #33013 (Also in 14, 15, 16, 17)
Fixed console windows from ELECTRON_RUN_AS_NODE instances. #31963 (Also in 16, 17)
Fixed crash in the render process on reload with pending node fs.promises. #33302 (Also in 15, 16, 17)
Fixed crash when calling webContents.setZoomFactor(1.0). #32604 (Also in 13, 14, 15, 16, 17)
Fixed crash when playing media files on Windows 7/8 or macOS 10.11/10.12. #32046 (Also in 13, 14, 15, 16, 17)
Fixed drag regions on WCO windows on Windows. #33202 (Also in 15, 16, 17)
Fixed effect when hovering over window controls on Windows in a WCO-enabled window. #32723 (Also in 14, 15, 16, 17)
Fixed incorrect skipTransformProcessType option parsing in win.setVisibleOnAllWorkspaces(). #32364 (Also in 13, 14, 15, 16, 17)
Fixed incorrect external memory allocation tracking in nativeImage module. #33305 (Also in 15, 16, 17)
Fixed issue where not all serial devices were exposed to the handler specified by session.setDevicePermissionHandler. #32651 (Also in 17)
Fixed maximizing frameless windows by double-clicking on a draggable (title bar) region. #33446 (Also in 15, 16, 17)
Fixed minimized BrowserWindow being restored by BrowserWindow.unmaximize(). #32438 (Also in 14, 15, 16, 17)
Fixed possible race conditions between frame state and electron ipc. #32851 (Also in 17)
Fixed potential crash on Windows and Linux when using desktopCapturer.getSources. #32052 (Also in 16, 17)
Fixed regression where console windows would open for execSync and some spawnSync calls for Windows users. #32340 (Also in 16, 17)
Fixed respecting aspect ratio when maximum size is set on BrowserWindow. #29101 (Also in 14, 15, 16, 17)
Fixed slowness when using child_process.spawn and related methods on macOS Big Sur and newer. #33407 (Also in 16, 17)
Fixed stale renderer process when application is quit while renderer is busy. #32971 (Also in 14, 15, 16, 17) 
Fixed windows with roundedCorners: false unable to be closed. #32597 (Also in 15, 16, 17)
Strip crashpad_handler binary on Linux, reducing bundle size. #33175 (Also in 15, 16, 17)
Strip symbols from crashpad_handler binary on Linux, reducing bundle size. #32540 (Also in 15, 16, 17)
The  implementation was made more robust, it no longer breaks when will-attach-webview handler modifies the internal params.instanceId. #32386 (Also in 16, 17)
Theoretical fix for a crash we're seeing when closing multiple child windows at the same time on macOS. #33284 (Also in 17)
Other Changes
Updated Chromium to 100.0.4896.56. #33475 
Updated node types version. #33477 
Chore: backport EPROTOTYPE fixes from libuv. #32944 (Also in 16, 17)
Documentation
Documentation changes: 
31991
32422
32533
End of Support for 14.x.y
Electron 14.x.y has reached end-of-support. As per Electron's new 8-week cadence, we are supporting the latest four versions of Electron until May 2022, with the release of Electron 19. After Electron 19 is released, we'll return to supporting the latest three major versions, as well as the alpha, beta, and nightly releases.
|   E18 (Mar'22) |  E19 (May'22) |
| ---- | ---- |
|   18.x.y |    19.x.y |
|   17.x.y |    18.x.y |
|   16.x.y |    17.x.y |
|   15.x.y |    -- |"
287,"Release Notes for v17.3.0
Features

Added nativeTheme.inForcedColorsMode API to allow detecting forced color mode. #33358 (Also in 15, 16, 18)

Fixes

Fix: initialize asar support in worker threads. #33395 (Also in 18)
Fixed maximizing frameless windows by double-clicking on a draggable (title bar) region. #33445 (Also in 15, 16, 18)
Fixed slowness when using child_process.spawn and related methods on macOS Big Sur and newer. #33408 (Also in 16, 18)
Fixed the IncrementCapturerCount regression introduced by 13.0.0-beta.21. #33430 (Also in 18)

Other Changes

Updated Chromium to 98.0.4758.141. #33483 
","Release Notes for v17.3.0
Features
Added nativeTheme.inForcedColorsMode API to allow detecting forced color mode. #33358 (Also in 15, 16, 18)
Fixes
Fix: initialize asar support in worker threads. #33395 (Also in 18)
Fixed maximizing frameless windows by double-clicking on a draggable (title bar) region. #33445 (Also in 15, 16, 18)
Fixed slowness when using child_process.spawn and related methods on macOS Big Sur and newer. #33408 (Also in 16, 18)
Fixed the IncrementCapturerCount regression introduced by 13.0.0-beta.21. #33430 (Also in 18)
Other Changes
Updated Chromium to 98.0.4758.141. #33483 "
288,"Release Notes for v14.2.9
Other Changes

Backported fix for CVE-2022-0976. #33391 
Backported fix for chromium:1296876. #33394 
Backported fix for chromium:1309225. #33474 

End of Support for 14.x.y
Electron 14.x.y has reached end-of-support as per the project's support policy. Developers and applications are encouraged to upgrade to a newer version of Electron.","Release Notes for v14.2.9
Other Changes
Backported fix for CVE-2022-0976. #33391 
Backported fix for chromium:1296876. #33394 
Backported fix for chromium:1309225. #33474 
End of Support for 14.x.y
Electron 14.x.y has reached end-of-support as per the project's support policy. Developers and applications are encouraged to upgrade to a newer version of Electron."
289,"Release Notes for v16.2.0
Features

Added nativeTheme.inForcedColorsMode API to allow detecting forced color mode. #33359 (Also in 15, 17, 18)

Fixes

Fixed maximizing frameless windows by double-clicking on a draggable (title bar) region. #33444 (Also in 15, 17, 18)
Fixed slowness when using child_process.spawn and related methods on macOS Big Sur and newer. #33405 (Also in 17, 18)

Other Changes

Backported fix for CVE-2022-0976. #33389 
Backported fix for CVE-2022-1096. #33472 
Backported fix for chromium:1296876. #33392 
Fixed an issue where moving a window created in a scaled display to a regular display would increase the window size. #33381 
Security: backported fix for CVE-2022-0806. #33240 
Security: backported fix for CVE-2022-0975. #33341 
Security: backported fix for CVE-2022-0978. #33340 
","Release Notes for v16.2.0
Features
Added nativeTheme.inForcedColorsMode API to allow detecting forced color mode. #33359 (Also in 15, 17, 18)
Fixes
Fixed maximizing frameless windows by double-clicking on a draggable (title bar) region. #33444 (Also in 15, 17, 18)
Fixed slowness when using child_process.spawn and related methods on macOS Big Sur and newer. #33405 (Also in 17, 18)
Other Changes
Backported fix for CVE-2022-0976. #33389 
Backported fix for CVE-2022-1096. #33472 
Backported fix for chromium:1296876. #33392 
Fixed an issue where moving a window created in a scaled display to a regular display would increase the window size. #33381 
Security: backported fix for CVE-2022-0806. #33240 
Security: backported fix for CVE-2022-0975. #33341 
Security: backported fix for CVE-2022-0978. #33340 "
290,"Release Notes for v15.5.0
Features

Added nativeTheme.inForcedColorsMode API to allow detecting forced color mode. #33360 (Also in 16, 17, 18)

Fixes

Fixed maximizing frameless windows by double-clicking on a draggable (title bar) region. #33449 (Also in 16, 17, 18)

Other Changes

Backported fix for CVE-2022-1096. #33473 
Backported fix for chromium:1296876. #33393 
","Release Notes for v15.5.0
Features
Added nativeTheme.inForcedColorsMode API to allow detecting forced color mode. #33360 (Also in 16, 17, 18)
Fixes
Fixed maximizing frameless windows by double-clicking on a draggable (title bar) region. #33449 (Also in 16, 17, 18)
Other Changes
Backported fix for CVE-2022-1096. #33473 
Backported fix for chromium:1296876. #33393 "
291,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@18.0.0-beta.6.
# Release Notes for v18.0.0-beta.6
Features

Added nativeTheme.inForcedColorsMode API to allow detecting forced color mode. #33357 (Also in 15, 17)
Added support for more color formats in setBackgroundColor. #33364 

Fixes

Fire 'show' event when a BrowserWindow is shown via maximize(). #33214 (Also in 16, 17)
Fix: initialize asar support in worker threads. #33396 
Fixed an issue where BrowserView layout bounds where limited to it's visible bounds. #33399 (Also in 17)
Fixed an issue where new bounds set via setBounds was not correctly applied if the user was moving or resizing the window concurrently on Windows. #33375 
Fixed broken event loop in renderer process when process reuse is enabled on windows platform. #33361 (Also in 16, 17)
Fixed slowness when using child_process.spawn and related methods on macOS Big Sur and newer. #33407 (Also in 17)
Fixed the IncrementCapturerCount regression introduced by 13.0.0-beta.21. #33371 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@18.0.0-beta.6.
Release Notes for v18.0.0-beta.6
Features
Added nativeTheme.inForcedColorsMode API to allow detecting forced color mode. #33357 (Also in 15, 17)
Added support for more color formats in setBackgroundColor. #33364 
Fixes
Fire 'show' event when a BrowserWindow is shown via maximize(). #33214 (Also in 16, 17)
Fix: initialize asar support in worker threads. #33396 
Fixed an issue where BrowserView layout bounds where limited to it's visible bounds. #33399 (Also in 17)
Fixed an issue where new bounds set via setBounds was not correctly applied if the user was moving or resizing the window concurrently on Windows. #33375 
Fixed broken event loop in renderer process when process reuse is enabled on windows platform. #33361 (Also in 16, 17)
Fixed slowness when using child_process.spawn and related methods on macOS Big Sur and newer. #33407 (Also in 17)
Fixed the IncrementCapturerCount regression introduced by 13.0.0-beta.21. #33371 "
292,"Release Notes for v17.2.0
Features

Added ses.setCodeCachePath() API for setting code cache directory. #33285 (Also in 18)

Fixes

Fire 'show' event when a BrowserWindow is shown via maximize(). #33213 (Also in 16, 18)
Fixed a network service crash that could occur when using setCertificateVerifyProc. #33254 (Also in 18)
Fixed an issue where BrowserView layout bounds where limited to it's visible bounds. #33398 (Also in 18)
Fixed an issue where Chrome DevTools settings didn't persist between loads. #33273 (Also in 18)
Fixed an issue where clicking ""Open in Containing Folder"" in the Sources tab in Devtools caused a crash. #33196 (Also in 16, 18)
Fixed broken event loop in renderer process when process reuse is enabled on windows platform. #33362 (Also in 16, 18)
Fixed crash in the render process on reload with pending node fs.promises. #33335 (Also in 15, 16, 18)
Fixed drag regions on WCO windows on Windows. #33201 (Also in 15, 16, 18)
Fixed incorrect external memory allocation tracking in nativeImage module. #33306 (Also in 15, 16, 18)
Theoretical fix for a crash we're seeing when closing multiple child windows at the same time on macOS. #33283 (Also in 18)

Other Changes

Fixed an issue where adding/removing display changes the BrowserWindow size. #33251 (Also in 14, 15, 16, 18)
Fixed an issue where moving a window created in a scaled display to a regular display would increase the window size. #33231 
","Release Notes for v17.2.0
Features
Added ses.setCodeCachePath() API for setting code cache directory. #33285 (Also in 18)
Fixes
Fire 'show' event when a BrowserWindow is shown via maximize(). #33213 (Also in 16, 18)
Fixed a network service crash that could occur when using setCertificateVerifyProc. #33254 (Also in 18)
Fixed an issue where BrowserView layout bounds where limited to it's visible bounds. #33398 (Also in 18)
Fixed an issue where Chrome DevTools settings didn't persist between loads. #33273 (Also in 18)
Fixed an issue where clicking ""Open in Containing Folder"" in the Sources tab in Devtools caused a crash. #33196 (Also in 16, 18)
Fixed broken event loop in renderer process when process reuse is enabled on windows platform. #33362 (Also in 16, 18)
Fixed crash in the render process on reload with pending node fs.promises. #33335 (Also in 15, 16, 18)
Fixed drag regions on WCO windows on Windows. #33201 (Also in 15, 16, 18)
Fixed incorrect external memory allocation tracking in nativeImage module. #33306 (Also in 15, 16, 18)
Theoretical fix for a crash we're seeing when closing multiple child windows at the same time on macOS. #33283 (Also in 18)
Other Changes
Fixed an issue where adding/removing display changes the BrowserWindow size. #33251 (Also in 14, 15, 16, 18)
Fixed an issue where moving a window created in a scaled display to a regular display would increase the window size. #33231 "
293,"Release Notes for v16.1.1
Fixes

Fire 'show' event when a BrowserWindow is shown via maximize(). #33212 (Also in 17, 18)
Fixed an issue where calling screen capture on macOS does not properly release underlying OS capture mechanisms. #33314 (Also in 17)
Fixed an issue where clicking ""Open in Containing Folder"" in the Sources tab in Devtools caused a crash. #33313 (Also in 17, 18)
Fixed broken event loop in renderer process when process reuse is enabled on windows platform. #33363 (Also in 17, 18)
Fixed crash in the render process on reload with pending node fs.promises. #33301 (Also in 15, 17, 18)
Fixed drag regions on WCO windows on Windows. #33200 (Also in 15, 17, 18)
Fixed incorrect external memory allocation tracking in nativeImage module. #33312 (Also in 15, 17, 18)

Other Changes

Backported fix for 1283402. #33244 
Backported fix for OSV-2021-777. #33236 
Fixed an issue where adding/removing display changes the BrowserWindow size. #33249 (Also in 14, 15, 17, 18)
Security: backported fix for 1291728. #33179 
Security: backported fix for CVE-2022-0792. #33219 
Security: backported fix for CVE-2022-0801. #33258 
","Release Notes for v16.1.1
Fixes
Fire 'show' event when a BrowserWindow is shown via maximize(). #33212 (Also in 17, 18)
Fixed an issue where calling screen capture on macOS does not properly release underlying OS capture mechanisms. #33314 (Also in 17)
Fixed an issue where clicking ""Open in Containing Folder"" in the Sources tab in Devtools caused a crash. #33313 (Also in 17, 18)
Fixed broken event loop in renderer process when process reuse is enabled on windows platform. #33363 (Also in 17, 18)
Fixed crash in the render process on reload with pending node fs.promises. #33301 (Also in 15, 17, 18)
Fixed drag regions on WCO windows on Windows. #33200 (Also in 15, 17, 18)
Fixed incorrect external memory allocation tracking in nativeImage module. #33312 (Also in 15, 17, 18)
Other Changes
Backported fix for 1283402. #33244 
Backported fix for OSV-2021-777. #33236 
Fixed an issue where adding/removing display changes the BrowserWindow size. #33249 (Also in 14, 15, 17, 18)
Security: backported fix for 1291728. #33179 
Security: backported fix for CVE-2022-0792. #33219 
Security: backported fix for CVE-2022-0801. #33258 "
294,"Release Notes for v15.4.2
Fixes

Fixed crash in the render process on reload with pending node fs.promises. #33300 (Also in 16, 17, 18)
Fixed drag regions on WCO windows on Windows. #33199 (Also in 16, 17, 18)
Fixed incorrect external memory allocation tracking in nativeImage module. #33311 (Also in 16, 17, 18)

Other Changes

Backported fix for 1283402. #33245 
Backported fix for CVE-2022-0976. #33390 
Backported fix for OSV-2021-777. #33237 
Fixed an issue where adding/removing display changes the BrowserWindow size. #33248 (Also in 14, 16, 17, 18)
Security: backported fix for CVE-2022-0792. #33222 
Security: backported fix for CVE-2022-0806. #33242 
Security: backported fix for CVE-2022-0975. #33342 
Security: backported fix for chromium:1281908. #33185 
","Release Notes for v15.4.2
Fixes
Fixed crash in the render process on reload with pending node fs.promises. #33300 (Also in 16, 17, 18)
Fixed drag regions on WCO windows on Windows. #33199 (Also in 16, 17, 18)
Fixed incorrect external memory allocation tracking in nativeImage module. #33311 (Also in 16, 17, 18)
Other Changes
Backported fix for 1283402. #33245 
Backported fix for CVE-2022-0976. #33390 
Backported fix for OSV-2021-777. #33237 
Fixed an issue where adding/removing display changes the BrowserWindow size. #33248 (Also in 14, 16, 17, 18)
Security: backported fix for CVE-2022-0792. #33222 
Security: backported fix for CVE-2022-0806. #33242 
Security: backported fix for CVE-2022-0975. #33342 
Security: backported fix for chromium:1281908. #33185 "
295,"Release Notes for v14.2.8
Other Changes

Backported fix for 1283402. #33246 
Backported fix for OSV-2021-777. #33239 
Fixed an issue where adding/removing display changes the BrowserWindow size. #33247 (Also in 15, 16, 17, 18)
Security: backported fix for CVE-2022-0792. #33223 
Security: backported fix for CVE-2022-0806. #33243 
Security: backported fix for CVE-2022-0975. #33343 
","Release Notes for v14.2.8
Other Changes
Backported fix for 1283402. #33246 
Backported fix for OSV-2021-777. #33239 
Fixed an issue where adding/removing display changes the BrowserWindow size. #33247 (Also in 15, 16, 17, 18)
Security: backported fix for CVE-2022-0792. #33223 
Security: backported fix for CVE-2022-0806. #33243 
Security: backported fix for CVE-2022-0975. #33343 "
296,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@18.0.0-beta.5.
# Release Notes for v18.0.0-beta.5
Features

Added ses.setCodeCachePath() API for setting code cache directory. #33286 (Also in 17)

Fixes

Fixed an issue where First Party Sets were not correctly loaded on app launch. #33345 
Fixed crash in the render process on reload with pending node fs.promises. #33302 (Also in 15, 16)
Theoretical fix for a crash we're seeing when closing multiple child windows at the same time on macOS. #33284 (Also in 17)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@18.0.0-beta.5.
Release Notes for v18.0.0-beta.5
Features
Added ses.setCodeCachePath() API for setting code cache directory. #33286 (Also in 17)
Fixes
Fixed an issue where First Party Sets were not correctly loaded on app launch. #33345 
Fixed crash in the render process on reload with pending node fs.promises. #33302 (Also in 15, 16)
Theoretical fix for a crash we're seeing when closing multiple child windows at the same time on macOS. #33284 (Also in 17)"
297,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@18.0.0-beta.4.
# Release Notes for v18.0.0-beta.4
Fixes

Fixed a V8 crash that could happen randomly in non-sandboxed renderer processes. #33260 
Fixed a bug where BrowserWindow.fromWebContents would return undefined during the browser-window-created event. #33316 
Fixed a network service crash that could occur when using setCertificateVerifyProc. #33253 (Also in 17)
Fixed incorrect external memory allocation tracking in nativeImage module. #33305 (Also in 15, 16, 17)

Other Changes

Fixed an issue where adding/removing display changes the BrowserWindow size. #33250 (Also in 16)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@18.0.0-beta.4.
Release Notes for v18.0.0-beta.4
Fixes
Fixed a V8 crash that could happen randomly in non-sandboxed renderer processes. #33260 
Fixed a bug where BrowserWindow.fromWebContents would return undefined during the browser-window-created event. #33316 
Fixed a network service crash that could occur when using setCertificateVerifyProc. #33253 (Also in 17)
Fixed incorrect external memory allocation tracking in nativeImage module. #33305 (Also in 15, 16, 17)
Other Changes
Fixed an issue where adding/removing display changes the BrowserWindow size. #33250 (Also in 16)"
298,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@18.0.0-beta.3.
# Release Notes for v18.0.0-beta.3
Fixes

Fixed an issue where Chrom DevTools settings didn't persist between loads. #33206 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@18.0.0-beta.3.
Release Notes for v18.0.0-beta.3
Fixes
Fixed an issue where Chrom DevTools settings didn't persist between loads. #33206 "
299,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@18.0.0-beta.2.
# Release Notes for v18.0.0-beta.2
Features

Added warning that preload scripts will be sandboxed by default beginning in Electron 20. #33203 

Fixes

Fixed an issue where clicking ""Open in Containing Folder"" in the Sources tab in Devtools caused a crash. #33197 
Fixed an issue where setting window maxHeight or maxWidth made it so the width and height could no longer be resized. #33119 (Also in 17)
Fixed drag regions on WCO windows on Windows. #33202 (Also in 17)
Strip crashpad_handler binary on Linux, reducing bundle size. #33175 (Also in 15, 16, 17)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@18.0.0-beta.2.
Release Notes for v18.0.0-beta.2
Features
Added warning that preload scripts will be sandboxed by default beginning in Electron 20. #33203 
Fixes
Fixed an issue where clicking ""Open in Containing Folder"" in the Sources tab in Devtools caused a crash. #33197 
Fixed an issue where setting window maxHeight or maxWidth made it so the width and height could no longer be resized. #33119 (Also in 17)
Fixed drag regions on WCO windows on Windows. #33202 (Also in 17)
Strip crashpad_handler binary on Linux, reducing bundle size. #33175 (Also in 15, 16, 17)"
300,"Release Notes for v17.1.2
Fixes

Fixed an issue where setting window maxHeight or maxWidth made it so the width and height could no longer be resized. #33118 (Also in 18)
Strip crashpad_handler binary on Linux, reducing bundle size. #33176 (Also in 15, 16, 18)
","Release Notes for v17.1.2
Fixes
Fixed an issue where setting window maxHeight or maxWidth made it so the width and height could no longer be resized. #33118 (Also in 18)
Strip crashpad_handler binary on Linux, reducing bundle size. #33176 (Also in 15, 16, 18)"
301,"Release Notes for v16.1.0
Features

Added height option for Windows Control Overlay. #33061 (Also in 15, 17)

Fixes

Fixed an issue where alternateImages did not work properly on macOS. #33106 (Also in 15, 17, 18)
Fixed an issue where the Tray could get garbage collected incorrectly under some circumstances. #33075 (Also in 15, 17, 18)
Strip crashpad_handler binary on Linux, reducing bundle size. #33174 (Also in 15, 17, 18)

Other Changes

Security: backported fix for 1295786. #33169 
Security: backported fix for chromium:1281908. #33186 
Security: backported fix for chromium:1289383. #33182 
","Release Notes for v16.1.0
Features
Added height option for Windows Control Overlay. #33061 (Also in 15, 17)
Fixes
Fixed an issue where alternateImages did not work properly on macOS. #33106 (Also in 15, 17, 18)
Fixed an issue where the Tray could get garbage collected incorrectly under some circumstances. #33075 (Also in 15, 17, 18)
Strip crashpad_handler binary on Linux, reducing bundle size. #33174 (Also in 15, 17, 18)
Other Changes
Security: backported fix for 1295786. #33169 
Security: backported fix for chromium:1281908. #33186 
Security: backported fix for chromium:1289383. #33182 "
302,"Release Notes for v15.4.1
Fixes

Fixed an issue where alternateImages did not work properly on macOS. #33104 (Also in 16, 17, 18)
Strip crashpad_handler binary on Linux, reducing bundle size. #33173 (Also in 16, 17, 18)

Other Changes

Security: backported fix for 1291728. #33178 
Security: backported fix for 1295786. #33168 
Security: backported fix for chromium:1289383. #33181 
","Release Notes for v15.4.1
Fixes
Fixed an issue where alternateImages did not work properly on macOS. #33104 (Also in 16, 17, 18)
Strip crashpad_handler binary on Linux, reducing bundle size. #33173 (Also in 16, 17, 18)
Other Changes
Security: backported fix for 1291728. #33178 
Security: backported fix for 1295786. #33168 
Security: backported fix for chromium:1289383. #33181 "
303,"Release Notes for v14.2.7
Fixes

Fixed command string registered via setAsDefaultProtocolClient on windows. #33009 (Also in 15, 16, 17, 18)
Fixed stale renderer process when application is quit while renderer is busy. #32968 (Also in 15, 16, 17, 18)

Other Changes

Backported fix for CVE-2022-0609. #32959 
Backported fix for CVE-2022-0610. #32986 
Security: backported fix for 1252562, 1179098. #32743 
Security: backported fix for 1291728. #33177 
Security: backported fix for 1295786. #33167 
Security: backported fix for CVE-2022-0607. #32984 
Security: backported fix for CVE-2022-0608. #32978 
Security: backported fix for chromium:1274113. #32742 
Security: backported fix for chromium:1277917. #32787 
Security: backported fix for chromium:1281908. #33184 
Security: backported fix for chromium:1282354. #32784 
Security: backported fix for chromium:1283198. #32782 
Security: backported fix for chromium:1283371. #32780 
Security: backported fix for chromium:1283375. #32778 
Security: backported fix for chromium:1289383. #33180 
Security: backported fix for chromium:1289384. #32983 
Security: backported fix for chromium:1289394. #32977 
Security: backported fixes to chromium:1292537 and CVE-2022-0606. #32982 
","Release Notes for v14.2.7
Fixes
Fixed command string registered via setAsDefaultProtocolClient on windows. #33009 (Also in 15, 16, 17, 18)
Fixed stale renderer process when application is quit while renderer is busy. #32968 (Also in 15, 16, 17, 18)
Other Changes
Backported fix for CVE-2022-0609. #32959 
Backported fix for CVE-2022-0610. #32986 
Security: backported fix for 1252562, 1179098. #32743 
Security: backported fix for 1291728. #33177 
Security: backported fix for 1295786. #33167 
Security: backported fix for CVE-2022-0607. #32984 
Security: backported fix for CVE-2022-0608. #32978 
Security: backported fix for chromium:1274113. #32742 
Security: backported fix for chromium:1277917. #32787 
Security: backported fix for chromium:1281908. #33184 
Security: backported fix for chromium:1282354. #32784 
Security: backported fix for chromium:1283198. #32782 
Security: backported fix for chromium:1283371. #32780 
Security: backported fix for chromium:1283375. #32778 
Security: backported fix for chromium:1289383. #33180 
Security: backported fix for chromium:1289384. #32983 
Security: backported fix for chromium:1289394. #32977 
Security: backported fixes to chromium:1292537 and CVE-2022-0606. #32982 "
304,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@18.0.0-beta.1.
# Release Notes for v18.0.0-beta.1","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@18.0.0-beta.1.
Release Notes for v18.0.0-beta.1"
305,"Release Notes for v17.1.1
Fixes

Fixed an issue where alternateImages did not work properly on macOS. #33105 (Also in 15, 16, 18)
Fixed an issue where the Tray could get garbage collected incorrectly under some circumstances. #33076 (Also in 15, 16, 18)
Fixed an occasional crash on Mac when spawning a child process. #33116 (Also in 18)
Fixed broken transparency option in offscreen window rendering. #33052 (Also in 16, 18)

Other Changes

Updated Chromium to 98.0.4758.109. #33085 
","Release Notes for v17.1.1
Fixes
Fixed an issue where alternateImages did not work properly on macOS. #33105 (Also in 15, 16, 18)
Fixed an issue where the Tray could get garbage collected incorrectly under some circumstances. #33076 (Also in 15, 16, 18)
Fixed an occasional crash on Mac when spawning a child process. #33116 (Also in 18)
Fixed broken transparency option in offscreen window rendering. #33052 (Also in 16, 18)
Other Changes
Updated Chromium to 98.0.4758.109. #33085 "
306,"Release Notes for v15.4.0
Features

Added height option for Windows Control Overlay. #33064 (Also in 16, 17)

Fixes

Fixed an issue where webContents.savePage failed when passing a relative path instead of an absolute one. #33018 (Also in 16, 17, 18)
Fixed an issue where the Tray could get garbage collected incorrectly under some circumstances. #33077 (Also in 16, 17, 18)
Fixed command string registered via setAsDefaultProtocolClient on windows. #33011 (Also in 14, 16, 17, 18)
Fixed stale renderer process when application is quit while renderer is busy. #32967 (Also in 14, 16, 17, 18)

Other Changes

Backported fix for CVE-2022-0609. #32901 (Also in 14)
Backported fix for CVE-2022-0610. #32919 
Security: backported fix for CVE-2022-0607. #32917 
Security: backported fix for CVE-2022-0608. #32914 
Security: backported fix for chromium:1242339. #32796 
Security: backported fix for chromium:1258603. #32797 
Security: backported fix for chromium:1259557. #32799 
Security: backported fix for chromium:1262967. #32800 
Security: backported fix for chromium:1277917. #32786 
Security: backported fix for chromium:1281979. #32785 
Security: backported fix for chromium:1282354. #32783 
Security: backported fix for chromium:1283198. #32781 
Security: backported fix for chromium:1289384. #32912 
Security: backported fix for chromium:1289394. #32908 
Security: backported fixes to chromium:1292537 and CVE-2022-0606. #32904 
","Release Notes for v15.4.0
Features
Added height option for Windows Control Overlay. #33064 (Also in 16, 17)
Fixes
Fixed an issue where webContents.savePage failed when passing a relative path instead of an absolute one. #33018 (Also in 16, 17, 18)
Fixed an issue where the Tray could get garbage collected incorrectly under some circumstances. #33077 (Also in 16, 17, 18)
Fixed command string registered via setAsDefaultProtocolClient on windows. #33011 (Also in 14, 16, 17, 18)
Fixed stale renderer process when application is quit while renderer is busy. #32967 (Also in 14, 16, 17, 18)
Other Changes
Backported fix for CVE-2022-0609. #32901 (Also in 14)
Backported fix for CVE-2022-0610. #32919 
Security: backported fix for CVE-2022-0607. #32917 
Security: backported fix for CVE-2022-0608. #32914 
Security: backported fix for chromium:1242339. #32796 
Security: backported fix for chromium:1258603. #32797 
Security: backported fix for chromium:1259557. #32799 
Security: backported fix for chromium:1262967. #32800 
Security: backported fix for chromium:1277917. #32786 
Security: backported fix for chromium:1281979. #32785 
Security: backported fix for chromium:1282354. #32783 
Security: backported fix for chromium:1283198. #32781 
Security: backported fix for chromium:1289384. #32912 
Security: backported fix for chromium:1289394. #32908 
Security: backported fixes to chromium:1292537 and CVE-2022-0606. #32904 "
307,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@18.0.0-alpha.5.
# Release Notes for v18.0.0-alpha.5
Fixes

Fixed an issue where the Tray could get garbage collected incorrectly under some circumstances. #33074 (Also in 15, 16, 17)
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@18.0.0-alpha.5.
Release Notes for v18.0.0-alpha.5
Fixes
Fixed an issue where the Tray could get garbage collected incorrectly under some circumstances. #33074 (Also in 15, 16, 17)"
308,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@18.0.0-alpha.4.
# Release Notes for v18.0.0-alpha.4
Fixes

Fixed BrowserWindow.showInactive restoring a maximized window to non-maximized on Windows. #33022 (Also in 16, 17)
Fixed an issue where webContents.openDevTools({ mode }) did not work for certain dock positions. #32946 (Also in 17)
Fixed an issue where webContents.savePage failed when passing a relative path instead of an absolute one. #33019 (Also in 15, 16, 17)
Fixed an issue where pages would not properly print on macOS due to a rendering failure. #32813 
Fixed broken transparency option in offscreen window rendering. #33053 (Also in 16, 17)
Fixed command string registered via setAsDefaultProtocolClient on windows. #33013 (Also in 14, 15, 16, 17)
Fixed stale renderer process when application is quit while renderer is busy. #32971 (Also in 14, 15, 16, 17)

Other Changes

Chore: backport EPROTOTYPE fixes from libuv. #32944 (Also in 16, 17)
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@18.0.0-alpha.4.
Release Notes for v18.0.0-alpha.4
Fixes
Fixed BrowserWindow.showInactive restoring a maximized window to non-maximized on Windows. #33022 (Also in 16, 17)
Fixed an issue where webContents.openDevTools({ mode }) did not work for certain dock positions. #32946 (Also in 17)
Fixed an issue where webContents.savePage failed when passing a relative path instead of an absolute one. #33019 (Also in 15, 16, 17)
Fixed an issue where pages would not properly print on macOS due to a rendering failure. #32813 
Fixed broken transparency option in offscreen window rendering. #33053 (Also in 16, 17)
Fixed command string registered via setAsDefaultProtocolClient on windows. #33013 (Also in 14, 15, 16, 17)
Fixed stale renderer process when application is quit while renderer is busy. #32971 (Also in 14, 15, 16, 17)
Other Changes
Chore: backport EPROTOTYPE fixes from libuv. #32944 (Also in 16, 17)"
309,"Release Notes for v17.1.0
Features

Added height option for Windows Control Overlay. #32939 

Fixes

Fixed BrowserWindow.showInactive restoring a maximized window to non-maximized on Windows. #33021 (Also in 16, 18)
Fixed a crash that occurred when a user attempted to print a document either with window.print(), the print button in the PDF viewer, or with BrowserWindow.webContents() and clicked cancel in the resulting print dialog. #33015 
Fixed an issue where webContents.openDevTools({ mode }) did not work for certain dock positions. #32945 (Also in 18)
Fixed an issue where webContents.savePage failed when passing a relative path instead of an absolute one. #33016 (Also in 15, 16, 18)
Fixed command string registered via setAsDefaultProtocolClient on windows. #33012 (Also in 14, 15, 16, 18)
Fixed stale renderer process when application is quit while renderer is busy. #32970 (Also in 14, 15, 16, 18)

Other Changes

Chore: backport EPROTOTYPE fixes from libuv. #32943 (Also in 16, 18)
Updated Chromium to 98.0.4758.102. #32906 
","Release Notes for v17.1.0
Features
Added height option for Windows Control Overlay. #32939 
Fixes
Fixed BrowserWindow.showInactive restoring a maximized window to non-maximized on Windows. #33021 (Also in 16, 18)
Fixed a crash that occurred when a user attempted to print a document either with window.print(), the print button in the PDF viewer, or with BrowserWindow.webContents() and clicked cancel in the resulting print dialog. #33015 
Fixed an issue where webContents.openDevTools({ mode }) did not work for certain dock positions. #32945 (Also in 18)
Fixed an issue where webContents.savePage failed when passing a relative path instead of an absolute one. #33016 (Also in 15, 16, 18)
Fixed command string registered via setAsDefaultProtocolClient on windows. #33012 (Also in 14, 15, 16, 18)
Fixed stale renderer process when application is quit while renderer is busy. #32970 (Also in 14, 15, 16, 18)
Other Changes
Chore: backport EPROTOTYPE fixes from libuv. #32943 (Also in 16, 18)
Updated Chromium to 98.0.4758.102. #32906 "
310,"Release Notes for v16.0.10
Fixes

Fixed BrowserWindow.showInactive restoring a maximized window to non-maximized on Windows. #33020 (Also in 17, 18)
Fixed an issue where webContents.savePage failed when passing a relative path instead of an absolute one. #33017 (Also in 15, 17, 18)
Fixed broken transparency option in offscreen window rendering. #33051 
Fixed command string registered via setAsDefaultProtocolClient on windows. #33010 (Also in 14, 15, 17, 18)
Fixed stale renderer process when application is quit while renderer is busy. #32969 (Also in 14, 15, 17, 18)

Other Changes

Backported fix for CVE-2022-0609. #32900 
Backported fix for CVE-2022-0610. #32918 
Chore: backport EPROTOTYPE fixes from libuv. #32942 (Also in 17, 18)
Security: backported fix for CVE-2022-0607. #32916 
Security: backported fix for chromium:1039885. #32803 
Security: backported fix for chromium:1258603. #32809 
Security: backported fix for chromium:1262967. #32807 
Security: backported fix for chromium:1267426. #32805 
Security: backported fix for chromium:1267627. #32806 
Security: backported fix for chromium:1274376. #32808 
Security: backported fix for chromium:1289384. #32911 
Security: backported fix for chromium:1289394. #32907 
Security: backported fixes to chromium:1292537 and CVE-2022-0606. #32903 
","Release Notes for v16.0.10
Fixes
Fixed BrowserWindow.showInactive restoring a maximized window to non-maximized on Windows. #33020 (Also in 17, 18)
Fixed an issue where webContents.savePage failed when passing a relative path instead of an absolute one. #33017 (Also in 15, 17, 18)
Fixed broken transparency option in offscreen window rendering. #33051 
Fixed command string registered via setAsDefaultProtocolClient on windows. #33010 (Also in 14, 15, 17, 18)
Fixed stale renderer process when application is quit while renderer is busy. #32969 (Also in 14, 15, 17, 18)
Other Changes
Backported fix for CVE-2022-0609. #32900 
Backported fix for CVE-2022-0610. #32918 
Chore: backport EPROTOTYPE fixes from libuv. #32942 (Also in 17, 18)
Security: backported fix for CVE-2022-0607. #32916 
Security: backported fix for chromium:1039885. #32803 
Security: backported fix for chromium:1258603. #32809 
Security: backported fix for chromium:1262967. #32807 
Security: backported fix for chromium:1267426. #32805 
Security: backported fix for chromium:1267627. #32806 
Security: backported fix for chromium:1274376. #32808 
Security: backported fix for chromium:1289384. #32911 
Security: backported fix for chromium:1289394. #32907 
Security: backported fixes to chromium:1292537 and CVE-2022-0606. #32903 "
311,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@18.0.0-alpha.3.
# Release Notes for v18.0.0-alpha.3
Fixes

Fixed possible race conditions between frame state and electron ipc. #32851 (Also in 17)
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@18.0.0-alpha.3.
Release Notes for v18.0.0-alpha.3
Fixes
Fixed possible race conditions between frame state and electron ipc. #32851 (Also in 17)"
312,"Release Notes for v17.0.1
Fixes

Fixed an issue where frameless windows on Windows would incorrectly show a small frame during the loading process. #32707 (Also in 14, 15, 16, 18)
Fixed effect when hovering over window controls on Windows in a WCO-enabled window. #32719 (Also in 14, 15, 16, 18)
Fixed possible race conditions between frame state and electron ipc. #32815 

Other Changes

Updated Chromium to 98.0.4758.82. #32832 
","Release Notes for v17.0.1
Fixes
Fixed an issue where frameless windows on Windows would incorrectly show a small frame during the loading process. #32707 (Also in 14, 15, 16, 18)
Fixed effect when hovering over window controls on Windows in a WCO-enabled window. #32719 (Also in 14, 15, 16, 18)
Fixed possible race conditions between frame state and electron ipc. #32815 
Other Changes
Updated Chromium to 98.0.4758.82. #32832 "
313,"Release Notes for v16.0.9
Fixes

Fixed an issue where frameless windows on Windows would incorrectly show a small frame during the loading process. #32710 (Also in 14, 15, 17, 18)
Fixed an issue where if backgroundColor was set to undefined, vibrancy failed to work and the backgroundColor would show up as white. #32654 (Also in 17)
Fixed an issue with transparent windows failing to fire the maximize and unmaximize events on Windows. #32689 (Also in 15, 17)
Fixed effect when hovering over window controls on Windows in a WCO-enabled window. #32720 (Also in 14, 15, 17, 18)
Fixed issue where not all serial devices were exposed to the handler specified by session.setDevicePermissionHandler. #32687 (Also in 15, 17)

Other Changes

Backported fix from https://crbug.com/1263070 for filtering in devtools console . #32860 
Security: backported fix for chromium:1248444. #32804 
Security: backported fix for chromium:1255368. #32801 
Security: backported fix for chromium:1260869. #32802 
Security: backported fix for chromium:1274445,v8:7990. #32738 
Updated Chromium to 96.0.4664.174. #32715 
","Release Notes for v16.0.9
Fixes
Fixed an issue where frameless windows on Windows would incorrectly show a small frame during the loading process. #32710 (Also in 14, 15, 17, 18)
Fixed an issue where if backgroundColor was set to undefined, vibrancy failed to work and the backgroundColor would show up as white. #32654 (Also in 17)
Fixed an issue with transparent windows failing to fire the maximize and unmaximize events on Windows. #32689 (Also in 15, 17)
Fixed effect when hovering over window controls on Windows in a WCO-enabled window. #32720 (Also in 14, 15, 17, 18)
Fixed issue where not all serial devices were exposed to the handler specified by session.setDevicePermissionHandler. #32687 (Also in 15, 17)
Other Changes
Backported fix from link for filtering in devtools console . #32860 
Security: backported fix for chromium:1248444. #32804 
Security: backported fix for chromium:1255368. #32801 
Security: backported fix for chromium:1260869. #32802 
Security: backported fix for chromium:1274445,v8:7990. #32738 
Updated Chromium to 96.0.4664.174. #32715 "
314,"Release Notes for v15.3.7
Fixes

Fixed an issue where frameless windows on Windows would incorrectly show a small frame during the loading process. #32708 (Also in 14, 16, 17, 18)
Fixed an issue with transparent windows failing to fire the maximize and unmaximize events on Windows. #32688 (Also in 16, 17)
Fixed effect when hovering over window controls on Windows in a WCO-enabled window. #32717 (Also in 14, 16, 17, 18)
Fixed issue where not all serial devices were exposed to the handler specified by session.setDevicePermissionHandler. #32686 (Also in 16, 17)
The &lt;webview&gt; implementation was made more robust, it no longer breaks when will-attach-webview handler modifies the internal params.instanceId. #32855 (Also in 16, 17)

Other Changes

Fixed crash in v8 regexp assembler. #32770 
Security: backported fix for chromium:1039885. #32790 
Security: backported fix for chromium:1238209. #32798 
Security: backported fix for chromium:1248444. #32789 
Security: backported fix for chromium:1260869. #32791 
Security: backported fix for chromium:1261689. #32792 
Security: backported fix for chromium:1267426. #32793 
Security: backported fix for chromium:1267627. #32794 
Security: backported fix for chromium:1273661. #32795 
Security: backported fix for chromium:1274113. #32741 
Security: backported fix for chromium:1274445,v8:7990. #32739 
Security: backported fix for chromium:1283371. #32779 
Security: backported fix for chromium:1283375. #32777 
Security: backported fix for chromium:1284367. #32775 

Documentation

Documentation changes: #32646
","Release Notes for v15.3.7
Fixes
Fixed an issue where frameless windows on Windows would incorrectly show a small frame during the loading process. #32708 (Also in 14, 16, 17, 18)
Fixed an issue with transparent windows failing to fire the maximize and unmaximize events on Windows. #32688 (Also in 16, 17)
Fixed effect when hovering over window controls on Windows in a WCO-enabled window. #32717 (Also in 14, 16, 17, 18)
Fixed issue where not all serial devices were exposed to the handler specified by session.setDevicePermissionHandler. #32686 (Also in 16, 17)
The <webview> implementation was made more robust, it no longer breaks when will-attach-webview handler modifies the internal params.instanceId. #32855 (Also in 16, 17)
Other Changes
Fixed crash in v8 regexp assembler. #32770 
Security: backported fix for chromium:1039885. #32790 
Security: backported fix for chromium:1238209. #32798 
Security: backported fix for chromium:1248444. #32789 
Security: backported fix for chromium:1260869. #32791 
Security: backported fix for chromium:1261689. #32792 
Security: backported fix for chromium:1267426. #32793 
Security: backported fix for chromium:1267627. #32794 
Security: backported fix for chromium:1273661. #32795 
Security: backported fix for chromium:1274113. #32741 
Security: backported fix for chromium:1274445,v8:7990. #32739 
Security: backported fix for chromium:1283371. #32779 
Security: backported fix for chromium:1283375. #32777 
Security: backported fix for chromium:1284367. #32775 
Documentation
Documentation changes: #32646"
315,"Release Notes for v14.2.6
Fixes

Fixed an issue where frameless windows on Windows would incorrectly show a small frame during the loading process. #32709 (Also in 15, 16, 17, 18)
Fixed effect when hovering over window controls on Windows in a WCO-enabled window. #32716 (Also in 15, 16, 17, 18)

Other Changes

Security: backported fix for chromium:1274445,v8:7990. #32740 
Security: backported fix for chromium:1284367. #32776 
","Release Notes for v14.2.6
Fixes
Fixed an issue where frameless windows on Windows would incorrectly show a small frame during the loading process. #32709 (Also in 15, 16, 17, 18)
Fixed effect when hovering over window controls on Windows in a WCO-enabled window. #32716 (Also in 15, 16, 17, 18)
Other Changes
Security: backported fix for chromium:1274445,v8:7990. #32740 
Security: backported fix for chromium:1284367. #32776 "
316,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@18.0.0-alpha.2.
# Release Notes for v18.0.0-alpha.2
Fixes

Fixed an issue where frameless windows on Windows would incorrectly show a small frame during the loading process. #32714 (Also in 14, 15, 16, 17)
Fixed effect when hovering over window controls on Windows in a WCO-enabled window. #32723 (Also in 14, 15, 16, 17)
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@18.0.0-alpha.2.
Release Notes for v18.0.0-alpha.2
Fixes
Fixed an issue where frameless windows on Windows would incorrectly show a small frame during the loading process. #32714 (Also in 14, 15, 16, 17)
Fixed effect when hovering over window controls on Windows in a WCO-enabled window. #32723 (Also in 14, 15, 16, 17)"
317,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@18.0.0-alpha.1.
# Release Notes for v18.0.0-alpha.1
Features

Added 'focus' and 'blur' events to WebContents. #25873 
Added Substitutions menu roles on macOS: showSubstitutions, toggleSmartQuotes, toggleSmartDashes, toggleTextReplacement. #32024 
Added first-instance-ack event to the app.requestSingleInstanceLock() flow, so that users can pass some data back from the second instance to the first instance. #31460 
Added height option for Windows Control Overlay. #31222 
Added rawHeaders to IncomingMessage. #31853 
Removed the old BrowserWindowProxy-based implementation of window.open. This also removes the nativeWindowOpen option from webPreferences. #29405 
Support obsolete blowfish ciphers bf-{cbc,cfb,ecb} through the Node.js crypto API. #32356 (Also in 17)

Fixes

Allowed specifying x64 arch on Mac Rosetta via npm_config_arch. #32266 (Also in 15, 16, 17)
Assertion failure happening in the showSaveDialogSync() code path has been fixed. (Fixes #31997). #32049 (Also in 14, 15, 16, 17)
Bug fixed for registering protocol in windows which used to set invalid command if the execution path included space. #32220 (Also in 14, 15, 16, 17)
Fixed VoiceOver not reading typed words correctly in MAS builds. #32543 (Also in 17)
Fixed maxWidth not working in BrowserWindow constructor options. #32628 (Also in 17)
Fixed window.open not overriding parent's webPreferences. #32057 (Also in 15, 16, 17)
Fixed a crash caused by app.getLocaleCountryCode(). #32256 (Also in 15, 16, 17)
Fixed a crash that occurred when a user attempted to print a document either with window.print(), the print button in the PDF viewer, or with BrowserWindow.webContents() and clicked cancel in the resulting print dialog. #32632 
Fixed a crash that occurred when user attempted to download an edited PDF. #32512 (Also in 15, 16, 17)
Fixed a crash when starting VoiceOver on macOS. #32564 (Also in 17)
Fixed a potential crash in v8 by using allocation type: kOld in v8 ScriptOrModule legacy lifetime. #32339 (Also in 17)
Fixed a potential crash when importing media files or custom file types. #31881 (Also in 16, 17)
Fixed a potential issue when setting backgroundColor on BrowserViews. #31863 (Also in 14, 15, 16, 17)
Fixed an issue that the alert() dialog title is corrupted. #32434 (Also in 14, 15, 16, 17)
Fixed an issue where ipcRenderer.postMessage would throw errors when the transfer argument was not passed. #32433 (Also in 14, 15, 16, 17)
Fixed an issue where calling screen capture on macOS does not properly release underlying OS capture mechanisms. #32435 (Also in 17)
Fixed an issue where frameless vibrant windows would not show transparency correctly on macOS. #32593 (Also in 16, 17)
Fixed an issue where if backgroundColor was set to undefined, vibrancy failed to work and the backgroundColor would show up as white. #32517 (Also in 16, 17)
Fixed an issue where the 'maximize' and 'unmaximize' events didn't fire properly on linux. #32441 (Also in 14, 15, 16, 17)
Fixed an issue with transparent windows failing to fire the maximize and unmaximize events on Windows. #32643 (Also in 15, 16, 17)
Fixed aspect ratio resize for frameless windows on macOS. #32287 (Also in 15, 16, 17)
Fixed console windows from ELECTRON_RUN_AS_NODE instances. #31963 (Also in 16, 17)
Fixed crash when calling webContents.setZoomFactor(1.0). #32604 (Also in 13, 14, 15, 16, 17)
Fixed crash when playing media files on Windows 7/8 or macOS 10.11/10.12. #32046 (Also in 13, 14, 15, 16, 17)
Fixed incorrect skipTransformProcessType option parsing in win.setVisibleOnAllWorkspaces(). #32364 (Also in 13, 14, 15, 16, 17)
Fixed issue where not all serial devices were exposed to the handler specified by session.setDevicePermissionHandler. #32651 (Also in 15, 16, 17)
Fixed minimized BrowserWindow being restored by BrowserWindow.unmaximize(). #32438 (Also in 14, 15, 16, 17)
Fixed potential crash on Windows and Linux when using desktopCapturer.getSources. #32052 (Also in 16, 17)
Fixed regression where console windows would open for execSync and some spawnSync calls for Windows users. #32340 (Also in 16, 17)
Fixed respecting aspect ratio when maximum size is set on BrowserWindow. #29101 (Also in 14, 15, 16, 17)
Fixed windows with roundedCorners: false unable to be closed. #32597 (Also in 15, 16, 17)
No Notes. #32178 (Also in 13, 14, 15, 16, 17)
No Notes. #32240 (Also in 13, 14, 15, 16, 17)
Strip symbols from crashpad_handler binary on Linux, reducing bundle size. #32540 (Also in 15, 16, 17)
The <webview> implementation was made more robust, it no longer breaks when will-attach-webview handler modifies the internal params.instanceId. #32386 (Also in 16, 17)

Other Changes

Updated Chromium to 99.0.4767.0. #31986 
Updated Node.js to v16.13.2. #32418 

Documentation

Documentation changes: #31991, #32422, #32533
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@18.0.0-alpha.1.
Release Notes for v18.0.0-alpha.1
Features
Added 'focus' and 'blur' events to WebContents. #25873 
Added Substitutions menu roles on macOS: showSubstitutions, toggleSmartQuotes, toggleSmartDashes, toggleTextReplacement. #32024 
Added first-instance-ack event to the app.requestSingleInstanceLock() flow, so that users can pass some data back from the second instance to the first instance. #31460 
Added height option for Windows Control Overlay. #31222 
Added rawHeaders to IncomingMessage. #31853 
Removed the old BrowserWindowProxy-based implementation of window.open. This also removes the nativeWindowOpen option from webPreferences. #29405 
Support obsolete blowfish ciphers bf-{cbc,cfb,ecb} through the Node.js crypto API. #32356 (Also in 17)
Fixes
Allowed specifying x64 arch on Mac Rosetta via npm_config_arch. #32266 (Also in 15, 16, 17)
Assertion failure happening in the showSaveDialogSync() code path has been fixed. (Fixes #31997). #32049 (Also in 14, 15, 16, 17)
Bug fixed for registering protocol in windows which used to set invalid command if the execution path included space. #32220 (Also in 14, 15, 16, 17)
Fixed VoiceOver not reading typed words correctly in MAS builds. #32543 (Also in 17)
Fixed maxWidth not working in BrowserWindow constructor options. #32628 (Also in 17)
Fixed window.open not overriding parent's webPreferences. #32057 (Also in 15, 16, 17)
Fixed a crash caused by app.getLocaleCountryCode(). #32256 (Also in 15, 16, 17)
Fixed a crash that occurred when a user attempted to print a document either with window.print(), the print button in the PDF viewer, or with BrowserWindow.webContents() and clicked cancel in the resulting print dialog. #32632 
Fixed a crash that occurred when user attempted to download an edited PDF. #32512 (Also in 15, 16, 17)
Fixed a crash when starting VoiceOver on macOS. #32564 (Also in 17)
Fixed a potential crash in v8 by using allocation type: kOld in v8 ScriptOrModule legacy lifetime. #32339 (Also in 17)
Fixed a potential crash when importing media files or custom file types. #31881 (Also in 16, 17)
Fixed a potential issue when setting backgroundColor on BrowserViews. #31863 (Also in 14, 15, 16, 17)
Fixed an issue that the alert() dialog title is corrupted. #32434 (Also in 14, 15, 16, 17)
Fixed an issue where ipcRenderer.postMessage would throw errors when the transfer argument was not passed. #32433 (Also in 14, 15, 16, 17)
Fixed an issue where calling screen capture on macOS does not properly release underlying OS capture mechanisms. #32435 (Also in 17)
Fixed an issue where frameless vibrant windows would not show transparency correctly on macOS. #32593 (Also in 16, 17)
Fixed an issue where if backgroundColor was set to undefined, vibrancy failed to work and the backgroundColor would show up as white. #32517 (Also in 16, 17)
Fixed an issue where the 'maximize' and 'unmaximize' events didn't fire properly on linux. #32441 (Also in 14, 15, 16, 17)
Fixed an issue with transparent windows failing to fire the maximize and unmaximize events on Windows. #32643 (Also in 15, 16, 17)
Fixed aspect ratio resize for frameless windows on macOS. #32287 (Also in 15, 16, 17)
Fixed console windows from ELECTRON_RUN_AS_NODE instances. #31963 (Also in 16, 17)
Fixed crash when calling webContents.setZoomFactor(1.0). #32604 (Also in 13, 14, 15, 16, 17)
Fixed crash when playing media files on Windows 7/8 or macOS 10.11/10.12. #32046 (Also in 13, 14, 15, 16, 17)
Fixed incorrect skipTransformProcessType option parsing in win.setVisibleOnAllWorkspaces(). #32364 (Also in 13, 14, 15, 16, 17)
Fixed issue where not all serial devices were exposed to the handler specified by session.setDevicePermissionHandler. #32651 (Also in 15, 16, 17)
Fixed minimized BrowserWindow being restored by BrowserWindow.unmaximize(). #32438 (Also in 14, 15, 16, 17)
Fixed potential crash on Windows and Linux when using desktopCapturer.getSources. #32052 (Also in 16, 17)
Fixed regression where console windows would open for execSync and some spawnSync calls for Windows users. #32340 (Also in 16, 17)
Fixed respecting aspect ratio when maximum size is set on BrowserWindow. #29101 (Also in 14, 15, 16, 17)
Fixed windows with roundedCorners: false unable to be closed. #32597 (Also in 15, 16, 17)
No Notes. #32178 (Also in 13, 14, 15, 16, 17)
No Notes. #32240 (Also in 13, 14, 15, 16, 17)
Strip symbols from crashpad_handler binary on Linux, reducing bundle size. #32540 (Also in 15, 16, 17)
The  implementation was made more robust, it no longer breaks when will-attach-webview handler modifies the internal params.instanceId. #32386 (Also in 16, 17)
Other Changes
Updated Chromium to 99.0.4767.0. #31986 
Updated Node.js to v16.13.2. #32418 
Documentation
Documentation changes: #31991, #32422, #32533"
318,"Release Notes for v17.0.0
Stack Upgrades

Chromium 98.0.4758.74
New in 98
New in 97


Node V16.13.0
v16.13.0 release notes
v16.12.0 release notes
v16.11.0 release notes
v16.10.0 release notes


V8 v9.8
V8 9.7 blog post 



Breaking Changes

desktopCapturer.getSources is now only available in the main process. #30720 

Features
Additions

Added WebHID support. #30213 (Also in 15, 16)
Added commandLine.removeSwitch to allow apps to remove command line switches from Chromiums internal command line representation. #30933 (Also in 15, 16)
Added textWidth option to dialog.showMessageBox() / dialog.showMessageBoxSync(). #30474 (Also in 15, 16)
Added webContents.getMediaSourceId(), can be used with getUserMedia to get a stream for a WebContents. #31204
Added missing info to in-app purchase's transaction and product structures. #32602 
Added new data parameter to app.requestSingleInstanceLock(). #30891 (Also in 16)
Added warning when ipcRenderer.sendSync() is called with no listeners for channel on ipcMain. #31344 (Also in 13, 14, 15, 16)
Began passing securityOrigin in details for permission request handlers for media requests in addition to permission check handlers. #31357 (Also in 13, 14, 15, 16)
Support obsolete blowfish ciphers bf-{cbc,cfb,ecb} through the Node.js crypto API. #32439 

Removed/Deprecated

Deprecates webContents.getPrinters() and introduces webContents.getPrintersAsync(). #31023

Fixes

Fixed maxWidth not working in BrowserWindow constructor options. #32637 
Fixed VoiceOver not reading typed words correctly in MAS builds. #32567
Fixed a crash when starting VoiceOver on macOS. #32578 
Fixed a potential crash in v8 by using allocation type: kOld in v8 ScriptOrModule legacy lifetime. #32355
Fixed an issue where calling screen capture on macOS does not properly release underlying OS capture mechanisms. #32464
Fixed issue where not all serial devices were exposed to the handler specified by session.setDevicePermissionHandler. #32685 
Fixed an issue with transparent windows failing to fire the maximize and unmaximize events on Windows. #32690
Fixed draggable regions not updating unless a relayout occurs. #32638 

Also in earlier versions....

Allowed specifying x64 arch on Mac Rosetta via npm_config_arch. #32382 (Also in 15, 16)
Assertion failure happening in the showSaveDialogSync() code path has been fixed. (Fixes #31997). #32083 (Also in 14, 15, 16)
Bug fixed for registering protocol in windows which used to set invalid command if the execution path included space. #32329 (Also in 14, 15, 16)
Changed WebHID to use disable-hid-blocklist flag to enable FIDO devices. #31626 (Also in 15, 16)
Enables support for navigator.keyboard.lock(). #31572 (Also in 16)
Fixed ""Failed to serialize arguments"" error when emitting 'context-menu' event for webview. #31259 (Also in 15, 16)
Fixed Let's Encrypt DST Root CA X3 certificate expiration. #31213 (Also in 12, 13, 14, 15, 16)
Fixed <webview> background transparency regression. #31722 (Also in 16)
Fixed BrowserView.setBackgroundColor() not working correctly. #31746 (Also in 16)
Fixed clipboard.writeBuffer(), clipboard.readBuffer() and clipboard.read()'s ability to manipulate platform-specific clipboard formats. #31116 (Also in 15, 16)
Fixed window.open not overriding parent's webPreferences. #32107 (Also in 15, 16)
Fixed a JavaScript exception from webContents if render frame was disposed in WebFrameMain, resets the value of render_frame_disposed_ after updating render frame host. #31401 (Also in 14, 15, 16)
Fixed a crash caused by app.getLocaleCountryCode(). #32322 (Also in 15, 16)
Fixed a crash that occurred when user attempted to download an edited PDF. #32539 (Also in 15, 16)
Fixed a crash when a BrowserWindow is closed subsequent to its webContents being destroyed. #31620 (Also in 14, 15, 16) 
Fixed a potential crash when importing media files or custom file types. #31884 (Also in 16)
Fixed a potential crash when setting nativeTheme.themeSource on macOS. #31329 (Also in 14, 15, 16)
Fixed a potential issue when setting backgroundColor on BrowserViews. #31948 (Also in 14, 15, 16)
Fixed a tracing agent-related crash when initializing Node.js in service workers. #31459 (Also in 14, 15, 16)
Fixed an issue that the alert() dialog title is corrupted. #32469 (Also in 14, 15, 16)
Fixed an issue where BrowserView dragging behavior was inconsistent with MacOS window dragging. #31114 (Also in 13, 14, 15, 16)
Fixed an issue where BrowserView may sometimes crash on browserView.webContents.destroy(). #31796 (Also in 15, 16)
Fixed an issue where BrowserViews crashed if view.webContents.destroy() is called after loading a URL. #31794 (Also in 14, 15, 16)
Fixed an issue where Content-Disposition filenames would be incorrectly truncated at the first comma for a filename attachment which contained one. #31669 (Also in 13, 14, 15, 16)
Fixed an issue where MediaMetadata did not work properly. #31492 (Also in 13, 14, 15, 16)
Fixed an issue where app.getPath('crashDumps') returned an incorrect path for Linux. #31668 (Also in 15, 16)
Fixed an issue where clipboard.read() could cause crashes with custom clipboard formats. #31566 (Also in 15, 16)
Fixed an issue where ipcRenderer.postMessage would throw errors when the transfer argument was not passed. #32459 (Also in 14, 15, 16)
Fixed an issue where button labels in file choosers were improperly localized on Linux. #30888 (Also in 14, 15, 16)
Fixed an issue where changes to draggable regions in a BrowserWindow incorrectly affected those in an attached BrowserView. #31085 (Also in 13, 14, 15, 16)
Fixed an issue where frameless vibrant windows would not show transparency correctly on macOS. #32649 (Also in 16)
Fixed an issue where if backgroundColor was set to undefined, vibrancy failed to work and the backgroundColor would show up as white. #32653 (Also in 16)
Fixed an issue where out-of-focus BrowserViews could not be immediately dragged. #31062 (Also in 13, 14, 15, 16)
Fixed an issue where playing media would open Accessibility permissions dialog on macOS. #31805 (Also in 15, 16)
Fixed an issue where some calls to crypto.createPrivateKey made with algorithms unsupported by BoringSSL cause a crash when invoking methods on their return values. #31087 (Also in 15, 16)
Fixed an issue where the 'maximize' and 'unmaximize' events didn't fire properly on linux. #32492 (Also in 14, 15, 16)
Fixed an issue where transparency was not always set correctly on webContents. #31685 (Also in 16)
Fixed an issue where windows with vibrancy types set on them would incorrectly have a white instead of transparent background. #31493 (Also in 16)
Fixed an issue which caused print settings to not work properly when printing silently. #31489 (Also in 13, 14, 15, 16)
Fixed an potential crash in WebContents::MessageTo when a render frame has been destroyed. #31289 (Also in 13, 14, 15, 16)
Fixed aspect ratio resize for frameless windows on macOS. #32447 (Also in 15, 16)
Fixed behaviour on posix when passing lists into app.requestSingleInstanceLock(additionalData) API. #31661 (Also in 16)
Fixed black border around the page after resizing is disabled. #31021 (Also in 13, 14, 15, 16)
Fixed black window when screen capturing a content-protected BrowserWindow on Windows 10. #31340 (Also in 13, 14, 15, 16)
Fixed clipboard.read to once again work like clipboard.readBuffer. #31623 (Also in 15, 16)
Fixed console windows from ELECTRON_RUN_AS_NODE instances. #31972 (Also in 16)
Fixed crash caused by GetHostNameW on Windows 7. #31804 (Also in 16)
Fixed crash caused by double free when destroying WebContents. #31104 (Also in 14, 15, 16)
Fixed crash in GTK open dialog when trying to preview huge image files. #31799 (Also in 14, 15, 16)
Fixed crash in v8 due to (Check failed: !regexp_stack_->is_in_use()). #31102 (Also in 13, 14, 15, 16)
Fixed crash when calling webContents.setZoomFactor(1.0). #32621 (Also in 13, 14, 15, 16)
Fixed crash when changing zoom level for webview. #31350 (Also in 14, 15, 16)
Fixed crash when playing media files on Windows 7/8 or macOS 10.11/10.12. #32214 (Also in 13, 14, 15, 16)
Fixed crash when using singleton api with packaged apps on macOS. #31608 (Also in 16)
Fixed crash when using sync dialog APIs immediately after async dialog APIs. #31606 (Also in 15, 16)
Fixed default label text in GTK dialogs. #31798 (Also in 14, 15, 16)
Fixed default setting used when setting an insecure cookie on a secure site. #31800 (Also in 16) 
Fixed event with invalid timestamp in trace log. #31349 (Also in 14, 15, 16)
Fixed incorrect skipTransformProcessType option parsing in win.setVisibleOnAllWorkspaces(). #32398 (Also in 13, 14, 15, 16)
Fixed issue where non-resizable frameless windows aren't draggable. #30925 (Also in 13, 14, 15, 16)
Fixed minimized BrowserWindow being restored by BrowserWindow.unmaximize(). #32496 (Also in 14, 15, 16)
Fixed possible 'Object has been destroyed' error when calling window.open with a frame name and using setWindowOpenHandler. #31208 (Also in 14, 15, 16)
Fixed potential crash on Windows and Linux when using desktopCapturer.getSources. #32070 (Also in 16)
Fixed regression where console windows would open for execSync and some spawnSync calls for Windows users. #32378 (Also in 16)
Fixed respecting aspect ratio when maximum size is set on BrowserWindow. #31958 (Also in 14, 15, 16)
Fixed window frame glitch when calling setContentProtection. #31768 (Also in 14, 16)
Fixed windows with roundedCorners: false unable to be closed. #32612 (Also in 15, 16)
Generate valid config.gypi file in Node.js headers. #31404 (Also in 14, 15, 16)
Having a secure CSP will no longer cause a CSP violation warning to appear in console. #30991 (Also in 16)
Removes several Chromium private enterprise APIs from Mac Apple Store builds. #31482 (Also in 12, 13, 14, 15, 16)
Strip symbols from crashpad_handler binary on Linux, reducing bundle size. #32549 (Also in 15, 16)
The <webview> implementation was made more robust, it no longer breaks when will-attach-webview handler modifies the internal params.instanceId. #32430 (Also in 16)
~/.config/{App Name} will no longer be incorrectly deleted if it is a symlink on unix systems. #31777 (Also in 16)

Other Changes

Changed Web Serial to use ses.setDevicePermissionHandler to allow developers more control over Web Serial permissioning. #31181 (Also in 15, 16)

Documentation

Documentation changes
#32449



End of Support for 13.x.y
Electron 13.x.y has reached end-of-support. As per Electron's new 8-week cadence, we are supporting the latest four versions of Electron until May 2022, with the release of Electron 19. After Electron 19 is released, we'll return to supporting the latest three major versions, as well as the alpha, beta, and nightly releases.
|   E17 (Feb'22) |  E18 (Mar'22) |  E19 (May'22) |
| ---- | ---- | ---- |
|   17.x.y |    18.x.y |    19.x.y |
|   16.x.y |    17.x.y |    18.x.y |
|   15.x.y |    16.x.y |    17.x.y |
|   14.x.y |    15.x.y |    -- |","Release Notes for v17.0.0
Stack Upgrades
Chromium 98.0.4758.74
New in 98
New in 97
Node V16.13.0
v16.13.0 release notes
v16.12.0 release notes
v16.11.0 release notes
v16.10.0 release notes
V8 v9.8
V8 9.7 blog post 
Breaking Changes
desktopCapturer.getSources is now only available in the main process. #30720 
Features
Additions
Added WebHID support. #30213 (Also in 15, 16)
Added commandLine.removeSwitch to allow apps to remove command line switches from Chromiums internal command line representation. #30933 (Also in 15, 16)
Added textWidth option to dialog.showMessageBox() / dialog.showMessageBoxSync(). #30474 (Also in 15, 16)
Added webContents.getMediaSourceId(), can be used with getUserMedia to get a stream for a WebContents. #31204
Added missing info to in-app purchase's transaction and product structures. #32602 
Added new data parameter to app.requestSingleInstanceLock(). #30891 (Also in 16)
Added warning when ipcRenderer.sendSync() is called with no listeners for channel on ipcMain. #31344 (Also in 13, 14, 15, 16)
Began passing securityOrigin in details for permission request handlers for media requests in addition to permission check handlers. #31357 (Also in 13, 14, 15, 16)
Support obsolete blowfish ciphers bf-{cbc,cfb,ecb} through the Node.js crypto API. #32439 
Removed/Deprecated
Deprecates webContents.getPrinters() and introduces webContents.getPrintersAsync(). #31023
Fixes
Fixed maxWidth not working in BrowserWindow constructor options. #32637 
Fixed VoiceOver not reading typed words correctly in MAS builds. #32567
Fixed a crash when starting VoiceOver on macOS. #32578 
Fixed a potential crash in v8 by using allocation type: kOld in v8 ScriptOrModule legacy lifetime. #32355
Fixed an issue where calling screen capture on macOS does not properly release underlying OS capture mechanisms. #32464
Fixed issue where not all serial devices were exposed to the handler specified by session.setDevicePermissionHandler. #32685 
Fixed an issue with transparent windows failing to fire the maximize and unmaximize events on Windows. #32690
Fixed draggable regions not updating unless a relayout occurs. #32638 
Also in earlier versions....
Allowed specifying x64 arch on Mac Rosetta via npm_config_arch. #32382 (Also in 15, 16)
Assertion failure happening in the showSaveDialogSync() code path has been fixed. (Fixes #31997). #32083 (Also in 14, 15, 16)
Bug fixed for registering protocol in windows which used to set invalid command if the execution path included space. #32329 (Also in 14, 15, 16)
Changed WebHID to use disable-hid-blocklist flag to enable FIDO devices. #31626 (Also in 15, 16)
Enables support for navigator.keyboard.lock(). #31572 (Also in 16)
Fixed ""Failed to serialize arguments"" error when emitting 'context-menu' event for webview. #31259 (Also in 15, 16)
Fixed Let's Encrypt DST Root CA X3 certificate expiration. #31213 (Also in 12, 13, 14, 15, 16)
Fixed  background transparency regression. #31722 (Also in 16)
Fixed BrowserView.setBackgroundColor() not working correctly. #31746 (Also in 16)
Fixed clipboard.writeBuffer(), clipboard.readBuffer() and clipboard.read()'s ability to manipulate platform-specific clipboard formats. #31116 (Also in 15, 16)
Fixed window.open not overriding parent's webPreferences. #32107 (Also in 15, 16)
Fixed a JavaScript exception from webContents if render frame was disposed in WebFrameMain, resets the value of render_frame_disposed_ after updating render frame host. #31401 (Also in 14, 15, 16)
Fixed a crash caused by app.getLocaleCountryCode(). #32322 (Also in 15, 16)
Fixed a crash that occurred when user attempted to download an edited PDF. #32539 (Also in 15, 16)
Fixed a crash when a BrowserWindow is closed subsequent to its webContents being destroyed. #31620 (Also in 14, 15, 16) 
Fixed a potential crash when importing media files or custom file types. #31884 (Also in 16)
Fixed a potential crash when setting nativeTheme.themeSource on macOS. #31329 (Also in 14, 15, 16)
Fixed a potential issue when setting backgroundColor on BrowserViews. #31948 (Also in 14, 15, 16)
Fixed a tracing agent-related crash when initializing Node.js in service workers. #31459 (Also in 14, 15, 16)
Fixed an issue that the alert() dialog title is corrupted. #32469 (Also in 14, 15, 16)
Fixed an issue where BrowserView dragging behavior was inconsistent with MacOS window dragging. #31114 (Also in 13, 14, 15, 16)
Fixed an issue where BrowserView may sometimes crash on browserView.webContents.destroy(). #31796 (Also in 15, 16)
Fixed an issue where BrowserViews crashed if view.webContents.destroy() is called after loading a URL. #31794 (Also in 14, 15, 16)
Fixed an issue where Content-Disposition filenames would be incorrectly truncated at the first comma for a filename attachment which contained one. #31669 (Also in 13, 14, 15, 16)
Fixed an issue where MediaMetadata did not work properly. #31492 (Also in 13, 14, 15, 16)
Fixed an issue where app.getPath('crashDumps') returned an incorrect path for Linux. #31668 (Also in 15, 16)
Fixed an issue where clipboard.read() could cause crashes with custom clipboard formats. #31566 (Also in 15, 16)
Fixed an issue where ipcRenderer.postMessage would throw errors when the transfer argument was not passed. #32459 (Also in 14, 15, 16)
Fixed an issue where button labels in file choosers were improperly localized on Linux. #30888 (Also in 14, 15, 16)
Fixed an issue where changes to draggable regions in a BrowserWindow incorrectly affected those in an attached BrowserView. #31085 (Also in 13, 14, 15, 16)
Fixed an issue where frameless vibrant windows would not show transparency correctly on macOS. #32649 (Also in 16)
Fixed an issue where if backgroundColor was set to undefined, vibrancy failed to work and the backgroundColor would show up as white. #32653 (Also in 16)
Fixed an issue where out-of-focus BrowserViews could not be immediately dragged. #31062 (Also in 13, 14, 15, 16)
Fixed an issue where playing media would open Accessibility permissions dialog on macOS. #31805 (Also in 15, 16)
Fixed an issue where some calls to crypto.createPrivateKey made with algorithms unsupported by BoringSSL cause a crash when invoking methods on their return values. #31087 (Also in 15, 16)
Fixed an issue where the 'maximize' and 'unmaximize' events didn't fire properly on linux. #32492 (Also in 14, 15, 16)
Fixed an issue where transparency was not always set correctly on webContents. #31685 (Also in 16)
Fixed an issue where windows with vibrancy types set on them would incorrectly have a white instead of transparent background. #31493 (Also in 16)
Fixed an issue which caused print settings to not work properly when printing silently. #31489 (Also in 13, 14, 15, 16)
Fixed an potential crash in WebContents::MessageTo when a render frame has been destroyed. #31289 (Also in 13, 14, 15, 16)
Fixed aspect ratio resize for frameless windows on macOS. #32447 (Also in 15, 16)
Fixed behaviour on posix when passing lists into app.requestSingleInstanceLock(additionalData) API. #31661 (Also in 16)
Fixed black border around the page after resizing is disabled. #31021 (Also in 13, 14, 15, 16)
Fixed black window when screen capturing a content-protected BrowserWindow on Windows 10. #31340 (Also in 13, 14, 15, 16)
Fixed clipboard.read to once again work like clipboard.readBuffer. #31623 (Also in 15, 16)
Fixed console windows from ELECTRON_RUN_AS_NODE instances. #31972 (Also in 16)
Fixed crash caused by GetHostNameW on Windows 7. #31804 (Also in 16)
Fixed crash caused by double free when destroying WebContents. #31104 (Also in 14, 15, 16)
Fixed crash in GTK open dialog when trying to preview huge image files. #31799 (Also in 14, 15, 16)
Fixed crash in v8 due to (Check failed: !regexp_stack_->is_in_use()). #31102 (Also in 13, 14, 15, 16)
Fixed crash when calling webContents.setZoomFactor(1.0). #32621 (Also in 13, 14, 15, 16)
Fixed crash when changing zoom level for webview. #31350 (Also in 14, 15, 16)
Fixed crash when playing media files on Windows 7/8 or macOS 10.11/10.12. #32214 (Also in 13, 14, 15, 16)
Fixed crash when using singleton api with packaged apps on macOS. #31608 (Also in 16)
Fixed crash when using sync dialog APIs immediately after async dialog APIs. #31606 (Also in 15, 16)
Fixed default label text in GTK dialogs. #31798 (Also in 14, 15, 16)
Fixed default setting used when setting an insecure cookie on a secure site. #31800 (Also in 16) 
Fixed event with invalid timestamp in trace log. #31349 (Also in 14, 15, 16)
Fixed incorrect skipTransformProcessType option parsing in win.setVisibleOnAllWorkspaces(). #32398 (Also in 13, 14, 15, 16)
Fixed issue where non-resizable frameless windows aren't draggable. #30925 (Also in 13, 14, 15, 16)
Fixed minimized BrowserWindow being restored by BrowserWindow.unmaximize(). #32496 (Also in 14, 15, 16)
Fixed possible 'Object has been destroyed' error when calling window.open with a frame name and using setWindowOpenHandler. #31208 (Also in 14, 15, 16)
Fixed potential crash on Windows and Linux when using desktopCapturer.getSources. #32070 (Also in 16)
Fixed regression where console windows would open for execSync and some spawnSync calls for Windows users. #32378 (Also in 16)
Fixed respecting aspect ratio when maximum size is set on BrowserWindow. #31958 (Also in 14, 15, 16)
Fixed window frame glitch when calling setContentProtection. #31768 (Also in 14, 16)
Fixed windows with roundedCorners: false unable to be closed. #32612 (Also in 15, 16)
Generate valid config.gypi file in Node.js headers. #31404 (Also in 14, 15, 16)
Having a secure CSP will no longer cause a CSP violation warning to appear in console. #30991 (Also in 16)
Removes several Chromium private enterprise APIs from Mac Apple Store builds. #31482 (Also in 12, 13, 14, 15, 16)
Strip symbols from crashpad_handler binary on Linux, reducing bundle size. #32549 (Also in 15, 16)
The  implementation was made more robust, it no longer breaks when will-attach-webview handler modifies the internal params.instanceId. #32430 (Also in 16)
~/.config/{App Name} will no longer be incorrectly deleted if it is a symlink on unix systems. #31777 (Also in 16)
Other Changes
Changed Web Serial to use ses.setDevicePermissionHandler to allow developers more control over Web Serial permissioning. #31181 (Also in 15, 16)
Documentation
Documentation changes
32449
End of Support for 13.x.y
Electron 13.x.y has reached end-of-support. As per Electron's new 8-week cadence, we are supporting the latest four versions of Electron until May 2022, with the release of Electron 19. After Electron 19 is released, we'll return to supporting the latest three major versions, as well as the alpha, beta, and nightly releases.
|   E17 (Feb'22) |  E18 (Mar'22) |  E19 (May'22) |
| ---- | ---- | ---- |
|   17.x.y |    18.x.y |    19.x.y |
|   16.x.y |    17.x.y |    18.x.y |
|   15.x.y |    16.x.y |    17.x.y |
|   14.x.y |    15.x.y |    -- |"
319,"Release Notes for v13.6.9
Fixes

Fixed to ensure that chromium binds to wayland interface versions it supports #32652
","Release Notes for v13.6.9
Fixes
Fixed to ensure that chromium binds to wayland interface versions it supports #32652"
320,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@17.0.0-beta.9.
# Release Notes for v17.0.0-beta.9
Fixes

Fixed an issue where frameless vibrant windows would not show transparency correctly on macOS. #32649 (Also in 16)

Other Changes

Fixed draggable regions not updating unless a relayout occurs. #32638 

Documentation

Documentation changes: #32644
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@17.0.0-beta.9.
Release Notes for v17.0.0-beta.9
Fixes
Fixed an issue where frameless vibrant windows would not show transparency correctly on macOS. #32649 (Also in 16)
Other Changes
Fixed draggable regions not updating unless a relayout occurs. #32638 
Documentation
Documentation changes: #32644"
321,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@17.0.0-beta.8.
# Release Notes for v17.0.0-beta.8
Features

Added missing info to in-app purchase's transaction and product structures. #32602 

Fixes

Fixed VoiceOver not reading typed words correctly in MAS builds. #32567 
Fixed maxWidth not working in BrowserWindow constructor options. #32637 
Fixed a crash that occurred when user attempted to download an edited PDF. #32539 (Also in 15)
Fixed crash when calling webContents.setZoomFactor(1.0). #32621 (Also in 13, 14, 15, 16)
Fixed windows with roundedCorners: false unable to be closed. #32612 (Also in 15, 16)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@17.0.0-beta.8.
Release Notes for v17.0.0-beta.8
Features
Added missing info to in-app purchase's transaction and product structures. #32602 
Fixes
Fixed VoiceOver not reading typed words correctly in MAS builds. #32567 
Fixed maxWidth not working in BrowserWindow constructor options. #32637 
Fixed a crash that occurred when user attempted to download an edited PDF. #32539 (Also in 15)
Fixed crash when calling webContents.setZoomFactor(1.0). #32621 (Also in 13, 14, 15, 16)
Fixed windows with roundedCorners: false unable to be closed. #32612 (Also in 15, 16)"
322,"Release Notes for v16.0.8
Fixes

Fixed a crash that occurred when user attempted to download an edited PDF. #32538 (Also in 15, 17)
Fixed an issue that the alert() dialog title is corrupted. #32470 (Also in 14, 15, 17)
Fixed an issue where ipcRenderer.postMessage would throw errors when the transfer argument was not passed. #32460 (Also in 14, 15, 17)
Fixed an issue where frameless vibrant windows would not show transparency correctly on macOS. #32648 
Fixed an issue where the 'maximize' and 'unmaximize' events didn't fire properly on linux. #32497 (Also in 14, 15, 17)
Fixed aspect ratio resize for frameless windows on macOS. #32446 (Also in 15, 17)
Fixed crash when calling webContents.setZoomFactor(1.0). #32620 (Also in 13, 14, 15, 17)
Fixed minimized BrowserWindow being restored by BrowserWindow.unmaximize(). #32495 (Also in 14, 15, 17)
Fixed windows with roundedCorners: false unable to be closed. #32611 (Also in 15, 17)
Strip symbols from crashpad_handler binary on Linux, reducing bundle size. #32554 (Also in 15, 17)
The &lt;webview&gt; implementation was made more robust, it no longer breaks when will-attach-webview handler modifies the internal params.instanceId. #32429 (Also in 17)

Documentation

Documentation changes: #32645
","Release Notes for v16.0.8
Fixes
Fixed a crash that occurred when user attempted to download an edited PDF. #32538 (Also in 15, 17)
Fixed an issue that the alert() dialog title is corrupted. #32470 (Also in 14, 15, 17)
Fixed an issue where ipcRenderer.postMessage would throw errors when the transfer argument was not passed. #32460 (Also in 14, 15, 17)
Fixed an issue where frameless vibrant windows would not show transparency correctly on macOS. #32648 
Fixed an issue where the 'maximize' and 'unmaximize' events didn't fire properly on linux. #32497 (Also in 14, 15, 17)
Fixed aspect ratio resize for frameless windows on macOS. #32446 (Also in 15, 17)
Fixed crash when calling webContents.setZoomFactor(1.0). #32620 (Also in 13, 14, 15, 17)
Fixed minimized BrowserWindow being restored by BrowserWindow.unmaximize(). #32495 (Also in 14, 15, 17)
Fixed windows with roundedCorners: false unable to be closed. #32611 (Also in 15, 17)
Strip symbols from crashpad_handler binary on Linux, reducing bundle size. #32554 (Also in 15, 17)
The <webview> implementation was made more robust, it no longer breaks when will-attach-webview handler modifies the internal params.instanceId. #32429 (Also in 17)
Documentation
Documentation changes: #32645"
323,"Release Notes for v15.3.6
Fixes

Fixed a crash that occurred when user attempted to download an edited PDF. #32537 (Also in 16, 17)
Fixed an issue that the alert() dialog title is corrupted. #32468 (Also in 14, 16, 17)
Fixed an issue where ipcRenderer.postMessage would throw errors when the transfer argument was not passed. #32458 (Also in 14, 16, 17)
Fixed an issue where the 'maximize' and 'unmaximize' events didn't fire properly on linux. #32498 (Also in 14, 16, 17)
Fixed aspect ratio resize for frameless windows on macOS. #32445 (Also in 16, 17)
Fixed crash when calling webContents.setZoomFactor(1.0). #32619 (Also in 13, 14, 16, 17)
Fixed minimized BrowserWindow being restored by BrowserWindow.unmaximize(). #32494 (Also in 14, 16, 17)
Fixed windows with roundedCorners: false unable to be closed. #32610 (Also in 16, 17)
Strip symbols from crashpad_handler binary on Linux, reducing bundle size. #32548 (Also in 16, 17)

Other Changes

Backported fix for CVE-2021-38012. #32012 
Backported fix for CVE-2021-38017. #32032 
Backported fix for CVE-2021-38019. #32015 
Backported fix for CVE-2021-4066. #32546 
Backported fix for CVE-2021-4100. #32184 
Security: backported fix for https://crbug.com/1275020. #32353 
","Release Notes for v15.3.6
Fixes
Fixed a crash that occurred when user attempted to download an edited PDF. #32537 (Also in 16, 17)
Fixed an issue that the alert() dialog title is corrupted. #32468 (Also in 14, 16, 17)
Fixed an issue where ipcRenderer.postMessage would throw errors when the transfer argument was not passed. #32458 (Also in 14, 16, 17)
Fixed an issue where the 'maximize' and 'unmaximize' events didn't fire properly on linux. #32498 (Also in 14, 16, 17)
Fixed aspect ratio resize for frameless windows on macOS. #32445 (Also in 16, 17)
Fixed crash when calling webContents.setZoomFactor(1.0). #32619 (Also in 13, 14, 16, 17)
Fixed minimized BrowserWindow being restored by BrowserWindow.unmaximize(). #32494 (Also in 14, 16, 17)
Fixed windows with roundedCorners: false unable to be closed. #32610 (Also in 16, 17)
Strip symbols from crashpad_handler binary on Linux, reducing bundle size. #32548 (Also in 16, 17)
Other Changes
Backported fix for CVE-2021-38012. #32012 
Backported fix for CVE-2021-38017. #32032 
Backported fix for CVE-2021-38019. #32015 
Backported fix for CVE-2021-4066. #32546 
Backported fix for CVE-2021-4100. #32184 
Security: backported fix for link. #32353 "
324,"Release Notes for v14.2.5
Fixes

Fixed an issue that the alert() dialog title is corrupted. #32467 (Also in 15, 16, 17)
Fixed an issue where ipcRenderer.postMessage would throw errors when the transfer argument was not passed. #32457 (Also in 15, 16, 17)
Fixed an issue where the 'maximize' and 'unmaximize' events didn't fire properly on linux. #32499 (Also in 15, 16, 17)
Fixed crash when calling webContents.setZoomFactor(1.0). #32618 (Also in 13, 15, 16, 17)
Fixed minimized BrowserWindow being restored by BrowserWindow.unmaximize(). #32493 (Also in 15, 16, 17)

Other Changes

Backported fix for CVE-2021-38012. #32013 
Backported fix for CVE-2021-38018. #32022 
Backported fix for CVE-2021-38019. #32016 
Backported fix for CVE-2021-4066. #32547 
Security: backported fix for https://crbug.com/1275020. #32354 
","Release Notes for v14.2.5
Fixes
Fixed an issue that the alert() dialog title is corrupted. #32467 (Also in 15, 16, 17)
Fixed an issue where ipcRenderer.postMessage would throw errors when the transfer argument was not passed. #32457 (Also in 15, 16, 17)
Fixed an issue where the 'maximize' and 'unmaximize' events didn't fire properly on linux. #32499 (Also in 15, 16, 17)
Fixed crash when calling webContents.setZoomFactor(1.0). #32618 (Also in 13, 15, 16, 17)
Fixed minimized BrowserWindow being restored by BrowserWindow.unmaximize(). #32493 (Also in 15, 16, 17)
Other Changes
Backported fix for CVE-2021-38012. #32013 
Backported fix for CVE-2021-38018. #32022 
Backported fix for CVE-2021-38019. #32016 
Backported fix for CVE-2021-4066. #32547 
Security: backported fix for link. #32354 "
325,"Release Notes for v13.6.8
Fixes

Fixed crash when calling webContents.setZoomFactor(1.0). #32617 (Also in 14, 15, 16, 17)

Other Changes

Backported fix for CVE-2021-38010. #31904 
Backported fix for CVE-2021-38012. #32014 
Backported fix for CVE-2021-38019. #32017 
Backported fix for CVE-2021-4079. #32228 
Backported fix for CVE-2021-4098. #32183 
Backported fix for CVE-2021-4100. #32186 
","Release Notes for v13.6.8
Fixes
Fixed crash when calling webContents.setZoomFactor(1.0). #32617 (Also in 14, 15, 16, 17)
Other Changes
Backported fix for CVE-2021-38010. #31904 
Backported fix for CVE-2021-38012. #32014 
Backported fix for CVE-2021-38019. #32017 
Backported fix for CVE-2021-4079. #32228 
Backported fix for CVE-2021-4098. #32183 
Backported fix for CVE-2021-4100. #32186 "
326,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@17.0.0-beta.7.
# Release Notes for v17.0.0-beta.7
Fixes

Strip symbols from crashpad_handler binary on Linux, reducing bundle size. #32549 (Also in 15, 16)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@17.0.0-beta.7.
Release Notes for v17.0.0-beta.7
Fixes
Strip symbols from crashpad_handler binary on Linux, reducing bundle size. #32549 (Also in 15, 16)"
327,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@17.0.0-beta.6.
# Release Notes for v17.0.0-beta.6
Features

Support obsolete blowfish ciphers bf-{cbc,cfb,ecb} through the Node.js crypto API. #32439 

Fixes

Fixed a crash when starting VoiceOver on macOS. #32578 
Fixed an issue where the 'maximize' and 'unmaximize' events didn't fire properly on linux. #32492 (Also in 14, 15, 16)
Fixed minimized BrowserWindow being restored by BrowserWindow.unmaximize(). #32496 (Also in 14, 15, 16)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@17.0.0-beta.6.
Release Notes for v17.0.0-beta.6
Features
Support obsolete blowfish ciphers bf-{cbc,cfb,ecb} through the Node.js crypto API. #32439 
Fixes
Fixed a crash when starting VoiceOver on macOS. #32578 
Fixed an issue where the 'maximize' and 'unmaximize' events didn't fire properly on linux. #32492 (Also in 14, 15, 16)
Fixed minimized BrowserWindow being restored by BrowserWindow.unmaximize(). #32496 (Also in 14, 15, 16)"
328,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@17.0.0-beta.5.
# Release Notes for v17.0.0-beta.5
Fixes

Fixed an issue that the alert() dialog title is corrupted. #32469 (Also in 14, 15, 16)
Fixed an issue where ipcRenderer.postMessage would throw errors when the transfer argument was not passed. #32459 (Also in 14, 15, 16)
Fixed an issue where calling screen capture on macOS does not properly release underlying OS capture mechanisms. #32464 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@17.0.0-beta.5.
Release Notes for v17.0.0-beta.5
Fixes
Fixed an issue that the alert() dialog title is corrupted. #32469 (Also in 14, 15, 16)
Fixed an issue where ipcRenderer.postMessage would throw errors when the transfer argument was not passed. #32459 (Also in 14, 15, 16)
Fixed an issue where calling screen capture on macOS does not properly release underlying OS capture mechanisms. #32464 "
329,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@17.0.0-beta.4.
# Release Notes for v17.0.0-beta.4
Fixes

Fixed aspect ratio resize for frameless windows on macOS. #32447 (Also in 15, 16)
The <webview> implementation was made more robust, it no longer breaks when will-attach-webview handler modifies the internal params.instanceId. #32430 (Also in 16)

Other Changes

Updated Chromium to 98.0.4758.11. #32417 

Documentation

Documentation changes: #32449
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@17.0.0-beta.4.
Release Notes for v17.0.0-beta.4
Fixes
Fixed aspect ratio resize for frameless windows on macOS. #32447 (Also in 15, 16)
The  implementation was made more robust, it no longer breaks when will-attach-webview handler modifies the internal params.instanceId. #32430 (Also in 16)
Other Changes
Updated Chromium to 98.0.4758.11. #32417 
Documentation
Documentation changes: #32449"
330,"Release Notes for v13.6.7
Fixes

Fixed crash when playing media files on Windows 7/8 or macOS 10.11/10.12. #32348 (Also in 14, 15, 16, 17)
Fixed incorrect skipTransformProcessType option parsing in win.setVisibleOnAllWorkspaces(). #32394 (Also in 14, 15, 16, 17)

Other Changes

Backported fix for CVE-2021-38006. #32172 
Backported fix for CVE-2021-38017. #32034 
Backported fix for CVE-2021-38018. #32023 
Backported fix for CVE-2021-4058. #32225 
Backported fix for CVE-2021-4059. #32212 
Backported fix for CVE-2021-4078. #32218 
","Release Notes for v13.6.7
Fixes
Fixed crash when playing media files on Windows 7/8 or macOS 10.11/10.12. #32348 (Also in 14, 15, 16, 17)
Fixed incorrect skipTransformProcessType option parsing in win.setVisibleOnAllWorkspaces(). #32394 (Also in 14, 15, 16, 17)
Other Changes
Backported fix for CVE-2021-38006. #32172 
Backported fix for CVE-2021-38017. #32034 
Backported fix for CVE-2021-38018. #32023 
Backported fix for CVE-2021-4058. #32225 
Backported fix for CVE-2021-4059. #32212 
Backported fix for CVE-2021-4078. #32218 "
331,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@17.0.0-beta.3.
# Release Notes for v17.0.0-beta.3
Fixes

Allowed specifying x64 arch on Mac Rosetta via npm_config_arch. #32382 (Also in 15, 16)
Fixed incorrect skipTransformProcessType option parsing in win.setVisibleOnAllWorkspaces(). #32398 (Also in 13, 14, 15, 16)

Other Changes

Updated Chromium to 98.0.4758.9. #32030 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@17.0.0-beta.3.
Release Notes for v17.0.0-beta.3
Fixes
Allowed specifying x64 arch on Mac Rosetta via npm_config_arch. #32382 (Also in 15, 16)
Fixed incorrect skipTransformProcessType option parsing in win.setVisibleOnAllWorkspaces(). #32398 (Also in 13, 14, 15, 16)
Other Changes
Updated Chromium to 98.0.4758.9. #32030 "
332,"Release Notes for v16.0.7
Fixes

Allowed specifying x64 arch on Mac Rosetta via npm_config_arch. #32381 (Also in 15, 17)
Bug fixed for registering protocol in windows which used to set invalid command if the execution path included space. #32331 (Also in 14, 15, 17)
Fixed  text input performance regression. #32352 
Fixed a crash caused by app.getLocaleCountryCode(). #32321 (Also in 15, 17)
Fixed incorrect skipTransformProcessType option parsing in win.setVisibleOnAllWorkspaces(). #32397 (Also in 13, 14, 15, 17)
Fixed regression where console windows would open for execSync and some spawnSync calls for Windows users. #32379 (Also in 17)
","Release Notes for v16.0.7
Fixes
Allowed specifying x64 arch on Mac Rosetta via npm_config_arch. #32381 (Also in 15, 17)
Bug fixed for registering protocol in windows which used to set invalid command if the execution path included space. #32331 (Also in 14, 15, 17)
Fixed  text input performance regression. #32352 
Fixed a crash caused by app.getLocaleCountryCode(). #32321 (Also in 15, 17)
Fixed incorrect skipTransformProcessType option parsing in win.setVisibleOnAllWorkspaces(). #32397 (Also in 13, 14, 15, 17)
Fixed regression where console windows would open for execSync and some spawnSync calls for Windows users. #32379 (Also in 17)"
333,"Release Notes for v15.3.5
Fixes

Allowed specifying x64 arch on Mac Rosetta via npm_config_arch. #32380 (Also in 16, 17)
Bug fixed for registering protocol in windows which used to set invalid command if the execution path included space. #32330 (Also in 14, 16, 17)
Fixed window.open not overriding parent's webPreferences. #32109 (Also in 16, 17)
Fixed a crash caused by app.getLocaleCountryCode(). #32332 (Also in 16, 17)
Fixed crash when playing media files on Windows 7/8 or macOS 10.11/10.12. #32213 (Also in 13, 14, 16, 17)
Fixed incorrect skipTransformProcessType option parsing in win.setVisibleOnAllWorkspaces(). #32396 (Also in 13, 14, 16, 17)
No Notes. #32245 (Also in 13, 14, 16, 17)

Other Changes

Backported fix for CVE-2021-38006. #32009 
Backported fix for CVE-2021-38008. #32011 
Backported fix for CVE-2021-38018. #32257 
Backported fix for CVE-2021-4056. #32235 
Backported fix for CVE-2021-4057. #32232 
Backported fix for CVE-2021-4058. #32223 
Backported fix for CVE-2021-4059. #32210 
Backported fix for CVE-2021-4078. #32216 
Backported fix for CVE-2021-4079. #32226 
Backported fix for CVE-2021-4098. #32181 
Backported fix for CVE-2021-4099. #32187 
Backported fix for CVE-2021-4101. #32190 
","Release Notes for v15.3.5
Fixes
Allowed specifying x64 arch on Mac Rosetta via npm_config_arch. #32380 (Also in 16, 17)
Bug fixed for registering protocol in windows which used to set invalid command if the execution path included space. #32330 (Also in 14, 16, 17)
Fixed window.open not overriding parent's webPreferences. #32109 (Also in 16, 17)
Fixed a crash caused by app.getLocaleCountryCode(). #32332 (Also in 16, 17)
Fixed crash when playing media files on Windows 7/8 or macOS 10.11/10.12. #32213 (Also in 13, 14, 16, 17)
Fixed incorrect skipTransformProcessType option parsing in win.setVisibleOnAllWorkspaces(). #32396 (Also in 13, 14, 16, 17)
No Notes. #32245 (Also in 13, 14, 16, 17)
Other Changes
Backported fix for CVE-2021-38006. #32009 
Backported fix for CVE-2021-38008. #32011 
Backported fix for CVE-2021-38018. #32257 
Backported fix for CVE-2021-4056. #32235 
Backported fix for CVE-2021-4057. #32232 
Backported fix for CVE-2021-4058. #32223 
Backported fix for CVE-2021-4059. #32210 
Backported fix for CVE-2021-4078. #32216 
Backported fix for CVE-2021-4079. #32226 
Backported fix for CVE-2021-4098. #32181 
Backported fix for CVE-2021-4099. #32187 
Backported fix for CVE-2021-4101. #32190 "
334,"Release Notes for v14.2.4
Fixes

Bug fixed for registering protocol in windows which used to set invalid command if the execution path included space. #32328 (Also in 15, 16, 17)
Fixed window.open not overriding parent's webPreferences. #32325 (Also in 15, 16, 17)
Fixed crash when playing media files on Windows 7/8 or macOS 10.11/10.12. #32349 (Also in 13, 15, 16, 17)
Fixed incorrect skipTransformProcessType option parsing in win.setVisibleOnAllWorkspaces(). #32395 (Also in 13, 15, 16, 17)
No Notes. #32242 (Also in 13, 15, 16, 17)

Other Changes

Backported fix for CVE-2021-38006. #32010 
Backported fix for CVE-2021-38017. #32033 
Backported fix for CVE-2021-4056. #32236 
Backported fix for CVE-2021-4057. #32233 
Backported fix for CVE-2021-4058. #32224 
Backported fix for CVE-2021-4059. #32211 
Backported fix for CVE-2021-4078. #32217 
Backported fix for CVE-2021-4079. #32227 
Backported fix for CVE-2021-4098. #32182 
Backported fix for CVE-2021-4099. #32188 
Backported fix for CVE-2021-4100. #32185 
Backported fix for CVE-2021-4101. #32191 
Backported fix for CVE-2021-4102. #32193 
","Release Notes for v14.2.4
Fixes
Bug fixed for registering protocol in windows which used to set invalid command if the execution path included space. #32328 (Also in 15, 16, 17)
Fixed window.open not overriding parent's webPreferences. #32325 (Also in 15, 16, 17)
Fixed crash when playing media files on Windows 7/8 or macOS 10.11/10.12. #32349 (Also in 13, 15, 16, 17)
Fixed incorrect skipTransformProcessType option parsing in win.setVisibleOnAllWorkspaces(). #32395 (Also in 13, 15, 16, 17)
No Notes. #32242 (Also in 13, 15, 16, 17)
Other Changes
Backported fix for CVE-2021-38006. #32010 
Backported fix for CVE-2021-38017. #32033 
Backported fix for CVE-2021-4056. #32236 
Backported fix for CVE-2021-4057. #32233 
Backported fix for CVE-2021-4058. #32224 
Backported fix for CVE-2021-4059. #32211 
Backported fix for CVE-2021-4078. #32217 
Backported fix for CVE-2021-4079. #32227 
Backported fix for CVE-2021-4098. #32182 
Backported fix for CVE-2021-4099. #32188 
Backported fix for CVE-2021-4100. #32185 
Backported fix for CVE-2021-4101. #32191 
Backported fix for CVE-2021-4102. #32193 "
335,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@17.0.0-beta.2.
# Release Notes for v17.0.0-beta.2
Fixes

Fixed regression where console windows would open for execSync and some spawnSync calls for Windows users. #32378 (Also in 16)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@17.0.0-beta.2.
Release Notes for v17.0.0-beta.2
Fixes
Fixed regression where console windows would open for execSync and some spawnSync calls for Windows users. #32378 (Also in 16)"
336,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@17.0.0-beta.1.
# Release Notes for v17.0.0-beta.1
Fixes

Bug fixed for registering protocol in windows which used to set invalid command if the execution path included space. #32329 (Also in 14, 15, 16)
Fixed a crash caused by app.getLocaleCountryCode(). #32322 (Also in 15, 16)
Fixed a potential crash in v8 by using allocation type: kOld in v8 ScriptOrModule legacy lifetime. #32355 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@17.0.0-beta.1.
Release Notes for v17.0.0-beta.1
Fixes
Bug fixed for registering protocol in windows which used to set invalid command if the execution path included space. #32329 (Also in 14, 15, 16)
Fixed a crash caused by app.getLocaleCountryCode(). #32322 (Also in 15, 16)
Fixed a potential crash in v8 by using allocation type: kOld in v8 ScriptOrModule legacy lifetime. #32355 "
337,"Release Notes for v13.6.6
Fixes

Fixed a JavaScript exception from webContents if render frame was disposed in WebFrameMain, resets the value of render_frame_disposed_ after updating render frame host. #32130 (Also in 14, 15, 16)
No Notes. #32241 (Also in 14, 15, 16, 17)

Other Changes

Backported fix for CVE-2021-4056. #32237 
Backported fix for CVE-2021-4057. #32234 
Backported fix for CVE-2021-4102. #32194 
","Release Notes for v13.6.6
Fixes
Fixed a JavaScript exception from webContents if render frame was disposed in WebFrameMain, resets the value of render_frame_disposed_ after updating render frame host. #32130 (Also in 14, 15, 16)
No Notes. #32241 (Also in 14, 15, 16, 17)
Other Changes
Backported fix for CVE-2021-4056. #32237 
Backported fix for CVE-2021-4057. #32234 
Backported fix for CVE-2021-4102. #32194 "
338,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@17.0.0-alpha.6.
# Release Notes for v17.0.0-alpha.6
Fixes

Fixed crash when playing media files on Windows 7/8 or macOS 10.11/10.12. #32214 (Also in 15, 16)
No Notes. #32244 (Also in 13, 14, 15, 16)
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@17.0.0-alpha.6.
Release Notes for v17.0.0-alpha.6
Fixes
Fixed crash when playing media files on Windows 7/8 or macOS 10.11/10.12. #32214 (Also in 15, 16)
No Notes. #32244 (Also in 13, 14, 15, 16)"
339,"Release Notes for v16.0.6
Fixes

Fixed crash when playing media files on Windows 7/8 or macOS 10.11/10.12. #32215 (Also in 15, 17)
No Notes. #32243 (Also in 13, 14, 15, 17)

Other Changes

Updated Chromium to 96.0.4664.110. #32123 
","Release Notes for v16.0.6
Fixes
Fixed crash when playing media files on Windows 7/8 or macOS 10.11/10.12. #32215 (Also in 15, 17)
No Notes. #32243 (Also in 13, 14, 15, 17)
Other Changes
Updated Chromium to 96.0.4664.110. #32123 "
340,"Release Notes for v16.0.5
Fixes

Assertion failure happening in the showSaveDialogSync() code path has been fixed. (Fixes #31997). #32082 (Also in 14, 15, 17)
Fixed window.open not overriding parent's webPreferences. #32108 (Also in 17)
No Notes. #32199 (Also in 13, 14, 15, 17)
","Release Notes for v16.0.5
Fixes
Assertion failure happening in the showSaveDialogSync() code path has been fixed. (Fixes #31997). #32082 (Also in 14, 15, 17)
Fixed window.open not overriding parent's webPreferences. #32108 (Also in 17)
No Notes. #32199 (Also in 13, 14, 15, 17)"
341,"Release Notes for v15.3.4
Fixes

Assertion failure happening in the showSaveDialogSync() code path has been fixed. (Fixes #31997). #32081 (Also in 14, 16, 17)
No Notes. #32197 (Also in 13, 14, 16, 17)
","Release Notes for v15.3.4
Fixes
Assertion failure happening in the showSaveDialogSync() code path has been fixed. (Fixes #31997). #32081 (Also in 14, 16, 17)
No Notes. #32197 (Also in 13, 14, 16, 17)"
342,"Release Notes for v14.2.3
Fixes

Assertion failure happening in the showSaveDialogSync() code path has been fixed. (Fixes #31997). #32080 (Also in 15, 16, 17)
No Notes. #32196 (Also in 13, 15, 16, 17)
","Release Notes for v14.2.3
Fixes
Assertion failure happening in the showSaveDialogSync() code path has been fixed. (Fixes #31997). #32080 (Also in 15, 16, 17)
No Notes. #32196 (Also in 13, 15, 16, 17)"
343,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@17.0.0-alpha.5.
# Release Notes for v17.0.0-alpha.5
Fixes

Assertion failure happening in the showSaveDialogSync() code path has been fixed. (Fixes #31997). #32083 (Also in 14, 15, 16)
Fixed window.open not overriding parent's webPreferences. #32107 (Also in 16)
Fixed potential crash on Windows and Linux when using desktopCapturer.getSources. #32070 (Also in 16)
No Notes. #32198 
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@17.0.0-alpha.5.
Release Notes for v17.0.0-alpha.5
Fixes
Assertion failure happening in the showSaveDialogSync() code path has been fixed. (Fixes #31997). #32083 (Also in 14, 15, 16)
Fixed window.open not overriding parent's webPreferences. #32107 (Also in 16)
Fixed potential crash on Windows and Linux when using desktopCapturer.getSources. #32070 (Also in 16)
No Notes. #32198 "
344,"Release Notes for v16.0.4
Fixes

Fixed potential crash on Windows and Linux when using desktopCapturer.getSources. #32089 (Also in 17)
","Release Notes for v16.0.4
Fixes
Fixed potential crash on Windows and Linux when using desktopCapturer.getSources. #32089 (Also in 17)"
345,"Release Notes for v13.6.3
Fixes

Fixed window frame glitch when calling setContentProtection. #31829 (Also in 14, 15, 16)
Generate valid config.gypi file in Node.js headers. #31989 (Also in 14, 15, 16)

Other Changes

Backported fix for CVE-2021-38005. #31921 
Backported fix for CVE-2021-38007. #31912 
Backported fix for CVE-2021-38011. #31901 
","Release Notes for v13.6.3
Fixes
Fixed window frame glitch when calling setContentProtection. #31829 (Also in 14, 15, 16)
Generate valid config.gypi file in Node.js headers. #31989 (Also in 14, 15, 16)
Other Changes
Backported fix for CVE-2021-38005. #31921 
Backported fix for CVE-2021-38007. #31912 
Backported fix for CVE-2021-38011. #31901 "
346,"Release Notes for v16.0.3
Fixes

Fixed respecting aspect ratio when maximum size is set on BrowserWindow. #31957 (Also in 14, 15, 17)
","Release Notes for v16.0.3
Fixes
Fixed respecting aspect ratio when maximum size is set on BrowserWindow. #31957 (Also in 14, 15, 17)"
347,"Release Notes for v15.3.3
Fixes

Fixed a potential issue when setting backgroundColor on BrowserViews. #31946 (Also in 14, 16, 17)
Fixed respecting aspect ratio when maximum size is set on BrowserWindow. #31956 (Also in 14, 16, 17)
Fixed window frame glitch when calling setContentProtection. #31830 (Also in 13, 14, 16)

Other Changes

Backported fix for CVE-2021-38005. #31919 
Backported fix for CVE-2021-38007. #31910 
Backported fix for CVE-2021-38009. #31927 
Backported fix for CVE-2021-38010. #31902 
Backported fix for CVE-2021-38011. #31899 
","Release Notes for v15.3.3
Fixes
Fixed a potential issue when setting backgroundColor on BrowserViews. #31946 (Also in 14, 16, 17)
Fixed respecting aspect ratio when maximum size is set on BrowserWindow. #31956 (Also in 14, 16, 17)
Fixed window frame glitch when calling setContentProtection. #31830 (Also in 13, 14, 16)
Other Changes
Backported fix for CVE-2021-38005. #31919 
Backported fix for CVE-2021-38007. #31910 
Backported fix for CVE-2021-38009. #31927 
Backported fix for CVE-2021-38010. #31902 
Backported fix for CVE-2021-38011. #31899 "
348,"Release Notes for v14.2.2
Fixes

Fixed BrowserView.setBackgroundColor() not working correctly. #31845 (Also in 15, 16)
Fixed a potential issue when setting backgroundColor on BrowserViews. #31945 (Also in 15, 16, 17)
Fixed an issue where BrowserView may sometimes crash on browserView.webContents.destroy(). #31840 (Also in 15, 16)
Fixed an issue where BrowserViews crashed if view.webContents.destroy() is called after loading a URL. #31825 (Also in 15, 16)
Fixed crash in GTK open dialog when trying to preview huge image files. #31819 (Also in 15, 16)
Fixed default label text in GTK dialogs. #31822 (Also in 15, 16)
Fixed respecting aspect ratio when maximum size is set on BrowserWindow. #31955 (Also in 15, 16, 17)
Fixed window frame glitch when calling setContentProtection. #31831 (Also in 13, 15, 16)

Other Changes

Backported fix for CVE-2021-38005. #31920 
Backported fix for CVE-2021-38007. #31911 
Backported fix for CVE-2021-38009. #31928 
Backported fix for CVE-2021-38010. #31903 
Backported fix for CVE-2021-38011. #31900 
","Release Notes for v14.2.2
Fixes
Fixed BrowserView.setBackgroundColor() not working correctly. #31845 (Also in 15, 16)
Fixed a potential issue when setting backgroundColor on BrowserViews. #31945 (Also in 15, 16, 17)
Fixed an issue where BrowserView may sometimes crash on browserView.webContents.destroy(). #31840 (Also in 15, 16)
Fixed an issue where BrowserViews crashed if view.webContents.destroy() is called after loading a URL. #31825 (Also in 15, 16)
Fixed crash in GTK open dialog when trying to preview huge image files. #31819 (Also in 15, 16)
Fixed default label text in GTK dialogs. #31822 (Also in 15, 16)
Fixed respecting aspect ratio when maximum size is set on BrowserWindow. #31955 (Also in 15, 16, 17)
Fixed window frame glitch when calling setContentProtection. #31831 (Also in 13, 15, 16)
Other Changes
Backported fix for CVE-2021-38005. #31920 
Backported fix for CVE-2021-38007. #31911 
Backported fix for CVE-2021-38009. #31928 
Backported fix for CVE-2021-38010. #31903 
Backported fix for CVE-2021-38011. #31900 "
349,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@17.0.0-alpha.4.
# Release Notes for v17.0.0-alpha.4
Fixes

Fixed console windows from ELECTRON_RUN_AS_NODE instances. #31972 (Also in 16)
Fixed respecting aspect ratio when maximum size is set on BrowserWindow. #31958 (Also in 14, 15, 16)

Other Changes

Updated Chromium to 98.0.4706.0. #31982 
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@17.0.0-alpha.4.
Release Notes for v17.0.0-alpha.4
Fixes
Fixed console windows from ELECTRON_RUN_AS_NODE instances. #31972 (Also in 16)
Fixed respecting aspect ratio when maximum size is set on BrowserWindow. #31958 (Also in 14, 15, 16)
Other Changes
Updated Chromium to 98.0.4706.0. #31982 "
350,"Release Notes for v16.0.2
Fixes

Fixed a potential issue when setting backgroundColor on BrowserViews. #31947 (Also in 14, 15, 17)
Fixed console windows from ELECTRON_RUN_AS_NODE instances. #31973 (Also in 17)

Other Changes

Updated Chromium to 96.0.4664.55. #31909 
","Release Notes for v16.0.2
Fixes
Fixed a potential issue when setting backgroundColor on BrowserViews. #31947 (Also in 14, 15, 17)
Fixed console windows from ELECTRON_RUN_AS_NODE instances. #31973 (Also in 17)
Other Changes
Updated Chromium to 96.0.4664.55. #31909 "
351,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@17.0.0-alpha.3.
# Release Notes for v17.0.0-alpha.3
Fixes

Fixed a potential issue when setting backgroundColor on BrowserViews. #31948 (Also in 14, 15, 16)
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@17.0.0-alpha.3.
Release Notes for v17.0.0-alpha.3
Fixes
Fixed a potential issue when setting backgroundColor on BrowserViews. #31948 (Also in 14, 15, 16)"
352,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@17.0.0-alpha.2.
# Release Notes for v17.0.0-alpha.2
Fixes

Fixed a potential crash when importing media files or custom file types. #31884 (Also in 16)
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@17.0.0-alpha.2.
Release Notes for v17.0.0-alpha.2
Fixes
Fixed a potential crash when importing media files or custom file types. #31884 (Also in 16)"
353,"Release Notes for v16.0.1
Fixes

Fixed a potential crash when importing media files or custom file types. #31883 (Also in 17)
","Release Notes for v16.0.1
Fixes
Fixed a potential crash when importing media files or custom file types. #31883 (Also in 17)"
354,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@17.0.0-alpha.1.
# Release Notes for v17.0.0-alpha.1
Features

Added WebHID support. #30213 (Also in 15, 16)
Added commandLine.removeSwitch to allow apps to remove command line switches from Chromiums internal command line representation. #30933 (Also in 15, 16)
Added textWidth option to dialog.showMessageBox() / dialog.showMessageBoxSync(). #30474 (Also in 15, 16)
Added webContents.getMediaSourceId(), can be used with getUserMedia to get a stream for a WebContents. #31204 
Added new data parameter to app.requestSingleInstanceLock(). #30891 (Also in 16)
Added warning when ipcRenderer.sendSync() is called with no listeners for channel on ipcMain. #31344 (Also in 13, 14, 15, 16)
Began passing securityOrigin in details for permission request handlers for media requests in addition to permission check handlers. #31357 (Also in 13, 14, 15, 16)
Deprecates webContents.getPrinters() and introduces webContents.getPrintersAsync(). #31023 
desktopCapturer.getSources is now only available in the main process. #30720 

Fixes

Changed WebHID to use disable-hid-blocklist flag to enable FIDO devices. #31626 (Also in 15, 16)
Enables support for navigator.keyboard.lock(). #31572 (Also in 16)
Fixed ""Failed to serialize arguments"" error when emitting 'context-menu' event for webview. #31259 (Also in 15, 16)
Fixed Let's Encrypt DST Root CA X3 certificate expiration. #31213 (Also in 12, 13, 14, 15, 16)
Fixed <webview> background transparency regression. #31722 (Also in 16)
Fixed BrowserView.setBackgroundColor() not working correctly. #31746 (Also in 14, 15, 16)
Fixed clipboard.writeBuffer(), clipboard.readBuffer() and clipboard.read()'s ability to manipulate platform-specific clipboard formats. #31116 (Also in 15, 16)
Fixed a JavaScript exception from webContents if render frame was disposed in WebFrameMain, resets the value of render_frame_disposed_ after updating render frame host. #31401 (Also in 14, 15, 16)
Fixed a crash when a BrowserWindow is closed subsequent to its webContents being destroyed. #31620 (Also in 14, 15, 16)
Fixed a potential crash when setting nativeTheme.themeSource on macOS. #31329 (Also in 14, 15, 16)
Fixed a tracing agent-related crash when initializing Node.js in service workers. #31459 (Also in 14, 15, 16)
Fixed an issue where BrowserView dragging behavior was inconsistent with MacOS window dragging. #31114 (Also in 13, 14, 15, 16)
Fixed an issue where BrowserView may sometimes crash on browserView.webContents.destroy(). #31796 (Also in 14, 15, 16)
Fixed an issue where BrowserViews crashed if view.webContents.destroy() is called after loading a URL. #31794 (Also in 14, 15, 16)
Fixed an issue where Content-Disposition filenames would be incorrectly truncated at the first comma for a filename attachment which contained one. #31669 (Also in 13, 14, 15, 16)
Fixed an issue where MediaMetadata did not work properly. #31492 (Also in 13, 14, 15, 16)
Fixed an issue where app.getPath('crashDumps') returned an incorrect path for Linux. #31668 (Also in 15, 16)
Fixed an issue where clipboard.read() could cause crashes with custom clipboard formats. #31566 (Also in 15, 16)
Fixed an issue where button labels in file choosers were improperly localized on Linux. #30888 (Also in 14, 15, 16)
Fixed an issue where changes to draggable regions in a BrowserWindow incorrectly affected those in an attached BrowserView. #31085 (Also in 13, 14, 15, 16)
Fixed an issue where out-of-focus BrowserViews could not be immediately dragged. #31062 (Also in 13, 14, 15, 16)
Fixed an issue where playing media would open Accessibility permissions dialog on macOS. #31805 (Also in 15, 16)
Fixed an issue where some calls to crypto.createPrivateKey made with algorithms unsupported by BoringSSL cause a crash when invoking methods on their return values. #31087 (Also in 15, 16)
Fixed an issue where transparency was not always set correctly on webContents. #31685 (Also in 16)
Fixed an issue where windows with vibrancy types set on them would incorrectly have a white instead of transparent background. #31493 (Also in 16)
Fixed an issue which caused print settings to not work properly when printing silently. #31489 (Also in 13, 14, 15, 16)
Fixed an potential crash in WebContents::MessageTo when a render frame has been destroyed. #31289 (Also in 13, 14, 15, 16)
Fixed behaviour on posix when passing lists into app.requestSingleInstanceLock(additionalData) API. #31661 (Also in 16)
Fixed black border around the page after resizing is disabled. #31021 (Also in 13, 14, 15, 16)
Fixed black window when screen capturing a content-protected BrowserWindow on Windows 10. #31340 (Also in 13, 14, 15, 16)
Fixed clipboard.read to once again work like clipboard.readBuffer. #31623 (Also in 15, 16)
Fixed crash caused by GetHostNameW on Windows 7. #31804 (Also in 16)
Fixed crash caused by double free when destroying WebContents. #31104 (Also in 14, 15, 16)
Fixed crash in GTK open dialog when trying to preview huge image files. #31799 (Also in 14, 15, 16)
Fixed crash in v8 due to (Check failed: !regexp_stack_->is_in_use()). #31102 (Also in 13, 14, 15, 16)
Fixed crash when changing zoom level for webview. #31350 (Also in 14, 15, 16)
Fixed crash when using singleton api with packaged apps on macOS. #31608 (Also in 16)
Fixed crash when using sync dialog APIs immediately after async dialog APIs. #31606 (Also in 15, 16)
Fixed default label text in GTK dialogs. #31798 (Also in 14, 15, 16)
Fixed default setting used when setting an insecure cookie on a secure site. #31800 (Also in 16)
Fixed event with invalid timestamp in trace log. #31349 (Also in 14, 15, 16)
Fixed issue where non-resizable frameless windows aren't draggable. #30925 (Also in 13, 14, 15, 16)
Fixed possible 'Object has been destroyed' error when calling window.open with a frame name and using setWindowOpenHandler. #31208 (Also in 14, 15, 16)
Fixed window frame glitch when calling setContentProtection. #31768 (Also in 13, 14, 15, 16)
Generate valid config.gypi file in Node.js headers. #31404 (Also in 14, 15, 16)
Having a secure CSP will no longer cause a CSP violation warning to appear in console. #30991 (Also in 16)
None. #31470 (Also in 15, 16)
None. #31757 
Removes several Chromium private enterprise APIs from Mac Apple Store builds. #31482 (Also in 12, 13, 14, 15, 16)
~/.config/{App Name} will no longer be incorrectly deleted if it is a symlink on unix systems. #31777 (Also in 16)

Other Changes

Changed Web Serial to use ses.setDevicePermissionHandler to allow developers more control over Web Serial permissioning. #31181 (Also in 15, 16)
Updated Chromium to 96.0.4664.4. #31317 (Also in 16)
Updated Node.js to v16.13.0. #31607 
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@17.0.0-alpha.1.
Release Notes for v17.0.0-alpha.1
Features
Added WebHID support. #30213 (Also in 15, 16)
Added commandLine.removeSwitch to allow apps to remove command line switches from Chromiums internal command line representation. #30933 (Also in 15, 16)
Added textWidth option to dialog.showMessageBox() / dialog.showMessageBoxSync(). #30474 (Also in 15, 16)
Added webContents.getMediaSourceId(), can be used with getUserMedia to get a stream for a WebContents. #31204 
Added new data parameter to app.requestSingleInstanceLock(). #30891 (Also in 16)
Added warning when ipcRenderer.sendSync() is called with no listeners for channel on ipcMain. #31344 (Also in 13, 14, 15, 16)
Began passing securityOrigin in details for permission request handlers for media requests in addition to permission check handlers. #31357 (Also in 13, 14, 15, 16)
Deprecates webContents.getPrinters() and introduces webContents.getPrintersAsync(). #31023 
desktopCapturer.getSources is now only available in the main process. #30720 
Fixes
Changed WebHID to use disable-hid-blocklist flag to enable FIDO devices. #31626 (Also in 15, 16)
Enables support for navigator.keyboard.lock(). #31572 (Also in 16)
Fixed ""Failed to serialize arguments"" error when emitting 'context-menu' event for webview. #31259 (Also in 15, 16)
Fixed Let's Encrypt DST Root CA X3 certificate expiration. #31213 (Also in 12, 13, 14, 15, 16)
Fixed  background transparency regression. #31722 (Also in 16)
Fixed BrowserView.setBackgroundColor() not working correctly. #31746 (Also in 14, 15, 16)
Fixed clipboard.writeBuffer(), clipboard.readBuffer() and clipboard.read()'s ability to manipulate platform-specific clipboard formats. #31116 (Also in 15, 16)
Fixed a JavaScript exception from webContents if render frame was disposed in WebFrameMain, resets the value of render_frame_disposed_ after updating render frame host. #31401 (Also in 14, 15, 16)
Fixed a crash when a BrowserWindow is closed subsequent to its webContents being destroyed. #31620 (Also in 14, 15, 16)
Fixed a potential crash when setting nativeTheme.themeSource on macOS. #31329 (Also in 14, 15, 16)
Fixed a tracing agent-related crash when initializing Node.js in service workers. #31459 (Also in 14, 15, 16)
Fixed an issue where BrowserView dragging behavior was inconsistent with MacOS window dragging. #31114 (Also in 13, 14, 15, 16)
Fixed an issue where BrowserView may sometimes crash on browserView.webContents.destroy(). #31796 (Also in 14, 15, 16)
Fixed an issue where BrowserViews crashed if view.webContents.destroy() is called after loading a URL. #31794 (Also in 14, 15, 16)
Fixed an issue where Content-Disposition filenames would be incorrectly truncated at the first comma for a filename attachment which contained one. #31669 (Also in 13, 14, 15, 16)
Fixed an issue where MediaMetadata did not work properly. #31492 (Also in 13, 14, 15, 16)
Fixed an issue where app.getPath('crashDumps') returned an incorrect path for Linux. #31668 (Also in 15, 16)
Fixed an issue where clipboard.read() could cause crashes with custom clipboard formats. #31566 (Also in 15, 16)
Fixed an issue where button labels in file choosers were improperly localized on Linux. #30888 (Also in 14, 15, 16)
Fixed an issue where changes to draggable regions in a BrowserWindow incorrectly affected those in an attached BrowserView. #31085 (Also in 13, 14, 15, 16)
Fixed an issue where out-of-focus BrowserViews could not be immediately dragged. #31062 (Also in 13, 14, 15, 16)
Fixed an issue where playing media would open Accessibility permissions dialog on macOS. #31805 (Also in 15, 16)
Fixed an issue where some calls to crypto.createPrivateKey made with algorithms unsupported by BoringSSL cause a crash when invoking methods on their return values. #31087 (Also in 15, 16)
Fixed an issue where transparency was not always set correctly on webContents. #31685 (Also in 16)
Fixed an issue where windows with vibrancy types set on them would incorrectly have a white instead of transparent background. #31493 (Also in 16)
Fixed an issue which caused print settings to not work properly when printing silently. #31489 (Also in 13, 14, 15, 16)
Fixed an potential crash in WebContents::MessageTo when a render frame has been destroyed. #31289 (Also in 13, 14, 15, 16)
Fixed behaviour on posix when passing lists into app.requestSingleInstanceLock(additionalData) API. #31661 (Also in 16)
Fixed black border around the page after resizing is disabled. #31021 (Also in 13, 14, 15, 16)
Fixed black window when screen capturing a content-protected BrowserWindow on Windows 10. #31340 (Also in 13, 14, 15, 16)
Fixed clipboard.read to once again work like clipboard.readBuffer. #31623 (Also in 15, 16)
Fixed crash caused by GetHostNameW on Windows 7. #31804 (Also in 16)
Fixed crash caused by double free when destroying WebContents. #31104 (Also in 14, 15, 16)
Fixed crash in GTK open dialog when trying to preview huge image files. #31799 (Also in 14, 15, 16)
Fixed crash in v8 due to (Check failed: !regexp_stack_->is_in_use()). #31102 (Also in 13, 14, 15, 16)
Fixed crash when changing zoom level for webview. #31350 (Also in 14, 15, 16)
Fixed crash when using singleton api with packaged apps on macOS. #31608 (Also in 16)
Fixed crash when using sync dialog APIs immediately after async dialog APIs. #31606 (Also in 15, 16)
Fixed default label text in GTK dialogs. #31798 (Also in 14, 15, 16)
Fixed default setting used when setting an insecure cookie on a secure site. #31800 (Also in 16)
Fixed event with invalid timestamp in trace log. #31349 (Also in 14, 15, 16)
Fixed issue where non-resizable frameless windows aren't draggable. #30925 (Also in 13, 14, 15, 16)
Fixed possible 'Object has been destroyed' error when calling window.open with a frame name and using setWindowOpenHandler. #31208 (Also in 14, 15, 16)
Fixed window frame glitch when calling setContentProtection. #31768 (Also in 13, 14, 15, 16)
Generate valid config.gypi file in Node.js headers. #31404 (Also in 14, 15, 16)
Having a secure CSP will no longer cause a CSP violation warning to appear in console. #30991 (Also in 16)
None. #31470 (Also in 15, 16)
None. #31757 
Removes several Chromium private enterprise APIs from Mac Apple Store builds. #31482 (Also in 12, 13, 14, 15, 16)
~/.config/{App Name} will no longer be incorrectly deleted if it is a symlink on unix systems. #31777 (Also in 16)
Other Changes
Changed Web Serial to use ses.setDevicePermissionHandler to allow developers more control over Web Serial permissioning. #31181 (Also in 15, 16)
Updated Chromium to 96.0.4664.4. #31317 (Also in 16)
Updated Node.js to v16.13.0. #31607 "
355,"Release Notes for v13.6.2
Fixes

Fixed an issue where Content-Disposition filenames would be incorrectly truncated at the first comma for a filename attachment which contained one. #31691 (Also in 14, 15, 16)
Fixed an issue which caused print settings to not work properly when printing silently. #31618 (Also in 14, 15, 16)

Other Changes

Backported fix for CVE-2021-37998. #31678 
Backported fix for CVE-2021-38001. #31673 
Backported fix for CVE-2021-38002. #31671 
Backported fix for CVE-2021-38003. #31665 
Backported fix for chromium:1252858. #31682 
","Release Notes for v13.6.2
Fixes
Fixed an issue where Content-Disposition filenames would be incorrectly truncated at the first comma for a filename attachment which contained one. #31691 (Also in 14, 15, 16)
Fixed an issue which caused print settings to not work properly when printing silently. #31618 (Also in 14, 15, 16)
Other Changes
Backported fix for CVE-2021-37998. #31678 
Backported fix for CVE-2021-38001. #31673 
Backported fix for CVE-2021-38002. #31671 
Backported fix for CVE-2021-38003. #31665 
Backported fix for chromium:1252858. #31682 "
356,"Release Notes for v16.0.0
Stack Upgrades

Chromium 96.0.4664.4
New in 96
New in 95


Node v16.9.1
v16.9.1 release notes
v16.9.0 release notes
v16.8.0 release notes
v16.7.0 release notes
v16.6.2 release notes
v16.6.1 release notes
v16.6.0 release notes


V8 v9.6
V8 9.6 blog post
V8 9.5 blog post 



Breaking Changes

The crashReporter API is now powered by Crashpad on Linux. #30278
Usage of the desktopCapturer.getSources API from the renderer process has been deprecated and will be removed. 30721

Release Notes for v16.0.0
Features
Additions

Added 'dom-ready' event to WebFrameMain which emits when the frame's document is ready.
Added 'frame-created' event to WebContents which emits when a frame is created in the page. #29290 (Also in 15)
Added WebHID support. #31090 (Also in 15)
Added <webview>.sendToFrame() / frameId to 'ipc-message' event. #30451 (Also in 15)
Added <webview> 'did-redirect-navigation' event. #30457 (Also in 15)
Added app.configureHostResolver API for configuring DNS-over-HTTPS. #30576 (Also in 15)
Added commandLine.removeSwitch to allow apps to remove command line switches from Chromiums internal command line representation. #31327 (Also in 15)
Added frame property to the params object of the 'context-menu' event. #30831 (Also in 15)
Added isIssuedByKnownRoot to ses.setCertificateVerifyProc callback. #30174 
Added isMainFrame argument to 'certificate-error' event. #30879 (Also in 15)
Added safeStorage string encryption API. #30020 (Also in 15)
Added textWidth option to dialog.showMessageBox() / dialog.showMessageBoxSync(). #31089 (Also in 15)
Added webContents.fromDevToolsTargetId(targetId) to lookup a WebContents instance from an associated Chrome DevTools Protocol TargetID. #29399 (Also in 14)
Added an Electron Fuse for enforcing code signatures on the app.asar file your application loads.  Requires the latest asar module. #30667 (Also in 15)
Added fuses to disable NODE_OPTIONS and --inspect debug arguments in packaged apps. #30190 (Also in 15)
Added new data parameter to app.requestSingleInstanceLock(). #31444 
Added support for Windows Control Overlay on Windows. #29600 (Also in 14, 15)
Added support for the U2F Web API. #30438 
Added warning when ipcRenderer.sendSync() is called with no listeners for channel on ipcMain. #31435 (Also in 13, 14, 15)

Improvements

Began passing securityOrigin in details for permission request handlers for media requests in addition to permission check handlers. #31416 (Also in 13, 14, 15)
Clicking a hyperlink in a PDF now does what you'd expect. #30069 
Emit a warning when setting a crash key name longer than the maximum allowed length. #30742 
Enabled sandboxing by default on WebContents which do not use Node or preloads. #30197
NativeImage objects are now serializable over IPC. #30729 
The crashReporter API is now powered by Crashpad on Linux. #30278 

Removed/Deprecated

Usage of the desktopCapturer.getSources API from the renderer process has been deprecated and will be removed. #30721 

Fixes

Enables support for navigator.keyboard.lock(). #31621
Fixed <webview> background transparency regression. #31728
Fixed BrowserView.setBackgroundColor() not working correctly. #31772
Fixed an issue where some transparent windows would show with a white background. #31003
Fixed an issue where transparency was not always set correctly on webContents. #31700
Fixed an issue where windows with vibrancy types set on them would incorrectly have a white instead of transparent background. #31537
Fixed behaviour on posix when passing lists into app.requestSingleInstanceLock(additionalData) API. #31708
Fixed crash in webview creation caused by UAF in the browser process. #24344
Fixed crash when using singleton api with packaged apps on macOS. #31612
Fixed detached DevTools window not closing when a menu item with the toggleDevTools role was triggered. #29922
Fixed imageAnimationPolicy not being respected. #30403
Having a secure CSP will no longer cause a CSP violation warning to appear in console. #31589
~/.config/{App Name} will no longer be incorrectly deleted if it is a symlink on unix systems. #31852 

Also in earlier versions....

Changed WebHID to use disable-hid-blocklist flag to enable FIDO devices. #31650 (Also in 15)
Fixed ""Failed to serialize arguments"" error when emitting 'context-menu' event for webview. #31278 (Also in 15)
Fixed Let's Encrypt DST Root CA X3 certificate expiration. #31217 (Also in 12, 13, 14, 15)
Fixed clipboard.writeBuffer(), clipboard.readBuffer() and clipboard.read()'s ability to manipulate platform-specific clipboard formats. #31719 (Also in 15)
Fixed documentEdited status not updating close button for frameless window on macOS. #30322 (Also in 13, 14, 15)
Fixed a JavaScript exception from webContents if render frame was disposed in WebFrameMain, resets the value of render_frame_disposed_ after updating render frame host. #31427 (Also in 14, 15)
Fixed a crash in navigator.fonts.query(). #30930 (Also in 14, 15)
Fixed a crash in the repl when SharedArrayBuffer is disabled. #30456 (Also in 14)
Fixed a crash when process.exit is called and nativeWindowOpen is enabled. #30218 (Also in 14, 15)
Fixed a crash when a BrowserWindow is closed subsequent to its webContents being destroyed. #31646 (Also in 14, 15)
Fixed a crash when selecting files in a native file dialog on Windows and Linux. #30916 (Also in 15)
Fixed a potential crash that would occur with draggable regions on Windows. #30304 (Also in 13, 14, 15)
Fixed a potential crash when setting nativeTheme.themeSource on macOS. #31430 (Also in 14, 15)
Fixed a tracing agent-related crash when initializing Node.js in service workers. #31477 (Also in 14, 15)
Fixed an issue on Mac where an application could not capture its own window using the desktop capture or getMediaSourceId APIs. #30507 (Also in 13, 14, 15)
Fixed an issue on Windows where empty console windows were appearing when --enable-logging was present. #30375 (Also in 14, 15)
Fixed an issue present in webView where the leave-html-full-screen event is not emitted if the user exits fullscreen with esc instead of by clicking into the webView. #30537 (Also in 12, 13, 14, 15)
Fixed an issue where BrowserView dragging behavior was inconsistent with MacOS window dragging. #31178 (Also in 13, 14, 15)
Fixed an issue where BrowserView webContents would appear not to load in some circumstances. #29919 (Also in 14, 15)
Fixed an issue where Content-Disposition filenames would be incorrectly truncated at the first comma for a filename attachment which contained one. #31694 (Also in 13, 14, 15)
Fixed an issue where MediaMetadata did not work properly. #31535 (Also in 13, 14, 15)
Fixed an issue where app.getPath('crashDumps') returned an incorrect path for Linux. #31711 (Also in 15)
Fixed an issue where clipboard.read() could cause crashes with custom clipboard formats. #31592 (Also in 15)
Fixed an issue where a specified aspect ratio could become incorrect when maximizing a window on macOS. #30305 (Also in 12, 13, 14, 15)
Fixed an issue where background color would not be correctly applied to BrowserViews on Windows when either the x or y coordinate is negative (off-screen). #30510 (Also in 13, 14, 15)
Fixed an issue where button labels in file choosers were improperly localized on Linux. #31067 (Also in 14, 15)
Fixed an issue where changes to draggable regions in a BrowserWindow incorrectly affected those in an attached BrowserView. #31199 (Also in 13, 14, 15)
Fixed an issue where multiple calls toBrowserWindow.setResizable() can cause the zoom button to incorrectly be disabled on macOS. #30999 (Also in 14, 15)
Fixed an issue where non-resizable non-fullscreenable windows with aspect ratios set could return incorrect results for isMaximized(). #30989 (Also in 13, 14, 15)
Fixed an issue where out-of-focus BrowserViews could not be immediately dragged. #31101 (Also in 13, 14, 15)
Fixed an issue where some calls to crypto.createPrivateKey made with algorithms unsupported by BoringSSL cause a crash when invoking methods on their return values. #31136 (Also in 15) 
Fixed an issue where the TouchBarScrubber crashes when showArrowButtons is enabled if items is an empty array. #30661 (Also in 13, 14, 15)
Fixed an issue where toggling documentEdited status on macOS with titlebarStyle: 'hiddenInset' inadvertently moves the traffic light location. #30565 (Also in 13, 14, 15)
Fixed an issue where undocked devtools was not resizable on Windows. #30823 (Also in 14, 15)
Fixed an issue which caused print settings to not work properly when printing silently. #31615 (Also in 13, 14, 15)
Fixed an potential crash in WebContents::MessageTo when a render frame has been destroyed. #31336 (Also in 13, 14, 15)
Fixed beta-only bug that caused mouse clicks to not be processed in frameless windows. #30447 (Also in 14, 15)
Fixed black border around the page after resizing is disabled. #31080 (Also in 13, 14, 15)
Fixed black window when screen capturing a content-protected BrowserWindow on Windows 10. #31386 (Also in 13, 14, 15)
Fixed child windows not inheriting the correct transparency and background color settings. #31031 (Also in 14, 15)
Fixed clipboard.read to once again work like clipboard.readBuffer. #31652 (Also in 15)
Fixed crash caused by double free when destroying WebContents. #31132 (Also in 14, 15)


Fixed crash in GTK open dialog when trying to preview huge image files. #31821 (Also in 14, 15)


Fixed crash caused by GetHostNameW on Windows 7. #31814
Fixed crash in v8 due to (Check failed: !regexp_stack_->is_in_use()). #31145 (Also in 13, 14, 15) 
Fixed crash when changing zoom level for webview. #31375 (Also in 14, 15) 
Fixed crash when using sync dialog APIs immediately after async dialog APIs. #31657 (Also in 15)
Fixed default label text in GTK dialogs. #31824 (Also in 14, 15)
Fixed default setting used when setting an insecure cookie on a secure site. #31839
Fixed event with invalid timestamp in trace log. #31423 (Also in 14, 15)
Fixed frameless window having wrong traffic lights position on macOS 11. #30263 (Also in 13, 14, 15) 
Fixed issue where non-resizable frameless windows aren't draggable. #31300 (Also in 13, 14, 15)
Fixed media key globalShortcuts on macOS. #30552 (Also in 14, 15)
Fixed navigator.serial.getPorts() to return previously selected ports. #30209 (Also in 12, 13)
Fixed possible 'Object has been destroyed' error when calling window.open with a frame name and using setWindowOpenHandler. #31469 (Also in 14, 15)
Fixed potential crash when programatically closing a draggable frameless child window. #30571 (Also in 15)
Fixed rare crash in UpdateDraggableRegions. #30556 (Also in 13, 14, 15)
Fixed some console messages still being printed to logs when the LogJsConsoleMessages feature was disabled. #30312 (Also in 14, 15)
Fixed stack overflow crash in v8 on windows 32-bit builds. #29474 (Also in 12, 13, 14, 15)
Fixed titlebar showing under simple fullscreen mode. #30671 (Also in 13, 14, 15)
Fixed transparent frameless windows having an opaque background when opened in a maximized state. #30804 (Also in 12, 13, 14, 15)
Fixed window frame glitch when calling setContentProtection. #31832 (Also in 14)
Generate valid config.gypi file in Node.js headers. #31441 (Also in 14, 15)
Fixed a crash when selecting and opening files in a native file dialog on Mac. #30935 (Also in 15)
Removes several Chromium private enterprise APIs from Mac Apple Store builds. #31488 (Also in 12, 13, 14, 15)

Other Changes

Backported fix for 1251688, 1219656. #31331 
Changed Web Serial to use ses.setDevicePermissionHandler to allow developers more control over Web Serial permissioning. #31324 (Also in 15)
Web Serial API is no longer experimental. #30237 (Also in 14, 15)

Documentation

Documentation changes: 
#30071
#30768
#30898



End of Support for 12.x.y
Electron 12.x.y has reached end-of-support. As per Electron's new 8-week cadence, we are supporting the latest four versions of Electron until May 2022, with the release of Electron 19. After Electron 19 is released, we'll return to supporting the latest three major versions, as well as the alpha, beta, and nightly releases.
|   E16 (Nov'21) |  E17 (Feb'22) |  E18 (Mar'22) |  E19 (May'22) |
| ---- | ---- | ---- | ---- |
|   16.x.y |    17.x.y |    18.x.y |    19.x.y |
|   15.x.y |    16.x.y |    17.x.y |    18.x.y |
|   14.x.y |    15.x.y |    16.x.y |    17.x.y |
|   13.x.y |    14.x.y |    15.x.y |    -- |","Release Notes for v16.0.0
Stack Upgrades
Chromium 96.0.4664.4
New in 96
New in 95
Node v16.9.1
v16.9.1 release notes
v16.9.0 release notes
v16.8.0 release notes
v16.7.0 release notes
v16.6.2 release notes
v16.6.1 release notes
v16.6.0 release notes
V8 v9.6
V8 9.6 blog post
V8 9.5 blog post 
Breaking Changes
The crashReporter API is now powered by Crashpad on Linux. #30278
Usage of the desktopCapturer.getSources API from the renderer process has been deprecated and will be removed. 30721
Release Notes for v16.0.0
Features
Additions
Added 'dom-ready' event to WebFrameMain which emits when the frame's document is ready.
Added 'frame-created' event to WebContents which emits when a frame is created in the page. #29290 (Also in 15)
Added WebHID support. #31090 (Also in 15)
Added .sendToFrame() / frameId to 'ipc-message' event. #30451 (Also in 15)
Added  'did-redirect-navigation' event. #30457 (Also in 15)
Added app.configureHostResolver API for configuring DNS-over-HTTPS. #30576 (Also in 15)
Added commandLine.removeSwitch to allow apps to remove command line switches from Chromiums internal command line representation. #31327 (Also in 15)
Added frame property to the params object of the 'context-menu' event. #30831 (Also in 15)
Added isIssuedByKnownRoot to ses.setCertificateVerifyProc callback. #30174 
Added isMainFrame argument to 'certificate-error' event. #30879 (Also in 15)
Added safeStorage string encryption API. #30020 (Also in 15)
Added textWidth option to dialog.showMessageBox() / dialog.showMessageBoxSync(). #31089 (Also in 15)
Added webContents.fromDevToolsTargetId(targetId) to lookup a WebContents instance from an associated Chrome DevTools Protocol TargetID. #29399 (Also in 14)
Added an Electron Fuse for enforcing code signatures on the app.asar file your application loads.  Requires the latest asar module. #30667 (Also in 15)
Added fuses to disable NODE_OPTIONS and --inspect debug arguments in packaged apps. #30190 (Also in 15)
Added new data parameter to app.requestSingleInstanceLock(). #31444 
Added support for Windows Control Overlay on Windows. #29600 (Also in 14, 15)
Added support for the U2F Web API. #30438 
Added warning when ipcRenderer.sendSync() is called with no listeners for channel on ipcMain. #31435 (Also in 13, 14, 15)
Improvements
Began passing securityOrigin in details for permission request handlers for media requests in addition to permission check handlers. #31416 (Also in 13, 14, 15)
Clicking a hyperlink in a PDF now does what you'd expect. #30069 
Emit a warning when setting a crash key name longer than the maximum allowed length. #30742 
Enabled sandboxing by default on WebContents which do not use Node or preloads. #30197
NativeImage objects are now serializable over IPC. #30729 
The crashReporter API is now powered by Crashpad on Linux. #30278 
Removed/Deprecated
Usage of the desktopCapturer.getSources API from the renderer process has been deprecated and will be removed. #30721 
Fixes
Enables support for navigator.keyboard.lock(). #31621
Fixed  background transparency regression. #31728
Fixed BrowserView.setBackgroundColor() not working correctly. #31772
Fixed an issue where some transparent windows would show with a white background. #31003
Fixed an issue where transparency was not always set correctly on webContents. #31700
Fixed an issue where windows with vibrancy types set on them would incorrectly have a white instead of transparent background. #31537
Fixed behaviour on posix when passing lists into app.requestSingleInstanceLock(additionalData) API. #31708
Fixed crash in webview creation caused by UAF in the browser process. #24344
Fixed crash when using singleton api with packaged apps on macOS. #31612
Fixed detached DevTools window not closing when a menu item with the toggleDevTools role was triggered. #29922
Fixed imageAnimationPolicy not being respected. #30403
Having a secure CSP will no longer cause a CSP violation warning to appear in console. #31589
~/.config/{App Name} will no longer be incorrectly deleted if it is a symlink on unix systems. #31852 
Also in earlier versions....
Changed WebHID to use disable-hid-blocklist flag to enable FIDO devices. #31650 (Also in 15)
Fixed ""Failed to serialize arguments"" error when emitting 'context-menu' event for webview. #31278 (Also in 15)
Fixed Let's Encrypt DST Root CA X3 certificate expiration. #31217 (Also in 12, 13, 14, 15)
Fixed clipboard.writeBuffer(), clipboard.readBuffer() and clipboard.read()'s ability to manipulate platform-specific clipboard formats. #31719 (Also in 15)
Fixed documentEdited status not updating close button for frameless window on macOS. #30322 (Also in 13, 14, 15)
Fixed a JavaScript exception from webContents if render frame was disposed in WebFrameMain, resets the value of render_frame_disposed_ after updating render frame host. #31427 (Also in 14, 15)
Fixed a crash in navigator.fonts.query(). #30930 (Also in 14, 15)
Fixed a crash in the repl when SharedArrayBuffer is disabled. #30456 (Also in 14)
Fixed a crash when process.exit is called and nativeWindowOpen is enabled. #30218 (Also in 14, 15)
Fixed a crash when a BrowserWindow is closed subsequent to its webContents being destroyed. #31646 (Also in 14, 15)
Fixed a crash when selecting files in a native file dialog on Windows and Linux. #30916 (Also in 15)
Fixed a potential crash that would occur with draggable regions on Windows. #30304 (Also in 13, 14, 15)
Fixed a potential crash when setting nativeTheme.themeSource on macOS. #31430 (Also in 14, 15)
Fixed a tracing agent-related crash when initializing Node.js in service workers. #31477 (Also in 14, 15)
Fixed an issue on Mac where an application could not capture its own window using the desktop capture or getMediaSourceId APIs. #30507 (Also in 13, 14, 15)
Fixed an issue on Windows where empty console windows were appearing when --enable-logging was present. #30375 (Also in 14, 15)
Fixed an issue present in webView where the leave-html-full-screen event is not emitted if the user exits fullscreen with esc instead of by clicking into the webView. #30537 (Also in 12, 13, 14, 15)
Fixed an issue where BrowserView dragging behavior was inconsistent with MacOS window dragging. #31178 (Also in 13, 14, 15)
Fixed an issue where BrowserView webContents would appear not to load in some circumstances. #29919 (Also in 14, 15)
Fixed an issue where Content-Disposition filenames would be incorrectly truncated at the first comma for a filename attachment which contained one. #31694 (Also in 13, 14, 15)
Fixed an issue where MediaMetadata did not work properly. #31535 (Also in 13, 14, 15)
Fixed an issue where app.getPath('crashDumps') returned an incorrect path for Linux. #31711 (Also in 15)
Fixed an issue where clipboard.read() could cause crashes with custom clipboard formats. #31592 (Also in 15)
Fixed an issue where a specified aspect ratio could become incorrect when maximizing a window on macOS. #30305 (Also in 12, 13, 14, 15)
Fixed an issue where background color would not be correctly applied to BrowserViews on Windows when either the x or y coordinate is negative (off-screen). #30510 (Also in 13, 14, 15)
Fixed an issue where button labels in file choosers were improperly localized on Linux. #31067 (Also in 14, 15)
Fixed an issue where changes to draggable regions in a BrowserWindow incorrectly affected those in an attached BrowserView. #31199 (Also in 13, 14, 15)
Fixed an issue where multiple calls toBrowserWindow.setResizable() can cause the zoom button to incorrectly be disabled on macOS. #30999 (Also in 14, 15)
Fixed an issue where non-resizable non-fullscreenable windows with aspect ratios set could return incorrect results for isMaximized(). #30989 (Also in 13, 14, 15)
Fixed an issue where out-of-focus BrowserViews could not be immediately dragged. #31101 (Also in 13, 14, 15)
Fixed an issue where some calls to crypto.createPrivateKey made with algorithms unsupported by BoringSSL cause a crash when invoking methods on their return values. #31136 (Also in 15) 
Fixed an issue where the TouchBarScrubber crashes when showArrowButtons is enabled if items is an empty array. #30661 (Also in 13, 14, 15)
Fixed an issue where toggling documentEdited status on macOS with titlebarStyle: 'hiddenInset' inadvertently moves the traffic light location. #30565 (Also in 13, 14, 15)
Fixed an issue where undocked devtools was not resizable on Windows. #30823 (Also in 14, 15)
Fixed an issue which caused print settings to not work properly when printing silently. #31615 (Also in 13, 14, 15)
Fixed an potential crash in WebContents::MessageTo when a render frame has been destroyed. #31336 (Also in 13, 14, 15)
Fixed beta-only bug that caused mouse clicks to not be processed in frameless windows. #30447 (Also in 14, 15)
Fixed black border around the page after resizing is disabled. #31080 (Also in 13, 14, 15)
Fixed black window when screen capturing a content-protected BrowserWindow on Windows 10. #31386 (Also in 13, 14, 15)
Fixed child windows not inheriting the correct transparency and background color settings. #31031 (Also in 14, 15)
Fixed clipboard.read to once again work like clipboard.readBuffer. #31652 (Also in 15)
Fixed crash caused by double free when destroying WebContents. #31132 (Also in 14, 15)
Fixed crash in GTK open dialog when trying to preview huge image files. #31821 (Also in 14, 15)
Fixed crash caused by GetHostNameW on Windows 7. #31814
Fixed crash in v8 due to (Check failed: !regexp_stack_->is_in_use()). #31145 (Also in 13, 14, 15) 
Fixed crash when changing zoom level for webview. #31375 (Also in 14, 15) 
Fixed crash when using sync dialog APIs immediately after async dialog APIs. #31657 (Also in 15)
Fixed default label text in GTK dialogs. #31824 (Also in 14, 15)
Fixed default setting used when setting an insecure cookie on a secure site. #31839
Fixed event with invalid timestamp in trace log. #31423 (Also in 14, 15)
Fixed frameless window having wrong traffic lights position on macOS 11. #30263 (Also in 13, 14, 15) 
Fixed issue where non-resizable frameless windows aren't draggable. #31300 (Also in 13, 14, 15)
Fixed media key globalShortcuts on macOS. #30552 (Also in 14, 15)
Fixed navigator.serial.getPorts() to return previously selected ports. #30209 (Also in 12, 13)
Fixed possible 'Object has been destroyed' error when calling window.open with a frame name and using setWindowOpenHandler. #31469 (Also in 14, 15)
Fixed potential crash when programatically closing a draggable frameless child window. #30571 (Also in 15)
Fixed rare crash in UpdateDraggableRegions. #30556 (Also in 13, 14, 15)
Fixed some console messages still being printed to logs when the LogJsConsoleMessages feature was disabled. #30312 (Also in 14, 15)
Fixed stack overflow crash in v8 on windows 32-bit builds. #29474 (Also in 12, 13, 14, 15)
Fixed titlebar showing under simple fullscreen mode. #30671 (Also in 13, 14, 15)
Fixed transparent frameless windows having an opaque background when opened in a maximized state. #30804 (Also in 12, 13, 14, 15)
Fixed window frame glitch when calling setContentProtection. #31832 (Also in 14)
Generate valid config.gypi file in Node.js headers. #31441 (Also in 14, 15)
Fixed a crash when selecting and opening files in a native file dialog on Mac. #30935 (Also in 15)
Removes several Chromium private enterprise APIs from Mac Apple Store builds. #31488 (Also in 12, 13, 14, 15)
Other Changes
Backported fix for 1251688, 1219656. #31331 
Changed Web Serial to use ses.setDevicePermissionHandler to allow developers more control over Web Serial permissioning. #31324 (Also in 15)
Web Serial API is no longer experimental. #30237 (Also in 14, 15)
Documentation
Documentation changes: 
30071
30768
30898
End of Support for 12.x.y
Electron 12.x.y has reached end-of-support. As per Electron's new 8-week cadence, we are supporting the latest four versions of Electron until May 2022, with the release of Electron 19. After Electron 19 is released, we'll return to supporting the latest three major versions, as well as the alpha, beta, and nightly releases.
|   E16 (Nov'21) |  E17 (Feb'22) |  E18 (Mar'22) |  E19 (May'22) |
| ---- | ---- | ---- | ---- |
|   16.x.y |    17.x.y |    18.x.y |    19.x.y |
|   15.x.y |    16.x.y |    17.x.y |    18.x.y |
|   14.x.y |    15.x.y |    16.x.y |    17.x.y |
|   13.x.y |    14.x.y |    15.x.y |    -- |"
357,"Release Notes for v15.3.2
Fixes

Fixed BrowserView.setBackgroundColor() not working correctly. #31844 (Also in 16)
Fixed an issue where BrowserView may sometimes crash on browserView.webContents.destroy(). #31841 (Also in 16)
Fixed an issue where BrowserViews crashed if view.webContents.destroy() is called after loading a URL. #31826 (Also in 14, 16)
Fixed an issue where playing media would open Accessibility permissions dialog on macOS. #31836 (Also in 16)
Fixed crash in GTK open dialog when trying to preview huge image files. #31820 (Also in 14, 16)
Fixed default label text in GTK dialogs. #31823 (Also in 14, 16)
","Release Notes for v15.3.2
Fixes
Fixed BrowserView.setBackgroundColor() not working correctly. #31844 (Also in 16)
Fixed an issue where BrowserView may sometimes crash on browserView.webContents.destroy(). #31841 (Also in 16)
Fixed an issue where BrowserViews crashed if view.webContents.destroy() is called after loading a URL. #31826 (Also in 14, 16)
Fixed an issue where playing media would open Accessibility permissions dialog on macOS. #31836 (Also in 16)
Fixed crash in GTK open dialog when trying to preview huge image files. #31820 (Also in 14, 16)
Fixed default label text in GTK dialogs. #31823 (Also in 14, 16)"
358,"Release Notes for v12.2.3
Fixes

Removes several Chromium private enterprise APIs from Mac Apple Store builds. #31527 (Also in 13, 14, 15, 16)

Other Changes

Backported fix for CVE-2021-37981. #31500 
Backported fix for CVE-2021-37984. #31496 
Backported fix for CVE-2021-37987. #31542 
Backported fix for CVE-2021-37992. #31522 
Backported fix for CVE-2021-37996. #31546 
Backported fix for CVE-2021-37998. #31679 
Backported fix for CVE-2021-38001. #31674 
Backported fix for CVE-2021-38003. #31666 
Backported fix for chromium:1245870. #31504 
Backported fix for chromium:1252858. #31683 
Security: backported fix for CVE-2021-37979. #31360 
","Release Notes for v12.2.3
Fixes
Removes several Chromium private enterprise APIs from Mac Apple Store builds. #31527 (Also in 13, 14, 15, 16)
Other Changes
Backported fix for CVE-2021-37981. #31500 
Backported fix for CVE-2021-37984. #31496 
Backported fix for CVE-2021-37987. #31542 
Backported fix for CVE-2021-37992. #31522 
Backported fix for CVE-2021-37996. #31546 
Backported fix for CVE-2021-37998. #31679 
Backported fix for CVE-2021-38001. #31674 
Backported fix for CVE-2021-38003. #31666 
Backported fix for chromium:1245870. #31504 
Backported fix for chromium:1252858. #31683 
Security: backported fix for CVE-2021-37979. #31360 "
359,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@16.0.0-beta.9.
# Release Notes for v16.0.0-beta.9
Fixes

Fixed BrowserView.setBackgroundColor() not working correctly. #31772 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@16.0.0-beta.9.
Release Notes for v16.0.0-beta.9
Fixes
Fixed BrowserView.setBackgroundColor() not working correctly. #31772 "
360,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@16.0.0-beta.8.
# Release Notes for v16.0.0-beta.8
Fixes

Fixed <webview> background transparency regression. #31728 
Fixed clipboard.writeBuffer(), clipboard.readBuffer() and clipboard.read()'s ability to manipulate platform-specific clipboard formats. #31719 
Fixed an issue where app.getPath('crashDumps') returned an incorrect path for Linux. #31711 (Also in 15)

Other Changes

Updated Chromium to 96.0.4664.35. #31709 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@16.0.0-beta.8.
Release Notes for v16.0.0-beta.8
Fixes
Fixed  background transparency regression. #31728 
Fixed clipboard.writeBuffer(), clipboard.readBuffer() and clipboard.read()'s ability to manipulate platform-specific clipboard formats. #31719 
Fixed an issue where app.getPath('crashDumps') returned an incorrect path for Linux. #31711 (Also in 15)
Other Changes
Updated Chromium to 96.0.4664.35. #31709 "
361,"Release Notes for v15.3.1
Features

Added warning when ipcRenderer.sendSync() is called with no listeners for channel on ipcMain. #31434 (Also in 13, 14, 16)

Fixes

Changed WebHID to use disable-hid-blocklist flag to enable FIDO devices. #31649 (Also in 16)
Fixed <webview> background transparency regression. #31701 (Also in 14)
Fixed clipboard.writeBuffer(), clipboard.readBuffer() and clipboard.read()'s ability to manipulate platform-specific clipboard formats. #31720 (Also in 16)
Fixed a crash when a BrowserWindow is closed subsequent to its webContents being destroyed. #31644 (Also in 14, 16)
Fixed a tracing agent-related crash when initializing Node.js in service workers. #31476 (Also in 14, 16)
Fixed an issue where Content-Disposition filenames would be incorrectly truncated at the first comma for a filename attachment which contained one. #31693 (Also in 13, 14, 16)
Fixed an issue where MediaMetadata did not work properly. #31534 (Also in 13, 14, 16)
Fixed an issue where app.getPath('crashDumps') returned an incorrect path for Linux. #31712 (Also in 16)
Fixed an issue where clipboard.read() could cause crashes with custom clipboard formats. #31591 (Also in 16)
Fixed an issue which caused print settings to not work properly when printing silently. #31616 (Also in 13, 14, 16)
Fixed clipboard.read to once again work like clipboard.readBuffer. #31651 (Also in 16)
Fixed crash when using sync dialog APIs immediately after async dialog APIs. #31658 (Also in 16)
Fixed event with invalid timestamp in trace log. #31422 (Also in 14, 16)

Other Changes

Backported fix for CVE-2021-37981. #31497 
Backported fix for CVE-2021-37985. #31516 
Backported fix for CVE-2021-37987. #31539 
Backported fix for CVE-2021-37989. #31523 
Backported fix for CVE-2021-37992. #31519 
Backported fix for CVE-2021-37996. #31543 
Backported fix for chromium:1245870. #31501 
Backported fix for chromium:1252858. #31680 
","Release Notes for v15.3.1
Features
Added warning when ipcRenderer.sendSync() is called with no listeners for channel on ipcMain. #31434 (Also in 13, 14, 16)
Fixes
Changed WebHID to use disable-hid-blocklist flag to enable FIDO devices. #31649 (Also in 16)
Fixed  background transparency regression. #31701 (Also in 14)
Fixed clipboard.writeBuffer(), clipboard.readBuffer() and clipboard.read()'s ability to manipulate platform-specific clipboard formats. #31720 (Also in 16)
Fixed a crash when a BrowserWindow is closed subsequent to its webContents being destroyed. #31644 (Also in 14, 16)
Fixed a tracing agent-related crash when initializing Node.js in service workers. #31476 (Also in 14, 16)
Fixed an issue where Content-Disposition filenames would be incorrectly truncated at the first comma for a filename attachment which contained one. #31693 (Also in 13, 14, 16)
Fixed an issue where MediaMetadata did not work properly. #31534 (Also in 13, 14, 16)
Fixed an issue where app.getPath('crashDumps') returned an incorrect path for Linux. #31712 (Also in 16)
Fixed an issue where clipboard.read() could cause crashes with custom clipboard formats. #31591 (Also in 16)
Fixed an issue which caused print settings to not work properly when printing silently. #31616 (Also in 13, 14, 16)
Fixed clipboard.read to once again work like clipboard.readBuffer. #31651 (Also in 16)
Fixed crash when using sync dialog APIs immediately after async dialog APIs. #31658 (Also in 16)
Fixed event with invalid timestamp in trace log. #31422 (Also in 14, 16)
Other Changes
Backported fix for CVE-2021-37981. #31497 
Backported fix for CVE-2021-37985. #31516 
Backported fix for CVE-2021-37987. #31539 
Backported fix for CVE-2021-37989. #31523 
Backported fix for CVE-2021-37992. #31519 
Backported fix for CVE-2021-37996. #31543 
Backported fix for chromium:1245870. #31501 
Backported fix for chromium:1252858. #31680 "
362,"Release Notes for v14.2.1
Features

Added warning when ipcRenderer.sendSync() is called with no listeners for channel on ipcMain. #31433 (Also in 13, 15, 16)

Fixes

Fixed <webview> background transparency regression. #31727 
Fixed a crash when a BrowserWindow is closed subsequent to its webContents being destroyed. #31645 (Also in 15, 16)
Fixed a tracing agent-related crash when initializing Node.js in service workers. #31475 (Also in 15, 16)
Fixed an issue where Content-Disposition filenames would be incorrectly truncated at the first comma for a filename attachment which contained one. #31692 (Also in 13, 15, 16)
Fixed an issue where MediaMetadata did not work properly. #31533 (Also in 13, 15, 16)
Fixed an issue which caused print settings to not work properly when printing silently. #31617 (Also in 13, 15, 16)
Fixed black window when screen capturing a content-protected BrowserWindow on Windows 10. #31551 (Also in 13, 15, 16)
Fixed event with invalid timestamp in trace log. #31421 (Also in 15, 16)

Other Changes

Backported fix for 1233067. #31524 
Backported fix for CVE-2021-37981. #31498 
Backported fix for CVE-2021-37984. #31494 
Backported fix for CVE-2021-37985. #31517 
Backported fix for CVE-2021-37987. #31540 
Backported fix for CVE-2021-37992. #31520 
Backported fix for CVE-2021-37996. #31544 
Backported fix for CVE-2021-37998. #31677 
Backported fix for CVE-2021-38001. #31672 
Backported fix for CVE-2021-38002. #31670 
Backported fix for CVE-2021-38003. #31664 
Backported fix for chromium:1245870. #31502 
Backported fix for chromium:1252858. #31681 
","Release Notes for v14.2.1
Features
Added warning when ipcRenderer.sendSync() is called with no listeners for channel on ipcMain. #31433 (Also in 13, 15, 16)
Fixes
Fixed  background transparency regression. #31727 
Fixed a crash when a BrowserWindow is closed subsequent to its webContents being destroyed. #31645 (Also in 15, 16)
Fixed a tracing agent-related crash when initializing Node.js in service workers. #31475 (Also in 15, 16)
Fixed an issue where Content-Disposition filenames would be incorrectly truncated at the first comma for a filename attachment which contained one. #31692 (Also in 13, 15, 16)
Fixed an issue where MediaMetadata did not work properly. #31533 (Also in 13, 15, 16)
Fixed an issue which caused print settings to not work properly when printing silently. #31617 (Also in 13, 15, 16)
Fixed black window when screen capturing a content-protected BrowserWindow on Windows 10. #31551 (Also in 13, 15, 16)
Fixed event with invalid timestamp in trace log. #31421 (Also in 15, 16)
Other Changes
Backported fix for 1233067. #31524 
Backported fix for CVE-2021-37981. #31498 
Backported fix for CVE-2021-37984. #31494 
Backported fix for CVE-2021-37985. #31517 
Backported fix for CVE-2021-37987. #31540 
Backported fix for CVE-2021-37992. #31520 
Backported fix for CVE-2021-37996. #31544 
Backported fix for CVE-2021-37998. #31677 
Backported fix for CVE-2021-38001. #31672 
Backported fix for CVE-2021-38002. #31670 
Backported fix for CVE-2021-38003. #31664 
Backported fix for chromium:1245870. #31502 
Backported fix for chromium:1252858. #31681 "
363,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@16.0.0-beta.7.
# Release Notes for v16.0.0-beta.7
Fixes

Changed WebHID to use disable-hid-blocklist flag to enable FIDO devices. #31650 (Also in 15)
Fixed a crash when a BrowserWindow is closed subsequent to its webContents being destroyed. #31646 (Also in 14, 15)
Fixed an issue where Content-Disposition filenames would be incorrectly truncated at the first comma for a filename attachment which contained one. #31694 (Also in 14, 15)
Fixed an issue where transparency was not always set correctly on webContents. #31700 
Fixed behaviour on posix when passing lists into app.requestSingleInstanceLock(additionalData) API. #31708 
Fixed clipboard.read to once again work like clipboard.readBuffer. #31652 (Also in 15)
Fixed crash when using sync dialog APIs immediately after async dialog APIs. #31657 (Also in 15)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@16.0.0-beta.7.
Release Notes for v16.0.0-beta.7
Fixes
Changed WebHID to use disable-hid-blocklist flag to enable FIDO devices. #31650 (Also in 15)
Fixed a crash when a BrowserWindow is closed subsequent to its webContents being destroyed. #31646 (Also in 14, 15)
Fixed an issue where Content-Disposition filenames would be incorrectly truncated at the first comma for a filename attachment which contained one. #31694 (Also in 14, 15)
Fixed an issue where transparency was not always set correctly on webContents. #31700 
Fixed behaviour on posix when passing lists into app.requestSingleInstanceLock(additionalData) API. #31708 
Fixed clipboard.read to once again work like clipboard.readBuffer. #31652 (Also in 15)
Fixed crash when using sync dialog APIs immediately after async dialog APIs. #31657 (Also in 15)"
364,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@16.0.0-beta.6.
# Release Notes for v16.0.0-beta.6
Fixes

Enables support for navigator.keyboard.lock(). #31621 
Fixed an issue which caused print settings to not work properly when printing silently. #31615 

Other Changes

Updated Chromium to 96.0.4664.27. #31619 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@16.0.0-beta.6.
Release Notes for v16.0.0-beta.6
Fixes
Enables support for navigator.keyboard.lock(). #31621 
Fixed an issue which caused print settings to not work properly when printing silently. #31615 
Other Changes
Updated Chromium to 96.0.4664.27. #31619 "
365,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@16.0.0-beta.5.
# Release Notes for v16.0.0-beta.5","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@16.0.0-beta.5.
Release Notes for v16.0.0-beta.5"
366,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@16.0.0-beta.4.
# Release Notes for v16.0.0-beta.4
Fixes

Fixed an issue where clipboard.read() could cause crashes with custom clipboard formats. #31592 (Also in 15)
Fixed crash when using singleton api with packaged apps on macOS. #31612 
Having a secure CSP will no longer cause a CSP violation warning to appear in console. #31589 

Other Changes

Updated Chromium to 96.0.4664.4. #31529 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@16.0.0-beta.4.
Release Notes for v16.0.0-beta.4
Fixes
Fixed an issue where clipboard.read() could cause crashes with custom clipboard formats. #31592 (Also in 15)
Fixed crash when using singleton api with packaged apps on macOS. #31612 
Having a secure CSP will no longer cause a CSP violation warning to appear in console. #31589 
Other Changes
Updated Chromium to 96.0.4664.4. #31529 "
367,"Release Notes for v13.6.1
Fixes

Fixed an issue where MediaMetadata did not work properly. #31532 (Also in 14, 15, 16)
Fixed black window when screen capturing a content-protected BrowserWindow on Windows 10. #31550 (Also in 14, 15, 16)

Other Changes

Backported fix for CVE-2021-37981. #31499 
Backported fix for CVE-2021-37984. #31495 
Backported fix for CVE-2021-37987. #31541 
Backported fix for CVE-2021-37989. #31525 
Backported fix for CVE-2021-37992. #31521 
Backported fix for CVE-2021-37996. #31545 
Backported fix for chromium:1245870. #31503 
","Release Notes for v13.6.1
Fixes
Fixed an issue where MediaMetadata did not work properly. #31532 (Also in 14, 15, 16)
Fixed black window when screen capturing a content-protected BrowserWindow on Windows 10. #31550 (Also in 14, 15, 16)
Other Changes
Backported fix for CVE-2021-37981. #31499 
Backported fix for CVE-2021-37984. #31495 
Backported fix for CVE-2021-37987. #31541 
Backported fix for CVE-2021-37989. #31525 
Backported fix for CVE-2021-37992. #31521 
Backported fix for CVE-2021-37996. #31545 
Backported fix for chromium:1245870. #31503 "
368,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@16.0.0-beta.3.
# Release Notes for v16.0.0-beta.3
Fixes

Fixed an issue where MediaMetadata did not work properly. #31535 (Also in 13, 14)
Fixed an issue where windows with vibrancy types set on them would incorrectly have a white instead of transparent background. #31537 
Fixed event with invalid timestamp in trace log. #31423 (Also in 14, 15)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@16.0.0-beta.3.
Release Notes for v16.0.0-beta.3
Fixes
Fixed an issue where MediaMetadata did not work properly. #31535 (Also in 13, 14)
Fixed an issue where windows with vibrancy types set on them would incorrectly have a white instead of transparent background. #31537 
Fixed event with invalid timestamp in trace log. #31423 (Also in 14, 15)"
369,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@16.0.0-beta.2.
# Release Notes for v16.0.0-beta.2
Features

Added new data parameter to app.requestSingleInstanceLock(). #31444 
Added warning when ipcRenderer.sendSync() is called with no listeners for channel on ipcMain. #31435 (Also in 13, 14, 15)

Fixes

None. #31479 (Also in 15)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@16.0.0-beta.2.
Release Notes for v16.0.0-beta.2
Features
Added new data parameter to app.requestSingleInstanceLock(). #31444 
Added warning when ipcRenderer.sendSync() is called with no listeners for channel on ipcMain. #31435 (Also in 13, 14, 15)
Fixes
None. #31479 (Also in 15)"
370,"Release Notes for v13.6.0
Features

Added warning when ipcRenderer.sendSync() is called with no listeners for channel on ipcMain. #31432 (Also in 14, 15, 16)
Began passing securityOrigin in details for permission request handlers for media requests in addition to permission check handlers. #31437 (Also in 14, 15, 16)

Fixes

Fixed issue where non-resizable frameless windows aren't draggable. #31414 (Also in 14, 15, 16)
Removes several Chromium private enterprise APIs from Mac Apple Store builds. #31486 (Also in 14, 15, 16)
","Release Notes for v13.6.0
Features
Added warning when ipcRenderer.sendSync() is called with no listeners for channel on ipcMain. #31432 (Also in 14, 15, 16)
Began passing securityOrigin in details for permission request handlers for media requests in addition to permission check handlers. #31437 (Also in 14, 15, 16)
Fixes
Fixed issue where non-resizable frameless windows aren't draggable. #31414 (Also in 14, 15, 16)
Removes several Chromium private enterprise APIs from Mac Apple Store builds. #31486 (Also in 14, 15, 16)"
371,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@16.0.0-beta.1.
# Release Notes for v16.0.0-beta.1
Fixes

Fixed a tracing agent-related crash when initializing Node.js in service workers. #31477 
Fixed possible 'Object has been destroyed' error when calling window.open with a frame name and using setWindowOpenHandler. #31469 (Also in 14, 15)
Generate valid config.gypi file in Node.js headers. #31441 (Also in 14, 15)
Removes several Chromium private enterprise APIs from Mac Apple Store builds. #31488 (Also in 15)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@16.0.0-beta.1.
Release Notes for v16.0.0-beta.1
Fixes
Fixed a tracing agent-related crash when initializing Node.js in service workers. #31477 
Fixed possible 'Object has been destroyed' error when calling window.open with a frame name and using setWindowOpenHandler. #31469 (Also in 14, 15)
Generate valid config.gypi file in Node.js headers. #31441 (Also in 14, 15)
Removes several Chromium private enterprise APIs from Mac Apple Store builds. #31488 (Also in 15)"
372,"Release Notes for v15.3.0
Features

Began passing securityOrigin in details for permission request handlers for media requests in addition to permission check handlers. #31417 (Also in 13, 14, 16)

Fixes

Fixed a potential crash when setting nativeTheme.themeSource on macOS. #31429 (Also in 14, 16)
Fixed possible 'Object has been destroyed' error when calling window.open with a frame name and using setWindowOpenHandler. #31468 (Also in 14, 16)
Generate valid config.gypi file in Node.js headers. #31442 (Also in 14, 16)
Removes several Chromium private APIs from Mac Apple Store builds. #31483 (Also in 16)

Other Changes

Changed Web Serial to use ses.setDevicePermissionHandler to allow developers more control over Web Serial permissioning. #31418 (Also in 16)
","Release Notes for v15.3.0
Features
Began passing securityOrigin in details for permission request handlers for media requests in addition to permission check handlers. #31417 (Also in 13, 14, 16)
Fixes
Fixed a potential crash when setting nativeTheme.themeSource on macOS. #31429 (Also in 14, 16)
Fixed possible 'Object has been destroyed' error when calling window.open with a frame name and using setWindowOpenHandler. #31468 (Also in 14, 16)
Generate valid config.gypi file in Node.js headers. #31442 (Also in 14, 16)
Removes several Chromium private APIs from Mac Apple Store builds. #31483 (Also in 16)
Other Changes
Changed Web Serial to use ses.setDevicePermissionHandler to allow developers more control over Web Serial permissioning. #31418 (Also in 16)"
373,"Release Notes for v14.2.0
Features

Began passing securityOrigin in details for permission request handlers for media requests in addition to permission check handlers. #31436 (Also in 13, 15, 16)

Fixes

Fixed a JavaScript exception from webContents if render frame was disposed in WebFrameMain, resets the value of render_frame_disposed_ after updating render frame host. #31425 (Also in 15, 16)
Fixed a potential crash when setting nativeTheme.themeSource on macOS. #31428 (Also in 15, 16)
Fixed an potential crash in WebContents::MessageTo when a render frame has been destroyed. #31333 (Also in 13, 15, 16)
Fixed crash when changing zoom level for webview. #31374 (Also in 15, 16)
Fixed possible 'Object has been destroyed' error when calling window.open with a frame name and using setWindowOpenHandler. #31467 (Also in 15, 16)
Generate valid config.gypi file in Node.js headers. #31443 (Also in 15, 16)
Removes several Chromium private enterprise APIs from Mac Apple Store builds. #31487 (Also in 15, 16)

Other Changes

Changed Web Serial to use ses.setDevicePermissionHandler to allow developers more control over Web Serial permissioning. #31440 (Also in 15, 16)
Security: backported fix for CVE-2021-37976. #31230 
Security: backported fix for CVE-2021-37978. #31362 
Security: backported fix for CVE-2021-37979. #31358 
Security: backported fix for CVE-2021-37980. #31364 
","Release Notes for v14.2.0
Features
Began passing securityOrigin in details for permission request handlers for media requests in addition to permission check handlers. #31436 (Also in 13, 15, 16)
Fixes
Fixed a JavaScript exception from webContents if render frame was disposed in WebFrameMain, resets the value of render_frame_disposed_ after updating render frame host. #31425 (Also in 15, 16)
Fixed a potential crash when setting nativeTheme.themeSource on macOS. #31428 (Also in 15, 16)
Fixed an potential crash in WebContents::MessageTo when a render frame has been destroyed. #31333 (Also in 13, 15, 16)
Fixed crash when changing zoom level for webview. #31374 (Also in 15, 16)
Fixed possible 'Object has been destroyed' error when calling window.open with a frame name and using setWindowOpenHandler. #31467 (Also in 15, 16)
Generate valid config.gypi file in Node.js headers. #31443 (Also in 15, 16)
Removes several Chromium private enterprise APIs from Mac Apple Store builds. #31487 (Also in 15, 16)
Other Changes
Changed Web Serial to use ses.setDevicePermissionHandler to allow developers more control over Web Serial permissioning. #31440 (Also in 15, 16)
Security: backported fix for CVE-2021-37976. #31230 
Security: backported fix for CVE-2021-37978. #31362 
Security: backported fix for CVE-2021-37979. #31358 
Security: backported fix for CVE-2021-37980. #31364 "
374,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@16.0.0-alpha.9.
# Release Notes for v16.0.0-alpha.9
Features

Began passing securityOrigin in details for permission request handlers for media requests in addition to permission check handlers. #31416 (Also in 13, 14, 15)

Fixes

Fixed a potential crash when setting nativeTheme.themeSource on macOS. #31430 (Also in 14, 15)
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@16.0.0-alpha.9.
Release Notes for v16.0.0-alpha.9
Features
Began passing securityOrigin in details for permission request handlers for media requests in addition to permission check handlers. #31416 (Also in 13, 14, 15)
Fixes
Fixed a potential crash when setting nativeTheme.themeSource on macOS. #31430 (Also in 14, 15)"
375,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@16.0.0-alpha.8.
# Release Notes for v16.0.0-alpha.8
Features

Added commandLine.removeSwitch to allow apps to remove command line switches from Chromiums internal command line representation. #31327 (Also in 15)

Fixes

Fixed a JavaScript exception from webContents if render frame was disposed in WebFrameMain, resets the value of render_frame_disposed_ after updating render frame host. #31427 
Fixed black window when screen capturing a content-protected BrowserWindow on Windows 10. #31386 (Also in 15)

Other Changes

Changed Web Serial to use ses.setDevicePermissionHandler to allow developers more control over Web Serial permissioning. #31324 
Updated Chromium to 96.0.4647.0. #31302 
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@16.0.0-alpha.8.
Release Notes for v16.0.0-alpha.8
Features
Added commandLine.removeSwitch to allow apps to remove command line switches from Chromiums internal command line representation. #31327 (Also in 15)
Fixes
Fixed a JavaScript exception from webContents if render frame was disposed in WebFrameMain, resets the value of render_frame_disposed_ after updating render frame host. #31427 
Fixed black window when screen capturing a content-protected BrowserWindow on Windows 10. #31386 (Also in 15)
Other Changes
Changed Web Serial to use ses.setDevicePermissionHandler to allow developers more control over Web Serial permissioning. #31324 
Updated Chromium to 96.0.4647.0. #31302 "
376,"Release Notes for v15.2.0
Features

Added commandLine.removeSwitch to allow apps to remove command line switches from Chromiums internal command line representation. #31326 (Also in 16)

Fixes

Fixed a JavaScript exception from webContents if render frame was disposed in WebFrameMain, resets the value of render_frame_disposed_ after updating render frame host. #31426 (Also in 16)
Fixed black window when screen capturing a content-protected BrowserWindow on Windows 10. #31385 (Also in 16)
Fixed crash when changing zoom level for webview. #31376 (Also in 14, 16)

Other Changes

Updated Chromium to 94.0.4606.81. #31351 
","Release Notes for v15.2.0
Features
Added commandLine.removeSwitch to allow apps to remove command line switches from Chromiums internal command line representation. #31326 (Also in 16)
Fixes
Fixed a JavaScript exception from webContents if render frame was disposed in WebFrameMain, resets the value of render_frame_disposed_ after updating render frame host. #31426 (Also in 16)
Fixed black window when screen capturing a content-protected BrowserWindow on Windows 10. #31385 (Also in 16)
Fixed crash when changing zoom level for webview. #31376 (Also in 14, 16)
Other Changes
Updated Chromium to 94.0.4606.81. #31351 "
377,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@16.0.0-alpha.7.
# Release Notes for v16.0.0-alpha.7
Fixes

Fixed an potential crash in WebContents::MessageTo when a render frame has been destroyed. #31336 (Also in 13, 14, 15)
Fixed crash when changing zoom level for webview. #31375 (Also in 14, 15)

Other Changes

Backported fix for 1251688, 1219656. #31331 
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@16.0.0-alpha.7.
Release Notes for v16.0.0-alpha.7
Fixes
Fixed an potential crash in WebContents::MessageTo when a render frame has been destroyed. #31336 (Also in 13, 14, 15)
Fixed crash when changing zoom level for webview. #31375 (Also in 14, 15)
Other Changes
Backported fix for 1251688, 1219656. #31331 "
378,"Release Notes for v13.5.2
Fixes

Fixed an potential crash in WebContents::MessageTo when a render frame has been destroyed. #31335 (Also in 14, 15, 16)
Fixed navigator.serial.getPorts() to return previously selected ports. #31190 (Also in 12)
Removed expired DST Root CA X3 from the bundled trust store. #31220 (Also in 12)

Other Changes

Security: backported fix for CVE-2021-37967. #31243 
Security: backported fix for CVE-2021-37968. #31246 
Security: backported fix for CVE-2021-37970. #31240 
Security: backported fix for CVE-2021-37975. #31228 
Security: backported fix for CVE-2021-37976. #31231 
Security: backported fix for CVE-2021-37978. #31363 
Security: backported fix for CVE-2021-37979. #31359 
Security: backported fix for CVE-2021-37980. #31365 
Security: backported fix for chromium:1248665. #31236 
","Release Notes for v13.5.2
Fixes
Fixed an potential crash in WebContents::MessageTo when a render frame has been destroyed. #31335 (Also in 14, 15, 16)
Fixed navigator.serial.getPorts() to return previously selected ports. #31190 (Also in 12)
Removed expired DST Root CA X3 from the bundled trust store. #31220 (Also in 12)
Other Changes
Security: backported fix for CVE-2021-37967. #31243 
Security: backported fix for CVE-2021-37968. #31246 
Security: backported fix for CVE-2021-37970. #31240 
Security: backported fix for CVE-2021-37975. #31228 
Security: backported fix for CVE-2021-37976. #31231 
Security: backported fix for CVE-2021-37978. #31363 
Security: backported fix for CVE-2021-37979. #31359 
Security: backported fix for CVE-2021-37980. #31365 
Security: backported fix for chromium:1248665. #31236 "
379,"Release Notes for v12.2.2
Fixes

Fixed navigator.serial.getPorts() to return previously selected ports. #31193 (Also in 13)
Removed expired DST Root CA X3 from the bundled trust store. #31269 

Other Changes

Security: backported fix for CVE-2021-37967. #31244 
Security: backported fix for CVE-2021-37968. #31247 
Security: backported fix for CVE-2021-37970. #31241 
Security: backported fix for CVE-2021-37975. #31229 
Security: backported fix for CVE-2021-37976. #31232 
Security: backported fix for CVE-2021-37980. #31366 
Security: backported fix for chromium:1248665. #31237 
","Release Notes for v12.2.2
Fixes
Fixed navigator.serial.getPorts() to return previously selected ports. #31193 (Also in 13)
Removed expired DST Root CA X3 from the bundled trust store. #31269 
Other Changes
Security: backported fix for CVE-2021-37967. #31244 
Security: backported fix for CVE-2021-37968. #31247 
Security: backported fix for CVE-2021-37970. #31241 
Security: backported fix for CVE-2021-37975. #31229 
Security: backported fix for CVE-2021-37976. #31232 
Security: backported fix for CVE-2021-37980. #31366 
Security: backported fix for chromium:1248665. #31237 "
380,"Release Notes for v15.1.2
Fixes

Fixed an potential crash in WebContents::MessageTo when a render frame has been destroyed. #31334 
Fixed issue where non-resizable frameless windows aren't draggable. #31299 (Also in 14, 16)

Other Changes

Backported fix for 1251688. #31297 
Updated Chromium to 94.0.4606.71. #31234 
","Release Notes for v15.1.2
Fixes
Fixed an potential crash in WebContents::MessageTo when a render frame has been destroyed. #31334 
Fixed issue where non-resizable frameless windows aren't draggable. #31299 (Also in 14, 16)
Other Changes
Backported fix for 1251688. #31297 
Updated Chromium to 94.0.4606.71. #31234 "
381,"Release Notes for v14.1.1
Fixes

Fixed issue where non-resizable frameless windows aren't draggable. #31298 (Also in 15, 16)
Removed expired DST Root CA X3 from the bundled trust store. #31221 

Other Changes

Security: backported fix for CVE-2021-37967. #31242 
Security: backported fix for CVE-2021-37968. #31245 
Security: backported fix for CVE-2021-37970. #31239 
Security: backported fix for CVE-2021-37975. #31227 
Security: backported fix for chromium:1248665. #31235 
","Release Notes for v14.1.1
Fixes
Fixed issue where non-resizable frameless windows aren't draggable. #31298 (Also in 15, 16)
Removed expired DST Root CA X3 from the bundled trust store. #31221 
Other Changes
Security: backported fix for CVE-2021-37967. #31242 
Security: backported fix for CVE-2021-37968. #31245 
Security: backported fix for CVE-2021-37970. #31239 
Security: backported fix for CVE-2021-37975. #31227 
Security: backported fix for chromium:1248665. #31235 "
382,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@16.0.0-alpha.6.
# Release Notes for v16.0.0-alpha.6
Fixes

Fixed issue where non-resizable frameless windows aren't draggable. #31300 (Also in 14, 15)
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@16.0.0-alpha.6.
Release Notes for v16.0.0-alpha.6
Fixes
Fixed issue where non-resizable frameless windows aren't draggable. #31300 (Also in 14, 15)"
383,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@16.0.0-alpha.5.
# Release Notes for v16.0.0-alpha.5
Fixes

Fixed ""Failed to serialize arguments"" error when emitting 'context-menu' event for webview. #31278 (Also in 15)
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@16.0.0-alpha.5.
Release Notes for v16.0.0-alpha.5
Fixes
Fixed ""Failed to serialize arguments"" error when emitting 'context-menu' event for webview. #31278 (Also in 15)"
384,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@16.0.0-alpha.4.
# Release Notes for v16.0.0-alpha.4","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@16.0.0-alpha.4.
Release Notes for v16.0.0-alpha.4"
385,"Release Notes for v15.1.1
Fixes

Fixed ""Failed to serialize arguments"" error when emitting 'context-menu' event for webview. #31279 
Removed expired DST Root CA X3 from the bundled trust store. #31219 
","Release Notes for v15.1.1
Fixes
Fixed ""Failed to serialize arguments"" error when emitting 'context-menu' event for webview. #31279 
Removed expired DST Root CA X3 from the bundled trust store. #31219 "
386,"Release Notes for v15.1.0
Features

Added WebHID support. #31095 (Also in 16)
Added frame property to the params object of the 'context-menu' event. #31057 
Added isMainFrame argument to 'certificate-error' event. #31038 
Added textWidth option to dialog.showMessageBox() / dialog.showMessageBoxSync(). #31088 (Also in 16)

Fixes

Fixed Let's Encrypt DST Root CA X3 certificate expiration. #31218 (Also in 12, 13, 14, 16)
Fixed a crash in navigator.fonts.query(). #30985 (Also in 14)
Fixed an issue where BrowserView dragging behavior was inconsistent with MacOS window dragging. #31177 (Also in 13, 14, 16)
Fixed an issue where button labels in file choosers were improperly localized on Linux. #31066 (Also in 14, 16)
Fixed an issue where changes to draggable regions in a BrowserWindow incorrectly affected those in an attached BrowserView. #31198 (Also in 13, 14, 16)
Fixed an issue where non-resizable non-fullscreenable windows with aspect ratios set could return incorrect results for isMaximized(). #31041 (Also in 13, 14)
Fixed an issue where out-of-focus BrowserViews could not be immediately dragged. #31100 (Also in 13, 14, 16)
Fixed an issue where some calls to crypto.createPrivateKey made with algorithms unsupported by BoringSSL cause a crash when invoking methods on their return values. #31137 (Also in 16)
Fixed black border around the page after resizing is disabled. #31081 (Also in 13, 14, 16)
Fixed crash caused by double free when destroying WebContents. #31133 (Also in 14, 16)
Fixed crash in v8 due to (Check failed: !regexp_stack_-&gt;is_in_use()). #31144 (Also in 13, 14, 16)

Other Changes

Updated Chromium to 94.0.4606.61. #31112 
","Release Notes for v15.1.0
Features
Added WebHID support. #31095 (Also in 16)
Added frame property to the params object of the 'context-menu' event. #31057 
Added isMainFrame argument to 'certificate-error' event. #31038 
Added textWidth option to dialog.showMessageBox() / dialog.showMessageBoxSync(). #31088 (Also in 16)
Fixes
Fixed Let's Encrypt DST Root CA X3 certificate expiration. #31218 (Also in 12, 13, 14, 16)
Fixed a crash in navigator.fonts.query(). #30985 (Also in 14)
Fixed an issue where BrowserView dragging behavior was inconsistent with MacOS window dragging. #31177 (Also in 13, 14, 16)
Fixed an issue where button labels in file choosers were improperly localized on Linux. #31066 (Also in 14, 16)
Fixed an issue where changes to draggable regions in a BrowserWindow incorrectly affected those in an attached BrowserView. #31198 (Also in 13, 14, 16)
Fixed an issue where non-resizable non-fullscreenable windows with aspect ratios set could return incorrect results for isMaximized(). #31041 (Also in 13, 14)
Fixed an issue where out-of-focus BrowserViews could not be immediately dragged. #31100 (Also in 13, 14, 16)
Fixed an issue where some calls to crypto.createPrivateKey made with algorithms unsupported by BoringSSL cause a crash when invoking methods on their return values. #31137 (Also in 16)
Fixed black border around the page after resizing is disabled. #31081 (Also in 13, 14, 16)
Fixed crash caused by double free when destroying WebContents. #31133 (Also in 14, 16)
Fixed crash in v8 due to (Check failed: !regexp_stack_->is_in_use()). #31144 (Also in 13, 14, 16)
Other Changes
Updated Chromium to 94.0.4606.61. #31112 "
387,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@16.0.0-alpha.3.
# Release Notes for v16.0.0-alpha.3
Fixes

Fixed Let's Encrypt DST Root CA X3 certificate expiration. #31217 
Fixed an issue where changes to draggable regions in a BrowserWindow incorrectly affected those in an attached BrowserView. #31199 (Also in 13, 14, 15)
Fixed an issue where some calls to crypto.createPrivateKey made with algorithms unsupported by BoringSSL cause a crash when invoking methods on their return values. #31136 (Also in 15)
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@16.0.0-alpha.3.
Release Notes for v16.0.0-alpha.3
Fixes
Fixed Let's Encrypt DST Root CA X3 certificate expiration. #31217 
Fixed an issue where changes to draggable regions in a BrowserWindow incorrectly affected those in an attached BrowserView. #31199 (Also in 13, 14, 15)
Fixed an issue where some calls to crypto.createPrivateKey made with algorithms unsupported by BoringSSL cause a crash when invoking methods on their return values. #31136 (Also in 15)"
388,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@16.0.0-alpha.2.
# Release Notes for v16.0.0-alpha.2
Features

Added WebHID support. #31090 (Also in 15)
Added textWidth option to dialog.showMessageBox() / dialog.showMessageBoxSync(). #31089 (Also in 15)

Fixes

Fixed an issue where BrowserView dragging behavior was inconsistent with MacOS window dragging. #31178 (Also in 13, 14, 15)
Fixed an issue where out-of-focus BrowserViews could not be immediately dragged. #31101 (Also in 13, 14)
Fixed black border around the page after resizing is disabled. #31080 (Also in 13, 14, 15)
Fixed crash caused by double free when destroying WebContents. #31132 (Also in 14, 15)
Fixed crash in v8 due to (Check failed: !regexp_stack_-&gt;is_in_use()). #31145 (Also in 13, 14, 15)
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@16.0.0-alpha.2.
Release Notes for v16.0.0-alpha.2
Features
Added WebHID support. #31090 (Also in 15)
Added textWidth option to dialog.showMessageBox() / dialog.showMessageBoxSync(). #31089 (Also in 15)
Fixes
Fixed an issue where BrowserView dragging behavior was inconsistent with MacOS window dragging. #31178 (Also in 13, 14, 15)
Fixed an issue where out-of-focus BrowserViews could not be immediately dragged. #31101 (Also in 13, 14)
Fixed black border around the page after resizing is disabled. #31080 (Also in 13, 14, 15)
Fixed crash caused by double free when destroying WebContents. #31132 (Also in 14, 15)
Fixed crash in v8 due to (Check failed: !regexp_stack_->is_in_use()). #31145 (Also in 13, 14, 15)"
389,"Release Notes for v14.1.0
Features

Added WebHID support. #31192 (Also in 15, 16)

Fixes

Fixed Let's Encrypt DST Root CA X3 certificate expiration. #31216 (Also in 12, 13, 15, 16)
Fixed an issue where BrowserView dragging behavior was inconsistent with MacOS window dragging. #31176 (Also in 13, 15, 16)
Fixed an issue where changes to draggable regions in a BrowserWindow incorrectly affected those in an attached BrowserView. #31200 (Also in 13, 15, 16)
Fixed potential crash when programmatically closing a draggable frameless child window. #31187 (Also in 15)

Other Changes

Backported fix for CVE-2021-37960. #31210 
","Release Notes for v14.1.0
Features
Added WebHID support. #31192 (Also in 15, 16)
Fixes
Fixed Let's Encrypt DST Root CA X3 certificate expiration. #31216 (Also in 12, 13, 15, 16)
Fixed an issue where BrowserView dragging behavior was inconsistent with MacOS window dragging. #31176 (Also in 13, 15, 16)
Fixed an issue where changes to draggable regions in a BrowserWindow incorrectly affected those in an attached BrowserView. #31200 (Also in 13, 15, 16)
Fixed potential crash when programmatically closing a draggable frameless child window. #31187 (Also in 15)
Other Changes
Backported fix for CVE-2021-37960. #31210 "
390,"Release Notes for v13.5.1
Fixes

Fixed Let's Encrypt DST Root CA X3 certificate expiration. #31215 (Also in 12, 14, 15, 16)
Fixed an issue where BrowserView dragging behavior was inconsistent with MacOS window dragging. #31175 (Also in 14, 15, 16)
Fixed an issue where changes to draggable regions in a BrowserWindow incorrectly affected those in an attached BrowserView. #31197 (Also in 14, 15, 16)
Fixed crash in v8 due to (Check failed: !regexp_stack_-&gt;is_in_use()). #31142 (Also in 14, 15, 16)
Fixed media key globalShortcuts on macOS. #30568 (Also in 14, 15)

Other Changes

Security: backported fix for CVE-2021-37960. #31209 
Security: backported fix for CVE-2021-37973. #31202 
","Release Notes for v13.5.1
Fixes
Fixed Let's Encrypt DST Root CA X3 certificate expiration. #31215 (Also in 12, 14, 15, 16)
Fixed an issue where BrowserView dragging behavior was inconsistent with MacOS window dragging. #31175 (Also in 14, 15, 16)
Fixed an issue where changes to draggable regions in a BrowserWindow incorrectly affected those in an attached BrowserView. #31197 (Also in 14, 15, 16)
Fixed crash in v8 due to (Check failed: !regexp_stack_->is_in_use()). #31142 (Also in 14, 15, 16)
Fixed media key globalShortcuts on macOS. #30568 (Also in 14, 15)
Other Changes
Security: backported fix for CVE-2021-37960. #31209 
Security: backported fix for CVE-2021-37973. #31202 "
391,"Release Notes for v12.2.1
Fixes

Fixed Let's Encrypt DST Root CA X3 certificate expiration. #31214 (Also in 16)

Other Changes

Security: backported fix for CVE-2021-37960. #31211 
Security: backported fix for CVE-2021-37973. #31203 
","Release Notes for v12.2.1
Fixes
Fixed Let's Encrypt DST Root CA X3 certificate expiration. #31214 (Also in 16)
Other Changes
Security: backported fix for CVE-2021-37960. #31211 
Security: backported fix for CVE-2021-37973. #31203 "
392,"Release Notes for v14.0.2
Fixes

Fixed a crash in navigator.fonts.query(). #30984 (Also in 15)
Fixed an issue where button labels in file choosers were improperly localized on Linux. #31065 (Also in 15, 16)
Fixed an issue where multiple calls toBrowserWindow.setResizable() can cause the zoom button to incorrectly be disabled on macOS. #31013 (Also in 15)
Fixed an issue where non-resizable non-fullscreenable windows with aspect ratios set could return incorrect results for isMaximized(). #31040 (Also in 13, 15)
Fixed an issue where out-of-focus BrowserViews could not be immediately dragged. #31099 (Also in 13, 16)
Fixed black border around the page after resizing is disabled. #31079 (Also in 13, 15, 16)
Fixed child windows not inheriting the correct transparency and background color settings. #31048 (Also in 15)
Fixed crash caused by double free when destroying WebContents. #31131 (Also in 15, 16)
Fixed crash in v8 due to (Check failed: !regexp_stack_-&gt;is_in_use()). #31143 (Also in 13, 15, 16)

Other Changes

Updated Chromium to 93.0.4577.82. #30954 

Documentation

Documentation changes: #30976
","Release Notes for v14.0.2
Fixes
Fixed a crash in navigator.fonts.query(). #30984 (Also in 15)
Fixed an issue where button labels in file choosers were improperly localized on Linux. #31065 (Also in 15, 16)
Fixed an issue where multiple calls toBrowserWindow.setResizable() can cause the zoom button to incorrectly be disabled on macOS. #31013 (Also in 15)
Fixed an issue where non-resizable non-fullscreenable windows with aspect ratios set could return incorrect results for isMaximized(). #31040 (Also in 13, 15)
Fixed an issue where out-of-focus BrowserViews could not be immediately dragged. #31099 (Also in 13, 16)
Fixed black border around the page after resizing is disabled. #31079 (Also in 13, 15, 16)
Fixed child windows not inheriting the correct transparency and background color settings. #31048 (Also in 15)
Fixed crash caused by double free when destroying WebContents. #31131 (Also in 15, 16)
Fixed crash in v8 due to (Check failed: !regexp_stack_->is_in_use()). #31143 (Also in 13, 15, 16)
Other Changes
Updated Chromium to 93.0.4577.82. #30954 
Documentation
Documentation changes: #30976"
393,"Release Notes for v12.2.0
Features

Added webContents.fromDevToolsTargetId(targetId) to lookup a WebContents instance from an associated Chrome DevTools Protocol TargetID. #30730 (Also in 13, 14, 15)

Other Changes

Backported fix for CVE-2021-30627. #30946 
Backported fix for CVE-2021-30631. #30944 
Security: Backported fix for 1233564. #30754 (Also in 11)
Security: backported fix for CVE-2021-30626. #30961 
Security: backported fix for CVE-2021-30628. #30958 
Security: backported fix for CVE-2021-30630. #30951 
Security: backported fix for CVE-2021-30633. #30942 
Security: backported fix for chromium:1238178. #30963 
Security: backported fix for chromium:1242257. #30953 
","Release Notes for v12.2.0
Features
Added webContents.fromDevToolsTargetId(targetId) to lookup a WebContents instance from an associated Chrome DevTools Protocol TargetID. #30730 (Also in 13, 14, 15)
Other Changes
Backported fix for CVE-2021-30627. #30946 
Backported fix for CVE-2021-30631. #30944 
Security: Backported fix for 1233564. #30754 (Also in 11)
Security: backported fix for CVE-2021-30626. #30961 
Security: backported fix for CVE-2021-30628. #30958 
Security: backported fix for CVE-2021-30630. #30951 
Security: backported fix for CVE-2021-30633. #30942 
Security: backported fix for chromium:1238178. #30963 
Security: backported fix for chromium:1242257. #30953 "
394,"Release Notes for v13.5.0
Features

Added support for Windows Control Overlay on Windows. #30887 (Also in 14, 15)
Added support for Windows Control Overlay on macOS. #30698 (Also in 14)

Fixes

Fixed an issue where BrowserView webContents would appear not to load in some circumstances. #31047 (Also in 14, 15)
Fixed an issue where non-resizable non-fullscreenable windows with aspect ratios set could return incorrect results for isMaximized(). #31039 (Also in 14, 15)
Fixed an issue where out-of-focus BrowserViews could not be immediately dragged. #31098 (Also in 16)
Fixed black border around the page after resizing is disabled. #31078 (Also in 14, 15, 16)
Fixed crash in seccomp sandbox with glibc 2.34. #31091 
None. #31097 (Also in 14, 15)

Other Changes

Backported fix for CVE-2021-30627. #30945 
Backported fix for CVE-2021-30631. #30943 
Backported fix for CVE-2021-30632. #30939 
Security: backported fix for CVE-2021-30625. #30964 
Security: backported fix for CVE-2021-30626. #30960 
Security: backported fix for CVE-2021-30628. #30957 
Security: backported fix for CVE-2021-30630. #30950 
Security: backported fix for CVE-2021-30633. #30941 
Security: backported fix for chromium:1238178. #30962 
Security: backported fix for chromium:1242257. #30952 
","Release Notes for v13.5.0
Features
Added support for Windows Control Overlay on Windows. #30887 (Also in 14, 15)
Added support for Windows Control Overlay on macOS. #30698 (Also in 14)
Fixes
Fixed an issue where BrowserView webContents would appear not to load in some circumstances. #31047 (Also in 14, 15)
Fixed an issue where non-resizable non-fullscreenable windows with aspect ratios set could return incorrect results for isMaximized(). #31039 (Also in 14, 15)
Fixed an issue where out-of-focus BrowserViews could not be immediately dragged. #31098 (Also in 16)
Fixed black border around the page after resizing is disabled. #31078 (Also in 14, 15, 16)
Fixed crash in seccomp sandbox with glibc 2.34. #31091 
None. #31097 (Also in 14, 15)
Other Changes
Backported fix for CVE-2021-30627. #30945 
Backported fix for CVE-2021-30631. #30943 
Backported fix for CVE-2021-30632. #30939 
Security: backported fix for CVE-2021-30625. #30964 
Security: backported fix for CVE-2021-30626. #30960 
Security: backported fix for CVE-2021-30628. #30957 
Security: backported fix for CVE-2021-30630. #30950 
Security: backported fix for CVE-2021-30633. #30941 
Security: backported fix for chromium:1238178. #30962 
Security: backported fix for chromium:1242257. #30952 "
395,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@16.0.0-alpha.1.
# Release Notes for v16.0.0-alpha.1
Features

Added 'dom-ready' event to WebFrameMain which emits when the frame's document is ready.
Added 'frame-created' event to WebContents which emits when a frame is created in the page. #29290 (Also in 15)
Added &lt;webview&gt;.sendToFrame() / frameId to 'ipc-message' event. #30451 (Also in 15)
Added &lt;webview&gt; 'did-redirect-navigation' event. #30457 (Also in 15)
Added app.configureHostResolver API for configuring DNS-over-HTTPS. #30576 (Also in 15)
Added frame property to the params object of the 'context-menu' event. #30831 (Also in 15)
Added isIssuedByKnownRoot to ses.setCertificateVerifyProc callback. #30174 
Added isMainFrame argument to 'certificate-error' event. #30879 
Added safeStorage string encryption API. #30020 (Also in 15)
Added webContents.fromDevToolsTargetId(targetId) to lookup a WebContents instance from an associated Chrome DevTools Protocol TargetID. #29399 (Also in 12, 13, 14, 15)
Added an Electron Fuse for enforcing code signatures on the app.asar file your application loads.  Requires the latest asar module. #30667 (Also in 15)
Added fuses to disable NODE_OPTIONS and --inspect debug arguments in packaged apps. #30190 (Also in 15)
Added support for Windows Control Overlay on Windows. #29600 (Also in 14, 15)
Added support for the U2F Web API. #30438 
Clicking a hyperlink in a PDF now does what you'd expect. #30069 
Emit a warning when setting a crash key name longer than the maximum allowed length. #30742 
Enabled sandboxing by default on WebContents which do not use Node or preloads. #30197 
NativeImage objects are now serializable over IPC. #30729 
The crashReporter API is now powered by Crashpad on Linux. #30278 
Usage of the desktopCapturer.getSources API from the renderer process has been deprecated and will be removed. #30721 

Fixes

Fixed documentEdited status not updating close button for frameless window on macOS. #30322 (Also in 13, 14, 15)
Fixed a crash in navigator.fonts.query(). #30930 (Also in 14, 15)
Fixed a crash in the repl when SharedArrayBuffer is disabled. #30456 (Also in 14, 15)
Fixed a crash when process.exit is called and nativeWindowOpen is enabled. #30218 (Also in 14, 15)
Fixed a crash when selecting files in a native file dialog on Windows and Linux. #30916 (Also in 15)
Fixed a potential crash that would occur with draggable regions on Windows. #30304 (Also in 13, 14, 15)
Fixed an issue on Mac where an application could not capture its own window using the desktop capture or getMediaSourceId APIs. #30507 (Also in 13, 14, 15)
Fixed an issue on Windows where empty console windows were appearing when --enable-logging was present. #30375 (Also in 14, 15)
Fixed an issue present in webView where the leave-html-full-screen event is not emitted if the user exits fullscreen with esc instead of by clicking into the webView. #30537 (Also in 12, 13, 14, 15)
Fixed an issue where BrowserView webContents would appear not to load in some circumstances. #29919 (Also in 13, 14, 15)
Fixed an issue where a specified aspect ratio could become incorrect when maximizing a window on macOS. #30305 (Also in 12, 13, 14, 15)
Fixed an issue where background color would not be correctly applied to BrowserViews on Windows when either the x or y coordinate is negative (off-screen). #30510 (Also in 13, 14, 15)
Fixed an issue where button labels in file choosers were improperly localized on Linux. #31067 
Fixed an issue where multiple calls toBrowserWindow.setResizable() can cause the zoom button to incorrectly be disabled on macOS. #30999 (Also in 14, 15)
Fixed an issue where non-resizable non-fullscreenable windows with aspect ratios set could return incorrect results for isMaximized(). #30989 (Also in 13, 14, 15)
Fixed an issue where some transparent windows would show with a white background. #31003 
Fixed an issue where the TouchBarScrubber crashes when showArrowButtons is enabled if items is an empty array. #30661 (Also in 13, 14, 15)
Fixed an issue where toggling documentEdited status on macOS with titlebarStyle: 'hiddenInset' inadvertently moves the traffic light location. #30565 (Also in 13, 14, 15)
Fixed an issue where undocked devtools was not resizable on Windows. #30823 (Also in 14, 15)
Fixed beta-only bug that caused mouse clicks to not be processed in frameless windows. #30447 (Also in 14, 15)
Fixed child windows not inheriting the correct transparency and background color settings. #31031 (Also in 14, 15)
Fixed crash in webview creation casued by UAF in the browser process. #24344 
Fixed detached DevTools window not closing when a menu item with the toggleDevTools role was triggered. #29922 
Fixed frameless window having wrong traffic lights position on macOS 11. #30263 (Also in 13, 14, 15)
Fixed imageAnimationPolicy not being respected. #30403 
Fixed media key globalShortcuts on macOS. #30552 (Also in 14, 15)
Fixed navigator.serial.getPorts() to return previously selected ports. #30209 
Fixed potential crash when programatically closing a draggable frameless child window. #30571 (Also in 15)
Fixed rare crash in UpdateDraggableRegions. #30556 (Also in 13, 14, 15)
Fixed some console messages still being printed to logs when the LogJsConsoleMessages feature was disabled. #30312 (Also in 14, 15)
Fixed stack overflow crash in v8 on windows 32-bit builds. #29474 (Also in 12, 13, 14, 15)
Fixed titlebar showing under simple fullscreen mode. #30671 (Also in 13, 14, 15)
Fixed transparent frameless windows having an opaque background when opened in a maximized state. #30804 (Also in 12, 13, 14, 15)
None. #30938 (Also in 14, 15)
Notes: Fixed a crash when selecting and opening files in a native file dialog on Mac. #30935 (Also in 15)

Other Changes

Notes. #30838 
Updated Chromium to 95.0.4629.0. #30676 
Updated Node.js to v16.9.1. #30919 
Web Serial API is no longer experimental. #30237 (Also in 14, 15)
WebContents for &lt;webview&gt; are now only created after the 'will-attach-webview' event is emitted and preventDefault is not called. #30311 

Documentation

Documentation changes: #30071, #30768, #30898
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@16.0.0-alpha.1.
Release Notes for v16.0.0-alpha.1
Features
Added 'dom-ready' event to WebFrameMain which emits when the frame's document is ready.
Added 'frame-created' event to WebContents which emits when a frame is created in the page. #29290 (Also in 15)
Added <webview>.sendToFrame() / frameId to 'ipc-message' event. #30451 (Also in 15)
Added <webview> 'did-redirect-navigation' event. #30457 (Also in 15)
Added app.configureHostResolver API for configuring DNS-over-HTTPS. #30576 (Also in 15)
Added frame property to the params object of the 'context-menu' event. #30831 (Also in 15)
Added isIssuedByKnownRoot to ses.setCertificateVerifyProc callback. #30174 
Added isMainFrame argument to 'certificate-error' event. #30879 
Added safeStorage string encryption API. #30020 (Also in 15)
Added webContents.fromDevToolsTargetId(targetId) to lookup a WebContents instance from an associated Chrome DevTools Protocol TargetID. #29399 (Also in 12, 13, 14, 15)
Added an Electron Fuse for enforcing code signatures on the app.asar file your application loads.  Requires the latest asar module. #30667 (Also in 15)
Added fuses to disable NODE_OPTIONS and --inspect debug arguments in packaged apps. #30190 (Also in 15)
Added support for Windows Control Overlay on Windows. #29600 (Also in 14, 15)
Added support for the U2F Web API. #30438 
Clicking a hyperlink in a PDF now does what you'd expect. #30069 
Emit a warning when setting a crash key name longer than the maximum allowed length. #30742 
Enabled sandboxing by default on WebContents which do not use Node or preloads. #30197 
NativeImage objects are now serializable over IPC. #30729 
The crashReporter API is now powered by Crashpad on Linux. #30278 
Usage of the desktopCapturer.getSources API from the renderer process has been deprecated and will be removed. #30721 
Fixes
Fixed documentEdited status not updating close button for frameless window on macOS. #30322 (Also in 13, 14, 15)
Fixed a crash in navigator.fonts.query(). #30930 (Also in 14, 15)
Fixed a crash in the repl when SharedArrayBuffer is disabled. #30456 (Also in 14, 15)
Fixed a crash when process.exit is called and nativeWindowOpen is enabled. #30218 (Also in 14, 15)
Fixed a crash when selecting files in a native file dialog on Windows and Linux. #30916 (Also in 15)
Fixed a potential crash that would occur with draggable regions on Windows. #30304 (Also in 13, 14, 15)
Fixed an issue on Mac where an application could not capture its own window using the desktop capture or getMediaSourceId APIs. #30507 (Also in 13, 14, 15)
Fixed an issue on Windows where empty console windows were appearing when --enable-logging was present. #30375 (Also in 14, 15)
Fixed an issue present in webView where the leave-html-full-screen event is not emitted if the user exits fullscreen with esc instead of by clicking into the webView. #30537 (Also in 12, 13, 14, 15)
Fixed an issue where BrowserView webContents would appear not to load in some circumstances. #29919 (Also in 13, 14, 15)
Fixed an issue where a specified aspect ratio could become incorrect when maximizing a window on macOS. #30305 (Also in 12, 13, 14, 15)
Fixed an issue where background color would not be correctly applied to BrowserViews on Windows when either the x or y coordinate is negative (off-screen). #30510 (Also in 13, 14, 15)
Fixed an issue where button labels in file choosers were improperly localized on Linux. #31067 
Fixed an issue where multiple calls toBrowserWindow.setResizable() can cause the zoom button to incorrectly be disabled on macOS. #30999 (Also in 14, 15)
Fixed an issue where non-resizable non-fullscreenable windows with aspect ratios set could return incorrect results for isMaximized(). #30989 (Also in 13, 14, 15)
Fixed an issue where some transparent windows would show with a white background. #31003 
Fixed an issue where the TouchBarScrubber crashes when showArrowButtons is enabled if items is an empty array. #30661 (Also in 13, 14, 15)
Fixed an issue where toggling documentEdited status on macOS with titlebarStyle: 'hiddenInset' inadvertently moves the traffic light location. #30565 (Also in 13, 14, 15)
Fixed an issue where undocked devtools was not resizable on Windows. #30823 (Also in 14, 15)
Fixed beta-only bug that caused mouse clicks to not be processed in frameless windows. #30447 (Also in 14, 15)
Fixed child windows not inheriting the correct transparency and background color settings. #31031 (Also in 14, 15)
Fixed crash in webview creation casued by UAF in the browser process. #24344 
Fixed detached DevTools window not closing when a menu item with the toggleDevTools role was triggered. #29922 
Fixed frameless window having wrong traffic lights position on macOS 11. #30263 (Also in 13, 14, 15)
Fixed imageAnimationPolicy not being respected. #30403 
Fixed media key globalShortcuts on macOS. #30552 (Also in 14, 15)
Fixed navigator.serial.getPorts() to return previously selected ports. #30209 
Fixed potential crash when programatically closing a draggable frameless child window. #30571 (Also in 15)
Fixed rare crash in UpdateDraggableRegions. #30556 (Also in 13, 14, 15)
Fixed some console messages still being printed to logs when the LogJsConsoleMessages feature was disabled. #30312 (Also in 14, 15)
Fixed stack overflow crash in v8 on windows 32-bit builds. #29474 (Also in 12, 13, 14, 15)
Fixed titlebar showing under simple fullscreen mode. #30671 (Also in 13, 14, 15)
Fixed transparent frameless windows having an opaque background when opened in a maximized state. #30804 (Also in 12, 13, 14, 15)
None. #30938 (Also in 14, 15)
Notes: Fixed a crash when selecting and opening files in a native file dialog on Mac. #30935 (Also in 15)
Other Changes
Notes. #30838 
Updated Chromium to 95.0.4629.0. #30676 
Updated Node.js to v16.9.1. #30919 
Web Serial API is no longer experimental. #30237 (Also in 14, 15)
WebContents for <webview> are now only created after the 'will-attach-webview' event is emitted and preventDefault is not called. #30311 
Documentation
Documentation changes: #30071, #30768, #30898"
396,"Release Notes for v15.0.0
Stack Upgrades

Chromium 94.0.4606.51.
New in 94


Node v16.5.0.
16.5.0
16.4.2
16.4.1
16.4.0
16.3.0
16.2.0
16.1.0
16.0.0
15 ChangeLog
14 ChangeLog


V8
v9.4 blog post



Breaking Changes

nativeWindowOpen: true is now the default. #28552

Features
Additions

Added 'dom-ready' event to WebFrameMain which emits when the frame's document is ready.
Added 'frame-created' event to WebContents which emits when a frame is created in the page. #30801 
Added <webview>.sendToFrame() / frameId to 'ipc-message' event. #30704 
Added <webview> 'did-redirect-navigation' event. #30664 
Added app.configureHostResolver API for configuring DNS-over-HTTPS. #30775 
Added location and modifiers to the event properties provided in the 'before-input-event' WebContents event. #29850 
Added safeStorage string encryption API. #30430 
Added signal option to dialog.showMessageBox. #26102 
Added webContents.fromDevToolsTargetId(targetId) to lookup a WebContents instance from an associated Chrome DevTools Protocol TargetID. #30733 (Also in 14)
Added an Electron Fuse for enforcing code signatures on the app.asar file your application loads.  Requires the latest asar module. #30900 
Added experimental cookie encryption support behind an Electron Fuse. #27524 (Also in 13, 14)
Added fuses to disable NODE_OPTIONS and --inspect debug arguments in packaged apps. #30420 
Added missing resourceType conversions for webRequest listener details: font, ping, cspReport, media, webSocket. #29902 (Also in 14)
Added new MenuItem.userAccelerator property to read user-assigned macOS accelerator overrides. #26682 
Added new app.runningUnderARM64Translation property to detect when running under Rosetta on Apple Silicon, or WOW on Windows for ARM. #29168 
Added new imageAnimationPolicy web preference to control how images are animated. #29095 
Added resize edge info to BrowserWindow's will-resize event. #29199 
Added support for Windows Control Overlay on Windows. #30497 (Also in 14)
Added support for Windows Control Overlay on macOS. #29253 (Also in 14)
Added support for debug URLs such as chrome://gpucrash. #29404 (Also in 13, 14)
Added support for directing Chromium logging to a file with --log-file=.../path/to/file.log. Also, it's now possible to enable logging from JavaScript by appending command-line switches during the first JS tick. #25089 (Also in 14)
Added support for sending Blobs over the context bridge. #29247

Improvements

Extended continue-activity event API to support webpageURL property from NSUserActivity. #30042

Fixes

Fixed a crash when selecting and opening files in a native file dialog on Mac. #30936 
Fixed a crash when selecting files in a native file dialog on Windows and Linux. #30927
Fixed an issue where GDK_BACKEND was being propagated to subprocesses on Linux. #28898
Fixed potential crash when programmatically closing a draggable frameless child window. #31027
Fixed typescript export definitions such that not-exported values are not declared in the exports interface. #28712 
Installing the electron package on an M1 macbook while using an x64 version of node will now automatically download the arm64 version of Electron instead of the x64 version. #29953

Also in earlier versions....

Electron Fuses are now in a consistent order across platforms. #29599 (Also in 13, 14)
Fixed  an issue where fs.promises.readFile would improperly error when passing a FileHandle to the pathargument. #29528 (Also in 12, 13, 14)
Fixed BrowserWindow's backgroundColor option not having an effect. #30777 (Also in 14)
Fixed CORS preflight request always being cancelled when connecting via proxy requiring authentication for apps that had registered WebRequest listeners. #29266 (Also in 12, 13, 14)
Fixed documentEdited status not updating close button for frameless window on macOS. #30392 (Also in 13, 14)
Fixed requestFullscreen inside webview does not make the element take fullscreen. #29952 (Also in 12, 13, 14)
Fixed select-bluetooth-device firing on Windows. #29591 (Also in 12, 13, 14)
Fixed a crash in the repl when SharedArrayBuffer is disabled. #30483 (Also in 14)
Fixed a crash when process.exit is called and nativeWindowOpen is enabled. #30238 (Also in 14)
Fixed a crash when calling the webContents.on('login') callback synchronously. #30068 (Also in 12, 13, 14)
Fixed a hang when denying a window.open using setWindowOpenHandler when nativeWindowOpen: false. #29851 (Also in 12, 13, 14)
Fixed a potential crash that would occur with draggable regions on Windows. #30328 (Also in 13, 14)
Fixed a potential crash when calling app.quit() on macOS. #29941 (Also in 12, 13, 14)
Fixed a potential crash when setting vibrancy on macOS. #29677 (Also in 13, 14)
Fixed an issue on Mac where an application could not capture its own window using the desktop capture or getMediaSourceId APIs. #30525 (Also in 13, 14)
Fixed an issue on Windows where empty console windows were appearing when --enable-logging was present. #30386 (Also in 14)
Fixed an issue present in webView where the leave-html-full-screen event is not emitted if the user exits fullscreen with esc instead of by clicking into the webView. #30562 (Also in 12, 13, 14)
Fixed an issue where BrowserWindows would not properly honor transparency: true or a backgroundColor being set in their constructor options. #30136 (Also in 14)
Fixed an issue where Electron would sometimes not honor the user-defined Downloads directory. #29938 (Also in 12, 13, 14)
Fixed an issue where BrowserView webContents would appear not to load in some circumstances. #30336 (Also in 14) 
Fixed an issue where self.module.paths wouldn't work in Workers. #29955 (Also in 12, 13, 14)
Fixed an issue where a specified aspect ratio could become incorrect when maximizing a window on macOS. #30332 (Also in 12, 13, 14)
Fixed an issue where background color would not be correctly applied to BrowserViews on Windows when either the x or y coordinate is negative (off-screen). #30542 (Also in 13, 14)
Fixed an issue where custom traffic lights could be covered by BrowserViews on macOS. #29595 (Also in 13, 14)
Fixed an issue where draggable regions sometimes did not work properly when DevTools is open. #29696 (Also in 12, 13, 14)
Fixed an issue where dropdown menus did not work in DevTools when contextIsolation was enabled. #29841 (Also in 13, 14)
Fixed an issue where multiple calls toBrowserWindow.setResizable() can cause the zoom button to incorrectly be disabled on macOS. #31014 (Also in 14)
Fixed an issue where request headers were cleared if the optional ""requestHeaders"" parameter was not included in the webRequest.onBeforeSendHeaders callback response object. #29798 (Also in 12, 13, 14)
Fixed an issue where right-clicking in the devtools console throws an error. #29436 (Also in 14)
Fixed an issue where the TouchBarScrubber crashes when showArrowButtons is enabled if items is an empty array. #30681 (Also in 13, 14)
Fixed an issue where the setAlwaysOnTop value would sometimes not be preserved for child windows on macOS. #29813 (Also in 12, 13, 14)
Fixed an issue where the traffic lights would get double-drawn when exiting fullscreen and adding a BrowserView on macOS. #30114 (Also in 13, 14)
Fixed an issue where the user-data directory was incorrect in unpackaged apps. #30113 (Also in 14)
Fixed an issue where toggling documentEdited status on macOS with titlebarStyle: 'hiddenInset' inadvertently moves the traffic light location. #30604 (Also in 13, 14)
Fixed an issue where undocked devtools was not resizable on Windows. #30848 (Also in 14)
Fixed an issue with PDF loading on Windows, where metadata was not loading correctly and causing the PDF to load as a blank page. #29827 (Also in 13, 14)
Fixed beta-only bug that caused mouse clicks to not be processed in frameless windows. #30460 (Also in 14)
Fixed crash when clicking links with target=_blank from webview. #29874 (Also in 12, 13, 14)
Fixed crashes in debug builds caused by microtasks policy mismatch. #29531 (Also in 12, 13, 14)
Fixed crashes on latest gen Intel and Ryzen processors. #29689 (Also in 14)
Fixed crashes on macOS when Geolocation was used. #29913 (Also in 13, 14)
Fixed frameless window having wrong traffic lights position on macOS 11. #30270 (Also in 13, 14)
Fixed hover state not clear bug when BrowserWindow is not resizable. #29721 (Also in 12, 13, 14)
Fixed issue where the update permission prompt would cause 100% CPU spin while the prompt was open. #29791 (Also in 13, 14)
Fixed key window status on mac when opening panels or using custom window switchers. #29857 (Also in 12, 14)
Fixed media key globalShortcuts on macOS. #30570 (Also in 14)
Fixed memory leak when creating notification on macOS. #29990 (Also in 12, 13, 14)
Fixed memory leak when requesting files in ASAR archive from renderer. #29293 (Also in 12, 13, 14)
Fixed missing 'fetch' event in service workers for requests using a registered protocol. #29425 (Also in 12, 13, 14)
Fixed page title not being updated on child windows without navigation entries under nativeWindowOpen. #29946 (Also in 12, 13, 14)
Fixed potential corruption of piped response data when using interceptHttpProtocol/registerHttpProtocol. #29567 (Also in 11, 12, 13, 14)
Fixed pressing Alt with mouse click results in toggling menu bar. #29318 (Also in 12, 13, 14)
Fixed pressing ESC not exiting fullscreen from webview. #30063 (Also in 12, 13, 14)
Fixed pressing Alt+Shift and Alt+Ctrl toggling menu bar on KDE. #29328 (Also in 12, 13, 14)
Fixed rare crash in UpdateDraggableRegions. #30558 (Also in 13, 14)
Fixed redirects between locations in custom protocols. #29796 (Also in 14)
Fixed sending intermediate certificates with 'select-client-certificate' event callback. #29552 (Also in 12, 13, 14)
Fixed shifted character getting changed in menu accelerator. #29202 (Also in 12, 13, 14)
Fixed some console messages still being printed to logs when the LogJsConsoleMessages feature was disabled. #30356 (Also in 14)
Fixed stack overflow crash in v8 on windows 32-bit builds. #30243 (Also in 12, 13, 14)
Fixed systemPreferences.getSystemColor returning colors missing alpha values. #30055 (Also in 13, 14)
Fixed the 'did-fail-load' event not being emitted when the 'certificate-error' handler allowed an error through. #29826 (Also in 14)
Fixed the <select> element dropdown not appearing on Windows or Linux. #29742 (Also in 14)
Fixed the color select eyedropper not working within DevTools. #29729 (Also in 13, 14)
Fixed the spelling of 'attachment' in 'Content-Disposition' header when using the webRequest module. #29621 (Also in 12, 13, 14)
Fixed titlebar showing under simple fullscreen mode. #30708 (Also in 13, 14)
Fixed transparent frameless windows having an opaque background when opened in a maximized state. #30865 (Also in 12, 13, 14)
Fixed tray.setTitle not respecting ANSI colors if a font type was specified. #30146 (Also in 13, 14) 

Other Changes

Backported fix for 1216190. #30084 (Also in 12, 13, 14)
Fixed app.getPath('logs') returning the wrong path on Linux and Windows. #29649 (Also in 14)
Fixed a feature flag issue where spellchecker methods returned empty suggestion lists on Windows. #29690 (Also in 13, 14) 
Web Serial API is no longer experimental. #30334 (Also in 14)

Documentation

Documentation changes: 
#29342 - development/build-instructions-windows
#29380 - tutorial/launch-app-from-url-in-another-app
#29384 - introduction
#29385 - tutorial/tray
#29426
#29551 - api/window-open
#30121 - tutorial/support
#30851 - api/webview-tag



Continuing Support for 12.x.y
As per Electron's new 8-week cadence, we will be extending our supported version policy from the latest three versions to the latest four versions of Electron until May 2022, with the release of Electron 19. After Electron 19 is released, we'll return to supporting the latest three major versions, as well as the beta and nightly releases.
|   E15 (Sep'21) |  E16 (Nov'21) |  E17 (Feb'22) |  E18 (Mar'22) |  E19 (May'22) |
| ---- | ---- | ---- | ---- | ---- |
|   15.x.y |    16.x.y |    17.x.y |    18.x.y |    19.x.y |
|   14.x.y |    15.x.y |    16.x.y |    17.x.y |    18.x.y |
|   13.x.y |    14.x.y |    15.x.y |    16.x.y |    17.x.y |
|   12.x.y |    13.x.y |    14.x.y |    15.x.y |    -- |","Release Notes for v15.0.0
Stack Upgrades
Chromium 94.0.4606.51.
New in 94
Node v16.5.0.
16.5.0
16.4.2
16.4.1
16.4.0
16.3.0
16.2.0
16.1.0
16.0.0
15 ChangeLog
14 ChangeLog
V8
v9.4 blog post
Breaking Changes
nativeWindowOpen: true is now the default. #28552
Features
Additions
Added 'dom-ready' event to WebFrameMain which emits when the frame's document is ready.
Added 'frame-created' event to WebContents which emits when a frame is created in the page. #30801 
Added .sendToFrame() / frameId to 'ipc-message' event. #30704 
Added  'did-redirect-navigation' event. #30664 
Added app.configureHostResolver API for configuring DNS-over-HTTPS. #30775 
Added location and modifiers to the event properties provided in the 'before-input-event' WebContents event. #29850 
Added safeStorage string encryption API. #30430 
Added signal option to dialog.showMessageBox. #26102 
Added webContents.fromDevToolsTargetId(targetId) to lookup a WebContents instance from an associated Chrome DevTools Protocol TargetID. #30733 (Also in 14)
Added an Electron Fuse for enforcing code signatures on the app.asar file your application loads.  Requires the latest asar module. #30900 
Added experimental cookie encryption support behind an Electron Fuse. #27524 (Also in 13, 14)
Added fuses to disable NODE_OPTIONS and --inspect debug arguments in packaged apps. #30420 
Added missing resourceType conversions for webRequest listener details: font, ping, cspReport, media, webSocket. #29902 (Also in 14)
Added new MenuItem.userAccelerator property to read user-assigned macOS accelerator overrides. #26682 
Added new app.runningUnderARM64Translation property to detect when running under Rosetta on Apple Silicon, or WOW on Windows for ARM. #29168 
Added new imageAnimationPolicy web preference to control how images are animated. #29095 
Added resize edge info to BrowserWindow's will-resize event. #29199 
Added support for Windows Control Overlay on Windows. #30497 (Also in 14)
Added support for Windows Control Overlay on macOS. #29253 (Also in 14)
Added support for debug URLs such as chrome://gpucrash. #29404 (Also in 13, 14)
Added support for directing Chromium logging to a file with --log-file=.../path/to/file.log. Also, it's now possible to enable logging from JavaScript by appending command-line switches during the first JS tick. #25089 (Also in 14)
Added support for sending Blobs over the context bridge. #29247
Improvements
Extended continue-activity event API to support webpageURL property from NSUserActivity. #30042
Fixes
Fixed a crash when selecting and opening files in a native file dialog on Mac. #30936 
Fixed a crash when selecting files in a native file dialog on Windows and Linux. #30927
Fixed an issue where GDK_BACKEND was being propagated to subprocesses on Linux. #28898
Fixed potential crash when programmatically closing a draggable frameless child window. #31027
Fixed typescript export definitions such that not-exported values are not declared in the exports interface. #28712 
Installing the electron package on an M1 macbook while using an x64 version of node will now automatically download the arm64 version of Electron instead of the x64 version. #29953
Also in earlier versions....
Electron Fuses are now in a consistent order across platforms. #29599 (Also in 13, 14)
Fixed  an issue where fs.promises.readFile would improperly error when passing a FileHandle to the pathargument. #29528 (Also in 12, 13, 14)
Fixed BrowserWindow's backgroundColor option not having an effect. #30777 (Also in 14)
Fixed CORS preflight request always being cancelled when connecting via proxy requiring authentication for apps that had registered WebRequest listeners. #29266 (Also in 12, 13, 14)
Fixed documentEdited status not updating close button for frameless window on macOS. #30392 (Also in 13, 14)
Fixed requestFullscreen inside webview does not make the element take fullscreen. #29952 (Also in 12, 13, 14)
Fixed select-bluetooth-device firing on Windows. #29591 (Also in 12, 13, 14)
Fixed a crash in the repl when SharedArrayBuffer is disabled. #30483 (Also in 14)
Fixed a crash when process.exit is called and nativeWindowOpen is enabled. #30238 (Also in 14)
Fixed a crash when calling the webContents.on('login') callback synchronously. #30068 (Also in 12, 13, 14)
Fixed a hang when denying a window.open using setWindowOpenHandler when nativeWindowOpen: false. #29851 (Also in 12, 13, 14)
Fixed a potential crash that would occur with draggable regions on Windows. #30328 (Also in 13, 14)
Fixed a potential crash when calling app.quit() on macOS. #29941 (Also in 12, 13, 14)
Fixed a potential crash when setting vibrancy on macOS. #29677 (Also in 13, 14)
Fixed an issue on Mac where an application could not capture its own window using the desktop capture or getMediaSourceId APIs. #30525 (Also in 13, 14)
Fixed an issue on Windows where empty console windows were appearing when --enable-logging was present. #30386 (Also in 14)
Fixed an issue present in webView where the leave-html-full-screen event is not emitted if the user exits fullscreen with esc instead of by clicking into the webView. #30562 (Also in 12, 13, 14)
Fixed an issue where BrowserWindows would not properly honor transparency: true or a backgroundColor being set in their constructor options. #30136 (Also in 14)
Fixed an issue where Electron would sometimes not honor the user-defined Downloads directory. #29938 (Also in 12, 13, 14)
Fixed an issue where BrowserView webContents would appear not to load in some circumstances. #30336 (Also in 14) 
Fixed an issue where self.module.paths wouldn't work in Workers. #29955 (Also in 12, 13, 14)
Fixed an issue where a specified aspect ratio could become incorrect when maximizing a window on macOS. #30332 (Also in 12, 13, 14)
Fixed an issue where background color would not be correctly applied to BrowserViews on Windows when either the x or y coordinate is negative (off-screen). #30542 (Also in 13, 14)
Fixed an issue where custom traffic lights could be covered by BrowserViews on macOS. #29595 (Also in 13, 14)
Fixed an issue where draggable regions sometimes did not work properly when DevTools is open. #29696 (Also in 12, 13, 14)
Fixed an issue where dropdown menus did not work in DevTools when contextIsolation was enabled. #29841 (Also in 13, 14)
Fixed an issue where multiple calls toBrowserWindow.setResizable() can cause the zoom button to incorrectly be disabled on macOS. #31014 (Also in 14)
Fixed an issue where request headers were cleared if the optional ""requestHeaders"" parameter was not included in the webRequest.onBeforeSendHeaders callback response object. #29798 (Also in 12, 13, 14)
Fixed an issue where right-clicking in the devtools console throws an error. #29436 (Also in 14)
Fixed an issue where the TouchBarScrubber crashes when showArrowButtons is enabled if items is an empty array. #30681 (Also in 13, 14)
Fixed an issue where the setAlwaysOnTop value would sometimes not be preserved for child windows on macOS. #29813 (Also in 12, 13, 14)
Fixed an issue where the traffic lights would get double-drawn when exiting fullscreen and adding a BrowserView on macOS. #30114 (Also in 13, 14)
Fixed an issue where the user-data directory was incorrect in unpackaged apps. #30113 (Also in 14)
Fixed an issue where toggling documentEdited status on macOS with titlebarStyle: 'hiddenInset' inadvertently moves the traffic light location. #30604 (Also in 13, 14)
Fixed an issue where undocked devtools was not resizable on Windows. #30848 (Also in 14)
Fixed an issue with PDF loading on Windows, where metadata was not loading correctly and causing the PDF to load as a blank page. #29827 (Also in 13, 14)
Fixed beta-only bug that caused mouse clicks to not be processed in frameless windows. #30460 (Also in 14)
Fixed crash when clicking links with target=_blank from webview. #29874 (Also in 12, 13, 14)
Fixed crashes in debug builds caused by microtasks policy mismatch. #29531 (Also in 12, 13, 14)
Fixed crashes on latest gen Intel and Ryzen processors. #29689 (Also in 14)
Fixed crashes on macOS when Geolocation was used. #29913 (Also in 13, 14)
Fixed frameless window having wrong traffic lights position on macOS 11. #30270 (Also in 13, 14)
Fixed hover state not clear bug when BrowserWindow is not resizable. #29721 (Also in 12, 13, 14)
Fixed issue where the update permission prompt would cause 100% CPU spin while the prompt was open. #29791 (Also in 13, 14)
Fixed key window status on mac when opening panels or using custom window switchers. #29857 (Also in 12, 14)
Fixed media key globalShortcuts on macOS. #30570 (Also in 14)
Fixed memory leak when creating notification on macOS. #29990 (Also in 12, 13, 14)
Fixed memory leak when requesting files in ASAR archive from renderer. #29293 (Also in 12, 13, 14)
Fixed missing 'fetch' event in service workers for requests using a registered protocol. #29425 (Also in 12, 13, 14)
Fixed page title not being updated on child windows without navigation entries under nativeWindowOpen. #29946 (Also in 12, 13, 14)
Fixed potential corruption of piped response data when using interceptHttpProtocol/registerHttpProtocol. #29567 (Also in 11, 12, 13, 14)
Fixed pressing Alt with mouse click results in toggling menu bar. #29318 (Also in 12, 13, 14)
Fixed pressing ESC not exiting fullscreen from webview. #30063 (Also in 12, 13, 14)
Fixed pressing Alt+Shift and Alt+Ctrl toggling menu bar on KDE. #29328 (Also in 12, 13, 14)
Fixed rare crash in UpdateDraggableRegions. #30558 (Also in 13, 14)
Fixed redirects between locations in custom protocols. #29796 (Also in 14)
Fixed sending intermediate certificates with 'select-client-certificate' event callback. #29552 (Also in 12, 13, 14)
Fixed shifted character getting changed in menu accelerator. #29202 (Also in 12, 13, 14)
Fixed some console messages still being printed to logs when the LogJsConsoleMessages feature was disabled. #30356 (Also in 14)
Fixed stack overflow crash in v8 on windows 32-bit builds. #30243 (Also in 12, 13, 14)
Fixed systemPreferences.getSystemColor returning colors missing alpha values. #30055 (Also in 13, 14)
Fixed the 'did-fail-load' event not being emitted when the 'certificate-error' handler allowed an error through. #29826 (Also in 14)
Fixed the  element dropdown not appearing on Windows or Linux. #29742 (Also in 14)
Fixed the color select eyedropper not working within DevTools. #29729 (Also in 13, 14)
Fixed the spelling of 'attachment' in 'Content-Disposition' header when using the webRequest module. #29621 (Also in 12, 13, 14)
Fixed titlebar showing under simple fullscreen mode. #30708 (Also in 13, 14)
Fixed transparent frameless windows having an opaque background when opened in a maximized state. #30865 (Also in 12, 13, 14)
Fixed tray.setTitle not respecting ANSI colors if a font type was specified. #30146 (Also in 13, 14) 
Other Changes
Backported fix for 1216190. #30084 (Also in 12, 13, 14)
Fixed app.getPath('logs') returning the wrong path on Linux and Windows. #29649 (Also in 14)
Fixed a feature flag issue where spellchecker methods returned empty suggestion lists on Windows. #29690 (Also in 13, 14) 
Web Serial API is no longer experimental. #30334 (Also in 14)
Documentation
Documentation changes: 
29342 - development/build-instructions-windows
29380 - tutorial/launch-app-from-url-in-another-app
29384 - introduction
29385 - tutorial/tray
29426
29551 - api/window-open
30121 - tutorial/support
30851 - api/webview-tag
Continuing Support for 12.x.y
As per Electron's new 8-week cadence, we will be extending our supported version policy from the latest three versions to the latest four versions of Electron until May 2022, with the release of Electron 19. After Electron 19 is released, we'll return to supporting the latest three major versions, as well as the beta and nightly releases.
|   E15 (Sep'21) |  E16 (Nov'21) |  E17 (Feb'22) |  E18 (Mar'22) |  E19 (May'22) |
| ---- | ---- | ---- | ---- | ---- |
|   15.x.y |    16.x.y |    17.x.y |    18.x.y |    19.x.y |
|   14.x.y |    15.x.y |    16.x.y |    17.x.y |    18.x.y |
|   13.x.y |    14.x.y |    15.x.y |    16.x.y |    17.x.y |
|   12.x.y |    13.x.y |    14.x.y |    15.x.y |    -- |"
397,"Release Notes for v12.1.2
Other Changes

Backported fix for CVE-2021-30632. #30940 
Security: backported fix for CVE-2021-30625. #30965 
","Release Notes for v12.1.2
Other Changes
Backported fix for CVE-2021-30632. #30940 
Security: backported fix for CVE-2021-30625. #30965 "
398,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@15.0.0-beta.7.
# Release Notes for v15.0.0-beta.7
Documentation

Documentation changes: #30977
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@15.0.0-beta.7.
Release Notes for v15.0.0-beta.7
Documentation
Documentation changes: #30977"
399,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@15.0.0-beta.6.
# Release Notes for v15.0.0-beta.6
Features

Added an Electron Fuse for enforcing code signatures on the app.asar file your application loads.  Requires the latest asar module. #30900 

Fixes

Fixed a crash when selecting and opening files in a native file dialog on Mac. #30936 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@15.0.0-beta.6.
Release Notes for v15.0.0-beta.6
Features
Added an Electron Fuse for enforcing code signatures on the app.asar file your application loads.  Requires the latest asar module. #30900 
Fixes
Fixed a crash when selecting and opening files in a native file dialog on Mac. #30936 "
400,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@15.0.0-beta.5.
# Release Notes for v15.0.0-beta.5
Fixes

Fixed a crash when selecting files in a native file dialog on Windows and Linux. #30927 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@15.0.0-beta.5.
Release Notes for v15.0.0-beta.5
Fixes
Fixed a crash when selecting files in a native file dialog on Windows and Linux. #30927 "
401,"Release Notes for v14.0.1
Features

Fixed crash that occasionally happens when closing or opening BrowserWindows. #30820 (Also in 13, 15)

Fixes

Fixed BrowserWindow's backgroundColor option not having an effect. #30819 
Fixed an issue where undocked devtools was not resizable on Windows. #30847 (Also in 15)
Fixed transparent frameless windows having an opaque background when opened in a maximized state. #30864 (Also in 12, 13, 15)

Other Changes

Updated Chromium to 93.0.4577.63. #30794 

Documentation

Documentation changes: #30849
","Release Notes for v14.0.1
Features
Fixed crash that occasionally happens when closing or opening BrowserWindows. #30820 (Also in 13, 15)
Fixes
Fixed BrowserWindow's backgroundColor option not having an effect. #30819 
Fixed an issue where undocked devtools was not resizable on Windows. #30847 (Also in 15)
Fixed transparent frameless windows having an opaque background when opened in a maximized state. #30864 (Also in 12, 13, 15)
Other Changes
Updated Chromium to 93.0.4577.63. #30794 
Documentation
Documentation changes: #30849"
402,"Release Notes for v13.4.0
Features

Added webContents.fromDevToolsTargetId(targetId) to lookup a WebContents instance from an associated Chrome DevTools Protocol TargetID. #30731 (Also in 14, 15)
Fixed crash that occasionally happens when closing or opening BrowserWindows. #30834 (Also in 15)

Fixes

Fixed crash when launching app with systemd v249. #30893 
Fixed transparent frameless windows having an opaque background when opened in a maximized state. #30862 (Also in 12, 14, 15)

Other Changes

Backported fix for chromium:1206289. #30821 
Backported fix for chromium:1227228. #30815 
Security: Backported fix for 1230767. #30638 
Security: backported fix for chromium:1216595. #30824 
Security: backported fix for chromium:1221047. #30817 

Documentation

Documentation changes: #30850
","Release Notes for v13.4.0
Features
Added webContents.fromDevToolsTargetId(targetId) to lookup a WebContents instance from an associated Chrome DevTools Protocol TargetID. #30731 (Also in 14, 15)
Fixed crash that occasionally happens when closing or opening BrowserWindows. #30834 (Also in 15)
Fixes
Fixed crash when launching app with systemd v249. #30893 
Fixed transparent frameless windows having an opaque background when opened in a maximized state. #30862 (Also in 12, 14, 15)
Other Changes
Backported fix for chromium:1206289. #30821 
Backported fix for chromium:1227228. #30815 
Security: Backported fix for 1230767. #30638 
Security: backported fix for chromium:1216595. #30824 
Security: backported fix for chromium:1221047. #30817 
Documentation
Documentation changes: #30850"
403,"Release Notes for v12.1.1
Fixes

Fixed transparent frameless windows having an opaque background when opened in a maximized state. #30863 (Also in 13, 14, 15)

Other Changes

Backported fix for chromium:1206289. #30822 
Backported fix for chromium:1227228. #30816 
Security: Backported fix for 1231134. #30762 (Also in 11)
Security: backported fix for chromium:1221047. #30818 
","Release Notes for v12.1.1
Fixes
Fixed transparent frameless windows having an opaque background when opened in a maximized state. #30863 (Also in 13, 14, 15)
Other Changes
Backported fix for chromium:1206289. #30822 
Backported fix for chromium:1227228. #30816 
Security: Backported fix for 1231134. #30762 (Also in 11)
Security: backported fix for chromium:1221047. #30818 "
404,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@15.0.0-beta.4.
# Release Notes for v15.0.0-beta.4
Fixes

Fixed transparent frameless windows having an opaque background when opened in a maximized state. #30865 (Also in 12, 13, 14)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@15.0.0-beta.4.
Release Notes for v15.0.0-beta.4
Fixes
Fixed transparent frameless windows having an opaque background when opened in a maximized state. #30865 (Also in 12, 13, 14)"
405,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@15.0.0-beta.3.
# Release Notes for v15.0.0-beta.3
Features

Added &lt;webview&gt; 'did-redirect-navigation' event. #30664 
Added webContents.fromDevToolsTargetId(targetId) to lookup a WebContents instance from an associated Chrome DevTools Protocol TargetID. #30733 (Also in 14)

Fixes

Fixed BrowserWindow's backgroundColor option not having an effect. #30777 (Also in 14)
Fixed an issue where undocked devtools was not resizable on Windows. #30848 (Also in 14)

Other Changes

Updated Chromium to 94.0.4606.31. #30813 

Documentation

Documentation changes: #30851
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@15.0.0-beta.3.
Release Notes for v15.0.0-beta.3
Features
Added <webview> 'did-redirect-navigation' event. #30664 
Added webContents.fromDevToolsTargetId(targetId) to lookup a WebContents instance from an associated Chrome DevTools Protocol TargetID. #30733 (Also in 14)
Fixes
Fixed BrowserWindow's backgroundColor option not having an effect. #30777 (Also in 14)
Fixed an issue where undocked devtools was not resizable on Windows. #30848 (Also in 14)
Other Changes
Updated Chromium to 94.0.4606.31. #30813 
Documentation
Documentation changes: #30851"
406,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@15.0.0-beta.2.
# Release Notes for v15.0.0-beta.2
Features

Added 'dom-ready' event to WebFrameMain which emits when the frame's document is ready.
Added 'frame-created' event to WebContents which emits when a frame is created in the page. #30801 
Added &lt;webview&gt;.sendToFrame() / frameId to 'ipc-message' event. #30704 
Added app.configureHostResolver API for configuring DNS-over-HTTPS. #30775 

Fixes

Fixed a crash in the repl when SharedArrayBuffer is disabled. #30483 (Also in 14)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@15.0.0-beta.2.
Release Notes for v15.0.0-beta.2
Features
Added 'dom-ready' event to WebFrameMain which emits when the frame's document is ready.
Added 'frame-created' event to WebContents which emits when a frame is created in the page. #30801 
Added <webview>.sendToFrame() / frameId to 'ipc-message' event. #30704 
Added app.configureHostResolver API for configuring DNS-over-HTTPS. #30775 
Fixes
Fixed a crash in the repl when SharedArrayBuffer is disabled. #30483 (Also in 14)"
407,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@15.0.0-beta.1.
# Release Notes for v15.0.0-beta.1
Other Changes

Updated Chromium to 94.0.4606.20. #30715 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@15.0.0-beta.1.
Release Notes for v15.0.0-beta.1
Other Changes
Updated Chromium to 94.0.4606.20. #30715 "
408,"Release Notes for v13.3.0
Other Changes

Security: Backported fix for 1228036. #30639 
Security: Backported fix for 1231134. #30637 (Also in 11)
Security: Backported fix for 1233564. #30636 (Also in 11)
Security: Backported fix for 1234009. #30635 (Also in 11)
","Release Notes for v13.3.0
Other Changes
Security: Backported fix for 1228036. #30639 
Security: Backported fix for 1231134. #30637 (Also in 11)
Security: Backported fix for 1233564. #30636 (Also in 11)
Security: Backported fix for 1234009. #30635 (Also in 11)"
409,"Release Notes for v12.1.0
Other Changes

Security: Backported fix for 1234764. #30660 (Also in 11)
Security: Backported fix for 1234770. #30634 
Security: Backported fix for 1234829. #30624 
","Release Notes for v12.1.0
Other Changes
Security: Backported fix for 1234764. #30660 (Also in 11)
Security: Backported fix for 1234770. #30634 
Security: Backported fix for 1234829. #30624 "
410,"Release Notes for v11.5.0
Other Changes

Security: Backported fix for 1227933. #30614 (Also in 12)
Security: Backported fix for 1231134. #30761 
Security: Backported fix for 1233564. #30755 
Security: Backported fix for 1234009. #30751 
Security: Backported fix for 1234764. #30659 (Also in 12)

End of Support for 11.x.y
Electron 11.x.y has reached end-of-support as per the project's support policy. Developers and applications are encouraged to upgrade to a newer version of Electron.","Release Notes for v11.5.0
Other Changes
Security: Backported fix for 1227933. #30614 (Also in 12)
Security: Backported fix for 1231134. #30761 
Security: Backported fix for 1233564. #30755 
Security: Backported fix for 1234009. #30751 
Security: Backported fix for 1234764. #30659 (Also in 12)
End of Support for 11.x.y
Electron 11.x.y has reached end-of-support as per the project's support policy. Developers and applications are encouraged to upgrade to a newer version of Electron."
411,"Release Notes for v14.0.0
Stack Upgrades

Chromium 93.0.4577.58.
New in 93
New in 92


Node v14.17.0.
v14.17.0 release notes


V8
v9.3 blog post
v9.2 blog post



Breaking Changes

Child windows no longer inherit BrowserWindow construction options from their parents. #28550 
Deprecated worldSafeExecuteJavaScript option was removed from webPreferences. #28456
Removed deprecated additionalFeatures property from new-window and did-create-window WebContents events. #28548
Removed the deprecated app.allowRendererProcessReuse and BrowserWindow affinity options. #26874

Features
Additions

Added BrowserWindow.isFocusable() to determine whether a window is focusable. #28642 
Added WebFrameMain.visibilityState instance property. #28706 
Added disposition, referrer and postBody to the details object passed to the window open handler registered with setWindowOpenHandler. #28518 (Also in 13)
Added process.contextId used by @electron/remote. #28007 (Also in 13)
Added experimental cookie encryption support behind an Electron Fuse. #29492 (Also in 13)
Added missing resourceType conversions for webRequest listener details: font, ping, cspReport, media, webSocket. #30050 
Added new session.storagePath API to get the path on disk for session-specific data. #28665 (Also in 13)
Added webContents.fromDevToolsTargetId(targetId) to lookup a WebContents instance from an associated Chrome DevTools Protocol TargetID. #30732
Added support for Windows Control Overlay on macOS. #29986
Added support for Windows Control Overlay on Windows. #30678 (Also in 15) 
Added support for debug URLs such as chrome://gpucrash. #29466 (Also in 13)
Added support for directing Chromium logging to a file with --log-file=.../path/to/file.log. Also, it's now possible to enable logging from JavaScript by appending command-line switches during the first JS tick. #29963 
Added support for the des-ede3 cipher in node crypto. #27897 (Also in 11, 12, 13)
Adding ContextBridgeMutability feature that skips context bridge DeepFreeze and SetReadOnlyNonConfigurable when exposing a value. #27348

Improvements

Improved performance characteristics of functions being sent back and forth over the contextBridge. #28285 
Improved performance of napi_threadsafe_function. #29021 (Also in 12, 13)

Removed/Deprecated

The submitURL option for crashReporter.start is no longer a required argument when uploadToServer is false. #28105 (Also in 13)

Fixes

Allow Node.js to manage microtasks queue by using explicit microtasks policy before calling uv_run(). #28957 (Also in 11, 12, 13)
Allow loading source maps from custom protocols and asar bundles. #28573 (Also in 12, 13)
Child windows with specified background colors or transpency now work as intended. #28054 (Also in 12, 13)
Colors returned from systemPreferences.getAccentColor(), getSystemColor and getColor are now correctly converted into the devices color space.  Previously the color would have been subtly incorrect. #28121 (Also in 11, 12, 13)
Electron Fuses are now in a consistent order across platforms. #29616 (Also in 13)
Fixed an issue where fs.promises.readFile would improperly error when passing a FileHandle to the path argument. #29577 (Also in 12, 13)
Fixed CORS preflight request always being cancelled when connecting via proxy requiring authentication for apps that had registered WebRequest listeners. #29812 (Also in 12, 13)
Fixed <webview> focus / blur events not working with contextIsolation enabled. #29004 (Also in 10, 11, 12, 13)
Fixed desktopCapturer.getSources() promise result sometimes never resolving. #28273 (Also in 10, 11, 12, 13)
Fixed documentEdited status not updating close button for frameless window on macOS. #30391 (Also in 13, 15)
Fixed postData parameter missing from new-window event. #28513 (Also in 12, 13)
Fixed requestFullscreen inside webview does not make the element take fullscreen. #29989 (Also in 12, 13)
Fixed select-bluetooth-device firing on Windows. #29613 (Also in 12, 13)
Fixed webFrame spell checker APIs crashing when called in sandboxed renderer. #29053 (Also in 12, 13)
Fixed will-resize and will-move events not scaling the emitted newBounds rectangle to the appropriate Windows display scale factor. #29162 (Also in 11, 12, 13)
Fixed a bug where, when a JumpList task description exceeded 260 characters, the JumpList was empty, despite valid entries. #28485 (Also in 11, 12, 13)
Fixed a crash in the repl when SharedArrayBuffer is disabled. #30484
Fixed a crash when process.exit is called and nativeWindowOpen is enabled. #30235 (Also in 15)
Fixed a crash when calling shell.trashItem() from the renderer process. #28748 (Also in 12, 13)
Fixed a crash when calling the webContents.on('login') callback synchronously. #30090 (Also in 12, 13)
Fixed a feature flag issue where spellchecker methods returned empty suggestion lists on Windows. #29705 (Also in 13)
Fixed a hang when denying a window.open using setWindowOpenHandler when nativeWindowOpen: false. #29883 (Also in 12, 13)
Fixed a network process crash that could happen when using setCertificateVerifyProc with many concurrent verification requests. #28358 (Also in 11, 12, 13)
Fixed a potential crash that would occur with draggable regions on Windows. #30327 (Also in 13, 15)
Fixed a potential crash when calling app.quit() on macOS. #29962 (Also in 12, 13)
Fixed a potential crash when setting vibrancy on macOS. #29723 (Also in 13)
Fixed an issue on Mac where an application could not capture its own window using the desktop capture or getMediaSourceId APIs. #30524 (Also in 13, 15) 
Fixed an issue on Windows where empty console windows were appearing when --enable-logging was present. #30385 (Also in 15)
Fixed an issue present in webView where the leave-html-full-screen event is not emitted if the user exits fullscreen with esc instead of by clicking into the webView. #30561 (Also in 12, 13, 15)
Fixed an issue where background color would not be correctly applied to BrowserViews on Windows when either the x or y coordinate is negative (off-screen). #30541 (Also in 13, 15)
Fixed an issue where BrowserWindows would not properly honor transparency: true or a backgroundColor being set in their constructor options. #30159 
Fixed an issue where Electron would sometimes not honor the user-defined Downloads directory. #29967 (Also in 12, 13)
Fixed an issue where BrowserView webContents would appear not to load in some circumstances. #30335 (Also in 15)
Fixed an issue where beforeunload and unload weren't firing properly in BrowserViews. #28382 
Fixed an issue where illegal access error could be thrown when nodeIntegrationInSubFrames is enabled. #29093 (Also in 12, 13)
Fixed an issue where select-serial-port callback crashes when called with an invalid serial port ID. #28602 (Also in 12, 13)
Fixed an issue where self.module.paths wouldn't work in Workers. #30014 (Also in 12, 13)
Fixed an issue where the TouchBarScrubber crashes when showArrowButtons is enabled if items is an empty array. #30679 (Also in 13, 15) 
Fixed an issue where toggling documentEdited status on macOS with titlebarStyle: 'hiddenInset' inadvertently moves the traffic light location. #30605 (Also in 13, 15)
Fixed an issue where win.capturePage() never called back after calling hide() for a hidden window on some platforms. #27883 (Also in 11, 12, 13)
Fixed an issue where window.print() did not work properly when printing a pdf from the pdf plugin. #28328 (Also in 12, 13)
Fixed an issue where a specified aspect ratio could become incorrect when maximizing a window on macOS. #30331 (Also in 12, 13, 15)
Fixed an issue where custom traffic lights could be covered by BrowserViews on macOS. #29628 (Also in 13)
Fixed an issue where drag regions on macOS would be offset incorrectly when no drag regions were set,. #28984 (Also in 11, 12, 13)
Fixed an issue where draggable regions sometimes did not work properly when DevTools is open. #29735 (Also in 12, 13)
Fixed an issue where dropdown menus did not work in DevTools when contextIsolation was enabled. #29886 (Also in 13)
Fixed an issue where errors thrown in functions passed over the contextBridge could be displayed incorrectly. #28346 (Also in 12, 13)
Fixed an issue where extensions without a background page might not have file access. #29123 (Also in 12, 13)
Fixed an issue where multiple calls to window.setFullScreen could cause problems. #25470 (Also in 11, 12, 13)
Fixed an issue where request headers were cleared if the optional ""requestHeaders"" parameter was not included in the webRequest.onBeforeSendHeaders callback response object. #29835 (Also in 12, 13)
Fixed an issue where right-clicking in the devtools console throws an error. #29472 
Fixed an issue where some Node.js modules would hang on page reload on Windows. #28175 (Also in 11, 12, 13)
Fixed an issue where some dialogs would stop working on macOS if window.hide() was called while they were open. #28671 (Also in 11, 12, 13)
Fixed an issue where the setAlwaysOnTop value would sometimes not be preserved for child windows on macOS. #29855 (Also in 12, 13)
Fixed an issue where the drag regions in BrowserViews on macOS could be off in their y-axis. #28268 (Also in 10, 11, 12, 13)
Fixed an issue where the thumbar disappeared after win.hide() on Windows. #28366 (Also in 10, 11, 12, 13)
Fixed an issue where the traffic lights would get double-drawn when exiting fullscreen and adding a BrowserView on macOS. #30150 (Also in 13)
Fixed an issue where the user-data directory was incorrect in unpackaged apps. #30142 
Fixed an issue where the void function Menu.setApplicationMenu would return a value on some platforms. #29118 (Also in 12, 13)
Fixed an issue where the window couldn't be closed if a user tried to quit with a message box showing. #28967 (Also in 12, 13)
Fixed an issue where windows in simpleFullscreen mode were not properly resizing when display metrics changed. #28150 (Also in 11, 12, 13)
Fixed an issue with PDF loading on Windows, where metadata was not loading correctly and causing the PDF to load as a blank page. #29831 (Also in 13)
Fixed app.getPath('logs') returning the wrong path on Linux and Windows. #29865
Fixed beta-only bug that caused mouse clicks to not be processed in frameless windows. #30459 (Also in 15)
Fixed context menus not being positioned correctly when near the edge of the screen. #28224 (Also in 11, 12, 13)
Fixed corner radius for vibrancy view in macOS 11. #28655 (Also in 11, 12, 13)
Fixed crash when an exception occurs within the event emitter. #28971 (Also in 13)
Fixed crash when calling getBackgroundColor on a transparent window with no assigned background color. #28120 (Also in 11, 12, 13)
Fixed crash when clicking links with target=_blank from webview. #29949 (Also in 12, 13)
Fixed crashes in debug builds caused by microtasks policy mismatch. #29809 (Also in 12, 13)
Fixed crashes on latest gen Intel and Ryzen processors. #29688 
Fixed crashes on macOS when Geolocation was used. #29914 (Also in 13)
Fixed failing to request file:// resources when web security is disabled. #28489 (Also in 11, 12, 13)
Fixed frameless window having wrong traffic lights position on macOS 11. #30269 (Also in 13, 15)
Fixed hover state not clear bug when BrowserWindow is not resizable. #29801 (Also in 12, 13)
Fixed incorrect value of document.focus when opening multiple windows on macOS. #29204 (Also in 12, 13)
Fixed intensive I/O from asar files causing ERR_FILE_NOT_FOUND after a while. #28137 (Also in 11, 12, 13)
Fixed issue where the update permission prompt would cause 100% CPU spin while the prompt was open. #29806 (Also in 13)
Fixed key window status on mac when opening panels or using custom window switchers. #30066 (Also in 12)
Fixed media key globalShortcuts on macOS. #30569 (Also in 15)
Fixed memory leak when creating notification on macOS. #30008 (Also in 12, 13)
Fixed memory leak when requesting files in ASAR archive from renderer. #29536 (Also in 12, 13)
Fixed missing 'fetch' event in service workers for requests using a registered protocol. #29440 (Also in 12, 13)
Fixed native module compilation with AsyncCleanupHooks on windows. #28067 (Also in 11, 12, 13)
Fixed page title not being updated on child windows without navigation entries under nativeWindowOpen. #29959 (Also in 12, 13)
Fixed permissions issue that was preventing the PDF viewer from displaying. #29210 (Also in 13)
Fixed potential corruption of piped response data when using interceptHttpProtocol/registerHttpProtocol. #29670 (Also in 11, 12, 13)
Fixed pressing Alt with mouse click results in toggling menu bar. #29452 (Also in 12, 13)
Fixed pressing ESC not exiting fullscreen from webview. #30127 (Also in 12, 13)
Fixed pressing Alt+Shift and Alt+Ctrl toggling menu bar on KDE. #29444 (Also in 12, 13)
Fixed rare crash in UpdateDraggableRegions. #30559 (Also in 13, 15)
Fixed rare crash when initializing the internal PDF extension. #28432 (Also in 12, 13)
Fixed redirects between locations in custom protocols. #30156 
Fixed sending intermediate certificates with 'select-client-certificate' event callback. #29570 (Also in 12, 13)
Fixed service worker not working with custom protocol. #28326 (Also in 11, 12, 13)
Fixed shifted character getting changed in menu accelerator. #29481 (Also in 12, 13)
Fixed some console messages still being printed to logs when the LogJsConsoleMessages feature was disabled. #30355 (Also in 15)
Fixed stack overflow crash in v8 on windows 32-bit builds. #30242 (Also in 12, 13, 15)
Fixed systemPreferences.getSystemColor returning colors missing alpha values. #30087 (Also in 13)
Fixed the 'did-fail-load' event not being emitted when the 'certificate-error' handler allowed an error through. #29870 
Fixed the <select> element dropdown not appearing on Windows or Linux. #29771 
Fixed the color select eyedropper not working within DevTools. #29752 (Also in 13)
Fixed the handler set with setWindowOpenHandler not being invoked when a link was middle-clicked or shift-clicked. #28498 (Also in 12, 13)
Fixed the possibility for incorrect visual artifacts when using vibrancy and making frameless windows fullscreen on macOS. #29084 (Also in 13)
Fixed the spelling of 'attachment' in 'Content-Disposition' header when using the webRequest module. #29673 (Also in 12, 13)
Fixed the window-all-closed event being emitted while the last BrowserWindow was still in the process of being closed. #28867 (Also in 11, 12, 13)
Fixed titlebar showing under simple fullscreen mode. #30707 (Also in 13, 15)
Fixed tray.setTitle not respecting ANSI colors if a font type was specified. #30164 (Also in 13)
Fixed using custom v8 snapshots on Apple Silicon. #29338 (Also in 12, 13)
Fixed using navigator.setAppBadge and navigator.clearAppBadge from a service worker in Electron. #27950 (Also in 12)
Fixed using vibrancy with titleBarStyle together resulting in weird window shadow on macOS. #29114 (Also in 13)
No longer set backgroundColor in default-app when opening custom files / URLs. #28792 (Also in 10, 11, 12, 13)
Restored cross-platform noop implementation of app.setAppUserModelId. #28915 (Also in 13)
Support wasm-eval csp behind WebAssemblyCSP flag. #28535 (Also in 11, 12, 13)
Transparent windows cannot be maximized using the Windows system menu or by double clicking the title bar. #28207 (Also in 12, 13)
URLS passed to shell.openExternal on windows are now correctly URI encoded.  This was already occurring on macOS and Linux. #28334 (Also in 10, 11, 12, 13)

Other Changes

Backported fix for 1216190. #30101 (Also in 12, 13)
Refactored <webview> using contextBridge to make it safer to use when contextIsolation is enabled. #29037 
Updated community discussions link in default Electron menu. #28449 (Also in 12, 13)
Web Serial API is no longer experimental. #30333 (Also in 15)

Documentation

Documentation changes: 
#27888 - api/auto-updater
#27958 - api/power-monitor
#28189 - api/browser-window
#28315 - docs
#29073 
#29295 - tutorial/support
#29429 - tutorial/introduction
#29727 - api/window-open
#30058



End of Support for 11.x.y
Electron 11.x.y has reached end-of-support as per the project's support policy. Developers and applications are encouraged to upgrade to a newer version of Electron.","Release Notes for v14.0.0
Stack Upgrades
Chromium 93.0.4577.58.
New in 93
New in 92
Node v14.17.0.
v14.17.0 release notes
V8
v9.3 blog post
v9.2 blog post
Breaking Changes
Child windows no longer inherit BrowserWindow construction options from their parents. #28550 
Deprecated worldSafeExecuteJavaScript option was removed from webPreferences. #28456
Removed deprecated additionalFeatures property from new-window and did-create-window WebContents events. #28548
Removed the deprecated app.allowRendererProcessReuse and BrowserWindow affinity options. #26874
Features
Additions
Added BrowserWindow.isFocusable() to determine whether a window is focusable. #28642 
Added WebFrameMain.visibilityState instance property. #28706 
Added disposition, referrer and postBody to the details object passed to the window open handler registered with setWindowOpenHandler. #28518 (Also in 13)
Added process.contextId used by @electron/remote. #28007 (Also in 13)
Added experimental cookie encryption support behind an Electron Fuse. #29492 (Also in 13)
Added missing resourceType conversions for webRequest listener details: font, ping, cspReport, media, webSocket. #30050 
Added new session.storagePath API to get the path on disk for session-specific data. #28665 (Also in 13)
Added webContents.fromDevToolsTargetId(targetId) to lookup a WebContents instance from an associated Chrome DevTools Protocol TargetID. #30732
Added support for Windows Control Overlay on macOS. #29986
Added support for Windows Control Overlay on Windows. #30678 (Also in 15) 
Added support for debug URLs such as chrome://gpucrash. #29466 (Also in 13)
Added support for directing Chromium logging to a file with --log-file=.../path/to/file.log. Also, it's now possible to enable logging from JavaScript by appending command-line switches during the first JS tick. #29963 
Added support for the des-ede3 cipher in node crypto. #27897 (Also in 11, 12, 13)
Adding ContextBridgeMutability feature that skips context bridge DeepFreeze and SetReadOnlyNonConfigurable when exposing a value. #27348
Improvements
Improved performance characteristics of functions being sent back and forth over the contextBridge. #28285 
Improved performance of napi_threadsafe_function. #29021 (Also in 12, 13)
Removed/Deprecated
The submitURL option for crashReporter.start is no longer a required argument when uploadToServer is false. #28105 (Also in 13)
Fixes
Allow Node.js to manage microtasks queue by using explicit microtasks policy before calling uv_run(). #28957 (Also in 11, 12, 13)
Allow loading source maps from custom protocols and asar bundles. #28573 (Also in 12, 13)
Child windows with specified background colors or transpency now work as intended. #28054 (Also in 12, 13)
Colors returned from systemPreferences.getAccentColor(), getSystemColor and getColor are now correctly converted into the devices color space.  Previously the color would have been subtly incorrect. #28121 (Also in 11, 12, 13)
Electron Fuses are now in a consistent order across platforms. #29616 (Also in 13)
Fixed an issue where fs.promises.readFile would improperly error when passing a FileHandle to the path argument. #29577 (Also in 12, 13)
Fixed CORS preflight request always being cancelled when connecting via proxy requiring authentication for apps that had registered WebRequest listeners. #29812 (Also in 12, 13)
Fixed  focus / blur events not working with contextIsolation enabled. #29004 (Also in 10, 11, 12, 13)
Fixed desktopCapturer.getSources() promise result sometimes never resolving. #28273 (Also in 10, 11, 12, 13)
Fixed documentEdited status not updating close button for frameless window on macOS. #30391 (Also in 13, 15)
Fixed postData parameter missing from new-window event. #28513 (Also in 12, 13)
Fixed requestFullscreen inside webview does not make the element take fullscreen. #29989 (Also in 12, 13)
Fixed select-bluetooth-device firing on Windows. #29613 (Also in 12, 13)
Fixed webFrame spell checker APIs crashing when called in sandboxed renderer. #29053 (Also in 12, 13)
Fixed will-resize and will-move events not scaling the emitted newBounds rectangle to the appropriate Windows display scale factor. #29162 (Also in 11, 12, 13)
Fixed a bug where, when a JumpList task description exceeded 260 characters, the JumpList was empty, despite valid entries. #28485 (Also in 11, 12, 13)
Fixed a crash in the repl when SharedArrayBuffer is disabled. #30484
Fixed a crash when process.exit is called and nativeWindowOpen is enabled. #30235 (Also in 15)
Fixed a crash when calling shell.trashItem() from the renderer process. #28748 (Also in 12, 13)
Fixed a crash when calling the webContents.on('login') callback synchronously. #30090 (Also in 12, 13)
Fixed a feature flag issue where spellchecker methods returned empty suggestion lists on Windows. #29705 (Also in 13)
Fixed a hang when denying a window.open using setWindowOpenHandler when nativeWindowOpen: false. #29883 (Also in 12, 13)
Fixed a network process crash that could happen when using setCertificateVerifyProc with many concurrent verification requests. #28358 (Also in 11, 12, 13)
Fixed a potential crash that would occur with draggable regions on Windows. #30327 (Also in 13, 15)
Fixed a potential crash when calling app.quit() on macOS. #29962 (Also in 12, 13)
Fixed a potential crash when setting vibrancy on macOS. #29723 (Also in 13)
Fixed an issue on Mac where an application could not capture its own window using the desktop capture or getMediaSourceId APIs. #30524 (Also in 13, 15) 
Fixed an issue on Windows where empty console windows were appearing when --enable-logging was present. #30385 (Also in 15)
Fixed an issue present in webView where the leave-html-full-screen event is not emitted if the user exits fullscreen with esc instead of by clicking into the webView. #30561 (Also in 12, 13, 15)
Fixed an issue where background color would not be correctly applied to BrowserViews on Windows when either the x or y coordinate is negative (off-screen). #30541 (Also in 13, 15)
Fixed an issue where BrowserWindows would not properly honor transparency: true or a backgroundColor being set in their constructor options. #30159 
Fixed an issue where Electron would sometimes not honor the user-defined Downloads directory. #29967 (Also in 12, 13)
Fixed an issue where BrowserView webContents would appear not to load in some circumstances. #30335 (Also in 15)
Fixed an issue where beforeunload and unload weren't firing properly in BrowserViews. #28382 
Fixed an issue where illegal access error could be thrown when nodeIntegrationInSubFrames is enabled. #29093 (Also in 12, 13)
Fixed an issue where select-serial-port callback crashes when called with an invalid serial port ID. #28602 (Also in 12, 13)
Fixed an issue where self.module.paths wouldn't work in Workers. #30014 (Also in 12, 13)
Fixed an issue where the TouchBarScrubber crashes when showArrowButtons is enabled if items is an empty array. #30679 (Also in 13, 15) 
Fixed an issue where toggling documentEdited status on macOS with titlebarStyle: 'hiddenInset' inadvertently moves the traffic light location. #30605 (Also in 13, 15)
Fixed an issue where win.capturePage() never called back after calling hide() for a hidden window on some platforms. #27883 (Also in 11, 12, 13)
Fixed an issue where window.print() did not work properly when printing a pdf from the pdf plugin. #28328 (Also in 12, 13)
Fixed an issue where a specified aspect ratio could become incorrect when maximizing a window on macOS. #30331 (Also in 12, 13, 15)
Fixed an issue where custom traffic lights could be covered by BrowserViews on macOS. #29628 (Also in 13)
Fixed an issue where drag regions on macOS would be offset incorrectly when no drag regions were set,. #28984 (Also in 11, 12, 13)
Fixed an issue where draggable regions sometimes did not work properly when DevTools is open. #29735 (Also in 12, 13)
Fixed an issue where dropdown menus did not work in DevTools when contextIsolation was enabled. #29886 (Also in 13)
Fixed an issue where errors thrown in functions passed over the contextBridge could be displayed incorrectly. #28346 (Also in 12, 13)
Fixed an issue where extensions without a background page might not have file access. #29123 (Also in 12, 13)
Fixed an issue where multiple calls to window.setFullScreen could cause problems. #25470 (Also in 11, 12, 13)
Fixed an issue where request headers were cleared if the optional ""requestHeaders"" parameter was not included in the webRequest.onBeforeSendHeaders callback response object. #29835 (Also in 12, 13)
Fixed an issue where right-clicking in the devtools console throws an error. #29472 
Fixed an issue where some Node.js modules would hang on page reload on Windows. #28175 (Also in 11, 12, 13)
Fixed an issue where some dialogs would stop working on macOS if window.hide() was called while they were open. #28671 (Also in 11, 12, 13)
Fixed an issue where the setAlwaysOnTop value would sometimes not be preserved for child windows on macOS. #29855 (Also in 12, 13)
Fixed an issue where the drag regions in BrowserViews on macOS could be off in their y-axis. #28268 (Also in 10, 11, 12, 13)
Fixed an issue where the thumbar disappeared after win.hide() on Windows. #28366 (Also in 10, 11, 12, 13)
Fixed an issue where the traffic lights would get double-drawn when exiting fullscreen and adding a BrowserView on macOS. #30150 (Also in 13)
Fixed an issue where the user-data directory was incorrect in unpackaged apps. #30142 
Fixed an issue where the void function Menu.setApplicationMenu would return a value on some platforms. #29118 (Also in 12, 13)
Fixed an issue where the window couldn't be closed if a user tried to quit with a message box showing. #28967 (Also in 12, 13)
Fixed an issue where windows in simpleFullscreen mode were not properly resizing when display metrics changed. #28150 (Also in 11, 12, 13)
Fixed an issue with PDF loading on Windows, where metadata was not loading correctly and causing the PDF to load as a blank page. #29831 (Also in 13)
Fixed app.getPath('logs') returning the wrong path on Linux and Windows. #29865
Fixed beta-only bug that caused mouse clicks to not be processed in frameless windows. #30459 (Also in 15)
Fixed context menus not being positioned correctly when near the edge of the screen. #28224 (Also in 11, 12, 13)
Fixed corner radius for vibrancy view in macOS 11. #28655 (Also in 11, 12, 13)
Fixed crash when an exception occurs within the event emitter. #28971 (Also in 13)
Fixed crash when calling getBackgroundColor on a transparent window with no assigned background color. #28120 (Also in 11, 12, 13)
Fixed crash when clicking links with target=_blank from webview. #29949 (Also in 12, 13)
Fixed crashes in debug builds caused by microtasks policy mismatch. #29809 (Also in 12, 13)
Fixed crashes on latest gen Intel and Ryzen processors. #29688 
Fixed crashes on macOS when Geolocation was used. #29914 (Also in 13)
Fixed failing to request file:// resources when web security is disabled. #28489 (Also in 11, 12, 13)
Fixed frameless window having wrong traffic lights position on macOS 11. #30269 (Also in 13, 15)
Fixed hover state not clear bug when BrowserWindow is not resizable. #29801 (Also in 12, 13)
Fixed incorrect value of document.focus when opening multiple windows on macOS. #29204 (Also in 12, 13)
Fixed intensive I/O from asar files causing ERR_FILE_NOT_FOUND after a while. #28137 (Also in 11, 12, 13)
Fixed issue where the update permission prompt would cause 100% CPU spin while the prompt was open. #29806 (Also in 13)
Fixed key window status on mac when opening panels or using custom window switchers. #30066 (Also in 12)
Fixed media key globalShortcuts on macOS. #30569 (Also in 15)
Fixed memory leak when creating notification on macOS. #30008 (Also in 12, 13)
Fixed memory leak when requesting files in ASAR archive from renderer. #29536 (Also in 12, 13)
Fixed missing 'fetch' event in service workers for requests using a registered protocol. #29440 (Also in 12, 13)
Fixed native module compilation with AsyncCleanupHooks on windows. #28067 (Also in 11, 12, 13)
Fixed page title not being updated on child windows without navigation entries under nativeWindowOpen. #29959 (Also in 12, 13)
Fixed permissions issue that was preventing the PDF viewer from displaying. #29210 (Also in 13)
Fixed potential corruption of piped response data when using interceptHttpProtocol/registerHttpProtocol. #29670 (Also in 11, 12, 13)
Fixed pressing Alt with mouse click results in toggling menu bar. #29452 (Also in 12, 13)
Fixed pressing ESC not exiting fullscreen from webview. #30127 (Also in 12, 13)
Fixed pressing Alt+Shift and Alt+Ctrl toggling menu bar on KDE. #29444 (Also in 12, 13)
Fixed rare crash in UpdateDraggableRegions. #30559 (Also in 13, 15)
Fixed rare crash when initializing the internal PDF extension. #28432 (Also in 12, 13)
Fixed redirects between locations in custom protocols. #30156 
Fixed sending intermediate certificates with 'select-client-certificate' event callback. #29570 (Also in 12, 13)
Fixed service worker not working with custom protocol. #28326 (Also in 11, 12, 13)
Fixed shifted character getting changed in menu accelerator. #29481 (Also in 12, 13)
Fixed some console messages still being printed to logs when the LogJsConsoleMessages feature was disabled. #30355 (Also in 15)
Fixed stack overflow crash in v8 on windows 32-bit builds. #30242 (Also in 12, 13, 15)
Fixed systemPreferences.getSystemColor returning colors missing alpha values. #30087 (Also in 13)
Fixed the 'did-fail-load' event not being emitted when the 'certificate-error' handler allowed an error through. #29870 
Fixed the  element dropdown not appearing on Windows or Linux. #29771 
Fixed the color select eyedropper not working within DevTools. #29752 (Also in 13)
Fixed the handler set with setWindowOpenHandler not being invoked when a link was middle-clicked or shift-clicked. #28498 (Also in 12, 13)
Fixed the possibility for incorrect visual artifacts when using vibrancy and making frameless windows fullscreen on macOS. #29084 (Also in 13)
Fixed the spelling of 'attachment' in 'Content-Disposition' header when using the webRequest module. #29673 (Also in 12, 13)
Fixed the window-all-closed event being emitted while the last BrowserWindow was still in the process of being closed. #28867 (Also in 11, 12, 13)
Fixed titlebar showing under simple fullscreen mode. #30707 (Also in 13, 15)
Fixed tray.setTitle not respecting ANSI colors if a font type was specified. #30164 (Also in 13)
Fixed using custom v8 snapshots on Apple Silicon. #29338 (Also in 12, 13)
Fixed using navigator.setAppBadge and navigator.clearAppBadge from a service worker in Electron. #27950 (Also in 12)
Fixed using vibrancy with titleBarStyle together resulting in weird window shadow on macOS. #29114 (Also in 13)
No longer set backgroundColor in default-app when opening custom files / URLs. #28792 (Also in 10, 11, 12, 13)
Restored cross-platform noop implementation of app.setAppUserModelId. #28915 (Also in 13)
Support wasm-eval csp behind WebAssemblyCSP flag. #28535 (Also in 11, 12, 13)
Transparent windows cannot be maximized using the Windows system menu or by double clicking the title bar. #28207 (Also in 12, 13)
URLS passed to shell.openExternal on windows are now correctly URI encoded.  This was already occurring on macOS and Linux. #28334 (Also in 10, 11, 12, 13)
Other Changes
Backported fix for 1216190. #30101 (Also in 12, 13)
Refactored  using contextBridge to make it safer to use when contextIsolation is enabled. #29037 
Updated community discussions link in default Electron menu. #28449 (Also in 12, 13)
Web Serial API is no longer experimental. #30333 (Also in 15)
Documentation
Documentation changes: 
27888 - api/auto-updater
27958 - api/power-monitor
28189 - api/browser-window
28315 - docs
29073
29295 - tutorial/support
29429 - tutorial/introduction
29727 - api/window-open
30058
End of Support for 11.x.y
Electron 11.x.y has reached end-of-support as per the project's support policy. Developers and applications are encouraged to upgrade to a newer version of Electron."
412,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.25.
# Release Notes for v14.0.0-beta.25","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.25.
Release Notes for v14.0.0-beta.25"
413,"Release Notes for v13.2.3
Fixes

Fixed an issue where the TouchBarScrubber crashes when showArrowButtons is enabled if items is an empty array. #30680 (Also in 14, 15)
Fixed titlebar showing under simple fullscreen mode. #30706 (Also in 14, 15)
","Release Notes for v13.2.3
Fixes
Fixed an issue where the TouchBarScrubber crashes when showArrowButtons is enabled if items is an empty array. #30680 (Also in 14, 15)
Fixed titlebar showing under simple fullscreen mode. #30706 (Also in 14, 15)"
414,"Release Notes for v12.0.18
Fixes

Fixed an issue present in webView where the leave-html-full-screen event is not emitted if the user exits fullscreen with esc instead of by clicking into the webView. #30669 (Also in 13, 14, 15)

Other Changes

Security: Backported fix for 1196853. #30581 
Security: Backported fix for 1227933. #30615 
Security: backported fix for 1229298. #30580 
","Release Notes for v12.0.18
Fixes
Fixed an issue present in webView where the leave-html-full-screen event is not emitted if the user exits fullscreen with esc instead of by clicking into the webView. #30669 (Also in 13, 14, 15)
Other Changes
Security: Backported fix for 1196853. #30581 
Security: Backported fix for 1227933. #30615 
Security: backported fix for 1229298. #30580 "
415,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@15.0.0-alpha.10.
# Release Notes for v15.0.0-alpha.10
Features

Added safeStorage string encryption API. #30430 
Added support for Windows Control Overlay on Windows. #30497 

Fixes

Fixed an issue where the TouchBarScrubber crashes when showArrowButtons is enabled if items is an empty array. #30681 (Also in 13, 14)
Fixed titlebar showing under simple fullscreen mode. #30708 (Also in 13, 14)

Other Changes

Updated Chromium to 94.0.4606.12. #30370 
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@15.0.0-alpha.10.
Release Notes for v15.0.0-alpha.10
Features
Added safeStorage string encryption API. #30430 
Added support for Windows Control Overlay on Windows. #30497 
Fixes
Fixed an issue where the TouchBarScrubber crashes when showArrowButtons is enabled if items is an empty array. #30681 (Also in 13, 14)
Fixed titlebar showing under simple fullscreen mode. #30708 (Also in 13, 14)
Other Changes
Updated Chromium to 94.0.4606.12. #30370 "
416,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.24.
# Release Notes for v14.0.0-beta.24
Fixes

Fixed an issue where the TouchBarScrubber crashes when showArrowButtons is enabled if items is an empty array. #30679 (Also in 13, 15)
Fixed media key globalShortcuts on macOS. #30569 (Also in 15)
Fixed titlebar showing under simple fullscreen mode. #30707 (Also in 13, 15)

Other Changes

Updated Chromium to 93.0.4577.51. #30520 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.24.
Release Notes for v14.0.0-beta.24
Fixes
Fixed an issue where the TouchBarScrubber crashes when showArrowButtons is enabled if items is an empty array. #30679 (Also in 13, 15)
Fixed media key globalShortcuts on macOS. #30569 (Also in 15)
Fixed titlebar showing under simple fullscreen mode. #30707 (Also in 13, 15)
Other Changes
Updated Chromium to 93.0.4577.51. #30520 "
417,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@15.0.0-alpha.9.
# Release Notes for v15.0.0-alpha.9
Fixes

Fixed media key globalShortcuts on macOS. #30570 
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@15.0.0-alpha.9.
Release Notes for v15.0.0-alpha.9
Fixes
Fixed media key globalShortcuts on macOS. #30570 "
418,"Release Notes for v13.2.2
Fixes

Fixed an issue present in webView where the leave-html-full-screen event is not emitted if the user exits fullscreen with esc instead of by clicking into the webView. #30560 (Also in 14, 15)
Fixed an issue where background color would not be correctly applied to BrowserViews on Windows when either the x or y coordinate is negative (off-screen). #30540 (Also in 14, 15)
Fixed an issue where toggling documentEdited status on macOS with titlebarStyle: 'hiddenInset' inadvertently moves the traffic light location. #30603 (Also in 14, 15)

Other Changes

Security: Backported fix for 1227933. #30583 (Also in 12)
Security: Backported fix for 1231950. #30584 
Security: Backported fix for 1234764. #30587 
Security: Backported fix for 1234770. #30586 
Security: Backported fix for 1234829. #30585 
","Release Notes for v13.2.2
Fixes
Fixed an issue present in webView where the leave-html-full-screen event is not emitted if the user exits fullscreen with esc instead of by clicking into the webView. #30560 (Also in 14, 15)
Fixed an issue where background color would not be correctly applied to BrowserViews on Windows when either the x or y coordinate is negative (off-screen). #30540 (Also in 14, 15)
Fixed an issue where toggling documentEdited status on macOS with titlebarStyle: 'hiddenInset' inadvertently moves the traffic light location. #30603 (Also in 14, 15)
Other Changes
Security: Backported fix for 1227933. #30583 (Also in 12)
Security: Backported fix for 1231950. #30584 
Security: Backported fix for 1234764. #30587 
Security: Backported fix for 1234770. #30586 
Security: Backported fix for 1234829. #30585 "
419,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@15.0.0-alpha.8.
# Release Notes for v15.0.0-alpha.8
Fixes

Fixed an issue on Mac where an application could not capture its own window using the desktop capture or getMediaSourceId APIs. #30525 (Also in 13, 14)
Fixed an issue present in webView where the leave-html-full-screen event is not emitted if the user exits fullscreen with esc instead of by clicking into the webView. #30562 (Also in 13, 14)
Fixed an issue where background color would not be correctly applied to BrowserViews on Windows when either the x or y coordinate is negative (off-screen). #30542 (Also in 13, 14)
Fixed an issue where toggling documentEdited status on macOS with titlebarStyle: 'hiddenInset' inadvertently moves the traffic light location. #30604 (Also in 13, 14)
Fixed rare crash in UpdateDraggableRegions. #30558 (Also in 13, 14)
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@15.0.0-alpha.8.
Release Notes for v15.0.0-alpha.8
Fixes
Fixed an issue on Mac where an application could not capture its own window using the desktop capture or getMediaSourceId APIs. #30525 (Also in 13, 14)
Fixed an issue present in webView where the leave-html-full-screen event is not emitted if the user exits fullscreen with esc instead of by clicking into the webView. #30562 (Also in 13, 14)
Fixed an issue where background color would not be correctly applied to BrowserViews on Windows when either the x or y coordinate is negative (off-screen). #30542 (Also in 13, 14)
Fixed an issue where toggling documentEdited status on macOS with titlebarStyle: 'hiddenInset' inadvertently moves the traffic light location. #30604 (Also in 13, 14)
Fixed rare crash in UpdateDraggableRegions. #30558 (Also in 13, 14)"
420,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.23.
# Release Notes for v14.0.0-beta.23
Fixes

Fixed an issue present in webView where the leave-html-full-screen event is not emitted if the user exits fullscreen with esc instead of by clicking into the webView. #30561 (Also in 13, 15)
Fixed an issue where toggling documentEdited status on macOS with titlebarStyle: 'hiddenInset' inadvertently moves the traffic light location. #30605 (Also in 13, 15)
Fixed rare crash in UpdateDraggableRegions. #30559 (Also in 13, 15)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.23.
Release Notes for v14.0.0-beta.23
Fixes
Fixed an issue present in webView where the leave-html-full-screen event is not emitted if the user exits fullscreen with esc instead of by clicking into the webView. #30561 (Also in 13, 15)
Fixed an issue where toggling documentEdited status on macOS with titlebarStyle: 'hiddenInset' inadvertently moves the traffic light location. #30605 (Also in 13, 15)
Fixed rare crash in UpdateDraggableRegions. #30559 (Also in 13, 15)"
421,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.22.
# Release Notes for v14.0.0-beta.22
Fixes

Fixed an issue on Mac where an application could not capture its own window using the desktop capture or getMediaSourceId APIs. #30524 (Also in 13, 15)
Fixed an issue where background color would not be correctly applied to BrowserViews on Windows when either the x or y coordinate is negative (off-screen). #30541 

Other Changes

Updated Chromium to 93.0.4577.25. #30349 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.22.
Release Notes for v14.0.0-beta.22
Fixes
Fixed an issue on Mac where an application could not capture its own window using the desktop capture or getMediaSourceId APIs. #30524 (Also in 13, 15)
Fixed an issue where background color would not be correctly applied to BrowserViews on Windows when either the x or y coordinate is negative (off-screen). #30541 
Other Changes
Updated Chromium to 93.0.4577.25. #30349 "
422,"Release Notes for v13.2.1
Fixes

Fixed potential crash when programmatically closing a draggable frameless child window. #30572 
","Release Notes for v13.2.1
Fixes
Fixed potential crash when programmatically closing a draggable frameless child window. #30572 "
423,"Release Notes for v13.2.0
Features

Added support for the des-ede3 cipher in node crypto. #30453 (Also in 11, 12)

Fixes

Fixed an issue on Mac where an application could not capture its own window using the desktop capture or getMediaSourceId APIs. #30523 (Also in 14, 15)
Fixed rare crash in UpdateDraggableRegions. #30557 

Other Changes

Security: Backported fix for 1196853. #30449 
","Release Notes for v13.2.0
Features
Added support for the des-ede3 cipher in node crypto. #30453 (Also in 11, 12)
Fixes
Fixed an issue on Mac where an application could not capture its own window using the desktop capture or getMediaSourceId APIs. #30523 (Also in 14, 15)
Fixed rare crash in UpdateDraggableRegions. #30557 
Other Changes
Security: Backported fix for 1196853. #30449 "
424,"Release Notes for v12.0.17
Fixes

Fixed the color select eyedropper not working within DevTools. #30490 (Also in 13, 14)
Security: backported fix for https://crbug.com/1204814. #30398 
","Release Notes for v12.0.17
Fixes
Fixed the color select eyedropper not working within DevTools. #30490 (Also in 13, 14)
Security: backported fix for link. #30398 "
425,"Release Notes for v11.4.12
Fixes

Security: backported fix for https://crbug.com/1204814. #30399 
","Release Notes for v11.4.12
Fixes
Security: backported fix for link. #30399 "
426,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@15.0.0-alpha.7.
# Release Notes for v15.0.0-alpha.7
Other Changes

Updated Chromium to 94.0.4590.2. #30512 
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@15.0.0-alpha.7.
Release Notes for v15.0.0-alpha.7
Other Changes
Updated Chromium to 94.0.4590.2. #30512 "
427,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@15.0.0-alpha.6.
# Release Notes for v15.0.0-alpha.6
Features

Added fuses to disable NODE_OPTIONS and --inspect debug arguments in packaged apps. #30420 

Fixes

Fixed beta-only bug that caused mouse clicks to not be processed in frameless windows. #30460 (Also in 14)
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@15.0.0-alpha.6.
Release Notes for v15.0.0-alpha.6
Features
Added fuses to disable NODE_OPTIONS and --inspect debug arguments in packaged apps. #30420 
Fixes
Fixed beta-only bug that caused mouse clicks to not be processed in frameless windows. #30460 (Also in 14)"
428,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.21.
# Release Notes for v14.0.0-beta.21
Fixes

Fixed beta-only bug that caused mouse clicks to not be processed in frameless windows. #30459 (Also in 15)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.21.
Release Notes for v14.0.0-beta.21
Fixes
Fixed beta-only bug that caused mouse clicks to not be processed in frameless windows. #30459 (Also in 15)"
429,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@15.0.0-alpha.5.
# Release Notes for v15.0.0-alpha.5
Fixes

Fixed documentEdited status not updating close button for frameless window on macOS. #30392 (Also in 13, 14)
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@15.0.0-alpha.5.
Release Notes for v15.0.0-alpha.5
Fixes
Fixed documentEdited status not updating close button for frameless window on macOS. #30392 (Also in 13, 14)"
430,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.20.
# Release Notes for v14.0.0-beta.20
Fixes

Fixed documentEdited status not updating close button for frameless window on macOS. #30391 (Also in 13, 15)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.20.
Release Notes for v14.0.0-beta.20
Fixes
Fixed documentEdited status not updating close button for frameless window on macOS. #30391 (Also in 13, 15)"
431,"Release Notes for v13.1.9
Fixes

Fixed documentEdited status not updating close button for frameless window on macOS. #30393 (Also in 14, 15)

Other Changes

Security: backported fix for 1229298. #30452 
","Release Notes for v13.1.9
Fixes
Fixed documentEdited status not updating close button for frameless window on macOS. #30393 (Also in 14, 15)
Other Changes
Security: backported fix for 1229298. #30452 "
432,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@15.0.0-alpha.4.
# Release Notes for v15.0.0-alpha.4
Fixes

Fixed an issue on Windows where empty console windows were appearing when --enable-logging was present. #30386 (Also in 14)
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@15.0.0-alpha.4.
Release Notes for v15.0.0-alpha.4
Fixes
Fixed an issue on Windows where empty console windows were appearing when --enable-logging was present. #30386 (Also in 14)"
433,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.19.
# Release Notes for v14.0.0-beta.19
Fixes

Fixed an issue on Windows where empty console windows were appearing when --enable-logging was present. #30385 (Also in 15)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.19.
Release Notes for v14.0.0-beta.19
Fixes
Fixed an issue on Windows where empty console windows were appearing when --enable-logging was present. #30385 (Also in 15)"
434,"Release Notes for v13.1.8
Fixes

Fixed a potential crash that would occur with draggable regions on Windows. #30326 (Also in 14, 15)
Fixed an issue where a specified aspect ratio could become incorrect when maximizing a window on macOS. #30330 (Also in 12, 14, 15)
Fixed frameless window having wrong traffic lights position on macOS 11. #30319 (Also in 14, 15)
Fixed pressing ESC not exiting fullscreen from webview. #30128 (Also in 12, 14)
Fixed stack overflow crash in v8 on windows 32-bit builds. #30241 (Also in 12, 14, 15)
Fixed tray.setTitle not respecting ANSI colors if a font type was specified. #30163 (Also in 14)

Other Changes

Backported fix for https://crbug.com/1227921. #30203 
Security: backported fix for 1205059,1196302. #30265 
Security: backported fix for CVE-2021-30568. #30229 
Security: backported fix for CVE-2021-30569. #30294 
Security: backported fix for CVE-2021-30573. #30251 
Security: backported fix for chromium:1217064. #30246 
Updated Chromium to 91.0.4472.164. #30169 
","Release Notes for v13.1.8
Fixes
Fixed a potential crash that would occur with draggable regions on Windows. #30326 (Also in 14, 15)
Fixed an issue where a specified aspect ratio could become incorrect when maximizing a window on macOS. #30330 (Also in 12, 14, 15)
Fixed frameless window having wrong traffic lights position on macOS 11. #30319 (Also in 14, 15)
Fixed pressing ESC not exiting fullscreen from webview. #30128 (Also in 12, 14)
Fixed stack overflow crash in v8 on windows 32-bit builds. #30241 (Also in 12, 14, 15)
Fixed tray.setTitle not respecting ANSI colors if a font type was specified. #30163 (Also in 14)
Other Changes
Backported fix for link. #30203 
Security: backported fix for 1205059,1196302. #30265 
Security: backported fix for CVE-2021-30568. #30229 
Security: backported fix for CVE-2021-30569. #30294 
Security: backported fix for CVE-2021-30573. #30251 
Security: backported fix for chromium:1217064. #30246 
Updated Chromium to 91.0.4472.164. #30169 "
435,"Release Notes for v12.0.16
Fixes

Fixed an issue where a specified aspect ratio could become incorrect when maximizing a window on macOS. #30329 (Also in 13, 14, 15)
Fixed stack overflow crash in v8 on windows 32-bit builds. #30244 (Also in 13, 14, 15)

Other Changes

Security: backported fix for 1205059,1196302. #30266 
Security: backported fix for CVE-2021-30541. #30185 
Security: backported fix for CVE-2021-30560. #30182 
Security: backported fix for CVE-2021-30562. #30195 
Security: backported fix for CVE-2021-30563. #30198 
Security: backported fix for CVE-2021-30568. #30227 
Security: backported fix for CVE-2021-30569. #30295 
Security: backported fix for CVE-2021-30572. #30261 
Security: backported fix for CVE-2021-30573. #30252 
","Release Notes for v12.0.16
Fixes
Fixed an issue where a specified aspect ratio could become incorrect when maximizing a window on macOS. #30329 (Also in 13, 14, 15)
Fixed stack overflow crash in v8 on windows 32-bit builds. #30244 (Also in 13, 14, 15)
Other Changes
Security: backported fix for 1205059,1196302. #30266 
Security: backported fix for CVE-2021-30541. #30185 
Security: backported fix for CVE-2021-30560. #30182 
Security: backported fix for CVE-2021-30562. #30195 
Security: backported fix for CVE-2021-30563. #30198 
Security: backported fix for CVE-2021-30568. #30227 
Security: backported fix for CVE-2021-30569. #30295 
Security: backported fix for CVE-2021-30572. #30261 
Security: backported fix for CVE-2021-30573. #30252 "
436,"Release Notes for v11.4.11
Other Changes

Security: backported fix for 1205059,1196302. #30267 
Security: backported fix for CVE-2021-30541. #30200 
Security: backported fix for CVE-2021-30560. #30183 
Security: backported fix for CVE-2021-30562. #30196 
Security: backported fix for CVE-2021-30563. #30199 
Security: backported fix for CVE-2021-30568. #30228 
Security: backported fix for CVE-2021-30569. #30296 
Security: backported fix for CVE-2021-30572. #30262 
Security: backported fix for CVE-2021-30573. #30253 
","Release Notes for v11.4.11
Other Changes
Security: backported fix for 1205059,1196302. #30267 
Security: backported fix for CVE-2021-30541. #30200 
Security: backported fix for CVE-2021-30560. #30183 
Security: backported fix for CVE-2021-30562. #30196 
Security: backported fix for CVE-2021-30563. #30199 
Security: backported fix for CVE-2021-30568. #30228 
Security: backported fix for CVE-2021-30569. #30296 
Security: backported fix for CVE-2021-30572. #30262 
Security: backported fix for CVE-2021-30573. #30253 "
437,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@15.0.0-alpha.3.
# Release Notes for v15.0.0-alpha.3
Fixes

Fixed a potential crash that would occur with draggable regions on Windows. #30328 (Also in 13, 14)
Fixed an issue where BrowserView webContents would appear not to load in some circumstances. #30336 (Also in 14)
Fixed an issue where a specified aspect ratio could become incorrect when maximizing a window on macOS. #30332 (Also in 12, 13, 14)
Fixed frameless window having wrong traffic lights position on macOS 11. #30270 (Also in 13, 14)
Fixed some console messages still being printed to logs when the LogJsConsoleMessages feature was disabled. #30356 (Also in 14)

Other Changes

Updated Chromium to 94.0.4584.0. #30268 
Web Serial API is no longer experimental. #30334 (Also in 14)
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@15.0.0-alpha.3.
Release Notes for v15.0.0-alpha.3
Fixes
Fixed a potential crash that would occur with draggable regions on Windows. #30328 (Also in 13, 14)
Fixed an issue where BrowserView webContents would appear not to load in some circumstances. #30336 (Also in 14)
Fixed an issue where a specified aspect ratio could become incorrect when maximizing a window on macOS. #30332 (Also in 12, 13, 14)
Fixed frameless window having wrong traffic lights position on macOS 11. #30270 (Also in 13, 14)
Fixed some console messages still being printed to logs when the LogJsConsoleMessages feature was disabled. #30356 (Also in 14)
Other Changes
Updated Chromium to 94.0.4584.0. #30268 
Web Serial API is no longer experimental. #30334 (Also in 14)"
438,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.18.
# Release Notes for v14.0.0-beta.18
Fixes

Fixed a potential crash that would occur with draggable regions on Windows. #30327 (Also in 13, 15)
Fixed an issue where BrowserView webContents would appear not to load in some circumstances. #30335 (Also in 15)
Fixed an issue where a specified aspect ratio could become incorrect when maximizing a window on macOS. #30331 (Also in 12, 13, 15)
Fixed frameless window having wrong traffic lights position on macOS 11. #30269 (Also in 13, 15)
Fixed redirects between locations in custom protocols. #30156 
Fixed some console messages still being printed to logs when the LogJsConsoleMessages feature was disabled. #30355 (Also in 15)
Fixed tray.setTitle not respecting ANSI colors if a font type was specified. #30164 (Also in 13)

Other Changes

Updated Chromium to 93.0.4577.15. #30029 
Web Serial API is no longer experimental. #30333 (Also in 15)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.18.
Release Notes for v14.0.0-beta.18
Fixes
Fixed a potential crash that would occur with draggable regions on Windows. #30327 (Also in 13, 15)
Fixed an issue where BrowserView webContents would appear not to load in some circumstances. #30335 (Also in 15)
Fixed an issue where a specified aspect ratio could become incorrect when maximizing a window on macOS. #30331 (Also in 12, 13, 15)
Fixed frameless window having wrong traffic lights position on macOS 11. #30269 (Also in 13, 15)
Fixed redirects between locations in custom protocols. #30156 
Fixed some console messages still being printed to logs when the LogJsConsoleMessages feature was disabled. #30355 (Also in 15)
Fixed tray.setTitle not respecting ANSI colors if a font type was specified. #30164 (Also in 13)
Other Changes
Updated Chromium to 93.0.4577.15. #30029 
Web Serial API is no longer experimental. #30333 (Also in 15)"
439,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@15.0.0-alpha.2.
# Release Notes for v15.0.0-alpha.2
Fixes

Fixed a crash when process.exit is called and nativeWindowOpen is enabled. #30238 (Also in 14)
Fixed stack overflow crash in v8 on windows 32-bit builds. #30243 (Also in 12, 13, 14)
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@15.0.0-alpha.2.
Release Notes for v15.0.0-alpha.2
Fixes
Fixed a crash when process.exit is called and nativeWindowOpen is enabled. #30238 (Also in 14)
Fixed stack overflow crash in v8 on windows 32-bit builds. #30243 (Also in 12, 13, 14)"
440,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.17.
# Release Notes for v14.0.0-beta.17
Fixes

Fixed a crash when process.exit is called and nativeWindowOpen is enabled. #30235 
Fixed stack overflow crash in v8 on windows 32-bit builds. #30242 (Also in 12, 13, 15)

Other Changes

Adds an additional crash key to gin::wrappable. #30225 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.17.
Release Notes for v14.0.0-beta.17
Fixes
Fixed a crash when process.exit is called and nativeWindowOpen is enabled. #30235 
Fixed stack overflow crash in v8 on windows 32-bit builds. #30242 (Also in 12, 13, 15)
Other Changes
Adds an additional crash key to gin::wrappable. #30225 "
441,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.16.
# Release Notes for v14.0.0-beta.16","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.16.
Release Notes for v14.0.0-beta.16"
442,"Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@15.0.0-alpha.1.
New Release Cadence
https://www.electronjs.org/blog/8-week-cadence
# Release Notes for v15.0.0-alpha.1
Features

Added BrowserWindow.isFocusable() to determine whether a window is focusable. #28642 
Added WebFrameMain.visibilityState instance property. #28706 
Added disposition, referrer and postBody to the details object passed to the window open handler registered with setWindowOpenHandler. #28518 (Also in 13)
Added location and modifiers to the event properties provided in the 'before-input-event' WebContents event. #29850 
Added process.contextId used by @electron/remote. #28007 (Also in 13)
Added signal option to dialog.showMessageBox. #26102 
Added experimental cookie encryption support behind an Electron Fuse. #27524 (Also in 13, 14)
Added missing resourceType conversions for webRequest listener details: font, ping, cspReport, media, webSocket. #29902 (Also in 14)
Added new MenuItem.userAccelerator property to read user-assigned macOS accelerator overrides. #26682 
Added new app.runningUnderARM64Translation property to detect when running under Rosetta on Apple Silicon, or WOW on Windows for ARM. #29168 
Added new imageAnimationPolicy web preference to control how images are animated. #29095 
Added new session.storagePath API to get the path on disk for session-specific data. #28665 (Also in 13)
Added resize edge info to BrowserWindow's will-resize event. #29199 
Added support for Windows Control Overlay on macOS. #29253 (Also in 14)
Added support for debug URLs such as chrome://gpucrash. #29404 (Also in 13, 14)
Added support for directing Chromium logging to a file with --log-file=.../path/to/file.log. Also, it's now possible to enable logging from JavaScript by appending command-line switches during the first JS tick. #25089 (Also in 14)
Added support for sending Blobs over the context bridge. #29247 
Added support for the des-ede3 cipher in node crypto. #27897 (Also in 11, 12)
Adding ContextBridgeMutability feature that skips context bridge DeepFreeze and SetReadOnlyNonConfigurable when exposing a value. #27348 
Child windows no longer inherit BrowserWindow construction options from their parents. #28550 
Extended continue-activity event API to support webpageURL property from NSUserActivity. #30042 
Removed deprecated additionalFeatures property from new-window and did-create-window WebContents events. #28548 
The submitURL option for crashReporter.start is no longer a required argument when uploadToServer is false. #28105 (Also in 13)
nativeWindowOpen: true is now the default. #28552 

Fixes

Allow Node.js to manage microtasks queue by using explicit microtasks policy before calling uv_run(). #28957 (Also in 11, 12, 13)
Allow loading source maps from custom protocols and asar bundles. #28573 (Also in 12, 13)
Child windows with specified background colors or transpency now work as intended. #28054 (Also in 12, 13)
Colors returned from systemPreferences.getAccentColor(), getSystemColor and getColor are now correctly converted into the devices color space.  Previously the color would have been subtly incorrect. #28121 (Also in 11, 12, 13)
Electron Fuses are now in a consistent order across platforms. #29599 (Also in 13, 14)
Fixd  an issue where fs.promises.readFile would improperly error when passing a FileHandle to the pathargument. #29528 (Also in 12, 13, 14)
Fixed CORS preflight request always being cancelled when connecting via proxy requiring authentication for apps that had registered WebRequest listeners. #29266 (Also in 12, 13, 14)
Fixed &lt;webview&gt; focus / blur events not working with contextIsolation enabled. #29004 (Also in 10, 11, 12, 13)
Fixed desktopCapturer.getSources() promise result sometimes never resolving. #28273 (Also in 10, 11, 12, 13)
Fixed postData parameter missing from new-window event. #28513 (Also in 12, 13)
Fixed requestFullscreen inside webview does not make the element take fullscreen. #29952 (Also in 12, 13, 14)
Fixed select-bluetooth-device firing on Windows. #29591 (Also in 12, 13, 14)
Fixed webFrame spell checker APIs crashing when called in sandboxed renderer. #29053 (Also in 12, 13)
Fixed will-resize and will-move events not scaling the emitted newBounds rectangle to the appropriate Windows display scale factor. #29162 (Also in 11, 12, 13)
Fixed a bug where, when a JumpList task description exceeded 260 characters, the JumpList was empty, despite valid entries. #28485 (Also in 11, 12, 13)
Fixed a crash when calling shell.trashItem() from the renderer process. #28748 (Also in 12, 13)
Fixed a crash when calling the webContents.on('login') callback synchronously. #30068 (Also in 12, 13, 14)
Fixed a hang when denying a window.open using setWindowOpenHandler when nativeWindowOpen: false. #29851 (Also in 12, 13, 14)
Fixed a network process crash that could happen when using setCertificateVerifyProc with many concurrent verification requests. #28358 (Also in 11, 12, 13)
Fixed a potential crash when calling app.quit() on macOS. #29941 (Also in 12, 13, 14)
Fixed a potential crash when setting vibrancy on macOS. #29677 (Also in 13, 14)
Fixed an issue where BrowserWindows would not properly honor transparency: true or a backgroundColor being set in their constructor options. #30136 (Also in 14)
Fixed an issue where Electron would sometimes not honor the user-defined Downloads directory. #29938 (Also in 12, 13, 14)
Fixed an issue where GDK_BACKEND was being propagated to subprocesses on Linux. #28898 
Fixed an issue where beforeunload and unload weren't firing properly in BrowserViews. #28382 
Fixed an issue where illegal access error could be thrown when nodeIntegrationInSubFrames is enabled. #29093 (Also in 12, 13)
Fixed an issue where select-serial-port callback crashes when called with an invalid serial port ID. #28602 (Also in 12, 13)
Fixed an issue where self.module.paths wouldn't work in Workers. #29955 (Also in 12, 13, 14)
Fixed an issue where win.capturePage() never called back after calling hide() for a hidden window on some platforms. #27883 (Also in 11, 12, 13)
Fixed an issue where window.print() did not work properly when printing a pdf from the pdf plugin. #28328 (Also in 12, 13)
Fixed an issue where custom traffic lights could be covered by BrowserViews on macOS. #29595 (Also in 13, 14)
Fixed an issue where drag regions on macOS would be offset incorrectly when no drag regions were set,. #28984 (Also in 11, 12, 13)
Fixed an issue where draggable regions sometimes did not work properly when DevTools is open. #29696 (Also in 12, 13, 14)
Fixed an issue where dropdown menus did not work in DevTools when contextIsolation was enabled. #29841 (Also in 13, 14)
Fixed an issue where errors thrown in functions passed over the contextBridge could be displayed incorrectly. #28346 (Also in 12, 13)
Fixed an issue where extensions without a background page might not have file access. #29123 (Also in 12, 13)
Fixed an issue where multiple calls to window.setFullScreen could cause problems. #25470 (Also in 11, 12, 13)
Fixed an issue where request headers were cleared if the optional ""requestHeaders"" parameter was not included in the webRequest.onBeforeSendHeaders callback response object. #29798 (Also in 12, 13, 14)
Fixed an issue where right-clicking in the devtools console throws an error. #29436 (Also in 14)
Fixed an issue where some Node.js modules would hang on page reload on Windows. #28175 (Also in 11, 12, 13)
Fixed an issue where some dialogs would stop working on macOS if window.hide() was called while they were open. #28671 (Also in 11, 12, 13)
Fixed an issue where the setAlwaysOnTop value would sometimes not be preserved for child windows on macOS. #29813 (Also in 12, 13, 14)
Fixed an issue where the drag regions in BrowserViews on macOS could be off in their y-axis. #28268 (Also in 10, 11, 12, 13)
Fixed an issue where the thumbar disappeared after win.hide() on Windows. #28366 (Also in 10, 11, 12, 13)
Fixed an issue where the traffic lights would get double-drawn when exiting fullscreen and adding a BrowserView on macOS. #30114 (Also in 13, 14)
Fixed an issue where the user-data directory was incorrect in unpackaged apps. #30113 (Also in 14)
Fixed an issue where the void function Menu.setApplicationMenu would return a value on some platforms. #29118 (Also in 12, 13)
Fixed an issue where the window couldn't be closed if a user tried to quit with a message box showing. #28967 (Also in 12, 13)
Fixed an issue where windows in simpleFullscreen mode were not properly resizing when display metrics changed. #28150 (Also in 11, 12, 13)
Fixed an issue with PDF loading on Windows, where metadata was not loading correctly and causing the PDF to load as a blank page. #29827 (Also in 13, 14)
Fixed context menus not being positioned correctly when near the edge of the screen. #28224 (Also in 11, 12, 13)
Fixed corner radius for vibrancy view in macOS 11. #28655 (Also in 11, 12, 13)
Fixed crash when an exception occurs within the event emitter. #28971 (Also in 13)
Fixed crash when calling getBackgroundColor on a transparent window with no assigned background color. #28120 (Also in 11, 12, 13)
Fixed crash when clicking links with target=_blank from webview. #29874 (Also in 12, 13, 14)
Fixed crashes in debug builds caused by microtasks policy mismatch. #29531 (Also in 12, 13, 14)
Fixed crashes on latest gen Intel and Ryzen processors. #29689 (Also in 14)
Fixed crashes on macOS when Geolocation was used. #29913 (Also in 13, 14)
Fixed failing to request file:// resources when web security is disabled. #28489 (Also in 11, 12, 13)
Fixed hover state not clear bug when BrowserWindow is not resizable. #29721 (Also in 12, 13, 14)
Fixed incorrect value of document.focus when opening multiple windows on macOS. #29204 (Also in 12, 13)
Fixed intensive I/O from asar files causing ERR_FILE_NOT_FOUND after a while. #28137 (Also in 11, 12, 13)
Fixed issue where the update permission prompt would cause 100% CPU spin while the prompt was open. #29791 (Also in 13, 14)
Fixed key window status on mac when opening panels or using custom window switchers. #29857 (Also in 12, 14)
Fixed memory leak when creating notification on macOS. #29990 (Also in 12, 13, 14)
Fixed memory leak when requesting files in ASAR archive from renderer. #29293 (Also in 12, 13, 14)
Fixed missing 'fetch' event in service workers for requests using a registered protocol. #29425 (Also in 12, 13, 14)
Fixed page title not being updated on child windows without navigation entries under nativeWindowOpen. #29946 (Also in 12, 13, 14)
Fixed permissions issue that was preventing the PDF viewer from displaying. #29210 (Also in 13)
Fixed potential corruption of piped response data when using interceptHttpProtocol/registerHttpProtocol. #29567 (Also in 11, 12, 13, 14)
Fixed pressing Alt with mouse click results in toggling menu bar. #29318 (Also in 12, 13, 14)
Fixed pressing ESC not exiting fullscreen from webview. #30063 (Also in 12, 14)
Fixed pressing Alt+Shift and Alt+Ctrl toggling menu bar on KDE. #29328 (Also in 12, 13, 14)
Fixed rare crash when initializing the internal PDF extension. #28432 (Also in 12, 13)
Fixed redirects between locations in custom protocols. #29796 
Fixed sending intermediate certificates with 'select-client-certificate' event callback. #29552 (Also in 12, 13, 14)
Fixed service worker not working with custom protocol. #28326 (Also in 11, 12, 13)
Fixed shifted character getting changed in menu accelerator. #29202 (Also in 12, 13, 14)
Fixed systemPreferences.getSystemColor returning colors missing alpha values. #30055 (Also in 13, 14)
Fixed the 'did-fail-load' event not being emitted when the 'certificate-error' handler allowed an error through. #29826 (Also in 14)
Fixed the &lt;select&gt; element dropdown not appearing on Windows or Linux. #29742 (Also in 14)
Fixed the color select eyedropper not working within DevTools. #29729 (Also in 13, 14)
Fixed the handler set with setWindowOpenHandler not being invoked when a link was middle-clicked or shift-clicked. #28498 (Also in 12, 13)
Fixed the possibility for incorrect visual artifacts when using vibrancy and making frameless windows fullscreen on macOS. #29084 (Also in 13)
Fixed the spelling of 'attachment' in 'Content-Disposition' header when using the webRequest module. #29621 (Also in 12, 13, 14)
Fixed the window-all-closed event being emitted while the last BrowserWindow was still in the process of being closed. #28867 (Also in 11, 12, 13)
Fixed tray.setTitle not respecting ANSI colors if a font type was specified. #30146 
Fixed typescript export definitions such that not-exported values are not declared in the exports interface. #28712 
Fixed using navigator.setAppBadge and navigator.clearAppBadge from a service worker in Electron. #27950 (Also in 12)
Fixed using vibrancy with titleBarStyle together resulting in weird window shadow on macOS. #29114 (Also in 13)
Installing the electron package on an M1 macbook while using an x64 version of node will now automatically download the arm64 version of Electron instead of the x64 version. #29953 
No longer set backgroundColor in default-app when opening custom files / URLs. #28792 (Also in 10, 11, 12, 13)
Restored cross-platform noop implementation of app.setAppUserModelId. #28915 (Also in 13)
Support wasm-eval csp behind WebAssemblyCSP flag. #28535 (Also in 11, 12, 13)
Transparent windows cannot be maximized using the Windows system menu or by double clicking the title bar. #28207 (Also in 12, 13)
URLS passed to shell.openExternal on windows are now correctly URI encoded.  This was already occurring on macOS and Linux. #28334 (Also in 10, 11, 12, 13)

Other Changes

: Updated Node.js to v16.2.0. #29244 
Adds an additional crash key to gin::wrappable. #30161 
Backported fix for 1216190. #30084 (Also in 12, 13, 14)
Deprecated worldSafeExecuteJavaScript option was removed from webPreferences. #28456 
Fixed app.getPath('logs') returning the wrong path on Linux and Windows. #29649 (Also in 14)
Fixed a feature flag issue where spellchecker methods returned empty suggestion lists on Windows. #29690 (Also in 13, 14)
Fixed native module compilation with AsyncCleanupHooks on windows. #28067 (Also in 11, 12, 13)
Fixed using custom v8 snapshots on Apple Silicon. #29338 (Also in 12, 13)
Improved performance characteristics of functions being sent back and forth over the contextBridge. #28285 
Improved performance of napi_threadsafe_function. #29021 (Also in 12, 13)
Refactored &lt;webview&gt; using contextBridge to make it safer to use when contextIsolation is enabled. #29037 
Removed the deprecated app.allowRendererProcessReuse and BrowserWindow affinity options. #26874 
Updated Chromium to 93.0.4566.0. #29980 
Updated Node.js to v16.5.0. #30031 
Updated community discussions link in default Electron menu. #28449 (Also in 12, 13)

Documentation

Documentation changes: #27888, #27958, #28189, #28315, #29073, #29295, #29342, #29380, #29384, #29385, #29426, #29551, #30121
","Note: This is an alpha release.  Please file new issues for any bugs you find in it.
This release is published to npm under the alpha tag and can be installed via npm install electron@alpha, or npm install electron@15.0.0-alpha.1.
New Release Cadence
link
Release Notes for v15.0.0-alpha.1
Features
Added BrowserWindow.isFocusable() to determine whether a window is focusable. #28642 
Added WebFrameMain.visibilityState instance property. #28706 
Added disposition, referrer and postBody to the details object passed to the window open handler registered with setWindowOpenHandler. #28518 (Also in 13)
Added location and modifiers to the event properties provided in the 'before-input-event' WebContents event. #29850 
Added process.contextId used by @electron/remote. #28007 (Also in 13)
Added signal option to dialog.showMessageBox. #26102 
Added experimental cookie encryption support behind an Electron Fuse. #27524 (Also in 13, 14)
Added missing resourceType conversions for webRequest listener details: font, ping, cspReport, media, webSocket. #29902 (Also in 14)
Added new MenuItem.userAccelerator property to read user-assigned macOS accelerator overrides. #26682 
Added new app.runningUnderARM64Translation property to detect when running under Rosetta on Apple Silicon, or WOW on Windows for ARM. #29168 
Added new imageAnimationPolicy web preference to control how images are animated. #29095 
Added new session.storagePath API to get the path on disk for session-specific data. #28665 (Also in 13)
Added resize edge info to BrowserWindow's will-resize event. #29199 
Added support for Windows Control Overlay on macOS. #29253 (Also in 14)
Added support for debug URLs such as chrome://gpucrash. #29404 (Also in 13, 14)
Added support for directing Chromium logging to a file with --log-file=.../path/to/file.log. Also, it's now possible to enable logging from JavaScript by appending command-line switches during the first JS tick. #25089 (Also in 14)
Added support for sending Blobs over the context bridge. #29247 
Added support for the des-ede3 cipher in node crypto. #27897 (Also in 11, 12)
Adding ContextBridgeMutability feature that skips context bridge DeepFreeze and SetReadOnlyNonConfigurable when exposing a value. #27348 
Child windows no longer inherit BrowserWindow construction options from their parents. #28550 
Extended continue-activity event API to support webpageURL property from NSUserActivity. #30042 
Removed deprecated additionalFeatures property from new-window and did-create-window WebContents events. #28548 
The submitURL option for crashReporter.start is no longer a required argument when uploadToServer is false. #28105 (Also in 13)
nativeWindowOpen: true is now the default. #28552 
Fixes
Allow Node.js to manage microtasks queue by using explicit microtasks policy before calling uv_run(). #28957 (Also in 11, 12, 13)
Allow loading source maps from custom protocols and asar bundles. #28573 (Also in 12, 13)
Child windows with specified background colors or transpency now work as intended. #28054 (Also in 12, 13)
Colors returned from systemPreferences.getAccentColor(), getSystemColor and getColor are now correctly converted into the devices color space.  Previously the color would have been subtly incorrect. #28121 (Also in 11, 12, 13)
Electron Fuses are now in a consistent order across platforms. #29599 (Also in 13, 14)
Fixd  an issue where fs.promises.readFile would improperly error when passing a FileHandle to the pathargument. #29528 (Also in 12, 13, 14)
Fixed CORS preflight request always being cancelled when connecting via proxy requiring authentication for apps that had registered WebRequest listeners. #29266 (Also in 12, 13, 14)
Fixed <webview> focus / blur events not working with contextIsolation enabled. #29004 (Also in 10, 11, 12, 13)
Fixed desktopCapturer.getSources() promise result sometimes never resolving. #28273 (Also in 10, 11, 12, 13)
Fixed postData parameter missing from new-window event. #28513 (Also in 12, 13)
Fixed requestFullscreen inside webview does not make the element take fullscreen. #29952 (Also in 12, 13, 14)
Fixed select-bluetooth-device firing on Windows. #29591 (Also in 12, 13, 14)
Fixed webFrame spell checker APIs crashing when called in sandboxed renderer. #29053 (Also in 12, 13)
Fixed will-resize and will-move events not scaling the emitted newBounds rectangle to the appropriate Windows display scale factor. #29162 (Also in 11, 12, 13)
Fixed a bug where, when a JumpList task description exceeded 260 characters, the JumpList was empty, despite valid entries. #28485 (Also in 11, 12, 13)
Fixed a crash when calling shell.trashItem() from the renderer process. #28748 (Also in 12, 13)
Fixed a crash when calling the webContents.on('login') callback synchronously. #30068 (Also in 12, 13, 14)
Fixed a hang when denying a window.open using setWindowOpenHandler when nativeWindowOpen: false. #29851 (Also in 12, 13, 14)
Fixed a network process crash that could happen when using setCertificateVerifyProc with many concurrent verification requests. #28358 (Also in 11, 12, 13)
Fixed a potential crash when calling app.quit() on macOS. #29941 (Also in 12, 13, 14)
Fixed a potential crash when setting vibrancy on macOS. #29677 (Also in 13, 14)
Fixed an issue where BrowserWindows would not properly honor transparency: true or a backgroundColor being set in their constructor options. #30136 (Also in 14)
Fixed an issue where Electron would sometimes not honor the user-defined Downloads directory. #29938 (Also in 12, 13, 14)
Fixed an issue where GDK_BACKEND was being propagated to subprocesses on Linux. #28898 
Fixed an issue where beforeunload and unload weren't firing properly in BrowserViews. #28382 
Fixed an issue where illegal access error could be thrown when nodeIntegrationInSubFrames is enabled. #29093 (Also in 12, 13)
Fixed an issue where select-serial-port callback crashes when called with an invalid serial port ID. #28602 (Also in 12, 13)
Fixed an issue where self.module.paths wouldn't work in Workers. #29955 (Also in 12, 13, 14)
Fixed an issue where win.capturePage() never called back after calling hide() for a hidden window on some platforms. #27883 (Also in 11, 12, 13)
Fixed an issue where window.print() did not work properly when printing a pdf from the pdf plugin. #28328 (Also in 12, 13)
Fixed an issue where custom traffic lights could be covered by BrowserViews on macOS. #29595 (Also in 13, 14)
Fixed an issue where drag regions on macOS would be offset incorrectly when no drag regions were set,. #28984 (Also in 11, 12, 13)
Fixed an issue where draggable regions sometimes did not work properly when DevTools is open. #29696 (Also in 12, 13, 14)
Fixed an issue where dropdown menus did not work in DevTools when contextIsolation was enabled. #29841 (Also in 13, 14)
Fixed an issue where errors thrown in functions passed over the contextBridge could be displayed incorrectly. #28346 (Also in 12, 13)
Fixed an issue where extensions without a background page might not have file access. #29123 (Also in 12, 13)
Fixed an issue where multiple calls to window.setFullScreen could cause problems. #25470 (Also in 11, 12, 13)
Fixed an issue where request headers were cleared if the optional ""requestHeaders"" parameter was not included in the webRequest.onBeforeSendHeaders callback response object. #29798 (Also in 12, 13, 14)
Fixed an issue where right-clicking in the devtools console throws an error. #29436 (Also in 14)
Fixed an issue where some Node.js modules would hang on page reload on Windows. #28175 (Also in 11, 12, 13)
Fixed an issue where some dialogs would stop working on macOS if window.hide() was called while they were open. #28671 (Also in 11, 12, 13)
Fixed an issue where the setAlwaysOnTop value would sometimes not be preserved for child windows on macOS. #29813 (Also in 12, 13, 14)
Fixed an issue where the drag regions in BrowserViews on macOS could be off in their y-axis. #28268 (Also in 10, 11, 12, 13)
Fixed an issue where the thumbar disappeared after win.hide() on Windows. #28366 (Also in 10, 11, 12, 13)
Fixed an issue where the traffic lights would get double-drawn when exiting fullscreen and adding a BrowserView on macOS. #30114 (Also in 13, 14)
Fixed an issue where the user-data directory was incorrect in unpackaged apps. #30113 (Also in 14)
Fixed an issue where the void function Menu.setApplicationMenu would return a value on some platforms. #29118 (Also in 12, 13)
Fixed an issue where the window couldn't be closed if a user tried to quit with a message box showing. #28967 (Also in 12, 13)
Fixed an issue where windows in simpleFullscreen mode were not properly resizing when display metrics changed. #28150 (Also in 11, 12, 13)
Fixed an issue with PDF loading on Windows, where metadata was not loading correctly and causing the PDF to load as a blank page. #29827 (Also in 13, 14)
Fixed context menus not being positioned correctly when near the edge of the screen. #28224 (Also in 11, 12, 13)
Fixed corner radius for vibrancy view in macOS 11. #28655 (Also in 11, 12, 13)
Fixed crash when an exception occurs within the event emitter. #28971 (Also in 13)
Fixed crash when calling getBackgroundColor on a transparent window with no assigned background color. #28120 (Also in 11, 12, 13)
Fixed crash when clicking links with target=_blank from webview. #29874 (Also in 12, 13, 14)
Fixed crashes in debug builds caused by microtasks policy mismatch. #29531 (Also in 12, 13, 14)
Fixed crashes on latest gen Intel and Ryzen processors. #29689 (Also in 14)
Fixed crashes on macOS when Geolocation was used. #29913 (Also in 13, 14)
Fixed failing to request file:// resources when web security is disabled. #28489 (Also in 11, 12, 13)
Fixed hover state not clear bug when BrowserWindow is not resizable. #29721 (Also in 12, 13, 14)
Fixed incorrect value of document.focus when opening multiple windows on macOS. #29204 (Also in 12, 13)
Fixed intensive I/O from asar files causing ERR_FILE_NOT_FOUND after a while. #28137 (Also in 11, 12, 13)
Fixed issue where the update permission prompt would cause 100% CPU spin while the prompt was open. #29791 (Also in 13, 14)
Fixed key window status on mac when opening panels or using custom window switchers. #29857 (Also in 12, 14)
Fixed memory leak when creating notification on macOS. #29990 (Also in 12, 13, 14)
Fixed memory leak when requesting files in ASAR archive from renderer. #29293 (Also in 12, 13, 14)
Fixed missing 'fetch' event in service workers for requests using a registered protocol. #29425 (Also in 12, 13, 14)
Fixed page title not being updated on child windows without navigation entries under nativeWindowOpen. #29946 (Also in 12, 13, 14)
Fixed permissions issue that was preventing the PDF viewer from displaying. #29210 (Also in 13)
Fixed potential corruption of piped response data when using interceptHttpProtocol/registerHttpProtocol. #29567 (Also in 11, 12, 13, 14)
Fixed pressing Alt with mouse click results in toggling menu bar. #29318 (Also in 12, 13, 14)
Fixed pressing ESC not exiting fullscreen from webview. #30063 (Also in 12, 14)
Fixed pressing Alt+Shift and Alt+Ctrl toggling menu bar on KDE. #29328 (Also in 12, 13, 14)
Fixed rare crash when initializing the internal PDF extension. #28432 (Also in 12, 13)
Fixed redirects between locations in custom protocols. #29796 
Fixed sending intermediate certificates with 'select-client-certificate' event callback. #29552 (Also in 12, 13, 14)
Fixed service worker not working with custom protocol. #28326 (Also in 11, 12, 13)
Fixed shifted character getting changed in menu accelerator. #29202 (Also in 12, 13, 14)
Fixed systemPreferences.getSystemColor returning colors missing alpha values. #30055 (Also in 13, 14)
Fixed the 'did-fail-load' event not being emitted when the 'certificate-error' handler allowed an error through. #29826 (Also in 14)
Fixed the <select> element dropdown not appearing on Windows or Linux. #29742 (Also in 14)
Fixed the color select eyedropper not working within DevTools. #29729 (Also in 13, 14)
Fixed the handler set with setWindowOpenHandler not being invoked when a link was middle-clicked or shift-clicked. #28498 (Also in 12, 13)
Fixed the possibility for incorrect visual artifacts when using vibrancy and making frameless windows fullscreen on macOS. #29084 (Also in 13)
Fixed the spelling of 'attachment' in 'Content-Disposition' header when using the webRequest module. #29621 (Also in 12, 13, 14)
Fixed the window-all-closed event being emitted while the last BrowserWindow was still in the process of being closed. #28867 (Also in 11, 12, 13)
Fixed tray.setTitle not respecting ANSI colors if a font type was specified. #30146 
Fixed typescript export definitions such that not-exported values are not declared in the exports interface. #28712 
Fixed using navigator.setAppBadge and navigator.clearAppBadge from a service worker in Electron. #27950 (Also in 12)
Fixed using vibrancy with titleBarStyle together resulting in weird window shadow on macOS. #29114 (Also in 13)
Installing the electron package on an M1 macbook while using an x64 version of node will now automatically download the arm64 version of Electron instead of the x64 version. #29953 
No longer set backgroundColor in default-app when opening custom files / URLs. #28792 (Also in 10, 11, 12, 13)
Restored cross-platform noop implementation of app.setAppUserModelId. #28915 (Also in 13)
Support wasm-eval csp behind WebAssemblyCSP flag. #28535 (Also in 11, 12, 13)
Transparent windows cannot be maximized using the Windows system menu or by double clicking the title bar. #28207 (Also in 12, 13)
URLS passed to shell.openExternal on windows are now correctly URI encoded.  This was already occurring on macOS and Linux. #28334 (Also in 10, 11, 12, 13)
Other Changes
: Updated Node.js to v16.2.0. #29244 
Adds an additional crash key to gin::wrappable. #30161 
Backported fix for 1216190. #30084 (Also in 12, 13, 14)
Deprecated worldSafeExecuteJavaScript option was removed from webPreferences. #28456 
Fixed app.getPath('logs') returning the wrong path on Linux and Windows. #29649 (Also in 14)
Fixed a feature flag issue where spellchecker methods returned empty suggestion lists on Windows. #29690 (Also in 13, 14)
Fixed native module compilation with AsyncCleanupHooks on windows. #28067 (Also in 11, 12, 13)
Fixed using custom v8 snapshots on Apple Silicon. #29338 (Also in 12, 13)
Improved performance characteristics of functions being sent back and forth over the contextBridge. #28285 
Improved performance of napi_threadsafe_function. #29021 (Also in 12, 13)
Refactored <webview> using contextBridge to make it safer to use when contextIsolation is enabled. #29037 
Removed the deprecated app.allowRendererProcessReuse and BrowserWindow affinity options. #26874 
Updated Chromium to 93.0.4566.0. #29980 
Updated Node.js to v16.5.0. #30031 
Updated community discussions link in default Electron menu. #28449 (Also in 12, 13)
Documentation
Documentation changes: #27888, #27958, #28189, #28315, #29073, #29295, #29342, #29380, #29384, #29385, #29426, #29551, #30121"
443,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.15.
# Release Notes for v14.0.0-beta.15
Fixes

Fixed an issue where BrowserWindows would not properly honor transparency: true or a backgroundColor being set in their constructor options. #30159 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.15.
Release Notes for v14.0.0-beta.15
Fixes
Fixed an issue where BrowserWindows would not properly honor transparency: true or a backgroundColor being set in their constructor options. #30159 "
444,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.14.
# Release Notes for v14.0.0-beta.14
Fixes

Fixed a crash when calling the webContents.on('login') callback synchronously. #30090 (Also in 12, 13)
Fixed an issue where the traffic lights would get double-drawn when exiting fullscreen and adding a BrowserView on macOS. #30150 (Also in 13)
Fixed an issue where the user-data directory was incorrect in unpackaged apps. #30142 
Fixed pressing ESC not exiting fullscreen from webview. #30127 (Also in 12)
Fixed systemPreferences.getSystemColor returning colors missing alpha values. #30087 (Also in 13)

Other Changes

Backported fix for 1216190. #30101 (Also in 12, 13)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.14.
Release Notes for v14.0.0-beta.14
Fixes
Fixed a crash when calling the webContents.on('login') callback synchronously. #30090 (Also in 12, 13)
Fixed an issue where the traffic lights would get double-drawn when exiting fullscreen and adding a BrowserView on macOS. #30150 (Also in 13)
Fixed an issue where the user-data directory was incorrect in unpackaged apps. #30142 
Fixed pressing ESC not exiting fullscreen from webview. #30127 (Also in 12)
Fixed systemPreferences.getSystemColor returning colors missing alpha values. #30087 (Also in 13)
Other Changes
Backported fix for 1216190. #30101 (Also in 12, 13)"
445,"Release Notes for v13.1.7
Fixes

Fixed requestFullscreen inside webview does not make the element take fullscreen. #29987 (Also in 12, 14)
Fixed a crash when calling the webContents.on('login') callback synchronously. #30091 (Also in 12, 14)
Fixed a possible renderer crash when using fsPromises.readFile. #29928 
Fixed an issue where Electron would sometimes not honor the user-defined Downloads directory. #29968 (Also in 12, 14)
Fixed an issue where the traffic lights would get double-drawn when exiting fullscreen and adding a BrowserView on macOS. #30149 (Also in 14)
Fixed incorrect value of document.focus when opening multiple windows on macOS
fix key window status on mac when opening panels or using custom window switchers. #29234 (Also in 12, 14)
Fixed systemPreferences.getSystemColor returning colors missing alpha values. #30088 (Also in 14)

Other Changes

Backported fix for 1216190. #30100 (Also in 12, 14)

Documentation

Documentation changes: #30057
","Release Notes for v13.1.7
Fixes
Fixed requestFullscreen inside webview does not make the element take fullscreen. #29987 (Also in 12, 14)
Fixed a crash when calling the webContents.on('login') callback synchronously. #30091 (Also in 12, 14)
Fixed a possible renderer crash when using fsPromises.readFile. #29928 
Fixed an issue where Electron would sometimes not honor the user-defined Downloads directory. #29968 (Also in 12, 14)
Fixed an issue where the traffic lights would get double-drawn when exiting fullscreen and adding a BrowserView on macOS. #30149 (Also in 14)
Fixed incorrect value of document.focus when opening multiple windows on macOS
fix key window status on mac when opening panels or using custom window switchers. #29234 (Also in 12, 14)
Fixed systemPreferences.getSystemColor returning colors missing alpha values. #30088 (Also in 14)
Other Changes
Backported fix for 1216190. #30100 (Also in 12, 14)
Documentation
Documentation changes: #30057"
446,"Release Notes for v12.0.15
Fixes

Fixed a crash when calling the webContents.on('login') callback synchronously. #30092 (Also in 13, 14)
Fixed a potential crash when calling app.quit() on macOS. #30138 (Also in 13, 14)
Fixed key window status on mac when opening panels or using custom window switchers. #30067 (Also in 14)
Fixed pressing ESC not exiting fullscreen from webview. #30137 (Also in 14)

Other Changes

Backported fix for 1216190. #30099 (Also in 13, 14)

Documentation

Documentation changes: #30056
","Release Notes for v12.0.15
Fixes
Fixed a crash when calling the webContents.on('login') callback synchronously. #30092 (Also in 13, 14)
Fixed a potential crash when calling app.quit() on macOS. #30138 (Also in 13, 14)
Fixed key window status on mac when opening panels or using custom window switchers. #30067 (Also in 14)
Fixed pressing ESC not exiting fullscreen from webview. #30137 (Also in 14)
Other Changes
Backported fix for 1216190. #30099 (Also in 13, 14)
Documentation
Documentation changes: #30056"
447,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.13.
# Release Notes for v14.0.0-beta.13
Features

Added missing resourceType conversions for webRequest listener details: font, ping, cspReport, media, webSocket. #30050 
Added support for Windows Control Overlay on macOS. #29986 

Fixes

Fixed requestFullscreen inside webview does not make the element take fullscreen. #29989 (Also in 12, 13)
Fixed an issue where Electron would sometimes not honor the user-defined Downloads directory. #29967 (Also in 12, 13)
Fixed key window status on mac when opening panels or using custom window switchers. #30066 (Also in 12)
Fixed memory leak when creating notification on macOS. #30008 (Also in 12, 13)

Other Changes

Updated Chromium to 93.0.4566.0. #29979 

Documentation

Documentation changes: #30058
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.13.
Release Notes for v14.0.0-beta.13
Features
Added missing resourceType conversions for webRequest listener details: font, ping, cspReport, media, webSocket. #30050 
Added support for Windows Control Overlay on macOS. #29986 
Fixes
Fixed requestFullscreen inside webview does not make the element take fullscreen. #29989 (Also in 12, 13)
Fixed an issue where Electron would sometimes not honor the user-defined Downloads directory. #29967 (Also in 12, 13)
Fixed key window status on mac when opening panels or using custom window switchers. #30066 (Also in 12)
Fixed memory leak when creating notification on macOS. #30008 (Also in 12, 13)
Other Changes
Updated Chromium to 93.0.4566.0. #29979 
Documentation
Documentation changes: #30058"
448,"Release Notes for v12.0.14
Fixes

Fixed requestFullscreen inside webview does not make the element take fullscreen. #29988 (Also in 13, 14)
Fixed a possible renderer crash when using fsPromises.readFile. #29929 
Fixed an issue where Electron would sometimes not honor the user-defined Downloads directory. #29966 (Also in 13, 14)
Fixed an issue where self.module.paths wouldn't work in Workers. #30012 (Also in 13, 14)
Fixed an issue where the setAlwaysOnTop value would sometimes not be preserved for child windows on macOS. #29957 (Also in 13, 14)
Fixed crash when clicking links with target=_blank from webview. #29950 (Also in 13, 14)
Fixed memory leak when creating notification on macOS. #30007 (Also in 13, 14)
Fixed page title not being updated on child windows without navigation entries under nativeWindowOpen. #29960 (Also in 13, 14)

Other Changes

Security: backported fix for CVE-2021-30522. #29878 
Security: backported fix for CVE-2021-30523. #29876 
","Release Notes for v12.0.14
Fixes
Fixed requestFullscreen inside webview does not make the element take fullscreen. #29988 (Also in 13, 14)
Fixed a possible renderer crash when using fsPromises.readFile. #29929 
Fixed an issue where Electron would sometimes not honor the user-defined Downloads directory. #29966 (Also in 13, 14)
Fixed an issue where self.module.paths wouldn't work in Workers. #30012 (Also in 13, 14)
Fixed an issue where the setAlwaysOnTop value would sometimes not be preserved for child windows on macOS. #29957 (Also in 13, 14)
Fixed crash when clicking links with target=_blank from webview. #29950 (Also in 13, 14)
Fixed memory leak when creating notification on macOS. #30007 (Also in 13, 14)
Fixed page title not being updated on child windows without navigation entries under nativeWindowOpen. #29960 (Also in 13, 14)
Other Changes
Security: backported fix for CVE-2021-30522. #29878 
Security: backported fix for CVE-2021-30523. #29876 "
449,"Release Notes for v11.4.10
Other Changes

Backported fix for chromium:1211215. #29785 
Security: backported fix for CVE-2021-30522. #29879 
Security: backported fix for CVE-2021-30523. #29877 
Security: backported fix for CVE-2021-30547. #29790 
Security: backported fix for CVE-2021-30553. #29819 
Security: backported fix for CVE-2021-30554. #29823 
Security: backported fix for chromium:1194689. #29817 
Security: backported fix for chromium:1209558. #29815 
","Release Notes for v11.4.10
Other Changes
Backported fix for chromium:1211215. #29785 
Security: backported fix for CVE-2021-30522. #29879 
Security: backported fix for CVE-2021-30523. #29877 
Security: backported fix for CVE-2021-30547. #29790 
Security: backported fix for CVE-2021-30553. #29819 
Security: backported fix for CVE-2021-30554. #29823 
Security: backported fix for chromium:1194689. #29817 
Security: backported fix for chromium:1209558. #29815 "
450,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.12.
# Release Notes for v14.0.0-beta.12
Features

Added support for directing Chromium logging to a file with --log-file=.../path/to/file.log. Also, it's now possible to enable logging from JavaScript by appending command-line switches during the first JS tick. #29963 

Fixes

Fixed a potential crash when calling app.quit() on macOS. #29962 (Also in 13)
Fixed an issue where self.module.paths wouldn't work in Workers. #30014 (Also in 12, 13)
Fixed page title not being updated on child windows without navigation entries under nativeWindowOpen. #29959 (Also in 12, 13)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.12.
Release Notes for v14.0.0-beta.12
Features
Added support for directing Chromium logging to a file with --log-file=.../path/to/file.log. Also, it's now possible to enable logging from JavaScript by appending command-line switches during the first JS tick. #29963 
Fixes
Fixed a potential crash when calling app.quit() on macOS. #29962 (Also in 13)
Fixed an issue where self.module.paths wouldn't work in Workers. #30014 (Also in 12, 13)
Fixed page title not being updated on child windows without navigation entries under nativeWindowOpen. #29959 (Also in 12, 13)"
451,"Release Notes for v13.1.6
Fixes

Fixed a potential crash when calling app.quit() on macOS. #29961 (Also in 14)
Fixed an issue where self.module.paths wouldn't work in Workers. #30013 (Also in 12, 14)
Fixed crash when clicking links with target=_blank from webview. #29951 (Also in 12, 14)
Fixed memory leak when creating notification on macOS. #30009 (Also in 14)
Fixed page title not being updated on child windows without navigation entries under nativeWindowOpen. #29958 (Also in 12, 14)

Other Changes

Backported fix for 1090000. #29997 
","Release Notes for v13.1.6
Fixes
Fixed a potential crash when calling app.quit() on macOS. #29961 (Also in 14)
Fixed an issue where self.module.paths wouldn't work in Workers. #30013 (Also in 12, 14)
Fixed crash when clicking links with target=_blank from webview. #29951 (Also in 12, 14)
Fixed memory leak when creating notification on macOS. #30009 (Also in 14)
Fixed page title not being updated on child windows without navigation entries under nativeWindowOpen. #29958 (Also in 12, 14)
Other Changes
Backported fix for 1090000. #29997 "
452,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.11.
# Release Notes for v14.0.0-beta.11
Fixes

Fixed crash when clicking links with target=_blank from webview. #29949 (Also in 12)
Fixed crashes on macOS when Geolocation was used. #29914 (Also in 13)

Other Changes

Updated Chromium to 93.0.4557.4. #29954 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.11.
Release Notes for v14.0.0-beta.11
Fixes
Fixed crash when clicking links with target=_blank from webview. #29949 (Also in 12)
Fixed crashes on macOS when Geolocation was used. #29914 (Also in 13)
Other Changes
Updated Chromium to 93.0.4557.4. #29954 "
453,"Release Notes for v13.1.5
Fixes

Fixed a hang when denying a window.open using setWindowOpenHandler when nativeWindowOpen: false. #29882 (Also in 12, 14)
Fixed an issue where dropdown menus did not work in DevTools when contextIsolation was enabled. #29885 (Also in 14)
Fixed an issue where request headers were cleared if the optional ""requestHeaders"" parameter was not included in the webRequest.onBeforeSendHeaders callback response object. #29836 (Also in 12, 14)
Fixed an issue where the setAlwaysOnTop value would sometimes not be preserved for child windows on macOS. #29956 (Also in 12, 14)
Fixed crashes on macOS when Geolocation was used. #29912 (Also in 14)

Other Changes

Updated Chromium to 91.0.4472.124. #29774 
","Release Notes for v13.1.5
Fixes
Fixed a hang when denying a window.open using setWindowOpenHandler when nativeWindowOpen: false. #29882 (Also in 12, 14)
Fixed an issue where dropdown menus did not work in DevTools when contextIsolation was enabled. #29885 (Also in 14)
Fixed an issue where request headers were cleared if the optional ""requestHeaders"" parameter was not included in the webRequest.onBeforeSendHeaders callback response object. #29836 (Also in 12, 14)
Fixed an issue where the setAlwaysOnTop value would sometimes not be preserved for child windows on macOS. #29956 (Also in 12, 14)
Fixed crashes on macOS when Geolocation was used. #29912 (Also in 14)
Other Changes
Updated Chromium to 91.0.4472.124. #29774 "
454,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.10.
# Release Notes for v14.0.0-beta.10
Features

Undo the nativeWindowOpen default change; delayed until 15.x. #29869 

Fixes

Fixed a hang when denying a window.open using setWindowOpenHandler when nativeWindowOpen: false. #29883 (Also in 12, 13)
Fixed an issue where dropdown menus did not work in DevTools when contextIsolation was enabled. #29886 (Also in 13)
Fixed the 'did-fail-load' event not being emitted when the 'certificate-error' handler allowed an error through. #29870 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.10.
Release Notes for v14.0.0-beta.10
Features
Undo the nativeWindowOpen default change; delayed until 15.x. #29869 
Fixes
Fixed a hang when denying a window.open using setWindowOpenHandler when nativeWindowOpen: false. #29883 (Also in 12, 13)
Fixed an issue where dropdown menus did not work in DevTools when contextIsolation was enabled. #29886 (Also in 13)
Fixed the 'did-fail-load' event not being emitted when the 'certificate-error' handler allowed an error through. #29870 "
455,"Release Notes for v12.0.13
Fixes

Fixed a hang when denying a window.open using setWindowOpenHandler when nativeWindowOpen: false. #29881 (Also in 13, 14)
Fixed an issue where request headers were cleared if the optional ""requestHeaders"" parameter was not included in the webRequest.onBeforeSendHeaders callback response object. #29834 (Also in 13, 14)

Other Changes

Backported fix for chromium:1211215. #29784 
Security: backported fix for CVE-2021-30547. #29789 
Security: backported fix for CVE-2021-30553. #29818 
Security: backported fix for CVE-2021-30554. #29822 
Security: backported fix for chromium:1194689. #29816 
Security: backported fix for chromium:1209558. #29814 
","Release Notes for v12.0.13
Fixes
Fixed a hang when denying a window.open using setWindowOpenHandler when nativeWindowOpen: false. #29881 (Also in 13, 14)
Fixed an issue where request headers were cleared if the optional ""requestHeaders"" parameter was not included in the webRequest.onBeforeSendHeaders callback response object. #29834 (Also in 13, 14)
Other Changes
Backported fix for chromium:1211215. #29784 
Security: backported fix for CVE-2021-30547. #29789 
Security: backported fix for CVE-2021-30553. #29818 
Security: backported fix for CVE-2021-30554. #29822 
Security: backported fix for chromium:1194689. #29816 
Security: backported fix for chromium:1209558. #29814 "
456,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.9.
# Release Notes for v14.0.0-beta.9
Fixes

Fixed an issue where request headers were cleared if the optional ""requestHeaders"" parameter was not included in the webRequest.onBeforeSendHeaders callback response object. #29835 (Also in 12, 13)
Fixed an issue where the setAlwaysOnTop value would sometimes not be preserved for child windows on macOS. #29855 
Fixed an issue with PDF loading on Windows, where metadata was not loading correctly and causing the PDF to load as a blank page. #29831 (Also in 13)

Other Changes

Fixed app.getPath('logs') returning the wrong path on Linux and Windows. #29865 
Updated Chromium to 93.0.4539.0. #29864 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.9.
Release Notes for v14.0.0-beta.9
Fixes
Fixed an issue where request headers were cleared if the optional ""requestHeaders"" parameter was not included in the webRequest.onBeforeSendHeaders callback response object. #29835 (Also in 12, 13)
Fixed an issue where the setAlwaysOnTop value would sometimes not be preserved for child windows on macOS. #29855 
Fixed an issue with PDF loading on Windows, where metadata was not loading correctly and causing the PDF to load as a blank page. #29831 (Also in 13)
Other Changes
Fixed app.getPath('logs') returning the wrong path on Linux and Windows. #29865 
Updated Chromium to 93.0.4539.0. #29864 "
457,"Release Notes for v13.1.4
Fixes

Fixed an issue with PDF loading on Windows, where metadata was not loading correctly and causing the PDF to load as a blank page. #29830 (Also in 14)
","Release Notes for v13.1.4
Fixes
Fixed an issue with PDF loading on Windows, where metadata was not loading correctly and causing the PDF to load as a blank page. #29830 (Also in 14)"
458,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.8.
# Release Notes for v14.0.0-beta.8
Fixes

Fixed CORS preflight request always being cancelled when connecting via proxy requiring authentication for apps that had registered WebRequest listeners. #29812 (Also in 12, 13)
Fixed crashes in debug builds caused by microtasks policy mismatch. #29809 (Also in 12, 13)
Fixed hover state not clear bug when BrowserWindow is not resizable. #29801 (Also in 12, 13)
Fixed issue where the update permission prompt would cause 100% CPU spin while the prompt was open. #29806 (Also in 13)
Fixed the &lt;select&gt; element dropdown not appearing on Windows or Linux. #29771 
Fixed the color select eyedropper not working within DevTools. #29752 (Also in 13)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.8.
Release Notes for v14.0.0-beta.8
Fixes
Fixed CORS preflight request always being cancelled when connecting via proxy requiring authentication for apps that had registered WebRequest listeners. #29812 (Also in 12, 13)
Fixed crashes in debug builds caused by microtasks policy mismatch. #29809 (Also in 12, 13)
Fixed hover state not clear bug when BrowserWindow is not resizable. #29801 (Also in 12, 13)
Fixed issue where the update permission prompt would cause 100% CPU spin while the prompt was open. #29806 (Also in 13)
Fixed the <select> element dropdown not appearing on Windows or Linux. #29771 
Fixed the color select eyedropper not working within DevTools. #29752 (Also in 13)"
459,"Release Notes for v13.1.3
Fixes

Fixed CORS preflight request always being cancelled when connecting via proxy requiring authentication for apps that had registered WebRequest listeners. #29811 (Also in 12, 14)
Fixed select-bluetooth-device firing on Windows. #29611 (Also in 12, 14)
Fixed warnAboutRemoteModuleWithRemoteContent for the new default value of enableRemoteModule. #29691 
Fixed a potential crash when setting vibrancy on macOS. #29722 (Also in 14)
Fixed an issue where custom traffic lights could be covered by BrowserViews on macOS. #29663 (Also in 14)
Fixed an issue where draggable regions sometimes did not work properly when DevTools is open. #29734 (Also in 12, 14)
Fixed crashes in debug builds caused by microtasks policy mismatch. #29808 (Also in 12, 14)
Fixed hover state not clear bug when BrowserWindow is not resizable. #29800 (Also in 12, 14)
Fixed issue where the update permission prompt would cause 100% CPU spin while the prompt was open. #29805 (Also in 14)
Fixed potential corruption of piped response data when using interceptHttpProtocol/registerHttpProtocol. #29669 (Also in 11, 12, 14)
Fixed the color select eyedropper not working within DevTools. #29760 (Also in 14)
Fixed the spelling of 'attachment' in 'Content-Disposition' header when using the webRequest module. #29672 (Also in 12, 14)

Other Changes

Fixed a feature flag issue where spellchecker methods returned empty suggestion lists on Windows. #29706 (Also in 14)
Updated Chromium to 91.0.4472.106. #29700 

Documentation

Documentation changes: #29726, #29762
","Release Notes for v13.1.3
Fixes
Fixed CORS preflight request always being cancelled when connecting via proxy requiring authentication for apps that had registered WebRequest listeners. #29811 (Also in 12, 14)
Fixed select-bluetooth-device firing on Windows. #29611 (Also in 12, 14)
Fixed warnAboutRemoteModuleWithRemoteContent for the new default value of enableRemoteModule. #29691 
Fixed a potential crash when setting vibrancy on macOS. #29722 (Also in 14)
Fixed an issue where custom traffic lights could be covered by BrowserViews on macOS. #29663 (Also in 14)
Fixed an issue where draggable regions sometimes did not work properly when DevTools is open. #29734 (Also in 12, 14)
Fixed crashes in debug builds caused by microtasks policy mismatch. #29808 (Also in 12, 14)
Fixed hover state not clear bug when BrowserWindow is not resizable. #29800 (Also in 12, 14)
Fixed issue where the update permission prompt would cause 100% CPU spin while the prompt was open. #29805 (Also in 14)
Fixed potential corruption of piped response data when using interceptHttpProtocol/registerHttpProtocol. #29669 (Also in 11, 12, 14)
Fixed the color select eyedropper not working within DevTools. #29760 (Also in 14)
Fixed the spelling of 'attachment' in 'Content-Disposition' header when using the webRequest module. #29672 (Also in 12, 14)
Other Changes
Fixed a feature flag issue where spellchecker methods returned empty suggestion lists on Windows. #29706 (Also in 14)
Updated Chromium to 91.0.4472.106. #29700 
Documentation
Documentation changes: #29726, #29762"
460,"Release Notes for v12.0.12
Fixes

Fixd  an issue where fs.promises.readFile would improperly error when passing a FileHandle to the pathargument. #29575 (Also in 13, 14)
Fixed CORS preflight request always being cancelled when connecting via proxy requiring authentication for apps that had registered WebRequest listeners. #29810 (Also in 13, 14)
Fixed select-bluetooth-device firing on Windows. #29612 (Also in 13, 14)
Fixed an incorrect warning about enableRemoteModule being issued when the option was undefined (and thus defaulting to false). #29701 
Fixed an issue where draggable regions sometimes did not work properly when DevTools is open. #29733 (Also in 13, 14)
Fixed crashes in debug builds caused by microtasks policy mismatch. #29807 (Also in 13, 14)
Fixed hover state not clear bug when BrowserWindow is not resizable. #29799 (Also in 13, 14)
Fixed potential corruption of piped response data when using interceptHttpProtocol/registerHttpProtocol. #29668 (Also in 11, 13, 14)
Fixed the spelling of 'attachment' in 'Content-Disposition' header when using the webRequest module. #29671 (Also in 13, 14)
Security: backported fix for CVE-2021-30551. #29779 

Other Changes

Security: backported fix for CVE-2021-30544. #29776 
Security: backported fix for CVE-2021-30548. #29786 

Documentation

Documentation changes: #29725
","Release Notes for v12.0.12
Fixes
Fixd  an issue where fs.promises.readFile would improperly error when passing a FileHandle to the pathargument. #29575 (Also in 13, 14)
Fixed CORS preflight request always being cancelled when connecting via proxy requiring authentication for apps that had registered WebRequest listeners. #29810 (Also in 13, 14)
Fixed select-bluetooth-device firing on Windows. #29612 (Also in 13, 14)
Fixed an incorrect warning about enableRemoteModule being issued when the option was undefined (and thus defaulting to false). #29701 
Fixed an issue where draggable regions sometimes did not work properly when DevTools is open. #29733 (Also in 13, 14)
Fixed crashes in debug builds caused by microtasks policy mismatch. #29807 (Also in 13, 14)
Fixed hover state not clear bug when BrowserWindow is not resizable. #29799 (Also in 13, 14)
Fixed potential corruption of piped response data when using interceptHttpProtocol/registerHttpProtocol. #29668 (Also in 11, 13, 14)
Fixed the spelling of 'attachment' in 'Content-Disposition' header when using the webRequest module. #29671 (Also in 13, 14)
Security: backported fix for CVE-2021-30551. #29779 
Other Changes
Security: backported fix for CVE-2021-30544. #29776 
Security: backported fix for CVE-2021-30548. #29786 
Documentation
Documentation changes: #29725"
461,"Release Notes for v11.4.9
Fixes

Fixed potential corruption of piped response data when using interceptHttpProtocol/registerHttpProtocol. #29667 (Also in 12, 13, 14)
Security: backported fix for CVE-2021-30551. #29780 

Other Changes

Security: backported fix for CVE-2021-30544. #29777 
Security: backported fix for CVE-2021-30548. #29787 
","Release Notes for v11.4.9
Fixes
Fixed potential corruption of piped response data when using interceptHttpProtocol/registerHttpProtocol. #29667 (Also in 12, 13, 14)
Security: backported fix for CVE-2021-30551. #29780 
Other Changes
Security: backported fix for CVE-2021-30544. #29777 
Security: backported fix for CVE-2021-30548. #29787 "
462,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.7.
# Release Notes for v14.0.0-beta.7
Fixes

Fixed a potential crash when setting vibrancy on macOS. #29723 (Also in 13)
Fixed an issue where draggable regions sometimes did not work properly when DevTools is open. #29735 (Also in 12, 13)
Fixed crashes on latest gen Intel and Ryzen processors. #29688 

Other Changes

Fixed a feature flag issue where spellchecker methods returned empty suggestion lists on Windows. #29705 (Also in 13)

Documentation

Documentation changes: #29727
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.7.
Release Notes for v14.0.0-beta.7
Fixes
Fixed a potential crash when setting vibrancy on macOS. #29723 (Also in 13)
Fixed an issue where draggable regions sometimes did not work properly when DevTools is open. #29735 (Also in 12, 13)
Fixed crashes on latest gen Intel and Ryzen processors. #29688 
Other Changes
Fixed a feature flag issue where spellchecker methods returned empty suggestion lists on Windows. #29705 (Also in 13)
Documentation
Documentation changes: #29727"
463,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.6.
# Release Notes for v14.0.0-beta.6
Fixes

Fixed select-bluetooth-device firing on Windows. #29613 (Also in 12, 13)
Fixed an issue where custom traffic lights could be covered by BrowserViews on macOS. #29628 (Also in 13)
Fixed potential corruption of piped response data when using interceptHttpProtocol/registerHttpProtocol. #29670 (Also in 11, 12, 13)
Fixed the spelling of 'attachment' in 'Content-Disposition' header when using the webRequest module. #29673 (Also in 12, 13)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.6.
Release Notes for v14.0.0-beta.6
Fixes
Fixed select-bluetooth-device firing on Windows. #29613 (Also in 12, 13)
Fixed an issue where custom traffic lights could be covered by BrowserViews on macOS. #29628 (Also in 13)
Fixed potential corruption of piped response data when using interceptHttpProtocol/registerHttpProtocol. #29670 (Also in 11, 12, 13)
Fixed the spelling of 'attachment' in 'Content-Disposition' header when using the webRequest module. #29673 (Also in 12, 13)"
464,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.5.
# Release Notes for v14.0.0-beta.5
Fixes

Fixed memory leak when requesting files in ASAR archive from renderer. #29536 (Also in 12, 13)
Electron Fuses are now in a consistent order across platforms. #29616 (Also in 13)
Fixed an issue where fs.promises.readFile would improperly error when passing a FileHandle to the pathargument. #29577 (Also in 13)
Fixed sending intermediate certificates with 'select-client-certificate' event callback. #29570 (Also in 12, 13)

Other Changes

Updated Chromium to 93.0.4536.0. #29617 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.5.
Release Notes for v14.0.0-beta.5
Fixes
Fixed memory leak when requesting files in ASAR archive from renderer. #29536 (Also in 12, 13)
Electron Fuses are now in a consistent order across platforms. #29616 (Also in 13)
Fixed an issue where fs.promises.readFile would improperly error when passing a FileHandle to the pathargument. #29577 (Also in 13)
Fixed sending intermediate certificates with 'select-client-certificate' event callback. #29570 (Also in 12, 13)
Other Changes
Updated Chromium to 93.0.4536.0. #29617 "
465,"Release Notes for v13.1.2
Fixes

Electron Fuses are now in a consistent order across platforms. #29615 (Also in 14)
Fixd  an issue where fs.promises.readFile would improperly error when passing a FileHandle to the pathargument. #29576 (Also in 14)
Fixed sending intermediate certificates with 'select-client-certificate' event callback. #29569 (Also in 12, 14)
Fixed shifted character getting changed in menu accelerator. #29482 (Also in 12, 14)
","Release Notes for v13.1.2
Fixes
Electron Fuses are now in a consistent order across platforms. #29615 (Also in 14)
Fixd  an issue where fs.promises.readFile would improperly error when passing a FileHandle to the pathargument. #29576 (Also in 14)
Fixed sending intermediate certificates with 'select-client-certificate' event callback. #29569 (Also in 12, 14)
Fixed shifted character getting changed in menu accelerator. #29482 (Also in 12, 14)"
466,"Release Notes for v12.0.11
Fixes

Fixed memory leak when requesting files in ASAR archive from renderer. #29548 (Also in 13, 14)
Fixed sending intermediate certificates with 'select-client-certificate' event callback. #29568 (Also in 13, 14)
Fixed shifted character getting changed in menu accelerator. #29483 (Also in 13, 14)
","Release Notes for v12.0.11
Fixes
Fixed memory leak when requesting files in ASAR archive from renderer. #29548 (Also in 13, 14)
Fixed sending intermediate certificates with 'select-client-certificate' event callback. #29568 (Also in 13, 14)
Fixed shifted character getting changed in menu accelerator. #29483 (Also in 13, 14)"
467,"Release Notes for v13.1.1
Fixes

Fixed crashes on latest gen Intel and Ryzen processors. #29546 
Fixed memory leak when requesting files in ASAR archive from renderer. #29535 (Also in 14)
","Release Notes for v13.1.1
Fixes
Fixed crashes on latest gen Intel and Ryzen processors. #29546 
Fixed memory leak when requesting files in ASAR archive from renderer. #29535 (Also in 14)"
468,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.3.
# Release Notes for v14.0.0-beta.3
Features

Added experimental cookie encryption support behind an Electron Fuse. #29492 (Also in 13)
Added support for debug URLs such as chrome://gpucrash. #29466 (Also in 13)

Fixes

Fixed an issue where right-clicking in the devtools console throws an error. #29472 
Fixed missing 'fetch' event in service workers for requests using a registered protocol. #29440 (Also in 12, 13)
Fixed pressing Alt with mouse click results in toggling menu bar. #29452 (Also in 12, 13)
Fixed pressing Alt+Shift and Alt+Ctrl toggling menu bar on KDE. #29444 (Also in 12, 13)
Fixed shifted character getting changed in menu accelerator. #29481 

Documentation

Documentation changes: #29429
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.3.
Release Notes for v14.0.0-beta.3
Features
Added experimental cookie encryption support behind an Electron Fuse. #29492 (Also in 13)
Added support for debug URLs such as chrome://gpucrash. #29466 (Also in 13)
Fixes
Fixed an issue where right-clicking in the devtools console throws an error. #29472 
Fixed missing 'fetch' event in service workers for requests using a registered protocol. #29440 (Also in 12, 13)
Fixed pressing Alt with mouse click results in toggling menu bar. #29452 (Also in 12, 13)
Fixed pressing Alt+Shift and Alt+Ctrl toggling menu bar on KDE. #29444 (Also in 12, 13)
Fixed shifted character getting changed in menu accelerator. #29481 
Documentation
Documentation changes: #29429"
469,"Release Notes for v13.1.0
Features

Added experimental cookie encryption support behind an Electron Fuse. #29493 (Also in 14)
Added support for debug URLs such as chrome://gpucrash. #29491 (Also in 14)

Fixes

Fixed missing 'fetch' event in service workers for requests using a registered protocol. #29446 (Also in 12, 14)
Fixed pressing Alt with mouse click results in toggling menu bar. #29450 (Also in 12, 14)
Fixed pressing Alt+Shift and Alt+Ctrl toggling menu bar on KDE. #29443 (Also in 12, 14)

Other Changes

Backported fix for 1090441,1173656,1181434,1188117. #29494 
Fixed using custom v8 snapshots on Apple Silicon. #29339 (Also in 12)
Updated Chromium to 91.0.4472.77. #29321 

Documentation

Documentation changes: #29430
","Release Notes for v13.1.0
Features
Added experimental cookie encryption support behind an Electron Fuse. #29493 (Also in 14)
Added support for debug URLs such as chrome://gpucrash. #29491 (Also in 14)
Fixes
Fixed missing 'fetch' event in service workers for requests using a registered protocol. #29446 (Also in 12, 14)
Fixed pressing Alt with mouse click results in toggling menu bar. #29450 (Also in 12, 14)
Fixed pressing Alt+Shift and Alt+Ctrl toggling menu bar on KDE. #29443 (Also in 12, 14)
Other Changes
Backported fix for 1090441,1173656,1181434,1188117. #29494 
Fixed using custom v8 snapshots on Apple Silicon. #29339 (Also in 12)
Updated Chromium to 91.0.4472.77. #29321 
Documentation
Documentation changes: #29430"
470,"Release Notes for v12.0.10
Fixes

Fixed drag and drop not working correctly for some x11 window managers. #29272 (Also in 11)
Fixed missing 'fetch' event in service workers for requests using a registered protocol. #29447 (Also in 13, 14)
Fixed pressing Alt with mouse click results in toggling menu bar. #29451 (Also in 13, 14)
Fixed pressing Alt+Shift and Alt+Ctrl toggling menu bar on KDE. #29445 (Also in 13, 14)

Other Changes

Fixed using custom v8 snapshots on Apple Silicon. #29341 (Also in 13)
Security: backported fixes for CVE-2021-30518, CVE-2021-30516, CVE-2021-30515, CVE-2021-30513, CVE-2021-30512, CVE-2021-30510, CVE-2021-30508. #29251 

Documentation

Documentation changes: #29431
","Release Notes for v12.0.10
Fixes
Fixed drag and drop not working correctly for some x11 window managers. #29272 (Also in 11)
Fixed missing 'fetch' event in service workers for requests using a registered protocol. #29447 (Also in 13, 14)
Fixed pressing Alt with mouse click results in toggling menu bar. #29451 (Also in 13, 14)
Fixed pressing Alt+Shift and Alt+Ctrl toggling menu bar on KDE. #29445 (Also in 13, 14)
Other Changes
Fixed using custom v8 snapshots on Apple Silicon. #29341 (Also in 13)
Security: backported fixes for CVE-2021-30518, CVE-2021-30516, CVE-2021-30515, CVE-2021-30513, CVE-2021-30512, CVE-2021-30510, CVE-2021-30508. #29251 
Documentation
Documentation changes: #29431"
471,"Release Notes for v11.4.8
Fixes

Fixed will-resize and will-move events not scaling the emitted newBounds rectangle to the appropriate Windows display scale factor. #29225 (Also in 12, 13)
Fixed drag and drop not working correctly for some x11 window managers. #29271 (Also in 12)
Fixed packaged apps allowing --require in NODE_OPTIONS on Windows. #29419 

Other Changes

Fixed using custom v8 snapshots on Apple Silicon. #29347 (Also in 12, 13)
Security: backported fixes for CVE-2021-30518, CVE-2021-30516, CVE-2021-30515, CVE-2021-30513, CVE-2021-30512, CVE-2021-30510, CVE-2021-30508. #29250 
","Release Notes for v11.4.8
Fixes
Fixed will-resize and will-move events not scaling the emitted newBounds rectangle to the appropriate Windows display scale factor. #29225 (Also in 12, 13)
Fixed drag and drop not working correctly for some x11 window managers. #29271 (Also in 12)
Fixed packaged apps allowing --require in NODE_OPTIONS on Windows. #29419 
Other Changes
Fixed using custom v8 snapshots on Apple Silicon. #29347 (Also in 12, 13)
Security: backported fixes for CVE-2021-30518, CVE-2021-30516, CVE-2021-30515, CVE-2021-30513, CVE-2021-30512, CVE-2021-30510, CVE-2021-30508. #29250 "
472,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.2.
# Release Notes for v14.0.0-beta.2","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.2.
Release Notes for v14.0.0-beta.2"
473,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.1.
# Release Notes for v14.0.0-beta.1
Features

Added BrowserWindow.isFocusable() to determine whether a window is focusable. #28642 
Added WebFrameMain.visibilityState instance property. #28706 
Added disposition, referrer and postBody to the details object passed to the window open handler registered with setWindowOpenHandler. #28518 (Also in 13)
Added process.contextId used by @electron/remote. #28007 (Also in 13)
Added new session.storagePath API to get the path on disk for session-specific data. #28665 (Also in 13)
Added support for the des-ede3 cipher in node crypto. #27897 (Also in 11, 12)
Adding ContextBridgeMutability feature that skips context bridge DeepFreeze and SetReadOnlyNonConfigurable when exposing a value. #27348 
Child windows no longer inherit BrowserWindow construction options from their parents. #28550 
Removed deprecated additionalFeatures property from new-window and did-create-window WebContents events. #28548 
The submitURL option for crashReporter.start is no longer a required argument when uploadToServer is false. #28105 (Also in 13)
nativeWindowOpen: true is now the default. #28552 

Fixes

Allow Node.js to manage microtasks queue by using explicit microtasks policy before calling uv_run(). #28957 (Also in 11, 12, 13)
Allow loading source maps from custom protocols and asar bundles. #28573 (Also in 12, 13)
Child windows with specified background colors or transpency now work as intended. #28054 (Also in 12, 13)
Colors returned from systemPreferences.getAccentColor(), getSystemColor and getColor are now correctly converted into the devices color space.  Previously the color would have been subtly incorrect. #28121 (Also in 11, 12, 13)
Fixed &lt;webview&gt; focus / blur events not working with contextIsolation enabled. #29004 (Also in 10, 11, 12, 13)
Fixed desktopCapturer.getSources() promise result sometimes never resolving. #28273 (Also in 10, 11, 12, 13)
Fixed postData parameter missing from new-window event. #28513 (Also in 12, 13)
Fixed webFrame spell checker APIs crashing when called in sandboxed renderer. #29053 (Also in 12, 13)
Fixed will-resize and will-move events not scaling the emitted newBounds rectangle to the appropriate Windows display scale factor. #29162 (Also in 11, 12, 13)
Fixed a bug where, when a JumpList task description exceeded 260 characters, the JumpList was empty, despite valid entries. #28485 (Also in 11, 12, 13)
Fixed a crash when calling shell.trashItem() from the renderer process. #28748 (Also in 12, 13)
Fixed a network process crash that could happen when using setCertificateVerifyProc with many concurrent verification requests. #28358 (Also in 11, 12, 13)
Fixed an issue where beforeunload and unload weren't firing properly in BrowserViews. #28382 
Fixed an issue where illegal access error could be thrown when nodeIntegrationInSubFrames is enabled. #29093 (Also in 12, 13)
Fixed an issue where select-serial-port callback crashes when called with an invalid serial port ID. #28602 (Also in 12, 13)
Fixed an issue where win.capturePage() never called back after calling hide() for a hidden window on some platforms. #27883 (Also in 11, 12, 13)
Fixed an issue where window.print() did not work properly when printing a pdf from the pdf plugin. #28328 (Also in 12, 13)
Fixed an issue where drag regions on macOS would be offset incorrectly when no drag regions were set,. #28984 (Also in 11, 12, 13)
Fixed an issue where errors thrown in functions passed over the contextBridge could be displayed incorrectly. #28346 (Also in 12, 13)
Fixed an issue where extensions without a background page might not have file access. #29123 (Also in 12, 13)
Fixed an issue where multiple calls to window.setFullScreen could cause problems. #25470 (Also in 11, 12, 13)
Fixed an issue where some Node.js modules would hang on page reload on Windows. #28175 (Also in 11, 12, 13)
Fixed an issue where some dialogs would stop working on macOS if window.hide() was called while they were open. #28671 (Also in 11, 12, 13)
Fixed an issue where the drag regions in BrowserViews on macOS could be off in their y-axis. #28268 (Also in 10, 11, 12, 13)
Fixed an issue where the thumbar disappeared after win.hide() on Windows. #28366 (Also in 10, 11, 12, 13)
Fixed an issue where the void function Menu.setApplicationMenu would return a value on some platforms. #29118 (Also in 12, 13)
Fixed an issue where the window couldn't be closed if a user tried to quit with a message box showing. #28967 (Also in 12, 13)
Fixed an issue where windows in simpleFullscreen mode were not properly resizing when display metrics changed. #28150 (Also in 11, 12, 13)
Fixed context menus not being positioned correctly when near the edge of the screen. #28224 (Also in 11, 12, 13)
Fixed corner radius for vibrancy view in macOS 11. #28655 (Also in 11, 12, 13)
Fixed crash when an exception occurs within the event emitter. #28971 (Also in 13)
Fixed crash when calling getBackgroundColor on a transparent window with no assigned background color. #28120 (Also in 11, 12, 13)
Fixed failing to request file:// resources when web security is disabled. #28489 (Also in 11, 12, 13)
Fixed incorrect value of document.focus when opening multiple windows on macOS. #29204 (Also in 12)
Fixed intensive I/O from asar files causing ERR_FILE_NOT_FOUND after a while. #28137 (Also in 11, 12, 13)
Fixed permissions issue that was preventing the PDF viewer from displaying. #29210 (Also in 13)
Fixed rare crash when initializing the internal PDF extension. #28432 (Also in 12, 13)
Fixed service worker not working with custom protocol. #28326 (Also in 11, 12, 13)
Fixed the handler set with setWindowOpenHandler not being invoked when a link was middle-clicked or shift-clicked. #28498 (Also in 12, 13)
Fixed the possibility for incorrect visual artifacts when using vibrancy and making frameless windows fullscreen on macOS. #29084 (Also in 13)
Fixed the window-all-closed event being emitted while the last BrowserWindow was still in the process of being closed. #28867 (Also in 11, 12, 13)
Fixed using navigator.setAppBadge and navigator.clearAppBadge from a service worker in Electron. #27950 (Also in 12)
Fixed using vibrancy with titleBarStyle together resulting in weird window shadow on macOS. #29114 (Also in 13)
No longer set backgroundColor in default-app when opening custom files / URLs. #28792 (Also in 10, 11, 12, 13)
Restored cross-platform noop implementation of app.setAppUserModelId. #28915 (Also in 13)
Support wasm-eval csp behind WebAssemblyCSP flag. #28535 (Also in 11, 12, 13)
Transparent windows cannot be maximized using the Windows system menu or by double clicking the title bar. #28207 (Also in 12, 13)
URLS passed to shell.openExternal on windows are now correctly URI encoded.  This was already occurring on macOS and Linux. #28334 (Also in 10, 11, 12, 13)

Other Changes

Deprecated worldSafeExecuteJavaScript option was removed from webPreferences. #28456 
Fixed native module compilation with AsyncCleanupHooks on windows. #28067 (Also in 11, 12, 13)
Fixed using custom v8 snapshots on Apple Silicon. #29338 
Improved performance characteristics of functions being sent back and forth over the contextBridge. #28285 
Improved performance of napi_threadsafe_function. #29021 (Also in 12, 13)
Refactored &lt;webview&gt; using contextBridge to make it safer to use when contextIsolation is enabled. #29037 
Removed the deprecated app.allowRendererProcessReuse and BrowserWindow affinity options. #26874 
Updated Chromium to 92.0.4511.0. #29173 
Updated Node.js to v14.17.0. #29151 
Updated community discussions link in default Electron menu. #28449 (Also in 12, 13)

Documentation

Documentation changes: #27888, #27958, #28189, #28315, #29073, #29295
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@14.0.0-beta.1.
Release Notes for v14.0.0-beta.1
Features
Added BrowserWindow.isFocusable() to determine whether a window is focusable. #28642 
Added WebFrameMain.visibilityState instance property. #28706 
Added disposition, referrer and postBody to the details object passed to the window open handler registered with setWindowOpenHandler. #28518 (Also in 13)
Added process.contextId used by @electron/remote. #28007 (Also in 13)
Added new session.storagePath API to get the path on disk for session-specific data. #28665 (Also in 13)
Added support for the des-ede3 cipher in node crypto. #27897 (Also in 11, 12)
Adding ContextBridgeMutability feature that skips context bridge DeepFreeze and SetReadOnlyNonConfigurable when exposing a value. #27348 
Child windows no longer inherit BrowserWindow construction options from their parents. #28550 
Removed deprecated additionalFeatures property from new-window and did-create-window WebContents events. #28548 
The submitURL option for crashReporter.start is no longer a required argument when uploadToServer is false. #28105 (Also in 13)
nativeWindowOpen: true is now the default. #28552 
Fixes
Allow Node.js to manage microtasks queue by using explicit microtasks policy before calling uv_run(). #28957 (Also in 11, 12, 13)
Allow loading source maps from custom protocols and asar bundles. #28573 (Also in 12, 13)
Child windows with specified background colors or transpency now work as intended. #28054 (Also in 12, 13)
Colors returned from systemPreferences.getAccentColor(), getSystemColor and getColor are now correctly converted into the devices color space.  Previously the color would have been subtly incorrect. #28121 (Also in 11, 12, 13)
Fixed <webview> focus / blur events not working with contextIsolation enabled. #29004 (Also in 10, 11, 12, 13)
Fixed desktopCapturer.getSources() promise result sometimes never resolving. #28273 (Also in 10, 11, 12, 13)
Fixed postData parameter missing from new-window event. #28513 (Also in 12, 13)
Fixed webFrame spell checker APIs crashing when called in sandboxed renderer. #29053 (Also in 12, 13)
Fixed will-resize and will-move events not scaling the emitted newBounds rectangle to the appropriate Windows display scale factor. #29162 (Also in 11, 12, 13)
Fixed a bug where, when a JumpList task description exceeded 260 characters, the JumpList was empty, despite valid entries. #28485 (Also in 11, 12, 13)
Fixed a crash when calling shell.trashItem() from the renderer process. #28748 (Also in 12, 13)
Fixed a network process crash that could happen when using setCertificateVerifyProc with many concurrent verification requests. #28358 (Also in 11, 12, 13)
Fixed an issue where beforeunload and unload weren't firing properly in BrowserViews. #28382 
Fixed an issue where illegal access error could be thrown when nodeIntegrationInSubFrames is enabled. #29093 (Also in 12, 13)
Fixed an issue where select-serial-port callback crashes when called with an invalid serial port ID. #28602 (Also in 12, 13)
Fixed an issue where win.capturePage() never called back after calling hide() for a hidden window on some platforms. #27883 (Also in 11, 12, 13)
Fixed an issue where window.print() did not work properly when printing a pdf from the pdf plugin. #28328 (Also in 12, 13)
Fixed an issue where drag regions on macOS would be offset incorrectly when no drag regions were set,. #28984 (Also in 11, 12, 13)
Fixed an issue where errors thrown in functions passed over the contextBridge could be displayed incorrectly. #28346 (Also in 12, 13)
Fixed an issue where extensions without a background page might not have file access. #29123 (Also in 12, 13)
Fixed an issue where multiple calls to window.setFullScreen could cause problems. #25470 (Also in 11, 12, 13)
Fixed an issue where some Node.js modules would hang on page reload on Windows. #28175 (Also in 11, 12, 13)
Fixed an issue where some dialogs would stop working on macOS if window.hide() was called while they were open. #28671 (Also in 11, 12, 13)
Fixed an issue where the drag regions in BrowserViews on macOS could be off in their y-axis. #28268 (Also in 10, 11, 12, 13)
Fixed an issue where the thumbar disappeared after win.hide() on Windows. #28366 (Also in 10, 11, 12, 13)
Fixed an issue where the void function Menu.setApplicationMenu would return a value on some platforms. #29118 (Also in 12, 13)
Fixed an issue where the window couldn't be closed if a user tried to quit with a message box showing. #28967 (Also in 12, 13)
Fixed an issue where windows in simpleFullscreen mode were not properly resizing when display metrics changed. #28150 (Also in 11, 12, 13)
Fixed context menus not being positioned correctly when near the edge of the screen. #28224 (Also in 11, 12, 13)
Fixed corner radius for vibrancy view in macOS 11. #28655 (Also in 11, 12, 13)
Fixed crash when an exception occurs within the event emitter. #28971 (Also in 13)
Fixed crash when calling getBackgroundColor on a transparent window with no assigned background color. #28120 (Also in 11, 12, 13)
Fixed failing to request file:// resources when web security is disabled. #28489 (Also in 11, 12, 13)
Fixed incorrect value of document.focus when opening multiple windows on macOS. #29204 (Also in 12)
Fixed intensive I/O from asar files causing ERR_FILE_NOT_FOUND after a while. #28137 (Also in 11, 12, 13)
Fixed permissions issue that was preventing the PDF viewer from displaying. #29210 (Also in 13)
Fixed rare crash when initializing the internal PDF extension. #28432 (Also in 12, 13)
Fixed service worker not working with custom protocol. #28326 (Also in 11, 12, 13)
Fixed the handler set with setWindowOpenHandler not being invoked when a link was middle-clicked or shift-clicked. #28498 (Also in 12, 13)
Fixed the possibility for incorrect visual artifacts when using vibrancy and making frameless windows fullscreen on macOS. #29084 (Also in 13)
Fixed the window-all-closed event being emitted while the last BrowserWindow was still in the process of being closed. #28867 (Also in 11, 12, 13)
Fixed using navigator.setAppBadge and navigator.clearAppBadge from a service worker in Electron. #27950 (Also in 12)
Fixed using vibrancy with titleBarStyle together resulting in weird window shadow on macOS. #29114 (Also in 13)
No longer set backgroundColor in default-app when opening custom files / URLs. #28792 (Also in 10, 11, 12, 13)
Restored cross-platform noop implementation of app.setAppUserModelId. #28915 (Also in 13)
Support wasm-eval csp behind WebAssemblyCSP flag. #28535 (Also in 11, 12, 13)
Transparent windows cannot be maximized using the Windows system menu or by double clicking the title bar. #28207 (Also in 12, 13)
URLS passed to shell.openExternal on windows are now correctly URI encoded.  This was already occurring on macOS and Linux. #28334 (Also in 10, 11, 12, 13)
Other Changes
Deprecated worldSafeExecuteJavaScript option was removed from webPreferences. #28456 
Fixed native module compilation with AsyncCleanupHooks on windows. #28067 (Also in 11, 12, 13)
Fixed using custom v8 snapshots on Apple Silicon. #29338 
Improved performance characteristics of functions being sent back and forth over the contextBridge. #28285 
Improved performance of napi_threadsafe_function. #29021 (Also in 12, 13)
Refactored <webview> using contextBridge to make it safer to use when contextIsolation is enabled. #29037 
Removed the deprecated app.allowRendererProcessReuse and BrowserWindow affinity options. #26874 
Updated Chromium to 92.0.4511.0. #29173 
Updated Node.js to v14.17.0. #29151 
Updated community discussions link in default Electron menu. #28449 (Also in 12, 13)
Documentation
Documentation changes: #27888, #27958, #28189, #28315, #29073, #29295"
474,"Release Notes for v13.0.1
Fixes

Fixed SHA issue when creating a universal macOS build.
","Release Notes for v13.0.1
Fixes
Fixed SHA issue when creating a universal macOS build."
475,"Release Notes for v13.0.0
Stack Upgrades

Chromium 91.0.4472.69.
v91 blog post
v90 blog post


Node v14.17.0
v14.17.0 release notes


V8 v9.1
v9.1 blog post
v9.0 blog post



Breaking Changes

Fixed so window.open() parameter frameName is no longer set as window title. #27481 
Changed session.setPermissionCheckHandler(handler) to allow for handler's first parameter, webContents to be null. #19903

Features
Additions

Added process.contextId used by @electron/remote. #28251
Added process.contextIsolated property that indicates whether the current renderer context has contextIsolation enabled. #28252
Added process.uptime() to sandboxed renderers. #26684 
Added roundedCorners option for BrowserWindow. #27572 
Added missing fields to the parameters emitted as part of the context-menu event. #26788 
Added new session.storagePath API to get the path on disk for session-specific data. #28866
Added support for passing DOM elements over the context bridge. #26776 
Added support for registering Manifest V3 extension service workers.
Added 'registration-completed' event to ServiceWorkers. #27562 
Added disposition, referrer and postBody to the details object passed to the window open handler registered with setWindowOpenHandler. #29277

Improvements

Additional permission checks are now routed through session.setPermissionCheckHandler.  These include Notification.permission, and permission.query.  Please note that the webContents parameter to the check handler can now be null. #19903
Allowed skipping process type transformation in win.SetVisibleOnAllWorkspaces on macOS. #27200
Reverted WebFrameMain.executeJavaScriptInIsolatedWorld(). #27926
Made trafficLightPosition option work for customButtonOnHover window. #26789 
The submitURL option for crashReporter.start is no longer a required argument when uploadToServer is false. #28283
Improved performance of napi_threadsafe_function. #29048 (Also in 12)

Removed/Deprecated

Removed deprecated BrowserWindow extension APIs. #26696 
Removed deprecated shell.moveItemToTrash(). #26723 
Removed deprecated systemPreferences methods. #26849 

Fixes

Fixed hiddenInset titleBarStyle's abnormal fullscreen titlebar. Fix hiddenInset titleBarStyle not working with trafficLightPosition option. #27489
Fixed a use-after-free bug during shutdown when using off-the-record sessions. #26680
Fixed an issue where contextBridge might incorrectly try to serialize some WebAssembly objects. #27518
Fixed behavior of 302/303/307 redirect responses in the protocol module. #26297
Made BrowserWindow.setWindowButtonVisibility work for window with customButtonsOnHover titlebar style. #27073
Fixed a rare crash on boot. #29109
Fixed permissions issue that was preventing the PDF viewer from displaying. #29252
Fixed the possibility for incorrect visual artifacts when using vibrancy and making frameless windows fullscreen on macOS. #29099
Fixed using vibrancy with titleBarStyle together resulting in weird window shadow on macOS. #29165
Restored cross-platform noop implementation of app.setAppUserModelId. #28921
Security: backported fix for chromium:1196683. #28637

Also in earlier versions....

Allow Node.js to manage microtasks queue by using explicit microtasks policy before calling uv_run(). #28973 (Also in 11, 12)
Allow loading source maps from custom protocols and asar bundles. #28615 (Also in 12) 
Child windows with specified background colors or transpency now work as intended. #28112 (Also in 12)
Colors returned from systemPreferences.getAccentColor(), getSystemColor and getColor are now correctly converted into the devices color space.  Previously the color would have been subtly incorrect. #28173 (Also in 11, 12)
Fixed ECDH.setPrivateKey() not updating the key. #27688 (Also in 12)
Fixed &lt;webview&gt; focus / blur events not working with contextIsolation enabled. #29025 (Also in 10, 11, 12)
Fixed desktopCapturer.getSources() promise result sometimes never resolving. #28280 (Also in 10, 11, 12)
Fixed postData parameter missing from new-window event. #28542 (Also in 12)
Fixed webFrame spell checker APIs crashing when called in sandboxed renderer. #29087 (Also in 12)
Fixed a bug where, when a JumpList task description exceeded 260 characters, the JumpList was empty, despite valid entries. #28526 (Also in 11, 12)
Fixed a crash when calling shell.trashItem() from the renderer process. #28788 (Also in 12)
Fixed a crash when loading pepper plugins. #28372 (Also in 12)
Fixed a network process crash that could happen when using setCertificateVerifyProc with many concurrent verification requests. #28433 (Also in 11, 12)
Fixed a potential crash when resetting BrowserViews. #27786 (Also in 12)
Fixed a rare crash on Windows that could occur when emitting certain Tray events. #26668 (Also in 12)
Fixed an issue where BrowserViews could have mismatched draggable regions to their bounds. #27952 (Also in 10, 11, 12) 
Fixed an issue where illegal access error could be thrown when nodeIntegrationInSubFrames is enabled. #29170 (Also in 12)
Fixed an issue where select-serial-port callback crashes when called with an invalid serial port ID. #28619 (Also in 12)
Fixed an issue where win.capturePage() never called back after calling hide() for a hidden window on some platforms. #28076 (Also in 11, 12)
Fixed an issue where window.print() did not work properly when printing a pdf from the pdf plugin. #28351 (Also in 12)
Fixed an issue where drag regions on macOS would be offset incorrectly when no drag regions were set,. #29017 (Also in 11, 12)
Fixed an issue where errors thrown in functions passed over the contextBridge could be displayed incorrectly. #28446 (Also in 12)
Fixed an issue where extensions without a background page might not have file access. #29171 (Also in 12)
Fixed an issue where libuv might hang with multiple subframes when nodeIntegrationInSubframes is enabled. #27582 (Also in 10, 11, 12)
Fixed an issue where multiple calls to window.setFullScreen could cause problems. #28763 (Also in 11, 12)
Fixed an issue where some Node.js modules would hang on page reload on Windows. #28335 (Also in 11, 12)
Fixed an issue where some dialogs would stop working on macOS if window.hide() was called while they were open. #28694 (Also in 11, 12)
Fixed an issue where the drag regions in BrowserViews on macOS could be off in their y-axis. #28298 (Also in 10, 11, 12)
Fixed an issue where the thumbar disappeared after win.hide() on Windows. #28390 (Also in 10, 11, 12)
Fixed an issue where the void function Menu.setApplicationMenu would return a value on some platforms. #29129 (Also in 12)
Fixed an issue where the window couldn't be closed if a user tried to quit with a message box showing. #28988 (Also in 12)
Fixed an issue where windows in simpleFullscreen mode were not properly resizing when display metrics changed. #28216 (Also in 11, 12)
Fixed an out-of-bounds access in WebContents.sendInputEvent. #27827 (Also in 10, 11, 12)
Fixed background color not being applied for child windows created by native window.open path. #27593 (Also in 10, 11, 12) 
Fixed bug where TouchBarPopover and TouchBarGroup were no longer rendering. #27901 (Also in 11, 12)
Fixed context menus not being positioned correctly when near the edge of the screen. #28276 (Also in 11, 12)
Fixed corner radius for vibrancy view in macOS 11. #28679 (Also in 11, 12)
Fixed crash when an exception occurs within the event emitter. #29106
Fixed crash when calling getBackgroundColor on a transparent window with no assigned background color. #28187 (Also in 11, 12)
Fixed failing to request file:// resources when web security is disabled. #28557 (Also in 11, 12)
Fixed intensive I/O from asar files causing ERR_FILE_NOT_FOUND after a while. #28203 (Also in 11, 12)
Fixed issue where window.open() would not return an object with a location.href setter when contextIsolation is enabled and nativeWindowOpen is disabled. #27899 (Also in 12)
Fixed navigator.bluetooth.requestDevice. #27902 (Also in 11, 12)
Fixed rare crash when initializing the internal PDF extension. #28453 (Also in 12)
Fixed service worker not working with custom protocol. #28354 (Also in 11, 12)
Fixed the handler set with setWindowOpenHandler not being invoked when a link was middle-clicked or shift-clicked. #28536 (Also in 12)
Fixed the window-all-closed event being emitted while the last BrowserWindow was still in the process of being closed. #28914 (Also in 11, 12)
Fixed warning when worldSafeExecuteJavaScript is disabled. #27928 (Also in 10, 11, 12)
No longer set backgroundColor in default-app when opening custom files / URLs. #28842 (Also in 10, 11, 12)
Support wasm-eval csp behind WebAssemblyCSP flag. #28569 (Also in 11, 12)
Transparent windows cannot be maximized using the Windows system menu or by double clicking the title bar. #28527 (Also in 12)
URLS passed to shell.openExternal on windows are now correctly URI encoded.  This was already occurring on macOS and Linux. #28342 (Also in 10, 11, 12)
Fixed native module compilation with AsyncCleanupHooks on windows. #28110 (Also in 11, 12)
Fixed will-resize and will-move events not scaling the emitted newBounds rectangle to the appropriate Windows display scale factor. #29227 (Also in 11, 12)
Fixed drag and drop not working correctly for some x11 window managers. #29233 (Also in 11, 12)

Other Changes

Non-functional change; updates repository's issue template file. #27825 
Updated community discussions link in default Electron menu. #28459 (Also in 12)

Documentation

Documentation changes: 
#26239
tutorial/application-distribution 
tutorial/application-packaging (Removed)


#26501
#26542 - tutorial/offscreen-rendering
#27387 - tutorial/native-file-drag-drop 
#27486 - tutorial/support 
#27770 - api/menu
#28213 - api/browser-window 
#28365 
#29149



End of Support for 10.x.y
Electron 10.x.y has reached end-of-support as per the project's support policy. Developers and applications are encouraged to upgrade to a newer version of Electron.","Release Notes for v13.0.0
Stack Upgrades
Chromium 91.0.4472.69.
v91 blog post
v90 blog post
Node v14.17.0
v14.17.0 release notes
V8 v9.1
v9.1 blog post
v9.0 blog post
Breaking Changes
Fixed so window.open() parameter frameName is no longer set as window title. #27481 
Changed session.setPermissionCheckHandler(handler) to allow for handler's first parameter, webContents to be null. #19903
Features
Additions
Added process.contextId used by @electron/remote. #28251
Added process.contextIsolated property that indicates whether the current renderer context has contextIsolation enabled. #28252
Added process.uptime() to sandboxed renderers. #26684 
Added roundedCorners option for BrowserWindow. #27572 
Added missing fields to the parameters emitted as part of the context-menu event. #26788 
Added new session.storagePath API to get the path on disk for session-specific data. #28866
Added support for passing DOM elements over the context bridge. #26776 
Added support for registering Manifest V3 extension service workers.
Added 'registration-completed' event to ServiceWorkers. #27562 
Added disposition, referrer and postBody to the details object passed to the window open handler registered with setWindowOpenHandler. #29277
Improvements
Additional permission checks are now routed through session.setPermissionCheckHandler.  These include Notification.permission, and permission.query.  Please note that the webContents parameter to the check handler can now be null. #19903
Allowed skipping process type transformation in win.SetVisibleOnAllWorkspaces on macOS. #27200
Reverted WebFrameMain.executeJavaScriptInIsolatedWorld(). #27926
Made trafficLightPosition option work for customButtonOnHover window. #26789 
The submitURL option for crashReporter.start is no longer a required argument when uploadToServer is false. #28283
Improved performance of napi_threadsafe_function. #29048 (Also in 12)
Removed/Deprecated
Removed deprecated BrowserWindow extension APIs. #26696 
Removed deprecated shell.moveItemToTrash(). #26723 
Removed deprecated systemPreferences methods. #26849 
Fixes
Fixed hiddenInset titleBarStyle's abnormal fullscreen titlebar. Fix hiddenInset titleBarStyle not working with trafficLightPosition option. #27489
Fixed a use-after-free bug during shutdown when using off-the-record sessions. #26680
Fixed an issue where contextBridge might incorrectly try to serialize some WebAssembly objects. #27518
Fixed behavior of 302/303/307 redirect responses in the protocol module. #26297
Made BrowserWindow.setWindowButtonVisibility work for window with customButtonsOnHover titlebar style. #27073
Fixed a rare crash on boot. #29109
Fixed permissions issue that was preventing the PDF viewer from displaying. #29252
Fixed the possibility for incorrect visual artifacts when using vibrancy and making frameless windows fullscreen on macOS. #29099
Fixed using vibrancy with titleBarStyle together resulting in weird window shadow on macOS. #29165
Restored cross-platform noop implementation of app.setAppUserModelId. #28921
Security: backported fix for chromium:1196683. #28637
Also in earlier versions....
Allow Node.js to manage microtasks queue by using explicit microtasks policy before calling uv_run(). #28973 (Also in 11, 12)
Allow loading source maps from custom protocols and asar bundles. #28615 (Also in 12) 
Child windows with specified background colors or transpency now work as intended. #28112 (Also in 12)
Colors returned from systemPreferences.getAccentColor(), getSystemColor and getColor are now correctly converted into the devices color space.  Previously the color would have been subtly incorrect. #28173 (Also in 11, 12)
Fixed ECDH.setPrivateKey() not updating the key. #27688 (Also in 12)
Fixed <webview> focus / blur events not working with contextIsolation enabled. #29025 (Also in 10, 11, 12)
Fixed desktopCapturer.getSources() promise result sometimes never resolving. #28280 (Also in 10, 11, 12)
Fixed postData parameter missing from new-window event. #28542 (Also in 12)
Fixed webFrame spell checker APIs crashing when called in sandboxed renderer. #29087 (Also in 12)
Fixed a bug where, when a JumpList task description exceeded 260 characters, the JumpList was empty, despite valid entries. #28526 (Also in 11, 12)
Fixed a crash when calling shell.trashItem() from the renderer process. #28788 (Also in 12)
Fixed a crash when loading pepper plugins. #28372 (Also in 12)
Fixed a network process crash that could happen when using setCertificateVerifyProc with many concurrent verification requests. #28433 (Also in 11, 12)
Fixed a potential crash when resetting BrowserViews. #27786 (Also in 12)
Fixed a rare crash on Windows that could occur when emitting certain Tray events. #26668 (Also in 12)
Fixed an issue where BrowserViews could have mismatched draggable regions to their bounds. #27952 (Also in 10, 11, 12) 
Fixed an issue where illegal access error could be thrown when nodeIntegrationInSubFrames is enabled. #29170 (Also in 12)
Fixed an issue where select-serial-port callback crashes when called with an invalid serial port ID. #28619 (Also in 12)
Fixed an issue where win.capturePage() never called back after calling hide() for a hidden window on some platforms. #28076 (Also in 11, 12)
Fixed an issue where window.print() did not work properly when printing a pdf from the pdf plugin. #28351 (Also in 12)
Fixed an issue where drag regions on macOS would be offset incorrectly when no drag regions were set,. #29017 (Also in 11, 12)
Fixed an issue where errors thrown in functions passed over the contextBridge could be displayed incorrectly. #28446 (Also in 12)
Fixed an issue where extensions without a background page might not have file access. #29171 (Also in 12)
Fixed an issue where libuv might hang with multiple subframes when nodeIntegrationInSubframes is enabled. #27582 (Also in 10, 11, 12)
Fixed an issue where multiple calls to window.setFullScreen could cause problems. #28763 (Also in 11, 12)
Fixed an issue where some Node.js modules would hang on page reload on Windows. #28335 (Also in 11, 12)
Fixed an issue where some dialogs would stop working on macOS if window.hide() was called while they were open. #28694 (Also in 11, 12)
Fixed an issue where the drag regions in BrowserViews on macOS could be off in their y-axis. #28298 (Also in 10, 11, 12)
Fixed an issue where the thumbar disappeared after win.hide() on Windows. #28390 (Also in 10, 11, 12)
Fixed an issue where the void function Menu.setApplicationMenu would return a value on some platforms. #29129 (Also in 12)
Fixed an issue where the window couldn't be closed if a user tried to quit with a message box showing. #28988 (Also in 12)
Fixed an issue where windows in simpleFullscreen mode were not properly resizing when display metrics changed. #28216 (Also in 11, 12)
Fixed an out-of-bounds access in WebContents.sendInputEvent. #27827 (Also in 10, 11, 12)
Fixed background color not being applied for child windows created by native window.open path. #27593 (Also in 10, 11, 12) 
Fixed bug where TouchBarPopover and TouchBarGroup were no longer rendering. #27901 (Also in 11, 12)
Fixed context menus not being positioned correctly when near the edge of the screen. #28276 (Also in 11, 12)
Fixed corner radius for vibrancy view in macOS 11. #28679 (Also in 11, 12)
Fixed crash when an exception occurs within the event emitter. #29106
Fixed crash when calling getBackgroundColor on a transparent window with no assigned background color. #28187 (Also in 11, 12)
Fixed failing to request file:// resources when web security is disabled. #28557 (Also in 11, 12)
Fixed intensive I/O from asar files causing ERR_FILE_NOT_FOUND after a while. #28203 (Also in 11, 12)
Fixed issue where window.open() would not return an object with a location.href setter when contextIsolation is enabled and nativeWindowOpen is disabled. #27899 (Also in 12)
Fixed navigator.bluetooth.requestDevice. #27902 (Also in 11, 12)
Fixed rare crash when initializing the internal PDF extension. #28453 (Also in 12)
Fixed service worker not working with custom protocol. #28354 (Also in 11, 12)
Fixed the handler set with setWindowOpenHandler not being invoked when a link was middle-clicked or shift-clicked. #28536 (Also in 12)
Fixed the window-all-closed event being emitted while the last BrowserWindow was still in the process of being closed. #28914 (Also in 11, 12)
Fixed warning when worldSafeExecuteJavaScript is disabled. #27928 (Also in 10, 11, 12)
No longer set backgroundColor in default-app when opening custom files / URLs. #28842 (Also in 10, 11, 12)
Support wasm-eval csp behind WebAssemblyCSP flag. #28569 (Also in 11, 12)
Transparent windows cannot be maximized using the Windows system menu or by double clicking the title bar. #28527 (Also in 12)
URLS passed to shell.openExternal on windows are now correctly URI encoded.  This was already occurring on macOS and Linux. #28342 (Also in 10, 11, 12)
Fixed native module compilation with AsyncCleanupHooks on windows. #28110 (Also in 11, 12)
Fixed will-resize and will-move events not scaling the emitted newBounds rectangle to the appropriate Windows display scale factor. #29227 (Also in 11, 12)
Fixed drag and drop not working correctly for some x11 window managers. #29233 (Also in 11, 12)
Other Changes
Non-functional change; updates repository's issue template file. #27825 
Updated community discussions link in default Electron menu. #28459 (Also in 12)
Documentation
Documentation changes: 
26239
tutorial/application-distribution 
tutorial/application-packaging (Removed)
26501
26542 - tutorial/offscreen-rendering
27387 - tutorial/native-file-drag-drop
27486 - tutorial/support
27770 - api/menu
28213 - api/browser-window
28365
29149
End of Support for 10.x.y
Electron 10.x.y has reached end-of-support as per the project's support policy. Developers and applications are encouraged to upgrade to a newer version of Electron."
476,"Release Notes for v10.4.7
Other Changes

Security: backported fixes for CVE-2021-30518, CVE-2021-30516, CVE-2021-30515, CVE-2021-30513, CVE-2021-30512, CVE-2021-30510, CVE-2021-30508. #29249 

End of Support for 10.x.y
Electron 10.x.y has reached end-of-support as per the project's support policy. Developers and applications are encouraged to upgrade to a newer version of Electron.","Release Notes for v10.4.7
Other Changes
Security: backported fixes for CVE-2021-30518, CVE-2021-30516, CVE-2021-30515, CVE-2021-30513, CVE-2021-30512, CVE-2021-30510, CVE-2021-30508. #29249 
End of Support for 10.x.y
Electron 10.x.y has reached end-of-support as per the project's support policy. Developers and applications are encouraged to upgrade to a newer version of Electron."
477,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@13.0.0-beta.28.
# Release Notes for v13.0.0-beta.28
Fixes

Fixed will-resize and will-move events not scaling the emitted newBounds rectangle to the appropriate Windows display scale factor. #29227 (Also in 11, 12)
Fixed permissions issue that was preventing the PDF viewer from displaying. #29252 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@13.0.0-beta.28.
Release Notes for v13.0.0-beta.28
Fixes
Fixed will-resize and will-move events not scaling the emitted newBounds rectangle to the appropriate Windows display scale factor. #29227 (Also in 11, 12)
Fixed permissions issue that was preventing the PDF viewer from displaying. #29252 "
478,"Release Notes for v12.0.9
Fixes

Fixed will-resize and will-move events not scaling the emitted newBounds rectangle to the appropriate Windows display scale factor. #29226 (Also in 11, 13)
Fixed incorrect value of document.focus when opening multiple windows on macOS. #29235 
","Release Notes for v12.0.9
Fixes
Fixed will-resize and will-move events not scaling the emitted newBounds rectangle to the appropriate Windows display scale factor. #29226 (Also in 11, 13)
Fixed incorrect value of document.focus when opening multiple windows on macOS. #29235 "
479,"Release Notes for v10.4.6
Fixes

Fixed &lt;webview&gt; focus / blur events not working with contextIsolation enabled. #29026 (Also in 11, 12, 13)
Fixed an issue where events on webview elements were missing properties if contextIsolation was enabled. #29143 (Also in 11)
","Release Notes for v10.4.6
Fixes
Fixed <webview> focus / blur events not working with contextIsolation enabled. #29026 (Also in 11, 12, 13)
Fixed an issue where events on webview elements were missing properties if contextIsolation was enabled. #29143 (Also in 11)"
480,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@13.0.0-beta.27.
# Release Notes for v13.0.0-beta.27
Fixes

Fixed an issue where illegal access error could be thrown when nodeIntegrationInSubFrames is enabled. #29170 (Also in 12)
Fixed an issue where extensions without a background page might not have file access. #29171 (Also in 12)
Fixed using vibrancy with titleBarStyle together resulting in weird window shadow on macOS. #29165 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@13.0.0-beta.27.
Release Notes for v13.0.0-beta.27
Fixes
Fixed an issue where illegal access error could be thrown when nodeIntegrationInSubFrames is enabled. #29170 (Also in 12)
Fixed an issue where extensions without a background page might not have file access. #29171 (Also in 12)
Fixed using vibrancy with titleBarStyle together resulting in weird window shadow on macOS. #29165 "
481,"Release Notes for v12.0.8
Fixes

Fixed webFrame spell checker APIs crashing when called in sandboxed renderer. #29086 (Also in 13)
Fixed an issue where illegal access error could be thrown when nodeIntegrationInSubFrames is enabled. #29169 (Also in 13)
Fixed an issue where extensions without a background page might not have file access. #29172 (Also in 13)
Fixed an issue where the void function Menu.setApplicationMenu would return a value on some platforms. #29128 (Also in 13)
Fixed corner radius for vibrancy view in macOS 11. #29071 (Also in 11, 13)

Documentation

Documentation changes: #29148
","Release Notes for v12.0.8
Fixes
Fixed webFrame spell checker APIs crashing when called in sandboxed renderer. #29086 (Also in 13)
Fixed an issue where illegal access error could be thrown when nodeIntegrationInSubFrames is enabled. #29169 (Also in 13)
Fixed an issue where extensions without a background page might not have file access. #29172 (Also in 13)
Fixed an issue where the void function Menu.setApplicationMenu would return a value on some platforms. #29128 (Also in 13)
Fixed corner radius for vibrancy view in macOS 11. #29071 (Also in 11, 13)
Documentation
Documentation changes: #29148"
482,"Release Notes for v11.4.7
Fixes

Fixed an incorrect warning about enableRemoteModule being issued when the option was undefined (and thus defaulting to false). #29023 
Fixed an issue where events on webview elements were missing properties if contextIsolation was enabled. #29150 (Also in 10)
Fixed corner radius for vibrancy view in macOS 11. #29072 (Also in 12, 13)

Documentation

Documentation changes: #29147
","Release Notes for v11.4.7
Fixes
Fixed an incorrect warning about enableRemoteModule being issued when the option was undefined (and thus defaulting to false). #29023 
Fixed an issue where events on webview elements were missing properties if contextIsolation was enabled. #29150 (Also in 10)
Fixed corner radius for vibrancy view in macOS 11. #29072 (Also in 12, 13)
Documentation
Documentation changes: #29147"
483,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@13.0.0-beta.26.
# Release Notes for v13.0.0-beta.26
Fixes

Fixed an issue where the void function Menu.setApplicationMenu would return a value on some platforms. #29129 (Also in 12)
Fixed crash when an exception occurs within the event emitter. #29106 

Other Changes

Fixed a rare crash on boot. #29109 

Documentation

Documentation changes: #29149
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@13.0.0-beta.26.
Release Notes for v13.0.0-beta.26
Fixes
Fixed an issue where the void function Menu.setApplicationMenu would return a value on some platforms. #29129 (Also in 12)
Fixed crash when an exception occurs within the event emitter. #29106 
Other Changes
Fixed a rare crash on boot. #29109 
Documentation
Documentation changes: #29149"
484,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@13.0.0-beta.24.
# Release Notes for v13.0.0-beta.24
Other Changes

Updated Chromium to 91.0.4472.38. #29045 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@13.0.0-beta.24.
Release Notes for v13.0.0-beta.24
Other Changes
Updated Chromium to 91.0.4472.38. #29045 "
485,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@13.0.0-beta.23.
# Release Notes for v13.0.0-beta.23
Other Changes

Improved performance of napi_threadsafe_function. #29048 (Also in 12)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@13.0.0-beta.23.
Release Notes for v13.0.0-beta.23
Other Changes
Improved performance of napi_threadsafe_function. #29048 (Also in 12)"
486,"Release Notes for v12.0.7
Fixes

Allow Node.js to manage microtasks queue by using explicit microtasks policy before calling uv_run(). #28972 (Also in 11, 13)
Fixed &lt;webview&gt; focus / blur events not working with contextIsolation enabled. #29024 (Also in 10, 11, 13)
Fixed an issue where drag regions on macOS would be offset incorrectly when no drag regions were set,. #29019 (Also in 11, 13)
Fixed an issue where the window couldn't be closed if a user tried to quit with a message box showing. #28989 (Also in 13)

Other Changes

Improved performance of napi_threadsafe_function. #29047 (Also in 13)
","Release Notes for v12.0.7
Fixes
Allow Node.js to manage microtasks queue by using explicit microtasks policy before calling uv_run(). #28972 (Also in 11, 13)
Fixed <webview> focus / blur events not working with contextIsolation enabled. #29024 (Also in 10, 11, 13)
Fixed an issue where drag regions on macOS would be offset incorrectly when no drag regions were set,. #29019 (Also in 11, 13)
Fixed an issue where the window couldn't be closed if a user tried to quit with a message box showing. #28989 (Also in 13)
Other Changes
Improved performance of napi_threadsafe_function. #29047 (Also in 13)"
487,"Release Notes for v11.4.6
Fixes

Fixed &lt;webview&gt; focus / blur events not working with contextIsolation enabled. #29027 (Also in 10, 12, 13)
Fixed an issue where drag regions on macOS would be offset incorrectly when no drag regions were set,. #29018 (Also in 12, 13)
","Release Notes for v11.4.6
Fixes
Fixed <webview> focus / blur events not working with contextIsolation enabled. #29027 (Also in 10, 12, 13)
Fixed an issue where drag regions on macOS would be offset incorrectly when no drag regions were set,. #29018 (Also in 12, 13)"
488,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@13.0.0-beta.22.
# Release Notes for v13.0.0-beta.22
Fixes

Fixed &lt;webview&gt; focus / blur events not working with contextIsolation enabled. #29025 (Also in 11, 12)
Fixed an issue where drag regions on macOS would be offset incorrectly when no drag regions were set,. #29017 (Also in 11, 12)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@13.0.0-beta.22.
Release Notes for v13.0.0-beta.22
Fixes
Fixed <webview> focus / blur events not working with contextIsolation enabled. #29025 (Also in 11, 12)
Fixed an issue where drag regions on macOS would be offset incorrectly when no drag regions were set,. #29017 (Also in 11, 12)"
489,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@13.0.0-beta.21.
# Release Notes for v13.0.0-beta.21
Features

Added new session.storagePath API to get the path on disk for session-specific data. #28866 

Fixes

Allow Node.js to manage microtasks queue by using explicit microtasks policy before calling uv_run(). #28973 (Also in 11, 12)
Fixed an issue where the window couldn't be closed if a user tried to quit with a message box showing. #28988 (Also in 12)

Other Changes

Updated Chromium to 91.0.4472.33. #28660 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@13.0.0-beta.21.
Release Notes for v13.0.0-beta.21
Features
Added new session.storagePath API to get the path on disk for session-specific data. #28866 
Fixes
Allow Node.js to manage microtasks queue by using explicit microtasks policy before calling uv_run(). #28973 (Also in 11, 12)
Fixed an issue where the window couldn't be closed if a user tried to quit with a message box showing. #28988 (Also in 12)
Other Changes
Updated Chromium to 91.0.4472.33. #28660 "
490,"Release Notes for v11.4.5
Fixes

Allow Node.js to manage microtasks queue by using explicit microtasks policy before calling uv_run(). #28974 (Also in 12, 13)
Fixed an issue where some Node.js modules would hang on page reload on Windows. #28336 (Also in 12, 13)
Fixed an issue where windows in simpleFullscreen mode were not properly resizing when display metrics changed. #28870 (Also in 12, 13)
Fixed the window-all-closed event being emitted while the last BrowserWindow was still in the process of being closed. #28912 (Also in 12, 13)

Other Changes

Security: backported fix for 1161379, 1186641. #28801 
Security: backported fix for CVE-2021-21214. #28934 
Security: backported fix for CVE-2021-21215 and CVE-2021-21216. #28948 
Security: backported fix to CVE-2021-21207. #28930 
Security: backported fix to CVE-2021-21223. #28813 
Security: backported fix to CVE-2021-21227. #28862 
Security: backported fix to CVE-2021-21230. #28902 
Security: backported fix to CVE-2021-21231. #28905 
Security: backported fix to CVE-2021-21233. #28873 
","Release Notes for v11.4.5
Fixes
Allow Node.js to manage microtasks queue by using explicit microtasks policy before calling uv_run(). #28974 (Also in 12, 13)
Fixed an issue where some Node.js modules would hang on page reload on Windows. #28336 (Also in 12, 13)
Fixed an issue where windows in simpleFullscreen mode were not properly resizing when display metrics changed. #28870 (Also in 12, 13)
Fixed the window-all-closed event being emitted while the last BrowserWindow was still in the process of being closed. #28912 (Also in 12, 13)
Other Changes
Security: backported fix for 1161379, 1186641. #28801 
Security: backported fix for CVE-2021-21214. #28934 
Security: backported fix for CVE-2021-21215 and CVE-2021-21216. #28948 
Security: backported fix to CVE-2021-21207. #28930 
Security: backported fix to CVE-2021-21223. #28813 
Security: backported fix to CVE-2021-21227. #28862 
Security: backported fix to CVE-2021-21230. #28902 
Security: backported fix to CVE-2021-21231. #28905 
Security: backported fix to CVE-2021-21233. #28873 "
491,"Release Notes for v10.4.5
Other Changes

Security: backported fix for 1161379, 1186641. #28802 
Security: backported fix for 1192552. #28820 
Security: backported fix for CVE-2021-21214. #28935 
Security: backported fix for CVE-2021-21215 and CVE-2021-21216. #28949 
Security: backported fix for CVE-2021-21222. #28817 
Security: backported fix to CVE-2021-21207. #28931 
Security: backported fix to CVE-2021-21227. #28863 
Security: backported fix to CVE-2021-21230. #28903 
Security: backported fix to CVE-2021-21231. #28906 
Security: backported fix to CVE-2021-21233. #28874 
","Release Notes for v10.4.5
Other Changes
Security: backported fix for 1161379, 1186641. #28802 
Security: backported fix for 1192552. #28820 
Security: backported fix for CVE-2021-21214. #28935 
Security: backported fix for CVE-2021-21215 and CVE-2021-21216. #28949 
Security: backported fix for CVE-2021-21222. #28817 
Security: backported fix to CVE-2021-21207. #28931 
Security: backported fix to CVE-2021-21227. #28863 
Security: backported fix to CVE-2021-21230. #28903 
Security: backported fix to CVE-2021-21231. #28906 
Security: backported fix to CVE-2021-21233. #28874 "
492,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@13.0.0-beta.20.
# Release Notes for v13.0.0-beta.20","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@13.0.0-beta.20.
Release Notes for v13.0.0-beta.20"
493,"Release Notes for v12.0.6
Fixes

Fixed a crash when calling shell.trashItem() from the renderer process. #28787 (Also in 13)
Fixed an issue where multiple calls to window.setFullScreen could cause problems. #28772 (Also in 11, 13)
Fixed an issue where some dialogs would stop working on macOS if window.hide() was called while they were open. #28695 (Also in 11, 13)
Fixed an issue where windows in simpleFullscreen mode were not properly resizing when display metrics changed. #28869 (Also in 11, 13)
Fixed the window-all-closed event being emitted while the last BrowserWindow was still in the process of being closed. #28913 (Also in 11, 13)
No longer set backgroundColor in default-app when opening custom files / URLs. #28841 (Also in 10, 11, 13)

Other Changes

Security: backported fix for 1192552. #28818 
Security: backported fix for CVE-2021-21222. #28815 
Security: backported fix for CVE-2021-21226. #28806 
Security: backported fix to CVE-2021-21223. #28812 
Security: backported fix to CVE-2021-21225. #28809 
Security: backported fix to CVE-2021-21227. #28861 
Security: backported fix to CVE-2021-21230. #28901 
Security: backported fix to CVE-2021-21231. #28904 
Security: backported fix to CVE-2021-21233. #28872 
Security: backported fix to chromium:1155297. #28821 
","Release Notes for v12.0.6
Fixes
Fixed a crash when calling shell.trashItem() from the renderer process. #28787 (Also in 13)
Fixed an issue where multiple calls to window.setFullScreen could cause problems. #28772 (Also in 11, 13)
Fixed an issue where some dialogs would stop working on macOS if window.hide() was called while they were open. #28695 (Also in 11, 13)
Fixed an issue where windows in simpleFullscreen mode were not properly resizing when display metrics changed. #28869 (Also in 11, 13)
Fixed the window-all-closed event being emitted while the last BrowserWindow was still in the process of being closed. #28913 (Also in 11, 13)
No longer set backgroundColor in default-app when opening custom files / URLs. #28841 (Also in 10, 11, 13)
Other Changes
Security: backported fix for 1192552. #28818 
Security: backported fix for CVE-2021-21222. #28815 
Security: backported fix for CVE-2021-21226. #28806 
Security: backported fix to CVE-2021-21223. #28812 
Security: backported fix to CVE-2021-21225. #28809 
Security: backported fix to CVE-2021-21227. #28861 
Security: backported fix to CVE-2021-21230. #28901 
Security: backported fix to CVE-2021-21231. #28904 
Security: backported fix to CVE-2021-21233. #28872 
Security: backported fix to chromium:1155297. #28821 "
494,"Release Notes for v11.4.4
Fixes

Fixed an issue where multiple calls to window.setFullScreen could cause problems. #28773 (Also in 12, 13)
Fixed an issue where some dialogs would stop working on macOS if window.hide() was called while they were open. #28696 (Also in 12, 13)
Fixed crash on m1 mac. #28745 
No longer set backgroundColor in default-app when opening custom files / URLs. #28843 (Also in 10, 12, 13)

Other Changes

Security: Backported fix for chromium:1195333. #28724 
Security: Backported fix to CVE-2021-21199. #28704 
Security: Backported fix to CVE-2021-21201. #28760 
Security: Backported fix to CVE-2021-21202. #28779 
Security: Backported fix to chromium:1190525. #28738 
Security: Backported the fix to CVE-2021-21195. #28697 
Security: backported fix for 1192552. #28819 
Security: backported fix for CVE-2021-21194. #28702 
Security: backported fix for CVE-2021-21206. #28689 
Security: backported fix for CVE-2021-21222. #28816 
Security: backported fix for CVE-2021-21226. #28807 
Security: backported fix to CVE-2021-21198. #28797 
Security: backported fix to CVE-2021-21225. #28810 
Security: backported fix to chromium:1155297. #28822 
Security: backported fix to chromium:1161847. #28799 
Security: backported fix to chromium:1184441. #28796 
","Release Notes for v11.4.4
Fixes
Fixed an issue where multiple calls to window.setFullScreen could cause problems. #28773 (Also in 12, 13)
Fixed an issue where some dialogs would stop working on macOS if window.hide() was called while they were open. #28696 (Also in 12, 13)
Fixed crash on m1 mac. #28745 
No longer set backgroundColor in default-app when opening custom files / URLs. #28843 (Also in 10, 12, 13)
Other Changes
Security: Backported fix for chromium:1195333. #28724 
Security: Backported fix to CVE-2021-21199. #28704 
Security: Backported fix to CVE-2021-21201. #28760 
Security: Backported fix to CVE-2021-21202. #28779 
Security: Backported fix to chromium:1190525. #28738 
Security: Backported the fix to CVE-2021-21195. #28697 
Security: backported fix for 1192552. #28819 
Security: backported fix for CVE-2021-21194. #28702 
Security: backported fix for CVE-2021-21206. #28689 
Security: backported fix for CVE-2021-21222. #28816 
Security: backported fix for CVE-2021-21226. #28807 
Security: backported fix to CVE-2021-21198. #28797 
Security: backported fix to CVE-2021-21225. #28810 
Security: backported fix to chromium:1155297. #28822 
Security: backported fix to chromium:1161847. #28799 
Security: backported fix to chromium:1184441. #28796 "
495,"Release Notes for v10.4.4
Fixes

No longer set backgroundColor in default-app when opening custom files / URLs. #28840 (Also in 11, 12, 13)

Other Changes

Security: Backported fix for chromium:1195333. #28725 
Security: Backported fix to CVE-2021-21199. #28705 
Security: Backported fix to CVE-2021-21201. #28761 
Security: Backported fix to chromium:1190525. #28739 
Security: Backported the fix to CVE-2021-21195. #28698 
Security: backported fix for CVE-2021-21194. #28703 
Security: backported fix for CVE-2021-21202. #28780 
Security: backported fix for CVE-2021-21206. #28690 
Security: backported fix for CVE-2021-21226. #28808 
Security: backported fix to CVE-2021-21198. #28798 
Security: backported fix to CVE-2021-21223. #28814 
Security: backported fix to CVE-2021-21225. #28811 
Security: backported fix to chromium:1155297. #28823 
Security: backported fix to chromium:1161847. #28800 
","Release Notes for v10.4.4
Fixes
No longer set backgroundColor in default-app when opening custom files / URLs. #28840 (Also in 11, 12, 13)
Other Changes
Security: Backported fix for chromium:1195333. #28725 
Security: Backported fix to CVE-2021-21199. #28705 
Security: Backported fix to CVE-2021-21201. #28761 
Security: Backported fix to chromium:1190525. #28739 
Security: Backported the fix to CVE-2021-21195. #28698 
Security: backported fix for CVE-2021-21194. #28703 
Security: backported fix for CVE-2021-21202. #28780 
Security: backported fix for CVE-2021-21206. #28690 
Security: backported fix for CVE-2021-21226. #28808 
Security: backported fix to CVE-2021-21198. #28798 
Security: backported fix to CVE-2021-21223. #28814 
Security: backported fix to CVE-2021-21225. #28811 
Security: backported fix to chromium:1155297. #28823 
Security: backported fix to chromium:1161847. #28800 "
496,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@13.0.0-beta.18.
# Release Notes for v13.0.0-beta.18
Fixes

Fixed a crash when calling shell.trashItem() from the renderer process. #28788 (Also in 12)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@13.0.0-beta.18.
Release Notes for v13.0.0-beta.18
Fixes
Fixed a crash when calling shell.trashItem() from the renderer process. #28788 (Also in 12)"
497,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@13.0.0-beta.17.
# Release Notes for v13.0.0-beta.17
Fixes

Fixed an issue where multiple calls to window.setFullScreen could cause problems. #28763 
Fixed an issue where some dialogs would stop working on macOS if window.hide() was called while they were open. #28694 (Also in 11, 12)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@13.0.0-beta.17.
Release Notes for v13.0.0-beta.17
Fixes
Fixed an issue where multiple calls to window.setFullScreen could cause problems. #28763 
Fixed an issue where some dialogs would stop working on macOS if window.hide() was called while they were open. #28694 (Also in 11, 12)"
498,"Release Notes for v12.0.5
Fixes

Fixed the handler set with setWindowOpenHandler not being invoked when a link was middle-clicked or shift-clicked. #28664 (Also in 13)

Other Changes

Updated Chromium to 89.0.4389.128. #28659 
","Release Notes for v12.0.5
Fixes
Fixed the handler set with setWindowOpenHandler not being invoked when a link was middle-clicked or shift-clicked. #28664 (Also in 13)
Other Changes
Updated Chromium to 89.0.4389.128. #28659 "
499,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@13.0.0-beta.16.
# Release Notes for v13.0.0-beta.16
Fixes

Fixed corner radius for vibrancy view in macOS 11. #28679 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@13.0.0-beta.16.
Release Notes for v13.0.0-beta.16
Fixes
Fixed corner radius for vibrancy view in macOS 11. #28679 "
500,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@13.0.0-beta.14.
# Release Notes for v13.0.0-beta.14
Fixes

Fixed an issue where select-serial-port callback crashes when called with an invalid serial port ID. #28619 (Also in 12)

Other Changes

Security: backported fix for chromium:1196683. #28637 
Updated Chromium to 91.0.4448.0. #28127 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@13.0.0-beta.14.
Release Notes for v13.0.0-beta.14
Fixes
Fixed an issue where select-serial-port callback crashes when called with an invalid serial port ID. #28619 (Also in 12)
Other Changes
Security: backported fix for chromium:1196683. #28637 
Updated Chromium to 91.0.4448.0. #28127 "
501,"Release Notes for v12.0.4
Other Changes

Security: backported fix for chromium:1196683. #28638 
","Release Notes for v12.0.4
Other Changes
Security: backported fix for chromium:1196683. #28638 "
502,"Release Notes for v12.0.3
Fixes

Allow loading source maps from custom protocols and asar bundles. #28616 (Also in 13)
Fixed postData parameter missing from new-window event. #28543 (Also in 13)
Fixed a bug where, when a JumpList task description exceeded 260 characters, the JumpList was empty, despite valid entries. #28525 (Also in 11, 13)
Fixed a crash when loading pepper plugins. #28373 (Also in 13)
Fixed a network process crash that could happen when using setCertificateVerifyProc with many concurrent verification requests. #28465 (Also in 11, 13)
Fixed an issue where select-serial-port callback crashes when called with an invalid serial port ID. #28618 (Also in 13)
Fixed an issue where window.print() did not work properly when printing a pdf from the pdf plugin. #28352 (Also in 13)
Fixed an issue where errors thrown in functions passed over the contextBridge could be displayed incorrectly. #28447 (Also in 13)
Fixed an issue where the thumbar disappeared after win.hide() on Windows. #28389 (Also in 10, 11, 13)
Fixed bug where TouchBarPopover and TouchBarGroup were no longer rendering. #28411 (Also in 11)
Fixed crash when using profiler in devtools. #28531 
Fixed failing to request file:// resources when web security is disabled. #28560 (Also in 11, 13)
Fixed rare crash when initializing the internal PDF extension. #28452 (Also in 13)
Fixed service worker not working with custom protocol. #28355 (Also in 11, 13)
Support wasm-eval csp behind WebAssemblyCSP flag. #28575 (Also in 11, 13)
Transparent windows cannot be maximized using the Windows system menu or by double clicking the title bar. #28622 (Also in 13)

Other Changes

Backported fix for https://crbug.com/1181297. #28601 
Updated Chromium to 89.0.4389.114. #28461 
Updated community discussions link in default Electron menu. #28458 (Also in 13)

Documentation

Documentation changes: #28363
","Release Notes for v12.0.3
Fixes
Allow loading source maps from custom protocols and asar bundles. #28616 (Also in 13)
Fixed postData parameter missing from new-window event. #28543 (Also in 13)
Fixed a bug where, when a JumpList task description exceeded 260 characters, the JumpList was empty, despite valid entries. #28525 (Also in 11, 13)
Fixed a crash when loading pepper plugins. #28373 (Also in 13)
Fixed a network process crash that could happen when using setCertificateVerifyProc with many concurrent verification requests. #28465 (Also in 11, 13)
Fixed an issue where select-serial-port callback crashes when called with an invalid serial port ID. #28618 (Also in 13)
Fixed an issue where window.print() did not work properly when printing a pdf from the pdf plugin. #28352 (Also in 13)
Fixed an issue where errors thrown in functions passed over the contextBridge could be displayed incorrectly. #28447 (Also in 13)
Fixed an issue where the thumbar disappeared after win.hide() on Windows. #28389 (Also in 10, 11, 13)
Fixed bug where TouchBarPopover and TouchBarGroup were no longer rendering. #28411 (Also in 11)
Fixed crash when using profiler in devtools. #28531 
Fixed failing to request file:// resources when web security is disabled. #28560 (Also in 11, 13)
Fixed rare crash when initializing the internal PDF extension. #28452 (Also in 13)
Fixed service worker not working with custom protocol. #28355 (Also in 11, 13)
Support wasm-eval csp behind WebAssemblyCSP flag. #28575 (Also in 11, 13)
Transparent windows cannot be maximized using the Windows system menu or by double clicking the title bar. #28622 (Also in 13)
Other Changes
Backported fix for link. #28601 
Updated Chromium to 89.0.4389.114. #28461 
Updated community discussions link in default Electron menu. #28458 (Also in 13)
Documentation
Documentation changes: #28363"
503,"Release Notes for v11.4.3
Fixes

Fixed a bug where, when a JumpList task description exceeded 260 characters, the JumpList was empty, despite valid entries. #28524 (Also in 12, 13)
Fixed a network process crash that could happen when using setCertificateVerifyProc with many concurrent verification requests. #28470 (Also in 12, 13)
Fixed failing to request file:// resources when web security is disabled. #28589 (Also in 12, 13)
Support wasm-eval csp behind WebAssemblyCSP flag. #28576 (Also in 12, 13)
Transparent windows cannot be maximized using the Windows system menu or by double clicking the title bar. #28635 (Also in 12, 13)

Other Changes

Security: backported fix for chromium:1196683. #28639 
","Release Notes for v11.4.3
Fixes
Fixed a bug where, when a JumpList task description exceeded 260 characters, the JumpList was empty, despite valid entries. #28524 (Also in 12, 13)
Fixed a network process crash that could happen when using setCertificateVerifyProc with many concurrent verification requests. #28470 (Also in 12, 13)
Fixed failing to request file:// resources when web security is disabled. #28589 (Also in 12, 13)
Support wasm-eval csp behind WebAssemblyCSP flag. #28576 (Also in 12, 13)
Transparent windows cannot be maximized using the Windows system menu or by double clicking the title bar. #28635 (Also in 12, 13)
Other Changes
Security: backported fix for chromium:1196683. #28639 "
504,"Release Notes for v10.4.3
Fixes

Fixed an issue where the thumbar disappeared after win.hide() on Windows. #28388 (Also in 11, 12, 13)

Other Changes

Security: backported fix for chromium:1196683. #28640 
Securty: Backported fix to CVE-2021-21174. #28234 
","Release Notes for v10.4.3
Fixes
Fixed an issue where the thumbar disappeared after win.hide() on Windows. #28388 (Also in 11, 12, 13)
Other Changes
Security: backported fix for chromium:1196683. #28640 
Securty: Backported fix to CVE-2021-21174. #28234 "
505,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@13.0.0-beta.13.
# Release Notes for v13.0.0-beta.13
Fixes

Allow loading source maps from custom protocols and asar bundles. #28615 (Also in 12)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@13.0.0-beta.13.
Release Notes for v13.0.0-beta.13
Fixes
Allow loading source maps from custom protocols and asar bundles. #28615 (Also in 12)"
506,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@13.0.0-beta.12.
# Release Notes for v13.0.0-beta.12
Fixes

Fixed postData parameter missing from new-window event. #28542 (Also in 12)
Fixed a bug where, when a JumpList task description exceeded 260 characters, the JumpList was empty, despite valid entries. #28526 (Also in 11, 12)
Fixed an issue where errors thrown in functions passed over the contextBridge could be displayed incorrectly. #28446 (Also in 12)
Fixed failing to request file:// resources when web security is disabled. #28557 
Fixed the handler set with setWindowOpenHandler not being invoked when a link was middle-clicked or shift-clicked. #28536 
Support wasm-eval csp behind WebAssemblyCSP flag. #28569 (Also in 12)
Transparent windows cannot be maximized using the Windows system menu or by double clicking the title bar. #28527 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@13.0.0-beta.12.
Release Notes for v13.0.0-beta.12
Fixes
Fixed postData parameter missing from new-window event. #28542 (Also in 12)
Fixed a bug where, when a JumpList task description exceeded 260 characters, the JumpList was empty, despite valid entries. #28526 (Also in 11, 12)
Fixed an issue where errors thrown in functions passed over the contextBridge could be displayed incorrectly. #28446 (Also in 12)
Fixed failing to request file:// resources when web security is disabled. #28557 
Fixed the handler set with setWindowOpenHandler not being invoked when a link was middle-clicked or shift-clicked. #28536 
Support wasm-eval csp behind WebAssemblyCSP flag. #28569 (Also in 12)
Transparent windows cannot be maximized using the Windows system menu or by double clicking the title bar. #28527 "
507,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@13.0.0-beta.11.
# Release Notes for v13.0.0-beta.11
Fixes

Fixed a network process crash that could happen when using setCertificateVerifyProc with many concurrent verification requests. #28433 (Also in 12)
Fixed rare crash when initializing the internal PDF extension. #28453 (Also in 12)

Other Changes

Updated community discussions link in default Electron menu. #28459 (Also in 12)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@13.0.0-beta.11.
Release Notes for v13.0.0-beta.11
Fixes
Fixed a network process crash that could happen when using setCertificateVerifyProc with many concurrent verification requests. #28433 (Also in 12)
Fixed rare crash when initializing the internal PDF extension. #28453 (Also in 12)
Other Changes
Updated community discussions link in default Electron menu. #28459 (Also in 12)"
508,"Release Notes for v11.4.2
Fixes

Fixed an issue where the thumbar disappeared after win.hide() on Windows. #28391 (Also in 10, 12, 13)
Fixed bug where TouchBarPopover and TouchBarGroup were no longer rendering. #28412 (Also in 12)
Fixed crash when exiting app with active nodejs worker_threads. #28471 
Fixed service worker not working with custom protocol. #28353 (Also in 12, 13)

Documentation

Documentation changes: #28364
","Release Notes for v11.4.2
Fixes
Fixed an issue where the thumbar disappeared after win.hide() on Windows. #28391 (Also in 10, 12, 13)
Fixed bug where TouchBarPopover and TouchBarGroup were no longer rendering. #28412 (Also in 12)
Fixed crash when exiting app with active nodejs worker_threads. #28471 
Fixed service worker not working with custom protocol. #28353 (Also in 12, 13)
Documentation
Documentation changes: #28364"
509,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@13.0.0-beta.9.
# Release Notes for v13.0.0-beta.9
Features

Added ability to enable field trials. #28402 (Also in 11, 12)

Fixes

Fixed an issue where the thumbar disappeared after win.hide() on Windows. #28390 (Also in 10, 11, 12)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@13.0.0-beta.9.
Release Notes for v13.0.0-beta.9
Features
Added ability to enable field trials. #28402 (Also in 11, 12)
Fixes
Fixed an issue where the thumbar disappeared after win.hide() on Windows. #28390 (Also in 10, 11, 12)"
510,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@13.0.0-beta.8.
# Release Notes for v13.0.0-beta.8
Features

The submitURL option for crashReporter.start is no longer a required argument when uploadToServer is false. #28283 

Fixes

Fixed a crash when loading pepper plugins. #28372 (Also in 12)
Fixed an issue where window.print() did not work properly when printing a pdf from the pdf plugin. #28351 (Also in 12)
Fixed an issue where some Node.js modules would hang on page reload on Windows. #28335 (Also in 12)
Fixed service worker not working with custom protocol. #28354 (Also in 11, 12)
URLS passed to shell.openExternal on windows are now correctly URI encoded.  This was already occurring on macOS and Linux. #28342 (Also in 10, 11, 12)

Documentation

Documentation changes: #28365
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@13.0.0-beta.8.
Release Notes for v13.0.0-beta.8
Features
The submitURL option for crashReporter.start is no longer a required argument when uploadToServer is false. #28283 
Fixes
Fixed a crash when loading pepper plugins. #28372 (Also in 12)
Fixed an issue where window.print() did not work properly when printing a pdf from the pdf plugin. #28351 (Also in 12)
Fixed an issue where some Node.js modules would hang on page reload on Windows. #28335 (Also in 12)
Fixed service worker not working with custom protocol. #28354 (Also in 11, 12)
URLS passed to shell.openExternal on windows are now correctly URI encoded.  This was already occurring on macOS and Linux. #28342 (Also in 10, 11, 12)
Documentation
Documentation changes: #28365"
511,"Release Notes for v12.0.2
Fixes

Colors returned from systemPreferences.getAccentColor(), getSystemColor and getColor are now correctly converted into the devices color space.  Previously the color would have been subtly incorrect. #28172 (Also in 11, 13)
Fixed desktopCapturer.getSources() promise result sometimes never resolving. #28281 (Also in 10, 11, 13)
Fixed a rare crash on Windows that could occur when emitting certain Tray events. #28111 
Fixed an issue where some Node.js modules would hang on page reload on Windows. #28337 (Also in 13)
Fixed an issue where the drag regions in BrowserViews on macOS could be off in their y-axis. #28296 (Also in 10, 11, 13)
Fixed context menus not being positioned correctly when near the edge of the screen. #28277 (Also in 11, 13)
Fixed crash when calling getBackgroundColor on a transparent window with no assigned background color. #28188 (Also in 11, 13)
Fixed intensive I/O from asar files causing ERR_FILE_NOT_FOUND after a while. #28202 (Also in 11, 13)
URLS passed to shell.openExternal on windows are now correctly URI encoded.  This was already occurring on macOS and Linux. #28341 (Also in 10, 11, 13)

Other Changes

Fixed native module compilation with AsyncCleanupHooks on windows. #28109 (Also in 11, 13)
Updated Chromium to 89.0.4389.90. #28174 

Documentation

Documentation changes: #28214
","Release Notes for v12.0.2
Fixes
Colors returned from systemPreferences.getAccentColor(), getSystemColor and getColor are now correctly converted into the devices color space.  Previously the color would have been subtly incorrect. #28172 (Also in 11, 13)
Fixed desktopCapturer.getSources() promise result sometimes never resolving. #28281 (Also in 10, 11, 13)
Fixed a rare crash on Windows that could occur when emitting certain Tray events. #28111 
Fixed an issue where some Node.js modules would hang on page reload on Windows. #28337 (Also in 13)
Fixed an issue where the drag regions in BrowserViews on macOS could be off in their y-axis. #28296 (Also in 10, 11, 13)
Fixed context menus not being positioned correctly when near the edge of the screen. #28277 (Also in 11, 13)
Fixed crash when calling getBackgroundColor on a transparent window with no assigned background color. #28188 (Also in 11, 13)
Fixed intensive I/O from asar files causing ERR_FILE_NOT_FOUND after a while. #28202 (Also in 11, 13)
URLS passed to shell.openExternal on windows are now correctly URI encoded.  This was already occurring on macOS and Linux. #28341 (Also in 10, 11, 13)
Other Changes
Fixed native module compilation with AsyncCleanupHooks on windows. #28109 (Also in 11, 13)
Updated Chromium to 89.0.4389.90. #28174 
Documentation
Documentation changes: #28214"
512,"Release Notes for v11.4.1
Fixes

Fixed desktopCapturer.getSources() promise result sometimes never resolving. #28282 (Also in 10, 12, 13)
Fixed an issue where the drag regions in BrowserViews on macOS could be off in their y-axis. #28297 (Also in 10, 12, 13)
Fixed context menus not being positioned correctly when near the edge of the screen. #28278 (Also in 12, 13)
Fixed intensive I/O from asar files causing ERR_FILE_NOT_FOUND after a while. #28201 (Also in 12, 13)
Fixed issue where window.open() would not return an object with a location.href setter when contextIsolation is enabled and nativeWindowOpen is disabled. #28161 (Also in 10, 12)
URLS passed to shell.openExternal on windows are now correctly URI encoded.  This was already occurring on macOS and Linux. #28340 (Also in 10, 12, 13)

Other Changes

Security: Backported fix to CVE-2021-21174. #28233 
Security: Backported the fix to CVE-2021-21169. #28236 
Security: backported fix for CVE-2021-21166. #28132 
Security: backported fix for CVE-2021-21172. #28294 
Security: backported fix for CVE-2021-21175. #28247 
Security: backported fix for CVE-2021-21179. #28249 
Security: backported fix for chromium:1167357. #28198 

Documentation

Documentation changes: #28212
","Release Notes for v11.4.1
Fixes
Fixed desktopCapturer.getSources() promise result sometimes never resolving. #28282 (Also in 10, 12, 13)
Fixed an issue where the drag regions in BrowserViews on macOS could be off in their y-axis. #28297 (Also in 10, 12, 13)
Fixed context menus not being positioned correctly when near the edge of the screen. #28278 (Also in 12, 13)
Fixed intensive I/O from asar files causing ERR_FILE_NOT_FOUND after a while. #28201 (Also in 12, 13)
Fixed issue where window.open() would not return an object with a location.href setter when contextIsolation is enabled and nativeWindowOpen is disabled. #28161 (Also in 10, 12)
URLS passed to shell.openExternal on windows are now correctly URI encoded.  This was already occurring on macOS and Linux. #28340 (Also in 10, 12, 13)
Other Changes
Security: Backported fix to CVE-2021-21174. #28233 
Security: Backported the fix to CVE-2021-21169. #28236 
Security: backported fix for CVE-2021-21166. #28132 
Security: backported fix for CVE-2021-21172. #28294 
Security: backported fix for CVE-2021-21175. #28247 
Security: backported fix for CVE-2021-21179. #28249 
Security: backported fix for chromium:1167357. #28198 
Documentation
Documentation changes: #28212"
513,"Release Notes for v10.4.2
Fixes

Fixed desktopCapturer.getSources() promise result sometimes never resolving. #28279 (Also in 11, 12, 13)
Fixed an issue where the drag regions in BrowserViews on macOS could be off in their y-axis. #28295 (Also in 11, 12, 13)
URLS passed to shell.openExternal on windows are now correctly URI encoded.  This was already occurring on macOS and Linux. #28339 (Also in 11, 12, 13)

Other Changes

Security: Backported the fix to CVE-2021-21169. #28237 
Security: backported fix for CVE-2021-21166. #28133 
Security: backported fix for CVE-2021-21172. #28299 
Security: backported fix for CVE-2021-21175. #28248 
Security: backported fix for CVE-2021-21179. #28250 
Security: backported fix for chromium:1167357. #28199 
","Release Notes for v10.4.2
Fixes
Fixed desktopCapturer.getSources() promise result sometimes never resolving. #28279 (Also in 11, 12, 13)
Fixed an issue where the drag regions in BrowserViews on macOS could be off in their y-axis. #28295 (Also in 11, 12, 13)
URLS passed to shell.openExternal on windows are now correctly URI encoded.  This was already occurring on macOS and Linux. #28339 (Also in 11, 12, 13)
Other Changes
Security: Backported the fix to CVE-2021-21169. #28237 
Security: backported fix for CVE-2021-21166. #28133 
Security: backported fix for CVE-2021-21172. #28299 
Security: backported fix for CVE-2021-21175. #28248 
Security: backported fix for CVE-2021-21179. #28250 
Security: backported fix for chromium:1167357. #28199 "
514,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@13.0.0-beta.7.
# Release Notes for v13.0.0-beta.7
Features

Added process.contextIsolated property that indicates whether the current renderer context has contextIsolation enabled. #28252 

Fixes

Fixed desktopCapturer.getSources() promise result sometimes never resolving. #28280 (Also in 10, 11, 12)
Fixed an issue where the drag regions in BrowserViews on macOS could be off in their y-axis. #28298 (Also in 10, 11, 12)
Fixed context menus not being positioned correctly when near the edge of the screen. #28276 (Also in 11, 12)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@13.0.0-beta.7.
Release Notes for v13.0.0-beta.7
Features
Added process.contextIsolated property that indicates whether the current renderer context has contextIsolation enabled. #28252 
Fixes
Fixed desktopCapturer.getSources() promise result sometimes never resolving. #28280 (Also in 10, 11, 12)
Fixed an issue where the drag regions in BrowserViews on macOS could be off in their y-axis. #28298 (Also in 10, 11, 12)
Fixed context menus not being positioned correctly when near the edge of the screen. #28276 (Also in 11, 12)"
515,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@13.0.0-beta.6.
# Release Notes for v13.0.0-beta.6
Features

Added process.contextId used by @electron/remote. #28251 

Fixes

Fixed an issue where windows in simpleFullscreen mode were not properly resizing when display metrics changed. #28216 
Fixed intensive I/O from asar files causing ERR_FILE_NOT_FOUND after a while. #28203 (Also in 11, 12)

Documentation

Documentation changes: #28213
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@13.0.0-beta.6.
Release Notes for v13.0.0-beta.6
Features
Added process.contextId used by @electron/remote. #28251 
Fixes
Fixed an issue where windows in simpleFullscreen mode were not properly resizing when display metrics changed. #28216 
Fixed intensive I/O from asar files causing ERR_FILE_NOT_FOUND after a while. #28203 (Also in 11, 12)
Documentation
Documentation changes: #28213"
516,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@13.0.0-beta.5.
# Release Notes for v13.0.0-beta.5
Fixes

Child windows with specified background colors or transpency now work as intended. #28112 (Also in 12)
Colors returned from systemPreferences.getAccentColor(), getSystemColor and getColor are now correctly converted into the devices color space.  Previously the color would have been subtly incorrect. #28173 (Also in 11, 12)
Fixed crash when calling getBackgroundColor on a transparent window with no assigned background color. #28187 (Also in 11, 12)

Other Changes

Fixed native module compilation with AsyncCleanupHooks on windows. #28110 (Also in 11)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@13.0.0-beta.5.
Release Notes for v13.0.0-beta.5
Fixes
Child windows with specified background colors or transpency now work as intended. #28112 (Also in 12)
Colors returned from systemPreferences.getAccentColor(), getSystemColor and getColor are now correctly converted into the devices color space.  Previously the color would have been subtly incorrect. #28173 (Also in 11, 12)
Fixed crash when calling getBackgroundColor on a transparent window with no assigned background color. #28187 (Also in 11, 12)
Other Changes
Fixed native module compilation with AsyncCleanupHooks on windows. #28110 (Also in 11)"
517,"Release Notes for v11.4.0
Features

Added support for the des-ede3 cipher in node crypto. #27993 (Also in 12)

Fixes

Colors returned from systemPreferences.getAccentColor(), getSystemColor and getColor are now correctly converted into the devices color space.  Previously the color would have been subtly incorrect. #28171 (Also in 12, 13)
Fixed a potential crash when resetting BrowserViews. #27948 (Also in 10, 12)
Fixed an issue where BrowserViews could have mismatched draggable regions to their bounds. #27987 (Also in 10, 12)
Fixed an issue where win.capturePage() never called back after calling hide() for a hidden window on some platforms. #28074 (Also in 12, 13)
Fixed an issue where libuv might hang with multiple subframes when nodeIntegrationInSubframes is enabled. #27880 (Also in 10, 12)
Fixed an out-of-bounds access in WebContents.sendInputEvent. #27853 (Also in 10, 12)
Fixed background color not being applied for child windows created by native window.open path. #27944 (Also in 10, 12)
Fixed crash when calling getBackgroundColor on a transparent window with no assigned background color. #28186 (Also in 12, 13)
Fixed native window.open() to not use windowName/frameName as title by default. #27813 (Also in 10, 12)
Fixed navigator.bluetooth.requestDevice crash. #27941 (Also in 12)
Fixed warning when worldSafeExecuteJavaScript is disabled. #27968 (Also in 10, 12)

Other Changes

Backported fix for CVE-2020-27844. #28101 
Fixed native module compilation with AsyncCleanupHooks on windows. #28108 (Also in 12, 13)
Security: backported fix for 1180871. #28046 
Security: backported fix for CVE-2021-21160. #28093 
Security: backported fix for CVE-2021-21162. #28091 
Security: backported fix for CVE-2021-21165. #28089 
Security: backported fix for CVE-2021-21181. #28097 
Security: backported fix for CVE-2021-21193. #28165 
Security: backported fix to 1177593. #28050 
","Release Notes for v11.4.0
Features
Added support for the des-ede3 cipher in node crypto. #27993 (Also in 12)
Fixes
Colors returned from systemPreferences.getAccentColor(), getSystemColor and getColor are now correctly converted into the devices color space.  Previously the color would have been subtly incorrect. #28171 (Also in 12, 13)
Fixed a potential crash when resetting BrowserViews. #27948 (Also in 10, 12)
Fixed an issue where BrowserViews could have mismatched draggable regions to their bounds. #27987 (Also in 10, 12)
Fixed an issue where win.capturePage() never called back after calling hide() for a hidden window on some platforms. #28074 (Also in 12, 13)
Fixed an issue where libuv might hang with multiple subframes when nodeIntegrationInSubframes is enabled. #27880 (Also in 10, 12)
Fixed an out-of-bounds access in WebContents.sendInputEvent. #27853 (Also in 10, 12)
Fixed background color not being applied for child windows created by native window.open path. #27944 (Also in 10, 12)
Fixed crash when calling getBackgroundColor on a transparent window with no assigned background color. #28186 (Also in 12, 13)
Fixed native window.open() to not use windowName/frameName as title by default. #27813 (Also in 10, 12)
Fixed navigator.bluetooth.requestDevice crash. #27941 (Also in 12)
Fixed warning when worldSafeExecuteJavaScript is disabled. #27968 (Also in 10, 12)
Other Changes
Backported fix for CVE-2020-27844. #28101 
Fixed native module compilation with AsyncCleanupHooks on windows. #28108 (Also in 12, 13)
Security: backported fix for 1180871. #28046 
Security: backported fix for CVE-2021-21160. #28093 
Security: backported fix for CVE-2021-21162. #28091 
Security: backported fix for CVE-2021-21165. #28089 
Security: backported fix for CVE-2021-21181. #28097 
Security: backported fix for CVE-2021-21193. #28165 
Security: backported fix to 1177593. #28050 "
518,"Release Notes for v10.4.1
Fixes

Fixed BrowserWindow.documentEdited property on top level window. #28159 (Also in 11, 12)
Fixed a potential crash when resetting BrowserViews. #27946 (Also in 11, 12)
Fixed an issue where BrowserViews could have mismatched draggable regions to their bounds. #27986 (Also in 11, 12)
Fixed an issue where libuv might hang with multiple subframes when nodeIntegrationInSubframes is enabled. #27881 (Also in 11, 12)
Fixed an out-of-bounds access in WebContents.sendInputEvent. #27854 (Also in 11, 12)
Fixed background color not being applied for child windows created by native window.open path. #27945 (Also in 11, 12)
Fixed issue where window.open() would not return an object with a location.href setter when contextIsolation is enabled and nativeWindowOpen is disabled. #28160 (Also in 12)
Fixed native window.open() to not use windowName/frameName as title by default. #27868 (Also in 11, 12)
Fixed warning when worldSafeExecuteJavaScript is disabled. #27974 (Also in 11, 12)

Other Changes

Security: backported fix for 1180871. #28047 
Security: backported fix for CVE-2021-21160. #28094 
Security: backported fix for CVE-2021-21162. #28092 
Security: backported fix for CVE-2021-21165. #28090 
Security: backported fix for CVE-2021-21181. #28098 
Security: backported fix for CVE-2021-21193. #28166 
Security: backported fix to 1177593. #28051 
","Release Notes for v10.4.1
Fixes
Fixed BrowserWindow.documentEdited property on top level window. #28159 (Also in 11, 12)
Fixed a potential crash when resetting BrowserViews. #27946 (Also in 11, 12)
Fixed an issue where BrowserViews could have mismatched draggable regions to their bounds. #27986 (Also in 11, 12)
Fixed an issue where libuv might hang with multiple subframes when nodeIntegrationInSubframes is enabled. #27881 (Also in 11, 12)
Fixed an out-of-bounds access in WebContents.sendInputEvent. #27854 (Also in 11, 12)
Fixed background color not being applied for child windows created by native window.open path. #27945 (Also in 11, 12)
Fixed issue where window.open() would not return an object with a location.href setter when contextIsolation is enabled and nativeWindowOpen is disabled. #28160 (Also in 12)
Fixed native window.open() to not use windowName/frameName as title by default. #27868 (Also in 11, 12)
Fixed warning when worldSafeExecuteJavaScript is disabled. #27974 (Also in 11, 12)
Other Changes
Security: backported fix for 1180871. #28047 
Security: backported fix for CVE-2021-21160. #28094 
Security: backported fix for CVE-2021-21162. #28092 
Security: backported fix for CVE-2021-21165. #28090 
Security: backported fix for CVE-2021-21181. #28098 
Security: backported fix for CVE-2021-21193. #28166 
Security: backported fix to 1177593. #28051 "
519,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@13.0.0-beta.4.
# Release Notes for v13.0.0-beta.4
Fixes

Fixed an issue where win.capturePage() never called back after calling hide() for a hidden window on some platforms. #28076 (Also in 11, 12)

Other Changes

Updated Chromium to 90.0.4415.0. #28082 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@13.0.0-beta.4.
Release Notes for v13.0.0-beta.4
Fixes
Fixed an issue where win.capturePage() never called back after calling hide() for a hidden window on some platforms. #28076 (Also in 11, 12)
Other Changes
Updated Chromium to 90.0.4415.0. #28082 "
520,"Release Notes for v12.0.1
Features

Added support for the des-ede3 cipher in node crypto. #27992 (Also in 11)

Fixes

Child windows with specified background colors or transparency now work as intended. #28107 
Fixed an issue where BrowserViews could have mismatched draggable regions to their bounds. #27988 (Also in 10, 11)
Fixed an issue where win.capturePage() never called back after calling hide() for a hidden window on some platforms. #28075 (Also in 11, 13)
Fixed using navigator.setAppBadge and navigator.clearAppBadge from a service worker in Electron. #28011 
Fixed warning when worldSafeExecuteJavaScript is disabled. #27969 (Also in 10, 11)

Other Changes

Updated Chromium to 89.0.4389.82. #27960 
[a11y] Fixes broken word navigation for certain alphanumeric characters. #27991 
","Release Notes for v12.0.1
Features
Added support for the des-ede3 cipher in node crypto. #27992 (Also in 11)
Fixes
Child windows with specified background colors or transparency now work as intended. #28107 
Fixed an issue where BrowserViews could have mismatched draggable regions to their bounds. #27988 (Also in 10, 11)
Fixed an issue where win.capturePage() never called back after calling hide() for a hidden window on some platforms. #28075 (Also in 11, 13)
Fixed using navigator.setAppBadge and navigator.clearAppBadge from a service worker in Electron. #28011 
Fixed warning when worldSafeExecuteJavaScript is disabled. #27969 (Also in 10, 11)
Other Changes
Updated Chromium to 89.0.4389.82. #27960 
[a11y] Fixes broken word navigation for certain alphanumeric characters. #27991 "
521,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@13.0.0-beta.3.
# Release Notes for v13.0.0-beta.3

None: No code changes since v13.0.0-beta2
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@13.0.0-beta.3.
Release Notes for v13.0.0-beta.3
None: No code changes since v13.0.0-beta2"
522,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@13.0.0-beta.2.
# Release Notes for v13.0.0-beta.2
Breaking Changes

Fixed so window.open() parameter frameName is no longer set as window title. #27481 

Features

Added event.senderFrame property returning the originating webFrameMain of the IPC message. #26764 (Also in 12)
Added exitCode to render-process-gone details. #27580 (Also in 12)
Added frame and webContents properties to the details object in webRequest handlers. #27078 (Also in 12)
Added process.uptime() to sandboxed renderers. #26684 
Added roundedCorners option for BrowserWindow. #27572 
Added webFrameMain.send() / webFrameMain.postMessage(). #26807 (Also in 12)
Added win.setTopBrowserView() so that BrowserViews can be raised. #27007 (Also in 10, 11, 12)
Added missing webFrameMain.executeJavaScriptInIsolatedWorld(). #26913 (Also in 12)
Added missing fields to the parameters emitted as part of the context-menu event. #26788 
Added support for passing DOM elements over the context bridge. #26776 
Added support for registering Manifest V3 extension service workers.
Added 'registration-completed' event to ServiceWorkers. #27562 
Additional permission checks are now routed through session.setPermissionCheckHandler.  These include Notification.permission, and permission.query.  Please note that the webContents parameter to the check handler can now be null. #19903 
Allow ContextBridge exposeInMainWorld method to expose non-object APIs. #26594 (Also in 12)
Allowed skipping process type transformation in win.SetVisibleOnAllWorkspaces on macOS. #27200 
Changed the default value of contextIsolation to true. #26890 (Also in 12)
Changed the default value of worldSafeExecuteJavaScript to be true. #26889 (Also in 12)
Made trafficLightPosition option work for customButtonOnHover window. #26789 
Made win.setAspectRatio() work on Windows. #26941 (Also in 11, 12)

Fixes

Added Electron DLLs like libGLESv2.dll to symbol server. #26962 (Also in 9, 10, 11, 12)
Added default Bluetooth permission strings to info.plist. #26730 (Also in 11, 12)
Apps requesting the CAMERA_PAN_TILT_ZOOM permission will have the permission request handler called with a permission string of ""media"" instead of ""font-access"". #27006 
Fixed ""screen"" methods to be reassignable again. #26818 (Also in 11, 12)
Fixed CSP with unsafe-eval detection with Trusted Types. #27446 (Also in 9, 10, 11, 12)
Fixed ECDH.setPrivateKey() not updating the key. #27688 (Also in 12)
Fixed OS-level shortcuts on macOS (e.g. Ctrl + F2, ⌘ + ~). #27701 (Also in 11, 12)
Fixed PDF viewer failing to load resources. #27499 (Also in 12)
Fixed PDFs not loading in the PDF viewer. #27209 (Also in 12)
Fixed &lt;webview&gt; not working with Trusted Types. #27445 (Also in 9, 10, 11, 12)
Fixed contentTracing.stopRecording() not rejecting when there is no trace in progress. #26608 (Also in 11, 12)
Fixed hiddenInset titleBarStyle's abnormal fullscreen titlebar. Fix hiddenInset titleBarStyle not working with trafficLightPosition option. #27489 
Fixed protocol methods not being accessible via remote.protocol. #27009 (Also in 11, 12)
Fixed readdir/readdirSync (w/ withFileTypes) failing on a deep directory within archive. #26865 (Also in 10, 11, 12)
Fixed screen methods not being accessible via remote.screen. #26620 (Also in 11, 12)
Fixed systemPreferences.effectiveAppearance returning systemPreferences.getAppLevelAppearance(). #26852 (Also in 9, 10, 11, 12)
Fixed a crash in renderer process when loading non-context-aware modules with app.allowRendererProcessReuse enabled. #27296 (Also in 12)
Fixed a crash that could occur on app quit when using the remote module. #27038 (Also in 11, 12)
Fixed a crash when calling crypto.createDiffieHellman() with certain parameters. #27674 (Also in 12)
Fixed a crash when calling webContents.fromId with an unknown ID. #26609 (Also in 11, 12)
Fixed a memory leak in desktopCapturer.getSources. #27031 (Also in 9, 10, 11, 12)
Fixed a memory leak when creating BrowserWindows. #27621 (Also in 11, 12)
Fixed a potential crash when resetting BrowserViews. #27786 (Also in 10, 11, 12)
Fixed a rare crash on Windows that could occur when emitting certain Tray events. #26668 (Also in 12)
Fixed a use-after-free bug during shutdown when using off-the-record sessions. #26680 
Fixed a use-after-free error that could occur when destroying a WebContents during the did-stop-loading event. #26702 (Also in 12)
Fixed an erroneous enableBlinkFeatures warning shown webviews which enabled no Blink features. #27753 (Also in 10, 11, 12)
Fixed an issue that a message box in GTK contains no buttons. #26857 (Also in 10, 11, 12)
Fixed an issue where BrowserViews couldn't be effectively reparented. #27000 (Also in 11, 12)
Fixed an issue where SIGINT was improperly handled in Node.js processes. #26933 (Also in 10, 11, 12)
Fixed an issue where BrowserViews could have mismatched draggable regions to their bounds. #27952 (Also in 10, 11, 12)
Fixed an issue where contextBridge might incorrectly try to serialize some WebAssembly objects. #27518 
Fixed an issue where event.reply could sometimes not deliver a reply to an IPC message when cross-site iframes were present. #26875 (Also in 9, 10, 11, 12)
Fixed an issue where deleted download directories would be sometimes recreated by the operating system. #27745 (Also in 10, 11, 12)
Fixed an issue where draggable regions did not work exclusively on BrowserViews on Windows. #26738 (Also in 10, 11, 12)
Fixed an issue where draggable regions in BrowserWindow causes BrowserView to become draggable in non-correspondent places. #26690 (Also in 10, 11, 12)
Fixed an issue where libuv might hang with multiple subframes when nodeIntegrationInSubframes is enabled. #27582 (Also in 10, 11, 12)
Fixed an issue where non-draggable regions on BrowserViews could have incorrectly calculated bounds. #27147 (Also in 10, 11, 12)
Fixed an issue where renderer process stack traces were broken with contextIsolation enabled. #26820 (Also in 11, 12)
Fixed an issue where some async_hooks were not properly emitted after an error in the renderer process. #26752 (Also in 11, 12)
Fixed an issue where some draggable regions were not clickable when loaded into BrowserViews on Windows. #27143 (Also in 10, 11, 12)
Fixed an issue where the zoom button was missing for windows with titleBarStyle: hiddenInset on macOS. #27428 (Also in 12)
Fixed an issue whereby remote.screen EventEmitter methods are undefined in the renderer. #26809 (Also in 11, 12)
Fixed an occasional white flicker present when rendering BrowserViews in close succession. #27585 (Also in 10, 11, 12)
Fixed an out-of-bounds access in WebContents.sendInputEvent. #27827 (Also in 10, 11, 12)
Fixed background color not being applied for child windows created by native window.open path. #27593 (Also in 10, 11, 12)
Fixed behavior of 302/303/307 redirect responses in the protocol module. #26297 
Fixed bug in which WebContents.mainFrame would sometimes return undefined. #27648 (Also in 12)
Fixed bug where TouchBarPopover and TouchBarGroup were no longer rendering. #27901 (Also in 11, 12)
Fixed callbacks passed via the remote module not being released after all references are dropped. #26808 (Also in 11, 12)
Fixed crash when a keyboard event immediately precedes calling browserWindow.close() on Windows. #27315 (Also in 10, 11, 12)
Fixed crash when destroying WebContents in the crashed event. #27730 (Also in 10, 11, 12)
Fixed crash when extension fails to load. #27561 (Also in 10, 11, 12)
Fixed import of unpacked node modules. #26749 (Also in 11, 12)
Fixed issue where window.open() would not return an object with a location.href setter when contextIsolation is enabled and nativeWindowOpen is disabled. #27899 (Also in 10, 11, 12)
Fixed memory leak when sending non-primitives over the context bridge. #27630 (Also in 10, 11, 12)
Fixed menubar not clickable on Windows and Linux. #27545 (Also in 12)
Fixed missing presentation mode option in PDF viewer. #27223 (Also in 12)
Fixed native window freeze on Windows when Electron app is sent to tray and external display changes. #27615 (Also in 11, 12)
Fixed native window.open() to not use windowName/frameName as title by default. #27521 (Also in 10, 11, 12)
Fixed navigator.bluetooth.requestDevice. #27902 (Also in 11, 12)
Fixed regression that crashed Electron when processing an invalid icon. #27441 (Also in 11, 12)
Fixed shutdown crash when quitting with in-progress downloads. #27342 (Also in 10, 11, 12)
Fixed uncaught promise rejection when creating webContents with javascript disabled. #26837 (Also in 10, 11, 12)
Fixed using navigator.setAppBadge and navigator.clearAppBadge in Electron. #27067 (Also in 12)
Fixed warning when worldSafeExecuteJavaScript is disabled. #27928 (Also in 10, 11, 12)
Fixed window with customButtonsOnHover option not having rounded corner on macOS. #26901 (Also in 12)
Increase stack size on windows x64 to 8MB. #27376 (Also in 10, 11, 12)
Made BrowserWindow.setWindowButtonVisibility work for window with customButtonsOnHover titlebar style. #27073 

Other Changes

Fixed crash when loading wasm modules in child node process with mac arm64 > 11.2. #27672 (Also in 11, 12)
Non-functional change; updates repository's issue template file. #27825 
Removed deprecated BrowserWindow extension APIs. #26696 
Removed deprecated crashReporter APIs. #26695 (Also in 12)
Removed deprecated shell.moveItemToTrash(). #26723 
Removed deprecated systemPreferences methods. #26849 
Reverted WebFrameMain.executeJavaScriptInIsolatedWorld(). #27926 
Updated Node.js to v14.16.0. #27706 (Also in 12)

Documentation

Documentation changes: #26239, #26501, #26542, #27387, #27486, #27770, #27873
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@13.0.0-beta.2.
Release Notes for v13.0.0-beta.2
Breaking Changes
Fixed so window.open() parameter frameName is no longer set as window title. #27481 
Features
Added event.senderFrame property returning the originating webFrameMain of the IPC message. #26764 (Also in 12)
Added exitCode to render-process-gone details. #27580 (Also in 12)
Added frame and webContents properties to the details object in webRequest handlers. #27078 (Also in 12)
Added process.uptime() to sandboxed renderers. #26684 
Added roundedCorners option for BrowserWindow. #27572 
Added webFrameMain.send() / webFrameMain.postMessage(). #26807 (Also in 12)
Added win.setTopBrowserView() so that BrowserViews can be raised. #27007 (Also in 10, 11, 12)
Added missing webFrameMain.executeJavaScriptInIsolatedWorld(). #26913 (Also in 12)
Added missing fields to the parameters emitted as part of the context-menu event. #26788 
Added support for passing DOM elements over the context bridge. #26776 
Added support for registering Manifest V3 extension service workers.
Added 'registration-completed' event to ServiceWorkers. #27562 
Additional permission checks are now routed through session.setPermissionCheckHandler.  These include Notification.permission, and permission.query.  Please note that the webContents parameter to the check handler can now be null. #19903 
Allow ContextBridge exposeInMainWorld method to expose non-object APIs. #26594 (Also in 12)
Allowed skipping process type transformation in win.SetVisibleOnAllWorkspaces on macOS. #27200 
Changed the default value of contextIsolation to true. #26890 (Also in 12)
Changed the default value of worldSafeExecuteJavaScript to be true. #26889 (Also in 12)
Made trafficLightPosition option work for customButtonOnHover window. #26789 
Made win.setAspectRatio() work on Windows. #26941 (Also in 11, 12)
Fixes
Added Electron DLLs like libGLESv2.dll to symbol server. #26962 (Also in 9, 10, 11, 12)
Added default Bluetooth permission strings to info.plist. #26730 (Also in 11, 12)
Apps requesting the CAMERA_PAN_TILT_ZOOM permission will have the permission request handler called with a permission string of ""media"" instead of ""font-access"". #27006 
Fixed ""screen"" methods to be reassignable again. #26818 (Also in 11, 12)
Fixed CSP with unsafe-eval detection with Trusted Types. #27446 (Also in 9, 10, 11, 12)
Fixed ECDH.setPrivateKey() not updating the key. #27688 (Also in 12)
Fixed OS-level shortcuts on macOS (e.g. Ctrl + F2, ⌘ + ~). #27701 (Also in 11, 12)
Fixed PDF viewer failing to load resources. #27499 (Also in 12)
Fixed PDFs not loading in the PDF viewer. #27209 (Also in 12)
Fixed <webview> not working with Trusted Types. #27445 (Also in 9, 10, 11, 12)
Fixed contentTracing.stopRecording() not rejecting when there is no trace in progress. #26608 (Also in 11, 12)
Fixed hiddenInset titleBarStyle's abnormal fullscreen titlebar. Fix hiddenInset titleBarStyle not working with trafficLightPosition option. #27489 
Fixed protocol methods not being accessible via remote.protocol. #27009 (Also in 11, 12)
Fixed readdir/readdirSync (w/ withFileTypes) failing on a deep directory within archive. #26865 (Also in 10, 11, 12)
Fixed screen methods not being accessible via remote.screen. #26620 (Also in 11, 12)
Fixed systemPreferences.effectiveAppearance returning systemPreferences.getAppLevelAppearance(). #26852 (Also in 9, 10, 11, 12)
Fixed a crash in renderer process when loading non-context-aware modules with app.allowRendererProcessReuse enabled. #27296 (Also in 12)
Fixed a crash that could occur on app quit when using the remote module. #27038 (Also in 11, 12)
Fixed a crash when calling crypto.createDiffieHellman() with certain parameters. #27674 (Also in 12)
Fixed a crash when calling webContents.fromId with an unknown ID. #26609 (Also in 11, 12)
Fixed a memory leak in desktopCapturer.getSources. #27031 (Also in 9, 10, 11, 12)
Fixed a memory leak when creating BrowserWindows. #27621 (Also in 11, 12)
Fixed a potential crash when resetting BrowserViews. #27786 (Also in 10, 11, 12)
Fixed a rare crash on Windows that could occur when emitting certain Tray events. #26668 (Also in 12)
Fixed a use-after-free bug during shutdown when using off-the-record sessions. #26680 
Fixed a use-after-free error that could occur when destroying a WebContents during the did-stop-loading event. #26702 (Also in 12)
Fixed an erroneous enableBlinkFeatures warning shown webviews which enabled no Blink features. #27753 (Also in 10, 11, 12)
Fixed an issue that a message box in GTK contains no buttons. #26857 (Also in 10, 11, 12)
Fixed an issue where BrowserViews couldn't be effectively reparented. #27000 (Also in 11, 12)
Fixed an issue where SIGINT was improperly handled in Node.js processes. #26933 (Also in 10, 11, 12)
Fixed an issue where BrowserViews could have mismatched draggable regions to their bounds. #27952 (Also in 10, 11, 12)
Fixed an issue where contextBridge might incorrectly try to serialize some WebAssembly objects. #27518 
Fixed an issue where event.reply could sometimes not deliver a reply to an IPC message when cross-site iframes were present. #26875 (Also in 9, 10, 11, 12)
Fixed an issue where deleted download directories would be sometimes recreated by the operating system. #27745 (Also in 10, 11, 12)
Fixed an issue where draggable regions did not work exclusively on BrowserViews on Windows. #26738 (Also in 10, 11, 12)
Fixed an issue where draggable regions in BrowserWindow causes BrowserView to become draggable in non-correspondent places. #26690 (Also in 10, 11, 12)
Fixed an issue where libuv might hang with multiple subframes when nodeIntegrationInSubframes is enabled. #27582 (Also in 10, 11, 12)
Fixed an issue where non-draggable regions on BrowserViews could have incorrectly calculated bounds. #27147 (Also in 10, 11, 12)
Fixed an issue where renderer process stack traces were broken with contextIsolation enabled. #26820 (Also in 11, 12)
Fixed an issue where some async_hooks were not properly emitted after an error in the renderer process. #26752 (Also in 11, 12)
Fixed an issue where some draggable regions were not clickable when loaded into BrowserViews on Windows. #27143 (Also in 10, 11, 12)
Fixed an issue where the zoom button was missing for windows with titleBarStyle: hiddenInset on macOS. #27428 (Also in 12)
Fixed an issue whereby remote.screen EventEmitter methods are undefined in the renderer. #26809 (Also in 11, 12)
Fixed an occasional white flicker present when rendering BrowserViews in close succession. #27585 (Also in 10, 11, 12)
Fixed an out-of-bounds access in WebContents.sendInputEvent. #27827 (Also in 10, 11, 12)
Fixed background color not being applied for child windows created by native window.open path. #27593 (Also in 10, 11, 12)
Fixed behavior of 302/303/307 redirect responses in the protocol module. #26297 
Fixed bug in which WebContents.mainFrame would sometimes return undefined. #27648 (Also in 12)
Fixed bug where TouchBarPopover and TouchBarGroup were no longer rendering. #27901 (Also in 11, 12)
Fixed callbacks passed via the remote module not being released after all references are dropped. #26808 (Also in 11, 12)
Fixed crash when a keyboard event immediately precedes calling browserWindow.close() on Windows. #27315 (Also in 10, 11, 12)
Fixed crash when destroying WebContents in the crashed event. #27730 (Also in 10, 11, 12)
Fixed crash when extension fails to load. #27561 (Also in 10, 11, 12)
Fixed import of unpacked node modules. #26749 (Also in 11, 12)
Fixed issue where window.open() would not return an object with a location.href setter when contextIsolation is enabled and nativeWindowOpen is disabled. #27899 (Also in 10, 11, 12)
Fixed memory leak when sending non-primitives over the context bridge. #27630 (Also in 10, 11, 12)
Fixed menubar not clickable on Windows and Linux. #27545 (Also in 12)
Fixed missing presentation mode option in PDF viewer. #27223 (Also in 12)
Fixed native window freeze on Windows when Electron app is sent to tray and external display changes. #27615 (Also in 11, 12)
Fixed native window.open() to not use windowName/frameName as title by default. #27521 (Also in 10, 11, 12)
Fixed navigator.bluetooth.requestDevice. #27902 (Also in 11, 12)
Fixed regression that crashed Electron when processing an invalid icon. #27441 (Also in 11, 12)
Fixed shutdown crash when quitting with in-progress downloads. #27342 (Also in 10, 11, 12)
Fixed uncaught promise rejection when creating webContents with javascript disabled. #26837 (Also in 10, 11, 12)
Fixed using navigator.setAppBadge and navigator.clearAppBadge in Electron. #27067 (Also in 12)
Fixed warning when worldSafeExecuteJavaScript is disabled. #27928 (Also in 10, 11, 12)
Fixed window with customButtonsOnHover option not having rounded corner on macOS. #26901 (Also in 12)
Increase stack size on windows x64 to 8MB. #27376 (Also in 10, 11, 12)
Made BrowserWindow.setWindowButtonVisibility work for window with customButtonsOnHover titlebar style. #27073 
Other Changes
Fixed crash when loading wasm modules in child node process with mac arm64 > 11.2. #27672 (Also in 11, 12)
Non-functional change; updates repository's issue template file. #27825 
Removed deprecated BrowserWindow extension APIs. #26696 
Removed deprecated crashReporter APIs. #26695 (Also in 12)
Removed deprecated shell.moveItemToTrash(). #26723 
Removed deprecated systemPreferences methods. #26849 
Reverted WebFrameMain.executeJavaScriptInIsolatedWorld(). #27926 
Updated Node.js to v14.16.0. #27706 (Also in 12)
Documentation
Documentation changes: #26239, #26501, #26542, #27387, #27486, #27770, #27873"
523,"Release Notes for v9.4.4
Other Changes

Security: backported fix for 1154965. #27610 
Security: backported fix for 1155974. #27799 
Security: backported fix for 1170657. #27798 
Security: backported fix for 1171954. #27800 
Security: backported fix for 1172192. #27801 
Security: backported fix for 1177341. #27748 
Security: backported fix for chromium:1162942. #27612 
Security: backported fix for https://crbug.com/1161705. #27607 

Documentation

Documentation changes: #27818

End of Support for 9.x.y
Electron 9.x.y has reached end-of-support as per the project's support policy. Developers and applications are encouraged to upgrade to a newer version of Electron.","Release Notes for v9.4.4
Other Changes
Security: backported fix for 1154965. #27610 
Security: backported fix for 1155974. #27799 
Security: backported fix for 1170657. #27798 
Security: backported fix for 1171954. #27800 
Security: backported fix for 1172192. #27801 
Security: backported fix for 1177341. #27748 
Security: backported fix for chromium:1162942. #27612 
Security: backported fix for link. #27607 
Documentation
Documentation changes: #27818
End of Support for 9.x.y
Electron 9.x.y has reached end-of-support as per the project's support policy. Developers and applications are encouraged to upgrade to a newer version of Electron."
524,"Release Notes for v12.0.0
Stack Upgrades

Chromium 89.0.4389.69
v89 blog post
v88 blog post


Node v14.16.0
v14.16.0 release notes
v14.15.5 release notes
v14.15.4 release notes
v14.15.3 release notes
v14.15.2 release notes
v14.15.1 release notes
v14.15.0 release notes
v14.14.0 release notes
v14.13.1 release notes
v14.13.0 release notes
v14.12.0 release notes
v14.11.0 release notes
v14.10.1 release notes
v14.10.0 release notes
v14.9.0 release notes
v14.8.0 release notes
v14.7.0 release notes
v14.6.0 release notes
v14.5.0 release notes
v14.4.0 release notes
v14.3.0 release notes
v14.2.0 release notes
v14.1.0 release notes
v14.0.0 release notes


V8 v8.9
v8.9 blog post
v8.8 blog post



Breaking Changes

Changed the default of crashReporter.start({ compress }) from false to true. #25288 
Changed the default value of contextIsolation to true. #27949 
Changed the default value of worldSafeExecuteJavaScript to be true. #27502 
Deprecated the remote module. It is replaced by @electron/remote. [#25293]
Deprecated the new-window event of WebContents. It is replaced by webContents.setWindowOpenHandler(). #24517 

Features
Additions

Added APIs to enable/disable spell checker. #26276 
Added Serial API support. #25237 
Added BrowserWindow.isTabletMode API. #25209 
Added displayFrequency to the Display object to allow getting information about the refresh rate on Windows. #26472 
Added event.senderFrame property returning the originating webFrameMain of the IPC message. #27047 
Added exitCode to render-process-gone details. #27677 
Added frame and webContents properties to the details object in webRequest handlers. #27334 
Added net.online for detecting whether there is currently internet connection. #21004 
Added osProcessId / name properties to webFrameMain. #26093 
Added powerMonitor.onBatteryPower. #26494 
Added session.setSSLConfig() to allow configuring SSL. #25461 
Added webFrameMain.send() / webFrameMain.postMessage(). #27366 
Added webFrameMain API for accessing sub-frames of a WebContents instance from the main process. #25464 
Added webPreferences.preferredSizeMode to allow sizing views according to their document's minimum size. #25874 
Added a disabledCipherSuites option to Session.setSSLConfig. #25818 
Added a new credentials option for net.request(). #25284 
Added a new asynchronous shell.trashItem() API, replacing the synchronous shell.moveItemToTrash(). #25114 
Added display-capture API for session.setPermissionRequestHandler. #27696 
Added missing webFrameMain.executeJavaScriptInIsolatedWorld(). #27195 
Added non-localized serviceName to 'child-process-gone' / app.getAppMetrics(). #25975 
Added read/write support for Toast Activator CLSID in shortcuts. #25493 
Added setWindowOpenHandler API for renderer-created child windows, and deprecate new-window event. #24517 
Added spellcheck API to renderer. #25060 
Added support for explicitly specifying direct, auto_detect or system modes in session.setProxy(). #24937 
Added support for showing macOS share menu. #25629 
Added fast user switching event to powerMonitor on macOS. #25321
Added extension-loaded, extension-unloaded, and extension-ready events to Session. #25385 
Allowed ContextBridge exposeInMainWorld method to expose non-object APIs. #26834
Allowed setting the origin header and sec-fetch-* headers in net.request(). #26135
Implemented Electron Fuses for customizing certain Electron features at package time. #24241
The launchInfo of app event ready is now populated with information from UNNotificationResponse when the app is launched via a notification presented by UNUserNotificationCenter (in a native node module). #25950

Also in earlier versions...

Added allowFileAccess option to loadExtension() API. #27702 (Also in 11)
Added win.setTopBrowserView() so that BrowserViews can be raised. #27713 (Also in 10, 11)
Added support for some chrome.management APIs. #25098 (Also in 9, 10, 11)
Made win.setAspectRatio() work on Windows. #27202 (Also in 11)

Improvements

Implemented custom Toast XML notifications on Windows
Added failure reporting of notifications on Window. #25401
Improved dark mode support on Windows. #25373 (Also in 10, 11)

Removed/Deprecated

Deprecated the remote module. It is replaced by @electron/remote. #25293 
Deprecated the use of the vm module in the renderer process. #26087 
Removed deprecated crashReporter APIs. #26709 
Removed links to the Electron website from the default 'Help' menu in packaged apps. #25831 
Removed private API usage that was blocking Mac App Store releases. #26491 (Also in 11)
Removed the desktopCapturer.getMediaSourceIdForWebContents() API. #25414 (Also in 11)

Fixes

Apps requesting the CAMERA_PAN_TILT_ZOOM permission will have the permission request handler called with a permission string of ""media"" instead of ""font-access"". #27422 
Backported fix for https://crbug.com/1125165. #27596 
BrowserWindow.fromWebContents() now returns an accurate result for WebContents in a BrowserView or webview. #25408 
Enabled support for new Chromium experimental PDF viewer UI. #26010 
Fixed BrowserWindow.fromBrowserView throwing an error when there were multiple BrowserViews in a window. #26493 
Fixed PDF viewer failing to load resources. #27747 
Fixed PDFs not loading in the PDF viewer. #27241 
Fixed ses.setCertificateVerifyProc canceling requests in unrelated sessions. #26517 
Fixed a crash in renderer process when loading non-context-aware modules with app.allowRendererProcessReuse enabled. #27317 
Fixed a crash when calling crypto.createDiffieHellman() with certain parameters. #27700 
Fixed a use-after-free error that could occur when destroying a WebContents during the did-stop-loading event. #26733 
Fixed an issue that file length is not available in will-download event when file is downloaded thourgh intercepted request. #25324 
Fixed an issue where IsMaximized would incorrectly return false for some windows on Windows. #26772 
Fixed an issue where events on webview elements were missing properties if contextIsolation was enabled. #26289 
Fixed an issue where net.request would continue downloading data even when the consuming stream was throttled. #25531 
Fixed an issue where the buffer returned by NativeImage.getBitmap() could point to freed memory. #25782 
Fixed an issue where the zoom button was missing for windows with titleBarStyle: hiddenInset on macOS. #27462 
Fixed bug in which WebContents.mainFrame would sometimes return undefined. #27663 
Fixed crash while exiting Electron after using the Web Serial API. #25969 
Fixed error handling on write failure in the protocol module. #26296 
Fixed intermittent access violation during redirects (intercepted requests). #25393 
Fixed main process's console output not printing to devtools on Windows. #25765 
Fixed menubar not clickable on Windows and Linux. #27555 
Fixed missing presentation mode option in PDF viewer. #27262 
Fixed using navigator.setAppBadge and navigator.clearAppBadge in Electron. #27431 
Fixed webRequest module not recognizing the encoding of the filename in Content-Disposition header. #25961 
Fixed window with customButtonsOnHover option not having rounded corner on macOS. #26960 
Fixed chrome.runtime.getPlatformInfo crashing the background process upon being invoked. #25357 
Backported fix for https://crbug.com/952922. #27598 
Fixed ECDH.setPrivateKey() not updating the key. #27856
Fixed issue where window.open() would not return an object with a location.href setter when contextIsolation is enabled and nativeWindowOpen is disabled. #27940 
Fixed race condition in electron.net implementation. #27938 
Updated internal memory allocation logic such that you no longer need to use the com.apple.security.cs.allow-unsigned-executable-memory codesign entitlement on macOS. #26331 
Updated the ICU time zone database to the latest 2020f version. #27370 

Also in earlier versions....

Added Electron DLLs like libGLESv2.dll to symbol server. #26966 (Also in 9, 10, 11)
Added default Bluetooth permission strings to info.plist. #26769 (Also in 11)
BrowserViews will properly resize within windows. #25951 (Also in 9, 10, 11)
Fixed ""screen"" methods to be reassignable again. #26868 (Also in 11)
Fixed CSP with unsafe-eval detection with Trusted Types. #27471 (Also in 9, 10, 11)
Fixed GdiTextPrinting when used with silent printing. #25679 (Also in 9, 10, 11)
Fixed OS-level shortcuts on macOS (e.g. Ctrl + F2, ⌘ + ~). #27769 (Also in 11)
Fixed &lt;webview&gt; not working with Trusted Types. #27467 (Also in 9, 10, 11)
Fixed LC_ALL environment variable getting changed in Electron. #26507 (Also in 9, 10, 11)
Fixed contentTracing.stopRecording() not rejecting when there is no trace in progress. #26656 (Also in 11)
Fixed protocol methods not being accessible via remote.protocol. #27043 (Also in 11)
Fixed readdir/readdirSync (w/ withFileTypes) failing on a deep directory within archive. #27011 (Also in 10, 11)
Fixed screen methods not being accessible via remote.screen. #26661 (Also in 11)
Fixed systemPreferences.effectiveAppearance returning systemPreferences.getAppLevelAppearance(). #26879 (Also in 9, 10, 11)
Fixed a crash seen when printing. #25989 (Also in 11)
Fixed a crash that could occur on app quit when using the remote module. #27070 (Also in 11)
Fixed a crash when calling webContents.fromId with an unknown ID. #26651 (Also in 11)
Fixed a memory leak in desktopCapturer.getSources. #27058 (Also in 9, 10, 11)
Fixed a memory leak when creating BrowserWindows. #27641 (Also in 11)
Fixed an Uncaught TypeError when opening DevTools. #26474 (Also in 10, 11)
Fixed an erroneous enableBlinkFeatures warning shown webviews which enabled no Blink features. #27790 (Also in 10, 11)
Fixed an issue that a message box in GTK contains no buttons. #26917 (Also in 10, 11)
Fixed an issue where BrowserViews couldn't be effectively reparented. #27187 (Also in 11)
Fixed an issue where SIGINT was improperly handled in Node.js processes. #26971 (Also in 10, 11)
Fixed an issue where Save as PDF from PDF Viewer Print dialog failed and sometimes crashed. #25959 (Also in 9, 10, 11)
Fixed an issue where event.reply could sometimes not deliver a reply to an IPC message when cross-site iframes were present. #26925 (Also in 9, 10, 11)
Fixed an issue where deleted download directories would be sometimes recreated by the operating system. #27806 (Also in 10, 11)
Fixed an issue where draggable regions did not work exclusively on BrowserViews on Windows. #26775 (Also in 10, 11)
Fixed an issue where draggable regions in BrowserWindow causes BrowserView to become draggable in non-correspondent places. #26755 (Also in 10, 11)
Fixed an issue where non-draggable regions on BrowserViews could have incorrectly calculated bounds. #27184 (Also in 10, 11)
Fixed an issue where renderer process stack traces were broken with contextIsolation enabled. #26912 (Also in 11)
Fixed an issue where some async_hooks were not properly emitted after an error in the renderer process. #26990 (Also in 11)
Fixed an issue where some buttons were un-clickable in some BrowserViews with draggable regions enabled. #26496 (Also in 9, 10, 11)
Fixed an issue where some draggable regions were not clickable when loaded into BrowserViews on Windows. #27177 (Also in 10, 11)
Fixed an issue whereby remote.screen EventEmitter methods are undefined in the renderer. #26988 (Also in 11)
Fixed an occasional crash on Windows related to NativeViewHost::SetParentAccessible. #26952 (Also in 9, 10, 11)
Fixed an occasional white flicker present when rendering BrowserViews in close succession. #27658 (Also in 10, 11)
Fixed callbacks passed via the remote module not being released after all references are dropped. #26833 (Also in 11)
Fixed crash when a keyboard event immediately precedes calling browserWindow.close() on Windows. #27359 (Also in 10, 11)
Fixed crash when destroying WebContents in the crashed event. #27756 (Also in 10, 11)
Fixed crash when extension fails to load. #27589 (Also in 10, 11)
Fixed detection of launch on login items
Fixed detection of enabled state set by TaskManager. #26515 (Also in 11)
Fixed import of unpacked node modules. #26750 (Also in 11)
Fixed issue where quitAndInstall() would not restart the app upon update completion on macOS Big Sur. #25864 (Also in 11)
Fixed maximized frameless window bleeding to other monitors. #25940 (Also in 8, 9, 10, 11)
Fixed memory leak when creating ""Services"" menu. #25617 (Also in 9, 10, 11)
Fixed memory leak when sending non-primitives over the context bridge. #27636 (Also in 10, 11)
Fixed native window freeze on Windows when Electron app is sent to tray and external display changes. #27668 (Also in 11)
Fixed native window.open() to not use windowName/frameName as title by default. #27552 (Also in 10, 11)
Fixed regression that crashed Electron when processing an invalid icon. #27463 (Also in 11)
Fixed shutdown crash when quitting with in-progress downloads. #27418 (Also in 10, 11)
Fixed the pretty-print JavaScript feature in DevTools not functioning correctly. #25780 (Also in 11)
Fixed uncaught promise rejection when creating webContents with javascript disabled. #26869 (Also in 10, 11)
Fixed chrome.webRequest extensions API not intercepting any requests. #27098 (Also in 10, 11)
Fixed crash when loading wasm modules in child node process with mac arm64 > 11.2. #27685 (Also in 11)
Fixed slow child process spawning on macOS Big Sur. #27656 (Also in 10, 11)
Fixed an issue where libuv might hang with multiple subframes when nodeIntegrationInSubframes is enabled. #27879 (Also in 10, 11)
Fixed an out-of-bounds access in WebContents.sendInputEvent. #27855 (Also in 10, 11)
Fixed navigator.bluetooth.requestDevice. #27927 (Also in 11)
Fixed background color not being applied for child windows created by native window.open path. #27942 (Also in 10, 11)
Fixed a potential crash when resetting BrowserViews. #27947 
Increase stack size on windows x64 to 8MB. #27384 (Also in 10, 11)
Stopped using private API CTFontDescriptorIsSystemUIFont in MAS build. #26548 (Also in 11)
Updated setPermissionRequestHandler to correctly recognize permissions being requested. #26172 (Also in 11)

Other Changes

Windows 10 versions 2004 and later support WDA_EXCLUDEFROMCAPTURE and will now exclude a window entirely from screen capture when setContentProtection  is enabled. Older Windows versions will continue to show a black window as before. #24274 
Re-enable Rosetta on Apple Silicon devices. #26568 (Also in 7.3, 8, 9, 10, 11)

Documentation

Documentation revisions: 
tutorial/quick-start - #25760 
tutorial/notifications - #25901 
tutorial/native-file-drag-drop - #25939 
tutorial/recent-documents - #25941 
tutorial/macos-dock - #25985
tutorial/keyboard-shortcuts - #25999
tutorial/progress-bar - #26003
tutorial/web-embeds - #26008
tutorial/online-offline-events - #26017
tutorial/represented-file - #26018
tutorial/linux-desktop-actions - #26118 
tutorial/windows-taskbar - #26120 
tutorial/dark-mode - #26187



End of Support for 9.x.y
Electron 9.x.y has reached end-of-support as per the project's support policy. Developers and applications are encouraged to upgrade to a newer version of Electron.","Release Notes for v12.0.0
Stack Upgrades
Chromium 89.0.4389.69
v89 blog post
v88 blog post
Node v14.16.0
v14.16.0 release notes
v14.15.5 release notes
v14.15.4 release notes
v14.15.3 release notes
v14.15.2 release notes
v14.15.1 release notes
v14.15.0 release notes
v14.14.0 release notes
v14.13.1 release notes
v14.13.0 release notes
v14.12.0 release notes
v14.11.0 release notes
v14.10.1 release notes
v14.10.0 release notes
v14.9.0 release notes
v14.8.0 release notes
v14.7.0 release notes
v14.6.0 release notes
v14.5.0 release notes
v14.4.0 release notes
v14.3.0 release notes
v14.2.0 release notes
v14.1.0 release notes
v14.0.0 release notes
V8 v8.9
v8.9 blog post
v8.8 blog post
Breaking Changes
Changed the default of crashReporter.start({ compress }) from false to true. #25288 
Changed the default value of contextIsolation to true. #27949 
Changed the default value of worldSafeExecuteJavaScript to be true. #27502 
Deprecated the remote module. It is replaced by @electron/remote. [#25293]
Deprecated the new-window event of WebContents. It is replaced by webContents.setWindowOpenHandler(). #24517 
Features
Additions
Added APIs to enable/disable spell checker. #26276 
Added Serial API support. #25237 
Added BrowserWindow.isTabletMode API. #25209 
Added displayFrequency to the Display object to allow getting information about the refresh rate on Windows. #26472 
Added event.senderFrame property returning the originating webFrameMain of the IPC message. #27047 
Added exitCode to render-process-gone details. #27677 
Added frame and webContents properties to the details object in webRequest handlers. #27334 
Added net.online for detecting whether there is currently internet connection. #21004 
Added osProcessId / name properties to webFrameMain. #26093 
Added powerMonitor.onBatteryPower. #26494 
Added session.setSSLConfig() to allow configuring SSL. #25461 
Added webFrameMain.send() / webFrameMain.postMessage(). #27366 
Added webFrameMain API for accessing sub-frames of a WebContents instance from the main process. #25464 
Added webPreferences.preferredSizeMode to allow sizing views according to their document's minimum size. #25874 
Added a disabledCipherSuites option to Session.setSSLConfig. #25818 
Added a new credentials option for net.request(). #25284 
Added a new asynchronous shell.trashItem() API, replacing the synchronous shell.moveItemToTrash(). #25114 
Added display-capture API for session.setPermissionRequestHandler. #27696 
Added missing webFrameMain.executeJavaScriptInIsolatedWorld(). #27195 
Added non-localized serviceName to 'child-process-gone' / app.getAppMetrics(). #25975 
Added read/write support for Toast Activator CLSID in shortcuts. #25493 
Added setWindowOpenHandler API for renderer-created child windows, and deprecate new-window event. #24517 
Added spellcheck API to renderer. #25060 
Added support for explicitly specifying direct, auto_detect or system modes in session.setProxy(). #24937 
Added support for showing macOS share menu. #25629 
Added fast user switching event to powerMonitor on macOS. #25321
Added extension-loaded, extension-unloaded, and extension-ready events to Session. #25385 
Allowed ContextBridge exposeInMainWorld method to expose non-object APIs. #26834
Allowed setting the origin header and sec-fetch-* headers in net.request(). #26135
Implemented Electron Fuses for customizing certain Electron features at package time. #24241
The launchInfo of app event ready is now populated with information from UNNotificationResponse when the app is launched via a notification presented by UNUserNotificationCenter (in a native node module). #25950
Also in earlier versions...
Added allowFileAccess option to loadExtension() API. #27702 (Also in 11)
Added win.setTopBrowserView() so that BrowserViews can be raised. #27713 (Also in 10, 11)
Added support for some chrome.management APIs. #25098 (Also in 9, 10, 11)
Made win.setAspectRatio() work on Windows. #27202 (Also in 11)
Improvements
Implemented custom Toast XML notifications on Windows
Added failure reporting of notifications on Window. #25401
Improved dark mode support on Windows. #25373 (Also in 10, 11)
Removed/Deprecated
Deprecated the remote module. It is replaced by @electron/remote. #25293 
Deprecated the use of the vm module in the renderer process. #26087 
Removed deprecated crashReporter APIs. #26709 
Removed links to the Electron website from the default 'Help' menu in packaged apps. #25831 
Removed private API usage that was blocking Mac App Store releases. #26491 (Also in 11)
Removed the desktopCapturer.getMediaSourceIdForWebContents() API. #25414 (Also in 11)
Fixes
Apps requesting the CAMERA_PAN_TILT_ZOOM permission will have the permission request handler called with a permission string of ""media"" instead of ""font-access"". #27422 
Backported fix for link. #27596 
BrowserWindow.fromWebContents() now returns an accurate result for WebContents in a BrowserView or webview. #25408 
Enabled support for new Chromium experimental PDF viewer UI. #26010 
Fixed BrowserWindow.fromBrowserView throwing an error when there were multiple BrowserViews in a window. #26493 
Fixed PDF viewer failing to load resources. #27747 
Fixed PDFs not loading in the PDF viewer. #27241 
Fixed ses.setCertificateVerifyProc canceling requests in unrelated sessions. #26517 
Fixed a crash in renderer process when loading non-context-aware modules with app.allowRendererProcessReuse enabled. #27317 
Fixed a crash when calling crypto.createDiffieHellman() with certain parameters. #27700 
Fixed a use-after-free error that could occur when destroying a WebContents during the did-stop-loading event. #26733 
Fixed an issue that file length is not available in will-download event when file is downloaded thourgh intercepted request. #25324 
Fixed an issue where IsMaximized would incorrectly return false for some windows on Windows. #26772 
Fixed an issue where events on webview elements were missing properties if contextIsolation was enabled. #26289 
Fixed an issue where net.request would continue downloading data even when the consuming stream was throttled. #25531 
Fixed an issue where the buffer returned by NativeImage.getBitmap() could point to freed memory. #25782 
Fixed an issue where the zoom button was missing for windows with titleBarStyle: hiddenInset on macOS. #27462 
Fixed bug in which WebContents.mainFrame would sometimes return undefined. #27663 
Fixed crash while exiting Electron after using the Web Serial API. #25969 
Fixed error handling on write failure in the protocol module. #26296 
Fixed intermittent access violation during redirects (intercepted requests). #25393 
Fixed main process's console output not printing to devtools on Windows. #25765 
Fixed menubar not clickable on Windows and Linux. #27555 
Fixed missing presentation mode option in PDF viewer. #27262 
Fixed using navigator.setAppBadge and navigator.clearAppBadge in Electron. #27431 
Fixed webRequest module not recognizing the encoding of the filename in Content-Disposition header. #25961 
Fixed window with customButtonsOnHover option not having rounded corner on macOS. #26960 
Fixed chrome.runtime.getPlatformInfo crashing the background process upon being invoked. #25357 
Backported fix for link. #27598 
Fixed ECDH.setPrivateKey() not updating the key. #27856
Fixed issue where window.open() would not return an object with a location.href setter when contextIsolation is enabled and nativeWindowOpen is disabled. #27940 
Fixed race condition in electron.net implementation. #27938 
Updated internal memory allocation logic such that you no longer need to use the com.apple.security.cs.allow-unsigned-executable-memory codesign entitlement on macOS. #26331 
Updated the ICU time zone database to the latest 2020f version. #27370 
Also in earlier versions....
Added Electron DLLs like libGLESv2.dll to symbol server. #26966 (Also in 9, 10, 11)
Added default Bluetooth permission strings to info.plist. #26769 (Also in 11)
BrowserViews will properly resize within windows. #25951 (Also in 9, 10, 11)
Fixed ""screen"" methods to be reassignable again. #26868 (Also in 11)
Fixed CSP with unsafe-eval detection with Trusted Types. #27471 (Also in 9, 10, 11)
Fixed GdiTextPrinting when used with silent printing. #25679 (Also in 9, 10, 11)
Fixed OS-level shortcuts on macOS (e.g. Ctrl + F2, ⌘ + ~). #27769 (Also in 11)
Fixed <webview> not working with Trusted Types. #27467 (Also in 9, 10, 11)
Fixed LC_ALL environment variable getting changed in Electron. #26507 (Also in 9, 10, 11)
Fixed contentTracing.stopRecording() not rejecting when there is no trace in progress. #26656 (Also in 11)
Fixed protocol methods not being accessible via remote.protocol. #27043 (Also in 11)
Fixed readdir/readdirSync (w/ withFileTypes) failing on a deep directory within archive. #27011 (Also in 10, 11)
Fixed screen methods not being accessible via remote.screen. #26661 (Also in 11)
Fixed systemPreferences.effectiveAppearance returning systemPreferences.getAppLevelAppearance(). #26879 (Also in 9, 10, 11)
Fixed a crash seen when printing. #25989 (Also in 11)
Fixed a crash that could occur on app quit when using the remote module. #27070 (Also in 11)
Fixed a crash when calling webContents.fromId with an unknown ID. #26651 (Also in 11)
Fixed a memory leak in desktopCapturer.getSources. #27058 (Also in 9, 10, 11)
Fixed a memory leak when creating BrowserWindows. #27641 (Also in 11)
Fixed an Uncaught TypeError when opening DevTools. #26474 (Also in 10, 11)
Fixed an erroneous enableBlinkFeatures warning shown webviews which enabled no Blink features. #27790 (Also in 10, 11)
Fixed an issue that a message box in GTK contains no buttons. #26917 (Also in 10, 11)
Fixed an issue where BrowserViews couldn't be effectively reparented. #27187 (Also in 11)
Fixed an issue where SIGINT was improperly handled in Node.js processes. #26971 (Also in 10, 11)
Fixed an issue where Save as PDF from PDF Viewer Print dialog failed and sometimes crashed. #25959 (Also in 9, 10, 11)
Fixed an issue where event.reply could sometimes not deliver a reply to an IPC message when cross-site iframes were present. #26925 (Also in 9, 10, 11)
Fixed an issue where deleted download directories would be sometimes recreated by the operating system. #27806 (Also in 10, 11)
Fixed an issue where draggable regions did not work exclusively on BrowserViews on Windows. #26775 (Also in 10, 11)
Fixed an issue where draggable regions in BrowserWindow causes BrowserView to become draggable in non-correspondent places. #26755 (Also in 10, 11)
Fixed an issue where non-draggable regions on BrowserViews could have incorrectly calculated bounds. #27184 (Also in 10, 11)
Fixed an issue where renderer process stack traces were broken with contextIsolation enabled. #26912 (Also in 11)
Fixed an issue where some async_hooks were not properly emitted after an error in the renderer process. #26990 (Also in 11)
Fixed an issue where some buttons were un-clickable in some BrowserViews with draggable regions enabled. #26496 (Also in 9, 10, 11)
Fixed an issue where some draggable regions were not clickable when loaded into BrowserViews on Windows. #27177 (Also in 10, 11)
Fixed an issue whereby remote.screen EventEmitter methods are undefined in the renderer. #26988 (Also in 11)
Fixed an occasional crash on Windows related to NativeViewHost::SetParentAccessible. #26952 (Also in 9, 10, 11)
Fixed an occasional white flicker present when rendering BrowserViews in close succession. #27658 (Also in 10, 11)
Fixed callbacks passed via the remote module not being released after all references are dropped. #26833 (Also in 11)
Fixed crash when a keyboard event immediately precedes calling browserWindow.close() on Windows. #27359 (Also in 10, 11)
Fixed crash when destroying WebContents in the crashed event. #27756 (Also in 10, 11)
Fixed crash when extension fails to load. #27589 (Also in 10, 11)
Fixed detection of launch on login items
Fixed detection of enabled state set by TaskManager. #26515 (Also in 11)
Fixed import of unpacked node modules. #26750 (Also in 11)
Fixed issue where quitAndInstall() would not restart the app upon update completion on macOS Big Sur. #25864 (Also in 11)
Fixed maximized frameless window bleeding to other monitors. #25940 (Also in 8, 9, 10, 11)
Fixed memory leak when creating ""Services"" menu. #25617 (Also in 9, 10, 11)
Fixed memory leak when sending non-primitives over the context bridge. #27636 (Also in 10, 11)
Fixed native window freeze on Windows when Electron app is sent to tray and external display changes. #27668 (Also in 11)
Fixed native window.open() to not use windowName/frameName as title by default. #27552 (Also in 10, 11)
Fixed regression that crashed Electron when processing an invalid icon. #27463 (Also in 11)
Fixed shutdown crash when quitting with in-progress downloads. #27418 (Also in 10, 11)
Fixed the pretty-print JavaScript feature in DevTools not functioning correctly. #25780 (Also in 11)
Fixed uncaught promise rejection when creating webContents with javascript disabled. #26869 (Also in 10, 11)
Fixed chrome.webRequest extensions API not intercepting any requests. #27098 (Also in 10, 11)
Fixed crash when loading wasm modules in child node process with mac arm64 > 11.2. #27685 (Also in 11)
Fixed slow child process spawning on macOS Big Sur. #27656 (Also in 10, 11)
Fixed an issue where libuv might hang with multiple subframes when nodeIntegrationInSubframes is enabled. #27879 (Also in 10, 11)
Fixed an out-of-bounds access in WebContents.sendInputEvent. #27855 (Also in 10, 11)
Fixed navigator.bluetooth.requestDevice. #27927 (Also in 11)
Fixed background color not being applied for child windows created by native window.open path. #27942 (Also in 10, 11)
Fixed a potential crash when resetting BrowserViews. #27947 
Increase stack size on windows x64 to 8MB. #27384 (Also in 10, 11)
Stopped using private API CTFontDescriptorIsSystemUIFont in MAS build. #26548 (Also in 11)
Updated setPermissionRequestHandler to correctly recognize permissions being requested. #26172 (Also in 11)
Other Changes
Windows 10 versions 2004 and later support WDA_EXCLUDEFROMCAPTURE and will now exclude a window entirely from screen capture when setContentProtection  is enabled. Older Windows versions will continue to show a black window as before. #24274 
Re-enable Rosetta on Apple Silicon devices. #26568 (Also in 7.3, 8, 9, 10, 11)
Documentation
Documentation revisions: 
tutorial/quick-start - #25760 
tutorial/notifications - #25901 
tutorial/native-file-drag-drop - #25939 
tutorial/recent-documents - #25941 
tutorial/macos-dock - #25985
tutorial/keyboard-shortcuts - #25999
tutorial/progress-bar - #26003
tutorial/web-embeds - #26008
tutorial/online-offline-events - #26017
tutorial/represented-file - #26018
tutorial/linux-desktop-actions - #26118 
tutorial/windows-taskbar - #26120 
tutorial/dark-mode - #26187
End of Support for 9.x.y
Electron 9.x.y has reached end-of-support as per the project's support policy. Developers and applications are encouraged to upgrade to a newer version of Electron."
525,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.31.
# Release Notes for v12.0.0-beta.31
Other Changes

Updated Node.js to v14.16.0. #27911 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.31.
Release Notes for v12.0.0-beta.31
Other Changes
Updated Node.js to v14.16.0. #27911 "
526,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.30.
# Release Notes for v12.0.0-beta.30
Fixes

Backported fix for https://crbug.com/952922. #27598 
Fixed ECDH.setPrivateKey() not updating the key. #27856 
Fixed an issue where libuv might hang with multiple subframes when nodeIntegrationInSubframes is enabled. #27879 (Also in 10, 11)
Fixed an out-of-bounds access in WebContents.sendInputEvent. #27855 (Also in 10, 11)

Other Changes

Updated Chromium to 89.0.4389.58. #27759 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.30.
Release Notes for v12.0.0-beta.30
Fixes
Backported fix for link. #27598 
Fixed ECDH.setPrivateKey() not updating the key. #27856 
Fixed an issue where libuv might hang with multiple subframes when nodeIntegrationInSubframes is enabled. #27879 (Also in 10, 11)
Fixed an out-of-bounds access in WebContents.sendInputEvent. #27855 (Also in 10, 11)
Other Changes
Updated Chromium to 89.0.4389.58. #27759 "
527,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.29.
# Release Notes for v12.0.0-beta.29
Other Changes

Reverted posix_spawn change in libuv that affected child process spawning on macOS Big Sur. #27810 (Also in 10, 11)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.29.
Release Notes for v12.0.0-beta.29
Other Changes
Reverted posix_spawn change in libuv that affected child process spawning on macOS Big Sur. #27810 (Also in 10, 11)"
528,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.28.
# Release Notes for v12.0.0-beta.28
Fixes

Fixed OS-level shortcuts on macOS (e.g. Ctrl + F2, ⌘ + ~). #27769 (Also in 11)
Fixed an erroneous enableBlinkFeatures warning shown webviews which enabled no Blink features. #27790 (Also in 10, 11)
Fixed an issue where deleted download directories would be sometimes recreated by the operating system. #27806 (Also in 10, 11)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.28.
Release Notes for v12.0.0-beta.28
Fixes
Fixed OS-level shortcuts on macOS (e.g. Ctrl + F2, ⌘ + ~). #27769 (Also in 11)
Fixed an erroneous enableBlinkFeatures warning shown webviews which enabled no Blink features. #27790 (Also in 10, 11)
Fixed an issue where deleted download directories would be sometimes recreated by the operating system. #27806 (Also in 10, 11)"
529,"Release Notes for v11.3.0
Features

Added allowFileAccess option to loadExtension() API. #27703 (Also in 12)
Added win.setTopBrowserView() so that BrowserViews can be raised. #27712 (Also in 10, 12)

Fixes

Backported fix for https://crbug.com/1125165. #27558 
Fixed OS-level shortcuts on macOS (e.g. Ctrl + F2, ⌘ + ~). #27787 (Also in 12)
Fixed SVG content with filter sometimes not being rendered. #27699 
Fixed a crash when calling crypto.createDiffieHellman() with certain parameters. #27766 (Also in 12)
Fixed a memory leak when creating BrowserWindows. #27640 (Also in 12)
Fixed an erroneous enableBlinkFeatures warning shown webviews which enabled no Blink features. #27789 (Also in 10, 12)
Fixed an issue where deleted download directories would be sometimes recreated by the operating system. #27808 (Also in 10, 12)
Fixed an occasional white flicker present when rendering BrowserViews in close succession. #27659 (Also in 10, 12)
Fixed crash when destroying WebContents in the crashed event. #27757 (Also in 10, 12)
Fixed memory leak when sending non-primitives over the context bridge. #27638 (Also in 10, 12)
Fixed native window freeze on Windows when Electron app is sent to tray and external display changes. #27669 (Also in 12)
Fixed svg with filter content not being rendered. #27635 

Other Changes

Fixed crash when loading wasm modules in child node process with mac arm64 > 11.2. #27684 (Also in 12)
Fixed slow child process spawning on macOS Big Sur. #27654 (Also in 10, 12)
Reverted posix_spawn change in libuv that affected child process spawning on macOS Big Sur. #27809 (Also in 10, 12)
Security: backported fix for 1138143. #27780 
Security: backported fix for 1155974. #27779 
Security: backported fix for 1166504. #27778 
Security: backported fix for 1170657. #27781 
Security: backported fix for 1171954. #27777 
Security: backported fix for 1172192. #27776 
Security: backported fix for 1177341. #27750 
Security: backported fix for chromium:1162942. #27614 
Security: backported fix for https://crbug.com/1161705. #27609 

Documentation

Documentation changes: #27817
","Release Notes for v11.3.0
Features
Added allowFileAccess option to loadExtension() API. #27703 (Also in 12)
Added win.setTopBrowserView() so that BrowserViews can be raised. #27712 (Also in 10, 12)
Fixes
Backported fix for link. #27558 
Fixed OS-level shortcuts on macOS (e.g. Ctrl + F2, ⌘ + ~). #27787 (Also in 12)
Fixed SVG content with filter sometimes not being rendered. #27699 
Fixed a crash when calling crypto.createDiffieHellman() with certain parameters. #27766 (Also in 12)
Fixed a memory leak when creating BrowserWindows. #27640 (Also in 12)
Fixed an erroneous enableBlinkFeatures warning shown webviews which enabled no Blink features. #27789 (Also in 10, 12)
Fixed an issue where deleted download directories would be sometimes recreated by the operating system. #27808 (Also in 10, 12)
Fixed an occasional white flicker present when rendering BrowserViews in close succession. #27659 (Also in 10, 12)
Fixed crash when destroying WebContents in the crashed event. #27757 (Also in 10, 12)
Fixed memory leak when sending non-primitives over the context bridge. #27638 (Also in 10, 12)
Fixed native window freeze on Windows when Electron app is sent to tray and external display changes. #27669 (Also in 12)
Fixed svg with filter content not being rendered. #27635 
Other Changes
Fixed crash when loading wasm modules in child node process with mac arm64 > 11.2. #27684 (Also in 12)
Fixed slow child process spawning on macOS Big Sur. #27654 (Also in 10, 12)
Reverted posix_spawn change in libuv that affected child process spawning on macOS Big Sur. #27809 (Also in 10, 12)
Security: backported fix for 1138143. #27780 
Security: backported fix for 1155974. #27779 
Security: backported fix for 1166504. #27778 
Security: backported fix for 1170657. #27781 
Security: backported fix for 1171954. #27777 
Security: backported fix for 1172192. #27776 
Security: backported fix for 1177341. #27750 
Security: backported fix for chromium:1162942. #27614 
Security: backported fix for link. #27609 
Documentation
Documentation changes: #27817"
530,"Release Notes for v10.4.0
Features

Added win.setTopBrowserView() so that BrowserViews can be raised. #27711 (Also in 11, 12)

Fixes

Fixed OS-level shortcuts on macOS (e.g. Ctrl + F2, ⌘ + ~). #27812 (Also in 11, 12)
Fixed an Uncaught TypeError when opening DevTools. #27691 (Also in 11)
Fixed an erroneous enableBlinkFeatures warning shown webviews which enabled no Blink features. #27788 (Also in 11, 12)
Fixed an issue where deleted download directories would be sometimes recreated by the operating system. #27807 (Also in 11, 12)
Fixed an occasional white flicker present when rendering BrowserViews in close succession. #27660 (Also in 11, 12)
Fixed crash when destroying WebContents in the crashed event. #27758 (Also in 11, 12)
Fixed memory leak when sending non-primitives over the context bridge. #27637 (Also in 11, 12)

Other Changes

Fixed slow child process spawning on macOS Big Sur. #27655 (Also in 11, 12)
Reverted posix_spawn change in libuv that affected child process spawning on macOS Big Sur. #27811 (Also in 11, 12)
Security: backported fix for 1154965. #27611 
Security: backported fix for 1155974. #27795 
Security: backported fix for 1166504. #27794 
Security: backported fix for 1170657. #27796 
Security: backported fix for 1171954. #27793 
Security: backported fix for 1172192. #27791 
Security: backported fix for 1177341. #27749 
Security: backported fix for chromium:1162942. #27613 
Security: backported fix for https://crbug.com/1161705. #27608 

Documentation

Documentation changes: #27816
","Release Notes for v10.4.0
Features
Added win.setTopBrowserView() so that BrowserViews can be raised. #27711 (Also in 11, 12)
Fixes
Fixed OS-level shortcuts on macOS (e.g. Ctrl + F2, ⌘ + ~). #27812 (Also in 11, 12)
Fixed an Uncaught TypeError when opening DevTools. #27691 (Also in 11)
Fixed an erroneous enableBlinkFeatures warning shown webviews which enabled no Blink features. #27788 (Also in 11, 12)
Fixed an issue where deleted download directories would be sometimes recreated by the operating system. #27807 (Also in 11, 12)
Fixed an occasional white flicker present when rendering BrowserViews in close succession. #27660 (Also in 11, 12)
Fixed crash when destroying WebContents in the crashed event. #27758 (Also in 11, 12)
Fixed memory leak when sending non-primitives over the context bridge. #27637 (Also in 11, 12)
Other Changes
Fixed slow child process spawning on macOS Big Sur. #27655 (Also in 11, 12)
Reverted posix_spawn change in libuv that affected child process spawning on macOS Big Sur. #27811 (Also in 11, 12)
Security: backported fix for 1154965. #27611 
Security: backported fix for 1155974. #27795 
Security: backported fix for 1166504. #27794 
Security: backported fix for 1170657. #27796 
Security: backported fix for 1171954. #27793 
Security: backported fix for 1172192. #27791 
Security: backported fix for 1177341. #27749 
Security: backported fix for chromium:1162942. #27613 
Security: backported fix for link. #27608 
Documentation
Documentation changes: #27816"
531,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.27.
# Release Notes for v12.0.0-beta.27
Features

Added allowFileAccess option to loadExtension() API. #27702 (Also in 11)
Added win.setTopBrowserView() so that BrowserViews can be raised. #27713 (Also in 10, 11)
Added display-capture API for session.setPermissionRequestHandler. #27696 

Fixes

Fixed PDF viewer failing to load resources. #27747 
Fixed crash when destroying WebContents in the crashed event. #27756 (Also in 10, 11)

Other Changes

Updated Chromium to 89.0.4389.47. #27591 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.27.
Release Notes for v12.0.0-beta.27
Features
Added allowFileAccess option to loadExtension() API. #27702 (Also in 11)
Added win.setTopBrowserView() so that BrowserViews can be raised. #27713 (Also in 10, 11)
Added display-capture API for session.setPermissionRequestHandler. #27696 
Fixes
Fixed PDF viewer failing to load resources. #27747 
Fixed crash when destroying WebContents in the crashed event. #27756 (Also in 10, 11)
Other Changes
Updated Chromium to 89.0.4389.47. #27591 "
532,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.26.
# Release Notes for v12.0.0-beta.26
Features

Added exitCode to render-process-gone details. #27677 

Fixes

Fixed a crash when calling crypto.createDiffieHellman() with certain parameters. #27700 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.26.
Release Notes for v12.0.0-beta.26
Features
Added exitCode to render-process-gone details. #27677 
Fixes
Fixed a crash when calling crypto.createDiffieHellman() with certain parameters. #27700 "
533,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.25.
# Release Notes for v12.0.0-beta.25
Fixes

Fixed an occasional white flicker present when rendering BrowserViews in close succession. #27658 (Also in 10, 11)

Other Changes

Fixed crash when loading wasm modules in child node process with mac arm64 > 11.2. #27685 (Also in 11)
Fixed slow child process spawning on macOS Big Sur. #27656 (Also in 10, 11)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.25.
Release Notes for v12.0.0-beta.25
Fixes
Fixed an occasional white flicker present when rendering BrowserViews in close succession. #27658 (Also in 10, 11)
Other Changes
Fixed crash when loading wasm modules in child node process with mac arm64 > 11.2. #27685 (Also in 11)
Fixed slow child process spawning on macOS Big Sur. #27656 (Also in 10, 11)"
534,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.24.
# Release Notes for v12.0.0-beta.24
Fixes

Fixed bug in which WebContents.mainFrame would sometimes return undefined. #27663 
Fixed native window freeze on Windows when Electron app is sent to tray and external display changes. #27668 (Also in 11)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.24.
Release Notes for v12.0.0-beta.24
Fixes
Fixed bug in which WebContents.mainFrame would sometimes return undefined. #27663 
Fixed native window freeze on Windows when Electron app is sent to tray and external display changes. #27668 (Also in 11)"
535,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.23.
# Release Notes for v12.0.0-beta.23
Fixes

Backported fix for https://crbug.com/1125165. #27596 
Fixed a memory leak when creating BrowserWindows. #27641 (Also in 11)
Fixed memory leak when sending non-primitives over the context bridge. #27636 (Also in 10, 11)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.23.
Release Notes for v12.0.0-beta.23
Fixes
Backported fix for link. #27596 
Fixed a memory leak when creating BrowserWindows. #27641 (Also in 11)
Fixed memory leak when sending non-primitives over the context bridge. #27636 (Also in 10, 11)"
536,"Release Notes for v11.2.3
Fixes

Backported fix for https://crbug.com/952922. #27584 
Fixed crash when extension fails to load. #27588 (Also in 10, 12)

Other Changes

Security: Addressed Chromium CVE-2021-21148 with backported fix for chromium:1170176, chromium:961059. #27624 
","Release Notes for v11.2.3
Fixes
Backported fix for link. #27584 
Fixed crash when extension fails to load. #27588 (Also in 10, 12)
Other Changes
Security: Addressed Chromium CVE-2021-21148 with backported fix for chromium:1170176, chromium:961059. #27624 "
537,"Release Notes for v10.3.2
Fixes

Fixed crash when extension fails to load. #27590 (Also in 11, 12)

Other Changes

Backported the fix to UAF in blink::NGContainerFragmentBuilder. #27531 
Backported the fix to chromium:1146861. #27532 
Security backports, CVE-2020-16037, CVE-2020-16041, CVE-2020-16042. #26932 
Security: backported fix for 1149177. #27533 
Security: backported fix for chromium:1170176, chromium:961059, CVE-2021-21148. #27623 
","Release Notes for v10.3.2
Fixes
Fixed crash when extension fails to load. #27590 (Also in 11, 12)
Other Changes
Backported the fix to UAF in blink::NGContainerFragmentBuilder. #27531 
Backported the fix to chromium:1146861. #27532 
Security backports, CVE-2020-16037, CVE-2020-16041, CVE-2020-16042. #26932 
Security: backported fix for 1149177. #27533 
Security: backported fix for chromium:1170176, chromium:961059, CVE-2021-21148. #27623 "
538,"Release Notes for v9.4.3
Other Changes

Security: backported fix for 1149177. #27534 
Security: backported fix for chromium:1170176, chromium:961059. #27622 
","Release Notes for v9.4.3
Other Changes
Security: backported fix for 1149177. #27534 
Security: backported fix for chromium:1170176, chromium:961059. #27622 "
539,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.22.
# Release Notes for v12.0.0-beta.22
Fixes

Fixed crash when extension fails to load. #27589 (Also in 10, 11)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.22.
Release Notes for v12.0.0-beta.22
Fixes
Fixed crash when extension fails to load. #27589 (Also in 10, 11)"
540,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.21.
# Release Notes for v12.0.0-beta.21
Other Changes

Updated Chromium to 89.0.4388.2. #27280 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.21.
Release Notes for v12.0.0-beta.21
Other Changes
Updated Chromium to 89.0.4388.2. #27280 "
541,"Release Notes for v11.2.2
Fixes

Fixed CSP with unsafe-eval detection with Trusted Types. #27469 (Also in 9, 10, 12)
Fixed <webview> not working with Trusted Types. #27464 (Also in 9, 10, 12)
Fixed regression that crashed Electron when processing an invalid icon. #27478 (Also in 12)
None. #27509 (Also in 12)

Other Changes

Backported the fix to CVE-2020-16044. #27491 
Backported the fix to CVE-2021-21118 from V8. #27415 
Backported the fix to a UAF in Mojo (1162198). #27401 
Backported the fix to chromium:1153329. #27494 
Security: backported fix for CVE-2021-21122. #27406 
","Release Notes for v11.2.2
Fixes
Fixed CSP with unsafe-eval detection with Trusted Types. #27469 (Also in 9, 10, 12)
Fixed  not working with Trusted Types. #27464 (Also in 9, 10, 12)
Fixed regression that crashed Electron when processing an invalid icon. #27478 (Also in 12)
None. #27509 (Also in 12)
Other Changes
Backported the fix to CVE-2020-16044. #27491 
Backported the fix to CVE-2021-21118 from V8. #27415 
Backported the fix to a UAF in Mojo (1162198). #27401 
Backported the fix to chromium:1153329. #27494 
Security: backported fix for CVE-2021-21122. #27406 "
542,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.20.
# Release Notes for v12.0.0-beta.20
Features

Changed the default value of worldSafeExecuteJavaScript to be true. #27502 

Fixes

Fixed menubar not clickable on Windows and Linux. #27555 
Fixed native window.open() to not use windowName/frameName as title by default. #27552 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.20.
Release Notes for v12.0.0-beta.20
Features
Changed the default value of worldSafeExecuteJavaScript to be true. #27502 
Fixes
Fixed menubar not clickable on Windows and Linux. #27555 
Fixed native window.open() to not use windowName/frameName as title by default. #27552 "
543,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.19.
# Release Notes for v12.0.0-beta.19
Fixes

Fixed CSP with unsafe-eval detection with Trusted Types. #27471 (Also in 9, 10, 11)
Fixed <webview> not working with Trusted Types. #27467 (Also in 9, 10, 11)
Fixed an issue where the zoom button was missing for windows with titleBarStyle: hiddenInset on macOS. #27462 
Fixed regression that crashed Electron when processing an invalid icon. #27463 (Also in 11)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.19.
Release Notes for v12.0.0-beta.19
Fixes
Fixed CSP with unsafe-eval detection with Trusted Types. #27471 (Also in 9, 10, 11)
Fixed  not working with Trusted Types. #27467 (Also in 9, 10, 11)
Fixed an issue where the zoom button was missing for windows with titleBarStyle: hiddenInset on macOS. #27462 
Fixed regression that crashed Electron when processing an invalid icon. #27463 (Also in 11)"
544,"Release Notes for v10.3.1
Fixes

Fixed CSP with unsafe-eval detection with Trusted Types. #27468 (Also in 9, 11, 12)
Fixed <webview> not working with Trusted Types. #27465 (Also in 9, 11, 12)
Fixed readdir/readdirSync (w/ withFileTypes) failing on a deep directory within archive. #27507 (Also in 11, 12)
Fixed crash when a keyboard event immediately precedes calling browserWindow.close() on Windows. #27358 (Also in 11, 12)
Fixed shutdown crash when quitting with in-progress downloads. #27417 (Also in 11, 12)
Increase stack size on windows x64 to 8MB. #27386 (Also in 11, 12)
Updated the ICU time zone database to the latest 2020f version. #27368 

Other Changes

Backported the fix to CVE-2020-16044. #27492 
Backported the fix to CVE-2021-21118 from V8. #27420 
Backported the fix to a UAF in Mojo (1162198). #27402 
Backported the fix to chromium:1153329. #27495 
Backported the fix to chromium:1160534. #27452 
Security: backported fix for 1148309. #27361 
Security: backported fix for 1150065, 1153658. #27393 
Security: backported fix for 1151069. #27360 
Security: backported fix for 1151298. #27394 
Security: backported fix for 1152645. #27399 
Security: backported fix for 1155426. #27395 
Security: backported fix for 1157562. #27396 
Security: backported fix for CVE-2021-21122. #27407 
Security: backported fix for chromium:1153442. #27397 
Security: backported fix for chromium:1161654. #27412 
","Release Notes for v10.3.1
Fixes
Fixed CSP with unsafe-eval detection with Trusted Types. #27468 (Also in 9, 11, 12)
Fixed  not working with Trusted Types. #27465 (Also in 9, 11, 12)
Fixed readdir/readdirSync (w/ withFileTypes) failing on a deep directory within archive. #27507 (Also in 11, 12)
Fixed crash when a keyboard event immediately precedes calling browserWindow.close() on Windows. #27358 (Also in 11, 12)
Fixed shutdown crash when quitting with in-progress downloads. #27417 (Also in 11, 12)
Increase stack size on windows x64 to 8MB. #27386 (Also in 11, 12)
Updated the ICU time zone database to the latest 2020f version. #27368 
Other Changes
Backported the fix to CVE-2020-16044. #27492 
Backported the fix to CVE-2021-21118 from V8. #27420 
Backported the fix to a UAF in Mojo (1162198). #27402 
Backported the fix to chromium:1153329. #27495 
Backported the fix to chromium:1160534. #27452 
Security: backported fix for 1148309. #27361 
Security: backported fix for 1150065, 1153658. #27393 
Security: backported fix for 1151069. #27360 
Security: backported fix for 1151298. #27394 
Security: backported fix for 1152645. #27399 
Security: backported fix for 1155426. #27395 
Security: backported fix for 1157562. #27396 
Security: backported fix for CVE-2021-21122. #27407 
Security: backported fix for chromium:1153442. #27397 
Security: backported fix for chromium:1161654. #27412 "
545,"Release Notes for v9.4.2
Fixes

Fixed CSP with unsafe-eval detection with Trusted Types. #27472 (Also in 10, 11, 12)
Fixed <webview> not working with Trusted Types. #27466 (Also in 10, 11, 12)
Fixed a memory leak in desktopCapturer.getSources. #27506 (Also in 10, 11, 12)

Other Changes

Backported the fix to CVE-2020-16044. #27493 
Backported the fix to CVE-2021-21118 from V8. #27421 
Backported the fix to a UAF in Mojo (1162198). #27405 
Backported the fix to chromium:1153329. #27496 
Backported the fix to chromium:1160534. #27451 
Security: backported fix for 1148309. #27362 
Security: backported fix for 1150065, 1153658. #27391 
Security: backported fix for 1151298. #27389 
Security: backported fix for 1152645. #27400 
Security: backported fix for 1155426. #27388 
Security: backported fix for CVE-2021-21122. #27408 
Security: backported fix for chromium:1161654. #27413 
","Release Notes for v9.4.2
Fixes
Fixed CSP with unsafe-eval detection with Trusted Types. #27472 (Also in 10, 11, 12)
Fixed  not working with Trusted Types. #27466 (Also in 10, 11, 12)
Fixed a memory leak in desktopCapturer.getSources. #27506 (Also in 10, 11, 12)
Other Changes
Backported the fix to CVE-2020-16044. #27493 
Backported the fix to CVE-2021-21118 from V8. #27421 
Backported the fix to a UAF in Mojo (1162198). #27405 
Backported the fix to chromium:1153329. #27496 
Backported the fix to chromium:1160534. #27451 
Security: backported fix for 1148309. #27362 
Security: backported fix for 1150065, 1153658. #27391 
Security: backported fix for 1151298. #27389 
Security: backported fix for 1152645. #27400 
Security: backported fix for 1155426. #27388 
Security: backported fix for CVE-2021-21122. #27408 
Security: backported fix for chromium:1161654. #27413 "
546,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.18.
# Release Notes for v12.0.0-beta.18
Fixes

None. #27442 
Updated the ICU time zone database to the latest 2020f version. #27370 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.18.
Release Notes for v12.0.0-beta.18
Fixes
None. #27442 
Updated the ICU time zone database to the latest 2020f version. #27370 "
547,"Release Notes for v11.2.1
Fixes

Apps requesting the CAMERA_PAN_TILT_ZOOM permission will have the permission request handler called with a permission string of ""media"" instead of ""font-access"". #27423 
Fixed crash when a keyboard event immediately precedes calling browserWindow.close() on Windows. #27357 (Also in 10, 12)
Fixed shutdown crash when quitting with in-progress downloads. #27419 (Also in 10, 12)
Increase stack size on windows x64 to 8MB. #27385 (Also in 10, 12)
Updated the ICU time zone database to the latest 2020f version. #27369 

Other Changes

Backported the fix to CVE-2021-21120 from sqlite. #27424 
Backported the fix to chromium:1160534. #27443 
Backported the fixes to the save file dialog related CVE-2021-21123, CVE-2021-21129, CVE-2021-21130, CVE-2021-21131, CVE-2021-21141. #27437 
Security: backported fix for chromium:1161654. #27411 
","Release Notes for v11.2.1
Fixes
Apps requesting the CAMERA_PAN_TILT_ZOOM permission will have the permission request handler called with a permission string of ""media"" instead of ""font-access"". #27423 
Fixed crash when a keyboard event immediately precedes calling browserWindow.close() on Windows. #27357 (Also in 10, 12)
Fixed shutdown crash when quitting with in-progress downloads. #27419 (Also in 10, 12)
Increase stack size on windows x64 to 8MB. #27385 (Also in 10, 12)
Updated the ICU time zone database to the latest 2020f version. #27369 
Other Changes
Backported the fix to CVE-2021-21120 from sqlite. #27424 
Backported the fix to chromium:1160534. #27443 
Backported the fixes to the save file dialog related CVE-2021-21123, CVE-2021-21129, CVE-2021-21130, CVE-2021-21131, CVE-2021-21141. #27437 
Security: backported fix for chromium:1161654. #27411 "
548,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.16.
# Release Notes for v12.0.0-beta.16
Fixes

Fixed a crash in renderer process when loading non-context-aware modules with app.allowRendererProcessReuse enabled. #27317 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.16.
Release Notes for v12.0.0-beta.16
Fixes
Fixed a crash in renderer process when loading non-context-aware modules with app.allowRendererProcessReuse enabled. #27317 "
549,"Release Notes for v10.3.0
Fixes

Fixed a memory leak in desktopCapturer.getSources. #27057 (Also in 11, 12)
Fixed an issue where BrowserViews couldn't be effectively reparented. #27220 (Also in 11, 12)
Fixed an issue where SIGINT was improperly handled in Node.js processes. #26970 (Also in 11, 12)
Fixed an issue where draggable regions did not work exclusively on BrowserViews on Windows. #27222 (Also in 11, 12)
Fixed an issue where non-draggable regions on BrowserViews could have incorrectly calculated bounds. #27185 (Also in 11, 12)
Fixed an issue with audio not playing in HTML video elements. #26963 

Other Changes

Security: backported fix for 1147431, 1144462. #26953 
Security: backported fix for chromium:1123035. #26956 

Unknown

Fixed chrome.webRequest extensions API not intercepting any requests. #27097 (Also in 11, 12)
","Release Notes for v10.3.0
Fixes
Fixed a memory leak in desktopCapturer.getSources. #27057 (Also in 11, 12)
Fixed an issue where BrowserViews couldn't be effectively reparented. #27220 (Also in 11, 12)
Fixed an issue where SIGINT was improperly handled in Node.js processes. #26970 (Also in 11, 12)
Fixed an issue where draggable regions did not work exclusively on BrowserViews on Windows. #27222 (Also in 11, 12)
Fixed an issue where non-draggable regions on BrowserViews could have incorrectly calculated bounds. #27185 (Also in 11, 12)
Fixed an issue with audio not playing in HTML video elements. #26963 
Other Changes
Security: backported fix for 1147431, 1144462. #26953 
Security: backported fix for chromium:1123035. #26956 
Unknown
Fixed chrome.webRequest extensions API not intercepting any requests. #27097 (Also in 11, 12)"
550,"Release Notes for v9.4.1
Fixes

Fixed an issue with audio not playing in HTML video elements. #26969 

Other Changes

Security backports, CVE-2020-16037, CVE-2020-16041, CVE-2020-16042. #26931 
Security: backported fix for 1147431, 1144462. #26954 
Security: backported fix for chromium:1123035. #26957 
","Release Notes for v9.4.1
Fixes
Fixed an issue with audio not playing in HTML video elements. #26969 
Other Changes
Security backports, CVE-2020-16037, CVE-2020-16041, CVE-2020-16042. #26931 
Security: backported fix for 1147431, 1144462. #26954 
Security: backported fix for chromium:1123035. #26957 "
551,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.14.
# Release Notes for v12.0.0-beta.14
Features

Added event.senderFrame property returning the originating webFrameMain of the IPC message. #27047 
Added missing webFrameMain.executeJavaScriptInIsolatedWorld(). #27195 
Made win.setAspectRatio() work on Windows. #27202 (Also in 11)

Fixes

Fixed PDFs not loading in the PDF viewer. #27241 
Fixed missing presentation mode option in PDF viewer. #27262 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.14.
Release Notes for v12.0.0-beta.14
Features
Added event.senderFrame property returning the originating webFrameMain of the IPC message. #27047 
Added missing webFrameMain.executeJavaScriptInIsolatedWorld(). #27195 
Made win.setAspectRatio() work on Windows. #27202 (Also in 11)
Fixes
Fixed PDFs not loading in the PDF viewer. #27241 
Fixed missing presentation mode option in PDF viewer. #27262 "
552,"Release Notes for v11.2.0
Features

Made win.setAspectRatio() work on Windows. #27203 (Also in 12)

Fixes

Fixed a crash that could occur on app quit when using the remote module. #27069 (Also in 12)
Fixed an issue where BrowserViews couldn't be effectively reparented. #27219 (Also in 12)
Fixed an issue where non-draggable regions on BrowserViews could have incorrectly calculated bounds. #27183 (Also in 10, 12)
Fixed an issue where some draggable regions were not clickable when loaded into BrowserViews on Windows. #27178 (Also in 10, 12)
Fixed the pretty-print JavaScript feature in DevTools not functioning correctly. #27102 

Other Changes

Updated Chromium to 87.0.4280.141. #27213 

Unknown

Fixed chrome.webRequest extensions API not intercepting any requests. #27096 (Also in 10, 12)
","Release Notes for v11.2.0
Features
Made win.setAspectRatio() work on Windows. #27203 (Also in 12)
Fixes
Fixed a crash that could occur on app quit when using the remote module. #27069 (Also in 12)
Fixed an issue where BrowserViews couldn't be effectively reparented. #27219 (Also in 12)
Fixed an issue where non-draggable regions on BrowserViews could have incorrectly calculated bounds. #27183 (Also in 10, 12)
Fixed an issue where some draggable regions were not clickable when loaded into BrowserViews on Windows. #27178 (Also in 10, 12)
Fixed the pretty-print JavaScript feature in DevTools not functioning correctly. #27102 
Other Changes
Updated Chromium to 87.0.4280.141. #27213 
Unknown
Fixed chrome.webRequest extensions API not intercepting any requests. #27096 (Also in 10, 12)"
553,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.12.
# Release Notes for v12.0.0-beta.12","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.12.
Release Notes for v12.0.0-beta.12"
554,"Release Notes for v11.1.1
Fixes

Fixed protocol methods not being accessible via remote.protocol. #27044 (Also in 12)
Fixed readdir/readdirSync (w/ withFileTypes) failing on a deep directory within archive. #27010 (Also in 12)
Fixed a memory leak in desktopCapturer.getSources. #27056 (Also in 10, 12)
Fixed an issue where SIGINT was improperly handled in Node.js processes. #26972 (Also in 10, 12)
Fixed an issue where renderer process stack traces were broken with contextIsolation enabled. #26997 (Also in 12)
Fixed an issue where some async_hooks were not properly emitted after an error in the renderer process. #26991 (Also in 12)
Fixed an issue whereby remote.screen EventEmitter methods are undefined in the renderer. #26989 (Also in 12)
","Release Notes for v11.1.1
Fixes
Fixed protocol methods not being accessible via remote.protocol. #27044 (Also in 12)
Fixed readdir/readdirSync (w/ withFileTypes) failing on a deep directory within archive. #27010 (Also in 12)
Fixed a memory leak in desktopCapturer.getSources. #27056 (Also in 10, 12)
Fixed an issue where SIGINT was improperly handled in Node.js processes. #26972 (Also in 10, 12)
Fixed an issue where renderer process stack traces were broken with contextIsolation enabled. #26997 (Also in 12)
Fixed an issue where some async_hooks were not properly emitted after an error in the renderer process. #26991 (Also in 12)
Fixed an issue whereby remote.screen EventEmitter methods are undefined in the renderer. #26989 (Also in 12)"
555,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.11.
# Release Notes for v12.0.0-beta.11
Fixes

Fixed protocol methods not being accessible via remote.protocol. #27043 (Also in 11)
Fixed readdir/readdirSync (w/ withFileTypes) failing on a deep directory within archive. #27011 (Also in 11)
Fixed a memory leak in desktopCapturer.getSources. #27058 (Also in 10, 11)
Fixed an issue where SIGINT was improperly handled in Node.js processes. #26971 (Also in 10, 11)
Fixed an issue where renderer process stack traces were broken with contextIsolation enabled. #26912 (Also in 11)
Fixed an issue where some async_hooks were not properly emitted after an error in the renderer process. #26990 (Also in 11)
Fixed an issue whereby remote.screen EventEmitter methods are undefined in the renderer. #26988 (Also in 11)
Fixed window with customButtonsOnHover option not having rounded corner on macOS. #26960 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.11.
Release Notes for v12.0.0-beta.11
Fixes
Fixed protocol methods not being accessible via remote.protocol. #27043 (Also in 11)
Fixed readdir/readdirSync (w/ withFileTypes) failing on a deep directory within archive. #27011 (Also in 11)
Fixed a memory leak in desktopCapturer.getSources. #27058 (Also in 10, 11)
Fixed an issue where SIGINT was improperly handled in Node.js processes. #26971 (Also in 10, 11)
Fixed an issue where renderer process stack traces were broken with contextIsolation enabled. #26912 (Also in 11)
Fixed an issue where some async_hooks were not properly emitted after an error in the renderer process. #26990 (Also in 11)
Fixed an issue whereby remote.screen EventEmitter methods are undefined in the renderer. #26988 (Also in 11)
Fixed window with customButtonsOnHover option not having rounded corner on macOS. #26960 "
556,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.10.
# Release Notes for v12.0.0-beta.10","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.10.
Release Notes for v12.0.0-beta.10"
557,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.9.
# Release Notes for v12.0.0-beta.9
Fixes

Added Electron DLLs like libGLESv2.dll to symbol server. #26966 (Also in 9, 10, 11)
Fixed an issue that a message box in GTK contains no buttons. #26917 (Also in 10, 11)
Fixed an issue where event.reply could sometimes not deliver a reply to an IPC message when cross-site iframes were present. #26925 (Also in 9, 10, 11)
Fixed an occasional crash on Windows related to NativeViewHost::SetParentAccessible. #26952 (Also in 9, 10, 11)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.9.
Release Notes for v12.0.0-beta.9
Fixes
Added Electron DLLs like libGLESv2.dll to symbol server. #26966 (Also in 9, 10, 11)
Fixed an issue that a message box in GTK contains no buttons. #26917 (Also in 10, 11)
Fixed an issue where event.reply could sometimes not deliver a reply to an IPC message when cross-site iframes were present. #26925 (Also in 9, 10, 11)
Fixed an occasional crash on Windows related to NativeViewHost::SetParentAccessible. #26952 (Also in 9, 10, 11)"
558,"Release Notes for v11.1.0
Fixes

Added Electron DLLs like libGLESv2.dll to symbol server. #26965 (Also in 9, 10, 12)
Fixed an issue that a message box in GTK contains no buttons. #26916 (Also in 10, 12)
Fixed an issue where event.reply could sometimes not deliver a reply to an IPC message when cross-site iframes were present. #26926 (Also in 9, 10, 12)
Fixed an occasional crash on Windows related to NativeViewHost::SetParentAccessible. #26951 (Also in 9, 10, 12)
","Release Notes for v11.1.0
Fixes
Added Electron DLLs like libGLESv2.dll to symbol server. #26965 (Also in 9, 10, 12)
Fixed an issue that a message box in GTK contains no buttons. #26916 (Also in 10, 12)
Fixed an issue where event.reply could sometimes not deliver a reply to an IPC message when cross-site iframes were present. #26926 (Also in 9, 10, 12)
Fixed an occasional crash on Windows related to NativeViewHost::SetParentAccessible. #26951 (Also in 9, 10, 12)"
559,"Release Notes for v10.2.0
Fixes

Added Electron DLLs like libGLESv2.dll to symbol server. #26964 (Also in 9, 11, 12)
Fixed systemPreferences.effectiveAppearance returning systemPreferences.getAppLevelAppearance(). #26882 (Also in 9, 11, 12)
Fixed an issue that a message box in GTK contains no buttons. #26915 (Also in 11, 12)
Fixed an issue where event.reply could sometimes not deliver a reply to an IPC message when cross-site iframes were present. #26927 (Also in 9, 11, 12)
Fixed an occasional crash on Windows related to NativeViewHost::SetParentAccessible. #26949 (Also in 9, 11, 12)

Other Changes

Security: backport fix for 1150649. #26896 
Security: backported fix for 1137603. #26892 
Security: backported fix for 1141350. #26894 
Security: backported the fix to CVE-2020-16014: Use after free in PPAPI. #26855 
Security: backported the fix to CVE-2020-16023: Use after free in WebCodecs. #26832 
Security: backported the fix to CVE-2020-16024: Heap buffer overflow in UI. #26830 
Security: backported the fix to heap-buffer-overflow in gfx::internal::StyleIterator::GetTextBreakingRange. #26866 
","Release Notes for v10.2.0
Fixes
Added Electron DLLs like libGLESv2.dll to symbol server. #26964 (Also in 9, 11, 12)
Fixed systemPreferences.effectiveAppearance returning systemPreferences.getAppLevelAppearance(). #26882 (Also in 9, 11, 12)
Fixed an issue that a message box in GTK contains no buttons. #26915 (Also in 11, 12)
Fixed an issue where event.reply could sometimes not deliver a reply to an IPC message when cross-site iframes were present. #26927 (Also in 9, 11, 12)
Fixed an occasional crash on Windows related to NativeViewHost::SetParentAccessible. #26949 (Also in 9, 11, 12)
Other Changes
Security: backport fix for 1150649. #26896 
Security: backported fix for 1137603. #26892 
Security: backported fix for 1141350. #26894 
Security: backported the fix to CVE-2020-16014: Use after free in PPAPI. #26855 
Security: backported the fix to CVE-2020-16023: Use after free in WebCodecs. #26832 
Security: backported the fix to CVE-2020-16024: Heap buffer overflow in UI. #26830 
Security: backported the fix to heap-buffer-overflow in gfx::internal::StyleIterator::GetTextBreakingRange. #26866 "
560,"Release Notes for v9.4.0
Fixes

Added Electron DLLs like libGLESv2.dll to symbol server. #26967 (Also in 10, 11, 12)
Fixed systemPreferences.effectiveAppearance returning systemPreferences.getAppLevelAppearance(). #26881 (Also in 10, 11, 12)
Fixed an issue where event.reply could sometimes not deliver a reply to an IPC message when cross-site iframes were present. #26928 (Also in 10, 11, 12)
Fixed an issue where some buttons were un-clickable in some BrowserViews with draggable regions enabled. #26745 (Also in 10, 11)
Fixed an issue whereby a corrupted async_hooks stack would crash the renderer when throwing some errors in the renderer process. #26748 (Also in 10, 11)
Fixed an occasional crash on Windows related to NativeViewHost::SetParentAccessible. #26950 (Also in 10, 11, 12)
Fixed usage of --disable-dev-shm-usage for apps using --no-sandbox on linux. #26806 

Other Changes

Backported the fix to CVE-2020-16024: Heap buffer overflow in UI. #26831 
Security: backport fix for 1150649. #26897 
Security: backported fix for 1137603. #26893 
Security: backported fix for 1141350. #26895 
Security: backported the fix to CVE-2020-16014: Use after free in PPAPI. #26856 
Security: backported the fix to CVE-2020-16015: Insufficient data validation in WASM. #26859 
Security: backported the fix to CVE-2020-16022: Insufficient policy enforcement in networking. #26861 
","Release Notes for v9.4.0
Fixes
Added Electron DLLs like libGLESv2.dll to symbol server. #26967 (Also in 10, 11, 12)
Fixed systemPreferences.effectiveAppearance returning systemPreferences.getAppLevelAppearance(). #26881 (Also in 10, 11, 12)
Fixed an issue where event.reply could sometimes not deliver a reply to an IPC message when cross-site iframes were present. #26928 (Also in 10, 11, 12)
Fixed an issue where some buttons were un-clickable in some BrowserViews with draggable regions enabled. #26745 (Also in 10, 11)
Fixed an issue whereby a corrupted async_hooks stack would crash the renderer when throwing some errors in the renderer process. #26748 (Also in 10, 11)
Fixed an occasional crash on Windows related to NativeViewHost::SetParentAccessible. #26950 (Also in 10, 11, 12)
Fixed usage of --disable-dev-shm-usage for apps using --no-sandbox on linux. #26806 
Other Changes
Backported the fix to CVE-2020-16024: Heap buffer overflow in UI. #26831 
Security: backport fix for 1150649. #26897 
Security: backported fix for 1137603. #26893 
Security: backported fix for 1141350. #26895 
Security: backported the fix to CVE-2020-16014: Use after free in PPAPI. #26856 
Security: backported the fix to CVE-2020-16015: Insufficient data validation in WASM. #26859 
Security: backported the fix to CVE-2020-16022: Insufficient policy enforcement in networking. #26861 "
561,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.8.
# Release Notes for v12.0.0-beta.8
Fixes

Fixed ""screen"" methods to be reassignable again. #26868 (Also in 11)
Fixed systemPreferences.effectiveAppearance returning systemPreferences.getAppLevelAppearance(). #26879 (Also in 9, 10, 11)
Fixed uncaught promise rejection when creating webContents with javascript disabled. #26869 (Also in 10, 11)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.8.
Release Notes for v12.0.0-beta.8
Fixes
Fixed ""screen"" methods to be reassignable again. #26868 (Also in 11)
Fixed systemPreferences.effectiveAppearance returning systemPreferences.getAppLevelAppearance(). #26879 (Also in 9, 10, 11)
Fixed uncaught promise rejection when creating webContents with javascript disabled. #26869 (Also in 10, 11)"
562,"Release Notes for v11.0.5
Fixes

Fixed ""screen"" methods to be reassignable again. #26873 (Also in 12)
Fixed systemPreferences.effectiveAppearance returning systemPreferences.getAppLevelAppearance(). #26878 (Also in 9, 10, 12)
Fixed callbacks passed via the remote module not being released after all references are dropped. #26836 (Also in 12)
Fixed uncaught promise rejection when creating webContents with javascript disabled. #26870 (Also in 10, 12)

Other Changes

Updated Chromium to 87.0.4280.88. #26817 
","Release Notes for v11.0.5
Fixes
Fixed ""screen"" methods to be reassignable again. #26873 (Also in 12)
Fixed systemPreferences.effectiveAppearance returning systemPreferences.getAppLevelAppearance(). #26878 (Also in 9, 10, 12)
Fixed callbacks passed via the remote module not being released after all references are dropped. #26836 (Also in 12)
Fixed uncaught promise rejection when creating webContents with javascript disabled. #26870 (Also in 10, 12)
Other Changes
Updated Chromium to 87.0.4280.88. #26817 "
563,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.7.
# Release Notes for v12.0.0-beta.7
Fixes

Fixed callbacks passed via the remote module not being released after all references are dropped. #26833 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.7.
Release Notes for v12.0.0-beta.7
Fixes
Fixed callbacks passed via the remote module not being released after all references are dropped. #26833 "
564,"Release Notes for v11.0.4
Fixes

Added default Bluetooth permission strings to info.plist. #26768 (Also in 12)
Fixed an issue where IsMaximized would incorrectly return false for some windows on Windows. #26780 (Also in 12)
Fixed an issue where draggable regions did not work exclusively on BrowserViews on Windows. #26774 (Also in 12)
Fixed an issue where draggable regions in BrowserWindow causes BrowserView to become draggable in non-correspondent places. #26754 (Also in 10, 12)
Fixed import of unpacked node modules. #26751 (Also in 12)
","Release Notes for v11.0.4
Fixes
Added default Bluetooth permission strings to info.plist. #26768 (Also in 12)
Fixed an issue where IsMaximized would incorrectly return false for some windows on Windows. #26780 (Also in 12)
Fixed an issue where draggable regions did not work exclusively on BrowserViews on Windows. #26774 (Also in 12)
Fixed an issue where draggable regions in BrowserWindow causes BrowserView to become draggable in non-correspondent places. #26754 (Also in 10, 12)
Fixed import of unpacked node modules. #26751 (Also in 12)"
565,"Release Notes for v10.1.7
Fixes

Fixed <webview> render-process-gone event dispatch. #26577 
Fixed an issue where IsMaximized would incorrectly return false for some windows on Windows. #26779 (Also in 12)
Fixed an issue where draggable regions in BrowserWindow causes BrowserView to become draggable in non-correspondent places. #26753 (Also in 11, 12)
Fixed an issue where some buttons were un-clickable in some BrowserViews with draggable regions enabled. #26744 (Also in 9, 11)
Fixed an issue whereby a corrupted async_hooks stack would crash the renderer when throwing some errors in the renderer process. #26747 (Also in 9, 11)
Fixed uncaught promise rejection when creating webContents with javascript disabled. #26871 (Also in 11, 12)

Other Changes

Security: backported the fix to CVE-2020-16015: Insufficient data validation in WASM. #26858 
Security: backported the fix to CVE-2020-16022: Insufficient policy enforcement in networking. #26860 

Unknown

Re-enable Rosetta on Apple Silicon devices. #26569 (Also in 7.3, 8, 9, 11)
","Release Notes for v10.1.7
Fixes
Fixed  render-process-gone event dispatch. #26577 
Fixed an issue where IsMaximized would incorrectly return false for some windows on Windows. #26779 (Also in 12)
Fixed an issue where draggable regions in BrowserWindow causes BrowserView to become draggable in non-correspondent places. #26753 (Also in 11, 12)
Fixed an issue where some buttons were un-clickable in some BrowserViews with draggable regions enabled. #26744 (Also in 9, 11)
Fixed an issue whereby a corrupted async_hooks stack would crash the renderer when throwing some errors in the renderer process. #26747 (Also in 9, 11)
Fixed uncaught promise rejection when creating webContents with javascript disabled. #26871 (Also in 11, 12)
Other Changes
Security: backported the fix to CVE-2020-16015: Insufficient data validation in WASM. #26858 
Security: backported the fix to CVE-2020-16022: Insufficient policy enforcement in networking. #26860 
Unknown
Re-enable Rosetta on Apple Silicon devices. #26569 (Also in 7.3, 8, 9, 11)"
566,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.6.
# Release Notes for v12.0.0-beta.6
Fixes

Added default Bluetooth permission strings to info.plist. #26769 (Also in 11)
Fixed an issue where IsMaximized would incorrectly return false for some windows on Windows. #26772 
Fixed an issue where draggable regions did not work exclusively on BrowserViews on Windows. #26775 (Also in 11)
Fixed an issue where draggable regions in BrowserWindow causes BrowserView to become draggable in non-correspondent places. #26755 (Also in 10, 11)
Fixed import of unpacked node modules. #26750 (Also in 11)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.6.
Release Notes for v12.0.0-beta.6
Fixes
Added default Bluetooth permission strings to info.plist. #26769 (Also in 11)
Fixed an issue where IsMaximized would incorrectly return false for some windows on Windows. #26772 
Fixed an issue where draggable regions did not work exclusively on BrowserViews on Windows. #26775 (Also in 11)
Fixed an issue where draggable regions in BrowserWindow causes BrowserView to become draggable in non-correspondent places. #26755 (Also in 10, 11)
Fixed import of unpacked node modules. #26750 (Also in 11)"
567,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.5.
# Release Notes for v12.0.0-beta.5
Fixes

Fixed a use-after-free error that could occur when destroying a WebContents during the did-stop-loading event. #26733 

Other Changes

Removed deprecated crashReporter APIs. #26709 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.5.
Release Notes for v12.0.0-beta.5
Fixes
Fixed a use-after-free error that could occur when destroying a WebContents during the did-stop-loading event. #26733 
Other Changes
Removed deprecated crashReporter APIs. #26709 "
568,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.4.
# Release Notes for v12.0.0-beta.4
Fixes

Fixed contentTracing.stopRecording() not rejecting when there is no trace in progress. #26656 (Also in 11)
Fixed screen methods not being accessible via remote.screen. #26661 (Also in 11)
Fixed a crash when calling webContents.fromId with an unknown ID. #26651 (Also in 11)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.4.
Release Notes for v12.0.0-beta.4
Fixes
Fixed contentTracing.stopRecording() not rejecting when there is no trace in progress. #26656 (Also in 11)
Fixed screen methods not being accessible via remote.screen. #26661 (Also in 11)
Fixed a crash when calling webContents.fromId with an unknown ID. #26651 (Also in 11)"
569,"Release Notes for v11.0.3
Fixes

Fixed &lt;webview&gt; render-process-gone event dispatch. #26578 
Fixed contentTracing.stopRecording() not rejecting when there is no trace in progress. #26655 (Also in 12)
Fixed screen methods not being accessible via remote.screen. #26660 
Fixed a crash when calling webContents.fromId with an unknown ID. #26652 
","Release Notes for v11.0.3
Fixes
Fixed <webview> render-process-gone event dispatch. #26578 
Fixed contentTracing.stopRecording() not rejecting when there is no trace in progress. #26655 (Also in 12)
Fixed screen methods not being accessible via remote.screen. #26660 
Fixed a crash when calling webContents.fromId with an unknown ID. #26652 "
570,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.3.
# Release Notes for v12.0.0-beta.3","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.3.
Release Notes for v12.0.0-beta.3"
571,"Release Notes for v9.3.5
Fixes

Fixed <webview> render-process-gone event dispatch. #26576 
Fixed LC_ALL environment variable getting changed in Electron. #26508 (Also in 10, 11)
Fixed debug.log files being created under working directory on windows. #26267 (Also in 10)
Fixed draggable regions stops working when devtools is opened on macOS. #26506 (Also in 10, 11)

Other Changes

Backported the fix to CVE-2020-16017: Browser UAF when detaching a provisional frame. #26477 
Fixed value of getSystemVersion() on Big Sur. #26430 
Security: backported fix for 1143772. #26400 
Security: backported fix for 1144489. #26397 
Security: backported fix for chromium:1133527. #26412 
Security: backported fix for chromium:1137608. #26409 
Security: backported fix for chromium:1139398. #26406 

Unknown

Re-enable Rosetta on Apple Silicon devices. #26572 (Also in 7.3, 8, 10, 11)
","Release Notes for v9.3.5
Fixes
Fixed  render-process-gone event dispatch. #26576 
Fixed LC_ALL environment variable getting changed in Electron. #26508 (Also in 10, 11)
Fixed debug.log files being created under working directory on windows. #26267 (Also in 10)
Fixed draggable regions stops working when devtools is opened on macOS. #26506 (Also in 10, 11)
Other Changes
Backported the fix to CVE-2020-16017: Browser UAF when detaching a provisional frame. #26477 
Fixed value of getSystemVersion() on Big Sur. #26430 
Security: backported fix for 1143772. #26400 
Security: backported fix for 1144489. #26397 
Security: backported fix for chromium:1133527. #26412 
Security: backported fix for chromium:1137608. #26409 
Security: backported fix for chromium:1139398. #26406 
Unknown
Re-enable Rosetta on Apple Silicon devices. #26572 (Also in 7.3, 8, 10, 11)"
572,"Release Notes for v11.0.2
Fixes

Fixed LC_ALL environment variable getting changed in Electron. #26551 (Also in 9, 10)
Fixed an issue where some buttons were un-clickable in some BrowserViews with draggable regions enabled. #26528 
Fixed detection of launch on login items
Fixed detection of enabled state set by TaskManager. #26538 
Stopped using private API CTFontDescriptorIsSystemUIFont in MAS build. #26574 

Other Changes

Updated Chromium to 87.0.4280.67. #26565 

Unknown

Re-enable Rosetta on Apple Silicon devices. #26570 (Also in 7.3, 8, 9, 10)
","Release Notes for v11.0.2
Fixes
Fixed LC_ALL environment variable getting changed in Electron. #26551 (Also in 9, 10)
Fixed an issue where some buttons were un-clickable in some BrowserViews with draggable regions enabled. #26528 
Fixed detection of launch on login items
Fixed detection of enabled state set by TaskManager. #26538 
Stopped using private API CTFontDescriptorIsSystemUIFont in MAS build. #26574 
Other Changes
Updated Chromium to 87.0.4280.67. #26565 
Unknown
Re-enable Rosetta on Apple Silicon devices. #26570 (Also in 7.3, 8, 9, 10)"
573,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.1.
# Release Notes for v12.0.0-beta.1
Features

Added 'resized' (Windows/macOS) and 'moved' (Windows) events to BrowserWindow. #26216 (Also in 11)
Added APIs to enable/disable spell checker. #26276 
Added Serial API support. #25237 
Added BrowserWindow.isTabletMode API. #25209 
Added displayFrequency to the Display object to allow getting information about the refresh rate on Windows. #26472 
Added net.online for detecting whether there is currently internet connection. #21004 
Added osProcessId / name properties to webFrameMain. #26093 
Added powerMonitor.onBatteryPower. #26494 
Added session.setSSLConfig() to allow configuring SSL. #25461 
Added webContents.forcefullyCrashRenderer() to forcefully terminate a renderer process to assist with recovering a hung renderer. #25580 (Also in 11)
Added webFrameMain API for accessing sub-frames of a WebContents instance from the main process. #25464 
Added webPreferences.preferredSizeMode to allow sizing views according to their document's minimum size. #25874 
Added a disabledCipherSuites option to Session.setSSLConfig. #25818 
Added a new ""credentials"" option for net.request(). #25284 
Added a new asynchronous shell.trashItem() API, replacing the synchronous shell.moveItemToTrash(). #25114 
Added new app.runningUnderRosettaTranslation property to detect when running under rosetta on Apple silicon. #26444 (Also in 11)
Added new system-context-menu event to allow preventing and overriding the system context menu. #25795 (Also in 11)
Added non-localized serviceName to 'child-process-gone' / app.getAppMetrics(). #25975 
Added read/write support for Toast Activator CLSID in shortcuts. #25493 
Added setWindowOpenHandler API for renderer-created child windows, and deprecate new-window event. #24517 
Added spellcheck API to renderer. #25060 
Added support for explicitly specifying direct, auto_detect or system modes in session.setProxy(). #24937 
Added support for showing macOS share menu. #25629 
Adds fast user switching event to powerMonitor on macOS. #25321 
Allowed setting the 'Origin' header and Sec-Fetch-* headers in net.request(). #26135 
Changed the default of crashReporter.start({ compress }) from false to true. #25288 
Implemented Electron Fuses for customizing certain Electron features at package time. #24241 
Implemented custom Toast XML notifications on Windows
Added failure reporting of notifications on Window. #25401 
Improved dark mode support on Windows. #25373 (Also in 10, 11)
Removed links to the Electron website from the default 'Help' menu in packaged apps. #25831 
Removed the desktopCapturer.getMediaSourceIdForWebContents() API. #25414 (Also in 11)
The launchInfo of app event ready is now populated with information from UNNotificationResponse when the app is launched via a notification presented by UNUserNotificationCenter (in a native node module). #25950 
Updated setPermissionRequestHandler to correctly recognize permissions being requested. #26172 (Also in 11)
Windows 10 versions 2004 and later support WDA_EXCLUDEFROMCAPTURE and will now exclude a window entirely from screen capture when setContentProtection  is enabled. Older Windows versions will continue to show a black window as before. #24274 

Fixes

Added missing module delay loads on windows to reduce per process reference set impact. #25428 (Also in 9, 10, 11)
Browser views will properly resize within windows. #25951 (Also in 9, 10, 11)
Deprecated the use of the vm module in the renderer process. #26087 
Enabled support for new Chromium experimental PDF viewer UI. #26010 
Excess menu item separators are now only removed after item re-ordering is done to avoid accidental removal of needed separators. #25563 (Also in 10, 11)
Fixed BrowserWindow.fromBrowserView throwing an error when there were multiple BrowserViews in a window. #26493 
Fixed CORS not being disabled by webSecurity: false. #25463 (Also in 9, 10, 11)
Fixed Electron not working on Windows 7 after https://github.com/electron/electron/pull/25076. #25162 (Also in 8, 9, 10, 11)
Fixed GdiTextPrinting when used with silent printing. #25679 (Also in 9, 10, 11)
Fixed NativeImage.crop().toBitmap() returning incorrect data. #25757 (Also in 10, 11)
Fixed NativeImage.getScaleFactors() always returning the same value. #25832 (Also in 9, 10, 11)
Fixed LC_ALL environment variable getting changed in Electron. #26507 (Also in 9, 10, 11)
Fixed ready-to-show event not emitted on some machines. #25448 (Also in 8, 10, 11)
Fixed ses.setCertificateVerifyProc canceling requests in unrelated sessions. #26517 
Fixed window.open not accepting size values with ""px"" at the end. #26104 (Also in 10, 11)
Fixed a crash in app.importCertificate() on Linux. #25523 (Also in 9, 10, 11)
Fixed a crash in printing on Windows. #25622 (Also in 9, 10, 11)
Fixed a crash in the renderer process when invoking the Badging API. #25294 (Also in 9, 10, 11)
Fixed a crash seen when printing. #25989 (Also in 11)
Fixed a crash that could happen when a window was closed while a webview was in the process of being attached. #25431 (Also in 11)
Fixed a crash when closing window in an event listener after exiting fullscreen on macOS. #25468 (Also in 9, 10, 11)
Fixed a rare crash on Windows that could occur when emitting certain powerMonitor events. #25836 (Also in 10, 11)
Fixed an Uncaught TypeError when opening DevTools. #26474 (Also in 11)
Fixed an issue that could cause a normally-exiting process to fail with an ""illegal access"" message and exit code 7. #25430 (Also in 8, 9, 10, 11)
Fixed an issue that file length is not available in 'will-download' event when file is downloaded thourgh intercepted request. #25324 
Fixed an issue where Hover Text on macOS Catalina did not work without VoiceOver also being enabled. #26183 (Also in 9, 10, 11)
Fixed an issue where Wasm code generation erroneously showed as being disallowed by embedder when contextIsolation was enabled. #25777 (Also in 10, 11)
Fixed an issue where Windows notifications with timeoutType of 'never' did not work properly. #25820 (Also in 9, 10, 11)
Fixed an issue where Save as PDF from PDF Viewer Print dialog failed and sometimes crashed. #25959 (Also in 9, 10, 11)
Fixed an issue where document.hasFocus and document.activeElement would be inconsistent upon showing a window that was initially created with show: false. #25292 (Also in 10, 11)
Fixed an issue where an error would be displayed when using webContents.print() if no default was set and no device name provided. #25515 (Also in 9, 10, 11)
Fixed an issue where draggable regions did not work exclusively on BrowserViews. #26145 (Also in 9, 10, 11)
Fixed an issue where draggable regions were not properly updated on BrowserViews when a containing BrowserWindow was resized. #26233 (Also in 9, 10, 11)
Fixed an issue where events on webview elements were missing properties if contextIsolation was enabled. #26289 
Fixed an issue where filters set in dialogs on macOS would have nondeterministic ordering. #25164 (Also in 9, 10, 11)
Fixed an issue where frameless windows showed window controls after being in simple fullscreen mode on macOS. #26096 (Also in 9, 10, 11)
Fixed an issue where net.request would continue downloading data even when the consuming stream was throttled. #25531 
Fixed an issue where packages could not be selected with  on macOS. #25030 (Also in 10, 11)
Fixed an issue where pageRanges was not properly honored when printing. #25064 (Also in 10, 11)
Fixed an issue where some Node.js module API calls hung in the renderer process after reloads when render process reuse was enabled. #25869 (Also in 9, 10, 11)
Fixed an issue where some buttons were un-clickable in some BrowserViews with draggable regions enabled. #26496 (Also in 11)
Fixed an issue where the buffer returned by NativeImage.getBitmap() could point to freed memory. #25782 
Fixed an issue whereby a corrupted async_hooks stack would crash the renderer when throwing some errors in the renderer process. #26365 (Also in 11)
Fixed bug that meant require.resolve paths option was ignored. #25891 (Also in 9, 10, 11)
Fixed calling app.commandLine.appendSwitch('lang') not changing app's locale. #26185 (Also in 9, 10, 11)
Fixed crash when application launched from UNUserNotificationCenter notification (via a native node module). #25702 (Also in 9, 10, 11)
Fixed crash while exiting Electron after using the Web Serial API. #25969 
Fixed crashes caused by attempting to modify destroyed views. #25411 (Also in 9, 10, 11)
Fixed crashes using nativeImage on Windows on ARM. #25396 (Also in 11)
Fixed detection of launch on login items
Fixed detection of enabled state set by TaskManager. #26515 (Also in 11)
Fixed draggable regions stops working when devtools is opened on macOS. #26361 (Also in 9, 10, 11)
Fixed error handling on write failure in the protocol module. #26296 
Fixed intermittent access violation during redirects (intercepted requests). #25393 
Fixed issue where quitAndInstall() would not restart the app upon update completion on macOS Big Sur. #25864 (Also in 11)
Fixed issue where setting the spellchecker languages to an empty array would permanently disable the spellchecker till the end of time. #26119 (Also in 11)
Fixed main process's console output not printing to devtools on Windows. #25765 
Fixed maximized frameless window bleeding to other monitors. #25940 (Also in 8, 9, 10, 11)
Fixed memory leak on macOS when using dialog.showMessageBox API. #26078 (Also in 8, 9, 10, 11)
Fixed memory leak when creating ""Services"" menu. #25617 (Also in 9, 10, 11)
Fixed multiple dock icons being left in system when calling dock.show/hide on macOS. #25269 (Also in 8, 9, 10, 11)
Fixed network permission error when there are multiple WebContents sharing same session are created with web security disabled. #25139 (Also in 8, 9, 10, 11)
Fixed ready-to-show event not emitted on some machines. #25632 (Also in 10, 11)
Fixed shell.moveItemToTrash on Windows so that it returns false when move was unsuccessful. #25124 (Also in 9, 10, 11)
Fixed the following issues for frameless when maximized on Windows. #25052 (Also in 8, 9, 10, 11)
Fixed the pretty-print JavaScript feature in DevTools not functioning correctly. #25780 
Fixed the remote-debugging-port discovery page showing garbled text. #25576 (Also in 10, 11)
Fixed webRequest module not recognizing the encoding of the filename in Content-Disposition header. #25961 
Fixed window.open called from child window. #25080 (Also in 11)
Removed private API usage that was blocking Mac App Store releases. #26491 (Also in 11)
Stopped using private API CTFontDescriptorIsSystemUIFont in MAS build. #26548 (Also in 11)
Suppressed a spurious warning about executeJavaScript being called without worldSafeExecuteJavaScript being enabled in apps that do not call executeJavaScript. #25692 (Also in 10, 11)
Updated Node root certs to use NSS 3.56. #25313 (Also in 8, 9, 10, 11)
Updated internal memory allocation logic such that you no longer need to use the com.apple.security.cs.allow-unsigned-executable-memory codesign entitlement on macOS. #26331 

Other Changes

Added a small console hint to console to help debug renderer crashes. #25317 (Also in 9, 10, 11)
BrowserWindow.fromWebContents() now returns an accurate result for WebContents in a BrowserView or webview. #25408 
Deprecated the remote module. It is replaced by @electron/remote. #25293 
Fixed resource leak in worker threads. #25332 (Also in 9, 10, 11)
None. #25526 
Updated Node.js to v14.15.1. #26533 
Upgraded Node.js to v14.9.0. #25249 

Documentation

Documentation changes: #25760, #25901, #25939, #25941, #25985, #25999, #26003, #26008, #26017, #26018, #26118, #26120, #26187, #26335

Unknown

Added extension-loaded, extension-unloaded, and extension-ready events to Session. #25385 
Added support for some chrome.management APIs. #25098 (Also in 9, 10, 11)
Fixed chrome.runtime.getPlatformInfo crashing the background process upon being invoked. #25357 
Fixed issue where clicking notifications would no longer dismiss them as expected. #25247 (Also in 8, 9, 10, 11)
Re-enable Rosetta on Apple Silicon devices. #26568 (Also in 7.3, 8, 9, 10, 11)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@12.0.0-beta.1.
Release Notes for v12.0.0-beta.1
Features
Added 'resized' (Windows/macOS) and 'moved' (Windows) events to BrowserWindow. #26216 (Also in 11)
Added APIs to enable/disable spell checker. #26276 
Added Serial API support. #25237 
Added BrowserWindow.isTabletMode API. #25209 
Added displayFrequency to the Display object to allow getting information about the refresh rate on Windows. #26472 
Added net.online for detecting whether there is currently internet connection. #21004 
Added osProcessId / name properties to webFrameMain. #26093 
Added powerMonitor.onBatteryPower. #26494 
Added session.setSSLConfig() to allow configuring SSL. #25461 
Added webContents.forcefullyCrashRenderer() to forcefully terminate a renderer process to assist with recovering a hung renderer. #25580 (Also in 11)
Added webFrameMain API for accessing sub-frames of a WebContents instance from the main process. #25464 
Added webPreferences.preferredSizeMode to allow sizing views according to their document's minimum size. #25874 
Added a disabledCipherSuites option to Session.setSSLConfig. #25818 
Added a new ""credentials"" option for net.request(). #25284 
Added a new asynchronous shell.trashItem() API, replacing the synchronous shell.moveItemToTrash(). #25114 
Added new app.runningUnderRosettaTranslation property to detect when running under rosetta on Apple silicon. #26444 (Also in 11)
Added new system-context-menu event to allow preventing and overriding the system context menu. #25795 (Also in 11)
Added non-localized serviceName to 'child-process-gone' / app.getAppMetrics(). #25975 
Added read/write support for Toast Activator CLSID in shortcuts. #25493 
Added setWindowOpenHandler API for renderer-created child windows, and deprecate new-window event. #24517 
Added spellcheck API to renderer. #25060 
Added support for explicitly specifying direct, auto_detect or system modes in session.setProxy(). #24937 
Added support for showing macOS share menu. #25629 
Adds fast user switching event to powerMonitor on macOS. #25321 
Allowed setting the 'Origin' header and Sec-Fetch-* headers in net.request(). #26135 
Changed the default of crashReporter.start({ compress }) from false to true. #25288 
Implemented Electron Fuses for customizing certain Electron features at package time. #24241 
Implemented custom Toast XML notifications on Windows
Added failure reporting of notifications on Window. #25401 
Improved dark mode support on Windows. #25373 (Also in 10, 11)
Removed links to the Electron website from the default 'Help' menu in packaged apps. #25831 
Removed the desktopCapturer.getMediaSourceIdForWebContents() API. #25414 (Also in 11)
The launchInfo of app event ready is now populated with information from UNNotificationResponse when the app is launched via a notification presented by UNUserNotificationCenter (in a native node module). #25950 
Updated setPermissionRequestHandler to correctly recognize permissions being requested. #26172 (Also in 11)
Windows 10 versions 2004 and later support WDA_EXCLUDEFROMCAPTURE and will now exclude a window entirely from screen capture when setContentProtection  is enabled. Older Windows versions will continue to show a black window as before. #24274 
Fixes
Added missing module delay loads on windows to reduce per process reference set impact. #25428 (Also in 9, 10, 11)
Browser views will properly resize within windows. #25951 (Also in 9, 10, 11)
Deprecated the use of the vm module in the renderer process. #26087 
Enabled support for new Chromium experimental PDF viewer UI. #26010 
Excess menu item separators are now only removed after item re-ordering is done to avoid accidental removal of needed separators. #25563 (Also in 10, 11)
Fixed BrowserWindow.fromBrowserView throwing an error when there were multiple BrowserViews in a window. #26493 
Fixed CORS not being disabled by webSecurity: false. #25463 (Also in 9, 10, 11)
Fixed Electron not working on Windows 7 after link. #25162 (Also in 8, 9, 10, 11)
Fixed GdiTextPrinting when used with silent printing. #25679 (Also in 9, 10, 11)
Fixed NativeImage.crop().toBitmap() returning incorrect data. #25757 (Also in 10, 11)
Fixed NativeImage.getScaleFactors() always returning the same value. #25832 (Also in 9, 10, 11)
Fixed LC_ALL environment variable getting changed in Electron. #26507 (Also in 9, 10, 11)
Fixed ready-to-show event not emitted on some machines. #25448 (Also in 8, 10, 11)
Fixed ses.setCertificateVerifyProc canceling requests in unrelated sessions. #26517 
Fixed window.open not accepting size values with ""px"" at the end. #26104 (Also in 10, 11)
Fixed a crash in app.importCertificate() on Linux. #25523 (Also in 9, 10, 11)
Fixed a crash in printing on Windows. #25622 (Also in 9, 10, 11)
Fixed a crash in the renderer process when invoking the Badging API. #25294 (Also in 9, 10, 11)
Fixed a crash seen when printing. #25989 (Also in 11)
Fixed a crash that could happen when a window was closed while a webview was in the process of being attached. #25431 (Also in 11)
Fixed a crash when closing window in an event listener after exiting fullscreen on macOS. #25468 (Also in 9, 10, 11)
Fixed a rare crash on Windows that could occur when emitting certain powerMonitor events. #25836 (Also in 10, 11)
Fixed an Uncaught TypeError when opening DevTools. #26474 (Also in 11)
Fixed an issue that could cause a normally-exiting process to fail with an ""illegal access"" message and exit code 7. #25430 (Also in 8, 9, 10, 11)
Fixed an issue that file length is not available in 'will-download' event when file is downloaded thourgh intercepted request. #25324 
Fixed an issue where Hover Text on macOS Catalina did not work without VoiceOver also being enabled. #26183 (Also in 9, 10, 11)
Fixed an issue where Wasm code generation erroneously showed as being disallowed by embedder when contextIsolation was enabled. #25777 (Also in 10, 11)
Fixed an issue where Windows notifications with timeoutType of 'never' did not work properly. #25820 (Also in 9, 10, 11)
Fixed an issue where Save as PDF from PDF Viewer Print dialog failed and sometimes crashed. #25959 (Also in 9, 10, 11)
Fixed an issue where document.hasFocus and document.activeElement would be inconsistent upon showing a window that was initially created with show: false. #25292 (Also in 10, 11)
Fixed an issue where an error would be displayed when using webContents.print() if no default was set and no device name provided. #25515 (Also in 9, 10, 11)
Fixed an issue where draggable regions did not work exclusively on BrowserViews. #26145 (Also in 9, 10, 11)
Fixed an issue where draggable regions were not properly updated on BrowserViews when a containing BrowserWindow was resized. #26233 (Also in 9, 10, 11)
Fixed an issue where events on webview elements were missing properties if contextIsolation was enabled. #26289 
Fixed an issue where filters set in dialogs on macOS would have nondeterministic ordering. #25164 (Also in 9, 10, 11)
Fixed an issue where frameless windows showed window controls after being in simple fullscreen mode on macOS. #26096 (Also in 9, 10, 11)
Fixed an issue where net.request would continue downloading data even when the consuming stream was throttled. #25531 
Fixed an issue where packages could not be selected with  on macOS. #25030 (Also in 10, 11)
Fixed an issue where pageRanges was not properly honored when printing. #25064 (Also in 10, 11)
Fixed an issue where some Node.js module API calls hung in the renderer process after reloads when render process reuse was enabled. #25869 (Also in 9, 10, 11)
Fixed an issue where some buttons were un-clickable in some BrowserViews with draggable regions enabled. #26496 (Also in 11)
Fixed an issue where the buffer returned by NativeImage.getBitmap() could point to freed memory. #25782 
Fixed an issue whereby a corrupted async_hooks stack would crash the renderer when throwing some errors in the renderer process. #26365 (Also in 11)
Fixed bug that meant require.resolve paths option was ignored. #25891 (Also in 9, 10, 11)
Fixed calling app.commandLine.appendSwitch('lang') not changing app's locale. #26185 (Also in 9, 10, 11)
Fixed crash when application launched from UNUserNotificationCenter notification (via a native node module). #25702 (Also in 9, 10, 11)
Fixed crash while exiting Electron after using the Web Serial API. #25969 
Fixed crashes caused by attempting to modify destroyed views. #25411 (Also in 9, 10, 11)
Fixed crashes using nativeImage on Windows on ARM. #25396 (Also in 11)
Fixed detection of launch on login items
Fixed detection of enabled state set by TaskManager. #26515 (Also in 11)
Fixed draggable regions stops working when devtools is opened on macOS. #26361 (Also in 9, 10, 11)
Fixed error handling on write failure in the protocol module. #26296 
Fixed intermittent access violation during redirects (intercepted requests). #25393 
Fixed issue where quitAndInstall() would not restart the app upon update completion on macOS Big Sur. #25864 (Also in 11)
Fixed issue where setting the spellchecker languages to an empty array would permanently disable the spellchecker till the end of time. #26119 (Also in 11)
Fixed main process's console output not printing to devtools on Windows. #25765 
Fixed maximized frameless window bleeding to other monitors. #25940 (Also in 8, 9, 10, 11)
Fixed memory leak on macOS when using dialog.showMessageBox API. #26078 (Also in 8, 9, 10, 11)
Fixed memory leak when creating ""Services"" menu. #25617 (Also in 9, 10, 11)
Fixed multiple dock icons being left in system when calling dock.show/hide on macOS. #25269 (Also in 8, 9, 10, 11)
Fixed network permission error when there are multiple WebContents sharing same session are created with web security disabled. #25139 (Also in 8, 9, 10, 11)
Fixed ready-to-show event not emitted on some machines. #25632 (Also in 10, 11)
Fixed shell.moveItemToTrash on Windows so that it returns false when move was unsuccessful. #25124 (Also in 9, 10, 11)
Fixed the following issues for frameless when maximized on Windows. #25052 (Also in 8, 9, 10, 11)
Fixed the pretty-print JavaScript feature in DevTools not functioning correctly. #25780 
Fixed the remote-debugging-port discovery page showing garbled text. #25576 (Also in 10, 11)
Fixed webRequest module not recognizing the encoding of the filename in Content-Disposition header. #25961 
Fixed window.open called from child window. #25080 (Also in 11)
Removed private API usage that was blocking Mac App Store releases. #26491 (Also in 11)
Stopped using private API CTFontDescriptorIsSystemUIFont in MAS build. #26548 (Also in 11)
Suppressed a spurious warning about executeJavaScript being called without worldSafeExecuteJavaScript being enabled in apps that do not call executeJavaScript. #25692 (Also in 10, 11)
Updated Node root certs to use NSS 3.56. #25313 (Also in 8, 9, 10, 11)
Updated internal memory allocation logic such that you no longer need to use the com.apple.security.cs.allow-unsigned-executable-memory codesign entitlement on macOS. #26331 
Other Changes
Added a small console hint to console to help debug renderer crashes. #25317 (Also in 9, 10, 11)
BrowserWindow.fromWebContents() now returns an accurate result for WebContents in a BrowserView or webview. #25408 
Deprecated the remote module. It is replaced by @electron/remote. #25293 
Fixed resource leak in worker threads. #25332 (Also in 9, 10, 11)
None. #25526 
Updated Node.js to v14.15.1. #26533 
Upgraded Node.js to v14.9.0. #25249 
Documentation
Documentation changes: #25760, #25901, #25939, #25941, #25985, #25999, #26003, #26008, #26017, #26018, #26118, #26120, #26187, #26335
Unknown
Added extension-loaded, extension-unloaded, and extension-ready events to Session. #25385 
Added support for some chrome.management APIs. #25098 (Also in 9, 10, 11)
Fixed chrome.runtime.getPlatformInfo crashing the background process upon being invoked. #25357 
Fixed issue where clicking notifications would no longer dismiss them as expected. #25247 (Also in 8, 9, 10, 11)
Re-enable Rosetta on Apple Silicon devices. #26568 (Also in 7.3, 8, 9, 10, 11)"
574,"Release Notes for v10.1.6
Fixes

Fixed LC_ALL environment variable getting changed in Electron. #26550 (Also in 9)
Fixed window.open not accepting size values with ""px"" at the end. #26333 (Also in 11)
Fixed a rare crash on Windows that could occur when emitting certain powerMonitor events. #26180 (Also in 11)
Fixed an issue where Hover Text on macOS Catalina did not work without VoiceOver also being enabled. #26245 (Also in 9, 11)
Fixed an issue where draggable regions did not work exclusively on BrowserViews. #26260 (Also in 9, 11)
Fixed an issue where draggable regions were not properly updated on BrowserViews when a containing BrowserWindow was resized. #26321 (Also in 9, 11)
Fixed an issue where packages could not be selected with <input file=""type""> on macOS. #26555 (Also in 11)
Fixed calling app.commandLine.appendSwitch('lang') not changing app's locale. #26241 (Also in 9, 11)
Fixed debug.log files being created under working directory on windows. #26266 (Also in 9)
Fixed draggable regions stops working when devtools is opened on macOS. #26394 (Also in 9, 11)

Other Changes

Backported the fix to CVE-2020-16013: Inappropriate implementation in V8. #26455 
Backported the fix to CVE-2020-16017: Browser UAF when detaching a provisional frame. #26473 
Improved performance of takeHeapSnapshot(). #26229 
Security: backported fix for 1100470, 1125337. #26209 
Security: backported fix for 1128657. #26196 
Security: backported fix for 1133983. #26203 
Security: backported fix for 1135018. #26193 
Security: backported fix for 1135857. #26190 
Security: backported fix for 1143772. #26399 
Security: backported fix for 1144489. #26396 
Security: backported fix for 817982. #26438 
Security: backported fix for chromium:1117258. #26199 
Security: backported fix for chromium:1132111. #26206 
Security: backported fix for chromium:1133527. #26411 
Security: backported fix for chromium:1137608. #26408 
Security: backported fix for chromium:1137630. #26212 
Security: backported fix for chromium:1139398. #26405 
","Release Notes for v10.1.6
Fixes
Fixed LC_ALL environment variable getting changed in Electron. #26550 (Also in 9)
Fixed window.open not accepting size values with ""px"" at the end. #26333 (Also in 11)
Fixed a rare crash on Windows that could occur when emitting certain powerMonitor events. #26180 (Also in 11)
Fixed an issue where Hover Text on macOS Catalina did not work without VoiceOver also being enabled. #26245 (Also in 9, 11)
Fixed an issue where draggable regions did not work exclusively on BrowserViews. #26260 (Also in 9, 11)
Fixed an issue where draggable regions were not properly updated on BrowserViews when a containing BrowserWindow was resized. #26321 (Also in 9, 11)
Fixed an issue where packages could not be selected with  on macOS. #26555 (Also in 11)
Fixed calling app.commandLine.appendSwitch('lang') not changing app's locale. #26241 (Also in 9, 11)
Fixed debug.log files being created under working directory on windows. #26266 (Also in 9)
Fixed draggable regions stops working when devtools is opened on macOS. #26394 (Also in 9, 11)
Other Changes
Backported the fix to CVE-2020-16013: Inappropriate implementation in V8. #26455 
Backported the fix to CVE-2020-16017: Browser UAF when detaching a provisional frame. #26473 
Improved performance of takeHeapSnapshot(). #26229 
Security: backported fix for 1100470, 1125337. #26209 
Security: backported fix for 1128657. #26196 
Security: backported fix for 1133983. #26203 
Security: backported fix for 1135018. #26193 
Security: backported fix for 1135857. #26190 
Security: backported fix for 1143772. #26399 
Security: backported fix for 1144489. #26396 
Security: backported fix for 817982. #26438 
Security: backported fix for chromium:1117258. #26199 
Security: backported fix for chromium:1132111. #26206 
Security: backported fix for chromium:1133527. #26411 
Security: backported fix for chromium:1137608. #26408 
Security: backported fix for chromium:1137630. #26212 
Security: backported fix for chromium:1139398. #26405 "
575,"Release Notes for v8.5.5
Fixes

Fixed <webview> render-process-gone event dispatch. #26575 

Unknown

Re-enable Rosetta on Apple Silicon devices. #26573 (Also in 7.3, 8, 9, 10, 11)

End of Support for 8.x.y
Electron 8.x.y has reached end-of-support as per the project's support policy. Developers and applications are encouraged to upgrade to a newer version of Electron.","Release Notes for v8.5.5
Fixes
Fixed  render-process-gone event dispatch. #26575 
Unknown
Re-enable Rosetta on Apple Silicon devices. #26573 (Also in 7.3, 8, 9, 10, 11)
End of Support for 8.x.y
Electron 8.x.y has reached end-of-support as per the project's support policy. Developers and applications are encouraged to upgrade to a newer version of Electron."
576,"Release Notes for v11.0.1
Fixes

Fixed an Uncaught TypeError when opening DevTools. #26514 
Removed private API usage that was blocking Mac App Store releases. #26513 
","Release Notes for v11.0.1
Fixes
Fixed an Uncaught TypeError when opening DevTools. #26514 
Removed private API usage that was blocking Mac App Store releases. #26513 "
577,"Release Notes for v8.5.4
Other Changes

Backported the fix to CVE-2020-16017: Browser UAF when detaching a provisional frame. #26484 
Security: backported fix for 1143772. #26401 
Security: backported fix for 1144489. #26398 
Security: backported fix for chromium:1133527. #26413 
Security: backported fix for chromium:1137608. #26410 
Security: backported fix for chromium:1139398. #26407 
","Release Notes for v8.5.4
Other Changes
Backported the fix to CVE-2020-16017: Browser UAF when detaching a provisional frame. #26484 
Security: backported fix for 1143772. #26401 
Security: backported fix for 1144489. #26398 
Security: backported fix for chromium:1133527. #26413 
Security: backported fix for chromium:1137608. #26410 
Security: backported fix for chromium:1139398. #26407 "
578,"Release Notes for v11.0.0
Stack Upgrades

Chromium 87.0.4280.47
v87 blog post
v86 blog post


Node v12.18.3
v12.18.3 release notes
v12.18.2 release notes
v12.18.1 release notes
v12.18.0 release notes
v12.17.0 release notes


V8 v8.7
v8.7 blog post
v8.6 blog post



Breaking Changes

Removed experimental APIs: BrowserView.{destroy, fromId, fromWebContents, getAllViews} and the id property of BrowserView. #23578 

Features
Additions

Added new experimental apple silicon (darwin arm64) builds. #24545
Added new app.runningUnderRosettaTranslation property to detect when running under rosetta on Apple silicon. #26492
Added V8 crash message and location information to crashReport parameters. #24771 (Also in 10)
Added a small console hint to console to help debug renderer crashes. #25474 (Also in 9, 10)
Added new system-context-menu event to allow preventing and overriding the system context menu. #25835
Added webContents.forcefullyCrashRenderer() to forcefully terminate a renderer process to assist with recovering a hung renderer. #25756
Added app.getApplicationInfoForProtocol() API that returns detailed information about the app that handles a certain protocol. #24112 
Added name to app.getAppMetrics() output. #24359 
Added utility-process-gone event to app. #24367 
Added visualEffectState option to BrowserWindows to allow customization of vibrancy effect state on macOS. #25083 
Added app.createThumbnailFromPath() API that returns a preview image of a file given its file path and a maximum thumbnail size. #24802 
Added back a previously broken visibleOnFullScreen option for setVisibleOnAllWorkspaces. #24956 
Added desktopCapturer.getMediaSourceIdForWebContents(), can be used with getUserMedia to get a stream for a WebContent. #22701 
Added did-become-active event on Mac for observing any application activation. #23872 
Added new worldSafeExecuteJavaScript webPreference to ensure that the return values from webFrame.executeJavaScript are world safe when context isolation is enabled. #24114 (Also in 9, 10)
Added optional parameter to specify monospaced font types for macOS tray titles. #25059 
Added support for suspend and resume events to Windows. #24251 (Also in 8, 9, 10)
Added support for suspend and resume events to macOS. #24254 (Also in 8, 9, 10)
Added the currencyCode field that Apple's StoreKit in-app-purchasing library provides but has not been added to the Product object that inAppPurchase.getProducts returns. #25058
Added 'resized' (Windows/macOS) and 'moved' (Windows) events to BrowserWindow. #26454

Improvements

Improved the performance of sending JS primitives over the context bridge. #24531 (Also in 9, 10)
Improved the performance of sending wide objects over the context bridge. #24671 
Improved the default REPL experience when running Electron with the --interactive flag. #24204
Improved performance of takeHeapSnapshot(). #26230
Changed app.getLoginItemSettings() and app.setLoginItemSettings() API to factor in startup approval keys when determining whether an application is able to launch on login. #24494 
Expose sessionId associated with a target from debugger module. #24170 (Also in 8, 9, 10)
Implemented systemPreferences.getMediaAccessStatus() on Windows. #24275 (Also in 8, 9, 10)
V8CacheOptions is a new webpreference option to enforce code caching policy. #23842 (Also in 8, 9, 10)
When the disabled-by-default-v8.cpu_profiler tracing category is enabled, cpu samples will now be collected from the main process as well as the renderer. #24819

Removed/Deprecated

Removed experimental APIs: BrowserView.{destroy, fromId, fromWebContents, getAllViews} and the id property of BrowserView. #23578 

Fixes

Fixed an issue where pageRanges was not properly honored when printing. #25600 (Also in 10)
Fixed an issue whereby a corrupted async_hooks stack would crash the renderer when throwing some errors in the renderer process. #26424 
Fixed draggable regions stops working when devtools is opened on macOS. #26395
Fixed window.open not accepting size values with ""px"" at the end. #26334 (Also in 10)
Fixed an issue where draggable regions were not properly updated on BrowserViews when a containing BrowserWindow was resized. #26320 (Also in 9, 10)
Fixed an issue where Hover Text on macOS Catalina did not work without VoiceOver also being enabled. #26246 (Also in 9, 10)
Fixed an issue where draggable regions did not work exclusively on BrowserViews. #26259 (Also in 9, 10)
Fixed debug.log files being created under working directory on windows. #26250
Fixed a rare crash on Windows that could occur when emitting certain powerMonitor events. #26181 (Also in 10)
Fixed an issue where packages could not be selected with <input file=""type""> on macOS. #26217 
Fixed calling app.commandLine.appendSwitch('lang') not changing app's locale. #26226 (Also in 9, 10)
Fixed a crash in printing on Windows. #26062 (Also in 9, 10)
Fixed an issue where WASM code generation erroneously showed as being disallowed by embedder when contextIsolation was enabled. #25829 (Also in 10)
Fixed an issue where frameless windows showed window controls after being in simple fullscreen mode on macOS. #26127 (Also in 9, 10)
Fixed issue where setting the spellchecker languages to an empty array would permanently disable the spellchecker till the end of time. #26129 
Fixed memory leak on macOS when using dialog.showMessageBox API. #26099 (Also in 8, 9, 10)
Backported fix for https://crbug.com/1115267. #26036 
Fixed issue where clicking notifications would no longer dismiss them as expected. #26131 (Also in 8, 9)
Fixed NativeImage.getScaleFactors() always returning the same value. #25903 (Also in 9, 10)
Fixed an issue where Windows notifications with timeoutType of 'never' did not work properly. #25902 (Also in 9, 10)
Fixed an issue where some Node.js module API calls hung in the renderer process after reloads when render process reuse was enabled. #25922 (Also in 9, 10)
Fixed bug that meant require.resolve paths option was ignored. #25945 (Also in 10)
Fixed NativeImage.crop().toBitmap() returning incorrect data. #25774 (Also in 10)
Fixed window.open called from child window. #25816
Suppressed a spurious warning about executeJavaScript being called without worldSafeExecuteJavaScript being enabled in apps that do not call executeJavaScript. #25828 (Also in 10)
Fix: gdi printing in silent printing mode. #25744 (Also in 10)
Fixed crash when application launched from UNUserNotificationCenter notification (via a native node module). #25738 (Also in 9, 10)
Fixed resource leak in worker threads. #25661 (Also in 9, 10)
Added missing module delay loads on windows to reduce per process reference set impact. #25436 (Also in 9, 10)
Excess menu item separators are now only removed after item re-ordering is done to avoid accidental removal of needed separators. #25599
Fixed CORS not being disabled by webSecurity: false. #25504 (Also in 9, 10)
Fixed ready-to-show event not emitted on some machines. #25471 (Also in 10)
Fixed a crash in app.importCertificate() on Linux. #25537 (Also in 9, 10)
Fixed a crash that could happen when a window was closed while a webview was in the process of being attached. #25598
Fixed a crash when closing window in an event listener after exiting fullscreen on macOS. #25524 (Also in 10)
Fixed an issue that could cause a normally-exiting process to fail with an ""illegal access"" message and exit code 7. #25459 (Also in 8, 9, 10)
Fixed an issue where an error would be displayed when using webContents.print() if no default was set and no device name provided. #25562 (Also in 9, 10)
Fixed crashes caused by attempting to modify destroyed views. #25509
Fixed the remote-debugging-port discovery page showing garbled text. #25602 (Also in 10)
Fixed unsubscribe from observers when window is closing. #25585 (Also in 9, 10)
Updated Node root certs to use NSS 3.56. #25362 (Also in 8, 9, 10)
Fixed crashes using nativeImage on Windows on ARM. #25410
Fixed a crash in the renderer process when invoking the Badging API. #25370 (Also in 9, 10)
Fixed an issue where document.hasFocus and document.activeElement would be inconsistent upon showing a window that was initially created with show: false. #25323
Fixed client_id file being generated in the working directory for node child process. #25310 (Also in 9)
Fixed multiple dock icons being left in system when calling dock.show/hide on macOS. #25300 (Also in 8, 9, 10)
Fixes the following issues for frameless when maximized on Windows: 
Fix unreachable task bar when auto hidden with position top
Fix 1px extending to secondary monitor
Fix 1px overflowing into taskbar at certain resolutions
Fix white line on top of window under 4k resolutions. #25217 (Also in 8, 9, 10)


Fixed Electron not working on Windows 7 after https://github.com/electron/electron/pull/25076. #25168 (Also in 8, 9, 10)
Fixed an issue where filters set in dialogs on macOS would have nondeterministic ordering. #25193 (Also in 9, 10)
Fixed network permission error when there are multiple WebContents sharing same session are created with web security disabled. #25180 (Also in 8, 9, 10)
Fixed shell.moveItemToTrash on Windows so that it returns false when move was unsuccessful. #25171 (Also in 9, 10)
Fix loading shared worker scripts over custom protocol * fix crash when loading worker scripts with nodeIntegration enabled. #20625 (Also in 9, 10)
Added missing support for isComposing KeyboardEvent property. #23971 (Also in 8, 9, 10)
Added {stream:} option to registerSchemeAsPrivileged to enable custom protocols to stream video and audio. #22955 
Enable NTLM v2 for POSIX platforms and added --disable-ntlm-v2 switch to disable it. #23846 (Also in 7.3, 8, 9, 10)
Fix: Allow windows behind macOS elements if ""frame"" is false. #23976 (Also in 9, 10)
Fix: remove unnecessary corner mask overriding to increase window resize performance. #24642 (Also in 9, 10)
Fixed ""Paste and Match Style"" shortcut on macOS to match OS's ""Option-Shift-Command-V"". #24153 (Also in 8, 9, 10)
Fixed ""null path-to-app"" in test-app when Electron's path contains spaces or special characters. #24214 (Also in 8, 9, 10)
Fixed GTK dark theme setting not respected in Electron on Linux. #23678 (Also in 7.3, 8, 9, 10)
Fixed chrome://accessibility access in Electron. #24437 
Fixed chrome://media-internals and chrome://webrtc-internals pages not loading. #24010 (Also in 8, 9, 10)
Fixed powerMonitor not emitting suspend/resume events on some Windows machines. #25076 (Also in 10)
Fixed process.windowsStore returning undefined in AppX packages. #23785 (Also in 7.3, 8, 9, 10)
Fixed a 10.0.0-beta.1 issue that broke dark mode window titlebars on Linux. #25055 (Also in 10)
Fixed a bezeling issue on vibrant non-frameless BrowserWindows. #23779 (Also in 9, 10)
Fixed a crash in TouchBar for certain methods. #23936 (Also in 10)
Fixed a crash that could happen when using hookWindowMessage on Windows. #24716 (Also in 9, 10)
Fixed a crash that could occur when using in-memory sessions. #24964 (Also in 9, 10)
Fixed a crash that could occur when using the ipcRenderer module after blink had released the context. Instead, a JS exception will be thrown. #23917 (Also in 8, 9, 10)
Fixed a termination crash on Web Workers with Node.js integration enabled. #24436 (Also in 8, 9, 10)
Fixed an error when calling dialog.showCertificateTrustDialog with no BrowserWindow. #24091 (Also in 7.3, 8, 9, 10)
Fixed an intermittent high-CPU usage problem caused a system clock issue during sleep. #24394 (Also in 8, 9, 10)
Fixed an issue where VoiceOver was unable to navigate from the top-level window back into the web contents. #24655 (Also in 9, 10)
Fixed an issue where rmdir and rmdirSync work with original-fs in an asar context. #23890 (Also in 8, 9, 10)
Fixed an issue where shutdown would be emitted both on app and system shutdown on macOS. #24111 (Also in 8, 9, 10)
Fixed an issue where webContents.print() would sometimes hang with invalid settings. #24476 (Also in 9, 10)
Fixed an issue where window.location properties would throw an error for windows opened with window.open. #23776 (Also in 8, 9, 10)
Fixed an issue where withFileTypes was not supported as an option to fs.readdir or fs.readdirSync under asar. #24062 (Also in 8, 9, 10)
Fixed an issue where cpu and heap profiling in Node.js did not work properly with --cpu-prof, --heap-prof, and related CLI flags. #24528 (Also in 8, 9, 10)
Fixed an issue where errors were seen for nonexistent asar files. #24890 
Fixed an issue where frameless modal windows with a vibrancy setting had bezeled corners. #24250 (Also in 9, 10)
Fixed an issue where macOS window vibrancy active state did not always match the active state of the window. #24471 (Also in 8, 9, 10)
Fixed an issue where many uses of the Node.js assert module would throw in both the browser and renderer processes. #24579 
Fixed an issue where notifications with a reply button could potentially be destroyed too early when a user clicked on the notification body before replying. #25086 (Also in 8, 9, 10)
Fixed an issue where some Node.js methods would not work with URL instances constructed in the renderer process. #24831 (Also in 8, 9, 10)
Fixed an issue where some apps might be rejected from the Mac App Store owing to a private font-related API added in Chromium. #25117 (Also in 10)
Fixed an issue where some old notifications were not properly removed from the Notification Center on macOS. #24302 (Also in 8, 9, 10)
Fixed an issue where suspend/resume were emitted twice on macOS. #24818 (Also in 8, 9, 10)
Fixed an issue where the 'about' role had on effect on Windows menus. #23687 (Also in 7.3, 8, 9, 10)
Fixed an issue where the Save button did not function in PDF previews. #24946 (Also in 9, 10)
Fixed an issue which would cause streaming protocol responses to stall in some cases. #24022 (Also in 8, 9, 10)
Fixed an issue with click events not being emitted on macOS for Trays with context menus set. #24200 (Also in 8, 9, 10)
Fixed an issue with volume-related globalShortcut registration. #23782 (Also in 8, 9, 10)
Fixed an occasional menu crash on macOS Catalina when menu is closing. #23778 (Also in 8, 9, 10)
Fixed broken --trace-sync-io flag in Node.js. #24529 (Also in 8, 9, 10)
Fixed broken toolbar text in the PDF viewer. #24913 (Also in 10)
Fixed bug on macOS where the main window could be targeted for a focus event when it was disabled behind a modal. #24286 (Also in 8, 9, 10)
Fixed clipboard.readBuffer returning incorrect value. #24454 (Also in 8, 9, 10)
Fixed crash that could occur when passing a non-absolute path to session.loadExtension. #25068 (Also in 10)
Fixed crash when navigating between origins in a child window with nativeWindowOpen and contextIsolation enabled. #23684 (Also in 8, 9, 10)
Fixed crash when navigating from a page with webview that has inherited zoom level. #24757 (Also in 8, 9, 10)
Fixed crash when opening offscreen transparent windows with gpu acceleration off. #24390 
Fixed crash when using client certificate. #24868 (Also in 10)
Fixed delayed execution of some Node.js callbacks in the main process. #24131 (Also in 8, 9, 10)
Fixed disabling color correct rendering with --disable-color-correct-rendering. #23787 (Also in 8, 9, 10)
Fixed executeJavaScriptInIsolatedWorld not respecting hasUserGesture argument. #24396 
Fixed frameless window's size being changed when restored from minimized state. #25014 (Also in 8, 9, 10)
Fixed inactive windows having active titlebar on Windows. #24847 (Also in 8, 9, 10)
Fixed intercepted protocols not raising Redirect information back to Chromium. #23742 (Also in 7.3)
Fixed issued where voice over would not read words as you typed them. #24801 (Also in 10)
Fixed media keys working unilaterally when registered with globalShortcut. #24145 
Fixed missing guid parameter in Linux crash reports. #24881 (Also in 9, 10)
Fixed no session in webContents of type remote. #23989 (Also in 9, 10)
Fixed node's TLS stack not allowing renegotiation. #25022 (Also in 8, 9, 10)
Fixed potentially invalid duplex mode settings on Linux. #24489 (Also in 9, 10)
Fixed serialization of nativeImages over remote when moving from the main process to the renderer process. #23759 (Also in 7.3, 8, 9, 10)
Fixed the acceptLanguages argument being ignored in session.setUserAgent(). #23944 (Also in 7.3, 8, 9, 10)
Fixed tray menu on Windows not keyboard navigable. #23843 (Also in 8, 9, 10)
Fixed tray menu showing in taskbar on Windows. #24097 (Also in 8, 9, 10)
Fixed undefined symbol error when loading native modules that uses uv_dlopen. #24659 
Fixed window size being changed after unmaximizing. #25051 (Also in 9, 10)
Fixed window titlebar not responding to pen on Windows 10. #24042 (Also in 7.3, 8, 9, 10)
Fixed: On some Windows machines, especially Windows Insider builds, Electron would crash silently during startup. #24030 (Also in 9, 10)
Increased maximum length for crash keys from 127B to 20KB. #24782 (Also in 9, 10)
Protocol response streams are now destroyed if the request is aborted. #24014 (Also in 9, 10)
Resolve app-scoped bookmarks without mounting network drives. #24708 
Restored old implementation of Linux Tray icons to fix a collection of issues where the tray icon wouldn't appear, would be the wrong size or would randomly disappear. #23674 (Also in 8, 9, 10)
Save crash reports locally when uploadToServer: false on linux. #24778 (Also in 9, 10)
The element highlighter in devtools works again. #24921 (Also in 10)
shell.showItemInFolder uses the FileManager DBUS API on Linux, only falling back to xdg-open if that fails. #25087 
Fixed issues with CORS when making requests from extensions. #24483 (Also in 9, 10)
Fixed not working WebSQLDatabase in extension background pages. #24798 (Also in 9, 10) 
Fixed an issue with a consistent unwanted exception appearing during a debugging session with the VSCode debugger. #24191 
Fixed mac app store rejection notice for invalid symbolic link in bundle. #23831 
Fixed mac app store rejection notice for invalid symbolic link in bundle. #24158 (Also in 9, 10)

End of Support for 8.x.y
Electron 8.x.y has reached end-of-support as per the project's support policy. Developers and applications are encouraged to upgrade to a newer version of Electron.","Release Notes for v11.0.0
Stack Upgrades
Chromium 87.0.4280.47
v87 blog post
v86 blog post
Node v12.18.3
v12.18.3 release notes
v12.18.2 release notes
v12.18.1 release notes
v12.18.0 release notes
v12.17.0 release notes
V8 v8.7
v8.7 blog post
v8.6 blog post
Breaking Changes
Removed experimental APIs: BrowserView.{destroy, fromId, fromWebContents, getAllViews} and the id property of BrowserView. #23578 
Features
Additions
Added new experimental apple silicon (darwin arm64) builds. #24545
Added new app.runningUnderRosettaTranslation property to detect when running under rosetta on Apple silicon. #26492
Added V8 crash message and location information to crashReport parameters. #24771 (Also in 10)
Added a small console hint to console to help debug renderer crashes. #25474 (Also in 9, 10)
Added new system-context-menu event to allow preventing and overriding the system context menu. #25835
Added webContents.forcefullyCrashRenderer() to forcefully terminate a renderer process to assist with recovering a hung renderer. #25756
Added app.getApplicationInfoForProtocol() API that returns detailed information about the app that handles a certain protocol. #24112 
Added name to app.getAppMetrics() output. #24359 
Added utility-process-gone event to app. #24367 
Added visualEffectState option to BrowserWindows to allow customization of vibrancy effect state on macOS. #25083 
Added app.createThumbnailFromPath() API that returns a preview image of a file given its file path and a maximum thumbnail size. #24802 
Added back a previously broken visibleOnFullScreen option for setVisibleOnAllWorkspaces. #24956 
Added desktopCapturer.getMediaSourceIdForWebContents(), can be used with getUserMedia to get a stream for a WebContent. #22701 
Added did-become-active event on Mac for observing any application activation. #23872 
Added new worldSafeExecuteJavaScript webPreference to ensure that the return values from webFrame.executeJavaScript are world safe when context isolation is enabled. #24114 (Also in 9, 10)
Added optional parameter to specify monospaced font types for macOS tray titles. #25059 
Added support for suspend and resume events to Windows. #24251 (Also in 8, 9, 10)
Added support for suspend and resume events to macOS. #24254 (Also in 8, 9, 10)
Added the currencyCode field that Apple's StoreKit in-app-purchasing library provides but has not been added to the Product object that inAppPurchase.getProducts returns. #25058
Added 'resized' (Windows/macOS) and 'moved' (Windows) events to BrowserWindow. #26454
Improvements
Improved the performance of sending JS primitives over the context bridge. #24531 (Also in 9, 10)
Improved the performance of sending wide objects over the context bridge. #24671 
Improved the default REPL experience when running Electron with the --interactive flag. #24204
Improved performance of takeHeapSnapshot(). #26230
Changed app.getLoginItemSettings() and app.setLoginItemSettings() API to factor in startup approval keys when determining whether an application is able to launch on login. #24494 
Expose sessionId associated with a target from debugger module. #24170 (Also in 8, 9, 10)
Implemented systemPreferences.getMediaAccessStatus() on Windows. #24275 (Also in 8, 9, 10)
V8CacheOptions is a new webpreference option to enforce code caching policy. #23842 (Also in 8, 9, 10)
When the disabled-by-default-v8.cpu_profiler tracing category is enabled, cpu samples will now be collected from the main process as well as the renderer. #24819
Removed/Deprecated
Removed experimental APIs: BrowserView.{destroy, fromId, fromWebContents, getAllViews} and the id property of BrowserView. #23578 
Fixes
Fixed an issue where pageRanges was not properly honored when printing. #25600 (Also in 10)
Fixed an issue whereby a corrupted async_hooks stack would crash the renderer when throwing some errors in the renderer process. #26424 
Fixed draggable regions stops working when devtools is opened on macOS. #26395
Fixed window.open not accepting size values with ""px"" at the end. #26334 (Also in 10)
Fixed an issue where draggable regions were not properly updated on BrowserViews when a containing BrowserWindow was resized. #26320 (Also in 9, 10)
Fixed an issue where Hover Text on macOS Catalina did not work without VoiceOver also being enabled. #26246 (Also in 9, 10)
Fixed an issue where draggable regions did not work exclusively on BrowserViews. #26259 (Also in 9, 10)
Fixed debug.log files being created under working directory on windows. #26250
Fixed a rare crash on Windows that could occur when emitting certain powerMonitor events. #26181 (Also in 10)
Fixed an issue where packages could not be selected with  on macOS. #26217 
Fixed calling app.commandLine.appendSwitch('lang') not changing app's locale. #26226 (Also in 9, 10)
Fixed a crash in printing on Windows. #26062 (Also in 9, 10)
Fixed an issue where WASM code generation erroneously showed as being disallowed by embedder when contextIsolation was enabled. #25829 (Also in 10)
Fixed an issue where frameless windows showed window controls after being in simple fullscreen mode on macOS. #26127 (Also in 9, 10)
Fixed issue where setting the spellchecker languages to an empty array would permanently disable the spellchecker till the end of time. #26129 
Fixed memory leak on macOS when using dialog.showMessageBox API. #26099 (Also in 8, 9, 10)
Backported fix for link. #26036 
Fixed issue where clicking notifications would no longer dismiss them as expected. #26131 (Also in 8, 9)
Fixed NativeImage.getScaleFactors() always returning the same value. #25903 (Also in 9, 10)
Fixed an issue where Windows notifications with timeoutType of 'never' did not work properly. #25902 (Also in 9, 10)
Fixed an issue where some Node.js module API calls hung in the renderer process after reloads when render process reuse was enabled. #25922 (Also in 9, 10)
Fixed bug that meant require.resolve paths option was ignored. #25945 (Also in 10)
Fixed NativeImage.crop().toBitmap() returning incorrect data. #25774 (Also in 10)
Fixed window.open called from child window. #25816
Suppressed a spurious warning about executeJavaScript being called without worldSafeExecuteJavaScript being enabled in apps that do not call executeJavaScript. #25828 (Also in 10)
Fix: gdi printing in silent printing mode. #25744 (Also in 10)
Fixed crash when application launched from UNUserNotificationCenter notification (via a native node module). #25738 (Also in 9, 10)
Fixed resource leak in worker threads. #25661 (Also in 9, 10)
Added missing module delay loads on windows to reduce per process reference set impact. #25436 (Also in 9, 10)
Excess menu item separators are now only removed after item re-ordering is done to avoid accidental removal of needed separators. #25599
Fixed CORS not being disabled by webSecurity: false. #25504 (Also in 9, 10)
Fixed ready-to-show event not emitted on some machines. #25471 (Also in 10)
Fixed a crash in app.importCertificate() on Linux. #25537 (Also in 9, 10)
Fixed a crash that could happen when a window was closed while a webview was in the process of being attached. #25598
Fixed a crash when closing window in an event listener after exiting fullscreen on macOS. #25524 (Also in 10)
Fixed an issue that could cause a normally-exiting process to fail with an ""illegal access"" message and exit code 7. #25459 (Also in 8, 9, 10)
Fixed an issue where an error would be displayed when using webContents.print() if no default was set and no device name provided. #25562 (Also in 9, 10)
Fixed crashes caused by attempting to modify destroyed views. #25509
Fixed the remote-debugging-port discovery page showing garbled text. #25602 (Also in 10)
Fixed unsubscribe from observers when window is closing. #25585 (Also in 9, 10)
Updated Node root certs to use NSS 3.56. #25362 (Also in 8, 9, 10)
Fixed crashes using nativeImage on Windows on ARM. #25410
Fixed a crash in the renderer process when invoking the Badging API. #25370 (Also in 9, 10)
Fixed an issue where document.hasFocus and document.activeElement would be inconsistent upon showing a window that was initially created with show: false. #25323
Fixed client_id file being generated in the working directory for node child process. #25310 (Also in 9)
Fixed multiple dock icons being left in system when calling dock.show/hide on macOS. #25300 (Also in 8, 9, 10)
Fixes the following issues for frameless when maximized on Windows: 
Fix unreachable task bar when auto hidden with position top
Fix 1px extending to secondary monitor
Fix 1px overflowing into taskbar at certain resolutions
Fix white line on top of window under 4k resolutions. #25217 (Also in 8, 9, 10)
Fixed Electron not working on Windows 7 after link. #25168 (Also in 8, 9, 10)
Fixed an issue where filters set in dialogs on macOS would have nondeterministic ordering. #25193 (Also in 9, 10)
Fixed network permission error when there are multiple WebContents sharing same session are created with web security disabled. #25180 (Also in 8, 9, 10)
Fixed shell.moveItemToTrash on Windows so that it returns false when move was unsuccessful. #25171 (Also in 9, 10)
Fix loading shared worker scripts over custom protocol * fix crash when loading worker scripts with nodeIntegration enabled. #20625 (Also in 9, 10)
Added missing support for isComposing KeyboardEvent property. #23971 (Also in 8, 9, 10)
Added {stream:} option to registerSchemeAsPrivileged to enable custom protocols to stream video and audio. #22955 
Enable NTLM v2 for POSIX platforms and added --disable-ntlm-v2 switch to disable it. #23846 (Also in 7.3, 8, 9, 10)
Fix: Allow windows behind macOS elements if ""frame"" is false. #23976 (Also in 9, 10)
Fix: remove unnecessary corner mask overriding to increase window resize performance. #24642 (Also in 9, 10)
Fixed ""Paste and Match Style"" shortcut on macOS to match OS's ""Option-Shift-Command-V"". #24153 (Also in 8, 9, 10)
Fixed ""null path-to-app"" in test-app when Electron's path contains spaces or special characters. #24214 (Also in 8, 9, 10)
Fixed GTK dark theme setting not respected in Electron on Linux. #23678 (Also in 7.3, 8, 9, 10)
Fixed chrome://accessibility access in Electron. #24437 
Fixed chrome://media-internals and chrome://webrtc-internals pages not loading. #24010 (Also in 8, 9, 10)
Fixed powerMonitor not emitting suspend/resume events on some Windows machines. #25076 (Also in 10)
Fixed process.windowsStore returning undefined in AppX packages. #23785 (Also in 7.3, 8, 9, 10)
Fixed a 10.0.0-beta.1 issue that broke dark mode window titlebars on Linux. #25055 (Also in 10)
Fixed a bezeling issue on vibrant non-frameless BrowserWindows. #23779 (Also in 9, 10)
Fixed a crash in TouchBar for certain methods. #23936 (Also in 10)
Fixed a crash that could happen when using hookWindowMessage on Windows. #24716 (Also in 9, 10)
Fixed a crash that could occur when using in-memory sessions. #24964 (Also in 9, 10)
Fixed a crash that could occur when using the ipcRenderer module after blink had released the context. Instead, a JS exception will be thrown. #23917 (Also in 8, 9, 10)
Fixed a termination crash on Web Workers with Node.js integration enabled. #24436 (Also in 8, 9, 10)
Fixed an error when calling dialog.showCertificateTrustDialog with no BrowserWindow. #24091 (Also in 7.3, 8, 9, 10)
Fixed an intermittent high-CPU usage problem caused a system clock issue during sleep. #24394 (Also in 8, 9, 10)
Fixed an issue where VoiceOver was unable to navigate from the top-level window back into the web contents. #24655 (Also in 9, 10)
Fixed an issue where rmdir and rmdirSync work with original-fs in an asar context. #23890 (Also in 8, 9, 10)
Fixed an issue where shutdown would be emitted both on app and system shutdown on macOS. #24111 (Also in 8, 9, 10)
Fixed an issue where webContents.print() would sometimes hang with invalid settings. #24476 (Also in 9, 10)
Fixed an issue where window.location properties would throw an error for windows opened with window.open. #23776 (Also in 8, 9, 10)
Fixed an issue where withFileTypes was not supported as an option to fs.readdir or fs.readdirSync under asar. #24062 (Also in 8, 9, 10)
Fixed an issue where cpu and heap profiling in Node.js did not work properly with --cpu-prof, --heap-prof, and related CLI flags. #24528 (Also in 8, 9, 10)
Fixed an issue where errors were seen for nonexistent asar files. #24890 
Fixed an issue where frameless modal windows with a vibrancy setting had bezeled corners. #24250 (Also in 9, 10)
Fixed an issue where macOS window vibrancy active state did not always match the active state of the window. #24471 (Also in 8, 9, 10)
Fixed an issue where many uses of the Node.js assert module would throw in both the browser and renderer processes. #24579 
Fixed an issue where notifications with a reply button could potentially be destroyed too early when a user clicked on the notification body before replying. #25086 (Also in 8, 9, 10)
Fixed an issue where some Node.js methods would not work with URL instances constructed in the renderer process. #24831 (Also in 8, 9, 10)
Fixed an issue where some apps might be rejected from the Mac App Store owing to a private font-related API added in Chromium. #25117 (Also in 10)
Fixed an issue where some old notifications were not properly removed from the Notification Center on macOS. #24302 (Also in 8, 9, 10)
Fixed an issue where suspend/resume were emitted twice on macOS. #24818 (Also in 8, 9, 10)
Fixed an issue where the 'about' role had on effect on Windows menus. #23687 (Also in 7.3, 8, 9, 10)
Fixed an issue where the Save button did not function in PDF previews. #24946 (Also in 9, 10)
Fixed an issue which would cause streaming protocol responses to stall in some cases. #24022 (Also in 8, 9, 10)
Fixed an issue with click events not being emitted on macOS for Trays with context menus set. #24200 (Also in 8, 9, 10)
Fixed an issue with volume-related globalShortcut registration. #23782 (Also in 8, 9, 10)
Fixed an occasional menu crash on macOS Catalina when menu is closing. #23778 (Also in 8, 9, 10)
Fixed broken --trace-sync-io flag in Node.js. #24529 (Also in 8, 9, 10)
Fixed broken toolbar text in the PDF viewer. #24913 (Also in 10)
Fixed bug on macOS where the main window could be targeted for a focus event when it was disabled behind a modal. #24286 (Also in 8, 9, 10)
Fixed clipboard.readBuffer returning incorrect value. #24454 (Also in 8, 9, 10)
Fixed crash that could occur when passing a non-absolute path to session.loadExtension. #25068 (Also in 10)
Fixed crash when navigating between origins in a child window with nativeWindowOpen and contextIsolation enabled. #23684 (Also in 8, 9, 10)
Fixed crash when navigating from a page with webview that has inherited zoom level. #24757 (Also in 8, 9, 10)
Fixed crash when opening offscreen transparent windows with gpu acceleration off. #24390 
Fixed crash when using client certificate. #24868 (Also in 10)
Fixed delayed execution of some Node.js callbacks in the main process. #24131 (Also in 8, 9, 10)
Fixed disabling color correct rendering with --disable-color-correct-rendering. #23787 (Also in 8, 9, 10)
Fixed executeJavaScriptInIsolatedWorld not respecting hasUserGesture argument. #24396 
Fixed frameless window's size being changed when restored from minimized state. #25014 (Also in 8, 9, 10)
Fixed inactive windows having active titlebar on Windows. #24847 (Also in 8, 9, 10)
Fixed intercepted protocols not raising Redirect information back to Chromium. #23742 (Also in 7.3)
Fixed issued where voice over would not read words as you typed them. #24801 (Also in 10)
Fixed media keys working unilaterally when registered with globalShortcut. #24145 
Fixed missing guid parameter in Linux crash reports. #24881 (Also in 9, 10)
Fixed no session in webContents of type remote. #23989 (Also in 9, 10)
Fixed node's TLS stack not allowing renegotiation. #25022 (Also in 8, 9, 10)
Fixed potentially invalid duplex mode settings on Linux. #24489 (Also in 9, 10)
Fixed serialization of nativeImages over remote when moving from the main process to the renderer process. #23759 (Also in 7.3, 8, 9, 10)
Fixed the acceptLanguages argument being ignored in session.setUserAgent(). #23944 (Also in 7.3, 8, 9, 10)
Fixed tray menu on Windows not keyboard navigable. #23843 (Also in 8, 9, 10)
Fixed tray menu showing in taskbar on Windows. #24097 (Also in 8, 9, 10)
Fixed undefined symbol error when loading native modules that uses uv_dlopen. #24659 
Fixed window size being changed after unmaximizing. #25051 (Also in 9, 10)
Fixed window titlebar not responding to pen on Windows 10. #24042 (Also in 7.3, 8, 9, 10)
Fixed: On some Windows machines, especially Windows Insider builds, Electron would crash silently during startup. #24030 (Also in 9, 10)
Increased maximum length for crash keys from 127B to 20KB. #24782 (Also in 9, 10)
Protocol response streams are now destroyed if the request is aborted. #24014 (Also in 9, 10)
Resolve app-scoped bookmarks without mounting network drives. #24708 
Restored old implementation of Linux Tray icons to fix a collection of issues where the tray icon wouldn't appear, would be the wrong size or would randomly disappear. #23674 (Also in 8, 9, 10)
Save crash reports locally when uploadToServer: false on linux. #24778 (Also in 9, 10)
The element highlighter in devtools works again. #24921 (Also in 10)
shell.showItemInFolder uses the FileManager DBUS API on Linux, only falling back to xdg-open if that fails. #25087 
Fixed issues with CORS when making requests from extensions. #24483 (Also in 9, 10)
Fixed not working WebSQLDatabase in extension background pages. #24798 (Also in 9, 10) 
Fixed an issue with a consistent unwanted exception appearing during a debugging session with the VSCode debugger. #24191 
Fixed mac app store rejection notice for invalid symbolic link in bundle. #23831 
Fixed mac app store rejection notice for invalid symbolic link in bundle. #24158 (Also in 9, 10)
End of Support for 8.x.y
Electron 8.x.y has reached end-of-support as per the project's support policy. Developers and applications are encouraged to upgrade to a newer version of Electron."
579,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@11.0.0-beta.23.
# Release Notes for v11.0.0-beta.23
Features

Added new app.runningUnderRosettaTranslation property to detect when running under rosetta on Apple silicon. #26492 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@11.0.0-beta.23.
Release Notes for v11.0.0-beta.23
Features
Added new app.runningUnderRosettaTranslation property to detect when running under rosetta on Apple silicon. #26492 "
580,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@11.0.0-beta.22.
# Release Notes for v11.0.0-beta.22
Features

Added 'resized' (Windows/macOS) and 'moved' (Windows) events to BrowserWindow. #26454 

Fixes

Fixed an issue where pageRanges was not properly honored when printing. #25600 (Also in 10)
Fixed an issue whereby a corrupted async_hooks stack would crash the renderer when throwing some errors in the renderer process. #26424 
Fixed draggable regions stops working when devtools is opened on macOS. #26395 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@11.0.0-beta.22.
Release Notes for v11.0.0-beta.22
Features
Added 'resized' (Windows/macOS) and 'moved' (Windows) events to BrowserWindow. #26454 
Fixes
Fixed an issue where pageRanges was not properly honored when printing. #25600 (Also in 10)
Fixed an issue whereby a corrupted async_hooks stack would crash the renderer when throwing some errors in the renderer process. #26424 
Fixed draggable regions stops working when devtools is opened on macOS. #26395 "
581,"Release Notes for v9.3.4
Fixes

Fixed an issue where Hover Text on macOS Catalina did not work without VoiceOver also being enabled. #26244 (Also in 10, 11)
Fixed an issue where draggable regions did not work exclusively on BrowserViews. #26261 (Also in 10, 11)
Fixed an issue where draggable regions were not properly updated on BrowserViews when a containing BrowserWindow was resized. #26322 (Also in 10, 11)
Fixed calling app.commandLine.appendSwitch('lang') not changing app's locale. #26242 (Also in 10, 11)

Other Changes

Improved performance of takeHeapSnapshot(). #26228 
Security: backported fix for 1100470, 1125337. #26210 
Security: backported fix for 1128657. #26197 
Security: backported fix for 1133983. #26204 
Security: backported fix for 1135018. #26194 
Security: backported fix for 1135857. #26191 
Security: backported fix for chromium:1117258. #26200 
Security: backported fix for chromium:1132111. #26207 
Security: backported fix for chromium:1137630. #26213 
","Release Notes for v9.3.4
Fixes
Fixed an issue where Hover Text on macOS Catalina did not work without VoiceOver also being enabled. #26244 (Also in 10, 11)
Fixed an issue where draggable regions did not work exclusively on BrowserViews. #26261 (Also in 10, 11)
Fixed an issue where draggable regions were not properly updated on BrowserViews when a containing BrowserWindow was resized. #26322 (Also in 10, 11)
Fixed calling app.commandLine.appendSwitch('lang') not changing app's locale. #26242 (Also in 10, 11)
Other Changes
Improved performance of takeHeapSnapshot(). #26228 
Security: backported fix for 1100470, 1125337. #26210 
Security: backported fix for 1128657. #26197 
Security: backported fix for 1133983. #26204 
Security: backported fix for 1135018. #26194 
Security: backported fix for 1135857. #26191 
Security: backported fix for chromium:1117258. #26200 
Security: backported fix for chromium:1132111. #26207 
Security: backported fix for chromium:1137630. #26213 "
582,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@11.0.0-beta.20.
# Release Notes for v11.0.0-beta.20
Fixes

Fixed window.open not accepting size values with ""px"" at the end. #26334 (Also in 10)
Fixed an issue where draggable regions were not properly updated on BrowserViews when a containing BrowserWindow was resized. #26320 (Also in 9, 10)

Other Changes

Updated Chromium to 87.0.4280.40. #26280 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@11.0.0-beta.20.
Release Notes for v11.0.0-beta.20
Fixes
Fixed window.open not accepting size values with ""px"" at the end. #26334 (Also in 10)
Fixed an issue where draggable regions were not properly updated on BrowserViews when a containing BrowserWindow was resized. #26320 (Also in 9, 10)
Other Changes
Updated Chromium to 87.0.4280.40. #26280 "
583,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@11.0.0-beta.19.
# Release Notes for v11.0.0-beta.19
Fixes

Fixed an issue where Hover Text on macOS Catalina did not work without VoiceOver also being enabled. #26246 (Also in 9, 10)
Fixed an issue where draggable regions did not work exclusively on BrowserViews. #26259 (Also in 9, 10)
Fixed debug.log files being created under working directory on windows. #26250 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@11.0.0-beta.19.
Release Notes for v11.0.0-beta.19
Fixes
Fixed an issue where Hover Text on macOS Catalina did not work without VoiceOver also being enabled. #26246 (Also in 9, 10)
Fixed an issue where draggable regions did not work exclusively on BrowserViews. #26259 (Also in 9, 10)
Fixed debug.log files being created under working directory on windows. #26250 "
584,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@11.0.0-beta.18.
# Release Notes for v11.0.0-beta.18
Fixes

Fixed a rare crash on Windows that could occur when emitting certain powerMonitor events. #26181 (Also in 10)
Fixed an issue where packages could not be selected with  on macOS. #26217 
Fixed calling app.commandLine.appendSwitch('lang') not changing app's locale. #26226 (Also in 9, 10)

Other Changes

Improved performance of takeHeapSnapshot(). #26230 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@11.0.0-beta.18.
Release Notes for v11.0.0-beta.18
Fixes
Fixed a rare crash on Windows that could occur when emitting certain powerMonitor events. #26181 (Also in 10)
Fixed an issue where packages could not be selected with  on macOS. #26217 
Fixed calling app.commandLine.appendSwitch('lang') not changing app's locale. #26226 (Also in 9, 10)
Other Changes
Improved performance of takeHeapSnapshot(). #26230 "
585,"Release Notes for v8.5.3
Fixes

Fixed ready-to-show event not emitted on some machines. #26140 (Also in 8, 10, 11)
Fixed an issue that could cause a normally-exiting process to fail with an ""illegal access"" message and exit code 7. #25501 (Also in 8, 9, 10, 11)
Fixed loading shared worker scripts over custom protocol
fix crash when loading worker scripts with nodeIntegration enabled. #26142 (Also in 8, 9, 10)
Fixed maximized frameless window bleeding to other monitors. #25979 (Also in 8, 9, 10, 11)
Fixed memory leak on macOS when using dialog.showMessageBox API. #26100 (Also in 8, 9, 10, 11)
Protocol response streams are now destroyed if the request is aborted. #26141 (Also in 8, 9, 10)
Updated Node root certs to use NSS 3.56. #25363 (Also in 8, 9, 10, 11)
Updated to Chrome 80.0.3987.163. #25499 

Other Changes

Backported fix for CVE-2020-15999. #26068 
Backported the fix to CVE-2020-15969: Use after free in WebRTC. #25855 
Improved performance of takeHeapSnapshot(). #26227 
Security: backported fix for 1100136. #25659 
Security: backported fix for 1106612. #25657 
Security: backported fix for 1111149. #25637 
Security: backported fix for 1113558. #25860 
Security: backported fix for 1121836. #25642 
Security: backported fix for 1126249. #25646 
Security: backported fix for 1128657. #26198 
Security: backported fix for 1135018. #26195 
Security: backported fix for 1135857. #26192 
Security: backported fix for chromium:1117258. #26201 
Security: backported fix for chromium:1132111. #26208 
Security: backported fix for chromium:1137630. #26214 
Security: backported the fix to a heap-use-after-free in content::WebContentsImpl::SetNotWaitingForResponse. #25897 
","Release Notes for v8.5.3
Fixes
Fixed ready-to-show event not emitted on some machines. #26140 (Also in 8, 10, 11)
Fixed an issue that could cause a normally-exiting process to fail with an ""illegal access"" message and exit code 7. #25501 (Also in 8, 9, 10, 11)
Fixed loading shared worker scripts over custom protocol
fix crash when loading worker scripts with nodeIntegration enabled. #26142 (Also in 8, 9, 10)
Fixed maximized frameless window bleeding to other monitors. #25979 (Also in 8, 9, 10, 11)
Fixed memory leak on macOS when using dialog.showMessageBox API. #26100 (Also in 8, 9, 10, 11)
Protocol response streams are now destroyed if the request is aborted. #26141 (Also in 8, 9, 10)
Updated Node root certs to use NSS 3.56. #25363 (Also in 8, 9, 10, 11)
Updated to Chrome 80.0.3987.163. #25499 
Other Changes
Backported fix for CVE-2020-15999. #26068 
Backported the fix to CVE-2020-15969: Use after free in WebRTC. #25855 
Improved performance of takeHeapSnapshot(). #26227 
Security: backported fix for 1100136. #25659 
Security: backported fix for 1106612. #25657 
Security: backported fix for 1111149. #25637 
Security: backported fix for 1113558. #25860 
Security: backported fix for 1121836. #25642 
Security: backported fix for 1126249. #25646 
Security: backported fix for 1128657. #26198 
Security: backported fix for 1135018. #26195 
Security: backported fix for 1135857. #26192 
Security: backported fix for chromium:1117258. #26201 
Security: backported fix for chromium:1132111. #26208 
Security: backported fix for chromium:1137630. #26214 
Security: backported the fix to a heap-use-after-free in content::WebContentsImpl::SetNotWaitingForResponse. #25897 "
586,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@11.0.0-beta.17.
# Release Notes for v11.0.0-beta.17
Fixes

Fixed a crash in printing on Windows. #26062 (Also in 9, 10)
Fixed an issue where Wasm code generation erroneously showed as being disallowed by embedder when contextIsolation was enabled. #25829 (Also in 10)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@11.0.0-beta.17.
Release Notes for v11.0.0-beta.17
Fixes
Fixed a crash in printing on Windows. #26062 (Also in 9, 10)
Fixed an issue where Wasm code generation erroneously showed as being disallowed by embedder when contextIsolation was enabled. #25829 (Also in 10)"
587,"Release Notes for v9.3.3
Fixes

Browser views will properly resize within windows. #26034 (Also in 10, 11)
Fix: gdi printing in silent printing mode. #25724 (Also in 10, 11)
Fixed NativeImage.getScaleFactors() always returning the same value. #25904 (Also in 10, 11)
Fixed a crash in printing on Windows. #26066 (Also in 10, 11)
Fixed an issue where Windows notifications with timeoutType of 'never' did not work properly. #25862 (Also in 10, 11)
Fixed an issue where Save as PDF from PDF Viewer Print dialog failed and sometimes crashed. #26067 (Also in 10, 11)
Fixed an issue where frameless windows showed window controls after being in simple fullscreen mode on macOS. #26128 (Also in 10, 11)
Fixed an issue where some Node.js module API calls hung in the renderer process after reloads when render process reuse was enabled. #25924 (Also in 10, 11)
Fixed an issue where the PDF annotations button existed in a broken state. #26004 
Fixed bug that meant require.resolve paths option was ignored. #26035 (Also in 10, 11)
Fixed maximized frameless window bleeding to other monitors. #25980 (Also in 8, 10, 11)
Fixed memory leak on macOS when using dialog.showMessageBox API. #26098 (Also in 8, 10, 11)

Other Changes

Backported fix for CVE-2020-15999. #26069 
Backported the fix to CVE-2020-15969: Use after free in WebRTC. #25854 
Security: backported fix for 1111149. #25638 
Security: backported fix for 1113558. #25859 
Security: backported fix for 1121414. #25911 
Security: backported fix for 1121836. #25641 
Security: backported fix for 1125635, 1115901. #25857 
Security: backported fix for 1126249. #25645 
Security: backported the fix to a heap-use-after-free in content::WebContentsImpl::SetNotWaitingForResponse. #25896 
","Release Notes for v9.3.3
Fixes
Browser views will properly resize within windows. #26034 (Also in 10, 11)
Fix: gdi printing in silent printing mode. #25724 (Also in 10, 11)
Fixed NativeImage.getScaleFactors() always returning the same value. #25904 (Also in 10, 11)
Fixed a crash in printing on Windows. #26066 (Also in 10, 11)
Fixed an issue where Windows notifications with timeoutType of 'never' did not work properly. #25862 (Also in 10, 11)
Fixed an issue where Save as PDF from PDF Viewer Print dialog failed and sometimes crashed. #26067 (Also in 10, 11)
Fixed an issue where frameless windows showed window controls after being in simple fullscreen mode on macOS. #26128 (Also in 10, 11)
Fixed an issue where some Node.js module API calls hung in the renderer process after reloads when render process reuse was enabled. #25924 (Also in 10, 11)
Fixed an issue where the PDF annotations button existed in a broken state. #26004 
Fixed bug that meant require.resolve paths option was ignored. #26035 (Also in 10, 11)
Fixed maximized frameless window bleeding to other monitors. #25980 (Also in 8, 10, 11)
Fixed memory leak on macOS when using dialog.showMessageBox API. #26098 (Also in 8, 10, 11)
Other Changes
Backported fix for CVE-2020-15999. #26069 
Backported the fix to CVE-2020-15969: Use after free in WebRTC. #25854 
Security: backported fix for 1111149. #25638 
Security: backported fix for 1113558. #25859 
Security: backported fix for 1121414. #25911 
Security: backported fix for 1121836. #25641 
Security: backported fix for 1125635, 1115901. #25857 
Security: backported fix for 1126249. #25645 
Security: backported the fix to a heap-use-after-free in content::WebContentsImpl::SetNotWaitingForResponse. #25896 "
588,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@11.0.0-beta.16.
# Release Notes for v11.0.0-beta.16
Fixes

Fixed an issue where frameless windows showed window controls after being in simple fullscreen mode on macOS. #26127 (Also in 9, 10)
Fixed issue where setting the spellchecker languages to an empty array would permanently disable the spellchecker till the end of time. #26129 
Fixed memory leak on macOS when using dialog.showMessageBox API. #26099 (Also in 8, 9, 10)

Other Changes

Backported fix for https://crbug.com/1115267. #26036 
Updated Chromium to 87.0.4280.27. #25993 

Unknown

Fixed issue where clicking notifications would no longer dismiss them as expected. #26131 (Also in 8, 9)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@11.0.0-beta.16.
Release Notes for v11.0.0-beta.16
Fixes
Fixed an issue where frameless windows showed window controls after being in simple fullscreen mode on macOS. #26127 (Also in 9, 10)
Fixed issue where setting the spellchecker languages to an empty array would permanently disable the spellchecker till the end of time. #26129 
Fixed memory leak on macOS when using dialog.showMessageBox API. #26099 (Also in 8, 9, 10)
Other Changes
Backported fix for link. #26036 
Updated Chromium to 87.0.4280.27. #25993 
Unknown
Fixed issue where clicking notifications would no longer dismiss them as expected. #26131 (Also in 8, 9)"
589,"Release Notes for v10.1.5
Fixes

Fixed a crash in printing on Windows. #26064 (Also in 9, 10)
Fixed an issue where Wasm code generation erroneously showed as being disallowed by embedder when contextIsolation was enabled. #26063 (Also in 10)
Fixed an issue where frameless windows showed window controls after being in simple fullscreen mode on macOS. #26126 (Also in 9, 10)
Fixed memory leak on macOS when using dialog.showMessageBox API. #26097 (Also in 8, 9, 10, 11)

Other Changes

Backported fix for CVE-2020-15999. #26070 
","Release Notes for v10.1.5
Fixes
Fixed a crash in printing on Windows. #26064 (Also in 9, 10)
Fixed an issue where Wasm code generation erroneously showed as being disallowed by embedder when contextIsolation was enabled. #26063 (Also in 10)
Fixed an issue where frameless windows showed window controls after being in simple fullscreen mode on macOS. #26126 (Also in 9, 10)
Fixed memory leak on macOS when using dialog.showMessageBox API. #26097 (Also in 8, 9, 10, 11)
Other Changes
Backported fix for CVE-2020-15999. #26070 "
590,"Release Notes for v10.1.4
Fixes

Browser views will properly resize within windows. #26033 (Also in 9, 10, 11)
Excess menu item separators are now only removed after item re-ordering is done to avoid accidental removal of needed separators. #25931 (Also in 10, 11)
Fix: gdi printing in silent printing mode. #25740 (Also in 9, 10, 11)
Fixed NativeImage.crop().toBitmap() returning incorrect data. #25773 (Also in 10, 11)
Fixed NativeImage.getScaleFactors() always returning the same value. #25905 (Also in 9, 10, 11)
Fixed session argument of app 'session-created' event. #25798 
Fixed an issue where Windows notifications with timeoutType of 'never' did not work properly. #25926 (Also in 9, 10, 11)
Fixed an issue where Save as PDF from PDF Viewer Print dialog failed and sometimes crashed. #26013 (Also in 10)
Fixed an issue where some Node.js module API calls hung in the renderer process after reloads when render process reuse was enabled. #25923 (Also in 9, 10, 11)
Fixed bug that meant require.resolve paths option was ignored. #25944 (Also in 9, 10, 11)
Fixed crash when application launched from UNUserNotificationCenter notification (via a native node module). #25737 (Also in 9, 10, 11)
Fixed maximized frameless window bleeding to other monitors. #25977 (Also in 8, 9, 10, 11)
Fixed memory leak when creating ""Services"" menu. #25687 (Also in 9, 10, 11)
Fixed ready-to-show event not emitted on some machines. #25932 (Also in 10, 11)
Suppressed a spurious warning about executeJavaScript being called without worldSafeExecuteJavaScript being enabled in apps that do not call executeJavaScript. #25827 (Also in 10, 11)

Other Changes

Backported the fix to CVE-2020-15968: Use after free in Blink. #25852 
Backported the fix to CVE-2020-15969: Use after free in WebRTC. #25853 
Backported the fix to a heap-use-after-free in content::WebContentsImpl::SetNotWaitingForResponse. #25893 
Fixed an issue where netLog.startLogging and netLog.stopLogging were undefined. #25670 (Also in 10)
Security: backported fix for 1125635, 1115901. #25856 
","Release Notes for v10.1.4
Fixes
Browser views will properly resize within windows. #26033 (Also in 9, 10, 11)
Excess menu item separators are now only removed after item re-ordering is done to avoid accidental removal of needed separators. #25931 (Also in 10, 11)
Fix: gdi printing in silent printing mode. #25740 (Also in 9, 10, 11)
Fixed NativeImage.crop().toBitmap() returning incorrect data. #25773 (Also in 10, 11)
Fixed NativeImage.getScaleFactors() always returning the same value. #25905 (Also in 9, 10, 11)
Fixed session argument of app 'session-created' event. #25798 
Fixed an issue where Windows notifications with timeoutType of 'never' did not work properly. #25926 (Also in 9, 10, 11)
Fixed an issue where Save as PDF from PDF Viewer Print dialog failed and sometimes crashed. #26013 (Also in 10)
Fixed an issue where some Node.js module API calls hung in the renderer process after reloads when render process reuse was enabled. #25923 (Also in 9, 10, 11)
Fixed bug that meant require.resolve paths option was ignored. #25944 (Also in 9, 10, 11)
Fixed crash when application launched from UNUserNotificationCenter notification (via a native node module). #25737 (Also in 9, 10, 11)
Fixed maximized frameless window bleeding to other monitors. #25977 (Also in 8, 9, 10, 11)
Fixed memory leak when creating ""Services"" menu. #25687 (Also in 9, 10, 11)
Fixed ready-to-show event not emitted on some machines. #25932 (Also in 10, 11)
Suppressed a spurious warning about executeJavaScript being called without worldSafeExecuteJavaScript being enabled in apps that do not call executeJavaScript. #25827 (Also in 10, 11)
Other Changes
Backported the fix to CVE-2020-15968: Use after free in Blink. #25852 
Backported the fix to CVE-2020-15969: Use after free in WebRTC. #25853 
Backported the fix to a heap-use-after-free in content::WebContentsImpl::SetNotWaitingForResponse. #25893 
Fixed an issue where netLog.startLogging and netLog.stopLogging were undefined. #25670 (Also in 10)
Security: backported fix for 1125635, 1115901. #25856 "
591,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@11.0.0-beta.13.
# Release Notes for v11.0.0-beta.13
Features

Added new system-context-menu event to allow preventing and overriding the system context menu. #25835 (Also in 11)

Fixes

Fixed NativeImage.getScaleFactors() always returning the same value. #25903 (Also in 9, 10, 11)
Fixed an issue where Windows notifications with timeoutType of 'never' did not work properly. #25902 (Also in 9, 10, 11)
Fixed an issue where some Node.js module API calls hung in the renderer process after reloads when render process reuse was enabled. #25922 (Also in 9, 10, 11)
Fixed bug that meant require.resolve paths option was ignored. #25945 (Also in 10, 11)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@11.0.0-beta.13.
Release Notes for v11.0.0-beta.13
Features
Added new system-context-menu event to allow preventing and overriding the system context menu. #25835 (Also in 11)
Fixes
Fixed NativeImage.getScaleFactors() always returning the same value. #25903 (Also in 9, 10, 11)
Fixed an issue where Windows notifications with timeoutType of 'never' did not work properly. #25902 (Also in 9, 10, 11)
Fixed an issue where some Node.js module API calls hung in the renderer process after reloads when render process reuse was enabled. #25922 (Also in 9, 10, 11)
Fixed bug that meant require.resolve paths option was ignored. #25945 (Also in 10, 11)"
592,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@11.0.0-beta.12.
# Release Notes for v11.0.0-beta.12
Features

Added webContents.forcefullyCrashRenderer() to forcefully terminate a renderer process to assist with recovering a hung renderer. #25756 (Also in 11)

Fixes

Fixed NativeImage.crop().toBitmap() returning incorrect data. #25774 (Also in 10, 11)
Fixed window.open called from child window. #25816 (Also in 11)
Suppressed a spurious warning about executeJavaScript being called without worldSafeExecuteJavaScript being enabled in apps that do not call executeJavaScript. #25828 (Also in 10, 11)

Other Changes

Updated Chromium to 87.0.4280.11. #25802 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@11.0.0-beta.12.
Release Notes for v11.0.0-beta.12
Features
Added webContents.forcefullyCrashRenderer() to forcefully terminate a renderer process to assist with recovering a hung renderer. #25756 (Also in 11)
Fixes
Fixed NativeImage.crop().toBitmap() returning incorrect data. #25774 (Also in 10, 11)
Fixed window.open called from child window. #25816 (Also in 11)
Suppressed a spurious warning about executeJavaScript being called without worldSafeExecuteJavaScript being enabled in apps that do not call executeJavaScript. #25828 (Also in 10, 11)
Other Changes
Updated Chromium to 87.0.4280.11. #25802 "
593,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@11.0.0-beta.11.
# Release Notes for v11.0.0-beta.11
Fixes

Fix: gdi printing in silent printing mode. #25744 (Also in 10, 11)
Fixed crash when application launched from UNUserNotificationCenter notification (via a native node module). #25738 (Also in 9, 10, 11)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@11.0.0-beta.11.
Release Notes for v11.0.0-beta.11
Fixes
Fix: gdi printing in silent printing mode. #25744 (Also in 10, 11)
Fixed crash when application launched from UNUserNotificationCenter notification (via a native node module). #25738 (Also in 9, 10, 11)"
594,"Release Notes for v9.3.2
Fixes

Fixed CORS not being disabled by webSecurity: false. #25505 (Also in 9, 10, 11)
Fixed ready-to-show event not emitted on some machines. #25490 (Also in 9, 10, 11)
Fixed a crash in app.importCertificate() on Linux. #25538 (Also in 9, 10, 11)
Fixed a crash when closing window in an event listener after exiting fullscreen on macOS. #25605 (Also in 9, 10, 11)
Fixed an issue that could cause a normally-exiting process to fail with an ""illegal access"" message and exit code 7. #25502 (Also in 8, 9, 10, 11)
Fixed an issue where an error would be displayed when using webContents.print() if no default was set and no device name provided. #25607 (Also in 9, 10, 11)
Fixed crash when application launched from UNUserNotificationCenter notification (via a native node module). #25739 (Also in 9, 10, 11)
Fixed crashes caused by attempting to modify destroyed views. #25609 (Also in 9, 10, 11)
Fixed memory leak when creating ""Services"" menu. #25689 (Also in 9, 10, 11)
Fixed unsubscribe from observers when window is closing. #25586 (Also in 9, 10, 11)
Updated Node root certs to use NSS 3.56. #25364 (Also in 8, 9, 10, 11)

Other Changes

Added V8 crash message and location information to crashReport parameters. #24864 (Also in 9, 10)
Added a small console hint to console to help debug renderer crashes. #25473 (Also in 9, 10, 11)
Fixed resource leak in worker threads. #25663 (Also in 9, 10, 11)
Security: backported fix for 1100136. #25658 
Security: backported fix for 1106612. #25656 
Security: backported fix for 1114636. #25643 

Unknown

Fixed extension background page devtools not being openable. #25567 (Also in 9, 10, 11)
","Release Notes for v9.3.2
Fixes
Fixed CORS not being disabled by webSecurity: false. #25505 (Also in 9, 10, 11)
Fixed ready-to-show event not emitted on some machines. #25490 (Also in 9, 10, 11)
Fixed a crash in app.importCertificate() on Linux. #25538 (Also in 9, 10, 11)
Fixed a crash when closing window in an event listener after exiting fullscreen on macOS. #25605 (Also in 9, 10, 11)
Fixed an issue that could cause a normally-exiting process to fail with an ""illegal access"" message and exit code 7. #25502 (Also in 8, 9, 10, 11)
Fixed an issue where an error would be displayed when using webContents.print() if no default was set and no device name provided. #25607 (Also in 9, 10, 11)
Fixed crash when application launched from UNUserNotificationCenter notification (via a native node module). #25739 (Also in 9, 10, 11)
Fixed crashes caused by attempting to modify destroyed views. #25609 (Also in 9, 10, 11)
Fixed memory leak when creating ""Services"" menu. #25689 (Also in 9, 10, 11)
Fixed unsubscribe from observers when window is closing. #25586 (Also in 9, 10, 11)
Updated Node root certs to use NSS 3.56. #25364 (Also in 8, 9, 10, 11)
Other Changes
Added V8 crash message and location information to crashReport parameters. #24864 (Also in 9, 10)
Added a small console hint to console to help debug renderer crashes. #25473 (Also in 9, 10, 11)
Fixed resource leak in worker threads. #25663 (Also in 9, 10, 11)
Security: backported fix for 1100136. #25658 
Security: backported fix for 1106612. #25656 
Security: backported fix for 1114636. #25643 
Unknown
Fixed extension background page devtools not being openable. #25567 (Also in 9, 10, 11)"
595,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@11.0.0-beta.9.
# Release Notes for v11.0.0-beta.9
Other Changes

Fixed resource leak in worker threads. #25661 (Also in 9, 10, 11)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@11.0.0-beta.9.
Release Notes for v11.0.0-beta.9
Other Changes
Fixed resource leak in worker threads. #25661 (Also in 9, 10, 11)"
596,"Release Notes for v10.1.3
Fixes

Fixed CORS not being disabled by webSecurity: false. #25503 (Also in 9, 10, 11)
Fixed ready-to-show event not emitted on some machines. #25476 (Also in 9, 10, 11)
Fixed a crash in app.importCertificate() on Linux. #25536 (Also in 9, 10, 11)
Fixed a crash when closing window in an event listener after exiting fullscreen on macOS. #25604 (Also in 10, 11)
Fixed an issue that could cause a normally-exiting process to fail with an ""illegal access"" message and exit code 7. #25458 (Also in 8, 9, 10, 11)
Fixed an issue where an error would be displayed when using webContents.print() if no default was set and no device name provided. #25606 (Also in 9, 10, 11)
Fixed an issue where multiple calls to window.print() could cause a crash. #25530 
Fixed an issue where pageRanges was not properly honored when printing. #25597 (Also in 10)
Fixed crashes caused by attempting to modify destroyed views. #25511 (Also in 9, 10, 11)
Fixed the remote-debugging-port discovery page showing garbled text. #25601 (Also in 10, 11)
Updated Node root certs to use NSS 3.56. #25361 (Also in 8, 9, 10, 11)

Other Changes

Added a small console hint to console to help debug renderer crashes. #25472 (Also in 9, 10, 11)
Fixed resource leak in worker threads. #25662 (Also in 9, 10, 11)
Updated Chromium to 85.0.4183.121. #25559 

Unknown

Fixed extension background page devtools not being openable. #25566 (Also in 9, 10, 11)
","Release Notes for v10.1.3
Fixes
Fixed CORS not being disabled by webSecurity: false. #25503 (Also in 9, 10, 11)
Fixed ready-to-show event not emitted on some machines. #25476 (Also in 9, 10, 11)
Fixed a crash in app.importCertificate() on Linux. #25536 (Also in 9, 10, 11)
Fixed a crash when closing window in an event listener after exiting fullscreen on macOS. #25604 (Also in 10, 11)
Fixed an issue that could cause a normally-exiting process to fail with an ""illegal access"" message and exit code 7. #25458 (Also in 8, 9, 10, 11)
Fixed an issue where an error would be displayed when using webContents.print() if no default was set and no device name provided. #25606 (Also in 9, 10, 11)
Fixed an issue where multiple calls to window.print() could cause a crash. #25530 
Fixed an issue where pageRanges was not properly honored when printing. #25597 (Also in 10)
Fixed crashes caused by attempting to modify destroyed views. #25511 (Also in 9, 10, 11)
Fixed the remote-debugging-port discovery page showing garbled text. #25601 (Also in 10, 11)
Updated Node root certs to use NSS 3.56. #25361 (Also in 8, 9, 10, 11)
Other Changes
Added a small console hint to console to help debug renderer crashes. #25472 (Also in 9, 10, 11)
Fixed resource leak in worker threads. #25662 (Also in 9, 10, 11)
Updated Chromium to 85.0.4183.121. #25559 
Unknown
Fixed extension background page devtools not being openable. #25566 (Also in 9, 10, 11)"
597,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@11.0.0-beta.8.
# Release Notes for v11.0.0-beta.8
Features

Removed the desktopCapturer.getMediaSourceIdForWebContents() API. #25455 (Also in 11)

Fixes

Added missing module delay loads on windows to reduce per process reference set impact. #25436 (Also in 9, 10, 11)
Excess menu item separators are now only removed after item re-ordering is done to avoid accidental removal of needed separators. #25599 (Also in 11)
Fixed CORS not being disabled by webSecurity: false. #25504 (Also in 9, 10, 11)
Fixed ready-to-show event not emitted on some machines. #25471 (Also in 10, 11)
Fixed a crash in app.importCertificate() on Linux. #25537 (Also in 9, 10, 11)
Fixed a crash that could happen when a window was closed while a webview was in the process of being attached. #25598 (Also in 11)
Fixed a crash when closing window in an event listener after exiting fullscreen on macOS. #25524 (Also in 10, 11)
Fixed an issue that could cause a normally-exiting process to fail with an ""illegal access"" message and exit code 7. #25459 (Also in 8, 9, 10, 11)
Fixed an issue where an error would be displayed when using webContents.print() if no default was set and no device name provided. #25562 (Also in 9, 10, 11)
Fixed crashes caused by attempting to modify destroyed views. #25509 (Also in 11)
Fixed the remote-debugging-port discovery page showing garbled text. #25602 (Also in 10, 11)
Fixed unsubscribe from observers when window is closing. #25585 (Also in 9, 10, 11)
Updated Node root certs to use NSS 3.56. #25362 (Also in 8, 9, 10, 11)

Other Changes

Added a small console hint to console to help debug renderer crashes. #25474 (Also in 9, 10, 11)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@11.0.0-beta.8.
Release Notes for v11.0.0-beta.8
Features
Removed the desktopCapturer.getMediaSourceIdForWebContents() API. #25455 (Also in 11)
Fixes
Added missing module delay loads on windows to reduce per process reference set impact. #25436 (Also in 9, 10, 11)
Excess menu item separators are now only removed after item re-ordering is done to avoid accidental removal of needed separators. #25599 (Also in 11)
Fixed CORS not being disabled by webSecurity: false. #25504 (Also in 9, 10, 11)
Fixed ready-to-show event not emitted on some machines. #25471 (Also in 10, 11)
Fixed a crash in app.importCertificate() on Linux. #25537 (Also in 9, 10, 11)
Fixed a crash that could happen when a window was closed while a webview was in the process of being attached. #25598 (Also in 11)
Fixed a crash when closing window in an event listener after exiting fullscreen on macOS. #25524 (Also in 10, 11)
Fixed an issue that could cause a normally-exiting process to fail with an ""illegal access"" message and exit code 7. #25459 (Also in 8, 9, 10, 11)
Fixed an issue where an error would be displayed when using webContents.print() if no default was set and no device name provided. #25562 (Also in 9, 10, 11)
Fixed crashes caused by attempting to modify destroyed views. #25509 (Also in 11)
Fixed the remote-debugging-port discovery page showing garbled text. #25602 (Also in 10, 11)
Fixed unsubscribe from observers when window is closing. #25585 (Also in 9, 10, 11)
Updated Node root certs to use NSS 3.56. #25362 (Also in 8, 9, 10, 11)
Other Changes
Added a small console hint to console to help debug renderer crashes. #25474 (Also in 9, 10, 11)"
598,"Release Notes for v8.5.2
Fixes

Fixed multiple dock icons being left in system when calling dock.show/hide on macOS. #25302 (Also in 8, 9, 10, 11)

Other Changes

Security: backported fix for 1098860. #25290 
Security: backported fix for 1111737. #25394 
","Release Notes for v8.5.2
Fixes
Fixed multiple dock icons being left in system when calling dock.show/hide on macOS. #25302 (Also in 8, 9, 10, 11)
Other Changes
Security: backported fix for 1098860. #25290 
Security: backported fix for 1111737. #25394 "
599,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@11.0.0-beta.7.
# Release Notes for v11.0.0-beta.7
Fixes

Fixed crashes using nativeImage on Windows on ARM. #25410 (Also in 11)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@11.0.0-beta.7.
Release Notes for v11.0.0-beta.7
Fixes
Fixed crashes using nativeImage on Windows on ARM. #25410 (Also in 11)"
600,"Release Notes for v10.1.2
Fixes

Added missing module delay loads on windows to reduce per process reference set impact. #25435 (Also in 9, 10, 11)
Fixed a crash in the renderer process when invoking the Badging API. #25369 (Also in 9, 10, 11)
Fixed an issue where document.hasFocus and document.activeElement would be inconsistent upon showing a window that was initially created with show: false. #25330 (Also in 10, 11)
Fixed client_id file being generated in the working directory for node child process. #25309 (Also in 9, 10, 11)
Fixed multiple dock icons being left in system when calling dock.show/hide on macOS. #25299 (Also in 8, 9, 10, 11)

Other Changes

Updated Chromium to 85.0.4183.98. #25275 

Unknown

Added support for some chrome.management APIs. #25345 (Also in 9, 10, 11)
","Release Notes for v10.1.2
Fixes
Added missing module delay loads on windows to reduce per process reference set impact. #25435 (Also in 9, 10, 11)
Fixed a crash in the renderer process when invoking the Badging API. #25369 (Also in 9, 10, 11)
Fixed an issue where document.hasFocus and document.activeElement would be inconsistent upon showing a window that was initially created with show: false. #25330 (Also in 10, 11)
Fixed client_id file being generated in the working directory for node child process. #25309 (Also in 9, 10, 11)
Fixed multiple dock icons being left in system when calling dock.show/hide on macOS. #25299 (Also in 8, 9, 10, 11)
Other Changes
Updated Chromium to 85.0.4183.98. #25275 
Unknown
Added support for some chrome.management APIs. #25345 (Also in 9, 10, 11)"
601,"Release Notes for v9.3.1
Fixes

Added missing module delay loads on windows to reduce per process reference set impact. #25437 (Also in 9, 10, 11)
Fixed a crash in the renderer process when invoking the Badging API. #25371 (Also in 9, 10, 11)
Fixed a memory leak in net.request(). #25382 
Fixed multiple dock icons being left in system when calling dock.show/hide on macOS. #25301 (Also in 8, 9, 10, 11)

Other Changes

Security: backported fix for 1081874. #25389 
Security: backported fix for 1098860. #25289 
Security: backported fix for 1111737. #25391 
Security: backported fix for 1122684. #25390 

Unknown

Added support for some chrome.management APIs. #25344 (Also in 9, 10, 11)
","Release Notes for v9.3.1
Fixes
Added missing module delay loads on windows to reduce per process reference set impact. #25437 (Also in 9, 10, 11)
Fixed a crash in the renderer process when invoking the Badging API. #25371 (Also in 9, 10, 11)
Fixed a memory leak in net.request(). #25382 
Fixed multiple dock icons being left in system when calling dock.show/hide on macOS. #25301 (Also in 8, 9, 10, 11)
Other Changes
Security: backported fix for 1081874. #25389 
Security: backported fix for 1098860. #25289 
Security: backported fix for 1111737. #25391 
Security: backported fix for 1122684. #25390 
Unknown
Added support for some chrome.management APIs. #25344 (Also in 9, 10, 11)"
602,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@11.0.0-beta.6.
# Release Notes for v11.0.0-beta.6
Fixes

Fixed a crash in the renderer process when invoking the Badging API. #25370 (Also in 9, 10, 11)

Unknown

Added support for some chrome.management APIs. #25342 (Also in 9, 10, 11)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@11.0.0-beta.6.
Release Notes for v11.0.0-beta.6
Fixes
Fixed a crash in the renderer process when invoking the Badging API. #25370 (Also in 9, 10, 11)
Unknown
Added support for some chrome.management APIs. #25342 (Also in 9, 10, 11)"
603,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@11.0.0-beta.5.
# Release Notes for v11.0.0-beta.5
Fixes

Fixed an issue where document.hasFocus and document.activeElement would be inconsistent upon showing a window that was initially created with show: false. #25323 (Also in 11)
Fixed client_id file being generated in the working directory for node child process. #25310 (Also in 9, 11)
Fixed multiple dock icons being left in system when calling dock.show/hide on macOS. #25300 (Also in 8, 9, 10, 11)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@11.0.0-beta.5.
Release Notes for v11.0.0-beta.5
Fixes
Fixed an issue where document.hasFocus and document.activeElement would be inconsistent upon showing a window that was initially created with show: false. #25323 (Also in 11)
Fixed client_id file being generated in the working directory for node child process. #25310 (Also in 9, 11)
Fixed multiple dock icons being left in system when calling dock.show/hide on macOS. #25300 (Also in 8, 9, 10, 11)"
604,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@11.0.0-beta.4.
# Release Notes for v11.0.0-beta.4
Fixes



Fixes the following issues for frameless when maximized on Windows: * fix unreachable task bar when auto hidden with position top * fix 1px extending to secondary monitor * fix 1px overflowing into taskbar at certain resolutions * fix white line on top of window under 4k resolutions. #25217 (Also in 8, 9, 10, 11)


","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@11.0.0-beta.4.
Release Notes for v11.0.0-beta.4
Fixes
Fixes the following issues for frameless when maximized on Windows: * fix unreachable task bar when auto hidden with position top * fix 1px extending to secondary monitor * fix 1px overflowing into taskbar at certain resolutions * fix white line on top of window under 4k resolutions. #25217 (Also in 8, 9, 10, 11)"
605,"Release Notes for v9.3.0
Features

Added back a previously broken visibleOnFullScreen option for setVisibleOnAllWorkspaces. #25126
Added the currencyCode field that Apple's StoreKit in-app-purchasing library provides but has not been added to the Product object that inAppPurchase.getProducts returns. #25085

Fixes

Fixed powerMonitor not emitting suspend/resume events on some Windows machines. #25165
Fixed an issue where filters set in dialogs on macOS would have nondeterministic ordering. #25194
Fixed an issue where notifications with a reply button could potentially be destroyed too early when a user clicked on the notification body before replying. #25101
Fixed frameless window's size being changed when restored from minimized state. #25045
Fixed network permission error when there are multiple WebContents sharing same session are created with web security disabled. #25179
Fixed node's TLS stack not allowing renegotiation. #25041
Fixed the following issues for frameless when maximized on Windows * fix unreachable task bar when auto hidden with position top
fix 1px extending to secondary monitor
fix 1px overflowing into taskbar at certain resolutions
fix white line on top of window under 4k resolutions. #25218
Fixed window size being changed after unmaximizing. #25133

Unknown

Fixed not working WebSQLDatabase in extension background pages. #25070
","Release Notes for v9.3.0
Features
Added back a previously broken visibleOnFullScreen option for setVisibleOnAllWorkspaces. #25126
Added the currencyCode field that Apple's StoreKit in-app-purchasing library provides but has not been added to the Product object that inAppPurchase.getProducts returns. #25085
Fixes
Fixed powerMonitor not emitting suspend/resume events on some Windows machines. #25165
Fixed an issue where filters set in dialogs on macOS would have nondeterministic ordering. #25194
Fixed an issue where notifications with a reply button could potentially be destroyed too early when a user clicked on the notification body before replying. #25101
Fixed frameless window's size being changed when restored from minimized state. #25045
Fixed network permission error when there are multiple WebContents sharing same session are created with web security disabled. #25179
Fixed node's TLS stack not allowing renegotiation. #25041
Fixed the following issues for frameless when maximized on Windows * fix unreachable task bar when auto hidden with position top
fix 1px extending to secondary monitor
fix 1px overflowing into taskbar at certain resolutions
fix white line on top of window under 4k resolutions. #25218
Fixed window size being changed after unmaximizing. #25133
Unknown
Fixed not working WebSQLDatabase in extension background pages. #25070"
606,"Release Notes for v8.5.1
Fixes



Fixes the following issues for frameless when maximized on Windows:

fix unreachable task bar when auto hidden with position top
fix 1px extending to secondary monitor
fix 1px overflowing into taskbar at certain resolutions
fix white line on top of window under 4k resolutions. #25219





Fixed powerMonitor not emitting suspend/resume events on some Windows machines. #25163
Fixed an issue where notifications with a reply button could potentially be destroyed too early when a user clicked on the notification body before replying. #25102
Fixed an issue where some Node.js methods would not work with URL instances constructed in the renderer process. #24861
Fixed frameless window's size being changed when restored from minimized state. #25057
Fixed inactive windows having active titlebar on Windows. #24875
Fixed network permission error when there are multiple WebContents sharing same session are created with web security disabled. #25181
Fixed node's TLS stack not allowing renegotiation. #25042
Fixed window size being changed after unmaximizing. #25148

Other Changes

Backported the fix to CVE-2020-6532: Use after free in SCTP. #24886
Security: Backported fix for CVE-2020-6541. #25025
Security: backported fix for 1095584. #25227
Security: backported fix for 1103827. #25244
Security: backported fix for 1104046. #25243
Security: backported fix for 1105202. #25262
Security: backported fix for 1105426. #25241
Security: backported fix for 1106682,1109467. #25239
Security: backported fix for 1107433. #25235
Security: backported fix for 1107815. #25232
Security: backported fix for 1115345. #25266
","Release Notes for v8.5.1
Fixes
Fixes the following issues for frameless when maximized on Windows:
fix unreachable task bar when auto hidden with position top
fix 1px extending to secondary monitor
fix 1px overflowing into taskbar at certain resolutions
fix white line on top of window under 4k resolutions. #25219
Fixed powerMonitor not emitting suspend/resume events on some Windows machines. #25163
Fixed an issue where notifications with a reply button could potentially be destroyed too early when a user clicked on the notification body before replying. #25102
Fixed an issue where some Node.js methods would not work with URL instances constructed in the renderer process. #24861
Fixed frameless window's size being changed when restored from minimized state. #25057
Fixed inactive windows having active titlebar on Windows. #24875
Fixed network permission error when there are multiple WebContents sharing same session are created with web security disabled. #25181
Fixed node's TLS stack not allowing renegotiation. #25042
Fixed window size being changed after unmaximizing. #25148
Other Changes
Backported the fix to CVE-2020-6532: Use after free in SCTP. #24886
Security: Backported fix for CVE-2020-6541. #25025
Security: backported fix for 1095584. #25227
Security: backported fix for 1103827. #25244
Security: backported fix for 1104046. #25243
Security: backported fix for 1105202. #25262
Security: backported fix for 1105426. #25241
Security: backported fix for 1106682,1109467. #25239
Security: backported fix for 1107433. #25235
Security: backported fix for 1107815. #25232
Security: backported fix for 1115345. #25266"
607,"Release Notes for v10.1.1
Fixes

Fixed an issue where filters set in dialogs on macOS would have nondeterministic ordering. #25192
Fixed network permission error when there are multiple WebContents sharing same session are created with web security disabled. #25178
Fixed the following issues for frameless when maximized on Windows:
Unreachable task bar when auto hidden with position top
1px extending to secondary monitor
1px overflowing into taskbar at certain resolutions
White line on top of window under 4k resolutions. #25216



Other Changes

Updated Chromium to 85.0.4183.93. #25188

Unknown

Fixed issue where clicking notifications would no longer dismiss them as expected. #25246
","Release Notes for v10.1.1
Fixes
Fixed an issue where filters set in dialogs on macOS would have nondeterministic ordering. #25192
Fixed network permission error when there are multiple WebContents sharing same session are created with web security disabled. #25178
Fixed the following issues for frameless when maximized on Windows:
Unreachable task bar when auto hidden with position top
1px extending to secondary monitor
1px overflowing into taskbar at certain resolutions
White line on top of window under 4k resolutions. #25216
Other Changes
Updated Chromium to 85.0.4183.93. #25188
Unknown
Fixed issue where clicking notifications would no longer dismiss them as expected. #25246"
608,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@11.0.0-beta.3.
# Release Notes for v11.0.0-beta.3
Fixes

Fixed Electron not working on Windows 7 after https://github.com/electron/electron/pull/25076. #25168 (Also in 8, 9, 10, 11)
Fixed an issue where filters set in dialogs on macOS would have nondeterministic ordering. #25193 (Also in 9, 10, 11)
Fixed network permission error when there are multiple WebContents sharing same session are created with web security disabled. #25180 (Also in 8, 9, 10, 11)
Fixed shell.moveItemToTrash on Windows so that it returns false when move was unsuccessful. #25171 (Also in 9, 10, 11)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@11.0.0-beta.3.
Release Notes for v11.0.0-beta.3
Fixes
Fixed Electron not working on Windows 7 after link. #25168 (Also in 8, 9, 10, 11)
Fixed an issue where filters set in dialogs on macOS would have nondeterministic ordering. #25193 (Also in 9, 10, 11)
Fixed network permission error when there are multiple WebContents sharing same session are created with web security disabled. #25180 (Also in 8, 9, 10, 11)
Fixed shell.moveItemToTrash on Windows so that it returns false when move was unsuccessful. #25171 (Also in 9, 10, 11)"
609,"Release Notes for v10.1.0
Features

Added visualEffectState option to BrowserWindows to allow customization of vibrancy effect state on macOS. #25106
Added app.createThumbnailFromPath() API that returns a preview image of a file given its file path and a maximum thumbnail size. #25072
Added back a previously broken visibleOnFullScreen option for setVisibleOnAllWorkspaces. #25125
Added the currencyCode field that Apple's StoreKit in-app-purchasing library provides but has not been added to the Product object that inAppPurchase.getProducts returns. #25084

Fixes

Fixed Electron not working on Windows 7 after https://github.com/electron/electron/pull/25076. #25167
","Release Notes for v10.1.0
Features
Added visualEffectState option to BrowserWindows to allow customization of vibrancy effect state on macOS. #25106
Added app.createThumbnailFromPath() API that returns a preview image of a file given its file path and a maximum thumbnail size. #25072
Added back a previously broken visibleOnFullScreen option for setVisibleOnAllWorkspaces. #25125
Added the currencyCode field that Apple's StoreKit in-app-purchasing library provides but has not been added to the Product object that inAppPurchase.getProducts returns. #25084
Fixes
Fixed Electron not working on Windows 7 after link. #25167"
610,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@11.0.0-beta.1.
# Release Notes for v11.0.0-beta.1
Features

Added app.getApplicationInfoForProtocol() API that returns detailed information about the app that handles a certain protocol. #24112 
Added name to app.getAppMetrics() output. #24359 
Added utility-process-gone event to app. #24367 
Added visualEffectState option to BrowserWindows to allow customization of vibrancy effect state on macOS. #25083 
Added app.createThumbnailFromPath() API that returns a preview image of a file given its file path and a maximum thumbnail size. #24802 
Added back a previously broken visibleOnFullScreen option for setVisibleOnAllWorkspaces. #24956 
Added desktopCapturer.getMediaSourceIdForWebContents(), can be used with getUserMedia to get a stream for a WebContent. #22701 
Added did-become-active event on Mac for observing any application activation. #23872 
Added new worldSafeExecuteJavaScript webPreference to ensure that the return values from webFrame.executeJavaScript are world safe when context isolation is enabled. #24114 (Also in 9, 10)
Added optional parameter to specify monospaced font types for macOS tray titles. #25059 
Added support for suspend and resume events to Windows. #24251 (Also in 8, 9, 10)
Added support for suspend and resume events to macOS. #24254 (Also in 8, 9, 10)
Added the currencyCode field that Apple's StoreKit in-app-purchasing library provides but has not been added to the Product object that inAppPurchase.getProducts returns. #25058 
Changed app.getLoginItemSettings() and app.setLoginItemSettings() API to factor in startup approval keys when determining whether an application is able to launch on login. #24494 
Expose sessionId associated with a target from debugger module. #24170 (Also in 8, 9, 10)
Implemented systemPreferences.getMediaAccessStatus() on Windows. #24275 (Also in 8, 9, 10)
V8CacheOptions is a new webpreference option to enforce code caching policy. #23842 (Also in 8, 9, 10)
When the disabled-by-default-v8.cpu_profiler tracing category is enabled, cpu samples will now be collected from the main process as well as the renderer. #24819 

Fixes



fix loading shared worker scripts over custom protocol * fix crash when loading worker scripts with nodeIntegration enabled. #20625 (Also in 9, 10)


Added missing support for isComposing KeyboardEvent property. #23971 (Also in 8, 9, 10)
Added {stream:} option to registerSchemeAsPrivileged to enable custom protocols to stream video and audio. #22955 
Enable NTLM v2 for POSIX platforms and added --disable-ntlm-v2 switch to disable it. #23846 (Also in 7.3, 8, 9, 10)
Fix: Allow windows behind macOS elements if ""frame"" is false. #23976 (Also in 9, 10)
Fix: remove unnecessary corner mask overriding to increase window resize performance. #24642 (Also in 9, 10)
Fixed ""Paste and Match Style"" shortcut on macOS to match OS's ""Option-Shift-Command-V"". #24153 (Also in 8, 9, 10)
Fixed ""null path-to-app"" in test-app when Electron's path contains spaces or special characters. #24214 (Also in 8, 9, 10)
Fixed GTK dark theme setting not respected in Electron on Linux. #23678 (Also in 7.3, 8, 9, 10)
Fixed chrome://accessibility access in Electron. #24437 
Fixed chrome://media-internals and chrome://webrtc-internals pages not loading. #24010 (Also in 8, 9, 10)
Fixed powerMonitor not emitting suspend/resume events on some Windows machines. #25076 (Also in 10)
Fixed process.windowsStore returning undefined in AppX packages. #23785 (Also in 7.3, 8, 9, 10)
Fixed a 10.0.0-beta.1 issue that broke dark mode window titlebars on Linux. #25055 (Also in 10)
Fixed a bezeling issue on vibrant non-frameless BrowserWindows. #23779 (Also in 9, 10)
Fixed a crash in TouchBar for certain methods. #23936 (Also in 10)
Fixed a crash that could happen when using hookWindowMessage on Windows. #24716 (Also in 9, 10)
Fixed a crash that could occur when using in-memory sessions. #24964 (Also in 9, 10)
Fixed a crash that could occur when using the ipcRenderer module after blink had released the context. Instead, a JS exception will be thrown. #23917 (Also in 8, 9, 10)
Fixed a termination crash on Web Workers with Node.js integration enabled. #24436 (Also in 8, 9, 10)
Fixed an error when calling dialog.showCertificateTrustDialog with no BrowserWindow. #24091 (Also in 7.3, 8, 9, 10)
Fixed an intermittent high-CPU usage problem caused a system clock issue during sleep. #24394 (Also in 8, 9, 10)
Fixed an issue where VoiceOver was unable to navigate from the top-level window back into the web contents. #24655 (Also in 9, 10)
Fixed an issue where rmdir and rmdirSync work with original-fs in an asar context. #23890 (Also in 8, 9, 10)
Fixed an issue where shutdown would be emitted both on app and system shutdown on macOS. #24111 (Also in 8, 9, 10)
Fixed an issue where webContents.print() would sometimes hang with invalid settings. #24476 (Also in 9, 10)
Fixed an issue where window.location properties would throw an error for windows opened with window.open. #23776 (Also in 8, 9, 10)
Fixed an issue where withFileTypes was not supported as an option to fs.readdir or fs.readdirSync under asar. #24062 (Also in 8, 9, 10)
Fixed an issue where cpu and heap profiling in Node.js did not work properly with --cpu-prof, --heap-prof, and related CLI flags. #24528 (Also in 8, 9, 10)
Fixed an issue where errors were seen for nonexistent asar files. #24890 
Fixed an issue where frameless modal windows with a vibrancy setting had bezeled corners. #24250 (Also in 9, 10)
Fixed an issue where macOS window vibrancy active state did not always match the active state of the window. #24471 (Also in 8, 9, 10)
Fixed an issue where many uses of the Node.js assert module would throw in both the browser and renderer processes. #24579 
Fixed an issue where notifications with a reply button could potentially be destroyed too early when a user clicked on the notification body before replying. #25086 (Also in 8, 9, 10)
Fixed an issue where some Node.js methods would not work with URL instances constructed in the renderer process. #24831 (Also in 8, 9, 10)
Fixed an issue where some apps might be rejected from the Mac App Store owing to a private font-related API added in Chromium. #25117 (Also in 10)
Fixed an issue where some old notifications were not properly removed from the Notification Center on macOS. #24302 (Also in 8, 9, 10)
Fixed an issue where suspend/resume were emitted twice on macOS. #24818 (Also in 8, 9, 10)
Fixed an issue where the 'about' role had on effect on Windows menus. #23687 (Also in 7.3, 8, 9, 10)
Fixed an issue where the Save button did not function in PDF previews. #24946 (Also in 9, 10)
Fixed an issue which would cause streaming protocol responses to stall in some cases. #24022 (Also in 8, 9, 10)
Fixed an issue with click events not being emitted on macOS for Trays with context menus set. #24200 (Also in 8, 9, 10)
Fixed an issue with volume-related globalShortcut registration. #23782 (Also in 8, 9, 10)
Fixed an occasional menu crash on macOS Catalina when menu is closing. #23778 (Also in 8, 9, 10)
Fixed broken --trace-sync-io flag in Node.js. #24529 (Also in 8, 9, 10)
Fixed broken toolbar text in the PDF viewer. #24913 (Also in 10)
Fixed bug on macOS where the main window could be targeted for a focus event when it was disabled behind a modal. #24286 (Also in 8, 9, 10)
Fixed clipboard.readBuffer returning incorrect value. #24454 (Also in 8, 9, 10)
Fixed crash that could occur when passing a non-absolute path to session.loadExtension. #25068 (Also in 10)
Fixed crash when navigating between origins in a child window with nativeWindowOpen and contextIsolation enabled. #23684 (Also in 8, 9, 10)
Fixed crash when navigating from a page with webview that has inherited zoom level. #24757 (Also in 8, 9, 10)
Fixed crash when opening offscreen transparent windows with gpu acceleration off. #24390 
Fixed crash when using client certificate. #24868 (Also in 10)
Fixed delayed execution of some Node.js callbacks in the main process. #24131 (Also in 8, 9, 10)
Fixed disabling color correct rendering with --disable-color-correct-rendering. #23787 (Also in 8, 9, 10)
Fixed executeJavaScriptInIsolatedWorld not respecting hasUserGesture argument. #24396 
Fixed frameless window's size being changed when restored from minimized state. #25014 (Also in 8, 9, 10)
Fixed inactive windows having active titlebar on Windows. #24847 (Also in 8, 9, 10)
Fixed intercepted protocols not raising Redirect information back to Chromium. #23742 (Also in 7.3)
Fixed issued where voice over would not read words as you typed them. #24801 (Also in 10)
Fixed media keys working unilaterally when registered with globalShortcut. #24145 
Fixed missing guid parameter in Linux crash reports. #24881 (Also in 9, 10)
Fixed no session in webContents of type remote. #23989 (Also in 9, 10)
Fixed node's TLS stack not allowing renegotiation. #25022 (Also in 8, 9, 10)
Fixed potentially invalid duplex mode settings on Linux. #24489 (Also in 9, 10)
Fixed serialization of nativeImages over remote when moving from the main process to the renderer process. #23759 (Also in 7.3, 8, 9, 10)
Fixed the acceptLanguages argument being ignored in session.setUserAgent(). #23944 (Also in 7.3, 8, 9, 10)
Fixed tray menu on Windows not keyboard navigable. #23843 (Also in 8, 9, 10)
Fixed tray menu showing in taskbar on Windows. #24097 (Also in 8, 9, 10)
Fixed undefined symbol error when loading native modules that uses uv_dlopen. #24659 
Fixed window size being changed after unmaximizing. #25051 (Also in 9, 10)
Fixed window titlebar not responding to pen on Windows 10. #24042 (Also in 7.3, 8, 9, 10)
Fixed: On some Windows machines, especially Windows Insider builds, Electron would crash silently during startup. #24030 (Also in 9, 10)
Increased maximum length for crash keys from 127B to 20KB. #24782 (Also in 9, 10)
None. #24240 (Also in 9)
None. #25112 
Protocol response streams are now destroyed if the request is aborted. #24014 (Also in 9, 10)
Resolve app-scoped bookmarks without mounting network drives. #24708 
Restored old implementation of Linux Tray icons to fix a collection of issues where the tray icon wouldn't appear, would be the wrong size or would randomly disappear. #23674 (Also in 8, 9, 10)
Save crash reports locally when uploadToServer: false on linux. #24778 (Also in 9, 10)
The element highlighter in devtools works again. #24921 (Also in 10)
shell.showItemInFolder uses the FileManager DBUS API on Linux, only falling back to xdg-open if that fails. #25087 

Other Changes

Added V8 crash message and location information to crashReport parameters. #24771 (Also in 10)
Added new experimental apple silicon (darwin arm64) builds. #24545 
Deprecated the default of contextIsolation, it will change from false to true in a future Electron release. #23507 
Fixed an issue with a consistent unwanted exception appearing during a debugging session with the VSCode debugger. #24191 
Fixed mac app store rejection notice for invalid symbolic link in bundle. #23831 
Fixed mac app store rejection notice for invalid symbolic link in bundle. #24158 (Also in 9, 10)
Improved the default REPL experience when running Electron with the --interactive flag. #24204 
Improved the performance of sending JS primitives over the context bridge. #24531 (Also in 9, 10)
Improved the performance of sending wide objects over the context bridge. #24671 
None. #24987 
Removed experimental APIs: BrowserView.{fromId, fromWebContents, getAllViews} and the id property of BrowserView. #23578 
Updated Node.js to v12.18.3. #24707 

Documentation

Documentation changes: #24147, #24374, #24473, #25073

Unknown

Fixed issues with CORS when making requests from extensions. #24483 (Also in 9, 10)
Fixed not working WebSQLDatabase in extension background pages. #24798 (Also in 9, 10)
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@11.0.0-beta.1.
Release Notes for v11.0.0-beta.1
Features
Added app.getApplicationInfoForProtocol() API that returns detailed information about the app that handles a certain protocol. #24112 
Added name to app.getAppMetrics() output. #24359 
Added utility-process-gone event to app. #24367 
Added visualEffectState option to BrowserWindows to allow customization of vibrancy effect state on macOS. #25083 
Added app.createThumbnailFromPath() API that returns a preview image of a file given its file path and a maximum thumbnail size. #24802 
Added back a previously broken visibleOnFullScreen option for setVisibleOnAllWorkspaces. #24956 
Added desktopCapturer.getMediaSourceIdForWebContents(), can be used with getUserMedia to get a stream for a WebContent. #22701 
Added did-become-active event on Mac for observing any application activation. #23872 
Added new worldSafeExecuteJavaScript webPreference to ensure that the return values from webFrame.executeJavaScript are world safe when context isolation is enabled. #24114 (Also in 9, 10)
Added optional parameter to specify monospaced font types for macOS tray titles. #25059 
Added support for suspend and resume events to Windows. #24251 (Also in 8, 9, 10)
Added support for suspend and resume events to macOS. #24254 (Also in 8, 9, 10)
Added the currencyCode field that Apple's StoreKit in-app-purchasing library provides but has not been added to the Product object that inAppPurchase.getProducts returns. #25058 
Changed app.getLoginItemSettings() and app.setLoginItemSettings() API to factor in startup approval keys when determining whether an application is able to launch on login. #24494 
Expose sessionId associated with a target from debugger module. #24170 (Also in 8, 9, 10)
Implemented systemPreferences.getMediaAccessStatus() on Windows. #24275 (Also in 8, 9, 10)
V8CacheOptions is a new webpreference option to enforce code caching policy. #23842 (Also in 8, 9, 10)
When the disabled-by-default-v8.cpu_profiler tracing category is enabled, cpu samples will now be collected from the main process as well as the renderer. #24819 
Fixes
fix loading shared worker scripts over custom protocol * fix crash when loading worker scripts with nodeIntegration enabled. #20625 (Also in 9, 10)
Added missing support for isComposing KeyboardEvent property. #23971 (Also in 8, 9, 10)
Added {stream:} option to registerSchemeAsPrivileged to enable custom protocols to stream video and audio. #22955 
Enable NTLM v2 for POSIX platforms and added --disable-ntlm-v2 switch to disable it. #23846 (Also in 7.3, 8, 9, 10)
Fix: Allow windows behind macOS elements if ""frame"" is false. #23976 (Also in 9, 10)
Fix: remove unnecessary corner mask overriding to increase window resize performance. #24642 (Also in 9, 10)
Fixed ""Paste and Match Style"" shortcut on macOS to match OS's ""Option-Shift-Command-V"". #24153 (Also in 8, 9, 10)
Fixed ""null path-to-app"" in test-app when Electron's path contains spaces or special characters. #24214 (Also in 8, 9, 10)
Fixed GTK dark theme setting not respected in Electron on Linux. #23678 (Also in 7.3, 8, 9, 10)
Fixed chrome://accessibility access in Electron. #24437 
Fixed chrome://media-internals and chrome://webrtc-internals pages not loading. #24010 (Also in 8, 9, 10)
Fixed powerMonitor not emitting suspend/resume events on some Windows machines. #25076 (Also in 10)
Fixed process.windowsStore returning undefined in AppX packages. #23785 (Also in 7.3, 8, 9, 10)
Fixed a 10.0.0-beta.1 issue that broke dark mode window titlebars on Linux. #25055 (Also in 10)
Fixed a bezeling issue on vibrant non-frameless BrowserWindows. #23779 (Also in 9, 10)
Fixed a crash in TouchBar for certain methods. #23936 (Also in 10)
Fixed a crash that could happen when using hookWindowMessage on Windows. #24716 (Also in 9, 10)
Fixed a crash that could occur when using in-memory sessions. #24964 (Also in 9, 10)
Fixed a crash that could occur when using the ipcRenderer module after blink had released the context. Instead, a JS exception will be thrown. #23917 (Also in 8, 9, 10)
Fixed a termination crash on Web Workers with Node.js integration enabled. #24436 (Also in 8, 9, 10)
Fixed an error when calling dialog.showCertificateTrustDialog with no BrowserWindow. #24091 (Also in 7.3, 8, 9, 10)
Fixed an intermittent high-CPU usage problem caused a system clock issue during sleep. #24394 (Also in 8, 9, 10)
Fixed an issue where VoiceOver was unable to navigate from the top-level window back into the web contents. #24655 (Also in 9, 10)
Fixed an issue where rmdir and rmdirSync work with original-fs in an asar context. #23890 (Also in 8, 9, 10)
Fixed an issue where shutdown would be emitted both on app and system shutdown on macOS. #24111 (Also in 8, 9, 10)
Fixed an issue where webContents.print() would sometimes hang with invalid settings. #24476 (Also in 9, 10)
Fixed an issue where window.location properties would throw an error for windows opened with window.open. #23776 (Also in 8, 9, 10)
Fixed an issue where withFileTypes was not supported as an option to fs.readdir or fs.readdirSync under asar. #24062 (Also in 8, 9, 10)
Fixed an issue where cpu and heap profiling in Node.js did not work properly with --cpu-prof, --heap-prof, and related CLI flags. #24528 (Also in 8, 9, 10)
Fixed an issue where errors were seen for nonexistent asar files. #24890 
Fixed an issue where frameless modal windows with a vibrancy setting had bezeled corners. #24250 (Also in 9, 10)
Fixed an issue where macOS window vibrancy active state did not always match the active state of the window. #24471 (Also in 8, 9, 10)
Fixed an issue where many uses of the Node.js assert module would throw in both the browser and renderer processes. #24579 
Fixed an issue where notifications with a reply button could potentially be destroyed too early when a user clicked on the notification body before replying. #25086 (Also in 8, 9, 10)
Fixed an issue where some Node.js methods would not work with URL instances constructed in the renderer process. #24831 (Also in 8, 9, 10)
Fixed an issue where some apps might be rejected from the Mac App Store owing to a private font-related API added in Chromium. #25117 (Also in 10)
Fixed an issue where some old notifications were not properly removed from the Notification Center on macOS. #24302 (Also in 8, 9, 10)
Fixed an issue where suspend/resume were emitted twice on macOS. #24818 (Also in 8, 9, 10)
Fixed an issue where the 'about' role had on effect on Windows menus. #23687 (Also in 7.3, 8, 9, 10)
Fixed an issue where the Save button did not function in PDF previews. #24946 (Also in 9, 10)
Fixed an issue which would cause streaming protocol responses to stall in some cases. #24022 (Also in 8, 9, 10)
Fixed an issue with click events not being emitted on macOS for Trays with context menus set. #24200 (Also in 8, 9, 10)
Fixed an issue with volume-related globalShortcut registration. #23782 (Also in 8, 9, 10)
Fixed an occasional menu crash on macOS Catalina when menu is closing. #23778 (Also in 8, 9, 10)
Fixed broken --trace-sync-io flag in Node.js. #24529 (Also in 8, 9, 10)
Fixed broken toolbar text in the PDF viewer. #24913 (Also in 10)
Fixed bug on macOS where the main window could be targeted for a focus event when it was disabled behind a modal. #24286 (Also in 8, 9, 10)
Fixed clipboard.readBuffer returning incorrect value. #24454 (Also in 8, 9, 10)
Fixed crash that could occur when passing a non-absolute path to session.loadExtension. #25068 (Also in 10)
Fixed crash when navigating between origins in a child window with nativeWindowOpen and contextIsolation enabled. #23684 (Also in 8, 9, 10)
Fixed crash when navigating from a page with webview that has inherited zoom level. #24757 (Also in 8, 9, 10)
Fixed crash when opening offscreen transparent windows with gpu acceleration off. #24390 
Fixed crash when using client certificate. #24868 (Also in 10)
Fixed delayed execution of some Node.js callbacks in the main process. #24131 (Also in 8, 9, 10)
Fixed disabling color correct rendering with --disable-color-correct-rendering. #23787 (Also in 8, 9, 10)
Fixed executeJavaScriptInIsolatedWorld not respecting hasUserGesture argument. #24396 
Fixed frameless window's size being changed when restored from minimized state. #25014 (Also in 8, 9, 10)
Fixed inactive windows having active titlebar on Windows. #24847 (Also in 8, 9, 10)
Fixed intercepted protocols not raising Redirect information back to Chromium. #23742 (Also in 7.3)
Fixed issued where voice over would not read words as you typed them. #24801 (Also in 10)
Fixed media keys working unilaterally when registered with globalShortcut. #24145 
Fixed missing guid parameter in Linux crash reports. #24881 (Also in 9, 10)
Fixed no session in webContents of type remote. #23989 (Also in 9, 10)
Fixed node's TLS stack not allowing renegotiation. #25022 (Also in 8, 9, 10)
Fixed potentially invalid duplex mode settings on Linux. #24489 (Also in 9, 10)
Fixed serialization of nativeImages over remote when moving from the main process to the renderer process. #23759 (Also in 7.3, 8, 9, 10)
Fixed the acceptLanguages argument being ignored in session.setUserAgent(). #23944 (Also in 7.3, 8, 9, 10)
Fixed tray menu on Windows not keyboard navigable. #23843 (Also in 8, 9, 10)
Fixed tray menu showing in taskbar on Windows. #24097 (Also in 8, 9, 10)
Fixed undefined symbol error when loading native modules that uses uv_dlopen. #24659 
Fixed window size being changed after unmaximizing. #25051 (Also in 9, 10)
Fixed window titlebar not responding to pen on Windows 10. #24042 (Also in 7.3, 8, 9, 10)
Fixed: On some Windows machines, especially Windows Insider builds, Electron would crash silently during startup. #24030 (Also in 9, 10)
Increased maximum length for crash keys from 127B to 20KB. #24782 (Also in 9, 10)
None. #24240 (Also in 9)
None. #25112 
Protocol response streams are now destroyed if the request is aborted. #24014 (Also in 9, 10)
Resolve app-scoped bookmarks without mounting network drives. #24708 
Restored old implementation of Linux Tray icons to fix a collection of issues where the tray icon wouldn't appear, would be the wrong size or would randomly disappear. #23674 (Also in 8, 9, 10)
Save crash reports locally when uploadToServer: false on linux. #24778 (Also in 9, 10)
The element highlighter in devtools works again. #24921 (Also in 10)
shell.showItemInFolder uses the FileManager DBUS API on Linux, only falling back to xdg-open if that fails. #25087 
Other Changes
Added V8 crash message and location information to crashReport parameters. #24771 (Also in 10)
Added new experimental apple silicon (darwin arm64) builds. #24545 
Deprecated the default of contextIsolation, it will change from false to true in a future Electron release. #23507 
Fixed an issue with a consistent unwanted exception appearing during a debugging session with the VSCode debugger. #24191 
Fixed mac app store rejection notice for invalid symbolic link in bundle. #23831 
Fixed mac app store rejection notice for invalid symbolic link in bundle. #24158 (Also in 9, 10)
Improved the default REPL experience when running Electron with the --interactive flag. #24204 
Improved the performance of sending JS primitives over the context bridge. #24531 (Also in 9, 10)
Improved the performance of sending wide objects over the context bridge. #24671 
None. #24987 
Removed experimental APIs: BrowserView.{fromId, fromWebContents, getAllViews} and the id property of BrowserView. #23578 
Updated Node.js to v12.18.3. #24707 
Documentation
Documentation changes: #24147, #24374, #24473, #25073
Unknown
Fixed issues with CORS when making requests from extensions. #24483 (Also in 9, 10)
Fixed not working WebSQLDatabase in extension background pages. #24798 (Also in 9, 10)"
611,"Release Notes for v10.0.1
Fixes

Fixed powerMonitor not emitting suspend/resume events on some Windows machines. #25111
Fixed an issue where notifications with a reply button could potentially be destroyed too early when a user clicked on the notification body before replying. #25100
Fixed an issue where some apps might be rejected from the Mac App Store owing to a private font-related API added in Chromium. #25137
Fixed window size being changed after unmaximizing. #25132

Other Changes

Fixed a potential crash on print job cancellation. #25131
Updated Chromium to 85.0.4183.86. #25142
","Release Notes for v10.0.1
Fixes
Fixed powerMonitor not emitting suspend/resume events on some Windows machines. #25111
Fixed an issue where notifications with a reply button could potentially be destroyed too early when a user clicked on the notification body before replying. #25100
Fixed an issue where some apps might be rejected from the Mac App Store owing to a private font-related API added in Chromium. #25137
Fixed window size being changed after unmaximizing. #25132
Other Changes
Fixed a potential crash on print job cancellation. #25131
Updated Chromium to 85.0.4183.86. #25142"
612,"Release Notes for v7.3.3
Fixes

Backported fixe for UAF in extensions (NOCVE). #24420
Fix: DCHECK failure in value.IsHeapObject() in objectsdebug.cc. (Chromium security issue 1084820). #24564
Fix: XSS on chrome://histograms/ with a compromised renderer. (Chromium security issue 1073409). #24627
Fix: heap-use-after-free in content::NavigationRequest::OnWillProcessResponseProcessed. (Chromium security issue 1090543). #24567
Fix: heap-use-after-free in ui::AXTreeSerializerblink (Chromium security issue 1065122). #24555
Fix: memcpy-param-overlap in AudioBuffer::copyFromChannel. (Chromium security issue 1081722). #24584
Fix: remove leaks of post-redirect URL for <script>  in the CSP reports and stacktraces of errors (Chromium security issue 1074317). #24558
Fix: update webrtc root certificate. (Chromium security issue 978779). #24619
Fix: use-of-uninitialized-value in amr_read_header. (Chromium security issue 1065731). #24596
Fix: usrsctp is called with pointer as network address. (Chromium security issue 1076703). #24561

Other Changes

Backported the fix to CVE-2020-6532: Use after free in SCTP. #24894
Security: Backported fix for CVE-2020-6541. #25026

End of Support for 7.x.y
Electron 7.x.y has reached end-of-support as per the project's support policy. Developers and applications are encouraged to upgrade to a newer version of Electron.","Release Notes for v7.3.3
Fixes
Backported fixe for UAF in extensions (NOCVE). #24420
Fix: DCHECK failure in value.IsHeapObject() in objectsdebug.cc. (Chromium security issue 1084820). #24564
Fix: XSS on chrome://histograms/ with a compromised renderer. (Chromium security issue 1073409). #24627
Fix: heap-use-after-free in content::NavigationRequest::OnWillProcessResponseProcessed. (Chromium security issue 1090543). #24567
Fix: heap-use-after-free in ui::AXTreeSerializerblink (Chromium security issue 1065122). #24555
Fix: memcpy-param-overlap in AudioBuffer::copyFromChannel. (Chromium security issue 1081722). #24584
Fix: remove leaks of post-redirect URL for "
613,"Release Notes for v10.0.0
Stack Upgrades

Chromium 85.0.4183.84
v85 blog post
v84 blog post


Node v12.16.3
v12.16.3 release notes
v12.16.2 release notes
v12.16.1 release notes
v12.16.0 release notes
v12.15.0 release notes
v12.14.1 release notes


V8 v8.5
v8.5 blog post
v8.4 blog post



Breaking Changes

Changed the default value of 'enableRemoteModule' to false. #22091 
Changed the default value of app.allowRendererProcessReuse to true, this will prevent loading of non-context-aware native modules in renderer processes.  See #18397 for more information on this change. #22336
Fixed the positioning of window buttons on MacOS when the OS locale is set to an RTL language (like Arabic or Hebrew). Frameless window apps may have to account for this change while styling their windows. #22016 

Features

Added contents.getBackgroundThrottling() method and contents.backgroundThrottling property. #21036
Added a sameSite property to the Cookie structure allowing you to get and set the same site policy for cookies. #22789
Added new render-process-gone event on app to replace the renderer-process-crashed event. #23560 
Added new render-process-gone event to replace the crashed event. #23096
Added new useSessionCookies flag to net requests to allow them to use the session cookie store. #22704
Added support for MessagePort in the main process. #22404
Added support for the 'compress' option of crashReporter on Linux. #23597 
Added the 'onclose' event to MessagePort and MessagePortMain. #22532 
Added the ability to get the ""Recent"" folder on Windows with app.getPath('recent'). #23381
BrowserWindow darkTheme option now defaults to nativeTheme.shouldUseDarkColors. #20138 
Can now check if a given session is persistent by calling the ses.isPersistent() API. #22622 
Deprecated uncompressed crash uploads in crashReporter. #23598 
Enable native Electron handling and passing of Node.js cli options. #21110
Enhanced window.open functionality with the ability to handle POST data in the new-window event. #19703 
Exposed the desktopCapturer module in the main process. #23548 
The position of nested touch bars inherited from Chromium can now be customized (macOS). #22270 
Added V8 crash message and location information to crashReport parameters. #24866
Removed the deprecated currentlyLoggingPath property of netLog. Additionally, netLog.stopLogging no longer returns the path to the recorded log. #22732 
Added disableDialogs option to WebPreferences. #22395 (Also in 8, 9)
Added fullScreen property support for BrowserWindows. #23145 (Also in 9)
Added rateLimit and compress options to crashReporter. #23062 
Added session.listWordsFromSpellCheckerDictionary API to list custom words in the dictionary. #22101 (Also in 9)
Added session.removeWordFromSpellCheckerDictionary API to remove custom words in the dictionary. #22039 (Also in 9)
Added session.serviceWorkerContext API to access basic service worker info and receive console logs from service workers. #20624 (Also in 9)
Added a new force parameter to app.focus() on macOS to allow apps to forcefully take focus. #22612 (Also in 8, 9)
Added ability to set and get title bar traffic light position on the fly (macOS). #22533 (Also in 8, 9)
Added new spellcheck-dictionary-* events on the session module to help track and debug dictionary initialization. #22449 (Also in 8, 9)
Added new worldSafeExecuteJavaScript webPreference to ensure that the return values from webFrame.executeJavaScript are world safe when context isolation is enabled. #24711 (Also in 9)
Added support for property access to some getter/setter pairs on BrowserWindow. #22771 (Also in 9)
Added support for suspend and resume events to Windows. #24281 (Also in 8, 9)
Added support for suspend and resume events to macOS. #24293 (Also in 8, 9) 
Allow an optional callback parameter for WebFrame.executeJavaScript* methods, which is called synchronously unless the target context is paused. #21423 (Also in 9)
EnableWebSQL is a new webpreference option to enable/disable websql api. #23311 (Also in 7.2, 8, 9)
Expose sessionId associated with a target from debugger module. #24397 (Also in 8, 9)
Implemented systemPreferences.getMediaAccessStatus() on Windows. #24311 (Also in 8, 9)
Restored support for pdfium-based PDF viewer. #21794 (Also in 9)
V8CacheOptions is a new webpreference option to enforce code caching policy. #23867 (Also in 8, 9)
Ensured proper nativeImage serialization between renderer and browser processes via remote. #23794 (Also in 7.3, 8, 9)
Improved error logging on moveItemToTrash failures on macOS. #23589 (Also in 8, 9)

Fixes

Fixed BrowserWindow.moveAbove on Windows. #23161 
Fixed WebContents.focus not focusing window on macOS and Linux. #22323
Fixed a crash that could happen when a warning was emitted when loading an extension. #23667 
Fixed a crash when closing GTK file open/save dialogs. #23109 
Fixed a crash when using <input type=""file"" />. #22843 
Fixed a potential crash when menu is created from an empty template. #23308 
Fixed an issue that could cause exceptions in the 'remote' module when accessing objects without constructors. #22820 
Fixed an issue where startDrag could crash if some specific strings were passed into nativeImage.createFromImage to create the icon. #23467 
Fixed an issue where diagnostic error reporting wasn't available in Node.js processes. #23126 
Fixed an issue where undo and redo shortcuts did not work in webviews. #22911 
Fixed crash when using client certificate. #25019 
Fixed issues with CORS when making requests from extensions. #24822 (Also in 9)
Fixed loading shared worker scripts over custom protocol * fix crash when loading worker scripts with nodeIntegration enabled. #24749 (Also in 9)
Accessing the screen module before the ready event no longer makes it impossible to access the screen module. #22895 (Also in 8, 9)
Added missing support for isComposing KeyboardEvent property. #23995 (Also in 8, 9)
Added workaround for nativeWindowOpen hang. #22825 (Also in 8, 9)
DeviceId from navigator.mediaDevices.enumerateDevices is now consistent across reloads. #22386 (Also in 8, 9)
Don't allow window to go behind menu bar on mac. #22770 (Also in 9)
Don't ignore the referrer header in net.request. #23386 (Also in 8, 9)
Enable NTLM v2 for POSIX platforms and added --disable-ntlm-v2 switch to disable it. #23916 (Also in 7.3, 8, 9)
Enable offscreen rendering. #22160 (Also in 8, 9)
Ensured that exit callbacks are run for Node.js in the renderer process. #23419 (Also in 7.2, 8, 9)
Fix: Allow windows behind macOS elements if ""frame"" is false. #24032 (Also in 9)
Fixed ""Paste and Match Style"" shortcut on macOS to match OS's ""Option-Shift-Command-V"". #24182 (Also in 8, 9)
Fixed ""null path-to-app"" in test-app when Electron's path contains spaces or special characters. #24230 (Also in 8, 9)
Fixed ""will-navigate"" event not being emitted for sandboxed contents. #22188 (Also in 8, 9)
Fixed ARIA role=""tree"" for macOS VoiceOver. #22367 (Also in 8, 9)
Fixed Electron apps getting rejected to Mac App Store. #20965 (Also in 6.1, 8, 9)
Fixed GTK dark theme setting not respected in Electron on Linux. #23711 (Also in 7.3, 8, 9)
Fixed Promise timeout issue when running Electron as Node. #23153 (Also in 7.2, 9) 
Fixed chrome://media-internals and chrome://webrtc-internals pages not loading. #24057 (Also in 8, 9)
Fixed process.windowsStore returning undefined in AppX packages. #23798 (Also in 7.3, 8, 9)
Fixed session.setSpellCheckerDictionaryDownloadURL to append the dictionary name at the end of requests instead of requesting the same URL for all dictionaries. #22382 (Also in 8, 9)
Fixed webRequest API not working with WebSockets. #22040 (Also in 8, 9)
Fixed webRequest module not working with file:// protocol. #22903 (Also in 9)
Fixed webRequest not working for CORS requests. #22407 (Also in 9)
Fixed win.setMenuBarVisibility(false) not hiding menu bar. #23214 (Also in 9)
Fixed a bezeling issue on vibrant non-frameless BrowserWindows. #23809 (Also in 9)
Fixed a crash in TouchBar for certain methods. #23970 
Fixed a crash in webContents.print() with custom print margins. #22164 (Also in 8, 9)
Fixed a crash that could happen when attempting to access a session during shutdown. #23039 (Also in 8, 9)
Fixed a crash that could happen when using hookWindowMessage on Windows. #24768 (Also in 9)
Fixed a crash that could occur when sending arrays over IPC. #22753 (Also in 8, 9)
Fixed a crash that could occur when using in-memory sessions. #25001 (Also in 9)
Fixed a crash that could occur when using the ipcRenderer module after blink had released the context. Instead, a JS exception will be thrown. #23977 (Also in 8, 9)
Fixed a crash which could occur during page navigations. #23271 (Also in 8, 9)
Fixed a potential crash on devices which had not connected any printers to their network. #22418 (Also in 8, 9)
Fixed a potential crash on invalid zoomFactor values when setting the zoom factor of a webpage. #22673 (Also in 7.2, 8, 9)
Fixed a termination crash on Web Workers with Node.js integration enabled. #24462 (Also in 8, 9)
Fixed a use-after-free error that could happen if a Tray was destroyed while showing a custom context menu. #22842 (Also in 7.2, 8, 9)
Fixed an error when calling dialog.showCertificateTrustDialog with no BrowserWindow. #24118 (Also in 7.3, 8, 9)
Fixed an intermittent high-CPU usage problem caused a system clock issue during sleep. #24413 (Also in 8, 9)
Fixed an issue where TypeError occurred on initializing CrashReporter. #22274 (Also in 8, 9)
Fixed an issue where VoiceOver was unable to navigate from the top-level window back into the web contents. #24698 (Also in 9)
Fixed an issue where nativeImages might throw conversion errors in the renderer process. #23543 (Also in 7.3, 8, 9)
Fixed an issue where rmdir and rmdirSync work with original-fs in an asar context. #23951 (Also in 8, 9)
Fixed an issue where shutdown would be emitted both on app and system shutdown on macOS. #24139 (Also in 8, 9)
Fixed an issue where undefined was printed from console.log on Window when no arguments were passed. #22165 (Also in 8, 9)
Fixed an issue where webContents.print() would sometimes hang with invalid settings. #24507 (Also in 9)
Fixed an issue where window.location properties would throw an error for windows opened with window.open. #23804 (Also in 8, 9)
Fixed an issue where withFileTypes was not supported as an option to fs.readdir or fs.readdirSync under asar. #24106 (Also in 8, 9)
Fixed an issue where changing theme on macOS would break window maximizability state. #22677 (Also in 9)
Fixed an issue where cpu and heap profiling in Node.js did not work properly with --cpu-prof, --heap-prof, and related CLI flags. #24540 (Also in 8, 9)
Fixed an issue where frameless modal windows with a vibrancy setting had bezeled corners. #24284 (Also in 9)
Fixed an issue where macOS window vibrancy active state did not always match the active state of the window. #24532 (Also in 8, 9)
Fixed an issue where native macOS dialogs sometimes failed to show after modal close. #22858 (Also in 8, 9)
Fixed an issue where some Node.js methods would not work with URL instances constructed in the renderer process. #24860 (Also in 8, 9)
Fixed an issue where some logging would double-print. #22342 (Also in 8, 9)
Fixed an issue where some old notifications were not properly removed from the Notification Center on macOS. #24404 (Also in 8, 9)
Fixed an issue where suspend/resume were emitted twice on macOS. #24843 (Also in 8, 9)
Fixed an issue where the 'about' role had on effect on Windows menus. #23717 (Also in 7.3, 8, 9)
Fixed an issue where the Save button did not function in PDF previews. #24995 (Also in 9)
Fixed an issue whereby macOS would fail to allow file extensions containing periods. #23409 (Also in 7.2, 8, 9)
Fixed an issue which would cause streaming protocol responses to stall in some cases. #24081 (Also in 8, 9)
Fixed an issue with maximizable state persistence of BrowserWindows on macOS. #22988 (Also in 7.2, 8, 9)
Fixed an issue with navigator.languages and Accept-Language did not fully respect users' language preferences on Windows and macOS. This also improved fallback font selection for CJK texts on Windows. #23247 (Also in 7.2, 8, 9)
Fixed an issue with safeDialog preferences not being passed properly. #22353 (Also in 8)
Fixed an issue with click events not being emitted on macOS for Trays with context menus set. #24235 (Also in 8, 9)
Fixed an issue with possible creation of a messageBox which cannot be dismissed on macOS. #22672 (Also in 7.2, 8, 9)
Fixed an issue with volume-related globalShortcut registration. #23823 (Also in 8, 9)
Fixed an occasional crash when closing all BrowserWindows. #22948 (Also in 7.2, 8, 9)
Fixed an occasional menu crash on macOS Catalina when menu is closing. #23806 (Also in 8, 9)
Fixed an occasional segfault with modal windows being closed or destroyed. #22410 (Also in 8, 9)
Fixed broken --trace-sync-io flag in Node.js. #24544 (Also in 8, 9)
Fixed broken use of contextCodeGeneration parameter to Node.js'  script.runInNewContext(). #23129 (Also in 8, 9)
Fixed bug on macOS where the main window could be targeted for a focus event when it was disabled behind a modal. #24352 (Also in 8, 9)
Fixed bug that occurred when using trafficLightPosition API in RTL mode. #22132 (Also in 8, 9)
Fixed clipboard.readBuffer returning incorrect value. #24467 (Also in 8, 9)
Fixed crash in network service process when using protocol.registerSchemeAsPrivileged api. #22867 (Also in 9)
Fixed crash that could occur when calling session.fromPartition inside the ready event. #22772 (Also in 9)
Fixed crash when navigating between origins in a child window with nativeWindowOpen and contextIsolation enabled. #23896 (Also in 8, 9)
Fixed crash when navigating from a page with webview that has inherited zoom level. #24763 (Also in 8, 9)
Fixed crash with webview during some window management events like resize, scroll etc. #23342 (Also in 7.2, 8, 9)
Fixed crash-on-exit that could happen during node platform deinitialization. #23116 
Fixed delayed execution of some Node.js callbacks in the main process. #24174 (Also in 8, 9)
Fixed disabling color correct rendering with --disable-color-correct-rendering. #23899 (Also in 8, 9)
Fixed flash plugin not working. #22072 (Also in 8, 9)
Fixed inactive windows having active titlebar on Windows. #24874 (Also in 8, 9)
Fixed incorrect hit testing on top of ::after element with layoutNG. #23179 (Also in 9)
Fixed issue where SameSite cookies would not be attached to outgoing requests from the net module. #22788 
Fixed issue where prefers-color-scheme would not be updated / set correctly when your OS was in dark mode. #22896 (Also in 8, 9)
Fixed issue where dictionary files for the spellchecker would be downloaded to the app install directory instead of the user data directory. #22444 (Also in 8, 9)
Fixed issue where mutating the global Object prototype could cause internal Electron logic to throw errors. #22616 (Also in 8, 9)
Fixed issue where navigating with the mouse buttons 4/5 would result in full page loads instead of in-page popstate navigations. #22202 (Also in 8, 9)
Fixed issue where renderers could crash during GC when using the contextBridge module. #22056 (Also in 8, 9)
Fixed issue where repositioned traffic lights would be in the wrong position after the user switches OS theme. #22534 (Also in 8, 9)
Fixed issued where voice over would not read words as you typed them. #24838 
Fixed memory leak when using contextBridge with sandbox=true. #23207 (Also in 7.2, 8, 9)
Fixed memory leaks in sandbox mode when using contextBridge with promises or ipcRenderer.invoke. #23321 (Also in 8, 9)
Fixed missing guid parameter in Linux crash reports. #24897 (Also in 9)
Fixed missing debug symbols for crashpad handler on macOS. #23537 (Also in 9)
Fixed no session in webContents of type remote. #24064 (Also in 9)
Fixed occasional WebFrame crashes caused by removed iframes. #22925 (Also in 8, 9)
Fixed possible freeze on window with disabled background throttling. #22832 (Also in 9)
Fixed potentially invalid duplex mode settings on Linux. #24527 (Also in 9)
Fixed several memory leaks related to V8 handles not being properly scoped. #22531 
Fixed some Wasm and diagnostics issues in main and renderer process execution of Node.js. #23261 
Fixed some event listener crashes in Tray. #23140 
Fixed some properties not working in webview tags. #22485 (Also in 8, 9)
Fixed the JavaScript object of BrowserWindow not garbage collected when window is closed. #22006 
Fixed the acceptLanguages argument being ignored in session.setUserAgent(). #23961 (Also in 7.3, 8, 9)
Fixed the print button functionality in the PDF viewer extension. #22760 (Also in 9)
Fixed tray menu on Windows not keyboard navigable. #23879 (Also in 8, 9)
Fixed tray menu showing in taskbar on Windows. #24192 (Also in 8, 9)
Fixed window titlebar not responding to pen on Windows 10. #24102 (Also in 7.3, 8, 9)
Fixed: On some Windows machines, especially Windows Insider builds, Electron would crash silently during startup. #24038 (Also in 9)
Increased maximum length for crash keys from 127B to 20KB. #24853 (Also in 9)
Limited manipulation of custom spellchecker dictionary words to persistent sessions. #22157 (Also in 9)
MacOS VoiceOver is now able to find its way back into web contents after it navigated ""out"" of an application. #22399 (Also in 7.2, 8, 9)
Protocol response streams are now destroyed if the request is aborted. #24656 (Also in 9)
Removed assurance of object identity equality from the contextBridge as it is incapable of handling mutations. #21803 (Also in 8, 9)
Removed extraneous crashpad_handler binary from the Linux distribution files. #23538 (Also in 9)
Removed unneccessary  breakpad_symbols directory from the dsym zip file. #22191 (Also in 6.1, 8, 9)
Restored old implementation of Linux Tray icons to fix a collection of issues where the tray icon wouldn't appear, would be the wrong size or would randomly disappear. #23925 (Also in 8, 9)
Returns a more graceful error when adding duplicate items to a single TouchBar instance. #22272 (Also in 8, 9)
Reverted a change to the name of the NSPrincipalClass, which could cause issues with protocol handlers on macOS (e.g. my-app://). #22206 (Also in 8, 9)
Save crash reports locally when uploadToServer: false on linux. #24787 (Also in 9)
The element highlighter in devtools works again. #24929 
Updated Node root certs to use NSS 3.53. #24266 
Updating the document title while in fullscreen with custom traffic light positions no longer makes the traffic lights invisible. #22492 (Also in 8, 9)
[a11y] fix an issue where voiceover doesn't read the first item selected from a ARIA combobox. #25003 (Also in 9)
crashReporter is now explicitly initialized only in the main process, and implicitly initialized in other child processes. This fixes an issue preventing the crash reporter from functioning in sandboxed renderers on Linux. #23265 (Also in 9)
Fixed broken Views API builds. #22621 (Also in 9)
Fixed feature string parsing type coercion for window.open. #23130 
Fixed issues where objects sent over the context bridge could be freed prematurely resulting in crashes when accessing them. #23592 (Also in 8, 9)
Fixed mac app store rejection notice for invalid symbolic link in bundle. #24166 (Also in 9)
Fixed v8_context_snapshot_generator included in arm/arm64 mksnapshot zip files. #23536 (Also in 6.1, 7.2, 8, 9)
Resolve network issues that prevented RTC calls from being connected due to network IP address changes and ICE. (Chromium issue 1113227). #24998 

Performance

Fixed performance regression with CSS counters. #25023 
Fix: remove unnecessary corner mask overriding to increase window resize performance. #24701 (Also in 9)
Improved the performance of sending JS primitives over the context bridge. #24551 (Also in 9)
Improved window events handler efficiency on Linux. #22706 (Also in 9)
Made setting window icons slightly faster on Linux. #22702 (Also in 9)

End of Support for 7.x.y
Electron 7.x.y has reached end-of-support as per the project's support policy. Developers and applications are encouraged to upgrade to a newer version of Electron.","Release Notes for v10.0.0
Stack Upgrades
Chromium 85.0.4183.84
v85 blog post
v84 blog post
Node v12.16.3
v12.16.3 release notes
v12.16.2 release notes
v12.16.1 release notes
v12.16.0 release notes
v12.15.0 release notes
v12.14.1 release notes
V8 v8.5
v8.5 blog post
v8.4 blog post
Breaking Changes
Changed the default value of 'enableRemoteModule' to false. #22091 
Changed the default value of app.allowRendererProcessReuse to true, this will prevent loading of non-context-aware native modules in renderer processes.  See #18397 for more information on this change. #22336
Fixed the positioning of window buttons on MacOS when the OS locale is set to an RTL language (like Arabic or Hebrew). Frameless window apps may have to account for this change while styling their windows. #22016 
Features
Added contents.getBackgroundThrottling() method and contents.backgroundThrottling property. #21036
Added a sameSite property to the Cookie structure allowing you to get and set the same site policy for cookies. #22789
Added new render-process-gone event on app to replace the renderer-process-crashed event. #23560 
Added new render-process-gone event to replace the crashed event. #23096
Added new useSessionCookies flag to net requests to allow them to use the session cookie store. #22704
Added support for MessagePort in the main process. #22404
Added support for the 'compress' option of crashReporter on Linux. #23597 
Added the 'onclose' event to MessagePort and MessagePortMain. #22532 
Added the ability to get the ""Recent"" folder on Windows with app.getPath('recent'). #23381
BrowserWindow darkTheme option now defaults to nativeTheme.shouldUseDarkColors. #20138 
Can now check if a given session is persistent by calling the ses.isPersistent() API. #22622 
Deprecated uncompressed crash uploads in crashReporter. #23598 
Enable native Electron handling and passing of Node.js cli options. #21110
Enhanced window.open functionality with the ability to handle POST data in the new-window event. #19703 
Exposed the desktopCapturer module in the main process. #23548 
The position of nested touch bars inherited from Chromium can now be customized (macOS). #22270 
Added V8 crash message and location information to crashReport parameters. #24866
Removed the deprecated currentlyLoggingPath property of netLog. Additionally, netLog.stopLogging no longer returns the path to the recorded log. #22732 
Added disableDialogs option to WebPreferences. #22395 (Also in 8, 9)
Added fullScreen property support for BrowserWindows. #23145 (Also in 9)
Added rateLimit and compress options to crashReporter. #23062 
Added session.listWordsFromSpellCheckerDictionary API to list custom words in the dictionary. #22101 (Also in 9)
Added session.removeWordFromSpellCheckerDictionary API to remove custom words in the dictionary. #22039 (Also in 9)
Added session.serviceWorkerContext API to access basic service worker info and receive console logs from service workers. #20624 (Also in 9)
Added a new force parameter to app.focus() on macOS to allow apps to forcefully take focus. #22612 (Also in 8, 9)
Added ability to set and get title bar traffic light position on the fly (macOS). #22533 (Also in 8, 9)
Added new spellcheck-dictionary- events on the session module to help track and debug dictionary initialization. #22449 (Also in 8, 9)
Added new worldSafeExecuteJavaScript webPreference to ensure that the return values from webFrame.executeJavaScript are world safe when context isolation is enabled. #24711 (Also in 9)
Added support for property access to some getter/setter pairs on BrowserWindow. #22771 (Also in 9)
Added support for suspend and resume events to Windows. #24281 (Also in 8, 9)
Added support for suspend and resume events to macOS. #24293 (Also in 8, 9) 
Allow an optional callback parameter for WebFrame.executeJavaScript methods, which is called synchronously unless the target context is paused. #21423 (Also in 9)
EnableWebSQL is a new webpreference option to enable/disable websql api. #23311 (Also in 7.2, 8, 9)
Expose sessionId associated with a target from debugger module. #24397 (Also in 8, 9)
Implemented systemPreferences.getMediaAccessStatus() on Windows. #24311 (Also in 8, 9)
Restored support for pdfium-based PDF viewer. #21794 (Also in 9)
V8CacheOptions is a new webpreference option to enforce code caching policy. #23867 (Also in 8, 9)
Ensured proper nativeImage serialization between renderer and browser processes via remote. #23794 (Also in 7.3, 8, 9)
Improved error logging on moveItemToTrash failures on macOS. #23589 (Also in 8, 9)
Fixes
Fixed BrowserWindow.moveAbove on Windows. #23161 
Fixed WebContents.focus not focusing window on macOS and Linux. #22323
Fixed a crash that could happen when a warning was emitted when loading an extension. #23667 
Fixed a crash when closing GTK file open/save dialogs. #23109 
Fixed a crash when using . #22843 
Fixed a potential crash when menu is created from an empty template. #23308 
Fixed an issue that could cause exceptions in the 'remote' module when accessing objects without constructors. #22820 
Fixed an issue where startDrag could crash if some specific strings were passed into nativeImage.createFromImage to create the icon. #23467 
Fixed an issue where diagnostic error reporting wasn't available in Node.js processes. #23126 
Fixed an issue where undo and redo shortcuts did not work in webviews. #22911 
Fixed crash when using client certificate. #25019 
Fixed issues with CORS when making requests from extensions. #24822 (Also in 9)
Fixed loading shared worker scripts over custom protocol * fix crash when loading worker scripts with nodeIntegration enabled. #24749 (Also in 9)
Accessing the screen module before the ready event no longer makes it impossible to access the screen module. #22895 (Also in 8, 9)
Added missing support for isComposing KeyboardEvent property. #23995 (Also in 8, 9)
Added workaround for nativeWindowOpen hang. #22825 (Also in 8, 9)
DeviceId from navigator.mediaDevices.enumerateDevices is now consistent across reloads. #22386 (Also in 8, 9)
Don't allow window to go behind menu bar on mac. #22770 (Also in 9)
Don't ignore the referrer header in net.request. #23386 (Also in 8, 9)
Enable NTLM v2 for POSIX platforms and added --disable-ntlm-v2 switch to disable it. #23916 (Also in 7.3, 8, 9)
Enable offscreen rendering. #22160 (Also in 8, 9)
Ensured that exit callbacks are run for Node.js in the renderer process. #23419 (Also in 7.2, 8, 9)
Fix: Allow windows behind macOS elements if ""frame"" is false. #24032 (Also in 9)
Fixed ""Paste and Match Style"" shortcut on macOS to match OS's ""Option-Shift-Command-V"". #24182 (Also in 8, 9)
Fixed ""null path-to-app"" in test-app when Electron's path contains spaces or special characters. #24230 (Also in 8, 9)
Fixed ""will-navigate"" event not being emitted for sandboxed contents. #22188 (Also in 8, 9)
Fixed ARIA role=""tree"" for macOS VoiceOver. #22367 (Also in 8, 9)
Fixed Electron apps getting rejected to Mac App Store. #20965 (Also in 6.1, 8, 9)
Fixed GTK dark theme setting not respected in Electron on Linux. #23711 (Also in 7.3, 8, 9)
Fixed Promise timeout issue when running Electron as Node. #23153 (Also in 7.2, 9) 
Fixed chrome://media-internals and chrome://webrtc-internals pages not loading. #24057 (Also in 8, 9)
Fixed process.windowsStore returning undefined in AppX packages. #23798 (Also in 7.3, 8, 9)
Fixed session.setSpellCheckerDictionaryDownloadURL to append the dictionary name at the end of requests instead of requesting the same URL for all dictionaries. #22382 (Also in 8, 9)
Fixed webRequest API not working with WebSockets. #22040 (Also in 8, 9)
Fixed webRequest module not working with file:// protocol. #22903 (Also in 9)
Fixed webRequest not working for CORS requests. #22407 (Also in 9)
Fixed win.setMenuBarVisibility(false) not hiding menu bar. #23214 (Also in 9)
Fixed a bezeling issue on vibrant non-frameless BrowserWindows. #23809 (Also in 9)
Fixed a crash in TouchBar for certain methods. #23970 
Fixed a crash in webContents.print() with custom print margins. #22164 (Also in 8, 9)
Fixed a crash that could happen when attempting to access a session during shutdown. #23039 (Also in 8, 9)
Fixed a crash that could happen when using hookWindowMessage on Windows. #24768 (Also in 9)
Fixed a crash that could occur when sending arrays over IPC. #22753 (Also in 8, 9)
Fixed a crash that could occur when using in-memory sessions. #25001 (Also in 9)
Fixed a crash that could occur when using the ipcRenderer module after blink had released the context. Instead, a JS exception will be thrown. #23977 (Also in 8, 9)
Fixed a crash which could occur during page navigations. #23271 (Also in 8, 9)
Fixed a potential crash on devices which had not connected any printers to their network. #22418 (Also in 8, 9)
Fixed a potential crash on invalid zoomFactor values when setting the zoom factor of a webpage. #22673 (Also in 7.2, 8, 9)
Fixed a termination crash on Web Workers with Node.js integration enabled. #24462 (Also in 8, 9)
Fixed a use-after-free error that could happen if a Tray was destroyed while showing a custom context menu. #22842 (Also in 7.2, 8, 9)
Fixed an error when calling dialog.showCertificateTrustDialog with no BrowserWindow. #24118 (Also in 7.3, 8, 9)
Fixed an intermittent high-CPU usage problem caused a system clock issue during sleep. #24413 (Also in 8, 9)
Fixed an issue where TypeError occurred on initializing CrashReporter. #22274 (Also in 8, 9)
Fixed an issue where VoiceOver was unable to navigate from the top-level window back into the web contents. #24698 (Also in 9)
Fixed an issue where nativeImages might throw conversion errors in the renderer process. #23543 (Also in 7.3, 8, 9)
Fixed an issue where rmdir and rmdirSync work with original-fs in an asar context. #23951 (Also in 8, 9)
Fixed an issue where shutdown would be emitted both on app and system shutdown on macOS. #24139 (Also in 8, 9)
Fixed an issue where undefined was printed from console.log on Window when no arguments were passed. #22165 (Also in 8, 9)
Fixed an issue where webContents.print() would sometimes hang with invalid settings. #24507 (Also in 9)
Fixed an issue where window.location properties would throw an error for windows opened with window.open. #23804 (Also in 8, 9)
Fixed an issue where withFileTypes was not supported as an option to fs.readdir or fs.readdirSync under asar. #24106 (Also in 8, 9)
Fixed an issue where changing theme on macOS would break window maximizability state. #22677 (Also in 9)
Fixed an issue where cpu and heap profiling in Node.js did not work properly with --cpu-prof, --heap-prof, and related CLI flags. #24540 (Also in 8, 9)
Fixed an issue where frameless modal windows with a vibrancy setting had bezeled corners. #24284 (Also in 9)
Fixed an issue where macOS window vibrancy active state did not always match the active state of the window. #24532 (Also in 8, 9)
Fixed an issue where native macOS dialogs sometimes failed to show after modal close. #22858 (Also in 8, 9)
Fixed an issue where some Node.js methods would not work with URL instances constructed in the renderer process. #24860 (Also in 8, 9)
Fixed an issue where some logging would double-print. #22342 (Also in 8, 9)
Fixed an issue where some old notifications were not properly removed from the Notification Center on macOS. #24404 (Also in 8, 9)
Fixed an issue where suspend/resume were emitted twice on macOS. #24843 (Also in 8, 9)
Fixed an issue where the 'about' role had on effect on Windows menus. #23717 (Also in 7.3, 8, 9)
Fixed an issue where the Save button did not function in PDF previews. #24995 (Also in 9)
Fixed an issue whereby macOS would fail to allow file extensions containing periods. #23409 (Also in 7.2, 8, 9)
Fixed an issue which would cause streaming protocol responses to stall in some cases. #24081 (Also in 8, 9)
Fixed an issue with maximizable state persistence of BrowserWindows on macOS. #22988 (Also in 7.2, 8, 9)
Fixed an issue with navigator.languages and Accept-Language did not fully respect users' language preferences on Windows and macOS. This also improved fallback font selection for CJK texts on Windows. #23247 (Also in 7.2, 8, 9)
Fixed an issue with safeDialog preferences not being passed properly. #22353 (Also in 8)
Fixed an issue with click events not being emitted on macOS for Trays with context menus set. #24235 (Also in 8, 9)
Fixed an issue with possible creation of a messageBox which cannot be dismissed on macOS. #22672 (Also in 7.2, 8, 9)
Fixed an issue with volume-related globalShortcut registration. #23823 (Also in 8, 9)
Fixed an occasional crash when closing all BrowserWindows. #22948 (Also in 7.2, 8, 9)
Fixed an occasional menu crash on macOS Catalina when menu is closing. #23806 (Also in 8, 9)
Fixed an occasional segfault with modal windows being closed or destroyed. #22410 (Also in 8, 9)
Fixed broken --trace-sync-io flag in Node.js. #24544 (Also in 8, 9)
Fixed broken use of contextCodeGeneration parameter to Node.js'  script.runInNewContext(). #23129 (Also in 8, 9)
Fixed bug on macOS where the main window could be targeted for a focus event when it was disabled behind a modal. #24352 (Also in 8, 9)
Fixed bug that occurred when using trafficLightPosition API in RTL mode. #22132 (Also in 8, 9)
Fixed clipboard.readBuffer returning incorrect value. #24467 (Also in 8, 9)
Fixed crash in network service process when using protocol.registerSchemeAsPrivileged api. #22867 (Also in 9)
Fixed crash that could occur when calling session.fromPartition inside the ready event. #22772 (Also in 9)
Fixed crash when navigating between origins in a child window with nativeWindowOpen and contextIsolation enabled. #23896 (Also in 8, 9)
Fixed crash when navigating from a page with webview that has inherited zoom level. #24763 (Also in 8, 9)
Fixed crash with webview during some window management events like resize, scroll etc. #23342 (Also in 7.2, 8, 9)
Fixed crash-on-exit that could happen during node platform deinitialization. #23116 
Fixed delayed execution of some Node.js callbacks in the main process. #24174 (Also in 8, 9)
Fixed disabling color correct rendering with --disable-color-correct-rendering. #23899 (Also in 8, 9)
Fixed flash plugin not working. #22072 (Also in 8, 9)
Fixed inactive windows having active titlebar on Windows. #24874 (Also in 8, 9)
Fixed incorrect hit testing on top of ::after element with layoutNG. #23179 (Also in 9)
Fixed issue where SameSite cookies would not be attached to outgoing requests from the net module. #22788 
Fixed issue where prefers-color-scheme would not be updated / set correctly when your OS was in dark mode. #22896 (Also in 8, 9)
Fixed issue where dictionary files for the spellchecker would be downloaded to the app install directory instead of the user data directory. #22444 (Also in 8, 9)
Fixed issue where mutating the global Object prototype could cause internal Electron logic to throw errors. #22616 (Also in 8, 9)
Fixed issue where navigating with the mouse buttons 4/5 would result in full page loads instead of in-page popstate navigations. #22202 (Also in 8, 9)
Fixed issue where renderers could crash during GC when using the contextBridge module. #22056 (Also in 8, 9)
Fixed issue where repositioned traffic lights would be in the wrong position after the user switches OS theme. #22534 (Also in 8, 9)
Fixed issued where voice over would not read words as you typed them. #24838 
Fixed memory leak when using contextBridge with sandbox=true. #23207 (Also in 7.2, 8, 9)
Fixed memory leaks in sandbox mode when using contextBridge with promises or ipcRenderer.invoke. #23321 (Also in 8, 9)
Fixed missing guid parameter in Linux crash reports. #24897 (Also in 9)
Fixed missing debug symbols for crashpad handler on macOS. #23537 (Also in 9)
Fixed no session in webContents of type remote. #24064 (Also in 9)
Fixed occasional WebFrame crashes caused by removed iframes. #22925 (Also in 8, 9)
Fixed possible freeze on window with disabled background throttling. #22832 (Also in 9)
Fixed potentially invalid duplex mode settings on Linux. #24527 (Also in 9)
Fixed several memory leaks related to V8 handles not being properly scoped. #22531 
Fixed some Wasm and diagnostics issues in main and renderer process execution of Node.js. #23261 
Fixed some event listener crashes in Tray. #23140 
Fixed some properties not working in webview tags. #22485 (Also in 8, 9)
Fixed the JavaScript object of BrowserWindow not garbage collected when window is closed. #22006 
Fixed the acceptLanguages argument being ignored in session.setUserAgent(). #23961 (Also in 7.3, 8, 9)
Fixed the print button functionality in the PDF viewer extension. #22760 (Also in 9)
Fixed tray menu on Windows not keyboard navigable. #23879 (Also in 8, 9)
Fixed tray menu showing in taskbar on Windows. #24192 (Also in 8, 9)
Fixed window titlebar not responding to pen on Windows 10. #24102 (Also in 7.3, 8, 9)
Fixed: On some Windows machines, especially Windows Insider builds, Electron would crash silently during startup. #24038 (Also in 9)
Increased maximum length for crash keys from 127B to 20KB. #24853 (Also in 9)
Limited manipulation of custom spellchecker dictionary words to persistent sessions. #22157 (Also in 9)
MacOS VoiceOver is now able to find its way back into web contents after it navigated ""out"" of an application. #22399 (Also in 7.2, 8, 9)
Protocol response streams are now destroyed if the request is aborted. #24656 (Also in 9)
Removed assurance of object identity equality from the contextBridge as it is incapable of handling mutations. #21803 (Also in 8, 9)
Removed extraneous crashpad_handler binary from the Linux distribution files. #23538 (Also in 9)
Removed unneccessary  breakpad_symbols directory from the dsym zip file. #22191 (Also in 6.1, 8, 9)
Restored old implementation of Linux Tray icons to fix a collection of issues where the tray icon wouldn't appear, would be the wrong size or would randomly disappear. #23925 (Also in 8, 9)
Returns a more graceful error when adding duplicate items to a single TouchBar instance. #22272 (Also in 8, 9)
Reverted a change to the name of the NSPrincipalClass, which could cause issues with protocol handlers on macOS (e.g. my-app://). #22206 (Also in 8, 9)
Save crash reports locally when uploadToServer: false on linux. #24787 (Also in 9)
The element highlighter in devtools works again. #24929 
Updated Node root certs to use NSS 3.53. #24266 
Updating the document title while in fullscreen with custom traffic light positions no longer makes the traffic lights invisible. #22492 (Also in 8, 9)
[a11y] fix an issue where voiceover doesn't read the first item selected from a ARIA combobox. #25003 (Also in 9)
crashReporter is now explicitly initialized only in the main process, and implicitly initialized in other child processes. This fixes an issue preventing the crash reporter from functioning in sandboxed renderers on Linux. #23265 (Also in 9)
Fixed broken Views API builds. #22621 (Also in 9)
Fixed feature string parsing type coercion for window.open. #23130 
Fixed issues where objects sent over the context bridge could be freed prematurely resulting in crashes when accessing them. #23592 (Also in 8, 9)
Fixed mac app store rejection notice for invalid symbolic link in bundle. #24166 (Also in 9)
Fixed v8_context_snapshot_generator included in arm/arm64 mksnapshot zip files. #23536 (Also in 6.1, 7.2, 8, 9)
Resolve network issues that prevented RTC calls from being connected due to network IP address changes and ICE. (Chromium issue 1113227). #24998 
Performance
Fixed performance regression with CSS counters. #25023 
Fix: remove unnecessary corner mask overriding to increase window resize performance. #24701 (Also in 9)
Improved the performance of sending JS primitives over the context bridge. #24551 (Also in 9)
Improved window events handler efficiency on Linux. #22706 (Also in 9)
Made setting window icons slightly faster on Linux. #22702 (Also in 9)
End of Support for 7.x.y
Electron 7.x.y has reached end-of-support as per the project's support policy. Developers and applications are encouraged to upgrade to a newer version of Electron."
614,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@10.0.0-beta.25.
# Release Notes for v10.0.0-beta.25
Fixes

Fixed a 10.0.0-beta.1 issue that broke dark mode window titlebars on Linux. #25056
Fixed broken toolbar hover text in the PDF viewer. #25047
Fixed crash that could occur when passing a non-absolute path to session.loadExtension. #25074
Fixed node's TLS stack not allowing renegotiation. #25040

Other Changes

Updated Chromium to 85.0.4183.80. #25063

Unknown

Fixed not working WebSQLDatabase in extension background pages. #25071
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@10.0.0-beta.25.
Release Notes for v10.0.0-beta.25
Fixes
Fixed a 10.0.0-beta.1 issue that broke dark mode window titlebars on Linux. #25056
Fixed broken toolbar hover text in the PDF viewer. #25047
Fixed crash that could occur when passing a non-absolute path to session.loadExtension. #25074
Fixed node's TLS stack not allowing renegotiation. #25040
Other Changes
Updated Chromium to 85.0.4183.80. #25063
Unknown
Fixed not working WebSQLDatabase in extension background pages. #25071"
615,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@10.0.0-beta.24.
# Release Notes for v10.0.0-beta.24
Fixes

Fixed a crash that could occur when using in-memory sessions. #25001
Fixed an issue where the Save button did not function in PDF previews. #24995
Fixed crash when using client certificate. #25019
Fixed frameless window's size being changed when restored from minimized state. #25044
Fixed performance regression with CSS counters. #25023
[a11y] fix an issue where voiceover doesn't read the first item selected from a ARIA combobox. #25003

Other Changes

Resolve network issues that prevented RTC calls from being connected due to network IP address changes and ICE. (Chromium issue 1113227). #24998
Updated Chromium to 85.0.4183.78. #25016
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@10.0.0-beta.24.
Release Notes for v10.0.0-beta.24
Fixes
Fixed a crash that could occur when using in-memory sessions. #25001
Fixed an issue where the Save button did not function in PDF previews. #24995
Fixed crash when using client certificate. #25019
Fixed frameless window's size being changed when restored from minimized state. #25044
Fixed performance regression with CSS counters. #25023
[a11y] fix an issue where voiceover doesn't read the first item selected from a ARIA combobox. #25003
Other Changes
Resolve network issues that prevented RTC calls from being connected due to network IP address changes and ICE. (Chromium issue 1113227). #24998
Updated Chromium to 85.0.4183.78. #25016"
616,"Release Notes for v9.2.1
Fixes

fix loading shared worker scripts over custom protocol
fix crash when loading worker scripts with nodeIntegration enabled. #24750
Fixed a crash that could occur when using in-memory sessions. #25002
Fixed an issue where some Node.js methods would not work with URL instances constructed in the renderer process. #24862
Fixed an issue where the Save button did not function in PDF previews. #24996
Fixed inactive windows having active titlebar on Windows. #24873
Fixed missing guid parameter in Linux crash reports. #24898
Increased maximum length for crash keys from 127B to 20KB. #24854
[a11y] fix an issue where voiceover doesn't read the first item selected from a ARIA combobox. #25004

Other Changes

Backported the fix to CVE-2020-6532: Use after free in SCTP. #24887
Backported the fix to CVE-2020-6537: Type Confusion in V8. #24885
Resolve network issues that prevented RTC calls from being connected due to network IP address changes and ICE. (Chromium issue 1113227). #24997

Unknown

Fixed issues with CORS when making requests from extensions. #24915
","Release Notes for v9.2.1
Fixes
fix loading shared worker scripts over custom protocol
fix crash when loading worker scripts with nodeIntegration enabled. #24750
Fixed a crash that could occur when using in-memory sessions. #25002
Fixed an issue where some Node.js methods would not work with URL instances constructed in the renderer process. #24862
Fixed an issue where the Save button did not function in PDF previews. #24996
Fixed inactive windows having active titlebar on Windows. #24873
Fixed missing guid parameter in Linux crash reports. #24898
Increased maximum length for crash keys from 127B to 20KB. #24854
[a11y] fix an issue where voiceover doesn't read the first item selected from a ARIA combobox. #25004
Other Changes
Backported the fix to CVE-2020-6532: Use after free in SCTP. #24887
Backported the fix to CVE-2020-6537: Type Confusion in V8. #24885
Resolve network issues that prevented RTC calls from being connected due to network IP address changes and ICE. (Chromium issue 1113227). #24997
Unknown
Fixed issues with CORS when making requests from extensions. #24915"
617,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@10.0.0-beta.23.
# Release Notes for v10.0.0-beta.23
Fixes

The element highlighter in devtools works again

Other Changes

Updated Chromium to 85.0.4183.70. #24953
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@10.0.0-beta.23.
Release Notes for v10.0.0-beta.23
Fixes
The element highlighter in devtools works again
Other Changes
Updated Chromium to 85.0.4183.70. #24953"
618,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@10.0.0-beta.21.
# Release Notes for v10.0.0-beta.21
Fixes

Fixed issued where voice over would not read words as you typed them. #24838
Fixed missing guid parameter in Linux crash reports. #24897
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@10.0.0-beta.21.
Release Notes for v10.0.0-beta.21
Fixes
Fixed issued where voice over would not read words as you typed them. #24838
Fixed missing guid parameter in Linux crash reports. #24897"
619,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@10.0.0-beta.20.
# Release Notes for v10.0.0-beta.20
Fixes



fix loading shared worker scripts over custom protocol


fix crash when loading worker scripts with nodeIntegration enabled. #24749
Fixed an issue where some Node.js methods would not work with URL instances constructed in the renderer process. #24860
Fixed an issue where suspend/resume were emitted twice on macOS. #24843
Fixed inactive windows having active titlebar on Windows. #24874
Increased maximum length for crash keys from 127B to 20KB. #24853

Other Changes

Added V8 crash message and location information to crashReport parameters. #24866
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@10.0.0-beta.20.
Release Notes for v10.0.0-beta.20
Fixes
fix loading shared worker scripts over custom protocol
fix crash when loading worker scripts with nodeIntegration enabled. #24749
Fixed an issue where some Node.js methods would not work with URL instances constructed in the renderer process. #24860
Fixed an issue where suspend/resume were emitted twice on macOS. #24843
Fixed inactive windows having active titlebar on Windows. #24874
Increased maximum length for crash keys from 127B to 20KB. #24853
Other Changes
Added V8 crash message and location information to crashReport parameters. #24866"
620,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@10.0.0-beta.19.
# Release Notes for v10.0.0-beta.19","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@10.0.0-beta.19.
Release Notes for v10.0.0-beta.19"
621,"Release Notes for v9.2.0
Features

Added new worldSafeExecuteJavaScript webPreference to ensure that the return values from webFrame.executeJavaScript are world safe when context isolation is enabled. #24712 (Also in 10)

Fixes

Fixed a crash that could happen when using hookWindowMessage on Windows. #24769 (Also in 10)
Fixed an issue where suspend/resume were emitted twice on macOS. #24845 (Also in 8, 10)
Fixed crash when navigating from a page with webview that has inherited zoom level. #24764 (Also in 8, 10)
Save crash reports locally when uploadToServer: false on linux. #24788 (Also in 10)
Fixed an a11y regression where children reported an index in parent greater than the parent child count. #24765 
","Release Notes for v9.2.0
Features
Added new worldSafeExecuteJavaScript webPreference to ensure that the return values from webFrame.executeJavaScript are world safe when context isolation is enabled. #24712 (Also in 10)
Fixes
Fixed a crash that could happen when using hookWindowMessage on Windows. #24769 (Also in 10)
Fixed an issue where suspend/resume were emitted twice on macOS. #24845 (Also in 8, 10)
Fixed crash when navigating from a page with webview that has inherited zoom level. #24764 (Also in 8, 10)
Save crash reports locally when uploadToServer: false on linux. #24788 (Also in 10)
Fixed an a11y regression where children reported an index in parent greater than the parent child count. #24765 "
622,"Release Notes for v8.5.0
Fixes

Fixed an issue where suspend/resume were emitted twice on macOS. #24844
Fixed crash when navigating from a page with webview that has inherited zoom level. #24766
","Release Notes for v8.5.0
Fixes
Fixed an issue where suspend/resume were emitted twice on macOS. #24844
Fixed crash when navigating from a page with webview that has inherited zoom level. #24766"
623,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@10.0.0-beta.17.
# Release Notes for v10.0.0-beta.17","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@10.0.0-beta.17.
Release Notes for v10.0.0-beta.17"
624,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@10.0.0-beta.15.
# Release Notes for v10.0.0-beta.15
Fixes

Fixed a crash that could happen when using hookWindowMessage on Windows. #24768
Fixed crash when navigating from a page with webview that has inherited zoom level. #24763
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@10.0.0-beta.15.
Release Notes for v10.0.0-beta.15
Fixes
Fixed a crash that could happen when using hookWindowMessage on Windows. #24768
Fixed crash when navigating from a page with webview that has inherited zoom level. #24763"
625,"Release Notes for v9.1.2
Fixes

Fix: remove unnecessary corner mask overriding to increase window resize performance. #24702
Fixed an issue where VoiceOver was unable to navigate from the top-level window back into the web contents. #24699
Protocol response streams are now destroyed if the request is aborted. #24657

Other Changes

Improved the performance of sending JS primitives over the context bridge. #24746
","Release Notes for v9.1.2
Fixes
Fix: remove unnecessary corner mask overriding to increase window resize performance. #24702
Fixed an issue where VoiceOver was unable to navigate from the top-level window back into the web contents. #24699
Protocol response streams are now destroyed if the request is aborted. #24657
Other Changes
Improved the performance of sending JS primitives over the context bridge. #24746"
626,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@10.0.0-beta.14.
# Release Notes for v10.0.0-beta.14
Fixes

Fixed an issue where VoiceOver was unable to navigate from the top-level window back into the web contents. #24698
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@10.0.0-beta.14.
Release Notes for v10.0.0-beta.14
Fixes
Fixed an issue where VoiceOver was unable to navigate from the top-level window back into the web contents. #24698"
627,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@10.0.0-beta.13.
# Release Notes for v10.0.0-beta.13
Fixes

Fix: remove unnecessary corner mask overriding to increase window resize performance. #24701
Protocol response streams are now destroyed if the request is aborted. #24656

Other Changes

Updated Chromium to 85.0.4183.39. #24663
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@10.0.0-beta.13.
Release Notes for v10.0.0-beta.13
Fixes
Fix: remove unnecessary corner mask overriding to increase window resize performance. #24701
Protocol response streams are now destroyed if the request is aborted. #24656
Other Changes
Updated Chromium to 85.0.4183.39. #24663"
628,"Release Notes for v8.4.1
Fixes

Fix: DCHECK failure in value.IsHeapObject() in objectsdebug.cc. (Chromium security issue 1084820). #24565
Fix: PDFium Javascript Active Document memory corruption. (Chromium security issue 1091404). #24570
Fix: XSS on chrome://histograms/ with a compromised renderer. (Chromium security issue 1073409). #24626
Fix: heap-use-after-free in content::NavigationRequest::OnWillProcessResponseProcessed. (Chromium security issue 1090543). #24568
Fix: heap-use-after-free in ui::AXTreeSerializerblink (Chromium security issue 1065122). #24556
Fix: integer overflow in GrTextBlob::Make. (Chromium security issue 1080481). #24587
Fix: javascript URI sandbox flags aren't propagated in a blank string case. (Chromium security issue 1074340). #24622
Fix: memcpy-param-overlap in AudioBuffer::copyFromChannel. (Chromium security issue 1081722). #24585
Fix: remove leaks of post-redirect URL for <script>  in the CSP reports and stacktraces of errors (Chromium security issue 1074317). #24559
Fix: update webrtc root certificate. (Chromium security issue 978779). #24618
Fix: use-after-free in devtools console. (Chromium security issue 986051). #24615
Fix: use-of-uninitialized-value in amr_read_header. (Chromium security issue 1065731). #24595
Fix: usrsctp is called with pointer as network address. (Chromium security issue 1076703). #24562
Fixed a termination crash on Web Workers with Node.js integration enabled. #24463
Fixed an issue where cpu and heap profiling in Node.js did not work properly with --cpu-prof, --heap-prof, and related CLI flags. #24542
Fixed an issue where macOS window vibrancy active state did not always match the active state of the window. #24546
Fixed broken --trace-sync-io flag in Node.js. #24649
Fixed clipboard.readBuffer returning incorrect value. #24468
Fixed crash when opening app in remote X server. #24491
Fixed unresponsive window when reloading with breakpoint in devtools. #24490

Documentation

Documentation changes: #24515
","Release Notes for v8.4.1
Fixes
Fix: DCHECK failure in value.IsHeapObject() in objectsdebug.cc. (Chromium security issue 1084820). #24565
Fix: PDFium Javascript Active Document memory corruption. (Chromium security issue 1091404). #24570
Fix: XSS on chrome://histograms/ with a compromised renderer. (Chromium security issue 1073409). #24626
Fix: heap-use-after-free in content::NavigationRequest::OnWillProcessResponseProcessed. (Chromium security issue 1090543). #24568
Fix: heap-use-after-free in ui::AXTreeSerializerblink (Chromium security issue 1065122). #24556
Fix: integer overflow in GrTextBlob::Make. (Chromium security issue 1080481). #24587
Fix: javascript URI sandbox flags aren't propagated in a blank string case. (Chromium security issue 1074340). #24622
Fix: memcpy-param-overlap in AudioBuffer::copyFromChannel. (Chromium security issue 1081722). #24585
Fix: remove leaks of post-redirect URL for "
629,"Release Notes for v9.1.1
Fixes

Fixed a termination crash on Web Workers with Node.js integration enabled. #24464
Fixed an issue where webContents.print() would sometimes hang with invalid settings. #24508
Fixed an issue where cpu and heap profiling in Node.js did not work properly with --cpu-prof, --heap-prof, and related CLI flags. #24541
Fixed an issue where macOS window vibrancy active state did not always match the active state of the window. #24533
Fixed broken --trace-sync-io flag in Node.js. #24648
Fixed clipboard.readBuffer returning incorrect value. #24469
Fixed potentially invalid duplex mode settings on Linux. #24547

Other Changes

Fix: DCHECK failure in value.IsHeapObject() in objectsdebug.cc. (Chromium security issue 1084820). #24566
Fix: XSS on chrome://histograms/ with a compromised renderer. (Chromium security issue 1073409). #24625
Fix: crash when executing debugger.sendCommand. (Chromium security issue 1016278). #24620
Fix: heap-use-after-free in content::NavigationRequest::OnWillProcessResponseProcessed. (Chromium security issue 1090543). #24569
Fix: heap-use-after-free in ui::AXTreeSerializerblink (Chromium security issue 1065122). #24557
Fix: iframe in victim page can detect Scroll To Text Fragment activation. (Chromium security issue 1042986). #24624
Fix: integer overflow in GrTextBlob::Make. (Chromium security issue 1080481). #24586
Fix: javascript URI sandbox flags aren't propagated in a blank string case. (Chromium security issue 1074340). #24621
Fix: memcpy-param-overlap in AudioBuffer::copyFromChannel. (Chromium security issue 1081722). #24582
Fix: remove leaks of post-redirect URL for <script>  in the CSP reports and stacktraces of errors (Chromium security issue 1074317). #24560
Fix: update webrtc root certificate. (Chromium security issue 978779). #24617
Fix: upgrade SQLite to 3.32.1. (Chromium security issue 1087629). #24554
Fix: use-after-free in devtools console. (Chromium security issue 986051). #24614
Fix: use-of-uninitialized-value in amr_read_header. (Chromium security issue 1065731). #24594
Fix: usrsctp is called with pointer as network address. (Chromium security issue 1076703). #24563

Documentation

Documentation changes: #24516
","Release Notes for v9.1.1
Fixes
Fixed a termination crash on Web Workers with Node.js integration enabled. #24464
Fixed an issue where webContents.print() would sometimes hang with invalid settings. #24508
Fixed an issue where cpu and heap profiling in Node.js did not work properly with --cpu-prof, --heap-prof, and related CLI flags. #24541
Fixed an issue where macOS window vibrancy active state did not always match the active state of the window. #24533
Fixed broken --trace-sync-io flag in Node.js. #24648
Fixed clipboard.readBuffer returning incorrect value. #24469
Fixed potentially invalid duplex mode settings on Linux. #24547
Other Changes
Fix: DCHECK failure in value.IsHeapObject() in objectsdebug.cc. (Chromium security issue 1084820). #24566
Fix: XSS on chrome://histograms/ with a compromised renderer. (Chromium security issue 1073409). #24625
Fix: crash when executing debugger.sendCommand. (Chromium security issue 1016278). #24620
Fix: heap-use-after-free in content::NavigationRequest::OnWillProcessResponseProcessed. (Chromium security issue 1090543). #24569
Fix: heap-use-after-free in ui::AXTreeSerializerblink (Chromium security issue 1065122). #24557
Fix: iframe in victim page can detect Scroll To Text Fragment activation. (Chromium security issue 1042986). #24624
Fix: integer overflow in GrTextBlob::Make. (Chromium security issue 1080481). #24586
Fix: javascript URI sandbox flags aren't propagated in a blank string case. (Chromium security issue 1074340). #24621
Fix: memcpy-param-overlap in AudioBuffer::copyFromChannel. (Chromium security issue 1081722). #24582
Fix: remove leaks of post-redirect URL for "
630,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@10.0.0-beta.12.
# Release Notes for v10.0.0-beta.12
Fixes

Fixed an issue where webContents.print() would sometimes hang with invalid settings. #24507
Fixed an issue where cpu and heap profiling in Node.js did not work properly with --cpu-prof, --heap-prof, and related CLI flags. #24540
Fixed an issue where macOS window vibrancy active state did not always match the active state of the window. #24532
Fixed broken --trace-sync-io flag in Node.js. #24544
Fixed potentially invalid duplex mode settings on Linux. #24527

Other Changes

Improved the performance of sending JS primitives over the context bridge. #24551
Updated Chromium to 85.0.4183.26. #24574

Documentation

Documentation changes: #24514
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@10.0.0-beta.12.
Release Notes for v10.0.0-beta.12
Fixes
Fixed an issue where webContents.print() would sometimes hang with invalid settings. #24507
Fixed an issue where cpu and heap profiling in Node.js did not work properly with --cpu-prof, --heap-prof, and related CLI flags. #24540
Fixed an issue where macOS window vibrancy active state did not always match the active state of the window. #24532
Fixed broken --trace-sync-io flag in Node.js. #24544
Fixed potentially invalid duplex mode settings on Linux. #24527
Other Changes
Improved the performance of sending JS primitives over the context bridge. #24551
Updated Chromium to 85.0.4183.26. #24574
Documentation
Documentation changes: #24514"
631,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@10.0.0-beta.11.
# Release Notes for v10.0.0-beta.11
Other Changes

Updated Chromium to 85.0.4183.20. #24487
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@10.0.0-beta.11.
Release Notes for v10.0.0-beta.11
Other Changes
Updated Chromium to 85.0.4183.20. #24487"
632,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@10.0.0-beta.10.
# Release Notes for v10.0.0-beta.10
Features

Expose sessionId associated with a target from debugger module. #24397

Fixes

Fixed a termination crash on Web Workers with Node.js integration enabled. #24462
Fixed clipboard.readBuffer returning incorrect value. #24467

Other Changes

Updated Chromium to 85.0.4183.19. #24299
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@10.0.0-beta.10.
Release Notes for v10.0.0-beta.10
Features
Expose sessionId associated with a target from debugger module. #24397
Fixes
Fixed a termination crash on Web Workers with Node.js integration enabled. #24462
Fixed clipboard.readBuffer returning incorrect value. #24467
Other Changes
Updated Chromium to 85.0.4183.19. #24299"
633,"Release Notes for v8.4.0
Features

Added new render-process-gone event on app to replace the renderer-process-crashed event. #24314
Added new render-process-gone event to replace the crashed event. #24308
Added support for suspend and resume events to Windows. #24282
Added support for suspend and resume events to macOS. #24295
Added tracing instrumentation to WebContents IPC methods, available with the contentTracing category ""electron"". #24307
Expose sessionId associated with a target from debugger module. #24399
Implemented systemPreferences.getMediaAccessStatus() on Windows. #24313

Fixes

Backported fixes for UAF in extensions (CVE-2020-6454 and NOCVE). #24419
Fixed an intermittent high-CPU usage problem caused a system clock issue during sleep. #24414
Fixed an issue where some old notifications were not properly removed from the Notification Center on macOS. #24405
Fixed bug on macOS where the main window could be targeted for a focus event when it was disabled behind a modal. #24353
","Release Notes for v8.4.0
Features
Added new render-process-gone event on app to replace the renderer-process-crashed event. #24314
Added new render-process-gone event to replace the crashed event. #24308
Added support for suspend and resume events to Windows. #24282
Added support for suspend and resume events to macOS. #24295
Added tracing instrumentation to WebContents IPC methods, available with the contentTracing category ""electron"". #24307
Expose sessionId associated with a target from debugger module. #24399
Implemented systemPreferences.getMediaAccessStatus() on Windows. #24313
Fixes
Backported fixes for UAF in extensions (CVE-2020-6454 and NOCVE). #24419
Fixed an intermittent high-CPU usage problem caused a system clock issue during sleep. #24414
Fixed an issue where some old notifications were not properly removed from the Notification Center on macOS. #24405
Fixed bug on macOS where the main window could be targeted for a focus event when it was disabled behind a modal. #24353"
634,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@10.0.0-beta.9.
# Release Notes for v10.0.0-beta.9
Fixes

Fixed an intermittent high-CPU usage problem caused a system clock issue during sleep. #24413
Fixed an issue where some old notifications were not properly removed from the Notification Center on macOS. #24404
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@10.0.0-beta.9.
Release Notes for v10.0.0-beta.9
Fixes
Fixed an intermittent high-CPU usage problem caused a system clock issue during sleep. #24413
Fixed an issue where some old notifications were not properly removed from the Notification Center on macOS. #24404"
635,"Release Notes for v9.1.0
Features

Added support for MessagePort in the main process. #24323
Added support for suspend and resume events to Windows. #24283
Added support for suspend and resume events to macOS. #24294
Expose sessionId associated with a target from debugger module. #24398
Implemented systemPreferences.getMediaAccessStatus() on Windows. #24312

Fixes

Fixed an intermittent high-CPU usage problem caused a system clock issue during sleep. #24415
Fixed an issue where some old notifications were not properly removed from the Notification Center on macOS. #24406
Fixed bug on macOS where the main window could be targeted for a focus event when it was disabled behind a modal. #24354
","Release Notes for v9.1.0
Features
Added support for MessagePort in the main process. #24323
Added support for suspend and resume events to Windows. #24283
Added support for suspend and resume events to macOS. #24294
Expose sessionId associated with a target from debugger module. #24398
Implemented systemPreferences.getMediaAccessStatus() on Windows. #24312
Fixes
Fixed an intermittent high-CPU usage problem caused a system clock issue during sleep. #24415
Fixed an issue where some old notifications were not properly removed from the Notification Center on macOS. #24406
Fixed bug on macOS where the main window could be targeted for a focus event when it was disabled behind a modal. #24354"
636,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@10.0.0-beta.8.
# Release Notes for v10.0.0-beta.8
Features

Added support for suspend and resume events to Windows. #24281
Added support for suspend and resume events to macOS. #24293
Implemented systemPreferences.getMediaAccessStatus() on Windows. #24311

Fixes

Fixed bug on macOS where the main window could be targeted for a focus event when it was disabled behind a modal. #24352
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@10.0.0-beta.8.
Release Notes for v10.0.0-beta.8
Features
Added support for suspend and resume events to Windows. #24281
Added support for suspend and resume events to macOS. #24293
Implemented systemPreferences.getMediaAccessStatus() on Windows. #24311
Fixes
Fixed bug on macOS where the main window could be targeted for a focus event when it was disabled behind a modal. #24352"
637,"Release Notes for v8.3.4
Fixes

Fixed ""null path-to-app"" in test-app when Electron's path contains spaces or special characters. #24231
Fixed an issue with click events not being emitted on macOS for Trays with context menus set. #24239
Updated Node root certs to use NSS 3.53. #24268
","Release Notes for v8.3.4
Fixes
Fixed ""null path-to-app"" in test-app when Electron's path contains spaces or special characters. #24231
Fixed an issue with click events not being emitted on macOS for Trays with context menus set. #24239
Updated Node root certs to use NSS 3.53. #24268"
638,"Release Notes for v7.3.2
Fixes

Enable NTLM v2 for POSIX platforms and added --disable-ntlm-v2 switch to disable it. #23935
Ensured proper nativeImage serialization between renderer and browser processes via remote. #24021
Fixed GTK dark theme setting not respected in Electron on Linux. #23966
Fixed an error when calling dialog.showCertificateTrustDialog with no BrowserWindow. #24119
Fixed crash when handling synchronous IPC errors. #24041
Fixed intercepted protocols not raising Redirect information back to Chromium. #23997
Fixed issue with some IMEs on windows (for ex: Zhuyin) don't terminate after pressing shift. #24055
Fixed the acceptLanguages argument being ignored in session.setUserAgent(). #23964
Fixed window titlebar not responding to pen on Windows 10. #24104
Updated Node root certs to use NSS 3.53. #24269
","Release Notes for v7.3.2
Fixes
Enable NTLM v2 for POSIX platforms and added --disable-ntlm-v2 switch to disable it. #23935
Ensured proper nativeImage serialization between renderer and browser processes via remote. #24021
Fixed GTK dark theme setting not respected in Electron on Linux. #23966
Fixed an error when calling dialog.showCertificateTrustDialog with no BrowserWindow. #24119
Fixed crash when handling synchronous IPC errors. #24041
Fixed intercepted protocols not raising Redirect information back to Chromium. #23997
Fixed issue with some IMEs on windows (for ex: Zhuyin) don't terminate after pressing shift. #24055
Fixed the acceptLanguages argument being ignored in session.setUserAgent(). #23964
Fixed window titlebar not responding to pen on Windows 10. #24104
Updated Node root certs to use NSS 3.53. #24269"
639,"Release Notes for v9.0.5
Fixes

Fixed ""Paste and Match Style"" shortcut on macOS to match OS's ""Option-Shift-Command-V"". #24185
Fixed ""null path-to-app"" in test-app when Electron's path contains spaces or special characters. #24232
Fixed an error when calling dialog.showCertificateTrustDialog with no BrowserWindow. #24121
Fixed an issue where shutdown would be emitted both on app and system shutdown on macOS. #24141
Fixed an issue where withFileTypes was not supported as an option to fs.readdir or fs.readdirSync under asar. #24108
Fixed an issue which would cause streaming protocol responses to stall in some cases. #24082
Fixed an issue with click events not being emitted on macOS for Trays with context menus set. #24236
Fixed delayed execution of some Node.js callbacks in the main process. #24178
Fixed tray menu showing in taskbar on Windows. #24193
Fixed window titlebar not responding to pen on Windows 10. #24103

Other Changes

Fixed issue with some IMEs on windows (for ex: Zhuyin) don't terminate after pressing shift. #24059
Fixed mac app store rejection notice for invalid symbolic link in bundle. #24238
Updated Chromium to 83.0.4103.119. #24234

Documentation

Documentation changes: #24177
","Release Notes for v9.0.5
Fixes
Fixed ""Paste and Match Style"" shortcut on macOS to match OS's ""Option-Shift-Command-V"". #24185
Fixed ""null path-to-app"" in test-app when Electron's path contains spaces or special characters. #24232
Fixed an error when calling dialog.showCertificateTrustDialog with no BrowserWindow. #24121
Fixed an issue where shutdown would be emitted both on app and system shutdown on macOS. #24141
Fixed an issue where withFileTypes was not supported as an option to fs.readdir or fs.readdirSync under asar. #24108
Fixed an issue which would cause streaming protocol responses to stall in some cases. #24082
Fixed an issue with click events not being emitted on macOS for Trays with context menus set. #24236
Fixed delayed execution of some Node.js callbacks in the main process. #24178
Fixed tray menu showing in taskbar on Windows. #24193
Fixed window titlebar not responding to pen on Windows 10. #24103
Other Changes
Fixed issue with some IMEs on windows (for ex: Zhuyin) don't terminate after pressing shift. #24059
Fixed mac app store rejection notice for invalid symbolic link in bundle. #24238
Updated Chromium to 83.0.4103.119. #24234
Documentation
Documentation changes: #24177"
640,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@10.0.0-beta.4.
# Release Notes for v10.0.0-beta.4
Fixes

Fixed ""Paste and Match Style"" shortcut on macOS to match OS's ""Option-Shift-Command-V"". #24182
Fixed an issue where shutdown would be emitted both on app and system shutdown on macOS. #24139
Fixed delayed execution of some Node.js callbacks in the main process. #24174
Fixed window titlebar not responding to pen on Windows 10. #24102

Documentation

Documentation changes: #24175
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@10.0.0-beta.4.
Release Notes for v10.0.0-beta.4
Fixes
Fixed ""Paste and Match Style"" shortcut on macOS to match OS's ""Option-Shift-Command-V"". #24182
Fixed an issue where shutdown would be emitted both on app and system shutdown on macOS. #24139
Fixed delayed execution of some Node.js callbacks in the main process. #24174
Fixed window titlebar not responding to pen on Windows 10. #24102
Documentation
Documentation changes: #24175"
641,"Release Notes for v8.3.3
Fixes

Fixed ""Paste and Match Style"" shortcut on macOS to match OS's ""Option-Shift-Command-V"". #24184
Fixed an issue where shutdown would be emitted both on app and system shutdown on macOS. #24140
Fixed an issue where withFileTypes was not supported as an option to fs.readdir or fs.readdirSync under asar. #24107
Fixed an issue which would cause streaming protocol responses to stall in some cases. #24133
Fixed delayed execution of some Node.js callbacks in the main process. #24180
Fixed tray menu showing in taskbar on Windows. #24194
Fixed window titlebar not responding to pen on Windows 10. #24101

Other Changes

Backported the fix to a crash in FIDO support. #24152
Fixed issue with some IMEs on windows (for ex: Zhuyin) don't terminate after pressing shift. #24181
[a11y] fix incorrect selection item count for listbox with grouped items. #24084

Documentation

Documentation changes: #24176
","Release Notes for v8.3.3
Fixes
Fixed ""Paste and Match Style"" shortcut on macOS to match OS's ""Option-Shift-Command-V"". #24184
Fixed an issue where shutdown would be emitted both on app and system shutdown on macOS. #24140
Fixed an issue where withFileTypes was not supported as an option to fs.readdir or fs.readdirSync under asar. #24107
Fixed an issue which would cause streaming protocol responses to stall in some cases. #24133
Fixed delayed execution of some Node.js callbacks in the main process. #24180
Fixed tray menu showing in taskbar on Windows. #24194
Fixed window titlebar not responding to pen on Windows 10. #24101
Other Changes
Backported the fix to a crash in FIDO support. #24152
Fixed issue with some IMEs on windows (for ex: Zhuyin) don't terminate after pressing shift. #24181
[a11y] fix incorrect selection item count for listbox with grouped items. #24084
Documentation
Documentation changes: #24176"
642,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@10.0.0-beta.3.
# Release Notes for v10.0.0-beta.3
Features

V8CacheOptions is a new webpreference option to enforce code caching policy. #23867

Fixes

Added missing support for isComposing KeyboardEvent property. #23995
Enable NTLM v2 for POSIX platforms and added --disable-ntlm-v2 switch to disable it. #23916
Fix: Allow windows behind macOS elements if ""frame"" is false. #24032
Fixed chrome://media-internals and chrome://webrtc-internals pages not loading. #24057
Fixed a crash in TouchBar for certain methods. #23970
Fixed a crash that could occur when using the ipcRenderer module after blink had released the context. Instead, a JS exception will be thrown. #23977
Fixed an error when calling dialog.showCertificateTrustDialog with no BrowserWindow. #24118
Fixed an issue where rmdir and rmdirSync work with original-fs in an asar context. #23951
Fixed an issue where withFileTypes was not supported as an option to fs.readdir or fs.readdirSync under asar. #24106
Fixed an issue which would cause streaming protocol responses to stall in some cases. #24081
Fixed crash when navigating between origins in a child window with nativeWindowOpen and contextIsolation enabled. #23896
Fixed disabling color correct rendering with --disable-color-correct-rendering. #23899
Fixed no session in webContents of type remote. #24064
Fixed the acceptLanguages argument being ignored in session.setUserAgent(). #23961
Fixed: On some Windows machines, especially Windows Insider builds, Electron would crash silently during startup. #24038
Restored old implementation of Linux Tray icons to fix a collection of issues where the tray icon wouldn't appear, would be the wrong size or would randomly disappear. #23925

Other Changes

Updated Chromium to 85.0.4161.2. #23915
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@10.0.0-beta.3.
Release Notes for v10.0.0-beta.3
Features
V8CacheOptions is a new webpreference option to enforce code caching policy. #23867
Fixes
Added missing support for isComposing KeyboardEvent property. #23995
Enable NTLM v2 for POSIX platforms and added --disable-ntlm-v2 switch to disable it. #23916
Fix: Allow windows behind macOS elements if ""frame"" is false. #24032
Fixed chrome://media-internals and chrome://webrtc-internals pages not loading. #24057
Fixed a crash in TouchBar for certain methods. #23970
Fixed a crash that could occur when using the ipcRenderer module after blink had released the context. Instead, a JS exception will be thrown. #23977
Fixed an error when calling dialog.showCertificateTrustDialog with no BrowserWindow. #24118
Fixed an issue where rmdir and rmdirSync work with original-fs in an asar context. #23951
Fixed an issue where withFileTypes was not supported as an option to fs.readdir or fs.readdirSync under asar. #24106
Fixed an issue which would cause streaming protocol responses to stall in some cases. #24081
Fixed crash when navigating between origins in a child window with nativeWindowOpen and contextIsolation enabled. #23896
Fixed disabling color correct rendering with --disable-color-correct-rendering. #23899
Fixed no session in webContents of type remote. #24064
Fixed the acceptLanguages argument being ignored in session.setUserAgent(). #23961
Fixed: On some Windows machines, especially Windows Insider builds, Electron would crash silently during startup. #24038
Restored old implementation of Linux Tray icons to fix a collection of issues where the tray icon wouldn't appear, would be the wrong size or would randomly disappear. #23925
Other Changes
Updated Chromium to 85.0.4161.2. #23915"
643,"Release Notes for v8.3.2
Features

V8CacheOptions is a new webpreference option to enforce code caching policy. #23869

Fixes

Added missing support for isComposing KeyboardEvent property. #24015
Enable NTLM v2 for POSIX platforms and added --disable-ntlm-v2 switch to disable it. #23933
Ensured proper nativeImage serialization between renderer and browser processes via remote. #23797
Fixed GTK dark theme setting not respected in Electron on Linux. #23965
Fixed chrome://media-internals and chrome://webrtc-internals pages not loading. #24063
Fixed a crash that could occur when using the ipcRenderer module after blink had released the context. Instead, a JS exception will be thrown. #23979
Fixed an error when calling dialog.showCertificateTrustDialog with no BrowserWindow. #24120
Fixed an issue where rmdir and rmdirSync work with original-fs in an asar context. #23955
Fixed an issue where window.location properties would throw an error for windows opened with window.open. #23947
Fixed an issue where some logging would double-print. #23924
Fixed an issue with volume-related globalShortcut registration. #23948
Fixed crash when navigating between origins in a child window with nativeWindowOpen and contextIsolation enabled. #23894
Fixed disabling color correct rendering with --disable-color-correct-rendering. #23827
Fixed the acceptLanguages argument being ignored in session.setUserAgent(). #23963
Restored old implementation of Linux Tray icons to fix a collection of issues where the tray icon wouldn't appear, would be the wrong size or would randomly disappear. #23927

Other Changes

None. #24072
[a11y] fix incorrect position and size reported for grouped items in a listbox. #24088
","Release Notes for v8.3.2
Features
V8CacheOptions is a new webpreference option to enforce code caching policy. #23869
Fixes
Added missing support for isComposing KeyboardEvent property. #24015
Enable NTLM v2 for POSIX platforms and added --disable-ntlm-v2 switch to disable it. #23933
Ensured proper nativeImage serialization between renderer and browser processes via remote. #23797
Fixed GTK dark theme setting not respected in Electron on Linux. #23965
Fixed chrome://media-internals and chrome://webrtc-internals pages not loading. #24063
Fixed a crash that could occur when using the ipcRenderer module after blink had released the context. Instead, a JS exception will be thrown. #23979
Fixed an error when calling dialog.showCertificateTrustDialog with no BrowserWindow. #24120
Fixed an issue where rmdir and rmdirSync work with original-fs in an asar context. #23955
Fixed an issue where window.location properties would throw an error for windows opened with window.open. #23947
Fixed an issue where some logging would double-print. #23924
Fixed an issue with volume-related globalShortcut registration. #23948
Fixed crash when navigating between origins in a child window with nativeWindowOpen and contextIsolation enabled. #23894
Fixed disabling color correct rendering with --disable-color-correct-rendering. #23827
Fixed the acceptLanguages argument being ignored in session.setUserAgent(). #23963
Restored old implementation of Linux Tray icons to fix a collection of issues where the tray icon wouldn't appear, would be the wrong size or would randomly disappear. #23927
Other Changes
None. #24072
[a11y] fix incorrect position and size reported for grouped items in a listbox. #24088"
644,"Release Notes for v9.0.4
Fixes

Added missing support for isComposing KeyboardEvent property. #23996
Enable NTLM v2 for POSIX platforms and added --disable-ntlm-v2 switch to disable it. #23934
Fix: Allow windows behind macOS elements if ""frame"" is false. #24033
Fixed chrome://media-internals and chrome://webrtc-internals pages not loading. #24058
Fixed a crash that could occur when using the ipcRenderer module after blink had released the context. Instead, a JS exception will be thrown. #23978
Fixed an issue where rmdir and rmdirSync work with original-fs in an asar context. #23956
Fixed no session in webContents of type remote. #24065
Fixed: On some Windows machines, especially Windows Insider builds, Electron would crash silently during startup. #24039

Other Changes

Updated Chromium to 83.0.4103.104. #24068
[a11y] fix incorrect position and size reported for grouped items in a listbox. #24060
[a11y] fix incorrect selection item count for listbox with grouped items. #24061
","Release Notes for v9.0.4
Fixes
Added missing support for isComposing KeyboardEvent property. #23996
Enable NTLM v2 for POSIX platforms and added --disable-ntlm-v2 switch to disable it. #23934
Fix: Allow windows behind macOS elements if ""frame"" is false. #24033
Fixed chrome://media-internals and chrome://webrtc-internals pages not loading. #24058
Fixed a crash that could occur when using the ipcRenderer module after blink had released the context. Instead, a JS exception will be thrown. #23978
Fixed an issue where rmdir and rmdirSync work with original-fs in an asar context. #23956
Fixed no session in webContents of type remote. #24065
Fixed: On some Windows machines, especially Windows Insider builds, Electron would crash silently during startup. #24039
Other Changes
Updated Chromium to 83.0.4103.104. #24068
[a11y] fix incorrect position and size reported for grouped items in a listbox. #24060
[a11y] fix incorrect selection item count for listbox with grouped items. #24061"
645,"Release Notes for v9.0.3
Features

V8CacheOptions is a new webpreference option to enforce code caching policy. #23868

Fixes

Fixed disabling color correct rendering with --disable-color-correct-rendering. #23900
Fixed the acceptLanguages argument being ignored in session.setUserAgent(). #23962
Restored old implementation of Linux Tray icons to fix a collection of issues where the tray icon wouldn't appear, would be the wrong size or would randomly disappear. #23926

Other Changes

Updated Chromium to 83.0.4103.99. #23967
","Release Notes for v9.0.3
Features
V8CacheOptions is a new webpreference option to enforce code caching policy. #23868
Fixes
Fixed disabling color correct rendering with --disable-color-correct-rendering. #23900
Fixed the acceptLanguages argument being ignored in session.setUserAgent(). #23962
Restored old implementation of Linux Tray icons to fix a collection of issues where the tray icon wouldn't appear, would be the wrong size or would randomly disappear. #23926
Other Changes
Updated Chromium to 83.0.4103.99. #23967"
646,"Release Notes for v9.0.2
Fixes

Fixed crash when navigating between origins in a child window with nativeWindowOpen and contextIsolation enabled. #23895
Fixed tray menu on Windows not keyboard navigable. #23880
","Release Notes for v9.0.2
Fixes
Fixed crash when navigating between origins in a child window with nativeWindowOpen and contextIsolation enabled. #23895
Fixed tray menu on Windows not keyboard navigable. #23880"
647,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@10.0.0-beta.2.
# Release Notes for v10.0.0-beta.2
Fixes

Fixed GTK dark theme setting not respected in Electron on Linux. #23711
Fixed process.windowsStore returning undefined in AppX packages. #23798
Fixed a bezeling issue on vibrant non-frameless BrowserWindows. #23809
Fixed an issue where window.location properties would throw an error for windows opened with window.open. #23804
Fixed an issue where the 'about' role had on effect on Windows menus. #23717
Fixed an issue with volume-related globalShortcut registration. #23823
Fixed an occasional menu crash on macOS Catalina when menu is closing. #23806
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@10.0.0-beta.2.
Release Notes for v10.0.0-beta.2
Fixes
Fixed GTK dark theme setting not respected in Electron on Linux. #23711
Fixed process.windowsStore returning undefined in AppX packages. #23798
Fixed a bezeling issue on vibrant non-frameless BrowserWindows. #23809
Fixed an issue where window.location properties would throw an error for windows opened with window.open. #23804
Fixed an issue where the 'about' role had on effect on Windows menus. #23717
Fixed an issue with volume-related globalShortcut registration. #23823
Fixed an occasional menu crash on macOS Catalina when menu is closing. #23806"
648,"Release Notes for v9.0.1
Features

EnableWebSQL is a new webpreference option to enable/disable websql api. #23580

Fixes

Don't ignore the referrer header in net.request. #23685
Fixed GTK dark theme setting not respected in Electron on Linux. #23712
Fixed process.windowsStore returning undefined in AppX packages. #23801
Fixed a bezeling issue on vibrant non-frameless BrowserWindows. #23810
Fixed an issue where nativeImages might throw conversion errors in the renderer process. #23796
Fixed an issue where window.location properties would throw an error for windows opened with window.open. #23805
Fixed an issue where some logging would double-print. #23689
Fixed an issue where the 'about' role had on effect on Windows menus. #23715
Fixed an issue with volume-related globalShortcut registration. #23824
Fixed an occasional menu crash on macOS Catalina when menu is closing. #23808

Other Changes

Improved error logging on moveItemToTrash failures on macOS. #23628
Updated Chromium to 83.0.4103.94. #23875
","Release Notes for v9.0.1
Features
EnableWebSQL is a new webpreference option to enable/disable websql api. #23580
Fixes
Don't ignore the referrer header in net.request. #23685
Fixed GTK dark theme setting not respected in Electron on Linux. #23712
Fixed process.windowsStore returning undefined in AppX packages. #23801
Fixed a bezeling issue on vibrant non-frameless BrowserWindows. #23810
Fixed an issue where nativeImages might throw conversion errors in the renderer process. #23796
Fixed an issue where window.location properties would throw an error for windows opened with window.open. #23805
Fixed an issue where some logging would double-print. #23689
Fixed an issue where the 'about' role had on effect on Windows menus. #23715
Fixed an issue with volume-related globalShortcut registration. #23824
Fixed an occasional menu crash on macOS Catalina when menu is closing. #23808
Other Changes
Improved error logging on moveItemToTrash failures on macOS. #23628
Updated Chromium to 83.0.4103.94. #23875"
649,"Release Notes for v8.3.1
Fixes

Backported the fix for CVE-2020-6467: UAF in WebRTC. #23788
Don't ignore the referrer header in net.request. #23688
Fixed process.windowsStore returning undefined in AppX packages. #23799
Fixed an issue where the 'about' role had on effect on Windows menus. #23714
Fixed an occasional menu crash on macOS Catalina when menu is closing. #23807

Other Changes

Backported fix for CVE-2020-6468: OOB read/write in V8. #23747
Fixed issues where objects sent over the context bridge could be freed prematurely resulting in crashes when accessing them. #23612
Improved error logging on moveItemToTrash failures on macOS. #23629
","Release Notes for v8.3.1
Fixes
Backported the fix for CVE-2020-6467: UAF in WebRTC. #23788
Don't ignore the referrer header in net.request. #23688
Fixed process.windowsStore returning undefined in AppX packages. #23799
Fixed an issue where the 'about' role had on effect on Windows menus. #23714
Fixed an occasional menu crash on macOS Catalina when menu is closing. #23807
Other Changes
Backported fix for CVE-2020-6468: OOB read/write in V8. #23747
Fixed issues where objects sent over the context bridge could be freed prematurely resulting in crashes when accessing them. #23612
Improved error logging on moveItemToTrash failures on macOS. #23629"
650,"Release Notes for v7.3.1
Fixes

Fixed process.windowsStore returning undefined in AppX packages. #23800
Fixed an issue where the 'about' role had on effect on Windows menus. #23713

Other Changes

Backported fix for CVE-2020-6468: OOB read/write in V8. #23748
Backported fix for use-after-free in AudioWorklet. #23844
","Release Notes for v7.3.1
Fixes
Fixed process.windowsStore returning undefined in AppX packages. #23800
Fixed an issue where the 'about' role had on effect on Windows menus. #23713
Other Changes
Backported fix for CVE-2020-6468: OOB read/write in V8. #23748
Backported fix for use-after-free in AudioWorklet. #23844"
651,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@10.0.0-beta.1.
Release Notes for v10.0.0-beta.1
Breaking Changes

Changed the default value of 'enableRemoteModule' to false. #22091
Fixed the positioning of window buttons on MacOS when the OS locale is set to an RTL language (like Arabic or Hebrew). Frameless window apps may have to account for this change while styling their windows. #22016

Features

Added contents.getBackgroundThrottling() method and contents.backgroundThrottling property. #21036
Added rateLimit and compress options to crashReporter. #23062
Added a sameSite property to the Cookie structure allowing you to get and set the same site policy for cookies. #22789
Added new render-process-gone event on app to replace the renderer-process-crashed event. #23560
Added new render-process-gone event to replace the crashed event. #23096
Added new useSessionCookies flag to net requests to allow them to use the session cookie store. #22704
Added support for MessagePort in the main process. #22404
Added support for the 'compress' option of crashReporter on Linux. #23597
Added the 'onclose' event to MessagePort and MessagePortMain. #22532
Added the ability to get the ""Recent"" folder on Windows with app.getPath('recent'). #23381
BrowserWindow darkTheme option now defaults to nativeTheme.shouldUseDarkColors. #20138
Can now check if a given session is persistent by calling the ses.isPersistent() API. #22622
Deprecated uncompressed crash uploads in crashReporter. #23598
Enable native Electron handling and passing of Node.js cli options. #21110
Enhanced window.open functionality with the ability to handle POST data in the new-window event. #19703
Exposed the desktopCapturer module in the main process. #23548
The position of nested touch bars inherited from Chromium can now be customized (macOS). #22270

Fixes

Fixed BrowserWindow.moveAbove on Windows. #23161
Fixed WebContents.focus not focusing window on macOS and Linux. #22323
Fixed a crash that could happen when a warning was emitted when loading an extension. #23667
Fixed a crash when closing GTK file open/save dialogs. #23109
Fixed a crash when using <input type=""file"" />. #22843
Fixed a potential crash when menu is created from an empty template. #23308
Fixed an issue that could cause exceptions in the 'remote' module when accessing objects without constructors. #22820
Fixed an issue where startDrag could crash if some specific strings were passed into nativeImage.createFromImage to create the icon. #23467
Fixed an issue where diagnostic error reporting wasn't available in Node.js processes. #23126
Fixed an issue where undo and redo shortcuts did not work in webviews. #22911
Fixed crash-on-exit that could happen during node platform deinitialization. #23116
Fixed issue where SameSite cookies would not be attached to outgoing requests from the net module. #22788
Fixed several memory leaks related to V8 handles not being properly scoped. #22531
Fixed some Wasm and diagnostics issues in main and renderer process execution of Node.js. #23261
Fixed some event listener crashes in Tray. #23140
Fixed the JavaScript object of BrowserWindow not garbage collected when window is closed. #22006

Other Changes

Fixed feature string parsing type coercion for window.open. #23130
Removed the deprecated currentlyLoggingPath property of netLog. Additionally, netLog.stopLogging no longer returns the path to the recorded log. #22732
Updated Node.js to v12.16.3. #23327

Documentation

Documentation changes: #22476, #22522, #23367, #23510, #23511
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm install electron@10.0.0-beta.1.
Release Notes for v10.0.0-beta.1
Breaking Changes
Changed the default value of 'enableRemoteModule' to false. #22091
Fixed the positioning of window buttons on MacOS when the OS locale is set to an RTL language (like Arabic or Hebrew). Frameless window apps may have to account for this change while styling their windows. #22016
Features
Added contents.getBackgroundThrottling() method and contents.backgroundThrottling property. #21036
Added rateLimit and compress options to crashReporter. #23062
Added a sameSite property to the Cookie structure allowing you to get and set the same site policy for cookies. #22789
Added new render-process-gone event on app to replace the renderer-process-crashed event. #23560
Added new render-process-gone event to replace the crashed event. #23096
Added new useSessionCookies flag to net requests to allow them to use the session cookie store. #22704
Added support for MessagePort in the main process. #22404
Added support for the 'compress' option of crashReporter on Linux. #23597
Added the 'onclose' event to MessagePort and MessagePortMain. #22532
Added the ability to get the ""Recent"" folder on Windows with app.getPath('recent'). #23381
BrowserWindow darkTheme option now defaults to nativeTheme.shouldUseDarkColors. #20138
Can now check if a given session is persistent by calling the ses.isPersistent() API. #22622
Deprecated uncompressed crash uploads in crashReporter. #23598
Enable native Electron handling and passing of Node.js cli options. #21110
Enhanced window.open functionality with the ability to handle POST data in the new-window event. #19703
Exposed the desktopCapturer module in the main process. #23548
The position of nested touch bars inherited from Chromium can now be customized (macOS). #22270
Fixes
Fixed BrowserWindow.moveAbove on Windows. #23161
Fixed WebContents.focus not focusing window on macOS and Linux. #22323
Fixed a crash that could happen when a warning was emitted when loading an extension. #23667
Fixed a crash when closing GTK file open/save dialogs. #23109
Fixed a crash when using . #22843
Fixed a potential crash when menu is created from an empty template. #23308
Fixed an issue that could cause exceptions in the 'remote' module when accessing objects without constructors. #22820
Fixed an issue where startDrag could crash if some specific strings were passed into nativeImage.createFromImage to create the icon. #23467
Fixed an issue where diagnostic error reporting wasn't available in Node.js processes. #23126
Fixed an issue where undo and redo shortcuts did not work in webviews. #22911
Fixed crash-on-exit that could happen during node platform deinitialization. #23116
Fixed issue where SameSite cookies would not be attached to outgoing requests from the net module. #22788
Fixed several memory leaks related to V8 handles not being properly scoped. #22531
Fixed some Wasm and diagnostics issues in main and renderer process execution of Node.js. #23261
Fixed some event listener crashes in Tray. #23140
Fixed the JavaScript object of BrowserWindow not garbage collected when window is closed. #22006
Other Changes
Fixed feature string parsing type coercion for window.open. #23130
Removed the deprecated currentlyLoggingPath property of netLog. Additionally, netLog.stopLogging no longer returns the path to the recorded log. #22732
Updated Node.js to v12.16.3. #23327
Documentation
Documentation changes: #22476, #22522, #23367, #23510, #23511"
652,"Release Notes for 9.0.0
Stack Upgrades

Chromium v83.0.4103.50
v81 blog post
v82 was skipped
v83 blog post


Node v12.14.1
v12.13.1 release notes
v12.14.0 release notes
v12.14.1 release notes


V8 8.3
v8.1 blog post
v8.3 blog post



Breaking Changes

Changed the default value of app.allowRendererProcessReuse to true. This will prevent loading of non-context-aware native modules in renderer processes. (See #18397 for more information on this change.) #22401
Removed deprecated <webview>.getWebContents(). #20986
Removed the deprecated 'setLayoutZoomLevelLimits' method. #21383
IPC between main and renderer processes now uses the Structured Clone Algorithm. #20214
Split shell.openItem(path) into synchronous and asynchronous methods. #20682

Features

Added fullScreen property support for BrowserWindows. #23330
Added session.listWordsInSpellCheckerDictionary API to list custom words in the dictionary. #22128
Added session.removeWordFromSpellCheckerDictionary API to remove custom words in the dictionary. #22368
Added session.serviceWorkerContext API to access basic service worker info and receive console logs from service workers. #22313
Added a new force parameter to app.focus() on macOS to allow apps to forcefully take focus. #23447
Added chrome.i18n extension API. #22570
Added chrome.tabs.connect extension API for background pages. #22549
Added support for property access to some getter/setter pairs on BrowserWindow. #23208
Added support for the chrome.extension.getBackgroundPage API when building with enable_electron_extensions. #22177
Allow an optional callback parameter for WebFrame.executeJavaScript* methods, which is called synchronously unless the target context is paused. #22501
Restored support for pdfium-based PDF viewer. #22131

Fixes

Don't allow window to go behind menu bar on mac. #22828
Fixed webRequest module not working with file:// protocol. #22919
Fixed webRequest not working for CORS requests. #22468
Fixed win.setMenuBarVisibility(false) not hiding menu bar. #23263
Fixed an issue where changing theme on macOS would break window maximizability state. #22724
Fixed crash in network service process when using protocol.registerSchemeAsPrivileged api. #22917
Fixed crash that could occur when calling session.fromPartition inside the ready event. #23472
Fixed incorrect hit testing on top of ::after element with layoutNG. #23190
Fixed missing debug symbols for crashpad handler on macOS. #23573
Fixed possible freeze on window with disabled background throttling. #22852
Fixed the print button functionality in the PDF viewer extension. #23173
Limited manipulation of custom spellchecker dictionary words to persistent sessions. #22683
Removed extraneous crashpad_handler binary from the Linux distribution files. #23575
crashReporter is now explicitly initialized only in the main process, and implicitly initialized in other child processes. This fixes an issue preventing the crash reporter from functioning in sandboxed renderers on Linux. #23461
Fixed broken Views API builds. #22642

Performance

Improved window events handler efficiency on Linux. #23260
Made setting window icons slightly faster on Linux. #22736
","Release Notes for 9.0.0
Stack Upgrades
Chromium v83.0.4103.50
v81 blog post
v82 was skipped
v83 blog post
Node v12.14.1
v12.13.1 release notes
v12.14.0 release notes
v12.14.1 release notes
V8 8.3
v8.1 blog post
v8.3 blog post
Breaking Changes
Changed the default value of app.allowRendererProcessReuse to true. This will prevent loading of non-context-aware native modules in renderer processes. (See #18397 for more information on this change.) #22401
Removed deprecated .getWebContents(). #20986
Removed the deprecated 'setLayoutZoomLevelLimits' method. #21383
IPC between main and renderer processes now uses the Structured Clone Algorithm. #20214
Split shell.openItem(path) into synchronous and asynchronous methods. #20682
Features
Added fullScreen property support for BrowserWindows. #23330
Added session.listWordsInSpellCheckerDictionary API to list custom words in the dictionary. #22128
Added session.removeWordFromSpellCheckerDictionary API to remove custom words in the dictionary. #22368
Added session.serviceWorkerContext API to access basic service worker info and receive console logs from service workers. #22313
Added a new force parameter to app.focus() on macOS to allow apps to forcefully take focus. #23447
Added chrome.i18n extension API. #22570
Added chrome.tabs.connect extension API for background pages. #22549
Added support for property access to some getter/setter pairs on BrowserWindow. #23208
Added support for the chrome.extension.getBackgroundPage API when building with enable_electron_extensions. #22177
Allow an optional callback parameter for WebFrame.executeJavaScript* methods, which is called synchronously unless the target context is paused. #22501
Restored support for pdfium-based PDF viewer. #22131
Fixes
Don't allow window to go behind menu bar on mac. #22828
Fixed webRequest module not working with file:// protocol. #22919
Fixed webRequest not working for CORS requests. #22468
Fixed win.setMenuBarVisibility(false) not hiding menu bar. #23263
Fixed an issue where changing theme on macOS would break window maximizability state. #22724
Fixed crash in network service process when using protocol.registerSchemeAsPrivileged api. #22917
Fixed crash that could occur when calling session.fromPartition inside the ready event. #23472
Fixed incorrect hit testing on top of ::after element with layoutNG. #23190
Fixed missing debug symbols for crashpad handler on macOS. #23573
Fixed possible freeze on window with disabled background throttling. #22852
Fixed the print button functionality in the PDF viewer extension. #23173
Limited manipulation of custom spellchecker dictionary words to persistent sessions. #22683
Removed extraneous crashpad_handler binary from the Linux distribution files. #23575
crashReporter is now explicitly initialized only in the main process, and implicitly initialized in other child processes. This fixes an issue preventing the crash reporter from functioning in sandboxed renderers on Linux. #23461
Fixed broken Views API builds. #22642
Performance
Improved window events handler efficiency on Linux. #23260
Made setting window icons slightly faster on Linux. #22736"
653,"Release Notes for v6.1.12
Other Changes

Fixed v8_context_snapshot_generator included in arm/arm64 mksnapshot zip files. #23541
Security: Backport Chromium fix for https://crbug.com/1062861. #23526
Security: backported fix for CVE-2020-6457: Use after free in speech recognizer. #23432
Security: backported fix for CVE-2020-6459: Use after free in payments. #23458
Security: backported fix for CVE-2020-6460: Insufficient data validation in URL formatting. #23464
Security: backported fix for CVE-2020-6461: use-after-free in storage. #23505
Security: backported fix for CVE-2020-6462: Use after free in task scheduling. #23519
Security: backported fix for CVE-2020-6463: use-after-free in Angle. #23563
Security: backported fix for CVE-2020-6464: Type confusion in blink. #23530
Security: backported fix for CVE-2020-6831: Stack buffer overflow in SCTP. #23516
","Release Notes for v6.1.12
Other Changes
Fixed v8_context_snapshot_generator included in arm/arm64 mksnapshot zip files. #23541
Security: Backport Chromium fix for link. #23526
Security: backported fix for CVE-2020-6457: Use after free in speech recognizer. #23432
Security: backported fix for CVE-2020-6459: Use after free in payments. #23458
Security: backported fix for CVE-2020-6460: Insufficient data validation in URL formatting. #23464
Security: backported fix for CVE-2020-6461: use-after-free in storage. #23505
Security: backported fix for CVE-2020-6462: Use after free in task scheduling. #23519
Security: backported fix for CVE-2020-6463: use-after-free in Angle. #23563
Security: backported fix for CVE-2020-6464: Type confusion in blink. #23530
Security: backported fix for CVE-2020-6831: Stack buffer overflow in SCTP. #23516"
654,"Release Notes for v8.3.0
Features

Added a new force parameter to app.focus() on macOS to allow apps to forcefully take focus. #23574
EnableWebSQL is a new webpreference option to enable/disable websql api. #23581

Fixes

Ensured that exit callbacks are run for Node.js in the renderer process. #23564
Fixed a crash which could occur during page navigations. #23396
Fixed an issue whereby macOS would fail to allow file extensions containing periods. #23449
Fixed behaviour of navigator.language/s and app.getLocale to use OS locale. #23407
Fixed crash with webview during some window management events like resize, scroll etc. #23397

Other Changes

Fixed v8_context_snapshot_generator included in arm/arm64 mksnapshot zip files. #23542
None. #23402, #23591
Security: Backport Chromium fix for https://crbug.com/1062861. #23528
Security: backported fix for CVE-2020-6458: Out of bounds read and write in PDFium. #23465
Security: backported fix for CVE-2020-6459: Use after free in payments. #23456
Security: backported fix for CVE-2020-6460: Insufficient data validation in URL formatting. #23462
Security: backported fix for CVE-2020-6461: use-after-free in storage. #23504
Security: backported fix for CVE-2020-6462: Use after free in task scheduling. #23517
Security: backported fix for CVE-2020-6463: use-after-free in Angle. #23561
Security: backported fix for CVE-2020-6464: Type confusion in blink. #23532
Security: backported fix for CVE-2020-6831: Stack buffer overflow in SCTP. #23514

Documentation

Documentation changes: #23355
","Release Notes for v8.3.0
Features
Added a new force parameter to app.focus() on macOS to allow apps to forcefully take focus. #23574
EnableWebSQL is a new webpreference option to enable/disable websql api. #23581
Fixes
Ensured that exit callbacks are run for Node.js in the renderer process. #23564
Fixed a crash which could occur during page navigations. #23396
Fixed an issue whereby macOS would fail to allow file extensions containing periods. #23449
Fixed behaviour of navigator.language/s and app.getLocale to use OS locale. #23407
Fixed crash with webview during some window management events like resize, scroll etc. #23397
Other Changes
Fixed v8_context_snapshot_generator included in arm/arm64 mksnapshot zip files. #23542
None. #23402, #23591
Security: Backport Chromium fix for link. #23528
Security: backported fix for CVE-2020-6458: Out of bounds read and write in PDFium. #23465
Security: backported fix for CVE-2020-6459: Use after free in payments. #23456
Security: backported fix for CVE-2020-6460: Insufficient data validation in URL formatting. #23462
Security: backported fix for CVE-2020-6461: use-after-free in storage. #23504
Security: backported fix for CVE-2020-6462: Use after free in task scheduling. #23517
Security: backported fix for CVE-2020-6463: use-after-free in Angle. #23561
Security: backported fix for CVE-2020-6464: Type confusion in blink. #23532
Security: backported fix for CVE-2020-6831: Stack buffer overflow in SCTP. #23514
Documentation
Documentation changes: #23355"
655,"Release Notes for v7.3.0
Features

EnableWebSQL is a new webpreference option to enable/disable websql api. #23582

Fixes

Ensured that exit callbacks are run for Node.js in the renderer process. #23566
Fixed an issue whereby macOS would fail to allow file extensions containing periods. #23451
Fixed an issue with navigator.languages and Accept-Language did not fully respect users' language preferences on Windows and macOS. This also improved fallback font selection for CJK texts on Windows. #23420
Fixed crash with webview during some window management events like resize, scroll etc. #23398

Other Changes

Fixed v8_context_snapshot_generator included in arm/arm64 mksnapshot zip files. #23539
None. #23403
Security: Backport Chromium fix for https://crbug.com/1062861. #23527
Security: backported fix for CVE-2020-6457: Use after free in speech recognizer. #23431
Security: backported fix for CVE-2020-6458: Out of bounds read and write in PDFium. #23466
Security: backported fix for CVE-2020-6459: Use after free in payments. #23457
Security: backported fix for CVE-2020-6460: Insufficient data validation in URL formatting. #23463
Security: backported fix for CVE-2020-6461: use-after-free in storage. #23503
Security: backported fix for CVE-2020-6462: Use after free in task scheduling. #23518
Security: backported fix for CVE-2020-6463: use-after-free in Angle. #23562
Security: backported fix for CVE-2020-6464: Type confusion in blink. #23531
Security: backported fix for CVE-2020-6831: Stack buffer overflow in SCTP. #23515

Documentation

Documentation changes: #23357
","Release Notes for v7.3.0
Features
EnableWebSQL is a new webpreference option to enable/disable websql api. #23582
Fixes
Ensured that exit callbacks are run for Node.js in the renderer process. #23566
Fixed an issue whereby macOS would fail to allow file extensions containing periods. #23451
Fixed an issue with navigator.languages and Accept-Language did not fully respect users' language preferences on Windows and macOS. This also improved fallback font selection for CJK texts on Windows. #23420
Fixed crash with webview during some window management events like resize, scroll etc. #23398
Other Changes
Fixed v8_context_snapshot_generator included in arm/arm64 mksnapshot zip files. #23539
None. #23403
Security: Backport Chromium fix for link. #23527
Security: backported fix for CVE-2020-6457: Use after free in speech recognizer. #23431
Security: backported fix for CVE-2020-6458: Out of bounds read and write in PDFium. #23466
Security: backported fix for CVE-2020-6459: Use after free in payments. #23457
Security: backported fix for CVE-2020-6460: Insufficient data validation in URL formatting. #23463
Security: backported fix for CVE-2020-6461: use-after-free in storage. #23503
Security: backported fix for CVE-2020-6462: Use after free in task scheduling. #23518
Security: backported fix for CVE-2020-6463: use-after-free in Angle. #23562
Security: backported fix for CVE-2020-6464: Type confusion in blink. #23531
Security: backported fix for CVE-2020-6831: Stack buffer overflow in SCTP. #23515
Documentation
Documentation changes: #23357"
656,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@9.0.0-beta.24.
# Release Notes for v9.0.0-beta.24
Features

Added a new force parameter to app.focus() on macOS to allow apps to forcefully take focus. #23447

Fixes

Fixed an issue whereby macOS would fail to allow file extensions containing periods. #23450
Fixed crash that could occur when calling session.fromPartition inside the ready event. #23472
crashReporter is now explicitly initialized only in the main process, and implicitly initialized in other child processes. This fixes an issue preventing the crash reporter from functioning in sandboxed renderers on Linux. #23461

Other Changes

Updated Chromium to 83.0.4103.45. #23446
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@9.0.0-beta.24.
Release Notes for v9.0.0-beta.24
Features
Added a new force parameter to app.focus() on macOS to allow apps to forcefully take focus. #23447
Fixes
Fixed an issue whereby macOS would fail to allow file extensions containing periods. #23450
Fixed crash that could occur when calling session.fromPartition inside the ready event. #23472
crashReporter is now explicitly initialized only in the main process, and implicitly initialized in other child processes. This fixes an issue preventing the crash reporter from functioning in sandboxed renderers on Linux. #23461
Other Changes
Updated Chromium to 83.0.4103.45. #23446"
657,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@9.0.0-beta.23.
# Release Notes for v9.0.0-beta.23
Fixes

Fixed a crash which could occur during page navigations. #23375
Fixed an issue with navigator.languages and Accept-Language did not fully respect users' language preferences on Windows and macOS. This also improved fallback font selection for CJK texts on Windows. #23405
Fixed crash with webview during some window management events like resize, scroll etc. #23374

Other Changes

Updated Chromium to 83.0.4103.44. #23424

Documentation

Documentation changes: #23356
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@9.0.0-beta.23.
Release Notes for v9.0.0-beta.23
Fixes
Fixed a crash which could occur during page navigations. #23375
Fixed an issue with navigator.languages and Accept-Language did not fully respect users' language preferences on Windows and macOS. This also improved fallback font selection for CJK texts on Windows. #23405
Fixed crash with webview during some window management events like resize, scroll etc. #23374
Other Changes
Updated Chromium to 83.0.4103.44. #23424
Documentation
Documentation changes: #23356"
658,"Release Notes for v6.1.11
Fixes

Fixed issue with Promise.then context usage in V8
","Release Notes for v6.1.11
Fixes
Fixed issue with Promise.then context usage in V8"
659,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@9.0.0-beta.22.
# Release Notes for v9.0.0-beta.22
Features

Added fullScreen property support for BrowserWindows. #23330

Fixes

Fixed memory leaks in sandbox mode when using contextBridge with promises or ipcRenderer.invoke. #23338

Other Changes

Updated Chromium to 83.0.4103.34. #23326
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@9.0.0-beta.22.
Release Notes for v9.0.0-beta.22
Features
Added fullScreen property support for BrowserWindows. #23330
Fixes
Fixed memory leaks in sandbox mode when using contextBridge with promises or ipcRenderer.invoke. #23338
Other Changes
Updated Chromium to 83.0.4103.34. #23326"
660,"Release Notes for v8.2.5
Fixes

Backported blink fix for zero-size pixels on high-dpi screens. #23336
Fixed memory leaks in sandbox mode when using contextBridge with promises or ipcRenderer.invoke. #23339
","Release Notes for v8.2.5
Fixes
Backported blink fix for zero-size pixels on high-dpi screens. #23336
Fixed memory leaks in sandbox mode when using contextBridge with promises or ipcRenderer.invoke. #23339"
661,"Release Notes for v7.2.4
Fixes

Fixed Promise timeout issue when running Electron as Node. #23324
Fixed a use-after-free error that could happen if a Tray was destroyed while showing a custom context menu. #23182
Fixed an issue where windows without nativeWindowOpen: true could invoke the non-native-open path. #23224
Fixed memory leak when using contextBridge with sandbox=true. #23232
MacOS VoiceOver is now able to find its way back into web contents after it navigated ""out"" of an application. #23174
","Release Notes for v7.2.4
Fixes
Fixed Promise timeout issue when running Electron as Node. #23324
Fixed a use-after-free error that could happen if a Tray was destroyed while showing a custom context menu. #23182
Fixed an issue where windows without nativeWindowOpen: true could invoke the non-native-open path. #23224
Fixed memory leak when using contextBridge with sandbox=true. #23232
MacOS VoiceOver is now able to find its way back into web contents after it navigated ""out"" of an application. #23174"
662,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@9.0.0-beta.21.
# Release Notes for v9.0.0-beta.21","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@9.0.0-beta.21.
Release Notes for v9.0.0-beta.21"
663,"Release Notes for v8.2.4
Fixes

Fixed Promise timeout issue when running Electron as Node. #23234
Fixed a use-after-free error that could happen if a Tray was destroyed while showing a custom context menu. #23181
Fixed an issue where windows without nativeWindowOpen: true could invoke the non-native-open path. #23225
Fixed broken use of contextCodeGeneration parameter to Node.js' script.runInNewContext(). #23147
Fixed memory leak when using contextBridge with sandbox=true. #23231

Other Changes

Updated Chromium to 80.0.3987.165. #23217
","Release Notes for v8.2.4
Fixes
Fixed Promise timeout issue when running Electron as Node. #23234
Fixed a use-after-free error that could happen if a Tray was destroyed while showing a custom context menu. #23181
Fixed an issue where windows without nativeWindowOpen: true could invoke the non-native-open path. #23225
Fixed broken use of contextCodeGeneration parameter to Node.js' script.runInNewContext(). #23147
Fixed memory leak when using contextBridge with sandbox=true. #23231
Other Changes
Updated Chromium to 80.0.3987.165. #23217"
664,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@9.0.0-beta.20.
# Release Notes for v9.0.0-beta.20
Features

Added support for property access to some getter/setter pairs on BrowserWindow. #23208

Fixes

Fixed win.setMenuBarVisibility(false) not hiding menu bar. #23263

Other Changes

Improved window events handler efficiency on Linux. #23260
Updated Chromium to 83.0.4103.26. #23256
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@9.0.0-beta.20.
Release Notes for v9.0.0-beta.20
Features
Added support for property access to some getter/setter pairs on BrowserWindow. #23208
Fixes
Fixed win.setMenuBarVisibility(false) not hiding menu bar. #23263
Other Changes
Improved window events handler efficiency on Linux. #23260
Updated Chromium to 83.0.4103.26. #23256"
665,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@9.0.0-beta.19.
# Release Notes for v9.0.0-beta.19
Fixes

Fixed Promise timeout issue when running Electron as Node. #23154
Fixed an issue where windows without nativeWindowOpen: true could invoke the non-native-open path. #23222
Fixed broken use of contextCodeGeneration parameter to Node.js' script.runInNewContext(). #23146
Fixed incorrect hit testing on top of ::after element with layoutNG. #23190
Fixed memory leak when using contextBridge with sandbox=true. #23209
Fixed the print button functionality in the PDF viewer extension. #23173

Other Changes

Updated Chromium to 83.0.4103.24. #23218
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@9.0.0-beta.19.
Release Notes for v9.0.0-beta.19
Fixes
Fixed Promise timeout issue when running Electron as Node. #23154
Fixed an issue where windows without nativeWindowOpen: true could invoke the non-native-open path. #23222
Fixed broken use of contextCodeGeneration parameter to Node.js' script.runInNewContext(). #23146
Fixed incorrect hit testing on top of ::after element with layoutNG. #23190
Fixed memory leak when using contextBridge with sandbox=true. #23209
Fixed the print button functionality in the PDF viewer extension. #23173
Other Changes
Updated Chromium to 83.0.4103.24. #23218"
666,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@9.0.0-beta.18.
# Release Notes for v9.0.0-beta.18
Fixes

Fixed an issue with possible creation of a messageBox which cannot be dismissed on macOS. #23090

Other Changes

Updated Chromium to 83.0.4103.16. #23121
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@9.0.0-beta.18.
Release Notes for v9.0.0-beta.18
Fixes
Fixed an issue with possible creation of a messageBox which cannot be dismissed on macOS. #23090
Other Changes
Updated Chromium to 83.0.4103.16. #23121"
667,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@9.0.0-beta.17.
# Release Notes for v9.0.0-beta.17
Fixes

Security: Ensure proxy object is created in the correct context 248beeb7

Other Changes

Updated Chromium to 83.0.4103.14. #23095
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@9.0.0-beta.17.
Release Notes for v9.0.0-beta.17
Fixes
Security: Ensure proxy object is created in the correct context 248beeb7
Other Changes
Updated Chromium to 83.0.4103.14. #23095"
668,"Release Notes for v8.2.3
Fixes

Security: Ensure proxy object is created in the correct context b8e34770
","Release Notes for v8.2.3
Fixes
Security: Ensure proxy object is created in the correct context b8e34770"
669,"Release Notes for v7.2.3
Fixes

Security: Ensure proxy object is created in the correct context a9bead22
","Release Notes for v7.2.3
Fixes
Security: Ensure proxy object is created in the correct context a9bead22"
670,"Release Notes for v7.2.2
Fixes

Fixed a potential crash on invalid zoomFactor values when setting the zoom factor of a webpage. #22710
Fixed an issue with maximizable state persistence of BrowserWindows on macOS. #23019
Fixed an issue with possible creation of a messageBox which cannot be dismissed on macOS. #23089
Fixed an occasional crash when closing all BrowserWindows. #23024
Security: Backported fix for CVE-2020-6426: inappropriate implementation in V8. #23043
Security: backported a fix for crbug.com/1065094. #23059
Security: backported fix for a potential buffer overrun in WebRTC audio encoding. #23037
Security: backported fix for site isolation bypass in dedicated workers. #23040
Security: backported the fix to CVE-2020-6452: potential container-overflow in MediaStream mojo. #23044

Other Changes

Security: Backport fix for buffer underflow in DWrite. #22979
Security: Backported fix for use after free in file chooser. #22981
Security: backport fix for CVE-2020-6451: Use after free in WebAudio. #22945
Security: backport fix for use after free in VideoEncodeAccelerator. #22983
Security: backported fix for CVE-2019-20503: Out of bounds read in usersctplib. #22986
Security: backported fix for CVE-2020-6422: Use after free in WebGL. #23017
Security: backported fix for CVE-2020-6423: Use after free in audio. #23048
Security: backported fix for CVE-2020-6427: Use after free in audio. #23015
Security: backported fix for CVE-2020-6428: Use after free in audio. #23013
Security: backported fix for CVE-2020-6429: Use after free in audio. #23011
Security: backported fix for CVE-2020-6449: Use after free in audio. #23009
Security: backported fix for use-after-poison in WebAudio (crbug.com/1023810). #22869
Security: backported fix for use-after-poison in WebAudio. #22943
","Release Notes for v7.2.2
Fixes
Fixed a potential crash on invalid zoomFactor values when setting the zoom factor of a webpage. #22710
Fixed an issue with maximizable state persistence of BrowserWindows on macOS. #23019
Fixed an issue with possible creation of a messageBox which cannot be dismissed on macOS. #23089
Fixed an occasional crash when closing all BrowserWindows. #23024
Security: Backported fix for CVE-2020-6426: inappropriate implementation in V8. #23043
Security: backported a fix for crbug.com/1065094. #23059
Security: backported fix for a potential buffer overrun in WebRTC audio encoding. #23037
Security: backported fix for site isolation bypass in dedicated workers. #23040
Security: backported the fix to CVE-2020-6452: potential container-overflow in MediaStream mojo. #23044
Other Changes
Security: Backport fix for buffer underflow in DWrite. #22979
Security: Backported fix for use after free in file chooser. #22981
Security: backport fix for CVE-2020-6451: Use after free in WebAudio. #22945
Security: backport fix for use after free in VideoEncodeAccelerator. #22983
Security: backported fix for CVE-2019-20503: Out of bounds read in usersctplib. #22986
Security: backported fix for CVE-2020-6422: Use after free in WebGL. #23017
Security: backported fix for CVE-2020-6423: Use after free in audio. #23048
Security: backported fix for CVE-2020-6427: Use after free in audio. #23015
Security: backported fix for CVE-2020-6428: Use after free in audio. #23013
Security: backported fix for CVE-2020-6429: Use after free in audio. #23011
Security: backported fix for CVE-2020-6449: Use after free in audio. #23009
Security: backported fix for use-after-poison in WebAudio (crbug.com/1023810). #22869
Security: backported fix for use-after-poison in WebAudio. #22943"
671,"Release Notes for v6.1.10
Fixes

Security: Backported fix for CVE-2020-6426: inappropriate implementation in V8. #23046
Security: backported a fix for crbug.com/1065094. #23060
Security: backported fix for a potential buffer overrun in WebRTC audio encoding. #23038
Security: backported the fix to CVE-2020-6452: potential container-overflow in MediaStream mojo. #23045

Other Changes

Security: Backport fix for buffer underflow in DWrite. #22980
Security: Backport fix for use after free in http cache. #22978
Security: Backported fix for use after free in file chooser. #22982
Security: backport fix for CVE-2020-6451: Use after free in WebAudio. #22946
Security: backported fix for CVE-2019-20503: Out of bounds read in usersctplib. #22987
Security: backported fix for CVE-2020-6428: Use after free in audio. #23014
Security: backported fix for CVE-2020-6429: Use after free in audio. #23012
Security: backported fix for CVE-2020-6449: Use after free in audio. #23010
Security: backported fix for use-after-poison in WebAudio (crbug.com/1023810). #22870
","Release Notes for v6.1.10
Fixes
Security: Backported fix for CVE-2020-6426: inappropriate implementation in V8. #23046
Security: backported a fix for crbug.com/1065094. #23060
Security: backported fix for a potential buffer overrun in WebRTC audio encoding. #23038
Security: backported the fix to CVE-2020-6452: potential container-overflow in MediaStream mojo. #23045
Other Changes
Security: Backport fix for buffer underflow in DWrite. #22980
Security: Backport fix for use after free in http cache. #22978
Security: Backported fix for use after free in file chooser. #22982
Security: backport fix for CVE-2020-6451: Use after free in WebAudio. #22946
Security: backported fix for CVE-2019-20503: Out of bounds read in usersctplib. #22987
Security: backported fix for CVE-2020-6428: Use after free in audio. #23014
Security: backported fix for CVE-2020-6429: Use after free in audio. #23012
Security: backported fix for CVE-2020-6449: Use after free in audio. #23010
Security: backported fix for use-after-poison in WebAudio (crbug.com/1023810). #22870"
672,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@9.0.0-beta.16.
# Release Notes for v9.0.0-beta.16
Fixes

Fixed a crash that could happen when attempting to access a session during shutdown. #23068
Fixed an issue with maximizable state persistence of BrowserWindows on macOS. #23021
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@9.0.0-beta.16.
Release Notes for v9.0.0-beta.16
Fixes
Fixed a crash that could happen when attempting to access a session during shutdown. #23068
Fixed an issue with maximizable state persistence of BrowserWindows on macOS. #23021"
673,"Release Notes for v8.2.2
Fixes

Fixed a crash that could happen when attempting to access a session during shutdown. #23069
Fixed an issue with maximizable state persistence of BrowserWindows on macOS. #23020
Fixed an issue with possible creation of a messageBox which cannot be dismissed on macOS. #23088
Fixed an occasional crash when closing all BrowserWindows. #23022
Fixed occasional WebFrame crashes caused by removed iframes. #22975

Other Changes

Security: backported fix for CVE-2020-6423: Use after free in audio. #23047
","Release Notes for v8.2.2
Fixes
Fixed a crash that could happen when attempting to access a session during shutdown. #23069
Fixed an issue with maximizable state persistence of BrowserWindows on macOS. #23020
Fixed an issue with possible creation of a messageBox which cannot be dismissed on macOS. #23088
Fixed an occasional crash when closing all BrowserWindows. #23022
Fixed occasional WebFrame crashes caused by removed iframes. #22975
Other Changes
Security: backported fix for CVE-2020-6423: Use after free in audio. #23047"
674,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@9.0.0-beta.15.
# Release Notes for v9.0.0-beta.15
Fixes

Fixed an occasional crash when closing all BrowserWindows. #23023
Fixed occasional WebFrame crashes caused by removed iframes. #22949
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@9.0.0-beta.15.
Release Notes for v9.0.0-beta.15
Fixes
Fixed an occasional crash when closing all BrowserWindows. #23023
Fixed occasional WebFrame crashes caused by removed iframes. #22949"
675,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@9.0.0-beta.14.
# Release Notes for v9.0.0-beta.14
Other Changes

Updated Chromium to 82.0.4085.27. #22932
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@9.0.0-beta.14.
Release Notes for v9.0.0-beta.14
Other Changes
Updated Chromium to 82.0.4085.27. #22932"
676,"Release Notes for v8.2.1
Fixes

Accessing the screen module before the ready event no longer makes it impossible to access the screen module. #22913
Added workaround for nativeWindowOpen hang. #22749
Enable offscreen rendering. #22431
Fixed an issue where native macOS dialogs sometimes failed to show after modal close. #22889
Fixed issue where prefers-color-scheme would not be updated / set correctly when your OS was in dark mode. #22901

Other Changes

Updated Chromium to 80.0.3987.163. #22931
","Release Notes for v8.2.1
Fixes
Accessing the screen module before the ready event no longer makes it impossible to access the screen module. #22913
Added workaround for nativeWindowOpen hang. #22749
Enable offscreen rendering. #22431
Fixed an issue where native macOS dialogs sometimes failed to show after modal close. #22889
Fixed issue where prefers-color-scheme would not be updated / set correctly when your OS was in dark mode. #22901
Other Changes
Updated Chromium to 80.0.3987.163. #22931"
677,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@9.0.0-beta.13.
# Release Notes for v9.0.0-beta.13
Fixes

Accessing the screen module before the ready event no longer makes it impossible to access the screen module. #22912
Fixed webRequest module not working with file:// protocol. #22919
Fixed an issue where native macOS dialogs sometimes failed to show after modal close. #22890
Fixed crash in network service process when using protocol.registerSchemeAsPrivileged api. #22917
Fixed issue where prefers-color-scheme would not be updated / set correctly when your OS was in dark mode. #22900
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@9.0.0-beta.13.
Release Notes for v9.0.0-beta.13
Fixes
Accessing the screen module before the ready event no longer makes it impossible to access the screen module. #22912
Fixed webRequest module not working with file:// protocol. #22919
Fixed an issue where native macOS dialogs sometimes failed to show after modal close. #22890
Fixed crash in network service process when using protocol.registerSchemeAsPrivileged api. #22917
Fixed issue where prefers-color-scheme would not be updated / set correctly when your OS was in dark mode. #22900"
678,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@9.0.0-beta.12.
# Release Notes for v9.0.0-beta.12
Fixes

Fixed a use-after-free error that could happen if a Tray was destroyed while showing a custom context menu. #22855
Fixed possible freeze on window with disabled background throttling. #22852
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@9.0.0-beta.12.
Release Notes for v9.0.0-beta.12
Fixes
Fixed a use-after-free error that could happen if a Tray was destroyed while showing a custom context menu. #22855
Fixed possible freeze on window with disabled background throttling. #22852"
679,"Release Notes for v8.2.0
Features



Added new useSessionCookies flag to net requests to allow them to use the session cookie store.

Fixed issue where SameSite cookies would not be attached to outgoing requests from the net module. #22807





Added disableDialogs option to WebPreferences. #22665

Fixes

Fixed a crash that could occur when sending arrays over IPC. #22758
Fixed a potential crash on invalid zoomFactor values when setting the zoom factor of a webpage. #22709
Fixed issue where mutating the global Object prototype could cause internal Electron logic to throw errors. #22728
Returns a more graceful error when adding duplicate items to a single TouchBar instance. #22645

Other Changes

Updated Chromium to 80.0.3987.158. #22742
","Release Notes for v8.2.0
Features
Added new useSessionCookies flag to net requests to allow them to use the session cookie store.
Fixed issue where SameSite cookies would not be attached to outgoing requests from the net module. #22807
Added disableDialogs option to WebPreferences. #22665
Fixes
Fixed a crash that could occur when sending arrays over IPC. #22758
Fixed a potential crash on invalid zoomFactor values when setting the zoom factor of a webpage. #22709
Fixed issue where mutating the global Object prototype could cause internal Electron logic to throw errors. #22728
Returns a more graceful error when adding duplicate items to a single TouchBar instance. #22645
Other Changes
Updated Chromium to 80.0.3987.158. #22742"
680,"Release Notes for v7.2.1
Fixes

Reverted ""fix: better window hierarchy checks"". cac3884d
","Release Notes for v7.2.1
Fixes
Reverted ""fix: better window hierarchy checks"". cac3884d"
681,"Release Notes for v7.2.0
Features



Added new useSessionCookies flag to net requests to allow them to use the session cookie store.

Fixed issue where SameSite cookies would not be attached to outgoing requests from the net module. #22808





Exposing methods required by capturing a hidden webContents. #21894

Fixes

Better window hierarchy checks. c16c4c25
Fixed ARIA role=""tree"" for macOS VoiceOver. #22424
Fixed a crash that could occur when sending arrays over IPC. #22757
Fixed a potential crash on devices which had not connected any printers to their network. #22517
Fixed an occasional segfault with modal windows being closed or destroyed. #22540
Fixed issue where mutating the global Object prototype could cause internal Electron logic to throw errors. #22729
Fixed some properties not working in webview tags. #22512

Unknown

Reset version for 7.2.0. ace32163
","Release Notes for v7.2.0
Features
Added new useSessionCookies flag to net requests to allow them to use the session cookie store.
Fixed issue where SameSite cookies would not be attached to outgoing requests from the net module. #22808
Exposing methods required by capturing a hidden webContents. #21894
Fixes
Better window hierarchy checks. c16c4c25
Fixed ARIA role=""tree"" for macOS VoiceOver. #22424
Fixed a crash that could occur when sending arrays over IPC. #22757
Fixed a potential crash on devices which had not connected any printers to their network. #22517
Fixed an occasional segfault with modal windows being closed or destroyed. #22540
Fixed issue where mutating the global Object prototype could cause internal Electron logic to throw errors. #22729
Fixed some properties not working in webview tags. #22512
Unknown
Reset version for 7.2.0. ace32163"
682,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@9.0.0-beta.10.
# Release Notes for v9.0.0-beta.10
Features

Added disableDialogs option to WebPreferences. #22664

Fixes

Fixed a potential crash on invalid zoomFactor values when setting the zoom factor of a webpage. #22708
Fixed an issue where changing theme on macOS would break window maximizability state. #22724
Fixed issue where mutating the global Object prototype could cause internal Electron logic to throw errors. #22727
Limited manipulation of custom spellchecker dictionary words to persistent sessions. #22683
Updated Chromium to 82.0.4085.10. #22506
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@9.0.0-beta.10.
Release Notes for v9.0.0-beta.10
Features
Added disableDialogs option to WebPreferences. #22664
Fixes
Fixed a potential crash on invalid zoomFactor values when setting the zoom factor of a webpage. #22708
Fixed an issue where changing theme on macOS would break window maximizability state. #22724
Fixed issue where mutating the global Object prototype could cause internal Electron logic to throw errors. #22727
Limited manipulation of custom spellchecker dictionary words to persistent sessions. #22683
Updated Chromium to 82.0.4085.10. #22506"
683,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@9.0.0-beta.9.
# Release Notes for v9.0.0-beta.9
Fixes

Fixed ARIA role=""tree"" for macOS VoiceOver. #22421
Returns a more graceful error when adding duplicate items to a single TouchBar instance. #22644

Other Changes

Fixed broken Views API builds. #22642
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@9.0.0-beta.9.
Release Notes for v9.0.0-beta.9
Fixes
Fixed ARIA role=""tree"" for macOS VoiceOver. #22421
Returns a more graceful error when adding duplicate items to a single TouchBar instance. #22644
Other Changes
Fixed broken Views API builds. #22642"
684,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@9.0.0-beta.7.
# Release Notes for v9.0.0-beta.7
Features

Added ability to set and get title bar traffic light position on the fly (macOS). #22566
Added new spellcheck-dictionary-* events on the `session module to help track and debug dictionary initialization. #22556
Allow an optional callback parameter for WebFrame.executeJavaScript* methods, which is called synchronously unless the target context is paused. #22501

Fixes

DeviceId from navigator.mediaDevices.enumerateDevices is now consistent across reloads. #22567
Fixed issue where repositioned traffic lights would be in the wrong position after the user switches OS theme. #22560

Unknown

Added chrome.i18n extension API. #22570
Added chrome.tabs.connect extension API for background pages. #22549
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@9.0.0-beta.7.
Release Notes for v9.0.0-beta.7
Features
Added ability to set and get title bar traffic light position on the fly (macOS). #22566
Added new spellcheck-dictionary- events on the `session module to help track and debug dictionary initialization. #22556
Allow an optional callback parameter for WebFrame.executeJavaScript methods, which is called synchronously unless the target context is paused. #22501
Fixes
DeviceId from navigator.mediaDevices.enumerateDevices is now consistent across reloads. #22567
Fixed issue where repositioned traffic lights would be in the wrong position after the user switches OS theme. #22560
Unknown
Added chrome.i18n extension API. #22570
Added chrome.tabs.connect extension API for background pages. #22549"
685,"Release Notes for v8.1.1
Fixes

DeviceId from navigator.mediaDevices.enumerateDevices is now consistent across reloads. #22569

Other Changes

Updated Chromium to 80.0.3987.141. #22593
","Release Notes for v8.1.1
Fixes
DeviceId from navigator.mediaDevices.enumerateDevices is now consistent across reloads. #22569
Other Changes
Updated Chromium to 80.0.3987.141. #22593"
686,"Release Notes for v8.1.0
Features

Added ability to set and get title bar traffic light position on the fly (macOS). #22564
Added new spellcheck-dictionary-* events on the `session module to help track and debug dictionary initialization. #22558
Allow some NODE_OPTIONs in packaged apps. #22539

Fixes

Fixed process.getProcessMemoryInfo() return wrong private value on macOS. #22496
Fixed a potential crash on devices which had not connected any printers to their network. #22518
Fixed an occasional segfault with modal windows being closed or destroyed. #22481
Fixed issue where repositioned traffic lights would be in the wrong position after the user switches OS theme. #22559
Fixed some properties not working in webview tags. #22510
MacOS VoiceOver is now able to find its way back into web contents after it navigated ""out"" of an application. #22470
Removed assurance of object identity equality from the contextBridge as it is incapable of handling mutations. #22557
Updating the document title while in fullscreen with custom traffic light positions no longer makes the traffic lights invisible. #22508

Other Changes

Updated Chromium to 80.0.3987.137. #22548
","Release Notes for v8.1.0
Features
Added ability to set and get title bar traffic light position on the fly (macOS). #22564
Added new spellcheck-dictionary-* events on the `session module to help track and debug dictionary initialization. #22558
Allow some NODE_OPTIONs in packaged apps. #22539
Fixes
Fixed process.getProcessMemoryInfo() return wrong private value on macOS. #22496
Fixed a potential crash on devices which had not connected any printers to their network. #22518
Fixed an occasional segfault with modal windows being closed or destroyed. #22481
Fixed issue where repositioned traffic lights would be in the wrong position after the user switches OS theme. #22559
Fixed some properties not working in webview tags. #22510
MacOS VoiceOver is now able to find its way back into web contents after it navigated ""out"" of an application. #22470
Removed assurance of object identity equality from the contextBridge as it is incapable of handling mutations. #22557
Updating the document title while in fullscreen with custom traffic light positions no longer makes the traffic lights invisible. #22508
Other Changes
Updated Chromium to 80.0.3987.137. #22548"
687,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@9.0.0-beta.6.
# Release Notes for v9.0.0-beta.6
Features

Added session.removeWordFromSpellCheckerDictionary API to remove custom words in the dictionary. #22368

Fixes

Enable offscreen rendering. #22425
Fixed a potential crash on devices which had not connected any printers to their network. #22519
Fixed some properties not working in webview tags. #22511
Removed assurance of object identity equality from the contextBridge as it is incapable of handling mutations. #22525
Updating the document title while in fullscreen with custom traffic light positions no longer makes the traffic lights invisible. #22509

Other Changes

None. #22479
Updated Chromium to 82.0.4058.2. #22198
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@9.0.0-beta.6.
Release Notes for v9.0.0-beta.6
Features
Added session.removeWordFromSpellCheckerDictionary API to remove custom words in the dictionary. #22368
Fixes
Enable offscreen rendering. #22425
Fixed a potential crash on devices which had not connected any printers to their network. #22519
Fixed some properties not working in webview tags. #22511
Removed assurance of object identity equality from the contextBridge as it is incapable of handling mutations. #22525
Updating the document title while in fullscreen with custom traffic light positions no longer makes the traffic lights invisible. #22509
Other Changes
None. #22479
Updated Chromium to 82.0.4058.2. #22198"
688,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@9.0.0-beta.5.
# Release Notes for v9.0.0-beta.5
Fixes

Fixed session.setSpellCheckerDictionaryDownloadURL to append the dictionary name at the end of requests instead of requesting the same URL for all dictionaries. #22385
Fixed webRequest not working for CORS requests. #22468
Fixed an occasional segfault with modal windows being closed or destroyed. #22445
Fixed issue where dictionary files for the spellchecker would be downloaded to the app install directory instead of the user data directory. #22447
MacOS VoiceOver is now able to find its way back into web contents after it navigated ""out"" of an application. #22469
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@9.0.0-beta.5.
Release Notes for v9.0.0-beta.5
Fixes
Fixed session.setSpellCheckerDictionaryDownloadURL to append the dictionary name at the end of requests instead of requesting the same URL for all dictionaries. #22385
Fixed webRequest not working for CORS requests. #22468
Fixed an occasional segfault with modal windows being closed or destroyed. #22445
Fixed issue where dictionary files for the spellchecker would be downloaded to the app install directory instead of the user data directory. #22447
MacOS VoiceOver is now able to find its way back into web contents after it navigated ""out"" of an application. #22469"
689,"Release Notes for v8.0.3
Fixes

Fixed ARIA role=""tree"" for macOS VoiceOver. #22423
Fixed issue where dictionary files for the spellchecker would be downloaded to the app install directory instead of the user data directory. #22448

Other Changes

Updated Chromium to 80.0.3987.134. #22463
Updated g_swizzle_imk_input_session for new SDK. a315283f
","Release Notes for v8.0.3
Fixes
Fixed ARIA role=""tree"" for macOS VoiceOver. #22423
Fixed issue where dictionary files for the spellchecker would be downloaded to the app install directory instead of the user data directory. #22448
Other Changes
Updated Chromium to 80.0.3987.134. #22463
Updated g_swizzle_imk_input_session for new SDK. a315283f"
690,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@9.0.0-beta.4.
# Release Notes for v9.0.0-beta.4
Breaking Changes

Changed the default value of app.allowRendererProcessReuse to true, this will prevent loading of non-context-aware native modules in renderer processes.  See #18397 for more information on this change. #22401

Features

Added session.serviceWorkerContext API to access basic service worker info and receive console logs from service workers. #22313

Fixes

Backported V8 patch to fix bug in type inference. #22426
Fixed an issue with safeDialog preferences not being passed properly. #22378
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@9.0.0-beta.4.
Release Notes for v9.0.0-beta.4
Breaking Changes
Changed the default value of app.allowRendererProcessReuse to true, this will prevent loading of non-context-aware native modules in renderer processes.  See #18397 for more information on this change. #22401
Features
Added session.serviceWorkerContext API to access basic service worker info and receive console logs from service workers. #22313
Fixes
Backported V8 patch to fix bug in type inference. #22426
Fixed an issue with safeDialog preferences not being passed properly. #22378"
691,"Release Notes for v7.1.14
Fixes

Backported V8 patch to fix bug in type inference. #22428
Fixed ""will-navigate"" event not being emitted for sandboxed contents. #22329
Fixed Electron apps getting rejected to Mac App Store. #22299
Fixed an OOB access in ReadableStream::Close (https://crbug.com/1045931). #22435
Fixed an integer overflow crash in ICU (https://crbug.com/1044570). #22420
Fixed an issue with safeDialog preferences not being passed properly. #22376
Fixed crash with seccomp-bpf sandbox on linux and glibc 2.31. #22338
","Release Notes for v7.1.14
Fixes
Backported V8 patch to fix bug in type inference. #22428
Fixed ""will-navigate"" event not being emitted for sandboxed contents. #22329
Fixed Electron apps getting rejected to Mac App Store. #22299
Fixed an OOB access in ReadableStream::Close (link). #22435
Fixed an integer overflow crash in ICU (link). #22420
Fixed an issue with safeDialog preferences not being passed properly. #22376
Fixed crash with seccomp-bpf sandbox on linux and glibc 2.31. #22338"
692,"Release Notes for v6.1.9
Fixes

Backported V8 patch to fix bug in type inference. #22429
Fixed an OOB access in ReadableStream::Close (https://crbug.com/1045931). #22436
Fixed an integer overflow crash in ICU (https://crbug.com/1044570). #22422
Fixed crash with seccomp-bpf sandbox on linux and glibc 2.31. #22339
","Release Notes for v6.1.9
Fixes
Backported V8 patch to fix bug in type inference. #22429
Fixed an OOB access in ReadableStream::Close (link). #22436
Fixed an integer overflow crash in ICU (link). #22422
Fixed crash with seccomp-bpf sandbox on linux and glibc 2.31. #22339"
693,"Release Notes for v8.0.2
Fixes

Fixed ""will-navigate"" event not being emitted for sandboxed contents. #22328
Fixed Electron apps getting rejected to Mac App Store. #22298
Fixed session.setSpellCheckerDictionaryDownloadURL to append the dictionary name at the end of requests instead of requesting the same URL for all dictionaries. #22384
Fixed an issue where TypeError occurred on initializing CrashReporter. #22344
Fixed an issue with safeDialog preferences not being passed properly. #22377
Fixed issue where navigating with the mouse buttons 4/5 would result in full page loads instead of in-page popstate navigations. #22205
Removed unneccessary  breakpad_symbols directory from the dsym zip file. #22218
Reverted a change to the name of the NSPrincipalClass, which could cause issues with protocol handlers on macOS (e.g. my-app://). #22326

Documentation

Documentation changes: #22265
","Release Notes for v8.0.2
Fixes
Fixed ""will-navigate"" event not being emitted for sandboxed contents. #22328
Fixed Electron apps getting rejected to Mac App Store. #22298
Fixed session.setSpellCheckerDictionaryDownloadURL to append the dictionary name at the end of requests instead of requesting the same URL for all dictionaries. #22384
Fixed an issue where TypeError occurred on initializing CrashReporter. #22344
Fixed an issue with safeDialog preferences not being passed properly. #22377
Fixed issue where navigating with the mouse buttons 4/5 would result in full page loads instead of in-page popstate navigations. #22205
Removed unneccessary  breakpad_symbols directory from the dsym zip file. #22218
Reverted a change to the name of the NSPrincipalClass, which could cause issues with protocol handlers on macOS (e.g. my-app://). #22326
Documentation
Documentation changes: #22265"
694,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@9.0.0-beta.3.
# Release Notes for v9.0.0-beta.3
Features

Added support for the chrome.extension.getBackgroundPage API. #22177

Fixes

Fixed ""will-navigate"" event not being emitted for sandboxed contents. #22327
Fixed Electron apps getting rejected to Mac App Store. #22354
Fixed an issue where TypeError occurred on initializing CrashReporter. #22322
Fixed issue where navigating with the mouse buttons 4/5 would result in full page loads instead of in-page popstate navigations. #22204
Removed unneccessary  breakpad_symbols directory from the dsym zip file. #22221
Reverted a change to the name of the NSPrincipalClass, which could cause issues with protocol handlers on macOS (e.g. my-app://). #22325

Other Changes

Fixed an issue that caused PDFs to load as a grey page. #22366

Documentation

Documentation changes: #22264
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@9.0.0-beta.3.
Release Notes for v9.0.0-beta.3
Features
Added support for the chrome.extension.getBackgroundPage API. #22177
Fixes
Fixed ""will-navigate"" event not being emitted for sandboxed contents. #22327
Fixed Electron apps getting rejected to Mac App Store. #22354
Fixed an issue where TypeError occurred on initializing CrashReporter. #22322
Fixed issue where navigating with the mouse buttons 4/5 would result in full page loads instead of in-page popstate navigations. #22204
Removed unneccessary  breakpad_symbols directory from the dsym zip file. #22221
Reverted a change to the name of the NSPrincipalClass, which could cause issues with protocol handlers on macOS (e.g. my-app://). #22325
Other Changes
Fixed an issue that caused PDFs to load as a grey page. #22366
Documentation
Documentation changes: #22264"
695,"Release Notes for v6.1.8
Fixes

FixBrowserWindow.setFocusable(true) not working on Windows. #21856
Fixed a crash that would occur when Notifications were closed in concert with app termination. #21718
Fixed a potential issue with active Menu garbage collection. #22152
Fixed an issue that could prevent communication between a sandboxed child window opened with nativeWindowOpen: false and an unsandboxed parent window. Also fixed document.visibilityState not working in sandboxed <webview>. #21697
Fixed an issue where window.print() only worked once on a single BrowserWindow. #21913
Fixed an issue where the credits set in About Panel credits were not dark mode aware on macOS. #21925
Fixed bug where the close event would not emit upon closing modal window on macOS. #22125
Fixed crash when restoring minimized hidden window on Windows. #22153
Fixed fuzzy font rendering when hot-plugging displays on macOS Catalina. #21878
Fixed incorrect button highlighting when defaultId is passed for dialog message boxes. #22150
Fixed media-specific globalShortcuts not working on macOS. #21690
Fixed memory leak when using javascript generator functions. #21774
Removed unneccessary  breakpad_symbols directory from the dsym zip file. #22219

Other Changes

Updated crashReporter to throw an error for getLastCrashReport if crashReporter not started. #21684
","Release Notes for v6.1.8
Fixes
FixBrowserWindow.setFocusable(true) not working on Windows. #21856
Fixed a crash that would occur when Notifications were closed in concert with app termination. #21718
Fixed a potential issue with active Menu garbage collection. #22152
Fixed an issue that could prevent communication between a sandboxed child window opened with nativeWindowOpen: false and an unsandboxed parent window. Also fixed document.visibilityState not working in sandboxed . #21697
Fixed an issue where window.print() only worked once on a single BrowserWindow. #21913
Fixed an issue where the credits set in About Panel credits were not dark mode aware on macOS. #21925
Fixed bug where the close event would not emit upon closing modal window on macOS. #22125
Fixed crash when restoring minimized hidden window on Windows. #22153
Fixed fuzzy font rendering when hot-plugging displays on macOS Catalina. #21878
Fixed incorrect button highlighting when defaultId is passed for dialog message boxes. #22150
Fixed media-specific globalShortcuts not working on macOS. #21690
Fixed memory leak when using javascript generator functions. #21774
Removed unneccessary  breakpad_symbols directory from the dsym zip file. #22219
Other Changes
Updated crashReporter to throw an error for getLastCrashReport if crashReporter not started. #21684"
696,"Release Notes for v7.1.13
Fixes

Fixed webRequest API not working with WebSockets. #22141
Fixed a crash in webContents.print() with custom print margins. #22187
Fixed a potential issue with active Menu garbage collection. #22151
Fixed an issue where undefined was printed from console.log on Window when no arguments were passed. #22173
Removed unneccessary  breakpad_symbols directory from the dsym zip file. #22220

Other Changes

Fixed a potential crash on faulty deviceNames in webContents.print(). #22012

Documentation

Documentation changes: #22266
","Release Notes for v7.1.13
Fixes
Fixed webRequest API not working with WebSockets. #22141
Fixed a crash in webContents.print() with custom print margins. #22187
Fixed a potential issue with active Menu garbage collection. #22151
Fixed an issue where undefined was printed from console.log on Window when no arguments were passed. #22173
Removed unneccessary  breakpad_symbols directory from the dsym zip file. #22220
Other Changes
Fixed a potential crash on faulty deviceNames in webContents.print(). #22012
Documentation
Documentation changes: #22266"
697,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@9.0.0-beta.2.
# Release Notes for v9.0.0-beta.2
Features

Added session.listWordsFromSpellCheckerDictionary API to list custom words in the dictionary. #22128
Enable pdf viewer. 0e318260

Fixes

Fixed webRequest API not working with WebSockets. #22133
Fixed a crash in webContents.print() with custom print margins. #22185
Fixed an issue where undefined was printed from console.log on Window when no arguments were passed. #22171
Fixed bug that occurred when using trafficLightPosition API in RTL mode. #22163
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@9.0.0-beta.2.
Release Notes for v9.0.0-beta.2
Features
Added session.listWordsFromSpellCheckerDictionary API to list custom words in the dictionary. #22128
Enable pdf viewer. 0e318260
Fixes
Fixed webRequest API not working with WebSockets. #22133
Fixed a crash in webContents.print() with custom print margins. #22185
Fixed an issue where undefined was printed from console.log on Window when no arguments were passed. #22171
Fixed bug that occurred when using trafficLightPosition API in RTL mode. #22163"
698,"Release Notes for v8.0.1
Fixes

Fixed webRequest API not working with WebSockets. #22134
Fixed a crash in webContents.print() with custom print margins. #22186
Fixed a crash that could occur when visiting HTTPS sites with invalid certificates. #22124
Fixed an issue where undefined was printed from console.log on Window when no arguments were passed. #22172
Fixed bug that occurred when using trafficLightPosition API in RTL mode. #22162
Fixed flash plugin not working. #22110
Fixed issue where renderers could crash during GC when using the contextBridge module. #22114
Use system default printer if none is provided. #22011

Other Changes

None. #22036, #22149
","Release Notes for v8.0.1
Fixes
Fixed webRequest API not working with WebSockets. #22134
Fixed a crash in webContents.print() with custom print margins. #22186
Fixed a crash that could occur when visiting HTTPS sites with invalid certificates. #22124
Fixed an issue where undefined was printed from console.log on Window when no arguments were passed. #22172
Fixed bug that occurred when using trafficLightPosition API in RTL mode. #22162
Fixed flash plugin not working. #22110
Fixed issue where renderers could crash during GC when using the contextBridge module. #22114
Use system default printer if none is provided. #22011
Other Changes
None. #22036, #22149"
699,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@9.0.0-beta.1.
# Release Notes for v9.0.0-beta.1
Breaking Changes

IPC between main and renderer processes now uses the Structured Clone Algorithm. #20214
Removed the visibleOnFullscreen option in setVisibleOnAllWorkspaces.. #21706
Split shell.openItem(path) into synchronous and asynchronous methods. #20682

Features

Added BrowserWindow.moveAbove(mediaSourceId). #18926
Added GUID parameter to Tray API to avoid system tray icon demotion on Windows. #21891
Added --enable-api-filtering-logging command-line switch, which enables caller stack logging for desktopCapturer and remote APIs that can be blocked or filtered. #20335
Added app.getApplicationNameForProtocol() API. #20399
Added mouse-down and mouse-up events to the Tray on macOS. #21795
Added nativeTheme.themeSource to allow apps to override Chromium and the OS's theme choice. #19960
Added screen to systemPreferences.getMediaAccessStatus() for detecting the new macOS Catalina permissions. #20764
Added session.addWordToSpellCheckerDictionary API to support custom words in the. #21266
Added session.downloadURL() allowing to trigger downloads without a BrowserWindow. #19889
Added timeoutType property to allows users to set timeout type for Linux  and Windows notifications. #20153
Added trafficLightPosition option in BrowserWindow API to allow custom positioning of traffic lights. #21781
Added tray.closeContextMenu() to allow programmatic closure of Tray menus. #21807
Added tray.focus(), which returns focus to the taskbar notification area. #19548
Added tray.removeBalloon(), which removes an already displayed balloon notification. #19547
Added validatedCertificate to the setCertificateVerifyProc callback to assist with certificate pinning implementations. #21890
Added win.accessibleTitle property to be able to augment the window title for the screen readers. #19698
Added win.getBackgroundColor() for BrowserWindow on macOS. #21448
Added a missing fiddle - migrates the 'Launching an app from URL...' fiddle from electron-api-demos. #20718
Added ability to inspect specific shared workers: contents.getAllSharedWorkers() / contents.inspectSharedWorkerById(workerId). #20389
Added about panel customization on Windows. #19420
Added an urgency property to allow customization of Linux-based notifications. #20152
Added new nativeTheme API to read and respond to changes in the OS's theme and color scheme. #19656
Added options to enable customization of print page headers and footers. #19688
Added property customization to save dialogs. #19672
Added support for HTTP preconnect resource hints. #18671
Added support for picture-in-picture mode for video elements. #17686
Added support for the built-in spellchecker.  We will use the OS spellchecker on macOS and hunspell on all other platforms. #20692
Added the ability to prevent documents from being added to recent documents on Windows in open dialogs. #19669
Added the ability to set app activation policy on macOS. #21983
Added the ability to specify pageSize when printing with webContents.print(). #22014
Added the support of fitToPageEnabled and scaleFactor in  WebContents.printToPDF(). #20436
Added tracing instrumentation to WebContents IPC methods, available with the contentTracing category ""electron"". #21404
Adds a fiddle to demo how to open external links and how to open all outbound links. #20763
Adds ability to disable / enable a TouchBarButton. #20945
Allowed some specific options to be passed via NODE_OPTIONS to packaged apps. #20857
Began issuing a deprecation warning when the 'remote' module is used when enableRemoteModule: true isn't explicitly specified. See https://github.com/electron/electron/issue/21408 for more details. #21546
Changed NODE_OPTIONs to allow --http-parser to be used in packaged apps. #21694
Deprecated <webview>.getWebContents() as it depends on the remote module. #20726
Enable macOS users to fallback to item removal when when shell.moveItemToTrash fails. #19700
Enabled V8 pointer compression. #21468
Explicitly allow product restoration to an app with. #21461
Exposed executeJavaScriptInIsolatedWorld on the webContents API. #21190
Exposed more customizable options for contents.printToPDF() and fixed a potential for native crash. #21906
Exposing methods required by capturing a hidden webContents。. #21679
Fixed Wunderlist app not loading. #17742
Implemented 'will-move' event on BrowserWindow on macOS. #19641
Implemented win.setAspectRatio() on Linux. #19516
Improved TouchBarButton and TouchBarLabel a11y with accessibilityLabel property. #20454
Improved the returned types and descriptions for the PrinterInfo API structure returned by webContents.getPrinters. #21081
New options added to tray.displayBalloon(): iconType, largeIcon, noSound and respectQuietTime. #19544
Objects not serializable using Structured Clone will now cause an error to be thrown when attempting to send them across IPC. #21560, #21560
Removed the deprecated 'setLayoutZoomLevelLimits' method. #21383
Switched to a native-backed implementation of Chrome Extensions. #21814

Fixes

Added name of module to context-aware deprecation warning (#18397). #21952
DOM storage quota enforcement re-enabled, but limit changed from 10MiB to 100MiB. #20899
Don't destroy active menus created as local objects in javascript. #19427
Exposed setMenuBarVisibility on BrowserWindow again. #19557
Fixed Linux console warning about gtk_disable_setlocale(). #19986
Fixed Linux desktop tray icon size regression introduced in the 8.0 betas. #21904
Fixed Node.js' worker_threads in ELECTRON_RUN_AS_NODE. #20416
Fixed POST-ing HTML forms with target=_blank. #21469
Fixed BrowserWindow.fromWebContents() to return null when no window is found for consistency with other APIs. #19983
Fixed Tray.setContextMenu not updating the menu on Linux. #21883
Fixed cookies.get not working when url is not specified in filter. #20471
Fixed cookies.set not working correctly when name or expirationDate is omitted. #21454
Fixed shell.openExternal() option workingDirectory not working with Unicode characters. #20879
Fixed a bug where an unresizable window would shrink when restored after being minimized on Windows. #19886
Fixed a bug where sometimes a ~10px white border would be added to fullscreen windows on Windows. #19883
Fixed a crash in Node.js initialization in renderer processes. #20684
Fixed a crash in webContents.print() caused by infinite recursion. #21889
Fixed a crash in window.print(). #19690
Fixed a crash on <input type=""file""> dialog cancellation. #19897
Fixed a crash on manual print cancellation as well as an issue with deviceName not working. #19598
Fixed a crash that could occur when calling crashReporter.getUploadedReports. #20428
Fixed a crash that could occur when visiting HTTPS sites with invalid certificates. #21976
Fixed a label mismatch on open and save dialogs on GTK. #20861
Fixed a potential crash on faulty deviceNames in webContents.print(). #21946
Fixed a race condition that occurred when using protocol.registerStreamProtocol. #19811
Fixed a regression in the recentDocuments MenuItem role on macOS. #20398
Fixed an issue in the remote module which could cause the name of the Object constructor to be overwritten globally. #20637
Fixed an issue that prevented setuid binaries from being launched from the renderer process on Linux. #19953
Fixed an issue where app.getPath('logs') would throw an error if the logs path was not previously set. #19653
Fixed an issue where menu.closePopup() would have no effect if called too soon after menu.popup(). #20114
Fixed an issue where net requests with redirection mode 'error' could incorrectly follow a redirect. #20686
Fixed an issue where webContents.printToPDF failed to properly generate the PDF document. #21783
Fixed an issue where a call to child_process.fork() would set ELECTRON_RUN_AS_NODE in the main process. #19742
Fixed an issue where extension URLs were passing an incorrectly formatted startPage. #21711
Fixed an issue where microtasks could sometimes be scheduled too eagerly, causing crashes when invoking Electron APIs during promises in certain situations. #20303
Fixed an issue where sites using ShadowDOMV0, CustomElementsV0, or HTMLImports would not load properly. #21858
Fixed an issue where the open-url event was not properly being fired on macOS. #20518
Fixed an issue with Node.js context initialization in renderer processes. #20833
Fixed an issue with open and save dialogs selecting properties. #19781
Fixed async Node APIs not working after received IPC message. #19718
Fixed build issue where ChromeDriver would fail to start. #21961
Fixed case where unlock-screen and lock-screen events would fire erroneously on citrix and other multi-session systems. #21805
Fixed case where sending IPC to a child window (opened with window.open) could cause a crash. #19553
Fixed compilation error for native modules building with VS 2015. #21950
Fixed crash loading file based ServiceWorkers. #20132
Fixed crash when doing redirect navigation with webRequest listener. #21838
Fixed debug symbol files on linux not containing private symbols. #20530
Fixed desktopCapturer leak. #20156
Fixed devtools extensions not loading due to ""Connect to unknown extension [object Object]"" errors. #20791
Fixed disabling color correct rendering with --disable-color-correct-rendering. #20356
Fixed downloading mas package failed when defined 'npm_config_platform=mas'. #21801
Fixed flash plugin not working. #22111
Fixed i18n of GTK messageboxes' stock buttons. #19904
Fixed improper behaviour of window with width constraint set during resize. #20519
Fixed issue where maximizing a window on Windows in vertically stacked multi-monitor setups could result in the window rendering a white screen. #20051
Fixed issue where renderers could crash during GC when using the contextBridge module. #22113
Fixed issue with when playing videos or audio Electron would ask for accessibility access. #21959
Fixed memory leak when using protocol.registerSchemeAsPrivileged api. #20546
Fixed net module request raises error when non-2xx response received. #21055
Fixed printing. #21026
Fixed process taking 100% CPU when crashed with no crashReporter set up on Windows x64. #20388
Fixed setting content-type header with charset breaking protocol APIs. #20538
Fixed several deprecation warnings in Electron code. #20793
Fixed some systemPreferences.getColor() inconsistencies on macOS. #20611
Fixed spelling errors. #21915
Fixed the position of popups being created over embedded content. #20232
Fixed vibrant windows not properly having rounded corners on Mac. #20360
Fixed white flash after restoring an app from the background. #19873
Limited the nativeTheme API to the browser process only. #20139
Localized dialog button text on Linux. #19725
No notes. #21930
Prevented 'Reopen windows?' dialog from appearing on macOS after a crash. #19584
Removed __esModule = true inadvertently exported by the electron module. #20939
Removed unnecessary chromium patch for browser compositor on mac. #20390
The dictionarySuggestions property is now correctly populated when the built-in spellchecker is enabled. #21997
Updated Node.js to v12.13.1. #21198
Updated Node.js to v12.8.0. #19521
[deps/uv] fsevents: fix file event reporting (backport: v12.x). #20408
setLayoutZoomLevelLimits no longer works in Electron 8, so emit a warning message when using it. The function will be removed in Electron 9. #21296

Other Changes

Added Windows on Arm (64 bit) release. #20094
Added Windows on Arm node header files to checksum file. #20255
Fixed a crash that could occur if a WebContents was destroyed during a navigation event. #20099
Fixed first beta version choosing logic. bf66fe51
Fixed node.lib linking issue. #20192
No-notes. #18760, #20003
Prepare for 9.0.0-beta.1. 23f32ca9
Removed .only. f566e562
Removed deprecated <webview>.getWebContents(). #20986
Removed undocumented ipcRenderer.sendToAll(). #19556
Strip non-determinism from zip release files. #21756
The remote module now properly serializes Boolean, Number, String and RegExp instances. #20427
Updated Node.js to v12.10.0. #20129
Updated Node.js to v12.12.0. #20584
Updated Node.js to v12.13.0. #20657
Updated Node.js to v12.14.0. #21579
Updated Node.js to v12.14.1. #21703
Updated Node.js to v12.8.1. #19790
Updated Node.js to v12.9.0. #19863
Updated Node.js to v12.9.1. #19980

Documentation

Documentation changes: #19387, #19444, #19804, #19945, #19975, #20230, #20472, #20473, #20478, #20480, #20524, #20525, #20526, #20535, #20591, #20621, #20622, #20644, #21313, #21707, #21909, #21910, #21945, #21996
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@9.0.0-beta.1.
Release Notes for v9.0.0-beta.1
Breaking Changes
IPC between main and renderer processes now uses the Structured Clone Algorithm. #20214
Removed the visibleOnFullscreen option in setVisibleOnAllWorkspaces.. #21706
Split shell.openItem(path) into synchronous and asynchronous methods. #20682
Features
Added BrowserWindow.moveAbove(mediaSourceId). #18926
Added GUID parameter to Tray API to avoid system tray icon demotion on Windows. #21891
Added --enable-api-filtering-logging command-line switch, which enables caller stack logging for desktopCapturer and remote APIs that can be blocked or filtered. #20335
Added app.getApplicationNameForProtocol() API. #20399
Added mouse-down and mouse-up events to the Tray on macOS. #21795
Added nativeTheme.themeSource to allow apps to override Chromium and the OS's theme choice. #19960
Added screen to systemPreferences.getMediaAccessStatus() for detecting the new macOS Catalina permissions. #20764
Added session.addWordToSpellCheckerDictionary API to support custom words in the. #21266
Added session.downloadURL() allowing to trigger downloads without a BrowserWindow. #19889
Added timeoutType property to allows users to set timeout type for Linux  and Windows notifications. #20153
Added trafficLightPosition option in BrowserWindow API to allow custom positioning of traffic lights. #21781
Added tray.closeContextMenu() to allow programmatic closure of Tray menus. #21807
Added tray.focus(), which returns focus to the taskbar notification area. #19548
Added tray.removeBalloon(), which removes an already displayed balloon notification. #19547
Added validatedCertificate to the setCertificateVerifyProc callback to assist with certificate pinning implementations. #21890
Added win.accessibleTitle property to be able to augment the window title for the screen readers. #19698
Added win.getBackgroundColor() for BrowserWindow on macOS. #21448
Added a missing fiddle - migrates the 'Launching an app from URL...' fiddle from electron-api-demos. #20718
Added ability to inspect specific shared workers: contents.getAllSharedWorkers() / contents.inspectSharedWorkerById(workerId). #20389
Added about panel customization on Windows. #19420
Added an urgency property to allow customization of Linux-based notifications. #20152
Added new nativeTheme API to read and respond to changes in the OS's theme and color scheme. #19656
Added options to enable customization of print page headers and footers. #19688
Added property customization to save dialogs. #19672
Added support for HTTP preconnect resource hints. #18671
Added support for picture-in-picture mode for video elements. #17686
Added support for the built-in spellchecker.  We will use the OS spellchecker on macOS and hunspell on all other platforms. #20692
Added the ability to prevent documents from being added to recent documents on Windows in open dialogs. #19669
Added the ability to set app activation policy on macOS. #21983
Added the ability to specify pageSize when printing with webContents.print(). #22014
Added the support of fitToPageEnabled and scaleFactor in  WebContents.printToPDF(). #20436
Added tracing instrumentation to WebContents IPC methods, available with the contentTracing category ""electron"". #21404
Adds a fiddle to demo how to open external links and how to open all outbound links. #20763
Adds ability to disable / enable a TouchBarButton. #20945
Allowed some specific options to be passed via NODE_OPTIONS to packaged apps. #20857
Began issuing a deprecation warning when the 'remote' module is used when enableRemoteModule: true isn't explicitly specified. See link for more details. #21546
Changed NODE_OPTIONs to allow --http-parser to be used in packaged apps. #21694
Deprecated .getWebContents() as it depends on the remote module. #20726
Enable macOS users to fallback to item removal when when shell.moveItemToTrash fails. #19700
Enabled V8 pointer compression. #21468
Explicitly allow product restoration to an app with. #21461
Exposed executeJavaScriptInIsolatedWorld on the webContents API. #21190
Exposed more customizable options for contents.printToPDF() and fixed a potential for native crash. #21906
Exposing methods required by capturing a hidden webContents。. #21679
Fixed Wunderlist app not loading. #17742
Implemented 'will-move' event on BrowserWindow on macOS. #19641
Implemented win.setAspectRatio() on Linux. #19516
Improved TouchBarButton and TouchBarLabel a11y with accessibilityLabel property. #20454
Improved the returned types and descriptions for the PrinterInfo API structure returned by webContents.getPrinters. #21081
New options added to tray.displayBalloon(): iconType, largeIcon, noSound and respectQuietTime. #19544
Objects not serializable using Structured Clone will now cause an error to be thrown when attempting to send them across IPC. #21560, #21560
Removed the deprecated 'setLayoutZoomLevelLimits' method. #21383
Switched to a native-backed implementation of Chrome Extensions. #21814
Fixes
Added name of module to context-aware deprecation warning (#18397). #21952
DOM storage quota enforcement re-enabled, but limit changed from 10MiB to 100MiB. #20899
Don't destroy active menus created as local objects in javascript. #19427
Exposed setMenuBarVisibility on BrowserWindow again. #19557
Fixed Linux console warning about gtk_disable_setlocale(). #19986
Fixed Linux desktop tray icon size regression introduced in the 8.0 betas. #21904
Fixed Node.js' worker_threads in ELECTRON_RUN_AS_NODE. #20416
Fixed POST-ing HTML forms with target=_blank. #21469
Fixed BrowserWindow.fromWebContents() to return null when no window is found for consistency with other APIs. #19983
Fixed Tray.setContextMenu not updating the menu on Linux. #21883
Fixed cookies.get not working when url is not specified in filter. #20471
Fixed cookies.set not working correctly when name or expirationDate is omitted. #21454
Fixed shell.openExternal() option workingDirectory not working with Unicode characters. #20879
Fixed a bug where an unresizable window would shrink when restored after being minimized on Windows. #19886
Fixed a bug where sometimes a ~10px white border would be added to fullscreen windows on Windows. #19883
Fixed a crash in Node.js initialization in renderer processes. #20684
Fixed a crash in webContents.print() caused by infinite recursion. #21889
Fixed a crash in window.print(). #19690
Fixed a crash on  dialog cancellation. #19897
Fixed a crash on manual print cancellation as well as an issue with deviceName not working. #19598
Fixed a crash that could occur when calling crashReporter.getUploadedReports. #20428
Fixed a crash that could occur when visiting HTTPS sites with invalid certificates. #21976
Fixed a label mismatch on open and save dialogs on GTK. #20861
Fixed a potential crash on faulty deviceNames in webContents.print(). #21946
Fixed a race condition that occurred when using protocol.registerStreamProtocol. #19811
Fixed a regression in the recentDocuments MenuItem role on macOS. #20398
Fixed an issue in the remote module which could cause the name of the Object constructor to be overwritten globally. #20637
Fixed an issue that prevented setuid binaries from being launched from the renderer process on Linux. #19953
Fixed an issue where app.getPath('logs') would throw an error if the logs path was not previously set. #19653
Fixed an issue where menu.closePopup() would have no effect if called too soon after menu.popup(). #20114
Fixed an issue where net requests with redirection mode 'error' could incorrectly follow a redirect. #20686
Fixed an issue where webContents.printToPDF failed to properly generate the PDF document. #21783
Fixed an issue where a call to child_process.fork() would set ELECTRON_RUN_AS_NODE in the main process. #19742
Fixed an issue where extension URLs were passing an incorrectly formatted startPage. #21711
Fixed an issue where microtasks could sometimes be scheduled too eagerly, causing crashes when invoking Electron APIs during promises in certain situations. #20303
Fixed an issue where sites using ShadowDOMV0, CustomElementsV0, or HTMLImports would not load properly. #21858
Fixed an issue where the open-url event was not properly being fired on macOS. #20518
Fixed an issue with Node.js context initialization in renderer processes. #20833
Fixed an issue with open and save dialogs selecting properties. #19781
Fixed async Node APIs not working after received IPC message. #19718
Fixed build issue where ChromeDriver would fail to start. #21961
Fixed case where unlock-screen and lock-screen events would fire erroneously on citrix and other multi-session systems. #21805
Fixed case where sending IPC to a child window (opened with window.open) could cause a crash. #19553
Fixed compilation error for native modules building with VS 2015. #21950
Fixed crash loading file based ServiceWorkers. #20132
Fixed crash when doing redirect navigation with webRequest listener. #21838
Fixed debug symbol files on linux not containing private symbols. #20530
Fixed desktopCapturer leak. #20156
Fixed devtools extensions not loading due to ""Connect to unknown extension [object Object]"" errors. #20791
Fixed disabling color correct rendering with --disable-color-correct-rendering. #20356
Fixed downloading mas package failed when defined 'npm_config_platform=mas'. #21801
Fixed flash plugin not working. #22111
Fixed i18n of GTK messageboxes' stock buttons. #19904
Fixed improper behaviour of window with width constraint set during resize. #20519
Fixed issue where maximizing a window on Windows in vertically stacked multi-monitor setups could result in the window rendering a white screen. #20051
Fixed issue where renderers could crash during GC when using the contextBridge module. #22113
Fixed issue with when playing videos or audio Electron would ask for accessibility access. #21959
Fixed memory leak when using protocol.registerSchemeAsPrivileged api. #20546
Fixed net module request raises error when non-2xx response received. #21055
Fixed printing. #21026
Fixed process taking 100% CPU when crashed with no crashReporter set up on Windows x64. #20388
Fixed setting content-type header with charset breaking protocol APIs. #20538
Fixed several deprecation warnings in Electron code. #20793
Fixed some systemPreferences.getColor() inconsistencies on macOS. #20611
Fixed spelling errors. #21915
Fixed the position of popups being created over embedded content. #20232
Fixed vibrant windows not properly having rounded corners on Mac. #20360
Fixed white flash after restoring an app from the background. #19873
Limited the nativeTheme API to the browser process only. #20139
Localized dialog button text on Linux. #19725
No notes. #21930
Prevented 'Reopen windows?' dialog from appearing on macOS after a crash. #19584
Removed __esModule = true inadvertently exported by the electron module. #20939
Removed unnecessary chromium patch for browser compositor on mac. #20390
The dictionarySuggestions property is now correctly populated when the built-in spellchecker is enabled. #21997
Updated Node.js to v12.13.1. #21198
Updated Node.js to v12.8.0. #19521
[deps/uv] fsevents: fix file event reporting (backport: v12.x). #20408
setLayoutZoomLevelLimits no longer works in Electron 8, so emit a warning message when using it. The function will be removed in Electron 9. #21296
Other Changes
Added Windows on Arm (64 bit) release. #20094
Added Windows on Arm node header files to checksum file. #20255
Fixed a crash that could occur if a WebContents was destroyed during a navigation event. #20099
Fixed first beta version choosing logic. bf66fe51
Fixed node.lib linking issue. #20192
No-notes. #18760, #20003
Prepare for 9.0.0-beta.1. 23f32ca9
Removed .only. f566e562
Removed deprecated .getWebContents(). #20986
Removed undocumented ipcRenderer.sendToAll(). #19556
Strip non-determinism from zip release files. #21756
The remote module now properly serializes Boolean, Number, String and RegExp instances. #20427
Updated Node.js to v12.10.0. #20129
Updated Node.js to v12.12.0. #20584
Updated Node.js to v12.13.0. #20657
Updated Node.js to v12.14.0. #21579
Updated Node.js to v12.14.1. #21703
Updated Node.js to v12.8.1. #19790
Updated Node.js to v12.9.0. #19863
Updated Node.js to v12.9.1. #19980
Documentation
Documentation changes: #19387, #19444, #19804, #19945, #19975, #20230, #20472, #20473, #20478, #20480, #20524, #20525, #20526, #20535, #20591, #20621, #20622, #20644, #21313, #21707, #21909, #21910, #21945, #21996"
700,"Release Notes for v7.1.12
Fixes

Fixed an issue where sending complex objects over IPC could in some cases cause the renderer process to be terminated. #21922
Fixed crash with Date.toLocaleString for invalid locale and locale of the format aa@BB. #21969
Fixed flash plugin not working. #22109
Fixed issue where renderers could crash during GC when using the contextBridge module. #22112
Fixed netLog.stopLogging returning undefined instead of the path to the log. #21988
","Release Notes for v7.1.12
Fixes
Fixed an issue where sending complex objects over IPC could in some cases cause the renderer process to be terminated. #21922
Fixed crash with Date.toLocaleString for invalid locale and locale of the format aa@BB. #21969
Fixed flash plugin not working. #22109
Fixed issue where renderers could crash during GC when using the contextBridge module. #22112
Fixed netLog.stopLogging returning undefined instead of the path to the log. #21988"
701,"Generating release notes between origin/7-1-x and origin/8-x-y for version v8.0.0
Release Notes for v8.0.0
Breaking Changes

Upgraded to Chromium 80.0.3987.86 (New since Electron 7: Chromium 79, 80)
Upgraded to Node 12.13.0 (New since Electron 7: Node 12.9, 12.10, 12.11, 12.12, 12.13)
Upgraded to V8 8.0 (New since Electron 7: V8 7.9, 8.0)
IPC between main and renderer processes now uses the Structured Clone Algorithm. #20214

Features

Added --enable-api-filtering-logging command-line switch, which enables caller stack logging for desktopCapturer and remote APIs that can be blocked or filtered. #20335
Added app.getApplicationNameForProtocol(). #21117
Added app.setAboutPanelOptions() support for credits and iconPath on Windows. #19420
Added BrowserWindow.moveAbove(mediaSourceId). #18926
Added contents.getAllSharedWorkers() and contents.inspectSharedWorkerById(workerId) to allow inspection of specific shared workers. #20389
Added Notification() options' timeoutType property to allows users to set timeout type for Linux  and Windows notifications. #20153
Added Notification() options' urgency property to allow customization of Linux-based notifications. #20152
Added session.addWordToSpellCheckerDictionary API to support custom words in the. #21297
Added session.downloadURL() to allow downloads to trigger without a BrowserWindow. #19889
Added systemPreferences.getMediaAccessStatus().screen for detecting the new macOS Catalina permissions. #21116
Added trafficLightPosition option in BrowserWindow API to allow custom positioning of traffic lights. #21990
Added tray.displayBalloon() options: iconType, largeIcon, noSound and respectQuietTime. #19544
Added tray.focus(), which returns focus to the taskbar notification area. #19548
Added tray.removeBalloon(), which removes an already displayed balloon notification. #19547
Added WebContents.printToPDF() support for fitToPageEnabled and scaleFactor. #20436
Added win.accessibleTitle property to augment the window title for screen readers. #19698
Added options to enable customization of print page headers and footers. #19688
Added support for picture-in-picture mode for video elements. #17686
Added support for the built-in spellchecker.  We will use the OS spellchecker on macOS and hunspell on all other platforms. #20897
Added the ability to prevent documents from being added to recent documents on Windows in open dialogs. #19669
Enable macOS users to fallback to item removal when when shell.moveItemToTrash fails. #19700
Exposed webContents.executeJavaScriptInIsolatedWorld. #21267
Exposing methods required by capturing a hidden webContents. #21895
Added BrowserWindow.will-move event support on macOS. #19641
Improved TouchBarButton and TouchBarLabel a11y with the new accessibilityLabel property. #20454

Fixes

Added name of module to context-aware deprecation warning (#18397). #21958
Fixed Linux console warning about gtk_disable_setlocale(). #19986
Don't destroy active menus created as local objects in javascript. #19427
Fixed BrowserWindow.fromWebContents() to return null when no window is found for consistency with other APIs. #19983
Fixed a crash that could occur when calling crashReporter.getUploadedReports. #20428
Fixed a potential crash on faulty deviceNames in webContents.print(). #21982
Fixed an issue in the remote module which could cause the name of the Object constructor to be overwritten globally. #20637
Fixed an issue that prevented setuid binaries from being launched from the renderer process on Linux. #19953
Fixed an issue where menu.closePopup() would have no effect if called too soon after menu.popup(). #20114
Fixed an issue where net requests with redirection mode 'error' could incorrectly follow a redirect. #20686
Fixed an issue where microtasks could sometimes be scheduled too eagerly, causing crashes when invoking Electron APIs during promises in certain situations. #20303
Fixed an issue where sites using ShadowDOMV0, CustomElementsV0, or HTMLImports would not load properly. #21866
Fixed an issue with Node.js context initialization in renderer processes. #20836
Fixed async Node APIs not working after received IPC message. #19718
Fixed compilation error for native modules building with VS 2015. #21960
Fixed crash when doing redirect navigation with webRequest listener. #21841
Fixed debug symbol files on linux not containing private symbols. #20530
Fixed disabling color correct rendering with --disable-color-correct-rendering. #20356
Fixed issue with when playing videos or audio Electron would ask for accessibility access. #21998
Fixed memory leak when using protocol.registerSchemeAsPrivileged api. #20546
Fixed printing. #21059
Fixed setting content-type header with charset breaking protocol APIs. #20538
Fixed several deprecation warnings in Electron code. #20805
Fixed some systemPreferences.getColor() inconsistencies on macOS. #20611
Fixed white flash after restoring an app from the background. #19873
Prevented 'Reopen windows?' dialog from appearing on macOS after a crash. #19584
Re-enable DOM storage quota enforcement but change limit from 10MiB to 100MiB. #21380
Removed unnecessary chromium patch for browser compositor on mac. #20390
setLayoutZoomLevelLimits no longer works in Electron 8, so emit a warning message when using it. The function will be removed in Electron 9. #21360
Fixed a crash that could occur if a WebContents was destroyed during a navigation event. #20099
Fixed bug in 8.0.0 beta releases that prevented the dictionarySuggestions property from being populated correctly when the built-in spellchecker is enabled. #22015

Other Changes

Added Windows on Arm (64 bit) release. #20094
Added Windows on Arm node header files to checksum file. #20255
Deprecated the default value of app.allowRendererProcessReuse (See #18397). #21287
Deprecated <webview>.getWebContents() due to its dependency on the remote module. #21039
Fixed first beta version choosing logic. bf66fe51
Made strip_absolute_paths_from_debug_symbols to false in debug.gn. #21316
No-notes. #18760, #20003
Removed undocumented ipcRenderer.sendToAll(). #19556

Documentation

Documentation changes: #19387, #19444, #19804, #19975, #20230, #20472, #20621, #20622, #20644, #21743, #21874
","Generating release notes between origin/7-1-x and origin/8-x-y for version v8.0.0
Release Notes for v8.0.0
Breaking Changes
Upgraded to Chromium 80.0.3987.86 (New since Electron 7: Chromium 79, 80)
Upgraded to Node 12.13.0 (New since Electron 7: Node 12.9, 12.10, 12.11, 12.12, 12.13)
Upgraded to V8 8.0 (New since Electron 7: V8 7.9, 8.0)
IPC between main and renderer processes now uses the Structured Clone Algorithm. #20214
Features
Added --enable-api-filtering-logging command-line switch, which enables caller stack logging for desktopCapturer and remote APIs that can be blocked or filtered. #20335
Added app.getApplicationNameForProtocol(). #21117
Added app.setAboutPanelOptions() support for credits and iconPath on Windows. #19420
Added BrowserWindow.moveAbove(mediaSourceId). #18926
Added contents.getAllSharedWorkers() and contents.inspectSharedWorkerById(workerId) to allow inspection of specific shared workers. #20389
Added Notification() options' timeoutType property to allows users to set timeout type for Linux  and Windows notifications. #20153
Added Notification() options' urgency property to allow customization of Linux-based notifications. #20152
Added session.addWordToSpellCheckerDictionary API to support custom words in the. #21297
Added session.downloadURL() to allow downloads to trigger without a BrowserWindow. #19889
Added systemPreferences.getMediaAccessStatus().screen for detecting the new macOS Catalina permissions. #21116
Added trafficLightPosition option in BrowserWindow API to allow custom positioning of traffic lights. #21990
Added tray.displayBalloon() options: iconType, largeIcon, noSound and respectQuietTime. #19544
Added tray.focus(), which returns focus to the taskbar notification area. #19548
Added tray.removeBalloon(), which removes an already displayed balloon notification. #19547
Added WebContents.printToPDF() support for fitToPageEnabled and scaleFactor. #20436
Added win.accessibleTitle property to augment the window title for screen readers. #19698
Added options to enable customization of print page headers and footers. #19688
Added support for picture-in-picture mode for video elements. #17686
Added support for the built-in spellchecker.  We will use the OS spellchecker on macOS and hunspell on all other platforms. #20897
Added the ability to prevent documents from being added to recent documents on Windows in open dialogs. #19669
Enable macOS users to fallback to item removal when when shell.moveItemToTrash fails. #19700
Exposed webContents.executeJavaScriptInIsolatedWorld. #21267
Exposing methods required by capturing a hidden webContents. #21895
Added BrowserWindow.will-move event support on macOS. #19641
Improved TouchBarButton and TouchBarLabel a11y with the new accessibilityLabel property. #20454
Fixes
Added name of module to context-aware deprecation warning (#18397). #21958
Fixed Linux console warning about gtk_disable_setlocale(). #19986
Don't destroy active menus created as local objects in javascript. #19427
Fixed BrowserWindow.fromWebContents() to return null when no window is found for consistency with other APIs. #19983
Fixed a crash that could occur when calling crashReporter.getUploadedReports. #20428
Fixed a potential crash on faulty deviceNames in webContents.print(). #21982
Fixed an issue in the remote module which could cause the name of the Object constructor to be overwritten globally. #20637
Fixed an issue that prevented setuid binaries from being launched from the renderer process on Linux. #19953
Fixed an issue where menu.closePopup() would have no effect if called too soon after menu.popup(). #20114
Fixed an issue where net requests with redirection mode 'error' could incorrectly follow a redirect. #20686
Fixed an issue where microtasks could sometimes be scheduled too eagerly, causing crashes when invoking Electron APIs during promises in certain situations. #20303
Fixed an issue where sites using ShadowDOMV0, CustomElementsV0, or HTMLImports would not load properly. #21866
Fixed an issue with Node.js context initialization in renderer processes. #20836
Fixed async Node APIs not working after received IPC message. #19718
Fixed compilation error for native modules building with VS 2015. #21960
Fixed crash when doing redirect navigation with webRequest listener. #21841
Fixed debug symbol files on linux not containing private symbols. #20530
Fixed disabling color correct rendering with --disable-color-correct-rendering. #20356
Fixed issue with when playing videos or audio Electron would ask for accessibility access. #21998
Fixed memory leak when using protocol.registerSchemeAsPrivileged api. #20546
Fixed printing. #21059
Fixed setting content-type header with charset breaking protocol APIs. #20538
Fixed several deprecation warnings in Electron code. #20805
Fixed some systemPreferences.getColor() inconsistencies on macOS. #20611
Fixed white flash after restoring an app from the background. #19873
Prevented 'Reopen windows?' dialog from appearing on macOS after a crash. #19584
Re-enable DOM storage quota enforcement but change limit from 10MiB to 100MiB. #21380
Removed unnecessary chromium patch for browser compositor on mac. #20390
setLayoutZoomLevelLimits no longer works in Electron 8, so emit a warning message when using it. The function will be removed in Electron 9. #21360
Fixed a crash that could occur if a WebContents was destroyed during a navigation event. #20099
Fixed bug in 8.0.0 beta releases that prevented the dictionarySuggestions property from being populated correctly when the built-in spellchecker is enabled. #22015
Other Changes
Added Windows on Arm (64 bit) release. #20094
Added Windows on Arm node header files to checksum file. #20255
Deprecated the default value of app.allowRendererProcessReuse (See #18397). #21287
Deprecated .getWebContents() due to its dependency on the remote module. #21039
Fixed first beta version choosing logic. bf66fe51
Made strip_absolute_paths_from_debug_symbols to false in debug.gn. #21316
No-notes. #18760, #20003
Removed undocumented ipcRenderer.sendToAll(). #19556
Documentation
Documentation changes: #19387, #19444, #19804, #19975, #20230, #20472, #20621, #20622, #20644, #21743, #21874"
702,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@8.0.0-beta.9.
# Release Notes for v8.0.0-beta.9
Fixes

Added name of module to context-aware deprecation warning (#18397). #21958
Fixed build issue where ChromeDriver would fail to start. #21966
Fixed compilation error for native modules building with VS 2015. #21960
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@8.0.0-beta.9.
Release Notes for v8.0.0-beta.9
Fixes
Added name of module to context-aware deprecation warning (#18397). #21958
Fixed build issue where ChromeDriver would fail to start. #21966
Fixed compilation error for native modules building with VS 2015. #21960"
703,"Release Notes for v7.1.11
Fixes

Fixed an edge case in checkbox logic on Windows. #21860
Fixed an issue where window.print() only worked once on a single BrowserWindow. #21911
Fixed an issue where the credits set in About Panel credits were not dark mode aware on macOS. #21924
Fixed error thrown when importing powerMonitor on Linux before app's 'ready' event. #21941
Fixed fuzzy font rendering when hot-plugging displays on macOS Catalina. #21872

Documentation

Documentation changes: #21873
","Release Notes for v7.1.11
Fixes
Fixed an edge case in checkbox logic on Windows. #21860
Fixed an issue where window.print() only worked once on a single BrowserWindow. #21911
Fixed an issue where the credits set in About Panel credits were not dark mode aware on macOS. #21924
Fixed error thrown when importing powerMonitor on Linux before app's 'ready' event. #21941
Fixed fuzzy font rendering when hot-plugging displays on macOS Catalina. #21872
Documentation
Documentation changes: #21873"
704,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@8.0.0-beta.8.
# Release Notes for v8.0.0-beta.8
Fixes

Fixed Linux desktop tray icon size regression introduced in the 8.0 betas. #21936
Fixed BrowserWindow.setFocusable(true) not working on Windows. #21854
Fixed Tray.setContextMenu not updating the menu on Linux. #21902
Fixed a crash in webContents.print() caused by infinite recursion. #21905
Fixed an edge case in checkbox logic on Windows. #21861
Fixed an issue where window.print() only worked once on a single BrowserWindow. #21908
Fixed an issue where sites using ShadowDOMV0, CustomElementsV0, or HTMLImports would not load properly. #21866
Fixed an issue where the credits set in About Panel credits were not dark mode aware on macOS. #21926
Fixed crash when doing redirect navigation with webRequest listener. #21841
Fixed crash when restoring minimized hidden window on Windows. #21821
Fixed error thrown when importing powerMonitor on Linux before app's 'ready' event. #21942
Fixed native module size increase on windows, follow up fix to https://github.com/electron/electron/pull/20614. #21947

Other Changes

Fixed potential hang when sending synchronous IPC messages on process shutdown. #21948
Updated Chromium to 80.0.3987.75. #21932

Documentation

Documentation changes: #21874
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@8.0.0-beta.8.
Release Notes for v8.0.0-beta.8
Fixes
Fixed Linux desktop tray icon size regression introduced in the 8.0 betas. #21936
Fixed BrowserWindow.setFocusable(true) not working on Windows. #21854
Fixed Tray.setContextMenu not updating the menu on Linux. #21902
Fixed a crash in webContents.print() caused by infinite recursion. #21905
Fixed an edge case in checkbox logic on Windows. #21861
Fixed an issue where window.print() only worked once on a single BrowserWindow. #21908
Fixed an issue where sites using ShadowDOMV0, CustomElementsV0, or HTMLImports would not load properly. #21866
Fixed an issue where the credits set in About Panel credits were not dark mode aware on macOS. #21926
Fixed crash when doing redirect navigation with webRequest listener. #21841
Fixed crash when restoring minimized hidden window on Windows. #21821
Fixed error thrown when importing powerMonitor on Linux before app's 'ready' event. #21942
Fixed native module size increase on windows, follow up fix to link. #21947
Other Changes
Fixed potential hang when sending synchronous IPC messages on process shutdown. #21948
Updated Chromium to 80.0.3987.75. #21932
Documentation
Documentation changes: #21874"
705,"Release Notes for v7.1.10
Fixes

Fixed  BrowserWindow.setFocusable(true) not working on Windows. #21855
Fixed set-cookie header not passed in net module. #21770
Fixed an issue where custom stream protocols would sometimes not complete responses when the data stream ended. #21758
Fixed crash when restoring minimized hidden window on Windows. #21820
Fixed issue where non-zero size pixels in CSS styles could be rounded down to zero size pixels. #21857
Fixed memory leak when using javascript generator functions. #21773

Other Changes

Fixed potential hang when sending synchronous IPC messages on process shutdown. #21776
","Release Notes for v7.1.10
Fixes
Fixed  BrowserWindow.setFocusable(true) not working on Windows. #21855
Fixed set-cookie header not passed in net module. #21770
Fixed an issue where custom stream protocols would sometimes not complete responses when the data stream ended. #21758
Fixed crash when restoring minimized hidden window on Windows. #21820
Fixed issue where non-zero size pixels in CSS styles could be rounded down to zero size pixels. #21857
Fixed memory leak when using javascript generator functions. #21773
Other Changes
Fixed potential hang when sending synchronous IPC messages on process shutdown. #21776"
706,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@8.0.0-beta.7.
# Release Notes for v8.0.0-beta.7
Features

Added session.addWordToSpellCheckerDictionary API to support custom words in the. #21297

Fixes

Fixed set-cookie header not passed in net module. #21769
Fixed an issue where webContents.printToPDF failed to properly generate the PDF document. #21797
Fixed an issue where custom stream protocols would sometimes not complete responses when the data stream ended. #21759
Fixed memory leak when using javascript generator functions. #21760

Other Changes

Updated Chromium to 80.0.3987.59. #21800
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@8.0.0-beta.7.
Release Notes for v8.0.0-beta.7
Features
Added session.addWordToSpellCheckerDictionary API to support custom words in the. #21297
Fixes
Fixed set-cookie header not passed in net module. #21769
Fixed an issue where webContents.printToPDF failed to properly generate the PDF document. #21797
Fixed an issue where custom stream protocols would sometimes not complete responses when the data stream ended. #21759
Fixed memory leak when using javascript generator functions. #21760
Other Changes
Updated Chromium to 80.0.3987.59. #21800"
707,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@8.0.0-beta.6.
# Release Notes for v8.0.0-beta.6
Fixes

Bump very far --> this is electron bot fixing the release. 28e44b31
Fixed a crash in contextBridge that happens on garbage collection. #21735
Fixed a crash that would occur when Notifications were closed in concert with app termination. #21720
Fixed an issue in the net module where aborting a request during a redirect could cause an error to be thrown. #21644
Fixed an issue that could cause frameless windows to become undraggable in some circumstances. #21722
Fixed an issue that could prevent communication between a sandboxed child window opened with nativeWindowOpen: false and an unsandboxed parent window. Also fixed document.visibilityState not working in sandboxed <webview>. #21431
Fixed an issue where calling allowNTLMCredentialsForDomains() could cause a change in Kerberos SPN generation behavior. #21580
Fixed an issue with potential duplicate error popups when calling shell.showItemInFolder on Windows. #21748
Fixed incorrect button highlighting when defaultId is passed for dialog message boxes. #21653
Fixed white flash when foregrounding an occluded window. #21751

Other Changes

Handled origin/X branch formats. 606ca98d
Updated Chromium to 80.0.3987.51. #21738
Updated crashReporter to throw an error for getLastCrashReport if crashReporter not started. #21685

Documentation

Documentation changes: #21743
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@8.0.0-beta.6.
Release Notes for v8.0.0-beta.6
Fixes
Bump very far --> this is electron bot fixing the release. 28e44b31
Fixed a crash in contextBridge that happens on garbage collection. #21735
Fixed a crash that would occur when Notifications were closed in concert with app termination. #21720
Fixed an issue in the net module where aborting a request during a redirect could cause an error to be thrown. #21644
Fixed an issue that could cause frameless windows to become undraggable in some circumstances. #21722
Fixed an issue that could prevent communication between a sandboxed child window opened with nativeWindowOpen: false and an unsandboxed parent window. Also fixed document.visibilityState not working in sandboxed . #21431
Fixed an issue where calling allowNTLMCredentialsForDomains() could cause a change in Kerberos SPN generation behavior. #21580
Fixed an issue with potential duplicate error popups when calling shell.showItemInFolder on Windows. #21748
Fixed incorrect button highlighting when defaultId is passed for dialog message boxes. #21653
Fixed white flash when foregrounding an occluded window. #21751
Other Changes
Handled origin/X branch formats. 606ca98d
Updated Chromium to 80.0.3987.51. #21738
Updated crashReporter to throw an error for getLastCrashReport if crashReporter not started. #21685
Documentation
Documentation changes: #21743"
708,"Release Notes for v7.1.9
Fixes

Fixed a crash in contextBridge that happens on garbage collection. #21736
Fixed a crash that would occur when Notifications were closed in concert with app termination. #21719
Fixed an issue that could cause frameless windows to become undraggable in some circumstances. #21723
Fixed an issue that could prevent communication between a sandboxed child window opened with nativeWindowOpen: false and an unsandboxed parent window. Also fixed document.visibilityState not working in sandboxed <webview>. #21696
Fixed an issue with potential duplicate error popups when calling shell.showItemInFolder on Windows. #21749
Fixed white flash when foregrounding an occluded window. #21750

Documentation

Documentation changes: #21742
","Release Notes for v7.1.9
Fixes
Fixed a crash in contextBridge that happens on garbage collection. #21736
Fixed a crash that would occur when Notifications were closed in concert with app termination. #21719
Fixed an issue that could cause frameless windows to become undraggable in some circumstances. #21723
Fixed an issue that could prevent communication between a sandboxed child window opened with nativeWindowOpen: false and an unsandboxed parent window. Also fixed document.visibilityState not working in sandboxed . #21696
Fixed an issue with potential duplicate error popups when calling shell.showItemInFolder on Windows. #21749
Fixed white flash when foregrounding an occluded window. #21750
Documentation
Documentation changes: #21742"
709,"Release Notes for v7.1.8
Fixes

Fixed an issue in the net module where aborting a request during a redirect could cause an error to be thrown. #21645
Fixed incorrect button highlighting when defaultId is passed for dialog message boxes. #21652

Other Changes

Updated crashReporter to throw an error for getLastCrashReport if crashReporter not started. #21683
","Release Notes for v7.1.8
Fixes
Fixed an issue in the net module where aborting a request during a redirect could cause an error to be thrown. #21645
Fixed incorrect button highlighting when defaultId is passed for dialog message boxes. #21652
Other Changes
Updated crashReporter to throw an error for getLastCrashReport if crashReporter not started. #21683"
710,"Release Notes for v7.1.7
Fixes

Fixed an issue where calling allowNTLMCredentialsForDomains() could cause a change in Kerberos SPN generation behavior. #21572
","Release Notes for v7.1.7
Fixes
Fixed an issue where calling allowNTLMCredentialsForDomains() could cause a change in Kerberos SPN generation behavior. #21572"
711,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@8.0.0-beta.5.
# Release Notes for v8.0.0-beta.5
Fixes

Fixed POST-ing HTML forms with target=_blank. #21474
Fixed cookies.set not working correctly when name or expirationDate is omitted. #21477
Fixed a weird behaviors and crashes when controlling window menu by keys. #21452
Fixed accessibility window title on macOS. #21467
Fixed an issue that caused ClientRequest.getUploadProgress() to return incorrect values. #21424
Fixed an issue where noLink was working incorrectly on Windows. #21405
Fixed compositor recycling when creating new BrowserView. #21399
Fixed contextBridge crash when closing a window. #21418
Fixed contextBridge crash when opening and closing many windows. #21513
Fixed media-specific globalShortcuts not working on macOS. #21547
Fixed source maps not loading in devtools with file scheme. #21493
Fixed window menu unable to hide on startup. #21443
Re-enable DOM storage quota enforcement but change limit from 10MiB to 100MiB. #21380
Removed Electron.dsym from macOS application zip. #21484
setLayoutZoomLevelLimits no longer works in Electron 8, so emit a warning message when using it. The function will be removed in Electron 9. #21360

Other Changes

Updated Chromium to 80.0.3987.14. #21520
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@8.0.0-beta.5.
Release Notes for v8.0.0-beta.5
Fixes
Fixed POST-ing HTML forms with target=_blank. #21474
Fixed cookies.set not working correctly when name or expirationDate is omitted. #21477
Fixed a weird behaviors and crashes when controlling window menu by keys. #21452
Fixed accessibility window title on macOS. #21467
Fixed an issue that caused ClientRequest.getUploadProgress() to return incorrect values. #21424
Fixed an issue where noLink was working incorrectly on Windows. #21405
Fixed compositor recycling when creating new BrowserView. #21399
Fixed contextBridge crash when closing a window. #21418
Fixed contextBridge crash when opening and closing many windows. #21513
Fixed media-specific globalShortcuts not working on macOS. #21547
Fixed source maps not loading in devtools with file scheme. #21493
Fixed window menu unable to hide on startup. #21443
Re-enable DOM storage quota enforcement but change limit from 10MiB to 100MiB. #21380
Removed Electron.dsym from macOS application zip. #21484
setLayoutZoomLevelLimits no longer works in Electron 8, so emit a warning message when using it. The function will be removed in Electron 9. #21360
Other Changes
Updated Chromium to 80.0.3987.14. #21520"
712,"Release Notes for v7.1.6
Fixes

Fixed black boxes with <select> tag inside <webview> and OOPIF on windows. #21526
Fixed media-specific globalShortcuts not working on macOS. #21548
","Release Notes for v7.1.6
Fixes
Fixed black boxes with  tag inside  and OOPIF on windows. #21526
Fixed media-specific globalShortcuts not working on macOS. #21548"
713,"Release Notes for v6.1.7
Fixes

Fixed Electron apps getting rejected to Mac App Store. #20970
","Release Notes for v6.1.7
Fixes
Fixed Electron apps getting rejected to Mac App Store. #20970"
714,"Release Notes for v5.0.13
Fixes

Fixed Electron apps getting rejected to Mac App Store. #20988
Fixed context menu disappearing when showing. #21227
Fixed issue where reloading the window after calling setBackgroundColor would result in using an older background color setting. #19972
","Release Notes for v5.0.13
Fixes
Fixed Electron apps getting rejected to Mac App Store. #20988
Fixed context menu disappearing when showing. #21227
Fixed issue where reloading the window after calling setBackgroundColor would result in using an older background color setting. #19972"
715,"Release Notes for v7.1.5
Fixes

Added workaround for nativeWindowOpen hang. #21497
Fixed cookies.set not working correctly when name or expirationDate is omitted. #21481
Fixed a weird behaviors and crashes when controlling window menu by keys. #21453
Fixed accessibility window title on macOS. #21466
Fixed contextBridge crash when opening and closing many windows. #21514
Fixed source maps not loading in devtools with file scheme. #21494
Fixed window menu unable to hide on startup. #21449
Removed Electron.dsym from macOS application zip. #21487
","Release Notes for v7.1.5
Fixes
Added workaround for nativeWindowOpen hang. #21497
Fixed cookies.set not working correctly when name or expirationDate is omitted. #21481
Fixed a weird behaviors and crashes when controlling window menu by keys. #21453
Fixed accessibility window title on macOS. #21466
Fixed contextBridge crash when opening and closing many windows. #21514
Fixed source maps not loading in devtools with file scheme. #21494
Fixed window menu unable to hide on startup. #21449
Removed Electron.dsym from macOS application zip. #21487"
716,"Release Notes for v6.1.6
Fixes

Fixed accessibility window title on macOS. #21465
Fixed flicker when switching between BrowserViews after creating new BrowserView. #21396
Fixed throttling in webContents.setBackgroundThrottling. #21359

Other Changes

Generate debug symbols on Linux. #21280
","Release Notes for v6.1.6
Fixes
Fixed accessibility window title on macOS. #21465
Fixed flicker when switching between BrowserViews after creating new BrowserView. #21396
Fixed throttling in webContents.setBackgroundThrottling. #21359
Other Changes
Generate debug symbols on Linux. #21280"
717,"Release Notes for v7.1.4
Fixes

Fixed an issue that caused ClientRequest.getUploadProgress() to return incorrect values. #21425
Fixed compositor recycling when creating new BrowserView. #21400
Fixed contextBridge crash when closing a window. #21417
Fixed issues where noLink and checkboxChecked were not passed correctly on Windows. #21406
Fixed throttling in webContents.setBackgroundThrottling. #21357

Other Changes

Updated Chromium to 78.0.3904.130. #21413
","Release Notes for v7.1.4
Fixes
Fixed an issue that caused ClientRequest.getUploadProgress() to return incorrect values. #21425
Fixed compositor recycling when creating new BrowserView. #21400
Fixed contextBridge crash when closing a window. #21417
Fixed issues where noLink and checkboxChecked were not passed correctly on Windows. #21406
Fixed throttling in webContents.setBackgroundThrottling. #21357
Other Changes
Updated Chromium to 78.0.3904.130. #21413"
718,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@8.0.0-beta.4.
# Release Notes for v8.0.0-beta.4
Features

Exposed executeJavaScriptInIsolatedWorld on the webContents API. #21267

Fixes

Fixed --ignore-connections-limit, ironically, being ignored. #21298
Fixed an issue where Tray icons couldn't be created from paths. #21241
Fixed an issue where the checkboxChecked value wasn't being updated in showMessageBox on Windows. #21312
Fixed broken focus with OOPIF embedded inside webview. #21343
Fixed contextBridge crash. #21282
Fixed the 'login' event not being emitted when HTTP Basic auth was requested during a net.request. #21133
Fixed throttling in webContents.setBackgroundThrottling. #21358
Net module requests no longer raise errors when non-2xx responses are received. #21285
The disabled-by-default-cpu_profiler tracing category now correctly records stack samples from the main process and utility processes. #21276
webContents.reloadIgnoringCache() will now forcefully ignore all caches, including service workers. #21283
window.root and window.GLOBAL are both now undefined when nodeIntegration is disabled as expected. #21355

Other Changes

Deprecated the default value of app.allowRendererProcessReuse (See #18397). #21287
Fixed some crashes that could occur when using the net module. #21303
Generate debug symbols on Linux. #21278
Made strip_absolute_paths_from_debug_symbols to false in debug.gn. #21316
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@8.0.0-beta.4.
Release Notes for v8.0.0-beta.4
Features
Exposed executeJavaScriptInIsolatedWorld on the webContents API. #21267
Fixes
Fixed --ignore-connections-limit, ironically, being ignored. #21298
Fixed an issue where Tray icons couldn't be created from paths. #21241
Fixed an issue where the checkboxChecked value wasn't being updated in showMessageBox on Windows. #21312
Fixed broken focus with OOPIF embedded inside webview. #21343
Fixed contextBridge crash. #21282
Fixed the 'login' event not being emitted when HTTP Basic auth was requested during a net.request. #21133
Fixed throttling in webContents.setBackgroundThrottling. #21358
Net module requests no longer raise errors when non-2xx responses are received. #21285
The disabled-by-default-cpu_profiler tracing category now correctly records stack samples from the main process and utility processes. #21276
webContents.reloadIgnoringCache() will now forcefully ignore all caches, including service workers. #21283
window.root and window.GLOBAL are both now undefined when nodeIntegration is disabled as expected. #21355
Other Changes
Deprecated the default value of app.allowRendererProcessReuse (See #18397). #21287
Fixed some crashes that could occur when using the net module. #21303
Generate debug symbols on Linux. #21278
Made strip_absolute_paths_from_debug_symbols to false in debug.gn. #21316"
719,"Release Notes for v7.1.3
Fixes

Fixed --ignore-connections-limit, ironically, being ignored. #21299
Fixed broken focus with OOPIF embedded inside webview. #21223
Fixed context menu disappearing when showing. #21225
Fixed contextBridge crash. #21281
Fixed the 'login' event not being emitted when HTTP Basic auth was requested during a net.request. #21135
Net module requests no longer raise errors when non-2xx responses are received. #21295
The disabled-by-default-cpu_profiler tracing category now correctly records stack samples from the main process and utility processes. #21277
webContents.reloadIgnoringCache() will now forcefully ignore all caches, including service workers. #21284
window.root and window.GLOBAL are both now undefined when nodeIntegration is disabled as expected. #21354

Other Changes

Fixed some crashes that could occur when using the net module. #21304
Generate debug symbols on Linux. #21279
Made strip_absolute_paths_from_debug_symbols to false in debug.gn. #21317
Updated Chromium to 78.0.3904.126. #21346
","Release Notes for v7.1.3
Fixes
Fixed --ignore-connections-limit, ironically, being ignored. #21299
Fixed broken focus with OOPIF embedded inside webview. #21223
Fixed context menu disappearing when showing. #21225
Fixed contextBridge crash. #21281
Fixed the 'login' event not being emitted when HTTP Basic auth was requested during a net.request. #21135
Net module requests no longer raise errors when non-2xx responses are received. #21295
The disabled-by-default-cpu_profiler tracing category now correctly records stack samples from the main process and utility processes. #21277
webContents.reloadIgnoringCache() will now forcefully ignore all caches, including service workers. #21284
window.root and window.GLOBAL are both now undefined when nodeIntegration is disabled as expected. #21354
Other Changes
Fixed some crashes that could occur when using the net module. #21304
Generate debug symbols on Linux. #21279
Made strip_absolute_paths_from_debug_symbols to false in debug.gn. #21317
Updated Chromium to 78.0.3904.126. #21346"
720,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@8.0.0-beta.3.
# Release Notes for v8.0.0-beta.3
Features

Added screen to systemPreferences.getMediaAccessStatus() for detecting the new macOS Catalina permissions. #21116
Added app.getApplicationNameForProtocol() API. #21117
Deprecated <webview>.getWebContents() as it depends on the remote module. #21039

Fixes

Fixed <webview>.capturePage() resolving with an empty object instead of NativeImage instance. #21103
Fixed nativeTheme not accessible via the remote module. #20953
Fixed shell.openExternal() option workingDirectory not working with Unicode characters. #20906
Fixed webRequest module unable to modify CORS headers. #21122
Fixed a memory leak issue when setting Tray images. #20936
Fixed an issue where custom protocols registered using registerStreamProtocol would sometimes fail to complete the response when the stream ended. #21180
Fixed broken globalShortcut.registerAll() on Windows and Linux. #20984
Fixed context menu disappearing when showing. #21224
Fixed crash on exit in aura platforms with webview. #21035
Fixed exiting HTML fullscreen for cross-origin iframes (e.g. YouTube) while in macOS fullscreen. #21042
Fixed flickering when maximizing and restoring frameless windows. #21201
Fixed improper label internationalization for the recentDocuments MenuItem. #20956
Fixed incorrect size of windows on differently scaled monitors. #21139
Fixed issue where app.setAppLogsPath did not work when you provided a valid path. #20985
Fixed issue where proxied remote promises might not resolve if Bluebird was installed in the renderer. #20946
Fixed printing. #21059
Fixed the 'login' event not being emitted when HTTP Basic auth was requested from a WebContents. #21098
Removed __esModule = true inadvertently exported by the electron module. #20952
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@8.0.0-beta.3.
Release Notes for v8.0.0-beta.3
Features
Added screen to systemPreferences.getMediaAccessStatus() for detecting the new macOS Catalina permissions. #21116
Added app.getApplicationNameForProtocol() API. #21117
Deprecated .getWebContents() as it depends on the remote module. #21039
Fixes
Fixed .capturePage() resolving with an empty object instead of NativeImage instance. #21103
Fixed nativeTheme not accessible via the remote module. #20953
Fixed shell.openExternal() option workingDirectory not working with Unicode characters. #20906
Fixed webRequest module unable to modify CORS headers. #21122
Fixed a memory leak issue when setting Tray images. #20936
Fixed an issue where custom protocols registered using registerStreamProtocol would sometimes fail to complete the response when the stream ended. #21180
Fixed broken globalShortcut.registerAll() on Windows and Linux. #20984
Fixed context menu disappearing when showing. #21224
Fixed crash on exit in aura platforms with webview. #21035
Fixed exiting HTML fullscreen for cross-origin iframes (e.g. YouTube) while in macOS fullscreen. #21042
Fixed flickering when maximizing and restoring frameless windows. #21201
Fixed improper label internationalization for the recentDocuments MenuItem. #20956
Fixed incorrect size of windows on differently scaled monitors. #21139
Fixed issue where app.setAppLogsPath did not work when you provided a valid path. #20985
Fixed issue where proxied remote promises might not resolve if Bluebird was installed in the renderer. #20946
Fixed printing. #21059
Fixed the 'login' event not being emitted when HTTP Basic auth was requested from a WebContents. #21098
Removed __esModule = true inadvertently exported by the electron module. #20952"
721,"Release Notes for v6.1.5
Fixes

Disabled Touch Bar typing suggestions with autocorrect=off and spellcheck=false. #21191
Fixed ENOMEM error with Node.js child_process when using empty options.env. #21141
Fixed <webview>.capturePage() resolving with an empty object instead of NativeImage instance. #21105
Fixed backgroundThrottling: false not having an effect. #21014
Fixed broken globalShortcut.registerAll() on Windows and Linux. #20982
Fixed broken focus with OOPIF embedded inside webview. #21221
Fixed context menu disappearing when showing. #21226
Fixed crash using v8 Date.toLocale* api with invalid locales. #21188
Fixed exiting HTML fullscreen for cross-origin iframes (e.g. YouTube) while in macOS fullscreen. #21020
Fixed flickering when maximizing and restoring frameless windows. #21206
Fixed incorrect size of windows on differently scaled monitors. #21137
","Release Notes for v6.1.5
Fixes
Disabled Touch Bar typing suggestions with autocorrect=off and spellcheck=false. #21191
Fixed ENOMEM error with Node.js child_process when using empty options.env. #21141
Fixed .capturePage() resolving with an empty object instead of NativeImage instance. #21105
Fixed backgroundThrottling: false not having an effect. #21014
Fixed broken globalShortcut.registerAll() on Windows and Linux. #20982
Fixed broken focus with OOPIF embedded inside webview. #21221
Fixed context menu disappearing when showing. #21226
Fixed crash using v8 Date.toLocale* api with invalid locales. #21188
Fixed exiting HTML fullscreen for cross-origin iframes (e.g. YouTube) while in macOS fullscreen. #21020
Fixed flickering when maximizing and restoring frameless windows. #21206
Fixed incorrect size of windows on differently scaled monitors. #21137"
722,"Release Notes for v7.1.2
Fixes

Disabled Touch Bar typing suggestions with autocorrect=off and spellcheck=false. #21192
Fixed ENOMEM error with Node.js child_process when using empty options.env. #21140
Fixed <webview>.capturePage() resolving with an empty object instead of NativeImage instance. #21104
Fixed webRequest module unable to modify CORS headers. #21123
Fixed an issue where custom protocols registered using registerStreamProtocol would sometimes fail to complete the response when the stream ended. #21179
Fixed flickering when maximizing and restoring frameless windows. #21205
Fixed incorrect size of windows on differently scaled monitors. #21138
Fixed the 'login' event not being emitted when HTTP Basic auth was requested from a WebContents. #21097

Other Changes

Updated Chromium to 78.0.3904.113. #21199
","Release Notes for v7.1.2
Fixes
Disabled Touch Bar typing suggestions with autocorrect=off and spellcheck=false. #21192
Fixed ENOMEM error with Node.js child_process when using empty options.env. #21140
Fixed .capturePage() resolving with an empty object instead of NativeImage instance. #21104
Fixed webRequest module unable to modify CORS headers. #21123
Fixed an issue where custom protocols registered using registerStreamProtocol would sometimes fail to complete the response when the stream ended. #21179
Fixed flickering when maximizing and restoring frameless windows. #21205
Fixed incorrect size of windows on differently scaled monitors. #21138
Fixed the 'login' event not being emitted when HTTP Basic auth was requested from a WebContents. #21097
Other Changes
Updated Chromium to 78.0.3904.113. #21199"
723,"Release Notes for v7.1.1
Fixes

Fixed backgroundThrottling: false not having an effect. #21013
Fixed broken globalShortcut.registerAll() on Windows and Linux. #20983
Fixed crash on exit in aura platforms with webview. #21022
Fixed exiting HTML fullscreen for cross-origin iframes (e.g. YouTube) while in macOS fullscreen. #21021
Fixed improper label internationalization for the recentDocuments MenuItem. #20957
Fixed issue where app.setAppLogsPath did not work when you provided a valid path. #21008
Fixed webrequest api typings. #21038

Other Changes

Updated Chromium to 78.0.3904.99. #21033
","Release Notes for v7.1.1
Fixes
Fixed backgroundThrottling: false not having an effect. #21013
Fixed broken globalShortcut.registerAll() on Windows and Linux. #20983
Fixed crash on exit in aura platforms with webview. #21022
Fixed exiting HTML fullscreen for cross-origin iframes (e.g. YouTube) while in macOS fullscreen. #21021
Fixed improper label internationalization for the recentDocuments MenuItem. #20957
Fixed issue where app.setAppLogsPath did not work when you provided a valid path. #21008
Fixed webrequest api typings. #21038
Other Changes
Updated Chromium to 78.0.3904.99. #21033"
724,"Release Notes for v7.1.0
This release is a minor bump as it contains exactly one new feature. contextBridge module, this feature is outlined below along with the other fixes and changes that went into this release. The 7.1.x series is now only release line in the 7.x.y major release line that will receive bug fixes and security fixes. It is recommended you upgrade to 7.1.x.
Features

Added new contextBridge module to make it easier to communicate between an isolated context and the main world. #20789

Fixes

Fixed nativeTheme not accessible via the remote module. #20961
Fixed a memory leak issue when setting Tray images. #20935
Fixed issue where proxied remote promises might not resolve if Bluebird was installed in the renderer. #20947

Other Changes

Prepare for 7.1.0. 18176b48, ef548b65
Updated Chromium to 78.0.3904.94. #20930
","Release Notes for v7.1.0
This release is a minor bump as it contains exactly one new feature. contextBridge module, this feature is outlined below along with the other fixes and changes that went into this release. The 7.1.x series is now only release line in the 7.x.y major release line that will receive bug fixes and security fixes. It is recommended you upgrade to 7.1.x.
Features
Added new contextBridge module to make it easier to communicate between an isolated context and the main world. #20789
Fixes
Fixed nativeTheme not accessible via the remote module. #20961
Fixed a memory leak issue when setting Tray images. #20935
Fixed issue where proxied remote promises might not resolve if Bluebird was installed in the renderer. #20947
Other Changes
Prepare for 7.1.0. 18176b48, ef548b65
Updated Chromium to 78.0.3904.94. #20930"
725,"Release Notes for v6.1.4
Fixes

Backported webaudio security patch from upstream. #20924
","Release Notes for v6.1.4
Fixes
Backported webaudio security patch from upstream. #20924"
726,"Release Notes for v7.0.1
Fixes

Fixed shell.openExternal() option workingDirectory not working with Unicode characters. #20905
Fixed a crash in Menus related to menu.popup(). #20808
Fixed a label mismatch on open and save dialogs on GTK. #20882
Fixed a regression in the recentDocuments role on macOS. #20670
Fixed an issue where objects referenced by remote could sometimes not be correctly freed. #20693
Fixed crashes when calling webContents.printToPDF() multiple times. #20810
Fixed devtools extensions not loading due to ""Connect to unknown extension [object Object]"" errors. #20844
Fixed flicker when switching between BrowserViews. #20846
Fixed fs.mkdir/mkdirSync hang with {recursive: true} for invalid names with node 12 on windows. #20629
Fixed hang when closing a scriptable popup window using the remote module. #20715
Fixed memory leaks caused by callbacks not being released when the remote module is used in sub-frames (<iframe> or scriptable popup). #20814
Fixed native module size increase on windows, follow up fix to https://github.com/electron/electron/pull/20614. #20708
Fixed several deprecation warnings in Electron code. #20804

Other Changes

Updated Chromium to 78.0.3904.92. #20913

Documentation

Documentation changes: #20757
","Release Notes for v7.0.1
Fixes
Fixed shell.openExternal() option workingDirectory not working with Unicode characters. #20905
Fixed a crash in Menus related to menu.popup(). #20808
Fixed a label mismatch on open and save dialogs on GTK. #20882
Fixed a regression in the recentDocuments role on macOS. #20670
Fixed an issue where objects referenced by remote could sometimes not be correctly freed. #20693
Fixed crashes when calling webContents.printToPDF() multiple times. #20810
Fixed devtools extensions not loading due to ""Connect to unknown extension [object Object]"" errors. #20844
Fixed flicker when switching between BrowserViews. #20846
Fixed fs.mkdir/mkdirSync hang with {recursive: true} for invalid names with node 12 on windows. #20629
Fixed hang when closing a scriptable popup window using the remote module. #20715
Fixed memory leaks caused by callbacks not being released when the remote module is used in sub-frames ( or scriptable popup). #20814
Fixed native module size increase on windows, follow up fix to link. #20708
Fixed several deprecation warnings in Electron code. #20804
Other Changes
Updated Chromium to 78.0.3904.92. #20913
Documentation
Documentation changes: #20757"
727,"Release Notes for v6.1.3
Fixes

Fixed a crash in Menus related to menu.popup(). #20786
Fixed crashes when calling webContents.printToPDF() multiple times. #20811
Fixed flicker when switching between BrowserViews. #20834
Fixed hang when closing a scriptable popup window using the remote module. #20716
Fixed memory leaks caused by callbacks not being released when the remote module is used in sub-frames (<iframe> or scriptable popup). #20815
","Release Notes for v6.1.3
Fixes
Fixed a crash in Menus related to menu.popup(). #20786
Fixed crashes when calling webContents.printToPDF() multiple times. #20811
Fixed flicker when switching between BrowserViews. #20834
Fixed hang when closing a scriptable popup window using the remote module. #20716
Fixed memory leaks caused by callbacks not being released when the remote module is used in sub-frames ( or scriptable popup). #20815"
728,"Release Notes for v5.0.12
Fixes

Fixed a crash in Menus related to menu.popup(). #20800
Fixed crashes when calling webContents.printToPDF() multiple times. #20812
Fixed fs.mkdir/mkdirSync hang with {recursive: true} for invalid names with node 12 on windows. #20664
Fixed memory leaks caused by callbacks not being released when the remote module is used in sub-frames (<iframe> or scriptable popup). #20816
Fixed native module size increase on windows, follow up fix to https://github.com/electron/electron/pull/20614. #20707
Fixed native modules size increase with VC++ and node 12 on windows. #20628
Fixed parsing of paths with .asar in directory name extensions. #20403
[deps/uv] fsevents: fix file event reporting (backport: v12.x). #20433
","Release Notes for v5.0.12
Fixes
Fixed a crash in Menus related to menu.popup(). #20800
Fixed crashes when calling webContents.printToPDF() multiple times. #20812
Fixed fs.mkdir/mkdirSync hang with {recursive: true} for invalid names with node 12 on windows. #20664
Fixed memory leaks caused by callbacks not being released when the remote module is used in sub-frames ( or scriptable popup). #20816
Fixed native module size increase on windows, follow up fix to link. #20707
Fixed native modules size increase with VC++ and node 12 on windows. #20628
Fixed parsing of paths with .asar in directory name extensions. #20403
[deps/uv] fsevents: fix file event reporting (backport: v12.x). #20433"
729,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@8.0.0-beta.2.
# Release Notes for v8.0.0-beta.2
Features

Added support for the built-in spellchecker.  We will use the OS spellchecker on macOS and hunspell on all other platforms. #20897

Fixes

Fixed a crash in Menus related to menu.popup(). #20785
Fixed a label mismatch on open and save dialogs on GTK. #20883
Fixed an issue with Node.js context initialization in renderer processes. #20836
Fixed crashes when calling webContents.printToPDF() multiple times. #20802
Fixed devtools extensions not loading due to ""Connect to unknown extension [object Object]"" errors. #20842
Fixed flicker when switching between BrowserViews. #20847
Fixed memory leaks caused by callbacks not being released when the remote module is used in sub-frames (<iframe> or scriptable popup). #20813
Fixed several deprecation warnings in Electron code. #20805
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@8.0.0-beta.2.
Release Notes for v8.0.0-beta.2
Features
Added support for the built-in spellchecker.  We will use the OS spellchecker on macOS and hunspell on all other platforms. #20897
Fixes
Fixed a crash in Menus related to menu.popup(). #20785
Fixed a label mismatch on open and save dialogs on GTK. #20883
Fixed an issue with Node.js context initialization in renderer processes. #20836
Fixed crashes when calling webContents.printToPDF() multiple times. #20802
Fixed devtools extensions not loading due to ""Connect to unknown extension [object Object]"" errors. #20842
Fixed flicker when switching between BrowserViews. #20847
Fixed memory leaks caused by callbacks not being released when the remote module is used in sub-frames ( or scriptable popup). #20813
Fixed several deprecation warnings in Electron code. #20805"
730,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@8.0.0-beta.1.
# Release Notes for v8.0.0-beta.1
Breaking Changes

IPC between main and renderer processes now uses the Structured Clone Algorithm. #20214

Features

Added BrowserWindow.moveAbove(mediaSourceId). #18926
Added --enable-api-filtering-logging command-line switch, which enables caller stack logging for desktopCapturer and remote APIs that can be blocked or filtered. #20335
Added nativeTheme.themeSource to allow apps to override Chromium and the OS's theme choice. #19960
Added session.downloadURL() allowing to trigger downloads without a BrowserWindow. #19889
Added timeoutType property to allows users to set timeout type for Linux  and Windows notifications. #20153
Added tray.focus(), which returns focus to the taskbar notification area. #19548
Added tray.removeBalloon(), which removes an already displayed balloon notification. #19547
Added win.accessibleTitle property to be able to augment the window title for the screen readers. #19698
Added ability to inspect specific shared workers: contents.getAllSharedWorkers() / contents.inspectSharedWorkerById(workerId). #20389
Added about panel customization on Windows. #19420
Added an urgency property to allow customization of Linux-based notifications. #20152
Added options to enable customization of print page headers and footers. #19688
Added property customization to save dialogs. #19672
Added support for HTTP preconnect resource hints. #18671
Added the ability to prevent documents from being added to recent documents on Windows in open dialogs. #19669
Added the support of fitToPageEnabled and scaleFactor in  WebContents.printToPDF(). #20436
Enable macOS users to fallback to item removal when when shell.moveItemToTrash fails. #19700
Implemented 'will-move' event on BrowserWindow on macOS. #19641
Improved TouchBarButton and TouchBarLabel a11y with accessibilityLabel property. #20454
New options added to tray.displayBalloon(): iconType, largeIcon, noSound and respectQuietTime. #19544

Fixes

Don't destroy active menus created as local objects in javascript. #19427
Fixed BrowserWindow.fromWebContents() to return null when no window is found for consistency with other APIs. #19983
Fixed backgroundThrottling: false not having an effect. #20239
Fixed cookies.get not working when url is not specified in filter. #20471
Fixed a crash in Node.js initialization in renderer processes. #20684
Fixed a crash that could occur when calling crashReporter.getUploadedReports. #20428
Fixed an issue in the remote module which could cause the name of the Object constructor to be overwritten globally. #20637
Fixed an issue that prevented setuid binaries from being launched from the renderer process on Linux. #19953
Fixed an issue where menu.closePopup() would have no effect if called too soon after menu.popup(). #20114
Fixed an issue where net requests with redirection mode 'error' could incorrectly follow a redirect. #20686
Fixed an issue where microtasks could sometimes be scheduled too eagerly, causing crashes when invoking Electron APIs during promises in certain situations. #20303
Fixed an issue with open and save dialogs selecting properties. #19781
Fixed debug symbol files on linux not containing private symbols. #20530
Fixed some systemPreferences.getColor() inconsistencies on macOS. #20611
Fixed the position of popups being created over embedded content. #20232
Fixed white flash after restoring an app from the background. #19873
Localized dialog button text on Linux. #19725
Prevented 'Reopen windows?' dialog from appearing on macOS after a crash. #19584
Removed unnecessary chromium patch for browser compositor on mac. #20390
[deps/uv] fsevents: fix file event reporting (backport: v12.x). #20408

Other Changes

Fixed a crash that could occur if a WebContents was destroyed during a navigation event. #20099
Fixed first beta version choosing logic. bf66fe51
No-notes. #18760, #20003
Removed .only. f566e562
Removed undocumented ipcRenderer.sendToAll(). #19556
The remote module now properly serializes Boolean, Number, String and RegExp instances. #20427
Updated Node.js to v12.10.0. #20129
Updated Node.js to v12.12.0. #20584
Updated Node.js to v12.13.0. #20657
Updated Node.js to v12.9.0. #19863
Updated Node.js to v12.9.1. #19980

Documentation

Documentation changes: #19387, #19444, #19975, #20230, #20472, #20621, #20622, #20644
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@8.0.0-beta.1.
Release Notes for v8.0.0-beta.1
Breaking Changes
IPC between main and renderer processes now uses the Structured Clone Algorithm. #20214
Features
Added BrowserWindow.moveAbove(mediaSourceId). #18926
Added --enable-api-filtering-logging command-line switch, which enables caller stack logging for desktopCapturer and remote APIs that can be blocked or filtered. #20335
Added nativeTheme.themeSource to allow apps to override Chromium and the OS's theme choice. #19960
Added session.downloadURL() allowing to trigger downloads without a BrowserWindow. #19889
Added timeoutType property to allows users to set timeout type for Linux  and Windows notifications. #20153
Added tray.focus(), which returns focus to the taskbar notification area. #19548
Added tray.removeBalloon(), which removes an already displayed balloon notification. #19547
Added win.accessibleTitle property to be able to augment the window title for the screen readers. #19698
Added ability to inspect specific shared workers: contents.getAllSharedWorkers() / contents.inspectSharedWorkerById(workerId). #20389
Added about panel customization on Windows. #19420
Added an urgency property to allow customization of Linux-based notifications. #20152
Added options to enable customization of print page headers and footers. #19688
Added property customization to save dialogs. #19672
Added support for HTTP preconnect resource hints. #18671
Added the ability to prevent documents from being added to recent documents on Windows in open dialogs. #19669
Added the support of fitToPageEnabled and scaleFactor in  WebContents.printToPDF(). #20436
Enable macOS users to fallback to item removal when when shell.moveItemToTrash fails. #19700
Implemented 'will-move' event on BrowserWindow on macOS. #19641
Improved TouchBarButton and TouchBarLabel a11y with accessibilityLabel property. #20454
New options added to tray.displayBalloon(): iconType, largeIcon, noSound and respectQuietTime. #19544
Fixes
Don't destroy active menus created as local objects in javascript. #19427
Fixed BrowserWindow.fromWebContents() to return null when no window is found for consistency with other APIs. #19983
Fixed backgroundThrottling: false not having an effect. #20239
Fixed cookies.get not working when url is not specified in filter. #20471
Fixed a crash in Node.js initialization in renderer processes. #20684
Fixed a crash that could occur when calling crashReporter.getUploadedReports. #20428
Fixed an issue in the remote module which could cause the name of the Object constructor to be overwritten globally. #20637
Fixed an issue that prevented setuid binaries from being launched from the renderer process on Linux. #19953
Fixed an issue where menu.closePopup() would have no effect if called too soon after menu.popup(). #20114
Fixed an issue where net requests with redirection mode 'error' could incorrectly follow a redirect. #20686
Fixed an issue where microtasks could sometimes be scheduled too eagerly, causing crashes when invoking Electron APIs during promises in certain situations. #20303
Fixed an issue with open and save dialogs selecting properties. #19781
Fixed debug symbol files on linux not containing private symbols. #20530
Fixed some systemPreferences.getColor() inconsistencies on macOS. #20611
Fixed the position of popups being created over embedded content. #20232
Fixed white flash after restoring an app from the background. #19873
Localized dialog button text on Linux. #19725
Prevented 'Reopen windows?' dialog from appearing on macOS after a crash. #19584
Removed unnecessary chromium patch for browser compositor on mac. #20390
[deps/uv] fsevents: fix file event reporting (backport: v12.x). #20408
Other Changes
Fixed a crash that could occur if a WebContents was destroyed during a navigation event. #20099
Fixed first beta version choosing logic. bf66fe51
No-notes. #18760, #20003
Removed .only. f566e562
Removed undocumented ipcRenderer.sendToAll(). #19556
The remote module now properly serializes Boolean, Number, String and RegExp instances. #20427
Updated Node.js to v12.10.0. #20129
Updated Node.js to v12.12.0. #20584
Updated Node.js to v12.13.0. #20657
Updated Node.js to v12.9.0. #19863
Updated Node.js to v12.9.1. #19980
Documentation
Documentation changes: #19387, #19444, #19975, #20230, #20472, #20621, #20622, #20644"
731,"Release Notes for v6.1.2
Fixes

Fixed native module size increase on windows, follow up fix to https://github.com/electron/electron/pull/20614. #20709
","Release Notes for v6.1.2
Fixes
Fixed native module size increase on windows, follow up fix to link. #20709"
732,"Release Notes for v6.1.1
Fixes

Fixed IPC hang when opening a specific case of nativeWindowOpen child window. #20547
Fixed an issue where objects referenced by remote could sometimes not be correctly freed. #20694
","Release Notes for v6.1.1
Fixes
Fixed IPC hang when opening a specific case of nativeWindowOpen child window. #20547
Fixed an issue where objects referenced by remote could sometimes not be correctly freed. #20694"
733,"Release Notes for v7.0.0
Notable Changes

Stack upgrades:

| Stack    | Version in Electron 6 | Version in Electron 7 | What's New |
   |:---------|:----|:----|:-----------|
 | Chromium | 76.0.3809.146         | 78.0.3905.1       | 77, 78
   | V8       | 7.6                   | 7.8               | 7.7, 7.8
   | Node.js  | 12.4.0                | 12.8.1            | 12.5, 12.6, 12.7, 12.8, 12.8.1

Added Windows on Arm (64 bit) release. #18591, #20112
Added ipcRenderer.invoke() and ipcMain.handle() for asynchronous request/response-style IPC. These are strongly recommended over the remote module. See this ""Electron’s ‘remote’ module considered harmful"" blog post for more information. #18449
Added nativeTheme API to read and respond to changes in the OS's theme and color scheme. #19758, #20486
Switched to a new TypeScript Definitions generator, which generates more precise definitions. If your TypeScript build fails, this is the likely cause. #18103

Breaking Changes
More information about these and future changes can be found on project's Planned Breaking Changes page.

Removed deprecated APIs:
Callback-based versions of functions that now use Promises. #17907
Tray.setHighlightMode() (macOS). #18981
app.enableMixedSandbox() #17894
app.getApplicationMenu(),
app.setApplicationMenu(),
powerMonitor.querySystemIdleState(),
powerMonitor.querySystemIdleTime(),
webFrame.setIsolatedWorldContentSecurityPolicy(),
webFrame.setIsolatedWorldHumanReadableName(),
webFrame.setIsolatedWorldSecurityOrigin() #18159


Session.clearAuthCache() no longer allows filtering the cleared cache entries. #17970
Native interfaces on macOS (menus, dialogs, etc.) now automatically match the dark mode setting on the user's machine. #19226
Updated the electron module to use @electron/get.  The minimum supported node version is now Node 8. #18413
The electron.asar file no longer exists. Any packaging scripts that depend on its existence should be updated. #18577

New Features

netLog.startLogging() now returns a promise which resolves when the net log has started recording.
All async webContents / <webview> methods now return a Promise. #18792
Added always-on-top-changed event emission for macOS. #19462
Added app.resignCurrentActivity() to allows marking inactive the current Handoff user activity without invalidating it. #18659
Added captureMode and maxFileSize options to the netLog API. #19215
Added creationTime / sandboxed / integrityLevel to app.getAppMetrics() output. #18718
Added failureReason parameter to the webContents.print() callback function to distinguish between success, failure, and cancellation. #19000
Added getBounds() method for BrowserView. #19370
Added gpu-info-update event to app, which is emitted whenever there is a GPU info update. #18250
Added memory to app.getAppMetrics(). #18831
Added process.getBlinkMemoryInfo(). #17762
Added removeInsertedCSS() to webFrame / webContents / <webview>. #16579
Added zoom-changed event to webContents, which is emitted when the user zooms using the mouse wheel on Windows, even if the focus is inside an (x-origin) iframe. #17747
Migrated Tray from custom to native view to be compatible with Catalina (macOS). #18981
Added a MenuItem.toolTip property macOS. #19099
Added printing customization options. #18984
Added an optional conflict handling callback to app.moveToApplicationsFolder. #18916
Added missing support for ELECTRON_DEFAULT_ERROR_MODE in the GPU process. #17728
Added security warning for remote modules with remote content. #18822
Support CSS origin in webFrame.insertCSS(). #19268
Support HTTP preconnect resource hints. #19952
Support NSVisualEffectMaterials vibrancy types added in macOS Mojave. #19073
Support mouse-move event of Tray API on Windows. #19265
Support systemPreferences.isDarkMode() API on Windows. #19217
Support systemPreferences.isHighContrastColorScheme() API on macOS. #19331
Support picture-in-picture mode for video elements. #19914
Support rotation multi-touch gestures on BrowserWindow for macOS. #19294
Added the ability to set authors in the Linux implementation of the About panel. #18964
Calling contentTracing.stopTracing() with no arguments is now permitted and has the same behaviour as calling it with an empty string (tracing data will be written to a temporary file). #18411
Can set a window always on top but behind the taskbar on Windows. #18982
Enabled the W3C Reporting API. #18255
Exposed the value of NSNotification.object to subscribers of notifications in systemPreferences. #19110
Implemented BrowserWindow.setFocusable on macOS. #19033
Renderer processes hosting cross-origin frames are now sandboxed unless the parent BrowserWindow enables nodeIntegrationInSubFrames. #18650
Set the ELECTRON_SKIP_BINARY_DOWNLOAD=1 environment variable to  skip electron binary download. #17627
Deprecated netLog.currentlyLoggingPath. #18289
Added Windows on Arm node header files to checksum file. #20261

Properties

Converted webContents primitive getters and setters to actual properties. #18998
Converted badgeCount to an actual property on the app module. #17363
app.name is now a property. #17701
nativeImage.templateImage is now a property on the nativeImage prototype. #18124
Converted appLevelAppearance to be a property on systemPreferences. #18477
Converted autoHideMenuBar to a property on BrowserWindow instances. #18555
Converted savePath accessor to a property on DownloadItem instances. #18677
Converted closable, fullscreenable, maximizable,  minimizable, movable, and resizable to be properties on the BrowserWindow prototype. #18618

Fixes

""Node integration with remote content"" and ""loading insecure content"" warning messages are suppressed for localhost connections. #18814
ELECTRON_RUN_AS_NODE now correctly parses both node options and v8 flags.  E.g. --expose_gc #19403
Fixed Linux console warning about gtk_disable_setlocale(). #20012
Fixed triggeredByAccelerator Event property behavior for MenuItems. #18865
Fixed a crash in window.print(). #19728
Fixed a crash on manual print cancellation as well as an issue with deviceName not working. #19668
Fixed a crash on tray popup being called multiple times in a row. #18999
Fixed bug where the close event would not emit upon closing modal window on macOS. #19014
Fixed crashReporter addExtraParameter / removeExtraParameter methods undefined in macOS node child processes. #15790
Fixed desktopCapturer leak. #20280
Fixed setting src on <webview> being too slow. #18990
Fixed several cases where document.visibilityState would be incorrect.  The win.show() and win.hide() methods now correctly update visibility state. #20134
Fixed support for the webkitdirectory attribute on input[type=file] elements. #18343
Fixed windows debug logging. #18199
Node.JS globals (process, Buffer, etc.) are no longer removed from the global scope if you have contextIsolation enabled as it is safe for those variables to still exist in their isolated world. #18967
Non-absolute session preload script paths are now ignored for sandboxed renderers. #19066
getPath('logs') now throws a more descriptive error if it fails to find the logs path. #19514
web-contents-created and browser-window-created no longer emit an empty object in place of Event. #19465
Fixed an issue where netLog.startLogging() would silently fail when called immediately during app.on('ready').
Fixed an issue whereby requiring some modules before the app ready event had side effects. #17496

Documentation

Documentation changes: #17865, #17903, #17904, #18328, #18368, #18499, #19797, #19844

End of Support for 4.x.y
Electron 4.x.y has reached end-of-support as per the project's support policy. Developers and applications are encouraged to upgrade to a newer version of Electron.","Release Notes for v7.0.0
Notable Changes
Stack upgrades:
| Stack    | Version in Electron 6 | Version in Electron 7 | What's New |
   |:---------|:----|:----|:-----------|
 | Chromium | 76.0.3809.146         | 78.0.3905.1       | 77, 78
   | V8       | 7.6                   | 7.8               | 7.7, 7.8
   | Node.js  | 12.4.0                | 12.8.1            | 12.5, 12.6, 12.7, 12.8, 12.8.1
Added Windows on Arm (64 bit) release. #18591, #20112
Added ipcRenderer.invoke() and ipcMain.handle() for asynchronous request/response-style IPC. These are strongly recommended over the remote module. See this ""Electron’s ‘remote’ module considered harmful"" blog post for more information. #18449
Added nativeTheme API to read and respond to changes in the OS's theme and color scheme. #19758, #20486
Switched to a new TypeScript Definitions generator, which generates more precise definitions. If your TypeScript build fails, this is the likely cause. #18103
Breaking Changes
More information about these and future changes can be found on project's Planned Breaking Changes page.
Removed deprecated APIs:
Callback-based versions of functions that now use Promises. #17907
Tray.setHighlightMode() (macOS). #18981
app.enableMixedSandbox() #17894
app.getApplicationMenu(),
app.setApplicationMenu(),
powerMonitor.querySystemIdleState(),
powerMonitor.querySystemIdleTime(),
webFrame.setIsolatedWorldContentSecurityPolicy(),
webFrame.setIsolatedWorldHumanReadableName(),
webFrame.setIsolatedWorldSecurityOrigin() #18159
Session.clearAuthCache() no longer allows filtering the cleared cache entries. #17970
Native interfaces on macOS (menus, dialogs, etc.) now automatically match the dark mode setting on the user's machine. #19226
Updated the electron module to use @electron/get.  The minimum supported node version is now Node 8. #18413
The electron.asar file no longer exists. Any packaging scripts that depend on its existence should be updated. #18577
New Features
netLog.startLogging() now returns a promise which resolves when the net log has started recording.
All async webContents /  methods now return a Promise. #18792
Added always-on-top-changed event emission for macOS. #19462
Added app.resignCurrentActivity() to allows marking inactive the current Handoff user activity without invalidating it. #18659
Added captureMode and maxFileSize options to the netLog API. #19215
Added creationTime / sandboxed / integrityLevel to app.getAppMetrics() output. #18718
Added failureReason parameter to the webContents.print() callback function to distinguish between success, failure, and cancellation. #19000
Added getBounds() method for BrowserView. #19370
Added gpu-info-update event to app, which is emitted whenever there is a GPU info update. #18250
Added memory to app.getAppMetrics(). #18831
Added process.getBlinkMemoryInfo(). #17762
Added removeInsertedCSS() to webFrame / webContents / . #16579
Added zoom-changed event to webContents, which is emitted when the user zooms using the mouse wheel on Windows, even if the focus is inside an (x-origin) iframe. #17747
Migrated Tray from custom to native view to be compatible with Catalina (macOS). #18981
Added a MenuItem.toolTip property macOS. #19099
Added printing customization options. #18984
Added an optional conflict handling callback to app.moveToApplicationsFolder. #18916
Added missing support for ELECTRON_DEFAULT_ERROR_MODE in the GPU process. #17728
Added security warning for remote modules with remote content. #18822
Support CSS origin in webFrame.insertCSS(). #19268
Support HTTP preconnect resource hints. #19952
Support NSVisualEffectMaterials vibrancy types added in macOS Mojave. #19073
Support mouse-move event of Tray API on Windows. #19265
Support systemPreferences.isDarkMode() API on Windows. #19217
Support systemPreferences.isHighContrastColorScheme() API on macOS. #19331
Support picture-in-picture mode for video elements. #19914
Support rotation multi-touch gestures on BrowserWindow for macOS. #19294
Added the ability to set authors in the Linux implementation of the About panel. #18964
Calling contentTracing.stopTracing() with no arguments is now permitted and has the same behaviour as calling it with an empty string (tracing data will be written to a temporary file). #18411
Can set a window always on top but behind the taskbar on Windows. #18982
Enabled the W3C Reporting API. #18255
Exposed the value of NSNotification.object to subscribers of notifications in systemPreferences. #19110
Implemented BrowserWindow.setFocusable on macOS. #19033
Renderer processes hosting cross-origin frames are now sandboxed unless the parent BrowserWindow enables nodeIntegrationInSubFrames. #18650
Set the ELECTRON_SKIP_BINARY_DOWNLOAD=1 environment variable to  skip electron binary download. #17627
Deprecated netLog.currentlyLoggingPath. #18289
Added Windows on Arm node header files to checksum file. #20261
Properties
Converted webContents primitive getters and setters to actual properties. #18998
Converted badgeCount to an actual property on the app module. #17363
app.name is now a property. #17701
nativeImage.templateImage is now a property on the nativeImage prototype. #18124
Converted appLevelAppearance to be a property on systemPreferences. #18477
Converted autoHideMenuBar to a property on BrowserWindow instances. #18555
Converted savePath accessor to a property on DownloadItem instances. #18677
Converted closable, fullscreenable, maximizable,  minimizable, movable, and resizable to be properties on the BrowserWindow prototype. #18618
Fixes
""Node integration with remote content"" and ""loading insecure content"" warning messages are suppressed for localhost connections. #18814
ELECTRON_RUN_AS_NODE now correctly parses both node options and v8 flags.  E.g. --expose_gc #19403
Fixed Linux console warning about gtk_disable_setlocale(). #20012
Fixed triggeredByAccelerator Event property behavior for MenuItems. #18865
Fixed a crash in window.print(). #19728
Fixed a crash on manual print cancellation as well as an issue with deviceName not working. #19668
Fixed a crash on tray popup being called multiple times in a row. #18999
Fixed bug where the close event would not emit upon closing modal window on macOS. #19014
Fixed crashReporter addExtraParameter / removeExtraParameter methods undefined in macOS node child processes. #15790
Fixed desktopCapturer leak. #20280
Fixed setting src on  being too slow. #18990
Fixed several cases where document.visibilityState would be incorrect.  The win.show() and win.hide() methods now correctly update visibility state. #20134
Fixed support for the webkitdirectory attribute on input[type=file] elements. #18343
Fixed windows debug logging. #18199
Node.JS globals (process, Buffer, etc.) are no longer removed from the global scope if you have contextIsolation enabled as it is safe for those variables to still exist in their isolated world. #18967
Non-absolute session preload script paths are now ignored for sandboxed renderers. #19066
getPath('logs') now throws a more descriptive error if it fails to find the logs path. #19514
web-contents-created and browser-window-created no longer emit an empty object in place of Event. #19465
Fixed an issue where netLog.startLogging() would silently fail when called immediately during app.on('ready').
Fixed an issue whereby requiring some modules before the app ready event had side effects. #17496
Documentation
Documentation changes: #17865, #17903, #17904, #18328, #18368, #18499, #19797, #19844
End of Support for 4.x.y
Electron 4.x.y has reached end-of-support as per the project's support policy. Developers and applications are encouraged to upgrade to a newer version of Electron."
734,"Release Notes for v6.1.0
This release is a minor bump as it contains exactly one new feature. contextBridge module, this feature is outlined below along with the other fixes and changes that went into this release. The 6.1.x series is now only release line in the 6.x.y major release line that will receive bug fixes and security fixes. It is recommended you upgrade to 6.1.x.
Features

Added new contextBridge module to make it easier to communicate between an isolated context and the main world. #20639

Fixes

Fixed fs.mkdir/mkdirSync hang with {recursive: true} for invalid names with node 12 on windows. #20665
Fixed native modules size increase with VC++ and node 12 on windows. #20627
Improved slow touchpad scrolling on windows. #20488

Other Changes

Manually bump version to 6.1.0-beta.0 in prep for 6.1.0. 3ca62d94
","Release Notes for v6.1.0
This release is a minor bump as it contains exactly one new feature. contextBridge module, this feature is outlined below along with the other fixes and changes that went into this release. The 6.1.x series is now only release line in the 6.x.y major release line that will receive bug fixes and security fixes. It is recommended you upgrade to 6.1.x.
Features
Added new contextBridge module to make it easier to communicate between an isolated context and the main world. #20639
Fixes
Fixed fs.mkdir/mkdirSync hang with {recursive: true} for invalid names with node 12 on windows. #20665
Fixed native modules size increase with VC++ and node 12 on windows. #20627
Improved slow touchpad scrolling on windows. #20488
Other Changes
Manually bump version to 6.1.0-beta.0 in prep for 6.1.0. 3ca62d94"
735,"Release Notes for v4.2.12
Fixes

Fixed HTML5 fullscreen APIs not working in <webview>. #20432
Fixed crashes of sandboxed renderers on macOS Catalina (10.15). #20497
","Release Notes for v4.2.12
Fixes
Fixed HTML5 fullscreen APIs not working in . #20432
Fixed crashes of sandboxed renderers on macOS Catalina (10.15). #20497"
736,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@7.0.0-beta.7.
# Release Notes for v7.0.0-beta.7
Fixes

Fixed cookies.get not working when url is not specified in filter. #20496
Fixed an issue where the open-url event was not properly being fired on macOS. #20523
Fixed memory leak when using protocol.registerSchemeAsPrivileged api. #20558
Fixed setting content-type header with charset breaking protocol APIs. #20544
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@7.0.0-beta.7.
Release Notes for v7.0.0-beta.7
Fixes
Fixed cookies.get not working when url is not specified in filter. #20496
Fixed an issue where the open-url event was not properly being fired on macOS. #20523
Fixed memory leak when using protocol.registerSchemeAsPrivileged api. #20558
Fixed setting content-type header with charset breaking protocol APIs. #20544"
737,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@7.0.0-beta.6.
# Release Notes for v7.0.0-beta.6
Features



Added nativeTheme.themeSource to allow apps to override Chromium and the OS's theme choice

Limited the nativeTheme API to the browser process only
Fix crash when the native OS theme changes. #20486






Fixes

Fixed Node.js' worker_threads in ELECTRON_RUN_AS_NODE. #20456
Fixed a regression in the recentDocuments MenuItem role on macOS. #20410
Fixed desktopCapturer leak. #20280
Fixed disabling color correct rendering with --disable-color-correct-rendering. #20359
Fixed parsing of paths with .asar in directory name extensions. #20401
Fixed process taking 100% CPU when crashed with no crashReporter set up on Windows x64. #20395
[deps/uv] fsevents: fix file event reporting (backport: v12.x). #20430
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@7.0.0-beta.6.
Release Notes for v7.0.0-beta.6
Features
Added nativeTheme.themeSource to allow apps to override Chromium and the OS's theme choice
Limited the nativeTheme API to the browser process only
Fix crash when the native OS theme changes. #20486
Fixes
Fixed Node.js' worker_threads in ELECTRON_RUN_AS_NODE. #20456
Fixed a regression in the recentDocuments MenuItem role on macOS. #20410
Fixed desktopCapturer leak. #20280
Fixed disabling color correct rendering with --disable-color-correct-rendering. #20359
Fixed parsing of paths with .asar in directory name extensions. #20401
Fixed process taking 100% CPU when crashed with no crashReporter set up on Windows x64. #20395
[deps/uv] fsevents: fix file event reporting (backport: v12.x). #20430"
738,"Release Notes for v6.0.12
Features

Set the ELECTRON_SKIP_BINARY_DOWNLOAD=1 environment variable to skip electron binary download. #20438

Fixes

Fixed Node.js' worker_threads in ELECTRON_RUN_AS_NODE. #20457
Fixed a regression in the recentDocuments MenuItem role on macOS. #20409
Fixed parsing of paths with .asar in directory name extensions. #20402
[deps/uv] fsevents: fix file event reporting (backport: v12.x). #20429
","Release Notes for v6.0.12
Features
Set the ELECTRON_SKIP_BINARY_DOWNLOAD=1 environment variable to skip electron binary download. #20438
Fixes
Fixed Node.js' worker_threads in ELECTRON_RUN_AS_NODE. #20457
Fixed a regression in the recentDocuments MenuItem role on macOS. #20409
Fixed parsing of paths with .asar in directory name extensions. #20402
[deps/uv] fsevents: fix file event reporting (backport: v12.x). #20429"
739,"Release Notes for v6.0.11
Fixes

Fixed a crash when exiting simple fullscreen on macOS. #20282
Fixed disabling color correct rendering with --disable-color-correct-rendering. #20358
Fixed process taking 100% CPU when crashed with no crashReporter set up on Windows x64. #20396
","Release Notes for v6.0.11
Fixes
Fixed a crash when exiting simple fullscreen on macOS. #20282
Fixed disabling color correct rendering with --disable-color-correct-rendering. #20358
Fixed process taking 100% CPU when crashed with no crashReporter set up on Windows x64. #20396"
740,"Release Notes for v5.0.11
Fixes

Added default NSMicrophoneUsageDescription and NSCameraUsageDescription strings to info.plist. #19950
Fixed a crash when exiting simple fullscreen on macOS. #20291
Fixed an issue where cursor blink rate was not honored. #20045
Fixed command-line scheme arguments from spilling over into each other. #19939
Fixed i18n of GTK messageboxes' stock buttons. #20010
Fixed issue where using the menu on Linux would un-focus the webContents. #20034
Fixed web page displayed with offset when using native tab on macOS. #19882
Reduced the size of the chrome-sandbox binary on Linux from ~5MB to ~0.2MB by stripping debug symbols that were inadvertently being included. #20082
","Release Notes for v5.0.11
Fixes
Added default NSMicrophoneUsageDescription and NSCameraUsageDescription strings to info.plist. #19950
Fixed a crash when exiting simple fullscreen on macOS. #20291
Fixed an issue where cursor blink rate was not honored. #20045
Fixed command-line scheme arguments from spilling over into each other. #19939
Fixed i18n of GTK messageboxes' stock buttons. #20010
Fixed issue where using the menu on Linux would un-focus the webContents. #20034
Fixed web page displayed with offset when using native tab on macOS. #19882
Reduced the size of the chrome-sandbox binary on Linux from ~5MB to ~0.2MB by stripping debug symbols that were inadvertently being included. #20082"
741,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@7.0.0-beta.5.
# Release Notes for v7.0.0-beta.5
Fixes

Fixed a crash when exiting simple fullscreen on macOS. #20220
Fixed crash loading file based ServiceWorkers. #20142
Fixed issue where maximizing a window on Windows in vertically stacked multi-monitor setups could result in the window rendering a white screen. #20053
Fixed issue where using the menu on Linux would un-focus the webContents. #20036
Fixed several cases where document.visibilityState would be incorrect.  The win.show() and win.hide() methods now correctly update visibility state. #20134
Reduced the size of the chrome-sandbox binary on Linux from ~5MB to ~0.2MB by stripping debug symbols that were inadvertently being included. #20083
Updated Chromium to 78.0.3905.1. #20062

Other Changes

Added Windows on Arm (64 bit) release. #20112
Added Windows on Arm node header files to checksum file. #20261
Fixed node.lib linking issue. #20193
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@7.0.0-beta.5.
Release Notes for v7.0.0-beta.5
Fixes
Fixed a crash when exiting simple fullscreen on macOS. #20220
Fixed crash loading file based ServiceWorkers. #20142
Fixed issue where maximizing a window on Windows in vertically stacked multi-monitor setups could result in the window rendering a white screen. #20053
Fixed issue where using the menu on Linux would un-focus the webContents. #20036
Fixed several cases where document.visibilityState would be incorrect.  The win.show() and win.hide() methods now correctly update visibility state. #20134
Reduced the size of the chrome-sandbox binary on Linux from ~5MB to ~0.2MB by stripping debug symbols that were inadvertently being included. #20083
Updated Chromium to 78.0.3905.1. #20062
Other Changes
Added Windows on Arm (64 bit) release. #20112
Added Windows on Arm node header files to checksum file. #20261
Fixed node.lib linking issue. #20193"
742,"Release Notes for v6.0.10
Other Changes

Added Windows on Arm node header files to checksum file. #20260
","Release Notes for v6.0.10
Other Changes
Added Windows on Arm node header files to checksum file. #20260"
743,"Release Notes for v4.2.11
Fixes

Added more safety checks in the MojoCdmService (#20222) Security
","Release Notes for v4.2.11
Fixes
Added more safety checks in the MojoCdmService (#20222) Security"
744,"Release Notes for v6.0.9
Other Changes

Fixed node.lib linking issue. #20194
","Release Notes for v6.0.9
Other Changes
Fixed node.lib linking issue. #20194"
745,"Release Notes for v6.0.8
Fixes

Fixed an issue where cursor blink rate was not honored. #20046
Fixed crash with --inspect-brk under ELECTRON_RUN_AS_NODE flag. #20098
Fixed issue where using the menu on Linux would un-focus the webContents. #20035
Reduced the size of the chrome-sandbox binary on Linux from ~5MB to ~0.2MB by stripping debug symbols that were inadvertently being included. #20081

Other Changes

Added Windows on Arm (64 bit) release. #20113
Updated Chromium to 76.0.3809.146. #20149
","Release Notes for v6.0.8
Fixes
Fixed an issue where cursor blink rate was not honored. #20046
Fixed crash with --inspect-brk under ELECTRON_RUN_AS_NODE flag. #20098
Fixed issue where using the menu on Linux would un-focus the webContents. #20035
Reduced the size of the chrome-sandbox binary on Linux from ~5MB to ~0.2MB by stripping debug symbols that were inadvertently being included. #20081
Other Changes
Added Windows on Arm (64 bit) release. #20113
Updated Chromium to 76.0.3809.146. #20149"
746,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@7.0.0-beta.4.
# Release Notes for v7.0.0-beta.4
Features

Added support for HTTP preconnect resource hints. #19952
Added support for picture-in-picture mode for video elements. #19914

Fixes

Added default NSMicrophoneUsageDescription and NSCameraUsageDescription strings to info.plist. #19948
Correctly internationalize i18n in GTK-based Linux dialogs. #19783
Fixed Linux console warning about gtk_disable_setlocale(). #20012
Fixed a bug where an unresizable window would shrink when restored after being minimized on Windows. #19957
Fixed a bug where sometimes a ~10px white border would be added to fullscreen windows on Windows. #19942
Fixed a bug where windows would sometimes shrink to 0 size after being restored on Windows. #20000
Fixed a bug where you couldn't navigate the menu bar with the keyboard if you used the mouse to focus it. #19762
Fixed a crash on <input type=""file""> dialog cancellation. #19917
Fixed a race condition that occurred when using protocol.registerStreamProtocol. #19869
Fixed an issue where app.getPath('logs') would throw an error if the logs path was not previously set. #19836
Fixed an issue where a call to child_process.fork() would set ELECTRON_RUN_AS_NODE in the main process. #19776
Fixed an issue where cursor blink rate was not honored. #20044
Fixed command-line scheme arguments from spilling over into each other. #19941
Fixed i18n of GTK messageboxes' stock buttons. #19982
Fixed issue where reloading the window after calling setBackgroundColor would result in using an older background color setting. #19974
Fixed web page displayed with offset when using native tab on macOS. #19898
Fixed white flash after restoring an app from the background. #19901
Removed the possibility of a preload script being executed twice for the same process in quickly succeeding navigations in the same frame. #19827
Updated Chromium to 78.0.3896.6. #19609

Other Changes

Updated Node.js to v12.8.1. #19835

Documentation

Documentation changes: #19797, #19844
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@7.0.0-beta.4.
Release Notes for v7.0.0-beta.4
Features
Added support for HTTP preconnect resource hints. #19952
Added support for picture-in-picture mode for video elements. #19914
Fixes
Added default NSMicrophoneUsageDescription and NSCameraUsageDescription strings to info.plist. #19948
Correctly internationalize i18n in GTK-based Linux dialogs. #19783
Fixed Linux console warning about gtk_disable_setlocale(). #20012
Fixed a bug where an unresizable window would shrink when restored after being minimized on Windows. #19957
Fixed a bug where sometimes a ~10px white border would be added to fullscreen windows on Windows. #19942
Fixed a bug where windows would sometimes shrink to 0 size after being restored on Windows. #20000
Fixed a bug where you couldn't navigate the menu bar with the keyboard if you used the mouse to focus it. #19762
Fixed a crash on  dialog cancellation. #19917
Fixed a race condition that occurred when using protocol.registerStreamProtocol. #19869
Fixed an issue where app.getPath('logs') would throw an error if the logs path was not previously set. #19836
Fixed an issue where a call to child_process.fork() would set ELECTRON_RUN_AS_NODE in the main process. #19776
Fixed an issue where cursor blink rate was not honored. #20044
Fixed command-line scheme arguments from spilling over into each other. #19941
Fixed i18n of GTK messageboxes' stock buttons. #19982
Fixed issue where reloading the window after calling setBackgroundColor would result in using an older background color setting. #19974
Fixed web page displayed with offset when using native tab on macOS. #19898
Fixed white flash after restoring an app from the background. #19901
Removed the possibility of a preload script being executed twice for the same process in quickly succeeding navigations in the same frame. #19827
Updated Chromium to 78.0.3896.6. #19609
Other Changes
Updated Node.js to v12.8.1. #19835
Documentation
Documentation changes: #19797, #19844"
747,"Release Notes for v6.0.7
Fixes

Fixed issue where maximizing a window on Windows in vertically stacked multi-monitor setups could result in the window rendering a white screen. #20052

Other Changes

Updated Chromium to 76.0.3809.139. #20042
","Release Notes for v6.0.7
Fixes
Fixed issue where maximizing a window on Windows in vertically stacked multi-monitor setups could result in the window rendering a white screen. #20052
Other Changes
Updated Chromium to 76.0.3809.139. #20042"
748,"Release Notes for v6.0.6
Fixes

Fixed a bug where windows would sometimes shrink to 0 size after being restored on Windows. #20001
Fixed i18n of GTK messageboxes' stock buttons. #20007

Other Changes

Updated Chromium to 76.0.3809.138. #20024
","Release Notes for v6.0.6
Fixes
Fixed a bug where windows would sometimes shrink to 0 size after being restored on Windows. #20001
Fixed i18n of GTK messageboxes' stock buttons. #20007
Other Changes
Updated Chromium to 76.0.3809.138. #20024"
749,"Release Notes for v4.2.10
Fixes

Fixed command-line scheme arguments from spilling over into each other. #19954
Fixed web page displayed with offset when using native tab on macOS. #19881
","Release Notes for v4.2.10
Fixes
Fixed command-line scheme arguments from spilling over into each other. #19954
Fixed web page displayed with offset when using native tab on macOS. #19881"
750,"Release Notes for v6.0.5
Fixes

Added default NSMicrophoneUsageDescription and NSCameraUsageDescription strings to info.plist. #19949
Fixed a bug where an unresizable window would shrink when restored after being minimized on Windows. #19956
Fixed a bug where sometimes a ~10px white border would be added to fullscreen windows on Windows. #19944
Fixed command-line scheme arguments from spilling over into each other. #19940
Fixed issue where reloading the window after calling setBackgroundColor would result in using an older background color setting. #19973
No-notes. #19391

Other Changes

Updated Chromium to 76.0.3809.136. #19981
","Release Notes for v6.0.5
Fixes
Added default NSMicrophoneUsageDescription and NSCameraUsageDescription strings to info.plist. #19949
Fixed a bug where an unresizable window would shrink when restored after being minimized on Windows. #19956
Fixed a bug where sometimes a ~10px white border would be added to fullscreen windows on Windows. #19944
Fixed command-line scheme arguments from spilling over into each other. #19940
Fixed issue where reloading the window after calling setBackgroundColor would result in using an older background color setting. #19973
No-notes. #19391
Other Changes
Updated Chromium to 76.0.3809.136. #19981"
751,"Release Notes for v6.0.4
Fixes

Fixed an issue where a call to child_process.fork() would set ELECTRON_RUN_AS_NODE in the main process. #19845
Fixed web page displayed with offset when using native tab on macOS. #19888
Fixed white flash after restoring an app from the background. #19900

Other Changes

Updated Chromium to 76.0.3809.131. #19909

Documentation

Documentation changes: #19843
","Release Notes for v6.0.4
Fixes
Fixed an issue where a call to child_process.fork() would set ELECTRON_RUN_AS_NODE in the main process. #19845
Fixed web page displayed with offset when using native tab on macOS. #19888
Fixed white flash after restoring an app from the background. #19900
Other Changes
Updated Chromium to 76.0.3809.131. #19909
Documentation
Documentation changes: #19843"
752,"Release Notes for v6.0.3
Fixes

Correctly internationalize i18n in GTK-based Linux dialogs. #19760
Fixed a bug where you couldn't navigate the menu bar with the keyboard if you used the mouse to focus it. #19764
Fixed bug where inputs would lose focus when opening the menu bar, preventing many menu items (Edit/Copy/Paste/etc.) to be unusable on Windows and Linux. #19708
Fixed occasional crashes while selecting text. #19808
Normalized out-of-bound value behavior for the setOpacity() API in BrowserWindow. #19723
Removed the possibility of a preload script being executed twice for the same process in quickly succeeding navigations in the same frame. #19826

Other Changes

No-notes. #19383
Updated Chromium to 76.0.3809.126. #19791

Documentation

Documentation changes: #19798
","Release Notes for v6.0.3
Fixes
Correctly internationalize i18n in GTK-based Linux dialogs. #19760
Fixed a bug where you couldn't navigate the menu bar with the keyboard if you used the mouse to focus it. #19764
Fixed bug where inputs would lose focus when opening the menu bar, preventing many menu items (Edit/Copy/Paste/etc.) to be unusable on Windows and Linux. #19708
Fixed occasional crashes while selecting text. #19808
Normalized out-of-bound value behavior for the setOpacity() API in BrowserWindow. #19723
Removed the possibility of a preload script being executed twice for the same process in quickly succeeding navigations in the same frame. #19826
Other Changes
No-notes. #19383
Updated Chromium to 76.0.3809.126. #19791
Documentation
Documentation changes: #19798"
753,"Release Notes for v5.0.10
Fixes

Correctly internationalize i18n in GTK-based Linux dialogs. #19801
Fixed BrowserWindow's will-resize event returning wrong bounds on macOS. #19705
Fixed a bug where you couldn't navigate the menu bar with the keyboard if you used the mouse to focus it. #19763
Fixed a crash in window.print(). #19678
Fixed bug where inputs would lose focus when opening the menu bar, preventing many menu items (Edit/Copy/Paste/etc.) to be unusable on Windows and Linux. #19707
Normalized out-of-bound value behavior for the setOpacity() API in BrowserWindow. #19724
Removed the possibility of a preload script being executed twice for the same process in quickly succeeding navigations in the same frame. #19828
Uint8Array and Uint16Array can now be sent correctly in Chrome Extension MessagePort instances. #19654

Documentation

Documentation changes: #19796
","Release Notes for v5.0.10
Fixes
Correctly internationalize i18n in GTK-based Linux dialogs. #19801
Fixed BrowserWindow's will-resize event returning wrong bounds on macOS. #19705
Fixed a bug where you couldn't navigate the menu bar with the keyboard if you used the mouse to focus it. #19763
Fixed a crash in window.print(). #19678
Fixed bug where inputs would lose focus when opening the menu bar, preventing many menu items (Edit/Copy/Paste/etc.) to be unusable on Windows and Linux. #19707
Normalized out-of-bound value behavior for the setOpacity() API in BrowserWindow. #19724
Removed the possibility of a preload script being executed twice for the same process in quickly succeeding navigations in the same frame. #19828
Uint8Array and Uint16Array can now be sent correctly in Chrome Extension MessagePort instances. #19654
Documentation
Documentation changes: #19796"
754,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@7.0.0-beta.3.
# Release Notes for v7.0.0-beta.3
Features

Added new nativeTheme API to read and respond to changes in the OS's theme and color scheme. #19758

Fixes

Fixed BrowserWindow's will-resize event returning wrong bounds on macOS. #19680
Fixed a crash in window.print(). #19728
Fixed async Node APIs not working after received IPC message. #19722
Fixed bug where inputs would lose focus when opening the menu bar, preventing many menu items (Edit/Copy/Paste/etc.) to be unusable on Windows and Linux. #19706
Normalized out-of-bound value behavior for the setOpacity() API in BrowserWindow. #19673
Updated Node.js to v12.8.0. #19726
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@7.0.0-beta.3.
Release Notes for v7.0.0-beta.3
Features
Added new nativeTheme API to read and respond to changes in the OS's theme and color scheme. #19758
Fixes
Fixed BrowserWindow's will-resize event returning wrong bounds on macOS. #19680
Fixed a crash in window.print(). #19728
Fixed async Node APIs not working after received IPC message. #19722
Fixed bug where inputs would lose focus when opening the menu bar, preventing many menu items (Edit/Copy/Paste/etc.) to be unusable on Windows and Linux. #19706
Normalized out-of-bound value behavior for the setOpacity() API in BrowserWindow. #19673
Updated Node.js to v12.8.0. #19726"
755,"Release Notes for v6.0.2
Fixes

Fixed BrowserWindow's will-resize event returning wrong bounds on macOS. #19704
Fixed a crash in window.print(). #19677
Fixed async Node APIs not working after received IPC message. #19719

Other Changes

Updated Chromium to 76.0.3809.110. #19684
","Release Notes for v6.0.2
Fixes
Fixed BrowserWindow's will-resize event returning wrong bounds on macOS. #19704
Fixed a crash in window.print(). #19677
Fixed async Node APIs not working after received IPC message. #19719
Other Changes
Updated Chromium to 76.0.3809.110. #19684"
756,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@7.0.0-beta.2.
# Release Notes for v7.0.0-beta.2
Fixes

Exposed setMenuBarVisibility on BrowserWindow again. #19579
Fixed a crash in window.print(). #19623
Fixed a crash on manual print cancellation as well as an issue with deviceName not working. #19668
Fixed bug where app would crash if app.showAboutPanel() was called before setting any About panel options on Linux. #19625
Fixed case where sending IPC to a child window (opened with window.open) could cause a crash. #19632
Fixed crashes when using the application menu. #19558
Fixed the clearRecentDocuments MenuItem role on Windows. #19638
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@7.0.0-beta.2.
Release Notes for v7.0.0-beta.2
Fixes
Exposed setMenuBarVisibility on BrowserWindow again. #19579
Fixed a crash in window.print(). #19623
Fixed a crash on manual print cancellation as well as an issue with deviceName not working. #19668
Fixed bug where app would crash if app.showAboutPanel() was called before setting any About panel options on Linux. #19625
Fixed case where sending IPC to a child window (opened with window.open) could cause a crash. #19632
Fixed crashes when using the application menu. #19558
Fixed the clearRecentDocuments MenuItem role on Windows. #19638"
757,"Release Notes for v6.0.1
Fixes

Fixed 'swipe' event emission on macOS. #19354
Fixed process.uptime() returning the wrong time. #19567
Fixed tray.displayBalloon() not working with custom icon on Windows. #19528
Fixed case where sending IPC to a child window (opened with window.open) could cause a crash. #19633
Fixed crashes when using the application menu on Linux. #19560
Fixed default dock bounce type on macOS. #19546
Fixed handling of invalid webRequest url pattern filtering in onBeforeRequest. #19570
Ensured that the alwaysOnTop status returned when always-on-top-changed was emitted was correct. #19534
Fixed setting the backgroundColor property on TouchBarButton to default by assigning null after the item is constructed. #19471
Fixed the clearRecentDocuments MenuItem role on Windows. #19637
Standardized the about panel icon size on Linux. #19572
getPath('logs') now throws better error when it fails to find the logs path. #19545

Other Changes

Updated Chromium to 76.0.3809.102. #19649
","Release Notes for v6.0.1
Fixes
Fixed 'swipe' event emission on macOS. #19354
Fixed process.uptime() returning the wrong time. #19567
Fixed tray.displayBalloon() not working with custom icon on Windows. #19528
Fixed case where sending IPC to a child window (opened with window.open) could cause a crash. #19633
Fixed crashes when using the application menu on Linux. #19560
Fixed default dock bounce type on macOS. #19546
Fixed handling of invalid webRequest url pattern filtering in onBeforeRequest. #19570
Ensured that the alwaysOnTop status returned when always-on-top-changed was emitted was correct. #19534
Fixed setting the backgroundColor property on TouchBarButton to default by assigning null after the item is constructed. #19471
Fixed the clearRecentDocuments MenuItem role on Windows. #19637
Standardized the about panel icon size on Linux. #19572
getPath('logs') now throws better error when it fails to find the logs path. #19545
Other Changes
Updated Chromium to 76.0.3809.102. #19649"
758,"Release Notes for v5.0.9
Fixes

Fixed process.uptime() returning the wrong time. #19566
Fixed tray.displayBalloon() not working with custom icon on Windows. #19530
Fixed an issue where tray.destroy was not working properly on some linux distros. #19619
Fixed an issue where windows symbol files were changed in a way that was incompatible with some symbolication tools. #19503
Fixed crashes when using the application menu on Linux. #19561
Fixed error throwing on invalid webRequest url pattern filtering in onBeforeRequest. #19580
Fixed inverted alwaysOnTop status returned when always-on-top-changed was emitted. #19506
Fixed setting the backgroundColor property on TouchBarButton to default by assigning null after the item is constructed. #19473
Fixed the clearRecentDocuments MenuItem role on Windows. #19640
Fixed the callback of beginFrameSubscription passing Buffer instead of NativeImage. #19647
Standardized the about panel icon size on Linux. #19581
","Release Notes for v5.0.9
Fixes
Fixed process.uptime() returning the wrong time. #19566
Fixed tray.displayBalloon() not working with custom icon on Windows. #19530
Fixed an issue where tray.destroy was not working properly on some linux distros. #19619
Fixed an issue where windows symbol files were changed in a way that was incompatible with some symbolication tools. #19503
Fixed crashes when using the application menu on Linux. #19561
Fixed error throwing on invalid webRequest url pattern filtering in onBeforeRequest. #19580
Fixed inverted alwaysOnTop status returned when always-on-top-changed was emitted. #19506
Fixed setting the backgroundColor property on TouchBarButton to default by assigning null after the item is constructed. #19473
Fixed the clearRecentDocuments MenuItem role on Windows. #19640
Fixed the callback of beginFrameSubscription passing Buffer instead of NativeImage. #19647
Standardized the about panel icon size on Linux. #19581"
759,"Release Notes for v4.2.9
Fixes

Fixed 'swipe' event emission on macoS>. #19352
Fixed tray.displayBalloon() not working with custom icon on Windows. #19529
Fixed an issue where windows symbol files were changed in a way that was incompatible with some symbolication tools. #19502
Fixed setting the backgroundColor property on TouchBarButton to default by assigning null after the item is constructed. #19472
","Release Notes for v4.2.9
Fixes
Fixed 'swipe' event emission on macoS>. #19352
Fixed tray.displayBalloon() not working with custom icon on Windows. #19529
Fixed an issue where windows symbol files were changed in a way that was incompatible with some symbolication tools. #19502
Fixed setting the backgroundColor property on TouchBarButton to default by assigning null after the item is constructed. #19472"
760,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@7.0.0-beta.1.
# Release Notes for v7.0.0-beta.1
Breaking Changes

Removed deprecated APIs: powerMonitor.querySystemIdleState(), powerMonitor.querySystemIdleTime(), webFrame.setIsolatedWorldContentSecurityPolicy(), webFrame.setIsolatedWorldHumanReadableName(), webFrame.setIsolatedWorldSecurityOrigin(), app.getApplicationMenu() and app.setApplicationMenu(). #18159
Session.clearAuthCache no longer allows filtering the cleared cache entries. #17970
Removed deprecated Tray.setHighlightMode method (macOS). #18981
Native interfaces on macOS (menus, dialogs, etc.) now automatically match the dark mode setting on the users machine. #19226
Updated the electron npm module to use @electron/get.  The minimum supported node version is now Node 8. #18413
Removed deprecated app.enableMixedSandbox() API. #17894
Removed deprecated callback versions of asynchronous functions to force use of promises. #17907

Notable Changes

Switched to a new Typescript Definitions generator.  This means that some interface names may have changed, if your Typescript build is failing this is the cause. #18103
The electron.asar file no longer exists, if you have packaging scripts that depend on it's existence you should update them. #18577
Deprecated netLog.currentlyLoggingPath. #18289

Features

Added always-on-top-changed event emission for macOS. #19462
Added captureMode and maxFileSize options to the netLog API. #19215
Added creationTime / sandboxed / integrityLevel to app.getAppMetrics() output. #18718
Added getBounds() method for BrowserView. #19370
Added gpu-info-update event to app, which is emitted whenever there is a GPU info update. #18250
Added ipcRenderer.invoke() and ipcMain.handle() for asynchronous request/response-style IPC. #18449
Added memory to app.getAppMetrics(). #18831
Added process.getBlinkMemoryInfo(). #17762
Added removeInsertedCSS() to webFrame / webContents / <webview>. #16579
Added zoom-changed event to webContents, which is emitted when the user is trying to zoom in / out using the mouse wheel on Windows, even if the focus is inside an (x-origin) iframe. #17747
Added a method app.resignCurrentActivity() to allows marking inactive the current Handoff user activity without invalidating it. #18659
Added a property to set tooltips for MenuItems on macOS. #19099
Added a selection of new printing customization options. #18984
Added an optional conflict handling callback to app.moveToApplicationsFolder. #18916
Added security warning for remote module with remote content. #18822
Added support for CSS origin in webFrame.insertCSS(). #19268
Added support for NSVisualEffectMaterials vibrancy types added in macOS Mojave. #19073
Added support for mouse-move event of Tray API on Windows. #19265
Added support for systemPreferences.isDarkMode() API on Windows. #19217
Added support for systemPreferences.isHighContrastColorScheme() API on macOS. #19331
Added support for rotation multi-touch gestures on BrowserWindow for macOS. #19294
Added the ability to set authors in the Linux implementation of the About panel. #18964
All async webContents / <webview> methods now return a Promise. #18792
Calling contentTracing.stopTracing() with no arguments is now permitted and has the same behaviour as calling it with an empty string (tracing data will be written to a temporary file). #18411
Converted webContents primitive getters and setters to bespoke properties. #18998
Enabled the W3C Reporting API. #18255
Exposed the value of NSNotification.object to subscribers of notifications in systemPreferences. #19110
Implemented BrowserWindow.setFocusable on macOS. #19033
Improved webContents.print() callback value to distinguish between success, failure, and cancellation. #19000
Renderer processes hosting cross-origin frames are now sandboxed unless the parent BrowserWindow enables nodeIntegrationInSubFrames. #18650
You can now set the ELECTRON_SKIP_BINARY_DOWNLOAD=1 environment variable to  skip electron binary download during installation of the npm package. #17627
netLog.startLogging() now returns a promise which resolves when the net log has started recording.

Fixes

Added missing support for ELECTRON_DEFAULT_ERROR_MODE in the GPU process. #17728
""Node integration with remote content"" and ""loading insecure content"" warning messages are suppressed for localhost connections. #18814
Converted badgeCount to an actual property on the app module. #17363
Ensured that the node env is not bootstrapped before running inspector. cf2103d6
Ensured we wait for the inspect to disconnect. 2132fdfa
Fixed process.uptime() returning the wrong time. #19436
Fixed triggeredByAccelerator Event property behavior for MenuItems. #18865
Fixed a crash on tray popup being called multiple times in a row. #18999
Fixed an issue where the Tray icon context menu on macOS blocked the main process while open. #18880
Fixed bug where the close event would not emit upon closing modal window on macOS. #19014
Fixed crashReporter addExtraParameter / removeExtraParameter methods undefined in macOS node child processes. #15790
Fixed error throwing on invalid webRequest url pattern filtering in onBeforeRequest. #19337
Fixed incorrect passing of dialog MessageBox type. #19349
Fixed inverted alwaysOnTop status returned when always-on-top-changed was emitted on Linux and Windows. #19463
Fixed issues that will halt the runtime on modern Python. #18395
Fixed linting after shell rename. 56930338
Fixed setting src on <webview> being too slow. #18990
Fixed silent printing across platforms. #18979
Fixed support for the webkitdirectory attribute on input[type=file] elements. #18343
Fixed windows debug logging. #18199
Node.JS globals (process, Buffer, etc.) are no longer removed from the global scope if you have contextIsolation enabled as it is safe for those variables to still exist in their isolated world. #18967
Non-absolute session preload script paths are now ignored for sandboxed renderers. #19066
Standardized the about panel icon size on Linux. #18957
getPath('logs') now throws better error when it fails to find the logs path. #19514
web-contents-created and browser-window-created no longer emit an empty object in place of Event. #19465
Fixed an issue whereby requiring some modules before the app ready event had side effects. #17496
Fixed an issue where netLog.startLogging() would silently fail when called immediately during app.on('ready').

Other Changes

Converted appLevelAppearance to be a property on systemPreferences. #18477
Converted autoHideMenuBar to a property on BrowserWindow instances. #18555
Converted savePath accessor to a property on DownloadItem instances. #18677
Converted resizable, maximizable, minimizable, fullscreenable, movable and closable getters / setters on the BrowserWindow class to properties. #18618
Converted name to be a property on the app module. #17701
Converted nativeImage.templateImage to be a property on the nativeImage prototype. #18124

Documentation

Documentation changes: #17865, #17903, #17904, #18328, #18368, #18499
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@7.0.0-beta.1.
Release Notes for v7.0.0-beta.1
Breaking Changes
Removed deprecated APIs: powerMonitor.querySystemIdleState(), powerMonitor.querySystemIdleTime(), webFrame.setIsolatedWorldContentSecurityPolicy(), webFrame.setIsolatedWorldHumanReadableName(), webFrame.setIsolatedWorldSecurityOrigin(), app.getApplicationMenu() and app.setApplicationMenu(). #18159
Session.clearAuthCache no longer allows filtering the cleared cache entries. #17970
Removed deprecated Tray.setHighlightMode method (macOS). #18981
Native interfaces on macOS (menus, dialogs, etc.) now automatically match the dark mode setting on the users machine. #19226
Updated the electron npm module to use @electron/get.  The minimum supported node version is now Node 8. #18413
Removed deprecated app.enableMixedSandbox() API. #17894
Removed deprecated callback versions of asynchronous functions to force use of promises. #17907
Notable Changes
Switched to a new Typescript Definitions generator.  This means that some interface names may have changed, if your Typescript build is failing this is the cause. #18103
The electron.asar file no longer exists, if you have packaging scripts that depend on it's existence you should update them. #18577
Deprecated netLog.currentlyLoggingPath. #18289
Features
Added always-on-top-changed event emission for macOS. #19462
Added captureMode and maxFileSize options to the netLog API. #19215
Added creationTime / sandboxed / integrityLevel to app.getAppMetrics() output. #18718
Added getBounds() method for BrowserView. #19370
Added gpu-info-update event to app, which is emitted whenever there is a GPU info update. #18250
Added ipcRenderer.invoke() and ipcMain.handle() for asynchronous request/response-style IPC. #18449
Added memory to app.getAppMetrics(). #18831
Added process.getBlinkMemoryInfo(). #17762
Added removeInsertedCSS() to webFrame / webContents / . #16579
Added zoom-changed event to webContents, which is emitted when the user is trying to zoom in / out using the mouse wheel on Windows, even if the focus is inside an (x-origin) iframe. #17747
Added a method app.resignCurrentActivity() to allows marking inactive the current Handoff user activity without invalidating it. #18659
Added a property to set tooltips for MenuItems on macOS. #19099
Added a selection of new printing customization options. #18984
Added an optional conflict handling callback to app.moveToApplicationsFolder. #18916
Added security warning for remote module with remote content. #18822
Added support for CSS origin in webFrame.insertCSS(). #19268
Added support for NSVisualEffectMaterials vibrancy types added in macOS Mojave. #19073
Added support for mouse-move event of Tray API on Windows. #19265
Added support for systemPreferences.isDarkMode() API on Windows. #19217
Added support for systemPreferences.isHighContrastColorScheme() API on macOS. #19331
Added support for rotation multi-touch gestures on BrowserWindow for macOS. #19294
Added the ability to set authors in the Linux implementation of the About panel. #18964
All async webContents /  methods now return a Promise. #18792
Calling contentTracing.stopTracing() with no arguments is now permitted and has the same behaviour as calling it with an empty string (tracing data will be written to a temporary file). #18411
Converted webContents primitive getters and setters to bespoke properties. #18998
Enabled the W3C Reporting API. #18255
Exposed the value of NSNotification.object to subscribers of notifications in systemPreferences. #19110
Implemented BrowserWindow.setFocusable on macOS. #19033
Improved webContents.print() callback value to distinguish between success, failure, and cancellation. #19000
Renderer processes hosting cross-origin frames are now sandboxed unless the parent BrowserWindow enables nodeIntegrationInSubFrames. #18650
You can now set the ELECTRON_SKIP_BINARY_DOWNLOAD=1 environment variable to  skip electron binary download during installation of the npm package. #17627
netLog.startLogging() now returns a promise which resolves when the net log has started recording.
Fixes
Added missing support for ELECTRON_DEFAULT_ERROR_MODE in the GPU process. #17728
""Node integration with remote content"" and ""loading insecure content"" warning messages are suppressed for localhost connections. #18814
Converted badgeCount to an actual property on the app module. #17363
Ensured that the node env is not bootstrapped before running inspector. cf2103d6
Ensured we wait for the inspect to disconnect. 2132fdfa
Fixed process.uptime() returning the wrong time. #19436
Fixed triggeredByAccelerator Event property behavior for MenuItems. #18865
Fixed a crash on tray popup being called multiple times in a row. #18999
Fixed an issue where the Tray icon context menu on macOS blocked the main process while open. #18880
Fixed bug where the close event would not emit upon closing modal window on macOS. #19014
Fixed crashReporter addExtraParameter / removeExtraParameter methods undefined in macOS node child processes. #15790
Fixed error throwing on invalid webRequest url pattern filtering in onBeforeRequest. #19337
Fixed incorrect passing of dialog MessageBox type. #19349
Fixed inverted alwaysOnTop status returned when always-on-top-changed was emitted on Linux and Windows. #19463
Fixed issues that will halt the runtime on modern Python. #18395
Fixed linting after shell rename. 56930338
Fixed setting src on  being too slow. #18990
Fixed silent printing across platforms. #18979
Fixed support for the webkitdirectory attribute on input[type=file] elements. #18343
Fixed windows debug logging. #18199
Node.JS globals (process, Buffer, etc.) are no longer removed from the global scope if you have contextIsolation enabled as it is safe for those variables to still exist in their isolated world. #18967
Non-absolute session preload script paths are now ignored for sandboxed renderers. #19066
Standardized the about panel icon size on Linux. #18957
getPath('logs') now throws better error when it fails to find the logs path. #19514
web-contents-created and browser-window-created no longer emit an empty object in place of Event. #19465
Fixed an issue whereby requiring some modules before the app ready event had side effects. #17496
Fixed an issue where netLog.startLogging() would silently fail when called immediately during app.on('ready').
Other Changes
Converted appLevelAppearance to be a property on systemPreferences. #18477
Converted autoHideMenuBar to a property on BrowserWindow instances. #18555
Converted savePath accessor to a property on DownloadItem instances. #18677
Converted resizable, maximizable, minimizable, fullscreenable, movable and closable getters / setters on the BrowserWindow class to properties. #18618
Converted name to be a property on the app module. #17701
Converted nativeImage.templateImage to be a property on the nativeImage prototype. #18124
Documentation
Documentation changes: #17865, #17903, #17904, #18328, #18368, #18499"
761,"Bug Fixes/Changes

docs: fix bad link in notifications tut. #19395 
","Bug Fixes/Changes
docs: fix bad link in notifications tut. #19395 "
762,"Release Notes for 6.0.0
Breaking Changes

Upgraded to Chromium 76.0.3809.88, Node.js 12.4.0, and V8 7.6.303.22
Fixed disparity between net module headers and Node.js'  http.IncomingMessage headers. #17517
Made ShowItemInFolder asynchronous with no return value. #17121
Made app log directory creation opt-in with a new function app.setAppLogsPath. #17841
Removed hasServiceWorker and unregisterServiceWorker APIs from the WebContents modules. #16717

Promises
Electron 6.0 continues a project started in 5.0 to improve Promise support. See the project notes for more information.
These functions now return Promises and still support older callback-based invocation:
 * contentTracing.getCategories() #16583
 * contentTracing.getCategories() #16583
 * contentTracing.getTraceBufferUsage() #16600
 * contents.executeJavaScript() #17312
 * cookies.flushStore() #16464
 * cookies.get() #16464
 * cookies.remove() #16464
 * cookies.set() #16464
 * dialog.showCertificateTrustDialog() #17181
 * inAppPurchase.getProducts() #17355
 * inAppPurchase.purchaseProduct()#17355
 * netLog.stopLogging() #16862
 * session.clearAuthCache() #17259
 * session.clearCache() #17185
 * session.clearHostResolverCache() #17229
 * session.clearStorageData() #17249
 * session.getBlobData() #17303
 * session.getCacheSize() #17185
 * session.resolveProxy() #17222
 * session.setProxy() #17222
 * webContents.hasServiceWorker() #16535
 * webContents.printToPDF() #16795
 * webContents.savePage() #16742
 * webFrame.executeJavaScript() #17312
 * webFrame.executeJavaScriptInIsolatedWorld() #17312
 * webviewTag.executeJavaScript() #17312
These functions now have two forms, synchronous and Promise-based asynchronous:
 * dialog.showMessageBox() #17298
 * dialog.showOpenDialog() #16973
 * dialog.showSaveDialog() #17054
These functions now return Promises:
 * app.dock.show() #16904
Features

Added chrome.runtime.getManifest API for Chrome extensions. #16891
Added <webview>.getWebContentsId(), which does not depend of the remote module. #17407
Added all_frames support for Chrome extension content scripts. #17258
Added disableHtmlFullscreenWindowResize option to webPreferences to allow preventing window from resizing when entering HTML5 fullscreen. #17203
Added excludedFromShownWindowsMenu property to allow for windows to be excluded from the windows menu. #17404
Added process.getSystemVersion(), which is available in sandboxed renderers and returns the actual operating system version instead of kernel version on macOS. #16599
Added process.versions.electron to get the electron version in the forked process. #16450
Added renderer-process-crashed event to app, which is emitted when any renderer process crashes. #17315
Added requestingUrl and isMainFrame properties to the permission request and permission check handlers details objects so that apps can check the origin of the requesting frame rather than the root frame. #18772
Added systemPreferences.getAnimationSettings() returning system animation settings provided by Chromium. #17382
Added tray.getTitle() to allow users to see the title set next to the status bar icon on macOS. #17385
Added a new Event property triggeredByAccelerator, which is called back in custom click events on MenuItems. #16954
Added ability disable fetching thumbnails for in  desktopCapturer.getSources(). #14906
Added additional error information to errors thrown when using the remote module. #17851
Added an option to enable MenuItems on macOS to work optionally when visible: false. #16853
Added file preview for file picker in Linux. #16447
Added flexible autoresize option for BrowserViews in BrowserWindow. #16184
Added native Touch ID authentication support for macOS. #16707
Added new app.allowRendererProcessReuse property that allows apps to disable the site instance overrides Electron has patched into Chromium. This can be used to prevent the automatic renderer process restarting that Electron currently does. #18554
Added new app.userAgentFallback property to allow setting the app's useragent globally. #18473
Added new monochrome, internal, acceleratorEnabled, colorDepth and depthPerComponent properties to the Display API Structure. #16870
Added new inspectSharedWorker() API to enable opening devtools for a shared worker. #16615
Added safer nativeImage.createFromBitmap(), which does not decode PNG/JPEG. #17337
Added support for Scroll Lock accelerator. #16873
Added world isolation to Chrome extension content scripts. #17032
Allowed setting working directory in app.setUserTasks() / app.setJumpList(). #18291
Enabled NodeIntegrationInSubFrames option usage for webview tags. #17226
Exposed colorSpace to the Display object. #17405
Feat: add native emoji and color picker methods for Windows and macOS. #17359
Implemented BrowserWindow.moveTop() on Linux/X11. #16629
Moved webFrame custom scheme APIs to browser process under protocol. #16416
Process now emits 'loaded' event in sandboxed renderers. #17680

Fixes

systemPreferences.isDarkMode() now correctly detects dark mode on macOS Catalina. #18958
Added missing 'page-title-updated' event on webContents to documentation. Also fixed forwarding of the explicitSet argument when emitted on BrowserWindow. #18319
Backported a Node.js patch that fixes an http/2 memory leak:. #18882
Corrected a reversal of cancellation values in showSaveDialog on the Windows platform. #18383
Corrected the boolean cancellation value for showOpenDialog on Windows. #18509
DevTools Extensions now load correctly. #17614
Enabled autofill popups on macOS. #16308
Ensured that webContents.hasServiceWorker() rejects with an error for invalid URLs. #16571
Ensured using the --inspect-brk argument does not cause a crash. #19332
Fixed Chrome extension content scripts not loading in sandboxed renderer. #16218
Fixed <webview> not working in scriptable popups when nativeWindowOpen is enabled. #19218
Fixed app.getAppPath() returning default-app path when running electron app with no package.json or electron app/index.js. Now the directory containing the executed file is returned. #18888
Fixed beginFrameSubscription returning blurred images on HiDPI displays. #17444
Fixed fs.promises APIs not working with ASAR paths. #18114
Fixed new-window event not being emitted from a link with target=""_blank"" in a sandboxed <webview> #18556
Fixed webContents.print() callback not returning boolean correctly in all cases. #18803
Fixed webFrame.setSpellCheckProvider memory leak. #16448
Fixed window.open() not returning null when allowpopups was not set in a sandboxed webview #18556
Fixed window.opener null after cross-origin navigation. #18624
Fixed a crash in systemPreferences.getAccentColor(). #18195
Fixed a crash when failed to get devices in desktopCapturer on Windows. #17973
Fixed a dialog crash when no BrowserWindow was passed. #18381
Fixed a possible crash on exit. #17879
Fixed a regression in Kerberos SPN generation. In the M69 upgrade, the default for the enable_negotiate_port option was inadvertently changed from false to true; this restores the former behavior and aligns with Chromium. #18285
Fixed accidental breaking API change in the deprecated dialog.* methods. #18724
Fixed an issue on Windows where calling .show() on a BrowserWindow did not focus the window. #18081
Fixed an issue preventing the Flash plugin from loading on Linux. #17823
Fixed an issue where tray.destroy was not working properly on some linux distros. #18218
Fixed autohide taskbar not showing when frameless window is maximized. #18373
Fixed bug where notifications with same tag wouldn't show more than once when first notification was auto dismissed in Windows 7. #18740
Fixed building with enable_run_as_node disabled. #18892
Fixed case where the Promise returned by loadURL and loadFile would be rejected with ERR_ABORTED if you triggered a virtual navigation before the page had finished loading.  E.g. Used history.pushState or set location.hash. #18143
Fixed crash in BrowserWindow destructor after win.webContents.destroy(). #18793
Fixed crash that could occur while certain chrome devtools extensions were loaded. #19105
Fixed crash when Electron run from SMB network share. #17909
Fixed crash when creating certain types of windows in the display-* events. #19022
Fixed crash when quitting Electron with an inspector attached. #18077
Fixed crash when starting with --disable-gpu. #18904
Fixed electron.zip size increase regression on Linux (compared to Electron 3) by stripping swiftshader libraries (libEGL.so, libGLESv2.so). #18600
Fixed exiting html fullscreen mode for embedded contents. #18775
Fixed inconsistent behavior where modifying the buffer would change nativeImage pixels, while decoded PNG / JPEG data is a copy. #17843
Fixed issue where getEffectiveApperance and getAppLevelAppearance would return unknown instead of the correct value sometimes. #18690
Fixed issue where require('timers').setTimeout would sometimes never fire in the renderer process. #18961
Fixed issue where shell.openExternal would not activate opened window on macOS. #18722
Fixed issue where sandboxed renderers could sometimes leak globals outside of the preload script. #17712
Fixed issues where some chrome://* URLs would not render correctly. #18552
Fixed loading of node_modules inside ASAR files. #18192
Fixed macOS breakpad symbol files to include non-public symbols. #19155
Fixed offscreen rendering not working with viz compositor. #17538
Fixed race condition in the desktopCapturer module where some requests for sources would never be resolved or unhandled exceptions would be thrown in the main process. #18042
Fixed race condition where the remote module would sometimes fail to fetch properties of a remote object. #17464
Fixed random flicker that occurred on macOS when performing fullscreen or workspace transitions. #18885
Fixed setting src on <webview> being too slow. #19190
Fixed silent printing across platforms. #19037
Fixed some chrome extension communication (MessagePort.postMessage) not working. #19106
Fixed the input[type=file] element not showing a file dialog. #18341
Fixed the callback of beginFrameSubscription passing Buffer instead of NativeImage. #17548
Focus methods no longer steal focus when users are active on other apps. #16400
Improved the way frameless windows are handled on Windows. #16596
Injected chrome extensions that have content scripts with a . in the pattern field now treat it as a raw . instead of a wildcard. #17593
Migrated crashReporter to use crashpad on Windows. #18766
Preloaded scripts for internal <iframe> in <webview> are no longer executed when nodeIntegrationInSubFrames is enabled. #19298
Removed inadvertently-included mojom.js files from distribution bundle. #18486
Removed incorrectly published internal V8 symbols and CRT methods from node.lib, causing heap corruptions with Node.js modules using the dynamic CRT on Windows. #18619
Removed non-existent gpu-crashed event on <webview>. #17317
Spellcheck providers are now (again) called with contractions and their parts. #18538
The prefers-color-scheme CSS media query now works correctly. #19250
.executeJavaScript will never leave a Promise dangling now, scripts that fail to execute will correctly be rejected. #18714
Uint8Array and Uint16Array can now be sent correctly in Chrome Extension MessagePort instances. #19252
Fixed popup.location.* setters when nativeWindowOpen is disabled. #19494
Fixed an issue where windows symbol files were changed in a way that was incompatible with some symbolication tools. #19504
Fixed issue where sometimes asynchronous node.js methods such as http, setImmediate and fs wouldn't call their callbacks for an incredibly long amount of time. #19467
Fixed window menu background color when in dark mode on Windows 10. #19505

Other Changes

Replaced powerMonitor querySystemIdleState and querySystemIdleTime with synchronous APIs. #17144
Added experimental support for building for Windows on Arm. #18625
Converted accessibilitySupportEnabled to a proper JS property on app. #17362
Converted applicationMenu to a proper JS property on the app module. #17361
Deprecated the options argument to session.clearAuthCache. #18131
Enabled sandbox and disabled remote module in default_app. #17318
Enabled sandboxing of devtools and chrome extension background script host renderers. #16864
Removed Vulkan mock ICD from electron.zip, which is only meant to be used for Chromium development. #18596
Removed Vulkan validation layers DLLs from electron.zip, which are only meant to be used for Chromium development. #18062
Removed deprecated modules internally using remote.require in sandboxed renderer context. Use remote.require explicitly instead (unless the remote module is disabled). #15957
Removed native mksnapshot binaries for arm/arm64 as they no longer work. #17561
Removed special handling that forced dialog methods called over the remote module to return their result synchronously but not block the main process. #17412
The clipboard module in renderers no longer depends on the remote module on Linux. #17200
Improved the exception message thrown when require fails in sandboxed renderers. #17413

Documentation

Documentation changes: #16496, #16593, #16700, #16762, #16775, #16865, #16874, #16966, #17467, #17866, #18606, #19224
","Release Notes for 6.0.0
Breaking Changes
Upgraded to Chromium 76.0.3809.88, Node.js 12.4.0, and V8 7.6.303.22
Fixed disparity between net module headers and Node.js'  http.IncomingMessage headers. #17517
Made ShowItemInFolder asynchronous with no return value. #17121
Made app log directory creation opt-in with a new function app.setAppLogsPath. #17841
Removed hasServiceWorker and unregisterServiceWorker APIs from the WebContents modules. #16717
Promises
Electron 6.0 continues a project started in 5.0 to improve Promise support. See the project notes for more information.
These functions now return Promises and still support older callback-based invocation:
 * contentTracing.getCategories() #16583
 * contentTracing.getCategories() #16583
 * contentTracing.getTraceBufferUsage() #16600
 * contents.executeJavaScript() #17312
 * cookies.flushStore() #16464
 * cookies.get() #16464
 * cookies.remove() #16464
 * cookies.set() #16464
 * dialog.showCertificateTrustDialog() #17181
 * inAppPurchase.getProducts() #17355
 * inAppPurchase.purchaseProduct()#17355
 * netLog.stopLogging() #16862
 * session.clearAuthCache() #17259
 * session.clearCache() #17185
 * session.clearHostResolverCache() #17229
 * session.clearStorageData() #17249
 * session.getBlobData() #17303
 * session.getCacheSize() #17185
 * session.resolveProxy() #17222
 * session.setProxy() #17222
 * webContents.hasServiceWorker() #16535
 * webContents.printToPDF() #16795
 * webContents.savePage() #16742
 * webFrame.executeJavaScript() #17312
 * webFrame.executeJavaScriptInIsolatedWorld() #17312
 * webviewTag.executeJavaScript() #17312
These functions now have two forms, synchronous and Promise-based asynchronous:
 * dialog.showMessageBox() #17298
 * dialog.showOpenDialog() #16973
 * dialog.showSaveDialog() #17054
These functions now return Promises:
 * app.dock.show() #16904
Features
Added chrome.runtime.getManifest API for Chrome extensions. #16891
Added .getWebContentsId(), which does not depend of the remote module. #17407
Added all_frames support for Chrome extension content scripts. #17258
Added disableHtmlFullscreenWindowResize option to webPreferences to allow preventing window from resizing when entering HTML5 fullscreen. #17203
Added excludedFromShownWindowsMenu property to allow for windows to be excluded from the windows menu. #17404
Added process.getSystemVersion(), which is available in sandboxed renderers and returns the actual operating system version instead of kernel version on macOS. #16599
Added process.versions.electron to get the electron version in the forked process. #16450
Added renderer-process-crashed event to app, which is emitted when any renderer process crashes. #17315
Added requestingUrl and isMainFrame properties to the permission request and permission check handlers details objects so that apps can check the origin of the requesting frame rather than the root frame. #18772
Added systemPreferences.getAnimationSettings() returning system animation settings provided by Chromium. #17382
Added tray.getTitle() to allow users to see the title set next to the status bar icon on macOS. #17385
Added a new Event property triggeredByAccelerator, which is called back in custom click events on MenuItems. #16954
Added ability disable fetching thumbnails for in  desktopCapturer.getSources(). #14906
Added additional error information to errors thrown when using the remote module. #17851
Added an option to enable MenuItems on macOS to work optionally when visible: false. #16853
Added file preview for file picker in Linux. #16447
Added flexible autoresize option for BrowserViews in BrowserWindow. #16184
Added native Touch ID authentication support for macOS. #16707
Added new app.allowRendererProcessReuse property that allows apps to disable the site instance overrides Electron has patched into Chromium. This can be used to prevent the automatic renderer process restarting that Electron currently does. #18554
Added new app.userAgentFallback property to allow setting the app's useragent globally. #18473
Added new monochrome, internal, acceleratorEnabled, colorDepth and depthPerComponent properties to the Display API Structure. #16870
Added new inspectSharedWorker() API to enable opening devtools for a shared worker. #16615
Added safer nativeImage.createFromBitmap(), which does not decode PNG/JPEG. #17337
Added support for Scroll Lock accelerator. #16873
Added world isolation to Chrome extension content scripts. #17032
Allowed setting working directory in app.setUserTasks() / app.setJumpList(). #18291
Enabled NodeIntegrationInSubFrames option usage for webview tags. #17226
Exposed colorSpace to the Display object. #17405
Feat: add native emoji and color picker methods for Windows and macOS. #17359
Implemented BrowserWindow.moveTop() on Linux/X11. #16629
Moved webFrame custom scheme APIs to browser process under protocol. #16416
Process now emits 'loaded' event in sandboxed renderers. #17680
Fixes
systemPreferences.isDarkMode() now correctly detects dark mode on macOS Catalina. #18958
Added missing 'page-title-updated' event on webContents to documentation. Also fixed forwarding of the explicitSet argument when emitted on BrowserWindow. #18319
Backported a Node.js patch that fixes an http/2 memory leak:. #18882
Corrected a reversal of cancellation values in showSaveDialog on the Windows platform. #18383
Corrected the boolean cancellation value for showOpenDialog on Windows. #18509
DevTools Extensions now load correctly. #17614
Enabled autofill popups on macOS. #16308
Ensured that webContents.hasServiceWorker() rejects with an error for invalid URLs. #16571
Ensured using the --inspect-brk argument does not cause a crash. #19332
Fixed Chrome extension content scripts not loading in sandboxed renderer. #16218
Fixed  not working in scriptable popups when nativeWindowOpen is enabled. #19218
Fixed app.getAppPath() returning default-app path when running electron app with no package.json or electron app/index.js. Now the directory containing the executed file is returned. #18888
Fixed beginFrameSubscription returning blurred images on HiDPI displays. #17444
Fixed fs.promises APIs not working with ASAR paths. #18114
Fixed new-window event not being emitted from a link with target=""_blank"" in a sandboxed  #18556
Fixed webContents.print() callback not returning boolean correctly in all cases. #18803
Fixed webFrame.setSpellCheckProvider memory leak. #16448
Fixed window.open() not returning null when allowpopups was not set in a sandboxed webview #18556
Fixed window.opener null after cross-origin navigation. #18624
Fixed a crash in systemPreferences.getAccentColor(). #18195
Fixed a crash when failed to get devices in desktopCapturer on Windows. #17973
Fixed a dialog crash when no BrowserWindow was passed. #18381
Fixed a possible crash on exit. #17879
Fixed a regression in Kerberos SPN generation. In the M69 upgrade, the default for the enable_negotiate_port option was inadvertently changed from false to true; this restores the former behavior and aligns with Chromium. #18285
Fixed accidental breaking API change in the deprecated dialog. methods. #18724
Fixed an issue on Windows where calling .show() on a BrowserWindow did not focus the window. #18081
Fixed an issue preventing the Flash plugin from loading on Linux. #17823
Fixed an issue where tray.destroy was not working properly on some linux distros. #18218
Fixed autohide taskbar not showing when frameless window is maximized. #18373
Fixed bug where notifications with same tag wouldn't show more than once when first notification was auto dismissed in Windows 7. #18740
Fixed building with enable_run_as_node disabled. #18892
Fixed case where the Promise returned by loadURL and loadFile would be rejected with ERR_ABORTED if you triggered a virtual navigation before the page had finished loading.  E.g. Used history.pushState or set location.hash. #18143
Fixed crash in BrowserWindow destructor after win.webContents.destroy(). #18793
Fixed crash that could occur while certain chrome devtools extensions were loaded. #19105
Fixed crash when Electron run from SMB network share. #17909
Fixed crash when creating certain types of windows in the display- events. #19022
Fixed crash when quitting Electron with an inspector attached. #18077
Fixed crash when starting with --disable-gpu. #18904
Fixed electron.zip size increase regression on Linux (compared to Electron 3) by stripping swiftshader libraries (libEGL.so, libGLESv2.so). #18600
Fixed exiting html fullscreen mode for embedded contents. #18775
Fixed inconsistent behavior where modifying the buffer would change nativeImage pixels, while decoded PNG / JPEG data is a copy. #17843
Fixed issue where getEffectiveApperance and getAppLevelAppearance would return unknown instead of the correct value sometimes. #18690
Fixed issue where require('timers').setTimeout would sometimes never fire in the renderer process. #18961
Fixed issue where shell.openExternal would not activate opened window on macOS. #18722
Fixed issue where sandboxed renderers could sometimes leak globals outside of the preload script. #17712
Fixed issues where some chrome:// URLs would not render correctly. #18552
Fixed loading of node_modules inside ASAR files. #18192
Fixed macOS breakpad symbol files to include non-public symbols. #19155
Fixed offscreen rendering not working with viz compositor. #17538
Fixed race condition in the desktopCapturer module where some requests for sources would never be resolved or unhandled exceptions would be thrown in the main process. #18042
Fixed race condition where the remote module would sometimes fail to fetch properties of a remote object. #17464
Fixed random flicker that occurred on macOS when performing fullscreen or workspace transitions. #18885
Fixed setting src on  being too slow. #19190
Fixed silent printing across platforms. #19037
Fixed some chrome extension communication (MessagePort.postMessage) not working. #19106
Fixed the input[type=file] element not showing a file dialog. #18341
Fixed the callback of beginFrameSubscription passing Buffer instead of NativeImage. #17548
Focus methods no longer steal focus when users are active on other apps. #16400
Improved the way frameless windows are handled on Windows. #16596
Injected chrome extensions that have content scripts with a . in the pattern field now treat it as a raw . instead of a wildcard. #17593
Migrated crashReporter to use crashpad on Windows. #18766
Preloaded scripts for internal  in  are no longer executed when nodeIntegrationInSubFrames is enabled. #19298
Removed inadvertently-included mojom.js files from distribution bundle. #18486
Removed incorrectly published internal V8 symbols and CRT methods from node.lib, causing heap corruptions with Node.js modules using the dynamic CRT on Windows. #18619
Removed non-existent gpu-crashed event on . #17317
Spellcheck providers are now (again) called with contractions and their parts. #18538
The prefers-color-scheme CSS media query now works correctly. #19250
.executeJavaScript will never leave a Promise dangling now, scripts that fail to execute will correctly be rejected. #18714
Uint8Array and Uint16Array can now be sent correctly in Chrome Extension MessagePort instances. #19252
Fixed popup.location. setters when nativeWindowOpen is disabled. #19494
Fixed an issue where windows symbol files were changed in a way that was incompatible with some symbolication tools. #19504
Fixed issue where sometimes asynchronous node.js methods such as http, setImmediate and fs wouldn't call their callbacks for an incredibly long amount of time. #19467
Fixed window menu background color when in dark mode on Windows 10. #19505
Other Changes
Replaced powerMonitor querySystemIdleState and querySystemIdleTime with synchronous APIs. #17144
Added experimental support for building for Windows on Arm. #18625
Converted accessibilitySupportEnabled to a proper JS property on app. #17362
Converted applicationMenu to a proper JS property on the app module. #17361
Deprecated the options argument to session.clearAuthCache. #18131
Enabled sandbox and disabled remote module in default_app. #17318
Enabled sandboxing of devtools and chrome extension background script host renderers. #16864
Removed Vulkan mock ICD from electron.zip, which is only meant to be used for Chromium development. #18596
Removed Vulkan validation layers DLLs from electron.zip, which are only meant to be used for Chromium development. #18062
Removed deprecated modules internally using remote.require in sandboxed renderer context. Use remote.require explicitly instead (unless the remote module is disabled). #15957
Removed native mksnapshot binaries for arm/arm64 as they no longer work. #17561
Removed special handling that forced dialog methods called over the remote module to return their result synchronously but not block the main process. #17412
The clipboard module in renderers no longer depends on the remote module on Linux. #17200
Improved the exception message thrown when require fails in sandboxed renderers. #17413
Documentation
Documentation changes: #16496, #16593, #16700, #16762, #16775, #16865, #16874, #16966, #17467, #17866, #18606, #19224"
763,"Release Notes for v5.0.8
Fixes

Fixed 'swipe' event emission on macOS. #19353
Fixed random flicker that occurred on macOS when performing fullscreen or workspace transitions. #19315
Preload scripts for internal <iframe> in <webview> are not longer executed when nodeIntegrationInSubFrames is enabled. #19299
","Release Notes for v5.0.8
Fixes
Fixed 'swipe' event emission on macOS. #19353
Fixed random flicker that occurred on macOS when performing fullscreen or workspace transitions. #19315
Preload scripts for internal  in  are not longer executed when nodeIntegrationInSubFrames is enabled. #19299"
764,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@6.0.0-beta.15.
# Release Notes for v6.0.0-beta.15
Fixes

Ensured using the --inspect-brk argument does not cause a crash. #19332

Other Changes

Updated Chromium to 76.0.3809.70. #19304
Updated Chromium to 76.0.3809.73. #19324
Updated Chromium to 76.0.3809.74. #19343
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@6.0.0-beta.15.
Release Notes for v6.0.0-beta.15
Fixes
Ensured using the --inspect-brk argument does not cause a crash. #19332
Other Changes
Updated Chromium to 76.0.3809.70. #19304
Updated Chromium to 76.0.3809.73. #19324
Updated Chromium to 76.0.3809.74. #19343"
765,"Release Notes for v4.2.8
Fixes

Fixed memory leak when removing HTML5 video elements from the DOM with Javascript. #19347
","Release Notes for v4.2.8
Fixes
Fixed memory leak when removing HTML5 video elements from the DOM with Javascript. #19347"
766,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@6.0.0-beta.14.
# Release Notes for v6.0.0-beta.14
Features

Upgraded to Node 12.4. #19281

Fixes

Fixed <webview> not working in scriptable popups when nativeWindowOpen is enabled. #19218
Fixed setting src on <webview> being too slow. #19190
Preload scripts for internal <iframe> in <webview> are not longer executed when nodeIntegrationInSubFrames is enabled. #19298
The prefers-color-scheme CSS media query now works correctly. #19250
Uint8Array and Uint16Array can now be sent correctly in Chrome Extension MessagePort instances. #19252

Other Changes

Reverted change to focus behavior that broke Character Viewer support on macOS. #19221
Updated Chromium to 76.0.3809.63. #19195
Updated Chromium to 76.0.3809.67. #19225
Updated Chromium to 76.0.3809.68. #19278

Documentation

Documentation changes: #19224
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@6.0.0-beta.14.
Release Notes for v6.0.0-beta.14
Features
Upgraded to Node 12.4. #19281
Fixes
Fixed  not working in scriptable popups when nativeWindowOpen is enabled. #19218
Fixed setting src on  being too slow. #19190
Preload scripts for internal  in  are not longer executed when nodeIntegrationInSubFrames is enabled. #19298
The prefers-color-scheme CSS media query now works correctly. #19250
Uint8Array and Uint16Array can now be sent correctly in Chrome Extension MessagePort instances. #19252
Other Changes
Reverted change to focus behavior that broke Character Viewer support on macOS. #19221
Updated Chromium to 76.0.3809.63. #19195
Updated Chromium to 76.0.3809.67. #19225
Updated Chromium to 76.0.3809.68. #19278
Documentation
Documentation changes: #19224"
767,"Release Notes for v5.0.7
Features

Added requestingUrl and isMainFrame properties to the permission request and permission check handlers details objects so that apps can check the origin of the requesting frame rather than the root frame. #18773

Fixes

Fixed <webview> not working in scriptable popups when nativeWindowOpen is enabled. #19206
Fixed an issue where the Tray icon context menu on macOS blocked the main process while open. #19036
Fixed an issue where the Tray icon would never believe itself to be in dark mode. #19082
Fixed bug on macOS where the main window could be targeted for a focus event when it was disabled behind a modal. #19063
Fixed crash when creating certain types of windows in the display-* events. #19023
Fixed macOS breakpad symbol files to include non-public symbols. #19157
Fixed silent printing across platforms. #19038
Fixed webview crash on iframe removal. #18976
Removed inadvertently included mojom.js files from distribution bundle. #19192
Removed inadvertently included resources/inspector from electron.zip on Windows and Linux. #19193

Other Changes

Reverted change to focus behavior that broke Character Viewer support on macOS. #19238
","Release Notes for v5.0.7
Features
Added requestingUrl and isMainFrame properties to the permission request and permission check handlers details objects so that apps can check the origin of the requesting frame rather than the root frame. #18773
Fixes
Fixed  not working in scriptable popups when nativeWindowOpen is enabled. #19206
Fixed an issue where the Tray icon context menu on macOS blocked the main process while open. #19036
Fixed an issue where the Tray icon would never believe itself to be in dark mode. #19082
Fixed bug on macOS where the main window could be targeted for a focus event when it was disabled behind a modal. #19063
Fixed crash when creating certain types of windows in the display-* events. #19023
Fixed macOS breakpad symbol files to include non-public symbols. #19157
Fixed silent printing across platforms. #19038
Fixed webview crash on iframe removal. #18976
Removed inadvertently included mojom.js files from distribution bundle. #19192
Removed inadvertently included resources/inspector from electron.zip on Windows and Linux. #19193
Other Changes
Reverted change to focus behavior that broke Character Viewer support on macOS. #19238"
768,"Release Notes for v4.2.7
Features

Added requestingUrl and isMainFrame properties to the permission request and permission check handlers details objects so that apps can check the origin of the requesting frame rather than the root frame. #19204

Fixes

Backported a workaround for a cache corruption issue that could affect users on macOS 10.14. #19212
Fixed bug on macOS where the main window could be targeted for a focus event when it was disabled behind a modal. #19061
Fixed macOS breakpad symbol files to include non-public symbols. #19158
Fixed toggling simple fullscreen being very slow. #19143
Fixed windows virtual keyboard appearing for all mouse events. #19144

Other Changes

Reverted change to focus behavior that broke Character Viewer support on macOS. #19239
","Release Notes for v4.2.7
Features
Added requestingUrl and isMainFrame properties to the permission request and permission check handlers details objects so that apps can check the origin of the requesting frame rather than the root frame. #19204
Fixes
Backported a workaround for a cache corruption issue that could affect users on macOS 10.14. #19212
Fixed bug on macOS where the main window could be targeted for a focus event when it was disabled behind a modal. #19061
Fixed macOS breakpad symbol files to include non-public symbols. #19158
Fixed toggling simple fullscreen being very slow. #19143
Fixed windows virtual keyboard appearing for all mouse events. #19144
Other Changes
Reverted change to focus behavior that broke Character Viewer support on macOS. #19239"
769,"Bug Fixes/Changes


fix: crash in BrowserWindow destructor after win.webContents.destroy() (#18686). #18796 


revert: notification handle reset on dismissal. #19163 


chore: update @types/node version for 3-1-x. #18283 

","Bug Fixes/Changes
fix: crash in BrowserWindow destructor after win.webContents.destroy() (#18686). #18796 
revert: notification handle reset on dismissal. #19163 
chore: update @types/node version for 3-1-x. #18283 "
770,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@6.0.0-beta.13.
# Release Notes for v6.0.0-beta.13
Fixes

Fixed crash that could occur while certain chrome devtools extensions were loaded. #19105
Fixed macOS breakpad symbol files to include non-public symbols. #19155
Fixed some chrome extension communication (MessagePort.postMessage) not working. #19106

Other Changes

Updated Chromium to 76.0.3809.56. #19111
Updated Chromium to 76.0.3809.59. #19134
Updated Chromium to 76.0.3809.60. #19165

Unknown

Reverted change to only allow preload scripts to be loaded from application root due to issues with electron-mocha. #19132
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@6.0.0-beta.13.
Release Notes for v6.0.0-beta.13
Fixes
Fixed crash that could occur while certain chrome devtools extensions were loaded. #19105
Fixed macOS breakpad symbol files to include non-public symbols. #19155
Fixed some chrome extension communication (MessagePort.postMessage) not working. #19106
Other Changes
Updated Chromium to 76.0.3809.56. #19111
Updated Chromium to 76.0.3809.59. #19134
Updated Chromium to 76.0.3809.60. #19165
Unknown
Reverted change to only allow preload scripts to be loaded from application root due to issues with electron-mocha. #19132"
771,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@6.0.0-beta.12.
# Release Notes for v6.0.0-beta.12
Fixes

Fixed an issue where the Tray icon context menu on macOS blocked the main process while open. #18969
Fixed an issue where the Tray icon would never believe itself to be in dark mode. #19013
Fixed bug on macOS where the main window could be targeted for a focus event when it was disabled behind a modal. #19062
Fixed crash when creating certain types of windows in the display-* events. #19022
Fixed silent printing across platforms. #19037

Other Changes

Updated Chromium to 76.0.3809.43. #18974
Updated Chromium to 76.0.3809.45. #18991
Updated Chromium to 76.0.3809.47. #19010
Updated Chromium to 76.0.3809.49. #19030
Updated Chromium to 76.0.3809.50. #19054
Updated Chromium to 76.0.3809.51. #19057
Updated Chromium to 76.0.3809.52. #19079
Updated Chromium to 76.0.3809.54. #19095
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@6.0.0-beta.12.
Release Notes for v6.0.0-beta.12
Fixes
Fixed an issue where the Tray icon context menu on macOS blocked the main process while open. #18969
Fixed an issue where the Tray icon would never believe itself to be in dark mode. #19013
Fixed bug on macOS where the main window could be targeted for a focus event when it was disabled behind a modal. #19062
Fixed crash when creating certain types of windows in the display-* events. #19022
Fixed silent printing across platforms. #19037
Other Changes
Updated Chromium to 76.0.3809.43. #18974
Updated Chromium to 76.0.3809.45. #18991
Updated Chromium to 76.0.3809.47. #19010
Updated Chromium to 76.0.3809.49. #19030
Updated Chromium to 76.0.3809.50. #19054
Updated Chromium to 76.0.3809.51. #19057
Updated Chromium to 76.0.3809.52. #19079
Updated Chromium to 76.0.3809.54. #19095"
772,"Release Notes for v4.2.6
Fixes

Fixed issues with popups created from sandboxed <webview>: 
Clicking link with target=""_blank"" not emitting 'new-window' event.
window.open() not returning null when allowpopups is not set. #18797
Fixed app.getAppPath() returning default-app path when running electron app with no package.json or electron app/index.js. Now the directory containing the executed file is returned. #18895
Fixed an issue where the Tray icon context menu on macOS blocked the main process while open. #19035
Fixed crash when creating certain types of windows in the display-* events. #19024
Fixed issue where require('timers').setTimeout would sometimes never fire in the renderer process. #18968
systemPreferences.isDarkMode() now correctly detects dark mode on macOS Catalina. #18959

Other Changes

Fixed an issue where session.getCacheSize would never call its callback. #18921
","Release Notes for v4.2.6
Fixes
Fixed issues with popups created from sandboxed : 
Clicking link with target=""_blank"" not emitting 'new-window' event.
window.open() not returning null when allowpopups is not set. #18797
Fixed app.getAppPath() returning default-app path when running electron app with no package.json or electron app/index.js. Now the directory containing the executed file is returned. #18895
Fixed an issue where the Tray icon context menu on macOS blocked the main process while open. #19035
Fixed crash when creating certain types of windows in the display-* events. #19024
Fixed issue where require('timers').setTimeout would sometimes never fire in the renderer process. #18968
systemPreferences.isDarkMode() now correctly detects dark mode on macOS Catalina. #18959
Other Changes
Fixed an issue where session.getCacheSize would never call its callback. #18921"
773,"Release Notes for v5.0.6
Fixes



Fixed issues with popups created from sandboxed <webview>: 

Clicking link with target=""_blank"" not emitting 'new-window' event.
window.open() not returning null when allowpopups is not set. #18798





Backported a patch from node that fixes an http/2 memory leak:. #18883
Fixed app.getAppPath() returning default-app path when running electron app with no package.json or electron app/index.js. Now the directory containing the executed file is returned. #18894
Fixed issue where require('timers').setTimeout would sometimes never fire in the renderer process. #18965
systemPreferences.isDarkMode() now correctly detects dark mode on macOS Catalina. #18960

Other Changes

Fixed an issue where session.getCacheSize would never call its callback. #18898
","Release Notes for v5.0.6
Fixes
Fixed issues with popups created from sandboxed : 
Clicking link with target=""_blank"" not emitting 'new-window' event.
window.open() not returning null when allowpopups is not set. #18798
Backported a patch from node that fixes an http/2 memory leak:. #18883
Fixed app.getAppPath() returning default-app path when running electron app with no package.json or electron app/index.js. Now the directory containing the executed file is returned. #18894
Fixed issue where require('timers').setTimeout would sometimes never fire in the renderer process. #18965
systemPreferences.isDarkMode() now correctly detects dark mode on macOS Catalina. #18960
Other Changes
Fixed an issue where session.getCacheSize would never call its callback. #18898"
774,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@6.0.0-beta.11.
# Release Notes for v6.0.0-beta.11
Fixes

Fixed issue where require('timers').setTimeout would sometimes never fire in the renderer process. #18961
systemPreferences.isDarkMode() now correctly detects dark mode on macOS Catalina. #18958

Other Changes

Updated Chromium to 76.0.3809.42. #18919
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@6.0.0-beta.11.
Release Notes for v6.0.0-beta.11
Fixes
Fixed issue where require('timers').setTimeout would sometimes never fire in the renderer process. #18961
systemPreferences.isDarkMode() now correctly detects dark mode on macOS Catalina. #18958
Other Changes
Updated Chromium to 76.0.3809.42. #18919"
775,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@6.0.0-beta.10.
# Release Notes for v6.0.0-beta.10
Fixes

Backported a patch from node that fixes an http/2 memory leak:. #18882
Fixed app.getAppPath() returning default-app path when running electron app with no package.json or electron app/index.js. Now the directory containing the executed file is returned. #18888
Fixed building with enable_run_as_node disabled. #18892
Fixed crash when starting with --disable-gpu. #18904
Fixed random flicker that occurred on macOS when performing fullscreen or workspace transitions. #18885
Updated Chromium to 76.0.3809.37. #18828
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@6.0.0-beta.10.
Release Notes for v6.0.0-beta.10
Fixes
Backported a patch from node that fixes an http/2 memory leak:. #18882
Fixed app.getAppPath() returning default-app path when running electron app with no package.json or electron app/index.js. Now the directory containing the executed file is returned. #18888
Fixed building with enable_run_as_node disabled. #18892
Fixed crash when starting with --disable-gpu. #18904
Fixed random flicker that occurred on macOS when performing fullscreen or workspace transitions. #18885
Updated Chromium to 76.0.3809.37. #18828"
776,"Release Notes for v4.2.5
Fixes

Backported fix for https://bugs.chromium.org/p/chromium/issues/detail?id=905940. #18565
Backported fix for https://bugs.chromium.org/p/chromium/issues/detail?id=913970. #18563
Backported fix for https://bugs.chromium.org/p/chromium/issues/detail?id=914731. #18562
Backported fix for https://bugs.chromium.org/p/chromium/issues/detail?id=924843. #18530
Backported fix for: https://bugs.chromium.org/p/chromium/issues/detail?id=915197, https://bugs.chromium.org/p/chromium/issues/detail?id=915206 and https://bugs.chromium.org/p/chromium/issues/detail?id=915218. #18567
Fixed Uncaught TypeError: Cannot set property 'innerText' of null in default-app when opening a website. #18818
Fixed crash in BrowserWindow destructor after win.webContents.destroy(). #18795
Fixed issue on macOS Catalina where the tray icon would be highlighted incorrectly and sometimes invisible. #18853
Fixed issue where getEffectiveApperance and getAppLevelAppearance would return unknown instead of the correct value sometimes. #18691
","Release Notes for v4.2.5
Fixes
Backported fix for link. #18565
Backported fix for link. #18563
Backported fix for link. #18562
Backported fix for link. #18530
Backported fix for: link, link and link. #18567
Fixed Uncaught TypeError: Cannot set property 'innerText' of null in default-app when opening a website. #18818
Fixed crash in BrowserWindow destructor after win.webContents.destroy(). #18795
Fixed issue on macOS Catalina where the tray icon would be highlighted incorrectly and sometimes invisible. #18853
Fixed issue where getEffectiveApperance and getAppLevelAppearance would return unknown instead of the correct value sometimes. #18691"
777,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@6.0.0-beta.9.
# Release Notes for v6.0.0-beta.9
Features

Added requestingUrl and isMainFrame properties to the permission request and permission check handlers details objects so that apps can check the origin of the requesting frame rather than the root frame. #18772

Fixes

Fixed webContents.print() callback not returning boolean correctly in all cases. #18803
Fixed issue on macOS Catalina where the tray icon would be highlighted incorrectly and sometimes invisible. #18845
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@6.0.0-beta.9.
Release Notes for v6.0.0-beta.9
Features
Added requestingUrl and isMainFrame properties to the permission request and permission check handlers details objects so that apps can check the origin of the requesting frame rather than the root frame. #18772
Fixes
Fixed webContents.print() callback not returning boolean correctly in all cases. #18803
Fixed issue on macOS Catalina where the tray icon would be highlighted incorrectly and sometimes invisible. #18845"
778,"Release Notes for v5.0.5
Fixes

Backported fix for https://bugs.chromium.org/p/chromium/issues/detail?id=924843. #18545
Fixed Uncaught TypeError: Cannot set property 'innerText' of null in default-app when opening a website. #18819
Fixed webContents.print() callback not returning boolean correctly in all cases. #18804
Fixed crash in BrowserWindow destructor after win.webContents.destroy(). #18794
Fixed issue on macOS Catalina where the tray icon would be highlighted incorrectly and sometimes invisible. #18852
","Release Notes for v5.0.5
Fixes
Backported fix for link. #18545
Fixed Uncaught TypeError: Cannot set property 'innerText' of null in default-app when opening a website. #18819
Fixed webContents.print() callback not returning boolean correctly in all cases. #18804
Fixed crash in BrowserWindow destructor after win.webContents.destroy(). #18794
Fixed issue on macOS Catalina where the tray icon would be highlighted incorrectly and sometimes invisible. #18852"
779,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@6.0.0-beta.8.
# Release Notes for v6.0.0-beta.8
Features

Added new app.allowRendererProcessReuse property that allows apps to disable the site instance overrides Electron has patched into Chromium. This can be used to prevent the automatic renderer process restarting that Electron currently does. #18554

Fixes

Fixed window.opener null after cross-origin navigation. #18624
Fixed bug where notifications with same tag wouldn't show more than once when first notification was auto dismissed in Windows 7. #18740
Fixed crash in BrowserWindow destructor after win.webContents.destroy(). #18793
Fixed exiting html fullscreen mode for embedded contents. #18775
Migrate crashReporter to use crashpad on Windows. #18766
.executeJavaScript will never leave a promise dangling now, scripts that fail to execute will correctly be rejected. #18714

Other Changes

Updated Chromium to 76.0.3809.23. #18742
Updated Chromium to 76.0.3809.26. #18768
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@6.0.0-beta.8.
Release Notes for v6.0.0-beta.8
Features
Added new app.allowRendererProcessReuse property that allows apps to disable the site instance overrides Electron has patched into Chromium. This can be used to prevent the automatic renderer process restarting that Electron currently does. #18554
Fixes
Fixed window.opener null after cross-origin navigation. #18624
Fixed bug where notifications with same tag wouldn't show more than once when first notification was auto dismissed in Windows 7. #18740
Fixed crash in BrowserWindow destructor after win.webContents.destroy(). #18793
Fixed exiting html fullscreen mode for embedded contents. #18775
Migrate crashReporter to use crashpad on Windows. #18766
.executeJavaScript will never leave a promise dangling now, scripts that fail to execute will correctly be rejected. #18714
Other Changes
Updated Chromium to 76.0.3809.23. #18742
Updated Chromium to 76.0.3809.26. #18768"
780,"Release Notes for v5.0.4
Fixes

Added check for invalid URLs upon setting cookies. #18756
Fixed window.opener null after cross-origin navigation. #18614
Fixed bug where notifications with same tag wouldn't show more than once when first notification was auto dismissed in Windows 7. #18741
Fixed exiting html fullscreen mode for embedded contents. #18781
Fixed issue where getEffectiveApperance and getAppLevelAppearance would return unknown instead of the correct value sometimes. #18689
Fixed issue where shell.openExternal would not activate opened window on macOS. #18721
Spellcheck providers are now (again) called with contractions and their parts. #18548
","Release Notes for v5.0.4
Fixes
Added check for invalid URLs upon setting cookies. #18756
Fixed window.opener null after cross-origin navigation. #18614
Fixed bug where notifications with same tag wouldn't show more than once when first notification was auto dismissed in Windows 7. #18741
Fixed exiting html fullscreen mode for embedded contents. #18781
Fixed issue where getEffectiveApperance and getAppLevelAppearance would return unknown instead of the correct value sometimes. #18689
Fixed issue where shell.openExternal would not activate opened window on macOS. #18721
Spellcheck providers are now (again) called with contractions and their parts. #18548"
781,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@6.0.0-beta.7.
# Release Notes for v6.0.0-beta.7
Fixes



Fixed issues with popups created from sandboxed <webview>: 

Clicking link with target=""_blank"" not emitting 'new-window' event.
window.open() not returning null when allowpopups is not set. #18556





Fixed accidental breaking API change in the deprecated dialog.* methods. #18724
Fixed issue where getEffectiveApperance and getAppLevelAppearance would return unknown instead of the correct value sometimes. #18690
Fixed issue where shell.openExternal would not activate opened window on macOS. #18722

Other Changes

Added experimental support for building for Windows on Arm. #18625
Updated Chromium to 76.0.3809.10. #18647
Updated Chromium to 76.0.3809.12. #18662
Updated Chromium to 76.0.3809.13. #18669
Updated Chromium to 76.0.3809.20. #18684
Updated Chromium to 76.0.3809.22. #18730
Updated Chromium to 76.0.3809.6. #18573
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@6.0.0-beta.7.
Release Notes for v6.0.0-beta.7
Fixes
Fixed issues with popups created from sandboxed : 
Clicking link with target=""_blank"" not emitting 'new-window' event.
window.open() not returning null when allowpopups is not set. #18556
Fixed accidental breaking API change in the deprecated dialog.* methods. #18724
Fixed issue where getEffectiveApperance and getAppLevelAppearance would return unknown instead of the correct value sometimes. #18690
Fixed issue where shell.openExternal would not activate opened window on macOS. #18722
Other Changes
Added experimental support for building for Windows on Arm. #18625
Updated Chromium to 76.0.3809.10. #18647
Updated Chromium to 76.0.3809.12. #18662
Updated Chromium to 76.0.3809.13. #18669
Updated Chromium to 76.0.3809.20. #18684
Updated Chromium to 76.0.3809.22. #18730
Updated Chromium to 76.0.3809.6. #18573"
782,"Bug Fixes/Changes


build: fixes for CI flakes. #18523 


build: move Windows release builds to AppVeyor cloud. #18627 


fix: emit IPC event in correct context if isolation and sandbox enabled (#16352). #18668 

","Bug Fixes/Changes
build: fixes for CI flakes. #18523 
build: move Windows release builds to AppVeyor cloud. #18627 
fix: emit IPC event in correct context if isolation and sandbox enabled (#16352). #18668 "
783,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@6.0.0-beta.6.
# Release Notes for v6.0.0-beta.6
Fixes

Corrected the boolean cancellation value for showOpenDialog on Windows. #18509
Fixed issues where some chrome://* URLs would not render correctly. #18552
Removed inadvertently included mojom.js files from distribution bundle. #18486
Removed incorrectly published internal V8 symbols and CRT methods from node.lib, causing heap corruptions with node modules using the dynamic CRT on Windows. #18619
Spellcheck providers are now (again) called with contractions and their parts. #18538
Updated Chromium to 76.0.3809.3. #18504

Other Changes

Fixed electron.zip size increase regression on Linux (compared to Electron 3) by stripping swiftshader libraries (libEGL.so, libGLESv2.so). #18600
Removed Vulkan mock ICD from electron.zip, which is only meant to be used for Chromium development. #18596

Documentation

Documentation changes: #18606
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@6.0.0-beta.6.
Release Notes for v6.0.0-beta.6
Fixes
Corrected the boolean cancellation value for showOpenDialog on Windows. #18509
Fixed issues where some chrome://* URLs would not render correctly. #18552
Removed inadvertently included mojom.js files from distribution bundle. #18486
Removed incorrectly published internal V8 symbols and CRT methods from node.lib, causing heap corruptions with node modules using the dynamic CRT on Windows. #18619
Spellcheck providers are now (again) called with contractions and their parts. #18538
Updated Chromium to 76.0.3809.3. #18504
Other Changes
Fixed electron.zip size increase regression on Linux (compared to Electron 3) by stripping swiftshader libraries (libEGL.so, libGLESv2.so). #18600
Removed Vulkan mock ICD from electron.zip, which is only meant to be used for Chromium development. #18596
Documentation
Documentation changes: #18606"
784,"Release Notes for v5.0.3
Fixes

Fixed an issue whereby minimizable and closable weren't respected in customButtonsOnHover mode. #18485
Removed incorrectly published internal V8 symbols and CRT methods from node.lib, causing heap corruptions with node modules using the dynamic CRT on Windows. #18620
Using webContents.sendInputEvent to send a WebMouseWheelEvent now has the expected effect. #18495

Other Changes

Fixed electron.zip size increase regression on Linux (compared to Electron 3) by stripping swiftshader libraries (libEGL.so, libGLESv2.so). #18601
Removed Vulkan mock ICD from electron.zip, which is only meant to be used for Chromium development. #18595
","Release Notes for v5.0.3
Fixes
Fixed an issue whereby minimizable and closable weren't respected in customButtonsOnHover mode. #18485
Removed incorrectly published internal V8 symbols and CRT methods from node.lib, causing heap corruptions with node modules using the dynamic CRT on Windows. #18620
Using webContents.sendInputEvent to send a WebMouseWheelEvent now has the expected effect. #18495
Other Changes
Fixed electron.zip size increase regression on Linux (compared to Electron 3) by stripping swiftshader libraries (libEGL.so, libGLESv2.so). #18601
Removed Vulkan mock ICD from electron.zip, which is only meant to be used for Chromium development. #18595"
785,"Release Notes for v4.2.4
Fixes

Backported fix for https://bugs.chromium.org/p/chromium/issues/detail?id=914497. #17634
Backported fix for https://bugs.chromium.org/p/chromium/issues/detail?id=914736. #18568
Backported fix for https://bugs.chromium.org/p/chromium/issues/detail?id=915469. #18561
Backported fix for https://bugs.chromium.org/p/chromium/issues/detail?id=919340. #18569
Backported fix for https://bugs.chromium.org/p/chromium/issues/detail?id=925864. #18572
Backported fix for https://bugs.chromium.org/p/chromium/issues/detail?id=904714. #18566
Backported fix for https://bugs.chromium.org/p/chromium/issues/detail?id=913296. #18564
Removed incorrectly published internal V8 symbols and CRT methods from node.lib, causing heap corruptions with node modules using the dynamic CRT on Windows. #18621

Other Changes

Fixed electron.zip size increase regression on Linux (compared to Electron 3) by stripping swiftshader libraries (libEGL.so, libGLESv2.so). #18602
Removed Vulkan mock ICD from electron.zip, which is only meant to be used for Chromium development. #18594
","Release Notes for v4.2.4
Fixes
Backported fix for link. #17634
Backported fix for link. #18568
Backported fix for link. #18561
Backported fix for link. #18569
Backported fix for link. #18572
Backported fix for link. #18566
Backported fix for link. #18564
Removed incorrectly published internal V8 symbols and CRT methods from node.lib, causing heap corruptions with node modules using the dynamic CRT on Windows. #18621
Other Changes
Fixed electron.zip size increase regression on Linux (compared to Electron 3) by stripping swiftshader libraries (libEGL.so, libGLESv2.so). #18602
Removed Vulkan mock ICD from electron.zip, which is only meant to be used for Chromium development. #18594"
786,"Release Notes for v4.2.3
Fixes

Added missing 'page-title-updated' event on webContents to documentation. Also fixed forwarding of the explicitSet argument when emitted on BrowserWindow. #18320
Fixed an issue whereby minimizable and closable weren't respected in customButtonsOnHover mode. #18479
Using webContents.sendInputEvent to send a WebMouseWheelEvent now has the expected effect. #18494

Other Changes

Restore live region changed events for processing by JAWS focus mode. #18474
","Release Notes for v4.2.3
Fixes
Added missing 'page-title-updated' event on webContents to documentation. Also fixed forwarding of the explicitSet argument when emitted on BrowserWindow. #18320
Fixed an issue whereby minimizable and closable weren't respected in customButtonsOnHover mode. #18479
Using webContents.sendInputEvent to send a WebMouseWheelEvent now has the expected effect. #18494
Other Changes
Restore live region changed events for processing by JAWS focus mode. #18474"
787,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@6.0.0-beta.5.
# Release Notes for v6.0.0-beta.5
Features

Added new app.userAgentFallback property to allow setting the apps useragent globally. #18473

Fixes

Fixed an issue whereby minimizable and closable weren't respected in customButtonsOnHover mode. #18478 

Other Changes

Updated Chromium to 76.0.3805.4. #18439
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@6.0.0-beta.5.
Release Notes for v6.0.0-beta.5
Features
Added new app.userAgentFallback property to allow setting the apps useragent globally. #18473
Fixes
Fixed an issue whereby minimizable and closable weren't respected in customButtonsOnHover mode. #18478 
Other Changes
Updated Chromium to 76.0.3805.4. #18439"
788,"Bug Fixes/Changes

chore: bump libcc (3-1-x). #18426 
","Bug Fixes/Changes
chore: bump libcc (3-1-x). #18426 "
789,"Release Notes for v5.0.2
Fixes

Added missing 'page-title-updated' event on webContents to documentation. Also fixed forwarding of the explicitSet argument when emitted on BrowserWindow. #18318
Fixed a crash in systemPreferences.getAccentColor(). #18194
Fixed a regression in Kerberos SPN generation. In the M69 upgrade, the default for the enable_negotiate_port option was inadvertently changed from false to true; this restores the former behavior and aligns with Chromium. #18284
Fixed case where the promise returned by loadURL and loadFile would be rejected with ERR_ABORTED if you triggered a virtual navigation before the page had finished loading.  E.g. Used history.pushState or set location.hash. #18142
","Release Notes for v5.0.2
Fixes
Added missing 'page-title-updated' event on webContents to documentation. Also fixed forwarding of the explicitSet argument when emitted on BrowserWindow. #18318
Fixed a crash in systemPreferences.getAccentColor(). #18194
Fixed a regression in Kerberos SPN generation. In the M69 upgrade, the default for the enable_negotiate_port option was inadvertently changed from false to true; this restores the former behavior and aligns with Chromium. #18284
Fixed case where the promise returned by loadURL and loadFile would be rejected with ERR_ABORTED if you triggered a virtual navigation before the page had finished loading.  E.g. Used history.pushState or set location.hash. #18142"
790,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@6.0.0-beta.4.
# Release Notes for v6.0.0-beta.4
Features

Allowed setting working directory in app.setUserTasks() / app.setJumpList(). #18291

Fixes

Added missing 'page-title-updated' event on webContents to documentation. Also fixed forwarding of the explicitSet argument when emitted on BrowserWindow. #18319
Corrected a reversal of cancellation values in showSaveDialog on the Windows platform. #18383
Fixed a dialog crash when no BrowserWindow was passed. #18381
Fixed autohide taskbar not showing when frameless window is maximized. #18373
Fixed the input[type=file] element not showing a file dialog. #18341
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@6.0.0-beta.4.
Release Notes for v6.0.0-beta.4
Features
Allowed setting working directory in app.setUserTasks() / app.setJumpList(). #18291
Fixes
Added missing 'page-title-updated' event on webContents to documentation. Also fixed forwarding of the explicitSet argument when emitted on BrowserWindow. #18319
Corrected a reversal of cancellation values in showSaveDialog on the Windows platform. #18383
Fixed a dialog crash when no BrowserWindow was passed. #18381
Fixed autohide taskbar not showing when frameless window is maximized. #18373
Fixed the input[type=file] element not showing a file dialog. #18341"
791,"Release Notes for v4.2.2
Fixes

Fixed lagging when using tabbed window. #18314
","Release Notes for v4.2.2
Fixes
Fixed lagging when using tabbed window. #18314"
792,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@6.0.0-beta.3.
# Release Notes for v6.0.0-beta.3
Fixes

Fixed a regression in Kerberos SPN generation. In the M69 upgrade, the default for the enable_negotiate_port option was inadvertently changed from false to true; this restores the former behavior and aligns with Chromium. #18285
Fixed an issue where tray.destroy was not working properly on some linux distros. #18218
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@6.0.0-beta.3.
Release Notes for v6.0.0-beta.3
Fixes
Fixed a regression in Kerberos SPN generation. In the M69 upgrade, the default for the enable_negotiate_port option was inadvertently changed from false to true; this restores the former behavior and aligns with Chromium. #18285
Fixed an issue where tray.destroy was not working properly on some linux distros. #18218"
793,"Release Notes for v4.2.1
Fixes

Fixed a regression in Kerberos SPN generation. In the M69 upgrade, the default for the enable_negotiate_port option was inadvertently changed from false to true; this restores the former behavior and aligns with Chromium. #18287
","Release Notes for v4.2.1
Fixes
Fixed a regression in Kerberos SPN generation. In the M69 upgrade, the default for the enable_negotiate_port option was inadvertently changed from false to true; this restores the former behavior and aligns with Chromium. #18287"
794,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@6.0.0-beta.2.
# Release Notes for v6.0.0-beta.2
Fixes

Fixed fs.promises APIs not working with ASAR paths. #18114
Fixed a crash in systemPreferences.getAccentColor(). #18195
Fixed an issue on Windows where calling .show() on a BrowserWindow did not focus the window. #18081
Fixed case where the promise returned by loadURL and loadFile would be rejected with ERR_ABORTED if you triggered a virtual navigation before the page had finished loading.  E.g. Used history.pushState or set location.hash. #18143
Fixed crash when quitting Electron with an inspector attached. #18077

Other Changes

Deprecated the options argument to session.clearAuthCache. #18131
Fixed loading of node_modules inside ASAR files. #18192
Updated Chromium to 76.0.3783.1. #18116
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@6.0.0-beta.2.
Release Notes for v6.0.0-beta.2
Fixes
Fixed fs.promises APIs not working with ASAR paths. #18114
Fixed a crash in systemPreferences.getAccentColor(). #18195
Fixed an issue on Windows where calling .show() on a BrowserWindow did not focus the window. #18081
Fixed case where the promise returned by loadURL and loadFile would be rejected with ERR_ABORTED if you triggered a virtual navigation before the page had finished loading.  E.g. Used history.pushState or set location.hash. #18143
Fixed crash when quitting Electron with an inspector attached. #18077
Other Changes
Deprecated the options argument to session.clearAuthCache. #18131
Fixed loading of node_modules inside ASAR files. #18192
Updated Chromium to 76.0.3783.1. #18116"
795,"Release Notes for v5.0.1
Fixes

Fixed fs.promises APIs not working with ASAR paths. #18115
Fixed an issue on Windows where calling .show() on a BrowserWindow did not focus the window. #18080
Fixed crash when Electron run from SMB network share. #17908
Fixed crash when quitting Electron with an inspector attached. #18076
Removed non-existent gpu-crashed event on <webview>. #18004

Other Changes

Removed Vulkan validation layers DLLs from electron.zip, which are only meant to be used for Chromium development. #18061
Updated Chromium to 73.0.3683.121. #18001
","Release Notes for v5.0.1
Fixes
Fixed fs.promises APIs not working with ASAR paths. #18115
Fixed an issue on Windows where calling .show() on a BrowserWindow did not focus the window. #18080
Fixed crash when Electron run from SMB network share. #17908
Fixed crash when quitting Electron with an inspector attached. #18076
Removed non-existent gpu-crashed event on . #18004
Other Changes
Removed Vulkan validation layers DLLs from electron.zip, which are only meant to be used for Chromium development. #18061
Updated Chromium to 73.0.3683.121. #18001"
796,"Release Notes for v4.2.0
This release is a minor bump as it contains exactly one new feature.  app.userAgentFallback, this feature is outlined below along with the other fixes and changes that went into this release.  The 4.2.x series is now only release line in the 4.x.y major release line that will receive bug fixes and security fixes.  It is recommended you upgrade to 4.2.x.
Features

Added new app.userAgentFallback property to allow setting the apps useragent globally. #18110

Fixes

Fixed an issue on Windows where calling .show() on a BrowserWindow did not focus the window. #18079
Fixed issue where you couldn't respond to stream protocol requests with multiple values for the same header. #18094

Other Changes

Removed Vulkan validation layers DLLs from electron.zip, which are only meant to be used for Chromium development. #18060
","Release Notes for v4.2.0
This release is a minor bump as it contains exactly one new feature.  app.userAgentFallback, this feature is outlined below along with the other fixes and changes that went into this release.  The 4.2.x series is now only release line in the 4.x.y major release line that will receive bug fixes and security fixes.  It is recommended you upgrade to 4.2.x.
Features
Added new app.userAgentFallback property to allow setting the apps useragent globally. #18110
Fixes
Fixed an issue on Windows where calling .show() on a BrowserWindow did not focus the window. #18079
Fixed issue where you couldn't respond to stream protocol requests with multiple values for the same header. #18094
Other Changes
Removed Vulkan validation layers DLLs from electron.zip, which are only meant to be used for Chromium development. #18060"
797,"Bug Fixes/Changes


fix: report module name when require fails in sandboxed renderers. #17703 


docs: note desktop audio limitation on macOS. #17816 


fix: emit process 'loaded' event in sandboxed renderers. #17809 


fix: reset the NSUserNotication handle on dismiss. #17820 


chore: bump libcc (3-1-x). #17850 


fix: copy pixels in AddImageSkiaRepFromBuffer (#17843). #17861 

","Bug Fixes/Changes
fix: report module name when require fails in sandboxed renderers. #17703 
docs: note desktop audio limitation on macOS. #17816 
fix: emit process 'loaded' event in sandboxed renderers. #17809 
fix: reset the NSUserNotication handle on dismiss. #17820 
chore: bump libcc (3-1-x). #17850 
fix: copy pixels in AddImageSkiaRepFromBuffer (#17843). #17861 "
798,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@6.0.0-beta.1.
# Release Notes for v6.0.0-beta.1
Breaking Changes

Fixed disparity between net module headers and Node.js'  http.IncomingMessage headers. #17517
Made ShowItemInFolder asynchronous with no return value. #17121
Made app log directory creation opt-in with a new function app.setAppLogsPath. #17841
Upgraded to Chromium 76.0.3774.1

Features

Added Promise support for the Cookies API. #16464
Added chrome.runtime.getManifest API for Chrome extensions. #16891
Added <webview>.getWebContentsId(), which does not depend of the remote module. #17407
Added all_frames support for Chrome extension content scripts. #17258
Added disableHtmlFullscreenWindowResize option to webPreferences to allow preventing window from resizing when entering HTML5 fullscreen. #17203
Added excludedFromShownWindowsMenu property to allow for windows to be excluded from the windows menu. #17404
Added process.getSystemVersion(), which is available in sandboxed renderers and returns the actual operating system version instead of kernel version on macOS. #16599
Added process.versions.electron to get the electron version in the forked process. #16450
Added renderer-process-crashed event to app, which is emitted when any renderer process crashes. #17315
Added systemPreferences.getAnimationSettings() returning system animation settings provided by Chromium. #17382
Added tray.getTitle() to allows users to see the title set next to the status bar icon on macOS. #17385
Added a new Event property triggeredByAccelerator, which is called back in custom click events on MenuItems. #16954
Added ability disable fetching thumbnails for in  desktopCapturer.getSources(). #14906
Added additional error information to errors thrown when using the remote module. #17851
Added an option to enable MenuItems on macOS to work optionally when visible: false. #16853
Added file preview for file picker in Linux. #16447
Added flexible autoresize option for BrowserViews in BrowserWindow. #16184
Added native Touch ID authentication support for macOS. #16707
Added new monochrome, internal, acceleratorEnabled, colorDepth and depthPerComponent properties to the Display API Structure. #16870
Added new inspectSharedWorker() API to enable opening devtools for a shared worker. #16615
Added safer nativeImage.createFromBitmap(), which does not decode PNG/JPEG. #17337
Added support for Scroll Lock accelerator. #16873
Added world isolation to Chrome extension content scripts. #17032
Converted app.dock.show() such that it now returns a Promise. #16904
Converted contentTracing.getCategories() to return a promise instead taking a callback. #16583
Converted contentTracing.getTraceBufferUsage() to return a Promise instead of taking a callback. #16600
Converted contents.executeJavaScript(), webFrame.executeJavaScript(), webFrame.executeJavaScriptInIsolatedWorld() and webviewTag.executeJavaScript() to return Promises instead of taking callbacks. #17312
Converted dialog.showCertificateTrustDialog() to return a Promise instead of taking a callback. #17181
Converted netLog.stopLogging() to return a Promise instead of taking a callback. #16862
Converted session.clearAuthCache() to return a promise instead of optionally taking a callback. #17259
Converted session.clearHostResolverCache() to return a Promise instead of taking a callback. #17229
Converted session.clearStorageData() such that it returns a Promise instead of taking a callback. #17249
Converted session.getBlobData() to return a Promise instead of taking a callback. #17303
Converted session.getCacheSize() and session.clearCache() to return promises instead of taking callbacks. #17185
Converted session.setProxy() and session.resolveProxy() to return Promises instead of taking callbacks. #17222
Converted webContents.hasServiceWorker() to return a promise instead of taking a callback. #16535
Converted webContents.printToPDF() to return a Promise instead of taking a callback. #16795
Converted webContents.savePage() to return a Promise instead of taking a callback. #16742
Enabled NodeIntegrationInSubFrames option usage for webview tags. #17226
Exposed colorSpace to the Display object. #17405
Feat: add native emoji and color picker methods for Windows and MacOS. #17359
Fixed Chrome extension content scripts not loading in sandboxed renderer. #16218
For security reasons, preload scripts can now only be loaded from a subpath of app path (app.getAppPath()). #17308
Implemented BrowserWindow.moveTop() on Linux/x11. #16629
Moved webFrame custom scheme APIs to browser process under protocol. #16416
Process now emits 'loaded' event in sandboxed renderers. #17680
Promisified inAppPurchase.getProducts() and inAppPurchase.purchaseProduct(). #17355
Replaced powerMonitor querySystemIdleState and querySystemIdleTime with synchronous APIs. #17144
Split dialog.showMessageBox() into a synchronous version and a version that returns a Promise. #17298
Split dialog.showOpenDialog() into a synchronous version and a version that returns a Promise. #16973
Split dialog.showSaveDialog() into a synchronous version and a version that returns a Promise. #17054

Fixes

Added missing module name to the exception message thrown when require fails in sandboxed renderers. #17413
DevTools Extensions now load correctly. #17614
Enabled autofill popups on Mac. #16308
Ensured that webContents.hasServiceWorker() rejects with an error for invalid URLs. #16571
Fixed beginFrameSubscription returning blurred images on HiDPI displays. #17444
Fixed webFrame.setSpellCheckProvider memory leak. #16448
Fixed a crash when failed to get devices in desktopCapturer on Windows. #17973
Fixed a possible crash on exit. #17879
Fixed an issue preventing the Flash plugin from loading on Linux. #17823
Fixed crash when Electron run from SMB network share. #17909
Fixed inconsistent behavior where modifying the buffer would change nativeImage pixels, while decoded PNG / JPEG data is a copy. #17843
Fixed issue where sandboxed renderers could sometimes leak globals outside of the preload script. #17712
Fixed offscreen rendering not working with viz compositor. #17538
Fixed race condition where the remote module would sometimes fail to fetch properties of a remote object. #17464
Fixed the callback of beginFrameSubscription passing Buffer instead of NativeImage. #17548
Focus methods no longer steal focus when users are active on other apps. #16400
Improved the way frameless windows are handled on Windows. #16596
Injected chrome extensions that have content scripts with a . in the pattern field now treat it as a raw . instead of a wildcard. #17593
No-notes. #17214
Removed non-existent gpu-crashed event on <webview>. #17317
Updated the protocol.registerSchemesAsPrivileged API options key. #16601
Using webContents.sendInputEvent to send a WebMouseWheelEvent now has the expected effect. #17757

Other Changes

 Please add a one-line description for app developers to read in the release notes, or <code>no-notes</code> if no notes relevant to app developers. Examples and help on special cases: https://github.com/electron/clerk/blob/master/README.md#examples no-notes. #16552
Converted accessibilitySupportEnabled to a proper JS property on app. #17362
Converted applicationMenu to a proper JS property on the app module. #17361
Enabled sandbox and disabled remote module in default_app. #17318
Enabled sandboxing of devtools and chrome extension background script host renderers. #16864
Fixed race condition in the desktopCapturer module where some requests for sources would never be resolved or unhandled exceptions would be thrown in the main process. #18042
No-notes. #16685
Removed Vulkan validation layers DLLs from electron.zip, which are only meant to be used for Chromium development. #18062
Removed hasServiceWorker and unregisterServiceWorker APIs from the WebContents modules. #16717
Removed deprecated modules internally using remote.require in sandboxed renderer context. Use remote.require explicitly instead (unless the remote module is disabled). #15957
Removed native mksnapshot binaries for arm/arm64 as they no longer work. #17561
Removed special handling that forced dialog methods called over the remote module to return their result synchronously but not block the main process. #17412
Reset version to 6.0.0-beta.0 in prep for 6.0.0-beta.1. 37f4bd4d
The clipboard module in renderers no longer depends on the remote module on Linux. #17200

Documentation

Documentation changes: #16496, #16593, #16700, #16762, #16775, #16865, #16874, #16966, #17467, #17866
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@6.0.0-beta.1.
Release Notes for v6.0.0-beta.1
Breaking Changes
Fixed disparity between net module headers and Node.js'  http.IncomingMessage headers. #17517
Made ShowItemInFolder asynchronous with no return value. #17121
Made app log directory creation opt-in with a new function app.setAppLogsPath. #17841
Upgraded to Chromium 76.0.3774.1
Features
Added Promise support for the Cookies API. #16464
Added chrome.runtime.getManifest API for Chrome extensions. #16891
Added .getWebContentsId(), which does not depend of the remote module. #17407
Added all_frames support for Chrome extension content scripts. #17258
Added disableHtmlFullscreenWindowResize option to webPreferences to allow preventing window from resizing when entering HTML5 fullscreen. #17203
Added excludedFromShownWindowsMenu property to allow for windows to be excluded from the windows menu. #17404
Added process.getSystemVersion(), which is available in sandboxed renderers and returns the actual operating system version instead of kernel version on macOS. #16599
Added process.versions.electron to get the electron version in the forked process. #16450
Added renderer-process-crashed event to app, which is emitted when any renderer process crashes. #17315
Added systemPreferences.getAnimationSettings() returning system animation settings provided by Chromium. #17382
Added tray.getTitle() to allows users to see the title set next to the status bar icon on macOS. #17385
Added a new Event property triggeredByAccelerator, which is called back in custom click events on MenuItems. #16954
Added ability disable fetching thumbnails for in  desktopCapturer.getSources(). #14906
Added additional error information to errors thrown when using the remote module. #17851
Added an option to enable MenuItems on macOS to work optionally when visible: false. #16853
Added file preview for file picker in Linux. #16447
Added flexible autoresize option for BrowserViews in BrowserWindow. #16184
Added native Touch ID authentication support for macOS. #16707
Added new monochrome, internal, acceleratorEnabled, colorDepth and depthPerComponent properties to the Display API Structure. #16870
Added new inspectSharedWorker() API to enable opening devtools for a shared worker. #16615
Added safer nativeImage.createFromBitmap(), which does not decode PNG/JPEG. #17337
Added support for Scroll Lock accelerator. #16873
Added world isolation to Chrome extension content scripts. #17032
Converted app.dock.show() such that it now returns a Promise. #16904
Converted contentTracing.getCategories() to return a promise instead taking a callback. #16583
Converted contentTracing.getTraceBufferUsage() to return a Promise instead of taking a callback. #16600
Converted contents.executeJavaScript(), webFrame.executeJavaScript(), webFrame.executeJavaScriptInIsolatedWorld() and webviewTag.executeJavaScript() to return Promises instead of taking callbacks. #17312
Converted dialog.showCertificateTrustDialog() to return a Promise instead of taking a callback. #17181
Converted netLog.stopLogging() to return a Promise instead of taking a callback. #16862
Converted session.clearAuthCache() to return a promise instead of optionally taking a callback. #17259
Converted session.clearHostResolverCache() to return a Promise instead of taking a callback. #17229
Converted session.clearStorageData() such that it returns a Promise instead of taking a callback. #17249
Converted session.getBlobData() to return a Promise instead of taking a callback. #17303
Converted session.getCacheSize() and session.clearCache() to return promises instead of taking callbacks. #17185
Converted session.setProxy() and session.resolveProxy() to return Promises instead of taking callbacks. #17222
Converted webContents.hasServiceWorker() to return a promise instead of taking a callback. #16535
Converted webContents.printToPDF() to return a Promise instead of taking a callback. #16795
Converted webContents.savePage() to return a Promise instead of taking a callback. #16742
Enabled NodeIntegrationInSubFrames option usage for webview tags. #17226
Exposed colorSpace to the Display object. #17405
Feat: add native emoji and color picker methods for Windows and MacOS. #17359
Fixed Chrome extension content scripts not loading in sandboxed renderer. #16218
For security reasons, preload scripts can now only be loaded from a subpath of app path (app.getAppPath()). #17308
Implemented BrowserWindow.moveTop() on Linux/x11. #16629
Moved webFrame custom scheme APIs to browser process under protocol. #16416
Process now emits 'loaded' event in sandboxed renderers. #17680
Promisified inAppPurchase.getProducts() and inAppPurchase.purchaseProduct(). #17355
Replaced powerMonitor querySystemIdleState and querySystemIdleTime with synchronous APIs. #17144
Split dialog.showMessageBox() into a synchronous version and a version that returns a Promise. #17298
Split dialog.showOpenDialog() into a synchronous version and a version that returns a Promise. #16973
Split dialog.showSaveDialog() into a synchronous version and a version that returns a Promise. #17054
Fixes
Added missing module name to the exception message thrown when require fails in sandboxed renderers. #17413
DevTools Extensions now load correctly. #17614
Enabled autofill popups on Mac. #16308
Ensured that webContents.hasServiceWorker() rejects with an error for invalid URLs. #16571
Fixed beginFrameSubscription returning blurred images on HiDPI displays. #17444
Fixed webFrame.setSpellCheckProvider memory leak. #16448
Fixed a crash when failed to get devices in desktopCapturer on Windows. #17973
Fixed a possible crash on exit. #17879
Fixed an issue preventing the Flash plugin from loading on Linux. #17823
Fixed crash when Electron run from SMB network share. #17909
Fixed inconsistent behavior where modifying the buffer would change nativeImage pixels, while decoded PNG / JPEG data is a copy. #17843
Fixed issue where sandboxed renderers could sometimes leak globals outside of the preload script. #17712
Fixed offscreen rendering not working with viz compositor. #17538
Fixed race condition where the remote module would sometimes fail to fetch properties of a remote object. #17464
Fixed the callback of beginFrameSubscription passing Buffer instead of NativeImage. #17548
Focus methods no longer steal focus when users are active on other apps. #16400
Improved the way frameless windows are handled on Windows. #16596
Injected chrome extensions that have content scripts with a . in the pattern field now treat it as a raw . instead of a wildcard. #17593
No-notes. #17214
Removed non-existent gpu-crashed event on . #17317
Updated the protocol.registerSchemesAsPrivileged API options key. #16601
Using webContents.sendInputEvent to send a WebMouseWheelEvent now has the expected effect. #17757
Other Changes
Please add a one-line description for app developers to read in the release notes, or module if no notes relevant to app developers. Examples and help on special cases: link no-notes. #16552
Converted accessibilitySupportEnabled to a proper JS property on app. #17362
Converted applicationMenu to a proper JS property on the app module. #17361
Enabled sandbox and disabled remote module in default_app. #17318
Enabled sandboxing of devtools and chrome extension background script host renderers. #16864
Fixed race condition in the desktopCapturer module where some requests for sources would never be resolved or unhandled exceptions would be thrown in the main process. #18042
No-notes. #16685
Removed Vulkan validation layers DLLs from electron.zip, which are only meant to be used for Chromium development. #18062
Removed hasServiceWorker and unregisterServiceWorker APIs from the WebContents modules. #16717
Removed deprecated modules internally using remote.require in sandboxed renderer context. Use remote.require explicitly instead (unless the remote module is disabled). #15957
Removed native mksnapshot binaries for arm/arm64 as they no longer work. #17561
Removed special handling that forced dialog methods called over the remote module to return their result synchronously but not block the main process. #17412
Reset version to 6.0.0-beta.0 in prep for 6.0.0-beta.1. 37f4bd4d
The clipboard module in renderers no longer depends on the remote module on Linux. #17200
Documentation
Documentation changes: #16496, #16593, #16700, #16762, #16775, #16865, #16874, #16966, #17467, #17866"
799,"Release Notes for v4.1.5
Fixes



Added support for the new Japanese Era Reiwa (令和) to JavaScript date/time formatting APIs.

Updated ICU library to version 62.2
Updated IANA time zone data to tzdata2019a. #17833





Added missing module name to the exception message thrown when require fails in sandboxed renderers. #17704
Back-ported additional fix for font rendering in MacOS Mojave. #17737
Fixed 'loaded' event not being emitted in sandboxed renderers. #17807
Fixed crash when manually dismissing notifications before quit on macOS. #17821
Fixed inconsistent behavior where modifying the buffer would change nativeImage pixels, while decoded PNG / JPEG data is a copy. #17862
Fixed session preload scripts not being executed in sandboxed renderers. #17875
Fixed the ""rc4"" cipher (#16214) (4.1.x). #17873

Other Changes

Removed unused Vulkan libraries from bundle. #17789

Documentation

Documentation changes: #17815, #17848
","Release Notes for v4.1.5
Fixes
Added support for the new Japanese Era Reiwa (令和) to JavaScript date/time formatting APIs.
Updated ICU library to version 62.2
Updated IANA time zone data to tzdata2019a. #17833
Added missing module name to the exception message thrown when require fails in sandboxed renderers. #17704
Back-ported additional fix for font rendering in MacOS Mojave. #17737
Fixed 'loaded' event not being emitted in sandboxed renderers. #17807
Fixed crash when manually dismissing notifications before quit on macOS. #17821
Fixed inconsistent behavior where modifying the buffer would change nativeImage pixels, while decoded PNG / JPEG data is a copy. #17862
Fixed session preload scripts not being executed in sandboxed renderers. #17875
Fixed the ""rc4"" cipher (#16214) (4.1.x). #17873
Other Changes
Removed unused Vulkan libraries from bundle. #17789
Documentation
Documentation changes: #17815, #17848"
800,"Release Notes for v5.0.0
Breaking Changes

Upgraded to Chromium 73.0.3683.119, Node.js 12.0.0, and V8 7.3.492.27.
The default values of nodeIntegration and webviewTag are now false to improve security. #16235
Removed support for deprecated construction of a TouchBar with an array of items, use an options object instead. #15650
Enabled mixed-sandbox mode by default. enableMixedSandbox and the --enable-mixed-sandbox command-line switch still exist for compatibility, but are deprecated and have no effect. #15894

Features

Added `ELECTRON_DISABLE_SANDBOX environment variable to make it easier to disable sandboxing in Docker-based Linux CI environments. #16662
Added Promise support for the Cookies API. #16702
Added activate option to webContents.openDevTools. #13852
Added app.commandLine.hasSwitch() / app.commandLine.getSwitchValue(). #16282
Added fileMenu / viewMenu / appMenu roles. #16328
Added ipc-message and ipc-message-sync events to webContents. #16468
Added preload-error event to webContents emitted when preload script fails (parse error, unhandled exception, etc.). #16411
Added win.removeMenu() to remove application menus instead of using win.setMenu(null). #16657
Added a way to query for system colors on MacOS via systemPreferences.getSystemColor(). #16248
Added about panel customization on linux. #15658
Added caps lock and numlock as keyboard accelerator modifiers. #16725
Added event and method to detect high contrast color schemes  One-line Change Summary Here. #15493
Added getMemoryFootprint API. #14847
Added macOS support for systemPreferences.getAccentColor(). #16251
Added macOS support to systemPreferences.getColor(). #16249
Added methods to DownloadItem that enable customization of the save dialog options during will-download events One-line Change Summary Here. #15497
Added response header support to protocol.registerFileProtocol to match protocol.registerStreamProtocol. #16098
Added support for DesktopCapturerSource.appIcon. 1f55f163
Added support for multiple browser views per BrowserWindow. #16148
Added support for running preload scripts and nodeIntegration in iframes. #16425
Allow for MacOS notifications to be immediately delivered. #16060
Allow numpad keys to be used as accelerators. #15689
Allow partial setting of window bounds with win.setBounds(). #15677
Allow registering of multiple globalShortcuts. #15542
Allowed filtering of remote.getBuiltin(), remote.getCurrentWindow(), remote.getCurrentWebContents and <webview>.getWebContents(). #16293
Converted contentTracing.getCategories() to return a promise instead taking a callback. #16624
Converted contentTracing.startRecording() and contentTracing.stopRecording() to return a promise instead taking a callback. #16642
Converted debugger.sendCommand() to return a Promise instead of taking a callback. #16931
Converted zoomLevel() and zoomFactor() for webContents and <webview> to return a promise instead taking a callback. #16410
Enabled NodeIntegrationInSubFrames option usage for webview tags. #17398
Enabled the setuid sandbox on Linux, allowing Electron to launch sandboxed processes in environments that disable CLONE_NEWUSER for unprivileged users. #17343
Exposed an API to allow apps to determine their status as a trusted accessibility client. #16119
Provided user system's region with app.getLocaleCountryCode(). #15035
Mixed-sandbox mode works on Linux. #15870
Promisified app.getFileIcon. #15742
Promisified shell.openExternal() by splitting it into a sync and async method. #16176
Promisified win.capturePage(). #15743
Implemented the browser-backward and browser-forward app-command events available in BrowserWindow on Linux. #15441
Unified behavior between the default app and packaged apps (application menu / window-all-closed handling). #16310
Updated SpellCheck API to support asynchronous results. #14032
Updated Menu.buildFromTemplate() to allow it to accept MenuItems in addition to plain objects. #16783
Updated WebContents.loadURL and loadFile to return a promise. #15855

Fixes

'win.setParentWindow(parent)' is now supported on Windows. #15775
Fixed a crash on Linux when starting a sandboxed renderer: the resourcesPath property is no longer available on process in sandboxed renderers. #15701
Added new switch: --disable-color-correct-rendering. #15898
Added a check for invalid menu index to prevent out-of-range crashes on insertion. #17435
Added a patch to fix incorrect enumeration and instantiation of Node.js ciphers in the Crypto module. #16909
Added missing buffer size check in nativeImage.createFromBuffer / nativeImage.addRepresentation. Data URLs only parsed according to the MIME type as PNG or JPEG. #17568
Allowed blocking of desktopCapturer.getSources() calls by handling the desktop-capturer-get-sources event. #15964
Fixed a MacOS color picker dialog. #17254
Be more lenient about whitespace in webview's ""webpreferences"" feature string. #15602
Corrected windowMenu MenuItem role on MacOS. #15930
Disabled CORB checks when web security preference is disabled. #15737
Electron no longer forwards IPC filtering events to app for dev-tools and extensions. #16613
Fixed hiddenInset titleBar console spam. #15576
Fixed make certain values on process read-only. #15628
Fixed move NativeWindow tracking to OSR WCV. #15585
Fixed Chromium sandbox v2 related crashes in MAS builds. #16969
Fixed <webview> not working with contextIsolation + sandbox. #16469
Fixed <webview> tag not working when using contextIsolation. #16067
Fixed defaultId not taking affect when set to 0 and no ""cancel"" button was present on macOS. #17150
Fixed webContents.print() not working correctly. #17117
Fixed windowmenu role not showing the window list on macOS. #16387
Fixed a bug that made all cookies non persistent.  One-line Change Summary Here. #15836
Fixed a bug when retrieving security scoped bookmarks in ShowOpenDialog and ShowSaveDialog. #17177
Fixed a bug where window.opener of a window created with window.open from a sandboxed renderer was null. #15821
Fixed a bug which caused global shortcuts with the Windows key not to work properly on Windows. #17566
Fixed a crash when calling ECDH.setPrivateKey(). #17296
Fixed a problem where the focus would move to the browser window after the user (SHIFT +) tabbed through all the elements in the page (#12919). #16042
Fixed an assertion when calling ECDH.getPrivateKey(), diffieHellman.generateKeys() or diffieHellman.get*(). #17255
Fixed an issue where Notification objects constructed in the main process would randomly not be shown to the user. #17484
Fixed an issue where data streamed from registerStreamProtocol could be truncated before completion. #16553
Fixed an issue where on Linux, the setuid sandbox was incorrectly enabled when passing --enable-mixed-sandbox. #15722
Fixed an issue whereby foreground visibility of a window was not correctly taken into account for win.isVisible() on macOS. #17491
Fixed an issue with netLog module properties not being returned correctly. #17545
Fixed an issue with promise methods not resolving correctly over ipc in the renderer process. #16433
Fixed and re-enabled osr after it was turned off following updates to Chromium 71/72. #16616
Fixed app freeze when using custom stream protocol. #17264
Fixed broken save dialog on macOS for <a> downloads. #16640
Fixed a bug that caused menu accelerators to stop working on some linux. #15094
Fixed child windows invisible if opened with window.open from BrowserView with nativeWindowOpen enabled. #12686
Fixed crash on exit when using BrowserView. #15541
Fixed crash when nativeImage.createFromBuffer() is called with invalid buffer. #17374
Fixed crash when calling setProgressBar on macOS. #16728
Fixed crash when passing callbacks which return undefined to some APIs. #17481
Fixed crash when showing a tray menu while one is already shown. #17509
Fixed default font fallback for non-latin scripts. #15486
Fixed defunct processes after quitting. #16672
Fixed incorrect display of 'zoom in' accelerator on mac. #15502
Fixed incorrect foreground color on GTK menubar. #15878
Fixed issue where preload scripts would sometimes run twice in the same process in different contexts resulting in broken native node module loading. #17597
Fixed issue whereby a user was not well informed when interacting with a menu submenu that did not have any visible MenuItems. #16848
Fixed memory leak caused by webFrame.setSpellCheckProvider. #16525
Fixed memory leak when using webFrame and spell checker. #16851
Fixed missing remote object error when calling remote function created in preload script. #15444
Fixed regression regarding localStorage quota not being bypassed. #15596
Fixed returning headers with multiple values for stream protocols. #14887
Fixed session preload scripts not being executed in sandboxed renderers. #16578
Fixed some MAS rejection errors by removing usages of private APIs. #17293
Fixed some accelerators having Shift appended to them twice  One-line Change Summary Here. #15400
Fixed submenus not responding to the visible: false MenuItem property. #16846
Fixed support for precision trackpad/mouse scrolling on Windows. #15830
Fixed the enable property having no effect for top-level submenu MenuItems. #16858
Fixed the handling of the escape key in dialogs created by window.confirm. The ""Cancel"" button is now triggered by the escape key, and the ""OK"" button is now triggered by the return key. #17578
Implemented proper Location object for BrowserWindowProxy. #15019
Improved the contrast/visibility of the ""focused"" menu item in menus on Windows. #17360
Injected chrome extensions that have content scripts with a . in the pattern field now treat it as a raw . instead of a wildcard. #17594
Launching the node inspector through --inspect now listens on the correct port when one is provided. #17439
Made getUserMedia APIs work again on C72+ (backport: 5-0-x). #16768
Moved webFrame custom scheme APIs to browser process under protocol. #16625
Added missing require in chromium-spec #16153
Restored support for AES-CFB cipher, which was lost when switching from OpenSSL to BoringSSL. #16618
Restored support for RIPEMD160 digest, which was lost when switching from OpenSSL to BoringSSL. #16572
Fixed support async child process methods without callback in asar. #15927
The safeDialogs webPreferences option now actually works on file:// URLs. #17579
TouchBarSegmentedControl instances now correctly update when you update the segments array and remove label or image dynamically. #17334

Other Changes

Switched to V2 sandbox on mac. #15647
Fixed Windows Electron tests to run first to show those failures first#16655 
Added webFrame.setIsolatedWorldInfo API and deprecated related APIs. #16932
Added legacy callback function tests to prevent regressions as the promisification initiative continues. #16436
Deprecated ServiceWorker APIs on WebContents in preparation for their removal. #16732
Fixed version bump script for first beta. 29e5195c
Improved tray icon context menu and menu bar accessibility. #15302
Merged code in brightray into atom. #15240
Exposed missing process.getCreationTime() in sandboxed renderers. #15824
Removed api::WebContents::CreateFrom. #15241
Removed hardcoded Google API key. #15478
Removed potential double free when managing WebContents. #15280

Documentation

Documentation changes: #14024, #14768, #15196, #15507, #15551, #15888, #16129, #16186, #16482, #16549, #16614, #16675, #17118, #17167, #17493
","Release Notes for v5.0.0
Breaking Changes
Upgraded to Chromium 73.0.3683.119, Node.js 12.0.0, and V8 7.3.492.27.
The default values of nodeIntegration and webviewTag are now false to improve security. #16235
Removed support for deprecated construction of a TouchBar with an array of items, use an options object instead. #15650
Enabled mixed-sandbox mode by default. enableMixedSandbox and the --enable-mixed-sandbox command-line switch still exist for compatibility, but are deprecated and have no effect. #15894
Features
Added `ELECTRON_DISABLE_SANDBOX environment variable to make it easier to disable sandboxing in Docker-based Linux CI environments. #16662
Added Promise support for the Cookies API. #16702
Added activate option to webContents.openDevTools. #13852
Added app.commandLine.hasSwitch() / app.commandLine.getSwitchValue(). #16282
Added fileMenu / viewMenu / appMenu roles. #16328
Added ipc-message and ipc-message-sync events to webContents. #16468
Added preload-error event to webContents emitted when preload script fails (parse error, unhandled exception, etc.). #16411
Added win.removeMenu() to remove application menus instead of using win.setMenu(null). #16657
Added a way to query for system colors on MacOS via systemPreferences.getSystemColor(). #16248
Added about panel customization on linux. #15658
Added caps lock and numlock as keyboard accelerator modifiers. #16725
Added event and method to detect high contrast color schemes  One-line Change Summary Here. #15493
Added getMemoryFootprint API. #14847
Added macOS support for systemPreferences.getAccentColor(). #16251
Added macOS support to systemPreferences.getColor(). #16249
Added methods to DownloadItem that enable customization of the save dialog options during will-download events One-line Change Summary Here. #15497
Added response header support to protocol.registerFileProtocol to match protocol.registerStreamProtocol. #16098
Added support for DesktopCapturerSource.appIcon. 1f55f163
Added support for multiple browser views per BrowserWindow. #16148
Added support for running preload scripts and nodeIntegration in iframes. #16425
Allow for MacOS notifications to be immediately delivered. #16060
Allow numpad keys to be used as accelerators. #15689
Allow partial setting of window bounds with win.setBounds(). #15677
Allow registering of multiple globalShortcuts. #15542
Allowed filtering of remote.getBuiltin(), remote.getCurrentWindow(), remote.getCurrentWebContents and .getWebContents(). #16293
Converted contentTracing.getCategories() to return a promise instead taking a callback. #16624
Converted contentTracing.startRecording() and contentTracing.stopRecording() to return a promise instead taking a callback. #16642
Converted debugger.sendCommand() to return a Promise instead of taking a callback. #16931
Converted zoomLevel() and zoomFactor() for webContents and  to return a promise instead taking a callback. #16410
Enabled NodeIntegrationInSubFrames option usage for webview tags. #17398
Enabled the setuid sandbox on Linux, allowing Electron to launch sandboxed processes in environments that disable CLONE_NEWUSER for unprivileged users. #17343
Exposed an API to allow apps to determine their status as a trusted accessibility client. #16119
Provided user system's region with app.getLocaleCountryCode(). #15035
Mixed-sandbox mode works on Linux. #15870
Promisified app.getFileIcon. #15742
Promisified shell.openExternal() by splitting it into a sync and async method. #16176
Promisified win.capturePage(). #15743
Implemented the browser-backward and browser-forward app-command events available in BrowserWindow on Linux. #15441
Unified behavior between the default app and packaged apps (application menu / window-all-closed handling). #16310
Updated SpellCheck API to support asynchronous results. #14032
Updated Menu.buildFromTemplate() to allow it to accept MenuItems in addition to plain objects. #16783
Updated WebContents.loadURL and loadFile to return a promise. #15855
Fixes
'win.setParentWindow(parent)' is now supported on Windows. #15775
Fixed a crash on Linux when starting a sandboxed renderer: the resourcesPath property is no longer available on process in sandboxed renderers. #15701
Added new switch: --disable-color-correct-rendering. #15898
Added a check for invalid menu index to prevent out-of-range crashes on insertion. #17435
Added a patch to fix incorrect enumeration and instantiation of Node.js ciphers in the Crypto module. #16909
Added missing buffer size check in nativeImage.createFromBuffer / nativeImage.addRepresentation. Data URLs only parsed according to the MIME type as PNG or JPEG. #17568
Allowed blocking of desktopCapturer.getSources() calls by handling the desktop-capturer-get-sources event. #15964
Fixed a MacOS color picker dialog. #17254
Be more lenient about whitespace in webview's ""webpreferences"" feature string. #15602
Corrected windowMenu MenuItem role on MacOS. #15930
Disabled CORB checks when web security preference is disabled. #15737
Electron no longer forwards IPC filtering events to app for dev-tools and extensions. #16613
Fixed hiddenInset titleBar console spam. #15576
Fixed make certain values on process read-only. #15628
Fixed move NativeWindow tracking to OSR WCV. #15585
Fixed Chromium sandbox v2 related crashes in MAS builds. #16969
Fixed  not working with contextIsolation + sandbox. #16469
Fixed  tag not working when using contextIsolation. #16067
Fixed defaultId not taking affect when set to 0 and no ""cancel"" button was present on macOS. #17150
Fixed webContents.print() not working correctly. #17117
Fixed windowmenu role not showing the window list on macOS. #16387
Fixed a bug that made all cookies non persistent.  One-line Change Summary Here. #15836
Fixed a bug when retrieving security scoped bookmarks in ShowOpenDialog and ShowSaveDialog. #17177
Fixed a bug where window.opener of a window created with window.open from a sandboxed renderer was null. #15821
Fixed a bug which caused global shortcuts with the Windows key not to work properly on Windows. #17566
Fixed a crash when calling ECDH.setPrivateKey(). #17296
Fixed a problem where the focus would move to the browser window after the user (SHIFT +) tabbed through all the elements in the page (#12919). #16042
Fixed an assertion when calling ECDH.getPrivateKey(), diffieHellman.generateKeys() or diffieHellman.get*(). #17255
Fixed an issue where Notification objects constructed in the main process would randomly not be shown to the user. #17484
Fixed an issue where data streamed from registerStreamProtocol could be truncated before completion. #16553
Fixed an issue where on Linux, the setuid sandbox was incorrectly enabled when passing --enable-mixed-sandbox. #15722
Fixed an issue whereby foreground visibility of a window was not correctly taken into account for win.isVisible() on macOS. #17491
Fixed an issue with netLog module properties not being returned correctly. #17545
Fixed an issue with promise methods not resolving correctly over ipc in the renderer process. #16433
Fixed and re-enabled osr after it was turned off following updates to Chromium 71/72. #16616
Fixed app freeze when using custom stream protocol. #17264
Fixed broken save dialog on macOS for  downloads. #16640
Fixed a bug that caused menu accelerators to stop working on some linux. #15094
Fixed child windows invisible if opened with window.open from BrowserView with nativeWindowOpen enabled. #12686
Fixed crash on exit when using BrowserView. #15541
Fixed crash when nativeImage.createFromBuffer() is called with invalid buffer. #17374
Fixed crash when calling setProgressBar on macOS. #16728
Fixed crash when passing callbacks which return undefined to some APIs. #17481
Fixed crash when showing a tray menu while one is already shown. #17509
Fixed default font fallback for non-latin scripts. #15486
Fixed defunct processes after quitting. #16672
Fixed incorrect display of 'zoom in' accelerator on mac. #15502
Fixed incorrect foreground color on GTK menubar. #15878
Fixed issue where preload scripts would sometimes run twice in the same process in different contexts resulting in broken native node module loading. #17597
Fixed issue whereby a user was not well informed when interacting with a menu submenu that did not have any visible MenuItems. #16848
Fixed memory leak caused by webFrame.setSpellCheckProvider. #16525
Fixed memory leak when using webFrame and spell checker. #16851
Fixed missing remote object error when calling remote function created in preload script. #15444
Fixed regression regarding localStorage quota not being bypassed. #15596
Fixed returning headers with multiple values for stream protocols. #14887
Fixed session preload scripts not being executed in sandboxed renderers. #16578
Fixed some MAS rejection errors by removing usages of private APIs. #17293
Fixed some accelerators having Shift appended to them twice  One-line Change Summary Here. #15400
Fixed submenus not responding to the visible: false MenuItem property. #16846
Fixed support for precision trackpad/mouse scrolling on Windows. #15830
Fixed the enable property having no effect for top-level submenu MenuItems. #16858
Fixed the handling of the escape key in dialogs created by window.confirm. The ""Cancel"" button is now triggered by the escape key, and the ""OK"" button is now triggered by the return key. #17578
Implemented proper Location object for BrowserWindowProxy. #15019
Improved the contrast/visibility of the ""focused"" menu item in menus on Windows. #17360
Injected chrome extensions that have content scripts with a . in the pattern field now treat it as a raw . instead of a wildcard. #17594
Launching the node inspector through --inspect now listens on the correct port when one is provided. #17439
Made getUserMedia APIs work again on C72+ (backport: 5-0-x). #16768
Moved webFrame custom scheme APIs to browser process under protocol. #16625
Added missing require in chromium-spec #16153
Restored support for AES-CFB cipher, which was lost when switching from OpenSSL to BoringSSL. #16618
Restored support for RIPEMD160 digest, which was lost when switching from OpenSSL to BoringSSL. #16572
Fixed support async child process methods without callback in asar. #15927
The safeDialogs webPreferences option now actually works on file:// URLs. #17579
TouchBarSegmentedControl instances now correctly update when you update the segments array and remove label or image dynamically. #17334
Other Changes
Switched to V2 sandbox on mac. #15647
Fixed Windows Electron tests to run first to show those failures first#16655 
Added webFrame.setIsolatedWorldInfo API and deprecated related APIs. #16932
Added legacy callback function tests to prevent regressions as the promisification initiative continues. #16436
Deprecated ServiceWorker APIs on WebContents in preparation for their removal. #16732
Fixed version bump script for first beta. 29e5195c
Improved tray icon context menu and menu bar accessibility. #15302
Merged code in brightray into atom. #15240
Exposed missing process.getCreationTime() in sandboxed renderers. #15824
Removed api::WebContents::CreateFrom. #15241
Removed hardcoded Google API key. #15478
Removed potential double free when managing WebContents. #15280
Documentation
Documentation changes: #14024, #14768, #15196, #15507, #15551, #15888, #16129, #16186, #16482, #16549, #16614, #16675, #17118, #17167, #17493"
801,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@5.0.0-beta.9.
# Release Notes for v5.0.0-beta.9
Fixes

Added missing module name to the exception message thrown when require fails in sandboxed renderers. #17705
Fixed 'loaded' event not being emitted in sandboxed renderers. #17808
Fixed an issue preventing the Flash plugin from loading on Linux. #17829
Fixed an issue with default filenames not showing in download items on macOS. #17797
Fixed crash when manually dismissing notifications before quit on macOS. #17822
Fixed crash when passing empty strings to recording in the contentTracing module. #17711
Fixed crash when pressing Alt key with setMenuBarVisibility to false. #17795
Fixed inconsistent behavior where modifying the buffer would change nativeImage pixels, while decoded PNG / JPEG data is a copy. #17863
Fixed issue where chromedriver would not connect correctly if you didn't provide a custom remote-debugging-port. #17817
Fixed issue where sandboxed renderers could sometimes leak globals outside of the preload script. #17830
Fixed race condition where the remote module would sometimes fail to fetch properties of a remote object. #17825
Upgraded to node-12 with v8 7.3. #17752

Other Changes

Removed unused Vulkan libraries from bundle. #17788
Updated Chromium to 73.0.3683.105. #17707
Updated Chromium to 73.0.3683.112. #17770
Updated Chromium to 73.0.3683.116. #17805
Updated Chromium to 73.0.3683.117. #17839

Documentation

Documentation changes: #17812, #17814, #17849
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@5.0.0-beta.9.
Release Notes for v5.0.0-beta.9
Fixes
Added missing module name to the exception message thrown when require fails in sandboxed renderers. #17705
Fixed 'loaded' event not being emitted in sandboxed renderers. #17808
Fixed an issue preventing the Flash plugin from loading on Linux. #17829
Fixed an issue with default filenames not showing in download items on macOS. #17797
Fixed crash when manually dismissing notifications before quit on macOS. #17822
Fixed crash when passing empty strings to recording in the contentTracing module. #17711
Fixed crash when pressing Alt key with setMenuBarVisibility to false. #17795
Fixed inconsistent behavior where modifying the buffer would change nativeImage pixels, while decoded PNG / JPEG data is a copy. #17863
Fixed issue where chromedriver would not connect correctly if you didn't provide a custom remote-debugging-port. #17817
Fixed issue where sandboxed renderers could sometimes leak globals outside of the preload script. #17830
Fixed race condition where the remote module would sometimes fail to fetch properties of a remote object. #17825
Upgraded to node-12 with v8 7.3. #17752
Other Changes
Removed unused Vulkan libraries from bundle. #17788
Updated Chromium to 73.0.3683.105. #17707
Updated Chromium to 73.0.3683.112. #17770
Updated Chromium to 73.0.3683.116. #17805
Updated Chromium to 73.0.3683.117. #17839
Documentation
Documentation changes: #17812, #17814, #17849"
802,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@5.0.0-beta.8.
# Release Notes for v5.0.0-beta.8
Fixes

DevTools Extensions now load correctly. #17616
Fixed a bug which caused global shortcuts with the Windows key not to work properly on Windows. #17566
Fixed an issue with netLog module properties not being returned correctly. #17545
Fixed issue where preload scripts would sometimes run twice in the same process in different contexts resulting in broken native node module loading. #17597
Fixed offscreen rendering not working with viz compositor. #17572
Fixed the handling of the escape key in dialogs created by window.confirm. The ""Cancel"" button is now triggered by the escape key, and the ""OK"" button is now triggered by the return key. #17578
Injected chrome extensions that have content scripts with a . in the pattern field now treat it as a raw . instead of a wildcard. #17594

Other Changes

Updated Chromium to 73.0.3683.101. #17656
Updated Chromium to 73.0.3683.104. #17692

Documentation

Documentation changes: #17663
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@5.0.0-beta.8.
Release Notes for v5.0.0-beta.8
Fixes
DevTools Extensions now load correctly. #17616
Fixed a bug which caused global shortcuts with the Windows key not to work properly on Windows. #17566
Fixed an issue with netLog module properties not being returned correctly. #17545
Fixed issue where preload scripts would sometimes run twice in the same process in different contexts resulting in broken native node module loading. #17597
Fixed offscreen rendering not working with viz compositor. #17572
Fixed the handling of the escape key in dialogs created by window.confirm. The ""Cancel"" button is now triggered by the escape key, and the ""OK"" button is now triggered by the return key. #17578
Injected chrome extensions that have content scripts with a . in the pattern field now treat it as a raw . instead of a wildcard. #17594
Other Changes
Updated Chromium to 73.0.3683.101. #17656
Updated Chromium to 73.0.3683.104. #17692
Documentation
Documentation changes: #17663"
803,"Release Notes for v4.1.4
Fixes

Backported fix for crashes in RenderFrameImpl::OnSelectPopupMenuItem(s). #17659
Backported fix for https://bugs.chromium.org/p/chromium/issues/detail?id=888678. #17632
Fixed process.getProcessMemoryInfo not being exposed to sandbox renderers. #17669
Fixed re-entracy problem with InvalidateFrameSinkId(). #17658
Fixed the --explicitly-allowed-ports switch. #17642

Documentation

Documentation changes: #17662
","Release Notes for v4.1.4
Fixes
Backported fix for crashes in RenderFrameImpl::OnSelectPopupMenuItem(s). #17659
Backported fix for link. #17632
Fixed process.getProcessMemoryInfo not being exposed to sandbox renderers. #17669
Fixed re-entracy problem with InvalidateFrameSinkId(). #17658
Fixed the --explicitly-allowed-ports switch. #17642
Documentation
Documentation changes: #17662"
804,"Release Notes for v4.1.3
Fixes

Fixed IntersectionObserver.rootBounds for navigator zoom != 100%. #17583
Fixed app freeze when using custom stream protocol. #17267
","Release Notes for v4.1.3
Fixes
Fixed IntersectionObserver.rootBounds for navigator zoom != 100%. #17583
Fixed app freeze when using custom stream protocol. #17267"
805,"Release Notes for v4.1.2
Fixes

Added missing buffer size check in nativeImage.createFromBuffer / nativeImage.addRepresentation. Data URLs only parsed according to the MIME type as PNG or JPEG. #17567
Added support for testing the new Japanese Era with a placeholder era name. Set an environment variable named ICU_ENABLE_TENTATIVE_ERA to true to enable the placeholder era. #17518
Fixed an issue whereby foreground visibility of a window was not correctly taken into account for win.isVisible() on macOS. #17492
Fixed an issue with netLog module properties not being returned correctly. #17544
Fixed issue on KDE where tray icons would be displayed incorrectly as a 22x22 version of the provided tray image but cropped from the center. #17497
Fixed issue where preload scripts would sometimes run twice in the same process in different contexts resulting in broken native node module loading. #17596
Generated .framework files on macOS now have the correct permissions.  This fixes an issue where a crash occurred if a user attempted to launch an Electron app that another user downloaded on macOS. #17582

Documentation

Documentation changes: #17494
","Release Notes for v4.1.2
Fixes
Added missing buffer size check in nativeImage.createFromBuffer / nativeImage.addRepresentation. Data URLs only parsed according to the MIME type as PNG or JPEG. #17567
Added support for testing the new Japanese Era with a placeholder era name. Set an environment variable named ICU_ENABLE_TENTATIVE_ERA to true to enable the placeholder era. #17518
Fixed an issue whereby foreground visibility of a window was not correctly taken into account for win.isVisible() on macOS. #17492
Fixed an issue with netLog module properties not being returned correctly. #17544
Fixed issue on KDE where tray icons would be displayed incorrectly as a 22x22 version of the provided tray image but cropped from the center. #17497
Fixed issue where preload scripts would sometimes run twice in the same process in different contexts resulting in broken native node module loading. #17596
Generated .framework files on macOS now have the correct permissions.  This fixes an issue where a crash occurred if a user attempted to launch an Electron app that another user downloaded on macOS. #17582
Documentation
Documentation changes: #17494"
806,"Bug Fixes/Changes


fix: add missing buffer size check in nativeImage. #17569 


fix: handle a race condition between preload scripts executing and navigations. #17595 


chore: bump node to get hotfix https://github.com/electron/node/pull/97. #17592 

","Bug Fixes/Changes
fix: add missing buffer size check in nativeImage. #17569 
fix: handle a race condition between preload scripts executing and navigations. #17595 
chore: bump node to get hotfix link. #17592 "
807,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@5.0.0-beta.7.
# Release Notes for v5.0.0-beta.7
Fixes

Added missing buffer size check in nativeImage.createFromBuffer / nativeImage.addRepresentation. Data URLs only parsed according to the MIME type as PNG or JPEG. #17568
Fixed an issue where Notification objects constructed in the main process would randomly not be shown to the user. #17484
Fixed an issue whereby foreground visibility of a window was not correctly taken into account for win.isVisible() on macOS. #17491
Fixed crash when passing callbacks which return undefined to some APIs. #17481
Fixed crash when showing a tray menu while one is already shown. #17509
The safeDialogs webPreferences option now actually works on file:// URLs. #17579

Other Changes

Updated Chromium to 73.0.3683.88. #17500
Updated Chromium to 73.0.3683.94. #17554

Documentation

Documentation changes: #17493
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@5.0.0-beta.7.
Release Notes for v5.0.0-beta.7
Fixes
Added missing buffer size check in nativeImage.createFromBuffer / nativeImage.addRepresentation. Data URLs only parsed according to the MIME type as PNG or JPEG. #17568
Fixed an issue where Notification objects constructed in the main process would randomly not be shown to the user. #17484
Fixed an issue whereby foreground visibility of a window was not correctly taken into account for win.isVisible() on macOS. #17491
Fixed crash when passing callbacks which return undefined to some APIs. #17481
Fixed crash when showing a tray menu while one is already shown. #17509
The safeDialogs webPreferences option now actually works on file:// URLs. #17579
Other Changes
Updated Chromium to 73.0.3683.88. #17500
Updated Chromium to 73.0.3683.94. #17554
Documentation
Documentation changes: #17493"
808,"Bug Fixes/Changes


build: move macos release builds to CircleCI (3-1-x). #17277 


fix: remove label/image from segment if they are mutated to undefined/null. #17336 


fix: don't crash when nativeImage.createFromBuffer() called with invalid buffer. #17372 


fix: use a more unique identifier for NSUserNotification instances. #17482 


chore: bump libcc (3-1-x). #17503 

","Bug Fixes/Changes
build: move macos release builds to CircleCI (3-1-x). #17277 
fix: remove label/image from segment if they are mutated to undefined/null. #17336 
fix: don't crash when nativeImage.createFromBuffer() called with invalid buffer. #17372 
fix: use a more unique identifier for NSUserNotification instances. #17482 
chore: bump libcc (3-1-x). #17503 "
809,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@5.0.0-beta.6.
# Release Notes for v5.0.0-beta.6
Features

Enabled NodeIntegrationInSubFrames option usage for webview tags. #17398
Enabled the setuid sandbox on Linux, allowing Electron to launch sandboxed processes in environments that disable CLONE_NEWUSER for unprivileged users. #17343

Fixes

Added a check for invalid menu index to prevent out-of-range crashes on insertion. #17435
Backported a fix for crashing color picker dialogs on MacOS. #17254
Fixed a crash when calling ECDH.setPrivateKey(). #17296
Fixed an assertion when calling ECDH.getPrivateKey(), diffieHellman.generateKeys() or diffieHellman.get*(). #17255
Fixed app freeze when using custom stream protocol. #17264
Fixed crash when nativeImage.createFromBuffer() is called with invalid buffer. #17374
Fixed some MAS rejection errors by removing usages of private APIs. #17293
Improved the contrast/visibility of the ""focused"" menu item in menus on Windows. #17360
Launching the node inspector through --inspect now listens on the correct port when one is provided. #17439
TouchBarSegmentedControl instances now correctly update when you update the segments array and remove label or image dynamically. #17334
Fixed issue where preload scripts running in subframes where not context isolated when contextIsolation was enabled #17275

Other Changes

Updated Chromium to 73.0.3683.65. #17233
Updated Chromium to 73.0.3683.68. #17261
Updated Chromium to 73.0.3683.75. #17295
Updated Chromium to 73.0.3683.78. #17367
Updated Chromium to 73.0.3683.79. #17383
Updated Chromium to 73.0.3683.84. #17452
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@5.0.0-beta.6.
Release Notes for v5.0.0-beta.6
Features
Enabled NodeIntegrationInSubFrames option usage for webview tags. #17398
Enabled the setuid sandbox on Linux, allowing Electron to launch sandboxed processes in environments that disable CLONE_NEWUSER for unprivileged users. #17343
Fixes
Added a check for invalid menu index to prevent out-of-range crashes on insertion. #17435
Backported a fix for crashing color picker dialogs on MacOS. #17254
Fixed a crash when calling ECDH.setPrivateKey(). #17296
Fixed an assertion when calling ECDH.getPrivateKey(), diffieHellman.generateKeys() or diffieHellman.get*(). #17255
Fixed app freeze when using custom stream protocol. #17264
Fixed crash when nativeImage.createFromBuffer() is called with invalid buffer. #17374
Fixed some MAS rejection errors by removing usages of private APIs. #17293
Improved the contrast/visibility of the ""focused"" menu item in menus on Windows. #17360
Launching the node inspector through --inspect now listens on the correct port when one is provided. #17439
TouchBarSegmentedControl instances now correctly update when you update the segments array and remove label or image dynamically. #17334
Fixed issue where preload scripts running in subframes where not context isolated when contextIsolation was enabled #17275
Other Changes
Updated Chromium to 73.0.3683.65. #17233
Updated Chromium to 73.0.3683.68. #17261
Updated Chromium to 73.0.3683.75. #17295
Updated Chromium to 73.0.3683.78. #17367
Updated Chromium to 73.0.3683.79. #17383
Updated Chromium to 73.0.3683.84. #17452"
810,"Release Notes for v4.1.1
Fixes

Added a check for invalid menu index to prevent out-of-range crashes on insertion. #17461
Fixed an issue where Notification objects constructed in the main process would randomly not be shown to the user. #17483
Fixed crash when nativeImage.createFromBuffer() is called with invalid buffer. #17373
","Release Notes for v4.1.1
Fixes
Added a check for invalid menu index to prevent out-of-range crashes on insertion. #17461
Fixed an issue where Notification objects constructed in the main process would randomly not be shown to the user. #17483
Fixed crash when nativeImage.createFromBuffer() is called with invalid buffer. #17373"
811,"Release Notes for v4.1.0
Please note that there are no new features in this release.  Electron 4.1.0 was released to work around issues users were experiencing with node-pre-gyp based native modules and our ABI number in Electron >= 4.0.4.
Fixes

Fixed a crash when calling ECDH.setPrivateKey(). #17297
TouchBarSegmentedControl instances now correctly update when you update the segments array and remove label or image dynamically. #17335

Other Changes

Reset version to 4.1.0-beta.0 in preparation for 4.1.0 stable release. 84b01457
","Release Notes for v4.1.0
Please note that there are no new features in this release.  Electron 4.1.0 was released to work around issues users were experiencing with node-pre-gyp based native modules and our ABI number in Electron >= 4.0.4.
Fixes
Fixed a crash when calling ECDH.setPrivateKey(). #17297
TouchBarSegmentedControl instances now correctly update when you update the segments array and remove label or image dynamically. #17335
Other Changes
Reset version to 4.1.0-beta.0 in preparation for 4.1.0 stable release. 84b01457"
812,"Bug Fixes/Changes
Security

Patched the FileReader vulnerability found in Google Chrome: https://electronjs.org/blog/filereader-fix
","Bug Fixes/Changes
Security
Patched the FileReader vulnerability found in Google Chrome: link"
813,"Bug Fixes/Changes
Security

Patched the FileReader vulnerability found in Google Chrome: https://electronjs.org/blog/filereader-fix
","Bug Fixes/Changes
Security
Patched the FileReader vulnerability found in Google Chrome: link"
814,"Release Notes for v4.0.8
Security

Patched the FileReader vulnerability found in Google Chrome: https://electronjs.org/blog/filereader-fix
","Release Notes for v4.0.8
Security
Patched the FileReader vulnerability found in Google Chrome: link"
815,"Security

Patched the FileReader vulnerability found in Google Chrome: https://electronjs.org/blog/filereader-fix

Bug Fixes/Changes


build: ensure index.json is actually valid JSON before uploading (backport: 2-0-x). #16748 


chore: disable get/setLoginItemSettings specs. #16842 

","Security
Patched the FileReader vulnerability found in Google Chrome: link
Bug Fixes/Changes
build: ensure index.json is actually valid JSON before uploading (backport: 2-0-x). #16748 
chore: disable get/setLoginItemSettings specs. #16842 "
816,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@5.0.0-beta.5.
# Release Notes for v5.0.0-beta.5
Fixes

Fixed 5.0.0-beta.1 menuitem crash on Windows and Linux. #17215
Fixed a bug when retrieving security scoped bookmarks in ShowOpenDialog and ShowSaveDialog. #17177

Other Changes

Updated Chromium to 73.0.3683.61. #17192

Documentation

Documentation changes: #17167
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@5.0.0-beta.5.
Release Notes for v5.0.0-beta.5
Fixes
Fixed 5.0.0-beta.1 menuitem crash on Windows and Linux. #17215
Fixed a bug when retrieving security scoped bookmarks in ShowOpenDialog and ShowSaveDialog. #17177
Other Changes
Updated Chromium to 73.0.3683.61. #17192
Documentation
Documentation changes: #17167"
817,"Release Notes for v4.0.7
Fixes

Fixed defaultId not taking affect when set to 0 and no ""cancel"" button was present on macOS. #17151
Fixed process.versions.chrome reporting the wrong patch version. #17218
Fixed webContents.print() not working correctly. #17116
Fixed a bug when retrieving security scoped bookmarks in ShowOpenDialog and ShowSaveDialog. #17176
","Release Notes for v4.0.7
Fixes
Fixed defaultId not taking affect when set to 0 and no ""cancel"" button was present on macOS. #17151
Fixed process.versions.chrome reporting the wrong patch version. #17218
Fixed webContents.print() not working correctly. #17116
Fixed a bug when retrieving security scoped bookmarks in ShowOpenDialog and ShowSaveDialog. #17176"
818,"Bug Fixes/Changes

fix: set cancelId to 1 when defaultId == 0 and no 'cancel' button. #17149 
","Bug Fixes/Changes
fix: set cancelId to 1 when defaultId == 0 and no 'cancel' button. #17149 "
819,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@5.0.0-beta.4.
# Release Notes for v5.0.0-beta.4
Fixes

Fixed defaultId not taking affect when set to 0 and no ""cancel"" button was present on macOS. #17150
Fixed webContents.print() not working correctly. #17117

Other Changes

Updated Chromium to 73.0.3683.41. #16980
Updated Chromium to 73.0.3683.49. #17094
Updated Chromium to 73.0.3683.54. #17147

Documentation

Documentation changes: #17118
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@5.0.0-beta.4.
Release Notes for v5.0.0-beta.4
Fixes
Fixed defaultId not taking affect when set to 0 and no ""cancel"" button was present on macOS. #17150
Fixed webContents.print() not working correctly. #17117
Other Changes
Updated Chromium to 73.0.3683.41. #16980
Updated Chromium to 73.0.3683.49. #17094
Updated Chromium to 73.0.3683.54. #17147
Documentation
Documentation changes: #17118"
820,"Release Notes for v4.0.6
Fixes

Fixed an issue on Windows 10 RS4 and later that was causing the virtual keyboard not to appear when focusing some input fields. #16944

Other Changes

Updated Chromium to 69.0.3497.128. #16636
","Release Notes for v4.0.6
Fixes
Fixed an issue on Windows 10 RS4 and later that was causing the virtual keyboard not to appear when focusing some input fields. #16944
Other Changes
Updated Chromium to 69.0.3497.128. #16636"
821,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@5.0.0-beta.3.
# Release Notes for v5.0.0-beta.3
Breaking Changes

Upgraded to Chromium 73.0.3683.27. #16975

Features

Added win.removeMenu() to remove application menus instead of using win.setMenu(null). #16657
Added caps lock and numlock as keyboard accelerator modifiers. #16725
Converted debugger.sendCommand() to return a Promise instead of taking a callback. #16931
Updated Menu.buildFromTemplate() to allow it to accept MenuItems in addition to plain objects. #16783

Fixes

Added a patch to fix incorrect enumeration and instantiation of Node.js ciphers in the Crypto module. #16909
Fixed Chromium sandbox v2 related crashes in MAS builds. #16969
Fixed crash when calling setProgressBar on macOS. #16728
Fixed issue whereby a user was not well informed when interacting with a menu submenu that did not have any visible MenuItems. #16848
Fixed memory leak when using webFrame and spell checker. #16851
Fixed submenus not responding to the visible: false MenuItem property. #16846
Fixed the enable property having no effect for top-level submenu MenuItems. #16858
Made getUserMedia APIs work again on C72+ (backport: 5-0-x). #16768

Other Changes

Added webFrame.setIsolatedWorldInfo API and deprecated related APIs. #16932
Deprecated ServiceWorker APIs on WebContents in preparation for their removal. #16732
No-notes. #16882, #16886
Updated Chromium to 72.0.3626.102. #16829
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@5.0.0-beta.3.
Release Notes for v5.0.0-beta.3
Breaking Changes
Upgraded to Chromium 73.0.3683.27. #16975
Features
Added win.removeMenu() to remove application menus instead of using win.setMenu(null). #16657
Added caps lock and numlock as keyboard accelerator modifiers. #16725
Converted debugger.sendCommand() to return a Promise instead of taking a callback. #16931
Updated Menu.buildFromTemplate() to allow it to accept MenuItems in addition to plain objects. #16783
Fixes
Added a patch to fix incorrect enumeration and instantiation of Node.js ciphers in the Crypto module. #16909
Fixed Chromium sandbox v2 related crashes in MAS builds. #16969
Fixed crash when calling setProgressBar on macOS. #16728
Fixed issue whereby a user was not well informed when interacting with a menu submenu that did not have any visible MenuItems. #16848
Fixed memory leak when using webFrame and spell checker. #16851
Fixed submenus not responding to the visible: false MenuItem property. #16846
Fixed the enable property having no effect for top-level submenu MenuItems. #16858
Made getUserMedia APIs work again on C72+ (backport: 5-0-x). #16768
Other Changes
Added webFrame.setIsolatedWorldInfo API and deprecated related APIs. #16932
Deprecated ServiceWorker APIs on WebContents in preparation for their removal. #16732
No-notes. #16882, #16886
Updated Chromium to 72.0.3626.102. #16829"
822,"Bug Fixes/Changes


fix: crash when calling setProgressBar on macOS (backport: 3-1-x). #16726 


build: ensure index.json is actually valid JSON before uploading (backport: 3-1-x). #16752 


chore: disable get/setLoginItemSettings specs. #16843 


build: ensure that the uploaded symbol path is correct for our symbol server. #16914 


chore: bump libcc (3-1-x). #16971 


Fix memory leak when using webFrame and spell checker (3-1-x). #16771 

","Bug Fixes/Changes
fix: crash when calling setProgressBar on macOS (backport: 3-1-x). #16726 
build: ensure index.json is actually valid JSON before uploading (backport: 3-1-x). #16752 
chore: disable get/setLoginItemSettings specs. #16843 
build: ensure that the uploaded symbol path is correct for our symbol server. #16914 
chore: bump libcc (3-1-x). #16971 
Fix memory leak when using webFrame and spell checker (3-1-x). #16771 "
823,"Release Notes for v4.0.5
Features

Allowed filtering of remote.getBuiltin(), remote.getCurrentWindow(), remote.getCurrentWebContents and <webview>.getWebContents(). #16688

Fixes

Added a patch to fix incorrect enumeration and instantiation of Node.js ciphers in the Crypto module. #16912
Electron no longer forwards IPC filtering events to app for dev-tools and extensions. #16716
Fixed a rare renderer hang in cc::ProxyMain::BeginMainFrame. #16946
Fixed an issue with promise methods not resolving correctly over ipc in the renderer process. #16654
Fixed broken save dialog on macOS for <a> downloads. #16647
Fixed crash when calling setProgressBar on macOS. #16727
Fixed issue whereby a user was not well informed when interacting with a menu submenu that did not have any visible MenuItems. #16847
Fixed memory leak when using webFrame and spell checker. #16772
Fixed submenus not responding to the visible: false MenuItem property. #16845
Fixed the enable property having no effect for top-level submenu MenuItems. #16857
","Release Notes for v4.0.5
Features
Allowed filtering of remote.getBuiltin(), remote.getCurrentWindow(), remote.getCurrentWebContents and .getWebContents(). #16688
Fixes
Added a patch to fix incorrect enumeration and instantiation of Node.js ciphers in the Crypto module. #16912
Electron no longer forwards IPC filtering events to app for dev-tools and extensions. #16716
Fixed a rare renderer hang in cc::ProxyMain::BeginMainFrame. #16946
Fixed an issue with promise methods not resolving correctly over ipc in the renderer process. #16654
Fixed broken save dialog on macOS for  downloads. #16647
Fixed crash when calling setProgressBar on macOS. #16727
Fixed issue whereby a user was not well informed when interacting with a menu submenu that did not have any visible MenuItems. #16847
Fixed memory leak when using webFrame and spell checker. #16772
Fixed submenus not responding to the visible: false MenuItem property. #16845
Fixed the enable property having no effect for top-level submenu MenuItems. #16857"
824,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@5.0.0-beta.2.
Generating release notes between v5.0.0-beta.1 and v5.0.0-beta.2 for version v5.0.0-beta.2
Release Notes for v5.0.0-beta.2
Features

Added ELECTRON_DISABLE_SANDBOX environment variable to make it easier to disable sandboxing in Docker-based Linux CI environments. #16662
Added Promise support for the Cookies API. #16702
Converted contentTracing.getCategories() to return a promise instead taking a callback. #16624
Converted contentTracing.startRecording() and contentTracing.stopRecording() to return a promise instead taking a callback. #16642

Fixes

Electron no longer forwards IPC filtering events to app for dev-tools and extensions. #16613
Fixed an issue where data streamed from registerStreamProtocol could be truncated before completion. #16553
Fixed and re-enabled osr after it was turned off following updates to Chromium 71/72. #16616
Fixed broken save dialog on macOS for <a> downloads. #16640
Fixed defunct processes after quitting. #16672
Fixed memory leak caused by webFrame.setSpellCheckProvider. #16525
Fixed session preload scripts not being executed in sandboxed renderers. #16578
Moved webFrame custom scheme APIs to browser process under protocol. #16625
Restored support for AES-CFB cipher, which was lost when switching from OpenSSL to BoringSSL. #16618
Restored support for RIPEMD160 digest, which was lost when switching from OpenSSL to BoringSSL. #16572

Documentation

Documentation changes: #16549, #16614, #16675
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@5.0.0-beta.2.
Generating release notes between v5.0.0-beta.1 and v5.0.0-beta.2 for version v5.0.0-beta.2
Release Notes for v5.0.0-beta.2
Features
Added ELECTRON_DISABLE_SANDBOX environment variable to make it easier to disable sandboxing in Docker-based Linux CI environments. #16662
Added Promise support for the Cookies API. #16702
Converted contentTracing.getCategories() to return a promise instead taking a callback. #16624
Converted contentTracing.startRecording() and contentTracing.stopRecording() to return a promise instead taking a callback. #16642
Fixes
Electron no longer forwards IPC filtering events to app for dev-tools and extensions. #16613
Fixed an issue where data streamed from registerStreamProtocol could be truncated before completion. #16553
Fixed and re-enabled osr after it was turned off following updates to Chromium 71/72. #16616
Fixed broken save dialog on macOS for  downloads. #16640
Fixed defunct processes after quitting. #16672
Fixed memory leak caused by webFrame.setSpellCheckProvider. #16525
Fixed session preload scripts not being executed in sandboxed renderers. #16578
Moved webFrame custom scheme APIs to browser process under protocol. #16625
Restored support for AES-CFB cipher, which was lost when switching from OpenSSL to BoringSSL. #16618
Restored support for RIPEMD160 digest, which was lost when switching from OpenSSL to BoringSSL. #16572
Documentation
Documentation changes: #16549, #16614, #16675"
825,"Release Notes for v4.0.4
Features

Added getProcessMemoryInfo API. #16591

Fixes

[security] Fixed vulnerability that allowed Node to be re-enabled in child Windows. blog post.
Change the NODE_MODULE_VERSION to 69. #16687
Restored support for AES-CFB cipher, which was lost when switching from OpenSSL to BoringSSL. #16617
Restored support for RIPEMD160 digest, which was lost when switching from OpenSSL to BoringSSL. #16574

Documentation

Documentation changes: #16548, #16674
","Release Notes for v4.0.4
Features
Added getProcessMemoryInfo API. #16591
Fixes
[security] Fixed vulnerability that allowed Node to be re-enabled in child Windows. blog post.
Change the NODE_MODULE_VERSION to 69. #16687
Restored support for AES-CFB cipher, which was lost when switching from OpenSSL to BoringSSL. #16617
Restored support for RIPEMD160 digest, which was lost when switching from OpenSSL to BoringSSL. #16574
Documentation
Documentation changes: #16548, #16674"
826,"Bug Fixes/Changes


[security] Fixed vulnerability that allowed Node to be re-enabled in child Windows. blog post.


feat: add registerAccelerator flag to allow menu items to optionally skip accelerator registration #15892 


fix: correctly destroy spellcheck client #16526 


fix: register accelerator if role has no registerAccelerator #16598 


fix: move open handling to web-contents.js #16628 


fix: return pointer instead of pointer's content #16641 

","Bug Fixes/Changes
[security] Fixed vulnerability that allowed Node to be re-enabled in child Windows. blog post.
feat: add registerAccelerator flag to allow menu items to optionally skip accelerator registration #15892 
fix: correctly destroy spellcheck client #16526 
fix: register accelerator if role has no registerAccelerator #16598 
fix: move open handling to web-contents.js #16628 
fix: return pointer instead of pointer's content #16641 "
827,"Bug Fixes/Changes


[security] Fixed vulnerability that allowed Node to be re-enabled in child Windows. blog post.


Added instructions to get Notifications working on Win 10 Update. #16325 


chore: fix tag cleanup. #16355 


fix: don't register some shortcuts without accessibility. #16378 


chore: backport cleanup changes to 3-0-x. #16419 


fix: move open handling to web-contents.js. #16637 

","Bug Fixes/Changes
[security] Fixed vulnerability that allowed Node to be re-enabled in child Windows. blog post.
Added instructions to get Notifications working on Win 10 Update. #16325 
chore: fix tag cleanup. #16355 
fix: don't register some shortcuts without accessibility. #16378 
chore: backport cleanup changes to 3-0-x. #16419 
fix: move open handling to web-contents.js. #16637 "
828,"Bug Fixes/Changes


[security] Fixed vulnerability that allowed Node to be re-enabled in child Windows. blog post.


chore: update release scripts for cleanup. #16136 


fix: move open handling to web-contents.js. #16630 

","Bug Fixes/Changes
[security] Fixed vulnerability that allowed Node to be re-enabled in child Windows. blog post.
chore: update release scripts for cleanup. #16136 
fix: move open handling to web-contents.js. #16630 "
829,"Release Notes for v4.0.3
Fixes

Fixed a memory leak in desktopCapturer.getSources('screen') on macOS. #16555
Fixed an issue where data streamed from registerStreamProtocol could be truncated before completion. #16540
Fixed extra closing parenthesis. #16528
Fixed memory leak caused by webFrame.setSpellCheckProvider. #16524

Other Changes

Fixed speechSynthesis / text-to-speech. #16437

Documentation

Documentation changes: #16487
","Release Notes for v4.0.3
Fixes
Fixed a memory leak in desktopCapturer.getSources('screen') on macOS. #16555
Fixed an issue where data streamed from registerStreamProtocol could be truncated before completion. #16540
Fixed extra closing parenthesis. #16528
Fixed memory leak caused by webFrame.setSpellCheckProvider. #16524
Other Changes
Fixed speechSynthesis / text-to-speech. #16437
Documentation
Documentation changes: #16487"
830,"Bug Fixes/Changes


chore: backport cleanup changes to 3-1-x. #16395 


chore: always try to nuke tags. #16452 


docs: fix web-request.md listener signatures in electron.d.ts. #16488 


chore: bump libcc (3-1-x). #16516 


fix: prevent double-destroy of window. #16512 

","Bug Fixes/Changes
chore: backport cleanup changes to 3-1-x. #16395 
chore: always try to nuke tags. #16452 
docs: fix web-request.md listener signatures in electron.d.ts. #16488 
chore: bump libcc (3-1-x). #16516 
fix: prevent double-destroy of window. #16512 "
831,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@5.0.0-beta.1.
Release Notes for v5.0.0-beta.1
Breaking Changes

Upgraded to Chromium 70.0.3538.79. #15405

Features

Added activate option to webContents.openDevTools. #13852
Added app.commandLine.hasSwitch() / app.commandLine.getSwitchValue(). #16282
Added fileMenu / viewMenu / appMenu roles. #16328
Added ipc-message and ipc-message-sync events to webContents. #16468
Added preload-error event to webContents emitted when preload script fails (parse error, unhandled exception, etc.). #16411
Added a way to query for system colors on MacOS via systemPreferences.getSystemColor(). #16248
Added about panel customization on linux. #15658
Added event and method to detect high contrast color schemes  One-line Change Summary Here. #15493
Added getMemoryFootprint API. #14847
Added macOS support for systemPreferences.getAccentColor(). #16251
Added macOS support to systemPreferences.getColor(). #16249
Added methods to DownloadItem that enable customization of the save dialog options during will-download events One-line Change Summary Here. #15497
Added response header support to protocol.registerFileProtocol to match protocol.registerStreamProtocol. #16098
Added support for DesktopCapturerSource.appIcon. 1f55f163
Added support for multiple browser views per BrowserWindow. #16148
Added support for running preload scripts and nodeIntegration in iframes. #16425
Allow for MacOS notifications to be immediately delivered. #16060
Allow numpad keys to be used as accelerators. #15689
Allow partial setting of window bounds with win.setBounds(). #15677
Allow registering of multiple globalShortcuts. #15542
Allowed filtering of remote.getBuiltin(), remote.getCurrentWindow(), remote.getCurrentWebContents and <webview>.getWebContents(). #16293
Converted zoomLevel() and zoomFactor() for webContents and <webview> to return a promise instead taking a callback. #16410
Deprecated modules internally using remote.require in sandboxed renderer context. #15145
Exposes an API to allow apps to determine their status as a trusted accessibility client. #16119
Feat: provide user system's region with app.getLocaleCountryCode(). #15035
Mixed-sandbox mode is now enabled by default. enableMixedSandbox and the --enable-mixed-sandbox command-line switch still exist for compatibility, but are deprecated and have no effect. #15894
Mixed-sandbox mode works on Linux. #15870
Promisifies app.getFileIcon. #15742
Promisify shell.openExternal() by splitting it into a sync and async method. #16176
Promisify win.capturePage(). #15743
The browser-backward and browser-forward app-command events events available in BrowserWindow now work on Linux. #15441
Unified behavior between the default app and packaged apps (application menu / window-all-closed handling). #16310
Updated SpellCheck API to support asynchronous results. #14032
Upgraded to Chromium 71.0.3578.98. #15966
WebContents.loadURL and loadFile now return a promise. #15855

Fixes

'win.setParentWindow(parent)' available also under Windows. #15775
Fixed a crash on Linux when starting a sandboxed renderer. The resourcesPath property is no longer available on process in sandboxed renderers. #15701
 Please add a one-line description for app developers to read in the release notes, or <code>no-notes</code> if no notes relevant to app developers. Examples and help on special cases: https://github.com/electron/clerk/blob/master/README.md#examples no-notes. #16260
Added --disable-color-correct-rendering switch. #15898
Allowed blocking of desktopCapturer.getSources() calls by handling the desktop-capturer-get-sources event. #15964
Be more lenient about whitespace in webview's ""webpreferences"" feature string. #15602
Correct windowMenu MenuItem role on MacOS. #15930
Disabled CORB checks when web security preference is disabled. #15737
Fix: hiddenInset titleBar console spam. #15576
Fix: make certain values on process read-only. #15628
Fix: move NativeWindow tracking to OSR WCV. #15585
Fixed <webview> not working with contextIsolation + sandbox. #16469
Fixed <webview> tag not working when using contextIsolation. #16067
Fixed windowmenu role not showing the window list on macOS. #16387
Fixed a bug that made all cookies non persistent.  One-line Change Summary Here. #15836
Fixed a bug where window.opener of a window created with window.open from a sandboxed renderer was null. #15821
Fixed a problem where the focus would move to the browser window after the user (SHIFT +) tabbed through all the elements in the page (#12919). #16042
Fixed an issue where on Linux, the setuid sandbox was incorrectly enabled when passing --enable-mixed-sandbox. #15722
Fixed an issue with promise methods not resolving correctly over ipc in the renderer process. #16433
Fixed bug that caused menu accelerators to stop working on some linux. #15094
Fixed child windows invisible if opened with window.open from BrowserView with nativeWindowOpen enabled. #12686
Fixed crash on exit when using BrowserView. #15541
Fixed default font fallback for non-latin scripts. #15486
Fixed incorrect display of 'zoom in' accelerator on mac. #15502
Fixed incorrect foreground color on GTK menubar. #15878
Fixed missing remote object error when calling remote function created in preload script. #15444
Fixed regression regarding localStorage quota not being bypassed. #15596
Fixed returning headers with multiple values for stream protocols. #14887
Fixed some accelerators having Shift appended to them twice  One-line Change Summary Here. #15400
Fixed support for precision trackpad/mouse scrolling on Windows. #15830
Fixed typo by changing ""masOS"" to ""macOS"". #15861
Implement proper Location object for BrowserWindowProxy. #15019
Support async child process methods without callback in asar. #15927

Other Changes

Removed potential double free when managing WebContents. #15280
Switch to V2 sandbox on mac. #15647
Improved tray icon context menu and menu bar accessibility. #15302
Added legacy callback function tests to prevent regressions as the promisification initiative continues. #16436
Don't expose NavigationController as an internal module. #15920
Fixed version bump script for first beta. 29e5195c
Merged code in brightray into atom. #15240
Missing process.getCreationTime() exposed in sandboxed renderers. #15824
Removed hardcoded Google API key. #15478
Removed support for deprecated construction of a TouchBar with an array of items, use an options object instead. #15650
Restore kill_win.cc dcheck. #15630
The default values of nodeIntegration and webviewTag are now false to improve security. #16235

Documentation

Documentation changes: #14024, #14768, #15196, #15507, #15551, #15888, #16086, #16129, #16186, #16482
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@5.0.0-beta.1.
Release Notes for v5.0.0-beta.1
Breaking Changes
Upgraded to Chromium 70.0.3538.79. #15405
Features
Added activate option to webContents.openDevTools. #13852
Added app.commandLine.hasSwitch() / app.commandLine.getSwitchValue(). #16282
Added fileMenu / viewMenu / appMenu roles. #16328
Added ipc-message and ipc-message-sync events to webContents. #16468
Added preload-error event to webContents emitted when preload script fails (parse error, unhandled exception, etc.). #16411
Added a way to query for system colors on MacOS via systemPreferences.getSystemColor(). #16248
Added about panel customization on linux. #15658
Added event and method to detect high contrast color schemes  One-line Change Summary Here. #15493
Added getMemoryFootprint API. #14847
Added macOS support for systemPreferences.getAccentColor(). #16251
Added macOS support to systemPreferences.getColor(). #16249
Added methods to DownloadItem that enable customization of the save dialog options during will-download events One-line Change Summary Here. #15497
Added response header support to protocol.registerFileProtocol to match protocol.registerStreamProtocol. #16098
Added support for DesktopCapturerSource.appIcon. 1f55f163
Added support for multiple browser views per BrowserWindow. #16148
Added support for running preload scripts and nodeIntegration in iframes. #16425
Allow for MacOS notifications to be immediately delivered. #16060
Allow numpad keys to be used as accelerators. #15689
Allow partial setting of window bounds with win.setBounds(). #15677
Allow registering of multiple globalShortcuts. #15542
Allowed filtering of remote.getBuiltin(), remote.getCurrentWindow(), remote.getCurrentWebContents and .getWebContents(). #16293
Converted zoomLevel() and zoomFactor() for webContents and  to return a promise instead taking a callback. #16410
Deprecated modules internally using remote.require in sandboxed renderer context. #15145
Exposes an API to allow apps to determine their status as a trusted accessibility client. #16119
Feat: provide user system's region with app.getLocaleCountryCode(). #15035
Mixed-sandbox mode is now enabled by default. enableMixedSandbox and the --enable-mixed-sandbox command-line switch still exist for compatibility, but are deprecated and have no effect. #15894
Mixed-sandbox mode works on Linux. #15870
Promisifies app.getFileIcon. #15742
Promisify shell.openExternal() by splitting it into a sync and async method. #16176
Promisify win.capturePage(). #15743
The browser-backward and browser-forward app-command events events available in BrowserWindow now work on Linux. #15441
Unified behavior between the default app and packaged apps (application menu / window-all-closed handling). #16310
Updated SpellCheck API to support asynchronous results. #14032
Upgraded to Chromium 71.0.3578.98. #15966
WebContents.loadURL and loadFile now return a promise. #15855
Fixes
'win.setParentWindow(parent)' available also under Windows. #15775
Fixed a crash on Linux when starting a sandboxed renderer. The resourcesPath property is no longer available on process in sandboxed renderers. #15701
 Please add a one-line description for app developers to read in the release notes, or module if no notes relevant to app developers. Examples and help on special cases: link no-notes. #16260
Added --disable-color-correct-rendering switch. #15898
Allowed blocking of desktopCapturer.getSources() calls by handling the desktop-capturer-get-sources event. #15964
Be more lenient about whitespace in webview's ""webpreferences"" feature string. #15602
Correct windowMenu MenuItem role on MacOS. #15930
Disabled CORB checks when web security preference is disabled. #15737
Fix: hiddenInset titleBar console spam. #15576
Fix: make certain values on process read-only. #15628
Fix: move NativeWindow tracking to OSR WCV. #15585
Fixed  not working with contextIsolation + sandbox. #16469
Fixed  tag not working when using contextIsolation. #16067
Fixed windowmenu role not showing the window list on macOS. #16387
Fixed a bug that made all cookies non persistent.  One-line Change Summary Here. #15836
Fixed a bug where window.opener of a window created with window.open from a sandboxed renderer was null. #15821
Fixed a problem where the focus would move to the browser window after the user (SHIFT +) tabbed through all the elements in the page (#12919). #16042
Fixed an issue where on Linux, the setuid sandbox was incorrectly enabled when passing --enable-mixed-sandbox. #15722
Fixed an issue with promise methods not resolving correctly over ipc in the renderer process. #16433
Fixed bug that caused menu accelerators to stop working on some linux. #15094
Fixed child windows invisible if opened with window.open from BrowserView with nativeWindowOpen enabled. #12686
Fixed crash on exit when using BrowserView. #15541
Fixed default font fallback for non-latin scripts. #15486
Fixed incorrect display of 'zoom in' accelerator on mac. #15502
Fixed incorrect foreground color on GTK menubar. #15878
Fixed missing remote object error when calling remote function created in preload script. #15444
Fixed regression regarding localStorage quota not being bypassed. #15596
Fixed returning headers with multiple values for stream protocols. #14887
Fixed some accelerators having Shift appended to them twice  One-line Change Summary Here. #15400
Fixed support for precision trackpad/mouse scrolling on Windows. #15830
Fixed typo by changing ""masOS"" to ""macOS"". #15861
Implement proper Location object for BrowserWindowProxy. #15019
Support async child process methods without callback in asar. #15927
Other Changes
Removed potential double free when managing WebContents. #15280
Switch to V2 sandbox on mac. #15647
Improved tray icon context menu and menu bar accessibility. #15302
Added legacy callback function tests to prevent regressions as the promisification initiative continues. #16436
Don't expose NavigationController as an internal module. #15920
Fixed version bump script for first beta. 29e5195c
Merged code in brightray into atom. #15240
Missing process.getCreationTime() exposed in sandboxed renderers. #15824
Removed hardcoded Google API key. #15478
Removed support for deprecated construction of a TouchBar with an array of items, use an options object instead. #15650
Restore kill_win.cc dcheck. #15630
The default values of nodeIntegration and webviewTag are now false to improve security. #16235
Documentation
Documentation changes: #14024, #14768, #15196, #15507, #15551, #15888, #16086, #16129, #16186, #16482"
832,"Release Notes for v4.0.2
Fixes

Changed the file dialog presented by inputs with the type file to use sheets on macOS instead of detached modals. #16340
Fixed shell.beep() on Ubuntu. #16357
Fixed an issue whereby registerAccelerator was being set to the registerAccelerator property of its role even when registerAccelerator was undefined. #16314
Fixed crash when closing popup windows. #16478
Fixed delivery of IPC events to renderer processes when both contextIsolation and sandbox are enabled. #16376

Documentation

Documentation changes: #16326
","Release Notes for v4.0.2
Fixes
Changed the file dialog presented by inputs with the type file to use sheets on macOS instead of detached modals. #16340
Fixed shell.beep() on Ubuntu. #16357
Fixed an issue whereby registerAccelerator was being set to the registerAccelerator property of its role even when registerAccelerator was undefined. #16314
Fixed crash when closing popup windows. #16478
Fixed delivery of IPC events to renderer processes when both contextIsolation and sandbox are enabled. #16376
Documentation
Documentation changes: #16326"
833,"Bug Fixes/Changes


Add instructions to get Notifications working on Win 10 Update. #16324 


fix: properly determine if WebContents is offscreen in WebContentsDelegate (backport: 3-1-x). #16341 


chore: bump libcc (3-1-x). #16331 


backport: fix:menubar item fgcolor (3-1-x). #16222 


chore: fix tag cleanup. #16354 


test: allow retries for flaky mas loginitem specs. #16358 


fix: don't register some shortcuts without accessibility. #16276 

","Bug Fixes/Changes
Add instructions to get Notifications working on Win 10 Update. #16324 
fix: properly determine if WebContents is offscreen in WebContentsDelegate (backport: 3-1-x). #16341 
chore: bump libcc (3-1-x). #16331 
backport: fix:menubar item fgcolor (3-1-x). #16222 
chore: fix tag cleanup. #16354 
test: allow retries for flaky mas loginitem specs. #16358 
fix: don't register some shortcuts without accessibility. #16276 "
834,"Bug Fixes/Changes


docs: Update reference to xcode 8.3.3 (backport: 3-1-x). #16271 


chore: add additional logging for release upload failures (3-1-x). #16277 

","Bug Fixes/Changes
docs: Update reference to xcode 8.3.3 (backport: 3-1-x). #16271 
chore: add additional logging for release upload failures (3-1-x). #16277 "
835,"Release Notes for 4.0.1
Fixes

Allow passing a trace config as options to a ""contentTracing.startRecording"" call. #16158
Fixed crash on macOS when using globalShortcut for media keys when accessibility access is not granted. #16262
Throw an error if app.setAccessibilitySupportEnabled() is called before the ready event is emitted. #16268
Fixed incorrect foreground color on GTK menubar. #16223
","Release Notes for 4.0.1
Fixes
Allow passing a trace config as options to a ""contentTracing.startRecording"" call. #16158
Fixed crash on macOS when using globalShortcut for media keys when accessibility access is not granted. #16262
Throw an error if app.setAccessibilitySupportEnabled() is called before the ready event is emitted. #16268
Fixed incorrect foreground color on GTK menubar. #16223"
836,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@3.1.0-beta.5.
## Bug Fixes/Changes 


chore: release.id => release.data.id. #16134 


fix: extending tracing startRecording API to take a full tracing config. #16159 


fix: ensure that file descriptors 0/1/2 are opened at startup (backport: 3-0-x) (backport: 3-1-x). #16167 


fix: UAF with http auth preferences (3-1-x). #16140 

","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@3.1.0-beta.5.
Bug Fixes/Changes
chore: release.id => release.data.id. #16134 
fix: extending tracing startRecording API to take a full tracing config. #16159 
fix: ensure that file descriptors 0/1/2 are opened at startup (backport: 3-0-x) (backport: 3-1-x). #16167 
fix: UAF with http auth preferences (3-1-x). #16140 "
837,"Bug Fixes/Changes


chore: release.id => release.data.id. #16133 


fix: extending tracing startRecording API to take a full tracing config. #16157 


chore: bump libcc (3-0-x). #16245 


backport: fix:menubar item fgcolor (3-0-x). #16221 


docs: Update reference to xcode 8.3.3 (backport: 3-0-x). #16270 


chore: add additional logging for release upload failures (3-0-x). #16278 

","Bug Fixes/Changes
chore: release.id => release.data.id. #16133 
fix: extending tracing startRecording API to take a full tracing config. #16157 
chore: bump libcc (3-0-x). #16245 
backport: fix:menubar item fgcolor (3-0-x). #16221 
docs: Update reference to xcode 8.3.3 (backport: 3-0-x). #16270 
chore: add additional logging for release upload failures (3-0-x). #16278 "
838,"Release Notes for v4.0.0
Breaking Changes

Upgraded to Chromium 69.0.3497.106 and Node 10.11.0. #13756, #14964, #14972
Changed to the new single instance API. #12782, #14518
Bumped minimum supported macOS version to 10.10. #15357

Features

Added ""will-move"" event to the BrowserWindow. #14283
Added BrowserWindow.setWindowButtonVisibility(). a42ca9ee
Added Version key to Electron Framework Mac bundle's Info.plist. #14296
Added systemPreferences APIs to help apps respect Mojave dark mode settings. #14755
Added webPreferences.enableRemoteModule option allowing to disable the remote module to increase sandbox security. #15222
Added getNormalBounds() API for the BrowserWindow class to fetch window bounds while minimized. #13290
Added will-redirect event on webContents to capture, handle and prevent redirects during navigations. #13866
Added an option to MenuItem that makes it possible to skip accelerator registration. #15840
Added app.enableSandbox(). #14999
Added creationTime method to process. #13542
Added event.senderId property to IPCs sent via ipcRenderer.sendTo. #14395
Added getUploadProgress API to the net module. #13783
Added isCurrentlyAudible() to WebContents. #13614
location url added to ""Node.js Integration with Remote Content"" warning. #13973
Added media access APIs for macOS Mojave. #15948
Added always-on-top-change event. #14951
Added query, search and hash options to webContents.loadFile. #14515
Added process.takeHeapSnapshot() and webContents.takeHeapSnapshot(). #14456
Added screen reader support for Win32 toast notifications. #13834
Added session.setPermissionCheckHandler(). #13925
Added will-resize event to TopLevelWindow. #13649
Added workingDirectory to shell.openExternal() options. #15065
Added app.showAboutPanel() on macOS. #15680
Added app.getGPUInfo(). #13486
Added --disable-color-correct-rendering switch. #16020
Allow partial setting of window bounds. #15699
Added win.setShape() API to TopLevelWindow. #13789
Allow window above full screen windows on macOS. #14122
Allow filtering of remote.require() / remote.getGlobal() requests by handling remote-require / remote-get-global events. #15562
Expose WebContents#setBackgroundThrottling. #15623
Point based API's now automatically round incoming x and y values. #14604
Expose several process object APIs to sandboxed renderers. #13505
Added simplified Mojave dark mode APIs. #14895
Support chrome:// URLs in default_app. #13575
Enable use of NODE_OPTIONS env var. #15259
Added a mediaType property to media permission requests to distinguish between video and audio requests. #14600
menu.popup() options are now optional. #13977

Fixes

Several process APIs were returning proxied values instead of simple ones. #13905
Preload scripts could not be loaded with CSP enabled. #13032
Correctly remove DOM storage limits. #15688
Correctly mark crashReporter companyName as required. #14132
Debugger command callbacks now run with null as the error when no error has occurred. #14814
CORB checks are now disabled when web security preference is disabled. #15801
OSR windows now respects display scale factor. #15865
Prevent bluetooth device list from growing without bound. #15866
Security warnings now correctly show in sandboxed renderers. #14869
Fixed a crash on exit when using BrowserView. #15640
Fixed a crash when using stream protocols. #15210
Fixed shift-based accelerators not rendering correctly. #14966, #15401
Fixed too-thin font rendering in macOS Mojave. #15007
Fixed occasional freeze when navigating webview. #14487
Honor properties.showHiddenFiles in dialog.showOpenDialog() on Linux. #15506
Fixed incorrect display of 'zoom in' accelerator on mac. #15626
Speech synthesis APIs now return OS voices on Windows. #14070
Fixed CSP warnings in the default app. #13437
Fixed notifications when running in a Windows Store environment. #13258
On MacOS, closing notifications will now trigger the close Event. #13306
Menu.buildFromTemplate() no longer creates empty MenuItems on falsey values. #13992
Fixed multiple printing bugs. #15976
Updated fs.stat/fs.statSync for new options param. #15350
Partially fix the memory leak when opening child windows with nativeWindowOpen. #15190

Other Changes

Changed build system from GYP to GN. #14097
require('electron') performance improvements #14633
Deprecated findInPage optionswordStart and medialCapitalAsWordStart. #15735
Deprecated default webPreferences values for nodeIntegration, contextIsolation and webviewTag. #15045
Fixed Widevine CDM not loading content. #14423
Print a deprecation warning when the child windows opened with nativeWindowOpen  option have node integration. #15193
Removed experimentalCanvasFeatures property. #13684
Removed legacy helpers (Electron Helper EH/NP). #14436
Removed private webContents.getId() API. #13674
On Windows, functions available on Windows 7+ are now statically linked. #13578
Removed unneeded pyproto files from release archives. #15398
In Electron 5.0, the default for nodeIntegration will change from true to false. Electron 4 will log a warning in the renderer when nodeIntegration is enabled by default. #16004
Public IPC channel (ipcRenderer / ipcMain) is no longer used to implement Electron internals (remote module for example). #13940
Removed WTL dependency on Windows. #13463
Remove use of some deprecated Chromium APIs. #14420, #13312, #13436, #13425, #13703
V8 embedder version string changed from -node.N to -electron.N. #15120
Implement ipcRenderer.sendTo in native code for better performance. #14285
Other small IPC efficiency improvements. #14302, #14286
Warn if you try to use Electron APIs from a non-electron environment. #15977
Move pepper flash behind feature flag. #13322

Dependencies

Updated serve version from 6.5.3 to 6.5.8. #14159
Upgraded sqlite from 3.24 to 3.26. #16073

Documentation

Documentation changes: #12783, #13121, #13167, #13365, #13366, #13403, #13451, #13482, #13629, #13656, #13660, #13663, #13664, #13672, #13798, #13801, #13835, #13841, #13882, #13884, #13891, #13903, #13935, #13999, #14018, #14125, #14185, #14198, #14309, #14369, #14396, #14401, #14413, #14465, #14562, #14649, #14715, #14762, #14903, #15307, #15419, #15462, #15500, #15526, #15548, #15685, #15751, #15771, 379998e2, 4f8acb0c, 58e8c025, 9e85bdb0, e0735baf, #14823, #14526, 57d365a9, f788143c, #14455,  #14731, #14301
","Release Notes for v4.0.0
Breaking Changes
Upgraded to Chromium 69.0.3497.106 and Node 10.11.0. #13756, #14964, #14972
Changed to the new single instance API. #12782, #14518
Bumped minimum supported macOS version to 10.10. #15357
Features
Added ""will-move"" event to the BrowserWindow. #14283
Added BrowserWindow.setWindowButtonVisibility(). a42ca9ee
Added Version key to Electron Framework Mac bundle's Info.plist. #14296
Added systemPreferences APIs to help apps respect Mojave dark mode settings. #14755
Added webPreferences.enableRemoteModule option allowing to disable the remote module to increase sandbox security. #15222
Added getNormalBounds() API for the BrowserWindow class to fetch window bounds while minimized. #13290
Added will-redirect event on webContents to capture, handle and prevent redirects during navigations. #13866
Added an option to MenuItem that makes it possible to skip accelerator registration. #15840
Added app.enableSandbox(). #14999
Added creationTime method to process. #13542
Added event.senderId property to IPCs sent via ipcRenderer.sendTo. #14395
Added getUploadProgress API to the net module. #13783
Added isCurrentlyAudible() to WebContents. #13614
location url added to ""Node.js Integration with Remote Content"" warning. #13973
Added media access APIs for macOS Mojave. #15948
Added always-on-top-change event. #14951
Added query, search and hash options to webContents.loadFile. #14515
Added process.takeHeapSnapshot() and webContents.takeHeapSnapshot(). #14456
Added screen reader support for Win32 toast notifications. #13834
Added session.setPermissionCheckHandler(). #13925
Added will-resize event to TopLevelWindow. #13649
Added workingDirectory to shell.openExternal() options. #15065
Added app.showAboutPanel() on macOS. #15680
Added app.getGPUInfo(). #13486
Added --disable-color-correct-rendering switch. #16020
Allow partial setting of window bounds. #15699
Added win.setShape() API to TopLevelWindow. #13789
Allow window above full screen windows on macOS. #14122
Allow filtering of remote.require() / remote.getGlobal() requests by handling remote-require / remote-get-global events. #15562
Expose WebContents#setBackgroundThrottling. #15623
Point based API's now automatically round incoming x and y values. #14604
Expose several process object APIs to sandboxed renderers. #13505
Added simplified Mojave dark mode APIs. #14895
Support chrome:// URLs in default_app. #13575
Enable use of NODE_OPTIONS env var. #15259
Added a mediaType property to media permission requests to distinguish between video and audio requests. #14600
menu.popup() options are now optional. #13977
Fixes
Several process APIs were returning proxied values instead of simple ones. #13905
Preload scripts could not be loaded with CSP enabled. #13032
Correctly remove DOM storage limits. #15688
Correctly mark crashReporter companyName as required. #14132
Debugger command callbacks now run with null as the error when no error has occurred. #14814
CORB checks are now disabled when web security preference is disabled. #15801
OSR windows now respects display scale factor. #15865
Prevent bluetooth device list from growing without bound. #15866
Security warnings now correctly show in sandboxed renderers. #14869
Fixed a crash on exit when using BrowserView. #15640
Fixed a crash when using stream protocols. #15210
Fixed shift-based accelerators not rendering correctly. #14966, #15401
Fixed too-thin font rendering in macOS Mojave. #15007
Fixed occasional freeze when navigating webview. #14487
Honor properties.showHiddenFiles in dialog.showOpenDialog() on Linux. #15506
Fixed incorrect display of 'zoom in' accelerator on mac. #15626
Speech synthesis APIs now return OS voices on Windows. #14070
Fixed CSP warnings in the default app. #13437
Fixed notifications when running in a Windows Store environment. #13258
On MacOS, closing notifications will now trigger the close Event. #13306
Menu.buildFromTemplate() no longer creates empty MenuItems on falsey values. #13992
Fixed multiple printing bugs. #15976
Updated fs.stat/fs.statSync for new options param. #15350
Partially fix the memory leak when opening child windows with nativeWindowOpen. #15190
Other Changes
Changed build system from GYP to GN. #14097
require('electron') performance improvements #14633
Deprecated findInPage optionswordStart and medialCapitalAsWordStart. #15735
Deprecated default webPreferences values for nodeIntegration, contextIsolation and webviewTag. #15045
Fixed Widevine CDM not loading content. #14423
Print a deprecation warning when the child windows opened with nativeWindowOpen  option have node integration. #15193
Removed experimentalCanvasFeatures property. #13684
Removed legacy helpers (Electron Helper EH/NP). #14436
Removed private webContents.getId() API. #13674
On Windows, functions available on Windows 7+ are now statically linked. #13578
Removed unneeded pyproto files from release archives. #15398
In Electron 5.0, the default for nodeIntegration will change from true to false. Electron 4 will log a warning in the renderer when nodeIntegration is enabled by default. #16004
Public IPC channel (ipcRenderer / ipcMain) is no longer used to implement Electron internals (remote module for example). #13940
Removed WTL dependency on Windows. #13463
Remove use of some deprecated Chromium APIs. #14420, #13312, #13436, #13425, #13703
V8 embedder version string changed from -node.N to -electron.N. #15120
Implement ipcRenderer.sendTo in native code for better performance. #14285
Other small IPC efficiency improvements. #14302, #14286
Warn if you try to use Electron APIs from a non-electron environment. #15977
Move pepper flash behind feature flag. #13322
Dependencies
Updated serve version from 6.5.3 to 6.5.8. #14159
Upgraded sqlite from 3.24 to 3.26. #16073
Documentation
Documentation changes: #12783, #13121, #13167, #13365, #13366, #13403, #13451, #13482, #13629, #13656, #13660, #13663, #13664, #13672, #13798, #13801, #13835, #13841, #13882, #13884, #13891, #13903, #13935, #13999, #14018, #14125, #14185, #14198, #14309, #14369, #14396, #14401, #14413, #14465, #14562, #14649, #14715, #14762, #14903, #15307, #15419, #15462, #15500, #15526, #15548, #15685, #15751, #15771, 379998e2, 4f8acb0c, 58e8c025, 9e85bdb0, e0735baf, #14823, #14526, 57d365a9, f788143c, #14455,  #14731, #14301"
839,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@4.0.0-beta.11.
# Release Notes for v4.0.0-beta.11
Fixes

Fixed Electron not starting in development from the CLI. #16118
Fixed <webview> tag not working when using contextIsolation. #16069
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@4.0.0-beta.11.
Release Notes for v4.0.0-beta.11
Fixes
Fixed Electron not starting in development from the CLI. #16118
Fixed  tag not working when using contextIsolation. #16069"
840,"Bug Fixes/Changes


chore: bump libcc submodule to daf9bdcdfdfd6bad258b5e1e48b2e17d06c1a987. #16112 


chore: add additional logging for release upload failures. #16127 

","Bug Fixes/Changes
chore: bump libcc submodule to daf9bdcdfdfd6bad258b5e1e48b2e17d06c1a987. #16112 
chore: add additional logging for release upload failures. #16127 "
841,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@4.0.0-beta.10.
# Release Notes for v4.0.0-beta.10
Fixes

Added --disable-color-correct-rendering switch. #16020
Fixed 4-0-x regression that broke original-fs. #16038
Fixed BrowserWindow.getNativeWindowHandle() returning invalid handle. #16022
Fixed cpu pegging on single-core windows. #16012
Fixed crash with mouse wheel event monitor on app quit in macOS. #16063
Fixed several bugs related to printing. #15976

Other Changes

In Electron 5.0, the default for nodeIntegration will change from true to false. Electron 4 will log a warning in the renderer when nodeIntegration is enabled by default. #16004
Upgraded sqlite from 3.24 to 3.26. #16073
Warn if you try to use Electron APIs from a non-electron environment. #15977
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@4.0.0-beta.10.
Release Notes for v4.0.0-beta.10
Fixes
Added --disable-color-correct-rendering switch. #16020
Fixed 4-0-x regression that broke original-fs. #16038
Fixed BrowserWindow.getNativeWindowHandle() returning invalid handle. #16022
Fixed cpu pegging on single-core windows. #16012
Fixed crash with mouse wheel event monitor on app quit in macOS. #16063
Fixed several bugs related to printing. #15976
Other Changes
In Electron 5.0, the default for nodeIntegration will change from true to false. Electron 4 will log a warning in the renderer when nodeIntegration is enabled by default. #16004
Upgraded sqlite from 3.24 to 3.26. #16073
Warn if you try to use Electron APIs from a non-electron environment. #15977"
842,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@3.1.0-beta.4.
## Bug Fixes/Changes 


chore: bump libcc (3-1-x). #16076 


chore: correctly capitalize releaseID. #16107 

","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@3.1.0-beta.4.
Bug Fixes/Changes
chore: bump libcc (3-1-x). #16076 
chore: correctly capitalize releaseID. #16107 "
843,"Bug Fixes/Changes


fix: allow 2 threads for CreateIoCompletionPort on single-core to prevent busy looping (backport: 3-0-x). #16082 


chore: bump libcc (3-0-x). #16077 


chore: correctly capitalize releaseID. #16108 

","Bug Fixes/Changes
fix: allow 2 threads for CreateIoCompletionPort on single-core to prevent busy looping (backport: 3-0-x). #16082 
chore: bump libcc (3-0-x). #16077 
chore: correctly capitalize releaseID. #16108 "
844,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@3.1.0-beta.3.
## Bug Fixes/Changes 


chore: expose release id for use in cleanup. #15904 


fix: incorrect view ordering for customButtonsOnHover. #15997 


fix: do not print an error for an expected condition (#15991). #15998 


fix: allow 2 threads for CreateIoCompletionPort on single-core to prevent busy looping (backport: 3-1-x). #16011 


chore: bump libcc (3-1-x). #16033 


fix: remove event monitor before destroying window. #16056 

","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@3.1.0-beta.3.
Bug Fixes/Changes
chore: expose release id for use in cleanup. #15904 
fix: incorrect view ordering for customButtonsOnHover. #15997 
fix: do not print an error for an expected condition (#15991). #15998 
fix: allow 2 threads for CreateIoCompletionPort on single-core to prevent busy looping (backport: 3-1-x). #16011 
chore: bump libcc (3-1-x). #16033 
fix: remove event monitor before destroying window. #16056 "
845,"Bug Fixes/Changes


chore: bump libcc (3-0-x). #16021 


chore: bump libcc (3-0-x). #16041 


fix: remove event monitor before destroying window (3-0-x). #16055 

","Bug Fixes/Changes
chore: bump libcc (3-0-x). #16021 
chore: bump libcc (3-0-x). #16041 
fix: remove event monitor before destroying window (3-0-x). #16055 "
846,"Bug Fixes/Changes


fix: schedule a paint after browserview's background is set. #15796 


fix: enable webview in sandbox renderer (#13435). #13555 


fix: allow 2 threads for CreateIoCompletionPort on single-core to prevent busy looping (#15975). #16013 


chore: bump libcc submodule to ebe1313308aa95c71f23b2725efd091b8ece05ff. #15946 


chore: bump libcc submodule. #16035 

","Bug Fixes/Changes
fix: schedule a paint after browserview's background is set. #15796 
fix: enable webview in sandbox renderer (#13435). #13555 
fix: allow 2 threads for CreateIoCompletionPort on single-core to prevent busy looping (#15975). #16013 
chore: bump libcc submodule to ebe1313308aa95c71f23b2725efd091b8ece05ff. #15946 
chore: bump libcc submodule. #16035 "
847,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@4.0.0-beta.9.
## Bug Fixes/Changes 


chore: expose release id for use in cleanup. #15903 


chore: improve granular release cleanup (backport: 4-0-x). #15905 


chore: allow bumping stable => beta. #15908 


test: fix a bunch of flaky tests related to emittedOnce (backport: 4-0-x). #15891 


fix: backport patch that ensures that cookie store is always created (backport: 4-0-x). #15890 


ci: Renable ffmpeg and mksnapshot tests on Azure Devops. #15902 


fix: prevent bluetooth device list from growing without bound (backport: 4-0-x). #15866 


chore: remove unused module. #15924 


security: only handle related IPCs when  tag is enabled (backport: 4-0-x). #15931 


feat: add media access APIs for macOS Mojave. #15948 


fix: use appropriate site instance for cross-site nav's (backport: 4-0-x). #15969 


fix: move NativeWindow tracking to OSR WCV (#15585). #15970 


Revert ""fix: use appropriate site instance for cross-site nav's (backport: 4-0-x) (#15969)"". #15995 


fix: incorrect view ordering for customButtonsOnHover (backport: 4-0-x). #15996 


fix: do not print an error for an expected condition (#15991). #16000 

","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@4.0.0-beta.9.
Bug Fixes/Changes
chore: expose release id for use in cleanup. #15903 
chore: improve granular release cleanup (backport: 4-0-x). #15905 
chore: allow bumping stable => beta. #15908 
test: fix a bunch of flaky tests related to emittedOnce (backport: 4-0-x). #15891 
fix: backport patch that ensures that cookie store is always created (backport: 4-0-x). #15890 
ci: Renable ffmpeg and mksnapshot tests on Azure Devops. #15902 
fix: prevent bluetooth device list from growing without bound (backport: 4-0-x). #15866 
chore: remove unused module. #15924 
security: only handle related IPCs when  tag is enabled (backport: 4-0-x). #15931 
feat: add media access APIs for macOS Mojave. #15948 
fix: use appropriate site instance for cross-site nav's (backport: 4-0-x). #15969 
fix: move NativeWindow tracking to OSR WCV (#15585). #15970 
Revert ""fix: use appropriate site instance for cross-site nav's (backport: 4-0-x) (#15969)"". #15995 
fix: incorrect view ordering for customButtonsOnHover (backport: 4-0-x). #15996 
fix: do not print an error for an expected condition (#15991). #16000 "
848,"Bug Fixes/Changes


fix: no longer require submenu for services menuitem. #15672 


fix: ensure that file descriptors 0/1/2 are opened at startup (backport: 3-0-x). #15781 


chore: bump libcc (3-0-x). #15850 


ci: clean git before building. #15889 


fix: schedule a paint after browserview's background is set. #15798 


chore: expose release id for use in cleanup (#15845). #15949 


fix: incorrect view ordering for customButtonsOnHover (#15564). #16002 


fix: do not print an error for an expected condition (#15991). #15999 

","Bug Fixes/Changes
fix: no longer require submenu for services menuitem. #15672 
fix: ensure that file descriptors 0/1/2 are opened at startup (backport: 3-0-x). #15781 
chore: bump libcc (3-0-x). #15850 
ci: clean git before building. #15889 
fix: schedule a paint after browserview's background is set. #15798 
chore: expose release id for use in cleanup (#15845). #15949 
fix: incorrect view ordering for customButtonsOnHover (#15564). #16002 
fix: do not print an error for an expected condition (#15991). #15999 "
849,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@3.1.0-beta.2.
## Bug Fixes/Changes 

chore: Fix issue where cookies would be lost on upgrade from Electron 2.x #15937 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@3.1.0-beta.2.
Bug Fixes/Changes
chore: Fix issue where cookies would be lost on upgrade from Electron 2.x #15937 "
850,"Release Notes for v3.1.0-beta.1
Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@3.1.0-beta.1.
Notable Changes
It's worth highlighting why this release is 3.1.0-beta.1 instead of 3.0.x despite the only changes being bugfixes. Fixing #15813 involved changing Electron to use Chromium's Mojo proxy resolver, which was a large enough change to warrant a new beta cycle instead of releasing straight to stable. However this is the only large change relative to 3.0.x, so it's likely that the 3.1.0 beta cycle will be brief.
Fixes

Switch to mojo proxy resolver. #15813
Fixed issue where getNativeWindowHandle() would return an empty buffer on macOS. #15803
Fixed unnecessary submenu required for services menuitem. #15672
","Release Notes for v3.1.0-beta.1
Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@3.1.0-beta.1.
Notable Changes
It's worth highlighting why this release is 3.1.0-beta.1 instead of 3.0.x despite the only changes being bugfixes. Fixing #15813 involved changing Electron to use Chromium's Mojo proxy resolver, which was a large enough change to warrant a new beta cycle instead of releasing straight to stable. However this is the only large change relative to 3.0.x, so it's likely that the 3.1.0 beta cycle will be brief.
Fixes
Switch to mojo proxy resolver. #15813
Fixed issue where getNativeWindowHandle() would return an empty buffer on macOS. #15803
Fixed unnecessary submenu required for services menuitem. #15672"
851,"Release Notes for v4.0.0-beta.8
This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@4.0.0-beta.8.
Features

Added an option to MenuItem that makes it possible to skip accelerator registration. #15840
Allow partial setting of window bounds. #15699
Expose showAboutPanel for MacOS. #15680
Feat: expose WebContents#setBackgroundThrottling. #15623

Fixes

Bypass DOM storage quota. #15688
Disabled CORB checks when web security preference is disabled. #15801
Fix: osr windows now respect display scale factor. #15865
Fix: package swiftshader binaries. #15745
Fixed a freeze when using the GPU in some configurations. #15763
Fixed an issue that prevented setting the BrowserView's background color after the first paint. #15797
Fixed an issue with --remote-debugging-port not showing the devtools discovery page. #15852
Fixed bug that caused menu accelerators to stop working on some linux. #15662
Fixed checkboxes not rendering in mojave. #15869
Fixed crash on exit when using BrowserView. #15640
Fixed incorrect display of 'zoom in' accelerator on mac. #15626
Fixed issue where getNativeWindowHandle() would return an empty buffer on macOS. #15644
Fixed issue with incorrectly packaged Login Helper app, which caused issues with signing apps. #15615
Fixed loading chrome devtools extensions with sandbox enabled. #15794
Fixed some accelerators having Shift appended to them twice. #15401
Fixed support for precision trackpad/mouse scrolling on Windows. #15831
Fixed window close crash that was happening on macos 10.9. #15670
Restore missing .lproj directories in macOS bundle. #15769

Other Changes

Added v8_context_snapshot_generator to mksnapshot.zip. #15608
Deprecated findInPage optionswordStart and medialCapitalAsWordStart. #15735
No longer require submenu for services menuitem. #15671

Documentation

Documentation changes: #15685, #15751, #15771
","Release Notes for v4.0.0-beta.8
This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@4.0.0-beta.8.
Features
Added an option to MenuItem that makes it possible to skip accelerator registration. #15840
Allow partial setting of window bounds. #15699
Expose showAboutPanel for MacOS. #15680
Feat: expose WebContents#setBackgroundThrottling. #15623
Fixes
Bypass DOM storage quota. #15688
Disabled CORB checks when web security preference is disabled. #15801
Fix: osr windows now respect display scale factor. #15865
Fix: package swiftshader binaries. #15745
Fixed a freeze when using the GPU in some configurations. #15763
Fixed an issue that prevented setting the BrowserView's background color after the first paint. #15797
Fixed an issue with --remote-debugging-port not showing the devtools discovery page. #15852
Fixed bug that caused menu accelerators to stop working on some linux. #15662
Fixed checkboxes not rendering in mojave. #15869
Fixed crash on exit when using BrowserView. #15640
Fixed incorrect display of 'zoom in' accelerator on mac. #15626
Fixed issue where getNativeWindowHandle() would return an empty buffer on macOS. #15644
Fixed issue with incorrectly packaged Login Helper app, which caused issues with signing apps. #15615
Fixed loading chrome devtools extensions with sandbox enabled. #15794
Fixed some accelerators having Shift appended to them twice. #15401
Fixed support for precision trackpad/mouse scrolling on Windows. #15831
Fixed window close crash that was happening on macos 10.9. #15670
Restore missing .lproj directories in macOS bundle. #15769
Other Changes
Added v8_context_snapshot_generator to mksnapshot.zip. #15608
Deprecated findInPage optionswordStart and medialCapitalAsWordStart. #15735
No longer require submenu for services menuitem. #15671
Documentation
Documentation changes: #15685, #15751, #15771"
852,"Release Notes for v3.0.10
Fixes

Bypass DOM storage quota. electron/libchromiumcontent:702

Other Changes

Added needed .bin files for v8_context_generator. #15713

Documentation

Documentation changes: #15754
","Release Notes for v3.0.10
Fixes
Bypass DOM storage quota. electron/libchromiumcontent:702
Other Changes
Added needed .bin files for v8_context_generator. #15713
Documentation
Documentation changes: #15754"
853,"Fixes

Fixed Electron not being visible when launching in development mode on node v11. #15513
Fixed window close crash that was happening on macos 10.9. #15729

Documentation

Documentation changes: #15524
","Fixes
Fixed Electron not being visible when launching in development mode on node v11. #15513
Fixed window close crash that was happening on macos 10.9. #15729
Documentation
Documentation changes: #15524"
854,"Fixes

Backport: SQLitePersistentCookieStore: recover from uniqueness violat…. electron/libchromiumcontent:700
Empty menu now clears the menu on linux like before. #15605
Fixed window close crash that was happening on macos 10.9. #15669

Other Changes

Include bin files needed for v8_context_snapshot_generator. electron/libchromiumcontent:701
","Fixes
Backport: SQLitePersistentCookieStore: recover from uniqueness violat…. electron/libchromiumcontent:700
Empty menu now clears the menu on linux like before. #15605
Fixed window close crash that was happening on macos 10.9. #15669
Other Changes
Include bin files needed for v8_context_snapshot_generator. electron/libchromiumcontent:701"
855,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@4.0.0-beta.7.
## Bug Fixes/Changes 


Fix missing remote object error when calling remote function created in preload script (4-0-x). #15446 


fix: explicitly set windowsHide to the old node default. #15511 


chore: publish to the latest tag correctly when releasing old versions. #15515 


docs: add Size as an option for pageSize in docs for printToPDF. #15526 


fix: use sendToAll method correctly in chrome-api. #15529 


docs: fix the ""second-instance"" event handler signature in the docs. #15548 


fix: honor properties.showHiddenFiles on Linux. #15506 


build: make pyyaml an optional dependency. #15566 


feat: add remote.require() / remote.getGlobal() filtering. #15562 


build: store the patches config in a json file. #15572 


fix: use NSURL path for receipt url. #15574 

","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@4.0.0-beta.7.
Bug Fixes/Changes
Fix missing remote object error when calling remote function created in preload script (4-0-x). #15446 
fix: explicitly set windowsHide to the old node default. #15511 
chore: publish to the latest tag correctly when releasing old versions. #15515 
docs: add Size as an option for pageSize in docs for printToPDF. #15526 
fix: use sendToAll method correctly in chrome-api. #15529 
docs: fix the ""second-instance"" event handler signature in the docs. #15548 
fix: honor properties.showHiddenFiles on Linux. #15506 
build: make pyyaml an optional dependency. #15566 
feat: add remote.require() / remote.getGlobal() filtering. #15562 
build: store the patches config in a json file. #15572 
fix: use NSURL path for receipt url. #15574 "
856,"Bug Fixes/Changes


Fix missing remote object error when calling remote function created in preload script (3-0-x). #15445 


fix: explicitly set windowsHide to the old node default. #15514 


chore: publish to the latest tag correctly when releasing old versions (#15515). #15520 


docs: add Size as an option for pageSize in docs for printToPDF. #15525 


docs: fix the ""second-instance"" event handler signature in the docs. #15546 


fix: Empty menu case. #15553 


build: add v8_context_generator to mksnapshot zip (3-0-x). #15505 


fix: use NSURL path for receipt url. #15573 

","Bug Fixes/Changes
Fix missing remote object error when calling remote function created in preload script (3-0-x). #15445 
fix: explicitly set windowsHide to the old node default. #15514 
chore: publish to the latest tag correctly when releasing old versions (#15515). #15520 
docs: add Size as an option for pageSize in docs for printToPDF. #15525 
docs: fix the ""second-instance"" event handler signature in the docs. #15546 
fix: Empty menu case. #15553 
build: add v8_context_generator to mksnapshot zip (3-0-x). #15505 
fix: use NSURL path for receipt url. #15573 "
857,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@4.0.0-beta.6.
Release Notes for v4.0.0-beta.6
Fixes

Fix: set NSResizableWindowMask at init time. #15383
Fixed crash when showing source folder in devtools. #15397
Fixed default trash impl on linux to use gio. #15422
Fixed incorrect display of some GtkMessageDialog icons. #15343
Fixed potential crash when closing windows on macOS 10.10 and10.11. #15337
Updated fs.stat/fs.statSync for new options param. #15350

Other Changes

Dropped support for macOS 10.9 (OS X Mavericks). #15440
Removed unneeded pyproto files from release archives. #15398

Documentation

Documentation changes: #15419, #15462, #15500
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@4.0.0-beta.6.
Release Notes for v4.0.0-beta.6
Fixes
Fix: set NSResizableWindowMask at init time. #15383
Fixed crash when showing source folder in devtools. #15397
Fixed default trash impl on linux to use gio. #15422
Fixed incorrect display of some GtkMessageDialog icons. #15343
Fixed potential crash when closing windows on macOS 10.10 and10.11. #15337
Updated fs.stat/fs.statSync for new options param. #15350
Other Changes
Dropped support for macOS 10.9 (OS X Mavericks). #15440
Removed unneeded pyproto files from release archives. #15398
Documentation
Documentation changes: #15419, #15462, #15500"
858,"Release Notes for v3.0.7
Fixes

Fix: set NSResizableWindowMask at init time. #15384
Fixed Ctrl+Alt+<x> accelerators on Windows. #15378
Fixed crash when showing source folder in devtools. #15396
Fixed default trash impl on linux to use gio. #15421
Fixed printing related bugs on Windows. #15402
Fixed some accelerators having Shift appended to them twice. electron/libchromiumcontent:698

Other Changes

Include v8 context snapshot generator. electron/libchromiumcontent:697

Documentation

Documentation changes: #15418, #15461, #15499 
","Release Notes for v3.0.7
Fixes
Fix: set NSResizableWindowMask at init time. #15384
Fixed Ctrl+Alt+ accelerators on Windows. #15378
Fixed crash when showing source folder in devtools. #15396
Fixed default trash impl on linux to use gio. #15421
Fixed printing related bugs on Windows. #15402
Fixed some accelerators having Shift appended to them twice. electron/libchromiumcontent:698
Other Changes
Include v8 context snapshot generator. electron/libchromiumcontent:697
Documentation
Documentation changes: #15418, #15461, #15499 "
859,"Release Notes for v2.0.13
Fixes

Fix: correct reversed logic in BrowserWindow#setEnabled on macOS. #15322
Fixed incorrect display of some GtkMessageDialog icons. #15341

Documentation

Documentation changes: #15306, #15460, #15501
","Release Notes for v2.0.13
Fixes
Fix: correct reversed logic in BrowserWindow#setEnabled on macOS. #15322
Fixed incorrect display of some GtkMessageDialog icons. #15341
Documentation
Documentation changes: #15306, #15460, #15501"
860,"Bug Fixes/Changes


fix: loading of devtools extensions on startup (backport: 3-0-x). #15264 


fix: Convert to lower case in upload symbols script (backport: 3-0-x). #15261 


fix: make release-artifact-cleanup executable (backport: 3-0-x). #15272 


chore: make macOS release builds higher priority to skip the queue. #15284 


fix: trim app name and productName. #15286 


test: asyncawaitify one of sandbox related tests (backport: 3-0-x). #15281 


spec: increase MAS timeout for login items. #15296 


fix: correctly enable and disable windows on Windows and Linux (backport: 3-0-x). #15255 


fix: ability to fetch separators by id. #15299 


docs: we don't emit an event object for session-created. #15308 


fix: correct reversed logic in NativeWindowMac::SetEnabled. #15324 


fix: Native window close crash. #15338 


fix: honor dialog.showMessageBox()'s Icon argument on Linux. #15342 


chore: bump libcc (3-0-x). #15374 

","Bug Fixes/Changes
fix: loading of devtools extensions on startup (backport: 3-0-x). #15264 
fix: Convert to lower case in upload symbols script (backport: 3-0-x). #15261 
fix: make release-artifact-cleanup executable (backport: 3-0-x). #15272 
chore: make macOS release builds higher priority to skip the queue. #15284 
fix: trim app name and productName. #15286 
test: asyncawaitify one of sandbox related tests (backport: 3-0-x). #15281 
spec: increase MAS timeout for login items. #15296 
fix: correctly enable and disable windows on Windows and Linux (backport: 3-0-x). #15255 
fix: ability to fetch separators by id. #15299 
docs: we don't emit an event object for session-created. #15308 
fix: correct reversed logic in NativeWindowMac::SetEnabled. #15324 
fix: Native window close crash. #15338 
fix: honor dialog.showMessageBox()'s Icon argument on Linux. #15342 
chore: bump libcc (3-0-x). #15374 "
861,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@4.0.0-beta.5.
## Bug Fixes/Changes 


fix: correctly enable and disable windows on Windows and Linux (backport: 4-0-x). #15256 


fix: enable NODE_OPTIONS env var. #15259 


fix: Convert to lower case in upload symbols script (backport: 4-0-x). #15262 


fix: make release-artifact-cleanup executable (backport: 4-0-x). #15273 


chore: make macOS release builds higher priority to skip the queue. #15285 


fix: trim app name and productName. #15287 


test: asyncawaitify one of sandbox related tests. #15278 


fix: loading of devtools extensions on startup (backport: 4-0-x). #15265 


fix: convert wstring to string on windows in node_bindings. #15268 


chore: roll node (backport: 4-0-x). #15260 


spec: increase MAS timeout for login items. #15297 


build: document env vars expected to be set for the CI configs (backport: 4-0-x). #15301 


fix: ability to fetch separators by id. #15294 


docs: we don't emit an event object for session-created. #15307 


feat: security: add an option to disable the remote module. #15222 


fix: correct reversed logic in NativeWindowMac::SetEnabled. #15325 

","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@4.0.0-beta.5.
Bug Fixes/Changes
fix: correctly enable and disable windows on Windows and Linux (backport: 4-0-x). #15256 
fix: enable NODE_OPTIONS env var. #15259 
fix: Convert to lower case in upload symbols script (backport: 4-0-x). #15262 
fix: make release-artifact-cleanup executable (backport: 4-0-x). #15273 
chore: make macOS release builds higher priority to skip the queue. #15285 
fix: trim app name and productName. #15287 
test: asyncawaitify one of sandbox related tests. #15278 
fix: loading of devtools extensions on startup (backport: 4-0-x). #15265 
fix: convert wstring to string on windows in node_bindings. #15268 
chore: roll node (backport: 4-0-x). #15260 
spec: increase MAS timeout for login items. #15297 
build: document env vars expected to be set for the CI configs (backport: 4-0-x). #15301 
fix: ability to fetch separators by id. #15294 
docs: we don't emit an event object for session-created. #15307 
feat: security: add an option to disable the remote module. #15222 
fix: correct reversed logic in NativeWindowMac::SetEnabled. #15325 "
862,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@4.0.0-beta.4.
## Bug Fixes/Changes 


fix: natively implement LoginItem functions (backport: 4-0-x). #15127 


chore: mark browserview api as not-experimental. #15134 


ci: Fix timeout when generating breakpad symbols (backport: 4-0-x). #15136 


split out login item tests. #15142 


fix: Revert ""fix: export zlib symbols (#15103)"". #15141 


fix: Memory > Profiles > Load in DevTools. #15156 


fix: preserve background color through reload (backport: 4-0-x). #15162 


fix: add microtask runner and fix promise test (backport: 4-0-x). #15171 


fix: do not enable node integration in child window if not enabled. #15190 


docs: deprecation warning for using nativeWindowOpen with nodeIntegration (4-0-x). #15193 


add width to webview iframe. #15205 


fix: don't call ReadRawDataComplete if it's not necessary. #15210 


fix: small refactoring regressions (backport: 4-0-x). #15224 


ci: make sure git directories don't have unneeded files in them. #15248 


fix: allow renaming electron.exe (backport: 4-0-x). #15249 

","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@4.0.0-beta.4.
Bug Fixes/Changes
fix: natively implement LoginItem functions (backport: 4-0-x). #15127 
chore: mark browserview api as not-experimental. #15134 
ci: Fix timeout when generating breakpad symbols (backport: 4-0-x). #15136 
split out login item tests. #15142 
fix: Revert ""fix: export zlib symbols (#15103)"". #15141 
fix: Memory > Profiles > Load in DevTools. #15156 
fix: preserve background color through reload (backport: 4-0-x). #15162 
fix: add microtask runner and fix promise test (backport: 4-0-x). #15171 
fix: do not enable node integration in child window if not enabled. #15190 
docs: deprecation warning for using nativeWindowOpen with nodeIntegration (4-0-x). #15193 
add width to webview iframe. #15205 
fix: don't call ReadRawDataComplete if it's not necessary. #15210 
fix: small refactoring regressions (backport: 4-0-x). #15224 
ci: make sure git directories don't have unneeded files in them. #15248 
fix: allow renaming electron.exe (backport: 4-0-x). #15249 "
863,"Bug Fixes/Changes


[SECURITY] chore: bump libcc, handle type confusion in Promise.all (3-0-x). #15201 


fix: check dbus response for null before use. #15033 


docs: app.getLoginItemStatus -> app.getLoginItemSettings. #15113 


spec: re-enable app.getAppMetric API. #15123 


fix: natively implement LoginItems methods. #15128 


fix: Memory > Profiles > Load in DevTools. #15155 


fix: preserve background color through reload (backport: 3-0-x). #15175 


fix: simpleFullscreen window should be on top of other OS X menu bars. #15183 


fix: Menu accelerators not working Unity. #15181 


fix: do not enable node integration in child window if not enabled. #15108 


chore: warn memory leak when using nativeWindowOpen with nodeIntegration (3-0-x). #15192 


add width to webview iframe. #15204 

","Bug Fixes/Changes
[SECURITY] chore: bump libcc, handle type confusion in Promise.all (3-0-x). #15201 
fix: check dbus response for null before use. #15033 
docs: app.getLoginItemStatus -> app.getLoginItemSettings. #15113 
spec: re-enable app.getAppMetric API. #15123 
fix: natively implement LoginItems methods. #15128 
fix: Memory > Profiles > Load in DevTools. #15155 
fix: preserve background color through reload (backport: 3-0-x). #15175 
fix: simpleFullscreen window should be on top of other OS X menu bars. #15183 
fix: Menu accelerators not working Unity. #15181 
fix: do not enable node integration in child window if not enabled. #15108 
chore: warn memory leak when using nativeWindowOpen with nodeIntegration (3-0-x). #15192 
add width to webview iframe. #15204 "
864,"Bug Fixes/Changes


[SECURITY] chore: bump libcc, handle type confusion in Promise.all (2-0-x). #15200


fix: use white background for non-OSR renderer by default. #14933 


fix: support ASAR in fs.copyFile. #14952 


Backport of #14648. #15025 


fix: SetSize() should honor minSize (#13994). #15052 


Check dbus response for null before using. #15088 


fix: Memory > Profiles > Load in DevTools. #15154 


fix: natively implement LoginItem functions (backport: 2-0-x). #15139 


fix: simpleFullscreen window should be on top of other OS X menu bars. #15182 


fix: do not enable node integration in child window if not enabled. #15109 


chore: warn memory leak when using nativeWindowOpen with nodeIntegration (2-0-x). #15207 

","Bug Fixes/Changes
[SECURITY] chore: bump libcc, handle type confusion in Promise.all (2-0-x). #15200
fix: use white background for non-OSR renderer by default. #14933 
fix: support ASAR in fs.copyFile. #14952 
Backport of #14648. #15025 
fix: SetSize() should honor minSize (#13994). #15052 
Check dbus response for null before using. #15088 
fix: Memory > Profiles > Load in DevTools. #15154 
fix: natively implement LoginItem functions (backport: 2-0-x). #15139 
fix: simpleFullscreen window should be on top of other OS X menu bars. #15182 
fix: do not enable node integration in child window if not enabled. #15109 
chore: warn memory leak when using nativeWindowOpen with nodeIntegration (2-0-x). #15207 "
865,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@4.0.0-beta.3.
## Bug Fixes/Changes 


fix: Remove statSyncNoException for good (backport: 4-0-x). #15110 


docs: app.getLoginItemStatus -> app.getLoginItemSettings. #15114 


chore: roll node. #15115 


fix: export zlib symbols. #15118 


build: add v8_embedder_string to build args. #15120 

","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@4.0.0-beta.3.
Bug Fixes/Changes
fix: Remove statSyncNoException for good (backport: 4-0-x). #15110 
docs: app.getLoginItemStatus -> app.getLoginItemSettings. #15114 
chore: roll node. #15115 
fix: export zlib symbols. #15118 
build: add v8_embedder_string to build args. #15120 "
866,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@4.0.0-beta.2.
## Bug Fixes/Changes 


Revert ""FIXME: disable isCurrentlyAudible test to unblock merge"". #15083 


build: add ""apply_patches"" flag to gclient. #15082 


fix: update and enable osr (backport: 4-0-x). #15084 

","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@4.0.0-beta.2.
Bug Fixes/Changes
Revert ""FIXME: disable isCurrentlyAudible test to unblock merge"". #15083 
build: add ""apply_patches"" flag to gclient. #15082 
fix: update and enable osr (backport: 4-0-x). #15084 "
867,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@4.0.0-beta.1.
## Bug Fixes/Changes 


fix: close patch_file before deleting it. #15055 


feat: add workingDirectory option to shell.openExternal(). #15065 


ci: strip linux binaries for nightly release builds. #15063 


fix: update node for patch that allows native modules built on < node 10. #15073 

","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@4.0.0-beta.1.
Bug Fixes/Changes
fix: close patch_file before deleting it. #15055 
feat: add workingDirectory option to shell.openExternal(). #15065 
ci: strip linux binaries for nightly release builds. #15063 
fix: update node for patch that allows native modules built on < node 10. #15073 "
868,"Bug Fixes/Changes


fix: setMaximizable to be true if window is resizable & maximizable. #15032 


fix: Check minSize constraints before resizing (backport: 3-0-x). #15038 


fix: Lifetime of auth_info_ in login handler. #15044 


fix: handle shortcuts by default if no WebPreferences object exists. #15066 


fix: update accelerator patch to handle recent chromium fixes. #15072 

","Bug Fixes/Changes
fix: setMaximizable to be true if window is resizable & maximizable. #15032 
fix: Check minSize constraints before resizing (backport: 3-0-x). #15038 
fix: Lifetime of auth_info_ in login handler. #15044 
fix: handle shortcuts by default if no WebPreferences object exists. #15066 
fix: update accelerator patch to handle recent chromium fixes. #15072 "
869,"Bug Fixes/Changes


fix: enable key accelerator flags for Windows and Linux (backport: 3-0-x). #14859 


fix: roll node deps for fs event patch. #14864 


fix: Disable new fade animation for BrowserViews. #14913 


fix: check guest view's devtools window size. #14928 


fix: use white background for non-OSR renderer by default. #14934 


fix: support ASAR in fs.copyFile. #14953 

","Bug Fixes/Changes
fix: enable key accelerator flags for Windows and Linux (backport: 3-0-x). #14859 
fix: roll node deps for fs event patch. #14864 
fix: Disable new fade animation for BrowserViews. #14913 
fix: check guest view's devtools window size. #14928 
fix: use white background for non-OSR renderer by default. #14934 
fix: support ASAR in fs.copyFile. #14953 "
870,"Bug Fixes/Changes


fix: quit properly in simpleFullScreen mode. #14671 


ci: Skip VSTS testing builds on older branches. #14668 


chore: fix await in cleanup script. #14694 


docs: specify BrowserWindow features passable to window.open. #14701 


docs: clarify allowable background colors for BrowserWindow transparency (backport: 2-0-x). #14780 


fix: inconsistent titleBarStyle on transparent fullscreen. #14792 


docs: correct key code reqs for accel doc. #14825 


fix: get background color from GtkMenuBar#menubar. #14813 


fix: enable key accelerator flags for Windows and Linux (backport: 2-0-x). #14858 


chore: bump libcc submodule to e271f9ba29ff73167bbc4a7e125657caccb32960. #14839 

","Bug Fixes/Changes
fix: quit properly in simpleFullScreen mode. #14671 
ci: Skip VSTS testing builds on older branches. #14668 
chore: fix await in cleanup script. #14694 
docs: specify BrowserWindow features passable to window.open. #14701 
docs: clarify allowable background colors for BrowserWindow transparency (backport: 2-0-x). #14780 
fix: inconsistent titleBarStyle on transparent fullscreen. #14792 
docs: correct key code reqs for accel doc. #14825 
fix: get background color from GtkMenuBar#menubar. #14813 
fix: enable key accelerator flags for Windows and Linux (backport: 2-0-x). #14858 
chore: bump libcc submodule to e271f9ba29ff73167bbc4a7e125657caccb32960. #14839 "
871,"Bug Fixes/Changes

docs: correct key code reqs for accel doc. #14824 
","Bug Fixes/Changes
docs: correct key code reqs for accel doc. #14824 "
872,"Bug Fixes/Changes


chore: fix await in cleanup script (backport: 3-0-x). #14696 


docs: specify BrowserWindow features passable to window.open. #14702 


Fix second-instance handler signature. #14748 


fix: do not set layer explicitly for frameless window. #14736 


fix: actually return appmetrics. #14750 


fix: initialize tracing controller before starting platform (3-0-x). #14503 


docs: clarify allowable background colors for BrowserWindow transparency (backport: 3-0-x). #14781 


fix: inconsistent titleBarStyle on transparent fullscreen. #14790 


chore: bump libcc (3-0-x). #14809 


fix: get background color from GtkMenuBar#menubar. #14812 

","Bug Fixes/Changes
chore: fix await in cleanup script (backport: 3-0-x). #14696 
docs: specify BrowserWindow features passable to window.open. #14702 
Fix second-instance handler signature. #14748 
fix: do not set layer explicitly for frameless window. #14736 
fix: actually return appmetrics. #14750 
fix: initialize tracing controller before starting platform (3-0-x). #14503 
docs: clarify allowable background colors for BrowserWindow transparency (backport: 3-0-x). #14781 
fix: inconsistent titleBarStyle on transparent fullscreen. #14790 
chore: bump libcc (3-0-x). #14809 
fix: get background color from GtkMenuBar#menubar. #14812 "
873,"Bug Fixes/Changes


ci: don't run gn debug build on older branches. #14584 


ci: don't run gn debug build on older branches (2-0-x). #14593 


chore: bump libcc submodule to cbd04c0dccc7655cd42f02baee3a622d5170ac08. #14654 


chore: dont pass --stable through to bump-version.py. #14667 

","Bug Fixes/Changes
ci: don't run gn debug build on older branches. #14584 
ci: don't run gn debug build on older branches (2-0-x). #14593 
chore: bump libcc submodule to cbd04c0dccc7655cd42f02baee3a622d5170ac08. #14654 
chore: dont pass --stable through to bump-version.py. #14667 "
874,"v3.0.0 would not have been possible without our App Feedback Program partners, who provided early testing and feedback during the beta cycle. Thanks to Atlassian, Atom, Microsoft Teams, Oculus, OpenFin, Slack, Symphony, VS Code, and other program members for their work. If you'd like to participate in future betas, please mail us at info@electronjs.org.
Changes / New Features
Major bumps to several important parts of Electron's toolchain, including Chrome v66.0.3359.181, Node v10.2.0, and V8 v6.6.346.23.

[#12656] feat: app.isPackaged
[#12652] feat: app.whenReady()
[#13183] feat: process.getHeapStatistics()
[#12485] feat: win.moveTop() to move window z-order to top
[#13110] feat: TextField and Button APIs
[#13068] feat: netLog API for dynamic logging control
[#13539] feat: enable webview in sandbox renderer
[#14118] feat: fs.readSync now works with massive files
[#14031] feat: node fs wrappers to make fs.realpathSync.native and fs.realpath.native available

Breaking API changes

[#12362] feat: updates to menu item order control
[#13050] refactor: removed documented deprecated APIs
See docs for more details
[#12477] refactor: removed did-get-response-details and did-get-redirect-request events
[#12655] feat: default to disabling navigating on drag/drop
[#12993] feat: Node v4.x or greater is required use the electron npm module
[#12008 #12140 #12503 #12514 #12584 #12596 #12637 #12660 #12696 #12716 #12750 #12787 #12858] refactor: NativeWindow
[#11968] refactor: menu.popup()
[#8953] feat: no longer use JSON to send the result of ipcRenderer.sendSync
[#13039] feat: default to ignore command line arguments following a URL
[#12004] refactor: rename api::Window to api::BrowserWindow
[#12679] feat: visual zoom now turned off by default
[#12408] refactor: rename app-command media-play_pause to media-play-pause

macOS

[#12093] feat: workspace notifications support
[#12496] feat: tray.setIgnoreDoubleClickEvents(ignore) to ignore tray double click events. 
[#12281] feat: mouse forward functionality on macOS
[#12714] feat: screen lock / unlock events

Windows

[#12879] feat: added DIP to/from screen coordinate conversions

Nota Bene: Switching to an older version of Electron after running this version will require you to clear out your user data directory to avoid older versions crashing. You can get the user data directory by running console.log(app.getPath(""userData"")) or see docs for more details.
Bug Fixes

[#13397] fix: issue with fs.statSyncNoException throwing exceptions
[#13476, #13452] fix: crash when loading site with jquery
[#14092] fix: crash in net::ClientSocketHandle destructor
[#14453] fix: notify focus change right away rather not on next tick

MacOS

[#13220] fix: issue allowing bundles to be selected in <input file=""type""> open file dialog
[#12404] fix: issue blocking main process when using async dialog
[#12043] fix: context menu click callback
[#12527] fix: event leak on reuse of touchbar item
[#12352] fix: tray title crash
[#12327] fix: non-draggable regions
[#12809] fix: to prevent menu update while it's open
[#13162] fix: tray icon bounds not allowing negative values
[#13085] fix: tray title not inverting when highlighted
[#12196] fix: Mac build when enable_run_as_node==false
[#12157] fix: additional issues on frameless windows with vibrancy
[#13326] fix: to set mac protocol to none after calling app.removeAsDefaultProtocolClient
[#13530] fix: incorrect usage of private APIs in MAS build
[#13517] fix: tray.setContextMenu crash
[#14205] fix: pressing escape on a dialog now closes it even if defaultId is set

Linux

[#12507] fix: BrowserWindow.focus() for offscreen windows

Other Notes

PDF Viewer is not working in 3.0.0 but will be return soon
TextField and Button APIs are experimental and are therefore off by default
They can be enabled with the enable_view_api build flag
","v3.0.0 would not have been possible without our App Feedback Program partners, who provided early testing and feedback during the beta cycle. Thanks to Atlassian, Atom, Microsoft Teams, Oculus, OpenFin, Slack, Symphony, VS Code, and other program members for their work. If you'd like to participate in future betas, please mail us at info@electronjs.org.
Changes / New Features
Major bumps to several important parts of Electron's toolchain, including Chrome v66.0.3359.181, Node v10.2.0, and V8 v6.6.346.23.
[#12656] feat: app.isPackaged
[#12652] feat: app.whenReady()
[#13183] feat: process.getHeapStatistics()
[#12485] feat: win.moveTop() to move window z-order to top
[#13110] feat: TextField and Button APIs
[#13068] feat: netLog API for dynamic logging control
[#13539] feat: enable webview in sandbox renderer
[#14118] feat: fs.readSync now works with massive files
[#14031] feat: node fs wrappers to make fs.realpathSync.native and fs.realpath.native available
Breaking API changes
[#12362] feat: updates to menu item order control
[#13050] refactor: removed documented deprecated APIs
See docs for more details
[#12477] refactor: removed did-get-response-details and did-get-redirect-request events
[#12655] feat: default to disabling navigating on drag/drop
[#12993] feat: Node v4.x or greater is required use the electron npm module
[#12008 #12140 #12503 #12514 #12584 #12596 #12637 #12660 #12696 #12716 #12750 #12787 #12858] refactor: NativeWindow
[#11968] refactor: menu.popup()
[#8953] feat: no longer use JSON to send the result of ipcRenderer.sendSync
[#13039] feat: default to ignore command line arguments following a URL
[#12004] refactor: rename api::Window to api::BrowserWindow
[#12679] feat: visual zoom now turned off by default
[#12408] refactor: rename app-command media-play_pause to media-play-pause
macOS
[#12093] feat: workspace notifications support
[#12496] feat: tray.setIgnoreDoubleClickEvents(ignore) to ignore tray double click events. 
[#12281] feat: mouse forward functionality on macOS
[#12714] feat: screen lock / unlock events
Windows
[#12879] feat: added DIP to/from screen coordinate conversions
Nota Bene: Switching to an older version of Electron after running this version will require you to clear out your user data directory to avoid older versions crashing. You can get the user data directory by running console.log(app.getPath(""userData"")) or see docs for more details.
Bug Fixes
[#13397] fix: issue with fs.statSyncNoException throwing exceptions
[#13476, #13452] fix: crash when loading site with jquery
[#14092] fix: crash in net::ClientSocketHandle destructor
[#14453] fix: notify focus change right away rather not on next tick
MacOS
[#13220] fix: issue allowing bundles to be selected in  open file dialog
[#12404] fix: issue blocking main process when using async dialog
[#12043] fix: context menu click callback
[#12527] fix: event leak on reuse of touchbar item
[#12352] fix: tray title crash
[#12327] fix: non-draggable regions
[#12809] fix: to prevent menu update while it's open
[#13162] fix: tray icon bounds not allowing negative values
[#13085] fix: tray title not inverting when highlighted
[#12196] fix: Mac build when enable_run_as_node==false
[#12157] fix: additional issues on frameless windows with vibrancy
[#13326] fix: to set mac protocol to none after calling app.removeAsDefaultProtocolClient
[#13530] fix: incorrect usage of private APIs in MAS build
[#13517] fix: tray.setContextMenu crash
[#14205] fix: pressing escape on a dialog now closes it even if defaultId is set
Linux
[#12507] fix: BrowserWindow.focus() for offscreen windows
Other Notes
PDF Viewer is not working in 3.0.0 but will be return soon
TextField and Button APIs are experimental and are therefore off by default
They can be enabled with the enable_view_api build flag"
875,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@3.0.0-beta.13.
## Bug Fixes/Changes 


ci: don't run gn debug build on older branches. #14584 


fix: Windows Background color issue. #14592 


refactor: deprecation handling apis. #14615 


fix: quit properly in simpleFullScreen mode. #14646 

","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@3.0.0-beta.13.
Bug Fixes/Changes
ci: don't run gn debug build on older branches. #14584 
fix: Windows Background color issue. #14592 
refactor: deprecation handling apis. #14615 
fix: quit properly in simpleFullScreen mode. #14646 "
876,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@3.0.0-beta.12.
## Bug Fixes/Changes 


fix: don't terminate existing sessions when opening devtools. #14566 


fix: Invalidate weak ptrs before window Javascript object is destroyed (backport: 3-0-x). #14591 

","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@3.0.0-beta.12.
Bug Fixes/Changes
fix: don't terminate existing sessions when opening devtools. #14566 
fix: Invalidate weak ptrs before window Javascript object is destroyed (backport: 3-0-x). #14591 "
877,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@3.0.0-beta.11.
## Bug Fixes/Changes 


build: [gn] widevine cdm support behind flag (3-0-x). #14497 


chore: Revert ""fix: re-enable power monitor test (#14496)"". #14508 


fix: read ignoreMenuShortcuts per WebContents. #14538 


ci: Rename appveyor-override.yml to appveyor.yml (3-0-x). #14558 


fix: use render client id to track deleted render process hosts (backport: 3-0-x). #14557 


chore: make large beta numbers work when publishing. #14572 

","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@3.0.0-beta.11.
Bug Fixes/Changes
build: [gn] widevine cdm support behind flag (3-0-x). #14497 
chore: Revert ""fix: re-enable power monitor test (#14496)"". #14508 
fix: read ignoreMenuShortcuts per WebContents. #14538 
ci: Rename appveyor-override.yml to appveyor.yml (3-0-x). #14558 
fix: use render client id to track deleted render process hosts (backport: 3-0-x). #14557 
chore: make large beta numbers work when publishing. #14572 "
878,"## Bug Fixes/Changes 


[SECURITY] fix: dont parse arguments after a -- in the inspector (#14297). #14334 
  Additional Electron fix for CVE-2018-7160.  Credit to Ignacio Bonilla for reporting this issue


fix: do not bubble up resize event from webview. #14272 


deps: update node for two backports. #14298 


fix: issue 10962, crash when open devtool. #13808 


fix: don't crash on tray.setContextMenu(null). #14330 


fix: crash when tray is destroyed. #14366 


docs: added session-created event documentation (backport: 2-0-x). #14439 


chore: add release-artifact-cleanup script. #14448 


Fix documentation tyop. #14477 

","Bug Fixes/Changes
[SECURITY] fix: dont parse arguments after a -- in the inspector (#14297). #14334 
  Additional Electron fix for CVE-2018-7160.  Credit to Ignacio Bonilla for reporting this issue
fix: do not bubble up resize event from webview. #14272 
deps: update node for two backports. #14298 
fix: issue 10962, crash when open devtool. #13808 
fix: don't crash on tray.setContextMenu(null). #14330 
fix: crash when tray is destroyed. #14366 
docs: added session-created event documentation (backport: 2-0-x). #14439 
chore: add release-artifact-cleanup script. #14448 
Fix documentation tyop. #14477 "
879,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@3.0.0-beta.10.
## Bug Fixes/Changes 


docs: Specify VS 15.4.5 for 3-0-x. #14476 


backport debugger fix. #14481 


chore: bump libcc (3-0-x). #14482 


fix: don't use deprecated fstatNoException API. #14484 


Macos Window Title And Accessibility Focus Fix - Override accessibility method in atom_ns_window - Add title attribute in accessibilityAttributeValue. #14486 


fix: manually manage WebContents of webview when it is detached (3-0-x). #14488 


fix: notify focus change right away rather not on next tick. #14453 


fix: notify focus change right away rather not on next tick (3-0-x). #14494 


fix: re-enable power monitor test. #14496 

","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@3.0.0-beta.10.
Bug Fixes/Changes
docs: Specify VS 15.4.5 for 3-0-x. #14476 
backport debugger fix. #14481 
chore: bump libcc (3-0-x). #14482 
fix: don't use deprecated fstatNoException API. #14484 
Macos Window Title And Accessibility Focus Fix - Override accessibility method in atom_ns_window - Add title attribute in accessibilityAttributeValue. #14486 
fix: manually manage WebContents of webview when it is detached (3-0-x). #14488 
fix: notify focus change right away rather not on next tick. #14453 
fix: notify focus change right away rather not on next tick (3-0-x). #14494 
fix: re-enable power monitor test. #14496 "
880,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@3.0.0-beta.9.
## Bug Fixes/Changes 

deps: roll node to deprecate statsyncnoexception and lstatsyncnoexception. #14467 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@3.0.0-beta.9.
Bug Fixes/Changes
deps: roll node to deprecate statsyncnoexception and lstatsyncnoexception. #14467 "
881,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@3.0.0-beta.8.
## Bug Fixes/Changes 


[SECURITY] fix: dont parse arguments after a -- in the inspector. #14333 
  Additional Electron fix for CVE-2018-7160.  Credit to Ignacio Bonilla for reporting this issue


fix: opt into location services once device service has been started (backport: 3-0-x). #14289 


fix: issue 10962, crash when open devtool (backport: 3-0-x). #14303 


fix: don't expose view APIs when not enabled. #14321 


fix: don't crash on tray.setContextMenu(null). #14331 


fix: create persistent channel ID store when cookie store is persistent. #14358 


fix: crash when tray is destroyed. #14357 


fix: emit focus/blur events for webview (backport: 3-0-x). #14359 


fix: don't expose desktopCapturer in sandboxed renderers if the feature is disabled. #14345 


fix: use OS process handle to clear object registry. #14364 

","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@3.0.0-beta.8.
Bug Fixes/Changes
[SECURITY] fix: dont parse arguments after a -- in the inspector. #14333 
  Additional Electron fix for CVE-2018-7160.  Credit to Ignacio Bonilla for reporting this issue
fix: opt into location services once device service has been started (backport: 3-0-x). #14289 
fix: issue 10962, crash when open devtool (backport: 3-0-x). #14303 
fix: don't expose view APIs when not enabled. #14321 
fix: don't crash on tray.setContextMenu(null). #14331 
fix: create persistent channel ID store when cookie store is persistent. #14358 
fix: crash when tray is destroyed. #14357 
fix: emit focus/blur events for webview (backport: 3-0-x). #14359 
fix: don't expose desktopCapturer in sandboxed renderers if the feature is disabled. #14345 
fix: use OS process handle to clear object registry. #14364 "
882,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@3.0.0-beta.7.
## Bug Fixes/Changes 


[SECURITY] Fixed webPreferences inheritance issue. CVE-2018-15685


Added better logging around request failures for releasing. #14245 


Fixed crash in net::ClientSocketHandle destructor. #14092 

","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@3.0.0-beta.7.
Bug Fixes/Changes
[SECURITY] Fixed webPreferences inheritance issue. CVE-2018-15685
Added better logging around request failures for releasing. #14245 
Fixed crash in net::ClientSocketHandle destructor. #14092 "
883,"Bug Fixes / Changes

[SECURITY] Fixed webPreferences inheritance issue.  CVE-2018-15685
Fixed crash on startup on Linux systems running glibc 2.28. #13972
Made asarStatsToFsStats' return object inherit from fs.stats. #14040
Pressing escape now closes Dialogs on Mac even if defaultId is set. #14160
Improved typescript bindings. #14137
","Bug Fixes / Changes
[SECURITY] Fixed webPreferences inheritance issue.  CVE-2018-15685
Fixed crash on startup on Linux systems running glibc 2.28. #13972
Made asarStatsToFsStats' return object inherit from fs.stats. #14040
Pressing escape now closes Dialogs on Mac even if defaultId is set. #14160
Improved typescript bindings. #14137"
884,"Bug Fixes

[SECURITY] Fixed webPreferences inheritance issue. CVE-2018-15685
Removed upstream code that used private Mac API. https://github.com/electron/electron/commit/a1a921325dabece06a66e53b94c17e93053eb3c6
","Bug Fixes
[SECURITY] Fixed webPreferences inheritance issue. CVE-2018-15685
Removed upstream code that used private Mac API. link"
885,"Bug Fixes
* [SECURITY] Fixed webPreferences inheritance issue.  CVE-2018-15685","Bug Fixes
* [SECURITY] Fixed webPreferences inheritance issue.  CVE-2018-15685"
886,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@3.0.0-beta.6.
## Bug Fixes/Changes 

Fixed a multitude of WebView issues, including navigation and focus. #14156
Fixed errors thrown when npm reinstalled electron. #14197 
Pressing escape on a dialog now closes it even if defaultId is set. #14205 
Enabled OSR. #14219 
Fixed node fs wrappers to make fs.realpathSync.native and fs.realpath.native available. #14031
fs.readSync now works with massive files #14118
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@3.0.0-beta.6.
Bug Fixes/Changes
Fixed a multitude of WebView issues, including navigation and focus. #14156
Fixed errors thrown when npm reinstalled electron. #14197 
Pressing escape on a dialog now closes it even if defaultId is set. #14205 
Enabled OSR. #14219 
Fixed node fs wrappers to make fs.realpathSync.native and fs.realpath.native available. #14031
fs.readSync now works with massive files #14118"
887,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@3.0.0-beta.5.
Bug Fixes

Removed upstream code that used private Mac API. #13919 
Fixed POST failure regression introduced in a previous 3.0.0 beta. #14022
Fixed asarStatsToFsStats' return object to inherit from fs.stats. #14041 
Improved handling of --enable-features and --disable-features. #13921 
Fixed ipcRemote.sendSync regression introduced in a previous 3.0.0 beta. #13997 
Fixed value of process.execPath in sandboxed renderer. #13959 
Stopped passing preloadPath via ELECTRON_BROWSER_SANDBOX_LOAD. #14026 

Other Changes

Added location url to ""Node.js Integration with Remote Content"" warning. #13976 

Documentation Updates

Documentation improvements. #13924, #14001
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@3.0.0-beta.5.
Bug Fixes
Removed upstream code that used private Mac API. #13919 
Fixed POST failure regression introduced in a previous 3.0.0 beta. #14022
Fixed asarStatsToFsStats' return object to inherit from fs.stats. #14041 
Improved handling of --enable-features and --disable-features. #13921 
Fixed ipcRemote.sendSync regression introduced in a previous 3.0.0 beta. #13997 
Fixed value of process.execPath in sandboxed renderer. #13959 
Stopped passing preloadPath via ELECTRON_BROWSER_SANDBOX_LOAD. #14026 
Other Changes
Added location url to ""Node.js Integration with Remote Content"" warning. #13976 
Documentation Updates
Documentation improvements. #13924, #14001"
888,"This is an unsupported release for maintainers who requested new features in the maintenance series. Please use the 2.0.x stable series or 3.0.0-beta series instead and do not file issues against the 2.1.x series.
New Features

Allow setting window shape. #13789
Add getUploadProgress API to the net API. #13985
Add a display_id parameter to the desktopCapturer API. #13986
","This is an unsupported release for maintainers who requested new features in the maintenance series. Please use the 2.0.x stable series or 3.0.0-beta series instead and do not file issues against the 2.1.x series.
New Features
Allow setting window shape. #13789
Add getUploadProgress API to the net API. #13985
Add a display_id parameter to the desktopCapturer API. #13986"
889,"Bug Fixes

Fix handling SIGINT and SIGTERM in the Electron CLI helper. #13888 
Remove upstream code that used private Mac API. #13919 
Improve handling of --enable-features and --disable-features. #13921 
Fix some APIs modified for ASAR support couldn't be util.promisified. #13960
Prevent menu update while it's open. #13966 
Use unverified sync token in WebGL's DrawingBuffer. #13919
","Bug Fixes
Fix handling SIGINT and SIGTERM in the Electron CLI helper. #13888 
Remove upstream code that used private Mac API. #13919 
Improve handling of --enable-features and --disable-features. #13921 
Fix some APIs modified for ASAR support couldn't be util.promisified. #13960
Prevent menu update while it's open. #13966 
Use unverified sync token in WebGL's DrawingBuffer. #13919"
890,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@3.0.0-beta.4.
## Bug Fixes / Updates

Fixed 3.0.0-beta.1 regression that broke scrollBounce options. #13813
Fixed 3.0.0-beta.2 POST failures by testing string encodings before use. #13818
Fixed will-attach-webview event firing before src was set. #13761
Fixed Widget::OnSizeConstraintsChanged crash. #13822
Fixed crash caused by double-freeing remote references. #13734
Fixed bug that caused repeatedly calling setVibrancy() to fail. #13863
Fixed desktopCapturer API on Windows. #13738
Backported process metrics bugfix from Chromium.
Use --enable-features and --disable-features. #13805

Other Changes

Handle SIGINT and SIGTERM from the Electron CLI helper. #13889
Made setTimeout promisify-friendly. #13860

Documentation Updates

Documentation updates and fixes. #13887, #13861, #13857
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@3.0.0-beta.4.
Bug Fixes / Updates
Fixed 3.0.0-beta.1 regression that broke scrollBounce options. #13813
Fixed 3.0.0-beta.2 POST failures by testing string encodings before use. #13818
Fixed will-attach-webview event firing before src was set. #13761
Fixed Widget::OnSizeConstraintsChanged crash. #13822
Fixed crash caused by double-freeing remote references. #13734
Fixed bug that caused repeatedly calling setVibrancy() to fail. #13863
Fixed desktopCapturer API on Windows. #13738
Backported process metrics bugfix from Chromium.
Use --enable-features and --disable-features. #13805
Other Changes
Handle SIGINT and SIGTERM from the Electron CLI helper. #13889
Made setTimeout promisify-friendly. #13860
Documentation Updates
Documentation updates and fixes. #13887, #13861, #13857"
891,"Bug Fixes

Fix Widget::OnSizeConstraintsChanged crash. #13825
Fix crash caused by double-freeing remote references. #13735
Fix flicker on Macs when the GPU is under heavy load. #13896 
Fixed 'will-attach-webview' event firing before src was set. #13714
Made setTimeout promisify-friendly. #13859
Use --enable-features and --disable-features. #13782
Minor documentation updates and fixes. #13856
","Bug Fixes
Fix Widget::OnSizeConstraintsChanged crash. #13825
Fix crash caused by double-freeing remote references. #13735
Fix flicker on Macs when the GPU is under heavy load. #13896 
Fixed 'will-attach-webview' event firing before src was set. #13714
Made setTimeout promisify-friendly. #13859
Use --enable-features and --disable-features. #13782
Minor documentation updates and fixes. #13856"
892,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@3.0.0-beta.3
Breaking Changes
There are no breaking changes in this release
Features
There are no new features in this release
Fixes

Fix bug where desktopCapture returned an incomplete list  #13693
Don't invoke callback after FrameSubscriber is destroyed #13658
Enable spell checking, which broke in upgrade to Chromium 66 #13650
Enable webview in sandbox renderer #13539
Fix crash when opening devtools for frameless window #13680
Guard against double-freeing remote references #13637
Fix HTML5 Notifications which broke in 3.0.0-beta.1 #13651
Remove race condition for executeJavaScript #13692

Other Changes (E.g. Internal refactors or build system updates)

Updates for release process #13642, #13701

Documentation Updates
Some documentation updates, fixes and reworks: #13665, #13682","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@3.0.0-beta.3
Breaking Changes
There are no breaking changes in this release
Features
There are no new features in this release
Fixes
Fix bug where desktopCapture returned an incomplete list  #13693
Don't invoke callback after FrameSubscriber is destroyed #13658
Enable spell checking, which broke in upgrade to Chromium 66 #13650
Enable webview in sandbox renderer #13539
Fix crash when opening devtools for frameless window #13680
Guard against double-freeing remote references #13637
Fix HTML5 Notifications which broke in 3.0.0-beta.1 #13651
Remove race condition for executeJavaScript #13692
Other Changes (E.g. Internal refactors or build system updates)
Updates for release process #13642, #13701
Documentation Updates
Some documentation updates, fixes and reworks: #13665, #13682"
893,"Bug Fixes

Fixed crash from double-freeing remote references. #13604
Fixed crash when using proxies. #13625
","Bug Fixes
Fixed crash from double-freeing remote references. #13604
Fixed crash when using proxies. #13625"
894,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@3.0.0-beta.2.
Bug Fixes/Updates

Documentation update: fixed links to webview.md. #13370 
Documentation update: add native_mate to source code directory structure doc. #13457 
Fixed issue with fs.statSyncNoException throwing exceptions. #13397 
Fixed crash when loading site with jquery. #13476, #13452 
Deprecated properties in app.getAppMetrics(). #13453 
Fixed devtools issues. #13571 

macOS

Fixed incorrect usage of private APIs in MAS build. #13530 
Fixed tray.setContextMenu crash. #13517 
Fixed fallback to FullSizeContentView for frameless window on mac. #13600 

Windows

Fixed build to work with Visual Studio 2017 15.7.4 #13593 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@3.0.0-beta.2.
Bug Fixes/Updates
Documentation update: fixed links to webview.md. #13370 
Documentation update: add native_mate to source code directory structure doc. #13457 
Fixed issue with fs.statSyncNoException throwing exceptions. #13397 
Fixed crash when loading site with jquery. #13476, #13452 
Deprecated properties in app.getAppMetrics(). #13453 
Fixed devtools issues. #13571 
macOS
Fixed incorrect usage of private APIs in MAS build. #13530 
Fixed tray.setContextMenu crash. #13517 
Fixed fallback to FullSizeContentView for frameless window on mac. #13600 
Windows
Fixed build to work with Visual Studio 2017 15.7.4 #13593 "
895,"Bug Fixes

Fixed crashes in V8 garbage collector. #13421 
Fixed issue where cookies and credentials were being captured in netlog. #13537 
Fixed dyld: Symbol not found: _CIDetectorTypeText error introduced in 2.0.3.  #13404 

macOS

Fixed crash on startup on macOS 10.9 due to linking with CoreBluetooth. #13545 
Fixed tray.setContextMenu crash. #13516 

Windows

Fixed windows causing repaint issues when DWM composition is disabled. #12501 
","Bug Fixes
Fixed crashes in V8 garbage collector. #13421 
Fixed issue where cookies and credentials were being captured in netlog. #13537 
Fixed dyld: Symbol not found: _CIDetectorTypeText error introduced in 2.0.3.  #13404 
macOS
Fixed crash on startup on macOS 10.9 due to linking with CoreBluetooth. #13545 
Fixed tray.setContextMenu crash. #13516 
Windows
Fixed windows causing repaint issues when DWM composition is disabled. #12501 "
896,"Bug Fixes

Fixed crashes with natively compiled modules. #13260 
Mark browser window affinity as experimental. #13295 
Enabled WebFrame method forwarding in sandboxed renderers (#12538). #13076
Fixed issue starting Electron with Node options. #13324
Fixed passing the boolean value of enableAutoSize in webContents.setSize(options).  #13330
[SECURITY]  Added temporal index bounds check for WebRTC. #13305 

macOS

Fixed tray title not inverting when highlighted. #13262 
Fixed to allow lookup of videodecoder service to fix HW video decoding on macOS 10.13. #13275, #13345 
Fixed issue allowing bundles to be selected in  open file. #13277 
Fixed to set mac protocol to none after calling app.removeAsDefaultProtocolClient. #13325 
","Bug Fixes
Fixed crashes with natively compiled modules. #13260 
Mark browser window affinity as experimental. #13295 
Enabled WebFrame method forwarding in sandboxed renderers (#12538). #13076
Fixed issue starting Electron with Node options. #13324
Fixed passing the boolean value of enableAutoSize in webContents.setSize(options).  #13330
[SECURITY]  Added temporal index bounds check for WebRTC. #13305 
macOS
Fixed tray title not inverting when highlighted. #13262 
Fixed to allow lookup of videodecoder service to fix HW video decoding on macOS 10.13. #13275, #13345 
Fixed issue allowing bundles to be selected in  open file. #13277 
Fixed to set mac protocol to none after calling app.removeAsDefaultProtocolClient. #13325 "
897,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@3.0.0-beta.1.
Upgrades

Upgraded from Chrome 61.0.3163.10 to 66.0.3359.181. #12477
Upgraded from Node 8.9.3 to 10.2.0. #12477
Upgraded from v8 6.1.534.41 to 6.6.346.32. #12477

Breaking API changes

Changed menu item order control. #12362
Aliased arm builds are no longer published. #12991
Removed documented deprecated APIs. #13050 
Removed did-get-response-details and did-get-redirect-request events.  #12477
Default to disabling navigating on drag/drop. #12655 
Node 4.x or greater is required. #12993
Refactored NativeWindow (Part 1): Remove WebContentsObserver methods. #12008
Refactored NativeWindow (Part 2):  NativeWindow is no longer WebContentsObserver. #12140
Refactored NativeWindow (Part 3):  Remove is_offscreen_dummy from NativeWindow. #12503
Refactored NativeWindow (Part 4): Move AutofillPopup from NativeWindow to WebContents #12514 
Refactored NativeWindow (Part 5): Add NativeWindow::SetContentView. #12584
Refactored NativeWindow (Part 6): Move NativeWindow bindings to api::TopLevelWindow. #12596 
Refactored NativeWindow (Part 7): Expose TopLevelWindow in JavaScript. #12637
Refactored NativeWindow (Part 8): Prepare work for using views::Widget on macOS. #12660
Refactored NativeWindow (Part 9): Use views::Widget on macOS. #12696 
Refactored NativeWindow (Part 10): Share more code between NativeWindow implementations. #12716 
Refactored NativeWindow (Part 11): NativeWindowViews should not be a View #12750
Refactored NativeWindow (Part 12): Do not use custom content view on macOS. #12787  
Refactored NativeWindow (Part 13): Add View and WebContentsView APIs. #12858 
Refactored menu.popup. #11968 https://github.com/electron/electron/pull/11968 
Changed to no longer use JSON to send the result of ipcRenderer.sendSync. #8953 
Changed to default to ignore command line arguments following a URL. #13039
Renamed api::Window to api::BrowserWindow. #12004
Changed to turn off visual zoom by default. #12679 
Switching to an older version of Electron after running this version will require you to clear out your user data directory to avoid older versions crashing.  You can get the user data directory by running console.log(app.getPath(""userData"")) or see https://electronjs.org/docs/api/app#appgetpathname for more details.

Windows

Renamed app-command media-play_pause to media-play-pause. #12408 

Other Changes

Added the ability to build with GN. #12837, #12884, #12948, #13286, #13005, #12885, #12647, #12882, #12950, #12952, #13124, #13285, #12953 , #12949, #13284, #12957, #12951, 12738
Documentation fixes and updates. #12084, #13259, #12595, #12674, #12577, #12103, #12767, #12373, #12202, #12504, #12617, #13281, #12123, #12627, #13293, #13142, #13064, #12986, #12276, #13084, #13233, #12804, #13099, #13013, #13187, #13270, #13229, #12274, #12736, #11966, #12155,  #12400, #11328, #12900, #12389, #12387, #12232, #12922, #12968, #12422, #12149, #12794, #12822, #13089,  #12113, #12067, #13103, #12902, #12797, #12786, #12058, #12204, #13294, #12542, #12781, #12682, #12040, #12847,  #12852, #12452, #12665, #12756, #12000, #12428, #12315, #12072, #12912, #12967, #12105, #13063
Fixed to correctly detect insecure resources. #12309
Added app.whenReady(). #12652
Added enable_desktop_capturer build flag. #13133
Added a display_id parameter to the desktopCapturer API. #12417
Added app.isPackaged. #12656
Added clang-format script and precommit hook. #12651
Added converters for base::BindOnce and base::BindRepeating. #12646
Added did-frame-navigate event to WebContents. #12723
Added layout support for View API. #13044
Test fixes and updates. #12257, #13227, #13266, #13267, #13268, #13269, #13271, #13272, #13273, #12241, #13241, #13291, #13155, #13237, #13238, #13239, #13263, #12122, #12817,  #12749, #12153, #12015, #12403, #12757, #12186, #12189, #13122, #12886, #12917, #12139, #12263, #13066
Added win.moveTop() to move window z-oder to top. #12485
Added before-quit-for-update event to autoUpdater. #12619
Added optional verbose switch -v to build script. #12118
Added process.getHeapStatistics(). #13183
Fixed support for typed arrays in remote/rpc-server. #13055
Added sccache option to bootstrap. #12582 
Fixed tls check to no longer rely on an external service. #13338 
Changed c++ std from gnu++14 to c++14. #13248 
Fixed issue with BrowserWindow.getFocusedWindow(). #12526 
Fixed issue with menu.popup. #12325
Added support for generating compilation db. #12104
Fixed native crash in url_request_context.cc. #12305
Added the capability to clear cache storage data. #12546
Fixed the default of allowRunningInsecureContent as per docs. #12556 
Added documentation on automated testing with a custom driver. #12446
Improved removeRemoteListenersAndLogWarning. #12975, #12998
Fixed issue starting Electron with Node options. #13323 
Fixed issue where cookies and credentials were being captured in netlog. #13065 
Fixed invisible menu items no longer triggering. #12825
Added support for rebuild of native modules for unreleased electron. #12217 
Enabled plznavigate for browser side navigation. #12535 
Enabled WebFrame method forwarding in sandboxed renderers. #12538 
Fixed issue where preload script was executing twice. #12190 
Fixed issue exiting HTML fullscreen when window leaves fullscreen. #13090 
Added events (EventEmitter) to sandboxed renderer. #12828
Fixed isOffScreen method to always be available. #12530 
Added WebFrame routingId. #12614
Added process.env to sandbox renderer. #12166
Added deprecate.property(). #13101
Added TextField and Button APIs. #13110  
Added netLog API for dynamic logging control. #13068
Added new makeSingleInstance API. #12782 
Changed to queue spell check request asynchronously. #12112 
Added powerMonitor.querySystemIdleState and powerMonitor.querySystemIdleTime. #11807 
Fixed autofill popup position when the popup is spawned from a webview. #13184 
Fixed context menu for sandbox devtools. #11933  
Fixed crash when releasing a script context that never had node injected. #12741 
Fixed crash when using getWebPreferences api with devtools webContents. #12254 
Fixed crashes and added tests for View API. #12995
Fixed deprecated API in tools/dump-version-info.js. #12003
Fixed dev tools window interfering with mouse forward. #12132 
Fixed dockMenu not being referenced in JavaScript. #12062 
Fixed empty description when only one extension is given. #12954 
Fixed menubar toggle alt key detection on focus. #12167
Fixed network delegate race condition. #12044
Fixed optimizeSimpleObject for arrays of objects. #12815 https://github.com/electron/electron/pull/12815  
Fixed transparency in capturePage. #12561
Fixed vulnerabilities both top-level and in spec. #13029 
Fixed can't load module error when app is packaged. #13283   
Fixed to ensure that getLastCrashReport() is actually the last crash report. #12253   
Fixed incorrect warnings in webviews. #12234  
Fixed listeners out of limit warning. #12841 
Fixed passing the boolean value of enableAutoSize in webContents.setSize(options). #13282 
Added additional webFrame methods. #11607
Fixed error while using Spectron. #12511
Added remote exception handling. #12694
Added dialog (alert/confirm) blocking as a user switch after the first dialog. #11613
Fixed mime type deduction in URLRequestAsarJob. #12319
Fixed to use parent's visibility instead of inherited 'show' option. #12228 
Added option to use to use a local build of Electron. #12426
Fixed preload not loading in sandboxed render if preload path contains special chars. #12037
Fixed propagating referrer to new windows. #12397
Fixed disabling accelerators. #12449
Refactored sandbox preload initialization. #12877
Fixed build_debug_libccargument on bootstrap. #11927 
Fixed the race condition between new process creation and context release. #12342 
Fixed issue with Menu.buildFromTemplate  if passed template is an Array. #12699 
Fixed to set appropriate defaults for webview options. #12271
Added support for navigator.languages. #12419
Fixed drag preventing clicks on overlapping BrowserView. #12348 
Added macOS and Linux symbols to symbol server. #13058 
Fixed popup menu position #12180
Fixed to use same delay-load settings in both debug and release. #12328 
Fixed pinch-zoom disabling. #12488 

Linux

Added support for CI testing on arm64 hardware. #12080
Added better GTK+ Menu color support. #12300
Fixed desktop-id notification edge case. #12216
Fixed Menu.setApplicationMenu(null) crash. #12983
Fixed issue with tray icons with multiple inherited ubuntu sessions. #12844
Fixed BrowserWindow.focus() for offscreen windows. #12507 
Fixed using application name for notifications. #12192
Fixed to use the appname as the tray icon's default tooltip. #12388

macOS

Added workspace notifications support. #12093
Added tray.setIgnoreDoubleClickEvents(ignore) to ignore tray double click events. #12496
Fixed issue allowing bundles to be selected in <input file=""type""> open file dialog. #13220
Added warning when addTabbedWindow is called on self. #12059
Added XCode debugging documentation. #12131
Fixed issue blocking main process when using async dialog. #12404
Fixed dark mode tray highlighting bug. #12395
Fixed context menu click callback. #12043
Fixed event leak on reuse of touchbar item. #12527
Fixed tray title crash. #12352
Fixed non-draggable regions. #12327
Fixed to prevent menu update while it's open. #12809
Fixed tray icon bounds not allowing negative values. #13162 
Fixed tray title not inverting when highlighted. #13085
Fixed Mac build when enable_run_as_node==false. #12196
Improved inAppPurchase module. #12464 
Fixed additional issues on frameless windows with vibrancy. #12157
Added mouse forward functionality on macOS. #12281
Added screen lock / unlock events. #12714
Fixed to set mac protocol to none after calling app.removeAsDefaultProtocolClient. #13326
Added show file filter name for accessory view of file dialog. #11959 
Updated mac symbol dump. #12982 

Windows

Fixed issue to allow frameless transparent windows to be sized smaller than 64x64. #12904 
Updated to disable chromium's redraw locking on Windows when DWM is disabled. #12501 
Added DIP to/from screen coordinate conversions. #12879 
Fixed require on network share path. #12282
Fixed passing of exception to the system crash handler. #12198
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@3.0.0-beta.1.
Upgrades
Upgraded from Chrome 61.0.3163.10 to 66.0.3359.181. #12477
Upgraded from Node 8.9.3 to 10.2.0. #12477
Upgraded from v8 6.1.534.41 to 6.6.346.32. #12477
Breaking API changes
Changed menu item order control. #12362
Aliased arm builds are no longer published. #12991
Removed documented deprecated APIs. #13050 
Removed did-get-response-details and did-get-redirect-request events.  #12477
Default to disabling navigating on drag/drop. #12655 
Node 4.x or greater is required. #12993
Refactored NativeWindow (Part 1): Remove WebContentsObserver methods. #12008
Refactored NativeWindow (Part 2):  NativeWindow is no longer WebContentsObserver. #12140
Refactored NativeWindow (Part 3):  Remove is_offscreen_dummy from NativeWindow. #12503
Refactored NativeWindow (Part 4): Move AutofillPopup from NativeWindow to WebContents #12514 
Refactored NativeWindow (Part 5): Add NativeWindow::SetContentView. #12584
Refactored NativeWindow (Part 6): Move NativeWindow bindings to api::TopLevelWindow. #12596 
Refactored NativeWindow (Part 7): Expose TopLevelWindow in JavaScript. #12637
Refactored NativeWindow (Part 8): Prepare work for using views::Widget on macOS. #12660
Refactored NativeWindow (Part 9): Use views::Widget on macOS. #12696 
Refactored NativeWindow (Part 10): Share more code between NativeWindow implementations. #12716 
Refactored NativeWindow (Part 11): NativeWindowViews should not be a View #12750
Refactored NativeWindow (Part 12): Do not use custom content view on macOS. #12787
Refactored NativeWindow (Part 13): Add View and WebContentsView APIs. #12858 
Refactored menu.popup. #11968 link 
Changed to no longer use JSON to send the result of ipcRenderer.sendSync. #8953 
Changed to default to ignore command line arguments following a URL. #13039
Renamed api::Window to api::BrowserWindow. #12004
Changed to turn off visual zoom by default. #12679 
Switching to an older version of Electron after running this version will require you to clear out your user data directory to avoid older versions crashing.  You can get the user data directory by running console.log(app.getPath(""userData"")) or see link for more details.
Windows
Renamed app-command media-play_pause to media-play-pause. #12408 
Other Changes
Added the ability to build with GN. #12837, #12884, #12948, #13286, #13005, #12885, #12647, #12882, #12950, #12952, #13124, #13285, #12953 , #12949, #13284, #12957, #12951, 12738
Documentation fixes and updates. #12084, #13259, #12595, #12674, #12577, #12103, #12767, #12373, #12202, #12504, #12617, #13281, #12123, #12627, #13293, #13142, #13064, #12986, #12276, #13084, #13233, #12804, #13099, #13013, #13187, #13270, #13229, #12274, #12736, #11966, #12155,  #12400, #11328, #12900, #12389, #12387, #12232, #12922, #12968, #12422, #12149, #12794, #12822, #13089,  #12113, #12067, #13103, #12902, #12797, #12786, #12058, #12204, #13294, #12542, #12781, #12682, #12040, #12847,  #12852, #12452, #12665, #12756, #12000, #12428, #12315, #12072, #12912, #12967, #12105, #13063
Fixed to correctly detect insecure resources. #12309
Added app.whenReady(). #12652
Added enable_desktop_capturer build flag. #13133
Added a display_id parameter to the desktopCapturer API. #12417
Added app.isPackaged. #12656
Added clang-format script and precommit hook. #12651
Added converters for base::BindOnce and base::BindRepeating. #12646
Added did-frame-navigate event to WebContents. #12723
Added layout support for View API. #13044
Test fixes and updates. #12257, #13227, #13266, #13267, #13268, #13269, #13271, #13272, #13273, #12241, #13241, #13291, #13155, #13237, #13238, #13239, #13263, #12122, #12817,  #12749, #12153, #12015, #12403, #12757, #12186, #12189, #13122, #12886, #12917, #12139, #12263, #13066
Added win.moveTop() to move window z-oder to top. #12485
Added before-quit-for-update event to autoUpdater. #12619
Added optional verbose switch -v to build script. #12118
Added process.getHeapStatistics(). #13183
Fixed support for typed arrays in remote/rpc-server. #13055
Added sccache option to bootstrap. #12582 
Fixed tls check to no longer rely on an external service. #13338 
Changed c++ std from gnu++14 to c++14. #13248 
Fixed issue with BrowserWindow.getFocusedWindow(). #12526 
Fixed issue with menu.popup. #12325
Added support for generating compilation db. #12104
Fixed native crash in url_request_context.cc. #12305
Added the capability to clear cache storage data. #12546
Fixed the default of allowRunningInsecureContent as per docs. #12556 
Added documentation on automated testing with a custom driver. #12446
Improved removeRemoteListenersAndLogWarning. #12975, #12998
Fixed issue starting Electron with Node options. #13323 
Fixed issue where cookies and credentials were being captured in netlog. #13065 
Fixed invisible menu items no longer triggering. #12825
Added support for rebuild of native modules for unreleased electron. #12217 
Enabled plznavigate for browser side navigation. #12535 
Enabled WebFrame method forwarding in sandboxed renderers. #12538 
Fixed issue where preload script was executing twice. #12190 
Fixed issue exiting HTML fullscreen when window leaves fullscreen. #13090 
Added events (EventEmitter) to sandboxed renderer. #12828
Fixed isOffScreen method to always be available. #12530 
Added WebFrame routingId. #12614
Added process.env to sandbox renderer. #12166
Added deprecate.property(). #13101
Added TextField and Button APIs. #13110
Added netLog API for dynamic logging control. #13068
Added new makeSingleInstance API. #12782 
Changed to queue spell check request asynchronously. #12112 
Added powerMonitor.querySystemIdleState and powerMonitor.querySystemIdleTime. #11807 
Fixed autofill popup position when the popup is spawned from a webview. #13184 
Fixed context menu for sandbox devtools. #11933
Fixed crash when releasing a script context that never had node injected. #12741 
Fixed crash when using getWebPreferences api with devtools webContents. #12254 
Fixed crashes and added tests for View API. #12995
Fixed deprecated API in tools/dump-version-info.js. #12003
Fixed dev tools window interfering with mouse forward. #12132 
Fixed dockMenu not being referenced in JavaScript. #12062 
Fixed empty description when only one extension is given. #12954 
Fixed menubar toggle alt key detection on focus. #12167
Fixed network delegate race condition. #12044
Fixed optimizeSimpleObject for arrays of objects. #12815 link
Fixed transparency in capturePage. #12561
Fixed vulnerabilities both top-level and in spec. #13029 
Fixed can't load module error when app is packaged. #13283 
Fixed to ensure that getLastCrashReport() is actually the last crash report. #12253 
Fixed incorrect warnings in webviews. #12234
Fixed listeners out of limit warning. #12841 
Fixed passing the boolean value of enableAutoSize in webContents.setSize(options). #13282 
Added additional webFrame methods. #11607
Fixed error while using Spectron. #12511
Added remote exception handling. #12694
Added dialog (alert/confirm) blocking as a user switch after the first dialog. #11613
Fixed mime type deduction in URLRequestAsarJob. #12319
Fixed to use parent's visibility instead of inherited 'show' option. #12228 
Added option to use to use a local build of Electron. #12426
Fixed preload not loading in sandboxed render if preload path contains special chars. #12037
Fixed propagating referrer to new windows. #12397
Fixed disabling accelerators. #12449
Refactored sandbox preload initialization. #12877
Fixed build_debug_libccargument on bootstrap. #11927 
Fixed the race condition between new process creation and context release. #12342 
Fixed issue with Menu.buildFromTemplate  if passed template is an Array. #12699 
Fixed to set appropriate defaults for webview options. #12271
Added support for navigator.languages. #12419
Fixed drag preventing clicks on overlapping BrowserView. #12348 
Added macOS and Linux symbols to symbol server. #13058 
Fixed popup menu position #12180
Fixed to use same delay-load settings in both debug and release. #12328 
Fixed pinch-zoom disabling. #12488 
Linux
Added support for CI testing on arm64 hardware. #12080
Added better GTK+ Menu color support. #12300
Fixed desktop-id notification edge case. #12216
Fixed Menu.setApplicationMenu(null) crash. #12983
Fixed issue with tray icons with multiple inherited ubuntu sessions. #12844
Fixed BrowserWindow.focus() for offscreen windows. #12507 
Fixed using application name for notifications. #12192
Fixed to use the appname as the tray icon's default tooltip. #12388
macOS
Added workspace notifications support. #12093
Added tray.setIgnoreDoubleClickEvents(ignore) to ignore tray double click events. #12496
Fixed issue allowing bundles to be selected in  open file dialog. #13220
Added warning when addTabbedWindow is called on self. #12059
Added XCode debugging documentation. #12131
Fixed issue blocking main process when using async dialog. #12404
Fixed dark mode tray highlighting bug. #12395
Fixed context menu click callback. #12043
Fixed event leak on reuse of touchbar item. #12527
Fixed tray title crash. #12352
Fixed non-draggable regions. #12327
Fixed to prevent menu update while it's open. #12809
Fixed tray icon bounds not allowing negative values. #13162 
Fixed tray title not inverting when highlighted. #13085
Fixed Mac build when enable_run_as_node==false. #12196
Improved inAppPurchase module. #12464 
Fixed additional issues on frameless windows with vibrancy. #12157
Added mouse forward functionality on macOS. #12281
Added screen lock / unlock events. #12714
Fixed to set mac protocol to none after calling app.removeAsDefaultProtocolClient. #13326
Added show file filter name for accessory view of file dialog. #11959 
Updated mac symbol dump. #12982 
Windows
Fixed issue to allow frameless transparent windows to be sized smaller than 64x64. #12904 
Updated to disable chromium's redraw locking on Windows when DWM is disabled. #12501 
Added DIP to/from screen coordinate conversions. #12879 
Fixed require on network share path. #12282
Fixed passing of exception to the system crash handler. #12198"
898,"Bug Fixes

Fixed long jitter buffer delays with Opus and DTX (mistakenly marked as fixed in 2.0.1). #13009
Documented missing quit events during shutdown. #13026 
Updated locale documentation. #13027 

Linux

Fixed Menu.setApplicationMenu(null) crash. #13022 

Windows

Fixed frameless transparent windows larger than 64x64. #13014 
","Bug Fixes
Fixed long jitter buffer delays with Opus and DTX (mistakenly marked as fixed in 2.0.1). #13009
Documented missing quit events during shutdown. #13026 
Updated locale documentation. #13027 
Linux
Fixed Menu.setApplicationMenu(null) crash. #13022 
Windows
Fixed frameless transparent windows larger than 64x64. #13014 "
899,"Bug Fixes


Fixed flaky security-warnings test. #12776, #12946 


Fixed context menu for sandbox devtools. #12731 


Fixed dialog.showOpenDialog filters to show filter name instead of extension. #12779 


Fixed invisible menu items no longer triggering. #12831 


Fixed listeners out of limit warning. #12856 


[SECURITY] Updates command-line backlist switches. #12806 


Fixed typescript generation error. #12940 


Fixed empty description on file type input when only one extension is given. #12963 


macOS

Fixed the type information for inAppPurchase.canMakePayments(). #12824 

Linux

Backport (2-0-x) - fix: support multiple inherited ubuntu session for indicators. #12964 

Windows


Fixed to allow frameless transparent windows to be sized smaller than 64x64 on Windows. #12923 


Backported sandbox fixes from Chromium. #12785 

","Bug Fixes
Fixed flaky security-warnings test. #12776, #12946 
Fixed context menu for sandbox devtools. #12731 
Fixed dialog.showOpenDialog filters to show filter name instead of extension. #12779 
Fixed invisible menu items no longer triggering. #12831 
Fixed listeners out of limit warning. #12856 
[SECURITY] Updates command-line backlist switches. #12806 
Fixed typescript generation error. #12940 
Fixed empty description on file type input when only one extension is given. #12963 
macOS
Fixed the type information for inAppPurchase.canMakePayments(). #12824 
Linux
Backport (2-0-x) - fix: support multiple inherited ubuntu session for indicators. #12964 
Windows
Fixed to allow frameless transparent windows to be sized smaller than 64x64 on Windows. #12923 
Backported sandbox fixes from Chromium. #12785 "
900,"Bug Fixes


Fixed context menu for sandbox devtools. #12734


[SECURITY] Updated command-line backlist switches. #12807


Fixed contents.setSize(options) documentation in web-contents.md. #12922


Fixed empty description on file type input when only one extension is given. #12962


macOS

Fixed flicker with high DPI resolutions. #12945
","Bug Fixes
Fixed context menu for sandbox devtools. #12734
[SECURITY] Updated command-line backlist switches. #12807
Fixed contents.setSize(options) documentation in web-contents.md. #12922
Fixed empty description on file type input when only one extension is given. #12962
macOS
Fixed flicker with high DPI resolutions. #12945"
901,"Bug Fixes


[SECURITY] Updated command-line backlist switches. #12808 


[SECURITY] Disabled executable stack in electron binary. #12928 

","Bug Fixes
[SECURITY] Updated command-line backlist switches. #12808 
[SECURITY] Disabled executable stack in electron binary. #12928 "
902,"End-of-Support Release
This release marks the end of 1.6.x's support cycle. For more details on supported versions, please see https://electronjs.org/docs/tutorial/support#supported-versions.","End-of-Support Release
This release marks the end of 1.6.x's support cycle. For more details on supported versions, please see link."
903,"Note: This is the stabilization release for 2.0.0.  There are no code changes between 2.0.0 and 2.0.0-beta.8
2.0.0 contains the following changes from the 1.8.x series:
Changes / New Features

Major bumps to several important parts of Electron's toolchain, including Chrome 61, Node 8.9.3, V8 6.1.534.41, GTK+ 3 on Linux, updated spellchecker, and Squirrel.
In-app purchases are now supported on MacOS. #11292
New API for loading files. #11565
New API to enable/disable a window. #11832
New API app.setLocale(). #11469
New support for logging IPC messages. #11880
New menu events. #11754
Add a shutdown event to powerMonitor. #11417
Add affinity option for gathering several BrowserWindows into a single process. #11501
Add the ability for saveDialog to list available extensions. #11873
Support for additional notification actions #11647
The ability to set macOS notification close button title. #11654
Add conditional for menu.popup(window, callback)
Memory improvements in touchbar items. #12527
Improved security recommendation checklist.
Add App-Scoped Security scoped bookmarks. #11711
Add ability to set arbitrary arguments in a renderer process. #11850
Add accessory view for format picker. #11873
Fixed network delegate race condition. #12053

Breaking API changes

Removed deprecated APIs, including:
Changed menu.popup signature. #11968
Removed deprecated crashReporter.setExtraParameter #11972
Removed deprecated webContents.setZoomLevelLimits and webFrame.setZoomLevelLimits. #11974
Removed deprecated clipboard methods. #11973
Removed support for boolean parameters for tray.setHighlightMode. #11981

Bug Fixes

Changed to make sure webContents.isOffscreen() is always available. #12531 
Fixed BrowserWindow.getFocusedWindow() when DevTools is undocked and focused. #12554 
Fixed preload not loading in sandboxed render if preload path contains special chars. #12643 
Correct the default of allowRunningInsecureContent as per docs. #12629
Fixed transparency on nativeImage. #12683 
Fixed issue with Menu.buildFromTemplate. #12703 
Confirmed menu.popup options are objects. #12330
Removed a race condition between new process creation and context release. #12361
Update draggable regions when changing BrowserView. #12370 
Fixed menubar toggle alt key detection on focus. #12235 
Fixed incorrect warnings in webviews. #12236 
Fixed inheritance of 'show' option from parent windows. #122444
Ensure that getLastCrashReport() is actually the last crash report. #12255
Fixed require on network share path. #12287 
Fixed context menu click callback. #12170
Fixed popup menu position. #12181
Improved libuv loop cleanup. #11465
Fixed hexColorDWORDToRGBA for transparent colors. #11557
Fixed null pointer dereference with getWebPreferences api. #12245
Fixed a cyclic reference in menu delegate. #11967
Fixed protocol filtering of net.request. #11657
WebFrame.setVisualZoomLevelLimits now sets user-agent scale constraints #12510
Set appropriate defaults for webview options. #12292
Improved vibrancy support. #12157 #12171 #11886
Fixed timing issue in singleton fixture.
Fixed broken production cache in NotifierSupportsActions()
Made MenuItem roles camelCase-compatible. #11532
Improved touch bar updates. #11812, #11761.
Removed extra menu separators. #11827
Fixed Bluetooth chooser bug. Closes #11399.
Fixed macos Full Screen Toggle menu item label. #11633
Improved tooltip hiding when a window is deactivated. #11644
Migrated deprecated web-view method. #11798
Fixed closing a window opened from a browserview. #11799
Fixed Bluetooth chooser bug. #11492
Updated to use task scheduler for app.getFileIcon API. #11595
Changed to fire console-message event even when rendering offscreen. #11921
Fixed downloading from custom protocols using WebContents.downloadURL. #11804
Fixed transparent windows losing transparency when devtools detaches. #11956
Fixed Electron apps canceling restart or shutdown. #11625

macOS

Fixed event leak on reuse of touchbar item. #12624 
Fixed tray highlight in darkmode. #12398 
Fixed blocking main process for async dialog. #12407 
Fixed setTitle tray crash. #12356
Fixed crash when setting dock menu. #12087

Linux

Better Linux desktop notifications. #12229 #12216 #11965 #11980
Better GTK+ theme support for menus. #12331 
Exit gracefully on linux. #12139
Use the app’s name as the tray icon's default tooltip. #12393

Windows

Added Visual Studio 2017 support. #11656
Fixed passing of exception to the system crash handler. #12259
Fixed hiding tooltip from minimized window. #11644
Fixed desktopCapturer to capture the correct screen. #11664
Fixed disableHardwareAcceleration with transparency. #11704
","Note: This is the stabilization release for 2.0.0.  There are no code changes between 2.0.0 and 2.0.0-beta.8
2.0.0 contains the following changes from the 1.8.x series:
Changes / New Features
Major bumps to several important parts of Electron's toolchain, including Chrome 61, Node 8.9.3, V8 6.1.534.41, GTK+ 3 on Linux, updated spellchecker, and Squirrel.
In-app purchases are now supported on MacOS. #11292
New API for loading files. #11565
New API to enable/disable a window. #11832
New API app.setLocale(). #11469
New support for logging IPC messages. #11880
New menu events. #11754
Add a shutdown event to powerMonitor. #11417
Add affinity option for gathering several BrowserWindows into a single process. #11501
Add the ability for saveDialog to list available extensions. #11873
Support for additional notification actions #11647
The ability to set macOS notification close button title. #11654
Add conditional for menu.popup(window, callback)
Memory improvements in touchbar items. #12527
Improved security recommendation checklist.
Add App-Scoped Security scoped bookmarks. #11711
Add ability to set arbitrary arguments in a renderer process. #11850
Add accessory view for format picker. #11873
Fixed network delegate race condition. #12053
Breaking API changes
Removed deprecated APIs, including:
Changed menu.popup signature. #11968
Removed deprecated crashReporter.setExtraParameter #11972
Removed deprecated webContents.setZoomLevelLimits and webFrame.setZoomLevelLimits. #11974
Removed deprecated clipboard methods. #11973
Removed support for boolean parameters for tray.setHighlightMode. #11981
Bug Fixes
Changed to make sure webContents.isOffscreen() is always available. #12531 
Fixed BrowserWindow.getFocusedWindow() when DevTools is undocked and focused. #12554 
Fixed preload not loading in sandboxed render if preload path contains special chars. #12643 
Correct the default of allowRunningInsecureContent as per docs. #12629
Fixed transparency on nativeImage. #12683 
Fixed issue with Menu.buildFromTemplate. #12703 
Confirmed menu.popup options are objects. #12330
Removed a race condition between new process creation and context release. #12361
Update draggable regions when changing BrowserView. #12370 
Fixed menubar toggle alt key detection on focus. #12235 
Fixed incorrect warnings in webviews. #12236 
Fixed inheritance of 'show' option from parent windows. #122444
Ensure that getLastCrashReport() is actually the last crash report. #12255
Fixed require on network share path. #12287 
Fixed context menu click callback. #12170
Fixed popup menu position. #12181
Improved libuv loop cleanup. #11465
Fixed hexColorDWORDToRGBA for transparent colors. #11557
Fixed null pointer dereference with getWebPreferences api. #12245
Fixed a cyclic reference in menu delegate. #11967
Fixed protocol filtering of net.request. #11657
WebFrame.setVisualZoomLevelLimits now sets user-agent scale constraints #12510
Set appropriate defaults for webview options. #12292
Improved vibrancy support. #12157 #12171 #11886
Fixed timing issue in singleton fixture.
Fixed broken production cache in NotifierSupportsActions()
Made MenuItem roles camelCase-compatible. #11532
Improved touch bar updates. #11812, #11761.
Removed extra menu separators. #11827
Fixed Bluetooth chooser bug. Closes #11399.
Fixed macos Full Screen Toggle menu item label. #11633
Improved tooltip hiding when a window is deactivated. #11644
Migrated deprecated web-view method. #11798
Fixed closing a window opened from a browserview. #11799
Fixed Bluetooth chooser bug. #11492
Updated to use task scheduler for app.getFileIcon API. #11595
Changed to fire console-message event even when rendering offscreen. #11921
Fixed downloading from custom protocols using WebContents.downloadURL. #11804
Fixed transparent windows losing transparency when devtools detaches. #11956
Fixed Electron apps canceling restart or shutdown. #11625
macOS
Fixed event leak on reuse of touchbar item. #12624 
Fixed tray highlight in darkmode. #12398 
Fixed blocking main process for async dialog. #12407 
Fixed setTitle tray crash. #12356
Fixed crash when setting dock menu. #12087
Linux
Better Linux desktop notifications. #12229 #12216 #11965 #11980
Better GTK+ theme support for menus. #12331 
Exit gracefully on linux. #12139
Use the app’s name as the tray icon's default tooltip. #12393
Windows
Added Visual Studio 2017 support. #11656
Fixed passing of exception to the system crash handler. #12259
Fixed hiding tooltip from minimized window. #11644
Fixed desktopCapturer to capture the correct screen. #11664
Fixed disableHardwareAcceleration with transparency. #11704"
904,"Bug Fixes
macOS

Fixed 1.8.5 MAS release that contained extraneous files.
","Bug Fixes
macOS
Fixed 1.8.5 MAS release that contained extraneous files."
905,"Bug Fixes

Fixed issue with mime type deduction. #12383 
","Bug Fixes
Fixed issue with mime type deduction. #12383 "
906,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@2.0.0-beta.8.
## Bug Fixes/Changes 


Changed to make sure webContents.isOffscreen() is always available. #12531 


Fixed BrowserWindow.getFocusedWindow() when DevTools is undocked and focused. #12554 


Fixed preload not loading in sandboxed render if preload path contains special chars. #12643 


Fixed the default of allowRunningInsecureContent as per docs. #12629 


Fixed transparency on nativeImage. #12683 


Fixed issue with Menu.buildFromTemplate. #12703 


macOS

Fixed event leak on reuse of touchbar item. #12624 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@2.0.0-beta.8.
Bug Fixes/Changes
Changed to make sure webContents.isOffscreen() is always available. #12531 
Fixed BrowserWindow.getFocusedWindow() when DevTools is undocked and focused. #12554 
Fixed preload not loading in sandboxed render if preload path contains special chars. #12643 
Fixed the default of allowRunningInsecureContent as per docs. #12629 
Fixed transparency on nativeImage. #12683 
Fixed issue with Menu.buildFromTemplate. #12703 
macOS
Fixed event leak on reuse of touchbar item. #12624 "
907,"Bug Fixes

Fixed IndexedDB issues. #12645 

macOS

Fixed a screen sharing crash. #12645
","Bug Fixes
Fixed IndexedDB issues. #12645 
macOS
Fixed a screen sharing crash. #12645"
908,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@2.0.0-beta.7.
Updates

Update setProgressBar documentation. #12454
Added arm/arm64 binaries of mksnapshot. #12524 

Bug Fixes

Fixed regression that prevented disabling menu item accelerators. #12455
In-app purchases fail gracefully now on non-macOS systems. #12512 

macOS

Fixed slow 2D canvas performance on High Sierra. #12448 
Fixed pinch/zoom disable bug. #12510 
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@2.0.0-beta.7.
Updates
Update setProgressBar documentation. #12454
Added arm/arm64 binaries of mksnapshot. #12524 
Bug Fixes
Fixed regression that prevented disabling menu item accelerators. #12455
In-app purchases fail gracefully now on non-macOS systems. #12512 
macOS
Fixed slow 2D canvas performance on High Sierra. #12448 
Fixed pinch/zoom disable bug. #12510 "
909,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@2.0.0-beta.6.
Bug Fixes
Linux

Changed to use the appname as the tray icon's default tooltip. #12393 

macOS

Fixed tray highlight in darkmode. #12398 
Fixed blocking main process for async dialog. #12407 
Fixed setTitle tray crash. #12356
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@2.0.0-beta.6.
Bug Fixes
Linux
Changed to use the appname as the tray icon's default tooltip. #12393 
macOS
Fixed tray highlight in darkmode. #12398 
Fixed blocking main process for async dialog. #12407 
Fixed setTitle tray crash. #12356"
910,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@2.0.0-beta.5.
## Bug Fixes/Changes 


:wrench: Fix security warning. #12313 


Fix AttributeError: 'dict' object has no attribute 'required'. #12307 


net: change mime type deduction in Change URLRequestAsarJob (#12319). #12333 


Backport (2-0-x) - Better GTK+ Menu color support. #12331 


Backport (2-0-x) - Check menu.popup options are an object. #12330 


Backport (2-0-x) - Update CI to use Node.js 8. #12353 


Backport (2-0-x) - Remove the race condition between new process creation and context release. #12361 


Backport (2-0-x) - Update draggable regions when changing BrowserView. #12370 

","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@2.0.0-beta.5.
Bug Fixes/Changes
:wrench: Fix security warning. #12313 
Fix AttributeError: 'dict' object has no attribute 'required'. #12307 
net: change mime type deduction in Change URLRequestAsarJob (#12319). #12333 
Backport (2-0-x) - Better GTK+ Menu color support. #12331 
Backport (2-0-x) - Check menu.popup options are an object. #12330 
Backport (2-0-x) - Update CI to use Node.js 8. #12353 
Backport (2-0-x) - Remove the race condition between new process creation and context release. #12361 
Backport (2-0-x) - Update draggable regions when changing BrowserView. #12370 "
911,"Updates

Documentation updates. #12279
Document and test BrowserView.{destroy,isDestroyed}. #12298

Bug Fixes

Fixed popup menu position. #12197
[SECURITY] Set appropriate defaults for webview options. #12272
Fixed window open not showing. #12261
Fixed flaky remote setInterval spec. #12266
Fixed require on network share path.  #12286
Fixed flaky navigator.serviceWorker spec. #12289

Linux

Fixed a crash on certain Linux distributions. #12151

macOS

Fixed checkbox state callback bug. #12154

Windows

Fixed passing of exception to the system crash handler. #12258
","Updates
Documentation updates. #12279
Document and test BrowserView.{destroy,isDestroyed}. #12298
Bug Fixes
Fixed popup menu position. #12197
[SECURITY] Set appropriate defaults for webview options. #12272
Fixed window open not showing. #12261
Fixed flaky remote setInterval spec. #12266
Fixed require on network share path.  #12286
Fixed flaky navigator.serviceWorker spec. #12289
Linux
Fixed a crash on certain Linux distributions. #12151
macOS
Fixed checkbox state callback bug. #12154
Windows
Fixed passing of exception to the system crash handler. #12258"
912,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@2.0.0-beta.4.
Updates

Documentation updates.  #12222 #12280 
Enable easy rebuild of native modules for unreleased electron. #12260
Added missing report.length > 1 assertion to spec. #12262
Document and test BrowserView.{destroy,isDestroyed}. #12299 

Bug Fixes

Fixed menubar toggle alt key detection on focus. #12235 
Fixed incorrect warnings in webviews. #12236 
Fixed parent's visibility trumping inherited 'show' option. #12244 
Fixed LocalStorage not persisting. #12239 
Fixed flaky navigator.serviceWorker spec. #12247
Fixed crash opening devtools.  #12245 
Fixed preload script executing twice. #12218 
Fixed to ensure that getLastCrashReport() is actually the last crash report. #12255 
Fixed flaky remote setInterval spec. #12265
[SECURITY] Set appropriate defaults for webview options.  #12292 
Fixed require on network share path. #12287 

Linux

Skip client-certificate test for Linux. #12213 
Fixed issues with notifications. #12229 

macOS

Fixed private API usage issue in mas build (#12264)

Windows

Fixed passing of exception to the system crash handler. #12259
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@2.0.0-beta.4.
Updates
Documentation updates.  #12222 #12280 
Enable easy rebuild of native modules for unreleased electron. #12260
Added missing report.length > 1 assertion to spec. #12262
Document and test BrowserView.{destroy,isDestroyed}. #12299 
Bug Fixes
Fixed menubar toggle alt key detection on focus. #12235 
Fixed incorrect warnings in webviews. #12236 
Fixed parent's visibility trumping inherited 'show' option. #12244 
Fixed LocalStorage not persisting. #12239 
Fixed flaky navigator.serviceWorker spec. #12247
Fixed crash opening devtools.  #12245 
Fixed preload script executing twice. #12218 
Fixed to ensure that getLastCrashReport() is actually the last crash report. #12255 
Fixed flaky remote setInterval spec. #12265
[SECURITY] Set appropriate defaults for webview options.  #12292 
Fixed require on network share path. #12287 
Linux
Skip client-certificate test for Linux. #12213 
Fixed issues with notifications. #12229 
macOS
Fixed private API usage issue in mas build (#12264)
Windows
Fixed passing of exception to the system crash handler. #12259"
913,"Bug Fixes

Added Offscreen rendering improvements. #11730 
[SECURITY] Fixed Integer overflow with PropertyArray issue. #12203 
[SECURITY] Set appropriate defaults for webview options. #12294

### Windows

Fixed support for precision trackpad / mouse scrolling. #12203 
","Bug Fixes
Added Offscreen rendering improvements. #11730 
[SECURITY] Fixed Integer overflow with PropertyArray issue. #12203 
[SECURITY] Set appropriate defaults for webview options. #12294
Windows
Fixed support for precision trackpad / mouse scrolling. #12203 "
914,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@2.0.0-beta.3.
Bug Fixes

[SECURITY] Fixed  Integer overflow with PropertyArray issue. #12133
Fixed context menu click callback. #12170
Fixed popup menu position.  #12181

### Linux

Fixed arm64 crashing. #12178

### macOS

Deprecated getMenuBarHeight. #12137 
Add warning when addTabbedWindow is called on self. #12059 
Fixed setVibrancy crashing. #12171
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@2.0.0-beta.3.
Bug Fixes
[SECURITY] Fixed  Integer overflow with PropertyArray issue. #12133
Fixed context menu click callback. #12170
Fixed popup menu position.  #12181
Linux
Fixed arm64 crashing. #12178
macOS
Deprecated getMenuBarHeight. #12137 
Add warning when addTabbedWindow is called on self. #12059 
Fixed setVibrancy crashing. #12171"
915,"Bug Fixes

Added Offscreen rendering improvements. #11729
Fixed downloading from custom protocols using WebContents.downloadURL. #12100
Fixed net::ERR_INSECURE_RESPONSE on https error.  #12117
[SECURITY] Fixed  Integer overflow with PropertyArray issue. #12117

Linux

[SECURITY] Disabled executable stack. #11955 

Windows

Fixed titlebar displaying for frameless and transparent windows. #11910 
Fixed desktopCapturer to capture the correct screen. #11677 
Fixed support for precision trackpad / mouse scrolling. #12117 
","Bug Fixes
Added Offscreen rendering improvements. #11729
Fixed downloading from custom protocols using WebContents.downloadURL. #12100
Fixed net::ERR_INSECURE_RESPONSE on https error.  #12117
[SECURITY] Fixed  Integer overflow with PropertyArray issue. #12117
Linux
[SECURITY] Disabled executable stack. #11955 
Windows
Fixed titlebar displaying for frameless and transparent windows. #11910 
Fixed desktopCapturer to capture the correct screen. #11677 
Fixed support for precision trackpad / mouse scrolling. #12117 "
916,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@2.0.0-beta.2.
Bug Fixes

Fixed network delegate race condition #12053

macOS

Fixed crash when setting dock menu. #12087
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@2.0.0-beta.2.
Bug Fixes
Fixed network delegate race condition #12053
macOS
Fixed crash when setting dock menu. #12087"
917,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@2.0.0-beta.1.
Upgrades

Upgraded from Chrome 59.0.3071.115 to 61.0.3163.10. #10213
Upgraded from Node 8.2.1 to 8.9.3. #10213
Upgraded from v8 5.9.211.38 to 6.1.534.41. #10213

Breaking API changes

Changed menu.popup signature. #11968
Removed deprecated crashReporter.setExtraParameter #11972
Removed deprecated webContents.setZoomLevelLimits and webFrame.setZoomLevelLimits. #11974
Removed deprecated clipboard methods. #11973
Removed support for boolean parameters for tray.setHighlightMode. #11981

Linux

Switched from GTK2 to GTK3. #10213

Other Changes

Updated license year. #11545
Fixed hexColorDWORDToRGBA for transparent colors. #11557
Added window.loadFile and webContents.loadFile helper methods. #11565
Documentation fixes and improvements.  #11747 #11758 #11770  #11794 #11806  #11841 #11855 #11863 #11881 #11897 #11918 #11950  #11963
Added menu-will-show and menu-will-close menu events.  #11754.
Migrated deprecated web-view method. #11798
Fixed closing a window opened from a browserview. #11799
Added --chromium_dir argument to script/create-dist.py. #11354
Added shutdown event to powerMonitor. #11417
Fixed Bluetooth chooser bug. #11492
Fixed unicode test. #11774
Replaced custom function with Object.values(). #11836
Added API to enable/disable a window. #11832
Added ability to log atom ipc messages. #11880
Added Offscreen rendering improvements. #11728
Updated spellchecker. #11819
Updated to use task scheduler for app.getFileIcon API. #11595
Added affinity option for gathering several BrowserWindows into a single process. #11501
Changed to fire console-message event even when rendering offscreen. #11921
Fixed downloading from custom protocols using WebContents.downloadURL. #11804
Fixed CI test failures. #11944 
Fixed transparent windows losing transparency when devtools detaches. #11956

Linux

[SECURITY] Disabled executable stack. #11999

macOS

Added in-app purchase for MacOS. #11292
Fixed Electron apps canceling restart or shutdown. #11625
Added the ability for saveDialog to list available extensions. #11873
Added support for additional notification actions #11647
Added ability to set macOS notification close button title. #11654
Updated to use Squirrel.Mac that supports CDN releases. #11925

Windows

Added Visual Studio 2017 support. #11656
Fixed hiding tooltip from minimized window. #11644
Fixed desktopCapturer to capture the correct screen. #11664
Fixed disableHardwareAcceleration with transparency. #11704
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@2.0.0-beta.1.
Upgrades
Upgraded from Chrome 59.0.3071.115 to 61.0.3163.10. #10213
Upgraded from Node 8.2.1 to 8.9.3. #10213
Upgraded from v8 5.9.211.38 to 6.1.534.41. #10213
Breaking API changes
Changed menu.popup signature. #11968
Removed deprecated crashReporter.setExtraParameter #11972
Removed deprecated webContents.setZoomLevelLimits and webFrame.setZoomLevelLimits. #11974
Removed deprecated clipboard methods. #11973
Removed support for boolean parameters for tray.setHighlightMode. #11981
Linux
Switched from GTK2 to GTK3. #10213
Other Changes
Updated license year. #11545
Fixed hexColorDWORDToRGBA for transparent colors. #11557
Added window.loadFile and webContents.loadFile helper methods. #11565
Documentation fixes and improvements.  #11747 #11758 #11770  #11794 #11806  #11841 #11855 #11863 #11881 #11897 #11918 #11950  #11963
Added menu-will-show and menu-will-close menu events.  #11754.
Migrated deprecated web-view method. #11798
Fixed closing a window opened from a browserview. #11799
Added --chromium_dir argument to script/create-dist.py. #11354
Added shutdown event to powerMonitor. #11417
Fixed Bluetooth chooser bug. #11492
Fixed unicode test. #11774
Replaced custom function with Object.values(). #11836
Added API to enable/disable a window. #11832
Added ability to log atom ipc messages. #11880
Added Offscreen rendering improvements. #11728
Updated spellchecker. #11819
Updated to use task scheduler for app.getFileIcon API. #11595
Added affinity option for gathering several BrowserWindows into a single process. #11501
Changed to fire console-message event even when rendering offscreen. #11921
Fixed downloading from custom protocols using WebContents.downloadURL. #11804
Fixed CI test failures. #11944 
Fixed transparent windows losing transparency when devtools detaches. #11956
Linux
[SECURITY] Disabled executable stack. #11999
macOS
Added in-app purchase for MacOS. #11292
Fixed Electron apps canceling restart or shutdown. #11625
Added the ability for saveDialog to list available extensions. #11873
Added support for additional notification actions #11647
Added ability to set macOS notification close button title. #11654
Updated to use Squirrel.Mac that supports CDN releases. #11925
Windows
Added Visual Studio 2017 support. #11656
Fixed hiding tooltip from minimized window. #11644
Fixed desktopCapturer to capture the correct screen. #11664
Fixed disableHardwareAcceleration with transparency. #11704"
918,"Note: This is a stable release and should be generally stable for most apps.
Stable release of 1.8.2.  This is the same release as 1.8.2-beta.5, but the version has been updated.","Note: This is a stable release and should be generally stable for most apps.
Stable release of 1.8.2.  This is the same release as 1.8.2-beta.5, but the version has been updated."
919,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@1.8.2-beta.5.
Bug Fixes

Fixed devtools crash. #11673 
[SECURITY] Fixed case-sensitive command line arguments. 

Windows

Fixed issue using disableHardwareAcceleration and transparency. #11710

Other changes

Added mips64el build.
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@1.8.2-beta.5.
Bug Fixes
Fixed devtools crash. #11673 
[SECURITY] Fixed case-sensitive command line arguments. 
Windows
Fixed issue using disableHardwareAcceleration and transparency. #11710
Other changes
Added mips64el build."
920,"Bug Fixes

[SECURITY] Fixed case-sensitive command line arguments. 
","Bug Fixes
[SECURITY] Fixed case-sensitive command line arguments. "
921,"Bug Fixes

[SECURITY] Fixed case-sensitive command line arguments. 
","Bug Fixes
[SECURITY] Fixed case-sensitive command line arguments. "
922,"Bug Fixes

Backport various upstream libcc bugfixes. #11574
Fix crash when using crypto module. #11457
Fix debugger breakpoint regression. #11430
Fix spellchecking in subframes. #11489
Fix menu.popup bugs.
Fix shift not showing in menu for certain accelerators. #11597
Explicitly hide tooltip on window deactivation. #11629

Windows

[SECURITY] Fixed protocol handler bug. CVE-2018-1000006

Other changes

Allow disabling desktop capture throttling. #11692

Windows

Enable Control Flow Guard on Windows builds
","Bug Fixes
Backport various upstream libcc bugfixes. #11574
Fix crash when using crypto module. #11457
Fix debugger breakpoint regression. #11430
Fix spellchecking in subframes. #11489
Fix menu.popup bugs.
Fix shift not showing in menu for certain accelerators. #11597
Explicitly hide tooltip on window deactivation. #11629
Windows
[SECURITY] Fixed protocol handler bug. CVE-2018-1000006
Other changes
Allow disabling desktop capture throttling. #11692
Windows
Enable Control Flow Guard on Windows builds"
923,"Bug Fixes
Windows

[SECURITY] Fixed protocol handler bug. CVE-2018-1000006
","Bug Fixes
Windows
[SECURITY] Fixed protocol handler bug. CVE-2018-1000006"
924,"Bug Fixes
Windows

[SECURITY] Fixed protocol handler bug. CVE-2018-1000006

macOS

Fixed mac IME crack. #11576
","Bug Fixes
Windows
[SECURITY] Fixed protocol handler bug. CVE-2018-1000006
macOS
Fixed mac IME crack. #11576"
925,"Bug Fixes

Fixed crash in custom protocols. #11020
Fixed webrtc crash. electron/libchromiumcontent#393

Linux

Fixed subpixel font rendering with freetype. #11402

macOS

Fixed rendering issues with Nvidia GPU on High Sierra. #10898
Fixed incorrectly cropped TouchBar items. #11141
","Bug Fixes
Fixed crash in custom protocols. #11020
Fixed webrtc crash. electron/libchromiumcontent#393
Linux
Fixed subpixel font rendering with freetype. #11402
macOS
Fixed rendering issues with Nvidia GPU on High Sierra. #10898
Fixed incorrectly cropped TouchBar items. #11141"
926,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@1.8.2-beta.3.
Bug fixes

Fix crash that occurred when calling setApplicationMenu(null). #11055
Fix crash that occurred when emitting an unhandled error on native EventEmitter. #11099
Avoid a race condition in the proxy handler. #11176
Fix rendering of datalist elements. #10510
If executeJavaScript throws an error, pass the error along. #11158
Follow Node's practice of fs.readFile()'s options argument being optional. #11185

macOS

Fix rendering issues with the Nvidia GPU on High Sierra. #10923
Fix random crash on app shutdown. #11125
Add login helper to manage login items in Mac App Store build. #10856
ScrubberItem width is now calculated dynamically. #11038
Fix devtool rendering of offscreen windows. #10510
Fix titleBarStyle: hidden from incorrectly logging an error. #11164

Windows

Fix crash when user typed in a detached console. #10510
Fix datalist elements setting input's value when a suggestion is accepted. #10510

API changes

Add BrowserView.getAllViews() and BrowserView.getFromWebContents(). #11225
Add BrowserView.fromBrowserView(). #11224
Allow BrowserWindows to emit console-message events. #11056
Implement registerStreamProtocol and interceptStreamProtocol. #11008
Expose desktopCapturer in sandbox mode. #11124

Other changes

Allow building for mips64el target. #11208
Add support for PDFs in subframes. #10793
Bump electron-typescript-definitions requirement to 1.2.10 or higher. #11048
Generate API and typescript files during CI, easing doc verification. #11060
Script improvmements. #11103, #11158, #11178,
Documentation updates and fixes. #11009, #11000, #10997, #11079, #11039, #11093, #11100, #11126, #11088, #11145, #11152, #11117, #11184, #11167, #11170, #11059, #11199, #11204, #11203, #11191, #11218, #11217, #11207, #11231
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@1.8.2-beta.3.
Bug fixes
Fix crash that occurred when calling setApplicationMenu(null). #11055
Fix crash that occurred when emitting an unhandled error on native EventEmitter. #11099
Avoid a race condition in the proxy handler. #11176
Fix rendering of datalist elements. #10510
If executeJavaScript throws an error, pass the error along. #11158
Follow Node's practice of fs.readFile()'s options argument being optional. #11185
macOS
Fix rendering issues with the Nvidia GPU on High Sierra. #10923
Fix random crash on app shutdown. #11125
Add login helper to manage login items in Mac App Store build. #10856
ScrubberItem width is now calculated dynamically. #11038
Fix devtool rendering of offscreen windows. #10510
Fix titleBarStyle: hidden from incorrectly logging an error. #11164
Windows
Fix crash when user typed in a detached console. #10510
Fix datalist elements setting input's value when a suggestion is accepted. #10510
API changes
Add BrowserView.getAllViews() and BrowserView.getFromWebContents(). #11225
Add BrowserView.fromBrowserView(). #11224
Allow BrowserWindows to emit console-message events. #11056
Implement registerStreamProtocol and interceptStreamProtocol. #11008
Expose desktopCapturer in sandbox mode. #11124
Other changes
Allow building for mips64el target. #11208
Add support for PDFs in subframes. #10793
Bump electron-typescript-definitions requirement to 1.2.10 or higher. #11048
Generate API and typescript files during CI, easing doc verification. #11060
Script improvmements. #11103, #11158, #11178,
Documentation updates and fixes. #11009, #11000, #10997, #11079, #11039, #11093, #11100, #11126, #11088, #11145, #11152, #11117, #11184, #11167, #11170, #11059, #11199, #11204, #11203, #11191, #11218, #11217, #11207, #11231"
927,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@1.8.2-beta.2.
Bug Fixes

Fixed Electron crashing if user clicks Dev Tools & Zoom options. #10873
Fixed Electron only running 1 require script. #10900
Fixed crash in custom protocols. #10918
[SECURITY] Turn off escape analysis. #10899 
[SECURITY] Use textContent instead innerHTML to remediate DOM based XSS #10537
Fixed crash after main process notification displayed. #10889
Fixed crash on quit when calling Notification.show 2 times.
Fixed crash if autoupdate is enabled. #10995 

Linux

Fixed hanging when opening folder or file. #10902

macOS

Fixed notification onclick incorrectly triggering when clicking close on notification. #10943

Windows

Fixed windows app log path. #10911
Fixed NOT IMPLEMENTED error when calling getAppMetrics(). #10954 
Added workaround for Windows DPI issues. #10972

API Changes

Added did-attach-webview event to WebContents. #10711

Other Changes

Documentation updates and fixes. #10874, #10893, #10890, #10762, #10953, #10936, #11007, #11022
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@1.8.2-beta.2.
Bug Fixes
Fixed Electron crashing if user clicks Dev Tools & Zoom options. #10873
Fixed Electron only running 1 require script. #10900
Fixed crash in custom protocols. #10918
[SECURITY] Turn off escape analysis. #10899 
[SECURITY] Use textContent instead innerHTML to remediate DOM based XSS #10537
Fixed crash after main process notification displayed. #10889
Fixed crash on quit when calling Notification.show 2 times.
Fixed crash if autoupdate is enabled. #10995 
Linux
Fixed hanging when opening folder or file. #10902
macOS
Fixed notification onclick incorrectly triggering when clicking close on notification. #10943
Windows
Fixed windows app log path. #10911
Fixed NOT IMPLEMENTED error when calling getAppMetrics(). #10954 
Added workaround for Windows DPI issues. #10972
API Changes
Added did-attach-webview event to WebContents. #10711
Other Changes
Documentation updates and fixes. #10874, #10893, #10890, #10762, #10953, #10936, #11007, #11022"
928,"Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@1.8.2-beta.1.
Bug Fixes

Fixed issues with webRequest API stability. #10676

macOS

Fixed to allow dragging of window to screen above menubar. #10661
Fixed crash when calling _setEscapeTouchBarItem. #10725
Fixed notification actions not working on High Sierra #10709
Fixed building Electron with 10.13 or later SDK #10696

Windows

Fixed warning message logged when calling process.getCPUUsage(). #10680 
Fixed notification size via font DPI scaling fix. #10715 

API Changes

Added ability to access logs in getPath().  #10191 
Added ability to control BrowserWindow opacity.  #10667
[SECURITY]  Added warning if loading remote content with nodeIntegration enabled. #10708
Added error code to session.setCertificateVerifyProc(proc). #10810

Linux

Added app.setAsDefaultProtocolClient support for Linux. #10670
Changed to use real shared library names for symbol files used for crash dumps. #10812

macOS

Added addTabbedWindow to BrowserWindow. #10508
Added mouse-move event and click event position for the Tray class. #10361
Added  nativeImage.createFromNamedImage(imageName[, hslShift]) to get a nativeImage from a named NSImage.  #10727
Added systemPreferences.removeUserDefault(key). #10746

Other changes

Documentation fixes.  #10677, #10693, #10719, #10744, #10773, #10777, #10612, #10795, #10825, #10534, #10829, #10834
Translated documentation. #10681, #10749, #10748, #10740, #10731, #10730, #10728
Updates to default app and cli usage. #10633, #10712 
No longer require bootstrap to be run for doc changes. #10804
","Note: This is a beta release.  Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@1.8.2-beta.1.
Bug Fixes
Fixed issues with webRequest API stability. #10676
macOS
Fixed to allow dragging of window to screen above menubar. #10661
Fixed crash when calling _setEscapeTouchBarItem. #10725
Fixed notification actions not working on High Sierra #10709
Fixed building Electron with 10.13 or later SDK #10696
Windows
Fixed warning message logged when calling process.getCPUUsage(). #10680 
Fixed notification size via font DPI scaling fix. #10715 
API Changes
Added ability to access logs in getPath().  #10191 
Added ability to control BrowserWindow opacity.  #10667
[SECURITY]  Added warning if loading remote content with nodeIntegration enabled. #10708
Added error code to session.setCertificateVerifyProc(proc). #10810
Linux
Added app.setAsDefaultProtocolClient support for Linux. #10670
Changed to use real shared library names for symbol files used for crash dumps. #10812
macOS
Added addTabbedWindow to BrowserWindow. #10508
Added mouse-move event and click event position for the Tray class. #10361
Added  nativeImage.createFromNamedImage(imageName[, hslShift]) to get a nativeImage from a named NSImage.  #10727
Added systemPreferences.removeUserDefault(key). #10746
Other changes
Documentation fixes.  #10677, #10693, #10719, #10744, #10773, #10777, #10612, #10795, #10825, #10534, #10829, #10834
Translated documentation. #10681, #10749, #10748, #10740, #10731, #10730, #10728
Updates to default app and cli usage. #10633, #10712 
No longer require bootstrap to be run for doc changes. #10804"
929,"Bug Fixes

[SECURITY] Update to Chromium RCE vulnerability fix for older versions of Chromium.
","Bug Fixes
[SECURITY] Update to Chromium RCE vulnerability fix for older versions of Chromium."
930,"Bug Fixes

[SECURITY] Update to Chromium RCE vulnerability fix for older versions of Chromium.

macOS
Fixed issues around update permissions and non-admin users. #10071 #10298
Windows

Fixed downloading updates twice #5057
","Bug Fixes
[SECURITY] Update to Chromium RCE vulnerability fix for older versions of Chromium.
macOS
Fixed issues around update permissions and non-admin users. #10071 #10298
Windows
Fixed downloading updates twice #5057"
931,"Note: This is a beta release. This is the first release running on upgraded versions of Chrome/Node.js/V8 and most likely will have have some instability and/or regressions.
Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@1.8.1.
Upgrades

Upgraded from Chrome 58.0.3029.110 to 59.0.3071.115. #9946
Upgraded from Node 7.9.0 to 8.2.1. #9992
Upgraded from v8 5.8.283.38 to 5.9.211.38. #9946
Upgraded from @types/node ^7.0.18 to ^8.0.24. #10328

Other Changes

Added arm64 builds. #10219
Ensure DesktopCapturers are destroyed when no longer needed. #10223
New guide for implementing updates. #10251
Doc fixes. #10273, #10304, #10306, #10215, #10380, #10453, #10454, #10472, #10481, #10487, #10499, #10497, #10509, #10540, #10550, #10542, #10505, #10326
Fixed sandbox crash when opening a background tab. #10264
Fixed contextIsolation not working when webPreference sandbox is on. #10214
Fixed issue with webContents did-change-theme-color event. #10240
Added tracking of the origin of webRequest events. #10429
Added support for css in content_scripts. #10076
Fixed mixed content errors when loading content from chrome-extension. #9950
Fixed BrowserView auto-resize and BrowserWindow resize event. #10052
Added getMenuItemById(id) to Menu API. #10440
Fixed v.1.8.0 crashes. #10571
Changed to not allow drag on fullscreen window. #10627
[SECURITY] Fixed Chromium RCE vulnerability.

Linux

Added support for indicators in Ubuntu Gnome Session. #10355
Fixed app.makeSingleInstance hanging. #10518

macOS

Fixed issues around update permissions and non-admin users. #10071 #10298
Fixed full screen when resizable is set to true. #8166
Fixed missing file extension in download save dialog. #10121
Fixed occasional crashes on macOS Sierra when inputting with Chinese IME. #7551
Fixed issue closing window if a child modal window is open. #10366
Fixed show option on new BrowserWindow when parent is specified. #8836
Fixed shell.openItem to activate the opened app. #10477

Windows

Fixed uncaught exception on window close. #10275
Fixed Electron crash after close. #10188
Fixed crash copying cropped image to clipboard. #8017
Fixed potential crash in Win32 notifications. #10516
Changed to set duration for Windows 7 notifications based on Control Panel settings. #10517
Fixed browser-process notifications missing/duplicating images. #10610
Fixed for narrowing conversion warnings, minor style change. #10609
Fixed downloading updates twice. #5057

API Changes

Added -webkit-app-region support to BrowserView. #10232
Added a callback option to webContents.print. #10081

macOS

Added support for sound in macOS notifications. #10293
Added app.isInApplicationsFolder() and app.moveToApplicationsFolder(). #10142
Added new roles for macOS native tab menu items. #9086, #10064
Added app.setAccessibilitySupportEnabled(enabled) to enable or disable accessibility support in macOS. #7206, #10305
Added macOS native tab methods to the BrowserWindow API. #10321
Added simple fullscreen mode to the BrowserWindow API. #10254
Added more Handoff related APIs. #9869

Windows

Added support to forward mouse events via win.setIgnoreMouseEvents(ignore[, options]). #10183
","Note: This is a beta release. This is the first release running on upgraded versions of Chrome/Node.js/V8 and most likely will have have some instability and/or regressions.
Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta, or npm i electron@1.8.1.
Upgrades
Upgraded from Chrome 58.0.3029.110 to 59.0.3071.115. #9946
Upgraded from Node 7.9.0 to 8.2.1. #9992
Upgraded from v8 5.8.283.38 to 5.9.211.38. #9946
Upgraded from @types/node ^7.0.18 to ^8.0.24. #10328
Other Changes
Added arm64 builds. #10219
Ensure DesktopCapturers are destroyed when no longer needed. #10223
New guide for implementing updates. #10251
Doc fixes. #10273, #10304, #10306, #10215, #10380, #10453, #10454, #10472, #10481, #10487, #10499, #10497, #10509, #10540, #10550, #10542, #10505, #10326
Fixed sandbox crash when opening a background tab. #10264
Fixed contextIsolation not working when webPreference sandbox is on. #10214
Fixed issue with webContents did-change-theme-color event. #10240
Added tracking of the origin of webRequest events. #10429
Added support for css in content_scripts. #10076
Fixed mixed content errors when loading content from chrome-extension. #9950
Fixed BrowserView auto-resize and BrowserWindow resize event. #10052
Added getMenuItemById(id) to Menu API. #10440
Fixed v.1.8.0 crashes. #10571
Changed to not allow drag on fullscreen window. #10627
[SECURITY] Fixed Chromium RCE vulnerability.
Linux
Added support for indicators in Ubuntu Gnome Session. #10355
Fixed app.makeSingleInstance hanging. #10518
macOS
Fixed issues around update permissions and non-admin users. #10071 #10298
Fixed full screen when resizable is set to true. #8166
Fixed missing file extension in download save dialog. #10121
Fixed occasional crashes on macOS Sierra when inputting with Chinese IME. #7551
Fixed issue closing window if a child modal window is open. #10366
Fixed show option on new BrowserWindow when parent is specified. #8836
Fixed shell.openItem to activate the opened app. #10477
Windows
Fixed uncaught exception on window close. #10275
Fixed Electron crash after close. #10188
Fixed crash copying cropped image to clipboard. #8017
Fixed potential crash in Win32 notifications. #10516
Changed to set duration for Windows 7 notifications based on Control Panel settings. #10517
Fixed browser-process notifications missing/duplicating images. #10610
Fixed for narrowing conversion warnings, minor style change. #10609
Fixed downloading updates twice. #5057
API Changes
Added -webkit-app-region support to BrowserView. #10232
Added a callback option to webContents.print. #10081
macOS
Added support for sound in macOS notifications. #10293
Added app.isInApplicationsFolder() and app.moveToApplicationsFolder(). #10142
Added new roles for macOS native tab menu items. #9086, #10064
Added app.setAccessibilitySupportEnabled(enabled) to enable or disable accessibility support in macOS. #7206, #10305
Added macOS native tab methods to the BrowserWindow API. #10321
Added simple fullscreen mode to the BrowserWindow API. #10254
Added more Handoff related APIs. #9869
Windows
Added support to forward mouse events via win.setIgnoreMouseEvents(ignore[, options]). #10183"
932,"Bug Fixes

[SECURITY] Fixed Chromium RCE vulnerability

Windows

Fixed downloading updates twice #5057
","Bug Fixes
[SECURITY] Fixed Chromium RCE vulnerability
Windows
Fixed downloading updates twice #5057"
933,"Bug Fixes

[SECURITY] Fixed Chromium RCE vulnerability

Linux

Fixed app.makeSingleInstance hanging. #10586

macOS

Fixed missing extension when saving a file without filters #10586
","Bug Fixes
[SECURITY] Fixed Chromium RCE vulnerability
Linux
Fixed app.makeSingleInstance hanging. #10586
macOS
Fixed missing extension when saving a file without filters #10586"
934,"Bug Fixes
macOS

Fixed backspace can not erase the last character during Japanese IME conversion
","Bug Fixes
macOS
Fixed backspace can not erase the last character during Japanese IME conversion"
935,"Electron 1.8.0 was a beta release that was pulled due to security reasons.
This release now only contains the chromedriver and mksnapshot release files as those are needed for electron-chromedriver and electron-mksnapshot and are not vulnerable to the security issue.","Electron 1.8.0 was a beta release that was pulled due to security reasons.
This release now only contains the chromedriver and mksnapshot release files as those are needed for electron-chromedriver and electron-mksnapshot and are not vulnerable to the security issue."
936,"Bug Fixes
macOS

Fixed flicker with high DPI resolutions. #9413

Windows

Fixed Electron crash after close. #10188
Fixed using OneDrive drive with ""files on demand"" feature enabled. #10377

API Changes

Added -webkit-app-region support to BrowserView. #10232

macOS

Added support for sound in macOS notifications. #10293
","Bug Fixes
macOS
Fixed flicker with high DPI resolutions. #9413
Windows
Fixed Electron crash after close. #10188
Fixed using OneDrive drive with ""files on demand"" feature enabled. #10377
API Changes
Added -webkit-app-region support to BrowserView. #10232
macOS
Added support for sound in macOS notifications. #10293"
937,"Bug Fixes

Fixed query string parsing in PDF Viewer #10008
Fixed crash that occurred when loading URL in detached WebContents #9819
Fixed chrome storage access scope to be shared across domains #9951
Fixed content scripts matches #10075
Fixed bug that returned an object instead of an empty string when reading from an empty asar file with 'utf8' option #10160
Prevented async tasks from crashing after the Node environment is destroyed #10099

Linux

Fixed issue where opening menu would cause high CPU usage on certain Linux distributions #10070

macOS

Added code and domain as properties to error events emitted by autoUpdater module #10125
Fixed bug where TouchBarScrubber.continuous was getting ignored #10133

Windows

Added labels for common accept file types #10015

API Changes

Added BrowserView.fromId() which returned the BrowserView with the given id #10039
Added BrowserWindow.addExtension, BrowserWindow.removeExtension, BrowserWindow.getExtensions to add/remove/get Chrome extensions in an Electron app #9918

macOS

Added treatPackageAsDirectory flag to dialog.showOpenDialog, in order to treat packages, such as .app folders, as a directory instead of a file #9834
","Bug Fixes
Fixed query string parsing in PDF Viewer #10008
Fixed crash that occurred when loading URL in detached WebContents #9819
Fixed chrome storage access scope to be shared across domains #9951
Fixed content scripts matches #10075
Fixed bug that returned an object instead of an empty string when reading from an empty asar file with 'utf8' option #10160
Prevented async tasks from crashing after the Node environment is destroyed #10099
Linux
Fixed issue where opening menu would cause high CPU usage on certain Linux distributions #10070
macOS
Added code and domain as properties to error events emitted by autoUpdater module #10125
Fixed bug where TouchBarScrubber.continuous was getting ignored #10133
Windows
Added labels for common accept file types #10015
API Changes
Added BrowserView.fromId() which returned the BrowserView with the given id #10039
Added BrowserWindow.addExtension, BrowserWindow.removeExtension, BrowserWindow.getExtensions to add/remove/get Chrome extensions in an Electron app #9918
macOS
Added treatPackageAsDirectory flag to dialog.showOpenDialog, in order to treat packages, such as .app folders, as a directory instead of a file #9834"
938,"Bug Fixes

Backported a Chrome fix where inputting accented letters in  tags
would result in double letters. #10166
Backported a fix that prevents async tasks from crashing after the Node 
environment is destroyed. #10099

Linux

Backported a fix where the dbus menu implementation of KDE would send the about-to-show signal whenever the menu has been changed, resulting in an infinite loop. #10070
Backported a fix where submenu items in tray menus were not emitting click events. #10166
","Bug Fixes
Backported a Chrome fix where inputting accented letters in  tags
would result in double letters. #10166
Backported a fix that prevents async tasks from crashing after the Node 
environment is destroyed. #10099
Linux
Backported a fix where the dbus menu implementation of KDE would send the about-to-show signal whenever the menu has been changed, resulting in an infinite loop. #10070
Backported a fix where submenu items in tray menus were not emitting click events. #10166"
939,"Bug Fixes

[SECURITY] Fixed an issue where windows using nativeWindowOpen could
  lose their configured webContents options when navigating URLs. #9972
Fixed an issue where the dev tools did not open when using mixed sandbox
  mode. #9983
Fixed an issue where the native dialogs did not allow any file to be selected
  from <input> elements using accept attributes. #9745
Fixed an issue where dev tool extension content scripts were not ignoring
  the fragment when matching against the page URL. #9953
Fixed an issue where calling show() on a modal window would cause the
  parent window to not be re-enabled when the modal was closed. #9962

macOS

Fixed an issue where the IME did not properly input certain characters. #9709
Fixed an issue where alwaysOnTop windows would not reappear correctly
  after being restored from a miniaturized position. #9695

Linux

Fixed Tray objects not properly dispatching a click event when the first
  subitem was selected. #9967

API Changes

Added a app.disableDomainBlockingFor3DAPIs() API to disable the Chrome
  behavior of disabling 3D APIs for domains where the GPU process crashes
  too frequently. #10003
The new-window event now supports configuring the webPreferences of
  the window being opened from a window using the sandbox or
  nativeWindowOpen options. #9972

macOS

A subtitle option is now supported when creating notifications. #9903
Added a fullscreenWindowTitle option to the BrowserWindow constructor
  to show the window title when in fullscreen for windows using a custom
  titleBarStyle. #9788
","Bug Fixes
[SECURITY] Fixed an issue where windows using nativeWindowOpen could
  lose their configured webContents options when navigating URLs. #9972
Fixed an issue where the dev tools did not open when using mixed sandbox
  mode. #9983
Fixed an issue where the native dialogs did not allow any file to be selected
  from  elements using accept attributes. #9745
Fixed an issue where dev tool extension content scripts were not ignoring
  the fragment when matching against the page URL. #9953
Fixed an issue where calling show() on a modal window would cause the
  parent window to not be re-enabled when the modal was closed. #9962
macOS
Fixed an issue where the IME did not properly input certain characters. #9709
Fixed an issue where alwaysOnTop windows would not reappear correctly
  after being restored from a miniaturized position. #9695
Linux
Fixed Tray objects not properly dispatching a click event when the first
  subitem was selected. #9967
API Changes
Added a app.disableDomainBlockingFor3DAPIs() API to disable the Chrome
  behavior of disabling 3D APIs for domains where the GPU process crashes
  too frequently. #10003
The new-window event now supports configuring the webPreferences of
  the window being opened from a window using the sandbox or
  nativeWindowOpen options. #9972
macOS
A subtitle option is now supported when creating notifications. #9903
Added a fullscreenWindowTitle option to the BrowserWindow constructor
  to show the window title when in fullscreen for windows using a custom
  titleBarStyle. #9788"
940,"Bug Fixes

The --inspect and --inspect-brk flags are now supported when spawning
  child node processes. #9739
Removed internal use of the deprecated node Buffer constructor and instead
  used Buffer.from. #9733
Fixed an issue where PDFs would zoom incorrectly. #9700
Fixed an issue where window visibility events may not have been
  triggered correctly in <webview> pages. #9741
Fixed an exception being thrown when floating-point numbers were passed to
  webContents.printToPDF as the pageSize height or width. #9396
Fixed a crash when using the file chooser from a BrowserView. #9828

Linux

Fixed an issue where the tray icon would not display on Ubuntu 17.04. #9716

macOS

Fixed an issue where the wrong file extension would display in the save dialog
  when filters were used. #9610
Fixed an issue where the title bar would incorrectly display in frameless
  windows on 10.13 (High Sierra). #9798

Windows

Fixed an issue where windows would become unresponsive if started initially
  as fullscreen and then made non-fullscreen. #9645

API Changes

The crash reporter now accepts server responses in the range 200 - 299.
  Previously it only accepted a 200 response. #9738
dialog.showSaveDialog now shows the last selected directory when the
  defaultPath is not absolute. #9588
Added an experimental webContents.setIgnoreMenuShortcuts(ignore) API to
  ignore menu keyboard shortcuts for a specific page.
Added an experimental app.enableMixedSandbox() API that adds the
  --enable-sandbox flag to any BrowserWindow instances or <webview> tags
  created with the sandbox: true option.
Added several additional keyboard shortcuts to the integrated PDF viewer.
  #9892

macOS

A new-window-for-tab event is now emitted on app when the native
  new tab button is pressed. #9725
Menu accelerators are now displayed with the shift indicator instead of
  their shifted character equivalents. For example, CommandOrControl+Shift+1
  will now display in the menu as ⇧⌘1 instead of ⌘!. #9743
Added support for button notification actions. #9837
Tray instances now emit mouse-enter and mouse-leave events. #9760

Windows

The Visual C++ runtime is now dynamic linked instead of statically linked.
  #9443
","Bug Fixes
The --inspect and --inspect-brk flags are now supported when spawning
  child node processes. #9739
Removed internal use of the deprecated node Buffer constructor and instead
  used Buffer.from. #9733
Fixed an issue where PDFs would zoom incorrectly. #9700
Fixed an issue where window visibility events may not have been
  triggered correctly in  pages. #9741
Fixed an exception being thrown when floating-point numbers were passed to
  webContents.printToPDF as the pageSize height or width. #9396
Fixed a crash when using the file chooser from a BrowserView. #9828
Linux
Fixed an issue where the tray icon would not display on Ubuntu 17.04. #9716
macOS
Fixed an issue where the wrong file extension would display in the save dialog
  when filters were used. #9610
Fixed an issue where the title bar would incorrectly display in frameless
  windows on 10.13 (High Sierra). #9798
Windows
Fixed an issue where windows would become unresponsive if started initially
  as fullscreen and then made non-fullscreen. #9645
API Changes
The crash reporter now accepts server responses in the range 200 - 299.
  Previously it only accepted a 200 response. #9738
dialog.showSaveDialog now shows the last selected directory when the
  defaultPath is not absolute. #9588
Added an experimental webContents.setIgnoreMenuShortcuts(ignore) API to
  ignore menu keyboard shortcuts for a specific page.
Added an experimental app.enableMixedSandbox() API that adds the
  --enable-sandbox flag to any BrowserWindow instances or  tags
  created with the sandbox: true option.
Added several additional keyboard shortcuts to the integrated PDF viewer.
  #9892
macOS
A new-window-for-tab event is now emitted on app when the native
  new tab button is pressed. #9725
Menu accelerators are now displayed with the shift indicator instead of
  their shifted character equivalents. For example, CommandOrControl+Shift+1
  will now display in the menu as ⇧⌘1 instead of ⌘!. #9743
Added support for button notification actions. #9837
Tray instances now emit mouse-enter and mouse-leave events. #9760
Windows
The Visual C++ runtime is now dynamic linked instead of statically linked.
  #9443"
941,"Bug Fixes

Fixed a crash loading URLs coming from
  RenderFrameHostImpl::SetNavigationHandle. #9674
Fixed an issue where the window.history.pushState() API did not behave
  correctly on certain pages. #9468
Fixed an issue where document.hidden, document.visibilityState, and the
  visibilitychange event did not behave correctly. Also windows now report as
  hidden when they are occluded on macOS. #9178

API Changes

Added support for <datalist> elements on Windows and Linux. #9535
Added support for creating/showing Notification objects from the main
  process. #9269
Added a app.getGPUFeatureStatus() API that returns the information
  displayed in the chrome://gpu page. #9623
Added support for specifying a powerPreference when creating a wegbl-based
  <canvas> context. #9704

macOS

Added a screen.getMenuBarHeight() API. #9572
Added an experimental customButtonsOnHover setting to the BrowserWindow
titleBarStyle option that draws custom close, minimize, and full screen
  buttons on hover. #8958
","Bug Fixes
Fixed a crash loading URLs coming from
  RenderFrameHostImpl::SetNavigationHandle. #9674
Fixed an issue where the window.history.pushState() API did not behave
  correctly on certain pages. #9468
Fixed an issue where document.hidden, document.visibilityState, and the
  visibilitychange event did not behave correctly. Also windows now report as
  hidden when they are occluded on macOS. #9178
API Changes
Added support for  elements on Windows and Linux. #9535
Added support for creating/showing Notification objects from the main
  process. #9269
Added a app.getGPUFeatureStatus() API that returns the information
  displayed in the chrome://gpu page. #9623
Added support for specifying a powerPreference when creating a wegbl-based

 context. #9704

macOS

Added a screen.getMenuBarHeight() API. #9572
Added an experimental customButtonsOnHover setting to the BrowserWindow
titleBarStyle option that draws custom close, minimize, and full screen
  buttons on hover. #8958


"
942,"Bug Fixes

Fixed an issue where sandboxed renderer processes would throw remote errors
  when reloaded. #9389
Fixed a crash when opening a window from a <webview> tag that was using
  the nativeWindowOpen option. #9568
The built-in PDF viewer plugin is now disabled if the plugins option
  is disabled on the BrowserWindow. #9507
Backported a Chrome fix where inputting accented letters in <webview> tags
  would result in double letters. #9508
Backported a Chrome fix where the dev tools would not work correctly
  in certain locales. #9551
Backported a Chrome fix where the work area on Windows would not update
  or emit change events when the taskbar was moved. #9551
Backported a Chrome fix where SVG images would not render correctly in
  certain locales. #9551
Backported a Chrome fix where pressing backspace would not delete the last
  character in an input field using certain keyboard layouts. #9557
Backported a Chrome fix where pinch zooming in a <webview> tag would
  incorrectly zoom the BrowserWindow. #9592

API Changes

Added support for debugging the main process using --inspect and
  --inspect-brk and connecting via the chrome://inspect page in Chrome. #9473
Added support for specifying a deviceName to webContents.print. #8596
Added a webContents.getPrinters() API to get a list of the available
  printers. #8596
shell.moveItemToTrash now supports the gio trash implementation on Linux.
  #9518
The <webview> tag can now be enabled in windows that have nodeIntegration
  disabled. This is configurable via the new webviewTag option to the
  BrowserWindow constructor. It defaults to the value of the nodeIntegration
  option if unspecified. See the webview/security docs for more information.
  #9397
Added a clipboard.writeBuffer(format, buffer) API to write a raw buffer to
  the clipboard as a custom format. #9243
Added a new app.getAppMetrics() API that returns the memory and CPU
  usage information for all processes. This replaces the
  app.getAppMemoryInfo() API which is now deprecated. #9486
","Bug Fixes
Fixed an issue where sandboxed renderer processes would throw remote errors
  when reloaded. #9389
Fixed a crash when opening a window from a  tag that was using
  the nativeWindowOpen option. #9568
The built-in PDF viewer plugin is now disabled if the plugins option
  is disabled on the BrowserWindow. #9507
Backported a Chrome fix where inputting accented letters in  tags
  would result in double letters. #9508
Backported a Chrome fix where the dev tools would not work correctly
  in certain locales. #9551
Backported a Chrome fix where the work area on Windows would not update
  or emit change events when the taskbar was moved. #9551
Backported a Chrome fix where SVG images would not render correctly in
  certain locales. #9551
Backported a Chrome fix where pressing backspace would not delete the last
  character in an input field using certain keyboard layouts. #9557
Backported a Chrome fix where pinch zooming in a  tag would
  incorrectly zoom the BrowserWindow. #9592
API Changes
Added support for debugging the main process using --inspect and
  --inspect-brk and connecting via the chrome://inspect page in Chrome. #9473
Added support for specifying a deviceName to webContents.print. #8596
Added a webContents.getPrinters() API to get a list of the available
  printers. #8596
shell.moveItemToTrash now supports the gio trash implementation on Linux.
  #9518
The  tag can now be enabled in windows that have nodeIntegration
  disabled. This is configurable via the new webviewTag option to the
  BrowserWindow constructor. It defaults to the value of the nodeIntegration
  option if unspecified. See the webview/security docs for more information.
  #9397
Added a clipboard.writeBuffer(format, buffer) API to write a raw buffer to
  the clipboard as a custom format. #9243
Added a new app.getAppMetrics() API that returns the memory and CPU
  usage information for all processes. This replaces the
  app.getAppMemoryInfo() API which is now deprecated. #9486"
943,"Bug Fixes

[SECURITY] Backported an upstream Node.js fix where StartCom and WoSign certificates
  are now rejected when making HTTPS requests. #9499
Fixed an issue where sandboxed renderer process would throw remote errors
  when reloaded. #9505
The built-in PDF viewer plugin is now disabled if the plugins setting
  is disabled on the BrowserWindow. #9564
Backported an upstream Chrome fix where media requests would not be cached
  properly. #9586
Backported an upstream Chrome fix where the backspace character did not
  delete the last character in certain keyboard layouts. #9586
","Bug Fixes
[SECURITY] Backported an upstream Node.js fix where StartCom and WoSign certificates
  are now rejected when making HTTPS requests. #9499
Fixed an issue where sandboxed renderer process would throw remote errors
  when reloaded. #9505
The built-in PDF viewer plugin is now disabled if the plugins setting
  is disabled on the BrowserWindow. #9564
Backported an upstream Chrome fix where media requests would not be cached
  properly. #9586
Backported an upstream Chrome fix where the backspace character did not
  delete the last character in certain keyboard layouts. #9586"
944,"Bug Fixes

Fixed a crash when launching with the --debug or --debug-brk
  command line flags. #9436
Fixed several issues with the electron.d.ts TypeScript definition file.
Popup windows and <webview> tags are now supported by the offscreen
  rendering option. #8839
Fixed an issue where service worker scripts would not load when using
  protocol.interceptBufferProtocol. #9360

API Changes

Added support for using Chrome's default window.open implementation
  via the nativeWindowOpen option to the BrowserWindow constructor. #8963
Added a will-prevent-unload event to webContents that can be used to
  prevent a page from preventing the unload of a page. #9331
Added support for specifying the maximum disk space used by the cache
  via the --disk-cache-size Chrome option. #9435
Added a webContents.getOSProcessId() API to get the operating system
  pid for a renderer process. #9222
","Bug Fixes
Fixed a crash when launching with the --debug or --debug-brk
  command line flags. #9436
Fixed several issues with the electron.d.ts TypeScript definition file.
Popup windows and  tags are now supported by the offscreen
  rendering option. #8839
Fixed an issue where service worker scripts would not load when using
  protocol.interceptBufferProtocol. #9360
API Changes
Added support for using Chrome's default window.open implementation
  via the nativeWindowOpen option to the BrowserWindow constructor. #8963
Added a will-prevent-unload event to webContents that can be used to
  prevent a page from preventing the unload of a page. #9331
Added support for specifying the maximum disk space used by the cache
  via the --disk-cache-size Chrome option. #9435
Added a webContents.getOSProcessId() API to get the operating system
  pid for a renderer process. #9222"
945,"Bug Fixes

Fixed several issues with the electron.d.ts TypeScript definition file. https://github.com/electron/electron/pull/9484
","Bug Fixes
Fixed several issues with the electron.d.ts TypeScript definition file. link"
946,"Note: This is a beta release. This is the first release running on upgraded versions of Chrome/Node.js/V8 and most likely will have have some instability and/or regressions.
Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta.
Upgrades

Upgraded from Chrome 56.0.2924.87 to 58.0.3029.110. #9116
Upgraded from Node 7.4.0 to 7.9.0. #9116
Upgraded from v8 5.6.326.50 to 5.8.283.38. #9116
Updated the NODE_MODULE_VERSION/process.versions.modules value from 53
  to 54. #9116

Other Changes

The chromedriver asset released with every new minor Electron release now
  contains the Electron version in the file name. #8682
","Note: This is a beta release. This is the first release running on upgraded versions of Chrome/Node.js/V8 and most likely will have have some instability and/or regressions.
Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta.
Upgrades
Upgraded from Chrome 56.0.2924.87 to 58.0.3029.110. #9116
Upgraded from Node 7.4.0 to 7.9.0. #9116
Upgraded from v8 5.6.326.50 to 5.8.283.38. #9116
Updated the NODE_MODULE_VERSION/process.versions.modules value from 53
  to 54. #9116
Other Changes
The chromedriver asset released with every new minor Electron release now
  contains the Electron version in the file name. #8682"
947,"Bug Fixes

Fixed an issue where beforeunload would not correctly fire after
  reloading. #9292

API Changes

Added a app.getAppMemoryInfo() API with memory details for each process
  associated with the app. #9214
Added process.getCPUUsage() and process.getIOCounters() APIs. #9373
process.getProcessMemoryInfo() and process.getSystemMemoryInfo() are now
  callable from sandboxed renderer processes. #9333
A Typescript definition file, electron.d.ts, is now provided with each
  release. #7857

macOS

Added support for changing the tracking mode of TouchBarSegmentedControl
  items via a new mode property. #9315

Windows

Added support for the dialog.showCertificateTrustDialog() API. #9242
","Bug Fixes
Fixed an issue where beforeunload would not correctly fire after
  reloading. #9292
API Changes
Added a app.getAppMemoryInfo() API with memory details for each process
  associated with the app. #9214
Added process.getCPUUsage() and process.getIOCounters() APIs. #9373
process.getProcessMemoryInfo() and process.getSystemMemoryInfo() are now
  callable from sandboxed renderer processes. #9333
A Typescript definition file, electron.d.ts, is now provided with each
  release. #7857
macOS
Added support for changing the tracking mode of TouchBarSegmentedControl
  items via a new mode property. #9315
Windows
Added support for the dialog.showCertificateTrustDialog() API. #9242"
948,"Bug Fixes

[SECURITY] Fixed an issue where the default app could render incorrectly depending
  on the path Electron was installed into. #9249
[SECURITY] Fixed an issue where certain built-in window APIs like alert, confirm,
  open, history.go, and postMessage would throw errors in the main process
  instead of the renderer processes when the arguments were invalid. #9252
[SECURITY] Fixed an issue where chrome-devtools: URLs would incorrectly override certain window options. #9278
[SECURITY] Fixed an issue where certain valid frame names passed to window.open would
  throw errors in the main process. #9287
Fixed a memory leak in windows that have the sandbox option enabled. #9314
Fixed a crash when closing a window from within the callback to certain
  emitted events. #9113
[SECURITY] Fixed an issue when using postMessage across windows  where the
  targetOrigin parameter was not correctly compared against the source
  origin. #9301
Fixed a debugger crash that would occur parsing certain protocol messages.
  #9322
[SECURITY] Fixed an issue where specifying webPreferences in the features parameter
  to window.open would throw an error in the main process. #9289

macOS

Fixed an issue where the Error emitted on autoUpdater error events
  would be missing the message and stack properties when serialized to JSON
  or sent over IPC. #9255

API Changes

The module search path used by require is now set to the application root
  for non-file: URLs such as about:blank. #9095
[SECURITY] The javascript option is now disabled in windows opened from a window that
  already has it disabled, similar to the nodeIntegration option. #9250

macOS

sheet-begin and sheet-end events are now emitted by BrowserWindow
  instances when dialog sheets are presented/dismissed. #9108

Windows

A session-end event is now emitted by BrowserWindow instances when the
  OS session is ending. #9254
","Bug Fixes
[SECURITY] Fixed an issue where the default app could render incorrectly depending
  on the path Electron was installed into. #9249
[SECURITY] Fixed an issue where certain built-in window APIs like alert, confirm,
  open, history.go, and postMessage would throw errors in the main process
  instead of the renderer processes when the arguments were invalid. #9252
[SECURITY] Fixed an issue where chrome-devtools: URLs would incorrectly override certain window options. #9278
[SECURITY] Fixed an issue where certain valid frame names passed to window.open would
  throw errors in the main process. #9287
Fixed a memory leak in windows that have the sandbox option enabled. #9314
Fixed a crash when closing a window from within the callback to certain
  emitted events. #9113
[SECURITY] Fixed an issue when using postMessage across windows  where the
  targetOrigin parameter was not correctly compared against the source
  origin. #9301
Fixed a debugger crash that would occur parsing certain protocol messages.
  #9322
[SECURITY] Fixed an issue where specifying webPreferences in the features parameter
  to window.open would throw an error in the main process. #9289
macOS
Fixed an issue where the Error emitted on autoUpdater error events
  would be missing the message and stack properties when serialized to JSON
  or sent over IPC. #9255
API Changes
The module search path used by require is now set to the application root
  for non-file: URLs such as about:blank. #9095
[SECURITY] The javascript option is now disabled in windows opened from a window that
  already has it disabled, similar to the nodeIntegration option. #9250
macOS
sheet-begin and sheet-end events are now emitted by BrowserWindow
  instances when dialog sheets are presented/dismissed. #9108
Windows
A session-end event is now emitted by BrowserWindow instances when the
  OS session is ending. #9254"
949,"
Backported remote module bug fixes from 1.4.x release line. #9240 
",Backported remote module bug fixes from 1.4.x release line. #9240 
950,"Bug Fixes

Fixed an issue where app.exit() did not close all open windows. #9133

macOS

Fixed an issue where setting scrollBounce to true did not enable it. #9134
Fixed a missing warning icon when calling dialog.showMessageBox. #9187

Windows

Fixed an issue where frameless windows would overflow the screen boundaries
  when maximized. #9167
Fixed a crash after performing text selections using touch gestures. #9204
Removed the unused xinput1_3.dll from the distribution. #9157
Back-ported an upstream Chrome fix for non-client area scaling when the
  screen DPI changes on Windows 10. #9219

API Changes

Added an experimental BrowserView class that is an alternative to the
  <webview> tag. #9166
Added a flushStore(callback) API to the Cookies module that writes
  any unwritten cookie data to disk. #9194

macOS

Added an iconPosition property to TouchBarButton items to change the icon
  position. #9208

Windows

Added support for notifications on Windows 7. #9168
Enabled per-monitor DPI awareness in the app manifest. #8786
","Bug Fixes
Fixed an issue where app.exit() did not close all open windows. #9133
macOS
Fixed an issue where setting scrollBounce to true did not enable it. #9134
Fixed a missing warning icon when calling dialog.showMessageBox. #9187
Windows
Fixed an issue where frameless windows would overflow the screen boundaries
  when maximized. #9167
Fixed a crash after performing text selections using touch gestures. #9204
Removed the unused xinput1_3.dll from the distribution. #9157
Back-ported an upstream Chrome fix for non-client area scaling when the
  screen DPI changes on Windows 10. #9219
API Changes
Added an experimental BrowserView class that is an alternative to the
   tag. #9166
Added a flushStore(callback) API to the Cookies module that writes
  any unwritten cookie data to disk. #9194
macOS
Added an iconPosition property to TouchBarButton items to change the icon
  position. #9208
Windows
Added support for notifications on Windows 7. #9168
Enabled per-monitor DPI awareness in the app manifest. #8786"
951,"Bug Fixes

Fixed a remote module issue where errors thrown in the main process while
  setting remote properties would not be re-thrown in the renderer process.
  #9097
Fixed a remote module issue where certain remote objects could not be set as
  remote properties. #9101
Back-ported an upstream Node.js bug fix where processes forked with the
  --eval argument would not receive messages. #9132

macOS

Fixed an issue where popover touch bar items would not update correctly. #9028

Windows

Fixed an issue where print jobs would stay in the spooling state indefinitely
  and selected page ranges would not print correctly. #9111

API Changes
Linux

kioclient will now be used on KDE when shell.moveItemToTrash is called.
  #8528

macOS

Added a dialog.showCertificateTrustDialog API that prompts the user
  to accept a self-signed or untrusted certificate. #9099
Added support for replacing the esc button on the touch bar with a custom
  item. #9023
","Bug Fixes
Fixed a remote module issue where errors thrown in the main process while
  setting remote properties would not be re-thrown in the renderer process.
  #9097
Fixed a remote module issue where certain remote objects could not be set as
  remote properties. #9101
Back-ported an upstream Node.js bug fix where processes forked with the
  --eval argument would not receive messages. #9132
macOS
Fixed an issue where popover touch bar items would not update correctly. #9028
Windows
Fixed an issue where print jobs would stay in the spooling state indefinitely
  and selected page ranges would not print correctly. #9111
API Changes
Linux
kioclient will now be used on KDE when shell.moveItemToTrash is called.
  #8528
macOS
Added a dialog.showCertificateTrustDialog API that prompts the user
  to accept a self-signed or untrusted certificate. #9099
Added support for replacing the esc button on the touch bar with a custom
  item. #9023"
952,"Bug Fixes
Windows

Fixed an issue where printing selected pages did not work. #9044 
","Bug Fixes
Windows
Fixed an issue where printing selected pages did not work. #9044 "
953,"Bug Fixes

Fixed an issue where Electron could not use the version of ffmpeg that
  does not include proprietary codecs. #9057
Fixed an issue where drag and drop events did not work properly across
  <webview> tags. #9037
Fixed an issue where the geolocation API could hang the UI thread and
  crash the renderer process. #8923
Fixed an uncaught error when making a request via the net module
  and the response's content encoding was not supported. #9001
Fixed a crash that would occur on certain page navigations. #9043
Fixed an issue where net module requests did not support non-string
  header values. #9062

Windows

Fixed an issue where escaped & characters could not be used in top-level
  menu item labels. #8984

API Changes

The crashReporter module is now available in sandboxed renderer processes.
  #8956
Added support for controlling how redirects are handled in the net module.
  #9007
Added editMenu and windowMenu menu item roles that include the standard
  OS submenu items. #8880
Added support for a tabbingIdentifier option to the BrowserWindow
  constructor that enables groupable native tabs on macOS 10.12+. #9052

Windows

The uploadToServer option to crashReporter.start is now supported. #9053
","Bug Fixes
Fixed an issue where Electron could not use the version of ffmpeg that
  does not include proprietary codecs. #9057
Fixed an issue where drag and drop events did not work properly across
   tags. #9037
Fixed an issue where the geolocation API could hang the UI thread and
  crash the renderer process. #8923
Fixed an uncaught error when making a request via the net module
  and the response's content encoding was not supported. #9001
Fixed a crash that would occur on certain page navigations. #9043
Fixed an issue where net module requests did not support non-string
  header values. #9062
Windows
Fixed an issue where escaped & characters could not be used in top-level
  menu item labels. #8984
API Changes
The crashReporter module is now available in sandboxed renderer processes.
  #8956
Added support for controlling how redirects are handled in the net module.
  #9007
Added editMenu and windowMenu menu item roles that include the standard
  OS submenu items. #8880
Added support for a tabbingIdentifier option to the BrowserWindow
  constructor that enables groupable native tabs on macOS 10.12+. #9052
Windows
The uploadToServer option to crashReporter.start is now supported. #9053"
954,"Bug Fixes

Fixed an issue where APIs like webContents.executeJavaScript would fail
  if the loaded page had deleted the Promise global. #8845
Fixed an issue where the zoom level would reset incorrectly. #8864
Fixed an issue where plugins, like widevine, were not initialized fully
  when a window was created. #8907
Fixed a crash when taking heap snapshots. #8926
Fixed an error being thrown when calling toString on a remote
  function. #8890
Fixed an issue where specifying an object to the Menu.popup API would
  throw an error if the optional async property was not set. #8974
Fixed a crash when quitting the app. #8971

Windows

Custom V8 snapshots now load correctly. #8926

API Changes

Added support for native PDF rendering. #8435
Added support for Node integration in web workers. #8852
Several NativeImage APIs now support a scaleFactor option like
  toDataURL, toBitmap, getBitmap, and toPNG. #8849
NativeImage now has an addRepresentation method to build up an image
  with different representations at different scale factors. #8858
Buffer objects are now supported over ipcRenderer when using sandbox
  mode. #8900
The remote module is now available when using sandbox mode. #8939
Added a clipboard.readBuffer API to read a custom format type from
  the clipboard as a Buffer. #8942

macOS

Added support for creating segmented touch bar items. #8887
Added support for creating scrubber touch bar items. #8910

Linux

The uploadToServer option to crashReporter.start is now supported. #8883
","Bug Fixes
Fixed an issue where APIs like webContents.executeJavaScript would fail
  if the loaded page had deleted the Promise global. #8845
Fixed an issue where the zoom level would reset incorrectly. #8864
Fixed an issue where plugins, like widevine, were not initialized fully
  when a window was created. #8907
Fixed a crash when taking heap snapshots. #8926
Fixed an error being thrown when calling toString on a remote
  function. #8890
Fixed an issue where specifying an object to the Menu.popup API would
  throw an error if the optional async property was not set. #8974
Fixed a crash when quitting the app. #8971
Windows
Custom V8 snapshots now load correctly. #8926
API Changes
Added support for native PDF rendering. #8435
Added support for Node integration in web workers. #8852
Several NativeImage APIs now support a scaleFactor option like
  toDataURL, toBitmap, getBitmap, and toPNG. #8849
NativeImage now has an addRepresentation method to build up an image
  with different representations at different scale factors. #8858
Buffer objects are now supported over ipcRenderer when using sandbox
  mode. #8900
The remote module is now available when using sandbox mode. #8939
Added a clipboard.readBuffer API to read a custom format type from
  the clipboard as a Buffer. #8942
macOS
Added support for creating segmented touch bar items. #8887
Added support for creating scrubber touch bar items. #8910
Linux
The uploadToServer option to crashReporter.start is now supported. #8883"
955,"
Fixed an issue where custom v8 snapshots did not load on Windows.  #8922
",Fixed an issue where custom v8 snapshots did not load on Windows.  #8922
956,"Note: This is a beta release. This is release is running on an
upgraded version of Chrome and may have some instability and/or regressions.
Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta.
Bug Fixes

Fixed a crash in preload scripts when using the fetch API when context
  isolation was enabled. #8804
The Node environment is now properly destroyed when V8 contexts are released.
  #8811
Fixed an issue where the done event would be emitted twice for canceled
  DownloadItem instances. #8678
Fixed a crash when loading a URL while there was a pending navigation entry.
  #8724
Fixed an issue where the promise returned from webContents.executeJavaScript
  would not resolve when no callback was specified. #8744

Windows

Fixed an issue where process.windowStore would be incorrect on machines with
  a non-standard WindowsApps folder location. #8806

API Changes

Added a baseURLForDataURL option to the loadURL API that can be used
  to set the base URL to load relative paths from in data URLs. #8799

macOS

Added an experimental touch bar API that can be set on a window via
  BrowserWindow.setTouchBar. #8095
","Note: This is a beta release. This is release is running on an
upgraded version of Chrome and may have some instability and/or regressions.
Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta.
Bug Fixes
Fixed a crash in preload scripts when using the fetch API when context
  isolation was enabled. #8804
The Node environment is now properly destroyed when V8 contexts are released.
  #8811
Fixed an issue where the done event would be emitted twice for canceled
  DownloadItem instances. #8678
Fixed a crash when loading a URL while there was a pending navigation entry.
  #8724
Fixed an issue where the promise returned from webContents.executeJavaScript
  would not resolve when no callback was specified. #8744
Windows
Fixed an issue where process.windowStore would be incorrect on machines with
  a non-standard WindowsApps folder location. #8806
API Changes
Added a baseURLForDataURL option to the loadURL API that can be used
  to set the base URL to load relative paths from in data URLs. #8799
macOS
Added an experimental touch bar API that can be set on a window via
  BrowserWindow.setTouchBar. #8095"
957,"Bug Fixes

Fixed an issue where the flash context menu would throw an error when
  opened when fullscreen. #8739
Fixed an issue where the Buffer global would be unavailable in modules
  required from preload scripts when node integration was disabled. #8758
Fixed a console warning message about a potential listener leak when more
  than 10 <webview> tags were in a page. #8742
Fixed an issue where no such module errors would be incorrectly thrown in the
  renderer process referencing browser process Electron modules. #8766

macOS

Fixed an issue where Quick Look would not work correctly when opened from a
  file dialog. #8745

API Changes

Added a new async option to the menu.popup API that causes the method
  to return immediately instead of after the menu is closed on all platforms
  and also no longer blocks rendering updates on macOS. #8702

macOS

The dialog.showMessageBox API now supports the cancelId property
  similar to other platforms. #8733
","Bug Fixes
Fixed an issue where the flash context menu would throw an error when
  opened when fullscreen. #8739
Fixed an issue where the Buffer global would be unavailable in modules
  required from preload scripts when node integration was disabled. #8758
Fixed a console warning message about a potential listener leak when more
  than 10  tags were in a page. #8742
Fixed an issue where no such module errors would be incorrectly thrown in the
  renderer process referencing browser process Electron modules. #8766
macOS
Fixed an issue where Quick Look would not work correctly when opened from a
  file dialog. #8745
API Changes
Added a new async option to the menu.popup API that causes the method
  to return immediately instead of after the menu is closed on all platforms
  and also no longer blocks rendering updates on macOS. #8702
macOS
The dialog.showMessageBox API now supports the cancelId property
  similar to other platforms. #8733"
958,"Bug Fixes

[SECURITY] Node's Buffer class is no longer available on the window global when
  Node integration is disabled. #8605
Fixed an issue where certain modules, like coffee-script, threw errors
  when required. #8618
Fixed an issue where the focused window would lose focus when an invisible
  window was created. #8676
The minimumFontSize, defaultFontSize, and defaultMonospaceFontSize
  settings can now be configured via the webpreferences attribute of a
  <webview> tag. #8542
Fixed a crash where the browser context did not shutdown cleanly. #8654
Fixed a crash on file lock verification. #8679

macOS

Fixed an issue where a titleBarStyle value of hidden-inset did not work on
  certain OS versions. #8619
Fixed an issue where private OS APIs were being used in the Mac App Store
  build causing apps to be rejected. #8668
Fixed the scroll-touch-end event not firing. #8673
Fixed BrowserWindow.setVibrancy not working on certain OS versions. #8717

API Changes

Added a app.getFileIcon(path, callback) API to get the native icon for a
  file type. #7851
The callback specified to the session.setCertificateVerifyProc API is now
  provided the certificate verification result and can be rejected with any
  error code supported by Chrome. #7955
The dialog.showMessageBox API now supports showing a checkbox with a
  message in the dialog. The state of the checkbox will be provided to the
  callback. #8590
webContents now emits a will-attach-webview event that can be used to
  configure the settings of a<webview> tag before it is attached.
  Calling event.preventDefault() will destroy the <webview>. #8584
The zoom preferences on webContents are now persisted in a session on a
  per-origin basis. #8537
Added support for webContents.invalidate() on non-offscreen pages to
  schedule a paint of the entire view. #8628

macOS

dialog.showSaveDialog now supports message, nameFieldLabel, and
  showsTagField options. #8556
dialog.showOpenDialog now supports a message option. #8556
dialog.showOpenDialog now supports a noResolveAliases property to
  disable automatic alias (symlink) resolution. #8617
Added a crashReporter.setExtraParameter API to adjust the extra data sent
  on crashes. #8648
","Bug Fixes
[SECURITY] Node's Buffer class is no longer available on the window global when
  Node integration is disabled. #8605
Fixed an issue where certain modules, like coffee-script, threw errors
  when required. #8618
Fixed an issue where the focused window would lose focus when an invisible
  window was created. #8676
The minimumFontSize, defaultFontSize, and defaultMonospaceFontSize
  settings can now be configured via the webpreferences attribute of a
   tag. #8542
Fixed a crash where the browser context did not shutdown cleanly. #8654
Fixed a crash on file lock verification. #8679
macOS
Fixed an issue where a titleBarStyle value of hidden-inset did not work on
  certain OS versions. #8619
Fixed an issue where private OS APIs were being used in the Mac App Store
  build causing apps to be rejected. #8668
Fixed the scroll-touch-end event not firing. #8673
Fixed BrowserWindow.setVibrancy not working on certain OS versions. #8717
API Changes
Added a app.getFileIcon(path, callback) API to get the native icon for a
  file type. #7851
The callback specified to the session.setCertificateVerifyProc API is now
  provided the certificate verification result and can be rejected with any
  error code supported by Chrome. #7955
The dialog.showMessageBox API now supports showing a checkbox with a
  message in the dialog. The state of the checkbox will be provided to the
  callback. #8590
webContents now emits a will-attach-webview event that can be used to
  configure the settings of a tag before it is attached.
  Calling event.preventDefault() will destroy the . #8584
The zoom preferences on webContents are now persisted in a session on a
  per-origin basis. #8537
Added support for webContents.invalidate() on non-offscreen pages to
  schedule a paint of the entire view. #8628
macOS
dialog.showSaveDialog now supports message, nameFieldLabel, and
  showsTagField options. #8556
dialog.showOpenDialog now supports a message option. #8556
dialog.showOpenDialog now supports a noResolveAliases property to
  disable automatic alias (symlink) resolution. #8617
Added a crashReporter.setExtraParameter API to adjust the extra data sent
  on crashes. #8648"
959,"Note: This is a beta release. This is the first release running on an
upgraded version of Chrome and may have some instability and/or regressions.
Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta.
Upgrades

Upgraded from Chrome 54.0.2840.101 to 56.0.2924.87. #8501
Upgraded from v8 5.4.500.43 to 5.6.326.50. #8501
Upgraded the NODE_MODULE_VERSION/process.versions.modules from 51 to 53. #8501 
","Note: This is a beta release. This is the first release running on an
upgraded version of Chrome and may have some instability and/or regressions.
Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta.
Upgrades
Upgraded from Chrome 54.0.2840.101 to 56.0.2924.87. #8501
Upgraded from v8 5.4.500.43 to 5.6.326.50. #8501
Upgraded the NODE_MODULE_VERSION/process.versions.modules from 51 to 53. #8501 "
960,"Note: This is a beta release. This release run on recently upgraded versions of Chrome and Node and may have some instability and/or regressions.
Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta.
API Changes

You can now launch the crash reporter in forked child processes using the
  new process.crashReporter.start API. See the crashReporter module docs
  for usage details. #8109
A warning is logged instead of an error being thrown when a remote event
  cannot be delivered to a destroyed renderer process. The event names are
  included in the logged message and the listener is automatically unregistered.
  #8357
The before-input-event event on webContents now includes the code
  property. #8561
A forcereload menu item role has been added that maps to the focused
  window's webContents.reloadIgnoringCache method. #8570

Windows

The dialog.showOpenDialog API now accepts a promptToCreate property
  that allow files that do not exist to be entered into the dialog and confirms
  with the user that they would like the file to be created. #8566
The app.setLoginItemSettings and app.getLoginItemSettings APIs now accept
  optional path and args settings to better support apps using the
  Squirrel installer/auto updater. #8515

macOS

BrowserWindow.setAlwaysOnTop now accepts a relativeLevel parameter to
  allow ordering windows relative to other constant levels. #8487

Bug Fixes

Fixed a crash when loading long URLs that exceeded the maximum character length. #8478
Fixed a crash when calling toBitmap, getBitmap, or getNativeHandle
  on an empty NativeImage. #8510
Fixed uncaughtException events not being emitted in the main process
  on the process global. #8507
Fixed an issue where require-ed scripts could not define their own
  const process or global variables because ones already had been
  defined. #8539

macOS

Fixed a crash when calling webContents.startDrag with an empty image. #8511

Windows

Fixed an issue where the globalShortcut APIs would not function correctly
  if the systemPreferences module was required at startup. #8568
","Note: This is a beta release. This release run on recently upgraded versions of Chrome and Node and may have some instability and/or regressions.
Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta.
API Changes
You can now launch the crash reporter in forked child processes using the
  new process.crashReporter.start API. See the crashReporter module docs
  for usage details. #8109
A warning is logged instead of an error being thrown when a remote event
  cannot be delivered to a destroyed renderer process. The event names are
  included in the logged message and the listener is automatically unregistered.
  #8357
The before-input-event event on webContents now includes the code
  property. #8561
A forcereload menu item role has been added that maps to the focused
  window's webContents.reloadIgnoringCache method. #8570
Windows
The dialog.showOpenDialog API now accepts a promptToCreate property
  that allow files that do not exist to be entered into the dialog and confirms
  with the user that they would like the file to be created. #8566
The app.setLoginItemSettings and app.getLoginItemSettings APIs now accept
  optional path and args settings to better support apps using the
  Squirrel installer/auto updater. #8515
macOS
BrowserWindow.setAlwaysOnTop now accepts a relativeLevel parameter to
  allow ordering windows relative to other constant levels. #8487
Bug Fixes
Fixed a crash when loading long URLs that exceeded the maximum character length. #8478
Fixed a crash when calling toBitmap, getBitmap, or getNativeHandle
  on an empty NativeImage. #8510
Fixed uncaughtException events not being emitted in the main process
  on the process global. #8507
Fixed an issue where require-ed scripts could not define their own
  const process or global variables because ones already had been
  defined. #8539
macOS
Fixed a crash when calling webContents.startDrag with an empty image. #8511
Windows
Fixed an issue where the globalShortcut APIs would not function correctly
  if the systemPreferences module was required at startup. #8568"
961,"Note: This is a beta release. This is the first release running on upgraded
versions of Chrome and Node and may have some instability and/or regressions.
Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta.
Upgrades

Upgraded from Chrome 53.0.2785.143 to 54.0.2840.101. #8406
Upgraded from Node 6.5.0 to 7.4.0. #8406
Upgraded from v8 5.3.332.47 to 5.4.500.43. #8406
","Note: This is a beta release. This is the first release running on upgraded
versions of Chrome and Node and may have some instability and/or regressions.
Please file new issues for any bugs you find in it.
This release is published to npm under the beta tag and can be installed via npm install electron@beta.
Upgrades
Upgraded from Chrome 53.0.2785.143 to 54.0.2840.101. #8406
Upgraded from Node 6.5.0 to 7.4.0. #8406
Upgraded from v8 5.3.332.47 to 5.4.500.43. #8406"
962,"Bug Fixes

Fixed a crash when calling preventDefault() on a new-window event for
  a sandboxed window. #8377
Fixed the dev tools not opening when a debugger was already attached. #8390
Pulled in an upstream Chrome patch to fix an issue where certain webm
  videos would not play. #8428

Windows

Fixed incorrect window borders being rendered when the OS zoom level was
  greater than 100%. #8404
Fixed a regression where transparent windows wouldn't be transparent when
  the window was fullscreen. #8438

macOS

Fixed the window leaving fullscreen mode incorrectly when kiosk mode was
  disabled. #8399

New APIs

[SECURITY] Added a contextIsolation option to BrowserWindow and <webview> tags
  that loads the preload script and Electron APIs into a separate JavaScript
  context that is isolated from the main page's JavaScript context. #8348
The <webview> element now emits the context-menu event from the
  underlying webContents object.
","Bug Fixes
Fixed a crash when calling preventDefault() on a new-window event for
  a sandboxed window. #8377
Fixed the dev tools not opening when a debugger was already attached. #8390
Pulled in an upstream Chrome patch to fix an issue where certain webm
  videos would not play. #8428
Windows
Fixed incorrect window borders being rendered when the OS zoom level was
  greater than 100%. #8404
Fixed a regression where transparent windows wouldn't be transparent when
  the window was fullscreen. #8438
macOS
Fixed the window leaving fullscreen mode incorrectly when kiosk mode was
  disabled. #8399
New APIs
[SECURITY] Added a contextIsolation option to BrowserWindow and  tags
  that loads the preload script and Electron APIs into a separate JavaScript
  context that is isolated from the main page's JavaScript context. #8348
The  element now emits the context-menu event from the
  underlying webContents object."
963,"Bug Fixes

Fixed a crash when closing a window from within a will-navigate event
  listener. #8254
Offscreen windows are now always created as frameless so the viewport size
  is as expected. #8250
The backgroundThrottling option is now correctly persisted across window
  reloads. #8298
The Cookie header is now settable on requests made using Electron's net
  module. #8258
Fixed a stack overflow error when creating a window with cycles in the
  specified options object. #8340
Fixed an issue where the session.enableNetworkEmulation API would lead to
  high CPU usage. #8371

macOS

Fixed a crash when the OS reported no monitors were available. #8249

Linux

Fixed a crash when closing a window from within a dialog callback. #8252

Windows

Fixed an issue where the window would be incorrectly placed behind the
  task bar when maximized. #7765

API Changes

The defaultFontFamily option in the BrowserWindow constructor now supports
  setting the default cursive and fantasy fonts. #8295
Added a normalizeAccessKeys option to the dialog.showMessageBox API that
  normalizes keyboard accelerator keys used for buttons across platforms. #8308
window.alert and window.confirm are now supported in <iframe> tags
  and sandboxed windows. #8341
","Bug Fixes
Fixed a crash when closing a window from within a will-navigate event
  listener. #8254
Offscreen windows are now always created as frameless so the viewport size
  is as expected. #8250
The backgroundThrottling option is now correctly persisted across window
  reloads. #8298
The Cookie header is now settable on requests made using Electron's net
  module. #8258
Fixed a stack overflow error when creating a window with cycles in the
  specified options object. #8340
Fixed an issue where the session.enableNetworkEmulation API would lead to
  high CPU usage. #8371
macOS
Fixed a crash when the OS reported no monitors were available. #8249
Linux
Fixed a crash when closing a window from within a dialog callback. #8252
Windows
Fixed an issue where the window would be incorrectly placed behind the
  task bar when maximized. #7765
API Changes
The defaultFontFamily option in the BrowserWindow constructor now supports
  setting the default cursive and fantasy fonts. #8295
Added a normalizeAccessKeys option to the dialog.showMessageBox API that
  normalizes keyboard accelerator keys used for buttons across platforms. #8308
window.alert and window.confirm are now supported in  tags
  and sandboxed windows. #8341"
964,"Bug Fixes

Printing now works when the sandbox is enabled. #8165 
Fixed an issue where the salt used to generate media devices ids did not
  persist across sessions. #8137
Fixed an issue where an error would be thrown when the optional window
  argument to dialog APIs was undefined. #8189 
JavaScript run via an ipcRenderer event listener or setImmediate call is
  now recorded correctly in the Dev Tools timeline. #8159

macOS

Fixed an issue where the corners of modal windows were incorrectly rounded. #8167

API Changes

protocol.interceptHttpProtocol now supports a custom session. #8085
webContents now emits a before-input-event event that can be used to intercept
  keyboard events before they are handled by the page. Calling
  event.preventDefault() will cause the event to not be delivered to the
  page. #8143.
The certificate specified to the select-client-certificate event callback is
  now optional. #8134
Buttons are now optional when calling dialog.showMessageBox. #8187
nativeImage.createFromBuffer can now be called with bitmap buffers. #8175
You can now register schemes as secure by calling
  protocol.registerStandardSchemes with {secure: true} as the second
  argument. #7947
","Bug Fixes
Printing now works when the sandbox is enabled. #8165 
Fixed an issue where the salt used to generate media devices ids did not
  persist across sessions. #8137
Fixed an issue where an error would be thrown when the optional window
  argument to dialog APIs was undefined. #8189 
JavaScript run via an ipcRenderer event listener or setImmediate call is
  now recorded correctly in the Dev Tools timeline. #8159
macOS
Fixed an issue where the corners of modal windows were incorrectly rounded. #8167
API Changes
protocol.interceptHttpProtocol now supports a custom session. #8085
webContents now emits a before-input-event event that can be used to intercept
  keyboard events before they are handled by the page. Calling
  event.preventDefault() will cause the event to not be delivered to the
  page. #8143.
The certificate specified to the select-client-certificate event callback is
  now optional. #8134
Buttons are now optional when calling dialog.showMessageBox. #8187
nativeImage.createFromBuffer can now be called with bitmap buffers. #8175
You can now register schemes as secure by calling
  protocol.registerStandardSchemes with {secure: true} as the second
  argument. #7947"
965,"Bug Fixes

[SECURITY] Fixed an issue where certain certificates would be incorrectly rejected
  when making HTTPS requests. This was an upstream Chrome fix that is
  time-sensitive where affected certificates will be rejected starting 10 weeks
  after the time of the Electron release. Electron versions 1.4.0 - 1.4.11 are
  affected. Read this blog post for more details. #8176

New APIs

Added session.createInterruptedDownload to enable resuming a previously
  interrupted download. #8061
Added session.clearAuthCache to enable clearing a session's HTTP
  authentication cache.  #8107
","Bug Fixes
[SECURITY] Fixed an issue where certain certificates would be incorrectly rejected
  when making HTTPS requests. This was an upstream Chrome fix that is
  time-sensitive where affected certificates will be rejected starting 10 weeks
  after the time of the Electron release. Electron versions 1.4.0 - 1.4.11 are
  affected. Read this blog post for more details. #8176
New APIs
Added session.createInterruptedDownload to enable resuming a previously
  interrupted download. #8061
Added session.clearAuthCache to enable clearing a session's HTTP
  authentication cache.  #8107"
966,"Bug Fixes

[SECURITY] Fixed an issue where window.alert, window.close, and window.confirm did
  not behave as expected. #8120
Fixed an issue where accessing remote objects and functions would fail
  after reloading. #8110
Fixed an issue where the KeyboardEvent.key value would be incorrect when Control was pressed
  on Linux using certain keyboard layouts.  #8147
Fixed an issue where removing a folder from the workspace in the dev tools
  failed. #8086
The dialog APIs no longer write values back into the specified options
  object parameter. #8123
Fixed an issue where BrowserWindow.fromDevToolsWebContents would throw an
  error. #8144

New APIs
macOS

Added BrowserWindow.setAutohideCursor to change the setting dynamically.
  #8092
Added BrowserWindow.closeFilePreview to close the Quick Look preview
  previously opened with BrowserWindow.previewFile. #8038
Added systemPreferences.setUserDefault to be able to change the user
  preference defaults. #8084
Added crashReporter.get/setUploadToServer to dynamically configure the
  setting. Also Renamed the autoSubmit option to uploadToServer in
  crashReporter.start. The old option name is still available for
  backwards-compatibility but will be removed in Electron 2.0. #7952

Windows

Added BrowserWindow.setAppDetails to configure the properties of the
  window's taskbar button. #7952
","Bug Fixes
[SECURITY] Fixed an issue where window.alert, window.close, and window.confirm did
  not behave as expected. #8120
Fixed an issue where accessing remote objects and functions would fail
  after reloading. #8110
Fixed an issue where the KeyboardEvent.key value would be incorrect when Control was pressed
  on Linux using certain keyboard layouts.  #8147
Fixed an issue where removing a folder from the workspace in the dev tools
  failed. #8086
The dialog APIs no longer write values back into the specified options
  object parameter. #8123
Fixed an issue where BrowserWindow.fromDevToolsWebContents would throw an
  error. #8144
New APIs
macOS
Added BrowserWindow.setAutohideCursor to change the setting dynamically.
  #8092
Added BrowserWindow.closeFilePreview to close the Quick Look preview
  previously opened with BrowserWindow.previewFile. #8038
Added systemPreferences.setUserDefault to be able to change the user
  preference defaults. #8084
Added crashReporter.get/setUploadToServer to dynamically configure the
  setting. Also Renamed the autoSubmit option to uploadToServer in
  crashReporter.start. The old option name is still available for
  backwards-compatibility but will be removed in Electron 2.0. #7952
Windows
Added BrowserWindow.setAppDetails to configure the properties of the
  window's taskbar button. #7952"
967,"Bug Fixes

[SECURITY] Fixed an issue where window.alert, window.close, and window.confirm did
  not behave as expected. #8120
Fixed an issue where accessing remote objects and functions would fail
  after reloading. #8110
Fixed an issue where the KeyboardEvent.key value would be incorrect when Control was pressed
  on Linux using certain keyboard layouts.  #8147
","Bug Fixes
[SECURITY] Fixed an issue where window.alert, window.close, and window.confirm did
  not behave as expected. #8120
Fixed an issue where accessing remote objects and functions would fail
  after reloading. #8110
Fixed an issue where the KeyboardEvent.key value would be incorrect when Control was pressed
  on Linux using certain keyboard layouts.  #8147"
968,"Bug Fixes

[SECURITY] Fixed an issue where the window.opener API did not behave as expected.
","Bug Fixes
[SECURITY] Fixed an issue where the window.opener API did not behave as expected."
969,"Bug Fixes

[SECURITY] Fixed an issue where the window.opener API did not behave as expected.
","Bug Fixes
[SECURITY] Fixed an issue where the window.opener API did not behave as expected."
970,"Bug Fixes

The error thrown when a missing remote object is accessed now includes the id
  of the object and the name of the property being accessed or method being
  called. #8003

Windows

Fixed an issue where the window would restore to the incorrect size when
  minWidth was used. #8047

macOS

Fixed an issue where systemPreferences.getUserDefault would crash when
  requesting a value as an array or dictionary. #7993

API Changes

The implementation of chrome.runtime.onMessage used by dev tools extensions
  now supports a response callback parameter. #7974
toggledevtools and reload are now supported menu item roles. #7981
Added a setLayoutZoomLevelLimits method to webFrame, webContents, and
  <webview> that can be used to set the layout-based zoom level limits of a
  page. The setZoomLevelLimits API has been deprecated and renamed to
  setVisualZoomLeveLimits to control the pinch-to-zoom level.
  setZoomLevelLimits will be completely removed in Electron 2.0.  #8041

macOS

shell.openExternal is now asynchronous if the final specified argument is
  a callback function. #7612
A zoomToPageWidth option was added to the BrowserWindow constructor that
  controls how the window resizes when running the Window > Zoom menu item or
  when option-clicking the green stoplight toolbar button. #7776
","Bug Fixes
The error thrown when a missing remote object is accessed now includes the id
  of the object and the name of the property being accessed or method being
  called. #8003
Windows
Fixed an issue where the window would restore to the incorrect size when
  minWidth was used. #8047
macOS
Fixed an issue where systemPreferences.getUserDefault would crash when
  requesting a value as an array or dictionary. #7993
API Changes
The implementation of chrome.runtime.onMessage used by dev tools extensions
  now supports a response callback parameter. #7974
toggledevtools and reload are now supported menu item roles. #7981
Added a setLayoutZoomLevelLimits method to webFrame, webContents, and
   that can be used to set the layout-based zoom level limits of a
  page. The setZoomLevelLimits API has been deprecated and renamed to
  setVisualZoomLeveLimits to control the pinch-to-zoom level.
  setZoomLevelLimits will be completely removed in Electron 2.0.  #8041
macOS
shell.openExternal is now asynchronous if the final specified argument is
  a callback function. #7612
A zoomToPageWidth option was added to the BrowserWindow constructor that
  controls how the window resizes when running the Window > Zoom menu item or
  when option-clicking the green stoplight toolbar button. #7776"
971,"New APIs

Added a setLayoutZoomLevelLimits method to webFrame, webContents, and <webview> that can be used to set the layout-based zoom level limits of a page. The setZoomLevelLimits API has been deprecated and renamed to setVisualZoomLeveLimits to control the pinch-to-zoom level. setZoomLevelLimits will be completely removed in Electron 2.0.  #8041
","New APIs
Added a setLayoutZoomLevelLimits method to webFrame, webContents, and  that can be used to set the layout-based zoom level limits of a page. The setZoomLevelLimits API has been deprecated and renamed to setVisualZoomLeveLimits to control the pinch-to-zoom level. setZoomLevelLimits will be completely removed in Electron 2.0.  #8041"
972,"Dependency Upgrades

Squirrel.Mac, Electron's bundled
  macOS auto updater library, was upgraded to 0.3.0 which includes several bug
  fixes. The new version enables App Transport Security (ATS)
  on all requests it makes to the update server. This can be disabled,
  if needed, by adding NSAllowsArbitraryLoads to the app's plist file. #7933

New APIs

You can now enable the macOS vibrancy effect on a BrowserWindow by calling
  setVibrancy(vibrancyType) or by including a vibrancy value in the
  constructor options. #7898
You can now specify POST data when calling BrowserWindow.loadURL via the
  postData option. Also <form> tags configured with method=post will now
  make POST requests with their data when submitted. #7540
The certificate specified to the session.setCertificateVerifyProc callback
  now includes the entire certificate chain. #7917
The <webview> tag now supports a disableguestresize attribute that will
  disable automatic resizing of the guest webContents when the <webview>
  element resizes. You can now call setSize directly on the guest
  webContents to manually control the size. #7658
The chrome.storage.remove and chrome.storage.clear APIs are now available
  to DevTools extensions. #7923

Bug Fixes

The about: protocol is now correctly supported by default. #7908
Menu item keyboard accelerators are now properly disabled when the menu item
  is disabled. #7962
The check for disabling ASAR support via the ELECTRON_NO_ASAR environment
  variable is now cached for better performance. #7978
Fixed a crash when calling app.setAboutPanelOptions(options) with a
  credits value. #7979
Fixed an issue where an error would be thrown in certain cases when accessing
  remote objects or functions. #7980
[SECURITY] Fixed an issue where the window.opener API did not behave as expected.
","Dependency Upgrades
Squirrel.Mac, Electron's bundled
  macOS auto updater library, was upgraded to 0.3.0 which includes several bug
  fixes. The new version enables App Transport Security (ATS)
  on all requests it makes to the update server. This can be disabled,
  if needed, by adding NSAllowsArbitraryLoads to the app's plist file. #7933
New APIs
You can now enable the macOS vibrancy effect on a BrowserWindow by calling
  setVibrancy(vibrancyType) or by including a vibrancy value in the
  constructor options. #7898
You can now specify POST data when calling BrowserWindow.loadURL via the
  postData option. Also  tags configured with method=post will now
  make POST requests with their data when submitted. #7540
The certificate specified to the session.setCertificateVerifyProc callback
  now includes the entire certificate chain. #7917
The  tag now supports a disableguestresize attribute that will
  disable automatic resizing of the guest webContents when the 
  element resizes. You can now call setSize directly on the guest
  webContents to manually control the size. #7658
The chrome.storage.remove and chrome.storage.clear APIs are now available
  to DevTools extensions. #7923
Bug Fixes
The about: protocol is now correctly supported by default. #7908
Menu item keyboard accelerators are now properly disabled when the menu item
  is disabled. #7962
The check for disabling ASAR support via the ELECTRON_NO_ASAR environment
  variable is now cached for better performance. #7978
Fixed a crash when calling app.setAboutPanelOptions(options) with a
  credits value. #7979
Fixed an issue where an error would be thrown in certain cases when accessing
  remote objects or functions. #7980
[SECURITY] Fixed an issue where the window.opener API did not behave as expected."
973,"Bug Fixes

[SECURITY] Fixed an issue where the window.opener API did not behave as expected.
","Bug Fixes
[SECURITY] Fixed an issue where the window.opener API did not behave as expected."
974,"Dependency Upgrades

Upgraded to Chrome 53.0.2785.143 from 53.0.2785.113. #7906

API Changes

webContents.executeJavaScript now returns a Promise that resolves to the
  value returned by the specified code block. Previously this method did not
  return a value. The callback option is still supported. #7533

Bug Fixes

Fixed an issue where <webview> tags would be cleared or refreshed
  incorrectly when toggling the visibility or attaching/detaching. #7852

Infrastructure Changes

Electron's V8 headers can now be downloaded from https://atom.io/download/electron
  instead of https://atom.io/download/atom-shell. This URL is used as the
  disturl option to NPM when compiling native modules to be used in Electron.
  #7881
The Windows symbol server for Electron is now available at https://electron-symbols.githubapp.com
  instead of http://54.249.141.255:8086/atom-shell/symbols. #7895
","Dependency Upgrades
Upgraded to Chrome 53.0.2785.143 from 53.0.2785.113. #7906
API Changes
webContents.executeJavaScript now returns a Promise that resolves to the
  value returned by the specified code block. Previously this method did not
  return a value. The callback option is still supported. #7533
Bug Fixes
Fixed an issue where  tags would be cleared or refreshed
  incorrectly when toggling the visibility or attaching/detaching. #7852
Infrastructure Changes
Electron's V8 headers can now be downloaded from link
  instead of link. This URL is used as the
  disturl option to NPM when compiling native modules to be used in Electron.
  #7881
The Windows symbol server for Electron is now available at link
  instead of link. #7895"
975,"Bug Fixes

Fixed a crash when loading a URL using a persistent session. #7628
Fixed a crash when using setCertificateVerifyProc on a session. #7651
Fixed a crash when creating notifications on a session that is using a permission request handler. #7788

Windows

Fixed an issue where the web contents would lose focus when clicking the
  menu bar causing certain role-based menu items to not work. #7707
Fixed an issue where maximized windows would be restored/un-maximized to the
  wrong location. #7766

New APIs

Added a new net module that exposes Chrome's native network APIs, available
  via require('electron').net in the main process. #7577
Added support for setting additional options to
  webFrame.registerURLSchemeAsPrivileged. #7665
Added support for a webpreferences attribute to <webview> tags that can
  be used to set additional options similar to the webPreferences option on
  the BrowserWindowconstructor. #7631

macOS

Added support to the clipboard module for reading from and writing to the
  find pasteboard, available as clipboard.readFindText/writeFindText. #7719
Added BrowserWindow.previewFile that opens a file in the native Quick Look
  view. #7592
","Bug Fixes
Fixed a crash when loading a URL using a persistent session. #7628
Fixed a crash when using setCertificateVerifyProc on a session. #7651
Fixed a crash when creating notifications on a session that is using a permission request handler. #7788
Windows
Fixed an issue where the web contents would lose focus when clicking the
  menu bar causing certain role-based menu items to not work. #7707
Fixed an issue where maximized windows would be restored/un-maximized to the
  wrong location. #7766
New APIs
Added a new net module that exposes Chrome's native network APIs, available
  via require('electron').net in the main process. #7577
Added support for setting additional options to
  webFrame.registerURLSchemeAsPrivileged. #7665
Added support for a webpreferences attribute to  tags that can
  be used to set additional options similar to the webPreferences option on
  the BrowserWindowconstructor. #7631
macOS
Added support to the clipboard module for reading from and writing to the
  find pasteboard, available as clipboard.readFindText/writeFindText. #7719
Added BrowserWindow.previewFile that opens a file in the native Quick Look
  view. #7592"
976,"Changelog:
- Add ELECTRON_NO_ASAR environment variable. #7479
- Fix broken window.open. #7520
- Fix crash reports not saved under the temp directory configured by user. #7500
- Fix webContents.openDevTools([options]) ignoring docks state. brightray#254
- Fix Tab not working as keyCode in webContents.sendInputEvent(event) API. #7500
- Fix custom properties not set in the constructor of MenuItem. #7498
Windows
- Add isInvertedColorScheme() method and inverted-color-scheme-changed event to the systemPreferences module. #7518
- Add getColor(name) method and color-changed event to the systemPreferences module. #7561
- Fix output not printed to console under Node mode. #7578
- Fix accessibility always enabled on touch screen. #7611
Linux
- Fix audio streams being named as Chromium. #7524
macOS
- Add app.setAboutPanelOptions(options) API. #7549
- Fix crash caused by long app name when app is sandboxed with non-MAS build. #7566","Changelog:
- Add ELECTRON_NO_ASAR environment variable. #7479
- Fix broken window.open. #7520
- Fix crash reports not saved under the temp directory configured by user. #7500
- Fix webContents.openDevTools([options]) ignoring docks state. brightray#254
- Fix Tab not working as keyCode in webContents.sendInputEvent(event) API. #7500
- Fix custom properties not set in the constructor of MenuItem. #7498
Windows
- Add isInvertedColorScheme() method and inverted-color-scheme-changed event to the systemPreferences module. #7518
- Add getColor(name) method and color-changed event to the systemPreferences module. #7561
- Fix output not printed to console under Node mode. #7578
- Fix accessibility always enabled on touch screen. #7611
Linux
- Fix audio streams being named as Chromium. #7524
macOS
- Add app.setAboutPanelOptions(options) API. #7549
- Fix crash caused by long app name when app is sandboxed with non-MAS build. #7566"
977,"Changelog:
Windows
- Fix accessibility always enabled on touch screen. #7611","Changelog:
Windows
- Fix accessibility always enabled on touch screen. #7611"
978,"Changelog:
- Add additionalFeatures parameter for new-window event. #7291
- Add event.newGuest property for the event object of new-window event. #7407
- Add crop, resize, getAspectRatio methods to NativeImage. #7488
- Fix crash when closing windows that use window.open. #7432
- Fix memory bug when passing Buffer from native land to JavaScript. #7452
Windows
- Enable LargeAddressAware for 32bit build. brightray#253
- Use default error mode by default in the main process. #7335
- Fix clicking menu not moving focus to the window. #7282
- Fix certain emoji not showing with default font. #7334","Changelog:
- Add additionalFeatures parameter for new-window event. #7291
- Add event.newGuest property for the event object of new-window event. #7407
- Add crop, resize, getAspectRatio methods to NativeImage. #7488
- Fix crash when closing windows that use window.open. #7432
- Fix memory bug when passing Buffer from native land to JavaScript. #7452
Windows
- Enable LargeAddressAware for 32bit build. brightray#253
- Use default error mode by default in the main process. #7335
- Fix clicking menu not moving focus to the window. #7282
- Fix certain emoji not showing with default font. #7334"
979,"Changelog:
- Add experimental sandbox option in webPreferences which allows sandboxing for renderers. #6919
- Add level parameter for win.setAlwaysOnTop(flag[, level]) API. #7296
- Add changed event for cookies module. #7398
- Fix crash when using storage in custom schemes. #7298
- Fix crash when accessing certain HTTPS websites. brightray#250
- Fix menubar buttons not showing hover/press states. #7397
- Fix saving CPU profile not working in devtools. #7413
macOS
- Hide Show Tab Bar menu item on macOS Sierra. #7415
- Fix offscreen rendering not working with software output. #7327
Windows
- Fix wrong draggable region calculation under high DPI. #7362
Linux
- Fix tray icon not showing on Elementary OS. #7319","Changelog:
- Add experimental sandbox option in webPreferences which allows sandboxing for renderers. #6919
- Add level parameter for win.setAlwaysOnTop(flag[, level]) API. #7296
- Add changed event for cookies module. #7398
- Fix crash when using storage in custom schemes. #7298
- Fix crash when accessing certain HTTPS websites. brightray#250
- Fix menubar buttons not showing hover/press states. #7397
- Fix saving CPU profile not working in devtools. #7413
macOS
- Hide Show Tab Bar menu item on macOS Sierra. #7415
- Fix offscreen rendering not working with software output. #7327
Windows
- Fix wrong draggable region calculation under high DPI. #7362
Linux
- Fix tray icon not showing on Elementary OS. #7319"
980,"Changelog:
- Upgrade to Node 6.5.0.","Changelog:
- Upgrade to Node 6.5.0."
981,"Changelog:
- Add guestinstance attribute to <webview> tag which allows moving WebContents betweens <webview>s. #7157
- Add ses.getBlobData(identifier, callback) API to read uploaded data in protocol. #6941
- Add contents.invalidate() API. #7062
- Add killed parameter for crashed and gpu-process-crashed events. #7241
- Add GOOGLE_API_KEY environment variable to specify custom Google API key. #7276
- Fix exception when accessing remote functions. #7209
- Fix wrong filename when downloading from URL with trailing slash. #7169
- Fix beginFrameSubscription not working correctly for HiDPI screens. #7163
- Fix offscreen renderer not resizing. #7062
- Fix net::ERR_INSECURE_RESPONSE error when visiting some websites. #7221
Linux
- Add support for kioclient, kioclient5 and trash-cli in shell.moveItemToTrash(path) API. #7178
macOS
- Add scroll-touch-edge event for BrowserWindow and fix regressions of scroll-touch-begin/end events. #7239
Windows
- Use Ctrl+Y as the default accelerator of redo menu role. #7236
- Add getAccentColor method and accent-color-changed event to systemPreferences module. #7173","Changelog:
- Add guestinstance attribute to  tag which allows moving WebContents betweens s. #7157
- Add ses.getBlobData(identifier, callback) API to read uploaded data in protocol. #6941
- Add contents.invalidate() API. #7062
- Add killed parameter for crashed and gpu-process-crashed events. #7241
- Add GOOGLE_API_KEY environment variable to specify custom Google API key. #7276
- Fix exception when accessing remote functions. #7209
- Fix wrong filename when downloading from URL with trailing slash. #7169
- Fix beginFrameSubscription not working correctly for HiDPI screens. #7163
- Fix offscreen renderer not resizing. #7062
- Fix net::ERR_INSECURE_RESPONSE error when visiting some websites. #7221
Linux
- Add support for kioclient, kioclient5 and trash-cli in shell.moveItemToTrash(path) API. #7178
macOS
- Add scroll-touch-edge event for BrowserWindow and fix regressions of scroll-touch-begin/end events. #7239
Windows
- Use Ctrl+Y as the default accelerator of redo menu role. #7236
- Add getAccentColor method and accent-color-changed event to systemPreferences module. #7173"
982,"Changelog:
- Upgrade to Chrome 53. #7104
- Upgrade to Node 6.5.0. #7104","Changelog:
- Upgrade to Chrome 53. #7104
- Upgrade to Node 6.5.0. #7104"
983,"Changelog:
- Add devtools option to webPreferences. #7096
- Add return values for shell.showItemInFolder and shell.openItem. #7182
- Fix context menu not working for pepper flash. #7110
- Fix asar archives not working after execSync throws. #7116
- Fix exception when accessing process.stdin in renderer process. #7130
- Fix <webview> loading host URL when src is empty. #7146
- Fix videos unable to be loaded in asar archives. #7123
- Fix wrong judge on in-page navigation when history.replaceState is used. #7175
macOS
- Add userInfo parameter to ready event of app. #7053
- Add support for titleBarStyle: 'hidden-inset' on OS X 10.9. #7077
- Fix hanging when showing a dialog when a modal window is being closed. #7130","Changelog:
- Add devtools option to webPreferences. #7096
- Add return values for shell.showItemInFolder and shell.openItem. #7182
- Fix context menu not working for pepper flash. #7110
- Fix asar archives not working after execSync throws. #7116
- Fix exception when accessing process.stdin in renderer process. #7130
- Fix  loading host URL when src is empty. #7146
- Fix videos unable to be loaded in asar archives. #7123
- Fix wrong judge on in-page navigation when history.replaceState is used. #7175
macOS
- Add userInfo parameter to ready event of app. #7053
- Add support for titleBarStyle: 'hidden-inset' on OS X 10.9. #7077
- Fix hanging when showing a dialog when a modal window is being closed. #7130"
984,"Changelog:
- Allow accessing remote function properties. #6867
- Improve performance when sending Buffer with remote module. #6963
- Fix crash when sending native objects through IPC. #6998
- Fix crash when calling inspectElement after openDevTools. #6940
- Fix webkitRequestFileSystem not working in custom protocols. #6952
- Fix the same objects sent in one IPC message becoming null. #6977
- Fix downloadItem.setSavePath not working when server returns 404 status. #6983
- Fix --debug-brk not stopping on first line. #7001
- Fix process.exit() not accepting empty arguments. #7028
- Fix beginFrameSubscription not working for the WebContents of <webview>. libchromiumcontent#227
Linux
- The prebuilt binaries for ARM now use armv7l as filename suffix. #6986
- Fix win.setFullScreen(false) not working. #6961
Windows
- Add app.getJumpListSettings() and app.setJumpList(categories) APIs. #6826
- Fix CJK fonts not showing in flash plugin. #7018","Changelog:
- Allow accessing remote function properties. #6867
- Improve performance when sending Buffer with remote module. #6963
- Fix crash when sending native objects through IPC. #6998
- Fix crash when calling inspectElement after openDevTools. #6940
- Fix webkitRequestFileSystem not working in custom protocols. #6952
- Fix the same objects sent in one IPC message becoming null. #6977
- Fix downloadItem.setSavePath not working when server returns 404 status. #6983
- Fix --debug-brk not stopping on first line. #7001
- Fix process.exit() not accepting empty arguments. #7028
- Fix beginFrameSubscription not working for the WebContents of . libchromiumcontent#227
Linux
- The prebuilt binaries for ARM now use armv7l as filename suffix. #6986
- Fix win.setFullScreen(false) not working. #6961
Windows
- Add app.getJumpListSettings() and app.setJumpList(categories) APIs. #6826
- Fix CJK fonts not showing in flash plugin. #7018"
985,"Changelog:
- Use String instead of Buffer to represent certificate data. #6814, #6881
- Add isMainFrame parameter to the did-navigate-in-page event. #6810
- Fix privileged schemes not able to send CORS requests. #6816
- Fix hasImageContents parameter of context-menu event being wrong. #6817
- Fix crash on garbage collection in renderer process. #6832
- Fix memory leak when render view is deleted. #6857
- Fix relative URLs not working when changing win.location for objects returned by window.open. #6861
- Fix webRequest.onBeforeSendHeaders API drops headers with ""."" in the name. #6856
- Fix crash when using fetch in renderer process. #6926
- Fix ses.enableNetworkEmulation not working with default options. #6935
macOS
- Add support for titleBarStyle: 'hidden' on OS X 10.9. #6848
- Fix window size being changed when calling setClosable, setMaximizable and setMinimizable APIs. #6850
- Fix ""Hide extension"" checkbox showing for open dialog. #6872
Windows
- Add path and args parameters to app.setAsDefaultProtocolClient API. #6858
- Fix menu item roles not working correctly when having hidden windows. #6851
- Fix thumbar buttons disappeared after calling win.setSkipTaskbar(skip). #6829","Changelog:
- Use String instead of Buffer to represent certificate data. #6814, #6881
- Add isMainFrame parameter to the did-navigate-in-page event. #6810
- Fix privileged schemes not able to send CORS requests. #6816
- Fix hasImageContents parameter of context-menu event being wrong. #6817
- Fix crash on garbage collection in renderer process. #6832
- Fix memory leak when render view is deleted. #6857
- Fix relative URLs not working when changing win.location for objects returned by window.open. #6861
- Fix webRequest.onBeforeSendHeaders API drops headers with ""."" in the name. #6856
- Fix crash when using fetch in renderer process. #6926
- Fix ses.enableNetworkEmulation not working with default options. #6935
macOS
- Add support for titleBarStyle: 'hidden' on OS X 10.9. #6848
- Fix window size being changed when calling setClosable, setMaximizable and setMinimizable APIs. #6850
- Fix ""Hide extension"" checkbox showing for open dialog. #6872
Windows
- Add path and args parameters to app.setAsDefaultProtocolClient API. #6858
- Fix menu item roles not working correctly when having hidden windows. #6851
- Fix thumbar buttons disappeared after calling win.setSkipTaskbar(skip). #6829"
986,"Changelog:
- Remove the view-painted event which was introduced in v1.3.1 and didn't work. #6705
- Add support for offscreen rendering. #6691, #6713, #6723, #6721, #6737, #6741
- Add win.setContentBounds(options[, animate]) and win.getContentBounds() APIs. #6654
- Add image.getBitmap() API. #6733
- Add zoomin, zoomout, resetzoom to MenuItem's roles. #6777
- Fix the remote devtools page not loading in Electron. #6707
- Fix cookies API not working for custom protocols. #6708
- Fix properties of DOM objects not being able to be sent via ipc module. #6776
macOS
- Add systemPreferences.isSwipeTrackingFromScrollEventsEnabled() API. #6686
- Add systemPreferences.postNotification(event, userInfo) and systemPreferences.postLocalNotification(event, userInfo) APIs. #6752
- Add more details to error message of autoUpdater. #6743
- Add startspeaking and stopspeaking to MenuItem's roles. #6765
- Fix resizable: false option disabling the fullscreen button. #6664
- Fix scroll-touch-begin and scroll-touch-end events being emitted when scrolling page. #6754
Windows
- Add return value for  app.setUserTasks(tasks) API. #6766
- Add win.setThumbnailToolTip(toolTip) API. #6762
- Fix calling autoUpdate.checkForUpdates() for twice making quitAndInstall() throw errors. #6780
- Fix win.setThumbnailClip(region) API not recognizing high-DPI displays. #6782","Changelog:
- Remove the view-painted event which was introduced in v1.3.1 and didn't work. #6705
- Add support for offscreen rendering. #6691, #6713, #6723, #6721, #6737, #6741
- Add win.setContentBounds(options[, animate]) and win.getContentBounds() APIs. #6654
- Add image.getBitmap() API. #6733
- Add zoomin, zoomout, resetzoom to MenuItem's roles. #6777
- Fix the remote devtools page not loading in Electron. #6707
- Fix cookies API not working for custom protocols. #6708
- Fix properties of DOM objects not being able to be sent via ipc module. #6776
macOS
- Add systemPreferences.isSwipeTrackingFromScrollEventsEnabled() API. #6686
- Add systemPreferences.postNotification(event, userInfo) and systemPreferences.postLocalNotification(event, userInfo) APIs. #6752
- Add more details to error message of autoUpdater. #6743
- Add startspeaking and stopspeaking to MenuItem's roles. #6765
- Fix resizable: false option disabling the fullscreen button. #6664
- Fix scroll-touch-begin and scroll-touch-end events being emitted when scrolling page. #6754
Windows
- Add return value for  app.setUserTasks(tasks) API. #6766
- Add win.setThumbnailToolTip(toolTip) API. #6762
- Fix calling autoUpdate.checkForUpdates() for twice making quitAndInstall() throw errors. #6780
- Fix win.setThumbnailClip(region) API not recognizing high-DPI displays. #6782"
987,"Changelog:
- Upload the checksums of releases. #6629
- Improve performance when creating native classes. #6688
- Add downloadItem.getSavePath() API. #6629
- Add image.toBitmap() API. #6661
- Add size, hotspot parameters to the cursor-changed event of WebContents. #6661
- Add setZoomFactor, getZoomFactor, setZoomLevel, getZoomLevel, setZoomLevelLimits methods to WebContents. #6685
- Fix LICENSES.chromium.html being empty. libchromiumcontent#225
- Fix failing to register custom protocol due to Session being garbage collected. #6674
- Fix unicode characters not working with contents.sendInputEvent(event) API. #6661
Windows
- Add shell.writeShortcutLink(shortcutPath[, operation], options) and shell.readShortcutLink(shortcutPath) APIs. #6623
- Fix window size being changed after restoring from minimized state. #6667
macOS
- Add app.dock.isVisible() API. #6683
- Fix crash with keyboard events under fullscreen. #6637
- Fix crash when using webview. #6644
Linux
- Fix components not showing correctly on displays with 2.0 DPI. #6646","Changelog:
- Upload the checksums of releases. #6629
- Improve performance when creating native classes. #6688
- Add downloadItem.getSavePath() API. #6629
- Add image.toBitmap() API. #6661
- Add size, hotspot parameters to the cursor-changed event of WebContents. #6661
- Add setZoomFactor, getZoomFactor, setZoomLevel, getZoomLevel, setZoomLevelLimits methods to WebContents. #6685
- Fix LICENSES.chromium.html being empty. libchromiumcontent#225
- Fix failing to register custom protocol due to Session being garbage collected. #6674
- Fix unicode characters not working with contents.sendInputEvent(event) API. #6661
Windows
- Add shell.writeShortcutLink(shortcutPath[, operation], options) and shell.readShortcutLink(shortcutPath) APIs. #6623
- Fix window size being changed after restoring from minimized state. #6667
macOS
- Add app.dock.isVisible() API. #6683
- Fix crash with keyboard events under fullscreen. #6637
- Fix crash when using webview. #6644
Linux
- Fix components not showing correctly on displays with 2.0 DPI. #6646"
988,"Changelog:
- Add view-painted event to WebContent. #6524
- Add proxyBypassRules option to ses.setProxy(config, callback) API. #6558
- Add support for passing typed arrays in remote module. #6572, #6590
- Add contents.copyImageAt(x, y) API. #6619
- Fix file dialog not working with <input> tag on DevPanel. brightray#238
- Fix fs.access/accessSync not working with asar archives. #6598
- Fix LCD-text-antialiasing not working. #6606
- Fix crash when adding project workspace in devtools. #6613
Windows
- Fix window position not restoring after restoring from minimized state. #6596
- Fix crash when calling crashReporter.start(options) for multiple times. #6618
- Fix invalid AppUserModelID when executable name contains spaces. #6602
macOS
- Add option to always highlight the tray icon. #6620","Changelog:
- Add view-painted event to WebContent. #6524
- Add proxyBypassRules option to ses.setProxy(config, callback) API. #6558
- Add support for passing typed arrays in remote module. #6572, #6590
- Add contents.copyImageAt(x, y) API. #6619
- Fix file dialog not working with  tag on DevPanel. brightray#238
- Fix fs.access/accessSync not working with asar archives. #6598
- Fix LCD-text-antialiasing not working. #6606
- Fix crash when adding project workspace in devtools. #6613
Windows
- Fix window position not restoring after restoring from minimized state. #6596
- Fix crash when calling crashReporter.start(options) for multiple times. #6618
- Fix invalid AppUserModelID when executable name contains spaces. #6602
macOS
- Add option to always highlight the tray icon. #6620"
989,"Changelog:
- Upgrade to Chrome 52. #6342
- Update to Node.js 6.3.0. #6559","Changelog:
- Upgrade to Chrome 52. #6342
- Update to Node.js 6.3.0. #6559"
990,"Changelog:
- Add options parameter for the session.fromPartition(''[, options]) API. #6470
- Add more attributes for certificate object of certificate-error event. #6474
- Add autoUpdater.getFeedURL() API. #6486
- Add getAllWebContents() and getFocusedWebContents() APIs to webContents module. #6489
macOS
- Add drop-text event to Tray. #6490
- Fix exception when calling console.log after relaunch. #6527
Windows
- Add win.setThumbnailClip(region) API. #6497","Changelog:
- Add options parameter for the session.fromPartition(''[, options]) API. #6470
- Add more attributes for certificate object of certificate-error event. #6474
- Add autoUpdater.getFeedURL() API. #6486
- Add getAllWebContents() and getFocusedWebContents() APIs to webContents module. #6489
macOS
- Add drop-text event to Tray. #6490
- Fix exception when calling console.log after relaunch. #6527
Windows
- Add win.setThumbnailClip(region) API. #6497"
991,"Changelog:
- Do not show default accelerators in menus other than application menu and window menu. #6385
- Add capturePage method to WebContents class and <webview> tag. #6355
- Add showHiddenFiles to dialog.showOpenDialog(options)'s properties. #6431
- Add app.getLoginItemSettings() and app.setLoginItemSettings(settings) APIs. #6375, #6444
- Add accessibility-support-changed event and isAccessibilitySupportEnabled() method to app module. #6446
- Fix session not saved on exit. #6411
- Fix passing remote objects without constructor. #6369
- Fix showing context menu and synchronous dialogs emitting unresponsive event. #6432
- Fix value becoming null when passing the same Array for multiple times in remote module. #6442
- Fix setting maximum/minimum size overriding minimum/maximum size. #6455
- Fix edit menu in context menu of devtools not showing. #6459
macOS
- Fix single key accelerator not working. #6370
- Fix win.setBounds(bounds) API ignore maximum/minimum sizes. #6363
- Fix the fullscreen button showing in frameless window on OS X 10.9. #6433
- Fix transparent window having border on OS X 10.9. #6449
- Fix crash when destroying tray icon from its context menu. #6448
Linux
- Fix exception when calling console.log after relaunch. #6412
- Fix menubar not hiding after entering fullscreen. #6429
- Fix crash on startup. #6466
Windows
- Add thickFrame option for BrowserWindow. #6412
- Add toolbar to BrowserWindow's type. #6428
- Fix transparent window not working when in maximized or fullscreen state. #6417
- Fix shell.openExternal(url) not working with non-ASCII characters. #6436","Changelog:
- Do not show default accelerators in menus other than application menu and window menu. #6385
- Add capturePage method to WebContents class and  tag. #6355
- Add showHiddenFiles to dialog.showOpenDialog(options)'s properties. #6431
- Add app.getLoginItemSettings() and app.setLoginItemSettings(settings) APIs. #6375, #6444
- Add accessibility-support-changed event and isAccessibilitySupportEnabled() method to app module. #6446
- Fix session not saved on exit. #6411
- Fix passing remote objects without constructor. #6369
- Fix showing context menu and synchronous dialogs emitting unresponsive event. #6432
- Fix value becoming null when passing the same Array for multiple times in remote module. #6442
- Fix setting maximum/minimum size overriding minimum/maximum size. #6455
- Fix edit menu in context menu of devtools not showing. #6459
macOS
- Fix single key accelerator not working. #6370
- Fix win.setBounds(bounds) API ignore maximum/minimum sizes. #6363
- Fix the fullscreen button showing in frameless window on OS X 10.9. #6433
- Fix transparent window having border on OS X 10.9. #6449
- Fix crash when destroying tray icon from its context menu. #6448
Linux
- Fix exception when calling console.log after relaunch. #6412
- Fix menubar not hiding after entering fullscreen. #6429
- Fix crash on startup. #6466
Windows
- Add thickFrame option for BrowserWindow. #6412
- Add toolbar to BrowserWindow's type. #6428
- Fix transparent window not working when in maximized or fullscreen state. #6417
- Fix shell.openExternal(url) not working with non-ASCII characters. #6436"
992,"Changelog:
- Update to Chrome 51.0.2704.106. #6322
- Improve performance for looking up paths in require. #6213
- Add webContents.startDrag(item) API. #6333
- Add clipboard.readBookmark() and clipboard.writeBookmark(title, url) APIs. #6233
- Add onlyDirty pararmeter to webContents.beginFrameSubscription([onlyDirty ,]callback) API. #6164
- Add app.setBadgeCount(count) and app.getBadgeCount() APIs. #6243 #6309
- Fix did-fail-load event emitting for canceled requests. #6201
- Fix passing the same callback to main process for multiple times will make the callback stop working after the remote callback gets GCed in main process. #6218
- Fix Promise not resolved in native handlers of the main process. #6220
- Fix exception when package.json includes BOM. #6354
Windows
- Include PDB files in releases. #6225
- Fix crash when loading non-exist ICO files. #6220
- Fix tray.popUpContextMenu(menu) not popUpping menu when menu is not passed. #6280
Linux
- Add app.isUnityRunning() API. #6243
- Fix dialog.showOpenDialog() replacing extensions of filenames ending with .*.gz. #6305
- Fix icon property of BrowserWindow not working. #6323","Changelog:
- Update to Chrome 51.0.2704.106. #6322
- Improve performance for looking up paths in require. #6213
- Add webContents.startDrag(item) API. #6333
- Add clipboard.readBookmark() and clipboard.writeBookmark(title, url) APIs. #6233
- Add onlyDirty pararmeter to webContents.beginFrameSubscription([onlyDirty ,]callback) API. #6164
- Add app.setBadgeCount(count) and app.getBadgeCount() APIs. #6243 #6309
- Fix did-fail-load event emitting for canceled requests. #6201
- Fix passing the same callback to main process for multiple times will make the callback stop working after the remote callback gets GCed in main process. #6218
- Fix Promise not resolved in native handlers of the main process. #6220
- Fix exception when package.json includes BOM. #6354
Windows
- Include PDB files in releases. #6225
- Fix crash when loading non-exist ICO files. #6220
- Fix tray.popUpContextMenu(menu) not popUpping menu when menu is not passed. #6280
Linux
- Add app.isUnityRunning() API. #6243
- Fix dialog.showOpenDialog() replacing extensions of filenames ending with .*.gz. #6305
- Fix icon property of BrowserWindow not working. #6323"
993,"Changelog:
- accelerator and label are now optional when role is specified for MenuItem. #6190
- Add event parameter for click handler of MenuItem. #6170
- Add session.setUserAgent(userAgent[, acceptLanguages]) API. #6172
- Add win.setContentProtection(enable) API. #6175
- Fix members of protocol module not being set. #6195
macOS
- Update Squirrel.Mac to 0.2.1. #6183
- Fix crash when using frameless window on OS X 10.9. #6197
- Fix maximize event being emitted before window is maximized. #6171
Linux
- Fix crash on startup. electron/brightray#229","Changelog:
- accelerator and label are now optional when role is specified for MenuItem. #6190
- Add event parameter for click handler of MenuItem. #6170
- Add session.setUserAgent(userAgent[, acceptLanguages]) API. #6172
- Add win.setContentProtection(enable) API. #6175
- Fix members of protocol module not being set. #6195
macOS
- Update Squirrel.Mac to 0.2.1. #6183
- Fix crash when using frameless window on OS X 10.9. #6197
- Fix maximize event being emitted before window is maximized. #6171
Linux
- Fix crash on startup. electron/brightray#229"
994,"Changelog:
- Update to Chrome 51.0.2704.103. #6134
- Add support for child windows. #6140
- Add tray.getBounds() API. #6159
- Add quit, togglefullscreen roles to MenuItem. #6154 #6166
- Fix members of protocol module not being set. #6095
- Fix devtools extensions not showing up on first load. #6115
- Fix output in renderer process not being redirected to the main process. #6130
- Fix <webview> tag having wrong size when transform style is applied. #6128
- Fix crash when releasing contexts in renderer process. #6144
- Fix rejection of remote Promise being treated as unhandled rejection in the main process. #6151
- Fix color of menu bar not being updated when system theme changes. #6161
- Fix wrong role when menu.insert(item) is used. #6169
macOS
- Add systemPreferences.subscribeLocalNotification(event, callback) and
  systemPreferences.unsubscribeLocalNotification(id) APIs. #6150
- Fix frameless window not showing in Window menu. #6089, #6097
- Fix crash when calling win.setProgressBar after app.dock.setIcon. #6091
- Fix context menu always choosing first item by default. #6110
- Fix Delete not working as accelerator. #6168
Linux
- Fix app indicators using random IDs. #6145
- Fix message boxes and file dialogs not being modal. #6160
Windows
- Fix bounds of Tray not respecting scale factor.","Changelog:
- Update to Chrome 51.0.2704.103. #6134
- Add support for child windows. #6140
- Add tray.getBounds() API. #6159
- Add quit, togglefullscreen roles to MenuItem. #6154 #6166
- Fix members of protocol module not being set. #6095
- Fix devtools extensions not showing up on first load. #6115
- Fix output in renderer process not being redirected to the main process. #6130
- Fix  tag having wrong size when transform style is applied. #6128
- Fix crash when releasing contexts in renderer process. #6144
- Fix rejection of remote Promise being treated as unhandled rejection in the main process. #6151
- Fix color of menu bar not being updated when system theme changes. #6161
- Fix wrong role when menu.insert(item) is used. #6169
macOS
- Add systemPreferences.subscribeLocalNotification(event, callback) and
  systemPreferences.unsubscribeLocalNotification(id) APIs. #6150
- Fix frameless window not showing in Window menu. #6089, #6097
- Fix crash when calling win.setProgressBar after app.dock.setIcon. #6091
- Fix context menu always choosing first item by default. #6110
- Fix Delete not working as accelerator. #6168
Linux
- Fix app indicators using random IDs. #6145
- Fix message boxes and file dialogs not being modal. #6160
Windows
- Fix bounds of Tray not respecting scale factor."
995,"Changelog:
- Use app's name as default window title. #5945
- Add ready-to-show event to BrowserWindow. #6026
- Add --abi command line switch to default app. #5911
- Add showDefinitionForSelection() method to WebContents and <webview> tag. #5921
- Add pepperFlashSystemPlugin to the paths of app.getPath(name) API. #5943
- Add protocol property to Session to allow custom protocol for partition. #5904
- Add isPaused, canResume, getState APIs to DownloadItem. #5959
- Add support for a few more chrome.* APIs for devtools extensions. #5924
- Add BrowserWindow.getDevToolsExtensions() API. #5965
- Add focusable option to BrowserWindow. #6023
- Add web-contents-created event to app. #6029
- Fix devtools extension not working for <webview> tag. #5913
- Fix devtools extension not working for sessions with partition. #5904
- Fix random crash when using custom protocol. #5904
- Fix window.opener being null in window opened by <webview> tag. #5953
- Fix crash when closing window with devtools opened. brightray#226
OS X
- Add requestHeaders parameter for autoUpdater.setFeedURL(url[, requestHeaders]) API. #5879
- Fix maximizable: false not working for frameless window. #5944
Windows
- Add win.setFocusable(focusable) API. #6013 #6023
- Fix autoUpdater not waiting for current app to quit before launching newly installed app. #6037","Changelog:
- Use app's name as default window title. #5945
- Add ready-to-show event to BrowserWindow. #6026
- Add --abi command line switch to default app. #5911
- Add showDefinitionForSelection() method to WebContents and  tag. #5921
- Add pepperFlashSystemPlugin to the paths of app.getPath(name) API. #5943
- Add protocol property to Session to allow custom protocol for partition. #5904
- Add isPaused, canResume, getState APIs to DownloadItem. #5959
- Add support for a few more chrome.* APIs for devtools extensions. #5924
- Add BrowserWindow.getDevToolsExtensions() API. #5965
- Add focusable option to BrowserWindow. #6023
- Add web-contents-created event to app. #6029
- Fix devtools extension not working for  tag. #5913
- Fix devtools extension not working for sessions with partition. #5904
- Fix random crash when using custom protocol. #5904
- Fix window.opener being null in window opened by  tag. #5953
- Fix crash when closing window with devtools opened. brightray#226
OS X
- Add requestHeaders parameter for autoUpdater.setFeedURL(url[, requestHeaders]) API. #5879
- Fix maximizable: false not working for frameless window. #5944
Windows
- Add win.setFocusable(focusable) API. #6013 #6023
- Fix autoUpdater not waiting for current app to quit before launching newly installed app. #6037"
996,"Changelog:
- Update to Chrome 51.0.2704.84. #5929
- Implement click-through window for Windows and Linux.
  #5910
- Add app.relaunch([options]) API. #5837
- Add support for array and dictionary types in systemPreferences.getUserDefault(key, type) API. #5833
- Add pasteandmatchstyle and delete roles to MenuItem.  #5870
- Add app.disableHardwareAcceleration() API. #5889
- Add update-target-url event to WebContents and <webview> tag. #5903
- Add disableBlinkFeatures option to webPreferences of BrowserWindow. #5923
- Add disableBlinkFeatures attribute to <webview> tag. #5923
- Fix crash when using fetch in custom protocols. #5932
OS X
- Fix title of frameless window showing as empty under fullscreen. #5905
Linux
- Fix BrowserWindow.focus() not moving focus to the window. #5888","Changelog:
- Update to Chrome 51.0.2704.84. #5929
- Implement click-through window for Windows and Linux.
  #5910
- Add app.relaunch([options]) API. #5837
- Add support for array and dictionary types in systemPreferences.getUserDefault(key, type) API. #5833
- Add pasteandmatchstyle and delete roles to MenuItem.  #5870
- Add app.disableHardwareAcceleration() API. #5889
- Add update-target-url event to WebContents and  tag. #5903
- Add disableBlinkFeatures option to webPreferences of BrowserWindow. #5923
- Add disableBlinkFeatures attribute to  tag. #5923
- Fix crash when using fetch in custom protocols. #5932
OS X
- Fix title of frameless window showing as empty under fullscreen. #5905
Linux
- Fix BrowserWindow.focus() not moving focus to the window. #5888"
997,"Changelog:
- Set default mime type if mimeType is not defined in the handler of protocol.registerBufferJob API. #5711
- Add app.releaseSingleInstance() API. #5720
- Add select-bluetooth-device event to WebContents. #5781
- Fix support for DevTools Extensions. #5711
- Fix node integration and preload script not working when webSecurity: false is set. #5768
- Fix protocol.registerHttpProtocol not working when the target URL redirects. #5753
- Fix objects without prototype can not be passed in remote module. #5736
- Fix print() method not available for the window returned by window.open. #5737
- Fix WebBluetooth not working. #5781
Windows
- Fix node processes unable to print output to console. #5776
- Fix fullscreen: false option also setting fullscreenable: false in BrowserWindow. #5718
- Fix using wrong icon size for Windows taskbar. #5763
- Fix window icon reverting to default after hiding and showing the window. #5782
OS X
- Fix menu appearing on wrong monitor. #5726
- Fix crash caused by calling BrowserWindow.setAspectRatio(0) #5734","Changelog:
- Set default mime type if mimeType is not defined in the handler of protocol.registerBufferJob API. #5711
- Add app.releaseSingleInstance() API. #5720
- Add select-bluetooth-device event to WebContents. #5781
- Fix support for DevTools Extensions. #5711
- Fix node integration and preload script not working when webSecurity: false is set. #5768
- Fix protocol.registerHttpProtocol not working when the target URL redirects. #5753
- Fix objects without prototype can not be passed in remote module. #5736
- Fix print() method not available for the window returned by window.open. #5737
- Fix WebBluetooth not working. #5781
Windows
- Fix node processes unable to print output to console. #5776
- Fix fullscreen: false option also setting fullscreenable: false in BrowserWindow. #5718
- Fix using wrong icon size for Windows taskbar. #5763
- Fix window icon reverting to default after hiding and showing the window. #5782
OS X
- Fix menu appearing on wrong monitor. #5726
- Fix crash caused by calling BrowserWindow.setAspectRatio(0) #5734"
998,"Changelog:
- Update to Chrome 51. #5648
- Returning a non-void value in beforeunload handler nows prevents the page to unload.  #5648
- Improve the ""Error opening app"" dialog. #5610
- Improve how Promise is detected in remote module. #5689
- Add webpageURL parameter to app.setUserActivity(type, userInfo[, webpageURL]) API. #5658
- Fix document.visibilityState and visibilitychange event not working in <webview> tag. #5684
- Fix unexpected behavior when calling app.quit() while there are BrowserWindows with closable set to false. #5701
Migration Notice:
- Due to a change of Chrome 51, returning non-empty strings or true in beforeunload handler now prevents the page to unload. #5648
- The private ATOM_SHELL_INTERNAL_RUN_AS_NODE environment variable has been removed, the code relies on it should use the public ELECTRON_RUN_AS_NODE environment variable instead. #5682
- The internal ATOM_SHELL_ environment variables have been renamed, if you are maintaining your own Electron fork, you might be affected. #5683","Changelog:
- Update to Chrome 51. #5648
- Returning a non-void value in beforeunload handler nows prevents the page to unload.  #5648
- Improve the ""Error opening app"" dialog. #5610
- Improve how Promise is detected in remote module. #5689
- Add webpageURL parameter to app.setUserActivity(type, userInfo[, webpageURL]) API. #5658
- Fix document.visibilityState and visibilitychange event not working in  tag. #5684
- Fix unexpected behavior when calling app.quit() while there are BrowserWindows with closable set to false. #5701
Migration Notice:
- Due to a change of Chrome 51, returning non-empty strings or true in beforeunload handler now prevents the page to unload. #5648
- The private ATOM_SHELL_INTERNAL_RUN_AS_NODE environment variable has been removed, the code relies on it should use the public ELECTRON_RUN_AS_NODE environment variable instead. #5682
- The internal ATOM_SHELL_ environment variables have been renamed, if you are maintaining your own Electron fork, you might be affected. #5683"
999,"Changelog:
Windows
- Fix crash caused by linking with VC++ statically. #5658","Changelog:
Windows
- Fix crash caused by linking with VC++ statically. #5658"
1000,"Changelog:
- Add BrowserWindow.setIcon(icon) API. #5624
- Add Session.allowNTLMCredentialsForDomains(domains) API, and mark app.allowNTLMCredentialsForDomains(domains) as deprecated. #5638
- Fix error description of did-fail-load event being empty. #5634
- Fix require('electron') being able to be overridden by npm modules.
  #5662
- Fix remote module not handling rejection of Promise in the main process. #5666
Windows
- Improve icon resolution when using ICO icons. #5624
- Fix crashReporter not working. #5646
OS X
- Add offsetX parameter to BrowserWindow.setSheetOffset(offsetY[, offsetX]) API. #5603
- Fix the usages of private APIs in MAS build. electron/libchromiumcontent#212
- Fix BrowserWindow.setAspectRatio(ratio) not correctly implemented. #5644
Linux
- Fix the binary of ffmpeg not stripped. #5668","Changelog:
- Add BrowserWindow.setIcon(icon) API. #5624
- Add Session.allowNTLMCredentialsForDomains(domains) API, and mark app.allowNTLMCredentialsForDomains(domains) as deprecated. #5638
- Fix error description of did-fail-load event being empty. #5634
- Fix require('electron') being able to be overridden by npm modules.
  #5662
- Fix remote module not handling rejection of Promise in the main process. #5666
Windows
- Improve icon resolution when using ICO icons. #5624
- Fix crashReporter not working. #5646
OS X
- Add offsetX parameter to BrowserWindow.setSheetOffset(offsetY[, offsetX]) API. #5603
- Fix the usages of private APIs in MAS build. electron/libchromiumcontent#212
- Fix BrowserWindow.setAspectRatio(ratio) not correctly implemented. #5644
Linux
- Fix the binary of ffmpeg not stripped. #5668"
1001,"Changelog:
- Disable <webview> tag when nodeIntegration is off in host window. #5559
- Add --disable-http2 command line switch. electron/brightray#222
- Add webFrame.getResourceUsage() and webFrame.clearCache() APIs. #5413
- Add buttonLabel option to dialog.showOpenDialog(options) and dialog.showSaveDialog(options). #5509
- Fix Invalid package error when there is asar path in the command passed to child_process.exec. #5571
- Fix <webview> tag not inheriting host window's zoom level. #5616
OS X
- Enable Mac App Store sandboxing without using temporary-exception.
  #5584, #5601
- The callback of systemPreferences.subscribeNotification(event, callback) now accepts event and userInfo parameters. #5582
- Fix context menu not showing all items when opened near the lower bound of display. #5518
- Fix using titleBarStyle option makes the top of window draggable. #5557
Windows
- Link statically with Visual C++ libraries. #5538, #5602
Linux
- Fix dynamic library loading error with libnotify.so.4 on some distributions. electron/brightray#221","Changelog:
- Disable  tag when nodeIntegration is off in host window. #5559
- Add --disable-http2 command line switch. electron/brightray#222
- Add webFrame.getResourceUsage() and webFrame.clearCache() APIs. #5413
- Add buttonLabel option to dialog.showOpenDialog(options) and dialog.showSaveDialog(options). #5509
- Fix Invalid package error when there is asar path in the command passed to child_process.exec. #5571
- Fix  tag not inheriting host window's zoom level. #5616
OS X
- Enable Mac App Store sandboxing without using temporary-exception.
  #5584, #5601
- The callback of systemPreferences.subscribeNotification(event, callback) now accepts event and userInfo parameters. #5582
- Fix context menu not showing all items when opened near the lower bound of display. #5518
- Fix using titleBarStyle option makes the top of window draggable. #5557
Windows
- Link statically with Visual C++ libraries. #5538, #5602
Linux
- Fix dynamic library loading error with libnotify.so.4 on some distributions. electron/brightray#221"
1002,"Changelog:
- Upgrade to Chrome 50.0.2661.102.
- Upgrade to Node.js 6.1.0.
Windows
- Use Visual Studio 2015 for building.","Changelog:
- Upgrade to Chrome 50.0.2661.102.
- Upgrade to Node.js 6.1.0.
Windows
- Use Visual Studio 2015 for building."
1003,"Changelog:
- Allow protocol module to be imported before the ready event of app module. #5406
- Add context-menu event to WebContents. #5379
- Add process.defaultApp property. #5421
- Fix protocol.registerStandardSchemes(schemes) not working. #5406
- Fix file system indexing not working in devtools. #5431
- Fix crash when replying to the same synchronous message more than once. #5430
- Fix expirationDate not showing for persistent cookies in session.cookies.get API. #5444
- Fix protocol.registerStandardSchemes(schemes) not working. #5406
- Fix exception after creating large numbers of renderer processes. #5491
- Fix devtools extension repeatedly loaded when changing dock state. electron/brightray#219
OS X
- Disable the scroll bounce (rubber banding) effect by default. #5412
- Add scrollBounce option to webPreferences. #5412
- Add app.setUserActivity(type, userInfo), app.getCurrentActivityType() APIs and continue-activity event for Handoff feature of OS X. #5352
- Add app.dock.downloadFinished(filePath) API. #5477
- Fix high CPU usage when using pty.js Node module. #5378
- Fix app.removeAsDefaultProtocolClient(protocol) API not working. #5440
Linux
- Resize the icon of dialog.showMessageBox() to a suitable size. #5496","Changelog:
- Allow protocol module to be imported before the ready event of app module. #5406
- Add context-menu event to WebContents. #5379
- Add process.defaultApp property. #5421
- Fix protocol.registerStandardSchemes(schemes) not working. #5406
- Fix file system indexing not working in devtools. #5431
- Fix crash when replying to the same synchronous message more than once. #5430
- Fix expirationDate not showing for persistent cookies in session.cookies.get API. #5444
- Fix protocol.registerStandardSchemes(schemes) not working. #5406
- Fix exception after creating large numbers of renderer processes. #5491
- Fix devtools extension repeatedly loaded when changing dock state. electron/brightray#219
OS X
- Disable the scroll bounce (rubber banding) effect by default. #5412
- Add scrollBounce option to webPreferences. #5412
- Add app.setUserActivity(type, userInfo), app.getCurrentActivityType() APIs and continue-activity event for Handoff feature of OS X. #5352
- Add app.dock.downloadFinished(filePath) API. #5477
- Fix high CPU usage when using pty.js Node module. #5378
- Fix app.removeAsDefaultProtocolClient(protocol) API not working. #5440
Linux
- Resize the icon of dialog.showMessageBox() to a suitable size. #5496"
1004,"Changelog:
- Fix devtools extension not loading.","Changelog:
- Fix devtools extension not loading."
1005,"Changelog:
- Bump version number to 1.0.0.
- Remove deprecated APIs. #5373
Migration notice:
- Please update your app to v0.37.8 first to check whether there are deprecated
  APIs usages.
- Following deprecated events of BrowserWindow have been removed but there
  were no deprecation warnings in previous versions, you should use the
  corresponding events in webContents instead:
  - crash
  - devtools-focused
  - devtools-opened
  - devtools-closed
- NativeImage.toDataUrl has been removed but there were no deprecation
  warnings in previous versions, you should use toDataURL instead.","Changelog:
- Bump version number to 1.0.0.
- Remove deprecated APIs. #5373
Migration notice:
- Please update your app to v0.37.8 first to check whether there are deprecated
  APIs usages.
- Following deprecated events of BrowserWindow have been removed but there
  were no deprecation warnings in previous versions, you should use the
  corresponding events in webContents instead:
  - crash
  - devtools-focused
  - devtools-opened
  - devtools-closed
- NativeImage.toDataUrl has been removed but there were no deprecation
  warnings in previous versions, you should use toDataURL instead."
1006,"Changelog:
- Disable node integration in webview when it is disabled in host page. #5244
- Make sure the userData directory is created during the ready event of app module. #5340
- Throw error when autoUpdater.quitAndInstall() is called while there is no update. #5287
- Add systemPreferences module. #5282
- Add app.isDefaultProtocolClient(protocol) API.  #5302
- Fix occasional crash when doing GC. #5293
- Fix app.makeSingleInstance(callback) wrongly returning true on first launch. #5311
- Fix will-download event not emitted for HTML pages. #5315
- Fix crash when navigating to a new location after downloading failed. #5315
- Fix webContents.executeJavaScript not working after being called immediately after loadURL. #5319
- Fix desktopCapturer.getSources not responding when there is subsequent calls with different arguments. #5320
OS X
- Fix the Command Plus accelerator appearing as Shift Command = in menu. #5298
Windows
- Fix display-removed event not working. #5334","Changelog:
- Disable node integration in webview when it is disabled in host page. #5244
- Make sure the userData directory is created during the ready event of app module. #5340
- Throw error when autoUpdater.quitAndInstall() is called while there is no update. #5287
- Add systemPreferences module. #5282
- Add app.isDefaultProtocolClient(protocol) API.  #5302
- Fix occasional crash when doing GC. #5293
- Fix app.makeSingleInstance(callback) wrongly returning true on first launch. #5311
- Fix will-download event not emitted for HTML pages. #5315
- Fix crash when navigating to a new location after downloading failed. #5315
- Fix webContents.executeJavaScript not working after being called immediately after loadURL. #5319
- Fix desktopCapturer.getSources not responding when there is subsequent calls with different arguments. #5320
OS X
- Fix the Command Plus accelerator appearing as Shift Command = in menu. #5298
Windows
- Fix display-removed event not working. #5334"
1007,"Changelog:
- Add mode option to webContents.openDevTools(options) API.
- Add openExternal type of permission parameter to Session.setPermissionRequestHandler(handler) API.
- Add process.windowsStore property to determine whether the app is an Windows Store app.
- Fix random crash when accessing devToolsWebContents.hostWebContents.
- Fix session.enableNetworkEmulation(options) API not working.
- Fix WebContents.executeJavaScript(code) not working when called during a resource load after page is loaded.
- Fix after using app.setPath to change the location of userData directory, a folder is still created at the default location. 
- Fix occasional exception when removing a reference to a remote object.
Windows
- Avoid spawning new Squirrel processes when there is already one running.
Linux
- Use the append hint when showing notifications.
- Add app.importCertificate(options, callback) API.
OS X
- Update the docs on how to submit latest versions of Electron to Mac App Store.
- Add BrowserWindow.setSheetOffset(offset) for changing the offset when showing sheet.
- Fix crash when app's name is long while using app.makeSingleInstance with Mac App Store build.","Changelog:
- Add mode option to webContents.openDevTools(options) API.
- Add openExternal type of permission parameter to Session.setPermissionRequestHandler(handler) API.
- Add process.windowsStore property to determine whether the app is an Windows Store app.
- Fix random crash when accessing devToolsWebContents.hostWebContents.
- Fix session.enableNetworkEmulation(options) API not working.
- Fix WebContents.executeJavaScript(code) not working when called during a resource load after page is loaded.
- Fix after using app.setPath to change the location of userData directory, a folder is still created at the default location. 
- Fix occasional exception when removing a reference to a remote object.
Windows
- Avoid spawning new Squirrel processes when there is already one running.
Linux
- Use the append hint when showing notifications.
- Add app.importCertificate(options, callback) API.
OS X
- Update the docs on how to submit latest versions of Electron to Mac App Store.
- Add BrowserWindow.setSheetOffset(offset) for changing the offset when showing sheet.
- Fix crash when app's name is long while using app.makeSingleInstance with Mac App Store build."
1008,"Changelog:
- Don't emit will-quit when app.exit() is called.
- Add isMainFrame parameter to did-fail-load event of WebContents.
- Add statusLine property to webRequest.OnHeadersReceived API's responseHeaders object.
- Add backgroundThrottling option to webPreferences of BrowserWindow.
- Add resourceType parameter to did-get-response-details event of WebContents.
- Fix <webview> and preload script not working when there is no script tag in page.
- Fix webRequest.onHeadersReceived API modifying original headers' status line.
- Fix breakpoints not working after reloading in the devtools view.
- Fix idle GC not working in the main process.
- Fix the race condition between did-fail-load and did-finish-load events.
- Fix wrong default transparent background for frameless window.
- Fix SSL certificate information not showing in the Security tab of devtools.
Windows
- Fix printing not working.
- Fix support with NVDA/JAWS screen readers.
- Fix crash when closing a window in its blur event handler.
- Fix notification not showing when Application User Model ID is set.
OS X
- Fix template image not working as tray icon on some machines.
- Fix backgroundColor of BrowserWindow not displaying correctly.
Linux
- Do not wait for xdg-open to exit when calling shell.openExternal.
- Add support for the tag property of HTML5 Notification API.
- Fix notifications not showing on Ubuntu 16.04.","Changelog:
- Don't emit will-quit when app.exit() is called.
- Add isMainFrame parameter to did-fail-load event of WebContents.
- Add statusLine property to webRequest.OnHeadersReceived API's responseHeaders object.
- Add backgroundThrottling option to webPreferences of BrowserWindow.
- Add resourceType parameter to did-get-response-details event of WebContents.
- Fix  and preload script not working when there is no script tag in page.
- Fix webRequest.onHeadersReceived API modifying original headers' status line.
- Fix breakpoints not working after reloading in the devtools view.
- Fix idle GC not working in the main process.
- Fix the race condition between did-fail-load and did-finish-load events.
- Fix wrong default transparent background for frameless window.
- Fix SSL certificate information not showing in the Security tab of devtools.
Windows
- Fix printing not working.
- Fix support with NVDA/JAWS screen readers.
- Fix crash when closing a window in its blur event handler.
- Fix notification not showing when Application User Model ID is set.
OS X
- Fix template image not working as tray icon on some machines.
- Fix backgroundColor of BrowserWindow not displaying correctly.
Linux
- Do not wait for xdg-open to exit when calling shell.openExternal.
- Add support for the tag property of HTML5 Notification API.
- Fix notifications not showing on Ubuntu 16.04."
1009,"Changelog:
- Fix wrongly using Node v6.0.0-pre, use Node v5.10.0 instead.
- Fix crash when creating Buffer with large size.","Changelog:
- Fix wrongly using Node v6.0.0-pre, use Node v5.10.0 instead.
- Fix crash when creating Buffer with large size."
1010,"Changelog:
- Upgrade to Node v5.10.0.
- Remove the white flash when loading pages.
- The default app is now packaged as asar archive.
- The atom.asar in the resources directory is renamed to electron.asar.
- Disable node integration in child windows opened with window.open when node integration is disabled in parent window.
- Add app.setAsDefaultProtocolClient(protocol) and app.removeAsDefaultProtocolClient(protocol) APIs.
- Fix crash when sending IPC messages.
- Fix wrong disposition parameter of new-window event for certain types of background types.
- Fix exception when calling remote method while not storing its remote object.
OS X
- Add swipe event to BrowserWindow.
- Fix backgroundColor option of BrowserWindow not working.","Changelog:
- Upgrade to Node v5.10.0.
- Remove the white flash when loading pages.
- The default app is now packaged as asar archive.
- The atom.asar in the resources directory is renamed to electron.asar.
- Disable node integration in child windows opened with window.open when node integration is disabled in parent window.
- Add app.setAsDefaultProtocolClient(protocol) and app.removeAsDefaultProtocolClient(protocol) APIs.
- Fix crash when sending IPC messages.
- Fix wrong disposition parameter of new-window event for certain types of background types.
- Fix exception when calling remote method while not storing its remote object.
OS X
- Add swipe event to BrowserWindow.
- Fix backgroundColor option of BrowserWindow not working."
1011,"Changelog:
- <webview>'s background is now transparent by default.
- Add NativeImage.getNativeHandle() API.
- Add -i/--interactive flag to default app that starts a repl for the main process. 
- Fix occasional exception when using remote module.
- Fix devtools workspace not working.
- Fix exception when accelerator is undefined when calling Menu.buildFromTemplate.
Windows
- Automatically set Application User Model ID when Squirrel.Windows is used.
- Fix crash when showing notifications while notifications are disabled.","Changelog:
- 's background is now transparent by default.
- Add NativeImage.getNativeHandle() API.
- Add -i/--interactive flag to default app that starts a repl for the main process. 
- Fix occasional exception when using remote module.
- Fix devtools workspace not working.
- Fix exception when accelerator is undefined when calling Menu.buildFromTemplate.
Windows
- Automatically set Application User Model ID when Squirrel.Windows is used.
- Fix crash when showing notifications while notifications are disabled."
1012,"Changelog:
- Fix occasional exception when using remote module.
Windows
- Fix crash when showing notifications while notifications are disabled.","Changelog:
- Fix occasional exception when using remote module.
Windows
- Fix crash when showing notifications while notifications are disabled."
1013,"Changelog:
- Add activeMatchOrdinal property in the result object of found-in-page event.
- Fix notifications not showing.
- Fix the main process hanging on exit.","Changelog:
- Add activeMatchOrdinal property in the result object of found-in-page event.
- Fix notifications not showing.
- Fix the main process hanging on exit."
1014,"Changelog:
OS X
- Fix libffmpeg.dylib image not found error on startup.
Windows
- Fix unable to start on Windows 7.","Changelog:
OS X
- Fix libffmpeg.dylib image not found error on startup.
Windows
- Fix unable to start on Windows 7."
1015,"Changelog:
- Upgrade to Chrome 49.","Changelog:
- Upgrade to Chrome 49."
1016,"Changelog:
- Add show and hide events to BrowserWindow.
- Do not block when calling document.hidden.
- Fix visibilitychange event not working.
- Fix passing certificate to select-client-certificate event's callback.
- Fix PrintScreen not working as accelerator.
- Fix style issues with <webview> inside flexbox.
- Fix unable to read image when there is .. in file path.
Linux
- Fix resizable option not working.
Windows
- Make fullscreenable option work.
OS X
- Add platform-theme-changed event to app module.
- Add app.isDarkMode() API.
- Fix Cmd+~ cycling windows in wrong direction.
- Fix BrowserWindow.isMaximized() returning wrong result when window is not resizable.","Changelog:
- Add show and hide events to BrowserWindow.
- Do not block when calling document.hidden.
- Fix visibilitychange event not working.
- Fix passing certificate to select-client-certificate event's callback.
- Fix PrintScreen not working as accelerator.
- Fix style issues with  inside flexbox.
- Fix unable to read image when there is .. in file path.
Linux
- Fix resizable option not working.
Windows
- Make fullscreenable option work.
OS X
- Add platform-theme-changed event to app module.
- Add app.isDarkMode() API.
- Fix Cmd+~ cycling windows in wrong direction.
- Fix BrowserWindow.isMaximized() returning wrong result when window is not resizable."
1017,"Changelog:
- WebContents.beginFrameSubscription becomes faster and gets better image quality.
- Add callback parameter for webContents.executeJavaScript and <webview>.executeJavaScript.
- Fix media devices having empty labels.
- Fix the methods of remote objects being unwritable and unconfigurable.","Changelog:
- WebContents.beginFrameSubscription becomes faster and gets better image quality.
- Add callback parameter for webContents.executeJavaScript and .executeJavaScript.
- Fix media devices having empty labels.
- Fix the methods of remote objects being unwritable and unconfigurable."
1018,"Changelog:
- Cache the remote objects returned by remote module.
- Add webContents.hostWebContents property.
- Add <webview>.getWebContents() API.
- Fix ES6 classes not working with remote module.
- Fix remote objects of renderer processes being wrongly freed when page is reloaded.
- Fix crash in protocol module for certain kind of URLs.
Linux
- Fix crash when freetype 2.6.3 is used in system.
- Fix the application menu bar disappearing after hiding and showing the window.","Changelog:
- Cache the remote objects returned by remote module.
- Add webContents.hostWebContents property.
- Add .getWebContents() API.
- Fix ES6 classes not working with remote module.
- Fix remote objects of renderer processes being wrongly freed when page is reloaded.
- Fix crash in protocol module for certain kind of URLs.
Linux
- Fix crash when freetype 2.6.3 is used in system.
- Fix the application menu bar disappearing after hiding and showing the window."
1019,"Changelog:
- Link with ffmpeg dynamically.
- Provide prebuilt binaries of ffmpeg which do not include proprietary codecs.
- Improve error message when there is invalid parameter passed to Electron API.
- Emit did-fail-load event when invalid URL is passed to BrowserWindow.loadURL.
- Launch URL or HTML file directly in default app.
- Add cursor-changed event to WebContents.
- Add Session.setPermissionRequestHandler(handler) API.
- Add Session.clearHostResolverCache(callback) API.
- Add readRtf and writeRtf methods to clipboard module.
- Fix crash when calling methods of downloadItem in will-download handler when event.preventDefault is called.
- Fix crash when calling WebContents.endFrameSubscription() while there are pending frames.
- Fix the exit event of process object not reliable in renderer process.
- Fix BrowserWindow.getNativeWindowHandle() returning corrupted buffer.
Windows
- Fix methods of autoUpdater not accessible in remote module.
OS X
- Add app.show and app.hide APIs.
- Fix icon not working in dialog.showMessageBox(options).
- Fix Command + ~ not switching windows sometimes.
Linux
- Don't drop capabilities in renderer process.","Changelog:
- Link with ffmpeg dynamically.
- Provide prebuilt binaries of ffmpeg which do not include proprietary codecs.
- Improve error message when there is invalid parameter passed to Electron API.
- Emit did-fail-load event when invalid URL is passed to BrowserWindow.loadURL.
- Launch URL or HTML file directly in default app.
- Add cursor-changed event to WebContents.
- Add Session.setPermissionRequestHandler(handler) API.
- Add Session.clearHostResolverCache(callback) API.
- Add readRtf and writeRtf methods to clipboard module.
- Fix crash when calling methods of downloadItem in will-download handler when event.preventDefault is called.
- Fix crash when calling WebContents.endFrameSubscription() while there are pending frames.
- Fix the exit event of process object not reliable in renderer process.
- Fix BrowserWindow.getNativeWindowHandle() returning corrupted buffer.
Windows
- Fix methods of autoUpdater not accessible in remote module.
OS X
- Add app.show and app.hide APIs.
- Fix icon not working in dialog.showMessageBox(options).
- Fix Command + ~ not switching windows sometimes.
Linux
- Don't drop capabilities in renderer process."
1020,"Changelog:
- Fix the occasional Object has been destroyed exception in the main process.
Windows
- Fix crash on exit.","Changelog:
- Fix the occasional Object has been destroyed exception in the main process.
Windows
- Fix crash on exit."
1021,"Changelog:
- Restarts renderer process for server redirect.
- Add setMovable, isMovable, setMinimizable, isMinimizable, setMaximizable, isMaximizable, setFullScreenable, isFullScreenable, setClosable, isClosable, setHasShadow, hasShadow methods to BrowserWindow.
- Add scroll-touch-begin and scroll-touch-end events to BrowserWindow.
- Add webContents.debugger API.
- Add app.dock.setIcon API.
- Add uploadData to details of session.webRequest.onBeforeRequest.
- Support alpha channel in backgroundColor option of BrowserWindow.
- Fix exception when writing to stdout/stderr in renderer process under certain circumstances.
OS X
- Add positioningItem parameter for Menu.popup.
Windows
- Fix using autoUpdater throws exception.
- Fix possible crash when closing asar archive.","Changelog:
- Restarts renderer process for server redirect.
- Add setMovable, isMovable, setMinimizable, isMinimizable, setMaximizable, isMaximizable, setFullScreenable, isFullScreenable, setClosable, isClosable, setHasShadow, hasShadow methods to BrowserWindow.
- Add scroll-touch-begin and scroll-touch-end events to BrowserWindow.
- Add webContents.debugger API.
- Add app.dock.setIcon API.
- Add uploadData to details of session.webRequest.onBeforeRequest.
- Support alpha channel in backgroundColor option of BrowserWindow.
- Fix exception when writing to stdout/stderr in renderer process under certain circumstances.
OS X
- Add positioningItem parameter for Menu.popup.
Windows
- Fix using autoUpdater throws exception.
- Fix possible crash when closing asar archive."
1022,"Changelog:
- Fix crash when switching between submenus of window menubar.
- Add support for the silent property of Notification.
- Add defaultFontFamily, defaultFontSize, defaultMonospaceFontSize, minimumFontSize, defaultEncoding options to webPreferences of BrowserWindow.
- Add <webview>.loadURL.
- Add blinkfeatures attribute for <webview>.
OS X
- Add animate parameter for setBounds, setSize, setContentSize, setPosition methods of BrowserWindow.
- Add movable option for BrowserWindow.
- Make the backgroundColor option of BrowserWindow work.
Windows
- Add app.isAeroGlassEnabled() API.","Changelog:
- Fix crash when switching between submenus of window menubar.
- Add support for the silent property of Notification.
- Add defaultFontFamily, defaultFontSize, defaultMonospaceFontSize, minimumFontSize, defaultEncoding options to webPreferences of BrowserWindow.
- Add .loadURL.
- Add blinkfeatures attribute for .
OS X
- Add animate parameter for setBounds, setSize, setContentSize, setPosition methods of BrowserWindow.
- Add movable option for BrowserWindow.
- Make the backgroundColor option of BrowserWindow work.
Windows
- Add app.isAeroGlassEnabled() API."
1023,"Changelog:
- session.setProxy(config) API now accepts an Object instead of String.
- BrowserWindow.getFocusedWindow() API now returns null instead of undefined when there is no focused window.
- Add session.flushStorageData() API.
- Add session.getCacheSize(callback) API.
- Add BrowserWindow.getNativeWindowHandle() API.
- Add defaultId option for dialog.showMessageBox(options) API.
- Add insertText and executeJavaScript methods to webFrame module.
- Add insertText method to webContents and <webview>.
- Fix wrong aspect ratio in Netflix videos.
- Fix source code highlighting not working in devtools.
- Fix <webview>.src not working before onload event.
Linux
- Fix --touch-devices command line switch not working.
Windows
- Fix DRM not working in Adobe Flash Player plugin.","Changelog:
- session.setProxy(config) API now accepts an Object instead of String.
- BrowserWindow.getFocusedWindow() API now returns null instead of undefined when there is no focused window.
- Add session.flushStorageData() API.
- Add session.getCacheSize(callback) API.
- Add BrowserWindow.getNativeWindowHandle() API.
- Add defaultId option for dialog.showMessageBox(options) API.
- Add insertText and executeJavaScript methods to webFrame module.
- Add insertText method to webContents and .
- Fix wrong aspect ratio in Netflix videos.
- Fix source code highlighting not working in devtools.
- Fix .src not working before onload event.
Linux
- Fix --touch-devices command line switch not working.
Windows
- Fix DRM not working in Adobe Flash Player plugin."
1024,"Changelog:
- Add support for Widevine CDM plugin.
- Add isDevToolsFocused method to WebContents and <webview>.
- Add did-navigate and did-navigate-in-page events to WebContents and <webview>.
- Add will-navigate, devtools-opened, devtools-closed, devtools-focused events to <webview>.
- Add blinkFeatures option to webPreferences.
- Remove overlayScrollbars, sharedWorker, pageVisibility options from webPreferences.
- Localize the default string resources in HTML elements.
- Allow using fetch for URLs registered as privilege.
- Fix memory leak in remote module.
- Fix distorted image when calling capturePage with no rect.
- Fix crash when using protocol.registerHttpProtocol without internet connection.
OS X
- Fix drop-files not firing when dragging from the dock.
- Fix app.clearRecentDocuments not working.
- Fix crash when calling dialog.showSaveDialog with filters with no extensions.
- Fix crash when creating Window menu with no submenu items.
- Fix Tray.setPressedImage not working after turning off highlight mode.
- Fix unable to hide fullscreen button on EL Capitan.
Windows
- Fix recursive loop when calling mkdirp inside an asar archive.
- Fix the window menu bar not behaving correctly.
- Fix dialog.openSaveDialog adding extension to filename when it shouldn't.
- Fix bad typing performance.","Changelog:
- Add support for Widevine CDM plugin.
- Add isDevToolsFocused method to WebContents and .
- Add did-navigate and did-navigate-in-page events to WebContents and .
- Add will-navigate, devtools-opened, devtools-closed, devtools-focused events to .
- Add blinkFeatures option to webPreferences.
- Remove overlayScrollbars, sharedWorker, pageVisibility options from webPreferences.
- Localize the default string resources in HTML elements.
- Allow using fetch for URLs registered as privilege.
- Fix memory leak in remote module.
- Fix distorted image when calling capturePage with no rect.
- Fix crash when using protocol.registerHttpProtocol without internet connection.
OS X
- Fix drop-files not firing when dragging from the dock.
- Fix app.clearRecentDocuments not working.
- Fix crash when calling dialog.showSaveDialog with filters with no extensions.
- Fix crash when creating Window menu with no submenu items.
- Fix Tray.setPressedImage not working after turning off highlight mode.
- Fix unable to hide fullscreen button on EL Capitan.
Windows
- Fix recursive loop when calling mkdirp inside an asar archive.
- Fix the window menu bar not behaving correctly.
- Fix dialog.openSaveDialog adding extension to filename when it shouldn't.
- Fix bad typing performance."
1025,"Changelog:
- Add did-change-theme-color event to WebContents and <webview>.
- Add media-started-playing and media-paused events to WebContents and <webview>.
- Add findInPage method to WebContents and <webview>.
- Fix form redirect not working.
- Fix credentials: 'include' being added to service worker's headers.
- Fix in page navigations in sub-frames causing full page refresh.
- Fix wrong document.hidden and document.visibilityState values when window is minimized.
- Fix crash when using webRequest API.
- Fix webRequest.onBeforeSendHeaders not removing existing headers.
OS X
- Remove the notification from notification center when is clicked or cancelled.
- Fix app menu not showing after calling app.dock.show().
- Fix fullscreen mode for BrowserWindow with hidden-inset of titleBarStyle.
- Fix shell.openExternal not working with URLs containing valid URL special characters.
Linux
- Load libnotify dynamically instead of linking with the library.
- Fix pressing Alt not toggling window menu bar.
Windows
- Fix shell.moveItemToTrash not working on Windows 7.
- Fix showing notification when icon is inside asar archive or the icon's URL is not file:// scheme.","Changelog:
- Add did-change-theme-color event to WebContents and .
- Add media-started-playing and media-paused events to WebContents and .
- Add findInPage method to WebContents and .
- Fix form redirect not working.
- Fix credentials: 'include' being added to service worker's headers.
- Fix in page navigations in sub-frames causing full page refresh.
- Fix wrong document.hidden and document.visibilityState values when window is minimized.
- Fix crash when using webRequest API.
- Fix webRequest.onBeforeSendHeaders not removing existing headers.
OS X
- Remove the notification from notification center when is clicked or cancelled.
- Fix app menu not showing after calling app.dock.show().
- Fix fullscreen mode for BrowserWindow with hidden-inset of titleBarStyle.
- Fix shell.openExternal not working with URLs containing valid URL special characters.
Linux
- Load libnotify dynamically instead of linking with the library.
- Fix pressing Alt not toggling window menu bar.
Windows
- Fix shell.moveItemToTrash not working on Windows 7.
- Fix showing notification when icon is inside asar archive or the icon's URL is not file:// scheme."
1026,"Changeling:
- Fix wrong appData and userData dir values.","Changeling:
- Fix wrong appData and userData dir values."
1027,"Changelog:
Windows
- Fix shell.moveItemToTrash not working on Windows 7.","Changelog:
Windows
- Fix shell.moveItemToTrash not working on Windows 7."
1028,"Changelog:
- Add session.webRequest API.
- Add A5 to webContents.printToPDF's pageSize.
- crashReporter.start now requires passing submitURL and companyName.
- Make window.opener a BrowserWindowProxy.
- Don't pump message loop when sending synchronous message in renderer process.
- Fix crash in V8 when doing garbage collection.
- Fix crash when garbage collecting Buffers.
- Fix crash when passing empty path to app.addRecentDocument.
- Fix crash when changing page's location while using service worker.
- Fix x and y options not working in BrowserWindow.capturePage.
OS X
- Remove usages of private xpc_ APIs in MAS build.
- Fix shell.openExternal not able to open URLs with unescaped characters.","Changelog:
- Add session.webRequest API.
- Add A5 to webContents.printToPDF's pageSize.
- crashReporter.start now requires passing submitURL and companyName.
- Make window.opener a BrowserWindowProxy.
- Don't pump message loop when sending synchronous message in renderer process.
- Fix crash in V8 when doing garbage collection.
- Fix crash when garbage collecting Buffers.
- Fix crash when passing empty path to app.addRecentDocument.
- Fix crash when changing page's location while using service worker.
- Fix x and y options not working in BrowserWindow.capturePage.
OS X
- Remove usages of private xpc_ APIs in MAS build.
- Fix shell.openExternal not able to open URLs with unescaped characters."
1029,"Changelog:
- Upgrade to Chrome 47.
- Upgrade to Node 5.1.1.
- Add desktopCapturer module.
- Add protocol.registerServiceWorkerSchemes API.
- Add uploadDate property for request object in protocol module.
- Don't touch the argument when calling Menu.buildFromTemplate.
- Don't emit will-quit event when calling process.exit or app.exit.
- Fix wrong appData and userData dir values.
- Fix HTTP/2 not working.
- Fix the exit event of process object not including exit code.
- Fix event.source not matching the object returned by window.open in message event handler.
- Fix wrong origin string in window.postMessage.
OS X
- Add BrowserWindow.setIgnoreMouseEvents API.
- Remove the automatically appended Enter Full Screen menu item.","Changelog:
- Upgrade to Chrome 47.
- Upgrade to Node 5.1.1.
- Add desktopCapturer module.
- Add protocol.registerServiceWorkerSchemes API.
- Add uploadDate property for request object in protocol module.
- Don't touch the argument when calling Menu.buildFromTemplate.
- Don't emit will-quit event when calling process.exit or app.exit.
- Fix wrong appData and userData dir values.
- Fix HTTP/2 not working.
- Fix the exit event of process object not including exit code.
- Fix event.source not matching the object returned by window.open in message event handler.
- Fix wrong origin string in window.postMessage.
OS X
- Add BrowserWindow.setIgnoreMouseEvents API.
- Remove the automatically appended Enter Full Screen menu item."
1030,"Changelog:
- Fix typo: isDestroy => isDestroyed.","Changelog:
- Fix typo: isDestroy => isDestroyed."
1031,"Changelog:
- Add menu parameter for Tray.popUpContextMenu API.
- Add downloadURL method for WebContents and <webview>.
- Allow toggling asar support in Node's built-in modules with process.noAsar.
- Disable CORS for custom protocols.
- Fix crash when calling loadURL in the did-fail-load event.
- Fix crash when closing window in the page-title-updated event.
- Fix recursive call when using downloadItem.hasUserGesture.
- Fix crash caused by race condition on exit when using protocol module.
- Fix window.open not respecting the features string.
Windows
- Fix crash on exit when there are heavy Node tasks.
- Fix child_process.execFile not working for files in asar archive.
OS X
- Build with OS X 10.10 SDK.","Changelog:
- Add menu parameter for Tray.popUpContextMenu API.
- Add downloadURL method for WebContents and .
- Allow toggling asar support in Node's built-in modules with process.noAsar.
- Disable CORS for custom protocols.
- Fix crash when calling loadURL in the did-fail-load event.
- Fix crash when closing window in the page-title-updated event.
- Fix recursive call when using downloadItem.hasUserGesture.
- Fix crash caused by race condition on exit when using protocol module.
- Fix window.open not respecting the features string.
Windows
- Fix crash on exit when there are heavy Node tasks.
- Fix child_process.execFile not working for files in asar archive.
OS X
- Build with OS X 10.10 SDK."
1032,"Changelog:
- Add --proxy-bypass-list command line switch.
- Add ELECTRON_RUN_AS_NODE environment variable.
- Don't block renderer process when calling asynchronous methods of <webview>.
- Fix child_process.execFile unable to execute files in asar archive.
- Fix crash when handling HTTP responses without content in protocol module.
- Fix a few places using deprecated API inside Electron.
- Fix callbacks passed to dialog module with remote module not working.
- Fix wrong deprecation wrappers of BrowserWindow.
Windows
- Fix crash when Notification is used while there is no Application User Model ID.
OS X
- Fix crash when closing a window in fullscreen state.
- Fix crash when LSUIElement is added to main bundle's Info.plist.","Changelog:
- Add --proxy-bypass-list command line switch.
- Add ELECTRON_RUN_AS_NODE environment variable.
- Don't block renderer process when calling asynchronous methods of .
- Fix child_process.execFile unable to execute files in asar archive.
- Fix crash when handling HTTP responses without content in protocol module.
- Fix a few places using deprecated API inside Electron.
- Fix callbacks passed to dialog module with remote module not working.
- Fix wrong deprecation wrappers of BrowserWindow.
Windows
- Fix crash when Notification is used while there is no Application User Model ID.
OS X
- Fix crash when closing a window in fullscreen state.
- Fix crash when LSUIElement is added to main bundle's Info.plist."
1033,"Changelog:
- Add session module for full multi-session support.
- Add support for some special keys in webContents.sendInputEvent.
- Add certificate-error event to webContents and app.
- Add session.setCertificateVerifyProc API.
- Fix webContents.reloadIgnoringCache not working.
Windows
- Fix crash when sending notifications with images.
- Fix showing notifications on Windows 8 when app name is not the same with app user model ID.
OS X
- Add downloads for dSYM symbols.
- Support showing the window as desktop.
- Fix the size of Tray icon not updated when the image is changed.
Linux
- Fix blurry rendering on some High-DPI machines.","Changelog:
- Add session module for full multi-session support.
- Add support for some special keys in webContents.sendInputEvent.
- Add certificate-error event to webContents and app.
- Add session.setCertificateVerifyProc API.
- Fix webContents.reloadIgnoringCache not working.
Windows
- Fix crash when sending notifications with images.
- Fix showing notifications on Windows 8 when app name is not the same with app user model ID.
OS X
- Add downloads for dSYM symbols.
- Support showing the window as desktop.
- Fix the size of Tray icon not updated when the image is changed.
Linux
- Fix blurry rendering on some High-DPI machines."
1034,"Changelog:
OS X
- Fix crash when closing a window in fullscreen state.","Changelog:
OS X
- Fix crash when closing a window in fullscreen state."
1035,"Changelog:
Linux
- Fix blurry rendering on some High-DPI machines.","Changelog:
Linux
- Fix blurry rendering on some High-DPI machines."
1036,"Changelog:
- Show warnings for deprecated APIs, can be turned off with process.noDeprecation.
- Add electron module which includes all public APIs.
- The ipc module is deprecated, should use ipcRenderer in renderer process, and ipcMain in main process.
- The ipcRenderer module adds an event object when emitting events, to match the style of ipcMain module.
- Remove the - in BrowserWindow's option names.
- clicked events in Tray are renamed to click.
- The Url in API names is replaced with URL.
- Add documents, downloads, music, pictures, videos keys to app.getPath.
- Fix memory leak of webContents.beginFrameSubscription.
Windows
- Add support for toast notifications on Windows >= 8.
OS X
- Add drag-enter, drag-leave, drag-end and drop events to Tray module.
- Fix images not showing in notifications on OS X 10.9.","Changelog:
- Show warnings for deprecated APIs, can be turned off with process.noDeprecation.
- Add electron module which includes all public APIs.
- The ipc module is deprecated, should use ipcRenderer in renderer process, and ipcMain in main process.
- The ipcRenderer module adds an event object when emitting events, to match the style of ipcMain module.
- Remove the - in BrowserWindow's option names.
- clicked events in Tray are renamed to click.
- The Url in API names is replaced with URL.
- Add documents, downloads, music, pictures, videos keys to app.getPath.
- Fix memory leak of webContents.beginFrameSubscription.
Windows
- Add support for toast notifications on Windows >= 8.
OS X
- Add drag-enter, drag-leave, drag-end and drop events to Tray module.
- Fix images not showing in notifications on OS X 10.9."
1037,"Changelog:
- Quit the application gracefully when process.exit is called.
- Fix showing context menu for pepper plugin.
- Fix possible crashes when exiting.
Windows
- Don't set Application User Model ID by default.
- Improve accessibility support.
- Fix the Application User Model ID set by app.setAppUserModelId not being used by other APIs.
- Fix buffer overflow when setting long tooltip for tray icon.
- Fix shell.moveItemToTrash() not working for drives created with subst.
- Fix crash when starting crash reporter on some machines.
- Fix crash when calling process.exit.","Changelog:
- Quit the application gracefully when process.exit is called.
- Fix showing context menu for pepper plugin.
- Fix possible crashes when exiting.
Windows
- Don't set Application User Model ID by default.
- Improve accessibility support.
- Fix the Application User Model ID set by app.setAppUserModelId not being used by other APIs.
- Fix buffer overflow when setting long tooltip for tray icon.
- Fix shell.moveItemToTrash() not working for drives created with subst.
- Fix crash when starting crash reporter on some machines.
- Fix crash when calling process.exit."
1038,"Changelog:
- Add login event for app and WebContents.
- Add extraHeaders option for WebContents.loadUrl.
- Fix crash when the callback passed to native APIs threw exception.
Windows
- Add BrowserWindow.hookWindowMessage API.
- Fix exception when calling shell.openItemInFolder in renderer process.
- Fix *.* being appended to filename when setting path in save dialog without extension.
OS X
- Fix private API call of _NSDrawCarbonThemeListBox in Mac App Store build.
- Links with OS X 10.11 SDK.","Changelog:
- Add login event for app and WebContents.
- Add extraHeaders option for WebContents.loadUrl.
- Fix crash when the callback passed to native APIs threw exception.
Windows
- Add BrowserWindow.hookWindowMessage API.
- Fix exception when calling shell.openItemInFolder in renderer process.
- Fix . being appended to filename when setting path in save dialog without extension.
OS X
- Fix private API call of _NSDrawCarbonThemeListBox in Mac App Store build.
- Links with OS X 10.11 SDK."
1039,"Changelog:
- Add app.allowNTLMCredentialsForAllDomains API.
- Add app.makeSingleInstance API.
- Add support for --cipher-suite-blacklist command line switch.
- Add ELECTRON_ENABLE_LOGGING environment variable to enable logging.
- Add background-color option for BrowserWindow.
- Enable setting PAC url in session.setProxy API.
- Fix the locations of external files saved by WebContents.savePage.
- Fix memory corruption in child processes forked by child_process.fork.
- Fix debugger stopped at wrong place in main process when --debug-brk is specified.
OS X
- Improve how draggable regions are handled.
Windows
- Make auto-updater module work together with Squirrel.Windows.","Changelog:
- Add app.allowNTLMCredentialsForAllDomains API.
- Add app.makeSingleInstance API.
- Add support for --cipher-suite-blacklist command line switch.
- Add ELECTRON_ENABLE_LOGGING environment variable to enable logging.
- Add background-color option for BrowserWindow.
- Enable setting PAC url in session.setProxy API.
- Fix the locations of external files saved by WebContents.savePage.
- Fix memory corruption in child processes forked by child_process.fork.
- Fix debugger stopped at wrong place in main process when --debug-brk is specified.
OS X
- Improve how draggable regions are handled.
Windows
- Make auto-updater module work together with Squirrel.Windows."
1040,"Changelog:
OS X
- Add experiment build for Mac App Store, read Mac App Store Submission Guide for more.","Changelog:
OS X
- Add experiment build for Mac App Store, read Mac App Store Submission Guide for more."
1041,"Changelog:
- Remove subpixel-font-scaling option of BrowserWindow.
- Add WebContents.savePage API.
Windows
- Fix exception when writing to console in the main process.
- Fix crash-reporter might block for a second when starting.
- Fix crash-reporter not working on x64 Windows when crash came from V8.","Changelog:
- Remove subpixel-font-scaling option of BrowserWindow.
- Add WebContents.savePage API.
Windows
- Fix exception when writing to console in the main process.
- Fix crash-reporter might block for a second when starting.
- Fix crash-reporter not working on x64 Windows when crash came from V8."
1042,"Changelog:
- Do not print ERROR logs from Chromium by default.
- Remove storage limitation of WebSQL.","Changelog:
- Do not print ERROR logs from Chromium by default.
- Remove storage limitation of WebSQL."
1043,"Changelog:
- Calling webFrame.setZoomLevel nows also changes the zoom levels of <webview>s in the page.
- Fix sending special keys with webContents.sendInputEvent.
- Fix uncaught exception when releasing a remote object in browser process.
- Fix various problems arounds minimum and maximum sizes of BrowserWindow.
- Fix postMessage not working for windows opened by window.open.
- Fix --ppapi-flash-path failed to recognize path with unicode characters.
- Fix headers' value being converted to lower case in did-get-response-details event.
- Fix HTTP requests' Accept-Language header not using system locale.
Windows
- Don't add prefix for console.log outputs.
- Fix BrowserWindow's size changed after restored from minimized state.
OS X
- Fix frameless window has wrong initial size when it is not resizable.
- Fix text-to-speech not working on OS X 10.11.
Linux
- Fix calling BrowserWindow.setResizable(true) clears size constraints.","Changelog:
- Calling webFrame.setZoomLevel nows also changes the zoom levels of s in the page.
- Fix sending special keys with webContents.sendInputEvent.
- Fix uncaught exception when releasing a remote object in browser process.
- Fix various problems arounds minimum and maximum sizes of BrowserWindow.
- Fix postMessage not working for windows opened by window.open.
- Fix --ppapi-flash-path failed to recognize path with unicode characters.
- Fix headers' value being converted to lower case in did-get-response-details event.
- Fix HTTP requests' Accept-Language header not using system locale.
Windows
- Don't add prefix for console.log outputs.
- Fix BrowserWindow's size changed after restored from minimized state.
OS X
- Fix frameless window has wrong initial size when it is not resizable.
- Fix text-to-speech not working on OS X 10.11.
Linux
- Fix calling BrowserWindow.setResizable(true) clears size constraints."
1044,"Changelog:
Windows
- Fix BrowserWindow.hide not hiding the window.","Changelog:
Windows
- Fix BrowserWindow.hide not hiding the window."
1045,"Changelog:
- Disable Chromium's logging by default unless --enable-logging is specified.
- Don't add paths outside the app to Node module search paths in packaged app.
Linux
- Fix crash when dragging items from FireFox and QT5 programs to Electron.
- Fix crash when closing window while having keyboard focus.
- Fix pressing Alt not showing auto-hide menubar.
- Fix various problems with high-DPI displays.
- Fix tooltips cropped by the window.
- Quit gracefully when app is terminated with Ctrl+C.","Changelog:
- Disable Chromium's logging by default unless --enable-logging is specified.
- Don't add paths outside the app to Node module search paths in packaged app.
Linux
- Fix crash when dragging items from FireFox and QT5 programs to Electron.
- Fix crash when closing window while having keyboard focus.
- Fix pressing Alt not showing auto-hide menubar.
- Fix various problems with high-DPI displays.
- Fix tooltips cropped by the window.
- Quit gracefully when app is terminated with Ctrl+C."
1046,"Changelog:
- Add support for preload modules (--require) in the default app.
- Add session.enableNetworkEmulation and session.disableNetworkEmulation APIs.
- Move devtools-opened, devtools-closed, devtools-focused events from BrowserWindow to WebContents.
- Move devToolsWebContents property from BrowserWindow to WebContents.
- A few improvements on the sendInputEvent API.
- Requests with unhandled protocols like mailto: are now opened by system's default application.
- Reduce memory usage when calling <webview>'s methods.
- Fix network throttling in devtools not working.
- Fix source map not loading for JavaScript in devtools.
- Fix context menu not working for devtools opened for <webview>.
- Fix the regression of window.outerHeight and window.outerWidth being set to 0 in hidden window.
Windows
- Fix extension not added to filename in file dialogs when custom filter is specified.
- Fix maximize/mnimize events not emitted for AeroSnap.
Linux
- Improve how we detect whether Unity is running.","Changelog:
- Add support for preload modules (--require) in the default app.
- Add session.enableNetworkEmulation and session.disableNetworkEmulation APIs.
- Move devtools-opened, devtools-closed, devtools-focused events from BrowserWindow to WebContents.
- Move devToolsWebContents property from BrowserWindow to WebContents.
- A few improvements on the sendInputEvent API.
- Requests with unhandled protocols like mailto: are now opened by system's default application.
- Reduce memory usage when calling 's methods.
- Fix network throttling in devtools not working.
- Fix source map not loading for JavaScript in devtools.
- Fix context menu not working for devtools opened for .
- Fix the regression of window.outerHeight and window.outerWidth being set to 0 in hidden window.
Windows
- Fix extension not added to filename in file dialogs when custom filter is specified.
- Fix maximize/mnimize events not emitted for AeroSnap.
Linux
- Improve how we detect whether Unity is running."
1047,"Changelog:
OS X
- Fix the auto updater not cleaning old downloaded files.","Changelog:
OS X
- Fix the auto updater not cleaning old downloaded files."
1048,"Changelog:
OS X
- Fix the auto updater not cleaning old downloaded files.","Changelog:
OS X
- Fix the auto updater not cleaning old downloaded files."
1049,"Changelog:
- Update to Node.js v4.1.1.
- Add allowpopups attribute for <webview> tag.
- Add options parameter for new-window event.
- Inherit parent window's options in child windows opened by window.open.
- Pass a DownloadItem object in the will-download event, allowing users to subscribe to download updates.
- Fix length of Buffer becoming 0 when there are lots of Buffer created.
- Fix crash when there is external ArrayBuffer created with pointers to addresses outside the heap.
Windows
- Fix leak of fds when reading files in asar archives.
- Fix tray icon not showing sometimes.
OS X
- Fix draggable regions not working for BrowserWindow with title-bar-style set to hidden.","Changelog:
- Update to Node.js v4.1.1.
- Add allowpopups attribute for  tag.
- Add options parameter for new-window event.
- Inherit parent window's options in child windows opened by window.open.
- Pass a DownloadItem object in the will-download event, allowing users to subscribe to download updates.
- Fix length of Buffer becoming 0 when there are lots of Buffer created.
- Fix crash when there is external ArrayBuffer created with pointers to addresses outside the heap.
Windows
- Fix leak of fds when reading files in asar archives.
- Fix tray icon not showing sometimes.
OS X
- Fix draggable regions not working for BrowserWindow with title-bar-style set to hidden."
1050,"Changelog:
- Add webContents.enableDeviceEmulation API.
- Add webcontents.beginFrameSubscription and webcontents.endFrameSubscription APIs.
- Add sendInputEvent method for WebContents and <webview> tag.
- Add webFrame.registerUrlSchemeAsPrivileged API.
- Add more information of the request in did-get-redirect-request event.
- Fix exception when reading an invalid file inside asar archive.","Changelog:
- Add webContents.enableDeviceEmulation API.
- Add webcontents.beginFrameSubscription and webcontents.endFrameSubscription APIs.
- Add sendInputEvent method for WebContents and  tag.
- Add webFrame.registerUrlSchemeAsPrivileged API.
- Add more information of the request in did-get-redirect-request event.
- Fix exception when reading an invalid file inside asar archive."
1051,"Changelog:
- Update to Node.js v4.1.0.
- Add app.getLocale API.
- Fix activate-with-no-open-windows emitted at wrong time.
- Fix mimeType not working in registerStringProtocol and its families.
- Fix crash when calling vm.createContext.
- Fix occasional crash when closing devtools.
OS X
- Fix crash when title-bar-style is set on OS X <= 10.9.
- Fix crash when opening a new window after closing a window.","Changelog:
- Update to Node.js v4.1.0.
- Add app.getLocale API.
- Fix activate-with-no-open-windows emitted at wrong time.
- Fix mimeType not working in registerStringProtocol and its families.
- Fix crash when calling vm.createContext.
- Fix occasional crash when closing devtools.
OS X
- Fix crash when title-bar-style is set on OS X <= 10.9.
- Fix crash when opening a new window after closing a window."
1052,"
Fix exception when reading an invalid file inside asar archive.

Windows
- Fix leak of fds when reading files in asar archives.","Fix exception when reading an invalid file inside asar archive.
Windows
- Fix leak of fds when reading files in asar archives."
1053,"Changelog:
- Add browser-window-created event for app module.
- Add BrowserWindow.isDevToolsFocused API.
- Fix process and global objects not available in preload script after the first tick of message loop when node integration is off.
- Fix devtools-opened event emitted before devToolsWebContents gets created.
- Fix BrowserWindow.addDevToolsExtension not working.
- Fix memory leak when calling node::Buffer::New.
OS X
- Add title-bar-style option for BrowserWindow, which allows creating Yosemite style frameless window.
- Add activate event for app module.
- Fix devtools-focused event not working.","Changelog:
- Add browser-window-created event for app module.
- Add BrowserWindow.isDevToolsFocused API.
- Fix process and global objects not available in preload script after the first tick of message loop when node integration is off.
- Fix devtools-opened event emitted before devToolsWebContents gets created.
- Fix BrowserWindow.addDevToolsExtension not working.
- Fix memory leak when calling node::Buffer::New.
OS X
- Add title-bar-style option for BrowserWindow, which allows creating Yosemite style frameless window.
- Add activate event for app module.
- Fix devtools-focused event not working."
1054,"Changelog:
- Fix a regression in v0.32.1 that made some options of web-preferences not working.
- Add validatedUrl parameter for did-fail-load event of WebContents.","Changelog:
- Fix a regression in v0.32.1 that made some options of web-preferences not working.
- Add validatedUrl parameter for did-fail-load event of WebContents."
1055,"Changelog:
- Fix crash when using Web MIDI API.
- Fix compatibility with old BrowserWindow options.
- Fix session not getting persisted on exit.","Changelog:
- Fix crash when using Web MIDI API.
- Fix compatibility with old BrowserWindow options.
- Fix session not getting persisted on exit."
1056,"Changelog:
- Upgrade to Chrome 45.
- Upgrade to io.js 3.3.0.
- Add partition attribute for <webview> tag.
- Add partition attribute for web-preferences option of BrowserWindow.
- The preload, zoom-factor, node-integration options of BrowserWindow
  have been moved to web-preferences option.
- Fix using Buffer created with external native C buffer.
- Fix exception when accessing process.stdout.","Changelog:
- Upgrade to Chrome 45.
- Upgrade to io.js 3.3.0.
- Add partition attribute for  tag.
- Add partition attribute for web-preferences option of BrowserWindow.
- The preload, zoom-factor, node-integration options of BrowserWindow
  have been moved to web-preferences option.
- Fix using Buffer created with external native C buffer.
- Fix exception when accessing process.stdout."
1057,"Changelog:
- Add process.setFdLimit API.
- Add will-download event for Session.
- Add role attribute for MenuItem.
- Navigation in <webview> tag now restarts renderer process.
- Fix wrong source and origin for window.opener.postMessage.
- Fix node integration not working after POST request.
- Fix referrer not sent for navigations.
Windows
- Fix window.print only printing three pages.","Changelog:
- Add process.setFdLimit API.
- Add will-download event for Session.
- Add role attribute for MenuItem.
- Navigation in  tag now restarts renderer process.
- Fix wrong source and origin for window.opener.postMessage.
- Fix node integration not working after POST request.
- Fix referrer not sent for navigations.
Windows
- Fix window.print only printing three pages."
1058,"Changelog:
- Add webFrame.setZoomLevelLimits API.
- Exit HTML5 fullscreen mode when ESC is pressed.
- Return undefined in DOM's alert function.
- Try loading index.js when the main field is not available in app's package.json.
- Improve memory usage when using remote module.
- Fix memory leak when emitting events.
- Fix crash of the main process when a renderer process which uses <webview> has crashed.
- Fix * not working as filter in dialog module.
- Fix --debug and --debug-brk not working.
- Fix geolocation not working.
Windows
- Fix message box not having close button.
- Fix os.release() reporting wrong version for Windows 10.
- Fix app.quit() not working when called immediately in ready event handler.
OS X
- Fix bad rendering performance.
- Fix context menu of Tray not showing sometimes.
Notice for Windows users:
We have added compatibility information in the executable's manifest file, it might change some behaviors on Windows.","Changelog:
- Add webFrame.setZoomLevelLimits API.
- Exit HTML5 fullscreen mode when ESC is pressed.
- Return undefined in DOM's alert function.
- Try loading index.js when the main field is not available in app's package.json.
- Improve memory usage when using remote module.
- Fix memory leak when emitting events.
- Fix crash of the main process when a renderer process which uses  has crashed.
- Fix * not working as filter in dialog module.
- Fix --debug and --debug-brk not working.
- Fix geolocation not working.
Windows
- Fix message box not having close button.
- Fix os.release() reporting wrong version for Windows 10.
- Fix app.quit() not working when called immediately in ready event handler.
OS X
- Fix bad rendering performance.
- Fix context menu of Tray not showing sometimes.
Notice for Windows users:
We have added compatibility information in the executable's manifest file, it might change some behaviors on Windows."
1059,"Changelog:
Mac
- Fix bad rendering performance.","Changelog:
Mac
- Fix bad rendering performance."
1060,"Changelog:
- Upgrade to Chrome 44.
- Upgrade to io.js 3.1.0.
- The protocol.registerProtocol and protocol.interceptProtocol APIs have been replaced by the protocol.register[File/String/Buffer/Http]Protocol and protocol.intercept[File/String/Buffer/Http]Protocol APIs.
- The ffmpeg library is now statically linked to the binary.
Upgrade notice:
- Most native modules are broken because of io.js upgrade, module writers need to use NAN v2 to rewrite the modules.
- There are breaking changes in protocol module that require users to rewrite code that uses the protocol module.
- Users no longer need to ship the ffmpeg library along with the app.","Changelog:
- Upgrade to Chrome 44.
- Upgrade to io.js 3.1.0.
- The protocol.registerProtocol and protocol.interceptProtocol APIs have been replaced by the protocol.register[File/String/Buffer/Http]Protocol and protocol.intercept[File/String/Buffer/Http]Protocol APIs.
- The ffmpeg library is now statically linked to the binary.
Upgrade notice:
- Most native modules are broken because of io.js upgrade, module writers need to use NAN v2 to rewrite the modules.
- There are breaking changes in protocol module that require users to rewrite code that uses the protocol module.
- Users no longer need to ship the ffmpeg library along with the app."
1061,"Changelog:
- Fix printBackground option of BrowserWindow.printToPDF not working.
Windows
- Support reading .ico images.
- Fix tray icon not showing.
- Fix socket and named pipe server not working in main process.","Changelog:
- Fix printBackground option of BrowserWindow.printToPDF not working.
Windows
- Support reading .ico images.
- Fix tray icon not showing.
- Fix socket and named pipe server not working in main process."
1062,"Changelog:
- Tray.popContextMenu API is renamed to Tray.popUpContextMenu.
- Fix building native modules with npm shipped with io.js v3.0.0.
- Fix crash when resizing windows that use <webview> tag.
- Fix protocol.interceptProtocol not working until the app has started for a while.
Windows
- Don't emit right-clicked event when there is menu attached in Tray.
OS X
- Don't emit clicked event when there is menu attached in Tray.
- Redraw Tray icon when menu is closed.","Changelog:
- Tray.popContextMenu API is renamed to Tray.popUpContextMenu.
- Fix building native modules with npm shipped with io.js v3.0.0.
- Fix crash when resizing windows that use  tag.
- Fix protocol.interceptProtocol not working until the app has started for a while.
Windows
- Don't emit right-clicked event when there is menu attached in Tray.
OS X
- Don't emit clicked event when there is menu attached in Tray.
- Redraw Tray icon when menu is closed."
1063,"Changelog:
- Add userGuesture parameter for WebContents.executeJavaScript.
- Add webFrame.registerUrlSchemeAsBypassingCsp API.
- Add load-commit event for <webview> tag.
- Add BrowserWindow.setThumbarButtons API.
- Support passing Promise objects in remote module.
- Only set window.opener for windows opened by window.open.
- Fix memory leak when creating NativeImage.
- Fix the closed property of windows opened by window.open is undefined.
- Fix microtask jobs running too early.
Mac
- Fix calling BrowserWindow.setResizable not working sometimes.
- Fix calling BrowserWindow.setResizable changes size of frameless window.
Windows
- Fix the crash reporter process not exiting when there is another Electron app running.
- Fix devtools window's size being too small sometimes.
- Don't show exe's name as message box's default title.","Changelog:
- Add userGuesture parameter for WebContents.executeJavaScript.
- Add webFrame.registerUrlSchemeAsBypassingCsp API.
- Add load-commit event for  tag.
- Add BrowserWindow.setThumbarButtons API.
- Support passing Promise objects in remote module.
- Only set window.opener for windows opened by window.open.
- Fix memory leak when creating NativeImage.
- Fix the closed property of windows opened by window.open is undefined.
- Fix microtask jobs running too early.
Mac
- Fix calling BrowserWindow.setResizable not working sometimes.
- Fix calling BrowserWindow.setResizable changes size of frameless window.
Windows
- Fix the crash reporter process not exiting when there is another Electron app running.
- Fix devtools window's size being too small sometimes.
- Don't show exe's name as message box's default title."
1064,"Changelog:
- Add pageSize option for BrowserWindow.printToPDF.
- Add bounds payload for double-clicked event of Tray.
- Add WebContents.addWorkSpace and WebContents.removeWorkSpace APIs to change devtools workspace.
- Add Session.setDownloadPath API.
- Add allow-displaying-insecure-content and allow-running-insecure-content options for BrowserWindow.
- Allow checking keyboard modifiers in the clicked events of Tray.
- Fix RequestHttpJob not sending headers.
- Fix zoom level of devtools not remembered.
- Fix node-integration option not working in window.open.
- Fix a crash when closing window.
- Fix executing remote callbacks of renderer process when node integration is off in the renderer process.
Windows
- Set GUID for tray icons, preventing multiple items showing in notification area preferences.
- Implement double-clicked event.
Mac
- Fix crash when using accept attribute of <input> tag.
- A few fixes to Tray's behavior.","Changelog:
- Add pageSize option for BrowserWindow.printToPDF.
- Add bounds payload for double-clicked event of Tray.
- Add WebContents.addWorkSpace and WebContents.removeWorkSpace APIs to change devtools workspace.
- Add Session.setDownloadPath API.
- Add allow-displaying-insecure-content and allow-running-insecure-content options for BrowserWindow.
- Allow checking keyboard modifiers in the clicked events of Tray.
- Fix RequestHttpJob not sending headers.
- Fix zoom level of devtools not remembered.
- Fix node-integration option not working in window.open.
- Fix a crash when closing window.
- Fix executing remote callbacks of renderer process when node integration is off in the renderer process.
Windows
- Set GUID for tray icons, preventing multiple items showing in notification area preferences.
- Implement double-clicked event.
Mac
- Fix crash when using accept attribute of  tag.
- A few fixes to Tray's behavior."
1065,"Changelog:
- Add BrowserWindow.setAspectRatio API.
- Add tray.popContextMenu API.
- Add session.setProxy API.
- Add session option for protocol.RequestHttpJob.
- Add getUserAgent method for WebContents and <webview> tag.
- Add noLink option for dialog.showMessageBox.
- Fix a few bugs when intercepting HTTP requests with protocol module.
Windows and Mac
- Add right-clicked event to Tray.
Windows
- Fix resolved callback of Promise doesn't get invoked under some situations.
- Fix app-command event always returns unknown.
Mac
- Make window's bottom corner render more smooth.
- Fix BrowserWindow.setContentSize and use-content-size option not working.
- Fix the filters of file dialogs including other types of files.
- Fix web page not having focus under some circumstances.
Linux
- Fix minimum and maximum size of BrowserWindow not working.
- Fix resizable option of BrowserWindow not working.","Changelog:
- Add BrowserWindow.setAspectRatio API.
- Add tray.popContextMenu API.
- Add session.setProxy API.
- Add session option for protocol.RequestHttpJob.
- Add getUserAgent method for WebContents and  tag.
- Add noLink option for dialog.showMessageBox.
- Fix a few bugs when intercepting HTTP requests with protocol module.
Windows and Mac
- Add right-clicked event to Tray.
Windows
- Fix resolved callback of Promise doesn't get invoked under some situations.
- Fix app-command event always returns unknown.
Mac
- Make window's bottom corner render more smooth.
- Fix BrowserWindow.setContentSize and use-content-size option not working.
- Fix the filters of file dialogs including other types of files.
- Fix web page not having focus under some circumstances.
Linux
- Fix minimum and maximum size of BrowserWindow not working.
- Fix resizable option of BrowserWindow not working."
1066,"Changelog:
- Breaking change: All protocol APIs are now asynchronous.
- Add cancelId option for dialog.showMessageBox.
- Add app.getAppPath API.
- Add clipboard.write API which allows writing multiple types of data at the same time.
- Add session.clearCache and session.clearStorageData APIs.
- Add support for --proxy-pac-url command line switch.
- Fix relative urls not working in window.open.
- Fix close event of WebContents and <webview> tag not working.
- Fix the window.global variable exposed in web page when node integration is off.
- Fix handling trailing slash in asar package.
- Fix cookies not showing in Network panel of devtools.
- Fix accept attribute of <input> tag not working.
- Remember the last opened directory of <input> tag.
- Allow showing insecure content when web-security option is false.
Windows and Linux
- Make dialog.showMessageBox use native dialogs on Windows and Linux.
- Use Shift+Ctrl+I for toggling devtools by default on Windows and Linux.
Windows
- Fix crash on quit when using dialog APIs.","Changelog:
- Breaking change: All protocol APIs are now asynchronous.
- Add cancelId option for dialog.showMessageBox.
- Add app.getAppPath API.
- Add clipboard.write API which allows writing multiple types of data at the same time.
- Add session.clearCache and session.clearStorageData APIs.
- Add support for --proxy-pac-url command line switch.
- Fix relative urls not working in window.open.
- Fix close event of WebContents and  tag not working.
- Fix the window.global variable exposed in web page when node integration is off.
- Fix handling trailing slash in asar package.
- Fix cookies not showing in Network panel of devtools.
- Fix accept attribute of  tag not working.
- Remember the last opened directory of  tag.
- Allow showing insecure content when web-security option is false.
Windows and Linux
- Make dialog.showMessageBox use native dialogs on Windows and Linux.
- Use Shift+Ctrl+I for toggling devtools by default on Windows and Linux.
Windows
- Fix crash on quit when using dialog APIs."
1067,"Changelog:
- Pressing backspace won't trigger a navigation back anymore.
- The node-integration option of the window opened by window.open now inherits opener window's option by default.
- Fix reversed PageUp and PageDown accelerators.
- Fix name not working in window.open.
- Fix wrong time zone in pepper plugins.
- Fix calling window.moveTo and window.resizeTo causing exceptions in the main process.
- Check whether object is alive before calling its methods.
Windows
- Fix fullscreen flag of BrowserWindow not working.
- Fix -webkit cursors not working.
Linux
- Fix HTTPS websites not loading.","Changelog:
- Pressing backspace won't trigger a navigation back anymore.
- The node-integration option of the window opened by window.open now inherits opener window's option by default.
- Fix reversed PageUp and PageDown accelerators.
- Fix name not working in window.open.
- Fix wrong time zone in pepper plugins.
- Fix calling window.moveTo and window.resizeTo causing exceptions in the main process.
- Check whether object is alive before calling its methods.
Windows
- Fix fullscreen flag of BrowserWindow not working.
- Fix -webkit cursors not working.
Linux
- Fix HTTPS websites not loading."
1068,"Changelog:
- Fix native modules unable to be built with iojs < 2.3.1.","Changelog:
- Fix native modules unable to be built with iojs < 2.3.1."
1069,"Changelog:
- Add arm build.
- Update to io.js v2.3.1.
- The gpu-process-crashed event is moved to the app module, and also fixes this event not working.
- Add power-save-blocker built-in module.
- Add select-certificate event to app module.
- Add app-command event to BrowserWindow.
- Fix file downloading.","Changelog:
- Add arm build.
- Update to io.js v2.3.1.
- The gpu-process-crashed event is moved to the app module, and also fixes this event not working.
- Add power-save-blocker built-in module.
- Add select-certificate event to app module.
- Add app-command event to BrowserWindow.
- Fix file downloading."
1070,"Changelog:
- Add browser-window-focus and browser-window-blur events to app.
- Add protocol.registerStandardSchemes API.
- Add process.hang API.
- Add session.cookies API to WebContents.
Windows
- Fix BrowserWindow.setContentSize changing window position.
Linux
- Fix wrong fallback fonts for CKJ characters.","Changelog:
- Add browser-window-focus and browser-window-blur events to app.
- Add protocol.registerStandardSchemes API.
- Add process.hang API.
- Add session.cookies API to WebContents.
Windows
- Fix BrowserWindow.setContentSize changing window position.
Linux
- Fix wrong fallback fonts for CKJ characters."
1071,"Changelog:
- Add setAudioMuted, isAudioMuted methods for WebContents and <webview> tag.
- Add printToPdf method for WebContents and <webview> tag.
- Add --ignore-connections-limit command line switch.
- Add protocol.RequestHttpJob.
- Fix sending circular object in remote module.
- Fix reading asar archive when there is .. in path.
Mac
- Fix notification icon not working.
- Fix files deleted by shell.moveItemToTrash can not be ""Put Back"".","Changelog:
- Add setAudioMuted, isAudioMuted methods for WebContents and  tag.
- Add printToPdf method for WebContents and  tag.
- Add --ignore-connections-limit command line switch.
- Add protocol.RequestHttpJob.
- Fix sending circular object in remote module.
- Fix reading asar archive when there is .. in path.
Mac
- Fix notification icon not working.
- Fix files deleted by shell.moveItemToTrash can not be ""Put Back""."
1072,"Changelog:
- Fix sending POST requests.
Windows
- Fix corrupted 64bit build.
Mac
- shell.openExternal now returns false when the no application can handle the URL.","Changelog:
- Fix sending POST requests.
Windows
- Fix corrupted 64bit build.
Mac
- shell.openExternal now returns false when the no application can handle the URL."
1073,"Changelog:
- Update to io.js v2.2.1.
- Add support for --log-net-log switch.
- Add support for client certificates.
- Add options to specify httpReferer and userAgent for WebContents.loadUrl.
- Add crash-reporter.getUploadedReports API.
- Fix multi-line headers in did-get-response-details.
- Fix using HTML5 fullscreen API in <webview> tag.
Linux
- Fix dialog.showSaveDialog doesn't show non-exist filename.
- Fix accessing clipboard module in renderer process.
Windows
- Add bounds payload to clicked event of Tray.","Changelog:
- Update to io.js v2.2.1.
- Add support for --log-net-log switch.
- Add support for client certificates.
- Add options to specify httpReferer and userAgent for WebContents.loadUrl.
- Add crash-reporter.getUploadedReports API.
- Fix multi-line headers in did-get-response-details.
- Fix using HTML5 fullscreen API in  tag.
Linux
- Fix dialog.showSaveDialog doesn't show non-exist filename.
- Fix accessing clipboard module in renderer process.
Windows
- Add bounds payload to clicked event of Tray."
1074,"Changelog:
- Fix various bugs caused by changing src attribute of <webview> tag.
- Add page-visibility attribute for web-preferences option of BrowserWindow.
- Add default menu for apps ran by default_app.
Mac
- Fix crash reporter not working by switching to crashpad.","Changelog:
- Fix various bugs caused by changing src attribute of  tag.
- Add page-visibility attribute for web-preferences option of BrowserWindow.
- Add default menu for apps ran by default_app.
Mac
- Fix crash reporter not working by switching to crashpad."
1075,"Changelog:
- Fix <webview> tag not visible.
- Fix wrong Chrome version.
- Fix exception when using remote module in preload script.
- Remove setTimeout Throttle for hidden page.
Windows
- Fix pdf.dll not shipped.","Changelog:
- Fix  tag not visible.
- Fix wrong Chrome version.
- Fix exception when using remote module in preload script.
- Remove setTimeout Throttle for hidden page.
Windows
- Fix pdf.dll not shipped."
1076,"Changelog:
- Fix random crash caused by race condition when reading request headers.
- Add readHtml and writeHtml methods for clipboard module.
- Fix loading javascript: urls.","Changelog:
- Fix random crash caused by race condition when reading request headers.
- Add readHtml and writeHtml methods for clipboard module.
- Fix loading javascript: urls."
1077,"Changelog:
Warning: V8 in Chrome 43 now strictly clears Handle when it goes out of HandleScope, so some ill-written native modules might crash or cause undefined behaviors.
- Upgrade to Chrome 43.
- Add move, moved and resize events to BrowserWindow.
- Add ftp protocol support.
- Add InspectServiceWorker for WebContents and BrowserWindow.
- Fix creating Buffer for one-byte external Strings created by blink.
Windows
- Fix crash reporter not working when started for multiple times.
- Separate pdf.dll and make it optional for apps that don't need printing.","Changelog:
Warning: V8 in Chrome 43 now strictly clears Handle when it goes out of HandleScope, so some ill-written native modules might crash or cause undefined behaviors.
- Upgrade to Chrome 43.
- Add move, moved and resize events to BrowserWindow.
- Add ftp protocol support.
- Add InspectServiceWorker for WebContents and BrowserWindow.
- Fix creating Buffer for one-byte external Strings created by blink.
Windows
- Fix crash reporter not working when started for multiple times.
- Separate pdf.dll and make it optional for apps that don't need printing."
1078,"Changelog:
- Fix web-preferences option of BrowserWindow not working.
- Fix showing description of Flash pepper plugin.
- Fix intercepting http/https protocols with porotocol module.
- Fix using persistent storage.
- Fix calling <webview>.goToIndex.
- Fix events not emitted for current monitor in screen module.
- Fix HTML5 fullscreen API in <webview> tag.
- Add plugin-crashed and gpu-crashed events for WebContents.
- Add clearHistory method to WebContents and <webview> tag.
- Add pasteAndMatchStyle method to WebContents and <webview> tag.
Mac
- Don't use textured background for frameless window.
Windows
- Reduces the binary size.
Linux
- Fix click event not emitted for tray icon.","Changelog:
- Fix web-preferences option of BrowserWindow not working.
- Fix showing description of Flash pepper plugin.
- Fix intercepting http/https protocols with porotocol module.
- Fix using persistent storage.
- Fix calling .goToIndex.
- Fix events not emitted for current monitor in screen module.
- Fix HTML5 fullscreen API in  tag.
- Add plugin-crashed and gpu-crashed events for WebContents.
- Add clearHistory method to WebContents and  tag.
- Add pasteAndMatchStyle method to WebContents and  tag.
Mac
- Don't use textured background for frameless window.
Windows
- Reduces the binary size.
Linux
- Fix click event not emitted for tray icon."
1079,"Changelog:
- Add support for Flash Pepper plugin.
- Add protocol.RequestErrorJob.
- Remove getFavicon method of BrowserWindow and <webview>.
- Fix in-page navigations doing full page refreshes.
- Keep asar archive file opened during the archive's life time.
Windows
- Fix printing.
- Fix bugs of io.js interacting with stdout.
Mac
- Fix window showing in wrong monitor.
- Do not use textured window background by default.","Changelog:
- Add support for Flash Pepper plugin.
- Add protocol.RequestErrorJob.
- Remove getFavicon method of BrowserWindow and .
- Fix in-page navigations doing full page refreshes.
- Keep asar archive file opened during the archive's life time.
Windows
- Fix printing.
- Fix bugs of io.js interacting with stdout.
Mac
- Fix window showing in wrong monitor.
- Do not use textured window background by default."
1080,"Changelog:
- Add BrowserWindow.getBounds and BrowserWindow.setBounds API.
- Log errors happened in preload scripts to devtools.
Mac
- Send the bounds of tray icon in the clicked event.
Windows
- Fix WebGL not working.
- Allow specifying Super as global accelerator.
- Enable NTLM / Kerberos authentication.","Changelog:
- Add BrowserWindow.getBounds and BrowserWindow.setBounds API.
- Log errors happened in preload scripts to devtools.
Mac
- Send the bounds of tray icon in the clicked event.
Windows
- Fix WebGL not working.
- Allow specifying Super as global accelerator.
- Enable NTLM / Kerberos authentication."
1081,"Changelog:
- Implement HTML5 fullscreen API.
- Add page-favicon-updated event for WebContents and <webview> tag.
- Add dom-ready event for WebContents and <webview> tag.
- Add getFavicon method for WebContents and <webview> tag.
- Add inspectElement method for <webview> tag.
- Callbacks passed to asynchronous asar APIs will be called in the next tick of message loop when error happens.
- Add APIs to check service workers.
- Navigation happened in <webview> tag now restarts renderer process.
- Allow opening links with external protocols in <webview> tag.
- Reimplement navigation history control with JavaScript.
- Fix un-handled Promise rejection not reported in devtools.
OS X
- Fix the non-transparent corners for frameless windows.","Changelog:
- Implement HTML5 fullscreen API.
- Add page-favicon-updated event for WebContents and  tag.
- Add dom-ready event for WebContents and  tag.
- Add getFavicon method for WebContents and  tag.
- Add inspectElement method for  tag.
- Callbacks passed to asynchronous asar APIs will be called in the next tick of message loop when error happens.
- Add APIs to check service workers.
- Navigation happened in  tag now restarts renderer process.
- Allow opening links with external protocols in  tag.
- Reimplement navigation history control with JavaScript.
- Fix un-handled Promise rejection not reported in devtools.
OS X
- Fix the non-transparent corners for frameless windows."
1082,"Changelog:
- Don't look up modules in user-defined search paths.
Windows
- Don't require BluetoothApis.dll for starting.","Changelog:
- Don't look up modules in user-defined search paths.
Windows
- Don't require BluetoothApis.dll for starting."
1083,"Changelog:
- Upgrade to Chrome42.
- Fix using debugger for forked scripts by child_process.
Windows
- Don't require MFReadWrite.dll when starting.
Linux
- Show icons in notifications.
- Fix notification showing as message box on Ubuntu sometimes.
- Fix shell.openExternal not working with Chrome browser.","Changelog:
- Upgrade to Chrome42.
- Fix using debugger for forked scripts by child_process.
Windows
- Don't require MFReadWrite.dll when starting.
Linux
- Show icons in notifications.
- Fix notification showing as message box on Ubuntu sometimes.
- Fix shell.openExternal not working with Chrome browser."
1084,"Changelog:
- Atom Shell is renamed to Electron.
- Add position and id attribute to MenuItem.
- Add did-get-response-details event to WebContents and <webview> tag.
- Fix WebContents.reloadIgnoringCache not ignoring cache.
- Fix a crash when calling WebContents.getUrl.
Mac
- Fix using VoiceOver.
- Fix shell.moveItemToTrash return wrong value.","Changelog:
- Atom Shell is renamed to Electron.
- Add position and id attribute to MenuItem.
- Add did-get-response-details event to WebContents and  tag.
- Fix WebContents.reloadIgnoringCache not ignoring cache.
- Fix a crash when calling WebContents.getUrl.
Mac
- Fix using VoiceOver.
- Fix shell.moveItemToTrash return wrong value."
1085,"Changelog:
- Chromium is statically linked to atom-shell.
- Node(io.js) is dynamically linked to atom-shell.
- Upgrade to io.js v1.6.3.
- Add devtools-focused event for BrowserWindow.
- Add page-title-set event for WebContents and <webview> tag.
- Fix process.title not changeable.
Mac
- Fix crash when quitting a fullscreen app.
Windows
- Add 64bit build.
- __Renaming atom.exe no longer breaks native modules.","Changelog:
- Chromium is statically linked to atom-shell.
- Node(io.js) is dynamically linked to atom-shell.
- Upgrade to io.js v1.6.3.
- Add devtools-focused event for BrowserWindow.
- Add page-title-set event for WebContents and  tag.
- Fix process.title not changeable.
Mac
- Fix crash when quitting a fullscreen app.
Windows
- Add 64bit build.
- __Renaming atom.exe no longer breaks native modules."
1086,"Changelog:
- Fix leak when removing WebView from DOM.
- Fix accept-first-mouse not working for draggable regions in frameless window.
- Fix crash when quitting in the closed event of BrowserWindow.
- Throw error when downloaded application is not signed in auto updater.
- Add clipboard.writeImage API.
- Restore window state when calling BrowserWindow.show.
- Add option to open devtools in its own window for BrowserWindow.openDevTools.
- Fix process.argv not reserving command line parameters' order.
- Returns whether operation succeeded in shell.moveItemToTrash.
- Add support for Chrome web UIs like chrome://gpu and chrome://tracing.
Linux
- Zygote process is disabled.
Windows
- Fix WebGL not working.","Changelog:
- Fix leak when removing WebView from DOM.
- Fix accept-first-mouse not working for draggable regions in frameless window.
- Fix crash when quitting in the closed event of BrowserWindow.
- Throw error when downloaded application is not signed in auto updater.
- Add clipboard.writeImage API.
- Restore window state when calling BrowserWindow.show.
- Add option to open devtools in its own window for BrowserWindow.openDevTools.
- Fix process.argv not reserving command line parameters' order.
- Returns whether operation succeeded in shell.moveItemToTrash.
- Add support for Chrome web UIs like chrome://gpu and chrome://tracing.
Linux
- Zygote process is disabled.
Windows
- Fix WebGL not working."
1087,"Changelog:
- Add protocol.RequestBufferJob.
- Add support for asar archive with unpacked files.
- Fix reading empty files in asar archives.
- Add back the subpixel-font-scaling option of BrowserWindow.
- Fix crash when BrowserWindow instance is garbage collected by V8.","Changelog:
- Add protocol.RequestBufferJob.
- Add support for asar archive with unpacked files.
- Fix reading empty files in asar archives.
- Add back the subpixel-font-scaling option of BrowserWindow.
- Fix crash when BrowserWindow instance is garbage collected by V8."
1088,"Changelog:
- Fix crash on Windows and Linux.","Changelog:
- Fix crash on Windows and Linux."
1089,"Changelog:
- Upgrade to Chrome 41.
- Add postMessage method for window object returned by window.open.
- Fix getUrl returning about:blank for local pages.
- Fix showMessageBox throwing errors sometimes.
- The subpixel-font-scaling option of BrowserWindow is removed.
- Fix did-fail-load not emitted under some circumstances.","Changelog:
- Upgrade to Chrome 41.
- Add postMessage method for window object returned by window.open.
- Fix getUrl returning about:blank for local pages.
- Fix showMessageBox throwing errors sometimes.
- The subpixel-font-scaling option of BrowserWindow is removed.
- Fix did-fail-load not emitted under some circumstances."
1090,"Changelog:
- The BrowserWindow.capturePage now passes NativeImage instance instead of Buffer.
- Add type option for BrowserWindow to allow changing _NET_WM_WINDOW_TYPE property of the window.
- Add BrowserWindow.setOverlayIcon API.
- Add native-image module for low level image operations.
- Add clipboard.readImage API.
- Add before-quit event for app module.
- Enable setting icon for MenuItem.
- Bundle all .js files into asar archive.
- Fix using images from asar archives in atom-shell APIs.
- Fix parsing some window.open options.
- The display style attribute of <webview> is block by default.","Changelog:
- The BrowserWindow.capturePage now passes NativeImage instance instead of Buffer.
- Add type option for BrowserWindow to allow changing _NET_WM_WINDOW_TYPE property of the window.
- Add BrowserWindow.setOverlayIcon API.
- Add native-image module for low level image operations.
- Add clipboard.readImage API.
- Add before-quit event for app module.
- Enable setting icon for MenuItem.
- Bundle all .js files into asar archive.
- Fix using images from asar archives in atom-shell APIs.
- Fix parsing some window.open options.
- The display style attribute of  is block by default."
1091,"Changelog:
- Support asar archives in scripts forked with child_process.fork.
- Fix the race condition when updating <webview> info.","Changelog:
- Support asar archives in scripts forked with child_process.fork.
- Fix the race condition when updating  info."
1092,"Changelog:
- Remove the asar: protocol, use file: protocol to access files in asar archives instead. (#1077)
- Fix asar support in graceful-fs module.
- Fix uncaught exception in browser process when window.open is called in a page that doesn't allow to open new window.
- Fix initializing node integration in the webview when the page in it navigates.
Windows
- Fix browser progress not quitting when using asar archives that contain native modules.","Changelog:
- Remove the asar: protocol, use file: protocol to access files in asar archives instead. (#1077)
- Fix asar support in graceful-fs module.
- Fix uncaught exception in browser process when window.open is called in a page that doesn't allow to open new window.
- Fix initializing node integration in the webview when the page in it navigates.
Windows
- Fix browser progress not quitting when using asar archives that contain native modules."
1093,"Changelog:
- Upgrade to Chrome 40.","Changelog:
- Upgrade to Chrome 40."
1094,"Changelog:
- Node symbols are no longer inserted in iframes.
- Fix a race condition which caused node integration not correctly initialized.
- Add https://atom.io/download/atom-shell/index.json web endpoint which
  contains version information of all atom-shell releases.
- Fix MediaStreamTrack.getSources returning sources with empty labels.
- Fix receiving IPC messages in <webview> when node integration is off.
- Add Plus as accelerator key.","Changelog:
- Node symbols are no longer inserted in iframes.
- Fix a race condition which caused node integration not correctly initialized.
- Add link web endpoint which
  contains version information of all atom-shell releases.
- Fix MediaStreamTrack.getSources returning sources with empty labels.
- Fix receiving IPC messages in  when node integration is off.
- Add Plus as accelerator key."
1095,"Changelog:
- Add API in screen module to handle external monitors.
- Add app.getPath and app.setPath to get/set paths to special files or
  directories.
- Add editing commands to WebContents and <webview>.
- Fix String::localeCompare crashing in scripts ran by child_process.fork.
- Fix original-fs not working with some high-level fs APIs.
- Don't popup error dialog when user has a custom uncaught exception handler.
Windows
- Use the icon of exe as windows' default icon.","Changelog:
- Add API in screen module to handle external monitors.
- Add app.getPath and app.setPath to get/set paths to special files or
  directories.
- Add editing commands to WebContents and .
- Fix String::localeCompare crashing in scripts ran by child_process.fork.
- Fix original-fs not working with some high-level fs APIs.
- Don't popup error dialog when user has a custom uncaught exception handler.
Windows
- Use the icon of exe as windows' default icon."
1096,"Changelog:
- Add webFrame.registerUrlSchemeAsSecure API.
- Add support for window transparency.
- Don't set contentWindow property for <webview>.","Changelog:
- Add webFrame.registerUrlSchemeAsSecure API.
- Add support for window transparency.
- Don't set contentWindow property for ."
1097,"Changelog:
- Fix a crash when sending deep nested object via IPC.","Changelog:
- Fix a crash when sending deep nested object via IPC."
1098,"Changelog:
- Add --disable-http-cache command line switch.
- Add icon option to dialog.showMessageBox API.
- Fix --remote-debugging-port.
- Avoid crashes caused by the screen module.
Mac
- Add support for template image.
- Fix a building problem.
Windows
- Fix devtools not able to minimize.","Changelog:
- Add --disable-http-cache command line switch.
- Add icon option to dialog.showMessageBox API.
- Fix --remote-debugging-port.
- Avoid crashes caused by the screen module.
Mac
- Add support for template image.
- Fix a building problem.
Windows
- Fix devtools not able to minimize."
1099,"Changelog:
Mac
- Fix BrowserWindow.show() not focusing the window.
- Fix renaming application bundle.","Changelog:
Mac
- Fix BrowserWindow.show() not focusing the window.
- Fix renaming application bundle."
1100,"Changelog:
- Add disablewebsecurity attribute for <webview>.
- Fix getUserMedia in <webview>.
- Fix file dialogs in <webview>.
- Add support for spell checking in input fields and text areas.","Changelog:
- Add disablewebsecurity attribute for .
- Fix getUserMedia in .
- Fix file dialogs in .
- Add support for spell checking in input fields and text areas."
1101,"Changelog:
- Fix including the same object in arguments for more than once when sending IPC
  message.
- Add ipc-message event for <webview> tags.
- Add ipc.sendToHost API.
- Fix crash when closing window after dragging some file into window.
- Add will-navigate event for WebContents.
Windows
- Fix stopping flashFrame.
- Fix minimize button not usable when resizable is not specified.
- Fix maximizing a window before it shows.
- Fix content going outside of screen when maximizing a frameless window.
- Don't allow maximizing a un-resizable window.
- Fix asynchronous file dialogs being synchronous.","Changelog:
- Fix including the same object in arguments for more than once when sending IPC
  message.
- Add ipc-message event for  tags.
- Add ipc.sendToHost API.
- Fix crash when closing window after dragging some file into window.
- Add will-navigate event for WebContents.
Windows
- Fix stopping flashFrame.
- Fix minimize button not usable when resizable is not specified.
- Fix maximizing a window before it shows.
- Fix content going outside of screen when maximizing a frameless window.
- Don't allow maximizing a un-resizable window.
- Fix asynchronous file dialogs being synchronous."
1102,"Changelog:
- Upgrade to Chrome 39.
- Remove localStorage size limit.
Mac
- Renaming Atom.app now requires renaming the helper app and framework's
  names, see more in Renaming Atom Shell for your app.
- Fix crashing when using frameless window.","Changelog:
- Upgrade to Chrome 39.
- Remove localStorage size limit.
Mac
- Renaming Atom.app now requires renaming the helper app and framework's
  names, see more in Renaming Atom Shell for your app.
- Fix crashing when using frameless window."
1103,"Changelog:
- Add parameter check for fs.statSyncNoException
- Fix BrowserWindow.capturePage API
- Add maximize, unmaximize, minimize, restore, enter-full-screen,
  leave-full-screen events for BrowserWindow
- Add Tray.destroy API
- Make it possible to specify menu location in Menu.popup API
Linux
- Set WM_CLASS of BrowserWindow to application's name
Windows
- Fix building when Node is installed on a custom location
- Fix crash when using Tray on some machines
- Add Tray.displayBalloon API","Changelog:
- Add parameter check for fs.statSyncNoException
- Fix BrowserWindow.capturePage API
- Add maximize, unmaximize, minimize, restore, enter-full-screen,
  leave-full-screen events for BrowserWindow
- Add Tray.destroy API
- Make it possible to specify menu location in Menu.popup API
Linux
- Set WM_CLASS of BrowserWindow to application's name
Windows
- Fix building when Node is installed on a custom location
- Fix crash when using Tray on some machines
- Add Tray.displayBalloon API"
1104,"Changelog:
Windows
- Fix crash when calling app.setName","Changelog:
Windows
- Fix crash when calling app.setName"
1105,"Changelog:
- Fix displaying context menu for devtools
- Add app.addRecentDocument API
- Add a guide on desktop environment integration
Windows & Linux
- Fix ""visible"" not working in menu bar
Window
- Add app.setUserTasks API
Mac
- Add app.dock.setMenu API","Changelog:
- Fix displaying context menu for devtools
- Add app.addRecentDocument API
- Add a guide on desktop environment integration
Windows & Linux
- Fix ""visible"" not working in menu bar
Window
- Add app.setUserTasks API
Mac
- Add app.dock.setMenu API"
1106,"Changelog:
- Add plugins attribute for <webview>
- Add preload attribute for <webview>
- Add httpreferrer attribute for <webview>
- Add crashRepoter.getLastCrashReport API
- Add original-fs module
- Add preload option for BrowserWindow
- Add APIs to toggle menu bar for BrowserWindow
- Fix wrong string when using Buffer for WebKit’s external string
Linux
- Use system window frame for undocked devtools
Windows
- Upload PDB files to symbol server
- Use native frame for BrowserWindow when DWM is off
- Fix setting default path for file dialogs
Windows & Linux
- Fix crash when showing error dialog on early initialization stage
- Make auto-hide-menu-bar work when number lock is on","Changelog:
- Add plugins attribute for 
- Add preload attribute for 
- Add httpreferrer attribute for 
- Add crashRepoter.getLastCrashReport API
- Add original-fs module
- Add preload option for BrowserWindow
- Add APIs to toggle menu bar for BrowserWindow
- Fix wrong string when using Buffer for WebKit’s external string
Linux
- Use system window frame for undocked devtools
Windows
- Upload PDB files to symbol server
- Use native frame for BrowserWindow when DWM is off
- Fix setting default path for file dialogs
Windows & Linux
- Fix crash when showing error dialog on early initialization stage
- Make auto-hide-menu-bar work when number lock is on"
1107,"Changelog:
- Implement dialogs for <input> tag
- Add API to show devtools for <webview>
- Fix event.preventDefault() not working
- Add disposition parameter for new-window event","Changelog:
- Implement dialogs for  tag
- Add API to show devtools for 
- Fix event.preventDefault() not working
- Add disposition parameter for new-window event"
1108,"Breaking change:
- All custom security restrictions on iframe have been dropped, users should use <webview> tag instead.
Changelog:
- Drop custom security restrictions on iframe
- Add <webview> tag
- Fix leak of WebContents when opening external links
- Better handling of window.open and <a target=“frame”>
Mac
- Fix building under Yosemite","Breaking change:
- All custom security restrictions on iframe have been dropped, users should use  tag instead.
Changelog:
- Drop custom security restrictions on iframe
- Add  tag
- Fix leak of WebContents when opening external links
- Better handling of window.open and 
Mac
- Fix building under Yosemite"
1109,"Breaking change:
- Now BrowserWindow.show() would give focus to window.
Changelog:
- Add BrowserWindow.showInactive() API.
Linux
- Fix detecting global application menu.
- Fix showing on High DPI system.
- Fix focus issue on some desktop environments.","Breaking change:
- Now BrowserWindow.show() would give focus to window.
Changelog:
- Add BrowserWindow.showInactive() API.
Linux
- Fix detecting global application menu.
- Fix showing on High DPI system.
- Fix focus issue on some desktop environments."
1110,"Changelog:
- Fix memory leak when emitting events.
- Fix mnemonics in menu.
Linux
- Fix showing menu bar under DEs other than Unity on Ubuntu.
Windows
- Fix toggling menu bar with Alt.","Changelog:
- Fix memory leak when emitting events.
- Fix mnemonics in menu.
Linux
- Fix showing menu bar under DEs other than Unity on Ubuntu.
Windows
- Fix toggling menu bar with Alt."
1111,"Note: Requires apm v0.102.0 for building native modules.
Changelog:
- Upgrade to Chrome 38.
- Add support for speech synthesizer and speech recognizer API.
Linux
- Only show global menu when UBUNTU_MENUPROXY is set.
Windows
- Fix wrong __dirname for web page in asar package.","Note: Requires apm v0.102.0 for building native modules.
Changelog:
- Upgrade to Chrome 38.
- Add support for speech synthesizer and speech recognizer API.
Linux
- Only show global menu when UBUNTU_MENUPROXY is set.
Windows
- Fix wrong __dirname for web page in asar package."
1112,"Changelog:
- Fix file time returned by fs.stat when reading asar archives.
- Add process.versions['chrome'].
- Recognize proprietary media formats.
Mac
- Disable rubber-band.","Changelog:
- Fix file time returned by fs.stat when reading asar archives.
- Add process.versions['chrome'].
- Recognize proprietary media formats.
Mac
- Disable rubber-band."
1113,"Changelog:
- Fix starting distributed app.","Changelog:
- Fix starting distributed app."
1114,"Changelog:
- Add support for application packaging.
- Upgrade node to v0.11.14.
- Add support for capturing screen with getUserMedia.
Linux
- Fix focusing on file dialog.
Mac
- Fix crash caused by empty dialog buttons.","Changelog:
- Add support for application packaging.
- Upgrade node to v0.11.14.
- Add support for capturing screen with getUserMedia.
Linux
- Fix focusing on file dialog.
Mac
- Fix crash caused by empty dialog buttons."
1115,"Changelog:
- Add support for chromedriver.
- Add BrowserWindow.setProgressBar API.
- Add direct-write option for BrowserWindow.","Changelog:
- Add support for chromedriver.
- Add BrowserWindow.setProgressBar API.
- Add direct-write option for BrowserWindow."
1116,"Changelog:
- Some tunes on devtools.
- Add more options for web-preferences of BrowserWindow.
Mac
- Add some OS X specific Tray APIs.","Changelog:
- Some tunes on devtools.
- Add more options for web-preferences of BrowserWindow.
Mac
- Add some OS X specific Tray APIs."
1117,"Changelog:
- Fix dialog.showSaveDialog and dialog.showMessageBox.
- Fix BrowserWindow.show() focusing window.","Changelog:
- Fix dialog.showSaveDialog and dialog.showMessageBox.
- Fix BrowserWindow.show() focusing window."
1118,"Changelog:
- Upgrade to Chrome 37.
- Add support for Chrome devtools extension.
- Add support for printing.
- Fix setting window minimum size.
Windows
- Don't override high dpi setting of Chrome.
Mac
- Enable add Services menu.
Linux
- Don't set PR_SET_NO_NEW_PRIVS for child processes.
- Fix BrowserWindow.setResizable.
- Fix BrowserWindow.setSkipTaskbar.
- Set WM_CLASS and WM_WINDOW_ROLE for browser window.","Changelog:
- Upgrade to Chrome 37.
- Add support for Chrome devtools extension.
- Add support for printing.
- Fix setting window minimum size.
Windows
- Don't override high dpi setting of Chrome.
Mac
- Enable add Services menu.
Linux
- Don't set PR_SET_NO_NEW_PRIVS for child processes.
- Fix BrowserWindow.setResizable.
- Fix BrowserWindow.setSkipTaskbar.
- Set WM_CLASS and WM_WINDOW_ROLE for browser window."
1119,"Changelog:
- Add app.resolveProxy API.
- Add --debug switch.
- Add --proxy-server and --no-proxy-server switches.
Windows
- Fix crash when scheduling a uv loop.
Linux
- Fix race condition when initializing IO thread.","Changelog:
- Add app.resolveProxy API.
- Add --debug switch.
- Add --proxy-server and --no-proxy-server switches.
Windows
- Fix crash when scheduling a uv loop.
Linux
- Fix race condition when initializing IO thread."
1120,"Breaking Changes:
- BrowserWindow now can not be resized larger than screen unless the
  enable-larger-than-screen option is set to true.
Changelog:
- Add app.getDataPath API.
- Add enable-larger-than-screen option for BrowserWindow.
Mac
- Fix system's ""Text to Speech"" feature for BrowserWindow.
Linux & Windows
- Enable adding accelerator for menu bar items.
- Fix showing accelerators for F2 to F24.
Linux
- Fix menu bar under some dark themes.","Breaking Changes:
- BrowserWindow now can not be resized larger than screen unless the
  enable-larger-than-screen option is set to true.
Changelog:
- Add app.getDataPath API.
- Add enable-larger-than-screen option for BrowserWindow.
Mac
- Fix system's ""Text to Speech"" feature for BrowserWindow.
Linux & Windows
- Enable adding accelerator for menu bar items.
- Fix showing accelerators for F2 to F24.
Linux
- Fix menu bar under some dark themes."
1121,"Changelog:
- Add support for --host-rules switch.
- Fix a crash when using protocol module.","Changelog:
- Add support for --host-rules switch.
- Fix a crash when using protocol module."
1122,"Changelog:
- Add support for geolocation.
Windows
- Show minimize button for unresizable window.
- Enable window to be resized larger than screen.
Mac
- Fix crash of auto updater.","Changelog:
- Add support for geolocation.
Windows
- Show minimize button for unresizable window.
- Enable window to be resized larger than screen.
Mac
- Fix crash of auto updater."
1123,"Changelog:
- Enable ignore X-Frame-Options header for iframes.
Mac
- Enable window to be resized larger than screen.
Windows
- Building no longer requires WDK 7.1.
- Fix bootstrapping under some shells.","Changelog:
- Enable ignore X-Frame-Options header for iframes.
Mac
- Enable window to be resized larger than screen.
Windows
- Building no longer requires WDK 7.1.
- Fix bootstrapping under some shells."
1124,"Changelog:
- Fix stalled timers in browser process.
- Add support for auto-hide menu bars.","Changelog:
- Fix stalled timers in browser process.
- Add support for auto-hide menu bars."
1125,"Changelog:
- Add filters option for file dialogs.
- Allow set icon for multiple DPIs for tray and window.
Windows
- Fix the clicking issue of select tag.
- Fix window frame when DWM is disabled.
Linux
- Fix menu bar under KDE4 with icon tasks.
- Don't create junk file when sending crash report.
- Use system theme for menu bar.","Changelog:
- Add filters option for file dialogs.
- Allow set icon for multiple DPIs for tray and window.
Windows
- Fix the clicking issue of select tag.
- Fix window frame when DWM is disabled.
Linux
- Fix menu bar under KDE4 with icon tasks.
- Don't create junk file when sending crash report.
- Use system theme for menu bar."
1126,"Changelog:
- Fix the zombie render processes.
- Add support for --remote-debugging-port.
Linux
- Fix wrong process.arch on 32bit Linux.","Changelog:
- Fix the zombie render processes.
- Add support for --remote-debugging-port.
Linux
- Fix wrong process.arch on 32bit Linux."
1127,"Changelog:
- Add content-tracing module.
- Fix child_process.fork in browser process.
Mac
- Fix emitting blur/focus events too early.
- Fix a crash when showing dialog.
Windows
- Ship VS2012 redist DLLs.
Linux
- Fix showing menu on non-Unity DEs.","Changelog:
- Add content-tracing module.
- Fix child_process.fork in browser process.
Mac
- Fix emitting blur/focus events too early.
- Fix a crash when showing dialog.
Windows
- Ship VS2012 redist DLLs.
Linux
- Fix showing menu on non-Unity DEs."
1128,"Changelog:
- Upgrade to Chrome 36.","Changelog:
- Upgrade to Chrome 36."
1129,"Changelog:
- Add BrowserWindow.isMinimized API.
Windows
- Fix crash caused by crash reporter and node together.
- Fix BrowserWindow.getSize when window is minimized.
- Fix showing window icon.","Changelog:
- Add BrowserWindow.isMinimized API.
Windows
- Fix crash caused by crash reporter and node together.
- Fix BrowserWindow.getSize when window is minimized.
- Fix showing window icon."
1130,"Changelog:
- Fix net.connect stalling problem.
Mac
- Fix crash when closing window.
- Make cmd+~ work for devtools window.
Windows
- Don't show the & in menu bar.
- Fix generating symbols.","Changelog:
- Fix net.connect stalling problem.
Mac
- Fix crash when closing window.
- Make cmd+~ work for devtools window.
Windows
- Don't show the & in menu bar.
- Fix generating symbols."
1131,"Changelog:
Mac
- Fix focus event of DOM.
- Add BrowserWindow.isDoucumentEdited and
  BrowserWindow.getRepresentedFilename APIs.
Linux
- Use native frame for windows.","Changelog:
Mac
- Fix focus event of DOM.
- Add BrowserWindow.isDoucumentEdited and
  BrowserWindow.getRepresentedFilename APIs.
Linux
- Use native frame for windows."
1132,"Changelog:
- Upgrade to Chrome35
- Fix crash when using web-preferences option.
Windows
- Add High DPI support.
Linux
- Reimplement GUI with Aura.
- Fix crash when setting context menu of app indicator.
Mac
- Add API to hide and show doc icon.","Changelog:
- Upgrade to Chrome35
- Fix crash when using web-preferences option.
Windows
- Add High DPI support.
Linux
- Reimplement GUI with Aura.
- Fix crash when setting context menu of app indicator.
Mac
- Add API to hide and show doc icon."
1133,"Changelog:
- Show chromium's version in user agent.
- Add support for high resolution icon in tray and window.
- Fix search paths of remote.require.
- Fix unresponsive event when showing modal dialog on Linux.","Changelog:
- Show chromium's version in user agent.
- Add support for high resolution icon in tray and window.
- Fix search paths of remote.require.
- Fix unresponsive event when showing modal dialog on Linux."
1134,"Changelog:
- Add Escape as alias of Esc in accelerators.
- Enabled detached devtools.
- Add web-view module for setting zoom level.
- Add zoom-factor option for BrowserWindow.
- Add BrowserWindow.setSkipTaskbar API.
- Fix BrowserWindow.executeJavaScript when page is not loaded.
- Fix synchronous dialog API usages.","Changelog:
- Add Escape as alias of Esc in accelerators.
- Enabled detached devtools.
- Add web-view module for setting zoom level.
- Add zoom-factor option for BrowserWindow.
- Add BrowserWindow.setSkipTaskbar API.
- Fix BrowserWindow.executeJavaScript when page is not loaded.
- Fix synchronous dialog API usages."
1135,"Changelog
- Support INSERT in accelerator.
- Make did-finish-load only emit for main frame.
Windows
- Enable devtools to be attached to the window.
Mac
- Make web view is the first responder of window.
- Restore presentation options when leaving kiosk mode.","Changelog
- Support INSERT in accelerator.
- Make did-finish-load only emit for main frame.
Windows
- Enable devtools to be attached to the window.
Mac
- Make web view is the first responder of window.
- Restore presentation options when leaving kiosk mode."
1136,"Changelog:
- Add tray module.
- Provide application locale information.
Linux:
- Add Support for 32bit build on Linux.
- Support selection clipboard in clipboard module.
Windows:
- Fix crash when changing focus on Windows.","Changelog:
- Add tray module.
- Provide application locale information.
Linux:
- Add Support for 32bit build on Linux.
- Support selection clipboard in clipboard module.
Windows:
- Fix crash when changing focus on Windows."
1137,"Changelog:
- Fix uncaught exception when setting empty menu as application menu.
- Add API to set icon in titlebar on OS X.","Changelog:
- Fix uncaught exception when setting empty menu as application menu.
- Add API to set icon in titlebar on OS X."
1138,"Changelog:
- Various fixes on menus.
- Add web-preferences option for BrowserWindow.
- Fix context menu of devtools.
Windows
- Fix resizable flag of BrowserWindow.
- Fix calling shell.showItemInFolder in web pages.`","Changelog:
- Various fixes on menus.
- Add web-preferences option for BrowserWindow.
- Fix context menu of devtools.
Windows
- Fix resizable flag of BrowserWindow.
- Fix calling shell.showItemInFolder in web pages.`"
1139,"Changelog:
- Add API to set content size of browser window.
- Fix crash when using ArrayBuffer.
- Fix posting form in HTML.
Windows
- Fix WebGL support.
Linux
- Use system's setting for font renderering.
- Ship with libnotify.so.
Mac
- Add missing graphics switching attribute.","Changelog:
- Add API to set content size of browser window.
- Fix crash when using ArrayBuffer.
- Fix posting form in HTML.
Windows
- Fix WebGL support.
Linux
- Use system's setting for font renderering.
- Ship with libnotify.so.
Mac
- Add missing graphics switching attribute."
1140,"Changelog:
- Fix emitting unresposive event too early when closing window.
- Fix crash when closing a crashed window
Linux
- Fix disappearing menubar.
- Ship system dynamic libraries.","Changelog:
- Fix emitting unresposive event too early when closing window.
- Fix crash when closing a crashed window
Linux
- Fix disappearing menubar.
- Ship system dynamic libraries."
1141,"Changelog:
- Fix auto updater.
- Fix crash of protocol module.
- Enable WebGL.","Changelog:
- Fix auto updater.
- Fix crash of protocol module.
- Enable WebGL."
1142,"Changelog:
- Provide usage instructions in the default app.","Changelog:
- Provide usage instructions in the default app."
1143,"Changelog:
- Deprecate BrowserWindow.restart() and make sure BrowserWindow.reload() would
  always restart the renderer process.","Changelog:
- Deprecate BrowserWindow.restart() and make sure BrowserWindow.reload() would
  always restart the renderer process."
1144,"Changelog:
Development:
- Bring back Windows build.
- Reimplement APIs with native-mate.
- Put frameworks from S3 to GitHub releases.
- Install apm from npm.
- Do not handle IPC messages in NativeWindow.
API Change:
- Add WebContents API.
- Rename ipc.sendChannel API to ipc.send.
- Do not expose processId and routingId in APIs.
Bugs:
- Unsubscribe from notification center when NSWindow is closed.","Changelog:
Development:
- Bring back Windows build.
- Reimplement APIs with native-mate.
- Put frameworks from S3 to GitHub releases.
- Install apm from npm.
- Do not handle IPC messages in NativeWindow.
API Change:
- Add WebContents API.
- Rename ipc.sendChannel API to ipc.send.
- Do not expose processId and routingId in APIs.
Bugs:
- Unsubscribe from notification center when NSWindow is closed."
1145,"Changelog:
- Fix application termination on OS X.","Changelog:
- Fix application termination on OS X."
1146,"Changelog:
- Fix a crash when destroying window on OS X.","Changelog:
- Fix a crash when destroying window on OS X."
1147,"Changelog:
- Quitting application would shutdown atom-shell gracefully.","Changelog:
- Quitting application would shutdown atom-shell gracefully."
1148,"Changelog:
- Fix emitting unresponsive event when quitting.
- Add executeJavaScriptInDevTools API for BrowserWindow.
- linux: Fix connecting to window state event.","Changelog:
- Fix emitting unresponsive event when quitting.
- Add executeJavaScriptInDevTools API for BrowserWindow.
- linux: Fix connecting to window state event."
1149,"Changelog:
- Show menu of devtools.
- Fix capturePage under accelerated mode.
- Increase closing time limit to 5s.
- linux: Fix crash when using clipboard in renderer process.
- linux: Accelerators should be handled after renderer handled keyboard inputs.
- mac: Fix crash when closing window.","Changelog:
- Show menu of devtools.
- Fix capturePage under accelerated mode.
- Increase closing time limit to 5s.
- linux: Fix crash when using clipboard in renderer process.
- linux: Accelerators should be handled after renderer handled keyboard inputs.
- mac: Fix crash when closing window."
1150,"Changelog:
- linux: Fix crash when closing window.
- linux: Fix crash when calling GetSize for hidden window.
- linux: Set window sizes correctly on different window manager.","Changelog:
- linux: Fix crash when closing window.
- linux: Fix crash when calling GetSize for hidden window.
- linux: Set window sizes correctly on different window manager."
1151,"Changelog:
- Fix a crash when closing unresponsive window.
- Increase unresponsive time limit to 2s when closing window.","Changelog:
- Fix a crash when closing unresponsive window.
- Increase unresponsive time limit to 2s when closing window."
1152,"Changelog:
- mac: Fix crash caused by closing window when showing context menu.
- Fix wrong unresponsive event caused by blocking js call.","Changelog:
- mac: Fix crash caused by closing window when showing context menu.
- Fix wrong unresponsive event caused by blocking js call."
1153,"Changlog:
- gtk: Ask whether window is active from WM.
- mac: Build .dSYM for node modules.
- Close devtools completely instead of hiding it.","Changlog:
- gtk: Ask whether window is active from WM.
- mac: Build .dSYM for node modules.
- Close devtools completely instead of hiding it."
1154,"Changelog:
- Feature compelete on Linux.
- Add accept-first-mouse to BrowserWindow's creation option.","Changelog:
- Feature compelete on Linux.
- Add accept-first-mouse to BrowserWindow's creation option."
1155,"Changelog:
- linux: Fix detecting modal dialog.
- linux: Fix openning devtools.","Changelog:
- linux: Fix detecting modal dialog.
- linux: Fix openning devtools."
1156,"Changelog:
- Make iframe sandboxed by default.
- Fix a crash caused when calling BrowserWindow.isWebViewFocused.","Changelog:
- Make iframe sandboxed by default.
- Fix a crash caused when calling BrowserWindow.isWebViewFocused."
1157,"Changelog:
- Enable accelerated composition.","Changelog:
- Enable accelerated composition."
1158,"Changelog:
- Fix crashes caused by dialog API.
- Disable undocked devtools.
- Fix web security.
- Disable node integration in iframes by default.
- Add activate-with-no-open-windows event for app.
- Provide debug symbols on Linux.","Changelog:
- Fix crashes caused by dialog API.
- Disable undocked devtools.
- Fix web security.
- Disable node integration in iframes by default.
- Add activate-with-no-open-windows event for app.
- Provide debug symbols on Linux."
1159,"Changelog:
- Fix unresponsive window when using alert().
- Suppress CFAllocator warning.
- Fix a crash from node.","Changelog:
- Fix unresponsive window when using alert().
- Suppress CFAllocator warning.
- Fix a crash from node."
1160,"Changelog:
- Fix wrong uv error code.","Changelog:
- Fix wrong uv error code."
1161,"Changelog:
- Fix buid issues on Windows.","Changelog:
- Fix buid issues on Windows."
1162,"Changlog:
- Fix crash in procotol module.
- Do not dectect unresponsive eagerly when quitting.
- Fix crash caused by unknown system call error.","Changlog:
- Fix crash in procotol module.
- Do not dectect unresponsive eagerly when quitting.
- Fix crash caused by unknown system call error."
1163,"Changelog:
- Basic Linux support.
- Do not inject node integration to devtools.
- Add ability to debug the devtools.","Changelog:
- Basic Linux support.
- Do not inject node integration to devtools.
- Add ability to debug the devtools."
1164,"Changelog:
- Close all windows before installing update.
- The window.close() should call unload handler.","Changelog:
- Close all windows before installing update.
- The window.close() should call unload handler."
1165,"Changelog:
- win: Fix formating in console.log.
- win: Fix detecting attached modal dialog.
- win: Use keydown event for accelerator.","Changelog:
- win: Fix formating in console.log.
- win: Fix detecting attached modal dialog.
- win: Use keydown event for accelerator."
1166,"Changelog:
- Fix the releaseDate parameter of auto updater.","Changelog:
- Fix the releaseDate parameter of auto updater."
1167,"Changelog:
- Add node-integration option for BrowserWindow.
- Make sure all key stokens are captured by renderer.
- Replace Sparkle with Squirrel.","Changelog:
- Add node-integration option for BrowserWindow.
- Make sure all key stokens are captured by renderer.
- Replace Sparkle with Squirrel."
1168,"Changelog:
- Fix crash when using pac script in network settings.
- Fix wrong __filename and __dirname when there is spaces in path.","Changelog:
- Fix crash when using pac script in network settings.
- Fix wrong __filename and __dirname when there is spaces in path."
1169,"Changelog:
- Crash when there is fatal error in V8.
- Fix occasional delay on IPC messages.","Changelog:
- Crash when there is fatal error in V8.
- Fix occasional delay on IPC messages."
1170,"Changelog:
- Fix crash when calling dialog's callback.
- Restart renderer process for all navigations and reloads.","Changelog:
- Fix crash when calling dialog's callback.
- Restart renderer process for all navigations and reloads."
1171,"Changelog:
- Fix crashes caused by native modules.
- Update node to v0.11.10.
- Fix blocked process.nextTick.
- Fix blocked child process messages.","Changelog:
- Fix crashes caused by native modules.
- Update node to v0.11.10.
- Fix blocked process.nextTick.
- Fix blocked child process messages."
1172,"Changelog:
- Fix several crashes when quitting.","Changelog:
- Fix several crashes when quitting."
1173,"Changelog:
- Add screen module.
- Fix relative require in renderer process.
- Fix capturePage API.
- Fix creating window without setting size under OS X.
- Fix API breakage of 'atom-delegate' module.","Changelog:
- Add screen module.
- Fix relative require in renderer process.
- Fix capturePage API.
- Fix creating window without setting size under OS X.
- Fix API breakage of 'atom-delegate' module."
1174,"Changelog:
- Fix various Windows issues.
API Change Notice:
- The app module's finish-launching event has been renamed to ready.
- The whole require('atom-delegate').browserMainParts.preMainMessageLoopRun = ... things are removed since v0.8.0, use app.on('ready', ...) instead.","Changelog:
- Fix various Windows issues.
API Change Notice:
- The app module's finish-launching event has been renamed to ready.
- The whole require('atom-delegate').browserMainParts.preMainMessageLoopRun = ... things are removed since v0.8.0, use app.on('ready', ...) instead."
1175,"Changelog:
- Update to Chrome31.
- Update to node v0.11.9.
- OS X build is now 64bit.
API Change Notice:
- The app module's finish-launching event has been renamed to ready.
- The whole require('atom-delegate').browserMainParts.preMainMessageLoopRun = ... things are removed since v0.8.0, use app.on('ready', ...) instead.","Changelog:
- Update to Chrome31.
- Update to node v0.11.9.
- OS X build is now 64bit.
API Change Notice:
- The app module's finish-launching event has been renamed to ready.
- The whole require('atom-delegate').browserMainParts.preMainMessageLoopRun = ... things are removed since v0.8.0, use app.on('ready', ...) instead."
1176,"Changelog:
- Add fs.lstatSyncNoException(path) API.
- Fix a crash when closing window.","Changelog:
- Add fs.lstatSyncNoException(path) API.
- Fix a crash when closing window."
1177,"Changelog:
- Use name and version fields of package.json as application's name and
  version.
- Custom the user agent to contain application and atom-shell's name
  and version.","Changelog:
- Use name and version fields of package.json as application's name and
  version.
- Custom the user agent to contain application and atom-shell's name
  and version."
1178,"Changelog:
- Do not send ""unresponsive"" message if window is showing a modal dialog.
- Kill zombie processes when renderer became unresponsive.","Changelog:
- Do not send ""unresponsive"" message if window is showing a modal dialog.
- Kill zombie processes when renderer became unresponsive."
1179,"Changelog:
- Send ""unresponsive"" event for unresponsive window when closing it.
- Fix getting result of synchronous dialog.
- Add ""CommandOrControl"" for accelartors.","Changelog:
- Send ""unresponsive"" event for unresponsive window when closing it.
- Fix getting result of synchronous dialog.
- Add ""CommandOrControl"" for accelartors."
1180,"Changelog:
- Fix various problems of crash reporter.","Changelog:
- Fix various problems of crash reporter."
1181,"Changelog:
- Use breakpad for crash reporting on Windows and OS X.
- Generate breakpad symbols.","Changelog:
- Use breakpad for crash reporting on Windows and OS X.
- Generate breakpad symbols."
1182,"Changelog:
- Fix dumping libchromiumcontent symbols on OS X.","Changelog:
- Fix dumping libchromiumcontent symbols on OS X."
1183,"Changelog:
- Add BrowserWindow.capturePage API.","Changelog:
- Add BrowserWindow.capturePage API."
1184,"Changelog:
- Do not translate ""Command"" to ""Ctrl"" in accelerators on Windows.","Changelog:
- Do not translate ""Command"" to ""Ctrl"" in accelerators on Windows."
1185,"Changelog:
- Build binary for Mac on OS X 10.8.5.
- Fix a possible dead lock when quitting.
- Enable setting window icons when creating window.","Changelog:
- Build binary for Mac on OS X 10.8.5.
- Fix a possible dead lock when quitting.
- Enable setting window icons when creating window."
1186,"Change log:
- Show window icon on Windows.","Change log:
- Show window icon on Windows."
1187,"Changelog:
- Fix toggling devtools window.
- Fix no console output on Windows.","Changelog:
- Fix toggling devtools window.
- Fix no console output on Windows."
1188,"Changelog:
- Rebuild libchromiumcontent binary for Mac on OS X 10.9.","Changelog:
- Rebuild libchromiumcontent binary for Mac on OS X 10.9."
1189,"Changelog:
- Expose libuv's symbols on Windows.","Changelog:
- Expose libuv's symbols on Windows."
1190,"Changelog:
- Makes atom-shell compile-able with VS 2010 Express.
- Ship pdb file on Windows
- Fix the empty resources folder on Windows distribution.","Changelog:
- Makes atom-shell compile-able with VS 2010 Express.
- Ship pdb file on Windows
- Fix the empty resources folder on Windows distribution."
1191,"Changelog:
- Fix a possible crash when refreshing page.
- Allow single-charactor accelerators.","Changelog:
- Fix a possible crash when refreshing page.
- Allow single-charactor accelerators."
1192,"Changelog:
- Support more symbols in menu item's accelerator.","Changelog:
- Support more symbols in menu item's accelerator."
1193,"Changelog:
- Enable to set native ""Help"" menu in the application menu on OS X.","Changelog:
- Enable to set native ""Help"" menu in the application menu on OS X."
1194,"Changelog:
- Fix js exception when there is space in containing directory's name.","Changelog:
- Fix js exception when there is space in containing directory's name."
1195,"Changelog:
- Implement menu API for Windows.
- Extend menu item's accelerator to accept more ASCII tokens.","Changelog:
- Implement menu API for Windows.
- Extend menu item's accelerator to accept more ASCII tokens."
1196,"Changelog:
- Add BrowserWindow.isVisible() API.
- Fix side effect that BrowserWindow.focus() make the window become visible.","Changelog:
- Add BrowserWindow.isVisible() API.
- Fix side effect that BrowserWindow.focus() make the window become visible."
1197,"Changelog:
- Fix crash when sending http request.","Changelog:
- Fix crash when sending http request."
1198,"Changelog:
- Fix possible crash when destroying native window.
- Fix possible crash caused by changes of network envinroment.","Changelog:
- Fix possible crash when destroying native window.
- Fix possible crash caused by changes of network envinroment."
1199,"Changelog:
- Fixes a possible crash caused by GC of event object.","Changelog:
- Fixes a possible crash caused by GC of event object."
1200,"Changelog:
- Calling synchronous API from renderer now doesn't block the browser.
- Fix incorrect rounded corners on OS X.","Changelog:
- Calling synchronous API from renderer now doesn't block the browser.
- Fix incorrect rounded corners on OS X."
1201,"Changelog:
- Fix crash when using protocol module on startup.","Changelog:
- Fix crash when using protocol module on startup."
1202,"Changelog:
- Fix random crash on startup.","Changelog:
- Fix random crash on startup."
1203,"Changelog:
- Add rounded corner for frameless window.
- A few fixes for when application name is changed other than Atom.","Changelog:
- Add rounded corner for frameless window.
- A few fixes for when application name is changed other than Atom."
1204,"Changelog:
- Hide the fullscreen button when leaving fullscreen mode.
- Fix crash when application's name is modified.","Changelog:
- Hide the fullscreen button when leaving fullscreen mode.
- Fix crash when application's name is modified."
1205,"Changelog:
- Add support for frameless window.
- Fix native node modules on Windows.","Changelog:
- Add support for frameless window.
- Fix native node modules on Windows."
1206,"Changelog:
- Fix child_process.fork in scripts executed by child_process.fork.
- Add protocol module.","Changelog:
- Fix child_process.fork in scripts executed by child_process.fork.
- Add protocol module."
1207,"Changelog:
- Fix beforeunload handlers.","Changelog:
- Fix beforeunload handlers."
1208,"Changelog:
- Fix native node modules support on Windows","Changelog:
- Fix native node modules support on Windows"
1209,"Changelog:
- Fix crash when taking heap snapshot in devtools.
- Add CI.","Changelog:
- Fix crash when taking heap snapshot in devtools.
- Add CI."
1210,"Changelog:
- Enable getting real file path from the File object.","Changelog:
- Enable getting real file path from the File object."
1211,"Changelog:
- Add AtomWindow.isWebViewFocused() API.
- Fix navigator.getUserMedia.","Changelog:
- Add AtomWindow.isWebViewFocused() API.
- Fix navigator.getUserMedia."
1212,"Changelog:
- Move documentations to docs.
- Fix a bug causing selector of menu items not to work.","Changelog:
- Move documentations to docs.
- Fix a bug causing selector of menu items not to work."
1213,"Changelog:
- When using Menu.buildFromTemplate, extra fields will be attached to the MenuItem object.
- The Menu object now stores its items by their indexes.
- Enable passing objects and arrays when calling remote function.","Changelog:
- When using Menu.buildFromTemplate, extra fields will be attached to the MenuItem object.
- The Menu object now stores its items by their indexes.
- Enable passing objects and arrays when calling remote function."
1214,"Changelog:
- Disable the Uncaught Error: Too much time spent in unload handler. exception.","Changelog:
- Disable the Uncaught Error: Too much time spent in unload handler. exception."
1215,"Changelog:
- Add process.versions[""atom-shell""].
- Prefer browserify field to main field when reading package.json in renderer.","Changelog:
- Add process.versions[""atom-shell""].
- Prefer browserify field to main field when reading package.json in renderer."
