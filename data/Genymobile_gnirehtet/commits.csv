Index,Message,Description,Message Abstract,Description Abstract
1,Mention that gnirehtet is not actively maintained,,Mention that gnirehtet is not actively maintained,
2,Cargo update,"Execute ""cargo update"" to update dependencies for the versions listed in Cargo.toml. Fixes #475 https://github.com/Genymobile/gnirehtet/issues/475",Cargo update,"Execute ""cargo update"" to update dependencies for the versions listed in Cargo.toml. Fixes #475 link"
3,Remove useless borrowing,,Remove useless borrowing,
4,Prefix unused field by _,The 'version' field is only used in tests (gnirehtet only supports IPv4).,Prefix unused field by _,The 'version' field is only used in tests (gnirehtet only supports IPv4).
5,Fix trailing semicolon warning, warning: trailing semicolon in macro used in expression position,Fix trailing semicolon warning,warning: trailing semicolon in macro used in expression position
6,Read process output before waiting,"The process may stuck because its output buffer is full, but the output was consumed only after the process was terminated, causing a deadlock. Consume process output before waiting for process termination to fix the problem. Refs #369 https://github.com/Genymobile/gnirehtet/issues/369 Refs #370 https://github.com/Genymobile/gnirehtet/pull/370 Co-authored-by: tusenpo tusenpo@pinduoduo.com",Read process output before waiting,"The process may stuck because its output buffer is full, but the output was consumed only after the process was terminated, causing a deadlock. Consume process output before waiting for process termination to fix the problem. Refs #369 link Refs #370 link Co-authored-by: tusenpo tusenpo@pinduoduo.com"
7,Fix datagram buffer remaining size,"In the Java version, a datagram was incorrectly rejected if its size was exactly the remaining buffer size (this was harmless). In the Rust version, the datagram buffer considered it had enough space if a packet was 1 byte too big (causing packet overwriting). Refs #345 https://github.com/Genymobile/gnirehtet/issues/345",Fix datagram buffer remaining size,"In the Java version, a datagram was incorrectly rejected if its size was exactly the remaining buffer size (this was harmless). In the Rust version, the datagram buffer considered it had enough space if a packet was 1 byte too big (causing packet overwriting). Refs #345 link"
8,Fix typo in comment,,Fix typo in comment,
9,Add Homebrew instructions to the README,Signed-off-by: Romain Vimont rom@rom1v.com,Add Homebrew instructions to the README,Signed-off-by: Romain Vimont rom@rom1v.com
10,Update release v2.5 links in README,,Update release v2.5 links in README,
11,Bump version to 2.5,,Bump version to 2.5,
12,Fix deprecation and other warnings,Reported by clippy and rustc. PR #284 https://github.com/Genymobile/gnirehtet/pull/284 Signed-off-by: Romain Vimont rom@rom1v.com,Fix deprecation and other warnings,Reported by clippy and rustc. PR #284 link Signed-off-by: Romain Vimont rom@rom1v.com
13,Use sufficient buffer size,"The buffer size (2^12 bytes) to read a packet from the VPN was smaller than the largest possible packet (2^16 bytes), causing packets to be truncated. Increase the buffer size to fix the problem. Fixes #273 https://github.com/Genymobile/gnirehtet/issues/273",Use sufficient buffer size,"The buffer size (2^12 bytes) to read a packet from the VPN was smaller than the largest possible packet (2^16 bytes), causing packets to be truncated. Increase the buffer size to fix the problem. Fixes #273 link"
14,Fix code style,,Fix code style,
15,Add more packet data logs,,Add more packet data logs,
16,Log packet data as verbose logs,,Log packet data as verbose logs,
17,Add a missing space in logs,,Add a missing space in logs,
18,Improve packet logging,"If verbose is enabled, print the packet size and the 20 first bytes (the IP header) only in a single line.",Improve packet logging,"If verbose is enabled, print the packet size and the 20 first bytes (the IP header) only in a single line."
19,Remove useless parentheses,,Remove useless parentheses,
20,Remove useless return type,"The monitor() function just loops, it cannot fails.",Remove useless return type,"The monitor() function just loops, it cannot fails."
21,Allow to set a custom path for client APK,Use the environment variable GNIREHTET_APK to use a custom path for the gnirehtet client. Ref https://github.com/Genymobile/gnirehtet/issues/90,Allow to set a custom path for client APK,Use the environment variable GNIREHTET_APK to use a custom path for the gnirehtet client. Ref link
22,Allow to set a custom path for adb,Use the environment variable ADB to use a custom adb executable.,Allow to set a custom path for adb,Use the environment variable ADB to use a custom adb executable.
23,Update release v2.4 links in README,,Update release v2.4 links in README,
24,Bump version to 2.4,,Bump version to 2.4,
25,Update relay-rust dependencies,"Generated by ""cargo update"".",Update relay-rust dependencies,"Generated by ""cargo update""."
26,Update README and DEVELOP,The commands to run gnirehet manually have changed since commit f8681809a28a0073f791f0d9eae65da02ae73c3d.,Update README and DEVELOP,The commands to run gnirehet manually have changed since commit f8681809a28a0073f791f0d9eae65da02ae73c3d.
27,Rename config field,"Fix a checkstyle issue: the ""config"" parameter hid the class field.",Rename config field,"Fix a checkstyle issue: the ""config"" parameter hid the class field."
28,Merge pull request #210 from jessedusty:add_port_option,Add port option to allow multiple instances of the gnirehtet relay to run,Merge pull request #210 from jessedusty:add_port_option,Add port option to allow multiple instances of the gnirehtet relay to run
29,Add port -p option to rust relay,Signed-off-by: Romain Vimont rom@rom1v.com,Add port -p option to rust relay,Signed-off-by: Romain Vimont rom@rom1v.com
30,Add port -p option to java relay,Signed-off-by: Romain Vimont rom@rom1v.com,Add port -p option to java relay,Signed-off-by: Romain Vimont rom@rom1v.com
31,Reorder Android manifest,Declare permissions before the application tag (to make the linter happy).,Reorder Android manifest,Declare permissions before the application tag (to make the linter happy).
32,Upgrade targetSdkVersion to 29,,Upgrade targetSdkVersion to 29,
33,Do not panic on deregister(),A call to selector.deregister() may (unexpectedly) fail with Rust/MIO: https://github.com/Genymobile/gnirehtet/issues/136,Do not panic on deregister(),A call to selector.deregister() may (unexpectedly) fail with Rust/MIO: link
34,Merge pull request #209 from jessedusty/master,Fix #154 - relay dies with AssertionError,Merge pull request #209 from jessedusty/master,Fix #154 - relay dies with AssertionError
35,Fix cleanup race condition,"Fix race condition in Java due to timeout from no activity, misses the cleaning deadline by a small number of milliseconds. Fixes https://github.com/Genymobile/gnirehtet/issues/154 Evidence: Selected keys size 1 now: 1562790544556 nextCleaningDeadline 1562790662669 Selected keys size 0 now: 1562790662667 nextCleaningDeadline 1562790662669 selector.select() returned without any event, an invalid SelectionKey was probably been registered Selected keys size 0 now: 1562790662670 nextCleaningDeadline 1562790662669 Selected keys size 0 now: 1562790722672 nextCleaningDeadline 1562790722670 2019-07-10 16:32:02.673 I UDPConnection: UDP 10.0.0.2:31650 -> 208.67.222.222:53 Close Signed-off-by: Romain Vimont rom@rom1v.com",Fix cleanup race condition,"Fix race condition in Java due to timeout from no activity, misses the cleaning deadline by a small number of milliseconds. Fixes link Evidence: Selected keys size 1 now: 1562790544556 nextCleaningDeadline 1562790662669 Selected keys size 0 now: 1562790662667 nextCleaningDeadline 1562790662669 selector.select() returned without any event, an invalid SelectionKey was probably been registered Selected keys size 0 now: 1562790662670 nextCleaningDeadline 1562790662669 Selected keys size 0 now: 1562790722672 nextCleaningDeadline 1562790722670 2019-07-10 16:32:02.673 I UDPConnection: UDP 10.0.0.2:31650 -> 208.67.222.222:53 Close Signed-off-by: Romain Vimont rom@rom1v.com"
36,Require FOREGROUND_SERVICE,"Since Android 9, starting a foreground service requires a permission:  Apps wanting to use foreground services must now request the FOREGROUND_SERVICE permission first. This is a normal permission, so the system automatically grants it to the requesting app. Starting a foreground service without the permission throws a SecurityException.  https://developer.android.com/about/versions/pie/android-9.0-migration#tya",Require FOREGROUND_SERVICE,"Since Android 9, starting a foreground service requires a permission: Apps wanting to use foreground services must now request the FOREGROUND_SERVICE permission first. This is a normal permission, so the system automatically grants it to the requesting app. Starting a foreground service without the permission throws a SecurityException. link"
37,Use an Activity as entry point,"Recent versions of Android refuse to directly start a Service or a BroadcastReceiver, so always use an (invisible) Activity to receive intents. This fixes many cases where the confirmation dialog were not displayed: https://github.com/Genymobile/gnirehtet/issues?utf8=%E2%9C%93&q=is%3Aissue+label%3Anodialog",Use an Activity as entry point,"Recent versions of Android refuse to directly start a Service or a BroadcastReceiver, so always use an (invisible) Activity to receive intents. This fixes many cases where the confirmation dialog were not displayed: link"
38,Upgrade relay-rust dependencies,,Upgrade relay-rust dependencies,
39,"Use explicit ""dyn"" keyword","Trait objects without ""dyn"" keyword is now deprecated.","Use explicit ""dyn"" keyword","Trait objects without ""dyn"" keyword is now deprecated."
40,Upgrade gradle version,,Upgrade gradle version,
41,Fix binary packet to string (java),"Since commit 9a184b9428f443a01f6194c6c7f683f9c70b05b8, i was incremented twice. Fixes https://github.com/Genymobile/gnirehtet/issues/213",Fix binary packet to string (java),"Since commit 9a184b9428f443a01f6194c6c7f683f9c70b05b8, i was incremented twice. Fixes link"
42,Update rustfmt usage,The new rustfmt now works in Rust stable.,Update rustfmt usage,The new rustfmt now works in Rust stable.
43,Remove non-lexical lifetime workaround,The borrow checker is now smart enough :),Remove non-lexical lifetime workaround,The borrow checker is now smart enough :)
44,Use dyn trait,Use the new syntax from Rust 1.27 for using trait objects.,Use dyn trait,Use the new syntax from Rust 1.27 for using trait objects.
45,"Fix all ""cargo clippy"" warnings",,"Fix all ""cargo clippy"" warnings",
46,"Reformat code with ""cargo fmt""",,"Reformat code with ""cargo fmt""",
47,Use Rust edition 2018,"Enable Rust edition 2018, and adapt module usage.",Use Rust edition 2018,"Enable Rust edition 2018, and adapt module usage."
48,Fix author e-mail in Cargo.toml,The @genymobile.com e-mail is not valid for months.,Fix author e-mail in Cargo.toml,The @genymobile.com e-mail is not valid for months.
49,Fix deprecation warnings in tests,Use org.junit.Assert instead of junit.framework.Assert.,Fix deprecation warnings in tests,Use org.junit.Assert instead of junit.framework.Assert.
50,Upgrade Android versions,"Everything breaks every time a new version of Android, build tools or gradle is available.",Upgrade Android versions,"Everything breaks every time a new version of Android, build tools or gradle is available."
51,Update release v2.3 links in README,,Update release v2.3 links in README,
52,Bump version to 2.3,,Bump version to 2.3,
53,Update relay-rust dependencies,"Generated by ""cargo update"".",Update relay-rust dependencies,"Generated by ""cargo update""."
54,Make current rustfmt work,"Rust deprecated the ""current"" rustfmt, because the ""new"" one is available in nightly. One a stable release channel, we cannot use the new one, so make the ""current"" one work by passing ""--force"".",Make current rustfmt work,"Rust deprecated the ""current"" rustfmt, because the ""new"" one is available in nightly. One a stable release channel, we cannot use the new one, so make the ""current"" one work by passing ""--force""."
55,Start clients asynchronously in autostart mode,"Starting a client may involved an apk installation. When several new devices are connected, start them in parallel instead of sequentially.",Start clients asynchronously in autostart mode,"Starting a client may involved an apk installation. When several new devices are connected, start them in parallel instead of sequentially."
56,Fix track-devices parsing in AdbMonitor,"The old implementation assumed that track-devices provided one device state per packet (the one that have changed). In fact, it always resends the whole list: https://android.googlesource.com/platform/system/core/+/oreo-release/adb/SERVICES.TXT#27 Therefore, keep the last connected devices list, parse the new list and start gnirehtet client on new connected devices. Fixes https://github.com/Genymobile/gnirehtet/issues/134.",Fix track-devices parsing in AdbMonitor,"The old implementation assumed that track-devices provided one device state per packet (the one that have changed). In fact, it always resends the whole list: link Therefore, keep the last connected devices list, parse the new list and start gnirehtet client on new connected devices. Fixes link."
57,Add unit tests for Rust AdbMonitor,"The Java version had unit tests, but the Rust version had not.",Add unit tests for Rust AdbMonitor,"The Java version had unit tests, but the Rust version had not."
58,Extract read_packet() from next_packet(),"Like in the Java version, expose a ""static"" read_packet() function, used by next_packet(). This will allow to test packet reading without an AdbMonitor instance.",Extract read_packet() from next_packet(),"Like in the Java version, expose a ""static"" read_packet() function, used by next_packet(). This will allow to test packet reading without an AdbMonitor instance."
59,Replace statement lambda by expression lambda,Simplify code syntax in java tests.,Replace statement lambda by expression lambda,Simplify code syntax in java tests.
60,Discard non-IPv4 packets,"Despite not allowing implicitly or explicitly IPv6, some devices forward IPv6 packets, not supported by the relay server, to the VpnService. https://developer.android.com/reference/android/net/VpnService.Builder.html#allowFamily(int) To workaround the issue, do not forward these packets to the relay server. Fixes https://github.com/Genymobile/gnirehtet/issues/69. Suggested-by: JGregoryAtiba https://github.com/Genymobile/gnirehtet/issues/69#issuecomment-405722179",Discard non-IPv4 packets,"Despite not allowing implicitly or explicitly IPv6, some devices forward IPv6 packets, not supported by the relay server, to the VpnService. link) To workaround the issue, do not forward these packets to the relay server. Fixes link. Suggested-by: JGregoryAtiba link"
61,Merge pull request #129 from jo215/master,Fix for potential crash under Android Oreo when sending STOP intent,Merge pull request #129 from jo215/master,Fix for potential crash under Android Oreo when sending STOP intent
62,Fix for potential crash under Android Oreo when sending STOP intent,,Fix for potential crash under Android Oreo when sending STOP intent,
63,Update release v2.2.1 links in README,,Update release v2.2.1 links in README,
64,Bump Rust version to 2.2.1,,Bump Rust version to 2.2.1,
65,Rename SHA256SUM.txt to SHA256SUMS.txt,It contains hashes for multiple files.,Rename SHA256SUM.txt to SHA256SUMS.txt,It contains hashes for multiple files.
66,Remove unused import warning,"Since commit c36fa4d1a1086aa03e56aabae12669f8b1a1a1c4, std::ptr is not used anymore.",Remove unused import warning,"Since commit c36fa4d1a1086aa03e56aabae12669f8b1a1a1c4, std::ptr is not used anymore."
67,Compare thin pointers to find the connection,"Connection is a trait, so ""*const Connection"" is a fat pointer (128 bits, 64 bits pointing to the instance, 64 bits pointing to the vtable). For some reason (a bug?), in Router::remove(), the connection passed as argument has a vtable different from the (same) connection stored in the ""connections"" field. This has the unexpected consequence that for some x and y: println!(""{:p} == {:p} ? {}"", x, y, ptr::eq(x, y));  prints: 0x7f87a8c3a618 == 0x7f87a8c3a618 ? false  Thus, the connection to remove was not found, leading to the panic ""Removing an unknown connection"". Instead, compare only the data part, by casting the fat pointers to thin pointers. See https://github.com/Genymobile/gnirehtet/issues/61#issuecomment-370933770 Thanks to mbrubeck on IRC freenode/##rust, who helped a lot to understand the issue.",Compare thin pointers to find the connection,"Connection is a trait, so ""*const Connection"" is a fat pointer (128 bits, 64 bits pointing to the instance, 64 bits pointing to the vtable). For some reason (a bug?), in Router::remove(), the connection passed as argument has a vtable different from the (same) connection stored in the ""connections"" field. This has the unexpected consequence that for some x and y: println!(""{:p} == {:p} ? {}"", x, y, ptr::eq(x, y)); prints: 0x7f87a8c3a618 == 0x7f87a8c3a618 ? false Thus, the connection to remove was not found, leading to the panic ""Removing an unknown connection"". Instead, compare only the data part, by casting the fat pointers to thin pointers. See link Thanks to mbrubeck on IRC freenode/##rust, who helped a lot to understand the issue."
68,Add debug logs for connection removal,Log when a connection is removed from the router.,Add debug logs for connection removal,Log when a connection is removed from the router.
69,"Revert ""Ignore double-removal of a connection""","This reverts commit 10d5e3214043e1c6bab5fd7e81c1933d8d144c45. This does not fix the root cause, so the panic still happens. https://github.com/Genymobile/gnirehtet/issues/61#issuecomment-370772336","Revert ""Ignore double-removal of a connection""","This reverts commit 10d5e3214043e1c6bab5fd7e81c1933d8d144c45. This does not fix the root cause, so the panic still happens. link"
70,Ignore double-removal of a connection,"In a single poll() result, the client may be ready to receive a packet from the device, that will be sent to a specific network connection, and in the same time that connection may be ready to send a packet to the client. There is a possibility that both events will lead to close the connection, and remove it from the router. In that case, the second removal did panic. Instead, remove it only if it does not exist. See:  - https://github.com/Genymobile/gnirehtet/issues/61  - https://github.com/Genymobile/gnirehtet/issues/85",Ignore double-removal of a connection,"In a single poll() result, the client may be ready to receive a packet from the device, that will be sent to a specific network connection, and in the same time that connection may be ready to send a packet to the client. There is a possibility that both events will lead to close the connection, and remove it from the router. In that case, the second removal did panic. Instead, remove it only if it does not exist. See:  - link  - link"
71,Use std::ptr::eq() to compare pointers,"When gnirehtet was written, std::ptr::eq() was not available in Rust stable (it has been added in Rust 1.17). Now, we can use it.",Use std::ptr::eq() to compare pointers,"When gnirehtet was written, std::ptr::eq() was not available in Rust stable (it has been added in Rust 1.17). Now, we can use it."
72,Update release v2.2 links in README,,Update release v2.2 links in README,
73,Update DEVELOP to use latest rust stable,"Do not document a specific version, use the latest stable.",Update DEVELOP to use latest rust stable,"Do not document a specific version, use the latest stable."
74,Upgrade gnirehtet version to 2.2,,Upgrade gnirehtet version to 2.2,
75,Update relay-rust dependencies,"Generated by ""cargo update"".",Update relay-rust dependencies,"Generated by ""cargo update""."
76,Ack only once data is written to network socket,"The TCP connection acked packets received from the device immediately after it stored them into its buffers, but before they were written to the network socket. This made the client wrongly assume that the connection was super-fast, so the upload bandwidth was totally uncorrelated to the network socket bandwidth. As a consequence, the client filled the buffers up to saturation, leading to packet drops, that slowed down uploads dramatically. To make the client adapt the bittrate according to the associated network socket, do not ack the data immediately, but only once it is actually written to the network socket. See issues:  - https://github.com/Genymobile/gnirehtet/issues/84  - https://github.com/Genymobile/gnirehtet/issues/79",Ack only once data is written to network socket,"The TCP connection acked packets received from the device immediately after it stored them into its buffers, but before they were written to the network socket. This made the client wrongly assume that the connection was super-fast, so the upload bandwidth was totally uncorrelated to the network socket bandwidth. As a consequence, the client filled the buffers up to saturation, leading to packet drops, that slowed down uploads dramatically. To make the client adapt the bittrate according to the associated network socket, do not ack the data immediately, but only once it is actually written to the network socket. See issues:  - link  - link"
77,Terminate TCP connections gracefully,"When the network socket is closed or when the device sends a FIN, gracefully terminate the connection by following the RFC793 instead of closing without notifying the device. This avoids to receive more unwanted packets from the device, leading to connections open and close on first packet. See schema: https://tools.ietf.org/html/rfc793#page-23",Terminate TCP connections gracefully,"When the network socket is closed or when the device sends a FIN, gracefully terminate the connection by following the RFC793 instead of closing without notifying the device. This avoids to receive more unwanted packets from the device, leading to connections open and close on first packet. See schema: link"
78,Start adb daemon on initial connection failure,"The adb monitor (used for ""autostart"" and ""autorun"" commands) already restarted the adb daemon on read/write error (typically, when the daemon is killed). Also restart it on connect error, typically when the daemon is not started when gnirehtet starts.",Start adb daemon on initial connection failure,"The adb monitor (used for ""autostart"" and ""autorun"" commands) already restarted the adb daemon on read/write error (typically, when the daemon is killed). Also restart it on connect error, typically when the daemon is not started when gnirehtet starts."
79,Fix comment typo,"Replace ""anotate"" by ""annotate"".",Fix comment typo,"Replace ""anotate"" by ""annotate""."
80,Add commands to automatically start clients,"Add two commands to start the gnirehtet client on device connection: - autostart:     track connected devices to start the client on every new     connected device. - autorun:      autostart (in background) + relay.  The device connections are detected through the service ""track-devices"" over a socket connected to the adb daemon: https://android.googlesource.com/platform/system/core/+/android-8.1.0_r9/adb/SERVICES.TXT#27 Thanks to autolainen for the solution: https://github.com/Genymobile/gnirehtet/issues/47#issuecomment-362301494",Add commands to automatically start clients,"Add two commands to start the gnirehtet client on device connection: - autostart:     track connected devices to start the client on every new     connected device. - autorun:      autostart (in background) + relay. The device connections are detected through the service ""track-devices"" over a socket connected to the adb daemon: link Thanks to autolainen for the solution: link"
81,Extract ByteBuffer from Ipv4PacketBuffer,Ipv4PacketBuffer handles a byte buffer specifically. Extract the part handling the byte buffer to a separate reusable class.,Extract ByteBuffer from Ipv4PacketBuffer,Ipv4PacketBuffer handles a byte buffer specifically. Extract the part handling the byte buffer to a separate reusable class.
82,Make module interrupt private,"The interrupt module is only used from relay, so it need not be public.",Make module interrupt private,"The interrupt module is only used from relay, so it need not be public."
83,Simplify run command in Rust,Simply return the Result from cmd_relay() instead of handling any error and panic!.,Simplify run command in Rust,Simply return the Result from cmd_relay() instead of handling any error and panic!.
84,Remove useless annotation,Remove a @SupressWarnings annotation on a method that did not generate a warning.,Remove useless annotation,Remove a @SupressWarnings annotation on a method that did not generate a warning.
85,Add option to reverse tether specific routes,"By default, gnirehtet redirects the whole traffic to the relay server. Make it possible to redirect only specific routes, selected by CIDR: ./gnirehtet start -r 192.168.0.0/24  Like the DNS servers options, several routes may be specified, separated by ',': ./gnirehtet start -r 8.8.8.8,192.168.0.0/24",Add option to reverse tether specific routes,"By default, gnirehtet redirects the whole traffic to the relay server. Make it possible to redirect only specific routes, selected by CIDR: ./gnirehtet start -r 192.168.0.0/24 Like the DNS servers options, several routes may be specified, separated by ',': ./gnirehtet start -r 8.8.8.8,192.168.0.0/24"
86,Fix release script with new gradle version,The new gradle plugin now generates the APK in a release/ directory.,Fix release script with new gradle version,The new gradle plugin now generates the APK in a release/ directory.
87,Upgrade build.gradle,"Target SDK version 27 and rename deprecated ""compile"" configuration to ""implementation"".",Upgrade build.gradle,"Target SDK version 27 and rename deprecated ""compile"" configuration to ""implementation""."
88,Update relay-rust dependencies,"Generated by ""cargo update"" after Cargo.toml has been updated, an adapt usage for log 0.4.",Update relay-rust dependencies,"Generated by ""cargo update"" after Cargo.toml has been updated, an adapt usage for log 0.4."
89,Upgrade gradle and gradle plugin,Use gradle 4.1 and Android studio gradle plug-in 3.0.1.,Upgrade gradle and gradle plugin,Use gradle 4.1 and Android studio gradle plug-in 3.0.1.
90,Install client on start if necessary,"On ""gnirehtet run"", the gnirehtet client was checked and installed (or updated) if necessary. Move this check to ""gnirehtet start"", to guarantee that the client is always up to date.",Install client on start if necessary,"On ""gnirehtet run"", the gnirehtet client was checked and installed (or updated) if necessary. Move this check to ""gnirehtet start"", to guarantee that the client is always up to date."
91,Refactor command-line parsing,"Move command implementations to separate functions taking their exact parameter list. This is still a manual argument parsing, but convenient crates (like clap or structopt) make the resulting gnirehtet binary far bigger, and increase compilation time significantly.",Refactor command-line parsing,"Move command implementations to separate functions taking their exact parameter list. This is still a manual argument parsing, but convenient crates (like clap or structopt) make the resulting gnirehtet binary far bigger, and increase compilation time significantly."
92,Log error messages to stderr,"When the log level is Error, print on stderr instead of stdout. See https://github.com/Genymobile/gnirehtet/issues/62.",Log error messages to stderr,"When the log level is Error, print on stderr instead of stdout. See link."
93,Do not leak EventHandler if Poll::register() fails,"We first insert the EventHandler to the Slab to get a Token, then use the token to register the handle on the Poll. If the registration fails, we must remove the EventHandler from the Slab.",Do not leak EventHandler if Poll::register() fails,"We first insert the EventHandler to the Slab to get a Token, then use the token to register the handle on the Poll. If the registration fails, we must remove the EventHandler from the Slab."
94,Close TCP connection on client close,"When the TCP connection received a FIN, it stayed in CLOSE WAIT state without actually moving to LASK-ACK (cf diagram in RFC793: https://tools.ietf.org/html/rfc793#section-3.2). Since TCP connection is the TCP peer (from the Android client point of view), there is no need to wait for the network socket to be actually closed, so just flag ""remote closed"" immediately, and bypass the TCP CLOSE WAIT state. Fixes https://github.com/Genymobile/gnirehtet/issues/57.",Close TCP connection on client close,"When the TCP connection received a FIN, it stayed in CLOSE WAIT state without actually moving to LASK-ACK (cf diagram in RFC793: link). Since TCP connection is the TCP peer (from the Android client point of view), there is no need to wait for the network socket to be actually closed, so just flag ""remote closed"" immediately, and bypass the TCP CLOSE WAIT state. Fixes link."
95,Update mio to 0.6.11,"Rust mio 0.6.11, the first release including the patch to support ""empty interest"", is available. Therefore, remove the temporary '[replace]' section in Cargo.toml, and use the last 0.6.x version. Also update other dependencies (generated by ""cargo update""). https://github.com/carllerche/mio/pull/640",Update mio to 0.6.11,"Rust mio 0.6.11, the first release including the patch to support ""empty interest"", is available. Therefore, remove the temporary '[replace]' section in Cargo.toml, and use the last 0.6.x version. Also update other dependencies (generated by ""cargo update""). link"
96,Add tunnel command,"Expose a ""tunnel"" command (automatically called by ""start"") to only setup the ""adb reverse"" tunnel.",Add tunnel command,"Expose a ""tunnel"" command (automatically called by ""start"") to only setup the ""adb reverse"" tunnel."
97,Rename to must_install_client,"For consistency with the other method names, rename mustInstallApk and must_install_gnirehtet to mustInstallClient and must_install_client.",Rename to must_install_client,"For consistency with the other method names, rename mustInstallApk and must_install_gnirehtet to mustInstallClient and must_install_client."
98,Use localabstract socket for tunnel client-side,There is no need for a TCP connection between the Android application and the Android-side of the tunnel. A local socket is sufficient.,Use localabstract socket for tunnel client-side,There is no need for a TCP connection between the Android application and the Android-side of the tunnel. A local socket is sufficient.
99,Update README for broadcast,The commit 4e1490fe3070134e2200e0e8f936f718a9794959 replaced the service by a broadcast receiver. Update the README accordingly.,Update README for broadcast,The commit 4e1490fe3070134e2200e0e8f936f718a9794959 replaced the service by a broadcast receiver. Update the README accordingly.
100,Update release v2.1 links in README,,Update release v2.1 links in README,
101,Upgrade gnirehtet version to 2.1,,Upgrade gnirehtet version to 2.1,
102,Make GnirehtetService foreground,"To make Gnirehtet work with Android O, make GnirehtetService foreground, with a permanent notification. When the client fails to connect to the relay server, this permanent notification is used to report the problem.",Make GnirehtetService foreground,"To make Gnirehtet work with Android O, make GnirehtetService foreground, with a permanent notification. When the client fails to connect to the relay server, this permanent notification is used to report the problem."
103,Use a broadcast receiver to receive requests,"The start/stop requests were sent by ""am startservice"" and received by GnirehtetControlService. This behavior is incompatible with Android O, which forbids to run the service in the background: See:   https://developer.android.com/about/versions/oreo/background.html https://github.com/Genymobile/gnirehtet/issues/44 Therefore, replace GnirehtetControlService by GnirehtetControlReceiver, so that Gnirehtet is controlled by broadcast intents. Suggested-by: Pascal Cans pcans@genymobile.com",Use a broadcast receiver to receive requests,"The start/stop requests were sent by ""am startservice"" and received by GnirehtetControlService. This behavior is incompatible with Android O, which forbids to run the service in the background: See:   link link Therefore, replace GnirehtetControlService by GnirehtetControlReceiver, so that Gnirehtet is controlled by broadcast intents. Suggested-by: Pascal Cans pcans@genymobile.com"
104,Ignore checkstyle magic number warning,"Yes, in 127.0.0.1, 127 is a magic number. So be it.",Ignore checkstyle magic number warning,"Yes, in 127.0.0.1, 127 is a magic number. So be it."
105,Fix u16 overflow in IPv4PacketBuffer,"When the buffer is full, self.head equals 0x10000, so converting its value to u16 results in 0. As a consequence, length <= self.head was mistakenly considered false, so the packet was never consumed. As a consequence, the next call to read_from() requested a read with a buffer of 0 bytes, so 0 bytes were read… which was interpreted as EOF, causing client disconnection. See https://github.com/Genymobile/gnirehtet/issues/43.",Fix u16 overflow in IPv4PacketBuffer,"When the buffer is full, self.head equals 0x10000, so converting its value to u16 results in 0. As a consequence, length <= self.head was mistakenly considered false, so the packet was never consumed. As a consequence, the next call to read_from() requested a read with a buffer of 0 bytes, so 0 bytes were read… which was interpreted as EOF, causing client disconnection. See link."
106,Force IPv4 for tunnel connection,"Port forwarding created by ""adb reverse"" only supports IPv4. Therefore, use 127.0.0.1 instead of the value returned by InetAddress.getLocalhost(), which is ::1 on some devices. See https://github.com/Genymobile/gnirehtet/issues/42.",Force IPv4 for tunnel connection,"Port forwarding created by ""adb reverse"" only supports IPv4. Therefore, use 127.0.0.1 instead of the value returned by InetAddress.getLocalhost(), which is ::1 on some devices. See link."
107,"Indicate ""JRE"" for required Java version","For running the Java version of Gnirehtet, indicate that the JRE is required, not the full JDK.","Indicate ""JRE"" for required Java version","For running the Java version of Gnirehtet, indicate that the JRE is required, not the full JDK."
108,Add missing license headers,Some recent files did not include the Apache license header. Include it.,Add missing license headers,Some recent files did not include the Apache license header. Include it.
109,Update links to our articles,Add links to the articles about the Rust version.,Update links to our articles,Add links to the articles about the Rust version.
110,Update release v2.0 links in README,,Update release v2.0 links in README,
111,Update relay-rust dependencies,"Generated by ""cargo update"".",Update relay-rust dependencies,"Generated by ""cargo update""."
112,Upgrade gnirehtet version to 2.0,,Upgrade gnirehtet version to 2.0,
113,Move releaseRustWindows out of releaseAll,"For consistency, do not execute the gradle task ""releaseRustWindows"" on ""releaseAll"". Instead, explicitly invoke ""releaseRustWindow"" in the ./release script.",Move releaseRustWindows out of releaseAll,"For consistency, do not execute the gradle task ""releaseRustWindows"" on ""releaseAll"". Instead, explicitly invoke ""releaseRustWindow"" in the ./release script."
114,Check gnirehtet client version,"We checked whether the package ""com.genymobile.gnirehtet"" was present on the device. If absent, ""gnirehtet run"" installed it. However, we must also install the new APK if the installed version does not match. Therefore, parse the output of ""dumpsys package com.genymobile.gnirehtet"" to retrieve the versionCode.",Check gnirehtet client version,"We checked whether the package ""com.genymobile.gnirehtet"" was present on the device. If absent, ""gnirehtet run"" installed it. However, we must also install the new APK if the installed version does not match. Therefore, parse the output of ""dumpsys package com.genymobile.gnirehtet"" to retrieve the versionCode."
115,Use mio from upstream,Use the upstream version of mio since this PR has been merged: https://github.com/carllerche/mio/pull/640,Use mio from upstream,Use the upstream version of mio since this PR has been merged: link
116,Reformulate the adb section in README,"The adb binary is available in the platform-tools for all the operating systems (not only Windows), so reformulate to clarify how to install adb.",Reformulate the adb section in README,"The adb binary is available in the platform-tools for all the operating systems (not only Windows), so reformulate to clarify how to install adb."
117,Explain better how to install adb on Windows,"For Windows users, give more details to install adb easily.",Explain better how to install adb on Windows,"For Windows users, give more details to install adb easily."
118,Simplify usage for Windows,"Provide an additional script ""gnirehtet-run"" that executes ""gnirehtet run"" without having to open a terminal manually.",Simplify usage for Windows,"Provide an additional script ""gnirehtet-run"" that executes ""gnirehtet run"" without having to open a terminal manually."
119,"Rename ""gnirehtet"" to ""client"" where relevant","For consistency and clarity, rename ""gnirehtet"" to ""client"" when it refers to the gnirehtet application running on an Android device.","Rename ""gnirehtet"" to ""client"" where relevant","For consistency and clarity, rename ""gnirehtet"" to ""client"" when it refers to the gnirehtet application running on an Android device."
120,Improve relay server starting logs,"Log both the ""starting"" and ""started"" states for the relay server, consistently between Java and Rust.",Improve relay server starting logs,"Log both the ""starting"" and ""started"" states for the relay server, consistently between Java and Rust."
121,Log adb commands as debug,The normal user don't care about these commands.,Log adb commands as debug,The normal user don't care about these commands.
122,Fix is_gnirehtet_installed() error handling,"To detect whether gnirehtet is installed, we check whether the output of ""adb shell pm list packages com.genymobile.gnirehtet"" is empty. However, we must also check its error code, to report the error if the adb command fails.",Fix is_gnirehtet_installed() error handling,"To detect whether gnirehtet is installed, we check whether the output of ""adb shell pm list packages com.genymobile.gnirehtet"" is empty. However, we must also check its error code, to report the error if the adb command fails."
123,Improve error handling,"In CommandExecutionError, ""command"" was ambiguous, it referred both to:  - a gnirehtet command (start, stop, run, relay…),  - a process command (the execution of ""adb something""). CommandExecutionError was either an Io error or a Status error. When it is a process Io error, we want to report the failing command. Therefore, refactor the CommandExecution enum with 3 values:  - ProcessIo,      // io::Error due to process command execution  - ProcessStatus,  // a process command returned with non-zero value  - Io              // any other io::Error Thus, ProcessIo can provide the failing command, to be reported to the user. Also, move all the execution error classes to a separate module.",Improve error handling,"In CommandExecutionError, ""command"" was ambiguous, it referred both to:  - a gnirehtet command (start, stop, run, relay…),  - a process command (the execution of ""adb something""). CommandExecutionError was either an Io error or a Status error. When it is a process Io error, we want to report the failing command. Therefore, refactor the CommandExecution enum with 3 values:  - ProcessIo,      // io::Error due to process command execution  - ProcessStatus,  // a process command returned with non-zero value  - Io              // any other io::Error Thus, ProcessIo can provide the failing command, to be reported to the user. Also, move all the execution error classes to a separate module."
124,Add info log for is_gnirehtet_installed(),Log the adb command-line executed to check whether gnirehtet is installed on the device.,Add info log for is_gnirehtet_installed(),Log the adb command-line executed to check whether gnirehtet is installed on the device.
125,Fix tests,The method transport_header_data() return has been changed from &Option<…> to Option<&…>. Fix the tests accordingly.,Fix tests,The method transport_header_data() return has been changed from &Option<…> to Option<&…>. Fix the tests accordingly.
126,"Format code with ""cargo fmt""",,"Format code with ""cargo fmt""",
127,Update Rust 1.19 to 1.20 in documentation,Update requirements to reference the last Rust environment version.,Update Rust 1.19 to 1.20 in documentation,Update requirements to reference the last Rust environment version.
128,Use headers data directly when possible,"To route a packet to an existing connection, the Router only needs the headers data, not the whole headers (which include a reference to the raw array accessible through a ""borrowing view""). The whole headers are necessary only when it creates a new connection. Therefore, make Router use references to headers data directly until it has to create a new Connection.",Use headers data directly when possible,"To route a packet to an existing connection, the Router only needs the headers data, not the whole headers (which include a reference to the raw array accessible through a ""borrowing view""). The whole headers are necessary only when it creates a new connection. Therefore, make Router use references to headers data directly until it has to create a new Connection."
129,Upgrade Android tools,Upgrade Android tools to 2.3.3 and target API 26.,Upgrade Android tools,Upgrade Android tools to 2.3.3 and target API 26.
130,Update documentation for the Rust version,Update README and DEVELOP to document the Rust relay server.,Update documentation for the Rust version,Update README and DEVELOP to document the Rust relay server.
131,Log with explicit TAG in Main,Use a target TAG for logs in Main.,Log with explicit TAG in Main,Use a target TAG for logs in Main.
132,Simplify Ctrl+C termination,"The interruption handler attempted to make the relay() call complete, so that gnirehtet exited normally. This added a lot of complexity, and was not free of race conditions: in the ctrlc crate implementation, the user handler is not called from the OS handler, so setting a flag in the user handler was inherently racy. Instead, just call exit() from the interrupt handler. This is far more simple and works perfectly.",Simplify Ctrl+C termination,"The interruption handler attempted to make the relay() call complete, so that gnirehtet exited normally. This added a lot of complexity, and was not free of race conditions: in the ctrlc crate implementation, the user handler is not called from the OS handler, so setting a flag in the user handler was inherently racy. Instead, just call exit() from the interrupt handler. This is far more simple and works perfectly."
133,Exit with non-zero status on error,"Exit gnirehtet with:  - 1 on unknown command,  - 2 on bad arguments,  - 3 on execution error.",Exit with non-zero status on error,"Exit gnirehtet with:  - 1 on unknown command,  - 2 on bad arguments,  - 3 on execution error."
134,Expand mio import,Use specific types instead of mio::*.,Expand mio import,Use specific types instead of mio::*.
135,Fix warning message,"The weak variable refers to the TunnelServer instance, not the client.",Fix warning message,"The weak variable refers to the TunnelServer instance, not the client."
136,Simplify EventHandler storage,"Remove mutability on EventHandler::on_ready(), so that the Selector need not to manage its own interior mutability. This removes two unnecessary layers in Selector at runtime (RefCell and Box). In return, each EventHandler implementation need to mutably borrow their ""owner"" to dispatch a mutable on_ready().",Simplify EventHandler storage,"Remove mutability on EventHandler::on_ready(), so that the Selector need not to manage its own interior mutability. This removes two unnecessary layers in Selector at runtime (RefCell and Box). In return, each EventHandler implementation need to mutably borrow their ""owner"" to dispatch a mutable on_ready()."
137,Upgrade dependencies minor version,And update gnirehtet for slab API changes.,Upgrade dependencies minor version,And update gnirehtet for slab API changes.
138,Add Rust checkstyle gradle task,"Use ""cargo fmt"" to detect checkstyle errors.",Add Rust checkstyle gradle task,"Use ""cargo fmt"" to detect checkstyle errors."
139,Fix TCP checksum computation,"The last optimization broke TCP checksums, in a way that was not captured by unit tests. In an unsafe block, we computed an offset of (payload_length - 1). However, payload_length is u16 (unsigned), so the result was wrong when payload_length is 0. Fix the offset, and add a unit test for checksuming empty payloads.",Fix TCP checksum computation,"The last optimization broke TCP checksums, in a way that was not captured by unit tests. In an unsafe block, we computed an offset of (payload_length - 1). However, payload_length is u16 (unsigned), so the result was wrong when payload_length is 0. Fix the offset, and add a unit test for checksuming empty payloads."
140,Optimize Rust TCP checksum by using raw pointers,"Use raw pointers to iterate over the raw array directly, instead of using indices and calling get_unchecked(). This reduces the checksum computation time by ~4% (the bench takes ~770ms instead of ~800ms on my computer).",Optimize Rust TCP checksum by using raw pointers,"Use raw pointers to iterate over the raw array directly, instead of using indices and calling get_unchecked(). This reduces the checksum computation time by ~4% (the bench takes ~770ms instead of ~800ms on my computer)."
141,Optimize Rust TCP checksum by avoiding conversions,"Iterate using usize indices, instead of converting the index to usize for each iteration. This reduces the checksum computation time by ~20% (the bench takes ~800ms instead of ~1000ms on my computer).",Optimize Rust TCP checksum by avoiding conversions,"Iterate using usize indices, instead of converting the index to usize for each iteration. This reduces the checksum computation time by ~20% (the bench takes ~800ms instead of ~1000ms on my computer)."
142,Fix TCP checksum header_length,"The IP header_length was used instead of the TCP header_length in the Rust version. This had no consequences since in practice they are the same in gnirehtet (20 bytes), but this was still a bug.",Fix TCP checksum header_length,"The IP header_length was used instead of the TCP header_length in the Rust version. This had no consequences since in practice they are the same in gnirehtet (20 bytes), but this was still a bug."
143,Remove duplicate log in Java,"The message ""Starting relay server..."" was logged twice (once before calling relay() and once in relay()).",Remove duplicate log in Java,"The message ""Starting relay server..."" was logged twice (once before calling relay() and once in relay())."
144,"Give help if the user executes ""gnirehtet rt""","The ""rt"" command has been renamed to ""run"". To ease the transition, indicate that the command has been renamed.","Give help if the user executes ""gnirehtet rt""","The ""rt"" command has been renamed to ""run"". To ease the transition, indicate that the command has been renamed."
145,Remove empty line (code style),Remove a duplicate empty line in IPv4Packet.java.,Remove empty line (code style),Remove a duplicate empty line in IPv4Packet.java.
146,Fix documentation about selector awakening,"Since commit 75fa09ba94012b5251b11799e8c5227223cca803, SelectorAlarm has been replaced by a timeout.",Fix documentation about selector awakening,"Since commit 75fa09ba94012b5251b11799e8c5227223cca803, SelectorAlarm has been replaced by a timeout."
147,"Add rust gradle ""build"" task","For consistency with the Android and Java projects, add a ""build"" tasks that run checks and build both debug and release versions.","Add rust gradle ""build"" task","For consistency with the Android and Java projects, add a ""build"" tasks that run checks and build both debug and release versions."
148,"Rename ""relay"" folders","Move ""relay"" to ""relay-java"" and ""rustrelay"" to ""relay-rust"".","Rename ""relay"" folders","Move ""relay"" to ""relay-java"" and ""rustrelay"" to ""relay-rust""."
149,"Rename command ""rt"" to ""run""","Rename ""gnirehtet rt"" to ""gnirehtet run"", more meaningful.","Rename command ""rt"" to ""run""","Rename ""gnirehtet rt"" to ""gnirehtet run"", more meaningful."
150,Reduce CPU usage by tweaking MTU value,"The IP packets built by gnirehtet were at most 1440 bytes. When possible, use bigger packets to avoid overhead and reduce CPU usage. Typically, when downloading a big file from the host (accessible via 10.0.2.2), adb (used for ""adb reverse"") and gnirehtet consumed a lot of CPU. With bigger packets, they consume a bit less. Therefore, we want to send bigger packets to the VpnService interface having an accordingly higher MTU value. It is tempting to configure the highest possible packet length (0xFFFF, or 65535 bytes). However, use a MTU value of 0x4000 instead: with higher values like 0x8000 or 0xFFFF, or with lower values like 1500, the performances decrease dramatically (for unknown reasons). Here are some (very) approximate measurements (with ""top"") of the host CPU usage while downloading a file hosted on Apache on my laptop, from Firefox on a Nexus 5 having AOSP 6.0.1 (opening the URL http://10.0.2.2/test):                                     gnirehtet                              adb   java   rust  before checksum improvements   ~56%   ~17%   ~11%            before this commit   ~56%   ~13%   ~ 7%             after this commit   ~36%   ~ 5%   ~ 2%               with ""adb push""   ~41% (but transfers at a higher rate)                              (lower is better)",Reduce CPU usage by tweaking MTU value,"The IP packets built by gnirehtet were at most 1440 bytes. When possible, use bigger packets to avoid overhead and reduce CPU usage. Typically, when downloading a big file from the host (accessible via 10.0.2.2), adb (used for ""adb reverse"") and gnirehtet consumed a lot of CPU. With bigger packets, they consume a bit less. Therefore, we want to send bigger packets to the VpnService interface having an accordingly higher MTU value. It is tempting to configure the highest possible packet length (0xFFFF, or 65535 bytes). However, use a MTU value of 0x4000 instead: with higher values like 0x8000 or 0xFFFF, or with lower values like 1500, the performances decrease dramatically (for unknown reasons). Here are some (very) approximate measurements (with ""top"") of the host CPU usage while downloading a file hosted on Apache on my laptop, from Firefox on a Nexus 5 having AOSP 6.0.1 (opening the URL link):                                     gnirehtet                              adb   java   rust before checksum improvements   ~56%   ~17%   ~11%            before this commit   ~56%   ~13%   ~ 7%             after this commit   ~36%   ~ 5%   ~ 2%               with ""adb push""   ~41% (but transfers at a higher rate)                              (lower is better)"
151,Optimize Java IP checksum,"Contrary to the current Rust implementation, the IP checksum in Java has room for optimization. Like for the TCP checksum, access the raw byte[] array without using a ByteBuffer, and compute 16-bit values from two 8-bit values manually. The new implementation runs ~1.5× faster (i.e. it takes 64% of the time required by the old implementation).",Optimize Java IP checksum,"Contrary to the current Rust implementation, the IP checksum in Java has room for optimization. Like for the TCP checksum, access the raw byte[] array without using a ByteBuffer, and compute 16-bit values from two 8-bit values manually. The new implementation runs ~1.5× faster (i.e. it takes 64% of the time required by the old implementation)."
152,Add benchmark for Java IP checksum,Add a benchmark for IP checksum computation in Java. Implement it alone in a separate commit so that it is easier to compare results before and after optimizations.,Add benchmark for Java IP checksum,Add a benchmark for IP checksum computation in Java. Implement it alone in a separate commit so that it is easier to compare results before and after optimizations.
153,Optimize Java TCP checksum,"Like in the Rust implementation, we need to optimize checksums computation. The main source of optimization resides in accessing the raw byte[] without using a ByteBuffer, computing 16-bit values from two 8-bit values manually. Contrary to what we measured in Rust, summing high-order and low-order bytes separately to do the shift operation only once has no performance impact. Therefore, do not implement it that way. The new implementation runs ~2.5× faster (i.e. it takes 39% of the time required by the old implementation). However, the Rust implementation runs ~2,7× faster than the Java one.",Optimize Java TCP checksum,"Like in the Rust implementation, we need to optimize checksums computation. The main source of optimization resides in accessing the raw byte[] without using a ByteBuffer, computing 16-bit values from two 8-bit values manually. Contrary to what we measured in Rust, summing high-order and low-order bytes separately to do the shift operation only once has no performance impact. Therefore, do not implement it that way. The new implementation runs ~2.5× faster (i.e. it takes 39% of the time required by the old implementation). However, the Rust implementation runs ~2,7× faster than the Java one."
154,Add benchmark for Java TCP checksum,Add a benchmark for TCP checksum computation in Java. Implement it alone in a separate commit so that it is easier to compare results before and after optimizations.,Add benchmark for Java TCP checksum,Add a benchmark for TCP checksum computation in Java. Implement it alone in a separate commit so that it is easier to compare results before and after optimizations.
155,Optimize more Rust TCP checksum with unsafe,"For summing array items, use unchecked accesses to the array, in order to avoid bounds checking for every value. This runs ~4.1× faster than with bounds checking (i.e. it takes ~24% of the time necessary when bounds checking is enabled). Overall (including the previous optimizations), the resulting implementation is ~18× faster (it runs in 5.5% of the time required by the old implementation). Since this is the most CPU-intensive task, gnirehtet uses significantly less CPU than before.",Optimize more Rust TCP checksum with unsafe,"For summing array items, use unchecked accesses to the array, in order to avoid bounds checking for every value. This runs ~4.1× faster than with bounds checking (i.e. it takes ~24% of the time necessary when bounds checking is enabled). Overall (including the previous optimizations), the resulting implementation is ~18× faster (it runs in 5.5% of the time required by the old implementation). Since this is the most CPU-intensive task, gnirehtet uses significantly less CPU than before."
156,Optimize Rust TCP checksum,"Checksums computation is the most CPU-intensive task in gnirehtet, so it needs to be optimized. Firstly, do not use a Cursor (a non-zero-cost abstraction). Secondly, for summing 16-bit values, sum high-order and low-order bytes separately. This allow to do the shift operation only once (instead of once per value). The new implementations runs ~4.4× faster (i.e. it takes ~23% of the time required by the old implementation).",Optimize Rust TCP checksum,"Checksums computation is the most CPU-intensive task in gnirehtet, so it needs to be optimized. Firstly, do not use a Cursor (a non-zero-cost abstraction). Secondly, for summing 16-bit values, sum high-order and low-order bytes separately. This allow to do the shift operation only once (instead of once per value). The new implementations runs ~4.4× faster (i.e. it takes ~23% of the time required by the old implementation)."
157,Add benchmark for Rust TCP checksum,Add a benchmark for TCP checksum computation in Rust. Implement it alone in a separate commit so that it is easier to compare results before and after optimizations.,Add benchmark for Rust TCP checksum,Add a benchmark for TCP checksum computation in Rust. Implement it alone in a separate commit so that it is easier to compare results before and after optimizations.
158,Improve TCP checksum tests,"Put a short value having its sign bit set in the payload, so that a signedness mistake in the checksum computation will be catched.",Improve TCP checksum tests,"Put a short value having its sign bit set in the payload, so that a signedness mistake in the checksum computation will be catched."
159,Reference our mio fork by a tag,"Using our own fork of mio, we referenced the version using the branch name ""empty_interest"". However, this branch is susceptible to be rebased, breaking our history. Instead, use a tag that will never be moved.",Reference our mio fork by a tag,"Using our own fork of mio, we referenced the version using the branch name ""empty_interest"". However, this branch is susceptible to be rebased, breaking our history. Instead, use a tag that will never be moved."
160,Remove useless mut in tests,The variable containing the mutable slice to the raw packet does not need to be mutable itself.,Remove useless mut in tests,The variable containing the mutable slice to the raw packet does not need to be mutable itself.
161,Retry on Interrupted error,"A blocking call may return an Err having ""Interrupted"" as kind(), typically when the user press Ctrl+C in ""gnirehtet rt"". The error was thrown and the relay server was interrupted. However, an ""Interrupted"" error may occur in other cases. Concretely, using a cpuprofiler causes poll() to generate such errors sometimes. Therefore, retry on ""Interrupted"" when no interruption was requested by the user.",Retry on Interrupted error,"A blocking call may return an Err having ""Interrupted"" as kind(), typically when the user press Ctrl+C in ""gnirehtet rt"". The error was thrown and the relay server was interrupted. However, an ""Interrupted"" error may occur in other cases. Concretely, using a cpuprofiler causes poll() to generate such errors sometimes. Therefore, retry on ""Interrupted"" when no interruption was requested by the user."
162,Fix cleanup poll timeout,"In order to regularly clean up UDP connections, we wake up a blocking poll with a timeout. When the timeout is not positive, poll with a timeout of 0 (Some(0)), not without any timeout (None).",Fix cleanup poll timeout,"In order to regularly clean up UDP connections, we wake up a blocking poll with a timeout. When the timeout is not positive, poll with a timeout of 0 (Some(0)), not without any timeout (None)."
163,Log errors using logger,Replace writes to stderr by error logs.,Log errors using logger,Replace writes to stderr by error logs.
164,Log adb commands in Rust,Log the adb commands executed by the Rust version the same way as the Java version.,Log adb commands in Rust,Log the adb commands executed by the Rust version the same way as the Java version.
165,Add restart command,"The same way there is a ""reinstall"" command that uninstalls then installs, create a ""restart"" command that stops and starts.",Add restart command,"The same way there is a ""reinstall"" command that uninstalls then installs, create a ""restart"" command that stops and starts."
166,Precompute ConnectionId string,"ConnectionId is immutable, but its string representation was recomputed for every log. Instead, compute the string once on construction.",Precompute ConnectionId string,"ConnectionId is immutable, but its string representation was recomputed for every log. Instead, compute the string once on construction."
167,Add license header to rust files,Prepend the license to .rs files.,Add license header to rust files,Prepend the license to .rs files.
168,Update rustrelay dependencies,"Generated by ""cargo update"".",Update rustrelay dependencies,"Generated by ""cargo update""."
169,Do not reregister interests when not necessary,"As an optimization, do not call the underlying async I/O API (Java NIO and mio) when the interests have not changed. This also prevents mio to trigger problematic spurious events on Windows. See https://github.com/carllerche/mio/issues/648.",Do not reregister interests when not necessary,"As an optimization, do not call the underlying async I/O API (Java NIO and mio) when the interests have not changed. This also prevents mio to trigger problematic spurious events on Windows. See link."
170,Log Error/Hup as debug,The Error or Hup events are expected when registered with no interests. Logging them as debug is sufficient.,Log Error/Hup as debug,The Error or Hup events are expected when registered with no interests. Logging them as debug is sufficient.
171,"Format code with ""cargo fmt""",,"Format code with ""cargo fmt""",
172,Rename interestingOps to interestOps,"For consistency with the Java NIO API, rename the variable containing the interests.",Rename interestingOps to interestOps,"For consistency with the Java NIO API, rename the variable containing the interests."
173,Defer interests setting for TCP,"The SocketChannel/TcpStream was registered with some interests, but they were never used, because they are updated on first packet received. Therefore, make this behavior explicit by setting empty interests.",Defer interests setting for TCP,"The SocketChannel/TcpStream was registered with some interests, but they were never used, because they are updated on first packet received. Therefore, make this behavior explicit by setting empty interests."
174,Log UDP interests,Log the UDP interests in the same way as for TCP.,Log UDP interests,Log the UDP interests in the same way as for TCP.
175,Improve TCP readable detection,"The remaining client window is invalid until the connection is established. Therefore, make may_read() return false directly in that case, without relying on remaining_client_window().",Improve TCP readable detection,"The remaining client window is invalid until the connection is established. Therefore, make may_read() return false directly in that case, without relying on remaining_client_window()."
176,"Remove ""get_"" from method name","For consistency, do not prefix method names by ""get_"".","Remove ""get_"" from method name","For consistency, do not prefix method names by ""get_""."
177,Accept empty interest in mio,"Currently, the mio library does not accept registering a handle with empty interest. As a workaround, we provided a wrapper that exposed an API that did, calling deregister/reregister internally as necessary. However, this workaround does not work on Windows, because deregister/reregister is not implemented: https://github.com/carllerche/mio/issues/633 Therefore, make mio accept empty interest directly: https://github.com/carllerche/mio/pull/640 This is implemented in our own fork, unless this change is accepted upstream or we manage to find a solution that works with the upstream version.",Accept empty interest in mio,"Currently, the mio library does not accept registering a handle with empty interest. As a workaround, we provided a wrapper that exposed an API that did, calling deregister/reregister internally as necessary. However, this workaround does not work on Windows, because deregister/reregister is not implemented: link Therefore, make mio accept empty interest directly: link This is implemented in our own fork, unless this change is accepted upstream or we manage to find a solution that works with the upstream version."
178,Update rustrelay dependencies,"Generated by ""cargo update"".",Update rustrelay dependencies,"Generated by ""cargo update""."
179,Generate both java and rust versions on release,"Upgrade ""release"" script to generate both the java and the rust version of gnirehtet.",Generate both java and rust versions on release,"Upgrade ""release"" script to generate both the java and the rust version of gnirehtet."
180,Wait handler completion with a condition variable,Wait the completion of the handler execution properly with a condition variable instead of an arbitrary sleep of 1 second.,Wait handler completion with a condition variable,Wait the completion of the handler execution properly with a condition variable instead of an arbitrary sleep of 1 second.
181,Move poll interruption handling to Main,"On Ctrl+C, poll() will return an error with ErrorKind::Interrupted. Instead of handling it locally, throw it up until main, which catch the error. In case of interruption, wait a bit before exiting, so that the handler execution is complete. This avoids to print logs to the terminal after the prompt is available.",Move poll interruption handling to Main,"On Ctrl+C, poll() will return an error with ErrorKind::Interrupted. Instead of handling it locally, throw it up until main, which catch the error. In case of interruption, wait a bit before exiting, so that the handler execution is complete. This avoids to print logs to the terminal after the prompt is available."
182,Rename Relay start() to run(),"The name ""start"" suggested it is started asynchronously (like in the Java thread API), but relay is running synchronously.",Rename Relay start() to run(),"The name ""start"" suggested it is started asynchronously (like in the Java thread API), but relay is running synchronously."
183,Merge branch 'rust' into dev,,Merge branch 'rust' into dev,
184,Add connection opening logs,Log new connections as info.,Add connection opening logs,Log new connections as info.
185,Use Self for associated functions,"For consistency, use Self for calling associated functions in the same class.",Use Self for associated functions,"For consistency, use Self for calling associated functions in the same class."
186,Handle gnirehtet commandline in rustrelay,"Expose gnirehtet commands directly in the rustrelay executable, so that there is no need for a wrapping shell script. Consequently, rename rustrelay to gnirehtet (to generate a binary named ""gnirehtet"" or ""gnirehtet.exe"").",Handle gnirehtet commandline in rustrelay,"Expose gnirehtet commands directly in the rustrelay executable, so that there is no need for a wrapping shell script. Consequently, rename rustrelay to gnirehtet (to generate a binary named ""gnirehtet"" or ""gnirehtet.exe"")."
187,Format code,"Format code with ""cargo fmt"".",Format code,"Format code with ""cargo fmt""."
188,Improve gradle debug/release/check tasks,"The 'release' gradle task should not depend on 'test' or 'check'. Instead, request explicitly to execute 'check' in the ./release script. Rename rust task 'build' to 'debug' for consistency, and expose 'check' tasks to the root project.",Improve gradle debug/release/check tasks,"The 'release' gradle task should not depend on 'test' or 'check'. Instead, request explicitly to execute 'check' in the ./release script. Rename rust task 'build' to 'debug' for consistency, and expose 'check' tasks to the root project."
189,Add task to cross-compile rustrelay for Windows,Use cargo to generate rustrelay.exe for Windows from Linux.,Add task to cross-compile rustrelay for Windows,Use cargo to generate rustrelay.exe for Windows from Linux.
190,Build rustrelay through gradle,"Expose gradle tasks that just delegates to ""cargo"", so rustrelay may be built along with the other parts of gnirehtet.",Build rustrelay through gradle,"Expose gradle tasks that just delegates to ""cargo"", so rustrelay may be built along with the other parts of gnirehtet."
191,Log spurious events as debug,"Spurious events are frequent on Windows. This is the expected behavior, so there is no need to warn.",Log spurious events as debug,"Spurious events are frequent on Windows. This is the expected behavior, so there is no need to warn."
192,Set default log level to Info,Use the same log level in both java and rust versions of the relay server.,Set default log level to Info,Use the same log level in both java and rust versions of the relay server.
193,Fix rust tests warnings,Remove unused import and unnecessary mut.,Fix rust tests warnings,Remove unused import and unnecessary mut.
194,Ignore spurious wakeups,Poll::poll() may return without events: https://github.com/carllerche/mio/issues/632#issuecomment-316068861 Do not panic if that happens.,Ignore spurious wakeups,Poll::poll() may return without events: link Do not panic if that happens.
195,Ignore spurious events,"poll() may generate spurious events: https://docs.rs/mio/0.6.9/mio/struct.Poll.html#spurious-events Thus, even on a readable or writable event, a call to read() or write() may fail with WouldBlock. In that case, we must ignore them: https://github.com/carllerche/mio/issues/632#issuecomment-315819972",Ignore spurious events,"poll() may generate spurious events: link Thus, even on a readable or writable event, a call to read() or write() may fail with WouldBlock. In that case, we must ignore them: link"
196,Use Self to call static methods,"For consistency, use Self to call static methods (associated functions).",Use Self to call static methods,"For consistency, use Self to call static methods (associated functions)."
197,Add Cargo.lock,Cargo.lock should be committed for binaries: http://doc.crates.io/faq.html#why-do-binaries-have-cargolock-in-version-control-but-not-libraries,Add Cargo.lock,Cargo.lock should be committed for binaries: link
198,Ignore fmt backup files,"The command ""cargo fmt"" backups files to *.rs.bk. Ignore them in git.",Ignore fmt backup files,"The command ""cargo fmt"" backups files to *.rs.bk. Ignore them in git."
199,Fix connections expiration,"To remove the expired connections, the Vec were iterated forward, and its current item was removed when is_expired(). This was incorrect, because a removal impacts indices of items not handled yet. To fix the problem, iterate over the connections backwards.",Fix connections expiration,"To remove the expired connections, the Vec were iterated forward, and its current item was removed when is_expired(). This was incorrect, because a removal impacts indices of items not handled yet. To fix the problem, iterate over the connections backwards."
200,"Apply code style with ""cargo fmt""",,"Apply code style with ""cargo fmt""",
201,Make case consistent with standard library,"The Rust standard library contains the following types:  - TcpStream  - UdpSocket  - IpAddr  - Ipv4Addr For naming consistency, change the case in the following type names:  - IPv4Header -> Ipv4Header  - IPv4HeaderData -> Ipv4HeaderData  - IPv4HeaderMut -> Ipv4HeaderMut  - IPv4Packet -> Ipv4Packet  - TCB -> Tcb  - TCPConnection -> TcpConnection  - TCPHeader -> TcpHeader  - TCPHeaderData -> TcpHeaderData  - TCPHeaderMut -> TcpHeaderMut  - TCPState -> TcpState  - UDPConnection -> UdpConnection  - UDPHeader -> UdpHeader  - UDPHeaderData -> UdpHeaderData  - UDPHeaderMut -> UdpHeaderMut",Make case consistent with standard library,"The Rust standard library contains the following types:  - TcpStream  - UdpSocket  - IpAddr  - Ipv4Addr For naming consistency, change the case in the following type names:  - IPv4Header -> Ipv4Header  - IPv4HeaderData -> Ipv4HeaderData  - IPv4HeaderMut -> Ipv4HeaderMut  - IPv4Packet -> Ipv4Packet  - TCB -> Tcb  - TCPConnection -> TcpConnection  - TCPHeader -> TcpHeader  - TCPHeaderData -> TcpHeaderData  - TCPHeaderMut -> TcpHeaderMut  - TCPState -> TcpState  - UDPConnection -> UdpConnection  - UDPHeader -> UdpHeader  - UDPHeaderData -> UdpHeaderData  - UDPHeaderMut -> UdpHeaderMut"
202,Improve messages on read/write errors,Log the ErrorKind along with the error message.,Improve messages on read/write errors,Log the ErrorKind along with the error message.
203,Ignore event if already closed,"An event may be received while the client or connection is already closed. For instance, when poll() generates several events, handled successively, the first handler may close the connection associated to the second handler. Therefore, ignore the event when the ""closed"" flag is set.",Ignore event if already closed,"An event may be received while the client or connection is already closed. For instance, when poll() generates several events, handled successively, the first handler may close the connection associated to the second handler. Therefore, ignore the event when the ""closed"" flag is set."
204,Move event handlers execution to Selector,"Relay does not need to know the internals, it now just calls selector.poll() followed by selector.run_handlers().",Move event handlers execution to Selector,"Relay does not need to know the internals, it now just calls selector.poll() followed by selector.run_handlers()."
205,Defer token removal (fix race condition),"A call to poll() may generate several events, that we handle successively. There was a race condition on deregistration. Suppose that poll() generated two events:  - Token(1) a Client  - Token(2) a TCPConnection (associated to the client) During execution of the handler associated to Token(1), the  TCPConnection is closed, leading to a call to  selector.deregister(Token(2)). Then, we want to execute the handler associated to Token(2) (the second  event), but since it has been deregistered, it does not exist anymore,  and panic! To avoid this problem, make Selector.deregister() mark the handlers as  removed, but kept in selector.handlers until all current event handlers  are executed.",Defer token removal (fix race condition),"A call to poll() may generate several events, that we handle successively. There was a race condition on deregistration. Suppose that poll() generated two events:  - Token(1) a Client  - Token(2) a TCPConnection (associated to the client) During execution of the handler associated to Token(1), the  TCPConnection is closed, leading to a call to  selector.deregister(Token(2)). Then, we want to execute the handler associated to Token(2) (the second  event), but since it has been deregistered, it does not exist anymore,  and panic! To avoid this problem, make Selector.deregister() mark the handlers as  removed, but kept in selector.handlers until all current event handlers  are executed."
206,Do not reregister unnecessarily,"The reregister() method must only be called when the handler was already registered. This was harmless though, because it is registered in the if-block, but reregistered() should definitely not be called in that case.",Do not reregister unnecessarily,"The reregister() method must only be called when the handler was already registered. This was harmless though, because it is registered in the if-block, but reregistered() should definitely not be called in that case."
207,"Extract tcp_header without ""if let"" in constructor","Like in other places, extract tcp_heaer without ""if let"". For that purpose, move headers instead of borrowing them.","Extract tcp_header without ""if let"" in constructor","Like in other places, extract tcp_heaer without ""if let"". For that purpose, move headers instead of borrowing them."
208,Remove dead code,,Remove dead code,
209,Improve destination rewriting,,Improve destination rewriting,
210,Delete old commented code,,Delete old commented code,
211,Log packets sent to client,,Log packets sent to client,
212,Fix sequence number after sending,,Fix sequence number after sending,
213,Set packet_for_client_length on deferred,"When the client buffer is full, we need to ""disable"" the TCPConnection until the client ""pulls"" the pending packet.",Set packet_for_client_length on deferred,"When the client buffer is full, we need to ""disable"" the TCPConnection until the client ""pulls"" the pending packet."
214,Fix remaining window,,Fix remaining window,
215,Implement TCP client window,,Implement TCP client window,
216,Fix style,,Fix style,
217,Make Selector accept an empty Ready,"Poll does not accept to register an empty Ready. For simplifying its usage, expose an API that does.",Make Selector accept an empty Ready,"Poll does not accept to register an empty Ready. For simplifying its usage, expose an API that does."
218,Remove unused RunningState,,Remove unused RunningState,
219,Log connection message with cx_debug() macro,,Log connection message with cx_debug() macro,
220,Fix comment,,Fix comment,
221,Fix assignment,,Fix assignment,
222,Improve comment,,Improve comment,
223,Fix warning,,Fix warning,
224,Implement reset connection for client and channel,,Implement reset connection for client and channel,
225,Improve send/reply to client API,,Improve send/reply to client API,
226,Reply empty packets to client using ClientChannel,,Reply empty packets to client using ClientChannel,
227,Introduce ClientChannel,"A connection (e.g. TCPConnection) has a Rc/RefCell to its client. When a Client sends a TCP packet, the TCPConnection may immediately reply (typically with an empty packet with flags set). However, the TCPConnection may not borrow its client RefCell, since the client is already borrowed by the caller. As a consequence, the caller must give the possibility to reply a packet immediately. Therefore, provide ClientChannel, a lifetime-bounded view of the client StreamBuffer, so that the connection may send packets to the borrowed client.",Introduce ClientChannel,"A connection (e.g. TCPConnection) has a Rc/RefCell to its client. When a Client sends a TCP packet, the TCPConnection may immediately reply (typically with an empty packet with flags set). However, the TCPConnection may not borrow its client RefCell, since the client is already borrowed by the caller. As a consequence, the caller must give the possibility to reply a packet immediately. Therefore, provide ClientChannel, a lifetime-bounded view of the client StreamBuffer, so that the connection may send packets to the borrowed client."
228,Merge disconnect() and close(),There is no reason for the distinction between disconnect() and close().,Merge disconnect() and close(),There is no reason for the distinction between disconnect() and close().
229,Assume !closed in update_interests(),The method update_interests() should never be called when the connection is closed.,Assume !closed in update_interests(),The method update_interests() should never be called when the connection is closed.
230,Implement UDPConnection.is_closed(),,Implement UDPConnection.is_closed(),
231,Expose Connection.is_closed(),So that the Router may remove the connection without using a callback.,Expose Connection.is_closed(),So that the Router may remove the connection without using a callback.
232,"Handle ""connectable"" event","Contrary to Java/NIO, mio::Poll exposes only ""readable"" and ""writable"" events. The event ""connectable"" is in fact the very first ""writable"" event.","Handle ""connectable"" event","Contrary to Java/NIO, mio::Poll exposes only ""readable"" and ""writable"" events. The event ""connectable"" is in fact the very first ""writable"" event."
233,Improve IPv4PacketBuffer multi-packets tests,Use different packet length and headers so that parse_multi_packets() detects issues with ptr::copy().,Improve IPv4PacketBuffer multi-packets tests,Use different packet length and headers so that parse_multi_packets() detects issues with ptr::copy().
234,Fix call to ptr::copy,,Fix call to ptr::copy,
235,Fix StreamBuffer tests,,Fix StreamBuffer tests,
236,Route TCP connections,,Route TCP connections,
237,Fix StreamBuffer.read_from(),,Fix StreamBuffer.read_from(),
238,Fix warnings,,Fix warnings,
239,Fix TCPConnection may_read(),,Fix TCPConnection may_read(),
240,Implement TCPConnection.handle_ack(),,Implement TCPConnection.handle_ack(),
241,Make StreamBuffer.read_from() always succeed,,Make StreamBuffer.read_from() always succeed,
242,Implement TCPConnection.handle_fin(),,Implement TCPConnection.handle_fin(),
243,Implement TCPConnection.handle_duplicate_syn(),,Implement TCPConnection.handle_duplicate_syn(),
244,Generate random TCP sequence number,,Generate random TCP sequence number,
245,Implement TCPConnection.handle_first_packet(),,Implement TCPConnection.handle_first_packet(),
246,"Extract tcp_header without ""if let""",This avoids one level of indentation everywhere.,"Extract tcp_header without ""if let""",This avoids one level of indentation everywhere.
247,Rc/RefCell for EventHandlers in Slab,So that we can get a mut ref to the handler without removing it from the Slab.,Rc/RefCell for EventHandlers in Slab,So that we can get a mut ref to the handler without removing it from the Slab.
248,Add DatagramBuffer assertion,,Add DatagramBuffer assertion,
249,Fix Packetizer tests,,Fix Packetizer tests,
250,Remove connections without borrowing,"To remove itself from the router, pass connection ""self"" instead of ""id"" to Router.remove(). That way, the router may remove the connection by comparing pointers instead of borrowing to compare ids. This avoids runtime panic when the connection is already mutably borrowed.",Remove connections without borrowing,"To remove itself from the router, pass connection ""self"" instead of ""id"" to Router.remove(). That way, the router may remove the connection by comparing pointers instead of borrowing to compare ids. This avoids runtime panic when the connection is already mutably borrowed."
251,Introduce RunningState for Selector,Use a structure to know whether the current event handler has to be re-inserted to the Slab once executed.,Introduce RunningState for Selector,Use a structure to know whether the current event handler has to be re-inserted to the Slab once executed.
252,Current token removal management,,Current token removal management,
253,Add macros to log connection messages,Provide macros to log connection messages with the connection id.,Add macros to log connection messages,Provide macros to log connection messages with the connection id.
254,Implement TCPConnection.handle_packet(),,Implement TCPConnection.handle_packet(),
255,Factorize code to send empty TCP packet to client,,Factorize code to send empty TCP packet to client,
256,Inline some methods,,Inline some methods,
257,Implement TCPConnection.handle_packet() skeleton,,Implement TCPConnection.handle_packet() skeleton,
258,Handle pending packet source,,Handle pending packet source,
259,Remove method to send raw data to client,We don't use it.,Remove method to send raw data to client,We don't use it.
260,Wrap seq/ack numbers to accept overflow,TCP numbers are designed to wrap-around on overflow.,Wrap seq/ack numbers to accept overflow,TCP numbers are designed to wrap-around on overflow.
261,Introduce PacketSource,,Introduce PacketSource,
262,Remove PacketStorage,,Remove PacketStorage,
263,Add self-weak to TCPConnection,,Add self-weak to TCPConnection,
264,Implement EventHandler for TCPConnection,,Implement EventHandler for TCPConnection,
265,Implement EventHandler for UDPConnection,,Implement EventHandler for UDPConnection,
266,"Revert ""Self-weak for Client""",This reverts commit ae1914c873dcd6e449d10459054740f4edc97e50. (useless),"Revert ""Self-weak for Client""",This reverts commit ae1914c873dcd6e449d10459054740f4edc97e50. (useless)
267,Implement EventHandler for TunnelServer,This requires to store a self-weak.,Implement EventHandler for TunnelServer,This requires to store a self-weak.
268,Self-weak for Client,"Implement a mechanism similar to enabled_shared_from_this in C++, so that a client instance may access its Rc owner, e.g. to register itself somewhere.",Self-weak for Client,"Implement a mechanism similar to enabled_shared_from_this in C++, so that a client instance may access its Rc owner, e.g. to register itself somewhere."
269,Implement EventHandler for Client,,Implement EventHandler for Client,
270,EventHandler as mutable,,EventHandler as mutable,
271,Slab using Boxed handlers,,Slab using Boxed handlers,
272,Move PacketStorage to its own file,,Move PacketStorage to its own file,
273,Use Self to call static methods,,Use Self to call static methods,
274,Introduce PacketStorage,IPv4Packet is always a view on a pre-existing buffer. PacketStorage aims to give the possibility to store a copy of a packet.,Introduce PacketStorage,IPv4Packet is always a view on a pre-existing buffer. PacketStorage aims to give the possibility to store a copy of a packet.
275,Expose a method to send raw data to client,So that we can send a raw packet without an IPv4Packet structure.,Expose a method to send raw data to client,So that we can send a raw packet without an IPv4Packet structure.
276,Fix style for consistency,,Fix style for consistency,
277,Implement TCPConnection.close(),,Implement TCPConnection.close(),
278,Implement TCP connection reset,,Implement TCP connection reset,
279,Send packet to client on process_receive(),,Send packet to client on process_receive(),
280,Factorize TCPConnection.send_to_client(),,Factorize TCPConnection.send_to_client(),
281,Extract TCPConnection state to a struct,This simplify borrowing rules. The struct is named TCB for Transmission Control Block.,Extract TCPConnection state to a struct,This simplify borrowing rules. The struct is named TCB for Transmission Control Block.
282,Refactor functions not to mutably borrow self,Convert methods to associated functions not to mutably borrow self.,Refactor functions not to mutably borrow self,Convert methods to associated functions not to mutably borrow self.
283,Implement TCPConnection.process_receive(),,Implement TCPConnection.process_receive(),
284,Implement TCPConnection.process_receive() skeleton,,Implement TCPConnection.process_receive() skeleton,
285,Implement TCPConnection.may_read(),,Implement TCPConnection.may_read(),
286,Expose Packetizer manual inflate(),"Expose buffer without managing ""last_packet"". This is not the job of Packetizer to manage the ""last packet"" thing, and it incurs a cost while it is not always necessary.",Expose Packetizer manual inflate(),"Expose buffer without managing ""last_packet"". This is not the job of Packetizer to manage the ""last packet"" thing, and it incurs a cost while it is not always necessary."
287,Store length of last packet read in Packetizer,So that we may read it again.,Store length of last packet read in Packetizer,So that we may read it again.
288,Implement TCPConnection.process_send(),,Implement TCPConnection.process_send(),
289,Improve TCPConnection.update_interests(),,Improve TCPConnection.update_interests(),
290,Convert from Mut to non-Mut manually,,Convert from Mut to non-Mut manually,
291,Implement TCPConnection skeleton,,Implement TCPConnection skeleton,
292,Implement xHeaderMut to xHeader conversion,,Implement xHeaderMut to xHeader conversion,
293,Replace reference packet by headers,,Replace reference packet by headers,
294,Fix runtime panic due to forbidden borrowing,"In order to find the client in the list, do not borrow it, but just get the raw pointer instead. Otherwise, in addition to the unnecessary runtime overhead, the client refcell is already borrowed mutably, leading to a runtime panic.",Fix runtime panic due to forbidden borrowing,"In order to find the client in the list, do not borrow it, but just get the raw pointer instead. Otherwise, in addition to the unnecessary runtime overhead, the client refcell is already borrowed mutably, leading to a runtime panic."
295,Read 0 bytes means EOF,,Read 0 bytes means EOF,
296,Improve style,,Improve style,
297,Fix checksum tests,,Fix checksum tests,
298,Fix tests compilation,,Fix tests compilation,
299,Improve checksum tests,,Improve checksum tests,
300,Compute checksom from a non-mutable borrow,,Compute checksom from a non-mutable borrow,
301,Pave the way to compute packet checksum,,Pave the way to compute packet checksum,
302,Fix IPv4PacketBuffer condition,,Fix IPv4PacketBuffer condition,
303,Rewrite TCP checksum from header and payload,,Rewrite TCP checksum from header and payload,
304,Provide bind() and bind_mut() for headers,A header is composed of a HeaderData and a reference to the byte array. Provide bind(raw) and bind_mut(raw) to easily create an Header (parametered by a lifetime) from a HeaderData and the raw array.,Provide bind() and bind_mut() for headers,A header is composed of a HeaderData and a reference to the byte array. Provide bind(raw) and bind_mut(raw) to easily create an Header (parametered by a lifetime) from a HeaderData and the raw array.
305,Provide views for TransportHeader,,Provide views for TransportHeader,
306,Fix IPv4 packet tests after refacto,,Fix IPv4 packet tests after refacto,
307,Fix version/length peek,,Fix version/length peek,
308,"Provide both mutable and non-mutable ""views""",,"Provide both mutable and non-mutable ""views""",
309,Introduce TCPConnection,,Introduce TCPConnection,
310,"Introduce header ""views""","IPv4Packet is the only owner of the raw data as &[u8]. Therefore, accessing headers is cumbersome: the caller has to provide the raw slice associated to the headers. To avoid this problem, provide a lifetime-bounded view of headers that borrows the raw data.","Introduce header ""views""","IPv4Packet is the only owner of the raw data as &[u8]. Therefore, accessing headers is cumbersome: the caller has to provide the raw slice associated to the headers. To avoid this problem, provide a lifetime-bounded view of headers that borrows the raw data."
311,Expose ranges in IPv4Packet,,Expose ranges in IPv4Packet,
312,Rename raw to transport_raw,"compute_checksum() expects the whole payload raw buffer, including header + payload, so rename it to transport_raw.",Rename raw to transport_raw,"compute_checksum() expects the whole payload raw buffer, including header + payload, so rename it to transport_raw."
313,Improve style,,Improve style,
314,Introduce TCPConnection,,Introduce TCPConnection,
315,Add tests for IPv4Packet,,Add tests for IPv4Packet,
316,Add TCP checksum test for odd-length payloads,,Add TCP checksum test for odd-length payloads,
317,Simplify checksum test,,Simplify checksum test,
318,Pass transport raw for checksum,"Instead of whole packet raw, where the ip header is unused.",Pass transport raw for checksum,"Instead of whole packet raw, where the ip header is unused."
319,Add TCP checksum test,,Add TCP checksum test,
320,Add tests for TCPHeader,,Add tests for TCPHeader,
321,Fix warnings in tests,,Fix warnings in tests,
322,Implement TCP checksum,,Implement TCP checksum,
323,Improve UDPConnection.update_interests(),,Improve UDPConnection.update_interests(),
324,Remove unused ConnectionId::new(),,Remove unused ConnectionId::new(),
325,Fix non-dead-code warnings,,Fix non-dead-code warnings,
326,Drop UDP packet on client buffer full,,Drop UDP packet on client buffer full,
327,Log binary packets,,Log binary packets,
328,Improve Selector.deregister(),,Improve Selector.deregister(),
329,Provide connection ids in logs,,Provide connection ids in logs,
330,UDP connection expiration,Check regularly to expire UDP connections after 2 minutes idle.,UDP connection expiration,Check regularly to expire UDP connections after 2 minutes idle.
331,IPv4Packet slice length,,IPv4Packet slice length,
332,Implement UDPConnection.disconnect(),,Implement UDPConnection.disconnect(),
333,Fix checksum storage,The UDP checksum was written at raw[6..8] instead of transport[6..8].,Fix checksum storage,The UDP checksum was written at raw[6..8] instead of transport[6..8].
334,Remove useless clone(),,Remove useless clone(),
335,Binary array to string,,Binary array to string,
336,Implement UDPConnection.send_to_network(),,Implement UDPConnection.send_to_network(),
337,Panic on poll failure,"Do not expose poll errors, just panic.",Panic on poll failure,"Do not expose poll errors, just panic."
338,Add target in log,,Add target in log,
339,Fix logger threshold,,Fix logger threshold,
340,Implement UDPConnection.process_receive(),,Implement UDPConnection.process_receive(),
341,Rename packet_length() to length(),,Rename packet_length() to length(),
342,Implement Client.send_to_client(),,Implement Client.send_to_client(),
343,Introduce pending packet for UDPConnection,,Introduce pending packet for UDPConnection,
344,ReadAdapter for DatagramReceiver,So that we can implement Packetizer both from a TcpStream and a UdpSocket.,ReadAdapter for DatagramReceiver,So that we can implement Packetizer both from a TcpStream and a UdpSocket.
345,Introduce datagram helpers,"Move DatagramSender and add DatagramReceiver to a new module ""datagram"".",Introduce datagram helpers,"Move DatagramSender and add DatagramReceiver to a new module ""datagram""."
346,Introduce DatagramSender,"Unlike TcpStream, UdpSocket does not implement Write (because its semantics is to preserve boundaries, breaking Write composability). Therefore, introduce a new Trait, DatagramSender, implemented for UdpSocket, so that DatagramBuffer may write to it. Implement a mock implementation that store a datagram in memory for testing.",Introduce DatagramSender,"Unlike TcpStream, UdpSocket does not implement Write (because its semantics is to preserve boundaries, breaking Write composability). Therefore, introduce a new Trait, DatagramSender, implemented for UdpSocket, so that DatagramBuffer may write to it. Implement a mock implementation that store a datagram in memory for testing."
347,Remove Route abstraction,Cf commit 94780acd23d6c2b0348ec2359d5d5db87fb90169 in gnirehtet.,Remove Route abstraction,Cf commit 94780acd23d6c2b0348ec2359d5d5db87fb90169 in gnirehtet.
348,Implement UDPConnection.close(),,Implement UDPConnection.close(),
349,Implement UDPConnection skeleton,,Implement UDPConnection skeleton,
350,Store token,,Store token,
351,Register UDP socket on Selector,,Register UDP socket on Selector,
352,Pass selector everywhere,,Pass selector everywhere,
353,Implement UDPConnection::new(),,Implement UDPConnection::new(),
354,Improve scoping,,Improve scoping,
355,Implement UDPConnection::create_socket(),,Implement UDPConnection::create_socket(),
356,Remove Route.close_listener,"The route knows the client, use it to remove the route from its router, in order to get rid of the callback mechanism, which adds too much complexity in Rust.",Remove Route.close_listener,"The route knows the client, use it to remove the route from its router, in order to get rid of the callback mechanism, which adds too much complexity in Rust."
357,Rewrite 10.0.2.2 to 127.0.0.1,,Rewrite 10.0.2.2 to 127.0.0.1,
358,Pass route key to connections,,Pass route key to connections,
359,Pass weak-client to connections,,Pass weak-client to connections,
360,Dynamically dispatch connections,"Make Connection a trait. Connection was implemented to statically dispatch over TCPConnection and UDPConnection. However, these instance need to be shared between the Route and the selector, so they are embedded into an Rc<RefCell<…>>. Mixing static dispatch with indirection adds complexity and is not elegant. Therefore, switch to dynamic dispatch.",Dynamically dispatch connections,"Make Connection a trait. Connection was implemented to statically dispatch over TCPConnection and UDPConnection. However, these instance need to be shared between the Route and the selector, so they are embedded into an Rc<RefCell<…>>. Mixing static dispatch with indirection adds complexity and is not elegant. Therefore, switch to dynamic dispatch."
361,Make IPv4Packet fields private,,Make IPv4Packet fields private,
362,Make IPv4Header fields private,,Make IPv4Header fields private,
363,Create UDP connection,,Create UDP connection,
364,Non-copyable TransportHeader/IPv4Header,Use explicit clone() instead.,Non-copyable TransportHeader/IPv4Header,Use explicit clone() instead.
365,Borrow raw data as non-mutable in Packetizer,Packetizer does not write into the buffer.,Borrow raw data as non-mutable in Packetizer,Packetizer does not write into the buffer.
366,Forward route methods to connection,,Forward route methods to connection,
367,Create connection from Route,,Create connection from Route,
368,Statically dispatch connections,,Statically dispatch connections,
369,Implement Route CloseListener,,Implement Route CloseListener,
370,"Remove ""get_"" prefix for getters",To follow rust code style conventions.,"Remove ""get_"" prefix for getters",To follow rust code style conventions.
371,Rename switch to swap,,Rename switch to swap,
372,Remove SourceDestination,This tiny abstraction added complexity without benefits.,Remove SourceDestination,This tiny abstraction added complexity without benefits.
373,Add tests for Packetizer,,Add tests for Packetizer,
374,Use Vec::new(),,Use Vec::new(),
375,Implement Packetizer.packetize(),,Implement Packetizer.packetize(),
376,Store transport_index and payload_index,,Store transport_index and payload_index,
377,Remove useless 0 index in array ranges,,Remove useless 0 index in array ranges,
378,Implement Packetizer.inflate(),,Implement Packetizer.inflate(),
379,Pass reference to headers separately,So that there is no need to have a full IPv4Packet.,Pass reference to headers separately,So that there is no need to have a full IPv4Packet.
380,Implement Packetizer::new(),,Implement Packetizer::new(),
381,Rename IPv4Packet::new() to parse(),,Rename IPv4Packet::new() to parse(),
382,Factorize TransportHeader::parse(),,Factorize TransportHeader::parse(),
383,Expose transport header length,,Expose transport header length,
384,Introduce Packetizer,,Introduce Packetizer,
385,Introduce UDPConnection,,Introduce UDPConnection,
386,Provide send_to_network() skeleton,,Provide send_to_network() skeleton,
387,Type-erase CloseListener in Client::new(),"Client::new() was a generic function to accept statically any CloseListener. That way, the caller may directly pass a closure. However, this implies that there will be one version of this function for every CloseListener type. To prevent this, type-erase the listener instead. Note that currently, there is exactly one call to Client::new(), so there is only one version. But the intent is to get one version whatever the number of different CloseListener types.",Type-erase CloseListener in Client::new(),"Client::new() was a generic function to accept statically any CloseListener. That way, the caller may directly pass a closure. However, this implies that there will be one version of this function for every CloseListener type. To prevent this, type-erase the listener instead. Note that currently, there is exactly one call to Client::new(), so there is only one version. But the intent is to get one version whatever the number of different CloseListener types."
388,Move comment,,Move comment,
389,Call router methods from Client,,Call router methods from Client,
390,Set Client as Router owner,,Set Client as Router owner,
391,Implement Route.find_route_index(),,Implement Route.find_route_index(),
392,Improve Router skeleton,,Improve Router skeleton,
393,Rewrite byteorder crate comment,,Rewrite byteorder crate comment,
394,Introduce Router,,Introduce Router,
395,"Remove useless "",""",,"Remove useless "",""",
396,Route constructors,,Route constructors,
397,Impl SourceDestination for TransportHeader,,Impl SourceDestination for TransportHeader,
398,Implement Route,,Implement Route,
399,Move to_byte_array() to binary,,Move to_byte_array() to binary,
400,Implement client id initialization,,Implement client id initialization,
401,Add more tests to StreamBuffer,,Add more tests to StreamBuffer,
402,Add tests for StreamBuffer,,Add tests for StreamBuffer,
403,Make StreamBuffer.read_from() return Result,"For consistency with DatagramBuffer.read_from(), do not assume that there is enough space in the buffer. Return a result to force the caller to handle this case.",Make StreamBuffer.read_from() return Result,"For consistency with DatagramBuffer.read_from(), do not assume that there is enough space in the buffer. Return a result to force the caller to handle this case."
404,Factorize DatagramBuffer tests,,Factorize DatagramBuffer tests,
405,Implement StreamBuffer.optimize(),,Implement StreamBuffer.optimize(),
406,Implement StreamBuffer.read_from(),,Implement StreamBuffer.read_from(),
407,Implement StreamBuffer.write_to(),,Implement StreamBuffer.write_to(),
408,Introduce StreamBuffer,,Introduce StreamBuffer,
409,Implement Client.push_to_network(),,Implement Client.push_to_network(),
410,Implement Client.close(),,Implement Client.close(),
411,Remove client on close,,Remove client on close,
412,Rename DeathListener to CloseListener,,Rename DeathListener to CloseListener,
413,Use closure for on_client_death,,Use closure for on_client_death,
414,Introduce DeathListener,So that the client may remove itself from the TunnelServer when it is closed.,Introduce DeathListener,So that the client may remove itself from the TunnelServer when it is closed.
415,Handle Rc in Selector internally,,Handle Rc in Selector internally,
416,Store handlers as Rc,,Store handlers as Rc,
417,Use closures for selector handlers,,Use closures for selector handlers,
418,Use Self in constructors,,Use Self in constructors,
419,Move poll to Selector,,Move poll to Selector,
420,Move events out of the loop,Do not create a new events storage for every poll().,Move events out of the loop,Do not create a new events storage for every poll().
421,Move event handler execution to Selector,,Move event handler execution to Selector,
422,Client processing skeleton,,Client processing skeleton,
423,Client event handling skeleton,,Client event handling skeleton,
424,Pass Event instead of Ready to EventHandler,So that we have the event token to reregister.,Pass Event instead of Ready to EventHandler,So that we have the event token to reregister.
425,Remove dead code,,Remove dead code,
426,Add IPv4PacketBuffer to Client,,Add IPv4PacketBuffer to Client,
427,Add DatagramBuffer tests,,Add DatagramBuffer tests,
428,Fix some IPv4PacketBuffer warnings,,Fix some IPv4PacketBuffer warnings,
429,Implement DatagramBuffer,,Implement DatagramBuffer,
430,Replace static by const for TAGs,,Replace static by const for TAGs,
431,Improve IPv4PacketBuffer.next(),,Improve IPv4PacketBuffer.next(),
432,DatagramBuffer skeleton,,DatagramBuffer skeleton,
433,More tests for IPv4PacketBuffer,,More tests for IPv4PacketBuffer,
434,Add test for fragmented packet in IPv4PacketBuffer,,Add test for fragmented packet in IPv4PacketBuffer,
435,Move test method,,Move test method,
436,Test parsing of IPv4PacketBuffer,,Test parsing of IPv4PacketBuffer,
437,Fix IPv4 header parsing,It parsed transport data at a wrong location.,Fix IPv4 header parsing,It parsed transport data at a wrong location.
438,Add tests for IPv4 header length,,Add tests for IPv4 header length,
439,Implement IPv4PacketBuffer,,Implement IPv4PacketBuffer,
440,Simplify u32 annotation,,Simplify u32 annotation,
441,Implement read_length() and read_version(),,Implement read_length() and read_version(),
442,Introduce IPv4PacketBuffer,,Introduce IPv4PacketBuffer,
443,Implement SourceDestination for IPv4Header,,Implement SourceDestination for IPv4Header,
444,Introduce SourceDestination trait,To factorize source and destination swapping.,Introduce SourceDestination trait,To factorize source and destination swapping.
445,Remove useless mut,,Remove useless mut,
446,UDPHeader tests,,UDPHeader tests,
447,Minor test style improvement,,Minor test style improvement,
448,Implement From<> for TransportHeader,,Implement From<> for TransportHeader,
449,Transport checksum computation skeleton,,Transport checksum computation skeleton,
450,Implement setters for TCP/UDP headers,,Implement setters for TCP/UDP headers,
451,Implement TCP/UDP headers,,Implement TCP/UDP headers,
452,Rename modules with _,Words in a module name should be separeted by '_'.,Rename modules with _,Words in a module name should be separeted by '_'.
453,Introduce TCPHeader and UDPHeader,,Introduce TCPHeader and UDPHeader,
454,Rename header to ipv4_header,,Rename header to ipv4_header,
455,Move IPv4Packet to its own file,,Move IPv4Packet to its own file,
456,Do not loan raw to IPv4Header,"There may be only mutable borrow of the raw data, so it may not be shared between IPv4Packet and IPv4Header.",Do not loan raw to IPv4Header,"There may be only mutable borrow of the raw data, so it may not be shared between IPv4Packet and IPv4Header."
457,Introduce IPv4Packet,,Introduce IPv4Packet,
458,Compute IPv4 checksum,,Compute IPv4 checksum,
459,More tests for IPv4Header,,More tests for IPv4Header,
460,Provide methods to modify headers,,Provide methods to modify headers,
461,Introduce IPv4Header,,Introduce IPv4Header,
462,Give id to clients,,Give id to clients,
463,Fix starting log,,Fix starting log,
464,Log error,,Log error,
465,Remove dead imports,,Remove dead imports,
466,Improve error handling,,Improve error handling,
467,Use log for errors,,Use log for errors,
468,Store clients in TunnelServer,,Store clients in TunnelServer,
469,Rename TunnelConnection to TunnelServer,,Rename TunnelConnection to TunnelServer,
470,Client skeleton,,Client skeleton,
471,Implement accept_client(),,Implement accept_client(),
472,Fix fake Selector,Replace the fake Selector with the real one.,Fix fake Selector,Replace the fake Selector with the real one.
473,Directly implement EventHandler on TunnelConnection,Without an additional level using a closure.,Directly implement EventHandler on TunnelConnection,Without an additional level using a closure.
474,Move events out of Selector,Due to borrowing issues.,Move events out of Selector,Due to borrowing issues.
475,Introduce TunnelConnection,,Introduce TunnelConnection,
476,Remove unused method,,Remove unused method,
477,Mutable handlers,,Mutable handlers,
478,Enable LTO in release mode,More optimization for release builds.,Enable LTO in release mode,More optimization for release builds.
479,Display timestamps in logs,,Display timestamps in logs,
480,Use log crate,,Use log crate,
481,Rename mod eventhandler to selector,,Rename mod eventhandler to selector,
482,Directly use slab,Git rid of HandlerTokenManager.,Directly use slab,Git rid of HandlerTokenManager.
483,Extract the poll-loop into a separate method,,Extract the poll-loop into a separate method,
484,Use slab to store event handlers,,Use slab to store event handlers,
485,Introduce Selector,,Introduce Selector,
486,Call expect() to give an error message,,Call expect() to give an error message,
487,Move EventHandler,,Move EventHandler,
488,Remove dead code,,Remove dead code,
489,Register event Handlers,,Register event Handlers,
490,HandlerTokenManager,,HandlerTokenManager,
491,Add .gitignore for rustrelay,,Add .gitignore for rustrelay,
492,Wrapper for Poll,Expose a Poll wrapper intended to accept EventHandler instances (or lambdas) instead of mio::Token.,Wrapper for Poll,Expose a Poll wrapper intended to accept EventHandler instances (or lambdas) instead of mio::Token.
493,Move argument validation to the parser,"Make the command expose the accepted parameters (serial and/or DNS servers), to be used by the parser to handle errors immediately.",Move argument validation to the parser,"Make the command expose the accepted parameters (serial and/or DNS servers), to be used by the parser to handle errors immediately."
494,Rustrelay project skeleton,"Rustrelay provides an alternative implementation of relay, in Rust It generates native binaries, so unlike the Java version, no runtime is necessary.",Rustrelay project skeleton,"Rustrelay provides an alternative implementation of relay, in Rust It generates native binaries, so unlike the Java version, no runtime is necessary."
495,Improve command-line error handling,"Print a friendly message, including the expected syntax for the command, instead of a stacktrace on gnirehtet command arguments error.",Improve command-line error handling,"Print a friendly message, including the expected syntax for the command, instead of a stacktrace on gnirehtet command arguments error."
496,Improve command-line arguments parsing,"Parse the arguments into a specific CommandLineArguments instance, that can be tested easily.",Improve command-line arguments parsing,"Parse the arguments into a specific CommandLineArguments instance, that can be tested easily."
497,Move relay implementation to a subpackage,"The java application used to be the relay server, the command-line interface being in a separate shell script. Now that it handles the command-line, put Main into com.genymobile.gnirehtet and all the other classes into com.genymobile.gnirehtet.relay.",Move relay implementation to a subpackage,"The java application used to be the relay server, the command-line interface being in a separate shell script. Now that it handles the command-line, put Main into com.genymobile.gnirehtet and all the other classes into com.genymobile.gnirehtet.relay."
498,Move commandline handling to Java,"The gnirehtet commands were exposed through bash (""gnirehtet"", for Linux and Mac OS) and batch (""gnirehtet.cmd"", for Windows) scripts. Move the handling to the Java code, so the behavior is consistent across both platforms. Consequently, rename relay.jar to gnirehtet.jar.",Move commandline handling to Java,"The gnirehtet commands were exposed through bash (""gnirehtet"", for Linux and Mac OS) and batch (""gnirehtet.cmd"", for Windows) scripts. Move the handling to the Java code, so the behavior is consistent across both platforms. Consequently, rename relay.jar to gnirehtet.jar."
499,"Add missing ""reinstall"" in syntax usage",,"Add missing ""reinstall"" in syntax usage",
500,Add assemble gradle tasks for relay,"In release mode, execute the ""build"" task so that the checks are executed.",Add assemble gradle tasks for relay,"In release mode, execute the ""build"" task so that the checks are executed."
501,Make notification icons white-only,The notification icons appeared black on some devices (while all other icons were white). They should always be white: https://android.stackexchange.com/a/71535,Make notification icons white-only,The notification icons appeared black on some devices (while all other icons were white). They should always be white: link
502,Add swap test for TCP header,"TCPHeader.swapSourceAndDestination() was not tested, contrary to UDPHeader.",Add swap test for TCP header,"TCPHeader.swapSourceAndDestination() was not tested, contrary to UDPHeader."
503,"Replace ""drop"" by ""dropping""","For consistency, use the -ing form.","Replace ""drop"" by ""dropping""","For consistency, use the -ing form."
504,Replace System.out.println() by logv(),,Replace System.out.println() by logv(),
505,"Rename ""received"" to ""their"" sequence number","For consistency with ""theirAcknowledgementNumber"", rename ""receivedSequenceNumber"" to ""theirSequenceNumber"".","Rename ""received"" to ""their"" sequence number","For consistency with ""theirAcknowledgementNumber"", rename ""receivedSequenceNumber"" to ""theirSequenceNumber""."
506,Simplify connection removal,"To remove itself from the router, pass ""this"" connection instead of ""id"" to Router.remove(). This avoids unnecessary ids comparisons to find the connection to remove.",Simplify connection removal,"To remove itself from the router, pass ""this"" connection instead of ""id"" to Router.remove(). This avoids unnecessary ids comparisons to find the connection to remove."
507,Fix comment,"The method createPacket() had been renamed to packetize(), but the refactor was not applied on comments.",Fix comment,"The method createPacket() had been renamed to packetize(), but the refactor was not applied on comments."
508,Remove unused IPv4Packet.merge(),"The function to build a packet from an IPv4 header and a transport header is not used since the introduction of Packetizer (commit 408a95e24eb5faa0cd9b1fdf0c14b621fe4be1ea), so remove it.",Remove unused IPv4Packet.merge(),"The function to build a packet from an IPv4 header and a transport header is not used since the introduction of Packetizer (commit 408a95e24eb5faa0cd9b1fdf0c14b621fe4be1ea), so remove it."
509,Pretty-print binary content,Use Binary.toString() instead of String.valueOf() to print a binary packet.,Pretty-print binary content,Use Binary.toString() instead of String.valueOf() to print a binary packet.
510,Drop UDP packets when client buffer is full,"For TCP connections, we may not lose data we receive from the network. When the client buffer is full, we cannot transmit it to the client, so we ""pause"" this specific connection: we keep the packet and disable read operation for the channel. When the client is ready to receive more data, it request to ""paused"" connections (through PacketSource). UDPConnection also kept the packet and disabled read operation for the channel. This was wrong, because it didn't use the PacketSource mechanism, so there was no way to ""unpause"" such a connection. Since we may lose UDP datagrams, just drop a packet when the client buffer is full instead.",Drop UDP packets when client buffer is full,"For TCP connections, we may not lose data we receive from the network. When the client buffer is full, we cannot transmit it to the client, so we ""pause"" this specific connection: we keep the packet and disable read operation for the channel. When the client is ready to receive more data, it request to ""paused"" connections (through PacketSource). UDPConnection also kept the packet and disabled read operation for the channel. This was wrong, because it didn't use the PacketSource mechanism, so there was no way to ""unpause"" such a connection. Since we may lose UDP datagrams, just drop a packet when the client buffer is full instead."
511,Simplify UDP connection expiration,"Don't check whether some writes are pending: if nothing happened during IDLE_TIMEOUT, we can drop them.",Simplify UDP connection expiration,"Don't check whether some writes are pending: if nothing happened during IDLE_TIMEOUT, we can drop them."
512,Replace SelectorAlarm by a simple timeout,"SelectorAlarm started a separate thread to wake up a call to selector.select() at a fixed rate. Instead, call selector.select() with a timeout, and execute cleanup if the next cleaning deadline is reached. That way, there is no need for a separate thread.",Replace SelectorAlarm by a simple timeout,"SelectorAlarm started a separate thread to wake up a call to selector.select() at a fixed rate. Instead, call selector.select() with a timeout, and execute cleanup if the next cleaning deadline is reached. That way, there is no need for a separate thread."
513,Log packet drop as warning,,Log packet drop as warning,
514,Remove Route abstraction,"Route was essentially a proxy between a client and a connection, but without real benefit. Therefore, remove it:  - directly give the client instance to connections;  - replace the list of routes by a list of connections in the router;  - rename Route.Key to ConnectionId. Since the connection now know the client, also get rid of its CloseListener (it may remove itself directly from the client router).",Remove Route abstraction,"Route was essentially a proxy between a client and a connection, but without real benefit. Therefore, remove it:  - directly give the client instance to connections;  - replace the list of routes by a list of connections in the router;  - rename Route.Key to ConnectionId. Since the connection now know the client, also get rid of its CloseListener (it may remove itself directly from the client router)."
515,Move closing log to disconnect(),"A connection may be closed by Route.close(), that, in turn, calls Route.disconnect(). But it may also be closed due to a call to Router.cleanExpiredConnections(), that calls Route.disconnect() without calling Route.close(), for optimizations reasons. Therefore, move the closing log to disconnect().",Move closing log to disconnect(),"A connection may be closed by Route.close(), that, in turn, calls Route.disconnect(). But it may also be closed due to a call to Router.cleanExpiredConnections(), that calls Route.disconnect() without calling Route.close(), for optimizations reasons. Therefore, move the closing log to disconnect()."
516,Disconnect on route closing,"For consistency with Client.close(), make Route.close() also disconnect the channel.",Disconnect on route closing,"For consistency with Client.close(), make Route.close() also disconnect the channel."
517,Make Router.removeRoute() private,It is not used from outside Router.,Make Router.removeRoute() private,It is not used from outside Router.
518,Rename switch to swap,"We ""swap"" (not ""switch"") source and destination.",Rename switch to swap,"We ""swap"" (not ""switch"") source and destination."
519,Simplify test method name,"Before we removed the packetization from a ByteBuffer, there were two similar test methods:  - testPacketizeChunksFromByteBuffer()  - testPacketizeChunksFromChannel() We removed the first one, so we can now rename the second testPacketizeChunks().",Simplify test method name,"Before we removed the packetization from a ByteBuffer, there were two similar test methods:  - testPacketizeChunksFromByteBuffer()  - testPacketizeChunksFromChannel() We removed the first one, so we can now rename the second testPacketizeChunks()."
520,Do not unnecessarily update payload length,"IPv4Packet.recompute() is called from 2 locations:  - Packetizer.inflate()  - TCPConnection.updateAcknowledgementNumber() In the first case, the payload length is already updated before calling recompute(). In the second case, the payload length has not changed. Therefore, do not update it in recompute(). Since it then remains only checksums computation, rename the method to computeChecksums().",Do not unnecessarily update payload length,"IPv4Packet.recompute() is called from 2 locations:  - Packetizer.inflate()  - TCPConnection.updateAcknowledgementNumber() In the first case, the payload length is already updated before calling recompute(). In the second case, the payload length has not changed. Therefore, do not update it in recompute(). Since it then remains only checksums computation, rename the method to computeChecksums()."
521,Simplify empty payload packetization,"In addition to the API to create a packet from a payload retrieved from a channel, the Packetizer exposed an API to create a packet from a payload as ByteBuffer. However, this second feature was actually always called with an empty payload. Therefore, replace it by a method packetizeEmptyPayload().",Simplify empty payload packetization,"In addition to the API to create a packet from a payload retrieved from a channel, the Packetizer exposed an API to create a packet from a payload as ByteBuffer. However, this second feature was actually always called with an empty payload. Therefore, replace it by a method packetizeEmptyPayload()."
522,Simplify Packetizer inflate(),"The private method inflate() expected the payload length as a parameter, so all callers had to provide it. This is not necessary, since it knows the payload buffer, so it can retrieve its length directly. Therefore, remove this parameter.",Simplify Packetizer inflate(),"The private method inflate() expected the payload length as a parameter, so all callers had to provide it. This is not necessary, since it knows the payload buffer, so it can retrieve its length directly. Therefore, remove this parameter."
523,Fix comment typo,s/subobtimal/suboptimal/,Fix comment typo,s/subobtimal/suboptimal/
524,"Improve ""closing"" naming consistency","A Client and a Route executed a callback (RemoveHandler) provided by their ""owner"" when they have to be removed. Instead, consider this callback as a listener, so rename it ""CloseListener"". The fact that their owners ""remove"" them from some lists is irrelevant for Client and Route: they have only the responsibility to notify them when they must not be used anymore. For consistency, also rename ""discard"" and ""destroy"" to ""close"".","Improve ""closing"" naming consistency","A Client and a Route executed a callback (RemoveHandler) provided by their ""owner"" when they have to be removed. Instead, consider this callback as a listener, so rename it ""CloseListener"". The fact that their owners ""remove"" them from some lists is irrelevant for Client and Route: they have only the responsibility to notify them when they must not be used anymore. For consistency, also rename ""discard"" and ""destroy"" to ""close""."
525,Move misplaced comment in tests,"The comments refers to storing the datagram in the buffer, done by the call to readFrom().",Move misplaced comment in tests,"The comments refers to storing the datagram in the buffer, done by the call to readFrom()."
526,Add test for IPv4PacketBuffer,Assert that there is no packets anymore once all have been consumed.,Add test for IPv4PacketBuffer,Assert that there is no packets anymore once all have been consumed.
527,Remove copy() from TransportHeader,"The method copy() is only used for TCPHeader, and is called from a concrete TCPHeader (not an abstract TransportHeader). Therefore, there is no reason to expose it in the TransportHeader interface.",Remove copy() from TransportHeader,"The method copy() is only used for TCPHeader, and is called from a concrete TCPHeader (not an abstract TransportHeader). Therefore, there is no reason to expose it in the TransportHeader interface."
528,Update latest release (v1.1.1) in README,,Update latest release (v1.1.1) in README,
529,Add gnirehtet.cmd to release,Include gnirehtet.cmd to released zip file.,Add gnirehtet.cmd to release,Include gnirehtet.cmd to released zip file.
530,Rename TunnelConnection to TunnelServer,"The class manages the server socket, listening for new clients. Thus, the name ""TunnelServer"" is more precise.",Rename TunnelConnection to TunnelServer,"The class manages the server socket, listening for new clients. Thus, the name ""TunnelServer"" is more precise."
531,Update README for Windows users,Give more details about usage through the new script gnirehtet.cmd.,Update README for Windows users,Give more details about usage through the new script gnirehtet.cmd.
532,"Call ""adb install"" with ""-r""","Replace the existing gnirehtet application on the device, if any.","Call ""adb install"" with ""-r""","Replace the existing gnirehtet application on the device, if any."
533,Remove trailing spaces from gnirehtet.cmd,,Remove trailing spaces from gnirehtet.cmd,
534,Merge pull request #26 from JonnyShuali/master,Added windows support,Merge pull request #26 from JonnyShuali/master,Added windows support
535,fixed dns,remove unused vars,fixed dns,remove unused vars
536,Move server socket management to a dedicated class,"The Relay class managed both the polling mechanism and the server socket listening for client connections. To improve separation of concerns, move the server socket part to a dedicated class: TunnelConnection.",Move server socket management to a dedicated class,"The Relay class managed both the polling mechanism and the server socket listening for client connections. To improve separation of concerns, move the server socket part to a dedicated class: TunnelConnection."
537,added fully support for dns & bugfixes,now locate_file search first in %PATH%,added fully support for dns & bugfixes,now locate_file search first in %PATH%
538,Transfer client id on connection open,"Whenever a port redirection is enabled (typically through ""adb reverse""), connect() will succeed even if the relay server is not listening on the other side of the tunnel. Commit 301867efe7caee8a91b73a014979eed757d85010 provided a workaround, assuming that the port forwarding was local: the client attempted to read from the socket with the smallest possible timeout. Since there was nothing to read, a read error indicated that no server was listening on the other side of the tunnel, while the connection was considered ok on timeout. But this does not generally fix the problem. For example, if the relay server is executed remotely and exposed through a SSH local port forwarding, then connect() would still succeed (a server was listening on the other side of the ""adb reverse"" tunnel) even if the relay server was not listening behind the SSH tunnel. Therefore, modify the protocol between the client and the relay server: when a client connects, the relay server immediately writes its id (an integer) to the TCP socket. The client considers itself connected only once it has received this number. Thus, it will be able to detect connection failure before switching its state to CONNECTED.",Transfer client id on connection open,"Whenever a port redirection is enabled (typically through ""adb reverse""), connect() will succeed even if the relay server is not listening on the other side of the tunnel. Commit 301867efe7caee8a91b73a014979eed757d85010 provided a workaround, assuming that the port forwarding was local: the client attempted to read from the socket with the smallest possible timeout. Since there was nothing to read, a read error indicated that no server was listening on the other side of the tunnel, while the connection was considered ok on timeout. But this does not generally fix the problem. For example, if the relay server is executed remotely and exposed through a SSH local port forwarding, then connect() would still succeed (a server was listening on the other side of the ""adb reverse"" tunnel) even if the relay server was not listening behind the SSH tunnel. Therefore, modify the protocol between the client and the relay server: when a client connects, the relay server immediately writes its id (an integer) to the TCP socket. The client considers itself connected only once it has received this number. Thus, it will be able to detect connection failure before switching its state to CONNECTED."
539,Release mutex during blocking calls,"RelayTunnel.open() both opened a channel and connected the socket to the relay server (or, more precisely, to the tunnel created by ""adb reverse"" that enabled port forwarding to the relay server). However, connecting the socket is blocking, and was called from RelayTunnelProvider.getCurrentTunnel() with the mutex locked. As a consequence, it was not possible to call invalidateTunnel() (and, a fortiori, to close the VPN) until connect() completed. To avoid this problem, split the channel opening and the socket connection, so that connect() may be called with the mutex (the one used by invalidateTunnel()) released. However, we must still make sure that no more than one thread executes getCurrentTunnel() at the same time. For this purpose, use a second mutex (getCurrentTunnelLock()).",Release mutex during blocking calls,"RelayTunnel.open() both opened a channel and connected the socket to the relay server (or, more precisely, to the tunnel created by ""adb reverse"" that enabled port forwarding to the relay server). However, connecting the socket is blocking, and was called from RelayTunnelProvider.getCurrentTunnel() with the mutex locked. As a consequence, it was not possible to call invalidateTunnel() (and, a fortiori, to close the VPN) until connect() completed. To avoid this problem, split the channel opening and the socket connection, so that connect() may be called with the mutex (the one used by invalidateTunnel()) released. However, we must still make sure that no more than one thread executes getCurrentTunnel() at the same time. For this purpose, use a second mutex (getCurrentTunnelLock())."
540,Directly pass RelayTunnelListener to constructor,The listener is only set on initialization. Passing it to constructor avoids to expose a setListener(…) method that should take care of thread-safety.,Directly pass RelayTunnelListener to constructor,The listener is only set on initialization. Passing it to constructor avoids to expose a setListener(…) method that should take care of thread-safety.
541,Simplify usage function in gnirehtet bsah script,"Use ""cat << EOF"" to print the usage. This avoids to write one echo per line. In addition, print the whole usage to stderr (instead of the first line only).",Simplify usage function in gnirehtet bsah script,"Use ""cat << EOF"" to print the usage. This avoids to write one echo per line. In addition, print the whole usage to stderr (instead of the first line only)."
542,Fix PersistentRelayTunnel synchronization,"The ""stopped"" flag was not synchronized between send()/receive() and close() (the mutex was only locked in close()). Since we cannot lock the mutex for both send() and receive() (by design, they must execute concurrently), use a simple AtomicBoolean for the ""stopped"" flag instead.",Fix PersistentRelayTunnel synchronization,"The ""stopped"" flag was not synchronized between send()/receive() and close() (the mutex was only locked in close()). Since we cannot lock the mutex for both send() and receive() (by design, they must execute concurrently), use a simple AtomicBoolean for the ""stopped"" flag instead."
543,Adding Windows support,,Adding Windows support,
544,Do not display notification after stop,"If the tunnel to the relay server was not already ""disconnected"" on VPN stop, then a ""disconnected"" event is received after tne VPN is closed. In that case, the notification must not be displayed.",Do not display notification after stop,"If the tunnel to the relay server was not already ""disconnected"" on VPN stop, then a ""disconnected"" event is received after tne VPN is closed. In that case, the notification must not be displayed."
545,Add instruction on version upgrade,"""./gnirehtet rt"" does not automatically install the apk on the device if the package is already present. As a consequence, it must be explicitly installed on upgrade.",Add instruction on version upgrade,"""./gnirehtet rt"" does not automatically install the apk on the device if the package is already present. As a consequence, it must be explicitly installed on upgrade."
546,Upgrade latest release (v1.1) in README,,Upgrade latest release (v1.1) in README,
547,Update Android application version to 1.1,,Update Android application version to 1.1,
548,Add reinstall command,"For convenience, provide ""./gnirehtet reinstall"" that calls ""uninstall"" then ""install"".",Add reinstall command,"For convenience, provide ""./gnirehtet reinstall"" that calls ""uninstall"" then ""install""."
549,Start client in parallel of the server,"Send the intent while the server is starting, so that the relay server is ready when the client connects. This reduces starting time, prevents failure of the first connection, and thus avoids a disconnection notification.",Start client in parallel of the server,"Send the intent while the server is starting, so that the relay server is ready when the client connects. This reduces starting time, prevents failure of the first connection, and thus avoids a disconnection notification."
550,Notify disconnections from the relay server,"Display an Android notification when the client is disconnected from the relay server, with a button to stop gnirehtet directly.",Notify disconnections from the relay server,"Display an Android notification when the client is disconnected from the relay server, with a button to stop gnirehtet directly."
551,Early detect invalid connection to relay server,"The relay server is accessible through an ""adb reverse"" port redirection. If the port redirection is enabled but the relay server is not started, then the call to channel.connect() will succeed, but the first read() will return -1. As a consequence, the connection state of the relay server would be invalid temporarily (we would switch to CONNECTED state then switch back to DISCONNECTED). To avoid this problem, we must actually try to read from the server, so that an error occurs immediately if the relay server is not accessible. To do so, we set the lowest timeout possible (1) that is not ""infinity"" (0), try to read, then reset the timeout option. Since the client is always the first peer to send data, there is never anything to read.",Early detect invalid connection to relay server,"The relay server is accessible through an ""adb reverse"" port redirection. If the port redirection is enabled but the relay server is not started, then the call to channel.connect() will succeed, but the first read() will return -1. As a consequence, the connection state of the relay server would be invalid temporarily (we would switch to CONNECTED state then switch back to DISCONNECTED). To avoid this problem, we must actually try to read from the server, so that an error occurs immediately if the relay server is not accessible. To do so, we set the lowest timeout possible (1) that is not ""infinity"" (0), try to read, then reset the timeout option. Since the client is always the first peer to send data, there is never anything to read."
552,Fix tunnel reconnection race condition,"On the device-side, sending to and receiving from the tunnel (the connection to the relay server) are processed from two different threads. When an error occurs, both threads invalidate the tunnel, so that the next call to getCurrentTunnel() will return a new tunnel. Typically, the first one actually invalidates the tunnel, then the second one detects that the tunnel has already been invalidated, and does nothing. However, there is a possibility that one thread invalidates the tunnel, then calls getCurrentTunnel() before the other thread calls invalidateTunnel(). In that case, the new tunnel would be mistakenly invalidated. To prevent this race condition, pass the current tunnel as parameter of invalidateTunnel().",Fix tunnel reconnection race condition,"On the device-side, sending to and receiving from the tunnel (the connection to the relay server) are processed from two different threads. When an error occurs, both threads invalidate the tunnel, so that the next call to getCurrentTunnel() will return a new tunnel. Typically, the first one actually invalidates the tunnel, then the second one detects that the tunnel has already been invalidated, and does nothing. However, there is a possibility that one thread invalidates the tunnel, then calls getCurrentTunnel() before the other thread calls invalidateTunnel(). In that case, the new tunnel would be mistakenly invalidated. To prevent this race condition, pass the current tunnel as parameter of invalidateTunnel()."
553,Release the mutex for waiting,"During the delay between connection attempts, the RelayTunnelProvider must release the mutex (by calling wait() instead of sleep()), so that invalidateTunnel() may be called at any time. Indeed, there was a lock dependency that prevented the tunnel to be closed immediately. On gnirehtet stop, the following cascade of calls occurred:  -> GnirehtetService.close()    -> Forwarder.stop()      -> PersistentRelayTunnel.close()        -> RelayTunnelProvider.invalidateTunnel() // synchronized           // required the mutex that may be held by getCurrentTunnel()           // during the whole execution of Thread.sleep()      -> Future.cancel(true) // interrupts Thread.sleep() Thread.sleep() was intended to be interrupted by a call to Future.cancel(true). However, this call occurred only after PersistentRelayTunnel.close() completed… that is, after the end of Thread.sleep(), making the whole interruption useless.",Release the mutex for waiting,"During the delay between connection attempts, the RelayTunnelProvider must release the mutex (by calling wait() instead of sleep()), so that invalidateTunnel() may be called at any time. Indeed, there was a lock dependency that prevented the tunnel to be closed immediately. On gnirehtet stop, the following cascade of calls occurred:  -> GnirehtetService.close()    -> Forwarder.stop()      -> PersistentRelayTunnel.close()        -> RelayTunnelProvider.invalidateTunnel() // synchronized           // required the mutex that may be held by getCurrentTunnel()           // during the whole execution of Thread.sleep()      -> Future.cancel(true) // interrupts Thread.sleep() Thread.sleep() was intended to be interrupted by a call to Future.cancel(true). However, this call occurred only after PersistentRelayTunnel.close() completed… that is, after the end of Thread.sleep(), making the whole interruption useless."
554,Use final fields when appropriate,"Make ""final"" the fields intented to be initialized by constructors.",Use final fields when appropriate,"Make ""final"" the fields intented to be initialized by constructors."
555,Remove useless returns,,Remove useless returns,
556,Log VPN starting failure,VpnService.Builder.establish() may return null if the application is not prepared or is revoked: https://developer.android.com/reference/android/net/VpnService.Builder.html#establish%28%29 Log when it happens.,Log VPN starting failure,VpnService.Builder.establish() may return null if the application is not prepared or is revoked: link Log when it happens.
557,Log empty reads/writes,Multiple empty reads or writes suggests a problem with the blocking mode. Log them.,Log empty reads/writes,Multiple empty reads or writes suggests a problem with the blocking mode. Log them.
558,Remove parent theme,There is no UI.,Remove parent theme,There is no UI.
559,Log clients connections,Give an id to each client and log their connection and disconnection.,Log clients connections,Give an id to each client and log their connection and disconnection.
560,"Stop the specified device in ""gnirehtet rt""","The command ""./gnirehtet rt [serial]"" started reverse tethering for the specified device, but stopped without specifying the serial. As a consequence, it did not work as expected when several Android devices were plugged. Therefore, pass the serial as stop argument.","Stop the specified device in ""gnirehtet rt""","The command ""./gnirehtet rt [serial]"" started reverse tethering for the specified device, but stopped without specifying the serial. As a consequence, it did not work as expected when several Android devices were plugged. Therefore, pass the serial as stop argument."
561,Handle establish() returning null,"VpnService.Builder.establish() may return null if the application is not prepared or is revoked: https://developer.android.com/reference/android/net/VpnService.Builder.html#establish%28%29 In that case, do not start forwarding in order to avoid a NullPointerException.",Handle establish() returning null,"VpnService.Builder.establish() may return null if the application is not prepared or is revoked: link In that case, do not start forwarding in order to avoid a NullPointerException."
562,Use refactored logs,A call to Log.i() remained in AbstractConnection. Replace it by logi().,Use refactored logs,A call to Log.i() remained in AbstractConnection. Replace it by logi().
563,Log UDP connections opening as INFO,Log UDP connections at the same log level as TCP connections.,Log UDP connections opening as INFO,Log UDP connections at the same log level as TCP connections.
564,Upgrade latest release (v1.0.1) in README,,Upgrade latest release (v1.0.1) in README,
565,"Fix serial management in ""gnirehtet rt""","The command ""gnirehtet rt"" first checks whether the app is installed on the device, and installs it if necessary. However, it didn't forward the serial parameter, so calling ""gnirehtet rt 12345678"" failed to install the application on the selected device when several were plugged. Therefore, forward the serial to apk_require_installed().","Fix serial management in ""gnirehtet rt""","The command ""gnirehtet rt"" first checks whether the app is installed on the device, and installs it if necessary. However, it didn't forward the serial parameter, so calling ""gnirehtet rt 12345678"" failed to install the application on the selected device when several were plugged. Therefore, forward the serial to apk_require_installed()."
566,"Fix ""getopt"" usage in gnirehtet script","The syntax of the shell command ""getopt"" may differ on different systems. Provide the parameters the way which is supported by both versions: https://linux.die.net/man/1/getopt https://developer.apple.com/legacy/library/documentation/Darwin/Reference/ManPages/man1/getopt.1.html Related to https://github.com/Genymobile/gnirehtet/issues/1.","Fix ""getopt"" usage in gnirehtet script","The syntax of the shell command ""getopt"" may differ on different systems. Provide the parameters the way which is supported by both versions: link link Related to link."
567,Move the windows notice in README,The windows details should not be in the project introduction. Move them to a separate section.,Move the windows notice in README,The windows details should not be in the project introduction. Move them to a separate section.
568,Add blog post links to README,,Add blog post links to README,
569,"Suggest gradle ""build"" instead of ""debug""","""gradle build"" builds, run tests, checkstyle and lint.","Suggest gradle ""build"" instead of ""debug""","""gradle build"" builds, run tests, checkstyle and lint."
570,Parameterize the release script for gradle command,"Use the GRADLE environment variable as gradle command. If it is not set, use ./gradlew. As a consequence, this command builds with ""gradle"":     GRADLE=gradle ./release While this command builds with ""./gradlew"":     ./release",Parameterize the release script for gradle command,"Use the GRADLE environment variable as gradle command. If it is not set, use ./gradlew. As a consequence, this command builds with ""gradle"":     GRADLE=gradle ./release While this command builds with ""./gradlew"":     ./release"
571,Add direct link to release,Provide a direct link to the last release in README.,Add direct link to release,Provide a direct link to the last release in README.
572,Enable MagicNumber checkstyle module,"Genymobile requires MagicNumber to be enabled. However, it produces many false-positives, especially with some bitwise operations (widely used in this project): x = value & 0xff; x = value & 0xf000; x = value >> 16;  Extracting 16, 0xff and 0xf000 to separate constants would be insane in these examples. It also consider many numbers as ""magic"" in tests, where we don't want to extract them to a separate constant: int sum = add(12, 34); assertEquals(46, sum);  Therefore, handle these specific cases by disabling the check locally through @SuppressWarnings annotations.",Enable MagicNumber checkstyle module,"Genymobile requires MagicNumber to be enabled. However, it produces many false-positives, especially with some bitwise operations (widely used in this project): x = value & 0xff; x = value & 0xf000; x = value >> 16; Extracting 16, 0xff and 0xf000 to separate constants would be insane in these examples. It also consider many numbers as ""magic"" in tests, where we don't want to extract them to a separate constant: int sum = add(12, 34); assertEquals(46, sum); Therefore, handle these specific cases by disabling the check locally through @SuppressWarnings annotations."
573,Wait a bit after app installation,"Immediately after installation, the intent actions may not be correctly registered yet, so starting the client would fail. Therefore, wait a small delay.",Wait a bit after app installation,"Immediately after installation, the intent actions may not be correctly registered yet, so starting the client would fail. Therefore, wait a small delay."
574,Use ./gradlew in release script,So that jenkins may execute gradle.,Use ./gradlew in release script,So that jenkins may execute gradle.
575,Move the release apk rename to the release script,"Do not custom the gradle build file to rename ""gnirehtet-release.apk"" to ""gnirehtet.apk"". Instead, rename it in the release script.",Move the release apk rename to the release script,"Do not custom the gradle build file to rename ""gnirehtet-release.apk"" to ""gnirehtet.apk"". Instead, rename it in the release script."
576,Use the same syntax as in Genymobile/base,"To avoid unnecessary diffs, use the same pattern as Genymobile/base to apply separate gradle files.",Use the same syntax as in Genymobile/base,"To avoid unnecessary diffs, use the same pattern as Genymobile/base to apply separate gradle files."
577,Make gnirehtet script fail on error,"Like ./release, make ./gnirehtet bash script fail on error without using ""&&"".",Make gnirehtet script fail on error,"Like ./release, make ./gnirehtet bash script fail on error without using ""&&""."
578,Simplify release bash script,"Use ""set -e"" to fail on error, so that we can remove all the trailing ""&&"". Also remove ""cd -"" which is useless (unless the script is sourced). Suggested-by: Aurélien Gâteau agateau@genymobile.com",Simplify release bash script,"Use ""set -e"" to fail on error, so that we can remove all the trailing ""&&"". Also remove ""cd -"" which is useless (unless the script is sourced). Suggested-by: Aurélien Gâteau agateau@genymobile.com"
579,Ignore Firebase App Indexing lint warning,Lint reports:  App is not indexable by Google Search; consider adding at least one Activity with an ACTION-VIEW intent filter.  We don't want it to be indexable. Suppress the warning.,Ignore Firebase App Indexing lint warning,Lint reports: App is not indexable by Google Search; consider adding at least one Activity with an ACTION-VIEW intent filter. We don't want it to be indexable. Suppress the warning.
580,Restrict GnirehtetControlService to privilegied,"We want to avoid the VPN to be started or stopped by anyone, so it must require a permission. Since intercepting the whole network traffic is critical, we want a system permission. In addition, we want to call it from shell, so we need an existing system permission granted to shell: https://github.com/android/platform_frameworks_base/blob/master/packages/Shell/AndroidManifest.xml From the small permissions set matching these conditions, I chose android.permission.WRITE_SECURE_SETTINGS. Note: The following network-related system permissions granted to shell may sound more appropriate:  - android.permission.MANAGE_NETWORK_POLICY  - android.permission.CONNECTIVITY_INTERNAL Unfortunately, they were added only recently, so they are not granted to shell for older versions: https://github.com/android/platform_frameworks_base/commit/6a05eee2bdbabb844f1d63741a0680477ec63546",Restrict GnirehtetControlService to privilegied,"We want to avoid the VPN to be started or stopped by anyone, so it must require a permission. Since intercepting the whole network traffic is critical, we want a system permission. In addition, we want to call it from shell, so we need an existing system permission granted to shell: link From the small permissions set matching these conditions, I chose android.permission.WRITE_SECURE_SETTINGS. Note: The following network-related system permissions granted to shell may sound more appropriate:  - android.permission.MANAGE_NETWORK_POLICY  - android.permission.CONNECTIVITY_INTERNAL Unfortunately, they were added only recently, so they are not granted to shell for older versions: link"
581,Remove lint warnings,"Lint reported:  On SDK version 23 and up, your app data will be automatically backed up and restored on app install. Consider adding the attribute android:fullBackupContent to specify an @xml resource which configures which files to backup.  I considered it, but there is no security reason to do that. Since we don't store anything to shared preferences or database, just disable ""allowBackup"".  Should explicitly set android:icon, there is no default  Gnirehtet does not have any main activity, so there is no need for an icon. Explicitly set it to @null.",Remove lint warnings,"Lint reported: On SDK version 23 and up, your app data will be automatically backed up and restored on app install. Consider adding the attribute android:fullBackupContent to specify an @xml resource which configures which files to backup. I considered it, but there is no security reason to do that. Since we don't store anything to shared preferences or database, just disable ""allowBackup"". Should explicitly set android:icon, there is no default Gnirehtet does not have any main activity, so there is no need for an icon. Explicitly set it to @null."
582,Add VisibilityModifier checkstyle module,Check that fields are always private.,Add VisibilityModifier checkstyle module,Check that fields are always private.
583,Remove GPG-signature from release script,Allow release without signing with GPG.,Remove GPG-signature from release script,Allow release without signing with GPG.
584,Add license to README,,Add license to README,
585,Apply Genymobile rules for gradle files,Organize the gradle build files the way required by Genymobile.,Apply Genymobile rules for gradle files,Organize the gradle build files the way required by Genymobile.
586,Configure checkstyle,,Configure checkstyle,
587,Do not fail release build when no keystore,Produce an unsigned APK when no keystore is defined.,Do not fail release build when no keystore,Produce an unsigned APK when no keystore is defined.
588,"Never fail on ""git describe""","Executing ./release with current HEAD having no tag failed. Make ""git describe"" fallback to abbreviated commit when no tag is available.","Never fail on ""git describe""","Executing ./release with current HEAD having no tag failed. Make ""git describe"" fallback to abbreviated commit when no tag is available."
589,Generate checksum and signature during release,"Provide the SHA-256 of the release file, and gpg-sign it.",Generate checksum and signature during release,"Provide the SHA-256 of the release file, and gpg-sign it."
590,Rewrite README.md and add DEVELOP.md,"Add a page for developers, and rewrite README.md for end-users.",Rewrite README.md and add DEVELOP.md,"Add a page for developers, and rewrite README.md for end-users."
591,Add Apache 2.0 license,,Add Apache 2.0 license,
592,Fix tunnel provider connection temporization,"The mechanism to wait several seconds between connection attempts to provide a tunnel to PersistentRelayTunnel was totally broken. Fix it to wait 5 seconds only before creating a new tunnel, except the very first time.",Fix tunnel provider connection temporization,"The mechanism to wait several seconds between connection attempts to provide a tunnel to PersistentRelayTunnel was totally broken. Fix it to wait 5 seconds only before creating a new tunnel, except the very first time."
593,Make the tunnel persistent on EOF,"PersistentRelayTunnel must recreate a tunnel if the previous one is broken. It did it correctly on IOException, but not on EOF. As a consequence, the client may be left in inconsistent state after a restart of the relay server. Therefore, invalidate the previous tunnel when read() returns -1.",Make the tunnel persistent on EOF,"PersistentRelayTunnel must recreate a tunnel if the previous one is broken. It did it correctly on IOException, but not on EOF. As a consequence, the client may be left in inconsistent state after a restart of the relay server. Therefore, invalidate the previous tunnel when read() returns -1."
594,Fix broken state after RST due to duplicate SYN,"When we received a duplicate SYN (in a state different from SYN_SENT), the connection was reset (the state was set to null and a RST packet was sent). However, contrary to what happens after the other calls to resetConnection(), destroy() was not called. Thus, the TCPConnection state was reset, but the socket channel was not, so it might be left connected. As a consequence, the next call to handleFirstPacket() will set the state to SYN_SENT, leading OP_CONNECT to be set as interesting op in updateInterests(). Registering OP_CONNECT to a socket already connected is incorrect, it will wake up selector.select() at every call, leading to 100% CPU usage. Therefore, call destroy() directly in resetConnection(), since not calling it leaves the TCPConnection in inconsistent state. But then, duplicate SYNs (which are not so uncommon) always reset the connection, making the relaying unusable. To avoid this issue, reset connection only for ""unexpected"" duplicate SYNs, i.e. a SYN having a sequence number different from the one received during the initialization of this connection.",Fix broken state after RST due to duplicate SYN,"When we received a duplicate SYN (in a state different from SYN_SENT), the connection was reset (the state was set to null and a RST packet was sent). However, contrary to what happens after the other calls to resetConnection(), destroy() was not called. Thus, the TCPConnection state was reset, but the socket channel was not, so it might be left connected. As a consequence, the next call to handleFirstPacket() will set the state to SYN_SENT, leading OP_CONNECT to be set as interesting op in updateInterests(). Registering OP_CONNECT to a socket already connected is incorrect, it will wake up selector.select() at every call, leading to 100% CPU usage. Therefore, call destroy() directly in resetConnection(), since not calling it leaves the TCPConnection in inconsistent state. But then, duplicate SYNs (which are not so uncommon) always reset the connection, making the relaying unusable. To avoid this issue, reset connection only for ""unexpected"" duplicate SYNs, i.e. a SYN having a sequence number different from the one received during the initialization of this connection."
595,Factorize connection logs,Every logs in a connection prints the connection details before the message. Factorize this behavior in AbstractConnnection.,Factorize connection logs,Every logs in a connection prints the connection details before the message. Factorize this behavior in AbstractConnnection.
596,Improve logs,Use the appropriate log level and produce consistent messages.,Improve logs,Use the appropriate log level and produce consistent messages.
597,Set default log level to INFO,Do not display DEBUG logs by default.,Set default log level to INFO,Do not display DEBUG logs by default.
598,Make log threshold accessors public,They were declared as private by mistake.,Make log threshold accessors public,They were declared as private by mistake.
599,Add comments for some classes,"Provide some javadoc to explain the purpose of Packetizer, PacketSource, DatagramBuffer and StreamBuffer.",Add comments for some classes,"Provide some javadoc to explain the purpose of Packetizer, PacketSource, DatagramBuffer and StreamBuffer."
600,Improve connections logs,Replace: TCP {/1.2.3.4:5678 -> /8.7.6.5:4321}  by: TCP 1.2.3.4:5678 -> 8.7.6.5:4321  This simplifies postprocessing with awk or sed.,Improve connections logs,Replace: TCP {/1.2.3.4:5678 -> /8.7.6.5:4321} by: TCP 1.2.3.4:5678 -> 8.7.6.5:4321 This simplifies postprocessing with awk or sed.
601,Fix meaningless comments,"Some comments have been automatically refactored along with the method names, leading to meaningless sentences.",Fix meaningless comments,"Some comments have been automatically refactored along with the method names, leading to meaningless sentences."
602,Replace port 1080 to 31416,The port 1080 is often used by SOCKS proxies. Use a port which is unlikely to be used.,Replace port 1080 to 31416,The port 1080 is often used by SOCKS proxies. Use a port which is unlikely to be used.
603,Indicate where to store signing config locally,"In addition to ~/.gradle/gradle.properties, the properties may be stored in ./gradle.properties.",Indicate where to store signing config locally,"In addition to ~/.gradle/gradle.properties, the properties may be stored in ./gradle.properties."
604,"Make ""gnirehtet rt"" install the apk if necessary","If no package ""com.genymobile.gnirehtet"" is installed, execute ""gnirehtet install"" before starting the client.","Make ""gnirehtet rt"" install the apk if necessary","If no package ""com.genymobile.gnirehtet"" is installed, execute ""gnirehtet install"" before starting the client."
605,Improve comments,,Improve comments,
606,"Add simple ""gnirehtet rt"" command","Add a new command ""rt"", which enables reverse tethering for exactly one deivce: it starts both the client and the relay server, and stop them both on Ctrl+C.","Add simple ""gnirehtet rt"" command","Add a new command ""rt"", which enables reverse tethering for exactly one deivce: it starts both the client and the relay server, and stop them both on Ctrl+C."
607,Fix NPE on invalidateTunnel(),"Several calls to invalidateTunnel() may be requested from different threads in PersistentRelayTunnel. As a consequence, tunnel may be null during the execution of close(). Add a check to avoid a NullPointerException.",Fix NPE on invalidateTunnel(),"Several calls to invalidateTunnel() may be requested from different threads in PersistentRelayTunnel. As a consequence, tunnel may be null during the execution of close(). Add a check to avoid a NullPointerException."
608,"Return early if ""adb reverse"" fails","Do not send the START intent if the ""adb reverse"" call failed.","Return early if ""adb reverse"" fails","Do not send the START intent if the ""adb reverse"" call failed."
609,Extract adb and java commands to variables,It makes it easier to customize their path.,Extract adb and java commands to variables,It makes it easier to customize their path.
610,Add a release script,It generates dist/gnirehtet-VERSION.zip.,Add a release script,It generates dist/gnirehtet-VERSION.zip.
611,Change generated apk names,Rename:     app-debug.apk -> gnirehtet-debug.apk     app-release.apk -> gnirehtet.apk,Change generated apk names,Rename:     app-debug.apk -> gnirehtet-debug.apk     app-release.apk -> gnirehtet.apk
612,Upgrade gradle versions,Use Android plugin 2.3.0 (requiring Android build-tools 25) with gradle 3.3.,Upgrade gradle versions,Use Android plugin 2.3.0 (requiring Android build-tools 25) with gradle 3.3.
613,Make gradle tasks use the gnirehtet script,"For consistency, bind gradle convenience tasks to the gnirehtet script.",Make gradle tasks use the gnirehtet script,"For consistency, bind gradle convenience tasks to the gnirehtet script."
614,Add install/uninstall commands to bash script,Provide commands for installing and uninstalling the client on Android devices: ./gnirehtet install [serial] ./gnirehtet uninstall [serial],Add install/uninstall commands to bash script,Provide commands for installing and uninstalling the client on Android devices: ./gnirehtet install [serial] ./gnirehtet uninstall [serial]
615,Locate relay.jar automatically,"Find the relay path automatically in a predefined path list, so that the bash script works both for development and release. In development, it will find relay/build/libs/relay.jar generated by gradle, while in release, it will find relay.jar in the current directory.",Locate relay.jar automatically,"Find the relay path automatically in a predefined path list, so that the bash script works both for development and release. In development, it will find relay/build/libs/relay.jar generated by gradle, while in release, it will find relay.jar in the current directory."
616,Wake up blocking read() using a single UDP packet,"In order to wake up a blocking read() on VPN, we triggered a name resolution request, that in turn sent a UDP packet. However, a name resolution may send several UDP packets successively, because it retries if it gets no response. In that case, some UDP packets may actually be sent over the network, which is unnecessary. Instead, send a single meaningless UDP packet, just for waking up the blocking read().",Wake up blocking read() using a single UDP packet,"In order to wake up a blocking read() on VPN, we triggered a name resolution request, that in turn sent a UDP packet. However, a name resolution may send several UDP packets successively, because it retries if it gets no response. In that case, some UDP packets may actually be sent over the network, which is unnecessary. Instead, send a single meaningless UDP packet, just for waking up the blocking read()."
617,Add gnirehtet bash script,Provide a bash script for starting/stopping the gnirehtet client and server easily.,Add gnirehtet bash script,Provide a bash script for starting/stopping the gnirehtet client and server easily.
618,Add gradle wrapper,"I don't like that, but some people do...",Add gradle wrapper,"I don't like that, but some people do..."
619,Add gradle signing configs for APK release,Provide gradle code to sign release builds.,Add gradle signing configs for APK release,Provide gradle code to sign release builds.
620,Wake up blocking read() on VPN interface,"Neither vpnInterface.close() nor vpnInputStream.close() wake up a blocking vpnInputStream.read(). Therefore, we need to make Android send a packet to the VPN interface (here by requesting a name resolution), so that any blocking read will be woken up. Since the tunnel is closed at this point, it will never reach the network.",Wake up blocking read() on VPN interface,"Neither vpnInterface.close() nor vpnInputStream.close() wake up a blocking vpnInputStream.read(). Therefore, we need to make Android send a packet to the VPN interface (here by requesting a name resolution), so that any blocking read will be woken up. Since the tunnel is closed at this point, it will never reach the network."
621,Expose a persistent relay tunnel,"In addition to manage the packet forwarding, the Forwarder class was also responsible to maintain a valid connection to the relay server (in particular, it had to reconnect it every time it was disconnected). To simplify, provide a PersistentRelayTunnel class handling the reconnections.",Expose a persistent relay tunnel,"In addition to manage the packet forwarding, the Forwarder class was also responsible to maintain a valid connection to the relay server (in particular, it had to reconnect it every time it was disconnected). To simplify, provide a PersistentRelayTunnel class handling the reconnections."
622,Improve log tags,Use simple class names instead of fully qualified class names (e.g. RelayTunnel instead of com.genymobile.gnirehtet.RelayTunnel).,Improve log tags,Use simple class names instead of fully qualified class names (e.g. RelayTunnel instead of com.genymobile.gnirehtet.RelayTunnel).
623,Improve intent logs,Log when the services receive an intent. This will help to debug issues with the STOP request.,Improve intent logs,Log when the services receive an intent. This will help to debug issues with the STOP request.
624,Ignore START if VPN is already started,Starting gnirehtet when the VPN is already established leaves it in an inconsistent state. Just ignore the request in that case. Note that this also ignores any configuration passed to the START request.,Ignore START if VPN is already started,Starting gnirehtet when the VPN is already established leaves it in an inconsistent state. Just ignore the request in that case. Note that this also ignores any configuration passed to the START request.
625,Fix log milliseconds formatting,"Always print the milliseconds on 3 characters, to fix the String representation when there are less than 100 milliseconds (11:22:33.044 instead of 11.22.33.44).",Fix log milliseconds formatting,"Always print the milliseconds on 3 characters, to fix the String representation when there are less than 100 milliseconds (11:22:33.044 instead of 11.22.33.44)."
626,"Provide access to host ""localhost"" via 10.0.2.2","From the device, local addresses like 127.0.0.1 refer to the device itself. Non-local addresses are forwarded through the tunnel to the host. Therefore, there was no way to refer to the host ""localhost"". In particular, on Ubuntu, the default DNS server points to 127.0.1.1. To overcome this problem, map 10.0.2.2 to localhost like the Android emulator does. Therefore, every TCP or UDP connection having 10.0.2.2 as destination will open a socket to InetAddress.getLoopbackAddress() from the host.","Provide access to host ""localhost"" via 10.0.2.2","From the device, local addresses like 127.0.0.1 refer to the device itself. Non-local addresses are forwarded through the tunnel to the host. Therefore, there was no way to refer to the host ""localhost"". In particular, on Ubuntu, the default DNS server points to 127.0.1.1. To overcome this problem, map 10.0.2.2 to localhost like the Android emulator does. Therefore, every TCP or UDP connection having 10.0.2.2 as destination will open a socket to InetAddress.getLoopbackAddress() from the host."
627,Move Relay main to Main,"We will add support for command-line parameters, so move the main method to its own class.",Move Relay main to Main,"We will add support for command-line parameters, so move the main method to its own class."
628,Handle InetAddress instead of Strings,"In order to fail fast, make VpnConfiguration store DNS server addresses as InetAddress instead of String.",Handle InetAddress instead of Strings,"In order to fail fast, make VpnConfiguration store DNS server addresses as InetAddress instead of String."
629,Provide VPN configuration by intent extras,"To make the VPN configurable, pass a VpnConfiguration instance as GnirehtetService intent extra. To be able to configure it from command line, expose configuration options as separate intent extras in GnirehtetControlService. For now, only DNS servers are configurable: adb shell am startservice -a com.genymobile.gnirehtet.START \     --esa dnsServers 8.8.8.8",Provide VPN configuration by intent extras,"To make the VPN configurable, pass a VpnConfiguration instance as GnirehtetService intent extra. To be able to configure it from command line, expose configuration options as separate intent extras in GnirehtetControlService. For now, only DNS servers are configurable: adb shell am startservice -a com.genymobile.gnirehtet.START \     --esa dnsServers 8.8.8.8"
630,Simplify gradle tasks,"Now that the client always reconnects to the Relay server, we can start them in any order. Therefore, expose a simple task to start the client, then the server (which is kept open): gradle start",Simplify gradle tasks,"Now that the client always reconnects to the Relay server, we can start them in any order. Therefore, expose a simple task to start the client, then the server (which is kept open): gradle start"
631,Keep trying to connect to the relay,"When the VPN is started (the START action has been sent), always reconnect to the relay. As a consequence, the Relay server may be started after the client. Even if Relay server is disconnected and reconnected, the client will recover.",Keep trying to connect to the relay,"When the VPN is started (the START action has been sent), always reconnect to the relay. As a consequence, the Relay server may be started after the client. Even if Relay server is disconnected and reconnected, the client will recover."
632,Improve VPN starting,"The VPN was started in service onCreate(). Since we added our own STOP_VPN action, the behavior could be unexpected. Handle both starting and stopping in onStartCommand() instead.",Improve VPN starting,"The VPN was started in service onCreate(). Since we added our own STOP_VPN action, the behavior could be unexpected. Handle both starting and stopping in onStartCommand() instead."
633,Expose GnirehtetControlService,"To expose START and STOP actions to shell, we need a separate Android service (see its Javadoc for details). Now, we can use these commands to control the VPN: adb shell am startservice -a com.genymobile.gnirehtet.START adb shell am startservice -a com.genymobile.gnirehtet.STOP",Expose GnirehtetControlService,"To expose START and STOP actions to shell, we need a separate Android service (see its Javadoc for details). Now, we can use these commands to control the VPN: adb shell am startservice -a com.genymobile.gnirehtet.START adb shell am startservice -a com.genymobile.gnirehtet.STOP"
634,Add global 'debug' gradle task,So that 'gradle debug' builds both the Android client and the relay server.,Add global 'debug' gradle task,So that 'gradle debug' builds both the Android client and the relay server.
635,Update interests only on valid key,"When the key became invalid, do not update interests (it would throw a CancelledKeyException).",Update interests only on valid key,"When the key became invalid, do not update interests (it would throw a CancelledKeyException)."
636,Fix RST and SYN management,"A received RST packet must be ignored if it is out of the client window. A received duplicate SYN packet must be handled before checking that it matches the expected sequence number: of course it does not, if it's a duplicate SYN, it refers to a previous sequence number.",Fix RST and SYN management,"A received RST packet must be ignored if it is out of the client window. A received duplicate SYN packet must be handled before checking that it matches the expected sequence number: of course it does not, if it's a duplicate SYN, it refers to a previous sequence number."
637,Implement packet source consuming,"Connections may use sendToClient(packet) to send a packet to the client. However, this may fail (and return false), e.g. when the client buffer is full. This is ok for our crafted empty packet (ACK, RST, SYN-ACK…), because their loss is gracefully handled. However, we cannot lose packets built from the network socket streams, because there is no way to recover. We also want to avoid new allocations for keeping them, because they would be unlimited. Therefore, instead of sending a packet, a TCPConnection (the packet source) requests the client to pull from it, by calling consume(this). The reading interest from the network socket will be disabled until the client succeeds. As soon as the client buffer get more free space, the client takes the responsability to make another attempts to pull from the pending packet sources.",Implement packet source consuming,"Connections may use sendToClient(packet) to send a packet to the client. However, this may fail (and return false), e.g. when the client buffer is full. This is ok for our crafted empty packet (ACK, RST, SYN-ACK…), because their loss is gracefully handled. However, we cannot lose packets built from the network socket streams, because there is no way to recover. We also want to avoid new allocations for keeping them, because they would be unlimited. Therefore, instead of sending a packet, a TCPConnection (the packet source) requests the client to pull from it, by calling consume(this). The reading interest from the network socket will be disabled until the client succeeds. As soon as the client buffer get more free space, the client takes the responsability to make another attempts to pull from the pending packet sources."
638,Improve logs,"Add several log levels, and improve log messages in the application.",Improve logs,"Add several log levels, and improve log messages in the application."
639,Respect client TCP window,"Do not send packets outside the client TCP window, otherwise they would be dropped and our connection would be broken (since we don't retransmit data).",Respect client TCP window,"Do not send packets outside the client TCP window, otherwise they would be dropped and our connection would be broken (since we don't retransmit data)."
640,Prepare deferred packet sending to client,"A packet built from the data received from the network TCP socket may not be sent to the client for several reasons:  - when the client buffer is full, sendToClient(…) returns false, and    the packet is not sent;  - when the packet sequence number is outside the client window, we must    keep it until the window advances enough. Those packets may not be dropped, because they are received from the network TCP socket: we have the responsability to transmit it, otherwise the whole connection would be broken. Therefore, when a packey may not be sent, keep it, and disable our interest in reading the network TCP socket. When the client is ready to receive more packets, it will call processPacketForClient() (not implemented yet). We must take care of updating the acknowledgement number (we may have received packets since we built our pending IPv4Packet).",Prepare deferred packet sending to client,"A packet built from the data received from the network TCP socket may not be sent to the client for several reasons:  - when the client buffer is full, sendToClient(…) returns false, and    the packet is not sent;  - when the packet sequence number is outside the client window, we must    keep it until the window advances enough. Those packets may not be dropped, because they are received from the network TCP socket: we have the responsability to transmit it, otherwise the whole connection would be broken. Therefore, when a packey may not be sent, keep it, and disable our interest in reading the network TCP socket. When the client is ready to receive more packets, it will call processPacketForClient() (not implemented yet). We must take care of updating the acknowledgement number (we may have received packets since we built our pending IPv4Packet)."
641,Add logs for TCP connections,This helps to understand problems after the fact.,Add logs for TCP connections,This helps to understand problems after the fact.
642,fixup! Fix FIN acknowledgement,,fixup! Fix FIN acknowledgement,
643,Fix FIN acknowledgement,"To acknowledge a FIN, we must send its sequence number + 2:  - +1 because acknowledgement numbers refer to the next expected    sequence number;  - +1 because FIN counts for 1 byte.",Fix FIN acknowledgement,"To acknowledge a FIN, we must send its sequence number + 2:  - +1 because acknowledgement numbers refer to the next expected    sequence number;  - +1 because FIN counts for 1 byte."
644,Add date/time to logs,Print date and time to logs.,Add date/time to logs,Print date and time to logs.
645,Use Packetizer for TCP networkToClient,"For simplification and factorization, replace the buffer manually managed in TCPConnection by the improved Packetizer. Previously, TCP sockets were read into a buffer (2^16 bytes), then split into packets of 1400 bytes. Now, at most MAX_PAYLOAD_SIZE (1400 bytes) will be read from the TCP sockets at once, so there is no need for splitting. This prevents unnecessary copies, but may require more syscalls to read the socket.",Use Packetizer for TCP networkToClient,"For simplification and factorization, replace the buffer manually managed in TCPConnection by the improved Packetizer. Previously, TCP sockets were read into a buffer (2^16 bytes), then split into packets of 1400 bytes. Now, at most MAX_PAYLOAD_SIZE (1400 bytes) will be read from the TCP sockets at once, so there is no need for splitting. This prevents unnecessary copies, but may require more syscalls to read the socket."
646,Improve Packetizer to remove UDPPacketBuilder,"Packetizer may be generalized to support channels so that UDPPacketBuilder become useless. Moreover, this prevents one unnecessary copy to a temporary buffer.",Improve Packetizer to remove UDPPacketBuilder,"Packetizer may be generalized to support channels so that UDPPacketBuilder become useless. Moreover, this prevents one unnecessary copy to a temporary buffer."
647,UDPPacketBuilder,"Following the single responsability principle, move the datagram packet creation to a separate class: UDPPacketBuilder.",UDPPacketBuilder,"Following the single responsability principle, move the datagram packet creation to a separate class: UDPPacketBuilder."
648,Use static when possible in tests,Declare test util methods as static.,Use static when possible in tests,Declare test util methods as static.
649,Optimize StreamBuffer when empty,"To avoid unnecessary copies, StreamBuffer writes at most until the ""end"" of the circular buffer, which is subobtimal (it could have written more data if they have been contiguous). In order to minimize the occurrence of this event, reset the head and tail to 0 when the buffer is empty (no copy is involved). This is especially useful when the StreamBuffer is used to read/write one packet at a time, so the ""end"" of the buffer is guaranteed to never be reached.",Optimize StreamBuffer when empty,"To avoid unnecessary copies, StreamBuffer writes at most until the ""end"" of the circular buffer, which is subobtimal (it could have written more data if they have been contiguous). In order to minimize the occurrence of this event, reset the head and tail to 0 when the buffer is empty (no copy is involved). This is especially useful when the StreamBuffer is used to read/write one packet at a time, so the ""end"" of the buffer is guaranteed to never be reached."
650,Use Packetizer to split TCP stream into packets,Split a TCP stream into packets having at most 1400 bytes of payload (to avoid MTU issues).,Use Packetizer to split TCP stream into packets,Split a TCP stream into packets having at most 1400 bytes of payload (to avoid MTU issues).
651,Packetizer,Provide a packetizer to convert from transport data (level 5) to IP packets (level 3). Its implementation avoids unnecessary copies.,Packetizer,Provide a packetizer to convert from transport data (level 5) to IP packets (level 3). Its implementation avoids unnecessary copies.
652,IPv4PacketBuffer (avoid copies),,IPv4PacketBuffer (avoid copies),
653,Remove NetBuffer,We now use StreamBuffer and DatagramBuffer instead.,Remove NetBuffer,We now use StreamBuffer and DatagramBuffer instead.
654,UDPConnection with ByteBuffer datagram,,UDPConnection with ByteBuffer datagram,
655,Test 0-byte datagram,,Test 0-byte datagram,
656,DatagramBuffer,,DatagramBuffer,
657,Set limit before position,"ByteBuffer validates the position against the limit, so when we change both, we must set the limit first.",Set limit before position,"ByteBuffer validates the position against the limit, so when we change both, we must set the limit first."
658,Fix StreamBuffer.isFull(),"If head points to the last item while tail points to the first, the buffer is full, but isFull() returned false. Compute modulo data.length to fix the problem.",Fix StreamBuffer.isFull(),"If head points to the last item while tail points to the first, the buffer is full, but isFull() returned false. Compute modulo data.length to fix the problem."
659,Split packets by 1300 bytes,,Split packets by 1300 bytes,
660,StreamBuffer,,StreamBuffer,
661,Write Main-Class attribute in MANIFEST.MF,"The gradle plugin ""application"" does not handle that for us.",Write Main-Class attribute in MANIFEST.MF,"The gradle plugin ""application"" does not handle that for us."
662,Detect VPN network,Set underlying network for the applications to detect connectivity.,Detect VPN network,Set underlying network for the applications to detect connectivity.
663,Move util toString() to Binary,,Move util toString() to Binary,
664,Add convenient gradle tasks,"So that we can call ""gradle serverStart"" and ""gradle clientStart"".",Add convenient gradle tasks,"So that we can call ""gradle serverStart"" and ""gradle clientStart""."
665,Convert relay gradle type to application,"So that we can call ""gradle run"".",Convert relay gradle type to application,"So that we can call ""gradle run""."
666,Initial version,,Initial version,
