Index,Commit Message Abstract,Score Abstract,Corresponding Changelog Sentence Abstract,Commit Desription Abstract,Label
1,Allow to set a custom path for client APK,0.77777725, - Make apk path configurable (#90),,1
2,Fix warning,0.5887881, - Fix disconnection notification appearing while gnirehtet has been stopped,"Execute ""cargo update"" to update dependencies for the versions listed in Cargo.toml. Fixes #475 link",0
3,Improve TCPConnection.update_interests(),0.646597, - Do not leak TCP connections (fixes #57),,0
4,Fix IPv4 packet tests after refacto,0.7183813, - discard non-IPv4 packets (#69),The 'version' field is only used in tests (gnirehtet only supports IPv4).,1
5,Update release v2.2 links in README,0.52207065,gnirehtet v2.3,warning: trailing semicolon in macro used in expression position,0
6,Implement TCPConnection.handle_ack(),0.60946286, - Do not leak TCP connections (fixes #57),"The process may stuck because its output buffer is full, but the output was consumed only after the process was terminated, causing a deadlock. Consume process output before waiting for process termination to fix the problem. Refs #369 link Refs #370 link Co-authored-by: tusenpo tusenpo@pinduoduo.com",0
7,Add tests for Packetizer,0.48197573, - Optimize TCP checksum computation,"In the Java version, a datagram was incorrectly rejected if its size was exactly the remaining buffer size (this was harmless). In the Rust version, the datagram buffer considered it had enough space if a packet was 1 byte too big (causing packet overwriting). Refs #345 link",0
8,Expose GnirehtetControlService,0.6332046,Gnirehtet v2.2,,0
9,Use Self to call static methods,0.28494883, - Make reverse tethering starting faster,Signed-off-by: Romain Vimont rom@rom1v.com,0
10,Implement UDPConnection.disconnect(),0.51740456, - Terminate TCP connections gracefully (avoid many garbage packets),,0
11,Wake up blocking read() on VPN interface,0.71013856, - Fix delayed VPN closing,,1
12,Upgrade targetSdkVersion to 29,0.43255916,gnirehtet v2.3,Reported by clippy and rustc. PR #284 link Signed-off-by: Romain Vimont rom@rom1v.com,0
13,Release the mutex for waiting,0.4344883,gnirehtet v2.3,"The buffer size (2^12 bytes) to read a packet from the VPN was smaller than the largest possible packet (2^16 bytes), causing packets to be truncated. Increase the buffer size to fix the problem. Fixes #273 link",0
14,Precompute ConnectionId string,0.46570337, - Fix several race conditions related to client reconnection,,0
15,Implement UDPConnection.is_closed(),0.502955, - Fix possible NullPointerException on VPN starting (link),,0
16,Fix checksum storage,0.44986326, - Optimize TCP checksum computation,,0
17,Statically dispatch connections,0.5547818, - Terminate TCP connections gracefully (avoid many garbage packets),,0
18,Implement TCPConnection skeleton,0.6612702, - Optimize TCP checksum computation,"If verbose is enabled, print the packet size and the 20 first bytes (the IP header) only in a single line.",0
19,Add port -p option to java relay,0.6357107,Add command-line option to use a custom port (#210),,0
20,Upgrade latest release (v1.1) in README,0.4997592,gnirehtet v2.3,"The monitor() function just loops, it cannot fails.",0
21,Log UDP connections opening as INFO,0.4645259, - Improve disconnection detection when the relay server is behind a tunnel,Use the environment variable GNIREHTET_APK to use a custom path for the gnirehtet client. Ref link,0
22,Implement Route.find_route_index(),0.52714264," - Add ""-r ROUTE"" option to reverse tether only specific routes",Use the environment variable ADB to use a custom adb executable.,0
23,Improve destination rewriting,0.50029767," - Add ""-r ROUTE"" option to reverse tether only specific routes",,0
24,Update release v2.5 links in README,0.5333727,gnirehtet v2.3,,0
25,"Revert ""Ignore double-removal of a connection""",0.53187263," - Add ""-r ROUTE"" option to reverse tether only specific routes","Generated by ""cargo update"".",0
26,Pass transport raw for checksum,0.578145, - Optimize TCP checksum computation,The commands to run gnirehet manually have changed since commit f8681809a28a0073f791f0d9eae65da02ae73c3d.,0
27,"Fix all ""cargo clippy"" warnings",0.49289772, - Always log error messages to stderr (fixes #62),"Fix a checkstyle issue: the ""config"" parameter hid the class field.",0
28,Use localabstract socket for tunnel client-side,0.5951656, - Improve disconnection detection when the relay server is behind a tunnel,Add port option to allow multiple instances of the gnirehtet relay to run,0
29,Simplify gradle tasks,0.40321705, - Improve logs,Signed-off-by: Romain Vimont rom@rom1v.com,0
30,Remove useless returns,0.32545632, - Terminate TCP connections gracefully (avoid many garbage packets),Signed-off-by: Romain Vimont rom@rom1v.com,0
31,Improve Selector.deregister(),0.37970242, - Improve logs,Declare permissions before the application tag (to make the linter happy).,0
32,Fix warnings,0.57747716, - Fix disconnection notification appearing while gnirehtet has been stopped,,0
33,Improve command-line arguments parsing,0.5899832, - Handle command-line parsing natively (in Java and Rust),A call to selector.deregister() may (unexpectedly) fail with Rust/MIO: link,0
34,Update links to our articles,0.34185737, - update relay-rust dependencies,Fix #154 - relay dies with AssertionError,0
35,Add debug logs for connection removal,0.5621635, - Improve logs and error messages,"Fix race condition in Java due to timeout from no activity, misses the cleaning deadline by a small number of milliseconds. Fixes link Evidence: Selected keys size 1 now: 1562790544556 nextCleaningDeadline 1562790662669 Selected keys size 0 now: 1562790662667 nextCleaningDeadline 1562790662669 selector.select() returned without any event, an invalid SelectionKey was probably been registered Selected keys size 0 now: 1562790662670 nextCleaningDeadline 1562790662669 Selected keys size 0 now: 1562790722672 nextCleaningDeadline 1562790722670 2019-07-10 16:32:02.673 I UDPConnection: UDP 10.0.0.2:31650 -> 208.67.222.222:53 Close Signed-off-by: Romain Vimont rom@rom1v.com",0
36,Replace statement lambda by expression lambda,0.26110098, - Handle command-line parsing natively (in Java and Rust),"Since Android 9, starting a foreground service requires a permission: Apps wanting to use foreground services must now request the FOREGROUND_SERVICE permission first. This is a normal permission, so the system automatically grants it to the requesting app. Starting a foreground service without the permission throws a SecurityException. link",0
37,Introduce Router,0.5635408," - Add ""-r ROUTE"" option to reverse tether only specific routes","Recent versions of Android refuse to directly start a Service or a BroadcastReceiver, so always use an (invisible) Activity to receive intents. This fixes many cases where the confirmation dialog were not displayed: link",0
38,Fix remaining window,0.40428466, - fix adb monitor on multiple devices (#134),,0
39,Factorize TransportHeader::parse(),0.44446105, - Optimize TCP checksum computation,"Trait objects without ""dyn"" keyword is now deprecated.",0
40,Transfer client id on connection open,0.53632224, - Fix possible NullPointerException on VPN starting (link),,0
41,Implement Route CloseListener,0.57560873," - Add ""-r ROUTE"" option to reverse tether only specific routes","Since commit 9a184b9428f443a01f6194c6c7f683f9c70b05b8, i was incremented twice. Fixes link",0
42,UDPConnection with ByteBuffer datagram,0.519313," - Fix buffer size to avoid ""Not an Ipv4 packet"" error (#273)",The new rustfmt now works in Rust stable.,0
43,Directly use slab,0.28187245,"   so that the intent is always allowed by Android (#112, #117, #146,",The borrow checker is now smart enough :),0
44,Panic on poll failure,0.23470825, - Fix disconnection notification appearing while gnirehtet has been stopped,Use the new syntax from Rust 1.27 for using trait objects.,0
45,Add info log for is_gnirehtet_installed(),0.5269527," - Install the client on ""gnirehtet start"" if necessary",,0
46,DatagramBuffer,0.36506695, - Optimize TCP checksum computation,,0
47,Log packets sent to client,0.5372502, - Improve logs and error messages,"Enable Rust edition 2018, and adapt module usage.",0
48,Keep trying to connect to the relay,0.6139318, - Add a Rust version of the relay server,The @genymobile.com e-mail is not valid for months.,0
49,Expose a method to send raw data to client,0.42673528, - Fix possible NullPointerException on VPN starting (link),Use org.junit.Assert instead of junit.framework.Assert.,0
50,Implement TCPConnection.close(),0.6953183, - Terminate TCP connections gracefully (avoid many garbage packets),"Everything breaks every time a new version of Android, build tools or gradle is available.",0
51,Implement EventHandler for UDPConnection,0.47615302, - Display Android notification on relay server disconnection (link),,0
52,Impl SourceDestination for TransportHeader,0.52157843, - Add a Rust version of the relay server,,0
53,Fix broken state after RST due to duplicate SYN,0.53994286," - Fix ""./gnirehtet rt"" stopping when several devices are connected","Generated by ""cargo update"".",0
54,Disconnect on route closing,0.62808436, - Terminate TCP connections gracefully (avoid many garbage packets),"Rust deprecated the ""current"" rustfmt, because the ""new"" one is available in nightly. One a stable release channel, we cannot use the new one, so make the ""current"" one work by passing ""--force"".",0
55,Store transport_index and payload_index,0.3505634, - update relay-rust dependencies,"Starting a client may involved an apk installation. When several new devices are connected, start them in parallel instead of sequentially.",0
56,Reference our mio fork by a tag,0.33386907,Gnirehtet v2.5,"The old implementation assumed that track-devices provided one device state per packet (the one that have changed). In fact, it always resends the whole list: link Therefore, keep the last connected devices list, parse the new list and start gnirehtet client on new connected devices. Fixes link.",0
57,Move misplaced comment in tests,0.33351502, - Fix several race conditions related to client reconnection,"The Java version had unit tests, but the Rust version had not.",0
58,Drop UDP packet on client buffer full,0.6633339," - Fix buffer size to avoid ""Not an Ipv4 packet"" error (#273)","Like in the Java version, expose a ""static"" read_packet() function, used by next_packet(). This will allow to test packet reading without an AdbMonitor instance.",0
59,"Use explicit ""dyn"" keyword",0.22869176,"   so that the intent is always allowed by Android (#112, #117, #146,",Simplify code syntax in java tests.,0
60,Add swap test for TCP header,0.68896586, - Optimize TCP checksum computation,"Despite not allowing implicitly or explicitly IPv6, some devices forward IPv6 packets, not supported by the relay server, to the VpnService. link) To workaround the issue, do not forward these packets to the relay server. Fixes link. Suggested-by: JGregoryAtiba link",0
61,Make current rustfmt work,0.5559027,Workaround rust/mio issue on MacOS (#136),Fix for potential crash under Android Oreo when sending STOP intent,0
62,Start adb daemon on initial connection failure,0.56498027," - Add ""tunnel"" command to restart only the adb tunnel",,0
63,"Apply code style with ""cargo fmt""",0.44038135,Add command-line option to use a custom port (#210),,0
64,Do not display notification after stop,0.6648959, - Fix disconnection notification appearing while gnirehtet has been stopped,,0
65,Install client on start if necessary,0.8673154," - Install the client on ""gnirehtet start"" if necessary",It contains hashes for multiple files.,1
66,Add connection opening logs,0.5366577, - Improve logs,"Since commit c36fa4d1a1086aa03e56aabae12669f8b1a1a1c4, std::ptr is not used anymore.",0
67,"Remove useless "",""",0.3018377," - Add ""./gnirehtet reinstall"" command","Connection is a trait, so ""*const Connection"" is a fat pointer (128 bits, 64 bits pointing to the instance, 64 bits pointing to the vtable). For some reason (a bug?), in Router::remove(), the connection passed as argument has a vtable different from the (same) connection stored in the ""connections"" field. This has the unexpected consequence that for some x and y: println!(""{:p} == {:p} ? {}"", x, y, ptr::eq(x, y)); prints: 0x7f87a8c3a618 == 0x7f87a8c3a618 ? false Thus, the connection to remove was not found, leading to the panic ""Removing an unknown connection"". Instead, compare only the data part, by casting the fat pointers to thin pointers. See link Thanks to mbrubeck on IRC freenode/##rust, who helped a lot to understand the issue.",0
68,Fix deprecation warnings in tests,0.45961648, - Fix disconnection notification appearing while gnirehtet has been stopped,Log when a connection is removed from the router.,0
69,Optimize StreamBuffer when empty,0.42995915, - Optimize TCP checksum computation,"This reverts commit 10d5e3214043e1c6bab5fd7e81c1933d8d144c45. This does not fix the root cause, so the panic still happens. link",0
70,Implement TCPConnection.handle_first_packet(),0.5817056, - Terminate TCP connections gracefully (avoid many garbage packets),"In a single poll() result, the client may be ready to receive a packet from the device, that will be sent to a specific network connection, and in the same time that connection may be ready to send a packet to the client. There is a possibility that both events will lead to close the connection, and remove it from the router. In that case, the second removal did panic. Instead, remove it only if it does not exist. See:  - link  - link",0
71,Merge pull request #209 from jessedusty/master,0.46251613, - Fix possible disconnection on upload (fixes #43),"When gnirehtet was written, std::ptr::eq() was not available in Rust stable (it has been added in Rust 1.17). Now, we can use it.",0
72,Log error,0.8097579, - Improve logs and error messages,,1
73,Remove Route abstraction,0.60694164," - Add ""-r ROUTE"" option to reverse tether only specific routes","Do not document a specific version, use the latest stable.",0
74,Rename switch to swap,0.4427859," - Rename command ""gnirehtet rt"" to ""gnirehtet run""",,0
75,Use an Activity as entry point,0.7151929,"Use an activity (instead of a broadcast receiver) as entry point,","Generated by ""cargo update"".",1
76,Upgrade relay-rust dependencies,0.9514125, - update relay-rust dependencies,"The TCP connection acked packets received from the device immediately after it stored them into its buffers, but before they were written to the network socket. This made the client wrongly assume that the connection was super-fast, so the upload bandwidth was totally uncorrelated to the network socket bandwidth. As a consequence, the client filled the buffers up to saturation, leading to packet drops, that slowed down uploads dramatically. To make the client adapt the bittrate according to the associated network socket, do not ack the data immediately, but only once it is actually written to the network socket. See issues:  - link  - link",1
77,Provide connection ids in logs,0.5530793, - Improve logs,"When the network socket is closed or when the device sends a FIN, gracefully terminate the connection by following the RFC793 instead of closing without notifying the device. This avoids to receive more unwanted packets from the device, leading to connections open and close on first packet. See schema: link",0
78,Introduce ClientChannel,0.49607503," - Install the client on ""gnirehtet start"" if necessary","The adb monitor (used for ""autostart"" and ""autorun"" commands) already restarted the adb daemon on read/write error (typically, when the daemon is killed). Also restart it on connect error, typically when the daemon is not started when gnirehtet starts.",0
79,Improve gradle debug/release/check tasks,0.52983207, - Improve logs and error messages,"Replace ""anotate"" by ""annotate"".",0
80,Pretty-print binary content,0.27136678,"   #150, #151, #161, #178, #180, #187, #190, #199, #227, #242)","Add two commands to start the gnirehtet client on device connection: - autostart:     track connected devices to start the client on every new     connected device. - autorun:      autostart (in background) + relay. The device connections are detected through the service ""track-devices"" over a socket connected to the adb daemon: link Thanks to autolainen for the solution: link",0
81,Directly pass RelayTunnelListener to constructor,0.6010457, - Add a Rust version of the relay server,Ipv4PacketBuffer handles a byte buffer specifically. Extract the part handling the byte buffer to a separate reusable class.,0
82,Upgrade gnirehtet version to 2.1,0.8406937,Gnirehtet v2.2,"The interrupt module is only used from relay, so it need not be public.",1
83,Wake up blocking read() using a single UDP packet,0.5476732, - discard non-IPv4 packets (#69),Simply return the Result from cmd_relay() instead of handling any error and panic!.,0
84,Use sufficient buffer size,0.57898474," - Fix buffer size to avoid ""Not an Ipv4 packet"" error (#273)",Remove a @SupressWarnings annotation on a method that did not generate a warning.,0
85,Rename interestingOps to interestOps,0.31429535," - Rename command ""gnirehtet rt"" to ""gnirehtet run""","By default, gnirehtet redirects the whole traffic to the relay server. Make it possible to redirect only specific routes, selected by CIDR: ./gnirehtet start -r 192.168.0.0/24 Like the DNS servers options, several routes may be specified, separated by ',': ./gnirehtet start -r 8.8.8.8,192.168.0.0/24",0
86,"Fix serial management in ""gnirehtet rt""",0.6426896, - Fix gnirehtet rt [serial] with several devices plugged,The new gradle plugin now generates the APK in a release/ directory.,0
87,Introduce DatagramSender,0.3726467,Gnirehtet v2.5,"Target SDK version 27 and rename deprecated ""compile"" configuration to ""implementation"".",0
88,"Remove ""get_"" prefix for getters",0.29194617," - Rename command ""gnirehtet rt"" to ""gnirehtet run""","Generated by ""cargo update"" after Cargo.toml has been updated, an adapt usage for log 0.4.",0
89,Build rustrelay through gradle,0.3670411,Gnirehtet v2.4,Use gradle 4.1 and Android studio gradle plug-in 3.0.1.,0
90,Fix TCP checksum header_length,0.73743737, - Optimize TCP checksum computation,"On ""gnirehtet run"", the gnirehtet client was checked and installed (or updated) if necessary. Move this check to ""gnirehtet start"", to guarantee that the client is always up to date.",1
91,Move the release apk rename to the release script,0.5258022, - Make apk path configurable (#90),"Move command implementations to separate functions taking their exact parameter list. This is still a manual argument parsing, but convenient crates (like clap or structopt) make the resulting gnirehtet binary far bigger, and increase compilation time significantly.",0
92,Fix assignment,0.45450366, - Fix several race conditions related to client reconnection,"When the log level is Error, print on stderr instead of stdout. See link.",0
93,Implement Client.send_to_client(),0.42966965, - Fix possible NullPointerException on VPN starting (link),"We first insert the EventHandler to the Slab to get a Token, then use the token to register the handle on the Poll. If the registration fails, we must remove the EventHandler from the Slab.",0
94,Remove duplicate log in Java,0.5416282, - Improve logs,"When the TCP connection received a FIN, it stayed in CLOSE WAIT state without actually moving to LASK-ACK (cf diagram in RFC793: link). Since TCP connection is the TCP peer (from the Android client point of view), there is no need to wait for the network socket to be actually closed, so just flag ""remote closed"" immediately, and bypass the TCP CLOSE WAIT state. Fixes link.",0
95,Merge pull request #26 from JonnyShuali/master,0.4263954, - Fix several race conditions related to client reconnection,"Rust mio 0.6.11, the first release including the patch to support ""empty interest"", is available. Therefore, remove the temporary '[replace]' section in Cargo.toml, and use the last 0.6.x version. Also update other dependencies (generated by ""cargo update""). link",0
96,Explain better how to install adb on Windows,0.60372245, - Make adb path configurable,"Expose a ""tunnel"" command (automatically called by ""start"") to only setup the ""adb reverse"" tunnel.",0
97,Prepare deferred packet sending to client,0.53574216, - Terminate TCP connections gracefully (avoid many garbage packets),"For consistency with the other method names, rename mustInstallApk and must_install_gnirehtet to mustInstallClient and must_install_client.",0
98,Do not panic on deregister(),0.3147201, - Fix disconnection notification appearing while gnirehtet has been stopped,There is no need for a TCP connection between the Android application and the Android-side of the tunnel. A local socket is sufficient.,0
99,Log packet drop as warning,0.6771891, - Improve logs and error messages,The commit 4e1490fe3070134e2200e0e8f936f718a9794959 replaced the service by a broadcast receiver. Update the README accordingly.,0
100,"Stop the specified device in ""gnirehtet rt""",0.7468889," - Fix ""./gnirehtet rt"" stopping when several devices are connected",,1
101,Add TCP checksum test for odd-length payloads,0.7612082, - Optimize TCP checksum computation,,1
102,Fix comment typo,0.3431275, - Improve logs and error messages,"To make Gnirehtet work with Android O, make GnirehtetService foreground, with a permanent notification. When the client fails to connect to the relay server, this permanent notification is used to report the problem.",0
103,Rewrite TCP checksum from header and payload,0.70391613, - Optimize TCP checksum computation,"The start/stop requests were sent by ""am startservice"" and received by GnirehtetControlService. This behavior is incompatible with Android O, which forbids to run the service in the background: See:   link link Therefore, replace GnirehtetControlService by GnirehtetControlReceiver, so that Gnirehtet is controlled by broadcast intents. Suggested-by: Pascal Cans pcans@genymobile.com",1
104,Extract read_packet() from next_packet(),0.3431561, - Handle command-line parsing natively (in Java and Rust),"Yes, in 127.0.0.1, 127 is a magic number. So be it.",0
105,Move argument validation to the parser,0.41115877, - Handle command-line parsing natively (in Java and Rust),"When the buffer is full, self.head equals 0x10000, so converting its value to u16 results in 0. As a consequence, length <= self.head was mistakenly considered false, so the packet was never consumed. As a consequence, the next call to read_from() requested a read with a buffer of 0 bytes, so 0 bytes were read… which was interpreted as EOF, causing client disconnection. See link.",0
106,Rewrite README.md and add DEVELOP.md,0.38032103, - Make apk path configurable (#90),"Port forwarding created by ""adb reverse"" only supports IPv4. Therefore, use 127.0.0.1 instead of the value returned by InetAddress.getLocalhost(), which is ::1 on some devices. See link.",0
107,Add gnirehtet bash script,0.73254836, - Add gnirehtet.cmd script for Windows,"For running the Java version of Gnirehtet, indicate that the JRE is required, not the full JDK.",1
108,Improve scoping,0.46060172, - Improve logs,Some recent files did not include the Apache license header. Include it.,0
109,Make log threshold accessors public,0.5503236, - Improve logs,Add links to the articles about the Rust version.,0
110,Fix log milliseconds formatting,0.5848631, - Improve logs,,0
111,Add Rust checkstyle gradle task,0.45158684, - Handle command-line parsing natively (in Java and Rust),"Generated by ""cargo update"".",0
112,Set Client as Router owner,0.46643096," - Add ""-r ROUTE"" option to reverse tether only specific routes",,0
113,Self-weak for Client,0.39493653, - Fix possible NullPointerException on VPN starting (link),"For consistency, do not execute the gradle task ""releaseRustWindows"" on ""releaseAll"". Instead, explicitly invoke ""releaseRustWindow"" in the ./release script.",0
114,Write Main-Class attribute in MANIFEST.MF,0.274516,Add command-line option to use a custom port (#210),"We checked whether the package ""com.genymobile.gnirehtet"" was present on the device. If absent, ""gnirehtet run"" installed it. However, we must also install the new APK if the installed version does not match. Therefore, parse the output of ""dumpsys package com.genymobile.gnirehtet"" to retrieve the versionCode.",0
115,Exit with non-zero status on error,0.4587418, - Fix disconnection notification appearing while gnirehtet has been stopped,Use the upstream version of mio since this PR has been merged: link,0
116,Rename SHA256SUM.txt to SHA256SUMS.txt,0.38295543, - Add a Rust version of the relay server,"The adb binary is available in the platform-tools for all the operating systems (not only Windows), so reformulate to clarify how to install adb.",0
117,Ignore fmt backup files,0.49999022, - discard non-IPv4 packets (#69),"For Windows users, give more details to install adb easily.",0
118,Check gnirehtet client version,0.81833416," - Detect the client version installed on ""gnirehtet run"" (and reinstall if necessary)","Provide an additional script ""gnirehtet-run"" that executes ""gnirehtet run"" without having to open a terminal manually.",1
119,Extract adb and java commands to variables,0.49018306, - Make adb path configurable,"For consistency and clarity, rename ""gnirehtet"" to ""client"" when it refers to the gnirehtet application running on an Android device.",0
120,Register UDP socket on Selector,0.3988678, - Optimize TCP checksum computation,"Log both the ""starting"" and ""started"" states for the relay server, consistently between Java and Rust.",0
121,Implement StreamBuffer.write_to(),0.3410808, - Make adb path configurable,The normal user don't care about these commands.,0
122,Client event handling skeleton,0.34160295, - Fix several race conditions related to client reconnection,"To detect whether gnirehtet is installed, we check whether the output of ""adb shell pm list packages com.genymobile.gnirehtet"" is empty. However, we must also check its error code, to report the error if the adb command fails.",0
123,"Make ""gnirehtet rt"" install the apk if necessary",0.5893573," - Detect the client version installed on ""gnirehtet run"" (and reinstall if necessary)","In CommandExecutionError, ""command"" was ambiguous, it referred both to:  - a gnirehtet command (start, stop, run, relay…),  - a process command (the execution of ""adb something""). CommandExecutionError was either an Io error or a Status error. When it is a process Io error, we want to report the failing command. Therefore, refactor the CommandExecution enum with 3 values:  - ProcessIo,      // io::Error due to process command execution  - ProcessStatus,  // a process command returned with non-zero value  - Io              // any other io::Error Thus, ProcessIo can provide the failing command, to be reported to the user. Also, move all the execution error classes to a separate module.",0
124,Fix version/length peek,0.50726223,gnirehtet v2.3,Log the adb command-line executed to check whether gnirehtet is installed on the device.,0
125,Add tests for IPv4Packet,0.62837917, - Force IPv4 for tunnel connection (fixes #42),The method transport_header_data() return has been changed from &Option<…> to Option<&…>. Fix the tests accordingly.,0
126,Factorize code to send empty TCP packet to client,0.70724833, - Optimize TCP checksum computation,,1
127,IPv4PacketBuffer (avoid copies),0.75939417, - discard non-IPv4 packets (#69),Update requirements to reference the last Rust environment version.,1
128,Rename config field,0.52339417," - Rename command ""gnirehtet rt"" to ""gnirehtet run""","To route a packet to an existing connection, the Router only needs the headers data, not the whole headers (which include a reference to the raw array accessible through a ""borrowing view""). The whole headers are necessary only when it creates a new connection. Therefore, make Router use references to headers data directly until it has to create a new Connection.",0
129,Handle gnirehtet commandline in rustrelay,0.61464477," - Rename command ""gnirehtet rt"" to ""gnirehtet run""",Upgrade Android tools to 2.3.3 and target API 26.,0
130,Enable MagicNumber checkstyle module,0.36333567, - Optimize TCP checksum computation,Update README and DEVELOP to document the Rust relay server.,0
131,Add gradle signing configs for APK release,0.4786267,gnirehtet v2.3,Use a target TAG for logs in Main.,0
132,Update release v2.1 links in README,0.5252479,gnirehtet v2.3,"The interruption handler attempted to make the relay() call complete, so that gnirehtet exited normally. This added a lot of complexity, and was not free of race conditions: in the ctrlc crate implementation, the user handler is not called from the OS handler, so setting a flag in the user handler was inherently racy. Instead, just call exit() from the interrupt handler. This is far more simple and works perfectly.",0
133,Remove GPG-signature from release script,0.4686789,Gnirehtet v2.4,"Exit gnirehtet with:  - 1 on unknown command,  - 2 on bad arguments,  - 3 on execution error.",0
134,Implement StreamBuffer.read_from(),0.31556752, - Handle command-line parsing natively (in Java and Rust),Use specific types instead of mio::*.,0
135,Add direct link to release,0.41088158, - Fix possible disconnection on upload (fixes #43),"The weak variable refers to the TunnelServer instance, not the client.",0
136,Log packet data as verbose logs,0.5528012, - Improve logs,"Remove mutability on EventHandler::on_ready(), so that the Selector need not to manage its own interior mutability. This removes two unnecessary layers in Selector at runtime (RefCell and Box). In return, each EventHandler implementation need to mutably borrow their ""owner"" to dispatch a mutable on_ready().",0
137,Move poll interruption handling to Main,0.43091524, - Fix disconnection notification appearing while gnirehtet has been stopped,And update gnirehtet for slab API changes.,0
138,Implement read_length() and read_version(),0.35251966, - Handle command-line parsing natively (in Java and Rust),"Use ""cargo fmt"" to detect checkstyle errors.",0
139,Log with explicit TAG in Main,0.4689624, - Improve logs,"The last optimization broke TCP checksums, in a way that was not captured by unit tests. In an unsafe block, we computed an offset of (payload_length - 1). However, payload_length is u16 (unsigned), so the result was wrong when payload_length is 0. Fix the offset, and add a unit test for checksuming empty payloads.",0
140,Fix tests,0.46938974, - Fix several race conditions related to client reconnection,"Use raw pointers to iterate over the raw array directly, instead of using indices and calling get_unchecked(). This reduces the checksum computation time by ~4% (the bench takes ~770ms instead of ~800ms on my computer).",0
141,Rc/RefCell for EventHandlers in Slab,0.36957982, - Fix several race conditions related to client reconnection,"Iterate using usize indices, instead of converting the index to usize for each iteration. This reduces the checksum computation time by ~20% (the bench takes ~800ms instead of ~1000ms on my computer).",0
142,Borrow raw data as non-mutable in Packetizer,0.5161364, - discard non-IPv4 packets (#69),"The IP header_length was used instead of the TCP header_length in the Rust version. This had no consequences since in practice they are the same in gnirehtet (20 bytes), but this was still a bug.",0
143,Pass route key to connections,0.5519864," - Add ""-r ROUTE"" option to reverse tether only specific routes","The message ""Starting relay server..."" was logged twice (once before calling relay() and once in relay()).",0
144,Expose a persistent relay tunnel,0.7809365, - Improve disconnection detection when the relay server is behind a tunnel,"The ""rt"" command has been renamed to ""run"". To ease the transition, indicate that the command has been renamed.",1
145,Packetizer,0.52089417, - discard non-IPv4 packets (#69),Remove a duplicate empty line in IPv4Packet.java.,0
146,Fix IPv4PacketBuffer condition,0.7379447," - Fix buffer size to avoid ""Not an Ipv4 packet"" error (#273)","Since commit 75fa09ba94012b5251b11799e8c5227223cca803, SelectorAlarm has been replaced by a timeout.",1
147,Upgrade gradle versions,0.63141006,Gnirehtet v2.1,"For consistency with the Android and Java projects, add a ""build"" tasks that run checks and build both debug and release versions.",0
148,Introduce TCPConnection,0.66213334, - Optimize TCP checksum computation,"Move ""relay"" to ""relay-java"" and ""rustrelay"" to ""relay-rust"".",0
149,Bump version to 2.3,0.65879977,gnirehtet v2.3,"Rename ""gnirehtet rt"" to ""gnirehtet run"", more meaningful.",0
150,"Format code with ""cargo fmt""",0.4148097,Add command-line option to use a custom port (#210),"The IP packets built by gnirehtet were at most 1440 bytes. When possible, use bigger packets to avoid overhead and reduce CPU usage. Typically, when downloading a big file from the host (accessible via 10.0.2.2), adb (used for ""adb reverse"") and gnirehtet consumed a lot of CPU. With bigger packets, they consume a bit less. Therefore, we want to send bigger packets to the VpnService interface having an accordingly higher MTU value. It is tempting to configure the highest possible packet length (0xFFFF, or 65535 bytes). However, use a MTU value of 0x4000 instead: with higher values like 0x8000 or 0xFFFF, or with lower values like 1500, the performances decrease dramatically (for unknown reasons). Here are some (very) approximate measurements (with ""top"") of the host CPU usage while downloading a file hosted on Apache on my laptop, from Firefox on a Nexus 5 having AOSP 6.0.1 (opening the URL link):                                     gnirehtet                              adb   java   rust before checksum improvements   ~56%   ~17%   ~11%            before this commit   ~56%   ~13%   ~ 7%             after this commit   ~36%   ~ 5%   ~ 2%               with ""adb push""   ~41% (but transfers at a higher rate)                              (lower is better)",0
151,Introduce DeathListener,0.3903763,gnirehtet v2.3,"Contrary to the current Rust implementation, the IP checksum in Java has room for optimization. Like for the TCP checksum, access the raw byte[] array without using a ByteBuffer, and compute 16-bit values from two 8-bit values manually. The new implementation runs ~1.5× faster (i.e. it takes 64% of the time required by the old implementation).",0
152,Rename raw to transport_raw,0.467485, - Add a Rust version of the relay server,Add a benchmark for IP checksum computation in Java. Implement it alone in a separate commit so that it is easier to compare results before and after optimizations.,0
153,Do not reregister unnecessarily,0.41435814, - Fix several race conditions related to client reconnection,"Like in the Rust implementation, we need to optimize checksums computation. The main source of optimization resides in accessing the raw byte[] without using a ByteBuffer, computing 16-bit values from two 8-bit values manually. Contrary to what we measured in Rust, summing high-order and low-order bytes separately to do the shift operation only once has no performance impact. Therefore, do not implement it that way. The new implementation runs ~2.5× faster (i.e. it takes 39% of the time required by the old implementation). However, the Rust implementation runs ~2,7× faster than the Java one.",0
154,Implement TCP connection reset,0.7119285, - Terminate TCP connections gracefully (avoid many garbage packets),Add a benchmark for TCP checksum computation in Java. Implement it alone in a separate commit so that it is easier to compare results before and after optimizations.,1
155,Fix style,0.37726343," - Add ""./gnirehtet reinstall"" command","For summing array items, use unchecked accesses to the array, in order to avoid bounds checking for every value. This runs ~4.1× faster than with bounds checking (i.e. it takes ~24% of the time necessary when bounds checking is enabled). Overall (including the previous optimizations), the resulting implementation is ~18× faster (it runs in 5.5% of the time required by the old implementation). Since this is the most CPU-intensive task, gnirehtet uses significantly less CPU than before.",0
156,UDPPacketBuilder,0.42703217,gnirehtet v2.3,"Checksums computation is the most CPU-intensive task in gnirehtet, so it needs to be optimized. Firstly, do not use a Cursor (a non-zero-cost abstraction). Secondly, for summing 16-bit values, sum high-order and low-order bytes separately. This allow to do the shift operation only once (instead of once per value). The new implementations runs ~4.4× faster (i.e. it takes ~23% of the time required by the old implementation).",0
157,Expose Connection.is_closed(),0.5022128, - Fix possible NullPointerException on VPN starting (link),Add a benchmark for TCP checksum computation in Rust. Implement it alone in a separate commit so that it is easier to compare results before and after optimizations.,0
158,Add test for fragmented packet in IPv4PacketBuffer,0.6740569," - Fix buffer size to avoid ""Not an Ipv4 packet"" error (#273)","Put a short value having its sign bit set in the payload, so that a signedness mistake in the checksum computation will be catched.",0
159,Remove empty line (code style),0.32090843, - Handle command-line parsing natively (in Java and Rust),"Using our own fork of mio, we referenced the version using the branch name ""empty_interest"". However, this branch is susceptible to be rebased, breaking our history. Instead, use a tag that will never be moved.",0
160,Remove dead code,0.35928994, - discard non-IPv4 packets (#69),The variable containing the mutable slice to the raw packet does not need to be mutable itself.,0
161,Add DatagramBuffer tests,0.38001645, - Fix several race conditions related to client reconnection,"A blocking call may return an Err having ""Interrupted"" as kind(), typically when the user press Ctrl+C in ""gnirehtet rt"". The error was thrown and the relay server was interrupted. However, an ""Interrupted"" error may occur in other cases. Concretely, using a cpuprofiler causes poll() to generate such errors sometimes. Therefore, retry on ""Interrupted"" when no interruption was requested by the user.",0
162,Remove useless parentheses,0.25590825, - Fix several race conditions related to client reconnection,"In order to regularly clean up UDP connections, we wake up a blocking poll with a timeout. When the timeout is not positive, poll with a timeout of 0 (Some(0)), not without any timeout (None).",0
163,Add tunnel command,0.71838176," - Add ""tunnel"" command to restart only the adb tunnel",Replace writes to stderr by error logs.,1
164,Notify disconnections from the relay server,0.7609111, - Improve disconnection detection when the relay server is behind a tunnel,Log the adb commands executed by the Rust version the same way as the Java version.,1
165,Make module interrupt private,0.36471993," - Add ""autostart"" and ""autorun"" commands to start on device connection","The same way there is a ""reinstall"" command that uninstalls then installs, create a ""restart"" command that stops and starts.",0
166,"Provide access to host ""localhost"" via 10.0.2.2",0.5041921, - Add a Rust version of the relay server,"ConnectionId is immutable, but its string representation was recomputed for every log. Instead, compute the string once on construction.",0
167,DatagramBuffer skeleton,0.30197525, - Improve logs,Prepend the license to .rs files.,0
168,Implement UDPConnection.process_receive(),0.45576462, - Optimize TCP checksum computation,"Generated by ""cargo update"".",0
169,Improve log tags,0.80963427, - Improve logs,"As an optimization, do not call the underlying async I/O API (Java NIO and mio) when the interests have not changed. This also prevents mio to trigger problematic spurious events on Windows. See link.",1
170,Optimize Rust TCP checksum by avoiding conversions,0.8392088, - Optimize TCP checksum computation,The Error or Hup events are expected when registered with no interests. Logging them as debug is sufficient.,1
171,Reduce CPU usage by tweaking MTU value,0.4680423, - Optimize TCP checksum computation,,0
172,Update documentation for the Rust version,0.6107509, - Add a Rust version of the relay server,"For consistency with the Java NIO API, rename the variable containing the interests.",0
173,Move closing log to disconnect(),0.4881776, - Improve logs,"The SocketChannel/TcpStream was registered with some interests, but they were never used, because they are updated on first packet received. Therefore, make this behavior explicit by setting empty interests.",0
174,Improve Packetizer to remove UDPPacketBuilder,0.54070795, - discard non-IPv4 packets (#69),Log the UDP interests in the same way as for TCP.,0
175,Improve logs,0.9888049, - Improve logs,"The remaining client window is invalid until the connection is established. Therefore, make may_read() return false directly in that case, without relying on remaining_client_window().",1
176,"Return early if ""adb reverse"" fails",0.42775983, - Make adb path configurable,"For consistency, do not prefix method names by ""get_"".",0
177,Replace static by const for TAGs,0.35408026," - Rename command ""gnirehtet rt"" to ""gnirehtet run""","Currently, the mio library does not accept registering a handle with empty interest. As a workaround, we provided a wrapper that exposed an API that did, calling deregister/reregister internally as necessary. However, this workaround does not work on Windows, because deregister/reregister is not implemented: link Therefore, make mio accept empty interest directly: link This is implemented in our own fork, unless this change is accepted upstream or we manage to find a solution that works with the upstream version.",0
178,Move events out of the loop,0.38784254, - Make reverse tethering starting faster,"Generated by ""cargo update"".",0
179,Implement TCPConnection.handle_duplicate_syn(),0.6238531, - Optimize TCP checksum computation,"Upgrade ""release"" script to generate both the java and the rust version of gnirehtet.",0
180,Ignore event if already closed,0.38211495, - fix possible crash on Android O on stop intent (#129),Wait the completion of the handler execution properly with a condition variable instead of an arbitrary sleep of 1 second.,0
181,Pave the way to compute packet checksum,0.7267643, - Optimize TCP checksum computation,"On Ctrl+C, poll() will return an error with ErrorKind::Interrupted. Instead of handling it locally, throw it up until main, which catch the error. In case of interruption, wait a bit before exiting, so that the handler execution is complete. This avoids to print logs to the terminal after the prompt is available.",1
182,ReadAdapter for DatagramReceiver,0.37705526, - Optimize TCP checksum computation,"The name ""start"" suggested it is started asynchronously (like in the Java thread API), but relay is running synchronously.",0
183,Fix StreamBuffer.isFull(),0.47900528, - Always log error messages to stderr (fixes #62),,0
184,Client skeleton,0.3682185, - Fix several race conditions related to client reconnection,Log new connections as info.,0
185,Fix sequence number after sending,0.41809198, - Fix several race conditions related to client reconnection,"For consistency, use Self for calling associated functions in the same class.",0
186,"Indicate ""JRE"" for required Java version",0.40391174, - Handle command-line parsing natively (in Java and Rust),"Expose gnirehtet commands directly in the rustrelay executable, so that there is no need for a wrapping shell script. Consequently, rename rustrelay to gnirehtet (to generate a binary named ""gnirehtet"" or ""gnirehtet.exe"").",0
187,Fix StreamBuffer tests,0.4895667, - Improve logs and error messages,"Format code with ""cargo fmt"".",0
188,Extract the poll-loop into a separate method,0.23987588, - Handle command-line parsing natively (in Java and Rust),"The 'release' gradle task should not depend on 'test' or 'check'. Instead, request explicitly to execute 'check' in the ./release script. Rename rust task 'build' to 'debug' for consistency, and expose 'check' tasks to the root project.",0
189,Call router methods from Client,0.5545317, - Terminate TCP connections gracefully (avoid many garbage packets),Use cargo to generate rustrelay.exe for Windows from Linux.,0
190,Optimize Java IP checksum,0.7285577, - Optimize TCP checksum computation,"Expose gradle tasks that just delegates to ""cargo"", so rustrelay may be built along with the other parts of gnirehtet.",1
191,Rename mod eventhandler to selector,0.36810875, - Fix several race conditions related to client reconnection,"Spurious events are frequent on Windows. This is the expected behavior, so there is no need to warn.",0
192,Restrict GnirehtetControlService to privilegied,0.45494437,Gnirehtet v2.2,Use the same log level in both java and rust versions of the relay server.,0
193,Refactor functions not to mutably borrow self,0.30792955, - Make reverse tethering starting faster,Remove unused import and unnecessary mut.,0
194,Add install/uninstall commands to bash script,0.5903214," - Add ""./gnirehtet reinstall"" command",Poll::poll() may return without events: link Do not panic if that happens.,0
195,Add more tests to StreamBuffer,0.43045384, - Improve logs and error messages,"poll() may generate spurious events: link Thus, even on a readable or writable event, a call to read() or write() may fail with WouldBlock. In that case, we must ignore them: link",0
196,Make StreamBuffer.read_from() return Result,0.29869628, - Optimize TCP checksum computation,"For consistency, use Self to call static methods (associated functions).",0
197,Fix binary packet to string (java),0.47129887, - Handle command-line parsing natively (in Java and Rust),Cargo.lock should be committed for binaries: link,0
198,Fix is_gnirehtet_installed() error handling,0.6449112, - Fix disconnection notification appearing while gnirehtet has been stopped,"The command ""cargo fmt"" backups files to *.rs.bk. Ignore them in git.",0
199,Use ./gradlew in release script,0.5367123, - Add gnirehtet.cmd script for Windows,"To remove the expired connections, the Vec were iterated forward, and its current item was removed when is_expired(). This was incorrect, because a removal impacts indices of items not handled yet. To fix the problem, iterate over the connections backwards.",0
200,"Add rust gradle ""build"" task",0.4937628," - Add ""./gnirehtet reinstall"" command",,0
201,Use Rust edition 2018,0.5890504, - Add a Rust version of the relay server,"The Rust standard library contains the following types:  - TcpStream  - UdpSocket  - IpAddr  - Ipv4Addr For naming consistency, change the case in the following type names:  - IPv4Header -> Ipv4Header  - IPv4HeaderData -> Ipv4HeaderData  - IPv4HeaderMut -> Ipv4HeaderMut  - IPv4Packet -> Ipv4Packet  - TCB -> Tcb  - TCPConnection -> TcpConnection  - TCPHeader -> TcpHeader  - TCPHeaderData -> TcpHeaderData  - TCPHeaderMut -> TcpHeaderMut  - TCPState -> TcpState  - UDPConnection -> UdpConnection  - UDPHeader -> UdpHeader  - UDPHeaderData -> UdpHeaderData  - UDPHeaderMut -> UdpHeaderMut",0
202,Remove unused method,0.27591863," - Fix ""Removing an unknown connection"" crash in the Rust version",Log the ErrorKind along with the error message.,0
203,Rename IPv4Packet::new() to parse(),0.623299, - discard non-IPv4 packets (#69),"An event may be received while the client or connection is already closed. For instance, when poll() generates several events, handled successively, the first handler may close the connection associated to the second handler. Therefore, ignore the event when the ""closed"" flag is set.",0
204,Add a missing space in logs,0.5943166, - Improve logs,"Relay does not need to know the internals, it now just calls selector.poll() followed by selector.run_handlers().",0
205,Fix code style,0.3594475, - Fix several race conditions related to client reconnection,"A call to poll() may generate several events, that we handle successively. There was a race condition on deregistration. Suppose that poll() generated two events:  - Token(1) a Client  - Token(2) a TCPConnection (associated to the client) During execution of the handler associated to Token(1), the  TCPConnection is closed, leading to a call to  selector.deregister(Token(2)). Then, we want to execute the handler associated to Token(2) (the second  event), but since it has been deregistered, it does not exist anymore,  and panic! To avoid this problem, make Selector.deregister() mark the handlers as  removed, but kept in selector.handlers until all current event handlers  are executed.",0
206,Improve IPv4PacketBuffer multi-packets tests,0.6323598, - discard non-IPv4 packets (#69),"The reregister() method must only be called when the handler was already registered. This was harmless though, because it is registered in the if-block, but reregistered() should definitely not be called in that case.",0
207,Handle pending packet source,0.5983018, - discard non-IPv4 packets (#69),"Like in other places, extract tcp_heaer without ""if let"". For that purpose, move headers instead of borrowing them.",0
208,Introduce SourceDestination trait,0.33248025,Gnirehtet v2.5,,0
209,Merge disconnect() and close(),0.42316484, - Make reverse tethering starting faster,,0
210,Mutable handlers,0.3218372, - Make reverse tethering starting faster,,0
211,Provide views for TransportHeader,0.4229709, - Add a Rust version of the relay server,,0
212,Introduce TunnelConnection,0.6821207, - Improve disconnection detection when the relay server is behind a tunnel,,0
213,Introduce PacketStorage,0.5458466, - discard non-IPv4 packets (#69),"When the client buffer is full, we need to ""disable"" the TCPConnection until the client ""pulls"" the pending packet.",0
214,Fix StreamBuffer.read_from(),0.4137245, - Always log error messages to stderr (fixes #62),,0
215,Implement UDPConnection skeleton,0.43037164, - Optimize TCP checksum computation,,0
216,Move util toString() to Binary,0.3544954, - Handle command-line parsing natively (in Java and Rust),,0
217,Make case consistent with standard library,0.31888425, - Handle command-line parsing natively (in Java and Rust),"Poll does not accept to register an empty Ready. For simplifying its usage, expose an API that does.",0
218,Remove useless return type,0.24283731, - Always log error messages to stderr (fixes #62),,0
219,Use Packetizer for TCP networkToClient,0.70906174, - Terminate TCP connections gracefully (avoid many garbage packets),,1
220,Ack only once data is written to network socket,0.4990209, - Do not leak TCP connections (fixes #57),,0
221,Rename to must_install_client,0.5096482," - Add ""./gnirehtet reinstall"" command",,0
222,Implement EventHandler for TunnelServer,0.5977435, - Improve disconnection detection when the relay server is behind a tunnel,,0
223,Replace reference packet by headers,0.40010995, - discard non-IPv4 packets (#69),,0
224,Improve IPv4PacketBuffer.next(),0.6831267," - Fix buffer size to avoid ""Not an Ipv4 packet"" error (#273)",,0
225,Simplify release bash script,0.44045848, - Add gnirehtet.cmd script for Windows,,0
226,Use Vec::new(),0.3584082,Gnirehtet v2.5,,0
227,Wait a bit after app installation,0.38277525," - Detect the client version installed on ""gnirehtet run"" (and reinstall if necessary)","A connection (e.g. TCPConnection) has a Rc/RefCell to its client. When a Client sends a TCP packet, the TCPConnection may immediately reply (typically with an empty packet with flags set). However, the TCPConnection may not borrow its client RefCell, since the client is already borrowed by the caller. As a consequence, the caller must give the possibility to reply a packet immediately. Therefore, provide ClientChannel, a lifetime-bounded view of the client StreamBuffer, so that the connection may send packets to the borrowed client.",0
228,Replace System.out.println() by logv(),0.47478533, - Improve logs,There is no reason for the distinction between disconnect() and close().,0
229,Implement From<> for TransportHeader,0.4435624, - Add a Rust version of the relay server,The method update_interests() should never be called when the connection is closed.,0
230,Improve TCP checksum tests,0.81305027, - Optimize TCP checksum computation,,1
231,Update rustfmt usage,0.5629083,Workaround rust/mio issue on MacOS (#136),So that the Router may remove the connection without using a callback.,0
232,Minor test style improvement,0.3678726, - Improve logs,"Contrary to Java/NIO, mio::Poll exposes only ""readable"" and ""writable"" events. The event ""connectable"" is in fact the very first ""writable"" event.",0
233,Replace SelectorAlarm by a simple timeout,0.39276892, - Fix several race conditions related to client reconnection,Use different packet length and headers so that parse_multi_packets() detects issues with ptr::copy().,0
234,Make the tunnel persistent on EOF,0.5163076," - Add ""tunnel"" command to restart only the adb tunnel",,0
235,Implement Packetizer.inflate(),0.45189494," - Fix buffer size to avoid ""Not an Ipv4 packet"" error (#273)",,0
236,Retry on Interrupted error,0.5149955, - fix possible crash on Android O on stop intent (#129),,0
237,Refactor command-line parsing,0.60025454, - Handle command-line parsing natively (in Java and Rust),,0
238,Assume !closed in update_interests(),0.2933902, - Fix connection hang on large uploads (fixes #79 and #84),,0
239,Rename header to ipv4_header,0.50413436, - discard non-IPv4 packets (#69),,0
240,Give id to clients,0.31034744," - Install the client on ""gnirehtet start"" if necessary",,0
241,Use Self for associated functions,0.27071452,"   so that the intent is always allowed by Android (#112, #117, #146,",,0
242,Log UDP interests,0.48534495, - Improve logs,,0
243,Implement UDPConnection::new(),0.44588876, - Fix possible NullPointerException on VPN starting (link),,0
244,Simplify u32 annotation,0.36881852,Gnirehtet v2.5,,0
245,Make StreamBuffer.read_from() always succeed,0.3357051, - Optimize TCP checksum computation,,0
246,Optimize Java TCP checksum,0.8984477, - Optimize TCP checksum computation,This avoids one level of indentation everywhere.,1
247,Implement client id initialization,0.48242554," - Install the client on ""gnirehtet start"" if necessary",So that we can get a mut ref to the handler without removing it from the Slab.,0
248,Handle establish() returning null,0.39262685, - Fix possible NullPointerException on VPN starting (link),,0
249,Implement TCPConnection.process_receive(),0.6487664, - Optimize TCP checksum computation,,0
250,UDP connection expiration,0.554573, - Terminate TCP connections gracefully (avoid many garbage packets),"To remove itself from the router, pass connection ""self"" instead of ""id"" to Router.remove(). That way, the router may remove the connection by comparing pointers instead of borrowing to compare ids. This avoids runtime panic when the connection is already mutably borrowed.",0
251,Remove Route.close_listener,0.58185756, - Terminate TCP connections gracefully (avoid many garbage packets),Use a structure to know whether the current event handler has to be re-inserted to the Slab once executed.,0
252,Use log crate,0.6599271, - Improve logs,,0
253,Improve comments,0.43581975, - Improve logs and error messages,Provide macros to log connection messages with the connection id.,0
254,Remove connections without borrowing,0.5455876, - Terminate TCP connections gracefully (avoid many garbage packets),,0
255,Do not leak EventHandler if Poll::register() fails,0.44230497, - Fix possible NullPointerException on VPN starting (link),,0
256,Update release v2.0 links in README,0.51966625,gnirehtet v2.3,,0
257,Use mio from upstream,0.38382137,Workaround rust/mio issue on MacOS (#136),,0
258,Use Self in constructors,0.2560875,"   so that the intent is always allowed by Android (#112, #117, #146,",,0
259,Remove NetBuffer,0.49367383, - discard non-IPv4 packets (#69),We don't use it.,0
260,Fix u16 overflow in IPv4PacketBuffer,0.70254433," - Fix buffer size to avoid ""Not an Ipv4 packet"" error (#273)",TCP numbers are designed to wrap-around on overflow.,1
261,Add more packet data logs,0.5362264, - Improve logs,,0
262,Use slab to store event handlers,0.3240003, - Add a Rust version of the relay server,,0
263,Expose ranges in IPv4Packet,0.68344593, - discard non-IPv4 packets (#69),,0
264,Merge pull request #129 from jo215/master,0.4618626, - Fix possible disconnection on upload (fixes #43),,0
265,"Rename ""gnirehtet"" to ""client"" where relevant",0.6817645," - Rename command ""gnirehtet rt"" to ""gnirehtet run""",,0
266,Provide VPN configuration by intent extras,0.64483726, - Fix delayed VPN closing,This reverts commit ae1914c873dcd6e449d10459054740f4edc97e50. (useless),0
267,Simplify run command in Rust,0.59070754, - Handle command-line parsing natively (in Java and Rust),This requires to store a self-weak.,0
268,Log errors using logger,0.8080764, - Improve logs and error messages,"Implement a mechanism similar to enabled_shared_from_this in C++, so that a client instance may access its Rc owner, e.g. to register itself somewhere.",1
269,Add test for IPv4PacketBuffer,0.6103557," - Fix buffer size to avoid ""Not an Ipv4 packet"" error (#273)",,0
270,Update relay-rust dependencies,0.9920194, - update relay-rust dependencies,,1
271,Update rustrelay dependencies,0.64690006," - Fix ""Removing an unknown connection"" crash in the Rust version",,0
272,Implement TCPConnection.handle_packet() skeleton,0.5780413, - Optimize TCP checksum computation,,0
273,Dynamically dispatch connections,0.52854913, - Improve disconnection detection when the relay server is behind a tunnel,,0
274,Wrap seq/ack numbers to accept overflow,0.36488432, - Fix several race conditions related to client reconnection,IPv4Packet is always a view on a pre-existing buffer. PacketStorage aims to give the possibility to store a copy of a packet.,0
275,Locate relay.jar automatically,0.5408196, - Add a Rust version of the relay server,So that we can send a raw packet without an IPv4Packet structure.,0
276,Introduce datagram helpers,0.37297994,Gnirehtet v2.5,,0
277,Introduce IPv4Packet,0.7007401, - discard non-IPv4 packets (#69),,1
278,Add .gitignore for rustrelay,0.49800804, - Add a Rust version of the relay server,,0
279,added fully support for dns & bugfixes,0.4252993, - Fix gnirehtet rt [serial] with several devices plugged,,0
280,Log binary packets,0.5166957, - Improve logs,,0
281,Implement UDPConnection.send_to_network(),0.54821515, - Terminate TCP connections gracefully (avoid many garbage packets),This simplify borrowing rules. The struct is named TCB for Transmission Control Block.,0
282,Force IPv4 for tunnel connection,0.9477725, - Force IPv4 for tunnel connection (fixes #42),Convert methods to associated functions not to mutably borrow self.,1
283,Update README for broadcast,0.46550664, - update relay-rust dependencies,,0
284,"Revert ""Self-weak for Client""",0.4268803, - Fix several race conditions related to client reconnection,,0
285,Respect client TCP window,0.6011133, - Terminate TCP connections gracefully (avoid many garbage packets),,0
286,Remove useless 0 index in array ranges,0.32477158, - discard non-IPv4 packets (#69),"Expose buffer without managing ""last_packet"". This is not the job of Packetizer to manage the ""last packet"" thing, and it incurs a cost while it is not always necessary.",0
287,Add gradle wrapper,0.4171818, - Add gnirehtet.cmd script for Windows,So that we may read it again.,0
288,Handle InetAddress instead of Strings,0.35889143, - Handle command-line parsing natively (in Java and Rust),,0
289,Factorize connection logs,0.6022178, - Improve logs,,0
290,Remove method to send raw data to client,0.46171507, - Terminate TCP connections gracefully (avoid many garbage packets),,0
291,Compute checksom from a non-mutable borrow,0.49163187, - Optimize TCP checksum computation,,0
292,Improve packet logging,0.71685445, - Improve logs,,1
293,Generate both java and rust versions on release,0.53603286, - Handle command-line parsing natively (in Java and Rust),,0
294,Update interests only on valid key,0.26438642, - Improve logs and error messages,"In order to find the client in the list, do not borrow it, but just get the raw pointer instead. Otherwise, in addition to the unnecessary runtime overhead, the client refcell is already borrowed mutably, leading to a runtime panic.",0
295,Use closures for selector handlers,0.3845738, - Fix several race conditions related to client reconnection,,0
296,Fix PersistentRelayTunnel synchronization,0.51430756, - Fix several race conditions related to client reconnection,,0
297,Implement Packetizer::new(),0.46014962, - Add a Rust version of the relay server,,0
298,Move events out of Selector,0.31208572, - Fix several race conditions related to client reconnection,,0
299,Fix FIN acknowledgement,0.36986595, - Fix several race conditions related to client reconnection,,0
300,Add convenient gradle tasks,0.49633035," - Add ""./gnirehtet reinstall"" command",,0
301,Upgrade gradle version,0.63498855,Gnirehtet v2.1,,0
302,Introduce RunningState for Selector,0.41795006, - Handle command-line parsing natively (in Java and Rust),,0
303,Remove client on close,0.46133846, - Terminate TCP connections gracefully (avoid many garbage packets),,0
304,Fix datagram buffer remaining size,0.6277827," - Fix buffer size to avoid ""Not an Ipv4 packet"" error (#273)",A header is composed of a HeaderData and a reference to the byte array. Provide bind(raw) and bind_mut(raw) to easily create an Header (parametered by a lifetime) from a HeaderData and the raw array.,0
305,Implement packet source consuming,0.5687641, - discard non-IPv4 packets (#69),,0
306,Upgrade latest release (v1.0.1) in README,0.48767242,gnirehtet v2.3,,0
307,More tests for IPv4Header,0.61760867, - Force IPv4 for tunnel connection (fixes #42),,0
308,Pass weak-client to connections,0.55064183, - Do not leak TCP connections (fixes #57),,0
309,Implement setters for TCP/UDP headers,0.57628286, - Optimize TCP checksum computation,,0
310,Configure checkstyle,0.50571656, - Optimize TCP checksum computation,"IPv4Packet is the only owner of the raw data as &[u8]. Therefore, accessing headers is cumbersome: the caller has to provide the raw slice associated to the headers. To avoid this problem, provide a lifetime-bounded view of headers that borrows the raw data.",0
311,Use closure for on_client_death,0.38580865, - Fix possible NullPointerException on VPN starting (link),,0
312,"Rename command ""rt"" to ""run""",0.78927934," - Rename command ""gnirehtet rt"" to ""gnirehtet run""","compute_checksum() expects the whole payload raw buffer, including header + payload, so rename it to transport_raw.",1
313,Update DEVELOP to use latest rust stable,0.5467988, - Add a Rust version of the relay server,,0
314,Move test method,0.3479108, - Make reverse tethering starting faster,,0
315,IPv4Packet slice length,0.6468487," - Fix buffer size to avoid ""Not an Ipv4 packet"" error (#273)",,0
316,Use the same syntax as in Genymobile/base,0.3670578," - Rename command ""gnirehtet rt"" to ""gnirehtet run""",,0
317,Rename packet_length() to length(),0.48227197," - Fix buffer size to avoid ""Not an Ipv4 packet"" error (#273)",,0
318,Fix Packetizer tests,0.5218408, - update relay-rust dependencies,"Instead of whole packet raw, where the ip header is unused.",0
319,Pass reference to headers separately,0.3338564," - Add ""-r ROUTE"" option to reverse tether only specific routes",,0
320,Remove parent theme,0.27936074, - Fix possible disconnection on upload (fixes #43),,0
321,Upgrade gradle and gradle plugin,0.5994849,gnirehtet v2.3,,0
322,Update mio to 0.6.11,0.5263958,Workaround rust/mio issue on MacOS (#136),,0
323,Use static when possible in tests,0.2676317, - Optimize TCP checksum computation,,0
324,Test 0-byte datagram,0.4311483, - Optimize TCP checksum computation,,0
325,Reformulate the adb section in README,0.5347831, - Make adb path configurable,,0
326,Simplify checksum test,0.52427137, - Optimize TCP checksum computation,,0
327,Do not fail release build when no keystore,0.34382984,gnirehtet v2.3,,0
328,Remove dead imports,0.32738775, - Fix possible disconnection on upload (fixes #43),,0
329,Add global 'debug' gradle task,0.5261848, - Add gnirehtet.cmd script for Windows,,0
330,Log connection message with cx_debug() macro,0.51285225, - Improve logs and error messages,Check regularly to expire UDP connections after 2 minutes idle.,0
331,Release mutex during blocking calls,0.36250284, - Display Android notification on relay server disconnection (link),,0
332,StreamBuffer,0.39017895,Fix cleanup race condition in Java relay server (#154),,0
333,Adding Windows support,0.53694916, - Add gnirehtet.cmd script for Windows,The UDP checksum was written at raw[6..8] instead of transport[6..8].,0
334,Implement Packetizer.packetize(),0.3937224, - Add a Rust version of the relay server,,0
335,Implement Client.close(),0.40938598," - Install the client on ""gnirehtet start"" if necessary",,0
336,Client processing skeleton,0.4477448, - Optimize TCP checksum computation,,0
337,Move server socket management to a dedicated class,0.4943108, - Add a Rust version of the relay server,"Do not expose poll errors, just panic.",0
338,Implement TCPConnection.may_read(),0.5982312, - Optimize TCP checksum computation,,0
339,Make Selector accept an empty Ready,0.29786098, - Fix several race conditions related to client reconnection,,0
340,Make gradle tasks use the gnirehtet script,0.65291154, - Add gnirehtet.cmd script for Windows,,0
341,Store length of last packet read in Packetizer,0.49614343," - Fix buffer size to avoid ""Not an Ipv4 packet"" error (#273)",,0
342,Optimize more Rust TCP checksum with unsafe,0.7745397, - Optimize TCP checksum computation,,1
343,Update release v2.2.1 links in README,0.5244974,gnirehtet v2.3,,0
344,Merge pull request #210 from jessedusty:add_port_option,0.6067605,Add command-line option to use a custom port (#210),So that we can implement Packetizer both from a TcpStream and a UdpSocket.,0
345,Implement EventHandler for Client,0.39739528, - Fix possible NullPointerException on VPN starting (link),"Move DatagramSender and add DatagramReceiver to a new module ""datagram"".",0
346,Rename Relay start() to run(),0.59387887, - Add a Rust version of the relay server,"Unlike TcpStream, UdpSocket does not implement Write (because its semantics is to preserve boundaries, breaking Write composability). Therefore, introduce a new Trait, DatagramSender, implemented for UdpSocket, so that DatagramBuffer may write to it. Implement a mock implementation that store a datagram in memory for testing.",0
347,Move IPv4Packet to its own file,0.6509296, - discard non-IPv4 packets (#69),Cf commit 94780acd23d6c2b0348ec2359d5d5db87fb90169 in gnirehtet.,0
348,Fix release script with new gradle version,0.56705093,gnirehtet v2.3,,0
349,Read process output before waiting,0.38686645, - Optimize TCP checksum computation,,0
350,Add benchmark for Java IP checksum,0.54785186, - Optimize TCP checksum computation,,0
351,Add target in log,0.6478004, - Improve logs,,0
352,Add IPv4PacketBuffer to Client,0.63423204," - Fix buffer size to avoid ""Not an Ipv4 packet"" error (#273)",,0
353,Make IPv4Header fields private,0.53138435, - discard non-IPv4 packets (#69),,0
354,Implement UDPConnection::create_socket(),0.44802713, - Fix possible NullPointerException on VPN starting (link),,0
355,Remove unused IPv4Packet.merge(),0.7566932, - discard non-IPv4 packets (#69),,1
356,Use final fields when appropriate,0.3149753,"   #150, #151, #161, #178, #180, #187, #190, #199, #227, #242)","The route knows the client, use it to remove the route from its router, in order to get rid of the callback mechanism, which adds too much complexity in Rust.",0
357,Indicate where to store signing config locally,0.40118793, - Make adb path configurable,,0
358,Improve VPN starting,0.7877637, - Fix delayed VPN closing,,1
359,Log empty reads/writes,0.57335675, - Improve logs and error messages,,0
360,Set default log level to Info,0.59988517, - Improve logs,"Make Connection a trait. Connection was implemented to statically dispatch over TCPConnection and UDPConnection. However, these instance need to be shared between the Route and the selector, so they are embedded into an Rc<RefCell<…>>. Mixing static dispatch with indirection adds complexity and is not elegant. Therefore, switch to dynamic dispatch.",0
361,Implement TCP client window,0.61410296, - Optimize TCP checksum computation,,0
362,Do not reregister interests when not necessary,0.30828977, - Fix several race conditions related to client reconnection,,0
363,Directly implement EventHandler on TunnelConnection,0.58906275, - Improve disconnection detection when the relay server is behind a tunnel,,0
364,Make notification icons white-only,0.4771694, - Display Android notification on relay server disconnection (link),Use explicit clone() instead.,0
365,Implement SourceDestination for IPv4Header,0.61538124, - Force IPv4 for tunnel connection (fixes #42),Packetizer does not write into the buffer.,0
366,Store clients in TunnelServer,0.5529985, - Improve disconnection detection when the relay server is behind a tunnel,,0
367,Remove trailing spaces from gnirehtet.cmd,0.50263566, - Add gnirehtet.cmd script for Windows,,0
368,Ignore checkstyle magic number warning,0.3418346, - Always log error messages to stderr (fixes #62),,0
369,Make gnirehtet script fail on error,0.6197163, - Add gnirehtet.cmd script for Windows,,0
370,"Fix ""getopt"" usage in gnirehtet script",0.63005686," - Rename command ""gnirehtet rt"" to ""gnirehtet run""",To follow rust code style conventions.,0
371,Rewrite byteorder crate comment,0.32213363, - Optimize TCP checksum computation,,0
372,Wait handler completion with a condition variable,0.40097803, - Fix several race conditions related to client reconnection,This tiny abstraction added complexity without benefits.,0
373,Parameterize the release script for gradle command,0.51709116, - Add gnirehtet.cmd script for Windows,,0
374,Add assemble gradle tasks for relay,0.5494071, - Add a Rust version of the relay server,,0
375,Remove unused ConnectionId::new(),0.5910871," - Fix ""Removing an unknown connection"" crash in the Rust version",,0
376,Move event handlers execution to Selector,0.31789714,"Use an activity (instead of a broadcast receiver) as entry point,",,0
377,Add missing license headers,0.40280932, - Add gnirehtet.cmd script for Windows,,0
378,"Replace ""drop"" by ""dropping""",0.35383797, - Make reverse tethering starting faster,,0
379,Set packet_for_client_length on deferred,0.4636566, - Terminate TCP connections gracefully (avoid many garbage packets),So that there is no need to have a full IPv4Packet.,0
380,Improve intent logs,0.7344582, - Improve logs,,1
381,Introduce UDPConnection,0.44240135, - Improve disconnection detection when the relay server is behind a tunnel,,0
382,Create connection from Route,0.66063297," - Add ""-r ROUTE"" option to reverse tether only specific routes",,0
383,Fix tunnel reconnection race condition,0.6949247, - Fix several race conditions related to client reconnection,,0
384,"Introduce header ""views""",0.2867335,Add command-line option to use a custom port (#210),,0
385,Fix track-devices parsing in AdbMonitor,0.47260186, - fix adb monitor on multiple devices (#134),,0
386,Add port -p option to rust relay,0.74607587, - Add a Rust version of the relay server,,1
387,Make IPv4Packet fields private,0.61503685, - discard non-IPv4 packets (#69),"Client::new() was a generic function to accept statically any CloseListener. That way, the caller may directly pass a closure. However, this implies that there will be one version of this function for every CloseListener type. To prevent this, type-erase the listener instead. Note that currently, there is exactly one call to Client::new(), so there is only one version. But the intent is to get one version whatever the number of different CloseListener types.",0
388,Add license to README,0.39162588, - Add gnirehtet.cmd script for Windows,,0
389,Reply empty packets to client using ClientChannel,0.5657271, - Fix possible NullPointerException on VPN starting (link),,0
390,Ignore START if VPN is already started,0.7328942, - Fix delayed VPN closing,,1
391,Add commands to automatically start clients,0.65996504," - Add ""autostart"" and ""autorun"" commands to start on device connection",,0
392,Fix typo in comment,0.32332307, - Improve logs and error messages,,0
393,Implement TCP/UDP headers,0.6063888, - Terminate TCP connections gracefully (avoid many garbage packets),,0
394,Log Error/Hup as debug,0.6499952, - Improve logs and error messages,,0
395,Non-copyable TransportHeader/IPv4Header,0.6676381, - discard non-IPv4 packets (#69),,0
396,Log clients connections,0.5489182, - Improve logs,,0
397,Prefix unused field by _,0.22319016, - Fix possible NullPointerException on VPN starting (link),,0
398,Split packets by 1300 bytes,0.5525792, - discard non-IPv4 packets (#69),,0
399,Use refactored logs,0.80162394, - Improve logs,,1
400,Format code,0.3534528, - Add gnirehtet.cmd script for Windows,,0
401,Fix runtime panic due to forbidden borrowing,0.39134073, - fix possible crash on Android O on stop intent (#129),,0
402,Display timestamps in logs,0.5493072, - Improve logs,,0
403,Move commandline handling to Java,0.60268766, - Handle command-line parsing natively (in Java and Rust),"For consistency with DatagramBuffer.read_from(), do not assume that there is enough space in the buffer. Return a result to force the caller to handle this case.",0
404,Improve command-line error handling,0.66907716, - Improve logs and error messages,,0
405,Detect VPN network,0.6834626, - Fix delayed VPN closing,,0
406,UDPHeader tests,0.33793873,Gnirehtet v2.5,,0
407,Accept empty interest in mio,0.32317623, - Support Android O (fixes #44),,0
408,Defer token removal (fix race condition),0.5837051, - Fix several race conditions related to client reconnection,,0
409,Call expect() to give an error message,0.45772594, - fix possible crash on Android O on stop intent (#129),,0
410,Cargo update,0.4891149, - update relay-rust dependencies,,0
411,Set default log level to INFO,0.5983131, - Improve logs,,0
412,Terminate TCP connections gracefully,0.90838534, - Terminate TCP connections gracefully (avoid many garbage packets),,1
413,Add benchmark for Java TCP checksum,0.7413573, - Optimize TCP checksum computation,,1
414,Do not unnecessarily update payload length,0.5092829, - Fix connection hang on large uploads (fixes #79 and #84),So that the client may remove itself from the TunnelServer when it is closed.,0
415,Handle Rc in Selector internally,0.37180042, - Fix several race conditions related to client reconnection,,0
416,Implement EventHandler for TCPConnection,0.6088089, - Optimize TCP checksum computation,,0
417,Pass selector everywhere,0.29332682, - Optimize TCP checksum computation,,0
418,"Handle ""connectable"" event",0.4953701, - Fix several race conditions related to client reconnection,,0
419,Reorder Android manifest,0.49559534,Require FOREGROUND_SERVICE permission (necessary for Android 9),,0
420,Update release v2.3 links in README,0.54990536,gnirehtet v2.3,Do not create a new events storage for every poll().,0
421,Defer interests setting for TCP,0.5996828, - Optimize TCP checksum computation,,0
422,Improve UDPConnection.update_interests(),0.45932204, - Fix possible disconnection on upload (fixes #43),,0
423,Add tests for TCPHeader,0.54846776, - Optimize TCP checksum computation,,0
424,"Reformat code with ""cargo fmt""",0.3992109," - Rename command ""gnirehtet rt"" to ""gnirehtet run""",So that we have the event token to reregister.,0
425,Add task to cross-compile rustrelay for Windows,0.45905226, - Add gnirehtet.cmd script for Windows,,0
426,Store handlers as Rc,0.34053499, - Fix several race conditions related to client reconnection,,0
427,Add self-weak to TCPConnection,0.62366986, - Do not leak TCP connections (fixes #57),,0
428,Upgrade dependencies minor version,0.6045234, - update relay-rust dependencies,,0
429,Remove unused RunningState,0.4569108,Fix cleanup race condition in Java relay server (#154),,0
430,Provide methods to modify headers,0.41151127,Add command-line option to use a custom port (#210),,0
431,Implement TCP checksum,0.88820267, - Optimize TCP checksum computation,,1
432,"Add missing ""reinstall"" in syntax usage",0.6712104," - Add ""./gnirehtet reinstall"" command",,0
433,Introduce IPv4PacketBuffer,0.6754812, - discard non-IPv4 packets (#69),,0
434,Provide bind() and bind_mut() for headers,0.35174382, - Make reverse tethering starting faster,,0
435,Transport checksum computation skeleton,0.6525017, - Optimize TCP checksum computation,,0
436,Fix cleanup race condition,0.71910816,Fix cleanup race condition in Java relay server (#154),,1
437,Implement TCPConnection.handle_packet(),0.6227598, - Terminate TCP connections gracefully (avoid many garbage packets),It parsed transport data at a wrong location.,0
438,Read 0 bytes means EOF,0.31943372, - discard non-IPv4 packets (#69),,0
439,Implement DatagramBuffer,0.38626474, - Optimize TCP checksum computation,,0
440,Bump version to 2.5,0.6418831,gnirehtet v2.3,,0
441,Simplify UDP connection expiration,0.61186844, - Terminate TCP connections gracefully (avoid many garbage packets),,0
442,Improve send/reply to client API,0.49014583, - Fix possible NullPointerException on VPN starting (link),,0
443,Fix RST and SYN management,0.52144015," - Fix ""./gnirehtet rt"" stopping when several devices are connected",,0
444,"Extract tcp_header without ""if let"" in constructor",0.49650365, - Optimize TCP checksum computation,To factorize source and destination swapping.,0
445,Implement TCPConnection.process_send(),0.6326713, - Optimize TCP checksum computation,,0
446,Use std::ptr::eq() to compare pointers,0.30621237, - Optimize TCP checksum computation,,0
447,Add license header to rust files,0.48988587, - Add a Rust version of the relay server,,0
448,Factorize DatagramBuffer tests,0.39613304, - Fix several race conditions related to client reconnection,,0
449,Implement UDPConnection.close(),0.50897557, - Terminate TCP connections gracefully (avoid many garbage packets),,0
450,Current token removal management,0.37785763,Fix cleanup race condition in Java relay server (#154),,0
451,Close TCP connection on client close,0.75712997, - Terminate TCP connections gracefully (avoid many garbage packets),,1
452,Enable LTO in release mode,0.41411424, - Support Android O (fixes #44),Words in a module name should be separeted by '_'.,0
453,Log adb commands in Rust,0.56062025, - Improve logs and error messages,,0
454,Introduce Packetizer,0.45657736," - Install the client on ""gnirehtet start"" if necessary",,0
455,Inline some methods,0.3701097, - Optimize TCP checksum computation,,0
456,Extract ByteBuffer from Ipv4PacketBuffer,0.6068826," - Fix buffer size to avoid ""Not an Ipv4 packet"" error (#273)","There may be only mutable borrow of the raw data, so it may not be shared between IPv4Packet and IPv4Header.",0
457,Move event handler execution to Selector,0.32142174,"Use an activity (instead of a broadcast receiver) as entry point,",,0
458,Wrapper for Poll,0.3170553,"   (#61, #85, #86, #91)",,0
459,Implement TCPConnection.process_receive() skeleton,0.6255629, - Optimize TCP checksum computation,,0
460,Remove PacketStorage,0.67291737, - discard non-IPv4 packets (#69),,0
461,Upgrade gnirehtet version to 2.2,0.83477306,Gnirehtet v2.2,,1
462,Add TCP checksum test,0.76683784, - Optimize TCP checksum computation,,1
463,"Remove ""get_"" from method name",0.26202965, - Fix possible NullPointerException on VPN starting (link),,0
464,Fix checksum tests,0.48078585, - Optimize TCP checksum computation,,0
465,Move relay implementation to a subpackage,0.6368833, - Add a Rust version of the relay server,,0
466,Use headers data directly when possible,0.3077892, - Make reverse tethering starting faster,,0
467,Ignore double-removal of a connection,0.5543262, - Terminate TCP connections gracefully (avoid many garbage packets),,0
468,"Call ""adb install"" with ""-r""",0.5577055, - Make adb path configurable,,0
469,Remove SourceDestination,0.40307224, - Fix possible disconnection on upload (fixes #43),,0
470,Improve TCP readable detection,0.70986426, - Optimize TCP checksum computation,,1
471,Remove useless mut in tests,0.33980513, - Fix several race conditions related to client reconnection,,0
472,Simplify usage for Windows,0.42651963, - Add gnirehtet.cmd script for Windows,Replace the fake Selector with the real one.,0
473,Add blog post links to README,0.2993729, - Fix connection hang on large uploads (fixes #79 and #84),Without an additional level using a closure.,0
474,Remove useless mut,0.3766099,Workaround rust/mio issue on MacOS (#136),Due to borrowing issues.,0
475,Discard non-IPv4 packets,0.944897, - discard non-IPv4 packets (#69),,1
476,Expose Packetizer manual inflate(),0.42303884," - Fix buffer size to avoid ""Not an Ipv4 packet"" error (#273)",,0
477,Improve Router skeleton,0.47502968," - Add ""-r ROUTE"" option to reverse tether only specific routes",,0
478,Use dyn trait,0.26290146,Gnirehtet v2.5,More optimization for release builds.,0
479,Drop UDP packets when client buffer is full,0.63532484," - Fix buffer size to avoid ""Not an Ipv4 packet"" error (#273)",,0
480,Mention that gnirehtet is not actively maintained,0.5713725,Gnirehtet v2.2,,0
481,Introduce pending packet for UDPConnection,0.60561633, - discard non-IPv4 packets (#69),,0
482,Bump Rust version to 2.2.1,0.603279,gnirehtet v2.3,Git rid of HandlerTokenManager.,0
483,Merge branch 'rust' into dev,0.3189475, - Fix gnirehtet rt [serial] with several devices plugged,,0
484,Implement IPv4PacketBuffer,0.69342, - discard non-IPv4 packets (#69),,0
485,Add a release script,0.56852674, - Add gnirehtet.cmd script for Windows,,0
486,Store token,0.30436492,"   (#61, #85, #86, #91)",,0
487,Add macros to log connection messages,0.51137966, - Improve logs and error messages,,0
488,Add restart command,0.63764787," - Add ""./gnirehtet reinstall"" command",,0
489,Log VPN starting failure,0.75672686, - Fix delayed VPN closing,,1
490,Rename DeathListener to CloseListener,0.40536776," - Rename command ""gnirehtet rt"" to ""gnirehtet run""",,0
491,Fix connections expiration,0.6175129, - Fix connection hang on large uploads (fixes #79 and #84),,0
492,Early detect invalid connection to relay server,0.69958466, - Improve disconnection detection when the relay server is behind a tunnel,Expose a Poll wrapper intended to accept EventHandler instances (or lambdas) instead of mio::Token.,0
493,"Suggest gradle ""build"" instead of ""debug""",0.46946198," - Rename command ""gnirehtet rt"" to ""gnirehtet run""","Make the command expose the accepted parameters (serial and/or DNS servers), to be used by the parser to handle errors immediately.",0
494,Improve comment,0.38051137, - Improve logs,"Rustrelay provides an alternative implementation of relay, in Rust It generates native binaries, so unlike the Java version, no runtime is necessary.",0
495,Rustrelay project skeleton,0.46499693, - Add a Rust version of the relay server,"Print a friendly message, including the expected syntax for the command, instead of a stacktrace on gnirehtet command arguments error.",0
496,Compare thin pointers to find the connection,0.3872066, - Improve disconnection detection when the relay server is behind a tunnel,"Parse the arguments into a specific CommandLineArguments instance, that can be tested easily.",0
497,"Never fail on ""git describe""",0.35695744,Gnirehtet v2.2,"The java application used to be the relay server, the command-line interface being in a separate shell script. Now that it handles the command-line, put Main into com.genymobile.gnirehtet and all the other classes into com.genymobile.gnirehtet.relay.",0
498,Move the windows notice in README,0.37993532, - Add gnirehtet.cmd script for Windows,"The gnirehtet commands were exposed through bash (""gnirehtet"", for Linux and Mac OS) and batch (""gnirehtet.cmd"", for Windows) scripts. Move the handling to the Java code, so the behavior is consistent across both platforms. Consequently, rename relay.jar to gnirehtet.jar.",0
499,Fix meaningless comments,0.38062203, - Improve logs and error messages,,0
500,Binary array to string,0.31017166, - Handle command-line parsing natively (in Java and Rust),"In release mode, execute the ""build"" task so that the checks are executed.",0
501,Fix IPv4 header parsing,0.64851356, - discard non-IPv4 packets (#69),The notification icons appeared black on some devices (while all other icons were white). They should always be white: link,0
502,Route TCP connections,0.738268, - Terminate TCP connections gracefully (avoid many garbage packets),"TCPHeader.swapSourceAndDestination() was not tested, contrary to UDPHeader.",1
503,Fix fake Selector,0.3878132, - Fix several race conditions related to client reconnection,"For consistency, use the -ing form.",0
504,Log error messages to stderr,0.88495165, - Always log error messages to stderr (fixes #62),,1
505,Compute IPv4 checksum,0.6422687, - Optimize TCP checksum computation,"For consistency with ""theirAcknowledgementNumber"", rename ""receivedSequenceNumber"" to ""theirSequenceNumber"".",0
506,Create UDP connection,0.51310974, - Force IPv4 for tunnel connection (fixes #42),"To remove itself from the router, pass ""this"" connection instead of ""id"" to Router.remove(). This avoids unnecessary ids comparisons to find the connection to remove.",0
507,Fix warning message,0.6225024, - Fix disconnection notification appearing while gnirehtet has been stopped,"The method createPacket() had been renamed to packetize(), but the refactor was not applied on comments.",0
508,Expand mio import,0.35008734,Gnirehtet v2.5,"The function to build a packet from an IPv4 header and a transport header is not used since the introduction of Packetizer (commit 408a95e24eb5faa0cd9b1fdf0c14b621fe4be1ea), so remove it.",0
509,Pass Event instead of Ready to EventHandler,0.44511515, - Display Android notification on relay server disconnection (link),Use Binary.toString() instead of String.valueOf() to print a binary packet.,0
510,Move Relay main to Main,0.5861099, - Add a Rust version of the relay server,"For TCP connections, we may not lose data we receive from the network. When the client buffer is full, we cannot transmit it to the client, so we ""pause"" this specific connection: we keep the packet and disable read operation for the channel. When the client is ready to receive more data, it request to ""paused"" connections (through PacketSource). UDPConnection also kept the packet and disabled read operation for the channel. This was wrong, because it didn't use the PacketSource mechanism, so there was no way to ""unpause"" such a connection. Since we may lose UDP datagrams, just drop a packet when the client buffer is full instead.",0
511,Add DatagramBuffer assertion,0.29023504, - Optimize TCP checksum computation,"Don't check whether some writes are pending: if nothing happened during IDLE_TIMEOUT, we can drop them.",0
512,Bump version to 2.4,0.63073,gnirehtet v2.3,"SelectorAlarm started a separate thread to wake up a call to selector.select() at a fixed rate. Instead, call selector.select() with a timeout, and execute cleanup if the next cleaning deadline is reached. That way, there is no need for a separate thread.",0
513,Remove lint warnings,0.4672395, - Improve logs and error messages,,0
514,Upgrade Android tools,0.5794233, - Support Android O (fixes #44),"Route was essentially a proxy between a client and a connection, but without real benefit. Therefore, remove it:  - directly give the client instance to connections;  - replace the list of routes by a list of connections in the router;  - rename Route.Key to ConnectionId. Since the connection now know the client, also get rid of its CloseListener (it may remove itself directly from the client router).",0
515,Improve messages on read/write errors,0.62237906, - Improve logs and error messages,"A connection may be closed by Route.close(), that, in turn, calls Route.disconnect(). But it may also be closed due to a call to Router.cleanExpiredConnections(), that calls Route.disconnect() without calling Route.close(), for optimizations reasons. Therefore, move the closing log to disconnect().",0
516,Add gnirehtet.cmd to release,0.7720136, - Add gnirehtet.cmd script for Windows,"For consistency with Client.close(), make Route.close() also disconnect the channel.",1
517,Start clients asynchronously in autostart mode,0.6904999," - Add ""autostart"" and ""autorun"" commands to start on device connection",It is not used from outside Router.,0
518,Fix deprecation and other warnings,0.5676638, - Fix disconnection notification appearing while gnirehtet has been stopped,"We ""swap"" (not ""switch"") source and destination.",0
519,Move to_byte_array() to binary,0.26449013, - Handle command-line parsing natively (in Java and Rust),"Before we removed the packetization from a ByteBuffer, there were two similar test methods:  - testPacketizeChunksFromByteBuffer()  - testPacketizeChunksFromChannel() We removed the first one, so we can now rename the second testPacketizeChunks().",0
520,Fix rust tests warnings,0.6155529," - Fix ""Removing an unknown connection"" crash in the Rust version","IPv4Packet.recompute() is called from 2 locations:  - Packetizer.inflate()  - TCPConnection.updateAcknowledgementNumber() In the first case, the payload length is already updated before calling recompute(). In the second case, the payload length has not changed. Therefore, do not update it in recompute(). Since it then remains only checksums computation, rename the method to computeChecksums().",0
521,Add comments for some classes,0.22431424,Add command-line option to use a custom port (#210),"In addition to the API to create a packet from a payload retrieved from a channel, the Packetizer exposed an API to create a packet from a payload as ByteBuffer. However, this second feature was actually always called with an empty payload. Therefore, replace it by a method packetizeEmptyPayload().",0
522,Rewrite 10.0.2.2 to 127.0.0.1,0.5049423," - Add ""./gnirehtet reinstall"" command","The private method inflate() expected the payload length as a parameter, so all callers had to provide it. This is not necessary, since it knows the payload buffer, so it can retrieve its length directly. Therefore, remove this parameter.",0
523,Remove useless clone(),0.3556077," - Add ""./gnirehtet reinstall"" command",s/subobtimal/suboptimal/,0
524,Implement Route,0.63264763," - Add ""-r ROUTE"" option to reverse tether only specific routes","A Client and a Route executed a callback (RemoveHandler) provided by their ""owner"" when they have to be removed. Instead, consider this callback as a listener, so rename it ""CloseListener"". The fact that their owners ""remove"" them from some lists is irrelevant for Client and Route: they have only the responsibility to notify them when they must not be used anymore. For consistency, also rename ""discard"" and ""destroy"" to ""close"".",0
525,Log adb commands as debug,0.58335245, - Improve logs and error messages,"The comments refers to storing the datagram in the buffer, done by the call to readFrom().",0
526,Update Rust 1.19 to 1.20 in documentation,0.5624838," - Fix ""Removing an unknown connection"" crash in the Rust version",Assert that there is no packets anymore once all have been consumed.,0
527,Type-erase CloseListener in Client::new(),0.4624731, - Fix possible NullPointerException on VPN starting (link),"The method copy() is only used for TCPHeader, and is called from a concrete TCPHeader (not an abstract TransportHeader). Therefore, there is no reason to expose it in the TransportHeader interface.",0
528,Simplify empty payload packetization,0.5679523, - Terminate TCP connections gracefully (avoid many garbage packets),,0
529,Move PacketStorage to its own file,0.5408696, - Add a Rust version of the relay server,Include gnirehtet.cmd to released zip file.,0
530,Add logs for TCP connections,0.58261955, - Do not leak TCP connections (fixes #57),"The class manages the server socket, listening for new clients. Thus, the name ""TunnelServer"" is more precise.",0
531,Extract TCPConnection state to a struct,0.6056027, - Optimize TCP checksum computation,Give more details about usage through the new script gnirehtet.cmd.,0
532,Forward route methods to connection,0.6025305," - Add ""-r ROUTE"" option to reverse tether only specific routes","Replace the existing gnirehtet application on the device, if any.",0
533,Expose transport header length,0.42932916," - Fix buffer size to avoid ""Not an Ipv4 packet"" error (#273)",,0
534,Initial version,0.6413008,The first official release ;-),Added windows support,0
535,"Rename ""received"" to ""their"" sequence number",0.39169937,"   (#61, #85, #86, #91)",remove unused vars,0
536,Replace port 1080 to 31416,0.54168767, - discard non-IPv4 packets (#69),"The Relay class managed both the polling mechanism and the server socket listening for client connections. To improve separation of concerns, move the server socket part to a dedicated class: TunnelConnection.",0
537,Implement Client.push_to_network(),0.5139842, - Fix possible NullPointerException on VPN starting (link),now locate_file search first in %PATH%,0
538,"Give help if the user executes ""gnirehtet rt""",0.66730464," - Rename command ""gnirehtet rt"" to ""gnirehtet run""","Whenever a port redirection is enabled (typically through ""adb reverse""), connect() will succeed even if the relay server is not listening on the other side of the tunnel. Commit 301867efe7caee8a91b73a014979eed757d85010 provided a workaround, assuming that the port forwarding was local: the client attempted to read from the socket with the smallest possible timeout. Since there was nothing to read, a read error indicated that no server was listening on the other side of the tunnel, while the connection was considered ok on timeout. But this does not generally fix the problem. For example, if the relay server is executed remotely and exposed through a SSH local port forwarding, then connect() would still succeed (a server was listening on the other side of the ""adb reverse"" tunnel) even if the relay server was not listening behind the SSH tunnel. Therefore, modify the protocol between the client and the relay server: when a client connects, the relay server immediately writes its id (an integer) to the TCP socket. The client considers itself connected only once it has received this number. Thus, it will be able to detect connection failure before switching its state to CONNECTED.",0
539,Fix TCPConnection may_read(),0.68179375, - Do not leak TCP connections (fixes #57),"RelayTunnel.open() both opened a channel and connected the socket to the relay server (or, more precisely, to the tunnel created by ""adb reverse"" that enabled port forwarding to the relay server). However, connecting the socket is blocking, and was called from RelayTunnelProvider.getCurrentTunnel() with the mutex locked. As a consequence, it was not possible to call invalidateTunnel() (and, a fortiori, to close the VPN) until connect() completed. To avoid this problem, split the channel opening and the socket connection, so that connect() may be called with the mutex (the one used by invalidateTunnel()) released. However, we must still make sure that no more than one thread executes getCurrentTunnel() at the same time. For this purpose, use a second mutex (getCurrentTunnelLock()).",0
540,Fix documentation about selector awakening,0.4594598,gnirehtet v2.3,The listener is only set on initialization. Passing it to constructor avoids to expose a setListener(…) method that should take care of thread-safety.,0
541,EventHandler as mutable,0.3205824, - fix possible crash on Android O on stop intent (#129),"Use ""cat << EOF"" to print the usage. This avoids to write one echo per line. In addition, print the whole usage to stderr (instead of the first line only).",0
542,Log spurious events as debug,0.5688926, - Improve logs and error messages,"The ""stopped"" flag was not synchronized between send()/receive() and close() (the mutex was only locked in close()). Since we cannot lock the mutex for both send() and receive() (by design, they must execute concurrently), use a simple AtomicBoolean for the ""stopped"" flag instead.",0
543,Add Cargo.lock,0.36810535,Add command-line option to use a custom port (#210),,0
544,Fix tests compilation,0.42535374, - Fix several race conditions related to client reconnection,"If the tunnel to the relay server was not already ""disconnected"" on VPN stop, then a ""disconnected"" event is received after tne VPN is closed. In that case, the notification must not be displayed.",0
545,Move releaseRustWindows out of releaseAll,0.45793444,gnirehtet v2.3,"""./gnirehtet rt"" does not automatically install the apk on the device if the package is already present. As a consequence, it must be explicitly installed on upgrade.",0
546,Factorize TCPConnection.send_to_client(),0.6971056, - Optimize TCP checksum computation,,0
547,Implement accept_client(),0.40065384," - Install the client on ""gnirehtet start"" if necessary",,0
548,Add unit tests for Rust AdbMonitor,0.45631647, - fix adb monitor on multiple devices (#134),"For convenience, provide ""./gnirehtet reinstall"" that calls ""uninstall"" then ""install"".",0
549,Use log for errors,0.85329944, - Improve logs and error messages,"Send the intent while the server is starting, so that the relay server is ready when the client connects. This reduces starting time, prevents failure of the first connection, and thus avoids a disconnection notification.",1
550,Convert from Mut to non-Mut manually,0.42526186," - Rename command ""gnirehtet rt"" to ""gnirehtet run""","Display an Android notification when the client is disconnected from the relay server, with a button to stop gnirehtet directly.",0
551,Slab using Boxed handlers,0.31802347, - Fix several race conditions related to client reconnection,"The relay server is accessible through an ""adb reverse"" port redirection. If the port redirection is enabled but the relay server is not started, then the call to channel.connect() will succeed, but the first read() will return -1. As a consequence, the connection state of the relay server would be invalid temporarily (we would switch to CONNECTED state then switch back to DISCONNECTED). To avoid this problem, we must actually try to read from the server, so that an error occurs immediately if the relay server is not accessible. To do so, we set the lowest timeout possible (1) that is not ""infinity"" (0), try to read, then reset the timeout option. Since the client is always the first peer to send data, there is never anything to read.",0
552,Update README and DEVELOP,0.46880633,gnirehtet v2.3,"On the device-side, sending to and receiving from the tunnel (the connection to the relay server) are processed from two different threads. When an error occurs, both threads invalidate the tunnel, so that the next call to getCurrentTunnel() will return a new tunnel. Typically, the first one actually invalidates the tunnel, then the second one detects that the tunnel has already been invalidated, and does nothing. However, there is a possibility that one thread invalidates the tunnel, then calls getCurrentTunnel() before the other thread calls invalidateTunnel(). In that case, the new tunnel would be mistakenly invalidated. To prevent this race condition, pass the current tunnel as parameter of invalidateTunnel().",0
553,Fix trailing semicolon warning,0.33304325, - Fix disconnection notification appearing while gnirehtet has been stopped,"During the delay between connection attempts, the RelayTunnelProvider must release the mutex (by calling wait() instead of sleep()), so that invalidateTunnel() may be called at any time. Indeed, there was a lock dependency that prevented the tunnel to be closed immediately. On gnirehtet stop, the following cascade of calls occurred:  -> GnirehtetService.close()    -> Forwarder.stop()      -> PersistentRelayTunnel.close()        -> RelayTunnelProvider.invalidateTunnel() // synchronized           // required the mutex that may be held by getCurrentTunnel()           // during the whole execution of Thread.sleep()      -> Future.cancel(true) // interrupts Thread.sleep() Thread.sleep() was intended to be interrupted by a call to Future.cancel(true). However, this call occurred only after PersistentRelayTunnel.close() completed… that is, after the end of Thread.sleep(), making the whole interruption useless.",0
554,Add Apache 2.0 license,0.42721364,gnirehtet v2.3,"Make ""final"" the fields intented to be initialized by constructors.",0
555,Move EventHandler,0.35556886, - Make reverse tethering starting faster,,0
556,Rename TunnelConnection to TunnelServer,0.6536745," - Add ""tunnel"" command to restart only the adb tunnel",VpnService.Builder.establish() may return null if the application is not prepared or is revoked: link Log when it happens.,0
557,Upgrade build.gradle,0.5475684,gnirehtet v2.3,Multiple empty reads or writes suggests a problem with the blocking mode. Log them.,0
558,Remove useless borrowing,0.2807907, - Make reverse tethering starting faster,There is no UI.,0
559,Update latest release (v1.1.1) in README,0.5099304,gnirehtet v2.3,Give an id to each client and log their connection and disconnection.,0
560,Improve error handling,0.683874, - Improve logs and error messages,"The command ""./gnirehtet rt [serial]"" started reverse tethering for the specified device, but stopped without specifying the serial. As a consequence, it did not work as expected when several Android devices were plugged. Therefore, pass the serial as stop argument.",0
561,Remove non-lexical lifetime workaround,0.3917289, - Handle command-line parsing natively (in Java and Rust),"VpnService.Builder.establish() may return null if the application is not prepared or is revoked: link In that case, do not start forwarding in order to avoid a NullPointerException.",0
562,Simplify Ctrl+C termination,0.37414956, - Add gnirehtet.cmd script for Windows,A call to Log.i() remained in AbstractConnection. Replace it by logi().,0
563,Generate checksum and signature during release,0.3596241, - Optimize TCP checksum computation,Log UDP connections at the same log level as TCP connections.,0
564,fixup! Fix FIN acknowledgement,0.4448825, - Fix disconnection notification appearing while gnirehtet has been stopped,,0
565,Fix TCP checksum computation,0.90307844, - Optimize TCP checksum computation,"The command ""gnirehtet rt"" first checks whether the app is installed on the device, and installs it if necessary. However, it didn't forward the serial parameter, so calling ""gnirehtet rt 12345678"" failed to install the application on the selected device when several were plugged. Therefore, forward the serial to apk_require_installed().",1
566,"Provide both mutable and non-mutable ""views""",0.3305447,"Use an activity (instead of a broadcast receiver) as entry point,","The syntax of the shell command ""getopt"" may differ on different systems. Provide the parameters the way which is supported by both versions: link link Related to link.",0
567,Require FOREGROUND_SERVICE,0.61429554,Require FOREGROUND_SERVICE permission (necessary for Android 9),The windows details should not be in the project introduction. Move them to a separate section.,0
568,fixed dns,0.3793906, - Fix disconnection notification appearing while gnirehtet has been stopped,,0
569,Generate random TCP sequence number,0.56222844, - Optimize TCP checksum computation,"""gradle build"" builds, run tests, checkstyle and lint.",0
570,Provide send_to_network() skeleton,0.43913913, - Add a Rust version of the relay server,"Use the GRADLE environment variable as gradle command. If it is not set, use ./gradlew. As a consequence, this command builds with ""gradle"":     GRADLE=gradle ./release While this command builds with ""./gradlew"":     ./release",0
571,Start client in parallel of the server,0.51057374," - Install the client on ""gnirehtet start"" if necessary",Provide a direct link to the last release in README.,0
572,"Rename ""relay"" folders",0.48596907," - Add ""./gnirehtet reinstall"" command","Genymobile requires MagicNumber to be enabled. However, it produces many false-positives, especially with some bitwise operations (widely used in this project): x = value & 0xff; x = value & 0xf000; x = value >> 16; Extracting 16, 0xff and 0xf000 to separate constants would be insane in these examples. It also consider many numbers as ""magic"" in tests, where we don't want to extract them to a separate constant: int sum = add(12, 34); assertEquals(46, sum); Therefore, handle these specific cases by disabling the check locally through @SuppressWarnings annotations.",0
573,Add date/time to logs,0.4952391, - Improve logs,"Immediately after installation, the intent actions may not be correctly registered yet, so starting the client would fail. Therefore, wait a small delay.",0
574,Do not loan raw to IPv4Header,0.6036276, - discard non-IPv4 packets (#69),So that jenkins may execute gradle.,0
575,Ignore Firebase App Indexing lint warning,0.48381817, - Improve logs and error messages,"Do not custom the gradle build file to rename ""gnirehtet-release.apk"" to ""gnirehtet.apk"". Instead, rename it in the release script.",0
576,Introduce PacketSource,0.5485975, - Add a Rust version of the relay server,"To avoid unnecessary diffs, use the same pattern as Genymobile/base to apply separate gradle files.",0
577,Move poll to Selector,0.26136056," - Rename command ""gnirehtet rt"" to ""gnirehtet run""","Like ./release, make ./gnirehtet bash script fail on error without using ""&&"".",0
578,Fix some IPv4PacketBuffer warnings,0.72098196," - Fix buffer size to avoid ""Not an Ipv4 packet"" error (#273)","Use ""set -e"" to fail on error, so that we can remove all the trailing ""&&"". Also remove ""cd -"" which is useless (unless the script is sourced). Suggested-by: Aurélien Gâteau agateau@genymobile.com",1
579,Simplify usage function in gnirehtet bsah script,0.4524513, - Add gnirehtet.cmd script for Windows,Lint reports: App is not indexable by Google Search; consider adding at least one Activity with an ACTION-VIEW intent filter. We don't want it to be indexable. Suppress the warning.,0
580,Implement xHeaderMut to xHeader conversion,0.37194267, - Add a Rust version of the relay server,"We want to avoid the VPN to be started or stopped by anyone, so it must require a permission. Since intercepting the whole network traffic is critical, we want a system permission. In addition, we want to call it from shell, so we need an existing system permission granted to shell: link From the small permissions set matching these conditions, I chose android.permission.WRITE_SECURE_SETTINGS. Note: The following network-related system permissions granted to shell may sound more appropriate:  - android.permission.MANAGE_NETWORK_POLICY  - android.permission.CONNECTIVITY_INTERNAL Unfortunately, they were added only recently, so they are not granted to shell for older versions: link",0
581,Convert relay gradle type to application,0.52026176, - Add a Rust version of the relay server,"Lint reported: On SDK version 23 and up, your app data will be automatically backed up and restored on app install. Consider adding the attribute android:fullBackupContent to specify an @xml resource which configures which files to backup. I considered it, but there is no security reason to do that. Since we don't store anything to shared preferences or database, just disable ""allowBackup"". Should explicitly set android:icon, there is no default Gnirehtet does not have any main activity, so there is no need for an icon. Explicitly set it to @null.",0
582,Move comment,0.23520769, - Make reverse tethering starting faster,Check that fields are always private.,0
583,Make Router.removeRoute() private,0.6292988," - Add ""-r ROUTE"" option to reverse tether only specific routes",Allow release without signing with GPG.,0
584,Apply Genymobile rules for gradle files,0.4754498, - Add gnirehtet.cmd script for Windows,,0
585,Introduce Selector,0.36105376,"Use an activity (instead of a broadcast receiver) as entry point,",Organize the gradle build files the way required by Genymobile.,0
586,Remove useless annotation,0.30467534, - Handle command-line parsing natively (in Java and Rust),,0
587,Implement StreamBuffer.optimize(),0.47975534, - Optimize TCP checksum computation,Produce an unsigned APK when no keystore is defined.,0
588,Add option to reverse tether specific routes,0.8689199," - Add ""-r ROUTE"" option to reverse tether only specific routes","Executing ./release with current HEAD having no tag failed. Make ""git describe"" fallback to abbreviated commit when no tag is available.",1
589,Improve checksum tests,0.4931848, - Optimize TCP checksum computation,"Provide the SHA-256 of the release file, and gpg-sign it.",0
590,Add reinstall command,0.80509186," - Add ""./gnirehtet reinstall"" command","Add a page for developers, and rewrite README.md for end-users.",1
591,Optimize Rust TCP checksum,0.8657675, - Optimize TCP checksum computation,,1
592,Update release v2.4 links in README,0.516796,gnirehtet v2.3,"The mechanism to wait several seconds between connection attempts to provide a tunnel to PersistentRelayTunnel was totally broken. Fix it to wait 5 seconds only before creating a new tunnel, except the very first time.",0
593,Fix logger threshold,0.71271807, - Improve logs,"PersistentRelayTunnel must recreate a tunnel if the previous one is broken. It did it correctly on IOException, but not on EOF. As a consequence, the client may be left in inconsistent state after a restart of the relay server. Therefore, invalidate the previous tunnel when read() returns -1.",1
594,Allow to set a custom path for adb,0.91965216, - Make adb path configurable,"When we received a duplicate SYN (in a state different from SYN_SENT), the connection was reset (the state was set to null and a RST packet was sent). However, contrary to what happens after the other calls to resetConnection(), destroy() was not called. Thus, the TCPConnection state was reset, but the socket channel was not, so it might be left connected. As a consequence, the next call to handleFirstPacket() will set the state to SYN_SENT, leading OP_CONNECT to be set as interesting op in updateInterests(). Registering OP_CONNECT to a socket already connected is incorrect, it will wake up selector.select() at every call, leading to 100% CPU usage. Therefore, call destroy() directly in resetConnection(), since not calling it leaves the TCPConnection in inconsistent state. But then, duplicate SYNs (which are not so uncommon) always reset the connection, making the relaying unusable. To avoid this issue, reset connection only for ""unexpected"" duplicate SYNs, i.e. a SYN having a sequence number different from the one received during the initialization of this connection.",1
595,Register event Handlers,0.43070585, - Fix several race conditions related to client reconnection,Every logs in a connection prints the connection details before the message. Factorize this behavior in AbstractConnnection.,0
596,Simplify EventHandler storage,0.4002872, - Optimize TCP checksum computation,Use the appropriate log level and produce consistent messages.,0
597,Delete old commented code,0.28617066, - Improve logs and error messages,Do not display DEBUG logs by default.,0
598,Send packet to client on process_receive(),0.50208163, - Terminate TCP connections gracefully (avoid many garbage packets),They were declared as private by mistake.,0
599,Optimize Rust TCP checksum by using raw pointers,0.7674949, - Optimize TCP checksum computation,"Provide some javadoc to explain the purpose of Packetizer, PacketSource, DatagramBuffer and StreamBuffer.",1
600,Fix NPE on invalidateTunnel(),0.55216086, - Fix possible NullPointerException on VPN starting (link),Replace: TCP {/1.2.3.4:5678 -> /8.7.6.5:4321} by: TCP 1.2.3.4:5678 -> 8.7.6.5:4321 This simplifies postprocessing with awk or sed.,0
601,Fix non-dead-code warnings,0.5498452, - Fix disconnection notification appearing while gnirehtet has been stopped,"Some comments have been automatically refactored along with the method names, leading to meaningless sentences.",0
602,Update Android application version to 1.1,0.57887745, - Support Android O (fixes #44),The port 1080 is often used by SOCKS proxies. Use a port which is unlikely to be used.,0
603,Upgrade gnirehtet version to 2.0,0.83805215,Gnirehtet v2.2,"In addition to ~/.gradle/gradle.properties, the properties may be stored in ./gradle.properties.",1
604,Fix starting log,0.7022065, - Improve logs and error messages,"If no package ""com.genymobile.gnirehtet"" is installed, execute ""gnirehtet install"" before starting the client.",1
605,Add benchmark for Rust TCP checksum,0.7328472, - Optimize TCP checksum computation,,1
606,Implement reset connection for client and channel,0.5710105, - Fix several race conditions related to client reconnection,"Add a new command ""rt"", which enables reverse tethering for exactly one deivce: it starts both the client and the relay server, and stop them both on Ctrl+C.",0
607,Fix tunnel provider connection temporization,0.73989946, - Force IPv4 for tunnel connection (fixes #42),"Several calls to invalidateTunnel() may be requested from different threads in PersistentRelayTunnel. As a consequence, tunnel may be null during the execution of close(). Add a check to avoid a NullPointerException.",1
608,Make GnirehtetService foreground,0.65084064,Gnirehtet v2.2,"Do not send the START intent if the ""adb reverse"" call failed.",0
609,Improve connections logs,0.79622906, - Improve logs,It makes it easier to customize their path.,1
610,Ignore spurious events,0.22798964, - Terminate TCP connections gracefully (avoid many garbage packets),It generates dist/gnirehtet-VERSION.zip.,0
611,Fix warnings in tests,0.5529972, - Improve logs and error messages,Rename:     app-debug.apk -> gnirehtet-debug.apk     app-release.apk -> gnirehtet.apk,0
612,More tests for IPv4PacketBuffer,0.6322434, - discard non-IPv4 packets (#69),Use Android plugin 2.3.0 (requiring Android build-tools 25) with gradle 3.3.,0
613,Update README for Windows users,0.4271853, - Add gnirehtet.cmd script for Windows,"For consistency, bind gradle convenience tasks to the gnirehtet script.",0
614,Simplify Packetizer inflate(),0.42401987, - Optimize TCP checksum computation,Provide commands for installing and uninstalling the client on Android devices: ./gnirehtet install [serial] ./gnirehtet uninstall [serial],0
615,Fix author e-mail in Cargo.toml,0.38521844, - Improve logs and error messages,"Find the relay path automatically in a predefined path list, so that the bash script works both for development and release. In development, it will find relay/build/libs/relay.jar generated by gradle, while in release, it will find relay.jar in the current directory.",0
616,Add Homebrew instructions to the README,0.3891241," - Add ""autostart"" and ""autorun"" commands to start on device connection","In order to wake up a blocking read() on VPN, we triggered a name resolution request, that in turn sent a UDP packet. However, a name resolution may send several UDP packets successively, because it retries if it gets no response. In that case, some UDP packets may actually be sent over the network, which is unnecessary. Instead, send a single meaningless UDP packet, just for waking up the blocking read().",0
617,Remove copy() from TransportHeader,0.43607828, - Terminate TCP connections gracefully (avoid many garbage packets),Provide a bash script for starting/stopping the gnirehtet client and server easily.,0
618,"Improve ""closing"" naming consistency",0.33336115," - Rename command ""gnirehtet rt"" to ""gnirehtet run""","I don't like that, but some people do...",0
619,Improve style,0.39215642, - Improve logs,Provide gradle code to sign release builds.,0
620,"Add simple ""gnirehtet rt"" command",0.7858635," - Rename command ""gnirehtet rt"" to ""gnirehtet run""","Neither vpnInterface.close() nor vpnInputStream.close() wake up a blocking vpnInputStream.read(). Therefore, we need to make Android send a packet to the VPN interface (here by requesting a name resolution), so that any blocking read will be woken up. Since the tunnel is closed at this point, it will never reach the network.",1
621,Remove unused import warning,0.38146994, - Fix possible disconnection on upload (fixes #43),"In addition to manage the packet forwarding, the Forwarder class was also responsible to maintain a valid connection to the relay server (in particular, it had to reconnect it every time it was disconnected). To simplify, provide a PersistentRelayTunnel class handling the reconnections.",0
622,Fix comment,0.3667085, - Fix several race conditions related to client reconnection,Use simple class names instead of fully qualified class names (e.g. RelayTunnel instead of com.genymobile.gnirehtet.RelayTunnel).,0
623,Use Packetizer to split TCP stream into packets,0.73238766, - Terminate TCP connections gracefully (avoid many garbage packets),Log when the services receive an intent. This will help to debug issues with the STOP request.,1
624,Fix cleanup poll timeout,0.43205318,Fix cleanup race condition in Java relay server (#154),Starting gnirehtet when the VPN is already established leaves it in an inconsistent state. Just ignore the request in that case. Note that this also ignores any configuration passed to the START request.,0
625,Fix for potential crash under Android Oreo when sending STOP intent,0.867183, - fix possible crash on Android O on stop intent (#129),"Always print the milliseconds on 3 characters, to fix the String representation when there are less than 100 milliseconds (11:22:33.044 instead of 11.22.33.44).",1
626,Add instruction on version upgrade,0.4826498," - Add ""./gnirehtet reinstall"" command","From the device, local addresses like 127.0.0.1 refer to the device itself. Non-local addresses are forwarded through the tunnel to the host. Therefore, there was no way to refer to the host ""localhost"". In particular, on Ubuntu, the default DNS server points to 127.0.1.1. To overcome this problem, map 10.0.2.2 to localhost like the Android emulator does. Therefore, every TCP or UDP connection having 10.0.2.2 as destination will open a socket to InetAddress.getLoopbackAddress() from the host.",0
627,Simplify connection removal,0.55503166, - Terminate TCP connections gracefully (avoid many garbage packets),"We will add support for command-line parameters, so move the main method to its own class.",0
628,Add tests for StreamBuffer,0.42550954, - Improve logs and error messages,"In order to fail fast, make VpnConfiguration store DNS server addresses as InetAddress instead of String.",0
629,Fix call to ptr::copy,0.42490977, - Optimize TCP checksum computation,"To make the VPN configurable, pass a VpnConfiguration instance as GnirehtetService intent extra. To be able to configure it from command line, expose configuration options as separate intent extras in GnirehtetControlService. For now, only DNS servers are configurable: adb shell am startservice -a com.genymobile.gnirehtet.START \     --esa dnsServers 8.8.8.8",0
630,Set limit before position,0.43118355, - Make reverse tethering starting faster,"Now that the client always reconnects to the Relay server, we can start them in any order. Therefore, expose a simple task to start the client, then the server (which is kept open): gradle start",0
631,Add VisibilityModifier checkstyle module,0.3763507, - Improve logs,"When the VPN is started (the START action has been sent), always reconnect to the relay. As a consequence, the Relay server may be started after the client. Even if Relay server is disconnected and reconnected, the client will recover.",0
632,"Extract tcp_header without ""if let""",0.5531255, - Optimize TCP checksum computation,"The VPN was started in service onCreate(). Since we added our own STOP_VPN action, the behavior could be unexpected. Handle both starting and stopping in onStartCommand() instead.",0
633,Add tests for IPv4 header length,0.5856296," - Fix buffer size to avoid ""Not an Ipv4 packet"" error (#273)","To expose START and STOP actions to shell, we need a separate Android service (see its Javadoc for details). Now, we can use these commands to control the VPN: adb shell am startservice -a com.genymobile.gnirehtet.START adb shell am startservice -a com.genymobile.gnirehtet.STOP",0
634,Simplify test method name,0.34985012, - Optimize TCP checksum computation,So that 'gradle debug' builds both the Android client and the relay server.,0
635,Improve relay server starting logs,0.65497166, - Improve logs and error messages,"When the key became invalid, do not update interests (it would throw a CancelledKeyException).",0
636,Fix style for consistency,0.3072822, - Improve logs,"A received RST packet must be ignored if it is out of the client window. A received duplicate SYN packet must be handled before checking that it matches the expected sequence number: of course it does not, if it's a duplicate SYN, it refers to a previous sequence number.",0
637,Introduce StreamBuffer,0.36827177, - Make adb path configurable,"Connections may use sendToClient(packet) to send a packet to the client. However, this may fail (and return false), e.g. when the client buffer is full. This is ok for our crafted empty packet (ACK, RST, SYN-ACK…), because their loss is gracefully handled. However, we cannot lose packets built from the network socket streams, because there is no way to recover. We also want to avoid new allocations for keeping them, because they would be unlimited. Therefore, instead of sending a packet, a TCPConnection (the packet source) requests the client to pull from it, by calling consume(this). The reading interest from the network socket will be disabled until the client succeeds. As soon as the client buffer get more free space, the client takes the responsability to make another attempts to pull from the pending packet sources.",0
638,Introduce TCPHeader and UDPHeader,0.42187697, - Optimize TCP checksum computation,"Add several log levels, and improve log messages in the application.",0
639,Rename modules with _,0.4543373," - Rename command ""gnirehtet rt"" to ""gnirehtet run""","Do not send packets outside the client TCP window, otherwise they would be dropped and our connection would be broken (since we don't retransmit data).",0
640,Test parsing of IPv4PacketBuffer,0.62355494, - discard non-IPv4 packets (#69),"A packet built from the data received from the network TCP socket may not be sent to the client for several reasons:  - when the client buffer is full, sendToClient(…) returns false, and    the packet is not sent;  - when the packet sequence number is outside the client window, we must    keep it until the window advances enough. Those packets may not be dropped, because they are received from the network TCP socket: we have the responsability to transmit it, otherwise the whole connection would be broken. Therefore, when a packey may not be sent, keep it, and disable our interest in reading the network TCP socket. When the client is ready to receive more packets, it will call processPacketForClient() (not implemented yet). We must take care of updating the acknowledgement number (we may have received packets since we built our pending IPv4Packet).",0
641,Use a broadcast receiver to receive requests,0.7260263,"Use an activity (instead of a broadcast receiver) as entry point,",This helps to understand problems after the fact.,1
642,Change generated apk names,0.50505334, - Make apk path configurable (#90),,0
643,Upgrade Android versions,0.57099557, - Support Android O (fixes #44),"To acknowledge a FIN, we must send its sequence number + 2:  - +1 because acknowledgement numbers refer to the next expected    sequence number;  - +1 because FIN counts for 1 byte.",0
644,HandlerTokenManager,0.40243906, - Fix several race conditions related to client reconnection,Print date and time to logs.,0
645,Route constructors,0.53307265," - Add ""-r ROUTE"" option to reverse tether only specific routes","For simplification and factorization, replace the buffer manually managed in TCPConnection by the improved Packetizer. Previously, TCP sockets were read into a buffer (2^16 bytes), then split into packets of 1400 bytes. Now, at most MAX_PAYLOAD_SIZE (1400 bytes) will be read from the TCP sockets at once, so there is no need for splitting. This prevents unnecessary copies, but may require more syscalls to read the socket.",0
646,Ignore spurious wakeups,0.33959663, - Fix disconnection notification appearing while gnirehtet has been stopped,"Packetizer may be generalized to support channels so that UDPPacketBuilder become useless. Moreover, this prevents one unnecessary copy to a temporary buffer.",0
647,Implement TCPConnection.handle_fin(),0.6332965, - Optimize TCP checksum computation,"Following the single responsability principle, move the datagram packet creation to a separate class: UDPPacketBuilder.",0
648,Introduce IPv4Header,0.68289226, - Force IPv4 for tunnel connection (fixes #42),Declare test util methods as static.,0
