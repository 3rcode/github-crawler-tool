Index,Commit Message,Score,Correspond Changelog Sentence,Commit Description,Label
1,Merge pull request #1760: Update Git to v2.34.0.vfs.0.0,0.7193414,1712: git-vfs: update to Git 2.30.0,index-parser: get the time in a cheaper way,1
2,Mac kext: Fix for vnode leak on kext unload.,0.5141011,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,"UtcNow spends a lot of time getting a very precise system time, including leap seconds and interpolation through QueryPerformanceCounter. Use Environment.TickCount (milliseconds since boot) instead, since that just retrieves a value in shared memory that the kernel keeps up to date. This value is still suitable for controlling how much log output index parsing produces. This UtcNow call consumes 15% of the time under GitIndexParser.ParseIndex. See https://github.com/dotnet/runtime/blob/master/src/libraries/System.Private.CoreLib/src/System/DateTime.Windows.cs.",0
3,Add upgrader to convert placeholderlist to SQLite,0.8297475,Moves placeholder database into SQLite for better performance.,dependencies: resolve dependabot alerts,1
4,Mac kext: Sets deployment target to macOS 10.13 for all targets,0.5169585,Initial Mac platform native notifications,Update newtonsoft.json to 13.0.1 to mitigate exposure to security vulnerability associated with previous versions.,0
5,Rework Git version parsing into a single script,0.59488505,- Updated Git for a security issue.,Update newtonsoft.json to 13.0.1 to mitigate exposure to security vulnerability associated with previous versions.,0
6,Migrate log files to fresh directory if updating ACLs fails,0.47698513,See the full change log,The Nuget.Commmands package version 4.9.2 contains a known vulnerability. Fortunately we are no longer using this package and can mitigate by removing our reference to it.,0
7,Mac kext: Adds assertion for disconnecting user client matching expected,0.42810532,Initial Mac platform native notifications,,0
8,StyleCop fixes,0.58097005,- Other bug fixes,,0
9,Mac: Prevent double hydration and directory expansion,0.53598255,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,,0
10,Merge pull request #857: GitStatusCache: logging tweaks,0.5958123,"- Upgraded to Git 2.19. This version brings with it improvements to unpack_trees to speed up checkout, merge, reset, and rebase.","This reverts commit 183f1965c0dda4b73aedfccc9f17a3ba2c0fd7c2, reversing changes made to 2cd3558ab4d5bb1f7e42d55dd07df43889eba47a.",0
11,Fix StyleCop issues,0.5543113,- Other bug fixes,*.csproj: update MicroBuild package names,0
12,tidy parent/child path creation in dehydrate tests,0.40285057,- No-op gvfs prefetch --hydrate performance is dramatically improved,Necessary for new singing build changes.,0
13,Unify CommonAssemblyInfo usage by pulling it all into GVFS.cs.props,0.52315724,- We have improved how GVFS handles enlistments in junctions and mapped to a drive letter.,Use index.lock and move writes to head and refs to the end of the run to make interrupted fastfetch operations less bad,0
14,DiagnoseVerb: Copy commit-graph files from info dir,0.6293481,- Disable commit-graph verify for performance concerns,,0
15,Add validation and tests for the sha value,0.46901727,- Commit-graph and multi-pack-index are validated after writing to eliminate corruption scenarios,,0
16,improve readme formatting,0.57242197,1750: Update Readme.md,,0
17,Update MirrorProvider for hardlink notification,0.44371656,Update components included with internal distribution,,0
18,Merge pull request #773: Improve termination of background Git processes during upgrade,0.6199861,"- Upgraded to Git 2.19. This version brings with it improvements to unpack_trees to speed up checkout, merge, reset, and rebase.",Deploy to winget via wingetcreate,0
19,More cleanup sparse (#1368),0.58333796,Improves the rate of .gvfsCache cleanup.,Remove the custom mjcheetham/update-winget task in favor of the wingetcreate tool.,0
20,LooseObjectsStep: Use ObjectExists() and other cleanups,0.44486365,Improves the rate of .gvfsCache cleanup.,"There were some build issues related to the install path moving from ""GVFS"" to ""VFS for Git"". The pack-file maintenance tests were flaky for reasons we've seen before on the Scalar side, so let's focus our efforts keeping the Scalar tests green.",0
21,PR Feedback: Make upgrader Create method parameters consistent,0.52713656,- Improvements to compact and maintain the ModifiedPaths.dat database to help mitigate the problem of command perf degrading over time in an enlistment.,"These are verified by the Scalar functional tests, anyway.",0
22,Upgrader: blocking process set should be case insensitive,0.4594677,1685: minor path comparison fixup in ProductUpgrader,,0
23,Force untracked files to be shown when running status for Dehydrate and Include verbs,0.42716306,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,,0
24,Prefetch tests: Delete multi-pack-index before indexing a pack,0.5539125,* git multi-pack-index verify would run slowly if the objects directory had more than 2048 packfiles.,,0
25,Merge pull request #1010: Improve WriteWithoutClose \ CreateFileWithoutClose Stability,0.5558274,Pull Requests,,0
26,PR Feedback 1,0.48532808,Release notes,,0
27,Comment upkeep (#1321),0.5010454,1747: UpgradeVerb: write deprecation notice,To address this: using the id parameter we can make sure it will always install this package.,0
28,Merge pull request #1448 from github/use-dir-sep-char,0.5060883,Pull Requests,,0
29,Enable more functional tests,0.5251695,"Other bug fixes, engineering improvements, and test reliability fixes.",Adding the source parameter will make sure that the install command will actually install from winget,0
30,build: migrate GVFS.FunctionalTests.LockHolder project,0.5804052,1678: BuildGVFSForWindows.bat: use nuget on PATH when possible,Set up infrastructure for wingetcreate,0
31,Additional cleanup of PrjFSLib.cpp,0.6414002,Improves the rate of .gvfsCache cleanup.,wingetcreate is a Windows exe and thus must be run on Windows. Updating our release-winget workflow accordingly.,0
32,Merge pull request #1071 from jamill/github_upgrader_filesystem,0.50307196,Pull Requests,Updating inno installer metadata to align with the specification outlined in github/git-fundamentals#700.,0
33,Merge pull request #655 Dispose of unused LibGit2Repos,0.4909801,Pull Requests,Updating necessary files to support spaces in paths when compiling VFS for Git.,0
34,Mac ProjFS Kext: Disallows file/directory renames in offline roots,0.5029951,Switched over to use the Windows Projected File System (ProjFS) optional feature on RS4 and later. ProjFS is the new name for the GvFlt driver and its associated user mode library.,The recommended way to install is now to use winget.,0
35,Mac kext: Dynamically alloc virtualisation root array & resize when full.,0.52220356,- Improved the memory usage during MIDX computation.,Co-authored-by: Victoria Dye vdye@github.com,0
36,Merge pull request #1446 Cleanup virtualizer tests,0.57308996,Improves the rate of .gvfsCache cleanup.,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
37,GitProcess: Enable lower ProcessPriorityClass,0.5686928,This includes the Git Credential Manager Core v2.0.394.50751.,Upgrade update-winget action to v1.4,0
38,Merge pull request #362 from kewillford/check_ignore,0.5297218,Pull Requests,This version allows us to update existing winget manifests by specifying a manifest's SHA if it already exists in microsoft/winget-pkgs. Pull Requests  #178: Allow updates to existing winget manifests,0
39,Merge pull request #856 from pmj/mac-kext-iocount-fix,0.45538744,Pull Requests,See microsoft/git#405.,0
40,ProductUpgradeTimer: remove unacceptable Environment.Exit(),0.9037197,1668: ProductUPgradeTimer: remove unacceptable Environment.Exit(),,1
41,Use a new log directory for upgrade logs to ensure correct ACLs and,0.6043246,See the full change log,,0
42,Mac PrjFSLib: Makes offline I/O registration thread safe and refcounted,0.4720685,1658: ProjFSFilter: Be more robust to missing PowerShell,Update Readme.md,0
43,Addressing various coding style code review comments,0.3734337,1741: Fix winget tag specification,,0
44,Handle cleaning up modified paths when a folder is renamed,0.57229805,Adds additional logging for folder and file placeholder creation.,Applying fix to prevent PRs into winget-pkgs from default branch of forks. See mjcheetham/update-winget#107 for more details.,0
45,Migrate nuget feeds,0.72848296,- Upgrade supports NuGet feeds as a distribution source.,"We removed the old upgrader in #1746 but delayed creating its replacement. The plan was to use winget upgrade, but it is only experimental right now. Further, we would need to use winget list to determine if we needed winget install instead, and winget list is also experimental. The tool needs to mature more before we can create a dependency on it. Instead, warn a user that tries to upgrade with gvfs upgrade that this CLI is no longer supported and instead point them to the repository's README which can help with the latest update.",1
46,Ensure git-credential cmds are run with correct wrkdir,0.517666,This includes the Git Credential Manager Core v2.0.394.50751.,Fix for #1743 - do not exit early if no blobs found for a period when prefetching.,0
47,FolderDehydratePreviouslyDeletedFolders: add more validation,0.49750906,- Commit-graph and multi-pack-index are validated after writing to eliminate corruption scenarios,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
48,Mac kext: Outstanding message comment & code formatting cleanup.,0.52137065,Initial Mac platform native notifications,"In testing, we see the installer hanging until the UI is killed. ```pwsh Start-Process .\SetupGVFS.1.0.21085.9.exe -ArgumentList ""/VERYSILENT"", ""/NORESTART"", ""/NOCANCEL"", ""/SP-"", ""/CLOSEAPPLICATIONS"", ""/RESTARTAPPLICATIONS"", ""/LOG=gvfs.log"", ""/SUPPRESSMSGBOXES"" -Wait Hangs until GVFS.Service.UI is killed ``` Note, this is my first ever time editing an Inno Setup script or working with Pascal, so I may have gotten some things wrong :). Fixes #1739.",0
49,Generate CommonAssemblyVersion.cs file on MacOS and update all SDK style projects to consume it.,0.56265044,1744: Overhaul build and project systems and drop Mac/POSIX code,,0
50,Fix test that moved new folder outside the repo,0.53249085,- Fixes a copy failure when copying the upgrade tool to its temporary location.,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
51,Merge pull request #1287 from github/diff-tree-result-relative,0.5190208,"- Upgraded to Git 2.19. This version brings with it improvements to unpack_trees to speed up checkout, merge, reset, and rebase.",,0
52,Merge pull request #1351 No longer set PATH for git process and remove use of gvfs hooks root,0.5933079,"- VFS for Git will prefetch commits and trees from a cache server in the background on a schedule, to improve the speed of user-initiated fetches, pulls, and pushes",,0
53,Update PowerShellRunner to support creating hardlinks,0.55207705,1658: ProjFSFilter: Be more robust to missing PowerShell,"Remove all code for the custom upgrader that ran the installer either from GitHub or from a NuGet feed. This leaves gvfs upgrade non-functional, but a replacement will follow that calls winget upgrade vfsforgit.",0
54,build: migrate GVFS.Common project,0.6230083,- We have improved how GVFS handles enlistments in junctions and mapped to a drive letter.,Fix winget tag specification,0
55,Merge pull request #676 from nickgra/PrjFSRefactor,0.50413644,1658: ProjFSFilter: Be more robust to missing PowerShell,,0
56,Merge pull request #16 from rootulp/patch-1,0.5304986,Pull Requests,This leaves 'gvfs upgrade' non-functional Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
57,Code cleanup,0.63539195,Improves the rate of .gvfsCache cleanup.,"This timer is responsible for checking if there is a new VFS for Git version on a timer, then launches a notification to GVFS.Service.UI. I was hoping to delete all of GVFS.Service.UI, but we need the toast notifications for when we attempt to auto-mount and have a failure. Signed-off-by: Derrick Stolee dstolee@microsoft.com",0
58,NuGetUpgrader: use transformed URL from feed URL for credentials,0.63421977,- Properly reacquire credentials during nuget upgrader,,0
59,sparse: improve pattern matching related tests,0.38187802,1685: minor path comparison fixup in ProductUpgrader,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
60,Keep the existing placeholders hashset up to date for reexpansion,0.512497,- Fixed an issue where some concurrent updates to the placeholder database would fail,"When I run the tests locally, these exits are hit every time. Something odd is happening. Signed-off-by: Derrick Stolee dstolee@microsoft.com",0
61,Merge pull request #1098 Update PrjFSKextLogDaemon to forward messages to GitServiceDaemon,0.57471895,"- VFS for Git will prefetch commits and trees from a cache server in the background on a schedule, to improve the speed of user-initiated fetches, pulls, and pushes",Overhaul build and project systems and drop Mac/POSIX code,0
62,Update PrjFSKextLogDaemon to monitor and record Vnode cache health,0.61668473,"- VFS for Git will pre-calculate status in the background in response to changes in the workdir, to improve the speed of user-initiated statuses.",,0
63,PR Feedback: Cleanup comments,0.4886273,General improvements:,,0
64,Merge pull request #600 Update Git to v2.20.0.vfs.1.1,0.68083906,1712: git-vfs: update to Git 2.30.0,,0
65,FunctionalTests: Use temporary branch to fix all tests,0.5425397,"Other bug fixes, engineering improvements, and test reliability fixes.",,0
66,Add more output to GeneratePrjFSVersionHeader.sh,0.5300938,1658: ProjFSFilter: Be more robust to missing PowerShell,,0
67,this should go in LinuxPlatform,0.4234922,1679: BuildGVFSForWindows.bat: use nuget on PATH,,0
68,Merge branch 'features/upgrade_extensibility' into more_service_acl_changes,0.47576016,"The merge strategy default is changed from recursive to ort which should present significant performance improvements for commands such as git merge, git rebase, and git cherry-pick. Huge thanks to external contributor @newren for creating this new merge strategy!",,0
69,Initial MacFileBasedLock implementation,0.53257334,Initial Mac platform native notifications,"Simplify solution configurations (we only build on Windows x64 now) and remove solution-level project build order.. we now rely on MSBuild and ""real"" project-to-project dependencies.",0
70,Update some naming for post index changed hook,0.4783529,"- Post-index-change hook will help ensure consistency between Git and VFS for Git's reckoning of the state of the repository, and eliminate a class of bugs.",,0
71,"Merge pull request #1756: ""winget install microsoft-git"" finds entries in msstore",0.45803526,1741: Fix winget tag specification,,0
72,Fix AddStageTests on Windows,0.5263339,- Other bug fixes,,0
73,Merge pull request #373 Update Git to include tracing and fix for untracked files,0.610024,"- Upgraded to Git 2.19. This version brings with it improvements to unpack_trees to speed up checkout, merge, reset, and rebase.",,0
74,sparse: allow dehydrate to continue if a directory delete fails,0.5119685,Git commands are now allowed to delete an empty directory,,0
75,SharedCacheTests: Update WellKnownCommitSha,0.4390273,- Commit-graph and multi-pack-index are validated after writing to eliminate corruption scenarios,"Migrate the Windows installer project to the new build system, and also use wildcard inclusion of files in the Inno setup.",0
76,Add LogInfo / LogWarning messages to PrjFSLib,0.5579299,1683: GVFS.SignFiles.csproj: include more DLLs for signing,Replace the 'sign files' project with a 'payload' project and script (that gathers binaries for signing).,0
77,VFSForGit installer non-relocatable,0.66689235,- A couple of fixes for using VS Code on top of VFS for Git.,,0
78,Add comment about where exit codes loading kext came from,0.36262798,1647: Fix commit-graph expiration,,0
79,Fold telemetry listener creation to non-platform specific code,0.48569125,1734: Adding winget workflow,Also combine the GVFS.UnitTests and .Windows projects in to one project (it's all Windows now).,0
80,Additional Unit Test changes,0.53420943,"Other bug fixes, engineering improvements, and test reliability fixes.",,0
81,Merge pull request #1148: Fix handling of >>,0.6202472,Pull Requests,,0
82,Merge pull request #859: GitStatusCache: handle errors creating directory,0.487437,* Improve error message from gvfs upgrade if the Git installation could not be found.,,0
83,Rename methods to be more descriptive,0.44077075,The build system was rewritten from scratch to simplify the process and use a more recent version of .NET.,,0
84,Mac kext: Adds simple VirtualizationRoot_FindForVnode unit test,0.40282965,1685: minor path comparison fixup in ProductUpgrader,,0
85,Mac kext: New error logging macros which wrap vnode property query & log,0.47020054,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,,0
86,dependencies: upgrade newtonsoft.json,0.49312103,Update components included with internal distribution,,0
87,Mac: Hardlink created notification,0.6634943,Initial Mac platform native notifications,Also drop the .Windows specific project.. it's all Windows now.,0
88,Mac: Handle projection changes where git deletes folders that are still in the projection,0.5989133,Git commands are now allowed to delete an empty directory,,0
89,Fix console logging typo in MirrorProvider,0.43694308,See the full change log,,0
90,Merge pull request #1399 Add SetupFixture for teardown to get the test results at the end,0.47569782,Pull Requests,,0
91,Update git for windows version,0.7943572,Includes Git for Windows 2.30.0.,"Migrate the native VC++ projects to use the new build variables, package restore, and WinSDK to 10.0.16299.",1
92,ProductUpgrader: use OrdinalIgnoreCase in exluded HashSet,0.40938848,1652: RepoRegistry: ignore non-existent repos,Replace the GVFS.Build directory and pre-build code with targets and tasks that are better integrated with the rest of the build.,0
93,use common file name constants in DehydrateTests,0.29035962,1685: minor path comparison fixup in ProductUpgrader,,0
94,Enable runFastFetch to expect an error,0.48603484,1730: Fix an issue with FastFetch when deleting files,Drop the older custom targets and props files for the new ones.,0
95,Merge pull request #331 Remove SharedCacheTests.SecondCloneSucceedsWithMissingTrees,0.5128752,1674: Config: disable status.submoduleSummary,Move the GitHooksLoader under the GVFS directory and migrate the project file to v142 toolset (VS2019) and WinSDK10.0.16299. Also migrate project to use new MSBuild properties for the VSF for Git project.,0
96,Test reliability issue #852,0.72343624,Other bug fixes for reliability,,1
97,Rename GetAllEntriesAndPrepToWriteAllEntries to GetAllEntries,0.43558857,1747: UpgradeVerb: write deprecation notice,,0
98,Merge pull request #384: Include UTC offset in log timestamp.,0.7560173,- Log files now include UTC offset.,"In testing, we see the installer hanging until the UI is killed. ``` Start-Process .\SetupGVFS.1.0.21085.9.exe -ArgumentList ""/VERYSILENT"", ""/NORESTART"", ""/NOCANCEL"", ""/SP-"", ""/CLOSEAPPLICATIONS"", ""/RESTARTAPPLICATIONS"", ""/LOG=gvfs.log"", ""/SUPPRESSMSGBOXES"" -Wait Hangs until GVFS.Service.UI is killed ```",1
99,Merge pull request #1381: Upgrade: Fix test flakiness around upgrade reminders,0.6073107,Other bug fixes for reliability,,0
100,Merge pull request #1193: Mac ProjFS: Only hydrate/expand when deleting due to rename,0.5140145,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,This includes the latest changes for winget installation and upgrading with git update-microsoft-git.,0
101,Update mac os build subtitle,0.5436387,1744: Overhaul build and project systems and drop Mac/POSIX code,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
102,Upgrade: upgrade help text for the NoVerify option,0.55650955,Update NuGet upgrader with new Microsoft package signing certificate,Bumping mjcheetham/update-winget version,0
103,Add method to dehydrate a folder,0.4994186,Adds additional logging for folder and file placeholder creation.,,0
104,Merge pull request #420 PostFetchJob: Kill running Git process when unmounting,0.5948617,- Fixed a bug that would cause VFS for Git mount process to shut down if it receives out-of-order ProjFS callbacks.,Adding winget workflow,0
105,Merge pull request #1520 Add sparse set and file options,0.57272846,Pull Requests,,0
106,Enable ProductUpgraderInfo to be testable,0.58329976,1685: minor path comparison fixup in ProductUpgrader,,0
107,Update Git to v2.34.0.vfs.0.0,0.93774974,1736: Update Git to v2.31.1.vfs.0.3,See microsoft/git#320.,1
108,Update Git to v2.26.0,0.9305465,1642: Update Git to v2.26.0,This fixes #1729 and also takes care of a performance problem in the same method.,1
109,Address multiple issues with HardLinks,0.48116338,- Other bug fixes,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
110,Merge pull request #1710: Add new Microsoft certificate thumbprint,0.87013316,1710: Add new Microsoft certificate thumbprint,I pushed all of the packages we need to our custom feed. Script included.,1
111,Upgrade: run upgrader in system diretory,0.554253,The gvfs upgrade command is deprecated. Future upgrades will require using winget or installing directly from the releases page.,,0
112,Add ParallelHydrationTests,0.4294581,1685: minor path comparison fixup in ProductUpgrader,,0
113,Mac kext: Adds check to only handle fileops on allowed filesystems,0.47018272,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,,0
114,Merge pull request #1224 from jamill/upgrader_tasks/directory_structure,0.58554626,Pull Requests,,0
115,Repair Functional Tests: test for confirm on and off,0.7016709,"Other bug fixes, engineering improvements, and test reliability fixes.",See microsoft/scalar#492 for a similar change.,1
116,Add ProductUpgraderInfoTests,0.6019895,1685: minor path comparison fixup in ProductUpgrader,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
117,Use ushort for the mode in ChangeMode methods,0.4601947,1674: Config: disable status.submoduleSummary,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
118,Add/Fix Functional Tests for Hardlinks,0.48568282,"Other bug fixes, engineering improvements, and test reliability fixes.","The interface between microsoft/git and VFS for Git has been stable for a while. We don't anticipate changing it any time soon. Thus, we can drop the requirement of an exact Git version match. This PR changes the current logic in a few ways:  Take the full GitVersion parsing logic from microsoft/scalar, as it is more robust. Remove the exact version match with a minimum version match. Use a fixed constant version string instead of a build-time string. Require that the Revision of the version string is an exact match. We will use this to signal that a microsoft/git version introduces a breaking change that requires a VFS for Git upgrade.  What is a Revision item? In a Git version string such as v2.X.Y.vfs.Z.W, the Revision is represented by Z. This allows us to modify the other version items arbitrarily, including taking version numbers 2.X.Y from upstream and updating .W if we have any hotfixes to microsoft/git.",0
119,Simplify steps language,0.43140352,- Improved the memory usage during MIDX computation.,"We will use the following rules for testing the Git version is compatible with the current version of VFS for Git:   The Platform must match "".vfs.""   The version must be at least the fixed minimum revision.   The Revision must equal the current minimum revision.   This allows us to upgrade Git without updating VFS for Git. Thus, we could reduce VFS for Git version upgrades when Git releases a security update. Signed-off-by: Derrick Stolee dstolee@microsoft.com",0
120,Move newline into ModifiedPathsShouldNotContain,0.43661934,- Improvements to compact and maintain the ModifiedPaths.dat database to help mitigate the problem of command perf degrading over time in an enlistment.,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
121,Mac kext: Fileop handler should not attempt to message missing provider,0.5036146,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,This parsing is more robust to many different Git versions. Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
122,Merge pull request #439 from nickgra/downloadDylib,0.47327632,Pull Requests,[HOTFIX] Update Git to remove ODB string check,0
123,Update GitForWindows version to include new MIDX code,0.6755931,1653: Update Git to include v2.26.1,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
124,Add interfaces to enable unit testing,0.49644437,"Other bug fixes, engineering improvements, and test reliability fixes.",,0
125,Centralize business logic for starting background prefetch.,0.45411304,Background tasks run with lower priority to address user feedback on maintenance job performance.,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
126,Merge pull request #1517 Call multi-pack-index with --no-progress,0.55920017,Pull Requests,git-vfs: update to Git 2.30.0,0
127,"use "".mockvfsforgit"" in MockPlatform",0.4430935,1658: ProjFSFilter: Be more robust to missing PowerShell,,0
128,Fixing Windows build error,0.49360475,- Other bug fixes,There is a new certificate thumbprint for the Microsoft signing certificates used to sign NuGet packages.,0
129,Remove TODOs,0.56929135,1689: Make delete docs more verbose,There is a new certificate thumbprint for the Microsoft signing certificates used to sign NuGet packages.,0
130,Merge pull request #1486: Clean up Register/Unregister for OfflineIO,0.43859908,Pull Requests,This actually updates to a better build:  It has a new tag v2.29.0.vfs.0.1. It was created after git-for-windows/build-extra updated with the new GCM Core package.,0
131,Update Git to include trace2 V3,0.7387622,1653: Update Git to include v2.26.1,Signed-off-by: Derrick Stolee dstolee@microsoft.com,1
132,build: migrate FastFetch project,0.5644528,1730: Fix an issue with FastFetch when deleting files,"Some macOS projects were causing failures in the release process, so let's finally get around to deleting them. Replaces #1700.",0
133,TryPrefetchCommitsAndTrees downgraded to Warning,0.53731793,1668: ProductUPgradeTimer: remove unacceptable Environment.Exit(),Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
134,Also update ModifedPaths for update-index command,0.5739871,Update components included with internal distribution,"Some macOS projects were causing failures in the release process, so let's finally get around to deleting them. Signed-off-by: Derrick Stolee dstolee@microsoft.com",0
135,Update NUnit dependencies,0.56222,Update components included with internal distribution,See microsoft/git#295. Scalar already merged these changes to the PackfileMaintenanceStepTests. The other changes were reviewed privately.,0
136,whitespace: standardize newlines in recently-edited files,0.4210372,1664: Update USN journal entries for projected folders,"The loose object download needs to verify the objects being sent across the wire before moving them to their ""real"" locations in the object directory. The previous implementation wrote them to disk then read from that file to hash the contents. Instead, create a new ""SideChannelStream"" that injects between the responseStream and the inflater, but sends all of the data that is read out to the filestream. Here is a diagram of the stream sequence: responseStream -> sideChannelStream -> inflateStream -> hashingStream                            \                                   |                 \                                 \|/                  tempFileStream                devNull By copying all data from the hashingStream into devNull, we ensure that the responseStream is drained and written to the tempFileStream while simultaneously inflating and hashing the object contents. We then amortize this computation during the window that we are downloading data over the network, minimizing the potential performance impact. Helped-by: Matthew Cheetham mjcheetham@github.com Signed-off-by: Derrick Stolee dstolee@microsoft.com",0
137,Measure the time spent within VirtualizationRoot_FindForVnode,0.4419701,"- Further optimizations to GVFS's index parsing, saving time on commands that need to reproject (like checkout).","After we write the data to disk, check the file that it matches the correct hash before moving it into place. If the hash is wrong, then include details about where the data is stored for reference. This can be marked as optional to make existing unit tests work, but the logic is covered by a new set of unit tests. Signed-off-by: Derrick Stolee dstolee@microsoft.com",0
138,Reorganize health assets (#1307),0.39949423,1669: Docs: more troubleshooting and FAQs,"We will start hashing loose objects downloaded from the remotes, but we need to include a package (SharpZipLib) that can handle the headers included in the ZLib compression used by Git. .NET's default decompression algorithm cannot handle those optional headers, unfortunately. Signed-off-by: Derrick Stolee dstolee@microsoft.com",0
139,Merge pull request #1328 from jeschu1/teststouserdir,0.5989687,Pull Requests,The last condition of this test no longer applies because Git will repack files in a different way than it used to. Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
140,Merge pull request #1049 from Fixing failure in full FT,0.47708923,1674: Config: disable status.submoduleSummary,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
141,First round of changes for PR feedback,0.5145926,Release notes,See #1696 for the tracking issue. This PR intends to get our functional tests green again so we can have some confidence in the Git 2.29.0 update in #1694.,0
142,Mac PrjFS userlib: Code reuse improvements.,0.5959939,1744: Overhaul build and project systems and drop Mac/POSIX code,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
143,Handle read only files when hydrating with the mirror provider by only requesting Read access,0.37955222,- Gracefully handle a missing shared object cache pack directory.,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
144,Don't overwrite configuration if not necessary,0.55062735,Includes fixes to config settings for internal users only,Make delete docs more verbose.,0
145,Merge pull request #815 from Perform Upgrade Check after PrjFlt is enabled,0.52199054,1697: Fix functional tests to skip around ProjFS issue,,0
146,build: migrate GVFS.GVFlt project,0.6527213,Instructions for installing and using GVFS are available at https://github.com/Microsoft/GVFS,,0
147,Upgrader: NuGet Upgrader should use GitHub endpoint for notifications,0.61133754,- Upgrade supports NuGet feeds as a distribution source.,See microsoft/git#283,0
148,Merge pull request #1618: Update Git to v2.24.1,0.70086193,1663: Update Git to v2.27.0,Signed-off-by: Derrick Stolee dstolee@microsoft.com,1
149,Update some messge wording,0.5694652,- Other bug fixes,Convert an inadvertent use of StringComparer.OrdinalIgnoreCase to the relevant OS-specific PathComparer helper.,0
150,Merge pull request #207 Remove temp paths from ModifiedPathsDatabase,0.46320766,- Fix backoff on cache server size endpoint 404.,Convert an inadvertent use of StringComparer.OrdinalIgnoreCase to the relevant OS-specific PathComparer helper.,0
151,use platform-specific path matching in func tests,0.4327153,1685: minor path comparison fixup in ProductUpgrader,"It appears that during our build, we send some DLLs for signing, but the versions we send have already been copied to other projects. Thus, we ship versions of those DLLs that are unsigned. Add extra versions of the DLLs that are currently being signed, except include them in the GVFS.Windows project that is likely where they are being copied as part of the build.",0
152,Add WaitForBackgroundOperations call with checking modified paths,0.43710512,1685: minor path comparison fixup in ProductUpgrader,"It appears that during our build, we send some DLLs for signing, but the versions we send have already been copied to other projects. Thus, we ship versions of those DLLs that are unsigned. Add extra versions of the DLLs that are currently being signed, except include them in the GVFS.Windows project that is likely where they are being copied as part of the build. Signed-off-by: Derrick Stolee dstolee@microsoft.com",0
153,Switch from FileAttributeRecallOnOpen to FileAttributeRecallOnDataAccess,0.4612919,1730: Fix an issue with FastFetch when deleting files,"Our release build is failing because we cannot download nuget due to TLS 1.2 changes. But we already require nuget.exe in an earlier step of the build. Require nuget.exe to be on the PATH, and update Readme.me accordingly.",0
154,Return correct errror message for 'git gui' on Mac,0.5315422,- Consume new GCM to fix git credential erase behavior,"Our release build is failing because we cannot download nuget due to TLS 1.2 changes. But we already require nuget.exe in an earlier step of the build. Require nuget.exe to be on the PATH, and update Readme.me accordingly. Signed-off-by: Derrick Stolee dstolee@microsoft.com",0
155,don't try to remove repo root in projection update,0.5172192,- The installer now unmounts and remounts existing repos automatically,See microsoft/git#278,0
156,ProductUpgrader: copy whole upgrade application,0.6138712,- Fixes a copy failure when copying the upgrade tool to its temporary location.,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
157,Merge pull request #350 Windows: Add delay and retry to attributes check in ExpandedFileAttributesAreUpdated,0.46062583,- Fixed an issue where some concurrent updates to the placeholder database would fail,We have a short list of Git commands that are known to be safe to run in parallel because they do not update the index. This list did not include git pack-objects. This is blocking some legitimate use of the tool.,0
158,Mac kext: Reduces deadlock risk by limiting VFS operations to regular users,0.57152534,- Better recovery from a process that terminates without releasing the GVFS lock.,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
159,Merge pull request #1029: exclude .a files from code coverage,0.49131683,Pull Requests,"The GVFS protocol does not support submodules, so disable the status.submoduleSummary config setting. A user had this enabled in their global config, but that caused ""git status"" to be much slower. When enabled, this runs two ""git submodule"" subprocesses, which are very slow. I investigated disabling these subprocesses in Git when the repo has no submodules, but it needs to run the processes to check for untracked submodules. Thus, there is no efficient way to detect that submodules exist or not in advance.",0
160,Add missing package,0.4658622,- Other bug fixes,"The ProductUpgrader makes a backup of the C:\Program Files\GVFS folder before running the install, as a mechanism for backing out a failed upgrade. However, it copies that data into C:\Program Files\GVFS\ProgramData\GVFS.Upgrade\Tools, which can create a copy loop! This affected an actual user. I'm not sure why this affects that one user but not another. In addition to adding more defensive programming (adding the target of the copy to the list of exclusions), I also added some extra tracing so we can see how these strings differ on this machine.",0
161,Add comments for lock body parsing,0.41796184,1675: PreCommandHook: don't lock pack-objects,"The GVFS protocol does not support submodules, so disable the status.submoduleSummary config setting. A user had this enabled in their global config, but that caused ""git status"" to be much slower. When enabled, this runs two ""git submodule"" subprocesses, which are very slow. I investigated disabling these subprocesses in Git when the repo has no submodules, but it needs to run the processes to check for untracked submodules. Thus, there is no efficient way to detect that submodules exist or not in advance. Signed-off-by: Derrick Stolee dstolee@microsoft.com",0
162,Fix typo,0.5216957,- Other bug fixes,"Checking for GVFS upgrades...- Checking for GVFS upgrades...\ Checking for GVFS upgrades...\ Checking for GVFS upgrades...| Checking for GVFS upgrades...| Checking for GVFS upgrades...Succeeded New version 1.0.19346.2 is available. Upgrade will unmount and remount gvfs repos, ensure you are at a stopping point. When ready, run gvfs upgrade --confirm from an elevated command prompt. bug Signed-off-by: Derrick Stolee dstolee@microsoft.com",0
163,Merge pull request #967 Fix EventMetadata construction in TryDownloadPrefetchPacks,0.50140643,Pull Requests,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
164,Merge pull request #1012 Make sure fastfetch.dll is copied to the correct location to run tests,0.5261852,A case where FastFetch would not download a small number of files has been fixed.,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
165,Handle folder created adding to included folder for Mac,0.660916,Adds additional logging for folder and file placeholder creation.,"See microsoft/git#271. Updates necessary here:   The multi-pack-index builtin started honoring repack.packKeptObjects, which is false by default. We want to repack the .keep pack because that is just the most-recent prefetch pack-file. We don't expire it, but we want to repack it.   The sparse-checkout code changed some error messages and behavior, so the reset --mixed tests no longer reflect an exact behavior match to vanilla Git (without sparse-checkout). Since VFS for Git dynamically sparsifies, we can't exactly match the behavior in the control repo. ",0
166,ProductUpgrader: add unit tests for ProductUpgrader factory method,0.6007558,1685: minor path comparison fixup in ProductUpgrader,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
167,Mac dtruss: Improvements to fstatat and getattrlistbulk output,0.45219073,1679: BuildGVFSForWindows.bat: use nuget on PATH,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
168,Use IsAddingCompleted instead of a cancellation token,0.45840353,1674: Config: disable status.submoduleSummary,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
169,Merge pull request #447 Add ability to specify an iKey for the ETW listener,0.48988256,Pull Requests,"More progress towards #1665:  Add some troubleshooting steps from the private wiki and recent issues. Add FAQs around macOS port and Scalar.  The release process needs to be documented, but it includes private info so that will happen in a private repo.",0
170,Clean up any processes that could be left hanging after the functional tests run as we do on Windows,0.546345,Improves the rate of .gvfsCache cleanup.,Co-authored-by: Johannes Schindelin dscho@github.com,0
171,Merge pull request #280 Catch and log exceptions thrown by TryPrepareFolderForCallbacks,0.53550726,Pull Requests,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
172,Move code to remove modified path entries to the TryStart method,0.48701942,1685: minor path comparison fixup in ProductUpgrader,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
173,Merge pull request #620 Add unit tests for EpochConverter,0.44513166,1674: Config: disable status.submoduleSummary,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
174,Log when a path can't be looked up from fsid,0.4610077,- Added better diagnostic info in the GVFS logs when there are network errors,"A user reported an issue via the Teams channel. Looking at the diagnose logs I saw that the user's GVFS.Service was restarting in a loop with an exception tracking down to this Environment.Exit() call. It's completely unacceptable to exit here, as it kills the service and then it restarts. Better to have no upgrades than to let this continue. The cause of this exception was a missing executable when checking ProjFS.IsGVFSUpgradeSupported(), which seems to call PowerShell. The only reason the stack would have a Win32Exception with ""The system cannot find the file specified"" is that powershell.exe is not on the PATH, which was fixed in #1658.",0
175,Merge pull request #1425: update NUnit dependencies,0.4904387,1674: Config: disable status.submoduleSummary,"This replaces #1648. BuildXL was having issues detecting that a folder had changes when the projection changed because VFSForGit was simply updating its in memory projection and not doing anything with the file system that would trigger and update to the USN. It would hand back the new items in the directory when ProjFS would ask for the items for enumeration the next time an enumeration happened. This change is to make the folder get a new USN when VFSForGit determines that a folder has changed.  This is done by keeping a SHA1 hash of all the names of the folder entries that are in the projection. When the projection changes, calculate the new SHA for the folder and compare with what it had before.  If it changed, then write and delete a file in the folder to trigger the USN update. Note: We don't need any upgrade step because we are already storing the SHA for the folder in the placeholder database but it is currently null for all folders so the first time there is a projection change it will cause all the folders to get the calculated SHA for the folder and update the placeholder database.  Tasks:  [X] Update folder SHA-1 calculation to depend only on child names, not contents. [x] Get installer to BuildXL folks for validation. [x] Place this behavior behind a config option. [ ] Document the config option. (Delaying to #1665) [ ] Update functional test to run in CI and PR validation (behind config). (The test is updated to work behind the config, but the fsutil usn readdata <path> command isn't working in CI. Tested locally.)",0
176,NuGetUpgrader: test actual gitbin variable,0.5369891,Git: Includes incremental commit graph,"We don't have a lot of user-facing documentation. Someone owns VFSforGit.org but I don't know who. (@ethomson probably knows.) However, it would be better to have a set of docs in the repo. This provides some basic info for using VFS for Git, especially around the happy path. To finish #1665, I will update the troubleshooting docs with more advice around the not-so-happy paths.",0
177,Merge pull request #322 from pmj/virt-root-refactor,0.40450388,1674: Config: disable status.submoduleSummary,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
178,Cleanup Sparse code from PR feedback,0.5209881,Improves the rate of .gvfsCache cleanup.,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
179,Merge pull request #1282 Remove requirement to run --no-renames,0.61656034,Pull Requests,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
180,Merge pull request #570 from jeschu1/addversion,0.5854438,Pull Requests,"Add new ""usn.updateDirectories"" boolean config option. This is set in the system-wide config, and requires remounting for the config to take effect. Signed-off-by: Derrick Stolee dstolee@microsoft.com",0
181,Mac dtruss: adds a command-line flag for filtering noisy syscalls,0.53634715,Initial Mac platform native notifications,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
182,Merge pull request #1411 from github/backing-root-fixes,0.4997749,* Improve error message from gvfs upgrade if the Git installation could not be found.,"To update the USN journal entries for a projected folder, we previously computed the new hash based on the contained files and their contents. Let's also include the file and folder names. Signed-off-by: Derrick Stolee dstolee@microsoft.com",0
183,Make sure placeholders are removed for all cases other then Ok when updating,0.5356704,- Fixed an issue where some concurrent updates to the placeholder database would fail,,0
184,Merge pull request #1467 Add a global setup class when using a --test= option,0.47421873,Pull Requests,,0
185,Merge pull request #1055 Fix race condition in MockVirtualizationInstance.CompleteCommand,0.5972866,1674: Config: disable status.submoduleSummary,,0
186,LooseObjectsStep: Clarify behavior of TryGetIsBlob,0.41009942,1734: Adding winget workflow,,0
187,Merge pull request #677 Remove useless tracing and useless code,0.54267836,Pull Requests,,0
188,Mac kext: Adds tests for detecting roots from xattr & recycled roots,0.39334396,Initial Mac platform native notifications,"A user had issues and we started a support line. Their diagnose log had thousands of service logs. These were all failing with this call stack pointing to the method changed here: System.ComponentModel.Win32Exception (0x80004005): The system cannot find the file specified  at System.Diagnostics.Process.StartWithCreateProcess(ProcessStartInfo startInfo)    at GVFS.Common.ProcessHelper.StartProcess(Process executingProcess)     at GVFS.Common.ProcessHelper.Run(ProcessStartInfo processInfo, String errorMsgDelimeter, Object executionLock)      at GVFS.Platform.Windows.ProjFSFilter.IsGVFSUpgradeSupported() in E:\\A\\_work\\822\\s\\GVFS\\GVFS.Platform.Windows\\ProjFSFilter.cs:line 371         at GVFS.Upgrader.InstallerPreRunChecker.IsGVFSUpgradeAllowed(String& consoleError)          at GVFS.Upgrader.InstallerPreRunChecker.TryRunPreUpgradeChecks(String& consoleError)            at GVFS.Service.ProductUpgradeTimer.TimerCallback(Object unusedState) in E:\\A\\_work\\822\\s\\GVFS\\GVFS.Service\\ProductUpgradeTimer.cs:line 168 The only explanation I can think of is that PowerShell is not available on their system!",0
189,Eliminate member variable,0.4171708,1689: Make delete docs more verbose,,0
190,Add unit tests to cover sparse in MacFileSystemVirtualizer,0.4549554,1685: minor path comparison fixup in ProductUpgrader,Add Readme.md for the virtualization states of a file,0
191,Introduce ICredentialStore,0.39265987,1666: Docs: start basic template,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
192,build: drop Mac/POSIX tests and drop WinOnly category,0.6728425,1744: Overhaul build and project systems and drop Mac/POSIX code,,0
193,Add missed file,0.5021541,- Gracefully handle a missing shared object cache pack directory.,"This will throw a new PowershellNotFoundException if not found, but this is a private static method. One caller catches this exception explicitly, and then returns an ""invalid"" mode. The only other caller only happens if the first returns ""disabled"" instead. Signed-off-by: Derrick Stolee dstolee@microsoft.com",0
194,Try to load the kext if not loaded,0.3388835,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,A user had issues and we started a support line. Their diagnose log had thousands of service logs. These were all failing with a call stack pointing to the method changed here. The only explanation I can think of is that PowerShell is not available on their system! Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
195,Remove top level try/catch to allow correct message to the user,0.42849874,1674: Config: disable status.submoduleSummary,Add Readme.md for the GitIndexProjection and related classes,0
196,Merge pull request #1267 Add logging to clone/mount paths,0.55517226,Adds additional logging for folder and file placeholder creation.,,0
197,Merge pull request #1342: Update Git to include tracing updates,0.60770833,"- Upgraded to Git 2.19. This version brings with it improvements to unpack_trees to speed up checkout, merge, reset, and rebase.",Re-pushed to include the correct version number after pushing the v2.26.1.vfs.1.1 tag.,0
198,Merge pull request #279 Make LaunchPrefetchJobIfIdle thread safe and update it to exit when unhandled exceptions occur,0.53371805,1674: Config: disable status.submoduleSummary,This time with the correct version number. Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
199,GVFSService: platforms should use appropriate pipe name,0.5225243,Switched over to use the Windows Projected File System (ProjFS) optional feature on RS4 and later. ProjFS is the new name for the GvFlt driver and its associated user mode library.,"The 'gvfs mount' command will send a message over the named pipe to deactivate a repo. This marks it with ""IsActive = false"" so we don't try to mount it at service startup. However, a repo can be deleted and then there is no way to send this message again. Instead, ignore repositories where the enlistment root does not exist. Don't remove it from the registry, since there may be a subtle reason why it is not visible from the service (such as a removed USB drive). Resolves #1651.",0
200,Address PR feedback.,0.44444987,Release notes,"The 'gvfs mount' command will send a message over the named pipe to deactivate a repo. This marks it with ""IsActive = false"" so we don't try to mount it at service startup. However, a repo can be deleted and then there is no way to send this message again. Instead, ignore repositories where the enlistment root does not exist. Don't remove it from the registry, since there may be a subtle reason why it is not visible from the serivce (such as a removed USB drive). Signed-off-by: Derrick Stolee dstolee@microsoft.com",0
201,Renaming LoadCertificate to GetCertificate,0.52603203,- Properly reacquire credentials during nuget upgrader,"Wow, this was really not working as expected. See microsoft/git#255 for how broken the --expire-time argument was. Fix this by using the fixed argument and passing a datetime instead of an offset by seconds. This will provide a longer window for old commit-graph files, but apparently we've been leaving turd files around for a long time without anyone noticing.",0
202,Changes for PR feedback:,0.5046803,General improvements:,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
203,Upgrade to new ProjFS versions,0.76870215,- Improved reliability of how the installer upgrades from non-inboxed to inboxed ProjFS.,Signed-off-by: Derrick Stolee dstolee@microsoft.com,1
204,Merge pull request #1669: Docs: more troubleshooting and FAQs,0.5878184,1669: Docs: more troubleshooting and FAQs,"See microsoft/git#251 for details. This required an update to our test infrastructure. The rebase merge backend changed in a way that it would now open an editor during git rebase --continue, causing a test to wait for vim to close. Set the editor to be a no-op. This also changes the output to include the commit oid, so use GIT_COMMITTER_TIME to be a constant to keep the commits the same.",0
205,GitAuthentication: remove credential string from trace data,0.71538246,- Consume new GCM to fix git credential erase behavior,Signed-off-by: Derrick Stolee dstolee@microsoft.com,1
206,HandleDehydrateFolders: update index using reset,0.51406527,1717 [HOTFIX] Update Git to remove ODB string check,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
207,"Merge pull request #1421: Update Git, drop MIDX writes",0.5680034,1706: Update Git to include GCM Core update,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
208,Remove parameterization from GitBlockCommands,0.627113,- Consume new GCM to fix git credential erase behavior,See microsoft/git#248.,0
209,Merge branch 'master' into fetchFilesFromList,0.4074865,- Gracefully handle a missing shared object cache pack directory.,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
210,Fixing reproduction test,0.48465955,"Other bug fixes, engineering improvements, and test reliability fixes.",sparse: allow dehydrate to continue if a directory delete fails,0
211,Removing unused code,0.48502713,1668: ProductUPgradeTimer: remove unacceptable Environment.Exit(),,0
212,Update to use DbNull.Value when inserting placeholder data,0.6283851,- Fixed an issue where some concurrent updates to the placeholder database would fail,When the code gets to the point of deleting the directory it is empty and it will not hurt anything leaving it on disk.  This also more closely matches what git does when changing the sparse-checkout since it ignores errors when trying to delete empty directories.,0
213,Add error message to output when call to gvfs/config endpoint fails,0.59706634,* Improve error message from gvfs upgrade if the Git installation could not be found.,build: fix the build error related to dotnet core version,0
214,Merge pull request #742 Read upgrade ring config from feedurl,0.49668735,1732: Use one NuGet feed,"Not sure why this fixes the ""The project was restored using Microsoft.NETCore.App version X, but with current settings, version Y would be used instead"" error. Maybe the nuget restore was doing something to have it use a different version.",0
215,Merge pull request #990 from jamill/fetch_releases_fix,0.53236014,Pull Requests,See microsoft/git#233.,0
216,Correct regex used to match GVFS-aware Git package to actually match the NuGet spec for what defines a package,0.51811373,"- Post-index-change hook will help ensure consistency between Git and VFS for Git's reckoning of the state of the repository, and eliminate a class of bugs.",Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
217,Patch up consumer of TryGetFromConfig,0.5353441,- Other bug fixes,"An alternate approach compared to #1512. The problem happens when the config file doesn't exist, and we try to run gvfs config --list without elevation. That process cannot create the file, so the FileBasedDictionary fails to load. When we are doing read-only operations, we can just return as if the file was empty.",0
218,Merge pull request #1658: ProjFSFilter: Be more robust to missing PowerShell,0.8639601,1658: ProjFSFilter: Be more robust to missing PowerShell,Signed-off-by: Derrick Stolee dstolee@microsoft.com,1
219,Auto-unmount repos in pre-install,0.85733473,- The installer now unmounts and remounts existing repos automatically,"I happened to notice this whilst browsing the source code to see an example of how the Nuget CLient packages are used. I assume it's a mistake, so created a pull request. If it's not, please close.",1
220,Merge pull request #1297 from jamill/upgrade_fix,0.49797535,Pull Requests,,0
221,FolderData: hash child folder names,0.48882738,Adds additional logging for folder and file placeholder creation.,"The core.gvfs config option can take a boolen ""true"" to turn on all options, but also an integer to show a bitmask of important flags. For the first time, we have a new flag that we may not want to enable right away: GVFS_PREFETCH_DURING_FETCH. This flag will make the git fetch builtin run a git gvfs-helper prefetch command. Until that hardens a bit, we do not want VFS for Git users to use that code path. Update Git to include this option.",0
222,Protocol.md: fix a few silly markdown issues,0.49613142,- Other bug fixes,"The core.gvfs config option can take a boolen ""true"" to turn on all options, but also an integer to show a bitmask of important flags. For the first time, we have a new flag that we may not want to enable right away: GVFS_PREFETCH_DURING_FETCH. This flag will make the git fetch builtin run a git gvfs-helper prefetch command. Until that hardens a bit, we do not want VFS for Git users to use that code path. Update Git to include this option. Signed-off-by: Derrick Stolee dstolee@microsoft.com",0
223,PR Feedback: Cleanup and ensure paths correct on all platforms,0.5048415,1685: minor path comparison fixup in ProductUpgrader,"[Linux] functional test backing root and DotGVFSRoot fixes First, we replace one use of a "".gvfs"" string constant in the functional tests which was added in 9fc6bc1, in order to align with the changes made in 8348777.  This allows the CloneTests to pass on Linux where "".vfsforgit"" is used instead of "".gvfs"". Second, the MountSetsCoreHooksPath() functional test performs an unmount step before resetting Git's configurations, and while this actually does succeed on Linux as it stands, the ""src/"" RepoRoot directory is entirely empty while it's unmounted, so to be consistent, use the backing root instead.",0
224,Update git version to 2.19.1.gvfs.1.7.g43ac102,0.8861082,1712: git-vfs: update to Git 2.30.0,,1
225,Mac ProjFS Kext: Cleans up the ShouldHandle... functions a little,0.5585263,- Better errors around ProjFS installation issues., Updated installer to migrate gvfs.config and statuscachetoken files from   old ProgramData directory to new secure data root directory inside   Program Files.,0
226,Rename Hooks for HookData list to NativeHooks,0.41571027,"- Post-index-change hook will help ensure consistency between Git and VFS for Git's reckoning of the state of the repository, and eliminate a class of bugs.", Removed unused method GetDataRootForGVFS from GVFSHooksPlatform. Updated FT to use new secure data root path,0
227,Merge pull request #985 from pmj/mac-two-path-provider-messages,0.43167505,Pull Requests, Updated CopyDirectoryRecursive to exlude subdirectories to   prevent cyclic copying.,0
228,Update Git to v2.28.0,0.9179503,1682: Update Git to v2.28.0," Created new Secure Data Root on Windows platform,   ""C:\Program Files\GVFS\ProgramData"". Upgrader tool files, downloaded   upgrade installers, gvfs.config, statuscachetoken file will be put in   this secure location. Log files would remain in   ""C:\ProgramData\GVFS\\Logs"" directory. GVFSPlatform changes - renamed GetDataRoot methods to GetSecureDataRoot   to signify that they return the new secure data root. GVFSPlatform changes - new GetCommonAppDataRoot method to get access to   the old ProgramData directory. This can be used for keeping log files. Updated Service and gvfs command to use the new secure data root access   methods.  Fixes #1585",1
229,Turn on 'gvfs prefetch --hydrate' on MacOS by providing a native OS implementation.,0.51878,Initial Mac platform native notifications,"The MountSetsCoreHooksPath() functional test performs an unmount step before resetting Git's configurations, and while this does succeed on Linux too, the ""src"" RepoRoot directory is empty while unmounted, so to be consistent, use the backing root instead.",0
230,Merge pull request #643 from pmj/kext-log-io-errors,0.44534245,1658: ProjFSFilter: Be more robust to missing PowerShell,"Replace one use of a "".gvfs"" constant in the functional tests which was added in 9fc6bc1d3d, in order to align with the changes made in 8348777d70.  This allows the CloneTests to pass on Linux where "".vfsforgit"" is used instead of "".gvfs"".",0
231,Clean up use of platform specific code,0.5664842,1744: Overhaul build and project systems and drop Mac/POSIX code,See microsoft/git#226.,0
232,UpgradeVerb: tweak message logged after checking for update,0.5601727,1747: UpgradeVerb: write deprecation notice,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
233,Merge pull request #905 from Upgrade Functional Test failure fix,0.51693773,Various bug fixes and performance improvements,,0
234,Mac: Run GitCommandsTests with and without validating the working directory during setup,0.5129163,This includes the Git Credential Manager Core v2.0.394.50751.,"We have noticed a lot of ""cannot find all commit-graph files"" errors, more than is reasonable for simply hard-drive failures. Likely there is an issue with how Git is comparing the paths of the commit-graph files it is queueing for deletion and the ones it plans to keep, related to how we use the --object-dir parameter. The commit-graph code in Git will ""touch"" all the files that are currently in the commit-graph-chain, so as long as we pass a non-zero expire time, that will prevent us from deleting the files that are still in the chain despite the path difference. This is a faster fix than fixing Git first.",0
235,"Mac kext: Reverts addition of mutex sleep API, reuse existing Sleep()",0.37195396,1734: Adding winget workflow,Incorporating review comments,0
236,Add functional tests for sparse options,0.46549013,General Improvments,incorporating review comments,0
237,Make TelemetryDaemonEventListener and JsonTracer thread-safe and async,0.39383098,- Disable commit-graph verify for performance concerns,"We have noticed a lot of ""cannot find all commit-graph files"" errors, more than is reasonable for simply hard-drive failures. Likely there is an issue with how Git is comparing the paths of the commit-graph files it is queueing for deletion and the ones it plans to keep, related to how we use the --object-dir parameter. The commit-graph code in Git will ""touch"" all the files that are currently in the commit-graph-chain, so as long as we pass a non-zero expire time, that will prevent us from deleting the files that are still in the chain despite the path difference. This is a faster fix than fixing Git first. Signed-off-by: Derrick Stolee dstolee@microsoft.com",0
238,Add new unit tests,0.49302512,New Features, Went through the commit history and documented git config settings that are set it GVFSVerb.,0
239,Mac kext: Improves assert for catching incorrect inode/vnode pairings,0.38773602,- Fixed several incorrect interactions with credentials,dehydrate: skip mount validation steps,0
240,Merge pull request #695 GitMaintenanceStep: inject the dependence on git process ids,0.6360938,"* Added a git config setting to disable the calculations for detecting force pushes during 'git fetch' and 'git pull'. That calculation can take 10's of seconds on a large graph, and users can now opt out of it.","When re-mouting a repo as part of dehydrate there is no need to check if the repo is already mounted, as dehydrate itself unmounted it. Additionally, there is no need to perform a version check (unless --no-status was specified) as dehydrate would have required the repo already be mounted to run 'git status' in it.",0
241,Skip vnode operations that have the KAUTH_VNODE_ACCESS bit set,0.48606047,- A couple of fixes for using VS Code on top of VFS for Git.,sparse: check for not recursive matches when finding dirty files,0
242,GitProcessTests: add simple unit test,0.5216048,Includes Git v2.26.2,Move the logic for extracting git paths out of PathCoveredBySparseFolders and into its own method.  This makes unit testing the code more straightforward.,0
243,Merge branch 'master' into users/wilbaker/get_object_root_reliability_fix,0.43284458,Other bug fixes for reliability, Switch from using $ to @ in unit tests (where possible) Fix functional test failure in ModifiedFileInSparseSetShouldAllowPrune   where we were failing to validate the correct set of sparse folders,0
244,Merge pull request #1194 Mac: Refactor testShouldHandleFileOpEvent test,0.5034042,Pull Requests,Update one of the functional tests to cover non-recursive parents and cleanup the unit tests.,0
245,Fail to initialize if there were unrelated errors during the anonymous auth attempt,0.5009539,- Fixed several incorrect interactions with credentials,"The previous file path matching was only matching against recursive sparse paths, and incorrectly flagging children of non-recursive folders as dirty.  This matching has been updated to match both recursive and non-recursive parents, and unit tests were added to validate the matching behavior.",0
246,Add a functional test covering noop prefetch,0.49873403,1697: Fix functional tests to skip around ProjFS issue,HandleDehydrateFolders: update index using reset,0
247,Merge pull request #1065: Add Full Coverage for HandleVnodeOperation,0.54118145,Pull Requests,,0
248,add case-sensitive matching/sorting on repo paths,0.42682177,1685: minor path comparison fixup in ProductUpgrader,Update dehydrate and sparse functional tests to cover dehydrating multiple folders and validating that prune does not overwrite users' changes inside the sparse set.,0
249,NuGetUpgrader: inject ICredentialStore dependency,0.52976185,1732: Use one NuGet feed,"HandleDehydrateFolders was triggering two parsese of the index:  Once in response to 'git reset' to validate the modified paths    are correct Once with an explicit call to ForceIndexProjectionUpdate  Making matters worse, the explicit call to ForceIndexProjectionUpdate was not happening inside of an external GVFSLock, and so it could collide with the parse triggered by reset mixed (which runs on the background thread). To prevent this race (and double parsing), HandleDehydrateFolders now sets a flag 'resetForDehydrateInProgress' to true when it calls 'git reset', and when that flag is true the ForceIndexProjectionUpdate that is called by HandlePostIndexChangedRequest will request that the projection be updated.",0
250,Cleanup gvfs log output,0.7385082,Improves the rate of .gvfsCache cleanup.,Use 'git reset ' rather than 'git checkout -f' (or 'git checkout -f ') because:  'git reset ' will not overwrite modified files (like    'checkout -f' would). reset will update the index for paths that are outside of    ModifiedPaths.dat (unlike checkout -f ).  We need the index to be updated because when a folder is dehydrated it is removed from ModifiedPaths.dat and we need to make sure its entries in the index are updated.,1
251,Merge pull request #915: Update Git and GCM,0.7032584,1706: Update Git to include GCM Core update,"[Linux] use backing root in dehydrate functional tests A number of tests in the DehydrateTests class fail on systems such as Linux where the virtualized repository's contents are not available at the mount location after the repository is unmounted. This PR adjusts these tests so they refer instead to the backing root location anytime file paths are referenced after the repository is unmounted. We also create a CheckDehydratedFolderAfterUnmount() helper method in DehydrateTests which encapsulates the different checks required on Windows and POSIX platforms, and GetBackingPathTo(path) in GVFSFunctionalTestEnlistment to parallel the existing GetVirtualPathTo(path); both of these path helper methods now use TestConstants.GitPathSeparator instead of a hard-coded slash character. In addition, the CreatedDirectoryParentFolderInModifiedPathsShouldOutputMessage() test was removed as it was now identical to the earlier ParentFolderInModifiedPathsShouldOutputMessage() test. One call to GetVirtualPathTo() was removed because it was being called an extra time when constructing the path to pass the fileToWrite to AppendAllText() in the FolderThatIsSubstringOfExistingFolder() test. Lastly, we make some minor line-ending whitespace cleanups for ease of future development on this class.",1
252,GitProcess: Catch InvalidOperationException when setting priority class,0.48484337,This includes the Git Credential Manager Core v2.0.394.50751.,,0
253,Updated to ProjFS package version 2018.823.1,0.7114467,- Better errors around ProjFS installation issues.,"We can simplify our use of virtual vs. backing root paths in the dehydration tests through the use of a common private TestPath wrapper class, as suggested by kewillford on PR review.  Also includes additional explanatory comments per wilbaker's request.",1
254,Merge pull request #984 from pmj/mac-projfs-absolute-paths,0.47655866,1658: ProjFSFilter: Be more robust to missing PowerShell,"Simplify comparison between child-before-parent and parent-before-child dehydration tests by aligning the sequence in which we handle the pairs of files, excepting the difference in ordering in the dehydration command itself.",0
255,Replaced CommandLineParser's Param set with our own option set check.,0.40345585,- Improvements to compact and maintain the ModifiedPaths.dat database to help mitigate the problem of command perf degrading over time in an enlistment.,"Per PR review from kewillford, we can use the common TestConstants.GitPathSeparator in both the virtual path and backing root path helper methods in the GVFSFunctionalTestEnlistment class.",0
256,Merge pull request #1492 Setting FileSystemCallback instance in FileSystemVirtualizer early,0.5275433,1730: Fix an issue with FastFetch when deleting files,"Per PR suggestions from wilbaker, we can further simplify the virtual path calls several dehydration tests.",0
257,Various code review fixes,0.7315846,"Other bug fixes, engineering improvements, and test reliability fixes.","Change to more accurate folder path variable names in the child-before-parent and parent-before-child dehydration tests, per PR advice from wilbaker.",1
258,Combine CreateWithoutRepoUrlFromDirectory and CreateFromDirectory,0.44840848,1734: Adding winget workflow,,0
259,"Only find the virtualization root if we know we need to interact with the provider. This results in a dramatic perf improvement because the majority of events, even within a virtualization root, are on already-hydrated files.",0.45264056,"- VFS for Git will pre-calculate status in the background in response to changes in the workdir, to improve the speed of user-initiated statuses.",,0
260,use generic POSIX options to ln(1) in BashRunner,0.3697295,1678: BuildGVFSForWindows.bat: use nuget on PATH when possible,sparse: don't warn about dirty files inside the sparse set,0
261,Merge branch 'fastfetchPort' of https://github.com/nickgra/VFSForGit into fastfetchPort,0.5332035,"- VFS for Git will prefetch commits and trees from a cache server in the background on a schedule, to improve the speed of user-initiated fetches, pulls, and pushes",Add ModifiedFileInSparseSetShouldAllowPrune and ModifiedFileInSparseSetShouldNotBeReportedWhenDirtyFilesOutsideSetPreventPrune to validate that files inside the sparse set to are not reported as dirty and do not prevent pruning.,0
262,Test allocating beyond the size limit,0.45712703,- Improved the memory usage during MIDX computation.,"When 'gvfs sparse' found dirty files outside of the sparse set, it would show all dirty paths to the user (even those inside the sparse set). Additionally, when 'gvfs dehydrate' was being called to prune, it was unnecessarily running its own 'git status' that would fail even when all of the dirty files were inside of the sparse set. Two changes were made to address these issues:   The sparse verb will now collect and report the dirty paths     that were found outside of the sparse set (rather than all     paths)   A new StatusChecked property has been added to the dehydrate     verb, and is set to true by the status verb.  When true,     the dehydrate verb will not call 'git status' itself. ",0
263,"Fixing GitAuthenticationTests, adding test to verify GitSslSettings is populated correctly",0.64209926,- Updated Git for a security issue.,WindowsGitHooksInstaller: allow configuring hooks in local git config,0
264,Use StringBuilder in BG task and update unit tests,0.52198184,"Other bug fixes, engineering improvements, and test reliability fixes.",The MountMergesLocalPrePostHooksConfig test was failing because it was not properly skipping comments when checking the contents of the .hooks file.,0
265,Create classes for testing the FileSystemVirtualizers,0.48606455,1666: Docs: start basic template,Add messages to some of the Should(...) checks to make it easier to debug test failures.,0
266,Undo PlatformLoader change,0.529439,1746: Delete custom upgrader,"The .bat fail is failing to run in Pipelines, try using cmd.exe instead.",0
267,PR #212: Added a multithreaded hydration functional test,0.5703192,- No-op gvfs prefetch --hydrate performance is dramatically improved,"Prior to the changes in this commit gvfs.clone.default-pre-command and gvfs.clone.default-pre-command would only be read from the system and global git configs.  This meant that users were unable to config custom pre/post command hooks at a per-repo level. With this change InvokeGitAgainstDotGitFolder when reading the above config values, and using InvokeGitAgainstDotGitFolder will give us the standard git config behavior of local config ""winning"" over a system or global config.",0
268,Merge pull request #1059 from jamill/upgrader_netcore,0.5533097,Pull Requests,Update sparse parent folder mtimes to trigger Explorer refresh,0
269,add single path arg version of GetBackingPathTo(),0.43780747,1679: BuildGVFSForWindows.bat: use nuget on PATH,"There was no need to use arrays, and we can save ourselves the overhead of calling ToArray by using Lists.",0
270,Fixing StyleCop issues,0.5376078,- Other bug fixes,"In addition to refreshing the parents of directories that were added or removed from the sparse set, parents of pruned directories must also have their write times updated or they might not properly refresh in explorer. Example (where refreshed pruned parent is required):  Sparse set is A\B Create a new directory A\C gvfs --sparse prune (or gvfs sparse --set A\B --prune)  If A is not refreshed it will appear empty in Explorer as the last refresh will have occured when A\C was deleted (while VFS4G was unmounted) making A appear empty.",0
271,Update pack limits/cadence to optmial values found in testing,0.485926,"Other bug fixes, engineering improvements, and test reliability fixes.",Fix upgrade timer crash,0
272,New Git: preserve system config across upgrades,0.6987414,- Updated Git for a security issue.," When no upgrade is available, product upgrader returns null for newer version. Added null check before using version.",0
273,Merge pull request #19 from bbodenmiller/patch-1,0.55663824,Pull Requests,Mac: EndpointSecurity MirrorProvider-like prototype,0
274,Reject case senstive volumes on Mac,0.51464653,1703: Delete all macOS projects,"In Git 2.24.0, some new config settings were created. Disable them locally in VFS for Git repos in case a user has set them globally. The feature.* config settings change the defaults for some other config settings. We already monitor config settings pretty carefully, so let's disable these. The fetch.writeCommitGraph setting choses to write a commit-graph file at the end of each git fetch call. We already build the commit-graph file in the background AND put it in the shared cache instead of the local Git repo.",0
275,Merge pull request #1674: Config: disable status.submoduleSummary,0.8645786,1674: Config: disable status.submoduleSummary,"In Git 2.24.0, some new config settings were created. Disable them locally in VFS for Git repos in case a user has set them globally. The feature.* config settings change the defaults for some other config settings. We already monitor config settings pretty carefully, so let's disable these. The fetch.writeCommitGraph setting choses to write a commit-graph file at the end of each git fetch call. We already build the commit-graph file in the background AND put it in the shared cache instead of the local Git repo. Signed-off-by: Derrick Stolee dstolee@microsoft.com",1
276,Add upgrader for the tombstone folder placeholders,0.5426001,Adds additional logging for folder and file placeholder creation.,"Rather than refreshing in GVFS.Mount, move the refresh logic out into 'gvfs sparse'.  This ensures that folders will be refreshed correctly in scenarios where a dehydrate is required.  Dehydrate scenarios were not working correctly because when the repo was remounted GVFS.Mount would only refresh the root.  Rather than having GVFS.Mount remember the old sparse set (or having the sparse verb pass the set to GVFS.Mount) it's simpler to just have 'sparse' itself perform the refresh.",0
277,Force checking out the commit used for the file listing,0.5419621,- Disable commit-graph verify for performance concerns,Create shared cache folders with the same ACLs as repo folders,0
278,build: replace GVFS.Build with simpler MSBuild code,0.6024984,The build system was rewritten from scratch to simplify the process and use a more recent version of .NET.,Rename CreateDirectoryAccessibleByAuthUsers to TryCreateDirectoryAccessibleByAuthUsers and have it return true/false rather than throwing exceptions when there are errors.,0
279,Merge pull request #952: Add HandleVnode / HandeFileOp Tests,0.5472306,Pull Requests,There is no need to generate a new string in each iteration of the loop. Move the creation out of the loop and reuse the same string.,0
280,Rework to shared code and use virtual method for tombstone processing,0.4376124,1734: Adding winget workflow,We are merging the features/sparse-checkout-2.24.0 branch into vfs-2.24.0 in microsoft/git#222. Update our version of Git to match.,0
281,Merge pull request #203 Hardlink notifications on Mac & Windows and rename notifications on Mac,0.5698379,Initial Mac platform native notifications,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
282,Allow downgrading Git on install,0.68021107,1751: Update Git to v2.33.0,,0
283,Rephrase ProjFS error messaging,0.6380976,1697: Fix functional tests to skip around ProjFS issue,,0
284,Merge pull request #1570 LooseObjectsStep: simply code for getting directory paths,0.5088891,- Gracefully handle a missing shared object cache pack directory.,,0
285,Disable panic in fileop handler,0.46980366,- Fixed a bug that would cause VFS for Git mount process to shut down if it receives out-of-order ProjFS callbacks.,,0
286,Fix FastFetch build in VS for Mac,0.6516212,1730: Fix an issue with FastFetch when deleting files,,0
287,Mount: Remove tracing on TryAttach,0.43843693,- The installer now unmounts and remounts existing repos automatically,,0
288,GitVersion: use Scalar's parsing logic,0.56351256,"* Better memory management in git, creating a savings of up to half a second on commands that parse the index",,0
289,GitCleanupQueueTests,0.6065904,Git: Includes incremental commit graph,,0
290,git-vfs: update to Git 2.30.0,0.96540546,1712: git-vfs: update to Git 2.30.0,,1
291,Merge pull request #1389: Update Git to v2.23.0,0.68842125,1663: Update Git to v2.27.0,,0
292,Mac ProjFS kext tests: Moves existing fileop tests to new file,0.6264084,1697: Fix functional tests to skip around ProjFS issue,,0
293,Enable a subset of the SharedCacheTests,0.5745503,- Gracefully handle a missing shared object cache pack directory.,,0
294,Update MirrorProvider for rename notification,0.46935987,Major Updates,,0
295,Add notarize shell script for notarizing the kext with apple,0.30405086,1658: ProjFSFilter: Be more robust to missing PowerShell,,0
296,Add Placeholder database class that uses SQLite,0.803294,Moves placeholder database into SQLite for better performance.,,1
297,Add unit tests to cover code changes to heartbeats,0.39062384,"Other bug fixes, engineering improvements, and test reliability fixes.",,0
298,Add PrjFSKext log collection to diagnose verb,0.4222876,- Added better diagnostic info in the GVFS logs when there are network errors,,0
299,Merge pull request #605 from jeschu1/newcleanupjob2,0.564729,Pull Requests,,0
300,Merge pull request #1521 Add disable option to quickly get out of sparse mode,0.5394217,Pull Requests,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
301,Fix test reliability issues with checks in GetObjectRoot,0.6919711,Other bug fixes for reliability,"The old approach (refreshing just the parent of a new path) could miss some folders that need a refresh. Example:  gvfs sparse --set A;B\C\D --prune gvfs sparse --set A;B\D\F --prune  In the above example, B should be refreshed, but it would not be. Rather than just refreshing the parent VFS4G will now refresh all ancestors of entries that were added or removed from the sparse set. This might result in over-refreshing, but we should no longer miss any folders.",0
302,"Adds subscription to NOTIFY_LOOKUP events, logging those in target.",0.45971638,  - Break down update placeholders timings so we can see where time is spend during checkout.,"If a File Explorer window is open to a directory in VFS4G, changes to the files being projected are not enough to trigger a refresh. This is especially noticeable when using the 'gvfs sparse' verb. To force Explorer to refresh when 'gvfs sparse' triggers a projecion changes, VFS4G will now update the last write time for every folder placeholder that had children added or removed from the sparse set.",0
303,Rename IDbConnectionCreator to IDbConnectionFactory,0.3985814,1726: Config: commitGraph.generationVersion=1,Use static runtime for hooks,0
304,HandleDehydrateFolders: don't parse index a second time,0.47576576,"- Further optimizations to GVFS's index parsing, saving time on commands that need to reproject (like checkout).","Rather than using CreateDirectory(String, DirectorySecurity) use CreateDirectroy + SetAccessControl to avoid having to create a temporary directory. Additionally, remove unnecessary code for creating intermediate directories from callers.",0
305,Update git version and rename flag to SkipWorktreeBitsUpdated,0.68339837,1751: Update Git to v2.33.0,"The PackfileMaintenanceStepTests have been failing periodically, and mostly with failures in RepackAllToOnePack() leading to a failure in ExpireAllButOneAndKeep(). The way we ""force"" Git to repack all is to provide a custom batch size. This batch size used to mean ""repack all pack-files with size at most X until reaching a size of at least X"". By specifying ""total size - 1"", this required repacking all objects. HOWEVER, the new logic actually computes an ""expected"" size of the objects in a pack that are referenced by the multi-pack-index. If we have duplicate objects, then those objects can cause two types of error: The duplicates reduce the total expected size below the batch size. The computation of ""total expected size"" causes round-off error. Both types of error under-count the number of bytes in the final pack-file. By changing the batch size to ""total size - min size + 1"" we ensure the following: I. The batch size is larger than the maximum pack size. II. Every pack-file is required to reach the batch size. III. We have minimized the chance that duplicate objects will drop below this threshold. With the use of gvfs-helper, we have less control over the pack-files that are downloaded as part of the clone operation. At minimum, with this change we should be in a better state than before.",0
306,CommitGraphStep: do not immediately delete expired commit-graph files,0.77753043,1647: Fix commit-graph expiration,See microsoft/git#218 for details.,1
307,Move call to pop,0.4303858,Pull Requests,,0
308,ProductUpgrader: be extra careful about a copy loop,0.9388571,1672: ProductUpgrader: be extra careful about a copy loop,The changes in this commit address the ACL problems that can occur on Windows Server when a shared cache created by an elevated VFS4G process is used by a non-elevated process. By adding Authenticated Users to the shared cache ACLs we ensure that the permissions of the shared cache will be consistent with those used in the repo itself.,1
309,Git hooks to show no upgrade reminder when running un-attended,0.6699765,"VFS for Git will check in the background for an available upgrade. If one is available, a message will be shown periodically to the user in the post-command hook to run gvfs upgrade to install the new version.","The previous installer was generated without the v2.24.0.vfs.1.1 tag, which caused the Git version generation to fail. That is the only change between the .1 and .2 builds.",0
310,Merge pull request #804: Remove isMountComplete check,0.5198018,1674: Config: disable status.submoduleSummary,,0
311,"Merge pull request #777 [merge to master] Log GVFS.Service ACL exceptions, and fix upgrade log directory ACL issue",0.5489587,- Added better diagnostic info in the GVFS logs when there are network errors,LooseObjectsStep: simply code for getting directory paths,0
312,Update name of file created by installer to indicate installation version,0.58877933,Update components included with internal distribution,,0
313,Fix notification registration in MirrorProvider,0.42664176,Initial Mac platform native notifications,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
314,Merge pull request #1537 When using --set add folders back to directories for checking git status,0.5932512,- git status now supports an option to avoid doing its ahead/behind calculations. This allows the user to decide if they want to skip that overhead if all they care about is the status of the working directory.," This setting is not needed anymore, because current version of gvfs   does not use index.lock. (This change was introduced initially to   prevent git diff from acquiring index.lock file.) Added FT",0
315,Merge pull request #802: Add tests for ShouldIgnoreVnodeType,0.5233123,Pull Requests,"The code in CountLooseObjects can be simplified by avoiding an unnecessary Path.Combine. Additionally, fix a bug in the MockFileSystem where EnumerateDirectories was not returning the full paths of directories and it should.",0
316,Avoiding possible redundant initialisation of ConcurrentDictionary in FileBasedDictionary class.,0.44402117,1666: Docs: start basic template, Incorporated review comments. Added new switch case for GeneridProjFSError. Simplifies the default handler a lot. New const member for reset timeout,0
317,Check result of HandleVnodeOperation,0.45464167,- Disable commit-graph verify for performance concerns,See microsoft/git#213 for details.,0
318,Heath rating now based on total hydrated files (#1325),0.3915299,- No-op gvfs prefetch --hydrate performance is dramatically improved,,0
319,Merge pull request #247: Enable anonymous access,0.5540428,Pull Requests,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
320,Refactor PrjFS.xcworkspace into PrjFS.xcodeproj,0.59346473,Switched over to use the Windows Projected File System (ProjFS) optional feature on RS4 and later. ProjFS is the new name for the GvFlt driver and its associated user mode library.," Increased reset time out for GVFS Lock holder from 3 to 10 secs.   On Win server 2016, the lock was getting released too early causing   couple tests to fail occassionally.",0
321,Remove NormalizePath from SparseTable,0.4764721,1746: Delete custom upgrader, Updated regex in HealthTests FT to not treat spaces that   may be present between a number and percentage symbol in   gvfs command output as errors.,0
322,Update Git to include sparse push algorithm,0.7026032,"* Added a git config setting to disable the calculations for detecting force pushes during 'git fetch' and 'git pull'. That calculation can take 10's of seconds on a large graph, and users can now opt out of it."," Updated Functional Tests for UpdatePlaceholders. ProjFS on   2016 seem to support POSIX style delete, Win 10 supports   POSIX delete anyways. Removed the check for OS version to   decide POSIX delete support.",1
323,Merge pull request #681 from Verify Installer signature before launching,0.50290966,Update NuGet upgrader with new Microsoft package signing certificate," Handle the generic error returned by ProjFS, when GVFS.Mount   tries to delete a partial placholder, on server 2016. Create new error code -2147024579 in HResultExtenstions.   Named it GenericProjFSError. Updated error handler in GitIndexProjection to handle   GenericProjFSError error when DirtyData is also set the same   way it already handles VirtualizationInvalidOperation.",0
324,Update git settings to enable optimizations in git 2.20,0.71795976,Includes Git v2.27.0,dehydrate: skip installing hooks when re-mounting,1
325,Merge pull request #1291 from github/fastfetch-checkout-threads,0.54062045,"- VFS for Git will prefetch commits and trees from a cache server in the background on a schedule, to improve the speed of user-initiated fetches, pulls, and pushes","Ensure that all git-credential commands are run with the correct working directory. Currently only 'fill' is invoked against the .git directory and the 'reject' and 'approve' commands are invoked outside the repository. The result of this mismatch means that if the user has a local configuration entry set, for say credential.usehttppath, then the behaviour for locating credentials will be different between read and modification operations.",0
326,Add comment to DeleteFileThenCheckout,0.48502403,1674: Config: disable status.submoduleSummary,"There is no need to copy the hooks when mounting as part of dehydrate.  Additionally, this copy can cause problems if 'gvfs dehydrate' is called as part of a post-command hook.",0
327,Mac: Adds extremely basic EndpointSecurity based mirroring prototype,0.557269,Initial Mac upgrade functionality,"To support filesystems where the virtualized repository contents are not available when the repository is not mounted, always use the backing root path instead after unmounting in all DehydrateTests.",0
328,avoid hydrating .git dir in cache tests on Mac,0.56446075,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,"We extract file name string constants as distinct variables which typically contain just the local path within the test repo, without any full virtual path prefix. This will be valuable when introducing additional backing root paths in subsequent commits.",0
329,Add tests for commands when files are hydrated,0.5265056,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,"As we have certain folder names repeated as constant strings within each test, we can replace them with a single variable per test, usually folderToDehydrate. This will be valuable when introducing additional backing root paths in subsequent commits.",0
330,Correct logging when setting feedpackagename,0.45142955,Adds additional logging for folder and file placeholder creation.,"We try to use consistent variable names for all variables in DehydrateTests which contain full virtual paths as constructed by GetVirtualPathTo(). While this is not immediately helpful, it will be crucial when we introduce the distinction between virtual paths (full paths to the mounted test repo) and backing root paths (full paths to the repo's backing store which may be accessed while the repo is unmounted on Linux).",0
331,Make unit tests more thread-safe,0.5210843,"Other bug fixes, engineering improvements, and test reliability fixes.","The FolderDehydrateFolderThatIsSubstringOfExistingFolder() test called GetVirtualPathTo() to construct a path for fileToWrite, and then called it again passing the constructed path and thus adding extra path elements beyond what was intended.",0
332,trivial: Fix a typo in error messages,0.5353967,- Other bug fixes,"Since commit 7956bd95b3539f9c2bd03be0c4258de50206190b two of the functional tests in DehydrateTests have been identical, so we can remove one of them.",0
333,remove redundant dehydrate folder deletion test,0.48828784,1689: Make delete docs more verbose,"Add a version of GetBackingPathTo(path) in the functinal test suite's Tools/GVFSFunctionalTestEnlistment.cs which takes only a single path argument, to parallel the existing GetVirtualPathTo(path) method.",0
334,REmoving stdin option from FastFetch,0.6411853,1730: Fix an issue with FastFetch when deleting files,Create a CheckDehydratedFolderAfterUnmount() helper method in DehydrateTests which encapsulates the different checks required on Windows and POSIX platforms.,0
335,Merge pull request #165: VirtualFileSystemHook: ensure string is properly null terminated,0.5363675,1674: Config: disable status.submoduleSummary,This is a whitespace-only patch for the sake of avoid additional line-ending changes while refactoring DehydrateTests.cs in subsequent commits.,0
336,Use explicit string comparision,0.31680113,1652: RepoRegistry: ignore non-existent repos,"The PackfileMaintenanceStepTests have been failing periodically, and mostly with failures in RepackAllToOnePack() leading to a failure in ExpireAllButOneAndKeep(). The way we ""force"" Git to repack all is to provide a custom batch size. This batch size used to mean ""repack all pack-files with size at most X until reaching a size of at least X"". By specifying ""total size - 1"", this required repacking all objects. HOWEVER, the new logic actually computes an ""expected"" size of the objects in a pack that are referenced by the multi-pack-index. If we have duplicate objects, then those objects can cause two types of error: The duplicates reduce the total expected size below the batch size. The computation of ""total expected size"" causes round-off error. Both types of error under-count the number of bytes in the final pack-file. By changing the batch size to ""total size - min size + 1"" we ensure the following: I. The batch size is larger than the maximum pack size. II. Every pack-file is required to reach the batch size. III. We have minimized the chance that duplicate objects will drop below this threshold. With the use of gvfs-helper, we have less control over the pack-files that are downloaded as part of the clone operation. At minimum, with this change we should be in a better state than before. Signed-off-by: Derrick Stolee dstolee@microsoft.com",0
337,Updated the GvFlt_EULA link,0.5833613,1683: GVFS.SignFiles.csproj: include more DLLs for signing,Add sparse prune info,0
338,Merge pull request #1499 from pmj/mac-projfs-offline-io-registration-no-kext-user-version-validation,0.45395005,1658: ProjFSFilter: Be more robust to missing PowerShell,,0
339,LibGit2RepoInvoker: Run a simple query to preload data,0.4899313,Pull Requests,,0
340,Make sure fastfetch.dll is copied to the correct location to run tests,0.50731486,A case where FastFetch would not download a small number of files has been fixed.,,0
341,Add Readme.md for the virtualization states of a file,0.5410869,1750: Update Readme.md,,0
342,Remove second NuGet feed,0.70678645,1732: Use one NuGet feed,,1
343,Merge pull request #1476 Mark MoveIndexFileFails as MacOnly because CmdRunner on Windows failing,0.4523722,1730: Fix an issue with FastFetch when deleting files,,0
344,Fix PRINTF_FMT macro on Windows,0.45413452,1730: Fix an issue with FastFetch when deleting files,,0
345,Skip launching UI if running unattended,0.94187534,1740: Skip launching UI if running unattended,,1
346,Merge pull request #635 PackfileMaintenanceStep,0.5222049,Pull Requests,,0
347,Added a multithreaded functional test that currently fails on Mac by attempting to concurrently read a previously unhydrated file from several threads,0.5435814,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,,0
348,Implement Posix IsElevatedImplementation,0.4170107,1744: Overhaul build and project systems and drop Mac/POSIX code,Do not try to uninstall prjflt unless flag is passed,0
349,Resolve conflict with FileSystemCallbacks,0.549668,1730: Fix an issue with FastFetch when deleting files,,0
350,GVFS Upgrader: update UX of dry-run and confirm arguments,0.66256315,"Many other reliability improvements in interactions between GVFS and the file system, and between GVFS and git",Fix tests to check windows version for POSIX delete support,0
351,Merge pull request #546 from pmj/perf-trace-histogram,0.45208627,- Improvements to compact and maintain the ModifiedPaths.dat database to help mitigate the problem of command perf degrading over time in an enlistment.,,0
352,PR Feeback: Move download directory creation to TryDownloadNewestVersion,0.4507968,- Fixes a copy failure when copying the upgrade tool to its temporary location.,,0
353,Mac EndpointSecurity prototype: Adds sanity check counter for in-flight auth requests,0.5198109,Initial Mac platform native notifications,Native hooks: Fix build error due to missing std::string declaration,0
354,Adding manpage link to comment,0.25883877,1750: Update Readme.md,HttpRequestor: retry 429 (too many requests) responses,0
355,Update Windows code to handle hardlink creation,0.4705465,1710: Add new Microsoft certificate thumbprint,429 indicates that there is server-side throttling.  VFS4G should retry requests that receive a 429 response.,0
356,VFSForGit reminds of updates when there is none,0.73929584,"VFS for Git will check in the background for an available upgrade. If one is available, a message will be shown periodically to the user in the post-command hook to run gvfs upgrade to install the new version.",This fixes a build failure when building VFSForGit with Xcode 10 and the macOS 10.14 SDK. std::string should only be used after #including ,1
357,More cleanup for PR comments,0.46267137,General Improvements,Update upgrade messages for platforms that do not support NuGet package verification,0
358,Merge pull request #172: GitStatusCache: fix race condition in test setup,0.49471807,"* Added a git config setting to disable the calculations for detecting force pushes during 'git fetch' and 'git pull'. That calculation can take 10's of seconds on a large graph, and users can now opt out of it.",Add message to sparse disable,0
359,Fix repositoryPath to work on all platforms,0.4818818,1733: Update Git to include 2.31.1,,0
360,Pass the exisitng auth instance through to the constructor of Enlistment rather than swapping it out afterwards,0.4455303,- Improvements to compact and maintain the ModifiedPaths.dat database to help mitigate the problem of command perf degrading over time in an enlistment.,"[Linux] Use backing root & min version in dehydrate cmds/tests The DehydrateVerb TryBackupFiles() method currently fails on Linux due to the inadvertent use of the WorkingDirectoryRoot as the source location for the backup. This is because on Linux the src/ working directory is fully unavailable when the provider is unmounted. Instead, by using the WorkingDirectoryBackingRoot, which is always available on all platforms (and is equivalent to the WorkingDirectoryRoot on Windows and Mac), we can allow most dehydrate tests to succeed on Linux. Also, the DehydrateShouldFailOnWrongDiskLayoutVersion() functional test currently fails and leaves the test suite in a broken state if it attempts to set the disk layout major version number below a platform's minimum supported version. By checking whether the existing version is higher than the minimum version first, we can proceed with this test only when safe to do so. To accommodate this check, we move the platform-specific disk layout major version numbers and minimum version numbers into GVFSHelpers from DiskLayoutVersionTests.",0
361,Update placeholder database repair to use new SQLite database,0.82302654,Moves placeholder database into SQLite for better performance.,Run prune code even when no folders change,1
362,Upgrade verb for manually installing new product release,0.56880873,Update components included with internal distribution,IsFileSystemSupported: cleanup test files on Mac,0
363,Merge pull request #693 from jamill/github_upgrader_remount_flag,0.5345286,Pull Requests,"[Linux] minor POSIX and path case comparison fixups Convert a few recent inadvertent uses of StringComparison.OrdinalIgnoreCase in file path comparisons to the relevant OS-specific PathComparison helpers. The array returned by Directory.GetDirectories() is inconsistently ordered across different platforms, so we use ShouldContain to check the array's contents in CheckMainSparseFolder() in the SparseTests functional tests rather than explicit array indexes. We can also mark one recent new functional test, RunPythonExecutable(), as POSIXOnly since it applies to Linux as well as macOS.",0
364,Fix for #1743 - do not exit early if no blobs found for a period when prefetching.,0.8964174,1745: do not exit early if no blobs found for a period when prefetching,Add a new functional tests that validates that cloning and mounting create exactly the directories that are expected,1
365,Tweak notification message,0.5123662,Initial Mac platform native notifications,IsFileSystemSupported was leaving around test files it uses to test if the file system is case sensitive.  Fix up the paths it uses for its tests.,0
366,"Throwing InvalidRepoExcpetion, when ssl-related bool git config keys have non-bool values. Handling InvalidRepoException in CloneVerb.",0.47878033,1658: ProjFSFilter: Be more robust to missing PowerShell,,0
367,Implement a generic bool array for use with parameterized TestFixtures.,0.37058437,Other bug fixes for reliability,When using --set add folders back to directories for checking git status,0
368,Mac kext testing: Improves documentation & API for creating mock vnodes,0.4405207,1697: Fix functional tests to skip around ProjFS issue,"Per advice from wilbaker, just use ShouldContain() on the contents of the array returned by GetDirectories() in CheckMainSparseFolder() instead of sorting it.",0
369,Remove requirement to run --no-renames,0.45701933,1652: RepoRegistry: ignore non-existent repos,The set option was removing folder from the directories hashset to know what folders needed to be removed but the directories hashset was used in checking status and for pruning so it needs to be the set of folders that will be in the sparse set after determining the what to add and remove so that git status and prune will have the correct set of sparse folders.,0
370,Merge pull request #1388: Proper error message for 'git gui' on Mac,0.5757734,* Improve error message from gvfs upgrade if the Git installation could not be found.,Add newline before outputting sparse was aborted,0
371,Relocated Git installer to BuildOuptut,0.616392,Includes Git v2.27.0,,0
372,Update PreBuild to pass Configuration into RestorePackages.bat so we can restore from within the VS IDE. Also fix a missing build dependency of PreBuild on GVFS.Hooks.Mac.,0.6051936,The gvfs upgrade command is deprecated. Future upgrades will require using winget or installing directly from the releases page.,"The DehydrateShouldFailOnWrongDiskLayoutVersion() functional test currently fails and leaves the test suite in a broken state if it attempts to set the disk layout major version number below a platform's minimum supported version. By checking whether the existing version is higher than the minimum version first, we can proceed with this test only when safe to do so.",0
373,PackfileMaintenanceStepTests: Git 2.29 does batching differently,0.6418972,* git multi-pack-index verify would run slowly if the objects directory had more than 2048 packfiles.,This change will permit other functional test classes besides the DiskLayoutVersionTests to access and use the platform-specific disk layout major version numbers and minimum version numbers.,0
374,Update user message when no folders in sparse list,0.42146286,1664: Update USN journal entries for projected folders,"The DehydrateVerb TryBackupFiles() method currently fails on Linux due to the inadvertent use of the WorkingDirectoryRoot as the source location for the backup.  This is because on Linux the src/ working directory is fully unavailable when the provider is unmounted. Instead, by using the WorkingDirectoryBackingRoot, which is always available on all platforms (and is equivalent to the WorkingDirectoryRoot on Windows and Mac), we can allow most dehydrate tests to succeed on Linux.",0
375,Enable ResetHardTests,0.52866894,"Other bug fixes, engineering improvements, and test reliability fixes.","The array returned by Directory.GetDirectories() is inconsistently ordered across different OS platforms, so we use a PathComparer to sort the array prior to checking its contents in CheckMainSparseFolder() in the SparseTests functional tests.",0
376,Merge pull request #1716: Update Git to remove ODB string check,0.79954433,1717 [HOTFIX] Update Git to remove ODB string check,"As this Python test succeeds on Linux as well, we can convert it to POSIXOnly.",1
377,Updates for new ProjFS API,0.68081653,1658: ProjFSFilter: Be more robust to missing PowerShell,,0
378,NuGetUpgraderTests: normalize line endings,0.4235623,1732: Use one NuGet feed,"[Linux] Revise functional tests for cross-device mounts On POSIX systems, where a rename(2) returns with errno set to EXDEV when trying to move a file or directory between mounted filesystems, the functional tests which do this fail if the repository is mounted on a separate device (as is the case on Linux). Therefore we create a RepositoryMountsSameFileSystem test category for use on VFSForGit implementations which allow renaming across repository boundaries (i.e., Windows PrjFlt and Mac kext), and mark a number of tests with this category designation if they move files or folders in or out of the repository, or create hard links across the repository boundary. In the ModifiedPathsTests suite, two specific tests which check the contents of the ModifiedPaths database after remounting or after hard linking across the repository boundary are subdivided into pairs of tests.  Each pair consists of one test which only checks changes that do not cross the repository boundary, suitable for all implementations, and one test which checks other changes that do span the repository boundary and which is therefore marked with the RepositoryMountsSameFileSystem category flag.",0
379,PrjFs: enable static analysis during build,0.45159745,1658: ProjFSFilter: Be more robust to missing PowerShell,"Per PR advice from wilbaker, we avoid sprinkling comments throughout the functional test suite regarding the use of the RepositoryMountsSameFileSystem category, and instead add a more verbose description in Categories.cs which should clarify the expected use case for this test flag.",0
380,Review comments,0.48550677,General improvements:,"On POSIX, where a rename(2) returns EXDEV when trying to move a file or directory between mounted filesystems, the functional tests which do this currently fail if the repository is mounted on a separate device (as is the case on Linux). Therefore we create a RepositoryMountsSameFileSystem test category for use on VFSForGit implementations which allow rename(2) across repository boundaries (i.e., Windows PrjFlt and Mac kext), and mark a number of tests which move contents in or out of the repository with this category designation. In the ModifiedPathsTests suite, two specific tests which check the contents of the ModifiedPaths database after remounting and after hard-linking, specifically, are subdivided into pairs of tests.  Each pair consists of one test which only checks changes that do not cross the repository boundary, suitable for all implementations, and one test which check changes spanning the repository boundary and which is marked with the RepositoryMountsSameFileSystem category.",0
381,Add tests for creating placeholders,0.40297663,General Improvments,"[POSIX] convert Mac-specific functional tests to POSIX where viable Where appropriate, convert functional tests marked MacOnly into POSIXOnly tests which also execute on Linux. The rename(2) function is identical on Linux and Mac, so update its DllImport wrapper name to POSIXRename() from MacRename() in GVFSLockTests. Finally, use generic POSIX options to ln(1) in BashRunner because the GitStatusReportsSymLinkChanges() functional test will fail on Linux otherwise, as ""ln -s -F"" does not have the same meaning as on BSD/Darwin; the -F flag does not imply -f on Linux but instead tries to hard link a directory. Thus the deletion of the target testFilePath in the test does not occur and the test fails. Instead, we use ""ln -s -f"" in the CreateSymbolicLink() method in BashRunner which suffices on both types of systems.",0
382,Make Unit Test Paths Cross-Platform,0.46681714,1685: minor path comparison fixup in ProductUpgrader,Configure VFS4G pkg installer to always install kext/'VFS For Git.app' regardless of version,0
383,Merge remote-tracking branch 'msft/master' into reset_mixed_untracked_placeholders,0.42058757,  - Correlate trace2 stream with VFS for Git stream with the Git session ID.,Windows native toasts,0
384,NuGetUpgrader: normalize line endings,0.44160074,1732: Use one NuGet feed, Changes in GVFS.Service.UI launch behavior -- GVFS.Service.UI is run as a regular user process in    the logged in users session id. -- Installer launches it after install. Un installer    shuts it down. -- GVFS.Service starts it in the user session when a user    logs in. Removed sessionId arg from INotificationHandler interface.   This is not needed any more (GVFS.Service.UI is not   launched on-demand now. But upon user login and also from   installer in the user session id). GVFS.Service.UI keeps its logs in   %programdata%\GVFS\GVFS.Service.UI directory. The logs   get captured by diagnose verb.,0
385,Support spaces in paths when compiling,0.44531265,1685: minor path comparison fixup in ProductUpgrader,"The GitStatusReportsSymLinkChanges() functional test will fail on Linux because ""ln -s -F"" does not have the same meaning as on BSD/Darwin; the -F flag does not imply -f on Linux but instead tries to hard-link a directory.  Thus the deletion of the target testFilePath in the test does not occur and the test fails. Instead, we use ""ln -s -f"" in the CreateSymbolicLink() method in BashRunner which suffices on both types of systems.",0
386,Merge pull request #1672: ProductUpgrader: be extra careful about a copy loop,0.7834978,1672: ProductUpgrader: be extra careful about a copy loop,"The rename(2) function is identical on Linux and Mac, so update its DllImport wrapper name to POSIXRename() from MacRename() in GVFSLockTests.",1
387,Fix Perf Build,0.74999887,Perf improvements:,"Where appropriate, convert functional tests marked MacOnly into POSIXOnly tests which also execute on Linux.",1
388,Simplify getting the parent session id,0.4289708,  - Correlate trace2 stream with VFS for Git stream with the Git session ID., Added a few new classes. WinToastNotifier to interface   with Windows Toast APIs. GVFSToastRequestHandler to parse   toast notification payload contained in incoming requests   from GVFS client processes. GVFSServiceUI class to create   ServiceUI pipe and handle toast notification requests. UT   class for GVFSToastRequestHandler. Updated project files. Minor corrections in Toast XML element class ActionItem.cs.,0
389,use platform-based case comparisons in DiffHelper,0.39309174,1685: minor path comparison fixup in ProductUpgrader,"Presently, the installer is not actually updating the version of PrjFSKext.kext or the 'VFS For Git.app' on disk because we initially started with a test version of 1 and we now stamp it with our real version numbers (0.6.YYDDD). PackageKit will be 'smart' and not downgrade the version. You can see this system install.log like so: 2019-08-02 16:17:04-07 nickgra-trashcan installer[1230]: PackageKit: Skipping component ""com.microsoft.VFSForGit"" (0.6.19213-1.0.0-) because the version 1.0.0-1.0.0- is already installed at /Library/Application Support/VFS For Git/VFS For Git.app 2019-09-19 16:35:30-07 nickgra-trashcan installer[1474]: PackageKit: Skipping component ""org.vfsforgit.PrjFSKext"" (0.6.19262-0.6.0-) because the version 1.0.0-1.0.0- is already installed at /Library/Extensions/PrjFSKext.kext. Ameen caught this issue when testing out upgrade for the latest release, we started hitting issues since we made a backwards incompatible change with the kext. It turns out we haven't been upgrading the kext (or the .app) since we initially released them. The cleanest fix is in our component plist: configure BundleIsVersionChecked to be false. With this change, I've observed the kext version to roll backwards from 1 to the dev build number (0.2).",0
390,Cleanup and functional test improvements,0.6535785,Improves the rate of .gvfsCache cleanup.,"If ""git commit-graph verify"" fails, we call the method LogErrorAndRewritecommitGraph(). This is supposed to get us into a better state. It appears that it is not doing that when we have an issue around our incremental commit-graph format. Fix that by deleting the commit-graphs folder in addition to the commit-graph file. Report the status of the call, so we know if we had such a folder.",0
391,Add unit tests for EventListener; fix TryRecordMessage,0.43863076,- Disable commit-graph verify for performance concerns,"restore mixed-case prefetch folder list tests and tidy MirrorProviders On case-insensitive filesystems, we can restore the use of non-case-matching mixed-case file and folder paths in several PrefetchVerbTests, while retaining case-sensitive exact matches on Linux. We also use the PathComparison we set in our MirrorProviders to actually perform path comparisons, and add a PathComparer for use on Windows in particular.",0
392,Changes since the last update,0.79698294,Major Updates,"Per wilbaker's PR review, add a more specific comment on the directory entry added in PR 1412 to the functional test suite's SparseModeFolders list in order to support case-sensitivity in the DeleteFolderAndChangeBranchToFolderWithDifferentCase() test.",1
393,Finish cleaning up last calls to config that don't handle warnings correctly,0.43882954,1674: Config: disable status.submoduleSummary,"If ""git commit-graph verify"" fails, we call the method LogErrorAndRewritecommitGraph(). This is supposed to get us into a better state. It appears that it is not doing that when we have an issue around our incremental commit-graph format. Fix that by deleting the commit-graphs folder in addition to the commit-graph file. Report the status of the call, so we know if we had such a folder. Signed-off-by: Derrick Stolee dstolee@microsoft.com",0
394,Stop MetaPackage installer from walking entire /Volumes hierarchy,0.5168746,- The installer now unmounts and remounts existing repos automatically,Mac dtruss: Improved argument formatting for fstatat() and other syscalls,0
395,PrjFS Kext tests: Adds kext assert() integration for unit tests,0.4737226,1697: Fix functional tests to skip around ProjFS issue,,0
396,Merge pull request #597 from benpeart/block-commands,0.5343434,Pull Requests," shm_open() traces now print the name of the shared memory object fchdir() traces now correctly print only one argument, in decimal as it is a file descriptor. chdir() traces now print the path to the directory getattrlistbulk() traces print the bit mask of requested attributes and all 5 arguments",0
397,Mac kext: Enables warning for shadowed variables.,0.44887912,Initial Mac platform native notifications,,0
398,Merge pull request #536 from jeschu1/enlistmentinfo,0.56163293,Pull Requests,"This change improves the output produced for certain syscalls:  * lstat64_extended: This undocumented syscall previously used the default argument formatter (3 hex values). Now, dtruss more helpfully prints the first argument as a string (path) and the fourth argument as a decimal value.  * fstatat64: This undocumented syscall is essentially equivalent to fstatat and now uses the same argument format.  * openat, faccessat, fchmodat, readlinkat, and fstatat are a group of syscalls which accept file descriptor relative paths. The file descriptor argument is now printed as decimal, with the AT_FDCWD special descriptor explicitly called out.",0
399,Setting FileSystemCallback instance in FileSystemVirtualizer early,0.5182035,Adds additional logging for folder and file placeholder creation.,Add disable option to quickly get out of sparse mode,0
400,Merge pull request #1535 from github/dehydrate-linux-fixes,0.4870933,* Improve error message from gvfs upgrade if the Git installation could not be found.,,0
401,Rename the DiskLayoutUpgradeTests to WindowsDiskLayoutUpgradeTests,0.4919848,1668: ProductUPgradeTimer: remove unacceptable Environment.Exit(),,0
402,Copy ProjectedFSLib.dll to VFS4G's install directory when prjflt.sys on machine matches version in package,0.62552255,Switched over to use the Windows Projected File System (ProjFS) optional feature on RS4 and later. ProjFS is the new name for the GvFlt driver and its associated user mode library.,,0
403,Add new unit and functional tests,0.48723572,"Other bug fixes, engineering improvements, and test reliability fixes.",,0
404,Move ProjFSFilterTests MockTracer creation into SetUp method,0.59150934,1697: Fix functional tests to skip around ProjFS issue,,0
405,Show parent folder that needs to be dehydrated,0.44465807,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,Add sparse set and file option,0
406,build: add (currently unused) AzDO YAML release build,0.4356619,Previous builds were not including fully-signed DLLs. This is now fixed.,,0
407,Adjusting code to work on netstandard20,0.5935949,- We have started porting parts of the product to .NET Standard.,,0
408,Merge pull request #1308: Updating README.md,0.59774935,1750: Update Readme.md,,0
409,Merge pull request #434 Update Readme.md,0.58598006,1750: Update Readme.md,,0
410,GitProcess: return true when process is null,0.47893798,"- GVFS can now recover from corrupted git object files (e.g. caused by a torn write), by re-downloading them whenever git asks for an object. The assumption is that git would not be asking GVFS for it if the object was valid.",,0
411,Merge pull request #1159 from jamill/upgrader_tasks/gvfs_config,0.5213186,Pull Requests,Allow sparse to continue when dirty files in status are in sparse set,0
412,Do not attempt to approve credentials for anonymous access,0.59509635,  - Now approves credentials on authentication success,,0
413,Enable most reset soft functional tests,0.5353273,"Other bug fixes, engineering improvements, and test reliability fixes.",Call multi-pack-index with --no-progress,0
414,Remove unused using statements,0.52415633,1689: Make delete docs more verbose,,0
415,PR Feedback,0.51543504,Release notes,,0
416,Remove extra assertion for expected error,0.45047683,1652: RepoRegistry: ignore non-existent repos,,0
417,Merge pull request #965: [Port from releases/shipped] Turn off Commit Graph Verify,0.7500713,- Disable commit-graph verify for performance concerns,Add prune argument to the sparse verb,1
418,Switch to using daemon on POSIX and add logging to clone/mount paths,0.48831993,Adds additional logging for folder and file placeholder creation.,,0
419,Merge pull request #619 Remove parameterization from GitBlockCommandsTests,0.5588037,- Consume new GCM to fix git credential erase behavior,Setting FileSystemCallback instance in FileSystemVirtualizer early,0
420,"Move files that are general to git, not specific to prefetch",0.657753,"- VFS for Git will prefetch commits and trees from a cache server in the background on a schedule, to improve the speed of user-initiated fetches, pulls, and pushes",,0
421,exclude .a files,0.46482134,1703: Delete all macOS projects,,0
422,Merge remote-tracking branch 'upstream/master' into features/upgrade_extensibility,0.5042113,Upgrade supports an anonymous endpoint to decouple rollouts to different engineering systems.,,0
423,NuGetUpgrader: verify integrity of downloaded NuGet package,0.70940506,Update NuGet upgrader with new Microsoft package signing certificate,,1
424,Merge pull request #1798 from neerajsi-msft/neerajsi/read-index-tickcount,0.55703443,Pull Requests,,0
425,Update error message in PostIndexChanged to match check,0.56601775,- Fixed an issue where some concurrent updates to the placeholder database would fail,,0
426,Fix WindowsTombstoneTests using SQLite,0.523959,- Fixed an issue where some concurrent updates to the placeholder database would fail,,0
427,Merge pull request #1536 Add newline before outputting sparse was aborted,0.47261986,Pull Requests,,0
428,Merge pull request #375 from nickgra/ProfilingBuild,0.48351592,Pull Requests,,0
429,Merge pull request #1023: make ProductUpgrader more testable,0.6044137,1685: minor path comparison fixup in ProductUpgrader,,0
430,Use DataSources.AllBools in unit tests,0.41591102,"Other bug fixes, engineering improvements, and test reliability fixes.",,0
431,Merge kewillford/untracked_missing,0.45809048,- Gracefully handle a missing shared object cache pack directory.,Sparse ui cleanup,0
432,PrefetchStep: Close libgit2 repo before deleting .idx files,0.54990053,1730: Fix an issue with FastFetch when deleting files,,0
433,Merge pull request #429 from pmj/ioshareddataqueue-workaround-dylib,0.51774967,Pull Requests,,0
434,Merge pull request #1155 from jamill/upgrader_tasks/rooted_pipe,0.5687076,Pull Requests,Don't allow Executables to be Placeholders,0
435,Fix case only folder rename test,0.45536247,Adds additional logging for folder and file placeholder creation.,,0
436,Mac EndpointSecurity prototype: Try muting own process,0.5965322,Initial Mac platform native notifications,,0
437,Merge pull request #1150: Update Git to vfs-2.21.0,0.69503844,1712: git-vfs: update to Git 2.30.0, This fixes the failure when a Phython Executable is called before hydration.,0
438,Merge pull request #179 Fix test reliability issues with checks in GetObjectRoot,0.632711,Other bug fixes for reliability,,0
439,Merge pull request #1009: Remove Code Coverage Exclusion for ShouldIgnoreVnodeType,0.5149262,1674: Config: disable status.submoduleSummary,Dehydrate folders,0
440,Merge pull request #1184: Mac: Support Hardlinks,0.4594681,Pull Requests,diff: use csharp driver for better function headers in .cs files,0
441,Update tests to match new messages,0.4449458,- Disable commit-graph verify for performance concerns,Mac ProjFS: Don't perform user/kernel version validation for offline I/O,0
442,Changes to fix perf build break,0.7054465,Perf improvements:,,1
443,Track tombstones so that we know when DeleteFile needs to be called,0.47246477,1730: Fix an issue with FastFetch when deleting files,Update .gitattributes to use the csharp pattern for hunk headers in *.cs files. This will result in the csharp function name that a change occurs in to be included in the hunk header.,0
444,Merge pull request #1409 from Halterer/SubDirectoryInfoObject,0.62107456,1674: Config: disable status.submoduleSummary,,0
445,Compress the entries in the modified paths database when mounting,0.49124038,"A background task will now compress and deduplicate the pack-file data in the shared object cache, resulting in more sustainable disk usage",,0
446,Merge pull request #334 Mac: Prevent double hydration and directory expansion,0.50562316,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,Check the disposing flag in Dispose methods,0
447,Add flag to indicate if GetProcessById should used,0.45744514,1674: Config: disable status.submoduleSummary,,0
448,Add functional test the fails on Windows without fix,0.5665561,1697: Fix functional tests to skip around ProjFS issue,,0
449,Remove using that was no longer being used,0.5250766,1689: Make delete docs more verbose,,0
450,PerfProfiling should not initialize GVFSPlatform twice,0.5880913,* gvfs upgrade could fail if its background processes were launched in an existing enlistment.,When implementing Dispose the disposing flag needs to be checked so that objects that may have already been disposed of through gc will not be used and cause a ObjectDisposedException.,0
451,Add method that is only for getting the external lock holder,0.5118977,Includes fixes to config settings for internal users only,All registered repositories should be unmounted before unloading the PrjFS Kext.,0
452,Mac: Changes prjfs-log tool to handle kext unload/reload,0.50591946,"A new config setting allows updating USN journals, which is needed when using BuildXL with VFS for Git.","On case-insensitive filesystems, we can restore the use of non-case-matching mixed-case file and folder paths in several PrefetchVerbTests, while retaining case-sensitive exact matches on Linux. These changes are a follow-up based on PR feedback from wilbaker on PR #1412 and commit 5c7890237893.",0
453,Configure BundleIsVersionChecked to false,0.49159378,1726: Config: commitGraph.generationVersion=1,"Use the PathComparison we set in our MirrorProviders to actually perform path comparisons, and add a PathComparer for use on Windows in particular. Also repair a handful of line endings while we're here.",0
454,"Mac EndpointSecurity prototype: Removes random delay, reduces debug output",0.5470345,Initial Mac platform native notifications,,0
455,ProductUpgrader: add SuportsAnonymousQuery flag,0.48466745,1710: Add new Microsoft certificate thumbprint,"Offline I/O registration uses a trivial user/kernel API which is not sensitive to version differences, and there have been instances where gvfs upgrade has failed and left VFS4G in an unusable state because version validation failed mid-upgrade. This change disables validation for offline I/O registration only.",0
456,Merge pull request #964:  Log when a path can't be looked up from fsid,0.4778747,  - Correlate trace2 stream with VFS for Git stream with the Git session ID.,,0
457,Ignore test for build machines because WSL not enabled on them,0.48313773,1697: Fix functional tests to skip around ProjFS issue,,0
458,Mac kext: Fixes potential issues flagged by clang static analyser,0.46722358,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,,0
459,Change log to informational when IsReady fails,0.60710907,See the full change log,,0
460,NuGetUpgrader: fix issue with upgrader using interop services,0.65083635,Update NuGet upgrader with new Microsoft package signing certificate,,0
461,use repository relative paths in DiffTreeResult.TargetPath,0.46573895,1685: minor path comparison fixup in ProductUpgrader,,0
462,Microsoft mandatory file,0.49919492,1710: Add new Microsoft certificate thumbprint,,0
463,Add dehydrate message to named pipe messages,0.36848602,1747: UpgradeVerb: write deprecation notice,,0
464,Merge pull request #1380: GitProcess: Catch InvalidOperationException when setting priority class,0.5108142,1674: Config: disable status.submoduleSummary,,0
465,Merge pull request #313 CloneVerb: Force download of commit and trees on failed initial checkout,0.47913072,- Fixes a copy failure when copying the upgrade tool to its temporary location.,,0
466,Merge pull request #1064: Maintenance: Check Stopping before reacting to error code,0.54895526,Pull Requests,,0
467,Update BuildGVFSForMac.sh to set GVFSVersion,0.7270427,Instructions for installing and using GVFS are available at https://github.com/Microsoft/GVFS,,1
468,PreCommandHook: don't lock pack-objects,0.9433691,1675: PreCommandHook: don't lock pack-objects,,1
469,Mac ProjFS userlib: Fixes resource leaks from shadowed variables,0.5381689,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,,0
470,Add wait for background operations to complete in modified paths test,0.4721274,1685: minor path comparison fixup in ProductUpgrader,,0
471,Fix placeholder flag,0.49559504,1741: Fix winget tag specification,,0
472,Adding max pipe length explanations to POSIX and Windows platforms as well,0.42343017,"* The client will now also query the /gvfs/sizes endpoint on a cache server that implements that endpoint, reducing the latency on those requests even further",,0
473,GVFS.UnitTests: enable running tests with dotnet test,0.5645558,- Added better diagnostic info in the GVFS logs when there are network errors,,0
474,Mac: Prevent deletes of the index by non-git processes and enable related functional tests,0.563872,1703: Delete all macOS projects,,0
475,Adding dry-run and no-verify.,0.48498952,- Other perf and reliability fixes.,,0
476,Don't warn about higher packages,0.45608392,1675: PreCommandHook: don't lock pack-objects,,0
477,First steps towards moving to using native stat for index generation on Unix OSes,0.41950476,1666: Docs: start basic template,,0
478,Merge pull request #590 Set core.filemode according to platform,0.49214464,"A background task will now compress and deduplicate the pack-file data in the shared object cache, resulting in more sustainable disk usage",,0
479,Make FileTypeAndMode an internal struct and fix StyleCop unit test issue,0.47017512,1666: Docs: start basic template,,0
480,Merge pull request #1652: RepoRegistry: ignore non-existent repos,0.65372777,1652: RepoRegistry: ignore non-existent repos,,0
481,Update message for failed folders during dehydrate,0.56770766,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,,0
482,hoist case-sensitivity check out of compare loop,0.36141998,- Disable commit-graph verify for performance concerns,,0
483,ResetMixedTests: drop test that behaves differently,0.49791324,1652: RepoRegistry: ignore non-existent repos,,0
484,Fix issues when a file is read or modified before changing included folders,0.54606456,Adds additional logging for folder and file placeholder creation.,,0
485,Cleanup for PR feedback,0.5433243,Improves the rate of .gvfsCache cleanup., Save last 100KB of /var/log/installer.log immediately after   an upgrade failure. Installer logs would be available through gvfs diagnose. Added new platform property SupportsSystemInstallLog. This will be   set to true for Platforms(macOS) that keep system wide installer log   (vs custom logs specific to VFSForGit installer package).,0
486,Use fixed GIT_COMMITTER_DATE in functional tests,0.5741751,Git: Includes incremental commit graph,"VFSForGit installer fails in postinstall script while trying to launch Service and UserNotification agents in GUI context of logged in users. To determine users logged into the GUI context, postinstall script looks for loginwindow commands and the user running the command. When Fast User switching is enabled, then loginwindow can be running as root user, even though root user is Not logged in. In such cases, postinstall tries to launch Service and UserNotifcation agents in GUI context of root user (that does not exist) resulting in failure. This commit makes postinstall look for Finder command (which only runs after a user has successfully logged into GUI context and is therefore more reliably associated with GUI session) rather than loginwindow. Also Updated launchd plist for Service and Notification agents, added LimitLoadToSessionType = Aqua, just to make sure the agents get launched into the GUI context only. Fixes #1444",0
487,Update 4 Changes,0.7733586,Major Updates,Clean up Register/Unregister for OfflineIO,1
488,Merge pull request #1340 PrjFSKextLogDaemon: Don't log every time a dropped kext message is detected,0.4812268,- Disable commit-graph verify for performance concerns, Add a call from MountSetsCoreHooksPath Ensure we check Register is successful when starting up Have verbs explicitly unregister,0
489,Add path to included folders when folder created that is in the index but not in the included list,0.5840293,Adds additional logging for folder and file placeholder creation.,Mark panic strings as 'public' so they appear in Console,0
490,Table formatting polish,0.29976633,1666: Docs: start basic template,"Mac ProjFS: Don't follow symlinks in kext & userlib, logging improvements",0
491,Merge pull request #764: Log ring when querying for upgrades on the background timer,0.49744946,- Disable commit-graph verify for performance concerns,,0
492,Merge pull request #644 Update Git to include commit-graph BUG statement,0.733137,Git: Includes incremental commit graph,For some reason the test coverage check fails when we return from the default: switch case. Removing the default: case and returning after the switch block instead seems to make it happy.,1
493,docs: add basic user-facing documentation,0.6741868,1666: Docs: start basic template,"As ProjFS operates on symlinks themselves, vnode lookups must not follow symlinks.",0
494,Fix sparse issue on Mac when folder is left around but not in placeholders,0.497489,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,"The code previously used a mixture of symlink-following and non-symlink following function calls. As ProjFS operates on symlinks as well, all such calls must be non-following.",0
495,Remove var,0.5027415,1746: Delete custom upgrader," The KextLog_File* macros are extended to output the vnode type as well as path. Failures on vnode_lookup() will now only generate an ""error"" level log event if the path lies within an active root, otherwise the default log level is used.",0
496,Use Sqlite for the placeholders,0.6651145,Moves placeholder database into SQLite for better performance.,,0
497,Merge pull request #670 from changeworld/patch-2,0.54630756,Pull Requests,,0
498,Merge pull request #1796 from ldennington/remove-nuget-commands-ref,0.52741635,Pull Requests,"Mac ProjFS: shadowed variable bugfixes This fixes a few subtle bugs caused by accidentally shadowed variables, and enables a compiler warning to prevent the class of bug in future.",0
499,Add a bespoke index.lock file to protect fastfetch operations,0.51421696,1730: Fix an issue with FastFetch when deleting files,,0
500,Merge pull request #1276 [master] POSIX: Switch to Process.Start for launching GVFS.Mount,0.56489533,- Fixed a bug that would cause VFS for Git mount process to shut down if it receives out-of-order ProjFS callbacks.,"[Linux] Support case-sensitive filesystems Introduce case-sensitive file path matching and sorting of file and folder names within the repository as well as the modified paths and placeholder list databases, but only on Linux and other case-sensitive file systems, while retaining existing case-insensitive behaviour on Windows and Mac platforms. We use filesystem-specific case matching when comparing path throughout the functional test suite, and also make sure to exclude the case-sensitive filesystem unit tests when running on Windows or Mac platforms. We include some filename case corrections to prevent test case regressions on case-sensitive filesystems, and use lowercase paths generated from SHA1 values because that ensures consistency with Git's own naming scheme for files under .git/objects on case-sensitive filesystems.",0
501,"Refactoring certificate loading into different methods, when loading from file and from store. Adding filtering and ordering, when loading from store",0.47428793,1711 [HOTFIX] Fix upgrader's expectation of a single certificate,"To avoid bugs resulting from shadowed variables in future, the corresponding compiler warning is now turned on across the entire project. A few benign instances discovered by the setting are resolved as well.",0
502,Merge pull request #422 PostFetchJob: Delete stale .lock files,0.5676899,1730: Fix an issue with FastFetch when deleting files,"Variables were re-declared instead of simply assigned, potentially causing resource leaks and incorrect return codes on error control flow paths.",0
503,Remove incorrect file header,0.45237666,1730: Fix an issue with FastFetch when deleting files,"As wilbaker noted in PR review, we really don't need the Case[In]SensitiveFileSystem functional test categories because we've now created the public boolean flag in FileSystemHelpers, so we can just toggle case-sensitive behaviour on that flag instead of duplicating tests and moving code around.  Nice catch!",0
504,Merge pull request #608 Mac: Cleanup while investigating converting files to full,0.5371758,1703: Delete all macOS projects,,0
505,"Cleanup - Use Enlistment.GitBinPath when available, rather than invoking Platform.",0.61179936,- Built-in git rebase is on by default.,Per PR advice from wilbaker.,0
506,Merge pull request #817 Add retry and sleep while checking if file/folder exists for predelete cases,0.5464995,Pull Requests,"Per PR suggestion from wilbaker, we hoist the check on whether to perform a case-sensitive string comparison or not out of the core loop of the LazyUTF8String.Compare() method in GitIndexProjection.  This should reduce the number of additional conditional tests to just one per Compare() invocation, as opposed to one per compared byte. (We could, if need be, further reduce the overhead by creating two independent Compare() methods and not passing in a bool flag, and then hoisting the comparsion-mode check higher in SortedFolderEntries.GetSortedEntriesIndexOfName() so that different versions of that method were executed depending on the mode.  However, we reserve this option for now, depending on the results of performance tests.) We also add labels to the bool flags used in some of the helper methods used by the unit tests, per PR advice.",0
507,Add sparse option for disabling and returning to a full enlistment,0.4731759,- Improvements to compact and maintain the ModifiedPaths.dat database to help mitigate the problem of command perf degrading over time in an enlistment.,Per PR suggestion from kewillford.,0
508,Mac: Update MirrorProvider to support symbolic links,0.47816467,Initial Mac platform native notifications,Per PR suggestion from kewillford.,0
509,build: drop old Azure Pipelines YAML CI/PR builds,0.48868185,Previous builds were not including fully-signed DLLs. This is now fixed.,"Simplify a few more platform-specific case-sensitivity checks in the functional tests and CmdRunner by using FileSystemHelpers, as suggested by kewillford on PR review.",0
510,Merge pull request #943 Add check for existing pipe on clone and better error messaging,0.4932884,- Disable commit-graph verify for performance concerns,Make sure to use the exact case-sensitive name of FastFetch.dll in the test suite.,0
511,UpgradeOrchestrator: tweak tracing,0.57400477,1685: minor path comparison fixup in ProductUpgrader,"On Linux, file paths are case-sensitive, so we always use lowercase paths generated from SHA1 values because that ensures consistency with Git's own naming scheme for files under .git/objects.",0
512,Replace calls to Count with IsEmpty,0.44855046,1652: RepoRegistry: ignore non-existent repos,"We divide the FilterNonUTF8FileName() functional test into a pair, one for case-sensitive filesystems such as Linux, and one for case-insensitive filesystems like Mac and Windows.",0
513,Create specific flag for ConfigVerb,0.4188159,1741: Fix winget tag specification,"We divide the FolderContentsProjectedAfterFolderCreateAndCheckout() functional test into a pair, one for case-sensitive filesystems such as Linux, and one for case-insensitive filesystems like Mac and Windows.",0
514,Mac: Support 'gvfs diagnose' verb,0.5143228,- Added better diagnostic info in the GVFS logs when there are network errors,"We divide the HydratingFileUsesNameCaseFromRepo() and HydratingNestedFileUsesNameCaseFromRepo() functional tests into pairs, one for case-sensitive filesystems such as Linux, and one for case-insensitive filesystems like Mac and Windows.",0
515,Build: include SharpZipLib,0.49794358,1679: BuildGVFSForWindows.bat: use nuget on PATH,Use filesystem-specific case matching when comparing path throughout the functional test suite.,0
516,Functional Tests: validate clone and mount create expected directories in root,0.48065534,1697: Fix functional tests to skip around ProjFS issue,Includes filename case corrections in PrefetchVerbTests to prevent test case regressions on Linux.,0
517,IsFileSystemSupported: cleanup test files on Mac,0.5489011,1703: Delete all macOS projects,"Introduce case-sensitive file path matching and sorting of file and folder names within the repository as well as the modified paths and placeholder list databases, but only on Linux and other case-sensitive file systems, while retaining existing case-insensitive behaviour on Windows and Mac platforms. Also make sure to exclude the case-sensitive filesystem unit tests when running on Windows or Mac platforms.",0
518,Add try/catch/finally for the task running git command with stdin,0.54534143,"* Added a git config setting to disable the calculations for detecting force pushes during 'git fetch' and 'git pull'. That calculation can take 10's of seconds on a large graph, and users can now opt out of it.","This only applies to on-disk operations like locating the "".git"" directory or "".idx"" files, etc. -- the repository contents remain case-insensitive. Co-authored-by: Chris Darroch chrisd8088@github.com",0
519,Merge pull request #469 from jeschu1/WriteFileTelemetryFix,0.5814538,Pull Requests,Correct Upgrade Messages for Mac,0
520,Move ShouldHandleFileOpEvent unit tests into their own class,0.41310722,1674: Config: disable status.submoduleSummary,Mark MoveIndexFileFails as MacOnly because CmdRunner on Windows failing,0
521,LooseObjectStepTests: use Git to delete loose objects,0.5111246,1717 [HOTFIX] Update Git to remove ODB string check,,0
522,Use better names in the modified paths test,0.50666595,1685: minor path comparison fixup in ProductUpgrader,Mac: Add mdworker_shared to the IsFileSystemCrawler block list,0
523,"Using new API, FileNotFound will not be called",0.43666714,1658: ProjFSFilter: Be more robust to missing PowerShell,,0
524,GetInsertionIndex should include the entry's name when it throws an InvalidOperationException,0.3556993,1674: Config: disable status.submoduleSummary,,0
525,Update Readme.md,0.88832617,1750: Update Readme.md,"See microsoft/git#165 for the rebase onto v2.23.0.windows.1. This PR has a few reactions to that update: A newline was dropped in a message. Remove it from our expectation in a test. Rebase now has unpredictable extra line of whitespace sometimes. However, -q doesn't work in tandem with --merge, but using GIT_QUIET=true makes the output quiet on Windows. Still doesn't work on OSX for some reason, so also ignore the error output and focus on the end-result. Use git rev-parse HEAD^{tree} to ensure we got the same resulting working directory. FileContentsShouldMatch() used to fail if both of the files didn't exist. Something changed in v2.23.0 such that a cherry-pick loses a file in both vanilla Git and VFS for Git, so the test started failing on that path. Relax the condition, since the files do match. KnownGitCommands needs to include restore and switch, resolving #1463. Includes the performance fix for git checkout -b from microsoft/git#183.",1
526,Merge pull request #1578 Create shared cache folders with the same ACLs as repo folders,0.69961715,- Gracefully handle a missing shared object cache pack directory.,mdworker_shared is part of the Spotlight indexing service and should not be allowed to hydrate files.,0
527,UpgradeOrchestrator: handle platform differences,0.55689836,1711 [HOTFIX] Fix upgrader's expectation of a single certificate,Add a global setup class when using a --test= option,0
528,Call git-credential approve on successful credential usage,0.6928586,This includes the Git Credential Manager Core v2.0.394.50751.,Includes updates from microsoft/git#183. Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
529,Fix Bash Delete Test Failure,0.43374982,- Multiple mount process reliability bugs have been squashed.,,0
530,LibGit2RepoPool: Dispose of unused LibGit2Repos,0.44114298,1741: Fix winget tag specification,Check for new Panic Logs where PrjFSKextLogDaemon is started,0
531,Update Git to include commitGraph.generationVersion config,0.7503062,Includes Git v2.27.0,,1
532,Merge pull request #456 Mac: Disable StatusTests.MoveFileIntoDotGitDirectory,0.557644,1674: Config: disable status.submoduleSummary, Removed Category.MacTODO.NeedsServiceVerb Updated the category of SharedCacheTests::CloneCleansUpStaleMetadataLock   to TestNeedsToLockFile. The test case assumes Windows style file   locking behavior; causing it to fail on the Mac.  Fixes #1217,0
533,Merge pull request #1393: Setup.iss: use {sys} variable when calling sc.exe,0.45936453,Pull Requests, A time file is used to differentiate the last sweep The name of the panic file is sent to telemetry,0
534,ProductUpgrader: platform specific upgrade directories,0.61065453,Update components included with internal distribution,Updated Apple Event usage description string to be generic. New text: $(PRODUCT_NAME) uses Terminal app to run gvfs   commands.,0
535,Update gitignore for new TestResult filenames,0.67052627,- Updated Git for a security issue.,Add LogInfo / LogWarning messages to PrjFSLib,0
536,Merge pull request #1289 from Actionable notifications,0.5193139,Pull Requests,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
537,Some smaller cleanup,0.630707,Improves the rate of .gvfsCache cleanup.,,0
538,Dispose previous invoker at beginning of setup to avoid timing bugs,0.54204446,1740: Skip launching UI if running unattended,,0
539,Allow output from execution of verb to send output to status spinner,0.32982004,- We have enabled the generation of the serialized commit graph in the post-fetch thread. This should provide across-the-board perf wins in any command that walks many commits.,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
540,"Revert ""Fix handling of >>""",0.52483463,1652: RepoRegistry: ignore non-existent repos,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
541,Automount and other updates:,0.5767784,Update components included with internal distribution,"The output is strangely off by some whitespace, so instead of worrying about that, make sure the resulting tree is the same. Signed-off-by: Derrick Stolee dstolee@microsoft.com",0
542,"Make rebase validation use -q, check tree after",0.42625064,- Commit-graph and multi-pack-index are validated after writing to eliminate corruption scenarios,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
543,Merge pull request #1207 from pmj/mac-kext-vnode-put-race-fix,0.46500307,Pull Requests,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
544,Add newline before outputting sparse was aborted,0.417997,1647: Fix commit-graph expiration,"[Linux] Convert tests and repair jobs to use backing root Convert all relevant uses of RepoRoot and WorkingDirectoryRoot in the GVFS provider and functional tests to use the backing root, to ensure these tests will pass on systems where they are distinct (e.g., Linux). For example, repair jobs run while the GVFS enlistment is not mounted, which on Linux requires us to use the backing root in order to access the "".git"" contents; similarly, the MountTests are adjusted to ensure they don't expect file contents within an unmounted repository.",0
545,Mac: Change default location of .gvfsCache folder from /.gvfsCache to ~/.gvfsCache,0.5339768,- VFS for Git will performance maintenance in the background. This release will pack loose objects in .gvfsCache into packfiles. ,Mac installer pkg would now automatically unmount all repositories registered for auto mount Fixes #1124,0
546,Add functionality for the --disable option for sparse verb,0.3999403,1689: Make delete docs more verbose,"Mac ProjFS kext: Deny I/O on offline roots, with exceptions, part 2 This is a continuation of the work on issue #182. The remaining operations to block are:  A process attempts to read/execute an empty file in an offline root. The result of the read would be bad data, so failing with denied authorisation is preferable to letting the bad data propagate. A process attempts to create files or directories in an offline root.  The commits implementing those 2 changes are fairly straightforward, however they did cause some knock-on effects:  During gvfs clone, the git subprocess itself wants to create files/directories in the offline root, so we need it to inherit the parent gvfs process's entitlement to access offline roots. The exception check therefore now walks up the process hierarchy. One of the functional tests, CheckoutBranchWithOpenHandleBlockingProjectionDeleteAndRepoMetdataUpdate needs to mess with the repo while it's not mounted, so I've registered the test runner for offline I/O for the duration of that test. To avoid weird edge cases, I've made the offline I/O registration in the native userlib thread-safe and reference counted, so registering multiple times is fine, and we only actually deregister once it's been matched with an equal number of unregister calls.",0
547,Mac: Do not lookup or download file sizes when updating placeholders,0.5633637,"* The post-command step to update placeholder files now batches its size requests to the server, resulting in significant speedups in situations where many placeholder files needed to be updated","Also adds a kext unit test for blocking file/directory creation in offline roots. This further access restriction to offline roots causes problems in the CheckoutBranchWithOpenHandleBlockingProjectionDeleteAndRepoMetdataUpdate functional test, so this test now registers for offline I/O as well.",0
548,Merge pull request #731 NuGetUpgrader: verify integrity of downloaded NuGet package,0.6989942,Update NuGet upgrader with new Microsoft package signing certificate,"Calling PrjFS_RegisterForOfflineIO() twice and then PrjFS_UnregisterForOfflineIO() twice no longer causes a failed assertion, is more efficient (only one shared user client instance) and is now thread-safe.",0
549,Merge pull request #1664: Update USN journal entries for projected folders,0.8453074,1664: Update USN journal entries for projected folders,,1
550,Merge pull request #261 Clean up code that was referring to sparse-check our always_exclude,0.47971773,Improves the rate of .gvfsCache cleanup.,,0
551,Merge pull request #675 from New UpgradeOrchestrator UT,0.5220901,Pull Requests,"add MoveIndexFileFails() functional test On some platforms (notably Linux), we receive only a pre-rename permission request rather than a pre-delete permission request during a rename(2) operation, so the virtualization instance's OnPreRename() handler becomes responsible for ensuring that, outside of a GVFS lock, the .git/index file can not be renamed or overwritten. The BasicFileSystemTests.DeleteIndexFileFails() test handles the case of a true delete of .git/index, as well as platforms which deliver a pre-delete event on the source path prior to a rename action. As well, several GVFSLockTests tests such as the LockPreventsRenameFromInsideWorkingTreeOnTopOfIndex() test the case of a file being renamed to .git/index, but no existing test checks for the case of .git/index being renamed to another path (although DeleteIndexFileFails() likely suffices on platforms which send a pre-delete event). Therefore we add an explicit MoveIndexFileFails() functional test to cover this case.  Note that we use System.IO.File.Replace() in the SystemIORunner because File.Move() is implemented on Unix/POSIX systems such that it actually performs a copy or hard link first, then a delete, not a true rename(2).  The effect on a platform where pre-rename but not pre-delete events are delivered on rename operations is that the link succeeds, then the delete fails (since that does send a pre-delete permission request, which is denied as the path is .git/index), leaving behind a spurious extra file link.  So we want to trigger a true rename(2), which is what File.Replace() does.",0
552,Fix totalFindRootForVnodeHits so that it's pulling the value from VnodeCacheHealthStat_TotalFindRootForVnodeHits,0.4372267,1674: Config: disable status.submoduleSummary,"Per PR suggestion from wilbaker, we can align the messages and tests in the AccessShouldBeDenied versions of the DeleteFile and ReplaceFile methods with those found in the other runner classes.",0
553,Merge pull request #1016 from jeschu1/UseMainForkIfNamedStream_coverage,0.55640674,Pull Requests,"[POSIX] Use platform-specific path separators in repair jobs and cache tests Avoid hard-coding the Windows backslash path separator in messages printed by the repair jobs. Per @kewillford's suggestion, we use GVFSConstants.DotGit.* properties throughout. Also fix the path matching in the HydrateEntireRepo() helper for MultiEnlistmentTests.SharedCacheTests, which was not excluding {repoRoot}/.git/ paths on Mac (or Linux) due to hard-coded Windows path separators.",0
554,Remove unused local variable,0.38345933,1689: Make delete docs more verbose,Add information for when lock is release by process not owning the lock,0
555,Mac ProjFS: Don't perform user/kernel version validation for offline I/O,0.6314743,1697: Fix functional tests to skip around ProjFS issue,Cleanup virtualizer tests,0
556,Updating README.md,0.81826687,1750: Update Readme.md,,1
557,rename common Mac hook code to share with Linux,0.5228215,1744: Overhaul build and project systems and drop Mac/POSIX code,Don't log errors when MaintenanceSteps fail due to the repo being deleted,0
558,Add FileOp Handling tests,0.5180704,- gvfs prefetch learned how to take --files-list.,,0
559,Pull all platform specific code into FastFetch's directory. Refactor PrefetchLibGit2 and move it into FastFetch. Rename PrefetchLibGit2Repo -> FastFetchLibGit2Repo,0.5998504,1730: Fix an issue with FastFetch when deleting files,"Fix the path matching in the HydrateEntireRepo() helper for MultiEnlistmentTests.SharedCacheTests, which was not excluding ""{repoRoot}/.git/"" paths on Mac (or Linux) due to hard-coded Windows path separators.",0
560,Fix handling of >>,0.5968302,- Other bug fixes,Avoid hard-coding the Windows backslash path separator in messages printed by the repair jobs.,0
561,use WorkingDirectoryBackingRoot in RepairJobs,0.4970135,1734: Adding winget workflow,,0
562,GVFSLock.Shared: correctly report whether lock was acquired,0.6018106,- Fixed an annoying bug where a Ctrl+C'd git process could leak a GVFS lock,,0
563,Move config & upgrader files to ProgramFiles (4),0.56382835,1746: Delete custom upgrader,,0
564,GVFS.props: use release build with rebase fix,0.697091,GVFS is now available as a binary installer,,0
565,First Kext Unit Tests as POC,0.33177346,We have new documentation including a new troubleshooting guide!,,0
566,Minor PR Feedback,0.55271316,Release Notes,,0
567,GVFS Health Verb Initial Merge (#1249),0.43159458,1669: Docs: more troubleshooting and FAQs,,0
568,Remove Contains from the placeholder interface and use in memory hashset,0.46784508,- Improved the memory usage during MIDX computation.,,0
569,Remove unused using,0.4833926,1689: Make delete docs more verbose,,0
570,Rename PrjFSHealthData and health related functions/enums to be vnode cache specific,0.5205541,"A new config setting allows updating USN journals, which is needed when using BuildXL with VFS for Git.",Allow privileged system service 'amfid' to hydrate,0
571,PR Feedback2,0.47706348,Release notes,Remove '/System/Volumes/Data' when only in path,0
572,No telemetry for non-elevated upgrade,0.46009868,"gvfs config upgrade.ring [""fast"", ""slow"", ""none""]",Include panic logs for vfs in diagnose,0
573,Use virtualizer tester in all the windows virtualizer unit tests,0.39165932,"Other bug fixes, engineering improvements, and test reliability fixes."," When amfid is invoked to check the code signature of a library which has not been hydrated,   blocking hydration would cause the launch of an application which depends on the library to fail,   so amfid should always be allowed to hydrate.",0
574,Merge pull request #177 from pmj/mac-kext-log-improvements,0.46497273,Pull Requests,Add lock around writes to SQLite database tables,0
575,Mac kext: Fix for provider user client methods being unnecessarily public.,0.4927278,Initial Mac platform native notifications,,0
576,Merge pull request #775: Improve upgrader logging,0.5390684,"- Upgraded to Git 2.19. This version brings with it improvements to unpack_trees to speed up checkout, merge, reset, and rebase.",SubDirectoryInfo Object,0
577,"Mac: Adds dtruss script from macOS, plus license & 3rd party notice",0.56686544,Initial Mac platform native notifications,Update mac uninstall script to remove GVFS service directory,0
578,Move init script,0.35249832,"* The post-command step to update placeholder files now batches its size requests to the server, resulting in significant speedups in situations where many placeholder files needed to be updated","The mac uninstall script did not remove the GVFS service directory, resulting in GVFS artifacts being left around. This change updates the uninstall script to also remove the GVFS service directory. This brings the behavior of the mac uninstall script to match the Windows uninstall script in src/Scripts/UninstallGVFS.bat. One motivation for this change was that the Mac Functional test machines were gathering cruft from repeated test runs, such as the list of registered repositories in the repo-registry growing. This apparently caused the GVFS service start up time to grow, resulting in test failures.",0
579,rename,0.5456867,Major Changes,Update NUnit dependencies,0
580,"Don't allow switching between anonymous/authenticated, and treat empty creds as error",0.58200073,- Fixed several incorrect interactions with credentials,Mac: Fix and enable remaining dehydrate functional tests,0
581,"Simply handling of NULL, send EmptyString from the top level and react appropriately",0.31905052,1652: RepoRegistry: ignore non-existent repos,"Update the following dependencies: NUnit:              3.10.1 -> 3.12.0   NUnitLite:          3.10.1 -> 3.12.0   NUnite3TestAdapter: 3.10.1 -> 3.13.0 This update includes a fix for the following issue we have have observed in our CI builds, where tests fail with the following exception: System.InvalidOperationException: Stack empty. Which appears to be this issue #2772 in https://github.com/nunit/nunit which indicates it is fixed in NUnit 3.12.",0
582,Merge pull request #244: Fixed a bug that was preventing clone from running prefetch and mount on MacOS,0.54692054,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,,0
583,Merge pull request #1208 from pmj/mac-kext-182-no-writes-on-offline-roots,0.49330485,Pull Requests,,0
584,"use ""where"" to locate git installation",0.5480635,Includes Git v2.27.0,,0
585,Merge pull request #1529 from github/posix-only-func-tests,0.49833697,Pull Requests,"This PR does two things: Updates Git to include the slow commit-graph write fix from microsoft/git#168. Also see #1420 for the M153 hotfix. Removes the multi-pack-index writes from the PostFetchStep and instead only writes the multi-pack-index during the PackfileMaintenanceStep. In order to get the most out of the step, we need to ensure we have a multi-pack-index before running the expire and repack steps. Also, we can only expire the packs from that day if they are contained in the multi-pack-index. If we agree that we should send (2) as a hotfix to the M155 release (in addition to (1), which is necessary), then I'll create a hotfix PR to that branch.",0
586,Track folder changes to update USN journal,0.78006744,1664: Update USN journal entries for projected folders,"On some platforms (notably Linux), we may receive only a pre-rename notification event rather than a pre-delete event, so the virtualization instance's OnPreRename() handler becomes responsible for ensuring that, outside of a GVFS lock, the .git/index file can not be renamed or renamed over. The BasicFileSystemTests.DeleteIndexFileFails() test handles the case of a true delete of .git/index, as well as platforms which deliver a pre-delete event on the source path prior to a rename action. As well, several GVFSLockTests tests such as LockPreventsRenameFromInsideWorkingTreeOnTopOfIndex() test the case of a file being renamed to .git/index, but no existing test checks for the case of .git/index being renamed to another path (although DeleteIndexFileFails() suffices on platforms which send a pre-delete event). Therefore we add an explicit MoveIndexFileFails() functional test to cover this case.",1
587,Merge pull request #462 PrefetchVerbTests: Remove commit-graph check,0.70257854,- Disable commit-graph verify for performance concerns,"The multi-pack-index write is taking a lot of memory. Instead of writing it with every prefetch (every hour) let's write it during the packfile maintenance step (once a day). This will lead to a few packs not covered by the multi-pack-index between runs, but that will not be a huge loss to performance. Signed-off-by: Derrick Stolee dstolee@microsoft.com",1
588,Mac EndpointSecurity prototype: Prints auth response time information.,0.635337,Initial Mac platform native notifications,See microsoft/git#168 for full details. Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
589,Merge pull request #1744 from mjcheetham/newbuild,0.5314381,Pull Requests,"Mac ProjFS: Deny I/O on offline roots, with exceptions, part 1 This is the first stage of implementing #182 - the kext now blocks write I/O to empty or placeholder files on offline roots. I/O needs to be blocked when:  A message failed to deliver to the provider. A process attempts to write to an empty file in an offline root (this file would subsequently be overwritten by a hydration event) A process attempts to write to a placeholder (hydrated unmodified) file when the provider is offline. The file would not show up in git status and could be overwritten by a subsequent checkout/rebase/merge. A process attempts to rename a file in an offline root. A process attempts to read/execute an empty file in an offline root. The result of the read would be bad data, so failing with denied authorisation is preferable to letting the bad data propagate. A process attempts to create files or directories in an offline root.  This change implements cases 1-4. Cases 5-6 will be covered in a future change. At first glance this seems like it would be a very simple change, but in practice, some processes must be allowed unfettered access to files in offline roots. So a large part of this patch set is dedicated to implementing a system for allowing exceptions - there is a new type of IOKit user client for processes which need unrestricted access to offline roots, and this needed to be implemented all the way through from kext, via native lib, to (managed) VFS4G code proper. Next, the vnode handler, which is in the actual business of denying or allowing file access, has been expanded to allow returning different results based on whether the root's provider is offline. Finally, ""deny"" results are actually returned for a number of different cases - so far, this only includes writes. Even this caused some test failures, so the test process itself needs to register as an exception with unrestricted offline root access.",0
590,Merge pull request #930 from jeschu1/changeloglevel,0.59821016,Pull Requests,"Mac kext: Drop lock for allocating virtualization root array memory Performing a blocking memory allocation while holding a lock in a vnode listener callback is not necessarily safe. (There is potential for a deadlock in low-memory situations.) When growing the virtualization root array, this was exactly what the existing code was doing. This change restructures the virtualization root insertion logic so that the lock can be dropped for allocating the larger memory block. Dropping the lock means it must be re-checked whether an insertion is still necessary, which was not readily possible with the old code structure.",0
591,Merge pull request #871 from jamill/upgrade_git_master,0.5277441,* Improve error message from gvfs upgrade if the Git installation could not be found.,"See microsoft/git#167 for details. This package also includes a Linux installer, since we have updated the build definition since the last Git update.",0
592,Merge pull request #1706: Update Git to include GCM Core update,0.8404181,1706: Update Git to include GCM Core update,,1
593,Mac EndpointSecurity MirrorProvider prototype: Better debug output,0.53903073,Initial Mac platform native notifications,Stop passing around KeyValuePairs instead of data objects Update unit tests accordingly,0
594,Update issue number for TryGetGVFSHooksPathAndVersion,0.6546645,* Improve error message from gvfs upgrade if the Git installation could not be found.,Mac: Do not lookup or download file sizes when updating placeholders,0
595,Mac ProjFS: User-space support for offline I/O process registration.,0.49450934,Switched over to use the Windows Projected File System (ProjFS) optional feature on RS4 and later. ProjFS is the new name for the GvFlt driver and its associated user mode library.,"Performing a blocking memory allocation while holding a lock in a vnode listener callback is not necessarily safe. (There is potential for a deadlock in low-memory situations.) When growing the virtualization root array, this was exactly what the existing code was doing. This change restructures the virtualization root insertion logic so that the lock can be dropped for allocating the larger memory block. Dropping the lock means it must be re-checked whether an insertion is necessary, which was not readily possible with the old code structure.",0
596,build: add GitHub Actions CI/PR workflow,0.6079144,Git: Includes incremental commit graph,"Some reduction in code complexity, as 128 ought to be enough for anyone.",0
597,Got rid of unnecessary under construction check,0.44649726,- Lots of live-site improvements,,0
598,Merge pull request #218 Add EnlistmentId and MountId to ETW data for correlation,0.39509153,  - Correlate trace2 stream with VFS for Git stream with the Git session ID.,See microsoft/git#167 for details. Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
599,Merge pull request #712 Try to load the kext if not loaded,0.52514195,Pull Requests,,0
600,PR Feedback: Move delete action check and use a queue for processing directories,0.5405096,1730: Fix an issue with FastFetch when deleting files,This causes the offline root check to block the file renaming operation at the hydration stage for empty files. The unit test is updated to check both the empty and hydrated scenarios.,0
601,Properly work around Mac GCM issues when the system Java is 8 (or below),0.542549,Initial Mac upgrade functionality,"This adds a unit test for disallowing file renames in offline roots on Mojave or newer, while also testing that on High Sierra, the rename is not blocked.",0
602,Update path to built kext in LoadPrjFSKext.sh,0.54967713,"A new config setting allows updating USN journals, which is needed when using BuildXL with VFS for Git.",Renaming a file or directory in an offline virtualisation root should not be permitted. This change implements that functionality on OS versions which enable us to distinguish between KAUTH_VNODE_DELETE operations that are caused by a rename operation versus not. Older OSes necessarily must allow any KAUTH_VNODE_DELETE operation.,0
603,Fix/Add Functional Tests,0.61760765,"Other bug fixes, engineering improvements, and test reliability fixes.","Placeholder (non-full) files, although hydrated, should not be modified while the provider is offline, as the provider would miss the PreConvertToFull/FileModified events. This change enforces this and updates the tests to reflect this new expected behaviour.",0
604,ProjFSFilter: Be more robust to missing PowerShell,0.96659076,1658: ProjFSFilter: Be more robust to missing PowerShell,Writes of any kind to empty files in an offline root should be denied to prevent data loss when the provider comes back online. File deletions meanwhile must be allowed so that the user may recursively delete the entire repository even if it is not mounted. A test has been added to verify that write access to empty files is indeed denied.,1
605,SharedCacheTests: add test for multi-enlistment checkout failures,0.48544043,- Fixed several incorrect interactions with credentials,"If for some reason the provider does not respond to a kernel request originating from an authorisation check callback, we now deny that authorisation.",0
606,"Mac kext: Use only VirtualizationRoot handles, not direct pointers",0.42843896,- Improved the memory usage during MIDX computation.,,0
607,Change background maintenance failures from error to warning,0.5359868,* gvfs upgrade could fail if its background processes were launched in an existing enlistment.,"This change rearranges the TryGetVirtualizationRoot() and HandleVnodeOperation() logic to include decision points to deny or allow certain file operations if the root's provider is offline, to protect the integrity of the repository. All the new logic is added, but operations are not yet denied. Some new tests for HandleVnodeOperation are also added to cover the new code paths.",0
608,Merge pull request #641 from pmj/vnode-leak-fix,0.50212854,- Fixed a bug that would cause VFS for Git mount process to shut down if it receives out-of-order ProjFS callbacks.,,0
609,Merge pull request #468 from jeschu1/telemetry2,0.5709922,Pull Requests,"This change is in preparation for enabling I/O protection for offline virtualization roots.  Processes which must access the contents of offline roots, such as VFSForGit's own, may register with the kext to be granted permission by opening a new type of user client connection to the kext's service. There is no restriction on this mechanism, it simply prevents accidental untracked changes. There are new unit tests covering the new functionality.",0
610,Fix a flaky test involving the background prefetch thread,0.5443301,1697: Fix functional tests to skip around ProjFS issue,This protects the vnodeType parameter of the KextLog_VnodeOp() macro from bugs due to operator precedence in expanded expressions.,0
611,Add some parenthesis to make code more readable,0.38709176,1666: Docs: start basic template,,0
612,Merge pull request #618 from benpeart/git-block-commands-tests,0.4965762,Pull Requests,,0
613,Cleanup -> Maintenance,0.6599919,Improves the rate of .gvfsCache cleanup.,"Repair jobs run while the GVFS enlistment is not mounted, which on Linux requires us to use the backing root in order to access the .git contents.",0
614,Merge pull request #1436: [Mac kext] Allow privileged system service 'amfid' to hydrate,0.5047224,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,Add sparse verb for allowing projection of only specific folders,0
615,Clean up PackfileMaintenanceStep around verify results,0.5385337,- Commit-graph and multi-pack-index are validated after writing to eliminate corruption scenarios,,0
616,GitHubUpgrader: handle TaskCanceledException that indicates a network timeout,0.5884996,"* Added a git config setting to disable the calculations for detecting force pushes during 'git fetch' and 'git pull'. That calculation can take 10's of seconds on a large graph, and users can now opt out of it.",  Use IsIncluded only on folder entries   Add more tests for SortedFolderEntries   Add comments for better understanding of the code   Remove call to GetFolderSparseState in UpdateOrDeleteFilePlaceholder ,0
617,Create common ProductUpgrader class,0.5395027,1685: minor path comparison fixup in ProductUpgrader,,0
618,Fixed typo in Windows install directions in Readme,0.4033144,1750: Update Readme.md,  Normalize paths that are saved in the sparse table   Add comment for how the IsRecursive for a sparse folder is set   Add verification for mockCommand3 in GVFSDatabaseTests   Rename sparse test   Add some validation to sparse folder test   Rename method that validate folders to ValidateFoldersInSparseList   Add to and update the sparse tests   Add tests for various paths for the sparse verb and trim spaces ,0
619,Add constant for folder dehyrate successful message,0.4690886,Adds additional logging for folder and file placeholder creation.,,0
620,Fix tests to check windows version for posix delete support,0.49093276,1697: Fix functional tests to skip around ProjFS issue,"  Add unit tests, comments, and renamed variables to make code more understandable   Update include verb to give more information to the user   Change OnFolderCreated to have an out parameter instead of return value   Add comment for when there is an EIOError and why OnFileConvertedToFull is called   Log warning when TryAddIncludedFolder gets an exception from the database   Remove isDirectory parameter from MarkDirectoryAsPlaceholder since it is not used   Rename IncludedFoldersList to GetIncludedFolders   Revert changes to the GitIndexProjection constructor   Add test for mac creating a folder and file that are excluded ",0
621,Mac kext: Replaces use of OSAtomic with standard C11 atomic operation,0.4651409,1744: Overhaul build and project systems and drop Mac/POSIX code," Extend GitRepoTests to allow include mode  The GitRepoTests can be initialized with a ValidateWorkingTree mode that is currently a boolean. If enabled, we will add extra checks to make sure the working tree of our virtual enlistment matches the enlistment from a vanilla Git repo. To extend this to the ""include"" mode, we need to first modify this boolean into an enum and add it as an extra option. Second, we need to be very careful about what we are comparing. We will no longer virtualize outside of the included folders. Be careful to include files in the root directory. The functional tests can then be run with ""--partial-mode"" to exercise only this option, which will isolate the test failures to this setting AND keep the test suite from getting too slow. Currently, the partial mode space is probably wider than necessary and can be reduced in later iterations. This does provide some coverage. Signed-off-by: Derrick Stolee dstolee@microsoft.com   Use enum for passing into all tests instead of an int   Clean up functional tests file system should extensions   Rename argument to --include-mode to match the feature   Add included folders below top level ",0
622,Renamed prefetch jobs to pipeline stages,0.42164385,- We have moved MIDX computation to a post-fetch thread. This should save blocking time per prefetch that downloads a packfile from the cache server.,,0
623,WindowsFileSystemTests: disable a test around LongFileName folder,0.52205026,1730: Fix an issue with FastFetch when deleting files,,0
624,incorporating review comments,0.4692009,General improvements:,,0
625,Merge pull request #805 from pmj/mac-root-vnode-invariants,0.45560682,Pull Requests,,0
626,Add number of waiting threads to avoid deadlock,0.47733623,1647: Fix commit-graph expiration,,0
627,build: migrate GVFS.Hooks project,0.64223146,- We have improved how GVFS handles enlistments in junctions and mapped to a drive letter.,,0
628,Verify and rewrite during PackfileMaintenanceStep,0.506519,- Commit-graph and multi-pack-index are validated after writing to eliminate corruption scenarios,,0
629,Allow privileged system service 'amfid' to hydrate,0.48413554,- No-op gvfs prefetch --hydrate performance is dramatically improved,,0
630,Mac: Support projection changes that add new files and delete folder,0.5696235,Adds additional logging for folder and file placeholder creation.,,0
631,Mac ProjFS: Only hydrate/expand when deleting due to rename,0.52273405,Switched over to use the Windows Projected File System (ProjFS) optional feature on RS4 and later. ProjFS is the new name for the GvFlt driver and its associated user mode library.,,0
632,Merge pull request #1514 from pmj/dtruss-fstatat-output-improvements,0.5047556,- Improvements to compact and maintain the ModifiedPaths.dat database to help mitigate the problem of command perf degrading over time in an enlistment.,,0
633,Cleanup some error messages,0.6433563,- Other bug fixes,,0
634,Refactor LooseObjectsStep.WriteLooseObjectIds,0.49069107,1666: Docs: start basic template,,0
635,Add test to PlaceholderDatabaseTests for tombstone placeholders,0.46693975,- Fixed an issue where some concurrent updates to the placeholder database would fail,,0
636,Merge pull request #421: Centralize special Mac paths in InitializeEnviroment.sh,0.49050575,1744: Overhaul build and project systems and drop Mac/POSIX code,,0
637,Merge pull request #288 from nickgra/mirrorProviderReadOnly,0.4749242,Pull Requests,,0
638,Mac: Don't download file sizes as part of OnEnumerateDirectory,0.46929014,1703: Delete all macOS projects,,0
639,Merge pull request #287 from kyle-rader/chore/add-mac-build-steps,0.4699113,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,,0
640,Mac kext: Adds VirtualizationRoot_FindForVnode not-in-root unit test,0.41834944,1685: minor path comparison fixup in ProductUpgrader,,0
641,Add HandleVnodeOperationTests,0.45068005,1734: Adding winget workflow,,0
642,Use sparse-checkout feature branch,0.43713206,1697: Fix functional tests to skip around ProjFS issue,Handle corrupt objects on Mac,0
643,Merge pull request #326 GitProcess: allow GIT_TRACE to point to full path,0.615921,  - Correlate trace2 stream with VFS for Git stream with the Git session ID.,,0
644,Merge pull request #749: update git to include trace2 V7,0.66076076,  - Correlate trace2 stream with VFS for Git stream with the Git session ID.,"Some organizational improvements to the code, since the SubDirectoryInfo object has named fields. Sub directory list now shows the fraction of files which are hydrated, sorting remains by number of hydrated files Added unit tests for the newly available information, the total number of files per sub directory.",0
645,Remove existing rules from GVFS ProgramData directory,0.56778836,- gvfs prefetch learned how to take --files-list.,,0
646,Merge pull request #1445: Check for new Panic Logs where PrjFSKextLogDaemon is started,0.5099757,1658: ProjFSFilter: Be more robust to missing PowerShell,No longer set PATH for git process and remove use of gvfs hooks root,0
647,Mac kext logging: Make time stamps more human readable,0.48750365,Initial Mac platform native notifications,Mac: Add version information to kext and PrjFS logging daemon,0
648,Mac kext: Fixes virtualization root array memory leak,0.4823603,- Improved the memory usage during MIDX computation.,,0
649,Fix tests that still need a sparse-checkout to test upgrades,0.7067471,"Other bug fixes, engineering improvements, and test reliability fixes.",,1
650,Small cleanups,0.61953634,Improves the rate of .gvfsCache cleanup.,"Now, that local cache path defaults to $HOME/.gvfsCache, there's no need to specify --local-cache-path explicitly.",0
651,Mac: New file notifications,0.74464935,Initial Mac platform native notifications,[Mac] Don't allow cloning or mounting on case sensitive volumes,1
652,Merge pull request #751: [Mac] Rename reverse-DNS xattr & kext identifiers,0.42141724,Pull Requests,,0
653,PackfileMaintenanceStepTests: fix flaky tests,0.55744946,1697: Fix functional tests to skip around ProjFS issue,Add SetupFixture for teardown to get the test results at the end,0
654,Merge pull request #470 from jeschu1/CacheToWarning,0.60635716,Pull Requests,Mac: Don't download file sizes as part of OnEnumerateDirectory,0
655,Merge pull request #733 from nickgra/FixVersionNumber,0.481206,1674: Config: disable status.submoduleSummary,Increasing precision of timestamps being logged,0
656,PR Feedback: Code cleanup and test fixes,0.6038322,"Other bug fixes, engineering improvements, and test reliability fixes.",Currently the output for running functional tests put the service logs and the run times for each of the tests at the end after the actual test summary results. This makes finding the actual results of failures harder to find since you have to scroll up an indeterminate amount to get to the results. This change will move the test run summary to the bottom of the output. So you can go straight to the bottom to see any failures.,0
657,Merge pull request #1270 from VFSForGit installer non-relocatable,0.58839464,- A couple of fixes for using VS Code on top of VFS for Git.,,0
658,build: migrate GVFS.Upgrader project,0.62984455,The gvfs upgrade command is deprecated. Future upgrades will require using winget or installing directly from the releases page.,Proper error message for 'git gui' on Mac,0
659,Add Heartbeat data for Folder Placeholder creation and File Hydration,0.618536,Adds additional logging for folder and file placeholder creation.,- Add comments where needed - Stop creating BlobSizeConnections in OnEnumerateDirectory - Remove populateSizes parameter from GetProjectedItems,0
660,Merge pull request #1215: Remove Placeholder after calling PreDelete,0.5305955,Pull Requests,,0
661,Create init scripts to set up dev environment in cmd/ps,0.36686122,1744: Overhaul build and project systems and drop Mac/POSIX code,"The git process was launched using a PATH environment variable with the gvfs hooks path to make sure that when a path in the repo was included in the user's PATH environment variable that it would only search outside the repo.  This was when the code was using git cat-file to hydrate files and searching for gvfs hooks would cause it to hydrate files which would cause it to search for hooks and it would be in a loop. This is no longer the case, the code is using libgit2 and the hooks are not called.  Since the gvfs hooks root was only used for setting the PATH for the git process, all references to it can be removed.",0
662,build: run functional tests in PR builds,0.48812124,"Other bug fixes, engineering improvements, and test reliability fixes.",,0
663,Merge pull request #23 from claycephas/protocolformatting,0.50952363,Pull Requests,The InnoSetup constants documentation lists {sys} as the way to expand to what is typically C:\Windows\System32. This should reduce issues with PATH modifications or system drive swaps. I manually tested upgrade to see that these paths were expanded correctly.,0
664,Merge remote-tracking branch 'msft/features/upgrade_extensibility' into more_service_acl_changes,0.47548193,- Improved reliability of how the installer upgrades from non-inboxed to inboxed ProjFS.,,0
665,Use no-op editor during functional tests,0.46488342,1697: Fix functional tests to skip around ProjFS issue,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
666,Remove setting skip worktree bit,0.5313698,1746: Delete custom upgrader,,0
667,Address more PR feedback,0.45938504,Release notes,,0
668,Attempt an anonymous query before requesting an auth token,0.37520394,  - Now approves credentials on authentication success,Initial cut of Health Feature,0
669,Remove the IPooledConnection and use IDbConnection for pooled connections,0.37912837,1674: Config: disable status.submoduleSummary,,0
670,install.bat: specify install dir,0.41647142,1678: BuildGVFSForWindows.bat: use nuget on PATH when possible,Includes updates from microsoft/git#164.,0
671,Some suggested cleanup for included folders (#1346),0.52691364,Adds additional logging for folder and file placeholder creation.,"Should fix #852. The fix is to use an environment variable to always show the upgrade message, if present. While looking at the post-command hook code, I discovered some simple cleanups that are isolated to different commits:  Removed unreachable code. Changed a message to refer to gvfs status instead of git status.",0
672,Merge pull request #1160 from github/skip-root-rmdir,0.49488112,- Built-in git rebase is on by default.,"As specified in the documentation [1], the PriorityClass setter will throw an InvalidOperationException if the process ID is not available. This could happen due to a race condition where the process completes before we can set its priority. The other exceptions it can throw are either platform-specific or signal a bug, so do not be overly aggressive in the 'catch'. [1] https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.process.priorityclass?view=netframework-4.8",0
673,Use IsPathProjected for determining if folder is still in projection,0.45173734,1664: Update USN journal entries for projected folders,Includes updates from microsoft/git#164. Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
674,Use the new signing certificate.,0.57518387,  - Now approves credentials on authentication success,"Use a new environment variable, GVFS_UPGRADE_DETERMINISTIC, to always print the ""upgrade available"" message, if it is present. This should fix test flakiness and issue #852. Signed-off-by: Derrick Stolee dstolee@microsoft.com",0
675,Merge pull request #156 from wilbaker/users/wilbaker/mac_file_modified_notification,0.5066468,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,"If we fail to communicate with the mount process, then 'gvfs status' gives us the information we want, not 'git status'. Signed-off-by: Derrick Stolee dstolee@microsoft.com",0
676,Merge pull request #645 from nickgra/FFSymLink,0.48621976,1683: GVFS.SignFiles.csproj: include more DLLs for signing,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
677,GitStatusCache: fix race condition in test setup,0.47909138,"- VFS for Git will pre-calculate status in the background in response to changes in the workdir, to improve the speed of user-initiated statuses.","As specified in the documentation [1], the PriorityClass setter will throw an InvalidOperationException if the process ID is not available. This could happen due to a race condition where the process completes before we can set its priority. The other exceptions it can throw are either platform-specific or signal a bug, so do not be overly aggressive in the 'catch'. [1] https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.process.priorityclass?view=netframework-4.8 Signed-off-by: Derrick Stolee dstolee@microsoft.com",0
678,Mac kext: Removes unused vfs_context_t parameter,0.44591987,- VFS for Git will performance maintenance in the background. This release will pack loose objects in .gvfsCache into packfiles. ,Mac build scripts: consume git installer pkg directly,0
679,"Merge pull request #448: Mac: Clean up kext perf tracing patterns, and a significant perf fix",0.5419862,- Improvements to compact and maintain the ModifiedPaths.dat database to help mitigate the problem of command perf degrading over time in an enlistment.,Remove all TODO(POSIX) and TODO(Mac) comments.,0
680,Merge pull request #372 from nickgra/realPrefetchHydrate,0.49981174,Pull Requests,"The script would fail to properly parse Git Version strings that included multiple hyphens, which broke Git Version strings that were generated by ""draft"" pipelines, which had the form: 1.2.3-DRAFT-pr as it would not include any text after the second hyphen.",0
681,No longer need to handle ObjectDisposedException on Windows,0.4615411,1674: Config: disable status.submoduleSummary,"Previously, the GitForMac.GVFS.Installer NuGet package contained only the git for mac installer as a .dmg file. This .dmg package contained the Git for Mac installer .pkg. The VFS4G installer takes a .pkg installer as input to the combined VFS4G / Git for Mac installer. As the NuGet package only contained the .dmg, the script to build the VFS4G combined installer had to mount the .dmg and extract the .pkg file. The GitForMac.GVFS.Installer package has been updated to include both a .dmg and .pkg file, so the installer script can now consume the installer .pkg directory, instead of mounting and extracting it from the .dmg file.",0
682,Merge pull request #1363: Handle corrupt objects on Mac,0.49218065,1703: Delete all macOS projects,PrjFSKextLogDaemon: Don't log every time a dropped kext message is detected,0
683,Mac kext: Fixes minor logging message typo,0.5300869,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,,0
684,Merge pull request #401 Add WaitForBackgroundOperations call with checking modified paths,0.5939182,Pull Requests,,0
685,Merge pull request #1473 Mac: Add mdworker_shared to the IsFileSystemCrawler block list,0.46448717,1734: Adding winget workflow,,0
686,Merge pull request #1558 Do not try to uninstall prjflt unless flag is passed,0.50273407,1674: Config: disable status.submoduleSummary,These comments were replaced with specific issue numbers or removed if no longer relevant.,0
687,Update with latest GVFS code.,0.7089082,"Many other reliability improvements in interactions between GVFS and the file system, and between GVFS and git","Now upon starting to run the verb tells the user that it's collecting statistics for the repository, and the help message now displays a tag explaining that the feature is still experimental.",1
688,Upgrader: use a common installation ID for all log files,0.512701,Adds additional logging for folder and file placeholder creation.,Includes changes from:  microsoft/git#158 (experimental tracing: trace threading and cache-tree extension) microsoft/git#159 (experimental tracing: prime_cache_tree()) microsoft/git#160 (experimental tracing: checkout and reset perf) microsoft/git#162 (support building with GCC v9.x),0
689,Merge PR #173: Add FileOp specific ShouldHandleFileOpEvent helper to kext,0.45690554,Adds additional logging for folder and file placeholder creation.,Includes changes from:  microsoft/git#158 microsoft/git#159 microsoft/git#160 microsoft/git#162  Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
690,Merge pull request #1741 from ldennington/fix-tag-formatting,0.5651856,1741: Fix winget tag specification,,0
691,Update ShouldMatchInOrder to validate order,0.49996424,1652: RepoRegistry: ignore non-existent repos,,0
692,Merge pull request #1562: PackfileMaintenanceStepTests: fix flaky tests,0.5425647,1697: Fix functional tests to skip around ProjFS issue,,0
693,Merge pull request #875 from Test reliability,0.5595572,Other bug fixes for reliability,,0
694,PostFetchStep: delete and rewrite commit-graph on write error,0.71371484,1647: Fix commit-graph expiration,,1
695,Merge pull request #352 from pmj/fileops-on-allowed-filesystems,0.45126036,1730: Fix an issue with FastFetch when deleting files,,0
696,Mac: Support basic projection changes and re-categorize functional tests,0.54661083,Initial Mac upgrade functionality,"Native notifications can now have actions associated with them. When user clicks on the action button on a notification bubble, VFSForGit will run a Command in response. Example: Mount_Failure notification can specifiy the gvfs command ""gvfs mount "" as its associated action. Actionable notifications also have an actionTitle, which get displayed as text in a Button control on the Notification bubble. Other details - Commands are run using Terminal app. - Terminal is launched using Applescript. - Only UpgradeAvailable and Mount_Failure notifications are actionable now. - VFSForGitNotification class now confirms to NSCoding protocol.   VFSForGitNotification object holds details of the notification   including associated commands. It is archived and sent to the   OS notification center. When user clicks the notification   bubble, the archived VFSForGitNotification is retrieved from   the native notification, its associated Command is read and   executed.",0
697,Fix Appended Files,0.6022753,1730: Fix an issue with FastFetch when deleting files,The files without the skip worktree bit set were not being correctly unioned into the EnlistmentPathData object. Now those files will be included in the count of files which are managed by git (slow files) Small fix for formatting breaking with commas in the list of directories,0
698,Rename and some cleanup when index changes,0.47542062,Major Changes,Move Enlistment Directory For Functional tests to ~/GVFS.FT,0
699,build: ignore functional tests that fail in CI only,0.5452412,1697: Fix functional tests to skip around ProjFS issue,Making max pipe length platform-dependant,0
700,Mac ProjFS Kext: Prevents creation of new files & dirs in offline roots,0.5125489,- Better errors around ProjFS installation issues.,,0
701,Update Readme,0.8163371,1750: Update Readme.md,,1
702,Merge pull request #461 Post index changed hook,0.575989,Pull Requests,Script to generate GVFS.Installer.Mac nuspec,0
703,Merge pull request #158 from sanoursa/log-improvements,0.51311624,Pull Requests,,0
704,Merge pull request #1283: Incremental commit graph,0.6960316,1647: Fix commit-graph expiration,,0
705,Format Fix,0.55293703,- Other bug fixes,"Instead of displaying the hydration percent for directories, the total number of hydrated files is now displayed, and that is how the list of directories is sorted. Unit and functional tests have been updated accordingly.",0
706,use GitPathSeparator in func test path helpers,0.4878641,This includes the Git Credential Manager Core v2.0.394.50751.,,0
707,Enable RebaseTests,0.47951877,1652: RepoRegistry: ignore non-existent repos,Apple's agvtool changes version number contained in Info.plist files during build. Info.plist is part of VFSForGit sources and the version changes created by the agvtool end up creating noise in git command outputs. This PR updates the build script to not trigger version update when running dev builds.,0
708,Update Git to remove ODB string check,0.90311736,1717 [HOTFIX] Update Git to remove ODB string check,,1
709,Upgrader: erase and re-acquire credentials on auth rejection,0.6931697,  - Now erases credentials on authentication failure,Added and updated documentation in HealthVerb and HealthCalculator,0
710,Mac ProjFS kext test: Use switch fall-through to make coverage happy,0.5683304,1697: Fix functional tests to skip around ProjFS issue,,0
711,Add logging when adding a modified path fails,0.6308222,Adds additional logging for folder and file placeholder creation.,,0
712,Remove SupportsHardlinkCreation and update SystemIORunner to PInvoke to native hard link API,0.44438922,1674: Config: disable status.submoduleSummary,"Functional tests are now implemented with EnlistmentPerFixture as their methodology. Tests cloning, placeholders, modified paths, the conversion from placeholders to modified paths, and filtering by directory. Only focuses on basic functionality, more tests to come when the final output design is decided on. Additional bugfix for non skip-worktree files in the health verb.",0
713,Add some error handling to dehydrate folders,0.53985596,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,Co-Authored-By: John Briggs jobriggs@microsoft.com,0
714,Fix large repo and mac build badges,0.5805121,Initial Mac upgrade functionality,"I don't know where this actually shows up as part of the generated installer, but it can't hurt to update this correctly.",0
715,diff: use csharp driver for better function headers in .cs files,0.41469535,- We have moved MIDX computation to a post-fetch thread. This should save blocking time per prefetch that downloads a packfile from the cache server.,"When we were standing up the Functional Tests on macOS, we saw failures in tests that involved UTF-8 strings on the Azure Pipelines hosted macOS agents which we could never repro locally. Now that they've moved to a newer image, these tests now pass on both our local dev machines, our dedicated functional test machines and the Azure Pipelines hosted machines. Let's enable the tests.",0
716,Moved fastfetch-specific extension methods,0.47489768,1730: Fix an issue with FastFetch when deleting files,Installer reliability,0
717,Remove EventSource NuGet packages,0.5286896,1668: ProductUPgradeTimer: remove unacceptable Environment.Exit(),,0
718,NuGetUpgrader: add details to error message,0.5818306,Update NuGet upgrader with new Microsoft package signing certificate,"The incremental commit-graph format is designed to speed up commit-graph writes, and especially to allow fast verification of the new data. At least, most of the time. Uses the new feature in microsoft/git#156. By only writing the new data to a small ""tip"" commit-graph file, we can write much less data and only verify the new tip file. Current settings include --size-multiple=4: This guarantees each level of the chain is half the size of the level below. This means the chain length will be limited by log_4(N) where N is the number of commits. This means ~6 levels is the maximum theoretical chain length with 4,000,000 commits. We are not currently using the --max-commits setting. With these settings, the git commit-graph verify command will be much faster on most new tip files. For example, a tip graph with 3,300 commits uses 183 KB of data and took 0.7 seconds to verify.",0
719,Update comment for CreateGitScript,0.45681855,Git: Includes incremental commit graph,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
720,Remove elses when checking for delete in HandleVnodeOperation,0.54704475,1689: Make delete docs more verbose,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
721,More macOS deletions,0.79698205,1703: Delete all macOS projects,"Now, that local cache path defaults to $HOME/.gvfsCache, there's no need to specify --local-cache-path explicitly.",1
722,Merge pull request #1097 from jamill/vs2019_build_instructions,0.532489,Pull Requests,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
723,Merge pull request #1597 from Move config & upgrader files to ProgramFiles,0.51691955,1730: Fix an issue with FastFetch when deleting files,"Includes status deserialziation bug fix from microsoft/git#157. Further, update the dehydrate verb to specifically use -uall when checking for local changes.",0
724,Update build scripts to handle new Profiling configuration,0.51546043,"A new config setting allows updating USN journals, which is needed when using BuildXL with VFS for Git.",Renamed the following classes:   GVFSEnlistmentHealthCalculator -> EnlistmentHealthCalculator   GVFSEnlistmentPathData -> EnlistmentPathData   GVFSEnlistmentHealthData -> EnlistmentHealthData Extracted EnlistmentPathData and EnlistmentHealthData to be standalone classes instead of inner classes of EnlistmentHealthCalculator. Created a GVFS.Common.HealthCalculator to house the 3 health classes,0
725,build: replace GVFS.SignFiles with GVFS.Payload project,0.6707804,Instructions for installing and using GVFS are available at https://github.com/Microsoft/GVFS,A test case was renamed to better specify the case being tested. Added a few more checks in test cases to test small missed behavior Used the test data to determine expected results instead of hardcoded values to increase readability Added comments in several test cases to increase the readability of checks Refactored the test fixture to use the builder design pattern to create GVFSEnlistmentPathData objects in a much more expressive way Slight change to GVFSEnlistmentHealthCalculator to allow arrays to be passed instead of only List objects,0
726,Merge pull request #1190 Add notarize shell script for notarizing the kext with Apple,0.38595605,Pull Requests,"simplify Git functional tests of case-sensitive file paths The FileShouldHaveCaseMatchingName() and related FolderShouldHaveCaseMatchingName() methods used in the GitCommands functional tests currently take two arguments, first a file path, and then a file name which must match case-sensitively against the last component of the path. On Linux, the use of at least one of these matching tests fails due to an incorrect usage: the caller, CaseOnlyRenameFileAndChangeBranches(), is passing a file path which differs in case from the case-sensitive name. This happens to work fine on Windows and Mac because the intended file is found regardless of case, but on Linux, it fails as the intended file can't be located. In order to clarify the function of these matching test methods, we change them to take a single, case-sensitive file path, and then check that the file or folder found at that path has the matching case in its parent directory's listing. This is effectively a no-op on Linux, but should retain the same functionality as before on other platforms.",0
727,Clarify a warning message that gets logged during prefetch if the mount process is not running,0.5653821,- Fixed a bug that would cause VFS for Git mount process to shut down if it receives out-of-order ProjFS callbacks.,"The FileShouldHaveCaseMatchingName() and related FolderShouldHaveCaseMatchingName() methods used in the GitCommands functional tests currently take two arguments, first a file path, and then a file name which must match case-sensitively against the last component of the path. On Linux, the use of at least one of these matching tests fails due to an incorrect usage: the caller, CaseOnlyRenameFileAndChangeBranches(), is passing a file path which differs in case from the case-sensitive name. This happens to work fine on Windows and Mac because the intended file is found regardless of case, but on Linux, it fails as the intended file can't be located. In order to clarify the function of these matching test methods, we change them to take a single, case-sensitive file path, and then check that the file found at that path has the matching case in its parent directory's listing. This is effectively a no-op on Linux, but should retain the same functionality as before on other platforms.",0
728,dehydrate: add test for execption when deleting empty directory,0.518278,Git commands are now allowed to delete an empty directory,,0
729,Merge pull request #1516 Allow sparse when dirty files in status are in sparse set,0.51982635,A case where FastFetch would not download a small number of files has been fixed.,"The health verb adds analytic functionality in the form of an outward facing tool which can equip consumers to better diagnose the performance issues they see in their VFS4G repositories. It has two command line arguments, -n which specifies the number of child directories to be displayed, and -d which specifies a target directory to run the health verb in. The default for -n is 5, and then default for -d is the current working directory. It also inherits a third command line argument from GVFSVerb.ForExistingEnlistment which is an optional path to the enlistment to run the command against in the case of being outside of it. The HealthVerb is what is run from the command line, and interacts with the enlistment to get the path data needed to compute the health of the enlistment. It uses the SQLite database to get placeholder data, the named pipe to get modified paths data, and the git index to get overall enlistment data. It packages this information into a GVFSEnlistmentPathData object which is passed to the GVFSEnlistmentHealthCalculator. The GVFSEnlistmentHealthCalculator takes in a GVFSEnlistmentPathData object and then analyzes it by building a local cone of the git tree and using that cone to compute health data (hydration) for the current directory as well as minimal information about the health of its child directories (to help when searching for the root cause of a problem). It then returns a GVFSEnlistmentHealthData object containing all of the corresponding data. The GVFSEnlistmentHealthCalculator is unit tested by the GVFSEnlistmentHealthTests unit test file. Squash merged from https://github.com/microsoft/VFSForGit/pull/1249",0
730,Mac EndpointSecurity prototype: Updated for macOS 10.15 beta 3 SDK,0.67031074,Initial Mac upgrade functionality,Includes status deserialziation bug fix from microsoft/git#157.,0
731,Merge pull request #430 from nickgra/objectArrays4NUnit,0.49507558,Pull Requests,Enable mac upgrade MVP,0
732,PR Feedback: Move common ACL code to helpers in WindowsFileSystem,0.49310303,1683: GVFS.SignFiles.csproj: include more DLLs for signing,use repository relative paths in DiffTreeResult.TargetPath,0
733,toggle path case-sensitivity in hydrate func tests,0.38391155,- No-op gvfs prefetch --hydrate performance is dramatically improved,Upgrader: NuGet Upgrader should use GitHub endpoint for notifications,0
734,Adjust ACLs for Upgrader's Tools directory,0.48833823,1685: minor path comparison fixup in ProductUpgrader,,0
735,move func test disk layout versions to GVFSHelpers,0.60647,Instructions for installing and using GVFS are available at https://github.com/Microsoft/GVFS,,0
736,Grammar,0.37730896,General Improvments,,0
737,Removed invalid exception,0.46453255,1652: RepoRegistry: ignore non-existent repos,"Fixes a bug where NuGet Upgrader no longer checks the GitHub endpoint to determine whether to show a notification that an upgrade is available. This did not affect the actual upgrade command, just whether to show a notification. (cherry picked from commit 9a6710335fd20acbb200ad0fbc3b6f8180925408)",0
738,Whoops Pascal totally uses single quotes 😊,0.21829292,1689: Make delete docs more verbose,"We construct absolute paths at point of use -- some cases use the Enlistment's WorkingDirectoryRoot, and others use the WorkingDirectoryBackingRoot.  (These are identical on Windows and Mac, but different on Linux.)",0
739,Merge pull request #1601 sparse: don't warn about dirty files inside the sparse set,0.5301034,A case where FastFetch would not download a small number of files has been fixed.,"use correct checkout thread maximum in FastFetch The --checkout-thread-count parameter to FastFetch, when set to 1, previously caused the program to fail because no executions of HandleAll*Operations() methods occurred. This was due to the Parallel.For() method being called with equal fromInclusive and toExclusive parameters, both set to 1, so the number of executions was zero. We adjust the fromInclusive parameter to zero so that the number of parallel executions will be this.maxParallel (i.e., toExclusive-fromInclusive == this.maxParallel-0), which is the value from CheckoutThreadCount, as set by the --checkout-thread-count command line option. Note that this failure condition could also be triggered when run in a single-core environment (e.g., a small VM), in which case CheckoutThreadCount, being constrained to a maximum of Environment.ProcessorCount, is always 1.",0
740,Merge pull request #632 from nickgra/versioncleanup,0.48498335,Pull Requests,"The --checkout-thread-count parameter to FastFetch, when set to 1, previously caused the program to fail because no executions of HandleAll*Operations() methods occurred. This was due to the Parallel.For() method being called with equal fromInclusive and toExclusive parameters, both set to 1, so the number of executions was zero. We adjust the fromInclusive parameter to zero so that the number of parallel executions will be this.maxParallel (i.e., toExclusive-fromInclusive = this.maxParallel-0), which is the value from CheckoutThreadCount, as set by the --checkout-thread-count command line option. Note that this failure condition could also be triggered when run in a single-core environment (e.g., a small VM), in which case CheckoutThreadCount, being constrained to a maximum of Environment.ProcessorCount, is always 1.",0
741,add case-sensitive filesystem DiffHelperTests test,0.46154457,1697: Fix functional tests to skip around ProjFS issue,"Every time the post-fetch step runs, we write a new multi-pack-index. This is important to catch any leftover packs that were added by gvfs prefetch --files or by the loose objects step. However, for a normal git fetch that calls gvfs prefetch --commits, there are likely no new packs. This previously triggered a post-fetch step anyway, and now it will not make that request if there are no new packs. This can save about one minute of CPU time per ""trivial"" prefetch.",0
742,Merge pull request #1657 Add Readme.md for the virtualization states of a file,0.49518874,1750: Update Readme.md,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
743,Get the changes in Memory.hpp under unit tests,0.5115261,- Improved the memory usage during MIDX computation.," No change in behavior for fresh install. Upgrade install - avoid un-necessary unloading of launchd agent   plist files in preinstall script only to reload them later in   postinstall. Use launchctl kickstart -k instead in postinstall.   It restarts the agent without needing to unload/reload its plist   file. Uninstaller - removed usage of ""-w"" option from launchctl ""unload""   command.  ""-w"" disables the service after unload which is   undesirable. Uninstaller - fixed a logic error, where the agent plists were   getting un-installed only if they were un-loaded as well.",0
744,Mac EndpointSecurity MirrorProvider prototype: fixes crawler detection,0.54091656,Initial Mac platform native notifications,Remove requirement to run --no-renames,0
745,always lowercase SHA1 filenames for Linux,0.32149887,1678: BuildGVFSForWindows.bat: use nuget on PATH when possible,ProductUpgrader: platform specific upgrade directories,0
746,Add a single-step Initialize method,0.47820973,1666: Docs: start basic template,,0
747,use backing root in mount core hooks func test,0.4243346,1697: Fix functional tests to skip around ProjFS issue,,0
748,Increase maximum number of roots to 128,0.32991523,1669: Docs: more troubleshooting and FAQs,Different platform have different structures for where the upgrade application and logs need to go. This change introduces the architecture for making this platform specific. Description of different components involved in upgrade and how they interact with different platforms.  Component                | description -----------------------  | ----------- Upgrader Application     | Temporary copy of upgrader application upgrade main application gvfs.config              | config file for upgrade related settings Upgrade Package Download | Location to download upgrade package Upgrader Package Unpack  | Location to unpack the downloaded update package Upgrader Logs            | Directory to write upgrade logs to Upgrade Available File   | File indicating whether an upgrade is available Component                | data scope                      | Windows                                                     | Mac ------------------------ | ------------------------------- | ----------------------------------------------------------- | ------------------------------------------------------------------------ Upgrader Application     | Protected                       | ProgramData\GVFS\GVFS.Upgrade\Tools                         | /usr/local/vfsforgit_upgrader/Tools gvfs.config              | Protected                       | ProgramData\GVFS\gvfs.config                                | /usr/local/vfsforgit/gvfs.config Upgrade Package Download | Protected                       | ProgramData\GVFS\GVFS.Upgrade\Download                      | /usr/local/vfsforgit_upgrader/Download Upgrader Package Unpack  | Protected                       | ProgramData\GVFS\GVFS.Upgrade\Download\InstallerTemp        | /usr/local/vfsforgit_upgrader/Download/InstallerTemp Upgrader Logs            | Writable by user account        | ProgramData\GVFS\GVFS.Upgrade\UpgraderLogs                  | ~/Library/Application Support/GVFS/GVFS.Upgrade/UpgraderLogs Upgrade Available File   | Written by GVFS.Service process | ProgramData\GVFS\GVFS.Upgrade\Tools\HighestAvailableVersion | ~/Library/Application Support/GVFS/GVFS.Upgrade/HighestAvailableVersion,0
749,PhysicalFileSystem: teach ability to copy a directory,0.5413519,Adds additional logging for folder and file placeholder creation.,"This is the third incremental PR to enable platform native notifications on the Mac. In this PR, GVFS.Service sends auto-mount notifications to VFS For Git.app for display to user. Service displays notification for auto-mount failures only - when it fails to auto-mount a repository that has been registered for auto-mount. Details - New VFSForGitNotification class. It supports 3 different notifications   - AutomountStart, MountSuccess, MountFailure. It will not display any   other notification. - VFSForGitNotification defines the title & message body for each of the   supported notification. It is not possible for GVFS.Service or another   client to display random text. - MessageListener class creates a socket and waits for notification   requests from client. - MessageParser class to parse the incoming JSON formatted message   text. - New UT for VFSForGitNotification & MessageParser classes. - GVFS.Service does not wait for a reply from VFS For Git.app for the   notification requests that it sends. - VFS For Git.app get automatically launched after installation. - VFS For Git.app has the same app version as gvfs version. - Updated MacServiceTests to not use INotificationHandler to verify   Automount start. Now Service posts notification only on auto-mount   failures. More Info - https://github.com/microsoft/VFSForGit/pull/1202",0
750,Mac kext testing: Renames SetPath to SetAndRegisterPath in mock vnode,0.41433784,"A new config setting allows updating USN journals, which is needed when using BuildXL with VFS for Git.","The config file location currently exists in the same directory as the GVFS service data directory. On Mac, the GVFS Service directory is per user, and not per machine. Even if the service is per user on Mac, we still would like the config to be per machine. This change enables the GVFS config file to exist at a location independent of the GVFS Service data directory. On Windows, the location will not change, but on macOS, it will now exist in the GVFS binary location.",0
751,Update Git to v2.23.0 [PR Build],0.91597426,1751: Update Git to v2.33.0,"As the PackfileMaintenanceStep is now running in production, I noticed a user's repo was growing significantly between runs. It turns out this user had many loose objects and the packs created by the LooseObjectsStep were large. Add extra object size checks and pack-size checks to the LooseObjectsStep so we can report the total effect on the object cache's contents.",1
752,Add client to communicate with org info server,0.39981705,  - Now scopes credential.useHttpPath to just dev.azure.com hostname,"Today, we noticed a performance regression from 1.0.19074.2 to 1.0.19130.1 (M150). In that release, we changed the way we allocate and refresh LibGit2Repo objects. In order to allow packfile deletions, we need to drop the handles that LibGit2 keeps open during the duration of the LibGit2Repo. The change was to share one repo object and to dispose of it after 15 minutes of inactivity. However, that doesn't take into account the startup time required to initialize the data. This can be a lot worse if the user has thousands of pack-files. To fix this, change the model. With this change, the PackfileMaintenanceStep will request that the LibGit2Repos are closed before performing the expire command, and then will reinitialize the LibGit2 repo right after. This will keep the ""warmup"" time as part of the initial mount or as the background operation. If the read-object hook or a file hydration comes in while the expire command is running, a LibGit2 repo will be initialized and it may cause some .idx files to stick around until the next run. This was already the case, but then the warmup would happen during those operations. This will happen at most once a day.   How did you find this was the issue?   @jrbriggs gets all the credit for realizing that the performance difference between versions only happened in calls where one used the read-object hook. If the read-object hook wasn't called, then there was no difference in the performance numbers. But there was a significant slowdown if the read-object hook was called, and could even be several seconds for a single object. From that, I started spelunking the diff and looked specifically at what changed around the logic in InProcessMount for downloading an object. There were two candidates: i. The interaction with the Git credential manager had a lot of changes. I checked with @jamill about his expectations of performance numbers there, even if it is misbehaving. He and @jeschu1 thought there was no reason for more than 100ms of delay in any of that code, and other side-effects would be very visible if it required more server connections. This led me to focus hard on item (ii). ii. The LibGit2RepoInvoker was updated in this release to no longer create a large pool of repos at mount time and only dispose of them at process end. We had shipped this independently of the packfile maintenance for this very reason of being safe, but I had anticipated any problems would be in the multi-threaded access of a single libgit2 repo. The multi-threaded access has not been a problem, as far as I can tell.   How did you test the performance of this change?   To measure this, I made a change like in this commit to use a Stopwatch around the two operations. This would easily point to which of the two options above were likely the cause. After installing that version locally and running git grep foo to trigger loose object downloads, I saw the timing for the first read-object hook had 2.5 seconds in the TryGetIsBlob() method, and all subsequent calls were ~2 milliseconds. This was on my local repo where I had inflated the pack dir to ~800 packs. If a user has 7,000+ then libgit2 will take even longer to prep the packfile data structures. This performance testing also led me to double-check this PR and notice that the first run was still slow. The trick was to add the commit ""LibGit2RepoInvoker: Test a real SHA1 when initializing"" because using an empty SHA-1 seems to short-cut somewhere in the logic and not actually load the object store data in the LibGit2Repo. With that change, I see all of my TryGetIsBlob() calls taking 1-2 milliseconds again, even the first one after a PackfileMaintenanceStep. Resolves #1277",0
753,Merge pull request #614 from jamill/mac_build_tweaks,0.539336,Pull Requests,"If we do not unmount, then the packs do not get deleted and we skip writing the commit-graph due to no new packs, failing the test. Signed-off-by: Derrick Stolee dstolee@microsoft.com",0
754,Merge pull request #510 from jeschu1/telemetryrepair,0.56561065,Pull Requests,"Also, unmount GVFS when running tests, as the mount process has libgit2 repos open. Signed-off-by: Derrick Stolee dstolee@microsoft.com",0
755,Merge pull request #1682: Update Git to v2.28.0,0.69251096,1663: Update Git to v2.27.0,"In order to force the LibGit2Repo to load the object store information upon initialization, it does not suffice to use the empty SHA, as that is short-cut somewhere and does not acheive the goals we want. Signed-off-by: Derrick Stolee dstolee@microsoft.com",0
756,PR Feeback: Minor cleanup items before merging to master,0.5791576,Improves the rate of .gvfsCache cleanup.,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
757,use ShouldContain in sparse directory list tests,0.3959062,* git multi-pack-index verify would run slowly if the objects directory had more than 2048 packfiles.,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
758,Package restoration has been broken for a while since in,0.5772785,- Multiple mount process reliability bugs have been squashed.,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
759,Mac EndpointSecurity prototype: Moves hydration off-thread,0.5145054,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,"To fix a performance regression with the new LibGit2RepoInvoker, we should now always load the LibGit2Repo from the start, and keep it around until the PackfileMaintenanceStep runs. At that time, we can reload the repo. Signed-off-by: Derrick Stolee dstolee@microsoft.com",0
760,Fix issue building GVFS inside of Visual Studio,0.6923857,Instructions for installing and using GVFS are available at https://github.com/Microsoft/GVFS,Mac ProjFS: Only hydrate/expand when deleting due to rename,0
761,Merge pull request #1626: Update Git to v2.25.0,0.718204,1663: Update Git to v2.27.0,,1
762,Merge pull request #1285 from Installer reliability,0.5782778,Other bug fixes for reliability,,0
763,Merge pull request #1753 from ldennington/upgrade-winget,0.59415895,1738: Bumping version of update-winget action,Upgrader: add command install action,0
764,Mac kext: Fixes incorrect inode handling in root search (fixes vnode_put panic),0.42818153,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,[master] POSIX: Switch to Process.Start for launching GVFS.Mount,0
765,GVFSUpgrade verb should delete upgrade marker,0.68522483,The gvfs upgrade command is deprecated. Future upgrades will require using winget or installing directly from the releases page.,,0
766,Merge pull request #962 Fix GVFS.FunctionalTests.Windows so that they can be run from the IDE,0.5616108,Instructions for installing and using GVFS are available at https://github.com/Microsoft/GVFS,,0
767,Fix some placeholder tests that were broken,0.60198677,Other bug fixes for reliability, Launch GVFS.Mount with stdin/out/err redirected Close stdin/out/err in GVFS.Mount and redirect to /dev/null  With these changes the functional test hang reported in #1205 has not be reproducible,0
768,Fix mixing $ to make string interpolated,0.31132796,1674: Config: disable status.submoduleSummary,replacementToken method should be PascalCase,0
769,Update credential methods on GitProcess,0.7923517,This includes the Git Credential Manager Core v2.0.394.50751.,,1
770,Move TreatWarningsAsErrors setting to GVFS.cs.props,0.6168394,- VFS for Git will performance maintenance in the background. This release will pack loose objects in .gvfsCache into packfiles. ,"When running install actions, we previously only supported starting an application or document contained in the installer package. You might want to run instead a command that is provided by the host operating system / environment. For example, on macOS you might want to run bash or the ""installer"" binary directly.",0
771,Merge pull request #1096 from jamill/submodule_tweak,0.57597744,1674: Config: disable status.submoduleSummary,Includes the following changes to enable cross platform functionality required by the upgrade functionality: Platform specific blocking process lists Platform specific ability to locate programs Implement IsServiceInstalledAndRunning for Mac platform,0
772,Merge pull request #1202 from Platform native notifications PR_3,0.49908203,Initial Mac platform native notifications,Log Folder Placeholders Removed,0
773,List blocking processes with pid,0.38718998,- Multiple mount process reliability bugs have been squashed.,"Updates to v2.22.0.vfs.1 as discussed in  microsoft/git#140. Includes these changes in microsoft/git:  microsoft/git#133 microsoft/git#139 microsoft/git#141 microsoft/git#143  Also, the post-indexchanged hook was renamed to post-index-change as it was upstreamed.",0
774,Add unit tests for LibGit2RepoPool,0.44340378,"Other bug fixes, engineering improvements, and test reliability fixes.",,0
775,Update sparse verb tests,0.44986618,1747: UpgradeVerb: write deprecation notice,Determine the services that are installed and running on the mac platform via the launchctl program.,0
776,When using --set add folders back to directories for checking git status,0.6819643,- git status now supports an option to avoid doing its ahead/behind calculations. This allows the user to decide if they want to skip that overhead if all they care about is the status of the working directory.,"Different platforms have different requirements for the list of processes that block installation. The POSIX platforms also remove ""gvfs"" from the list of blocked processes, as they can run upgrade while the 'gvfs upgrade' command is running. We might want to come back and restrict this to only the gvfs upgrade command (or only if the running command is a parent process) in a future change.",0
777,Merge pull request #344 Mac: Update MoveAndOverwriteFile to use native API,0.5076352,Pull Requests,"Currently, this is hardcoded to run the ""where"" program, which is not appropriate on non-Windows platforms. Add a platform abstraction so different platforms can run different programs.",0
778,Require an auth instance to be initialized before it can be used,0.39794773,1666: Docs: start basic template,Add logging to clone/mount paths,0
779,Explicitly set result for access checks and add profiling,0.50170654,- Disable commit-graph verify for performance concerns,,0
780,Make Windows scripts init the environment,0.43034855,1679: BuildGVFSForWindows.bat: use nuget on PATH,,0
781,reintroduce MacPlatform.InstallerExtension,0.57528937,1744: Overhaul build and project systems and drop Mac/POSIX code,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
782,dependencies: upgrade SharpZipLib,0.5547942,Update components included with internal distribution,,0
783,Merge pull request #1676: Update Git to v2.27.0.vfs.1.0,0.7342459,1677: Update Git to v2.27.0.vfs.1.0,"Added component-plist file for ""VFS For Git"" package. This is an xml file that contains specifications for how installer should handle bundles in VFSForGit. BundleIsRelocatable is set to true, for ""VFS For Git.app"". This stops the installer from searching the disc for a copy of the app, which it then upgrades. Now the installer will always fresh-install (or upgrade) ""/Library/Application\ Supp ort/VFS For Git/VFS For Git.app"" only. Also updated CreateInstaller script to use the component-plist file.",1
784,Call AllowIndexToBeParsed in the TryReleaseExternalLock method,0.42766422,Pull Requests,,0
785,Use a consistent date/time format for logging,0.5453898,- Log files now include UTC offset.,Mac: Bash Functional Test Hang,0
786,CloneVerb: Force download of commit and trees on failed initial checkout,0.52665937,- Fixes a copy failure when copying the upgrade tool to its temporary location.,,0
787,MacInstaller: Include script to generate GVFS.Installer.Mac nuspec,0.62430346,1679: BuildGVFSForWindows.bat: use nuget on PATH,,0
788,Set /Zc:__cplusplus on Windows so that __cplusplus reports the correct value,0.34027803,1710: Add new Microsoft certificate thumbprint, Quote the directory being deleted,0
789,UpgradeVerb cleanups for release,0.6791352,Improves the rate of .gvfsCache cleanup.,"Display about box with VFSForGit and Git version info. - Fetch Version info by running gvfs & git commands - Added UT (updated tests cases added required mocks) - Renamed GVFSTask to ProductInfoFetcher - New ProcessHelper wrapper class around NSTask - Separate xcodebuild test & build steps for native app.   This helps prevent XCTest frameworks from getting   injected into deployment binaries - Use nullability decorators - VFSForGit classes are prefixed with ""VFS"". - Use default Xcode code indentations",0
790,Rename Placeholders to PlaceholdersTable,0.44535753,Moves placeholder database into SQLite for better performance.,Update heartbeats to contain folder placeholder and file hydration metadata,0
791,build: migrate GVFS project,0.65031815,- We have improved how GVFS handles enlistments in junctions and mapped to a drive letter.,Includes a change to the post-indexchanged hook (now the post-index-change hook). Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
792,Merge pull request #1046 Add category for extra tests to run in PRs,0.50011027,Pull Requests,"This change utilises the KAUTH_FILEOP_WILL_RENAME event which was introduced with Mojave/10.14 to determine if a KAUTH_VNODE_DELETE authorisation check is due to a rename() operation. In this case, the file or directory genuinely needs hydrating, otherwise hydration can be skipped. This change also adds unit tests for the new rename operation tracking code, and adapts existing unit tests so hydration is not expected when a KAUTH_VNODE_DELETE check occurs outside of a rename() operation. Note that this change means the behaviour on macOS 10.13 and earlier versus 10.14 and later subtly diverges.",0
793,Merge pull request #1675: PreCommandHook: don't lock pack-objects,0.7799641,1675: PreCommandHook: don't lock pack-objects,Replaces a use of the old mock vnode creation function with the new tree and mountpoint-based one.,1
794,Update MirrorProvider,0.50994015,Major Updates,"This adds an enum scoped in a namespace to be used instead of magic numbers in version checks. The reasons for choosing a classic enum in a namespace are:  * The namespace gives us explicit scoping rather than polluting the root namespace.  * The using a classic enum vs a modern C++ enum class means the values are implicitly convertible to integers, which is how we actually use them.",0
795,Refresh the parents of pruned directories,0.47425532,Adds additional logging for folder and file placeholder creation.,"This change moves the vnode eligibility check (file system type, vnode type) from ShouldHandleVnodeOpEvent to HandleVnodeOperation to avoid repeated calls. A unit test has been added to provide test coverage for the new code branch.",0
796,Update MockFileSystemVirtualizer to implement abstract methods,0.49964538,1734: Adding winget workflow,Upgrader - platform specific directory creation,0
797,Update Git to v2.20.1.vfs.1.1,0.9323626,1736: Update Git to v2.31.1.vfs.0.3,,1
798,Mac kext testing: Adds test case for deeply nested file in a repo,0.4078648,"* Added a new mutli-pack index file to git, allowing it to become much more efficient at finding an object when there are a large number of local packfiles","Add new helper to 'swap' the ConcurrentDictionary, move away from managing EventLevel by passing a ref to passing an out bool. Rename methods for clarity that were brought up in code review",0
799,Mac: Skip events when file attributes cannot be read,0.48009926,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,,0
800,Merge pull request #1638 build: fix the build error related to dotnet core version,0.5309886,1741: Fix winget tag specification,,0
801,build: update FTs to run always against PATH,0.5484652,1678: BuildGVFSForWindows.bat: use nuget on PATH when possible,,0
802,Additional changes to functional test documentation,0.56928647,We have new documentation including a new troubleshooting guide!,"Instead of querying interop services at runtime (with a dll that is not included with the windows install), determine this at compile time using the under construction flags.",0
803,ProductUpgrader: normalize line endings,0.5336162,1685: minor path comparison fixup in ProductUpgrader,Mac: Add FileSystemType,0
804,PostFetchJob: stop writing multi-pack-index,0.5121458,1675: PreCommandHook: don't lock pack-objects,Mac kext: Fix for potential vnode_put() race in VirtualizationRoot_RegisterProviderForPath,0
805,Update git to include midx verify performance fix,0.61363375,- Updated Git for a security issue.,NuGetFeed: only encrypt in memory credential  on supported platforms,0
806,build: migrate GVFS.Installer.Windows project,0.68046236,Instructions for installing and using GVFS are available at https://github.com/Microsoft/GVFS,"The NuGet Client API has flags to control whether a password is stored in clear text or not. This flag controls: 1) Whether the password is stored in clear text when persisted to a   config file on disk. 2) Whether the password is stored encrypted in memory Encrypting the password is only supported on Windows (and Mono) platforms, and not on netcore platfroms. As VFS for Git does not actually update any configuration files, the flag only controls how the password is stored in memory. For netcore platforms, do not set this flag. As VFS for Git does not persist this data to disk, the tradeoff is whether the process is encrypting the password in memory or not. VFS for Git itself is working with the plain text password, so this is not broading the risk in this aspect.",0
807,PR Feedback and fix compilation issues,0.5611068,- Other bug fixes,,0
808,Service Mac repo-registry & IPC,0.52179366,Initial Mac upgrade functionality,,0
809,Address PR feedback and clean up error handling.,0.5161264,Other bug fixes for reliability,Initial implementation of additional fields on the FileSystemCallbacks heartbeat to cover folder placeholder creation and file hydration. Includes plumbing changes to route the image path name through for folder placeholders and file hydration.,0
810,ProjFSKext: indicate support for upgrade,0.72208357,- Improved reliability of how the installer upgrades from non-inboxed to inboxed ProjFS.,Remove Placeholder after calling PreDelete,1
811,"Move expected path from ""GVFS"" to ""VFS for Git""",0.70799255,"- In the future, VFS for Git will automatically upgrade as new bits become available in the configured ring, eliminating the need to run gvfs upgrade to ",Upgrade to Microsoft.Windows.ProjFS 1.1.19156.1,1
812,Merge pull request #1036 from jamill/normalize_line_endings,0.51220787,Pull Requests,,0
813,Mac kext: Moves the perf tracing histogram log2 to a helper function,0.42220294,1734: Adding winget workflow,"Previously, vnode_mount() was called on a vnode that was not guaranteed to have a strong reference on it after the lock was dropped. This patch changes InsertVirtualizationRoot_Locked so it calls vnode_get() on the vnode in the case of an active provider, and VirtualizationRoot_RegisterProviderForPath() calls vnode_put() after disabling the auth cache. Due to the change, InsertVirtualizationRoot_Locked() now also pairs nicely with ActiveProvider_Disconnect(), which tidies up some unit tests a little.",0
814,More Enlistment Directory For Functional tests to ~/GVFS.FT,0.60524476,- We have improved how GVFS handles enlistments in junctions and mapped to a drive letter.,,0
815,Merge pull request #829: Improved MaintanceStep Handling,0.6132831,Pull Requests,Move ShouldHandleFileOpEvent unit tests into their own class,0
816,MountMergesLocalPrePostHooksConfig: add more logging,0.511183,See the full change log,,0
817,Merge pull request #1050: Turn on PackFileMaintenanceStep,0.5294991,Pull Requests,Additionally: - Reorder PrjFSKextTests files so they're in alphabetical order - Replace the usage of org_vfsforgit_PrjFSProviderUserClient with PrjFSProviderUserClient - Make PrjFSProviderUserClient userClient an instance variable - Update XCTAssertTrue to XCAssertEqual where appropriate,0
818,Set feed url based on upgrade ring during installer,0.5285502,- Upgrade supports NuGet feeds as a distribution source.,Mac: Support Hardlinks,0
819,Allow the prefetch tests to skip prefetch during clone,0.51451564,1697: Fix functional tests to skip around ProjFS issue,,0
820,Merge pull request #451 from nickgra/fileopAttributesPanic,0.475689,Pull Requests,Handle KAUTH_FILEOP_CLOSE_MODIFIED as a bit field,0
821,Mac ProjFS kext: Moves fsid/inode query out of ShouldHandleFileOpEvent,0.52898943,1697: Fix functional tests to skip around ProjFS issue,Upgrader: copy entire application directory,0
822,"Merge pull request #886 Mac kext: Don't try to message offline providers, fixes missing root assert",0.43556428,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,,0
823,SparseTests: add more prune tests,0.40445134,General Improvments," PreDelete will perform a convert to Full This requires we hydrate the file first, hence the call order changes in KauthHandler",0
824,Update functional tests to create marker file in correct location,0.4439168,1685: minor path comparison fixup in ProductUpgrader,"When upgrading VFS for Git via the built-in upgrade logic, the upgrade verb will copy the upgrader application to a temporary directory, and run the upgrade app from the temporary directory. The main reason for this is so that the upgrade application can update the original application without open file handles getting in the way (and preventing the deletion of the application that is being updated). The upgrade verb currently has a hard coded list of dependencies (files) required for the upgrader application to run. This can be fragile as we need to keep this list in sync with the actual dependencies, across multiple platforms. This can easily break if the dependencies change, and we update the list of files included with the installer, but not with the upgrader application. A specific occurrence of this happened in #1144. Instead, just copy over the whole VFS for Git application directory when creating a temporary copy of the upgrader application to run. We might copy over a few additional files, but this should not cause any noticeable downsides.",0
825,Merge pull request #1736: Update Git to v2.31.1.vfs.0.3,0.71349525,1677: Update Git to v2.27.0.vfs.1.0,Teach PhysicalFileSystem the ability to copy an entire directory to a destination path.,1
826,PR Feedback: Eliminate masking and simplify FileTypeAndMode,0.47736,1744: Overhaul build and project systems and drop Mac/POSIX code,Mac kext testing: assert() integration,0
827,Use argument to determine if prjflt should be removed,0.4362098,1689: Make delete docs more verbose,Start using SQLite to track placeholders,0
828,Add FileFlaggedInRoot Tests,0.575089,1697: Fix functional tests to skip around ProjFS issue,,0
829,Merge pull request #1498: Don't allow Executables to be Placeholder,0.5681927,Pull Requests,,0
830,Update readme to include additional build badges,0.5376905,1750: Update Readme.md,,0
831,Update Placeholders.Contains to check for null as well as DBNull.Value,0.6288053,- Fixed an issue where some concurrent updates to the placeholder database would fail,,0
832,Merge pull request #1006 Add additional diagnostics to GitStatusAfterRenameFileIntoRepo functional test,0.5306151,1717 [HOTFIX] Update Git to remove ODB string check,,0
833,Addressing code review comments regarding argument order and passing by name,0.34826612,1747: UpgradeVerb: write deprecation notice,,0
834,Add Version to Heartbeat,0.37776098,1750: Update Readme.md,,0
835,Merge pull request #1559: Update Git to vfs-2.24.0,0.701942,1712: git-vfs: update to Git 2.30.0,,1
836,Ignore .vscode directory,0.4574529,- A couple of fixes for using VS Code on top of VFS for Git.,,0
837,Merge pull request #368 Mac: Handle projection changes where git deletes folders that are still in the projection,0.5558169,"- Upgraded to Git 2.19. This version brings with it improvements to unpack_trees to speed up checkout, merge, reset, and rebase.",,0
838,"Notify provider of new ancestor folders, enable more tests, support git creating folder",0.5788962,Includes Git v2.27.0,,0
839,Merge pull request #1485: Mark panic strings as 'public' so they appear in Console,0.43686664,Pull Requests,,0
840,Merge pull request #1508: diff: use csharp driver for better function headers in .cs files,0.4573523,- We have moved MIDX computation to a post-fetch thread. This should save blocking time per prefetch that downloads a packfile from the cache server.,"This test deletes an existing .idx file, and then checks that VFS for Git calls git index-pack when scanning the pack-files. When we take Git 2.22.0, this test starts to fail. The fix is to delete the multi-pack-index before rebuilding the .idx. This is a reasonable expectation because we won't have a pack covered by the multi-pack-index without having the corresponding .idx file. The reason this broke with Git 2.22.0 is a bit subtle: When running git index-pack, Git looks for duplicate objects in order to check for SHA-1 collisions. When the multi-pack-index includes the objects in the pack, Git sees what it thinks are the same object ids and goes to load the content to verify they are equal. In Git 2.22.0, we solved the ""many packs"" problem by adding the pack-files from the multi-pack-index to the packed_git linked list. Adding to this list will fail if there is no corresponding .idx file. (The multi-pack-index prevents any reads into this .idx file, but existence is required.) This means that the content lookup fails and Git complains with ""fatal: cannot read existing object info"" This will unblock taking Git 2.22.0 after the release. See microsoft/git#140 for details on that update.",0
841,align CmdRunner access-denied messages with others,0.48582596,1674: Config: disable status.submoduleSummary,,0
842,Merge pull request #1206: Really really fix LooseObjectStepTests by unmounting,0.5382216,1674: Config: disable status.submoduleSummary,The test testFindVnodeRootFromDiskAndUpdateCache_InvalidUpdateCacheBehaviorValue deliberately goes down a code path in the kext which triggers a failed assertion. This change causes the test to register the assertion failure as expected so that the test itself does not fail.,0
843,Merge pull request #138 from sanoursa/readme-rename,0.5086692,Pull Requests,"Since enabling kext assert()s in unit test runs, a number of tests have been falling afoul of failed assertions when calling VirtualizationRoots_Cleanup() because connected mock providers were not cleanly disconnected. This change fixes those tests so they tidy up after themselves properly.",0
844,Mac ProjFS Kext: Denies write access to placeholder files in offline root,0.5149679,- Fixed a bug that would cause VFS for Git mount process to shut down if it receives out-of-order ProjFS callbacks.,"Two HandleVnodeOperationTests used ProviderMessageMock_SetCleanupRootsAfterRequest() to force removal of the (mock) provider. This caused the mock version of ProviderMessaging_TrySendRequestAndWaitForResponse() to call VirtualizationRoots_Cleanup(). This was problematic for 2 reasons:  VirtualizationRoots_Cleanup() does not just disconnect the provider, it wipes the entire root array, making any handles invalid. This never actually happens in the real kext. Any such sledgehammer approach has actually been prevented by assertions in the kext code. Now that those kick in during unit testing, this made the tests in question fail in multiple ways.  The fix is therefore to replace the call to VirtualizationRoots_Cleanup() with the more appropriate ActiveProvider_Disconnect(). Rather than special-casing this, ProviderMessageMock_SetCleanupRootsAfterRequest() has been replaced with ProviderMessageMock_SetRequestSideEffect() which allows setting a lambda expression to run in the mock version of ProviderMessaging_TrySendRequestAndWaitForResponse(). In the tests in question, it is the lambda that calls ActiveProvider_Disconnect().",0
845,Just test for the agent flag being set to something,0.4242101,  - Now approves credentials on authentication success,"Previously, assert() has been disabled (MACH_ASSERT macro not defined) in the testable kext build, so no failing assertions in the kext have been caught during unit testing. This change:  Enables assertions in the testable kext build. Implements the back-end Assert() and panic() functions used by the assert() and assertf() macros, respectively. These back-end functions call into XCTest's test failure reporting mechanism, so failed kext assertions in unit tests are now reported as regular unit test failures. To facilitate this, the current test case needs to be known outside the test's Objective-C class, so we track that in thread-local storage by subclassing XCTestCase and deriving all tests from the new class, and perform current test registration/deregistration during setUp/tearDown. Some unit tests deliberately cause failed assertions, so a mechanism for ignoring a specific number of them in a test is provided. Not having full coverage in panic/Assert/etc. is a good thing, so those have been added to the 100% test coverage exceptions",0
846,Move config & upgrader files to ProgramFiles (3),0.5704751,1746: Delete custom upgrader,"Mac installer relies on GVFS.Service to do the auto-mount of registered repos. When GVFS.Service gets launched (post installation) it (Service) calls gvfs mount in the background (without user interaction). In this case if the kext is not loaded, then mount will fail. Updating the installer to load kext would help in scenario. Also updated postflight script to log output of kextstat command that is used to determine if macOS autoloaded kext or not. A non empty output means kext got autoloaded or there was an error running kextstat. Fixes #1210",0
847,Add PreDelete handler in BG operation to handle Mac,0.4622464,Initial Mac upgrade functionality,"These tests have been super-flaky and frustrating. After weakening the tests, but still finding places where the loose object count is not deterministic, I thought it was worth starting over with the full list of exact-count assertions. To avoid loose objects being added or dropped from the counts in unexpected ways, now we unmount the repo before counting the objects. I ran the functional tests 20 times on this PR and only one failure, but it was in the GVFS.FunctionalTests.Tests.EnlistmentPerFixture.GitReadAndGitLockTests.GitAliasNamedAfterKnownCommandAcquiresLock() test, unrelated to this change. Replaces #1162, #1198, #1116. Fixes #1201.",0
848,Add StyleCop Analyzer,0.4431872,New features:,"This test deletes an existing .idx file, and then checks that VFS for Git calls git index-pack when scanning the pack-files. When we take Git 2.22.0, this test starts to fail. The fix is to delete the multi-pack-index before rebuilding the .idx. This is a reasonable expectation because we won't have a pack covered by the multi-pack-index without having the corresponding .idx file. The reason this broke with Git 2.22.0 is a bit subtle: When running git index-pack, Git looks for duplicate objects in order to check for SHA-1 collisions. When the multi-pack-index includes the objects in the pack, Git sees what it thinks are the same object ids and goes to load the content to verify they are equal. In Git 2.22.0, we solved the ""many packs"" problem by adding the pack-files from the multi-pack-index to the packed_git linked list. Adding to this list will fail if there is no corresponding .idx file. (The multi-pack-index prevents any reads into this .idx file, but existence is required.) Since the .idx file is not there, that add fails. This means that the content lookup fails and Git complains with ""fatal: cannot read existing object info"" Signed-off-by: Derrick Stolee dstolee@microsoft.com",0
849,Update output for status when using folders option,0.51950073,"- VFS for Git will pre-calculate status in the background in response to changes in the workdir, to improve the speed of user-initiated statuses."," Enhance functional tests Send """" for paths outside virtualization roots If we can't get a RelativePath, log an error and skip the message Ensure proper handling",0
850,Remove some unused code,0.5020713,1668: ProductUPgradeTimer: remove unacceptable Environment.Exit(),Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
851,remove Mac InstallerExtension,0.73974824,1703: Delete all macOS projects,This reverts commit 859d81fa896e8bc20effe3fe619586c2bcd3ad7c.,1
852,Address more PR feedback for consistency. Break apart PlatformLoader to,0.51681495,"- Post-index-change hook will help ensure consistency between Git and VFS for Git's reckoning of the state of the repository, and eliminate a class of bugs.",This reverts commit e40a21f51f31ff154d0a805f7ff1ab18133e9f31.,0
853,Merge pull request #1068: Upgrade to new ProjFS versions,0.60529506,- Better errors around ProjFS installation issues.,This reverts commit 90aaf2fa5e28855355d21861d04e2b0e631a7d96.,0
854,use common folder test method in dehydrate tests,0.38705418,- No-op gvfs prefetch --hydrate performance is dramatically improved,,0
855,NuGetUpgrader: override mock NuGetFeed SetCredentials,0.63959605,1732: Use one NuGet feed,,0
856,Merge pull request #937 from pmj/mac-kext-static-analysis-fixes,0.4181623,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,,0
857,Merge pull request #418 Mac: Do not panic when file attributes cannot be read during vnode callback,0.5225302,Pull Requests,"When making the tests more flexible in #1162, I missed one instance. To be sure I didn't miss any more, I removed all use of the exact loose object count.",0
858,Update Git to include LFS security release,0.9525696,1714: Update Git to include LFS security release,,1
859,MockLocakGVFSConfig: move to non-windows mocking project,0.452604,1734: Adding winget workflow,,0
860,Set of improvements to health verb,0.5343254,General improvements:,,0
861,NuGetUpgrader: remove feedUrlForCredentials,0.6850641,1732: Use one NuGet feed,,0
862,Merge pull request #1689 from kyle-rader/user/kyrader/delete-docs,0.4494682,Pull Requests,,0
863,using GVFS.Platform.POSIX,0.69723034,Instructions for installing and using GVFS are available at https://github.com/Microsoft/GVFS,,0
864,Fix broken tests for cleaning modified paths,0.57491016,"Other bug fixes, engineering improvements, and test reliability fixes.",,0
865,Merge pull request #1500 from Windows native toasts,0.4176534,Pull Requests,,0
866,Setup.iss: use {sys} variable when calling sc.exe,0.34415656,Includes fixes to config settings for internal users only,,0
867,align sequence of child folders in dehydrate tests,0.3271574,- No-op gvfs prefetch --hydrate performance is dramatically improved,,0
868,Fix compilation error on Windows,0.5191594,- Other bug fixes,,0
869,Mac EndpointSecurity prototype: Adds support for mirroring symlinks,0.5073128,Initial Mac platform native notifications,,0
870,Set core.filemode based on support,0.4837247,Adds additional logging for folder and file placeholder creation.,,0
871,Make checks on the modified paths be more strict,0.56711483,1685: minor path comparison fixup in ProductUpgrader,,0
872,AzDevOpsFromNuGetFeedUrlParser: parsing logic for NuGet Feed URLs,0.65407246,1732: Use one NuGet feed,,0
873,Make tests more generic for failures,0.5265649,"Other bug fixes, engineering improvements, and test reliability fixes.",,0
874,"REverting bandaid fix, adding reproduction functional test",0.54766154,"Other bug fixes, engineering improvements, and test reliability fixes.",,0
875,GVFS ConfigVerb - support for listing & CRUD,0.6477767,1683: GVFS.SignFiles.csproj: include more DLLs for signing,,0
876,Add functional test for corrupt loose object,0.42740804,- Commit-graph and multi-pack-index are validated after writing to eliminate corruption scenarios,,0
877,Update Git to include 'git checkout -b' fix,0.7479369,- Updated Git for a security issue.,,1
878,Add multi-pack-index expire/repack maintenance step,0.497975,"- Upgraded to Git 2.19. This version brings with it improvements to unpack_trees to speed up checkout, merge, reset, and rebase.",,0
879,Add Mac Setup instructions needed for building on Mac,0.59362644,Initial Mac upgrade functionality,,0
880,Mac PrjFS kext/lib: Removes obsolete user-to-kernel message codes,0.46839327,1744: Overhaul build and project systems and drop Mac/POSIX code,,0
881,Service installer Mac,0.68212533,Initial Mac upgrade functionality,,0
882,Check for new Panic Logs where PrjFSKextLogDaemon is started,0.49666476,- Added better diagnostic info in the GVFS logs when there are network errors,Using this because Contains was only being used on Mac and is only used when updating placeholders.  Using the in memory hashset is much faster and will not affect the Windows code.,0
883,Update Git to include v2.26.2,0.9354943,1660: Update Git to include v2.26.2,,1
884,Merge pull request #1072: GitMaintenanceStep: Throw if stopped while Git is running,0.6327431,"* Added a git config setting to disable the calculations for detecting force pushes during 'git fetch' and 'git pull'. That calculation can take 10's of seconds on a large graph, and users can now opt out of it.",,0
885,Fix race condition in MockVirtualizationInstance.CompleteCommand,0.5354297,1674: Config: disable status.submoduleSummary,,0
886,Add check for disable running with other options,0.47671533,1740: Skip launching UI if running unattended,,0
887,Merge pull request #1621 from github/linux-functional-test-tweaks,0.49681967,1712: git-vfs: update to Git 2.30.0,,0
888,Do not try to uninstall prjflt unless flag is passed,0.47275183,1668: ProductUPgradeTimer: remove unacceptable Environment.Exit(),,0
889,Upgrade to Microsoft.Windows.ProjFS 1.1.19156.1,0.67686945,- Improved reliability of how the installer upgrades from non-inboxed to inboxed ProjFS.,,0
890,Register/Unregister for offline I/O in functional tests,0.40349418,- Disable commit-graph verify for performance concerns,,0
891,Add summaries to new classes and interfaces,0.41792476,New features:,,0
892,Fix unit tests to run with libgit2 repo check,0.55661094,Other bug fixes for reliability,,0
893,"Mac kext: Adds logging for any unexpected, non-fatal errors.",0.51084405,- Added better diagnostic info in the GVFS logs when there are network errors,,0
894,Merge pull request #604 Pass ITracer to background process launching to log errors,0.44060856,1674: Config: disable status.submoduleSummary,,0
895,Merge pull request #1320 Making max pipe length platform-dependant,0.49259698,- Fix backoff on cache server size endpoint 404.,,0
896,Update Git to include expire/repack subcommand,0.6512365,Includes Git v2.26.2,"When making the tests more flexible, I missed one instance. To be sure I didn't miss any more, I removed all storage of the exact loose object count. Signed-off-by: Derrick Stolee dstolee@microsoft.com",0
897,NuGetUpgrader: fix typo in private method name,0.4488696,1732: Use one NuGet feed,Update PrjFSKextLogDaemon to forward messages to GitServiceDaemon,0
898,Actionable notifications,0.5573911,Initial Mac platform native notifications,"On Linux, the existence of a GNOME Virtual file system .gvfs directory precludes the use of VFS for Git entirely. For both this reason, and to fully disambiguate the VFSForGit project from GVfs, it would be preferable to use a different folder name for VFSForGit's metadata, such as .vfsforgit. This PR introduces support for modifying the name of .gvfs folder on a per-platform basis. GVFSPlatform.Instance.Constants.DotGVFSRoot now holds the appropriate name of that folder.",0
899,Merge pull request #843 [cherry-pick to master] Use a new log directory for upgrade logs to avoid ACL issues,0.5027528,See the full change log,,0
900,Updating and adding tests for LockData,0.5091624,Other bug fixes for reliability,Put a compile time check in the native hooks for C++11 Switch to static_assert to validate that the listener socket path is not too long,0
901,PostFetchJob: Kill running Git process when unmounting,0.63606024,- Fixed a bug that would cause VFS for Git mount process to shut down if it receives out-of-order ProjFS callbacks.,Add notarize shell script for notarizing the kext with Apple,0
902,troubleshooting.md: include description of ,0.62600994,We have new documentation including a new troubleshooting guide!,,0
903,Add CategoryConstants.ExceptionExpected to test that was missing it,0.45790553,1674: Config: disable status.submoduleSummary," path as nullptr can also signify we need to look it up sending path as """" means the path is outside the virtualization root",0
904,Fix another Windows build break,0.5437645,- Other bug fixes,Mac: Refactor testShouldHandleFileOpEvent test:,0
905,clean up path comparers in MirrorProviders,0.62710553,1685: minor path comparison fixup in ProductUpgrader,  - Split testShouldHandleFileOpEvent into separate test cases with more descriptive names   - Fix an issue where the testShouldHandleFileOpEvent_VnodeCacheUpdated tests were sometimes failing due to vnode cache collisions from other tests   - Updated the provider initiated I/O and provider offline scenarios to use file vnodes rather than the repo root vnodes,0
906,Merge pull request #1483 from pmj/mac-projfs-shadowed-variable-bugfixes,0.5284995,1658: ProjFSFilter: Be more robust to missing PowerShell,Mac: Don't Fill Placeholders & Properly Remove Placeholder Flag,0
907,"Merge pull request #1178: Repack: use one thread, but allow deltas",0.510135,Pull Requests,,0
908,gvfs config - error out while reading missing key,0.64078987,- Fixed an annoying bug where a Ctrl+C'd git process could leak a GVFS lock,,0
909,Add tests for removing entries from the modified files database,0.50313,1717 [HOTFIX] Update Git to remove ODB string check,,0
910,use correct checkout thread maximum in FastFetch,0.49471778,- We have moved MIDX computation to a post-fetch thread. This should save blocking time per prefetch that downloads a packfile from the cache server.,"Updates Git to 2.21.0, as rebased in microsoft/git#122.",0
911,Write incremental commit-graph files,0.8076322,Git: Includes incremental commit graph,Signed-off-by: Derrick Stolee dstolee@microsoft.com,1
912,Switch from giving Everyone read access to Users,0.39545053,- VFS for Git now supports anonymous access for public repositories.,,0
913,Merge pull request #1384: [Mac] Don't allow cloning or mounting on case sensitive volumes,0.4785574,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,,0
914,Deleted unused classes and moved another fastfetch-specific class,0.47509593,1730: Fix an issue with FastFetch when deleting files,,0
915,Each tracer instance is now enabled or not based on a sampling rate (currently set at 1%),0.37708327,Improves the rate of .gvfsCache cleanup.,  - Record if message(s) were dropped or truncated   - Handle partial writes to the GitServiceDaemon   - Group the message types in an enum   - Add additional unit tests for JsonWriter   - Add comments to the unit test exclusions,0
916,convert some MacOnly func tests into POSIXOnly,0.47225097,1744: Overhaul build and project systems and drop Mac/POSIX code,Fixed typo in Windows install directions in Readme,0
917,Merge pull request #357 Mac: New folder notifications,0.49995145,Initial Mac platform native notifications,,0
918,nan,0.33247387,1732: Use one NuGet feed,- add both from / to paths to ModifiedFiles.dat,0
919,Add out-of-proc telemetry daemon event listener,0.39156738,1732: Use one NuGet feed,,0
920,remove POSIXFileBasedLock for now,0.5259306,1703: Delete all macOS projects,"In the Readme document, there was an typo in the Windows installation directions. The document had the path for the installer as ...\BuildOutput\GVFS.Installer... Where it should have been ...\BuildOutput\GVFS.Installer.Windows... For installation on a windows machine.",0
921,Eliminate LazyPath race condition by not using them on BG task thread,0.5429516,Background tasks run with lower priority to address user feedback on maintenance job performance.,,0
922,Add ability to specify an iKey for the ETW listener,0.36015132,1710: Add new Microsoft certificate thumbprint,,0
923,Configure ACLs when creating upgrader download directory,0.49984652,Update components included with internal distribution, Kext error messages and vnode health data is now forwarded to the message listener (if present) Added JsonWriter class for generating JSON to send to message listener Added GeneratePrjFSVersionHeader.sh script to generate a header file with the PrjFS version of the build Added a new target for PrjFSLib unit tests,0
924,GVFS.SignFiles.csproj: include more DLLs for signing,0.9679811,1683: GVFS.SignFiles.csproj: include more DLLs for signing,,1
925,Rename DisplayName to ActionName in the DehydrateVerb,0.3387913,  - Now scopes credential.useHttpPath to just dev.azure.com hostname,"When running 'git multi-pack-index repack', we are setting two config options intended to speed up the underlying 'git pack-objects' command: pack.delta=0    (default is 50) pack.window=0   (default is 10)  These were inserted to prevent the delta calculations from taking over a user's processor during a background operation. When packing the from-loose packs, this can become an expensive operation. However, this came with a significant downside, due to my misunderstanding of how these options work. When repacking the (already nicely-packed) prefetch packs, these options force deltified trees to become un-deltified. This means the resulting pack can be larger than the given batch size. To prevent losing these good deltas, drop these config options and instead use pack.threads=1 to prevent multiple threads from taking over the machine. In combination with the recent lower-priority git processes, this should keep the background repack from disrupting users, but will also keep our pack directory small. In my testing, I used the Windows repository and ran the packfile maintenance step with a batch size of ""100m"" instead of ""2g"". This allowed me to run it with my real data, which was currently in a state where ""2g"" would do nothing. Before: 588m pack, repack took 50s  After:  80m pack, repack took 28s* The fact that the repack sped up is possibly related to writing less data to disk. I would expect this to slow down in some cases. This expansion of deltas explains why users running the packfile maintenance step directly have a higher than expected steady-state. We are not-optimally repacking the data.",0
926,Enable native notifciations on Windows (2),0.48366106,1710: Add new Microsoft certificate thumbprint,"When running 'git multi-pack-index repack', we are setting two config options intended to speed up the underlying 'git pack-objects' command: pack.delta=0    (default is 50) pack.window=0   (default is 10)  These were inserted to prevent the delta calculations from taking over a user's processor during a background operation. When packing the from-loose packs, this can become an expensive operation. However, this came with a significant downside, due to my misunderstanding of how these options work. When repacking the (already nicely-packed) prefetch packs, these options force deltified trees to become un-deltified. This means the resulting pack can be larger than the given batch size. To prevent losing these good deltas, drop these config options and instead use pack.threads=1 to prevent multiple threads from taking over the machine. In combination with the recent lower-priority git processes, this should keep the background repack from disrupting users, but will also keep our pack directory small. In my testing, I used the Windows repository and ran the packfile maintenance step with a batch size of ""100m"" instead of ""2g"". This allowed me to run it with my real data, which was currently in a state where ""2g"" would do nothing. Before: 588m pack, repack took 50s  After:  80m pack, repack took 28s* The fact that the repack sped up is possibly related to writing less data to disk. I would expect this to slow down in some cases. This expansion of deltas explains why users running the packfile maintenance step directly have a higher than expected steady-state. We are not-optimally repacking the data. Signed-off-by: Derrick Stolee dstolee@microsoft.com",0
927,Merge pull request #980: Decrease telemetry volume from VFS for Git.,0.61709255,- A couple of fixes for using VS Code on top of VFS for Git.,"In an effort to have fewer complaints for running things in the background, give background Git commands a lower process priority. See ProcessPriorityClass enum documentation for details of how this should work. By specifying ""BelowNormal"", we are allowing the process to run while a user is at the machine, but the process should not keep them from doing their work. The only lower priority is Idle which implies that the user is not using the machine, such as with a screensaver. I'm not sure if we want to go that low.",0
928,VirtualFileSystemHook: ensure string is properly null terminated,0.48952007,1674: Config: disable status.submoduleSummary,Makes it more clear what is going on. Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
929,Telemetry: Record when a mount succesfully starts,0.3636401,Performance and Reliability,,0
930,Merge pull request #545 from pmj/kext-review-fixes,0.466545,Pull Requests,,0
931,dehydrate: skip installing hooks when re-mounting,0.5016742,- The installer now unmounts and remounts existing repos automatically,,0
932,Update git version to 2.18.0.gvfs.1.26.gf61ade4,0.89081013,1736: Update Git to v2.31.1.vfs.0.3,"Mac ProjFS: Two-path provider messages, message provider for original hardlinked location",1
933,use generic POSIX wrapper name in func tests,0.35765684,1744: Overhaul build and project systems and drop Mac/POSIX code,"Now that there is a separate file/class holding tests for HandleFileOpOperation(), the existing tests for that function can be moved from the HandleVnodeOperationTests class.",0
934,Change how RefreshSparseFolders discovers folders to refresh,0.5041437,Adds additional logging for folder and file placeholder creation.,The tests check that appropriate providers are or are not messaged depending on the exact circumstances of the hardlink event.,0
935,add comment re O_RDONLY value in MacFileSystem,0.3971328,1744: Overhaul build and project systems and drop Mac/POSIX code,"This change uses the extra kernel-user message field for the ""from"" path to send the original path of the file being hardlinked in addition to the new path, and sends this message to the provider covering the original path, if this is different from the provider responsible for the new link location.",0
936,ProductUpgraderTimer: use ProductUpgrader factory,0.5970119,1685: minor path comparison fixup in ProductUpgrader,"This changes the kext-to-provider message format to contain an additional variable-length path string field, to be used for the source path of hardlink notifications. Both encoding and decoding code is updated. To simplify this, the existing field and the new field have been placed in an array of the appropriate length, thus allowing decoding/encoding code to loop over the variable-length path fields. Existing users of the message sending API are updated to call it with an extra argument, but this is currently always null, the changes to hardlink notifications will follow in a subsequent change.",0
937,Rework to move platform specific code,0.57412994,1744: Overhaul build and project systems and drop Mac/POSIX code,,0
938,GVFSVerb: use flags for core.gvfs,0.6503055,- GVFS has a better icon.,"This is the first in a series of upcoming changes to add platform native notifications. This commit adds a native Mac app that shows a status menu in the macOS menu bar. It contains the following changes  - Boilerplate code generated by Xcode for native apps  - VFSForGit Icon asset files  - UI .xib files  - Placeholder source code files for upcoming changes.  - Updated buildscript to build the app  - Platform native app is named ""VFS For Git.app"". It is installed    in ""/Library/Application Support/VFS For Git"" directory  - Updated uninstaller to delete the app  - Added placeholders for UT The app will get installed, but will not get automatically launched. Right now it displays no useful information its About box, neither does it perform any useful function.",0
939,Mac PrjFS kext/lib: Only send vnode path to provider when available,0.4977489,1678: BuildGVFSForWindows.bat: use nuget on PATH when possible,Better Categorize M4 tests,0
940,Cleaned up logging and don't report an error on a failed anonymous query,0.42149574,See the full change log,Fix Append Files,0
941,Add sparse prune message when finding folder to prune,0.42669886,Adds additional logging for folder and file placeholder creation.,GVFSService: platforms should use appropriate pipe name,0
942,Try switching on the UTF8 tests that previously failed on our build agents,0.4588977,"Other bug fixes, engineering improvements, and test reliability fixes.", We should call MessageType_KtoU_NotifyFilePreConvertToFull on KAUTH_VNODE_APPEND_DATA,0
943,Merge pull request #1166: Better Categorize M4 tests,0.43054026,Pull Requests,,0
944,Merge pull request #267 Mac: Prevent deletes of the index by non-git processes and enable related functional tests,0.5311482,"- Further optimizations to GVFS's index parsing, saving time on commands that need to reproject (like checkout).","Add repo root dir to retention list before projection updates The GitIndexProjection.UpdatePlaceholders() method, after processing the list of placeholder files, iterates over the list of placeholder folders and tries to remove any which are actually files, or not in the projection, or a possible tombstone. The last placeholder folder in the ordered list appears to always correspond to the root of the repository; this placeholder has an empty path string, and IsPathProjected() returns false for both the isProjected and isFolder flags for this entry. Because both flags are false, RemoveFolderPlaceholderIfEmpty() is called, which then results in a call to DeleteFile() in the lower-level ProjFS layer.  This always fails, because the root folder is never empty (it contains, among other things, the .git folder), but since RemoveFolderPlaceholderIfEmpty() handles the FSResult.DirectoryNotEmpty error code, no exception is propagated. We can avoid these unnecessary attempts to remove the repository's root folder on ""git checkout"" operations by adding the empty path to the folderPlaceholdersToKeep list.",0
945,Merge pull request #166 Update git version to 2.18.0.gvfs.1.26.gf61ade4,0.7482819,1676: Update Git to v2.27.0.vfs.1.0,GVFS.Upgrader: migrate to netcore project,1
946,Merge pull request #412 from nickgra/prefetchSkipSymlinks,0.54984415,Pull Requests,GVFS.Upgrader will be run on both Windows and non-Windows platforms. This enables a netcore version of the project to be built along side a netframework version. Update tests to run in the base unit test project to follow the implementation.,0
947,PR Feedback: Move exception handling into TryPrepareFolderForCallbacks,0.4523824,1652: RepoRegistry: ignore non-existent repos,MacPlatform: enable GVFS config verb,0
948,Merge pull request #1212 from Fix couple installer issues,0.51837265,- Other bug fixes,"The GitIndexProjection.UpdatePlaceholders() method, after processing the list of placeholder files, iterates over the list of placeholder folders and tries to remove any which are actually files, or not in the projection, or a possible tombstone. The last placeholder folder in the ordered list appears to always correspond to the root of the repository; this placeholder has an empty path string, and IsPathProjected() returns false for both the isProjected and isFolder flags for this entry. Because both flags are false, RemoveFolderPlaceholderIfEmpty() is called, which then results in a call to DeleteFile() in the lower-level ProjFS layer.  This always fails, because the root folder is never empty (it contains, among other things, the .git folder), but since RemoveFolderPlaceholderIfEmpty() handles the FSResult.DirectoryNotEmpty error code, no exception is propagated. We can avoid these unnecessary attempts to remove the repository's root folder on ""git checkout"" operations by adding the empty path to the folderPlaceholdersToKeep list. Co-authored-by: Kevin Willford kewillf@microsoft.com",0
949,Merge pull request #1041 Update PrjFSKextLogDaemon to monitor and record vnode cache health,0.61468446,"- VFS for Git will prefetch commits and trees from a cache server in the background on a schedule, to improve the speed of user-initiated fetches, pulls, and pushes",Do not take GVFSLock for git submodule commands,0
950,specific comment on case-differing sparse mode dir,0.3173927,1674: Config: disable status.submoduleSummary,ProjectedFSLib: do not copy into GVFS.Platform.Windows output dir,0
951,Clean up all uses of hard coded versions in FunctionalTests projects and add new lines to the end of all new AssemblyInfo files.,0.5170746,1744: Overhaul build and project systems and drop Mac/POSIX code,This reverts commit d29e00a3d0bb67b7f736a4a0c82c0e6e9af35919.,0
952,Enforce running init before other scripts. Remove relative paths from scripts.,0.38497344,1689: Make delete docs more verbose,"We are having some flaky tests because somtimes we get one too many or one too few loose objects in our LooseObjectStepTests. The only reason this can happen (as I see it) is that we are downloading a loose object due to the virtualization layer, and that file exists in a pack somehow. This causes us to delete or add an object during the LooseObjectsStep and have off-by-one errors. Instead of seeing 160 objects (for example) we see 159 or 161. Relax the test conditions to verify that we did not delete all of the loose objects during the steps instead of requiring the count is exact. (We already relaxed this in one direction in #1116.)",0
953,Fix EventMetadata construction in TryDownloadPrefetchPacks,0.4755374,1741: Fix winget tag specification,"Some git commands are unsupported in virtualized (VFS4G) repositories, and git will return an error when they are run inside of a virtualized repository. Depending on the type of command, git might block execution before or after calling the pre-command hook. If this command results in the GVFSLock being acquired, this can affect other actions, such as placeholder creation. The git submodule command in particular is causing an issue in an environment that we would like to unblock. Make the change in VFS4G until we can investigate making a deeper fix in git (see issue #1164).",0
954,Mac kext unit testing: enables code coverage instrumentation,0.44393122,Initial Mac platform native notifications,,0
955,GitObjects: hash incoming loose objects,0.48680335,Git: Includes incremental commit graph,"Currently, ProjectedFSLib.dll is expected to be copied into the GVFS.Platform.Windows output directory during a build, and from there is copied into the installer. Due to how this is included in the project, it is not consistently copied into the GVFS.Platform.Windows output directory, and this can cause a build failure simiar to: Error on line in C:\Sources\Vfs4Git\src\GVFS\GVFS.Installer.Windows\Setup.iss: Source file ""C:\Sources\Vfs4Git\src\..\BuildOutput\GVFS.Windows\bin\x64\Debug\ProjectedFSLib.dll"" does not exist. To fix this, we could fix the project setup to have the file copied over consistently. However, this file is not needed by the GVFS.Platform.Windows project. Post RS4, ProjectedFSLib.dll should be provided by the operating system and not copied over the product. Previously, the product had to bring over its own copy of ProjectedFSLib.dll, as it was not providided by the OS. By now, we expect developers to have moved to a version of Windows that includes this the ProjectedFSLib.dll component in box. This also means:   We can remove logic for deleting this file as part of a post build   step on systems where this file should not be provided by the product.   We have to include the ProjFSLib.dll dependency into the Windows   unit test project. Otherwise, running the unit test will fail on   systems that do not have the projfs feature enabled. ",0
956,Bumping version of update-winget action,0.9259507,1738: Bumping version of update-winget action,,1
957,Merge pull request #339: Pass all required components to vswhere in BuildGVFSForWindows.bat,0.6646348,1678: BuildGVFSForWindows.bat: use nuget on PATH when possible,"In an effort to have fewer complaints for running things in the background, give background Git commands a lower process priority.",0
958,Adding more functional tests for included folders,0.5065527,Adds additional logging for folder and file placeholder creation.,"On POSIX platforms the pipe name should be a rooted path so that we have full control over the pipe path. If a relative path is used, then the pipe is created in a temporary dictory, which can be a different location depending on the user's context (i.e. running as root vs normal user). This can result in an process running as root not being able to communicate with the GVFS Service. This change enables the different platforms to create a pipe path that is suitable for the platform, and encapsulates the logic for creating the pipe name for client / server in a single location.",0
959,Changes for next round of PR feedback,0.5391763,Major updates:,Fix handling of >>,0
960,Run release-winget on Windows Server,0.46994215,1679: BuildGVFSForWindows.bat: use nuget on PATH,Updated Service response to EnablePrjFS request,0
961,Use cmd.exe as the dummy hook in MountMergesLocalPrePostHooksConfig,0.44558638,1674: Config: disable status.submoduleSummary," This will not call PreConvertToFull If we get a modified event for a file that is a placeholder, call PreConvertToFull unders the covers   This will add it to ModifedPaths.dat",0
962,incorporating review comments. Removed tracer. Style cleanups.,0.5103419,Background tasks run with lower priority to address user feedback on maintenance job performance.,"Service (RequestHandler.cs) on the Mac, was sending responses to EnableProjFS requests in an incorrect format. This was causing gvfs service --mount-all to fail with ""un-expected response message"" error. Updated RequestHandler to first create a Message object from EnableProjFS Response and use it in its reply to client. (It was sending string representation of the response before.) This helps create a client parsable response with expected header and body. Also added new UT in MacServiceTests. Service response before the change - GVFS.Common.NamedPipes.NamedPipeMessages+EnableAndAttachProjFSRequest+Response Service response after the change - TRequestResponse|{\""State\"":1,\""ErrorMessage\"":null} Fixes #1053",0
963,Refactoring according to PR comments,0.49127835,1747: UpgradeVerb: write deprecation notice,Update functional test documentation,0
964,Added OneTimeSetup method to clear all FunctionalTest configs before starting the tests,0.47925946,1697: Fix functional tests to skip around ProjFS issue,,0
965,Fix name of placeholder tests file,0.5159143,- Fixed an issue where some concurrent updates to the placeholder database would fail,"We are no longer using 'verify' to check that our commit-graph is valid, but we can still discover some errors during the 'write' command. We currently never recover from this problem. If we inspect the response from the 'write' command, then we can delete and rewrite on failure. This will resolve some issues that users are seeing right now.",0
966,Dtruss: formatting for listxattr() syscall,0.34732336,1666: Docs: start basic template,,0
967,Add exit code for failure to dehydrate folders and write folders to stderr,0.4873635,Adds additional logging for folder and file placeholder creation.,"[POSIX, Mac] Refactor BSD-specific values out of POSIXFileSystem This PR is a prerequisite to the addition of a GVFS.Platform.Linux set of classes. In particular, we convert POSIXFileSystem into an abstract class and move the majority of its implementation into MacFileSystem, due to the fact that many of the syscall function signatures and flag values, plus the layout of the struct stat fields, differ between BSD/Darwin and Linux. So we need to separate these out from the POSIX-level commonalities between the two. The visibility of the members of the NativeFileReader subclass is also adjusted, and we remove some of its unused constants such as Create (for the O_CREAT flag, which isn't used here). And we correct the return value of getuid(2) in POSIXPlatform to a 32-bit uint.",0
968,Mac: Matches up KextLog levels with os_log levels,0.45324144,See the full change log,Per advice from @wilbaker on PR review.,0
969,Merge pull request #1732: Use one NuGet feed,0.8113012,1732: Use one NuGet feed,,1
970,Mac kext: Removal of some obsolete code,0.5562485,1744: Overhaul build and project systems and drop Mac/POSIX code,Do not attempt to approve credentials for anonymous access,0
971,"Merge pull request #999 use ""which"" to locate git installation",0.4561631,Includes Git v2.27.0,Mac ProjFS Kext: ShouldHandleFileOpEvent Cleanup Part 1,0
972,Mac kext unit testing: First pass at tests for provider registration.,0.48525876,Initial Mac platform native notifications,"The current logic has an issue where it will attempt to approve credentials when communicating with anonymous access, even though there are no credentials to approve. The other logic in this method guards credential operations to non-anonymous auth scenarios. Update logic to only approve / store credentials to non-anonymous auth scenarios.",0
973,Enable additional functional tests,0.5062454,1697: Fix functional tests to skip around ProjFS issue,Upgrader: do not include Micrsoft.Diagnostic.Tracing.EventSource,0
974,O(modified),0.37084854,1747: UpgradeVerb: write deprecation notice,netcore build: fix runtime patch selection issues,0
975,Mac PrjFS: Reduces deadlock risk by delaying hydration close(),0.50395495,- No-op gvfs prefetch --hydrate performance is dramatically improved,"Product code no longer has a dependency on Microsoft.Diagnostics.Tracing.EventSource, so remove references to NuGet packages.",0
976,Rename parameters of OnIndexFileChanged to match context,0.36280903,See the full change log,"Declare the following VS components as required for this solution to build:  Microsoft.Component.MSBuild Microsoft.VisualStudio.Workload.NativeDesktop Microsoft.VisualStudio.Workload.ManagedDesktop Microsoft.VisualStudio.Workload.NetCoreTools Microsoft.Net.Core.Component.SDK.2.1 Microsoft.VisualStudio.Component.VC.v141.x86.x64 Microsoft.Net.Component.4.6.1.TargetingPack Microsoft.Net.Component.4.6.1.SDK  Note that the Windows 10 SDK 10240 is also required, but this component is no longer shipped with VS2019.",0
977,Merge pull request #1428 from github/move-index-test,0.5189414,Pull Requests,"The upgrade verb attempts to copy Microsoft.Diagnostic.Tracing.EventSource when copying the ProductUpgrader to the temporary directory to run. If this file is not present, then the upgrade verb will fail. This following commit removes this file: cbe5787d (""Remove in-proc ETW trace event listener"", 2019-02-18) Clean installs of VFS4G that include this commit will no longer have this file in the installation directory, and will not be able to upgrade. This dll is no longer needed or installed during installation, so we remove it from the list of files copied over for upgrade. This is a quick fix - we will also see how to make this less fragile. One option might be to install ""upgrader app"" into its own directory under the VFS For Git installation directory, and then just copy the directory to the temp location, instead of providing a list of files that need to be kept in sync.",0
978,Merge pull request #1452: Correct Upgrade Messages for Mac,0.5956274,Initial Mac upgrade functionality,"Issue: When switching between command line and IDE builds, the build will often fail with an error similar to: NETSDK1061: The project was restored using Microsoft.NETCore.App version   2.1.9, but with current settings, version 2.1.0 would be used instead. To   resolve this issue, make sure the same settings are used for restore and for   subsequent operations such as build or publish. Typically this issue can occur   if the RuntimeIdentifier property is set during build or publish but not during   restore. For more information, see   https://aka.ms/dotnet-runtime-patch-selection. My understanding is that this can happen when the runtime used by the restore operation does not match the runtime expected by the publish operation. As the publish operation might not call restore itself, it will generate this error when the runtime does not match the expected version. To fix this, the projects that generate self-contained applications will also set the TargetLatestRuntimePatch property to target the latest runtime.",0
979,FunctionalTests: disable builtin FS Monitor,0.47212714,- Disable commit-graph verify for performance concerns,"Rename WorkingDirectoryBackingRootPath constants This PR primarily is a followup to #1102 to accommodate the fact that on Linux, the relative location of the working directory backing store will be a short path (i.e., "".gvfs/lower"") and not a single filename like ""src"". Hence we rename the WorkingDirectoryBackingRootName constants to WorkingDirectoryBackingRootPath, akin to how other short relative path constants are constructed in GVFS.Common.GVFSConstants.DotGVFS. We also fix up the internal name of the workingDirectoryBackingRoot argument to the GVFS.Common.Enlistment class, and add a TODO comment regarding the git.cmd script, which is unused on non-Windows platforms.",0
980,Platform native notifications PR_2,0.6927527,Initial Mac platform native notifications,"We are no longer using 'verify' to check that our commit-graph is valid, but we can still discover some errors during the 'write' command. We currently never recover from this problem. If we inspect the response from the 'write' command, then we can delete and rewrite on failure. This will resolve some issues that users are seeing right now. Signed-off-by: Derrick Stolee dstolee@microsoft.com",0
981,Rename LibGit2RepoPool to LibGit2RepoInvoker,0.4739104,1741: Fix winget tag specification,"It turns out that centralising the vnode fsid and inode fetching actually made the code bigger and more complex, so this moves it out of the ShouldHandleFileOpEvent function and simply gets it on demand in each location where it is needed.",0
982,Merge pull request #654 Add error message to output when call to gvfs/config endpoint fails,0.5516775,* Improve error message from gvfs upgrade if the Git installation could not be found.,"The root finding part of ShouldHandleFileOpEvent is fairly complex but also self-contained, so this change moves it to a helper function to improve readability of the main function.",0
983,Fix test the will no longer have child entries of a folder in the modified paths,0.4754694,1685: minor path comparison fixup in ProductUpgrader,"This change makes a start at cleaning up the functions ShouldHandleVnodeOpEvent and ShouldHandleFileOpEvent. The basic sanity checks on a vnode - whether it is on a supported file system, and whether its type is handled by the kext - are moved to a helper function, which is then called by both ShouldHandle() functions. Tracing of these sanity checks is also simplified in the VnodeOp case.",0
984,Add message to check in MoveFileShouldFail,0.4223263,Pull Requests,"Update libgit2 native binaries and include .so for Linux Upgrade the LibGit2Sharp.NativeBinaries NuGet package from v1.0.165 (containing LibGit2Sharp v0.23.1) to v2.0.278, which contains the latest LibGit2Sharp release v0.26. LibGit2Sharp version 0.26 eliminates most external library dependencies other than OpenSSL. In particular, by removing the dependency on libcurl, there is no longer a link-time requirement for a version of libcurl with deprecated CURL_OPENSSL_3 symbols and SSLv3 support. This allows us to include the compiled libgit2-*.so from the LibGit2Sharp.NativeBinaries NuGet package when building on Linux; otherwise, builds on Linux are unsuccessful or else require old and insecure libcurl installations, so this is a prerequisite for a Linux platform build.",0
985,Close directory fds when walking directory hierarchy in PrjFSLib,0.49845904,- gvfs prefetch learned how to take --files-list.,"Add a TODO note regarding the ""git.cmd"" script which is ignored on macOS (and also Linux) as it's not in $PATH and will not override the ""git"" binary because the "".cmd"" extension is not ignored as it is on Windows.",0
986,Fix commands that need additional parameters with stdin,0.40540883,- Other bug fixes,,0
987,use consistent line endings in DehydrateTests,0.31289673,- No-op gvfs prefetch --hydrate performance is dramatically improved,"Also adjust the visibility of the members of the NativeFileReader subclass, and remove some of its unused constants.",0
988,Merge pull request #851:  [cherry-pick to master] Enhance git command logging,0.59669113,"- Upgraded to Git 2.19. This version brings with it improvements to unpack_trees to speed up checkout, merge, reset, and rebase.","Since on Linux the relative location of the working directory backing store will be a short path (i.e., "".gvfs/lower"") and not a single filename, rename the WorkingDirectoryBackingRootPath constants appropriately. Also fixup the internal name of the workingDirectoryBackingRoot argument to the common Enlistment class.",0
989,General improvements:,0.9999998,General improvements:,Add Full Coverage for HandleVnodeOperation,1
990,Merge pull request #1022: AutomaticallyDisposesAfterNoUse additional test logging,0.54493225,Pull Requests,"It appears that sometimes we are getting an extra loose object after some of the steps, and it is probably because we are deleting pack-files from the object store so we download a ""missing"" commit or something. Use ShouldBeAtLeast() to demonstrate that the loose objects we expect to remain are still there.",0
991,Merge pull request #726 from nickgra/libProcessName,0.46255484,Pull Requests,Enable Rename tests on Mac and add additional tests for coverage,0
992,Merge pull request #1714: Update Git to include LFS security release,0.8364295,1714: Update Git to include LFS security release,"It appears that sometimes we are getting an extra loose object after some of the steps, and it is probably because we are deleting pack-files from the object store so we download a ""missing"" commit or something. Use ShouldBeAtLeast() to demonstrate that the loose objects we expect to remain are still there. Signed-off-by: Derrick Stolee dstolee@microsoft.com",1
993,Update mac uninstall script to remove GVFS service directory,0.5806775,The gvfs upgrade command is deprecated. Future upgrades will require using winget or installing directly from the releases page.,,0
994,Merge pull request #1198: Remove all reference to looseObjectCount in LooseObjectStepTests,0.4995443,1674: Config: disable status.submoduleSummary,Update Microsoft.Data.Sqlite packages to version 2.2.4.0,0
995,build: migrate VC++ projects to new build,0.47801483,1744: Overhaul build and project systems and drop Mac/POSIX code,,0
996,Fix highestVersionAvailable traching in TryQueryNewestVersion,0.41381955,1674: Config: disable status.submoduleSummary,,0
997,"Add IsSocket and IsExecutable to platform filesystem, fix Windows build break",0.4545182,1678: BuildGVFSForWindows.bat: use nuget on PATH when possible,Refactor for easier conversion to sqlite,0
998,Add handling for RelativeFromPath to support Hardlinks,0.4031499,1683: GVFS.SignFiles.csproj: include more DLLs for signing,,0
999,Add comments to FastFetch.csproj,0.4087905,1683: GVFS.SignFiles.csproj: include more DLLs for signing,"If we have a corrupt loose object, the git pack-objects command will fail as it cannot put that object into a pack-file. This stops all future iterations of the LooseObjectsStep from succeeding, so users will be stuck in a bad situation.   Refactor WriteLooseObjectIds() to rely on a new LooseObjectsBatch() method.   On failure to create a pack, check all objects in the batch (using LooseObjectsBatch() and libgit2) and delete those that fail.   Start disposing the repo in the dehydrate verb for safety.   Create a functional test that verifies this behavior. Move the LooseObjectStepTests to have a new enlistment for each test, since we are messing with the object store. Part of the issue is that .NET doesn't allow us to move files that are marked as read-only, which becomes problematic as tests create pack-indexes and other files.   Resolves #1079",0
1000,UpgradeVerb: run upgrade tool in same window,0.569841,The gvfs upgrade command is deprecated. Future upgrades will require using winget or installing directly from the releases page.,,0
1001,Merge pull request #455 Disable Native_ProjFS_MoveFile_PartialToOutside functional test,0.62493783,1697: Fix functional tests to skip around ProjFS issue,,0
1002,Update Git to include commit-graph BUG statement,0.8415008,Git: Includes incremental commit graph,,1
1003,GVFSVerb: Turn off pack.useBitmaps,0.6087004,- VFS for Git will performance maintenance in the background. This release will pack loose objects in .gvfsCache into packfiles. ,,0
1004,Merge pull request #575 from benpeart/use-git-2-20-optimizations,0.4988397,"The merge strategy default is changed from recursive to ort which should present significant performance improvements for commands such as git merge, git rebase, and git cherry-pick. Huge thanks to external contributor @newren for creating this new merge strategy!",Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
1005,"General clean-up of EndpointSecurity prototype, adding detailed code comments",0.51903605,1744: Overhaul build and project systems and drop Mac/POSIX code,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
1006,Mac kext: Adds poisoned root path string check for debug builds,0.45667502,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
1007,Troubleshooting: copy known issues from private wiki,0.4245851,1673: [HOTFIX] ProductUpgrader: be extra careful about a copy loop,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
1008,GetGitVersionNumber: handle more git version strings,0.70366096,Includes Git v2.27.0,Signed-off-by: Derrick Stolee dstolee@microsoft.com,1
1009,Merge pull request #1413 from github/posix-and-crossdevice-tests,0.4964479,"- Post-index-change hook will help ensure consistency between Git and VFS for Git's reckoning of the state of the repository, and eliminate a class of bugs.",Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
1010,Fix a NullReferenceException in MockTracer,0.45195627,1674: Config: disable status.submoduleSummary,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
1011,Log exceptions that occur when GVFS.Service adjusts ACLs,0.681551,- Added better diagnostic info in the GVFS logs when there are network errors,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
1012,Merge pull request #753 Bug Bash Fixes [into master],0.48079616,- Other bug fixes,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
1013,Merge pull request #1137: remove Micrsoft.Diagnostic.Tracing.EventSource,0.4868859,1674: Config: disable status.submoduleSummary,Signed-off-by: Derrick Stolee dstolee@microsoft.com,0
1014,Be consistent with the name TryStatFileAndUpdateIndex for platform specific methods in FastFetch and address other PR feedback,0.42935294,Various bug fixes and performance improvements,We will need to enumerate a batch of loose objects independently of writing them to a stream. Pull out the loop and consume it as an enumerator instead.,0
1015,Add winget workflow,0.90076417,1734: Adding winget workflow,Rename LocalStorageRoot,1
1016,"Relax LooseObjectStepTests from exact object counts to ""positive or zero"" checks",0.46518335,1652: RepoRegistry: ignore non-existent repos,,0
1017,Merge pull request #626: CI: Publish a mac build drop and consume it for functional test runs,0.5358259,1744: Overhaul build and project systems and drop Mac/POSIX code,,0
1018,Mac: Add PreConvertToFull when Write Access is requested,0.45036942,1675: PreCommandHook: don't lock pack-objects,Enable building with Visual Studio 2019,0
1019,build: migrate GVFS.Virtualization project,0.62098426,Instructions for installing and using GVFS are available at https://github.com/Microsoft/GVFS,,0
1020,Mac kext testing: Implements MockCalls::DidCallFunctionsInOrder(),0.39806718,Initial Mac platform native notifications,"Upgrade the LibGit2Sharp.NativeBinaries NuGet package from v1.0.165 (containing LibGit2Sharp v0.23.1) to v2.0.278, which contains the latest LibGit2Sharp release v0.26. LibGit2Sharp version 0.26 eliminates most external library dependencies other than OpenSSL.  In particular, by removing the dependency on libcurl, there is no longer a link-time requirement for a version of libcurl with deprecated CURL_OPENSSL_3 symbols and SSLv3 support. This allows us to include the compiled libgit2-*.so from the LibGit2Sharp.NativeBinaries NuGet package when building on Linux.",0
1021,Remove *DevService.bat scripts,0.4302768,  - Now scopes credential.useHttpPath to just dev.azure.com hostname,,0
1022,Enable HashObjectTests and RmTests on Mac,0.43137223,Initial Mac platform native notifications,"On the Mac, use published version of GVFS.Servcie rather than using dotnet GVFS.Service.dll Fixes #1095",0
1023,Merge pull request #1506 from Mac installer preinstall failure,0.5199567,Initial Mac upgrade functionality,"On platforms where a layered filesystem is used (i.e. Linux), the .git directory must be accessed on the lower filesystem directly, and not through the projection as that would cause a call back into the provider. This PR introduces the concept of a ""local storage root"", defined as the directory where actual stored objects are located. On platforms where filters are used (Windows and Mac), this is the same as the working directory root -- the hydrated files (and the .git directory) exist physically in place. On layered filesystems, the objects are stored in a separate directory (currently .gvfs/lower relative to the enlistment root). We need to be sure to make accesses to .git in this directory, not via the projection.",0
1024,Hooks: Remove unused code,0.45798656,1741: Fix winget tag specification,Update the Windows build script to be able to build with Visual Studio 2019 tooling and update Readme with details. Includes the following changes:   Tweak logic to find msbuild for different Visual Studio versions   Remove checks for unnecessary packages   Add checks for .Net Core 2.1 development packages   Tweak check for Windows 10 SDK (10.0.10240.0) ,0
1025,Enable UpdatePlaceholderTests on Mac,0.62703395,Initial Mac platform native notifications,,0
1026,use DotGVFSRoot constant in place of .gvfs path,0.58187723,- VFS for Git will performance maintenance in the background. This release will pack loose objects in .gvfsCache into packfiles. ,,0
1027,fix extra virtual path call in dehydrate tests,0.43231058,- No-op gvfs prefetch --hydrate performance is dramatically improved,[POSIX] rename common Mac hook code to share with Linux,0
1028,use backing paths after unmount in dehydrate tests,0.5007098,- No-op gvfs prefetch --hydrate performance is dramatically improved,,0
1029,ProductUpgrader: add empty constructor for mocking,0.48036557,1685: minor path comparison fixup in ProductUpgrader,"Updated GVFS.Service on Mac to auto-mount registered repositories on user login. Also added new UT for GVFS.Service on Mac  Added PATH environment setting in Service's launchd plist file Moved RepoRegistryTests.cs from GVFS.UnitTests.Windows to   GVFS.UnitTests Made GVFSPlatformConstants abstract. Specific platforms (Mac, POSIX,   Windows & Mock) has been updated to provide overrides for required   methods. Updated GVFSPlatform Constructor to not accept executable and   installer extension string as args. These are now set by specific   platforms using GVFSPlatformConstants.  fixes #646 and fixes #996",0
1030,Add PostIndexChangedHook project and install,0.46557528,Update components included with internal distribution,Replace use of Count on FileSystemTaskQueue with IsEmpty,0
1031,Updated tests to cover more functionality and be clearer,0.62216043,"Other bug fixes, engineering improvements, and test reliability fixes.",Using Count on concurrent collections carries a significant performance cost when using .Net Core.  IsEmpty is much more performant.  This change replaces the use of Count in performance critical paths for the Background operations.,0
1032,Merge pull request #310 Add wait for background operations to complete in modified paths test,0.50533116,Pull Requests,,0
1033,Merge pull request #1084: Support alternate names for the .gvfs folder,0.5185135,1683: GVFS.SignFiles.csproj: include more DLLs for signing,,0
1034,Check the disposing flag in Dispose methods,0.40061194,1652: RepoRegistry: ignore non-existent repos,Rename common.mac.cpp to common.posix.cpp so it can be used as a basis for Linux hook programs as well. Also replace the BSD-specific strlcat() and strlcpy() with generic C string functions from the  standard library header.,0
1035,Use IsUnderConstruction to avoid threadabort on mac,0.5611932,1674: Config: disable status.submoduleSummary,,0
1036,Style updates,0.6078686,Major Updates,GVFS.Service should copy ProjectedFSLib.dll when it's missing and the installed ProjFS version matches the packaged version,0
1037,Mac ProjFS kext: Denies access when provider does not respond,0.5802939,- Fixed a bug that would cause VFS for Git mount process to shut down if it receives out-of-order ProjFS callbacks.,,0
1038,Remove under construction checks that are no longer needed,0.45824194,"Other bug fixes, engineering improvements, and test reliability fixes.",,0
1039,Merge pull request #329 from jeschu1/cacheserverurl,0.5901842,Pull Requests,Fix Markdown formatting and some old references.,0
1040,Improve functional tests coverage,0.62359625,"Other bug fixes, engineering improvements, and test reliability fixes.",Fix Markdown formatting and some old references.,0
1041,Use the test repo PAT set by the build,0.43901795,"Other bug fixes, engineering improvements, and test reliability fixes.",,0
1042,Mac: Add file renamed notification,0.62131774,Initial Mac platform native notifications,,0
1043,Replace uses of PlaceholderListDatabase.PlaceholderData with IPlaceholderData,0.5766467,- Fixed an issue where some concurrent updates to the placeholder database would fail,,0
1044,Add sparse functionality for set and file,0.490627,Adds additional logging for folder and file placeholder creation.,Teach Enlistment.GetNewGVFSLogFileName to take FileSystem parameter,0
1045,Merge pull request #1090 Replace use of Count on FileSystemTaskQueue with IsEmpty,0.4455949,1730: Fix an issue with FastFetch when deleting files,Upgrade to new ProjFS versions,0
1046,Pass tracer to DeleteAllInstallerDownloads,0.5256586,1730: Fix an issue with FastFetch when deleting files,"This will enable the Enlistment.GetNewGVFSLogFileName method to interact with the file system through the file system abstraction layer, enabling us to unit test this method and methods that call this method. Instead of updating all call sites to pass in a physical file system, this is an optional argument. If one is passed in, it will be used. If no physical file system argument is provided, a default physical file system object will be created.",0
1047,Fix dehydrate tests for updated user messages,0.45085064,"Other bug fixes, engineering improvements, and test reliability fixes.",Ensure that modifications and enumeration of the JsonTracer::listeners collection is safe with multiple threads adding/removing listeners at the same time as we're writing messages. A ConcurrentBag is used to achieve this aim. Also ensure the TelemetryDaemonEventListener does not hold up calling threads posting messages over the pipe by queuing up messages to be sent on a single background thread.,0
1048,make RunPythonExecutable func test POSIXOnly,0.4095639,1744: Overhaul build and project systems and drop Mac/POSIX code,"Ensure that modifications and enumeration of the JsonTracer::listeners collection is safe for being accesses from multiple threads. Also create a background thread to write to TelemetryDaemonEventListener pipe, freeing up the trace message entry thread to continue. Since message send/failure now happens after the call to write an event message the mechanism for reporting EventListener failure and recovery has been changed from a method return value approach to an event sink/ callback model to allow communication back to the JsonTracer when a listener fails in the background.",0
1049,Merge pull request #1449 Don't log errors when MaintenanceSteps fail due to the repo being deleted,0.51854247,1674: Config: disable status.submoduleSummary,,0
1050,Upgrade reminder causes functional test failure,0.5881085,"Other bug fixes, engineering improvements, and test reliability fixes.",,0
1051,"incorporating review comments - removed hard coded config file path, replaced WindowsOnly test category with MacTODO.M4",0.49276465,1744: Overhaul build and project systems and drop Mac/POSIX code,"The GitMaintenanceStep throws a StoppingException if the RunGitCommand() method is run after a Stop() call. However, it doesn't throw when the Stop() call happens during the Git process. This requires extra handling of the Stopping boolean after receiving a response from RunGitCommand(). Such extra handling was added in #1064, but would not be necessary with this change. The better thing to do is to throw the StoppingException after the Git process completes. Add a unit test that verifies we automatically skip the remainder of a PerformMaintenance() method in a subclass. Looking through the error logs, all logged instances of a failure during 'commit-graph verify' or 'multi-pack-index verify' are actually due to this issue. Otherwise we would see errors from GitMaintenanceStep saying ""Git process {command} failed with errors:"" and those messages do no appear in the logs.",0
1052,Merge pull request #327 from jeschu1/repourl_fix,0.5600039,Pull Requests,,0
1053,Service should no check for upgrades when unattended,0.49571592,- Disable commit-graph verify for performance concerns,"The GitMaintenanceStepTests have three subclasses of GitMaintenanceStep to invoke the Stop() method at different times and report which blocks were reached. Instead, use an enum to specify when we should call Stop() and use the same subclass in all methods. Signed-off-by: Derrick Stolee dstolee@microsoft.com",0
1054,Mark panic strings as 'public' so they appear in Console,0.3568709,1652: RepoRegistry: ignore non-existent repos,"The GitMaintenanceStep throws a StoppingException if the RunGitCommand() method is run after a Stop() call. However, it doesn't throw when the Stop() call happens during the Git process. This requires extra handling of the Stopping boolean after receiving a response from RunGitCommand(). The better thing to do is to throw the StoppingException after the Git process completes. Add a unit test that verifies we automatically skip the remainder of a PerformMaintenance() method in a subclass. Signed-off-by: Derrick Stolee dstolee@microsoft.com",0
1055,Merge pull request #188: Extract the logic to schedule post-prefetch job to its own function,0.5608346,Pull Requests,,0
1056,Mac kext: Placement of profiling probes throughout the vnode listener,0.43619704,Initial Mac platform native notifications,Fix FastFetch build in VS for Mac,0
1057,Fix up FastFetch to initialize auth before making any queries,0.51031154,1730: Fix an issue with FastFetch when deleting files,"When someone unmounts, it triggers a Stop() on the maintenance step that is currently running. This can interrupt longer-running Git commands more often than other actions, so check Stopping before checking the error code for a response. This is more likely a reason for people to hit this error than any data-shape issues that we were expecting to cause a problem. While I am updating the check around the commit-graph verify command, I am not un-commenting it as we don't have the full fix for the ""too many pack-files"" case.",0
1058,Delete tmp_ files on prefetch,0.5707473,1730: Fix an issue with FastFetch when deleting files,"When someone unmounts, it triggers a Stop() on the maintenance step that is currently running. This can interrupt longer-running Git commands more often than other actions, so check Stopping before checking the error code for a response.",0
1059,Merge pull request #708 from jeschu1/kext_unit_test,0.526142,Pull Requests,,0
1060,Remove public CompletionResult property,0.51223767,1652: RepoRegistry: ignore non-existent repos,Use Otherwise for Mac in FastFetch csproj,0
1061,TryDeleteStatusCacheFile as warning,0.5048771,1674: Config: disable status.submoduleSummary,GVFS.props: remove extra path marker before BuildOutput and package dir,0
1062,Add exception type to use for GVFSDatabase queries,0.5025952,- Added better diagnostic info in the GVFS logs when there are network errors,"Fixes an issue where incremental builds are broken due to ""GenerateBindingRedirects"" task failing. In commit f2125719, a preceding path marker ('\') was added to the BuildOutput and Package directories. When the SolutionDir already has a trailing slash, this will result in paths with double slashes. Certain MSBuild tasks have trouble with double slash, including the GenerateBindingRedirects task. For example: `root\src\..\BuildOutput' is resolved to: root\src\BuildOutput, instead of root\BuildOutput as we intend This change ensures that the SolutionDir variable has a trailing slash, and removes the preceding slash in BuildOutput and Package directory variables.",0
1063,GetDirectoriesOutsideSparse: use List instead of array,0.39107007,Pull Requests,Client side logic to interact with an org info server to anonymously query for available VFSForGit versions,0
1064,Properly test the hooks are absolute paths,0.44227043,1685: minor path comparison fixup in ProductUpgrader,Fix race condition in MockVirtualizationInstance.CompleteCommand,0
1065,Moved TryLoad to IsReady method for each platform to perform,0.43403876,1734: Adding winget workflow,,0
1066,PR Feedback: Code cleanup,0.51449096,Improves the rate of .gvfsCache cleanup.,,0
1067,Basic Mac Installer for VFSForGit,0.64436555,GVFS is now available as a binary installer,,0
1068,Making max pipe length platform-dependant,0.4433626,"* The client will now also query the /gvfs/sizes endpoint on a cache server that implements that endpoint, reducing the latency on those requests even further",This is an upgrader that will query an anonymous endpoint to get which version of VFS for Git it should download from a NuGet feed.,0
1069,Merge pull request #640 from jeschu1/looseobjects3,0.6047045,Pull Requests,,0
1070,GVFSVerb: check custom Git version bounds,0.69096386,"With this release, VFS for Git only enforces a minimum version of Microsoft Git.  Previous releases required an exact version match.  This allows users to upgrade Git without having to upgrade VFS for Git.",,0
1071,Better logging and other cleanup,0.5203413,Improves the rate of .gvfsCache cleanup.,,0
1072,Merge pull request #1738: Bumping version of update-winget action,0.7574091,1738: Bumping version of update-winget action,Update PrjFSKextLogDaemon to monitor and record vnode cache health,1
1073,Reconsider PhysicalFileSystem.DeleteDirectory,0.55704606,1730: Fix an issue with FastFetch when deleting files,,0
1074,Mac kext: Incorporates code review style feedback,0.47843376,Initial Mac platform native notifications,,0
1075,Check the projection for the folder before attempting to delete,0.48366904,Adds additional logging for folder and file placeholder creation.,,0
1076,Move JsonTracer code for writing to non-failed listeners to a common,0.36820102,1683: GVFS.SignFiles.csproj: include more DLLs for signing,,0
1077,Merge pull request #325 Mac: Update MirrorProvider to support symbolic links,0.4231146,Pull Requests,,0
1078,Clean up exception handling and rename variables now that this has been validated.,0.48580936,1652: RepoRegistry: ignore non-existent repos,,0
1079,Additional cleanup,0.67192376,Improves the rate of .gvfsCache cleanup.,Track tombstones so that we know when DeleteFile needs to be called,0
1080,Fix test for modified paths that was broken,0.55415773,1685: minor path comparison fixup in ProductUpgrader,,0
1081,Log number of folder placeholders that get SHA updated,0.62508273,Adds additional logging for folder and file placeholder creation.,"When building a single project using 'dotnet build' from a project directory instead of building from the solution file, the SolutionDir property is undefinded. Add a setting to initialize its location two levels above the project level. Also add an extra path marker ('\') between the SolutionDir and the "".."" that is intended to move the BuildOutput and package directories out of the source directory.",0
1082,Add database class for gvfs,0.5423157,1683: GVFS.SignFiles.csproj: include more DLLs for signing,Add Code Coverage for ShouldHandleFileOpEvent,0
1083,Mac kext: Scoped timing wrapper and user client for extracting profile data,0.48078284,Initial Mac platform native notifications,Failing test name - GVFS.FunctionalTests.Tests.EnlistmentPerFixture.UpgradeReminderTests.UpgradeTimerScheduledOnServiceStart(),0
1084,Delete all macOS projects and platform code,0.9177376,1703: Delete all macOS projects, Add PackFileMaintenanceStep to the queue via a timer that starts in 30 minutes and runs every 12 hours,1
1085,upgrade: add new Microsoft certificate thumbprint,0.9348856,1710: Add new Microsoft certificate thumbprint,,1
1086,LooseObjectStepTests: Be more flexible with loose object count,0.38236848,1652: RepoRegistry: ignore non-existent repos,,0
1087,Removed unnecessary under construction check for connecting to the mount process's pipe,0.5553347,- Multiple mount process reliability bugs have been squashed.,,0
1088,Renaming GitSsl properties as per code review suggestions,0.6649605,"- Post-index-change hook will help ensure consistency between Git and VFS for Git's reckoning of the state of the repository, and eliminate a class of bugs.",,0
1089,Merge pull request #1228: Upgrader - copy entire application directory,0.48774672,- Fixes a copy failure when copying the upgrade tool to its temporary location.,,0
1090,Add 'restore' and 'switch' to list of known git commands,0.6581558,- Built-in git rebase is on by default.,,0
1091,Upgrade update-winget action to v1.4,0.7875401,1738: Bumping version of update-winget action,,1
1092,Mac: Refactor testShouldHandleFileOpEvent test:,0.53502774,1697: Fix functional tests to skip around ProjFS issue,,0
1093,Merge pull request #1763: Better index locking in FastFetch,0.5438591,1730: Fix an issue with FastFetch when deleting files,,0
1094,Add named constant for new line separator in FileBasedCollection,0.43407345,Adds additional logging for folder and file placeholder creation.,,0
1095,LocalGVFSConfig: allow read operations to succeed when config file doesn't exist,0.5601634,1678: BuildGVFSForWindows.bat: use nuget on PATH when possible,,0
1096,Several renamings in LibGit2RepoPool,0.46156806,1741: Fix winget tag specification,,0
1097,Mac ProjFS kext: Further cleans up ShouldHandleFileOpEvent function,0.56935686,1697: Fix functional tests to skip around ProjFS issue,"When GVFS.Service creates its log directory, the log directory created will be given the name of the Service. Name of the Service can change though. When it is launched by Functional tests, its name would be different. Replaced the hard coded log directory name with run-time name.",0
1098,Fix an issue with FastFetch when deleting files,0.9652703,1730: Fix an issue with FastFetch when deleting files,Add category for extra tests to run in PRs,1
1099,Ignoring GitSsl tests on non-dotnet core targets,0.53993845,- Disable commit-graph verify for performance concerns,Service Mac repo-registry & IPC,0
1100,"PR Feedback: Cleanup comments, naming, and method signatures",0.46291947,1747: UpgradeVerb: write deprecation notice,"Enabling GVFS.Service on the Mac. Service now listens for client requests over named pipe and services the requests. Service supports register, un-register and listing of registered repositories. Change details - Added NamedPipeMessages handler and repo-registry handlers to GVFS.Service.Mac - Updated GVFS Service directory on Mac to   ~/Library/Application\ Support/GVFS/GVFS.Service - Updated Service Logs directory to   ~/Library/Application\ Support/GVFS/GVFS.Service/Logs - Repo-registry file location   ~/Library/Application\ Support/GVFS/GVFS.Service/repo-registry - Service helps gvfs mount and unmount commands to register and unregister   respectively with repo-registry - New RequestHandler class to handle client requests. Separate   RequestHandler.Windows.cs to handle Windows specific requests - Moved Paths.GetServiceDataRoot to GVFSPlatform - Renamed GetServiceDataRoot to GetDataRootForGVFS. The old name was confusing   (it was not clear whether the name refered to GVFS.Service's root directory or   GVFS ProgramData directory.) To get ProgramData (or equivalent on Mac)   directory use  GVFSPlatform.GetDataRootForGVFS(). To get GVFS.Services   directory inside ProgramData (or equivalent on Mac) use   GVFSPlatform.GetDataRootForGVFSComponent(""GVFS.Service"") - Added new MacPlatform.Shared.cs (this is needed because the directory   ""~/Library/Application\ Support"" exists on Mac but not on Linux. So   POSIXPlatform.Shared.cs cannot reference that path) - Removed UnderContstructionFlags.supportsGVFSService - Restructured GVFS.Service directory. Mac & Windows specific files in Service   project directory have .Mac & .Windows appended to the filenames. - Created a new noop handler for EnableAndAttachProjFSRequest on Mac",0
1101,gvfs common: remove reference to Nuget.Commands,0.5657649,1678: BuildGVFSForWindows.bat: use nuget on PATH when possible,,0
1102,Update Git to v2.22.0.vfs.1,0.9282099,1736: Update Git to v2.31.1.vfs.0.3,,1
1103,Merge pull request #1746: Delete custom upgrader,0.7825744,1746: Delete custom upgrader,,1
1104,Merge pull request #1257: Mac: Bash Functional Test Hang,0.46530378,1697: Fix functional tests to skip around ProjFS issue,,0
1105,Mac projects should treat warnings as errors,0.56985956,Initial Mac platform native notifications,,0
1106,"More changes for PR feedback, and fix erroneous logging in kext",0.58198273,See the full change log,Test Coverage for ProcesswasSpawnedByRegularUser,0
1107,Add EnlistmentId to RepairVerb,0.42927438,1747: UpgradeVerb: write deprecation notice,Close directory fds when walking directory hierarchy in PrjFSLib,0
1108,Mac EndpointSecurity prototype: Improved debug output & crawler handling,0.5555641,Initial Mac platform native notifications,,0
1109,Add Test for new kext unit testing Framework,0.40607572,"Other bug fixes, engineering improvements, and test reliability fixes.",,0
1110,cleanup,0.6517734,Improves the rate of .gvfsCache cleanup.,"We have two spots in PrjFSLib where we traverse a directory structure, calling opendir on directories encountered, but we never call closedir on those directories before moving onto the next directory. Now both HandleRecursivelyEnumerateDirectoryRequest and RecursivelyMarkAllChildrenAsInRoot properly close directory file descriptors when walking the directory hierarchy. This was detected while standing up the Large Repo Perf Tests on macOS. I noticed that my machine was running out of file descriptors after running a test where thousands of placeholders (files and directories) are created and then deleted. Using lsof -a -p <PID> on the PID of GVFS.Mount, I saw that we had a bunch of file descriptors open for folders that were already deleted.",0
1111,Merge pull request #1103 from jeschu1/check_rename,0.5489057,Pull Requests,Updates for new ProjFS API,0
1112,Add test for sparse with a bunch of changes,0.47708246,General Improvments,Normalize line endings,0
1113,Move validation of background operations completing to common location,0.4491854,- Disable commit-graph verify for performance concerns,,0
1114,ProductUpgrader: inject LocalGVFSConfig dependency,0.54582,1683: GVFS.SignFiles.csproj: include more DLLs for signing,,0
1115,Merge branch 'master' into users/wilbaker/kext_should_handle_cleanup,0.42822596,Includes fixes to config settings for internal users only,,0
1116,Merge pull request #220 Mac: Support basic projection changes and re-categorize functional tests,0.509224,Initial Mac upgrade functionality,,0
1117,Merge pull request #1417: Update mac uninstall script to remove GVFS service directory,0.5575794,The gvfs upgrade command is deprecated. Future upgrades will require using winget or installing directly from the releases page.,,0
1118,Merge pull request #1571: Update Git to have proper version number,0.7070862,1663: Update Git to v2.27.0,Add more time for disposal,1
1119,Win server 2016 FT fixes (4),0.57658684,Various bug fixes and performance improvements,,0
1120,Merge pull request #1102 Rename LocalStorageRoot,0.50978976,Pull Requests,,0
1121,"GetRelativePath does not exist in non-dotnetcore, replacing with my own implementation",0.46915302,1741: Fix winget tag specification,,0
1122,Use 'multi-pack-index' builtin instead of 'midx' to match upstream implementation,0.47824138,- Multi-threaded index reads will improve load time of large .git/index,Make ProductUpgrader more testable,0
1123,Handle KAUTH_FILEOP_CLOSE_MODIFIED as a bit field,0.35085458,1732: Use one NuGet feed,,0
1124,Merge pull request #186 from kyle-rader/bug/fastfetch-force-checkout-test-failure,0.46142727,1697: Fix functional tests to skip around ProjFS issue,exclude .a files from code coverage,0
1125,PR Feedback: Cleanup and flag link as in root,0.4610385,1685: minor path comparison fixup in ProductUpgrader,,0
1126,Merge pull request #557: Mac: Give an error message on CLI when the kext is not loaded,0.5460276,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,,0
1127,No longer set PATH for git process and remove use of gvfs hooks root,0.6195731,- git status now supports an option to avoid doing its ahead/behind calculations. This allows the user to decide if they want to skip that overhead if all they care about is the status of the working directory.,,0
1128,Add method to remove all entries for a folder,0.52332294,1703: Delete all macOS projects,,0
1129,Update Git to v2.27.0,0.93419623,1737: Update Git to v2.32.0,,1
1130,PrjFSKextLogDaemon: Don't log every time a dropped kext message is detected,0.48399335,- Disable commit-graph verify for performance concerns,,0
1131,Decrease telemetry volume from VFS for Git.,0.64066654,"* Sped up GVFS's parsing of the git index, shaving off 2-3 seconds for a large index file",,0
1132,Merge pull request #1415: Update Git to include octopus merge bugfix,0.51663136,Bug Fix: Fixes a bug with gvfs upgrade that causes versions v1.0.20112.1 from upgrading from private feeds.,,0
1133,Merge pull request #1550 from Set git config autoRefreshIndex to true,0.56869113,- Built-in git rebase is on by default.,,0
1134,NuGetUpgrader: inject LocalGVFSConfig dependency,0.5746734,1678: BuildGVFSForWindows.bat: use nuget on PATH when possible,Check the projection for the folder before attempting to delete,0
1135,Shutdown cleanly,0.45325252,- Better recovery from a process that terminates without releasing the GVFS lock.,POSIX: Change default location of .gvfsCache folder from /.gvfsCache to ~/.gvfsCache,0
1136,Add message to sparse disable,0.46356428,1674: Config: disable status.submoduleSummary,,0
1137,Add failing unit test for #1743,0.41221854,1669: Docs: more troubleshooting and FAQs,AutomaticallyDisposesAfterNoUse additional test logging,0
1138,Tracer: do not crash when unable to find git install,0.64197636,* Improve error message from gvfs upgrade if the Git installation could not be found.,,0
1139,"Revert ""Remove all reference to looseObjectCount in LooseObjectStepTests""",0.5489866,1652: RepoRegistry: ignore non-existent repos,"use ""which"" to locate git installation",0
1140,Better information in logs for sparse when using prune,0.44621187,- Log files now include UTC offset.,Mac: vnode cache,0
1141,Upgrade: introduce platform strategy,0.5242074,Major updates:,,0
1142,"Revert ""LooseObjectStepTests: Be more flexible with loose object count""",0.49618462,1652: RepoRegistry: ignore non-existent repos,"About the test failure - when Upgrade reminder marker file is created by the Service, git hooks should start showing reminder messaging. That does not seem to happen sometimes. It is not clear whether it was a failure in the Service (the Service was not able to create the marker file) or if it was the git hooks which failed to display the reminder. Added better logging - Log details on failures. Updated Service to log message when upgrade reminder marker file is created or deleted.",0
1143,Only fail config reads that have both non-warning output on stderr and non-zero return codes,0.43782705,- Disable commit-graph verify for performance concerns,,0
1144,PostFetchStep: fix --expire-time option,0.6191112,1647: Fix commit-graph expiration,Added better logging - Log details on failures. Updated Service to log message when upgrade reminder marker file is created or deleted.,0
1145,sparse: check for not recursive matches when finding dirty files,0.43860963,A case where FastFetch would not download a small number of files has been fixed.,Test Coverage for UseMainForkIfNamedStream,0
1146,Rename gvfs.sqlite to VFSForGit.sqlite as well as constants,0.5549169,"- In the future, VFS for Git will automatically upgrade as new bits become available in the configured ring, eliminating the need to run gvfs upgrade to ",,0
1147,Merge pull request #445 Mac: Run GitRepoTests with and without validating the working directory during setup,0.53143656,Git commands are now allowed to delete an empty directory,,0
1148,Update Git to include octopus merge bugfix,0.56869996,1733: Update Git to include 2.31.1,,0
1149,Revert unnecessary changes,0.6243254,Major Changes,,0
1150,Merge pull request #1740: Skip launching UI if running unattended,0.7438332,1740: Skip launching UI if running unattended,"Because attempting to delete a folder placeholder is an expensive operation especially when there are hundreds of thousands, we want to reduce the number that we need to try to delete.  There are a few criteria for attempting the delete. First if the folder is in the folderPlaceholdersToKeep list it will not be deleted.  Then if one of the following is true it will try to delete the folder.  If the path is no longer in the projection If the path is in the projection but is a file and not a folder If the path no longer exists on the file system - this is in the case of tombstones on windows.",1
1151,Merge pull request #1058: tweak GVFS.props,0.6079911,- We have improved how GVFS handles enlistments in junctions and mapped to a drive letter.,Mac: Check the return value of stat in PrjFS_DeleteFile,0
1152,Rename PlaceholdersTests to PlaceholdersTableTests,0.40996513,1652: RepoRegistry: ignore non-existent repos,,0
1153,Mac dtruss: Adds proper formatting for tracing posix_spawn,0.48583692,1744: Overhaul build and project systems and drop Mac/POSIX code,,0
1154,Merge pull request #1382: Update Git to include more tracing updates,0.5975281,1663: Update Git to v2.27.0,,0
1155,Don't send the .git folder for dehydration when pruning,0.47381607,- git status now supports an option to avoid doing its ahead/behind calculations. This allows the user to decide if they want to skip that overhead if all they care about is the status of the working directory.,,0
1156,Updated Readme.md with installation instructions,0.8077454,1750: Update Readme.md,,1
1157,remove GetInstallerExtension,0.54014814,1668: ProductUPgradeTimer: remove unacceptable Environment.Exit(),Improve WriteWithoutClose \ CreateFileWithoutClose Stability,0
1158,Merge pull request #887 from pmj/mac-prjfs-perf-counter-name-verification,0.448506,1683: GVFS.SignFiles.csproj: include more DLLs for signing,,0
1159,Merge pull request #160 from sanoursa/copyright,0.45966935,Pull Requests,Mac ProjFS: Moves all relative path calculations to user space.,0
1160,Use ConcurrentBag when updating projection on Windows,0.43542376,1678: BuildGVFSForWindows.bat: use nuget on PATH when possible,,0
1161,Merge pull request #1052: GVFS.props: Use better path concatenation and initialize SolutionDir,0.578601,- We have improved how GVFS handles enlistments in junctions and mapped to a drive letter.,,0
1162,Get rid of the unneed 'backup' index idea - it's always working on a scratch index.,0.44438934,"- Further optimizations to GVFS's index parsing, saving time on commands that need to reproject (like checkout).",,0
1163,Fix functional test failures due to change in ModifiedPathsShouldContain behavior,0.5943196,"Other bug fixes, engineering improvements, and test reliability fixes.",,0
1164,Upgrade: make reminder deterministic for tests,0.5333231,- Disable commit-graph verify for performance concerns,Make sure fastfetch.dll is copied to the correct location to run tests,0
1165,Merge pull request #1162: Relax LooseObjectStepTests from exact object counts,0.47144192,Pull Requests,,0
1166,Separate copy and delete in dehydrate folders to give better error messages,0.48763213,1689: Make delete docs more verbose,Remove Code Coverage Exclusion for ShouldIgnoreVnodeType,0
1167,Mac: Update and delete placeholder functions should check if file is still a placeholder,0.52097833,Adds additional logging for folder and file placeholder creation.,,0
1168,Merge remote-tracking branch 'msft/master' into mac_expand_b4_delete,0.53431976,1703: Delete all macOS projects,,0
1169,Mac PrjFS: Adds static verification perf counter name initialization,0.46330622,Initial Mac platform native notifications,,0
1170,Add test to make sure the USN for a folder changes,0.60452354,1664: Update USN journal entries for projected folders,"Un-installer was not deleting launchd plist files when LaunchAgent unload fails. This was causing a dangling launchd plist file that was pointing to VFSForGit assemblies that no longer exist on disc. Launchd disables the VFSForGit services, causing future VFSForGit installs to fail. Updated un-installer to remove the launchd plist file even when the unloading fails. When such a failure happens, user will have to manually logout and re-login for the un-install to be complete. Fixes #1005",0
1171,Add DiskInfo to HeartBeat,0.35611826,1710: Add new Microsoft certificate thumbprint,"Un-installer was not deleting launchd plist files when LaunchAgent unload fails. This was causing a dangling launchd plist file that was pointing to VFSForGit assemblies that no longer exist on disc. Launchd disables the VFSForGit services, causing future VFSForGit installs to fail. Updated un-installer to remove the launchd plist file even when the unloading fails. When such a failure happens, user will have to manually logout and re-login for the un-install to be complete.",0
1172,"Make TelemetryDaemonEL, JsonTracer thread-safe + async",0.40044966,1658: ProjFSFilter: Be more robust to missing PowerShell,Add additional diagnostics to GitStatusAfterRenameFileIntoRepo functional test,0
1173,rework how Heartbeat event metadata is structured.,0.4101078,See the full change log,Added Code Coverage to build,0
1174,Enlistment -> drop,0.41794622,- Improvements to compact and maintain the ModifiedPaths.dat database to help mitigate the problem of command perf degrading over time in an enlistment.,NuGetUpgrader: defer credential acquisition,0
1175,Merge pull request #1466 from Better installer logs,0.47998187,"The merge strategy default is changed from recursive to ort which should present significant performance improvements for commands such as git merge, git rebase, and git cherry-pick. Huge thanks to external contributor @newren for creating this new merge strategy!",,0
1176,Enable display of Automount notifications,0.5320325,Initial Mac platform native notifications,,0
1177,Add tests for ShouldIgnoreVnodeType,0.44742227,1652: RepoRegistry: ignore non-existent repos,,0
1178,Add PreDeleteFromRename Message Type,0.51991355,1674: Config: disable status.submoduleSummary,,0
1179,Clean up code that was referring to sparse-check our always_exclude,0.49677232,Improves the rate of .gvfsCache cleanup.,The approve / reject credential methods could fail - make them follow the Try* pattern.,0
1180,Add unit tests for SparseTable and pull out some common code to base class (#1379),0.44036806,1666: Docs: start basic template,,0
1181,Merge pull request #1213: Prefetch tests: Delete multi-pack-index before indexing a pack,0.52685386,* git multi-pack-index verify would run slowly if the objects directory had more than 2048 packfiles.,Add more logging when test gets access denied from moving src folder,0
1182,Merge pull request #913: Additional Kext Tests,0.506861,Pull Requests,"VFSForGit installer was trying to mount repositories that were registered for auto-mount by previous test runs. Subsequent Installers used to fail sometimes, with error 17 while trying to auto-mount such repositories. Un-installer was already removingProgramData\GVFS\GVFS.Upgrade directory. Updated it to rather remove ProgramData\GVFS so that repo-registry and other state info associated with current install is removed, before the next tests are run. Fixes #911",0
1183,Merge pull request #181 Mac: Add PreDelete Notification,0.53235,Pull Requests,,0
1184,Mac kext: Sends hardlink notifications to both affected providers,0.47400358,Initial Mac platform native notifications,"VFSForGit installer was trying to mount repositories that were registered for auotmount by previous test runs. Subsequent Installers used to fail sometimes, with error 17 while trying to auto-mount such repositories. Un-installer was already removing ProgramData\GVFS\GVFS.Upgrade directory. Updated it to remove ProgramData\GVFS so that repo-registry and other state info associated with current install is removed, before the next tests are run. Fixes #911",0
1185,Mac ProjFS kext: Hardcodes offline I/O process array to fixed length of 128,0.45153743,1730: Fix an issue with FastFetch when deleting files,,0
1186,Deny I/O when file attribute read fails,0.42424595,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,,0
1187,Merge pull request #1147 Update functional test documentation,0.5188856,Pull Requests,,0
1188,Bind to correct method to free LibGit2 repos,0.5126382,1733: Update Git to include 2.31.1,This change removes the relative path calculation from the kext and changes the native ProjFS library to expect absolute paths in messages from the kernel. The absolute path is passed through to event handlers where in many cases the logic for re-combining the relative path into an absolute one could be removed as well.,0
1189,Load the correct stat implementation per platform. Needs further cleanup,0.50970286,Improves the rate of .gvfsCache cleanup.,Mac kext: Replaces use of OSAtomic with standard C11 atomic operations,0
1190,Update Git to vfs-2.21.0,0.9357568,1712: git-vfs: update to Git 2.30.0,"Some constants differ per @chrisd8088's comment here: https://github.com/Microsoft/VFSForGit/pull/926#discussion_r265886976 When we add the Linux project, we should factor out of POSIXFileBasedLock what's Mac-specific.",1
1191,Perf improvements and bug fixes:,0.8949551,Perf improvements:,,1
1192,output unit tests to .xml,0.28745282,1683: GVFS.SignFiles.csproj: include more DLLs for signing,,0
1193,Delete any existing Tools directory before creating a new one,0.5670446,Git commands are now allowed to delete an empty directory,,0
1194,Update Git to v2.27.0.vfs.1.0,0.93112755,1736: Update Git to v2.31.1.vfs.0.3,Test HandleVnodeOperation,1
1195,Mac ProjFS kext: Adds enum for darwin major versions,0.46057034,"A new config setting allows updating USN journals, which is needed when using BuildXL with VFS for Git.",,0
1196,Merge pull request #1107 Refactor for easier conversion to sqlite,0.5219275,Pull Requests,,0
1197,"Allow running from devenv prompts, put nuget on the path",0.6121464,1678: BuildGVFSForWindows.bat: use nuget on PATH when possible,,0
1198,Rename old service name,0.45085335,  - Now scopes credential.useHttpPath to just dev.azure.com hostname,,0
1199,Merge pull request #1130:Mac: Don't Fill Placeholders & Properly Remove Placeholder Flag,0.4429034,Pull Requests,,0
1200,Merge pull request #552: Early exit a noop blob prefetch,0.55904377,Pull Requests,,0
1201,Merge pull request #981: Tweak upgrade notification message,0.5116563,1711 [HOTFIX] Fix upgrader's expectation of a single certificate,,0
1202,Mac dtruss: Fix for non-command regressions & dangling subshell,0.53742075,1674: Config: disable status.submoduleSummary,,0
1203,PowerShellRunner: List the path name that failed to hydrate,0.48332703,1658: ProjFSFilter: Be more robust to missing PowerShell,,0
1204,Add unit tests for the RemoveAllEntriesForFolder method,0.45062876,1652: RepoRegistry: ignore non-existent repos,,0
1205,Merge pull request #1394 Increasing precision of timestamps being logged,0.50312984,"- Further optimizations to GVFS's index parsing, saving time on commands that need to reproject (like checkout).",,0
1206,GitMaintenanceStep: delete commit-graphs folder before rewriting,0.70984375,Git: Includes incremental commit graph,,1
1207,GitCleanupStepTests,0.61632466,Git: Includes incremental commit graph,,0
1208,Introduce EditorConfig to help define consistent coding style,0.44549036,1666: Docs: start basic template,Fetch releases fix,0
1209,Hydrate executables,0.43919277,- No-op gvfs prefetch --hydrate performance is dramatically improved,,0
1210,Register git for VFS as the git Visual Studio 2019 uses,0.79306626,- A couple of fixes for using VS Code on top of VFS for Git.,"HttpClient can throw a TaskCanceledException to indicate a timeout in certain situations. We do not currently handle this exception, which was crashing the process (either the GVFS.Service or ProductUpgrader).",1
1211,Added CanDownloadNewestVersionFailsIfDirectoryIsMissing unit test,0.4887672,1674: Config: disable status.submoduleSummary,"The OSAtomic APIs are not available in that form in user space, and so caused errors when linking the testable kext. The similar user space equivalents are already deprecated in any case, so replacing their use with the standardised C11 operations is the sensible choice.",0
1212,"Mac kext: fixes theoretical KP, moves message sleeping into mutex",0.38755664,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,Tweak upgrade notification message,0
1213,Add new hook for post index changed,0.46729553,"- Post-index-change hook will help ensure consistency between Git and VFS for Git's reckoning of the state of the repository, and eliminate a class of bugs.",,0
1214,Mac: Add version information to kext and PrjFS logging daemon,0.57898295,"A new config setting allows updating USN journals, which is needed when using BuildXL with VFS for Git.",Install GVFS.Service as a Launch Agent on Mac  Added new Launchd plist for GVFS.Service.  Updated Mac installer to auto-load the Service as a User agent for all logged in users.  Updated Uninstaller to unload the service.  Also added title text to Mac installer.,0
1215,Merge branch 'master' into users/wilbaker/pre_delete_notification,0.44799584,1746: Delete custom upgrader, Added new Launchd plist for GVFS.Service. Updated Mac installer to auto-load the Service as a User agent   for all logged in users Updated installer preflight to un-load previously installed   service instances Updated Uninstaller to unload the service for all active users Also added title test to Mac installer,0
1216,Introduce OrgNuGetUpgrader,0.53036225,1666: Docs: start basic template,Pass session id through to mount process for correlation with git trace2,0
1217,Mac ProjFS kext: Unit test for rename blocking on offline roots,0.50111836,1697: Fix functional tests to skip around ProjFS issue,,0
1218,Fix update-index tests,0.68749547,"Other bug fixes, engineering improvements, and test reliability fixes.",,0
1219,Update dependencies for the PostIndexChangedHook,0.5717956,Update components included with internal distribution,,0
1220,Merge pull request #625: remove trailing whitespace,0.4845879,Pull Requests,,0
1221,Merge pull request #1685: minor path comparison fixup in ProductUpgrader,0.82368195,1685: minor path comparison fixup in ProductUpgrader,Service porting to Mac,1
1222,PR Feedback to cleanup disposing and returning connections to the pool,0.47083998,Improves the rate of .gvfsCache cleanup.,"Created GVFS.Service.Mac and GVFS.Service.Windows. Mac service performs no useful function. Removed Windows specific service entry methods from GVFS.Service.cs, on the Mac Service will get launched by launchd like any other regular program. Updated dependent Windows only projects to reference the new renamed GVFS.Service.Windows.",0
1223,Merge pull request #548: Prefetch code cleanup,0.55328715,Pull Requests,"git trace2 creates a session id for the git command and by passing this through to the mount process, logging will be able to have this correlation id to be able to join the git trace2 data with any logged data from the mount process.",0
1224,Mac kext: adds RWLock_DropExclusiveToShared wrapper function,0.4442542,1675: PreCommandHook: don't lock pack-objects,Fix GVFS.FunctionalTests.Windows so that they can be run from the IDE,0
1225,Merge pull request #477 Easy fixes for 'git push' performance,0.6523329,"* Added a git config setting to disable the calculations for detecting force pushes during 'git fetch' and 'git pull'. That calculation can take 10's of seconds on a large graph, and users can now opt out of it.",Fix Mac Profiling build,0
1226,Merge pull request #1511 Add prune argument to the sparse verb,0.474088,Pull Requests,Fix credential interactions,0
1227,ProductUpgrader: refactor TryCreateProductUpgrader,0.5888082,1685: minor path comparison fixup in ProductUpgrader,,0
1228,Extend GitRepoTests to allow include mode (#1331),0.59082204,Includes Git v2.27.0,Add timings to different parts of updating placeholders,0
1229,Turn off Commit Graph Verify,0.8771789,- Disable commit-graph verify for performance concerns,Fix EventMetadata construction in TryDownloadPrefetchPacks,1
1230,Merge pull request #1610 dehydrate: skip mount validation steps,0.4753217,Pull Requests,,0
1231,ensure POSIXFileBasedLock isn't reused blindly,0.5092416,1675: PreCommandHook: don't lock pack-objects,"In commit e41f25f7, the username and password was including in the call to reject credentials. However, with GCM 1.18.5, this does not result in the credentials being rejected. This is due to a behavior with the main credential helper - Credentials acquired from Windows GCM for dev.azure.com urls are not round-tripable. A credential acquired via credential fill from Windows GCM for a dev.azure.com URL cannot successfully be rejected when including the username / password. To make this work, only reject credentials by URL. The downside is that we might attempt to erase a credential that is not the current credential for a URL, but this is a tradeoff to have the scenario work in general. When this behavior is corrected in the credential helper used by VFS4G, we can make reject credentials more specifically.",0
1232,Clean up some Mac TODOs,0.6207428,1703: Delete all macOS projects,"The git credential commands are not consistent in whether they set usehttppath or not. This can lead to inconsistencies in how credentials are generatated and cleared. VFSForGit might retrieve / create credentials using the full http path, but clear with the only the host name. This leads to the incorrect behavior where VFSForGit is unable to erase bad / stale credentials. Additionally, only dev.azure.com URLs need to set the useHttpPath setting - so scope it to these URLs.",0
1233,Update Microsoft.Data.Sqlite packages to version 2.2.4.0,0.5466062,1660: Update Git to include v2.26.2,Log when a path can't be looked up from fsid,0
1234,Merge pull request #260 Don't update ModifiedPaths.dat for hard links created outside of repo,0.4835472,Pull Requests,[Port from releases/shipped] Turn off Commit Graph Verify,0
1235,Quote paths when calling the command line,0.3183667,1689: Make delete docs more verbose,,0
1236,Force untracked files to be shown when running status for Dehydrate verb,0.43757913,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,,0
1237,Mac kext: Write canonical root path to user client registry entry,0.42965633,Initial Mac platform native notifications,,0
1238,Update messages to be more consistent,0.5408027,"- Post-index-change hook will help ensure consistency between Git and VFS for Git's reckoning of the state of the repository, and eliminate a class of bugs.",,0
1239,Add FileOp specific ShouldHandleFileOpEvent helper to kext,0.4595647,Adds additional logging for folder and file placeholder creation., temporarily remove until performance issues are addressed,0
1240,Expand delay in unit test,0.41254133,Performance Improvements,,0
1241,Adding --stdin-files-list and --stdin-folders-list flags,0.4951868,Adds additional logging for folder and file placeholder creation.,,0
1242,Merge pull request #281 from pmj/performance-tracing,0.5085715,Pull Requests,"For ease of comparsion with the original Mac-only source files, we retain the line endings on the refactored POSIX common files to exactly match the original ones.",0
1243,Check the return value of stat in PrjFS_DeleteFile,0.46120453,1697: Fix functional tests to skip around ProjFS issue,,0
1244,Porting FunctionalTests.LockHolder to .netcore,0.50972426,1726: Config: commitGraph.generationVersion=1, Moved ProjFS to Managed and Native Version,0
1245,PhysicalFileSystem.TryWriteAllText,0.4719024,1666: Docs: start basic template,,0
1246,tidy same-filesystem func test category comments,0.4306969,1685: minor path comparison fixup in ProductUpgrader,,0
1247,Fix StyleCop violations in PrefetchStep.cs and treat warnings as errors,0.48419347,1674: Config: disable status.submoduleSummary,,0
1248,Add .vsconfig file to declare required VS components,0.526157,- A couple of fixes for using VS Code on top of VFS for Git.,"Porting FunctionalTests.LockHolder to .netcore - Migrated the project file to new format  - Removed GVFS.Platform.Windows dependency  - Directly using WindowsFileSystem.Shared.cs  - Updated GitHelper to launch GVFS.FunctionalTests.LockHolder.dll using dotnet command. Previously it was an exe and launched directly  - Replaced WindowsPlatform code (GVFSPlatform.Instance.GetNamedPipeName) with private implementation  - Removed Categories.MacTODO.NeedsLockHolder 7.Implemented IsProcessActiveImplementation on MacPlatform. Fixes #701, #150",0
1249,Config: disable status.submoduleSummary,0.9287654,1674: Config: disable status.submoduleSummary," Migrated the project file to new format 2.Removed GVFS.Platform.Windows dependency 3.Directly using WindowsFileSystem.Shared.cs 4.Updated GitHelper to launch GVFS.FunctionalTests.LockHolder.dll using dotnet command. Previously it was an exe and launched directly 5.Replaced WindowsPlatform code (GVFSPlatform.Instance.GetNamedPipeName) with private implementation 6.Removed Categories.MacTODO.NeedsLockHolder 7.Implemented IsProcessActiveImplementation on MacPlatform.  Fixes #701, #150",1
1250,Win server 2016 FT fixes (3),0.56940126,Various bug fixes and performance improvements,Update GVFS.Service to log why repos were determined to be invalid,0
1251,Make GVFS.Upgrader rely on GVFS.cs.props to fix incremental build issue,0.70622075,"- Lots of bug fixes to make GVFS's file writes (e.g. to its database files) more reliable, even in the face of power loss",Additional Kext Tests,1
1252,Update PrjFSKextLogDaemon to forward messages to message listening service,0.47451207,1658: ProjFSFilter: Be more robust to missing PowerShell,Mac: Add PreConvertToFull when Write Access is requested,0
1253,Merge pull request #1735 from ldennington/bump-release-winget,0.5492436,1738: Bumping version of update-winget action, VirtualizationRoot_IsValidRootHandle VirtualizationRoot_VnodeIsOnAllowedFilesystem ShouldHandleVnodeOpEvent,0
1254,Merge pull request #1566 dehydrate: skip installing hooks when re-mounting,0.4425235,Pull Requests,,0
1255,Merge pull request #867: Upgrade: handle not finding git installation,0.7125392,* Improve error message from gvfs upgrade if the Git installation could not be found.,,1
1256,"On a successful blob prefetch, save the parameters used. If the next prefetch has the same params, early exit.",0.5797503,1745: do not exit early if no blobs found for a period when prefetching,,0
1257,Fixing a typo,0.4802412,- Other bug fixes,,0
1258,Merge pull request #898: Upgrader: reacquire credentials on auth failure,0.5750444,- Fixed several incorrect interactions with credentials,Add check for existing pipe and better error messaging,0
1259,Merge pull request #505 from jeschu1/streamnotreadable,0.6157751,Pull Requests,,0
1260,Mark PrefetchVerbTests.cs as NonParallelizable,0.5144827,1652: RepoRegistry: ignore non-existent repos, This will mark the file as D in placeholders.dat and insert into modifiedPaths.dat This cleans up the existing ModifiedFile event which was also being used as the initial switch from placeholders.dat,0
1261,Merge pull request #553 Update git version to 2.19.1.gvfs.1.7.g43ac102,0.6996288,* Improve error message from gvfs upgrade if the Git installation could not be found.,"When cloning and the GVFS.Mount process somehow was left running but the enlistment directory was deleted, the clone would hang because the hook was communicating to the wrong pipe.  The only way we have found to get into this state is by formatting the drive that has a mounted repo and then clone to where the mounted repo was.  This will remove all directories allowing the clone to proceed but leave the mount process running with the pipe listening. This change will check for a listening pipe when cloning to determine if there is still a running mount process that needs to be stopped before the clone can run.",0
1262,Enable building with Visual Studio 2019,0.43274918,1679: BuildGVFSForWindows.bat: use nuget on PATH,,0
1263,Merge pull request #1751: Update Git to v2.33.0,0.6993549,1663: Update Git to v2.27.0,,0
1264,Merge pull request #1176 from Platform native notifications PR_2,0.48552787,Initial Mac platform native notifications,Mac kext: Unit tests for VirtualizationRoot_FindForVnode,0
1265,Add interface for interaction with the placeholder database,0.64284754,Moves placeholder database into SQLite for better performance.,,0
1266,build: drop more Mac/POSIX code,0.8334725,1744: Overhaul build and project systems and drop Mac/POSIX code,,1
1267,Add initial set of build steps for Mac OS,0.62018406,Initial Mac upgrade functionality,"Three new tests for VirtualizationRoot_FindForVnode:  Finding the root for a file in an offline repo which has previously not been seen. Finding the root for a file in an offline repo which has previously not been seen, then recycling and recreating the repo root vnode, and finding the root for another file in the same repo. Finding the root for a nested subdirectory in an offline repo which has previously not been seen.",0
1268,"Merge pull request #683: Use a single LibGit2Repo for multiple requests, dispose if left unused",0.61940366,Pull Requests,"Rather than adding ever more parameters for the creation of mock vnodes, this allows us to set only the attributes we care about with just one overload.",0
1269,New features and bug fixes:,0.8607263,- Other bug fixes,,1
1270,Current snapshot of GVFS,0.7019438,Instructions for installing and using GVFS are available at https://github.com/Microsoft/GVFS,,1
1271,Merge pull request #1647: Fix commit-graph expiration,0.8505572,1647: Fix commit-graph expiration,,1
1272,Mac kext unit testing: Removed the need for explicit testable symbol list,0.4202475,Initial Mac platform native notifications,,0
1273,Accept a default for GitProcess.ConfigResult.TryParseAsString(),0.5988112,- Built-in git rebase is on by default.,"It is now possible to use mount::CreateVnodeTree() to generate the leaf vnode for a particular path, as well as any intermediate vnodes to the root of the file system which previously did not already exist. Additionally, there are now working implementations of vnode_getparent() and vnode_isvroot().",0
1274,Merge pull request #1524: GitMaintenanceStep: delete commit-graphs folder before rewriting,0.6445682,Git: Includes incremental commit graph,Mac kext: Fixes potential issues flagged by clang static analyser,0
1275,Close file descriptors when done with them as part of prefetch --hydrate,0.5433525,- gvfs prefetch learned how to take --files-list.,,0
1276,Mac PrjFS: New kext logging daemon,0.5015738,1658: ProjFSFilter: Be more robust to missing PowerShell,Change background maintenance failures from error to warning,0
1277,Merge pull request #787 from Stop reading ring info from Nuget feedurl,0.61508924,1732: Use one NuGet feed,,0
1278,Code cleanup and add comments,0.4226764,1734: Adding winget workflow,Mac PrjFS: Countermeasures for deadlocks with Antivirus software,0
1279,Update the readme to indicate the rename is in progress,0.5760365,1750: Update Readme.md,"The functionality of this function has been rolled into VirtualizationRoot_GetActiveProvider, and there are no longer any callers for the original function.",0
1280,Pass session id through to mount process for correlation with git trace2,0.8002291,  - Correlate trace2 stream with VFS for Git stream with the Git session ID.,"In the kext, only allow processes owned by unprivileged users, or processes spawned by unprivileged users to cause files to be hydrated. Antivirus typically runs as root, while repos are owned by non-privileged users, so this simply denies AV services access to un-hydrated files. If a user launches a process via sudo or setuid root executable, this will still be allowed to hydrate because a process in the parent chain will be owned by the unprivileged user.",1
1281,Use platform path separators instead of hard coded,0.47969243,Upgrade supports an anonymous endpoint to decouple rollouts to different engineering systems.,"In the provider, report hydration success back to the kext without waiting for close() to return. This avoids delaying on other kexts' KAUTH_FILEOP_CLOSE callbacks.",0
1282,Minor cleanup,0.6224486,Improves the rate of .gvfsCache cleanup.,Mac kext: Move provider messaging to separate source file,0
1283,Mac: New folder notifications,0.6929625,Initial Mac platform native notifications,"KauthHandler.cpp has thus far covered 2 main areas of responsibility:  The handler callback functions for kauth listeners (as the name suggests) Sending & waiting for messages to providers  The 2 blocks of functionality are almost entirely independent from one another, and as KauthHandler.cpp is a large file, it makes more sense to move the messaging aspect to a separate source file. There are no functional changes.",0
1284,Fixing spelling and naming,0.38797438,1747: UpgradeVerb: write deprecation notice,Update git to 2ab7360 and include new Git Credential Manager,0
1285,Add functional tests for LsTree parsing issue,0.42131233,1697: Fix functional tests to skip around ProjFS issue,Remove isMountComplete check,0
1286,Merge pull request #1234 from jamill/upgrader_tasks/platform_tasks,0.5642355,Pull Requests,,0
1287,Turn on Rename tests for Mac,0.5880581,Initial Mac upgrade functionality,"Updates git and dependencies. The main update is to Git Credential Manager, which includes a fix to erase credentials when requested. Git was also updated with a change to block filters and EOL conversions. git updated to commit: 2ab7360 https://github.com/Microsoft/git/commit/2ab73608a0c5baf0c979cd767ea15e7404771bbe",0
1288,Add build badge for Windows and Mac CI builds,0.5221145,1710: Add new Microsoft certificate thumbprint,,0
1289,Simplify NamedPipeStreamReader logic,0.46633554,1734: Adding winget workflow,Upgrader: reacquire credentials on auth failure,0
1290,Merge pull request #1482 from pmj/mac-projfs-1479-1480-no-follow-symlinks,0.505819,Pull Requests,"When Nuget settings (upgrade.feedurl & upgrade.feedpackagename) are not available in gvfs config, then an attempt to read (or write) those missing values will cause gvfs config read/write to exit with error code 3. UpgradeReminder FT tries to 1. read existing nuget config, 2. delete it, 3. execute tests and then 4. restore previously read Nuget config. The failure used to happen in step 1. while attempting to read a config key which is not available in gvfs config file. Fixes #852",0
1291,Mac: Moves reverse-DNS identifiers to org.vfsforgit prefix,0.47619462,- We have improved how GVFS handles enlistments in junctions and mapped to a drive letter.,,0
1292,Merge pull request #1043: Add Code Coverage for ShouldHandleFileOpEvent,0.5089125,1674: Config: disable status.submoduleSummary,,0
1293,Merge pull request #1200 from pmj/mac-kext-testing-assert-integration,0.44060707,1697: Fix functional tests to skip around ProjFS issue,"When Nuget settings (upgrade.feedurl & upgrade.feedpackagename) are not available in gvfs config, then an attempt to read (or write) those missing values will cause gvfs config read/write to exit with error code 3. This will cause UpgradeReminder FT to fail on PCs where Nuget is not configured. Fixes #852",0
1294,use working dir backing root for dehydrate backups,0.43279383,"A background task will now compress and deduplicate the pack-file data in the shared object cache, resulting in more sustainable disk usage",Mac PrjFS: Adds static verification for perf counter name initialization,0
1295,Add include folder interface to the FileSystemCallbacks constructor,0.6824789,Adds additional logging for folder and file placeholder creation.,Catch exceptions when trying to set Visual Studio registry key,0
1296,Make LaunchPrefetchJobIfIdle thread safe,0.5393926,1740: Skip launching UI if running unattended,"Mac kext: Expanded test infrastructure, added virtualization root unit tests",0
1297,Mac kext: Removes now-obsolete VirtualizationRoot_PIDMatchesProvider,0.54456216,1668: ProductUPgradeTimer: remove unacceptable Environment.Exit(),[master] Use a thread-safe collection for the failed listeners in JsonTracer,0
1298,Merge pull request #594 from jamill/build_fix,0.51426464,Pull Requests,helper method.,0
1299,GitMaintenanceStepTests: Combine utility subclasses,0.5634165,"- Post-index-change hook will help ensure consistency between Git and VFS for Git's reckoning of the state of the repository, and eliminate a class of bugs.",,0
1300,PR Feedback: Use different GitIndexEntry methods when building new projections and running background tasks,0.62844074,Git: Includes incremental commit graph,There are some cases when the registry key that is being written to is volatile and will get the error message: Cannot create a stable subkey under a volatile parent key. This change will catch exceptions and continue to mount since the registry key is not required for VFSForGit to work.,0
1301,Assert that a 0 input size creates a positive pool size,0.3213774,- Improved the memory usage during MIDX computation.,"The mock vnode APIs were previously declared as friend functions. This changes most of them to simply access public members of the mock vnode class, along with some other minor tweaks.",0
1302,Update GVFS.Service to log why repos were determined to be invalid,0.7133995,* Improve error message from gvfs upgrade if the Git installation could not be found.,,1
1303,Added Minimum Version Test,0.5170218,"Other bug fixes, engineering improvements, and test reliability fixes."," The search loop counter variable could overflow if the maximum array size (32768) was hit. This could lead to memory corruption and/or infinite loops. If the virtualization root array could not be grown, 0 was returned instead of an appropriate errno.  These are unlikely to happen in practice but need to be fixed nonetheless.",0
1304,Add untracked files from reset mixed to ModifiedPaths.dat,0.50093544,- The installer now unmounts and remounts existing repos automatically,,0
1305,Check modified paths for parent directories before adding,0.49820188,Adds additional logging for folder and file placeholder creation.,"In order to create better tests for the provider registration code, the test doubles for the vnode and mount point/vfs kernel APIs needed to be much more sophisticated, and turned into proper mock objects. This change implements basic working implementations for the vnode and mount point APIs, as well as minimal stubs for locks and memory allocation functions. All the mocks are also moved to appropriate files. There is also a facility for tracking calls to verify whether or not a function was called as a result of a test. This is not yet widely implemented in the various functions and does not yet support checking arguments.",0
1306,Update unit tests to use mock download path,0.5112483,1685: minor path comparison fixup in ProductUpgrader,There is a vnode iocount bug lurking somewhere in the virtualization root/provider registration code. This is a first attempt at creating unit tests for that code in order to flush out the bug.,0
1307,Merge pull request #885: Updates for new ProjFS API,0.6014184,1658: ProjFSFilter: Be more robust to missing PowerShell,"The PrjFSProviderUserClient class, being an OSObject based class is near-impossible to use properly from user space. This moves all uses of it from the rest of the kext behind free functions which we can easily replace with mocked versions when unit testing. VirtualizationRoots.cpp then only needs a forward declaration of the class.",0
1308,Remove code for writing signature,0.44723082,1689: Make delete docs more verbose,Add contributing guidelines to VFSForGit repo,0
1309,Add additional functional test and update PrjFS_WritePlaceholderDirectory to return a more specific error message,0.61520827,1697: Fix functional tests to skip around ProjFS issue,,0
1310,Merge pull request #839 from pmj/mac-root-unit-tests,0.44517088,1697: Fix functional tests to skip around ProjFS issue,"On the Mac, the GVFS standalone installer and the combined GVFS & Git meta installer, would check if any GVFS of git processes are running. If they are running, then installer would display error messaging and will not continue.",0
1311,Mark the new test as Windows-only,0.4219249,1710: Add new Microsoft certificate thumbprint,"On the Mac, the GVFS installer and the combined GVFS & Git meta installer, would check if any GVFS of git processes are running. If it is running, then installer would display error messaging and will not continue. Blocking process list - ""gvfs"", ""gvfs.mount"", ""git"", ""gitk"", ""wish"". Installer also unloads previously loaded PrjFlt kexts. Fixes #881",0
1312,Merge pull request #738 from jamill/nuget_auth,0.5982305,Pull Requests,"Mac kext: Don't try to message offline providers, fixes missing root assert",0
1313,Merge pull request #588 Allow --files-list option for prefetch,0.59164464,Pull Requests,,0
1314,toggle path case-sensitivity in UTF8 tests,0.35606906,1685: minor path comparison fixup in ProductUpgrader,"KextLog messages should not end in a newline character, this change fixes 2 instances of this.",0
1315,"Store passed in flags, and renamed one to make it clearer",0.3530982,Major Changes,This changes ShouldHandleFileOpEvent to return false if there is no active provider on the virtualization root in question. This avoids attempting to generate relative paths without a root path.,0
1316,Merge pull request #1586 Update sparse parent folder mtimes to trigger Explorer refresh,0.458489,- Fixes a copy failure when copying the upgrade tool to its temporary location.,Improved MaintanceStep Handling,0
1317,ProcessHelper: account for platform differences in program locater,0.52847505,1685: minor path comparison fixup in ProductUpgrader,Any attempt to use a poisoned/missing root path string is a bug. This adds an assertion that will catch the poisoned case in debug builds.,0
1318,Windows: Add delay and retry to attributes check in ExpandedFileAttributesAreUpdated,0.4183597,"- Further optimizations to GVFS's index parsing, saving time on commands that need to reproject (like checkout).","The issue is that when gvfs upgrade verb uses Nuget server for upgrades when Nuget config is available. The failing test sets the upgrade ring to ""None"". Then creates dummy upgrade marker file (C:\ProgramData\GVFS\GVFS.Upgrade\highestAvailableVersion). Then launches upgrade verb. Since the upgrade ring is None, the test expects upgrade verb to delete the marker file. This used to work. But now, upgrade verb will use Nuget upgrader when Nuget config is availble. Nuget upgrader ignores upgrade ring and checks for upgrade. It will not delete the marker file, if it finds one. Updated the test to delete Nuget config before running. Fixes #852",0
1319,Catch exceptions one level higher,0.35149938,1652: RepoRegistry: ignore non-existent repos,"The issue is that when gvfs upgrade verb uses Nuget server for upgrades when Nuget config is available. The failing test sets the upgrade ring to ""None"". Then creates dummy upgrade marker file (C:\ProgramData\GVFS\GVFS.Upgrade\highestAvailableVersion). Then launches upgrade verb. Since the upgrade ring is None, the test expects upgrade verb to delete the marker file. This used to work. But now, upgrade verb will use Nuget upgrader when Nuget config is availble. Nuget upgrader ignores upgrade ring and checks for upgrade. It will not delete the marker file, if it finds one. Updated the test to delete Nuget config before running. Fixes #852",0
1320,Use a thread-safe collection for the failed listeners in JsonTracer,0.45210937,1658: ProjFSFilter: Be more robust to missing PowerShell,"When user runs gvfs upgrade --confirm from a non-elevated command prompt, VFS4Git displays error on Console and triggers a Telemetry error event. This PR removes the telemetry (no other change). Rather than generating pre-check telemetry errors generally at the higher UpgradeVerb level, InstallerPrerunChecker now decides whether to log Warning or Error events depending on specific pre-check failures. Updated events. 1. Unattended mode - Log error locally. No reporting to server. 2. Non-elevated upgrade - Log error locally. No reporting to server. 3. PrjFlt not inboxed & enabled - Report to server. 4. Service not running - Log warming. Report warning to server. 5. Installer blocked by running processes - Log error locally. Fixes #831",0
1321,Mac kext: allow large perf tracing counter data structure,0.44322088,- Improvements to compact and maintain the ModifiedPaths.dat database to help mitigate the problem of command perf degrading over time in an enlistment., Prevent futher maintenance calls by thorwing an exception,0
1322,Remove in-proc ETW trace event listener,0.40334082,  - Correlate trace2 stream with VFS for Git stream with the Git session ID.,Mac: Rename reverse-DNS xattr & kext identifiers,0
1323,Add logging to KauthHandler_HandleKernelMessageResponse,0.49152216,See the full change log,"Mac PrjFS kext/lib: Use fsid/inode for messages to user space, not vn_getpath()",0
1324,Create shared cache folders with the same ACLs as repo folders,0.7121135,- Gracefully handle a missing shared object cache pack directory.,Add retry and sleep while checking if file/folder exists for predelete cases,1
1325,Refactor post-fetch job and background prefetch into GitCleanuSteps controlled by GitCleanupQueue and GitCleanupScheduler,0.6030477,"- VFS for Git will prefetch commits and trees from a cache server in the background on a schedule, to improve the speed of user-initiated fetches, pulls, and pushes",,0
1326,Add more tests for modified paths,0.59486264,1685: minor path comparison fixup in ProductUpgrader,PrjFlt check failures are treated as warnings with live-site reporting.,0
1327,Add check-ignore and check-mailmap to commands that do not lock,0.482025,1675: PreCommandHook: don't lock pack-objects,"Because the predelete event means that the delete might not have happened yet, the code needs to check for existence and retry for a limited amount of time. In testing, the delete would be completed within 10 ms so the code sleeps for 1 ms up to 10 times before giving up and not trying to remove from the modified paths. Because removing from modified paths is purely an optimization and will only affect newly created files and folders, if the path is not removed, it will not cause correctness issues. There could be performance issues but only if it is not able to remove hundreds of thousands of paths and they get left in the modified paths.",0
1328,refactor BSD-only values out of POSIXFileSystem,0.45622933,1744: Overhaul build and project systems and drop Mac/POSIX code,Also adds an assertion that the root path must never be empty when it's required for generating a relative path.,0
1329,Merge pull request #427: Modify PrepFunctionalTests.sh to work out of the output directories,0.5141349,Pull Requests,"On HFS+, the linkid is specific to a particular hard link, whereas the fileid is the same for all links to the same file. This increases the chances that generated paths (with vn_getpath in the kext and fsgetpath in user space) are for the hard link for which a kauth handler was called, not the path to any other hard link. No such distinction exists for APFS. For identifying virtualization roots, the identity of the directory and its contents is relevant, not a specific path to it, so we continue to use the fileid there.",0
1330,"Changing test to read file contents, so that the file is materialized on windows",0.47914055,- gvfs prefetch learned how to take --files-list.,,0
1331,Remove autogenerated Xcode comment,0.41299298,1703: Delete all macOS projects,"On the user space side, if no path if received with a message from the kext, fsgetpath() is used to look it up from the FSID/inode pair. On the kext side, this allows us to entirely remove the vn_getpath() calls from the kauth vnode listener, so no workarounds are needed for when that call fails.",0
1332,Address PR feedback on naming,0.3410579,Release Notes,"Starting a virtualisation instance is now handled by calling the provider user client external method for registering a root, while stopping is done implicitly when the provider closes its user client connection. The start & stop enum values are no longer used for anything useful and can be removed. As removing them changes the numerical values of the enum, and this enum is used in user/kernel communication, the kext API version is bumped as well.",0
1333,Merge pull request #335 from jeschu1/repair_functional_tests,0.5267322,1697: Fix functional tests to skip around ProjFS issue,Mac kext: Fix for race conditions in virtualization root lookup & provider client cleanup,0
1334,Shutdown GitStatusCache before components it depends on,0.6075837,"* Added a git config setting to disable the calculations for detecting force pushes during 'git fetch' and 'git pull'. That calculation can take 10's of seconds on a large graph, and users can now opt out of it.","It is not 100% clear whether there could be a race condition between IOUserClient::stop() and IOUserClient::clientClose(), so this change causes cleanupProviderRegistration(), which is called from both, to acquire the mutex to be on the safe side.",0
1335,Fix inverted checks,0.4787398,- Other bug fixes,"The function FindRootAtVnode_Locked() is called while holding a shared lock from FindOrDetectRootAtVnode(). However, very rarely, when a root's vnode is recycled and the new one is encountered, FindRootAtVnode_Locked() will refresh the registered vnode in the virtualization root. When only the shared lock is held, this could potentially cause a race between 2 or more threads. In theory, all threads involved should reach the same conclusion and update to the same vnode, so there should not be any actual data corruption. This change fixes the race by not refreshing the vnode in FindRootAtVnode_Locked() and instead performing the refresh in a new helper function, which is only called when the lock is held exclusively.",0
1336,build: migrate GVFS.Service.UI project,0.62741864,- VFS for Git will performance maintenance in the background. This release will pack loose objects in .gvfsCache into packfiles. ,Re-enable the telemetry daemon trace listener for Windows and enable it for macOS (using the byte-based transmission mode).,0
1337,Changes for first round of PR feedback,0.4859829,General improvements:,"Now the telemetry daemon listener is not platform specific, and there is only one listener for telemetry, we can remove the API from GVFSPlatform and just construct the TelemetryDaemonEL in the JsonTracer.",0
1338,Mac kext: Adds a few more assertions for virtualisation root invariants,0.40042073,1669: Docs: more troubleshooting and FAQs,"Now that we're replacing the in-proc telemetry dispatch with the pipe & telemetry daemon solution, we can delete the ETW code.",0
1339,Mac EndpointSecurity MirrorProvider prototype: updated project settings,0.6039082,1744: Overhaul build and project systems and drop Mac/POSIX code,Re-enable the telemetry daemon trace listener for Windows and enable it for macOS (using the byte-based transmission mode). Make a minor change to pull the pipe name/path out to a configuration variable gvfs.telemetry-pipe.,0
1340,Merge pull request #906 Catch exceptions when trying to set Visual Studio registry key,0.42225692,- Fixed several incorrect interactions with credentials,NuGetUpgrader: test actual gitbin variable,0
1341,Merge pull request #472 from jamill/fast_fetch_functional_tests,0.53633726,Pull Requests,Update git to include midx verify performance fix,0
1342,Allow the mount verb to message the user about loading the kext,0.39056244,1675: PreCommandHook: don't lock pack-objects,"Mac kext: Fix for vnode_put() panic bug, tighter invariant assertion & improved root search logic.",0
1343,Update git to 2ab7360,0.85707533,1737: Update Git to v2.32.0,,1
1344,"Merge pull request #926: [Mac, Linux] refactor Mac platform into POSIX base",0.65081954,1744: Overhaul build and project systems and drop Mac/POSIX code,"In the unlikely (impossible?) event that vnode_get fails in VirtualizationRoot_FindForVnode(), the function now returns instead of continuing without an iocount. Additionally, the root search now starts with the vnode's parent directory if the vnode is not itself a directory. This avoids pointlessly querying the vnode attributes on non-directories.",0
1345,Perform Upgrade Check after PrjFlt is enabled,0.63003695,- Improved reliability of how the installer upgrades from non-inboxed to inboxed ProjFS.,"Although the vnode_put panic bug is now fixed, this tightens up the invariant checks when a vnode match is found for a virtualization root directory.",0
1346,Merge pull request #1557 Fix tests to check windows version for POSIX delete support,0.49876434,1697: Fix functional tests to skip around ProjFS issue,"The inode logic in VirtualizationRoot_FindForVnode() has been flawed: instead of looking up the inodes for the file's parent, grandparent, etc. directories in the virtualization root array, it has simply been searching for the inode of the file itself. In many cases, this only mattered once a virtualisation root's vnode had been recycled, but if the first event for a root was for a file in that root, and not the root itself, the root's entry in the array could become corrupted with the vnode on the next event for the original event's file. When this corruption happened while a provider was connected, disconnecting would cause vnode_put() to be called on the file, not the root directory vnode, leading to the panic. Obtaining the inode at every step of the parent directory walk fixes this.",0
1347,Update comments and help text,0.45669842,1747: UpgradeVerb: write deprecation notice, Unattended mode - Log error locally. No telemetry. Non-elevated upgrade - Log error locally. No telemetry. PrjFlt not inboxed & enabled - Telemetry. Service not running - Log error locally. No telemetry. Installation blocked by running processes - Log error locally. No telemetry.  Also updated UT.,0
1348,Merge pull request #1719: Enforce only a minimum Git version,0.60846746,"With this release, VFS for Git only enforces a minimum version of Microsoft Git.  Previous releases required an exact version match.  This allows users to upgrade Git without having to upgrade VFS for Git.",,0
1349,Add --prune option for removing folders outside the sparse list,0.48973703,Git commands are now allowed to delete an empty directory,Upgrade: handle not finding git installation,0
1350,"Add path helper method, only run with both validation options when running the full suite of tests",0.50258917,1685: minor path comparison fixup in ProductUpgrader,,0
1351,Enable additional tests in CheckoutTests,0.48364174,"Other bug fixes, engineering improvements, and test reliability fixes.",,0
1352,Move UpgradeOrchastrator's tracer construction into Execute to avoid creating multiple log files,0.4977203,1685: minor path comparison fixup in ProductUpgrader,,0
1353,Add interface for placeholder data to allow class sqlite data,0.6128218,Moves placeholder database into SQLite for better performance.,Upgrade: run upgrader in system diretory,0
1354,Merge pull request #813 from Cleanup gvfs log output,0.5695088,Improves the rate of .gvfsCache cleanup.,"Run the upgrade tool from the system directory to avoid potential interactions with the local directory. This could happen if the installer attempts to run a batch script, which might pick environment from the local location (e.g. if it runs a git command, it might try and run the locally configured git hooks).",0
1355,Add named pipe message for post index changed,0.4072339,1664: Update USN journal entries for projected folders,Service was not checking for upgrades in the background. UpgradeTimer.Start() was incorrectly placed after service.WaitOne(). Meaning the timer was getting scheduled just when the Service is about to stop. Fixed and manually tested and verified that timer is getting scheduled correctly on Service launch. Added FT to verify Upgrader get scheduled on Service start.,0
1356,Merge pull request #1750 from microsoft/update-readme,0.4947055,Pull Requests,,0
1357,"Auto-load PrjFS kext, gvfs bin load error fix & uninstaller.",0.6778799,- Better errors around ProjFS installation issues.,,0
1358,Migrate to Azure Artifacts,0.52866983,The local file size cache was migrated from ESENT to SQLite,,0
1359,"More cleanup, switch from interface to abstract class",0.4487158,Upgrade supports an anonymous endpoint to decouple rollouts to different engineering systems.,,0
1360,Trigger FileCreated on OPEN,0.44966546,- gvfs prefetch learned how to take --files-list.,"When user runs gvfs upgrade --confirm from a non-elevated command prompt, VFS4Git displays error on Console and triggers a Telemetry error event. This PR removes the telemetry. Fixes #831",0
1361,Do not take GVFSLock for git submodule commands,0.63696146,- Fixed an annoying bug where a Ctrl+C'd git process could leak a GVFS lock,,0
1362,Merge pull request #308 Remove the entries with parent folders in the modified paths database when mounting,0.46432596,- Gracefully handle a missing shared object cache pack directory., Replaced single long wait of 15secs with a loop with 1sec wait per iteration. 2. Search whole service log file for upgrade timer messaging. 3. Read only the latest file.,0
1363,index-parser: Do not use DateTime.UtcNow for controlling logging.,0.5095637,- Log files now include UTC offset.,,0
1364,Remove the design docment from the branch,0.5719184,1689: Make delete docs more verbose,[cherry-pick to master] Enhance git command logging,0
1365,Merge pull request #997: Added Code Coverage to build,0.51662576,Pull Requests,UpgradeTimer.Start() was incorrectly placed after service.WaitOne(). Meaning the timer was getting scheduled just when the Service is about to stop. Fixed and manually tested and verified that timer is getting scheduled correctly on Service launch. Added FT to verify Upgrader get scheduled on Service start.,0
1366,Update Git to include tracing updates,0.7276813,- Updated Git for a security issue.,Tests: Check for the actual objects directory instead of just one folder,1
1367,Merge pull request #689 from Auto-load PrjFS kext & gvfs bin load error fix,0.5983092,- Fixed a bug that would cause VFS for Git mount process to shut down if it receives out-of-order ProjFS callbacks.,UpgradeVerb: tweak message logged after checking for update,0
1368,GVFS.Platform.Mac: optionally copy PrjFS native lib,0.6329577,Switched over to use the Windows Projected File System (ProjFS) optional feature on RS4 and later. ProjFS is the new name for the GvFlt driver and its associated user mode library.,,0
1369,Update IncludeVerb HelpText and output for --list when there are none,0.4583406,- Other bug fixes, Limit error message output to 1000 chars Include name of GitCommand Remove Output logging from commands. This can be looked up in Trace2.,0
1370,Merge pull request #394 Mac: Update and delete placeholder functions should check if file is still a placeholder,0.4839725,- Fixed an issue where some concurrent updates to the placeholder database would fail,,0
1371,Remove convenience macros from init,0.45396706,1689: Make delete docs more verbose,Add tests for ShouldIgnoreVnodeType,0
1372,Merge pull request #296 Update multi-pack-index to use upstream version,0.49351752,Pull Requests,[cherry-pick to master] Use a new log directory for upgrade logs to avoid ACL issues,0
1373,Merge pull request #1431 Add lock around writes to SQLite database tables,0.5948786,Moves placeholder database into SQLite for better performance.,"ownership. In previous versions of VFS4G gvfs upgrade could create directories with regular users as owners, and this ownership setting left GVFS.Service unable to update the ACLs on the directory. Rather trying to take ownership of the old logs directory and update the ACLs, this commit updates VFS4G to using a new directory (UpgraderLogs) that is explicitly created with the correct ACLs. Old log files will not be migrated to the new folder.",0
1374,PrjFS kext testing: Fixes newly failing disappearing provider tests,0.6306769,1697: Fix functional tests to skip around ProjFS issue,Cleanup gvfs log so that file paths are all aligned in the same column. Fixes #760,0
1375,Move LooseObjectStepTests to enlistment per test case,0.4292478,- Improvements to compact and maintain the ModifiedPaths.dat database to help mitigate the problem of command perf degrading over time in an enlistment.,PhysicalFileSystem.DeleteDirectory is a single line wrapper around for PhysicalFileSystem.RecursiveDelete. Removing redundant DeleteDirectory. Fixes #758,0
1376,Update projection to use the included folders,0.615679,1664: Update USN journal entries for projected folders,"On Windows server PCs, PrjFlt is not inboxed. In this scenario UpgradeCheck used to run in parallel with the Service code to enable PrjFlt. If UpgradeCheck wins, then installer pre-check detects PrjFlt is not enabled. Upgrade check would fail. In this PR, Upgrade check is scheduled to happen only after PrjFlt is enabled. Fixes #774",0
1377,LooseObjectsStep: report full object cache size,0.5706207,"A background task will now compress and deduplicate the pack-file data in the shared object cache, resulting in more sustainable disk usage",Cleanup gvfs log so that file paths are all aligned in the same column. Fixes #760,0
1378,Merge pull request #741 from pmj/mac-inode-path-query,0.4716776,Pull Requests,PhysicalFileSystem.DeleteDirectory is a single line wrapper around PhysicalFileSystem.RecursiveDelete. Removing DeleteDirectory. Fixes #758,0
1379,GitProcess: allow GIT_TRACE to point to full path,0.6143689,- git status now supports an option to avoid doing its ahead/behind calculations. This allows the user to decide if they want to skip that overhead if all they care about is the status of the working directory.,"On Windows server PCs, PrjFlt is not inboxed. In this scenario UpgradeCheck used to run in parallel with the Service code to enable PrjFlt. If UpgradeCheck wins, then installer pre-check detects PrjFlt is not enabled. Upgrade check would fail. In this PR, Upgrade check is scheduled to happen only after PrjFlt is enabled. When EnablePrjFlt failure should not prevent Service from starting. Added a comment to clarify. Also ""gvfs mount"" was logging incorrect error message when PrjFlt enable failed. Corrected the message. Fixes #774, #815",0
1380,PR Feedback: Move Windows specific UpdatePlaceholderTests tests into their own class,0.47236967,"Other bug fixes, engineering improvements, and test reliability fixes.",,0
1381,PR Feedback: Cleanup DiskLayoutUpgradeTests,0.58785164,Improves the rate of .gvfsCache cleanup.,,0
1382,Merge pull request #1600 WindowsGitHooksInstaller: allow configuring hooks in local git config,0.5401945,Includes Git for Windows 2.30.0.,Mac: Matches up KextLog levels with os_log levels,0
1383,Add unit tests for EpochConverter,0.42615187,"Other bug fixes, engineering improvements, and test reliability fixes.",,0
1384,Bugfix for non skip worktree files,0.5835814,1730: Fix an issue with FastFetch when deleting files,"The existing levels in the KextLog mechanism have repeatedly caused confusion with regard to their relative importance and whether or not they hit the on-disk system log.  The ""Note"" level has been replaced with ""Default"" to match its os_log counterpart. The corresponding macros have been renamed to KextLog() and KextLog_File(), so ""Default"" need not be spelled out explicitly. Comments have been added to the log level enum definition to explain the syslog policy.",0
1385,Merge pull request #1140 use SWLite to track placeholders,0.5253735,Pull Requests,"After we have successfully used a generated credential we should inform Git that the credential is valid and should be stored, by calling git credential approve. We make an effort to not call approve (which calls gcm store) if we've already called it once before for the currently cached credential to prevent a store per successfully auth'd network request.",0
1386,Mac kext testing: Adds basic xattr support to mock vnodes,0.45773214,1697: Fix functional tests to skip around ProjFS issue,,0
1387,GitMaintenanceStep: Throw if stopped while Git is running,0.68387294,"* Added a git config setting to disable the calculations for detecting force pushes during 'git fetch' and 'git pull'. That calculation can take 10's of seconds on a large graph, and users can now opt out of it.",,0
1388,Check return code when trying to add new folder to include,0.55226207,Adds additional logging for folder and file placeholder creation.,,0
1389,RepoRegistry: Properly log error from TryGetNormalizedPath,0.47583672,1652: RepoRegistry: ignore non-existent repos,Mac Kext: Extra virtualization root vnode assertions & logging,0
1390,Clean up std namespace usage,0.41169178,Adds additional logging for folder and file placeholder creation.,Update RunFunctionalTests to not load kext when testing installed gvfs,0
1391,Make CreateDirectoryAccessibleByAuthUsers a Try method,0.4946843,1734: Adding winget workflow,,0
1392,Move fastfetch-specific files,0.6689798,1730: Fix an issue with FastFetch when deleting files,,0
1393,Update Git to include GCM Core update,0.9591138,1706: Update Git to include GCM Core update,,1
1394,Updated functional tests,0.6127252,"Other bug fixes, engineering improvements, and test reliability fixes.",,0
1395,LooseObjectStepTests: return temp packs at end of test,0.39107603,1697: Fix functional tests to skip around ProjFS issue,,0
1396,Mac kext: New Profiling(Release) build configuration based on Release,0.5634133,Initial Mac upgrade functionality,,0
1397,Health functional tests (#1313),0.4011589,"Other bug fixes, engineering improvements, and test reliability fixes.",,0
1398,Rename EstimatedPlaceholderCount to PlaceholderCount,0.43863767,1652: RepoRegistry: ignore non-existent repos,,0
1399,Update cache health messages: Remove message string and use more descriptive event name,0.37305617,- Fix backoff on cache server size endpoint 404.,,0
1400,Add Test MountCanProcessSavedBackgroundQueueTasks,0.49535045,1697: Fix functional tests to skip around ProjFS issue,,0
1401,Mac kext: offline roots don't need to know their path.,0.3990571,1703: Delete all macOS projects,"We've recently made the infrastructure change to call the RunFunctionalTests.sh script with '--test-gvfs-on-path' to ensure that we're testing the product as it is installed on customer machines. When we're testing in that scenario, we shouldn't call the developer convenience script as it will load the locally built kext rather than the installed kext.",0
1402,Merge pull request #353: Make GVFS.Upgrader rely on GVFS.cs.props,0.64823484,"Many other reliability improvements in interactions between GVFS and the file system, and between GVFS and git", Only start ProjFS once VFS4G is ready to service requests,0
1403,Mac: Add FileSystemType,0.5380721,Adds additional logging for folder and file placeholder creation.,,0
1404,Merge pull request #667 Revert #655 Dispose of unused LibGit2Repos,0.49113572,Pull Requests,,0
1405,Add unit tests for TryCopyNativeLivIfDriverVersionsMatch,0.47210896,1685: minor path comparison fixup in ProductUpgrader,,0
1406,revert to MacDiskLayoutUpgradeData,0.6214169,Initial Mac upgrade functionality,GetInsertionIndex should include the entry's name when it throws an InvalidOperationException,0
1407,Update RunFunctionalTests to not load kext when testing installed gvfs,0.55950725,"- VFS for Git will check the GitHub releases for the configured ring and prompt occasionally when running Git commands in a VFS for Git repository. To configure your ring, use the new gvfs config verb, like:",,0
1408,PhysicalFileSystem: remove unused contant,0.47350335,1730: Fix an issue with FastFetch when deleting files,Reverting commit c4af872. Service will only use ring info specified in upgrade.ring config setting. Service will not use ring info specified in nuget feed url (even if it contains one.) Also removed the associated UT cases.,0
1409,Use memory_order_relaxed for counters,0.6221522,- Improved the memory usage during MIDX computation.,"After we have successfully used a generated credential we should inform Git that the credential is valid and should be stored, by calling git credential approve. Include the username and password when we make calls to reject to match Git's behaviour, and to give any credential helpers (GCM) a chance to double-check if the credential it's about to erase matches the value to caller expected to be stored there. Also rename the GitAuthentication methods to match the terminology used by git-credential (approve and reject). Update unit tests to check for expected number of approval and rejections of credentials.",0
1410,Remove stray character from comment,0.4331727,1689: Make delete docs more verbose,Reverting commit c4af8726f4ad02e0a7f414814f8051de7d8d023e. Service will only use ring info specified in upgrade.ring config setting. Service will not use ring info specified in nuget feed url. Also removed the associated UT cases.,0
1411,use mixed-case FastFetch.dll in functional tests,0.43854386,A case where FastFetch would not download a small number of files has been fixed.,Better feedback and fixes for Upgrade Scenario,0
1412,Add additional diagnostics to GitStatusAfterRenameFileIntoRepo,0.5576815,Git: Includes incremental commit graph,,0
1413,Mac kext unit testing: Cleans up the vnode mock functions,0.47901848,1697: Fix functional tests to skip around ProjFS issue,This applies to:  Bundle identifiers IOKit subclass name prefixes Names for extended file attributes msleep calls in the kext,0
1414,Merge pull request #1697: Fix functional tests to skip around ProjFS issue,0.8422721,1697: Fix functional tests to skip around ProjFS issue,Improve upgrader logging,1
1415,Update Git to include v2.31.1,0.92125595,1737: Update Git to v2.32.0,"[merge to master] Log GVFS.Service ACL exceptions, and fix upgrade log directory ACL issue",1
1416,Fix failing functional test,0.61897314,1697: Fix functional tests to skip around ProjFS issue,On Windows RS1/Server ProjFS is not inboxed. On those PCs the current gvfs upgrade pre-check error messaging is confusing. Updated the messaging. Issue #769,0
1417,UpgradeVerb: enable platform specific logic,0.54192513,Upgrade supports an anonymous endpoint to decouple rollouts to different engineering systems.,Configure installer to install PrjFSKextLogDaemon,0
1418,Substituting a var with explicit variable type,0.3021173,1666: Docs: start basic template,,0
1419,Rename Count() to GetCount(),0.331129,1732: Use one NuGet feed,,0
1420,"Add ""stat"" Functional Tests",0.39272076,General Improvments,NuGetUpgrader: use common installation ID,0
1421,Merge pull request #1230 from jamill/upgrader_tasks/installer_command,0.48637804,Pull Requests,"When running an install action fails, it might or might not have error text. With this change, NuGetUpgrader adds extra context to the error message that is eventually consumed by a user.",0
1422,Merge pull request #1085: Refresh AuthoringTests.md,0.4820841,1750: Update Readme.md,On Windows RS1/Server ProjFS is not inboxed. On those PCs the current upgrade pre-check error messaging is confusing. Updated the messaging. Issue #769,0
1423,Update GitForWindows to include tracing,0.6438949,Includes Git for Windows 2.30.0.,,0
1424,Don't update ModifiedPaths.dat for hardlinks created outside of repo,0.45508444,Previous builds were not including fully-signed DLLs. This is now fixed.,,0
1425,Fix Stylecop issues that snuck in after rebase and add some debugging statements,0.6548967,- Other bug fixes,Update git to include trace2 V7,0
1426,New features:,0.99999976,New features:,"Update git to: 178619c5d0 (""Merge pull request #117 from jeffhostetler/gvfs-trace2-next-fixup"", 2019-02-11) Includes trace2 V7 and associated fixes.",1
1427,Mac kext: Adds typed array memory allocation function.,0.5410527,- Improved the memory usage during MIDX computation.,This commit installs the logging daemon as part of our installer. Update the plist with the install location and modify the xcodeproj to have the Daemon copied into the BuildOutput directory. Modify the Installer project to have the plist and daemon in the structure that becomes part of the installer. Add a preinstall/postinstall script to register the daemon with launchd. Update uninstaller to handle these new additions.,0
1428,Some unit test cleanup that helped me investigate the failures I was seeing,0.62268203,"Other bug fixes, engineering improvements, and test reliability fixes.",,0
1429,Merge pull request #1151 from Updated Service response to EnablePrjFS request,0.55204713,Pull Requests,,0
1430,Move rewrite methods to GitMaintenanceStep,0.5968199,- Consume new GCM to fix git credential erase behavior,,0
1431,Merge pull request #1132: netcore build: fix runtime patch selection issues,0.5911555,1741: Fix winget tag specification,,0
1432,Address PR feedback and comments,0.45476824,Release notes,Load SSL certificate according to git config,0
1433,Service not to upgrade check when unattended,0.52744746,"gvfs config upgrade.ring [""fast"", ""slow"", ""none""]",,0
1434,rework ShouldIgnoreVnodeType for coverage,0.54254353,1652: RepoRegistry: ignore non-existent repos, Wait for backgorund processes to complete,0
1435,Merge branch 'master' into gitprbuild,0.58310294,- Built-in git rebase is on by default.,,0
1436,NuGetFeed: only encrypt in memory credential  on supported platforms,0.5535021,- Properly reacquire credentials during nuget upgrader,,0
1437,Fix path for the Mac,0.5515637,Initial Mac upgrade functionality,Bug Bash Fixes [into master],0
1438,Merge pull request #581 from jeschu1/fix,0.58389294,Pull Requests,Add listener for OPEN event,0
1439,Upgrader: do not include Micrsoft.Diagnostic.Tracing.EventSource,0.43639755,1685: minor path comparison fixup in ProductUpgrader,Mac syscall tracing: Updates to dtruss to make it practical for tracing VFS4G issues,0
1440,Mac kext: Change message field & enum value names to be more descriptive,0.34559828,Initial Mac platform native notifications,,0
1441,restore mixed-case tests in PrefetchVerbTests,0.5066617,1697: Fix functional tests to skip around ProjFS issue,,0
1442,Refactoring needed to incorporate Nuget Upgrader,0.68175924,- Properly reacquire credentials during nuget upgrader,Merge features/upgrade_extensibility to master,0
1443,Address PR feedback and update MirrorProvider script too,0.42606235,Update components included with internal distribution,,0
1444,Update IsCheckoutWithFilePaths for 'switch' and 'restore',0.51491314,1730: Fix an issue with FastFetch when deleting files,,0
1445,Log Folder Placeholders Removed,0.64984083,Adds additional logging for folder and file placeholder creation.,,0
1446,Maintenance: Check Stopping before reacting to error code,0.6035774,Other bug fixes for reliability,,0
1447,Merge pull request #941 from .Net core porting - GVFS.FunctionalTests.LockHolder,0.55351734,1683: GVFS.SignFiles.csproj: include more DLLs for signing,Disable the TelemetryDaemonEventListener on Windows,0
1448,GitStatusCache: handle errors creating directory,0.55751,- A couple of fixes for using VS Code on top of VFS for Git.,NuGetUpgrader: verify integrity of downloaded NuGet package,0
1449,Add comments describing how the prefetch stages interact,0.43404916,- We have enabled the generation of the serialized commit graph in the post-fetch thread. This should provide across-the-board perf wins in any command that walks many commits.,,0
1450,Reliability update:,0.8248208,Other bug fixes for reliability,Read upgrade ring config from feedurl,1
1451,Merge pull request #791; Mac: Add PreConvertToFull when Write Access is requested,0.5839052,Pull Requests,,0
1452,Fix two issues to enable the last two functional tests.,0.591671,"Other bug fixes, engineering improvements, and test reliability fixes.",Verify the integrity / signature of NuGet packages. The NuGet upgrader will rely on the services provided by the NuGet client library to verify downloaded NuGet packages. Relies on the high level command VerifyCommandRunner exposed by NuGet client library to actually perform NuGet package verification.,0
1453,build: migrate GVFS.Platform project,0.63631105,Instructions for installing and using GVFS are available at https://github.com/Microsoft/GVFS,"Upgrade feedurl contains upgrade ring specification as a substring. Github upgrader now attempts to parse feedurl and read the ring info specified. If the feedurl is set, but if it does not contain the ring info, then that would be interpreted as a None ring - meaning GVFS.Service would not be able to do upgrade checks in the background. But if feedurl is not set at all, then regular uprade.ring config would be used.",0
1454,Merge remote-tracking branch 'msft/master' into mac_symlink_support,0.41176718,  - Correlate trace2 stream with VFS for Git stream with the Git session ID.,[features/upgrade_extensibility] Additional ACL changes,0
1455,Merge pull request #735 [features/upgrade_extensibility] Additional ACL changes for upgrading,0.52845025,Major Updates,We should listen for file creation on OPEN instead of CLOSE. If a file handle isn't correctly closed we could miss the event.,0
1456,Remove upgrade on minimum verison test,0.5310815,1746: Delete custom upgrader,,0
1457,Merge pull request #1786: Adding Microsoft SECURITY.MD,0.4932432,Update NuGet upgrader with new Microsoft package signing certificate,,0
1458,Remove steps covered by the prep script,0.4226277,1668: ProductUPgradeTimer: remove unacceptable Environment.Exit(),,0
1459,Merge pull request #1319 from Don't change version number for dev builds,0.4801424,1726: Config: commitGraph.generationVersion=1,,0
1460,Introduce GitProcess.ConfigResult to encapsulate how to parse the output of a call to git config,0.5883296,Includes Git v2.27.0,ProductUpgrader: only write newest version available,0
1461,Update method name to UpdateProjection,0.6022113,Update components included with internal distribution,Disable the new daemon-based telemetry event listener on Windows until we have the Mac version working and that we're happy with the stability of the listener.,0
1462,Merge remote-tracking branch 'msft/master' into powershell_hardlink_and_more_mac_tests,0.47145212,1658: ProjFSFilter: Be more robust to missing PowerShell,,0
1463,Handle sparse --disable when not in sparse mode,0.42543355,Background tasks run with lower priority to address user feedback on maintenance job performance.,,0
1464,Update Git to fix slow commit-graph writes,0.7913331,Git: Includes incremental commit graph,,1
1465,Allow sparse change if dirty files are in sparse set,0.49184477,A case where FastFetch would not download a small number of files has been fixed.,"This will facilitate adding tests for the logic that the hooks projects do not depend on, as those projects do not support the PhysicalFileSystem abstraction.",0
1466,GVFS.Upgrader: migrate to netcore project,0.651719,The gvfs upgrade command is deprecated. Future upgrades will require using winget or installing directly from the releases page.,"When an upgrade is available, GVFS will download the update in the background, and git commands will periodically check for the existence of the downloaded package in a well known directory to advertise that an update is available. However, this downloaded update is not used for the actual update. This changes the logic to write out a file in a well known location containing the version of the latest available update, and avoid downloading the actual update. While this change stands on its own, it will be even more applicable with the NuGet Upgrader, which will still use GitHub releases to check for available updates, but will download the actual update from another location.",0
1467,ProjFSFilter: use 'where' to find powershell,0.59993935,1658: ProjFSFilter: Be more robust to missing PowerShell,Try to load the kext if not loaded,0
1468,only down-case SHA1s on case-sensitive filesystems,0.42555758,A case where FastFetch would not download a small number of files has been fixed.,,0
1469,Teach Enlistment.GetNewGVFSLogFileName to take FileSystem parameter,0.5586238,- gvfs prefetch learned how to take --files-list.,,0
1470,Move config & upgrader files to ProgramFiles (1),0.5807686,1746: Delete custom upgrader,,0
1471,Fixing help text for PrefetchVerb,0.42085028,- Other bug fixes,,0
1472,Turn on rebase conflict tests for Mac,0.47801676,Initial Mac upgrade functionality,,0
1473,Set '-p:CopyPrjFS=true' during publish so the dylib gets copied into /Publish,0.44792897,1683: GVFS.SignFiles.csproj: include more DLLs for signing,,0
1474,Merge pull request #879 Add contributing guidelines to VFSForGit repo,0.61280644,- A couple of fixes for using VS Code on top of VFS for Git.,"This is so that the code can write a message if needed to the output, like when a password prompt will be shown.",0
1475,toggle path case-sensitivity in folder tests,0.48309374,1685: minor path comparison fixup in ProductUpgrader,,0
1476,Merge pull request #1637: Update Git to v2.25.1.vfs.1.1,0.7047919,1712: git-vfs: update to Git 2.30.0,,1
1477,Merge pull request #1403 Mac: Do not lookup or download file sizes when updating placeholders,0.5718353,"* The post-command step to update placeholder files now batches its size requests to the server, resulting in significant speedups in situations where many placeholder files needed to be updated",,0
1478,Add connection pooling to the GVFSDatabase class,0.52397835,- We have improved how GVFS handles enlistments in junctions and mapped to a drive letter.,Add PrjFSKext log collection to diagnose verb,0
1479,build: merge GVFS.FunctionalTests.Windows tests into main project,0.5632693,1679: BuildGVFSForWindows.bat: use nuget on PATH,,0
1480,Merge pull request #796 GetInsertionIndex should include the entry's name when it throws an InvalidOperationException,0.53220594,Pull Requests,,0
1481,MacPlatform: indicate support for upgrade,0.7564074,Initial Mac upgrade functionality,,1
1482,Create combined VFSForGit & Git installer,0.74687254,- A couple of fixes for using VS Code on top of VFS for Git.,,1
1483,Teach GitProcess.Result how to tell if stderr was all warnings,0.56604075,This includes the Git Credential Manager Core v2.0.394.50751.,,0
1484,build: migrate GVFS.PerfProfiling project,0.6266854,- VFS for Git will performance maintenance in the background. This release will pack loose objects in .gvfsCache into packfiles. ,,0
1485,Merge pull request #1375 Remove all TODO(POSIX) and TODO(Mac) comments.,0.56939733,1703: Delete all macOS projects,Update ProjFSLib to log Process Name when in debug mode,0
1486,update libgit2 native binary and include for Linux,0.55330867,1733: Update Git to include 2.31.1,Use package feed URL to query for credentials,0
1487,Add method to add folder with type for other methods to use,0.52909696,Adds additional logging for folder and file placeholder creation.,The URL to query Git Credential Manager with for the credentials to access the packaging feed no longer needs to be explicity provided. The URL will be generated from the packaging feed URL.,0
1488,Merge pull request #907 Use a thread-safe collection for the failed listeners in JsonTracer,0.52945876,Pull Requests,,0
1489,Mac: Adds histogram buckets to perf tracing in kext & output,0.39725482,- We have enabled the generation of the serialized commit graph in the post-fetch thread. This should provide across-the-board perf wins in any command that walks many commits.,The new PrjFSKextLogDaemon writes kext log messages out to the os log. This change updates the diagnose verb to consume the os log via the log show commandline. This change does not install the daemon as part of the product. Note that this effectively exports the logs as text rather than the binary .logarchive format. This was chosen for ease of viewing on any machine (Console.app and log are only on MacOS).,0
1490,Merge pull request #208 Update to ProjFS version 2018.823.1,0.54701984,1658: ProjFSFilter: Be more robust to missing PowerShell,,0
1491,build: migrate GVFS.Mount project,0.6119753,- We have improved how GVFS handles enlistments in junctions and mapped to a drive letter.,We want to construct an AzDev URL of the format: https://azure.devops.com/{org} from a packaging URL. This is so we can query the Git Credential Helper for a corresponding PAT to access the feed with.,0
1492,simplify path case-matching Git functional tests,0.5720544,"- Post-index-change hook will help ensure consistency between Git and VFS for Git's reckoning of the state of the repository, and eliminate a class of bugs.",This adds some simple instructions on how to use our version of dtruss.,0
1493,Fix for perf tracing integer overflow regression,0.5249525,Perf improvements:,"Following child processes (-f) in dtruss has not worked reliably on Mac, at least not in recent OS versions. There are a few reasons for this:  Thread recycling behaviour means the self->child variable doesn't get wiped when a thread exits or a process dies, so random other processes end up with threads which suddenly start being traced. dtruss assumed new processes were always started with fork/execve or vfork/execve, entirely ignoring posix_spawn, which is much more common on macOS. The logging of newly detected threads in child processes was odd, implying each of them was caused by a fork() which of course is not the case. If traced parent processes died, newly created threads in child processes may fail to be traced.  This change fixes all of the above. The key changes:  The self->child thread-local variable identifying threads as being part of processes which are descendents of processes which match the original criteria now stores the PID, not simply a boolean. This lets us detect the case where threads are recycled. The self->start variable suffers from the same problem, causing the first syscall of a recycled thread to be traced, even if self->child has been cleaned up. There is special support for tracing through the various stages of posix_spawn in order to mark the newly spawned child process. The default buffer size for dynamic DTrace variables is hugely increased, as the script in its current state seems to consume a lot of memory.",0
1494,Merge pull request #239 Mac: Support projection changes that add new files and delete folder,0.5081635,Adds additional logging for folder and file placeholder creation.,"Currently this just applies to one case: close() when it returns EBADF. It seems that some processes (clang?) will call close() on thousands of file descriptors that don't exist, which totally floods the trace. Specifying -F will now remove those calls from the trace; if -c (counts) are enabled, the filtered calls will still be counted in the overall statistic; additionally, the number of ignored close() calls for each process is tracked and output.",0
1495,Merge pull request #1038: Close directory fds when walking directory hierarchy in PrjFSLib,0.4839588,- gvfs prefetch learned how to take --files-list.,"The command-launching changes caused dtrace to error out on other modes; this adds command line arguments to fix that. Additionally, if the dtrace command fails in the command case, we now terminate the launched subshell instead of leaving it forever suspended.",0
1496,readme: update path for PrjFS project,0.57309353,1664: Update USN journal entries for projected folders,,0
1497,Initial yaml for Azure Pipelines,0.35265833,Previous builds were not including fully-signed DLLs. This is now fixed.,,0
1498,LibGit2RepoInvoker: Remove unused Timer,0.48294705,1740: Skip launching UI if running unattended,,0
1499,Add handling of rename of files for modified paths cleanup,0.54076165,Adds additional logging for folder and file placeholder creation.,"Tracing certain syscalls such as read/write would sometimes trigger dtrace errors for one of the following reasons:  NULL pointer passed by caller. This change adds safety checks for these. Buffer is very large, so copyin() runs out of scratch memory. This change limits the copied buffer contents to 1024 bytes.",0
1500,Correct Upgrade Messages for Mac,0.68327874,Initial Mac upgrade functionality,"Dtruss so far has had no direct support for tracing posix_spawn, so just fell back to printing 3 integer arguments, which isn't terribly useful. The function has 6 arguments, so this change causes all of them to be saved until return and printed. The second argument (arg1) is the string of the executable file's path; this needs to be copied from usermem on syscall entry as copyinstr sometimes seems to fail in the return probe. The first argument (arg0) is a pointer to a memory location to which the created process's PID will be written, so we need to read the PID from usermem in order to print it.",0
1501,Merge pull request #914: PrjFs: enable static analysis during build,0.49837974,1658: ProjFSFilter: Be more robust to missing PowerShell,"dtruss was written for Solaris and last updated for an ancient version of macOS. (then Mac OS X) Somewhere along the way, tracing for execve() got broken - the printed PID was wrong, and printing the executable's path did not work. The reason for the former is unclear, in the return probe the pid simply evaluates to 0. That just seems to be a kernel quirk. By saving the correct value in a thread-local variable on syscall entry, we can print that on return. The executable path can't be printed as the string resides in user space memory, and after execve() returns, the whole userspace process has been replaced. So again the solution is to save the syscall argument on :entry for :return to print it.",0
1502,GitMaintenanceStep: inject the dependence on git process ids,0.6774769,Git: Includes incremental commit graph,"The existing dtruss script suffered the significant flaw that commands/processes launched via the dtruss command line could only be run as root as dtruss itself could only be run as root. This change allows the dtruss script itself to be run as non-root when passing a command by explicitly invoking dtrace using sudo. Furthermore the command is launched via a subshell, not by dtrace, and thus runs in the context of the dtruss script, not sudo's. To ensure no syscalls are missed by dtrace, the subshell process is started in a suspended state and resumed by the dtrace:::BEGIN action. The main 2 regressions caused by this change are:  * dtruss will not exit when the traced command finishes.  * If launching dtrace fails, the suspended subshell sticks around. Both are fairly minor and will be fixed in a future change.",0
1503,Drop extra newline that was dropped in Git v2.23.0,0.6720576,Includes Git v2.27.0,dtruss script is from Apple's dtrace-285.200.15 source bundle at https://opensource.apple.com/source/dtrace/dtrace-284.200.15/DTTk/dtruss.auto.html,0
1504,Update Git to v2.29.0,0.9051435,1694: Update Git to v2.29.0.,,1
1505,"Migrate child directories of the log folder, reduce code duplication, improve comments",0.5832758,Adds additional logging for folder and file placeholder creation.,,0
1506,Merge pull request #1303: GVFS Health Feature,0.587585,- Added better diagnostic info in the GVFS logs when there are network errors,Mac: Support Version Number overrides,0
1507,Merge pull request #1582: Update Git to include sparse-checkout feature branch,0.6212371,"- Upgraded to Git 2.19. This version brings with it improvements to unpack_trees to speed up checkout, merge, reset, and rebase.",,0
1508,Merge pull request #1607 sparse: check for not recursive matches when finding dirty files,0.4768075,A case where FastFetch would not download a small number of files has been fixed.,,0
1509,Remove '/System/Volumes/Data' when only in path,0.51187164,1703: Delete all macOS projects,,0
1510,Simplify CallCount,0.40536588,- Improved the memory usage during MIDX computation.,,0
1511,CreateMacInstaller: consume pkg installer directly,0.4425138,- The installer now unmounts and remounts existing repos automatically,"Currently, we don't have a solution for controlling the GVFSVersion on MacOS. Windows supports this by taking the version as an argument to the build script which gets passed to MSBuild. Our PreBuild infrastructure is different on MacOS, but we can use the same idea to have GenerateCommonAssemblyVersion.sh update the GVFS.props as well as generate the CommonAssemblyVersion.cs file.",0
1512,Add test for when modified paths gets deleted when it shouldn't,0.52271307,1685: minor path comparison fixup in ProductUpgrader,,0
1513,Merge pull request #961 Pass session id through to mount process for correlation with git trace2,0.7763247,  - Correlate trace2 stream with VFS for Git stream with the Git session ID.,,1
1514,Mac kext: Conditionally enable performance tracing.,0.5323155,- Disable commit-graph verify for performance concerns,Fixup NuGetUpgrader - install necessary NuGet dlls,0
1515,Revert unintended change,0.6246883,Major Changes,,0
1516,revert whitespace changes,0.4692756,Major Changes,[features/upgrade_extensibility] Restrict ACLs on VFS4G ProgramData and update verbs as needed,0
1517,Mac dtruss: Improved fstatat() and related syscall argument formatting,0.38369745,- Improvements to compact and maintain the ModifiedPaths.dat database to help mitigate the problem of command perf degrading over time in an enlistment.,,0
1518,Mac kext: Fixes race condition in virtualization root lookup,0.37405372,1685: minor path comparison fixup in ProductUpgrader,,0
1519,Modify PrepFunctionalTests.sh to work out of the publish directory,0.49479485,- gvfs prefetch learned how to take --files-list.,,0
1520,Merge pull request #157: Fix issues that lead to problems with unmounting a repository,0.52468586,Pull Requests,"Implement an upgrade mechanism that makes the upgrade logic more flexible to enable customized steps to be run during an upgrade. Organizations might have specific requirements and need custom steps to deploy VFSForGit upgrades. This introduces the NuGet upgrader, which allows for generalized upgrade packages. The upgrade package is distributed via NuGet feeds as a NuGet package. The package includes details on how to install itself, allowing organizations the ability to control the VFSForGit upgrade.",0
1521,Mac kext: Fixes potential race condition in provider client cleanup,0.446601,Improves the rate of .gvfsCache cleanup.,,0
1522,Add dependency on GVFS.PostIndexChangedHook to the GVFS.SignFiles project,0.74763465,1683: GVFS.SignFiles.csproj: include more DLLs for signing,"Define a common base class for different Upgrader implementations. This is preparation to support multiple Upgrader implementations. This will define a common API for components to work against to run any Upgrader, while also putting common functionality into a shared base class.",1
1523,Installation check on Mac,0.6918869,Initial Mac upgrade functionality,,0
1524,Update to use a blocking queue,0.51592714,- We have moved MIDX computation to a post-fetch thread. This should save blocking time per prefetch that downloads a packfile from the cache server.,Fix removal from modified paths when path should not be removed,0
1525,Merge pull request #266 fUpdate PowerShellRunner to support hard link creation and enable more functional tests on Mac,0.56249255,1658: ProjFSFilter: Be more robust to missing PowerShell,,0
1526,Downloaded Installers of previous versions should not trigger upgrade reminders,0.561059,The gvfs upgrade command is deprecated. Future upgrades will require using winget or installing directly from the releases page.,,0
1527,Mac: Log error when failing to connect to kernel service,0.537227,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,GVFS.Installer.Mac project will now build an additional Meta package installer. This installer will contain both VFSForGit Mac installer and Git installer in a single package. The existing VFSForGit installer will continue to be produced.,0
1528,Merge pull request #253. Fix console logging typo in MirrorProvider.,0.45346016,See the full change log,,0
1529,Use common method for getting the modified paths contents,0.5016889,1685: minor path comparison fixup in ProductUpgrader,,0
1530,Mac kext: A more meaningful name for lock protecting virtualization roots,0.4420396,- Better recovery from a process that terminates without releasing the GVFS lock.,GVFS.Installer.Mac project will now build an additional Meta package installer. This installer will contain both VFSForGit Mac installer and Git installer in a single package. The existing VFSForGit installer will continue to be produced.,0
1531,Merge pull request #1281: PrefetchStep: don't send post-fetch request if no new packs,0.5602758,Pull Requests,,0
1532,Use case insensitive database field for the path and folders to keep HashSet,0.48115513,Adds additional logging for folder and file placeholder creation.,First Kext Unit Tests as POC,0
1533,Merge pull request #1051 from Auto-mount repos on Mac & UT,0.49857855,Pull Requests,,0
1534,Merge pull request #954 Add timings to different parts of updating placeholders,0.5898314,  - Break down update placeholders timings so we can see where time is spend during checkout.,Add out-of-proc telemetry daemon event listener,0
1535,Fix unit test bug,0.6393429,"Other bug fixes, engineering improvements, and test reliability fixes.",,0
1536,Mac ProjFS kext: Consistently don't follow symlinks on vnode_lookup,0.5340551,1658: ProjFSFilter: Be more robust to missing PowerShell,,0
1537,Use IsIncluded only on folder entries (#1345),0.5165063,Adds additional logging for folder and file placeholder creation.,,0
1538,Merge pull request #819 from pmj/mac-root-find-race-fix,0.42276832,Pull Requests,,0
1539,Fix some changes from rebasing to master,0.5173641,- The installer now unmounts and remounts existing repos automatically,"Using an exports list in the test bundle itself makes dead code stripping work, so the kext-in-userspace can be a static library and doesn't itself need an exports list. This means we don't have to keep adding new functions we want to test to a symbol list. This change also moves the testability macro to the common header file and adds one for static functions (non-inline), which is tested on yet another function from KauthHandler.cpp. In Progress",0
1540,PrjFS kext testing: Fixes newly failing tests by tidying up root handling,0.6790041,1697: Fix functional tests to skip around ProjFS issue,"Goal Verify code signature of downloaded upgrade installer exes before launching it. Implementation Signature verification: At a high level, the upgrader reads the certificate contained in the signed installer. It then tries to build the certificate chain. If it succeeds, then the exe is considered valid and upgrader goes on to verify that the certificate CN name matches expected values (""Microsoft Corporation"" for VFSForGit and ""Johannes Schindelin"" for Git). Installer is launched only when signature verification succeeds. To prevent an attacker from modifying installer exe while signature verification is going on, upgrader holds an open reference to the exe that is later released.",0
1541,Fix failing functional tests,0.62916046,1697: Fix functional tests to skip around ProjFS issue,GitHubUpgrader.RunInstaller() method now locks the downloaded asset installer path (by opening a file handle to it) and verifies the authenticode signature of installer exe. There is additional check done for the name of the issuer of the Authenticode certificate. Installer is launched only when signature verification succeeds. The installer file lock is released after installer run finishes. Also added UT to verify signature check failures are handled properly.,0
1542,RefreshSparseFolders: move path separator string out of loop,0.41631204,1685: minor path comparison fixup in ProductUpgrader,,0
1543,Merge pull request #1248: LooseObjectsStep: report full object cache size,0.6072159,- Fix backoff on cache server size endpoint 404.,,0
1544,Merge pull request #1278: Fix performance regression in LibGit2RepoInvoker,0.494337,Pull Requests,,0
1545,Merge pull request #1416 Mac: Fix and enable remaining dehydrate functional tests,0.5377935,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,,0
1546,Add build badges for Large Repo Build and branch specific links,0.4440031,- Added a new volume-wide cache for downloaded git objects that is shared amongst multiple repos. Only newly created repos will use the new cache location. Existing clones will continue to use their own private cache.,File system common methods,0
1547,Mac PrjFSLib: Use IOSharedDataQueue workaround library if available,0.50372505,1744: Overhaul build and project systems and drop Mac/POSIX code,,0
1548,Merge pull request #658 Verify commit-graph and multi-pack-index after writing,0.7113575,- Disable commit-graph verify for performance concerns,"These filesystem methods are used in the Upgraders, but are generally useful. Move / add them to common location so they can be reused.",1
1549,Separate LocalStorageRoot from WorkingDirectoryRoot,0.47524077,1734: Adding winget workflow,,0
1550,"Using OrdinalIgnoreCase string comparer in hashset, instead of doing ToLower, as per code review suggestion",0.3652075,1685: minor path comparison fixup in ProductUpgrader,,0
1551,Added CallCount and SequenceCheck to Mocks,0.4193983,1652: RepoRegistry: ignore non-existent repos,,0
1552,Mac: Disable StatusTests.MoveFileIntoDotGitDirectory,0.5398778,1703: Delete all macOS projects,GitHubUpgrader: Use REMOUNTREPOS flag instead of MOUNTREPOS,0
1553,Merge pull request #1659: Update Git to include v2.26.2,0.7501672,1653: Update Git to include v2.26.1,VFSForGit Setup is looking for REMOUNTREPOS instead of MOUNTREPOS.,1
1554,Merge pull request #1745: do not exit early if no blobs found for a period when prefetching,0.6774752,1745: do not exit early if no blobs found for a period when prefetching,"Goal Create a --dry-run upgrade arg that will help VFS4Git Developers to run gvfs upgrade without actually affecting the state of their PC. New --no-verify upgrade arg to prevent code signature verification of installers and Nuget packages. Feature details Dry run - Behaves like a regular gvfs upgrade --confirm command, except that the downloaded installer exe's will not be run. No verify - This is arg is enabled but not implemented right now.",0
1555,Mac kext: Improves safety of auth cache disabling,0.46337792,- Fix backoff on cache server size endpoint 404.,,0
1556,Merge pull request #1440: Add LogInfo / LogWarning messages to PrjFSLib,0.54009056,1683: GVFS.SignFiles.csproj: include more DLLs for signing,,0
1557,Updated Service response to EnablePrjFS request,0.6148816,- Fixed a bug that would cause VFS for Git mount process to shut down if it receives out-of-order ProjFS callbacks.,,0
1558,Using git config setting http.sslVerify to enable or disable client and server certificate verification,0.5805292,Includes latest Git Credential Manager Core security release.,Check for active libgit2 repos during packfile maintenance step,0
1559,HttpRequestor: retry 429 (too many requests) responses,0.520045,- Fix backoff on cache server size endpoint 404.,Log when an EventListener has recovered from a previous failure to all the other listeners. Also remove some usages of var.,0
1560,Update Git to new vfs-2.24.0 branch,0.8782841,1712: git-vfs: update to Git 2.30.0,Update Readme to inform users to clone with HTTPS,1
1561,Update initial connections and wait time,0.4723674,- We have moved MIDX computation to a post-fetch thread. This should save blocking time per prefetch that downloads a packfile from the cache server.,"Auto-load PrjFS kext Now PrjFS kext will get installed in the standard kernel extensions directory, this will let the Operating System find it and autoload it.  gvfs bin load error fix Installing libPrjFSLib.dylib in /usr/local/lib directory; this helps fix the issue where some of the vfsforgit binaries fail to launch bcoz of missing libraries in standard lib search paths. Added a basic un-installer The un-installer unloads PrjFS Kext, deletes vfsforgit binaries and symbolic links. The un-installer does not un-mount any mounted repositories. To un-install run uninstall_vfsforgit.sh from Terminal. It will ask you for Admin password.",0
1562,Troubleshooting: add more common issues and solutions,0.645121,- Other bug fixes," Now PrjFS kext will get installed in the standard kernel extensions directory as well, this will let the Operating System find it and autoload it. 2. Added a link to /usr/local/vfsforgit/prjfs/libPrjFSLib.dylib in /usr/local/lib directory; this helps fix the issue where some of the vfsforgit binaries fail to launch bcoz of missing libraries in standard lib search paths. 3. A basic vfsforgit uninstaller.",0
1563,FolderData: opt-in to USN journal updates with config,0.6973486,"A new config setting allows updating USN journals, which is needed when using BuildXL with VFS for Git.","Based on feedback:   - dry-run and confirm are not compatible arguments   - If dry-run is specified, then we should launch the upgrader tool with appropriate arguments",0
1564,Inject a GitProcess into GitObjects.TryDownloadPrefetchPacks() to allow the PrefetchStep to be interruptible,0.5822648,"- VFS for Git will prefetch commits and trees from a cache server in the background on a schedule, to improve the speed of user-initiated fetches, pulls, and pushes","Attempt to log that a EventListener has failed to record a message to all other, non-failing EventListeners at most once. This can be useful for detecting and diagnosing cases when the new TelemetryDaemonEL fails to communicate with the telemetry service/daemon when we expect it to succeed otherwise. Also remove the unused ETW properties that we were sending to the telemetry service/daemon.",0
1565,LooseObjectsStep: use TryGetIsValidObject,0.42562747,1734: Adding winget workflow,"In the GitMaintenanceStep, we had a method ""RunningGitProcessIds()"" that used the Process API to check running Git processes. This can cause unit tests to fail on a dev machine if they are running Git commands (which may be due to background activity on a VFS mount). Inject a new GitProcessChecker to the maintenance step, and use that in unit tests to insert the answer we want. We can now check that we do not advance when there are git processes running.",0
1566,Mac ProjFS kext: Blocks renaming files in offline roots at the hydration stage,0.49645486,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,"Dry run - All pre-checks will be performed, but pre-check failures are ignored. Upgrade checks over the network will be performed but no installer files will be downloaded. No upgrade installers will be launched either. User gets to see the progress messaging and logs as if an actual installer was run. No verify - This is not used right now.",0
1567,Reflect comment,0.39219826,General Improvments,"In the GitMaintenanceStep, we had a method ""RunningGitProcessIds()"" that used the Process API to check running Git processes. This can cause unit tests to fail on a dev machine if they are running Git commands (which may be due to background activity on a VFS mount). Inject a new GitProcessChecker to the maintenance step, and use that in unit tests to insert the answer we want. We can now check that we do not advance when there are git processes running.",0
1568,Update Git to v2.24.1,0.9331461,1737: Update Git to v2.32.0,refs: https://github.com/Microsoft/VFSForGit/pull/670#discussion_r248044521 Co-Authored-By: changeworld changeworld@users.noreply.github.com,1
1569,Merge pull request #1027 from github/posix-hooks-refactor,0.4891065,Pull Requests,Windows build: Only consider dev 15 build tooling,0
1570,Merge pull request #1008 from Mac uninstaller launchd issue,0.5004008,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,"The windows build script looks for installed versions of Visual Studio to find msbuild and related tooling. The structure of where this tooling is located has changed in VS 2019, which causes issues when attempting to run the BuildGVFSForWindows.bat script when VS 2019 is installed. This change addresses that issue by only considering VS 2017 when searching installed build tools.",0
1571,Merge pull request #1503 from github/case-sensitive-followups,0.5508783,Pull Requests," Move to using a concrete class rather than a Dictionary<,> to define   the telemetry daemon message format. Allow the platforms to create 0..* telemetry listeners to be attached   to the tracer. This means we can hide some of the platform-specific   configuration of the TelemetryDaemonEventListerer in the platform   code. Remove the 'telemetry pipe name' from the public interface of the   GVFSPlatform type. Remove InProc from some of the tracer method names (to match the   InProcEventListener -> EventListener rename).",0
1572,Revert #655 Dispose of unused LibGit2Repos,0.51441205,- The installer now unmounts and remounts existing repos automatically,,0
1573,Service porting to Mac,0.64354575,Initial Mac upgrade functionality,"Add a new telemetry event listener which sends JSON messages to a named pipe for out-of-proc dispatch to ETW/AI. The new listener can exist alongside any existing 'platform-specific' telemetry listeners (such as the ETW listener that is in-proc). Events/messages sent by the listener are 'fire-and-forget'; we do not retry and we do not wait any length of time for the pipe to be ready. The rationale here is that we do not want to introduce delay to the execution of the application for only telemetry events. Also if the current system does not have anyone listening on the telemetry named pipe then every message would delay the application execution by the pipe connection timeout(!) We continue to guard the telemetry listener's activation on the presence of the gvfs.telemetry-id global configuration entry, just like the existing in-proc ETW provider. The only difference is that now we don't care what the value of that config entry is, just that it is set. (The in-proc ETW listener uses the value for the ETW iKey which is stored in the daemon's logic instead now.)",0
1574,Update Dispose pattern,0.6149175,1746: Delete custom upgrader,,0
1575,Merge pull request #568 Use GetProcessById if OpenProcess handle is invalid,0.53713703,Pull Requests,Implementation of a new Mac kext log daemon which submits the kext's log messages to the system-wide os_log facility.,0
1576,Merge pull request #855 from Background upgrade check fix,0.50871485,Bug Fix: Fixes a bug with gvfs upgrade that causes versions v1.0.20112.1 from upgrading from private feeds.,"This adds a new executable target, PrjFSKextLogDaemon to the Xcode project. Similar to prjfs-log, it watches for a PrjFS kernel service, connects and begins logging any log messages from the kext. Unlike prjfs-log, they are sent to the macOS unified logging system (os_log) which will archive them for retrieval. The tool is intended to run as a launch daemon using the provided launchd plist.",0
1577,Use the MacFileSystemVirtualizerTester for tests,0.4726242,1697: Fix functional tests to skip around ProjFS issue,This allows each client of the API to do its own logging & recovery.,0
1578,Add --force flag to fast fetch (apply patch from VSTS work),0.5406449,"- VFS for Git will prefetch commits and trees from a cache server in the background on a schedule, to improve the speed of user-initiated fetches, pulls, and pushes"," The functionality for ClearMachNotification() is used in more than one place, so this moves the function to the shared file and adds it to the header. Watching for service termination will be useful for the logging daemon, so that’s moved to the shared file too.",0
1579,Update Git to have proper version number,0.7709197,1663: Update Git to v2.27.0,"We neither have a kernel control socket, nor do we attempt to use os_log directly from the kext anymore.",1
1580,Merge pull request #1730: Fix an issue with FastFetch when deleting files,0.87400943,1730: Fix an issue with FastFetch when deleting files,Mac: Sets deployment target to macOS 10.13 for all targets & sets indentation rules in Xcode project.,1
1581,remove Windows InstallerExtension,0.5358641,- The installer now unmounts and remounts existing repos automatically,,0
1582,Use default content id for VirtualizerTests,0.41141137,1666: Docs: start basic template,,0
1583,Consistency and logging tweaks,0.61511064,See the full change log,,0
1584,Remove unused method,0.45970547,1746: Delete custom upgrader,,0
1585,Keep the update placeholder errors and display at the end,0.6312884,- Fixed an issue where some concurrent updates to the placeholder database would fail,,0
1586,Add PrjFSConfig.xcconfig to input path of GeneratePrjFSVersionFiles,0.54048973,1683: GVFS.SignFiles.csproj: include more DLLs for signing,,0
1587,Cleanup after rebasing,0.6217134,Improves the rate of .gvfsCache cleanup.,,0
1588,Test NuGet credential re-acquisition,0.80631125,- Properly reacquire credentials during nuget upgrader,,1
1589,Merge pull request #1538 IsFileSystemSupported: cleanup test files on Mac,0.51047254,1703: Delete all macOS projects,,0
1590,Upgrader: platform specific blocking process list,0.49595198,Various bug fixes and performance improvements,,0
1591,Merge pull request #748 Merge upgrade_extensibility (NuGet upgrader) feature branch to master,0.62368244,Update NuGet upgrader with new Microsoft package signing certificate,,0
1592,"Run post-fetch job immediately on ""gvfs mount"" to ensure users have an up-to-date multi-pack-index file",0.65069467,- gvfs prefetch learned how to take --files-list.,,0
1593,Use BashRunner for deleting the backup directory of Dehydrate tests,0.44548732,Git commands are now allowed to delete an empty directory,,0
1594,Merge pull request #159 from kyle-rader/feature/fast-fetch-force-flag,0.49542207,Pull Requests,,0
1595,Move thread calculation into MultiThreadedPlaceholderUpdatesAndDeletes,0.57131964,- We have moved MIDX computation to a post-fetch thread. This should save blocking time per prefetch that downloads a packfile from the cache server.,,0
1596,Mac kext: Adds nullability attributes to pointer-typed function parameters.,0.3268938,1726: Config: commitGraph.generationVersion=1,,0
1597,Enabling Service verb Functional tests,0.34804082,1697: Fix functional tests to skip around ProjFS issue,,0
1598,Rename DehydrateFolder to TryDehydrateFolders indicating there is a return value,0.39019427,- No-op gvfs prefetch --hydrate performance is dramatically improved,,0
1599,Cleanup ConfigVerb- removed multiple returns with nested if else.,0.47981358,Improves the rate of .gvfsCache cleanup.,,0
1600,use consistent path var names in DehydrateTests,0.37749287,1685: minor path comparison fixup in ProductUpgrader,,0
1601,Use Moq for ITracer so test will check if SetGitCommandSessionId was called,0.37266868,- Disable commit-graph verify for performance concerns,,0
1602,Merge pull request #1073 GVFS.Service should copy ProjectedFSLib.dll when it's missing and the installed ProjFS version matches the packaged version,0.61736315,Switched over to use the Windows Projected File System (ProjFS) optional feature on RS4 and later. ProjFS is the new name for the GvFlt driver and its associated user mode library.,,0
1603,use std::string length() in common POSIX hook code,0.31544647,1744: Overhaul build and project systems and drop Mac/POSIX code,"Goal of the new TestFixture  Verify UpgradeOrchestrator works works as expected with the new IProductUpgrader interface.  Test and also demonstrate state transitions inside UpgradeOrchestrator.  Implementation details This PR is based on this prototype PR. At a high level, it creates a Moq Mock instance of IProductUpgrader interface. Initializes UpgradeOrchestrator with the Moq upgrader instance. Then drives the orchestrator through simulated error scenarios and verifies it behaves as expected.",0
1604,Merge pull request #998 from Service Mac repo-registry & IPC,0.47981888,Pull Requests,Update paths that refer to kext that were missed as part of refactor,0
1605,Add a vnode cache to the kext to improve the performance of finding a vnode's virtualization root.,0.52254164,"- VFS for Git will prefetch commits and trees from a cache server in the background on a schedule, to improve the speed of user-initiated fetches, pulls, and pushes","New UT for UpgradeOrchestrator using Mock IProductUpgrader instance. The goal is to make sure that UpgradeOrchestrator behaves well with the new IProductUpgrader interface. This adds to the existing UpgradeOrchestrator tests, which test the control flow and messaging. The new tests use Moq framework..",0
1606,Merge pull request #1546 from pmj/native-hooks-undeclared-string-fix,0.47888827,Pull Requests,"The OnGetFileStream() method is a very busy area of code when hydrating a repo. Don't bog it down with useless tracing that doesn't help anything. While exploring the code base for this excessive tracing, I found some code that can be safely deleted because it isn't used by anything.",0
1607,Merge pull request #566 from pmj/prjfs-log-reconnect,0.46663818,1658: ProjFSFilter: Be more robust to missing PowerShell,,0
1608,Merge pull request #538 from jeschu1/pipewarning,0.62768847,Pull Requests,,0
1609,Mac kext testing: Adds comprehensive constructor/factory for mock vnodes,0.4217675,1744: Overhaul build and project systems and drop Mac/POSIX code,"When hydrating a file, we create a new activity for no reason. This event gets logged to telemetry, and that is wasting a lot of resources for something we are not actually reading. The errors and warnings are important, but the activity is not.",0
1610,Revert change that VS made to remove the recursive entry,0.5449171,1652: RepoRegistry: ignore non-existent repos,,0
1611,Refactoring GitSslSettings to be GitSsl and handle all the certificate loading. Extracting interaction with GitSsl from HttpRequestor to GitAuthentication,0.6761142,- Updated Git for a security issue.,Mac kext: log more I/O errors,0
1612,Add SetupFixture for teardown to get the test results at the end,0.45584226,"Other bug fixes, engineering improvements, and test reliability fixes.",,0
1613,Merge pull request #1349 Use static runtime for hooks,0.5373709,Pull Requests,This avoids accidentally using the user's global indentation preferences.,0
1614,Exclude Categories.MacTODO.FailsOnBuildAgent tests on Mac,0.55393326,1703: Delete all macOS projects,Return value checks are added for most vnode I/O calls which were thus far lacking them; these and any other previously ignored error conditions are logged.,0
1615,Fix Dehydrate test,0.47707802,- No-op gvfs prefetch --hydrate performance is dramatically improved,,0
1616,FolderData: update USN journal based on file name only,0.7125308,1664: Update USN journal entries for projected folders,"The deployment target was only explicitly set to 10.13 for PrjFSLib, this sets it on the whole project and un-sets it in the PrjFSLib target so it inherits the project settings.",1
1617,Poll for health data every 30 minutes instead of 15 minutes,0.4548243,  - Break down update placeholders timings so we can see where time is spend during checkout.,,0
1618,Merge pull request #687: readme: update path for PrjFS project,0.5507606,1658: ProjFSFilter: Be more robust to missing PowerShell,,0
1619,Add enlistment id and mount id to data for ETW,0.40409485,Adds additional logging for folder and file placeholder creation.,Refactor PrjFS.xcworkspace into PrjFS.xcodeproj,0
1620,Merge pull request #1615: PostFetchStep: do not immediately delete expired commit-graph files,0.7126211,1647: Fix commit-graph expiration,"I was surprised to not find a functional test that does at least a basic level of stress testing file hydration. This test hydrates every file in the functional test enlistment across many threads, and then checks that each hydration succeeded. By sending either a path (success) or exception message (failure) we can see if there are any problems in any of the threads. If there is a problem in multiple threads, then we will only see one failure. If it takes longer than 5 seconds (on average) to read a file, then the test will fail, but my run took 35 seconds to hydrate the full list, giving plenty of time. During development, I had listed the files starting at the wrong commit, and so got a ""file missing"" error that was properly reported by the test framework. The logs look horrible, since the other reads were still trying to schedule work but a blocking collection was marked for completion due to the test unmounting the repo. Unfortunately, this does not find the bug from #655, but still improves coverage.",1
1621,Mac kext testing: Implementation of mock function argument checking,0.40363312,1697: Fix functional tests to skip around ProjFS issue,,0
1622,Simplify help text for force flag,0.342389,1666: Docs: start basic template,,0
1623,Mac kext: Moves provider messaging to separate source file,0.45785433,Initial Mac platform native notifications,,0
1624,Merge pull request #199: Update name of file that indicates installation version,0.5347122,"- Upgraded to Git 2.19. This version brings with it improvements to unpack_trees to speed up checkout, merge, reset, and rebase.","Our current system of having an .xcworkspace and separate .xcodeproj's that are stitched together with a scheme is inflexible when adding new targets that we want to build. Let's fix this by stitching them into a new .xcodeproj that has a aggregate target.  Fold both .xcodeprojs of PrjFS.xcworkspace into one .xcodeproj. This new .xcodeproj has a target for the kext, lib and logger with a Build All target for build scripts/ease of use. Update header paths for the new structure and update build scripts to handle the new workflow.",0
1625,Address PR feedback. Rename NativeMacMethods to NativeUnixMethods while we're here,0.52161777,1744: Overhaul build and project systems and drop Mac/POSIX code,Improve dev inner loop by enabling .NET SDK projects to build with dotnet CLI,0
1626,Update functional test documentation,0.6014113,"Other bug fixes, engineering improvements, and test reliability fixes.","Tweak GVFS.UnitTests.csproj to work with the dotnet test command. The following scenario should work: Running the command ""dotnet test"" on the GVFS.UnitTest project should build   and run the assocated unit tests. Several changes are required to enable this scenario: 1) Do not Generate program file Our test project generates its own executable, which conflict with the default configuration of the vstest framework for netcoreapps. According to the links below, netcoreapps require a Program.cs, which is not usually included in test projects. Because of this, vstest implicity  adds this file for dotnetcore apps, which is conflicting with the explicitly included Program.cs we define. The suggested fix is to supress the automatic injection of the entry point via the ""GenerateProgramFile"" property. Links: https://github.com/Microsoft/vstest/issues/636 https://github.com/Microsoft/vstest/issues/608 2) Add PackageReference to Microsoft.NET.Test.SDK This is required for dotnet test to discover tests 3) Add PackageReference to NUnit3TestAdapter This is required to integrate NUnit tests with the test discovery / execution framework.",0
1627,Merge pull request #1111 Update Microsoft.Data.Sqlite packages to version 2.2.4.0,0.5435512,- Fixed an issue where some concurrent updates to the placeholder database would fail,"Teach GVFS.Platform.Mac to only copy libPrjFSLib if explicitly directed to, and have the BuildGVFSForMac build script specify the necessary argument. This change is to allow developers to build the GVFS.Platform.Mac project using msbuild on the command line and enable the use of ""dotnet build"" and ""dotnet test"" commands. The current build setup assumes that libPrjFSLib has been built and exists, and always attempts to copy it to the final BuildOutput directory. However, this native project is not directly built by the msbuild system, which relies on the BuildGVFSForMac build script to make sure it is built as expected. This causes problems with building the GVFS.Platform.Mac project directly. It also prevents us from running the unit tests without also building the native project.",0
1628,Delete unused code in LibGit2Repo,0.49296892,1717 [HOTFIX] Update Git to remove ODB string check,"The GVFSVersion property was only defined for a subset of build configurations, caused other build configurations to fail. This caused the ""dotnet build"" command (without specifying other properties) to fail. While we may not want to support all build configurations, the build does not need to fail due to this missing property. This change defines the GVFSVersion property for all build configurations in the GVFS.Platform.Mac csproj.",0
1629,Rename include to sparse throughout the code to more closely match git and it's sparse (#1348),0.5743165,1663: Update Git to v2.27.0,,0
1630,Fix Mac Profiling build,0.6433061,Initial Mac upgrade functionality,"  PR 107 in microsoft/git includes a fix for the way we permute the set of packs during a git multi-pack-index expire command. Specifically, this fixes an issue when we expire packs and add packs to the multi-pack-index at the same time (and the order of those packs).   PR 100 in microsoft/git includes updates to trace2. ",0
1631,Clean up hooksPath required by GitHooksLoader,0.609275,"- Post-index-change hook will help ensure consistency between Git and VFS for Git's reckoning of the state of the repository, and eliminate a class of bugs.","  Change the native method we call when disposing a repo from git_tree_free to git_repository_free.   Delete unused method for getting a blob size.   These were safe changes made as part of #655, but were reverted in #667 due to issues with the pool changes.",0
1632,Revert whitespace change,0.45967475,Major Changes,"Refactor VFS4Git upgrade logic to support upgrade extensibility This is the first PR of a series of changes to enable upgrade extensibility. In this one, UpgradeOrchestrator and ProductUpgrader are refactored so it becomes easy to incorporate Nuget upgrader in an upcoming PR. In this PR:   Create a common interface for upgraders to implement (IProductUpgrader). IProductUpgrader encapsulates the API that components need to implement to download upgrade packages from specific feeds. A feed can be a GitHub release or a NuGet feed, for examples.   UpgradeOrchestrator, which contains the logic to drive the upgrade process (including querying for updates, unmounting / remounting repositories, and orchestrating the upgrade process) works against the IProductUpgrader interface. This means the orchestration is agnostic to the specifics of where the upgrade packages are downloaded from and how they are installed.   The existing ProductUpgrader class was renamed to GitHubUpgrader, as this component works against GitHub Releases.   GitHubUpgrader implements IProductUpgrader interface.   In an upcoming PR, a NugetUpgrader component (that also implements IProductUpgrader will be created. This component will know how to download and install upgrade packages from a NuGet feed.   ProductUpgrader implements a factory method that creates an IProductUpgrader instance. It can be GithubUpgrader (orNugetUpgrader in an upcoming PR) based on Local GVFS Configuration.   gvfs upgrade using existing Github/release upgrade works. UT also work.   End-to-End The features/upgrade_extensibility branch contains a preview of the end-to-end functionality. It includes a rough version of the upgrader that works with a NuGet feed. It can be used as a guide to see how we envision other upgraders to plug into the scaffolding being built in this PR.",0
1633,Move DeleteAllInstallerDownloads into ProductUpgrader,0.64562976,1668: ProductUPgradeTimer: remove unacceptable Environment.Exit(),,0
1634,Merge pull request #1117 from pmj/mac-kext-shouldhandle-cleanup-1,0.4751612,Pull Requests,,0
1635,Don't fill placeholder with data to make size,0.3576939,"* The post-command step to update placeholder files now batches its size requests to the server, resulting in significant speedups in situations where many placeholder files needed to be updated","We just yesterday got the large repo build perf tests running again, but then they started failing after merging #655. Running a large repo build test on this branch succeeded, so we should revert and figure out what went wrong.",0
1636,Remove unnecessary parameter,0.43962318,1689: Make delete docs more verbose,,0
1637,Merge pull request #1513 Sparse UI cleanup,0.53245866,Pull Requests,,0
1638,Turn on PackFileMaintenanceStep,0.49489254,1675: PreCommandHook: don't lock pack-objects,"Created new IProductUpgrader interface and a new Factory class ProductUpgraderFactory to create IProductUpgrader instances. Renamed old ProductUpgrader to GitHubUpgrader. GitHubUpgrader implements IProductUpgrader interface and contains all of the old functionality  in ProductUpgrader. Also renamed related Unit test classes (UpgradeOrchestratorTests to UpgradeOrchestratorWithGitHubUpgraderTests, MockProductUpgrader to MockGitHubUpgrader). Updated GVFS.Service, UpgradeVerb and UpgradeOrchestrator (upgrader tool) to use the new Factory class and IProductUpgrader instances. Also updated a few UT classes and did minor code cleanups. In an upcoming PR Nuget upgrader will be incorporated as a IProductUpgrader.",0
1639,Merge pull request #435: Move build dependencies feed,0.5779768,Pull Requests,,0
1640,Merge pull request #1317: Setup.iss: Update GitHub URL,0.5376891,Pull Requests,,0
1641,Kext changes to support sending RelativeFromPath,0.36458784,1726: Config: commitGraph.generationVersion=1,"The LibGit2RepoPool stores a collection of LibGit2Repo objects, which are our way of interacting with the native libgit2 library to discover object existence and local blob sizes. We currently create a list of these objects and don't dispose of them until we unmount. This has some strange side-effects:   libgit2 doesn't use the multi-pack-index, so it creates handles    to all of the .idx files, and sometimes the .pack files.   Since libgit2 has hold of these handles, the packfile maintenance    step cannot delete those files, and hence causes a problem when    that runs in the background. We have ways to clean up afterwards.   There are potentially other problems with the approach, such as ""how does libgit2 re-check the list of packfiles?"" It is possible (I have yet to verify) that libgit2 is stuck with its initial list of packfiles and hence a long-running mount process would actually be missing a lot of objects that are otherwise present via prefetch packs. The solution presented here is to dispose of these objects on a regular cadence, assuming no one has interacted with the pool in a while. Using the Timer, we can adjust the dueTime to delay the disposal action. We can now also add repos back to the pool as necessary.",0
1642,Don't fall back to installing via INF when enabling the optional feature fails (#127),0.46714288,1697: Fix functional tests to skip around ProjFS issue,,0
1643,Fix download cleanup issue caught by Functional test,0.5988797,A case where FastFetch would not download a small number of files has been fixed.,,0
1644,Verify Installer signature before launching,0.578632,  - Now approves credentials on authentication success,"Run the git commit-graph verify and git multi-pack-index verify commands after any command that would change those files. If these fail, then delete the corrupt file and rewrite. We've had issues with users data in the past, and this gives us a way to automatically detect and repair these scenarios. The immediate rewrite should work since we will regenerate from the other Git data. Issues we've seen in the past are related to trusting the content in these files and carrying that data forward to future versions of the file.",0
1645,Merge pull request #259: Tweak NamedPipe protocol (fix #142),0.53724045,1741: Fix winget tag specification,,0
1646,"Fixed failing dehydrate scenario, reduced tracing chatter",0.49809828,- No-op gvfs prefetch --hydrate performance is dramatically improved,,0
1647,GitProcess: repack kept packs,0.6678059,"- Upgraded to Git 2.19. This version brings with it improvements to unpack_trees to speed up checkout, merge, reset, and rebase.",The max size will be enforced by external worker thread limits. We can more easily track the number of active repos and reduce the complexity of the pool.,0
1648,MountMergesLocalPrePostHooksConfig: skip comments in hooks config,0.51465476,1674: Config: disable status.submoduleSummary,,0
1649,Update Git to Git-2.19.1.gvfs.1.3.ge56ee8b,0.87842196,1736: Update Git to v2.31.1.vfs.0.3,,1
1650,Fixed up another entry point that requires auth,0.46295223,- Fixed several incorrect interactions with credentials,,0
1651,Merge pull request #736 from jamill/upgrade_check,0.53674626,Pull Requests,,0
1652,MountTests fixes,0.6400578,- Multiple mount process reliability bugs have been squashed.,,0
1653,Merge pull request #1694: Update Git to v2.29.0,0.74423677,1694: Update Git to v2.29.0.,,1
1654,Merge pull request #1623: Add $ to make string interpolated,0.492123,Pull Requests,,0
1655,Rename NuGetUpgrader namespace and move NuGetUpgrader unit tests to NuGetUpgrade folder,0.6180402,Update NuGet upgrader with new Microsoft package signing certificate,,0
1656,Merge pull request #1169: Fix Append Files,0.5192352,1730: Fix an issue with FastFetch when deleting files,,0
1657,Only create placeholder on mac if folder is included,0.6659354,Adds additional logging for folder and file placeholder creation.,,0
1658,Add and clean up functional tests for included folders,0.5004126,1697: Fix functional tests to skip around ProjFS issue,,0
1659,Check for the actual objects directory instead of just one folder,0.49927378,Adds additional logging for folder and file placeholder creation.,,0
1660,Abstract listing sparse folders,0.46318278,Adds additional logging for folder and file placeholder creation.,,0
1661,Merge pull request #737 from pmj/mac-syscall-tracing,0.43135822,Pull Requests,"The LibGit2RepoPool stores a collection of LibGit2Repo objects, which are our way of interacting with the native libgit2 library to discover object existence and local blob sizes. We currently create a list of these objects and don't dispose of them until we unmount. This has some strange side-effects:   libgit2 doesn't use the multi-pack-index, so it creates handles    to all of the .idx files, and sometimes the .pack files.   Since libgit2 has hold of these handles, the packfile maintenance    step cannot delete those files, and hence causes a problem when    that runs in the background. We have ways to clean up afterwards.   There are potentially other problems with the approach, such as ""how does libgit2 re-check the list of packfiles?"" It is possible (I have yet to verify) that libgit2 is stuck with its initial list of packfiles and hence a long-running mount process would actually be missing a lot of objects that are otherwise present via prefetch packs. The solution presented here is to dispose of these objects on a regular cadence, assuming no one has interacted with the pool in a while. Using the Timer, we can adjust the dueTime to delay the disposal action. We can now also add repos back to the pool as necessary.",0
1662,Use explicit class declarations instead of an anonymous class for payload,0.35709906,Upgrade supports an anonymous endpoint to decouple rollouts to different engineering systems.,"The PackfileMaintenanceStep introduced an issue on the perf machine during CI builds, so pull it out of the scheduler until we fullly understand what happened and have a fix prepared. While in the scheduler, I noticed that the non-prefetch maintenance was not running when we are not using a cache server. Fix that so those users can still benefit from the maintenance.",0
1663,Cleanup FileBasedLock and make it Windows specific,0.48352087,Adds additional logging for folder and file placeholder creation.,"The PackfileMaintenanceStep introduced an issue on the perf machine during CI builds, so pull it out of the scheduler until we fullly understand what happened and have a fix prepared. While in the scheduler, I noticed that the non-prefetch maintenance was not running when we are not using a cache server. Fix that so those users can still benefit from the maintenance.",0
1664,AutomaticallyDisposesAfterNoUse additional test logging,0.53386664,- Disable commit-graph verify for performance concerns,Add error message to output when call to gvfs/config endpoint fails,0
1665,Log ring when querying for upgrades on the background timer,0.5121696,See the full change log,Remove trailing whitespace and enforce StyleCop rule SA1028,0
1666,Mac ProjFS kext: Adds system for registering processes for offline root I/O,0.51501185,Switched over to use the Windows Projected File System (ProjFS) optional feature on RS4 and later. ProjFS is the new name for the GvFlt driver and its associated user mode library.,"EditorConfig is meant to help define and maintain consistent coding style across different editors and IDEs. A description for EditorConfig can be found at: https://editorconfig.org Visual Studio comes with native support for EditorConfig. https://docs.microsoft.com/en-us/visualstudio/ide/create-portable-custom-editor-options?view=vs-2017 VS Code doesn't currently support editorconfig out of the box, but it can be enabled with a plugin. EditorConfig.org lists the following plugin: https://marketplace.visualstudio.com/items?itemName=EditorConfig.EditorConfig",0
1667,Merge pull request #672 Safe changes to LibGit2Repo,0.5125106,1717 [HOTFIX] Update Git to remove ODB string check,Clean up existing instances of trailing whitespace in our codebase and stop suppressing StyleCop rule SA1028 which enforces no trailing whitespace: https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1028.md,0
1668,GitClenupStep: Fix Race Condition,0.49450085,"* Added a git config setting to disable the calculations for detecting force pushes during 'git fetch' and 'git pull'. That calculation can take 10's of seconds on a large graph, and users can now opt out of it.",,0
1669,Update grammar issues,0.57512987,1747: UpgradeVerb: write deprecation notice,"Create a new maintenance step for cleaning up the packfiles in the shared object cache. This is done in two steps:   git multi-pack-index expire: This deletes the pack-files whose objects appear in newer pack-files. The multi-pack-index prevents git from looking at these packs. Rewrites the multi-pack-index to no longer refer to these (deleted) packs.   git multi-pack-index repack --batch-size=<size> inspects packs covered by the multi-pack-index in modified-time order (ascending). Greedily selects a batch of packs whose file sizes are all less than ""size"", but that sum up to at least ""size"". Then generate a new pack-file containing the objects that are uniquely referenced by the multi-pack-index.   See this PR in microsoft/git for details of the git implementation. There are some important details:   The expire command will not delete packs that are marked with a .keep file. So, we can keep our most-recent prefetch pack around by writing a .keep file. This avoids any change to the logic for the most-recent good prefetch timestamp.   The expire command frequently fails to actually delete .idx files in a VFS for Git repo. This is due to something holding a handle to the files, as later we are able to delete them; we've seen this problem before with scripts that try to clean up the pack directory. We clean up .idx files that are not paired with a .pack after we run the expire step. This can generate warnings in the multi-pack-index write commands as it tries to add the packs based on their .idx files. The commands succeed, however.   According to the git pack-objects documentation, we should set the pack.window and pack.depth config settings to zero to avoid delta calculations. This saves significant computation time when our packs contain blobs, as the deltification algorithm can be very slow. If we were packing only commits and trees, the problem is not as significant. It is important that we don't set this globally, that way we actually compute deltas on push. Instead, just set the settings using the -c mechanism in Git. ",0
1670,PrefetchVerbTests: Remove commit-graph check,0.77659905,- Disable commit-graph verify for performance concerns,,1
1671,Merge pull request #969 Fix Mac Profiling build,0.53182983,Initial Mac upgrade functionality,,0
1672,Refactor native calls out of PrefetchLibGit2Repo into platform specific,0.49454603,1674: Config: disable status.submoduleSummary,,0
1673,Clean up MacFileSystemVirtualizerTests,0.6058967,Improves the rate of .gvfsCache cleanup.,Enable FastFetch to lay out symlinks correctly,0
1674,Merge pull request #1030: Add more time for disposal,0.5878099,Pull Requests,,0
1675,Load SSL certificate according to git config,0.61417353,Includes Git LTS security release,LooseObjectsStep (Part 2),0
1676,Add null check when creating trace metadata using and exception,0.4542204,1652: RepoRegistry: ignore non-existent repos,,0
1677,Increasing precision of timestamps being logged,0.54311794,  - Break down update placeholders timings so we can see where time is spend during checkout.,,0
1678,PrjFs: use builtins for detecting overflow to protect memory allocations,0.5520903,- Improved the memory usage during MIDX computation.,This prevents writing bad data to the commit-graph when the list of commits to write is corrupted in-memory.,0
1679,Update comments and remove unused code,0.49455535,1668: ProductUPgradeTimer: remove unacceptable Environment.Exit(),Mac kext: Fix for vnode leak causing shutdown/reboot hang and fix for memory leak,0
1680,Only schedule PrefetchStep when in attended mode and using a cache server,0.5962025,- We have moved MIDX computation to a post-fetch thread. This should save blocking time per prefetch that downloads a packfile from the cache server.,,0
1681,Move NormalizePath to GVFSDatabase class so it can be used in table classes,0.56063604,"- Further optimizations to GVFS's index parsing, saving time on commands that need to reproject (like checkout).",,0
1682,Merge pull request #1101 from Use published version of Service,0.6033803,Pull Requests,,0
1683,Merge pull request #1154 from jamill/projfs_dependency_fix,0.50912654,1658: ProjFSFilter: Be more robust to missing PowerShell,,0
1684,Merge pull request #1094: Delete corrupt loose objects during LooseObjectsStep,0.50277245,1730: Fix an issue with FastFetch when deleting files,,0
1685,Merge pull request #1004 from Test reliability issue #852,0.6017211,Other bug fixes for reliability,,0
1686,"Merge pull request #812: Provide a more actionable ""unsupported features"" message for Server 2016 users",0.57939667,Pull Requests,,0
1687,Adds assertions that all auth responses succeed,0.34374517,  - Now approves credentials on authentication success,,0
1688,Merge pull request #540: Start the move to yaml pipelines.,0.43513885,Pull Requests,"The external method functions need not be public in the provider user client class; this moves the only reference to them to be a static member of the class instead of a free constant, which allows us to mark the functions as private.",0
1689,Add hardlink creation functional tests,0.42438117,1683: GVFS.SignFiles.csproj: include more DLLs for signing,"When the kext is unloaded, all its objects in the IORegistry are terminate()d; for IOUserClient subclasses, this means that clientClose() is not called. For the provider user clients, this meant that they were not deregistered as active providers from the virtualization root list. This change fixes that by performing the deregistration on stop().",0
1690,Merge pull request #1002 Add more logging when test gets access denied from moving src folder,0.48183876,Pull Requests,"The memory for the array of virtualization roots was not being freed on kext unload, this change fixes that. It also adds an array memory freeing helper function.",0
1691,Remove unused size method from LibGit2Repo,0.46165356,1730: Fix an issue with FastFetch when deleting files, Pack loose objects into a Packfile,0
1692,Send back error message from TryDehydrateFolder to sparse prune,0.39246768,1674: Config: disable status.submoduleSummary,Fix VS IDE Builds post FastFetch and Versioning rework,0
1693,Cheap symlink() implementation in NativeUnixMethods.cs,0.4273846,1666: Docs: start basic template,Loose Object Cleanup Step (Round 2),0
1694,Re-enable all tests that are failing due to auth cache issues,0.51243794,- Fix backoff on cache server size endpoint 404.,,0
1695,Stop the queue during unit tests,0.45374495,- Disable commit-graph verify for performance concerns,Clean up Versioning and AssemblyInfo for .NET Core Projects,0
1696,Mac dtruss: Basic documentation,0.5813483,Initial Mac upgrade functionality,,0
1697,GVFS.Platform.Mac: tweak csproj to always define GVFS version,0.6364744,GVFS is now available as a binary installer,,0
1698,Merge pull request #1593 from microsoft/features/mac-endpoint-security-prototype,0.45665172,Pull Requests,,0
1699,use FileSystemHelpers in additional func tests,0.46796355,1697: Fix functional tests to skip around ProjFS issue,,0
1700,Upgrader: write out more informative error message when install fails,0.50631726,* Improve error message from gvfs upgrade if the Git installation could not be found.,,0
1701,Change to use ContainsParentDirectory for removing modified paths,0.519163,1685: minor path comparison fixup in ProductUpgrader,,0
1702,Add more functional tests for dehydrate,0.5109944,- No-op gvfs prefetch --hydrate performance is dramatically improved,,0
1703,Merge pull request #1549 HttpRequestor: retry 429 (too many requests) responses,0.61761785,Pull Requests,See this PR in microsoft/git for the changes here. Should speed up 'git push' by a significant amount. Also includes Git for Windows v2.20.1(1).,0
1704,refresh AuthoringTests.md,0.5604701,1750: Update Readme.md, We call prune-packed to remove loose objects that are already in pack-files Dehydrate has been overloaded to run the new step using the internal flag,0
1705,dehydrate: skip mount validation steps,0.49993056,- No-op gvfs prefetch --hydrate performance is dramatically improved,,0
1706,refactor Mac platform into POSIX base,0.72540927,1744: Overhaul build and project systems and drop Mac/POSIX code,Publish a mac build drop and consume it for functional test runs,1
1707,Merge pull request #572 from jamill/stylecopanalyzer,0.5653302,Pull Requests,,0
1708,Mac dtruss: Improves trace output for various syscalls,0.4286081,Initial Mac platform native notifications,"This PR addresses #580 and adds --files-list option to prefetch verb. It also adds a magic file name, to allow passing in both --files-list and --folders-list via stdin.",0
1709,Fixup NuGetUpgrader - install necessary NuGet dlls,0.65688246,- Upgrade supports NuGet feeds as a distribution source.,,0
1710,Allow multiple internal mount parameters,0.5470795,Includes fixes to config settings for internal users only,Stand up FastFetch on MacOS,0
1711,Merge pull request #1312: Use the new signing certificate.,0.58309764,1683: GVFS.SignFiles.csproj: include more DLLs for signing,Configure Visual Studio 2019 to use expected version of Git,0
1712,LooseObjectsStep: simply code for getting directory paths,0.4470524,1679: BuildGVFSForWindows.bat: use nuget on PATH,,0
1713,build: migrate GVFS.UnitTests and .Tests projects,0.5858097,"Many other reliability improvements in interactions between GVFS and the file system, and between GVFS and git",Set registry key that Visual Studio 2019 uses to set path to git.exe so it uses the expected version of git.,0
1714,[macOS] Capture installer log on upgrade failure,0.6827276,Initial Mac upgrade functionality,,0
1715,Mac dtruss: Fixes tracing of execve() syscall,0.40137,Initial Mac platform native notifications,Add functional tests for LsTree parsing issue,0
1716,Merge pull request #939: Fix credential interactions,0.69153285,- Fixed several incorrect interactions with credentials,,0
1717,Update docs/troubleshooting.md,0.64615023,- Other bug fixes,,0
1718,Merge pull request #1487: Use the full path to GVFS.Hooks executable in the hook configuration,0.5479026,1678: BuildGVFSForWindows.bat: use nuget on PATH when possible,,0
1719,Merge pull request #1429 from pmj/mac-kext-182-block-offline-empty-file-access,0.4416864,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,,0
1720,Mac kext: Whitespace fix (code formatting),0.4437712,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,"We need EpochConverter to talk to the cache servers, and we are adding more dependencies on it with the maintenance steps. Add unit-level tests to ensure it is working correctly.",0
1721,Merge pull request #1755 from ldennington/update-metadata,0.49773365,Pull Requests,,0
1722,Merge pull request #272 Recursively expand directories before delete and enable folder rename functional tests,0.4664357,Git commands are now allowed to delete an empty directory,Remove parameterization from GitBlockCommandsTests,0
1723,Update GvFlt_EULA.docx to markdown format,0.52486944,1683: GVFS.SignFiles.csproj: include more DLLs for signing,Mac: Cleanup while investigating converting files to full,0
1724,Merge pull request #686 from nickgra/DiagnoseKextLogs,0.46367988,1732: Use one NuGet feed,"We need EpochConverter to talk to the cache servers, and we are adding more dependencies on it with the maintenance steps. Add unit-level tests to ensure it is working correctly.",0
1725,Fix GVFS.FunctionalTests.Windows so that they can be run from the IDE,0.6491295,Instructions for installing and using GVFS are available at https://github.com/Microsoft/GVFS,"Includes changes from microsoft/git PR 94 to fix a perf regression in builtin rebase. Re-enables builtin rebase by default. The performance regression was from an extra index read/write. With the fix, we save two seconds from before in our perf tests.",0
1726,Clean up NUnit source parameterization,0.45100218,Improves the rate of .gvfsCache cleanup.,,0
1727,Mac ProjFS kext testing: Use modern mock vnode creation API,0.58784544,1697: Fix functional tests to skip around ProjFS issue,,0
1728,use RepoBackingRoot as needed in functional tests,0.5447186,1652: RepoRegistry: ignore non-existent repos,Update the GitBlockCommandsTests,0
1729,Merge pull request #684 from Adding dry-run and no-verify,0.5084533,Pull Requests,,0
1730,Rename TryFetchAndLogKextHealthData and StartKextHealthDataPolling to more appropriate names,0.40481135,"The merge strategy default is changed from recursive to ort which should present significant performance improvements for commands such as git merge, git rebase, and git cherry-pick. Huge thanks to external contributor @newren for creating this new merge strategy!",Simplify and remove duplicate test cases for checking that unsupported git commands are blocked in VFSForGit repos. Signed-off-by: Ben Peart benpeart@microsoft.com,0
1731,Added experimental tag and status message,0.50920343,1741: Fix winget tag specification,stop blocking unsupported git commands,0
1732,Fallback to slow method of getting process,0.47767597,- Multi-threaded index reads will improve load time of large .git/index,Enable reset.quiet optimization in VFSForGit repos,0
1733,Recursively expand directories before rename and enable folder rename functional tests,0.4938164,Adds additional logging for folder and file placeholder creation.,"Now that git has learned to block unsupported commands on VFS4G repos, we can remove that logic from the pre-command hook. Signed-off-by: Ben Peart benpeart@microsoft.com",0
1734,Additional cleanup for PR feedback,0.54709053,Improves the rate of .gvfsCache cleanup.,Update VFSForGit to use git build v2.20.0.vfs.1.1 that contains fixes for bad interactions between reset.quiet and the post-indexchanged hook. Set the reset.quiet setting in GVFSVerb:TrySetRequiredGitConfigSettings and ControlGitRepo:Initialize to take advantage of the performance improvements to 'git reset' in 2.20.0. Signed-off-by: Ben Peart benpeart@microsoft.com,0
1735,Catch exceptions when trying to set Visual Studio registry key,0.41137627,- Fixed several incorrect interactions with credentials,,0
1736,GitHubUpgrader: use common installation ID for log files,0.5990847,- Built-in git rebase is on by default.,Includes v2.20.0.windows.1. It also disables reset.quiet (correctness issue) and rebase.useBuiltin (performance issue).,0
1737,use DirectorySeparatorChar in repair job messages,0.41796267,- Other bug fixes,,0
1738,Fix build break on Windows,0.5277876,- Other bug fixes,,0
1739,Adding --files-list option to PrefetchVerb. Allowing ot specify &1 for reading from stdin,0.5687468,- gvfs prefetch learned how to take --files-list.,,0
1740,Readme: delete reference to Mac version,0.7028061,1703: Delete all macOS projects,,1
1741,WindowsGitHooksInstaller: allow configuring hooks in local git config,0.5985259,Includes Git for Windows 2.30.0.,Update gitignore for new TestResult.xml filenames,0
1742,"""winget install microsoft-git"" finds entries in msstore",0.48817444,Includes Git for Windows 2.30.0.,,0
1743,minor path comparison fixup in ProductUpgrader,0.95862675,1685: minor path comparison fixup in ProductUpgrader,,1
1744,LibGit2RepoInvoker: cleanups from feedback,0.5199519,1717 [HOTFIX] Update Git to remove ODB string check,,0
1745,GVFS.props: make path markers more consistent,0.62678903,- We have improved how GVFS handles enlistments in junctions and mapped to a drive letter.,,0
1746,Add comments why and how we are using the HashSet of all placeholders for folder reexpansion,0.62576675,Adds additional logging for folder and file placeholder creation.,Pass ITracer to background process launching to log errors,0
1747,FAQ: add discussion of macOS and Scalar,0.5589808,Initial Mac upgrade functionality,Mac: Skip vnode operations that have the KAUTH_VNODE_ACCESS bit set,0
1748,Merge pull request #772 from Rephrase ProjFS error messaging,0.5470662,1697: Fix functional tests to skip around ProjFS issue,,0
1749,Set the auth cache TTL to 0 when registering a virtualization root,0.5257,- Fix backoff on cache server size endpoint 404.,,0
1750,Merge pull request #460 from nickgra/deletePATInPrep,0.51541185,Pull Requests,Allow core.filemode to be configured by platform,0
1751,Merge pull request #466: Add Scripts/Mac/CI/CreateBuildDrop.sh,0.5222393,Pull Requests,,0
1752,Simplify checking the newly created files and removing from modified paths,0.5480536,Adds additional logging for folder and file placeholder creation.,,0
1753,Mac kext: Rework TrySendRequestAndWaitForResponse shutdown/error handling,0.49897873,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,,0
1754,Cleanup,0.6473231,Improves the rate of .gvfsCache cleanup.,Use GetProcessById if OpenProcess handle is invalid,0
1755,Centralize spcial Mac paths in InitializeEnviroment.sh,0.5407541,1744: Overhaul build and project systems and drop Mac/POSIX code,,0
1756,Error handling and comment when creating the placeholder on Mac when included,0.4379118,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,,0
1757,Merge pull request #437 from jeschu1/virtualrepoready,0.6147685,Pull Requests,,0
1758,build: fix the build error related to dotnet core version,0.49236697,1741: Fix winget tag specification,,0
1759,build: migrate GVFS.Service project,0.64641744,- VFS for Git will performance maintenance in the background. This release will pack loose objects in .gvfsCache into packfiles. ,,0
1760,Enable the ORT strategy in the control repo,0.5409345,"The merge strategy default is changed from recursive to ort which should present significant performance improvements for commands such as git merge, git rebase, and git cherry-pick. Huge thanks to external contributor @newren for creating this new merge strategy!",,0
1761,Update dehydrate folder tests,0.46727222,- No-op gvfs prefetch --hydrate performance is dramatically improved,"When pre-checks fail, service was not cleaning up the upgrade downloads directory. This issue was caught by FT in CI build nodes, which don't have ProjFS inboxed causing pre-check to fail. Updated service to do the cleanup even when pre-check or download tasks fail.",0
1762,RepoRegistry: ignore non-existent repos,0.88898116,1652: RepoRegistry: ignore non-existent repos,,1
1763,Use GIT_QUIET to make tests more robust,0.5596112,"The .vfs. versions of Git were bundling old packages from git-for-windows/build-extra, so they included versions with known security flaws. None of these had known problems in use with Git, but other software or scripts might use those packages, so it is safest to update them.",,0
1764,Platform native notifications,0.8064215,Initial Mac platform native notifications,,1
1765,Don't build GVFS.PostIndexChangedHook.Windows on Mac,0.58843255,1678: BuildGVFSForWindows.bat: use nuget on PATH when possible,,0
1766,Fix StyleCop issue,0.52263546,- Other bug fixes," - When writing out a file, use the truncate flag so we don't overwrite the existing file and leave existing content if the new data size is shorter than the previous  - When comparing the index generated by FastFetch with an index created by 'git status' via 'ls-files --debug', remove the lines that contain dev, ino, uid and gid. We set these to 0 when writing out the index in FastFetch, which historically worked fine on Windows, but MacOS will set these to a proper, non 0 value when writing out the Index.",0
1767,Merge pull request #585: Clean up some Mac TODOs,0.5892439,1703: Delete all macOS projects,,0
1768,Merge pull request #578 Fix bad test by fixing maintenance step lock string,0.51425517,- Other bug fixes,,0
1769,Incorporating suggestions from test feedback.,0.49819583,"Other bug fixes, engineering improvements, and test reliability fixes.",separate the FileSystemVirtualizer (which requires a reference to GVFS.Virtualization) from the PlatformLoader.,0
1770,"Reduce scope of changes to be specific to PreDelete, update MirrorProvider",0.52156174,1746: Delete custom upgrader,Notably: * Move to a class for tracking the tuple of Path and Mode * Reduce amount of duplicated test code in cleaning up after functional tests,0
1771,Add test that adds untracked file in new folder 2 levels deep,0.53136224,Adds additional logging for folder and file placeholder creation.,,0
1772,Mac ProjFS Kext: Minor macro tweak,0.5541655,- Better errors around ProjFS installation issues.,,0
1773,Update the upgrader tests,0.6547535,"Other bug fixes, engineering improvements, and test reliability fixes.",,0
1774,Select installation of VS that can build the project on Windows.,0.5500536,1678: BuildGVFSForWindows.bat: use nuget on PATH when possible,FastFetch from .NET Framework projects,0
1775,Merge pull request #861 from No telemetry for non-elevated upgrade,0.4583638,Pull Requests,"RestorePacakges.bat, we only restored two of our .NET Standard projects. We should restore the entire .sln with .NET Core's dotnet command and pass in the correct package directory as we do on MacOS. Before these changes, .NET Core/Standard projects would have their packages restored into the user's home folder/.nuget. Since FastFetch was .NET Framework up until now, we never had issues with LibGit2Sharp not being present.",0
1776,Merge pull request #1186 from Halterer/ReadmeUpdate,0.54729855,Pull Requests,functions.,0
1777,Don't use .NET Core specific Remove,0.45766917,1746: Delete custom upgrader,"When pre-checks fail, service was not cleaning up the upgrade downloads directory. This issue was caught by FT in build nodes, which don't have ProjFS inboxed causing pre-check to fail. Also incorporated review comments - renamed EmptyDownloadDirectory to CleanupDownloadDirectory.",0
1778,Merge pull request #1074: Separate LocalStorageRoot from WorkingDirectoryRoot,0.5188135,Pull Requests,,0
1779,Update Git to include v2.26.1,0.93408215,1660: Update Git to include v2.26.2,Move to Roslyn-based StyleCopAnalyzer,1
1780,Add check for existing pipe and better error messaging,0.49415222,- Disable commit-graph verify for performance concerns,PR feedback,0
1781,Updates for IWriteBuffer and new ProjFS Feed,0.5928266,- Improved reliability of how the installer upgrades from non-inboxed to inboxed ProjFS.,,0
1782,Use 'git_repository_free' instead of 'git_tree_free',0.5994088,Includes Git v2.27.0,,0
1783,"Give an error message on CLI when the kext is not loaded, rather than just failing to connect to the mount process",0.5366144,- Fixed a bug that would cause VFS for Git mount process to shut down if it receives out-of-order ProjFS callbacks.,,0
1784,Little changes from PR Feedback,0.5472151,General improvements:,,0
1785,Update GVFS/GVFS.Installer.Windows/Setup.iss,0.75806075,Instructions for installing and using GVFS are available at https://github.com/Microsoft/GVFS,"Add the recommended StyleCop component as a Roslyn analyzer. This version of StyleCop has a couple of benefits over the msbuild version:   In addition to compile time checks, it will check for issues as you    type.   This version is supported in .NET Core and Standard projects   This version is being maintanied   This change attempted to preserve the existing rules for this project, but there are some differences in behavior between the new and legacy versions of StyleCop. I added the StyleCop Analyzer with the default configuration and went through the list of violations. For rules that we never followed, I added exceptions to GVFS.ruleset. For violations of rules that looked like they should have been flagged, I went and made code changes to fix the violation. The custom ruleset (GVFS.ruleset) does not include any of the basic rules for static code analysis. Statis code analysis had to be performed manually, and does not apply to .NET Core or Standard projects. As these rules appeared to not be widely used previously (we did not manually run static code analysis), and does not apply to the newer version of the framework, I decided to not keep them.",1
1786,Temporary fix: look up vnode path earlier in callback,0.5448197,"- VFS for Git will prefetch commits and trees from a cache server in the background on a schedule, to improve the speed of user-initiated fetches, pulls, and pushes",,0
1787,sparse: don't warn about dirty files inside the sparse set,0.48766372,A case where FastFetch would not download a small number of files has been fixed.,,0
1788,Add comments for more information,0.44051886,New Features:,,0
1789,GitHooksLoader: move under GVFS dir and migrate proj,0.65906143,- VFS for Git will performance maintenance in the background. This release will pack loose objects in .gvfsCache into packfiles. ,,0
1790,Configure installer to install PrjFSKextLogDaemon,0.57135,- Better errors around ProjFS installation issues.,"GVFS.Service does its periodic upgrade check. When it finds that the current version is up-to-date, it deletes the previously downloaded releases. In between the user may see reminder messaging while running git commands. User manually runs gvfs upgrade. When gvfs cli finds that the current version is up-to-date it deletes the un-needed release downloads. User would no longer see reminders.",0
1791,Mac ProjFS kext: Denies write access to empty files in offline root,0.526745,- Fixed a bug that would cause VFS for Git mount process to shut down if it receives out-of-order ProjFS callbacks.,"Mac kext: This change adds an array of buckets for timing ranges to each perf counter, which allows us to create a histogram and visualise the distribution of samples.",0
1792,Merge pull request #301 from jeschu1/add_config,0.54175466,Pull Requests,,0
1793,Use legacy rebase,0.5258597,1652: RepoRegistry: ignore non-existent repos,Fix issue building VFS for Git inside of Visual Studio,0
1794,Add sparse option for set and file,0.4658914,Adds additional logging for folder and file placeholder creation.,The code for the existing integer base-2 logarithm calculation wasn’t entirely clear to follow. Moving it to an appropriately named helper function with a comment for explanation should help with that.,0
1795,Merge pull request #1131: PostFetchStep: delete and rewrite commit-graph on write error,0.64744794,1647: Fix commit-graph expiration,,0
1796,Merge pull request #417: Fix nuget repositoryPath to work on all platforms,0.48053843,1732: Use one NuGet feed,"When building inside of Visual Studio, the application manifest for GVFS.Service.exe.manifest is not created correctly in GVFS.PreBuild.csproj. It appears the cause of this issue is that you cannot use Item metadata from an ItemDefinitionGroup: Item metadata from an ItemGroup is not useful in an   ItemDefinitionGroup metadata declaration because ItemDefinitionGroup   elements are processed before ItemGroup elements. https://docs.microsoft.com/en-us/visualstudio/msbuild/item-definitions?view=vs-2017",0
1797,Remove unneeded code to strip dev/ino/uid/gid from 'git ls-files --debug' code,0.558788,Git commands are now allowed to delete an empty directory,,0
1798,Merge pull request #639 from nickgra/VSIDEFix,0.5158168,Pull Requests,,0
1799,Parent dehydrated means cannot create placeholder for child,0.28347734,- No-op gvfs prefetch --hydrate performance is dramatically improved,,0
1800,Merge pull request #1123 from github/refactor-posix-mac-filesystem,0.4929511,"- Upgraded to Git 2.19. This version brings with it improvements to unpack_trees to speed up checkout, merge, reset, and rebase.",,0
1801,Remove isMountComplete check,0.5178646,1674: Config: disable status.submoduleSummary,"Each time interval sample is now placed into one of the buckets in the PrjFSPerfCounterResult. The buckets represent log2-scale ranges of interval times. In the log output, the buckets are turned into a Unicode bar chart histogram to visualise the distribution of runtimes.",0
1802,Mac kext unit testing: Adds mock vnode recycling & test based on it.,0.43794715,Initial Mac upgrade functionality,If a struct argument to an IOUserClient external method grows too large (typically >= 8KiB) the argument will be passed along as a memory descriptor. This change handles that case for  exporting the perf tracing data structure to user space.,0
1803,Setting the git config autoRefreshIndex to true,0.6728004,- Built-in git rebase is on by default.,,0
1804,Allow non-elevated writes in the upgrader logs directory,0.5352087,See the full change log,,0
1805,ProjectedFSLib: do not copy into GVFS.Platform.Windows output dir,0.6094583,Switched over to use the Windows Projected File System (ProjFS) optional feature on RS4 and later. ProjFS is the new name for the GvFlt driver and its associated user mode library.,,0
1806,Merge pull request #679 from pmj/new-xcodeproj-deployment-target,0.45042136,Pull Requests,,0
1807,Merge pull request #1157: GitProcess: Enable lower ProcessPriorityClass,0.52054596,"- VFS for Git will prefetch commits and trees from a cache server in the background on a schedule, to improve the speed of user-initiated fetches, pulls, and pushes",,0
1808,Include panic logs for vfs in diagnose,0.6240351,- Added better diagnostic info in the GVFS logs when there are network errors,,0
1809,Update to use a blocking queue ,0.51592714,- We have moved MIDX computation to a post-fetch thread. This should save blocking time per prefetch that downloads a packfile from the cache server.,,0
1810,Move folder refresh into sparse verb,0.5206582,1689: Make delete docs more verbose,"I saw a broken unit test build in #581, but it wasn't due to a change there. It was due to an incorrect handling of a null member in GitMaintenanceQueue and how it returned true if the blocking collection was null. If the timing is just right, that value wasn't null and the output was false. Fix this by doing the right thing: return false when the collection is null, and change the test to expect this.",0
1811,Merge pull request #734 from jeschu1/bug_for_missing_file,0.5088142,Pull Requests,Fix config lookup,0
1812,Merge pull request #270. Mac: Fix missing files due to auth cache,0.5755481,- Gracefully handle a missing shared object cache pack directory.,,0
1813,Extract the logic to schedule post-prefetch job to its own function.,0.4450459,- We have moved MIDX computation to a post-fetch thread. This should save blocking time per prefetch that downloads a packfile from the cache server.,,0
1814,Add git status porcelain method to the GitProcess class,0.6892309,Includes Git v2.27.0,,0
1815,Add test coverage for UseMainForkIfNamedStream,0.45512453,1697: Fix functional tests to skip around ProjFS issue,,0
1816,Refactor to use a common authentication method,0.66761863,  - Now approves credentials on authentication success,,0
1817,Check to make sure tombstone folder entry is removed from placeholder file,0.5070205,Adds additional logging for folder and file placeholder creation.,,0
1818,Check CanRead before constructing StreamReader,0.41050467,- Disable commit-graph verify for performance concerns,,0
1819,Improve error handling and add functional test,0.63039577,"Other bug fixes, engineering improvements, and test reliability fixes.",The prjfs-log tool on the Mac now can handle kext unload and reload by registering for service matching notifications.,0
1820,Merge pull request #710 from jamill/file_system,0.5033536,Pull Requests,This change in the Mac kext prevents I/O errors that were caused by erroneously operating on named file stream vnodes in the fileop handler. We now operate on the underlying real file's vnode instead.,0
1821,use platform-specific property for case matching,0.31228888,1685: minor path comparison fixup in ProductUpgrader,Some bug fixes following a security-focused review of the code:  Stricter thread safety in our user client classes. Hardening GetRelativePath() against edge cases and removing an easy-to-provoke assert() and thus KP in it. Simplified some old logging code with equivalent helper macros we have since added.,0
1822,Merge pull request #662 Update Git to include multi-pack-index expire fix and trace2 v3,0.6003623,1733: Update Git to include 2.31.1,,0
1823,Remove platform specific help text for clone verb,0.56266224,1689: Make delete docs more verbose,,0
1824,Merge pull request #343: Fix handling of multiple sequential messages,0.59932184,Pull Requests,"When redirecting output to a file, this avoids buffered messages going missing.",0
1825,Merge pull request #627 from jamill/git_for_vs2019,0.5960952,Pull Requests,"Instead of searching for the PrjFS IOKit service once on startup, prjfs-log now registers for matching notifications. This means that if there is no PrjFS service running (the kext isn't loaded), it will sit and wait for it to turn up. Likewise, if the kext is unloaded, the logging infrastructure for that instance is cleanly torn down. The notification system continues to look out for new instances of the service, so when the kext is reloaded, logging immediately resumes. New messages are logged to indicate starting/stopping logging kext messages from a specific instance of the service.",0
1826,Fix bad test by fixing maintenance step lock string,0.61461973,Other bug fixes for reliability,"This removes the currently-unused functionality for releasing the incoming vnode if necessary, and makes the putVnodeWhenDone parameter a true output (as documented) by always updating its value.",0
1827,Merge pull request #1323 Dehydrate folders,0.5105141,Pull Requests," Named file streams are not files themselves do not have file attributes, so attempting to do so on that type of vnode will fail. In the vnode listener, we've already been checking for this edge case, but the fileop handler thus far has not checked for file forks, and we were getting errors in the KAUTH_FILEOP_CLOSE events. This change moves the named stream check logic into a helper function which we can use from both vnode and fileop handlers. As this affects whether vnodes need to be released, I've unified the logic for this across the entire fileop handler. Named forks can’t be renamed or hard linked, so we don’t expect to get those events for such vnodes, and we don’t need to defend against that case there.",0
1828,Merge pull request #724 Fix removal from modified paths when path should not be removed,0.48031843,Pull Requests,"The test PrefetchVerbWithoutSharedCacheTests.PrefetchCommitsToEmptyCache() only runs with the full test suite, not the PR test suite. This was not run during #493, and hence broke the CI build immediately after. The fix is a simple constant string change.",0
1829,Merge pull request #917: PrjFs: use builtins for detecting overflow to protect memory allocations,0.5345758,"A background task will now compress and deduplicate the pack-file data in the shared object cache, resulting in more sustainable disk usage",,0
1830,Mac kext: user client thread safety improvements,0.50969875,Initial Mac platform native notifications,Add Version to Heartbeat,0
1831,Handle corrupt objects on Mac,0.53767157,1703: Delete all macOS projects,Update git settings to enable optimizations in git 2.20,0
1832,PR Feedback: Move create method to PhysicalFileSystem and add comments,0.45219076,1744: Overhaul build and project systems and drop Mac/POSIX code,"git 2.20 has some optimizations that will significantly help performance in GVFS repros.  Turn these options on by default in gvfs repros: Set 'checkout.optimizeNewBranch=true' to enable optimized 'checkout -b' Set 'index.threads=true' to enable multi-threaded index reads Set 'reset.quiet=true' to speed up 'git reset "" The associated patches in git are: commit fa655d8411cc2d7ffcf898e53a1493c737d7de68 Author: Ben Peart Ben.Peart@microsoft.com checkout: optimize ""git checkout -b <new_branch>""  commit 2a9dedef2ef76916be4a314a7e739f253eaf05db Author: Jonathan Nieder jrnieder@gmail.com index: make index.threads=true enable ieot and eoie  commit 4c3abd0551d8ff1c280de2bc53d6a7657b053d33 Author: Ben Peart benpeart@microsoft.com reset: add new reset.quiet config setting  Signed-off-by: Ben Peart benpeart@microsoft.com",0
1833,Add Full Coverage for HandleVnodeOperation,0.4842705,1734: Adding winget workflow,"The post-fetch job and background prefetch features used different mechanisms to run in the background. Let's unify these as much as possible, and create a framework for more background actions to happen with minimal interruption. Most of the logic happens in GitMaintenanceStep, which does the following:  Takes a new ""object cache lock"" to prevent other cleanup steps from running. This can be ignored for user-initiated prefetches (by setting RequireCacheLock to false). The RunGitCommand method safely runs an action on a GitProcess, allowing that process to be halted by the Stop() method.  The actions in these cleanup steps are best-effort: if we can't get the object cache lock, then we don't run the step. Reoccurring cleanup steps are initiated by the GitMaintenanceScheduler. This is currently only the background prefetch step. The GitMaintenanceQueue receives cleanup steps and runs them in a background thread until the queue is empty (or receives a Stop() request). It is responsible for checking if the filesystem is ready for the cleanup actions.",0
1834,ProductUpgrader: inject ICredentialStore dependency,0.50305533,1685: minor path comparison fixup in ProductUpgrader,,0
1835,PR Feedback: Remove explicit std namespace usage,0.38692582,1689: Make delete docs more verbose,,0
1836,add note re unused git.cmd script on POSIX systems,0.5505979,- Consume new GCM to fix git credential erase behavior,This is helpful for diagnostic purposes.,0
1837,Add functional test to make sure possible tombstones are removed,0.396428,- Disable commit-graph verify for performance concerns,"Instead of storing the user-provided path with each virtualization root, obtain the path via vn_getpath() once we have the root vnode. This should resolve any discrepancies between the root path and paths to files within the root, which will be obtained using vn_getpath() too.",0
1838,Merge pull request #1642: Update Git to v2.26.0,0.69721746,1663: Update Git to v2.27.0," Message response type is an unvalidated integer, so we should log if it’s out of range. Replaces an instance of logging which explicitly gets a vnode path using vn_getpath() with the KextLog_FileInfo() macro created for that purpose. Also uses the macro for a similar code path where the path would be useful but was previously not logged.",0
1839,Remove Placeholder after calling PreDelete,0.45058143,1689: Make delete docs more verbose,"It is possible that the GetRelativePath() function is called with a root path that is not actually a parent path of the absolute path. As this would lead to a buffer overrun if the root path was longer than the absolute path, we had an assert “defending” against that case. As it’s currently possible to provoke this case from user space, the assert is not a great defence as asserts will KP, so this is a potential DoS vulnerability. Even if the lengths aren’t a security issue, returning “te/path” as the result of GetRelativePath() called with “/an/absolute/path” and a root of “/some/path” doesn’t really make any sense. This change makes the length sanity check “soft” (return nullptr) and checks whether root really is a true parent of path. This includes detecting that “/an/a” is not in fact a parent of “/an/absolute/path” although it is a string prefix of it.",0
1840,Mac kext: Small change to UseMainForkIfNamedStream helper,0.5088892,Initial Mac platform native notifications,,0
1841,Use bounded-size blocking collection,0.39616263,"A background task will now compress and deduplicate the pack-file data in the shared object cache, resulting in more sustainable disk usage",,0
1842,Make GitMaintenanceScheduler a bit more generic,0.65506756,This includes the Git Credential Manager Core v2.0.394.50751.,,0
1843,"Switching to HashSet for the list of files to be prefetched to improve performance, when the list is long",0.6075217,- Multi-threaded index reads will improve load time of large .git/index,,0
1844,Mac kext: Obtain canonical path for virtualization root on registration,0.41306493,1679: BuildGVFSForWindows.bat: use nuget on PATH,Mac: Kill any git/gvfs processes when cleaning up after Functional Tests,0
1845,Windows build: Only consider dev 15 build tooling,0.5464323,1678: BuildGVFSForWindows.bat: use nuget on PATH when possible,,0
1846,Rename addToUpdatePlaceholders,0.4859819,1674: Config: disable status.submoduleSummary,TelemetryKey -> Area Extra metadata checks InProcessMount only knows about scheduler Use CompleteAdding() String and method style cleanups,0
1847,Review git settings used in GVFSVerb,0.766345,"Many other reliability improvements in interactions between GVFS and the file system, and between GVFS and git",Allow multiple internal mount parameters,1
1848,Mac: Add mdworker_shared to the IsFileSystemCrawler block list,0.5004297,1734: Adding winget workflow,,0
1849,Merge pull request #478: Better git config handling when warnings are present.,0.6345617,- Updated Git for a security issue.,,0
1850,Fix warning that breaks Release build,0.5991863,Bug Fix: Fixes a bug with gvfs upgrade that causes versions v1.0.20112.1 from upgrading from private feeds.,Post index changed hook,0
1851,Register for HardLinkCreated on Windows,0.5073467,1683: GVFS.SignFiles.csproj: include more DLLs for signing,,0
1852,Merge pull request #1605 HandleDehydrateFolders: update index using reset,0.5069964,- Fixed an issue where some concurrent updates to the placeholder database would fail,,0
1853,More grammar resolutions,0.50359064,General Improvments,,0
1854,Merge pull request #657 GitMaintenanceScheduler: Remove PackfileMaintenanceStep,0.5580794,"- Upgraded to Git 2.19. This version brings with it improvements to unpack_trees to speed up checkout, merge, reset, and rebase.",,0
1855,"Adding log messages, when certificate, or its password",0.51081586,  - Now approves credentials on authentication success,,0
1856,Merge pull request #154 from nickgra/java8Fix,0.4615299,Pull Requests,,0
1857,Merge pull request #1322 from jamill/generate_mac_upgrader_nuspec,0.5346171,Pull Requests,,0
1858,Pass a TextWriter to TryLoad of the driver,0.39391553,1734: Adding winget workflow,,0
1859,Log when a listener has recovered and remove from the failed list,0.47066325,1652: RepoRegistry: ignore non-existent repos,,0
1860,Trim down the list of macros and allow running specific functional tests,0.42473492,"Other bug fixes, engineering improvements, and test reliability fixes.",,0
1861,sparse: split PathCoveredBySparseFolders into two methods,0.49863175,1685: minor path comparison fixup in ProductUpgrader,,0
1862,Fix broken tests,0.66676533,"Other bug fixes, engineering improvements, and test reliability fixes.",,0
1863,Check modified paths for path before adding to newly created list,0.4496757,1685: minor path comparison fixup in ProductUpgrader,,0
1864,"Mac kext: When using a file's inode for messaging provider, use linkid, not fileid",0.40867308,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,,0
1865,BuildGVFSForWindows.bat: use nuget on PATH when possible,0.96751046,1678: BuildGVFSForWindows.bat: use nuget on PATH when possible,,1
1866,Update winget link to a reference winget-cli repo.,0.6695062,1741: Fix winget tag specification,,0
1867,Unit Test Refactoring (#1302),0.56776106,"Other bug fixes, engineering improvements, and test reliability fixes.",,0
1868,Merge pull request #532 from jeschu1/startedbytelemetry2,0.5676762,Pull Requests,,0
1869,Set httpStatus to 200 in the success case,0.4699483,- Fix backoff on cache server size endpoint 404.,,0
1870,Add contributing guidelines to VFSForGit repo,0.6927061,- A couple of fixes for using VS Code on top of VFS for Git.,,0
1871,Merge pull request #493: Refactor post-fetch job and background prefetch into GitMaintenanceSteps,0.6146766,"- VFS for Git will prefetch commits and trees from a cache server in the background on a schedule, to improve the speed of user-initiated fetches, pulls, and pushes",,0
1872,Merge pull request #307: Fix a flaky test involving the background prefetch thread ,0.5470232,1674: Config: disable status.submoduleSummary,,0
1873,use generic path comparisons in latest path checks,0.61170936,1685: minor path comparison fixup in ProductUpgrader,,0
1874,Rollback placeholders and modified paths when there is an exception,0.4069885,1672: ProductUpgrader: be extra careful about a copy loop,,0
1875,Merge pull request #616 Update Git to include sparse push algorithm,0.643203,"* Added a git config setting to disable the calculations for detecting force pushes during 'git fetch' and 'git pull'. That calculation can take 10's of seconds on a large graph, and users can now opt out of it.",,0
1876,Add more time for disposal,0.4943349,1745: do not exit early if no blobs found for a period when prefetching,Update git version to 2.19.1.gvfs.1.7.g43ac102,0
1877,Mac kext: Fixes some virtualization root bugs found by unit testing,0.52219325,- Multiple mount process reliability bugs have been squashed.,,0
1878,LibGit2RepoInvoker: Test a real SHA1 when initializing,0.4480479,1726: Config: commitGraph.generationVersion=1,,0
1879,Merge pull request #740 from mjcheetham/disable-daemon-listener,0.48092127,Pull Requests,Add DiskInfo to HeartBeat,0
1880,MacPlatform: implement isServiceInstalledAndRunning,0.5023204,1744: Overhaul build and project systems and drop Mac/POSIX code,,0
1881,Merge pull request #820 from pmj/mac-kextlog-levels,0.50616586,Pull Requests,,0
1882,CommitPrefetcher: Delete MIDX when deleting bad packs,0.616254,1730: Fix an issue with FastFetch when deleting files,"Thanks, Jessica!",0
1883,Add sparse prune functional tests,0.43855518,General Improvments,,0
1884,Merge pull request #1007: Do not attempt to approve credentials for anonymous access,0.57192844,- Fixed several incorrect interactions with credentials,,0
1885,build: add releases/shipped to PR build trigger,0.49516994,Update components included with internal distribution,,0
1886,Mac ProjFS Kext: Disallows read access to empty files in offline roots,0.4786647,1697: Fix functional tests to skip around ProjFS issue,gvfs config now treats an attempt to read a unknown key as error and exits with GenericError code. No error message is printed. Fixes #402 Comparing gvfs config behavior vs git config.,0
1887,Merge pull request #682 from mjcheetham/outofproc-trace-listener,0.5314778,Pull Requests,,0
1888,Add additional logging,0.66666085,Adds additional logging for folder and file placeholder creation.,,0
1889,Use fullDehydrate variable in all places,0.44595578,- No-op gvfs prefetch --hydrate performance is dramatically improved,,0
1890,Add information for when lock is release by process not owning the lock,0.46050084,1675: PreCommandHook: don't lock pack-objects,gvfs config now treats an attempt to read a unknown key as error and exits with GenericError code. No error message is printed. Added Functional tests. Fixes #402,0
1891,PhysicalFileSystem: add filesystem methods to common location,0.60135365,Adds additional logging for folder and file placeholder creation.,,0
1892,PR cleanup for LooseObjects,0.5448986,Improves the rate of .gvfsCache cleanup.,,0
1893,Enable CheckoutTests.CheckoutBranchThatHasFolderShouldGetDeleted,0.48919111,1697: Fix functional tests to skip around ProjFS issue,,0
1894,Add new interface and class for storing the include folders,0.66193604,Adds additional logging for folder and file placeholder creation.,,0
1895,Merge pull request #1199 Move ShouldHandleFileOpEvent unit tests into their own class,0.4663397,1674: Config: disable status.submoduleSummary,,0
1896,Merge pull request #1510 Update upgrade messages for platforms that do not support NuGet package verification,0.7421216,Update NuGet upgrader with new Microsoft package signing certificate,,1
1897,Added Code Coverage to build,0.53522825,1734: Adding winget workflow,,0
1898,Move config & upgrader files to ProgramFiles (2),0.5610969,1746: Delete custom upgrader,,0
1899,Remove flaky packfile maintenance tests,0.5850597,- Multiple mount process reliability bugs have been squashed.,,0
1900,Mac dtruss: Adds support for running commands as non-root,0.45996648,Initial Mac platform native notifications,,0
1901,"Plumb the internal service name to all GVFS verbs. Otherwise automount during clone talks to the installed service, not the test instance.",0.53366446,Switched over to use the Windows Projected File System (ProjFS) optional feature on RS4 and later. ProjFS is the new name for the GvFlt driver and its associated user mode library.,,0
1902,Merge pull request #167 from nickgra/gitprbuild,0.50359994,Pull Requests,,0
1903,Merge pull request #814 from Reconsider PhysicalFileSystem.DeleteDirectory,0.53345096,1730: Fix an issue with FastFetch when deleting files,,0
1904,Merge pull request #660: Rename VSTS to Azure DevOps in Readme,0.49446142,The local file size cache was migrated from ESENT to SQLite," GVFS.Service does its periodic upgrade check. When it finds that the current version is up-to-date, it deletes the previously downloaded releases. In between the user may see reminder messaging while running git commands. User manually runs gvfs upgrade. When gvfs cli finds that the current version is up-to-date it deletes the un-needed release downloads. User would no longer see reminders.  Fixes #502",0
1905,Add symlink projection code,0.46785557,1664: Update USN journal entries for projected folders,,0
1906,GitStatusCache: reduce tracing,0.6498573,Git: Includes incremental commit graph,,0
1907,"Revert ""Relax LooseObjectStepTests from exact object counts to ""positive or zero"" checks""",0.5128734,1652: RepoRegistry: ignore non-existent repos,,0
1908,Merge pull request #567 from nickgra/pkillFunctionalTests,0.51106215,Pull Requests,,0
1909,Merge pull request #1280 from pmj/mac-kext-resize-roots,0.42401057,- We have moved MIDX computation to a post-fetch thread. This should save blocking time per prefetch that downloads a packfile from the cache server.,,0
1910,revise other child folder names in dehydrate tests,0.3436466,Adds additional logging for folder and file placeholder creation.,,0
1911,"Mac ProjFS lib: Renames ""fullPath"" to ""absolutePath"" in message handlers",0.47999382,Switched over to use the Windows Projected File System (ProjFS) optional feature on RS4 and later. ProjFS is the new name for the GvFlt driver and its associated user mode library.,,0
1912,Enable reset.quiet optimization in VFSForGit repos,0.640548,"- VFS for Git will pre-calculate status in the background in response to changes in the workdir, to improve the speed of user-initiated statuses.",,0
1913,Remove extra return statments and adding to new paths during rename,0.43376866,1689: Make delete docs more verbose,,0
1914,1712: git-vfs: update to Git 2.30.0,0.9999998,1712: git-vfs: update to Git 2.30.0,ReadMessage IOException should be a warning,1
1915,Merge pull request #1594: GVFSVerb: explicitly disable new config settings,0.55033356,The gvfs upgrade command is deprecated. Future upgrades will require using winget or installing directly from the releases page.,This can happen when user ctrl-c's on a command,0
1916,LooseObjectStepTests: Unmount before running,0.50672436,1675: PreCommandHook: don't lock pack-objects,Add EnlistmentId to RepairVerb,0
1917,use abstract TestPath class in dehydrate tests,0.36255434,- No-op gvfs prefetch --hydrate performance is dramatically improved,If we can read the enlismentId from the config file we will add it to telemetry.,0
1918,Verify and rewrite during PostFetchStep,0.5481601,1652: RepoRegistry: ignore non-existent repos,When git is run against an enlistment it ignores reminder messaging. Updated ProductUpgradeReminder to remind everytime. This is only to verify all Git tests get to see the reminder message and are able to successfully ignore it. Incorporated review comments. Fixes #428,0
1919,Merge pull request #1635 sparse: allow dehydrate to continue if a directory delete fails,0.47712284,1730: Fix an issue with FastFetch when deleting files,When git is run against an enlistment it ignores reminder messaging. Updated ProductUpgradeReminder to remind everytime. This is only to verify all Git tests get to see the reminder message and are able to successfully ignore it. Incorporated review comments. Fixes #428,0
1920,Introduce an upgrader based on NuGet packages,0.81835824,- Upgrade supports NuGet feeds as a distribution source.,WriteFile: Fix Logging,1
1921,Merge pull request #1507 Check the disposing flag in Dispose methods,0.5155107,Pull Requests,Ignore non-zero exit codes when calling git config and all lines on stderr are prefixed 'warning',0
1922,Add to included when folder created inline instead of on BG thread,0.58448935,Adds additional logging for folder and file placeholder creation.,,0
1923,Fix .NET Framework compilation issue,0.5419121,1741: Fix winget tag specification,,0
1924,Upgrade: better message for platforms that do not support NuGet verification,0.74444544,Update NuGet upgrader with new Microsoft package signing certificate,,1
1925,Merge pull request #1552 from github/dehydrate-backing-root-tests,0.4650663,"- Post-index-change hook will help ensure consistency between Git and VFS for Git's reckoning of the state of the repository, and eliminate a class of bugs.",,0
1926,Remove all reference to looseObjectCount in LooseObjectStepTests,0.47802293,1652: RepoRegistry: ignore non-existent repos,,0
1927,Merge pull request #729 from jamill/nuget_upgrader_install_fix,0.46337122,- Other bug fixes,,0
1928,Merge pull request #673 Add ParallelHydrationTests,0.52498806,Pull Requests,,0
1929,Add folders option to the dehydrate verb,0.49742702,Adds additional logging for folder and file placeholder creation.,,0
1930,Merge pull request #728 [features/upgrade_extensibility] Restrict ACLs on VFS4G ProgramData and update verbs as needed,0.5292562,- A couple of fixes for using VS Code on top of VFS for Git.,,0
1931,Clean up some code in GitIndexProjection,0.6100062,Git: Includes incremental commit graph,,0
1932,Mac kext: Replaces some C-style casts with C++ style.,0.42719835,1744: Overhaul build and project systems and drop Mac/POSIX code,,0
1933,Create FailsOnBuildAgent category and tag EditFileNeedingUtf8Encoding with that category,0.5792573,1674: Config: disable status.submoduleSummary,"The interval variable is of type uint64_t, so the expression interval * interval also evaluates to a value of type uint64_t, meaning the result of the multiplication will be truncated if interval is 1llu << 32 or greater, regardless of the fact that the result is stored in a variable of type __uint128_t. Casting one side of the multiplication to the larger type fixes the problem.",0
1934,Merge pull request #1761 from ldennington/deploy-with-wingetcreate,0.5626262,1741: Fix winget tag specification,,0
1935,Merge pull request #324 Windows: Use a faster comparison when enumeration filter strings don't have wildcards,0.4527294,1685: minor path comparison fixup in ProductUpgrader,,0
1936,Placeholder on Mac will not get created unless folder is included,0.63058436,Adds additional logging for folder and file placeholder creation.,,0
1937,Mac: Add PreDelete Notification,0.6750072,Initial Mac platform native notifications,,0
1938,Merge pull request #1765 from derrickstolee/signing,0.54632103,Pull Requests,,0
1939,Bumping mjcheetham/update-winget version,0.73716164,1738: Bumping version of update-winget action,"Split GVFS.Installer project into two - GVFS.Installer.Mac and GVFS.Installer.Windows. Running the Mac buildscript - BuildGVFSForMac.sh creates the Mac installer in build output directory of GVFS.Installer.Mac project. Mac installer installs vfsforgit assemblies inside /usr/local/vfsforgit directory. PrjFS binaries (lib, kext and log tool) get installed in /usr/local/vfsforgit/prjfs directory. resolves #393",1
1940,Merge pull request #1545 Add message to sparse disable,0.5743381,Pull Requests,GVFS.Service - dont schedule upgrade check timer when running in un-attended mode. Fixes #495,0
1941,Fix fileSystemCallbacks bug in UpdatePlaceholderIfNeeded unit test,0.55420053,Other bug fixes for reliability,"Split GVFS.Installer project into two - GVFS.Installer.Mac and GVFS.Installer.Windows. Running the Mac buildscript - BuildGVFSForMac.sh creates the Mac installer in build output directory of GVFS.Installer.Mac project. Mac installer installs vfsforgit assemblies inside /usr/local/vfsforgit directory. PrjFS binaries (lib, kext and log tool) get installed in /usr/local/vfsforgit/prjfs directory. resolves #393",0
1942,PR Feedback - pass IDbConnection to the CreateTable method instead of IDbCommand,0.39736283,1726: Config: commitGraph.generationVersion=1,Mac kext: Abort events awaiting response when their provider disconnects,0
1943,Handle the file system callbacks to track created then deleted files,0.49532872,1730: Fix an issue with FastFetch when deleting files,GVFS.Service - dont schedule upgrade check timer when running in un-attended mode. Also made upgrade timer IDisposable. Fixes #495,0
1944,Merge pull request #1026 Track tombstones so that we know when DeleteFile needs to be called,0.48873383,1730: Fix an issue with FastFetch when deleting files, Dont try to trigger reminder messaging when running in unattended mode. GVFS Hooks already check for un-attended mode. Re-using this to suppress upgrade reminder notification. Fixes #494,0
1945,Merge pull request #1301 from github/simplify-case-match-tests,0.48332646,  - Correlate trace2 stream with VFS for Git stream with the Git session ID.,"As the “aborted” outcome due to a disconnecting provider is not actually a response from the provider itself, it makes more sense to talk about “results” than “responses.”",0
1946,Merge pull request #1614 from Review git settings used in GVFSVerb,0.6572085,* Improve error message from gvfs upgrade if the Git installation could not be found.,,0
1947,use common folder name constants in DehydrateTests,0.36437455,Adds additional logging for folder and file placeholder creation.,,0
1948,"Make the object cache lock optional, specifically so user-initiated prefetches don't require the lock",0.650213,1675: PreCommandHook: don't lock pack-objects,,0
1949,Mac ProjFS kext: Vnode access error logging improvements,0.6559821,- Fixed a bug that would cause VFS for Git mount process to shut down if it receives out-of-order ProjFS callbacks.,"This reverts the previously added Mutex_Sleep() function for waiting for an event while a Mutex is held, and instead adds that functionality to the existing Sleep() function by allowing an optional Mutex pointer to be passed to it.",0
1950,Merge pull request #40 from jeremyepling/update-gvflt-eula,0.5357598,Pull Requests," The virtualization root handle for the responsible provider is stored in the outstanding message struct. When a provider disconnects, all events pending responses from that provider are marked as aborted, and the corresponding waiting threads are resumed. This prevents deadlocks. Additionally, incoming responses from providers are now checked to match the expected root handle in the outstanding message.",0
1951,netcore build: fix runtime patch selection issues,0.59044,Various bug fixes and performance improvements,This allows atomically degrading an exclusive lock to a shared one without completely unlocking in between. (I.e. no thread can acquire the lock for writing in the interim.),0
1952,Mac kext/native lib: Explicitly set indentation rules in Xcode project.,0.46678752,1744: Overhaul build and project systems and drop Mac/POSIX code,"  When attempting to send a request to a provider while shutting down the kext, there could be a theoretical nullptr dereference, due to the pending message data structure not being added to the list, an attempt subsequently being made to remove it from that list. The condition has been changed to directly exit the function at that point instead.   In order to ensure that outstanding messages have been safely aborted, the lock should be held when reading the message’s receivedResponse field. This necessitates the thread sleep to interact with the mutex: only drop the lock for the duration of the sleep.   To facilitate item 2, a new Mutex_Sleep() wrapper function has been added which calls down to the appropriate kernel mutex function.",0
1953,Incorporating review comments,0.48635933,General improvements:,Check CanRead before constructing StreamReader,0
1954,Merge pull request #1754: Readme: add new winget install instructions,0.62228763,1741: Fix winget tag specification,Fixes #494,0
1955,build: drop old targets/props and add new ones,0.5107384,1744: Overhaul build and project systems and drop Mac/POSIX code,FileClose replaces ResultExtensions.HResultFromNtStatus.FileClosed as an expected condition,0
1956,Merge pull request #1596 from Fix upgrade timer crash,0.54693425,Bug Fix: Fixes a bug with gvfs upgrade that causes versions v1.0.20112.1 from upgrading from private feeds., if Stream is not readable an exception will be thrown by the StreamReader constructor,0
1957,Add PostIndexChangedHook to Xcode scheme,0.40329862,1734: Adding winget workflow,Mac: Support 'gvfs diagnose' verb,0
1958,"Log improvements: build everything under one target, added utility for expanding action bitfield, print line number and timestamp, avoid perf hit of kprintf",0.54265183,- Improvements to compact and maintain the ModifiedPaths.dat database to help mitigate the problem of command perf degrading over time in an enlistment.,,0
1959,Update Git to include v2.24.0.windows.2,0.8619548,1660: Update Git to include v2.26.2,,1
1960,Provide a more actionable error for Server 2016 users when NTFS reports features required by VFS for Git are not supported,0.7193207,- A couple of fixes for using VS Code on top of VFS for Git.,"This PR does two things that are super-easy fixes for improving 'git push' performance.  Set pack.useBitmaps to false on mount time. Update Git to Git-2.19.1.gvfs.1.3.ge56ee8b, which includes a change to stop checking ambiguous refs during 'git pack-objects'. This reduces possibly thousands of file reads of the form:  .git/<oid> .git/refs/<oid> .git/refs/tags/<oid> .git/refs/heads/<oid> .git/refs/remotes/<oid> .git/refs/remotes/<oid>/HEAD By setting the config value, we don't perform these file checks for the object ids that are passed into stdin. For (1), this PR sets pack.useBitmaps to false for VFS for Git enlistments. This config value defaults to true, and during git pack-objects we check for the existence of a .bitmap file for every packfile, even those covered by the multi-pack-index. Each of these checks took 2-3 seconds on my small test. I hope to get better numbers before merging, but want to see our scale tests.",1
1961,Changed included in this update:,0.72027856,Major Updates,,1
1962,Merge pull request #1734 from ldennington/ldennington/add-release-workflow,0.49864239,Pull Requests,TryPrefetchCommitsAndTrees downgraded to Warning,0
1963,Mac kext testing: Adds support for directory trees for mock vnodes,0.4429862,1697: Fix functional tests to skip around ProjFS issue,TryDeleteStatusCacheFile as Warning,0
1964,Merge pull request #908 from pmj/mac-find-root-tests,0.43944606,1697: Fix functional tests to skip around ProjFS issue,,0
1965,Merge pull request #827: Improve perf of prefetch when using large --files-list,0.52168834,- gvfs prefetch learned how to take --files-list.,FastFetch: properly handle items with special tokens in path,0
1966,Add a script used by the CI to create a build drop for running functional tests on other machines,0.4453454,- Disable commit-graph verify for performance concerns,This is an expected condition that happens when status is being read to and removed at the same time.   This will self heal but we want to keep a warning to know how often it happens.,0
1967,Track both file type and file mode,0.479371,Adds additional logging for folder and file placeholder creation.,"This can worsen performance, but will not stop mount from working.  Hence this error has been downgraded to a warning.",0
1968,Merge pull request #424 from pmj/fix-null-vfs-context,0.46244103,1674: Config: disable status.submoduleSummary,,0
1969,Prompt before performing sudo gem install,0.44039208,* Improve error message from gvfs upgrade if the Git installation could not be found.,Create a script to create a build drop to enable running functional tests on boxes that didn't build the product.,0
1970,Add build badges for Windows and Mac CI builds,0.5256913,1710: Add new Microsoft certificate thumbprint,,0
1971,Add more logging when test gets access denied from moving src folder,0.5441091,Adds additional logging for folder and file placeholder creation.,,0
1972,Merge pull request #944 Update GVFS.Service to log why repos were determined to be invalid,0.6316483,* Improve error message from gvfs upgrade if the Git installation could not be found.,"In the EnlistmentPerFixture.PrefetchVerbTests class, we have the same PostFetchJobShouldComplete() method as we do in the version without a shared cache, except that none of our tests in the class actually trigger a commit-graph write. The commit-graph write requires a prefetch that downloads a new prefetch packfile, while the multi-pack-index is rewritten on every prefetch (in case a non-prefetch packfile was added). We don't write the commit-graph on clone because we need a full enlistment to guarantee missing object downloads. Somehow, these test succeed in the full test suite, but do not succeed when only the one class is run. This caused some pain for someone stepping through the tests in a debugger. Instead of removing the commit-graph check, instead see if the commit-graph file exists before calling git commit-graph read. This allows us to still check that the commit-graph file exists and is in good condition (when it exists).",0
1973,Add MacFileSystemVirtualizerTester to use for Mac tests,0.53774863,Initial Mac upgrade functionality,"In the EnlistmentPerFixture.PrefetchVerbTests class, we have the same PostFetchJobShouldComplete() method as we do in the version without a shared cache, except that none of our tests in the class actually trigger a commit-graph write. The commit-graph write requires a prefetch that downloads a new prefetch packfile, while the multi-pack-index is rewritten on every prefetch (in case a non-prefetch packfile was added). We don't write the commit-graph on clone because we need a full enlistment to guarantee missing object downloads. Somehow, these test succeed in the full test suite, but do not succeed when only the one class is run. This caused some pain for someone stepping through the tests in a debugger. Instead of removing the commit-graph check, instead see if the commit-graph file exists before calling git commit-graph read. This allows us to still check that the commit-graph file exists and is in good condition (when it exists). The multi-pack-index is guaranteed to exist after every post-fetch job.",0
1974,Use full path for kextload,0.3769896,- We have moved MIDX computation to a post-fetch thread. This should save blocking time per prefetch that downloads a packfile from the cache server.,Add ability to specify an iKey for the ETW listener,0
1975,Rename IPlaceholderDatabase to IPlaceholderCollection,0.43176913,  - Now scopes credential.useHttpPath to just dev.azure.com hostname,Mac: Handle setting the PAT in PrepFunctionalTests.sh correctly after a kernel panic,0
1976,Mac dtruss: Fixes for follow mode.,0.5817225,Initial Mac platform native notifications,,0
1977,Fixing spacing,0.48846152,- Many smaller bug fixes,,0
1978,maintenance steps: several cleanups,0.662696,Improves the rate of .gvfsCache cleanup.,Mac: Disable StatusTests.MoveFileIntoDotGitDirectory,0
1979,Merge pull request #1235: Handle KAUTH_FILEOP_CLOSE_MODIFIED as a bit field,0.51642156,Pull Requests,Mac: Don't assert/panic when we fail to read attributes during a FileOp operation,0
1980,GitHubUpgrader: Use REMOUNTREPOS flag instead of MOUNTREPOS,0.5428058,- Built-in git rebase is on by default.,Disable Native_ProjFS_MoveFile_PartialToOutside functional test,0
1981,Remove SharedCacheTests.SecondCloneSucceedsWithMissingTrees,0.496486,- Gracefully handle a missing shared object cache pack directory.,,0
1982,Tweak the protocol GVFS used to communicate over named pipes,0.555699,- Added better diagnostic info in the GVFS logs when there are network errors,,0
1983,Fixing full FT failure,0.48850593,- Multiple mount process reliability bugs have been squashed.,,0
1984,Update commments with renamed method names for GetAllEntriesAndPrepToWriteAllEntries,0.49647802,1747: UpgradeVerb: write deprecation notice,Telemetry: Record when a mount succesfully starts,0
1985,"Mac ProjFS: Enable warning for shadowed local variables, fix instances",0.502756,1697: Fix functional tests to skip around ProjFS issue,,0
1986,Rename PlaceholdersTable to PlaceholderTable and make everything match,0.4838518,Moves placeholder database into SQLite for better performance.,,0
1987,Fix upgrade tests that were broken,0.7022953,"Other bug fixes, engineering improvements, and test reliability fixes.",Mac: Run GitRepoTests with and without validating the working directory during setup,1
1988,Use the full path to GVFS.Hooks executable in the hook configuration,0.6103066,Instructions for installing and using GVFS are available at https://github.com/Microsoft/GVFS,,0
1989,Merge pull request #153 from kewillford/fix_mac_functionaltests,0.46398455,1697: Fix functional tests to skip around ProjFS issue,,0
1990,Mac kext: Minor logging improvements,0.5176531,Initial Mac upgrade functionality,,0
1991,Rework GetMetadataForHeartbeat to be more explicit,0.45672175,1750: Update Readme.md,,0
1992,Merge pull request #1666: Docs: start basic template,0.7245753,1666: Docs: start basic template,Mac: Consume libSharedDataQueue.dylib,1
1993,Merge pull request #399 from nickgra/closefds,0.5138477,Pull Requests,Update Readme.md,0
1994,Update the upgrade tests current disk layout major version,0.56571954,Major Updates,"FastFetch does not correctly handle paths with certain text. For example, if a file includes the string "" tree "", then FastFetch will consider this a tree entry, and will create a directory for it. This change it to only look at the type field from ls-tree when determining the type of entry.",0
1995,Merge pull request #217: RepoRegistry: Properly log error from TryGetNormalizedPath,0.50617373,Pull Requests,,0
1996,Catch and log exceptions thrown by ConvertDirectoryToVirtualizationRoot,0.5083006,1652: RepoRegistry: ignore non-existent repos,,0
1997,Added perf samples to the file op path,0.6250243,Perf improvements:,,0
1998,Mac kext: minor tweaks to root rename detection code based on review notes,0.48345703,Initial Mac platform native notifications,Add untracked files from reset mixed to ModifiedPaths.dat,0
1999,Merge pull request #1300: Update Git to include status deserialize fix,0.5840949,* Improve error message from gvfs upgrade if the Git installation could not be found.,,0
2000,Merge pull request #823: Consume new Git: Contains fixes to preserve system config during Git installation,0.585168,"- Upgraded to Git 2.19. This version brings with it improvements to unpack_trees to speed up checkout, merge, reset, and rebase.",Mount: Remove unnecessary tracing,0
2001,fix abd8a62c6c2f612,0.53985417,- Other bug fixes,Mac PrjFSLib: Use IOSharedDataQueue workaround library if available,0
2002,PrefetchStep: don't send post-fetch request if no new packs,0.56346494,1675: PreCommandHook: don't lock pack-objects,"This allows PrjFSLib and the prjfs-log tool to use alternate versions of the IODataQueueDequeue() and IODataQueuePeek() functions from a dylib on OS versions where the built-in functions are buggy. On affected versions, a library ""libSharedDataQueue.dylib"" is loaded if available, and its implementations of the aforementioned functions are used for the message and kext logging queues instead of the ones supplied by the OS's IOKit.framework.",0
2003,Merge pull request #415 from jeschu1/warn_instead,0.6514273,Pull Requests,Mac: Do not panic when file attributes cannot be read during vnode callback,0
2004,PR Feeback: Remove HasAncestorFlaggedAsInRoot and add TODO,0.54932797,1652: RepoRegistry: ignore non-existent repos,,0
2005,Rename ForBackground to LowerPriority,0.44113356,1674: Config: disable status.submoduleSummary,,0
2006,Rename FileBasedLock.cs to WindowsFileBasedLock.cs and move to Windows platform folder,0.45306516,Adds additional logging for folder and file placeholder creation.,,0
2007,Clean up value/error code handling,0.5385589,Improves the rate of .gvfsCache cleanup.,,0
2008,Update FileMoved Test to use an unhydrated file,0.52556694,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,,0
2009,Remove assertions hidden within runFastFetch method,0.4984238,1674: Config: disable status.submoduleSummary,,0
2010,Enable telemetry daemon tracing on Windows and macOS,0.5008622,Initial Mac platform native notifications,,0
2011,Merge pull request #318 from jrbriggs/fix-badges,0.48800167,1741: Fix winget tag specification,,0
2012,Add explicit step for removing the repo after unmounting.,0.74348646,- The installer now unmounts and remounts existing repos automatically,,1
2013,"Method name cleaup, string comparison fix, and add const for folder separator",0.42654806,1685: minor path comparison fixup in ProductUpgrader,,0
2014,Merge pull request #1668: ProductUpgradeTimer: remove unacceptable Environment.Exit(),0.8238392,1668: ProductUPgradeTimer: remove unacceptable Environment.Exit(),,1
2015,Fix diagnose message for cache server,0.6414976,- Fix backoff on cache server size endpoint 404.,Mac: Revisit DiffHelperTests parameterization to follow NUnit documentation.,0
2016,Get the file placeholder list for ReExpand after updating file placeholders,0.5988341,"* The post-command step to update placeholder files now batches its size requests to the server, resulting in significant speedups in situations where many placeholder files needed to be updated",make the readme.md more attractive.,0
2017,Created a pattern for measuring hierarchical samples of where time is being spent in the kext,0.4149594,  - Break down update placeholders timings so we can see where time is spend during checkout.,,0
2018,Merge pull request #678 from nickgra/FixLoadScript,0.47095323,Pull Requests,,0
2019,Remove wait for index parsing to start,0.5213987,"* Sped up GVFS's parsing of the git index, shaving off 2-3 seconds for a large index file",,0
2020,Pass ITracer to background process launching to log errors,0.4568125,1740: Skip launching UI if running unattended,,0
2021,Simplify checks in GetObjectRoot,0.43175527,1672: ProductUpgrader: be extra careful about a copy loop,,0
2022,Use correct repoUrl for credential,0.58303094,  - Now approves credentials on authentication success,Mac kext: Nullability annotation and cleanup of VFS context function parameters,0
2023,GitObjects: use new SideChannelStream to hash during download,0.5403789,"- VFS for Git will prefetch commits and trees from a cache server in the background on a schedule, to improve the speed of user-initiated fetches, pulls, and pushes","The Vnode_ReadXattr() helper function had an unused context parameter, to which we were passing a nullptr in one instance. This would have been incorrect had the parameter been used, but really the parameter should be removed.",0
2024,build: drop all old scripts,0.5195141,1746: Delete custom upgrader,"The clang compiler supports _Nonnull and _Nullable annotations as an extension to the C & C++ type systems, and  will warn if a NULL value is passed to a function expecting a strictly non-null pointer. This further increases the number of programming errors caught by the type checker. The change adds nullability attributes on all parameters of vfs_context_t type, as there are some instances where a nullptr is used (as it turns out, incorrectly) as VFS context. As soon as there is a nullability specifier on one parameter declaration in a header file, clang warns about non-annotated parameters in the same file, so all pointer parameters have been annotated in headers that use vfs_context_t.",0
2025,Mac installer preinstall failure,0.60091686,Initial Mac upgrade functionality,"In #420, we changed how we stopped the background process. However, there was a gap: if the Process was null, then we returned false, causing extra error messages. This fixes that problem and avoids the noise in the logs on unmount.",0
2026,Merge pull request #1574: Update Git to include v2.24.0.windows.2,0.6711709,Includes Git for Windows 2.30.0.,,0
2027,Merge pull request #1747: UpgradeVerb: write deprecation notice,0.6904427,1747: UpgradeVerb: write deprecation notice,,0
2028,Mac kext: Drop lock for allocating virtualization root array memory,0.5213645,- Improved the memory usage during MIDX computation.,Allow the caller to determine how to handle the error.  This is because a command line error may fail due to permissions and be retried successfully by the service.,0
2029,PR Feedback - put get and set on separate lines,0.3787504,Pull Requests,"Before writing commit-graph or multi-pack-index, delete the .lock file that prevents Git from writing to those files. This will unblock users who have a stale .lock file from a previous early termination (BSOD, process kill due to unmount, etc.). If the Git commands are terminating due to legitimate problems, then their logs will be filled with the correct error instead of a message about a .lock file preventing the write. Both of these commands are maintenance commands that users should not be writing on their own, and we do them under our own file- based lock.",0
2030,Merge pull request #1561 from Functional test failures on Server 2016,0.48744875,1697: Fix functional tests to skip around ProjFS issue,,0
2031,NuGetUpgrader: tiny cleanup - remove an unnecesary assignment,0.5418194,Improves the rate of .gvfsCache cleanup.,,0
2032,Setup.iss: Update GitHub URL,0.6833677,- Updated Git for a security issue.,"Before writing commit-graph or multi-pack-index, delete the .lock file that prevents Git from writing to those files. This will unblock users who have a stale .lock file from a previous early termination (BSOD, process kill due to unmount, etc.). If the Git commands are terminating due to legitimate problems, then their logs will be filled with the correct error instead of a message about a .lock file preventing the write. Both of these commands are maintenance commands that users should not be writing on their own, and we do them under our own file- based lock.",0
2033,"Making GitSsl non-disposable, to avoid IDisposable explosion. Addressing StyleCop issues",0.5913174,- A couple of fixes for using VS Code on top of VFS for Git.,"The post-fetch job runs up to two Git commands: 'git multi-pack-index write' and 'git commit-graph write'. These can each take up to 30s depending on the amount of work to do. When we unmount, we want to ensure these prcoesses terminate. Before, we were aborting the post-fetch job thread. This is not cross-platform compliant. The new approach is to store a GitProcess object and pass a Kill signal to that process during unmount. Watch that call for some possible exceptions. Also, add an additional processLock to GitProcess that holds around our state changes for the process (starting or killing the process) so we don't race by killing a process before it starts and have it start anyway. As part of revealing this GitProcess to the necessary layer, I pulled the implementation of TryWriteMultiPackIndex out of the GitObjects class. The test suite was previously exercising this code path during the functional tests, as the functional tests frequently ran faster than the background Git processes. That should give some good data on how this works. Resolves #409",0
2034,Add additional comments,0.42075402,New Features,"The post-fetch job runs up to two Git commands: 'git multi-pack-index write' and 'git commit-graph write'. These can each take up to 30s depending on the amount of work to do. When we unmount, we want to ensure these prcoesses terminate. Before, we were aborting the post-fetch job thread. This is not cross-platform compliant. The new approach is to store a GitProcess object and pass a Kill signal to that process during unmount. There are a few race conditions around this being null, so we guard against some using try/catch blocks. This may be a direction for future improvement. The test suite was previously exercising this code path during the functional tests, as the functional tests frequently ran faster than the background Git processes. That should give some good data on how this works.",0
2035,Enable native notifciations on Windows (1),0.48452199,1710: Add new Microsoft certificate thumbprint,,0
2036,Fix Spelling,0.44127512,1747: UpgradeVerb: write deprecation notice,,0
2037,Delete ProductUpgradeTimer,0.7387609,1668: ProductUPgradeTimer: remove unacceptable Environment.Exit(),,1
2038,Mac kext: Cleans up root finding code further.,0.440234,Improves the rate of .gvfsCache cleanup.,,0
2039,Fix StyleCop error,0.4855057,- Other bug fixes,,0
2040,Fix ReExpanding folders when included folders are being used,0.58180195,Adds additional logging for folder and file placeholder creation.,,0
2041,Revert change to call daemon,0.39678055,"The merge strategy default is changed from recursive to ort which should present significant performance improvements for commands such as git merge, git rebase, and git cherry-pick. Huge thanks to external contributor @newren for creating this new merge strategy!",,0
2042,Added SubDirectoryInfo object,0.59496605,1674: Config: disable status.submoduleSummary,Mac: Ignore symlinks when 'prefetch --hydrate'-ing,0
2043,Rename LocalStorageRoot,0.3825695,- Fixes a copy failure when copying the upgrade tool to its temporary location.,,0
2044,Merge pull request #845 Tests: Check for the actual objects directory instead of just one folder,0.47515827,- Gracefully handle a missing shared object cache pack directory.,,0
2045,Remove trailing whitespace and enforce StyleCop rule SA1028,0.4109472,1668: ProductUPgradeTimer: remove unacceptable Environment.Exit(),,0
2046,Merge pull request #1679: BuildGVFSForWindows.bat: use nuget on PATH when possible,0.84422696,1678: BuildGVFSForWindows.bat: use nuget on PATH when possible,,1
2047,Win server 2016 FT fixes (2),0.562716,Various bug fixes and performance improvements,,0
2048,Update Git to vfs-2.20.0,0.9338989,1712: git-vfs: update to Git 2.30.0,,1
2049,Fix GetId Lookup and Add Unit Tests,0.5486464,"Other bug fixes, engineering improvements, and test reliability fixes.",,0
2050,Reset cacheStats.cacheEntries in InvalidateCache_ExclusiveLocked,0.5611494,- Fix backoff on cache server size endpoint 404.,,0
2051,Variable renaming,0.4062822,Major Changes,,0
2052,Merge pull request #1542 Run prune code even when no folders change,0.46452963,1730: Fix an issue with FastFetch when deleting files,,0
2053,Update pool logic to avoid issues with PackfileMaintenanceStep,0.5027574,- We have moved MIDX computation to a post-fetch thread. This should save blocking time per prefetch that downloads a packfile from the cache server.,,0
2054,GitMaintenanceQueue: fix null queue behavior,0.53324693,- Consume new GCM to fix git credential erase behavior,,0
2055,Mac ProjFS kext: Offline I/O privilege is inherited by child processes,0.41180485,1697: Fix functional tests to skip around ProjFS issue,,0
2056,More rename cleanup,0.50787735,Improves the rate of .gvfsCache cleanup.,,0
2057,Enable FastFetch to be published on Windows as part of our build script.,0.5804989,1678: BuildGVFSForWindows.bat: use nuget on PATH when possible,,0
2058,Fix mirror provider,0.5074973,- Other bug fixes,,0
2059,Merge pull request #1119 from github/rename-workdir-backing-path,0.52532566,"The merge strategy default is changed from recursive to ort which should present significant performance improvements for commands such as git merge, git rebase, and git cherry-pick. Huge thanks to external contributor @newren for creating this new merge strategy!", Updated gvfs config verb to support CRUD and List operations on settings. Usage gvfs config [ --list | --delete ]  ,0
2060,Platform specific gvfs.config location,0.6071601,Instructions for installing and using GVFS are available at https://github.com/Microsoft/GVFS,"Resolves #294. Update GitForWindows to use upstream multi-pack-index code instead of our private version. See the PR in Microsoft/git for more info on the Git change (and don't merge this until that is final). This does the following:  Update the command-line interactions that update the multi-pack-index. On mount, launch the post-fetch background job to ensure a multi-pack-index is calculated. (Very low cost if it already exists.) Since we have the multi-pack-index in more cases than before, we discover that we need to delete the multi-pack-index when deleting bad pack-files during prefetch. Since we trigger the post-fetch job on every mount, we now need to purposefully care about platform before shutting down the background thread. More work is required and tracked by #409.",0
2061,Mac prjfs-log: Flush stdout after each batch of log messages.,0.4968813,See the full change log,,0
2062,Split ProductUpgraderInfo into a shared and non-shared class,0.4407336,1685: minor path comparison fixup in ProductUpgrader,,0
2063,Merge pull request #714 from Create combined VFSForGit & Git installer,0.6597483,- A couple of fixes for using VS Code on top of VFS for Git.,,0
2064,separate func tests which rename in/out of repo,0.35520828,"Other bug fixes, engineering improvements, and test reliability fixes.",Added test-method to test read of a single setting (vs list). Cleanups - removed spacing around curly braces,0
2065,review comments,0.4784852,General improvements:,,0
2066,CreateDirectoryAccessibleByAuthUsers: use SetAccessControl,0.5009177,1734: Adding winget workflow,Mac: Close file descriptors when 'prefetch --hydrate'-ing,0
2067,Add retry and sleep for checking if file/folder exists in predelete cases,0.5210705,Adds additional logging for folder and file placeholder creation.,Unload the kext before installing Git to avoid a kernel panic on build agents,0
2068,Use static runtime for hooks,0.4492067,1740: Skip launching UI if running unattended,,0
2069,Call multi-pack-index with --no-progress,0.53555655,* git multi-pack-index verify would run slowly if the objects directory had more than 2048 packfiles.,,0
2070,Config: commitGraph.generationVersion=1,0.92523813,1726: Config: commitGraph.generationVersion=1,,1
2071,Merge pull request #870 from jamill/quick_fix,0.53828025,1730: Fix an issue with FastFetch when deleting files,Rephrased delete help text ConfigVerbTests - Delete functional test config settings before starting the tests. Removed GVFSProcess.RunConfigVerb() method. Display actionable error message when user specifies no config option Made ConfigVerbTests parallelizable,0
2072,Merge pull request #1243: Upgrade to Microsoft.Windows.ProjFS 1.1.19156.1,0.5097989,- Better errors around ProjFS installation issues.,,0
2073,Remove deprecated java hack for git-credential-manager,0.66254777,- Consume new GCM to fix git credential erase behavior,,0
2074,Merge pull request #807: Update RunFunctionalTests to not load kext,0.4753803,Pull Requests,,0
2075,Add bash script that pushes all local packages,0.36961168,Includes fixes to config settings for internal users only,,0
2076,Dont try to trigger reminder messaging when running in unattended mode.,0.54540473,1740: Skip launching UI if running unattended,,0
2077,Windows: Use a faster comparison when enumeration filter strings don't have wildcards,0.44482565,1685: minor path comparison fixup in ProductUpgrader,,0
2078,Merge pull request #950: NuGetUpgrader: defer credential acquisition,0.6258478,- Properly reacquire credentials during nuget upgrader,,0
2079,Update functional tests to check StartedByVerb,0.5038726,1697: Fix functional tests to skip around ProjFS issue,,0
2080,Adding the stdin option to fastfetch to stay consistent,0.45569882,1730: Fix an issue with FastFetch when deleting files,,0
2081,Merge pull request #1392 Mac: Add version information to kext and PrjFS logging daemon,0.49491486,"A new config setting allows updating USN journals, which is needed when using BuildXL with VFS for Git.",,0
2082,Fix upgrade timer crash,0.60988957,Various bug fixes and performance improvements,,0
2083,ProductUpgrader: only write newest version available,0.53917706,1668: ProductUPgradeTimer: remove unacceptable Environment.Exit(),,0
2084,Implemented SubDirectoryInfo object,0.58078665,1674: Config: disable status.submoduleSummary,,0
2085,Add dependency for fastfetch on the GVFS.FunctionalTests.Windows,0.6182974,"- Lots of bug fixes to make GVFS's file writes (e.g. to its database files) more reliable, even in the face of power loss",,0
2086,Remove Exclusion,0.46436745,1652: RepoRegistry: ignore non-existent repos,,0
2087,Allow multiple strings in DehydrateShouldSucceed method,0.3642452,- No-op gvfs prefetch --hydrate performance is dramatically improved,,0
2088,Mac: Fix and enable remaining dehydrate functional tests,0.5009612,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,,0
2089,Remove all TODO(POSIX) and TODO(Mac) comments.,0.6638831,1703: Delete all macOS projects,,0
2090,Rename property used when index is changed,0.39047393,Major Changes,,0
2091,Kill Background Process Trees,0.56943333,1703: Delete all macOS projects,Add WaitForBackgroundOperations call with checking modified paths Fixes #379,0
2092,Back to upper case since it works fine and keeps it consistent,0.40168256,This release is identical to the previous. It was published to test upgrade.,"Code cleanups - replaced text with const strings in Functional test, removed redundant code in Functional test.",0
2093,Merge pull request #884 from Adding Distribution.xml & installation-check,0.39779705,Update components included with internal distribution,Mac: Update and delete placeholder functions should check if file is still a placeholder,0
2094,Use Refresh rather than creating a new FileInfo,0.515797,"A new config setting allows updating USN journals, which is needed when using BuildXL with VFS for Git.",,0
2095,Fix mac installer/upgrader failure,0.6333973,Initial Mac upgrade functionality,,0
2096,Credentials: always reject credentials with just a URL,0.6201683,  - Now erases credentials on authentication failure,,0
2097,Merge pull request #3 from kevin-david/patch-1,0.6379757,Pull Requests,Functional test to verify that CommandLineParser throws error when mutually exclusive command line options are specified Updated alphabetical ordering of ConfigVerb in gvfs help output,0
2098,POSIX: Switch to Process.Start for launching GVFS.Mount:,0.5546881,Instructions for installing and using GVFS are available at https://github.com/Microsoft/GVFS,,0
2099,Merge pull request #1146 from Platform native notifications - PR_1,0.49177238,Initial Mac platform native notifications,,0
2100,Merge branch 'master' into patch-1,0.44418815,1746: Delete custom upgrader,,0
2101,Update project dependencies to prevent references to the new .NET Core,0.49898288,Update components included with internal distribution,adding l option for --list adding d option to --delete adding Functional tests,0
2102,Mac kext: Tightening up string handling for relative paths,0.37714595,1685: minor path comparison fixup in ProductUpgrader,Updated gvfs config verb to support CRUD and List operations on settings. Usage gvfs config [ --list | --delete ]  ,0
2103,Cleanups - made InstallerExtension strings const. Renamed InstallerExtension accessor to GetInstallerExtension.,0.4931594,- The installer now unmounts and remounts existing repos automatically,Mac: New folder notifications,0
2104,Mac ProjFS: Moves all relative path calculations to user space.,0.5287961,"A background task will now compress and deduplicate the pack-file data in the shared object cache, resulting in more sustainable disk usage",,0
2105,!fixup winget tag specification,0.8356131,1741: Fix winget tag specification,Mac: Turn on 'gvfs prefetch --hydrate',1
2106,Rename GitProcess.Result.HasErrors to GitProcess.Result.ExitCodeIsFailure,0.5821823,1663: Update Git to v2.27.0,,0
2107,Update Git to include more tracing updates,0.72921777,- Updated Git for a security issue.,,1
2108,Merge pull request #988 from pmj/mac-kext-c11-atomics,0.39186627,- We have moved MIDX computation to a post-fetch thread. This should save blocking time per prefetch that downloads a packfile from the cache server.,,0
2109,Add test for filemode git behavior,0.5774543,* git multi-pack-index verify would run slowly if the objects directory had more than 2048 packfiles.,"Update the package for GitForWindows to include tracing information. Includes the following Git PRs:  36 Avoid sane_execvp in git rebase and git stash 34 Add Trace2 regions to 'pack-objects' 28 Trace2 base plus GVFS extensions 33 virtualfilesystem: check if directory is included 31 Revert ""gvfs: add a perf test for reading the index"" 32 compat/poll: prepare for targeting Windows Vista 22 Enable the filesystem cache (fscache) in refresh_index() 27 virtualfilesystem: fix bug with symlinks being ignored 23 Unpack trees with cache tree gvfs 15 virtualfilesystem: don't run the virtual file system hook if the index has been redirected Includes Git 2.19.0.  This also includes VFS for Git updates from Kevin Willford's work: Fix missing untracked files when created in subfolder Add to the test to create multiple level of folders and files in those folder to make sure they show up as untracked files. Update the git for windows version that has the fix. Fixes #358",0
2110,PrefetchTests: Unmount before deleting packs,0.57299334,1675: PreCommandHook: don't lock pack-objects,Add check-ignore and check-attr to commands not needing lock,0
2111,Add Include Verb,0.3459882,1689: Make delete docs more verbose,,0
2112,Merge pull request #1239: NuGetFeed: only encrypt in memory credential  on supported platforms,0.5446111,- Properly reacquire credentials during nuget upgrader,Mac: Update build scripts to handle new Profiling configuration,0
2113,Properly error out in PrepFunctionalTests.sh if GVFS-aware Git hasn't been downloaded yet,0.7519341,* Improve error message from gvfs upgrade if the Git installation could not be found.,,1
2114,Early exit if the named pipe is already disposed,0.4823789,1745: do not exit early if no blobs found for a period when prefetching,,0
2115,Update git package to include consume commit 178619c,0.7321104,1751: Update Git to v2.33.0,,1
2116,Auto-mount repos on Mac & UT,0.6436511,- The installer now unmounts and remounts existing repos automatically,,0
2117,GitStatusCache: log when cache is not enabled,0.6517235,"- VFS for Git will prefetch commits and trees from a cache server in the background on a schedule, to improve the speed of user-initiated fetches, pulls, and pushes",,0
2118,Update the GitBlockCommandsTests,0.71966106,- Updated Git for a security issue.,,1
2119,Fix unit tests using include folders,0.49733788,1685: minor path comparison fixup in ProductUpgrader,,0
2120,Merge pull request #1469 from Enabling Service verb Functional tests,0.53731275,Pull Requests,,0
2121,Merge pull request #265 Update readme to include additional build badges,0.4880979,1741: Fix winget tag specification,Mac: Handle projection changes where git deletes folders that are still in the projection,0
2122,Merge pull request #972 from Install GVFS.Service as a Launch Agent on Mac,0.5598901,* gvfs upgrade could fail if its background processes were launched in an existing enlistment.,,0
2123,Run prune code even when no folder change,0.4478286,Adds additional logging for folder and file placeholder creation.,,0
2124,Mac ProjFS kext: Adds HandleFileOpOperation tests for hardlink creation,0.57536876,1697: Fix functional tests to skip around ProjFS issue,,0
2125,PR Feedback / Cleanup,0.5253202,Improves the rate of .gvfsCache cleanup.,,0
2126,Update diffhelper to properly track modes and wire it through to the mac platform,0.5765347,Initial Mac platform native notifications,,0
2127,Throw if a message is written to a disposed tracer,0.35690993,1652: RepoRegistry: ignore non-existent repos,,0
2128,Mac kext: Handle named streams,0.42959285,Initial Mac platform native notifications,,0
2129,"Before putting a PAT on the keychain in PrepFunctionalTests.sh, try removing the old one first if it wasn't properly cleaned up (likely in the case of a panic)",0.5014062,1746: Delete custom upgrader,,0
2130,Cleanup for PR comments,0.4578244,1652: RepoRegistry: ignore non-existent repos, Removed wildcard matching while searching for downloaded installers Updated FileBasedDictionary to support custom Key Comparators to enable case-insensitive lookups Fixed partial failure in build caused by UninstallGVFS.bat script. Updated TryGetVersion in GitProcess to accept git path as input argument.,0
2131,ensure consistent ordering in sparse func tests,0.37388447,Performance and Reliability,,0
2132,Upgrade test reliability,0.74038935,Performance and Reliability,,1
2133,GitMaintenanceScheduler: Remove PackfileMaintenanceStep,0.59983826,- VFS for Git will performance maintenance in the background. This release will pack loose objects in .gvfsCache into packfiles. ,"Updated GVFSHooksPlatforms to return string for InstallerExtensions, bcoz neither Mac nor Windows release ship with multiple installer extensions.",0
2134,build: add back new build scripts (for Windows only),0.54372215,1679: BuildGVFSForWindows.bat: use nuget on PATH,,0
2135,Merge pull request #1060 Fix FastFetch build in VS for Mac,0.6075475,1730: Fix an issue with FastFetch when deleting files,Windows: Add delay and retry to attributes check in ExpandedFileAttributesAreUpdated,0
2136,Merge pull request #1250: Switch on UTF-8 Tests,0.40930045,1683: GVFS.SignFiles.csproj: include more DLLs for signing,,0
2137,Merge pull request #715 Mac: vnode cache,0.5695412,- Gracefully handle a missing shared object cache pack directory.,,0
2138,Add original description on NamedPipe protocol,0.44178167,1741: Fix winget tag specification,Make GVFS.Upgrader rely on GVFS.cs.props to fix incremental build issue and remove the need to manually specify the OutputPath.,0
2139,Fix installer auto-mount failure,0.57484055,- Multiple mount process reliability bugs have been squashed.,"The GIT_TRACE variable can be helpful for diagnosing problems during Git commands. However, there are many places in VFS for Git that require parsing the Git output. Using GIT_TRACE=1 sends the output to stdout, which messes up this parsing. In the past, we have blocked that variable for this reason. It would still be helpful to allow logging the trace output. Git allows a fully-qualified path as the value of GIT_TRACE and will append to that file instead. This is how we would like users to use GIT_TRACE when investigating issues. Unblock that type of setting. Resolves #276",0
2140,Merge pull request #501 from pmj/abort-pending-dead-provider-events,0.48091665,Pull Requests,Added ability to set custom key comparers in FileBasedDictionary. Consumers can set case-insensitive comparers for case-insensitive dictionary lookups. Added platform specific installer extensions. GVFS.Hooks.OSPlatform would read the extensions from GVFSHooksPlatform.OSPlatform classes. Updated ProductUpgrader to do case-insensitive HashSet lookups while searching for downloaded installers.,0
2141,Merge pull request #1242: Mac: Add FileSystemType,0.48683295,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,,0
2142,Update Git to v2.33.0,0.9421432,1751: Update Git to v2.33.0,,1
2143,Merge pull request #441 from jamill/fast_fetch_parsing_fix,0.54115295,Pull Requests,Repair Functional Tests: test for confirm on and off,0
2144,Refactor to do ref and index changes at the very end,0.48733255,"- Post-index-change hook will help ensure consistency between Git and VFS for Git's reckoning of the state of the repository, and eliminate a class of bugs.",,0
2145,Minor formatting proposals,0.51450455,General Improvments,Mac kext: Adds check to only handle fileops on allowed filesystems,0
2146,correct return from getuid() to unsigned int,0.3050413,1726: Config: commitGraph.generationVersion=1,Mac: a performance tracing mechanism for the kext,0
2147,Loose Object Cleanup Step,0.6064533,Improves the rate of .gvfsCache cleanup.,"The vnode handler was already performing this check, but the fileop handler previously skipped it. This is part 1 of a fix for KP bug report #340.",0
2148,Remove $ for strings that don't need it,0.38081104,1689: Make delete docs more verbose,,0
2149,Rename method to CheckLockWhenIndexChanged,0.41466677,1717 [HOTFIX] Update Git to remove ODB string check,,0
2150,"Bug fixes, better tools support",0.84626365,- Other bug fixes,"Using the previously created profiling mechanism, this adds various measurement points to the vnode scope listener handler, and the relevant strings to the user space extraction tool.",1
2151,Merge pull request #1014 Check the projection for the folder before attempting to delete,0.4879812,1730: Fix an issue with FastFetch when deleting files,"In the review, it was pointed out we should be using nullptr instead of 0 for default function argument values which were copied from the declaration of the function being overridden in the log user client. The same is true for the provider user client, so this fixes it there too.",0
2152,Renaming GitConfigConstants for SSL,0.61436033,- Updated Git for a security issue.,"This adds a scoped time measurement class with splits. Probes are defined in an enum. When a ProfileSample instance is created, the Mach absolute time is taken, and when it is destroyed, another time stamp is taken, and the interval recorded with the sample aggregation probe ID specified during construction. Additionally, split time samples can be taken. The number of samples, total runtime, sum of squares, minimum, and maximum values are recorded. From these, mean and standard deviation can be derived. An external method for extracting the profiling data from the kernel has been added to the logging user client class. The simple log tool has been extended to fetch and dump this data to stdout every 15 seconds.",0
2153,Merge pull request #615 Update Git to include builtin rebase perf fix,0.5815645,- Built-in git rebase is on by default.,Mac kext: Virtualisation root refactoring & array resizing,0
2154,Prevent unit tests from deleting the upgrader download directory,0.5591067,1746: Delete custom upgrader,,0
2155,Update Git to include fix for midx expire,0.6318408,1712: git-vfs: update to Git 2.30.0,,0
2156,Merge pull request #213 Add Mac specific FileBasedLock implementation,0.4804932,Adds additional logging for folder and file placeholder creation.,Removed wildcard matching while searching for downloaded installers Added ToUpper() with ToUpperInvariant in LocalGVFSConfig Fixed partial failure in build caused by UninstallGVFS.bat script. Updated TryGetVersion in GitProcess to accept git path as input argument.,0
2157,Update DiskLayoutVersionTests to new version number,0.55041635,Update components included with internal distribution," GVFS.Service checks for upgrade availability periodically. When a new release is available it will be downloaded in the background. GVFS Git Hooks will remind user to install the upgrade. GVFS Upgrade [--confirm] verb will enable user to manually trigger installation of the upgrade release. Use gvfs config command to specify an upgrade ring. Example: gvfs config upgrade.ring ""Fast"". New GVFS name format for GVFS installer VFSGit.. Unit test cases. Functional test for upgrade reminder messaging.",0
2158,Address PR feedback,0.44548285,Release Notes,Simplify the logic for NamedPipeStreamReader and fix handling of multiple sequential messages,0
2159,Merge pull request #496 from nickgra/fastfetchPort,0.5097188,1730: Fix an issue with FastFetch when deleting files,,0
2160,Merge pull request #798 from pmj/mac-av-deadlock,0.42854863,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build, Pass all required components to vswhere in BuildGVFSForWindows.bat. Remove unnecessary component from Readme.md.,0
2161,Better Categorize M4 tests,0.37702498,"Other bug fixes, engineering improvements, and test reliability fixes.",,0
2162,"Renaming FileListFile -> FilesListFile, adding new properties to metadata",0.58925116,Adds additional logging for folder and file placeholder creation.,"This change moves the VirtualizationRoot structure definition out of the header file, and unifies the API to only use integer handles, which internally are array indices for non-negative values, and negative values from an enum of special cases. Where indices were previously used outside the VirtualizationRoot implementation functions, the terminology has been changed to ""handles."" An immediate advantage of the move away from pointers is an improvement in the ability to control thread safety of the root structures; additionally, unlike pointers, handles remain valid outside of held locks, so in a follow-on change, we can reallocate the array for resizing.",0
2163,Fixes incorrect freeing of memory for copied event messages.,0.46923497,- Fixes a copy failure when copying the upgrade tool to its temporary location.,,0
2164,Merge pull request #637 from pmj/mac-kext-log-daemon,0.44737068,Pull Requests,"Shadowing variables frequently is a source of bugs, so this enables the corresponding compiler warning.",0
2165,Adding UnitTests to GitSsl and making it testable,0.52859163,"- Post-index-change hook will help ensure consistency between Git and VFS for Git's reckoning of the state of the repository, and eliminate a class of bugs.",,0
2166,Merge pull request #806: Set feed url based on upgrade ring during installer,0.48371482,Pull Requests,"Occasionally, the vnode auth handler is called on a vnode representing a named stream/named fork. (Typically, the resource fork.) Forks don’t have their own xattrs, etc. so some of the logic we apply fails. We don’t care specifically about named forks, so treat any access to them as an access to the main file instead. Note: we need to balance the vnode_getparent() call with vnode_put()",0
2167,Consume libSharedDataQueue.dylib by downloading it as a NuGet package. Add this new script to PrepFunctionalTests.sh to ensure everyone is on a healthy version of the library.,0.48850635,- Upgrade supports NuGet feeds as a distribution source.,"The existing NamedPipe protocol expected that the sender of a message would wait for a response from the receiver before sending another message. It did not allow for multiple messages to be sent without the client responding.  However, this is not a correct assumption, as there is at least 1 place where a component will send multiple messages without waiting for a response from the receiver (#333). This change updates the NamedPipeStreamReader to handle multiple messages sent sequentially, and simplifies the overall logic in the process. Tests are also included which exhibit this behavior.",0
2168,Don't log errors when MaintenanceSteps fail due to the repo being deleted,0.556242,1652: RepoRegistry: ignore non-existent repos,Mac: Update MoveAndOverwriteFile to use native API,0
2169,Merge pull request #1318 from jamill/mac_installer_pkg,0.4712893,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,Add Mac OS build setup steps,0
2170,Sparse tests use static variable when checking for no folders,0.352476,1685: minor path comparison fixup in ProductUpgrader,Mac: Prevent double hydration and directory expansion,0
2171,Use default file length for MockGVFSGitObjects,0.5393146,- VFS for Git will performance maintenance in the background. This release will pack loose objects in .gvfsCache into packfiles. ,"Fixing UT failure. Launching upgrade tool was moved out of the spinner, UT was still expecting the Succeeded message.",0
2172,Mac: Update MoveAndOverwriteFile to use native API,0.52259517,1744: Overhaul build and project systems and drop Mac/POSIX code,"The previous approach to this test relied on deleting packfiles from the shared object cache. That failed on Windows because the .idx files have restrictive permissions that cause the delete to fail. Instead, use the loose object downloads to hydrate the commit and root tree for the WellKnownBranch and then do a clone pointing at that branch. This should trigger the failure case. Resolves #330",0
2173,"Don't pass --no-mount and --no-prefetch flags to clone, because it can hide bugs",0.53357416,1675: PreCommandHook: don't lock pack-objects,,0
2174,Mac dtruss: Improve tracing of syscall with string/buffer parameters,0.3842368,  - Correlate trace2 stream with VFS for Git stream with the Git session ID.,,0
2175,Merge pull request #408 Add untracked files from reset mixed to ModifiedPaths.dat,0.48687786,1730: Fix an issue with FastFetch when deleting files,"Fixing merge issues with master Added NoConfig RingType. NoConfig & None rings would be similar. During upgrade no error messaging will be displayed. RingType Invalid would continue to be treated as error. Rephrased mount error messaging. Making gvfs config keys case-insensitive Removed spinner for ""Launching upgrade tool"" Show pre-upgrade warning about repos being unmounted & mounted when upgrade is run from non-elevated command prompt as well Log version info from UpgradeVerb after successfull upgrade check.",0
2176,Mac PrjFS user space: Report connection errors in service watch callback function.,0.586112,- Fixed a bug that would cause VFS for Git mount process to shut down if it receives out-of-order ProjFS callbacks.,"This doesn't match, as we expect it to!",0
2177,GitHubUpgrader: inject LocalGVFSConfig dependency,0.55850685,- A couple of fixes for using VS Code on top of VFS for Git.,"The previous approach to this test relied on deleting packfiles from the shared object cache. That failed on Windows because the .idx files have restrictive permissions that cause the delete to fail. Instead, use the loose object downloads to hydrate the commit and root tree for the WellKnownBranch and then do a clone pointing at that branch. This should trigger the failure case.",0
2178,Mac: File modified notifications,0.73692536,Initial Mac platform native notifications,,1
2179,Use static placeholder version variable,0.37405956,- Fixed an issue where some concurrent updates to the placeholder database would fail,,0
2180,Change full suite to extra coverage with option to only run the extra ones,0.48060408,Includes fixes to config settings for internal users only,,0
2181,Refactor DiskLayoutUpgradeTests and create one for Mac,0.63314176,Initial Mac upgrade functionality,,0
2182,build: migrate GVFS.FunctionalTests project file,0.6435871,- VFS for Git will performance maintenance in the background. This release will pack loose objects in .gvfsCache into packfiles. ,,0
2183,*.csproj: update MicroBuild package names,0.5477119,Update components included with internal distribution,,0
2184,Add more information to message when kext is loaded successfully,0.35381803,- Added better diagnostic info in the GVFS logs when there are network errors,,0
2185,Update Git to v2.31.1.vfs.0.3,0.9422971,1736: Update Git to v2.31.1.vfs.0.3,,1
2186,Mark DiagnoseTests as NonParallelizable to prevent conflicts with repos (un)registering for auto-mount,0.5222014,1652: RepoRegistry: ignore non-existent repos,,0
2187,Merge pull request #1337: [Mac Kext] Remove '/System/Volumes/Data' when only in path,0.5423938,1703: Delete all macOS projects,,0
2188,Publish a mac build drop and consume it for functional test runs,0.5696252,1744: Overhaul build and project systems and drop Mac/POSIX code,,0
2189,More logging for failing tests,0.5310637,- Added better diagnostic info in the GVFS logs when there are network errors,,0
2190,Merge pull request #1408: Include panic logs for vfs in diagnose,0.59029543,- Added better diagnostic info in the GVFS logs when there are network errors,,0
2191,NuGetUpgrader: construct AzDev Org URL from AzDev packaging URL,0.451258,  - Now scopes credential.useHttpPath to just dev.azure.com hostname,,0
2192,Tests demonstrating issue with newline in Git commands,0.5436048,- Updated Git for a security issue.,Enrich existing tests to include confirm off,0
2193,Update FastFetch Functional Tests to run on MacOS and update the build script to find FastFetch in its new published location.,0.4810927,1730: Fix an issue with FastFetch when deleting files,"Show ""None"" message in diagnose instead of invalid url",0
2194,More StyleCop fixes,0.6321418,- Other bug fixes,Use correct repoUrl for credential,0
2195,Merge pull request #1039: introduce OrgNuGetUpgrader,0.5475549,Pull Requests,"Revert back to old installer name ""SetupGVFS..exe"" Upgrade supports both old and new gvfs installer name formats now. Early exit upgrade when either Git or GVFS asset installers are missing in the Release. New success message when repository mount fails. updated messaging when gvfs mount fails Don't re-mount when GVFS installation fails. Shorter pre-upgrade warning text. rephrased ProjFS error message Rephrased Cannot install upgrade messaging. Added advice on what to do next when an upgrade is available but not installable. Include Ring information in upgrade-available message. Updated UT. cleanup made LocalGVFSConfig.allSettings a private property",0
2196,Restrict ACLs on VFS4G ProgramData and update verbs as needed,0.51388454,- A couple of fixes for using VS Code on top of VFS for Git.,,0
2197,Add different method for creating a folder for windows and mac,0.592584,Adds additional logging for folder and file placeholder creation.,Fixing FunctionalTest failure.,0
2198,Added specific flag for kernel logs,0.44792455,1741: Fix winget tag specification,"Updated InstallerExtension of Mock & Mac platforms. New extenstions are .mockexe and .dmg Update UT Changed GVFS installer name to New Format ""VFSGit.Version.Extension""",0
2199,Fix StyleCop errors,0.5293837,- Other bug fixes,"Support for New Asset installer name format. New GVFSPlatform constant for installer file name extension. Renamed installer file name from ""SetupGVFS.version.exe"" to ""VFSGit.version.exe"" Updated UT & FT.",0
2200,Add functional tests and address some PR feedback,0.5263419,"Other bug fixes, engineering improvements, and test reliability fixes.",Renamed GVFSVerb.NonRepoVerb to GVFSVerb.ForNoEnlistment.,0
2201,PR feedback - Use enum for where pathType in SQL query and cleanup PlaceholderDatabaseRepairJob,0.5967101,Moves placeholder database into SQLite for better performance.,"Allow gvfs config to succeed from a Non-elevated command prompt. GVFS Config is written to a temporary file and then renamed to its final destination. For this rename operation to succeed, user needs to have delete permission on the destination file, in case it is pre-existing. If the pre-existing file was created by a different user, then the delete will fail. Reference: https://stackoverflow.com/questions/22107812/privileges-owner-issue-when-writing-in-c-programdata. This work around allows safe write to succeed in C:\ProgramData directory.",0
2202,Add tests around package verification,0.52835596,"Other bug fixes, engineering improvements, and test reliability fixes.",Replaced git config format and writer with FileBasedDictionary New base class for Verbs that don't need an enlistment. Cleanups,0
2203,Add missed CommonAssemblyVersion to Virtualization and bump copyright string to 2019.,0.46298873,1673: [HOTFIX] ProductUpgrader: be extra careful about a copy loop,New ConfigVerb. Usage gvfs config   New LocalGVFSConfig.cs file. It writes config key value pairs into a git config file. Updated ProductUpgrader.cs to use the new LocalGVFSConfig class to read ring config.  ,0
2204,Merge pull request #1017 POSIX: Change default location of .gvfsCache folder from /.gvfsCache to ~/.gvfsCache,0.5470983,"* Due to the transition to SQLite, the file sizes cache can now live in the volume-wide .gvfsCache folder and be shared by multiple repos, causing fewer round trips to the server while enumerating files",Renamed GVFSConfig.cs to ServerGVFSConfig.cs. Renamed all variables with name gvfsConfig to serverGVFSConfig,0
2205,Use ExitCodeIsSuccess instead of !ExitCodeIsFailure for readability,0.40963557,1668: ProductUPgradeTimer: remove unacceptable Environment.Exit(),Removed GitProcess.Version() Using GitProcess.TryGetVersion() in GVFSVerb and Diagnose Verb. Save directory listing of GVFS.Upgrade\Downloads directory during diagnose. Created MockGitInstallation.cs Removed NotSupportedException handler from GitProcess.cs,0
2206,PostFetchJob: Delete stale .lock files,0.5960777,1730: Fix an issue with FastFetch when deleting files,resolving merge issues,0
2207,fixup bad merge,0.65256107,- Other bug fixes,"renamed upgrade ring config to ""gvfs.upgrade-ring"" Cleanup renamed UpgradeDiskLayout constant to MountUpgrade. Cleanup - replaced usage of the string ""gvfs.upgrade-ring"" with const. Added TODO to remove NotSupportedException from GitProcess::TryGitVersion. Made InstallerTracer.CommandToRerun protected property. Updated UT. Added issue reference url for InstallerPreRunChecker refactoring TODO. Added new constants for ""gvfs upgrade"", ""gvfs upgrade --confirm"" strings. Removed pre-check for development version. Upgrade can now be run on Developer machines. Optimization - InstallerPreRunChecker::IsBlockingProcessRunning now returns HashSet. Removed unnecessary conversion to list. Better error handling in InstallerPreRunChecker while launching GVFS CLI Updated messaging in InstallerPreRunChecker. The text ""elevated command prompt"" was missing in some of the messaging. Cleanup. Renamed processWrapper to ProcessLauncher. Added URL info while logging network errors during fetch release. Removed Randomization of upgrade timer in the service. Removed GVFSArgs from MockInstallerPreRunChecker UT class. Removed ShouldExitOnError property in UpgradOrchestrator class. Using Environment.ExitCode instead. Cleanup. Replaced all occurances of ""remount"" with ""mount"". removed log-mount-failure-in-stderr flag from Service verb. renamed log files to productupgrade_and mount_repoupgrade",0
2208,Test reliability,0.7179446,Performance and Reliability,"- Display nag only 10% of the times a git command is run - Removed ""Run gvfs upgrade..."" from the reminder notification message. - Use ITracer.StartActivity for method tracing. - Service Verb redirects list of repos that failed to mount to stderr. - Upgrader tool reads stderr and displays the list on Console. - New console message displayed after launching installer advising user to not run gvfs, git commands until installation has finished. - Added a new Console message to let user know upgrade completed successfully - inserted blank line before final instruction to run gvfs upgrade --confirm command - Early exit when no upgrade or invalid upgade ring is set - Upgrade verb crash fix on Mac. - Early exit when upgrade is not installable and gvfs upgrade --confirm is run",1
2209,Merge pull request #1104 from github/libgit2-nuget-upgrade-linux,0.5172936,* Improve error message from gvfs upgrade if the Git installation could not be found.,GVFS.Service checks for upgrade availability periodically. When an new release is available it will be downloaded in the background. GVFS Git Hooks will nag user to install the upgrade. GVFS Upgrade [--confirm] verb will enable user to manually trigger installation of the upgrade release. Unit test cases Functional test for upgrade reminder messaging,0
2210,LooseObjectsStep: move filename logic to helper method,0.43661612,1730: Fix an issue with FastFetch when deleting files,"This test attempted to cover a rare scenario, but is flaky due to something holding a handle on the pack-files we are trying to delete. The test did these things:  Clone in enlistment1. Delete all packfiles. Download the tip commit and root tree as loose objects. Clone in enlistment2, hitting the new retry logic.  However, the pack-file delete can fail due to something holding on to the packfiles. This failed on one PR build already. Stop it from failing on others.",0
2211,Use ShouldBe... syntax,0.35675436,1689: Make delete docs more verbose,,0
2212,Merge pull request #1015: Test Coverage for ProcesswasSpawnedByRegularUser,0.5719052,Pull Requests,"If not cache server is present display ""None""",0
2213,Merge pull request #1284 from jamill/enable_mac_upgrade,0.49933237,Initial Mac upgrade functionality,"This test attempted to cover a rare scenario, but is flaky due to something holding a handle on the pack-files we are trying to delete.",0
2214,Add NeedsCachePoisonFix test category,0.5277401,1697: Fix functional tests to skip around ProjFS issue,This change allows us to reinitialize the GitProces with valid repository information information and pass it correctly to the credential call.,0
2215,Rename filePlaceholdersFromDiskByPath since it is now a HashSet,0.44172025,Adds additional logging for folder and file placeholder creation.,"On Clone, we need to create the .git/index file during a checkout, which requires having all trees reachable from the root tree of the tip commit. To ensure we have all of the objects, we call TryDownloadCommit(). However, this method doesn't actually try downloading a pack of trees if we already have the commit and root tree. Due to the shared object cache, we may have these objects for a few reasons:  A recent fetch included a ref update that points to that commit, and we downloaded the commit and tree as loose objects. A background prefetch downloaded a prefetch pack containing that commit and tree, but some of the reachable trees are missing due to clock skew between cache servers.  This fixes the issue by forcibly downloading the packfile if the checkout fails and trying again. Resolves #306.",0
2216,Enhance SymbolicLinkTests and fix bug in ModifiedPathsShouldContain,0.540724,1685: minor path comparison fixup in ProductUpgrader,Windows: Use a faster comparison when enumeration filter strings don't have wildcards,0
2217,Add InvokeGetFileDataCallback for tester and use in tests,0.46562743,- Disable commit-graph verify for performance concerns,,0
2218,Merge pull request #628 Upgrade refactoring to enable Nuget upgrades,0.6811044,Update NuGet upgrader with new Microsoft package signing certificate,,0
2219,Update sparse parent folder mtimes to trigger Explorer refresh,0.47310442,- Fixes a copy failure when copying the upgrade tool to its temporary location.,Mac: Update MirrorProvider to support symbolic links,0
2220,Merge pull request #613 from nickgra/TestResultGitIgnore,0.5371945,Pull Requests,,0
2221,Merge pull request #909 from pmj/kext-provider-messaging-refactor,0.4409105,Pull Requests,Compress the entries in the modified paths database when mounting,0
2222,Disable the TelemetryDaemonEventListener on Windows,0.4689083,1740: Skip launching UI if running unattended,,0
2223,Merge pull request #1241: Update heartbeats for folder placeholders and file hydration,0.54748803,Adds additional logging for folder and file placeholder creation.,Mac: Support projecting symbolic links,0
2224,Fix PhysicalFileSystem plumbing in UpgradeVerb,0.54167384,"Other bug fixes, engineering improvements, and test reliability fixes.",,0
2225,Print the timestamp in the message rather than the current time,0.45692807,  - Break down update placeholders timings so we can see where time is spend during checkout.,,0
2226,Changes for PR Feedback,0.5001205,Major Updates,,0
2227,LooseObjectsStep (Part 2),0.45440105,1734: Adding winget workflow,,0
2228,Addressing StyleCop errors,0.46080646,- Other bug fixes,,0
2229,Add Readme.md for the GitIndexProjection and related classes,0.5797386,1750: Update Readme.md,,0
2230,Merge pull request #191 Mac: New file created notification,0.55599296,Initial Mac platform native notifications,,0
2231,Merge pull request #1526: Fix Installer Versioning issues with kext/VFS4G.app,0.6173759,Bug Fix: Fixes a bug with gvfs upgrade that causes versions v1.0.20112.1 from upgrading from private feeds.,This will search the modified paths for a parent folder and if one exists it will remove the entry from the modified paths list,0
2232,PR Feedback - use GVFSHelpers.PlaceholderFieldDelimiter,0.5741237,1683: GVFS.SignFiles.csproj: include more DLLs for signing,Check modified paths for parent directories before adding,0
2233,Make versioning platform specific,0.5013192,1744: Overhaul build and project systems and drop Mac/POSIX code,,0
2234,"GeneratePrjFSXCConfig.sh should exit early if it fails to determine BUNDLE_VERSION.  Additionally, make BUNDLE_VERSION Major.Minor",0.51771295,1658: ProjFSFilter: Be more robust to missing PowerShell,,0
2235,Break a test,0.35186785,1745: do not exit early if no blobs found for a period when prefetching,,0
2236,Update Git to v2.25.0,0.93222153,1737: Update Git to v2.32.0,,1
2237,Major updates:,1.0,Major updates:,,1
2238,Mac ProjFS userlib: Consistently don't follow symlinks for metadata I/O,0.4865478,1697: Fix functional tests to skip around ProjFS issue,,0
2239,WriteFile: Fix Logging,0.5537814,Adds additional logging for folder and file placeholder creation.,,0
2240,Update Git to include status deserialization fix,0.7417175,- Updated Git for a security issue.,,1
2241,Update to Git 2.32.0.vfs.0.4,0.93541163,1712: git-vfs: update to Git 2.30.0,,1
2242,Test reliability issue fix,0.83996737,Other bug fixes for reliability,Set config to useHttpPath=true,1
2243,Installer reliability,0.7502182,Other bug fixes for reliability,Fix large repo and mac build badges,1
2244,Update Git to include expire-time fix,0.71449524,- Updated Git for a security issue.,Links were broken when a project was renamed in Azure DevOps.,1
2245,Merge pull request #1225 from jamill/upgrader_tasks/platform_strategy,0.54380107,Pull Requests,,0
2246,Merge pull request #1553 Add sparse prune info and failures to stderr,0.45889103,1674: Config: disable status.submoduleSummary,,0
2247,Merge pull request #1450 Add information for when lock is release by process not owning the lock,0.44840673,- Better recovery from a process that terminates without releasing the GVFS lock.,Recursively expand directories before delete and enable folder rename functional tests,0
2248,ParallelHydrationTests: Remove problematic paths used for other tests,0.5344806,1685: minor path comparison fixup in ProductUpgrader,,0
2249,Mac kext: Hides PrjFSProviderUserClient API behind free functions for mocking,0.50369275,1658: ProjFSFilter: Be more robust to missing PowerShell,,0
2250,Merge pull request #1412 from github/case-sensitive-repos,0.52897966,Pull Requests,,0
2251,Merge pull request #1737: Update Git to v2.32.0,0.69832516,1663: Update Git to v2.27.0,,0
2252,Default include verb to show list of folders when no arguments are passed,0.4164946,1689: Make delete docs more verbose,"Hostname is no longer sufficent for VSTS authentication. VSTS now requires dev.azure.com/account to determine the tenant. By setting useHttpPath, credential managers will get the path which contains the account as the first parameter. They can then use this information for auth appropriately.",0
2253,Handle spaces in directories,0.49450183,Adds additional logging for folder and file placeholder creation.,Add wait for background operations to complete in modified paths test,0
2254,Mac: Cleanup while investigating converting files to full,0.5959214,1703: Delete all macOS projects,,0
2255,Make some messages in dehydrte custom for the verb running dehydrate,0.41253227,1747: UpgradeVerb: write deprecation notice,,0
2256,New Rename tests for moving files in/out of the Virtualization Root,0.41746983,- Fixes a copy failure when copying the upgrade tool to its temporary location.,,0
2257,Moves vnode eligibility check to start of HandleVnodeOperation,0.43617642,1666: Docs: start basic template,"The functional test PrefetchCleansUpStalePrefetchLock intends to check the multi-pack-index and commit-graph are completely written after a prefetch. However, this can fail if the test is faster than the background thread in the mount process. This change introduces a 500ms pause in the test to ensure we give adequate time to the mount process before verifying the background thread did its work.",0
2258,DehydrateVerb: Properly dispose repo and context,0.45548296,1652: RepoRegistry: ignore non-existent repos,,0
2259,Fix style,0.54120696,- Other bug fixes,,0
2260,Add prune option for the GVFSProcess in the functional tests,0.5476701,1697: Fix functional tests to skip around ProjFS issue,Remove temp paths from ModifiedPathsDatabase,0
2261,Merge pull request #163 from derrickstolee/bug162,0.5925598,Pull Requests,,0
2262,PR Feedback 3,0.50726736,Release notes,,0
2263,Merge pull request #1622: GVFSVerb: use flags for core.gvfs,0.60287225,1683: GVFS.SignFiles.csproj: include more DLLs for signing,,0
2264,Improve the log searchability,0.5356608,"- Further optimizations to GVFS's index parsing, saving time on commands that need to reproject (like checkout).",,0
2265,Credentials: consistently use usehttppath for dev.azure.com scope,0.7741225,  - Now scopes credential.useHttpPath to just dev.azure.com hostname,,1
2266,Move DiskLayoutVersion into IDiskLayoutUpgradeData,0.46270716,1668: ProductUPgradeTimer: remove unacceptable Environment.Exit(),,0
2267,Ignore symlinks when 'prefetch --hydrate'-ing. Update ParseFromLsTreeLine to detect a mode of 120000 which indicates a symlink.,0.5392965,1674: Config: disable status.submoduleSummary,,0
2268,README: use inline code blocks and etc.,0.40937716,1666: Docs: start basic template,,0
2269,RunFunctionalTests.bat: remove exits,0.46223855,1668: ProductUPgradeTimer: remove unacceptable Environment.Exit(),,0
2270,Add method to remove all entries that start with a path,0.4727882,1689: Make delete docs more verbose,,0
2271,Merge pull request #314 Check modified paths for parent directories before adding,0.44833165,- Gracefully handle a missing shared object cache pack directory.,,0
2272,Merge pull request #1531 from github/posix-and-case-fixups,0.4859028,- Fixed a bug that would cause VFS for Git mount process to shut down if it receives out-of-order ProjFS callbacks.,,0
2273,Mac ProjFS kext: Preparation for denying access to offline roots.,0.5145073,1658: ProjFSFilter: Be more robust to missing PowerShell,,0
2274,PR Feedback: Use fsid&inode instead of path as key in mutex map,0.3825675,1685: minor path comparison fixup in ProductUpgrader,,0
2275,Native hooks: Fixes build error due to missing std::string declaration,0.4856261,Previous builds were not including fully-signed DLLs. This is now fixed.,,0
2276,Update to git version that has the post-indexChanged hook,0.7606884,"- Post-index-change hook will help ensure consistency between Git and VFS for Git's reckoning of the state of the repository, and eliminate a class of bugs.",,1
2277,Mac kext: Poisons the debug-only path for offline roots to catch any dependency,0.3808366,1703: Delete all macOS projects,,0
2278,Moving SslSettings to GitAuthentication class,0.60509884,This includes the Git Credential Manager Core v2.0.394.50751.,,0
2279,Cleanup Test Infrastructure,0.5383727,"Other bug fixes, engineering improvements, and test reliability fixes.",Catch and log exceptions thrown by TryPrepareFolderForCallbacks,0
2280,Merge pull request #1726: Config: commitGraph.generationVersion=1,0.81227225,1726: Config: commitGraph.generationVersion=1,,1
2281,Readme: add new winget install instructions,0.5871558,1741: Fix winget tag specification,,0
2282,simplify virt paths in dehydration status tests,0.45485365,- No-op gvfs prefetch --hydrate performance is dramatically improved,,0
2283,Merge pull request #512: Load SSL certificate according to git config,0.4901843,  - Correlate trace2 stream with VFS for Git stream with the Git session ID.,Tweak Named pipe protocol,0
2284,"Revert ""Merge pull request #1765 from derrickstolee/signing""",0.54195994,Pull Requests,,0
2285,Rename method and use Split method for building parent paths,0.44035357,1685: minor path comparison fixup in ProductUpgrader,"GVFS currently sends a text based data across a named pipe with lines / messages separated by newline characters. This prohibits sending messages that include a newline as part of the message content. The main current manifestation of this problem is that GVFS does not handle git command lines that contain a newline character. There is another problem that GVFS needs to send paths across the named pipe (for ModifiedPathsList queries), and these paths can include newline characters on certain filesystems (macOS, Linux). Additionally, the protocol that GVFS uses to communicate across the named pipe is currently not consistent. It usually uses a text based stream, but for the ModifiedPathsList response, it uses null bytes to seperate entries in a list. To address these issues, this change tweaks the protocol used to communicate via the named pipe to use the 0x3 byte to indicate the end of a line / message (this is the End of text ASCII code).",0
2286,UpgradeOrchestrator tests with generalized Upgrader,0.57674754,1685: minor path comparison fixup in ProductUpgrader,,0
2287,Merge pull request #1759: Update winget link to reference winget-cli repo,0.6826842,1741: Fix winget tag specification,Allow MirrorProvider to handle/hydrate Read only files in the mirrored path,0
2288,Update Git to include builtin rebase perf fix,0.6858671,- Built-in git rebase is on by default.,,0
2289,Rename force to force-checkout and pull into FastFetch CheckoutJob,0.43191624,1730: Fix an issue with FastFetch when deleting files,,0
2290,Merge pull request #1398 Mac: Don't download file sizes as part of OnEnumerateDirectory,0.45524073,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,,0
2291,Hooks: Fix message around 'gvfs status',0.6691649,Bug Fix: Fixes a bug with gvfs upgrade that causes versions v1.0.20112.1 from upgrading from private feeds.,Make LaunchPrefetchJobIfIdle thread safe and update it to exit when unhandled exceptions occur,0
2292,Merge pull request #963 from Service porting to Mac,0.47607845,Pull Requests,,0
2293,Log filemode in eventmetadata,0.52451956,Adds additional logging for folder and file placeholder creation.,,0
2294,Use ReportErrorAndExit when checking options for sparse,0.41843528,1697: Fix functional tests to skip around ProjFS issue,,0
2295,"Move GetVersionInfo to PhysicalFileSystem, cleanup variable names, and fix TryEnablePrjFlt return value",0.4790275,1730: Fix an issue with FastFetch when deleting files,Update PowerShellRunner to support hard link creation and enable more functional tests on Mac,0
2296,Upgrader: add command install action,0.51382065,- The installer now unmounts and remounts existing repos automatically,,0
2297,Switch from atomic_exchange_explicit to atomic_store_explicit where appropriate,0.33406556,Upgrade supports an anonymous endpoint to decouple rollouts to different engineering systems.,,0
2298,More style fixes,0.63488877,- Other bug fixes,,0
2299,Merge pull request #1018 Mac: Check the return value of stat in PrjFS_DeleteFile,0.45486563,1697: Fix functional tests to skip around ProjFS issue,Clean up code that was referring to sparse-check our always_exclude,0
2300,refactor use of .gvfs directory name,0.6021602,Switched over to use the Windows Projected File System (ProjFS) optional feature on RS4 and later. ProjFS is the new name for the GvFlt driver and its associated user mode library.,,0
2301,fixup naming of working dir backing path variables,0.45146096,1685: minor path comparison fixup in ProductUpgrader,,0
2302,Mac kext: Adds verbose logging when inserting/updating roots/providers,0.4685343,- Fixed an issue on Mac where files were not being hydrated when signed as part of a build,,0
2303,Add case-differing-only SortedFolderEntriesTests,0.33195883,"- Further optimizations to GVFS's index parsing, saving time on commands that need to reproject (like checkout).",,0
2304,Move some common functions to GVFSVerb,0.6357412,"- Further optimizations to GVFS's index parsing, saving time on commands that need to reproject (like checkout).",,0
2305,Add lock around writes to SQLite database tables,0.59073913,Moves placeholder database into SQLite for better performance.,,0
2306,Merge pull request #1654 Add Readme.md for the GitIndexProjection and related classes,0.5316039,Git: Includes incremental commit graph,,0
2307,Read upgrade ring from feedurl,0.48011386,- Upgrade supports NuGet feeds as a distribution source.,Update readme to include additional build badges,0
2308,"Repack: use one thread, but allow deltas",0.46981817,1674: Config: disable status.submoduleSummary,Mac: Prevent deletes of the index by non-git processes and enable related functional tests,0
2309,Mac EndpointSecurity prototype: Catches unexpected action and event types,0.5914209,Initial Mac platform native notifications,,0
2310,Moving certificate password loading to GitSsl class and other minor refacotrings,0.6587447,- Updated Git for a security issue.,,0
2311,Merge pull request #586 GitMaintenanceQueue: fix null queue behavior,0.5369344,Pull Requests,,0
2312,Merge pull request #1001 from Test reliability issue fix,0.63599133,Other bug fixes for reliability,Remove Windows specific code from UpdatePlaceholderTests and enable tests on Mac,0
2313,Merge pull request #692 from jamill/windows_build_script_tweak,0.5066289,Pull Requests,,0
2314,Merge pull request #465 Mac: Support 'gvfs diagnose' verb,0.5222858,- Added better diagnostic info in the GVFS logs when there are network errors,,0
2315,Merge pull request #406: Remove most relative paths from Windows scripts,0.4398492,Pull Requests,,0
2316,Merge pull request #1330 Add sparse verb for allowing projection of only specific folders,0.47897407,Adds additional logging for folder and file placeholder creation.,,0
2317,Use published version of Service,0.45706666,- We have started porting parts of the product to .NET Standard.,,0
2318,Remove Existing StyleCop NuGet packages,0.5192542,1668: ProductUPgradeTimer: remove unacceptable Environment.Exit(),,0
2319,Rename PlaceholderListDatabase to LegacyPlaceholderListDatabase,0.5377258,Moves placeholder database into SQLite for better performance.,,0
2320,746 Call git-credential approve on successful credential usage,0.7032968,This includes the Git Credential Manager Core v2.0.394.50751.,,1
2321,Log EventListerer failures to all other listeners,0.4526703,See the full change log,,0
2322,Add unit tests for GVFSDatabase and Placeholders,0.58054924,- Added better diagnostic info in the GVFS logs when there are network errors,Don't update ModifiedPaths.dat for hard links created outside of repo,0
2323,Merge pull request #866: Upgrade: run upgrader in system diretory,0.50457275,1711 [HOTFIX] Fix upgrader's expectation of a single certificate,,0
2324,Merge pull request #1259: Update Git to v2.22.0,0.68838155,1663: Update Git to v2.27.0,,0
2325,Add expect error assertions,0.3872944,1652: RepoRegistry: ignore non-existent repos,,0
2326,Fix casing in EnsureVFSDevShell.bat,0.48542008,- Other bug fixes,,0
2327,PR Feedback - remove ITracer from GVFSDatabase and rename some variables,0.5278216,The gvfs upgrade command is deprecated. Future upgrades will require using winget or installing directly from the releases page.,Mac: Support projection changes that add new files and delete folder,0
2328,Set config to useHttpPath=true,0.4856375,  - Now scopes credential.useHttpPath to just dev.azure.com hostname,,0
2329,Fix Functional Tests,0.60181916,"Other bug fixes, engineering improvements, and test reliability fixes.",,0
2330,Merge pull request #602 Mac: Skip vnode operations that have the KAUTH_VNODE_ACCESS bit set,0.51096153,Pull Requests,,0
2331,Update LibGit2RepoPool to have no max size,0.46160287,1733: Update Git to include 2.31.1,,0
2332,Add unit tests for the GVFSLock class,0.5514867,- Added better diagnostic info in the GVFS logs when there are network errors,,0
2333,Merge pull request #1733: Update Git to include v2.31.1,0.7702364,1733: Update Git to include 2.31.1,,1
2334,Merge pull request #299: Fix typo in ServiceVerb help text,0.50818706,Pull Requests,,0
2335,Remove useless tracing in hot virtualization path,0.4473557,1685: minor path comparison fixup in ProductUpgrader,,0
2336,Simplify logic for OnHardLinkCreated,0.42686516,1726: Config: commitGraph.generationVersion=1,,0
2337,remove unit test,0.4029808,1668: ProductUPgradeTimer: remove unacceptable Environment.Exit(),,0
2338,PR Feedback - clean up tests,0.5441202,"Other bug fixes, engineering improvements, and test reliability fixes.",,0
2339,Mac kext: Adds extra path field to kernel-provider message,0.38577002,Adds additional logging for folder and file placeholder creation.,,0
2340,Disable Native_ProjFS_MoveFile_PartialToOutside functional test,0.6821854,1697: Fix functional tests to skip around ProjFS issue,,0
2341,Delete corrupt loose objects,0.51836026,1730: Fix an issue with FastFetch when deleting files,,0
2342,Use enum for projection state for paths so it is more explicit in checks,0.3503256,- Commit-graph and multi-pack-index are validated after writing to eliminate corruption scenarios,,0
2343,Add note,0.45765126,Release Notes,,0
2344,Merge pull request #1602: Migrate to Azure Artifacts,0.51763487,The local file size cache was migrated from ESENT to SQLite,,0
2345,restore common func tests but add case-sensitivity,0.40183026,"Other bug fixes, engineering improvements, and test reliability fixes.",,0
2346,Remove unused code,0.47696358,1668: ProductUPgradeTimer: remove unacceptable Environment.Exit(),,0
2347,Remove UpgradeMarkerFile when upgrade is disabled,0.6621857,1746: Delete custom upgrader,,0
2348,Add timings to different parts of updating placeholders,0.6997567,  - Break down update placeholders timings so we can see where time is spend during checkout.,,0
2349,Mac kext testing: Workaround for redefining  constants,0.36434704,- Disable commit-graph verify for performance concerns,,0
2350,Add a global setup when using a --test= option,0.35432142,Includes fixes to config settings for internal users only,,0
2351,Merge pull request #1663: Update Git to v2.27.0,0.747779,1663: Update Git to v2.27.0,,1
2352,Merge pull request #336 SecondCloneSucceedsWithMissingTrees: Attempt 2,0.4708489,1674: Config: disable status.submoduleSummary,,0
2353,Clean up Register/Unregister for OfflineIO,0.41492224,1652: RepoRegistry: ignore non-existent repos,,0
2354,Merge pull request #425 GitProcess: return true when process is null,0.5268533,Pull Requests,,0
2355,Verify files after writing them,0.47953713,- Commit-graph and multi-pack-index are validated after writing to eliminate corruption scenarios,,0
2356,Merge pull request #610 from benpeart/reset.quiet,0.55568135,Pull Requests,Mac: Support basic projection changes and re-categorize functional tests,0
2357,Mac uninstaller launchd issue #1005,0.61146,Initial Mac upgrade functionality,,0
2358,Update Git to v2.25.1.vfs.1.1,0.9329288,1736: Update Git to v2.31.1.vfs.0.3,,1
2359,"Make it so that the index.lock file is just a lock file, not attempting to pass on pass-fail information to future instances",0.50386304,1675: PreCommandHook: don't lock pack-objects,,0
2360,Prototyping testing the unmodified kext in userspace via a dylib,0.37301362,1734: Adding winget workflow,,0
2361,stop blocking unsupported git commands,0.66567373,- Consume new GCM to fix git credential erase behavior,,0
2362,Background upgrade check fix,0.5858574,Major Updates,,0
2363,ReadMessage IOException should be a warning,0.44886827,1750: Update Readme.md,When matching up data with ETW event there is an EnlistmentId and mountId that it tied to data about the enlistment and the mounted process. Other events are not tied to this data so when an exception happens getting the mount data that corresponds to it is not directly correlated. This adds the EnlistmentId and MountId to the ETW data so that the data can be correlated.,0
2364,Dont change version no for dev builds,0.5133808,1736: Update Git to v2.31.1.vfs.0.3,,0
2365,Test Coverage for ProcessWasSpawnedByRegularUser,0.48461598,- Disable commit-graph verify for performance concerns,,0
2366,Update git version to release with post index changed hook,0.76736367,1682: Update Git to v2.28.0,,1
2367,Enhance git command logging,0.6553407,Git: Includes incremental commit graph,,0
2368,skip test of below-minimum disk layout version,0.40925515,Initial Mac upgrade functionality,"While investigating a user issue with auto mount registration, I noticed that their logs contained a failure from TryGetNormalizedPath, but did not log the error message. Add that message to the logs so we can properly diagnose the issue. Further, the 'normalizedEnlistmentRootPath' parameter becomes null, so do not add it to the dictionary in that case. Instead, it should be logged by the RelatedWarning. Signed-off-by: Derrick Stolee dstolee@microsoft.com",0
2369,Merge pull request #1683: GVFS.SignFiles.csproj: include more DLLs for signing,0.86072177,1683: GVFS.SignFiles.csproj: include more DLLs for signing,"While investigating a user issue with auto mount registration, I noticed that their logs contained a failure from TryGetNormalizedPath, but did not log the error message. Add that message to the logs so we can properly diagnose the issue. Further, the 'normalizedEnlistmentRootPath' parameter becomes null, so do not add it to the dictionary in that case. Instead, it should be logged by the RelatedWarning. Signed-off-by: Derrick Stolee dstolee@microsoft.com",1
2370,Merge pull request #1703: Delete all macOS projects,0.86338115,1703: Delete all macOS projects,Add Mac specific FileBasedLock implementation,1
2371,SecondCloneSucceedsWithMissingTrees: Attempt 2,0.40088427,1674: Config: disable status.submoduleSummary,,0
2372,UpgradeVerb: write deprecation notice,0.905933,1747: UpgradeVerb: write deprecation notice,,1
2373,Fixed existing .NET Core unit tests,0.5166557,"Other bug fixes, engineering improvements, and test reliability fixes.",,0
2374,Delete custom upgrader,0.8723562,1746: Delete custom upgrader,,1
2375,Merge pull request #1456 from Auto-unmount repos in pre-install,0.6477732,- The installer now unmounts and remounts existing repos automatically,,0
2376,Remove $ from string that didn't need it,0.37905627,1689: Make delete docs more verbose,,0
2377,Merge pull request #1625: LocalGVFSConfig: succeed when file doesn't exist,0.5149581,1683: GVFS.SignFiles.csproj: include more DLLs for signing,,0
2378,Small UX changes and GitProcess edit,0.5763837,- Updated Git for a security issue.,,0
2379,Add Code Coverage for ShouldHandleFileOpEvent,0.5138515,1734: Adding winget workflow,,0
2380,Functional test: add check that tmp_* files and multi-pack-index.lock are deleted,0.4993115,* git multi-pack-index verify would run slowly if the objects directory had more than 2048 packfiles.,,0
2381,Cleanup ContainsParentDirectory and add checks in tests for unexpected paths,0.5475702,1685: minor path comparison fixup in ProductUpgrader,,0
2382,Create build drops on Windows,0.5250336,1679: BuildGVFSForWindows.bat: use nuget on PATH,,0
2383,Move FunctionalTests.LockHolder to the unified version number.,0.4933888,1726: Config: commitGraph.generationVersion=1,Update to ProjFS version 2018.823.1,0
2384,FastFetch: properly handle items with special tokens in path,0.52933663,1730: Fix an issue with FastFetch when deleting files,Hardlink notifications on Mac & Windows and rename notifications on Mac,0
2385,Fix spacing,0.5076708,- Many smaller bug fixes,,0
2386,Cleanup and changes for PR feedback,0.5225657,General improvements:,,0
2387,PostFetchStep: log commit-graph chain,0.7018342,- Disable commit-graph verify for performance concerns,,1
2388,Use ActiveProvider_Disconnect instead of setting providerUserClient to nullptr,0.42884538,1674: Config: disable status.submoduleSummary,,0
2389,Assert that file attribute read does not fail in FileOp events,0.39196151,- gvfs prefetch learned how to take --files-list.,,0
2390,LibGit2Repo: Do not dispose on a timer,0.5041876,1675: PreCommandHook: don't lock pack-objects,,0
2391,Win server 2016 FT fixes (5),0.5780746,Various bug fixes and performance improvements,,0
2392,Don't spend time authenticating if we're going to noop,0.604818,  - Now erases credentials on authentication failure,,0
2393,Update inno installer metadata,0.6196396,Update components included with internal distribution,,0
2394,Merge pull request #1109: readme formatting tweaks,0.54341567,Pull Requests,,0
2395,"Fix printf issues in the native hooks, and mark the die function as using printf formatting",0.47007784,1730: Fix an issue with FastFetch when deleting files,,0
2396,Mark MoveIndexFileFails as MacOnly because CmdRunner on Windows is failing,0.46463805,1730: Fix an issue with FastFetch when deleting files,Mac: New file created notification,0
2397,Merge pull request #184: Centralize business logic for starting background prefetch.,0.47810504,Pull Requests,,0
2398,Fix Mirror Provider APIs,0.48492602,- Other bug fixes,,0
2399,Catch and log the exceptions thrown by Thread.Start(),0.4092651,1740: Skip launching UI if running unattended,Update name of file that indicates installation version,0
2400,Merge pull request #298 Mac: Support projecting symbolic links,0.48981452,Pull Requests,Update name of file that GVFS installer creates when an on disk version 16 capable installation is first installed.,0
2401,Merge branch 'master' into outofproc-trace-listener,0.37734008,1744: Overhaul build and project systems and drop Mac/POSIX code,Update git version to 2.18.0.gvfs.1.26.gf61ade4,0
2402,Convert tabs to spaces,0.30508533,"- Further optimizations to GVFS's index parsing, saving time on commands that need to reproject (like checkout).",This fixes #185,0
2403,Prefetch Tests: Add test for .lock files,0.5412457,1675: PreCommandHook: don't lock pack-objects,,0
2404,Add automated tests around NamedPipeStream protocol,0.43393236,- Disable commit-graph verify for performance concerns,,0
2405,Add comment explaining only one of predelete or delete should be queued,0.49349654,1689: Make delete docs more verbose,,0
2406,Merge pull request #744: Installer updates for PrjFSKextLogDaemon,0.5719987,1658: ProjFSFilter: Be more robust to missing PowerShell,,0
2407,Merge pull request #576 from pmj/fix-namedstream-io-errors,0.45127872,1730: Fix an issue with FastFetch when deleting files,,0
2408,Add process name to lib debug logging,0.43655178,See the full change log,,0
2409,Merge pull request #1653: Update Git to include v2.26.1,0.74879277,1653: Update Git to include v2.26.1,,1
2410,build: migrate solution file,0.5415017,- Fixes a copy failure when copying the upgrade tool to its temporary location.,,0
2411,add MoveIndexFileFails() functional test,0.4292814,1697: Fix functional tests to skip around ProjFS issue,Mac kext logging: Make time stamps more human readable,0
2412,GVFS.props: Use better path concatenation,0.6546489,"Many other reliability improvements in interactions between GVFS and the file system, and between GVFS and git","This changes the prjfs-log tool to print log time stamps in seconds (with millisecond precision) since the start of the log rather than outputting the raw Mach absolute time stamp, which has fairly arbitrary and non-human-readable units.",0
2413,Allow a verb to pass along its auth instance to another verb that it is executing,0.255948,1689: Make delete docs more verbose,Mac: Add PreDelete Notification,0
2414,Mac kext: Avoid working on file stream vnodes in fileop handler,0.49586973,- VFS for Git will performance maintenance in the background. This release will pack loose objects in .gvfsCache into packfiles. ,,0
2415,Do not fail on small pools,0.39573056,- Many smaller bug fixes,,0
2416,Merge pull request #1263 from jeschu1/log_more,0.5543219,Pull Requests,,0
2417,build: drop AnyCPU and x86 solution configurations,0.5172178,1744: Overhaul build and project systems and drop Mac/POSIX code,,0
2418,Win server 2016 FT fixes (1),0.57377946,Various bug fixes and performance improvements,,0
2419,Add comment,0.36387044,New Features,,0
2420,Mac kext: Abort events awaiting response when their provider disconnects,0.4442987,Initial Mac platform native notifications,,0
2421,Use a single libgit2repo,0.46179405,Includes Git 2.22,Move the check for unattended enlistment from InProcessMount to BackgroundPrefetcher.,0
2422,Mac kext unit testing: Virtualization root tests & mock vnode/mount,0.450258,- Multiple mount process reliability bugs have been squashed.,,0
2423,Merge pull request #1116: LooseObjectStepTests: Be more flexible with loose object count,0.50484425,Pull Requests,,0
2424,Merge pull request #1569: Ensure git-credential cmds are run with correct wrkdir,0.5027181,- Consume new GCM to fix git credential erase behavior,Move the check for unattended enlistment from InProcessMount to BackgroundPrefetcher.,0
2425,GVFSVerb: explicitly disable new config settings,0.58840847,- Better recovery from a process that terminates without releasing the GVFS lock.,,0
2426,Add TryRemove method to the ModifiedPathsDatabase,0.46143764,1734: Adding winget workflow,GitStatusCache: fix race condition in test setup,0
2427,Rename externalLockReleaseRequested to parseIndexRequested,0.39144182,Pull Requests,"This is to fix an issue that happened (intermittently) in the functional tests. There is a race condition where the test is attempting to delete the status cache file, but the status cache might not have been generated for the test repository. To fix this, the test setup will wait for the initial status cache to be generated, so it can proceed from a known state.",0
2428,Gather all of the under construction flags into one class,0.35224426,1744: Overhaul build and project systems and drop Mac/POSIX code,This adds a --force-checkout option when using FastFetch. This will cause FastFetch to treat the repo as if it had just been initialized meaning new folders can be fetched after the initial FastFetch is run. You can effectively grow the number of folders a FastFetched repo has. This is required for boot-strapping scenarios where the set of desired folders to fetch must be dynamically computed after an initial fast fetch.,0
2429,William Feedback,0.36753452,1747: UpgradeVerb: write deprecation notice,,0
2430,Add sub section for recovering from pre-delete.,0.52150947,1674: Config: disable status.submoduleSummary,,0
2431,Add method of running the full dehydrate,0.5513082,- No-op gvfs prefetch --hydrate performance is dramatically improved,,0
2432,PrjFS kext testing: Fixes test failing due to expected failed assertion,0.63951516,1697: Fix functional tests to skip around ProjFS issue,,0
2433,Stop reading ring info from Nuget feedurl,0.6311875,1732: Use one NuGet feed,Fix parsing of GVFS-aware Git version numbers that contain - (for PR validation builds) Correct regex used to match GVFS-aware Git package to actually match the NuGet spec for what defines a package. See https://docs.microsoft.com/en-us/nuget/reference/package-versioning,0
2434,Add functional tests for dehydrating folders,0.43415618,- No-op gvfs prefetch --hydrate performance is dramatically improved,,0
2435,NuGetUpgrader: check for git install,0.63996196,Includes Git v2.27.0,,0
2436,Merge pull request #258 Remove Windows specific code from UpdatePlaceholderTests and enable tests on Mac,0.46645427,1703: Delete all macOS projects,Fix test reliability issues with checks in GetObjectRoot,0
2437,Addressing minor code review comments,0.47580355,General Improvements,,0
2438,Implement IRequiredCallbacks in Windows Virtualization classes,0.40039313,1674: Config: disable status.submoduleSummary,,0
2439,Deploy to winget via wingetcreate,0.6926403,1734: Adding winget workflow,,0
2440,Merge pull request #849: UpgradeVerb: tweak message logged after checking for update,0.5439081,Bug Fix: Fixes a bug with gvfs upgrade that causes versions v1.0.20112.1 from upgrading from private feeds.,,0
