Index,Release Note
1,"1.5.5 (May 05, 2023)
BUG FIXES:

logging: Fixed a bug where alloc logs would not be collected after an upgrade to 1.5.4 [link]
"
2,"1.3.14 (May 03, 2023)"
3,"1.5.4 (May 02, 2023)
BREAKING CHANGES:

artifact: environment variables no longer inherited by default from Nomad client [link]

IMPROVEMENTS:

acl: New auth-method type: JWT [link]
build: Update from Go 1.20.3 to Go 1.20.4 [link]
cli: Added new module command to restart all allocations for a job [link]
cli: stream both stdout and stderr logs by default when following an allocation [link]
client/fingerprint: detect fastest cpu core during cpu performance fallback [link]
client: Added module configuration [link]
connect: Added support for meta field on sidecar service block [link]
dependency: update runc to 1.1.5 [link]
driver/docker: Default module to module like Docker's CLI [link]
ephemeral disk: migrate=true now implies sticky=true [link]
fingerprint/cpu: correctly fingerprint P/E cores of Apple Silicon chips [link]
jobspec: Added option for disabling task log collection in the module block [link]
license: show Terminated field in module command [link]
ui: Added copy-to-clipboard buttons to server and client pages [link]
ui: added new keyboard commands for job start, stop, exec, and client metadata [link]

BUG FIXES:

api: Fixed filtering on maps with missing keys [link]
cli: Fix panic on job plan when -diff=false [link]
client: Fix CNI plugin version fingerprint when output includes protocol version [link]
client: Fix address for ports in IPv6 networks [link]
client: Fixed a bug where restarting proxy sidecar tasks failed [link]
client: Prevent a panic when an allocation has a legacy task-level bridge network and uses a driver that does not create a network namespace [link]
client: Remove setting attributes when spawning the getter child [link]
core: the deployment's list endpoint now supports look up by prefix using the wildcard for namespace [link]
csi: gracefully recover tasks that use csi node plugins [link]
docker: Fixed a bug where plugin config values were ignored [link]
drain: Fixed a bug where drains would complete based on the server status and not the client status of an allocation [link]
driver/exec: Fixed a bug where module and module would not expand capabilities [link]
fix: Added ""/usr/libexec"" to the landlocked directories the getter has access to [link]
scale: Do not allow scale requests for jobs of type system [link]
scheduler: Fix reconciliation of reconnecting allocs when the replacement allocations are not running [link]
scheduler: honor false value for distinct_hosts constraint [link]
server: Added verification of cron jobs already running before forcing new evals right after leader change [link]
ui: Fix a visual bug where evaluation response wasn't scrollable in the Web UI. [link]
"
4,"1.4.9 (May 02, 2023)
IMPROVEMENTS:

build: Update from Go 1.20.3 to Go 1.20.4 [link]
dependency: update runc to 1.1.5 [link]

BUG FIXES:

api: Fixed filtering on maps with missing keys [link]
build: Linux packages now have vendor label and set the default label to HashiCorp. This fix is implemented for any future releases, but will not be updated for historical releases [link]
client: Fix CNI plugin version fingerprint when output includes protocol version [link]
client: Fix address for ports in IPv6 networks [link]
client: Fixed a bug where restarting proxy sidecar tasks failed [link]
client: Prevent a panic when an allocation has a legacy task-level bridge network and uses a driver that does not create a network namespace [link]
core: the deployment's list endpoint now supports look up by prefix using the wildcard for namespace [link]
csi: gracefully recover tasks that use csi node plugins [link]
docker: Fixed a bug where plugin config values were ignored [link]
drain: Fixed a bug where drains would complete based on the server status and not the client status of an allocation [link]
driver/exec: Fixed a bug where module and module would not expand capabilities [link]
scale: Do not allow scale requests for jobs of type system [link]
scheduler: Fix reconciliation of reconnecting allocs when the replacement allocations are not running [link]
scheduler: honor false value for distinct_hosts constraint [link]
server: Added verification of cron jobs already running before forcing new evals right after leader change [link]
services: Fixed a bug preventing group service deregistrations after alloc restarts [link]
"
5,"1.5.3 (April 04, 2023)
SECURITY:

acl: Fixed a bug where unauthenticated HTTP API requests through the client could bypass ACL policy checking link [link] [link]
build: update to Go 1.20.3 to prevent denial of service attack via malicious HTTP headers link [link]
"
6,"1.4.8 (April 04, 2023)
SECURITY:

build: update to Go 1.20.3 to prevent denial of service attack via malicious HTTP headers link [link]
"
7,"1.3.13 (April 04, 2023)
SECURITY:

build: update to Go 1.20.3 to prevent denial of service attack via malicious HTTP headers link [link]
"
8,"1.5.2 (March 21, 2023)
BREAKING CHANGES:

cli: nomad login no longer requires -type flag, since auth method names are globally unique. [link]

IMPROVEMENTS:

agent: trim leading and trailing spaces when parsing module header [link]
build: Update to go1.20.2 [link]
cli: Added module and module flag to module command [link]
cli: Added module and module flag to module command [link]
cli: Added module and module flag to module command [link]
cli: Added module flag to module command [link]
scheduler: remove most uses of reflection for task comparisons [link]

BUG FIXES:

artifact: Fixed a bug where artifact downloading failed when using git-ssh [link]
cli: nomad login no longer ignores default auth method if they are present. [link]
client: Fixed a bug where artifact downloading failed on hardened nodes [link]
client: Fixed a bug where clients using Consul discovery to join the cluster would get permission denied errors [link]
client: Fixed a bug where cpuset initialization fails after Client restart [link]
core: Fixed a bug where Dynamic Node Metadata requests could crash servers [link]
plugin: Add missing fields to module so they can be accessed by external task drivers [link]
services: Fixed a bug where a service would be deregistered twice [link]
"
9,"1.4.7 (March 21, 2023)
IMPROVEMENTS:

build: Update to go1.20.2 [link]

BUG FIXES:

client: Fixed a bug where clients using Consul discovery to join the cluster would get permission denied errors [link]
client: Fixed a bug where cpuset initialization fails after Client restart [link]
plugin: Add missing fields to module so they can be accessed by external task drivers [link]
services: Fixed a bug where a service would be deregistered twice [link]
"
10,"1.3.12 (March 21, 2023)
IMPROVEMENTS:

build: Update to go1.20.2 [link]

BUG FIXES:

client: Fixed a bug where clients using Consul discovery to join the cluster would get permission denied errors [link]
client: Fixed a bug where cpuset initialization fails after Client restart [link]
plugin: Add missing fields to module so they can be accessed by external task drivers [link]
services: Fixed a bug where a service would be deregistered twice [link]
"
11,"1.5.1 (March 10, 2023)
BREAKING CHANGES:

api: job register and register requests from API clients older than version 0.12.1 will not longer emit an evaluation [link]

SECURITY:

variables: Fixed a bug where a workload identity without any workload-associated policies was treated as a management token link [link]
variables: Fixed a bug where a workload-associated policy with a deny capability was ignored for the workload's own variables link [link]

IMPROVEMENTS:

cli: Add job prefix match to the module, module, module, and module commands [link]
cli: Add support for the wildcard namespace module to the module, module, module, and module commands [link]
cli: Added module and module flag to module command [link]
env/ec2: update cpu metadata [link]

DEPRECATIONS:

api: The module, module, and module methods in the module struct will have their signatures modified in Nomad 1.6.0 [link]
api: The module method in the module struct will be removed in Nomad 1.6.0 [link]

BUG FIXES:

api: Fix module method to properly set the request module and module in the response [link]
cli: Fixed a bug where the module and module flags were not respected on the module command [link]
client: Don't emit shutdown delay task event when the shutdown operation is configured to skip the delay [link]
client: Fixed a bug that prevented allocations with interpolated values in Consul services from being marked as healthy [link]
client: Fixed a bug where clients used the serf advertise address to connect to servers when using Consul auto-discovery [link]
docker: Fixed a bug where pause containers would be erroneously removed [link]
scheduler: Fixed a bug where allocs of system jobs with wildcard datacenters would be destructively updated [link]
scheduler: Fixed a bug where collisions in dynamic port offerings would result in spurious plan-for-node-rejected errors [link]
server: Fixed a bug where deregistering a job that was already garbage collected would create a new evaluation [link]
server: Fixed a bug where node updates that produced errors from service discovery or CSI plugin updates were not logged [link]
server: Fixed a bug where the module command and API would not return any scheduler-related errors [link]
service: Fixed a bug where attaching a policy to a job would prevent workload identities for the job from reading the service registration API [link]
ui: fixed an issue where system/sysbatch jobs with wildcard datacenters (like [""dc*""]) were not showing client status charts [link]
ui: fixed outbound link to outage recovery on error page [link]
"
12,"1.4.6 (March 10, 2023)
SECURITY:

variables: Fixed a bug where a workload-associated policy with a deny capability was ignored for the workload's own variables link [link]

IMPROVEMENTS:

env/ec2: update cpu metadata [link]

BUG FIXES:

client: Fixed a bug that prevented allocations with interpolated values in Consul services from being marked as healthy [link]
client: Fixed a bug where clients used the serf advertise address to connect to servers when using Consul auto-discovery [link]
docker: Fixed a bug where pause containers would be erroneously removed [link]
scheduler: Fixed a bug where collisions in dynamic port offerings would result in spurious plan-for-node-rejected errors [link]
server: Fixed a bug where deregistering a job that was already garbage collected would create a new evaluation [link]
server: Fixed a bug where node updates that produced errors from service discovery or CSI plugin updates were not logged [link]
server: Fixed a bug where the module command and API would not return any scheduler-related errors [link]
"
13,"1.3.11 (March 10, 2023)
IMPROVEMENTS:

env/ec2: update cpu metadata [link]

BUG FIXES:

client: Fixed a bug where clients used the serf advertise address to connect to servers when using Consul auto-discovery [link]
docker: Fixed a bug where pause containers would be erroneously removed [link]
scheduler: Fixed a bug where collisions in dynamic port offerings would result in spurious plan-for-node-rejected errors [link]
server: Fixed a bug where deregistering a job that was already garbage collected would create a new evaluation [link]
server: Fixed a bug where node updates that produced errors from service discovery or CSI plugin updates were not logged [link]
server: Fixed a bug where the module command and API would not return any scheduler-related errors [link]
"
14,"1.5.0 (March 01, 2023)
FEATURES:

Dynamic Node Metadata: Allow users and tasks to update Node metadata via an API [link]
SSO via OIDC: Allow users to authenticate with Nomad via OIDC providers [link]

BREAKING CHANGES:

cli: The deprecated gossip keyring commands module, module, module, and module have been removed. Use the module commands to manage the gossip keyring [link]
config: the module field for agent configuration no longer accepts the module character as part of the datacenter name [link]
core: Ensure no leakage of evaluations for batch jobs. Prior to this change allocations and evaluations for batch jobs were never garbage collected until the batch job was explicitly stopped. The new module server configuration controls how often they are collected. The default threshold is module. [link]
metrics: The metric module has been renamed to module to reduce confusion with the module metric. [link]

SECURITY:

build: Update to go1.20.1 [link]

IMPROVEMENTS:

acl: refactor ACL cache based on golang-lru/v2 [link]
agent: Allow configurable range of Job priorities [link]
api: improved error returned from AllocFS.Logs when response is not JSON [link]
artifact: Provide mitigations against unbounded artifact decompression [link]
build: Added hyper-v isolation mode for docker on Windows [link]
build: Update to go1.20 [link]
cli: Add module and module flag to module command [link]
cli: Added module flag to module for use with module mode [link]
cli: Added sprig function support for module templates [link]
cli: Added tls command to enable creating Certificate Authority and Self signed TLS certificates.
There are two sub commands module and module that are helpers when creating certificates. [link]
cli: Warn when variable key includes characters that require the use of the module function in templates [link]
cli: module can be used to stop multiple jobs concurrently. [link]
cli: add a nomad operator client state command [link]
cli: multi-line module output, add BuildDate [link]
cli: we now recommend .nomad.hcl extension for job files, so module creates example.nomad.hcl [link]
client/fingerprint/storage: Added config options disk_total_mb and disk_free_mb to override detected disk space [link]
client: Add option to enable hairpinMode on Nomad bridge [link]
client: Added a TaskEvent when task shutdown is waiting on shutdown_delay [link]
client: Log task events at INFO log level [link]
client: added http api access for tasks via unix socket [link]
client: detect and cleanup leaked iptables rules [link]
client: execute artifact downloads in sandbox process [link]
consul/connect: Adds support for proxy upstream opaque config [link]
consul: add client configuration for grpc_ca_file [link]
core: Eliminate deprecated practice of seeding rand package [link]
core: Non-client nodes will now skip loading plugins [link]
csi: Added server configuration for module [link]
deps: Update github.com/containerd/containerd from 1.6.6 to 1.6.12 [link]
deps: Update github.com/docker/docker from 20.10.21+incompatible to 20.10.23+incompatible [link]
deps: Update github.com/fsouza/go-dockerclient from 1.8.2 to 1.9.0 [link]
deps: Update google.golang.org/grpc from 1.48.0 to 1.50.1 [link]
deps: Update google.golang.org/grpc to v1.51.0 [link]
docs: link to an envoy troubleshooting doc when envoy bootstrap fails [link]
env/ec2: update cpu metadata [link]
fingerprint: Detect CNI plugins and set versions as node attributes [link]
identity: Add identity jobspec block for exposing workload identity to tasks [link]
identity: Allow workloads to use RPCs associated with HTTP API [link]
jobspec: the module field now accepts wildcards [link]
metrics: Added metrics for rate of RPC requests [link]
scheduler: allow using device IDs in module and module [link]
server: Added raft snapshot arguments to server config [link]
server: Certain raft configuration elements can now be reloaded without restarting the server [link]
services: Set Nomad's User-Agent by default on HTTP checks in Nomad services [link]
ui, cli: Adds Job Templates to the ""Run Job"" Web UI and makes them accessible via new flags on nomad job init [link]
ui: Add a button for expanding the Task sidebar to full width [link]
ui: Added a Policy Editor interface for management tokens [link]
ui: Added a ui.label block to agent config, letting operators set a visual label and color for their Nomad instance [link]
ui: Made task rows in Allocation tables look more aligned with their parent [link]
ui: Show events alongside logs in the Task sidebar [link]
ui: The web UI now provides a Token Management interface for management users on policy pages [link]
ui: The web UI will now show canary_tags of services anyplace we would normally show tags. [link]
ui: Warn when variable key includes characters that require the use of the module function in templates [link]
ui: give users a notification if their token is going to expire within the next 10 minutes [link]
ui: redirect users to Sign In should their tokens ever come back expired or not-found [link]
users: Added a cache for OS user lookups [link]
variables: Increased maximum size to 64KiB [link]
vault: configure Nomad User-Agent on vault clients [link]
volumes: Allow module to be used with host_volumes [link]

DEPRECATIONS:

api: Deprecated ErrVariableNotFound in favor of ErrVariablePathNotFound to correctly represent an error type [link]
api: Deprecated Variables.GetItems in favor of Variables.GetVariableItems to avoid returning a pointer to a map [link]
api: The connect module field is deprecated in favor of module [link]
api: The connect module field is deprecated in favor of module [link]

BUG FIXES:

acl: Fixed a bug in token creation which failed to parse expiration TTLs correctly [link]
acl: Fixed a bug where creating/updating a policy which was invalid would return a 404 status code, not a 400 [link]
agent: Make agent syslog log level follow log_level config [link]
api: Added missing node states to NodeStatus constants [link]
api: Fix stale querystring parameter value as boolean [link]
api: Fixed a bug where Variables.GetItems would panic if variable did not exist [link]
api: Fixed a bug where exposeConfig field was not provided correctly when getting the jobs via the API [link]
api: Fixed a nil pointer dereference when periodic jobs are missing their periodic spec [link]
cgutil: handle panic coming from runc helper method [link]
check: Add support for sending custom host header [link]
cli: Fix unbolded header module [link]
cli: Fixed a bug where module would overwrite the file being checked [link]
cli: Fixed a bug where plans for periodic jobs would return exit code 1 when the job was already register [link]
cli: Fixed a panic in module when rollback deployments are slow to appear [link]
cli: module: when second arg is an @-reference, check extension for format [link]
cli: corrected typos in ACL role create/delete CLI commands [link]
cli: fix nomad fmt -check flag not returning error code [link]
client: Fixed a bug where allocation cleanup hooks would not run [link]
connect: ingress http/2/grpc listeners may exclude hosts [link]
consul: Fixed a bug where acceptable service identity on Consul token was not accepted [link]
consul: Fixed a bug where consul token was not respected when reverting a job [link]
consul: Fixed a bug where services would continuously re-register when using ipv6 [link]
consul: correctly interpret missing consul checks as unhealthy [link]
core: enforce strict ordering that node status updates are recorded after allocation updates for reconnecting clients [link]
csi: Fixed a bug where a crashing plugin could panic the Nomad client [link]
csi: Fixed a bug where secrets that include '=' were incorrectly rejected [link]
csi: Fixed a bug where volumes in non-default namespaces could not be scheduled for system or sysbatch jobs [link]
csi: Fixed potential state store corruption when garbage collecting CSI volume claims or checking whether it's safe to force-deregister a volume [link]
docker: Fixed a bug where images referenced by multiple tags would not be GC'd [link]
docker: Fixed a bug where infra_image did not get alloc_id label [link]
docker: configure restart policy for bridge network pause container [link]
docker: disable driver when running as non-root on cgv2 hosts [link]
eval broker: Fixed a bug where the cancelable eval reaper used an incorrect lock when getting the set of cancelable evals from the broker [link]
event stream: Fixed a bug where undefined ACL policies on the request's ACL would result in incorrect authentication errors [link]
fix: Add the missing option propagation_mode for volume_mount [link]
parser: Fixed a panic in the job spec parser when a variable validation block was missing its condition [link]
scheduler (Enterprise): Fixed a bug that prevented new allocations from multiregion jobs to be placed in situations where other regions are not involved, such as node updates. [link]
server: Fixed a bug where rejoin_after_leave config was not being respected [link]
services: Fixed a bug where check_restart on nomad services on tasks failed with incorrect CheckIDs [link]
services: Fixed a bug where services would fail to register if task initially fails [link]
template: Fixed a bug that caused the chage script to fail to run [link]
template: Fixed a bug where the template runner's Nomad token would be erased by in-place updates to a task [link]
ui: Fix allocation memory chart to display the same value as the CLI [link]
ui: Fix navigation to pages for jobs that are not in the default namespace [link]
ui: Fixed a bug where the exec window would not maintain namespace upon refresh [link]
ui: Scale down logger height in the UI when the sidebar container also has task events [link]
volumes: Fixed a bug where module was allowed for volume blocks on system and sysbatch jobs, which do not have an allocation index [link]
"
15,"1.4.5 (March 01, 2023)
BREAKING CHANGES:

core: Ensure no leakage of evaluations for batch jobs. Prior to this change allocations and evaluations for batch jobs were never garbage collected until the batch job was explicitly stopped. The new module server configuration controls how often they are collected. The default threshold is module. [link]

IMPROVEMENTS:

api: improved error returned from AllocFS.Logs when response is not JSON [link]
build: Update to go1.19.5 [link]
build: Update to go1.20 [link]
cli: Added module flag to module for use with module mode [link]
cli: Added tls command to enable creating Certificate Authority and Self signed TLS certificates.
There are two sub commands module and module that are helpers when creating certificates. [link]
client: detect and cleanup leaked iptables rules [link]
consul: add client configuration for grpc_ca_file [link]
deps: Update google.golang.org/grpc to v1.51.0 [link]
docs: link to an envoy troubleshooting doc when envoy bootstrap fails [link]
env/ec2: update cpu metadata [link]
fingerprint: Detect CNI plugins and set versions as node attributes [link]
scheduler: allow using device IDs in module and module [link]
ui: Add a button for expanding the Task sidebar to full width [link]
ui: Made task rows in Allocation tables look more aligned with their parent [link]
ui: Show events alongside logs in the Task sidebar [link]
ui: The web UI will now show canary_tags of services anyplace we would normally show tags. [link]

DEPRECATIONS:

api: The connect module field is deprecated in favor of module [link]
api: The connect module field is deprecated in favor of module [link]

BUG FIXES:

acl: Fixed a bug in token creation which failed to parse expiration TTLs correctly [link]
acl: Fixed a bug where creating/updating a policy which was invalid would return a 404 status code, not a 400 [link]
agent: Make agent syslog log level follow log_level config [link]
api: Added missing node states to NodeStatus constants [link]
api: Fix stale querystring parameter value as boolean [link]
api: Fixed a bug where exposeConfig field was not provided correctly when getting the jobs via the API [link]
api: Fixed a nil pointer dereference when periodic jobs are missing their periodic spec [link]
cgutil: handle panic coming from runc helper method [link]
check: Add support for sending custom host header [link]
cli: Fixed a bug where module would overwrite the file being checked [link]
cli: Fixed a panic in module when rollback deployments are slow to appear [link]
cli: corrected typos in ACL role create/delete CLI commands [link]
cli: fix nomad fmt -check flag not returning error code [link]
client: Fixed a bug where allocation cleanup hooks would not run [link]
connect: ingress http/2/grpc listeners may exclude hosts [link]
consul: Fixed a bug where acceptable service identity on Consul token was not accepted [link]
consul: Fixed a bug where consul token was not respected when reverting a job [link]
consul: Fixed a bug where services would continuously re-register when using ipv6 [link]
consul: correctly interpret missing consul checks as unhealthy [link]
core: enforce strict ordering that node status updates are recorded after allocation updates for reconnecting clients [link]
csi: Fixed a bug where a crashing plugin could panic the Nomad client [link]
csi: Fixed a bug where secrets that include '=' were incorrectly rejected [link]
csi: Fixed a bug where volumes in non-default namespaces could not be scheduled for system or sysbatch jobs [link]
csi: Fixed potential state store corruption when garbage collecting CSI volume claims or checking whether it's safe to force-deregister a volume [link]
docker: Fixed a bug where images referenced by multiple tags would not be GC'd [link]
docker: Fixed a bug where infra_image did not get alloc_id label [link]
docker: configure restart policy for bridge network pause container [link]
eval broker: Fixed a bug where the cancelable eval reaper used an incorrect lock when getting the set of cancelable evals from the broker [link]
event stream: Fixed a bug where undefined ACL policies on the request's ACL would result in incorrect authentication errors [link]
fix: Add the missing option propagation_mode for volume_mount [link]
parser: Fixed a panic in the job spec parser when a variable validation block was missing its condition [link]
scheduler (Enterprise): Fixed a bug that prevented new allocations from multiregion jobs to be placed in situations where other regions are not involved, such as node updates. [link]
services: Fixed a bug where check_restart on nomad services on tasks failed with incorrect CheckIDs [link]
template: Fixed a bug that caused the chage script to fail to run [link]
template: Fixed a bug where the template runner's Nomad token would be erased by in-place updates to a task [link]
ui: Fix allocation memory chart to display the same value as the CLI [link]
ui: Fix navigation to pages for jobs that are not in the default namespace [link]
ui: Fixed a bug where the exec window would not maintain namespace upon refresh [link]
ui: Scale down logger height in the UI when the sidebar container also has task events [link]
volumes: Fixed a bug where module was allowed for volume blocks on system and sysbatch jobs, which do not have an allocation index [link]
"
16,"1.3.10 (March 01, 2023)
BREAKING CHANGES:

core: Ensure no leakage of evaluations for batch jobs. Prior to this change allocations and evaluations for batch jobs were never garbage collected until the batch job was explicitly stopped. The new module server configuration controls how often they are collected. The default threshold is module. [link]

IMPROVEMENTS:

build: Update to go1.19.5 [link]
build: Update to go1.20 [link]
client: detect and cleanup leaked iptables rules [link]
consul: add client configuration for grpc_ca_file [link]
env/ec2: update cpu metadata [link]
fingerprint: Detect CNI plugins and set versions as node attributes [link]

DEPRECATIONS:

api: The connect module field is deprecated in favor of module [link]
api: The connect module field is deprecated in favor of module [link]

BUG FIXES:

acl: Fixed a bug where creating/updating a policy which was invalid would return a 404 status code, not a 400 [link]
agent: Make agent syslog log level follow log_level config [link]
api: Added missing node states to NodeStatus constants [link]
api: Fix stale querystring parameter value as boolean [link]
api: Fixed a bug where exposeConfig field was not provided correctly when getting the jobs via the API [link]
api: Fixed a nil pointer dereference when periodic jobs are missing their periodic spec [link]
cgutil: handle panic coming from runc helper method [link]
cli: Fixed a panic in module when rollback deployments are slow to appear [link]
connect: ingress http/2/grpc listeners may exclude hosts [link]
consul: Fixed a bug where acceptable service identity on Consul token was not accepted [link]
consul: Fixed a bug where consul token was not respected when reverting a job [link]
consul: Fixed a bug where services would continuously re-register when using ipv6 [link]
core: enforce strict ordering that node status updates are recorded after allocation updates for reconnecting clients [link]
csi: Fixed a bug where a crashing plugin could panic the Nomad client [link]
csi: Fixed a bug where secrets that include '=' were incorrectly rejected [link]
csi: Fixed a bug where volumes in non-default namespaces could not be scheduled for system or sysbatch jobs [link]
csi: Fixed potential state store corruption when garbage collecting CSI volume claims or checking whether it's safe to force-deregister a volume [link]
docker: Fixed a bug where images referenced by multiple tags would not be GC'd [link]
docker: Fixed a bug where infra_image did not get alloc_id label [link]
docker: configure restart policy for bridge network pause container [link]
event stream: Fixed a bug where undefined ACL policies on the request's ACL would result in incorrect authentication errors [link]
fix: Add the missing option propagation_mode for volume_mount [link]
parser: Fixed a panic in the job spec parser when a variable validation block was missing its condition [link]
scheduler (Enterprise): Fixed a bug that prevented new allocations from multiregion jobs to be placed in situations where other regions are not involved, such as node updates. [link]
template: Fixed a bug that caused the chage script to fail to run [link]
ui: Fix allocation memory chart to display the same value as the CLI [link]
ui: Fix navigation to pages for jobs that are not in the default namespace [link]
volumes: Fixed a bug where module was allowed for volume blocks on system and sysbatch jobs, which do not have an allocation index [link]
"
17,"FEATURES:

Dynamic Node Metadata: Allow users and tasks to update Node metadata via an API [link]
SSO via OIDC: Allow users to authenticate with Nomad via OIDC providers [link]

BREAKING CHANGES:

cli: The deprecated gossip keyring commands module, module, module, and module have been removed. Use the module commands to manage the gossip keyring [link]
config: the module field for agent configuration no longer accepts the module character as part of the datacenter name [link]
core: Ensure no leakage of evaluations for batch jobs. Prior to this change allocations and evaluations for batch jobs were never garbage collected until the batch job was explicitly stopped. The new module server configuration controls how often they are collected. The default threshold is module. [link]
metrics: The metric module has been renamed to module to reduce confusion with the module metric. [link]

SECURITY:

build: Update to go1.20.1 [link]

IMPROVEMENTS:

acl: refactor ACL cache based on golang-lru/v2 [link]
agent: Allow configurable range of Job priorities [link]
api: improved error returned from AllocFS.Logs when response is not JSON [link]
artifact: Provide mitigations against unbounded artifact decompression [link]
build: Added hyper-v isolation mode for docker on Windows [link]
build: Update to go1.20 [link]
cli: Add module and module flag to module command [link]
cli: Added module flag to module for use with module mode [link]
cli: Added sprig function support for module templates [link]
cli: Added tls command to enable creating Certificate Authority and Self signed TLS certificates.
There are two sub commands module and module that are helpers when creating certificates. [link]
cli: Warn when variable key includes characters that require the use of the module function in templates [link]
cli: module can be used to stop multiple jobs concurrently. [link]
cli: add a nomad operator client state command [link]
cli: multi-line module output, add BuildDate [link]
cli: we now recommend .nomad.hcl extension for job files, so module creates example.nomad.hcl [link]
client/fingerprint/storage: Added config options disk_total_mb and disk_free_mb to override detected disk space [link]
client: Add option to enable hairpinMode on Nomad bridge [link]
client: Added a TaskEvent when task shutdown is waiting on shutdown_delay [link]
client: Log task events at INFO log level [link]
client: added http api access for tasks via unix socket [link]
client: detect and cleanup leaked iptables rules [link]
client: execute artifact downloads in sandbox process [link]
consul/connect: Adds support for proxy upstream opaque config [link]
consul: add client configuration for grpc_ca_file [link]
core: Eliminate deprecated practice of seeding rand package [link]
core: Non-client nodes will now skip loading plugins [link]
csi: Added server configuration for module [link]
deps: Update github.com/containerd/containerd from 1.6.6 to 1.6.12 [link]
deps: Update github.com/docker/docker from 20.10.21+incompatible to 20.10.23+incompatible [link]
deps: Update github.com/fsouza/go-dockerclient from 1.8.2 to 1.9.0 [link]
deps: Update google.golang.org/grpc from 1.48.0 to 1.50.1 [link]
deps: Update google.golang.org/grpc to v1.51.0 [link]
docs: link to an envoy troubleshooting doc when envoy bootstrap fails [link]
env/ec2: update cpu metadata [link]
fingerprint: Detect CNI plugins and set versions as node attributes [link]
identity: Add identity jobspec block for exposing workload identity to tasks [link]
identity: Allow workloads to use RPCs associated with HTTP API [link]
jobspec: the module field now accepts wildcards [link]
metrics: Added metrics for rate of RPC requests [link]
scheduler: allow using device IDs in module and module [link]
server: Added raft snapshot arguments to server config [link]
server: Certain raft configuration elements can now be reloaded without restarting the server [link]
services: Set Nomad's User-Agent by default on HTTP checks in Nomad services [link]
ui, cli: Adds Job Templates to the ""Run Job"" Web UI and makes them accessible via new flags on nomad job init [link]
ui: Add a button for expanding the Task sidebar to full width [link]
ui: Added a Policy Editor interface for management tokens [link]
ui: Added a ui.label block to agent config, letting operators set a visual label and color for their Nomad instance [link]
ui: Made task rows in Allocation tables look more aligned with their parent [link]
ui: Show events alongside logs in the Task sidebar [link]
ui: The web UI now provides a Token Management interface for management users on policy pages [link]
ui: The web UI will now show canary_tags of services anyplace we would normally show tags. [link]
ui: Warn when variable key includes characters that require the use of the module function in templates [link]
ui: give users a notification if their token is going to expire within the next 10 minutes [link]
ui: redirect users to Sign In should their tokens ever come back expired or not-found [link]
users: Added a cache for OS user lookups [link]
variables: Increased maximum size to 64KiB [link]
vault: configure Nomad User-Agent on vault clients [link]
volumes: Allow module to be used with host_volumes [link]

DEPRECATIONS:

api: Deprecated ErrVariableNotFound in favor of ErrVariablePathNotFound to correctly represent an error type [link]
api: Deprecated Variables.GetItems in favor of Variables.GetVariableItems to avoid returning a pointer to a map [link]
api: The connect module field is deprecated in favor of module [link]
api: The connect module field is deprecated in favor of module [link]

BUG FIXES:

acl: Fixed a bug in token creation which failed to parse expiration TTLs correctly [link]
acl: Fixed a bug where creating/updating a policy which was invalid would return a 404 status code, not a 400 [link]
agent: Make agent syslog log level follow log_level config [link]
api: Added missing node states to NodeStatus constants [link]
api: Fix stale querystring parameter value as boolean [link]
api: Fixed a bug where Variables.GetItems would panic if variable did not exist [link]
api: Fixed a bug where exposeConfig field was not provided correctly when getting the jobs via the API [link]
api: Fixed a nil pointer dereference when periodic jobs are missing their periodic spec [link]
cgutil: handle panic coming from runc helper method [link]
check: Add support for sending custom host header [link]
cli: Fix unbolded header module [link]
cli: Fixed a bug where module would overwrite the file being checked [link]
cli: Fixed a bug where plans for periodic jobs would return exit code 1 when the job was already register [link]
cli: Fixed a panic in module when rollback deployments are slow to appear [link]
cli: module: when second arg is an @-reference, check extension for format [link]
cli: corrected typos in ACL role create/delete CLI commands [link]
cli: fix nomad fmt -check flag not returning error code [link]
client: Fixed a bug where allocation cleanup hooks would not run [link]
connect: ingress http/2/grpc listeners may exclude hosts [link]
consul: Fixed a bug where acceptable service identity on Consul token was not accepted [link]
consul: Fixed a bug where consul token was not respected when reverting a job [link]
consul: Fixed a bug where services would continuously re-register when using ipv6 [link]
consul: correctly interpret missing consul checks as unhealthy [link]
core: enforce strict ordering that node status updates are recorded after allocation updates for reconnecting clients [link]
csi: Fixed a bug where a crashing plugin could panic the Nomad client [link]
csi: Fixed a bug where secrets that include '=' were incorrectly rejected [link]
csi: Fixed a bug where volumes in non-default namespaces could not be scheduled for system or sysbatch jobs [link]
csi: Fixed potential state store corruption when garbage collecting CSI volume claims or checking whether it's safe to force-deregister a volume [link]
docker: Fixed a bug where images referenced by multiple tags would not be GC'd [link]
docker: Fixed a bug where infra_image did not get alloc_id label [link]
docker: configure restart policy for bridge network pause container [link]
docker: disable driver when running as non-root on cgv2 hosts [link]
eval broker: Fixed a bug where the cancelable eval reaper used an incorrect lock when getting the set of cancelable evals from the broker [link]
event stream: Fixed a bug where undefined ACL policies on the request's ACL would result in incorrect authentication errors [link]
fix: Add the missing option propagation_mode for volume_mount [link]
parser: Fixed a panic in the job spec parser when a variable validation block was missing its condition [link]
scheduler (Enterprise): Fixed a bug that prevented new allocations from multiregion jobs to be placed in situations where other regions are not involved, such as node updates. [link]
server: Fixed a bug where rejoin_after_leave config was not being respected [link]
services: Fixed a bug where check_restart on nomad services on tasks failed with incorrect CheckIDs [link]
services: Fixed a bug where services would fail to register if task initially fails [link]
template: Fixed a bug that caused the chage script to fail to run [link]
template: Fixed a bug where the template runner's Nomad token would be erased by in-place updates to a task [link]
ui: Fix allocation memory chart to display the same value as the CLI [link]
ui: Fix navigation to pages for jobs that are not in the default namespace [link]
ui: Fixed a bug where the exec window would not maintain namespace upon refresh [link]
ui: Scale down logger height in the UI when the sidebar container also has task events [link]
volumes: Fixed a bug where module was allowed for volume blocks on system and sysbatch jobs, which do not have an allocation index [link]
"
18,"1.4.4 (February 14, 2023)
SECURITY:

artifact: Provide mitigations against unbounded artifact decompression [link]
build: Update to go1.20.1 [link]
"
19,"1.3.9 (February 14, 2023)
SECURITY:

artifact: Provide mitigations against unbounded artifact decompression [link]
build: Update to go1.20.1 [link]
"
20,"1.2.16 (February 14, 2023)
SECURITY:

artifact: Provide mitigations against unbounded artifact decompression [link]
build: Update to go1.20.1 [link]
"
21,"1.5.0 (Unreleased)
FEATURES:

Dynamic Node Metadata: Allow users and tasks to update Node metadata via an API [link]
SSO via OIDC: Allow users to authenticate with Nomad via OIDC providers [link]

BREAKING CHANGES:

cli: The deprecated gossip keyring commands module, module, module, and module have been removed. Use the module commands to manage the gossip keyring [link]
config: the module field for agent configuration no longer accepts the module character as part of the datacenter name [link]
core: Ensure no leakage of evaluations for batch jobs. Prior to this change allocations and evaluations for batch jobs were never garbage collected until the batch job was explicitly stopped. The new module server configuration controls how often they are collected. The default threshold is module. [link]
metrics: The metric module has been renamed to module to reduce confusion with the module metric. [link]

IMPROVEMENTS:

api: improved error returned from AllocFS.Logs when response is not JSON [link]
build: Added hyper-v isolation mode for docker on Windows [link]
build: Update to go1.20 [link]
cli: Add module and module flag to module command [link]
cli: Added module flag to module for use with module mode [link]
cli: Added sprig function support for module templates [link]
cli: Added tls command to enable creating Certificate Authority and Self signed TLS certificates.
There are two sub commands module and module that are helpers when creating certificates. [link]
cli: module can be used to stop multiple jobs concurrently. [link]
cli: add a nomad operator client state command [link]
cli: we now recommend .nomad.hcl extension for job files, so module creates example.nomad.hcl [link]
client/fingerprint/storage: Added config options disk_total_mb and disk_free_mb to override detected disk space [link]
client: Add option to enable hairpinMode on Nomad bridge [link]
client: Added a TaskEvent when task shutdown is waiting on shutdown_delay [link]
client: Log task events at INFO log level [link]
client: added http api access for tasks via unix socket [link]
client: detect and cleanup leaked iptables rules [link]
client: execute artifact downloads in sandbox process [link]
consul/connect: Adds support for proxy upstream opaque config [link]
consul: add client configuration for grpc_ca_file [link]
core: Eliminate deprecated practice of seeding rand package [link]
deps: Update github.com/containerd/containerd from 1.6.6 to 1.6.12 [link]
deps: Update github.com/docker/docker from 20.10.21+incompatible to 20.10.23+incompatible [link]
deps: Update github.com/fsouza/go-dockerclient from 1.8.2 to 1.9.0 [link]
deps: Update google.golang.org/grpc from 1.48.0 to 1.50.1 [link]
deps: Update google.golang.org/grpc to v1.51.0 [link]
docs: link to an envoy troubleshooting doc when envoy bootstrap fails [link]
env/ec2: update cpu metadata [link]
fingerprint: Detect CNI plugins and set versions as node attributes [link]
identity: Add identity jobspec block for exposing workload identity to tasks [link]
identity: Allow workloads to use RPCs associated with HTTP API [link]
jobspec: the module field now accepts wildcards [link]
metrics: Added metrics for rate of RPC requests [link]
scheduler: allow using device IDs in module and module [link]
server: Added raft snapshot arguments to server config [link]
server: Certain raft configuration elements can now be reloaded without restarting the server [link]
ui, cli: Adds Job Templates to the ""Run Job"" Web UI and makes them accessible via new flags on nomad job init [link]
ui: Add a button for expanding the Task sidebar to full width [link]
ui: Added a Policy Editor interface for management tokens [link]
ui: Added a ui.label block to agent config, letting operators set a visual label and color for their Nomad instance [link]
ui: Made task rows in Allocation tables look more aligned with their parent [link]
ui: Show events alongside logs in the Task sidebar [link]
ui: The web UI now provides a Token Management interface for management users on policy pages [link]
ui: The web UI will now show canary_tags of services anyplace we would normally show tags. [link]
ui: give users a notification if their token is going to expire within the next 10 minutes [link]
ui: redirect users to Sign In should their tokens ever come back expired or not-found [link]
variables: Increased maximum size to 64KiB [link]
vault: configure Nomad User-Agent on vault clients [link]
volumes: Allow module to be used with host_volumes [link]

DEPRECATIONS:

api: The connect module field is deprecated in favor of module [link]
api: The connect module field is deprecated in favor of module [link]

BUG FIXES:

acl: Fixed a bug in token creation which failed to parse expiration TTLs correctly [link]
acl: Fixed a bug where creating/updating a policy which was invalid would return a 404 status code, not a 400 [link]
agent: Make agent syslog log level follow log_level config [link]
api: Fix stale querystring parameter value as boolean [link]
api: Fixed a bug where exposeConfig field was not provided correctly when getting the jobs via the API [link]
api: Fixed a nil pointer dereference when periodic jobs are missing their periodic spec [link]
check: Add support for sending custom host header [link]
cli: Fixed a bug where plans for periodic jobs would return exit code 1 when the job was already register [link]
cli: Fixed a panic in module when rollback deployments are slow to appear [link]
cli: corrected typos in ACL role create/delete CLI commands [link]
cli: fix nomad fmt -check flag not returning error code [link]
client: Fixed a bug where allocation cleanup hooks would not run [link]
connect: ingress http/2/grpc listeners may exclude hosts [link]
consul: Fixed a bug where acceptable service identity on Consul token was not accepted [link]
consul: Fixed a bug where consul token was not respected when reverting a job [link]
consul: Fixed a bug where services would continuously re-register when using ipv6 [link]
consul: correctly interpret missing consul checks as unhealthy [link]
core: enforce strict ordering that node status updates are recorded after allocation updates for reconnecting clients [link]
csi: Fixed a bug where a crashing plugin could panic the Nomad client [link]
csi: Fixed a bug where secrets that include '=' were incorrectly rejected [link]
csi: Fixed a bug where volumes in non-default namespaces could not be scheduled for system or sysbatch jobs [link]
docker: Fixed a bug where images referenced by multiple tags would not be GC'd [link]
docker: Fixed a bug where infra_image did not get alloc_id label [link]
docker: configure restart policy for bridge network pause container [link]
docker: disable driver when running as non-root on cgv2 hosts [link]
fix: Add the missing option propagation_mode for volume_mount [link]
parser: Fixed a panic in the job spec parser when a variable validation block was missing its condition [link]
scheduler (Enterprise): Fixed a bug that prevented new allocations from multiregion jobs to be placed in situations where other regions are not involved, such as node updates. [link]
server: Fixed a bug where rejoin_after_leave config was not being respected [link]
services: Fixed a bug where services would fail to register if task initially fails [link]
template: Fixed a bug that caused the chage script to fail to run [link]
ui: Fix allocation memory chart to display the same value as the CLI [link]
ui: Fix navigation to pages for jobs that are not in the default namespace [link]
ui: Fixed a bug where the exec window would not maintain namespace upon refresh [link]
ui: Scale down logger height in the UI when the sidebar container also has task events [link]
volumes: Fixed a bug where module was allowed for volume blocks on system and sysbatch jobs, which do not have an allocation index [link]
"
22,"1.4.3 (November 21, 2022)
IMPROVEMENTS:

api: Added an API for counting evaluations that match a filter [link]
cli: Improved performance of eval delete with large filter sets [link]
consul: add trace logging around service registrations [link]
deps: Updated github.com/aws/aws-sdk-go from 1.44.84 to 1.44.126 [link]
deps: Updated github.com/docker/cli from 20.10.18+incompatible to 20.10.21+incompatible [link]
exec: Allow running commands from mounted host volumes [link]
scheduler: when multiple evaluations are pending for the same job, evaluate the latest and cancel the intermediaries on success [link]
server: Add a git module tag to the serf tags gossiped between servers. [link]
template: Expose per-template configuration for module. This allows jobspec authors to specify that a
template should fail if it references a struct or map key that does not exist. The default value is false and should be
fully backward compatible. [link]
ui: Adds a ""Pack"" tag and logo on the jobs list index when appropriate [link]
ui: add consul connect service upstream and on-update info to the service sidebar [link]
ui: allow users to upload files by click or drag in the web ui [link]

BUG FIXES:

api: Ensure all request body decode errors return a 400 status code [link]
autopilot: Fixed a bug where autopilot would try to fetch raft stats from other regions [link]
cleanup: fixed missing timer.Reset for plan queue stat emitter [link]
client: Fixed a bug where tasks would restart without waiting for interval [link]
client: fixed a bug where non-module tasks with network isolation would leak network namespaces and iptables rules if the client was restarted while they were running [link]
client: prevent allocations from failing on client reconnect by retrying RPC requests when no servers are available yet [link]
csi: Fixed race condition that can cause a panic when volume is garbage collected [link]
device: Fixed a bug where device plugins would not fingerprint on startup [link]
drivers: Fixed a bug where one goroutine was leaked per task [link]
drivers: pass missing module configuration for volume mounts to external plugins [link]
event_stream: fixed a bug where dynamic port values would fail to serialize in the event stream [link]
fingerprint: Ensure Nomad can correctly fingerprint Consul gRPC where the Consul agent is running v1.14.0 or greater [link]
keyring: Fixed a bug where a missing key would prevent any further replication. [link]
keyring: Fixed a bug where replication would stop after snapshot restores [link]
keyring: Re-enabled keyring garbage collection after fixing a bug where keys would be garbage collected even if they were used to sign a live allocation's workload identity. [link]
scheduler: Fixed a bug that prevented disconnected allocations to be updated after they reconnect. [link]
scheduler: Prevent unnecessary placements when disconnected allocations reconnect. [link]
template: Fixed a bug where template could cause agent panic on startup [link]
ui: Fixed a bug where the task log sidebar would close and re-open if the parent job state changed [link]
variables: Fixed a bug where a long-running rekey could hit the nack timeout [link]
wi: Fixed a bug where clients running pre-1.4.0 allocations would erase the token used to query service registrations after upgrade [link]
"
23,"1.3.8 (November 21, 2022)
BUG FIXES:

api: Ensure all request body decode errors return a 400 status code [link]
cleanup: fixed missing timer.Reset for plan queue stat emitter [link]
client: Fixed a bug where tasks would restart without waiting for interval [link]
client: fixed a bug where non-module tasks with network isolation would leak network namespaces and iptables rules if the client was restarted while they were running [link]
client: prevent allocations from failing on client reconnect by retrying RPC requests when no servers are available yet [link]
csi: Fixed race condition that can cause a panic when volume is garbage collected [link]
device: Fixed a bug where device plugins would not fingerprint on startup [link]
drivers: Fixed a bug where one goroutine was leaked per task [link]
drivers: pass missing module configuration for volume mounts to external plugins [link]
event_stream: fixed a bug where dynamic port values would fail to serialize in the event stream [link]
fingerprint: Ensure Nomad can correctly fingerprint Consul gRPC where the Consul agent is running v1.14.0 or greater [link]
scheduler: Fixed a bug that prevented disconnected allocations to be updated after they reconnect. [link]
scheduler: Prevent unnecessary placements when disconnected allocations reconnect. [link]
template: Fixed a bug where template could cause agent panic on startup [link]
"
24,"1.2.15 (November 21, 2022)
BUG FIXES:

api: Ensure all request body decode errors return a 400 status code [link]
cleanup: fixed missing timer.Reset for plan queue stat emitter [link]
client: Fixed a bug where tasks would restart without waiting for interval [link]
client: fixed a bug where non-module tasks with network isolation would leak network namespaces and iptables rules if the client was restarted while they were running [link]
csi: Fixed race condition that can cause a panic when volume is garbage collected [link]
device: Fixed a bug where device plugins would not fingerprint on startup [link]
drivers: Fixed a bug where one goroutine was leaked per task [link]
drivers: pass missing module configuration for volume mounts to external plugins [link]
event_stream: fixed a bug where dynamic port values would fail to serialize in the event stream [link]
fingerprint: Ensure Nomad can correctly fingerprint Consul gRPC where the Consul agent is running v1.14.0 or greater [link]
"
25,"1.4.2 (October 26, 2022)
SECURITY:

event stream: Fixed a bug where ACL token expiration was not checked when emitting events [link]

IMPROVEMENTS:

cli: Added module option to module [link]
cli: add nomad fmt to the CLI [link]
deps: update go-memdb for goroutine leak fix [link]
docker: improve memory usage for docker_logger [link]
event stream: Added ACL role topic with create and delete types [link]
scheduler: Allow jobs not requiring network resources even when no network is fingerprinted [link]
ui: adds searching and filtering to the topology page [link]

BUG FIXES:

acl: Callers should be able to read policies linked via roles to the token used [link]
acl: Ensure all federated servers meet v.1.4.0 minimum before ACL roles can be written [link]
acl: Fixed a bug where Nomad version checking for one-time tokens was enforced across regions [link]
cli: prevent a panic when the Nomad API returns an error while collecting a debug bundle [link]
client: Check ACL token expiry when resolving token within ACL cache [link]
client: Fixed a bug where Nomad could not detect cores on recent RHEL systems [link]
client: Fixed a bug where network fingerprinters were not reloaded when the client configuration was reloaded with SIGHUP [link]
client: Resolve ACL roles within client ACL cache [link]
consul: Fixed a bug where services continuously re-registered [link]
consul: atomically register checks on initial service registration [link]
deps: Update hashicorp/consul-template to 90370e07bf621811826b803fb633dadbfb4cf287; fixes template rerendering issues when only user or group set [link]
deps: Update hashicorp/raft to v1.3.11; fixes unstable leadership on server removal [link]
event stream: Check ACL token expiry when resolving tokens [link]
event stream: Resolve ACL roles within ACL tokens [link]
keyring: Fixed a bug where module forced a root keyring rotation. [link]
keyring: Fixed a bug where if a key is rotated immediately following a leader election, plans that are in-flight may get signed before the new leader has the key. Allow for a short timeout-and-retry to avoid rejecting plans. [link]
keyring: Fixed a bug where keyring initialization is blocked by un-upgraded federated regions [link]
keyring: Fixed a bug where root keyring garbage collection configuration values were not respected. [link]
keyring: Fixed a bug where root keyring initialization could occur before the raft FSM on the leader was verified to be up-to-date. [link]
keyring: Fixed a bug where root keyring replication could make incorrectly stale queries and exit early if those queries did not return the expected key. [link]
keyring: Fixed a bug where the root keyring replicator's rate limiting would be skipped if the keyring replication exceeded the burst rate. [link]
keyring: Removed root key garbage collection to avoid orphaned workload identities [link]
nomad native service discovery: Ensure all local servers meet v.1.3.0 minimum before service registrations can be written [link]
scheduler: Fixed a bug where version checking for disconnected clients handling was enforced across regions [link]
servicedisco: Fixed a bug where job using checks could land on incompatible client [link]
services: Fixed a regression where check task validation stopped allowing some configurations [link]
ui: Fixed line charts to update x-axis (time) where relevant [link]
ui: Fixes an issue where service tags would bleed past the edge of the screen [link]
variables: Fixed a bug where Nomad version checking was not enforced for writing to variables [link]
"
26,"1.3.7 (October 26, 2022)
IMPROVEMENTS:

deps: update go-memdb for goroutine leak fix [link]
docker: improve memory usage for docker_logger [link]

BUG FIXES:

acl: Fixed a bug where Nomad version checking for one-time tokens was enforced across regions [link]
client: Fixed a bug where Nomad could not detect cores on recent RHEL systems [link]
consul: Fixed a bug where services continuously re-registered [link]
consul: atomically register checks on initial service registration [link]
deps: Update hashicorp/raft to v1.3.11; fixes unstable leadership on server removal [link]
nomad native service discovery: Ensure all local servers meet v.1.3.0 minimum before service registrations can be written [link]
scheduler: Fixed a bug where version checking for disconnected clients handling was enforced across regions [link]
"
27,"1.2.14 (October 26, 2022)
IMPROVEMENTS:

deps: update go-memdb for goroutine leak fix [link]

BUG FIXES:

acl: Fixed a bug where Nomad version checking for one-time tokens was enforced across regions [link]
deps: Update hashicorp/raft to v1.3.11; fixes unstable leadership on server removal [link]
"
28,"1.4.1 (October 06, 2022)
BUG FIXES:

keyring: Fixed a panic that can occur during upgrades to 1.4.0 when initializing the keyring [link]
"
29,"1.4.0 (October 04, 2022)
FEATURES:

ACL Roles: Added support for ACL Roles. [link]
Nomad Native Service Discovery: Add built-in support for checks on Nomad services [link]
Variables: Added support for storing encrypted configuration values. [link]
UI Services table: Display task-level services in addition to group-level services. [link]

BREAKING CHANGES:

audit (Enterprise): fixed inconsistency in event filter logic [link]
cli: module no longer supports listing all evals in JSON. Use module. [link]
core: remove support for raft protocol version 2 [link]

SECURITY:

client: recover from panics caused by artifact download to prevent the Nomad client from crashing [link]

IMPROVEMENTS:

acl: ACL tokens can now be created with an expiration TTL. [link]
api: return a more descriptive error when /v1/acl/bootstrap fails to decode request body [link]
autopilot: upgrade to raft-autopilot library [link]
cli: Removed deprecated network quota fields from module output [link]
cli: module output format has changed to improve readability with large policy documents [link]
cli: module now writes newline-delimited JSON files for large collections [link]
cli: ignore module when -hcl1 is set. [link]
cli: warn destructive update only when count is greater than 1 [link]
client: Add built-in support for checks on nomad services [link]
client: re-enable nss-based user lookups [link]
connect: add namespace, job, and group to Envoy stats [link]
connect: add nomad environment variables to envoy bootstrap [link]
consul: Allow interpolation of task environment values into Consul Service Mesh configuration [link]
consul: Enable setting custom tagged_addresses field [link]
core: constraint operands are now compared numerically if operands are numbers [link]
deps: Update fsouza/go-dockerclient to v1.8.2 [link]
deps: Update go.etcd.io/bbolt to v1.3.6 [link]
deps: Update google.golang.org/grpc to v1.48.0 [link]
deps: Update gopsutil for improvements in fingerprinting on non-Linux platforms [link]
deps: Updated module to module which includes a performance improvement for Prometheus sink [link]
deps: Updated module to module [link]
deps: remove unused darwin C library [link]
fingerprint: Add node attribute for number of reservable cores: module [link]
fingerprint: Consul and Vault attributes are no longer cleared on fingerprinting failure [link]
jobspec: Added module HCL2 function to determine the length of a string [link]
server: Log when a node's eligibility changes [link]
ui: Display different message when trying to exec into a job with no task running. [link]
ui: add service discovery, along with health checks, to job and allocation routes [link]
ui: adds a sidebar to show in-page logs for a given task, accessible via job, client, or task group routes [link]
ui: allow deep-dive clicks to tasks from client, job, and task group routes. [link]
ui: attach timestamps and a visual indicator on failure to health checks in the Web UI [link]

BUG FIXES:

api: Fixed a bug where the List Volume API did not include the module and module fields. [link]
cli: Ignore Vault token when generating job diff. [link]
cli: fixed a bug in the module command where the HTTPS scheme was not always correctly calculated [link]
cli: return exit code module when module fails job validation. [link]
cli: set content length on POST requests when using the module command [link]
client: Fixed bug where clients could attempt to connect to servers with invalid addresses retrieved from Consul. [link]
core: prevent new allocations from overlapping execution with stopping allocations [link]
csi: Fixed a bug where a volume that was successfully unmounted by the client but then failed controller unpublishing would not be marked free until garbage collection ran. [link]
csi: Fixed a bug where the server would not send controller unpublish for a failed allocation. [link]
csi: Fixed a data race in the volume unpublish endpoint that could result in claims being incorrectly marked as freed before being persisted to raft. [link]
helpers: Fixed a bug where random stagger func did not protect against negative inputs [link]
jobspec: Fixed a bug where an module with module configuration would fail to parse when using HCLv1 [link]
metrics: Update client module value with server heartbeats. [link]
quotas (Enterprise): Fixed a server crashing panic when updating and checking a quota concurrently.
rpc (Enterprise): check for spec changes in all regions when registering multiregion jobs [link]
scheduler (Enterprise): Fixed bug where the scheduler would treat multiregion jobs as paused for job types that don't use deployments [link]
template: Fixed a bug where the module timeout was not being applied when module was set to module. [link]
ui: Remove extra space when displaying the version in the menu footer. [link]
"
30,"1.3.6 (October 04, 2022)
SECURITY:

client: recover from panics caused by artifact download to prevent the Nomad client from crashing [link]

IMPROVEMENTS:

api: return a more descriptive error when /v1/acl/bootstrap fails to decode request body [link]
cli: ignore module when -hcl1 is set. [link]
cli: warn destructive update only when count is greater than 1 [link]
consul: Allow interpolation of task environment values into Consul Service Mesh configuration [link]
ui: Display different message when trying to exec into a job with no task running. [link]

BUG FIXES:

api: Fixed a bug where the List Volume API did not include the module and module fields. [link]
cli: Ignore Vault token when generating job diff. [link]
cli: fixed a bug in the module command where the HTTPS scheme was not always correctly calculated [link]
cli: return exit code module when module fails job validation. [link]
cli: set content length on POST requests when using the module command [link]
client: Fixed bug where clients could attempt to connect to servers with invalid addresses retrieved from Consul. [link]
csi: Fixed a bug where a volume that was successfully unmounted by the client but then failed controller unpublishing would not be marked free until garbage collection ran. [link]
csi: Fixed a bug where the server would not send controller unpublish for a failed allocation. [link]
csi: Fixed a data race in the volume unpublish endpoint that could result in claims being incorrectly marked as freed before being persisted to raft. [link]
helpers: Fixed a bug where random stagger func did not protect against negative inputs [link]
jobspec: Fixed a bug where an module with module configuration would fail to parse when using HCLv1 [link]
metrics: Update client module value with server heartbeats. [link]
quotas (Enterprise): Fixed a server crashing panic when updating and checking a quota concurrently.
rpc: check for spec changes in all regions when registering multiregion jobs [link]
scheduler: Fixed bug where the scheduler would treat multiregion jobs as paused for job types that don't use deployments [link]
template: Fixed a bug where the module timeout was not being applied when module was set to module. [link]
ui: Remove extra space when displaying the version in the menu footer. [link]
"
31,"1.2.13 (October 04, 2022)
SECURITY:

client: recover from panics caused by artifact download to prevent the Nomad client from crashing [link]

BUG FIXES:

api: Fixed a bug where the List Volume API did not include the module and module fields. [link]
client: Fixed bug where clients could attempt to connect to servers with invalid addresses retrieved from Consul. [link]
csi: Fixed a bug where a volume that was successfully unmounted by the client but then failed controller unpublishing would not be marked free until garbage collection ran. [link]
csi: Fixed a bug where the server would not send controller unpublish for a failed allocation. [link]
csi: Fixed a bug where volume claims on lost or garbage collected nodes could not be freed [link]
csi: Fixed a data race in the volume unpublish endpoint that could result in claims being incorrectly marked as freed before being persisted to raft. [link]
jobspec: Fixed a bug where an module with module configuration would fail to parse when using HCLv1 [link]
metrics: Update client module value with server heartbeats. [link]
quotas (Enterprise): Fixed a server crashing panic when updating and checking a quota concurrently.
rpc: check for spec changes in all regions when registering multiregion jobs [link]
"
32,"1.4.0 (Unreleased)
FEATURES:

ACL Roles: Added support for ACL Roles. [link]
Nomad Native Service Discovery: Add built-in support for checks on Nomad services [link]
Variables: Added support for storing encrypted configuration values. [link]
UI Services table: Display task-level services in addition to group-level services. [link]

BREAKING CHANGES:

audit (Enterprise): fixed inconsistency in event filter logic [link]
core: remove support for raft protocol version 2 [link]
cli: module no longer supports listing all evals in JSON. Use module. [link]

SECURITY:

client: recover from panics caused by artifact download to prevent the Nomad client from crashing [link]

IMPROVEMENTS:

acl: ACL tokens can now be created with an expiration TTL. [link]
api: return a more descriptive error when /v1/acl/bootstrap fails to decode request body [link]
autopilot: upgrade to raft-autopilot library [link]
build: Update go toolchain to 1.19 [link]
cli: Removed deprecated network quota fields from module output [link]
cli: module output format has changed to improve readability with large policy documents [link]
cli: module now writes newline-delimited JSON files for large collections [link]
cli: ignore module when -hcl1 is set. [link]
cli: warn destructive update only when count is greater than 1 [link]
client: Add built-in support for checks on nomad services [link]
connect: add namespace, job, and group to Envoy stats [link]
connect: add nomad environment variables to envoy bootstrap [link]
consul: Allow interpolation of task environment values into Consul Service Mesh configuration [link]
consul: Enable setting custom tagged_addresses field [link]
core: constraint operands are now compared numerically if operands are numbers [link]
deps: Update fsouza/go-dockerclient to v1.8.2 [link]
deps: Update go.etcd.io/bbolt to v1.3.6 [link]
deps: Update google.golang.org/grpc to v1.48.0 [link]
deps: Update gopsutil for improvements in fingerprinting on non-Linux platforms [link]
deps: Updated module to module which includes a performance improvement for Prometheus sink [link]
deps: Updated module to module [link]
deps: remove unused darwin C library [link]
fingerprint: Add node attribute for number of reservable cores: module [link]
fingerprint: Consul and Vault attributes are no longer cleared on fingerprinting failure [link]
jobspec: Added module HCL2 function to determine the length of a string [link]
server: Log when a node's eligibility changes [link]
ui: Display different message when trying to exec into a job with no task running. [link]
ui: add service discovery, along with health checks, to job and allocation routes [link]
ui: adds a sidebar to show in-page logs for a given task, accessible via job, client, or task group routes [link]
ui: allow deep-dive clicks to tasks from client, job, and task group routes. [link]
ui: attach timestamps and a visual indicator on failure to health checks in the Web UI [link]

BUG FIXES:

api: Fixed a bug where the List Volume API did not include the module and module fields. [link]
cli: Ignore Vault token when generating job diff. [link]
cli: fixed a bug in the module command where the HTTPS scheme was not always correctly calculated [link]
cli: return exit code module when module fails job validation. [link]
cli: set content length on POST requests when using the module command [link]
client: Fixed bug where clients could attempt to connect to servers with invalid addresses retrieved from Consul. [link]
core: prevent new allocations from overlapping execution with stopping allocations [link]
csi: Fixed a bug where a volume that was successfully unmounted by the client but then failed controller unpublishing would not be marked free until garbage collection ran. [link]
csi: Fixed a bug where the server would not send controller unpublish for a failed allocation. [link]
csi: Fixed a data race in the volume unpublish endpoint that could result in claims being incorrectly marked as freed before being persisted to raft. [link]
helpers: Fixed a bug where random stagger func did not protect against negative inputs [link]
jobspec: Fixed a bug where an module with module configuration would fail to parse when using HCLv1 [link]
metrics: Update client module value with server heartbeats. [link]
quotas (Enterprise): Fixed a server crashing panic when updating and checking a quota concurrently.
rpc (Enterprise): check for spec changes in all regions when registering multiregion jobs [link]
scheduler (Enterprise): Fixed bug where the scheduler would treat multiregion jobs as paused for job types that don't use deployments [link]
ui: Remove extra space when displaying the version in the menu footer. [link]
"
33,"1.4.0 (Unreleased)
FEATURES:

ACL Roles: Added support for ACL Roles. [link]
Nomad Native Service Discovery: Add built-in support for checks on Nomad services [link]
Variables: Added support for storing encrypted configuration values. [link]
UI Services table: Display task-level services in addition to group-level services. [link]

BREAKING CHANGES:

audit (Enterprise): fixed inconsistency in event filter logic [link]
core: remove support for raft protocol version 2 [link]

IMPROVEMENTS:

acl: ACL tokens can now be created with an expiration TTL. [link]
autopilot: upgrade to raft-autopilot library [link]
build: Update go toolchain to 1.19 [link]
cli: Removed deprecated network quota fields from module output [link]
cli: module output format has changed to improve readability with large policy documents [link]
cli: ignore module when -hcl1 is set. [link]
cli: warn destructive update only when count is greater than 1 [link]
client: Add built-in support for checks on nomad services [link]
consul: Allow interpolation of task environment values into Consul Service Mesh configuration [link]
consul: Enable setting custom tagged_addresses field [link]
deps: Update fsouza/go-dockerclient to v1.8.2 [link]
deps: Update go.etcd.io/bbolt to v1.3.6 [link]
deps: Update google.golang.org/grpc to v1.48.0 [link]
deps: Update gopsutil for improvements in fingerprinting on non-Linux platforms [link]
deps: Updated module to module which includes a performance improvement for Prometheus sink [link]
deps: Updated module to module [link]
deps: remove unused darwin C library [link]
jobspec: Added module HCL2 function to determine the length of a string [link]
server: Log when a node's eligibility changes [link]
ui: Display different message when trying to exec into a job with no task running. [link]
ui: add service discovery, along with health checks, to job and allocation routes [link]
ui: added visual regression tests for top-level UI routes [link]

BUG FIXES:

api: Fixed a bug where the List Volume API did not include the module and module fields. [link]
cli: Ignore Vault token when generating job diff. [link]
cli: return exit code module when module fails job validation. [link]
client: Fixed bug where clients could attempt to connect to servers with invalid addresses retrieved from Consul. [link]
core: prevent new allocations from overlapping execution with stopping allocations [link]
csi: Fixed a bug where the server would not send controller unpublish for a failed allocation. [link]
csi: Fixed a data race in the volume unpublish endpoint that could result in claims being incorrectly marked as freed before being persisted to raft. [link]
helpers: Fixed a bug where random stagger func did not protect against negative inputs [link]
metrics: Update client module value with server heartbeats. [link]
quotas (Enterprise): Fixed a server crashing panic when updating and checking a quota concurrently.
rpc: check for spec changes in all regions when registering multiregion jobs [link]
ui: Remove extra space when displaying the version in the menu footer. [link]
ui: Stabilizes visual regression tests [link]
ui: when creating a secure variable, check against your namespaces rather than assuming default [link]
"
34,"1.3.5 (August 31, 2022)
IMPROVEMENTS:

cgroups: use cgroup.kill interface file when using cgroups v2 [link]
consul: Reduce load on Consul leader server by allowing stale results when listing namespaces. [link]

BUG FIXES:

cli: Fixed a bug where forcing a periodic job would fail if the job ID prefix-matched other periodic jobs [link]
template: Fixed a bug that could cause Nomad to panic when using module [link]
ui: Revert a change that resulted in UI errors when ACLs were not used. [link]
"
35,"1.2.12 (August 31, 2022)
IMPROVEMENTS:

consul: Reduce load on Consul leader server by allowing stale results when listing namespaces. [link]

BUG FIXES:

cli: Fixed a bug where forcing a periodic job would fail if the job ID prefix-matched other periodic jobs [link]
"
36,"1.1.18 (August 31, 2022)
BUG FIXES:

cli: Fixed a bug where forcing a periodic job would fail if the job ID prefix-matched other periodic jobs [link]
"
37,"1.3.4 (August 25, 2022)
IMPROVEMENTS:

api: HTTP server now returns a 429 error code when hitting the connection limit [link]
build: update to go1.19 [link]
cli: module now outputs current leader to debug bundle [link]
cli: module supports module expressions and avoids writing large temporary files [link]
client: add option to restart all tasks of an allocation, regardless of lifecycle type or state. [link]
client: only start poststop tasks after poststart tasks are done. [link]
deps: Updated module to latest to allow setting the AWS endpoint definition [link]
driver/docker: Added config option to disable container healthcheck [link]
qemu: Added option to configure module [link]
sentinel: add the ability to reference the namespace and Nomad acl token in policies [link]
template: add script change_mode that allows scripts to be executed on template change [link]
ui: Add button to restart all tasks in an allocation. [link]
ui: add general keyboard navigation to the Nomad UI [link]

BUG FIXES:

api: cleanup whitespace from failed api response body [link]
cli: Fixed a bug where job validation requeset was not sent to leader [link]
cli: Fixed a bug where the memory usage reported by Allocation Resource Utilization is zero on systems using cgroups v2 [link]
cli: Fixed a bug where vault token not respected in plan command [link]
client/logmon: fixed a bug where logmon cannot find nomad executable [link]
client: Fixed a bug where cpuset initialization would not work on first agent startup [link]
client: Fixed a bug where user lookups would hang or panic [link]
client: Fixed a problem calculating a services namespace [link]
csi: Fixed a bug where volume claims on lost or garbage collected nodes could not be freed [link]
template: Fixed a bug where job templates would use module and module 0 after upgrading to Nomad 1.3.3, causing tasks to fail with the error module. [link]
ui: Fixed a bug that caused the allocation details page to display the stats bar chart even if the task was pending. [link]
ui: Removes duplicate breadcrumb header when navigating from child job back to parent. [link]
vault: Fixed a bug where Vault clients were recreated when the server configuration was reloaded, even if there were no changes to the Vault configuration. [link]
vault: Fixed a bug where changing the Vault configuration module field was not detected as a change during server configuration reload. [link]
"
38,"1.2.11 (August 25, 2022)
IMPROVEMENTS:

build: update to go1.19 [link]

BUG FIXES:

api: cleanup whitespace from failed api response body [link]
client/logmon: fixed a bug where logmon cannot find nomad executable [link]
client: Fixed a bug where user lookups would hang or panic [link]
ui: Fixed a bug that caused the allocation details page to display the stats bar chart even if the task was pending. [link]
vault: Fixed a bug where Vault clients were recreated when the server configuration was reloaded, even if there were no changes to the Vault configuration. [link]
vault: Fixed a bug where changing the Vault configuration module field was not detected as a change during server configuration reload. [link]
"
39,"1.1.17 (August 25, 2022)
BUG FIXES:

client/logmon: fixed a bug where logmon cannot find nomad executable [link]
ui: Fixed a bug that caused the allocation details page to display the stats bar chart even if the task was pending. [link]
vault: Fixed a bug where Vault clients were recreated when the server configuration was reloaded, even if there were no changes to the Vault configuration. [link]
vault: Fixed a bug where changing the Vault configuration module field was not detected as a change during server configuration reload. [link]
"
40,"1.3.3 (August 05, 2022)
IMPROVEMENTS:

csi: Add module field to module block to support plugins that require a specific staging/publishing directory for mounts [link]
qemu: use shorter socket file names to reduce the chance of hitting the max path length [link]
template: Expose consul-template configuration options at the client level for module. [link]
template: Templates support new uid/gid parameter pair [link]
ui: Reorder and apply the same style to the Evaluations list page filters to match the Job list page. [link]

BUG FIXES:

acl: Fixed a bug where the timestamp for expiring one-time tokens was not deterministic between servers [link]
deployments: Fixed a bug that prevented auto-approval if canaries were marked as unhealthy during deployment [link]
metrics: Fixed a bug where blocked evals with no class produced no dc:class scope metrics [link]
namespaces: Fixed a bug that allowed deleting a namespace that contained a CSI volume [link]
qemu: restore the monitor socket path when restoring a QEMU task. [link]
servicedisco: Fixed a bug where non-unique services would escape job validation [link]
ui: Add missing breadcrumb in the Evaluations page. [link]
ui: Fixed a bug where task memory was reported as zero on systems using cgroups v2 [link]
"
41,"1.2.10 (August 05, 2022)
BUG FIXES:

acl: Fixed a bug where the timestamp for expiring one-time tokens was not deterministic between servers [link]
deployments: Fixed a bug that prevented auto-approval if canaries were marked as unhealthy during deployment [link]
metrics: Fixed a bug where blocked evals with no class produced no dc:class scope metrics [link]
namespaces: Fixed a bug that allowed deleting a namespace that contained a CSI volume [link]
qemu: restore the monitor socket path when restoring a QEMU task. [link]
"
42,"1.1.16 (August 05, 2022)
BUG FIXES:

acl: Fixed a bug where the timestamp for expiring one-time tokens was not deterministic between servers [link]
deployments: Fixed a bug that prevented auto-approval if canaries were marked as unhealthy during deployment [link]
namespaces: Fixed a bug that allowed deleting a namespace that contained a CSI volume [link]
qemu: restore the monitor socket path when restoring a QEMU task. [link]
"
43,"1.3.2 (July 13, 2022)
IMPROVEMENTS:

agent: Added delete support to the eval HTTP API [link]
agent: emit a warning message if the agent starts with module set to an even number. [link]
agent: logs are no longer buffered at startup when logging in JSON format [link]
api: enable setting module parameter when querying services [link]
api: refactor ACL check when using the all namespaces wildcard in the job and alloc list endpoints [link]
api: support Authorization Bearer header in lieu of X-Nomad-Token header [link]
bootstrap: Added option to allow for an operator generated bootstrap token to be passed to the module command [link]
cli: Added module command to the eval CLI [link]
cli: Added module and module commands to the operator CLI [link]
cli: always display job ID and namespace in the module command [link]
cli: display namespace and node ID in the module command and when module matches multiple evals [link]
cli: update default redis and use nomad service discovery [link]
client: added more fault tolerant defaults for template configuration [link]
core: Added the ability to pause and un-pause the eval broker and blocked eval broker [link]
core: On node updates skip creating evaluations for jobs not in the node's datacenter. [link]
core: automatically mark clients with recurring plan rejections as ineligible [link]
driver/docker: Eliminate excess Docker registry pulls for the module when it already exists locally. [link]
fingerprint: add support for detecting kernel architecture of clients. (attribute: module) [link]
hcl: added support for using the module function in jobspecs [link]
metrics: emit module metric for the number of times a node had a plan rejection within the past time window [link]
qemu: add support for guest agent socket [link]
ui: Namespace filter query paramters are now isolated by route [link]

BUG FIXES:

api: Fix listing evaluations with the wildcard namespace and an ACL token [link]
api: Fixed a bug where Consul token was not respected for job revert API [link]
cli: Fixed a bug in the names of the module and module sub-commands [link]
cli: Fixed a bug where job validate did not respect vault token or namespace [link]
client: Fixed a bug where max_kill_timeout client config was ignored [link]
client: Fixed a bug where network.dns block was not interpolated [link]
cni: Fixed a bug where loopback address was not set for all drivers [link]
connect: Added missing ability of setting Connect upstream destination namespace [link]
core: Fixed a bug where an evicted batch job would not be rescheduled [link]
core: Fixed a bug where blocked eval resources were incorrectly computed [link]
core: Fixed a bug where reserved ports on multiple node networks would be treated as a collision. module is now merged into each module's reserved ports instead of being treated as a collision. [link]
core: Fixed a bug where the plan applier could deadlock if leader's state lagged behind plan's creation index for more than 5 seconds. [link]
csi: Fixed a regression where a timeout was introduced that prevented some plugins from running by marking them as unhealthy after 30s by introducing a configurable module field [link]
csi: Fixed a scheduler bug where failed feasibility checks would return early and prevent processing additional nodes [link]
docker: Fixed a bug where cgroups-v1 parent was being set [link]
lifecycle: fixed a bug where sidecar tasks were not being stopped last [link]
state: Fix listing evaluations from all namespaces [link]
ui: Allow running jobs from a namespace-limited token [link]
ui: Fix a bug that prevented viewing the details of an evaluation in a non-default namespace [link]
ui: Fixed a bug that prevented the UI task exec functionality to work from behind a reverse proxy. [link]
ui: Fixed an issue where editing or running a job with a namespace via the UI would throw a 404 on redirect. [link]
ui: fixed a bug where links to jobs with ""@"" in their name would mis-identify namespace and 404 [link]
volumes: Fixed a bug where additions, updates, or removals of host volumes or CSI volumes were not treated as destructive updates [link]
"
44,"1.2.9 (July 13, 2022)
BUG FIXES:

api: Fix listing evaluations with the wildcard namespace and an ACL token [link]
api: Fixed a bug where Consul token was not respected for job revert API [link]
cli: Fixed a bug in the names of the module and module sub-commands [link]
client: Fixed a bug where max_kill_timeout client config was ignored [link]
client: Fixed a bug where network.dns block was not interpolated [link]
cni: Fixed a bug where loopback address was not set for all drivers [link]
connect: Added missing ability of setting Connect upstream destination namespace [link]
core: Fixed a bug where an evicted batch job would not be rescheduled [link]
core: Fixed a bug where blocked eval resources were incorrectly computed [link]
core: Fixed a bug where reserved ports on multiple node networks would be treated as a collision. module is now merged into each module's reserved ports instead of being treated as a collision. [link]
core: Fixed a bug where the plan applier could deadlock if leader's state lagged behind plan's creation index for more than 5 seconds. [link]
csi: Fixed a regression where a timeout was introduced that prevented some plugins from running by marking them as unhealthy after 30s by introducing a configurable module field [link]
csi: Fixed a scheduler bug where failed feasibility checks would return early and prevent processing additional nodes [link]
lifecycle: fixed a bug where sidecar tasks were not being stopped last [link]
state: Fix listing evaluations from all namespaces [link]
ui: Allow running jobs from a namespace-limited token [link]
ui: Fixed a bug that prevented the UI task exec functionality to work from behind a reverse proxy. [link]
volumes: Fixed a bug where additions, updates, or removals of host volumes or CSI volumes were not treated as destructive updates [link]
"
45,"1.1.15 (July 13, 2022)
BUG FIXES:

api: Fixed a bug where Consul token was not respected for job revert API [link]
cli: Fixed a bug in the names of the module and module sub-commands [link]
client: Fixed a bug where max_kill_timeout client config was ignored [link]
cni: Fixed a bug where loopback address was not set for all drivers [link]
core: Fixed a bug where an evicted batch job would not be rescheduled [link]
core: Fixed a bug where reserved ports on multiple node networks would be treated as a collision. module is now merged into each module's reserved ports instead of being treated as a collision. [link]
core: Fixed a bug where the plan applier could deadlock if leader's state lagged behind plan's creation index for more than 5 seconds. [link]
csi: Fixed a regression where a timeout was introduced that prevented some plugins from running by marking them as unhealthy after 30s by introducing a configurable module field [link]
csi: Fixed a scheduler bug where failed feasibility checks would return early and prevent processing additional nodes [link]
lifecycle: fixed a bug where sidecar tasks were not being stopped last [link]
ui: Allow running jobs from a namespace-limited token [link]
ui: Fixed a bug that prevented the UI task exec functionality to work from behind a reverse proxy. [link]
volumes: Fixed a bug where additions, updates, or removals of host volumes or CSI volumes were not treated as destructive updates [link]
"
46,"1.3.1 (May 19, 2022)
SECURITY:

A vulnerability was identified in the go-getter library that Nomad uses for its artifacts such that a specially crafted Nomad jobspec can be used for privilege escalation onto client agent hosts. link [link]

BUG FIXES:

agent: fixed a panic on startup when the module config parameter was set [link]
"
47,"1.2.8 (May 19, 2022)
SECURITY:

A vulnerability was identified in the go-getter library that Nomad uses for its artifacts such that a specially crafted Nomad jobspec can be used for privilege escalation onto client agent hosts. link [link]
"
48,"1.1.14 (May 19, 2022)
SECURITY:

A vulnerability was identified in the go-getter library that Nomad uses for its artifacts such that a specially crafted Nomad jobspec can be used for privilege escalation onto client agent hosts. link [link]
"
49,"1.3.0 (May 11, 2022)
FEATURES:

Edge compute improvements: Added support for reconnecting healthy allocations when disconnected clients reconnect. [link]
Native service discovery: Register and discover services using builtin simple service discovery. [link]

BREAKING CHANGES:

agent: The state database on both clients and servers will automatically migrate its underlying database on startup. Downgrading to a previous version of an agent after upgrading it to Nomad 1.3 is not supported. [link]
client: The client state store will be automatically migrated to a new schema version when upgrading a client. Downgrading to a previous version of the client after upgrading it to Nomad 1.3 is not supported. To downgrade safely, users should erase the Nomad client's data directory. [link]
connect: Consul Service Identity ACL tokens automatically generated for Connect services are now
created as Local rather than Global tokens. Nomad clusters with Connect services making cross-Consul
datacenter requests will need to ensure their Consul agents are configured with anonymous ACL tokens
of sufficient node and service read permissions. [link]
connect: The minimum Consul version supported by Nomad's Connect integration is now Consul v1.8.0. [link]
csi: The client filesystem layout for CSI plugins has been updated to correctly handle the lifecycle of multiple allocations serving the same plugin. Running plugin tasks will not be updated after upgrading the client, but it is recommended to redeploy CSI plugin jobs after upgrading the cluster. [link]
raft: The default raft protocol version is now 3 so you must follow the link guide when upgrading an existing cluster to Nomad 1.3.0. Downgrading the raft protocol version is not supported. [link]

SECURITY:

server: validate mTLS certificate names on agent to agent endpoints [link]

IMPROVEMENTS:

agent: Switch from boltdb/bolt to go.etcd.io/bbolt [link]
api: Add module query parameter to the Evaluation details endpoint [link]
api: Add support for filtering and pagination to the jobs and volumes list endpoint [link]
api: Add support for filtering and pagination to the node list endpoint [link]
api: Add support for filtering, sorting, and pagination to the ACL tokens and allocations list endpoint [link]
api: Added ParseHCLOpts helper func to ease parsing HCLv1 jobspecs [link]
api: CSI secrets for list and delete snapshots are now passed in HTTP headers [link]
api: module now explicitly closes frames channel after being canceled [link]
api: default to using module client to support keep-alive by default [link]
api: filter values of evaluation and deployment list api endpoints [link]
api: sort return values of evaluation and deployment list api endpoints by creation index [link]
build: make targets now respect GOBIN variable [link]
build: upgrade and speedup circleci configuration [link]
cli: Added -json flag to module to support parsing JSON formatted jobs [link]
cli: Added -os flag to node status to display operating system name [link]
cli: Added module command to ease querying Nomad's HTTP API. [link]
cli: CSI secrets argument for module has been made consistent with module [link]
cli: Return a redacted value for mount flags in the module command, instead of module [link]
cli: module command now skips generating pprofs to avoid a panic on Nomad 0.11.2. 0.11.1, and 0.11.0 [link]
cli: add module command to check configuration files without an agent [link]
cli: added module to module command [link]
cli: display the Raft version instead of the Serf protocol in the module command [link]
cli: rename the module module flag to module so it matches other commands [link]
client: Added module allocation env var [link]
client: Allow interpolation of the network.dns block [link]
client: Download up to 3 artifacts concurrently [link]
client: Enable support for cgroups v2 [link]
client: fingerprint AWS instance life cycle option [link]
client: set NOMAD_CPU_CORES environment variable when reserving cpu cores [link]
connect: automatically set alloc_id in envoy_stats_tags configuration [link]
connect: bootstrap envoy sidecars using -proxy-for [link]
consul/connect: write Envoy bootstrapping information to disk for debugging [link]
consul: Added implicit Consul constraint for task groups utilising Consul service and check registrations [link]
consul: add go-sockaddr templating support to nomad consul address [link]
consul: improve service name validation message to include maximum length requirement [link]
core: Enable configuring raft boltdb freelist sync behavior [link]
core: The unused protocol_version agent configuration value has been removed. [link]
csi: Add pagination parameters to module command [link]
csi: Added module and module flags to module command [link]
csi: Added support for storage topology [link]
csi: Allow for concurrent plugin allocations [link]
csi: Allow volumes to be re-registered to be updated while not in use [link]
csi: Display plugin capabilities in module output [link]
csi: Respect the verbose flag in the output of module [link]
csi: Sort allocations in module output [link]
csi: add flag for providing secrets as a set of key/value pairs to delete a volume [link]
csi: allow namespace field to be passed in volume spec [link]
deps: Update hashicorp/raft-boltdb to v2.2.0 [link]
deps: Update serf library to v0.9.7 [link]
deps: Updated hashicorp/consul-template to v0.29.0 [link]
deps: Updated hashicorp/raft to v1.3.5 [link]
deps: Upgrade kr/pty to creack/pty v1.1.5 [link]
deps: use gorilla package for gzip http handler [link]
drainer: defer draining CSI plugin jobs until system jobs are drained [link]
drivers/raw_exec: Add support for cgroups v2 in raw_exec driver [link]
drivers: removed support for restoring tasks created before Nomad 0.9 [link]
fingerprint: add support for detecting DigitalOcean environment [link]
metrics: Emit metrics regarding raft boltdb operations [link]
metrics: emit module and module metrics for Vault token renewal information [link]
namespaces: Allow adding custom metadata to namespaces. [link]
namespaces: Allow enabling/disabling allowed drivers per namespace. [link]
raft: The default raft protocol version is now 3. [link]
scheduler: Seed node shuffling with the evaluation ID to make the order reproducible [link]
scheduler: recover scheduler goroutines on panic [link]
server: Transfer Raft leadership in case the Nomad server fails to establish leadership [link]
server: store and check previous Raft protocol version to prevent downgrades [link]
services: Enable setting arbitrary address on Nomad or Consul service registration [link]
template: Upgraded to from consul-template v0.25.2 to v0.28.0 which includes the sprig library of functions and more. [link]
ui: added visual indicators for disconnected allocations and client nodes [link]
ui: break long service tags into multiple lines [link]
ui: change sort-order of evaluations to be reverse-chronological [link]
ui: make buttons with confirmation more descriptive of their actions [link]

DEPRECATIONS:

Raft protocol version 2 is deprecated and will be removed in Nomad 1.4.0. [link]

BUG FIXES:

api: Apply prefix filter when querying CSI volumes in all namespaces [link]
cleanup: prevent leaks from time.After [link]
client: Fixed a bug that could prevent a preempting alloc from ever starting. [link]
client: Fixed a bug where clients that retry blocking queries would not reset the correct blocking duration [link]
config: Fixed a bug where the module setting was not respected [link]
core: Fixed auto-promotion of canaries in jobs with at least one task group without canaries. [link]
core: prevent malformed plans from crashing leader [link]
csi: Fixed a bug where module commands could choose the incorrect plugin if a plugin with a name that matched the same prefix existed. [link]
csi: Fixed a bug where module did not correctly filter by plugin IDs. The module parameter is required. [link]
csi: Fixed a bug where allocations with volume claims would fail their first placement after a reschedule [link]
csi: Fixed a bug where allocations with volume claims would fail to restore after a client restart [link]
csi: Fixed a bug where creating snapshots required a plugin ID instead of falling back to the volume's plugin ID [link]
csi: Fixed a bug where fields were missing from the Read Volume API response [link]
csi: Fixed a bug where garbage collected nodes would block releasing a volume [link]
csi: Fixed a bug where per-alloc volumes used the incorrect ID when querying for module [link]
csi: Fixed a bug where plugin configuration updates were not considered destructive [link]
csi: Fixed a bug where plugins would not restart if they failed any time after a client restart [link]
csi: Fixed a bug where plugins written in NodeJS could fail to fingerprint [link]
csi: Fixed a bug where purging a job with a missing plugin would fail [link]
csi: Fixed a bug where single-use access modes were not enforced during validation [link]
csi: Fixed a bug where the maximum number of volume claims was incorrectly enforced when an allocation claims a volume [link]
csi: Fixed a bug where the plugin instance manager would not retry the initial gRPC connection to plugins [link]
csi: Fixed a bug where the plugin supervisor would not restart the task if it failed to connect to the plugin [link]
csi: Fixed a bug where volume snapshot timestamps were always zero values [link]
csi: Fixed bug where accessing plugins was subject to a data race [link]
csi: fixed a bug where module, module, and module commands did not accept an exact ID if multiple volumes matched the prefix [link]
csi: provide module environment variable to plugin tasks [link]
jobspec: Fixed a bug where connect sidecar resources were ignored when using HCL1 [link]
lifecycle: Fixed a bug where successful poststart tasks were marked as unhealthy [link]
recommendations (Enterprise): Fixed a bug where the recommendations list RPC incorrectly forwarded requests to the authoritative region [link]
scheduler: fixed a bug where in-place updates on ineligible nodes would be ignored [link]
server: Write peers.json file with correct permissions [link]
template: Fixed a bug preventing allowing all consul-template functions. [link]
template: Fixed a bug where the default module would be appended to a specified list [link]
ui: Fix the link target for CSI volumes on the task detail page [link]
ui: Fixed a bug where volumes were being incorrectly linked when per_alloc=true [link]
ui: fix broken link to task-groups in the Recent Allocations table in the Job Detail overview page. [link]
ui: fix the unit for the task row memory usage metric [link]
"
50,"1.2.7 (May 10, 2022)
SECURITY:

server: validate mTLS certificate names on agent to agent endpoints [link]

IMPROVEMENTS:

build: upgrade and speedup circleci configuration [link]

BUG FIXES:

Fixed a bug where successful poststart tasks were marked as unhealthy [link]
api: Apply prefix filter when querying CSI volumes in all namespaces [link]
cleanup: prevent leaks from time.After [link]
client: Fixed a bug that could prevent a preempting alloc from ever starting. [link]
client: Fixed a bug where clients that retry blocking queries would not reset the correct blocking duration [link]
config: Fixed a bug where the module setting was not respected [link]
core: Fixed auto-promotion of canaries in jobs with at least one task group without canaries. [link]
core: prevent malformed plans from crashing leader [link]
csi: Fixed a bug where module commands could choose the incorrect plugin if a plugin with a name that matched the same prefix existed. [link]
csi: Fixed a bug where module did not correctly filter by plugin IDs. The module parameter is required. [link]
csi: Fixed a bug where allocations with volume claims would fail their first placement after a reschedule [link]
csi: Fixed a bug where allocations with volume claims would fail to restore after a client restart [link]
csi: Fixed a bug where creating snapshots required a plugin ID instead of falling back to the volume's plugin ID [link]
csi: Fixed a bug where fields were missing from the Read Volume API response [link]
csi: Fixed a bug where garbage collected nodes would block releasing a volume [link]
csi: Fixed a bug where per-alloc volumes used the incorrect ID when querying for module [link]
csi: Fixed a bug where plugin configuration updates were not considered destructive [link]
csi: Fixed a bug where plugins would not restart if they failed any time after a client restart [link]
csi: Fixed a bug where plugins written in NodeJS could fail to fingerprint [link]
csi: Fixed a bug where purging a job with a missing plugin would fail [link]
csi: Fixed a bug where single-use access modes were not enforced during validation [link]
csi: Fixed a bug where the maximum number of volume claims was incorrectly enforced when an allocation claims a volume [link]
csi: Fixed a bug where the plugin instance manager would not retry the initial gRPC connection to plugins [link]
csi: Fixed a bug where the plugin supervisor would not restart the task if it failed to connect to the plugin [link]
csi: Fixed a bug where volume snapshot timestamps were always zero values [link]
csi: Fixed bug where accessing plugins was subject to a data race [link]
csi: fixed a bug where module, module, and module commands did not accept an exact ID if multiple volumes matched the prefix [link]
csi: provide module environment variable to plugin tasks [link]
jobspec: Fixed a bug where connect sidecar resources were ignored when using HCL1 [link]
scheduler: fixed a bug where in-place updates on ineligible nodes would be ignored [link]
ui: Fix the link target for CSI volumes on the task detail page [link]
ui: fix the unit for the task row memory usage metric [link]
"
51,"1.1.13 (May 10, 2022)
SECURITY:

server: validate mTLS certificate names on agent to agent endpoints [link]

IMPROVEMENTS:

api: Updated the CSI volumes list API to respect wildcard namespaces [link]
build: upgrade and speedup circleci configuration [link]

BUG FIXES:

Fixed a bug where successful poststart tasks were marked as unhealthy [link]
api: Apply prefix filter when querying CSI volumes in all namespaces [link]
cleanup: prevent leaks from time.After [link]
client: Fixed a bug that could prevent a preempting alloc from ever starting. [link]
client: Fixed a bug where clients that retry blocking queries would not reset the correct blocking duration [link]
config: Fixed a bug where the module setting was not respected [link]
core: Fixed auto-promotion of canaries in jobs with at least one task group without canaries. [link]
core: prevent malformed plans from crashing leader [link]
csi: Fixed a bug where module commands could choose the incorrect plugin if a plugin with a name that matched the same prefix existed. [link]
csi: Fixed a bug where module did not correctly filter by plugin IDs. The module parameter is required. [link]
csi: Fixed a bug where allocations with volume claims would fail their first placement after a reschedule [link]
csi: Fixed a bug where allocations with volume claims would fail to restore after a client restart [link]
csi: Fixed a bug where creating snapshots required a plugin ID instead of falling back to the volume's plugin ID [link]
csi: Fixed a bug where fields were missing from the Read Volume API response [link]
csi: Fixed a bug where garbage collected nodes would block releasing a volume [link]
csi: Fixed a bug where per-alloc volumes used the incorrect ID when querying for module [link]
csi: Fixed a bug where plugin configuration updates were not considered destructive [link]
csi: Fixed a bug where plugins would not restart if they failed any time after a client restart [link]
csi: Fixed a bug where plugins written in NodeJS could fail to fingerprint [link]
csi: Fixed a bug where purging a job with a missing plugin would fail [link]
csi: Fixed a bug where single-use access modes were not enforced during validation [link]
csi: Fixed a bug where the maximum number of volume claims was incorrectly enforced when an allocation claims a volume [link]
csi: Fixed a bug where the plugin instance manager would not retry the initial gRPC connection to plugins [link]
csi: Fixed a bug where the plugin supervisor would not restart the task if it failed to connect to the plugin [link]
csi: Fixed a bug where volume snapshot timestamps were always zero values [link]
csi: Fixed bug where accessing plugins was subject to a data race [link]
csi: fixed a bug where module, module, and module commands did not accept an exact ID if multiple volumes matched the prefix [link]
csi: provide module environment variable to plugin tasks [link]
jobspec: Fixed a bug where connect sidecar resources were ignored when using HCL1 [link]
scheduler: fixed a bug where in-place updates on ineligible nodes would be ignored [link]
ui: Fix the link target for CSI volumes on the task detail page [link]
ui: fix the unit for the task row memory usage metric [link]
"
52,
53,"1.3.0 (Unreleased)
FEATURES:

Native service discovery: Register and discover services using builtin simple service discovery. [link]
core: Added support for reconnecting healthy allocations when disconnected clients reconnect. [link]

BREAKING CHANGES:

agent: The state database on both clients and servers will automatically migrate its underlying database on startup. Downgrading to a previous version of an agent after upgrading it to Nomad 1.3 is not supported. [link]
client: The client state store will be automatically migrated to a new schema version when upgrading a client. Downgrading to a previous version of the client after upgrading it to Nomad 1.3 is not supported. To downgrade safely, users should erase the Nomad client's data directory. [link]
csi: The client filesystem layout for CSI plugins has been updated to correctly handle the lifecycle of multiple allocations serving the same plugin. Running plugin tasks will not be updated after upgrading the client, but it is recommended to redeploy CSI plugin jobs after upgrading the cluster. [link]
raft: The default raft protocol version is now 3 so you must follow the link guide when upgrading an existing cluster to Nomad 1.3.0. Downgrading the raft protocol version is not supported. [link]

SECURITY:

server: validate mTLS certificate names on agent to agent endpoints [link]

IMPROVEMENTS:

agent: Switch from boltdb/bolt to go.etcd.io/bbolt [link]
api: Add module query parameter to the Evaluation details endpoint [link]
api: Add support for filtering and pagination to the jobs and volumes list endpoint [link]
api: Add support for filtering, sorting, and pagination to the ACL tokens and allocations list endpoint [link]
api: CSI secrets for list and delete snapshots are now passed in HTTP headers [link]
api: module now explicitly closes frames channel after being canceled [link]
api: default to using module client to support keep-alive by default [link]
api: filter values of evaluation and deployment list api endpoints [link]
api: sort return values of evaluation and deployment list api endpoints by creation index [link]
build: make targets now respect GOBIN variable [link]
build: upgrade and speedup circleci configuration [link]
cli: Added -os flag to node status to display operating system name [link]
cli: Added module command to ease querying Nomad's HTTP API. [link]
cli: CSI secrets argument for module has been made consistent with module [link]
cli: Return a redacted value for mount flags in the module command, instead of module [link]
cli: add module command to check configuration files without an agent [link]
cli: added module to module command [link]
cli: display the Raft version instead of the Serf protocol in the module command [link]
cli: rename the module module flag to module so it matches other commands [link]
client: Allow interpolation of the network.dns block [link]
client: Enable support for cgroups v2 [link]
client: fingerprint AWS instance life cycle option [link]
client: set NOMAD_CPU_CORES environment variable when reserving cpu cores [link]
connect: bootstrap envoy sidecars using -proxy-for [link]
consul/connect: write Envoy bootstrapping information to disk for debugging [link]
consul: add go-sockaddr templating support to nomad consul address [link]
consul: improve service name validation message to include maximum length requirement [link]
core: Enable configuring raft boltdb freelist sync behavior [link]
core: The unused protocol_version agent configuration value has been removed. [link]
csi: Add pagination parameters to module command [link]
csi: Added module and module flags to module command [link]
csi: Added support for storage topology [link]
csi: Allow for concurrent plugin allocations [link]
csi: Allow volumes to be re-registered to be updated while not in use [link]
csi: Display plugin capabilities in module output [link]
csi: Respect the verbose flag in the output of module [link]
csi: Sort allocations in module output [link]
csi: add flag for providing secrets as a set of key/value pairs to delete a volume [link]
csi: allow namespace field to be passed in volume spec [link]
deps: Update hashicorp/raft-boltdb to v2.2.0 [link]
deps: Update serf library to v0.9.7 [link]
deps: Updated hashicorp/raft to v1.3.5 [link]
deps: Upgrade kr/pty to creack/pty v1.1.5 [link]
deps: use gorilla package for gzip http handler [link]
drainer: defer draining CSI plugin jobs until system jobs are drained [link]
drivers/raw_exec: Add support for cgroups v2 in raw_exec driver [link]
fingerprint: add support for detecting DigitalOcean environment [link]
metrics: Emit metrics regarding raft boltdb operations [link]
metrics: emit module and module metrics for Vault token renewal information [link]
namespaces: Allow adding custom metadata to namespaces. [link]
namespaces: Allow enabling/disabling allowed drivers per namespace. [link]
raft: The default raft protocol version is now 3. [link]
scheduler: Seed node shuffling with the evaluation ID to make the order reproducible [link]
scheduler: recover scheduler goroutines on panic [link]
server: Transfer Raft leadership in case the Nomad server fails to establish leadership [link]
server: store and check previous Raft protocol version to prevent downgrades [link]
template: Upgraded to from consul-template v0.25.2 to v0.28.0 which includes the sprig library of functions and more. [link]
ui: break long service tags into multiple lines [link]
ui: make buttons with confirmation more descriptive of their actions [link]
vault: support Vault entity aliases when deriving tokens [link]

DEPRECATIONS:

Raft protocol version 2 is deprecated and will be removed in Nomad 1.4.0. [link]

BUG FIXES:

api: Apply prefix filter when querying CSI volumes in all namespaces [link]
cleanup: prevent leaks from time.After [link]
config: Fixed a bug where the module setting was not respected [link]
core: Fixed auto-promotion of canaries in jobs with at least one task group without canaries. [link]
csi: Fixed a bug where module commands could choose the incorrect plugin if a plugin with a name that matched the same prefix existed. [link]
csi: Fixed a bug where module did not correctly filter by plugin IDs. The module parameter is required. [link]
csi: Fixed a bug where allocations with volume claims would fail their first placement after a reschedule [link]
csi: Fixed a bug where allocations with volume claims would fail to restore after a client restart [link]
csi: Fixed a bug where creating snapshots required a plugin ID instead of falling back to the volume's plugin ID [link]
csi: Fixed a bug where fields were missing from the Read Volume API response [link]
csi: Fixed a bug where garbage collected nodes would block releasing a volume [link]
csi: Fixed a bug where plugins written in NodeJS could fail to fingerprint [link]
csi: Fixed a bug where purging a job with a missing plugin would fail [link]
csi: Fixed a bug where single-use access modes were not enforced during validation [link]
csi: Fixed a bug where the maximum number of volume claims was incorrectly enforced when an allocation claims a volume [link]
csi: Fixed a bug where the plugin instance manager would not retry the initial gRPC connection to plugins [link]
csi: Fixed a bug where the plugin supervisor would not restart the task if it failed to connect to the plugin [link]
csi: Fixed a bug where volume snapshot timestamps were always zero values [link]
csi: fixed a bug where module, module, and module commands did not accept an exact ID if multiple volumes matched the prefix [link]
csi: provide module environment variable to plugin tasks [link]
lifecycle: Fixed a bug where successful poststart tasks were marked as unhealthy [link]
recommendations (Enterprise): Fixed a bug where the recommendations list RPC incorrectly forwarded requests to the authoritative region [link]
scheduler: fixed a bug where in-place updates on ineligible nodes would be ignored [link]
server: Write peers.json file with correct permissions [link]
template: Fixed a bug preventing allowing all consul-template functions. [link]
ui: Fix the link target for CSI volumes on the task detail page [link]
ui: fix the unit for the task row memory usage metric [link]
"
54,"1.2.6 (February 9, 2022)
BACKWARDS INCOMPATIBILITIES:

ACL authentication is now required for the Nomad API job parse endpoint to address a potential security vulnerability

SECURITY:

Add ACL requirement and HCL validation to the job parse API endpoint to prevent excessive CPU usage. link [link]
Fix race condition in use of go-getter that could cause a client agent to download the wrong artifact into the wrong destination. link [link]
Prevent panic in spread iterator during allocation stop. link [link]
Resolve symlinks to prevent unauthorized access to files outside the allocation directory. link [link]
"
55,"1.2.5 (February 1, 2022)
BUG FIXES:

csi: Fixed a bug where garbage collected allocations could block new claims on a volume [link]
csi: Fixed a bug where releasing volume claims would fail with ACL errors after leadership transitions. [link]
csi: Unmount volumes from the client before sending unpublish RPC [link]
template: Fixed a bug where client template configuration that did not include any of the new 1.2.4 configuration options could result in none of the configuration getting set. [link]
"
56,"1.2.4 (January 18, 2022)
FEATURES:

ui: Add filters to allocations table in jobs/job/allocation view [link]

IMPROVEMENTS:

agent/config: Allow binding the HTTP server to multiple addresses. [link]
agent: Added module configuration block [link]
api: Add pagination and filtering to Evaluations List API [link]
api: Added pagination to deployments list API [link]
api: Improve error message returned by module [link]
api: Return a HTTP 404 instead of a HTTP 500 from the Stat File and List Files API endpoints when a file or directory is not found. [link]
api: Updated the CSI volumes list API to respect wildcard namespaces [link]
api: Updated the deployments list API to respect wildcard namespaces [link]
api: Updated the evaluations list API to respect wildcard namespaces [link]
api: return HTTP204 on CORS pre-flight checks and allow dot in CORS header keys. [link]
cli: Add module and module to the command line printed by module [link]
cli: Add event stream capture to module [link]
cli: Added a module command. [link]
cli: Made the module, module, module, and module commands visible to command line help. [link]
cli: Return non-zero exit code from monitor if deployment fails [link]
cli: provide module option to module and module commands to ignore module [link]
core: allow setting and propagation of eval priority on job de/registration [link]
deps: Update module to module [link]
driver/docker: Added support for client-wide module configuration [link]
hcl: tolerate empty strings for zero integer values in quota and job specification. [link]
metrics (Enterprise): Emit module metric to show the expiration time of the Nomad Enterprise license.
metrics: Added metric for module [link]
metrics: added nomad.client.allocs.memory.mapped_file metric [link]
scaling: Don't emit scaling action with error in case of active deployment [link]
scheduler: Added a module field to the scheduler configuration API that enabled a setting to reject job register, dispatch, and scale requests without a management ACL token [link]
server: Make num_schedulers and enabled_schedulers hot reloadable; add agent API endpoint to enable dynamic modifications of these values. [link]
template: Expose consul-template configuration options at the client level for module,
module, module, module and module. Expose per-template configuration
for wait that will override the client level configuration. Add module to
allow operators to constrain per-template overrides at the client level. [link]
ui: Add filters to the allocation list in the client and task group details pages [link]
ui: Add titles to breadcrumb labels in app navigation bar [link]
ui: Display section title in the navigation breadcrumbs [link]
ui: Display the Consul and Vault links configured in the agent [link]
ui: add links to legend items in allocation-summary [link]

BUG FIXES:

agent: Fixed an issue that caused Consul values to be logged during template rendering [link]
agent: Validate reserved_ports are valid to prevent unschedulable nodes. [link]
api: Fixed a bug where API or CLI clients could become unresponsive when cron expressions contained zero-padded months [link]
artifact: Fixed a bug where uncompressed module archives were not unpacked after download. [link]
cli: Fixed a bug where the module flag was not respected by module [link]
cli: Rework meta commands cli flag logic to handle TLS options individually. [link]
client: Fixed a bug where clients would ignore the module setting after losing connection with the servers, causing them to incorrectly fallback to Consul discovery if it was set to module. [link]
client: Fixed a bug where the allocation log streaming API was missing log frames that spanned log file rotation [link]
client: Fixed a memory and goroutine leak for batch tasks and any task that exits without being shut down from the server [link]
client: Fixed host network reserved port fingerprinting [link]
core: Fix missing fields in Node.Copy() [link]
csi: Fixed a bug where deregistering volumes would attempt to deregister the wrong volume if the ID was a prefix of the intended volume [link]
csi: Fixed a bug where volume claim releases that were not fully processed before a leadership transition would be ignored [link]
drivers: Fixed a bug where the module copied from the system was not readable to unprivileged processes within the task [link]
quotas (Enterprise): Fixed a bug quotas can be incorrectly calculated when nodes fail ranking. [link]
rpc: Fixed scaling policy get index response when the policy is found [link]
scheduler: Fixed a performance bug where module and node affinity can cause a job to take longer than the nack timeout to be evaluated. [link]
template: Fixed a bug where templates did not receive an updated vault token if module was set in the job definition's module stanza. [link]
ui: Fix the ACL requirements for displaying the job details page [link]
"
57,"1.2.3 (December 13, 2021)
SECURITY:

Updated to Go 1.17.5. Go 1.17.3 contained 2 CVEs. link could allow a task on a Unix system with exhausted file handles to misdirect I/O. link could create unbounded memory growth in HTTP2 servers. Nomad servers do not use HTTP2. [link]
"
58,"1.1.9 (December 13, 2021)
SECURITY:

Updated to Go 1.16.12. Earlier versions of Go contained 2 CVEs. link could allow a task on a Unix system with exhausted file handles to misdirect I/O. link could create unbounded memory growth in HTTP2 servers. Nomad servers do not use HTTP2. [link]
"
59,"1.0.15 (December 13, 2021)
SECURITY:

Updated to Go 1.16.12. Earlier versions of Go contained 2 CVEs. link could allow a task on a Unix system with exhausted file handles to misdirect I/O. link could create unbounded memory growth in HTTP2 servers. Nomad servers do not use HTTP2. [link]
"
60,"1.2.2 (November 24, 2021)
BUG FIXES:

scheduler: Fix panic when system jobs are filtered by node class [link]
"
61,"1.2.1 (November 19, 2021)
SECURITY:

Allow limiting QEMU arguments to reduce access to host resources. link [link]
"
62,"1.2.0 (November 15, 2021)
FEATURES:

System Batch scheduler: Run batch jobs cluster-wide with the new 'sysbatch' scheduler. [link]

BREAKING CHANGES:

cli: Renamed folders in module bundle for clarity [link]
device/nvidia: The Nvidia device plugin is no longer packaged with Nomad and is instead distributed separately. Further, the Nvidia device plugin codebase is now in a separate link. If you are using Nvidia devices, please follow the 1.2.0 upgrade guide as you will have to install the Nvidia device plugin before conducting an in-place upgrade to Nomad 1.2.0 [link]

IMPROVEMENTS:

agent: Added module to be reloaded on SIGHUP [link]
agent: Log the cause of failure if agent failed to start [link]
build: Updated to Go 1.17.1 [link]
cli: Add module option for the module command [link]
cli: Add module option for the module command. [link]
cli: Add module command [link]
cli: Added support for module to the CLI to force colored output. [link]
cli: Allow specifying namesapce and region in the module command [link]
cli: Improve module output for module and module changes [link]
cli: Improve debug capture for Consul/Vault [link]
cli: Improve debug namespace and region support [link]
cli: Improved autocomplete support for job dispatch and operator debug [link]
cli: Update module bundle to include sample of clients by default [link]
cli: added module flag to control HCL2 parsing errors where variable passed without root [link]
cli: added json and template flag opts to the acl bootstrap command [link]
cli: the command module now returns module information as well [link]
client/plugins/drivermanager: log if there is an error in a driver event [link]
client: Add network interface name to log output during fingerprint [link]
client: Allow configuring minimum and maximum host ports used for dynamic ports [link]
client: Never embed client.alloc_dir in chroots to prevent infinite recursion from misconfiguration. [link]
consul/connect: Allow module and module protocols in ingress gateways [link]
core: Elevated rejected node plan log lines to help diagnose #9506 [link]
deps: Update module to module [link]
deps: Update module to module [link]
driver/docker: Added support for Docker's module parameter [link]
scheduler: Warn users when system and sysbatch evaluations fail to place an allocation [link]
server: Allow tuning of node failover heartbeat TTL [link]
ui: Add new chart for module and module job status per client [link]
ui: Display client name as a tooltip where the client ID is used [link]
ui: Display jobs from all namespaces by default [link]
ui: Display the Nomad version in the Servers and Clients tables and allow filtering and sorting [link]
ui: Persist node drain settings in the browser [link]
ui: Update Nomad UI favicon [link]
vault: Add JobID and TaskGroup to Vault Token metadata [link]

BUG FIXES:

agent: Fixed an issue that caused some non-JSON log output when module was enabled [link]
agent: Fixed an issue that could cause previous log lines to be overwritten [link]
build: Update go toolchain to 1.17.3 [link]
cli: Fix support for module field in the HCLv1 parser [link]
client: Added module to default environment variable deny list. [link]
client: Fixed a bug where network speed fingerprint could fail on Windows [link]
client: Removed spurious error log messages when tasks complete [link]
core: Fix a bug to stop running system job allocations once their datacenters are removed from the job [link]
core: Fixed an issue that created incorrect plan output for jobs with services with the same name. [link]
csi: Fixed a bug where the client would incorrectly set an empty capacity range for CSI volume creation requests. [link]
deps: Updated module to v1.4.3 to fix handles leakage on Windows platforms [link]
driver/exec: Set CPU resource limits when cgroup-v2 is enabled [link]
jobspec: ensure consistent error handling between var-file & cli vars [link]
rpc: Set the job deregistration eval priority to the job priority [link]
rpc: Set the job scale eval priority to the job priority [link]
server: Fixed a panic on arm64 platform when dispatching a job with a payload [link]
server: Fixed a panic that may occur when preempting multiple allocations on the same node [link]
"
63,"1.1.6 (October 5, 2021)
SECURITY:

consul/connect: Fixed a bug causing the Nomad agent to panic if a mesh gateway was registered without a module block. [link]

IMPROVEMENTS:

build: Updated to Go 1.16.8 [link]

BUG FIXES:

client: Fixed a memory leak in log collector when tasks restart [link]
events: Fixed wildcard namespace handling [link]
"
64,"1.1.5 (September 20, 2021)
IMPROVEMENTS:

client: Allow Docker hostnames to be configured and interpolated in bridged networking mode [link]
deps: Updated module to module [link]

BUG FIXES:

audit (Enterprise): Don't timestamp active audit log file. [link]
cli: Display all possible scores in the allocation status table [link]
cli: Fixed a bug where the NOMAD_CLI_NO_COLOR environment variable was not always applied [link]
client: Task vars should take precedence over host vars when performing interpolation. [link]
ui: Fixed an issue that prevented periodic and dispatch jobs in a non-default namespace to be properly rendered [link]
ui: Fixed an issue when dispatching jobs from a non-default namespace [link]

Binaries - https://releases.hashicorp.com/nomad/1.1.5/"
65,"IMPROVEMENTS:

deps: Updated module to module [link]

BUG FIXES:

audit (Enterprise): Don't timestamp active audit log file. [link]
cli: Display all possible scores in the allocation status table [link]
cli: Fixed a bug where the NOMAD_CLI_NO_COLOR environment variable was not always applied [link]
client: Task vars should take precedence over host vars when performing interpolation. [link]

Binaries - https://releases.hashicorp.com/nomad/1.0.11/"
66,"1.1.4 (August 26, 2021)
SECURITY:

Restricted access to the Raft RPC layer, so only servers within the region can issue Raft RPC requests. Previously, local clients and federated servers can issue Raft RPC requests directly. CVE-2021-37218 [link]

IMPROVEMENTS:

build: Updated to Go 1.16.7 [link]
client: Speed up client startup time [link]
consul/connect: Reduced the noise of log messages emitted for connect native tasks [link]
csi: add flag for providing secrets as a set of key/value pairs to list snapshots [link]
deps: Updated module to module [link]
scheduler: Re-evaluate nodes for system jobs after attributes changes [link]
ui: Add header separator between a child job priority and its parent [link]

BUG FIXES:

core: Fixed a bug where system jobs with non-unique IDs may not be placed on new nodes [link]
agent: Don't timestamp active log file. [link]
deployments: Fixed a bug where multi-group deployments don't get auto-promoted when one group has no canaries. [link]
driver/docker: Fixed a bug in the authentication config where not all fields were set [link]
server: Fixed a bug where planning job update reports spurious in-place updates even if the update includes no changes [link]
ui: Add ability to search across all namespaces [link]
ui: Fixed a bug where the ""Dispatch Job"" button was displayed for non-parameterized jobs [link]
ui: Fixed a bug where the job dispatch form is not displayed when the job doesn't have meta fields [link]
"
67,"1.1.3 (July 29, 2021)
BACKWARDS INCOMPATIBILITIES:

api: The Job Run and Plan APIs now use the module query parameter before the namespace from the job. This matches region's behavior. Users of module should ensure their module is unset if they want to use the namespace in the job. [link]

IMPROVEMENTS:

api: Added module helper function to create base system job object. [link]
audit (Enterprise): allow configuring file mode for audit logs [link]
build: no longer use vendor directory [link]
cli: Added a module flag to module and module for consistent UX with module and module [link]
cli: Support recent job spec construct in the HCLv1 parser [link]
consul/connect: automatically set CONSUL_TLS_SERVER_NAME for connect native tasks [link]
dispatch jobs: Added optional idempotency token to module which prevents Nomad from creating new dispatched jobs for retried requests. [link]
ui: Added new screen to dispatch a parameterized batch job [link]
ui: Handle ACL token when running behind a reverse proxy [link]

BUG FIXES:

api: Reverted to using http/1 to fix a 1.1.2 regression in module sessions [link]
cli: Fixed a bug where module flag was not respected for module and module commands. [link]
cli: Fixed a panic when deployment monitor is invoked in some CI environments [link]
cli: Fixed system commands, so they correctly use passed flags [link]
cli: Fixed the help message for the module command [link]
client: Fixed a bug where a restarted client may start an already completed tasks in rare conditions [link]
client: Fixed bug where meta blocks were not interpolated with task environment [link]
cni: Fixed a bug where fingerprinting of CNI configuration failed with default module and module [link]
consul/connect: Avoid assumption of parent service when syncing connect proxies [link]
consul/connect: Fixed a bug causing high CPU with multiple connect sidecars in one group [link]
consul/connect: Fixed a bug where service deregistered before connect sidecar [link]
consul: Fixed a bug where services may incorrectly fail conflicting name validation [link]
consul: avoid extra sync operations when no action required [link]
consul: remove ineffective edge case handling on service deregistration [link]
core: Fixed a bug where affinity memoization may cause planning problems [link]
core: Fixed a bug where internalized constraint strings broke job plan [link]
core: Fixed a panic that may arise when upgrading pre-1.1.0 cluster to 1.1.x and may cause cluster outage [link]
csi: Fixed a bug where volume secrets were not used for creating snapshots. [link]
csi: fixed a CLI panic when formatting module with module flag [link]
deps: Update module to v0.25.2 to fix panic reading Vault secrets [link]
driver/docker: Moved the generated module file's mount source to the allocation directory so that it can be shared between tasks of an allocation. [link]
drivers: Fixed bug where Nomad incorrectly reported tasks as recovered successfully even when they were not. [link]
scheduler: Fixed a bug where updates to the module field were not destructive. [link]
ui: Fixes bug where UI was not detecting namespace-specific capabilities. [link]
volumes: Fix a bug where the HTTP server would crash if a module block was empty [link]
"
68,"1.1.2 (June 22, 2021)
IMPROVEMENTS:
* cli: Added module flag to module command and automatically monitor deployments from module command. [link]
* cli: Added remainder of available pprof profiles to module capture. [link]
* consul/connect: Validate Connect service upstream address uniqueness within task group [link]
* deps: Update gopsutil for multisocket cpuinfo detection performance fix [link]
* docker: Tasks using module that don't set their module will receive a module file that includes the pause container's hostname and any module. [link]
BUG FIXES:
* artifact: Fixed support for 5 part vhosted-style AWS S3 buckets. [link]
* artifact: HTTP requests made for artifacts will default to trying HTTP2 first. [link]
* client/fingerprint/java: Fixed a bug where java fingerprinter would not detect some Java distributions [link]
* consul: Fixed a bug where consul check parameters missing in group services [link]
* consul/connect: Fixed an overly restrictive connect constraint [link]
* consul/connect: Fixed a bug where Connect upstreams would not be updated in-place [link]
* deployments: Fixed a bug where unnecessary goroutines were spawned whenever deployments were updated. [link]
* quotas (Enterprise): Fixed a bug where quotas were evaluated before constraints, resulting in quota capacity being used up by filtered nodes. [link]"
69,"1.1.1 (June 9, 2021)
FEATURES:
 * Connect Mesh Gateways: Adds built-in support for running Consul Connect Mesh Gateways [link]
IMPROVEMENTS:
* build: Updated to Go 1.16.5 [link]
* cli: Added success confirmation message for module and module. [link]
* cli: Cross-namespace module commands will now select exact matches if the selection is unambiguous. [link]
* client/fingerprint: Consul fingerprinter probes for additional enterprise and connect related attributes [link]
* consul/connect: Only schedule connect tasks on nodes where connect is enabled in Consul [link]
* csi: Validate that module blocks for CSI volumes include the required module and module fields. [link]
* server: Make deployment rate limiting configurable for high volume loads [link]
BUG FIXES:
* api: Fixed event stream connection initialization when there are no events to send [link]
* cli: Fixed a bug where module did not validate the passed module flag correctly [link]
* cli: Fixed a bug where module and module commands may panic if the CLI targets a pre-1.1.0 cluster [link]
* cli: Fixed a bug where module may fail with ""unexpected EOF"" without returning the exit code after a command [link]
* consul: Fixed a bug where consul namespace API would be queried even when consul namespaces were not enabled [link]
* consul: Fixed a bug where connect jobs would always fail job submission when allow_unauthenticated was set to false [link]
* csi: Fixed a bug where module were not passed to CSI controller plugins for validation during volume creation and mounting. [link]
* csi: Fixed a bug where module blocks were not passed to CSI controller plugins for validation for module commands. [link]
* client: Fixed a bug where module sessions may terminate abruptly after a few minutes [link]
* drivers/exec: Fixed a bug where module and module tasks inherit the Nomad agent's module value [link]
* drivers/docker: Fixed a bug where short lived docker tasks may fail with obscure cpuset cgroup errors [link]
* quotas (Enterprise): Fixed a bug where stopped allocations for a failed deployment can be double-credited to quota limits, resulting in a quota limit bypass. [link]
* ui: Fixed a bug where exec would not work across regions. [link]
* ui: Fixed global-search shortcut for non-english keyboards. [link]"
70,"https://github.com/hashicorp/nomad/blob/release-1.1.0/CHANGELOG.md
1.1.0 (May 18, 2021)
FEATURES:
 * Memory oversubscription: Improve cluster efficiency by allowing applications,  whether containerized or non-containerized, to use memory in excess of their scheduled amount.
 * Reserved CPU cores: Improve the performance of your applications by ensuring tasks have exclusive use of client CPUs.
 * UI improvements: Enjoy a streamlined operator experience with fuzzy search, resource monitoring, and authentication improvements.
 * CSI enhancements: Run stateful applications with improved volume management and support for Container Storage Interface (CSI) plugins such as Ceph.
 * Readiness checks: Differentiate between application liveness and readiness with new options for task health checks.
 * Remote task drivers (technical preview): Use Nomad to manage your workloads on more platforms, such as AWS Lambda or Amazon ECS.
 * Consul namespace support (Enterprise): Run Nomad-defined services in their HashiCorp Consul namespaces more easily using Nomad Enterprise.
 * License autoloading (Enterprise): Automatically load Nomad licenses when a Nomad server agent starts using Nomad Enterprise.
 * Autoscaling improvements: Scale your applications more precisely with new strategies.
BACKWARDS INCOMPATIBILITIES:
 * csi: The module and module field are required for module blocks in job specifications. Registering a volume requires at least one module block with the module and module fields set. [link]
 * drivers/exec+java: Reduce set of linux capabilities enabled by default [link]
 * licensing: Enterprise licenses are no longer stored in raft or synced between servers. Loading the Enterprise license from disk or environment is required. The module command has been removed. [link]
SECURITY:
 * drivers/docker+exec+java: Disable module linux capability by default to prevent ARP spoofing. CVE-2021-32575 link
IMPROVEMENTS:
 * api: Added an API endpoint for fuzzy search queries [link]
 * api: Removed unimplemented module API. [link]
 * api: Added module field for the jobs list endpoint response [link]
 * build: Updated to Go 1.16.3 [link]
 * cli: Update defaults for module flags module and module to match common usage. [link]
 * cli: Support an optional file argument for module and module commands [link]
 * client/config: Enable sockaddr templating for module attribute. [link]
 * client/fingerprint: Added support multiple host network aliases for the same interface. [link]
 * consul: Allow setting module field on service/check Consul health checks. [link]
 * consul/connect: Use exponential backoff for consul envoy bootstrap process [link]
 * consul/connect: Enable setting module field on connect upstreams [link]
 * consul/connect: Added job-submission validation for Connect sidecar service and group names [link]
 * consul/connect: Automatically populate module for connect native tasks in host networking mode. [link]
 * consul/connect: Added module field to module blocks to disable the default TCP listener check for Connect sidecar tasks. [link]
 * core: Persist metadata about most recent drain in Node.LastDrain [link]
 * csi: Added support for jobs to request a unique volume ID per allocation. [link]
 * driver/docker: Added support for optional extra container labels. [link]
 * driver/docker: Added support for configuring default logger behavior in the client configuration. [link]
 * metrics: Added blocked evaluation resources metrics [link]
 * networking: Added support for user-defined iptables rules on the NOMAD-ADMIN chain. [link]
 * networking: Added support for interpolating host network names with node attributes. [link]
 * nomad/structs: Removed deprecated Node.Drain field, added API extensions to restore it [link]
 * ui: Added a job reversion button [link]
 * ui: Added memory maximum to task group ribbon [link]
 * ui: Updated global search to use fuzzy search API [link]
 * ui: Changed displays of aggregate units to use larger suffixes when appropriate [link]
 * ui: Added resource reservation indicators on client charts and task breakdowns on allocation charts [link]
BUG FIXES:
 * core (Enterprise): Update licensing library to v0.0.11 to include race condition fix. [link]
 * agent: Only allow querying Prometheus formatted metrics if Prometheus is enabled within the config [link]
 * api: Ensured that module returned response meta data [link]
 * api: Added missing devices block to AllocatedTaskResources [link]
 * api: Fixed a panic that may occur on concurrent access to an SDK client [link]
 * cli: Fixed a bug where non-int proxy port would panic CLI [link]
 * cli: Fixed a bug where module command panics on launch [link]
 * cli: Remove extra linefeeds in monitor.log files written by module. [link]
 * cli: Fixed a bug where parsing HCLv2 may panic on some variable interpolation syntax [link] [link]
 * cli: Fixed a bug where module incorrectly parsed https Consul API URLs. [link]
 * cli: Fixed a panic where module or module would crash when supplied with non-existent module files. [link]
 * client: Fixed log formatting when killing tasks. [link]
 * client: Added handling for cgroup-v2 memory metrics [link]
 * client: Only publish measured allocation memory metrics [link]
 * client: Fixed a bug where small files would be assigned the wrong content type. [link]
 * consul/connect: Fixed a bug where job plan always different when using expose checks. [link]
 * consul/connect: Fixed a bug where HTTP ingress gateways could not use wildcard names. [link]
 * cni: Fallback to an interface with an IP address if sandbox interface lacks one. [link]
 * csi: Fixed a bug where volume with IDs that are a substring prefix of another volume could use the wrong volume for feasibility checking. [link]
 * drivers/docker: Fixed a bug where Dockerfile module was not honored. [link]
 * drivers/raw_exec: Fixed a bug where exit codes could be dropped and return a spurious error. [link]
 * scheduler: Fixed a bug where Nomad reports negative or incorrect running children counts for periodic jobs. [link]
 * scheduler: Fixed a bug where jobs requesting multiple CSI volumes could be incorrectly scheduled if only one of the volumes passed feasibility checking. [link]
 * service: Fixed a bug where new script checks would not be added on job updates. [link]
 * server: Fixed a bug affecting periodic job summary counts [link]
 * server: Fixed a bug where draining a node may fail to migrate its allocations [link]
 * server: Fixed a bug where jobs may not run if submitted with ParentID field set [link]
 * server: Fixed a panic that may arise on submission of jobs containing invalid service checks [link]
 * ui: Fixed the rendering of interstitial components shown after processing a dynamic application sizing recommendation. [link]"
71,"https://github.com/hashicorp/nomad/blob/release-1.0.6/CHANGELOG.md
1.0.6 (May 18, 2021)
BUG FIXES:
 * core (Enterprise): Update licensing library to v0.0.11 to include race condition fix. [link]
 * agent: Only allow querying Prometheus formatted metrics if Prometheus is enabled within the config [link]
 * api: Ensured that module returned response meta data [link]
 * api: Added missing devices block to AllocatedTaskResources [link]
 * api: Fixed a panic that may occur on concurrent access to an SDK client [link]
 * cli: Fixed a bug where non-int proxy port would panic CLI [link]
 * cli: Fixed a bug where module command panics on launch [link]
 * cli: Remove extra linefeeds in monitor.log files written by module. [link]
 * cli: Fixed a bug where parsing HCLv2 may panic on some variable interpolation syntax [link] [link]
 * cli: Fixed a bug where module incorrectly parsed https Consul API URLs. [link]
 * cli: Fixed a panic where module or module would crash when supplied with non-existent module files. [link]
 * client: Fixed log formatting when killing tasks. [link]
 * client: Added handling for cgroup-v2 memory metrics [link]
 * client: Only publish measured allocation memory metrics [link]
 * client: Fixed a bug where small files would be assigned the wrong content type. [link]
 * consul/connect: Fixed a bug where job plan always different when using expose checks. [link]
 * consul/connect: Fixed a bug where HTTP ingress gateways could not use wildcard names. [link]
 * cni: Fallback to an interface with an IP address if sandbox interface lacks one. [link]
 * csi: Fixed a bug where volume with IDs that are a substring prefix of another volume could use the wrong volume for feasibility checking. [link]
 * drivers/docker: Fixed a bug where Dockerfile module was not honored. [link]
 * drivers/raw_exec: Fixed a bug where exit codes could be dropped and return a spurious error. [link]
 * scheduler: Fixed a bug where Nomad reports negative or incorrect running children counts for periodic jobs. [link]
 * scheduler: Fixed a bug where jobs requesting multiple CSI volumes could be incorrectly scheduled if only one of the volumes passed feasibility checking. [link]
 * service: Fixed a bug where new script checks would not be added on job updates. [link]
 * server: Fixed a bug affecting periodic job summary counts [link]
 * server: Fixed a bug where draining a node may fail to migrate its allocations [link]
 * server: Fixed a bug where jobs may not run if submitted with ParentID field set [link]
 * server: Fixed a panic that may arise on submission of jobs containing invalid service checks [link]
 * ui: Fixed the rendering of interstitial components shown after processing a dynamic application sizing recommendation. [link]"
72,"1.0.5 (May 12, 2021)
SECURITY:
 * drivers/docker+exec+java: Disable module linux capability by default to prevent ARP spoofing. CVE-2021-32575 [link]"
73,"1.0.4 (February 24, 2021)
FEATURES:
 * Terminating Gateways: Adds built-in support for running Consul Connect terminating gateways [link]
IMPROVEMENTS:
 * api: Added OSS handling for license request to stop spurious errors from appearing in the logs [link]
 * agent: Removed leading whitespace from JSON-formatted log output. [link]
 * cli: Added optional module flag to module to match module [link]
 * cli: Improved module commands with -verbose, auto-completion, and prefix-matching [link]
 * consul/connect: Enable custom sidecar tasks to use connect expose checks [link]
 * consul/connect: Added validation to prevent module blocks from being added to task services. [link]
 * consul/connect: Made handling of sidecar task container image URLs consistent with the module task driver. [link]
 * drivers/exec+java: Added client plugin and task configuration options to re-enable previous PID/IPC namespace behavior [link] [link]
 * ui: Added button to fail running deployments [link]
 * ui: Reduced bundle size by removing support for IE 11 [link]
BUG FIXES:
 * cli: Fixed a bug where some fields in module blocks were not interpolated. [link]
 * cli: Fixed a bug where unset HCL2 variables would panic the CLI if the type was also not set. [link]
 * consul: Fixed a bug where failing tasks with group services would only cause the allocation to restart once instead of respecting the module field. [link]
 * consul/connect: Fixed a bug where gateway proxy connection default timeout not set [link]
 * consul/connect: Fixed a bug preventing more than one connect gateway per Nomad client [link]
 * consul/connect: Fixed a bug where connect sidecar services would be re-registered unnecessarily. [link]
 * consul/connect: Fixed a bug where the sidecar health checks would fail if module was defined. [link]
 * consul/connect: Fixed a bug where tasks with connect services might be updated when no update necessary. [link]
 * deployments: Fixed a bug where deployments with multiple task groups and manual promotion would fail if promoted after the progress deadline. [link]
 * drivers/docker: Fixed a bug preventing multiple ports to be mapped to the same container port [link]
 * driver/qemu: Fixed a bug where network namespaces were not supported for QEMU workloads [link]
 * nomad/structs: Fixed a bug where static ports with the same value but different module were invalid [link]
 * scheduler: Fixed a bug where shared ports were not persisted during inplace updates for service jobs. [link]
 * scheduler: Fixed a bug where job statuses and summaries where duplicated and miscalculated when registering a job. [link]
 * scheduler: Fixed a bug that caused the scheduler not to detect changes for module port field. [link]
 * scheduler (Enterprise): Fixed a bug where the deprecated network module field was being considered as part of quota enforcement. [link]
 * ui: Fixed exec command escaping of emoji in task names [link]
 * ui: Consistently use the correct MHz shorthand throughout the UI [link]
 * ui: Fixed inconsistent namespace casing in the namespace selector [link]
 * ui: Always draw allocation associations if the alloc count is less than 10 [link]
 * ui: Fixed incorrect text alignment in the topology visualization in Firefox [link]
 * ui: Fixed node composite status so being down takes priority over being ineligible [link]
 * ui: Don't count reservations of terminal allocations in the topology visualization [link]
 * ui: Use server-sent error messages when applicable (e.g., when a task can't be stopped) [link]
 * ui: Send the region query param when making cross-region client/server monitor requests [link]
 * ui: Fixed a bug where namespaces were not being included when opening exec windows from allocations and tasks [link]
 * ui: Don't draw allocation associations in the topology visualization on window resize when the associations aren't supposed to be shown [link]
 * volumes: Fixed a bug where volume diffs were not displayed in the output of module. [link]"
74,"1.0.3 (January 28, 2021)
SECURITY:

drivers/exec+java: Modified exec-based drivers to run tasks in private PID/IPC namespaces. CVE-2021-3283 [link]
"
75,"0.12.10 (January 28, 2021)
SECURITY:

drivers/exec+java: Modified exec-based drivers to run tasks in private PID/IPC namespaces. CVE-2021-3283 [link]
"
76,"1.0.2 (January 14, 2021)
IMPROVEMENTS:
 * artifact: Added support for virtual host style AWS S3 paths. [link]
 * build: Updated to Go 1.15.6. [link]
 * client: Improve support for AWS Graviton instances [link]
 * consul/connect: Interpolate the connect, service meta, and service canary meta blocks with the task environment [link]
 * cli: Added JSON/go template formatting to agent-info command. [link]
BUG FIXES:
 * client: Fixed a bug where non-module tasks with network isolation were restarted on client restart. [link]
 * client: Fixed a bug where clients configured with module did not update the module node attribute. [link]
 * client: Fixed an fingerprinter issue detecting bridge kernel module on RHEL [link]
 * core: Fixed a bug where an in place update dropped an allocations shared allocated resources [link]
 * consul: Fixed a bug where updating a task to include services would not work [link]
 * consul: Fixed alloc address mode port advertisement to use the mapped module port value [link]
 * consul/connect: Fixed a bug where absent ingress envoy proxy configuration could panic client [link]
 * consul/connect: Fixed a bug where in-place upgrade of Nomad client running Connect enabled jobs would panic [link]
 * lifecycle: Fixed a bug where poststop breaks deployments with consul service checks [link]
 * template: Fixed multiple issues in template src/dest and artifact dest interpolation [link]
 * template: Fixed a bug where dynamic secrets did not trigger the template module after a client restart. [link]
 * scaling: Fixed a bug where job scaling endpoint did not enforce scaling policy min/max [link]
 * server: Fixed a bug where new servers may bootstrap prematurely when configured with module [link]
 * ui: The topology visualization will now render a subset of nodes instead of nothing when some nodes are running nomad <0.9.0 [link]"
77,"1.0.1 (December 16, 2020)
IMPROVEMENTS:
 * drivers/docker: Added a new syntax for specifying module [link]
BUG FIXES:
 * core: Fixed a bug where ACLToken and ACLPolicy changes were ignored by the event stream [link]
 * core: Fixed a bug to honor HCL2 variables set by environment variables or variable files [link] [link]
 * cli: Fixed a bug in the node count for the module command. [link]
 * cni: Fixed a bug where plugins that do not set the interface sandbox value could crash the Nomad client. [link]
 * consul/connect: Fixed a bug where client meta.connect.sidecar_image configuration was ignored [link]
 * consul/connect: Fixed a bug where client meta.connect.proxy_concurrency was not applied to connect gateways [link]"
78,"FEATURES:

Event Stream: Subscribe to change events as they occur in real time. [link]
Namespaces OSS: Namespaces are now available in open source Nomad. [link]
Topology Visualization: See all of the clients and allocations in a cluster at once. [link]
HCL 2: Job files can contain variables, expressions, and advanced templating.
PostStop: Tasks can now run after all other tasks have finished [link]

IMPROVEMENTS:
 * core: Improved job deregistration error logging. [link]
 * acl: Allow operators with module capability to force periodic job invocation [link]
 * api: Added support for cancellation contexts to HTTP API. [link]
 * api: Job Register API now permits non-zero initial Version to accommodate multi-region deployments. [link]
 * api: Added ?resources=true query parameter to /v1/nodes and /v1/allocations to include resource allocations in listings. [link]
 * api: Added ?task_states=false query parameter to /v1/allocations to remove TaskStates from listings. Defaults to being included as before. [link]
 * build: Updated to Go 1.15.5. [link]
 * cli: Added autocompletion for module commands [link]
 * cli: Added client node filtering arguments to module command. [link]
 * cli: Added goroutine debug pprof output and server-id=all to module capture. [link]
 * cli: Added metrics to module capture. [link]
 * cli: Added pprof duration and CSI details to module capture. [link]
 * cli: Added module and module subcommands to the module command. [link]
 * cli: Added module command for interaction with the scaling API endpoint. [link]
 * client: Use ec2 CPU perf data from AWS API [link]
 * client: Added support for Azure fingerprinting. [link]
 * client: Batch state store writes to reduce disk IO. [link]
 * client: Reduce rate of sending allocation updates when servers are slow. [link]
 * client: Added support for fingerprinting the client node's Consul segment. [link]
 * client: Added module and module environment variables to those made available to jobs. [link]
 * client: Updated consul-template to v0.25.1 - config module deprecated and replaced with module [link]
 * config: Deprecated terms module and module from configuration and replaced them with module and module. [link]
 * consul: Support advertising CNI and multi-host network addresses to consul [link]
 * consul: Support Consul namespace (Consul Enterprise) in client configuration. [link]
 * consul/connect: Dynamically select envoy sidecar at runtime [link]
 * consul/connect: Enable setting module field on connect upstreams [link]
 * consul/connect: Envoy concurrency now defaults to 1 rather than number of cores [link]
 * csi: Support module with previously garbage-collected nodes. [link]
 * csi: Relaxed validation requirements when checking volume capabilities with controller plugins, to accommodate existing plugin behaviors. [link]
 * driver/docker: Upgrade pause container and detect architecture [link]
 * driver/docker: Support pinning tasks to specific CPUs with module option. [link]
 * driver/raw_exec: Honor the task user setting when a user runs module [link]
 * jobspec: Lowered minimum CPU allowed from 10 to 1. [link]
 * jobspec: Added support for module option in module stanza [link]
BACKWARDS INCOMPATIBILITIES:
 * core: null characters are prohibited in region, datacenter, job name/ID, task group name, and task name [link]
 * csi: registering a CSI volume with a module attachment mode and module now returns a validation error, instead of silently dropping the module. [link]
 * driver/docker: Tasks are now issued SIGTERM instead of SIGINT when stopping [link]
 * telemetry: removed backwards compatible/untagged metrics deprecated in 0.7  [link]
BUG FIXES:

agent (Enterprise): Fixed a bug where audit logging caused websocket and streaming http endpoints to fail [link]
core: Fixed a bug where ACL handling prevented cross-namespace allocation listing [link]
core: Fixed a bug where AllocatedResources contained increasingly duplicated ports [link]
core: Fixed a bug where group level network ports not usable by task resource network stanza [link]
core: Fixed a bug where scaling policy filtering would ignore type query if job query was present [link]
core: Fixed a bug where a request to scale a job would fail if the job was not in the default namespace. [link]
core: Fixed a bug where blocking queries would not include the query's maximum wait time when calculating whether it was safe to retry. [link]
config (Enterprise): Fixed default enterprise config merging. [link]
client: Fixed an fingerprinter issue detecting bridge kernel module [link]
client: Fixed an issue with the Java fingerprinter on macOS causing pop-up notifications when no JVM installed. [link]
client: Fixed an issue in processing device plugin fingerprints which would temporarily hang nomad if no devices were found [link]
client: Fixed an in-place upgrade bug, where a Nomad client may fail to manage tasks that were started with pre-0.9 Nomad client. [link]
consul: Fixed a bug where canary_meta was not being interpolated with environment variables [link]
consul: Fixed a bug to correctly validate task when using script-checks in group-level services [link]
consul: Fixed a bug that caused connect sidecars to be re-registered in Consul every 30 seconds [link]
consul/connect: Fixed a bug to correctly trigger updates on jobspec changes [link]
csi: Fixed a bug where multi-writer volumes were allowed only 1 write claim. [link]
csi: Fixed a bug where garbage collection of plugins could prevent volume claim release. [link]
csi: Fixed a bug where concurrent updates to volumes could result in inconsistent state. [link]
csi: Fixed a bug where module would not accept prefixes for the node ID parameter. [link]
csi: Fixed a bug where module would display an error when querying volumes. [link]
csi: Fixed a bug where queries for CSI plugins could be interleaved, resulting in inconsistent counts of plugins. [link]
driver/docker: Fixed a bug where the Docker daemon could block longer than the module. [link
driver/docker: Fixed a bug where the default module configuration was ignored if the module configuration was not set. [link]
driver/raw_exec: Fixed a bug where raw_exec attempts to create a freezer cgroups for the tasks even when module is set. [link]
scheduler: Fixed a bug where where system jobs would bind on all interfaces instead of the specified module. [link]
ui: Fixed a bug in the volume list page where allocation counts were not displayed. [link]
ui: Fixed a bug in the volume status page where read allocations and write allocations were not displayed. [link]
ui: Fixed a bug in the CSI volume and plugin status pages where plugins that don't require controllers were shown as unhealthy. [link]
"
79,"FEATURES:

Event Stream: Subscribe to change events as they occur in real time. [link]
Namespaces OSS: Namespaces are now available in open source Nomad. [link]
Topology Visualization: See all of the clients and allocations in a cluster at once. [link]
HCL 2: Job files can contain variables, expressions, and advanced templating.
PostStop: Tasks can now run after all other tasks have finished [link]

IMPROVEMENTS:
 * core: Improved job deregistration error logging. [link]
 * acl: Allow operators with module capability to force periodic job invocation [link]
 * api: Added support for cancellation contexts to HTTP API. [link]
 * api: Job Register API now permits non-zero initial Version to accommodate multi-region deployments. [link]
 * api: Added ?resources=true query parameter to /v1/nodes and /v1/allocations to include resource allocations in listings. [link]
 * api: Added ?task_states=false query parameter to /v1/allocations to remove TaskStates from listings. Defaults to being included as before. [link]
 * build: Updated to Go 1.15.5. [link]
 * cli: Added autocompletion for module commands [link]
 * cli: Added module and module subcommands to the module command. [link]
 * cli: Added module command for interaction with the scaling API endpoint. [link]
 * client: Use ec2 CPU perf data from AWS API [link]
 * client: Added support for Azure fingerprinting. [link]
 * client: Batch state store writes to reduce disk IO. [link]
 * client: Reduce rate of sending allocation updates when servers are slow. [link]
 * client: Added support for fingerprinting the client node's Consul segment. [link]
 * client: Added module and module environment variables to those made available to jobs. [link]
 * client: Updated consul-template to v0.25.0 - config module deprecated and replaced with module [link]
 * config: Deprecated terms module and module from configuration and replaced them with module and module. [link]
 * consul: Support advertising CNI and multi-host network addresses to consul [link]
 * consul: Support Consul namespace (Consul Enterprise) in client configuration. [link]
 * consul/connect: Dynamically select envoy sidecar at runtime [link]
 * consul/connect: Enable setting module field on connect upstreams [link]
 * consul/connect: Envoy concurrency now defaults to 1 rather than number of cores [link]
 * csi: Support module with previously garbage-collected nodes. [link]
 * csi: Relaxed validation requirements when checking volume capabilities with controller plugins, to accommodate existing plugin behaviors. [link]
 * driver/docker: Upgrade pause container and detect architecture [link]
 * driver/docker: Support pinning tasks to specific CPUs with module option. [link]
 * driver/raw_exec: Honor the task user setting when a user runs module [link]
 * jobspec: Lowered minimum CPU allowed from 10 to 1. [link]
 * jobspec: Added support for module option in module stanza [link]
BACKWARDS INCOMPATIBILITIES:
 * core: null characters are prohibited in region, datacenter, job name/ID, task group name, and task name [link]
 * csi: registering a CSI volume with a module attachment mode and module now returns a validation error, instead of silently dropping the module. [link]
 * driver/docker: Tasks are now issued SIGTERM instead of SIGINT when stopping [link]
 * telemetry: removed backwards compatible/untagged metrics deprecated in 0.7  [link]
BUG FIXES:

agent (Enterprise): Fixed a bug where audit logging caused websocket and streaming http endpoints to fail [link]
api: Fixed a bug where the event stream client didn't pass the index query parameters [link]
core: Fixed a bug where ACL handling prevented cross-namespace allocation listing [link]
core: Fixed a bug where AllocatedResources contained increasingly duplicated ports [link]
core: Fixed a bug where group level network ports not usable by task resource network stanza [link]
core: Fixed a bug where scaling policy filtering would ignore type query if job query was present [link]
core: Fixed a bug where a request to scale a job would fail if the job was not in the default namespace. [link]
core: Fixed a bug where blocking queries would not include the query's maximum wait time when calculating whether it was safe to retry. [link]
config (Enterprise): Fixed default enterprise config merging. [link]
client: Fixed an fingerprinter issue detecting bridge kernel module [link]
client: Fixed an issue with the Java fingerprinter on macOS causing pop-up notifications when no JVM installed. [link]
client: Fixed an issue in processing device plugin fingerprints which would temporarily hang nomad if no devices were found [link]
client: Fixed an in-place upgrade bug, where a Nomad client may fail to manage tasks that were started with pre-0.9 Nomad client. [link]
consul: Fixed a bug where canary_meta was not being interpolated with environment variables [link]
consul: Fixed a bug to correctly validate task when using script-checks in group-level services [link]
consul: Fixed a bug that caused connect sidecars to be re-registered in Consul every 30 seconds [link]
consul/connect: Fixed a bug to correctly trigger updates on jobspec changes [link]
csi: Fixed a bug where multi-writer volumes were allowed only 1 write claim. [link]
csi: Fixed a bug where garbage collection of plugins could prevent volume claim release. [link]
csi: Fixed a bug where concurrent updates to volumes could result in inconsistent state. [link]
csi: Fixed a bug where module would not accept prefixes for the node ID parameter. [link]
csi: Fixed a bug where module would display an error when querying volumes. [link]
csi: Fixed a bug where queries for CSI plugins could be interleaved, resulting in inconsistent counts of plugins. [link]
driver/docker: Fixed a bug where the Docker daemon could block longer than the module. [link
driver/docker: Fixed a bug where the default module configuration was ignored if the module configuration was not set. [link]
driver/raw_exec: Fixed a bug where raw_exec attempts to create a freezer cgroups for the tasks even when module is set. [link]
ui: Fixed a bug in the volume status page where read allocations and write allocations were not displayed. [link]
ui: Fixed a bug in the CSI volume and plugin status pages where plugins that don't require controllers were shown as unhealthy. [link]
"
80,"BUG FIXES:
 * client: Fixed a regression where module variables would cause an error when interpolated into module stanzas. [link]"
81,"BUG FIXES:
 * client: Backport from v0.12.9 - Fixed a regression where module variables would cause an error when interpolated into module stanzas. [link]"
82,"BUG FIXES:
 * client: Backport from v0.12.9 - Fixed a regression where module variables would cause an error when interpolated into module stanzas. [link]"
83,"Nomad 0.12.8, Nomad 0.11.7, and Nomad 0.10.8 were released with an important security fix and a critical bug fix:
CVE-2020-28348 Nomad File Sandbox Escape via Container Volume Mount
A vulnerability was discovered in Nomad and Nomad Enterprise (“Nomad”) such that an operator with job submission capabilities can mount the host file system of a client agent and subvert the default Docker file sandbox feature when not explicitly disabled or when using a volume mount type. This vulnerability affects version 0.9.0 up to 0.12.7, and is fixed in the 0.12.8, 0.11.7, and 0.10.8 releases.
Nomad disables host filesystem access by default in 0.12.0 and above to prevent job operators from accessing the client filesystem used to persistently store any required data on disk. The Docker task driver provides a volume mount type which can be used to access the client host filesystem from within a container, but clients must be configured to enable mounting directories outside an allocation’s path to prevent abuse from unprivileged operators.
This issue is identified publicly as CVE-2020-28348.
Critical Bug During Upgrades from pre-0.9
A bug was identified in all versions of Nomad after 0.9.2. If a client agent is upgraded from a pre-0.9 version of Nomad to 0.9.2 or later; then all exec-based tasks (including exec, raw_exec, java, qemu) will fail to recover, will be leaked, and then Nomad will start another task. The leaked pre-0.9 task will run un-interrupted and unmanaged until the client dies or the task is killed manually."
84,"Nomad 0.12.8, Nomad 0.11.7, and Nomad 0.10.8 were released with an important security fix and a critical bug fix:
CVE-2020-28348 Nomad File Sandbox Escape via Container Volume Mount
A vulnerability was discovered in Nomad and Nomad Enterprise (“Nomad”) such that an operator with job submission capabilities can mount the host file system of a client agent and subvert the default Docker file sandbox feature when not explicitly disabled or when using a volume mount type. This vulnerability affects version 0.9.0 up to 0.12.7, and is fixed in the 0.12.8, 0.11.7, and 0.10.8 releases.
Nomad disables host filesystem access by default in 0.12.0 and above to prevent job operators from accessing the client filesystem used to persistently store any required data on disk. The Docker task driver provides a volume mount type which can be used to access the client host filesystem from within a container, but clients must be configured to enable mounting directories outside an allocation’s path to prevent abuse from unprivileged operators.
This issue is identified publicly as CVE-2020-28348.
Critical Bug During Upgrades from pre-0.9
A bug was identified in all versions of Nomad after 0.9.2. If a client agent is upgraded from a pre-0.9 version of Nomad to 0.9.2 or later; then all exec-based tasks (including exec, raw_exec, java, qemu) will fail to recover, will be leaked, and then Nomad will start another task. The leaked pre-0.9 task will run un-interrupted and unmanaged until the client dies or the task is killed manually."
85,"Nomad 0.12.8, Nomad 0.11.7, and Nomad 0.10.8 were released with an important security fix and a critical bug fix:
CVE-2020-28348 Nomad File Sandbox Escape via Container Volume Mount
A vulnerability was discovered in Nomad and Nomad Enterprise (“Nomad”) such that an operator with job submission capabilities can mount the host file system of a client agent and subvert the default Docker file sandbox feature when not explicitly disabled or when using a volume mount type. This vulnerability affects version 0.9.0 up to 0.12.7, and is fixed in the 0.12.8, 0.11.7, and 0.10.8 releases.
Nomad disables host filesystem access by default in 0.12.0 and above to prevent job operators from accessing the client filesystem used to persistently store any required data on disk. The Docker task driver provides a volume mount type which can be used to access the client host filesystem from within a container, but clients must be configured to enable mounting directories outside an allocation’s path to prevent abuse from unprivileged operators.
This issue is identified publicly as CVE-2020-28348.
Critical Bug During Upgrades from pre-0.9
A bug was identified in all versions of Nomad after 0.9.2. If a client agent is upgraded from a pre-0.9 version of Nomad to 0.9.2 or later; then all exec-based tasks (including exec, raw_exec, java, qemu) will fail to recover, will be leaked, and then Nomad will start another task. The leaked pre-0.9 task will run un-interrupted and unmanaged until the client dies or the task is killed manually."
86,"FEATURES:

Event Stream: Subscribe to change events as they occur in real time. [link]
Namespaces OSS: Namespaces are now available in open source Nomad. [link]
Topology Visualization: See all of the clients and allocations in a cluster at once. [link]

BACKWARDS INCOMPATIBILITIES:
 * core: null characters are prohibited in region, datacenter, job name/ID, task group name, and task name [link]
 * csi: registering a CSI volume with a module attachment mode and module now returns a validation error, instead of silently dropping the module. [link]
 * driver/docker: Tasks are now issued SIGTERM instead of SIGINT when stopping [link]
 * telemetry: removed backwards compatible/untagged metrics deprecated in 0.7  [link]
IMPROVEMENTS:
 * core: Improved job deregistration error logging. [link]
 * api: Added support for cancellation contexts to HTTP API. [link]
 * api: Job Register API now permits non-zero initial Version to accommodate multi-region deployments. [link]
 * api: Added ?resources=true query parameter to /v1/nodes and /v1/allocations to include resource allocations in listings. [link]
 * api: Added ?task_states=false query parameter to /v1/allocations to remove TaskStates from listings. Defaults to being included as before. [link]
 * cli: Added module and module subcommands to the module command. [link]
 * cli: Added module command for interaction with the scaling API endpoint. [link]
 * client: Batch state store writes to reduce disk IO. [link]
 * client: Use ec2 CPU perf data from AWS API [link]
 * client: Added support for Azure fingerprinting. [link]
 * client: Added support for fingerprinting the client node's Consul segment. [link]
 * client: Added module and module environment variables to those made available to jobs. [link]
 * client: Updated consul-template to v0.25.0 - config module deprecated and replaced with module [link]
 * config: Deprecated terms module and module from configuration and replaced them with module and module. [link]
 * consul: Support Consul namespace (Consul Enterprise) in client configuration. [link]
 * consul: Support advertising CNI and multi-host network addresses to consul [link]
 * consul/connect: Dynamically select envoy sidecar at runtime [link]
 * csi: Relaxed validation requirements when checking volume capabilities with controller plugins, to accommodate existing plugin behaviors. [link]
 * driver/docker: Upgrade pause container and detect architecture [link]
 * jobspec: Lowered minimum CPU allowed from 10 to 1. [link]
BUG FIXES:

core: Fixed a bug where blocking queries would not include the query's maximum wait time when calculating whether it was safe to retry. [link]
config (Enterprise): Fixed default enterprise config merging. [link]
consul: Fixed a bug to correctly validate task when using script-checks in group-level services [link]
consul: Fixed a bug where canary_meta was not being interpolated with environment variables [link]
consul/connect: Fixed a bug to correctly trigger updates on jobspec changes [link]
csi: Fixed a bug where multi-writer volumes were allowed only 1 write claim. [link]
csi: Fixed a bug where module would not accept prefixes for the node ID parameter. [link]
driver/docker: Fixed a bug where the default module configuration was ignored if the module configuration was not set. [link]

Binaries: https://releases.hashicorp.com/nomad/1.0.0-beta2/"
87,"BUG FIXES:

artifact: Backport from v0.12.7 - Fixed a regression in 0.11.5 where if the artifact destination field is an absolute path it is not appended to the task working directory, breaking the use of NOMAD_SECRETS_DIR as part of the destination path. [GH-9148]
template: Backport from v0.12.7 - Fixed a regression in 0.11.5 where if the template destination field is an absolute path it is not appended to the task working directory, breaking the use of NOMAD_SECRETS_DIR as part of the destination path. [GH-9148]
"
88,"BUG FIXES:

artifact: Backport from v0.12.7 - Fixed a regression in 0.10.6 where if the artifact destination field is an absolute path it is not appended to the task working directory, breaking the use of NOMAD_SECRETS_DIR as part of the destination path. [GH-9148]
template: Backport from v0.12.7 - Fixed a regression in 0.10.6 where if the template destination field is an absolute path it is not appended to the task working directory, breaking the use of NOMAD_SECRETS_DIR as part of the destination path. [GH-9148]
"
89,"BUG FIXES:

artifact: Fixed a regression in 0.12.6 where if the artifact destination field is an absolute path it is not appended to the task working directory, breaking the use of NOMAD_SECRETS_DIR as part of the destination path. [GH-9148]
template: Fixed a regression in 0.12.6 where if the template destination field is an absolute path it is not appended to the task working directory, breaking the use of NOMAD_SECRETS_DIR as part of the destination path. [GH-9148]
"
90,"0.12.6 (October 21, 2020)
SECURITY:

artifact: Fixed a bug where interpolation can be used in the artifact module field to write artifact payloads outside the allocation directory. CVE-2020-27195 [link]
template: Fixed a bug where interpolation can be used in the template module and module fields to read or write files outside the allocation directory even when module was set to module (the default). CVE-2020-27195 [link]
template: Fixed a bug where the module configuration was only respected for the template module function and not the template module and module fields. CVE-2020-27195 [link]
"
91,"0.11.5 (October 21, 2020)
SECURITY:

artifact: Backport from v0.12.6 - Fixed a bug where interpolation can be used in the artifact module field to write artifact payloads outside the allocation directory. CVE-2020-27195 [link]
template: Backport from v0.12.6 - Fixed a bug where interpolation can be used in the template module and module fields to read or write files outside the allocation directory even when module was set to module (the default). CVE-2020-27195 [link]
template: Backport from v0.12.6 - Fixed a bug where the module configuration was only respected for the template module function and not the template module and module fields. CVE-2020-27195 [link]
"
92,"0.10.6 (October 21, 2020)
SECURITY:

artifact: Backport from v0.12.6 - Fixed a bug where interpolation can be used in the artifact module field to write artifact payloads outside the allocation directory. CVE-2020-27195 [link]
template: Backport from v0.12.6 - Fixed a bug where interpolation can be used in the template module and module fields to read or write files outside the allocation directory even when module was set to module (the default). CVE-2020-27195 [link]
template: Backport from v0.12.6 - Fixed a bug where the module configuration was only respected for the template module function and not the template module and module fields. CVE-2020-27195 [link]
"
93,"0.12.5 (September 17, 2020)
BUG FIXES:
 * core: Fixed a panic on job submission when the job contains a service with module set [link]
 * core: Fixed a regression where stopping the sole job allocation result in two replacement allocations [link]
 * core: Fixed a bug where an allocation may be left running expectedly despite promoting a new job version [link]
 * cli: Fixed the whitespace in nomad monitor help output [link]
 * cli: Updated job samples to avoid using deprecated task level networks and mbit syntax [link]
 * cli: Fixed a bug where alloc signal fails if the CLI cannot contact the Nomad client directly [link]
 * cli: Fixed a bug where host volumes could cause module to panic when the module flag was used. [link]
 * ui: Fixed ability to switch between tasks in alloc exec sessions [link]
 * ui: Task log streaming will no longer suddenly flip to a different task's logs. [link]"
94,"FEATURES:

Consul Ingress Gateways: Support for Consul Connect Ingress Gateways [link]

IMPROVEMENTS:

api: Added node purge SDK functionality. [link]
api: Added an option to stop multiregion jobs globally. [link]
core: Added module hook to task lifecycle [link]
csi: Improved the accuracy of plugin module allocation counts. [link]
driver/docker: Allow configurable image pull context timeout setting. [link]
ui: Added exec keepalive heartbeat. [link]

BUG FIXES:

core: Fixed a bug where unpromoted job versions are used when rescheduling failed allocations [link]
core: Fixed a bug where servers become unresponsive when cron jobs containing zero-padded months [link]
core: Fixed bugs where scaling policies could be matched against incorrect jobs with a similar prefix [link]
core: Fixed a bug where garbage collection evaluations that failed or spanned leader elections would be re-enqueued forever. [link]
core (Enterprise): Fixed a bug where enterprise servers may self-terminate as licenses are ignored after a Raft snapshot restore. [link]
cli (Enterprise): Fixed a panic in module if local path is not set [link]
client: Fixed a bug where module could cause a client agent to panic when the module flag was used. [link]
csi: Fixed a bug where errors while connecting to plugins could cause a panic in the Nomad client. [link]
csi: Fixed a bug where querying CSI volumes would cause a panic if an allocation that claimed the volume had been garbage collected but the claim was not yet dropped. [link]
deployments (Enterprise): Fixed a bug where counts could not be changed in the web UI for multiregion jobs. [link]
deployments (Enterprise): Fixed a bug in multi-region deployments where a region that was dropped from the jobspec was not deregistered. [link]
exec: Fixed a bug causing escape characters to be missed in special cases [link]
plan: Fixed a bug where plans always included a change for the module. [link]
"
95,"0.12.4 (September 2, 2020)
FEATURES:

Consul Ingress Gateways: Support for Consul Connect Ingress Gateways [link]

IMPROVEMENTS:

api: Added node purge SDK functionality. [link]
api: Added an option to stop multiregion jobs globally. [link]
core: Added module hook to task lifecycle [link]
csi: Improved the accuracy of plugin module allocation counts. [link]
driver/docker: Allow configurable image pull context timeout setting. [link]
ui: Added exec keepalive heartbeat. [link]

BUG FIXES:

core: Fixed a bug where unpromoted job versions are used when rescheduling failed allocations [link]
core: Fixed a bug where servers become unresponsive when cron jobs containing zero-padded months [link]
core: Fixed bugs where scaling policies could be matched against incorrect jobs with a similar prefix [link]
core: Fixed a bug where garbage collection evaluations that failed or spanned leader elections would be re-enqueued forever. [link]
core (Enterprise): Fixed a bug where enterprise servers may self-terminate as licenses are ignored after a Raft snapshot restore. [link]
cli (Enterprise): Fixed a panic in module if local path is not set [link]
client: Fixed a bug where module could cause a client agent to panic when the module flag was used. [link]
csi: Fixed a bug where querying CSI volumes would cause a panic if an allocation that claimed the volume had been garbage collected but the claim was not yet dropped. [link]
deployments (Enterprise): Fixed a bug where counts could not be changed in the web UI for multiregion jobs. [link]
deployments (Enterprise): Fixed a bug in multi-region deployments where a region that was dropped from the jobspec was not deregistered. [link]
exec: Fixed a bug causing escape characters to be missed in special cases [link]
plan: Fixed a bug where plans always included a change for the module. [link]
"
96,"0.12.3 (August 13, 2020)
BUG FIXES:

csi: Fixed a panic in the API affecting both plugins and volumes. [link]
"
97,"0.12.2 (August 12, 2020)
FEATURES:

Multiple Vault Namespaces (Enterprise): Support for multiple Vault Namespaces [link]
Scaling Observability UI: View changes in task group scale (both manual and automatic) over time. [link]

IMPROVEMENTS:

cli: Move the module command to module [link]
consul/connect: Added support for bridge networks with Connect Native tasks [link]
consul: Added support for setting module and module on consul service checks. [link]
csi: Added a module command to manually detach unused volumes. [link]

BUG FIXES:

core: Fixed a bug where module reports success and no updates if the job contains a scaling policy [link]
api: Added missing namespace field to scaling status GET response object [link]
api: Do not allow submission of jobs of type module that include task groups with scaling stanzas [link]
build: Updated to Go 1.14.7. Go 1.14.6 contained a CVE that is not believed to impact Nomad [link]
csi: Fixed a bug where ACL tokens were not used to call internal RPCs. [link]
csi: Fixed a bug where volumes could not be detached during node drains. [link]
csi: Fixed a bug where allocations in the API were omitted from plugins and volumes. [link]
csi: Fixed a bug where controller plugin RPCs would not be retried to a second controller if available. [link]
csi: Fixed a bug where retries of plugin RPCs would not gracefully resume from checkpoints in the workflow. [link]
csi: Fixed a bug causing errors during client deregistration if CSI node plugins did not fingerprint after stopping. [link]
csi: Fixed a bug where the module workflow incorrectly created target paths that should be created by the CSI plugin. [link]
csi: Fixed a bug in module where volumes attached to a node for an improperly cleaned-up allocation caused a panic in the CLI. [link]
deployments: Fixed a bug where Nomad Enterprise multi-region deployments would not leave ""pending"" status if namespaces were also in use.
vault: Fixed a bug where vault integration fails if Vault's /sys/init endpoint is disabled [link]
vault: Fixed a bug where upgrades from pre-0.11.3 that use Vault can lead to memory spikes and write large Raft messages. [link]
ui: Fixed various accessibility audit failures [link]
ui: Fixed global search navigation where job name ≠ ID [link]
ui: Fixed slow global search rendering by truncating results [link]
"
98,"SECURITY:

build: Updated to Go 1.14.6. Go 1.14.5 contained 2 CVEs which are low severity for Nomad [link]

BUG FIXES:

vault: Fixed a bug where upgrades from pre-0.11.3 that use Vault can lead to memory spikes and write large Raft messages. [link]
"
99,"0.12.1 (July 23, 2020)
SECURITY:

build: Updated to Go 1.14.6. Go 1.14.5 contained 2 CVEs which are low severity for Nomad [link]

IMPROVEMENTS:

device/nvidia: Added a plugin config option to disable the plugin [link]

BUG FIXES:

core: Fixed an atomicity bug where a job may fail to start if leadership transition occured while processing the job [link]
core: Fixed a regression bug where jobs with group level networking stanza fail to be scheduled with ""missing network"" constraint error [link]
core (Enterprise): Fixed a bug where users were not given full 6 hours to apply initial license when upgrading from unlicensed versions of Nomad. [link]
client: Fixed a bug where module client configuration was ignored [link]
jobspec: Fixed validation of multi-region datacenters to allow empty region module to default to job-level module [link]
scheduler: Fixed a bug in Nomad Enterprise where canaries were not being created during multi-region deployments [link]
ui: Fixed stale namespaces after changing acl tokens [link]
ui: Fixed inclusion of allocation when opening exec window [link]
ui: Fixed layout of parameterized/periodic job title elemetns [link]
ui: Fixed order of column headers in client allocations table [link]
ui: Fixed missing namespace query param after changing acl tokens [link]
ui: Fixed exec to derive group and task when possible from allocation [link]
ui: Fixed runtime error when clicking ""Run Job"" while a prefix filter is set [link]
ui: Fixed the absence of the region query parameter on various actions, such as job stop, allocation restart, node drain. [link]
ui: Fixed issue where an orphaned child job would make it so navigating to a job detail page would hang the UI [link]
ui: Fixed issue where clicking View Raw File in a non-default region would not provide the region param resulting in a 404 [link]
vault: Fixed a bug where vault identity policies not considered in permissions check [link]
"
100,"FEATURES:
 * Preemption: Preemption is now an open source feature
 * Licensing (Enterprise): Nomad Enterprise now requires a license [link]
 * Multiregion Deployments (Enterprise): Nomad Enterprise now enables orchestrating deployments across multiple regions. [link]
 * Snapshot Backup and Restore: Nomad eases disaster recovery with new endpoints and commands for point-in-time snapshots.
 * Debug Log Archive: Nomad debug captures state and logs to facilitate support [link]
 * Container Network Interface (CNI): Support for third-party vendors using the CNI plugin system. [link]
 * Multi-interface Networking: Support for scheduling on specific network interfaces. [link]
 * Consul Connect Native: Support for running Consul Connect Native tasks. [link]
 * Global Search: Access jobs and clients from anywhere in the UI using the always available global search bar. [link]
 * Monitor UI: Stream client and agent logs from the UI just like you would with the nomad monitor CLI command. [link]
 * Scaling UI: Quickly adjust the count of a task group from the UI for task groups with a scaling declaration. [link]
BACKWARDS INCOMPATIBILITIES:
 * driver/docker: The Docker driver no longer allows binding host volumes by default.
   Operators can set module module plugin configuration to restore previous permissive behavior. [link]
 * driver/qemu: The Qemu driver requires images to reside in a operator-defined paths allowed for task access. [link]
IMPROVEMENTS:

core: Support for persisting previous task group counts when updating a job [link]
core: Block Job.Scale actions when the job is under active deployment [link]
api: Better error messages around Scaling->Max [link]
api: Persist previous count with scaling events [link]
api: Support querying for jobs and allocations across all namespaces [link]
api: New module endpoint returns diagnostic information about the host [link]
build: Updated to Go 1.14.4 [link]
build: Switched to Go modules for dependency management [link]
connect: Infer service task parameter where possible [link]
server: Added module config to tweak Raft related timeouts [link]

BUG FIXES:

cli: Fixed malformed alloc status address list when listing more than 1 address [link]
client: Fixed a bug where stdout/stderr were not properly reopened for community task drivers [link]
client: Fixed a bug where batch job sidecars may be left running after the main task completes [link]
connect: Fixed a bug where custom module definitions were being shared [link]
csi: Fixed a bug where module and module requests were not receiving volume context [link]
driver/docker: Fixed a bug to set correct value for module when using module [link]
ui: The log streamer will now always follow logs when the current scroll position is the end of the buffer. [link]
ui: The task group detail page no longer makes excessive requests to the allocation and stats endpoints. [link]
ui: Polling endpoints that have yet to be fetched normally works as expected (regression from 0.11.3). [link]
"
101,"FEATURES:
 * Preemption: Preemption is now an open source feature
 * Licensing (Enterprise): Nomad Enterprise now requires a license [link]
 * Multiregion Deployments (Enterprise): Nomad Enterprise now enables orchestrating deployments across multiple regions. [link]
 * Snapshot Backup and Restore: Nomad eases disaster recovery with new endpoints and commands for point-in-time snapshots.
 * Debug Log Archive: Nomad debug captures state and logs to facilitate support [link]
 * Container Network Interface (CNI): Support for third-party vendors using the CNI plugin system. [link]
 * Multi-interface Networking: Support for scheduling on specific network interfaces. [link]
 * Consul Connect Native: Support for running Consul Connect Native tasks. [link]
 * Global Search: Access jobs and clients from anywhere in the UI using the always available global search bar. [link]
 * Monitor UI: Stream client and agent logs from the UI just like you would with the nomad monitor CLI command. [link]
 * Scaling UI: Quickly adjust the count of a task group from the UI for task groups with a scaling declaration. [link]
BACKWARDS INCOMPATIBILITIES:
 * driver/docker: The Docker driver no longer allows binding host volumes by default.
   Operators can set module module plugin configuration to restore previous permissive behavior. [link]
 * driver/qemu: The Qemu driver requires images to reside in a operator-defined paths allowed for task access. [link]
IMPROVEMENTS:

core: Support for persisting previous task group counts when updating a job [link]
core: Block Job.Scale actions when the job is under active deployment [link]
api: Better error messages around Scaling->Max [link]
api: Persist previous count with scaling events [link]
api: Support querying for jobs and allocations across all namespaces [link]
api: New module endpoint returns diagnostic information about the host [link]
build: Updated to Go 1.14.4 [link]
server: Added module config to tweak Raft related timeouts [link]

BUG FIXES:

cli: Fixed malformed alloc status address list when listing more than 1 address [link]
client: Fixed a bug where stdout/stderr were not properly reopened for community task drivers [link]
client: Fixed a bug where batch job sidecars may be left running after the main task completes [link]
csi: Fixed a bug where module and module requests were not receiving volume context [link]
driver/docker: Fixed a bug to set correct value for module when using module [link]
ui: The log streamer will now always follow logs when the current scroll position is the end of the buffer. [link]
ui: The task group detail page no longer makes excessive requests to the allocation and stats endpoints. [link]
ui: Polling endpoints that have yet to be fetched normally works as expected (regression from 0.11.3). [link]
"
102,"0.12.0 (Unreleased)
FEATURES:
 * Preemption: Preemption is now an open source feature
 * Licensing (Enterprise): Nomad Enterprise now requires a license [link]
 * Multiregion Deployments (Enterprise): Nomad Enterprise now enables orchestrating deployments across multiple regions. [link]
 * Snapshot Backup and Restore: Nomad eases disaster recovery with new endpoints and commands for point-in-time snapshots.
 * Debug Log Archive: Nomad debug captures state and logs to facilitate support [link]
 * Container Network Interface (CNI): Support for third-party vendors using the CNI plugin system. [link]
 * Multi-interface Networking: Support for scheduling on specific network interfaces. [link]
 * Consul Connect Native: Support for running Consul Connect Native tasks. [link]
 * Global Search: Access jobs and clients from anywhere in the UI using the always available global search bar. [link]
 * Monitor UI: Stream client and agent logs from the UI just like you would with the nomad monitor CLI command. [link]
 * Scaling UI: Quickly adjust the count of a task group from the UI for task groups with a scaling declaration. [link]
BACKWARDS INCOMPATIBILITIES:
 * driver/docker: The Docker driver no longer allows binding host volumes by default.
   Operators can set module module plugin configuration to restore previous permissive behavior. [link]
 * driver/qemu: The Qemu driver requires images to reside in a operator-defined paths allowed for task access. [link]
IMPROVEMENTS:

core: Support for persisting previous task group counts when updating a job [link]
core: Block Job.Scale actions when the job is under active deployment [link]
api: Persist previous count with scaling events [link]
api: Support querying for jobs and allocations across all namespaces [link]
build: Updated to Go 1.14.4 [link]
server: Added module config to tweak Raft related timeouts [link]

BUG FIXES:

cli: Fixed malformed alloc status address list when listing more than 1 address [link]
client: Fixed a bug where stdout/stderr were not properly reopened for community task drivers. [link]
csi: Fixed a bug where module and module requests were not receiving volume context [link]
driver/docker: Fixed a bug to set correct value for module when using module [link]
ui: The log streamer will now always follow logs when the current scroll position is the end of the buffer. [link]
ui: The task group detail page no longer makes excessive requests to the allocation and stats endpoints. [link]
ui: Polling endpoints that have yet to be fetched normally works as expected (regression from 0.11.3). [link]
"
103,"FEATURES:
 * Preemption: Preemption is now an open source feature
 * Licensing (Enterprise): Nomad Enterprise now requires a license [link]
 * Multiregion Deployments (Enterprise): Nomad Enterprise now allows running deployments to multiple regions. [link]
 * Snapshot Backup and Restore: Nomad eases disaster recovery with new endpoints and commands for point-in-time snapshots.
 * Container Network Interface (CNI): Support for third-party vendors using the CNI plugin system. [link]
 * Multi-interface Networking: Support for scheduling on specific network interfaces. [link]
IMPROVEMENTS:

core: Support for persisting previous task group counts when updating a job [link]
core: Block Job.Scale actions when the job is under active deployment [link]
api: Persist previous count with scaling events [link]
api: Support querying for jobs and allocations across all namespaces [link]
build: Updated to Go 1.14.4 [link]
server: Added module config to tweak Raft related timeouts [link]

BUG FIXES:

cli: Fixed malformed alloc status address list when listing more than 1 address [link]
client: Fixed a bug where stdout/stderr were not properly reopened for community task drivers. [link]
driver/docker: Fixed a bug to set correct value for module when using module [link]
"
104,"IMPROVEMENTS:

build: Updated to Go 1.14.3 [link]
csi: Return better error messages [link] [link]
csi: Move volume claim releases out of evaluation workers [link]
csi: Added support for module and module [link]
driver/docker: Added support for module configuration in docker task driver [link]
logging: Remove spurious error log on task shutdown [link]
ui: Added filesystem browsing for allocations [link]

BUG FIXES:

core: Fixed a bug impacting performance of scheduler on a server after it steps down [link]
core: Fixed a bug where new leader may take a long time until it can process requests [link]
core: Fixed a bug where stop_after_client_disconnect could cause the server to become unresponsive [link
core: Fixed a bug where an internal metadata, ClusterID, may not be initialized properly upon a slow server upgrade [link]
api: Fixed a bug where setting connect sidecar task resources could fail [link]
client: Fixed a bug where artifact downloads failed on redirects [link]
csi: Validate empty volume arguments in API. [link]
"
105,"FEATURES:
 * Task dependencies UI: task lifecycle charts and details
IMPROVEMENTS:

core: Added support for a per-group policy to stop tasks when a client is disconnected [link]
core: Allow spreading allocations as an alternative to binpacking [link]
client: Improve AWS CPU performance fingerprinting [link]
csi: Added support for volume secrets [link]
csi: Added periodic garbage collection of plugins and volume claims [link]
csi: Improved performance of volume claim releases by moving work out of scheduler [link]
driver/docker: Added support for custom runtimes [link]
ui: Added ACL-checking to conditionally turn off exec button [link]
ui: Added ACL-checking to conditionally turn off exec button [link]
ui: CSI searchable volumes and plugins pages [link]
ui: CSI plugins list and etail pages [link] [link]
ui: CSI volume constraints table [link]

BUG FIXES:

core: job scale status endpoint was returning incorrect counts [link]
core: Fixed bugs related to periodic jobs scheduled during daylight saving transition periods [link]
core: Fixed a bug where scores for allocations were biased toward nodes with resource reservations [link]
api: api.ScalingEvent struct was missing .Count [link]
api: validate scale count value is not negative [link]
api: autoscaling policies should not be returned for stopped jobs [link]
client: Fixed a bug where an multi-task allocation maybe considered unhealthy if some tasks are slow to start [link]
csi: Fixed checking of volume validation responses from plugins [link]
csi: Fixed counting of healthy and expected plugins after plugin job updates or stops [link]
csi: Added checkpointing to volume claim release to avoid unreleased claims on plugin errors [link]
driver/docker: Fixed a bug preventing garbage collecting unused docker images [link]
jobspec: autoscaling policy block should return a parsing error multiple module blocks are provided [link]
ui: Fixed a bug where exec popup had incorrect URL for jobs where name ≠ id [link]
ui: Fixed a timeout issue where if the log stream request to a client eventually returns but only after the timeout it never gets closed [link]
ui: Setting a namespace on Volumes or Jobs persists that namespace choice when switching to another namespace-away page [link]
ui: Fixed a bug where clicking stdout or stderr when already on that clicked view would pause log streaming [link]
ui: Fixed a race condition that made swithing from stdout to stderr too quickly show an error [link]
ui: Switching namespaces now redirects to Volumes instead of Jobs when on a Storage page [link]
vault: Fixed a bug where nomad retries revoking tokens indefinitely [link]
"
106,"BUG FIXES:

core: Fixed a bug that only ran a task module if the task had a registered service [link]
core: Fixed a panic when garbage collecting a job with allocations spanning multiple versions [link]
agent: Fixed a bug where http server logs did not honor json log formatting, and reduced http server logging level to Trace [link]
connect: Fixed bugs where some connect parameters would be ignored [link] [link]
connect: Fixed a bug where an absent connect sidecar_service stanza would trigger panic [link]
connect: Fixed a bug where some connect proxy fields would be dropped from 'job inspect' output [link]
csi: Fixed a panic when claiming a volume for an allocation that was already garbage collected [link]
csi: Fixed a bug where CSI plugins with module capabilities were receiving an incorrect volume ID [link]
driver/docker: Fixed a bug where retrying failed docker creation may in rare cases trigger a panic [link]
scheduler: Fixed a bug in managing allocated devices for a job allocation in in-place update scenarios [link]
vault: Upgrade http2 library to fix Vault API calls that fail with module [link]
"
107,"FEATURES:
 * Container Storage Interface [beta]: Nomad has expanded support
   of stateful workloads through support for CSI plugins.
 * Exec UI: an in-browser terminal for connecting to running allocations.
 * Audit Logging (Enterprise): Audit logging support for Nomad
   Enterprise.
 * Scaling APIs: new scaling policy API and job scaling APIs to support external autoscalers
 * Task Dependencies: introduces module stanza with prestart and sidecar hooks for tasks within a task group
BACKWARDS INCOMPATIBILITIES:
 * driver/rkt: The Rkt driver is no longer packaged with Nomad and is instead
   distributed separately as a driver plugin. Further, the Rkt driver codebase
   is now in a separate
   link.
IMPROVEMENTS:

core: Optimized streaming RPCs made between Nomad agents [link]
build: Updated to Go 1.14.1 [link]
consul: Added support for configuring module on service stanzas. [link]
client: Updated consul-template library to v0.24.1 - added support for working with consul connect. link [link]
driver/exec: Added module option for ramdisk use [link]
jobspec: Added task environment interpolation to module [link]
jobspec: Added support for a per-task restart policy [link]
server: Added minimum quorum check to Autopilot with minQuorum option [link]
connect: Added support for specifying Envoy expose path configurations [link] [link]
connect: Added support for using Connect with TLS enabled Consul agents [link]

BUG FIXES:

core: Fixed a bug where group network mode changes were not honored [link]
core: Optimized and fixed few bugs in underlying RPC handling [link] [link]
api: Fixed a panic when canonicalizing a jobspec with an incorrect job type [link]
api: Fixed a bug where calling the node GC or GcAlloc endpoints resulted in an error EOF return on successful requests [link]
api: Fixed a bug where module (e.g. allocation stats) requests may hang in special cases after a leader election [link]
cli: Fixed a bug where module fails on Windows [link]
cli: Fixed a panic when displaying device plugins without stats [link]
cli: Fixed a bug where module command in TLS environments may fail [link]
client: Fixed a panic when running in Debian with module is empty [link]
client: Fixed a bug affecting network detection in environments that mimic the EC2 Metadata API [link]
client: Fixed a bug where a multi-task allocation maybe considered healthy despite a task restarting [link]
consul: Fixed a bug where modified Consul service definitions would not be updated [link]
connect: Fixed a bug where Connect enabled allocation would not stop after promotion [link]
connect: Fixed a bug where restarting a client would prevent Connect enabled allocations from cleaning up properly [link]
driver/docker: Fixed handling of seccomp module option [link]
driver/docker: Fixed a bug causing docker containers to use swap memory unexpectedly [link]
scheduler: Fixed a bug where changes to task group module were not persisted or displayed in plan output [link]
ui: Fixed handling of multi-byte unicode characters in allocation log view [link] [link]

Download binaries from https://releases.hashicorp.com/nomad/0.11.0/"
108,"Changes since beta2:

connect: Added support for using Connect with TLS enabled Consul agents [GH-7602]
connect: Fixed a bug where restarting a client would prevent Connect enabled allocations from cleaning up properly [GH-7643]
consul: Fixed a bug where service updating could sometimes fail [GH-7600]
scheduler: Fixed a bug where changes to task group shutdown_delay were not persisted or displayed in plan output [GH-7618]
A number of documentation updates and test improvements.

0.11.0-rc1 Binaries - https://releases.hashicorp.com/nomad/0.11.0-rc1/ "
109,"Since beta1:

connect: Added support for specifying Envoy expose path configurations
cli: Fixed a bug where nomad agent -dev fails on Windows
client: Fixed a bug affecting network detection in environments that mimic the EC2 Metadata API
driver/docker: Fixed handling of seccomp security_opts option
driver/docker: Fixed a bug causing docker containers to use swap memory unexpectedly
ui: Fixed handling of multi-byte unicode characters in allocation log view
ui: Fixed exec outside test environment
ui: Removed exec button for dead jobs
ui: Added exec-specific loading template
api: change to the /v1/job/:id/scale API [beta]
"
110,"FEATURES:
 * Container Storage Interface [beta]: Nomad has expanded support
   of stateful workloads through support for CSI plugins.
 * Exec UI [beta]: an in-browser terminal for connecting to running allocations.
 * Audit Logging (Enterprise) [beta]: Audit logging support for Nomad
   Enterprise.
 * Scaling APIs [beta]: new scaling policy API and job scaling APIs to support external autoscalers
 * Task Dependencies: introduces module stanza with prestart and sidecar hooks for tasks within a task group
BACKWARDS INCOMPATIBILITIES:
 * driver/rkt: The Rkt driver is no longer packaged with Nomad and is instead
   distributed separately as a driver plugin. Further, the Rkt driver codebase
   is now in a separate
   link.
IMPROVEMENTS:

core: Optimized streaming RPCs made between Nomad agents [link]
build: Updated to Go 1.14.1 [link]
consul: Added support for configuring module on service stanzas. [link]
client: Updated consul-template library to v0.24.1 - added support for working with consul connect. link [link]
driver/exec: Added module option for ramdisk use [link]
jobspec: Added task environment interpolation to module [link]
jobspec: Added support for a per-task restart policy [link]
server: Added minimum quorum check to Autopilot with minQuorum option [link]

BUG FIXES:

core: Fixed a bug where group network mode changes were not honored [link]
core: Optimized and fixed few bugs in underlying RPC handling [link] [link]
api: Fixed a panic when canonicalizing a jobspec with an incorrect job type [link]
api: Fixed a bug where calling the node GC or GcAlloc endpoints resulted in an error EOF return on successful requests [link]
api: Fixed a bug where module (e.g. allocation stats) requests may hang in special cases after a leader election [link]
cli: Fixed a panic when displaying device plugins without stats [link]
cli: Fixed a bug where module command in TLS environments may fail [link]
client: Fixed a panic when running in Debian with module is empty [link]
client: Fixed a bug where a multi-task allocation maybe considered healthy despite a task restarting [link]
"
111,"SECURITY:

server: Override content-type headers for unsafe content. CVE-2020-10944 [link]
"
112,"FEATURES:

api: Nomad now supports ability to remotely request /debug/pprof endpoints from a remote agent. [link]
consul/connect: Nomad may now register Consul Connect services when Consul is configured with ACLs enabled [link]
jobspec: Add module to task groups so task groups can delay shutdown after deregistering from Consul [link]

IMPROVEMENTS:

Our Windows 32-bit and 64-bit executables for this version and up will be signed with a HashiCorp cert. Windows users will no longer see a warning about an ""unknown publisher"" when running our software.
build: Updated to Go 1.12.16 [link]
cli: Included namespace in output when querying job status [link]
cli: Added option to change the name of the file created by the module command link
client: Supported AWS EC2 Instance Metadata Service Version 2 (IMDSv2) [link]
consul: Add support for service module [link]
driver/docker: Added a module parameter to disable nomad log collection [link]
server: Introduced a module config parameter to seed initial preemption configuration. [link]
scheduler: Removed penalty for allocation's previous node if the allocation did not fail. [link]
scheduler: Reduced logging verbosity during preemption [link]
ui: Updated Run Job button to be conditionally enabled according to ACLs [link]

BUG FIXES:

agent: Fixed a panic when using module on a client node [link]
agent: Fixed race condition in logging when using module command [link]
agent: Fixed a bug where module only work for a server's name instead of uuid or name [link]
core: Addressed an inconsistency where allocations created prior to 0.9 had missing fields [link]
cli: Fixed a bug where error messages appeared interleaved with help text inconsistently [link]
cli: Fixed a bug where module would cause a cli panic when no nodes where found [link]
config: Fixed a bug where agent startup would fail if the module configuration was set [link]
consul: Fixed a bug where script-based health checks would fail if the service configuration included interpolation [link]
consul/connect: Fixed a bug where Connect-enabled jobs failed to validate when service names used interpolation [link]
drivers: Fixed a bug where exec, java, and raw_exec drivers collected and emited stats every second regardless of the telemetry config [link]
driver/exec: Fixed a bug where systemd cgroup wasn't removed upon a task completion [link]
server: Fixed a deadlock that may occur when server leadership flaps very quickly [link]
scheduler: Fixed a bug that caused evicted allocs on a lost node to be stuck in running [link]
scheduler: Fixed a bug where module returned errors instead of ignoring system job updates for ineligible nodes. [link]

SECURITY:

client: Nomad will no longer pass through the module environment variable when launching a task. [link]
"
113,"FEATURES:

api: Nomad now supports ability to remotely request /debug/pprof endpoints from a remote agent. [link]
consul/connect: Nomad may now register Consul Connect services when Consul is configured with ACLs enabled [link]
jobspec: Add module to task groups so task groups can delay shutdown after deregistering from Consul [link]

IMPROVEMENTS:

Our Windows 32-bit and 64-bit executables for this version and up will be signed with a HashiCorp cert. Windows users will no longer see a warning about an ""unknown publisher"" when running our software.
build: Updated to Go 1.12.16 [link]
cli: Included namespace in output when querying job status [link]
cli: Added option to change the name of the file created by the module command link
client: Supported AWS EC2 Instance Metadata Service Version 2 (IMDSv2) [link]
consul: Add support for service module [link]
driver/docker: Added a module parameter to disable nomad log collection [link]
server: Introduced a module config parameter to seed initial preemption configuration. [link]
scheduler: Removed penalty for allocation's previous node if the allocation did not fail. [link]
scheduler: Reduced logging verbosity during preemption [link]
ui: Updated Run Job button to be conditionally enabled according to ACLs [link]

BUG FIXES:

agent: Fixed a panic when using module on a client node [link]
agent: Fixed race condition in logging when using module command [link]
agent: Fixed a bug where module only work for a server's name instead of uuid or name [link]
core: Addressed an inconsistency where allocations created prior to 0.9 had missing fields [link]
cli: Fixed a bug where error messages appeared interleaved with help text inconsistently [link]
cli: Fixed a bug where module would cause a cli panic when no nodes where found [link]
config: Fixed a bug where agent startup would fail if the module configuration was set [link]
consul: Fixed a bug where script-based health checks would fail if the service configuration included interpolation [link]
consul/connect: Fixed a bug where Connect-enabled jobs failed to validate when service names used interpolation [link]
drivers: Fixed a bug where exec, java, and raw_exec drivers collected and emited stats every second regardless of the telemetry config [link]
driver/exec: Fixed a bug where systemd cgroup wasn't removed upon a task completion [link]
server: Fixed a deadlock that may occur when server leadership flaps very quickly [link]
scheduler: Fixed a bug that caused evicted allocs on a lost node to be stuck in running [link]
scheduler: Fixed a bug where module returned errors instead of ignoring system job updates for ineligible nodes. [link]

SECURITY:

client: Nomad will no longer pass through the module environment variable when launching a task. [link]
"
114,"SECURITY:

agent: Added unauthenticated connection timeouts and limits to prevent resource exhaustion. CVE-2020-7218 [link]
server: Fixed insufficient validation for role and region for RPC connections when TLS enabled. CVE-2020-7956 [link]

IMPROVEMENTS:

build: Updated to Go 1.12.16
"
115,"FEATURES:

Nomad Monitor: New module command allows remotely following
   the logs of any Nomad Agent (clients or servers). See
   https://nomadproject.io/docs/commands/monitor.html
Docker Container Cleanup: Nomad will now automatically remove Docker
   containers for tasks leaked due to Nomad or Docker crashes or bugs.

IMPROVEMENTS:

agent: Added support for running under Windows Service Manager [link]
api: Added module field to module [link]
api: Added JSON representation of rules to policy endpoint response [link]
api: Update policy endpoint to permit anonymous access [link]
build: Updated to Go 1.12.13 [link]
cli: Show full ID in node and alloc individual status views [link]
client: Enable setting tags on Consul Connect sidecar service [link]
client: Added support for downloading artifacts from Google Cloud Storage [link]
command: Added -tls-server-name flag [link]
command: Added module command to stream logs at a specified level for debugging [link]
quota: Added support for network bandwidth quota limits in Nomad enterprise

BUG FIXES:

core: Ignore module config values if module is disabled [link]
core: Added module constraint for strict Semver 2.0 version comparisons [link]
core: Fixed server panic caused by a plan evicting and preempting allocs on a node [link]
api: Return a 404 if endpoint not found instead of redirecting to /ui/ [link]
api: Decompress web socket response body if gzipped on error responses [link]
api: Fixed a bug where some FS/Allocation API endpoints didn't return error messages [link]
api: Return 40X status code for failing ACL requests, rather than 500 [link]
cli: Made scoring column orders consistent module [link]
cli: Fixed a bug where module fails if stdout is being redirected and not a TTY [link]
cli: Fixed a bug where a cli user may fail to query FS/Allocation API endpoints if they lack module capability [link]
client: client: Return empty values when host stats fail [link]
client: Fixed a bug where a client may not restart dead internal processes upon client's restart on Windows [link]
drivers: Fixed a bug where client may panic if a restored task failed to shutdown cleanly [link]
driver/exec: Fixed a bug where exec tasks can spawn processes that live beyond task lifecycle [link]
driver/docker: Added mechanism for detecting running unexpectedly running docker containers [link]
nomad: Fixed registering multiple connect enabled services in the same task group [link]
scheduler: Changes to devices in resource stanza should cause rescheduling [link]
scheduler: Fixed a bug that allowed inplace updates after affinity or spread were changed [link]
vault: Allow overriding implicit Vault version constraint [link]
vault: Supported Vault auth role's new fields, module and module [link], [link]
"
116,"BUG FIXES:

core: Fixed server panic caused by a plan evicting and preempting allocs on a node [link]
"
117,"0.10.2 (November 22, 2019)
FEATURES:

Nomad Monitor: New module command allows remotely following
   the logs of any Nomad Agent (clients or servers). See
   https://nomadproject.io/docs/commands/monitor.html
Docker Container Cleanup: Nomad will now automatically remove Docker
   containers for tasks leaked due to Nomad or Docker crashes or bugs.

IMPROVEMENTS:

agent: Added support for running under Windows Service Manager [link]
api: Added module field to module [link]
api: Added JSON representation of rules to policy endpoint response [link]
api: Update policy endpoint to permit anonymous access [link]
build: Updated to Go 1.12.13 [link]
cli: Show full ID in node and alloc individual status views [link]
client: Enable setting tags on Consul Connect sidecar service [link]
client: Added support for downloading artifacts from Google Cloud Storage [link]
command: Added -tls-server-name flag [link]
command: Added module command to stream logs at a specified level for debugging [link]
quota: Added support for network bandwidth quota limits in Nomad enterprise

BUG FIXES:

core: Ignore module config values if module is disabled [link]
core: Added module constraint for strict Semver 2.0 version comparisons [link]
api: Return a 404 if endpoint not found instead of redirecting to /ui/ [link]
api: Decompress web socket response body if gzipped on error responses [link]
api: Fixed a bug where some FS/Allocation API endpoints didn't return error messages [link]
api: Return 40X status code for failing ACL requests, rather than 500 [link]
cli: Made scoring column orders consistent module [link]
cli: Fixed a bug where module fails if stdout is being redirected and not a TTY [link]
cli: Fixed a bug where a cli user may fail to query FS/Allocation API endpoints if they lack module capability [link]
client: client: Return empty values when host stats fail [link]
client: Fixed a bug where a client may not restart dead internal processes upon client's restart on Windows [link]
drivers: Fixed a bug where client may panic if a restored task failed to shutdown cleanly [link]
driver/exec: Fixed a bug where exec tasks can spawn processes that live beyond task lifecycle [link]
driver/docker: Added mechanism for detecting running unexpectedly running docker containers [link]
nomad: Fixed registering multiple connect enabled services in the same task group [link]
scheduler: Changes to devices in resource stanza should cause rescheduling [link]
scheduler: Fixed a bug that allowed inplace updates after affinity or spread were changed [link]
vault: Allow overriding implicit Vault version constraint [link]
vault: Supported Vault auth role's new fields, module and module [link], [link]
"
118,"BUG FIXES:

core: Fixed server panic when upgrading from 0.8 -> 0.10 and performing an
   inplace update of an allocation. [link]
api: Fixed panic when submitting Connect-enabled job without using a bridge
   network [link]
client: Fixed client panic when upgrading from 0.8 -> 0.10 and performing an
   inplace update of an allocation. [link]
"
119,"FEATURES:
 * Consul Connect: Nomad may now register Consul Connect services and
   manages an Envoy proxy sidecar to provide secured service-to-service
   communication.
 * Network Namespaces: Task Groups may now define a shared network
   namespace. Each allocation will receive its own network namespace and
   loopback interface. Ports may be forwarded from the host into the network
   namespace.
 * Host Volumes: Nomad expanded support of stateful workloads through locally mounted storage volumes.
 * UI Allocation File Explorer: Nomad UI enhanced operability with a visual file system explorer for allocations.
IMPROVEMENTS:
 * core: Added rolling deployments for service jobs by default and max_parallel=0 disables deployments [link]
 * agent: Allowed the job GC interval to be configured [link]
 * agent: Added module to be reloaded on SIGHUP [link]
 * api: Added follow parameter to file streaming endpoint to support older browsers [link]
 * client: Upgraded module to support GCP links [link]
 * client: Remove consul service stanza from module jobspec [link]
 * drivers: Exposed namespace as module environment variable in running tasks [link]
 * metrics: Added job status (pending, running, dead) metrics [link]
 * metrics: Added status and scheduling ability to client metrics [link]
 * server: Added an option to configure job GC interval [link]
 * ui: Added allocation filesystem explorer [link]
 * ui: Added creation time to evaluations table [link]
BUG FIXES:

cli: Fixed module on Windows so it works with unprivileged accounts [link]
client: Fixed a bug in client fingerprinting on 32-bit nodes [link]
client: Fixed a bug where completed allocations may re-run after client restart [link]
client: Fixed failure to start if another client is already running with the same data directory [link]
devices: Fixed a bug causing CPU usage spike when a device is detected [link]
drivers/docker: Set gc image_delay default to 3 minutes [link]
ui: Fixed a bug where the allocation log viewer would render HTML or hide content that matched XML syntax [link]
ui: Fixed a bug where allocation log viewer doesn't show all content in Firefox [link]
ui: Fixed navigation via clicking recent allocation row [link]
"
120,"FEATURES:
 * Consul Connect: Nomad may now register Consul Connect services and
   manages an Envoy proxy sidecar to provide secured service-to-service
   communication.
 * Network Namespaces: Task Groups may now define a shared network
   namespace. Each allocation will receive its own network namespace and
   loopback interface. Ports may be forwarded from the host into the network
   namespace.
 * Host Volumes: Nomad expanded support of stateful workloads through locally mounted storage volumes.
 * UI Allocation File Explorer: Nomad UI enhanced operability with a visual file system explorer for allocations.
IMPROVEMENTS:
 * core: Added rolling deployments for service jobs by default and max_parallel=0 disables deployments [link]
 * agent: Allowed the job GC interval to be configured [link]
 * agent: Added module to be reloaded on SIGHUP [link]
 * api: Added follow parameter to file streaming endpoint to support older browsers [link]
 * client: Upgraded module to support GCP links [link]
 * client: Remove consul service stanza from module jobspec [link]
 * drivers: Exposed namespace as module environment variable in running tasks [link]
 * metrics: Added job status (pending, running, dead) metrics [link]
 * metrics: Added status and scheduling ability to client metrics [link]
 * server: Added an option to configure job GC interval [link]
 * ui: Added allocation filesystem explorer [link]
 * ui: Added creation time to evaluations table [link]
BUG FIXES:

cli: Fixed module on Windows so it works with unprivileged accounts [link]
client: Fixed a bug in client fingerprinting on 32-bit nodes [link]
client: Fixed a bug where completed allocations may re-run after client restart [link]
client: Fixed failure to start if another client is already running with the same data directory [link]
devices: Fixed a bug causing CPU usage spike when a device is detected [link]
drivers/docker: Set gc image_delay default to 3 minutes [link]
ui: Fixed navigation via clicking recent allocation row [link]
"
121,"SECURITY:

core: Redacted replication token in agent/self API endpoint.  The replication token is a management token that can be used for further privilege escalation. CVE-2019-12741 [link]
core: Fixed a bug where a user may start raw_exec task on clients despite driver being disabled. CVE-2019-15928 [link] [link]
enterprise/acl: Fix ACL access checks in Nomad Enterprise where users may query allocation information and perform lifecycle actions in namespaces they are not authorized to. CVE-2019-16742 [link]

IMPROVEMENTS:

client: Reduced memory footprint of nomad logging and executor processes [link]

BUG FIXES:

core: Fixed a bug where scheduler may schedule an allocation on a node without required drivers [link]
client: Fixed a bug where completed allocations may re-run after client restart [link] [link]
client: Fixed a panic that may occur when an module is initiated while process is terminating [link]
devices: Fixed a bug causing CPU usage spike when a device is detected [link]
drivers: Fixed port mapping for docker and qemu drivers [link]
drivers/docker: Fixed a case where a module would never time out [link]
ui: Fixed a bug where allocation log viewer doesn't show all content. [link]
"
122,"SECURITY:
client/template: Fix security vulnerabilities associated with task template rendering (CVE-2019-14802), introduced in Nomad 0.5.0 [GH-6055] [GH-6075]
client/artifact: Fix a privilege escalation in the exec driver exploitable by artifacts with setuid permissions (CVE-2019-14803) [GH-6176]
BACKWARDS INCOMPATIBILITIES:
client/template: When rendering a task template, only task environment variables are included by default. [GH-6055]
client/template: When rendering a task template, the plugin function is no longer permitted by default and will raise an error. [GH-6075]
client/template: When rendering a task template, path parameters for the file function will be restricted to the task directory by default. Relative paths or symlinks that point outside the task directory will raise an error. [GH-6075]
IMPROVEMENTS:
core: Added create and modify timestamps to evaluations [GH-5881]
BUG FIXES:
api: Fixed job region to default to client node region if none provided [GH-6064]
ui: Fixed links containing IPv6 addresses to include required square brackets [GH-6007]
vault: Fix deadlock when reloading server Vault configuration [GH-6082]"
123,"IMPROVEMENTS:
 * api: Inferred content type of file in alloc filesystem stat endpoint [link]
 * api: Used region from job hcl when not provided as query parameter in job registration and plan endpoints [link]
 * core: Deregister nodes in batches rather than one at a time [link]
 * core: Removed deprecated upgrade path code pertaining to older versions of Nomad [link]
 * core: System jobs that fail because of resource availability are retried when resources are freed [link]
 * core: Support reloading log level in agent via SIGHUP [link]
 * client: Improved task event display message to include kill time out [link]
 * client: Removed extraneous information to improve formatting for hcl parsing error messages [link]
 * driver/docker: Added logging defaults to use json-file log driver with log rotation [link]
 * metrics: Added namespace label as appropriate to metrics [link]
 * ui: Added page titles [link]
 * ui: Added buttons to copy client and allocation UUIDs [link]
 * ui: Moved client status, draining, and eligibility fields into single state column [link]
BUG FIXES:

core: Ensure plans are evaluated against a new enough snapshot index [link]
core: Handle error case when attempting to stop a non-existent allocation [link]
core: Improved job spec parsing error messages for variable interpolation failures [link]
core: Fixed a bug where nomad log and exec requests may time out or fail in tls enabled clusters [link].
client: Fixed a bug where consul service health checks may flap on client restart [link]
client: Fixed a bug where too many check-based restarts would deadlock the client [link]
client: Fixed a bug where successfully completed tasks may restart on client restart [link]
client: Fixed a bug where stats of external driver plugins aren't collected on plugin restart [link]
client: Fixed an issue where an alloc remains in pending state if nomad fails to create alloc directory [link]
client: Fixed an issue where client may kill running allocs if the client and the leader are restarting simultaneously [link]
client: Fixed regression that prevented registering multiple services with the same name but different ports in Consul correctly [link]
client: Fixed a race condition when performing local task restarts that would result in incorrect task not found errors on Windows [link]
client: Reduce CPU usage on clients running many tasks on Linux [link]
client: Updated consul-template dependency to address issue with anonymous requests [link]
driver: Fixed an issue preventing local task restarts on Windows [link]
driver: Fixed an issue preventing external driver plugins from launching executor process [link]
driver/docker: Fixed a bug mounting relative paths on Windows [link]
driver/exec: Upgraded libcontainer dependency to avoid zombie module processes [link]
metrics: Added metrics for raft and state store indexes. [link] 
metrics: Upgrade prometheus client to avoid label conflicts [link]
ui: Fixed ability to click sort arrow to change sort direction [link]
"
