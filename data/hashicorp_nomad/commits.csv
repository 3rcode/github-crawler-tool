Index,Message,Description
1,api: set the job submission during job reversion (#17097)," api: set the job submission during job reversion  This PR fixes a bug where the job submission would always be nil when a job goes through a reversion to a previous version. Basically we need to detect when this happens, lookup the submission of the job version being reverted to, and set that as the submission of the new job being created.  e2e: add e2e test for job submissions during reversion  This e2e test ensures a reverted job inherits the job submission associated with the version of the job being reverted to."
2,full task cleanup when alloc prerun hook fails (#17104),"to avoid leaking task resources (e.g. containers, iptables) if allocRunner prerun fails during restore on client restart. now if prerun fails, TaskRunner.MarkFailedKill() will only emit an event, mark the task as failed, and cancel the tr's killCtx, so then ar.runTasks() -> tr.Run() can take care of the actual cleanup. removed from (formerly) tr.MarkFailedDead(), now handled by tr.Run():  * set task state as dead  * save task runner local state  * task stop hooks also done in tr.Run() now that it's not skipped:  * handleKill() to kill tasks while respecting    their shutdown delay, and retrying as needed    * also includes task preKill hooks  * clearDriverHandle() to destroy the task    and associated resources  * task exited hooks"
3,"Revert ""ci: use module option (#16730)"" (#17116)","This reverts commit 1721e687c0832bea3d9b7eec5dcd3c4e7a924d71. The change was expected to solve the sporadic problems we were having with Backport Assistant, but it end up creating even more failures."
4,docs: add note to upgrade guide about yanked version (#17115),Nomad 1.5.4 shipped with a logmon bug that we rolled out a fix for in Nomad 1.5.5. Unfortunately we can't yank the release but we should leave a note in the upgrade guide telling users to avoid it.
5,Correct the status description and modify time of canceled evals. (#17071),Fix for #17070. Corrected the status description and modify time of evals which are canceled due to another eval having completed in the meantime.
6,"[ui, deployments] Job status for System Jobs (#17046)","  System jobs get a panel and lost status reinstated   Leveraging nodes and not worrying about rescheds for system jobs   Consistency w restarted as well   Text shadow removed and early return where possible   System jobs added to the Historical Click list   System alloc and client summary panels removed   Bones of some new system jobs tests   [ui, deployments] handle node read permissions for system job panel (#17073)   Do the next-best-thing when we cant read nodes for system jobs   Whitespace control handlebars expr   Simplifies system jobs to not attempt to show a desired count, since it is a particularly complex number depending on constraints, number of nodes, etc.   [ui, deployments] Fix order in which allocations are ascribed to the status chart (#17063)   Discovery of alloc.isOld   Correct sorting and better types   A more honest walk-back that prioritizes running and pending allocs first   Test scenario for descending-order allocs to show   isOld mandates that we set a job version for our created job. Could also do this in the factory but maybe side-effecty   Type simplification   Fixed up a test that needed system job summary to be updated   Tests for modifications to the job summary   Explicitly mark the service jobs in test as not-deploying "
7,minor typo; 1.3.x not 1.13.x (#17101),
8,post release 1.5.5 (#17098)," changelog entries for 1.5.5 and missing merge of changelog for 1.5.4, 1.4.9,   and 1.3.14 note on deprecation of module field"
9,connect: use heuristic to detect sidecar task driver (#17065)," connect: use heuristic to detect sidecar task driver  This PR adds a heuristic to detect whether to use the podman task driver for the connect sidecar proxy. The podman driver will be selected if there is at least one task in the task group configured to use podman, and there are zero tasks in the group configured to use docker. In all other cases the task driver defaults to docker. After this change, we should be able to run typical Connect jobspecs (e.g. nomad job init [-short] -connect) on Clusters configured with the podman task driver, without modification to the job files. Closes #17042  golf: cleanup driver detection logic"
10,scale: fixed a bug where evals could be created with wrong type. (#17092),"The job scale RPC endpoint hard-coded the eval creation to use the type of service. This meant scaling events triggered on jobs of type batch would create evaluations with the wrong type, which does not seem to cause any problems, just confusion when correlating the two."
11,logs: fix missing allocation logs after update to Nomad 1.5.4 (#17087),"When the server restarts for the upgrade, it loads the module from the Raft snapshot/logs. The jobspec has long since been parsed, so none of the guards around the default value are in play. The empty field value for module is the zero value, which is false. This doesn't impact any running allocation because we don't replace running allocations when either the client or server restart. But as soon as any allocation gets rescheduled (ex. you drain all your clients during upgrades), it'll be using the module that the server has, which has module, and logs will not be collected. This changeset fixes the bug by adding a new field module which defaults to false (so that the zero value works), and deprecates the old field. Fixes #17076"
12,client: fix job_max_source_size client config name (#17067),"Intended to be job_max_source_size, rather than max_job_source_size. This way it fits better with existing client config options related to jobs."
13,docs: move CNI reference plugins installation to CNI overview page (#17068)," docs: move CNI reference plugins installation to CNI overview page  This PR moves the instruction steps for install the CNI reference plugins from the Consul Mesh integration page to the general Networking CNI page. These plugins are required for bridge networking, not just Consul Mesh, so it makes sense to have them on the general CNI page. Closes #17038  docs: fix a link to post install steps"
14,docs: update artifact jobspec sshkey example path. (#17077),
15,dep: update from jwt/v4 to jwt/v5 (#17062),"Their release notes are here: https://github.com/golang-jwt/jwt/releases Seemed wise to upgrade before we do even more with JWTs. For example this upgrade would have mattered if we already implemented common JWT claims such as expiration. Since we didn't rely on any claim verification this upgrade is a noop... ...except for 1 test that called module! Removing that assertion seems scary, but it didn't actually do anything because we didn't implement any of the standard claims it validated: https://github.com/golang-jwt/jwt/blob/v4.5.0/map_claims.go#L120-L151 So functionally this major upgrade is a noop."
16,[deps] Update consul-template to v0.31.0 (#16908), Update consul-template to v0.31.0 Add changelog
17,build: upgrade from go 1.20.3 to 1.20.4 (#17056),Includes CVE fixes that do not impact Nomad: https://groups.google.com/g/golang-announce/c/MEb0UyuSMsU
18,Add WriterUI (#17051),"This special purpose UI provides commands that can benefit from direct access to the io.Reader and io.Writers of the base cli.Ui. It can traverse a chain of ColoredUis to find the base. Currently, it can retrieve writers from a cli.BasicUi (or cli.MockUi for testing). Renames ui.go and ui_test.go to log_ui.go and log_ui_test.go"
19,connect: remove unusable path for fallback envoy image names (#17044),"This PR does some cleanup of an old code path for versions of Consul that did not support reporting the supported versions of Envoy in its API. Those versions are no longer supported for years at this point, and the fallback version of envoy hasn't been supported by any version of Consul for almost as long. Remove this code path that is no longer useful."
20,connect: use explicit docker.io prefix in default envoy image names (#17045),"This PR modifies references to the envoyproxy/envoy docker image to explicitly include the docker.io prefix. This does not affect existing users, but makes things easier for Podman users, who otherwise need to specify the full name because Podman does not default to docker.io"
21,"Revert ""hashicorp/go-msgpack v2 (#16810)"" (#17047)",This reverts commit 8a98520d56eed3848096734487d8bd3eb9162a65.
22,connect: do not restrict auto envoy version to docker task driver (#17041),"This PR updates the envoy_bootstrap_hook to no longer disable itself if the task driver in use is not docker. In other words, make it work for podman and other image based task drivers. The hook now only checks that  the task is a connect sidecar the task.config block contains an ""image"" field"
23,"[ui, deployments] Restarted and Rescheduled panel cells (#16972)","  Status panel shows failed and lost, but probably dont have the condition quite right   Rescheduled and Replaced cells instead of a general failed/lost one   Tests moving to acceptance   Fixed desiredTotal and added acceptance test for restarted   moved integration test into acceptance test generally   Now that we represent Lost in the graph, have to make our unplaced testcase as Unknown   No need to declare new vars for immediately returned getters   Literal restart and resched add to the tallies, rather than 'would have but ran out of attampts' like before   Testfixes now that weve redefined what restarts and reschedules are indicated by "
24,add copywrite headers commit to ignore-revs config file (#17037),
25,"[ui, deployments] Don't separate allocation groups based on their deployment health unless they're ""running"" (#17016)",  Group up non-running allocs regardless of deploymenthealth   Better asynchrony in test 
26,percy-specific css to hide table cells in the job status panel acceptance test (#17021),
27,Move the token JWT console log out of an interator (#17010),
28,docs: add more notes about artifact breaking changes in 1.5.0 (#17005),  changelog: note artifact breaking changes for 1.5.0   docs: add note about environment variables to artifact job spec docs   Update website/content/docs/job-specification/artifact.mdx   Co-authored-by: Luiz Aoqui link  Co-authored-by: Luiz Aoqui link
29,deps: update go-bexpr from 0.1.11 to 0.1.12 (#16991),Pulls in https://github.com/hashicorp/go-bexpr/pull/38 Fixes #16758
30,testing: improve fidelity of mock driver task restore (#16990),"While working on client status update improvements, I encountered problems getting tests with the mock driver to correctly restore. Unlike typical drivers the mock driver doesn't have an external source of truth for whether the task is running (ex. making API calls to module or looking for a running PID), and so in order to make up that information, it re-parses the original task config. But the taskrunner doesn't call the encoding step for module, only module, so the task config the mock driver gets is missing data. Update the mock driver to stash the ""external"" state in the task state that we'll get from the task runner, so that we don't have to try to recover from the original module anymore. This should bring the mock driver closer to the behavior of the other drivers."
31,docs: use appropriate file extension for autoscaler agent config. (#16993),
32,[ui] Fixed: Evaluations sidebar/response not scrollable (#16960),  Sets up a CSS grid for Evaluations sidebar   Flex seems more sensible for this actually   Tighten up the header margin   Percy found a diff; the expand button wasnt showing for view logs sidebar 
33,vars: ensure struct reciever names are consistent. (#16995),
34,scale: do not allow scaling of jobs with type system. (#16969),
35,tools: update dependencies and use tree set (#16974),  tools: bump go mod deps for tools module   tools: use treeset in tools/missing 
36,"[ui, feature] Job Page Redesign (#16932)","  [ui] Service job status panel (#16134)   it begins   Hacky demo enabled   Still very hacky but seems deece   Floor of at least 3 must be shown   Width from on-high   Other statuses considered   More sensible allocTypes listing   Beginnings of a legend   Total number of allocs running now maps over job.groups   Lintfix   base the number of slots to hold open on actual tallies, which should never exceed totalAllocs   Versions get yer versions here   Versions lookin like versions   Mirage fixup   Adds Remaining as an alloc chart status and adds historical status option   Get tests passing again by making job status static for a sec   Historical status panel click actions moved into their own component class   job detail tests plz chill   Testing if percy is fickle   Hyper-specfic on summary distribution bar identifier   Perhaps the 2nd allocSummary item no longer exists with the more accurate afterCreate data   UI Test eschewing the page pattern   Bones of a new acceptance test   Track width changes explicitly with window-resize   testlintfix   Alloc counting tests   Alloc grouping test   Alloc grouping with complex resizing   Refined the list of showable statuses   PR feedback addressed   renamed allocation-row to allocation-status-row   [ui, job status] Make panel status mode a queryParam (#16345)   queryParam changing   Test for QP in panel   Adding @tracked to legacy controller   Move the job of switching to Historical out to larger context   integration test mock passed func   [ui] Service job deployment status panel (#16383)   A very fast and loose deployment panel   Removing Unknown status from the panel   Set up oldAllocs list in constructor, rather than as a getter/tracked var   Small amount of template cleanup   Refactored latest-deployment new logic back into panel.js   Revert now-unused latest-deployment component   margin bottom when ungrouped also   Basic integration tests for job deployment status panel   Updates complete alloc colour to green for new visualizations only (#16618)   Updates complete alloc colour to green for new visualizations only   Pale green instead of dark green for viz in general   [ui] Job Deployment Status: History and Update Props (#16518)   Deployment history wooooooo   Styled deployment history   Update Params   lintfix   Types and groups for updateParams   Live-updating history   Harden with types, error states, and pending states   Refactor updateParams to use trigger component   [ui] Deployment History search (#16608)   Functioning searchbox   Some nice animations for history items   History search test   Fixing up some old mirage conventions   some a11y rule override to account for scss keyframes   Split panel into deploying and steady components   HandleError passed from job index   gridified panel elements   TotalAllocs added to deploying.js   Width perc to px   [ui] Splitting deployment allocs by status, health, and canary status (#16766)   Initial attempt with lots of scratchpad work   Style mods per UI discussion   Fix canary overflow bug   Dont show canary or health for steady/prev-alloc blocks   Steady state   Thanks Julie   Fixes steady-state versions   Legen, wait for it...   Test fixes now that we have a minimum block size   PR prep   Shimmer effect on pending and unplaced allocs (#16801)   Shimmer effect on pending and unplaced   Dont show animation in the legend   [ui, deployments] Linking allocblocks and legends to allocation / allocations index routes (#16821)   Conditional link-to component and basic linking to allocations and allocation routes   Job versions filter added to allocations index page   Steady state legends link   Legend links   Badge count links for versions   Fix: faded class on steady-state legend items   version link now wont show completed ones   Fix a11y violations with link labels   Combining some template conditional logic   [ui, deployments] Conversions on long nanosecond update params (#16882)   Conversions on long nanosecond nums   Early return in updateParamGroups comp prop   [ui, deployments] Mirage Actively Deploying Job and Deployment Integration Tests (#16888)   Start of deployment alloc test scaffolding   Bit of test cleanup and canary for ungrouped allocs   Flakey but more robust integrations for deployment panel   De-flake acceptance tests and add an actively deploying job to mirage   Jitter-less alloc status distribution removes my bad math   bugfix caused by summary.desiredTotal non-null   More interesting mirage active deployment alloc breakdown   Further tests for previous-allocs row   Previous alloc legend tests   Percy snapshots added to integration test   changelog "
37,Demo: NFS CSI Plugins (#16875),"Demo (and easily reproduce, locally) a CSI setup with separate controller and node plugins. This runs NFS in a container backed by a host volume and CSI controller and node plugins from rocketduck:   gitlab.com/rocketduck/csi-plugin-nfs Co-authored-by: Florian Apolloner link Co-authored-by: Tim Gross link"
38,services: un-mark group services as deregistered if restart hook runs (#16905), services: un-mark group services as deregistered if restart hook runs  This PR may fix a bug where group services will never be deregistered if the group undergoes a task restart.   e2e: add test case for restart and deregister group service   cl: add cl   e2e: add wait for service list call 
39,build(deps): bump github.com/shoenig/test from 0.6.3 to 0.6.4 in /api (#16895),Bumps link from 0.6.3 to 0.6.4. - link - link  updated-dependencies: - dependency-name: github.com/shoenig/test   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
40,copywrite: excempt example assets from copywrite headers (#16971),
41,build(deps): bump github.com/hashicorp/vault/api from 1.8.3 to 1.9.1 (#16966),Bumps link from 1.8.3 to 1.9.1. - link - link - link  updated-dependencies: - dependency-name: github.com/hashicorp/vault/api   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
42,logs: allow disabling log collection in jobspec (#16962),Some Nomad users ship application logs out-of-band via syslog. For these users having module (and module) running is unnecessary overhead. Allow disabling the logmon and pointing the task's stdout/stderr to /dev/null. This changeset is the first of several incremental improvements to log collection short of full-on logging plugins. The next step will likely be to extend the internal-only task driver configuration so that cluster administrators can turn off log collection for the entire driver.  Fixes: #11175 Co-authored-by: Thomas Weber link
43,fix host port handling for ipv6 (#16723),
44,cni: fix plugin fingerprinting versions (#16776),"CNI plugins v1.2.0 and above output a second line, containing supported protocol versions."
45,cli: fix panic on job plan when -diff=false (#16944),"PR #14492 introduced a new check to return 0 when the module command returns a diff of type module. But the module CLI flag was also being used to control whether the plan request should return the diff of not instead of just controlling if the diff was printed. This means that when module is set the response does not include any diff information, and so the new check panics. This commit fixes the problem by always requesting a diff and using the module only for controlling output, as it's currently documented."
46,docs: fix keyring path in install docs (#16946),
47,fix: added landlock access to /usr/libexec for getter (#16900),
48,docs: add missing field Capabilities to Namespace API (#16931),
49,changelog: add changelog update for vendor label for linux packaging (#16071),
50,docs: add missing API field JobACL and fix workload identity headers (#16930),
51,Updates to the UI block (#16328)," On the Consul address, following the recommendation for the HTTPS    API on port 8501. Add the hint to use HEX values for the colors."
52,allocrunner: prevent panic on network manager (#16921),
53,Update metric names (#16894),Dashboard uses old metric names
54,"rpc: use ""+"" concatination in hot path RPC rate limit metrics. (#16923)",
55,ui: fix notification service in token controller (#16918),"Remove unneeded service injection. This service is not being used in this controller and currently only exists in module, causing module to break."
56,test: fix quota command autocomplete (#16917),
57,[scheduler] Honor module for distinct hosts constraint (#16907), Honor value for distinct_hosts constraint Add test for feasibility checking for module   Co-authored-by: Michael Schurter link
58,hashicorp/go-msgpack v2 (#16810)," Upgrade from hashicorp/go-msgpack v1.1.5 to v2.1.0  Fixes #16808   Update hashicorp/net-rpc-msgpackrpc to v2 to match go-msgpack   deps: use go-msgpack v2.0.0   go-msgpack v2.1.0 includes some code changes that we will need to investigate furthere to assess its impact on Nomad, so keeping this dependency on v2.0.0 for now since it's no-op.  Co-authored-by: Luiz Aoqui link"
59,users: eliminate nobody user memoization (#16904),"This PR eliminates code specific to looking up and caching the uid/gid/user.User object associated with the nobody user in an init block. This code existed before adding the generic users cache and was meant to optimize the one search path we knew would happen often. Now that we have the cache, seems reasonable to eliminate this init block and use the cache instead like for any other user. Also fixes a constraint on the podman (and other) drivers, where building without CGO became problematic on some OS like Fedora IoT where the nobody user cannot be found with the pure-Go standard library. Fixes github.com/hashicorp/nomad-driver-podman/issues/228"
60,docs: disable secret scanning for documentation content (#16903),"Examples in the documentation frequently include tokens, including Vault tokens which end up triggering GitHub's secret scanner. Remove these from consideration so that we don't get false positive reports."
61,license: show Terminated field in module command (#16892),
62,client: allow module configuration (#16827),"Adds a new configuration to clients to optionally allow them to drain their workloads on shutdown. The client sends the module RPC targeting itself and then monitors the drain state as seen by the server until the drain is complete or the deadline expires. If it loses connection with the server, it will monitor local client status instead to ensure allocations are stopped before exiting."
63,"[ui, compliance] Remove the newline after .hbs copyright headers (#16861)",  Remove the newline after .hbs copyright headers   Trying with the whitespace control char 
64,drain: use client status to determine drain is complete (#14348),"If an allocation is slow to stop because of module or module, the node drain is marked as complete prematurely, even though drain monitoring will continue to report allocation migrations. This impacts the UI or API clients that monitor node draining to shut down nodes. This changeset updates the behavior to wait until the client status of all drained allocs are terminal before marking the node as done draining."
65,docs: add node meta command docs (#16828), docs: add node meta command docs  Fixes #16758   it helps if you actually add the files to git   fix typos and examples vs usage 
66,fix: typo (#16873),
67,E2E: clarify drain module and module flag behaviors (#16868),"The module and module flag for the module command only cause the draining to ignore the module block's healthy deadline, max parallel, etc. These flags don't have anything to do with the module or module options of the jobspec. This changeset fixes the skipped E2E tests so that they validate the intended behavior, and updates the docs for more clarity."
68,deps: update docker to 23.0.3 (#16862)," [no ci] deps: update docker to 23.0.3  This PR brings our docker/docker dependency (which is hosted at github.com/moby/moby) up to 23.0.3 (forward about 2 years). Refactored our use of docker/libnetwork to reference the package in its new home, which is docker/docker/libnetwork (it is no longer an independent repository). Some minor nearby test case cleanup as well.  add cl"
69,e2e: add e2e tests for job submission api (#16841),  e2e: add e2e tests for job submission api   e2e: fixup callers of AllocLogs   fix typo 
70,core: ensure all Server receiver names are consistent. (#16859),
71,Deployment Status Command Does Not Respect -namespace Wildcard (#16792),  func: add namespace support for list deployment   func: add wildcard to namespace filter for deployments   Update deployment_endpoint.go   style: use must instead of require or asseert   style: rename paginator to avoid clash with import   style: add changelog entry   fix: add missing parameter for upsert jobs 
72,deps: bump build and linter tool versions (#16858),This just helps keep up with the podman driver repo.
73,docs: document signal handling (#16835),"Expand documentation about Nomad's signal handling behaviors, including removing incorrect information about graceful client shutdowns."
74,drainer: fix codec race condition in integration test (#16845),"msgpackrpc codec handles are specific to a connection and cannot be shared between goroutines; this can cause corrupted decoding. Fix the drainer integration test so that we create separate codecs for the goroutines that the test helper spins up to simulate client updates. This changeset also refactors the drainer integration test to bring it up to current idioms and library usages, make assertions more clear, and reduce duplication."
75,consul/connect: fixed a bug where restarting proxy tasks failed. (#16815),"The first start of a Consul Connect proxy sidecar triggers a run of the envoy_version hook which modifies the task config image entry. The modification takes into account a number of factors to correctly populate this. Importantly, once the hook has run, it marks itself as done so the taskrunner will not execute it again. When the client receives a non-destructive update for the allocation which the proxy sidecar is a member of, it will update and overwrite the task definition within the taskerunner. In doing so it overwrite the modification performed by the hook. If the allocation is restarted, the envoy_version hook will be skipped as it previously marked itself as done, and therefore the sidecar config image is incorrect and causes a driver error. The fix removes the hook in marking itself as done to the view of the taskrunner."
76,api: enable support for setting original job source (#16763)," api: enable support for setting original source alongside job  This PR adds support for setting job source material along with the registration of a job. This includes a new HTTP endpoint and a new RPC endpoint for making queries for the original source of a job. The HTTP endpoint is /v1/job//submission?version= and the RPC method is Job.GetJobSubmission. The job source (if submitted, and doing so is always optional), is stored in the job_submission memdb table, separately from the actual job. This way we do not incur overhead of reading the large string field throughout normal job operations. The server config now includes job_max_source_size for configuring the maximum size the job source may be, before the server simply drops the source material. This should help prevent Bad Things from happening when huge jobs are submitted. If the value is set to 0, all job source material will be dropped.   api: avoid writing var content to disk for parsing   api: move submission validation into RPC layer   api: return an error if updating a job submission without namespace or job id   api: be exact about the job index we associate a submission with (modify)   api: reword api docs scheduling   api: prune all but the last 6 job submissions   api: protect against nil job submission in job validation   api: set max job source size in test server   api: fixups from pr "
77,acl: bump JWT auth gate to 1.5.4 (#16838),
78,Merge pull request #16836 from hashicorp/compliance/add-headers,[COMPLIANCE] Add Copyright and License Headers
79,gracefully recover tasks that use csi node plugins (#16809),"new WaitForPlugin() called during csiHook.Prerun, so that on startup, clients can recover running tasks that use CSI volumes, instead of them being terminated and rescheduled because they need a node plugin that is ""not found"" yet, only because the plugin task has not yet been recovered."
80,[COMPLIANCE] Add Copyright and License Headers,
81,ephemeral disk: module should imply module (#16826),"The module block's module field allows for best-effort migration of the ephemeral disk data to new nodes. The documentation says the module field is only respected if module, but in fact if client ACLs are not set the data is migrated even if module. The existing behavior when client ACLs are disabled has existed since the early implementation, so ""fixing"" that case now would silently break backwards compatibility. Additionally, having module not imply module seems nonsensical: it suggests that if we place on a new node we migrate the data but if we place on the same node, we throw the data away! Update so that module implies module as follows:  The failure mode when client ACLs are enabled comes from the server not passing   along a migration token. Update the server so that the server provides a   migration token whenever module and not just when module too. Update the scheduler so that module implies module. Update the client so that we check for module where appropriate. Refactor the E2E tests to move them off the old framework and make the intention   of the test more clear."
82,E2E: update subset of node drain tests off the old framework (#16823),"While working on several open drain issues, I'm fixing up the E2E tests. This subset of tests being refactored are existing ones that already work. I'm shipping these as their own PR to keep review sizes manageable when I push up PRs in the next few days for #9902, #12314, and #12915."
83,docker: default device.container_path to host_path (#16811), docker: default device.container_path to host_path  Matches docker cli behavior. Fixes #16754
84,e2e/acl: export ACL resource Cleanup helpers (#16822),"The e2e/acl package has some nice helpers for tracking and cleaning up ACL objects, but they are currently private. Export them so I can abuse them in other e2e tests."
85,Set RequireRoot to be a test helper. (#16641),
86,e2e: swap assert for test package in e2eutil/jobs.go (#16820),
87,client: ensure envoy version hook uses all pointer receiver funcs. (#16813),
88,E2E: test enforcement of ACL system (#16796),This changeset provides a matrix test of ACL enforcement across several dimensions:   * anonymous vs bogus vs valid tokens   * permitted vs not permitted by policy   * request sent to server vs sent to client (and forwarded)
89,docs: remove reference to vSphere from CSI concepts docs (#16765),"The vSphere plugin is exclusive to k8s because it relies on k8s-APIs (and crashes without them being present). Upstream unfortunately will not support Nomad, so we shouldn't refer to it in our concept docs here."
90,agent: add top-level warning if mTLS is not configured (#16800),Nomad's security model requires mTLS in order to secure client-to-server and server-to-server communications. Configuring ACLs alone is not enough. Loudly warn the user if mTLS is not configured in non-dev modes.
91,Merge pull request #16794 from hashicorp/post-1.5.3-release,Post 1.5.3 release
92,Do not set attributes when spawning the getter child (#16791),  Do not set attributes when spawning the getter child   Cleanup   Cleanup    Co-authored-by: the-nando link
93,deps: update go-m1cpu with fix for BigSur users (#16793),"https://github.com/shoenig/go-m1cpu/releases/tag/v0.1.5 which may also help with the Nix package for Nomad, which makes use of the older IOKit framework version https://github.com/shoenig/go-m1cpu/issues/5"
94,Merge release 1.5.3 files,
95,Prepare for next release,
96,Generate files for 1.5.3 release,
97,upgrade go to 1.20.3,
98,acl: fix ACL bypass for anon requests that pass thru client HTTP,Requests without an ACL token that pass thru the client's HTTP API are treated as though they come from the client itself. This allows bypass of ACLs on RPC requests where ACL permissions are checked (like module). Invalid tokens are correctly rejected. Fix the bypass by only setting a client ID on the identity if we have a valid node secret. Note that this changeset will break rate metrics for RPCs sent by clients without a client secret such as module; these requests will be recorded as anonymous. Future work should: * Ensure the node secret is sent with all client-driven RPCs except   module which is TOFU. * Create a new module object from client requests so that we   can enforce ACLs for all endpoints in a uniform way that's less error-prone.~
99,Prevent kill_timeout greater than progress_deadline  (#16761),  func: add validation for kill timeout smaller than progress dealine   style: add changelog   style: typo in changelog   style: remove refactored test   Update .changelog/16761.txt   Co-authored-by: James Rasell link  Update nomad/structs/structs.go  Co-authored-by: James Rasell link  Co-authored-by: James Rasell link
100,cleanup: use jobID name rather than jobName in job endpoints (#16777),"These endpoints all refer to JobID by the time you get to the RPC request layer, but the HTTP handler functions call the field JobName, which is a different field (... though often with the same value)."
101,cli: fix up failing quota inspect enterprise test. (#16781),
102,cli: stream both stdout and stderr when following an alloc. (#16556),"This update changes the behaviour when following logs from an allocation, so that both stdout and stderr files streamed when the operator supplies the follow flag. The previous behaviour is held when all other flags and situations are provided. Co-authored-by: Luiz Aoqui link"
103,Merge pull request #16575 from hashicorp/docs-add-roadmap-project,Adds public roadmap project to readme
104,CSI: set mounts in alloc hook resources atomically (#16722),"The allocrunner has a facility for passing data written by allocrunner hooks to taskrunner hooks. Currently the only consumers of this facility are the allocrunner CSI hook (which writes data) and the taskrunner volume hook (which reads that same data). The allocrunner hook for CSI volumes doesn't set the alloc hook resources atomically. Instead, it gets the current resources and then writes a new version back. Because the CSI hook is currently the only writer and all readers happen long afterwards, this should be safe but #16623 shows there's some sequence of events during restore where this breaks down. Refactor hook resources so that hook data is accessed via setters and getters that hold the mutex."
105,docs: fix use of gpg to avoid teeing binary to terminal (#16767),
106,docs: fix install instructions for apt (#16764),The workflow described in the docs for apt installation is deprecated. Update to match the workflow described in the Tutorials and official packaging guide.
107,take maximum processor Mhz (#16740),  take maximum processor Mhz   remove break   cl: add cl for 16740    Co-authored-by: Seth Hoenig link
108,Update quota name on failing test for quota status (#16662),  fix: update quota name on test   Update quota_status_test.go   Update quota_status_test.go   fix: simplify template call for quota status 
109,style: update documentation (#16729),
110,Update enterprise licensing documentation (#16615),updated various docs for new expiration behavior and new command module to validate pre-upgrade
111,ent: move all license info into LicenseConfig{} (#16738),and add new TestConfigForServer() to get a valid nomad.Config to use in tests Co-authored-by: Luiz Aoqui link
112,connect: add meta on ConsulSidecarService (#16705),Co-authored-by: Sol-Stiep link
113,ci: use module option (#16730),"Instead of attempting to pick each individual commit in a PR using module only picks the commit that was merged into module. This reduces the amount of work done during a backport, generating cleaner merges and avoiding potential issues on specific commits. With this setting PRs that are not squashed will fail to backport and must be handled manually, but those are considered exceptions."
114,Merge pull request #15897 from hashicorp/f-sso-jwt-auth-method,acl: JWT as SSO auth method
115,acl: set minACLJWTAuthMethodVersion to 1.5.3 and adjust code comment,
116,[ui] Web sign-in with JWT (#16625),  Bones of JWT detection   JWT to token pipeline complete   Some live-demo fixes for template language   findSelf and loginJWT funcs made async   Acceptance tests and mirage mocks for JWT login   [ui] Allow for multiple JWT auth methods in the UI (#16665)   Split selectable jwt methods   repositions the dropdown to be next to the input field 
117,acl: rebased on main and changed the gate to 1.5.3-dev,
118,acl: JWT changelog entry and typo fix,
119,acl: JWT auth CLI (#16532),
120,acl: fix canonicalization of JWT auth method mock (#16531),
121,acl: HTTP endpoints for JWT auth (#16519),
122,acl: RPC endpoints for JWT auth (#15918),
123,acl: JWT auth method,
124,docker: move pause container recovery to after module (#16713),"When we added recovery of pause containers in #16352 we called the recovery function from the plugin factory function. But in our plugin setup protocol, a plugin isn't ready for use until we call module. This meant that recovering pause containers was always done with the default config. Setting up the Docker client only happens once, so setting the wrong config in the recovery function also means that all other Docker API calls will use the default config. Move the module call into the module. Fix the error handling so that we return any error but also don't log when the context is canceled, which happens twice during normal startup as we fingerprint the driver."
125,build(deps): bump github.com/opencontainers/runc from 1.1.4 to 1.1.5 (#16712), build(deps): bump github.com/opencontainers/runc from 1.1.4 to 1.1.5  Bumps link from 1.1.4 to 1.1.5. - link - link - link  updated-dependencies: - dependency-name: github.com/opencontainers/runc   dependency-type: direct:production ... Signed-off-by: dependabot[bot] link  changelog entry   Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link Co-authored-by: Tim Gross link
126,fix: clean the output writter to avoid duplicates when testing for json output (#16619),
127,docs: mention Nomad Admission Control Proxy (#16702),
128,docs: clarify capabilities options for module driver (#16693),"The module driver cannot expand capabilities beyond the default set when the task is a non-root user. Clarify this in the documentation of module and update the module and module to match the module driver, which has more clear language overall."
129,drivers/exec: Fix handling of capabilities for unprivileged tasks (#16643),"Currently, the module driver is only setting the Bounding set, which is not sufficient to actually enable the requisite capabilities for the task process.  In order for the capabilities to survive module performed by libcontainer, the module, module, and module sets must also be set. Per CAPABILITIES (7):  Ambient: This is a set of capabilities that are preserved across an execve(2) of a program that is not privileged.  The ambient capability set obeys the invariant that no capability can ever be ambient if it is not both permitted and inheritable."
130,"dev: make cni, consul, dev, docker, and vault scripts Lima compat. (#16689)",
131,client/fingerprint: correctly fingerprint E/P cores of Apple Silicon chips (#16672)," client/fingerprint: correctly fingerprint E/P cores of Apple Silicon chips  This PR adds detection of asymetric core types (Power & Efficiency) (P/E) when running on M1/M2 Apple Silicon CPUs. This functionality is provided by shoenig/go-m1cpu which makes use of the Apple IOKit framework to read undocumented registers containing CPU performance data. Currently working on getting that functionality merged upstream into gopsutil, but gopsutil would still not support detecting P vs E cores like this PR does. Also refactors the CPUFingerprinter code to handle the mixed core types, now setting power vs efficiency cpu attributes. For now the scheduler is still unaware of mixed core types - on Apple platforms tasks cannot reserve cores anyway so it doesn't matter, but at least now the total CPU shares available will be correct. Future work should include adding support for detecting P/E cores on the latest and upcoming Intel chips, where computation of total cpu shares is currently incorrect. For that, we should also include updating the scheduler to be core-type aware, so that tasks of resources.cores on Linux platforms can be assigned the correct number of CPU shares for the core type(s) they have been assigned. node attributes before cpu.arch                  = arm64 cpu.modelname             = Apple M2 Pro cpu.numcores              = 12 cpu.reservablecores       = 0 cpu.totalcompute          = 1000 node attributes after cpu.arch                  = arm64 cpu.frequency.efficiency  = 2424 cpu.frequency.power       = 3504 cpu.modelname             = Apple M2 Pro cpu.numcores.efficiency   = 4 cpu.numcores.power        = 8 cpu.reservablecores       = 0 cpu.totalcompute          = 37728  fingerprint/cpu: follow up cr items"
132,dev: modify Go install to support arch64 and non-vagrant machines. (#16651),
133,docs: add notes about keyring to snapshot restore (#16663),"When cluster administrators restore from Raft snapshot, they also need to ensure the keyring is in place. For on-prem users doing in-place upgrades this is less of a concern but for typical cloud workflows where the whole host is replaced, it's an important warning (at least until #14852 has been implemented)."
134,docs: fix template retry attempts default documentation (#16667),"The configuration docs for module, module, and module incorrectly document the default number of attempts to be unlimited (0). When we added these config blocks, we defaulted the fields to module for backwards compatibility, which causes them to fall back to the default consul-template configuration values."
135,docs: fix-up legacy link in client config page. (#16678),
136,docs: fix link of Read Stats API (#16673),The former link results in a 404. Update the link to the correct developer docs.
137,dev: account for non-vagrant machines on Linux config priv. (#16657),
138,"Multiple instances of a periodic job are run simultaneously, when prohibit_overlap is true (#16583)","  Multiple instances of a periodic job are run simultaneously, when prohibit_overlap is true Fixes #11052 When restoring periodic dispatcher, all periodic jobs are forced without checking for previous childre.   Multiple instances of a periodic job are run simultaneously, when prohibit_overlap is true Fixes #11052 When restoring periodic dispatcher, all periodic jobs are forced without checking for previous children.   style: refactor force run function   fix: remove defer and inline unlock for speed optimization   Update nomad/leader.go   Co-authored-by: James Rasell link  Update nomad/leader_test.go  Co-authored-by: James Rasell link  Update nomad/leader_test.go  Co-authored-by: James Rasell link  Update nomad/leader_test.go  Co-authored-by: James Rasell link  Update nomad/leader_test.go  Co-authored-by: James Rasell link  Update nomad/leader_test.go  Co-authored-by: James Rasell link  Update nomad/leader_test.go  Co-authored-by: James Rasell link  Update nomad/leader_test.go  Co-authored-by: James Rasell link   style: refactor tests to use must   Update nomad/leader_test.go   Co-authored-by: James Rasell link  Update nomad/leader_test.go  Co-authored-by: James Rasell link  Update nomad/leader_test.go  Co-authored-by: James Rasell link  Update nomad/leader_test.go  Co-authored-by: James Rasell link  Update nomad/leader_test.go  Co-authored-by: James Rasell link  fix: move back from defer to calling unlock before returning.  createEval cant be called with the lock on   style: refactor test to use must   added new entry to changelog and update comments    Co-authored-by: James Rasell link Co-authored-by: James Rasell link"
139,"style: rename ForceRun to ForceEval, for clarity (#16617)",
140,scheduler: fix reconciliation of reconnecting allocs (#16609),"When a disconnect client reconnects the module must find the allocations that were created to replace the original disconnected allocations. This process was being done in only a subset of non-terminal untainted allocations, meaning that, if the replacement allocations were not in this state the reconciler didn't stop them, leaving the job in an inconsistent state. This inconsistency is only solved in a future job evaluation, but at that point the allocation is considered reconnected and so the specific reconnection logic was not applied, leading to unexpected outcomes. This commit fixes the problem by running reconnecting allocation reconciliation logic earlier into the process, leaving the rest of the reconciler oblivious of reconnecting allocations. It also uses the full set of allocations to search for replacements, stopping them even if they are not in the module set. The system module is not affected by this bug because disconnected clients don't trigger replacements: every eligible client is already running an allocation."
141,docs: added section of needed ACL rules for Nomad UI (#16494),
142,cli: job restart command (#16278),"Implement the new module command that allows operators to restart allocations tasks or reschedule then entire allocation. Restarts can be batched to target multiple allocations in parallel. Between each batch the command can stop and hold for a predefined time or until the user confirms that the process should proceed. This implements the ""Stateless Restarts"" alternative from the original RFC (https://gist.github.com/schmichael/e0b8b2ec1eb146301175fd87ddd46180). The original concept is still worth implementing, as it allows this functionality to be exposed over an API that can be consumed by the Nomad UI and other clients. But the implementation turned out to be more complex than we initially expected so we thought it would be better to release a stateless CLI-based implementation first to gather feedback and validate the restart behaviour. Co-authored-by: Shishir Mahajan link"
143,ci: send notification when prepare is complete (#16627),
144,drainer: test refactoring to clarify behavior around delete/down nodes (#16612),"This changeset refactors the tests of the draining node watcher so that we don't mock the node watcher's module and module methods for its own tests. Instead we'll mock the node watcher's dependencies (the job watcher and deadline notifier) and now unit tests can cover the real code. This allows us to remove a bunch of TODOs in module around testing and clarify some important behaviors:   Nodes that are down or disconnected will still be watched until the scheduler   decides what to do with their allocations. This will drive the job watcher but   not the node watcher, and that lets the node watcher gracefully handle cases   where a heartbeat fails but the node heartbeats again before its allocs can be   evicted.   Stop watching nodes that have been deleted. The blocking query for nodes set   the maximum index to the highest index of a node it found, rather than the   index of the nodes table. This misses updates to the index from deleting   nodes. This was done as an performance optimization to avoid excessive   unblocking, but because the query is over all nodes anyways there's no   optimization to be had here. Remove the optimization so we can detect deleted   nodes without having to wait for an update to an unrelated node. "
145,Post 1.5.2 release (#16614),  Generate files for 1.5.2 release   Prepare for next release   add 1.4.7 and 1.3.12 to the changelog    Co-authored-by: hc-github-team-nomad-core link
146,[ui] Copyable server and client attribute values (#16548),  Copyable server and client attribute values   Changelog 
147,Fix broken test for quotas CLI  (#16610),  fix: fix broken test   fix: fix broken test for quota status 
148,docs: detail support for Nomad checks in service block. (#16598),
149,taskapi: use HasSuffix to detect errors from rpcs (#16594),"Matches the ""normal"" HTTP error detection logic in the same file."
150,e2e: sleep to ensure logs are picked up (#16596),:(
151,E2E: fix events tests (#16595),"In #12916 we updated the events test as part of a larger set of changes around mapstructure serialization fixes. But the changes to the jobs we're deploying in the tests had invalid task configs so they never result in good deployments and the test will always fail. Make the before/after jobs identical (except for the version bump) and make them valid. Also wait for allocations for the 2nd job run to appear before checking the deployment list, so that we don't race with the scheduler."
152,Windows fixes for e2e tests (#16592),  e2e: skip task api test when windows too old   e2e: don't run proxy on windows 
153,Update csi_plugin.mdx (#16584),Co-authored-by: James Rasell link
154,contrib: architecture guide to the drainer (#16569),"The drainer component is fairly complex. As part of upcoming work to fix some of the drainer's rough edges, document the drainer's architecture from a Nomad developer perspective."
155,changelog: update #16427 to improvement (#16565),The security fix in Go 1.20.2 does not apply to Nomad.
156,client/metadata: fix crasher caused by AllowStale = false (#16549),"Fixes #16517 Given a 3 Server cluster with at least 1 Client connected to Follower 1: If a NodeMeta.{Apply,Read} for the Client request is received by Follower 1 with module the Follower will forward the request to the Leader. The Leader, not being connected to the target Client, will forward the RPC to Follower 1. Follower 1, seeing AllowStale=false, will forward the request to the Leader. The Leader, not being connected to... well hoppefully you get the picture: an infinite loop occurs."
157,Adds public roadmap project to readme,
158,contrib: mock driver (#16573),
159,dev: remove use of cfssl and use Nomad CLI for TLS certs. (#16145),
160,docs: remove Java and Scala SDKs from supported list. (#16555),
161,[ui] Perform common job tasks with keyboard shortcuts (#16378),  Throw your mouse into traffic   Add node metadata with a shortcut   Re-labelled   Adds a toast notification to job start/stop on keyboard shortcut   Typo fix 
162,Add module flag to module command (#16478),  Added  and  flag to  command   cli[style]: small refactor to avoid confussion with tmpl variable   Update inspect.mdx   cli: add changelog entry   Update .changelog/16478.txt   Co-authored-by: James Rasell link  Update command/quota_inspect.go  Co-authored-by: James Rasell link  Co-authored-by: James Rasell link
163,cli: add module and module flags to module command (#16485),  cli: add json and t flags to quota status command   cli: add entry to changelog   Update command/quota_status.go   Co-authored-by: James Rasell link  Co-authored-by: James Rasell link
164,cli: Add module and module flags to module command (#16444),  cli: Add  and  flags to server members   Update website/content/docs/commands/server/members.mdx   Co-authored-by: James Rasell link  Update website/content/docs/commands/server/members.mdx  Co-authored-by: James Rasell link   cli: update the server memebers tests to use must   cli: add flags addition to changelog    Co-authored-by: James Rasell link
165,Spelling update (#16553),updated propogating to propagating
166,tls enforcement flaky tests (#16543),  tests: add WaitForLeaders helpers using must/wait timings   tests: start servers for mtls tests together   Fixes #16253 (hopefully)
167,cli: nomad login command should not require a -type flag and should respect default auth method (#16504),"nomad login command does not need to know ACL Auth Method's type, since all method names are unique.  Co-authored-by: James Rasell link"
168,nsd: always set deregister flag after deregistration of group (#16289)," services: always set deregister flag after deregistration of group  This PR fixes a bug where the group service hook's deregister flag was not set in some cases, causing the hook to attempt deregistrations twice during job updates (alloc replacement). In the tests ... we used to assert on the wrong behvior (remove twice) which has now been corrected to assert we remove only once. This bug was ""silent"" in the Consul provider world because the error logs for double deregistration only show up in Consul logs; with the Nomad provider the error logs are in the Nomad agent logs.  services: cleanup group service hook tests"
169,acl: fix canonicalization of OIDC auth method mock (#16534),
170,docs: add binding-rule selector escape example on Windows PS (#16273),
171,Enable ACLs on E2E test clients (#16530),  e2e: uniformly enable acls across all agents   docs: clarify that acls should be set everywhere 
172,client: don't use module RPC for Consul discovery (#16490),"In #16217 we switched clients using Consul discovery to the module endpoint for getting the list of servers so that we're using the correct address. This endpoint has an authorization gate, so this fails if the anonymous policy doesn't have module. We also can't check the module for the request for the client secret, because the client hasn't yet registered so the server doesn't have anything to compare against. Instead of hitting the module or module RPC endpoint, use the Consul response directly. Update the module method to handle the list of servers we get back in the response; if we get a ""no servers"" or ""no path to region"" response we'll kick off discovery again and retry immediately rather than waiting 15s."
173,artifact: git needs more files for private repositories (#16508), landlock: git needs more files for private repositories  This PR fixes artifact downloading so that git may work when cloning from private repositories. It needs  file read on /etc/passwd dir read on /root/.ssh file write on /root/.ssh/known_hosts  Add these rules to the landlock rules for the artifact sandbox.  cr: use nonexistent instead of devnull  Co-authored-by: Michael Schurter link   cr: use go-homdir for looking up home directory   pr: pull go-homedir into explicit require   cr: fixup homedir tests in homeless root cases   cl: fix root test for real    Co-authored-by: Michael Schurter link
174,docs: dispatch_payload and jobs api docs had some weirdness (#16514)," docs: dispatch_payload docs had some weirdness  Docs said ""Examples"" when there was only 1 example. Not sure what the floating ""to"" in the description was for.  docs: missing a heading level on jobs api docs"
175,artifact: do not set process attributes on darwin (#16511),This PR fixes the non-root macOS use case where artifact downloads stopped working. It seems setting a Credential on a SysProcAttr used by the exec package will always cause fork/exec to fail - even if the credential contains our own UID/GID or nil UID/GID. Technically we do not need to set this as the child process will inherit the parent UID/GID anyway... and not setting it makes things work again ... /shrug
176,artifact: use specific version link for zipbomb artifact (#16513),"Fix the e2e case where we download the go-getter bomb.zip test file, which is being removed on main. We can still get it from the version tag - yay git!"
177,build: fix module make target when running locally. (#16506),
178,test: set BuildDate in default TestAgent config (#16499),so enterprise tests don't fail due to the default zero time
179,cli: fix login help output formatting. (#16502),
180,scheduler: annotate tasksUpdated with reason and purge DeepEquals (#16421),  scheduler: annotate tasksUpdated with reason and purge DeepEquals   cr: move opaque into helper   cr: swap affinity/spread hashing for slice equal   contributing: update checklist-jobspec with notes about struct methods   cr: add more cases to wait config equal method   cr: use reflect when comparing envoy config blocks   cl: add cl 
181,Merge pull request #16484 from hashicorp/tunzor-patch-1,Update for enterprise trial wording and link
182,Updated trial license link and wording,
183,cli: Add  module and module flags to module command (#16442),  cli: Add  and  flag to namespace status command   Update command/namespace_status.go   Co-authored-by: James Rasell link  cli: update tests for namespace status command to use must   Co-authored-by: James Rasell link
184,docs: clarify migration behavior under module (#16468),
185,agent: trim space when parsing X-Nomad-Token header (#16469),"Our auth token parsing code trims space around the module header but not around module. When using the UI, it's easy to accidentally introduce a leading or trailing space, which results in spurious authentication errors. Trim the space at the HTTP server."
186,cgv1: do not disable cpuset manager if reserved interface already exists (#16467)," cgv1: do not disable cpuset manager if reserved interface already exists  This PR fixes a bug where restarting a Nomad Client on a machine using cgroups v1 (e.g. Ubuntu 20.04) would cause the cpuset cgroups manager to disable itself. This is being caused by incorrectly interpreting a ""file exists"" error as problematic when ensuring the reserved cpuset exists. If we get a ""file exists"" error, that just means the Client was likely restarted. Note that a machine reboot would fix the issue - the groups interfaces are ephemoral.  cl: add cl"
187,acl: update job eval requirement to module (#16463),The job evaluate endpoint creates a new evaluation for the job which is a write operation. This change modifies the necessary capability from module to module to better reflect this.
188,plugin: add missing fields to module (#16434),
189,doc: Update module doc to run against non-deprecated HCL2 jobspec only (#16435),Signed-off-by: dttung2905 link
190,build: update from go1.20.1 to go1.20.2 (#16427), build: update from go1.20.1 to go1.20.2  Note that the CVE fixed in go1.20.2 does not impact Nomad. https://github.com/golang/go/issues/58647
191,build(deps): bump go.uber.org/goleak from 1.2.0 to 1.2.1 (#16439),Bumps link from 1.2.0 to 1.2.1. - link - link - link  updated-dependencies: - dependency-name: go.uber.org/goleak   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
192,scheduler: refactor system util tests (#16416),"The tests for the system allocs reconciling code path (module) include many impossible test environments, such as passing allocs for the wrong node into the function. This makes the test assertions nonsensible for use in walking yourself through the correct behavior. I've pulled this changeset out of PR #16097 so that we can merge these improvements and revisit the right approach to fix the problem in #16097 with less urgency now that the PFNR bug fix has been merged. This changeset breaks up a couple of tests, expands test coverage, and makes test assertions more clear. It also corrects one bit of production code that behaves fine in production because of canonicalization, but forces us to remember to set values in tests to compensate."
193,scheduler: add simple benchmark for tasksUpdated (#16422),"In preperation for some refactoring to tasksUpdated, add a benchmark to the old code so it's easy to compare with the changes, making sure nothing goes off the rails for performance."
194,deps: remove replace statement for go-discover (#16304),Which we no longer need since we no longer have consul as a dependency
195,Merge pull request #16445 from hashicorp/post-1.5.1-release,Post 1.5.1 release
196,Merge release 1.5.1 files,
197,Prepare for next release,
198,Generate files for 1.5.1 release,
199,acl: prevent privilege escalation via workload identity,"ACL policies can be associated with a job so that the job's Workload Identity can have expanded access to other policy objects, including other variables. Policies set on the variables the job automatically has access to were ignored, but this includes policies with module capabilities. Additionally, when resolving claims for a workload identity without any attached policies, the module method returned a module ACL object, which is treated similarly to a management token. While this was safe in Nomad 1.4.x, when the workload identity token was exposed to the task via the module block, this allows a user with module capabilities to escalate their privileges. We originally implemented automatic workload access to Variables as a separate code path in the Variables RPC endpoint so that we don't have to generate on-the-fly policies that blow up the ACL policy cache. This is fairly brittle but also the behavior around wildcard paths in policies different from the rest of our ACL polices, which is hard to reason about. Add an module parameter to the module method so that we can push all this logic into the module package and the behavior can be consistent. This will allow a module policy to override automatic access (and probably speed up checks of non-automatic variable access)."
200,"e2e fixes: cli output, timing issue, and some cleanups (#16418)",  e2e: job expects alloc to run until stopped   e2e: fix case changed by #16306   e2e: couldn't find a bug but improved test+jobspecs 
201,allocrunner: fix health check monitoring for Consul services (#16402),Services must be interpolated to replace runtime variables before they can be compared against the values returned by Consul.
202,cli: add module and module flag for module command  (#16405),  cli: add -json flag to alloc checks for completion   CLI: Expand test to include testing the json flag for allocation checks   Documentation: Add the checks command   Documentation: Add example for alloc check command   Update website/content/docs/commands/alloc/checks.mdx   Co-authored-by: James Rasell link   CLI: Add template flag to alloc checks command   Update website/content/docs/commands/alloc/checks.mdx   Co-authored-by: James Rasell link   CLI: Extend test to include -t flag for alloc checks   func: add changelog for added flags to alloc checks   cli[doc]: Make usage section on alloc checks clearer   Update website/content/docs/commands/alloc/checks.mdx   Co-authored-by: James Rasell link   Delete modd.conf   cli[doc]: add -t flag to command description for alloc checks    Co-authored-by: James Rasell link Co-authored-by: Juanita De La Cuesta Morales link
203,env/aws: update ec2 cpu info data (#16417),Update AWS EC2 CPU tables using module
204,cli: remove hard requirement on module (#16380),"Most job subcommands allow for job ID prefix match as a convenience functionality so users don't have to type the full job ID. But this introduces a hard ACL requirement that the token used to run these commands have the module permission, even if the token has enough permission to execute the basic command action and the user passed an exact job ID. This change softens this requirement by not failing the prefix match in case the request results in a permission denied error and instead using the information passed by the user directly."
205,docs: update content-conformance package (#16412),
206,cli: fix help output format on module command. (#16407),
207,scheduling: prevent self-collision in dynamic port network offerings (#16401),"When the scheduler tries to find a placement for a new allocation, it iterates over a subset of nodes. For each node, we populate a module bitmap with the ports of all existing allocations and any other allocations already proposed as part of this same evaluation via its module method. Then we make an ""ask"" of the module in module for any ports we need and receive an ""offer"" in return. The offer will include both static ports and any dynamic port assignments. The module method was written to support group networks, and it shares code that selects dynamic ports with the original module code. module can request multiple ports from the bitmap at a time. But module requests them one at a time and does not account for possible collisions, and doesn't return an error in that case. What happens next varies:  If the scheduler doesn't place the allocation on that node, the port    conflict is thrown away and there's no problem. If the node is picked and this is the only allocation (or last allocation),    the plan applier will reject the plan when it calls module, as we'd expect. If the node is picked and there are additional allocations in the same eval    that iterate over the same node, their call to module will detect the    impossible state and the node will be rejected. This can have the puzzling    behavior where a second task group for the job without any networking at all    can hit a port collision error!  It looks like this bug has existed since we implemented group networks, but there are several factors that add up to making the issue rare for many users yet frustratingly frequent for others:  You're more likely to hit this bug the more tightly packed your range for   dynamic ports is. With 12000 ports in the range by default, many clusters can   avoid this for a long time. You're more likely to hit case (3) for jobs with lots of allocations or if a   scheduler has to iterate over a large number of nodes, such as with system jobs,   jobs with module blocks, or (sometimes) jobs using module constraints.  For unlucky combinations of these factors, it's possible that case (3) happens repeatedly, preventing scheduling of a given job until a client state change (ex. restarting the agent so all its allocations are rescheduled elsewhere) re-opens the range of dynamic ports available. This changeset:  Fixes the bug by accounting for collisions in dynamic port selection in   module. Adds test coverage for module, expands coverage of this case for the   deprecated module, and tightens the dynamic port range in a   scheduler test for spread scheduling to more easily detect this kind of problem   in the future. Adds a module method to module so that any future ""screaming"" log lines   have a human-readable list of used ports."
208,Updated who-uses-nomad to add Behavox (#16339),
209,client: disable running artifact downloader as nobody (#16375)," client: disable running artifact downloader as nobody  This PR reverts a change from Nomad 1.5 where artifact downloads were executed as the nobody user on Linux systems. This was done as an attempt to improve the security model of artifact downloading where third party tools such as git or mercurial would be run as the root user with all the security implications thereof. However, doing so conflicts with Nomad's own advice for securing the Client data directory - which when setup with the recommended directory permissions structure prevents artifact downloads from working as intended. Artifact downloads are at least still now executed as a child process of the Nomad agent, and on modern Linux systems make use of the kernel Landlock feature for limiting filesystem access of the child process.   docs: update upgrade guide for 1.5.1 sandboxing   docs: add cl   docs: add title to upgrade guide fix "
210,e2e: setup nomad permissions correctly (client vs. server) (#16399),This PR configures  server nodes with a systemd unit running the agent as the nomad service user client nodes with a root owned nomad data directory
211,[ui] Fix: New toast notifications no longer last forever (#16384),  Removes an errant console.log and corrects a default sticky=true on toast notifications   Default so no need to refault 
212,deps: Update ioutil deprecated library references to os and io respectively in the client package (#16318),  Update ioutil deprecated library references to os and io respectively   Deal with the errors produced.   Add error handling to filEntry info Add error handling to info
213,deps: Update ioutil library references to os and io respectively for drivers package (#16331), Update ioutil library references to os and io respectively for drivers package  No user facing changes so I assume no change log is required  Fix failing tests
214,Update ioutil library references to os and io respectively for API and Plugins package (#16330),No user facing changes so I assume no change log is required
215,Update ioutil library references to os and io respectively for e2e helper nomad (#16332),No user facing changes so I assume no change log is required
216,Update ioutil library references to os and io respectively for command (#16329),No user facing changes so I assume no change log is required
217,build(deps): bump golang.org/x/crypto from 0.5.0 to 0.7.0 (#16337),Bumps link from 0.5.0 to 0.7.0. - link - link  updated-dependencies: - dependency-name: golang.org/x/crypto   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
218,Outage recovery link fix (#16365),
219,e2e: fix permissions on nomad data directory (#16376),"This PR updates the provisioning step where we create /opt/nomad/data, such that it is with 0700 permissions in line with our security guidance."
220,docker: fix bug where network pause containers would be erroneously reconciled  (#16352),  docker: fix bug where network pause containers would be erroneously gc'd   docker: cl: thread context from driver into pause container restoration 
221,"docs: add 1.5.0, 1.4.5, and 1.3.10 pause regression upgrade note. (#16358)",
222,cli: support module and module on module command. (#16357),
223,docs: note that secrets dir is usually mounted module (#16363),
224,scheduler: correctly detect inplace update with wildcard datacenters (#16362),Wildcard datacenters introduced a bug where a job with any wildcard datacenters will always be treated as a destructive update when we check whether a datacenter has been removed from the jobspec. Includes updating the helper so that callers don't have to loop over the job's datacenters.
225,CI: delete test-link-rewrites.yml (#16354),
226,deps: update test to 0.6.2 for new functions (#16326),
227,[ui] Fix: Wildcard-datacenter system/sysbatch jobs stopped showing client links/chart (#16274),  Fix for wildcard DC sys/sysbatch jobs   A few extra modules for wildcard DC in systemish jobs   doesMatchPattern moved to its own util as match-glob   DC glob lookup using matchGlob   PR feedback 
228,client: don't emit task shutdown delay event if not waiting (#16281),
229,api: set last index and request time on alloc stop (#16319),"Some of the methods in module incorrectly use the module in API calls where module is more appropriate since they are not reading information back. These methods are also not returning request metadata such as module back to callers, which can be useful to have in some scenarios. They also provide poor developer experience as they take an module struct when only the allocation ID is necessary. This can lead consumers to make unnecessary API calls to fetch the full allocation. Fixing these problems require updating the methods' signatures so they take module instead of module and return module, but this is a breaking change that requires advanced notice to consumers. This commit adds a future breaking change notice and also fixes the module method so it properly returns request metadata in a backwards compatible way."
230,remove backcompat support for non-atomic job registration (#16305),"In Nomad 0.12.1 we introduced atomic job registration/deregistration, where the new eval was written in the same raft entry. Backwards-compatibility checks were supposed to have been removed in Nomad 1.1.0, but we missed that. This is long safe to remove."
231,docs: fix alloc stop module (#16282),
232,cli: use shared logic for resolving job prefix (#16306),"Several module subcommands had duplicate or slightly similar logic for resolving a job ID from a CLI argument prefix, while others did not have this functionality at all. This commit pulls the shared logic to the command Meta and updates all module subcommands to use it."
233,service: fix regression in task access to list/read endpoint (#16316),"When native service discovery was added, we used the node secret as the auth token. Once Workload Identity was added in Nomad 1.4.x we needed to use the claim token for module blocks, and so we allowed valid claims to bypass the ACL policy check to preserve the existing behavior. (Invalid claims are still rejected, so this didn't widen any security boundary.) In reworking authentication for 1.5.0, we unintentionally removed this bypass. For WIs without a policy attached to their job, everything works as expected because the resulting module is nil. But once a policy is attached to the job the module is no longer nil and this causes permissions errors. Fix the regression by adding back the bypass for valid claims. In future work, we should strongly consider getting turning the implicit policies into real module objects (even if not stored in state) so that we don't have these kind of brittle exceptions to the auth code."
234,api: add new test case for force-leave (#16260),Signed-off-by: dttung2905 link
235,docs: fix typos in task-api.mdx and workload-identity.mdx (#16309),
236,Add namespace argument to the job verification help text (#16243),
237,cli: sort Node value in module command (#16221),Signed-off-by: dttung2905 link
238,Merge pull request #16293 from hashicorp/post-1.5.0-release,admin: Post 1.5.0 release
239,"[ui, helios] Toast Component (#16099)",  Template and styles   @type to @color on flash messages   Notifications service as wrapper   Test cases updated for new notifs 
240,handle module errors in module (#16287),"The signature of the module function requires that the caller unwrap the first returned value (the response from module) to see if it's an error. This puts the burden on the caller to remember to check two different places for errors, and we've done so inconsistently. Update module to do the unwrapping for us and return any module error as the error value. Similar work was done in Consul in https://github.com/hashicorp/consul/pull/9991. This eliminates some boilerplate and surfaces a few minor bugs in the process:  job deregistrations of already-GC'd jobs were still emitting evals reconcile job summaries does not return scheduler errors node updates did not report errors associated with inconsistent service   discovery or CSI plugin states  Note that although most of the module functions return only errors (which makes it tempting to remove the first return value entirely), there are few that return module for some reason and Variables relies on the response value for proper CAS checking."
241,deps: update go-plugin to 1.4.9 (#16292),"Fixes #16288. An earlier version of module introduced a warning log if module is unset. For Nomad and other applications that have ""internal"" module consumers where the application runs itself as a plugin, this causes spurious warn-level logs. For Nomad in particular this means every task driver and logmon invocation emits the log, which is our primary operation. The change was reverted upstream, so this changeset picks up the reverted version."
242,tests: add functionality to skip a test if it's not running in CI and not with root user (#16222),
243,client: use RPC address and not serf after initial Consul discovery (#16217),"Nomad servers can advertise independent IP addresses for module and module. Somewhat unexpectedly, the module address is also used for both Serf and server-to-server RPC communication (including Raft RPC). The address advertised for module is only used for client-to-server RPC. This split was introduced intentionally in Nomad 0.8. When clients are using Consul discovery for connecting to servers, they get an initial discovery set from Consul and use the correct module tag in Consul to get a list of adddresses for servers. The client then makes a module RPC to get the list of those servers that are raft peers. But this endpoint is shared between servers and clients, and provides the address used for Raft. Most of the time this is harmless because servers will bind on 0.0.0.0 anyways., But in topologies where servers are on a private network and clients are on separate subnets (or even public subnets), clients will make initial contact with the server to get the list of peers but then populate their local server set with unreachable addresses. Cluster administrators can work around this problem by using module with specific IP addresses (or DNS names), because the module endpoint returns the correct set of RPC addresses when updating the node. So once a client has registered, it will get the correct set of RPC addresses. This changeset updates the client logic to query module instead of module, and then extract the correctly advertised address and port from the response body."
244,Merge release 1.5.0 files,
245,Prepare for next release,
246,Generate files for 1.5.0 release,
247,prepare release 1.5.0,
248,Merge pull request #16284 from hashicorp/post-1.5.0-rc.1-release,admin: post 1.5.0 rc.1 release
249,Prepare for next release,
250,Generate files for 1.5.0-rc.1 release,
251,Prepare release 1.5.0-rc.1,
252,Accept Workload Identities for Client RPCs (#16254),"This change resolves policies for workload identities when calling Client RPCs. Previously only ACL tokens could be used for Client RPCs. Since the same cache is used for both bearer tokens (ACL and Workload ID), the token cache size was doubled.  Co-authored-by: James Rasell link"
253,build/cli: Add BuildDate (#16216)," build: add BuildDate to version info  will be used in enterprise to compare to license expiration time  cli: multi-line version output, add BuildDate  before: $ nomad version Nomad v1.4.3 (coolfakecommithashomgoshsuchacoolonewoww) after: $ nomad version Nomad v1.5.0-dev BuildDate 2023-02-17T19:29:26Z Revision coolfakecommithashomgoshsuchacoolonewoww compare consul: $ consul version Consul v1.14.4 Revision dae670fe Build Date 2023-01-26T15:47:10Z Protocol 2 spoken by default, blah blah blah... and vault: $ vault version Vault v1.12.3 (209b3dd99fe8ca320340d08c70cff5f620261f9b), built 2023-02-02T09:07:27Z  docs: update version command output"
254,populate Nomad token for task runner update hooks (#16266),"The module struct we send to task runner update hooks was not populating the Nomad token that we get from the task runner (which we do for the Vault token). This results in task runner hooks like the template hook overwriting the Nomad token with the zero value for the token. This causes in-place updates of a task to break templates (but not other uses that rely on identity but don't currently bother to update it, like the identity hook)."
255,CSI: fix potential state store corruptions (#16256),"The module struct has references to allocations that are ""denormalized""; we don't store them on the module struct but hydrate them on read. Tests detecting potential state store corruptions found two locations where we're not copying the volume before denormalizing:  When garbage collecting CSI volume claims. When checking if it's safe to force-deregister the volume.  There are no known user-visible problems associated with these bugs but both have the potential of mutating volume claims outside of a FSM transaction. This changeset also cleans up state mutations in some CSI tests so as to avoid having working tests cover up potential future bugs."
256,agent: only reload HTTP servers that use TLS (#16250),  agent: only reload HTTP servers that use TLS   shutdown task api before client and improve names   Fixes #16239
257,services: Set Nomad's User-Agent by default on HTTP checks for nomad services (#16248),
258,build(deps): bump golang.org/x/net from 0.5.0 to 0.7.0 (#16220),Bumps link from 0.5.0 to 0.7.0. - link - link  updated-dependencies: - dependency-name: golang.org/x/net   dependency-type: indirect ... Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
259,Fix missing  query parameter in job doc (#16233),Signed-off-by: dttung2905 link
260,services: ensure task group is set on service hook (#16240),"This PR fixes a bug where the task group information was not being set on the serviceHook.AllocInfo struct, which is needed later on for calculating the CheckID of a nomad service check. The CheckID is calculated independently from multiple callsites, and the information being passed in must be consistent, including the group name. The workload.AllocInfo.Group was not set at this callsite, due to the bug fixed in this PR.  https://github.com/hashicorp/nomad/blob/main/client/serviceregistration/nsd/nsd.go#L114"
261,api: fix a panic and tweak some exported types (#16237),This PR  - fixes a panic in GetItems when looking up a variable that does not exist.  - deprecates GetItems in favor of GetVariableItems which avoids returning a pointer to a map  - deprecates ErrVariableNotFound in favor of ErrVariablePathNotFound which is an actual error type  - does some minor code cleanup to make linters happier
262,Task API / Dynamic Node Metadata E2E test fixes (#16219)," taskapi: return Forbidden on bad credentials  Prior to this change a ""Server error"" would be returned when ACLs are enabled which did not match when ACLs are disabled.   e2e: love love love datacenter wildcard default   e2e: skip windows nodes on linux only test   The Logfs are a bit weird because they're most useful when converted to Printfs to make debugging the test much faster, but that makes CI noisy. In a perfect world Go would expose how many tests are being run and we could stream output live if there's only 1. For now I left these helpful lines in as basically glorified comments."
263,E2E: add multi-home networking to test infrastructure (#16218),"Add an Elastic Network Interface (ENI) to each Linux host, on a secondary subnet we have provisioned in each AZ. Revise security groups as follows:  Split out client security groups from servers so that we can't have clients   accidentally accessing serf addresses or other unexpected cross-talk. Add new security groups for the secondary subnet that only allows   communication within the security group so we can exercise behaviors with   multiple IPs.  This changeset doesn't include any Nomad configuration changes needed to take advantage of the extra network interface. I'll include those with testing for PR #16217."
264,docs: slight tidy up of var create example payload (#16212),
265,docs: clarify sysbatch supports count (#16205),Also remove old version indicators.  Co-authored-by: Tim Gross link
266,acl: add validation to binding rule selector on upsert. (#16210),  acl: add validation to binding rule selector on upsert.   docs: add more information on binding rule selector escaping. 
267,Count and comments added to hello-world (#16162),
268,Allow configurable range of Job priorities (#16084),
269,[CI only] Prepare workflow rollout (#15600),
270,[cli] var put - Add extension parsing to second argument when file (#16181),
271,"Minor post-1.5-beta1 API, code, and docs cleanups (#16193)",  api: return error on parse failure   docs: clarify anonymous policy with task api 
272,fix test flake for RPC TLS enforcement test (#16199),"The RPC TLS enforcement test was frequently failing with broken connections. The most likely cause was that the tests started to run before the server had started its RPC server. Wait until it self-elects to ensure that the RPC server is up. This seems to have corrected the error; I ran this 3 times without a failure (even accounting for module retries). Also, fix a minor test bug that didn't impact the test but showed an incorrect usage for module"
273,build: correct Makefile to run smoke tests locally (#16137),
274,csi: add option to configure CSIVolumeClaimGCInterval (#16195),
275,build(deps): bump github.com/containerd/containerd from 1.6.12 to 1.6.18 (#16198),Bumps link from 1.6.12 to 1.6.18. - link - link - link  updated-dependencies: - dependency-name: github.com/containerd/containerd   dependency-type: indirect ... Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
276,cli: module should return early on diff (#16174),"The module command incorrectly writes to file because we didn't return before writing the file on a diff. Fix this bug and update the command internals to differentiate between the write-to-file and write-to-stdout code paths, which are activated by different combinations of options and flags. The docstring for the module and module flags is also unclear and can be easily misread to be the opposite of the actual behavior. Clarify this and fix up the docs to match. This changeset also refactors the tests quite a bit so as to make the test outputs clear when something is incorrect."
277,Merge release 1.4.4 changelog entries (#16190),
278,cgutil: handle panic from runc helper method (#16180),This PR wraps the cgroups.IsCgroup2UnifiedMode() helper method from runc in a defer/recover block because it might panic in some cases. Upstream fix in: https://github.com/opencontainers/runc/pull/3745 Closes #16179
279,"docs: remove cores/memory beta label, update driver cpu docs (#16175)","  docs: remove cores/memory beta label, update driver cpu docs   docs: fixup cr stuff "
280,build: update to go1.20.1 (#16182),
281,eventstream: Handle missing policy documents in event streams (#15495),Fixes https://github.com/hashicorp/nomad/issues/15493 Co-authored-by: Tim Gross link
282,docs: clarify upgrade note on 1.4.0 panics (#16171),"The panic bug for upgrades with older servers that shipped in 1.4.0 was fixed in 1.4.1, which makes the versions described in the warning in the upgrade guide misleading. Clarify the upgrade guide."
283,artifact: protect against unbounded artifact decompression (1.5.0) (#16151)," artifact: protect against unbounded artifact decompression  Starting with 1.5.0, set defaut values for artifact decompression limits. artifact.decompression_size_limit (default ""100GB"") - the maximum amount of data that will be decompressed before triggering an error and cancelling the operation artifact.decompression_file_count_limit (default 4096) - the maximum number of files that will be decompressed before triggering an error and cancelling the operation.  artifact: assert limits cannot be nil in validation"
284,"api: fix missing Node Status ""disconnected"" in API (#16166)",
285,docs: add variable specification docs (#16165),
286,Add warnings to module for non-alphanumeric keys.  (#15933)," Warn when Items key isn't directly accessible  Go template requires that map keys are alphanumeric for direct access using the dotted reference syntax. This warns users when they create keys that run afoul of this requirement.  cli: use regex to detect invalid indentifiers in var keys test: fix slash in escape test case api: share warning formatting function between API and CLI ui: warn if var key has characters other than _, letter, or number   Co-authored-by: Charlie Voiselle link Co-authored-by: Luiz Aoqui link"
287,cni: handle multi-path cni_path when fingerprinting plugins (#16163),"This PR fixes the CNI plugin fingerprinter to take into account the fact that the cni_path config can be a multi-path (e.g. module). Accumulate plugins from each of the possible path elements. If scanning any of the named directory fails, the fingerprinter fails. Fixes #16083 No CL/BP - has not shipped yet."
288,ui: glimmerize JobEditor (#16070),
289,Fix unbold header module and remove unused var in  func module (#16138),  Fix  unbold header and remove unused var in  func Signed-off-by: dttung2905 link   Add CHANGELOG file Signed-off-by: dttung2905 link   Apply suggestions from review     Signed-off-by: dttung2905 link Co-authored-by: Charlie Voiselle link Co-authored-by: Tim Gross link
290,build(deps): bump github.com/shirou/gopsutil/v3 from 3.22.12 to 3.23.1 (#16059),Bumps link from 3.22.12 to 3.23.1. - link - link  updated-dependencies: - dependency-name: github.com/shirou/gopsutil/v3   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
291,build(deps): bump github.com/containernetworking/plugins (#16060),Bumps link from 1.1.1 to 1.2.0. - link - link  updated-dependencies: - dependency-name: github.com/containernetworking/plugins   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
292,build(deps): bump google.golang.org/grpc from 1.52.0 to 1.53.0 (#16142),Bumps link from 1.52.0 to 1.53.0. - link - link  updated-dependencies: - dependency-name: google.golang.org/grpc   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
293,build(deps): bump github.com/docker/cli (#16141),Bumps link from 20.10.23+incompatible to 23.0.1+incompatible. - link - link  updated-dependencies: - dependency-name: github.com/docker/cli   dependency-type: direct:production   update-type: version-update:semver-major ... Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
294,build(deps): bump decode-uri-component from 0.2.0 to 0.2.2 in /website (#15470),Bumps link from 0.2.0 to 0.2.2. - link - link  updated-dependencies: - dependency-name: decode-uri-component   dependency-type: indirect ... Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
295,build(deps): bump json5 from 1.0.1 to 1.0.2 in /website (#15694),Bumps link from 1.0.1 to 1.0.2. - link - link - link  updated-dependencies: - dependency-name: json5   dependency-type: indirect ... Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
296,"deps: update go-set, go-landlock (#16146)","Made a breaking change in go-set (String() signature), need to update both these dependencies together and also fix a thing in structs.go"
297,git: ignore .fleet directory (#16144),New IDE from jetbrains gets its own config directory.
298,Add information about template to interpolation page (#10807), Add information about templating using module function to refer to environment variables.
299,[core] Do not start the plugin loader on non-clients (#16111),The plugin loader loads task and device driver plugins which are not used on server nodes.
300,slashed comments and datacenters note (#16116),
301,chore: Convert assets from bindatafs to go embeds (#16066)," Convert assets from bindatafs to go embeds Add command/asset to ""uninteresting"" list for missing test check Remove generate-examples target Update paths in tests"
302,eval broker: use write lock when reaping cancelable evals (#16112),"The eval broker's module method used by the cancelable eval reaper mutates the slice of cancelable evals by removing a batch at a time from the slice. But this method unsafely uses a read lock despite this mutation. Under normal workloads this is likely to be safe but when the eval broker is under the heavy load this feature is intended to fix, we're likely to have a race condition. Switch this to a write lock, like the other locks that mutate the eval broker state. This changeset also adjusts the timeout to allow poorly-sized Actions runners more time to schedule the appropriate goroutines. The test has also been updated to use module so we can have sensible reporting of the results rather than just a timeout error when things go wrong."
303,tests: don't mutate global structs in core scheduler tests (#16120),"Some of the core scheduler tests need the maximum batch size for writes to be smaller than the usual module. But they do so by unsafely modifying the global struct, which creates test flakes in other tests. Modify the functions under test to take a batch size parameter. Production code will pass the global while the tests can inject smaller values. Turn the module into a constant, and add a semgrep rule for avoiding this kind of thing in the future."
304,"Workload Identity, Task API, and Dynamic Node Metadata Docs (#16102)"," docs: add dynamic node metadata api docs  Also update all paths in the client API docs to explicitly state the module prefix. We're inconsistent about that, but I think it's better to display the full path than to only show the fragment. If we ever do a module whether or not we explicitly state module in our docs won't be our greatest concern.  docs: add task-api docs"
305,ci: reduce number of ember-test-audit iterations (#16118),
306,[chore] Move TestUtil_loadVersionControlGlobalConfigs into build flagged file (#16114),
307,ui: hide custom label if not text is provided (#16115),
308,tests: reduce timeout on test-api (#16107),"Sometimes GHA gets wedged, and there is no need to waste 30 minutes on a job that usually takes < 3. e.g. stuck loading module cache, which is out of our control https://github.com/hashicorp/nomad/actions/runs/4135098558/jobs/7147128419"
309,acl: never return auth errors for module RPC (#16108),"In #15901 we introduced pre-forwarding authentication for RPCs so that we can grab the identity for rate metrics. The module RPC is an unauthenticated endpoint, so any error message from authentication is not particularly useful. This would be harmless, but if you try to bootstrap with your module already set (perhaps because you were talking to another cluster previously from the same shell session), you'll get an authentication error instead of just having the token be ignored. This is a regression from the existing behavior, so have this endpoint ignore auth errors the same way we do for every other unauthenticated endpoint (ex module)"
310,docs: fix links in 1.5.0 upgrade guide (#16106),
311,users: create cache for user lookups (#16100)," users: create cache for user lookups  This PR introduces a global cache for OS user lookups. This should relieve pressure on the OS domain/directory lookups, which would be queried more now that Task API exists. Hits are cached for 1 hour, and misses are cached for 1 minute. These values are fairly arbitrary - we can tweak them if there is any reason to. Closes #16010  users: delete expired negative entry from cache"
312,cli: fix use of the sanitized method type for the login command. (#16105),"When an auth method was not supplied and the OIDC type was given in lower case, the CLI was not matching the default method due to casing and responded with a confusing user message. This change fixes the above problem, along with making use of the santized type easier."
313,circle: hardcode go1.20 string because yaml (#16104),
314,read: fix incorrect link to ref. arch. (#16103),
315,deps: upgrade to hashicorp/golang-lru/v2 (#16085),
316,users: eliminate LookupGroupId and its one use case (#16093),"This PR deletes the user.LookupGroupId function as it was only being used in a single test case, and its value was not important to the test."
317,docs: cleanup 1.5 changelog entries (#16094),
318,Merge pull request #16092 from hashicorp/release/1.5.0-beta.1,Release/1.5.0 beta.1
319,Prepare for next release,
320,Generate files for 1.5.0-beta.1 release,
321,Prepare release 1.5.0-beta.1,
322,rcp: bump SSO feature gate version. (#16080),
323,Dynamic Node Metadata (#15844),"Fixes #14617 Dynamic Node Metadata allows Nomad users, and their jobs, to update Node metadata through an API. Currently Node metadata is only reloaded when a Client agent is restarted. Includes new UI for editing metadata as well.  Co-authored-by: Phil Renaud link"
324,docs: update example module (#16082),"In #13374 we updated the commented-out module in the packaged example configuration file to match the existing documentation. Although this config value was commented-out, it was reported that changing the value was confusing. Update the commented-out line to the previous value and update the documented examples to match that. This matches most of the examples for Consul/Vault licensing as well. I've double-checked the tutorials and it looks like it'd been left on the previous value there, so no additional work to be done."
325,Add sprig for command templates (#9053),Adds the sprig functions to the template funcmap prepended with module to match the behavior in consul-template
326,agent: fix agent HTTP server audit event implementation access. (#16076),
327,doc: specifiy the default output is of json format for module command (#15984),Signed-off-by: dttung2905 link
328,main: remove deprecated uses of rand.Seed (#16074)," main: remove deprecated uses of rand.Seed  go1.20 deprecates rand.Seed, and seeds the rand package automatically. Remove cases where we seed the random package, and cleanup the one case where we intentionally create a known random source.   cl: update cl   mod: update go mod "
329,cli: remove deprecated module and module commands (#16068),These command were marked as deprecated in 1.4.0 with intent to remove in 1.5.0. Remove them and clean up the docs.
330,docs: update default Nomad bridge config (#16072),
331,docs: update CLI contrib checklist (#16073),
332,e2e: mark framework package as deprecated (#16075),Nothing more motivating than lots of deprecation warnings to get some code refactored.
333,Add module and module flag for  module command (#16055),Signed-off-by: dttung2905 link
334,website: add content-check command (#16064),
335,docker: disable driver when running as non-root on cgroups v2 hosts (#16063)," docker: disable driver when running as non-root on cgroups v2 hosts  This PR modifies the docker driver to behave like exec when being run as a non-root user on a host machine with cgroups v2 enabled. Because of how cpu resources are managed by the Nomad client, the nomad agent must be run as root to manage docker-created cgroups.  cl: update cl"
336,Task API via Unix Domain Socket (#15864),"This change introduces the Task API: a portable way for tasks to access Nomad's HTTP API. This particular implementation uses a Unix Domain Socket and, unlike the agent's HTTP API, always requires authentication even if ACLs are disabled. This PR contains the core feature and tests but followup work is required for the following TODO items:  Docs - might do in a followup since dynamic node metadata / task api / workload id all need to interlink Unit tests for auth middleware Caching for auth middleware Rate limiting on negative lookups for auth middleware   Co-authored-by: Seth Hoenig link"
337,build: update hc-install and golangci-lint tools (#16067),"Update golangci-lint again, and also hc-install which now has a real version."
338,build: update hclogvet (#16065),
339,ui: conditionally render buttons on job model (#16062),
340,scheduler: move utils into files specific to their scheduler type (#16051),"Many of the functions in the module file are specific to a particular scheduler, and very few of them have guards (or even names) that help avoid misuse with features specific to a given scheduler type. Move these functions (and their tests) into files specific to their scheduler type without any functionality changes to make it clear which bits go with what."
341,build: update to go1.20 (#16029),  build: update to go1.20   build: use stringy go1.20 in circle yaml   tests: handle new x509 certificate error structure in go1.20   cl: add cl entry 
342,docs: fix outstanding content conformance errors (#16040),
343,Footer styles re-applied to job template footer (#16037),
344,Label for the Web UI (#16006),  Demoable state   Demo mirage color   Label as a block with foreground and background colours   Test mock updates   Go test updated   Documentation update for label support 
345,System and sysbatch jobs always have zero index (#16030),"Service jobs should have unique allocation Names, derived from the Job.ID. System jobs do not have unique allocation Names because the index is intended to indicated the instance out of a desired count size. Because system jobs do not have an explicit count but the results are based on the targeted nodes, the index is less informative and this was intentionally omitted from the original design. Update docs to make it clear that NOMAD_ALLOC_INDEX is always zero for  system/sysbatch jobs Validate that module is incompatible with system/sysbatch jobs. System and sysbatch jobs always have a module of 0. So interpolation via module will not work as soon as there's more than one allocation placed. Validate against this on job submission."
346,docs: how to troubleshoot consul connect envoy (#15908),"  largely a doc-ification of this commit message:   d47678074bf8ae9ff2da3c91d0729bf03aee8446   this doesn't spell out all the possible failure modes,   but should be a good starting point for folks.   connect: add doc link to envoy bootstrap error   add Unwrap() to RecoverableError   mainly for easier testing "
347,Update networking_bridge_linux.go (#16025), Removed line from previous implementation remove import  Co-authored-by: Luiz Aoqui link
348,Add option to expose workload token to task (#15755),Add module jobspec block to expose workload identity tokens to tasks.  Co-authored-by: Anders link Co-authored-by: Tim Gross link Co-authored-by: Michael Schurter link
349,Change module default to examplemodule and recommend in docs (#15997),recommend .nomad.hcl for job files instead of .nomad (without .hcl) * nomad job init -> example.nomad.hcl * update docs
350,cli: Fix a panic in module when scheduling is slow (#16011),"If a deployment fails, the module command can get a nil deployment when it checks for a rollback deployment if there isn't one (or at least not one at the time of the query). Fix the panic."
351,bootstrap: upgrade golangci-lint in prep for go1.20 (#16024),This PR updates golangci-lint to work better with go1.20 - the previous version would cause in oom on 'make check'.
352,[feat] Nomad Job Templates (#15746),"  Extend variables under the nomad path prefix to allow for job-templates (#15570)   Extend variables under the nomad path prefix to allow for job-templates   Add job-templates to error message hinting   RadioCard component for Job Templates (#15582)   chore: add   test: component API   ui: component template   refact: remove  bc naming collission   styles: remove SASS var causing conflicts   Disallow specific variable at nomad/job-templates (#15681)   Disallows variables at exactly nomad/job-templates   idiomatic refactor   Expanding nomad job init to accept a template flag (#15571)   Adding a string flag for templates on job init   data-down actions-up version of a custom template editor within variable   Dont force grid on job template editor   list-templates flag started   Correctly slice from end of path name   Pre-review cleanup   Variable form acceptance test for job template editing   Some review cleanup   List Job templates test   Example from template test   Using must.assertions instead of require etc   ui: add choose template button (#15596)   ui: add new routes   chore: update file directory   ui: add choose template button   test: button and page navigation   refact: update var name   ui: use module component from module (#15607)   ui: integrate  buttons   refact: remove  helper   ui: remove icons on non-tertiary buttons   refact: update normalize method for key/value pairs (#15612)   module: module for module   The module method isn't included in the component API for module and the primary cancel behavior exists outside of the component. With the exception of the module page where we include this button in the top right of the component instead of next to the module button.   style: increase button size   style: keep lime green   ui: select template (#15613)   ui: deprecate unused component   ui: deprecate tests   ui: jobs.run.templates.index   ui: update logic to handle templates   refact: revert key/value changes   style: padding for cards + buttons   temp: fixtures for mirage testing   Revert ""refact: revert key/value changes""   This reverts commit 124e95d12140be38fc921f7e15243034092c4063.   ui: guard template for unsaved job   ui: handle reading template variable   Revert ""refact: update normalize method for key/value pairs (#15612)""   This reverts commit 6f5ffc9b610702aee7c47fbff742cc81f819ab74.   revert: remove test fixtures   revert: prettier problems   refact: test doesnt need filter expression   styling: button sizes and responsive cards   refact: remove route guarding   ui: update variable adapter   refact: remove model editing behavior   refact: model should query variables to populate editor   ui: clear qp on exit   refact: cleanup deprecated API   refact: query all namespaces   refact: deprecate action   ui: rely on  collection   refact: patch deprecate transition API   refact: patch test to expect namespace qp   styling: padding, conditionals   ui: flashMessage on 404   test: update for o(n+1) query   ui: create new job template (#15744)   refact: remove unused code   refact: add type safety   test: select template flow   test: add data-test attrs   chore: remove dead code   test: create new job flow   ui: add create button   ui: create job template   refact: no need for wildcard   refact:  record instead of delete   styling: spacing   ui: add error handling and form validation to job create template (#15767)   ui: handle server side errors   ui: show error to prevent duplicate   refact: conditional namespace   ui: save as template flow (#15787)   bug:  patches failing tests associated with module (#15812)   refact: update assertion   refact: test set-up   ui: job templates manager view (#15815)   ui: manager list view   test: edit flow   refact: deprecate column-helper   ui: template edit and delete flow (#15823)   ui: manager list view   refact: update title   refact: update permissions   ui: template edit page   bug: typo   refact: update toast messages   bug:  clear selections on exit (#15827)   bug:  clear controllers on exit   test: mirage config changes (#15828)   refact: deprecate column-helper   style: update z-index for HDS   Revert ""style: update z-index for HDS""   This reverts commit d3d87ceab6d083f7164941587448607838944fc1.   refact: update delete button   refact: edit redirect   refact: patch reactivity issues   styling: fixed width   refact: override defaults   styling: edit text causing overflow   styling:  add inline text   Co-authored-by: Phil Renaud link  bug: edit module to module  Co-authored-by: Phil Renaud link Co-authored-by: Phil Renaud link   test:  delete flow job templates (#15896)   refact: edit names   bug:  set correct ref to store   chore: trim whitespace:   test: delete flow   bug: reactively update view (#15904)   Initialized default jobs (#15856)   Initialized default jobs   More jobs scaffolded   Better commenting on a couple example job specs   Adapter doing the work   fall back to epic config   Label format helper and custom serialization logic   Test updates to account for a never-empty state   Test suite uses settled and maintain RecordArray in adapter return   Updates to hello-world and variables example jobspecs   Parameterized job gets optional payload output   Formatting changes for param and service discovery job templates   Multi-group service discovery job   Basic test for default templates (#15965)   Basic test for default templates   Percy snapshot for manage page   Some late-breaking design changes   Some copy edits to the header paragraphs for job templates (#15967)   Added some init options for job templates (#15994)   Async method for populating default job templates from the variable adapter    Co-authored-by: Jai link"
353,client: Add option to enable hairpinMode on Nomad bridge (#15961), Add module client config setting Add node attribute: module Changed format string to use module to escape user provided data Add test to validate template JSON for developer safety  Co-authored-by: Daniel Bennett link
354,Allow wildcard datacenters to be specified in job file (#11170),Also allows for default value of module
355,changelog: fix entries for #15522 and #15819 (#15998),
356,job parsing: fix panic when variable validation is missing condition (#16018),
357,fix(#13844): canonicalize job to avoid nil pointer deference (#13845),
358,consul: restore consul token when reverting a job (#15996),  consul: reset consul token on job during registration of a reversion   e2e: add test for reverting a job with a consul service   cl: fixup cl entry 
359,acl: fix a bug in token creation when parsing expiration TTLs.  (#15999),"The ACL token decoding was not correctly handling time duration syntax such as ""1h"" which forced people to use the nanosecond representation via the HTTP API. The change adds an unmarshal function which allows this syntax to be used, along with other styles correctly."
360,acl: return 400 not 404 code when creating an invalid policy. (#16000),
361,e2e: remove unused consulacls directory (#15995),This pile was deprecated when we starting using HCP Consul for e2e instead of standing up our own cluster and managing Consuls at test runtime.
362,docs: add upgrade notice for batch GC changes (#15985),
363,15154/alloc redirect (#15969),  refact: add conditional error handling   test: test conditional logic 
364,docs: removed extra 'end' in one of the code blocks in template stanza documentation (#15963),
365,Increases max variable size to 64KiB from 16KiB (#15983),
366,GC: ensure no leakage of evaluations for batch jobs. (#15097),"Prior to 2409f72 the code compared the modification index of a job to itself. Afterwards, the code compared the creation index of the job to itself. In either case there should never be a case of re-parenting of allocs causing the evaluation to trivially always result in false, which leads to unreclaimable memory. Prior to this change allocations and evaluations for batch jobs were never garbage collected until the batch job was explicitly stopped. The new module server configuration controls how often they are collected. The default threshold is module."
367,tests: bump consul and vault versions in test-core (#15979),
368,docker: set force=true on remove image to handle images referenced by multiple tags (#15962), docker: set force=true on remove image to handle images referenced by multiple tags  This PR changes our call of docker client RemoveImage() to RemoveImageExtended with the Force=true option set. This fixes a bug where an image referenced by more than one tag could never be garbage collected by Nomad. The Force option only applies to stopped containers; it does not affect running workloads.  docker: add note about image_delay and multiple tags
369,Fix typo in documentation (#15970),
370,"Fix broken link, typo, style edits. (#15968)",
371,Corrected a typo (#15942),
372,docs: Add info about variable item key name restrictions (#15966),"While you can use any string value for a variable Item's key name using characters that are outside of the set [unicode.Letter, unicode.Number,module] will require the module function for direct access."
373,Ensure infra_image gets proper label used for reconciliation (#15898), Ensure infra_image gets proper label used for reconciliation  Currently infra containers are not cleaned up as part of the dangling container cleanup routine. The reason is that Nomad checks if a container is a Nomad owned container by verifying the existence of the: module label. Ensure we set this label on the infra container as well.   fix unit test   changelog: add entry    Co-authored-by: Seth Hoenig link
374,Rename fields on proxyConfig (#15541),  Change api Fields for expose and paths   Add changelog entry   changelog: add deprecation notes about connect fields   api: minor style tweaks    Co-authored-by: Seth Hoenig link
375,build(deps): bump github.com/docker/docker from 20.10.21+incompatible to 20.10.23+incompatible (#15848), build(deps): bump github.com/docker/docker  Bumps link from 20.10.21+incompatible to 20.10.23+incompatible. - link - link  updated-dependencies: - dependency-name: github.com/docker/docker   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link  changelog: add entry for docker/docker   Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link Co-authored-by: Seth Hoenig link
376,build(deps): bump github.com/brianvoe/gofakeit/v6 from 6.19.0 to 6.20.1 (#15846),Bumps link from 6.19.0 to 6.20.1. - link - link  updated-dependencies: - dependency-name: github.com/brianvoe/gofakeit/v6   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
377,build(deps): bump github.com/hashicorp/vault/api from 1.8.2 to 1.8.3 (#15847),Bumps link from 1.8.2 to 1.8.3. - link - link - link  updated-dependencies: - dependency-name: github.com/hashicorp/vault/api   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
378,renamed stanza to block for consistency with other projects (#15941),
379,build(deps): bump github.com/docker/cli (#15938),Bumps link from 20.10.22+incompatible to 20.10.23+incompatible. - link - link  updated-dependencies: - dependency-name: github.com/docker/cli   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
380,volume: Add the missing option propagation_mode (#15626),
381,Fix documentation for module block: string replacement in key from module to module (#15940),Signed-off-by: dttung2905 link
382,cli: separate auth method config output for easier reading. (#15892),
383,docs: add ACL concepts page to introduce objects. (#15895),
384,build(deps): bump github.com/shoenig/test from 0.6.0 to 0.6.1 in /api (#15939), build(deps): bump github.com/shoenig/test from 0.6.0 to 0.6.1 in /api  Bumps link from 0.6.0 to 0.6.1. - link - link  updated-dependencies: - dependency-name: github.com/shoenig/test   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link  deps: update test   Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link Co-authored-by: Seth Hoenig link
385,consul: check for acceptable service identity on consul tokens (#15928),"When registering a job with a service and 'consul.allow_unauthenticated=false', we scan the given Consul token for an acceptable policy or role with an acceptable policy, but did not scan for an acceptable service identity (which is backed by an acceptable virtual policy). This PR updates our consul token validation to also accept a matching service identity when registering a service into Consul. Fixes #15902"
386,docs: add more warnings about running agent as root on Linux (#15926),
387,docs: add post-install steps for CNI to main install docs page (#15919),"The getting started Tutorial has a post-installation steps section that includes installing CNI plugins. Many users will want to use module networking right out of the gate, so adding these same post-install instructions to the main docs will be a better Day 0 experience for them."
388,client: always run alloc cleanup hooks on final update (#15855)," client: run alloc pre-kill hooks on last pass despite no live tasks  This PR fixes a bug where alloc pre-kill hooks were not run in the edge case where there are no live tasks remaining, but it is also the final update to process for the (terminal) allocation. We need to run cleanup hooks here, otherwise they will not run until the allocation gets garbage collected (i.e. via Destroy()), possibly at a distant time in the future. Fixes #15477  client: do not run ar cleanup hooks if client is shutting down"
389,template: restore driver handle on update (#15915),"When the template hook Update() method is called it may recreate the template manager if the Nomad or Vault token has been updated. This caused the new template manager did not have a driver handler because this was only being set on the Poststart hook, which is not called for inplace updates."
390,metrics: Add remaining server RPC rate metrics (#15901),
391,ui: fix alloc memory stats to match CLI output (#15909),
392,metrics: Add rate metrics to Client CSI endpoints (#15905),"Also tightens up authentication for these endpoints by enforcing the server certificate name is valid. We protect these endpoints currently by mTLS and can't use an auth token because these endpoints are (uniquely) called by the leader and followers for a given node won't have the leader's ephemeral ACL token. Add a certificate name check that requests come from a server and not a client, because no client should ever send these RPCs directly."
393,ui: scope variables form footer style (#15907),"Scope the module tag SCSS rule for the New Variable form to prevent it from affecting other module elements, such as the gutter menu Nomad version section."
394,ui: fix navigation for namespaced jobs in search and job version (#15906),
395,metrics: Add metrics to unauthenticated endpoints (#15899),
396,metrics: Add RPC rate metrics to endpoints that validate TLS names (#15900),
397,artifact: enable reading system git/mercurial configuration (#15903),"This PR adjusts the artifact sandbox on Linux to enable reading from known system-wide git or mercurial configuration, if they exist. Folks doing something odd like specifying custom paths for global config will need to use the standard locations, or disable artifact filesystem isolation."
398,ui: add client links to topo viz (#15867),  ui: add client links to topo viz   test: add node name for a11y violation 
399,nsd: block on removal of services (#15862)," nsd: block on removal of services  This PR uses a WaitGroup to ensure workload removals are complete before returning from ServiceRegistrationHandler.RemoveWorkload of the nomad service provider. The de-registration of individual services still occurs asynchrously, but we must block on the parent removal call so that we do not race with further operations on the same set of services - e.g. in the case of a task restart where we de-register and then re-register the services in quick succession. Fixes #15032  nsd: add e2e test for initial failing check and restart"
400,Allow per_alloc to be used with host volumes (#15780),Disallowing per_alloc for host volumes in some cases makes life of a nomad user much harder. When we rely on the NOMAD_ALLOC_INDEX for any configuration that needs to be re-used across restarts we need to make sure allocation placement is consistent. With CSI volumes we can use the module feature but for some reason this is explicitly disabled for host volumes. Ensure host volumes understand the concept of per_alloc
401,acl: make auth method default across all types (#15869),
402,sso: allow binding rules to create management ACL tokens. (#15860),  sso: allow binding rules to create management ACL tokens.   docs: update binding rule docs to detail management type addition. 
403,build(deps): bump github.com/aws/aws-sdk-go from 1.44.175 to 1.44.184 (#15849),Bumps link from 1.44.175 to 1.44.184. - link - link  updated-dependencies: - dependency-name: github.com/aws/aws-sdk-go   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
404,"docs: correct ""User"" attribute in Podman Task Driver Docs (#15421)",
405,metrics: measure rate of RPC requests that serve API (#15876),"This changeset configures the RPC rate metrics that were added in #15515 to all the RPCs that support authenticated HTTP API requests. These endpoints already configured with pre-forwarding authentication in #15870, and a handful of others were done already as part of the proof-of-concept work. So this changeset is entirely copy-and-pasting one method call into a whole mess of handlers. Upcoming PRs will wire up pre-forwarding auth and rate metrics for the remaining set of RPCs that have no API consumers or aren't authenticated, in smaller chunks that can be more thoughtfully reviewed."
406,docs: add caveat on dynamic blocks (#15857),
407,core: enforce strict steps for clients reconnect (#15808),"When a Nomad client that is running an allocation with module set misses a heartbeat the Nomad server will update its status to module. Upon reconnecting, the client will make three main RPC calls:  module is used to set the client status to module. module is used to update the client-side information about   allocations, such as their module, task states etc. module is used to upsert the entire node information,   including its status.  These calls are made concurrently and are also running in parallel with the scheduler. Depending on the order they run the scheduler may end up with incomplete data when reconciling allocations. For example, a client disconnects and its replacement allocation cannot be placed anywhere else, so there's a pending eval waiting for resources. When this client comes back the order of events may be:  Client calls module and is now module. Scheduler reconciles allocations and places the replacement alloc to    the client. The client is now assigned two allocations: the original    alloc that is still module and the replacement that is module. Client calls module and updates the original alloc to    module. Scheduler notices too many allocs and stops the replacement.  This creates unnecessary placements or, in a different order of events, may leave the job without any allocations running until the whole state is updated and reconciled. To avoid problems like this clients must update all of its relevant information before they can be considered module and available for scheduling. To achieve this goal the RPC endpoints mentioned above have been modified to enforce strict steps for nodes reconnecting:  module does not set the client status anymore. module sets the reconnecting client to the module   status until it successfully calls module.  These changes are done server-side to avoid the need of additional coordination between clients and servers. Clients are kept oblivious of these changes and will keep making these calls as they normally would. The verification of whether allocations have been updates is done by storing and comparing the Raft index of the last time the client missed a heartbeat and the last time it updated its allocations."
408,WI: allow workloads to use RPCs associated with HTTP API (#15870),"This changeset allows Workload Identities to authenticate to all the RPCs that support HTTP API endpoints, for use with PR #15864.  Extends the work done for pre-forwarding authentication to all RPCs that   support a HTTP API endpoint. Consolidates the auth helpers used by the CSI, Service Registration, and Node   endpoints that are currently used to support both tokens and client secrets.  Intentionally excluded from this changeset: * The Variables endpoint still has custom handling because of the implicit   policies. Ideally we'll figure out an efficient way to resolve those into real   policies and then we can get rid of that custom handling. * The RPCs that don't currently support auth tokens (i.e. those that don't   support HTTP endpoints) have not been updated with the new pre-forwarding auth   We'll be doing this under a separate PR to support RPC rate metrics."
409,docs: Migrate link formats (#15779),  Adding check-legacy-links-format workflow   Adding test-link-rewrites workflow   chore: updates link checker workflow hash   Migrating links to new format   Co-authored-by: Kendall Strautman link
410,acl: Fix panic when bogus token is passed (#15863),"If a consumer of the new module method gets passed a bogus token that's a correctly-shaped UUID, it will correctly get an identity without a ACL token. But most consumers will then panic when they consume this nil module for authorization. Because no API client should ever send a bogus auth token, update the module method to create the identity with remote IP (for metrics tracking) but also return an module."
411,docker: add option for Windows isolation modes (#15819),
412,add metric for count of RPC requests (#15515),"Implement a metric for RPC requests with labels on the identity, so that administrators can monitor the source of requests within the cluster. This changeset demonstrates the change with the new module RPC, and we'll wire up the remaining RPCs once we've threaded the new pre-forwarding authentication through the all. Note that metrics are measured after we forward but before we return any authentication error. This ensures that we only emit metrics on the server that actually serves the request. We'll perform rate limiting at the same place. Includes telemetry configuration to omit identity labels."
413,implement pre-forwarding auth on select RPCs (#15513),"In #15417 we added a new module method to the server that returns an module struct. This changeset implements this method for a small number of RPC endpoints that together represent all the various ways in which RPCs are sent, so that we can validate that we're happy with this approach."
414,client: add disk_total_mb and disk_free_mb config options (#15852),
415,core: backoff considerably when worker is behind raft (#15523),"Upon dequeuing an evaluation workers snapshot their state store at the eval's wait index or later. This ensures we process an eval at a point in time after it was created or updated. Processing an eval on an old snapshot could cause any number of problems such as:  Since job registration atomically updates an eval and job in a single    raft entry, scheduling against indexes before that may not have the    eval's job or may have an older version. The older the scheduler's snapshot, the higher the likelihood    something has changed in the cluster state which will cause the plan    applier to reject the scheduler's plan. This could waste work or    even cause eval's to be failed needlessly.  However, the workers run in parallel with a new server pulling the cluster state from a peer. During this time, which may be many minutes long, the state store is likely far behind the minimum index required to process evaluations. This PR addresses this by adding an additional long backoff period after an eval is nacked. If the scheduler's indexes catches up within the additional backoff, it will unblock early to dequeue the next eval. When the server shuts down we'll get a module error from the state store method. We need to bubble this error up so that other callers can detect it. Handle this case separately when waiting after dequeue so that we can warn on shutdown instead of throwing an ambiguous error message with just the text ""canceled."" While there may be more precise ways to block scheduling until the server catches up, this approach adds little risk and covers additional cases where a server may be temporarily behind due to a spike in load or a saturated network. For testing, we make the module into a parameter on the worker's module method  so that we can run backoff tests without waiting 30+ seconds. We haven't followed thru and made all the worker globals into worker parameters, because there isn't much use outside of testing, but we can consider that in the future. Co-authored-by: Tim Gross link"
416,Add INFO task even log line and make logmon less noisy (#15842)," client: log task events at INFO level  Fixes #15840 Example INFO level client logs with this enabled: module So task events will approximately double the number of per-task log lines, but I think they add a lot of value.  client: drop logmon 'opening' from debug->info  Cannot imagine why users care and removes 2 log lines per task invocation. ``` [INFO]  client: node registration complete [INFO]  client.alloc_runner.task_runner: Task event: alloc_id=1cafb2dc-302e-2c92-7845-f56618bc8648 task=sleepy type=Received msg=""Task received by client"" failed=false [INFO]  client.alloc_runner.task_runner: Task event: alloc_id=1cafb2dc-302e-2c92-7845-f56618bc8648 task=sleepy type=""Task Setup"" msg=""Building Task Directory"" failed=false <<< 2 ""opening fifo"" lines elided here >>> [WARN]  client.alloc_runner.task_runner.task_hook.logmon: plugin configured with a nil SecureConfig: alloc_id=1cafb2dc-302e-2c92-7845-f56618bc8648 task=sleepy [INFO]  client.driver_mgr.raw_exec: starting task: driver=raw_exec driver_cfg=""{Command:/bin/bash Args:[-c sleep 1000]}"" [WARN]  client.driver_mgr.raw_exec.executor: plugin configured with a nil SecureConfig: alloc_id=1cafb2dc-302e-2c92-7845-f56618bc8648 driver=raw_exec task_name=sleepy [INFO]  client.alloc_runner.task_runner: Task event: alloc_id=1cafb2dc-302e-2c92-7845-f56618bc8648 task=sleepy type=Started msg=""Task started by client"" failed=false ```  docs: add changelog for #15842"
417,Rename module metric (#15835),"This changeset fixes a long-standing point of confusion in metrics emitted by the eval broker. The eval broker has a queue of ""blocked"" evals that are waiting for an in-flight (""unacked"") eval of the same job to be completed. But this ""blocked"" state is not the same as the module status that we write to raft and expose in the Nomad API to end users. There's a second metric module that refers to evaluations in that state. This has caused ongoing confusion in major customer incidents and even in our own documentation! (Fixed in this PR.) There's little functional change in this PR aside from the name of the metric emitted, but there's a bit refactoring to clean up the names in module so that there aren't name collisions and multiple names for the same state. Changes included are: * Everything that was previously called ""pending"" referred to entities that were   associated witht he ""ready"" metric. These are all now called ""ready"" to match   the metric. * Everything named ""blocked"" in module is now named ""pending"", except   for a couple of comments that actually refer to blocked RPCs. * Added a note to the upgrade guide docs for 1.5.0. * Fixed the scheduling performance metrics docs because the description for   module was actually the description for   module."
418,Add raft snapshot configuration options (#15522), Add config elements Wire in snapshot configuration to raft Add hot reload of raft config Add documentation for new raft settings Add changelog
419,"docs: fix conflict metric documentation, fix typo (#15805)","The description for the module states that this could include evals blocked due to reached quota limits, but the module mentions being exclusive to its own metric.  I personally interpret module as encompassing any blocked evals for any reason, as written in the docs. Though someone will have to verify the validity of that statement and possibly rectify the other metric description. Fixed a typo: module vs module."
420,docs: clarify installing from source requirement on PATH. (#15833),
421,docs: add OIDC login API and CLI docs. (#15818),
422,consul: correctly interpret missing consul checks as unhealthy (#15822)," consul: correctly understand missing consul checks as unhealthy  This PR fixes a bug where Nomad assumed any registered Checks would exist in the service registration coming back from Consul. In some cases, the Consul may be slow in processing the check registration, and the response object would not contain checks. Nomad would then scan the empty response looking for Checks with failing health status, finding none, and then marking a task/alloc as healthy. In reality, we must always use Nomad's view of what checks should exist as the source of truth, and compare that with the response Consul gives us, making sure they match, before scanning the Consul response for failing check statuses. Fixes #15536   consul: minor CR refactor using maps not sets   consul: observe transition from healthy to unhealthy checks   consul: spell healthy correctly "
423,build(deps): bump github.com/prometheus/common from 0.37.0 to 0.39.0 (#15793),Bumps link from 0.37.0 to 0.39.0. - link - link  updated-dependencies: - dependency-name: github.com/prometheus/common   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
424,build(deps): bump github.com/shoenig/go-landlock from 0.1.3 to 0.1.4 (#15795),Bumps link from 0.1.3 to 0.1.4. - link - link  updated-dependencies: - dependency-name: github.com/shoenig/go-landlock   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
425,build(deps): bump github.com/rs/cors from 1.8.2 to 1.8.3 (#15794),Bumps link from 1.8.2 to 1.8.3. - link - link  updated-dependencies: - dependency-name: github.com/rs/cors   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
426,build(deps): bump google.golang.org/grpc from 1.51.0 to 1.52.0 (#15792), build(deps): bump google.golang.org/grpc from 1.51.0 to 1.52.0  Bumps link from 1.51.0 to 1.52.0. - link - link  updated-dependencies: - dependency-name: google.golang.org/grpc   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link  deps: format go.mod correctly  Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link Co-authored-by: Seth Hoenig link
427,build(deps): bump github.com/hashicorp/go-hclog from 1.3.1 to 1.4.0 (#15791),Bumps link from 1.3.1 to 1.4.0. - link - link  updated-dependencies: - dependency-name: github.com/hashicorp/go-hclog   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
428,changelog: add feature entry for SSO OIDC (#15821),
429,cli: use localhost for default login callback address. (#15820),
430,Merge pull request #15816 from hashicorp/sso/gh-13120-oidc-login,sso: login workflow implementation
431,ci: add semgrep update for known OIDC unauthenticated RPCs.,
432,Merge branch 'main' into sso/gh-13120-oidc-login,
433,Merge pull request #15764 from hashicorp/jrasell/gh-13120-oidc-login,"sso: add OIDC login RPC, HTTP, and CLI workflow"
434,[sso] OIDC Updates for the UI (#15804),  Updated UI to handle OIDC method changes   Remove redundant store unload call 
435,chore: updates generated docs (#15784),
436,e2e: fixup reference to exported test type (#15786),
437,[ui] Keyboard shortcuts for widening and narrowing task sidebar (#15807),  keyboard-commands helper to add widen and narrow commands   Percy flake fix 
438,[docs] Adjusting links for rewrite project (#15810),  Adjusting link to page about features   Fixing typo   Replacing old learn links with devdot paths   Removing extra space 
439,fix bug in nomad fmt -check does not return error code (#15797),
440,updates based on code review from @tgross.,
441,docs: add missing parameter module to module (#15785),
442,Return buffered text from log endpoint if decoding fails (#15558),"To see why I think this is a good change lets look at why I am making it My disk was full, which means GC was happening agressively. So by the time I called the logging endpoint from the SDK, the logs were GC'd The error I was getting before was: module Now the error I get is: module Still not super descriptive but much more debugable"
443,Fixing yaml syntax in frontmatter (#15781),
444,[ui] Fixes logger height issue when sidebar has events (#15759),  Fixes logger height issue when sidebar has events   Much simpler grid method for height calc 
445,env/aws: update ec2 cpu info data (#15770),
446,build: update to go 1.19.5 (#15769),
447,build(deps): bump github.com/containerd/containerd from 1.6.6 to 1.6.12 (#15726), build(deps): bump github.com/containerd/containerd from 1.6.6 to 1.6.12  Bumps link from 1.6.6 to 1.6.12. - link - link - link  updated-dependencies: - dependency-name: github.com/containerd/containerd   dependency-type: indirect ... Signed-off-by: dependabot[bot] link  cl: add cl for containerd/containerd  Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link Co-authored-by: Seth Hoenig link
448,build(deps): bump github.com/aws/aws-sdk-go from 1.44.163 to 1.44.175 (#15719),Bumps link from 1.44.163 to 1.44.175. - link - link  updated-dependencies: - dependency-name: github.com/aws/aws-sdk-go   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
449,build(deps): bump golang.org/x/sys from 0.3.0 to 0.4.0 (#15720),Bumps link from 0.3.0 to 0.4.0. - link - link  updated-dependencies: - dependency-name: golang.org/x/sys   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
450,build(deps): bump golang.org/x/crypto from 0.1.0 to 0.5.0 (#15721),Bumps link from 0.1.0 to 0.5.0. - link - link  updated-dependencies: - dependency-name: golang.org/x/crypto   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
451,build(deps): bump github.com/shirou/gopsutil/v3 from 3.22.11 to 3.22.12 (#15723),Bumps link from 3.22.11 to 3.22.12. - link - link  updated-dependencies: - dependency-name: github.com/shirou/gopsutil/v3   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
452,deps: add OIDC required deps to main module.,
453,cli: add login command to allow OIDC provider SSO login.,
454,api: add OIDC HTTP API endpoints and SDK.,
455,lib: add OIDC provider cache and callback server.,The OIDC provider cache is used by the RPC handler as the OIDC implementation keeps long lived processes running. These process include connections to the remote OIDC provider. The Callback server is used by the CLI and starts when the login command is triggered. This callback server includes success HTML which is displayed when the user successfully logs into the remote OIDC provider.
456,rpc: add OIDC login related endpoints.,"This adds new OIDC endpoints on the RPC endpoint. These two RPCs handle generating the OIDC provider URL and then completing the login by exchanging the provider token with an internal Nomad token. The RPC endpoints both do double forwarding. The initial forward is to ensure we are talking to the regional leader; the second then takes into account whether the auth method generates local or global tokens. If it creates global tokens, we must then forward onto the federated regional leader."
457,consul/connect: use block not optional for opaque map (#15765),
458,consul/connect: support for proxy upstreams opaque config (#15761),This PR adds support for configuring module for Consul Connect upstreams. This is an opaque config value to Nomad - the data is passed directly to Consul and is unknown to Nomad.
459,Fix rejoin_after_leave behavior (#15552),
460,connect: ingress gateway validation for http hosts and wildcards (#15749)," connect: fix non-""tcp"" ingress gateway validation  changes apply to http, http2, and grpc: * if ""hosts"" is excluded, consul will use its default domain   e.g. .ingress.dc1.consul * can't set hosts with ""*"" service name * test http2 and grpc too"
461,consul: add client configuration for grpc_ca_file (#15701),  [no ci] first pass at plumbing grpc_ca_file   consul: add support for grpc_ca_file for tls grpc connections in consul 1.14+   This PR adds client config to Nomad for specifying consul.grpc_ca_file These changes combined with https://github.com/hashicorp/consul/pull/15913 should finally enable Nomad users to upgrade to Consul 1.14+ and use tls grpc connections.   consul: add cl entgry for grpc_ca_file   docs: mention grpc_tls changes due to Consul 1.14 
462,cli: Add a nomad operator client state command (#15469),Signed-off-by: dttung2905 link
463,[ui] Show task events in the sidebar (#15733),  Add task events to task logs sidebar   Max-heighting inner table when present for nice looking borders 
464,Basic sidebar expander (#15735),
465,scheduler: allow using device ID as attribute (#15455),Devices are fingerprinted as groups of similar devices. This prevented specifying specific device by their ID in constraint and affinity rules. This commit introduces the module attribute that returns a comma separated list of IDs that are part of the device group. Users can then use the set operators to write rules.
466,vault: configure user agent on Nomad vault clients (#15745), vault: configure user agent on Nomad vault clients  This PR attempts to set the User-Agent header on each Vault API client created by Nomad. Still need to figure a way to set User-Agent on the Vault client created internally by consul-template.  vault: fixup find-and-replace gone awry
467,acl: binding rules evaluation (#15697),Binder provides an interface for binding claims and ACL roles/policies of Nomad.
468,Authenticate method improvements (#15734),"This changeset covers a sidebar discussion that @schmichael and I had around the design for pre-forwarding auth. This includes some changes extracted out of 15513 to make it easier to review both and leave a clean history.   Remove fast path for NodeID. Previously-connected clients will have a NodeID   set on the context, and because this is a large portion of the RPCs sent we   fast-pathed it at the top of the module method. But the context is   shared for all yamux streams over the same yamux session (and TCP   connection). This lets an authenticated HTTP request to a client use the   NodeID for authentication, which is a privilege escalation. Remove the fast   path and annotate it so that we don't break it again.   Add context to decisions around AuthenticatedIdentity. The module   method taken on its own looks like it wants to return an module that folds   over all the various identity types (creating an ephemeral ACL on the fly if   neccessary). But keeping these fields idependent allows RPC handlers to   differentiate between internal and external origins so we most likely want to   avoid this. Leave some docstrings as a warning as to why this is built the way   it is.   Mutate the request rather than returning. When reviewing #15513 we decided   that forcing the request handler to call module was repetitive and   error prone. Instead, the module method mutates the request by setting   its module. "
469,docker: configure restart policy for networking pause container (#15732),"This PR modifies the configuration of the networking pause contaier to include the ""unless-stopped"" restart policy. The pause container should always be restored into a running state until Nomad itself issues a stop command for the container. This is not a perfect fix for #12216 but it should cover the 99% use case - where a pause container gets accidently stopped / killed for some reason. There is still a possibility where the pause container and main task container are stopped and started in the order where the bad behavior persists, but this is fundamentally unavoidable due to how docker itself abstracts and manages the underlying network namespace referenced by the containers. Closes #12216"
470,Update template.mdx (#15737),"fix typo issue in variable url : remove unwanted ""r"""
471,artifact: fix sandbox behavior when destination is shared alloc directory (#15712),"This PR fixes the artifact sandbox (new in Nomad 1.5) to allow downloading artifacts into the shared 'alloc' directory made available to each task in a common allocation. Previously we assumed the 'alloc' dir would be mounted under the 'task' dir, but this is only the case in fs isolation: chroot; in other modes the alloc dir is elsewhere."
472,deps: update shoenig/test to v0.6.0 (#15715),Adds support for custom cmp.Options; need to fix one minor thing causing api breakage.
473,e2e: fixup windows artifact download test cases (#15710), fix wrong task name for one case comment out git windows test (still need to setup git on e2e windows client)
474,docs: networking (#15358),Co-authored-by: Charlie Voiselle link
475,e2e: disable disconnected clients test(s) (#15703),The e2e suite is not in good shape right now; let's disable the tests that modify agent / node state until we can get things working again. Also the one DC test that was enabled still doesn't work anyway.
476,docs: clarify shutdown_delay jobspec param and service behaviour. (#15695),
477,CI: run tests on pull_request and push to main/release (#15690),"Running tests module prevents GitHub from showing the workflow approval button, which prevents tests from being run on community-contributed (or even just non-Nomad HashiCorp folks) PRs. Running module automatically picks up opened, reopened, and synchronize hooks (where ""synchronize"" means a push to HEAD on the PR's branch, so that'll pick up rebases and updates). But we also want to run tests on module and the various module backport branches, so retain a module for those."
478,agent: Make agent syslog log level inherit from Nomad agent log (#15625),
479,test: wait for node in api tests that register job (#15677),
480,tests: fix assertion for slice length (#15672),"This assertions got borked during the refactoring; should be at least one element, not exactly one element."
481,csi: Fix parsing of '=' in secrets at command line and HTTP (#15670),"The command line flag parsing and the HTTP header parsing for CSI secrets incorrectly split at more than one '=' rune, making it impossible to use secrets that included that rune."
482,docs: nomad module typo fix (#15667),Status instead of Stauts
483,ci: swap freeport for portal in packages (#15661),
484,docs: fix system sample request (#15650),
485,command: fixup parsing of stale query parameter (#15631),"In #15605 we fixed the bug where the presense of ""stale"" query parameter was mean to imply stale, even if the value of the parameter was ""false"" or malformed. In parsing, we missed the case where the slice of values would be nil which lead to a failing test case that was missed because CI didn't run against the original PR."
486,docs: fix service name interpolation key details. (#15643),
487,build(deps): bump github.com/hashicorp/go-set from 0.1.6 to 0.1.7 (#15624),Bumps link from 0.1.6 to 0.1.7. - link - link  updated-dependencies: - dependency-name: github.com/hashicorp/go-set   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
488,build(deps): bump github.com/docker/cli (#15623),Bumps link from 20.10.21+incompatible to 20.10.22+incompatible. - link - link  updated-dependencies: - dependency-name: github.com/docker/cli   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
489,build(deps): bump golang.org/x/sys from 0.2.0 to 0.3.0 (#15622),Bumps link from 0.2.0 to 0.3.0. - link - link  updated-dependencies: - dependency-name: golang.org/x/sys   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
490,build(deps): bump github.com/hashicorp/consul/api from 1.15.3 to 1.18.0 (#15621),Bumps link from 1.15.3 to 1.18.0. - link - link - link  updated-dependencies: - dependency-name: github.com/hashicorp/consul/api   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
491,build(deps): bump github.com/hashicorp/go-plugin from 1.4.6 to 1.4.8 (#15620),Bumps link from 1.4.6 to 1.4.8. - link - link - link  updated-dependencies: - dependency-name: github.com/hashicorp/go-plugin   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
492,cleanup: remove usage of consul/sdk/testutil/retry (#15609),"This PR removes usages of module, as part of the ongoing effort to remove use of any non-API module from Consul. There is one remanining usage in the helper/freeport package, but that will get removed as part of #15589"
493,fix: module querystring parameter value as boolean (#15605), Add changes to make stale querystring param boolean  Signed-off-by: dttung2905 link  Make error message more consistent  Signed-off-by: dttung2905 link  Changes from code review + Adding CHANGELOG file  Signed-off-by: dttung2905 link  Changes from code review to use github.com/shoenig/test package  Signed-off-by: dttung2905 link  Change must.Nil() to must.NoError()  Signed-off-by: dttung2905 link  Minor fix on the import order  Signed-off-by: dttung2905 link  Fix existing code format too  Signed-off-by: dttung2905 link  Minor changes addressing code review feedbacks  Signed-off-by: dttung2905 link  swap must.EqOp() order of param provided  Signed-off-by: dttung2905 link Signed-off-by: dttung2905 link
494,api: purge testify and pretty dependencies  (#15627),  api: swap testify for test (acl)   api: swap testify for test (agent)   Please enter the commit message for your changes. Lines starting   api: swap testify for test (allocations)   api: swap testify for test (api)   api: swap testify for test (compose)   api: swap testify for test (constraint)   api: swap testify for test (consul)   api: swap testify for test (csi)   api: swap testify for test (evaluations)   api: swap testify for test (event stream)   api: swap testify for test (fs)   api: swap testify for test (ioutil)   api: swap testify for test (jobs)   api: swap testify for test (keyring)   api: swap testify for test (operator_ent)   api: swap testify for test (operator_metrics)   api: swap testify for test (operator)   api: swap testify for test (quota)   api: swap testify for test (resources)   api: swap testify for test (fix operator_metrics)   api: swap testify for test (scaling)   api: swap testify for test (search)   api: swap testify for test (sentinel)   api: swap testify for test (services)   api: swap testify for test (status)   api: swap testify for test (system)   api: swap testify for test (tasks)   api: swap testify for test (utils)   api: swap testify for test (variables)   api: remove dependencies on testify and pretty 
495,ACL Binding Rules CLI documentation (#15584),
496,api: cleanup use of deprecated waiter functions (#15608),
497,command: fixup tests concerning multi job stop (#15606)," command: fixup job multi-stop test  This PR refactors the StopCommand test that runs 10 jobs and then passes them all to one invokation of 'job stop'.   test: swap use of assert for must   test: cleanup job files we create   command: fixup job stop failure tests   Now that JobStop works on concurrent jobs, the error messages are different.  cleanup: use multiple post scripts"
498,tests: do not return error from testagent shutdown (#15595),
499,fix failing UpsertBindingRules unit test (#15604),"UpsertBindingRules RPC changed in eacecb8, validation happens after the ID check now, because we don't want validation to fail for update payloads which may contain incomplete objects."
500,ci: remove lint workflow from circle (#15593),This PR remove the lint-go workflow from circle; we already have the linting covered in GHA and the circle stuff is just outdated anyway.
501,build(deps): bump github.com/aws/aws-sdk-go from 1.44.142 to 1.44.163 (#15594),Bumps link from 1.44.142 to 1.44.163. - link - link  updated-dependencies: - dependency-name: github.com/aws/aws-sdk-go   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
502,build(deps): bump github.com/shirou/gopsutil/v3 from 3.22.10 to 3.22.11 (#15467),Bumps link from 3.22.10 to 3.22.11. - link - link  updated-dependencies: - dependency-name: github.com/shirou/gopsutil/v3   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
503,build(deps): bump github.com/prometheus/client_golang (#15466),Bumps link from 1.13.0 to 1.14.0. - link - link - link  updated-dependencies: - dependency-name: github.com/prometheus/client_golang   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
504,build(deps): bump github.com/golang-jwt/jwt/v4 from 4.4.2 to 4.4.3 (#15464),Bumps link from 4.4.2 to 4.4.3. - link - link - link  updated-dependencies: - dependency-name: github.com/golang-jwt/jwt/v4   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
505,build(deps): bump github.com/container-storage-interface/spec (#15463),Bumps link from 1.4.0 to 1.7.0. - link - link  updated-dependencies: - dependency-name: github.com/container-storage-interface/spec   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
506,[ui] Make the not-auth'd messages in the app less token-centric (#15557),  Make the not-auth'd messages in the app less token-centric   new helper to conditionally capitalize handlebars strings 
507,bugfix: unit test for GetACLBindingRules (#15583),Unit test for GetACLBindingRules state store method would fail because we'd expect order of returned items.
508,deps: update shoenig/test to 0.5.2 and fixup breaking changes (#15574),
509,acl: binding rules API documentation (#15581),
510,acl: modify update endpoints behavior (#15580),"API and RPC endpoints for ACLAuthMethods and ACLBindingRules should allow users to send incomplete objects in order to, e.g., update single fields. This PR provides ""merging"" functionality for these endpoints."
511,Migrate acls to generics (#13721), Migrate acls to generics  See hashicorp/go-immutable-radix#43  deps: fixup go.mod formatting  Co-authored-by: Seth Hoenig link
512,"command/job_stop: accept multiple jobs, stop concurrently (#12582)"," command/job_stop: accept multiple jobs, stop concurrently  Signed-off-by: danishprakash link  command/job_stop_test: add test for multiple job stops  Signed-off-by: danishprakash link  improve output, add changelog and docs  Signed-off-by: danishprakash link Co-authored-by: Michael Schurter link"
513,api: make api tests fast and more concurrency safe (#15543),"This PR tries to make API tests run fast, as an experiment to later apply to all packages. Key changes include  Swapping freeport for test/portal for port allocations Swappng some uses of WaitForResult with test/wait Turning on parallelism in api/testutil/slow.go Switching to custom public runner (32 vcpu)  There's also chunk of cleanup brought in for the ride"
514,core: add ACL binding rule to replication system. (#15555),"ACL binding rule create and deletes are always forwarded to the authoritative region. In order to make these available in federated regions, the leaders in these regions need to replicate from the authoritative."
515,[ui] Token management interface on policy pages (#15435),"  basic-functionality demo for token CRUD   Styling for tokens crud   Tokens crud styles   Expires, not expiry   Mobile styles etc   Refresh and redirect rules for policy save and token creation   Delete method and associated serializer change   Ability-checking for tokens   Update policies acceptance tests to reflect new redirect rules   Token ability unit tests   Mirage config methods for token crud   Token CRUD acceptance tests   A couple visual diff snapshots   Add and Delete abilities referenced for token operations   Changing timeouts and adding a copy to clipboard action   replaced accessor with secret when copying to clipboard   PR comments addressed   Simplified error passing for policy editor "
516,cli: add ACL binding rule commands for CRUD actions. (#15554),
517,ACL: add ACL binding rule RPC and HTTP API handlers. (#15529),"This change add the RPC ACL binding rule handlers. These handlers are responsible for the creation, updating, reading, and deletion of binding rules. The write handlers are feature gated so that they can only be used when all federated servers are running the required version. The HTTP API handlers and API SDK have also been added where required. This allows the endpoints to be called from the API by users and clients."
518,events: add ACL binding rules to core events stream topics. (#15544),
519,acl: SSO auth methods CLI documentation (#15538),This PR provides documentation for the ACL Auth Methods CLI commands. Co-authored-by: James Rasell link
520,acl: numerous small bugfixes for acl auth methods CLI (#15539),This PR contains a number of small bugfixes discovered during #15538 work.
521,acl: add binding rule object state schema and functionality. (#15511),"This change adds a new table that will store ACL binding rule objects. The two indexes allow fast lookups by their ID, or by which auth method they are linked to. Snapshot persist and restore functionality ensures this table can be saved and restored from snapshots. In order to write and delete the object to state, new Raft messages have been added. All RPC request and response structs, along with object functions such as diff and canonicalize have been included within this work as it is nicely separated from the other areas of work."
522,[CI-only] Run builds on pushes to main and the release branches (#14630),
523,"ui:  move ""add more"" button in variable create and edit forms (#15434)","  refact: move conditional logic   chore: prettify template   test: update test for markup change   Revert ""chore: prettify template""   This reverts commit ff1e0f02eb7ea30ede2cf93e9646a339601acdbe.   styles: add space to save button for consistency   style:  add save selector for Submit button   refact: conditionally render add button based on view   Revert ""test: update test for markup change""   This reverts commit 59318cde68b50aaf915be7cb9f7e332b7f0204c7.   style: add more button wonkiness   test: use data-test attr   test: handle non-table view on create   ui:  add reactive getter property to use in template   style use grid instead of margin   Co-authored-by: Preston Bourne link"
524,csi: avoid a nil pointer when handling plugin events (#15518),"If a plugin crashes quickly enough, we can get into a situation where the deregister function is called before it's ever registered. Safely handle the resulting nil pointer in the dynamic registry by not emitting a plugin event, but also update the plugin event handler to tolerate nil pointers in case we wire it up elsewhere in the future."
525,artifact: enable inheriting environment variables from client (#15514), artifact: enable inheriting environment variables from client  This PR adds client configuration for specifying environment variables that should be inherited by the artifact sandbox process from the Nomad Client agent. Most users should not need to set these values but the configuration is provided to ensure backwards compatability. Configuration of go-getter should ideally be done through the artifact block in a jobspec task. e.g. module Closes #15498  website: update set_environment_variables text to mention PATH
526,Use custom runners pinned to 20.04 for building nomad (#15490),
527,bugfix: acl sso auth methods test failures (#15512),This PR fixes unit test failures introduced in f4e89e2
528,acl: make sure there is only one default Auth Method per type (#15504),This PR adds a check that makes sure we don't insert a duplicate default ACL auth method for a given type.
529,acl: SSO auth methods API documentation (#15475),This PR provides documentation for the ACL Auth Methods API endpoints. Co-authored-by: James Rasell link
530,docs: clarify rescheduling happens when tasks fail (#15485),
531,artifact: add client toggle to disable filesystem isolation (#15503),"This PR adds the client config option for turning off filesystem isolation, applicable on Linux systems where filesystem isolation is possible and enabled by default. module Closes #15496"
532,pointer: add Merge helper function for merging pointers (#15499),"This PR adds Merge() helper function for choosing which value of two pointers to use during a larger merge operation. If 'next' is not nil, use that value, otherwise use the 'previous' value."
533,acl: canonicalize ACL Auth Method object (#15492),
534,client: sandbox go-getter subprocess with landlock (#15328)," client: sandbox go-getter subprocess with landlock  This PR re-implements the getter package for artifact downloads as a subprocess. Key changes include On all platforms, run getter as a child process of the Nomad agent. On Linux platforms running as root, run the child process as the nobody user. On supporting Linux kernels, uses landlock for filesystem isolation (via go-landlock). On all platforms, restrict environment variables of the child process to a static set. notably TMP/TEMP now points within the allocation's task directory kernel.landlock attribute is fingerprinted (version number or unavailable) These changes make Nomad client more resilient against a faulty go-getter implementation that may panic, and more secure against bad actors attempting to use artifact downloads as a privilege escalation vector. Adds new e2e/artifact suite for ensuring artifact downloading works. TODO: Windows git test (need to modify the image, etc... followup PR)   landlock: fixup items from cr   cr: fixup tests and go.mod file "
535,bugfix: make sure streaming endpoints are only registered once (#15484),"Streaming RPCs should only be registered once, not on every RPC call, because they set keys in StreamingRpcRegistry.registry map. This PR fixes it by checking whether endpoints are already registered before calling .register() method. Fixes #15474 Co-authored-by: Tim Gross link"
536,Pre forwarding authentication (#15417),"Upcoming work to instrument the rate of RPC requests by consumer (and eventually rate limit) require that we authenticate a RPC request before forwarding. Add a new top-level module method to the server and have it return an module struct. RPC handlers will use the relevant fields of this identity for performing authorization. This changeset includes: * The main implementation of module * Provide a new RPC module for debugging authentication. This endpoint   returns the same module that will be used by RPC handlers. At   some point we might want to give this an equivalent HTTP endpoint but I didn't   want to add that to our public API until some of the other Workload Identity   work is solidified, especially if we don't need it yet. * A full coverage test of the module method. This sets up two server   nodes with mTLS and ACLs, some tokens, and some allocations with workload   identities. * Wire up an example of using module in the module RPC and   see how authorization happens after forwarding. * A new semgrep rule for module, which we'll need to update once we're   ready to wire up more RPC endpoints with authorization steps."
537,[ui] Policies UI (#13976),Co-authored-by: Mike Nomitch link
538,acl: sso auth method snapshot restore test (#15482),
539,acl: added type to ACL Auth Method stub (#15480),
540,bugfix: corrected indentation for ACL auth method create CLI command (#15481),
541,fingerprint: add fingerprinting for CNI plugins presense and version (#15452),"This PR adds a fingerprinter to set the attribute ""plugins.cni.version."" => """" for each CNI plugin in .cni_path (/opt/cni/bin by default)."
542,[ui] Adding canary_tags the web UI (#15458),  Adding canary_tags to anyplace we show service tags   CSS moved and tabs to spaces 
543,Add namespaces to exec window (#15454),
544,"style: Remove ""is-primary"" class from TaskRow (#15437)","  style: Remove ""is-primary"" class from TaskRow   Revert ""style: Remove ""is-primary"" class from TaskRow""   This reverts commit 86e94c4db1d817f9f6d5b205724ce2a943987001.  style: stop muting text deco to comply w/ WCAG  Co-authored-by: Jai Bhagat link"
545,remove most static RPC handlers (#15451),"Nomad server components that aren't in the module package like the deployment watcher and volume watcher need to make RPC calls but can't import the Server struct to do so because it creates a circular reference. These components have a ""shim"" object that gets populated to pass a ""static"" handler that has no RPC context. Most RPC handlers are never used in this way, but during server setup we were constructing a set of static handlers for most RPC endpoints anyways. This is slightly wasteful but also confusing to developers who end up being encouraged to just copy what was being done for previous RPCs. This changeset includes the following refactorings: * Remove the static handlers field on the server * Instead construct just the specific static handlers we need to pass into the   deployment watcher and volume watcher. * Remove the unnecessary static handler from heartbeater * Update various tests to avoid needing the static endpoints and have them use a   endpoint constructed on the spot. Follow-up work will examine whether we can remove the RPCs from deployment watcher and volume watcher entirely, falling back to raft applies like node drainer does currently."
546,chore: Update Digital Team Files (#15453),  Update generated scripts (website-start.sh)   Update generated scripts (website-build.sh)   Update generated scripts (should-build.sh)   Update generated website Makefile 
547,docs: update module docs with capabilities and topology (#15448),"The module command supports displaying CSI capabilities and topology accessibility, but this was missing from the documentation. Extend the module example to show that info."
548,bug:  hitting refresh on module doesn't display data (#15431),  ui: create id helper   refact: handle async relationships   chore: prettify template   ui: helper async escape hatch   refact: use escape hatch for tooltip 
549,fix enterprise endpoint registration (#15446),"In #15430 we refactored the RPC endpoint configuration to make adding the RPC context easier. But when implementing the change on the Enterprise side, I discovered that the registration of enterprise endpoints was being done incorrectly -- this doesn't show up on OSS because the registration is always a no-op here."
550,refact: order search before sort (#15432),
551,provide module to all RPC handlers (#15430),"Upcoming work to instrument the rate of RPC requests by consumer (and eventually rate limit) requires that we thread the module through all RPC handlers so that we can access the underlying connection. This changeset adds the context to everywhere we intend to initially support it and intentionally excludes streaming RPCs and client RPCs. To improve the ergonomics of adding the context everywhere its needed and to clarify the requirements of dynamic vs static handlers, I've also done a good bit of refactoring here:  canonicalized the RPC handler fields so they're as close to identical as   possible without introducing unused fields (i.e. I didn't add loggers if the   handler doesn't use them already). canonicalized the imports in the handler files. added a module function for each handler that ensures we're   constructing the handlers with the required arguments. reordered the registration in server.go to match the order of the files (to   make it easier to see if we've missed one), and added a bunch of commentary   there as to what the difference between static and dynamic handlers is."
552,consul: fixup expected consul tagged_addresses when using ipv6 (#15411),"This PR is a continuation of #14917, where we missed the ipv6 cases. Consul auto-inserts tagged_addresses for keys - lan_ipv4 - wan_ipv4 - lan_ipv6 - wan_ipv6 even though the service registration coming from Nomad does not contain such elements. When doing the differential between services Nomad expects to be registered vs. the services actually registered into Consul, we must first purge these automatically inserted tagged_addresses if they do not exist in the Nomad view of the Consul service."
553,Update affinity.mdx (#15168),Fix the comment to correspond to the code
554,"Percy-specific CSS to block out the exact token expiry time, which would mess w vis diff tests (#15422)",
555,docs: clarify autoscaling factor and threshold for target-value plugin (#15418),
556,build(deps): bump google.golang.org/grpc from 1.50.1 to 1.51.0 (#15402), build(deps): bump google.golang.org/grpc from 1.50.1 to 1.51.0  Bumps link from 1.50.1 to 1.51.0. - link - link  updated-dependencies: - dependency-name: google.golang.org/grpc   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link  changelog: add entry for #15402  Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link Co-authored-by: Luiz Aoqui link
557,build(deps): bump github.com/hashicorp/consul/sdk from 0.11.0 to 0.13.0 (#15401),Bumps link from 0.11.0 to 0.13.0. - link - link - link  updated-dependencies: - dependency-name: github.com/hashicorp/consul/sdk   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
558,build(deps): bump github.com/mitchellh/cli from 1.1.4 to 1.1.5 (#15400),Bumps link from 1.1.4 to 1.1.5. - link - link  updated-dependencies: - dependency-name: github.com/mitchellh/cli   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
559,build(deps): bump github.com/zclconf/go-cty from 1.12.0 to 1.12.1 (#15403),Bumps link from 1.12.0 to 1.12.1. - link - link - link  updated-dependencies: - dependency-name: github.com/zclconf/go-cty   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
560,build(deps): bump github.com/hashicorp/vault/api from 1.8.1 to 1.8.2 (#15404),Bumps link from 1.8.1 to 1.8.2. - link - link - link  updated-dependencies: - dependency-name: github.com/hashicorp/vault/api   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
561,build(deps): bump github.com/shoenig/test from 0.4.4 to 0.4.5 in /api (#15405), build(deps): bump github.com/shoenig/test from 0.4.4 to 0.4.5 in /api  Bumps link from 0.4.4 to 0.4.5. - link - link  updated-dependencies: - dependency-name: github.com/shoenig/test   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link  deps: update github.com/shoenig/test v0.4.4 -> v0.4.5  Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link Co-authored-by: Luiz Aoqui link
562,acl: sso auth methods RPC/API/CLI should return created or updated objects (#15410),"Currently CRUD code that operates on SSO auth methods does not return created or updated object upon creation/update. This is bad UX and inconsistent behavior compared to other ACL objects like roles, policies or tokens. This PR fixes it. Relates to #13120"
563,client: manually cleanup leaked iptables rules (#15407),"This PR adds a secondary path for cleaning up iptables created for an allocation when the normal CNI library fails to do so. This typically happens when the state of the pause container is unexpected - e.g. deleted out of band from Nomad. Before, the iptables rules would be leaked which could lead to unexpected nat routing behavior later on (in addition to leaked resources). With this change, we scan for the rules created on behalf of the allocation being GC'd and delete them. Fixes #6385"
564,ui: html escaping (#15409),
565,"[ui, epic] SSO and Auth improvements (#15110)","  Top nav auth dropdown (#15055)   Basic dropdown styles   Some cleanup   delog   Default nomad hover state styles   Component separation-of-concerns and acceptance tests for auth dropdown   lintfix   [ui, sso] Handle token expiry 500s (#15073)   Handle error states generally   Dont direct, just redirect   no longer need explicit error on controller   Redirect on token-doesnt-exist   Forgot to import our time lib   Linting on _blank   Redirect tests   changelog   [ui, sso] warn user about pending token expiry (#15091)   Handle error states generally   Dont direct, just redirect   no longer need explicit error on controller   Linting on _blank   Custom notification actions and shift the template to within an else block   Lintfix   Make the closeAction optional   changelog   Add a mirage token that will always expire in 11 minutes   Test for token expiry with ember concurrency waiters   concurrency handling for earlier test, and button redirect test   [ui] if ACLs are disabled, remove the Sign In link from the top of the UI (#15114)   Remove top nav link if ACLs disabled   Change to an enabled-by-default model since you get no agent config when ACLs are disabled but you lack a token   PR feedback addressed; down with double negative conditionals   lintfix   ember getter instead of ?.prop   [SSO] Auth Methods and Mock OIDC Flow (#15155)   Big ol first pass at a redirect sign in flow   dont recursively add queryparams on redirect   Passing state and code qps   In which I go off the deep end and embed a faux provider page in the nomad ui   Buggy but self-contained flow   Flow auto-delay added and a little more polish to resetting token   secret passing turned to accessor passing   Handle SSO Failure   General cleanup and test fix   Lintfix   SSO flow acceptance tests   Percy snapshots added   Explicitly note the OIDC test route is mirage only   Handling failure case for complete-auth   Leentfeex   Tokens page styles (#15273)   styling and moving columns around   autofocus and enter press handling   Styles refined   Split up manager and regular tests   Standardizing to a binary status state   Serialize auth-methods response to use ""name"" as primary key (#15380)   Serializer for unique-by-name   Use @classic because of class extension "
566,Recompute Y Axis on data change (#15381),
567,acl: sso auth methods cli commands (#15322),This PR implements CLI commands to interact with SSO auth methods. This PR is part of the SSO work captured under ☂️ ticket #13120.
568,acl: replicate auth-methods from federated cluster leaders. (#15366),
569,docs: improve job parse API documentation (#15387),
570,scheduler: create placements for non-register MRD (#15325)," scheduler: create placements for non-register MRD  For multiregion jobs, the scheduler does not create placements on registration because the deployment must wait for the other regions. Once of these regions will then trigger the deployment to run. Currently, this is done in the scheduler by considering any eval for a multiregion job as ""paused"" since it's expected that another region will eventually unpause it. This becomes a problem where evals not triggered by a job registration happen, such as on a node update. These types of regional changes do not have other regions waiting to progress the deployment, and so they were never resulting in placements. The fix is to create a deployment at job registration time. This additional piece of state allows the scheduler to differentiate between a multiregion change, where there are other regions engaged in the deployment so no placements are required, from a regional change, where the scheduler does need to create placements. This deployment starts in the new ""initializing"" status to signal to the scheduler that it needs to compute the initial deployment state. The multiregion deployment will wait until this deployment state is persisted and its starts is set to ""pending"". Without this state transition it's possible to hit a race condition where the plan applier and the deployment watcher may step of each other and overwrite their changes.  changelog: add entry for #15325"
571,bugfix: typos in acl role commands (#15382),Co-authored-by: James Rasell link
572,scheduler: set job on system stack for CSI feasibility check (#15372),"When the scheduler checks feasibility of each node, it creates a ""stack"" which carries attributes of the job and task group it needs to check feasibility for. The module and module scheduler use a different stack than module and module jobs. This stack was missing the call to set the job ID and namespace for the CSI check. This prevents CSI volumes from being scheduled for system jobs whenever the volume is in a non-default namespace. Set the job ID and namespace to match the generic scheduler."
573,cli: improve errors for multiregion deployments (#15326),Co-authored-by: Piotr Kazmierczak link
574,cli: module flag for use with module (#15262),
575,fix linter for go.mod tidy (#15373),"This passed lint in #15335 but that PR was not rebased on incoming changes before merging, so this was missed and has shown up on module"
576,refact: add namespace to nested detail pages (#15261),  refact: add namespace to job breadcrumb   refact: edit markup for correctness   styling: add child span style   chore: undo prev commits after design exploration   ui: add namespace to alloc details   ui: add namespace to task details   ui: add namespace to taskgroup 
577,build(deps): bump github.com/aws/aws-sdk-go from 1.44.126 to 1.44.142 (#15335),Bumps link from 1.44.126 to 1.44.142. - link - link  updated-dependencies: - dependency-name: github.com/aws/aws-sdk-go   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
578,build(deps): bump github.com/hashicorp/vault/sdk from 0.6.0 to 0.6.1 (#15233),Bumps link from 0.6.0 to 0.6.1. - link - link - link  updated-dependencies: - dependency-name: github.com/hashicorp/vault/sdk   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
579,build(deps): bump golang.org/x/sys from 0.1.0 to 0.2.0 (#15231),Bumps link from 0.1.0 to 0.2.0. - link - link  updated-dependencies: - dependency-name: golang.org/x/sys   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
580,build(deps): bump github.com/docker/docker (#15229),Bumps link from 20.10.19+incompatible to 20.10.21+incompatible. - link - link - link  updated-dependencies: - dependency-name: github.com/docker/docker   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
581,build(deps): bump github.com/hashicorp/go-plugin from 1.4.5 to 1.4.6 (#15230),Bumps link from 1.4.5 to 1.4.6. - link - link - link  updated-dependencies: - dependency-name: github.com/hashicorp/go-plugin   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
582,Fix missing host header in http check (#15337),
583,sso: add ACL auth-method HTTP API CRUD endpoints (#15338),  core: remove custom auth-method TTLS and use ACL token TTLS.   agent: add ACL auth-method HTTP endpoints for CRUD actions.   api: add ACL auth-method client. 
584,Task sub row alignment changes (#15363),
585,"Add command ""nomad tls"" (#14296)",
586,Merge pull request #15361 from hashicorp/post-1.4.3-release,Post 1.4.3 release
587,changelogs for 1.3.8 and 1.2.15,
588,Prepare for next release,
589,Generate files for 1.4.3 release,
590,e2e: fix 1 of 4 client disconnect tests (#15357),"This PR modifies the disconnect helper job to run as root, which is necesary for manipulating iptables as it does. Also re-organizes the final test logic to wait for client re-connect before looking for the replacement (3rd) allocation in case that client was needed to run the alloc (also giving the sheduler more time to do its thing). Skips the other 3 tests, which fail and I cannot yet figure out what is going on."
591,refact: add conditional table logic (#15330),
592,Conditional CSS and an awaiter to help screenshot consistency (#15355),
593,ensure engineering has merge authority on build pipeline (#15350),"Adds @hashicorp/nomad-eng to the codeowners list for the build and release workflow files, so that we can fix problems that arise without being bottlenecked on another team."
594,pin build/release pipeline to ubuntu 20.04 (#15348),"The module runner has been migrated to Ubuntu 22.04, which doesn't have all the same multilib packages as 20.04. Although we'll probably want to migrate eventually, we should ship Nomad 1.4.3 with the same toolchain as we did previously so that we're not introducing new issues."
595,e2e: fixup oversubscription test case for jammy (#15347)," e2e: fixup oversubscription test case for jammy  jammy uses cgroups v2, need to lookup the max memory limit from the unified heirarchy format  e2e: set constraint to require cgroups v2 on oversub docker test"
596,client: accommodate Consul 1.14.0 gRPC and agent self changes. (#15309)," client: accommodate Consul 1.14.0 gRPC and agent self changes.  Consul 1.14.0 changed the way in which gRPC listeners are configured, particularly when using TLS. Prior to the change, a single listener was responsible for handling plain-text and encrypted gRPC requests. In 1.14.0 and beyond, separate listeners will be used for each, defaulting to 8502 and 8503 for plain-text and TLS respectively. The change means that Nomad’s Consul Connect integration would not work when integrated with Consul clusters using TLS and running 1.14.0 or greater. The Nomad Consul fingerprinter identifies the gRPC port Consul has exposed using the ""DebugConfig.GRPCPort"" value from Consul’s “/v1/agent/self” endpoint. In Consul 1.14.0 and greater, this only represents the plain-text gRPC port which is likely to be disbaled in clusters running TLS. In order to fix this issue, Nomad now takes into account the Consul version and configured scheme to optionally use “DebugConfig.GRPCTLSPort” value from Consul’s agent self return. The “consul_grcp_socket” allocrunner hook has also been updated so that the fingerprinted gRPC port attribute is passed in. This provides a better fallback method, when the operator does not configure the “consul.grpc_address” option.   docs: modify Consul Connect entries to detail 1.14.0 changes.   changelog: add entry for #15309   fixup: tidy tests and clean version match from review feedback.   fixup: use strings tolower func. "
597,respect casing on service tags (#15329),  styles: add service tag style   refact: update service tag on alloc   refact: update service tag in component 
598,style: wrap secret value in  tag (#15331),
599,consul: add trace logging around service registrations (#15311),"This PR adds trace logging around the differential done between a Nomad service registration and its corresponding Consul service registration, in an effort to shed light on why a service registration request is being made."
600,acl: sso auth method RPC endpoints (#15221),This PR implements RPC endpoints for SSO auth methods. This PR is part of the SSO work captured under ☂️ ticket #13120.
601,acl: sso auth method event stream (#15280),This PR implements SSO auth method support in the event stream. This PR is part of the SSO work captured under ☂️ ticket #13120.
602,[ui] Show Consul Connect upstreams / on update info in sidebar (#15324),  Added consul connect icon and sidebar info   Show icon to the right of name 
603,e2e: jammy image needs latest java lts (#15323),
604,api: ensure ACL role upsert decode error returns a 400 status code. (#15253),
605,api: ensure all request body decode error return a 400 status code. (#15252),
606,docs: add cpu-allocated and memory-allocated (#15299),Document the Autoscaler Nomad APM paramemeters module and module that were implemented in https://github.com/hashicorp/nomad-autoscaler/pull/324 and https://github.com/hashicorp/nomad-autoscaler/pull/334
607,make eval cancelation really async with module (#15298),Ensure we never block in the module
608,scheduler: log stack in case of panic (#15303),
609,Add mount propagation to protobuf definition of mounts (#15096),  Add mount propagation to protobuf definition of mounts   Fix formatting   Add mount propagation to the simple roundtrip test.   changelog: add entry for #15096   Co-authored-by: Luiz Aoqui link
610,make eval cancelation async with module (#15294),In #14621 we added an eval canelation reaper goroutine with a channel that allowed us to wake it up. But we forgot to actually send on this channel from module and are still committing the cancelations synchronously. Fix this by sending on the buffered channel to wake up the reaper instead.
611,autopilot: include only servers from the same region (#15290),"When we migrated to the updated autopilot library in Nomad 1.4.0, the interface for finding servers changed. Previously autopilot would get the serf members and call module on each of them, leaving it up to the implementor to filter out clients (and in Nomad's case, other regions). But in the ""new"" autopilot library, the equivalent interface is module for which we did not filter by region. This causes spurious attempts for the cross-region stats fetching, which results in TLS errors and a lot of log noise. Filter the member set by region to fix the regression."
612,remove deprecated module raft entry (#15285),"After Deployments were added in Nomad 0.6.0, the module raft log entry was no longer in use. Mark this as deprecated, remove the associated dead code, and remove references to the metrics it emits from the docs. We'll leave the entry itself just in case we encounter old raft logs that we need to be able to safely load."
613,e2e: disable systemd stub dns in jammy image (#15286),
614,Fix goroutine leakage (#15180),  Fix goroutine leakage   cl: add cl entry   Co-authored-by: Seth Hoenig link
615,"ci: use hashicorp/setup-golang for setting up go compiler, cache (#15271)",This PR changes test-core to make use of https://github.com/hashicorp/setup-golang to consolidate the setting up of the Go compiler and the Go modules cache used for the CI job. Fixes: #14905
616,keyring: update handle to state inside replication loop (#15227)," keyring: update handle to state inside replication loop  When keyring replication starts, we take a handle to the state store. But whenever a snapshot is restored, this handle is invalidated and no longer points to a state store that is receiving new keys. This leaks a bunch of memory too! In addition to operator-initiated restores, when fresh servers are added to existing clusters with large-enough state, the keyring replication can get started quickly enough that it's running before the snapshot from the existing clusters have been restored. Fix this by updating the handle to the state store on each pass."
617,fix create snapshot request docs (#15242),
618,eval broker: shed all but one blocked eval per job after ack (#14621),"When an evaluation is acknowledged by a scheduler, the resulting plan is guaranteed to cover up to the module set by the worker based on the most recent evaluation for that job in the state store. At that point, we no longer need to retain blocked evaluations in the broker that are older than that index. Move all but the highest priority / highest module blocked eval into a canceled set. When the module RPC returns from the eval broker it will signal a reap of a batch of cancelable evals to write to raft. This paces the cancelations limited by how frequently the schedulers are acknowledging evals; this should reduce the risk of cancelations from overwhelming raft relative to scheduler progress. In order to avoid straggling batches when the cluster is quiet, we also include a periodic sweep through the cancelable list."
619,e2e: swap bionic image for jammy (#15220),
620,test: ensure leader is still valid in reelection test (#15267),"The module test waits for a leader to be elected and then makes some other assertions. But it implcitly assumes that there's no failure of leadership before shutting down the leader, which can lead to a panic in the tests. Assert there's still a leader before the shutdown."
621,feat: add tooltip to storage volumes (#15245),  feat: add tooltip to storage volumes   chore: move Tooltip into td to preserve style   styling: add overflow-x to section (#15246)   styling: add overflow-x to section   refact: use media query with display block 
622,refact: remove unused API (#15244),
623,agent: ensure all HTTP Server methods are pointer receivers. (#15250),
624,Fix variable create API example in docs (#15248),
625,eval delete: move batching of deletes into RPC handler and state (#15117),"During unusual outage recovery scenarios on large clusters, a backlog of millions of evaluations can appear. In these cases, the module command can put excessive load on the cluster by listing large sets of evals to extract the IDs and then sending larges batches of IDs. Although the command's batch size was carefully tuned, we still need to be JSON deserialize, re-serialize to MessagePack, send the log entries through raft, and get the FSM applied. To improve performance of this recovery case, move the batching process into the RPC handler and the state store. The design here is a little weird, so let's look a the failed options first:   A naive solution here would be to just send the filter as the raft request and   let the FSM apply delete the whole set in a single operation. Benchmarking with   1M evals on a 3 node cluster demonstrated this can block the FSM apply for   several minutes, which puts the cluster at risk if there's a leadership   failover (the barrier write can't be made while this apply is in-flight).   A less naive but still bad solution would be to have the RPC handler filter   and paginate, and then hand a list of IDs to the existing raft log   entry. Benchmarks showed this blocked the FSM apply for 20-30s at a time and   took roughly an hour to complete.   Instead, we're filtering and paginating in the RPC handler to find a page token, and then passing both the filter and page token in the raft log. The FSM apply recreates the paginator using the filter and page token to get roughly the same page of evaluations, which it then deletes. The pagination process is fairly cheap (only abut 5% of the total FSM apply time), so counter-intuitively this rework ends up being much faster. A benchmark of 1M evaluations showed this blocked the FSM apply for 20-30ms at a time (typical for normal operations) and completes in less than 4 minutes. Note that, as with the existing design, this delete is not consistent: a new evaluation inserted ""behind"" the cursor of the pagination will fail to be deleted."
626,Fix wrong reference to module (#15228),
627,Fix broken URL to nvidia device plugin (#15234),
628,[bug] Return a spec on reconnect (#15214),client: fixed a bug where non-module tasks with network isolation would leak network namespaces and iptables rules if the client was restarted while they were running
629,client: avoid unconsumed channel in timer construction (#15215)," client: avoid unconsumed channel in timer construction  This PR fixes a bug introduced in #11983 where a Timer initialized with 0 duration causes an immediate tick, even if Reset is called before reading the channel. The fix is to avoid doing that, instead creating a Timer with a non-zero initial wait time, and then immediately calling Stop.  pr: remove redundant stop"
630,exec: allow running commands from host volume (#14851),"The exec driver and other drivers derived from the shared executor check the path of the command before handing off to libcontainer to ensure that the command doesn't escape the sandbox. But we don't check any host volume mounts, which should be safe to use as a source for executables if we're letting the user mount them to the container in the first place. Check the mount config to verify the executable lives in the mount's host path, but then return an absolute path within the mount's task path so that we can hand that off to libcontainer to run. Includes a good bit of refactoring here because the anchoring of the final task path has different code paths for inside the task dir vs inside a mount. But I've fleshed out the test coverage of this a good bit to ensure we haven't created any regressions in the process."
631,docs: clarify how to access task meta values in templates (#15212),"This PR updates template and meta docs pages to give examples of accessing meta values in templates. To do so one must use the environment variable form of the meta key name, which isn't obvious and wasn't yet documented."
632,ci: notify on backport-assistant errors (#15203),
633,ci: re-enable tests on main (#15204),"Now that the tests are grouped more tightly we don't use as many runners as before, so we can re-enable these without clogging the queue."
634,acl: sso auth method schema and store functions (#15191),"This PR implements ACLAuthMethod type, acl_auth_methods table schema and crud state store methods. It also updates nomadSnapshot.Persist and nomadSnapshot.Restore methods in order for them to work with the new table, and adds two new Raft messages: ACLAuthMethodsUpsertRequestType and ACLAuthMethodsDeleteRequestType This PR is part of the SSO work captured under ☂️ ticket #13120."
635,template: protect use of template manager with a lock (#15192),"This PR protects access to module with its lock. So far we have not been able to reproduce the panic - but it seems either Poststart is running without a Prestart being run first (should be impossible), or the Update hook is running concurrently with Poststart, nil-ing out the templateManager in a race with Poststart. Fixes #15189"
636,make: add target cl for create changelog entry (#15186), make: add target cl for create changelog entry  This PR adds module and the module Makefile target for conveniently creating correctly formatted Changelog entries.  Update tools/cl-entry/main.go  Co-authored-by: Luiz Aoqui link  Update tools/cl-entry/main.go  Co-authored-by: Luiz Aoqui link Co-authored-by: Luiz Aoqui link
637,api: remove module tags frommodule struct (#12916),"This PR solves a defect in the deserialization of api.Port structs when returning structs from theEventStream. Previously, the api.Port struct's fields were decorated with both mapstructure and hcl tags to support the network.port stanza's use of the keyword static when posting a static port value. This works fine when posting a job and when retrieving any struct that has an embedded api.Port instance as long as the value is deserialized using JSON decoding. The EventStream, however, uses mapstructure to decode event payloads in the api package. mapstructure expects an underlying field named static which does not exist. The result was that the Port.Value field would always be set to 0. Upon further inspection, a few things became apparent. The struct already has hcl tags that support the indirection during job submission. Serialization/deserialization with both the json and hcl packages produce the desired result. The use of of the mapstructure tags provided no value as the Port struct contains only fields with primitive types. This PR: Removes the mapstructure tags from the api.Port structs Updates the job parsing logic to use hcl instead of mapstructure when decoding Port instances. Closes #11044 Co-authored-by: DerekStrickland link Co-authored-by: Piotr Kazmierczak link"
638,Fix s3 example URLs in the artifacts docs (#15123)," Fix s3 URLs so that they work  Unfortunately, s3 urls prefixed with https:// do NOT work with the underlying go-getter library. As such, this fixes the examples so that they are working examples that won't cause problems for people reading the docs. See discussion in https://github.com/hashicorp/nomad/issues/1113 circa 2016.  Use s3:// protocol schema for artifact examples  Per the discussion in https://github.com/hashicorp/nomad/pull/15123, we're going to use the explicit s3 protocol in the examples since that is the likeliest to work in all scenarios"
639,server: add git revision to serf tags (#9159),
640,[ui] Remove animation from task logs sidebar (#15146),  Remove animation from task logs sidebar   changelog 
641,API for module (#15147),"Add a new module RPC and associated HTTP API endpoints. This API is designed to support interactive use in the module command to get a count of evals expected to be deleted before doing so. The state store operations to do this sort of thing are somewhat expensive, but it's cheaper than serializing a big list of evals to JSON. Note that although it seems like this could be done as an extra parameter and response field on module, having it as its own endpoint avoids having to change the response body shape and lets us avoid handling the legacy filter params supported by module."
642,build(deps): bump github.com/zclconf/go-cty-yaml from 1.0.2 to 1.0.3 (#15165),Bumps link from 1.0.2 to 1.0.3. - link - link - link  updated-dependencies: - dependency-name: github.com/zclconf/go-cty-yaml   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
643,build(deps): bump github.com/hashicorp/go-plugin from 1.4.3 to 1.4.5 (#15166),Bumps link from 1.4.3 to 1.4.5. - link - link - link  updated-dependencies: - dependency-name: github.com/hashicorp/go-plugin   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
644,build(deps): bump github.com/shirou/gopsutil/v3 from 3.22.9 to 3.22.10 (#15162),Bumps link from 3.22.9 to 3.22.10. - link - link  updated-dependencies: - dependency-name: github.com/shirou/gopsutil/v3   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
645,build(deps): bump github.com/zclconf/go-cty from 1.11.0 to 1.12.0 (#15161),Bumps link from 1.11.0 to 1.12.0. - link - link - link  updated-dependencies: - dependency-name: github.com/zclconf/go-cty   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
646,build(deps): bump github.com/shoenig/test from 0.4.3 to 0.4.4 in /api (#15163), build(deps): bump github.com/shoenig/test from 0.4.3 to 0.4.4 in /api  Bumps link from 0.4.3 to 0.4.4. - link - link  updated-dependencies: - dependency-name: github.com/shoenig/test   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link  deps: also update root go mod  Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link Co-authored-by: Seth Hoenig link
647,Update alloc after reconnect and enforece client heartbeat order (#15068)," scheduler: allow updates after alloc reconnects  When an allocation reconnects to a cluster the scheduler needs to run special logic to handle the reconnection, check if a replacement was create and stop one of them. If the allocation kept running while the node was disconnected, it will be reconnected with module and the node will have module. This combination is the same as the normal steady state of allocation, where everything is running as expected. In order to differentiate between the two states (an allocation that is reconnecting and one that is just running) the scheduler needs an extra piece of state. The current implementation uses the presence of a module task event to detect when the allocation has reconnected and thus must go through the reconnection process. But this event remains even after the allocation is reconnected, causing all future evals to consider the allocation as still reconnecting. This commit changes the reconnect logic to use an module to register when the allocation was reconnected. This provides the following benefits:  Only a limited number of task states are kept, and they are used for     many other events. It's possible that, upon reconnecting, several     actions are triggered that could cause the module     event to be dropped. Task events are set by clients and so their timestamps are subject     to time skew from servers. This prevents using time to determine if     an allocation reconnected after a disconnect event. Disconnect events are already stored as module and so storing     reconnects there as well makes it the only source of information     required.  With the new logic, the reconnection logic is only triggered if the last module is a disconnect event, meaning that the allocation has not been reconnected yet. After the reconnection is handled, the new module is store in module allowing future evals to skip the reconnection logic.  scheduler: prevent spurious placement on reconnect  When a client reconnects it makes two independent RPC calls:  module to heartbeat and set its status as module. module to update the status of its allocations.  These two calls can happen in any order, and in case the allocations are updated before a heartbeat it causes the state to be the same as a node being disconnected: the node status will still be module while the allocation module is set to module. The current implementation did not handle this order of events properly, and the scheduler would create an unnecessary placement since it considered the allocation was being disconnected. This extra allocation would then be quickly stopped by the heartbeat eval. This commit adds a new code path to handle this order of events. If the node is module and the allocation module is module the scheduler will check if the allocation is actually reconnecting using its module events.  rpc: only allow alloc updates from module nodes  Clients interact with servers using three main RPC methods:  module reads allocation data from the server and writes it     to the client. module reads allocation from from the client and writes     them to the server. module writes the client status to the server and is     used as the heartbeat mechanism.  These three methods are called periodically by the clients and are done so independently from each other, meaning that there can't be any assumptions in their ordering. This can generate scenarios that are hard to reason about and to code for. For example, when a client misses too many heartbeats it will be considered module or module and the allocations it was running are set to module or module. When connectivity is restored the to rest of the cluster, the natural mental model is to think that the client will heartbeat first and then update its allocations status into the servers. But since there's no inherit order in these calls the reverse is just as possible: the client updates the alloc status and then heartbeats. This results in a state where allocs are, for example, module while the client is still module. This commit adds a new verification to the module method to reject updates from nodes that are not module, forcing clients to heartbeat first. Since this check is done server-side there is no need to coordinate operations client-side: they can continue sending these requests independently and alloc update will succeed after the heartbeat is done.   chagelog: add entry for #15068   code review   client: skip terminal allocations on reconnect   When the client reconnects with the server it synchronizes the state of its allocations by sending data using the module RPC and fetching data using the module RPC. If the data fetch happens before the data write, module allocations will still be in this state and would trigger the module flow. But when the server module for the allocation is module the client should not reconnect the allocation.   apply more code review changes   scheduler: persist changes to reconnected allocs   Reconnected allocs have a new AllocState entry that must be persisted by the plan applier.  rpc: read node ID from allocs in UpdateAlloc  The AllocUpdateRequest struct is used in three disjoint use cases:  Stripped allocs from clients Node.UpdateAlloc RPC using the Allocs,    and WriteRequest fields Raft log message using the Allocs, Evals, and WriteRequest fields Plan updates using the AllocsStopped, AllocsUpdated, and Job fields  Adding a new field that would only be used in one these cases (1) made things more confusing and error prone. While in theory an AllocUpdateRequest could send allocations from different nodes, in practice this never actually happens since only clients call this method with their own allocations.  scheduler: remove logic to handle exceptional case  This condition could only be hit if, somehow, the allocation status was set to ""running"" while the client was ""unknown"". This was addressed by enforcing an order in ""Node.UpdateStatus"" and ""Node.UpdateAlloc"" RPC calls, so this scenario is not expected to happen. Adding unnecessary code to the scheduler makes it harder to read and reason about it.   more code review   remove another unused test "
648,client: retry RPC call when no server is available (#15140),"When a Nomad service starts it tries to establish a connection with servers, but it also runs alloc runners to manage whatever allocations it needs to run. The alloc runner will invoke several hooks to perform actions, with some of them requiring access to the Nomad servers, such as Native Service Discovery Registration. If the alloc runner starts before a connection is established the alloc runner will fail, causing the allocation to be shutdown. This is particularly problematic for disconnected allocations that are reconnecting, as they may fail as soon as the client reconnects. This commit changes the RPC request logic to retry it, using the existing retry mechanism, if there are no servers available."
649,template: error on missing key (#15141), Support error_on_missing_value for templates Update docs for template stanza
650,e2e: explicitly wait on task status in chroot download exec test (#15145),"Also add some debug log lines for this test, because it doesn't make sense for the allocation to be complete yet a task in the allocation to be not started yet, which is what the test failures are implying."
651,Add missing timer reset (#15134),
652,fix: batchFirstFingerprints does not update device on node after v1.3.5 (#15125),  fix: update device in batch first footprint   cl: add cl note   Co-authored-by: Seth Hoenig link
653,Ember patched for security release (#15126),
654,WI: set identity to client secret if missing (#15121),"Allocations created before 1.4.0 will not have a workload identity token. When the client running these allocs is upgraded to 1.4.x, the identity hook will run and replace the node secret ID token used previously with an empty string. This causes service discovery queries to fail. Fallback to the node's secret ID when the allocation doesn't have a signed identity. Note that pre-1.4.0 allocations won't have templates that read Variables, so there's no threat that this new node ID secret will be able to read data that the allocation shouldn't have access to."
655,Accidentally trailed off on a docs paragraph (#15118),
656,[ui] Adds meta to job list stub and displays a pack logo on the jobs index (#14833),  Adds meta to job list stub and displays a pack logo on the jobs index   Changelog   Modifying struct for optional meta param   Explicitly ask for meta anytime I look up a job from index or job page   Test case for the endpoint   adding meta field to API struct and ommitting from response if empty   passthru method added to api/jobs.list   Meta param listed in docs for jobs list   Update api/jobs.go   Co-authored-by: Tim Gross link Co-authored-by: Tim Gross link
657,Job spec upload (#14747),  Job spec upload by click or drag   pseudo-restrict formats   Changelog   Tweak to job spec upload to be above editor layer   Within the job-editor again tho   Beginning testcase cleanup   Test progression   refact: update codemirror fillin logic   Co-authored-by: Jai Bhagat link
658,build: update to go1.19.3 (#15099),
659,volumewatcher: prevent panic on nil volume (#15101),"If a GC claim is written and then volume is deleted before the module enters its run loop, we panic on the nil-pointer access. Simply doing a nil-check at the top of the loop reveals a race condition around shutting down the loop just as a new update is coming in. Have the parent module send an initial update on the channel before returning, so that we're still holding the lock. Update the watcher's module method to set the running state, which lets us avoid having a second context and makes stopping synchronous. This reduces the cases we have to handle in the run loop. Updated the tests now that we'll safely return from the goroutine and stop the runner in a larger set of cases. Ran the tests with the module detection flag and fixed up any problems found here as well."
660,variables: limit rekey eval to half the nack timeout (#15102),"In order to limit how much the rekey job can monopolize a scheduler worker, we limit how long it can run to 1min before stopping work and emitting a new eval. But this exactly matches the default nack timeout, so it'll fail the eval rather than getting a chance to emit a new one. Set the timeout for the rekey eval to half the configured nack timeout."
661,keyring: safely handle missing keys and restore GC (#15092),"When replication of a single key fails, the replication loop breaks early and therefore keys that fall later in the sorting order will never get replicated. This is particularly a problem for clusters impacted by the bug that caused #14981 and that were later upgraded; the keys that were never replicated can now never be replicated, and so we need to handle them safely. Included in the replication fix: * Refactor the replication loop so that each key replicated in a function call   that returns an error, to make the workflow more clear and reduce nesting. Log   the error and continue. * Improve stability of keyring replication tests. We no longer block leadership   on initializing the keyring, so there's a race condition in the keyring tests   where we can test for the existence of the root key before the keyring has   been initialize. Change this to an ""eventually"" test. But these fixes aren't enough to fix #14981 because they'll end up seeing an error once a second complaining about the missing key, so we also need to fix keyring GC so the keys can be removed from the state store. Now we'll store the key ID used to sign a workload identity in the Allocation, and we'll index the Allocation table on that so we can track whether any live Allocation was signed with a particular key ID."
662,build(deps): bump github.com/docker/cli from 20.10.18+incompatible to 20.10.21+incompatible (#15078), build(deps): bump github.com/docker/cli  Bumps link from 20.10.18+incompatible to 20.10.21+incompatible. - link - link  updated-dependencies: - dependency-name: github.com/docker/cli   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link  deps: updated github.com/docker/cli from 20.10.18+incompatible to 20.10.21+incompatible  Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link Co-authored-by: Seth Hoenig link
663,build(deps): bump github.com/hashicorp/serf from 0.10.0 to 0.10.1 (#15077),Bumps link from 0.10.0 to 0.10.1. - link - link - link  updated-dependencies: - dependency-name: github.com/hashicorp/serf   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
664,build(deps): bump github.com/aws/aws-sdk-go from 1.44.84 to 1.44.126 (#15081), build(deps): bump github.com/aws/aws-sdk-go from 1.44.84 to 1.44.126  Bumps link from 1.44.84 to 1.44.126. - link - link  updated-dependencies: - dependency-name: github.com/aws/aws-sdk-go   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link  deps: update github.com/aws/aws-sdk-go from 1.44.84 to 1.44.126  Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link Co-authored-by: Seth Hoenig link
665,build(deps): bump github.com/stretchr/testify in /api (#15082),Bumps link from 1.8.0 to 1.8.1. - link - link  updated-dependencies: - dependency-name: github.com/stretchr/testify   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
666,build(deps): bump github.com/hashicorp/memberlist from 0.4.0 to 0.5.0 (#15080),Bumps link from 0.4.0 to 0.5.0. - link - link  updated-dependencies: - dependency-name: github.com/hashicorp/memberlist   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
667,build(deps): bump go.uber.org/goleak from 1.1.12 to 1.2.0 (#15079),Bumps link from 1.1.12 to 1.2.0. - link - link - link  updated-dependencies: - dependency-name: go.uber.org/goleak   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
668,refactor eval delete safety check (#15070),The module endpoint has a helper that takes a list of jobs and allocs and determines whether the eval associated with those is safe to delete (based on their state). Filtering improvements to the module endpoint are going to need this check to run in the state store itself for consistency. Refactor to push this check down into the state store to keep the eventual diff for that work reasonable.
669,build: update linters (#15063),Remove dead linters and add some interesting new ones.
670,test: refactor EvalEndpoint_Delete (#15065),"While working on filtering improvements to the module endpoint I noticed that this test was going to need to expand significantly and needed some refactoring to make that work nicely. In order to reduce the size of the eventual diff, I've pulled this refactoring out into its own changeset."
671,Update architecture-state-store.md (#15049),
672,Merge pull request #15062 from hashicorp/post-1.4.2-release,Post 1.4.2 release
673,Merge release 1.4.2 files,Changelog updates for 1.4.2 and backports.
674,Prepare for next release,
675,Generate files for 1.4.2 release,
676,variables: fix filter on List RPC,"The List RPC correctly authorized against the prefix argument. But when filtering results underneath the prefix, it only checked authorization for standard ACL tokens and not Workload Identity. This results in WI tokens being able to read List results (metadata only: variable paths and timestamps) for variables under the module prefix that belong to other jobs in the same namespace. Fixes the filtering and split the module function into separate authentication and authorization steps so that we don't need to re-verify the claim token on each filtered object. Also includes: * update semgrep rule for mixed auth endpoints * variables: List returns empty set when all results are filtered"
677,event stream: ensure token expiry is correctly checked for subs.,"This change ensures that a token's expiry is checked before every event is sent to the caller. Previously, a token could still be used to listen for events after it had expired, as long as the subscription was made while it was unexpired. This would last until the token was garbage collected from state. The check occurs within the RPC as there is currently no state update when a token expires."
678,build(deps): bump github.com/kr/pretty from 0.3.0 to 0.3.1 in /api (#14859), build(deps): bump github.com/kr/pretty from 0.3.0 to 0.3.1 in /api  Bumps link from 0.3.0 to 0.3.1. - link - link  updated-dependencies: - dependency-name: github.com/kr/pretty   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link  deps: update in root as well  Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link Co-authored-by: Seth Hoenig link
679,build(deps): bump github.com/ryanuber/columnize (#14858),Bumps link from 2.1.1-0.20170703205827-abc90934186a+incompatible to 2.1.2+incompatible. - link - link  updated-dependencies: - dependency-name: github.com/ryanuber/columnize   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
680,build(deps): bump github.com/shirou/gopsutil/v3 from 3.22.8 to 3.22.9 (#14857),Bumps link from 3.22.8 to 3.22.9. - link - link  updated-dependencies: - dependency-name: github.com/shirou/gopsutil/v3   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
681,build(deps): bump google.golang.org/grpc from 1.48.0 to 1.50.1 (#14897), build(deps): bump google.golang.org/grpc from 1.48.0 to 1.50.1  Bumps link from 1.48.0 to 1.50.1. - link - link  updated-dependencies: - dependency-name: google.golang.org/grpc   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link  cl: add changelog entry for grpc  Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link Co-authored-by: Seth Hoenig link
682,build(deps): bump github.com/fsouza/go-dockerclient from 1.8.2 to 1.9.0 (#14898), build(deps): bump github.com/fsouza/go-dockerclient from 1.8.2 to 1.9.0  Bumps link from 1.8.2 to 1.9.0. - link - link - link  updated-dependencies: - dependency-name: github.com/fsouza/go-dockerclient   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link  cl: add changelog entry  Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link Co-authored-by: Seth Hoenig link
683,ci: use groups of tests in gha (#15018),  [no ci] use json for grouping packages for testing   [no ci] able to get packages in group   [no ci] able to run groups of tests   [no ci] more   [no ci] try disable circle unit tests   ci: use actions/checkout@v3   ci: rename to quick   ci: need make dev in mods cache step   ci: make compile step depend on checks step   ci: bump consul and vault versions   ci: need make dev for group tests   ci: update ci unit testing docs   docs: spell plumbing correctly   Co-authored-by: Tim Gross link Co-authored-by: Tim Gross link
684,Update consul-template dep (#15045),
685,docs: improved documentation on hardening and required capabilities (#15036),The existing docs on required capabilities are a little sparse and have been the subject of a lots of questions. Expand on this information and provide a pointer to the ongoing design discussion around rootless Nomad.
686,keyring: remove root key GC (#15034),
687,client: ensure minimal cgroup controllers enabled (#15027)," client: ensure minimal cgroup controllers enabled  This PR fixes a bug where Nomad could not operate properly on operating systems that set the root cgroup.subtree_control to a set of controllers that do not include the minimal set of controllers needed by Nomad. Nomad needs these controllers enabled to operate: - cpuset - cpu - io - memory - pids Now, Nomad will ensure these controllers are enabled during Client initialization, adding them to cgroup.subtree_control as necessary. This should be particularly helpful on the RHEL/CentOS/Fedora family of system. Ubuntu systems should be unaffected as they enable all controllers by default. Fixes: https://github.com/hashicorp/nomad/issues/14494   docs: cleanup doc string   client: cleanup controller writes, enhance log messages "
688,keyring: refactor to hold locks for less time (#15026),"Follow-up from https://github.com/hashicorp/nomad/pull/14987/files#r1003611644 We don't need to hold the lock when querying the state store, so move the read-lock to the interior of the module function."
689,docs: add details to redirects file (#15020),
690,deps: update hashicorp/raft to v1.3.11 (#15021), deps: update hashicorp/raft to v1.3.11  Includes part of the fix for https://github.com/hashicorp/raft/issues/524  cl: add changelog entry
691,ci: add -core suffix to mods action (#15015),"Forgot to add this line to the new mods action; without it, it creates a cache different from the one used by the other jobs."
692,refact: preserve promise.then behavior for acceptance tests (#15003),
693,"keyring: fix missing GC config, don't rotate on manual GC (#15009)","The configuration knobs for root keyring garbage collection are present in the consumer and present in the user-facing config, but we missed the spot where we copy from one to the other. Fix this so that users can set their own thresholds. The root key is automatically rotated every ~30d, but the function that does both rotation and key GC was wired up such that module caused an unexpected key rotation. Split this into two functions so that module cleans up old keys without forcing a rotation, which will be done periodially or by the module command."
694,ci: use the same go mod cache across test-core jobs (#15006),  ci: use the same go mod cache for test-core jobs   ci: precache go modules   ci: add a mods precache job 
695,keyring: fixes for keyring replication on cluster join (#14987)," keyring: don't unblock early if rate limit burst exceeded  The rate limiter returns an error and unblocks early if its burst limit is exceeded (unless the burst limit is Inf). Ensure we're not unblocking early, otherwise we'll only slow down the cases where we're already pausing to make external RPC requests.  keyring: set MinQueryIndex on stale queries  When keyring replication makes a stale query to non-leader peers to find a key the leader doesn't have, we need to make sure the peer we're querying has had a chance to catch up to the most current index for that key. Otherwise it's possible for newly-added servers to query another newly-added server and get a non-error nil response for that key ID. Ensure that we're setting the correct reply index in the blocking query. Note that the ""not found"" case does not return an error, just an empty key. So as a belt-and-suspenders, update the handling of empty responses so that we don't break the loop early if we hit a server that doesn't have the key.   test for adding new servers to keyring   leader: initialize keyring after we have consistent reads   Wait until we're sure the FSM is current before we try to initialize the keyring. Also, if a key is rotated immediately following a leader election, plans that are in-flight may get signed before the new leader has the key. Allow for a short timeout-and-retry to avoid rejecting plans"
696,test: use port collision instead of cpu exhaustion (#14994),Originally this test relied on Job 1 blocking Job 2 until Job 1 had a terminal ClientStatus. Job 2 ensured it would get blocked using 2 mechanisms:  A constraint requiring it is placed on the same node as Job 1. Job 2 would require all unreserved CPU on the node to ensure it would    be blocked until Job 1's resources were free.  That 2nd assertion breaks if any previous job is still running on the target node! That seems very likely to happen in the flaky world of our e2e tests. In fact there may be some jobs we intentionally want running throughout; in hindsight it was never safe to assume my test would be the only thing scheduled when it ran. Ports to the rescue! Reserving a static port means that both Job 2 will now block on Job 1 being terminal. It will only conflict with other tests if those tests use that port on every node. I ensured no existing tests were using the port I chose. Other changes: - Gave job a bit more breathing room resource-wise. - Tightened timings a bit since previous failure ran into the module   time limit. - Cleaned up the DumpEvals output. It's quite nice and handy now!
697,docs: use of module when autoscaling (#14950),Document how the value of module is used during cluster scaling. https://github.com/hashicorp/nomad-autoscaler/issues/255
698,ci: use gotestsum for CI tests (#14995),Use gotestsum in both GHA and Circle with retries enabled.
699,acl: allow tokens to read policies linked via roles to the token. (#14982),ACL tokens are granted permissions either by direct policy links or via ACL role links. Callers should therefore be able to read policies directly assigned to the caller token or indirectly by ACL role links.
700,cli: prevent panic on module (#14992),"If the API returns an error during debug bundle collection the CLI was expanding the wrong error object, resulting in a panic since module is module."
701,refact: upgrade Promise.then to async/await (#14798),  refact: upgrade Promise.then to async/await   naive solution (#14800)   refact: use id instead of model   chore:  add changelog entry   refact: add conditional safety around alloc 
702,Post 1.4.1 release (#14988),  Generate files for 1.4.1 release   Prepare for next release   Co-authored-by: hc-github-team-nomad-core link
703,deps: update go-memdb for goroutine leak fix (#14983),  deps: update go-memdb for goroutine leak fix   cl: update for goroutine leak go-memdb 
704,deps: bump shoenig for str func bugfixes (#14974),And fix the one place we use them.
705,acl: add ACL roles to event stream topic and resolve policies. (#14923),"This changes adds ACL role creation and deletion to the event stream. It is exposed as a single topic with two types; the filter is primarily the role ID but also includes the role name. While conducting this work it was also discovered that the events stream has its own ACL resolution logic. This did not account for ACL tokens which included role links, or tokens with expiry times. ACL role links are now resolved to their policies and tokens are checked for expiry correctly."
706,acl: correctly resolve ACL roles within client cache. (#14922),"The client ACL cache was not accounting for tokens which included ACL role links. This change modifies the behaviour to resolve role links to policies. It will also now store ACL roles within the cache for quick lookup. The cache TTL is configurable in the same manner as policies or tokens. Another small fix is included that takes into account the ACL token expiry time. This was not included, which meant tokens with expiry could be used past the expiry time, until they were GC'd."
707,docs: expand Autoscaling documentation (#14937),Rename module section to module to match core docs structure and expand on how policies are evaluated. Also include missing documentation for check grouping and fix examples to use the new feature.
708,Adds searching and filtering for nodes on topology view (#14913),  Adds searching and filtering for nodes on topology view   Lintfix and changelog   Acceptance tests for topology search and filter   Search terms also apply to class and dc on topo page   Initialize queryparam values so as to not break history state 
709,docs: add autoscaling debug (#14941),
710,docs: move autoscaling module agent config (#14947),Move the Autoscaler agent configuration module to the module page since they are very closely related. Also update all headers in this section so they follow the proper module hierarchy.
711,docs: explain autoscaler target-value strategy (#14951),Provide more technical details about how the module strategy calculates new scaling actions.
712,website: fix broken links (#14946),  fix: nomad license put link   fix: redirected URL   fix: avoid auto-formatting changes 
713,consul: register checks along with service on initial registration (#14944)," consul: register checks along with service on initial registration  This PR updates Nomad's Consul service client to include checks in an initial service registration, so that the checks associated with the service are registered ""atomically"" with the service. Before, we would only register the checks after the service registration, which causes problems where the service is deemed healthy, even if one or more checks are unhealthy - especially problematic in the case where SuccessBeforePassing is configured. Fixes #3935   cr: followup to fix cause of extra consul logging   cr: fix another bug   cr: fixup changelog "
714,build: add ability to specify release targets (#14957),"My make knowledge is very very limited, so if there's a better way to do this please let me know! This seems to work and lets me cut one off builds easily."
715,deps: update consul-template to module (#14955),
716,Updated datacenter block description (#14953),  Updated datacenter block description   Replacing accidentally removed title   docs: add closing period   Co-authored-by: Seth Hoenig link
717,e2e: convert flaky exec download in chroot unit test into e2e test (#14949),"Similar to https://github.com/hashicorp/nomad/pull/14710, convert flaky test into e2e test."
718,api: add convenience string func to Topic type. (#14843),
719,chore: Update Digital Team Files (#14945),  Update generated scripts (website-start.sh)   Update generated scripts (should-build.sh)   Update generated scripts (website-build.sh)   Update generated website Makefile 
720,test: expand timing and debugging for overlap test (#14920),attempt #9000
721,chore: Update Digital Team Files (#14940),  Update generated scripts (should-build.sh)   Update generated scripts (website-build.sh)   Update generated scripts (website-start.sh)   Update generated website Makefile 
722,website: redirects to empty array (#14921),
723,website: fixes redirected links (#14918),
724,deps: bump shoenig/test to 0.4.1 (#14931),bugfix for SliceContainsAll and adding SliceContainsSubset
725,acl: gate ACL role write and delete RPC usage on v1.4.0 or greater. (#14908),
726,nnsd: gate registration write & delete RPC use on v1.3.0 or greater. (#14924),
727,consul: do not re-register already registered services (#14917),"This PR updates Nomad's Consul service client to do map comparisons using maps.Equal instead of reflect.DeepEqual. The bug fix is in how DeepEqual treats nil slices different from empty slices, when actually they should be treated the same."
728,make version checks specific to region (1.4.x) (#14912)," One-time tokens are not replicated between regions, so we don't want to enforce   that the version check across all of serf, just members in the same region. Scheduler: Disconnected clients handling is specific to a single region, so we   don't want to enforce that the version check across all of serf, just members in   the same region. Variables: enforce version check in Apply RPC Cleans up a bunch of legacy checks.  This changeset is specific to 1.4.x and the changes for previous versions of Nomad will be manually backported in a separate PR."
729,cleanup: remove another string-set helper function (#14902),
730,keyring: filter by region before checking version (#14901),"In #14821 we fixed a panic that can happen if a leadership election happens in the middle of an upgrade. That fix checks that all servers are at the minimum version before initializing the keyring (which blocks evaluation processing during trhe upgrade). But the check we implemented is over the serf membership, which includes servers in any federated regions, which don't necessarily have the same upgrade cycle. Filter the version check by the leader's region. Also bump up log levels of major keyring operations"
731,fix: website broken links (#14904),  fix: website broken links   fix up keyring-rotate link   Co-authored-by: Tim Gross link
732,test: extend timing and output of overlap e2e test (#14894),"Keeps failing in the nightly e2e test with unhelpful output like: module I have not been able to replicate it in my own e2e cluster, so I added the EvalDump helper to add detailed eval information like: ``` === RUN   TestOverlap 1/1 Job overlap7b0e90ec Eval c38c9919-a4f0-5baf-45f7-0702383c682a   Type:         service   TriggeredBy:  job-register   Deployment:   Status:       pending ()   NextEval:   PrevEval:   BlockedEval:    -- No placement failures --   QueuedAllocs:   SnapshotIdx:  0   CreateIndex:  96   ModifyIndex:  96 ... ``` Hopefully helpful when debugging other tests as well!"
733,Merge pull request #14879 from hashicorp/mnomitch/job-purge-ui,Adds purge job button to UI
734,[COMPLIANCE] Update MPL 2.0 LICENSE (#14884),Co-authored-by: hashicorp-copywrite[bot] link
735,test: simplify overlap job placement logic (#14811), test: simplify overlap job placement logic  Trying to fix #14806 Both the previous approach as well as this one worked on e2e clusters I spun up.  simplify code flow
736,Adds purge job button to UI when job stopped,
737,docker_logger: reorder imports to save memory (#14875),"Nomad runs one logmon process and also one docker_logger process for each running allocation. A naive look at memory usage shows 10-30 MB of RSS, but a closer look shows that most of this memory (ex. all but ~2MB for logmon) is shared (module in Linux pmap). But a heap dump of docker_logger shows that it currently has an extra ~2500 KiB of heap (anonymously-mapped unshared memory) used for init blocks coming from the agent code (ex. mostly regexes from go-version, structs, and the Consul SDK). The packages for running logmon, docker_logger, and executor have an init block that parses module to drop into their own logic, which prevents them from loading all the rest of the agent code and saves on memory, so this was unexpected. It looks like we accidentally reordered the imports in main to undo some of the work originally done in 404d2d4c98f1df930be1ae9852fe6e6ae8c1517e. This changeset restores the ordering. A follow-up heap dump shows this saves ~2MB of unshared RSS per docker_logger process."
738,client: remove unused LogOutput and LogLevel (#14867),  client: remove unused LogOutput   client: remove unused config.LogLevel 
739,helpers: lockfree lookup of nobody user on unix systems (#14866)," helpers: lockfree lookup of nobody user on linux and darwin  This PR continues the nobody user lookup saga, by making the nobody user lookup lock-free on linux and darwin. By doing the lookup in an init block this originally broke on Windows, where we must avoid doing the lookup at all. We can get around that breakage by only doing the lookup on linux/darwin where the nobody user is going to exist. Also return the nobody user by value so that a copy is created that cannot be modified by callers of Nobody().  helper: move nobody code into unix file"
740,servicedisco: implicit constraint for nomad v1.4 when using nsd checks (#14868),"This PR adds a jobspec mutator to constrain jobs making use of checks in the nomad service provider to nomad clients of at least v1.4.0. Before, in a mixed client version cluster it was possible to submit an NSD job making use of checks and for that job to land on an older, incompatible client node. Closes #14862"
741,services: remove assertion on 'task' field being set (#14864),"This PR removes the assertion around when the 'task' field of a check may be set. Starting in Nomad 1.4 we automatically set the task field on all checks in support of the NSD checks feature. This is causing validation problems elsewhere, e.g. when a group service using the Consul provider sets 'task' it will fail validation that worked previously. The assertion of leaving 'task' unset was only about making sure job submitters weren't expecting some behavior, but in practice is causing bugs now that we need the task field for more than it was originally added for. We can simply update the docs, noting when the task field set by job submitters actually has value."
742,cleanup: rename Equals to Equal for consistency (#14759),
743,build: move imports into the transitive require block (#14863),
744,[ui] Makes service tags wrap and look like tag items (#14834),  Makes service tags wrap and look like tag items   Add a little vertical spacing and changelog   Put client before tags   Force tags list to new line 
745,Dependency updates from dependabot (#14844), build(deps): bump github.com/opencontainers/runc from 1.1.3 to 1.1.4  Bumps link from 1.1.3 to 1.1.4. - link - link - link  updated-dependencies: - dependency-name: github.com/opencontainers/runc   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link  build(deps): bump github.com/prometheus/client_golang  Bumps link from 1.12.0 to 1.13.0. - link - link - link  updated-dependencies: - dependency-name: github.com/prometheus/client_golang   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link  build(deps): bump github.com/mattn/go-colorable from 0.1.12 to 0.1.13  Bumps link from 0.1.12 to 0.1.13. - link - link  updated-dependencies: - dependency-name: github.com/mattn/go-colorable   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link  build(deps): bump github.com/google/go-cmp from 0.5.8 to 0.5.9  Bumps link from 0.5.8 to 0.5.9. - link - link  updated-dependencies: - dependency-name: github.com/google/go-cmp   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link  build(deps): bump github.com/miekg/dns from 1.1.41 to 1.1.50  Bumps link from 1.1.41 to 1.1.50. - link - link - link  updated-dependencies: - dependency-name: github.com/miekg/dns   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
746,cli: add module (#14779),
747,[ui] Line charts: explicitly update X-axis whenever xScale changes (#14814),  Explicitly update X-axis whenever xScale changes   Changelog 
748,enhancement: UpdateTask when Task is waiting for ShutdownDelay (#14775),Signed-off-by: Hemanth Krishna link
749,Allow jobs not requiring any network resources (#14300),Jobs not requiring any network resources should be allowed even when the network fingerprinter is disabled.
750,Check that JobPlanResponse Diff Type is None before checking for changes on getExitCode (#14492),
751,Invoke FingerprintManager's Reload() func during agent's SIGHUP (#14615),Fixes #14614
752,Allow specification of a custom job name/prefix for parameterized jobs (#14631),
753,lock closed issues and PRs after 120 days (#14824),"When community members comment on long-closed issues, there's a number of failure modes that make for a bad experience for them:   Their comments are often missed entirely because notification settings make it   impractical for most developers to read comments on inactive issues.   In our experience, the problem is only rarely a regression; because failures   are complex, totally different code paths can result in symptoms that initially   appear to be the same but turn out to be completely different under close   examination. This is particularly the case for issues fixed in very old   versions (sometimes 2 or more years old).   The Terraform core team uses a bot that locks issues after only 30 days. But because we typically close issues automatically on PR merge but don't have rolling releases, it'd frequently happen that unrelease fixes will have locked comments, which isn't a good experience either. I've looked through the pace of releases since Nomad 0.9.0 and the longest window between releases was 3 months. Set the window for the lock bot to 120 days to give us plenty of breathing room so it doesn't feel like we're shutting down discussion prematurely."
754,docs: clarify nomad vars vs vault (#14831), docs: clarify nomad vars vs vault  I think we should make the difference in root key management between Nomad and Vault clear in the concept docs. I didn't see anywhere else in the docs we compared it. I also s/secrets/variables everywhere except the first sentence since the feature is intended to be more generic than secrets. Right now it's more of a compliment to Consul's kv than Vault due to root key handling and featureset.  Update website/content/docs/concepts/variables.mdx  Co-authored-by: Tim Gross link
755,website: upgrade next version (#14830),Co-authored-by: Bryce Kalow link
756,fix panic from keyring raft entries being written during upgrade (#14821),"During an upgrade to Nomad 1.4.0, if a server running 1.4.0 becomes the leader before one of the 1.3.x servers, the old server will crash because the keyring is initialized and writes a raft entry. Wait until all members are on a version that supports the keyring before initializing it."
757,Merge pull request #14828 from hashicorp/post-1.4.0-release,Post 1.4.0 release
758,Merge release 1.4.0 files,
759,Prepare for next release,
760,Generate files for 1.4.0 release,
761,prepare release 1.4.0,
762,docs: 1.4.0 upgrade warning for keyring initialization (#14825),
763,semgrep: add MeasureSinceWithLabels to FSM time rule (#14812),"Metrics state is local to the server and needs to use time, which is normally forbidden in the FSM code. We have a bypass for this rule for module but needed one for module as well."
764,e2e: fixes the ordering on greater than checks within spread test. (#14818),
765,e2e: fix incorrect must function usage in namespace suite. (#14805),
766,Switch to the 'running' green for health checks (#14799),
767,client: defer module user lookup so Windows doesn't panic (#14790),"In #14742 we introduced a cached lookup of the module user, which is only ever called on Unixish machines. But the initial caching was being done in an module block, which meant it was being run on Windows as well. This prevents the Nomad agent from starting on Windows. An alternative fix here would be to have a separate module block for Windows and Unix, but this potentially masks incorrect behavior if we accidentally added a call to the module method on Windows later. This way we're forced to handle the error in the caller."
768,variables: use correct URL in ref to docs (#14792),
769,deps: remove gophers.dev dependency (#14789),
770,deps: use install from current HEAD for module (#14786),"The module tool we're using needed a patch for a specific bug, but that's since been merged. We definitely want to switch to using a standard release from that project once one is shipped with the CLI, but pinning to HEAD should keep us for now."
771,Fixing flaky TestOverlap test (#14780),  test: ensure feasible node selected in overlap test   test: warn when getting close to retry limit 
772,Docs(job-specification/periodic): Add enabled toggle (#14767),"This is probably undocumented for a reason, but the module toggle in the module stanza is very useful so I figured I try adding it to the docs. The feature has been secretly avaliable since #9142 and was called out in that PR as being a dubious addition, only added to avoid regressions. The use case for disabling a periodic job in this way is to prevent it from running without modifying the schedule. Ideally Nomad would make it more clear that this was the case, and allow you to force a run of the job, but even with those rough edges I think users would benefit from knowing about this toggle."
773,internals documentation with diagrams (#14750),"This changeset adds new architecture internals documents to the contributing guide. These are intentionally here and not on the public-facing website because the material is not required for operators and includes a lot of diagrams that we can cheaply maintain with mermaid syntax but would involve art assets to have up on the main site that would become quickly out of date as code changes happen and be extremely expensive to maintain. However, these should be suitable to use as points of conversation with expert end users. Included: * A description of Evaluation triggers and expected counts, with examples. * A description of Evaluation states and implicit states. This is taken from an   internal document in our team wiki. * A description of how writing the State Store works. This is taken from a   diagram I put together a few months ago for internal education purposes. * A description of Evaluation lifecycle, from registration to running   Allocations. This is mostly lifted from @lgfa29's amazing mega-diagram, but   broken into digestible chunks and without multi-region deployments, which I'd   like to cover in a future doc. Also includes adding Deployments to our public-facing glossary. Co-authored-by: Luiz Aoqui link Co-authored-by: Michael Schurter link Co-authored-by: Seth Hoenig link"
774,refact: only reload job if job has no taskGroups (#14760),
775,build(deps-dev): bump @hashicorp/platform-cli in /website (#14541),"Bumps link from 2.1.0 to 2.3.0. - link - link - link  updated-dependencies: - dependency-name: ""@hashicorp/platform-cli""   dependency-type: direct:development   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link"
776,template: apply splay value on change_mode script (#14749),"Previously, the splay timeout was only applied if a template re-render caused a restart or a signal action. The module was running after the module check, so it was invoked at all times. This change refactors the logic so it's easier to notice that new module options should start only after module is applied."
777,Revert removing deprecated client options docs (#14753),"This reverts PR #12416 and commit 6668ce022ac561f75ad113cc838b1fb786f11f79. While the driver options are well and truly deprecated, this documentation also covers features like module that are not available any other way. Let's revert this until #12420 is ready."
778,"[ui] Bugfix: reinstate the ""this variable will be accessible by $job/$group/$task"" notification (#14741)","  When we isolated the variable form path to within its component for isolation reasons, we lost the model-level checks for related entites at type-time   Be a little more functionally pure   Use Ember.set to appease mirage "
779,Fix a bug where we only checked the first task within a given alloc for services (#14740),
780,client: protect user lookups with global lock (#14742)," client: protect user lookups with global lock  This PR updates Nomad client to always do user lookups while holding a global process lock. This is to prevent concurrency unsafe implementations of NSS, but still enabling NSS lookups of users (i.e. cannot not use osusergo).  cl: add cl"
781,test: skip chown test if nonroot (#14738),"CI always runs this as root, so it worked there and always scared me when I ran it locally."
782,Merge pull request #14664 from hashicorp/docs-multiregion-dispatch,multiregion: Added a section for multiregion parameterized job dispatch
783,link from dispatch command,
784,Apply suggestions from code review,
785,Update website/content/docs/job-specification/multiregion.mdx,Co-authored-by: Luiz Aoqui link
786,Update website/content/docs/job-specification/multiregion.mdx,Co-authored-by: Luiz Aoqui link
787,Merge pull request #14730 from hashicorp/remove-testing-changelog-entry,Remove changelog entry for test update PR
788,Remove changelog entry for test update PR,
789,Merge pull request #14729 from hashicorp/remove-bug-fix-changelog-files,Fix and remove changelog files
790,Merge pull request #14728 from hashicorp/post-1.4.0-rc.1-release,Post 1.4.0 rc.1 release
791,Add enterprise tag,
792,Add enterprise tag,
793,Delete 14665.txt,
794,Remove bug fix changelog files,
795,Prepare for next release,
796,Generate files for 1.4.0-rc.1 release,
797,Apply changes from code review,
798,Prepare release 1.4.0-rc.1,
799,Visual diff tests: error states (#14707),  3 error states captured   Assertion expecters   Attempt to stabilize datacenters 
800,Merge pull request #14727 from hashicorp/changelog-14651-breaking-change,Fix changelog entry type
801,Fix changelog entry type,
802,test: fix flaky test (#14713),Need to wait for Stop evals to be processed before you can expect subsequent RPCs to see the alloc's DesiredStatus=stop.
803,jobspec: allow artifact headers in HCLv1  (#14637), jobspec: allow artifact headers in HCLv1  Co-authored-by: Luiz Aoqui link
804,core: numeric operands comparisons in constraints (#14722),  cleanup: fixup linter warnings in schedular/feasible.go   core: numeric operands comparisons in constraints   This PR changes constraint comparisons to be numeric rather than lexical if both operands are integers or floats. Inspiration #4856 Closes #4729 Closes #14719  fix: always parse as int64
805,task logs page snapshot (#14709),
806,Empty and filled task exec screenshots for test (#14702),  Empty and filled task exec screenshots for test   Attempting to stabilize datacenter prop on servers 
807,CSI: ensure initial unpublish state is checkpointed (#14675),"A test flake revealed a bug in the CSI unpublish workflow, where an unpublish that comes from a client that's successfully done the node-unpublish step will not have the claim checkpointed if the controller-unpublish step fails. This will result in a delay in releasing the volume claim until the next GC. This changeset also ensures we're using a new snapshot after each write to raft, and fixes two timing issues in test where either the volume watcher can unpublish before the unpublish RPC is sent or we don't wait long enough in resource-restricted environements like GHA."
808,docs: write a lot of words about heartbeats (#14679), docs: write a lot of words about heartbeats  Alternative to #14670  Apply suggestions from code review  Co-authored-by: Tim Gross link   use descriptive title for link   rework example of high failover ttl   Co-authored-by: Tim Gross link
809,e2e: convert chroot env unit tests into e2e tests (#14710),This PR translates two of our most flakey unit tests into e2e tests where they are fit much more naturally.
810,fingerprint: add node attr for reserverable cores (#14694), fingerprint: add node attr for reserverable cores  Add an attribute for the number of reservable CPU cores as they may differ from the existing module due to client configuration or OS support. Hopefully clarifies some confusion in #14676   add changelog   num_reservable_cores -> reservablecores 
811,client: recover from getter panics (#14696),The artifact getter uses the go-getter library to fetch files from different sources. Any bug in this library that results in a panic can cause the entire Nomad client to crash due to a single file download attempt. This change aims to guard against this types of crashes by recovering from panics when the getter attempts to download an artifact. The resulting panic is converted to an error that is stored as a task event for operator visibility and the panic stack trace is logged to the client's log.
812,fingerprint: lengthen Vault check after seen (#14693),"Extension of #14673 Once Vault is initially fingerprinted, extend the period since changes should be infrequent and the fingerprint is relatively expensive since it is contacting a central Vault server. Also move the period timer reset after the fingerprint. This is similar to #9435 where the idea is to ensure the retry period starts after the operation is attempted. 15s will be the minimum time between fingerprints now instead of the maximum time between fingerprints. In the case of Vault fingerprinting, the original behavior might cause the following:  Timer is reset to 15s Fingerprint takes 16s Timer has already elapsed so we immediately Fingerprint again  Even if fingerprinting Vault only takes a few seconds, that may very well be due to excessive load and backing off our fingerprints is desirable. The new bevahior ensures we always wait at least 15s between fingerprint attempts and should allow some natural jittering based on server load and network latency."
813,cli: fix doc strings for module command (#14697),
814,cli: set content length on module requests (#14634),"http.NewRequestWithContext will only set the right value for Content-Length if the input is bytes.Buffer, bytes.Reader, or *strings.Reader link. Since os.Stdin is an os.File, POST requests made with the module command would always have Content-Length set to -1, which is interpreted as an unknown length by web servers."
815,docs: add new tools (#14596),
816,variables: document restrictions on path and size (#14687),
817,build(deps): bump github.com/hashicorp/go-uuid from 1.0.2 to 1.0.3 (#14688),Bumps link from 1.0.2 to 1.0.3. - link - link  updated-dependencies: - dependency-name: github.com/hashicorp/go-uuid   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
818,build(deps): bump github.com/docker/cli (#14539),Bumps link from 20.10.3-0.20220113150236-6e2838e18645+incompatible to 20.10.18+incompatible. - link - link  updated-dependencies: - dependency-name: github.com/docker/cli   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
819,build(deps): bump github.com/brianvoe/gofakeit/v6 from 6.16.0 to 6.19.0 (#14686),Bumps link from 6.16.0 to 6.19.0. - link - link  updated-dependencies: - dependency-name: github.com/brianvoe/gofakeit/v6   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
820,build(deps): bump github.com/hashicorp/raft-boltdb/v2 (#14685),Bumps link from 2.2.0 to 2.2.2. - link - link  updated-dependencies: - dependency-name: github.com/hashicorp/raft-boltdb/v2   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
821,build(deps): bump github.com/shirou/gopsutil/v3 from 3.22.7 to 3.22.8 (#14683),Bumps link from 3.22.7 to 3.22.8. - link - link  updated-dependencies: - dependency-name: github.com/shirou/gopsutil/v3   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
822,build(deps): bump github.com/containerd/go-cni from 1.1.6 to 1.1.7 (#14684),Bumps link from 1.1.6 to 1.1.7. - link - link  updated-dependencies: - dependency-name: github.com/containerd/go-cni   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
823,build(deps): bump github.com/docker/go-units from 0.4.0 to 0.5.0 in /api (#14430), build(deps): bump github.com/docker/go-units from 0.4.0 to 0.5.0 in /api  Bumps link from 0.4.0 to 0.5.0. - link - link  updated-dependencies: - dependency-name: github.com/docker/go-units   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link  deps: also update go-units in nomad  Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link Co-authored-by: Seth Hoenig link
824,build(deps): bump github.com/hashicorp/serf from 0.9.7 to 0.10.0 (#14365),Bumps link from 0.9.7 to 0.10.0. - link - link - link  updated-dependencies: - dependency-name: github.com/hashicorp/serf   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
825,build(deps): bump github.com/zclconf/go-cty from 1.8.0 to 1.11.0 (#14363),Bumps link from 1.8.0 to 1.11.0. - link - link - link  updated-dependencies: - dependency-name: github.com/zclconf/go-cty   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
826,build(deps): bump github.com/hashicorp/go-getter from 1.6.1 to 1.6.2 (#14459),Bumps link from 1.6.1 to 1.6.2. - link - link - link  updated-dependencies: - dependency-name: github.com/hashicorp/go-getter   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
827,build(deps): bump github.com/golang-jwt/jwt/v4 from 4.4.1 to 4.4.2 (#14406),Bumps link from 4.4.1 to 4.4.2. - link - link - link  updated-dependencies: - dependency-name: github.com/golang-jwt/jwt/v4   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
828,build(deps): bump github.com/shoenig/test from 0.3.1 to 0.4.0 in /api (#14681),Bumps link from 0.3.1 to 0.4.0. - link - link  updated-dependencies: - dependency-name: github.com/shoenig/test   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
829,deps: update set and test (#14680),"This PR updates go-set and shoenig/test, which introduced some breaking API changes."
830,[ui] Warn users when they leave an edited but unsaved variable page (#14665),"  Warning on attempt to leave   Lintfix   Only router.off once   Dont warn on transition when only updating queryparams   Remove double-push and queryparam-only issues, thanks @lgfa29   Acceptance tests   Changelog "
831,[ui] Service Healthchecks: styles for pseudo-timestamp axis (#14677),  Styles for pseudo-timestamp axis   Changelog 
832,fingerprint: don't clear Consul/Vault attributes on failure (#14673),"Clients periodically fingerprint Vault and Consul to ensure the server has updated attributes in the client's fingerprint. If the client can't reach Vault/Consul, the fingerprinter clears the attributes and requires a node update. Although this seems like correct behavior so that we can detect intentional removal of Vault/Consul access, it has two serious failure modes: (1) If a local Consul agent is restarted to pick up configuration changes and the client happens to fingerprint at that moment, the client will update its fingerprint and result in evaluations for all its jobs and all the system jobs in the cluster. (2) If a client loses Vault connectivity, the same thing happens. But the consequences are much worse in the Vault case because Vault is not run as a local agent, so Vault connectivity failures are highly correlated across the entire cluster. A 15 second Vault outage will cause a new module evalution for every system job on the cluster times the number of nodes, plus one module evaluation for every non-system job on each node. On large clusters of 1000s of nodes, we've seen this create a large backlog of evaluations. This changeset updates the fingerprinting behavior to keep the last fingerprint if Consul or Vault queries fail. This prevents a storm of evaluations at the cost of requiring a client restart if Consul or Vault is intentionally removed from the client."
833,[vars] Update Consul Template dependency (#14667), Bump CT dependency go mod tidied
834,test: add e2e for non-overlapping placements (#14646), test: add e2e for non-overlapping placements  Followup to #10446 Fails (as expected) against 1.3.x at the wait for blocked eval (because the allocs are allowed to overlap). Passes against 1.4.0-beta.1 (as expected).  Update e2e/overlap/overlap_test.go  Co-authored-by: James Rasell link
835,Update multiregion.mdx,
836,multiregion: Added a section for multiregion parameterized job dispatch,
837,cleanup: rearrange mocks package (#14660),"This PR splits up the nomad/mock package into more files. Specific features that have a lot of mocks get their own file (e.g. acl, variables, csi, connect, etc.). Above that, functions that return jobs/allocs/nodes are in the job/alloc/node file. And lastly other mocks/helpers are in mock.go"
838,scheduler: Fix bug where the would treat multiregion jobs as paused for job types that don't use deployments (#14659), scheduler: Fix bug where the scheduler would treat multiregion jobs as paused for job types that don't use deployments  Co-authored-by: Tim Gross link Co-authored-by: Tim Gross link
839,connect: add nomad env to envoy bootstrap (#12959),  Add nomad env to envoy bootstrap   Add changelog file 
840,[vars:api] Return fake QueryMeta on 403s with Peek() (#14661),"Consul-template expects that the Response Metadata is non-zero, but on a 403 we do not pass back QueryMeta headers."
841,consul: Removed unused ConsulUsage.Kinds. (#11303),
842,[ui] task logs in sidebar (#14612),"  button styles   Further styles including global toggle adjustment   sidebar funcs and header   Functioning task logs in high-level sidebars   same-lineify the show tasks toggle   Changelog   Full-height sidebar calc in css, plz drop soon container queries   Active status and query params for allocations page   Reactive shouldShowLogs getter and added to client and task group pages   Higher order func passing, thanks @DingoEatingFuzz   Non-service job types get allocation params passed   Keyframe animation for task log sidebar   Acceptance test   A few more sub-row tests   Lintfix "
843,cli: remove deprecated module list behavior (#14651),"In Nomad 1.2.6 we shipped module, which accepts a module flag, and deprecated the usage of module without an evaluation ID with an upgrade note that it would be removed in Nomad 1.4.0. This changeset completes that work."
844,build: update go version to go1.19.1 (#14653),"minor update, no CL needed"
845,"Add Namespace, Job and Group to envoy stats (#14311)",
846,mods: move require statement with the rest (#14652),
847,cli: print success message on var put (#14620),
848,operator debug: write NDJSON for large collections (#14610),"The module command writes JSON files from API responses as a single line containing an array of JSON objects. But some of these files can be extremely large (GB's) for large production clusters, which makes it difficult to parse them using typical line-oriented Unix command line tools that can stream their inputs without consuming a lot of memory. For collections that are typically large, instead emit newline-delimited JSON. This changeset includes some first-pass refactoring of this command. It breaks up monolithic methods that validate a path, create a file, serialize objects, and write them to disk into smaller functions, some of which can now be standalone to take advantage of generics."
849,cli: fix a bug in operator API when setting HTTPS via address. (#14635),"Operators may have a setup whereby the TLS config comes from a source other than setting Nomad specific env vars. In this case, we should attempt to identify the scheme using the config setting as a fallback."
850,cleanup more helper updates (#14638),  cleanup: refactor MapStringStringSliceValueSet to be cleaner   cleanup: replace SliceStringToSet with actual set   cleanup: replace SliceStringSubset with real set   cleanup: replace SliceStringContains with slices.Contains   cleanup: remove unused function SliceStringHasPrefix   cleanup: fixup StringHasPrefixInSlice doc string   cleanup: refactor SliceSetDisjoint to use real set   cleanup: replace CompareSliceSetString with SliceSetEq   cleanup: replace CompareMapStringString with maps.Equal   cleanup: replace CopyMapStringString with CopyMap   cleanup: replace CopyMapStringInterface with CopyMap   cleanup: fixup more CopyMapStringString and CopyMapStringInt   cleanup: replace CopySliceString with slices.Clone   cleanup: remove unused CopySliceInt   cleanup: refactor CopyMapStringSliceString to be generic as CopyMapOfSlice   cleanup: replace CopyMap with maps.Clone   cleanup: run go mod tidy 
851,chore: move changelog file to the right folder (#14639),
852,api: provide more detail on ACL bootstrap request error (#14629),
853,Minor tweaks to the service views (#14619),
854,test: remove flaky Gate test (#14575),"The concurrent gate access test is flaky since it depends on the order of operations of two concurrent goroutines. Despite the heavy bias towards one of the results, it's still possible to end the execution with a closed gate. I believe this case was created to test an earlier implementation where the gate state was stored and mutated internally, so the access had to be protected by a lock. However, the final implementation changed this approach to be only channel-based, so there is no need for this flaky test anymore."
855,remove 1.4.0 changelog entry that refers to bugfix on new code (#14611),"Bug fixes on new features in Nomad 1.4.0 don't need or want changelog entries in the same changelog the feature appeared, so remove this one."
856,Added task links to various alloc tables (#14592),  Added task links to various alloc tables   Lintfix   Border collapse and added to task group page   Logs icon temporarily removed and localStorage added   Mock task added to test   Delog   Two asserts in new test   Remove commented-out code   Changelog   Removing args.allocation deps 
857,deps: run all dependabot configs over the weekend (#14608),
858,website: content updates for developer (#14473),Co-authored-by: Geoffrey Grosenbach link Co-authored-by: Anthony link Co-authored-by: Ashlee Boyer link Co-authored-by: Ashlee M Boyer link Co-authored-by: HashiBot link Co-authored-by: Kevin Wang link
859,ci: no need to run unit tests for e2e/ui changes (#14607),
860,e2e: use unique names for Connect ACL Consul policy names. (#14604),"In the event a single test fails to clear up properly after itself, all other tests will fail as they attempt to create ACL policies with the same names. This change ensures they use unique ACL names, so when a single test fails, it is easy to identify it is a problem with the test rather than the suite."
861,Merge pull request #14602 from hashicorp/release/1.4.0-beta.1,Release/1.4.0 beta.1
862,Data race fixes in tests and a new semgrep rule (#14594), test: don't use loop vars in goroutines  fixes a data race in the test  test: copy objects in statestore before mutating  fixes data race in test  test: @lgfa29's segmgrep rule for loops/goroutines  Found 2 places where we were improperly using loop variables inside goroutines.
863,Turn security scanning back on,
864,remove unused circbufwriter code (#14593),The tests have data races and the code is unused in OSS and enterprise codebases. Bit more progress for #14236
865,testing: skip exec stream child process test (#14601),This test is broken in CircleCI only. It works on GHA in both 20.04 and 22.04 and has been verified to work on real Nomad; temporarily commenting-out so that we don't block unrelated CI runs. WIP to fix in https://github.com/hashicorp/nomad/pull/14600
866,e2e: rewrite spread suite to use new e2e style. (#14598),"The rewrite refactors the suite to use the new style along with other recent testing improvements. In order to ensure the spread tests do not impact each other, there is new cleanup functionality to ensure both the job and allocations are removed from state before the test exits completely."
867,variables: fix ENT-only test failure in command tests (#14599),"The module test uses the wrong namespace in the autocomplete test. The namespace only gets validated against if we have quota enforcement (or more typically by ACL checks), so the test only fails in the ENT repo test runs."
868,Prepare for next release,
869,Generate files for 1.4.0-beta.1 release,
870,Update security-scan.hcl,
871,Prepare for next release,
872,Generate files for 1.4.0-beta.1 release,
873,Prepare release 1.4.0-beta.1,
874,variables: handler should catch errors before conflicts (#14591),
875,Stabilizing percy snapshots with faker (#14551),"  First attempt at stabilizing percy snapshots with faker   Tokens seed moved to before management token generation   Faker seed only in token test   moving seed after storage clear   And again, but back to no faker seeding   Isolated seed and temporary log   Setting seed(1) wherever we're snapshotting, or before establishing cluster scenarios   Deliberate noop to see if percy is stable   Changelog entry "
876,cleanup: create interface for check watcher and mock it in nsd tests (#14577),  cleanup: create interface for check watcher and mock it in nsd tests   cleanup: add comments for check watcher interface 
877,docs: Correct driver name for 'Nomad Task Group' autoscaler target (#14576),
878,build: always set osusergo (#14583),The way this tag was previous declared would cause it to be overwritten when the GO_TAGS env var was set.
879,Tooltip for node names (#14573),
880,2 small data race fixes in logmon and check tests (#14538),  logmon: fix data race around oldestLogFileIdx   checks: fix 2 data races in tests   logmon: move & rename lock to logically group 
881,scheduler: stopped-yet-running allocs are still running (#10446),  scheduler: stopped-yet-running allocs are still running   scheduler: test new stopped-but-running logic   test: assert nonoverlapping alloc behavior   Also add a simpler Wait test helper to improve line numbers and save few lines of code.  docs: tried my best to describe #10446  it's not concise... feedback welcome   scheduler: fix test that allowed overlapping allocs   devices: only free devices when ClientStatus is terminal   test: output nicer failure message if err==nil   Co-authored-by: Mahmood Ali link Co-authored-by: Michael Schurter link
882,Deregister keyboard blur handler (#14570),
883,docs: tweak some copy in the concept docs (#14566),
884,Merge pull request #14559 from hashicorp/docs-nsd-check-watcher,docs: add documentation for nomad service check restarts
885,"docs: Fixing heading order, adding text for links in /docs/ecosystem (#14549)","  Fixing heading order, adding text for links   Apply suggestions from code review   Co-authored-by: Tim Gross link  Applying more suggestions from code review  Co-authored-by: Tim Gross link"
886,docs: update docs for NSD check restart,
887,Merge pull request #14553 from hashicorp/f-nsd-check-watcher,servicedisco: implement check_restart support for nomad service checks
888,changelog entry for variables (#14509),
889,docs: include path in ACL requirements for variables (#14561),Also add links to the ACL policy reference and variables concepts docs near the top of the page.
890,docs: variables HTTP API documentation (#14516),
891,var: Correct 0-index CAS Deletes (#14555)," Add missing 0 case for VarDeleteCAS, more comments Add tests for VarDeleteCAS"
892,api: update keyring comment to reflect correct feature name. (#14558),
893,servicedisco: implement check_restart for nomad service checks,"This PR implements support for check_restart for checks registered in the Nomad service provider. Unlike Consul, Nomad service checks never report a ""warning"" status, and so the check_restart.ignore_warnings configuration is not valid for Nomad service checks."
894,docs: keyring HTTP API documentation (#14513),
895,Merge pull request #14546 from hashicorp/f-refactor-check-watcher,client: refactor check watcher to be reusable
896,e2e: do not assume clean cluster when checking return objects. (#14557),
897,[ui] Service health check in-session history (#14515),  Preliminary version   Addition of a filtering helper and more styling for service check history   Fixed-widths on table cols   Account for new rows in test   Explanation for magic numbers 
898,Variables CLI documentation (#14249),
899,variables: restrict allowed paths for variables (#14547),"Restrict variable paths to RFC3986 URL-safe characters that don't conflict with the use of characters ""@"" and ""."" in module blocks. This prevents users from writing variables that will require tricky templating syntax or that they simply won't be able to use. Also restrict the length so that a user can't make queries in the state store unusually expensive (as they are O(k) on the key length)."
900,docs: update module for Nomad Variables (#14527),
901,variables: change spec file extension to match rename (#14552),Also fixes a typo in the module help text.
902,Update flags to align with other var commands. (#14550),
903,"On window blur, immediately hide keyboard hints (#14529)","  On window blur, immediately hide keyboard hints   De-param "
904,client: refactor check watcher to be reusable,"This PR refactors agent/consul/check_watcher into client/serviceregistration, and abstracts away the Consul-specific check lookups. In doing so we should be able to reuse the existing check watcher logic for also watching NSD checks in a followup PR. A chunk of consul/unit_test.go is removed - we'll cover that in e2e tests in a follow PR if needed. In the long run I'd like to remove this whole file."
905,[ui] Service Discovery: provide a quick link to the Consul UI if available (#14537),"  Test for aggregate service health and consul agg service health   If a consul UI link is present, show a nice little link   Also add to job services page   Reallocate consul url in mock "
906,acl: fix encoding expiration time in ACL token list API. (#14542),
907,job_endpoint: check spec for all regions (#14519), job_endpoint: check spec for all regions
908,"Vars: CLI commands for module, module, module (#14400)", Includes updates to module
909,CI: make module clean on macOS (#14528),Running module on macOS identifies some dead code because the code is used only with the Linux build tag. Move this code into appropriately-tagged code files.
910,changelog: add entry for #14320 (#14518),
911,Merge pull request #14464 from tonytrg/remove-dead-code,Removing reference to non existant test-website task in makefile
912,Merge pull request #14525 from hashicorp/cleanup-workload-restart-interface,cleanup: consolidate interfaces for workload restarting
913,Merge pull request #14520 from hashicorp/f-ec2info-from-makefile,build: make ec2info command usable from GNUMakefile
914,cleanup: consolidate interfaces for workload restarting,This PR combines two of the same interface definitions around workload restarting
915,build: make ec2info command usable from GNUMakefile,"The ec2info was never intuitive to run - needing to set the AWS envinronment variables, cd'ing into tools/ec2info, and knowing to invoke the command. This PR makes it so we can run ec2info just by running make ec2info The command now also checks for the AWS environment variables being set, and provides a useful error if they are not."
916,remove root keyring install API (#14514), keyring rotate API should require put/post method remove keyring install API
917,e2e: fixup service discovery and ACL expiration tests. (#14517),"The NSD checks tests were racey, whereby the check may not have been triggered by the time it was queried. This change wraps the check so it can account for this. This removes the current ACL expiration GC section in order to get the tests passing and allow more time to investigate the test. I have full confidence the feature is working as expected and have tested extensively locally."
918,deps: update armon/go-metrics to v0.4.1 (#14493),
919,Merge pull request #14495 from hashicorp/ui-services-checks-uniq-by-alloc,[ui] Service health checks unique by allocation
920,Reflect alloc-id-having mocks in tests,
921,Add client scheduling eligibility to heartbeat (#14483),
922,Lintfixes,
923,CSI: failed allocation should not block its own controller unpublish (#14484),"A Nomad user reported problems with CSI volumes associated with failed allocations, where the Nomad server did not send a controller unpublish RPC. The controller unpublish is skipped if other non-terminal allocations on the same node claim the volume. The check has a bug where the allocation belonging to the claim being freed was included in the check incorrectly. During a normal allocation stop for job stop or a new version of the job, the allocation is terminal. But allocations that fail are not yet marked terminal at the point in time when the client sends the unpublish RPC to the server. For CSI plugins that support controller attach/detach, this means that the controller will not be able to detach the volume from the allocation's host and the replacement claim will fail until a GC is run. This changeset fixes the conditional so that the claim's own allocation is not included, and makes the logic easier to read. Include a test case covering this path. Also includes two minor extra bugfixes:   Entities we get from the state store should always be copied before altering. Ensure that we copy the volume in the top-level unpublish workflow before handing off to the steps.   The list stub object for volumes in module did not match the stub object in module. The module package also did not include the current readers/writers fields that are expected by the UI. True up the two objects and add the previously undocumented fields to the docs. "
924,Index check only using alloc-specific ones too,
925,Move uniquing to the sidebar itself,
926,client: fix RPC forwarding when querying checks for alloc. (#14498),"When querying the checks for an allocation, the request must be forwarded to the agent that is running the allocation. If the initial request is made to a server agent, the request can be made directly to the client agent running the allocation. If the request is made to a client agent not running the alloc, the request needs to be forwarded to a server and then the correct client."
927,Merge pull request #14497 from hashicorp/b-guard-random-stagger,helper: guard against negative inputs into random stagger
928,test: fix concurrent map access in module (#14496),The map of in-flight RPCs gets cleared by a goroutine in the test without first locking it to make sure that it's not being accessed concurrently by the stats fetcher itself. This can cause a panic in tests.
929,helper: guard against negative inputs into random stagger,"This PR modifies RandomStagger to protect against negative input values. If the given interval is negative, the value returned will be somewhere in the stratosphere. Instead, treat negative inputs like zero, returning zero."
930,e2e: fixup token expiration test to account for longer forced GC. (#14491),
931,docs: add quota panic fix changelog entry (#14485),See https://github.com/hashicorp/nomad-enterprise/pull/839 for original (Enterprise only)
932,Midway point on only showing alloc-specific checks,
933,Merge pull request #14408 from hashicorp/f-ui/service-discovery,Service discovery in the Nomad UI
934,Remove an unused internal test comment,
935,Further unused test deletion,
936,Changelog added and unused tests removed,
937,[ui] Service Discovery: Allocation Service fly-out (#14389),  Bones of a new flyout section   Basic sidebar behaviour and style edits   Concept of a refID for service fragments to disambiguate task and group   A11y audit etc   Moves health check aggregation to serviceFragment model and retains history   Has to be a getter   flyout populated   Sidebar styling   Sidebar table and details added   Mirage fixture   Active status and table styles   Unit test mock updated   Acceptance tests for alloc services table and flyout   Chart styles closer to mock   Without a paused test   Consul and Nomad icons in services table   Alloc services test updates in light of new column changes   without using an inherited scenario 
938,ui: add  to  collection (#14472),
939,[ui] Jobs/jobid/services table sorting (#14410),  Sortable job service table   sorting removed from specific service page 
940,Job Services: fixtures and acceptance tests (#14319),"  Added to subnav and basic table implemented   Existing services become service fragments, and services tab aggregated beneath job route   Index page within jobs/job/services   Watchable services   Lintfixes   Links to clients and individual services set up   Child service route   Keyboard shortcuts on service page   Model that shows consul services as well, plus level and provider cols   lintfix   Level as query param   Watch job for service name changes too   Group level service fixtures established   Progress at task level and job-linked services   Task and group services on update   Fixture side-effect cleanup   Basic acceptance tests for job services   Testmodel cleanup   Disabled mirage logging   New cluster type specifically for services   Without explicit job-model binding   Trying to isolate a tostring error   Account for new tab in keyboardnav   More test isolation attempts   Remove skipped tests and link task to parent group by id   ui: add service health viz to table (#14369)   ui: add service-status-bar   test: service-status-bar   refact: update component api for new data struct   ui: format service health struct   ui:  add service health viz to table   temp: add placeholder to remind conditional watcher   test: write tests for transformation algorithm   refact: update transformation algo   ui: conditionally long poll checks endpoint   refact: add conditional logic for nomad provider   refact: update service-fragment model to include owner info ui: differentiate between task and group-level in derived state comp test: add test to document behavior refact: update tests for api change refact: update integration test for API change chore: remove unsused vars chore: elvis operator to protect mirage refact: create refId instead of internalModel refact: update algo refact: update conditional template logic refact: update test for api change: chore: cant use if and not in hbs conditional"
941,ui: long poll module endpoint (#14354),  chore: add lodash isEqual package   ui: fetch non ember-data records   ui: create watcher to poll non ember-data records 
942,"Nomad Services: job routes, model, and serializer updates (#14226)","  Added to subnav and basic table implemented   Existing services become service fragments, and services tab aggregated beneath job route   Index page within jobs/job/services   Watchable services   Lintfixes   Links to clients and individual services set up   Child service route   Keyboard shortcuts on service page   Model that shows consul services as well, plus level and provider cols   lintfix   Level as query param   Watch job for service name changes too   Lintfix   Testfixes   Placeholder mirage route "
943,autopilot: deflake tests (#14475),"Includes:   Remove leader upgrade raft version test, as older versions of raft are now   incompatible with our autopilot library.   Remove attempt to assert initial non-voter status on the module   test, as this happens too quickly to reliably detect.   Unskip some previously-skipped tests which we should make stable.   Remove the module retry helper for these tests; this uses panic recovery   in a kind of a clever/gross way to reduce LoC but it seems to introduce some   timing issues in the process.   Add more test step logging and reduce logging noise from the scheduler   goroutines to make it easier to debug failing tests.   Be more consistent about using the module helper so that we   can assert the cluster is fully stable and not just that we've added peers. "
944,ui: remove extra space in menu footer (#14457),
945,hcl2: add strlen function and update docs. (#14463),
946,core: clarify ACL token expiry GC messages to show global param. (#14466),
947,cli: remove network from module output (#14468),Network quotas were removed in Nomad 1.0.4. Remove the fields no longer in use from the module output.
948,Add a log line to help track node eligibility (#14125),Co-authored-by: James Rasell link
949,Removing reference to non existant test-website task in makefile,
950,warn destructive update only when count > 1 (#13103),
951,[ui] Show a different message when there are no tasks in a job (#14071),Different mesage when there are not tasks in a job
952,Fix error handling in Client consulDiscoveryImpl (#14431),Added a missing module on non-nil error to avoid accidentally using a bad peer.
953,connect: interpolate task env in config values (#14445),"When configuring Consul Service Mesh, it's sometimes necessary to provide dynamic value that are only known to Nomad at runtime. By interpolating configuration values (in addition to configuration keys), user are able to pass these dynamic values to Consul from their Nomad jobs."
954,e2e: add test to exercise ACL tokens with role and policy links. (#14432),
955,docs: add warning about changing region config (#14443),
956,migrate autopilot implementation to raft-autopilot (#14441),"Nomad's original autopilot was importing from a private package in Consul. It has been moved out to a shared library. Switch Nomad to use this library so that we can eliminate the import of Consul, which is necessary to build Nomad ENT with the current version of the Consul SDK. This also will let us pick up autopilot improvements shared with Consul more easily."
957,cli: set -hcl2-strict to false if -hcl1 is defined (#14426),"These options are mutually exclusive but, since module defaults to module users had to explicitily set it to module when using module. Also return module when job plan fails validation as this is the expected  code in this situation."
958,docs: clarify CSI plugin compatibility (#14434),"Nomad is generally compliant with the CSI specification for Container Orchestrators (CO), except for unimplemented features. However, some storage vendors have built CSI plugins that are not compliant with the specification or which expect that they're only deployed on Kubernetes. Nomad cannot vouch for the compatibility of any particular plugin, so clarify this in the docs. Co-authored-by: Derek Strickland link"
959,cli: ignore VaultToken when generating job diff (#14424),
960,"chore: remove use of ""err"" a log line context key for errors. (#14433)","Log lines which include an error should use the full term ""error"" as the context key. This provides consistency across the codebase and avoids a Go style which operators might not be aware of."
961,build(deps): bump github.com/hashicorp/go-version from 1.4.0 to 1.6.0 (#14364),Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link Co-authored-by: James Rasell link
962,e2e: add acl test for token expiration. (#14418),"In order to add an E2E test to cover token expiration, the server config has been updated to include a low minimum allowed TTL value. For ease of reading, the max value is also set."
963,Update ephemeral_disk.mdx (#14356),"It is really unclear on how to use this feature. it took me a while to find this, so I thought I would purpose how to use this."
964,Merge release 1.3.5 files (#14425),  Merge release 1.3.5 files   Generate files for 1.3.5 release   Prepare for next release   Co-authored-by: hc-github-team-nomad-core link
965,changelog: add entry for #14374 (#14419),
966,changelog: add entry for #14381 (#14416),
967,docs: add documentation for ACL token expiration and ACL roles. (#14332),The ACL command docs are now found within a sub-dir like the operator command docs. Updates to the ACL token commands to accommodate token expiry have also been added. The ACL API docs are now found within a sub-dir like the operator API docs. The ACL docs now include the ACL roles endpoint as well as updated ACL token endpoints for token expiration. The configuration section is also updated to accommodate the new ACL and server parameters for the new ACL features.
968,e2e: add ACL test suite with ACL Role test. (#14398),This adds a new ACL test suite to the e2e framework which includes an initial test for ACL roles. The ACL test includes a helper to track and clean created Nomad resources which keeps the test cluster clean no matter if the test fails early or not.
969,ci: fix TestNomad_BootstrapExpect_NonVoter test (#14407),"PR #12130 refactored the test to use the module helper, but this function only returns the number of voting peers, which in this test should be equal to 2. I think the tests were passing back them because of a bug in Raft (https://github.com/hashicorp/raft/pull/483) where a non-voting server was able to transition to candidate state. One possible evidence of this is that a successful test run would have the following log line: module This commit reverts the test logic to check for peer count, regardless of voting status."
970,Vars: Update CT dependency to support variables. (#14399),"  Update Consul Template dep to support Nomad vars   Remove module config for Consul Testservers Upgrading to the 1.14 Consul SDK introduces and additional default configuration—module—that is not compatible with versions of Consul before v1.13.0. because Nomad tests against Consul v1.11.1, this configuration has to be nil'ed out before passing it to the Consul binary. "
971,testing: setting env var incompatible with parallel tests (#14405),Neither the module nor module helper are safe to use in parallel tests because environment variables are process-global. The stdlib panics if you try to do this. Remove the module call from all tests where we're setting environment variables.
972,search: enforce correct ACL for search over variables (#14397),
973,keyring: wrap root key in key encryption key (#14388),"Update the on-disk format for the root key so that it's wrapped with a unique per-key/per-server key encryption key. This is a bit of security theatre for the current implementation, but it uses module as the interface for wrapping the key. This provides a shim for future support of external KMS such as cloud provider APIs or Vault transit encryption.   Removes the JSON serialization extension we had on the module struct; this   struct is now only used for key replication and not for disk serialization, so   we don't need this helper.   Creates a helper for generating cryptographically random slices of bytes that   properly accounts for short reads from the source.   No observable functional changes outside of the on-disk format, so there are   no test updates. "
974,"docs: fixing a few more places we missed ""secure"" during rename (#14395)",
975,Merge pull request #14385 from hashicorp/f-cg-use-kill,cgroups: refactor v2 kill path to use cgroups.kill interface file
976,Merge pull request #14290 from hashicorp/cleanup-more-helper-cleanup,cleanup: tidy up helper package some more
977,docs: template change script example correction (#14368),"""path"" parameter doesn't work, should be command"
978,Merge pull request #14320 from hashicorp/f-gh-13120-sso-umbrella-merged-main,acl: add token expiration and ACL role functionality
979,Merge branch 'main' into f-gh-13120-sso-umbrella-merged-main,
980,Merge pull request #14383 from hashicorp/variables-rename-ui,[ui] Variables Rename
981,cgroups: refactor v2 kill path to use cgroups.kill interface file,"This PR refactors the cgroups v2 group kill code path to use the cgroups.kill interface file for destroying the cgroup. Previously we copied the freeze + sigkill + unfreeze pattern from the v1 code, but v2 provides a more efficient and more race-free way to handle this. Closes #14371"
982,"Revert ""refact: conditional checks for token secret before fetch (#14134)"" (#14381)",This reverts commit b9fec224bac4c0d6b3a2d699367913526fe1aa31.
983,Merge pull request #14143 from hashicorp/cleanup-slice-sets-3,cleanup: more cleanup of slices that are really sets
984,Mostly user-facing renames and a few test renames,
985,Policy block name changed,
986,Variable form and css classes,
987,ability rename,
988,keyring: split structs to its own file (#14378),
989,cleanup: cleanup more slice-set comparisons,
990,docs: rename Secure Variables to Variables (#14352),
991,Merge pull request #14351 from hashicorp/variables-rename,Variables rename
992,bugfix: fixed template validation panic in case of incorrect ChangeScript configuration (#14374),Fixes #14367
993,consul: allow stale namespace results (#12953),"Nomad reconciles services it expects to be registered in Consul with what is actually registered in the local Consul agent. This is necessary to prevent leaking service registrations if Nomad crashes at certain points (or if there are bugs). When Consul has namespaces enabled, we must iterate over each available namespace to be sure no services were leaked into non-default namespaces. Since this reconciliation happens often, there's no need to require results from the Consul leader server. In large clusters this creates far more load than the ""freshness"" of the response is worth. Therefore this patch switches the request to AllowStale=true"
994,rename SecureVariables to Variables throughout,
995,file rename,
996,service-health-bar (#14295),  ui: add service-status-bar   test: service-status-bar 
997,cli: force periodic job if its id equals search prefix,
998,Merge pull request #14318 from hashicorp/cleanup-create-pointer-compare,cleanup: create pointer.Compare helper function
999,Post 1.3.4 release (#14329),  Generate files for 1.3.4 release   Prepare for next release   Update CHANGELOG.md   Co-authored-by: hc-github-team-nomad-core link
1000,build(deps): bump github.com/hashicorp/go-memdb from 1.3.2 to 1.3.3 (#14206),Bumps link from 1.3.2 to 1.3.3. - link - link - link  updated-dependencies: - dependency-name: github.com/hashicorp/go-memdb   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
1001,cleanup: create pointer.Compare helper function,This PR creates a pointer.Compare helper for comparing equality of two pointers. Strictly only works with primitive types we know are safe to derefence and compare using '=='.
1002,build(deps): bump github.com/hashicorp/go-hclog from 1.2.0 to 1.2.2 (#14208),Bumps link from 1.2.0 to 1.2.2. - link - link  updated-dependencies: - dependency-name: github.com/hashicorp/go-hclog   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
1003,build(deps): bump github.com/aws/aws-sdk-go from 1.42.27 to 1.44.84 (#14326),Bumps link from 1.42.27 to 1.44.84. - link - link - link  updated-dependencies: - dependency-name: github.com/aws/aws-sdk-go   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
1004,SV API: return upserted variable to caller (#14325), Return created variable to caller in HTTP and Go APIs Update tests for returned values
1005,build(deps): bump github.com/shirou/gopsutil/v3 from 3.21.12 to 3.22.7 (#14209), build(deps): bump github.com/shirou/gopsutil/v3 from 3.21.12 to 3.22.7  Bumps link from 3.21.12 to 3.22.7. - link - link  updated-dependencies: - dependency-name: github.com/shirou/gopsutil/v3   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link  changelog entry  Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link Co-authored-by: Tim Gross link
1006,Merge pull request #14230 from hashicorp/b-fix-cpuset-init,client: refactor cpuset manager initialization
1007,client: refactor cpuset manager initialization,"This PR refactors the code path in Client startup for setting up the cpuset cgroup manager (non-linux systems not affected). Before, there was a logic bug where we would try to read the cpuset.cpus.effective cgroup interface file before ensuring nomad's parent cgroup existed. Therefor that file would not exist, and the list of useable cpus would be empty. Tasks started thereafter would not have a value set for their cpuset.cpus. The refactoring fixes some less than ideal coding style. Instead we now bootstrap each cpuset manager type (v1/v2) within its own constructor. If something goes awry during bootstrap (e.g. cgroups not enabled), the constructor returns the noop implementation and logs a warning. Fixes #14229"
1008,Merge pull request #14301 from hashicorp/b-fix-check-status-test-racey,testing: fix flakey check status test
1009,Merge branch 'main' into f-gh-13120-sso-umbrella-merged-main,
1010,Merge pull request #14291 from hashicorp/f-gh-13120-sso-various-small-fixes,acl: three small fixes for CLI and state consistency
1011,acl: fix a bug where roles could be duplicated by name.,"An ACL roles name must be unique, however, a bug meant multiple roles of the same same could be created. This fixes that problem with checks in the RPC handler and state store."
1012,ui: task lifecycle restart all tasks (#14223),"Now that tasks that have finished running can be restarted, the UI needs to use the actual task state to determine which CSS class to use when rendering the task lifecycle chart element."
1013,Task lifecycle restart (#14127)," allocrunner: handle lifecycle when all tasks die  When all tasks die the Coordinator must transition to its terminal state, coordinatorStatePoststop, to unblock poststop tasks. Since this could happen at any time (for example, a prestart task dies), all states must be able to transition to this terminal state.  allocrunner: implement different alloc restarts  Add a new alloc restart mode where all tasks are restarted, even if they have already exited. Also unifies the alloc restart logic to use the implementation that restarts tasks concurrently and ignores ErrTaskNotRunning errors since those are expected when restarting the allocation.  allocrunner: allow tasks to run again  Prevent the task runner Run() method from exiting to allow a dead task to run again. When the task runner is signaled to restart, the function will jump back to the MAIN loop and run it again. The task runner determines if a task needs to run again based on two new task events that were added to differentiate between a request to restart a specific task, the tasks that are currently running, or all tasks that have already run.  api/cli: add support for all tasks alloc restart  Implement the new -all-tasks alloc restart CLI flag and its API counterpar, AllTasks. The client endpoint calls the appropriate restart method from the allocrunner depending on the restart parameters used.   test: fix tasklifecycle Coordinator test   allocrunner: kill taskrunners if all tasks are dead   When all non-poststop tasks are dead we need to kill the taskrunners so we don't leak their goroutines, which are blocked in the alloc restart loop. This also ensures the allocrunner exits on its own.  taskrunner: fix tests that waited on WaitCh  Now that ""dead"" tasks may run again, the taskrunner Run() method will not return when the task finishes running, so tests must wait for the task state to be ""dead"" instead of using the WaitCh, since it won't be closed until the taskrunner is killed.   tests: add tests for all tasks alloc restart   changelog: add entry for #14127   taskrunner: fix restore logic.   The first implementation of the task runner restore process relied on server data (module) which may not be available to the client at the time of restore. It also had the incorrect code path. When restoring a dead task the driver handle always needs to be clear cleanly using module otherwise, after exiting the MAIN loop, the task may be killed by module. The fix is to store the state of the Run() loop in the task runner local client state: if the task runner ever exits this loop cleanly (not with a shutdown) it will never be able to run again. So if the Run() loops starts with this local state flag set, it must exit early. This local state flag is also being checked on task restart requests. If the task is ""dead"" and its Run() loop is not active it will never be able to run again.   address code review requests   apply more code review changes   taskrunner: add different Restart modes   Using the task event to differentiate between the allocrunner restart methods proved to be confusing for developers to understand how it all worked. So instead of relying on the event type, this commit separated the logic of restarting an taskRunner into two methods: - module will retain the current behaviour and only will only restart   the task if it's currently running. - module is the new method where a module task is allowed to   restart if its module method is still active. Callers will need to   restart the allocRunner taskCoordinator to make sure it will allow the   task to run again.  minor fixes"
1014,vault: detect namespace change in config reload (#14298),"The module field was not included in the equality check between old and new Vault configurations, which meant that a Vault config change that only changed the namespace would not be detected as a change and the clients would not be reloaded. Also, the comparison for boolean fields such as module and module was on the pointer and not the value of that pointer, which results in spurious reloads in real config reload that is easily missed in typical test scenarios. Includes a minor refactor of the order of fields for module and module to match the struct fields in hopes it makes it harder to make this mistake in the future, as well as additional test coverage."
1015,Merge pull request #14283 from hashicorp/f-java-corretto-test-case,drivers/java: add parsing test case for corretto 17
1016,Merge pull request #14297 from hashicorp/b-logmon-fork-mystery-bin,client/logmon: acquire executable in init block
1017,testing: fix flakey check status test,This PR fixes a flakey test where we did not wait on the check status to actually become failing (go too fast and you just get a pending check). Instead add a helper for waiting on any check in the alloc to become the state we are looking for.
1018,cleanup: move fs helpers into escapingfs,
1019,client/logmon: acquire executable in init block,"This PR causes the logmon task runner to acquire the binary of the Nomad executable in an 'init' block, so as to almost certainly get the name while the nomad file still exists. This is an attempt at fixing the case where a deleted Nomad file (e.g. during upgrade) may be getting renamed with a mysterious suffix first. If this doesn't work, as a last resort we can literally just trim the mystery string. Fixes: #14079"
1020,template: custom change_mode scripts (#13972),This PR adds the functionality of allowing custom scripts to be executed on template change. Resolves #2707
1021,changelog: update #14212 to breaking-change (#14292),
1022,cleanup: remove more copies of min/max from helper,
1023,deps: sync versions of go-discover in go.mod (#14269),In #13491 the version of module was updated in module but the comment above it mentions that it also needs to be updated in the module directive.
1024,docs: Update upgrade guide to reflect enterprise changes introduced in nomad-enterprise (#14212),"This PR documents a change made in the enterprise version of nomad that addresses the following issue: When a user tries to filter audit logs, they do so with a stanza that looks like the following: audit {   enabled = true filter ""remove deletes"" {     type = ""HTTPEvent""     endpoints  = [""*""]     stages = [""OperationComplete""]     operations = [""DELETE""]   } } When specifying both an ""endpoint"" and a ""stage"", the events with both matching a ""endpoint"" AND a matching ""stage"" will be filtered. When specifying both an ""endpoint"" and an ""operation"" the events with both matching a ""endpoint"" AND a matching ""operation"" will be filtered. When specifying both a ""stage"" and an ""operation"" the events with a matching a ""stage"" OR a matching ""operation"" will be filtered. The ""OR"" logic with stages and operations is unexpected and doesn't allow customers to get specific on which events they want to filter. For instance the following use-case is impossible to achieve: ""I want to filter out all OperationReceived events that have the DELETE verb""."
1025,drivers/java: add parsing test case for corretto 17,
1026,cli: use policy flag for role creation and update.,
1027,cli: output none when a token has no expiration.,
1028,build: set osusergo build tag by default (#14248),This PR activates the osuergo build tag in GNUMakefile. This forces the os/user package to be compiled without CGO. Doing so seems to resolve a race condition in getpwnam_r that causes alloc creation to hang or panic on module.
1029,acl: allow tokens to lookup linked roles. (#14227),"When listing or reading an ACL role, roles linked to the ACL token used for authentication can be returned to the caller."
1030,fix minor issues found durint ENT merge (#14250),
1031,core: move LicenseConfig to shared file (#14247),This moves LicenseConfig and its Copy method to a shared file so that it can be shared with enterprise code.
1032,ui: use task state to determine if task is active (#14224),"The current implementation uses the task's finishedAt field to determine if a task is active of not, but this check is not accurate. A task in the ""pending"" state will not have finishedAt value but it's also not active. This discrepancy results in some components, like the inline stats chart of the task row component, to be displayed even whey they shouldn't."
1033,ci: fix gofmt on tasklifecycle (#14232),
1034,docs: fix an anchor link in secure vars docs (#14231),
1035,Merge pull request #14215 from hashicorp/docs-update-checks-for-nsd,docs: update check documentation with NSD specifics
1036,docs: fix checks doc typo,Co-authored-by: Piotr Kazmierczak link
1037,Merge pull request #14221 from hashicorp/build-require-go1.19,build: go.mod should require go1.19
1038,allocrunner: refactor task coordinator (#14009),"The current implementation for the task coordinator unblocks tasks by performing destructive operations over its internal state (like closing channels and deleting maps from keys). This presents a problem in situations where we would like to revert the state of a task, such as when restarting an allocation with tasks that have already exited. With this new implementation the task coordinator behaves more like a finite state machine where task may be blocked/unblocked multiple times by performing a state transition. This initial part of the work only refactors the task coordinator and is functionally equivalent to the previous implementation. Future work will build upon this to provide bug fixes and enhancements."
1039,Remove a test pause and a lint error from #14199 (#14222),
1040,allow ACL policies to be associated with workload identity (#14140),"The original design for workload identities and ACLs allows for operators to extend the automatic capabilities of a workload by using a specially-named policy. This has shown to be potentially unsafe because of naming collisions, so instead we'll allow operators to explicitly attach a policy to a workload identity. This changeset adds workload identity fields to ACL policy objects and threads that all the way down to the command line. It also a new secondary index to the ACL policy table on namespace and job so that claim resolution can efficiently query for related policies."
1041,Make var get a blocking query as expected (#14205),
1042,Add .0 to make goenv happy (#14218),
1043,Merge pull request #14219 from hashicorp/e2e-nsd-checks,e2e: add e2e tests for nomad service disco checks
1044,e2e: add e2e tests for nomad service disco checks,This PR adds 2 e2e tests for ensuring nomad service discovery checks get created and produce status results as expected.
1045,template: use pointer values for gid and uid (#14203),"When a Nomad agent starts and loads jobs that already existed in the cluster, the default template uid and gid was being set to 0, since this is the zero value for int. This caused these jobs to fail in environments where it was not possible to use 0, such as in Windows clients. In order to differentiate between an explicit 0 and a template where these properties were not set we need to use a pointer."
1046,client: stats need latest allocdir (#14204),"In #14139 this code was changed to use the original copy of the config, but Config.AllocDir is updated in the module method for dev agents. This uses the latest version of the alloc dir (which cannot change further at runtime without a client restart which would reinitialize the stats collector as well)."
1047,docs: update check documentation with NSD specifics,"This PR updates the checks documentation to mention support for checks when using the Nomad service provider. There are limitations of NSD compared to Consul, and those configuration options are now noted as being Consul-only."
1048,[ui] Allocation route services table: show task-level services (#14199),Adds service fragments to allocations and union taskGroup and task services
1049,acl: make listing RPC and HTTP API a stub return object. (#14211),"Making the ACL Role listing return object a stub future-proofs the endpoint. In the event the role object grows, we are not bound by having to return all fields within the list endpoint or change the signature of the endpoint to reduce the list return size."
1050,Merge pull request #14196 from hashicorp/f-nsd-checks-in-alloc-status,cli: display nomad service check status output in CLI commands
1051,readme: remove Gitter lobby link. (#14195),"gitter is not an officially supported forum, so we should not link to it from the readme."
1052,acl: add replication to ACL Roles from authoritative region. (#14176),"ACL Roles along with policies and global token will be replicated from the authoritative region to all federated regions. This involves a new replication loop running on the federated leader. Policies and roles may be replicated at different times, meaning the policies and role references may not be present within the local state upon replication upsert. In order to bypass the RPC and state check, a new RPC request parameter has been added. This is used by the replication process; all other callers will trigger the ACL role policy validation check. There is a new ACL RPC endpoint to allow the reading of a set of ACL Roles which is required by the replication process and matches ACL Policies and Tokens. A bug within the ACL Role listing RPC has also been fixed which returned incorrect data during blocking queries where a deletion had occurred."
1053,build: go.mod should require go1.19,"Since we started using atomic.Pointer, we should specify the go1.19 requirement in our go.mod files."
1054,core: fix race mutating jobs in scaling api (#14192),"Since the state store returns a pointer to the shared job structs in memdb we must always copy it before mutating it and applying the new version via raft. Otherwise if the rpc fails before the mutated job is committed to raft (either due to validation, bug, crash, or other exit condition), the leader server will have an updated copy of the job that other servers will not have."
1055,cli: display nomad service check status output in CLI commands,This PR adds some NSD check status output to the CLI.  The 'nomad alloc status' command produces nsd check summary output (if present) The 'nomad alloc checks' sub-command is added to produce complete nsd check output (if present)
1056,build(deps): bump github.com/shoenig/test from 0.3.0 to 0.3.1 in /api (#14194),Bumps link from 0.3.0 to 0.3.1. - link - link  updated-dependencies: - dependency-name: github.com/shoenig/test   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
1057,client: fix data races in config handling (#14139),"Before this change, Client had 2 copies of the config object: config and configCopy. There was no guidance around which to use where (other than configCopy's comment to pass it to alloc runners), both are shared among goroutines and mutated in data racy ways. At least at one point I think the idea was to have module be mutable and then grab a lock to overwrite module's pointer atomically. This would have allowed alloc runners to read their config copies in data race safe ways, but this isn't how the current implementation worked. This change takes the following approach to safely handling configs in the client:  module is the only copy of the config and all access must go through the module mutex Since the mutex only protects the config pointer itself and not fields inside the Config struct: all config mutation must be done on a copy of the config, and then Client's config pointer is overwritten while the mutex is acquired. Alloc runners and other goroutines with the old config pointer will not see config updates. Deep copying is implemented on the Config struct to satisfy the previous approach. The TLS Keyloader is an exception because it has its own internal locking to support mutating in place. An unfortunate complication but one I couldn't find a way to untangle in a timely fashion. To facilitate deep copying I made an internally backward incompatible API change: our module used to turn containers (slices and maps) with 0 elements into nils. This probably saves a few memory allocations but makes it very easy to cause panics. Since my new config handling approach uses more copying, it became very difficult to ensure all code that used containers on configs could handle nils properly. Since this code has caused panics in the past, I fixed it: nil containers are copied as nil, but 0-element containers properly return a new 0-element container. No more ""downgrading to nil!"""
1058,sentinel: add support for Nomad ACL Token and Namespace (#14171), sentinel: add ability to reference Nomad ACL Token and Namespace in Sentinel policies
1059,events: fix race in acl event handling (#14188),
1060,Merge pull request #14187 from hashicorp/f-print-correct-go-version-windows-circle,build: print installed go version in cricle on windows
1061,build: print installed go version in cricle on windows,"This PR fixes the circle workflow step on windows where we print the go version. Like the other commands that use Go, we must inject the install path into PATH first."
1062,Merge pull request #14181 from hashicorp/cleanup-command-tests-part-2,"cleanup: fixing warnings and refactoring of command package, part 2"
1063,"cleanup: fixing warnings and refactoring of command package, part 2","This PR continues the cleanup of the command package, removing linter warnings, refactoring to use helpers, making tests easier to read, etc."
1064,Merge pull request #14172 from hashicorp/cleanup-command-tests-wait-for-node,cleanup: first pass at fixing command package warnings
1065,rpc: fix race in conn last used tracking (#14173),
1066,cleanup: first pass at fixing command package warnings,"This PR is the first of several for cleaning up warnings, and refactoring bits of code in the command package. First pass is over acl_ files and gets some helpers in place."
1067,? instead & for check-and-set param (#14168),
1068,Variables-specific keyboard commands (#14165),"  Variables-specific keyboard commands   Auto-focus the edit button when landing on a variable page, if its available "
1069,[ui] general keyboard navigation: 1.3.4 release (#14138)," Initialized keyboard service  Neat but funky: dynamic subnav traversal 👻 generalized traverseSubnav method Shift as special modifier key Nice little demo panel Keyboard shortcuts keycard Some animation styles on keyboard shortcuts Handle situations where a link is deeply nested from its parent menu item Keyboard service cleanup helper-based initializer and teardown for new contextual commands Keyboard shortcuts modal component added and demo-ghost removed Removed j and k from subnav traversal Register and unregister methods for subnav plus new subnavs for volumes and volume register main nav method Generalizing the register nav method 12762 table keynav (#12975)   Experimental feature: shortcut visual hints   Long way around to a custom modifier for keyboard shortcuts   dynamic table and list iterative shortcuts   Progress with regular old tether   Delogging   Table Keynav tether fix, server and client navs, and fix to shiftless on modified arrow keys   Go to Optimize keyboard link and storage key changed to g r parameterized jobs keyboard nav Dynamic numeric keynav for multiple tables (#13482)   Multiple tables init   URL-bind enumerable keyboard commands and add to more taskRow and allocationRows   Type safety and lint fixes   Consolidated push to keyCommands   Default value when removing keyCommands   Remove the URL-based removal method and perform a recompute on any add   Get tests passing in Keynav: remove math helpers and a few other defensive moves (#13761)   Remove ember math helpers   Test fixes for jobparts/body   Kill an unneeded integration helper test   delog   Trying if disabling percy lets this finish   Okay so its not percy; try parallelism in circle   Percyless yet again   Trying a different angle to not have percy   Upgrade percy to 1.6.1   [ui] Keyboard nav: ""u"" key to go up a level (#13754)   U to go up a level   Mislabelled my conditional   Custom lint ignore rule   Custom lint ignore rule, this time with commas   Since we're getting rid of ember math helpers elsewhere, do the math ourselves here   Replace ArrowLeft etc. with an ascii arrow (#13776)   Replace ArrowLeft etc. with an ascii arrow   non-mutative helper cleanup   Keyboard Nav: let users rebind their shortcuts (#13781)   click-outside and shortcuts enabled/disabled toggle   Trap focus when modal open   Enabled/disabled saved to localStorage   Autofocus edit button on variable index   Modal overflow styles   Functional rebind   Saving rebinds to localStorage for all majors   Started on defaultCommandBindings   Modal header style and cancel rebind on escape   keyboardable keybindings w buttons instead of spans   recording and defaultvalues   Enter short-circuits rebind   Only some commands are rebindable, and dont show dupes   No unused get import   More visually distinct header on modal   Disallowed keys for rebind, showing buffer as you type, and moving dedupe to modal logic   willDestroy hook to prevent tests from doubling/tripling up addEventListener on kb events remove unused tests Keyboard Navigation acceptance tests (#13893)   Acceptance tests for keyboard modal   a11y audit fix and localStorage clear   Bind/rebind/localStorage tests   Keyboard tests for dynamic nav and tables   Rebinder and assert expectation   Second percy snapshot showing hints no longer relevant   Weird issue where linktos with query props specifically from the task-groups page would fail to route / hit undefined.shouldSuperCede errors Adds the concept of exclusivity to a keycommand, removing peers that also share its label Lintfix Changelog and PR feedback Changelog and PR feedback Fix to rebinding in firefox by blurring the now-disabled button on rebind (#14053)   Secure Variables shortcuts removed   Variable index route autofocus removed   Updated changelog entry   Updated changelog entry   Keynav docs (#14148)   Section added to the API Docs UI page   Added a note about disabling   Prev and Next order   Remove dev log and unneeded comments "
1070,cleanup: replace TypeToPtr helper methods with pointer.Of (#14151),Bumping compile time requirement to go 1.18 allows us to simplify our pointer helper methods.
1071,Merge pull request #14110 from hashicorp/f-gh-13120-acl-role-token-support,ACL: add ACL role functionality to ACL tokens
1072,refact: conditional checks for token secret before fetch (#14134),  refact: conditional checks for token secret before fetch   refact: guard all authRawReq calls   refact: safe-guard integration tests 
1073,cli: add ability to create and view tokens with ACL role links.,
1074,api: add ACL role linking to ACL tokens.,
1075,core: add ACL role functionality to ACL tokens.,"ACL tokens can now utilize ACL roles in order to provide API authorization. Each ACL token can be created and linked to an array of policies as well as an array of ACL role links. The link can be provided via the role name or ID, but internally, is always resolved to the ID as this is immutable whereas the name can be changed by operators. When resolving an ACL token, the policies linked from an ACL role are unpacked and combined with the policy array to form the complete auth set for the token. The ACL token creation endpoint handles deduplicating ACL role links as well as ensuring they exist within state. When reading a token, Nomad will also ensure the ACL role link is current. This handles ACL roles being deleted from under a token from a UX standpoint."
1076,changelog: add missing entry for #13539 (#14129),
1077,Merge pull request #14145 from hashicorp/cleanup-trim-error-output,api: trim space of error response output
1078,ui: fix ability checking when anon policy is missing namespace (#14144),"ACL Policies aren't required to have any module blocks, and this is particularly common with the anonymous policy. If a user visits the web UI without a token already in their local storage and the anonymous policy has no module blocks, the UI will hit unhandled exceptions when rendering the sidebar or jobs page. Filter for the case where there's no module block."
1079,Merge pull request #14141 from hashicorp/cleanup-slice-sets-2,cleanup: helper func for comparing slices of .Equals types
1080,build: bump golangci-lint version,
1081,api: trim space of error response output,
1082,core: fix data races in blocked eval chan handling (#14142),"Similar to the deployment watcher fix in #14121 - the server code loves these mutable structs so we need to guard access to the struct fields with locks. Capturing ch := b.capacityChangeCh is sufficient to satisfy the data race detector, but I noticed it was also possible to leak goroutines: Since the watchCapacity loop is in charge of receiving from capacityChangeCh and exits when stopCh is closed, senders to capacityChangeCh also must exit when stopCh is closed. Otherwise they may block forever if capacityChangeCh is full because it will never be received on again. I did not find evidence of this occurring in my meager smattering of prod goroutine dumps I have laying around, but this isn't surprising as the chan has a buffer of 8096! I would imagine that is sufficient to handle ""late"" sends and then just get GC'd away when the last reference to the old chan is dropped. This is just additional safety/correctness."
1083,cleanup: helper funcs for comparing slices of references,
1084,nomad: fix race in Bootstrapped access (#14120), nomad: fix race in Bootstrapped access
1085,deployments: fix data races (#14121), deployments: fix data races  Both priority and state related fields may be mutated concurrently and need to be accessed with the lock acquired.
1086,client: fix race in heartbeat tracker (#14119),
1087,Merge pull request #14132 from hashicorp/build-update-go1.19,build: update to go1.19
1088,build: run gofmt on all go source files,"Go 1.19 will forecefully format all your doc strings. To get this out of the way, here is one big commit with all the changes gofmt wants to make."
1089,Merge pull request #14102 from hashicorp/cleanup-mesh-gateway-value,cleanup: consul mesh gateway type need not be pointer
1090,remove unnecessary query parameters in module components (#14117),  chore: remove query param in topology   chore: remove query param in plugin alloc   chore: remove query param in parameterized child   chore: remove query param in periodic child 
1091,build: update to go1.19,
1092,adds link for Nomad-Pack GitHub action (#14118),
1093,Handle conflict swith a cas qp on save and create (#14100),"  Handle conflict swith a cas qp on save and create   Notify error and give them refresh or overwrite options   Merge conflict missed, resolved   Mirage fixture   Integration test   Bracket closed (thx jai)   Adjust tests to account for number of variables with auto-conflicter "
1094,ACL: disallow missing module in secure variable policy (#14123),"The HCL parser allows for labels that aren't needed, which makes it easy to accidentally write a module block that has the intended path as the label for that block instead of the innner module block. This can result in silent failure to lock down variables if an incorrectly specified block was used to reduce the scope of capabilities (for example, if another correctly-written rule allows access to module). We can't detect the extraneous label in the HCL API, but we can detect if we're missing module blocks entirely. Use this to block obvious user errors."
1095,api: document warnings for setting module (#14122),"HTTP API consumers that have network line-of-sight to client nodes can connect directly for a small number of APIs. But in environments where the consumer doesn't have line-of-sight, there's a long pause waiting for the module to expire. Warn about this in the API docs so that authors can avoid the extra timeout."
1096,SV CLI: var init (#13820), Nomad dep: add museli/reflow SV CLI: var init
1097,refact: add parent check to boolean (#14115),  refact: add parent check to boolean   chore:  add changelog entry 
1098,UI variables made to be unique by namespace and path (#14072),"  Starting on namespaced id   Traversal for variables uniqued by namespace   Delog   Basic CRUD complete w namespaces included   Correct secvar breadcrumb joining and testfix now that namespaces are included   Testfixes with namespaces in place   Namespace-aware duplicate path warning   Duplicate path warning test additions   Trimpath reimplemented on dupe check   Solves a bug where slash was not being passed to the can write check   PR fixes   variable paths integration test fix now uses store   Seems far less hacky in retrospect   PR feedback addressed   test fixes after inclusion of path as local non-model var   Prevent confusion by dropping namespace from QPs on PUT, since its already in .data   Solves a harsh bug where you have namespace access but no secvars access (#14098)   Solves a harsh bug where you have namespace access but no secvars access   Lint cleanup   Remove unneeded condition "
1099,secure vars: filter by path in List RPCs (#14036),"The List RPCs only checked the ACL for the Prefix argument of the request. Add an ACL filter to the paginator for the List RPC. Extend test coverage of ACLs in the List RPC and in the module package, and add a ""deny"" capability so that operators can deny specific paths or prefixes below an allowed path."
1100,move secure variable conflict resolution to state store (#13922),"Move conflict resolution implementation into the state store with a new Apply RPC.  This also makes the RPC for secure variables much more similar to Consul's KV,  which will help us support soft deletes in a post-1.4.0 version of Nomad. Reimplement quotas in the state store functions. Co-authored-by: Charlie Voiselle link"
1101,Merge pull request #14114 from hashicorp/dependabot/go_modules/oss.indeed.com/go/libtime-1.6.0,build(deps): bump oss.indeed.com/go/libtime from 1.5.0 to 1.6.0
1102,Merge pull request #14112 from hashicorp/dependabot/go_modules/github.com/fsouza/go-dockerclient-1.8.2,build(deps): bump github.com/fsouza/go-dockerclient from 1.6.5 to 1.8.2
1103,build(deps): bump oss.indeed.com/go/libtime from 1.5.0 to 1.6.0,Bumps link from 1.5.0 to 1.6.0. - link - link  updated-dependencies: - dependency-name: oss.indeed.com/go/libtime   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link
1104,Merge pull request #14104 from hashicorp/f-consistent-makefile-arrows,build: use consistent arrows in makefile step output
1105,deps: add cl for fsouza/go-dockerclient,
1106,build(deps): bump github.com/fsouza/go-dockerclient from 1.6.5 to 1.8.2,Bumps link from 1.6.5 to 1.8.2. - link - link - link  updated-dependencies: - dependency-name: github.com/fsouza/go-dockerclient   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link
1107,Merge pull request #14111 from hashicorp/dependabot/go_modules/github.com/armon/go-metrics-0.4.0,build(deps): bump github.com/armon/go-metrics from 0.3.10 to 0.4.0
1108,Merge pull request #14113 from hashicorp/dependabot/go_modules/github.com/mitchellh/cli-1.1.4,build(deps): bump github.com/mitchellh/cli from 1.1.2 to 1.1.4
1109,deps: fixup dependabot go.mod formatting,
1110,build(deps): bump github.com/armon/go-metrics from 0.3.10 to 0.4.0,Bumps link from 0.3.10 to 0.4.0. - link - link  updated-dependencies: - dependency-name: github.com/armon/go-metrics   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link
1111,build(deps): bump github.com/mitchellh/cli from 1.1.2 to 1.1.4,Bumps link from 1.1.2 to 1.1.4. - link - link  updated-dependencies: - dependency-name: github.com/mitchellh/cli   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link
1112,Merge pull request #14025 from hashicorp/dependabot/go_modules/go.etcd.io/bbolt-1.3.6,build(deps): bump go.etcd.io/bbolt from 1.3.5 to 1.3.6
1113,deps: update cl for go.etcd.io/bbolt,
1114,Merge pull request #14103 from hashicorp/dependabot/go_modules/google.golang.org/grpc-1.48.0,build(deps): bump google.golang.org/grpc from 1.45.0 to 1.48.0
1115,deps: update cl for grpc,
1116,Add notes about DAS being prometheus only (#14040),
1117,build: use consistent arrows in makefile step output,
1118,build(deps): bump google.golang.org/grpc from 1.45.0 to 1.48.0,Bumps link from 1.45.0 to 1.48.0. - link - link  updated-dependencies: - dependency-name: google.golang.org/grpc   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link
1119,cleanup: consul mesh gateway type need not be pointer,This PR changes the use of structs.ConsulMeshGateway to value types instead of via pointers. This will help in a follow up PR where we cleanup a lot of custom comparison code with helper functions instead.
1120,Error typed changed to dismissable global toast (#14099),
1121,Merge pull request #14052 from hashicorp/dependabot/go_modules/github.com/containernetworking/cni-1.1.2,build(deps): bump github.com/containernetworking/cni from 1.0.1 to 1.1.2
1122,Merge pull request #14086 from Morantron/patch-1,Fix typo in /tools/autoscaling
1123,Merge pull request #14088 from hashicorp/b-plan-vault-token,cli: support vault token in plan command
1124,Merge pull request #14089 from hashicorp/f-docker-disable-healthchecks,docker: configuration for disable docker healthcheck
1125,docs: tweak changelog,Co-authored-by: James Rasell link
1126,docs: correctly state RPC port is used by servers and clients. (#14091),
1127,cli: add new acl role subcommands for CRUD role actions. (#14087),
1128,docker: create a docker task config setting for disable built-in healthcheck,This PR adds a docker driver task configuration setting for turning off built-in HEALTHCHECK of a container. References) https://docs.docker.com/engine/reference/builder/#healthcheck https://github.com/docker/engine-api/blob/master/types/container/config.go#L16 Closes #5310 Closes #14068
1129,cli: respect vault token in plan command,This PR fixes a regression where the 'job plan' command would not respect a Vault token if set via --vault-token or $VAULT_TOKEN. Basically the same bug/fix as for the validate command in https://github.com/hashicorp/nomad/issues/13062 Fixes https://github.com/hashicorp/nomad/issues/13939
1130,Merge pull request #14069 from brian-athinkingape/cli-fix-memstats-cgroupsv2,"cli: for systems with cgroups v2, fix alloation resource utilization showing 0 memory used"
1131,Merge pull request #14057 from hashicorp/f-gh-13120-acl-role-rpc-endpoints,"ACL Role: add RPC, HTTP API, and API SDK functionality."
1132,api: add ACL Role API implementation for CRUD actions.,
1133,http: add ACL Role HTTP endpoints for CRUD actions.,These new endpoints are exposed under the /v1/acl/roles and /v1/acl/role endpoints.
1134,rpc: add ACL Role RPC endpoint for CRUD actions.,"New ACL Role RPC endpoints have been created to allow the creation, update, read, and deletion of ACL roles. All endpoints require a management token; in the future readers will also be allowed to view roles associated to their ACL token. The create endpoint in particular is responsible for deduplicating ACL policy links and ensuring named policies are found within state. This is done within the RPC handler so we perform a single loop through the links for slight efficiency."
1135,Update index.mdx,
1136,ci: delete generated files after build (#14070),The generated files are created as part of the final build process but should not present in the repository afterwards.
1137,Merge pull request #14065 from hashicorp/b-fwd-vtoken-validation,cli: forward request for job validation to nomad leader
1138,cli: forward request for job validation to nomad leader,"This PR changes the behavior of 'nomad job validate' to forward the request to the nomad leader, rather than responding from any server. This is because we need the leader when validating Vault tokens, since the leader is the only server with an active vault client."
1139,Merge pull request #14077 from Dgotlieb/template-doc-typo-fix,template doc typo fix
1140,test: add unit tests for namespace matching util (#14078),
1141,doc typo fix,docker and podman don't suck 🤣
1142,Post 1.3.3 release (#14064),  Generate files for 1.3.3 release   Prepare for next release   Merge release 1.3.3 files   Co-authored-by: hc-github-team-nomad-core link
1143,Add changelog 14069,
1144,"cli: for systems with cgroups v2, fix alloation resource utilization showing 0 memory used",
1145,[ui] Fixes a bug for first-time SecVars users on namespaces (#14067),  Fixes a bug for first-time SecVars users on namespaces   Namespace computed dep   Namespace computed dep 
1146,refact:  update serializer log for prefix and namespace (#14062),
1147,"[ui] ""Can Read"" checks on individual Secure Variables (#14020)","  Changelog and lintfix   Changelog removed   Forbidden state on individual variables   CanRead checked on variable path links   Mirage fixture with lesser secure variables access, temporary fix for * namespaces   Read flow acceptance tests   Unit tests for variable.canRead   lintfix   TODO squashed, thanks Jai   explicitly link mirage fixture vars to jobs via namespace   Typofix; delete to read   Linking the original alloc   Percy snapshots uniquely named   Guarantee that the alloc we depend on has tasks within it   Logging variables   Trying to skip delete   Now without create flow either   Dedicated cluster fixture for testing variables   Disambiguate percy calls "
1148,core: add ACL role state schema and functionality. (#13955),This commit includes the new state schema for ACL roles along with state interaction functions for CRUD actions. The change also includes snapshot persist and restore functionality and the addition of FSM messages for Raft updates which will come via RPC endpoints.
1149,build(deps): bump go.etcd.io/bbolt from 1.3.5 to 1.3.6,Bumps link from 1.3.5 to 1.3.6. - link - link  updated-dependencies: - dependency-name: go.etcd.io/bbolt   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link
1150,build(deps): bump github.com/containernetworking/cni from 1.0.1 to 1.1.2,Bumps link from 1.0.1 to 1.1.2. - link - link  updated-dependencies: - dependency-name: github.com/containernetworking/cni   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link
1151,Merge pull request #13798 from hashicorp/dependabot/go_modules/github.com/hashicorp/consul/api-1.13.1,chore(deps): bump github.com/hashicorp/consul/api from 1.13.0 to 1.13.1
1152,Merge pull request #14045 from Abirdcfly/main,fix minor unreachable code caused by t.Fatal
1153,ui:  handle error messages for when filtering doesn't return matches (#14048),  refact: add conditional logic to variables.index   refact: add conditional logic to variables.path   refact: update query selectors in assertions 
1154,fix minor unreachable code caused by t.Fatal,Signed-off-by: Abirdcfly link
1155,Merge pull request #13815 from hashicorp/post-publish-website,Introduces the post publish website event
1156,Merge pull request #14033 from hashicorp/f-plumb-task-names,core: automatically plumb task name into task-level services and checks
1157,Merge pull request #14026 from hashicorp/docs-tweak-readme,docs: minor readme tweaks
1158,Sweep of docs for repeated words; minor edits (#14032),
1159,refact:  namespace glob matching (#14037),  refact: allow namespace glob matching   test:  namespace glob matching 
1160,build(deps): bump tmpl from 1.0.4 to 1.0.5 in /ui (#11212),Bumps link from 1.0.4 to 1.0.5. - link - link  updated-dependencies: - dependency-name: tmpl   dependency-type: indirect ... Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
1161,core: automatically plumb task name into task-level services and checks,
1162,api: use errors.New not fmt.Errorf when error doesn't have format. (#14027),  api: use errors.New not fmt.Errorf when error doesn't have format.   semgrep: add rule to catch fmt.Errorf use without formatting. 
1163,"[ui] ""can list variables"" capability refactor (#13996)",  Check against all your policies' namespaces' secvars' paths' capabilities to see if you can list vars   Changelog and lintfix   Unit tests for list-vars   Removed unused computed dep   Changelog removed 
1164,docs: minor readme tweaks, Remove Circle CI badge (pretty much always misleadingly red) Add MPL license badge Remove link to deprecated google groups
1165,chore(deps): bump github.com/hashicorp/consul/api from 1.13.0 to 1.13.1,Bumps link from 1.13.0 to 1.13.1. - link - link - link  updated-dependencies: - dependency-name: github.com/hashicorp/consul/api   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link
1166,Merge pull request #14019 from hashicorp/deps-update-runc-to-v1.1.3,deps: update runc to v1.1.3
1167,Merge pull request #14023 from hashicorp/nsd-check-body,nsd: add support for setting request body in http checks
1168,nsd: add support for setting request body in http checks,This PR adds support for settings check.body in checks of services making use of Nomad's service provider.
1169,deps: update opencontainers/runc to v1.1.3,
1170,qemu: reduce monitor socket path (#13971),"The QEMU driver can take an optional module configuration which will create a Unix socket to send ACPI shutdown signal to the VM. Unix sockets have a hard length limit and the driver implementation assumed that QEMU versions 2.10.1 were able to handle longer paths. This is not correct, the linked QEMU fix only changed the behaviour from silently truncating longer socket paths to throwing an error. By validating the socket path before starting the QEMU machine we can provide users a more actionable and meaningful error message, and by using a shorter socket file name we leave a bit more room for user-defined values in the path, such as the task name. The maximum length allowed is also platform-dependant, so validation needs to be different for each OS."
1171,allow unhealthy canaries without blocking autopromote (#14001),
1172,template: set default UID/GID to -1 (#13998),"UID/GID 0 is usually reserved for the root user/group. While Nomad clients are expected to run as root it may not always be the case. Setting these values as -1 if not defined will fallback to the pervious behaviour of not attempting to set file ownership and use whatever UID/GID the Nomad agent is running as. It will also keep backwards compatibility, which is specially important for platforms where this feature is not supported, like Windows."
1173,qemu: restore monitor socket path (#14000),"When a QEMU task is recovered the monitor socket path was not being restored into the task handler, so the module configuration was effectively ignored if the client restarted."
1174,docs: remove link to HCL2 module function (#13999),The module HCL2 function was never part of the set of supported functions.
1175,Merge pull request #13978 from hashicorp/f-nsd-check-headers,nsd: add support for setting headers on nomad service http checks
1176,Add Nomad RetryConfig to agent template config (#13907), add Nomad RetryConfig to agent template config
1177,New variable creation adds the first namespace in your available list at variable creation time (#13991),  New variable creation adds the first namespace in your available list at variable creation time   Changelog 
1178,Merge pull request #13670 from hashicorp/ui-memory-cgroupsv2,ui: fix zero memory utilization bug on systems using cgroups v2
1179,cl: update cl for 13670,
1180,Logs removed,
1181,"Taskframe, not frame",
1182,Math time formats with server-returned microsecond time (#13979),
1183,"Consolidate stats tracker consts, and add Usage to tracker test",
1184,refact: pass  instead of (#13973),
1185,Temporary CI test to see missing state,
1186,nsd: add support for setting headers on nomad service http checks,This PR enables setting of the headers block on services registered into Nomad's service provider. Works just like the existing support in Consul checks.
1187,Merge pull request #13953 from hashicorp/f-nsd-check-methods,nsd: add support for specifying check.method in nomad service checks
1188,ui: fix bug where allocation memory usage is always zero,This PR fixes a bug where allocation memory usage is always zero on Linux systems where the kernel is configured to use cgroups v2.
1189,client: enable specifying user/group permissions in the template stanza (#13755),  Adds Uid/Gid parameters to template.   Updated diff_test   fixed order   update jobspec and api   removed obsolete code   helper functions for jobspec parse test   updated documentation   adjusted API jobs test.   propagate uid/gid setting to job_endpoint   adjusted job_endpoint tests   making uid/gid into pointers   refactor   updated documentation   updated documentation   Update client/allocrunner/taskrunner/template/template_test.go   Co-authored-by: Luiz Aoqui link  Update website/content/api-docs/json-jobs.mdx  Co-authored-by: Luiz Aoqui link   propagating documentation change from Luiz   formatting   changelog entry   changed changelog entry   Co-authored-by: Luiz Aoqui link
1190,refact: default dropdown option based on model (#13969),
1191,[CI-only] Use pattern matching for release_branches (#13857),"Description Pattern matching was link so that teams no longer have to explicitly list every branch that should trigger the CRT pipeline. This simplifies release preparation- anytime a new release branch is created, it will produce releasable artifacts and exercise the full pipeline. Testing & Reproduction steps This has been tested in multiple projects since being rolled out. There are no nomad-specific tests that need to be done. Links PR where this functionality was added: https://github.com/hashicorp/crt-orchestrator/pull/51 PR Checklist  [ ] updated test coverage [ ] external facing docs updated [X] not a security concern"
1192,Merge pull request #13968 from hashicorp/b-fix-flakey-tcp-check-test,checks: better goroutine handling for test tcp server
1193,checks: better goroutine handling for test tcp server,This PR hopefully fixes a race condition of our little test tcp server that the check observer is making connections against for test cases. The tcp listener would either startup too slow or exit too soon.
1194,"cli: do not import structs, use API package only. (#13938)",
1195,Merge pull request #13962 from hashicorp/f-update-aws-env,build: update aws env cpu info
1196,docs: concepts for secure variables and workload identity (#13764),"Includes concept docs for secure variables, concept docs for workload identity, and an operations docs for keyring management."
1197,Add stage_publish_base_dir field to csi_plugin stanza of a job (#13919), Allow specification of CSI staging and publishing directory path Add website documentation for stage_publish_dir Replace erroneous reference to csi_plugin.mount_config with csi_plugin.mount_dir Avoid requiring CSI plugins to be redeployed after introducing StagePublishDir
1198,secure vars: enforce ENT quotas (OSS work) (#13951),"Move the secure variables quota enforcement calls into the state store to ensure quota checks are atomic with quota updates (in the same transaction). Switch to a machine-size int instead of a uint64 for quota tracking. The ENT-side quota spec is described as int, and negative values have a meaning as ""not permitted at all"". Using the same type for tracking will make it easier to the math around checks, and uint64 is infeasibly large anyways. Add secure vars to quota HTTP API and CLI outputs and API docs."
1199,Merge pull request #13956 from hashicorp/build-update-golang,build: update to go1.18.5
1200,build: update aws env cpu info,
1201,docs: fix path for quota/usage API (#13952),
1202,build: update to go1.18.5,
1203,Merge branch 'main' into f-gh-13120-sso-umbrella,
1204,nsd: add support for specifying check.method in nomad service checks,Unblock 'check.method' in service validation. Add tests around making sure this value gets plumbed through.
1205,add namespace to path matching algorithm (#13948),  refact:  namespace should be bound property   chore: pass bound namespace property in template   chore: update tests to account for bound namespace refactoring   test: add test coverage for factoring namespace in path matching algo 
1206,e2e: move namespaces test out of legacy framework (#13934),This PR continues work we've started on other test suites to use the native golang test runner instead of the custom framework.
1207,Merge pull request #13944 from hashicorp/deps-update-raft,deps: update raft library
1208,Merge pull request #13941 from hashicorp/deps-update-test,deps: update test package
1209,deps: update raft library,Another attempt at resolving the flakey TestNomad_BootstrapExpect_NonVoter
1210,deps: update stringer version installed to bring generics fix (#13942),
1211,deps: update test package,Upgrading to v0.3.0 gives us the ability to add more context to test case failures. https://github.com/shoenig/test/pull/23
1212,fix flaky module test (#13925),"This test is a fairly trivial test of the agent RPC, but the test setup waits for a short fixed window after the node starts to send the RPC. After looking at detailed logs for recent test failures, it looks like the node registration for the first node doesn't get a chance to happen before we make the RPC call. Use module to give the test more time to run in slower test environments, while allowing it to finish quickly if possible."
1213,test: disable docker OOM detection test on cgroups v2 (#13928),"OOM detection under cgroups v2 is flaky under versions of module before v1.6.3, but our module dependency is transitive on module, who have not yet updated. Disable this test for cgroups v2 environments until we can update the dependency chain."
1214,deps: remove deprecated net/context (#13932),The module package was merged into the stdlib as of go 1.7. Update the imports to use the identical stdlib version. Clean up import blocks for the impacted files to remove unnecessary package aliasing.
1215,testing: fix dropped test errors in command/agent (#13926),
1216,Merge pull request #13923 from hashicorp/docs-website-via-podman,website: enable setting custom tool for launching website dev container
1217,website: enable setting custom tool for launching website dev container,"When working in a podman environment, it's nice to just run the website development container using podman."
1218,Update filesystem.mdx (#13738),fix alloc working directory path
1219,docs: fix placement for module and module (#13892),
1220,ui:  add namespace filter to module (#13618)," ui: add namespace filter feature  ui:  add namespace filtering to variables.index test:  namespace filter refact:  fix action in template ui:  move data fetching and query param logic to ui:  controller query parameter logic ui:  prevent  from forwarding query param ui:  create variables controller refact:  use dependency injection for controlling parent qp chore: clean-up reset in  route chore:  clean-up reset in  route  ui:  add namespace filter to secure var form (#13629)  ui:  update variable factory to accept namespaces refact:  update  api to accept disabled ui:  add namespace setting logic to form refact:  remove debugger refact:  get correct selectors for ui:  move data loading to namespace-filter component chore:  prettify template ui: update factory to handle namespace setting refact:  remove inline styling for grid class   ui:  fix placement of filter in module (#13762)   refact:  conditionally render css class   chore:  remove unused CSS property   refact:  edit path-input class to prevent textarea override   refact:  inject missing store service (#13763)   chore:  patch fixes for when no default namespace is available (#13782)   test:  add tests for namespace filtering conditions (#13816)   test:  add tests for namespace filtering and namespaces appearing in form   patch namespace related issue to saving and querying (#13825)   refact:  use namespace id, not entity   refact:  update adapter to edit request to include qp   ui: early exit if no snapshot   refact:  test passes wrong interface to method   chore:  add missing url update URL builder   refact:  model in  doesn't have absolutePath   Align error message   chore:  update tests (#13905)   chore:  patch brittle tests with better selectors   chore:  update assertion count   Co-authored-by: Phil Renaud link"
1221,changelog: add entry for #13865 and #13866 (#13901),
1222,Merge pull request #13894 from hashicorp/cleanup-remove-darwin-lib,cleanup: remove unneeded darwin lib
1223,cl: add cl about removing lib/darwin library,
1224,Fix link (#13881),
1225,cleanup: remove unneeded darwin lib,
1226,block deleting namespace if it contains a secure variable (#13888),"When we delete a namespace, we check to ensure that there are no non-terminal jobs or CSI volume, which also covers evals, allocs, etc. Secure variables are also namespaces, so extend this check to them as well."
1227,Merge pull request #13882 from hashicorp/cleanup-onupdate-consts,cleanup: use constants for on_update values
1228,block deleting namespaces if the namespace contains a volume (#13880),"When we delete a namespace, we check to ensure that there are no non-terminal jobs, which effectively covers evals, allocs, etc. CSI volumes are also namespaced, so extend this check to cover CSI volumes."
1229,cleanup: use constants for on_update values,
1230,docs: clarify submit-job allows stopping (#13871),
1231,Merge pull request #13715 from hashicorp/dev-nsd-checks,client: add support for checks in nomad services
1232,client: updates from pr feedback,
1233,Merge pull request #13869 from hashicorp/b-uniq-services-2,servicedisco: ensure service uniqueness in job validation
1234,Merge pull request #13870 from hashicorp/exp-fp-optimization,client: use test timeouts for network fingerprinters in dev mode
1235,workload identity: use parent ID for dispatch/periodic jobs (#13748),"Workload identities grant implicit access to policies, and operators will not want to craft separate policies for each invocation of a periodic or dispatch job. Use the parent job's ID as the JobID claim."
1236,search: use secure vars ACL policy for secure vars context (#13788),"The search RPC used a placeholder policy for searching within the secure variables context. Now that we have ACL policies built for secure variables, we can use them for search. Requires a new loose policy for checking if a token has any secure variables access within a namespace, so that we can filter on specific paths in the iterator."
1237,devmode: use minimal network timeouts for network fingerprinters in dev mode,
1238,keyring: use nanos for module in key metadata (#13849),Most of our objects use int64 timestamps derived from module instead of module objects. Switch the keyring metadata to use module for consistency across the API.
1239,secure vars: limit maximum size of variable data (#13743),"To discourage accidentally DoS'ing the cluster with secure variables data, we're providing a very low limit to the maximum size of a given secure variable. This currently matches the limit for dispatch payloads. In future versions, we may increase this limit or make it configurable, once we have better metrics from real-world operators."
1240,docs: keyring commands (#13690),"Document the secure variables keyring commands, document the aliased gossip keyring commands, and note that the old gossip keyring commands are deprecated."
1241,docs: document secure variables server config options (#13695),
1242,Return 429 response on HTTP max connection limit (#13621),"Return 429 response on HTTP max connection limit. Instead of silently closing the connection, return a module HTTP response with a helpful error message to aid debugging when the connection limit is unintentionally reached. Set a 10-millisecond write timeout and rate limiter for connection-limit 429 response to prevent writing the HTTP response from consuming too many server resources. Add module counting the number of HTTP connections exceeding concurrency limit."
1243,jobspec: ensure service uniqueness in job validation,
1244,Add a title to the evals route (#13865),
1245,Reorder the select boxes on evals so namespaces are first (#13866),  Reorder the select boxes on evals so namespaces are first   Wrap evals buttons in a button-bar for consistent styling and spacing 
1246,cleanup: track task names and providers using set,
1247,"Change path-linked-variables to start with nomad/jobs/, instead of jobs/ (#13862)","  Support pathLinkedEntities starting with nomad/jobs/ instead of jobs/   links from jobs/groups/tasks to variables now look for nomad/jobs/ instead of jobs/   Tests updated to reflect nomad/jobs/ change   Acceptance test for disallowing nomad/foo/, and hint text updates   Defensive logic in case path not yet set   Allow exactly nomad/jobs as a variable path "
1248,Merge pull request #13859 from hashicorp/exp-use-set,cleanup: example refactoring out map[string]struct{} using set.Set
1249,cleanup: tweaks from cr feedback,
1250,acl: enable configuration and visualisation of token expiration for users  (#13846),  api: add ACL token expiry params to HTTP API   cli: allow setting and displaying ACL token expiry 
1251,cleanup: example refactoring out map[string]struct{} using set.Set,This PR is a little demo of using github.com/hashicorp/go-set to replace the use of map[T]struct{} as a make-shift set.
1252,secure vars: rename automatically accessible vars path for jobs (#13848),"Tasks are automatically granted access to variables on a path that matches their workload identity, with a well-known prefix. Change the prefix to module to allow for future prefixes like module or module. Reserve the prefix by emitting errors during validation."
1253,build(deps): bump @percy/cli from 1.1.0 to 1.6.1 in /ui (#13724),"Bumps link from 1.1.0 to 1.6.1. - link - link  updated-dependencies: - dependency-name: ""@percy/cli""   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link"
1254,docs: update Autoscaler AWS plugin with new ws_credential_provider config (#13779),
1255,core: add expired token garbage collection periodic jobs. (#13805),Two new periodic core jobs have been added which handle removing expired local and global tokens from state. The local core job is run on every leader; the global core job is only run on the leader within the authoritative region.
1256,Prettier-applied lint rules for secure variables test (#13841),
1257,docs: job-specification: Explain that priority has no effect on run order (#13835),Makes the issues from #9845 and #12792 less surprising to the user.
1258,word typo digestible (#13772),
1259,Visual Diff tests for Secure Variables (#13689),  A smattering of snapshot tests for Secure Variables   Percy imports and linting 
1260,fsm: one-time token expiration should be deterministic (#13737),"When applying a raft log to expire ACL tokens, we need to use a timestamp provided by the leader so that the result is deterministic across servers. Use leader's timestamp from RPC call"
1261,Merge pull request #13813 from hashicorp/docs-move-checks,docs: move checks into own page
1262,introduces the post publish website event,
1263,docs: move checks into own page,"This PR creates a top-level 'check' page for job-specification docs. The content for checks is about half the content of the service page, and is about to increase in size when we add docs about Nomad service checks. Seemed like a good idea to just split the checks section out into its own thing (e.g. check_restart is already a topic). Doing the move first lets us backport this change without adding Nomad service check stuff yet. Mostly just a lift-and-shift but with some tweaked examples to de-emphasize the use of script checks."
1264,docs: ACL policy spec reference (#13787),"The ""Secure Nomad with Access Control"" guide provides a tutorial for bootstrapping Nomad ACLs, writing policies, and creating tokens. Add a reference guide just for the ACL policy specification."
1265,Merge pull request #13786 from hashicorp/b-metrics-for-classless-blocked-evals,metrics: classless blocked evals get metrics
1266,docs: update Podman docs to v0.4.0 (#13783),
1267,Improve metrics reference documentation (#13769),  docs: tighten up parameterized job metrics docs   docs: improve alloc status descriptions   Remove module as it doesn't exist.
1268,packaging: restart nomad service after package update (#13773),
1269,metrics: even classless blocked evals get metrics,This PR fixes a bug where blocked evaluations with no class set would not have metrics exported at the dc:class scope. Fixes #13759
1270,keyring: fix flake in replication-after-election test (#13749),"The test for simulating a key rotation across leader elections was flaky because we weren't waiting for a leader election and was checking the server configs rather than raft for which server was currently the leader. Fixing the flake revealed a bug in the test that we weren't ensuring the new leader was running its own replication, so it wouldn't pick up the key material from the previous follower."
1271,secure vars: updates should reduce quota tracking if smaller (#13742),"When secure variables are updated, we were adding the update to the existing quota tracking without first checking whether it was an update to an existing variable. In that case we need to add/subtract only the difference between the new and existing quota usage."
1272,Merge pull request #13771 from hashicorp/e2e-nsd-simple-lb,e2e: add nsd simple load balancing test
1273,acl: add token expiry checking to ACL token resolution. (#13756),"This commit adds basic expiry checking when performing ACL token resolution. This expiry checking is local to each server and does not at this time take into account potential time skew on server hosts. A new error message has been created so clients whose token has expired get a clear message, rather than a generic token not found. The ACL resolution tests have been refactored into table driven tests, so additions are easier in the future."
1274,e2e: add nsd simple load balancing test,
1275,docs: clarify blocked_evals metrics (#13751),"Related to #13740  blocked_evals.total_blocked is the number of evals blocked for any   reason blocked_evals.total_quota_limit is the number of evals blocked by   quota limits, but critically: their resources are not counted in the   cpu/memory"
1276,search: refactor OSS/ENT split for ACL checks (#13760),The split between OSS/ENT in ACL checks for the Search RPC has a lot of repeated code that results in merge conflicts. Move most of the logic into the shared code so that we can call out to thin functions for ENT checks.
1277,Merge pull request #13752 from hashicorp/post-1.3.2-release,Post 1.3.2 release
1278,Merge pull request #13716 from hashicorp/docs-update-consul-warning,docs: remove consul 1.12.0 warning
1279,keyring: upserting key metadata in FSM must be deterministic (#13733),
1280,Merge release 1.3.2 files,
1281,Prepare for next release,
1282,Generate files for 1.3.2 release,
1283,tests: add a space between node name and timestamp (#13750),
1284,chore(deps): bump github.com/mitchellh/mapstructure from 1.4.3 to 1.5.0 in /api (#12725), chore(deps): bump github.com/mitchellh/mapstructure in /api  Bumps link from 1.4.3 to 1.5.0. - link - link - link  updated-dependencies: - dependency-name: github.com/mitchellh/mapstructure   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link  Also bump mapstructure in main go.mod  Co-authored-by: dependabot[bot] link Co-authored-by: Michael Schurter link
1285,http: only log alloc/exec errors when non-nil (#13730),
1286,13553 secure vars linked from jobs (#13708),  Vars from job prototype   singular linked variable from job   Links from task groups and tasks to their variables incl periodic and parameterized   Lintfix   Make sure they can list em before we list em   Tests from job/group/task to var 
1287,"core: add ACL token expiry state, struct, and RPC handling. (#13718)","The ACL token state schema has been updated to utilise two new indexes which track expiration of tokens that are configured with an expiration TTL or time. A new state function allows listing ACL expired tokens which will be used by internal garbage collection. The ACL endpoint has been modified so that all validation happens within a single function call. This is easier to understand and see at a glance. The ACL token validation now also includes logic for expiry TTL and times. The ACL endpoint upsert tests have been condensed into a single, table driven test. There is a new token canonicalize which provides a single place for token canonicalization, rather than logic spread in the RPC handler."
1288,build(deps): bump github.com/gorilla/websocket from 1.4.2 to 1.5.0 in /api (#12075), build(deps): bump github.com/gorilla/websocket in /api  Bumps link from 1.4.2 to 1.5.0. - link - link  updated-dependencies: - dependency-name: github.com/gorilla/websocket   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link  deps: also bump websocket dep in main binary  Co-authored-by: dependabot[bot] link Co-authored-by: Michael Schurter link
1289,build(deps): bump github.com/docker/distribution (#12246),Bumps link from 2.7.1+incompatible to 2.8.1+incompatible. - link - link  updated-dependencies: - dependency-name: github.com/docker/distribution   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
1290,Add semgrep rule to catch non-determinism in FSM (#13725),See module in rule for details. Co-authored-by: Luiz Aoqui link
1291,Track plan rejection history and automatically mark clients as ineligible (#13421),"Plan rejections occur when the scheduler work and the leader plan applier disagree on the feasibility of a plan. This may happen for valid reasons: since Nomad does parallel scheduling, it is expected that different workers will have a different state when computing placements. As the final plan reaches the leader plan applier, it may no longer be valid due to a concurrent scheduling taking up intended resources. In these situations the plan applier will notify the worker that the plan was rejected and that they should refresh their state before trying again. In some rare and unexpected circumstances it has been observed that workers will repeatedly submit the same plan, even if they are always rejected. While the root cause is still unknown this mitigation has been put in place. The plan applier will now track the history of plan rejections per client and include in the plan result a list of node IDs that should be set as ineligible if the number of rejections in a given time window crosses a certain threshold. The window size and threshold value can be adjusted in the server configuration. To avoid marking several nodes as ineligible at one, the operation is rate limited to 5 nodes every 30min, with an initial burst of 10 operations."
1292,client: add support for checks in nomad services,"This PR adds support for specifying checks in services registered to the built-in nomad service provider. Currently only HTTP and TCP checks are supported, though more types could be added later."
1293,core: merge reserved_ports into host_networks (#13651),"Fixes #13505 This fixes #13505 by treating reserved_ports like we treat a lot of jobspec settings: merging settings from more global stanzas (client.reserved.reserved_ports) ""down"" into more specific stanzas (client.host_networks[].reserved_ports). As discussed in #13505 there are other options, and since it's totally broken right now we have some flexibility: Treat overlapping reserved_ports on addresses as invalid and refuse to start agents. However, I'm not sure there's a cohesive model we want to publish right now since so much 0.9-0.12 compat code still exists! We would have to explain to folks that if their -network-interface and host_network addresses overlapped, they could only specify reserved_ports in one place or the other?! It gets ugly. Use the global client.reserved.reserved_ports value as the default and treat host_network[].reserverd_ports as overrides. My first suggestion in the issue, but @groggemans made me realize the addresses on the agent's interface (as configured by -network-interface) may overlap with host_networks, so you'd need to remove the global reserved_ports from addresses shared with a shared network?! This seemed really confusing and subtle for users to me. So I think ""merging down"" creates the most expressive yet understandable approach. I've played around with it a bit, and it doesn't seem too surprising. The only frustrating part is how difficult it is to observe the available addresses and ports on a node! However that's a job for another PR."
1294,build(deps): bump github.com/hashicorp/consul/sdk from 0.8.0 to 0.9.0 (#12007),Bumps link from 0.8.0 to 0.9.0. - link - link - link  updated-dependencies: - dependency-name: github.com/hashicorp/consul/sdk   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
1295,build(deps): bump github.com/docker/go-units from 0.3.3 to 0.4.0 in /api (#11519), build(deps): bump github.com/docker/go-units from 0.3.3 to 0.4.0 in /api  Bumps link from 0.3.3 to 0.4.0. - link - link  updated-dependencies: - dependency-name: github.com/docker/go-units   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link  Tidy go.sum  Co-authored-by: dependabot[bot] link Co-authored-by: Michael Schurter link
1296,deps: run dependabot weekly (#13723),
1297,SV: CLI: var list command (#13707), SV CLI: var list Fix wildcard prefix filtering  Co-authored-by: Tim Gross link
1298,secure vars: fix enterprise test by upserting the namespace (#13719),"In OSS we can upsert an allocation without worrying about whether that alloc is in a namespace that actually exists, but in ENT that upsert will add to the namespace's quotas. Ensure we're doing so in this secure variables RPC test to fix the test breaking in the ENT repo."
1299,SV: fixes for namespace handling (#13705), ACL check namespace value in SecureVariable Error on wildcard namespace
1300,docs: remove consul 1.12.0 warning,
1301,ci: remove any other versions of Node installed (#13706),Remove other versions of Node installed in nvm to avoid issues where the CI runner uses the wrong one.
1302,server: add ACL token expiration config parameters. (#13667),"This commit adds configuration parameters to control ACL token expirations. This includes both limits on the min and max TTL expiration values, as well as a GC threshold for expired tokens."
1303,Remove namespace cache (#13679),
1304,docs: rename Internals to Concepts (#13696),
1305,[CI-only] Support fossa scanning (#13649),
1306,"Adds sort, show/hide, and copy functionality to Variable pages (#13680)",  Sortable header added to variable page   Showhide and copyable 
1307,Allow wildcard for Evaluations API (#13530),"  Failing test and TODO for wildcard   Alias the namespace query parameter for Evals   eval: fix list when using ACLs and * namespace   Apply the same verification process as in job, allocs and scaling policy list endpoints to handle the eval list when using an ACL token with limited namespace support but querying using the module wildcard namespace.   changelog: add entry for #13530   ui: set namespace when querying eval   Evals have a unique UUID as ID, but when querying them the Nomad API still expects a namespace query param, otherwise it assumes module. Co-authored-by: Luiz Aoqui link"
1308,changelog: add entry for #13659 (#13691),
1309,Merge pull request #13000 from hashicorp/secure-variables,Secure Variables (feature branch)
1310,docs: move operator subcommands under their own trees (#13677),The sidebar navigation tree for the module sub-sub commands is getting cluttered and we have a new set of commands coming to support secure variables keyring as well. Move these all under their own subtrees.
1311,core job for secure variables re-key (#13440),"When the module flag is passed for key rotation, we kick off a core job to decrypt and re-encrypt all the secure variables so that they use the new key."
1312,Link Variables to Jobs (#13627),"  Related entities scaffolded   Added hint on edit   Re-classic'd   Dont create entities when path goes beyond task level   only show the related entities hint for new vars, not edited ones   Unit tests for pathLinkedEntities   Acceptance tests for linked entities   Add hint on creation   Will be vs Is on @new boolean flag   Link styles and namespaces on links   Unused component class   Delog   Defensive shouldShowLinked   Properly instantiating the accessibilty check test "
1313,Handling createTime and modifyTime through serialization now that they contain nanoseconds (#13620),
1314,SV: GO API: Secure Variables Go API (#13502),
1315,ui:  create variable permission logic (#13447),  ui:  inject router service into Variable ability to compute path   ui:  test create secure variable ability   refact:  update templates to properly check create ability   chore:  update token factory to enable 1 path to have create ability   refact:  remove router service injection for path variable   refact:  update mirage factory for edit and delete perms on  path for testing   ui:  handle path matching (#13474)   test:  write specifications for nearestPath computation   ui:  write logic for getting all paths   ui:  nearestPathMatching algorithm   test:  nearestPathMatching algorithm test   ui:  handle namespace filtering for capabilities check (#13475)   ui: add namespace handling   refact:  add logical OR operator to handle unstructured  object.   ui:  acceptance test for create flow in secure variables (#13500)   test:  write happy path test for creating variable   refact:  add missing data-test attributes   test:  sad path for disabled button   fix:  move comment in  file   test:  acceptance test for editing a variable (#13529)   refact:  add data-test variable   test:  happy path and sad path for edit flow   refact:  update test language to say disabled   ui:  glob matching algorithm (#13533)   ui: compute length difference (#13542)   ui: compute length difference   refact:  use glob matching and sorting algos in module (#13544)   refact:  use const in compute   ui:  smallest difference logic   refact:  use glob matching and sorting algo in _nearestPathPath helper   ui:  add can edit to variable capabilities (#13545)   ui:  create edit capabilities getter   ui:  add ember-can check for edit button   refact:  update test to mock edit capabilities in policy   fix:  remove unused var   Edit capabilities for variables depend on Create   Co-authored-by: Phil Renaud link Co-authored-by: Phil Renaud link Co-authored-by: Phil Renaud link   refact:  update token factory (#13596)   refact:  update rulesJSON in token factory to reflect schema update   refact:  update capability names (#13597)   refact:  update rules to match rulesJSON   refact:  update create to write   ui:  add module permissions (#13598)   refact:  update rulesJSON in token factory to reflect schema update   refact:  update rules to match rulesJSON   refact:  update create to write   ui:  add canDestroy capability   test:  unit test for canDestroy   ui:  add permission check to template   test:  acceptance test for delete flow   refact:  update test to use correct capability name   refact:  update tests to reflect rulesJSON schema change   ui:  update path matching logic to account for schema change (#13605)   refact:  update path matching logic   refact:  update tests to reflect rulesJSON change   Co-authored-by: Phil Renaud link Co-authored-by: Phil Renaud link
1316,Edit Secure Variables as JSON (#13461),  Toying with insert and update helpers before translation func   Working prototype that lets you switch between json and tabular   No longer add the bonus items row in json mode   Trimmed the ivy from the codemirror (#13503)   Trimmed the ivy from the codemirror   editedJSONItems removal   De-debugger   Replaced other instances of IvyCodeMirror throughout the app (#13528)   Replaced other instances of IvyCodeMirror throughout the app   PR requests for codemirror modifier   Screen reader setting as param   Trying a simpler codemirror test helper   Lint removal   Screen Reader Label added for a11y   JSONViewer cleanup   JSON editor added to /new and all variables stringified before save or translate   Give users a foothold when editing an empty item in JSON mode   Copy the empty KV   No duplicate keys in KV   Better handling of cursor snapping in json edit field   Catch formatting errors on the fly   Basic tests for JSON to Table and Table to JSON in form 
1317,SV: CAS: Implement Check and Set for Delete and Upsert (#13429),  SV: CAS  Implement Check and Set for Delete and Upsert Reading the conflict from the state store Update endpoint for new error text Updated HTTP api tests Conflicts to the HTTP api    SV: structs: Update SV time to UnixNanos  update mock to UnixNano; refactor    SV: encrypter: quote KeyID in error  SV: mock: add mock for namespace w/ SV
1318,implement quota tracking for secure variablees (#13453),We need to track per-namespace storage usage for secure variables even in Nomad OSS so that a cluster can be seamlessly upgraded from OSS to ENT without having to re-calculate quota usage. Provide a hook in the upsert RPC for enforcement of quotas in ENT. This will be a no-op in Nomad OSS.
1319,additional ACL Policy tests (#13464),"This changeset includes some additional unit tests for secure variables ACL policies, so that we have explicit coverage of edge cases we're discussing with the UI folks."
1320,secure variable server configuration (#13307),Add fields for configuring root key garbage collection and automatic rotation. Fix the keystore path so that we write to a tempdir when in dev mode.
1321,Secure Variables: JSON view (#13439),  JSON view init   Overeager config history reverted   Set as query parameter   border added to copy button   More robust stringifyObject helper   Testing for stringify-object helper 
1322,dx:  update module logic and token generation for secure var dev environment (#13438),  ui:  add logic for create permission computed property   ui:  update token factory and variable ability to simulate create permissions for dev env 
1323,Append an empty item when editing an existing Secure Variable (#13436),  Did-insert modifier to add an extra row when editing   Defensive logic on model existing   Defensive pattern on copy keyValues 
1324,Throw an error if you try to save a Secure Variable with no items (#13424),  Error thrown if you have no KVs on save   Acceptance tests for flash messages and no-key-value adds   Post-hoc accounting for new variable path routing   Trim on key before validating it as existing 
1325,core job for key rotation (#13309),"Extend the GC job to support periodic key rotation. Update the GC process to safely support signed workload identity. We can't GC any key used to sign a workload identity. Finding which key was used to sign every allocation will be expensive, but there are not that many keys. This lets us take a conservative approach: find the oldest live allocation and ensure that we don't GC any key older than that key."
1326,move gossip keyring command to their own subcommands (#13383),Move all the gossip keyring and key generation commands under module subcommands to align with the new module subcommands. Deprecate the module and module commands.
1327,Secure Variables: show file metadata on list pages (#13423),  Add modified times and namespaces to layout   Undo typing change   Post-hoc accounting for new variable path routing 
1328,fix blocking query for module RPC (#13384),The blocking query for module appended the keys for each pass through the blocking query to the response. This results in mulitple copies of keys in the response. Overwrite the module field on each pass through the blocking query to ensure we only get the expected page of responses.
1329,secure variables ACL policies (#13294),"Adds a new policy block inside namespaces to control access to secure variables on the basis of path, with support for globbing. Splits out VerifyClaim from ResolveClaim. The ServiceRegistration RPC only needs to be able to verify that a claim is valid for some allocation in the store; it doesn't care about implicit policies or capabilities. Split this out to its own method on the server so that the SecureVariables RPC can reuse it as a separate step from resolving policies (see next commit). Support implicit policies based on workload identity"
1330,implement Encrypt/Decrypt methods of encrypter (#13375),"The module method generates an appropriately-sized nonce and uses that buffer as the prefix for the ciphertext. This keeps the ciphertext and nonce together for decryption, and reuses the buffer as much as possible without presenting the temptation to reuse the cleartext buffer owned by the caller. We include the key ID as the ""additional data"" field that's used as an extra input to the authentication signature, to provide additional protection that a ciphertext originated with that key. Refactors the locking for the keyring so that the public methods are generally (with one commented exception) responsible for taking the lock and then inner methods are assumed locked."
1331,Implement HTTP search API for Variables (#13257), Add Path only index for SecureVariables Add GetSecureVariablesByPrefix; refactor tests Add search for SecureVariables Add prefix search for secure variables
1332,ui:  make eye toggles only toggle on/off for their respective row (#13406),  chore:  update tests to handle invidual toggle responsibility   chore:  prettify secure-variable-form template   ui:  extract input group markup into seperate component 
1333,ui:  update  component api to accept callback fns to be fired on cancel/prompt (#13414),  ui:  update  component api to accept callback fns to be fired on cancel/prompt   refact:  cancel callback should fire with outside click handler not on idle   refact:  rename action to be more specific 
1334,Toast-style global notification state (#13341),  toast style notification init   Notificatino styles and messaging for variable save   pre-PR cleanup   Typo fix and 5sec timeout   Prevent text from overlapping the close button 
1335,Path Tree compaction refactor (#13415),  Bones of a just-in-time compaction pathTree   wooo got compaction going in sub-ms times   PR cleanup   Path compaction tests   lint fix to equal instead of .ok()   Name prop specifically being equality checked 
1336,Secure Variables: Seperate Encrypted and Decrypted structs (#13355),This PR splits SecureVariable into SecureVariableDecrypted and SecureVariableEncrypted in order to use the type system to help verify that cleartext secret material is not committed to file.  Make Encrypt function return KeyID Split SecureVariable  Co-authored-by: Tim Gross link
1337,keyring CLI: refactor to use subcommands (#13351),Split the flag options for the module into their own subcommands. The gossip keyring CLI will be similarly refactored and the old version will be deprecated.
1338,Secure Variables form validation improvements (#13335),  Validation tests for secure variables form: duplicate path error   Validation for dot in key name   Defensive pattern on copy keyValues 
1339,variable index header and deletion hook (#13302),"  variable index header and deletion hook   Some visual improvements to edit header and back button   Mirage fixtures for variables   Deletion flow test   Account for disabled state of add-more button   Transition destination changes after design chat   Simplified parent folder path by adding to variable model   Lint cleanup   test update to reflect path redirect on delete   No longer have to re-traverse to a deleted var folder after deletion, tests updated "
1340,workload identity (#13223),"In order to support implicit ACL policies for tasks to get their own secrets, each task would need to have its own ACL token. This would add extra raft overhead as well as new garbage collection jobs for cleaning up task-specific ACL tokens. Instead, Nomad will create a workload Identity Claim for each task. An Identity Claim is a JSON Web Token (JWT) signed by the server’s private key and attached to an Allocation at the time a plan is applied. The encoded JWT can be submitted as the X-Nomad-Token header to replace ACL token secret IDs for the RPCs that support identity claims. Whenever a key is is added to a server’s keyring, it will use the key as the seed for a Ed25519 public-private private keypair. That keypair will be used for signing the JWT and for verifying the JWT. This implementation is a ruthlessly minimal approach to support the secure variables feature. When a JWT is verified, the allocation ID will be checked against the Nomad state store, and non-existent or terminal allocation IDs will cause the validation to be rejected. This is sufficient to support the secure variables feature at launch without requiring implementation of a background process to renew soon-to-expire tokens."
1341,Notify a user if they try to make a variable with an existing path (#13278),"  Notify a user if they try to make a variable with an existing path   Stylize error fade   Bugfix: if you click the dupe link to a variable you havent previously loaded, you lack its keyvalues   rename and typefix for duplicate path warning "
1342,Disable path input when model is not new (#13273),  Disable path input when model is not new   isDisabled tests for secure variables path 
1343,keyring command line (#13169),Co-authored-by: Charlie Voiselle link
1344,Don't write a SecureVariable with no Items (#13258),
1345,keyring replication (#13167),"Replication for the secure variables keyring. Because only key metadata is stored in raft, we need to distribute key material out-of-band from raft replication. A goroutine runs on each server and watches for changes to the module. When a new key is received, attempt to fetch the key from the leader. If the leader doesn't have the key (which may happen if a key is rotated right before a leader transition), try to get the key from any peer."
1346,Secure Variables: Build a path tree and traverse it at /variables/*path (#13202),  Recursive trie-building with variable paths   tree structure applied to new path routes and a new util class   Breadcrumbs for SV paths and prompt when nothing exists at a path   Lint and test cleanup   Pre-review cleanup   lintfix   Abstracted pathtree each-ins into a new component class   Path tree component styles   Types added and PR feedback addressed   Path tree to variable paths   Slightly simpler path QP mods   More pr feedback handling   Trim moved into a function on variable model   Traversal and compaction tests for PathTree   Trim Path tests   Variable-paths component tests   Lint fixup for tests 
1347,core job for root key GC (#13199),Inactive and unused keys older than a threshold will be periodically garbage collected.
1348,remove end-user algorithm selection (#13190),"After internal design review, we decided to remove exposing algorithm choice to the end-user for the initial release. We'll solve nonce rotation by forcing rotations automatically on key GC (in a core job, not included in this changeset). Default to AES-256 GCM for the following criteria:  faster implementation when hardware acceleration is available FIPS compliant implementation in pure go post-quantum resistance  Also fixed a bug in the decoding from keystore and switched to a  harder-to-misuse encoding method."
1349,provide state store query for variables by key ID (#13195),The core jobs to garbage collect unused keys and perform full key rotations will need to be able to query secure variables by key ID for efficiency. Add an index to the state store and associated query function and test.
1350,bootstrap keyring (#13124),"When a server becomes leader, it will check if there are any keys in the state store, and create one if there is not. The key metadata will be replicated via raft to all followers, who will then get the key material via key replication (not implemented in this changeset)."
1351,Secure Variables UI: /variables/new and /variables/*path (#13069),"  variables.new initialized   Hacky but savey   Variable wildcard route and multiple creatable at a time   multiple KVs per variable   PR Prep cleanup and lintfix   Delog   Data mocking in mirage for variables   Linting fixes   Re-implement absent params   Adapter and model tests   Moves the path-as-id logic to a serializer instead of adapter   Classic to serializer and lint cleanup   Pluralized save button (#13140)   Autofocus modifier and better Add More button UX (#13145)   Secure Variables: show/hide functionality when adding new values (#13137)   Flight Icons added and show hide functionality   PR cleanup   Linting cleanup   Position of icon moved to the right of input   PR feedback addressed   Delete button and stylistic changes to show hide   Hmm, eslint doesnt like jsdoc-usage as only reason for import   More closely match the button styles and delete test   Simplified new.js model   Secure Variables: /variables/*path/edit route and functionality (#13170)   Variable edit page init   Significant change to where we house model methods   Lintfix   Edit a variable tests   Remove redundant tests   Asserts expected   Mirage factory updated to reflect model state "
1352,"Secure Variables: Variables - State store, FSM, RPC (#13098)", Secure Variables: State Store Secure Variables: FSM Secure Variables: RPC Secure Variables: HTTP API  Co-authored-by: Tim Gross link
1353,keystore serialization (#13106),"This changeset implements the keystore serialization/deserialization:  Adds a JSON serialization extension for the module struct, along with a metadata stub. When we serialize RootKey to the on-disk keystore, we want to base64 encode the key material but also exclude any frequently-changing fields which are stored in raft. Implements methods for loading/saving keys to the keystore. Implements methods for restoring the whole keystore from disk. Wires it all up with the module RPC handlers and fixes up any fallout on tests."
1354,keyring HTTP API (#13077),
1355,keyring RPC handlers (#13075),"Implement the upsert, list, delete, and rotate RPC handlers for the secure variables keyring. Operations on the keyring itself are still stubbed out."
1356,keyring state store operations (#13016),"Implement the basic upsert, list, and delete operations for module needed by the Keyring RPCs. This changeset also implements two convenience methods module and module which are useful for testing but also will be needed to implement the rest of the RPCs."
1357,Secure Variables UI: Router setup and /variables/index route + guards (#12967),  Route init   Bones of a mirage-mocked secure variables policy   Functinoing policy for list vars   Delog and transition on route   Basic guard test   Page guard tests for secure variables   Cleanup and unit tests for variables ability   Linter cleanup   Set expectations for test assertions   PR feedback addressed   Read label changed to View per suggestion 
1358,Provide mock secure variables implementation (#12980), Add SecureVariable mock Add SecureVariableStub Add SecureVariable Copy and Stub funcs
1359,secure variables: initial state store (#12932),"Implement the core SecureVariable and RootKey structs in memdb, provide the minimal skeleton for FSM, and a dummy storage and keyring RPC endpoint."
1360,"[bugfix, ui] Allow running jobs from a namespace-limited token (#13659)",  Allow running jobs from a namespace-limited token   qpNamespace cleanup   Looks like parse can deal with a * namespace   A little diff cleanup   Defensive destructuring   Removing accidental friendly-fire on can-scale   Testfix: Job run buttons from jobs index   Testfix: activeRegion job adapter string   Testfix: unit tests for job abilities correctly reflect the any-namespace rule   Testfix: job editor test looks for requests with namespace applied on plan 
1361,snapshot restore-from-archive streaming and filtering (#13658),"Stream snapshot to FSM when restoring from archive The module helper decompresses the snapshot archive to a temporary file before reading it into the FSM. For large snapshots this performs a lot of disk IO. Stream decompress the snapshot as we read it, without first writing to a temporary file. Add bexpr filters to the module helper. The operator can pass these as module arguments to module (and other commands in the future) to include only desired data when reading the snapshot."
1362,agent: test full object when performing test config parse. (#13668),
1363,cli: ensure node status and drain use correct cmd name. (#13656),
1364,fix hcl formatting,
1365,e2e: add terraform init commands to readme doc. (#13655),
1366,Remove test trigger,
1367,ignore b0a20b4dc965a38b0c843f47c16685ccad7439da (#13648),Mainly an excuse to experiment with .git-blame-ignore-revs
1368,Merge pull request #13644 from hashicorp/docs-max-kill-timeout,docs: upgrade guide for client max_kill_timeout
1369,docs: move upgrade docs for max_client_timeout,Co-authored-by: Luiz Aoqui link
1370,docs: upgrade guide for client max_kill_timeout,
1371,Merge pull request #13630 from hashicorp/b-critical-typo,boltdd: fixup typo and use unreachable assertion
1372,Merge pull request #13626 from hashicorp/b-client-max-kill-timeout,client: enforce max_kill_timeout client configuration
1373,state: fix eval list by prefix with * namespace (#13551),
1374,Support fossa scanning,
1375,cli: improve output of eval commands (#13581),"Use the same output format when listing multiple evals in the module command and when module matches more than one eval. Include the eval namespace in all output formats and always include the job ID in module since, even module evals are related to a job. Add Node ID to the evals table output to help differentiate module evals. Co-authored-by: James Rasell link"
1376,driver/docker: Don't pull InfraImage if it exists (#13265),Co-authored-by: James Rasell link
1377,terraform: update installed versions of HashiCorp tools. (#13635),
1378,Merge pull request #13631 from hashicorp/docs-service-rwh,docs: add docs for simple load balancing nomad services
1379,docs: fixup from cr comments,
1380,docs: add docs for simple load balancing nomad services,This PR adds a section to template docs for simple load balancing with nomad servicse.
1381,helpers: use unreachable assertion,
1382,helpers: fix critical typo,
1383,core: emit node evals only for sys jobs in dc (#12955),"Whenever a node joins the cluster, either for the first time or after being module, we emit a evaluation for every system job to ensure all applicable system jobs are running on the node. This patch adds an optimization to skip creating evaluations for system jobs not in the current node's DC. While the scheduler performs the same feasability check, skipping the creation of the evaluation altogether saves disk, network, and memory."
1384,client: enforce max_kill_timeout client configuration,"This PR fixes a bug where client configuration max_kill_timeout was not being enforced. The feature was introduced in 9f44780 but seems to have been removed during the major drivers refactoring. We can make sure the value is enforced by pluming it through the DriverHandler, which now uses the lesser of the task.killTimeout or client.maxKillTimeout. Also updates Event.SetKillTimeout to require both the task.killTimeout and client.maxKillTimeout so that we don't make the mistake of using the wrong value - as it was being given only the task.killTimeout before."
1385,api: apply new ACL check for wildcard namespace (#13608),api: apply new ACL check for wildcard namespace In #13606 the ACL check was refactored to better support the all namespaces wildcard (module). This commit applies the changes to the jobs and alloc list endpoints.
1386,api: refactor ACL check for namespace wildcard (#13606),Improve how the all namespaces wildcard (module) is handled when checking ACL permissions. When using the wildcard namespace the module would return false since it looks for a namespace called module to match. This commit changes this behavior to return module when the queried namespace is module and the token allows the operation in any namespace. Actual permission must be checked per object. The helper function module returns a function that can be used to make this verification.
1387,Merge pull request #13586 from hashicorp/build-bump-circleci-macos,build: bump circleci macos version
1388,query for leader in module command (#13472),"The module command doesn't output the leader anywhere in the output, which adds extra burden to offline debugging (away from an ongoing incident where you can simply check manually). Query the module API but degrade gracefully."
1389,Fix Testutil for delve debugging API tests (#13589),
1390,core: allow deleting of evaluations (#13492),  core: add eval delete RPC and core functionality.   agent: add eval delete HTTP endpoint.   api: add eval delete API functionality.   cli: add eval delete command.   docs: add eval delete website documentation. 
1391,demo/docs: update demo of Kadalu CSI Plugin (#13610),ref: kadalu/kadalu#817 Signed-off-by: Leela Venkaiah G link
1392,core: allow pausing and un-pausing of leader broker routine (#13045),  core: allow pause/un-pause of eval broker on region leader.   agent: add ability to pause eval broker via scheduler config.   cli: add operator scheduler commands to interact with config.   api: add ability to pause eval broker via scheduler config   e2e: add operator scheduler test for eval broker pause.   docs: include new opertor scheduler CLI and pause eval API info. 
1393,doc: explain permissions for Vault sys/capabilties-self,
1394,docs: typo on command word (#13582),
1395,docs: Add 'serial' attribute to usb driver (#13547),
1396,[ui] Fix a bug where redirects after planning/editing a job didn't include namespace (#13588),  Job editing and planning handles namespace as part of ID instead of queryParam   Changelog added   Tests updated to reflect new namespace redirects 
1397,build: bump circleci macos version,Got an email from Circle about removing the version we are currently using; bump to the latest stable version
1398,Merge pull request #13548 from hashicorp/f-bbolt-helpers,boltdd: add iterate and prefix deletion helpers
1399,boltdd: add iterate and prefix deletion helpers,This PR adds 2 helper functions to the helpers/bbolt package   Iterate: iterate every key in a bucket. Automatically decodes the msg pack value into the provided value argument.   DeletePrefix: deletes every key in a bucket starting with a given prefix. Manages the wrapper's hash values accordingly. Uses a cursor & sync to operate efficiently. 
1400,Merge pull request #13539 from hashicorp/f-update-go1.18.3,build: update to go1.18.3
1401,Merge pull request #13531 from hashicorp/dependabot/go_modules/api/github.com/stretchr/testify-1.8.0,build(deps): bump github.com/stretchr/testify from 1.7.5 to 1.8.0 in /api
1402,build: update to go1.18.3,Release Notes: https://groups.google.com/g/golang-announce/c/TzIC9-t8Ytg Contains 4 security fixes - the 2 related to Windows might be relevant.
1403,build(deps): bump github.com/stretchr/testify in /api,Bumps link from 1.7.5 to 1.8.0. - link - link  updated-dependencies: - dependency-name: github.com/stretchr/testify   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link
1404,Merge pull request #12862 from hashicorp/f-choose-services,api: enable selecting subset of services using rendezvous hashing
1405,cl: fixup changelog comment,Co-authored-by: James Rasell link
1406,"docs: fix Plan{,Result}.NodeUpdate comment (#13534)","It appears way back when this was first implemented in 9a917281af9c0a97a6c59575eaa52c5c86ffc60d, it was renamed from NodeEvict (with a correct comment) to NodeUpdate. The comment was changed from referring to only evictions to referring to ""all allocs"" in the first sentence and ""stop or evict"" in the second. This confuses every time I see it because I read the name (NodeUpdate) and first sentence (""all the allocs"") and assume this represents all allocations... which isn't true. I'm going to assume I'm the only one who doesn't read the 2nd sentence and that's why this suboptimal wording has lasted 7 years, but can we change it for my sake?"
1407,"Demo Vagrant version updates (nomad, consul, ubuntu) (#13518)"," Use latest nomad 1.3.1 and consul 1.12.2 Use latest Ubuntu LTS (easier to get podman plugin working, 18.04 does not have podman in main repositories). Add increased memory for libvirt to match other VM providers"
1408,docs: update task leader to explain shutdown sequence. (#13498), docs: update task leader to explain shutdown sequence.
1409,docs: fixup HCL2 index collection function documentation. (#13511),
1410,Fix typo in Docker docs (#13497),
1411,deps: update module to latest. (#13491),
1412,client: fixed a problem calculating a service namespace. (#13493),"When calculating a services namespace for registration, the code assumed the first task within the task array would include a service block. This is incorrect as it is possible only a latter task within the array contains a service definition. This change fixes the logic, so we correctly search for a service definition before identifying the namespace."
1413,Merge pull request #13499 from shishir-a412ed/fix_typo,Fix typo: orthogonal.
1414,Fix typo: orthogonal.,Signed-off-by: Shishir Mahajan link
1415,Merge pull request #13485 from hashicorp/f-api-env-cleanup,api: use testing.T.Setenv to set env vars in tests
1416,Merge pull request #13486 from hashicorp/f-remove-gotextseg-replace,deps: remove replace statement for go-textseg
1417,Merge pull request #13479 from hashicorp/b-update-testify,tests: update testify dependency
1418,Merge pull request #13487 from greut/feat/use-moby-term,feat: docker/docker/pkg/term has been deprecated in favor of moby/term
1419,fixup! feat: docker/docker/pkg/term has been deprecated in favor of moby/term,Signed-off-by: Yoan Blanc link
1420,feat: docker/docker/pkg/term has been deprecated in favor of moby/term,See https://github.com/moby/moby/pull/40825 Signed-off-by: Yoan Blanc link
1421,deps: remove replace statement for go-textseg,
1422,api: enable selecting subset of services using rendezvous hashing,"This PR adds the 'choose' query parameter to the '/v1/service/' endpoint. The value of 'choose' is in the form '|', number is the number of desired services and key is a value unique but consistent to the requester (e.g. allocID). Folks aren't really expected to use this API directly, but rather through consul-template which will soon be getting a new helper function making use of this query parameter. Example, curl 'localhost:4646/v1/service/redis?choose=2|abc123' Note: consul-templte v0.29.1 includes the necessary nomadServices functionality."
1423,api: use testing.T.Setenv to set env vars in tests,
1424,[ui] Reinstate Meta and Payload sections to Parameterized Child Jobs (#13473),  Shift meta off job.definition and decodedPayload alias to passed arg   Changelog 
1425,tests: update testify dependency,
1426,Merge pull request #13467 from hashicorp/f-purge-raft-v2,core: remove support for raft protocol version 2
1427,fix deadlock in plan_apply (#13407),"The plan applier has to get a snapshot with a minimum index for the plan it's working on in order to ensure consistency. Under heavy raft loads, we can exceed the timeout. When this happens, we hit a bug where the plan applier blocks waiting on the module forever, and all schedulers will block in module. Closing the module when the module is done with it will prevent the deadlock without impacting correctness of the previous snapshot index. This changeset includes the a PoC failing test that works by injecting a large timeout into the state store. We need to turn this into a test we can run normally without breaking the state store before we can merge this PR. Increase module timeout to 10s. This timeout creates backpressure where any concurrent module RPCs will block waiting for results. This sheds load across all servers and gives raft some CPU to catch up, because schedulers won't dequeue more work while waiting. Increase it to 10s based on observations of large production clusters."
1428,core: remove support for raft protocol version 2,"This PR checks server config for raft_protocol, which must now be set to 3 or unset (0). When unset, version 3 is used as the default."
1429,docs: clarify total_escaped is just an optimization (#13460),
1430,csi_hook: valid if any driver supports csi (#13446), csi_hook: valid if any driver supports csi volumes
1431,update hashistack demo for current versions of Terraform,Replace deprecated module block with module function
1432,Lob.com uses Nomad too! (#13295),Lob.com has been ramping up our use of Nomad for ~6 months. Now that we've started blogging about it we'd love to be on the official list.
1433,cli: fix detach handling (#13405),Fix detach handling for:  module module module module module
1434,cni: add loopback to linux bridge (#13428),CNI changed how to bring up the interface in v0.2.0. Support was moved to a new loopback plugin. https://github.com/containernetworking/cni/pull/121 Fixes #10014
1435,Update example license_path to match docs (#13374),
1436,Improve Autoscaler overview (#13396),Improve Autoscaler overview documentation.
1437,Merge pull request #13401 from nickwales/tls_typo,Updates TLS documentation
1438,docs: Fix typo (#13389),
1439,Updates TLS documentation,
1440,Fix spelling error (#13397),
1441,api: added sysbatch job type constant to match other schedulers. (#13359),
1442,Return evalID if module flag is passed to job revert (#13364), Return evalID if module flag is passed to job revert
1443,Quote assignees value to fix dependabot.yaml parsing error (#13372),
1444,fixup changelog entry for backported regression fix (#13370),"The changelog entry for #13340 indicated it was an improvement. But on discussion, it was determined that this was a workaround for a regression. Update the changelog to make this clear."
1445,docs: create volume spec page (#13353),"In addition to jobs, there are other objects in Nomad that have a specific format and can be provided to commands and API endpoints. This commit creates a new menu section to hold the specification for volumes and update the command pages to point to the new centralized definition. Redirecting the previous entries is not possible with module because they are done server-side and URL fragments are not accessible to detect a match. So we provide hidden anchors with a link to the new page to guide users towards the new documentation. Co-authored-by: Tim Gross link"
1446,ci: remove step that generates GO_LDFLAGS (#13314),"These flags were not being used because GNUmakefile overwrites them with another value. We also don't want to set module since they remove information that is important for production debug. In other projects this variable is used to override the default module prerelease that is set even if module is empty, but in Nomad this check is never actually done because this conditional in module is always false: module This seems like some leftover from a previous release process, but I decided the leave the code as is."
1447,website: fix redirects with fragments (#13354)," website: fix redirects with fragments  Vercel redirects don't support fragments in relative destination paths, so an absolute URL must be specified instead.  website: fix Vercel redirect documentation link"
1448,client: wait for alloc create index when deriving vault token (#12396),
1449,CSI: make plugin health_timeout configurable in csi_plugin stanza (#13340),Signed-off-by: Grant Griffiths link
1450,docs: explain behavior of system gc command (#13342),
1451,template: improve default language for max_stale and wait (#13334), template: improve default language for max_stale and wait  Co-authored-by: Michael Schurter link
1452,qemu driver: Add option to configure drive_interface (#11864),
1453,Merge pull request #13330 from hashicorp/b-windows-go-path-order,build: rearrange go path order on windows
1454,changelog: add entry for #12961 (#13318),
1455,build: rearrange go path order on windows,"If PATH comes first, an older version of Go is used that cannot install dependencies that use features of newer versions of Go, which we just installed."
1456,Update supplement.mdx with the right GitHub spelling (#13326),
1457,Merge pull request #13308 from hashicorp/f-generic-helpers,helpers: provide a few generic helper functions
1458,helpers: provide a few generic helper functions,This PR deprecates some functions in favor of generic alternatives. The new functions are compatible only with Nomad v1.4+. The old functions (nor their use) should not be removed until Nomad v1.6+.
1459,CSI: skip node unpublish on GC'd or down nodes (#13301),"If the node has been GC'd or is down, we can't send it a node unpublish. The CSI spec requires that we don't send the controller unpublish before the node unpublish, but in the case where a node is gone we can't know the final fate of the node unpublish step. The module on the client will unpublish if the allocation has stopped and if the host is terminated there's no mount for the volume anyways. So we'll now assume that the node has unpublished at its end. If it hasn't, any controller unpublish will potentially hang or error and need to be retried."
1460,Add module config option for QEMU driver (#12800),"Add boolean 'guest_agent' config option for QEMU driver, which will create the socket file for the QEMU Guest Agent in the task dir when enabled."
1461,docker: update images to reference hashicorpdev Docker organization (#12903),docker: update images to reference hashicorpdev dockerhub organization generate job_init.bindata_assetfs.go Co-authored-by: Luiz Aoqui link
1462,consul-template: Add fault tolerant defaults (#13041),consul-template: Add fault tolerant defaults Co-authored-by: Tim Gross link
1463,module is a module parameter (#13288),"module is a module parameter, not a module parameter."
1464,build(deps): bump node-fetch in /scripts/screenshots/src (#11908),Bumps link from 2.6.1 to 2.6.7. - link - link - link  updated-dependencies: - dependency-name: node-fetch   dependency-type: indirect ... Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
1465,build(deps-dev): bump ember-page-title from 6.2.0 to 7.0.0 in /ui (#11738),Bumps link from 6.2.0 to 7.0.0. - link - link - link  updated-dependencies: - dependency-name: ember-page-title   dependency-type: direct:development   update-type: version-update:semver-major ... Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
1466,build(deps): bump node-fetch from 2.6.1 to 2.6.7 in /ui (#11909),Bumps link from 2.6.1 to 2.6.7. - link - link - link  updated-dependencies: - dependency-name: node-fetch   dependency-type: indirect ... Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
1467,build(deps): bump semver-regex from 3.1.2 to 3.1.4 in /ui (#13224),Bumps link from 3.1.2 to 3.1.4. - link - link  updated-dependencies: - dependency-name: semver-regex   dependency-type: indirect ... Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
1468,chore(deps): bump lodash-es from 4.17.20 to 4.17.21 in /ui (#12323),Bumps link from 4.17.20 to 4.17.21. - link - link  updated-dependencies: - dependency-name: lodash-es   dependency-type: indirect ... Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
1469,build(deps): bump follow-redirects from 1.14.5 to 1.14.8 in /ui (#12060),Bumps link from 1.14.5 to 1.14.8. - link - link  updated-dependencies: - dependency-name: follow-redirects   dependency-type: indirect ... Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
1470,build(deps): bump mout from 1.2.2 to 1.2.3 in /ui (#12035),Bumps link from 1.2.2 to 1.2.3. - link - link - link  updated-dependencies: - dependency-name: mout   dependency-type: indirect ... Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
1471,changelog: add entry for #12925 (#13250),
1472,update AWS cpu info for fingerprinter (#13280),
1473,CSI: no early return when feasibility check fails on eligible nodes (#13274),"As a performance optimization in the scheduler, feasibility checks that apply to an entire class are only checked once for all nodes of that class. Other feasibility checks are ""available"" checks because they rely on more ephemeral characteristics and don't contribute to the hash for the node class. This currently includes only CSI. We have a separate fast path for ""available"" checks when the node has already been marked eligible on the basis of class. This fast path has a bug where it returns early rather than continuing the loop. This causes the entire task group to be rejected. Fix the bug by not returning early in the fast path and instead jump to the top of the loop like all the other code paths in this method. Includes a new test exercising topology at whole-scheduler level and a fix for an existing test that should've caught this previously."
1474,alloc_runner: stop sidecar tasks last (#13055),alloc_runner: stop sidecar tasks last
1475,e2e: use longer wait in template update triggers to avoid flake. (#13271),
1476,state: only update index on change when deleting evals. (#13227),"When deleting evaluations and allocations during a reap event, the index table entries for evals and allocs was updated irregardless of whether changes were made. This change modifies the state logic so that the index table is only modified when the corresponding table has actually been modified. Along with matching expected behaviour, this change has the potential to reduce the number of times blocking queries will return without any real state change."
1477,changelog entry for #12534 (#13260),
1478,parse ACL token from authorization header (#12534),
1479,add filebase64 function (#11791),Signed-off-by: Conor Evans link
1480,docs: update warning for gateway listener docs for non-tcp protos,
1481,docs/job-spec: Fix formatting in network page (#13228),
1482,build(deps): bump semver-regex from 3.1.3 to 3.1.4 in /website (#13225),Co-authored-by: dependabot[bot] link
1483,client/allochealth: add healthy_deadline as context to error messages (#13214),
1484,docs/docker: fix broken link to bridge mode (#13221),
1485,docs: link to client reqs section for added clarity (#13215),
1486,feat: Warn if bootstrap_expect is even number (#12961),
1487,Allow Operator Generated bootstrap token (#12520),
1488,update README Nomad logo (#13206),
1489,adding support for customized ingress tls (#13184),
1490,Merge pull request #13205 from hashicorp/b-batch-preempt2,core: reschedule evicted batch job when resources become available
1491,fingerprint kernel architecture name (#13182),
1492,core: reschedule evicted batch job when resources become available,This PR fixes a bug where an evicted batch job would not be rescheduled once resources become available. Closes #9890
1493,Merge pull request #12951 from jorgemarey/f-srv-tagged-addresses,Allow setting tagged addresses on services
1494,website: set dependabot assignees (#12969),"The website build code has been moved out to another repository, so what's remaining here is local development tooling. Assign these PRs to the web platform team, but also cut down on the noise we're sending their way."
1495,consul: avoid reflection in comparing service map types,
1496,refactor index threshold calculation for core GC jobs (#13196),"Almost all GC jobs check the index of the objects being GC'd to see if they're older than a configured threshold. This code was repeated six times in module with only logging changes, so it seems safe to extract it as its own method."
1497,Merge pull request #13194 from hashicorp/update-golangci-lint,build: update golangci-lint to v1.46.2
1498,demo/terraform: fix nvidia drivers installation,
1499,Merge pull request #13193 from hashicorp/build-exclude-go-work-sum,build: git ignore go.work.sum files
1500,build: git ignore go.work.sum files,
1501,build: update golangci-lint to v1.46.2,"This version of golangci-lint improves support for generics, but also is more strict in copy vs. loop for slice copying."
1502,docs: added note about vault -period flag (#13185),
1503,docs: add docs and tests for tagged_addresses,
1504,docs: add podman ulimit option (#13180),
1505,Allow setting tagged addresses on services,
1506,docs: add allocation and job services API endpoint docs. (#13174),
1507,docs: add nomad-pipeline to community tools page (#13172),
1508,docs: add wander to the community tools page (#13165),
1509,docs: make the example for 'load' work (#13102),
1510,cli: fix minor formatting issue with alloc restart help. (#13135),
1511,Merge pull request #13125 from hashicorp/b-connect-upstream-namespace,connect: enable setting connect upstream destination namespace
1512,connect: enable setting connect upstream destination namespace,
1513,Merge pull request #13083 from josegonzalez/patch-1,Update service.check.task definition to match code
1514,Merge pull request #13036 from hashicorp/f-update-golang-1.18.2,build: update golang version to 1.18.2
1515,git: add go.work to gitignore,
1516,build: update golang version to 1.18.2,"This PR update to Go 1.18.2. Also update the versions of hclfmt and go-hclogfmt which includes newer dependencies necessary for dealing with go1.18. The hcl v2 branch is now 'nomad-v2.9.1+tweaks2', to include a fix for newer macOS versions: https://github.com/hashicorp/hcl/commit/8927e75e82c19370aabaf06b7dca91c2c9e73e3c"
1517,Merge pull request #13109 from hashicorp/merge-release-1.3.1-branch,Merge release 1.3.1 branch
1518,Merge pull request #13107 from hashicorp/b-docker-test-fixes,tests: minor fixes for some docker tests
1519,docker: remove dead comment,
1520,tests: minor fixes for some docker tests,
1521,Merge pull request #13059 from hashicorp/ci-gha-22.04,ci: switch to 22.04 for GHA Core CI tests
1522,ci: switch to 22.04 LTS for GHA Core CI tests,
1523,Merge pull request #13104 from hashicorp/b-blocked-eval-math,core: fix blocked eval math
1524,Post 1.3.1 release changes,
1525,Prepare for next release,
1526,Generate files for 1.3.1 release,
1527,prepare release 1.3.1,
1528,artifact: fix numerous go-getter security issues,"Fix numerous go-getter security issues:  Add timeouts to http, git, and hg operations to prevent DoS Add size limit to http to prevent resource exhaustion Disable following symlinks in both artifacts and module Stop performing initial HEAD request to avoid file corruption on   retries and DoS opportunities.  Approach Since Nomad has no ability to differentiate a DoS-via-large-artifact vs a legitimate workload, all of the new limits are configurable at the client agent level. The max size of HTTP downloads is also exposed as a node attribute so that if some workloads have large artifacts they can specify a high limit in their jobspecs. In the future all of this plumbing could be extended to enable/disable specific getters or artifact downloading entirely on a per-node basis."
1529,core: test duplicated blocked eval stats,"In the original test, the eval generator would use a random value for the job ID, resulting in an unxercised code path for duplicate blocked evals."
1530,Merge pull request #13058 from hashicorp/b-cgroupsv1-docker-cgparent,drivers/docker: do not set cgroup parent in v1 mode
1531,drivers/docker: do not set cgroup parent in v1 mode,This PR fixes a bug where the CgroupParent on the docker HostConfig struct was accidently being set when running in cgroups v1 mode.
1532,docs: add changelog,
1533,core: add tests for blocked evals math,
1534,core: remove correct set of resources on blocked eval,
1535,docs: module takes a slice of strings (#13087),The description of module provides incorrect example of the accepted value format. This fixes the issue by changing the example from a string module to a slice of strings module.
1536,e2e: upgrade playwright package and container image (#13080),"The nightly playwright tests are currently failing because of a mismatch between the expected version of Chromium and what's in the container image. Unfortunately the previous specific tag we were using for the container image is no longer tagged on the registry. With some testing, I was able to find an image tag that results in a good run."
1537,docs: correct where task cannot be defined,
1538,Update service.check.task definition to match code,Nomad errors out when attempting to specify a task for a service that uses consul connect but does not have script or gRPC checks. See https://github.com/hashicorp/nomad/blob/304d0cf5958065d14ab8b704055b1bb11d915876/nomad/structs/structs.go#L6643 for details.
1539,Don't buffer json logs on agent startup (#13076),There's no reason to buffer json logs on agent startup since logs in this format already aren't reordered.
1540,Merge pull request #13070 from hashicorp/b-vault-validator-env,cli: correctly validate job with vault token set
1541,Merge pull request #13068 from twunderlich-grapl/twunderlich/run-postinstall-script,[CI-only] Use the postinstall script for linux packages
1542,cli: correctly use and validate job with vault token set,"This PR fixes module to respect '-vault-token', '$VAULT_TOKEN', '-vault-namespace' if set."
1543,Use the postinstall script,It appears that the postinstall script was created but never used. This change is to actually use the post-install script.
1544,api: include Consul token in job revert API (#13065),
1545,Merge pull request #13044 from hashicorp/b-fixup-init-redis,cli: update default redis and use nomad service discovery
1546,cl: update changelog,
1547,cli: update default redis and use nomad service discovery,"Closes #12927 Closes #12958 This PR updates the version of redis used in our examples from 3.2 to 7. The old version is very not supported anymore, and we should be setting a good example by using a supported version. The long-form example job is now fixed so that the service stanza uses nomad as the service discovery provider, and so now the job runs without a requirement of having Consul running and configured."
1548,Merge pull request #12817 from twunderlich-grapl/fix-network-interpolation,Fix network.dns interpolation
1549,cl: add changelog note for network interpolation,
1550,Merge pull request #13033 from hashicorp/docs-consul-upgrade-banner,docs: add Consul 1.12.0 upgrade notice
1551,docs: add Consul 1.12.0 upgrade notice,
1552,Merge pull request #13013 from hashicorp/post-1.3.0-release,Post 1.3.0 release
1553,Add a forgotten comma to snapshot-specific CSS (#13030),
1554,docs: API package tests need a binary with your changes (#13029),"Add a note to the contributing guide pointing out that if you're writing module package tests, you need to build a binary with any of your changes."
1555,[terraform/aws] Fix NVidia GPG key error (#12985)," Fix NVidia GPG key error - NVidia rotated their repo keys, see https://forums.developer.nvidia.com/t/notice-cuda-linux-repository-key-rotation/212771"
1556,docs: Fix typo in sidecar_service (#13021),
1557,add missing changelog entry for 1.2.7,
1558,Merge release 1.3.0 files,
1559,Prepare for next release,
1560,Generate files for 1.3.0 release,
1561,Prepare for next release,
1562,Generate files for 1.3.0-rc.1 release,
1563,"12986 UI fails to load job when there is an ""@"" in job name in nomad 130 (#13012)",  LastIndexOf and always append a namespace on job links   Confirmed the volume equivalent and simplified idWIthNamespace logic   Changelog added   PR comments addressed   Drop the redirect for the time being   Tests updated to reflect namespace on links   Task detail test default namespace link for test 
1564,scheduler: volume updates should always be destructive (#13008),
1565,build(deps): bump cross-fetch from 3.1.4 to 3.1.5 in /website (#12818),Co-authored-by: dependabot[bot] link
1566,agent: fix panic when logging about protocol version config use. (#12962),"The log line comes before the agent logger has been setup, therefore we need to use the UI logging to avoid panic."
1567,docs: link s/port-plan-failure to more helpful doc (#12968),"The shortlink /s/port-plan-failure is logged when a plan for a node is rejected to help users debug and mitigate repeated module failures. The current link to #9506 is... less than useful. It is not clear to users what steps they should take to either fix their cluster or contribute to the issue. While .../monitoring-nomad#progess isn't as comprehensive as it could be, it's a much more gentle introduction to the class of bug than the original issue."
1568,docs: note that already-dispatched jobs cannot be updated (#12973),
1569,Visual diff tests seed-stabilized by default (#12965),  Seed-stabilization by default   Hide right-column of topology viz route   Remove seedless run from thee test:* suite   Related evals paths render too late   Vis:Hidden another topo viz unstable item 
1570,docs: remove beta tag for CSI from sidebar (#12970),
1571,test: use module to create temporary test directory (#12853)," test: use module to create temporary test directory  This commit replaces module with module in tests. The directory created by module is automatically removed when the test and all its subtests complete. Prior to this commit, temporary directory created using module needs to be removed manually by calling module, which is omitted in some tests. The error handling boilerplate e.g.     defer func() {         if err := os.RemoveAll(dir); err != nil {             t.Fatal(err)         }     } is also tedious, but module handles this for us nicely. Reference: https://pkg.go.dev/testing#T.TempDir Signed-off-by: Eng Zer Jun link  test: fix TestLogmon_Start_restart on Windows  Signed-off-by: Eng Zer Jun link  test: fix failing TestConsul_Integration  t.TempDir fails to perform the cleanup properly because the folder is still in use testing.go:967: TempDir RemoveAll cleanup: unlinkat /tmp/TestConsul_Integration2837567823/002/191a6f1a-5371-cf7c-da38-220fe85d10e5/web/secrets: device or resource busy Signed-off-by: Eng Zer Jun link"
1572,docs: add module to scheduling internals (#12954),
1573,prepare for next release (#12956),
1574,build: use new version of hc-install (#12937),https://github.com/shoenig/hc-install/pull/2 Uses new version of hc-install which supports the new json content type reported by api.releases.hashicorp.com
1575,Fix Exec not working with reverse proxy X-Nomad-Token (#12925),  Capture token secret on fetch   Fix tests   Fix lint errors 
1576,Merge pull request #12913 from hashicorp/mdrake/svc-acct-codeowner,add service acct to codeowners for backport merging
1577,add service acct to codeowners for backport merging,
1578,docs: add version note to nomad services template (#12910),
1579,Changelog for visual diff tests (#12909),
1580,ci: update backport assitant workflow (#12899),Remove the step to automatically backport module PRs to the latest release. This will be done manually by adding the proper tags. Also use squash backports to match the pattern we use for module.
1581,fsm: add service registration snapshot persistence. (#12896),
1582,ci: revert file changes and add some checks (#12873),"During the release there are several files that need to be modified:  .release/ci.hcl: the notification channel needs to be updated to a     channel with greater team visibility during the release. version/version.go: the Version and VersionPrerelease variables     need to be set so they match the release version.  After the release these files need to be reverted. For GA releases the following additional changes also need to happen:  version/version.go: the Version variable needs to be bumped to the     next version number. GNUMakefile: the LAST_RELEASE variable needs to be set to the     version that was just released.  Since the release process will commit file changes to the branch being used for the release, it should never run on main, so the first step is now to protect against that. It also adds a validation to make the user input version is correct. After looking at the different release options and steps I noticed that automatic CHANGELOG generation is actually the exception, so it would be better to have the default to be false."
1583,Chronological most-recent evals by default (#12847),  Chronological most-recent evals by default   Adding reverse: true to the list of expected queryparams in test   changelog 
1584,Percy snapshot tests (#12872),"  Sample percy test added   Node engine up to 14.x for UI prep   Force ui test rerun   Updated config.yml   Node v upgraded to 14 for docker image   Expect length in test   Running ember tests under percy exec   Percy exec format   Percy cli added   Noop to rerun tests with updated percy_token   Evals full list and details open snapshots   Pretty legit use of assert so disable the warning   Jobs list tests   Snapshots for top-level clients, servers, ACL, topology, and storage lists   Expect caveat for Topology test   Stabilizing tests with faker seeded to 1   Seed-stabilizing any tests with percySnapshots   Faker import   Drop unused param   Assets and test audit using an older node version   New strategy: avoid seeding, just use percyCSS to hide certain things "
1585,Merge pull request #12875 from hashicorp/b-cgroupsv2-task-restarts,cgroups: make sure cgroup still exists after task restart
1586,docs: add missing module constraint docs (#12886),This constraint and affinity was added in 0.9.x but was only documented for affinities. Close that documentation gap.
1587,website: remove source code and related CI jobs (#12596),  remove website source code and related circle jobs   remove data files   updates platform-cli   update local instructions   updates package-lock 
1588,cgroups: make sure cgroup still exists after task restart,"This PR modifies raw_exec and exec to ensure the cgroup for a task they are driving still exists during a task restart. These drivers have the same bug but with different root cause. For raw_exec, we were removing the cgroup in 2 places - the cpuset manager, and in the unix containment implementation (the thing that uses freezer cgroup to clean house). During a task restart, the containment would remove the cgroup, and when the task runner hooks went to start again would block on waiting for the cgroup to exist, which will never happen, because it gets created by the cpuset manager which only runs as an alloc pre-start hook. The fix here is to simply not delete the cgroup in the containment implementation; killing the PIDs is enough. The removal happens in the cpuset manager later anyway. For exec, it's the same idea, except DestroyTask is called on task failure, which in turn calls into libcontainer, which in turn deletes the cgroup. In this case we do not have control over the deletion of the cgroup, so instead we hack the cgroup back into life after the call to DestroyTask. All of this only applies to cgroups v2."
1589,core: add namespace to plan for node rejected log line. (#12868),
1590,release: fix hcl linting error within CI file. (#12867),
1591,Add config key to the promote-staging event (#12857),
1592,Add config key to the promote-staging event,
1593,CSI: node drain should end once only plugins remain (#12846),"In #12324 we made it so that plugins wait until the node drain is complete, as we do for system jobs. But we neglected to mark the node drain as complete once only plugins (or system jobs) remaining, which means that the node drain is left in a draining state until the module time expires. This was incorrectly documented as expected behavior in #12324."
1594,[WIP] feat: homepage and use case pages redesign (#11873),  feat: connect homepage and use case pages   fix: internalLink usage   fix: query name   chore: add homepage patterns   chore: remove offerings   chore: add intro features   chore: bump subnav   chore: updating patterns   chore: add use case to the subnav   chore: cleanup unused import   chore: remove subnav border 
1595,Update CHANGELOG for 1.3.0-rc.1 (#12849),
1596,Merge pull request #12740 from hashicorp/cleanup-makefile-help,build: add missing help descriptions to makefile
1597,Merge pull request #12840 from hashicorp/docs-nvidia-updates,docs: update nvidia driver documentation
1598,ui: fix an error when navigating to a task group (#12832),"Clicking in a task group row in the job details page would throw the error: Uncaught Error: You didn't provide enough string/numeric parameters to satisfy all of the dynamic segments for route jobs.job.task-group. Missing params: name     createParamHandlerInfo http://localhost:4646/ui/assets/vendor-194b1e0d68d11ef7a4bf334eb30ba74d.js:4814     applyToHandlers http://localhost:4646/ui/assets/vendor-194b1e0d68d11ef7a4bf334eb30ba74d.js:4804     applyToState http://localhost:4646/ui/assets/vendor-194b1e0d68d11ef7a4bf334eb30ba74d.js:4801     getTransitionByIntent http://localhost:4646/ui/assets/vendor-194b1e0d68d11ef7a4bf334eb30ba74d.js:4843     transitionByIntent http://localhost:4646/ui/assets/vendor-194b1e0d68d11ef7a4bf334eb30ba74d.js:4836     refresh http://localhost:4646/ui/assets/vendor-194b1e0d68d11ef7a4bf334eb30ba74d.js:4885     refresh http://localhost:4646/ui/assets/vendor-194b1e0d68d11ef7a4bf334eb30ba74d.js:2254     queryParamsDidChange http://localhost:4646/ui/assets/vendor-194b1e0d68d11ef7a4bf334eb30ba74d.js:2326     k http://localhost:4646/ui/assets/vendor-194b1e0d68d11ef7a4bf334eb30ba74d.js:2423     triggerEvent http://localhost:4646/ui/assets/vendor-194b1e0d68d11ef7a4bf334eb30ba74d.js:2349     fireQueryParamDidChange http://localhost:4646/ui/assets/vendor-194b1e0d68d11ef7a4bf334eb30ba74d.js:4863     getTransitionByIntent http://localhost:4646/ui/assets/vendor-194b1e0d68d11ef7a4bf334eb30ba74d.js:4848     transitionByIntent http://localhost:4646/ui/assets/vendor-194b1e0d68d11ef7a4bf334eb30ba74d.js:4836     doTransition http://localhost:4646/ui/assets/vendor-194b1e0d68d11ef7a4bf334eb30ba74d.js:4853     transitionTo http://localhost:4646/ui/assets/vendor-194b1e0d68d11ef7a4bf334eb30ba74d.js:4882     _doTransition http://localhost:4646/ui/assets/vendor-194b1e0d68d11ef7a4bf334eb30ba74d.js:2392     transitionTo http://localhost:4646/ui/assets/vendor-194b1e0d68d11ef7a4bf334eb30ba74d.js:2177     gotoTaskGroup http://localhost:4646/ui/assets/nomad-ui-4a2c1941e03e60e1feef715f23cf268c.js:623 ... This was caused because the attribute being passed to the transitionTo function was not the task group name, but the whole model."
1599,docs: update nvidia driver documentation,"notably: - name of the compiled binary is 'nomad-device-nvidia', not 'nvidia-gpu' - link to Nvidia docs for installing the container runtime toolkit - list docker v19.03 as minimum version, to track with nvidia's new container runtime toolkit"
1600,nomad can also install autocomplete for fish shell (#12834),
1601,ci: remove unused CircleCI Makefile (#12828),"This Makefile was used to generate the full config.yml from smaller sub-files, but this is not done anymore."
1602,docs: clarify module for volumes (#12825),"The capacity fields for module set bounds on the resulting size of the volume, but the ultimate size of the volume will be determined by the storage provider (between the min and max). Clarify this in the documentation and provide a suggestion for how to set a exact size."
1603,Fix formatting,
1604,Remove debug log lines,
1605,Quick and dirty hack to get interpolated dns values working,
1606,docs: Add known limitations callouts to Max Client Disconnect section (#12801), docs: Add known limitations callouts to Max Client Disconnect section
1607,Moves the evaluations table toolbar outside of the table-container (#12799),
1608,ci: update the module action version (#12813),
1609,fix broken link to module in module table in module (#12765),  chore:  run prettier on hbs files   ui:  ensure to pass a real job object to task-group link   chore:  add changelog entry   chore: prettify template   ui:  template helper for formatting jobId in LinkTo component   ui:  handle async relationship   ui:  pass in job id to model arg instead of job model   update test for serialized namespace   ui:  defend against null  in tests   ui:  prettified template added whitespace   ui:  rollback ember-data to 3.24 because watcher return undefined on abort   ui: use format-job-helper instead of job model via alloc   ui: fix whitespace in template caused by prettier using template helper   ui: update test for new namespace   ui: revert prettier change   Co-authored-by: Luiz Aoqui link
1610,debug: add version constraint to avoid pprof panic (#12807),
1611,ci: fix build workflow trigger on push (#12806),
1612,ci: setup release process with CRT (#12781),
1613,e2e: Wait for deployment to finish before disconnect (#12795), Wait for deployment to finish Don't reschedule disconnect or restart-node jobs
1614,"[ui, mirage] Evaluation mocks (#12471)",  Linear and Branching mock evaluations   De-comment   test-trigger   Making evaluation trees dynamic   Reinstated job relationship on eval mock   Dasherize job prefix back to normal   Handle bug where UUIDKey is not present on job   Appending node to eval   Job ID as a passed property   Remove unused import   Branching evals set up as generatable 
1615,remove pre-0.9 driver code and related E2E test (#12791),This test exercises upgrades between 0.8 and Nomad versions greater than 0.9. We have not supported 0.8.x in a very long time and in any case the test has been marked to skip because the downloader doesn't work.
1616,client: fix waiting on preempted alloc (#12779),"Fixes #10200 The bug A user reported receiving the following error when an alloc was placed that needed to preempt existing allocs: module The previous alloc (8e) was already complete on the client. This is possible if an alloc stops after the scheduling decision was made to preempt it, but before the node running both allocations was able to pull and start the preemptor. While that is hopefully a narrow window of time, you can expect it to occur in high throughput batch scheduling heavy systems. However the RPC error made no sense! module in the logs was a valid 36 character UUID! The fix The fix is: module The alloc watcher new func used for preemption improperly referenced Alloc.PreviousAllocation instead of the passed in watchedAllocID. When multiple allocs are preempted, a watcher is created for each with watchedAllocID set properly by the caller. In this case Alloc.PreviousAllocation="""" -- which is where the module error was coming from! Sadly we were properly referencing watchedAllocID in the log, so it made the error make no sense! The repro I was able to reproduce this with a dev agent with link and link for ease of repro. First I started a link, then a link that evicts 2 low priority jobs. Everything worked as expected. However if I force it to use the link, it reproduces the bug because the watcher references PreviousAllocation instead of watchedAllocID."
1617,E2E: move volume mounts test to use golang's stdlib test runner (#12788),Part of ongoing work to remove the old E2E framework code.
1618,E2E: remove old CLI for driving provisioning (#12787),"We moved off the old provisioning process for nightly E2E to one driven entirely by Terraform quite a while back now. We're in the slow process of removing the framework code for this test-by-test, but this chunk of code no longer has any callers."
1619,CSI: enforce one plugin supervisor loop via module (#12785),"We enforce exactly one plugin supervisor loop by checking whether module is set and returning early. This works but is fairly subtle. It can briefly result in two goroutines where one quickly exits before doing any work. Clarify the intent by using module. The goroutine we've spawned only exits when the entire task runner is being torn down, and not when the task driver restarts the workload, so it should never be re-run."
1620,api: add ParseHCLOpts helper method (#12777),The existing ParseHCL func didn't allow setting HCLv1=true.
1621,CSI: plugin config updates should always be destructive (#12774),
1622,update LAST_RELEASE comment to match new release branches structure (#12773),
1623,docs: update json jobs docs (#12766)," docs: update json jobs docs  Did you know that Nomad has not 1 but 2 JSON formats for jobs? 2½ if you want to acknowledge that sometimes our JSON job representations have a Job top-level wrapper and sometimes do not. The 2½ formats are: module module is what our docs consider our API JSON. module seems to be an accident of history we can't fix with breaking API compatibility. module is an even more interesting accident of history: the module package automatically detects if the input to Parse is JSON and switches to a JSON parser. This behavior is undocumented, the format is unspecified, and there is no official HashiCorp tooling to produce this JSON from HCL. The plot thickens when you discover popular third party tools like hcl2json.com and https://github.com/tmccombs/hcl2json seem to produce JSON that module accepts! Since we have no telemetry around whether or not anyone passes HCL JSON to module, and people don't file bugs around features that Just Work, I'm choosing to leave that code path in place and acknowledged but not suggested in documentation. See https://github.com/hashicorp/hcl/issues/498 for a more comprehensive discussion of what officially supporting HCL JSON in Nomad would look like. (I also added some of the missing fields to the (Input API flavor) JSON Job documentation, but it still needs a lot of work to be comprehensive.) Co-authored-by: Tim Gross link"
1624,bug:  fix filter and search (#12587),  chore:  remove commented out code and skipped tests   refact:  triggeredBy requires filter expression not qp   refact:  use filter expression dsl instead of named params   fix:  add  type   docs:  add in-line reference to filter expression DSL   fix:  update filter copy for non-matches   fix:  correct conditional logic to render no match copy 
1625,Sets up a new z-modal z-index and assigns it to the sidebar (#12758),
1626,Accidentally added while setting lint rules elsewhere (#12759),
1627,CSI: plugin supervisor prestart should not mark itself done (#12752),"The task runner hook module response object includes a module field that's intended to tell the client not to run the hook again. The plugin supervisor creates mount points for the task during prestart and saves these mounts in the hook resources. But if a client restarts the hook resources will not be populated. If the plugin task restarts at any time after the client restarts, it will fail to have the correct mounts and crash loop until restart attempts run out. Fix this by not returning module in the response, just as we do for the module."
1628,deps: update consul-template to v0.29.0 (#12747),  deps: update consul-template to v0.29.0   changelog: add entry for #12747 
1629,Adding changelog note (#12753),
1630,"[ui] Disconnected Clients: ""Unknown"" allocations in the UI (#12544)",  Unknown status for allocations accounted for   Canary string removed   Test cleanup   Generate unknown in mirage   aacidentally oovervoowled   Update ui/app/components/allocation-status-bar.js   Co-authored-by: Derek Strickland link   Disconnected state on job status in client   Renaming Disconnected to Unknown in the job-status-in-client   Unknown accounted for on job rows filtering and testsfix   Adding lostAllocs as a computed dependency   Unknown client status within acceptance test   Swatches updated and PR comments addressed   Unknown and disconnected added to test fixtures   Co-authored-by: Derek Strickland link
1631,vault: revert support for entity aliases (#12723),"After a more detailed analysis of this feature, the approach taken in PR #12449 was found to be not ideal due to poor UX (users are responsible for setting the entity alias they would like to use) and issues around jobs potentially masquerading itself as another Vault entity."
1632,Merge pull request #12720 from hashicorp/f-arbitrary-addresses,services: enable setting arbitrary address value in service registrations
1633,services: fix imports,
1634,services: cr followup,
1635,services: format ipv6 in nomad service info output,Co-authored-by: Michael Schurter link
1636,services: enable setting arbitrary address value in service registrations,"This PR introduces the module field in the module block so that Nomad or Consul services can be registered with a custom module to advertise. The address can be an IP address or domain name. If the module field is set, the module must be set in module mode."
1637,E2E: remove platform specific realpath code from UI run script (#12750),We don't need the absolute path for any of the commands in this script so long as we module into the source directory path. Doing this removes the need for weird platform-specific tricks we have to do with realpath vs GNU realpath.
1638,docs: add upgrade note for Consul implicit constraint. (#12749),
1639,CSI: handle nil topologies safely in command line (#12751),
1640,E2E: fix debug logging on disconnected clients test (#12621),
1641,cli: add pagination flags to service info command. (#12730),
1642,E2E: make UIs runnable from any working directory (#12739),The E2E test runner is running from the root of the Nomad repository. Make this run independent of the working directory for convenience of developers and the test runner.
1643,cli: add -json flag to support job commands (#12591)," cli: add -json flag to support job commands  While the CLI has always supported running JSON jobs, its support has been via HCLv2's JSON parsing. I have no idea what format it expects the job to be in, but it's absolutely not in the same format as the API expects. So I ignored that and added a new -json flag to explicitly support API style JSON jobspecs. The jobspecs can even have the wrapping {""Job"": {...}} envelope or not!  docs: fix example for module  We haven't been able to validate inside driver config stanzas ever since the move to task driver plugins. :sob:"
1644,build: add missing help descriptions to makefile,
1645,cli: detect directory when applying namespace spec file (#12738),"The new module feature that allows for passing a namespace specification file detects the difference between an empty namespace and a namespace specification by checking if the file exists. For most cases, the file will have an extension like module and so there's little danger that a user will apply a file spec when they intended to apply a file name. But because directory names typically don't include an extension, you're much more likely to collide when trying to module by name only, and then you get a confusing error message of the form: Failed to read file: read $namespace: is a directory Detect the case where the namespace name collides with a directory in the current working directory, and skip trying to load the directory."
1646,"[ui, bugfix] Link fix for volumes where per_alloc=true (#12713)",  Allocation page linkfix   fix added to task page and computed prop moved to allocation model   Fallback query added to task group when specific volume isnt knowable   Delog   link text reflects alloc suffix   Helper instead of in-template conditionals   formatVolumeName unit test   Removing unused helper import 
1647,Merge pull request #12736 from hashicorp/build-update-go-1.17.9,build: update golang to 1.17.9
1648,build: update golang version script to use .go-version file,
1649,Merge pull request #12737 from hashicorp/buid-update-ec2-instances,build: update ec2 instance profiles
1650,build: update ec2 instance profiles,using tools/ec2info
1651,build: update golang to 1.17.9,
1652,docker: back out cgroup v2 OOM detection (#12735),"When shutting down an allocation that ends up needing to be force-killed, we're getting a spurious ""OOM Killed (137)"" message on the task termination event. We introduced this as part of cgroups v2 support because the Docker daemon isn't detecting the container status correctly. Although exit code 137 is the exit code we get for OOM-killed processes, that's because OOM kill is a module. So any sigkilled process will get that exit code."
1653,E2E: set longer timeout for CSI plugin alloc start (#12732),"The CSI plugin allocations take a while to be marked healthy, sometimes causing E2E test flakes during the setup phase of the tests. There's nothing CSI specific about marking plugin allocs healthy, as the plugin supervisor hook does all the fingerprinting in the postrun hook (the prestart hook just makes a couple of empty directories). The timeouts we're seeing may be because of where we're pulling the images from; most our jobs pull from a CDN-backed public registry whereas these are pulling from ECR. Set a 1min timeout for these to make sure we have enough time to pull the image and start the task."
1654,api: Add support for filtering and pagination to the node list endpoint  (#12727),
1655,docs: fix broken link from module to client config (#12733),
1656,reconciler: Handle canaries when client disconnects (#12539), plan_apply: Allow node updates in disconnected node plans plan: Keep the job when persisting unknown allocs reconciler: stop unknown allocs when stopping all reconcile_util: reorder filtering to handle canaries; skip rescheduling unknown heartbeat: Fix bug in node heartbeating
1657,E2E: playwright configuration and smoke test (#12721),Scripts for running playwright tests in a Docker container that has chromium and webkit preinstalled. Includes a basic smoke test for authentication so that we can be sure the test rig is working end-to-end. Wiring this up in CI will be in an upcoming PR.
1658,docs: update HCL2 dynamic example to use block with label. (#12715),
1659,autopilot: correctly return errors within state functions. (#12714),
1660,ui: fix bug that prevented files streaming (#12719),"During the Ember dependecy upgrade work, https://github.com/hashicorp/nomad/commit/ce8c039f4ce7359d60ede5dee36b9cef82 moved the module method from using Ember's module to a getter, but module creates a static method, so the getter must be static as well."
1661,Add Concurrent Download Support for artifacts (#11531),  add concurrent download support - resolves #11244   format imports   mark module via module   added tests for successful and failure cases and resolved some goleak   docs: add changelog for #11531   test typo fixes and improvements   Co-authored-by: Michael Schurter link
1662,job_hooks: add implicit constraint when using Consul for services. (#12602),
1663,client: add NOMAD_SHORT_ALLOC_ID allocation env var. (#12603),
1664,E2E: provide options for reverse proxy for web UI (#12671),"Our E2E test environment is deployed with mTLS, but it's impractical for us to use mTLS in headless browsers for automated testing (or even in manual testing). Provide certificates for proxying the web UI via Nginx. This proxy uses client certs for proxying to the HTTP endpoint and a self-signed cert for the browser-facing endpoint. We can accept certificate errors in the automated tests we'll be adding in the next step of this work."
1665,E2E: terraform provisioner upgrades (#12652),"While working on infrastructure for testing the UI in E2E, we needed to upgrade the certificate provider. Performing a provider upgrade via the TF module brought in updates for the file and AWS providers as well. These updates include deprecating the use of module fields, removing CA algorithm parameters that can be inferred from keys, and removing the requirement to manually specify AWS assume role parameters in the provider config if they're available in the calling environment's AWS config file (as they are via doormat or our E2E environment)."
1666,Merge pull request #12604 from hashicorp/b-fixup-chroot-test,ci: fixup task runner chroot test
1667,Merge pull request #12622 from hashicorp/b-fix-docker-logger-test,ci: fix docker logger not supported test
1668,ci: fixup task runner chroot test,"This PR is 2 fixes for the flaky TestTaskRunner_TaskEnv_Chroot test. And also the TestTaskRunner_Download_ChrootExec test.   Use TinyChroot to stop copying gigabytes of junk, which causes GHA to fail to create the environment in time.   Pre-create cgroups on V2 systems. Normally the cgroup directory is managed by the cpuset manager, but that is not active in taskrunner tests, so create it by hand in the test framework. "
1669,ci: fix docker logger not supported test,"This test checks for behavior when asking for logs of a docker task configured with a log driver that does not support streaming logs. Previously this was using the 'gelf' log driver, but it seems that no longer returns an error as expected. Instead we can just use the 'none' log driver, which has the desired effect 2022-04-19T10:23:19.129-0500 [ERROR] docklog/docker_logger.go:133: log streaming ended with terminal error: error=""API error (501): configured logging driver does not support reading"""
1670,changelog: fix entry for #11927 (#12577),
1671,changelog: add entry for #11944 (#12578),
1672,Merge pull request #12586 from hashicorp/f-local-si-token,connect: create SI tokens in local scope
1673,cl: add missing prefix,
1674,module:  revert module logic (#12071), consul-template: replace config rather than append Co-authored-by: Seth Hoenig link
1675,QueryOptions.SetTimeToBlock should take pointer receiver,"Fixes a bug where blocking queries that are retried don't have their blocking  timeout reset, resulting in them running longer than expected."
1676,CI: build binaries for UI branches (#12594),"Build binaries for every code change, not just backend code changes. This means that we'll have up-to-date compiled assets for every commit available in CircleCI artifacts."
1677,docs: update documentation with connect acls changes,"This PR updates the changelog, adds notes the 1.3 upgrade guide, and updates the connect integration docs with documentation about the new requirement on Consul ACL policies of Consul agent default anonymous ACL tokens."
1678,Change consul SI tokens to be local,
1679,Add os to NodeListStub struct. (#12497), Add os to NodeListStub struct.  Signed-off-by: Shishir Mahajan link  Add os as a query param to /v1/nodes.  Signed-off-by: Shishir Mahajan link  Add test: os as a query param to /v1/nodes.  Signed-off-by: Shishir Mahajan link
1680,CSI: replace structs->api with serialization extension (#12583),"The CSI HTTP API has to transform the CSI volume to redact secrets, remove the claims fields, and to consolidate the allocation stubs into a single slice of alloc stubs. This was done manually in #8590 but this is a large amount of code and has proven both very bug prone (see #8659, #8666, #8699, #8735, and #12150) and requires updating lots of code every time we add a field to volumes or plugins. In #10202 we introduce encoding improvements for the module struct that allow a more minimal transformation. Apply this same approach to serializing module to API responses. Also, the original reasoning behind #8590 for plugins no longer holds because the counts are now denormalized within the state store, so we can simply remove this transformation entirely."
1681,CSI: fix volume status prefix matching in CLI (#12584),"The API for module sorts by created index and not by ID, which breaks the logic for prefix matching in the module output when the prefix is also an exact match. Ensure that we're handling this case correctly."
1682,chore: redirects (#12560),Co-authored-by: Luiz Aoqui link
1683,heartbeat: Handle transitioning from disconnected to down (#12559),
1684,system_scheduler: support disconnected clients (#12555), structs: Add helper method for checking if alloc is configured to disconnect system_scheduler: Add support for disconnected clients
1685,CSI: handle per-alloc volumes in module CLI (#12573),"The Nomad client's module interpolates the alloc suffix with the volume request's name for CSI volumes with module, turning module into module. We need to do this same behavior in the module output so that we show the correct volume."
1686,Merge pull request #12579 from hashicorp/ci-missing-packages-oss,ci: ensure package coverage of test-core
1687,command/agent: check err before close (#12574),
1688,ci: ensure package coverage of test-core,
1689,docs: add plan for node rejected details and more (#12564)," Moved federation docs to the bottom since everyone is potentially   affected by the other sections on the page, but only users of   federation are affected by it. Added section on the plan for node rejected bug since it is fairly   easy to diagnose and removing affected nodes is a fairly reliable   workaround. Mention 5s cliff for wait_for_index. Remove the lie that we do not have job status metrics! How old was   that?! Reinforce the importance of monitoring basic system resources"
1690,E2E: add debugging outputs for disconnected clients test (#12572),This test has a failure that's happening only occassionally and not very reproducibly. Print out the allocation status on test failure so that we can do some post-mortum debugging of the test on nightly.
1691,ui: remove beta tag from gutter menu for CSI (#12570),
1692,fix data race in dynamic plugin registry tests (#12554),These tests have a data race where the test assertion is reading a value that's being set in the module goroutines that are subscribing to registry update events. Move the assertion into the subscribing goroutine to remove the race. This bug was discovered in #12098 but does not impact production Nomad code.
1693,Merge pull request #12543 from idrennanvmware/add-allocid-to-sidecar,Add alloc_id to sidecar bootstrap
1694,ci: fix backport target branch pattern (#12571),
1695,connect: prefix tag with nomad.; merge into envoy_stats_tags; update docs,"This PR expands on the work done in #12543 to - prefix the tag, so it is now ""nomad.alloc_id"" to be more consistent with Consul tags - merge into pre-existing envoy_stats_tags fields - update the upgrade guide docs - update changelog"
1696,Add alloc_id to sidecar bootstrap,
1697,test: test the buffered pipe used by nsd (#12563),Nomad Service Discovery uses an in-memory buffered pipe implementation to connect consul-template to the Nomad API. This adds a basic test for that helper functionality.
1698,jobspec: add max_client_disconnect to hcl1 group parsing. (#12568),
1699,Update E2E terraform output command (#12561),
1700,service discovery: add pagination and filtering support to info requests (#12552), services: add pagination and filter support to info RPC. cli: add filter flag to service info command. docs: add pagination and filter details to services info API. paginator: minor updates to comment and func signature.
1701,updates for backport assistant (#12311),
1702,CSI: fix data race in plugin manager (#12553),"The plugin manager for CSI hands out instances of a plugin for callers that need to mount a volume. The module method accesses the internal instances map without a lock, and can be called concurrently from outside the plugin manager's main run-loop. The original commit for the instances map included a warning that it needed to be accessed only from the main loop but that comment was unfortunately ignored shortly thereafter, so this bug has existed in the code for a couple years without being detected until we ran tests with module in #12098. Lesson learned here: comments make for lousy enforcement of invariants!"
1703,add some godocs for the API pagination tokenizer options (#12547),
1704,scripts: fix interpreter for bash (#12549),Many of our scripts have a non-portable interpreter line for bash and use bash-specific variables like module. Update the interpreter line to be portable between various Linuxes and macOS without complaint from posix shell users.
1705,E2E: fix flaky event stream test (#12548),"This changeset fixes two sources of flakiness in the event stream test. First, the stream request gets the event closest to the index, not the exact match. Although events are written before raft entries they're written asynchronously, so it's possible to race and get a raft index from this query higher than the current head of the event buffer. Ensure the job is running before we try to get the index, so that we've given the event enough time to land in the buffer. Second, the assertion that the found index is greater than the start index is only true if the module event manages to land before we do the second registration. Although it should now with the first fix above, it's not a correct assertion for what we're testing."
1706,ci: change notification channel to feed-nomad-releases (#12550),
1707,move nomad.service out of etc (#12541),
1708,Merge pull request #12532 from greut/feat/remove-consul-lib,feat: remove dependency to consul/lib
1709,feat: add nomctx and nomad-events-sink (#12542),
1710,fix: use NewSafeTimer,Signed-off-by: Yoan Blanc link
1711,E2E: oversubscription assertion needs to wait for stats (#12540),The oversubscription test expects an output that requires the client has polled the task for stats at least once. Wait long enough to ensure that we've polled the stats before failing the test.
1712,E2E: test for nodes disconnected by netsplit (#12407),
1713,allocs without max_client_disconnect should be lost on disconnect (#12529),"In the reconciler's filtering for tainted nodes, we use whether the server supports disconnected clients as a gate to a bunch of our logic, but this doesn't account for cases where the job doesn't have module. The only real consequence of this appears to be that allocs on disconnected nodes are marked ""complete"" instead of ""lost""."
1714,Merge pull request #12527 from fynxiu/plugins/drivers/ctxdone,fix(plugins): should return when ctx.Done
1715,e2e: add initial service discovery tests. (#12512),"Some tests may chose to deregister jobs to check Nomad cleanup logic, however, it is still possible for the test to fail and exit before this is hit. This therefore adds a cancellable cleanup func which can be deferred, using context to control whether it gets run or not."
1716,feat: remove dependency to consul/lib,Signed-off-by: Yoan Blanc link
1717,set minimum version for disconnected client mode to 1.3.0 (#12530),
1718,changelog: update #12476 entry to highlight the feature (#12528),
1719,Merge pull request #12506 from hashicorp/merge-release-1.3.0-beta.1-branch,
1720,fix(plugins): should return when ctx.Done,
1721,Merge pull request #12524 from hashicorp/docs-cleanup-up-docs,docs: fixup title formatting in upgrade guide
1722,docs: fixup title formatting in upgrade guide,
1723,docs: fix upgrade specific broken link and conflict tag (#12521),
1724,add Nomad v1.3.0-beta.1 download box (#12517),
1725,docs: add nomad services template jobspec example. (#12514),
1726,ci: add semgrep rule to catch usage of invalid string extensions (#12509),
1727,Merge pull request #12508 from twunderlich-grapl/custom-variable-validation,Add custom variable validation to docs
1728,docs: tweak hcl2 validation example,
1729,Add custom variable validation to docs,Custom variable validation is a useful feature that is supported by Nomad and not just Terraform. As such it should be documented on the input variable page. I've cribbed the content from the terraform docs so this should be consistent across projects
1730,remove generated files and prepare for next release,
1731,Merge remote-tracking branch 'origin/release/1.3.0-beta.1' into merge-release-1.3.0-beta.1-branch,
1732,docs: add token_last_renewal and token_next_renewal to server metrics and key metrics #12435 (#12505),
1733,Generate files for release,
1734,"update ci.hcl, version.go and CHANGELOG to v1.3.0-beta.1",
1735,ci: skip prerelease if triggered by the generate assets workflow (#12504),
1736,Importing string methods directly from @ember/string (#12499),  Capitalize methods   Let ESLint yell at us again   Dasherize 
1737,Fix flaky module test (#12501),"We introduced a module argument to module in #11938, and unfortunately this has resulted in a lot of test flakes. The actual command in use is mostly fine (although I've fixed some quirks here), so what's really happened is that the change has revealed some existing issues in the tests. Summary of changes:   Make first pprof collection synchronous to preserve the existing   behavior for the common case where the pprof interval matches the   duration.   Clamp module pprof timing to that of the command. The   module should be no more than module and the   module should be no more than module. Clamp the   values rather than throwing errors, which could change the commands   that existing users might already have in debugging scripts   Testing: remove test parallelism   The module tests that stand up servers can't be run in   parallel, because we don't have a way of canceling the API calls for   pprof. The agent will still be running the last pprof when we exit,   and that breaks the next test that talks to that same agent.   (Because you can only run one pprof at a time on any process!) We could split off each subtest into its own server, but this test   suite is already very slow. In future work we should fix this ""for   real"" by making the API call cancelable.  Testing: assert against unexpected errors in module tests.  If we assert there are no unexpected error outputs, it's easier for   the developer to debug when something is going wrong with the tests   because the error output will be presented as a failing test, rather   than just a failing exit code check. Or worse, no failing exit code   check! This also forces us to be explicit about which tests will return 0   exit codes but still emit (presumably ignorable) error outputs. Additional minor bug fixes (mostly in tests) and test refactorings:   Fix text alignment on pprof Duration in module output   Remove ""done"" channel from module event stream test. The   goroutine we're blocking for here already tells us it's done by   sending a value, so block on that instead of an extraneous channel   Event stream test timer should start at current time, not zero   Remove noise from module test log output. The module   calls already are picked out from the rest of the test output by   being prefixed with the filename.   Remove explicit pprof args so we use the defaults clamped from   duration/interval "
1738,Merge pull request #12496 from hashicorp/f-cores-env,client: set environment variable indicating set of reserved cpu cores
1739,e2e: fix eventual consistency failure within consultemplate suite. (#12494),
1740,docs: update cl,
1741,nomad/state: fix dropped test errors (#12406),
1742,client: set environment variable indicating set of reserved cpu cores,"This PR injects the 'NOMAD_CPU_CORES' environment variable into tasks that have been allocated reserved cpu cores. The value uses normal cpuset notation, as found in cpuset.cpu cgroup interface files. Note this value is not necessiarly the same as the content of the actual cpuset.cpus interface file, which will also include shared cpu cores when using cgroups v2. This variable is a workaround for users who used to be able to read the reserved cgroup cpuset file, but lose the information about distinct reserved cores when using cgroups v2. Side discussion in: https://github.com/hashicorp/nomad/issues/12374"
1743,plan_apply: Add missing unit test for validating plans for disconnected clients (#12495),
1744,api: use module for default API client (#12492),"We expect every Nomad API client to use a single connection to any given agent, so take advantage of keep-alive by switching the default transport to module. Provide a facility to close idle connections for testing purposes. Restores the previously reverted #12409 Co-authored-by: Ben Buzbee link"
1745,changelog: make breaking change note for raft v3 (#12493),
1746,changelog: add entry for #12435 (#12491),
1747,Merge pull request #12484 from hashicorp/tests-handler-exec-failure,exec: fix exec handler test
1748,changelog: minor fixes (#12487),
1749,client: account for service provider namespace updates in hooks. (#12479),"When a service is updated, the service hooks update a number of internal fields which helps generate the new workload. This also needs to update the namespace for the service provider. It is possible for these to be different, and in the case of Nomad and Consul running OSS, this is to be expected."
1750,client: add Nomad template service functionality to runner.  (#12458),"This change modifies the template task runner to utilise the new consul-template which includes Nomad service lookup template funcs. In order to provide security and auth to consul-template, we use a custom HTTP dialer which is passed to consul-template when setting up the runner. This method follows Vault implementation. Co-authored-by: Michael Schurter link"
1751,exec: fix exec handler test,"Fixup this test to handle cgroups v2, as well as the :misc: cgroup"
1752,metrics: emit stats for vault token next_renewal & last_renewal #5222 (#12435),
1753,docs: update vault-token note in job run command #8040 (#12385),
1754,"Revert ""Use cleanhttp.DefaultPooledTransport for the default API client (#12409)"" (#12480)",This reverts commit 6e1270dd08e513bdbb6fbb7378f207f1afef9fc3.
1755,ci: make version script match ENT to avoid unnecessary merge conflicts (#12482),
1756,website: add initial website docs for Nomad service discovery. (#12456),
1757,changelog: add entry for #12368; native service discovery. (#12474),
1758,[Main] Onboard to CRT (#12276),
1759,disconnected clients: Add changelog entry (#12477),
1760,Inlines related evaluations flexbox (#12475),
1761,Use cleanhttp.DefaultPooledTransport for the default API client (#12409),The only difference is DefaultTransport sets DisableKeepAlives This doesn't make much sense to me - every http connection from the nomad client goes to the same NOMAD_ADDR so it's a great case for keep alive. Except round robin DNS and anycast perhaps. Consul does this already https://github.com/hashicorp/consul/blob/1e47e3c82b6eb937baab0688a67cf7ef334ce42c/api/api.go#L397
1762,Fix in-place updates over ineligible nodes (#12264),
1763,Merge pull request #12476 from hashicorp/f-disconnected-client-allocation-handling,disconnected clients: Feature branch merge
1764,disconnected clients:  Support operator manual interventions (#12436), allocrunner: Remove Shutdown call in Reconnect Node.UpdateAlloc: Stop orphaned allocs. reconciler: Stop failed reconnects. Apply feedback from code review. Handle rebase conflict. Apply suggestions from code review  Co-authored-by: Tim Gross link
1765,Merge pull request #12459 from hashicorp/b-fix-service-delete-cli-flake,cli: fixup service test delete by using atomic actions.
1766,Add max client disconnect docs (#12467),Co-authored-by: Derek Strickland link
1767,Merge pull request #12473 from hashicorp/f-ui/evals-unshown-copy-change,"Copy change, simplifies explanation for no related eval chart"
1768,cli: fixup service test delete by using more atomic actions.,
1769,ui: hide triggered by and status filters for now (#12472),
1770,Merge pull request #12419 from hashicorp/exec-cleanup,raw_exec: make raw exec driver work with cgroups v2
1771,disconnected clients: module validation (#12418), TaskGroup: Validate that max_client_disconnect and stop_after_client_disconnect are mutually exclusive.
1772,docs: updates for CSI plugin improvements for 1.3.0 (#12466),
1773,reconciler: 2 phase reconnects and tests (#12333),  structs: Add alloc.Expired & alloc.Reconnected functions. Add Reconnect eval trigger by.   node_endpoint: Emit new eval for reconnecting unknown allocs.   filterByTainted: handle 2 phase commit filtering rules.   reconciler: Append AllocState on disconnect. Logic updates from testing and 2 phase reconnects.   allocs: Set reconnect timestamp. Destroy if not DesiredStatusRun. Watch for unknown status. 
1774,comments: update some stale comments referencing deprecated config name (#12271), comments: update some stale comments referencing deprecated config name
1775,Add description for allocs stopped due to reconnect (#12270),
1776,Add unknown to TaskGroupSummary (#12269),
1777,disconnected clients: ensure servers meet minimum required version (#12202), planner: expose ServerMeetsMinimumVersion via Planner interface filterByTainted: add flag indicating disconnect support allocReconciler: accept and pass disconnect support flag tests: update dependent tests
1778,module Jobspec checklist (#12177)," api: Add struct, conversion function, and tests TaskGroup: Add field, validation, and tests diff: Add diff handler and test docs: Update docs"
1779,disconnected clients: Observability plumbing (#12141),"  Add disconnects/reconnect to log output and emit reschedule metrics   TaskGroupSummary: Add Unknown, update StateStore logic, add to metrics "
1780,Fix client test reconnect test; Remove guard test (#12173), Update reconnect test to new algorithm and interface; remove guard test
1781,disconnected clients: Add reconnect task event (#12133), Add TaskClientReconnectedEvent constant Add allocRunner.Reconnect function to manage task state manually Removes server-side push
1782,reconciler: fix loop control bug,
1783,evaluateNodePlan: validate plans for disconnected nodes,
1784,NodeStatusDisconnected: support state transitions for new node status,
1785,client: reconnect unknown allocations and sync state,
1786,reconciler: support disconnected clients (#12058)," Add merge helper for string maps structs: add statuses, MaxClientDisconnect, and helper funcs taintedNodes: Include disconnected nodes upsertAllocsImpl: don't use existing ClientStatus when upserting unknown allocSet: update filterByTainted and add delayByMaxClientDisconnect allocReconciler: support disconnecting and reconnecting allocs GenericScheduler: upsert unknown and queue reconnecting  Co-authored-by: Tim Gross link"
1787,"Copy change, simplifies explanation for no related eval chart",
1788,raw_exec: fixup review comments,
1789,cli: add -quiet to nomad node status command. (#12426),
1790,ui:  eval filter (#12243),  ui:  add triggeredBy filter   add namespace filter   fix:  namespace is a reserved keyword   ui: filter by type and search   fix:  rename closure action to   chore:  fix data-test-attr 
1791,Epic:  Evaluation Detail Sidebar (#12370),  chore: prettify gutter-menu   chore:  add portal packages   styling:  add styles sidebar and portal behavior   ui:  sidebar component   ui:  create and implement statechart for evals   ui:  actor-relationship service and provider component   ui:  d3 hierarchy computation   chore:  add render-modifiers and curved arrows   ui:  create evaluation actor div   fix related evaluations schema   ui:  register/deregister evaluation divs   ui:  handle resize behavior   bug:  infinite re-render cycle   fix:  conditional logic to prevent infinite render of flex resizing   ui: related evaluations schema and request param   ui: fix testing for evaluations   refact: make related-evals a proper has-many   chore: don't pauseTest   temp:  debug d3 hierarchy   ui:  move derived state logic into backing component class for detail   ui:  deprecated related evaluations logic in statechart   ui:  update evaluation models   ui:  update logic to paint svg in non-viewable scroll region   ui:  update styling   ui:  testing for eval detail view   ui:  delete detail from template directory   ui:  break detail component down   ui:  static data for /evaluation/:id endpoint   ui:  fix styling of d3 viz   ui:  add query parameter adapter for evals   ui:  last minute design requests   wip:  address browser updating detail view behavior   refact: handle query-state change in statechart   conditional class looking for currentEval equality (#12411)   F UI/evaluation detail sidebar rel evals (#12415)   ui:  remove busy id alias from statechart   ui: edit related evaluations viz error message   ui:  bug fixes on related evaluations view (#12423)   ui:  remove busy id alias from statechart   ui: edit related evaluations viz error message   ui:  update error state   ui:  related evaluation outline styling   Related evaluation stylefile and non-link if it matches the active sidebar (#12428)   Adds tabbable and keyboard pressable evaluation table rows (#12433)   ui:  fix failing eval list tests (#12437)   ui:  move styling into classes (#12438)   fix test failures (#12444)   ui:  move styling into classes   ui:  eslint disable   ui:  allocations have evaluations as async relationships   ui:  fix evaluation refresh button (#12447)   ui:  move styling into classes   ui:  eslint disable   ui:  allocations have evaluations as async relationships   ui:  refresh bug   ui:  final touches on sidebar (#12462)   chore: turn off template linting rules   Temporarily turning off template linting because we dont have a set CSS convention and the release needs to go out ASAP.   doc:  deprecate out of date comments and vars   ui:  edit mirage server fetch logic   ui:  style sidebar relative   Modification to mocked related evals and manually set 100% height on svg (#12460)   F UI/evaluation detail sidebar final touches (#12463)   chore: turn off template linting rules   Temporarily turning off template linting because we dont have a set CSS convention and the release needs to go out ASAP.   doc:  deprecate out of date comments and vars   ui:  edit mirage server fetch logic   ui:  style sidebar relative   ui:  account for new related eval added to chain   Co-authored-by: Michael Klein link Co-authored-by: Phil Renaud link
1792,Support Vault entity aliases (#12449),"Move some common Vault API data struct decoding out of the Vault client so it can be reused in other situations. Make Vault job validation its own function so it's easier to expand it. Rename the module method to just module since it returns the full Vault block, not just their policies. Set module on module. Add some missing tests. Allows specifying an entity alias that will be used by Nomad when deriving the task Vault token. An entity alias assigns an indentity to a token, allowing better control and management of Vault clients since all tokens with the same indentity alias will now be considered the same client. This helps track Nomad activity in Vault's audit logs and better control over Vault billing. Add support for a new Nomad server configuration to define a default entity alias to be used when deriving Vault tokens. This default value will be used if the task doesn't have an entity alias defined."
1793,CSI: don't block client shutdown for node unmount (#12457),"When we unmount a volume we need to be able to recover from cases where the plugin has been shutdown before the allocation that needs it, so in #11892 we blocked shutting down the alloc runner hook. But this blocks client shutdown if we're in the middle of unmounting. The client won't be able to communicate with the plugin or send the unpublish RPC anyways, so we should cancel the context and assume that we'll resume the unmounting process when the client restarts. For module mode we don't send the graceful module method and instead destroy all the allocations. In this case, we'll never be able to communicate with the plugin but also never close the context we need to prevent the hook from blocking. To fix this, move the retries into their own goroutine that doesn't block the main module."
1794,Merge pull request #12454 from hashicorp/f-rename-service-event-stream,events: add service API logic and rename topic to service from serviceregistration
1795,CSI: Add secrets flag support for delete volume (#11245),
1796,events: add API helpers for service events stream topics.,
1797,events: fixup service events and rename topic to service.,
1798,raw_exec: make raw exec driver work with cgroups v2,"This PR adds support for the raw_exec driver on systems with only cgroups v2. The raw exec driver is able to use cgroups to manage processes. This happens only on Linux, when exec_driver is enabled, and the no_cgroups option is not set. The driver uses the freezer controller to freeze processes of a task, issue a sigkill, then unfreeze. Previously the implementation assumed cgroups v1, and now it also supports cgroups v2. There is a bit of refactoring in this PR, but the fundamental design remains the same. Closes #12351 #12348"
1799,command/operator_debug: add pprof interval (#11938),
1800,Merge pull request #12442 from hashicorp/f-sd-add-mixed-auth-read-endpoints,service-disco: add mixed auth to list and read RPC endpoints.
1801,CSI: volume watcher shutdown fixes (#12439),"The volume watcher design was based on deploymentwatcher and drainer, but has an important difference: we don't want to maintain a goroutine for the lifetime of the volume. So we stop the volumewatcher goroutine for a volume when that volume has no more claims to free. But the shutdown races with updates on the parent goroutine, and it's possible to drop updates. Fortunately these updates are picked up on the next core GC job, but we're most likely to hit this race when we're replacing an allocation and that's the time we least want to wait. Wait until the volume has ""settled"" before stopping this goroutine so that the race between shutdown and the parent goroutine sending on module is pushed to after the window we most care about quick freeing of claims.   Fixes a resource leak when volumewatchers are no longer needed. The   volume is nil and can't ever be started again, so the volume's   module should be removed from the top-level module.   De-flakes the GC job test: the test throws an error because the   claimed node doesn't exist and is unreachable. This flaked instead of   failed because we didn't correctly wait for the first pass through the   volumewatcher.   Make the GC job wait for the volumewatcher to reach the quiescent   timeout window state before running the GC eval under test, so that   we're sure the GC job's work isn't being picked up by processing one   of the earlier claims. Update the claims used so that we're sure the   GC pass won't hit a node unpublish error.  Adds trace logging to unpublish operations"
1802,Merge pull request #12403 from hashicorp/dependabot/go_modules/github.com/creack/pty-1.1.18,build(deps): bump github.com/creack/pty from 1.1.17 to 1.1.18
1803,build(deps): bump github.com/creack/pty from 1.1.17 to 1.1.18,Bumps link from 1.1.17 to 1.1.18. - link - link  updated-dependencies: - dependency-name: github.com/creack/pty   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link
1804,Merge pull request #12446 from shoenig/no-pkg-err,cleanup: purge github.com/pkg/errors
1805,E2E: ensure that CSI EBS tests are isolated from each other (#12443),"Tear down the volume-consuming job between subtests, rather than after all the tests are complete. For good measure, use a different ID for the volume-consuming job as well."
1806,service-disco: add mixed auth to list and read RPC endpoints.,"In the same manner as the delete RPC, the list and read service registration endpoints can be called either by external operators or Nomad nodes. The latter occurs when a template is being rendered which includes Nomad API template funcs. In this case, the auth token is looked up as the node secret ID for auth."
1807,Merge pull request #12304 from th0m/tlefebvre/fix-wrong-drivernetworkmanager-interface,fix: update incorrect DriverNetworkManager interface implementation
1808,cleanup: purge github.com/pkg/errors,
1809,Test lint touchup (#12434), lint: require should not be aliased in core_sched_test lint: require should not be aliased in volumes_watcher_test testing: don't alias state package in core_sched_test
1810,Merge pull request #12432 from hashicorp/ci-gha-ignore-subpaths,ci: correctly ignore subpaths in gha
1811,Merge pull request #12431 from hashicorp/docs-sysbatch-exists-typo,docs: fix typo in system batch description
1812,ci: correctly ignore subpaths in gha,
1813,docs: fix typo in system batch description,
1814,website: redirect /api to api-docs and update internal links (#12410),
1815,docs: remove deprecated client options parameters docs (#12416),The client configuration options for drivers have been deprecated since 0.9. We haven't torn them out completely but because they're deprecated it's been hard to guarantee correct behavior. Remove the documentation so that users aren't misled about their viability.
1816,Merge pull request #12417 from hashicorp/tests-remove-08-groups-services,tests: remove update 08 groups services test
1817,tests: remove update 08 groups services test,"This is a test around upgrading from Nomad 0.8, which is long since no longer supported. The test is slow, flaky, and imports consul/sdk. Remove this test as it is no longer relevant."
1818,Merge pull request #12414 from hashicorp/tests-docker-dns-sadness,tests: create fresh harness for each docker dns test
1819,tests: create fresh harness for each docker dns test,"Not actually sure this fixes the flaky tests, but seems like it could be related."
1820,Merge pull request #12404 from hashicorp/tests-client-waits,tests: wait on client in a couple of tests
1821,tests: wait on client in a couple of tests,"These tend to fail on GHA, where I believe the client is not starting up fast enough before making requests. So wait on the client agent first. module"
1822,Merge pull request #12405 from hashicorp/ci-format-release-metadata-file,ci: hcl format release metadata file
1823,ci: add trailing newline to release metadata,
1824,E2E disconnected clients test refactor (#12402)," Wait longer for node to go down in disconnected clients test.   The existing helper only waits 10s, but there's a jitter on heartbeats   that we need to account for. Wait for 30s for node to go down to give   us plenty of room Port disconnected clients to stdlib-style test"
1825,ci: hcl format release metadata file,
1826,[RelAPI Onboarding] Add release API metadata file (#12353),
1827,Merge pull request #12312 from hashicorp/f-writeToFile,template: disallow module by default
1828,csi: allow module field to be passed in volume spec (#12400),"Use the volume spec's module field to override the value of the module and module field, just as we do with job spec."
1829,template: fix comments and docs,Review notes from @lgfa29 Co-authored-by: Luiz Aoqui link
1830,E2E: test exercising node drain behavior for CSI volumes (#12384),
1831,build(deps): bump github.com/mitchellh/hashstructure from 1.0.0 to 1.1.0 (#12399),Bumps link from 1.0.0 to 1.1.0. - link - link  updated-dependencies: - dependency-name: github.com/mitchellh/hashstructure   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
1832,CSI: reorder controller volume detachment (#12387),"In #12112 and #12113 we solved for the problem of races in releasing volume claims, but there was a case that we missed. During a node drain with a controller attach/detach, we can hit a race where we call controller publish before the unpublish has completed. This is discouraged in the spec but plugins are supposed to handle it safely. But if the storage provider's API is slow enough and the plugin doesn't handle the case safely, the volume can get ""locked"" into a state where the provider's API won't detach it cleanly. Check the claim before making any external controller publish RPC calls so that Nomad is responsible for the canonical information about whether a volume is currently claimed. This has a couple side-effects that also had to get fixed here:  Changing the order means that the volume will have a past claim   without a valid external node ID because it came from the client, and   this uncovered a separate bug where we didn't assert the external node   ID was valid before returning it. Fallthrough to getting the ID from   the plugins in the state store in this case. We avoided this   originally because of concerns around plugins getting lost during node   drain but now that we've fixed that we may want to revisit it in   future work. We should make sure we're handling module cases from   the controller plugin the same way we handle other retryable cases. Several tests had to be updated because they were assuming we fail   in a particular order that we're no longer doing."
1833,template: disallow module by default,"Resolves #12095 by WONTFIXing it. This approach disables module as it allows arbitrary host filesystem writes and is only a small quality of life improvement over multiple module stanzas. This approach has the significant downside of leaving people who have altered their module still vulnerable! I added an upgrade note, but we should have implemented the denylist as a module so that new funcs could be denied without overriding custom configurations. This PR also includes a bug fix that broke enabling all consul-template funcs. We repeatedly failed to differentiate between a nil (unset) denylist and an empty (allow all) one."
1834,Ensure to close StreamFrame channel (#12248),
1835,docs: changelog entry (#12393),
1836,Display OS name in nomad node status command. (#12388),Signed-off-by: Shishir Mahajan link
1837,Merge pull request #12381 from hashicorp/ci-gha-off,ci: set test log level off in gha
1838,E2E: namespace HCP vault and consul policies to avoid collisions (#12386),"Concurrent E2E runs can collide when provisioning policies on HCP Consul and HCP Vault. Namespace these by the test run name, as we do for most everything else."
1839,E2E: move example test to use golangs stdlib test runner (#12383),"Our E2E ""framework"" has a bunch of features around test discovery and standing up infra that were never completed or fully used, and we ended up building out a large test suite that ignored all that in lieu of Terraform-provided infrastructure for the last couple years. This changeset is a proposal (and demonstration) for gradually migrating our E2E tests off the framework code so that developers can write fairly ordinary golang stdlib testing tests."
1840,ci: set test log level off in gha,
1841,ci: set count to bypass caching,
1842,Merge pull request #12368 from hashicorp/f-1.3-boogie-nights,service discovery: add initial MVP implementation
1843,e2e: test for allocations replacement on disconnected clients (#12375),This test exercises the behavior of clients that become disconnected and have their allocations replaced. Future test cases will exercise the module field on the job spec.
1844,ci: fix semgrep rule for RPC authentication,
1845,client: Add AWS EC2 instance-life-cycle from metadata to client fingerprint (#12371),
1846,Merge branch 'main' into f-1.3-boogie-nights,
1847,docs: fix link and add note about Nomad v1.3.0 on raft v3 upgrade (#12378),
1848,Merge pull request #12380 from hashicorp/ci-gha-verbose,ci: cleanup verbose mode and enable for gha
1849,Merge pull request #12357 from hashicorp/f-update-cli-namespace-wildcard-support-wording,cli: update namespace wildcard help to be non-specific.
1850,Add grpc and http2 listeners to gateway docs (#12367),Stating at Nomad version 1.2.0 module and module link
1851,make stop job message clearer (#12252),
1852,ci: cleanup verbose mode and enable for gha,"test_checks.sh was removed in 2019 and now just breaks if VERBOSE is set when running tests via make targets in GHA, use verbose mode to display what tests are running"
1853,tests: fix rpc limit tests (#12364),
1854,Merge pull request #12274 from hashicorp/f-cgroupsv2,client: enable cpuset support for cgroups.v2
1855,core: add deprecated mvn tag to serf (#12327),"Revert a small part of #11600 after @lgfa29 discovered it would break compatibility with Nomad <= v1.2! Nomad <= v1.2 expects the module tag to exist in Serf. It has always been module. It has no functional purpose. However it causes a parsing error if it is not set: https://github.com/hashicorp/nomad/blob/v1.2.6/nomad/util.go#L103-L108 This means Nomad servers at version v1.2 or older will not allow servers without this tag to join. The module minor version tag is also checked, but soft fails. I'm not setting that because I want as much of this cruft gone as possible."
1856,core: store and check for Raft version changes (#12362),"Downgrading the Raft version protocol is not a supported operation. Checking for a downgrade is hard since this information is not stored in any persistent place. When a server re-joins a cluster with a prior Raft version, the Serf tag is updated so Nomad can't tell that the version changed. Mixed version clusters must be supported to allow for zero-downtime rolling upgrades. During this it's expected that the cluster will have mixed Raft versions. Enforcing consistency strong version consistency would disrupt this flow. The approach taken here is to store the Raft version on disk. When the server starts the module value is written to the file module. If that file already exists, its content is checked against the current module value to detect downgrades and prevent the server from starting. Any other types of errors are ignore to prevent disruptions that are outside the control of operators. The only option in cases of an invalid or corrupt file would be to delete it, making this check useless. So just overwrite its content with the new version and provide guidance on how to check that their cluster is an expected state."
1857,client: cgroups v2 code review followup,
1858,csi: add module and module flag to module (#12360),Pass-through the module and module flags to allow setting parameters for the snapshot and overriding the secrets we've stored on the CSI volume in the state store.
1859,Merge pull request #12369 from hashicorp/b-peers-perms,core: write peers.json file with correct permissions
1860,core: write peers.json file with correct permissions,
1861,api: move serviceregistration client to servics to match CLI.,"The service registration client name was used to provide a distinction between the service block and the service client. This however creates new wording to understand and does not match the CLI, therefore this change fixes that so we have a Services client. Consul specific objects within the service file have been moved to the consul location to create a clearer separation."
1862,test: move remaining tests to use ci.Parallel.,
1863,build(deps): bump github.com/stretchr/testify from 1.7.0 to 1.7.1 (#12306),
1864,client: enable support for cgroups v2,"This PR introduces support for using Nomad on systems with cgroups v2 [1] enabled as the cgroups controller mounted on /sys/fs/cgroups. Newer Linux distros like Ubuntu 21.10 are shipping with cgroups v2 only, causing problems for Nomad users. Nomad mostly ""just works"" with cgroups v2 due to the indirection via libcontainer, but not so for managing cpuset cgroups. Before, Nomad has been making use of a feature in v1 where a PID could be a member of more than one cgroup. In v2 this is no longer possible, and so the logic around computing cpuset values must be modified. When Nomad detects v2, it manages cpuset values in-process, rather than making use of cgroup heirarchy inheritence via shared/reserved parents. Nomad will only activate the v2 logic when it detects cgroups2 is mounted at /sys/fs/cgroups. This means on systems running in hybrid mode with cgroups2 mounted at /sys/fs/cgroups/unified (as is typical) Nomad will continue to use the v1 logic, and should operate as before. Systems that do not support cgroups v2 are also not affected. When v2 is activated, Nomad will create a parent called nomad.slice (unless otherwise configured in Client conifg), and create cgroups for tasks using naming convention -.scope. These follow the naming convention set by systemd and also used by Docker when cgroups v2 is detected. Client nodes now export a new fingerprint attribute, unique.cgroups.version which will be set to 'v1' or 'v2' to indicate the cgroups regime in use by Nomad. The new cpuset management strategy fixes #11705, where docker tasks that spawned processes on startup would ""leak"". In cgroups v2, the PIDs are started in the cgroup they will always live in, and thus the cause of the leak is eliminated. [1] https://www.kernel.org/doc/html/latest/admin-guide/cgroup-v2.html Closes #11289 Fixes #11705 #11773 #11933"
1865,csi: set gRPC authority header for unix domain socket (#12359),"The go-grpc library used by most CSI plugins doesn't require the authority header to be set, which violates the HTTP2 spec but doesn't impact Nomad because both sides of the connection are using the same library. But plugins written in other languages (module for example) may have more strictly conforming gRPC server libraries and we need to set the authority header manually."
1866,Merge pull request #12330 from hashicorp/f-gh-263,"cli: add service commands for list, info, and delete."
1867,CSI: fix timestamp from volume snapshot responses (#12352),"Listing snapshots was incorrectly returning nanoseconds instead of seconds, and formatting of timestamps both list and create snapshot was treating the timestamp as though it were nanoseconds instead of seconds. This resulted in create timestamps always being displayed as zero values. Fix the unit conversion error in the command line and the incorrect extraction in the CSI plugin client code. Beef up the unit tests to make sure this code is actually exercised."
1868,CSI: enforce single access mode at validation time (#12337),"A volume that has single-use access mode is feasibility checked during scheduling to ensure that only a single reader or writer claim exists. However, because feasibility checking is done one alloc at a time before the plan is written, a job that's misconfigured to have count > 1 that mounts one of these volumes will pass feasibility checking. Enforce the check at validation time instead to prevent us from even trying to evaluation a job that's misconfigured this way."
1869,cli: update namespace wildcard help to be non-specific.,"A number of commands support namespace wildcard querying, so it should be up to the sub-command to detail support, rather than keeping this list up to date."
1870,core: remove node service registrations when node is down.,"When a node fails its heart beating a number of actions are taken to ensure state is cleaned. Service registrations a loosely tied to nodes, therefore we should remove these from state when a node is considered terminally down."
1871,Merge branch 'main' into f-1.3-boogie-nights,
1872,[RelAPI Onboarding] Add release API metadata file,
1873,csi: fix handling of garbage collected node in node unpublish (#12350),"When a node is garbage collected, we assume that the volume is no longer attached to it and ignore the module error. But we used module to check for a wrapped error, and RPC flattens the errors during serialization. This results in an error check that works in automated testing but not in real clusters. Use a string contains check instead."
1874,core: use the new Raft API when removing peers (#12340),"Raft v3 introduced a new API for adding and removing peers that takes the peer ID instead of the address. Prior to this change, Nomad would use the remote peer Raft version for deciding which API to use, but this would not work in the scenario where a Raft v3 server tries to remove a Raft v2 server; the code running uses v3 so it's unable to call the v2 API. This change uses the Raft version of the server running the code to decide which API to use. If the remote peer is a Raft v2, it uses the server address as the ID."
1875,set raft v3 as the default config (#12341),
1876,drainer: defer CSI plugins until last (#12324),"When a node is drained, system jobs are left until last so that operators can rely on things like log shippers running even as their applications are getting drained off. Include CSI plugins in this set so that Controller plugins deployed as services can be handled as gracefully as Node plugins that are running as system jobs."
1877,demo: add missing file for Kadalu CSI demo (#12336),
1878,CSI: presentation improvements (#12325)," Fix plugin capability sorting.   The module method in the stdlib doesn't actually sort, but   instead constructs a sorting type which you call module on. Sort allocations for plugins by modify index.   Present allocations in modify index order so that newest allocations   show up at the top of the list. This results in sorted allocs in   module, just like module. Sort allocations for volumes in HTTP response.   Present allocations in modify index order so that newest allocations   show up at the top of the list. This results in sorted allocs in   module, just like module.   This is implemented in the HTTP response and not in the state store   because the state store maintains two separate lists of allocs that   are merged before sending over the API. Fix length of alloc IDs in module output"
1879,Merge pull request #12332 from hashicorp/b-node-fixup-drainupdate-msg-spelling,core: fixup node drain update message spelling.
1880,Merge pull request #12329 from hashicorp/f-gh-266-touchdown,client: hookup service wrapper for use in clients
1881,CSI: set plugin module env var only if unset by user (#12257)," Use unix:// prefix for CSI_ENDPOINT variable by default Some plugins have strict validation over the format of the   module variable, and unfortunately not all plugins   agree. Allow the user to override the module to workaround   those cases. Update all demos and tests with CSI_ENDPOINT"
1882,E2E: ensure module has clean state before starting (#12334),"The module checks that the SI tokens have been properly cleaned up between tests, but following the change to use HCP the previous module test suite will often have SI tokens that haven't been cleaned up by the time this test suite runs. Wait for the SI tokens to be cleaned up at the start of the test to ensure we have a clean state."
1883,core: fixup node drain update message spelling.,
1884,"cli: add service commands for list, info, and delete.",
1885,client: hookup service wrapper for use within client hooks.,
1886,client: modify service wrapper to accomodate restore behaviour.,
1887,Merge pull request #12298 from hashicorp/f-gh-266-nomad,client: add Nomad service registration implementation.
1888,Merge pull request #12322 from hashicorp/ci-gha,ci: turn on testing in github actions
1889,"ci: scope to push, ignore more dirs, update go update script",
1890,ci: turn on testing in github actions,
1891,Merge pull request #12321 from hashicorp/ci-less-logging,ci: limit gotestsum to circle ci
1892,ci: limit gotestsum to circle ci,"Part 2 of breaking up https://github.com/hashicorp/nomad/pull/12255 This PR makes it so gotestsum is invoked only in CircleCI. Also the HCLogger(t) is plumbed more correctly in TestServer and TestAgent so that they respect NOMAD_TEST_LOG_LEVEL. The reason for these is we'll want to disable logging in GHA, where spamming the disk with logs really drags performance."
1893,api: fix ENT-only test imports for moved testutil package (#12320),The module package was moved to module but this wasn't caught in the ENT tests because they're not run here in the OSS repo.
1894,E2E with HCP Consul/Vault (#12267),"Use HCP Consul and HCP Vault for the Consul and Vault clusters used in E2E testing. This has the following benefits:  Without the need to support mTLS bootstrapping for Consul and Vault, we can simplify the mTLS configuration by leaning on Terraform instead of janky bash shell scripting. Vault bootstrapping is no longer required, so we can eliminate even more janky shell scripting Our E2E exercises HCP, which is important to us as an organization With the reduction in configurability, we can simplify the Terraform configuration and drop the complicated module/module scripts we were using previously. We can template Nomad configuration files and upload them with the module provisioner. Packer builds for Linux and Windows become much simpler.  tl;dr way less janky shell scripting!"
1895,Merge pull request #12313 from hashicorp/purge-parallel-2,ci: more parallel removal
1896,ci: do not exclude Parallel semgrep rule,
1897,cli: display Raft version in module (#12317),"The previous output of the module command would output a column named module that displayed the Serf protocol being currently used by servers. This is not a configurable option, so it holds very little value to operators. It is also easy to confuse it with the Raft Protocol version, which is configurable and highly relevant to operators. This commit replaces the previous module column with the new module. It also updates the module flag to be called module so it matches other commands. The detailed output now also outputs the same information as the standard output with the addition of the previous module column and module."
1898,api: add related evals to eval details  (#12305),"The module query param is used to indicate that the request should return a list of related (next, previous, and blocked) evaluations. Co-authored-by: Jasmine Dahilig link"
1899,server: transfer leadership in case of error (#12293),"When a Nomad server becomes the Raft leader, it must perform several actions defined in the establishLeadership function. If any of these actions fail, Raft will think the node is the leader, but it will not actually be able to act as a Nomad leader. In this scenario, leadership must be revoked and transferred to another server if possible, or the node should retry the establishLeadership steps."
1900,ci: missing import for nomad09upgrade,
1901,ci: semgrep rule for parallel tests,Adds a semgrep rule warning about using ci.Parallel instead of t.Parallel
1902,e2e: have e2e use ci.Parallel,"This is a followup to having tests run in serial in CI. The e2e package isn't in CI, but lets use the helper anyway so we can setup semgrep rules covering the entire repository."
1903,ci: use serial testing for api in CI,"This is a followup to running tests in serial in CI. Since the API package cannot import anything outside of api/, copy the ci.Parallel function into api/internal/testutil, and have api tests use that."
1904,Merge branch 'main' into tlefebvre/fix-wrong-drivernetworkmanager-interface,
1905,client: add Nomad service registration implementation.,
1906,Merge pull request #12295 from hashicorp/f-gh-266-wrapper,client: add service registration wrapper to handle providers.
1907,Merge pull request #12307 from hashicorp/b-groupservices-avoid-double-tg-lookup,client: avoid double group lookup within groupservice hook setup.
1908,tests: move state store namespace tests from ENT (#12308),
1909,Merge pull request #12299 from hashicorp/ci-parallel,ci: trade test parallelization for unconstrained gomaxprocs
1910,ci: explain why ci runs tests in serial now,
1911,client: avoid double group lookup within groupservice hook setup.,
1912,fix: update incorrect DriverNetworkManager interface implementation in plugins/drivers/client.go and drivers/mock/driver.go,And add assertions to catch drifts at compilation time.
1913,ci: swap ci parallelization for unconstrained gomaxprocs,
1914,fix alloc list test (#12297),"The alloc list test with pagination was creating allocs before the target namespace existed. This works in OSS but fails in ENT because quotas are checked before the alloc can be created, so the namespace must exist beforehand."
1915,client: add service registration wrapper to handle providers.,The service registration wrapper handles sending requests to backend providers without the caller needing to know this information. This will be used within the task and alloc runner service hooks when performing service registration activities.
1916,Merge pull request #12272 from hashicorp/f-gh-266-refactor,client: refactor common service registration objects from Consul.
1917,client: refactor common service registration objects from Consul.,This commit performs refactoring to pull out common service registration objects into a new module package. This new package will form the base point for all client specific service registration functionality. The Consul specific implementation is not moved as it also includes non-service registration implementations; this reduces the blast radius of the changes as well.
1918,docs: clarify module inheritance and add examples (#12275),"Clarify the behavior of module inheritance with respect to Connect sidecar tasks. Remove incorrect language about the scheduler being involved in restart decisions. Try to make the module mode documentation more clear, and provide examples of delay vs fail."
1919,docs: initial docs for the new API features (#12094),
1920,scheduler: fix unused dstate variable (#12268),
1921,Merge pull request #12201 from hashicorp/f-gh-265,service discovery: add config boolean parameter and fingerprinting
1922,Merge pull request #12190 from hashicorp/f-gh-261,config: add native service discovery admin boolean parameter.
1923,Merge pull request #12189 from hashicorp/f-gh-264,jobspec: add service block provider parameter
1924,job: add native service discovery job constraint mutator.,
1925,client: add service discovery feature enabled attribute.,
1926,config: add native service discovery admin boolean parameter.,
1927,api: add service block provider parameter.,
1928,hcl1: add service block provider parameter.,
1929,jobspec: add service block provider parameter and validation.,
1930,api: apply consistent behaviour of the reverse query parameter (#12244),
1931,docs: add namespace param to job parse API (#12258),
1932,Merge pull request #12253 from hashicorp/hack-tiny-chroot,testing: use a smaller chroot when running exec driver tests
1933,testing: use a smaller chroot when running exec driver tests,"The default chroot copies all of /bin, /usr, etc. which can ammount to gigabytes of stuff not actually needed for running our tests. Use a smaller chroot in test cases so that CI infra with poor disk IO has a chance."
1934,Merge pull request #12251 from hashicorp/docs-contributing-cgo,docs: describe the cgo dependency
1935,docs: describe the cgo dependency,
1936,job summary query in module RPC should use job's namespace (#12249),"The module RPC attaches a module to each job stub. We're using the request namespace and not the job namespace for that query, which results in a nil module whenever we pass the wildcard namespace. This is incorrect and causes panics in downstream consumers like the CLI, which assume the module is non-nil as an unstate invariant."
1937,fix TestCSIVolumeEndpoint_List_PaginationFiltering test (#12245),
1938,"Add pagination, filtering and sort to more API endpoints (#12186)",
1939,Upgrade Ember and friends 3.28 (#12215),  chore: upgrade forward compatible packages   chore: v3.20.2...v3.24.0   chore: silence string prototype extension deprecation   refact: don't test clicking disabled button job-list   Recent test-helper upgrades will guard against clicking disabled buttons as this is not something that real users can do. We need to change our tests accordingly.  fix: await async test helper module  We have to await this async test function otherwise the test's rendering context will be torn down before we run assertions against it.  fix: don't try to click disabled two-step-button  Recent test-helper updates prohibit clicking disabled buttons. We need to adapt the tests accordingly.  fix: recommendation-accordion  Use up-to-date semantics for handling list-accordion closing in recommendation-accordion.   fixes toggling recommendation-accordion toggle.   fix: simple-unless linting error application.hbs   There's no reason to use unless here - we can use if instead.   fix: no-quoteless-attributes recommendation accordion   fix: no-quoteless-attributes recommendation-chart   fix: allow module - global-header.hbs   This is a valid use of unless in our opinion.  fix: allow unless in job-diff  This is not a great use for unless but we don't want to change this behavior atm.  fix: no-attrs-in-components list-pager  There is no need to use this.attrs in classic components. When we will convert to glimmer we will use module-instead.  fix: simple-unless job/definition  We can convert to a simple if here.  fix: allow inline-styles stats-box component  To make linter happy.  fix: disable no-action and no-invalid-interactive  Will be adressed in follow-up PRs.   chore: update ember-classic-decorator to latest   chore: upgrade ember-can to latest   chore: upgrade ember-composable-helpers to latest   chore: upgrade ember-concurrency   fix: recomputation deprecation module   schedule module on actions queue to work around recomputation deprecation when triggering Trigger on module.   chore: upgrade ember-cli-string-helpers   chore: upgrade ember-copy   chore: upgrade ember-data-model-fragments   chore: upgrade ember-deprecation-workflow   chore: upgrade ember-inline-svg   chore: upgrade ember-modifier   chore: upgrade ember-truth-helpers   chore: upgrade ember-moment & ember-cli-moment-shim   chore: upgrade ember-power-select   chore: upgrade ember-responsive   chore: upgrade ember-sinon   chore: upgrade ember-cli-mirage   For now we will stay on 2.2 - upgrades > 2.3 break the build.   chore: upgrade 3.24.0 to 3.28.5   fix: add missing classic decorators on adapters   fix: missing classic decorators to serializers   fix: don't reopen Ember.Object anymore   fix: remove unused useNativeEvents   ember-cli-page-objects doesn't provide this method anymore  fix: add missing attributeBindings for test-selectors  ember-test-selectors doesn't provides automatic bindings for data-test-* attributes anymore.   fix: classic decorator for application serializer test   fix: remove module from tests.   It is unneeded and ember-cli-page-objects doesn't provides this method anymore.   fix: remove deprecations module-invocations   fix: module in optimize test   fix: make sure to load async relationship before access   fix: dependent keys for relationship computeds   We need to add module as dependent keys for computeds that access async relationships.   fix: module-invocations use module instead   chore: prettify templates   fix: use map instead of mapBy ember-cli-page-object   Doesn't work with updated ember-cli-page-object anymore.   fix: remove remaining deprecated module-calls   chore: add more deprecations deprecation-workflow   fix: module-deprecation   All routes that add watchers will need to inject the store-service as the store service is internally used in watchers.   fix: more implicit injection deprecations   chore: silence implicit-injection deprecation   We can tackle the deprecation when we find the time.   fix: new linting errors after upgrade   fix: remove merge conflicts prettierignore   chore: upgrade to run node 12.22 when building binaries 
1940,docs: add note about docker DNS config when using bridge mode (#12229),The Docker DNS configuration options are not compatible with a group-level network in module mode. Warn users about this in the Docker task configuration docs.
1941,docs: elaborate on networking issues with firewalld (#12214),
1942,Merge pull request #12192 from hashicorp/website/add-new-tools,Add openapi and caravan to tools page
1943,docs: fix examples for set_contains_all and set_contains_any (#12093),
1944,Merge pull request #12138 from jorgemarey/f-ns-meta,Add metadata to namespaces
1945,csi: add pagination args to module (#12193),"The snapshot list API supports pagination as part of the CSI specification, but we didn't have it plumbed through to the command line."
1946,CSI: allow updates to volumes on re-registration (#12167),"CSI module RPC is idempotent given that the topology, capabilities, and parameters are unchanged. CSI volumes have many user-defined fields that are immutable once set, and many fields that are not user-settable. Update the module RPC so that updating a volume via the API merges onto any existing volume without touching Nomad-controlled fields, while validating it with the same strict requirements expected for idempotent module RPCs. Also, clarify that this state store method is used for everything, not just for the module RPC."
1947,csi: volume snapshot list plugin option is required (#12197),The RPC for listing volume snapshots requires a plugin ID. Update the module command to find the specific plugin from the provided prefix.
1948,"csi: get plugin ID for creating snapshot from volume, not args (#12195)","The module RPC expects a plugin ID to be set by the API, but in the common case of the module command, we don't ask the user for the plugin ID because it's available from the volume we're snapshotting. Change the order of the RPC so that we get the volume first and then use the volume's plugin ID for the plugin if the API didn't set the value."
1949,Merge branch 'f-ns-meta' of ssh://github.com/jorgemarey/nomad into f-ns-meta,
1950,Add changelog file. Add meta to ns mock for testing,
1951,docs: add meta to namespace docs,
1952,cli: namespace meta should be formatted consistently,
1953,cli: namespace tests should be run on oss,
1954,cli: namespace apply should autocomplete hcl files,
1955,csi: fix prefix queries for plugin list RPC (#12194),"The module RPC was intended to accept a prefix to filter the list of plugins being listed. This was being accidentally being done in the state store instead, which contributed to incorrect filtering behavior for plugins in the module command. Move the prefix matching into the RPC so that it calls the prefix-matching method in the state store if we're looking for a prefix. Update the module to accept a prefix for the plugin ID argument so that it matches the expected behavior of other commands."
1956,Updated OpenAPI info on tools page,Co-authored-by: Derek Strickland link
1957,Merge pull request #12191 from hashicorp/f-docs-add-hcl-func-note,docs: add note regarding HCLv2 func and interpolation.
1958,Add openapi and caravan to tools page,
1959,e2e: use context for executing external commands (#12185),"If any E2E test hangs, it'll eventually timeout and panic, causing the all the remaining tests to fail. External commands should use a short context whenever possible so we can fail the test quickly and move on to the next test."
1960,e2e: module should tolerate progress deadline expired (#12179),"The module E2E test failed during test cleanup because the error message ""progress deadline expired"" that it emits when we stop the job does not match the one expected from monitoring the module command. Update the module helper to tolerate this use case as well."
1961,e2e: configure prometheus for mTLS for module suite (#12181),"The module suite uses prometheus to scrape Nomad metrics so that we're testing the full user experience of extracting metrics from Nomad. With the addition of mTLS, we need to make sure prometheus also has mTLS configuration because the metrics endpoint is protected. Update the Nomad client configuration and prometheus job to bind-mount the client's certs into the task so that the job can use these certs to scrape the server. This is a temporary solution that gets the job passing; we should give the job its own certificates (issued by Vault?) when we've done some of the infrastructure rework we'd like."
1962,csi: ensure module aren't nil when handling secrets (#12182),"When we set the headers for CSI secrets in the module, it turns out that we're not always passing a non-nil object. In that case, instanstiate it on demand in the API."
1963,docs: add note regarding HCLv2 func and interpolation.,
1964,Merge pull request #12172 from hashicorp/f-gh-262,service discovery: add HTTP endpoints and sdk wrapper
1965,Merge pull request #12171 from hashicorp/f-gh-259,service discovery: add RPC endpoints and FSM logic
1966,Fix CSI volume list with prefix and module namespace (#12184),"When using a prefix value and the * wildcard for namespace, the endpoint would not take the prefix value into consideration due to the order in which the checks were executed but also the logic for retrieving volumes from the state store. This commit changes the order to check for a prefix first and wraps the result iterator of the state store query in a filter to apply the prefix."
1967,e2e: use UUID for CSI idempotency token (#12183),"The AWS EBS plugin appears to use the name field of the volume as an idempotency token that persists across the entire AWS account, not just the plugin lifespan. Also fix the regex for the volume ID, which was originally taken from the job ID regex but isn't actually the same. This hasn't failed tests for us because we've always passed in the same volume ID."
1968,e2e: use module for Networking suite validation (#12180),"With mTLS enabled, using module in a bash script for validation involves having to configure arguments to module based on whether or not the test infrastructure is using mTLS, whether ACLs are enabled, etc. Use the new module command instead to pick up the client configuration from the test environment automatically."
1969,csi: add missing fields to HTTP API response (#12178),The HTTP endpoint for CSI manually serializes the internal struct to the API struct for purposes of redaction (see also #10470). Add fields that were missing from this serialization so they don't show up as always empty in the API response.
1970,api: add service registration HTTP API wrapper.,
1971,http: add alloc service registration agent HTTP endpoint.,
1972,http: add job service registration agent HTTP endpoint.,
1973,http: add agent service registration HTTP endpoint.,
1974,rpc: add job service registration list RPC endpoint.,
1975,rpc: add alloc service registration list RPC endpoint.,
1976,rpc: add service registration RPC endpoints.,
1977,helper: add ipaddr pkg to check for any IP addresses.,
1978,fsm: add FSM functionality for service registration endpoints.,
1979,ci: disable Go test semgrep rules (#12175),
1980,Merge pull request #10808 from hashicorp/f-curl,cli: add operator api command
1981,Merge pull request #12140 from hashicorp/f-gh-258,events: add state objects and logic for service registrations.
1982,Merge pull request #12139 from hashicorp/f-gh-260,service discovery: add state store functionality
1983,docs: add op api examples,
1984,docs: add op api examples,
1985,cli: fix op api method handling,
1986,docs: add op api options,
1987,docs: Fixing path for autoscaling/agent/source nav item (#12166),
1988,api: paginated results with different ordering (#12128),"The paginator logic was built when go-memdb iterators would return items ordered lexicographically by their ID prefixes, but #12054 added the option for some tables to return results ordered by their module instead, which invalidated the previous paginator assumption. The iterator used for pagination must still return results in some order so that the paginator can properly handle requests where the next_token value is not present in the results anymore (e.g., the eval was GC'ed). In these situations, the paginator will start the returned page in the first element right after where the requested token should've been. This commit moves the logic to generate pagination tokens from the elements being paginated to the iterator itself so that callers can have more control over the token format to make sure they are properly ordered and stable. It also allows configuring the paginator as being ordered in ascending or descending order, which is relevant when looking for a token that may not be present anymore."
1989,csi: subcommand for volume snapshot (#12152),
1990,CSI: set plugin socket path on restore (#12149),"The Prestart hook for task runner hooks doesn't get called when we restore a task, because the task is already running. The Postrun hook for CSI plugin supervisors needs the socket path to have been populated so that the client has a valid path."
1991,CSI: implement support for topology (#12129),
1992,CSI: use HTTP headers for passing CSI secrets (#12144),
1993,csi: fix redaction of module mount flags (#12150),The module command and associated API redacts the entire mount options instead of just the module field that can contain sensitive data. Return a redacted value so that the return value makes sense to operators who have set this field.
1994,CSI: sort capabilities in module (#12154),Also fix module capability name
1995,docs: clarify that plugin commands are for CSI only (#12151),
1996,csi: respect -verbose flag for allocs in volume status (#12153),
1997,fix(website): hide version select on module & module (#12145),  fix(website/plugins): display version select   fix: hide version select on module + module 
1998,CI: increase test run timeout (#12143),
1999,Merge pull request #12137 from hashicorp/rpc-advertise-docs,docs: clairfy advertise.rpc effect
2000,events: add state objects and logic for service registrations.,
2001,state: add service registration restore functionality.,
2002,state: add service registration state interaction functions.,
2003,structs: add service registration struct and basic composed funcs.,
2004,mock: add service registration mock generation for test use.,
2005,state: add the table schema for the service_registrations table.,
2006,Add metadata to namespaces,
2007,cli: fix op api typos,Co-authored-by: Seth Hoenig link
2008,cli: only return 1 on errors from op api,"We don't want people to expect stable error codes for errors, and I don't think these were useful for scripts anyway."
2009,docs: fix nav for op api,
2010,docs: clairfy advertise.rpc effect,"The advertise.rpc config option is not intuitive. At first glance you'd assume it works like advertise.http or advertise.serf, but it does not. The current behavior is working as intended, but the documentation is very hard to parse and doesn't draw a clear picture of what the setting actually does. Closes https://github.com/hashicorp/nomad/issues/11075"
2011,Merge pull request #12134 from hashicorp/b-ui/target-link,ui:  external links open in new tabs
2012,Merge pull request #12130 from hashicorp/flakey-serf-non-voter,tests: deflake test that joins a server with non-voting servers to form quorum
2013,ui:  external links open in new tabs,
2014,docs: add changelog for #10808,
2015,cli: add tests and minor fixes for op api,Trimmed spaces around header values. Fixed method getting forced to GET.
2016,cli: add filter support,
2017,rename module to module,
2018,cli: add curl command,Just a hackweek project at this point.
2019,tests: deflake test that joins a server with non-voting servers to form qourum,"This PR  - upgrades the serf library  - has the test start the join process using the un-joined server first  - disables schedulers on the servers  - uses the WaitForLeader and wantPeers helpers Not sure which, if any of these actually improves the flakiness of this test."
2020,chore: bump docs-page for code-block fix (#12117),  chore: bump to latest docs-page   fix: bump to react-consent-manager patch   chore: bump to consent-manager with events dep   chore: bump to stable consent-manager release 
2021,CSI: ensure all fields are mapped from structs to api response (#12124),"In PR #12108 we added missing fields to the plugin response, but we didn't include the manual serialization steps that we need until issue #10470 is resolved."
2022,CSI: display plugin capabilities in verbose status (#12116),"The behaviors of CSI plugins are governed by their capabilities as defined by the CSI specification. When debugging plugin issues, it's useful to know which behaviors are expected so they can be matched against RPC calls made to the plugin allocations. Expose the plugin capabilities as named in the CSI spec in the module output."
2023,docs: add docs for the autoscaler module and module configuration (#12083),
2024,Merge pull request #12122 from hashicorp/b-api-remove-namespace-test-ent-tag,api: remove ent build tag on namespace test file.
2025,api: remove ent build tag on namespace test file.,
2026,CSI: retry claims from client when max claims are reached (#12113),"When the alloc runner claims a volume, an allocation for a previous version of the job may still have the volume claimed because it's still shutting down. In this case we'll receive an error from the server. Retry this error until we succeed or until a very long timeout expires, to give operators a chance to recover broken plugins. Make the alloc runner hook tolerant of temporary RPC failures."
2027,CSI: enforce usage at claim time (#12112),"  Remove redundant schedulable check in module. If a volume   has been created but not yet claimed, its capabilities will be checked   in module at both scheduling time and claim time. We don't   need to also check them in the module method.   Enforce maximum volume claims for writers.   When the scheduler checks feasibility for CSI volumes, the check is   fairly loose: earlier versions of the same job are not counted as   active claims. This allows the scheduler to place new allocations   for the new version of a job, under the assumption that we'll replace   the existing allocations and their volume claims. But when the alloc runner claims the volume, we need to enforce the   active claims even if they're for allocations of an earlier version of   the job. Otherwise we'll try to mount a volume that's currently being   unmounted, and this will cause replacement allocations to frequently   fail.  Enforce single-node reader check for read-only volumes. When the   alloc runner makes a claim for a read-only volume, we only check that   the volume is potentially schedulable and not that it actually has   free read claims."
2028,add go-sockaddr templating support to nomad consul address (#12084),
2029,namespaces: allow enabling/disabling allowed drivers per namespace,
2030,Merge pull request #12107 from hashicorp/use-bbolt,core: swap bolt impl and enable configuring raft freelist sync behavior
2031,docs: emphasize snapshot before upgrading,
2032,csi: tolerate missing plugins on job delete (#12114),"If a plugin job fails before successfully fingerprinting the plugins, the plugin will not exist when we try to delete the job. Tolerate missing plugins."
2033,command: switch from raft-boltdb to raft-boltdb/v2,
2034,client: resolve rebase conflict,
2035,build: disallow old boltdb during build,
2036,agent: switch to go.etc.io/bbolt for state store,This PR modifies the server and client agents to use module as the implementation for their state stores.
2037,core: switch to go.etc.io/bbolt,"This PR swaps the underlying BoltDB implementation from boltdb/bolt to go.etc.io/bbolt. In addition, the Server has a new configuration option for disabling NoFreelistSync on the underlying database. Freelist option: https://github.com/etcd-io/bbolt/blob/master/db.go#L81 Consul equivelent PR: https://github.com/hashicorp/consul/pull/11720"
2038,CSI: allow for concurrent plugin allocations (#12078),"The dynamic plugin registry assumes that plugins are singletons, which matches the behavior of other Nomad plugins. But because dynamic plugins like CSI are implemented by allocations, we need to handle the possibility of multiple allocations for a given plugin type + ID, as well as behaviors around interleaved allocation starts and stops. Update the data structure for the dynamic registry so that more recent allocations take over as the instance manager singleton, but we still preserve the previous running allocations so that restores work without racing. Multiple allocations can run on a client for the same plugin, even if only during updates. Provide each plugin task a unique path for the control socket so that the tasks don't interfere with each other."
2039,CSI: add missing plugin capabilities to api response (#12108),"Detection of the full set of plugin capabilities was added in Nomad 1.1 for the volume creation workflow, but these were not added to the API response for plugins."
2040,csi: fix broken test (#12110),
2041,Fixed scheduler config examples (#12049),
2042,CSI: minor refactoring (#12105), rename method checking that free write claims are available use package-level variables for claim errors semgrep fix for testify
2043,csi: fix mocked modes in volumewatcher test (#12104),The volumewatcher test incorrectly represents the change in attachment and access modes introduced in Nomad 1.1.0 to support volume creation. This leads to a test that happens to pass but only accidentally. Update the test to correctly represent the volume modes set by the existing claims on the test volumes.
2044,Merge pull request #12065 from hashicorp/docs-add-form-link,Adding link to interview form
2045,csi: don't wait to fire initial unmount RPC (#12102),"In PR #11892 we updated the module to unmount the volume locally via the CSI node RPCs before releasing the claim from the server. The timer for this hook was initialized with the retry time, forcing us to wait 1s before making the first unmount RPC calls. Use the new helper for timers to ensure we clean up the timer nicely."
2046,docs: update link to module in Docker task driver (#12101),
2047,Merge pull request #11600 from hashicorp/f-remove-unused-version,core: remove all traces of unused protocol version
2048,docs: add changelog for #11600,
2049,core: remove all traces of unused protocol version,"Nomad inherited protocol version numbering configuration from Consul and Serf, but unlike those projects Nomad has never used it. Nomad's module has always been module. While the code is effectively unused and therefore poses no runtime risks to leave, I felt like removing it was best because:  Nomad's RPC subsystem has been able to evolve extensively without    needing to increment the version number. Nomad's HTTP API has evolved extensively without increment    module. If we want to version the HTTP API in the    future, I doubt this is the mechanism we would choose. The presence of the module configuration    parameter is confusing since module is an important    parameter for operators to consider. Even more confusing is that    there is a distinct Serf protocol version which is included in module output under the heading module. module    is the only protocol version relevant to Nomad developers and    operators. The other protocol versions are either deadcode or have    never changed (Serf). If we were to need to version the RPC, HTTP API, or Serf protocols, I    don't think these configuration parameters and variables are the best    choice. If we come to that point we should choose a versioning scheme    based on the use case and modern best practices -- not this 6+ year    old dead code."
2050,Update autoscaler AWS ASG target docs: AWS keypair can be empty (#11977),
2051,docs: add autoscaler hcloud target plugin link. (#12087),
2052,Merge pull request #11975 from hashicorp/f-connect-debugging,connect: write envoy bootstrap debugging info
2053,Merge pull request #12011 from hashicorp/cc-use-proxyid,connect: bootstrap envoy using -proxy-id
2054,connect: bootstrap envoy using -proxy-id,"This PR modifies the Consul CLI arguments used to bootstrap envoy for Connect sidecars to make use of '-proxy-id' instead of '-sidecar-for'. Nomad registers the sidecar service, so we know what ID it has. The '-sidecar-for' was intended for use when you only know the name of the service for which the sidecar is being created. The improvement here is that using '-proxy-id' does not require an underlying request for listing Consul services. This will make make the interaction between Nomad and Consul more efficient. Closes #10452"
2055,connect: write envoy bootstrap debugging info,"When Consul Connect just works, it's wonderful. When it doesn't work it can be exceeding difficult to debug: operators have to check task events, Nomad logs, Consul logs, Consul APIs, and even then critical information is missing. Using Consul to generate a bootstrap config for Envoy is notoriously difficult. Nomad doesn't even log stderr, so operators are left trying to piece together what went wrong. This patch attempts to provide maximal context which unfortunately includes secrets. Secrets are always restricted to the secrets/ directory. This makes debugging a little harder, but allows operators to know exactly what operation Nomad was trying to perform. What's added:  stderr is sent to alloc/logs/envoy_bootstrap.stderr.0 the CLI is written to secrets/.envoy_bootstrap.cmd the environment is written to secrets/.envoy_bootstrap.env as JSON  Accessing this information is unfortunately awkward: module The above assumes an alloc id that starts with module and a Connect sidecar proxy for a service named module. If the alloc is unable to start successfully, the debugging files are only accessible from the host filesystem."
2056,Merge pull request #12079 from hashicorp/deps-update-raft,deps: upgrade hashicorp/raft to v1.3.5
2057,deps: upgrade hashicorp/raft to v1.3.5,
2058,Merge pull request #12080 from hashicorp/b-fix-gobin-circle,build: BIN value must use single-path GOPATH value
2059,Merge pull request #12082 from hashicorp/f-ui/refactor-namespace,namespace refactoring
2060,build: use single-path GOPATH set in makefile,"When GOBIN is not set, BIN must be set to the single-path workaround value of GOPATH, because Circle."
2061,fix: linting issues and remove remainidn pauseTest,
2062,fix: reflect namespace change volume-detail-test,
2063,fix: prettier related volume-list - test,
2064,fix: prettier related test-failutre task-group-detail,
2065,fix: task-group-detail tests due to namespace changes,URLs have changed - tests need to reflect that.
2066,fix: breadcrumbs allocations due to recent namespace changes, change the breadcrumbs generation to use module adapt tests to reflect new URLs for jobs with namespaces
2067,fix: use module with remaining modules,
2068,fix: pack-detail test,We need to change the way we access module-pages based on recent namespace changes.
2069,fix: anonymous policy test job-details,We need to access job-details differently when they have a namespace due to recent namespace changes - we need to make the tests reflect that.
2070,fix: less cleverness™ when checking currentURL job-details,There is no need to check the namespace query-param anymore with module but some tests still are using this. We refactor the tests to be less clever and check the URL in a more manual approach by explicitly defining how the URL should look like if a job belongs to a namespace.
2071,fix: client-detail-test no default namespace param,Recent changes changed the behavior of not adding the module -namespace - we need to adapt the tests accordingly
2072,fix: allocations page tests regarding job links,Default namespaced jobs don't append the module-id anymore due to recent module changes.
2073,initial base work for implementing sorting and filter across API endpoints (#12076),
2074,Merge pull request #12077 from hashicorp/b-makefile-use-gobin,build: respect GOBIN when using make targets
2075,build: respect GOBIN when using make targets,"This PR updates GNUMakefile to respect $GOBIN if it is set in the environment or via an $GOENV file. Previously we hard-coded the output to $GOPATH/bin, which is not necessarily the desired behavior."
2076,fix: some test fixes module-for-job, less clever™ metaprogramming when checking for expectedURL clicking slices job-client-status-summary needs to change its   behavior and not pass the namespace query-param anymore.
2077,refact: don't pass namespace as query-param in job-subnav,The new ID handling gives us this behavior for free and we don't need to drill the namespace down through all the route-layers anymore.
2078,refact: use module in serialize hook jobs.job,This will give us 'correct' URLs for free when we only pass a module-model to a module that links to the module-routes.
2079,Add module filters to evals and deployment list endpoints (#12034),
2080,fix: job-versions-test,We need to adapt the test due to recent namespace changes.
2081,fix: job-dispatch tests after namespace changes,
2082,feat: improve namespace handling job-route,
2083,refact: use module in job-row links,
2084,refact: render jobs.index template again,
2085,feat: add module-getter job model,
2086,interpolate network.dns block on client (#12021),
2087,CSI: make gRPC client creation more robust (#12057),"Nomad communicates with CSI plugin tasks via gRPC. The plugin supervisor hook uses this to ping the plugin for health checks which it emits as task events. After the first successful health check the plugin supervisor registers the plugin in the client's dynamic plugin registry, which in turn creates a CSI plugin manager instance that has its own gRPC client for fingerprinting the plugin and sending mount requests. If the plugin manager instance fails to connect to the plugin on its first attempt, it exits. The plugin supervisor hook is unaware that connection failed so long as its own pings continue to work. A transient failure during plugin startup may mislead the plugin supervisor hook into thinking the plugin is up (so there's no need to restart the allocation) but no fingerprinter is started.  Refactors the gRPC client to connect on first use. This provides the   plugin manager instance the ability to retry the gRPC client   connection until success. Add a 30s timeout to the plugin supervisor so that we don't poll   forever waiting for a plugin that will never come back up.  Minor improvements: * The plugin supervisor hook creates a new gRPC client for every probe   and then throws it away. Instead, reuse the client as we do for the   plugin manager. * The gRPC client constructor has a 1 second timeout. Clarify that this   timeout applies to the connection and not the rest of the client   lifetime."
2088,Merge pull request #12054 from hashicorp/b-creation-indexes,api: return sorted results in certain list endpoints
2089,api: return sorted results in certain list endpoints,These API endpoints now return results in chronological order. They can return results in reverse chronological order by setting the query parameter ascending=true.  Eval.List Deployment.List
2090,Merge pull request #11955 from hashicorp/f-update-gopsutil,Update gopsutil to 3.21.12
2091,cl: shorten changelog entry,
2092,changelog entry (#12072),
2093,Merge pull request #12066 from hashicorp/f-make-golint-faster,build: allow golangci-lint to use more than 1 core
2094,config: merge ReservableCores in clientConfig (#12044),
2095,Merge pull request #12069 from alrs/scheduler-test-err,scheduler: fix dropped test error
2096,scheduler: fix dropped test error,
2097,build: allow golangci-lint to use more than 1 core,"Since switching to module we have set the module flag, which restricts the tool to using 1 CPU thread. This PR removes the flag so module takes less time on good computers."
2098,Adding link to interview form,
2099,Merge pull request #12052 from hashicorp/b-taskrunner-track-deregistered-call,client: track service deregister call so it's only called once.
2100,csi: volume cli prefix matching should accept exact match (#12051),"The module, module, and module commands accept a prefix argument for the volume ID. Update the behavior on exact matches so that if there is more than one volume that matches the prefix, we should only return an error if one of the volume IDs is not an exact match. Otherwise we won't be able to use these commands at all on those volumes. This also makes the behavior of these commands consistent with module."
2101,csi: provide module env var to plugins (#12050),"The CSI specification says:  The CO SHALL provide the listen-address for the Plugin by way of the module environment variable.  Note that plugins without filesystem isolation won't have the plugin dir bind-mounted to their alloc dir, but we can provide a path to the socket anyways. Refactor to use opts struct for plugin supervisor hook config. The parameter list for configuring the plugin supervisor hook has grown enough where is makes sense to use an options struct similiar to many of the other task runner hooks (ex. template)."
2102,Merge pull request #12053 from marcaurele/fix-typo,doc(typo): technical typo in advertised example
2103,Merge pull request #12041 from hashicorp/b-gh-12040,changelog: add entry for #12040
2104,client: track service deregister call so it's only called once.,"In certain task lifecycles the taskrunner service deregister call could be called three times for a task that is exiting. Whilst each hook caller of deregister has its own purpose, we should try and ensure it is only called once during the shutdown lifecycle of a task. This change therefore tracks when deregister has been called, so that subsequent calls are noop. In the event the task is restarting, the deregister value is reset to ensure proper operation."
2105,reconciler: refactor module (#12033),The allocReconciler's computeGroup function contained a significant amount of inline logic that was difficult to understand the intent of. This commit extracts inline logic into the following intention revealing subroutines. It also includes updates to the function internals also aimed at improving maintainability and renames some existing functions for the same purpose. New or renamed functions include. Renamed functions  handleGroupCanaries -> cancelUnneededCanaries handleDelayedLost -> createLostLaterEvals handeDelayedReschedules -> createRescheduleLaterEvals  New functions  filterAndStopAll initializeDeploymentState requiresCanaries computeCanaries computeUnderProvisionedBy computeReplacements computeDestructiveUpdates computeMigrations createDeployment isDeploymentComplete
2106,docs: add upgrade note and ACL requirements for the job submit endpoint (#12046),
2107,update download to Nomad v1.2.6 (#12042),
2108,Merge pull request #12045 from hashicorp/merge-release-1.2.6-branch,Merge release 1.2.6 branch
2109,prepare for next release,
2110,Merge tag 'v1.2.6' into merge-release-1.2.6-branch,Version 1.2.6
2111,temp: bug in region selector causing failing test,
2112,temp:  csi refactor,
2113,temp:  namespace model refact,
2114,small typo in advertised example,
2115,changelog: add entry for #12040,
2116,Release v1.2.6,
2117,Generate files for 1.2.6 release,
2118,docs: add 1.2.6 to changelog,
2119,scheduler: prevent panic in spread iterator during alloc stop,"The spread iterator can panic when processing an evaluation, resulting in an unrecoverable state in the cluster. Whenever a panicked server restarts and quorum is restored, the next server to dequeue the evaluation will panic. To trigger this state: * The job must have module and a module. * The job must not have a module block. * The job must have a previous version. * The previous version must have a module block and at least one   failed allocation. In this scenario, the desired changes include module. Before the scheduler can place the canary allocation, it tries to find out which allocations can be stopped. This passes back through the stack so that we can determine previous-node penalties, etc. We call module on the stack with the previous version of the job, which will include assessing the module block (even though the results are unused). The task group spread info state from that pass through the spread iterator is not reset when we call module again. When the new job version iterates over the module, it will get an empty module, resulting in an unexpected nil pointer dereference. This changeset resets the spread iterator internal state when setting the job, logging with a bypass around the bug in case we hit similar cases, and a test that panics the scheduler without the patch."
2120,api: prevent excessice CPU load on job parse,Add new namespace ACL requirement for the /v1/jobs/parse endpoint and return early if HCLv2 parsing fails. The endpoint now requires the new module ACL capability or module.
2121,client: check escaping of alloc dir using symlinks,This PR adds symlink resolution when doing validation of paths to ensure they do not escape client allocation directories.
2122,client: fix race condition in use of go-getter,"go-getter creates a circular dependency between a Client and Getter, which means each is inherently thread-unsafe if you try to re-use on or the other. This PR fixes Nomad to no longer make use of the default Getter objects provided by the go-getter package. Nomad must create a new Client object on every artifact download, as the Client object controls the Src and Dst among other things. When Caling Client.Get, the Getter modifies its own Client reference, creating the circular reference and race condition. We can still achieve most of the desired connection caching behavior by re-using a shared HTTP client with transport pooling enabled."
2123,Add changelog,
2124,CSI: use job status not alloc status for plugin updates from summary (#12027),"When an allocation is updated, the job summary for the associated job is also updated. CSI uses the job summary to set the expected count for controller and node plugins. We incorrectly used the allocation's server status instead of the job status when deciding whether to update or remove the job from the plugins. This caused a node drain or other terminal state for an allocation to clear the expected count for the entire plugin. Use the job status to guide whether to update or remove the expected count. The existing CSI tests for the state store incorrectly modeled the updates we received from servers vs those we received from clients, leading to test assertions that passed when they should not. Rework the tests to clarify each step in the lifecycle and rename CSI state store functions for clarity"
2125,docs and changelog for module (#12031),
2126,fingerprint: remove metadata from digitalocean (#12032),
2127,Add config command and config validate subcommand to nomad CLI (#9198),
2128,fingerprint: digitalocean fingerprint test requires metadata header (#12028),
2129,Merge pull request #12026 from hashicorp/f-update-aws,env: update aws cpu configs
2130,env: update aws cpu configs,By running the tools/ec2info tool
2131,scheduler: seed random shuffle nodes with eval ID (#12008),"Processing an evaluation is nearly a pure function over the state snapshot, but we randomly shuffle the nodes. This means that developers can't take a given state snapshot and pass an evaluation through it and be guaranteed the same plan results. But the evaluation ID is already random, so if we use this as the seed for shuffling the nodes we can greatly reduce the sources of non-determinism. Unfortunately golang map iteration uses a global source of randomness and not a goroutine-local one, but arguably if the scheduler behavior is impacted by this, that's a bug in the iteration."
2132,Merge pull request #12024 from hashicorp/docs-update-cl,changelog: update changelog for DO
2133,cl: fix DO name,Co-authored-by: Luiz Aoqui link
2134,changelog: update changelog for DO,
2135,Merge pull request #12015 from kevinschoonover/main,client/fingerprint: add digitalocean fingerprinter
2136,Merge pull request #11936 from hashicorp/ds.ie11-warning,website: display warning in IE 11
2137,address comments,Co-authored-by: Seth Hoenig link
2138,scheduler: recover from panic (#12009),"If processing a specific evaluation causes the scheduler (and therefore the entire server) to panic, that evaluation will never get a chance to be nack'd and cleared from the state store. It will get dequeued by another scheduler, causing that server to panic, and so forth until all servers are in a panic loop. This prevents the operator from intervening to remove the evaluation or update the state. Recover the goroutine from the top-level module methods for each scheduler so that this condition can be detected without panicking the server process. This will lead to a loop of recovering the scheduler goroutine until the eval can be removed or nack'd, but that's much better than taking a downtime."
2139,small fixes,
2140,add digitalocean fingerprinter,
2141,reconciler: improve variable names and extract methods from inline logic (#12010), reconciler: improved variable names and extract methods from inline logic  Co-authored-by: Tim Gross link
2142,fix mTLS certificate check on agent to agent RPCs (#11998),"PR #11956 implemented a new mTLS RPC check to validate the role of the certificate used in the request, but further testing revealed two flaws:  client-only endpoints did not accept server certificates so the      request would fail when forwarded from one server to another. the certificate was being checked after the request was forwarded,      so the check would happen over the server certificate, not the      actual source.  This commit checks for the desired mTLS level, where the client level accepts both, a server or a client certificate. It also validates the cercertificate before the request is forwarded."
2143,style: fix up very long tag word breaking the allocation service table width (#11995),
2144,improve error message on service length (#12012),
2145,feat: display warning in IE 11,
2146,Merge pull request #12002 from hashicorp/dependabot/go_modules/github.com/hashicorp/go-version-1.4.0,build(deps): bump github.com/hashicorp/go-version from 1.3.0 to 1.4.0
2147,Merge pull request #11937 from hashicorp/dependabot/go_modules/google.golang.org/grpc-1.44.0,build(deps): bump google.golang.org/grpc from 1.42.0 to 1.44.0
2148,add semgrep rule to check for potential time.After leaks (#12001),
2149,build(deps): bump github.com/hashicorp/go-version from 1.3.0 to 1.4.0,Bumps link from 1.3.0 to 1.4.0. - link - link - link  updated-dependencies: - dependency-name: github.com/hashicorp/go-version   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link
2150,build(deps): bump google.golang.org/grpc from 1.42.0 to 1.44.0,Bumps link from 1.42.0 to 1.44.0. - link - link  updated-dependencies: - dependency-name: google.golang.org/grpc   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link
2151,Merge pull request #11929 from hashicorp/dependabot/go_modules/github.com/mitchellh/copystructure-1.2.0,build(deps): bump github.com/mitchellh/copystructure from 1.1.1 to 1.2.0
2152,core: log CSI GC cutoff index only on non-forced GC (#11997),Non-CSI garbage collection tasks on the server only log the cutoff index in the case where it's not a forced GC from module. Do the same for CSI for consistency.
2153,raft: default to protocol v3 (#11572),"Many of Nomad's Autopilot features require raft protocol version 3. Set the default raft protocol to 3, and improve the upgrade documentation."
2154,Merge pull request #11983 from hashicorp/b-select-after,cleanup: prevent leaks from time.After
2155,added Int32ToPtr helper function (#11985),
2156,correct task row memory unit  (#11980),
2157,api-docs:  add SysBatchSchedulerEnabled docs (#11973),
2158,Fix health checking for ephemeral poststart tasks (#11945),Update the logic in the Nomad client's alloc health tracker which erroneously marks existing healthy allocations with dead poststart ephemeral tasks as unhealthy even if they were already successful during a previous deployment.
2159,cleanup: prevent leaks from time.After,"This PR replaces use of time.After with a safe helper function that creates a time.Timer to use instead. The new function returns both a time.Timer and a Stop function that the caller must handle. Unlike time.NewTimer, the helper function does not panic if the duration set is <= 0."
2160,Verify TLS certificate on endpoints that are used between agents only (#11956),
2161,Merge pull request #11972 from hashicorp/b-disable-semgrep-structs,build: disable semgrep on structs.go for now
2162,Merge pull request #11976 from hashicorp/b-gh-11950-missed,e2e: moved missed volume test stop command to util helper.
2163,e2e: moved missed volume test stop command to util helper.,
2164,Merge pull request #11971 from hashicorp/merge-release-1.2.5-branch,prepare for next release
2165,prepare for next release,
2166,build: disable semgrep on structs.go for now,
2167,update download to Nomad v1.2.5 (#11969),
2168,Merge pull request #11968 from hashicorp/b-gh-11950,e2e: account for new job stop CLI exit behaviour.
2169,Merge pull request #11966 from hashicorp/deps-no-special-vendor,deps: import libtime the normal way
2170,e2e: account for new job stop CLI exit behaviour.,"PR #11550 changed the job stop exit behaviour when monitoring the deployment. When stopping a job, the deployment becomes cancelled and therefore the CLI now exits with status code 1 as it see this as an error. This change adds a new utility e2e function that accounts for this behaviour."
2171,Merge pull request #11878 from kainoaseto/fix/multi-task-group-canary-deploys,Bugfix: auto-promote canary taskgroups when mixed with non-canary taskgroups
2172,rename test variable names to something a easier to identify,
2173,Merge pull request #11944 from hashicorp/b-validate-plan,core: prevent malformed plans from crashing leader
2174,deps: import libtime the normal way,"Previously we copied this library by hand to avoid vendor-ing a bunch of files related to minimock. Now that we no longer vendor, just import the library normally. Also we might use more of the library for handling module uses, for which this library provides a Context-based solution."
2175,docs: add changelog for #11878,
2176,core: prevent malformed plans from crashing leader,"The Plan.Submit endpoint assumed PlanRequest.Plan was never nil. While there is no evidence it ever has been nil, we should not panic if a nil plan is ever submitted because that would crash the leader."
2177,Release v1.2.5,
2178,Generate files for 1.2.5 release,
2179,docs: add 1.2.5 to changelog,
2180,docs: missing changelog for #11892 (#11959),
2181,docs: missing changelog for #11892 (#11959),
2182,set LAST_RELEASE to 1.2.4 for the 1.2.5 release branch,
2183,CSI: node unmount from the client before unpublish RPC (#11892),"When an allocation stops, the module makes an unpublish RPC to the servers to unpublish via the CSI RPCs: first to the node plugins and then the controller plugins. The controller RPCs must happen after the node RPCs so that the node has had a chance to unmount the volume before the controller tries to detach the associated device. But the client has local access to the node plugins and can independently determine if it's safe to send unpublish RPC to those plugins. This will allow the server to treat the node plugin as abandoned if a client is disconnected and module is set. This will let the server try to send unpublish RPCs to the controller plugins, under the assumption that the client will be trying to unmount the volume on its end first. Note that the CSI module/module RPCs can  return ignorable errors in the case where the volume has already been unmounted from the node. Handle all other errors by retrying until we get success so as to give operators the opportunity to reschedule a failed node plugin (ex. in the case where they accidentally drained a node without module). Fan-out the work for each volume into its own goroutine so that we can release a subset of volumes if only one is stuck."
2184,CSI: move terminal alloc handling into denormalization (#11931), The volume claim GC method and volumewatcher both have logic collecting terminal allocations that duplicates most of the logic that's now in the state store's module method. Copy this logic into the state store so that all code paths have the same view of the past claims. Remove logic in the volume claim GC that now lives in the state store's module method. Remove logic in the volumewatcher that now lives in the state store's module method. Remove logic in the node unpublish RPC that now lives in the state store's module method.
2185,csi: ensure that PastClaims are populated with correct mode (#11932),"In the client's module method, we make an unpublish RPC that includes a claim in the module state and using the mode from the client. But then in the module RPC handler, we query the volume from the state store (because we only get an ID from the client). And when we make the client RPC for the node unpublish step, we use the current volume's view of the mode. If the volume's mode has been changed before the old allocations can have their claims released, then we end up making a CSI RPC that will never succeed. Why does this code path get the mode from the volume and not the claim? Because the claim written by the GC job in module doesn't have a mode. Instead it just writes a claim in the unpublishing state to ensure the volumewatcher detects a ""past claim"" change and reaps all the claims on the volumes. Fix this by ensuring that the module creates past claims for all nil allocations with a correct access mode set."
2186,CSI: resolve invalid claim states (#11890)," csi: resolve invalid claim states on read  It's currently possible for CSI volumes to be claimed by allocations that no longer exist. This changeset asserts a reasonable state at the state store level by registering these nil allocations as ""past claims"" on any read. This will cause any pass through the periodic GC or volumewatcher to trigger the unpublishing workflow for those claims.  csi: make feasibility check errors more understandable  When the feasibility checker finds we have no free write claims, it checks to see if any of those claims are for the job we're currently scheduling (so that earlier versions of a job can't block claims for new versions) and reports a conflict if the volume can't be scheduled so that the user can fix their claims. But when the checker hits a claim that has a GCd allocation, the state is recoverable by the server once claim reaping completes and no user intervention is required; the blocked eval should complete. Differentiate the scheduler error produced by these two conditions."
2187,csi: update leader's ACL in volumewatcher (#11891),"The volumewatcher that runs on the leader needs to make RPC calls rather than writing to raft (as we do in the deploymentwatcher) because the unpublish workflow needs to make RPC calls to the clients. This requires that the volumewatcher has access to the leader's ACL token. But when leadership transitions, the new leader creates a new leader ACL token. This ACL token needs to be passed into the volumewatcher when we enable it, otherwise the volumewatcher can find itself with a stale token."
2188,Update IsEmpty to check for pre-1.2.4 fields (#11930),
2189,website: Add Demandbase tag to consent manager (#11941),  chore: Add Demandbase tag to consent manager   fix: Add services to manager options 
2190,Merge pull request #11711 from hashicorp/f-ui/evaluations-table,feat:  add evaluations view with table
2191,fix:  update eval serializer to latest changes,
2192,ui:  add assert.expect to a11y test,
2193,chore:  fix js linting,
2194,style:  add styling icons and padding to table footer buttons,
2195,feat:  add pagination and filtering to evaluations view,
2196,feat:  add pagination to evaluations.index,
2197,feat:  add meta evaluations,To support pagination on evaluations queries.
2198,feat:  extract status cell logic into component,
2199,fix:  move evaluations template to index and inside page layout,
2200,chore:  run prettier on gutter-menu,
2201,feat:  add evalutions view with table,
2202,CSI: node unmount from the client before unpublish RPC (#11892),"When an allocation stops, the module makes an unpublish RPC to the servers to unpublish via the CSI RPCs: first to the node plugins and then the controller plugins. The controller RPCs must happen after the node RPCs so that the node has had a chance to unmount the volume before the controller tries to detach the associated device. But the client has local access to the node plugins and can independently determine if it's safe to send unpublish RPC to those plugins. This will allow the server to treat the node plugin as abandoned if a client is disconnected and module is set. This will let the server try to send unpublish RPCs to the controller plugins, under the assumption that the client will be trying to unmount the volume on its end first. Note that the CSI module/module RPCs can  return ignorable errors in the case where the volume has already been unmounted from the node. Handle all other errors by retrying until we get success so as to give operators the opportunity to reschedule a failed node plugin (ex. in the case where they accidentally drained a node without module). Fan-out the work for each volume into its own goroutine so that we can release a subset of volumes if only one is stuck."
2203,Update gopsutil to 3.21.12,
2204,Merge pull request #11942 from hashicorp/f-ui/test-tooling,ui:  test tooling
2205,Merge pull request #11951 from hashicorp/b-cgroups-broken-part1-oss,client: change test to not poke cgroupv2 edge case
2206,CSI: move terminal alloc handling into denormalization (#11931), The volume claim GC method and volumewatcher both have logic collecting terminal allocations that duplicates most of the logic that's now in the state store's module method. Copy this logic into the state store so that all code paths have the same view of the past claims. Remove logic in the volume claim GC that now lives in the state store's module method. Remove logic in the volumewatcher that now lives in the state store's module method. Remove logic in the node unpublish RPC that now lives in the state store's module method.
2207,csi: ensure that PastClaims are populated with correct mode (#11932),"In the client's module method, we make an unpublish RPC that includes a claim in the module state and using the mode from the client. But then in the module RPC handler, we query the volume from the state store (because we only get an ID from the client). And when we make the client RPC for the node unpublish step, we use the current volume's view of the mode. If the volume's mode has been changed before the old allocations can have their claims released, then we end up making a CSI RPC that will never succeed. Why does this code path get the mode from the volume and not the claim? Because the claim written by the GC job in module doesn't have a mode. Instead it just writes a claim in the unpublishing state to ensure the volumewatcher detects a ""past claim"" change and reaps all the claims on the volumes. Fix this by ensuring that the module creates past claims for all nil allocations with a correct access mode set."
2208,CSI: resolve invalid claim states (#11890)," csi: resolve invalid claim states on read  It's currently possible for CSI volumes to be claimed by allocations that no longer exist. This changeset asserts a reasonable state at the state store level by registering these nil allocations as ""past claims"" on any read. This will cause any pass through the periodic GC or volumewatcher to trigger the unpublishing workflow for those claims.  csi: make feasibility check errors more understandable  When the feasibility checker finds we have no free write claims, it checks to see if any of those claims are for the job we're currently scheduling (so that earlier versions of a job can't block claims for new versions) and reports a conflict if the volume can't be scheduled so that the user can fix their claims. But when the checker hits a claim that has a GCd allocation, the state is recoverable by the server once claim reaping completes and no user intervention is required; the blocked eval should complete. Differentiate the scheduler error produced by these two conditions."
2209,client: change test to not poke cgroupv2 edge case,"This PR tweaks the TestCpusetManager_AddAlloc unit test to not break when being run on a machine using cgroupsv2. The behavior of writing an empty cpuset.cpu changes in cgroupv2, where such a group now inherits the value of its parent group, rather than remaining empty. The test in question was written such that a task would consume all available cores shared on an alloc, causing the empty set to be written to the shared group, which works fine on cgroupsv1 but breaks on cgroupsv2. By adjusting the test to consume only 1 core instead of all cores, it no longer triggers that edge case. The actual fix for the new cgroupsv2 behavior will be in #11933"
2210,fix:  differentiate commands for circleci and local use,
2211,Merge pull request #11940 from hashicorp/b-docs-add-client-reserved-cores,docs: add module to client reserved config block.
2212,ci: add semgrep (#11934),
2213,ui: move volume link to the source column and fix the link target (#11896),The link target used the volume name instead of the volume id. Fixes issue #11884.
2214,ui:  add local testing script,
2215,ui:  replace qunit start tests with ember-exam start,
2216,ui:  allow parallel test-runs,
2217,ui:  add ember-exam,
2218,Merge pull request #11780 from hashicorp/f-ui/job-page-refactor,fix:   authorization bug for module
2219,ui:  add npm script for running ember test server,
2220,refact:  extract setPolicy into utils,
2221,Update IsEmpty to check for pre-1.2.4 fields (#11930),
2222,refact:  fix tests after contextual job page changes,
2223,ui:  prettify remaining files,
2224,docs: add module to client reserved config block.,
2225,Merge pull request #11927 from hashicorp/b-hcl1-sidecar_task-resources,connect: fix bug where sidecar_task.resources was ignored with hcl1
2226,changelog: use pr number not issue number,
2227,build(deps): bump github.com/mitchellh/copystructure from 1.1.1 to 1.2.0,Bumps link from 1.1.1 to 1.2.0. - link - link  updated-dependencies: - dependency-name: github.com/mitchellh/copystructure   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link
2228,Merge pull request #11920 from hashicorp/dependabot/go_modules/github.com/rs/cors-1.8.2,build(deps): bump github.com/rs/cors from 1.8.0 to 1.8.2
2229,connect: fix bug where sidecar_task.resources was ignored with hcl1,The HCL1 parser did not respect connect.sidecar_task.resources if the connect.sidecar_service block was not set (an optimiztion that no longer makes sense with connect gateways). Fixes #10899
2230,fix integer bounds checks (#11815)," driver: fix integer conversion error  The shared executor incorrectly parsed the user's group into int32 and then cast to uint32 without bounds checking. This is harmless because an out-of-bounds gid will throw an error later, but it triggers security and code quality scans. Parse directly to uint32 so that we get correct error handling.  helper: fix integer conversion error  The autopilot flags helper incorrectly parses a uint64 to a uint which is machine specific size. Although we don't have 32-bit builds, this sets off security and code quality scaans. Parse to the machine sized uint.  driver: restrict bounds of port map  The plugin server doesn't constrain the maximum integer for port maps. This could result in a user-visible misconfiguration, but it also triggers security and code quality scans. Restrict the bounds before casting to int32 and return an error.  cpuset: restrict upper bounds of cpuset values  Our cpuset configuration expects values in the range of uint16 to match the expectations set by the kernel, but we don't constrain the values before downcasting. An underflow could lead to allocations failing on the client rather than being caught earlier. This also make security and code quality scanners happy.  http: fix integer downcast for per_page parameter  The parser for the module query parameter downcasts to int32 without bounds checking. This could result in underflow and nonsensical paging, but there's no server-side consequences for this. Fixing this will silence some security and code quality scanners though."
2231,Merge pull request #11907 from hashicorp/f-state-store-nomad-file,state: move restore functionality into its own file.
2232,build(deps): bump github.com/rs/cors from 1.8.0 to 1.8.2,Bumps link from 1.8.0 to 1.8.2. - link - link  updated-dependencies: - dependency-name: github.com/rs/cors   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link
2233,Merge pull request #11918 from hashicorp/deps-update-api-deps,deps: update api go version and dependencies
2234,Merge pull request #11883 from hashicorp/dependabot/go_modules/github.com/prometheus/client_golang-1.12.0,build(deps): bump github.com/prometheus/client_golang from 1.7.1 to 1.12.0
2235,deps: update api go version and dependencies,This PR sets the minimum Go version for the module submodule to Go 1.17. It also upgrades  - gorilla/websocket 1.4.1 -> 1.4.2  - mitchelh/mapstructure 1.4.2 -> 1.4.3  - stretchr/testify 1.5.1 -> 1.7.0 Closes #11518 #11602 #11528
2236,Merge pull request #11836 from hashicorp/dependabot/go_modules/github.com/hashicorp/memberlist-0.3.1,chore(deps): bump github.com/hashicorp/memberlist from 0.2.2 to 0.3.1
2237,csi: update leader's ACL in volumewatcher (#11891),"The volumewatcher that runs on the leader needs to make RPC calls rather than writing to raft (as we do in the deploymentwatcher) because the unpublish workflow needs to make RPC calls to the clients. This requires that the volumewatcher has access to the leader's ACL token. But when leadership transitions, the new leader creates a new leader ACL token. This ACL token needs to be passed into the volumewatcher when we enable it, otherwise the volumewatcher can find itself with a stale token."
2238,docs: Update volume create/register mount options to use []string example (#11912),The examples for module and module are not setting module using an array of strings. This fixes the issue by changing the example to be module.
2239,Merge pull request #11889 from hashicorp/build-update-circle,build: upgrade circleci configuration
2240,Merge pull request #11876 from hashicorp/e2e-fix-consul-tls,e2e: enable Consul HTTPS port and always restart Nomad systemd unit
2241,Merge pull request #11910 from hashicorp/deps-update-containernetworking,deps: upgrade containernetworking/plugins
2242,deps: add missing cl note,
2243,fix:  no longer need gotoTaskGroup prop,
2244,test: add tests for not auth behavior for job-client-status-summary,
2245,fix:  auth node requests with mirage,
2246,fix:  protect route if not auth,
2247,feat:  add conditional rendering logic to template for not auth concern,
2248,fix:  prevent async request for node relationship on alloc,
2249,fix:  update component props for glimmer syntax,
2250,fix:  update conditional rendering of clients tab,
2251,fix: move node loading to jobs.job route and add auth logic,
2252,"ui: add ""read client"" ability",
2253,refact:  move gotoClients logic down to component,
2254,fix:  remove debugger,
2255,fix:  router expect identifier instead of model for trans to job page,
2256,refact:  move gotoJob to component,
2257,chore:  prettify job/index controller,
2258,chore:  prettify children template,
2259,chore:  prettify jobs index template,
2260,chore:  prettify job-row template,
2261,refact:  move gotoTaskGroup action to component,"Previously, the router service was not available to components. Now that it is, we no longer need to prop-drill this linking action."
2262,chore:  prettify task-groups template,
2263,changelog: fix entry markdown (#11911),
2264,refactor:  compute jobClientStatus in summary backing class component,
2265,refact:  move conditional rendering logic from job-page to job-client-status-summary,
2266,refact:  remove unused backing component classes and extend periodic and param-child to use Glimmer,
2267,refact:  job-page/batch template to use contextual components,
2268,refact:  job-page/parameterized-child template to use contextual components,
2269,refact:  job-page/parameterized template to use contextual components,
2270,refact:  job-page/periodic-child template to use contextual components,
2271,refact:  job-page/periodic template to use contextual components,
2272,refact:  job-page/service template to use contextual components,
2273,refact:  job-page/sysbatch template to use contextual components,
2274,refact:  job-page/system template to use contextual components,
2275,feat:  create job-page contextual component,
2276,fix:  remove sourceMaps false in ember-cli-build,There was previously a bug with sourceMaps that slowed down the build. This issue has been resolved by Ember and now we can expect the default behavior of sourceMaps being enabled in dev and disabled in prod.
2277,ui: prepare rebase for contextual job-page,
2278,deps: upgrade containernetworking/plugins,"Upgrade containernetworking/plugins to v1.0.1 release, along with its transitive dependencies. Closes #11108"
2279,build: upgrade and speedup circleci configuration,This PR upgrades our CI images and fixes some affected tests.   upgrade go-machine-image to premade latest ubuntu LTS (ubuntu-2004:202111-02)   eliminate go-machine-recent-image (no longer necessary)   manage GOPATH in GNUMakefile (see https://discuss.circleci.com/t/gopath-is-set-to-multiple-directories/7174)   fix tcp dial error check (message seems to be OS specific)   spot check values measured instead of specifically 'RSS' (rss no longer reported in cgroups v2)   use safe MkdirTemp for generating tmpfiles   NOT applied: (too flakey)   eliminate setting GOMAXPROCS=1 (build tools were also affected by this setting)   upgrade resource type for all imanges to large (2C -> 4C) 
2280,Merge pull request #11754 from hashicorp/b-ui/fix-linter,ui:  fix linter and prettier
2281,state: move restore functionality into its own file.,
2282,fix: mirage fixtures are randomized so we cant assert.expect,
2283,ui: fix remaining linting errors,
2284,ui:  apply new qunit linting rules to tests,Async tests should use  in integrations tests. Acceptance tests are using Mirage and can't use since we can't know the number of assertions.
2285,ui:  prettify js files,
2286,ui:  upgrade prettier to match 3.28 ember-new-output,
2287,ui:  disable no-string-protype-extensions where its currently in use,
2288,ui:  turn off tagless components linting error,Classic components still use tagName decorator
2289,ui:  turn off no-component-lifecycle-hooks,Classic components use lifecycle hooks.
2290,ui:  turn off no-classic-components,This is a mixed codebase and still uses classic components
2291,ui:  storybook accesses private routing service,
2292,ui:  replace this.render with render test-helper in tests,
2293,ui:  disable linting on files that use controllerFor,
2294,ui:  turn off no-computed-properties-in-native-classes,"We have ~60 uses of computed properties across routes (for watcher system), components, and models."
2295,ui:  turn off no-class-classes rule,We still use classic classes because this is a mixed codebase between Octane and Classic.
2296,ui:  fix auto-fixable linting errors,
2297,ui:  match eslint script with ember-new-output,
2298,"ui:  ignore cache for eslint, to speed up linting",
2299,ui:  match eslintrc with ember-new-output,
2300,ui:  match linting and prettier packages with ember-new-output 3.24,
2301,chore:  add jsconfig to stop experimental decorator warnings,
2302,Merge pull request #11887 from hashicorp/changelog-11793,changelog: manually add entry for #11793
2303,changelog: manually add entry for #11793,
2304,Merge pull request #11855 from hashicorp/deps-swap-pty,deps: pty has new home
2305,deps: pty has new home,github.com/kr/pty was moved to github.com/creack/pty Swap this dependency so we can upgrade to the latest version and no longer need a replace directive.
2306,Merge pull request #11843 from hashicorp/deps-swap-gzip-handler,deps: replace gzip handler
2307,deps: adjust to gzip handler zero length response body,"After swapping gzip handler to use the gorilla library, we must account for a quirk in how zero/minimal length response bodies are delivered. The previous gzip handler was configured to compress all responses regardless of size - even if the data was zero length or below the network MTU. This behavior changed in link which is why we could not upgrade. The Nomad HTTP Client mutates the http.Response.Body object, making a strong assumption that if the Content-Encoding header is set to ""gzip"", the response will be readable via gzip decoder. This is no longer true for the nytimes gzip handler, and is also not true for the gorilla gzip handler. It seems in practice this only makes a difference on the /v1/operator/license endpoint which returns an empty response in OSS Nomad. The fix here is to simply not wrap the response body reader if we encounter an io.EOF while creating the gzip reader - indicating there is no data to decode."
2308,deps: swap gzip handler for gorilla,"This has been pinned since the Go modules migration, because the nytimes gzip handler was modified in version v1.1.0 in a way that is no longer compatible. Pretty sure it is this commit: https://github.com/nytimes/gziphandler/commit/c551b6c3b4b976eafa1a18220b5e21692784d8e2 Instead use handler.CompressHandler from gorilla, which is a web toolkit we already make use of for other things."
2309,build(deps): bump github.com/prometheus/client_golang,Bumps link from 1.7.1 to 1.12.0. - link - link - link  updated-dependencies: - dependency-name: github.com/prometheus/client_golang   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link
2310,Merge pull request #11872 from hashicorp/deps-upgrade-runc,deps: upgrade docker and runc
2311,Merge pull request #11882 from hashicorp/merge-release-1.2.4-branch,Merge release 1.2.4 branch
2312,prepare for next release,
2313,Merge remote-tracking branch 'origin/release-1.2.4' into merge-release-1.2.4-branch,
2314,update download to Nomad v1.2.4 (#11880),
2315,fix auto promote of canary task groups when deploying them alongside rolling deploy taskgroups that do not use the canary deployment system,
2316,remove generated files,
2317,Release v1.2.4,
2318,Generate files for 1.2.4 release,
2319,docs: add 1.2.4 to changelog,
2320,e2e: enable Consul HTTPS port and always restart Nomad systemd unit,
2321,docs: add module metric (#11860),
2322,ui: fix test (#11870),
2323,deps: upgrade docker and runc,"This PR upgrades  - docker dependency to the latest tagged release (v20.10.12)  - runc dependency to the latest tagged release (v1.0.3) Docker does not abide by link, so it is marked +incompatible, and transitive dependencies are upgrade manually. Runc made three relevant breaking changes   cgroup manager .Set changed to accept Resources instead of Cgroup    https://github.com/opencontainers/runc/commit/3f6594675675d4e88901c782462f56497260b1d2   config.Device moved to devices.Device    https://github.com/opencontainers/runc/pull/2679   mountinfo.Mounted now returns an error if the specified path does not exist    https://github.com/moby/sys/blob/mountinfo/v0.5.0/mountinfo/mountinfo.go#L16 "
2324,cli: Add event stream capture to nomad operator debug (#11865),
2325,cli: improve debug error messages (#11507),Improves module error messages when contacting agents that do not have /v1/agent/host endpoints (the endpoint was added in v0.12.0) Part of #9568 and manually tested against Nomad v0.8.7. Hopefully isRedirectError can be reused for more cases listed in #9568
2326,docs: update 1.2.0 upgrade note now that the UI ACL is fixed (#11840),
2327,docs: add HashiBox to the list of community tools (#11861),
2328,changelog: add entry for #11793 (#11862),
2329,Merge pull request #11849 from hashicorp/b-changelog-11848,changelog: add entry for #11848
2330,scheduler: detect and log unexpected scheduling collisions (#11793),
2331,Merge pull request #11820 from hashicorp/f-ui/alloc-legend,feat:  add links to legend items in module
2332,csi: volume deregistration should require exact ID (#11852),"The command line client sends a specific volume ID, but this isn't enforced at the API level and we were incorrectly using a prefix match for volume deregistration, resulting in cases where a volume with a shorter ID that's a prefix of another volume would be deregistered instead of the intended volume."
2333,"csi: when warning for multiple prefix matches, use full ID (#11853)","When the module or module commands get an ID prefix that matches multiple volumes, show the full length of the volume IDs in the list of volumes shown so so that the user can select the correct one."
2334,freebsd: build fix for ARM7 32-bit (#11854),"The size of module fields is architecture dependent, which was reportedly causing a build failure on FreeBSD ARM7 32-bit systems. This changeset matches the behavior we have on Linux."
2335,drivers: set world-readable permissions on copied resolv.conf (#11856),"When we copy the system DNS to a task's module, we should set the permissions as world-readable so that unprivileged users within the task can read it."
2336,chore:  add changelog,
2337,test:  add test stories for clicking allocation summary,
2338,refact:  add data-test-selectors and correct css selectors in summary,
2339,styling:  remove clickable link text decoration override to match new mocks,
2340,refact:  allocation and  child summaries into ember-cli-page-object components,
2341,fix:  typo in data-test-selector,
2342,styling:  update styling to match new figma mocks,
2343,feat:  add clicking functionality to alloc status legend,
2344,changelog: add entry for #11848,
2345,Merge pull request #11842 from hashicorp/b-name-oss-files-consistently,chore: ensure consistent file naming for non-enterprise files.
2346,Merge pull request #11403 from hashicorp/f-gh-11059,agent/docs: add better clarification when top-level data dir needs setting
2347,Merge pull request #11402 from hashicorp/document-client-initial-vault-renew,taskrunner: add clarifying initial vault token renew comment.
2348,Fix log level parsing from lines that include a timestamp (#11838),
2349,Merge pull request #11831 from hashicorp/mods-explain-pinned,mods: explain replace statements
2350,chore: ensure consistent file naming for non-enterprise files.,
2351,Fix ACL requirements for job details UI (#11672),
2352,docs: fix autoscaling Datadog site configuration (#11824),
2353,Merge pull request #11830 from hashicorp/b-validate-reserved-ports,agent: validate reserved_ports are valid
2354,chore(deps): bump github.com/hashicorp/memberlist from 0.2.2 to 0.3.1,Bumps link from 0.2.2 to 0.3.1. - link - link  updated-dependencies: - dependency-name: github.com/hashicorp/memberlist   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link
2355,Merge pull request #11833 from hashicorp/deps-go-getter-v1.5.11,deps: update go-getter to v1.5.11
2356,doc: add changelog for #11830,
2357,agent: validate reserved_ports are valid,Goal is to fix at least one of the causes that can cause a node to be ineligible to receive work: https://github.com/hashicorp/nomad/issues/9506#issuecomment-1002880600
2358,deps: update go-getter to v1.5.11,Pulls in https://github.com/hashicorp/go-getter/pull/348 Fixes the possibility to log an sshkey if a specific error condition is hit.
2359,mods: explain replace statements,
2360,Merge pull request #11827 from hashicorp/cleanup-response-recorder,cleanup: stop referencing depreceted HeaderMap field
2361,cleanup: stop referencing depreceted HeaderMap field,"Remove reference to the deprecated ResponseRecorder.HeaderMap field, instead calling .Response.Header() to get the same data. closes #10520"
2362,Update alert-banner (#11817),Updating banner for edge survey
2363,docs: improve changelog for PR #11783 (#11818),
2364,docs: changelog for PR #11783 (#11812),
2365,metrics: added module metric (#11500),Signed-off-by: Alessandro De Blasis link Co-authored-by: Nate link
2366,Un-break templates when using vault stanza change_mode noop (#11783),"Templates in nomad jobs make use of the vault token defined in the vault stanza when issuing credentials like client certificates. When using change_mode ""noop"" in the vault stanza, consul-template is not informed in case a vault token is re-issued (which can happen from time to time for various reasons, as described in https://www.nomadproject.io/docs/job-specification/vault). As a result, consul-template will keep using the old vault token to renew credentials and - once the token expired - stop renewing credentials. The symptom of this problem is a vault_token file that is newer than the issued credential (e.g., TLS certificate) in a job's /secrets directory. This change corrects this, so that h.updater.updatedVaultToken(token) is called, which will inform stakeholders about the new token and make sure, the new token is used by consul-template. Example job template fragment: module This fix does not alter the meaning of the three change modes of vault  ""noop"" - Take no action ""restart"" - Restart the job ""signal"" - send a signal to the task  as the switch statement following line 232 contains the necessary logic. It is assumed that ""take no action"" was never meant to mean ""don't tell consul-template about the new vault token"". Successfully tested in a staging cluster consisting of multiple nomad client nodes."
2367,replace 'a alloc' with 'an alloc' where appropriate (#11792),
2368,Expose Consul template configuration parameters (#11606),"This PR exposes the following existingmodule configuration options to Nomad jobspec authors in the module stanza.  module  It also exposes the followingmodule configuration to Nomad operators in the module stanza.  module module module module  module   Finally, it adds the following new Nomad-specific configuration to the module stanza that allows Operators to set bounds on what module authors configure.  module  Co-authored-by: Tim Gross link Co-authored-by: Michael Schurter link"
2369,docs: note that clients need to have ACLs enabled (#11799),"Client endpoints such as module are enforced on the client if the API client or CLI has ""line of sight"" to the client. This is already in the Learn guide but having it in the ACL configuration docs would be helpful."
2370,CSI: tests to exercise csi_hook (#11788),"Small refactoring of the allocrunner hook for CSI to make it more testable, and a unit test that covers most of its logic."
2371,docs: new scheduler metrics (#11790)," Fixed name of module metric Added new metrics to metrics reference documentation Expanded definitions of ""waiting"" metrics Changelog entry for #10236 and #10237"
2372,ui: fix CI (#11785),
2373,Emit metrics for eval waitUntil as nomad.nomad.broker.eval_waiting (#10236),
2374,Emit metrics on reschedule later decisions as nomad.client.allocs.reschedule (#10237),
2375,Make number of scheduler workers reloadable (#11593),"Development Environment Changes  Added stringer to build deps  New HTTP APIs  Added scheduler worker config API Added scheduler worker info API  New Internals  (Scheduler)Worker API refactor—Start(), Stop(), Pause(), Resume() Update shutdown to use context Add mutex for contended server data module for the module slice module for the module and   module values    Other  Adding docs for scheduler worker api Add changelog message  Co-authored-by: Derek Strickland link"
2376,Merge pull request #11744 from hashicorp/b-node-copy,Fix Node.Copy()
2377,Merge pull request #11590 from hashicorp/e-ui/breadcrumbs-service,Refactor:  Breadcrumbs Service
2378,csi: reap unused volume claims at leadership transitions (#11776),"When module starts on the leader, it starts a watch on every volume and triggers a reap of unused claims on any change to that volume. But if a reaping is in-flight during leadership transitions, it will fail and the event that triggered the reap will be dropped. Perform one reap of unused claims at the start of the watcher so that leadership transitions don't drop this event."
2379,Fix log streaming missing frames (#11721),Perform one more read after receiving cancel when streaming file from the allocation API
2380,Merge pull request #11762 from hashicorp/b-gh-11681,docs: add 1.2.0 HCLv2 strict parsing upgrade note.
2381,docs: fix attribute name for java version detection (#11764),
2382,docs: add 1.2.0 HCLv2 strict parsing upgrade note.,
2383,docs/tests for multiple HTTP address config (#11760),
2384,agent: support multiple http address in addresses.http (#11582),
2385,api: paginate deployment list and accept wildcard namespace (#11743),"Add module and module handling to module RPC, and allow the use of a wildcard namespace for namespace filtering."
2386,add enterprise downloads page (#11750),
2387,do not initialize copy's slice if nil in original,
2388,website: Upgrade deps (#11709),  Update @hashicorp/react-subnav   Update  &  
2389,add changelog for Node.Copy fix,
2390,core: fix DNS and CPU Core copying,
2391,core: match struct field order in Copy(),
2392,refact:  clean-up breadcrumb invocations,
2393,fix:  remove unecessary breadcrumb,
2394,task runner: fix goroutine leak in prestart hook (#11741),"The task runner prestart hooks take a module so they have the option to exit early if either of two contexts are canceled: from killing the task or client shutdown. Some tasks exit without being shutdown from the server, so neither of the joined contexts ever gets canceled and we leak the module (48 bytes) and its internal goroutine. This primarily impacts batch jobs and any task that fails or completes early such as non-sidecar prestart lifecycle tasks. Cancel the module after the prestart call exits to fix the leak."
2395,deps: upgrade go-getter to 1.5.10 (#11740),The module library was updated to 1.5.9 in #11481 to pick up a bug fix for automatically unpacking uncompressed tar archives. But this version had a regression in git module param behavior and was patched in 1.5.10.
2396,fix host network reserved port fingerprint (#11728),
2397,scheduler: tooling for scheduler benchmarking (#11725),"Adds a package module with some examples of profiling and benchmarking the scheduler, along with helpers for loading real-world data for profiling. This tooling comes out of work done for #11712. These test benchmarks have not been added to CI because these particular profiles are mostly examples and the runs will add an excessive amount of time to CI runs for code that rarely changes in a way that has any chance of impacting performance."
2398,Merge pull request #11669 from hashicorp/ac.home-redirect,fix: redirects website module to module
2399,api: support namespace wildcard in CSI volume list (#11724),
2400,Add support for setting pids_limit in docker plugin config. (#11526),
2401,scheduler: fix quadratic performance with spread blocks (#11712),"When the scheduler picks a node for each evaluation, the module provides at most 2 eligible nodes for the module to choose from. This keeps scheduling fast while producing acceptable results because the results are binpacked. Jobs with a module block (or node affinity) remove this limit in order to produce correct spread scoring. This means that every allocation within a job with a module block is evaluated against all eligible nodes. Operators of large clusters have reported that jobs with module blocks that are eligible on a large number of nodes can take longer than the nack timeout to evaluate (60s). Typical evaluations are processed in milliseconds. In practice, it's not necessary to evaluate every eligible node for every allocation on large clusters, because the module at the base of the scheduler stack produces enough variation in each pass that the likelihood of an uneven spread is negligible. Note that feasibility is checked before the limit, so this only impacts the number of eligible nodes available for scoring, not the total number of nodes. This changeset sets the iterator limit for ""large"" module block and node affinity jobs to be equal to the number of desired allocations. This brings an example problematic job evaluation down from ~3min to ~10s. The included tests ensure that we have acceptable spread results across a variety of large cluster topologies."
2402,chore:  clean-up merge conflict after rebase,
2403,fix:  add ember-a11y-testing-audit-call,
2404,styling: fix opacity for last child in the list,
2405,fix:  test specs should expect to receive breadcrumb titles,
2406,style:  centering and spacing for titled breadcrumbs,
2407,feat:  handle title behavior for job breadcrumb,
2408,refact:  add title to breadcrumb generator,All breadcrumbs do not need a title property because some views drill down by using a tab-based UI (e.g. CSI volumes and the Job Overview) The goal is to help us identify breadcrumbs that are non-descriptive (i.e. breadcrumbs that display as an ID).
2409,style: add styling for title on breadcrumbs,
2410,feat: add title to default breadcrumb component,
2411,update:  add comment to explain loading namespaces in alloc route,
2412,fix:  delete jobs route - ember creates this for us,
2413,fix:  add in for topology route,
2414,fix:  update breadcrumb tests according to new breadcrumb structure,
2415,refactor:  delete unit tests for old breadcrumbs service,
2416,refactor:  delete app-breadcrumbs component file,
2417,refactor:  remove double each in app breadcrumbs,
2418,test:  breadcrumbs functionality,
2419,chore:  write tests for trigger component,
2420,fix:  handle case for async relationships,
2421,fix:  resolve parent on job still issue with alloc job async relationship,
2422,feat:  create trigger component,Create Trigger Component and deprecate Breadcrumb-Utils pattern.
2423,fix:  delete old breadcrumbs and replace with bucket,
2424,fix:  delete state from routes and move to controllers and add renderless component to templates,
2425,"feat:  create bucket service to register, deregister and store breadcrumbs",
2426,chore:  edit mirage scenario to populate csi,
2427,Mesh Gateway doc enhancements (#11354),"  Mesh Gateway doc enhancements   I believe this line should be corrected to add mesh as one of the choices  I found that we are not setting this meta, and it is a required element for wan federation. I believe it would be helpful and potentially time saving to note that right here."
2428,Fix 'check calculations' link (#11420),
2429,"changelog: add entries for #11555, #11557, and #11687 (#11706)",
2430,api: respect wildcard in evaluations list API (#11710),
2431,Merge pull request #11578 from hashicorp/f-ui/clickable-links-allocs,clickable links in allocations chart
2432,chore: fixup inconsistent method receiver names.  (#11704),
2433,Merge pull request #11545 from hashicorp/f-ui/add-alloc-filters-on-table,Add Allocation Filters in Client View
2434,Merge pull request #11544 from hashicorp/f-ui/add-filters-to-allocs,Add filters to Allocations
2435,ui: fix action call to set filter query param,
2436,ui: fix volume serializer tests,
2437,ui: fix allocation serializer tests,
2438,"ui: fix job allocation filter by status, remove version filter, and add tests",
2439,ui: fix file formating,
2440,changelog: fix entry for #11544,
2441,ui: fix linting,
2442,changelog: add entry for #11545,
2443,ui: fix task group alloc filter and add tests,
2444,ui: display empty message in the client details page if there are no allocations to show,
2445,ui: fix client details page alloc status filter and replace task group with namespace and job,
2446,fix:  more descriptive parameters in sort function,Co-authored-by: Luiz Aoqui link
2447,fix:  remove eslint disable indent,
2448,Merge pull request #11697 from hashicorp/f-raft-state-err,cli: return error from raft commands if db is open
2449,cli: return error from raft commands if db is open,"Before this change trying to run module on an inuse raft.db would cause the command to block until the agent using raft.db is closed. After this change the command will block for 1s before returning a (hopefully) helpful error message. This change also sets the ReadOnly mode on the underlying BoltDb to ensure diagnostics make no changes to the underlying store. We have no evidence this has ever occurred, but it seems like a useful safety measure. No changelog added since this is a minor tweak in a ""new"" feature (it was hidden in previous relases)."
2450,docs: add v1.2.0 upgrade guide about Nomad UI ACL change for job details page (#11689),
2451,docs: add more references and examples to the module block (#11691),
2452,website: Disable alert banner (#11688),
2453,cli: stream raft logs to operator raft logs subcommand (#11684),The module command uses a raft helper that reads in the logs from raft and serializes them to JSON. The previous implementation returned the slice of all logs and then serializes the entire object. Update the helper to stream the log entries and then serialize them as newline-delimited JSON.
2454,feat:  add sliceClick to job-page/summary,
2455,chore:  prettify job-page/summary,
2456,cli: unhide advanced operator raft debugging commands (#11682),The module and module subcommands for inspecting on-disk raft state were hidden and undocumented. Expose and document these so that advanced operators have support for these tools.
2457,module command (#11675),Use the new filtering and pagination capabilities of the module RPC to provide filtering and pagination at the command line. Also includes note that module is deprecated and will be replaced with a single evaluation view in a future version of Nomad.
2458,cli: ensure module flag is respected by module (#11678),"When a cluster doesn't have a leader, the module command can safely use stale queries to gracefully degrade the consistency of almost all its queries. The query parameter for these API calls was not being set by the command. Some module package queries do not include module because they target a specific agent, but they can potentially be forwarded to other agents. If there is no leader, these forwarded queries will fail. Provide methods to call these APIs with module."
2459,api: return error when module status is not module (#11644),
2460,website: Copy updates (#11677),
2461,website: Update website Docker image (#11667),
2462,feat: versioned docs (#11407),
2463,provide module flag for job/alloc stop (#11596),"Some operators use very long group/task module settings to safely drain network connections to their workloads after service deregistration. But during incident response, they may want to cause that drain to be skipped so they can quickly shed load. Provide a module flag on the module and module commands that bypasses the delay. This sets a new desired transition state on the affected allocations that the allocation/task runner will identify during pre-kill on the client. Note (as documented here) that using this flag will almost always result in failed inbound network connections for workloads as the tasks will exit before clients receive updated service discovery information and won't be gracefully drained."
2464,fix: redirects /home to /,
2465,Merge pull request #11665 from hashicorp/merge-release-1.2.3-branch,Merge release 1.2.3 branch
2466,prepare for next release,
2467,Merge tag 'v1.2.3' into merge-release-1.2.3-branch,Version 1.2.3
2468,trigger Vercel pipeline,
2469,update download to Nomad v1.2.3 (#11664),
2470,Release v1.2.3,
2471,Generate files for 1.2.3 release,
2472,docs: add 1.2.3 to changelog,
2473,golang security update 1.17.5,
2474,evaluations list pagination and filtering (#11648),"API queries can request pagination using the module and module fields of module, when supported by the underlying API. Add a module field to the module so that we have a common field across RPCs to tell the caller where to resume paging from on their next API call. Include this field on the module as well so that it's available for future versions of List HTTP APIs that wrap the response with module rather than returning a simple list of structs. In the meantime callers can get the module. Add pagination to the module RPC by checking for pagination token and page size in module. This will allow resuming from the last ID seen so long as the query parameters and the state store itself are unchanged between requests. Add filtering by job ID or evaluation status over the results we get out of the state store. Parse the query parameters of the module API into the arguments expected for filtering in the RPC call."
2475,feat(website): extract module module docs (#11584),Co-authored-by: Luiz Aoqui link Co-authored-by: Mike Nomitch link
2476,Update the banner (#11656),
2477,Add OpenAPI instructions to RPC Endpoint Checklist (#11654),
2478,CLI: Return non-zero exit code when deployment fails in module (#11550), Exit non-zero from run command if deployment fails Fix typo in deployment monitor introduced in 0edda11
2479,ui: revert default mirage scenario to topoMedium and set product links in all scenarios (#11649),
2480,UI: Add tests for prodcut links (#11645),
2481,CI: don't run unit tests over docs backports (#11643),"We don't run tests over documentation PRs marked by the branch prefix module. With the new backport assistant, that should also include branches with the prefix module"
2482,docs: improve docs for troubleshooting and monitoring scheduler (#11623),"This changeset adds more specific recommendations as to what metrics to monitor, and what resources should be examined during incident response. It also renames the ""Telemetry"" section to ""Monitoring Nomad"" to surface the material better and distinguish it from the ""Metric Reference"". Co-authored-by: Charlie Voiselle link"
2483,website: Upgrade  to latest (#11615),  Update @hashicorp/react-hashi-stack-menu   Upgrade to latest   One last upgrade 
2484,cli: Add var args to plan output. (#11631),
2485,fix: backport release branch target (#11627),
2486,Merge pull request #11630 from hashicorp/f-add-license-metric-doc,docs: add license expiry metric to metrics website doc.
2487,ui: cleanup server start script package.json (#11622),
2488,docs: add license expiry metric to metrics website doc.,
2489,mention module in addition to module (#11587),
2490,feat: module (#11613),
2491,scheduler: config option to reject job registration (#11610),"During incident response, operators may find that automated processes elsewhere in the organization can be generating new workloads on Nomad clusters that are unable to handle the workload. This changeset adds a field to the module API that causes all job registration calls to be rejected unless the request has a management ACL token."
2492,website: bump deps to fix print styles (#11365),  website: bump deps to fix print styles   website: fix up print styles   fix: hashi-stack-menu print selector 
2493,Add change log entry for PR 11592 (#11609),
2494,hclfmt on some config files (#11611),
2495,Fix Vault E2E TLS config (#11483), Update e2e/terraform configuration for Vault and default to mtls=true
2496,Override TLS flags individually for meta commands (#11592),  Override TLS flags individually for meta commands   Update command/meta.go   Co-authored-by: Tim Gross link Co-authored-by: Tim Gross link
2497,changelog: new metrics in Nomad Enterprise (#11591),This changelog is for a PR that landed in Nomad Enterprise only.
2498,Merge pull request #11579 from hashicorp/b-getscalingpolicy-rpc-index-response,rpc: fix scaling policy get index response when policy is found.
2499,client: respect module after connection loss (#11585),"The module configuration block tells the Nomad client whether to use Consul service discovery to find Nomad servers. By default it is set to module, but contrary to the documentation it was only respected during the initial client registration. If a client missed a heartbeat, failed a module RPC, or if there was no Nomad leader, the client would fallback to Consul even if module was set to module. This changeset returns early from the client's trigger for Consul discovery if the module field is set to module."
2500,ui: change Consul/Vault base URL field name (#11589),"Give ourselves some room for extension in the UI configuration block by naming the field module, which will let us have an module. Fix the template path to ensure we're getting the right value from the API."
2501,Merge pull request #11577 from hashicorp/b-gh-11576,docs: add deprecation note to old style network task env vars.
2502,Merge pull request #11586 from hashicorp/use-case-updates,Updates use cases
2503,Updates use cases,
2504,docs: module takes a slice of strings (#11583),"The module option takes a slice of strings, not a comma-separated string like the flags passed to module."
2505,changelog: add entry for #11579,
2506,rpc: fix scaling policy get index response when policy is found.,"When GetPolicy is called within the scaling handler, the index table was being used to populate the reply index irregardless of whether the policy was found or not. This change fixes that behaviour so that the policy modify index is used when the policy lookup is successful."
2507,docs: add deprecation note to old style network task env vars.,
2508,Merge pull request #11573 from pavel-github/patch-1,docs: fix typo in the comment
2509,docs: fix typo in the comment,comment in the source code for Logger: thhe -> the
2510,docs: document new Prometheus configuration for the Autoscaler APM plugin (#11562),
2511,config: fix test-only failures in UI handler setup (#11571),"The module test never starts the agent so it had an incomplete configuration, which caused panics in the test. Fix the configuration. The PR #11555 had a branch name like module which caused CI to skip the unit tests over the HTTP handler setup, so this wasn't caught in PR review."
2512,docs: add CLI and config docs for the Autoscaler policy source config (#11559),
2513,Merge pull request #11570 from hashicorp/merge-release-1.2.2-branch,Merge release 1.2.2 branch
2514,prepare for next release,
2515,Merge remote-tracking branch 'origin/release-1.2.2' into merge-release-1.2.2-branch,
2516,update download to Nomad v1.2.2 (#11569),
2517,docs: add upgrade guide notes for Nomad 1.2.2 (#11567),
2518,Merge pull request #11557 from hashicorp/f-ui/consul-vault-link,feat:  🎸 add consul and vault links to global header
2519,remove generated files,
2520,Release v1.2.2,
2521,Generate files for 1.2.2 release,
2522,docs: add 1.2.2 to changelog,
2523,scheduler: fix panic in system jobs when nodes filtered by class (#11565),"In the system scheduler, if a subset of clients are filtered by class, we hit a code path where the module has been copied, but the module method does not instantiate the various maps. This leads to an assignment to a nil map. This changeset ensures that the maps are non-nil before continuing. The module method relies on functions in the module package that all return nil slices or maps when passed zero-length inputs. This changeset to fix the panic bug intentionally defers updating those functions because it'll have potential impact on memory usage. See https://github.com/hashicorp/nomad/issues/11564 for more details."
2524,scheduler: fix panic in system jobs when nodes filtered by class (#11565),"In the system scheduler, if a subset of clients are filtered by class, we hit a code path where the module has been copied, but the module method does not instantiate the various maps. This leads to an assignment to a nil map. This changeset ensures that the maps are non-nil before continuing. The module method relies on functions in the module package that all return nil slices or maps when passed zero-length inputs. This changeset to fix the panic bug intentionally defers updating those functions because it'll have potential impact on memory usage. See https://github.com/hashicorp/nomad/issues/11564 for more details."
2525,config: UI configuration block with Vault/Consul links (#11555),Add module block to agent configuration to enable/disable the web UI and provide the web UI with links to Vault/Consul.
2526,tools: update virtualbox networking configuration (#11561),"As of VirtualBox 6.1.28, host-only networks are restricted to module by default, so spinning up the Vagrant boxes with secondary networks fail with an error module. Update the IP configuration of the Vagrant boxes to fall within the allowed range so that we don't need to ask developers from the community to make VirtualBox configuration updates outside of their normal Vagrant use."
2527,chore:  changelog entry,
2528,fix:  add job version filter,
2529,fix:  filter callbacks use different param,
2530,Don't emit scaling event error when a deployment is underway (#11556),
2531,Merge pull request #11535 from hashicorp/docs-vault-token,docs: clarify vault.token only required on servers
2532,core: allow setting and propagation of eval priority on job de/registration  (#11532),"This change modifies the Nomad job register and deregister RPCs to accept an updated option set which includes eval priority. This param is optional and override the use of the job priority to set the eval priority. In order to ensure all evaluations as a result of the request use the same eval priority, the priority is shared to the allocReconciler and deploymentWatcher. This creates a new distinction between eval priority and job priority. The Nomad agent HTTP API has been modified to allow setting the eval priority on job update and delete. To keep consistency with the current v1 API, job update accepts this as a payload param; job delete accepts this as a query param. Any user supplied value is validated within the agent HTTP handler removing the need to pass invalid requests to the server. The register and deregister opts functions now all for setting the eval priority on requests. The change includes a small change to the DeregisterOpts function which handles nil opts. This brings the function inline with the RegisterOpts."
2533,feat:  🎸 add consul and vault links to global header,
2534,Merge pull request #11554 from hashicorp/merge-release-1.2.1-branch,Merge release 1.2.1 branch
2535,prepare for next release,
2536,Merge tag 'v1.2.1' into merge-release-1.2.1-branch,Version 1.2.1
2537,update download to Nomad v1.2.1 (#11553),
2538,feat:  add filters to alloc table in task group view,
2539,fix:  re-order multiselect and search boxes,
2540,feat:  add taskgroup filter to alloc table,
2541,feat:  add filter client allocations table,
2542,disable eslint for indentation,
2543,feat:  add taskgroup filter to alloc,
2544,feat:  add client status filter,
2545,feat:  add status filter to allocations,
2546,Release v1.2.1,
2547,Generate files for 1.2.1 release,
2548,docs: add 1.2.1 to changelog,
2549,qemu: add module to sandbox VM command line inputs,"The QEMU driver allows arbitrary command line options, but many of these options give access to host resources that operators may not want to expose such as devices. Add an optional allowlist to the plugin configuration so that operators can limit the resources for QEMU."
2550,Merge pull request #11541 from hashicorp/f-add-jobstopglobal-website-api-docs,docs: add global query param to API job deregister endpoint.
2551,Merge pull request #11538 from hashicorp/b-gh-11536,terraform: update installed version used to 1.0.11.
2552,docs: add global query param to API job deregister endpoint.,
2553,terraform: update installed version used to 1.0.11.,
2554,docs: clarify vault.token only required on servers,"While it is clarified toward the bottom of this page, I've seen people go to great lengths to configure tokens for clients anyway, so I think it's worth noting on the parameter's docs as well."
2555,changelog: add entries for v1.1.7 and v1.0.13 (#11527),
2556,build(deps): bump github.com/hashicorp/cronexpr from 1.1.0 to 1.1.1 in /api (#11132), build(deps): bump github.com/hashicorp/cronexpr in /api  Bumps link from 1.1.0 to 1.1.1. - link - link  updated-dependencies: - dependency-name: github.com/hashicorp/cronexpr   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link  go mod tidy  Co-authored-by: dependabot[bot] link Co-authored-by: Tim Gross link
2557,changelog batch (#11517),
2558,api: return 404 for alloc FS list/stat endpoints (#11482)," api: return 404 for alloc FS list/stat endpoints  If the alloc filesystem doesn't have a file requested by the List Files or Stat File API, we currently return a HTTP 500 error with the expected ""file not found"" error message. Return a HTTP 404 error instead.  update FS Handler  Previously the FS handler would interpret a 500 status as a 404 in the adapter layer by checking if the response body contained the text  or is the response status was 500 and then throw an error code for 404. Co-authored-by: Jai Bhagat link"
2559,deps: update go-getter to 1.5.9 (#11481),"go-getter 1.5.9 includes a patch in 1.5.6 that automatically unpacks uncompressed tar archives. Previously Nomad only unpacked compressed archives, but documented that it unpacked all archives."
2560,"Refactor sendAck(3) into sendAck(2),sendNack(2),sendAcknowledgement(3) (#11506)",
2561,build(deps): bump github.com/kr/pretty from 0.1.0 to 0.3.0 in /api (#11135), build(deps): bump github.com/kr/pretty from 0.1.0 to 0.3.0 in /api  Bumps link from 0.1.0 to 0.3.0. - link - link  updated-dependencies: - dependency-name: github.com/kr/pretty   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link  update in core as well and tidy  Co-authored-by: dependabot[bot] link Co-authored-by: Tim Gross link
2562,build(deps): bump github.com/aws/aws-sdk-go from 1.38.20 to 1.42.6 (#11515),Bumps link from 1.38.20 to 1.42.6. - link - link - link  updated-dependencies: - dependency-name: github.com/aws/aws-sdk-go   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
2563,build(deps): bump github.com/mitchellh/mapstructure in /api (#11188),Bumps link from 1.3.3 to 1.4.2. - link - link - link  updated-dependencies: - dependency-name: github.com/mitchellh/mapstructure   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
2564,build(deps): bump github.com/mitchellh/mapstructure from 1.4.1 to 1.4.2 (#11325),Bumps link from 1.4.1 to 1.4.2. - link - link - link  updated-dependencies: - dependency-name: github.com/mitchellh/mapstructure   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
2565,build(deps): bump github.com/fatih/color from 1.9.0 to 1.13.0 (#11324),Bumps link from 1.9.0 to 1.13.0. - link - link  updated-dependencies: - dependency-name: github.com/fatih/color   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
2566,build(deps): bump github.com/rs/cors from 1.7.0 to 1.8.0 (#11323),Bumps link from 1.7.0 to 1.8.0. - link - link  updated-dependencies: - dependency-name: github.com/rs/cors   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
2567,build(deps): bump github.com/hashicorp/go-cleanhttp in /api (#11133),Bumps link from 0.5.1 to 0.5.2. - link - link  updated-dependencies: - dependency-name: github.com/hashicorp/go-cleanhttp   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
2568,build(deps): bump github.com/mitchellh/go-testing-interface in /api (#11136),Bumps link from 1.0.0 to 1.14.1. - link - link  updated-dependencies: - dependency-name: github.com/mitchellh/go-testing-interface   dependency-type: direct:production   update-type: version-update:semver-minor ... Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
2569,Merge pull request #11504 from hashicorp/b-update-go-metrics-dep,deps: update armon/go-metrics to v0.3.10.
2570,client: emit max_memory metric (#11490),
2571,Merge release 1.2.0 branch (#11513),
2572,update website banner (#11512),
2573,update download to Nomad v1.2.0 (#11511),
2574,docs: add note about the Nomad APM autoscaling plugin and scaling cluster to zero (#11494),
2575,docs: remove mutual-exclusion between node class and datacenter in scaling policies (#11499),
2576,Release v1.2.0,
2577,Generate files for 1.2.0 release,
2578,docs: add 1.2.0 to changelog,
2579,changelog: add entry for #11504,
2580,deps: update armon/go-metrics to v0.3.10.,
2581,Merge release 1.2.0 rc1 branch (#11486),
2582,add Nomad v1.2.0-rc1 download box (#11485),
2583,docs: module is in Megabytes not bytes (#11468),
2584,Merge pull request #11465 from hashicorp/ui-update-deps,Update UI dependencies
2585,ui: update node version in GitHub Actions,
2586,cli: refactor operator debug capture (#11466), debug: refactor Consul API collection debug: refactor Vault API collection debug: cleanup test timing debug: extend test to multiregion debug: save cmdline flags in bundle debug: add cli version to output Add changelog entry
2587,ui: upgrade xterm 4.10.0 -> 4.15.0 and xterm-addon-fit 0.3.0 -> 0.5.0,
2588,ui: upgrade testem 3.2.0 -> 3.6.0,
2589,ui: upgrade sass 1.32.6 -> 1.43.4,
2590,ui: upgrade qunit-dom 1.6.0 -> 2.0.0,
2591,ui: upgrade query-string 5.1.1 -> 7.0.1,
2592,ui: upgrade pretender 3.4.3 -> 3.4.7,
2593,ui: upgrade lru_map 0.3.3 -> 0.4.1,
2594,ui: upgrade lint-staged 10.5.3 -> 11.2.6,
2595,ui: upgrade glob 4.5.3 -> 7.2.0,
2596,ui: minor fixes,
2597,ui: upgrade flat 4.1.1 -> 5.0.2,
2598,ui: fix after ugrading d3-selection,
2599,ui: upgrade d3-selection 1.4.2 -> 3.0.0,
2600,ui: upgrade dependency d3-transition 1.3.2 -> 3.0.1,
2601,ui: upgrade dependency d3-time-format 2.3.0 -> 4.0.0,
2602,ui: fix tests broken by d3-format upgrade,
2603,ui: upgrade dependency d3-shape 1.3.7 -> 3.0.1,
2604,ui: fix tests broken by d3-format upgrade,
2605,ui: upgrade d3-scale 1.0.7 -> 4.0.2,
2606,ui: upgrade d3-format 1.4.5 -> 3.0.1,
2607,ui: upgrade d3-axis 1.0.12 -> 3.0.0,
2608,ui: upgrade d3-array 2.11.0 -> 3.1.1,
2609,ui: upgrade core-js 3.0.0 -> 3.19.1,
2610,up: upgrade code-js 2.6.12 -> 3.0.0,
2611,ui: upgrade codemirror 5.59.2 -> 5.63.3,
2612,ui: upgrade bulma 0.8.2 -> 0.9.3,
2613,ui: upgrade bulma 0.7.5 -> 0.8.2,
2614,ui: upgrade bulma 0.6.1 -> 0.7.5,
2615,ui: update babel-loader 8.2.2 -> 8.2.3,
2616,ui: upgrade anser 1.4.10 -> 2.1.0,
2617,upgrade @hashicorp/structure-icons 1.8.1 -> 1.9.2,
2618,ui: upgrade @ember/optional-features 1.3.0 -> 2.0.0,
2619,ui: upgrade @babel/plugin-proposal-object-rest-spread @babel/plugin-transform-member-expression-literals 7.12.1 -> 7.16.0,
2620,build: bump go version to 1.17.3 (#11461),
2621,Merge pull request #11447 from pangratz/upgrade-ember-data-and-model-fragments,Upgrade ember data to 3.24 and model fragments to 5.0.0-beta.2
2622,Merge pull request #11426 from hashicorp/b-set-dereg-eval-priority-correctly,rpc: set the deregistration eval priority to the job priority.
2623,Merge pull request #11429 from hashicorp/b-set-scale-eval-priority-correctly,rpc: set the job scale eval priority to the job priority.
2624,cli: show module in module (#11432),"Enhance the CLI in order to return the host network in two flavors  (default, verbose) of the module command. Fixes: #11223. Signed-off-by: Alessandro De Blasis link"
2625,Merge pull request #11444 from hashicorp/b-update-apidocs-alloclist-sample-resp,docs: update API alloc list sample response to be current.
2626,Added a module flag to allow for lenient hcl variable parsing. (#11284),Co-authored-by: James Rasell link
2627,chore: upgrade ember-data to 3.24,
2628,chore: upgrade ember-data to 3.20,
2629,chore: upgrade ember-data to 3.16 (and ember-data-model-fragments to 5.0.0-beta.2),
2630,fix: ensure reloading an allocation doesn't result in an infinite loop,"module has differnt semantics for reloading, as it will reload the record in the background and immediately resolve [1]. By using the stores' findRecord and specifying module, we make sure we await the response from the server and hereby have the complete record once we continue in the code. Using module causes and infinite loop when we upgrade ember-data to 3.16 (and model fragments to 5.0.0-beta.2). [1] This is, unless module on the adapter returns false, but it's true by default."
2631,Merge pull request #11165 from hashicorp/b-gh-11149,jobspec2: ensure consistent error handling between var-file & var.
2632,test: ensure we return a valid JSON response,An empty string is not a valid JSON response which is expected by this endpoint.
2633,Merge pull request #11446 from hashicorp/b-fixup-11167-changelog,changelog: fixup entry extension for #11167
2634,changelog: add entry for #11165,
2635,changelog: fixup entry extension for #11167,
2636,Raft Debugging Improvements (#11414),
2637,Merge pull request #11333 from hashicorp/assareh-patch-1,"exactly one of ingress, terminating, or mesh must be configured"
2638,docs: update API alloc list same response to be current.,
2639,Merge pull request #11416 from hashicorp/f-rejected-info,core: bump rejected plans from debug -> info
2640,Merge pull request #11334 from hashicorp/f-chroot-skip-allocdir,client: never embed alloc_dir in chroot
2641,Remove example associated with deprecated nomad-spark (#11441),
2642,Merge pull request #11440 from sara-gawlinski/patch-1,Update alert-banner.js
2643,Update alert-banner.js,Add banner for Nomad Packs for Pack contest
2644,chore: react-subnav (#11437),
2645,Parse module block in HCL1 (#11423),
2646,docs: update podman driver documentation (#11300),
2647,add module redirect and link to in in plan reject log message,
2648,"Revert ""Return SchedulerConfig instead of SchedulerConfigResponse struct (#10799)"" (#11433)",
2649,Merge pull request #11425 from hashicorp/b-add-timeout-consul-docs,docs: document Consul timeout config parameter.
2650,Merge pull request #11430 from hashicorp/f-update-script-install-versions,scripts: install latest version of Consul and Vault.
2651,scripts: install latest version of Consul and Vault.,
2652,changelog: add entry for #11429,
2653,rpc: set the job scale eval priority to the job priority.,
2654,changelog: add entry for #11426,
2655,Merge pull request #11411 from hashicorp/f-gh-11406,cli: add json and template flag opts to acl bootstrap command.
2656,rpc: set the deregistration eval priority to the job priority.,"Previously when creating an eval for job deregistration, the eval priority was set to the default value irregardless of the job priority. In situations where an operator would want to deregister a high priority job so they could re-register; the evaluation may get blocked for some time on a busy cluster because of the deregsiter priority. If a job had a lower than default priority and was deregistered, the deregister eval would get a priority higher than that of the job. If we attempted to register another job with a higher priority than this, but still below the default, the deregister would be actioned before the register. Both situations described above seem incorrect and unexpected from a user prespective. This fix modifies to behaviour to set the deregister eval priority to that of the job, if available. Otherwise the default value is still used."
2657,docs: document Consul timeout config parameter.,
2658,Making RPC Upgrade mode reloadable. (#11144)," Making RPC Upgrade mode reloadable. Add suggestions from code review remove spurious comment switch to require(t,...) form for test. Add to changelog"
2659,Allow using specific object ID on diff (#11400),
2660,core: bump rejected plans from debug -> info,As we have continued to see reports of #9506 we need to elevate this log line as it is the only way to detect when plans are being erroneously rejected. Users who see this log line repeatedly should drain and restart the node in the log line. This seems to workaorund the issue. Please post any details on #9506!
2661,Merge pull request #11408 from VaultVulp/patch-1,Fix typo in documentation
2662,changelog: add entry for #11411.,
2663,docs: update acl bootstrap command to show json and template opts.,
2664,cli: add json and template flag opts to acl boostrap command.,
2665,Fix typo in documentation,
2666,taskrunner: add clarifying initial vault token renew comment.,
2667,agent: clarify error info when data dir needs setting.,
2668,Merge pull request #11338 from hashicorp/f-expose-nomad-consul-vagrant-linux,vagrantfile: expose Nomad and Consul APIs to local machine.
2669,docs: clarify server data_dir config needs top-level data_dir cfg.,
2670,debug: update default node-id and docs (#11398), debug: default node-id to all debug: align cli help and website documentation
2671,logging: Log the cause behind agent startup failure (#11353),"Log the failure error when the agent fails to start. Previously, the agent startup failure error would be emitted to the command UI but not logged. So it doesn't get emitted to syslog or module if they are set, and it makes debugging much harder. Also, logging the error again before exit makes the error more visible: previously, the operator needed to scroll to the top to find the error. On a sample failure, the output will look like: module This change adds the final module message. It's easy to miss the module above."
2672,Replaces accidental use of Vault with Nomad (#11355),
2673,vault: set JobID in Vault metadata (#11397),Closes: #11395 .
2674,scheduler: stop allocs in unrelated nodes (#11391),"The system scheduler should leave allocs on draining nodes as-is, but stop node stop allocs on nodes that are no longer part of the job datacenters. Previously, the scheduler did not make the distinction and left system job allocs intact if they are already running. I've added a failing test first, which you can see in https://app.circleci.com/jobs/github/hashicorp/nomad/179661 . Fixes https://github.com/hashicorp/nomad/issues/11373"
2675,"Fix arm64 panics by updating google/snappy library to latest, 0.0.4 (#11396)","Pick up https://github.com/golang/snappy/pull/56 to handle arm64 architectures to fix panics. tldr; Golang 1.16 changed module implementation for arm64 requiring additional cpu registers that snappy wasn't preserving in its assembly implementation. Other projects have experienced this issue as well, searching for module on your favorite search engine will reveal some.  Vault updated the dependency earlier this August: https://github.com/hashicorp/vault/pull/12371 . I believe this issue affects Nomad 1.2.x and 1.1.x. Nomad 1.0.x use Golang 1.15 and isn't affected. However, backporting the change to 1.0.x should be harmless. Fixed https://github.com/hashicorp/nomad/issues/11385 ."
2676,vagrantfile: expose Nomad and Consul APIs to local machine.,
2677,prevent active log from being overwritten when agent starts (#11386),
2678,docs: add note and example of storing module index to disk (#11377),
2679,DOCS: Update Consul Connect to Consul service mesh (#11362), Update Consul Connect to Consul service mesh Apply suggestions from code review
2680,website: Add Fathom analytics (#11276),  Impl Fathom analytics   Actually install fathom-client   Use analytics package instead of direct impl   Remove explicit fathom-client dep   Upgrade platform analytics package 
2681,ui: update task group alloc summary chart to use new module component (#11375),
2682,fix test names (#11374),
2683,add dispatch idempotency token support in the CLI (#10930),
2684,ui: persist node drain settings (#11368),
2685,ui: display Nomad version in the Clients and Servers table (#11366),
2686,ui: use module to access job meta value (#11370),
2687,ui: update favicon (#11371),
2688,cli: allow setting namespace and region in the module command (#11364),
2689,ui: create tooltip component (#11363),
2690,ui: set * as the default namespace selector (#11357),
2691,ui: add client name tooltip when displaying client ID in tables (#11358),
2692,Merge pull request #11339 from hashicorp/b-website-fixup-interpolation-formatting,website: fixup link formatting within interpolation doc.
2693,document GH-11346 fix (#11350),
2694,Merge pull request #11356 from hashicorp/update-alert-banner,Update HashiConf alert-banner expiration
2695,Update HashiConf alert-banner expiration,Updates the HashiConf Alert Banner expiration to 10/20 @ 11pm (PT)
2696,Merge pull request #11331 from shishir-a412ed/init,Add support for --init to docker driver.
2697,Merge pull request #11347 from shishir-a412ed/cleanup,Code cleanup: Remove extra if clause.
2698,Fix preemption panic (#11346),"Fix a bug where the scheduler may panic when preemption is enabled. The conditions are a bit complicated: A job with higher priority that schedule multiple allocations that preempt other multiple allocations on the same node, due to port/network/device assignments. The cause of the bug is incidental mutation of internal cached data. module computes and cache proposed allocations  in https://github.com/hashicorp/nomad/blob/v1.1.6/scheduler/rank.go#L42-L53 . But scheduler then mutates the list to remove pre-emptable allocs in https://github.com/hashicorp/nomad/blob/v1.1.6/scheduler/rank.go#L293-L294, and  module mutates and sets the tail of cached slice with modules triggering a nil-pointer derefencing case. I fixed the issue by avoiding the mutation in module - the micro-optimization there doesn't seem necessary. Fixes https://github.com/hashicorp/nomad/issues/11342"
2699,Code cleanup: Remove extra if clause.,Signed-off-by: Shishir Mahajan link
2700,docs: add #11331 to changelog,
2701,test: update tests to properly use AllocDir,Also use t.TempDir when possible.
2702,Merge pull request #11341 from hashicorp/nq.update-alert-banner-hcg2021-live,website: Update alert banner for HashiConf
2703,docs: add #11334 to changelog,
2704,client: never embed alloc_dir in chroot,"Fixes #2522 Skip embedding client.alloc_dir when building chroot. If a user configures a Nomad client agent so that the chroot_env will embed the client.alloc_dir, Nomad will happily infinitely recurse while building the chroot until something horrible happens. The best case scenario is the filesystem's path length limit is hit. The worst case scenario is disk space is exhausted. A bad agent configuration will look something like this: ```hcl data_dir = ""/tmp/nomad-badagent"" client {   enabled = true chroot_env {     # Note that the source matches the data_dir     ""/tmp/nomad-badagent"" = ""/ohno""     # ...   } } ``` Note that module (the state_dir) will still be created but not module (the alloc_dir). While I cannot think of a good reason why someone would want to embed Nomad's client (and possibly server) directories in chroots, there should be no cause for harm. chroots are only built when Nomad runs as root, and Nomad disables running exec jobs as root by default. Therefore even if client state is copied into chroots, it will be inaccessible to tasks. Skipping the module and module is possible, but this PR attempts to implement the minimum viable solution to reduce risk of unintended side effects or bugs. When running tests as root in a vm without the fix, the following error occurs: module Also removed unused Copy methods on AllocDir and TaskDir structs. Thanks to @eveld for not letting me forget about this!"
2705,Update alert banner for HashiConf,Final cleanup/closer exp date
2706,website: fixup link formatting within interpolation doc.,
2707,"exactly one of ingress, terminating, or mesh must be configured ",i believe mesh should be included in this statement was omitted.
2708,Add support for --init to docker driver.,Signed-off-by: Shishir Mahajan link
2709,ease building Linux binaries on macOS (#11329),"Meant for development purposes only, so one can compile binary on a macos host then start a Docker container or scp the binary to a linux host easily. The resulting binary is statically linked and has very subtle differences. e.g. static binaries use go native network stack that honor /etc/hosts and /etc/resolve differently from the glibc implementation. In development environment, I don't expect these to materially change our experience."
2710,Follow up fixes for #11237 (#11260),
2711,Merge missing commits from 1.2.0-beta1 release branch (#11319),
2712,Merge release branch (#11317),
2713,fix module command name (#11314),
2714,docs: update Nvidia device plugin as external (#11313),
2715,Remove vendor folder during make clean (#11315), Remove vendor folder during make clean Add vendor warning to make dev build command
2716,changlog: add entry for #10796 (#11312),
2717,Merge pull request #11280 from benbuzbee/log-err,Log error if there are no event handlers registered
2718,executor: set CpuWeight in cgroup-v2 (#11287),"Cgroup-v2 uses module property instead of cpu shares: https://www.kernel.org/doc/html/latest/admin-guide/cgroup-v2.html#cpu-interface-files . And it uses a different range (i.e. module) from cpu.shares (i.e. module) to make things more interesting. Luckily, the libcontainer provides a helper function to perform the conversion link. I have confirmed that docker/libcontainer performs the conversion as well in https://github.com/opencontainers/runc/blob/v1.0.2/libcontainer/specconv/spec_linux.go#L536-L541 , and that CpuShares is ignored by libcontainer in https://github.com/opencontainers/runc/blob/v1.0.2/libcontainer/cgroups/fs2/cpu.go#L24-L29 ."
2719,changelog: add entries for #9160 and #11078 (#11290),
2720,Return SchedulerConfig instead of SchedulerConfigResponse struct (#10799),
2721,Merge pull request #11167 from a-zagaevskiy/master,Support configurable dynamic port range
2722,client: improve errors & tests for dynamic ports,
2723,cli: rename paths in debug bundle for clarity (#11307), Rename folders to reflect purpose Improve captured files test coverage Rename CSI plugins output file Add changelog entry fix test and make changelog message more explicit  Co-authored-by: Luiz Aoqui link
2724,tests: ensure that tests restore env-var values (#11309),"Fix a test corruption issue, where a test accidentally unsets the module environment variable, that's relied on by some tests. As a habit, tests should always restore the environment variable value on test completion. Golang 1.17 introduced link to address this issue. However, as 1.0.x and 1.1.x branches target golang 1.15 and 1.16, I opted to use a helper function to ease backports."
2725,cli: Improved autocomplete support for job dispatch and operator debug (#11270), Add autocomplete to nomad job dispatch Add autocomplete to nomad operator debug Update incorrect comment Update test to verify autocomplete Add changelog Apply lint suggestions Create dynamic slices instead of specific length Align style across predictors
2726,Add os-nova nomad autoscaler repo link (#11277),
2727,debug: Improve namespace and region support (#11269), Include region and namespace in CLI output Add region and prefix matching for server members Add namespace and region API outputs to cluster metadata folder Add region awareness to WaitForClient helper function Add helper functions for SliceStringHasPrefix and StringHasPrefixInSlice Refactor test client agent generation Add tests for region Add changelog
2728,Fixed plan diffing to handle non-unique service names.  (#10965),
2729,Update job details box (#11288),
2730,cli: Add nomad job allocs command (#11242),
2731,wrap module messages with module (#11291),
2732,Log error if there are no event handlers registered,"We see this error all the time module So we're handling an even with all default fields. I noted that this can happen if only err is set as in module In this case Err fails to be serialized by the logger, see this test ``` module 2021-10-06T22:37:56.736Z INFO nomad.stdout {""@level"":""warn"",""@message"":""ben test"",""@module"":""client.driver_mgr"",""@timestamp"":""2021-10-06T22:37:56.643900Z"",""driver"":""mock_driver"",""event"":{""TaskID"":"""",""TaskName"":"""",""AllocID"":"""",""Timestamp"":""0001-01-01T00:00:00Z"",""Message"":"""",""Annotations"":null,""Err"":{}}} 2021-10-06T22:37:56.736Z INFO nomad.stdout {""@level"":""warn"",""@message"":""ben test2"",""@module"":""client.driver_mgr"",""@timestamp"":""2021-10-06T22:37:56.644226Z"",""driver"":""mock_driver"",""event err str"":""errz""} 2021-10-06T22:37:56.736Z INFO nomad.stdout {""@level"":""warn"",""@message"":""ben test3"",""@module"":""client.driver_mgr"",""@timestamp"":""2021-10-06T22:37:56.644240Z"",""driver"":""mock_driver"",""event err"":""errz""} 2021-10-06T22:37:56.736Z INFO nomad.stdout {""@level"":""warn"",""@message"":""ben test4"",""@module"":""client.driver_mgr"",""@timestamp"":""2021-10-06T22:37:56.644252Z"",""driver"":""mock_driver"",""nil error"":null} ``` Note in the first example err is set to an empty object and the error is lost. What we want is the last two examples which call out the err field explicitly so we can see what it is in this case"
2733,website: upgrade deps to fix search styles (#11294),
2734,fixup! Support configurable dynamic port range,
2735,Merge pull request #11283 from hashicorp/f-update-hclog-dep,deps: update hashicorp/go-hclog to v1.0.0
2736,"System Batch UI, Client Status Bar Chart and Client Tab page view (#11078)",
2737,Merge pull request #11279 from hashicorp/f-ui/storybook-upgrade,UI: Storybook upgrade
2738,changelog: add entry for #11283,
2739,deps: update hashicorp/go-hclog to v1.0.0,
2740,Add FailoverHeartbeatTTL to config (#11127),"FailoverHeartbeatTTL is the amount of time to wait after a server leader failure before considering reallocating client tasks. This TTL should be fairly long as the new server leader needs to rebuild the entire heartbeat map for the cluster. In deployments with a small number of machines, the default TTL (5m) may be unnecessary long. Let's allow operators to configure this value in their config files."
2741,Migrate: New hierarchical separator,
2742,Migrate decorator to new file layout,
2743,Override the app rootURL for storybook,"Hopefully this work gets merged into ember-cli-storybook. For the time being, we get a fork instead."
2744,Storybook for ember workaround,
2745,Upgrade Storybook configuration for v6,
2746,Lightrun Integration - External task driver (#11203),
2747,auth_soft_fail needed for public images when agent is configured with auth (#11190),
2748,[demo] Kadalu CSI support for Nomad (#11207),
2749,Upgrade storybook from 5 to 6,
2750,executor: suppress spurious log messages (#11273),"Suppress stats streaming error log messages when task finishes. Streaming errors are expected when a task finishes and they aren't actionable to users. Also, note that the task runner Stats hook retries collecting stats after a delay. If the connection terminates prematurely, it will be retried, and closing the stats stream is not very disruptive. Ideally, executor terminates cleanly when task exits, but that's a more substantial change that may require changing the executor/drivers interface. Fixes #10814"
2751,Fixed creation of ControllerCreateVolumeRequest. (#11238),
2752,Added support for module to the CLI. (#10975),
2753,add module option for module command (#11213),
2754,Merge pull request #11268 from hashicorp/docs-1.1.6-changelog,docs: add 1.1.6 and 1.0.12 to changelog
2755,docs: bump version to 1.1.6 on website,
2756,docs: add 1.1.6 and 1.0.12 to changelog,
2757,website: upgrade dependencies (#11247),
2758,Merge pull request #11261 from hashicorp/b-logmon-leak,Fix a logmon goroutine and memory leak
2759,add changelog,
2760,logmon: Fix a memory leak on task restart,"Fix a logmon leak causing high goroutine and memory usage when a task restarts. Logmon module buffers the task stdout/stderr streams and periodically flushing them to log files. Logmon creates a new FileRotator for each stream for each task run. However, the module goroutine is leaked when a task restarts, holding a reference to a no-longer-needed module instance along with its 64kb buffer. The cause is that the code assumed module closes the ticker channel, thereby terminating the goroutine, but the documentation says otherwise:  Stop turns off a ticker. After Stop, no more ticks will be sent. Stop does not close the channel, to prevent a concurrent goroutine reading from the channel from seeing an erroneous ""tick"". https://pkg.go.dev/time#Ticker.Stop"
2761,logmon: add a test for leaked goroutines,
2762,logmon: refactor Logging tests,Mostly to use testify assertions and close open resources
2763,Merge pull request #11089 from hashicorp/b-cve-2021-37218,Apply authZ for nomad Raft RPC layer
2764,client: defensively log reserved ports, Fix test broken due to being improperly setup. Include min/max ports in default client config.
2765,fix panic when Connect mesh gateway doesn't have a proxy block (#11257),Co-authored-by: Michael Schurter link
2766,Merge pull request #11235 from hashicorp/test-evalbroker,test: fix fake by increasing time window
2767,Merge pull request #11251 from hashicorp/f-golang-1.17.1,Upgrade Golang to 1.17.1
2768,update docs and changelog,
2769,Merge pull request #11249 from hashicorp/f-gh-11237,deps: update hashicorp/go-discover.
2770,docs: document that network mode is only supported on Linux (#11192),Co-authored-by: Michael Schurter link Co-authored-by: Michael Schurter link
2771,gofmt all the files,mostly to handle build directives in 1.17.
2772,build: Update to golang 1.17.1,
2773,changelog: add entry for #11249,
2774,deps: update hashicorp/go-discover.,
2775,"docs: add new client.{min,max}_dynamic_port params",
2776,docs: add #11167 to changelog,
2777,client: output reserved ports with min/max ports,Also add a little more min/max port testing and add the consts back that had been removed: but unexported and as defaults.
2778,"api: add Node.{Min,Max}DynamicPort",
2779,Merge pull request #10796 from hashicorp/external-nvidia,devices: externalize nvidia device driver
2780,devices: externalize nvidia device driver,
2781,Merge pull request #11236 from hashicorp/test-flaky-autopilot,test: fix flaky TestAutopilot_CleanupDeadServer
2782,docs: add Nomad version requirement note for sysbatch (#11231),
2783,Merge pull request #10992 from ggriffiths/px_csi_driver_example,Add Portworx CSI Driver example
2784,docs: add @ggriffiths as author,
2785,Merge pull request #11234 from hashicorp/docs-csi-demo,docs: note demos/csi is unsupported
2786,test: fix flaky TestAutopilot_CleanupDeadServer,"The fix seems to be related to the pointer comparison and swapping we did around killing a non-leader. I actually can't quite explain it, but when comparing against Consul's version of this test I noticed they used the slice index to track the killed server instead of pointer swapping. As soon as I switched to slice index tracking I could no longer reproduce the failure. In addition: - Tested membership counts on all servers instead of just 1 for added   correctness. - Stopped testing raft v1 because it is unsupported."
2787,test: fix fake by increasing time window,Test originally only had a 10ms time window tolerance. Increased to 100ms and also improved assertions and docstrings.
2788,docs: note demos/csi is unsupported,Also start tagging authors to ease support by third parties.
2789,Update filesystem.mdx (#11182), Update filesystem.mdx  Update summary of alloc directory to include information on access differences between task drivers and filesystem isolation modes. Co-authored-by: Tim Gross link
2790,Update alert banner for HashiConf Global 2021 (#11229),
2791,Merge pull request #11224 from hashicorp/b-docs-node-eval-apidocs,docs: fix API docs node evaluate example call.
2792,docs: fix API docs node evaluate example call.,
2793,Merge pull request #11218 from hashicorp/docs-update-reserved,DOCS: Clarify the reservation example
2794,Clarify that reservation example,The current wording can lead someone to believe that you can use percentage values.
2795,Disable PowerShell profile and simplify fingerprinting link speed on Windows (#11183),
2796,Merge pull request #11215 from hashicorp/b-license-env-deny,client: add NOMAD_LICENSE to default env deny list
2797,docs: add some extra documentation around client host environment variables (#11208),Co-authored-by: Michael Schurter link
2798,client: add NOMAD_LICENSE to default env deny list,"By default we should not expose the NOMAD_LICENSE environment variable to tasks. Also refactor where the DefaultEnvDenyList lives so we don't have to maintain 2 copies of it. Since client/config is the most obvious location, keep a reference there to its unfortunate home buried deep in command/agent/host. Since the agent uses this list as well for the /agent/host endpoint the list must be accessible from both command/agent and client."
2799,Merge pull request #11214 from hashicorp/docs-1.1.5-changelog,Update changelog for v1.1.5 and v1.0.11
2800,Update changelog for v1.1.5 and v1.0.11,
2801,Merge pull request #11210 from hashicorp/docs-1.1.5,website: update to 1.1.5
2802,website: update to 1.1.5,Also update LAST_RELEASE in makefile to 1.1.5
2803,Merge pull request #11206 from hashicorp/b-gh-11202,client: task env vars should take precedence over host env vars.
2804,changelog: add entry for #11206,
2805,client: task env vars should take precendece over host env vars.,
2806,Fixed usage of NOMAD_CLI_NO_COLOR env variable. (#11168),
2807,Merge pull request #11198 from hashicorp/f-no-audit-log-timestamp,docs: add upgrade guide entry for audit log naming
2808,Merge pull request #11194 from hashicorp/b-fix-e2e-acl-tls-provision,e2e: fix provisioning when ACLs and TLS enabled.
2809,docs: add changelog entry for audit log naming,
2810,docs: add upgrade guide entry for audit log naming,
2811,e2e: fix provisioning when ACLs and TLS enabled; no nightly TLS.,
2812,Log network device name during fingerprinting (#11184),
2813,connect: update allowed protocols in ingress gateway config (#11187),
2814,Merge pull request #11189 from hashicorp/f-gh-11173-docs,docs: add changelog and website entry for #11173
2815,allow configuration of Docker hostnames in bridge mode (#11173),"Add a new hostname string parameter to the network block which allows operators to specify the hostname of the network namespace. Changing this causes a destructive update to the allocation and it is omitted if empty from API responses. This parameter also supports interpolation. In order to have a hostname passed as a configuration param when creating an allocation network, the CreateNetwork func of the DriverNetworkManager interface needs to be updated. In order to minimize the disruption of future changes, rather than add another string func arg, the function now accepts a request struct along with the allocID param. The struct has the hostname as a field. The in-tree implementations of DriverNetworkManager.CreateNetwork have been modified to account for the function signature change. In updating for the change, the enhancement of adding hostnames to network namespaces has also been added to the Docker driver, whilst the default Linux manager does not current implement it."
2816,changelog: add entry for #11173.,
2817,docs: add network.hostname job specification website entry.,
2818,deps: update go-memdb to 1.3.2 (#11185),
2819,Merge pull request #11111 from hashicorp/b-system-no-match,scheduler: warn when system jobs cannot place an alloc
2820,docs: focus changelog entry for #11111 on the ux,"While I don't think this fully encompasses the changes, other bits like marking sysbatch as dead immediately are new so haven't changed from a previous release."
2821,scheduler: deep copy AllocMetric,Defensively deep copy AllocMetric to avoid side effects from shared map references.
2822,dependabot: set proper theme/* labels (#11154),
2823,Support configurable dynamic port range,
2824,Merge pull request #11145 from hashicorp/watsonian/gpu-update,docs: Update Nvidia GPU installation instructions
2825,jobspec2: ensure consistent error handling between var-file & var.,
2826,Merge pull request #11105 from hashicorp/f-add-staticcheck-ci,ci: add staticcheck with ST1020 and update golangci-lint
2827,Merge pull request #11143 from hashicorp/b-gh-11026,deps: update go-plugin to v1.4.3 to fix Windows handle leak.
2828,build(deps): bump postcss from 7.0.35 to 7.0.36 in /ui (#10771),Bumps link from 7.0.35 to 7.0.36. - link - link - link  updated-dependencies: - dependency-name: postcss   dependency-type: indirect ... Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
2829,build(deps): bump hosted-git-info from 2.8.8 to 2.8.9 in /ui (#10737),Bumps link from 2.8.8 to 2.8.9. - link - link - link  updated-dependencies: - dependency-name: hosted-git-info   dependency-type: indirect ... Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
2830,build(deps): bump ws from 7.4.3 to 7.4.6 in /ui (#10669),Bumps link from 7.4.3 to 7.4.6. - link - link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
2831,build(deps): bump ssri from 6.0.1 to 6.0.2 in /ui (#10398),Bumps link from 6.0.1 to 6.0.2. - link - link - link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
2832,build(deps): bump path-parse from 1.0.6 to 1.0.7 in /ui (#11028),Bumps link from 1.0.6 to 1.0.7. - link - link  updated-dependencies: - dependency-name: path-parse   dependency-type: indirect ... Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
2833,build(deps): bump url-parse from 1.5.1 to 1.5.3 in /ui (#11030),Bumps link from 1.5.1 to 1.5.3. - link - link  updated-dependencies: - dependency-name: url-parse   dependency-type: indirect ... Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
2834,typo - capability (#11152),
2835,cli: include all possible scores in alloc status metric table (#11128),
2836,docs: Update Nvidia GPU installation instructions,
2837,ui: set the job namespace when redirecting after the job is dispatched (#11141),
2838,changelog: add entry for #11143.,
2839,deps: update go-plugin to v1.4.3 to fix Windows handle leak.,
2840,lint: mark false positive or fix gocritic append lint errors.,
2841,Change dashboard port to http (#11129),
2842,suggest changing port number to nomad default (#11140),i found this confusing since 8300 is associated with consul. suggest using more nomad ports
2843,Merge pull request #10968 from hashicorp/configured-dependabot,Add initial Dependabot configuration
2844,e2e: use absolute path for mTLS env vars (#11126),
2845,Add configuration for module using Go modules,
2846,events: fix wildcard namespace handling (#10935),"This fixes a bug in the event stream API where it currently interprets namespace=* as an actual namespace, not a wildcard. When Nomad parses incoming requests, it sets namespace to default if not specified, which means the request namespace will never be an empty string, which is what the event subscription was checking for. This changes the conditional logic to check for a wildcard namespace instead of an empty one. It also updates some event tests to include the default namespace in the subscription to match current behavior. Fixes #10903"
2847,changelog: add entry for #11111,
2848,test: use Len instead of Equal on system and sysbatch node constraint tests,
2849,fix(website): module script reloads app on save (#11119),
2850,tests: update expected test result based on changes done in #11111,
2851,Format Terraform files (#11099),"Also format terraform scripts with hclfmt, equivalent to terraform fmt. I opted not to use terraform fmt, because I didn't want to introduce dev dependency on the terraform CLI. Also, I've optimized the find command to ignore spurious directories (e.g. .git, node_modules) that seem to be populated with too many files! make hclfmt takes 0.3s on my mac down from 7 seconds!"
2852,ui: set namespace when looking for and displaying children jobs (#11110),
2853,Document Docker module behaviour post v1.1.3 (#11079),Co-authored-by: Derek Strickland link
2854,corrected peersInfoContent - was copied from Consul and not updated for Nomad (#11109),updated with Nomad ports and web link (learn guide: https://learn.hashicorp.com/tutorials/nomad/outage-recovery)
2855,scheduler: warn when system jobs cannot place an alloc,"When a system or sysbatch job specify constraints that none of the current nodes meet, report a warning to the user. Also, for sysbatch job, mark the job as dead as a result. A sample run would look like: ``` $ nomad job run ./example.nomad ==> 2021-08-31T16:57:35-04:00: Monitoring evaluation ""b48e8882""     2021-08-31T16:57:35-04:00: Evaluation triggered by job ""example"" ==> 2021-08-31T16:57:36-04:00: Monitoring evaluation ""b48e8882""     2021-08-31T16:57:36-04:00: Evaluation status changed: ""pending"" -> ""complete"" ==> 2021-08-31T16:57:36-04:00: Evaluation ""b48e8882"" finished with status ""complete"" but failed to place all allocations:     2021-08-31T16:57:36-04:00: Task Group ""cache"" (failed to place 1 allocation):       * Constraint ""${meta.tag} = bar"": 2 nodes excluded by filter       * Constraint ""${attr.kernel.name} = linux"": 1 nodes excluded by filter $ nomad job status example ID            = example Name          = example Submit Date   = 2021-08-31T16:57:35-04:00 Type          = sysbatch Priority      = 50 Datacenters   = dc1 Namespace     = default Status        = dead Periodic      = false Parameterized = false Summary Task Group  Queued  Starting  Running  Failed  Complete  Lost cache       0       0         0        0       0         0 Allocations No allocations placed ```"
2856,Merge pull request #11101 from hashicorp/d/event-stream-ndjson,Mention the ndjson standard format the event stream uses
2857,Merge pull request #11107 from hashicorp/f-add-cni-config-dir-install-script,scripts: create CNI config directory within Vagrant machine.
2858,Add firewall statement to requirements (#11106),This PR adds a sentence about configuring your firewall to allow required Nomad ports. This is being added to help search discoverability. This closes issue #11076
2859,scripts: create CNI config directory within Vagrant machine.,
2860,ci: update golangci-lint to v1.42.0,
2861,ci: enable staticcheck with ST1020 to check func docstrings.,
2862,Merge pull request #11098 from hashicorp/b-fixup-all-incorrect-docstrings,chore: fix incorrect docstring formatting.
2863,Mention the ndjson standard format the event stream uses,Knowing this upfront is important when looking for common libraries to help consume events.
2864,release 1.1.4 (#11088),
2865,Support mTLS clusters for e2e testing (#11092),"This allows us to spin up e2e clusters with mTLS configured for all HashiCorp services, i.e. Nomad, Consul, and Vault. Used it for testing #11089 . mTLS is disabled by default. I have not updated Windows provisioning scripts yet - Windows also lacks ACL support from before. I intend to follow up for them in another round."
2866,chore: fix incorrect docstring formatting.,
2867,Merge pull request #11091 from hashicorp/consolidate-cni-plugins-to-1.0.0,cni: consolidate cni plugins within test install and docs to use v1.0.0
2868,docs: note env and meta map assignment syntax (#11095),
2869,Update terraform configuration for demo/csi/digitalocean (#11093),  Update configuration for csi/digitalocean demo   hclfmt DigitalOcean CSI demo files   Co-authored-by: Luiz Aoqui link
2870,link to cve listing in changelog,Co-authored-by: Kent 'picat' Gruber link
2871,update tests to make an actual RaftRPC,
2872,update changelog and dev version (#11090),
2873,docs: update website to detail cni plugins v1.0.0,
2874,test: update e2e and dev scripts to use cni plugins v1.0.0,
2875,Apply authZ for nomad Raft RPC layer,"When mTLS is enabled, only nomad servers of the region should access the Raft RPC layer. Clients and servers in other regions should only use the Nomad RPC endpoints. Co-authored-by: Michael Schurter link Co-authored-by: Seth Hoenig link"
2876,Update social share image (#11086),  Update social share image   Remove Icon file 
2877,update golang to 1.16.7 (#11083),
2878,Update x/sys to support go 1.17 (#11065),Co-authored-by: James Rasell link
2879,Update module and module blocks documentation (#11071),  website: update module and module blocks documentation   website: hclfmt examples in scaling block docs 
2880,Merge pull request #11042 from hashicorp/docs-remove-ingress-host-port-callout,docs: Remove note on ingress gateway hosts field needing a port number
2881,Merge pull request #11072 from kushsharma/patch-1,docs: fix typo in structs/event.go
2882,Don't timestamp active log file (#11070),  don't timestamp active log file   website: update log_file default value   changelog: add entry for #11070   website: add upgrade instructions for log_file in v1.14 and v1.2.0 
2883,docs: fix typo in structs/event.go,
2884,Upgrade global styles (#10936),  website: upgrade global-styles packages   website: upgrade community page   website: hide alert-banner on mobile   website: upgrade g-container to g-grid-container   website: update /security to use markdown-page   website: fix unsupported prop   website: fix incorrect github link in security page   website: bump to latest patched dependencies 
2885,Merge pull request #11064 from hashicorp/deflake-tests-20210818,Deflake tests attempts
2886,tests: attempt deflaking TestAutopilot_CleanupDeadServer,"Attempt to deflake the test by avoiding shutting down the leaders, as leadership recovery takes more time, and consequently longer to process raft configuration changes and potentially failing the test."
2887,tests: deflake TestLeader_LeftLeader,Wait for leadership to be established before killing leader.
2888,Consider all system jobs for a new node (#11054),"When a node becomes ready, create an eval for all system jobs across namespaces. The previous code uses module to deduplicate evals, but that ignores the job namespace. Thus if there are multiple jobs in different namespaces sharing the same ID/Name, only one will be considered for running in the new node. Thus, Nomad may skip running some system jobs in that node."
2889,e2e: Run system jobs on all datacenters (#11060),"Target all e2e datacenters for system and sysbatch e2e tests.  They require that the system jobs run on all linux clients. However, the jobs currenly only target module datacenter, but the nightly e2e cluster has 4 clients spread in module and module datacenters, causing the tests to fail. I missed this problem in e2e dev cluster because it only used a single dc1 datacenter."
2890,Merge pull request #9160 from hashicorp/f-sysbatch,core: implement system batch scheduler
2891,Merge pull request #11051 from hashicorp/b-gh-11047,tlsutil: update testing certificates close to expiry.
2892,tlsutil: update testing certificates close to expiry.,
2893,docs: Remove note on ingress gateway hosts field needing a port number,"Update the ingress gateway documentation to remove the note stating that a port must be specified for values in the module field when the ingress gateway is listening on a non-standard HTTP port. Specifying a port was required in Consul 1.8.0, but that requirement was removed in 1.8.1 with hashicorp/consul#8190 which made Consul include the port number when constructing the Envoy configuration. Related Consul docs PR: hashicorp/consul#10827"
2894,docs: Consul Connect tweaks (#11040),"Tweaks to the commands in Consul Connect page. For multi-command scripts, having the leading module is a bit annoying, as it makes copying the text harder. Also, the module button would only copy the first command and ignore the rest. Also, the module commands are required to run as root, unlike the rest! I made them use module pattern to ease copy & paste as well. Lastly, update the CNI plugin links to 1.0.0. It's fresh off the oven - just got released less than an hour ago: https://github.com/containernetworking/plugins/releases/tag/v1.0.0 ."
2895,Add -k consul dependency back in,Signed-off-by: Grant Griffiths link
2896,Merge pull request #11034 from tgross/docs-cni-install,docs: note CNI requirement for bridge networking
2897,docs: note CNI requirement for bridge networking,"Using module networking requires that you have CNI plugins installed on the client, but this isn't in the jobspec module docs which are the first place someone will look when trying to configure task networking."
2898,Merge pull request #10848 from ggriffiths/listsnapshot_secrets,CSI Listsnapshot secrets support
2899,system: re-evaluate node on feasibility changes (#11007),Fix a bug where system jobs may fail to be placed on a node that initially was not eligible for system job placement. This changes causes the reschedule to re-evaluate the node if any attribute used in feasibility checks changes. Fixes https://github.com/hashicorp/nomad/issues/8448
2900,deployments: canary=0 is implicitly autopromote (#11013),"In a multi-task-group job, treat 0 canary groups as auto-promote. This change fixes an edge case where Nomad requires a manual promotion, if the job had any group with canary=0 and rest of groups having auto_promote set. Co-authored-by: Michael Schurter link"
2901,Speed up client startup and registration (#11005),"Speed up client startup, by retrying more until the servers are known. Currently, if client fingerprinting is fast and finishes before the client connect to a server, node registration may be delayed by 15 seconds or so! Ideally, we'd wait until the client discovers the servers and then retry immediately, but that requires significant code changes. Here, we simply retry the node registration request every second. That's basically the equivalent of check if the client discovered servers every second. Should be a cheap operation. When testing this change on my local computer and where both servers and clients are co-located, the time from startup till node registration dropped from 34 seconds to 8 seconds!"
2902,docs: add brief description to portworx readme,Also hclfmt hcl snippet.
2903,ui: add missing pipe separator in parameterized and periodic jobs (#11020),
2904,Merge pull request #10995 from miao1007/patch-1,docs: Add replication_token link with authoritative_region
2905,Merge pull request #10666 from hashicorp/b-ui/search-namespaces,ui: Fix fuzzy search namespace-handling
2906,chore: update alert banner (#11022),
2907,edit hierarchy to lead with namespace before job,
2908,"ui: only dipslay ""Dispatch Job"" button on parameterized jobs (#11019)",
2909,make: embed the Nomad UI data by default (#11018),
2910,Some Rookout docs tweaks (#10989),
2911,Merge pull request #10951 from hashicorp/b-cn-proxy,consul/connect: avoid warn messages on connect proxy errors
2912,Merge pull request #11010 from hashicorp/docs-10875,docs: add backward incompat note about #10875
2913,docs: add backward incompat note about #10875,Fixes #11002
2914,Merge pull request #11006 from hashicorp/f-gh-10929-changelog,changelog: add entry for #10929
2915,consul/connect: avoid warn messages on connect proxy errors,"When creating a TCP proxy bridge for Connect tasks, we are at the mercy of either end for managing the connection state. For long lived gRPC connections the proxy could reasonably expect to stay open until the context was cancelled. For the HTTP connections used by connect native tasks, we experience connection disconnects. The proxy gets recreated as needed on follow up requests, however we also emit a WARN log when the connection is broken. This PR lowers the WARN to a TRACE, because these disconnects are to be expected. Ideally we would be able to proxy at the HTTP layer, however Consul or the connect native task could be configured to expect mTLS, preventing Nomad from MiTM the requests. We also can't mange the proxy lifecycle more intelligently, because we have no control over the HTTP client or server and how they wish to manage connection state. What we have now works, it's just noisy. Fixes #10933"
2916,changelog: add entry for #10929,
2917,Merge pull request #10929 from AchilleAsh/fix-token-docker-auth-config,fix: load token in docker auth config
2918,Remove install dependency on consul for simplicity,Signed-off-by: Grant Griffiths link
2919,changelog: add entry for #10934 (#11001),
2920,Add Portworx CSI Driver example,Signed-off-by: Grant Griffiths link
2921,Merge pull request #10996 from hashicorp/b-fix-doublespace-general-cli-opts,cli: fix minor format error within module help text.
2922,ui: fix job dispatch page when job doesn't have any meta fields (#10934),
2923,e2e: fix tests,"Use basic sleeps in busybox images. busybox are very light, and ping has permissions complications, and it may fail for network related issues."
2924,core: implement system batch scheduler,"This PR implements a new ""System Batch"" scheduler type. Jobs can make use of this new scheduler by setting their type to 'sysbatch'. Like the name implies, sysbatch can be thought of as a hybrid between system and batch jobs - it is for running short lived jobs intended to run on every compatible node in the cluster. As with batch jobs, sysbatch jobs can also be periodic and/or parameterized dispatch jobs. A sysbatch job is considered complete when it has been run on all compatible nodes until reaching a terminal state (success or failed on retries). Feasibility and preemption are governed the same as with system jobs. In this PR, the update stanza is not yet supported. The update stanza is sill limited in functionality for the underlying system scheduler, and is not useful yet for sysbatch jobs. Further work in #4740 will improve support for the update stanza and deployments. Closes #2527"
2925,cli: fix minor format error within module help text.,
2926,[doc]Add replication_token link with authoritative_region,"replication_token always works together with authoritative_region, add a link for better doc."
2927,Only initialize task.VolumeMounts when not-nil (#10990),"1.1.3 had a bug where task.VolumeMounts will be an empty slice instead of nil. Eventually, it gets canonicalized and is set to module, but it seems to confuse dry-run planning. The regression was introduced in https://github.com/hashicorp/nomad/pull/10855/files#diff-56b3c82fcbc857f8fb93a903f1610f6e6859b3610a4eddf92bad9ea27fdc85ecL1028-R1037 . Curiously, it's the only place where module check was dropped. I assume it was dropped accidentally. Fixes #10981"
2928,website: update consent manager (#10977),
2929,Merge pull request #10976 from itorres/api-docs-allocation-restart-sample,API docs: Fix allocation restart example
2930,Merge pull request #10987 from hashicorp/f-docs-order-external-drivers-alphabetically,docs: order external driver overview alphabetically.
2931,docs: order external driver overview alphabetically.,
2932,Rookout driver docs (#10950),Co-authored-by: James Rasell link
2933,Merge pull request #10969 from hashicorp/merge-release-1.1.3,Merge release 1.1.3
2934,Fix allocation restart API docs example,
2935,Adds documentation for file mode to sink docs (#10972),
2936,website: publish 1.1.3 release (#10970),
2937,prepare for next dev cycle,
2938,Add configuration for module using NPM,
2939,Add initial Dependabot configuration,
2940,e2e: wait for allocs and deployments (#10967),"As we moved to using module for registering jobs, we should wait until allocs and deployments are created before asserting their properties. Fixing module and module tests as they seem particularly flaky, failing 9 and 7 times (respectively) in the last two weeks."
2941,remove generated files,
2942,Release v1.1.3,
2943,Generate files for 1.1.3 release,
2944,prepare release docker image for fetching,
2945,update changelog for release,
2946,update changelog (#10963),
2947,CSI ListSnapshots secrets implementation,Signed-off-by: Grant Griffiths link
2948,adds back tab styles (#10961),
2949,api: revert to defaulting to http/1 (#10958)," api: revert to defaulting to http/1  PR #10778 incidentally changed the api http client to connect with HTTP/2 first. However, the websocket libraries used in module features don't handle http/2 well, and don't downgrade to http/1 gracefully. Given that the switch is incidental, and not requested by users. Furthermore, api consumers can opt-in to forcing http/2 by setting custom http clients. Fixes #10922"
2950,web: migrate to web platform- packages (#10908),
2951,Update some dependencies to match Enterprise (#10940),"Noticed that the private Enterprise repository dependencies drifted a bit. Here, we update the OSS to the dependencies used by Enterprise. We should update all dependencies as a matter of hygiene, but that's an issue for another time."
2952,Merge pull request #10916 from hashicorp/f-audit-log-mode,Add audit log file mode config parameter
2953,docs: add changelog for #10916,
2954,nomad: only activate one-time auth tokens with 1.1.0 (#10952),"Fix a panic in handling one-time auth tokens, used to support module. If the nomad leader is a 1.1.x with some servers running as 1.0.x, the pre-1.1.0 servers risk crashing and the cluster may lose quorum. That can happen when module command is issued, or when the leader scans for expired tokens every 10 minutes. Fixed #10943 ."
2955,Merge pull request #10945 from HZHgagaga/main,Update client.mdx
2956,Update client.mdx,"Missing ""-"" symbol, ""bridge_ Network name"" should be ""bridge_ network_name""."
2957,edit fuzzy search callback logic,"Namespaces are set-up in Nomad to be an object that has an id property. However, namespaces actually don't have that shape. Our search was expecting a namespace object, but we actually don't have a namespace assigned to jobs in our config and namespace is set to null. Normally, these namespaces would be set to default, but that would require us to refactor our Mirage config if we wanted to assert that namespaces are 'default' and not null. So this is a bandaid solution."
2958,Merge pull request #10931 from hashicorp/b-hcl1-backport-fields,"Support the new post-1.0.0 job spec fields in the HCLv1 parser. The HCLv1 parser is still the default (or only!) parser in many downstream tools, e.g. link, and link . While we initially intended to deprecate HCLv1 parser in 1.0.0, we never communicated that publicly. We did not fully anticipate the public usage of module package (we assumed it's a private package), or the friction that HCLv2 introduced in some cases (e.g. https://github.com/hashicorp/nomad/issues/10777, https://github.com/hashicorp/nomad/issues/9838). So moving forward we intend to ensure that new job spec fields are honored in both the HCLv1 and HCLv2 parser until we solidify the migration path and communicate it properly."
2959,hcl: add new cores resources field,
2960,cli: Use glint to determine if os.Stdout is tty (#10926),"Use glint to determine if os.Stdout is a terminal. glint Terminal renderer expects os.Stdout link. It's unclear how this condition arises, but this additional check causes Nomad to render deployments progress through glint when glint cannot support it. By using golint to perform the check, we eliminate the risk of mis-judgement."
2961,support gateway mesh,
2962,fix: load token in docker auth config,
2963,add a test for envoy_dns_discovery_type,
2964,parse service check body,
2965,services OnUpdate,
2966,hclv1: parse service upstreams,
2967,test parsing more service fields,
2968,Merge remote-tracking branch 'origin/main' into b-ui/search-namespaces,
2969,Merge pull request #10924 from hashicorp/deps-upgrade-consul-api,deps: upgrade consul api to 1.9.1
2970,Merge pull request #10925 from hashicorp/deps-update-aws-cpus,env/aws: update ec2 cpu data
2971,Merge pull request #10893 from hashicorp/f-ui/namespace-acl-bug,edit ember-can to add additional attribute for namespace
2972,ui:  fixes #10885,
2973,edit namespace property in handlebar file to use computed property in component,
2974,env/aws: update ec2 cpu data,using tools/ec2info module
2975,deps: upgrade consul api to 1.9.1,
2976,Merge pull request #10904 from hashicorp/b-no-affinity-intern,core: remove internalization of affinity strings
2977,address merge conflicts,
2978,Merge pull request #10921 from hashicorp/b-fix-regions-api-docs,docs: fixup regions API documentation path to include version.
2979,fix module help message (#10917),
2980,changelog: add entry for #10675 (#10919),
2981,docs: fix ACL enabled parameter description (#10918),
2982,docs: fixup regions API documentation path to include version.,
2983,ui: add parameterized dispatch interface (#10675)," ui: add parameterized dispatch interface  This commit adds a new interface for dispatching parameteried jobs, if the user has the right permissions. The UI can be accessed by viewing a parameterized job and clicking on the ""Dispatch Job"" button located in the ""Job Launches"" section.   fix failing lint test   clean up dispatch and remove meta   This commit cleans up a few things that had typos and inconsistent naming. In line with this, the custom module view was removed in favor of using the included module.   ui: encode dispatch job payload and start adding tests   ui: remove unused test imports   ui: redesign job dispatch form   ui: initial acceptance tests for dispatch job   ui: generate parameterized job children with correct id format   ui: fix job dispatch breadcrumb link   ui: refactor job dispatch component into glimmer component and add form validation   ui: remove unused CSS class   ui: align job dispatch button   ui: handle namespace-specific requests on job dispatch   ui: rename payloadMissing to payloadHasError   ui: don't re-fetch job spec on dispatch job   ui: keep overview tab selected on job dispatch page   ui: fix task and task-group linting   ui: URL encode job id on dispatch job tests   ui: fix error when job meta is null   ui: handle job dispatch from adapter   ui: add more tests for dispatch job page   ui: add ""job dispatch"" capability check   ui: update job dispatch from code review   Co-authored-by: Luiz Aoqui link"
2984,refactoring for same regression in job versions,"In job versions, if you have an ACL token with a write policy you should be able to revert a job, however, that was not the case here. This is because we're using ember-can to check if the user can run a job. That permission relies on policiesSupportRunning which uses a function called namespaceIncludesCapability. We're going to need to refactor any cases that use this function."
2985,client: avoid acting on stale data after launch (#10907),"When the client launches, use a consistent read to fetch its own allocs, but allow stale read afterwards as long as reads don't revert into older state. This change addresses an edge case affecting restarting client. When a client restarts, it may fetch a stale data concerning its allocs: allocs that have completed prior to the client shutdown may still have ""run/running"" desired/client status, and have the client attempt to re-run again. An alternative approach is to track the indices such that the client set MinQueryIndex on the maximum index the client ever saw, or compare received allocs against locally restored client state. Garbage collection complicates this approach (local knowledge is not complete), and the approach still risks starting ""dead"" allocations (e.g. the allocation may have been placed when client just restarted and have already been reschuled by the time the client started. This approach here is effective against all kinds of stalness problems with small overhead."
2986,deps: sync oss versions with enterprise,see hashicorp/nomad-enterprise#586 for audit logger related dependency updates
2987,audit: add file mode configuration parameter,Rest of implementation is in nomad-enterprise
2988,Merge pull request #10849 from benbuzbee/benbuz/fix-destroy,Don't treat a failed recover + successful destroy as a successful recover
2989,docs: add changelog entry for #10849,
2990,Merge pull request #10886 from hashicorp/cli-handle-successful-deployment,Handle successful/canceled/blocked deployments in CLI output
2991,Merge pull request #10905 from tgxworld/patch-1,Fix typo.
2992,Update deployment status doc example output,
2993,Fix typo.,
2994,Handle module unless module,
2995,core: remove internalization of affinity strings,"Basically the same as #10896 but with the Affinity struct. Since we use reflect.DeepEquals for job comparison, there is risk of false positives for changes due to a job struct with memoized vs non-memoized strings. Closes #10897"
2996,Merge pull request #10875 from hashicorp/b-namespace-flag-override,cli: module should override job namespace
2997,Merge pull request #10864 from hashicorp/b-10746-plan-datacenter,scheduler: datacenter updates should be destructive
2998,ci: prepare unprivileged user for checkout (#10900),Job module uses an unprivileged user to compile and run tests. Ensure that the user has ssh and git properly configured to checkout dependencies.
2999,Merge pull request #10898 from hashicorp/f-rm-vendor,build: no longer use vendor directory
3000,Merge pull request #10896 from hashicorp/b-rm-constraint-memoization,core: do not internalize constraint strings
3001,docs: update changelog,
3002,build: no longer use vendor directory,"This PR removes the vendor directory from the Nomad repository. Contributers will no longer need to deal with our module step when working on Nomad, which was suprising when making changes to the api. It also causes huge diffs in PRs that nobody looks at."
3003,docs: add changelog entry,
3004,core: add spec changed test with constriants,
3005,core: fix constraint tests,
3006,core: do not memoize constraint strings,"This PR causes Nomad to no longer memoize the String value of a Constraint. The private memoized variable may or may not be initialized at any given time, which means a reflect.DeepEqual comparison between two jobs (e.g. during Plan) may return incorrect results. Fixes #10836"
3007,Merge pull request #10892 from hashicorp/b-gh-10890,deps: update consul-template to v0.25.2.
3008,changelog: add entry for GH-10563 (#10894),
3009,edit ember-can to add additional attribute for namespace,"We wanted the ability to get our namespace from query params in order to do this, we're using additional attributes via ember-can to set a bound property directly from our handlebar file. This sets us up better in the event that the namespace filter changes on the UI because our handlebar file will be aware of the change, whereas our ability may not update as the namespace filter updates."
3010,changelog: add entry for #10892,
3011,deps: update consul-template to v0.25.2.,
3012,Capture ACL Token from self API call for Reverse Proxy use-case (#10563), Proposed fix for #10561  Signed-off-by: Georges-Etienne Legendre link  Add acceptance tests for reverse proxy use-case  Signed-off-by: Georges-Etienne Legendre link  Use reads instead of computed/get  Signed-off-by: Georges-Etienne Legendre link  Move back the line closer to the task  Signed-off-by: Georges-Etienne Legendre link  skip a11y-audit-called lint rule on reverse proxy tests  Co-authored-by: Luiz Aoqui link
3013,Bump hashi-stack-menu (#10889),
3014,Merge pull request #10883 from hashicorp/b-multi-ingress,consul/connect: fix bug causing high cpu with multiple connect sidecars in group
3015,consul/connect: add missing import statements,
3016,consul/connect: use join host port,Co-authored-by: Michael Schurter link
3017,Merge pull request #10755 from hashicorp/f-ui/nomad-agent-version,Closes Nomad UI showing 'vUnknown' #10672
3018,add name property back to agent schema in ember mirage,The name property had to be added back to the agent schema in the Agent Factory because the /agent/monitor endpoint in the config finds agents by their names and since member is not a proper entity in our Mirage Config we can't just findBy name of the member. So although we're following the correct schema we're set-up to rely on this.
3019,Handle successful/canceled/blocked deployments in CLI output,"Otherwise the spinner would just end, which felt a bit awkward. I wanted to see a  ""✓"" to know that everything was ok, and a ""!"" (maybe something else?) if something went wrong."
3020,consul/connect: fix bug causing high cpu with multiple connect sidecars in group,"This PR fixes a bug where the underlying Envoy process of a Connect gateway would consume a full core of CPU if there is more than one sidecar or gateway in a group. The utilization was being caused by Consul injecting an envoy_ready_listener on 127.0.0.1:8443, of which only one of the Envoys would be able to bind to. The others would spin in a hot loop trying to bind the listener. As a workaround, we now specify -address during the Envoy bootstrap config step, which is how Consul maps this ready listener. Because there is already the envoy_admin_listener, and we need to continue supporting running gateways in host networking mode, and in those case we want to use the same port value coming from the service.port field, we now bind the admin listener to the 127.0.0.2 loop-back interface, and the ready listener takes 127.0.0.1. This shouldn't make a difference in the 99.999% use case where envoy is being run in its official docker container. Advanced users can reference ${NOMAD_ENVOY_ADMIN_ADDR_} (as they 'ought to) if needed, as well as the new variable ${NOMAD_ENVOY_READY_ADDR_} for the envoy_ready_listener."
3021,docs: remove unnecessary redirect (#10802),
3022,[docs] Adds federation caveat to upgrade guide (#10847),
3023,e2e: use -detach mode when registering jobs with cli (#10877),"Pick up 15d39f0dee but for RegisterFromJobspec:  This PR changes the e2e helper thingy to set -detach option  when registering a job with the CLI instead of the API. This is  necessary for jobs which never become healthy, as the deployment  never finishes for failing jobs and the command never returns,  causing the test to timeout after 10 minutes.  This case occurs in TestVaultSecrets"
3024,Containerd task driver options. (#10878), Auth support via driver config pid_mode shm_size  Signed-off-by: Shishir Mahajan link
3025,client: interpolate meta blocks with task environment (#10876),Adds missing interpolation step to the module blocks when building the task environment. Also fixes incorrect parameter order in the test assertion and adds diagnostics to the test.
3026,Merge pull request #10873 from hashicorp/b-cc-rm-sidecar-first,consul/connect: remove sidecar proxy before removing parent service
3027,consul/connect: remove sidecar proxy before removing parent service,"This PR will have Nomad de-register a sidecar proxy service before attempting to de-register the parent service. Otherwise, Consul will emit a warning and an error. Fixes #10845"
3028,Merge pull request #10872 from hashicorp/b-cc-regex-checkids,consul/connect: Avoid assumption of parent service when filtering connect proxies
3029,consul/connect: improve regex from CR suggestions,
3030,Merge pull request #10874 from hashicorp/b-fix-logline,client: fix logline in group shutdown hook
3031,cli: module should override job namespace,"When a jobspec doesn't include a namespace, we provide it with the default namespace, but this ends up overriding the explicit module flag. This changeset uses the same logic as region parsing to create an order of precedence: the query string parameter (the module flag) overrides the API request body which overrides the jobspec."
3032,client: fix logline in group shutdown hook,Fixes #10844
3033,consul/connect: Avoid assumption of parent service when filtering connect proxies,This PR uses regex-based matching for sidecar proxy services and checks when syncing with Consul. Previously we would check if the parent of the sidecar was still being tracked in Nomad. This is a false invariant - one which we must not depend when we make #10845 work. Fixes #10843
3034,Merge pull request #10806 from hashicorp/munda/idempotent-job-dispatch,Enforce idempotency of dispatched jobs using token on dispatch request
3035,cni: respect default module and module (#10870),"The default agent configuration values were not set, which meant they were not being set in the client configuration and this results in fingerprints failing unless the values were set explicitly."
3036,service: remove duplicate name check during validation (#10868),"When a task group with module block(s) is validated, we validate that there are no duplicates, but this validation doesn't have access to the task environment because it hasn't been created yet. Services and checks with interpolation can be flagged incorrectly as conflicting. Name conflicts in services are not actually an error in Consul and users have reported wanting to use the same service name for task groups differentiated by tags."
3037,testing: prevent panic when module output changes (#10869),The module test assumes that it gets back running allocations and will panic the test runner rather than failing.
3038,refactor tests that depend on Agent fixutres in Mirage,
3039,Sync vendored api,
3040,Changelog entry for dispatch idempotency token,
3041,Set/parse idempotency_token query param,
3042,Update idempotency comment to reflect all jobs,Co-authored-by: Mahmood Ali link
3043,Merge pull request #10865 from hashicorp/b-deregister-noops,consul: avoid extra sync operations when no action required
3044,"cli: add -task flag to alloc signal, restart (#10859)","Alloc exec only works when task is passed as a flag and not an arg. Alloc logs currently accepts either, but alloc signal and restart only accept task as an arg. This adds -task as a flag to the other alloc commands to make the cli UX consistent. If task is passed as a flag and an arg, it ignores the arg."
3045,consul: avoid extra sync operations when no action required,"This PR makes it so the Consul sync logic will ignore operations that do not specify an action to take (i.e. [de-]register [services|checks]). Ideally such noops would be discarded at the callsites (i.e. users of [Create|Update|Remove]Workload], but we can also be defensive at the commit point. Also adds 2 trace logging statements which are helpful for diagnosing sync operations with Consul - when they happen and why. Fixes #10797"
3046,scheduler: datacenter updates should be destructive,"Updates to the datacenter field should be destructive for any allocation that is on a node no longer in the list of datacenters, but inplace for any allocation on a node that is still in the list. Add a check for this change to the system and generic schedulers after we've checked the task definition for updates and obtained the node for each current allocation."
3047,Merge pull request #10857 from hashicorp/b-rm-canarys,consul: avoid triggering unnecessary sync when removing workload
3048,Merge pull request #10861 from hashicorp/f-gh-10860,api: Added module job creation helper function.
3049,Merge pull request #10743 from holtwilkins/parse-term-gws,Parse term gws
3050,csi: account for nil volume_mount in API-to-structs conversion (#10855),Fix a nil pointer in the API struct to module conversion when a module block is empty.
3051,changelog: add entry for #10861,
3052,api: Added module job creation helper function.,
3053,add agent serializer,"This commit adds a serializer for the Agent. When the factory was originally designed to have the Member properities directly on the Agent class which was not set-up properly technically, but since we didn't really make use of the Agent endpoint."
3054,consul: avoid triggering unnecessary sync when removing workload,"There are bits of logic in callers of RemoveWorkload on group/task cleanup hooks which call RemoveWorkload with the ""Canary"" version of the workload, in case the alloc is marked as a Canary. This logic triggers an extra sync with Consul, and also doesn't do the intended behavior - for which no special casing is necessary anyway. When the workload is marked for removal, all associated services and checks will be removed regardless of the Canary status, because the service and check IDs do not incorporate the canary-ness in the first place. The only place where canary-ness matters is when updating a workload, where we need to compute the hash of the services and checks to determine whether they have been modified, the Canary flag of which is a part of that. Fixes #10842"
3055,Adopt go-changelog in Nomad (#10825),"Adopts link for managing Nomad's changelog. module is becoming the HashiCorp defacto standard tool for managing changelog, e.g. link, link, link. link seems to be the first product to adopt it, and its PR has the most context - though I've updated module with the relevant info here. Changes to developers workflow When opening PRs, developers should add a changelog entry in module. Check link.  For the WIP release, entries can be amended even after the PR merged, and new files may be added post-hoc (e.g. during transition period, missed accidentally, community PRs, etc). Transitioning Pending PRs can start including the changelog entry files immediately. For 1.1.3/1.0.9 cycle, the release coordinator should create the entries for any PR that gets merged without a changelog entry file. They should also move any 1.1.3 entry in CHANGELOG.md to a changelog entry file, as this PR done for GH-10818. Changes to release process Before cutting a release, release coordinator should update the changelog by inserting the output of module to CHANGELOG.md with appropriate headers. See link for more details. Details go-changelog is a basic templating engine for maintaining changelog in HashiCorp environment. It expects the changelog entries as files indexed by their PR number. The CLI generates the changelog section for a release by comparing two git references (e.g. module and the latest release, e.g. module), and still requires manual process for updating CHANGELOG.md and final formatting. The approach has many nice advantages: * Avoids changelog related merge conflicts: Each PR touches different file! * Copes with amendments and post-PR updates: Just add or update a changelog entry file using the original PR numbers. * Addresses the release backporting scenario: Cherry-picking PRs will cherry-pick the relevant changelog entry automatically! * Only relies on data available through module - no reliance on GitHub metadata or require GitHub credentials The approach has few downsides though: * CHANGELOG.md going stale during development and must be updated manually before cutting the release   * Repository watchers can no longer glance at the CHANGELOG.md to see upcoming changes   * We can periodically update the file, but module tool does not aid with that * module tool does not offer good error reporting. If an entry is has an invalid tag (e.g. uses module instead of module), the entry will be dropped silently   * We should update go-changelog to warn against unexpected entry tags   * TODO: Meanwhile, PR reviewers and release coordinators should watch out Potential follow ups We should follow up with CI checks to ensure PR changes include a warning. I've opted not to include that now. We still make many non-changelog-worth PRs for website/docs, for large features that get merged in multiple small PRs. I did not want to include a check that fails often. Also, we should follow up to have module emit better warnings on unexpected tag."
3056,Merge pull request #10853 from shantanugadgil/patch-4,constraint on the Docker driver missing 'attr'
3057,constraint on the Docker driver missing 'attr',Between this page and https://www.nomadproject.io/docs/runtime/interpolation I realized that the syntax on the Docker page was missing the word module.
3058,Don't treat a failed recover + successful destroy as a successful,"recover This code just seems incorrect. As it stands today it reports a successful restore if RecoverTask fails and then DestroyTask succeeds. This can result in a really annoying bug where it then calls RecoverTask again, whereby it will probably get ErrTaskNotFound and call DestroyTask once more. I think the only reason this has not been noticed so far is because most drivers like Docker will return Success, then nomad will call RecoverTask, get an error (not found) and call DestroyTask again, and get a ErrTasksNotFound err."
3059,Match idempotency key on all child jobs and return existing job when idempotency keys match.,
3060,Move idempotency check closer to validate. Log error.,
3061,CSI: Snapshot volume create should use vol.Secrets (#10840),Signed-off-by: Grant Griffiths link
3062,Update tests after moving idempotency token to WriteOptions,
3063,Move idempotency token to write options. Remove DispatchIdempotent,
3064,Update comment about idempotency check,
3065,Make idempotency error user friendly,Co-authored-by: Tim Gross link
3066,docker: move host path for hosts file mount to alloc dir (#10823),"In Nomad 1.1.1 we generate a hosts file based on the Nomad-owned network namespace, rather than using the default hosts file from the pause container. This hosts file should be shared between tasks in the same allocation so that tasks can update the file and have the results propagated between tasks."
3067,Merge pull request #10829 from hashicorp/gh-10820-docs,changelog: add entry for #10822
3068,Merge pull request #10831 from jcalonso/patch-1,[docs] Fix missing opening quote
3069,Enable parsing of terminating gateways,
3070,Fix missing opening quote,
3071,Add idempotency token to dispatch request instead of special meta key,
3072,Merge pull request #10805 from hashicorp/b-cn-tls-env,consul/connect: automatically set consul tls sni name for connect native tasks
3073,Always allow idempotency key meta. Tests for idempotent dispatch,
3074,Merge pull request #10822 from hashicorp/b-gh-10820,cli: fixed system commands so they correctly use passed flags.
3075,changelog: add entry for #10822,
3076,docs: unset port module field maps to dynamic port (#10828),
3077,docs: add missing backwards compat warning about port_map (#10827),"The module driver's module field was deprecated in 0.12 and this is documented in the task driver's docs, but we never explicitly flagged it for backwards compatibility."
3078,chore: upgrade react-head and deps (#10811),
3079,consul/connect: automatically set consul tls sni name for connect native tasks,"This PR makes it so that Nomad will automatically set the CONSUL_TLS_SERVER_NAME environment variable for Connect native tasks running in bridge networking mode where Consul has TLS enabled. Because of the use of a unix domain socket for communicating with Consul when in bridge networking mode, the server name is a file name instead of something compatible with the mTLS certificate Consul will authenticate against. ""localhost"" is by default a compatible name, so Nomad will set the environment variable to that. Fixes #10804"
3080,docs: update csi_plugin example (#10821),"Current efs driver does not support telling it if its a module or a module, and it will not print any error it will just ignore all other parameters then:( So this will result in endpoint being module and not module which will in turn break nomad/csi integration. Also I changed the latest image tag to v1.3.2 to make sure anybody copy pasting this example is sure that it will work. Tested on nomad 1.1.2"
3081,cli: fixed system commands so they correctly use passed flags.,
3082,csi: fix CLI panic when formatting volume status with -verbose flag (#10818),"When the module flag is passed to the module command, we hit a code path where the rows of text to be formatted were not initialized correctly, resulting in a panic in the CLI."
3083,Enforce idempotency of dispatched jobs using special meta key,
3084,website: upgrade code-block (#10792),  website: upgrade code-block   website: bump to latest pre-releases   website: bump to stable releases 
3085,Merge pull request #10801 from hashicorp/merge-release-1.1.2,Prepare for 1.1.3 development
3086,prepare for 1.1.3 development,
3087,update website to 1.1.2 (#10800),
3088,docs: improve CSI deployment recommendations (#10798), add some more context to the recommendations add recommendations around per-AZ module
3089,remove generated files,
3090,Release v1.1.2,
3091,Generate files for 1.1.2 release,
3092,prepare changelog for 1.1.2,
3093,Add remaining pprof profiles to nomad operator debug (#10748), Add remaining pprof profiles to debug dump Refactor pprof profile capture Add WaitForFilesUntil and WaitForResultUntil utility functions Add CHANGELOG entry
3094,Merge pull request #10795 from hashicorp/docs-update-cl,docs: update cl with missing entries
3095,docs: update cl with missing entries,
3096,update-gopsutil (#10790),
3097,Merge pull request #10789 from hashicorp/b-cns-mups,consul/connect: Validate uniqueness of Connect upstreams within task group
3098,consul/connect: Validate uniqueness of Connect upstreams within task group,"This PR adds validation during job submission that Connect proxy upstreams within a task group are using different listener addresses. Otherwise, a duplicate envoy listener will be created and not be able to bind. Closes #7833"
3099,Adds error handling for client error in getRandomJobAlloc. (#10787),
3100,Merge pull request #10784 from hashicorp/b-dlskf,e2e: fix a couple recent e2e bugs
3101,e2e: use -detach mode when registering jobs with cli,"This PR changes the e2e helper thingy to set -detach option when registering a job with the CLI instead of the API. This is necessary for jobs which never become healthy, as the deployment never finishes for failing jobs and the command never returns, causing the test to timeout after 10 minutes."
3102,consul: set task name only for group service checks,"This PR fixes a bug introduced in a refactoring https://github.com/hashicorp/nomad/pull/10764/files#diff-56b3c82fcbc857f8fb93a903f1610f6e6859b3610a4eddf92bad9ea27fdc85ec where task level service checks would inherent the task name field, when they shouldn't. Fixes #10781"
3103,tests: allocrunner CNI tests are Linux-only (#10783),"Running the module tests fail to compile on macOS because the CNI test file depends on the CNI network configurator, which is in a Linux-only file."
3104,deps: bump go-getter to 1.5.4 (#10778),
3105,Merge pull request #10776 from hashicorp/b-cns-sysjob-ups,consul/connect: in-place update service definition when connect upstreams are modified
3106,docs: host_network does support Docker task port mapping (#10774),
3107,changelog entry for #10756,
3108,consul/connect: in-place update service definition when connect upstreams are modified,"This PR fixes a bug where modifying the upstreams of a Connect sidecar proxy would not result Consul applying the changes, unless an additional change to the job would trigger a task replacement (thus replacing the service definition). The fix is to check if upstreams have been modified between Nomad's view of the sidecar service definition, and the service definition for the sidecar that is actually registered in Consul. Fixes #8754"
3109,docker: generate /etc/hosts file for bridge network mode (#10766),"When module, we create a pause container in Docker with no networking so that we have a process to hold the network namespace we create in Nomad. The default module file of that pause container is then used for all the Docker tasks that share that network namespace. Some applications rely on this file being populated. This changeset generates a module file and bind-mounts it to the container when Nomad owns the network, so that the container's hostname has an IP in the file as expected. The hosts file will include the entries added by the Docker driver's module field. In this changeset, only the Docker task driver will take advantage of this option, as the module/module drivers currently copy the host's module file and this can't be changed without breaking backwards compatibility. But the fields are available in the task driver protobuf for community task drivers to use if they'd like."
3110,build(deps): bump postcss from 7.0.35 to 7.0.36 in /website (#10772),Bumps link from 7.0.35 to 7.0.36. - link - link - link  updated-dependencies: - dependency-name: postcss   dependency-type: indirect ... Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
3111,build(deps): bump ws from 7.3.1 to 7.4.6 in /scripts/screenshots/src (#10671),Bumps link from 7.3.1 to 7.4.6. - link - link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
3112,Merge pull request #10765 from hashicorp/b-java-fp-version,client/fingerprint/java: improve java version string regex matching
3113,client/fingerprint/java: improve java version string regex matching,"This PR improves the regular expression used for matching the java version string, which varies a lot depending on the java vendor and version. These are the example strings we now test for: java version ""1.7.0_80"" openjdk version ""11.0.1"" 2018-10-16 openjdk version ""11.0.1"" 2018-10-16 java version ""1.6.0_36"" openjdk version ""1.8.0_192"" openjdk 11.0.11 2021-04-20 LTS The last one is a new test added on behalf of #6081, which is still broken on today's CentOS 7 default JDK package. openjdk 11.0.11 2021-04-20 LTS OpenJDK Runtime Environment 18.9 (build 11.0.11+9-LTS) OpenJDK 64-Bit Server VM 18.9 (build 11.0.11+9-LTS, mixed mode, sharing) ==> Evaluation ""21c6caf7"" finished with status ""complete"" but failed to place all allocations:     Task Group ""example"" (failed to place 1 allocation):       * Constraint ""${driver.java.version} >= 11.0.0"": 1 nodes excluded by filter     Evaluation ""2b737d48"" waiting for additional capacity to place remainder Fixes #6081"
3114,Merge pull request #10764 from hashicorp/b-passfail-lost,consul: make failures_before_critical and success_before_passing work with group services
3115,docs: add bugfix note to 1.0.8,
3116,consul: make failures_before_critical and success_before_passing work with group services,This PR fixes some job submission plumbing to make sure the Consul Check parameters - failure_before_critical - success_before_passing work with group-level services. They already work with task-level services.
3117,Merge pull request #10762 from hashicorp/docs-update-cl-2,docs: update changelog
3118,docs: update changelog,
3119,Merge pull request #10758 from hashicorp/b-fix-test-datarace-plugins,plugins: fix test data race.
3120,plugins: fix test data race.,
3121,cli: check deployment exists before monitoring (#10757),"System and batch jobs don't create deployments, which means nomad tries to monitor a non-existent deployment when it runs a job and outputs an error message. This adds a check to make sure a deployment exists before monitoring. Also fixes some formatting. Co-authored-by: Tim Gross link"
3122,deployment watcher: Reuse allocsCh if allocIndex remains the same (#10756),"Fix deployment watchers to avoid creating unnecessary deployment watcher goroutines and blocking queries. module creates a new goroutine that makes a blocking query to fetch updates of deployment allocs. Background When operators submit a new or updated service job, Nomad create a new deployment by default. The deployment object controls how fast to place the allocations through link and health checks configurations. The module and module package collaborate to achieve deployment logic: The scheduler only places the canaries and module allocations for a new deployment; the module monitors for alloc progress and then enqueues a new evaluation whenever the scheduler should reprocess a job and places the next module round of allocations. The module package makes blocking queries against the state store, to fetch all deployments and the relevant allocs for each running deployments. If module fails or is hindered from fetching the state, the deployments fail to make progress. module logic only runs on the leader. Why unnecessary deployment watchers can halt cluster progress Previously, module is called on every for loop iteration in module function. However, the for-loop may iterate many times before the allocs get updated. In fact, whenever a new deployment is created/updated/deleted, all modules get notified through module. The module goroutines and blocking queries spike significantly and grow quadratically with respect to the number of running deployments. The growth leads to two adverse outcomes:  it spikes the CPU/Memory usage resulting potentially leading to OOM or very slow processing it activates the link, so later the watcher fails to get updates and consequently fails to make progress towards placing new allocations for the deployment!  So the cluster fails to catch up and fails to make progress in almost all deployments. The cluster recovers after a leader transition: the deposed leader stops all watchers and free up goroutines and blocking queries; the new leader recreates the watchers without the quadratic growth and remaining under the rate limiter.  Well, until a spike of deployments are created triggering the condition again. Relevant Code References Path for deployment monitoring: * link loops waiting for deployment updates. * On every deployment update, link returns all deployments in the system * module calls module on every active deployment * which in turns, link. * The deployment watcher link * The link. Most of the time the selector clause is a no-op, because the flow was triggered due to another deployment update * The module for-loop iterates again and in the previous code we create yet another goroutine and blocking call that risks being rate limited. Co-authored-by: Tim Gross link"
3123,edit the computed agent version property,"This PR edits the computed agent version that is returned upon hitting the agent self request endpoint. The reason is because we believe that the Agent Member Tag property sometimes returns null because we may have cases where there are only clients and no servers and only servers are included in the Serf Gossip Protocol. There may be other cases where we do in fact have servers but the node is erased for some reason. We are unsure how to replicate that issue, however. edit mirage config This commit updates the Mirage Config because our acceptance tests depend on the Mirage Config, while we rely on Mirage Factories to populate fixture data for us to use when to run the Nomad UI locally Revert ""update the open-button disability functionality depending on a job's state"" This reverts commit 5190b308a51d55a7b0617854164c155d36d7e513."
3124,Merge pull request #10754 from hashicorp/b-client-connect-constraint,consul/connect: remove unnecessary connect constraint on clients
3125,Merge pull request #10752 from hashicorp/b-fix-test-datarace-volumewatcher,volumewatcher: fix test data race.
3126,quotas: evaluate quota feasibility last in scheduler (#10753),"The module is used as the source of nodes passed into feasibility checking for constraints. Every node that passes the quota check counts the allocation resources agains the quota, and as a result we count nodes which will be later filtered out by constraints. Therefore for jobs with constraints, nodes that are feasibility checked but fail have been counted against quotas. This failure mode is order dependent; if all the unfiltered nodes happen to be quota checked first, everything works as expected. This changeset moves the module to happen last among all feasibility checkers (but before ranking). The module will never receive filtered nodes so it will calculate quotas correctly."
3127,consul/connect: remove unnecessary connect constraint on clients,"PR https://github.com/hashicorp/nomad/pull/10702 added 2 new constraints for connect jobs - one for Consul gRPC listener, and one for Connect being enabled on Clients. Connect does not need to be enabled on clients, only on Consul servers. Remove the extra constraint. Discuss: https://discuss.hashicorp.com/t/nomad-1-1-1-and-consul-connect-enabled-on-consul-clients/25295"
3128,volumewatcher: fix test data race.,
3129,Merge pull request #10750 from hashicorp/br.quote-image,Fix headshot image 404
3130,Fix headshot image 404,
3131,fix agent-info help message formatting (#10747),
3132,Merge pull request #10745 from hashicorp/b-fix-test-datarace-deploymentwatcher,deploymentwatcher: fix test data race.
3133,Merge pull request #10744 from hashicorp/b-remove-duplicate-imports,chore: remove duplicate import statements
3134,Merge pull request #10742 from hashicorp/deflake-tests-20210608,Deflaking Test 2021 June edition
3135,Merge pull request #10739 from hashicorp/f-remove-unused-types-pkg,core: remove unused types pkg and PeriodicCallback type.
3136,deploymentwatcher: fix test data race.,
3137,tests: remove duplicate import statements.,
3138,jobspec2: remove duplicate imports statements.,
3139,drivers: remove duplicate import statements.,
3140,e2e: remove duplicate import statements.,
3141,deflake TestNomad_BootstrapExpect and other leader tests,"The test fails reliably locally on my machine. The test uses non-dev mode where Raft actions get committed to disk, causing operations to exceed the 50ms tight Raft deadlines. So, here we ensure that non-dev servers use default Raft config files with longer timeouts. Also, noticed that the test queries a server, that may a follower with a stale state. I've updated the test to ensure we query the leader for its state. The Barrier call ensures that the leader is a ""stable"" leader with committed entries. Protects against a window where a new leader reports the previous term before it commits a raft log entry."
3142,tests: deflake TestAgentProfile_RemoteClient,"TestAgentProfile_RemoteClient test must wait for the client node to be registered in raft state store, and not merely that the server has a network connection from the client. In https://app.circleci.com/pipelines/github/hashicorp/nomad/15539/workflows/8dcbc3f3-946b-4da0-b089-9093788bc0c9/jobs/147919, notice how module log line occured after the test already have failed. This is another case of flakiness due to not waiting for client registration."
3143,tests: deflake TestMonitor_Monitor_RemoteServer and cross-region tests,"Ensure that all servers are joined to each other before test proceed, instead of just joining them to the first server and relying on background serf propagation. Relying on backgorund serf propagation is a cause of flakiness, specially for tests with multiple regions. The server receiving the RPC may not be aware of the region and fail to forward RPC accordingly. For example, consider module failure in https://app.circleci.com/pipelines/github/hashicorp/nomad/16402/workflows/7f327235-7d0c-40ba-9757-600522afca51/jobs/158045  you can observe: * module is joined to module and module * module is the foreign region * module gains leadership in the default region, module is the non-leader *  search logs for module and notice that module    only added module and module, but not module! * so the query to the non-leader in the test fails to be forwarded to   the appopriate region."
3144,tests: deflake CSI forwarding tests,"This updates module so it returns once the client node got registered at the servers. Previously, it returns when the fingerprinters first batch completes, wtihout ensuring that the node is stored in the Raft data. The tests may fail later when it with unknown node errors later. module seem to be only called in CSI and some client stats now. This class of bug, assuming client is registered without checking, is a source of flakiness elsewhere. Other tests use other mechanisms for checking node readiness, though not consistently."
3145,Merge pull request #10740 from hashicorp/docs-deploy-monitor,"docs: add deployment monitor to docs, changelog"
3146,"docs: add deployment monitor to docs, changelog",Updates the deployment status and job run docs
3147,core: remove unused types pkg and PeriodicCallback type.,
3148,update release to 1.1.1 (#10735),
3149,prepare for 1.1.2 dev cycle,
3150,remove generated files,
3151,Generate files for 1.1.1 release,
3152,prepare changelog for 1.1.1/1.0.7 release,
3153,Update containerd task driver options., hostname auth  Signed-off-by: Shishir Mahajan link
3154,tests: use standard library testing.TB,Glint pulled in an updated version of mitchellh/go-testing-interface which broke some existing tests because the update added a Parallel() method to testing.T. This switches to the standard library testing.TB which doesn't have a Parallel() method.
3155,cli: add monitor flag to deployment status,"Adding '-verbose' will print out the allocation information for the deployment. This also changes the job run command so that it now blocks until deployment is complete and adds timestamps to the output so that it's more in line with the output of node drain. This uses glint to print in place in running in a tty. Because glint doesn't yet support cmd/powershell, Windows workflows use a different library to print in place, which results in slightly different formatting: 1) different margins, and 2) no spinner indicating deployment in progress."
3156,golang: update to 1.16.5 (#10733),1.16.5 contains some security fixes for zip that are notable to get: https://github.com/golang/go/issues?q=milestone%3AGo1.16.5+label%3ACherryPickApproved
3157,website: update alert banner (#10728),
3158,driver/docker: ignore cpuset errors for short-lived tasks follow up (#10730),minor refactor and changelog
3159,Merge pull request #10732 from hashicorp/docs-update-cl,docs: update cl
3160,docs: update cl,
3161,Merge pull request #10729 from hashicorp/f-cns-acl-check_cp-ent,consul: move consul acl tests into ent files
3162,Merge pull request #10416 from hashicorp/b-cores-docker,driver/docker: ignore error if container exists before cgroup can be written
3163,consul: move consul acl tests into ent files,"(cherry-pick ent back to oss) This PR moves a lot of Consul ACL token validation tests into ent files, so that we can verify correct behavior difference between OSS and ENT Nomad versions."
3164,docs: improve wait_for_index metrics description (#10717),"Old description of module described the metric in terms of waiting for a snapshot which has two problems:  ""Snapshot"" is an overloaded term in Nomad and operators can't be    expected to know which use we're referring to here. The most important thing about the metric is what we're waiting on    before taking a snapshot: the raft index of the object to be    processed (plan or eval).  The new description tries to cram all of that context into the tiny space provided. See #5791 for details about the module mechanism in general."
3165,Merge pull request #10720 from hashicorp/f-cns-acl-check,consul: correctly check consul acl token namespace when using consul oss
3166,consul: correctly check consul acl token namespace when using consul oss,"This PR fixes the Nomad Object Namespace <-> Consul ACL Token relationship check when using Consul OSS (or Consul ENT without namespace support). Nomad v1.1.0 introduced a regression where Nomad would fail the validation when submitting Connect jobs and allow_unauthenticated set to true, with Consul OSS - because it would do the namespace check against the Consul ACL token assuming the ""default"" namespace, which does not work because Consul OSS does not have namespaces. Instead of making the bad assumption, expand the namespace check to handle each special case explicitly. Fixes #10718"
3167,Merge pull request #10721 from hashicorp/b-icanthazip,e2e: use api.ipify.org
3168,docs: warn not to set module for Connect-enabled Docker task,
3169,Merge pull request #10723 from hashicorp/f-changelog-10712,chanagelog: add entry for #10712
3170,chanagelog: add entry for #10712,
3171,Merge pull request #10679 from hashicorp/ks.website/updates-alert-banner,chore: updates alert-banner — hashiconf
3172,e2e: use api.ipify.org,ipv4.icanhazip.com returns ipv6 addresses
3173,Merge pull request #10715 from hashicorp/f-cns-attrs,consul: probe consul namespace feature before using namespace api
3174,consul: pr cleanup namespace probe function signatures,
3175,changelog for backporting #10714,
3176,build(deps): bump lodash from 4.17.20 to 4.17.21 in /website (#10716),Bumps link from 4.17.20 to 4.17.21. - link - link  updated-dependencies: - dependency-name: lodash   dependency-type: indirect ... Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
3177,Update website/data/alert-banner.js,
3178,Fixed global-search keyboard shortcut for non-english keyboard layouts.,Closes #10646
3179,consul: probe consul namespace feature before using namespace api,"This PR changes Nomad's wrapper around the Consul NamespaceAPI so that it will detect if the Consul Namespaces feature is enabled before making a request to the Namespaces API. Namespaces are not enabled in Consul OSS, and require a suitable license to be used with Consul ENT. Previously Nomad would check for a 404 status code when makeing a request to the Namespaces API to ""detect"" if Consul OSS was being used. This does not work for Consul ENT with Namespaces disabled, which returns a 500. Now we avoid requesting the namespace API altogether if Consul is detected to be the OSS sku, or if the Namespaces feature is not licensed. Since Consul can be upgraded from OSS to ENT, or a new license applied, we cache the value for 1 minute, refreshing on demand if expired. Fixes https://github.com/hashicorp/nomad-enterprise/issues/575 Note that the ticket originally describes using attributes from https://github.com/hashicorp/nomad/issues/10688. This turns out not to be possible due to a chicken-egg situation between bootstrapping the agent and setting up the consul client. Also fun: the Consul fingerprinter creates its own Consul client, because there is no [currently] no way to pass the agent's client through the fingerprint factory."
3180,Merge pull request #10712 from hashicorp/b-gh-10711,cmd: validate the type flag when querying plugin status.
3181,update changelog for GH-10710 (#10713),Co-authored-by: Tim Gross link
3182,pool: track usage of incoming streams (#10710),"Track usage of incoming streams on a connection. Connections without reference counts get marked as unused and reaped in a periodic job. This fixes a bug where module and module sessions get terminated unexpectedly. Previously, when a client heartbeats switches between servers, the pool connection reaper eventually identifies the connection as unused and closes it even if it has an active exec/fs sessions. Fixes #10579"
3183,cmd: validate the type flag when querying plugin status.,
3184,deployment query rate limit (#10706),
3185,Merge pull request #10704 from hashicorp/e2e-terraform-tweaks-20210604,e2e terraform tweaks: 2021-06 edition
3186,remove unused Spark security group rules,
3187,Merge pull request #10658 from hashicorp/f-cc-mesh-gw,consul/connect: add support for connect mesh gateways
3188,e2e: pass nomad_url variable,
3189,consul/connect: fix tests for mesh gateway mode,
3190,e2e: NOMAD_VERSION is not set when installing url,
3191,restrict ingress ip,
3192,consul/connect: use range on upstream canonicalize,Co-authored-by: Tim Gross link
3193,consul/connect: fix upstream mesh gateway default mode setting,"This PR fixes the API to not set the default mesh gateway mode. Before, the mode would be set to ""none"" in Canonicalize, which is incorrect. We should pass through the empty string so that folks can make use of Consul service-defaults Config entries to configure the default mode."
3194,consul/connect: add support for connect mesh gateways,"This PR implements first-class support for Nomad running Consul Connect Mesh Gateways. Mesh gateways enable services in the Connect mesh to make cross-DC connections via gateways, where each datacenter may not have full node interconnectivity. Consul docs with more information: https://www.consul.io/docs/connect/gateways/mesh-gateway The following group level service block can be used to establish a Connect mesh gateway. service {   connect {     gateway {       mesh {         // no configuration       }     }   } } Services can make use of a mesh gateway by configuring so in their upstream blocks, e.g. service {   connect {     sidecar_service {       proxy {         upstreams {           destination_name = """"           local_bind_port  =            datacenter       = """"           mesh_gateway {             mode = """"           }         }       }     }   } } Typical use of a mesh gateway is to create a bridge between datacenters. A mesh gateway should then be configured with a service port that is mapped from a host_network configured on a WAN interface in Nomad agent config, e.g. client {   host_network ""public"" {     interface = ""eth1""   } } Create a port mapping in the group.network block for use by the mesh gateway service from the public host_network, e.g. network {   mode = ""bridge""   port ""mesh_wan"" {     host_network = ""public""   } } Use this port label for the service.port of the mesh gateway, e.g. service {   name = ""mesh-gateway""   port = ""mesh_wan""   connect {     gateway {       mesh {}     }   } } Currently Envoy is the only supported gateway implementation in Consul. By default Nomad client will run the latest official Envoy docker image supported by the local Consul agent. The Envoy task can be customized by setting module in agent config or by setting the module block. Gateways require Consul 1.8.0+, enforced by the Nomad scheduler. Closes #9446"
3195,Merge pull request #10702 from hashicorp/f-cc-constraints,consul/connect: use additional constraints in scheduling connect tasks
3196,csi: accept list of caps during validation in volume register,"When module was introduced in Nomad 1.1.0, we changed the volume spec to take a list of capabilities rather than a single capability, to meet the requirements of the CSI spec. When a volume is registered via module, we should be using the same fields to validate the volume with the controller plugin."
3197,consul/connect: use additional constraints in scheduling connect tasks,"This PR adds two additional constraints on Connect sidecar and gateway tasks, making sure Nomad schedules them only onto nodes where Connect is actually enabled on the Consul agent. Consul requires module and module to be explicitly set on agent configuration before Connect APIs will work. Until now, Nomad would only validate a minimum version of Consul, which would cause confusion for users who try to run Connect tasks on nodes where Consul is not yet sufficiently configured. These contstraints prevent job scheduling on nodes where Connect is not actually use-able. Closes #10700"
3198,Merge pull request #10699 from hashicorp/f-consul-fp,fingerprint: update consul fingerprinter with additional attributes
3199,Merge branch 'main' into f-consul-fp,
3200,Apply suggestions from code review,Co-authored-by: Tim Gross link
3201,csi: validate module block has module and module,The module and module fields are required for CSI volumes. The module block is only allowed for CSI volumes.
3202,update changelog (#10701),
3203,drivers/exec: Don't inherit Nomad oom_score_adj value (#10698),"Explicitly set the module value for module and module tasks. We recommend that the Nomad service to have oom_score_adj of a low value (e.g. -1000) to avoid having nomad agent OOM Killed if the node is oversubscriped. However, Nomad's workloads should not inherit Nomad's process, which is the default behavior. Fixes #10663"
3204,docs: update cl,
3205,client/fingerprint/consul: add new attributes to consul fingerprinter,This PR adds new probes for detecting these new Consul related attributes: Consul namespaces are a Consul enterprise feature that may be disabled depending on the enterprise license associated with the Consul servers. Having this attribute available will enable Nomad to properly decide whether to query the Consul Namespace API. Consul connect must be explicitly enabled before Connect APIs will work. Currently Nomad only checks for a minimum Consul version. Having this attribute available will enable Nomad to properly schedule Connect tasks only on nodes with a Consul agent that has Connect enabled. Consul connect requires the grpc port to be explicitly set before Connect APIs will work. Currently Nomad only checks for a minimal Consul version. Having this attribute available will enable Nomad to schedule Connect tasks only on nodes with a Consul agent that has the grpc listener enabled.
3206,client/fingerprint/consul: refactor the consul fingerprinter to test individual attributes,"This PR refactors the ConsulFingerprint implementation, breaking individual attributes into individual functions to make testing them easier. This is in preparation for additional extractors about to be added. Behavior should be otherwise unchanged. It adds the attribute consul.sku, which can be used to differentiate between Consul OSS vs Consul ENT."
3207,docs: fix broken links in module commands,
3208,build(deps): bump ws from 6.2.1 to 6.2.2 in /website (#10691),Bumps link from 6.2.1 to 6.2.2. - link - link  updated-dependencies: - dependency-name: ws   dependency-type: indirect ... Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
3209,rotate algolia api key (#10662),
3210,docs: clarify default module behavior,
3211,scheduler: test for reconciler's in-place rollback behavior,"The reconciler has some complicated behavior when there are already running allocations from a previous version of the job that we want to keep, as happens during a rollback. Document this behavior with a test."
3212,docs: changelog entries for 1.1.1 and backports,
3213,chore: updates text-split-with-logo-grid package (#10690),
3214,plan applier: add trace-level log of plan,"The plans generated by the scheduler produce high-level output of counts on each evaluation, but when debugging scheduler issues it'd be nice to have a more detailed view of the resulting plan. Emitting this log at trace minimizes the overhead, and producing it in the plan applyer makes it easier to find as it will always be on the leader."
3215,leader: call eval log formatting lazily,"Arguments to our logger's various write methods are evaluated eagerly, so method calls in log parameters will always be called, regardless of log level. Move some logger messages to the logger's module method so that module is evaluated lazily instead."
3216,chore: updates alert-banner — hashiconf eu,
3217,e2e: fix terraform output environment command instruction (#10674),
3218,Add namespace to allocation search result label,Is “@ namespace” sensible? 🧐
3219,Change fuzzy search to search all namespaces,Thanks to @apollo13 for reporting this in #10101.
3220,Add namespace to job search results,
3221,docs: added license faq,
3222,CSI snapshot list: do not shorten snapshot ID,Signed-off-by: Grant Griffiths link
3223,Merge pull request #10657 from hashicorp/b-alloc-exec-closing,Handle module termination events in order
3224,add a note about node connection failure and fallback,
3225,e2e: Spin clusters with custom url binaries (#10656),"Ease spinning up a cluster, where binaries are fetched from arbitrary urls.  These could be CircleCI module job artifacts, or presigned S3 urls. Co-authored-by: Tim Gross link"
3226,exec: api: handle closing errors differently,"refactor the api handling of module, and ensure that we process all received events before handling websocket closing. The exit code should be the last message received, and we ought to ignore any websocket close error we receive afterwards. Previously, we used two channels: one for websocket frames and another for handling errors. This raised the possibility that we processed the error before processing the frames, resulting into an ""unexpected EOF"" error."
3227,docs: changelog entry for 10539,
3228,exec: http: close websocket connection gracefully,"In this loop, we ought to close the websocket connection gracefully when the StreamErrWrapper reaches EOF. Previously, it's possible that that we drop the last few events or skip sending the websocket closure. If module returns and module is called, before the loop here completes processing streaming events, the loop exits prematurely without propagating the last few events. Instead here, the loop continues until we hit module EOF (through module), to ensure we process the events to completion."
3229,e2e: stop suppressing unexpected EOF errors,
3230,Display confirmation message on 'nomad volume delete' and 'nomad volume deregister',
3231,changelog: add missing GH link,
3232,cli: improve wildcard namespace prefix matches (#10648),"When a wildcard namespace is used for module commands that support prefix matching, avoid asking the user for input if a prefix is an unambiguous exact match so that the behavior is similar to the commands using a specific or unset namespace."
3233,docs: improve documentation for CSI create/register mount_options,Adds clarification to module commands around how the module block in the jobspec overrides this behavior. Adds missing section to module and to example volume spec for both commands.
3234,CSI: Include MountOptions in capabilities sent to CSI for all RPCs,"Include the VolumeCapability.MountVolume data in ControllerPublishVolume, CreateVolume, and ValidateVolumeCapabilities RPCs sent to the CSI controller. The previous behavior was to only include the MountVolume capability in the NodeStageVolume request, which on some CSI implementations would be rejected since the Volume was not originally provisioned with the specific mount capabilities requested."
3235,agent: surface websocket errors in logs,The websocket interface used for module has to silently drop client send errors because otherwise those errors would interleave with the streamed output. But we may be able to surface errors that cause terminated websockets a little better in the HTTP server logs.
3236,Merge pull request #10647 from hashicorp/b-fix-nomad-event-endpoint-tests,events: fix event endpoint tests to ignore heartbeats.
3237,Removed unsupported options from volume create,Volume creation doesn't support the context (this would only be used for register)
3238,events: fix event endpoint tests to ignore heartbeats.,"seems when this PR was raised, the Nomad CI provider was having availability issues meaning the test suite was not correctly run, thus allowing broken tests into main. The PR itself exercised test code which had not been hit before. The particular problem is when identifying whether the event received is a heartbeat; this was performed using standard Golang conditionals. Unfortunately the operator == is not defined on byte arrays, resulting in the check always returning false. To overcome this issue the code now uses the bytes.Equal function to correctly compare the data."
3239,Merge pull request #10634 from hashicorp/b-docs-fix-hcl2-locals-example,docs: fix jobspec hcl2 locals example.
3240,events: fix slow client connection to empty event stream (#10637),  events: fix slow client connection to empty event stream   doc: fix changelog of event stream connection init 
3241,docs: fix jobspec hcl2 locals example.,
3242,Add new volume commands to overview page,
3243,cli: Handle nil MemoryMaxMB (#10620),"Handle when MemoryMaxMB is nil, as expected when a new 1.1.0 is hitting a pre-1.1.0 Server."
3244,Merge pull request #10627 from hashicorp/documentation-ecs-remote-task-driver,docs: fixes broken links
3245,(demo) -> [demo],
3246,docs: fixes broken links,Fixed broken links for the remote task driver ECS page
3247,docs: fixes typo within volume registration page,
3248,docs: ensure definitions have anchors,Move the words being defined in the /docs/internal/architecture page to be small headers so that they can be linked to with anchors from Learn guides and other documentation location.
3249,Update alert-banner.js,
3250,Merge pull request #10615 from hashicorp/docs-merge-from-release,merge from release
3251,fix version to be 'dev',
3252,Merge branch 'release-1.1.0' into main,
3253,Remove 1.1.0 RC merchandising (#10614),
3254,release 1.1.0: bump version and changelog info,
3255,Merge pull request #10612 from hashicorp/docs-cl-fmt,docs: run changelogfmt
3256,docs: run changelogfmt,
3257,patch images (#10607),
3258,Merge pull request #10610 from hashicorp/license-documentation-update,docs: update enterprise license page
3259,docs: update enterprise license page,Added a link to the enterprise license tutorial and updated the trial link to use the recommended marketing url.
3260,e2e: update TF lockfile,
3261,remove unused dist/ directory,The module directory is unmaintained and gets out of sync with the Linux packages that we distribute and the documentation found in the Learn Guides. We even have upstart files for a distro that is out of support! Remove this directory so that users are not confused.
3262,Add HashiConf alert banner data (#10606),
3263,remove generated files,
3264,Release v1.1.0,
3265,Update nomad.service,While working on voxpupuli/puppet-nomad/pull/50 we observed that the released version of this file and the file in this repo are not in sync. This PR brings the systemd service file in sync with what is currently packaged into the rpm and deb packages as released in the HashiCorp repositories. I am not sure how/where to update the  link
3266,Update service.mdx,
3267,Generate files for 1.1.0 release,
3268,release version and date,
3269,Merge pull request #10600 from hashicorp/f-exec-allow_caps,drivers/exec+java: reduce default set of linux capabilities
3270,Merge pull request #10600 from hashicorp/f-exec-allow_caps,drivers/exec+java: reduce default set of linux capabilities
3271,docs: minor wording tweaks + cl,
3272,drivers/exec: pass capabilities through executor RPC,Add capabilities to the LaunchRequest proto so that the capabilities set actually gets plumbed all the way through to task launch.
3273,deps: update go mod tidy,Looks like we no longer need a package.
3274,drivers: fixup linux version dependent test cases,The error output being checked depends on the linux caps supported by the particular operating system. Fix these test cases to just check that an error did occur.
3275,docs: update docs for linux capabilities in exec/java/docker drivers,"Update docs for allow_caps, cap_add, cap_drop in exec/java/docker driver pages. Also update upgrade guide with guidance on new default linux capabilities for exec and java drivers."
3276,drivers/docker: reuse capabilities plumbing in docker driver,"This changeset does not introduce any functional change for the docker driver, but rather cleans up the implementation around computing configured capabilities by re-using code written for the exec/java task drivers."
3277,drivers/java: enable setting allow_caps on java driver,"Enable setting allow_caps on the java task driver plugin, along with the associated cap_add and cap_drop options in java task configuration."
3278,drivers/exec: enable setting allow_caps on exec driver,"This PR enables setting allow_caps on the exec driver plugin configuration, as well as cap_add and cap_drop in exec task configuration. These options replicate the functionality already present in the docker task driver. Important: this change also reduces the default set of capabilities enabled by the exec driver to match the default set enabled by the docker driver. Until v1.0.5 the exec task driver would enable all capabilities supported by the operating system. v1.0.5 removed NET_RAW from that list of default capabilities, but left may others which could potentially also be leveraged by compromised tasks. Important: the ""root"" user is still special cased when used with the exec driver. Older versions of Nomad enabled enabled all capabilities supported by the operating system for tasks set with the root user. To maintain compatibility with existing clusters we continue supporting this ""feature"", however we maintain support for the legacy set of capabilities rather than enabling all capabilities now supported on modern operating systems."
3279,fix missing changelog entries from backports,
3280,fix missing changelog entries from backports,
3281,Merge pull request #10550 from hashicorp/docs-rtd,Remote Task Driver docs
3282,Apply suggestions from code review,Co-authored-by: Seth Hoenig link
3283,Update alert-banner.js,
3284,docs: mention #10592 in rtd docs,
3285,client: fix multiple imports (#10537),
3286,docs: document remote task drivers & ecs driver,
3287,add a section about memory oversubscription (#10573),add a section about memory oversubscription Co-authored-by: Tim Gross link
3288,ui: Fix server list leader determination for IPv6 (#10530),"This closes #10513, thanks to @bastelfreak for the report. GET /status/leader returns an IPv6 host with square brackets around the IP address as expected, but the rpcAddr property on the agent model does not. This fixes rpcAddr, updates the Mirage /status/leader mock to properly format an IPv6 host, and changes the agent factory to sometimes produce IPv6 addresses. I added a formatHost utility function to centralise the conditional square bracket-wrapping that would have otherwise been further scattered around."
3289,Merge pull request #10585 from hashicorp/docs-1.1.0-rc1,website: update 1.1.0-beta1 to 1.1.0-rc1
3290,website: update 1.1.0-beta1 to 1.1.0-rc1,
3291,Fix exec not working for another region (#10539),This conditionally includes a region query parameter when opening the exec socket.
3292,docs: fix fields in 'volume create' example,"The module block was removed during implementation in lieu of the module and module fields, but it wasn't removed from the example in the documentation."
3293,remove generated files,
3294,Release v1.1.0-rc1,
3295,Generate files for 1.1.0-rc1 release,
3296,Merge pull request #10577 from joel0/cf-capitalization,minor: update 'Cloudflare' capitalization
3297,minor: update 'Cloudflare' capitalization,
3298,Merge pull request #10574 from hashicorp/docs-1.0.5,update website to Nomad 1.0.5
3299,update website to Nomad 1.0.5,
3300,Merge pull request #10572 from hashicorp/cve-2021-32575,drivers/docker+exec+java: disable net_raw capability by default
3301,drivers/docker+exec+java: disable net_raw capability by default,"The default Linux Capabilities set enabled by the docker, exec, and java task drivers includes CAP_NET_RAW (for making ping just work), which has the side affect of opening an ARP DoS/MiTM attack between tasks using bridge networking on the same host network. https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities This PR disables CAP_NET_RAW for the docker, exec, and java task drivers. The previous behavior can be restored for docker using the allow_caps docker plugin configuration option. A future version of nomad will enable similar configurability for the exec and java task drivers."
3302,content: swap out diagrams with typos (#10571),
3303,check and return error from parsing var-files (#10569),  check and return error from parsing var-files   changelog entry for 1.1.0 and 1.0.5 
3304,website: set up /trial redirection (#10565),
3305,Clean up docker driver test to make it less flaky (#10559),Co-authored-by: Mahmood Ali link
3306,E2E: remove references to nomad_sha,
3307,e2e: enable memory oversubscription (#10557),Enable memory oversubscription for the oversubscription tests.
3308,docs: add detail to 1.1 upgrade guide for licensing,
3309,docs: clarify that a default update strategy is used when update strategy is omitted,
3310,Fix test panic in docker driver test,
3311,docs: restructure autoscaling plugins menu (#10534),  docs: restructure autoscaling plugins menu   docs: add autoscaling threshold strategy (#10535) 
3312,Node Drain Metadata (#10250),
3313,documentation for module,
3314,Support disabling TCP checks for connect sidecar services,
3315,Merge pull request #10543 from hashicorp/docs-consul-grpc-addr,docs: add agent consul grpc_address docs
3316,docs: add agent consul grpc_address docs,"We already supported this configuration, but forgot to document it."
3317,update golang to 1.16.4,
3318,Merge pull request #10532 from hashicorp/docs-fixup-dc-region-arch-words-10515,docs: fixup wording around datacenters and regions on architecture docs
3319,ui: build(deps): bump underscore from 1.12.0 to 1.13.1 in /ui (#10525),Bumps link from 1.12.0 to 1.13.1. - link - link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
3320,ui: build(deps): bump url-parse from 1.4.7 to 1.5.1 in /ui (#10528),Bumps link from 1.4.7 to 1.5.1. - link - link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
3321,annotate 1.1 beta fields,
3322,Remove a stale note about 0.9 scheduler config,
3323,Moving licensing to the top of the upgrade guide and clarifying wording,
3324,website: adding trial links,
3325,docs: fixup wording around datacenters and regions on architecture docs,Part of #10515
3326,ui: build(deps): bump lodash from 4.17.20 to 4.17.21 in /ui (#10526),Bumps link from 4.17.20 to 4.17.21. - link - link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
3327,ui: build(deps): bump handlebars from 4.7.6 to 4.7.7 in /ui (#10527),Bumps link from 4.7.6 to 4.7.7. - link - link - link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
3328,website: support hidden pages in nav-data (#10510),"  website: bump to docs-page prerelease with hidden page support   website: remove temp check for hidden pages, covered by docs-page   website: bump to stable docs-page, w next-mdx-remote bump "
3329,docs: Fix missing link to operator debug (#10523),
3330,Merge pull request #10441 from hashicorp/b-docker-stopsignal,drivers/docker: add support for STOPSIGNAL
3331,drivers/docker: add support for STOPSIGNAL,"This fixes a bug where Nomad overrides a Dockerfile's STOPSIGNAL with the default kill_signal (SIGTERM). This adds a check for kill_signal. If it's not set, it calls StopContainer instead of Signal, which uses STOPSIGNAL if it's specified. If both kill_signal and STOPSIGNAL are set, Nomad tries to stop the container with kill_signal first, before then calling StopContainer. Fixes #9989"
3332,expose NOMAD_MEMORY_MAX_LIMIT env var (#10514),Follow up to memory oversubscription - expose an env-var to indicate when memory oversubscription is enabled and what the limit is. This will be helpful for setting hints to app for memory management. Co-authored-by: Seth Hoenig link
3333,chore(website): update downloads page (#10509),  style(downloads): adds releaseCandidate style   refactor(downloads): use mktg-logos asset 
3334,website: reserved cores docs,
3335,command: show number of reserved cores on alloc status output,
3336,drivers: Capture exit code when task is killed (#10494),"This commit ensures Nomad captures the task code more reliably even when the task is killed. This issue affect to module driver, as noted in https://github.com/hashicorp/nomad/issues/10430 . We fix this issue by ensuring that the TaskRunner only calls module once. The TaskRunner monitors the completion of the task by calling module which should return the task exit code on completion. However, it also could return a ""context canceled"" error if the agent/executor is shutdown. Previously, when a task is to be stopped, the killTask path makes two WaitTask calls, and the second returns ""context canceled"" occasionally because of a ""race"" in task shutting down and depending on driver, and how fast it shuts down after task completes. By having a single WaitTask call and consistently waiting for the task, we ensure we capture the exit code reliably before the executor is shutdown or the contexts expired. I opted to change the TaskRunner implementation to avoid changing the driver interface or requiring 3rd party drivers to update. Additionally, the PR ensures that attempts to kill the task terminate when the task ""naturally"" dies. Without this change, if the task dies at the right moment, the module call may retry to kill an already-dead task for up to 5 minutes before giving up."
3337,remove license put command references (#10501),
3338,[Assembly]: Website Branding Refresh (#10188),  style: update gray brand colors   style: update brand colors   chore: upgrade react-components deps   chore: update text split cta link color   style(home): update icons   refactor(home): use learn-callout component   style(downloads): temporary color override   style(community): fix link color   Update website/pages/community/style.css   Co-authored-by: Zachary Shilton link   update package-lock   update deps   add new downloads page   remove extra husky script   chore: upgrades nextjs-scripts dep   chore: upgrades community page vertical text block list   chore: test component pre-releases   chore: upgrade deps   chore: upgrades nextjs-scripts   chore: update home icon colors   chore: update home logo grid   chore(website): upgrade deps   style: adjust features icons border radius   style: home hero bg to secondary   chore: upgrade deps for body copy colors   chore: upgrades alert banner   feat: updates favicon   chore: updates deps   content(home): updates assets   content(use-cases:simple container orch): updates content   content(use-cases:non-containerized-app) updates assets   content(use-cases:auto networking with consul): updates assets   style(home): remove use cases icons override   style(home-hero): remove bg pattern on mobile   content(use-cases): updates asset   chore: update assets   chore: updates product download page to alpha   chore: updates product download page to stable   Co-authored-by: Zachary Shilton link Co-authored-by: Jeff Escalante link
3339,Merge pull request #10500 from hashicorp/br.11-banner-update,Updates website banner for Nomad 1.1
3340,Updates banner for Nomad 1.1,
3341,ui: Fix bug where switching topo viz allocation highlights doesn’t update charts (#10490),"This closes #10489. It adds module to the allocation getter so it works as expected as a dependent key for the module computed property, as described here: https://guides.emberjs.com/release/upgrading/current-edition/tracked-properties/#toc_backwards-compatibility"
3342,Merge pull request #10498 from hashicorp/b-hclfmt-ceph,demo: apply hclfmt to ceph files
3343,docker: improve error message for auth helper,"The error returned from the stdlib's module package is always a message with the exit code of the exec'd process, not any error message that process might have given us. This results in opaque failures for the Nomad user. Cast to an module so that we can access the output from stderr."
3344,demo: apply hclfmt to ceph files,
3345,Merge pull request #10492 from hashicorp/b-expose-diff,connect: use deterministic injected dynamic exposed port label
3346,demo: CSI Ceph,This changeset expands on the existing demonstration we had for Ceph by showing volume creation. It includes a demo setup for Ceph on Vagrant so that you don't need a whole Ceph cluster to try it out.
3347,Adding environment variables to Command overview page,
3348,git example - suggest providing real repo,when troubleshooting it is better if this command will actually work (pointing to a real repository)
3349,docs: add 1.1.0-beta1 download link,
3350,api: actually set MemoryOversubscriptionEnabled (#10493),
3351,connect: use deterministic injected dynamic exposed port,This PR uses the checksum of the check for which a dynamic exposed port is being generated (instead of a UUID prefix) so that the generated port label is deterministic. This fixes 2 bugs:  - 'job plan' output is now idempotent for jobs making use of injected ports  - tasks will no longer be destructively updated when jobs making use of    injected ports are re-run without changing any user specified part of    job config. Closes: https://github.com/hashicorp/nomad/issues/10099
3352,Merge pull request #10389 from hashicorp/docs-9895,docs: add #9895 to the changelog
3353,docs: add #9895 to the changelog,
3354,changelog: ensure all backports shown,
3355,Docs memory oversubscription (#10478),  update docs   document memory_oversubscription_enabled scheduler config 
3356,update golang to 1.16.3 (#10484),
3357,batch update changelog,
3358,Merge pull request #10248 from hashicorp/f-remotetask-2021,core: propagate remote task handles
3359,comment out unused consts to make linter happy,
3360,docs: make bootstrap installs buf now,No need to specify a version in the contributing docs. Let module handle that.
3361,clarify docs from pr comments,
3362,docs: remove API doc for license PUT,
3363,Add guard against missing namespace in Mirage (#10474),"Similarly to 735f056, this won’t happen with real data, but can happen in the current Mirage factory setup."
3364,Port OSS changes for Enterprise Quota accounting (#10481),
3365,Allow configuring memory oversubscription (#10466),"Cluster operators want to have better control over memory oversubscription and may want to enable/disable it based on their experience. This PR adds a scheduler configuration field to control memory oversubscription. It's additional field that can be set in the link, or link. I opted to have the memory oversubscription be an opt-in, but happy to change it.  To enable it, operators should call the API with: module If memory oversubscription is disabled, submitting jobs specifying module will get a ""Memory oversubscription is not enabled"" warnings, but the jobs will be accepted without them accessing the additional memory. The warning message is like: ``` $ nomad job run /tmp/j Job Warnings: 1 warning(s):  Memory oversubscription is not enabled; Task cache.redis memory_max value will be ignored  ==> Monitoring evaluation ""7c444157""     Evaluation triggered by job ""example"" ==> Monitoring evaluation ""7c444157""     Evaluation within deployment: ""9d826f13""     Allocation ""aa5c3cad"" created: node ""9272088e"", group ""cache""     Evaluation status changed: ""pending"" -> ""complete"" ==> Evaluation ""7c444157"" finished with status ""complete"" then you can examine the Alloc AllocatedResources to validate whether the task is allowed to exceed memory: $ nomad alloc status -json aa5c3cad | jq '.AllocatedResources.Tasks[""redis""].Memory' {   ""MemoryMB"": 256,   ""MemoryMaxMB"": 0 } ```"
3366,docs: add FAQ for Docker Desktop for Windows and MacOS (#10390),  docs: add FAQ for Docker Desktop for Windows and MacOS   docs: add win   docs: add docker desktop note to docker driver page 
3367,ui: Update namespaces design (#10444),This rethinks namespaces as a filter on list pages rather than a global setting. The biggest net-new feature here is being able to select All (*) to list all jobs or CSI volumes across namespaces.
3368,changelog: add entry for blocked eval metrics (#10475),
3369,Add metrics for blocked eval resources (#10454),  add metrics for blocked eval resources   docs: add new blocked_evals metrics   fix to call module instead of module directly 
3370,docs: mention remote task drivers,
3371,changelog: Add missed UI entries for 1.1 (#10467),
3372,ui: Add optional memory max to task details ribbon (#10459),"This is the first step in #10268. If a maximum is not specified, the task group sum uses the memory number instead. The maximum is only shown when it’s higher than the memory sum."
3373,docs: Enterprise licensing updates,
3374,ui: Change global search to use fuzzy search API (#10412),"This updates the UI to use the new fuzzy search API. It’s a drop-in replacement so the / shortcut to jump to search is preserved, and results can be cycled through and chosen via arrow keys and the enter key. It doesn’t use everything returned by the API: * deployments and evaluations: these match by id, doesn’t seem like   people would know those or benefit from quick navigation to them * namespaces: doesn’t seem useful as they currently function * scaling policies * tasks: the response doesn’t include an allocation id, which means they   can’t be navigated to in the UI without an additional query * CSI volumes: aren’t actually returned by the API Since there’s no API to check the server configuration and know whether the feature has been disabled, this adds another query in route:application#beforeModel that acts as feature detection: if the attempt to query fails (500), the global search field is hidden. Upon having added another query on load, I realised that beforeModel was being triggered any time service:router#transitionTo was being called, which happens upon navigating to a search result, for instance, because of refreshModel being present on the region query parameter. This PR adds a check for transition.queryParamsOnly and skips rerunning the onload queries (token permissions check, license check, fuzzy search feature detection). Implementation notes:  there are changes to unrelated tests to ignore the on-load feature   detection query some lifecycle-related guards against undefined were required to   address failures when navigating to an allocation the minimum search length of 2 characters is hard-coded as there’s   currently no way to determine min_term_length in the UI"
3375,"license: remove ""Terminates At"" from license get command","The module field can't be removed from the struct for backwards compatibility reasons, but there's no purpose to it anymore so we shouldn't be showing it to end users of the command."
3376,license: update 'license get' command,
3377,Merge pull request #10439 from hashicorp/pick-ent-acls-changes,e2e: add e2e tests for consul namespaces on ent with acls
3378,licensing: remove raft storage and sync,This changeset is the OSS portion of the work to remove the raft storage and sync for Nomad Enterprise.
3379,docs: update filesystem.mdx to fix typo,
3380,ignore local e2e files, nomad-driver-ecs is an optional plugin to packer into ami ecs.vars is generated by tf *.auto.tfvars is just a style I use for local var overrides
3381,e2e: use public_ip in packer,
3382,vendor: update aws-sdk-go and deps,
3383,core: propagate remote task handles,"Add a new driver capability: RemoteTasks. When a task is run by a driver with RemoteTasks set, its TaskHandle will be propagated to the server in its allocation's TaskState. If the task is replaced due to a down node or draining, its TaskHandle will be propagated to its replacement allocation. This allows tasks to be scheduled in remote systems whose lifecycles are disconnected from the Nomad node's lifecycle. See https://github.com/hashicorp/nomad-driver-ecs for an example ECS remote task driver."
3384,e2e: add e2e tests for consul namespaces on ent with acls,"This PR adds e2e tests for Consul Namespaces for Nomad Enterprise with Consul ACLs enabled. Needed to add support for Consul ACL tokens with module and module blocks, which Nomad parses and validates before tossing the token. These bits will need to be picked back to OSS."
3385,Merge pull request #10457 from hashicorp/b-igce-wildcard,consul/connect: fix bug where ingress gateways could not use wildcard services
3386,Merge pull request #10455 from hashicorp/b-cc-uppercase,consul/connect: check connect group and service names for uppercase characters
3387,Merge pull request #10453 from hashicorp/b-envoy-wait-longer,connect: use exp backoff when waiting on consul envoy bootstrap
3388,Update libraries-and-sdks.mdx,
3389,consul/connect: fix bug where ingress gateways could not use wildcard services,"This PR fixes a bug where Nomad was more restrictive on Ingress Gateway Configuration Entry definitions than Consul. Before, Nomad would not allow for declaring IGCEs with http listeners with service name ""*"", which is a special feature allowable by Consul. Note: to make http protocol work, a service-default must be defined setting the protocol to http for each service. Fixes: #9729"
3390,consul/connect: check connect group and service names for uppercase characters,"This PR adds job-submission validation that checks for the use of uppercase characters in group and service names for services that make use of Consul Connect. This prevents attempting to launch services that Consul will not validate correctly, which in turn causes tasks to fail to launch in Nomad. Underlying Consul issue: https://github.com/hashicorp/consul/issues/6765 Closes #7581 #10450"
3391,connect: use exp backoff when waiting on consul envoy bootstrap,"This PR wraps the use of the consul envoy bootstrap command in an expoenential backoff closure, configured to timeout after 60 seconds. This is an increase over the current behavior of making 3 attempts over 6 seconds. Should help with #10451"
3392,Merge pull request #10448 from hashicorp/f-docs-add-autoscaler-plugin-launch-info,docs: add detail on launching autoscaler external plugins.
3393,docs: add detail on launching autoscaler external plugins.,
3394,Merge pull request #10442 from kphunter/patch-1,Fix path tip
3395,Fix path tip,
3396,api: /v1/jobs always include namespaces (#10434),"Add Namespace as a top-level field in module stub. The module endpoint already includes the namespace under module, though the API is odd, as typically the job ID and Namespace are in the same level, and the oddity complicates the UI frontend development. The downside of adding it is redundant field, that makes the response body a bit bigger, specially for clusters with large jobs. Though, it should compress nicely and I expect the overhead to be small to overall response size. The benefit of a cleaner and more consistent API seem worth it. Fixes #10431"
3397,api: Ignore User provided ParentID (#10424),"ParentID is an internal field that Nomad sets for dispatched or parameterized jobs. Job submitters should not be able to set it directly, as that messes up children tracking. Fixes #10422 . It specifically stops the scheduler from honoring the ParentID. The reason failure and why the scheduler didn't schedule that job once it was created is very interesting and requires follow up with a more technical issue."
3398,changelog: add entry for #10348 (#10349),
3399,website: add check for unlinked content (#10425),  website: add unlinked content check   website: remove unused guides-navigation.js 
3400,docs: reorganize autoscaling agent config (#10383),
3401,Small typo fixes (#10427),Co-authored-by: Charlie Voiselle link
3402,Merge pull request #10384 from hashicorp/mw.partnership-page,website: add partnerships page
3403,Merge pull request #10426 from hashicorp/up-aws-instances,aws_env: update ec2 instances
3404,aws_env: update ec2 instances,Generate updated list using tools/ec2info
3405,website: update readme (#10420),"  website: bump to latest nextjs-scripts prerelease   website: run generate:readme to update readme blocks   website: revert bump to nextjs-scripts, deferred "
3406,Update partnerships.mdx,
3407,docs: Fix minor fuzzy search things (#10423),
3408,hcl2: handle unquoted undefined variables (#10419),"This fixes a regression in #10326, to handle unquoted unknown variables. The HCL job may contain unquoted undefined variable references without ${...} wrapping, e.g. value = meta.node_class. In 1.0.4, this got parsed as value = ""${meta.node_class}"". This code performs a scan to find the relevant ${ and }, and only tries to find the closest ones with whitespace as the only separator."
3409,Migrate all allocs when draining a node (#10411),"This fixes a bug affecting drain nodes, where allocs may fail to be migrated if they belong to different namespaces but share the same job name. The reason is that the helper function that creates the migration evals indexed the allocs by job ID without accounting for the namespaces. When job ids clash, only an eval is created for one and the rest of the allocs remain intact. Fixes #10172"
3410,Merge pull request #10409 from hashicorp/f-docs-gh-10406,docs: update autoscaler target plugins to include datacenter field.
3411,Add PR 10404 to CHANGELOG (#10415),
3412,Enable go-sockaddr templating for module (#10404),Add templating to module option. This PR also adds a fast-fail to in the case where an invalid interface is set or produced by the template  add tests and check for valid interface Add documentation Incorporate suggestions from code review  Co-authored-by: Luiz Aoqui link
3413,Merge pull request #10413 from hashicorp/up-fuzzy-ent-structs,api: include ent fuzzy struct types in oss
3414,api: include ent fuzzy struct types in oss,"Small change to pull in ent struct types in a switch statement used by ent. They are benign in oss, this is just to make sure OSS->ENT merges don't create a diff."
3415,Merge pull request #10184 from hashicorp/f-fuzzy-search,api: implement fuzzy search API
3416,Merge pull request #10401 from hashicorp/cp-cns-ent-test-fixes,cherry-pick fixes from cns ent tests
3417,Merge pull request #10402 from hashicorp/deps-update-consul-api,deps: update consul api for transparent proxy
3418,Add job version revert buttons (#10336),"This adds a Revert two-step button to the JobVersions component for not-current versions, which redirects to the overview on success. It checks the job version before and after reversion to mitigate the edge case where reverting to an otherwise-identical version has no effect, as discussed in #10337. It uses existing facilities for handling other errors and disabling the button when permissions are lacking."
3419,remove second deploy that did not have anything to do with the test (#10400),
3420,docs: update autoscaler target plugins to include datacenter field.,
3421,Merge pull request #10408 from jsiebens/patch-1,website: added digitalocean droplets plugin to community plugins index
3422,website: added digitalocean droplets plugin to community plugins index,
3423,driver/docker: ignore error if container exists before cgroup can be written,
3424,Merge pull request #10403 from hashicorp/b-always-set-scriptchecks-hook,client: always set script checks hook
3425,client: always set script checks hook,"Similar to a bugfix made for the services hook, we need to always set the script checks hook, in case a task is initially launched without script checks, but then updated to include script checks. The scipt checks hook is the thing that handles that new registration."
3426,e2e: consul namespace tests from nomad ent,"(cherry-picked from ent without _ent things) This is part 2/4 of e2e tests for Consul Namespaces. Took a first pass at what the parameterized tests can look like, but only on the ENT side for this PR. Will continue to refactor in the next PRs. Also fixes 2 bugs:  - Config Entries registered by Nomad Server on job registration    were not getting Namespace set  - Group level script checks were not getting Namespace set Those changes will need to be copied back to Nomad OSS. Nomad OSS + no ACLs (previously, needs refactor) Nomad ENT + no ACLs (this) Nomad OSS + ACLs (todo) Nomad ENT + ALCs (todo)"
3427,deps: update consul api for transparent proxy,
3428,Merge pull request #10369 from hashicorp/f-cpu-cores-4,Reserved Cores [4/4]: Implement driver cpuset cgroup path consumption
3429,Merge pull request #10397 from hashicorp/f-cli-file-arg,cli: filename arg for module and module
3430,cli: filename arg for module and module,
3431,api: fuzzy search results include job name with id in scope,
3432,api: make fuzzy searching case-agnostic,
3433,api: implement fuzzy search API,"This PR introduces the /v1/search/fuzzy API endpoint, used for fuzzy searching objects in Nomad. The fuzzy search endpoint routes requests to the Nomad Server leader, which implements the Search.FuzzySearch RPC method. Requests to the fuzzy search API are based on the api.FuzzySearchRequest object, e.g. {   ""Text"": ""ed"",   ""Context"": ""all"" } Responses from the fuzzy search API are based on the api.FuzzySearchResponse object, e.g. {   ""Index"": 27,   ""KnownLeader"": true,   ""LastContact"": 0,   ""Matches"": {     ""tasks"": [       {         ""ID"": ""redis"",         ""Scope"": [           ""default"",           ""example"",           ""cache""         ]       }     ],     ""evals"": [],     ""deployment"": [],     ""volumes"": [],     ""scaling_policy"": [],     ""images"": [       {         ""ID"": ""redis:3.2"",         ""Scope"": [           ""default"",           ""example"",           ""cache"",           ""redis""         ]       }     ]   },   ""Truncations"": {     ""volumes"": false,     ""scaling_policy"": false,     ""evals"": false,     ""deployment"": false   } } The API is tunable using the new server.search stanza, e.g. server {   search {     fuzzy_enabled   = true     limit_query     = 200     limit_results   = 1000     min_term_length = 5   } } These values can be increased or decreased, so as to provide more search results or to reduce load on the Nomad Server. The fuzzy search API can be disabled entirely by setting module to module."
3434,Merge pull request #10387 from hashicorp/e2e-consul-namespaces-oss,e2e: add tests for consul namespaces from nomad oss
3435,e2e: set PORT on counter-api with host networking,
3436,e2e: minor tweaks from CR,
3437,e2e: add tests for consul namespaces from nomad oss,"This PR adds a set of tests to the Consul test suite for testing Nomad OSS's behavior around setting Consul Namespace on groups, which is to ignore the setting (as Consul Namespaces are currently an Enterprise feature). Tests are generally a reduced facsimile of existing tests, modified to check behavior of when group.consul.namespace is set and not set. Verification is oriented around what happens in Consul; the in-depth functional correctness of these features is left to the original tests. Nomad ENT will get its own version of these tests in module."
3438,Merge pull request #10393 from hashicorp/deps-revert-consul-api-bump,"Revert ""deps: bump consul/api version for transparent proxy"""
3439,nit: code cleanup/organization,
3440,"Revert ""deps: bump consul/api version for transparent proxy""","This reverts commit 12bb509242109770c8318ec8ca61e54f4fa2bd42. This change is causing compatibility issues with Consul 1.9.X; I suspect the change is only compatible with Consul 1.10 or higher which is not released yet, and not something Nomad can require for quite some time. E.g. when registering an ingress gateway, module"
3441,update go.mod,
3442,plugins/drivers: fix deprecated fields,
3443,Merge pull request #10328 from hashicorp/f-cpu-cores-3,Reserved Cores [3/4]: Client cpuset cgroup managment
3444,Merge pull request #10228 from hashicorp/f-cpu-cores-2,Reserved Cores [2/4]: Client fingerprinting implementation
3445,Update containerd task driver options., image_pull_timeout pids_limit sysctl
3446,qemu: set the number of cores equal to the number of reserved cores if set,
3447,tr: set cpuset cpus if reserved,
3448,plugins/driver: add cpuset_cpus back and mark cpuset_mems as reserved,
3449,Merge pull request #10377 from hashicorp/d-bump-consulapi,deps: bump consul/api version for transparent proxy
3450,E2E/CSI: ensure jobs are stopped before checking claims are released,"During refactoring of the CSI jobs, the EBS test dropped stopping the jobs before checking that the claims were released."
3451,Merge pull request #10382 from hashicorp/e2e-use-consul-ent,e2e: get consul ent in e2e packer builds
3452,drivers/docker: move cgroups logic to linux build file,
3453,docker: add support for cpuset cgroup management,
3454,executor: add support for cpuset cgroup,
3455,cgutil: set reserved mems on init even if already exist,
3456,docs: changelog and upgrade note for iptables improvement,
3457,networking: Ensure CNI iptables rules are appended to chain and not forced to be first,
3458,Update partnerships.mdx,Need help to resize the ecosystem diagram.
3459,website: stub in partnerships page,
3460,client: disable cpuset cgroup managment if init fails,
3461,e2e: get consul ent in e2e packer builds,Using Consul Enterprise is going to be necessary for testing Nomad's Consul Namespace integration in Nomad v1.1 in e2e.
3462,Merge pull request #10381 from hashicorp/f-cv-fix-missing-var-msg,Fix link in error for missing variable
3463,Fix link in error for missing variable,
3464,another testing fix,
3465,testing fixes,
3466,Merge pull request #10288 from hashicorp/b-ui/no-downloads-in-test,UI: No downloads in test
3467,Stop downloading files in tests,
3468,Cleanup: Use this.attr in test templates,
3469,cgutil: add nil check on AddAlloc,
3470,client/ar: thread through cpuset manager,
3471,client/fingerprint: move existing cgroup concerns to cgutil,
3472,lib/cpuset: add String and ContainsAny helpers,
3473,cgutil: implement cpuset management as seperate package,
3474,Apply suggestions from code review,Co-authored-by: Drew Bailey link
3475,agent: add test for reserved core config mapping,
3476,client: fix failing test,
3477,cgutil: fix lint errors,
3478,"client: only fingerprint reservable cores via cgroups, allowing manual override for other platforms",
3479,fingerprint: implement client fingerprinting of reservable cores,"on Linux systems this is derived from the configure cpuset cgroup parent (defaults to /nomad) for non Linux systems and Linux systems where cgroups are not enabled, the client defaults to using all cores"
3480,Add removal of OTT query parameter with delay (#10319),"This followup to #10066 adds a step to clear the one-time token from the URL after the application has loaded. The delay is required for it to actually clear, but only when the OTT is present to avoid slowing down the entire test suite."
3481,deps: bump consul/api version for transparent proxy,
3482,Merge pull request #10370 from alrs/command-agent-errs,command/agent: fix dropped test errors
3483,only publish measured metrics (#10376),
3484,changelog entries for networking improvements,
3485,add support for host network interpolation,
3486,support multiple host network aliases for the same interface,
3487,fixup changelog,
3488,Fix indentation of service check API documentation,
3489,Test parsing of body field in jobspec2,
3490,Update TaskGroup services edited diff test to actually check Body,
3491,Hash Body field as part of ServiceCheck,
3492,Update changelog to mention adding the 'body' field,
3493,Document usage of 'body' field,
3494,Add a 'body' field to the check stanza,Consul allows specifying the HTTP body to send in a health check. Nomad uses Consul for health checking so this just plumbs the value through to where the Consul API is called. There is no validation that module is not used with an incompatible check method like GET.
3495,e2e/csi: fix name of column used for snapshot create output parsing,
3496,command/agent: fix dropped test errors,
3497,Merge pull request #10367 from hashicorp/up-go-plugin,deps: upgrade go-plugin dependency
3498,deps: upgrade go-plugin dependency,This PR brings go-plugin up to date from ~v1.0.1 to v1.4.0 (about 18 months) with a grab-bag of bux fixes.
3499,cli: add help for 'ui -authenticate' flag,
3500,Merge pull request #10276 from hashicorp/b-api-operator-query-meta,api: set operator query meta Set the query meta for LicenseGet request. It's expected by api consumers to determine the raft index.
3501,Update macOS image (#10365),"Also, remove protobuf installation: it's not used anymore."
3502,CI: update homebrew before installing protobuf,"""Bottles"" have been migrated to GitHub packages, so we need to update homebrew to point to that new source before installing the module formula."
3503,changelog entry for 'nomad ui -authenticate',
3504,docs: CSI hostpath demo doesn't need docker.volumes.enabled,
3505,changelog: add entry for #10253,
3506,Fix parameterized <-> non-parameterized job error (#10357),"The error messages are reversed from tests performed above them.  The test uses the module function, but ignores the text of the error message itself."
3507,Merge pull request #10352 from hashicorp/schmichael-patch-1,docs: clarify alloc signal behavior
3508,docs: clarify alloc signal behavior,The API docs don't make it immediately clear that the alloc signal API signals all tasks in an allocation if the module parameter is omitted. You have to dig all the way down into the alloc runner to discover that behavior: https://github.com/hashicorp/nomad/blob/v1.0.4/client/allocrunner/alloc_runner.go#L1189-L1213
3509,"go get on the remote mac instance installs with read-only, allow for … (#10351)","  go get on the remote mac instance installs with read-only, allow for rm step   Update scripts/release/mac-remote-build   Co-authored-by: Mahmood Ali link Co-authored-by: Mahmood Ali link"
3510,limit bytes passed to http.DetectContentType (#10348),
3511,CSI: ensure page slices are within bounds,"Plugins could potentially ignore the module field and return a list of entries that is greater, so we slice the return value in the server RPC to enforce these value. But page sizes less than the number of entries for the external CSI ListVolumes and ListSnapshots RPCs could cause a panic, so fix the boundary checking."
3512,hclfmt hostpath.hcl,
3513,Merge pull request #9895 from hashicorp/b-cni-ipaddr,CNI: add fallback logic if no ip address references sandboxed interface
3514,docs: clean up explanation of volume per_alloc,
3515,CSI: demo for hostpath plugin,"A demo for the CSI hostpath plugin, used primarily for development purposes. This reproduction has been used for testing during our CSI implementation work, and this changeset makes that public."
3516,E2E: remove broken Move-Item call during Windows provisioning,The archive does not include the module path and unpacking the archive happens in the installation directory.
3517,CSI: API docs for create and snapshot workflows,
3518,Fix typo in general options documentation,"There was a small typo of ""namespacecs"" instead of ""namespaces"""
3519,nomad/structs: fix diff,
3520,E2E: use remote-exec via TF0.14.7+,"The E2E provisioning used local-exec to call ssh in a for loop in a hacky workaround https://github.com/hashicorp/terraform/issues/25634, which prevented remote-exec from working on Windows. Move to a newer version of Terraform that fixes the remote-exec bug to make provisioning more reliable and observable. Note that Windows remote-exec needs to include the module call itself, unlike Unix-alike remote-exec."
3521,CSI: listing from plugins can return EOF,"The AWS EBS CSI plugin was observed to return a EOF when we get to the end of the paging for module, counter to specification. Handle this case gracefully, including for module (which EBS doesn't support but has similar semantics). Also fixes a timestamp formatting bug on module"
3522,CSI: capability block is required for volume registration,
3523,E2E: extend CSI test to cover create and snapshot workflows,"Split the EBS and EFS tests out into their own test cases: * EBS exercises the Controller RPCs, including the create/snapshot workflow. * EFS exercises only the Node RPCs, and assumes we have an existing volume that gets registered, rather than created."
3524,ar: refactor go-cni results processing & add test,"The goal is to always find an interface with an address, preferring sandbox interfaces, but falling back to the first address found. A test was added against a known CNI plugin output that was not handled correctly before."
3525,Merge pull request #10326 from hashicorp/b-hcl2-undefined-variables,Fix HCL2 panics when parsing undefined variables
3526,"Update homepage testimonial card, customer logos (#10210)","  website: add customer testimonial to homepage   website: remove one testimonial, remove product logos "
3527,Merge pull request #10296 from hashicorp/c-script-tweaks-20210402,makefile cleanup
3528,hcl2: Use the actual string snippet as it appears from undefined,"With the updated undefined variable code, we attempt to pick the text of module verbatim from the hcl body. Previously, we'd attempt to regenerate the string from the AST and pray it matches input; the generation is lossy, as the same AST can represent multiple variations (e.g. module and module have the same HCLv2 AST). In this change, we attempt to go back to the hcl2 source and find the string snippet corresponding to the variable reference."
3529,update hcl2 to latest,Update hcl/v2 to point to https://github.com/hashicorp/hcl/commits/nomad-v2.9.1+tweaks1
3530,hcl2: add failing tests,
3531,Merge pull request #10311 from hashicorp/br.stackmenu,Updates stackmenu to latest
3532,docs: add missing module CLI flags (#10277),
3533,CSI: fix wrong output struct for snapshot list endpoint,
3534,CSI: fix URL for volume snapshot list,
3535,CSI: deletes with API don't have request body,"Our API client module method doesn't include a request body, but accepts an interface for the response. We were accidentally putting the request body into the response, which doesn't get picked up in unit tests because we're not reading the (always empty) response body anyways."
3536,CSI: fix index error on formatting function for volume snapshots,
3537,CSI: fix wrong RPC name on ListSnapshots,
3538,CSI: fix decoding error on snapshot create,Consumers of the CSI HTTP API are expecting a response object and not a slice of snapshots. Fix the return value.
3539,CSI: capability check ListVolumes at RPC for nicer error messages,"The plugin stub object does not include fine-grained capability checks, which means module will return ugly and verbose error ""Unimplemented"" messages from the plugin if it does not support the CSI module RPC. Return a nicer error message from our RPC handler instead."
3540,CSI: fix HTTP routing for external volume list,The HTTP router did not correctly route module without being explicitly added to the top-level router. Break this out into its own request handler.
3541,CSI: fix early return on error from list external volumes command,"If a plugin returns an error, we should continue at the outer scope to query the next plugin, otherwise we just retry the plugin we got an error on (potentially infinitely if it's an invalid request like an unsupported plugin)."
3542,docs: update CSI create/register fields,Add new module/module fields. Make it more clear which set of fields belong to create vs register. Update the example spec that's generated by module.
3543,CSI: use AccessMode/AttachmentMode from CSIVolumeClaim,"Registration of Nomad volumes previously allowed for a single volume capability (access mode + attachment mode pair). The recent module command requires that we pass a list of requested capabilities, but the existing workflow for claiming volumes and attaching them on the client assumed that the volume's single capability was correct and unchanging. Add module and module to module, use these fields to set the initial claim value, and add backwards compatibility logic to handle the existing volumes that already have claims without these fields."
3544,refactor: move VolumeRequest validation to Validate method,
3545,refactor: internal claim methods should be private,
3546,Merge pull request #10302 from hashicorp/f-10301-api-header-race-condition,fix potential race condition in API client
3547,third attempt at fixing circle,
3548,second attempt at fixing circle,
3549,refactor enable_race circleci parameter,
3550,updated changelog,
3551,Updates stackmenu to latest,
3552,sdk: header map copy to avoid race condition in #10301,
3553,documenting test for #10301,enable -race detector for testing api
3554,docs: add module node selector strategy for autoscaling (#10306),
3555,Merge pull request #10307 from hashicorp/f-go-get-buf,build: install buf during bootstrap
3556,build: install buf during bootstrap,"Previously installing buf was left out of module because it had conflicts with the module file and dependencies used by other tools. With Go 1.16 we eliminated that module file, and can now just install module with module like everything else."
3557,Merge pull request #10303 from hashicorp/d/broken-link-bootstrap-scheduler,Fix the broken link in the bootstrapping custom scheduler warning
3558,Fix the broken link in the bootstrapping custom scheduler warning,
3559,allow setting stale flag from cli to retrieve individual server license (#10300),
3560,ar: stringify CNI result debug message,
3561,Merge pull request #10235 from hashicorp/f-cns-oss,consul: plumbing for specifying consul namespace in job/group
3562,consul: minor CR cleanup,
3563,docs: apply suggestions from code review,Co-authored-by: Tim Gross link
3564,consul: plubming for specifying consul namespace in job/group,"This PR adds the common OSS changes for adding support for Consul Namespaces, which is going to be a Nomad Enterprise feature. There is no new functionality provided by this changeset and hopefully no new bugs."
3565,changelog entry for on_update configuration settings (#10299),  changelog entry for on_update configuration settings   Update CHANGELOG.md   Co-authored-by: Tim Gross link Co-authored-by: Tim Gross link
3566,license changelog (#10298),
3567,Merge pull request #10295 from greut/chore/bump-golangci-lint-to-v1.39,chore: bump golangci-lint from v1.24 to v1.39
3568,fixup! chore: bump golangci-lint from v1.24 to v1.39,Signed-off-by: Yoan Blanc link
3569,fix: golangci-lint with -mod=vendor,Signed-off-by: Yoan Blanc link
3570,chore: bump golangci-lint from v1.24 to v1.39,Signed-off-by: Yoan Blanc link
3571,remove unused scripts,
3572,Tweak cross compilation Make,"Only use cross compile if not compiling in target architecture. Also, use the latest gcc for cross compilation."
3573,Merge pull request #10294 from hashicorp/schmichael-patch-1,docs: specify buf v0.30.1
3574,docs: specify buf v0.30.1,If you use too new of a module you will hit #10293
3575,Merge pull request #10286 from hashicorp/b-executor-stats,Memory stats for cgroup-v2
3576,reuse existing function and typo fix,
3577,CSI: correctly handly empty capacity fields during registration,"When a volume is registered via module and not via the creation workflow, it may not have any of the capacity fields set (as they're not used for registration). Handle this case without error, and let the downstream RPCs handle the error case for module."
3578,remove flakey exec test that tests non-deterministic docker behavior (#10291),
3579,Merge pull request #10290 from hashicorp/f-move-json-handles-back-to-structs-package,move json handle back to module
3580,added missing import from command/agent,
3581,json handles were moved to a new package in #10202,"this was unecessary after refactoring, so this moves them back to their original location in package structs"
3582,Merge pull request #10285 from hashicorp/build-no-codegen-by-default,dev: ignore msgpack codegen code in dev by default
3583,cli: Show memory usage instead of RSS,"If a task doesn't report RSS, let's use memory usage."
3584,Merge pull request #10202 from hashicorp/f-node-drain-api,remove deprecated module field from module
3585,dev: ignore msgpack codegen code in dev by default,"This change disables using msgpack generated serializers in dev by default. In released binaries, we use code-generated msgpack serializers to improve performance.  However, in development, code generated serializers are a pain. If a developer forgets to re-generate code, the code generated gets out of sync with the go structs, and result into subtle bugs where some values appear not to persist as expected. The CI and release scripts will continue to use the msgpack code-generation. Devs who want to test locally can set module as well."
3586,Merge branch 'main' into f-node-drain-api,
3587,docs: add fixed-value and pass-through autoscaler plugin docs. (#10278),docs: add fixed-value and pass-through autoscaler plugin docs.
3588,Merge pull request #10199 from hashicorp/docs-update-autoscaling-aws-permission,docs: Update AWS permission requirements for the Autoscaler
3589,Merge pull request #10183 from hashicorp/docs-autoscaling-policy-eval-cli,docs: add Autoscaler CLI flags for policy eval configuration
3590,CSI: fingerprint detailed node capabilities,"In order to support new node RPCs, we need to fingerprint plugin capabilities in more detail. This changeset mirrors recent work to fingerprint controller capabilities, but is not yet in use by any Nomad RPC."
3591,Add exchange of one-time token on UI load (#10066),"This adds UI support for receiving the one-time token passed via query parameter, as in #10134 and related PRs, and exchanging it for its corresponding secret ID. When this works, it’s mostly invisible, with a brief flash of the OTT onscreen. The authentication failure message now suggests the -authenticate flag. When OTT exchange fails, it shows a whole-page error. This includes a known UX shortcoming in that the OTT will not disappear from the URL when an identifier is specified on the command line, like nomad ui -authenticate jobname. The goal is to address that shortcoming in a forthcoming pull request."
3592,drivers/docker: account for cgroup-v2 memory stats,"If the docker engine is running on cgroup-v2 host, then RSS and Max Usage doesn't get reported. Using a heauristic here to avoid adding more API calls to the Docker Engine to infer cgroups version. Also, opted to avoid coordinating stats collection with fingerprinting, which adds concurrency complexities."
3593,drivers/exec: Account for cgroup-v2 memory stats,"If the host is running with cgroup-v2, RSS and Max Usage doesn't get reported anymore."
3594,CSI: volume snapshot,
3595,deps: run make sync to sync vendor dir,
3596,Merge pull request #10270 from hashicorp/f-docs-autoscaling-selector-strategy,docs: add autoscaling docs to detail node selector strategy feat.
3597,CSI: ensure api package has godoc documentation,
3598,docs: add autoscaling docs to detail node selector strategy feat.,
3599,Merge pull request #10257 from hashicorp/f-ui/bigger-units,UI: Refactor all displayed units to use common utils (featuring bigger suffixes)
3600,update volume init for new volume spec,
3601,CSI: CLI for create/delete/list,"Add new commands for creating, deleting, and listing external storage volumes. Includes HCL decoding update for volume spec so that we can humanize capacity bytes input values."
3602,CSI: fix misleading HTTP test,"The HTTP test to create CSI volumes depends on having a controller plugin to talk to, but the test was using a node-only plugin, which allows it to silently ignore the missing controller."
3603,CSI: fingerprint detailed controller capabilities,"In order to support new controller RPCs, we need to fingerprint volume capabilities in more detail and perform controller RPCs only when the specific capability is present. This fixes a bug in Ceph support where the plugin can only suport create/delete but we assume that it also supports attach/detach."
3604,CSI: volume creation/registration should not validate attachment,"The CSI specification requires that we validate a list of module (access mode + accessibility) when we create volume, but the existing volume registration workflow incorrectly validates a single capability. The specific capability required by a volume claim is checked at the time we make the claim, so remove the check for module/module."
3605,CSI: HTTP handlers for create/delete/list,
3606,CSI: create/delete/list volume RPCs,This commit implements the RPC handlers on the client that talk to the CSI plugins on that client for the Create/Delete/List RPC.
3607,test infrastructure for mock client RPCs (#10193),"This commit includes a new test client that allows overriding the RPC protocols. Only the RPCs that are passed in are registered, which lets you implement a mock RPC in the server tests. This commit includes an example of this for the ClientCSI RPC server."
3608,CSI: protobuffer mappings for Create/Delete/List volume RPCs,"Note that unset proto fields for volume create should be nil. The CSI spec handles empty fields and nil fields in the protobuf differently, which may result in validation failures for creating volumes with no prior source (and does in testing with the AWS EBS plugin). Refactor the module mapping to the protobuf in the plugin client to avoid this bug."
3609,docs: CLI commands for volume create/delete,
3610,drivers/docker: fix flaky image coordinator test,"The test assertion that we don't have a delete future remaining races with the code its testing, because the removal of the image and the removal of the future are not atomic. Move this assertion into a module to avoid test flakes which we're seeing on CI on Windows in particular."
3611,api: set operator query meta,
3612,Aggregate the BANs in the cluster details panel,
3613,Use common helpers and utils for formatting hertz,
3614,"Format all bytes using helpers, even the ones that are already MiBs",
3615,Add startingUnit option to the unit formatting utils,
3616,format-scheduled-bytes helper,
3617,Refactor formatBytes helper to use core units util,
3618,Units utils,Consolidates all the bytes and hertz units logic in one place.
3619,deps: update runc to v1.0.0-rc93,includes updates for breaking changes in runc v1.0.0-rc93
3620,Docs/licensing reference docs (#10260),"  add a license docs page   license reference docs   update wording   use new docs-nav   rm file held over from rebase, fix path "
3621,Merge pull request #10247 from hashicorp/f-memory-oversubscription-2,Memory oversubscription
3622,feat(website): migrates to new nav data format (#10264),
3623,fixup! oversubscription: Add MemoryMaxMB to internal structs,
3624,fixup! oversubscription: Add MemoryMaxMB to internal structs,
3625,driver/exec: set soft memory limit,"Linux offers soft memory limit: https://www.kernel.org/doc/html/latest/admin-guide/cgroup-v1/memory.html#soft-limits , and https://www.kernel.org/doc/html/latest/admin-guide/cgroup-v2.html?highlight=memory.low . We can set soft memory limits through libcontainer module: https://pkg.go.dev/github.com/opencontainers/runc@v0.1.1/libcontainer/configs#Resources"
3626,oversubscription: e2e tests!,
3627,oversubscription: driver/exec to honor MemoryMaxMB,
3628,oversubscription: docker to honor MemoryMaxMB values,
3629,oversubscription: set the linux memory limit,"Use the MemoryMaxMB as the LinuxResources limit. This is intended to ease drivers implementation and adoption of the features: drivers that use module don't need to be updated. Drivers that use NomadResources will need to updated to track the new field value. Given that tasks aren't guaranteed to use up the excess memory limit, this is a reasonable compromise."
3630,oversubscription: add memory_max to hclv1,"Allow specifying the module field in HCL under the resources block. Though HCLv1 is deprecated, I've updated them to ease our testing."
3631,oversubscription: adds CLI and API support,"This commit updates the API to pass the MemoryMaxMB field, and the CLI to show the max set for the task. Also, start parsing the MemoryMaxMB in hcl2, as it's set by tags. A sample CLI output; note the additional module for ""task"": ``` $ nomad alloc status 96fbeb0b ID                  = 96fbeb0b-a0b3-aa95-62bf-b8a39492fd5c [...] Task ""cgroup-fetcher"" is ""running"" Task Resources CPU        Memory         Disk     Addresses 0/500 MHz  32 MiB/20 MiB  300 MiB Task Events: [...] Task ""task"" is ""running"" Task Resources CPU        Memory          Disk     Addresses 0/500 MHz  176 KiB/20 MiB  300 MiB            Max: 30 MiB Task Events: [...] ```"
3632,oversubscription: Add MemoryMaxMB to internal structs,"Start tracking a new MemoryMaxMB field that represents the maximum memory a task may use in the client. This allows tasks to specify a memory reservation (to be used by scheduler when placing the task) but use excess memory used on the client if the client has any. This commit adds the server tracking for the value, and ensures that allocations AllocatedResource fields include the value."
3633,deps: bump gopsutil to v3.21.2,
3634,changelog: add section for backports from 1.1.0 to 1.0.5, Fixed order Added missing changlog entry for GH-10145 Fixed misclassified entry for GH-10158
3635,fix(circle): change website branch filter to main (#10261),
3636,Merge pull request #10243 from apollo13/issue10239,Automatically populate module for connect native tasks in host networking mode.
3637,Merge pull request #10203 from hashicorp/f-cpu-cores,Reserved Cores [1/4]: Structs and scheduler implementation
3638,website: use global featured-slider component (#10254),  website: use global featured-slider component   website: delete unused local featured-slider 
3639,website: add should-build script (#10194),
3640,debug: Remove extra linefeed in monitor.log (#10252),
3641,Automatically populate module for connect native tasks in host networking mode. Fixes #10239,
3642,Merge pull request #10125 from hashicorp/docs-autoscaler-409-plugins,autoscaler plugin docs
3643,docs: minor updates on autoscaling plugin guides,
3644,"reworked Node.Canonicalize() to enforce invariants, fixed a broken test",
3645,redirect from HTTP root to UI should include query params,The OTT feature relies on having a query parameter for a one-time token which gets handled by the UI. We need to make sure that query param is preserved when redirecting from the root URL to the module URI.
3646,docs: note that Connect requires a hard-coded port,Co-authored-by: Kris Hicks link
3647,Update containerd task driver docs. (#10244),
3648,e2e license smoke test (#10242),
3649,Update contributing/checklist-jobspec.md,
3650,reinserted/expanded fsm node.canonicalize test that was still needed,
3651,restored Node.Sanitize() for RPC endpoints,multiple other updates from code review
3652,Update to v4 of Ember Power Select (#10226),"This closes #10146. Because of cibernox/ember-power-select#1203, which documents the current impossibility of attaching test selectors to a PowerSelect invocation, this uses test selectors on parent containers instead, occasionally adding wrappers when needed. I chose to leave the existing test selectors in the hopes that we can return to using them eventually, but I could easily remove them if it seems like extra noise now. Presumably for the same reason, @class no longer works, so this adjusts the scoping of global search CSS to preserve the style of the search control. I also included an update to the latest version of ember-test-selectors, since we were far behind and I tried that before finding the aforelinked issue. Finally, this replaces ember-cli-uglify with ember-cli-terser to address production build failures as described at ember-cli/ember-cli#9290."
3653,Merge pull request #10145 from hashicorp/b-periodic-init-status,periodic: always reset periodic children status
3654,squash,
3655,Merge pull request #10230 from hashicorp/f-add-allocation-terminal-status-funcs-api,api: add Allocation client and server terminal status funcs.
3656,dispatched parameterized job should clear status too,
3657,e2e allow setting an enterprise license environment variable (#10233),  allow setting an enterprise license environment variable   update comment   address pr comments 
3658,Change enable to enabled,
3659,Merge pull request #10208 from hashicorp/f-ui/use-new-chart-stuff,UI: Showed host reservations and allocation utilization by task on existing stats charts
3660,Add a test for parameterized summary counts,
3661,periodic: always reset periodic children status,"Fixes a bug where Nomad reports negative or incorrect running children counts for periodic jobs. The periodic dispatcher derives a child job without reseting the status. If the periodic job has a module status, the derived job will start as module status and transition to module.  Since this is unexpected transition, the counting in StateStore.setJobSummary gets out of sync and result in negative/incorrect values. Note that this only affects periodic jobs after a leader transition. During the first job registration, the job is added with module or module status. However, after a leader transition, the new leader repopulates the dispatcher heap with module status and triggers the bug."
3662,api: add Allocation client and server terminal status funcs.,
3663,Remove errant log line,
3664,Correctly sort tasks in alloc stat tracker so the main task takes precedence,
3665,Guard against empty data when determining active linechart data,
3666,Fix line-wrapping issue with chart tooltips,
3667,Use more explicit branching of reserved amounts based on metric type,
3668,Remove old primary metric,
3669,Update topology info box primary metric,
3670,Updated old tests,
3671,Tests for PrimaryMetric::Task,
3672,Tests for PrimaryMetric::Allocation,
3673,Tests for PrimaryMetric::Node,
3674,Remove now unused chartClass arg from LineChart,
3675,Improved language around what the client stat charts represent,
3676,New PrimaryMetric::Task component,
3677,Apply the new multi-line primary metric to the alloc index page,
3678,Memoize the tracker and the series properties to avoid repeat computation,"In addition to this computation being wasteful, it introduces a bug where the allocation on a stats tracker can update twice in one render, which isn't allowed in Glimmer (ironically, Glimmmer's lack of auto-memoization introduced the issue)."
3679,Refactored multi-series allocation variant of the primary metric component,
3680,Refactor stats-time-series to allow for multiple series,
3681,Sort and index multi-series data correctly in line chart, Sorting must be done on copies to preserve orders. Indices should be reversed since rendering is also reversed (the back    layer (the tallest) is rendered first to create the stacking effect).
3682,Stacked percentages of tasks for alloc charts,This leverages the existing pre-processing being done in the allocation-stats-tracker to also create additive percentages relative to the allocation resources vs. the task resources. This can then be used in a chart to create a stacked area representation of consumption.
3683,Simple bind helper,"This binds a function to a target before passing it along to another component. It's normal to expect to get to use module within functions on components and controllers, but (sans actions) that doesn't happen automatically."
3684,Refactor PrimaryMetric into parts/purposes,"Currently, PrimaryMetric is already overloaded on multiple dimensions: metric and resource type. This refactor will use multiple components as a form of control flow instead spidering conditionals, which are only getting worse as the charts for each resource type diverge."
3685,Compute and render reserved annotations for client stats,
3686,Pass the LineChart named blocks through to callers of StatsTimeSeries,
3687,E2E: bump AWS CSI driver versions,
3688,additional consistency checking on nodes api,
3689,Update /v1/job API docs with namespace parameter,
3690,module,changelog for #10202
3691,added benchmark test for JSON encoding extensions,
3692,some comments on the new json extensions/encoding,
3693,change to fail-safe in json encoding,
3694,added tests that the API doesn't leak Node.SecretID,added more documentation on JSON encoding to the contributing guide
3695,configuration and oss components for licensing (#10216),  configuration and oss components for licensing   vendor sync 
3696,E2E: CSI test should use expected unique-volume name,
3697,Update changelog with v0.12.11 (#10214),
3698,testing: default nomad test nodes to 1.0.0 (#10213),
3699,website: added senlin plugin to community plugins index,
3700,moved JSON handlers and extension code around a bit for proper order of,initialization
3701,refactor?,
3702,updated node drain API test,
3703,removed deprecated fields from Drain structs and API,"node drain: use msgtype on txn so that events are emitted wip: encoding extension to add Node.Drain field back to API responses new approach for hiding Node.SecretID in the API, using module tag documented this approach in the contributing guide refactored the JSON handlers with extensions modified event stream encoding to use the go-msgpack encoders with the extensions"
3704,scheduler: detect job change in cores resource,
3705,api: add Resource.Canonicalize test and fix tests to handle ReservedCores field,
3706,website: documentation for autoscaler plugins,
3707,scheduler: implement scheduling of reserved cores,
3708,api: add new 'cores' field to task resources,
3709,structs: add struct fields and funcs for reservable cpu cores,
3710,docs: update Autoscaler AWS permissions,
3711,CSI: unique volume per allocation,"Add a module field to volume requests that directs the scheduler to test feasibility for volumes with a source ID that includes the allocation index suffix (ex. module), rather than the exact source ID. Read the module field when making the volume claim at the client to determine if the allocation index suffix (ex. module) should be added to the volume source ID."
3712,CSI: remove prefix matching from CSIVolumeByID and fix CLI prefix matching (#10158),"Callers of module are generally assuming they should receive a single volume. This potentially results in feasibility checking being performed against the wrong volume if a volume's ID is a prefix substring of other volume (for example: ""test"" and ""testing""). Removing the incorrect prefix matching from module breaks prefix matching in the command line client. Add the required elements for prefix matching to the commands and API."
3713,csi: volume init command,"Create a convenience command for generating example CSI volume specifications, similar to the existing module or module commands."
3714,docs: add missing dashes to operator debug Usage (#10192),
3715,Merge pull request #10103 from AndrewChubatiuk/service-portlabel-interpolation-fix,fixed service interpolation for sidecar tasks
3716,Fixup uses of module (#10187)," Fixup uses of module Remove unnecessary comments.  These checks are better explained by earlier comments about the context of the test. Per @tgross, moved the tests together to better reinforce the overall shared context.  Update nomad/fsm_test.go"
3717,docs: add Autoscaler CLI flags for policy eval configuration,
3718,docs: clarify HCL is parsed in CLI,
3719,CHANGELOG: Add missing 0.12.10 version,
3720,docker: support configuring default log driver in plugin options,
3721,Merge pull request #10171 from hashicorp/docs-set-ports-on-jobspec,docs: add ports to jobspec overview example
3722,docs: add ports to jobspec overview example,
3723,Merge pull request #10169 from hashicorp/docs-api,docs: remove mention of api versioning
3724,docs: remove mention of api versioning,"We've only ever had 1 API version, and we've broken backward compatibility extremely rarely. Nothing changed about this with the release of 1.0, let's just remove these sentences and save everybody some reading."
3725,Merge pull request #10167 from hashicorp/docs-k8s-docker,"docs: describe k8s in terms of ""Linux containers"""
3726,csi: don't truncate CSI volume IDs,"Volume IDs are not UUIDs, so truncating them to the short ID isn't really necessary and makes for especially awkward UX when per-alloc volumes are in use."
3727,csi: upgrade CSI protobufs to 1.4.0,
3728,"docs: describe k8s in terms of ""Linux containers""","The terminology here is a bit tricky. Technically Kuberbetes deprecated their Docker runtime support but can still run Docker images. Sadly in a lot of people's minds ""Docker"" and ""containers"" are nearly synonymous. I think ""Linux containers"" is a more accurate characterization of Kubernetes focus than ""Docker"" at this point. Fixes #10120"
3729,add on update to services table in allocation details (#10153),  add on update to services table in allocation details   populate onupdate test data 
3730,scheduler/csi: fix early return when multiple volumes are requested,"When multiple CSI volumes are requested, the feasibility check could return early for read/write volumes with free claims, even if a later volume in the request was not feasible for any other reason (including not existing at all). This can result in random failure to fail feasibility checking, depending on how the map of volumes was being ordered at runtime. Remove the early return from the feasibility check. Add a test to verify that missing volumes in the map will cause a failure; this test will not catch a regression every test run because of the random map ordering, but any failure will be caught over the course of several CI runs."
3731,Merge pull request #10140 from hashicorp/b-gh-10070,agent: return req error if prometheus metrics are disabled.
3732,server: handle invalid jobs in expose handler hook (#10154),"The expose handler hook must handle if the submitted job is invalid. Without this validation, the rpc handler panics on invalid input. Co-authored-by: Tim Gross link"
3733,correctly format variable name within upgrade doc,Co-authored-by: Tim Gross link
3734,CLI 'nomad ui -authenticate' flag for one-time token exchange,Includes swapping the previously documented module flag for module to align better with Waypoint.
3735,HTTP API support for 'nomad ui -login',Endpoints for requesting and exchanging one-time tokens via the HTTP API. Includes documentation updates.
3736,one-time token: never return expired tokens,
3737,RPC endpoints to support 'nomad ui -login',RPC endpoints for the user-driven APIs (module and module) and token expiration (module). Includes adding expiration to the periodic core GC job.
3738,state store updates for one-time tokens,The module struct is to support the module command. This changeset adds the struct to the Nomad state store.
3739,docs: 'nomad ui -login' command,
3740,Merge pull request #10138 from hashicorp/f-ui/improved-stats-charts,UI: Line Chart new primitives and tooltip refactor
3741,Move complex annotation hbs logic into JS,"As @backspace pointed out, we're processing a bunch of other stuff anyway, so might as well process the active state there too where it's more likely to be expected."
3742,Merge pull request #10151 from hashicorp/c-golang-1.16,Update to Golang 1.16
3743,docs: update website links from master to main,
3744,use module for tools,"Golang 1.16 added better support for installing tools, without updating go.mod files: https://blog.golang.org/go116-module-changes#TOC_4. ."
3745,build: use golang 1.16,
3746,Only reference the major/minor versions,"Maintaining patch versions is burdensome, and historical info is already present in git history."
3747,demo: hclfmt a jobspec,
3748,changelog: fix position of entry,
3749,Update DigitalOcean CSI plugin demo,
3750,docs: add upgrade guide for change to metrics API.,
3751,changelog: add entry for #10140,
3752,agent: return req error if prometheus metrics are disabled.,"If the user has disabled Prometheus metrics and a request is sent to the metrics endpoint requesting Prometheus formatted metrics, then the request should fail."
3753,debug: update defaults to commonly used values,
3754,Update LineChart stories to use new tooltip pattern,Some charts intentionally don't yield a tooltip to show the possibility.
3755,No longer include an automatic tooltip in LineChart,It is now required to use the one yielded by the :after named block.
3756,Integration test coverage for horizontal annotations and tooltips,
3757,Pre format x and y values for the yielded tooltip component in line chart,
3758,Document all the tooltip variations,Under a new Charts/Primitives section in Storybook
3759,Bring the ordinal color sequence from chart-colors to the new color-scales construct,This also required re-ordering the SCSS imports since this depends on colors introduced by bulma.
3760,Unify the distribution bar tooltip and the line chart tooltip styles/patterns,
3761,"New storybook CSS helpers (hover region, multiples variations)",
3762,Factor the tooltip out of line-chart and into a primitive,
3763,Use chart scales to generate tooltip swatch options,
3764,New Multi Line LineChart story,
3765,Don't deal with color classes at all in LineChart,Expect this to be set on the visual yielded components directly
3766,Support multi-dimensional data in LineChart,"When a @dataProp is provided, the LineChart component assumes data is an array of data series. It will map by the data prop and flatten to compute the domains of the data."
3767,Add chart color scales in scss,
3768,Document HAnnotations + LineChart with a story,
3769,Yield HAnnotations through LineChart,
3770,New HAnnotations chart primitive,
3771,docs: swap master for main in Nomad repo,
3772,Merge pull request #10135 from hashicorp/b-fix-log,client: fix task name logging
3773,docs: Update sample JSON in Create Job API (#10108),This is maybe a more realistic job that someone would actually submit via the API; it more closely aligns with the example job from module. It's also been updated to use group network and service definitions.
3774,client: fix task name logging,
3775,docs/artifact: clarify git:: prefix usage for private repos,
3776,docs: clarify mount source path in filesystem docs,
3777,docs: required capabilities on Linux,
3778,docs: remove stale release guide,The release process has been in the module private repo rather than this one for quite a while now. Should be safe to remove this.
3779,docs: changelog entry for extra docker labels,
3780,"driver/docker: add extra labels ( job name, task and task group name)",
3781,Merge pull request #10119 from hashicorp/docs-autoscaler-drain-timeout,docs: hightlight different default node drain deadline when using the Autoscaler
3782,docs: hightlight different default node drain deadline when using the Autoscaler,
3783,Merge pull request #10118 from hashicorp/docs-secmodel,docs: remove stray mention that namespaces are ent
3784,docs: remove stray mention that namespaces are ent,namespaces are oss
3785,"[Website] Updates to homepage, highlighting features (#10019)",  Impl: base structure   Impl: ComparisonItem/component bg color   Style comparison items   CSS: Typography/spacing pass   Theme detailCta   Callouts: content pass   Impl: Logo grid section   Add proper logos to logoGrid   Hack: override button colors w/Nomad   Link enhancements   Clean up comments   Revert link wrapping changes   Remove paragraph after Why Nomad   Add available links   GitHub logo to GitLab   Move callouts to just under Why Nomad? for A ver.   Test comment to see if Vercel picks up this commit 
3786,fix typo (#10112),
3787,"adds issue templates for bugs and features, links to discuss, learn guides (#10111)","  adds issue templates for bugs and features, links to discuss and learn guides   fix smart quotes "
3788,remove v1-v2 varlink references (#10110),  remove v1-v2 varlink references   Update website/content/docs/drivers/podman.mdx   Co-authored-by: Tim Gross link  fix code snippet  Co-authored-by: Tim Gross link
3789,Fix rendering of DAS interstitial components (#10094),"With the Ember update, when the will-destroy action is called to check the element height, its height is already zero. That seems strange but I didn’t look into it any further, as using did-insert to store the element lets us check its height before any other actions when a processing button is pressed."
3790,Merge pull request #9935 from hashicorp/e2e-segment-e2e-clusters,e2e: segment e2e clusters
3791,Fixed typos,
3792,fixed service interpolation for sidecar tasks,
3793,Merge pull request #10100 from fredwangwang/patch-1,update policy.mdx -- fixing strategy name
3794,update policy.mdx -- fixing strategy name,
3795,Merge pull request #9908 from hashicorp/docs-autoscaler-node-drain-ignore-system-jobs,document Autoscaler module configuration
3796,Merge pull request #10062 from hashicorp/docs-autoscaler-sighup,docs: expand Autoscaler SIGHUP documentation
3797,docs: add node_drain_ignore_system_jobs to Autoscaler GCP plugin,
3798,docs: document Autoscaler node_drain_ignore_system_jobs configuration,
3799,docs: add Nomad Autoscaler GPC MIG target plugin detail. (#10090),Co-authored-by: Luiz Aoqui link
3800,Merge pull request #10071 from Ilhicas/connect-upstream-local-bind-address,consul/connect: enable setting local_bind_address in upstream
3801,consul/connect: enable setting local_bind_address in upstream,
3802,consul/connect: enable setting local_bind_address in upstream,
3803,Merge pull request #10087 from hashicorp/f-ui/line-chart-contextual,UI: Line Chart contextual components
3804,Handle Consul API URL protocol mismatch (#10082),
3805,Prevent -1 dimension errors in LineChart,
3806,Update LineChart stories to use contextual component interface,
3807,Include the named-blocks polyfill compiler in the storybook babel options,
3808,Use named-blocks and contextual components to reduce the responsibility of LineChart,Now chart primitives are partially applied by LineChart but the invocations are left to the caller.
3809,Bring in the ember-named-blocks polyfill,"Since some chart elements need to be rendered in the svg and others need to be outside, we need some form of conditional yielding. This is the cleanest implementation of this pattern and it will also ship with ember in 3.25."
3810,Bring back the active annotation logic to the v-annotations primitive,
3811,Move curve logic into the area primitive,
3812,Merge pull request #10069 from hashicorp/f-ui/line-chart-decomposed,UI: Line chart decomposed
3813,Merge pull request #10085 from hashicorp/docs-cl,docs: add two community PRs to changelog
3814,docs: add two community PRs to changelog,
3815,Merge pull request #10075 from mr-karan/fix/parse_service,fix: parse_service: return err instead of panic
3816,Merge pull request #9955 from hashicorp/on-update-services,Service and Check on_update configuration option (readiness checks)
3817,post-1.0.4 release prep,
3818,Merge pull request #10078 from hashicorp/docs-update-autoscaling-demo-link,docs: update link to the Nomad Autoscaler demos
3819,Merge pull request #10080 from hashicorp/b-gw-updated,consul/connect: correctly detect when connect tasks not updated
3820,consul/connect: correctly detect when connect tasks not updated,This PR fixes a bug where tasks with Connect services could be triggered to destructively update (i.e. placed in a new alloc) when no update should be necessary. Fixes #10077
3821,changelog: fix link for GH-9937,
3822,docs: update link to the Nomad Autoscaler demos,
3823,"Update the custom xFormat to be a getter, as is expected by LineChart now",
3824,Convert ScaleEventsChart into a glimmer component,
3825,Refactor StatsTimeSeries component to be a glimmer component and use composition instead of inheritance,
3826,Refactor line chart scales and refactor tests,
3827,Defensive arguments for glimmer-factory,
3828,Convert LineChart into a glimmer component,
3829,Move new glimmer style string to its own home,
3830,Pull the VAnnotations primitive out of the LineChart component,
3831,ArrayProxy evidently isn't iterable,
3832,Pull the Area chart primitive out of the LineChart component,
3833,New computed property: uniquely,Wraps up a common pattern used in charts for building a a string that incorporates the ember guid
3834,Merge pull request #10076 from hashicorp/d-ui/changelog-for-1.0.4-bug-fixes,CHANGELOG entries for some 1.0.4 UI bug fixes
3835,CHANGELOG entries for some 1.0.4 UI bug fixes,
3836,fix: parse_service: return err instead of panic,Fixes https://github.com/hashicorp/nomad/issues/10072
3837,cli: Update namespace helptext guide URL (#10074),The old URL redirects to https://learn.hashicorp.com/nomad
3838,Merge pull request #10064 from superfly/add-allocated-devices-to-api,Add devices to AllocatedTaskResources
3839,Merge pull request #10068 from hashicorp/b-fixup-systemd-units,dist: place systemd unit options correctly
3840,dist: clarify minimum systemd version for example service file,
3841,sync vendored modules,
3842,dist: place systemd unit options correctly,"This PR places StartLimitIntervalSec and StartLimitBurst in the Unit section of systemd unit files, rather than the Service section. https://www.freedesktop.org/software/systemd/man/systemd.unit.html Fixes #10065"
3843,deploymentwatcher: reset progress deadline on promotion (#10042),"In a deployment with two groups (ex. A and B), if group A's canary becomes healthy before group B's, the deadline for the overall deployment will be set to that of group A. When the deployment is promoted, if group A is done it will not contribute to the next deadline cutoff. Group B's old deadline will be used instead, which will be in the past and immediately trigger a deployment progress failure. Reset the progress deadline when the job is promotion to avoid this bug, and to better conform with implicit user expectations around how the progress deadline should interact with promotions."
3844,Update website/content/docs/autoscaling/agent.mdx,Co-authored-by: Chris Baker link
3845,Update website/content/docs/autoscaling/agent.mdx,
3846,docs: expand Autoscaler SIGHUP documentation,
3847,Merge pull request #10059 from hashicorp/b-cc-service-tags,consul/connect: Fix bug where connect sidecar services would be unnecessarily re-registered
3848,Add devices to AllocatedTaskResources,
3849,consul/connect: Fix bug where connect sidecar services would be unnecessarily re-registered,"This PR fixes a bug where sidecar services would be re-registered into Consul every ~30 seconds, caused by the parent service having its tags field set and the sidecar_service tags unset. Nomad would directly compare the tags between its copy of the sidecar service definition and the tags of the sidecar service reported by Consul. This does not work, because Consul will under-the-hood set the sidecar service tags to inherit the parent service tags if the sidecar service tags are unset. The comparison then done by Nomad would not match, if the parent sidecar tags are set. Fixes #10025"
3850,docs: clarify log_rotate_max_files,
3851,changelog: add entries for 1.0.4 (#10048),
3852,E2e/fix periodic (#10047),"  fix periodic   update periodic to not use template   nomad job inspect no longer returns an apiliststub so the required fields to query job summary are no longer there, parse cli output instead   rm tmp makefile entry   fix typo   revert makefile change "
3853,changelog: missing changelog items for 1.0.4,
3854,hcl2: avoid panic on unset variable,Variables that are unset return the correct diagnostic but throw a panic when we later parse the job body. Return early if there are any variable parsing errors instead of continuing in a potentially invalid state.
3855,Merge pull request #10044 from hashicorp/b-fix-drainer-error-msg,drainer: fix error message when handling drain deadlined nodes.
3856,drainer: fix error message when handling drain deadlined nodes.,
3857,Update Ember/Ember CLI to 3.20 (#9641),"This doesn’t include Ember Data, as we are still back on 3.12. Most changes are deprecation updates, linting fixes, and dependencies. It can be read commit-by-commit, though many of them are mechanical and skimmable. For the new linting exclusions, I’ve added them to the Tech Debt list. The decrease in test count is because linting is no longer included in ember test. There’s a new deprecation warning in the logs that can be fixed by updating Ember Power Select but when I tried that it caused it to render incorrectly, so I decided to ignore it for now and address it separately."
3858,docs: clarify type constraints for collections in locals,"HCL2 locals don't have type constraints, and the map syntax is interpreted as an object. So users may need to explictly convert to map for some functions. The module function documentation was missing the required type constructor parameter for collections."
3859,docs: clarify that block labels can't be interpolated in HCL2,Block labels are not expressions so they can't be interpolated without hacks like module blocks. Clarify this so that we don't confuse users who shouldn't need to dig into the subtle nuances between expressions and blocks.
3860,docs: remove artifact destination interpolation warning,
3861,update changelog (#10034),  update changelog   fix changelog order 
3862,feat: Add -task to alloc logs command (#10026),
3863,Merge pull request #9975 from AndrewChubatiuk/connect-host-networks-fix,Updated Default Consul Sidecar Healthcheck
3864,Fix recommendation test to ensure CPU exists (#10004),"This fixes a flaky test, as seen in this failure: https://app.circleci.com/pipelines/github/hashicorp/nomad/14726/workflows/f4ae0bf2-0699-4d18-b55e-5221aafe393c/jobs/137128 One part of the test involves toggling off all memory recommendations and then accepting, but it’s not possible to accept when there are no CPU recommendations to begin with, which can happen because there’s a 10% chance of not creating a corresponding recommendation in the task factory. Since two tasks are created for this module, it’s only a 1% chance of no CPU task, but that means 1% flakiness!"
3865,pr comments,
3866,fixed typo,
3867,fixed typo,
3868,fixed typo,
3869,fixed tests,
3870,fixed connect port label,
3871,fixed connect port label,
3872,fixed connect port label,
3873,tests fix,
3874,allocate sidecar task port on host_network interface,
3875,fixed tests,
3876,fixed tests,
3877,fixed tests,
3878,removed proxy suffix,
3879,fixed variable initialization,
3880,customized default sidecar checks,
3881,enabled hairpin mode,
3882,Merge pull request #10020 from hashicorp/docs-update-install-brew,Updated Homebrew install instructions
3883,Merge pull request #10022 from hashicorp/docs-update-ig-example,docs: update ingress gateway runnable demo
3884,docs: update ingress gateway runnable demo,"Using the environment variable stopped working here a while back, should be using the port label. Also upgrade to uuid-api:v5 which supports linux/arm64."
3885,Updated Homebrew install instructions,
3886,Merge pull request #9946 from hashicorp/b-9477,structs: namespace port validation by host_network
3887,Merge pull request #10011 from hashicorp/b-e2e-gh-9985,e2e: account for race condition in periodic dispatch test.
3888,The encryption key uses 32 bytes now,"The encryption key uses 32 bytes now, not 16 bytes"
3889,e2e: account for race condition in periodic dispatch test.,
3890,Fix typo (#10008),
3891,Fix deployment failure error handling (#10003),This is a supplement to #9831 to incorporate the extracted missing-permissions error handling from #9909. It fixes this failure on the main branch! 😳 https://app.circleci.com/pipelines/github/hashicorp/nomad/14728/workflows/4c147dca-fd1e-4de7-86aa-90ded7aabad2/jobs/137137
3892,Add button to fail running deployments (#9831),"This closes #8744 and #9826. It necessitated some customisation options for TwoStepButton. One is inlineText, which puts the confirmation text in the same line as the buttons. Also, there was a single-use configuration option named isInfoAction that I removed in favour of passing a set of class configuration options like this: module"
3893,fix: docs/job-specification change mounts to mount,"Since link is deprecated, switch to newer module in module for module driver."
3894,Merge pull request #9990 from hashicorp/f-nsiso-task,drivers/exec+java: Add task configuration to restore previous PID/IPC isolation behavior
3895,Merge pull request #9995 from hashicorp/f-expose-custom,consul/connect: enable custom sidecars to use expose checks
3896,docs: fix egregious changelog ordering,
3897,consul/connect: enable custom sidecars to use expose checks,"This PR enables jobs configured with a custom sidecar_task to make use of the module feature for creating checks on services in the service mesh. Before we would check that sidecar_task had not been set (indicating that something other than envoy may be in use, which would not support envoy's expose feature). However Consul has not added support for anything other than envoy and probably never will, so having the restriction in place seems like an unnecessary hindrance. If Consul ever does support something other than Envoy, they will likely find a way to provide the expose feature anyway. Fixes #9854"
3898,Fix exec escaping for emoji task name (#7813),"This closes #7459. While emoji don’t actually need escaping, expanding the expression that enumerates all task name characters that don’t need escaping to include emoji is prohibitive, since it’s a discontinuous range. The emoji-regex project has such an expression and it’s 12kB. This fixes the regular expression to property escape emoji as a single character instead of as its component bytes. Thanks to @DingoEatingFuzz for the suggestion."
3899,website: update next and nextjs-scripts (#9957),
3900,drivers/exec+java: Add task configuration to restore previous PID/IPC isolation behavior,"This PR adds pid_mode and ipc_mode options to the exec and java task driver config options. By default these will defer to the default_pid_mode and default_ipc_mode agent plugin options created in #9969. Setting these values to ""host"" mode disables isolation for the task. Doing so is not recommended, but may be necessary to support legacy job configurations. Closes #9970"
3901,Merge pull request #9976 from hashicorp/hack-iptables-isolation,ar: isolate network actions performed by client
3902,Update CHANGELOG.md,
3903,document that Nomad ENT cannot be downgraded to Nomad OSS,
3904,Add handling for license requests in OSS (#9963),This changes the license-fetching endpoint to respond with 204 in OSS instead of 501. It closes #9827.
3905,address pr comments,
3906,Merge pull request #9982 from hashicorp/f-nsiso-driver,drivers/exec+java: Add configuration to restore previous PID/IPC namespace behavior
3907,"docs: fixup comments, var names",
3908,docs: clarify PID,Co-authored-by: Chris Baker link
3909,docs: shorten IPC,Co-authored-by: Chris Baker link
3910,docs: clarify PID,Co-authored-by: Chris Baker link
3911,docs: shorten IPC,Co-authored-by: Chris Baker link
3912,docs: capitalize posix,Co-authored-by: Chris Baker link
3913,docs: capitalize posix,Co-authored-by: Chris Baker link
3914,on_update check_restart e2e,
3915,e2e test for on_update service checks,check_restart not compatible with on_update=ignore reword caveat
3916,OnUpdate configuration for services and checks,Allow for readiness type checks by configuring nomad to ignore warnings or errors reported by a service check. This allows the deployment to progress and while Consul handles introducing the sercive into a resource pool once the check passes.
3917,drivers/exec+java: Add configuration to restore previous PID/IPC namespace behavior.,"This PR adds default_pid_mode and default_ipc_mode options to the exec and java task drivers. By default these will default to ""private"" mode, enabling PID and IPC isolation for tasks. Setting them to ""host"" mode disables isolation. Doing so is not recommended, but may be necessary to support legacy job configurations. Closes #9969"
3918,website: update community page to be consistent with other projects (#9863),
3919,Merge branch 'master' into b-9477,
3920,Correct the spelling of heirarchical/hierarchical (#9980),
3921,Replace ‘ and ' with ',
3922,volumes: implement plan diff for volume requests,"The details of host volume and CSI volume requests do not show up in module outputs, although the updates are detected by the scheduler and result in an update as expected."
3923,Change exec URLs to use job’s namespace/region (#9968),"This closes #9966. It was looking at the query parameters for the namespace and region, but allocation (and task!) routes don’t have a namespace query parameter. Since the URL generator requires the job for all calls, it makes sense to extract the namespace and region from the job instead."
3924,Merge pull request #9964 from hashicorp/f-9787-alloc-prefix-cli,add prefix-search and auto-completion for module command
3925,changelog for 9964,
3926,"scaling policy -verbose flag, plus testing and other recommendations from review",
3927,Fix aws secret key name in autoscaler aws target," aws secret key is named incorrectly in the target docs.   It needs to match what is in the nomad-autoscaler repo   (see link below), otherwise the autoscaler will default to AWS sdk   behavior, which could end up using an IAM instance profile   or other environment variables instead of what is passed into the   autoscaler config file.  Ref: https://github.com/hashicorp/nomad-autoscaler/blob/e60fb5268d2107ab18e2be11e5d438fedc3eb2a8/plugins/builtin/target/aws-asg/plugin/plugin.go#L27"
3928,"updated ""scaling policy info"" with prefix search and auto-complete",
3929,bad boolean logic for List-on-Info commands,
3930,api: added scaling_policy context to global search,
3931,Merge pull request #9951 from hashicorp/b-8284,drivers/docker: support mapping multiple host ports to the same container port
3932,support for scaling_policy in global prefix search,
3933,ar: isolate network actions performed by client,
3934,add changelog item,
3935,drivers/docker: support mapping multiple host ports to the same container port,
3936,update CHANGELOG,
3937,structs: namespace port validation by host_network,
3938,Remove support for IE11 (#9578),"This changes the Babel compilation targets to exclude IE 11, which results in significant payload size savings."
3939,Merge pull request #9913 from hashicorp/b-ui/cross-region-server-monitor,UI: Cross region server monitor
3940,Merge pull request #9943 from hashicorp/e2e-fix-failing-java-test,e2e packer build: upgrade jdk to java 14
3941,Merge pull request #9937 from hashicorp/b-9728,scheduler: add tests and fix for detected host_network and to port field changes
3942,Update ember-a11y-testing (#9912),This includes seemingly-unrelated changes because of dependency updates.
3943,e2e packer build: upgrade jdk to java 14,
3944,changelog: add issue link for quota enforcement change,
3945,docs: add changelog entry for removing mbits from quotas,
3946,docs: remove mbits examples from documentation,
3947,scheduler: add tests and fix for detected host_network and to port field changes,
3948,Merge pull request #9936 from hashicorp/b-hcl2-task-env,"Allow expressing module and module blocks as map attributes as well. module and module should support arbitrary key and values, yet hcl2 restricts the keys to valid identifiers. For example, block attribute identifiers may not contain dots, module, which frequently used in meta fields, and sometimes in environment variable fields. By adding attribute syntax support, we maintain backward compatibility and relax the block attribute key restrictions. This change attempts to parse module/module both as an attribute and as a block. Additionally, the change allows better expressivity for env/meta blocks, using functions and for expressions. For example, one can reuse a set of environment variables for multiple tasks, using a local module value: module Note that the map/attribute compatibility workaround is currently a pattern we recommend for driver config blocks: https://www.nomadproject.io/docs/job-specification/hcl2#blocks . :( Sadly, the document isn't accurate, as only module appearing inside driver config was handled in 1.0.1. Closes https://github.com/hashicorp/nomad/issues/9606"
3949,Change down to highest-priority composite status (#9927),"As pointed out by Nick Ethier, if a node was ineligible before it went down, downness should be displayed, not ineligibility."
3950,Don't include the region param in authorizedRequest if it's already in the URL,
3951,Always include the region param in server monitor requests,The region will naturally be appended to URLs via token.authorizedRequest but agent members includes all servers across all regions so relying on the application-level region isn't good enough.
3952,tests: add tests for invalid syntax cases,
3953,tests: update test with a real invalid hcl2,
3954,Merge pull request #9933 from hashicorp/e2e-buf-0.36.0,"lint: Upgrade buf to 0.36.0, latest so far"
3955,hcl2: special case meta and env blocks,"Allow expressing module and module blocks as map attributes as well. module and module should support arbitrary key and values, yet hcl2 restricts the keys to valid identifiers. For example, block attribute identifiers may not contain dots, module, which frequently used in meta fields, and sometimes in environment variable fields. This change attempts to parse module/module both as an attribute and as a block. This additionally allows better expressivity for env/meta blocks, using functions. For example, one can reuse a set of environment variables for multiple tasks, using a local common_envs value: module"
3956,Merge pull request #9926 from hashicorp/f-up-consul-api,consul: upgrade consul/api to 1.8.1
3957,e2e: segment e2e clusters,"Ensure that the e2e clusters are isolated and never attempt to autojoin with another e2e cluster. This ensures that each cluster servers have a unique module, to be used for discovery."
3958,update buf compare tag to latest release,
3959,"lint: Upgrade buf to 0.36.0, latest so far",
3960,Merge pull request #9929 from hashicorp/changli0617-patch-1,Update alert-banner.js
3961,Merge pull request #9931 from hashicorp/website-update-version,update latest release version on website
3962,update latest version on website,
3963,Update website/data/alert-banner.js,
3964,Merge pull request #9930 from hashicorp/post-release-1.0.3,post-release merge for 1.0.3
3965,Update alert-banner.js,
3966,remove generated code,
3967,vesion-specific upgrade guide for 1.0.3 and 0.12.10,
3968,version to 1.0.4-dev,
3969,Merge tag 'v1.0.3' into post-release-1.0.3,Version 1.0.3
3970,consul: upgrade consul/api to 1.8.1,
3971,interpolate maps in dynamic blocks (#9921),Update hcl2 for patch to fix map interpolation in dynamic blocks
3972,Merge pull request #9909 from hashicorp/b-ui/incorrect-error-message,UI: Use server-sent error messages when applicable
3973,Add an acceptance test exercising errors from an HTTP response to a notification,
3974,Test coverage for the messageFromAdapterError util,
3975,Don't use generic ACL error messages,"When the error is actually a 403, an ACL error is appropriate, but when it isn't, fallback on what the API returns."
3976,Improve the message-from-adapter-error util,Automatically detect ACL errors Provide a generic error message as a fallback
3977,Merge pull request #9886 from hashicorp/b-ui/topo-viz-accounting,UI: Topology info panel incorrect accounting bugs
3978,Release v1.0.3,
3979,Merge branch 'master' into b-ui/topo-viz-accounting,
3980,bump version to 1.0.3,
3981,updated changelog for release,
3982,attempting to fix flaky tests caused by pid isolation,
3983,lint some nomad HCL job specs,
3984,Backfill unit test for NEWIPC,
3985,e2e: java driver isolation tests,
3986,additional e2e utils for multi-task allocs,
3987,modify exec driver test TestExecDriver_StartWaitStop in light of the fact that signaling sleep with SIGINT doesn't work if it's PID1,
3988,modify exec driver test TestExecDriver_DestroyKills all in light of the fact that PID namespacing means that the kernel does this now,
3989,put exec process in a new IPC namespace,
3990,Add a little comment,
3991,Add test for alloc exec,
3992,Add e2e test for raw exec,
3993,Add unit test for container namespacing,
3994,Always check that resource constraints were applied,
3995,Add PID namespacing and e2e test,
3996,ci: only read/modify module field (#9815),"Only lookup GO_TAGS variable, and avoid the false positives where GO_TAGS is a variable suffix."
3997,Merge pull request #9906 from hashicorp/b-ui/topo-lines-not-shown,UI: Show allocation associations in the topo viz more often (and fix a bug)
3998,Adjust the no-association-lines logic,"On very small clusters, the node count heuristic is impractical and leads to confusion. By additionally requiring 10+ sibling allocs, the lines will be shown more often."
3999,Don't render association lines on resize when lines aren't supposed to be shown at all,
4000,docs: add metrics from raft leadership transitions,
4001,Merge pull request #9903 from hashicorp/b-e2e-tweaks-20210126_2,e2e: Disable node drain deadline tests
4002,e2e: skip node drain deadline/force tests,
4003,e2e: use f.NoError instead of requires,
4004,Merge pull request #9896 from hashicorp/b-ui-hz-casing,UI: Use MHz instead of Mhz throughout
4005,Use Hz instead of hz throughout the UI,
4006,Merge pull request #9894 from hashicorp/b-ui/topo-viz-align-text-ff,Use dominant-baseline instead of alignment-baseline to get firefox support
4007,ar: only log warning if no addr in found,
4008,Use dominant-baseline instead of alignment-baseline to get firefox support,
4009,Merge pull request #9721 from Mongey/cm-headers,Allow setting of headers in api client
4010,ar: try to find CNI addr if not returned with interface,
4011,Merge pull request #9891 from hashicorp/e2e-deflake-tests-20210126,2021-01-26 Attempt at deflaking e2e tests
4012,Fix audit workflow action versions (#9877),"This fixes the version reference error seen in this workflow failure: https://github.com/hashicorp/nomad/actions/runs/504695096 I’ve also included an update to the sticky comment action version to address this warning in the above link: marocchino/sticky-pull-request-comment@33a6cfb looks like the shortened version of a commit SHA. Referencing actions by the short SHA will be disabled soon. Please see https://docs.github.com/en/actions/learn-github-actions/security-hardening-for-github-actions#using-third-party-actions. We were previously using 33a6cfb after the maintainer merged my PR to allow the comment to be read from a file, there was no released version with that, but it’s now included in v2.0.0."
4013,e2e: Disable Connect tests,"The connect tests are very disruptive: restart consul/nomad agents with new tokens.  The test seems particularly flaky, failing 32 times out of 73 in my sample. The tests are particularly problematic because they are disruptive and affect other tests. On failure, the nomad or consul agent on the client can get into a wedged state, so health/deployment info in subsequent tests may be wrong. In some cases, the node will be deemed as fail, and then the subsequent tests may fail when the node is deemed lost and the test allocations get migrated unexpectedly."
4014,e2e: deflake nodedrain test,"The nodedrain deadline test asserts that all allocations are migrated by the deadline. However, when the deadline is short (e.g. 10s), the test may fail because of scheduler/client-propagation delays. In one failing test, it took ~15s from the RPC call to the moment to the moment the scheduler issued migration update, and then 3 seconds for the alloc to be stopped. Here, I increase the timeouts to avoid such false positives."
4015,e2e: vault increase timeout,"Increase the timeout for vaultsecrets.  As the default  interval is 0.1s, 10 retries mean it only retries for one second, a very short time for some waiting scenarios in the test (e.g. starting allocs, etc)."
4016,e2e: prefer testutil.WaitForResultRetries,"Prefer testutil.WaitForResultRetries that emits more descriptive errors on failures. module fails with opaque ""Condition never satisfied"" error message."
4017,"e2e: special case ""Unexpected EOF"" errors","This is an attempt at deflaking the e2e exec tests, and a way to improve messages. e2e occasionally fail with ""unexpected EOF"" even though the exec output matches expectations. I suspect there is a race in handling EOF in server/http handling. Here, we special case this error and ensures we get all failures, to help debug the case better."
4018,e2e: tweak failure messages,"Tweak the error messages for the flakiest tests, so that on test failure, we get more output"
4019,e2e: use testify requires instead of t.Fatal,testify requires offer better error message that is easier to notice when seeing a wall of text in the builds.
4020,e2e: deflake consul/CheckRestart test,"Ensure we pass the alloc ID to status.  Otherwise, the test may fail if there is another spurious allocation running from another test."
4021,e2e: Fix build script and pass shellcheck,
4022,Merge pull request #9888 from hashicorp/f-docs-gh-9842,docs: clarify where variables can be placed with HCLv2.
4023,docs: clarify where variables can be placed with HCLv2.,
4024,Test coverage for the topology info panel.,This fixes a couple bugs  Overreporting resources reserved due to counting terminal allocs Overreporting unique client placements due to uniquing on object refs    instead of on client ID.
4025,Clamp widths at zero to prevent negative width warnings,"This would only ever realistically happen with fixture data, but still good to not have these warnings."
4026,Only count the scheduled allocs on the topo viz node stats bar,
4027,Merge pull request #9798 from hashicorp/e2e-terraform-tweaks-20200113,"This PR makes two ergonomics changes, meant to get e2e builds more reproducible and ease changes. AMI Management First, we pin the server AMIs to the commits associated with the build.  No more using the latest AMI a developer build in a test branch, or accidentally using a stale AMI because we forgot to build one!  Packer is to tag the AMI images with the commit sha used to generate the image, and then Terraform would look up only the AMIs associated with that sha. To minimize churn, we use the SHA associated with the latest Packer configurations, rather than SHA of all. This has few benefits: reproducibility and avoiding accidental AMI changes and contamination of changes across branches. Also, the change is a stepping stone to an e2e pipeline that builds new AMIs automatically if Packer files changed. The downside is that new AMIs will be generated even for irrelevant changes (e.g. spelling, commits), but I suspect that's OK. Also, an engineer will be forced to build the AMI whenever they change Packer files while iterating on e2e scripts; this hasn't been an issue for me yet, and I'll be open for iterating on that later if it proves to be an issue. Config Files and Packer Second, this PR moves e2e config hcl management to Terraform instead of Packer. Currently, the config files live in module, but they are baked into the servers by Packer and changes are ignored.  This current behavior surprised me, as I spent a bit of time debugging why my config changes weren't applied.  Having Terraform manage them would ease engineer's iteration.  Also, make Packer management more consistent (Packer only works module), and easing the logic for AMI change detection. The config directory is very small (100KB), and having it as an upload step adds negligible time to module."
4028,Merge pull request #9829 from hashicorp/f-terminating-gateway,consul/connect: Add support for Connect terminating gateways
4029,update readme about profiles and packer build,
4030,consul/connect: copy bind address map if empty,"This parameter is now supposed to be non-nil even if empty, and the Copy method should also maintain that invariant."
4031,consul/connect: remove debug line,
4032,consul/connect: Add support for Connect terminating gateways,"This PR implements Nomad built-in support for running Consul Connect terminating gateways. Such a gateway can be used by services running inside the service mesh to access ""legacy"" services running outside the service mesh while still making use of Consul's service identity based networking and ACL policies. https://www.consul.io/docs/connect/gateways/terminating-gateway These gateways are declared as part of a task group level service definition within the connect stanza. service {   connect {     gateway {       proxy {         // envoy proxy configuration       }       terminating {         // terminating-gateway configuration entry       }     }   } } Currently Envoy is the only supported gateway implementation in Consul. The gateay task can be customized by configuring the connect.sidecar_task block. When the gateway.terminating field is set, Nomad will write/update the Configuration Entry into Consul on job submission. Because CEs are global in scope and there may be more than one Nomad cluster communicating with Consul, there is an assumption that any terminating gateway defined in Nomad for a particular service will be the same among Nomad clusters. Gateways require Consul 1.8.0+, checked by a node constraint. Closes #9445"
4033,ignore setting job summary when oldstatus == newstatus (#9884),
4034,Adds community USB plugin to documentation site,
4035,Update syntax.mdx,"""one label"" should be the singular form."
4036,"update dependencies, removed unused dependency (#9878)",
4037,Merge pull request #9876 from hashicorp/b-ui/default-namespace-casing,UI: Use the same prefix pattern for both the region switcher and the namespace switcher
4038,Clip long namespace names but make sure to keep the full name in the title attribute,
4039,Use the same prefix pattern from the region switcher for the namespace switcher,
4040,changelog entry,
4041,prefer TrimPrefix to checking HasPrefix first,
4042,fix the inconsistency handling between infra image and normal task image,
4043,docs: check_restart is now supported for group services,
4044,e2e: added tests for check restart behavior,
4045,implement alloc runner task restart hook,"Most allocation hooks don't need to know when a single task within the allocation is restarted. The check watcher for group services triggers the alloc runner to restart all tasks, but the alloc runner's module method doesn't trigger any of the alloc hooks, including the group service hook. The result is that after the first time a check triggers a restart, we'll never restart the tasks of an allocation again. This commit adds a module interface so that alloc runner hooks can act if a task within the alloc is restarted. The only implementation is in the group service hook, which will force a re-registration of the alloc's services and fix check restarts."
4046,changelog entry for 9768 (#9873),
4047,prevent double job status update (#9768)," Prevent Job Statuses from being calculated twice  https://github.com/hashicorp/nomad/pull/8435 introduced atomic eval insertion iwth job (de-)registration. This change removes a now obsolete guard which checked if the index was equal to the job.CreateIndex, which would empty the status. Now that the job regisration eval insetion is atomic with the registration this check is no longer necessary to set the job statuses correctly.   test to ensure only single job event for job register   periodic e2e   separate job update summary step   fix updatejobstability to use copy instead of modified reference of job   update envoygatewaybindaddresses copy to prevent job diff on null vs empty   set ConsulGatewayBindAddress to empty map instead of nil   fix nil assertions for empty map rm unnecessary guard"
4048,Clean up Task Validation tests (#9833),Co-authored-by: Mahmood Ali link
4049,Don't prepend https to docker cred helper call (#9852),"Some credential helpers, like the ECR helper, will strip the protocol if given. Others, like the linux ""pass"" helper, do not."
4050,Enable network namespaces for QEMU driver (#9861), Enable network namespaces for QEMU driver Add CHANGELOG entry
4051,Merge pull request #9868 from hashicorp/e2e-tests-20200121,Deflake some e2e tests
4052,e2e: show command output on failure,"When a command fails, it's nice to have the full output, as it contains diagnostic information. The status code isn't sufficient for debugging."
4053,docs: remove timestamp hcl2 function (#9867),timestamp isn't actually implemented
4054,e2e: deflake TestVolumeMounts,"After submitting an update, the test ought to wait until the new allocations are placed. Previously, we'd use the original to-be-stopped allocations and the test fails when attempting to exec."
4055,e2e deflake namespaces: only check namespace jobs,"Deflake namespace e2e test by only asserting on jobs related to the namespace tests. During our e2e tests, some left over jobs (e.g. prometheus) are left running while being shutdown and cause the test to fail."
4056,e2e: deflake events,Handle streamCh channel being closed.
4057,Change to fork of audit to log flaky tests (#9518),This will report the names of flaky tests instead of just counting them.
4058,validate connect block allowed only within group.service,
4059,fix changelog date (#9862),
4060,Merge pull request #9849 from hashicorp/b-cc-ig-id,consul/connect: Enable running multiple ingress gateways per Nomad agent
4061,docs: fix typo in changelog,Co-authored-by: Tim Gross link
4062,consul/connect: ensure proxyID in test case,
4063,client: use closed variable in append,
4064,don't prefix json logging,
4065,Update server_join.mdx,Fixed Markdown for GCP example.
4066,consul/connect: Enable running multiple ingress gateways per Nomad agent,"Connect ingress gateway services were being registered into Consul without an explicit deterministic service ID. Consul would generate one automatically, but then Nomad would have no way to register a second gateway on the same agent as it would not supply 'proxy-id' during envoy bootstrap. Set the ServiceID for gateways, and supply 'proxy-id' when doing envoy bootstrap. Fixes #9834"
4067,Merge pull request #9851 from hashicorp/b-proxy-default-connect-timeout,consul/connect: always set gateway proxy default timeout
4068,consul/connect: always set gateway proxy default timeout,"If the connect.proxy stanza is left unset, the connection timeout value is not set but is assumed to be, and may cause a non-fatal NPE on job submission."
4069,remove invalid duplicate (#9850),
4070,executor_linux: Remove unreachable PATH= code (#9778),"This has to have been unused because the HasPrefix operation is backwards, meaning a Command.Env that includes PATH= never would have worked; the default path was always used."
4071,Persist shared allocated ports for inplace update (#9830), Persist shared allocated ports for inplace update  Ports were not copied over when performing inplace updates in the generic scheduler   changelog   drop spew 
4072,Merge pull request #9828 from leonardobsjr/changelog-gw-sidecar-mention,Missed improvement regarding IGW task customization
4073,add helper for building ami,
4074,set sha,
4075,change ami naming,
4076,move config files to terraform,
4077,Missed improvement regarding IGW improvement,"Seems like this was missing from the docs. Was trying to make this work on 1.0.1 (it was on the docs), however, it's only working on 1.0.2."
4078,Update FSIsolation from none to image.,
4079,bump upgrade guide version (#9822),  bump upgrade guide version   drop 1.0.3 until there are upgrade specifics 
4080,Fix some errcheck errors (#9811)," Throw away result of multierror.Append  When given a *multierror.Error, it is mutated, therefore the return value is not needed.   Simplify MergeMultierrorWarnings, use StringBuilder   Hash.Write() never returns an error   Remove error that was always nil   Remove error from Resources.Add signature   When this was originally written it could return an error, but that was refactored away, and callers of it as of today never handle the error.   Throw away results of io.Copy during Bridge   Handle errors when computing node class in test "
4081,csi: Return error when deleting node (#9803),"In this change we'll properly return the error in the CSIPluginTypeMonolith case (which is the type given in DeleteNode()), and also return the error when the given ID is not found. This was found via errcheck."
4082,gatedwriter: Fix race condition (#9791),"If one thread calls module on a gatedwriter while another thread attempts to module new data to it, strange things will happen. The test I wrote shows that at the very least you can write while flushing, and the call to module will happen during the internal writes of the buffered data, which is maybe not what is expected. (i.e. the module'd data will be inserted somewhere in the middle of the data being module) It's also the case that, because module only has a read lock, if you had multiple threads trying to write (""read"") at the same time you might have data loss because the module that was read would not necessarily be up-to-date by the time module was appended to it and it was re-assigned to module. You can see this if you run the new gatedwriter tests with module against the old implementation: module This race condition is fixed in this change."
4083,Refactor Job.Scale() (#9771),
4084,Add missing sink.Cancel() in fsm (#9818),
4085,bump website version (#9820),
4086,Release 1.0.2 (#9819),"  changelog for release 1.0.2   Generate files for 1.0.2 release   Release v1.0.2   rm generated files, update changelog for next release   checkout bindata_assetfs   bump version   Co-authored-by: Nomad Release bot link"
4087,Merge pull request #9805 from hashicorp/br.stack-menu,Website StackMenu updates for 1/14
4088,ci: only read/modify module field (#9815),"Only lookup GO_TAGS variable, and avoid the false positives where GO_TAGS is a variable suffix."
4089,changelogfmt (#9807),
4090,Merge pull request #9809 from hashicorp/f-use-jobspec2-in-e2eutil,e2e: use jobspec2 Parse for parsing jobfile in e2e utils
4091,e2e: use jobspec2 Parse for parsing jobfile in e2e utils,"We directly parse job files in e2eutil, but currently using jobspec package. Instead, use the Parse method from the jobspec2 package so we can parse job files with new features."
4092,Website StackMenu updates for 1/14,
4093,Release v1.0.2,
4094,Generate files for 1.0.2 release,
4095,changelog for release 1.0.2,
4096,lifecycle: successful prestart tasks should not fail deployments,"In 492d62d we prevented poststop tasks from contributing to allocation health status, which fixed a bug where poststop tasks would prevent a deployment from ever being marked successful. The patch introduced a regression where prestart tasks that complete are causing the allocation to be marked unhealthy. This changeset restores the previous behavior for prestart tasks."
4097,Merge pull request #9801 from hashicorp/docs-fix-broken-link-in-hcl2,docs: fix broken link
4098,docs: fix broken link,
4099,Merge pull request #9799 from hashicorp/docs-fix-hcl2-codeblock,docs: fix HCL2 doc page code block
4100,docs: fix HCL2 doc page code block,
4101,build binaries with UI enabled (#9796),"Have the build-binary bundle the UI by default. This eases getting ""alpha pre-releases"" out for support without compiling locally, and engineer's experience with e2e test clusters."
4102,nomad agent-info: Add json/gotemplate formatting (#9788), nomad agent-info: Add json/gotemplate formatting Add CHANGELOG entry update docs
4103,docs: podman FSIsolation is image,"As of podman 0.2.0, podman correctly advertises its filesystem isolation as module."
4104,docs: remove remaining references to network_speed config,
4105,tmp remove darwin arm build (#9786),
4106,changelog for #9361 (#9783),
4107,makefile: Set CC explicitly in go build (#9784),"This is required because Go does not pull CC from the make variable. This uses whatever Go's default CC unless CC is overridden, as it is for the ARM targets. This also makes it easier to build Nomad on a native ARM device, via: module"
4108,Merge pull request #9780 from hashicorp/d/changelog-9733,Changelog entry for 9733
4109,Merge pull request #9770 from hashicorp/docs-update-cl,docs: update cl with graviton fix
4110,Merge pull request #9779 from apollo13/fix_9776,Properly detect unloaded dynamic modules on RHEL derivates. Fixes #9776
4111,"ignore poststop task in alloc health tracker (#9548), fixes #9361",  investigating where to ignore poststop task in alloc health tracker   ignore poststop when setting latest start time for allocation   clean up logic   lifecycle: isolate mocks for poststop deployment test   lifecycle: update comments in tracker   Co-authored-by: Jasmine Dahilig link
4112,Changelog entry for 9733,
4113,Properly detect unloaded dynamic modules on RHEL derivates. Fixes #9776,The modules.dep file on RHEL includes .xz for compressed kernel modules.
4114,docs: update cl with graviton fix,
4115,Merge pull request #9767 from hashicorp/f-e2e-job-scaling-suite,e2e: add job scaling test suite.
4116,safely handle existing net namespace in default network manager,"When a client restarts, the network_hook's prerun will call module. Drivers that don't implement their own network manager will fall back to the default network manager, which doesn't handle the case where the network namespace is being recreated safely. This results in an error and the task being restarted for module tasks with module blocks (this also impacts the community module and probably other community task drivers). If we get an error when attempting to create the namespace and that error is because the file already exists and is locked by its process, then we'll return a module error with the module flag set to false, just as we do with the module driver."
4117,Merge pull request #9765 from hashicorp/f-bump-connect-examples,command: bump connect examples to v3
4118,Merge pull request #9766 from hashicorp/f-bump-cni-plugins-version,cni: bump CNI plugins version to v0.9.0
4119,e2e: remove deprecated terraform syntax,Also bumps patch versions of some TF modules
4120,e2e: add job scaling test suite.,
4121,cni: bump CNI version to v0.9.0,"https://github.com/containernetworking/plugins/releases/tag/v0.9.0 Also make the copy-paste install instructions work with arm64 for a better OOTB experience (AWS Graviton, Pi 4's)."
4122,docs: update countdash examples to v3,
4123,command: generate bindata assetfs,
4124,command: bump connect examples to v3,"Nomad v1.0+ combined with Consul 1.9+ support launching Envoy v1.16+ which is the first version of envoy to support arm64 platforms out of the box. By rebuilding our example docker containers for connect to be multiplatform between amd64 and arm64, Nomad can provide a nicer user experience for those trying out Connect on arm64 machines (e.g. AWS Graviton instances or Raspberry Pi 4's). This has been done for the countdash examples at v3. https://hub.docker.com/layers/hashicorpnomad/counter-dashboard/v3/images/sha256-94e323587bc372ba1b6ca5c58dc23e291e9d26787b50e71025f1c8967dfbcd07?context=repo https://hub.docker.com/layers/hashicorpnomad/counter-api/v3/images/sha256-16a9e9e08082985a635c9edd0f258b084153c6c7831a9b41d34bde78c308b65c?context=repo The connect-native examples are now also multiplatform at v5, but we don't have them built into module."
4125,Merge pull request #9761 from hashicorp/b-9758-enforce-policy-on-scale,"in Job.Scale, ensure that new count is within [min,max] configured in  scaling policy"
4126,nicer error message,
4127,update dependencies (#9760),
4128,Add documentation for exec websocket (#9679),
4129,appease the linter and fix an incorrect test,
4130,changelog for 9761,
4131,"in Job.Scale, ensure that new count is within [min,max] configured in scaling policy",resolves #9758
4132,persist shared ports during inplace updates (#9736),"AllocatedSharedResources were not being copied over to the new allocation struct the scheduler makes during inplace updates. This caused downstream issues after the plan was applied, namely the shared ports were dropped causing issues with service registration/deregistration. test that shared ports are preserved change log, also carry over shared network copy networks"
4133,docs: clarify default behavior of docker userns_mode,
4134,Fix HCL2 link,
4135,Merge pull request #9747 from hashicorp/f-e2e-scaling-policy-suite,e2e: add ScalingPolicies test suite with initial test case.
4136,Merge pull request #9614 from hashicorp/dependabot/npm_and_yarn/ui/ini-1.3.7,build(deps): bump ini from 1.3.5 to 1.3.7 in /ui
4137,changelog entry for #9532,
4138,Allow client.cpu_total_compute to override attr.cpu.totalcompute,
4139,Merge pull request #9751 from hashicorp/b-envoyv-segfault,consul/connect: fix panic during in-place upgrade with connect jobs
4140,changelog: add entry for GH-9050,
4141,consul/connect: fix panic during in-place upgrade with connect jobs,"When upgrading from Nomad v0.12.x to v1.0.x, Nomad client will panic on startup if the node is running Connect enabled jobs. This is caused by a missing piece of plumbing of the Consul Proxies API interface during the client restore process. Fixes #9738"
4142,Merge pull request #9690 from hashicorp/docs-wtdd-update-ui-api-docs,WTDD: Update UI api docs
4143,Update go-getter to v1.5.2 with support for vhost style S3 paths (#9349),
4144,Merge pull request #9748 from hashicorp/docs-zs.build-time-code-highlight-revised,Add build-time highlighting to code blocks
4145,Update the page param default to 1 instead of 0,
4146,Typo fixes,Co-authored-by: Buck Doyle link
4147,Update 'Node' to 'Client' which is used throughout the UI,
4148,Add missing faceted search query params,
4149,Remove no longer true enteprise warning,
4150,Remove version introduction,0.7 is ancient at this point. Now it's as if the UI has always existed.
4151,Add missing routes to the UI API doc,
4152,Merge pull request #9733 from hashicorp/b-ui/topo-viz-old-agent,UI: Guard against nodes running an old version of the Nomad agent
4153,Remove broken shell-session highlighting,
4154,Add build-time highlighting to code blocks,
4155,Merge pull request #9744 from hashicorp/f-add-namespace-e2e-oss,e2e: move namespace tests into OSS.
4156,Merge pull request #9739 from hashicorp/b-alloc-netmode-ports,Use port's to value when building service address under 'alloc' addr_mode
4157,Fix missing link for Consul integration,Add a link back to configuration/consul in the module parameter section of the module stanza.
4158,Apply suggestions from code review,Co-authored-by: Tim Gross link
4159,e2e: add ScalingPolicies test suite with initial test case.,
4160,e2e: move namespace tests into OSS.,
4161,Merge pull request #9743 from hashicorp/je.fix-edit-page-links,hotfix: fix 'edit this page' links
4162,fix 'edit this page' links,
4163,tests: deflake test-api job (#9742),"Deflake test-api job, currently failing at around 7.6% (44 out of 578 workflows), by ensuring that test nomad agent use a small dedicated port range that doesn't conflict with the kernel ephemeral range. The failures are disproportionatly related to port allocation, where a nomad agent fails to start when the http port is already bound to another process. The failures are intermitent and aren't specific to any test in particular. The following is a representative failure: https://app.circleci.com/pipelines/github/hashicorp/nomad/13995/workflows/6cf6eb38-f93c-46f8-8aa0-f61e62fe7694/jobs/128169 . Upon investigation, the issue seems to be that the api freeport library picks a port block within 10,000-14,500, but that overlaps with the kernel ephemeral range 32,769-60,999! So, freeport may allocate a free port to the nomad agent, just to be used by another process before the nomad agent starts! This happened for example in https://app.circleci.com/pipelines/github/hashicorp/nomad/14111/workflows/e1fcd7ff-f0e0-4796-8719-f57f510b1ffa/jobs/129684 .  module allocated port 41662 to serf, but module raced to use it to connect to the CirleCI vm metadata service. We avoid such races by using a dedicated port range that's disjoint from the kernel ephemeral port range."
4164,tests: deflake TestTaskRunner_StatsHook_Periodic (#9734),"This PR deflakes TestTaskRunner_StatsHook_Periodic tests and adds backoff when the driver closes the channel. TestTaskRunner_StatsHook_Periodic is currently the most flaky test - failing ~4% of the time (20 out of 486 workflows). A sample failure: https://app.circleci.com/pipelines/github/hashicorp/nomad/14028/workflows/957b674f-cbcc-4228-96d9-1094fdee5b9c/jobs/128563 . This change has two components: First, it updates the StatsHook so that it backs off when stats channel is closed. In the context of the test where the mock driver emits a single stats update and closes the channel, the test may make tens of thousands update during the period. In real context, if a driver doesn't implement the stats handler properly or when a task finishes, we may generate way too many Stats queries in a tight loop. Here, the backoff reduces these queries. I've added a failing test that shows 154,458 stats updates within 500ms in https://app.circleci.com/pipelines/github/hashicorp/nomad/14092/workflows/50672445-392d-4661-b19e-e3561ed32746/jobs/129423 . Second, the test ignores the first stats update after a task exit. Due to the asynchronicity of updates and channel/context use, it's possible that an update is enqueued while the test marks the task as exited, resulting into a spurious update."
4165,command/agent/consul: remove duplicated tests,
4166,consul: Refactor parts of UpdateWorkload (#9737),"This removes modification of ops in methods that UpdateWorkload calls, keeping them local to UpdateWorkload. It also includes some rewrites of checkRegs for clarity."
4167,command/agent/consul: use port's to value when building service address under 'alloc' addr_mode,
4168,"Revert ""Headers -> Header""",This reverts commit 71396fa721945e55f51bc90ed02522936450209b.
4169,make sync,
4170,Only override headers if they're set,
4171,Ensure set headers have lower precedence than basic auth headers,
4172,Headers -> Header,
4173,Prefer http.Header over map[string]string to allow for multi-valued headers,
4174,Allow setting of headers in api client,
4175,Merge pull request #9638 from hashicorp/je.mdx-remote,implement mdx remote
4176,"When the topo viz filters out nodes, report this to the user via warning alert",
4177,Filter out nodes that don't have NodeResources from the topo viz,
4178,fix intro navigation,
4179,fix style references,
4180,touch up dependencies,
4181,implement mdx remote,
4182,Merge pull request #9697 from hashicorp/docs-wtdd-cleanup-images,docs: Remove unused images + intro pages
4183,Merge pull request #9732 from hashicorp/docs-cleanup,Docs cleanup
4184,Merge pull request #9692 from hashicorp/docs-wtdd-jobs-field-reference,docs: Enumerate job statuses and types in docs
4185,docs: mention client can be non-root,I want to strike a balance here:  On the one hand there are use cases (raw_exec or Docker only) where   running Nomad clients as an unprivileged user is preferable. On the other hand running Nomad clients as root is our main and best   tested environment. So I want to leave that a strong recommendation.
4186,docs: remove old client.options migration note,There's no reason to give the module to module migration top billing on the client configuration page. Remove and and clarify the more appropriately placed note down below.
4187,docs: remove duplicate PreserveCounts entry,
4188,Merge pull request #9731 from hashicorp/docs-upgrade-102,docs: note that 1.0.2 is unreleased
4189,docs: note that 1.0.2 is unreleased,
4190,Refactor alloc exec command (#9718),This re-arranges the alloc exec Run implementation to have validation hoisted as high as possible.
4191,Merge pull request #9429 from hashicorp/docs-update-autoscale-policy,docs: update file scaling policy docs
4192,Merge pull request #9727 from hashicorp/b-empty-ingress-proxy,consul/connect: avoid NPE from unset connect gateway proxy
4193,Merge pull request #9726 from hashicorp/f-add-tf-lockfile,e2e: add terraform lockfile
4194,docs: update changelog,
4195,consul/connect: avoid NPE from unset connect gateway proxy,"Submitting a job with an ingress gateway in host networking mode with an absent gateway.proxy block would cause the Nomad client to panic on NPE. The consul registration bits would assume the proxy stanza was not nil, but it could be if the user does not supply any manually configured envoy proxy settings. Check the proxy field is not nil before using it. Fixes #9669"
4196,e2e: add terraform lockfile,"Terraform v0.14 is producing a lockfile after running module. The docs suggest we should include this file in the git repository:  You should include this file in your version control repository so that you can discuss potential changes to your external dependencies via code review, just as you would discuss potential changes to your configuration itself.  Sounds similar to go.sum https://www.terraform.io/docs/configuration/dependency-lock.html#lock-file-location"
4197,Merge pull request #9720 from hashicorp/b-consul-sreg-update,consul: always include task services hook
4198,e2e: add e2e test for service registration,
4199,docs: add changelog entry,
4200,consul: always include task services hook,"Previously, Nomad would optimize out the services task runner hook for tasks which were initially submitted with no services defined. This causes a problem when the job is later updated to include service(s) on that task, which will result in nothing happening because the hook is not present to handle the service registration in the .Update. Instead, always enable the services hook. The group services alloc runner hook is already always enabled. Fixes #9707"
4201,Added Enterprise Badges in Docs (#9706),
4202,Merge pull request #9724 from hashicorp/7410-simple-consistency-test,simple stale read test
4203,simple test to ensure that scaling endpoint methods support IsRead for,stale read support
4204,resolve comments from code review,
4205,docs: update file scaling policy docs,
4206,Merge pull request #9671 from hashicorp/b-9610-template-interpolation-paths-refactor,address interpolation of artifact and template src/dest
4207,modified e2e test so that it explicitly tested the use case in #6929,
4208,added documenting unit tests for new TaskEnv.ClientPath method,
4209,changelog,
4210,Update client/taskenv/env.go,Co-authored-by: Michael Schurter link
4211,enabled broken test that is no longer broken,
4212,update template and artifact interpolation to use client-relative paths,resolves #9839 resolves #6929 resolves #6910 e2e: template env interpolation path testing
4213,docs: add metrics and API docs to RPC contributors checklist,
4214,e2e: dnsmasq configuration fixes, systemd units require absolute paths ensure directory exists for dnsmasq
4215,Merge pull request #9686 from hashicorp/golang1.15.6,build: upgrade from Go 1.15.5 -> 1.15.6
4216,"Version update for demo Vagrant: Nomad 1.0.1, Consul 1.9.0 (#9716)",
4217,docs: update metrics tables,
4218,client: improve alloc GC API error messages (#9488),The client allocation GC API returns a misleading error message when the allocation exists but is not yet eligible for GC. Make this clear in the error response. Note in the docs that the allocation will still show on the server responses.
4219,build: upgrade from Go 1.15.5 -> 1.15.6,Also updated scripts/update_golang_version.sh to handle new CircleCI file layout.
4220,Merge pull request #9584 from hashicorp/f-docs-api-job-reg-preserve-counts,docs: add PreserveCounts param to job API doc.
4221,Merge pull request #9672 from hashicorp/b-bootstrapping-unexpectedly,Don't bootstrap when module is zero
4222,add changelog,
4223,tweak bootstrap testing,
4224,build: prep for 1.0.2 development (#9687),
4225,print the actual fingerprint error instead of an unrelated (and probably nil) error,
4226,Merge pull request #9714 from goodoldneon/patch-1,Fixed typo in index.mdx
4227,Fixed typo in index.mdx,
4228,Docs/operator subpages (#9689),"  operator subpages   line wrapping, fixed "
4229,docs: Remove network_speed client config field (#9685),
4230,Remove all unused images,
4231,Remove unlinked getting started pages. These are all on Learn now,
4232,Unused old images,
4233,Unused guide images. These are now in Learn,
4234,Merge pull request #9696 from hashicorp/docs-7655-lifecycle-json,docs: added lifecycle example to JSON Jobs API docs
4235,docs: Document required name for expose=true check (#9691),
4236,docs: added lifecycle example to JSON Jobs API docs,
4237,Merge pull request #9693 from hashicorp/docs-7655-lifecycle-block,docs: more documentation for lifecycle stanza
4238,typo fixes,
4239,docs: data directory permissions,
4240,Update website/pages/docs/job-specification/lifecycle.mdx,Co-authored-by: Tim Gross link
4241,Update website/pages/docs/job-specification/lifecycle.mdx,Co-authored-by: Tim Gross link
4242,docs: more documentation for lifecycle stanza,
4243,Enumerate job statuses and types in docs,
4244,"add job register preservecounts param, update job versions response (#9676)","  add job register preservecounts param, update job versions response   include job version diffs param   update "
4245,docs: Add quota removal step to namespace apply (#9684),
4246,Merge pull request #9682 from hashicorp/docs-7795-device-plugin-api,docs: added examples of device responses to api docs
4247,"makefile: Re-scope VERBOSE=true, update build warnings (#9675)"," Set 'only' ALL_TARGETS rather than append  This is functionally no different than before, but it's more correct.  Re-scope VERBOSE=true  Previously this was only set when the OS was Linux; this was added in 805ade7d3.  Warn about unsupported OS rather than error  Also:  Only print the warning when trying to build Nomad Print correct list of supported OSes"
4248,README: Align with Consul README (#9681)," Add alt text to Nomad logo Hoist Resources Use description from nomadproject.io Getting Started -> Quick Start Add production cluster section to Quick Start Remove ""Who Uses Nomad"" Move Contributing to contributing/README.md Add link to homepage from hero image"
4249,docs: added examples of device responses to api docs,
4250,docs: clarify behavior of plugin block merging,"Although this behavior is unfortunate, we want to document the existing behavior rather than break backwards compatibility."
4251,docs: document SIGHUP handling behavior,
4252,docs: describe gossip encryption encoding requirements,
4253,docs: clarify which address configurations can include ports,
4254,Only bootstrap when module,
4255,add a failing test for unexpected bootstrapping,
4256,Merge pull request #9664 from hashicorp/b-ui/topo-viz-orphaned-allocs,UI: Quietly ignore orphaned allocs in the topo viz
4257,changelog: add missing entry from 0.12.4,
4258,Quietly ignore orphaned allocs in the topo viz,
4259,Merge pull request #9639 from hashicorp/f-gateway-task,consul/connect: enable configuring custom gateway task
4260,docs: improve gateway docs,
4261,docs: gateway task docs changes,Co-authored-by: Tim Gross link
4262,docs: gateway task docs changes,Co-authored-by: Tim Gross link
4263,docs: gateway task docs changes,Co-authored-by: Tim Gross link
4264,e2e: document some design goals,
4265,e2e: bump default version of dev cluster,
4266,e2e: move dnsmasq config into dnsmasq service unit (#9660),"Our dnsmasq configuration needs host-specific data that we can't configure in the AMI build. But configuring this in userdata leads to a race between userdata execution, docker.service startup, and dnsmasq.service startup. So rather than letting dnsmasq come up with incorrect configuration and then modifying it after the fact, do the configuration in the service's prestart, and have it kick off a Docker restart when we're done."
4267,consul/connect: enable configuring custom gateway task,"Add the ability to configure the Task used for Connect gateways, similar to how sidecar Task can be configured. The implementation here simply re-uses the sidecar_task stanza, and now gets applied whether connect.sidecar_service or connect.gateway is the thing being defined. In retrospect, connect.sidecar_task could have been more generically named like connect.task to make it a little more re-usable. Closes #9474"
4268,Merge pull request #9656 from hashicorp/docs-hcl2-tweaks-1.0.1,Update HCL2 docs for 1.0.1
4269,note that the mount flag was added in 1.0.1,
4270,Merge pull request #9657 from hashicorp/docs-update-cl,docs: move changelog entry
4271,docs: move changelog entry,
4272,"document the new /dev/disk1s5 on / (apfs, local, read-only, journaled)","devfs on /dev (devfs, local, nobrowse) /dev/disk1s1 on /System/Volumes/Data (apfs, local, journaled, nobrowse) /dev/disk1s4 on /private/var/vm (apfs, local, journaled, nobrowse) map auto_home on /System/Volumes/Data/home (autofs, automounted, nobrowse) /dev/disk2s1 on /Volumes/nRF Connect 3.6.1 (hfs, local, nodev, nosuid, read-only, noowners, quarantine, mounted by notnoop) syntax"
4273,"Revert ""docs: deactivate var-file section""",This reverts commit 4ad0a882ec5f3ced986a058b17e5199a23940b45.
4274,"Revert ""docs: remove envvar option""",This reverts commit 205a1de6f3bdf870649197a1cc6f12ec19e17b6a.
4275,Merge pull request #9654 from hashicorp/docs-1.0.1,docs: release v1.0.1
4276,docs: release v1.0.1, Update release date in changelog Update download version Update alert banner to not be so specific
4277,Merge pull request #9653 from hashicorp/docs-9625-changelog,docs: add #9625 to changelog
4278,template: trigger change_mode for dynamic secrets on restore (#9636),"When a task is restored after a client restart, the template runner will create a new lease for any dynamic secret (ex. Consul or PKI secrets engines). But because this lease is being created in the prestart hook, we don't trigger the module. This changeset uses the the existence of the task handle to detect a previously running task that's been restored, so that we can trigger the template module if the template is changed, as it will be only with dynamic secrets."
4279,Change to use frozen lockfile for UI in CI (#9652),As suggested in the CircleCI documentation: https://circleci.com/docs/2.0/yarn/
4280,docs: add #9625 to changelog,
4281,Merge pull request #9650 from hashicorp/docs-connect-cls,docs: add two connect entries to changelog
4282,docs: add two connect entries to changelog,https://github.com/hashicorp/nomad/pull/9624 https://github.com/hashicorp/nomad/pull/9611
4283,Change UI cache prefix (#9649),"Builds on the main branch have been failing, perhaps due to a corrupt cache."
4284,Remove cache fallback,Co-authored-by: Mahmood Ali link
4285,Change cache prefix,"Builds on the main branch have been failing, perhaps due to a corrupt cache."
4286,makefile: DRY out pkg targets (#9643),"This removes small differences between the targets, like the statement about what's being built. The CGO/Windows related comments were deleted as being not relevant.  See https://github.com/hashicorp/nomad/pull/9643 for context."
4287,jobspec2: decode returns error in more cases (#9613),"Previously, if decoding the job, tasks, or vault portion of the config failed, we would not return an error; it was silently ignored. This also includes a little refactor to reduce some duplication."
4288,cni: prevent NPE if no interface has sandbox field set,"When we iterate over the interfaces returned from CNI setup, we filter for one with the module field set. Ensure that if none of the interfaces has that field set that we still return an available interface."
4289,Merge pull request #9567 from hashicorp/scripts-fail-on-golang-failure,scripts: fail if golang installation fails
4290,Merge pull request #9640 from hashicorp/f-darwin-arm64,build: add build target for darwin/arm64
4291,docker: introduce a new hcl2-friendly module syntax (#9635),"Introduce a new more-block friendly syntax for specifying mounts with a new module block type with the target as label: ```hcl config {   image = ""..."" mount {     type = ""...""     target = ""target-path""     volume_options { ... }   } } ``` The main benefit here is that by module being a block, it can nest blocks and avoids the compatibility problems noted in https://github.com/hashicorp/nomad/pull/9634/files#diff-2161d829655a3a36ba2d916023e4eec125b9bd22873493c1c2e5e3f7ba92c691R128-R155 . The intention is for us to promote this module blocks and quietly deprecate the module type, while still honoring to preserve compatibility as much as we could. This addresses the issue in https://github.com/hashicorp/nomad/issues/9604 ."
4292,Debug test refactor (#9637), debug: refactor test cases debug: remove unnecessary syncbuffer resets debug: cleaned up test code per suggestions debug: clarify note on parallel testing
4293,Merge pull request #9633 from hashicorp/b-undo-429-connlimit,agent: revert use of http connlimit
4294,build: add build target for darwin/arm64,Add a build target for Apple Silicon (m1) macs. Note that Go must have been built with c4f497da6f for Nomad to work on darwin/arm64 (i.e. wait for go1.16). Closes #9408
4295,docs: more notes about hcl2 compatibility (#9634),"Make backward compatibility notes about Task Driver config options. Namely, call out the use of blocks with non-identifier attributes (like in docker systctl and storage_options) or nesting block syntax within an attribute assignment. Neither of these are valid HCL2. The solution is relatively simple: We can add = and quote the non-identifier attribute names. Co-authored-by: Tim Gross link"
4296,Merge pull request #9632 from hashicorp/b-mac-make-check,build: set linux build tag on CNI networking
4297,agent: revert use of http connlimit,"https://github.com/hashicorp/nomad/pull/9608 introduced the use of the built-in HTTP 429 response handler provided by go-connlimit. There is concern though around plausible DOS attacks that need to be addressed, so this PR reverts that functionality. It keeps a fix in the tests around the use of an HTTPS enabled client for when the server is listening on HTTPS. Previously, the tests would fail deterministically with io.EOF because that's how the TLS server terminates invalid connections. Now, the result is much less deterministic. The state of the client connection and the server socket depends on when the connection is closed and how far along the handshake was."
4298,debug: Fix node count bug from GH-9566 (#9625), debug: update test to identify bug in GH-9566 debug: range tests need fresh cmd each iteration debug: fix node count bug in GH-9566
4299,build: set linux build tag on CNI networking,"CNI network configuration is currently only supported on Linux. For now, add the linux build tag so that the deadcode linter does not trip over unused CNI stuff on macOS."
4300,Merge pull request #9630 from hashicorp/f-add-depgaurd,Add and enable depgaurd linter
4301,Bump buf check breaking tag to 1.0.0 (#9629),
4302,Merge pull request #9624 from hashicorp/b-connect-meta-regression,consul/connect: fix regression where client connect images ignored
4303,Merge pull request #9620 from hashicorp/f-remove-consul-flags,command: remove use of flag impls from consul
4304,build: add depgaurd linter and block consul flags,
4305,command: give flag-helpers a better name,
4306,consul/connect: fix regression where client connect images ignored,"Nomad v1.0.0 introduced a regression where the client configurations for module and module would be ignored despite being set. This PR restores that functionality. There was a missing layer of interpolation that needs to occur for these parameters. Since Nomad 1.0 now supports dynamic envoy versioning through the ${NOMAD_envoy_version} psuedo variable, we basically need to first interpolate ${connect.sidecar_image} => envoyproxy/envoy:v${NOMAD_envoy_version} then use Consul at runtime to resolve to a real image, e.g. envoyproxy/envoy:v${NOMAD_envoy_version} => envoyproxy/envoy:v1.16.0 Of course, if the version of Consul is too old to provide an envoy version preference, we then need to know to fallback to the old version of envoy that we used before. envoyproxy/envoy:v${NOMAD_envoy_version} => envoyproxy/envoy:v1.11.2@sha256:a7769160c9c1a55bb8d07a3b71ce5d64f72b1f665f10d81aa1581bc3cf850d09 Beyond that, we also need to continue to support jobs that set the sidecar task themselves, e.g. sidecar_task { config { image: ""custom/envoy"" } } which itself could include teh pseudo envoy version variable."
4307,"on s390x, only compile compile release for s390x (#9601)",
4308,Merge pull request #9623 from hashicorp/b-hcl2-envvar,set EnvVar variables in hcl2 parsing
4309,docs: remove envvar option,
4310,actually pass env-vars to hcl2 parsing,
4311,Events/acl events (#9595),"  fix acl event creation   allow way to access secretID without exposing it to stream   test that values are omitted test event creation test acl events payloads are pointers fix failing tests, do all security steps inside constructor   increase time   ignore empty tokens   uncomment line   changelog "
4312,command: remove use of flag impls from consul,"In a few places Nomad was using flag implementations directly from Consul, lending to Nomad's need to import consul. Replace those uses with helpers already in Nomad, and copy over the bare minimum needed to make the autopilot flags behave as they have."
4313,Merge pull request #9599 from hashicorp/changli0617-patch-1,"Highlight ""alternative to Kubernetes"""
4314,Merge pull request #9600 from hashicorp/changli0617-patch-2,Update index.jsx
4315,"Add a line break before the ""learn why"" cta on our home page",
4316,Change the features-list component to support arbitrary markup in the content field,
4317,Fix mismatched quotes in JSX strings,
4318,Merge pull request #9611 from hashicorp/b-gateway-concurrency,consul/connect: set default Envoy worker threads for gateways
4319,build(deps): bump ini from 1.3.5 to 1.3.7 in /ui,Bumps link from 1.3.5 to 1.3.7. - link - link Signed-off-by: dependabot[bot] link
4320,Move breadcrumbs objects into shared layout object (#9576),"Various page objects had breadcrumbs and breadcrumbFor within them, this moves those to the existing Layout page object that contains shared page objects."
4321,Merge pull request #9612 from hashicorp/docs-hcl2-tweaks,docs: Moe unquoting of HCL block attributes
4322,Apply suggestions from code review,Co-authored-by: Seth Hoenig link
4323,Merge pull request #9608 from hashicorp/f-go-connlimit,Use go-connlimit to ratelimit with 429 responses
4324,client: fix plumbing of testing object into helper,
4325,note environment variables needing to be valid unicode identifier,
4326,docs: deactivate var-file section,"--var-files has a bug where we don't honor it properly.  Let's remove it from docs, to be enabled for 1.0.1."
4327,docs: ensure meta keys are not quoted,
4328,consul/connect: set default Envoy worker threads for gateways,Applying the default --concurrency for gateways was missed before. Set the default Envoy concurrency to 1 for connect gateways. The same override value meta.connect.proxy_concurrency applies.
4329,unquote env attributes,
4330,Fix job recommendation test flakiness (#9591),"Instead of creating recommendations for all the jobs used across these tests, this creates a specific job with a higher group count, which reduces the likelihood of having no recommendations to 0.0001%. It was incorrect to assume that each task group would always have recommendations, since there’s a 1% chance that a task won’t have a recommendation. (10% chance for CPU and memory.) This uses the number of groups with recommendations instead."
4331,Apply some suggested fixes from staticcheck (#9598),
4332,pluginmanager: WaitForFirstFingerprint times out (#9597),"As pointed out by @tgross[1], prior to this change we would have been blocking until all managers waited for first fingerprint rather than timing out as intended. 1: https://github.com/hashicorp/nomad/pull/9590#discussion_r539534906"
4333,client: fix https test cases in client rate limits,
4334,Update index.mdx,"""Invalid argument name; Argument names must not be quoted."""
4335,Update index.jsx,"Replace a value card to show case ""2 million container challenge"""
4336,Use new go-connlimit with HTTP 429 response,This is essentially a port of Consul's similar fix Changes are: go get -u github.com/hashicorp/go-connlimit go mod vendor Use new HTTP429 handler https://github.com/hashicorp/consul/commit/20d1ea7d2d272b0d25a9b5af6ddec8748a3928aa
4337,Tweak early return website workflow (#9593)," ci: only spin up a docker engine if necessary  Halt the website-docker-image job early if no changes are detected. We halt early before spinning up the remote docker engine, as the remote docker engine step can add some delay (seconds to minutes) and is more likely to suffer circleci instability.  ci: Only run website workflow in OSS repo  Add a CircleCI conditional to avoid running website worklows on forks."
4338,Merge pull request #9586 from hashicorp/f-connect-interp,consul/connect: interpolate connect block
4339,actually honor var files (#9592),"Apparently, we missed passing VarFile argument, so var files were ignored. Fixes #9588"
4340,Add gosimple linter (#9590),
4341,circleci: Allow expanding Makefile in enterpise (#9587),"OSS no longer needs the multi-file config Makefile content, so it was removed. However, enterprise does benefit from having that around. We can allow enterprise to expand on OSS' CircleCI Makefile by adding an include directive in OSS. This will allow the Makefile to be the same on both OSS and Enterprise, so merge conflicts cannot occur."
4342,consul/connect: avoid extra copy of connect stanza while interpolating,
4343,docs: fixup changelog,Co-authored-by: Tim Gross link
4344,Merge pull request #9589 from hashicorp/f-aws-graviton,client/fingerprint/cpu: use fallback total compute value if cpu not detected
4345,client/fingerprint/cpu: use fallback total compute value if cpu not detected,"Previously, Nomad would fail to startup if the CPU fingerprinter could not detect the cpu total compute (i.e. cores * mhz). This is common on some EC2 instance types (graviton class), where the env_aws fingerprinter will override the detected CPU performance with a more accurate value anyway. Instead of crashing on startup, have Nomad use a low default for available cpu performance of 1000 ticks (e.g. 1 core * 1 GHz). This enables Nomad to get past the useless cpu fingerprinting on those EC2 instances. The crashing error message is now a log statement suggesting the setting of cpu_total_compute in client config. Fixes #7989"
4346,consul/connect: interpolate connect block,"This PR enables job submitters to use interpolation in the connect block of jobs making use of consul connect. Before, only the name of the connect service would be interpolated, and only for a few select identifiers related to the job itself (#6853). Now, all connect fields can be interpolated using the full spectrum of runtime parameters. Note that the service name is interpolated at job-submission time, and cannot make use of values known only at runtime. Fixes #7221"
4347,circleci: Remove GO_TAGS from build-binaries job (#9579),These tags default to the same value in GNUMakefile. This will also help fix a discrepancy between the build-binaries job in OSS and Ent.
4348,use concrete type helper instead of interface surfing (#9585),  use concrete type helper instead of interface surfing   wrap err 
4349,docs: add PreserveCounts param to job API doc.,
4350,Remove multi-file CircleCI config (#9571),
4351,Add gocritic to golangci-lint config (#9556),
4352,Merge pull request #9574 from hashicorp/docs-20-to-1,docs: fix cpu comment for 10->1 to 20->1
4353,docs: fix cpu comment for 10->1 to 20->1,Reported by https://github.com/hashicorp/nomad/pull/8996/files#r538702174
4354,Merge pull request #9573 from hashicorp/docs-alert-100,docs: add an announcement for 1.0
4355,return 405 on non-GET requests to /v1/event/stream (fixes #9526) (#9564),
4356,docs: add an announcement for 1.0,
4357,scheduler: Fix always-false sort func (#9547),Co-authored-by: Mahmood Ali link
4358,Merge pull request #9572 from hashicorp/docs-100-date,docs: add the release date for 1.0
4359,docs: add the release date for 1.0,
4360,Merge pull request #9569 from hashicorp/docs-100,docs: 1.0.0 download link
4361,"website: Update k8s comparison docs, ecosystem and community (#9557)","  website: add k8s vs callout to homepage   website: move resources to community   website: add k8s comparison, ecosytem to docs   website: update redirects   website: fix homepage link   website: fix sidebar data   Update website/pages/docs/nomad-vs-kubernetes/index.mdx   Co-authored-by: changli0617 link  Update website/pages/docs/nomad-vs-kubernetes/alternative.mdx  Co-authored-by: changli0617 link  Update website/pages/docs/nomad-vs-kubernetes/alternative.mdx  Co-authored-by: changli0617 link  Update website/pages/docs/nomad-vs-kubernetes/alternative.mdx  Co-authored-by: changli0617 link Co-authored-by: changli0617 link"
4362,docs: 1.0.0 download link,
4363,refactor golang scripts a bit,"Namely ensure the script fails if any step fails, only skip installing if that particular version is installed, and retry if the download fails"
4364,Update release docker image to ubuntu:18.04,So this matches the Vagrant box
4365,Remove Beta tag from 1.0 features (#9562),  docs: Remove 1.0 beta warning about HCL2.0 docs   docs: multiregion is not beta anymore either   docs: scaling isn't beta   docs: neither is events api 
4366,changelog entry for #9495,
4367,nomad operator debug changelog / doc updates,
4368,Update golang version table,
4369,Upgade links to guides,
4370,fix AgentHostRequest panic found in GH-9546 (#9554)," debug: refactor nodeclass test debug: add case to track down SIGSEGV on client to server Agent.Host RPC verify server to avoid panic on AgentHostRequest RPC call, fixes GH-9546 simplify Agent.Host RPC lookup logic"
4371,Merge pull request #9553 from hashicorp/b-ui/missing-scale-events,UI: Guard against null Meta on scale events
4372,Update containerd task driver docs. (#9550),
4373,docs: grammatical fixes in service jobspec,
4374,Test coverage for the scale event serializer,
4375,Guard against a null Meta property in the scale event API,
4376,document some hcl2 quarks (#9545),"Mainly note that block labels need to be string literals, and that decimals without a leading significant digits aren't acceptable anymore (e.g. .9 are required to be 0.9). Dynamic blocks can be used here, but feels too much of a hack, or a hammer to highlight it here, specially given the error reporting and debugging isn't so straightforward. I'd advocate internally for relaxing the restriction and allowing expressions in block labels instead. Related to https://github.com/hashicorp/nomad/issues/9522"
4377,changelog entry for #8822,
4378,docs: update autoscaling docs for the new query interface (#8917), update autoscaling docs for the new query interface update default value for query_window in scaling policy
4379,use os.ErrDeadlineExceeded in tests,
4380,Merge pull request #9541 from hashicorp/docs-cni-note-conflist,docs: note conflist extension for cni plugin configuration files
4381,docs: note conflist extension for cni plugin configuration files,
4382,Fix allocation count in CSI volumes table (#9515),"This closes #9495. As detailed in there, the collection query GET /v1/volumes?type=csi doesn’t return ReadAllocs and WriteAllocs, so the # Allocs cell was always showing 0 upon first load because it was derived from the lengths of those arrays. This uses the heretofore-ignored CurrentReaders and CurrentWriters values to calculate the total instead. The single-resource query GET /v1/volume/csi%2F:id doesn’t return CurrentReaders and CurrentWriters that absence doesn’t override the stored values when visiting an individual item. Thanks to @apollo13 for reporting this and to @tgross for the API logs and suggestion."
4383,Migrate preview deployments from Netlify to Vercel (#9471),"This adds:  a script for building and deploying the Ember UI and Storybook to   Vercel configuration for that deployment a header link to the UI to link to Storybook when built with   STORYBOOK_LINK=true  It also removes a file used to configure Netlify redirects. The Netlify setup had two “sites”: nomad-storybook and nomad-ui. I attempted to replicate that here but ran into some platform limitations with Vercel: two “projects” cannot share the same root directory without also sharing the same vercel.json that lets us specify configuration such as the rewrite needed to handle deep linking into the Ember UI. I tried having Storybook use /ui/storybook as the root directory (and adding a symbolically-linked package.json to bypass Vercel’s refusal to build without it) but that produced broken Storybook deployments. This instead combines the two projects into one (nomad-storybook-and-ui), defaults to forwarding / to /ui/, and adds the header link to the UI to navigate to Storybook. Rather than have a complex build script in the Vercel configuration UI, this delegates to a script in the repository."
4384,"fix allocation spelling error, update docs (#9527)","  fix allocation spelling error, update docs   assign TopicACLPolicy and TopicACLToken properly "
4385,Merge pull request #9520 from hashicorp/b-fix-nullchar-error-msg,core: fix typo msg used when job ID/name contains a null char.
4386,Merge pull request #9523 from hashicorp/b-improve-consul-template-dep-upgrade-detail-1.0.0,CHANGELOG: amend consul-template dep update to ref correct version.
4387,remove prerelease bug fix from GA changelog (#9524),
4388,CHANGELOG: amend consul-template dep update to ref correct version.,
4389,core: fix typo msg used when job ID/name contains a null char.,
4390,Merge pull request #9519 from hashicorp/docs-100rc1,docs: publish v1.0.0-rc1
4391,docs: publish v1.0.0-rc1,
4392,Merge pull request #9516 from hashicorp/docs-consul19,docs: clarify connect upgrade procedure
4393,docs: may->will after confirming with Consul,Consul 1.9 switched to agentless intentions which no longer require synchronous communication from Envoy to Consul.
4394,docs: clarify connect upgrade procedure,During testing we discovered old versions of Nomad and Consul seemed to prevent Envoy from accepting new connections while the Nomad agent was being upgraded.
4395,Merge pull request #9513 from hashicorp/f-e2e-upgrade-consul-more,e2e: upgrade terraform consul to 1.9.0
4396,e2e: upgrade terraform consul to 1.9.0,
4397,ensure node secret ID is not included in event stream (#9510),
4398,API: Event stream use full name instead of Eval/Alloc (#9509), use full name for events  use evaluation and allocation instead of short name   update api event stream package and shortnames   update docs   make sync; fix typo   backwards compat not from 1.0.0-beta event stream api changes   use api types instead of string   rm backwards compat note that only changed between prereleases   remove backwards incompat that only existed in prereleases 
4399,Merge pull request #9508 from hashicorp/docs-docker-windows-issues,docs: fix link to windows docker issues
4400,docs: fix link to windows docker issues,
4401,Small website updates (#9504)," systemd should be downcased containerd should be downcased spellchecking, adjust list item spacing QEMU should be upcased spelling, it's->its Fewer exclamation points; drive-by list spacing Update website/pages/docs/internals/security.mdx Namespace is not ent only now. Co-authored-by: Tim Gross link"
4402,Merge pull request #9501 from hashicorp/docs-hcl-note,added some discussion of HCL parsing context
4403,formatting fix from github-based commit,
4404,Update website/pages/docs/job-specification/hcl2/index.mdx,Co-authored-by: Michael Schurter link
4405,docker: kill signal API should include timeout context (#9502),"When the Docker driver kills as task, we send a request via the Docker API for dockerd to fire the signal. We send that signal and then block for the module waiting for the container to exit. But if the Docker API blocks, we will block indefinitely because we haven't configured the API call with the same timeout. This changeset is a minimal intervention to add the timeout to the Docker API call only when we have the module set. Future work should examine whether we should be threading contexts through other module API calls."
4406,docker: kill signal API should include timeout context,"When the Docker driver kills as task, we send a request via the Docker API for dockerd to fire the signal. We send that signal and then block for the module waiting for the container to exit. But if the Docker API blocks, we will block indefinitely because we haven't configured the API call with the same timeout. This changeset is a minimal intervention to add the timeout to the Docker API call only when we have the module set. Future work should examine whether we should be threading contexts through other module API calls."
4407,added some discussion of HCL parsing context,
4408,Merge pull request #9498 from hashicorp/f-update-e2e-cpu,env_aws: run ec2info to update ec2 info
4409,env_aws: run ec2info to update ec2 info,Use module to update the generated table of instance types. module
4410,docs: using interpolation for volumes (#9449),Expand module and module sections to describe how to use HCL2 dynamic blocks and interpolation to have finer-grained control over how allocations get volumes.
4411,Merge pull request #9494 from hashicorp/e2e-poststop-sigterm,lifecycle: update e2e test for service job with new docker signal #8932
4412,lifecycle: update e2e test for service job with new docker signal #8932,
4413,Merge pull request #9487 from hashicorp/f-connect-sidecar-concurrency,consul/connect: default envoy concurrency to 1
4414,Events switch on memdb change table instead of type to prevent duplicates (#9486)," prevent duplicate job events  when a job is updated, the job_version table is updated with a structs.Job, this caused there to be multiple job events since we are switching off the change type and not the table   test length   add table value to tests "
4415,Merge pull request #9485 from hashicorp/docs-check-restart,docs: check_restart is broken for group networks
4416,consul/connect: default envoy concurrency to 1,"Previously, every Envoy Connect sidecar would spawn as many worker threads as logical CPU cores. That is Envoy's default behavior when module is not explicitly set. Nomad now sets the concurrency flag to 1, which is sensible for the default cpu = 250 Mhz resources allocated for sidecar proxies. The concurrency value can be configured in Client configuration by setting module. Closes #9341"
4417,pass in msgType for UpsertJob (#9475),
4418,nomad operator debug - add pprof duration / csi details (#9346), debug: add pprof duration CLI argument debug: add CSI plugin details update help text with ACL requirements debug: provide ACL hints upon permission failures debug: only write file when pprof retrieve is successful debug: add helper function to clean bad characters from dynamic filenames debug: ensure files are unable to escape the capture directory
4419,docs: move agent lifecycle doc under Operations heading (#9411),
4420,docs: check_restart is broken for group networks,Add a warning about check_restart being limited to task networks and link to the relevant issue: #9176.
4421,Merge pull request #9435 from hashicorp/f-allocupdate-timer,client: always wait 200ms before sending updates
4422,"Event Stream: Track ACL changes, unsubscribe on invalidating changes (#9447)",  upsertaclpolicies   delete acl policies msgtype   upsert acl policies msgtype   delete acl tokens msgtype   acl bootstrap msgtype   wip unsubscribe on token delete test that subscriptions are closed after an ACL token has been deleted Start writing policyupdated test   update test to use before/after policy   add SubscribeWithACLCheck to run acl checks on subscribe   update rpc endpoint to use broker acl check   Add and use subscriptions.closeSubscriptionFunc   This fixes the issue of not being able to defer unlocking the mutex on the event broker in the for loop. handle acl policy updates   rpc endpoint test for terminating acl change   add comments   Co-authored-by: Kris Hicks link
4423,return potential errors from txn.Commit (#9483),
4424,docs: warn about Docker auth_soft_fail behavior,"If Docker auth helpers are used but aith fails or the image isn't found, we hard fail the task. Users may set module to fallback to the public Docker Hub on a per-job basis. But users that mix public and private images have to set module for every job using a public image if Docker auth helpers are used."
4425,Update proxy.mdx,
4426,Update reschedule.mdx,
4427,Update restart.mdx,
4428,Merge pull request #9476 from hashicorp/website-update-general-help,website: update general help guidance
4429,website: update general help guidance,
4430,Fix RPC retry logic in nomad client's rpc.go for blocking queries (#9266),
4431,Remove Managed Sinks from Nomad (#9470), Remove Managed Sinks from Nomad  Managed Sinks were a beta feature in Nomad 1.0-beta2. During the beta period it was determined that this was not a scalable approach to support community and third party sinks.   update comment   changelog 
4432,Merge pull request #9472 from hashicorp/f-connect-upstream-datacenter,consul/connect: enable setting datacenter in upstream
4433,docs: better clarify connect upstream datacenter,
4434,docs: add #9435 to changelog,
4435,consul/connect: enable setting datacenter in connect upstream,"Before, upstreams could only be defined using the default datacenter. Now, the module field can be set in a connect upstream definition, informing consul of the desire for an instance of the upstream service in the specified datacenter. The field is optional and continues to default to the local datacenter. Closes #8964"
4436,command: Fix node help error,
4437,docs: note manual jobspec parsing generally no longer required,
4438,Update migrate.mdx,
4439,docs: add sidebar title for cidrsubnets (#9469),
4440,Merge pull request #9468 from hashicorp/b-fix-hcl2-doc-typo,docs: spell preceding the normal way
4441,docs: spell preceding the normal way,
4442,Merge pull request #9454 from hashicorp/f-add-ig-demo-e2e,e2e: add e2e test for consul connect ingress gateway demo
4443,e2e: use test framework Assertions in connect tests,
4444,Add DAS namespaces toggle and fix empty card bug (#9337),"This builds on filtering to allow the optimize page to show recommendations for the active namespace vs all namespaces. If turning off the toggle causes the summary from the active card to become excluded from the filtered list, the active summary changes, as with the facets. It also includes a fix for this bug: https://github.com/hashicorp/nomad/pull/9294#pullrequestreview-527748994"
4445,Add query parameter to override Mirage scenario (#9380),
4446,Update network.mdx,
4447,Docs for HCL2 (#9322),"Add more detailed HCL2 docs, mostly lifted from Packer with tweaks for Nomad. The function docs are basically verbatim taken from Packer with basic string substitutions. I commented out some for_each details as the examples are mostly driven towards Packer resources. I'll iterate on those with better Nomad examples."
4448,Merge pull request #9459 from hashicorp/ml4-patch-3,Update ephemeral_disk.mdx
4449,Merge pull request #9460 from hashicorp/ml4-patch-4,Update group.mdx
4450,Merge pull request #9458 from hashicorp/ml4-patch-2-1,Update device.mdx
4451,Merge pull request #9457 from hashicorp/ml4-patch-1,Update csi_plugin.mdx
4452,Merge pull request #9455 from Quiq/azure-more-fingerprinting,"Add ""compute/zone"" to Azure fingerprinting"
4453,Update group.mdx,Typo
4454,Update ephemeral_disk.mdx,"Document says size is an module, but snippet shows string type."
4455,Update device.mdx,Fixed typos
4456,Update csi_plugin.mdx,typo
4457,Add compute/zone to Azure fingerprinting,
4458,e2e: add e2e test for consul connect ingress gateway demo,"Add the ingress gateway example from the noamd connect examples to the e2e Connect suite. Includes the ACLs enabled version, which means the nomad server consul acl policy will require operator=write permission."
4459,changelog entries for CSI,
4460,csi/api: populate ReadAllocs/WriteAllocs fields (#9377),"The API is missing values for module and module fields, resulting in allocation claims not being populated in the web UI. These fields mirror the fields in module. Returning a separate list of stubs for read and write would be ideal, but this can't be done without either bloating the API response with repeated full module data, or causing a panic in previous versions of the CLI. The module fields are persisted with nil values and are populated during RPC, so we'll do the same in the HTTP API and populate the module and module fields with a map of allocation IDs, but with null values. The web UI will then create its module and module fields by mapping from those IDs to the values in module, instead of flattening the map into a list."
4461,Merge pull request #9452 from hashicorp/f-e2e-print-consulacls-string,e2e: print consulacls scripts output as string
4462,e2e: print consulacls scripts output as string,"The clean up in #8908 inadvertently caused the output from the scripts involved in the Consul ACL bootstrap process to be printed as a big blob of bytes, which is slightly less useful than the text version."
4463,use comment ignores (#9448),"Use targetted ignore comments for the cases where we are bound by backward compatibility. I've left some file based linters, especially when the file is riddled with linter voilations (e.g. enum names), or if it's a property of the file (e.g. package and file names). I encountered an odd behavior related to RPC_REQUEST_RESPONSE_UNIQUE and RPC_REQUEST_STANDARD_NAME.  Apparently, if they target a module type, we must separate them into separate lines so that the ignore comment targets the type specifically."
4464,csi/ui: show Node Only for volumes when controllers aren't required (#9416),"Plugin health for controllers should show ""Node Only"" in the UI only when both conditions are true: controllers are not required, and no controllers have registered themselves (0 expected controllers). This accounts for ""monolith"" plugins which might register as both controllers and nodes but not necessarily have module because they don't implement the Controller RPC endpoints we need (this requirement was added in #7844) This changeset includes the following fixes:  Update the Plugins tab of the UI so that monolith plugins don't show ""Node   Only"" once they've registered. Add the missing ""Node Only"" logic to the Volumes tab of the UI."
4465,client: always wait 200ms before sending updates,"Always wait 200ms before calling the Node.UpdateAlloc RPC to send allocation updates to servers. Prior to this change we only reset the update ticker when an error was encountered. This meant the 200ms ticker was running while the RPC was being performed. If the RPC was slow due to network latency or server load and took >=200ms, the ticker would tick during the RPC. Then on the next loop only the select would randomly choose between the two viable cases: receive an update or fire the RPC again. If the RPC case won it would immediately loop again due to there being no updates to send. When the update chan receive is selected a single update is added to the slice. The odds are then 50/50 that the subsequent loop will send the single update instead of receiving any more updates. This could cause a couple of problems:  Since only a small number of updates are sent, the chan buffer may    fill, applying backpressure, and slowing down other client    operations. The small number of updates sent may already be stale and not    represent the current state of the allocation locally.  A risk here is that it's hard to reason about how this will interact with the 50ms batches on servers when the servers under load. A further improvement would be to completely remove the alloc update chan and instead use a mutex to build a map of alloc updates. I wanted to test the lowest risk possible change on loaded servers first before making more drastic changes."
4466,Merge pull request #9414 from hashicorp/b-tweak-buf-linter,Parameterize buf compatibility check
4467,CSI: fix transaction handling in state store (#9438),"When making updates to CSI plugins, the state store methods that have open write transactions were querying the state store using the same methods used by the CSI RPC endpoint, but these method creates their own top-level read transactions. During concurrent plugin updates (as happens when a plugin job is stopped), this can cause write skew in the plugin counts.  Refactor the CSIPlugin query methods to have an implementation method that accepts a transaction, which can be called with either a read txn or a write txn. Refactor the CSIVolume query methods to have an implementation method that accepts a transaction, which can be called with either a read txn or a write txn. CSI volumes need to be ""denormalized"" with their plugins and (optionally) allocations. Read-only RPC endpoints should take a snapshot so that we can make multiple state store method calls with a consistent view."
4468,docs: enumerate required cgroups for exec driver,
4469,honor task user when execing into raw_exec task (#9439),Fix #9210 . This update the executor so it honors the User when using nomad alloc exec. The bug was that the exec task didn't honor the init command when execing.
4470,E2E: CSI driver provisioning (#9443)," e2e/csi: wait longer for plugins to become healthy  Plugins are Docker containers, and as such sometimes we get delays in startup due to pulling from the registry and this is a source of test flakiness. Give the plugins a little longer to start up.  e2e/csi: version bump for AWS EBS plugins"
4471,nomad: try to avoid slice resizing when batching,
4472,Merge pull request #8743 from hashicorp/f-task_network_warning,Validate and document 0.12 mbits/network deprecations
4473,Events/mv structs (#9430), move structs to structs/event.go to avoid import cycle
4474,docs: update changelog with group/task network labels fix,
4475,nomad/structs: validate deprecated task.resource.network port labels,"Enable users to submit jobs that still make use of the deprecated task.resources.network stanza. Such jobs can be submitted, but will emit a warning."
4476,e2e: prevent Ubuntu startup race conditions (#9428),"The cloud-init configuration runs on boot, which can result in a race condition between that and service startup. This has caused provisioning failures because Nomad expects the userdata to have configured a host volume directory. Diagnosing this was also compounded by a warning being fired by systemd for the Nomad unit file.  Update the location of the module field to it's   post-systemd-230 location. Ensure that the weekly AMI build is up-to-date to reduce the risk of   unexpected system software changes. Move the host volume to a directory we can set up at AMI build time rather   than in userdata."
4477,api: safely access legacy MBits field,
4478,api: don't break public API,
4479,vendor: sync api,
4480,remove references to default mbits,
4481,e2e: update jobs to use new network stanza format,
4482,command: use correct port mapping syntax in examples,
4483,command: remove task network usage from init examples,
4484,mock: add default host network,
4485,nomad: update validate to check group networks for task port usage,
4486,website: add mbits field back to network docs with notice,
4487,website: add mbits and network deprecation notice,
4488,Merge pull request #9427 from hashicorp/docs-fix-cpu-allocated-unit,docs: fix nomad.client.allocs.cpu.allocated metric unit
4489,docs: fix nomad.client.allocs.cpu.allocated metric unit,
4490,docs: template signal change_mode not compatible with env,Only module will result in the template environment variables being updated in the task. Clarify the behavior of the unsupported options.
4491,Merge pull request #9419 from hashicorp/api-event-stream-index,events: API event stream client should the index flag
4492,docs: add missing command documentation (#9415), module was missing the general options section module was missing a page in the docs entirely  Co-authored-by: Luiz Aoqui link
4493,api: Event().Stream() should use the index parameter,
4494,events: e2e test that API client honors the index flag,
4495,docs: describe required ACLs for all commands,
4496,docs: clarify default signal for raw_exec on Windows,
4497,Merge pull request #9407 from hashicorp/docs-0129-backports,Add backports to changelog and 0.12.9 to website
4498,docs: move telemetry under operations,"Create a new ""Operating Nomad"" section of the docs where we can put reference material for operators that doesn't quite fit in either configuration file / command line documentation or a step-by-step Learn Guide. Pre-populate this with the existing telemetry docs and some links out to the Learn Guide sections."
4499,lint protobuf files,
4500,Parameterize buf compatibility target,"Parameterize it so we can arbitrary target other versions, if we are doing some manual checking, specially in the beginning when we may want to validate compatibilities for skip release upgrades. Also, introduce module target so we can run buf linter without the rest. use beta"
4501,docs: avoid the regression in 0.12.[78],"The suggest version, 0.12.7, includes regressions that are best avoided so steer users to 0.12.9."
4502,docs: update website to 0.12.9,
4503,"docs: add 0.12.9, 0.11.8, and 0.10.9 to changelog","upstream fix: #9383 backport PRs: #9391, #9402, and #9405"
4504,command: remove -namespace from help options when not applicable,
4505,docs: add task_token_ttl default,See https://github.com/hashicorp/nomad/blob/v0.12.7/nomad/vault.go#L36-L39
4506,docs: template behavior warnings, vault secrets named with module characters cannot be read by module   due to limitations in golang's template rendering engine. environment variables are not modified in running tasks if module is set.
4507,docs: remove -namespace option from commands when not applicable,
4508,docs/help: -no-color does not apply to alloc logs content,"The module command does not remove terminal escape sequences for color from the log outputs of a task. Clarify that the standard module flag, which does apply to Nomad's error responses from module, does not apply to the log output."
4509,docs: fix some markdown escaping errors,
4510,docs: expand artifact getter options,"Adds an example of using HTTP Basic Auth, git options, and using HCL2 syntax to encode an SSH key from file."
4511,docs: make dispatch payload size limit unambiguous,
4512,Merge pull request #9383 from hashicorp/b-template-escape,client: fix interpolation in template source
4513,e2e: test template path interpolation,
4514,client: skip broken test and fix assertion,
4515,Merge pull request #9384 from hashicorp/docs-artifact-bug,docs: document artifact bug #6929
4516,CSI: fix struct copying errors (#9239),"The CSIVolume struct ""denormalizes"" allocations when it's first queried from the state store. The CSIVolumeByID method on the state store copies the volume before denormalizing so that we don't end up with unexpected changes. The copying has some subtle bugs that meant that Allocations (as well as Topologies and MountOptions) were not getting copied when expected. Also, ensure we never write allocations attached to volumes to the state store during claims."
4517,Merge pull request #9387 from hashicorp/docs-9386-alloc-job-api,document module field
4518,"document module field, to address issue from #9386",
4519,client: fix interpolation in template source,"While Nomad v0.12.8 fixed module use in module, interpolating these variables in module caused a path escape error. Why not apply the destination fix to source? The destination fix forces destination to always be relative to the task directory. This makes sense for the destination as a destination outside the task directory would be unreachable by the task. There's no reason to ever render a template outside the task directory. (Using module does allow destinations to escape the task directory if module. That's just awkward and unsafe enough I hope no one uses it.) There is a reason to source a template outside a task directory. At least if there weren't then I can't think of why we implemented module. So v0.12.8 left the behavior of module the more straightforward ""Interpolate and validate."" However, since outside of module every other driver uses absolute paths for module interpolation, this means those variables are unusable unless module is set. The Fix The variables are now interpolated as relative paths only for the purpose of rendering templates. This is an unfortunate special case, but reflects the fact that the templates view of the filesystem is completely different (unconstrainted) vs the task's view (chrooted). Arguably the values of these variables should be context-specific. I think it's more reasonable to think of the ""hack"" as templating running uncontainerized than that giving templates different paths is a hack. TODO  [ ] E2E tests [ ] Job validation may still be broken and prevent my fix from       working?  raw_exec module is actually broken a different way as exercised by tests in this commit. I think we should probably remove these tests and fix that in a followup PR/release, but I wanted to leave them in for the initial review and discussion. Since non-containerized source paths are broken anyway, perhaps there's another solution to this entire problem I'm overlooking?"
4520,docs: document artifact bug #6929,
4521,"doc: Simplify ""Contributing"" section of README (#9378)","This is mostly switching paragraphs to bullets to make following instructions easier. In doing so, this also adds instructions to install things that were previously assumed to be installed, like Vagrant, Virtualbox, and Consul. It also removes the expectation that Nomad is cloned to $GOPATH, as that is not necessary."
4522,Merge pull request #9363 from 42wim/fixcni,cni: use correct interface for netStatus
4523,proto: Switch to using buf (#9308),This replaces all usage of module with module. See module for more.
4524,Merge pull request #9368 from hashicorp/b-9367-duped-ports,fix duplication of ports in module
4525,changelog for #9368,
4526,vendor: sync api/tasks for poststop hook,
4527,Merge pull request #9356 from hashicorp/b-bridgefp-upgrade-path,scheduler: enable upgrade path for bridge network finger print
4528,Merge pull request #9372 from hashicorp/f-docs-move-ruby-sdk-unsupported,docs: move Ruby SDK to unsupported listing.
4529,csi: alloc status -verbose should query volume request 'source' (#9354),"The module command returns a 404 from CSI volumes because the volume mount block in the task points back to the module block. So using the module field to query is the ""name"" as seen in the jobspec, and not the name of the volume that we need for querying. Show both the job-specific name and the volume ID in the resulting output, which clarifies the difference between the two fields and is more consistent with the web UI."
4530,docs: Add new Autoscaling Azure VMSS target plugin detail. (#9186),Co-authored-by: Luiz Aoqui link
4531,docs: move Ruby SDK to unsupported listing.,
4532,"updated alloc_endpoint to mutate a copy of the returned allocation, instead of the instance in the state store",
4533,documenting test for #9367,
4534,Merge pull request #9365 from hashicorp/website-to-beta3,website: update downloads page to beta3
4535,website: update downloads page to beta3,
4536,Use correct interface for netStatus,"CNI plugins can return multiple interfaces, eg the bridge plugin. We need the interface with the sandbox."
4537,ui/csi: fix links to volume IDs (#9355),
4538,scheduler: enable upgrade path for bridge network finger print,"This PR enables users of Nomad < 0.12 to upgrade to Nomad 0.12 and beyond. Nomad 0.12 introduced a network fingerprinter for bridge networks, which is a contstraint checked for if bridge network is being used. If users upgrade servers first as is recommended, suddenly no clients running older versions of Nomad will satisfy the bridge network resource constraint. Instead, this change only enforces the constraint if the Nomad client version is also >= 0.12. Closes #8423"
4539,Merge pull request #9352 from hashicorp/f-artifact-headers,jobspec: add support for headers in artifact stanza
4540,hclfmt digitalocean demo to pass linting (#9353),
4541,jobspec: add support for headers in artifact stanza,"This PR adds the ability to set HTTP headers when downloading an artifact from an module or module resource. The implementation in module is such that a new module must be created for each artifact that sets headers (as opposed to conveniently setting headers per-request). This PR maintains the memoization of the default Getter objects, creating new ones only for artifacts where headers are set. Closes #9306"
4542,demo: CSI example for DigitalOcean block storage (#9351),
4543,release: infer node version (#9336),"Avoids setting the node version in the release Dockerfile, by using an alias.  This allows us to update the node version in one file only. Co-authored-by: Michael Schurter link"
4544,e2e: CSI test should detect un-deregisterable volumes (#9343),Assert that deregistering a volume works without errors following a volume reap. Use CLI helpers where feasible to exercise CSI command line. Dump plugin allocation logs on deregistration failures for debugging purposes.
4545,nomad/structs: fix noop breaks (#9348),
4546,Merge pull request #9345 from hashicorp/go-1.15.5,build: upgrade from Go 1.15.4 to 1.15.5
4547,docs: mention upgrade to Go 1.15.5,
4548,build: upgrade from Go 1.15.4 to 1.15.5,"Despite being a security release for Go, we do not believe Nomad is impacted."
4549,Merge pull request #8807 from hashicorp/f-ui/lifecycle-poststop,UI: Task lifecycle poststop phase.
4550,Fix flaky lifecycle chart tests,
4551,"Revert ""Temporarily remove poststop from the UI""",This reverts commit f8a505ea2f9def2a7ce7a93e6d0529e1b5da4894.
4552,Merge pull request #9340 from hashicorp/changelog-poststop,changelog: added poststop to task lifecycle
4553,Merge pull request #9339 from hashicorp/b-hcl2-job-tweaks,Restrict HCL special casing of map[string]interface{} fields
4554,changelog: added poststop to task lifecycle,
4555,appease deadcode linter,
4556,Restrict HCL special casing of map[string]interface{} fields,"The HCL2 parser needs to apply special parsing tweaks so it can parse the task config the same way as HCL1. Particularly, it needs to reinterprets module fields and blocks that appear when attributes are expected. This commit restricts the special casing to the Job fields, and ignore module and module block."
4557,nomad operator debug - add client node filtering arguments (#9331),  operator debug - add client node filtering arguments   add WaitForClient helper function   use RPC in WaitForClient to avoid unnecessary imports   guard against nil values   move initialization up and shorten test duration   cleanup nodeLookupFailCount logic   only display max node notice if we actually tried to capture nodes 
4558,lifecycle: add poststop hook (#8194),
4559,Merge pull request #9338 from hashicorp/d-update-client-subnet,docs: update brige network subnet docs
4560,docs: update brige network subnet docs,"Update the default value for module in docs to match the new value from 99742f2665. Was module, is now module. Fixes #9316"
4561,Merge pull request #9334 from hashicorp/b-pin-node-version,ui: Pin ui node version
4562,Merge pull request #9335 from hashicorp/docs-assorted-changes-20201112,Assorted changelog and docs changes
4563,changelog: Update 0.12.8 and backported releases,
4564,tweak 1.0 changelog,
4565,driver/docker: mark cpusets as beta,"The cpuset_cpus flag may be subject to change when we revise cpu management. Also, it's only available in 1.0.0 Beta."
4566,ui: Pin ui node version,
4567,Merge pull request #9332 from hashicorp/b-ui/flaky-das-filter-tests,UI: Add missing feature fixture that was introduced while DAS filtering was being implemented
4568,Add missing feature fixture that was introduced while this feature was being developed,
4569,Merge pull request #9330 from hashicorp/b-connect-registration-bad-tags,consul: prevent re-registration churn by correctly comparing connect sidecar tags
4570,consul: prevent re-registration churn by correctly comparing sidecar tags,"Previously, connect sidecars would be re-registered with consul every cycle of Nomad's reconciliation loop around Consul service registrations. This is because part of the comparison used module on []string objects, which returns false when one object is module and the other is module. Unforunately, this was always the case, and every Connect sidecar service would be re-registered on every iteration, which happens every 30 seconds."
4571,Merge pull request #8291 from shishir-a412ed/cpusets,Add cpuset_cpus to docker driver.
4572,Merge pull request #9294 from hashicorp/f-ui/das-filter-toggle,UI: Add DAS summary table filtering
4573,Merge pull request #9327 from hashicorp/b-fix-rec-cli,recs cli: fixed bad composition
4574,structs: canonicalize allocatedtaskresources to populate shared ports (#9309),
4575,raw_exec: don't use cgroups when no_cgroup is set  (#9328),"When raw_exec is configured with link, raw_exec shouldn't attempt to create a cgroup. Prior to this change, we accidentally always required freezer cgroup to do stats PID tracking. We already have the proper fallback in place for metrics, so only need to ensure that we don't create a cgroup for the task. Fixes https://github.com/hashicorp/nomad/issues/8565"
4576,recs cli: fixed bad composition,
4577,Fix review comments.,
4578,Fix circleci.,
4579,Add cpuset_cpus to docker driver.,
4580,Merge pull request #9325 from hashicorp/docs-changelog-9311,changelog addition and fixes
4581,added changelog entry for 9311 and re-ordered changelog entries to respect secondary short-to-long ordering,
4582,Merge pull request #9311 from jeromegn/allow-empty-devices,Don't ignore nil devices in plugin fingerprint
4583,csi: Postrun hook should not change mode (#9323),"The unpublish workflow requires that we know the mode (RW vs RO) if we want to unpublish the node. Update the hook and the Unpublish RPC so that we mark the claim for release in a new state but leave the mode alone. This fixes a bug where RO claims were failing node unpublish. The core job GC doesn't know the mode, but we don't need it for that workflow, so add a mode specifically for GC; the volumewatcher uses this as a sentinel to check whether claims (with their specific RW vs RO modes) need to be claimed."
4584,Merge pull request #9317 from hashicorp/f-recommendations-cli-autocomplete,recommendations CLI: autocomplete support
4585,Merge pull request #9312 from hashicorp/b-9227-scaling-policy-filtering,use both job and type query on scaling policy list endpoint
4586,docker: disallow volume mounts from host by default (#9321),"The default behavior for module is intended to be module, but the HCL schema defaults to module if the value is unset. Set the default literal value to module. Additionally, Docker driver mounts of type ""volume"" (but not ""bind"") are not being properly sandboxed with that setting. Disable Docker mounts with type ""volume"" entirely whenever the module flag is set to false. Note this is unrelated to the module feature, which is constrained to preconfigured host volumes or whatever is mounted by a CSI plugin. This changeset includes updates to unit tests that should have been failing under the documented behavior but were not."
4587,Merge branch 'master' into b-9227-scaling-policy-filtering,
4588,enables audit log on full-cluster (#9315),
4589,changelog for enterprise bug (#9320),
4590,changelog,
4591,cli: updated recommendation commands and test to remove duplication of autocompletion code,
4592,"auto-complete for recommendations CLI, plus OSS components of recommendations prefix search",
4593,Merge pull request #9310 from hashicorp/f-warn-against-hcl2,Custom message when job file is HCL2 incompatible
4594,fix #9227: use both job and type query on scaling policy list endpoint,
4595,Don't ignore nil devices in plugin fingerprint,"Even if a plugin sends back an empty module, it's transformed to module during the RPC. Our custom device plugin is returning empty module very often. Our temporary fix is to send a dummy module if the slice is empty. This has the effect of never triggering the ""first fingerprint"" and therefore timing out after 50s. In turn, this made our node exceed its hearbeat grace period when restarting it, revoking all vault tokens for its allocations, causing a restart of all our allocations because the token couldn't be renewed. Removing the logic for module does not appear to affect the functionality of the function."
4596,Custom message when job file is HCL2 incompatible,Use a custom message when the job file is a valid HCL1 but no longer valid under HCL 2 syntax.
4597,Move page object component to reflect page order,
4598,Remove unnecessary uses of createList,
4599,Merge pull request #9305 from hashicorp/go-1.15.4,go: update from 1.15.1 to 1.15.4
4600,Merge pull request #9304 from hashicorp/b-legacy-executors-are-executors,Legacy executors are executors after all
4601,update changelog,[ci skip]
4602,protos: Update .proto files not to use Go package name (#9301),"Previously, it was required that you module to be able to build protos, as the protoc invocation added an include directive that pointed to module, which is how dependent protos were discovered. As Nomad now uses Go modules, it won't necessarily be cloned to module. (Additionally, if you had go-gotten Nomad at some point, protoc compilation would have possibly used the wrong protos, as those wouldn't necessarily be the most up-to-date ones.) This change modifies the proto files and the module invocation to handle discovering dependent protos via protoc plugin modifier statements that are specific to the protoc plugin being used. In this change, module was run to recompile the protos, which results in changes only to the gzipped module."
4603,docs: add go upgrade to changelog,
4604,go: update from 1.15.1 to 1.15.4,1.15.5 is due in a couple days but we may release before then.
4605,Remove unused action,This is a remnant of another approach I tried when rerouting /optimize when the filter excluded all summaries.
4606,Add redirect to parent when filter excludes all,
4607,Legacy executors are executors after all,"This fixes a bug where pre-0.9 executors fail to recover after an upgrade. The bug is that legacyExecutorWrappers didn't get updated with ExecStreaming function, and thus failed to implement the Executor function. Sadly, this meant that all recovery attempts fail, as the runtime check in https://github.com/hashicorp/nomad/blob/b312aacbc961dfd976b6a402d22d80b45176a962/drivers/shared/executor/utils.go#L103-L110 ."
4608,Remove Netlify config,
4609,Merge pull request #9299 from hashicorp/b-detect-unloaded-kmod,client/fingerprint: detect unloaded dynamic bridge kernel module
4610,Merge pull request #9298 from hashicorp/f-hcl2-localsvars,HCL2: Variables and Locals
4611,use a constructor to initialize job config,
4612,clarify test,
4613,clarify variable references,
4614,Fix proceed to use filtered summaries,
4615,Merge pull request #9300 from hashicorp/changelog-for-job-scale-bug,add CHANGELOG entry for #9296
4616,add CHANGELOG entry for #9296,
4617,docs: add changelog entry,
4618,Merge pull request #9296 from hashicorp/b-remove-namespace-from-scale-request,Remove Namespace field from JobScaleRequest
4619,Update variable interpolation tests,
4620,Start accepting input variable files as CLI arguments,
4621,Parse variable files,
4622,Start using the new jobspec2 API,
4623,Restructure Variables and Locals,"This reimplements the handling of Variables and Locals in HCL2 config. This change supports declaring variables and locals, with defaults."
4624,client/fingerprint: detect unloaded dynamic bridge kernel module,"In Nomad v0.12.0, the client added additional fingerprinting around the presense of the bridge kernel module. The fingerprinter only checked in module which is a list of loaded modules. In some cases, the bridge kernel module is builtin rather than dynamically loaded. The fix for that case is in #8721. However we were still missing the case where the bridge module is dynamically loaded, but not yet loaded during the startup of the Nomad agent. In this case the fingerprinter would believe the bridge module was unavailable when really it gets loaded on demand. This PR now has the fingerprinter scan the kernel module dependency file, which will contain an entry for the bridge module even if it is not yet loaded. In summary, the client now looks for the bridge kernel module in  - /proc/modules  - /lib/modules//modules.builtin  - /lib/modules//modules.dep Closes #8423"
4625,copy variables files from Packer,
4626,Add check that active summary isn’t filtered out,
4627,e2e: Windows provisioning improvements (#9246),"Small changes to the Windows 2016 Packer build for debuggability of provisioning:  improve verbosity of powershell error handling remove unused ""tools"" installation use ssh communicator for Packer to improve Packer build times and eliminate   deprecated winrm remote access (unavailable from current macOS)"
4628,remove Namespace field from JobScaleRequest,
4629,Add no matches empty state,
4630,Add count to search field placeholder,
4631,Add summary-filtering field,This only filters by slug for now… 🧐
4632,Remove copypasted to-be-unused query parameters,
4633,Add facets for recommendation summaries,This is mostly copied from the jobs list. One uncertainty is what to do when changing a facet causes the currently- active card to be excluded from the filtered list 🤔
4634,Document correct default nomad port (#9290),
4635,re-run make sync from earlier event_stream changes (#9291),
4636,append custom path to custom_config_files (#9289),  append custom path to custom_config_files   remove config_path variable 
4637,docs: add recommendation CLI documentation. (#9288),Co-authored-by: Chris Baker link
4638,Merge pull request #9272 from hashicorp/f-recommendation-cli,cli: add recommendation commands.
4639,api/testutil: Use fast fingerprint timeout in dev mode tests (#9285),
4640,Fix job detail crash when recommendations off (#9269),"Without this, visiting any job detail page on Nomad OSS would crash with an error like this: Error: Ember Data Request GET /v1/recommendations?job=ping%F0%9F%A5%B3&namespace=default returned a 404 Payload (text/xml) The problem was twofold.   The recommendation ability didn’t include anything about checking whether the feature was present. This adds a request to /v1/operator/license on application load to determine which features are present and store them in the system service. The ability now looks for 'Dynamic Application Sizing' in that feature list.   Second, I didn’t check permissions at all in the job-fetching or job detail templates. "
4641,cli: add recommendation commands.,"Adds new CLI commands for applying, dismissing and detailing Nomad recommendations under a new top level recommendation command."
4642,Merge pull request #9271 from hashicorp/b-ui/missing-warning-in-stories,UI: Update lingering instances of the old warning icon in stories
4643,Merge pull request #9270 from hashicorp/f-ui/topo-viz-help-states,UI: Topo viz error state and no data polling notice
4644,events: Use single eventsFromChanges func (#9281),
4645,Merge pull request #9278 from hashicorp/b-9268-all-namespace-allocs-acl,fix ACL bugs in listing allocs across all namespaces
4646,ar/groupservice: remove drivernetwork (#9233),  ar/groupservice: remove drivernetwork   consul: allow host address_mode to accept raw port numbers   consul: fix logic for blank address 
4647,Fix handling of deleted change (#9280),
4648,Api/event stream payload values (#9277), Get concrete types out of dynamic payload  wip pull out value setting to func  Add TestEventSTream_SetPayloadValue  Add more assertions use alias type in unmarshalJSON to handle payload rawmessage shorten unmarshal and remove anonymous wrap struct   use map structure and helper functions to return concrete types   ensure times are properly handled   update test name   put all decode logic in a single function   Co-authored-by: Kris Hicks link
4649,Fix typo in batch processing use case (#9184),I believe there’s a typo where “workloads” was changed to “jobs” but the original word wasn’t removed. Or maybe it’s the other way around. But currently there is an orphaned one-word sentence.
4650,Bump HSM version (#9264),
4651,updated Allocation.List to properly handle ACL checking for namespace=*,
4652,Refactor GenericEventsFromChanges (#9279),
4653,documenting test for #9268,
4654,make sync to update event stream api (#9274),
4655,Update Cinder CSI example docs (#9267),
4656,Show dismissable no live updating notice on the topology page,
4657,Update lingering instances of the old warning icon in stories,
4658,Show a partial view notice when ACLs are enabled and the mgmt token isn't being used,
4659,Update URL for namespace globbing,
4660,Forbidden state for the topo viz,
4661,Add DAS subroute and copy button (#9201),"This continues iteration on the DAS UI by adding the ability to directly navigate to a recommendation summary by (namespaced) slug and a copy button for the direct navigation link. It includes a change to CopyButton allowing it to take a block that’s rendered within the button. It also changes some instances of multi-relationship traversal to use in-summary attributes, such as summary.jobNamespace instead of summary.job.namespace.name."
4662,Change node id search to prefix-only (#9244),"This test has been periodically failing, like here: https://app.circleci.com/pipelines/github/hashicorp/nomad/12879/workflows/40c0445c-b244-4a04-a5a3-d9685b656c94/jobs/114751/tests The failure was because sometimes the first node contains the beginning of the ”otherNode” id somewhere within its id. It seems less useful to match within the node, so this changes id search to only match at the beginning of the id."
4663,Merge pull request #9074 from Liraim/fix_download,"ui: ""View Raw File"" download using JS instead simple link"
4664,Merge pull request #9256 from hashicorp/ui/upgrade-node,Use Node v12 for UI development
4665,Use Node v12 for UI development,
4666,docs: internals documentation for alloc filesystem (#9195),"We recently added documentation disambiguating the terminology of the allocation/task working directories. This changeset adds an internals document that describes in more detail exactly what does into the allocation working directory, how this interacts with the filesystem isolation provided by task drivers, and how this interacts with features like module and module. Co-authored-by: Charlie Voiselle link"
4667,Merge pull request #9255 from hashicorp/d-missing-example-comma,Add missing comma in help-text example.
4668,Merge pull request #9260 from hashicorp/b-fixup-scaling-policy-list-help,cli: update scaling policy list help to include job flag.
4669,docs: update scaling policy list docs to detail all flags.,
4670,cli: update scaling policy list help to include job flag.,
4671,Add missing comma in help-text example.,@krishicks spotted this while playing with command.
4672,Merge pull request #9240 from hashicorp/f-ui/topo-viz-tooltips,UI: Topo Viz Tooltips
4673,Merge pull request #9253 from hashicorp/b-ui/raw-blue,UI: Fix the raw 'blue' in recommendation cards to use '$blue'
4674,Fix the raw 'blue' in recommendation cards to use '$blue',
4675,Replace visualViewport with the more compatible scrollX and scrollY,
4676,Add tooltips to the topo viz,
4677,Update monitor func not to take a prefix (#9251),"The only user of monitor(evalID, true) was command/eval_status, and eval_status had a duplicate of the prefix-handling code inside it, so in all cases the complete evalID was being passed to monitor. Given that, we can remove the prefix code from command/monitor, and remove the boolean arg."
4678,Merge pull request #9247 from hashicorp/docs-node-12.19,website: require Node v12
4679,Merge pull request #9205 from hashicorp/b-gh-7703,Repurpose dispatch-job capability to dispatch periodic jobs
4680,downgrade inline svg,
4681,fix an issue where dependencies didn't match and would cause a nextjs render error,
4682,Add event sink API and CLI commands (#9226),Co-authored-by: Drew Bailey link
4683,update docs and changelog,
4684,First draft of HCLv2 docs (#9218),"This is a first draft of HCLv2 docs - I added the details under hcl2 doc with some minimal info highlighting the hcl2 introductions. As a longer term strategy, we'll want to mimic the Packer HCL docs structure that details all the blocks and allowed expressions/functions in greater details. However, given that the exact functions and templating syntax is still somewhat influx, I opt to push that to another time."
4685,vercel: explicitly set version to v12,"v12 is currently the default now, https://vercel.com/docs/runtimes#official-runtimes/node-js/node-js-version, but we'd rather be explicit about the version we use and ensure that it matches local development."
4686,website: require Node v12,"Start using Node.js v12.19.0, the most recent active LTS that is supported by Vercel: https://vercel.com/docs/runtimes#official-runtimes/node-js/node-js-version . The docs now require String.prototype.matchAll, that's part of ES2020 support, and is not available on Node.js 10.x."
4687,Merge pull request #9243 from hashicorp/docs-changelog-9225,CHANGELOG entry for #9225
4688,Use Dockerhub Mirror. (#9220),Dockerhub is going to rate limit unauthenticated pulls. Use our HashiCorp internal mirror for builds run through CircleCI. Co-authored-by: Mahmood Ali link
4689,Event sink manager improvements (#9206)," Improve managed sink run loop and reloading  resetCh no longer needed length of buffer equal to count of items, not count of events in each item update equality fn name, pr feedback clean up sink manager sink creation   update test to reflect changes   bad editor find and replace   pr feedback "
4690,Merge pull request #9187 from barakb/master,A non-blocking Kotlin SDK
4691,CHANGELOG entry for #9225,changelog entry for https://github.com/hashicorp/nomad/pull/9225
4692,Fix for Java fingerprinter on macOS (#9225),Use alternative test for macOS JVM with /usr/libexec/java_home
4693,Add type=button to View Raw Data buttons.,
4694,Change to button.,Rewrite tests to check that proper urls was called.
4695,Make the style-string property glimmer safe,
4696,Add new is-static chart tooltip variant and decouple from charts,
4697,Add handling for empty state flaky test edge case (#9234),"This test occasionally fails because the random generation sometimes produces a node with no allocations, such as here: https://app.circleci.com/pipelines/github/hashicorp/nomad/12735/workflows/9a407f87-0383-48ee-8e41-7e6e351dce28/jobs/113130/steps This is a temporary measure to solve it without trying to force the generated data to always have an allocation."
4698,docs: remove outdated reference to template.allow_host_source (#9237),"The module configuration was not operable, leading to the recent security patch in 0.12.6. We forgot to update this piece of the documentation referring to the correct configuration value."
4699,Update subscription filter func (#9232),This adds support for specifying a global topic match for a specific key.
4700,Merge pull request #9223 from hashicorp/f-ui/topo-viz-params,UI: Add namespace and task states query params to the topology route
4701,Add namespace and task states query params to the topo viz route,
4702,E2E: switch packer build files to HCL2 (#9219),"Build configuration files need comments, and JSON is also just the worst, isn't it? Upgrade our E2E packer configs to use the new HCL2 syntax."
4703,e2e: provide precedence for version variables (#9216),"The module, module, and module variables for the Nomad provisioning module assumed that only one would be set. By having the override each other with an explicit precedence, it makes it easier to avoid problems with Terraform's implicit variables behavior. Set the expected default values in the module to avoid shadowing by any future changes to the module file. Update the Makefile to put the module and module in the correct order."
4704,Fix Firefox positioning of chart resource label (#9209),"alignment-baseline appears to be ignored in Firefox, but dominant-baseline works. This also moves the anchor into CSS."
4705,Add DAS UI code from enterprise (#9192),This is a few combined iterations on the DAS feature.
4706,E2E: AMI software version bumps and cleanup (#9213), remove unused vault installation from Windows AMI match Windows and Linux Consul versions bump AMI base Nomad to current stable
4707,Merge pull request #9181 from hashicorp/ui/update-warning-icon,UI: Update the warning icon
4708,update dependencies to apply mdx-enhanced build cache fix,
4709,e2e: set default version for dev cluster (#9208),
4710,e2e: reduce risk of flaky Ubuntu AMI build (#9207),"The base Ubuntu AMI modifies apt sources during cloud-init. But the Packer build can potentially start the setup script before that work is done, resulting in errors trying to install base system dependencies like module. Delay the setup long enough to lose the race with cloud-init."
4711,e2e: use more specific names for OS/distros (#9204),"We intend to expand the nightly E2E test to cover multiple distros and platforms. Change the naming structure for ""Linux client"" to the more precise ""Ubuntu Bionic"", and ""Windows"" to ""Windows 2016"" to make it easier to add new targets without additional refactoring."
4712,Merge pull request #9203 from hashicorp/f-das-oss-merge,merge of open-source components of DAS
4713,added new policy capabilities for recommendations API,"state store: call-out to generic update of job recommendations from job update method recommendations API work, and http endpoint errors for OSS support for scaling polices in task block of job spec add query filters for ScalingPolicy list endpoint command: nomad scaling policy list: added -job and -type"
4714,e2e: make dev cluster the default Terraform vars file (#9202),"Most of the time that a human is running the TF provisioning, they want the ""dev cluster"" which is going to deploy an OSS sha, with fewer targets and configuration alternatives. But the default module is the nightly E2E run. Because the nightly run is automated, there's no reason we can't have it pick a non-default module file and have the default be the dev cluster."
4715,Fix typo in Cloudflare capitalization (#9199),
4716,dispatch-job capability to dispatch periodic jobs,
4717,Merge pull request #9193 from hashicorp/f-dynamic-app-sizing-oss-docs-merge,docs: DAS related documentation updates
4718,Merge pull request #9194 from hashicorp/f-autoscaler-policy-eval-agent-docs,docs: update Autoscaler agent docs with policy_eval config params.
4719,Merge pull request #9191 from hashicorp/docs-1.0-beta2,docs: v1.0.0-beta2 released!
4720,docs: v1.0.0-beta2 released!,"Calling it ""Beta"" even though it's ""beta2"" since ""beta1"" was never published."
4721,Merge pull request #9162 from hashicorp/f-gh-8648-docs,docs: add new job scale and scaling-events CLI website docs.
4722,docs: update autoscaling policy to detail DAS policy syntax.,
4723,docs: update autoscaling overview to include DAS overview.,
4724,docs: add DAS Nomad target plugin to Autoscaling docs.,
4725,docs: add DAS strategy plugin detail to autoscaling docs. (#479),Co-authored-by: Chris Baker link
4726,docs: updated enterprise page with DAS feature,
4727,docs: update scaling policy API docs based on DAS update.,Includes removal of the beta tag from the scaling polices API endpoints. \o/
4728,docs: add recommendations API documentation.,
4729,event sink api docs (#9190),
4730,website: make build logs public,this allows the ability for outside contributors to view website build logs
4731,Merge pull request #1 from barakb/barakb-kotlin-sdk,Update libraries-and-sdks.mdx
4732,Update libraries-and-sdks.mdx,"Add a third-party library, nomad-client is a fully non-blocking Kotlin nomad client with minimal dependencies."
4733,docs: update Autoscaler agent docs with policy_eval config params.,
4734,docs: add new scaling command website documentation. (#9143),Co-authored-by: Chris Baker link
4735,Remove no longer used warning icon svg,
4736,Replace all instances of the warning icon with the Structure alert-triangle icon,
4737,Update puppeteer by a lot,
4738,Send events to EventSinks (#9171), Process to send events to configured sinks  This PR adds a SinkManager to a server which is responsible for managing managed sinks. Managed sinks subscribe to the event broker and send events to a sink writer (webhook). When changes to the eventstore are made the sinkmanager and managed sink are responsible for reloading or starting a new managed sink.  periodically check in sink progress to raft  Save progress on the last successfully sent index to raft. This allows a managed sink to resume close to where it left off in the event of a lost server or leadership change dereference eventsink so we can accurately use the watchch When using a pointer to eventsink struct it was updated immediately and our reload logic would not trigger
4739,Merge pull request #9178 from hashicorp/b-hclv2-scaling-policy,Fix HCLv2 parser discrepancies
4740,hclv2: handle block labels,
4741,hclv2: special case attributes with map values,HCLv1 special case map assignment: module is parsed as module
4742,floats always parsed as float64,
4743,Refactor handling of blocks as attr,
4744,hclv2 tests: test complex config configuration,
4745,List all available icons in a story.,"This is like the same as using svg-jar, right?"
4746,New all-icons helper that's really only meant for development use,"This returns an array of all icons. As the comment suggests, it's because the SVGs file can't be imported in stories since it is generated as part of the Ember project."
4747,Merge pull request #9179 from hashicorp/f-pin-a8m_tree,deps: pin a8m/tree to specific hash
4748,deps: pin a8m/tree to specific hash,
4749,Merge pull request #9166 from mobiltracker/master,Display class in client details
4750,Merge pull request #9167 from hashicorp/f-ui/topo-viz-refinements,UI: topo viz refinements
4751,Merge pull request #9172 from hashicorp/b-ui/logs-for-fails,UI: Always show the file browser for allocations and tasks.
4752,Merge pull request #9173 from hashicorp/f-ui/show-version,UI: Show the nomad agent version of the agent the UI is served from
4753,Display class in client details,
4754,Merge pull request #9174 from hashicorp/f-bump-website-nomad-version,website: bump default version to 0.12.7.
4755,Fix command typo of vault token create (#9169),
4756,website: bump default version to 0.12.7.,
4757,Show the nomad agent version of the agent the UI is served from,
4758,Always show the file browser for allocations and tasks.,"Before, we'd show a helpful error message when a task isn't running instead of erroring in a generic way. Turns out when an alloc is terminal but reachable, the filesystem is left behind so we were hiding it. Now it is always shown and in the event that something errors, it'll either be generic, or--more commonly--a 404 of the allocation."
4759,Make alloc association lines conditional on alloc count relative to node count,
4760,Redo column widths on the topology page.,Now the info panel has a fixed width and the TopoViz will display as a single column if the TopoViz column is too narrow for two columns.
4761,Reset inline styles on flex-masonry elements when columns is set to 1,
4762,Truncate text in the topo viz info panel,
4763,Highlight starting allocations with a blue tint,
4764,Limit the topo viz to only pending and running allocs,Failed allocs immediately vacate their allocated resources which results in inaccurate distributions of allocations on a client.
4765,changelog entry for #8967 (#9164),
4766,event sink crud operation api (#9155), network sink rpc/api plumbing  state store methods and restore upsert sink test get sink delete sink event sink list and tests go generate new msg types validate sink on upsert  go generate
4767,Merge pull request #9135 from hashicorp/f-namespaces,core: open source namespaces
4768,Merge pull request #9156 from hashicorp/pruett.alertbanner-exp,Document new module prop for AlertBanner
4769,Document new module prop for AlertBanner,
4770,Add NOMAD_JOB_ID and NOMAD_JOB_PAERENT_ID env variables (#8967),Beforehand tasks and field replacements did not have access to the unique ID of their job or its parent. This adds this information as new environment variables.
4771,docs: add regression warning for GH-9148 to upgrade guide (#9157), docs: add regression warning for GH-9148 to upgrade guide changelog entry
4772,"Revert ""e2e: fix destination of templates in VaultSecrets test (#9146)"" (#9163)",This reverts commit 8aed53c177aea024d4f24d1fbb4d6e0881f04eab.
4773,docs: add new job scale and scaling-events CLI website docs.,
4774,docs: namespaces are oss in Nomad 1.0,
4775,Update generate_msgtypes.sh now that iota is gone,
4776,core: open source namespaces,
4777,artifact/template: make destination path absolute inside taskdir (#9149),"Prior to Nomad 0.12.5, you could use module as the module and module because we would always append the destination to the task working directory. In the recent security patch we treated the module absolute path as valid if it didn't escape the working directory, but this breaks backwards compatibility and interpolation of module fields. This changeset partially reverts the behavior so that we always append the destination, but we also perform the escape check on that new destination after interpolation so the security hole is closed. Also, ConsulTemplate test should exercise interpolation"
4778,Add logged Faker seed when none is set in tests (#9140),"This will hopefully make it easier to reproduce test failures that happen intermittently, especially in CI."
4779,Merge pull request #9142 from hashicorp/f-hclv2-2.3,Support HCLv2 for Nomad jobs
4780,e2e: fix destination of templates in VaultSecrets test (#9146),"The module environment variable is rendered as module, which prior to the recent security patch would unintentionally escape the file sandbox and get dropped in a directory named module where the Nomad client binary was running. The module test was accidentally relying on this behavior and that causes the test to fail."
4781,remove event durability (#9147), remove event durability  temporarily removing go-memdb event durability until a new strategy is developed on how to best handled increased durability needs   drop events table schema and state store methods   fix neweventbuffer invocations 
4782,address review feedback,
4783,Update job/plan documentation (#9145),Updated to reflect plan expects the job definition as JSON object and not as the string form of the JSON
4784,Don't parse the server-set fields of the job struct,
4785,csi: prevent in-use plugin GC from blocking volume GC (#9141),"During CSI plugin GC, we don't return an error if the volume is in use, because this is not an error condition. If we were to return an error during a module, we would not continue on to GC volumes. But check for the specific error message fails if the GC is performed on a worker rather than on the leader, due to RPC forwarding wrapping the error message. Use a less specific test so that we don't return an error."
4786,api: update /render api to parse hclv2,
4787,cli: use HCLv2 parser,"Also, fallback to using HCLv1."
4788,Update vendored libraries,
4789,Add hclv2 parser,
4790,bump website version to 0.12.6,
4791,upgrade guide documentation,
4792,changelog entry,
4793,artifact/template: prevent file sandbox escapes,"Ensure that the client honors the client configuration for the module field when validating the jobspec's module parameter, and not just with consul-template's own module function. Prevent interpolated module, module, and module fields from escaping file sandbox."
4794,hclv1: tweak HCLv1 tests,"This ensures that gatway ReadOnly key is tested.  Also, update the hclv1 test-fixtures to be hclv1 compliant."
4795,api: parse service gateway name,Adding gateway name eases HCLv2 parsing. This field is only used for parsing the job and is ignored for any other pruposes
4796,Tag Job spec with HCLv2 tags,
4797,e2e: path fixes for local_binary uploads (#9137),"When uploading a local binary for provisioning, the location that we pass into the provisioning script needs to be where we uploaded it to, not the source on our laptop. Also, the null_resource for uploading needs to read in the private key, not its path."
4798,changelog entry for #9093 (#9132),
4799,Implement 'batch mode' for persisting allocations on the client. (#9093),"Fixes #9047, see problem details there. As a solution, we use BoltDB's 'Batch' mode that combines multiple parallel writes into small number of transactions. See https://github.com/boltdb/bolt#batch-read-write-transactions for more information."
4800,Merge pull request #9130 from hashicorp/b-canarymeta-interpolation-tests,consul: add tests for meta/canarymeta interpolation
4801,docs: update changelog for canary meta,
4802,client: add tests around meta and canarymeta interpolation,"Expanding on #9096, add tests for making sure service.Meta and service.CanaryMeta are interpolated from environment variables."
4803,Add interpolation on service canarymeta,
4804,Merge pull request #9127 from josemaia/patch-2,Remove limitation that has been fixed
4805,Remove logo spin for prefers-reduced-motion (#9128),Spinning is one of the triggers mentioned on this page: https://webkit.org/blog/7551/responsive-design-for-motion/ Thanks to @fivetanley for mentioning that this exists.
4806,Merge pull request #9118 from hashicorp/f-use-upstream-gopsutil-again,deps: use upstream gopsutil once more
4807,Remove limitation that has been fixed,"Issue #6459 has been fixed for a while, but the docs still point to it as a limitation"
4808,adds two base event stream e2e tests (#9126), adds two base event stream e2e tests  test evaluation filter keys are included  Apply suggestions from code review  Co-authored-by: Tim Gross link  gc aftereach  Co-authored-by: Tim Gross link
4809,Merge pull request #9119 from hashicorp/f-update-gomod-1.15,build: update gomod go version
4810,update tree tool to pass lint-go (#9125), update module tool to pass lint-go bump module to go1.15
4811,Events/msgtype cleanup (#9117)," use msgtype in upsert node  adds message type to signature for upsert node, update tests, remove placeholder method   UpsertAllocs msg type test setup   use upsertallocs with msg type in signature   update test usage of delete node delete placeholder msgtype method  add msgtype to upsert evals signature, update test call sites with test setup msg type  handle snapshot upsert eval outside of FSM and ignore eval event remove placeholder upsertevalsmsgtype handle job plan rpc and prevent event creation for plan msgtype cleanup upsertnodeevents updatenodedrain msgtype msg type 0 is a node registration event, so set the default  to the ignore type   fix named import   fix signature ordering on upsertnode to match "
4812,Merge pull request #9109 from benbuzbee/gopath-proto,Use GOPATH/src explicitly in proto build target
4813,build: update gomod go version,Keep go.mod go version up to date with the version of Go used to build Nomad.
4814,deps: use upstream gopsutil once more,"The PR we needed https://github.com/shirou/gopsutil/pull/889 has been merged upstream, which means we can use upstream rather than our fork of psutil."
4815,docs: clarify task working directories (#9098),"The terms task directory and allocation directory are used throughout the documentation but these directories are not the same as the module and module locations. This is confusing when trying to use the module and module stanzas, especially when trying to use a destination outside the Nomad-mounted directories for Docker and similar drivers. This changeset introduces ""allocation working directory"" to mean the location on disk where the various directories and artifacts are staged, and ""task working directory"" for the task. Clarify how specific task drivers interact with the task working directory. Co-authored-by: Charlie Voiselle link"
4816,Update website/pages/docs/drivers/external/lxc.mdx,Co-authored-by: Charlie Voiselle link
4817,Merge pull request #9105 from hashicorp/d/topo-changelog,Changelog entry for topo viz
4818,improve language for LXC volumes,
4819,clarify raw_exec doesn't have filesystem isolation,
4820,Events/docs (#9100),  /v1/event/stream docs   events sidebar   wip server config   make ids match   fix typo   add server config opts   Update website/pages/api-docs/events.mdx   Co-authored-by: Seth Hoenig link  Update website/pages/api-docs/events.mdx  Co-authored-by: Seth Hoenig link  address feedback  Co-authored-by: Seth Hoenig link
4821,Apply suggestions from code review,Co-authored-by: Charlie Voiselle link
4822,fix anchor links,
4823,docs: clarify task working directories,"The terms task directory and allocation directory are used throughout the documentation but these directories are not the same as the module and module locations. This is confusing when trying to use the module and module stanzas, especially when trying to use a destination outside the Nomad-mounted directories for Docker and similar drivers. This changeset introduces ""allocation working directory"" to mean the location on disk where the various directories and artifacts are staged, and ""task working directory"" for the task. Clarify how specific task drivers interact with the task working directory."
4824,e2e: add reporting to flaky spread test (#9115),"The spread test is infrequently flaky and it's hard to extract what's actually happening. If the test fails, dump all the allocation metrics so that we can debug the behavior."
4825,e2e: fix flaky TaskEventsTest (#9114),"Assert that we get at least N task events, rather than exactly N. When a task within an allocation dies, a sibling task can get an Allocation Unhealthy event after it's also killed, even though it's not the origin of the event."
4826,e2e: networking test job needs to outlast assert (#9113),"The module utility asserts that a job is running for 5s, but with a sleep time of 5s, the networking job can race with that check. Sleeping for a longer period should guarantee that we're running long enough to pass the assert. Also constrains the job to Linux because our Windows test targets don't yet support Docker (LCOW), and expand the set of DCs we can safely land on."
4827,Merge pull request #9112 from sahiljambhekar/patch-1,Remove Nomad-spark reference from use-cases.mdx
4828,Remove Nomad-spark reference from use-cases.mdx,Removed ref to link based on  https://github.com/hashicorp/nomad-spark/commit/2c6092a2a6df6236282d2777e7de4a11c76f7cd6
4829,Merge pull request #9108 from hashicorp/rm-special-node-drain-event,remove special node drain event type
4830,Update loading spinner to be logo-based (#9106),"Thanks to @mikehobi, whose work here this is adapted from: https://icons8.com/cssload/en/3d-loaders"
4831,Use GOPATH/src explicitly in proto build target,"-I ../../.. is meant to navigate from module to module This is fine but it assumes a few things about how the dev has setup nomad, which is also fine if that is the expected dev environment, however the module is not as explicit as ""GOPATH/src"" and it would also enable a few more scenarios so it seems strictly better to me. Random example: nomad is a subrepo of ours, but with this change we can symlink from GOPATH/src/github.com/hashicorp/nomad and module will work."
4832,Merge pull request #9107 from hashicorp/event-cfg-positive,event buffer size and durable count must be non negative
4833,remove special node drain event type,rely on standardized events instead of special node drain event
4834,event buffer size and durable count must be non negative,
4835,Set env var (#9103),
4836,Consul with CNI and host_network addresses (#9095),  consul: advertise cni and multi host interface addresses   structs: add service/check address_mode validation   ar/groupservices: fetch networkstatus at hook runtime   ar/groupservice: nil check network status getter before calling   consul: comment network status can be nil 
4837,Changelog entry for topo viz,
4838,changelog entry for Docker config image_delay fix (#9104),
4839,Merge pull request #9077 from hashicorp/f-ui/topo-viz,UI: Topology Visualization
4840,Typo,
4841,Work around Safari's lack of text transform support,
4842,Factor out the common sum aggregator used in the topology controller,
4843,Remove the scenarios I didn't need/didn't get to,
4844,Describe the glimmer-factory better including the motive,
4845,Reset the standard environment values,
4846,Treat legend term pairs as single wrapping elements,
4847,Update HSM version w/ waypoint (#9102),
4848,docker: image_delay default missing without gc stanza (#9101),"In the Docker driver plugin config for garbage collection, the module field was missing from the default we set if the entire module stanza is missing. This results in a default of 0s and immediate GC of Docker images. Expanded docker gc config test fields."
4849,Merge pull request #9094 from hashicorp/f-1.0,s/0.13/1.0/g
4850,vendor: update go-getter and x/net (#9099),"Update go-getter to the latest release now that hashicorp/go-getter#256 is merged. Also, pick up a xz CVE fix that go-getter merged in hashicorp/go-getter#279 ."
4851,Enforce bounds on MaxQueryTime (#9064),The MaxQueryTime value used in QueryOptions.HasTimedOut() can be set to an invalid value that would throw off how RPC requests are retried. This fix uses the same logic that enforces the MaxQueryTime bounds in the blockingRPC() call.
4852,Some light topology acceptance tests,
4853,Unit and integration tests for TopoViz component,
4854,Test coverage for TopoViz::Datacenter,
4855,Remove temp reloading of nodes in the TopoViz component,
4856,Update scenarios to use new resources code,
4857,Adjust topo viz controller to new resource code,
4858,Unit test for for GiB in format-bytes,
4859,Update topo viz code to use new alloc/node resources pattern,
4860,Migrate to the new resources properties for allocs and nodes,
4861,Test coverage for TopoViz::Node,
4862,FlexMasonry integration tests,
4863,More information about clients in the info panel,
4864,Filter total alloc count by only scheduled allocs,
4865,Add icons to denote draining or ineligibility of clients,
4866,Label empty clients in the topo viz chart,
4867,Improved curves for allocation associations,
4868,Fix a re-render bug with flexmasonry,
4869,Make the topo viz denser when there are >50 nodes,"By hiding node details and making nodes interactive instead, we can pack more allocations on a screen."
4870,Conditionally use the FlexMasonry layout for datacenters within TopoViz,
4871,Apply FlexMasonry to the TopoViz component,
4872,New FlexMasonry component implements a masonry layout using flexbox,
4873,Second attempt at a masonry layout,
4874,A better loading screen for the topo viz while nodes load,
4875,Connect the memory and cpu rectangles,
4876,Refactor topo viz to do as much computation upfront & use faster data structures,"Now all data loading happens in the TopoViz component as well as computation of resource proportions. Allocation selection state is also managed centrally uses a dedicated structure indexed by group key (job id and task group name). This way allocations don't need to be scanned at the node level, which is O(n) at the best (assuming no ember overhead on recomputes)."
4877,Make the alloc select render path more efficient by not needlessly recomputing data,
4878,Add more variety to the node heights,
4879,CSS Grid based masonry layout,"TBH, it's buggy and I don't like it."
4880,Medium scale topo scenario,
4881,Updated alloc and cluster details on topo page,
4882,Guard against undefined denominators,
4883,Associate sibling allocations by drawing lines,
4884,"Super rough allocation details, needs some style love",
4885,Add cluster details to the topology page,
4886,Touch up topo viz interactions,
4887,Fleshing out the first prototype of the topology visualization,
4888,Tweak topo scenario,
4889,Start click interaction for topo viz allocs,
4890,Fix factory bug that made it so pending allocs had no resources,
4891,Prototype of the topo viz," Plot all datacenters For each datacenter, plot all nodes For each node, plot all allocations by memory and cpu For empty nodes, highlight the emptiness When hovering over allocations, give them visual focus"
4892,Quick window resize modifier,
4893,Add ember modifiers addon,
4894,Scaffold topo viz components,
4895,Small cluster example scenario for the topo viz,
4896,Scaffold a new topology page,
4897,Merge pull request #9084 from hashicorp/f-gh-9083-docs,docs: update website and changelog for GH-9083
4898,Merge pull request #9083 from hashicorp/b-fix-enterprise-config-merge,agent: fix enterprise config overlay merging.
4899,Merge pull request #9092 from hashicorp/fix_robots_txt_format,Fix robots.txt to disallow indexing of all paths
4900,s/0.13/1.0/g,1.0 here we come!
4901,Merge pull request #9055 from hashicorp/f-9017-resources,"api: add field filters to /v1/{allocations,nodes}"
4902,Fix robots.txt to disallow indexing of all paths,
4903,unify boolean parameter parsing,
4904,"Metrics gotemplate support, debug bundle features (#9067)","  add goroutine text profiles to nomad operator debug   add server-id=all to nomad operator debug   fix bug from changing metrics from string to []byte   Add function to return MetricsSummary struct, metrics gotemplate support   fix bug resolving 'server-id=all' when no servers are available   add url to operator_debug tests   removed test section which is used for future operator_debug.go changes   separate metrics from operator, use only structs from go-metrics   ensure parent directories are created as needed   add suggested comments for text debug pprof   move check down to where it is used   add WaitForFiles helper function to wait for multiple files to exist   compact metrics check   Co-authored-by: Drew Bailey link  fix github's silly apply suggestion  Co-authored-by: Drew Bailey link"
4905,ci: make split between e2e and integration tests explicit (#9091),"Currently we compile (but don't run) the e2e tests as part of module, which is skipped for branches named module. Move this check into the module job. Split out the vault compatibility integration check as its own makefile target for clarity."
4906,Merge pull request #9013 from hashicorp/event-stream,Event stream
4907,event stream changelog,
4908,[Website] Bump HSM version (#9090),  Bump HSM version on website   Updated pkg 
4909,"filter on additional filter keys, remove switch statement duplication","properly wire up durable event count move newline responsibility moves newline creation from NDJson to the http handler, json stream only encodes and sends now ignore snapshot restore if broker is disabled enable dev mode to access event steam without acl use mapping instead of switch use pointers for config sizes, remove unused ttl, simplify closed conn logic"
4910,docs: document #9055,
4911,"api: add field filters to /v1/{allocations,nodes}",Fixes #9017 The ?resources=true query parameter includes resources in the object stub listings. Specifically:  For module both the module and   module field are included. For module the module field is   included.  The ?task_states=false query parameter removes TaskStates from /v1/allocations responses. (By default TaskStates are included.)
4912,namespace filtering,
4913,handle txn returning error,
4914,Add EvictCallbackFn to handle removing entries from go-memdb when they,"are removed from the event buffer. Wire up event buffer size config, use pointers for structs.Events instead of copying."
4915,rehydrate event publisher on snapshot restore,address pr feedback
4916,go-memdb v1.3.0,
4917,event durability count and cfg,
4918,"use Events to wrap index and events, store in events table",
4919,"writetxn can return error, add alloc and job generic events. Add events",table for durability
4920,wire up enable_event_publisher,
4921,api comments,
4922,Events/eval alloc events (#9012), generic eval update event  first pass at alloc client update events  api/event client
4923,Events/deployment events (#9004)," Node Drain events and Node Events (#8980)  Deployment status updates handle deployment status updates (paused, failed, resume) deployment alloc health generate events from apply plan result txn err check, slim down deployment event one ndjson line per index   consolidate down to node event + type   fix UpdateDeploymentAllocHealth test invocations   fix test "
4924,Event Stream API/RPC (#8947),This Commit adds an /v1/events/stream endpoint to stream events from. The stream framer has been updated to include a SendFull method which does not fragment the data between multiple frames. This essentially treats the stream framer as a envelope to adhere to the stream framer interface in the UI. If the module query parameter is omitted events will be streamed as newline delimted JSON.
4925,Events/event source node (#8918)," Node Register/Deregister event sourcing  example upsert node with context fill in writetxnwithctx ctx passing to handle event type creation, wip test node deregistration event drop Node from registration event  node batch deregistration"
4926,Events/cfg enable publisher (#8916),  only enable publisher based on config   add default prune tick   back out state abandon changes on fsm close 
4927,abandon current state on server shutdown,
4928,Event Buffer Implemenation,"adds an event buffer to hold events from raft changes. update events to use event buffer fix append call provide way to prune buffer items after TTL event publisher tests basic publish test wire up max item ttl rename package to stream, cleanup exploratory work subscription filtering subscription plumbing allow subscribers to consume events, handle closing subscriptions back out old exploratory ctx work fix lint remove unused ctx bits add a few comments fix test stop publisher on abandon"
4929,Merge pull request #9089 from hashicorp/b-explicit-rune,fix go 1.15 pickiness
4930,e2e: eliminate race condition causing rescheduling test flake (#9085),"The autorevert test checks for reverted allocations to be placed and running before checking the deployment status, but the deployment can be completed and marked ""successful"" before we check it for ""running"" status. Instead, just wait for it to be marked ""successful"" and assert we have the expected count of deployment statuses."
4931,e2e: use AMI filter for Ubuntu packer image (#9086),"Instead of hard-coding the base AMI for our Packer image for Ubuntu, use the latest from Canonical so that we always have their current kernel patches."
4932,fix go 1.15 pickiness,
4933,e2e/networking: use correct dc (#9088),
4934,Merge pull request #9087 from hashicorp/docs-more-cl,docs: more connect changelog updates
4935,docs: more connect changelog updates,
4936,Use latest AMI for Ubuntu Xenial based on search (#9076),"Also, remove public share for ami build."
4937,e2e: add flag to opt-in to creating EBS/EFS volumes (#9082),"For everyday developer use, we don't need volumes for testing CSI. Providing a flag to opt-in speeds up deploying dev clusters and slightly reduces infra costs. Skip CSI test if missing volume specs."
4938,docs: update configuration to detail ent difference.,
4939,changelog: add entry for #9083,
4940,E2E: vault secrets (#9081), rename vault API compatibility test for clarity exercise vault secrets lease renewal
4941,agent: fix enterprise config overlay merging.,
4942,Merge pull request #9080 from hashicorp/f-remove-deprecated-metrics,removed backwards-compatible/untagged metrics deprecated in 0.7
4943,updated changelog for 9080,
4944,removed backwards-compatible/untagged metrics deprecated in 0.7,
4945,Change htmlSafe prototype calls to imports (#9075),
4946,Merge pull request #8945 from hashicorp/f-auto-sidecar,consul/connect: dynamically select envoy sidecar at runtime
4947,consul/connect: dynamically select envoy sidecar at runtime,"As newer versions of Consul are released, the minimum version of Envoy it supports as a sidecar proxy also gets bumped. Starting with the upcoming Consul v1.9.X series, Envoy v1.11.X will no longer be supported. Current versions of Nomad hardcode a version of Envoy v1.11.2 to be used as the default implementation of Connect sidecar proxy. This PR introduces a change such that each Nomad Client will query its local Consul for a list of Envoy proxies that it supports (https://github.com/hashicorp/consul/pull/8545) and then launch the Connect sidecar proxy task using the latest supported version of Envoy. If the module API component is not available from Consul, Nomad will fallback to the old version of Envoy supported by old versions of Consul. Setting the meta configuration option module or setting the module stanza will take precedence as is the current behavior for sidecar proxies. Setting the meta configuration option module will take precedence as is the current behavior for connect gateways. module and module may make use of the special module variable interpolation, which resolves to the newest version of Envoy supported by the Consul agent. Addresses #8585 #7665"
4948,docs: inclusive language configuration changes (#9069),
4949,Merge pull request #9038 from hashicorp/f-ec2-table,env_aws: get ec2 cpu perf data from AWS API
4950,docs: tweak changelog ordering,
4951,"""View Raw File"" download using JS instead simple link",Use fetch API to download file so we can:  - send Token in headers  - assign filename to download
4952,Allow job Version to start at non-zero value (#9071),"Stop coercing version of new job to 0 in the state_store, so that we can add regions to a multi-region deployment. Send new version, rather than existing version, to MRD to accomodate version-choosing logic changes in ENT. Co-authored-by: Chris Baker link"
4953,client: add NetworkStatus to Allocation (#8657),
4954,use allow/deny instead of the colored alternatives (#9019),Signed-off-by: Yoan Blanc link
4955,docs: fix link in docker driver docs (#9066),
4956,[Website] Add new HashiStackMenu (#9042),  Add new HashiStackMenu   Bump version   Bump HSM version and rm meganav styles 
4957,csi: volumewatcher only needs one pass to collect past claims,"If a volume GC and a module command land concurrently, we can end up with multiple claims without an allocation, which results in extra no-op work when finding claims to collect as past claims."
4958,csi: remove stray TODO comment,This item was completed in #8626
4959,csi: fix incorrect comment on csi_hook context lifetime,
4960,csi: allow for volume detach to work with gc'd nodes (#9057),"When we try to prefix match the module node ID argument, the node may have been already GC'd. The volume unpublish workflow gracefully handles this case so that we can free the claim. So make a best effort to find a node ID among the volume's claimed allocations, or otherwise just use the node ID we've been given by the user as-is."
4961,docs: show distinct_hosts constraint for CSI plugins (#9052),"CSI plugins with the same plugin ID and type (controller, node, monolith) will collide on a host, both in the communication socket and in the dynamic plugin registry. Until this can be fixed, leave notice to operators in the documentation."
4962,docs: fix linter typos in docs,
4963,env_aws: fixup test case node attr detection,
4964,Merge pull request #9048 from hashicorp/ro.docs-html-redirect-catchall,docs: Update redirects to use a broader catch-all for routes ending in .html
4965,env_aws: get ec2 cpu perf data from AWS API,"Previously, Nomad was using a hand-made lookup table for looking up EC2 CPU performance characteristics (core count + speed = ticks). This data was incomplete and incorrect depending on region. The AWS API has the correct data but requires API keys to use (i.e. should not be queried directly from Nomad). This change introduces a lookup table generated by a small command line tool in Nomad's tools module which uses the Amazon AWS API. Running the tool requires AWS_* environment variables set.   $ # in nomad/tools/cpuinfo   $ go run . Going forward, Nomad can incorporate regeneration of the lookup table somewhere in the CI pipeline so that we remain up-to-date on the latest offerings from EC2. Fixes #7830"
4966,csi: loosen ValidateVolumeCapability requirements (#9049),"The CSI specification for module says that we shall ""reconcile successful capability-validation responses by comparing the validated capabilities with those that it had originally requested"" but leaves the details of that reconcilation unspecified. This API is not implemented in Kubernetes, so controller plugins don't have a real-world implementation to verify their behavior against. We have found that CSI plugins in the wild may return ""successful"" but incomplete module responses, so we can't require that all capabilities we expect have been validated, only that the ones that have been validated match. This appears to violate the CSI specification but until that's been resolved in upstream we have to loosen our validation requirements. The tradeoff is that we're more likely to have runtime errors during module instead of at the time of volume registration."
4967,Update redirects to use a broader catch-all for routes ending in .html,
4968,csi: validate mount options during volume registration (#9044),"Volumes using attachment mode module use the CSI filesystem API when they're mounted, and can be passed mount options. But module mode volumes don't have this option. When RPCs are made to plugins, we are silently dropping the mount options we don't expect to see, but this results in a poor operator experience when the mount options aren't honored. This changeset makes passing mount options to a module volume a validation error."
4969,docs: CSI mount_options are available only for filesystem vols (#9043),"The CSI specification allows only the module attachment mode to have mount options. The module mode is left ""intentionally empty, for now"" in the protocol. We should be validating against this problem, but our documentation also had it backwards. Also adds missing mount_options on group volume."
4970,Merge pull request #9036 from hashicorp/ro.docs-vercel-migration,Update docs site to deploy to Vercel instead of Netlify
4971,Update docs site to deploy to Vercel instead of Netlify,
4972,csi: allow volume detach to take a node ID prefix (#9041),Fixes a bug where the module command would not accept a node ID prefix instead of a full node ID. The volume ID is already prefix matched server-side.
4973,csi: allow more than 1 writer claim for multi-writer mode (#9040),Fixes a bug where CSI volumes with the module access mode were using the same logic as module to determine whether the volume had writer claims available for scheduling. Extends CSI claim endpoint test to exercise multi-reader and make sure module is exercised for multi-writer in feasibility test.
4974,Merge pull request #9039 from hashicorp/f-update-aws-sdk-go,deps: update aws-sdk-go for ec2metadata bugfix
4975,deps: update aws-sdk-go for ec2metadata bugfix,Newer versions of aws-sdk-go contain a bugfix for retrieving region vs availability-zone information.
4976,Merge pull request #9037 from hashicorp/f-changelog-entries-9023-9025,changelog: add entries for #9023 and #9025
4977,Merge pull request #9023 from hashicorp/f-gh-8648,cli: add scale and scaling-events commands to job cmd.
4978,Merge pull request #9034 from hashicorp/dmay-debug-metrics,Add metrics command / output to debug bundle
4979,added comment to operator metrics function,
4980,changelog: add entries for #9023 and #9025,
4981,Merge pull request #9033 from pierreca/verify-remove-checks,Do not double-remove checks removed by Consul
4982,metrics return bytes instead of string for more flexibility,
4983,update deprecated syntax per GH-9027,
4984,sync vendored modules,
4985,make sync to align vendor/ with go.mod (#9032),
4986,Merge pull request #9025 from hashicorp/f-gh-8649,cli: add policy list and info to new scaling cmd.
4987,cli: ensure scaling policy target doesn't have trailing comma,
4988,cli: add scale and scaling-events commands to job cmd.,This adds the ability to scale Nomad jobs and view scaling events via the CLI.
4989,Merge pull request #9027 from hashicorp/f-gh-9026,cli: move tests to use NewMockUi func.
4990,Add metrics command / output to debug bundle,
4991,Do not double-remove checks removed by Consul,"When deregistering a service, consul also deregisters the associated checks. The current state keeps track of all services and all checks separately and deregisters them in sequence, which leads, whether during syncs or shutdowns, to check deregistrations happening twice and failing the second time (generating errors in logs) This fix includes: - a fix to the sync logic that just pulls the checks after the services have been synced - a fix to the shutdown mechanism that gets an updated list of checks after deregistering the services, so that we get a cleaner check deregistration process."
4992,Merge pull request #9029 from hashicorp/b-tgs-updates,consul/connect: trigger update as necessary on connect changes
4993,Merge pull request #9020 from hashicorp/b-8796-i-do-not-want-no-null-chars,"job, task group, and task IDs should not allow null characters"
4994,consul/connect: trigger update as necessary on connect changes,"This PR fixes a long standing bug where submitting jobs with changes to connect services would not trigger updates as expected. Previously, service blocks were not considered as sources of destructive updates since they could be synced with consul non-destructively. With Connect, task group services that have changes to their connect block or to the service port should be destructive, since the network plumbing of the alloc is going to need updating. Fixes #8596 #7991 Non-destructive half in #7192"
4995,"updated docs and validation to further prohibit null chars in region, datacenter, and job name",
4996,updated api tests wrt backwards compat on null chars in IDs,
4997,updated job validate to refute job/group/task IDs containing null characters,updated CHANGELOG and upgrade guide
4998,"documenting tests around null characters in job id, task group name, and task name",
4999,Merge pull request #9008 from luhhujbb/doc-portmap,[doc] fix deprecated port_map example
5000,changelog entry for Consul segment fingerprint (#9015),
5001,e2e: extend ConsulTemplate test and fix flakiness (#8997),"Add service discovery integration to the existing consul-template E2E test, and verify both service and key updates force re-rendering. Fixes flakiness by using the longer default wait config we use elsewhere. Removes our last direct dependency on gomega."
5002,Merge pull request #8991 from hashicorp/ro.docs-formatting,docs: Format docs website code and mdx
5003,cli: move tests to use NewMockUi func.,
5004,e2e: bootstrap vault and provision Nomad with vault tokens (#9010),"Provisions vault with the policies described in the Nomad Vault integration guide, and drops a configuration file for Nomad vault server configuration with its token. The vault root token is exposed to the E2E runner so that tests can write additional policies to vault."
5005,cli: add policy list and info to new scaling cmd.,This adds the ability to detail scaling policies via the CLI.
5006,Merge pull request #8998 from hashicorp/keygen-32-bytes,Use 32-byte key for gossip encryption to enable AES-256
5007,fingerprint: changed unique.platform.azure.hostname to unique.platform.azure.name (#9016),
5008,Add consul segment fingerprint (#7214),
5009,docs: add Consul policy for Consul Namespace support (#9014),Co-authored-by: Seth Hoenig link
5010,Update docker.mdx (#8913),
5011,configure nomad cluster to use a Consul Namespace [Consul Enterprise] (#8849),
5012,Merge pull request #9009 from hashicorp/d-docker-signal-docs,"docs: document docker signal fix, add tests"
5013,Format docs website code and mdx,
5014,Fix panic in test due to the agent's logger not being initialized yet,So a null logger is used to avoid the problem.
5015,"docs: document docker signal fix, add tests",This PR adds a version specific upgrade note about the docker stop signal behavior. Also adds test for the signal logic in docker driver. Closes #8932 which was fixed in #8933
5016,[doc] fix deprecated port_map example,
5017,e2e: tfvars.dev file must override default tfvars file (#9005),The module flag for loading variables into Terraform overlays the default variables file if present. This means that variables that are set in the default variables file will take precedence if the overlay file does not have them set. Set module and module to module in the dev cluster.
5018,update consul-template to v0.25.1 (#8988),
5019,Merge pull request #9003 from hashicorp/b-tests-vagrant-20200930,Tests: fix some tests for Ubuntu 18.04
5020,Fix other usages of initKeyring func to use logger as third argument,
5021,Log AES-128 and AES-192 key sizes during keyring initialization,
5022,Fix docs on API for volume detaching (#9002),module produces an API call containing the UUID as part of the query string. This is the only way the API accepts the request correctly - if you pass it in the payload you get module
5023,tests: use system path,"On host with systemd-resolved, we copy /run/systemd/resolve/resolv.conf actually."
5024,Compare to the correct host network setting,"In systemd-resolved hosts with no DNS customizations, the docker driver DNS setting should be compared to /run/systemd/resolve/resolv.conf while exec/java drivers should be compared to /etc/resolv.conf. When system-resolved is enabled, /etc/resolv.conf is a stub that points to 127.0.0.53. Docker avoids this stub because this address isn't accessible from the container.  The exec/java drivers that don't create network isolations use the stub though in the default configuration."
5025,tests: copy permissions when copying files,"On the failover path, copy the permission bits (a.k.a. file mode), specially the execution bit."
5026,tests: ignore empty cgroup,My latest Vagrant box contains an empty cgroup name that isn't used for isolation: module
5027,changelog: azure fingerprint (#9000),
5028,client: added azure fingerprinting support (#8979),
5029,Update nomad operator keygen example command in docs,
5030,Fix operator keygen test to check for 32 bytes,
5031,Update server configuration docs to use 32 bytes,
5032,Generate 32-byte gossip key for nomad operator keygen command,"The key generated from this command is used for gossip encrpytion, which utilizes AES GCM encryption. Using a key size of 16-bytes enables AES-128 while a key size of 32 bytes enables AES-256. The underlying memberlist library supports the larger key size, and is ultimatley preferable from a security standpoint. Consul also uses 32 bytes by default: https://github.com/hashicorp/consul/commit/1a14b94441dbd715fcb83d78c99fe87de9ad01ea"
5033,Merge pull request #8996 from hashicorp/f-lower-mem-min,jobspec: lower min cpu resources from 10->1
5034,jobspec: lower min cpu resources from 10->1,"Since CPU resources are usually a soft limit it is desirable to allow setting it as low as possible to allow tasks to run only in ""idle"" time. Setting it to 0 is still not allowed to avoid potential unintentional side effects with allowing a zero value. While there may not be any side effects this commit attempts to minimize risk by avoiding the issue. This does not change the defaults."
5035,Merge pull request #8992 from hashicorp/b-tests-failover-copy,tests: failover to copying when symlinking fails
5036,tests: failover to copying when symlinking fails,"Symlinking busybox may fail when the test code and the test temporary directory live on different volumes/partitions; so we should copy instead.  This situation arises in the Vagrant setup, where the code repository live on special file sharing volume. Somewhat unrelated, remove module invocation from a test copyFile helper function.  Sync is useful only for crash recovery, and isn't necessary in our test setup.  The sync invocation is a significant overhead as it requires the OS to flush any cached writes to disk."
5037,e2e: ensure tests are constrained to Linux (#8990),"Until we have LCOW support in the E2E environment (which requires a Windows 2019 test target), we need to constrain E2E tests to the appropriate kernel"
5038,"e2e: cleanup errors should use assert, not require (#8989)","The E2E framework wraps testify's module so that by default we can stop tests on errors, but the cleanup functions should use module so that we continue to try to cleanup the test environment even if there's a failure."
5039,client: fix test umask (#8987),
5040,Merge pull request #8985 from hashicorp/f-scaling-policy-type,Add scaling policy type
5041,add scaling policy type,
5042,Merge pull request #8922 from hashicorp/dmay-raftutil-path,"Raftutil cleanup, plus helper function to find raft.db"
5043,return explicit error if not found/empty path falls through,
5044,docs: quota apply does not have a 'name' param (#8983),
5045,[docs] Update redirects and links for learn.hashicorp.com (#8598), Fix links to ACL guides Managing Nomad guide links; links in jsx pages job updates guide URLS node-drain guide URLS outage recovery guide links fix guide links - sentinel fix guide links - namespaces fix guide links - quotas fix guide links - autopilot more guide links. more guide links - continued. Updating redirects for learn Getting Started Load Balancing Guides update redirects for ui guide Consolidate spark redirects to point to GH repo operating job update part 1 finish operating job links; operations guides links. finish guide redirects coalesce EOL redirects for spark guides. one last link Checked links and found a few more stray links Found more .htmls Fixup links for new HC websites Post-merge fixups linkcheck caught missing ids
5046,Merge pull request #8981 from hashicorp/b-vagrant-vault-setup,Update Vagrant consul/vault deps
5047,Merge pull request #8982 from hashicorp/b-exec-dns-resolv,drivers/exec: fix DNS resolution in systemd hosts
5048,Merge pull request #8933 from jf/fix_docker_stopsignal,drivers/docker/driver.go: change default signal for docker driver to SIGTERM?
5049,drivers/exec: fix DNS resolution in systemd hosts,"Host with systemd-resolved have module is a symlink to module. By bind-mounting /etc/resolv.conf only, the exec container DNS resolution fail very badly. This change fixes DNS resolution by binding /run/systemd/resolve as well. Note that this assumes that the systemd resolver (default to 127.0.0.53) is accessible within the container. This is the case here because exec containers share the same network namespace by default. Jobs with custom network dns configurations are not affected, and Nomad will continue to use the job dns settings rather than host one."
5050,Update Vagrant consul/vault deps,Update Vagrant setup to use the consul/vault versions used in CI.
5051,e2e: rework rescheduling progress deadline test (#8958),Eliminate sources of randomness in the progress deadline test and clarify the purpose of the test to check for progress deadline updates.
5052,Merge pull request #8977 from hashicorp/b-script-check-task,consul: fix validation of task in group-level script-checks
5053,satisfy the linter,
5054,reverting export of fixTime,
5055,finish refactoring walk to search for any file,
5056,e2e: namespace support for CLI helpers (#8978),Required to support tests for namespaces and other ENT features.
5057,consul: fix validation of task in group-level script-checks,"When defining a script-check in a group-level service, Nomad needs to know which task is associated with the check so that it can use the correct task driver to execute the check. This PR fixes two bugs: 1) validate service.task or service.check.task is configured 2) make service.check.task inherit service.task if it is itself unset Fixes #8952"
5058,command: fix a typo in the help text for namespaces (#8975),
5059,e2e: ENT placeholder for namespace/quotas tests (#8973),
5060,e2e: test for host volumes and Docker volumes (#8972),"Exercises host volume and Docker volume functionality for the module and module task driver, particularly around mounting locations within the container and how this can be used with module."
5061,e2e: add flag to bootstrap Nomad ACLs (#8961),"Adds a module flag to our Terraform stack that bootstraps Nomad ACLs via a module provider. There's no way to set the module in the Nomad TF provider if we're bootstrapping in the same Terraform stack, so instead of using module, we also bootstrap a wide-open anonymous policy. The resulting management token is exported as an environment var with module and tests that want stricter ACLs will be able to write them using that token. This should also provide a basis to do similar work with Consul ACLs in the future."
5062,refactor functions to find raft.db,
5063,logging tweaks,
5064,export FixTime to allow external use,
5065,command: remove mbits from quota hcl (#8740),
5066,ci: don't run UI tests for e2e branches (#8956),
5067,Merge pull request #8957 from hashicorp/f-pause-container-arch,drivers/docker: detect arch for default docker plugin infra_image
5068,drivers/docker: detect arch for default infra_image,"The 'docker.config.infra_image' would default to an amd64 container. It is possible to reference the correct image for a platform using the module variable, eliminating the need to explicitly set the module on non-amd64 platforms. Also upgrade to Google's pause container version 3.1 from 3.0, which includes some enhancements around process management. Fixes #8926"
5069,e2e: remove unused migrations test (#8955),The areas of the code this test exercised were merged in with the node drain tests.
5070,e2e: use more recent instance type (#8954),"Newer EC2 instances are both cheaper and have generally better performance. The dnsmasq configuration had a hard-coded interface name, so in order to accomodate instances with more recent networking that result in so-called predictable interface names, the dnsmasq configuration needs to be replaced at runtime with userdata to select the default interface."
5071,e2e: add flags for provisioning Nomad Enterprise (#8929),
5072,ci: reduce merge conflict potential in CircleCI config (#8951),We currently have two jobs commented out in ENT because we don't have the test target configured there. So having the filter attached to one of those jobs means changes to filters always create a merge conflict.
5073,Merge pull request #8942 from hashicorp/ro.docs-component-update,docs: Update docs platform components
5074,docs: fix escaping in job run env vars (#8944),
5075,"Add node ""status"", ""scheduling eligibility"" to all client metrics (#8925)"," We previously added these to the client host metrics, but it's useful to have them on all client metrics. e.g. so you can exclude draining nodes from charts showing your fleet size."
5076,Fix multi-interface networking in the system scheduler (#8822),
5077,Merge pull request #8745 from hashicorp/b-fsm-logs,core: improve job deregister error logging
5078,Update docs platform components,
5079,Merge pull request #8931 from hashicorp/f-ui/children-jobs-quality-of-life,UI: Launched jobs quality of life improvements
5080,docs: add #8745 to changelog,
5081,core: improve job deregister error logging,"Noticed this error in some production logs, and they were far from helpful. Changes:  Include job ID in logs Wrap errors and log once instead of double log lines Test fsm error handling behavior"
5082,docs: fix typo 'thre' -> 'the' (#8937),
5083,e2e: node drain tests (#8906),"Exercise the module features, driving them via the new CLI helpers."
5084,add missing import,
5085,e2e: reschedule tests should check for non-zero rescheduled allocs (#8927),"The conditional around some of the rescheduling tests was backwards, where we were waiting for allocations to be rescheduled but testing for a count of 0. The test was passing but flaky because if the check happened quickly enough before the scheduler rescheduled the allocations, it would pass."
5086,Acceptance test coverage for the submit time sorting on the periodic and parameterized detail pages,
5087,Test coverage for page select and submit time on periodic page,
5088,drivers/docker/driver.go: change default signal for docker driver to SIGTERM?,
5089,Update job launches table to use the page size select pattern,
5090,Sort periodic and parameterized job detail pages by most recently submitted,
5091,Add job submit time to the job children list,
5092,make sure dev-cluster has the option to run windows config (#8928),
5093,Merge pull request #8878 from greut/bump-go-discover,"feat: upgrade consul 1.7, and go-discover"
5094,e2e: remove unused framework provisioning code (#8908),
5095,e2e: test script for Terraform logic (#8907),
5096,e2e: provision cluster entirely through Terraform (#8748),"Have Terraform run the target-specific module/module script rather than the test runner code which needs to be customized for each distro. Use Terraform's detection of variable value changes so that we can re-run the provisioning without having to re-install Nomad on those specific hosts that need it changed. Allow the configuration ""profile"" (well-known directory) to be set by a Terraform variable. The default configurations are installed during Packer build time, and symlinked into the live configuration directory by the provision script. Detect changes in the file contents so that we only upload custom configuration files that have changed between Terraform runs"
5097,ci: exclude unit test runs from e2e branches (#8909),"Branches for the e2e code base can't have impact on the unit tests, so running those tests just extends the time it takes to ship e2e updates. This changeset updates the CircleCI config so that e2e branches run linting, build the binary, and run the e2e unit tests (currently just vault compatibility)."
5098,changelog items for community PRs (#8924),[ci skip]  https://github.com/hashicorp/nomad/pull/8836 https://github.com/hashicorp/nomad/pull/8921
5099,RPC Timeout/Retries account for blocking requests (#8921),"The current implementation measures RPC request timeout only against config.RPCHoldTimeout, which is fine for non-blocking requests but will almost surely be exceeded by long-poll requests that block for minutes at a time. This adds an HasTimedOut method on the RPCInfo interface that takes into account whether the request is blocking, its maximum wait time, and the RPCHoldTimeout."
5100,update changelog with 0.12.5 content (#8923),[ci skip]
5101,remove extra debug output,
5102,"Raftutil cleanup, plus helper function to find raft.db",
5103,Merge pull request #8920 from hashicorp/docs-release-0.12.5,update release to 0.12.5
5104,update release to 0.12.5,
5105,build(deps): bump websocket-extensions from 0.1.3 to 0.1.4 in /ui (#8128),Bumps link from 0.1.3 to 0.1.4. - link - link - link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
5106,build(deps): bump elliptic from 6.5.0 to 6.5.3 in /ui (#8564),Bumps link from 6.5.0 to 6.5.3. - link - link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
5107,Change compared page object to match by name (#8915),"I believe this test became flaky after #8833, you can see an example failure here: https://app.circleci.com/pipelines/github/hashicorp/nomad/11809/workflows/0dc3c8f4-187c-44af-8bdb-6f010d653081/jobs/100848 The goal here is not to assert that the first task group in the server database matches the first row displayed, but before 8833 it could be assumed that they did match. This changes to find the row corresponding to the first server task group instead of assuming it’ll be first."
5108,Merge pull request #8811 from hashicorp/docs/fix-local-service-port,docs: fix type for module
5109,build(deps): bump markdown-to-jsx from 6.10.3 to 6.11.4 in /ui (#8826),Bumps link from 6.10.3 to 6.11.4. - link - link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
5110,Merge pull request #8789 from hashicorp/docs-fix-group-link,docs: Fix group link in job spec docs
5111,e2e: documentation and minor tweaks to configs (#8912)," remove outdated references to envchain in documentation add new host volume locations in userdata don't exit the entire script during provisioning, just return"
5112,docs: add missing double quote (#8806),
5113,Merge pull request #8911 from hashicorp/f-task_network_warning-smaller,Smaller 0.12 mbit deprecation PR
5114,fingerprinting: add AWS MAC and public-ipv6 (#8887),
5115,tweak the language about mbit scheduling factor,
5116,changelog entry for #8902 (#8904),
5117,e2e: refactor CLI utils out of rescheduling test (#8905),"The CLI helpers in the rescheduling test were intended for shared use, but until some other tests were written we didn't want to waste time making them generic. This changeset refactors them and adds some new helpers associated with the node drain tests (under separate PR)."
5118,filter volumes by type in 'nomad node status' output (#8902),"Volume requests can be either CSI or host volumes, so when displaying the CSI volume info for module we need to filter out the host volumes."
5119,Update website with network mbit deprecation,
5120,Update job examples with MBit deprecation,
5121,api: target servers for allocation requests (#8897),"Allocation requests should target servers, which then can forward the request to the appropriate clients. Contacting clients directly is fragile and prune to failures: e.g. clients maybe firewalled and not accessible from the API client, or have some internal certificates not trusted by the API client. FWIW, in contexts where we anticipate lots of traffic (e.g. logs, or exec), the api package attempts contacting the client directly but then fallsback to using the server. This approach seems excessive in these simple GET/PUT requests. Fixes #8894"
5122,Merge pull request #8890 from arthur-leclerc/docs-fix-nomad-autoscaling-telemetry-dd-example,docs: Fix Nomad autoscaler Datadog telemetry example
5123,Add handling for allocation-less exec URL (#8856),This closes #8769. This new-window-opening code is not possible to properly exercise within Ember’s testing facilities 😞
5124,changelog: Tag the ui with the right release (#8883),
5125,Merge pull request #8867 from hashicorp/b-canary-substitution,scheduler: Revert requireCanary logic
5126,Merge pull request #8869 from hashicorp/docs-move-ea-guides,Sunset older instances of EA Guides
5127,Merge pull request #8886 from hashicorp/b-running-next-allocation,Stop already rescheduled but somehow running allocs
5128,docs: Fix autoscaler datadog telemetry example,
5129,Merge pull request #8884 from hashicorp/b-fix-help-nomad-monitor,Change tabs to spaces in module help text
5130,Only ignore rescheduled allocations if they got stopped,
5131,add a test when .NextAllocation is set but alloc is still running,
5132,Change tabs to spaces in nomad monitor help text,
5133,Merge pull request #8882 from hashicorp/b-expose-panic,consul/connect: validate group network on expose port injection
5134,consul/connect: validate group network on expose port injection,"In #7800, Nomad would automatically generate a port label for service checks making use of the expose feature, if the port was not already set. This change assumed the group network would be correctly defined (as is checked in a validation hook later). If the group network was not definied, a panic would occur on job submisssion. This change re-uses the group network validation helper to make sure the network is correctly definied before adding ports to it. Fixes #8875"
5135,Fix sample JSON payload when updating a Volume (#8880),Fixes #8879
5136,"feat: upgrade consul 1.7, and go-discover",Signed-off-by: Yoan Blanc link
5137,docs: add chroot contents to Java driver docs (#8873),
5138,e2e: constrain rescheduling test workloads to Linux (#8872),"The rescheduling test workloads were created before we had Windows targets in the E2E nightly run. When these were recently ported to the e2e framework they were missing the constraint to Linux machines. Also added a little extra time to polling to avoid some flakiness on the first run, and a minor readability adjustment to the job names."
5139,Merge pull request #8868 from hashicorp/b-missing-ErrMultipleNamespaces,moved shared variable into shared-build file
5140,Update copy on Production overview page,
5141,Sunset local copy of Deployment Guide and Reference Architecture,
5142,Update nomad/job_endpoint.go,
5143,"move variable out of oss-only build into shared file, fixes ent compile error introduced by #8834",
5144,Revert the module check introduced in https://github.com/hashicorp/nomad/pull/8691/files#diff-1801138ac4d10f2064ba6f2e434ac9b4L430-R431 .,"The change was intended to fix a case where a canary alloc may fail to be rescheduled if all the other allocs fail as well (e.g. if all allocs happen to be placed on a node that died).  However, it introduced some unintended side-effects. Reverting the change for now and will investigate further."
5145,test for rescheduling non-canaries,
5146,Merge pull request #8860 E2E: rescheduling tests,
5147,remove direct dependency on ginkgo,
5148,e2e: rescheduling tests,"Ports the rescheduling tests (which aren't running in CI) into the current test framework so that they're run on nightly, and exercises the new CLI helpers."
5149,e2e: helper for sending CLI commands and parsing output,"The E2E suite exercises the API, but not the CLI. This changeset adds a helper function to send commands via a locally-built Nomad binary (which we'll need to add to the E2E setup), and some helpers to parse the resulting structured outputs in a way that tests can consume."
5150,Merge pull request #8862 from hashicorp/release-0.12.4,Prepare for 0.13 development cycle
5151,release: remove generated files after release,
5152,prepare version for next release,
5153,Merge pull request #8861 from hashicorp/docs-nomad-0.12.4,Update website to Nomad 0.12.4
5154,docs: update scripts to 0.12.4,
5155,docs: update website to 0.12.4,
5156,Add API support for cancelation contexts passed via QueryOptions and WriteOptions (#8836),Copy Consul API's format: QueryOptions.WithContext(context) will now return a new QueryOption whose HTTP requests will be canceled with the context provided (and similar for WriteOptions)
5157,Upgrade to golang 1.15 (#8858),"Upgrade to golang 1.15 Starting with golang 1.5, setting Ctty value result in module error, as part of https://github.com/golang/go/issues/29458 . This commit lifts the fix in https://github.com/creack/pty/pull/97 ."
5158,Release v0.12.4,
5159,Generate files for 0.12.4 release,
5160,Merge pull request #8850 from hashicorp/d/changelog,Changelog entry for 8833
5161,docs: bump 0.12.4 GA date to today,
5162,Merge pull request #8855 from hashicorp/b-docs-fix-autopilot-configblock-format,docs: format Autopilot config stanza example.
5163,fix: panic in test introduced by #8453 (#8834),Signed-off-by: Yoan Blanc link
5164,docs: format Autopilot config stanza example.,
5165,Merge pull request #8851 from hashicorp/b-fix-e2e-8842,e2e: fix failure in running metrics test suite jobs.
5166,Merge pull request #8848 from hashicorp/b-deployment-500-error,GetDeployment should not return 500 error
5167,e2e: fix failure in running metrics test suite jobs.,"When running the Fabio and Prometheus jobs for the metrics suite it seems the outer directory is required in the call when registering the job. error: ""e2e/input/fabio.nomad: no such file or directory"""
5168,Update nomad/deployment_endpoint.go,
5169,Changelog entry for 8833,
5170,Merge pull request #8833 from hashicorp/b-ui/wrong-task-logs,UI: Fix bug where task logs would suddenly switch to another task's logs
5171,"check ACLs against deployment namespace on Deployment.GetDeployment, filtering the deployment if the ACL isn't appropriate",
5172,Verify iter to avoid panic,
5173,Merge pull request #8847 from hashicorp/dmay-array-fix,Verify iter to avoid panic
5174,Verify iter to avoid panic,
5175,Merge pull request #8818 from hashicorp/pruett.search-fixes,Fix several search-related issues
5176,e2e: move setup jobs for metrics test into that suite (#8842),The fabio and prometheus workloads are specific to the metrics test and aren't used by any other test suite.
5177,Fix several search-related issues, CSS on mobile Remove stale partial indices Fix broken hit links Leverage @hashicorp/react-search/tools
5178,Fix Vagrant link in README (#8839),
5179,docs: add Nomad Autoscaler Datadog APM plugin details. (#8755),
5180,Merge pull request #8837 from hashicorp/docs-autoscaler-gh-257,docs: update Autoscaler AWS target with new purge config option.
5181,docs: add Autoscaler telemetry documentation to website. (#8733),Co-authored-by: Chris Baker link Co-authored-by: Luiz Aoqui link
5182,docs: update Autoscaler AWS target with new purge config option.,
5183,Sort keys when converting objects to arrays for stable model fragments,
5184,Merge pull request #8726 from hashicorp/ui/mirage-job-resources,UI: Allow for setting job resource requirements in via the Mirage job factory
5185,Derive allocation Resources property from TaskResources,
5186,Allow for custom resource requirements for jobs that are recognized by allocations,"The job factory will now accept an array of resourceSpecs that is a shorthand notation for memory, cpu, disk, and iops requirements. These specs get passed down to task groups. The task group factory will split the resource requirements near evenly (there is variance threshold) across all expected tasks. Allocations then construct task-resource objects based on the resources from the matching task."
5187,Parameterize generateResources to enable property overrides,
5188,Merge pull request #8772 from hashicorp/state/track-changes,track transaction changes
5189,changelog item for CSI socket connect (#8829),
5190,e2e: move configurations into profile-specific directories (#8828),"This changeset stages upcoming E2E provisioning improvements work. It splits the existing shared configuration directory into 3 profiles:  ""full-cluster"": the set of configurations currently in use ""dev-cluster"": a simplified set of mostly existing configurations that   weren't in use. ""custom"": an empty profile for developers to keep non-standard   configurations during complex feature development.  The tooling to switch between profiles will be in a later changeset. Also drops some unused configuration knobs from the provisioning scripts to make the next stage of work easier."
5191,changelog item for CSI socket connect (#8829),
5192,e2e: remove unused EBS volumes and depends_on (#8827),"Our provisioning process for E2E doesn't require the module fields to be set for client instances, so dropping that field allows all instances to be started in parallel. We don't use the extra EBS volumes (they aren't even mounted), so remove them to reduce costs."
5193,remove node events for state track changing pr,remove Txn and update calls with ReadTxn() constructor for changetrackerdb
5194,e2e: minor rename and cleanup (#8824),
5195,e2e: consolidate cloud-specific Consul configs (#8823),"The module flag in the Consul service unit files is specific to a given cloud, but we already have cloud-specific configuration files. Consolidate all the cloud-specific items into the config."
5196,client/allocrunner/taskrunner: client.Close after err check (#8825),
5197,client/allocrunner/taskrunner: client.Close after err check (#8825),
5198,e2e: Linux AMI setup cleanup (#8821),"As we add new Linux targets for E2E, the existing setup.sh script will be used only for Ubuntu. Rather than have the service and config files echo'd from the script, move them into files we upload so they can be reused. Includes some general noise reduction in the setup.sh script and removal of unused bits."
5199,nomad-driver-containerd: Update networking section (#8762),
5200,Isolate the jobspec package from the rest of Nomad (#8815),"This eases adoption of the jobspec package by other projects (e.g. terraform nomad provider, Lavant). Either by consuming directy as a library (hopefully without having go mod import rest of nomad) or by copying the package without modification. Ideally, this package will be published as an independent module. We aren't ready for that considering we'll be switching to HCLv2 ""soon"", but eitherway, this seems like a reasonable intermediate step if we choose to."
5201,Merge pull request #8819 from hashicorp/docs-0.12.4-rc1,docs: add download link to 0.12.4-rc1
5202,docs: add download link to 0.12.4-rc1,
5203,Release v0.12.4-rc1,
5204,Generate files for 0.12.4-rc1 release,
5205,Updating versions and removing deprecated items (#8750),"  Removed deprecated Spark pieces.   Bumped HashiCorp stack versions to current as of commit date   Bumped versions of HashiCorp stack tools   Bumped versions, added VAULT_ADDR in GCP, removed refs to Spark in shared README "
5206,docs: update 0.12.4 release date,
5207,Merge pull request #8812 from hashicorp/docs/add-volume-mount-to-task,docs: add entry for volume_mount in task
5208,Merge pull request #8813 from hashicorp/b-fix-autoscaler-aws-target-policy-params,docs: fix incorrect aws-asg autoscaler target plugin policy params
5209,docs: fix incorrect aws-asg autoscaler target plugin policy params,
5210,docs: add entry for volume_mount in task,
5211,docs: fix type for local_service_port,
5212,Changelog catchup (#8808),
5213,Merge pull request #8797 from hashicorp/poststart-changelog,changelog: task lifecycle poststart hook
5214,Merge pull request #8805 from hashicorp/f-ui/remove-poststop,UI: Temporarily remove poststop from the lifecycle chart
5215,Merge pull request #8803 from hashicorp/docs-cigs-cl,add consul ingress gateways to changelog
5216,Merge pull request #8804 from hashicorp/b-cronexpr-zero-padding,Fix cron handling with zero-padding months
5217,update changelog,
5218,Merge pull request #8742 from hashicorp/f-ui/poststart-poststop,UI: Add poststart and poststop lifecycle phases
5219,run module,
5220,Update cronexpr to pick up month zero padding fix,
5221,add consul ingress gateways to changelog,
5222,fix a few missed txn changes,
5223,fix bad merge from scalingpoliciesbynamespace,
5224,noop changetracker for snapshots,
5225,Transaction change tracking,"This commit wraps memdb.DB with a changeTrackerDB, which is a thin wrapper around memdb.DB which enables go-memdb's TrackChanges on all write transactions. When the transaction is comitted the changes are sent to an eventPublisher which will be used to create and emit change events. debugging TestFSM_ReconcileSummaries wip revert back rebase revert back rebase fix snapshot to actually use a snapshot"
5226,Merge pull request #8798 from hashicorp/b-esccaping-newline,Fix escapingio handling of module
5227,add changelog,[ci skip]
5228,changelog: panic in operator debug command (#8802),
5229,Temporarily remove poststop from the UI,"Since poststart and poststop are shipping separately, we can't ship them both in the UI at the same time."
5230,docs: Fix group link in job spec docs,
5231,Handle when a new line follows an escaping char,
5232,Add a failing \n~\n~. case!,
5233,changelog: task lifecycle poststart hook,
5234,fix params for Agent.Host client RPC (#8795),The parameters for the receiving side of the Agent.Host client RPC did not take the arguments serialized at the server side. This results in a panic.
5235,Merge pull request #8390 from hashicorp/lifecycle-poststart-hook,task lifecycle poststart hook
5236,task lifecycle poststart: code review fixes,
5237,Merge pull request #8793 from hashicorp/debug-cli/run-intervals,run commands for duration and interval without needing to specify server or node
5238,run commands for duration and interval without needing to specify servers or nodes,
5239,command/plugin_status_csi: plugin status :id keeps expected count,
5240,Merge pull request #8792 from hashicorp/debug-cli/add-license,add license info to operator debug command
5241,add license info to operator debug command,
5242,Merge pull request #8719 from hashicorp/f-nomad-raft-util,add helper commands for debugging state
5243,Add a linter for raftutil message type mapping,
5244,raft debug commands are low-level internal commands,
5245,Apply suggestions from code review,Co-authored-by: Michael Schurter link
5246,add helper commands for debugging state,
5247,Merge pull request #8749 from hashicorp/b-old-non-deployment,Handle migration of non-deployment jobs
5248,Merge pull request #8787 from Clivern/patch-1,Docs: update acl guide broken link
5249,Merge pull request #8778 from hashicorp/b-non-effective-copy,Fix accidental broken Copy
5250,Merge pull request #8784 from jf/fix_cmd_name,Fix cmd.Name() for NodeEligibilityCommand
5251,update acl guide link,
5252,Fix cmd.Name() for NodeEligibilityCommand,
5253,Merge pull request #8756 from hashicorp/pruett.search-component,Replace local search with @hashicorp/react-search
5254,Fix accidental broken clones,Fix CSIMountOptions.Copy() and VolumeRequest.Copy() where they accidentally returned a reference to self rather than a deep copy. module in Golang apparently equivalent to plain module.
5255,Replace local search with @hashicorp/react-search,
5256,MRD: move 'job stop -global' handling into RPC (#8776),The initial implementation of global job stop for MRD looped over all the regions in the CLI for expedience. This changeset includes the OSS parts of moving this into the RPC layer so that API consumers don't have to implement this logic themselves.
5257,"changelog: global stop, misc bug fix (#8777)",
5258,structs: filter NomadTokenID from job diff (#8773),Multiregion deployments use the module to allow the deploymentwatcher to send RPCs between regions with the original submitter's ACL token. This ID should be filtered from diffs so that it doesn't cause a difference for purposes of job plans.
5259,command/operator_debug: mkdir before storing agent-host (#8707),"The api calls were reordered, the new order omits the module result by fetching it before the directory is created."
5260,Merge branch 'f-ui/poststart-poststop' of github.com:hashicorp/nomad into f-ui/poststart-poststop,
5261,Merge branch 'master' into f-ui/poststart-poststop,
5262,Add exec heartbeat keepalive (#8759),"This closes #8727, thanks to @jfcantu for the suggestion. The CLI implementation of exec already has a 10-second heartbeat so this mirrors that: https://github.com/hashicorp/nomad/blob/v0.12.3/api/allocations.go#L161-L173"
5263,Merge pull request #8771 from hashicorp/f-ui/mirage-consistency,UI: Clean up erroneous and redundant mirage things
5264,docs: alphabetize community task driver listing (#8774),"Everything else in the docs sidebars is alphabetized, so do it here too."
5265,Clean up erroneous and redundant mirage things,
5266,CHANGELOG: use consistent indentation for 0.12.4,
5267,CHANGELOG: csi expected counts,
5268,"csi: plugins track jobs in addition to allocations, and use job information to set expected counts (#8699)", nomad/structs/csi: add explicit job support nomad/state/state_store: capture job updates directly api/nodes: CSIInfo needs the AllocID command/agent/csi_endpoint: AllocID was missing Co-authored-by: Tim Gross link
5269,changelog: batch of bug fixes for 0.12.4 (#8767),
5270,lint: check for go.mod or go.sum drift (#8765),
5271,fix committed go.sum merge conflict (#8764),
5272,Merge pull request #8761 from hashicorp/b-consul-op-token-check,consul/connect: make use of task kind to determine service name in consul token checks
5273,MRD: deregister regions that are dropped on update (#8763),This changeset is the OSS hooks for what will be implemented in ENT.
5274,tests: allow API test server to respect NOMAD_TEST_LOG_LEVEL (#8760),
5275,consul/connect: make use of task kind to determine service name in consul token checks,"When consul.allow_unauthenticated is set to false, the job_endpoint hook validates that a module is provided and validates the token against the privileges inherent to a Consul Service Identity policy for all the Connect enabled services defined in the job. Before, the check was assuming the service was of type sidecar-proxy. This fixes the check to use the type of the task so we can distinguish between the different connect types."
5276,Merge pull request #8758 from hashicorp/drewbailey-patch-1,fix changelog entry placement
5277,fix changelog entry placement,
5278,Merge pull request #8753 from hashicorp/b-scaling-policy-delete-job-prefix,resolve prefix bugs around job scaling policies
5279,Fix tragique formatting,
5280,state_store/fix the prefix bugs for scaling policies documented in 1a9318,
5281,documenting tests for prefix bugs around job scaling policies,
5282,e2e: minor TF refactor to split out vars and outputs (#8752),
5283,Merge pull request #8709 from hashicorp/f-cc-ingress,consul/connect: add initial support for ingress gateways
5284,e2e: move systemd unit files into Packer build (#8751),
5285,Merge branch 'master' into f-cc-ingress,
5286,consul/connect: use context cancel more safely,
5287,consul/connect: fixup some comments and context timeout,
5288,Remove prestart tasks table,"My suggestion is that this table isn’t sufficiently useful to keep around with the combinatoric explosion of other lifecycle phases. The logic was that someone might wonder “why isn’t my main task starting?” and this table would show that the prestart tasks hadn’t yet completed. One might wonder the same about any task that has prerequisites, so should a poststart task have a table that shows main tasks? And so on. Since the route hierarchy guarantees that one has already passed through a template that shows the lifecycle chart before one can reach the template where this table is displayed, I believe this table is redundant. It also conveys information in a more abstract way than the chart, which is dense and more easily understood, to me."
5289,Add poststart and poststop lifecycle phases,
5290,Handle migration of non-deployment jobs,"This handles the case where a job when from no-deployment to deployment with canaries. Consider a case where a module job is submitted as version 0, then an update is submitted with module as verion 1. In this case, we will have 1 canary alloc, and all remaining allocs will be version 0.  Until the deployment is promoted, we ought to replace the canaries with version 0 job (which isn't associated with a deployment)."
5291,Merge pull request #8691 from hashicorp/b-reschedule-job-versions,Respect alloc job version for lost/failed allocs
5292,Update scheduler/reconcile.go,Co-authored-by: Chris Baker link
5293,simplify canary check,module and module are equivalent.
5294,tweak stack job manipulation,To address review comments
5295,Have Plan.AppendAlloc accept the job,
5296,Merge pull request #8729 from hashicorp/b-assorted-fixes-20200824,Assorted small fixes
5297,Merge pull request #8741 from hashicorp/fix-security-model-broken-links,Fix Broken Learn Guide Links in Security Model
5298,Merge pull request #8739 from hashicorp/remove-preemption-from-enterprise,"remove preemption, add cross-namespace queries"
5299,Add component accessibility auditing and fixes (#8679),This continues #8455 by adding accessibility audits to component integration tests and fixing associated errors. It adds audits to existing tests rather than adding separate ones to facilitate auditing the various permutations a component’s rendering can go through. It also adds linting to ensure audits happen in component tests. This necessitated consolidating test files that were scattered.
5300,Fix broken guide links + small authn/authz wording adjustments,
5301,fixup! handle when hcl parser panics,
5302,Merge pull request #8738 from hashicorp/ent-changelog,changelog entry for enterprise bug
5303,changelog entry for enterprise bug,
5304,"remove preemption, add cross-namespace queries",remove preemption from summary of governance and policy module since it is now OSS. add cross-namespace queries to that same sentence.
5305,csi: fix panic in serializing nil allocs in volume API (#8735), fix panic in serializing nil allocs in volume API prevent potential panic in serializing plugin allocs
5306,clarify PathEscapesAllocDir specification,Clarify how to handle prefix value and path traversal within the alloc dir but outside the prefix directory.
5307,validate parameterized job request meta,"Fixes a bug where module metadata wasn't populated, as we iterated over the empty newly-created module map rather than the request Meta field."
5308,handle when hcl parser panics,"Apparently module followed by a digit number can cause hcl parser to panic! Will fix in hcl library, but using a hammer to squash any similar issue here."
5309,close file when done reading,
5310,don't lock if ref is nil,"Ensure that d.mu is only dereferenced if d is not-nil, to avoid a null dereference panic."
5311,Merge pull request #8728 from hashicorp/gh_sec_pol,remove local SECURITY.md in favor of org-wide policy
5312,remove local SECURITY.md in favor of org-wide policy,
5313,Merge pull request #8714 from hashicorp/f-ui/always-show-scale-event-accordion,UI: Always show the scaling events accordion
5314,Always show the scaling events accordion,
5315,consul/connect: fixup tests to use new consul sdk,
5316,consul/connect: update consul to match current,
5317,Merge pull request #8715 from greut/consul-v1.7.7,Consul v1.7.7
5318,Merge branch 'master' into consul-v1.7.7,
5319,Merge pull request #8717 from greut/cors-v1.7.0,vendor: rs/cors v1.7.0
5320,Merge pull request #8721 from code0x9/b-kernel-builtin-module,client/fingerprint: lookup kernel builtin bridge modules
5321,docs: add contributor docs for issue labels (#8723),
5322,consul/connect: remove envoy dns option from gateway proxy config,
5323,consul/connect: update consul version used in circleci,
5324,"fixup! vendor: consul/api, consul/sdk v1.6.0",Signed-off-by: Yoan Blanc link
5325,refactor lookup code,
5326,lookup kernel builtin modules too,
5327,Merge pull request #8656 from JanMa/update-nspawn-docs,Update docs for nspawn driver
5328,Merge pull request #8704 from hashicorp/docs-gh-6305,docs: fix job run -detach example
5329,vendor: rs/cors v1.7.0,"The Olivier Poitrey Go CORS handler through 1.3.0 actively converts a wildcard CORS policy into reflecting an arbitrary Origin header value, which is incompatible with the CORS security design, and could lead to CORS misconfiguration security problems. CVE-2018-20744 Signed-off-by: Yoan Blanc link"
5330,"vendor: consul/api, consul/sdk v1.6.0",Signed-off-by: Yoan Blanc link
5331,vendor: consul v1.7.7,Signed-off-by: Yoan Blanc link
5332,consul/connect: add initial support for ingress gateways,"This PR adds initial support for running Consul Connect Ingress Gateways (CIGs) in Nomad. These gateways are declared as part of a task group level service definition within the connect stanza. module A gateway can be run in module or module networking mode, with the caveat that host networking necessitates manually specifying the Envoy admin listener (which cannot be disabled) via the service port value. Currently Envoy is the only supported gateway implementation in Consul, and Nomad only supports running Envoy as a gateway using the docker driver. Aims to address #8294 and tangentially #8647"
5333,e2e: fix platform path for installing for Linux from s3 (#8708),
5334,E2E: move Nomad installation to script on remote hosts (#8706),"This changeset moves the installation of Nomad binaries out of the provisioning framework and into scripts that are installed on the remote host during AMI builds. This provides a few advantages:  The provisioning framework can be reduced in scope (with the goal of moving   most of it into the Terraform stack entirely). The scripts can be arbitrarily complex if we don't have to stuff them into   ssh commands, so it's easier to make them idempotent. In this changeset, the   scripts check the version of the existing binary and don't re-download when   using the module or module flags. The scripts can be OS/distro specific, which helps in building new test   targets."
5335,Add common serialiser abstractions (#8634),"This extracts some common API-idiosyncracy-handling patterns from model serialisers into properties that are processed by the application serialiser:  arrayNullOverrides converts a null property value to an empty array mapToArray converts a map to an array of maps, using the original map keys as Name properties on the array maps separateNanos splits nanosecond-containing timestamps into millisecond timestamps and separate nanosecond properties"
5336,Merge pull request #8701 from hashicorp/doc-e2e,docs: clarify e2e tests
5337,task lifecycle: e2e fix more alloc stop races,
5338,docs: fix job run -detach example,
5339,task lifecycle: make e2e service job test block until poststart task has started,
5340,Update UI to use new allocated ports fields (#8631),  nomad: canonicalize alloc shared resources to populate ports   ui: network ports   ui: remove unused task network references and update tests with new shared ports model   ui: lint   ui: revert auto formatting   ui: remove unused page objects   structs: remove unrelated test from bad conflict resolution   ui: formatting 
5341,E2E AMI cleanup (#8697), move CNI install/podman config to build-time move DNS config to userdata consolidate apt updates for performance
5342,Merge pull request #8700 from shishir-a412ed/f-ui-podman-driver,Podman driver: Add support for signal task.
5343,Merge pull request #8693 from zhsj/update-runc,Update runc to v1.0.0-rc92
5344,docs: clarify e2e tests,Just a smattering of attempted improvements as I read through this again. Some of my goals:  Tried to add more high level info to the intro to set the context Clarify the difference between test dev and agent dev workflows Add -timeout to provisioning step because cable Internet is lol
5345,Merge pull request #8688 from hashicorp/test-deflake-consul-e2e,test: deflake consul e2e tests
5346,Podman driver: Add support for signal task.,
5347,test: deflake consul e2e tests,Modernize test patterns by removing gomega and avoiding the mock_driver.
5348,e2e: remove unused spark dependency (#8695),
5349,Vendor sync,
5350,Adjust cgroup change in libcontainer,
5351,Update runc to v1.0.0-rc92,
5352,Respect alloc job version for lost/failed allocs,"This change fixes a bug where lost/failed allocations are replaced by allocations with the latest versions, even if the version hasn't been promoted yet. Now, when generating a plan for lost/failed allocations, the scheduler first checks if the current deployment is in Canary stage, and if so, it ensures that any lost/failed allocations is replaced one with the latest promoted version instead."
5353,migrate AMI builds to new account (#8674),
5354,failed core jobs should not have follow-ups (#8682),"If a core job fails more than the delivery limit, the leader will create a new eval with the TriggeredBy field set to module. Evaluations for core jobs have the leader's ACL, which is not valid on another leader after an election. The module evals do not have ACLs, so core job evals that fail more than the delivery limit or core job evals that span leader elections will never succeed and will be re-enqueued forever. So we should not retry with a module."
5355,mrd: remove redundant validation in HTTP endpoint (#8685),"The module function in the HTTP job endpoint overrides the region for multiregion jobs to module, which is used as a sentinel value in the server's job endpoint to avoid re-registration loops. This changeset removes an extraneous check that results in errors in the web UI and makes round-tripping through the HTTP API cumbersome for all consumers."
5356,multiregion: validation should always return error for OSS (#8687),
5357,migrate E2E test runs to new AWS account (#8676),
5358,task lifecycle: e2e tests,
5359,Merge pull request #8680 from hashicorp/dmay-website-license-put,Change 'license set' to 'license put' to reflect correct syntax
5360,Merge pull request #8678 from hashicorp/f-gh-8142-changelog,changelog: add entry for GH-8142.
5361,Change 'license set' to 'license put' to reflect correct syntax,
5362,docker: use Nomad managed resolv.conf when DNS options are set (#8600),
5363,Add missing server shutdown (#8677),This removes repeated instances of this warning from test logs: You created a second Pretender instance while there was already one running.
5364,changelog: add entry for GH-8142.,
5365,Merge pull request #8636 from hashicorp/f-gh-8142,api: add node purge SDK function.
5366,Merge pull request #8675 from hashicorp/docs/alloc-metrics-labels,docs: update allocation metrics
5367,docs: update allocation metrics,
5368,Merge pull request #8672 from hashicorp/f-gh-8142-docs,docs: update docs to reference new Docker driver image_pull_timeout params.
5369,Merge pull request #8589 from hashicorp/f-gh-5718,driver/docker: allow configurable pull context timeout setting.
5370,Merge pull request #8673 from hashicorp/skip-podman-e2e,skip podman e2e
5371,skip podman e2e,
5372,docs: update Docker driver to detail new image_pull_timeout params.,
5373,changelog: add entry for GH-8589.,
5374,api: add node purge SDK function.,
5375,Merge pull request #8670 from hashicorp/release-0.12.3,Release 0.12.3
5376,prepare release,
5377,Release v0.12.3,
5378,Generate files for 0.12.3 release,
5379,command/agent/csi_endpoint: explicit allocations (#8669),
5380,CHANGELOG 0.12.3 (#8668),
5381,Provided base ceph-rbd CSI driver example (#8664),
5382,Add Demo for Openstack Cinder CSI Plugin Deployment (#8662),
5383,csi: fix panic from assignment to nil map in plugin API (#8666),
5384,nomad/state/state_store: handle type conversion failure explicitly (#8660),
5385,fix panic converting structs to API in CSI endpoint (#8659),
5386,Update docs for nspawn driver,There have been some new config options added in recent releases of the nspawn driver. This commit updates the docs accordingly.
5387,add info about multi-vault namespaces (#8654),  add info about multi-vault namespaces   typo 
5388,test: add allocrunner test for poststart hooks,
5389,Merge pull request #8653 from hashicorp/bump-website-version,bump website version
5390,bump website version,
5391,Merge pull request #8650 from hashicorp/fix-docs-autoscaler-agent-policy-dir,docs: fix incorrect Autoscaler policy block dir detail.
5392,Merge pull request #8652 from hashicorp/release-0.12.2,Release 0.12.2
5393,update version for next release,
5394,fix date for 0.12.2 release,
5395,update changelog for 0.12.2 release,
5396,directory for CSI examples (#8651),
5397,docs: fix incorrect Autoscaler policy block dir detail.,
5398,driver/docker: allow configurable pull context timeout setting.,Pulling large docker containers can take longer than the default context timeout. Without a way to change this it is very hard for users to utilise Nomad properly without hacky work arounds. This change adds an optional pull_timeout config parameter which gives operators the possibility to account for increase pull times where needed. The infra docker image also has the option to set a custom timeout to keep consistency.
5399,Release v0.12.2,
5400,Generate files for 0.12.2 release,
5401,Merge pull request #8594 from hashicorp/b-ui/task-group-scale-guard,UI: Add guard against null scale events collection
5402,docker: support group allocated ports and host_networks (#8623),  docker: support group allocated ports   docker: add new ports driver config to specify which group ports are mapped   docker: update port mapping docs 
5403,Merge pull request #8645 from hashicorp/docs-update-connect-lims,docs: update connect integration limitations
5404,docs: update connect integration limitations,
5405,Add CHANGELOG updates (#8644),
5406,CHANGELOG entries for 0.12.2 (#8643),
5407,changelog vault fix (#8642),
5408,commit code-generated msgpack parser on releases (#8640),"Noticed that the structs code-generated parsers is no longer committed when we cut a release, starting with v0.12.  We've been committing generated code to ease reproduction and rebuilding the tag. Note for example that module was present in the link but not in the link. We leave the files ignored, so developers don't accidentally commit them in local development."
5409,Merge pull request #8524 from hashicorp/b-vault-health-checks,Skip checking Vault health
5410,nomad debug renamed to nomad operator debug (#8602), renamed: command/debug.go -> command/operator_debug.go website: rename debug -> operator debug website/pages/api-docs/agent: name in api docs
5411,upgrade go metrics to 0.3.4 (#8637),
5412,module command archive content changes (#8462),  command/debug: print interval data so the operator knows its waiting   command/debug: use the Consul/Vault env for queries   command/debug: capture the operator endpoints   command/debug: capture API errors in the archive bundle 
5413,CSI RPC Token (#8626), client/allocrunner/csi_hook: use the Node SecretID client/allocrunner/csi_hook: include the namespace for Claim
5414,client: remove shortcircuit preventing poststart hooks from running,
5415,client: don't restart poststart sidecars on success,
5416,CSI: volume and plugin allocations in the API (#8590)," command/agent/csi_endpoint: explicitly convert to API structs, and convert allocs for single object get endpoints"
5417,msgpack-rpc errors cannot be wrapped (#8633),"Our RPC calls mangle the errors we get, which prevents us from using wrapped errors and module. Also fixes log message fields."
5418,csi: nomad volume detach command (#8584),The soundness guarantees of the CSI specification leave a little to be desired in our ability to provide a 100% reliable automated solution for managing volumes. This changeset provides a new command to bridge this gap by providing the operator the ability to intervene. The command doesn't take an allocation ID so that the operator doesn't have to keep track of alloc IDs that may have been GC'd. Handle this case in the unpublish RPC by sending the client RPC for all the terminal/nil allocs on the selected node.
5419,RPC errors must be wrapped in order to wrap internal errors (#8632),"The CSI client RPC uses error wrapping to detect the type of error bubbling up from plugins, but if the errors we get aren't wrapped at each layer, we can't unwrap the inner error. Also eliminates some unused args."
5420,docs: fix minor formatting issues on docker driver page. (#8578),Co-authored-by: Chris Baker link
5421,nomad/state/state_store: two cases of incorrect CSIPlugin in-place (#8630),
5422,changelog entries for 0.12.2 CSI work (#8620),
5423,distinguish between transient and persistent errors,
5424,e2e: spread CSI controller plugins across multiple DCs (#8629),"Controller plugins that land on the same node will collide over their CSI module, so give them enough room in our tests that they don't land on the same host. Also, version bump the EBS node plugins to match the controllers."
5425,Merge pull request #8614 from hashicorp/f-consul-passfail,consul: able to set pass/fail thresholds on consul service checks
5426,consul: clarify consecutive checks in docs,
5427,consul: validate script type when ussing check thresholds,
5428,consul: grrrrr hclfmt test resource file,
5429,consul: able to set pass/fail thresholds on consul service checks,This change adds the ability to set the fields module and module on Consul service check definitions. This is a feature added to Consul v1.7.0 and later.   https://www.consul.io/docs/agent/checks#success-failures-before-passing-critical Nomad doesn't do much besides pass the fields through to Consul. Fixes #6913
5430,changelog entry for MRD bugfix (#8625),
5431,Merge pull request #8624 from hashicorp/docs-cl-cnbridge,docs: add cl entry for connect native bridge mode
5432,update vault integration docs (#8543), update vault integration docs  docs/integrations/vault-integration was a copy of the learn guide. Remove that and move /docs/vault-integration to this location instead fix link fix link Update website/pages/docs/integrations/vault-integration.mdx Co-authored-by: Michael Schurter link Update website/pages/docs/integrations/vault-integration.mdx Co-authored-by: Michael Schurter link Update website/pages/docs/integrations/vault-integration.mdx Co-authored-by: Charlie Voiselle link Update website/pages/docs/integrations/vault-integration.mdx Co-authored-by: Charlie Voiselle link Update website/pages/docs/integrations/vault-integration.mdx Co-authored-by: Charlie Voiselle link Update website/pages/docs/integrations/vault-integration.mdx Co-authored-by: Charlie Voiselle link Update website/pages/docs/integrations/vault-integration.mdx Co-authored-by: Charlie Voiselle link Update website/pages/docs/integrations/vault-integration.mdx Co-authored-by: Charlie Voiselle link  revert accidental deletion  Co-authored-by: Charlie Voiselle link
5433,docs: add cl entry for connect native bridge mode,
5434,csi: missing plugins during node delete are not an error (#8619),"When deregistering a client, CSI plugins running on that client may not get a chance to fingerprint before being stopped. Account for the case where a plugin allocation is the last instance of the plugin and has been deleted from the state store to avoid errors during node deregistration."
5435,e2e: CSI EBS test should expect 2 controllers (#8617),
5436,e2e: CSI EBS version bump to 0.6.0 (#8618),
5437,Merge pull request #8613 from alrs/state-test-errs,nomad/state: fix dropped scaling_policy test errors
5438,nomad/state: fix dropped scaling_policy test errors,
5439,Merge pull request #8601 from hashicorp/build-go1.14.7,build: update from Go 1.14.6 to Go 1.14.7
5440,Merge pull request #8451 from hashicorp/getting-started-on-gcp,Add Getting Started with Nomad on GCP Documentation
5441,Merge pull request #8612 from hashicorp/docs-cherrypick-be0ed7d,Removed version tag
5442,Removed version tag,"In order to prevent staleness, changed driver links to point to releases page rather than a specific version. Co-authored-by: Michael Schurter link"
5443,[docs] Updating install instructions to add packages. (#8534)," Updated install, added packages Apply suggestions from code review  Co-authored-by: Michael Schurter link"
5444,CSI: fix missing ACL tokens for leader-driven RPCs (#8607),The volumewatcher and GC job in the leader can't make CSI RPCs when ACLs are enabled without the leader ACL token being passed thru.
5445,Merge pull request #8608 from hashicorp/docs-release-0.11.4,docs: add v0.11.4 release to master changelog
5446,docs: add v0.11.4 release to master changelog,
5447,Merge pull request #8593 from hashicorp/f-ui/scaling-events-chart,UI: Task group scaling timeline
5448,Merge pull request #8592 from pruett/pruett.search,Implement search via Algolia
5449,Implement search via Algolia,
5450,docs: always use -ignore-system on node drain with CSI (#8606),"Postrun hooks for allocation runners don't currently block the registration of terminal health with the servers, which is what allows system jobs to be drained. So draining nodes with jobs that claim CSI volumes requires the module job to ensure that the postrun hook for service jobs gets a chance to execute."
5451,csi: client RPCs should return wrapped errors for checking (#8605),"When the client-side actions of a CSI client RPC succeed but we get disconnected during the RPC or we fail to checkpoint the claim state, we want to be able to retry the client RPC without getting blocked by the client-side state (ex. mount points) already having been cleaned up in previous calls."
5452,csi: controller unpublish should check current alloc count (#8604),"Using the count of node claims from earlier in the `CSIVolume.Unpublish RPC doesn't correctly account for cases where the RPC was interrupted but checkpointed. Instead, we'll check the current allocation count and status to determine whether we need to send a controller unpublish."
5453,Merge pull request #8603 from hashicorp/f-upgrade-consul-api,deps: upgrade import of consul/api
5454,deps: upgrade import of consul/api,Upgrade our consul/api import to the equivelent of consul@v1.8.1 which includes a bug fix necessary for #6913. If consul would publish a proper api/ submodule tag we could reference that.
5455,Make eq-by helper resilient to a lack of prop since handlebars doesn't short-circuit evaluation,
5456,Key the annotations each loop by annotationKey for stable dom nodes,
5457,Add integration test for line-chart annotation staggering,
5458,"Add missing word ""two"" to test name",Co-authored-by: Buck Doyle link
5459,csi: release claims via csi_hook postrun unpublish RPC (#8580),"Add a Postrun hook to send the module RPC to the server. This may forward client RPCs to the node plugins or to the controller plugins, depending on whether other allocations on this node have claims on this volume. By making clients responsible for running the module RPC (and making the RPC available to a module command), the volumewatcher becomes only used by the core GC job and we no longer need async volume GC from job deregister and node update."
5460,build: update from Go 1.14.6 to Go 1.14.7,Go 1.14.7 fixes CVE-2020-16845 which is not believed to impact Nomad.
5461,Merge pull request #8597 from hashicorp/b-vault-revoke-log-line,vault: log once per interval if batching revocation
5462,csi: update volumewatcher to use unpublish RPC (#8579),"This changeset updates module to take advantage of the module RPC. This lets us eliminate a bunch of code and associated tests. The raft batching code can be safely dropped, as the characteristic times of the CSI RPCs are on the order of seconds or even minutes, so batching up raft RPCs added complexity without any real world performance wins. Includes refactor w/ test cleanup and dead code elimination in volumewatcher"
5463,csi: add unpublish RPC (#8572),This changeset is plumbing for a module command that will be reused by the volumewatcher claim GC as well.
5464,csi: retry controller client RPCs on next controller (#8561),"The documentation encourages operators to run multiple controller plugin instances for HA, but the client RPCs don't take advantage of this by retrying when the RPC fails in cases when the plugin is unavailable (because the node has drained or the alloc has failed but we haven't received an updated fingerprint yet). This changeset tries all known controllers on ready nodes before giving up, and adds tests that exercise the client RPC routing and retries."
5465,Merge pull request #8595 from hashicorp/docs/fix-connect-log-level,docs: fix Consul Connect log_level meta key
5466,Add override for null events collection,This removes some errors in the console if there are no autoscaling events.
5467,Merge pull request #8574 from shishir-a412ed/f-ui-containerd-driver,Add nomad-driver-containerd to nomad UI docs.
5468,vault: log once per interval if batching revocation,"This log line should be rare since:  Most tokens should be logged synchronously, not via this async    batched method. Async revocation only takes place when Vault    connectivity is lost and after leader election so no revocations are    missed. There should rarely be >1 batch (1,000) tokens to revoke since the    above conditions should be brief and infrequent. Interval is 5 minutes, so this log line will be emitted at most    once every 5 minutes.  What makes this log line rare is also what makes it interesting: due to a bug prior to Nomad 0.11.2 some tokens may never get revoked. Therefore Nomad tries to re-revoke them on every leader election. This caused a massive buildup of old tokens that would never be properly revoked and purged. Nomad 0.11.3 mostly fixed this but still had a bug in purging revoked tokens via Raft (fixed in #8553). The nomad.vault.distributed_tokens_revoked metric is only ticked upon successful revocation and purging, making any bugs or slowness in the process difficult to detect. Logging before a potentially slow revocation+purge operation is performed will give users much better indications of what activity is going on should the process fail to make it to the metric."
5469,docs: fix Consul Connect log_level meta key,
5470,UI: Add truncation of rendered search results (#8571),This closes #8549. Thanks to @optiz0r for the bug report. Having the global search attempt to render every returned result is obviously a mistake!
5471,Compare scale events by their UID instead of reference equality,
5472,Use the correct gray for the info details,
5473,Safestr the annotation style property,
5474,Conditionally show the scaling timeline or accordion,
5475,Unit test coverage for the ScaleEventsChart data domain logic,
5476,Integration tests for the ScaleEventsChart component,
5477,Force mock error scale events to be annotations,
5478,New ScaleEventsChart component,"Displays all scale events in the form of an annotated line chart. When annotations are clicked, the timestamp, message, and meta propeties for the event are displayed below the chart."
5479,Add activeAnnotation property to line-chart,
5480,Stagger line chart annotations when they are too close,
5481,Add curve options to line chart,
5482,Test coverage for line chart annotations,
5483,Story for line chart annotations,
5484,Add annotations to the line chart component,
5485,Make the default time series date format for line chart more useful,
5486,Fix review comments.,
5487,Add nomad-driver-containerd to nomad UI docs.,
5488,Merge pull request #8583 from hashicorp/cgbaker-patch-1,Update CHANGELOG.md
5489,Update CHANGELOG.md,Co-authored-by: Mahmood Ali link
5490,Update CHANGELOG.md,Co-authored-by: Mahmood Ali link
5491,Update CHANGELOG.md,label in changelog listed wrong issue number
5492,ignore VAULT_NAMESPACE (#8581),VAULT_NAMESPACE in 0.12.1 and previous versions is already ignored. \n revert change that used it as a default since it will break oss users
5493,csi/e2e: add 2nd controller for node drain testing (#8573),
5494,Add linting for acceptance accessibility audits (#8570),"This makes use of the PR I recently had merged to eslint-plugin-ember-a11y-testing to add linting that ensures an accessibility audit is called at least once per acceptance test file. When I have added linting for component tests, it can apply there too. I added exclusions for the filesystem browser tests, which are covered by behaviors/fs and for the search test which will involve significant overrides to Ember Power Select default templates."
5495,Merge pull request #8555 from hashicorp/remove-size-detail-from-docs-homepage,docs: remove Nomad binary size from README and website.
5496,Handle Scaling Policies in Job Plan endpoint (#8567),"Fixes https://github.com/hashicorp/nomad/issues/8544 This PR fixes a bug where using module always report no change if the submitted job contain scaling. The issue has three contributing factors: 1. The plan endpoint doesn't populate the required scaling policy ID; unlike the job register endpoint 2. The plan endpoint suppresses errors on job insertion - the job insertion fails here, because the scaling policy is missing the required ID 3. The scheduler reports no update necessary when the relevant job isn't in store (because the insertion failed) This PR fixes the first two factors.  Changing the scheduler to be more strict might make sense, but may violate some idempotency invariant or make the scheduler more brittle."
5497,Merge pull request #8569 from hashicorp/d/update-scale-request-params,Docs: Update Reason to Message in the job scale docs
5498,Merge pull request #8568 from hashicorp/b-ui/scale-post-message,Use the correct Message property instead of Reason in scale POST request
5499,Update Reason to Message in the job scale docs,
5500,Use the correct Message property instead of Reason in scale POST request,Also use a more informative default message (one that includes the new count)
5501,Merge pull request #8563 from hashicorp/b-ui/missing-job-distribution-chart-texture,UI: Restore striped texture used in the job distribution bar
5502,Add documentation for job name parameter (#8566),
5503,Change capitalisation,Co-authored-by: Tim Gross link
5504,Add documentation for job name parameter,
5505,Fix placement invocations (#8558),
5506,Change job search navigation to use id (#8560),This fixes #8548. It was a significant oversight to use the name instead of the id!
5507,e2e/csi: update EFS plugin test to use v1.0 (#8562),
5508,Remove now superfluous svg-patterns.js component file,
5509,Move the svg-patterns template into the component dir,
5510,Merge pull request #8551 from hashicorp/f-ui/scaling-observability,UI: Scaling observability
5511,Add scaling observability feature to the changelog,
5512,Add a tooltip to explain the count change icons,
5513,Fix scale and summary adapters to correct live reloading,
5514,Assert that the scale up/down indicator is not shown when the count is null,
5515,Integration tests for the scale-events-accordion component,
5516,Refactor scale events into their own component,
5517,Acceptance tests for scaling events,
5518,Make scale event properties more conditional and serialized correctly,
5519,Present scaling events on the job task group page,
5520,Load and watch the job scale endpoint on the task group page,
5521,Finish modeling behaviors within job scale events,
5522,New fluid height modifier for the json viewer,
5523,Refactor job summary adapter to use the namespace ID base class,
5524,Model job scaling and events in Mirage,
5525,Data modeling for job scale and scale events,
5526,Merge pull request #8554 from hashicorp/docs-vault-revoke-batch,docs: add #8553 to changelog
5527,docs: add #8553 to changelog,Fix some capitalization too.
5528,lifecycle: add allocrunner and task hook coordinator unit tests,
5529,Merge pull request #8443 from hashicorp/x-cnb,consul/connect: add support for bridge networks with connect native tasks
5530,"consul/connect: fixup some spelling, comments, consts",
5531,consul/connect: organize lock & fields in http/grpc socket hooks,
5532,consul/connect: optimze grpc socket hook check for bridge network first,
5533,consul/connect: add support for bridge networks with connect native tasks,"Before, Connect Native Tasks needed one of these to work:  To be run in host networking mode To have the Consul agent configured to listen to a unix socket To have the Consul agent configured to listen to a public interface  None of these are a great experience, though running in host networking is still the best solution for non-Linux hosts. This PR establishes a connection proxy between the Consul HTTP listener and a unix socket inside the alloc fs, bypassing the network namespace for any Connect Native task. Similar to and re-uses a bunch of code from the gRPC listener version for envoy sidecar proxies. Proxy is established only if the alloc is configured for bridge networking and there is at least one Connect Native task in the Task Group. Fixes #8290"
5534,update changelog for enterprise vault namespacesp (#8542),  update changelog for enterprise vault namespacesp   Update CHANGELOG.md   Co-authored-by: Seth Hoenig link Co-authored-by: Seth Hoenig link
5535,docs: remove Nomad binary size from README and website.,The Nomad binary size has been detailed differently in places and is subject to changing almost daily. We should therefore remove this to avoid confusion and misrepresentation.
5536,Merge pull request #8553 from hashicorp/b-vault-revoke-batch,vault: expired tokens count toward batch limit
5537,vault: expired tokens count toward batch limit,"As of 0.11.3 Vault token revocation and purging was done in batches. However the batch size was only limited by the number of non-expired tokens being revoked. Due to bugs prior to 0.11.3, expired tokens were not properly purged. Long-lived clusters could have thousands to millions of very old expired tokens that never got purged from the state store. Since these expired tokens did not count against the batch limit, very large batches could be created and overwhelm servers. This commit ensures expired tokens count toward the batch limit with this one line change: module However, this code was difficult to test due to being in a periodically executing loop. Most of the changes are to make this one line change testable and test it."
5538,Add acceptance test accessibility auditing and fixes (#8455),This introduces ember-a11y-testing to acceptance tests via a helper wrapper that allows us to globally ignore rules that we can address separately. It also adds fixes for the aXe rules that were failing.
5539,Merge pull request #8533 from hashicorp/docs-gh-6987-rebase,Add missing module subcommand in list
5540,Merge pull request #8453 from hashicorp/oss-multi-vault-ns,oss compoments for multi-vault namespaces
5541,Merge pull request #7735 from hashicorp/dependabot/npm_and_yarn/scripts/screenshots/src/https-proxy-agent-2.2.4,build(deps): bump https-proxy-agent from 2.2.1 to 2.2.4 in /scripts/screenshots/src
5542,docs and changelog entry for module (#8537),
5543,e2e: give containers access to dnsmasq DNS (#8536),"By default, Docker containers get /etc/resolv.conf bound into the container with the localhost entry stripped out. In order to resolve using the host's dnsmasq, we need to make sure the container uses the docker0 IP as its nameserver and that dnsmasq is listening on that port and forwarding to either the AWS VPC DNS (so that we can query private resources like EFS) or to the Consul DNS."
5544,Merge pull request #6517 from hashicorp/b-fingerprint-shutdown-race,client: don't retry fingerprinting on shutdown
5545,Merge pull request #7726 from hashicorp/f-update-vagrant-demo-versions,demo: update Nomad and Consul install versions in Vagrant demo.
5546,update nomad to 0.12.1,
5547,demo: update Nomad and Consul install versions in Vagrant demo.,
5548,Merge pull request #8348 from hashicorp/je.hard-pin-deps,📌 Hard Pin Website Dependencies
5549,hard pin and update dependencies,
5550,Update website/pages/docs/commands/acl/index.mdx,Co-authored-by: Matteo Gazzetta link
5551,e2e/bin/run: run & update only attempt to contact linux servers (#8517),
5552,Merge pull request #6531 from hashicorp/docs-markdownlintrc,Added a markdownlintrc
5553,Merge pull request #8531 from hashicorp/gh-8527-docs-updates,docs: update website and changelog to detail GH-8527
5554,Merge pull request #8530 from hashicorp/b-gh-8527,api: add namespace to scaling status GET response object.
5555,oss compoments for multi-vault namespaces,adds in oss components to support enterprise multi-vault namespace feature upgrade specific doc on vault multi-namespaces vault docs update test to reflect new error
5556,Cleanup the gcloud SDK CLI tools installation / authentication steps,
5557,"Just a small doc fix, module subcommand was missing in the list.",
5558,Merge pull request #7234 from derekmarcotte/dm-freebsd,Fix undefined: getEphemeralPortRange error on FreeBSD.
5559,Merge pull request #8513 from hashicorp/security-model-add-recommendations,Add TLS and HTTP Header recommendations to security model documentation
5560,Merge pull request #8514 from sashaaKr/bugfix/cli_ui,change url to client
5561,scheduler: label loops with nested switch statements for effective break (#8528),
5562,docs: add Namespace field to scale status GET example.,
5563,changelog: add entry for GH-8530.,
5564,Merge pull request #8529 from hashicorp/gh-8481-docs-updates,docs: update website and changelog to clarify and detail GH-8481
5565,Merge pull request #8491 from hashicorp/b-gh-8481,api: task groups in system jobs do not support scaling stanzas.
5566,csi: avoid panic in CLI for failed node attachment cleanup (#8525),"If the node API returns an attached volume that doesn't belong to an alloc (because it's failed to clean up properly), module will panic when rendering the response. Also, avoid empty volumes output in node status"
5567,api: add namespace to scaling status GET response object.,
5568,docs: clarify scaling stanza is not supported within system jobs.,
5569,changelog: add entry for GH-8481,
5570,Merge pull request #8521 from hashicorp/docs-hearbeat,docs: s/hearbeat/heartbeat and fix link
5571,"csi: NodePublish should not create target_path, only its parent dir (#8505)","The NodePublish workflow currently creates the target path and its parent directory. However, the CSI specification says that the CO shall ensure the parent directory of the target path exists, and that the SP shall place the block device or mounted directory at the target path. Much of our testing has been with CSI plugins that are more forgiving, but our behavior breaks spec-compliant CSI plugins. This changeset ensures we only create the parent directory."
5572,Merge pull request #8523 from hashicorp/update-website-version,update version for 0.12.1
5573,update version for 0.12.1,
5574,update changelog for GH-7785 (#8522),
5575,docs: s/hearbeat/heartbeat and fix link,"Also fixed the same typo in a test. Fixing the typo fixes the link, but the link was still broken when running the website locally due to the trailing slash. It would have worked in prod thanks to redirects, but using the canonical URL seems ideal."
5576,Merge pull request #8518 from hashicorp/release-0.12.1,update changelog for 0.12.1 release
5577,Update CHANGELOG.md,Co-authored-by: Mahmood Ali link
5578,0.12.2 version and changelog placeholder,
5579,Merge pull request #8520 from hashicorp/br.revert-banner,"Revert ""updating banner for webinar"""
5580,"Revert ""updating banner for webinar""",This reverts commit 2c4a801b7de8857a1cd58c40f1d7ff8be951102c.
5581,test tweaks,
5582,Merge pull request #8515 from hashicorp/b-vagrant-docker,vagrant: fix docker install script
5583,vagrant: fix docker install script,"The key fingerprint doesn't seem to have changed, but something about the old key installation command failed for me and broke vagrant up."
5584,run revoke daemon if connection is successful,
5585,remove test file,
5586,change url to client,
5587,vault: simply make the API call,"Avoid checking if API is accessible, just make the API call and handle when it fails."
5588,Small wording adjustment to prevent stuttering,"Didn't catch this before, but caught it during my read through today."
5589,Link to link to raw_exec driver,
5590,Small style adjustment for security_opt,
5591,Add HTTP Headers settings to the recommendations section,
5592,Add TLS settings to the recommendations section,
5593,Release v0.12.1,
5594,website: remove usage of task network stanza  (#8498),  website: remove usage of task network stanza and add documentation for group network and service stanzas   docs: fix broken link in client config   Update website/pages/docs/job-specification/group.mdx   Co-authored-by: Seth Hoenig link  Update website/pages/docs/job-specification/group.mdx  Co-authored-by: Seth Hoenig link Co-authored-by: Seth Hoenig link
5595,Generate files for 0.12.1 release,
5596,update changelog for 0.12.1 release,
5597,Merge pull request #8508 from hashicorp/b-mrd-purging-spacing,mrd: only output evalID if found
5598,Merge pull request #8509 from hashicorp/b-ui/view-raw-include-region,UI: Include the region query param on the View Raw File link in the task fs explorer
5599,Add changelog entry for view raw file region bug fix,
5600,Include the region query param on the View Raw File link in the task fs explorer,
5601,mrd: only output evalID if found,"If the multi-region job is a periodic/dispatch job, stopping them returns an empty EvalID. This removes some unexpected empty lines."
5602,Merge pull request #8507 from hashicorp/pcmccarron-nomad-webinar-7-23,updating banner for webinar
5603,updating banner for webinar,"webinar scheduled for July 23rd, can roll back to the previous banner afterwards"
5604,command/agent: fix dropped test error (#8504),
5605,move podman out of external task drivers (#8502),  move podman out of external task drivers   document driver capabilities   add redirect from old podman url to new one   fix syntax 
5606,Merge pull request #8501 from hashicorp/docs-snapshot-docs-tweaks,Docs snapshot docs tweaks
5607,changelog node networks change,
5608,docs: snapshot uses consul,
5609,Fix layout of title component elements (#8495),The spacing has been broken for job types that use this yield (parameterised and periodic) since I added the exec button to this template. This could be further refined to allow a more logical grouping of elements where buttons and tags are separate.
5610,docs: expand explanation of task driver capabilities (#8485),
5611,Merge pull request #8500 from hashicorp/docs-no-custom-schedulers,docs: remove mention of custom schedulers
5612,Merge pull request #8489 from hashicorp/d/add-ui-bugfix-to-changelog,Add orphaned job detail page hanging bugfix to changelog
5613,docs: remove mention of custom schedulers,"Not sure if this was meant to imply adding more schedulers to Nomad is easy, or that we plan on adding pluggable schedulers. Either way, neither of those statements is really true unless you really stretch the definitions of ""easy"" and ""plan"". So remove this sentence as I can't imagine it does anything other than confuse people."
5614,docs: create a shortcut for stop_after_client_...,Some code names are too good not to mention.
5615,Merge pull request #8486 from hashicorp/b-node-network-devices-1,honor config.NetworkInterface in NodeNetworks
5616,remove duplicate license info (#8496),
5617,Merge pull request #8494 from hashicorp/b-fix-snapshot-agent-example-config-file,docs: fix snapshot agent example config file syntax and values.
5618,Merge pull request #8493 from lhaig/master,Update snapshot-save.mdx
5619,docs: fix snapshot agent example config file syntax and values.,
5620,Update snapshot-save.mdx,"Fix the nomad operator snapshot command examples. They were missing the ""operator"" option"
5621,agent: task groups in system jobs do not support scaling stanzas.,
5622,Add orphaned job detail page hanging bugfix to changelog,
5623,honor config.NetworkInterface in NodeNetworks,
5624,Add capabilities to task drivers' pages (#8476),
5625,Merge pull request #8477 from hashicorp/b-ui/cross-region-alloc-lifecycle-buttons,UI: Always add the active region as a query param to API requests
5626,Changelog entry for the region qp bug fix,
5627,Test coverage for the deployment adapter action,
5628,Add region coverage to node adapter action tests,
5629,Test all allocation adapter actions with and without a region,This involves a refactor to prevent immense verbosity.
5630,Test region query param for job adapter actions,
5631,Always send region as a query param,
5632,Refactor job adapter test to simplify setting up region and namespace state,
5633,format job init hcl (#8483),
5634,changelog for license apply bug (#8482),
5635,docs: enabled option for nvidia device plugin (#8480),
5636,nvidia: support disabling the nvidia plugin (#8353),
5637,Changelog updates and tweaks (#8479),
5638,Update CHANGELOG with 8460 and 8463 (#8474),
5639,Add specificity to exec allocation URL generation (#8463),"Thanks to @notnoop for this UX improvement suggestion. The allocation’s task group is always known, so it might as well be preselected in the sidebar when the exec window opens. Also, if the task group only has one task, might as well preselect it too."
5640,Fix typo in exec button URL-generation (#8460),"This closes #8422, another bug facilitated by the difficulty of automated testing when opening another window. Thanks to @notnoop for narrowing this down."
5641,remove stalebot (#8466),"Bring Nomad in line with other HashiCorp projects and remove stalebot. We get little value in cleaning up issues automatically this way, it adds extra work for maintainers when we have issues waiting on the backlog that we intend to do, and it presents an unkind experience to issue contributors who get their issues closed by an impersonal bot."
5642,changelog for host_network bug (#8469),
5643,Merge pull request #8467 from hashicorp/c-golang-1.14.6,Use golang 1.14.6
5644,update changelog,
5645,Bump lodash from 4.17.14 to 4.17.19 in /ui (#8449),Bumps link from 4.17.14 to 4.17.19. - link - link
5646,Use golang 1.14.6,"Pick up fixes link, specially the one where reflect.DeepEqual returns true even if values don't match, affecting our tests integrity."
5647,changelog item for MRD canary bugfix (#8465),
5648,scheduler: DesiredCanaries can be set on every pass safely,"The reconcile loop sets module only on the first pass through the loop and if the job is not paused/pending. In MRD, deployments will make one pass though the loop while ""pending"", and were not ever getting module set. We can't set it in the initial module constructor because the first pass through setting up canaries expects it's not there yet. However, this value is static for a given version of a job because it's coming from the update stanza, so it's safe to re-assign the value on subsequent passes."
5649,refactor: make it clear where we're accessing dstate,"The field name module contains a map of module, which makes it a little harder to follow state updates when combined with inconsistent naming conventions, particularly when we also have the state store or actual modules in scope. This changeset changes all uses to module so as not to be confused with actual TaskGroups."
5650,structs: Job.Validate only allows stop_after_client_disconnected on batch and service jobs (#8444),  nomad/structs/structs: add to Job.Validate   Update nomad/structs/structs.go   Co-authored-by: Mahmood Ali link   nomad/structs/structs: match error strings to the config file   nomad/structs/structs_test: clarify the test a bit   nomad/structs/structs_test: typo in the test error comparison   Co-authored-by: Mahmood Ali link
5651,Merge pull request #8461 from hashicorp/backport-ent-changes-20200720,Back-port Some Enterprise changes
5652,Remove unused state.TestInitState,
5653,minor tweaks from Ent,
5654,enterprise specific state store objects,
5655,Merge pull request #8458 from hashicorp/docs-8457,docs: document enterprise upgrade bug #8457
5656,Add missing period to account.json warning,
5657,Remove a potential for accidently running the SSH tunnels in server VM,"If a user is just clicking / copy-pasting, they could accidently think they next gcloud commands should be run inside the server VM. Removing that extra bit of information to make accessing the UIs as simple as possible. Moreover, the local commands on the cloud shell should just work without needing to SSH into the server VM."
5658,docs: document enterprise upgrade bug #8457,
5659,Remove external load balancer configuration,
5660,Use SSH tunnels instead of a public load balancer for accessing the cluster,"It was tricky to get the web preview expierince to work smoothly on non-standard HTTP ports. But, I was able to figure out the link the web preview button uses under-the-hood, and add custom query string params."
5661,Refactor setupLoggers,
5662,Set AgentShutdown,
5663,Fix pro tags,
5664,Add full links to the packer step,
5665,"Ensure to use the ""project ID"" terminology instead of ""project name""","Project IDs and project names are typically the same, but they are separate things. Now also matches to the wording in previous steps."
5666,Change billing account step wording,
5667,"Generate random project ID in tutorial command, change command order",Includes a link to the GCP docs for a project overview if the user is new to the platform.
5668,Update README.md,"Fix spelling, sprinkle in assorted words"
5669,Update README.md,Minor syntax tweaks for better secrets posture.
5670,Remove TODO from open in cloud shell button,
5671,Remove the temporary cloudshell_git_branch query string in button,Will now use the default git branch for the repository
5672,Add a final Conclusion section,Includes steps to destroy the demo infrastrucure.
5673,Use a full path link in the Next Steps section,This will make the link actually work when using the cloud shell.
5674,Adjust the CLI section,"Cleans up the wording, and points to the Next Steps section for example commands to avoid redundancy."
5675,Add project and credentials CLI vars to Terraform commands,"This will automatically pass along the environment variables set in a previous step, and prevent users from manually needed to type in the values in the CLI."
5676,Few minor adjustment to the Terraform steps,
5677,Remove last lingering console output placeholder,"So the comand is easily copyable, and consistent with the rest. However, this is probably not totally necessary in the cloud shell itself since the gcloud command will likely been initialized already."
5678,Ensure all commands in terraform/gcp/README.md are easily copyable,"Since this tutorial also links to a GCP cloud shell tutorial, we want to make sure all the command blocks are easily copyable to make that expierince smooth."
5679,Few minor adjustments to the terraform/gcp/README.md, Adds the terraform deployment step. Renames the Packer-specific section.
5680,Fixup open in cloud shell button query string options," Fixes releative path to README.md tutorial, so it hopefully opens now. Enables only the shell now when opening the tutorial."
5681,Update README.md,
5682,Update terraform/README.md,
5683,Create terraform/gcp/README.md,
5684,Create terraform/gcp/Makefile,To help make developing / testing this module much easier in the future.
5685,Create terraform/gcp/env/us-east/main.tf,
5686,Create terraform/gcp/modules/hashistack/hashistack.tf,"This module is based on the current AWS and Azure configurations, with a few tiny GCP-specific modifications:  Defaults to only allow your Terraform's host external IP address, which can be optionally disabled. Otherwise, the UIs/APIs are exposed on the internet. Exposes the Vault UI and API through the load balancer. Uses GCP oslogin to facilitate VM SSH access, without an external SSH IP for all instances. Provides optional way to enable preemptible VM instances to save money."
5687,"Cleanup, enable the Vault UI, and bind to all IPv4 addresses in the config","This make the config cleaner, and allows Vault to actually be accessible through a load balancer."
5688,"If $CLOUD is ""gce"" for auto-join, use different metadata curl command",
5689,Create terraform/shared/config/consul_gce.service,
5690,Create terraform/gcp/packer.json,
5691,mrd: reconcile should treat pending deployments as paused (#8446),"If a job update includes a task group that has no changes, those allocations have their version bumped in-place. The ends up triggering an eval from module when it verifies their health. Although this eval is a no-op, we were only treating pending deployments the same as paused when the deployment was a new MRD. This means that any eval after the initial one will kick off the deployment, and that caused pending deployments to ""jump the queue"" and run ahead of schedule, breaking MRD invariants and resulting in a state with all regions blocked. This behavior can be replicated even in the case of job updates with no in-place updates by patching module to inject a spurious no-op eval. This changeset fixes the behavior by treating pending deployments the same as paused in all cases in the reconciler."
5692,Merge pull request #8437 from angrycub/d-reschedule-in-deploys,[docs] Rescheduling does happen during deployments
5693,Merge pull request #8435 from hashicorp/b-atomic-job-register,Atomic eval insertion with job (de-)registration
5694,Merge pull request #8441 from hashicorp/build-go1.14.5,build: update from Go 1.14.4 to Go 1.14.5
5695,Merge pull request #8383 from hashicorp/docs-security-model-followup,Revise security model feedback
5696,build: update from Go 1.14.4 to Go 1.14.5,Go 1.14.4 contains two CVEs which are fixed in 1.14.5:  link link  Upon consideration with HashiCorp security these CVEs are considered low severity for Nomad and no new security fix binary will be released.
5697,Merge pull request #8436 from kneufeld/master,fixed typo in output
5698,comment compat concern in fsm.go,
5699,no need to handle duplicate evals anymore,
5700,only set args.Eval after all servers upgrade,"We set the Eval field on job (de-)registration only after all servers get upgraded, to avoid dealing with duplicate evals."
5701,time.Now().UTC().UnixNano() -> time.Now().UnixNano(),
5702,[docs] Reschedule does happen during deployments,
5703,fixed typo in output (#1),
5704,Atomic eval insertion with job (de-)registration,"This fixes a bug where jobs may get ""stuck"" unprocessed that dispropotionately affect periodic jobs around leadership transitions. When registering a job, the job registration and the eval to process it get applied to raft as two separate transactions; if the job registration succeeds but eval application fails, the job may remain unprocessed. Operators may detect such failure, when submitting a job update and get a 500 error code, and they could retry; periodic jobs failures are more likely to go unnoticed, and no further periodic invocations will be processed until an operator force evaluation. This fixes the issue by ensuring that the job registration and eval application get persisted and processed atomically in the same raft log entry. Also, applies the same change to ensure atomicity in job deregistration. Backward Compatibility We must maintain compatibility in two scenarios: mixed clusters where a leader can handle atomic updates but followers cannot, and a recent cluster processes old log entries from legacy or mixed cluster mode. To handle this constraints: ensure that the leader continue to emit the Evaluation log entry until all servers have upgraded; also, when processing raft logs, the servers honor evaluations found in both spots, the Eval in job (de-)registration and the eval update entries. When an updated server sees mix-mode behavior where an eval is inserted into the raft log twice, it ignores the second instance. I made one compromise in consistency in the mixed-mode scenario: servers may disagree on the eval.CreateIndex value: the leader and updated servers will report the job registration index while old servers will report the index of the eval update log entry. This discripency doesn't seem to be material - it's the eval.JobModifyIndex that matters."
5705,MRD: all regions should start pending (#8433),"Deployments should wait until kicked off by module so that we can assert that all regions have a scheduled deployment before starting any region. This changeset includes the OSS fixes to support the ENT work. module has no more callers in OSS, so remove it here."
5706,changelog for MRD datacenters validation (#8429),
5707,multiregion: allow empty region DCs (#8426),"It's supposed to be possible for a region not to have module set so that it can use the job's module field. This requires that operators use the same DC name across multiple regions, but that's the default client configuration."
5708,Merge pull request #7042 from hashicorp/docs-healthy-deadline,docs: clarify healthy/progress_deadline relationship
5709,Change edition to Octane (#8418),"This updates the Ember edition setting to Octane, which I removed from #8319 because it required the template-only Glimmer components setting to be turned on, which this does. These changes to templates accommodate that setting."
5710,Merge pull request #8412 from hashicorp/b-ui/prefix-run-button,UI: Filter out new records from the job list page
5711,Changelog addition,
5712,Filter out new records from the job list page,"When a prefix is set and the run job button is clicked, the new job causes an error because it has no name yet."
5713,Merge pull request #8413 from hashicorp/b-ui/namespaces-after-token,UI: Reset the system and refetch namespaces with every token change
5714,Changelog additions,
5715,Reset the system and refetch namespaces with every token change,
5716,Merge pull request #8419 from hashicorp/docs-cl-vault-id-checks,docs: update changelog for vault policies lookup fix
5717,docs: update changelog for vault policies lookup fix,
5718,Merge pull request #8417 from hashicorp/docs-docker-kill-signal,docs: clarify kill_signal default for docker
5719,"fix panic, but poststart is still stalled",
5720,Merge pull request #8335 from hashicorp/f-cnative-host-e2e,e2e: add tests for connect native
5721,e2e: connect jobID code golf,
5722,Merge pull request #8333 from hashicorp/b-test-tweak-20200701,tests: avoid os.Exit in a test
5723,nomad: recanonicalize network after connect hook (#8407), nomad: recanonicalize network after connect hook
5724,docs: clarify kill_signal default for docker,"Before docker, the only default was module for module. The docker driver however defaults to module, and we should document as such. Fixes #7140"
5725,Merge pull request #8416 from hashicorp/jrasell-minor-scaling-docs-fixes,docs: fix minor incorrect syntax in autoscaling plugin docs.
5726,docs: fix minor incorrect syntax in autoscaling plugin docs.,"This changes fixes a syntax error in the autoscaling apm plugin docs as well as updates the scaling stanza doc. The stazna wording implied its use was only for external autoscalers, whereas it also is used by the UI."
5727,Add #8409 to changelog (#8414),
5728,Fix client allocations table heading order (#8409),This closes #8408. Thanks to @gmichalec-pandora for letting us know about this.
5729,Merge pull request #8405 from kaybr01/patch-1,Update preemption.mdx
5730,Add explicit this to templates (#8388),"This is the result of running the no-implicit-this-codemod, some manual fixes, and the addition of a linting rule to prevent future ambiguity."
5731,Update template linting and fix missed curly invocations (#8382),"This includes fixes for newer template lint rules that came along with updating that dependency, which was necessary to be able to use the no-curly-component-invocation rule. It also updates some curly invocations that I missed in #8075."
5732,Merge pull request #8406 from hashicorp/post-release,Post release: return to dev
5733,updated changelog for 0.12.1,
5734,version to 0.12.1-dev,
5735,Merge branch 'release-0.12.0' into post-release,
5736,version to 1.0.0-dev (!!!!),
5737,Update to Ember 3.16/Data 3.12 (#8319),"This updates to Ember 3.16 but leaves Ember Data at 3.12 so we don’t need to use the model fragments beta. It can be reviewed on a commit-by-commit basis: blueprint updates, fixes for test failures, and the removal of now-deprecated partials. It’s not a true update to Octane as that would involve turning on template-only components by default, which breaks various things. We can accomplish that separately and then add the edition setting to package.json."
5738,version updates for 0.12.0,
5739,website: updates for 0.12 release (#8397),  Updates for 0.12 release   Update SVGs to align to styles   Updates alert banner for blog   Co-authored-by: Brandon Romano link
5740,Update preemption.mdx,Typo
5741,Merge pull request #7733 from jorgemarey/b-vault-policies,Fix get all vault token policies
5742,use latest podman release (#8403),
5743,docs: fix markdown syntax in job stop page (#8401),
5744,Fix typo in volume HTTP API documentation (#8396),
5745,Merge pull request #8400 from hashicorp/cgbaker-patch-1,[docs] more specific link in enterprise docs
5746,[docs] more specific link in enterprise docs,
5747,Merge pull request #8399 from hashicorp/c-update-ent325,"Update Enterprise docs page, add new features"
5748,Update website/pages/docs/enterprise/index.mdx,Those pesky caps Co-authored-by: Chris Baker link
5749,"Update Enterprise docs page, add new features",
5750,Merge pull request #8398 from hashicorp/docs-autoscaler-touchups,docs: fix broken links and formatting of the autoscaler docs
5751,docs: fix broken links and formatting of the autoscaler docs,
5752,Release v0.12.0,
5753,Generate files for 0.12.0 release,
5754,added release date to 0.12.0 CHANGELOG,
5755,Merge branch 'master' of github.com:hashicorp/nomad into release-0.12.0,
5756,Merge pull request #8394 from hashicorp/docs-some-cl-entries,docs: some additional CL entries
5757,docs: update changelog with note for go modules switch,
5758,docs: update changelog with some connect fixes,
5759,docs: add CNI and host_network docs (#8391),Co-authored-by: Seth Hoenig link
5760,Merge pull request #8392 from hashicorp/f-infer-cn-taskname,consul/connect: infer task name for native service if possible
5761,Merge pull request #8338 from jorgemarey/b-fix-sidecar-task,Change connectDriverConfig to be a func
5762,consul/connect: infer task name in service if possible,"Before, the service definition for a Connect Native service would always require setting the module parameter. Now, that parameter is automatically inferred when there is only one task in the task group. Fixes #8274"
5763,add poststart hook to task hook coordinator & structs,
5764,fix swapped old/new multiregion plan diffs (#8378),The multiregion plan diffs swap the old and new versions for each region when they're edited (rather than added/removed). The module function call incorrectly reversed its arguments for existing regions.
5765,fix multiregion plan output flags (#8375),"The call to render the output diff swapped the module and module bool parameters, resulting in dropping the diff output in multi-region plans but not single-region plans."
5766,fix volume deregister -force params in API (#8380),"The CSI module flag was using the documented parameter module everywhere except in the API, where it was incorrectly passing module as the query parameter."
5767,Merge pull request #8384 from hashicorp/docs-csi-api,correcting CSI Plugins API sample response
5768,correcting CSI Plugins API sample response,neither module nor module contain module
5769,address some review feedback,
5770,Merge pull request #8315 from hashicorp/autoscaler-docs-migration,docs: migration of Nomad Autoscaler docs with cluster updates.
5771,Change connectDriverConfig to be a func,
5772,Release v0.12.0-rc1,
5773,Generate files for 0.12.0-rc1 release,
5774,Merge pull request #8372 from hashicorp/b-make-lint-happy,fix spelling error to make linter happy
5775,fix spelling error to make linter happy,
5776,ar: support opting into binding host ports to default network IP (#8321),  ar: support opting into binding host ports to default network IP   fix config plumbing   plumb node address into network resource   struct: only handle network resource upgrade path once 
5777,learn -> tutorials in subnav,
5778,Merge pull request #8369 from hashicorp/docs-security-model,Add security model document
5779,docs: note MRD is beta and removing regions doesn't work (#8370),
5780,fix region flag vs job region handling in plan/submit (#8347),
5781,Add security model document,
5782,Merge pull request #8360 from hashicorp/b-8355-better-scaling-validation,better error handling around Scaling->Max
5783,reconcile should not overwrite unblocking state (#8349),"Pre-0.12.0 beta, a deployment was considered ""complete"" if it was successful. But with MRD we have ""blocked"" and ""unblocking"" states as well. We did not consider the case where a concurrent alloc health status update triggers a module call on a deployment that's moved from ""blocked"" to ""unblocking"" (it's a small window), which caused an extra pass thru the module logic in module and triggered an error when later transitioning to ""successful"". This changeset makes sure we don't overwrite that status."
5784,Merge pull request #8364 from hashicorp/b-326-multiregion-version-sync,allow version skipping in Job.Register to support version syncing for MRD
5785,"modified state store to allow version skipping, to support multiregion version syncing also, passing existing version into multiregionRegister to support this",
5786,nomad: fix dropped test error (#8356),
5787,Merge pull request #8363 from hashicorp/cgbaker-patch-1,Update plugins.mdx
5788,Update plugins.mdx,bad example JSON response
5789,"better testing of scaling parsing, fixed some broken tests by api",changes
5790,fixed api tests for changes,
5791,added changelog entry for #8360,
5792,"changes to make sure that Max is present and valid, to improve error messages","* made api.Scaling.Max a pointer, so we can detect (and complain) when it is neglected * added checks to HCL parsing that it is present * when Scaling.Max is absent/invalid, don't return extraneous error messages during validation * tweak to multiregion handling to ensure that the count is valid on the interpolated regional jobs resolves #8355"
5793,added scaling->min default discussion to group->count documentation,
5794,Merge pull request #8352 from hashicorp/tests-deflake-freeport,deflake some commands package tests
5795,tests: make testagent shutdown idempotent,Avoid double freeing ports if an agent.Shutdown() is called multiple times.
5796,Patch bump internal hashicorp dependencies (#8300),  Bump internal hashicorp dependencies   Trigger CI   Add pointless changes to trigger CI   Use next@canary   Fixer upper   Update package-lock.json   Bump dependencies to resolve issues with mdx permalink styles 
5797,CHANGELOG agent host (#8346),
5798,Merge pull request #8342 from hashicorp/rm-externalised-demos,demos: remove externalized demo files
5799,demos: remove externalized demo files,These have been moved into github.com/hashicorp/nomad-connect-demos
5800,Merge pull request #8341 from hashicorp/docs-changelog-GH-8311,changelog for sidecar bug
5801,changelog for sidecar bug,
5802,doc: add api docs to agent page (#8339),  doc: add api docs to agent page   docs: add a sentence about redaction 
5803,command/debug: use the correct env vars for Consul token (#8332),
5804,api: module new /agent/host (#8325),"  command/agent/host: collect host data, multi platform   nomad/structs/structs: new HostDataRequest/Response   client/agent_endpoint: add RPC endpoint   command/agent/agent_endpoint: add Host   api/agent: add the Host endpoint   nomad/client_agent_endpoint: add Agent Host with forwarding   nomad/client_agent_endpoint: use findClientConn   This changes forwardMonitorClient and forwardProfileClient to use findClientConn, which was cribbed from the common parts of those funcs.   command/debug: call agent hosts   command/agent/host: eliminate calling external programs "
5805,e2e: add tests for connect native,"Adds 2 tests around Connect Native. Both make use of the example connect native services in https://github.com/hashicorp/nomad-connect-examples One of them runs without Consul ACLs enabled, the other with."
5806,podman documentation (#8331),  podman documentation   capitalizations 
5807,Merge pull request #8334 from hashicorp/docs-all-namespaces-queries,Document namespace flag and API parameter
5808,document namespace option in CLI docs,
5809,tests: avoid os.Exit in a test,
5810,document namespace=* in relevant APIs,
5811,Merge pull request #8314 from hashicorp/f-ui/scaling-ux,UI: Scaling UI UX Improvements
5812,csi: add -force flag to volume deregister (#8295),"The module command currently returns an error if the volume has any claims, but in cases where the claims can't be dropped because of plugin errors, providing a module flag gives the operator an escape hatch. If the volume has no allocations or if they are all terminal, this flag deletes the volume from the state store, immediately and implicitly dropping all claims without further CSI RPCs. Note that this will not also unmount/detach the volume, which we'll make the responsibility of a separate module command."
5813,use specific sha (#8329),  use specific sha   use submodule version 
5814,add hclog vet to check step (#8328),  add hclog vet to check step   ... 
5815,docs: add autoscaler plugin ACL details and SIGHUP mention.,
5816,docs: migration of Nomad Autoscaler docs with cluster updates.,Co-authored-by: Chris Baker link
5817,Merge pull request #8324 from hashicorp/f-ui/persist-log-stream,UI: Persist the log stream/mode setting to localStorage
5818,Persist the log stream/mode setting to localStorage,
5819,Merge pull request #8322 from hashicorp/website-list-beta2-on-downloads,updated website to reference beta2 on the downloads page
5820,updated website to reference beta2 on the downloads page,
5821,Change back to released Ember Power Select (#8317),"Thanks to @cibernox’s isActive clarification in cibernox/ember-power-select#1374, this replaces the use of a hacked Power Select API with a deliberate blurring of the trigger element, which is equivalent to setting the element to inactive."
5822,Fix layering so logo is clickable (#8320),The CSS I added in #8249 to make the search be properly centred also made the logo unclickable as it was hidden behind the centred element! This makes the logo stay above the search container.
5823,StepperInput UX improvements, Click label to focus input Focusing input selects value Entering an invalid value reverts selection Entering a fractional number floors the value
5824,Label buttons that only have icons for markup,
5825,Reset font weight for tooltips,
5826,Add tooltips to scaling controls,
5827,Merge pull request #8311 from hashicorp/b-terminate-sidecars-after-main,allocrunner: terminate sidecars in the end
5828,removes nvidia import from docker test (#8312),
5829,Merge pull request #8309 from hashicorp/b-docs-index-redirect,handle redirect index.html
5830,allocrunner: terminate sidecars in the end,This fixes a bug where a batch allocation fails to complete if it has sidecars. If the only remaining running tasks in an allocations are sidecars - we must kill them and mark the allocation as complete.
5831,Merge pull request #8310 from hashicorp/docs-redirect-job-spec,[docs] cherry-pick website redirect
5832,website redirect for /docs/job-specification/index.html,
5833,handle redirect index.html,"We moved away from supporting module, so now we need to have explicit redirects for them"
5834,docs: fix typo in upgrade instructions (#8301),"The suggested plugin configuration to re-enable Docker volumes was erroneously using the singlular module instead of the correct module, making the client fail to parse the configuration and causing it not to start."
5835,Fix environment variable for NOMAD_ADDR (#8302),
5836,Merge pull request #8305 from hashicorp/docs-website-redirect,added redirect for /docs/index.html
5837,added redirect for /docs/index.html,
5838,Merge pull request #8292 from shishir-a412ed/dead_tests,Remove dead tests.
5839,allow ClusterMetadata to accept a watchset (#8299),  allow ClusterMetadata to accept a watchset   use nil instead of empty watchset 
5840,Merge pull request #8298 from hashicorp/tests-fix-20200626,tests: non-CAS should be updated
5841,tests: non-CAS should be updated,
5842,Merge pull request #8296 from hashicorp/b-tests-cleanup-20200625,Cleanup for command package tests
5843,docs: update deployment guide title (#7381),
5844,docs: updated docs on Vault TLS settings (#7097),Co-authored-by: Ali Ibrahim link
5845,docs: runtime interpolation for AWS (#7859),Co-authored-by: Ali Ibrahim link
5846,docs: add link to golang api GoDoc webpage (#7174),
5847,docs: clarify healthy/progress_deadline relationship,"Validation code already enforces this, but I think documenting it makes it more immediately clear how the 2 settings interact."
5848,tests: avoid using os.Setenv for tokens,
5849,tests: use flagAddress instead of process env,"Using Setenv may can cause test interference, where a test may accidentally pick up value set by another test."
5850,Merge pull request #8017 from hashicorp/f-change-sched-updated,Set Updated to true for all non-CAS requests on v1/operator/scheduler/configuration
5851,Merge pull request #8233 from bmenn/master,Fixes Nvidia plugin configuration docs (#7711)
5852,Merge pull request #8223 from hashicorp/f-multi-network-validate-ports,core: validate port numbers are < 65535
5853,Merge pull request #8271 from hashicorp/f-comment-init-check-stanza,Comment out default Consul check; Update URLs
5854,Merge pull request #7752 from hashicorp/docs-update-datadog-agent-link,docs: update Datadog agent telemetry link to rewritten version.
5855,Add notes.,
5856,Add multiple substring highlights for search (#8287),"The fuzzy search highlighting was ignoring everything after the first substring that was matched, this now highlights all substrings."
5857,Remove dead tests.,
5858,command: correctly show host IP in ports output /w multi-host networks (#8289),
5859,Merge pull request #8254 from EnMod/nq.add-betterhelp-casestudy-quote,[Website] Add quote for CaseStudy carousel from BetterHelp
5860,doc: nomad debug cli (#8278),  doc: nomad debug cli   CHANGELOG   website/data/docs-navigation: add debug to navigation   contributing/checklist-command: add website nav link to checklist 
5861,docs: spellcheck fix for multiregion (#8286),
5862,new command: nomad debug captures a debug archive of cluster state (#8244), command/debug: build a local archive of debug data command/debug: query consul and vault directly command/debug: include pprof CPUProfile Trace and goroutine command/debug: trap signals and close the monitor requests
5863,always shutdown test server on test cleanup,
5864,Merge pull request #8283 from hashicorp/b-ui/text-alignment-view-raw-file,"UI: Fix text alignment for the ""view raw file"" button/link on the fs file viewer"
5865,Merge pull request #8281 from hashicorp/b-ui/fix-log-streaming,UI: Revert AbortController polyfill to use native AbortController on logs page
5866,Merge pull request #8280 from hashicorp/f-ui/wide-monitor-logs,UI: Make monitor log output full-width
5867,Merge pull request #8279 from hashicorp/b-ui/remove-safari-special-case,UI: Fix monitor in Safari
5868,Improve global search UX (#8249),"This updates the look of the search control, adds a hint about the slash shortcut, adds highlighting of fuzzy search results, and addresses a few edge case UX failures. It moves to using a fork of Ember Power Select to handle an edge case where pressing escape would put the control in an undesirable active-but-not-open state."
5869,Merge pull request #8261 from hashicorp/f-disable-host-volume-by-default,Restrict Host filesystem access in Docker and Qemu
5870,add github issue links,[ci skip]
5871,Remove line-height override that breaks text alignment for anchors that look like buttons,
5872,Revert AbortController polyfill to use native AbortController,
5873,Make monitor log output full-width,
5874,Remove special-casing of Safari to force use of a PollLogger,
5875,Merge pull request #8270 from hashicorp/docs-algolia-tweak,Tweaks for algolia job
5876,use node 12,
5877,Merge pull request #8277 from hashicorp/docs-tweak-changelog,docs: tweak changelog wording for multiregion deployments
5878,update compiled static assets,
5879,docs: tweak changelog wording for multiregion deployments,
5880,scheduler: do network feasibility checking for system jobs (#8256),
5881,Merge pull request #8272 from hashicorp/docs-cl-connect-native,docs: update changelog for connect native
5882,docs: update changelog for connect native,
5883,Fix link to scheduler page,
5884,Comment out default Consul check; Update URLs,Having an active check in the sample job causes issues with testing deployments in environments that are not integrated with Consul. This negatively impacts some of the getting-started experiences. Commenting out the check allows deployments to proceed successfully but leaves it in the sample job for convenience. Made a drive-by fix to all of the URLs in the jobfile
5885,Tweak algolia scripts,Avoid running algolia job in forks or enterprise private repositories
5886,website: declare dotenv dependency,
5887,multiregion: add support for 'job plan' (#8266),"Add a scatter-gather for multiregion job plans. Each region's servers interpolate the plan locally in module but don't distribute the plan as done in module. Note that it's not possible to return a usable modify index from a multiregion plan for use with module. Even if we were to force the modify index to be the same at the start of module the index immediately drifts during each region's deployments, depending on events local to each region. So we omit this section of a multiregion plan."
5888,multiregion validation fixes (#8265),Multi-region jobs need to bypass validating counts otherwise we get spurious warnings in Job.Plan.
5889,Merge pull request #8201 from pruett/pruett.algolia-index-ci,Stub Algolia indexing job via CI
5890,docs: fix broken link in server config (#8267)," missing the trailing module consistency with the code span minor grammar fix (""is"" to ""are"")"
5891,Merge pull request #8011 from hashicorp/f-cnative-host,consul/connect: implement initial support for connect native
5892,connect/native: doc and comment tweaks from PR,
5893,connect/native: check for pre-existing consul token,
5894,connect/native: fixup command/agent/consul/connect test cases,
5895,docs: update docs for host path flags,
5896,add a allowlist for qemu image paths,
5897,Merge pull request #8260 from hashicorp/docs-fix-license-index,docs: fix license command index page formatting.
5898,docs: fix license command index page formatting.,
5899,Update job and config via make,
5900,Utilize Next.js env variable conventions,
5901,Setup Algolia indexing job in CI,
5902,Merge pull request #8092 from hashicorp/je.website-maintenance-6-1-20,🌷 Website Maintenance
5903,Dependency updates and improvements,
5904,Merge pull request #8257 from hashicorp/docs-port-comments,docs: add comments to structs.Port struct
5905,multiregion: job stop across regions with -global flag (#8258),Adds a module flag for stopping multiregion jobs in all regions at once. Warn the user if they attempt to stop a multiregion job in a single region.
5906,docs: add comments to structs.Port struct,
5907,core: validate port numbers are <= 65535,The scheduler returns a very strange error if it detects a port number out of range. If these would somehow make it to the client they would overflow when converted to an int32 and could cause conflicts.
5908,Merge pull request #8255 from hashicorp/fix-license-get-help,cli: fix license get command help Synopsis text.
5909,docker: disable host volume binding by default,
5910,connect/native: update connect native hook tests,
5911,connect/native: give tls files an extension,
5912,cli: fix license get command help Synopsis text.,
5913,consul/connect: split connect native flag and task in service,
5914,Add quote for CaseStudy carousel from BetterHelp,
5915,Merge pull request #8029 from hashicorp/alexandrafreeman-community-discuss-updates,Update resources index.jsx
5916,Update index.jsx,"Per Slack conversation on April 30 with Schmichael and Gale. Aligning navigation verbiage with other .io sites (Community instead of Resources). Page updates remove Gitter and Mailing List links to direct users to the Forum. Also changed some header content and positioning. If this all doesn't work based on full content of page, happy to brainstorm a better approach. Thank you for reviewing!"
5917,Merge pull request #8031 from BijanJohn/reschedule_delay_requirement,add notes about delay requirement for reschedule
5918,Merge pull request #8245 from rkettelerij/patch-3,[Docs] Add missing CLI flag to Nomad snapshot save example
5919,Merge pull request #8246 from hashicorp/vendor-libcontainer-20200622,Upgrade libcontainer
5920,Update github.com/syndtr/gocapability,runc requires a more recent version
5921,Upgrade libcontainer dependency,Upgrade libcontainer dependency to pick up fix for CVE-2019-19921 .
5922,Add missing CLI flag to Nomad snapshot example,
5923,consul/connect: add support for running connect native tasks,"This PR adds the capability of running Connect Native Tasks on Nomad, particularly when TLS and ACLs are enabled on Consul. The module stanza now includes a module parameter, which can be set to the name of task that backs the Connect Native Consul service. There is a new Client configuration parameter for the module stanza called module. Like module the default value is true, but recommended to be disabled in production environments. When enabled, the Nomad Client's Consul TLS information is shared with Connect Native tasks through the normal Consul environment variables. This does NOT include auth or token information. If Consul ACLs are enabled, Service Identity Tokens are automatically and injected into the Connect Native task through the CONSUL_HTTP_TOKEN environment variable. Any of the automatically set environment variables can be overridden by the Connect Native task using the module stanza. Fixes #6083"
5924,changelog for CSI volume context (#8243),
5925,Remove non-classic use of this.set (#8242),This will fix a linting error introduced in 068ad06.
5926,csi: add VolumeContext to NodeStage/Publish RPCs (#8239),"In #7957 we added support for passing a volume context to the controller RPCs. This is an opaque map that's created by module or, in Nomad's case, in the volume registration spec. However, we missed passing this field to the module and module RPC, which prevents certain plugins (such as MooseFS) from making node RPCs."
5927,Merge pull request #8241 from hashicorp/docs-agent-unresponsive-note,Docs: note agent unresponsive
5928,docs: note 0.11.3 fixes a critical issue,
5929,Merge pull request #8227 from hashicorp/d-ui/changelog-entries,UI changelog entries for 0.12
5930,Add linting for classic decorator (#8182),This completes an installation step I missed when making #8144 and marks classes that are using the EmberObject APIs as classic.
5931,Merge pull request #8238 from hashicorp/pruett.update-banner-text,Update banner contents
5932,Update banner contents,
5933,Merge pull request #8237 from hashicorp/notnoop-followup-20200622,Assorted follow ups
5934,changelog: 0.11.3 fixes a unresponsiveness bug,
5935,this is OSS,
5936,accomodate enterprise specific commands,module is an Enterprise specific command
5937,testS: add all namespaces test for allocations,
5938,reverted current version back to 0.11.3,
5939,added download link for 0.12.0-beta1,
5940,docs: fixes Nvidia plugin configuration docs (#7711),
5941,Merge pull request #8231 from hashicorp/yishan-update-nomad-resources-website-page,Updated Nomad Resources Page
5942,Fix flaky task-group-row test. (#8221),"Sometimes a job would be created with a running deployment which made the increment button disabled. While I was finding the root cause, I also changed the waitUntil pattern to match the StepperInput technique which is more resilient to code changes."
5943,Added missing HashiTalk from Dingo,
5944,Fixed opening sentence typo,
5945,Updated Nomad Resources Page, Changed boilerplate intro copy to match messaging in approved 0.12 announcement copy launching next Monday Added Virtual Talks section with each of their Youtube links and year timestamps from this year Updated the Who Uses Nomad section in alignment with Nomad GitHub READDME in ordering Added new customer talks such as Cloudflare and yearly timestamps to each of them Removed outdated Community Tools and Integrations section
5946,Merge pull request #8228 from hashicorp/make-sync,module
5947,Merge branch 'master' into d-ui/changelog-entries,
5948,module,
5949,Merge pull request #8226 from hashicorp/docs-changelog-net012,docs: add CNI and MIN to changelog for 0.12-beta1
5950,UI changelog entries for 0.12,
5951,docs: add CNI and MIN to changelog for 0.12-beta1,
5952,Merge pull request #8208 from hashicorp/f-multi-network,multi-interface network support
5953,Merge pull request #8218 from hashicorp/b-ui/plugin-allocation-healthy-flakiness,UI: Add cycling to factory healthy flags
5954,Merge pull request #8217 from hashicorp/revert-5906-b-alloc-stale-updates,"Revert ""client: defensive against getting stale alloc updates"""
5955,Add cycling to factory healthy flags,"This is meant to address the plugin test failure seen here: https://app.circleci.com/pipelines/github/hashicorp/nomad/10015/workflows/ace5d615-db03-4cfc-86b2-31e9e00473ec/jobs/77014/tests I believe the problem was that on rare occasions, the set of mock storage controllers and nodes were all unhealthy, so the facet test had no rows to iterate through. Since there are always three of each, this guarantees some healthy ones will be present."
5956,Merge pull request #8216 from hashicorp/b-ui/stats-request-thrashing,UI: Add a key to the alloc table on the task group detail page
5957,"Revert ""client: defensive against getting stale alloc updates""",
5958,Add a key to the alloc table on the task group detail page,"Adding keys tells Ember to rerender matching entries instead of destroying and recreating. Without this key, every time the allocation collection changes, every allocation row gets destroyed and recreated. This happens a lot, since each allocation needs to be reloaded which dirties the collection. Since allocation rows fetch stats on init, each of these many many renders results in a stats request. By using key and rerendering matching records, this all goes away. Since the rows aren't being destroyed and recreated, the init stats request isn't being made overnumerously."
5959,Merge pull request #8214 from hashicorp/docs-snapshot-update,Update changelog and snapshot docs
5960,Fixup additionalComponents within MDXProvider,
5961,nomad/mock: add NodeNetworkResources to mock Node,
5962,add snapshot subcommands to sidenav,
5963,Add phase 1 of global search (#8175),"This introduces a DataCaches service so recently-updated collections don’t need to be requeried within a minute, or based on the current route. It only searches jobs and nodes. There are known bugs that will be addressed in upcoming PRs."
5964,Add custom MDXProvider to /docs pages,
5965,add redirects for upgrade and vault pki guides (#7863),
5966,test: fix up testing around host networks,
5967,multiregion: initial deploymentPaused must match start condition (#8215),"In #8209 we fixed the module stanza for multiregion by introducing the module check, but didn't apply it to the earlier place its required. The result is that deployments start but don't place allocations."
5968,Apply suggestions from code review,Co-authored-by: Drew Bailey link
5969,Merge pull request #8207 from hashicorp/f-ui/manual-scaling-controls,UI: Task Group Scaling Controls
5970,Remove superfluous property from the StepperInput page object,
5971,docs: snapshot agent command,
5972,Update docs for snapshot CLI,
5973,cli: use  for consistency,
5974,vendor: sync api changes,
5975,lint: spelling,
5976,multiregion: all regions start in running if no max_parallel (#8209),"If module is not set, all regions should begin in a module state rather than a module state. Otherwise the first region is set to module and then all the remaining regions once it enters modulemax_parallel` regions running, but definitely not what a user expects."
5977,complete missed message,
5978,allow raw body instead of JSON encoded string (#8211),
5979,taskenv: populate NOMAD_IP|PORT|ADDR env from allocated ports,
5980,document snapshot api endpoints,
5981,update changelog,
5982,Merge pull request #8082 from hashicorp/f-raft-multipler,Implement raft multipler flag
5983,multi-interface network support,
5984,store ACL Accessor ID from Job.Register with Job (#8204),"In multiregion deployments when ACLs are enabled, the deploymentwatcher needs an appropriately scoped ACL token with the same module rights as the user who submitted it. The token will already be replicated, so store the accessor ID so that it can be retrieved by the leader."
5985,docs: fix for multiregion count explanation (#8202),
5986,Merge pull request #8180 from hashicorp/b-gh-8179,demo: Fix Vagrantfile when building staging VM for Cloud build.
5987,Acceptance tests for task group scaling,
5988,Watch the latest deployment relationship to disable the stepper appropriately,
5989,Wire up the scale action on the task group page,
5990,Integrate the stepper input with the task group page,
5991,Test coverage for the StepperInput,
5992,Style the StepperInput component,
5993,Add count StepperInput to the task group page,
5994,StepperInput story,
5995,Barebones StepperInput component,
5996,Slow the debounce time.,
5997,Test coverage for the task group row scale actions,
5998,Disable scale buttons when a deployment is running or ACL forbids it,
5999,Add canScale ability for jobs,
6000,Mirage updates for task group scaling and scaling post endpoint,
6001,Wire up the +/- buttons in task group rows to the job scale action,
6002,New scale action for jobs (and a convenience task group method),
6003,Create new AbortController with each tick of the ec task loops,"This was a disturbing discovery. Requests in watch loops would recycle AbortControllers meaning once any request was aborted, all requests forever after were skipped. I noticed it with deployments and job summary on the job detail page. I suspect this regression occurred when jQuery was removed. This needs test coverage still to make sure it doesn't happen again."
6004,Make sure buttons in a button bar have a very visible focus state,
6005,Add the elements of the manual scaling actions to the task-group-row component,
6006,Add the min/max and policy y/n of a task group to the details ribbon,
6007,Prevent inline definition key/value pairs from breaking the key and value onto separate lines,
6008,Additional button-bar treatments for use in a table row,
6009,Extend button-bar support to buttons,
6010,"When an icon is intended as text, it shouldn't have pointer events",This prevents the svg from being a target in click events.
6011,New xsmall button size,
6012,LazyClick should also get interrupted by buttons,
6013,Model the scaling properties of a task group as a fragment,
6014,Merge pull request #8206 from hashicorp/docs-fix-license-api,docs: update operator license API
6015,docs: update operator license API,
6016,Merge pull request #8192 from hashicorp/f-status-allnamespaces-2,CLI Allow querying all namespaces for jobs and allocations - Try 2
6017,Merge pull request #8205 from hashicorp/docs-090-portmap,docs: finally document the 0.9 port_map break
6018,docs: finally document the 0.9 port_map break,
6019,Merge pull request #8203 from hashicorp/next-2,net-next merge to master
6020,fix test failures from rebase,
6021,deps: updated libnetwork dep,Adding missing vendor files as well.
6022,CNI Implementation (#7518),
6023,Task DNS Options (#7661),Co-Authored-By: Tim Gross link Co-Authored-By: Seth Hoenig link
6024,Merge pull request #8177 from hashicorp/f-ui/monitor,UI: Client and Server Monitor
6025,Fix typo in link to Cloud Auto-join section (#8116),
6026,Merge pull request #8199 from hashicorp/b-remove-tidy-from-dev,deps: remove tidy from dev makefile target
6027,deps: remove tidy from dev makefile target,"With Go modules, module supplants module. Unfortunately, module will try to reach out to the network and download modules, and there is no way to disable that behavior (e.g. the -mod=vendor) option does not apply. This means we cannot use the module target in nomad enterprise, which will be unable to reach private repositories like consul-enterprise. This isn't a big deal, since module served the purpose of rewriting the output of module, wheras module is a part of the module target that is required to be run when modifying dependencies anyway."
6028,docs: multiregion deployment feature (#8185),
6029,docs: elaborate on raft_multipler default,
6030,Code review feedback,
6031,Guard the request animation frame with the existing requestFrame flag,
6032,cli: warn on multiple prefix matches when querying all namespaces,
6033,cli: query all namespaces for alloc subcommands,
6034,rpc: allow querying allocs across namespaces,This implements the backend handling for querying across namespaces for allocation list endpoints.
6035,cli: jobs allow querying jobs in all namespaces,
6036,use '*' to indicate all namespaces,This reverts the introduction of AllNamespaces parameter that was merged earlier but never got released.
6037,test: remove flaky test from volumewatcher (#8189),"The volumewatcher restores itself on notification, but detecting this is racy because it may reap any claim (or find there are no claims to reap) and shutdown before we can test whether it's running. This appears to have become flaky with a new version of golang. The other cases in this test case sufficiently exercise the start/stop behavior of the volumewatcher, so remove the flaky section."
6038,Merge pull request #8187 from hashicorp/f-8143-block-scaling-during-deployment,modify Job.Scale RPC to return an error if there is an active deployment
6039,changelog for multiregion deployments (#8188),
6040,docs: updated website to this change,
6041,added changelog entry and satisfied module,
6042,modify Job.Scale RPC to return an error if there is an active deployment,resolves #8143
6043,Merge pull request #8184 from hashicorp/f-multiregion_oss,Multiregion Deployments (OSS integration)
6044,remove test for ent-only behavior,
6045,multiregion: use pending instead of paused,"The module state is used as an operator safety mechanism, so that they can debug a deployment or halt one that's causing a wider failure. By using the module state as the first state of a multiregion deployment, we risked resuming an intentionally operator-paused deployment because of activity in a peer region. This changeset replaces the use of the module state with a module state, and provides a module internal RPC to replace the use of the module (resume) RPC we were using in module."
6046,multiregion: integrate with deploymentwatcher, module should take status parameter thread Deployment/Job RPCs thru module add module calls to module use a better description for paused for peer
6047,multiregion: change AutoRevert to OnFailure,
6048,start all but first region deployment in paused state,
6049,multiregion: deploymentwatcher hooks,This changeset establishes hooks in deploymentwatcher for multiregion deployments (for the enterprise version of Nomad).
6050,Multiregion job registration,Integration points for multiregion jobs to be registered in the enterprise version of Nomad: * hook in module for enterprise to send job to peer regions * remove monitoring from module and module for multiregion jobs
6051,use constants from http package,
6052,multiregion CLI: nomad deployment unblock,
6053,Multiregion deploy status and job status CLI,
6054,multiregion: unblock and cancel RPCs,
6055,multiregion: request structs,
6056,Multiregion structs,"Initial struct definitions, jobspec parsing, validation, and conversion between Nomad structs and API structs for multi-region deployments."
6057,Merge pull request #8168 from hashicorp/f-8158-add-preserve-counts,add module to module
6058,demo: Fix Vagrantfile when building staging VM for Cloud build.,Updates the base VM image used as well as fixes install failures with Azure CLI and Docker.
6059,Select all shortcut support for the streaming file component,
6060,"changelog for -persist-counts, #8168",
6061,"added -preserve-counts to module CLI, updated website",
6062,support in API client and Job.Register RPC for PreserveCounts,
6063,removed api.RegisterJobRequest in favor of api.JobRegisterRequest,modified module and module to use anonymous struct to keep previous behavior
6064,"wip: added PreserveCounts to struct.JobRegisterRequest, development test for Job.Register",
6065,wip: developmental test to preserve existing task group counts during job update,
6066,Server monitor page,
6067,Test coverage for new features of the server detail page,
6068,Redesign the server detail page to be inline with everything else,
6069,Add nested monitor route to servers/server,
6070,Refactor the servers/server pages to match the subnav style of nested pages,
6071,Show a helpful forbidden message when monitor access is not authorized,
6072,New component version of the forbidden-message partial,
6073,Ability for agent:read,
6074,Test coverage for the client monitor page,
6075,Test coverage for the AgentMonitor component,
6076,Temporary helpers for ember-power-select,"These are based on the source code for selectChoose. I would have liked to have used selectChoose, but the implementation has two await settled()s in it which prevented me from writing the tests I needed to write. These new extension helpers separate selectChoose into two pieces so logic can be placed between the two async actions."
6077,Preserve the log when switching log levels on monitor,
6078,Inline-block the buttons to remove weird text-flow spacing,
6079,Refactor AgentMonitor levels handling to be simpler,
6080,Reimplement synchronizeScrollPosition in a way that actually works,
6081,Implement the log streaming portion of the AgentMonitor component,
6082,Monitor component and query param interaction,
6083,Create new monitor route for clients,
6084,Merge pull request #8172 from hashicorp/go-1.14.4,build: update from Go 1.14.3 to Go 1.14.4
6085,UI: Migrate to ES6 classes (#8144)," Add massaged results of class codemod  Manual interventions: • decorators on the same line for service and controller   injections and most computed property macros • preserving import order when possible, both per-line   and intra-line • moving new imports to the bottom • removal of classic decorator for trivial cases • conversion of init to constructor when appropriate  Add fixes for ESLint getter-return  …I GUESS  Remove unnecessary fetch-setting  Originally this was failing because it only had a getter. I tried replacing it with a computed property and that succeeded, but since we have already stopped using jQuery, we might as well remove it.  Change with-namespace-ids mixin to a base class  This is a merge of 5d9fce5.  Change URL-generation for job-updating  The id-processing in the WatchableNamespaceIds adapter was happening twice; this removes urlForUpdate record so it only happens once. @DingoEatingFuzz figured it out! 🥳  Fix query parameters structures  I’d think the codemod would handle this if it’s a requirement but apparently not, is it a bug?  Add manually-converted classes  I don’t know why the codemod ignored these files 🧐  Remove problem field  It appears this gets turned into a getter-only computed property somehow, which causes problems when subclasses override it.   Rename clashing action   Convert field to overridable computed property   StatsTimeSeries defines description as a computed property, which isn’t possible when this is a class field.   Rename clashing property   Remove superfluous uses of Object.freeze   This is no longer needed! https://guides.emberjs.com/release/upgrading/current-edition/native-classes/#toc_properties-and-fields   Data cannot be a field in the base class and a CP in the child classes   Remove stray commented-out line   Co-authored-by: Michael Lange link"
6086,docs: add go bump to changelog,
6087,build: update from Go 1.14.3 to Go 1.14.4,
6088,Merge pull request #8173 from hashicorp/docs-memoryswap-fix,docs: update changelog for memory swap fix
6089,docs: update changelog for memory swap fix,
6090,move bugfix to correct version (#8170),
6091,Merge pull request #8159 from njenwei/docker-driver-memoryswap,Fix docker driver MemorySwap value
6092,Merge pull request #8171 from hashicorp/changelog-entry-8161,changelog: add entry for GH-8161
6093,changelog: add entry for GH-8161,
6094,Merge pull request #8162 from hashicorp/b-gh-8161,cli: fix malformed alloc status address list when more than 1 addr
6095,Remove stray commented-out line,
6096,Merge pull request #8167 from hashicorp/f-8090-add-count-to-scaling-event,add PreviousCount to ScalingEvent
6097,changelog for 8167,
6098,core: update Job.Scale to save the previous job count in the ScalingEvent,
6099,"wip: added .PreviousCount to api.ScalingEvent and structs.ScalingEvent, with developmental tests",
6100,Data cannot be a field in the base class and a CP in the child classes,
6101,Remove superfluous uses of Object.freeze,This is no longer needed! https://guides.emberjs.com/release/upgrading/current-edition/native-classes/#toc_properties-and-fields
6102,Rename clashing property,
6103,Convert field to overridable computed property,"StatsTimeSeries defines description as a computed property, which isn’t possible when this is a class field."
6104,Rename clashing action,
6105,Remove problem field,"It appears this gets turned into a getter-only computed property somehow, which causes problems when subclasses override it."
6106,Add manually-converted classes,I don’t know why the codemod ignored these files 🧐
6107,Fix query parameters structures,"I’d think the codemod would handle this if it’s a requirement but apparently not, is it a bug?"
6108,Change URL-generation for job-updating,The id-processing in the WatchableNamespaceIds adapter was happening twice; this removes urlForUpdate record so it only happens once. @DingoEatingFuzz figured it out! 🥳
6109,Change with-namespace-ids mixin to a base class,This is a merge of 5d9fce5.
6110,Remove unnecessary fetch-setting,"Originally this was failing because it only had a getter. I tried replacing it with a computed property and that succeeded, but since we have already stopped using jQuery, we might as well remove it."
6111,Merge pull request #8164 from hashicorp/docs-cronexpr-link,docs: update cronexpr github link
6112,docs: update cronexpr github link,
6113,cli: fix malformed alloc status address list when more than 1 addr,
6114,Merge pull request #8131 from hashicorp/f-snapshot-restore,Implement snapshot restore
6115,Apply suggestions from code review,Co-authored-by: Michael Schurter link
6116,Fix docker driver MemorySwap value,Fixes an incorrect value being assigned to MemorySwap when module flag is being used. Issue raised in https://github.com/hashicorp/nomad/issues/8153
6117,revert changes from earlier change,
6118,Merge pull request #8152 from hashicorp/mw.add-cloudflare-quote-card,website: add cloudflare testimonial
6119,only report tasklogger is running if both stdout and stderr are still running (#8155),  only report tasklogger is running if both stdout and stderr are still running   changelog 
6120,Merge pull request #8154 from fhemberger/patch-2,[docs/docker driver] fix username in example
6121,[docs/docker driver] fix username in example," If you do not run Nomad as root, make sure you add the Nomad user to the Docker group so Nomad can communicate with the Docker daemon.  Changing the username in the example from module to module. Vagrant isn't addressed in the entire document, so I guess that this was a mistake."
6122,website: add cloudflare testimonial,
6123,Add fixes for ESLint getter-return,…I GUESS
6124,Add massaged results of class codemod,"Manual interventions: • decorators on the same line for service and controller   injections and most computed property macros • preserving import order when possible, both per-line   and intra-line • moving new imports to the bottom • removal of classic decorator for trivial cases • conversion of init to constructor when appropriate"
6125,scheduler/reconcile: set FollowupEvalID on lost stop_after_client_disconnect (#8105) (#8138),"  scheduler/reconcile: set FollowupEvalID on lost stop_after_client_disconnect   scheduler/reconcile: thread follupEvalIDs through to results.stop   scheduler/reconcile: comment typo   nomad/_test: correct arguments for plan.AppendStoppedAlloc   scheduler/reconcile: avoid nil, cleanup handleDelayed(Lost|Reschedules) "
6126,Add Ember ESLint plugin (#8134),"This is extracted from #8094, where I have run into some snags. Since these ESLint fixes aren’t actually connected to the Ember 3.16 update but involve changes to many files, we might as well address them separately. Where possible I fixed the problems but in cases where a fix seemed too involved, I added per-line or -file exceptions."
6127,"clarify ccomments, esp related to leadership code",
6128,clarify error message,Co-authored-by: Tim Gross link
6129,Merge pull request #8124 from hashicorp/yishan-who-uses-nomad-docs-revised,Updated Nomad README + Who Uses Nomad pages
6130,loosen raft timeout,
6131,tests: client already disabled,
6132,tests: prefix agent logs to identify agent sources,
6133,implement snapshot restore CLI,
6134,api: add snapshot restore,
6135,reassert leadership,
6136,basic snapshot restore,
6137,Updated Nomad README + Who Uses Nomad pages," Guides now point to HashiCorp Learn, rather than old website Condensed the documentation & guides section for brevity Updated ""Who Uses Nomad"" page and section in README with new names collected from past 6 months Added yearly publication dates to each of the public talks"
6138,Merge pull request #8123 from hashicorp/docs-update-version-for-0.12.0,update version for 0.12.0 dev
6139,update version for 0.12.0 dev,
6140,Merge pull request #8122 from hashicorp/docs-update-changelog-with-0.11.3,changelog updates from release-0.11.3
6141,changelog updates from release-0.11.3,
6142,Merge pull request #8120 from hashicorp/c-fix-go-bindata,Ensure we are using the latest go-bindata tools
6143,Ensure we are using the latest go-bindata tools,"go-bindata released tags are very old, few years old, so ensure we use the latest master as of now."
6144,ci: run static generators as part of CI,"These are used by release process, so add them to CI to notice if we break release scripts."
6145,Merge pull request #8089 from hashicorp/b-leader-worker-count,leadership: pause and unpause workers consistently
6146,"Revert ""fix go.mod replace for api by using older semantics (#8113)"" (#8115)",This reverts commit e3db589c09ee14c3c427d21662b71e98811e8722.
6147,fix go.mod replace for api by using older semantics (#8113),
6148,ignore vagrant directory even if symlinked (#8114),
6149,stop periodic dispatch at end of tests (#8111),
6150,Vendor gopsutil with go mod fix (#8108),Point to gopsutil fork with shirou/gopsutil#889 changes. I used hashicorp/gopsutil rather than pointing to https://github.com/Lomanic/gopsutil/tree/issue832 directly just in case..
6151,run go mod vendor (#8107),
6152,base podman e2e test and provisioning updates (#8104), initial setup for terrform to install podman task driver  podman  Update e2e provisioning to support root podman  Excludes setup for rootless podman. updates source ami to ubuntu 18.04 Installs podman and configures podman varlink base podman test ensure client status running revert terraform directory changes   back out random go-discover go mod change   include podman varlink docs   address comments 
6153,Merge pull request #8103 from hashicorp/b-ui/remove-vendored-xterm,Remove vendored xterm.js files
6154,Remove vendored xterm.js files,
6155,Delayed evaluations for module can cause unwanted extra followup evaluations around job garbage collection (#8099),"  client/heartbeatstop: reversed time condition for startup grace   scheduler/generic_sched: use module to avoid a loop   Without protecting the loop that creates followUpEvals, a delayed eval is allowed to create an immediate subsequent delayed eval. For both module and the module block, a delayed eval should always produce some immediate result (running or blocked) and then only after the outcome of that eval produce a second delayed eval.  scheduler/reconcile: lostLater are different than delayedReschedules  Just slightly. module allocs should be used to create batched evaluations, but module assumes that the allocations are in the untainted set. When it creates the in-place updates to those allocations at the end, it causes the allocation to be treated as running over in the planner, which causes the initial module evaluation to be retried by the worker."
6156,Merge pull request #8041 from hashicorp/x-gomod,Switch to Go modules for dependency management
6157,docs: add note in readme about exported package policy,
6158,deps: Switch to Go modules for dependency management,"This PR switches the Nomad repository from using govendor to Go modules for managing dependencies. Aspects of the Nomad workflow remain pretty much the same. The usual Makefile targets should continue to work as they always did. The API submodule simply defers to the parent Nomad version on the repository, keeping the semantics of API versioning that currently exists."
6159,Merge pull request #8079 from shishir-a412ed/f-ui-iis-driver,Add nomad-driver-iis to nomad UI docs.
6160,Merge pull request #8042 from greut/docker-v19.03.9,docker v19.03.10
6161,Fix review comments.,
6162,Fix go-lint issue.,
6163,Descriptions,
6164,Fix review comments.,
6165,Fixed missing comma.,
6166,Add nomad-driver-iis to nomad UI docs.,
6167,docker pick https://github.com/moby/moby/pull/40021,Signed-off-by: Yoan Blanc link
6168,docker/cli v19.03.10,Signed-off-by: Yoan Blanc link
6169,docker v19.03.10,Signed-off-by: Yoan Blanc link
6170,docker v19.03.9,Signed-off-by: Yoan Blanc link
6171,Convert to angle bracket invocation (#8075),"This is mostly a direct application of the ember-angle-brackets-codemod. I manually restored newlines in multi-line component invocations, usually preserving file line length except for now-non-positional link-to @route. I needed to rename task to taskState in some cases to avoid Ember Concurrency naming conflicts."
6172,Merge pull request #8087 from hashicorp/f-docker-mem-config,driver/docker: enable setting hard/soft memory limits
6173,driver/docker: add integration test around setting memory_hard_limit,
6174,docs: reference kernel documentation regarding soft memory limit activation,
6175,docs: use correct url path for doc string,Co-authored-by: Michael Schurter link
6176,docs: fix markdown for field in changelog,Co-authored-by: Michael Schurter link
6177,Merge pull request #8086 from hashicorp/docs-add-go-redirect-fix-changelog,docs: add go-getter redirect fix to changelog
6178,license changelog (#8088),
6179,leadership: pause and unpause workers consistently,This fixes a bug where leadership establishment pauses 3/4 of workers but stepping down unpause only 1/2!
6180,Docs/license (#8076), license cli documentation  license docs backout doc change more docs  license api endpoint documentation
6181,test for paused workers upon leadership revocation,
6182,driver/docker: use pointer parameter on driver because locks,
6183,docs: update docs & changelog for docker driver memory_hard_limit configuration,
6184,driver/docker: enable setting hard/soft memory limits,"Fixes #2093 Enable configuring module in the docker config stanza for tasks. If set, this field will be passed to the container runtime as module, and the module configuration from the task resource configuration will be passed as module, creating hard and soft memory limits for tasks using the docker task driver."
6185,docs: add go-getter redirect fix to changelog,
6186,Merge pull request #8083 from hashicorp/test-deflake-20200531,More Test deflaking - 2020-05-31 edition
6187,UI: add filesystem browsing for allocations (#7951),"This partially addresses #7799. Task state filesystems are contained within a subdirectory of their parent allocation, so almost everything that existed for browsing task state filesystems was applicable to browsing allocations, just without the task name prepended to the path. I aimed to push this differential handling into as few contained places as possible. The tests also have significant overlap, so this includes an extracted behavior to run the same tests for allocations and task states."
6188,Merge pull request #8047 from hashicorp/f-snapshot-save,API for atomic snapshot backups
6189,"If leadership fails, consider it handled",The callers for module and old implementation expect failures to be accompanied with a true value!  This fixes the issue and have tests passing!
6190,more review feedback,
6191,Apply suggestions from code review,Co-authored-by: Drew Bailey link
6192,Merge pull request #8001 from hashicorp/f-jobs-list-across-nses,endpoint to expose all jobs across all namespaces
6193,Merge pull request #8036 from hashicorp/f-background-vault-revoke-on-restore,Speed up leadership establishment
6194,clarify rpc consistency readiness comment,
6195,Merge pull request #8043 from greut/distribution-v2.7.1,vendor: pin docker/distribution to v2.7.1
6196,Apply suggestions from code review,Co-authored-by: Michael Schurter link
6197,Merge pull request #8078 from hashicorp/b-empty-cluster-metadata,Handle nil/empty cluster metadata
6198,document raft_multiplier,
6199,implement raft multiplier,
6200,tests: ensure that test is long enough to configure cgroups,
6201,tests: terminate agent gracefully,"Ensure that api test agent is terminated gracefully. This is desired for two purposes: First, to ensure that the logs are fully flished out.  If the agent is killed mid log line and go test doesn't emit a new line before module indicator, the test may be marked as failed, even if it passed. Sample failure is https://circleci.com/gh/hashicorp/nomad/72360 . Second, ensure that the agent terminates any auxiliary processes (e.g. logmon, tasks)."
6202,tests: Run a task long enough to be restartable,
6203,Merge pull request #8077 from hashicorp/changli0617-patch-1,Update alert-banner.js
6204,Handle nil/empty cluster metadata,Handle case where a snapshot is made before cluster metadata is created. This fixes a bug where a server may have empty cluster metadata if it created and installed a Raft snapshot before a new cluster metadata ID is generated. This case is very unlikely to arise.  Most likely reason is when upgrading from an old version slowly where servers may use snapshots before all servers upgrade.  This happened for a user with a log line like: module
6205,Update alert-banner.js,
6206,Merge pull request #8074 from ogadaki/patch-2,docs: fix typo in eligibility command doc
6207,docs: fix typo in eligibility command doc,
6208,give enterpriseclient a logger (#8072),
6209,removes pro tags (#8014),
6210,Merge pull request #8071 from hashicorp/docs-update-cni-version-reference,docs: update CNI version in connect setup docs
6211,docs: update CNI version in setup docs,"Update reference to CNI from version 0.8.4 to 0.8.6, which includes bug fixes, new features, etc. https://github.com/containernetworking/plugins/releases/tag/v0.8.6"
6212,Merge pull request #8069 from hashicorp/deps-update-go-getter,deps: update go-getter for redirects fix
6213,deps: update go-getter for redirects fix,Fixes #7854 Nomad requires a version of go-getter that is currently in PR (https://github.com/hashicorp/go-getter/pull/256) We also require some recent bug fix to go-getter around the handling of URL redirects. Update our vendor'd copy of go-getter to the newly rebased umask changes so that we can incorporate the latest changes for go-getter.
6214,Merge pull request #8065 from hashicorp/f-oss-preemption,Open source Preemption
6215,Merge pull request #8060 from hashicorp/tests-deflake-20200526,Deflake some tests - 2020-05-27 edition
6216,keep promotion score constants next to use,
6217,update changelog,
6218,docs: preemption is no longer an Enterprise feature,
6219,Open source Preemption code,Nomad 0.12 OSS is to include preemption feature. This commit moves the private code for managing preemption to OSS repository.
6220,changelog items for CSI in 0.11.3 (#8064),
6221,Oss license support for ent builds (#8054), changes necessary to support oss licesning shims  revert nomad fmt changes update test to work with enterprise changes update tests to work with new ent enforcements make check update cas test to use scheduler algorithm back out preemption changes add comments  remove unused method
6222,Merge pull request #8056 from hashicorp/f-ui/remove-jquery,UI: Remove jQuery
6223,Disable and remove the jquery integration,
6224,Merge pull request #8055 from hashicorp/f-ui/remove-jquery-from-templates,UI: Remove jQuery from the rest of application code
6225,tests: use GreaterOrEqual and apply change to other tests,
6226,tests: use t.Fatalf when it's clearer,
6227,Merge pull request #8059 from hashicorp/tests-log-output,tests: log to stderr directly
6228,gracefully shutdown test server,
6229,tests: node drain events may be duplicated,
6230,tests: log to stderr directly,"Go 1.14 now streams t.Log output as it happens [1], so we no longer need to maintain our log STDOUT helper. I preserved the interface, so module still takes in a module though unused. Changing it requires so too many changes that I didn't want to make quite yet. [1] https://golang.org/doc/go1.14#go-test"
6231,don't GC images in tests by default,
6232,tests: wait until clients are in the state store,
6233,tests: don't delete images after tests complete,Fix some docker test flakiness where image cleanup process may contaminate other tests. A clean up process may attempt to delete an image while it's used by another test.
6234,tests: eval may be processed quickly,
6235,Remove test code,
6236,Remove jquery from the window resize helper,
6237,Remove jquery from the lazy-click helper,
6238,Remove jquery from gauge chart,
6239,Remove jquery from the distribution bar chart,
6240,Remove jquery from line-chart,
6241,Remove minor version from audit comparison action (#8048),"Making this less specific means we can benefit from updates to the action without needing to change the workflow, such as the bug fix in backspace/ember-test-audit-comparison-action@a87d252, which addresses the incorrect duration delta here: https://github.com/hashicorp/nomad/pull/7964#issuecomment-632351171"
6242,Merge pull request #8049 from hashicorp/test-goroutine-cleanup,Cleanup goroutines in tests
6243,Merge pull request #8035 from hashicorp/f-ui/ember-fetch,UI: Replace jQuery with fetch within Ember Data
6244,Merge pull request #8052 from hashicorp/jm.add-carousel-item,Add Case Study Carousel Item
6245,{volume|deployment}watcher: check for nil batcher,
6246,deploymentwatcher: no batcher when disabling,"When disabling deploymentwatcher (at the end of a test), avoid starting a new update batcher with its new goroutine."
6247,Merge pull request #8051 from hashicorp/revert-7922-disable-future-commands,"Revert ""disable license cli commands"""
6248,"Revert ""disable license cli commands""",
6249,Add Carousel Item,
6250,cleanup driver eventor goroutines,"This fixes few cases where driver eventor goroutines are leaked during normal operations, but especially so in tests. This change makes few modifications: First, it switches drivers to use modules to manage shutdown events. Previously, it relied on callers invoking module function that is specific to internal drivers only and require casting.  Using module provide a consistent idiomatic way to manage lifecycle for both internal and external drivers. Also, I discovered few places where we don't clean up a temporary driver instance in the plugin catalog code, where we dispense a driver to inspect and validate the schema config without properly cleaning it up."
6251,Merge pull request #8044 from hashicorp/d-use-hashi-hclfmt,build: use hashicorp hclfmt
6252,UI: use lazy-loading for Xterm.js (#7964),"This updates Xterm.js to 4.6.0, which includes support for reverse-wraparound mode, so we no longer need to use a vendored dependency, which closes #7461. The interface for accessing the buffer that’s used for test assertions changed. With the dependency now accessed conventionally, we can have it load only when it’s needed by an exec popup window, which closes #7516. That saves us ≈60kb compressed in the dependency bundle!"
6253,Merge pull request #8018 from hashicorp/b-sidecar-task-resources-npe,api: canonicalize connect components
6254,terminate leader goroutines on shutdown,"Ensure that nomad steps down (and terminate leader goroutines) on shutdown, when the server is the leader. Without this change, module may handle module event and exit early before handling the raft module event and end up leaking leadership goroutines."
6255,fix a trace logline,
6256,refactor: context is first parameter,"By convention, go functions take module as the first argument."
6257,volumewatcher: no batcher when disabling,"When disabling volumewatcher (at the end of a test), avoid starting a new update batcher with its new goroutine."
6258,docs: static port incorrectly declared as a string (#8046),static attribute of the port stanza is supposed to be an integer but is incorrectly declared as a string in the example.
6259,build: use hashicorp hclfmt,"We have been using fatih/hclfmt which is long abandoned. Instead, switch to HashiCorp's own hclfmt implementation. There are some trivial changes in behavior around whitespace."
6260,vendor: pin docker/distribution to v2.7.1,Signed-off-by: Yoan Blanc link
6261,always set purgeFunc,"purgeFunc cannot be nil, so ensure it's set to a no-op function in tests."
6262,implement snapshot inspect CLI,
6263,Implement snapshot save CLI,
6264,Add api/ package function to save snapshot,
6265,Endpoint for snapshotting server state,
6266,Add module helper,Effectively Copied from https://github.com/hashicorp/consul/tree/v1.8.0-beta1/snapshot With addition of overall snapshot checksum file
6267,vault: ensure ttl expired tokens are purge,"If a token is scheduled for revocation expires before we revoke it, ensure that it is marked as purged in raft and is only removed from local vault state if the purge operation succeeds. Prior to this change, we may remove the accessor from local state but not purge it from Raft.  This causes unnecessary and churn in the next leadership elections (and until 0.11.2 result in indefinite retries)."
6268,csi: skip unit tests on unsupported platforms (#8033),Some of the unit tests for CSI require platform-specific APIs that aren't available on macOS. We can safely skip these tests.
6269,docs: add missing fields to driver Capabilities (#8037),"Adds module, module, and module fields to the driver module internals documentation."
6270,Replace nulls with empty strings to have an empty response body,
6271,Fix latent race condition in client detail test,Adding this settled makes this test pass now that Ember Data is using fetch instead of jquery. The test was presumably always incorrect but never flaked.
6272,Type-check the ForbiddenError rather than ducktype it,"Going off of the error message being ""Forbidden"" was brittle to begin with and no longer works with Fetch due to the error message coming from jquery underpinnings that were unobserved by Ember Data's attempted recreation."
6273,Always lower case headers now,
6274,Don't double query params for findQuery,
6275,"Adjust header case, which changed with the migration to fetch",
6276,Replace XHRToken with AbortController,
6277,Use the AbortController provided by the fetch polyfill,
6278,Instrument jquery ajax method to see if it is getting called anywhere,
6279,Force the use of fetch despite jquery still being integrated,
6280,Add test-timing comparison for UI PRs (#7929),"This runs ember-test-audit for UI PRs to compare how long the tests take for the base vs the PR. It posts or updates a comparison of times and test count. It’s somewhat slow to report back as it runs the test suite three times to even out variability in a shared environment. If we end up being unhappy with that slowness, we could try running the repetitions in parallel as well, but that would involve more changes to ember-test-audit."
6281,Merge pull request #8024 from hashicorp/f-ui/csi-plugin-allocations,UI: CSI Plugin Allocations Page
6282,volumes: return better error messages for unsupported task drivers (#8030),"When an allocation runs for a task driver that can't support volume mounts, the mounting will fail in a way that can be hard to understand. With host volumes this usually means failing silently, whereas with CSI the operator gets inscrutable internals exposed in the module. This changeset adds a MountConfig field to the task driver Capabilities response. We validate this when the module or module fires and return a user-friendly error. Note that we don't currently have a way to get driver capabilities up to the server, except through attributes. Validating this when the user initially submits the jobspec would be even better than what we're doing here (and could be useful for all our other capabilities), but that's out of scope for this changeset. Also note that the MountConfig enum starts with ""supports all"" in order to support community plugins in a backwards compatible way, rather than cutting them off from volume mounting unexpectedly."
6283,Reorder leadership handling,"Start serving RPC immediately after leader components are enabled, and move clean up to the bottom as they don't block leadership responsibilities."
6284,apply the same change to consul revocation,
6285,rate limit revokeDaemon,
6286,"on leadership establishment, revoke Vault tokens in background","Establishing leadership should be very fast and never make external API calls. This fixes a situation where there is a long backlog of Vault tokens to be revoked on when leadership is gained.  In such case, revoking the tokens will significantly slow down leadership establishment and slow down processing.  Worse, the revocation call does not honor leadership module signals, so it will not stop when the leader loses leadership."
6287,Prevent sticky query params for plugin alloc filtering,
6288,Show the number of allocations in the the goto links on plugin detail,
6289,csi: don't pass volume claim releases thru GC eval (#8021),"Following the new volumewatcher in #7794 and performance improvements to it that landed afterwards, there's no particular reason we should be threading claim releases through the GC eval rather than writing an empty module with the mode set to module, just as the GC evaluation would do. Also, by batching up these raft messages, we can reduce the amount of raft writes by 1 and cross-server RPCs by 1 per volume we release claims on."
6290,add notes about delay requirement for reschedule,
6291,"stats_hook: log normal shutdown condition as debug, not error (#8028)","The module writes an Error log every time an allocation becomes terminal. This is a normal condition, not an error. A real error condition like a failure to collect the stats is logged later. It just creates log noise, and this is a particularly bad operator experience for heavy batch workloads."
6292,docs: notice to operators about script check timeouts (#8015),"The tasklet passes the timeout for the script check into the task driver's module, and its up to the task driver to enforce that via a golang module. In practice, this deadline is started before the task driver starts setting up the execution environment (because we need it to do things like timeout Docker API calls). Under even moderate load, the time it takes to set up the execution context for the script check regularly exceeds a full second or two. This can cause script checks to unexpected timeout or even never execute if the context expires before the task driver ever gets a chance to module. This changeset adds a notice to operators about setting script check timeouts with plenty of padding and what to monitor for problems."
6293,csi: check for empty arguments on CSI endpoint (#8027),Some of the CSI RPC endpoints were missing validation that the ID or the Volume definition was present. This could result in nonsense module structs being written to raft during registration. This changeset corrects that bug and adds validation checks to present nicer error messages to operators in some other cases.
6294,Merge pull request #8013 from hashicorp/gh-8008,api: return custom error if API attempts to decode empty body.
6295,Merge pull request #8007 from hashicorp/volumes-docs-csi-put-blocking,docs: update CSI PUT operation blocking query support yes->no.
6296,Test coverage for the plugin allocations page,
6297,Test coverage for the limited alloc tables and goto links,
6298,Limit the length of the alloc tables on the plugin overview page,
6299,Add a title to the plugin/allocations page,"Typically these filterable list views don't have titles beyond the breadcrumbs, but since this page has no search bar, the title really helps balance it out."
6300,Expose existing qp serialization util as a helper,
6301,Merge pull request #8020 from hashicorp/vendor-hcl2-20200519,Update hcl2 vendoring
6302,Simplify comments,Co-authored-by: Mahmood Ali link
6303,Update hcl2 vendoring,The hcl2 library has moved from http://github.com/hashicorp/hcl2 to https://github.com/hashicorp/hcl/tree/hcl2. This updates Nomad's vendoring to start using hcl2 library.  Also updates some related libraries (e.g. module and module).
6304,Merge pull request #7994 from shantanugadgil/patch-3,update docs to mention spread algorithm
6305,Merge branch 'master' into patch-3,
6306,Merge pull request #7870 from hashicorp/d-fix-version-typo,[docs] Fix version typo
6307,"Interlinking API, FAQ, and Config","Creating a FAQ question to provide a home for additional context around bootstrapping. Linking from API page to module attribute. Added sample API response to to discuss ""Updated: false"""
6308,docs: update changelog with sidecar task resources fix,
6309,api: canonicalize connect components,"Add module methods to the connect components of a service definition in the module package. Without these, we have been relying on good input for the connect stanza. Fixes #7993"
6310,Set Updated to true for all non-CAS requests,
6311,Merge pull request #7986 from hashicorp/missing-changelog-entry,Add missing bug fix from the changelog for 0.11.2
6312,Merge pull request #8006 from hashicorp/f-ui/csi-node-only-support,UI: CSI node only support
6313,Merge pull request #8003 from hashicorp/c-use-taskkind,consul/connect: use task kind to get service name
6314,docs: update snippet to include summary namespace,
6315,update api/ JobListStub,
6316,list all jobs on namespaces the token can access,
6317,api: return custom error if API attempts to decode empty body.,
6318,Adding info about bootstrap,
6319,Add filtering to the plugin allocations page,
6320,docs: update CSI PUT operation blocking query support yes->no.,
6321,Scaffold the plugin allocations page,
6322,Add a subnav to the plugin page,
6323,Fix scrunched availability chart bug on double chart layout,
6324,Add plugin/allocations route,
6325,Merge pull request #7983 from spuder/patch-3,Fix typo in changelog
6326,Work around a mirage bug,
6327,Test coverage for node only view of the plugin detail page,
6328,Test coverage for the node-only change to the list view,
6329,Add availability gauges to the plugin page object,
6330,Handle node-only views,
6331,Merge pull request #8005 from hashicorp/je.fix-shell-snippets,Fix shell-session snippet error
6332,fix shell-session snippet error,
6333,consul/connect: use task kind to get service name,"Fixes #8000 When requesting a Service Identity token from Consul, use the TaskKind of the Task to get at the service name associated with the task. In the past using the TaskName worked because it was generated as a sidecar task with a name that included the service. In the Native context, we need to get at the service name in a more correct way, i.e. using the TaskKind which is defined to include the service name."
6334,endpoint to expose all jobs across all namespaces,"Allow a module to list all jobs across all namespaces.  The returned list is to contain a module field indicating the job namespace. If ACL is enabled, the request token needs to be a management token or have module capability on all existing namespaces."
6335,Alternative treatment,"A variation of the treatment that surfaces ""spread scheduling"" in the example while referring to the API docs as canonical for this setting."
6336,Merge pull request #7992 from hashicorp/docs-website-fix,docs: server configuration metadata was missing a dash
6337,Merge pull request #7995 from hashicorp/tidy-go-mod-api,api: tidy Go module to remove unused modules.
6338,Update server.mdx,
6339,csi: improve plugin error messages and volume validation (#7984),"Some CSI plugins don't return much for errors over the gRPC socket above and beyond the bare minimum error codes. This changeset improves the operator experience by unpacking the error codes when available and wrapping the error with some user-friendly direction. Improving these errors also revealed a bad comparison with module when module should be used in the test code for plugin errors. This defect in turn was hiding a bug in volume validation where we're being overly permissive in allowing mount flags, which is now fixed."
6340,api: tidy Go module to remove unused modules.,
6341,update docs to mention spread algorithm,update docs to mention spread algorithm
6342,"docs: server configuration metadata was missing a dash, causing problems",rendering that page
6343,Merge pull request #7988 from tcassaert/vault_int_docs,Docs: Vault integration token creation docs missing command
6344,Merge pull request #7970 from hashicorp/go1.14.3,Go1.14.3
6345,build: update from Go 1.14.1 to Go 1.14.3,
6346,scripts: add usage to update_golang_version.sh,
6347,Command was missing due to missing end of line,
6348,Add missing bug fix from the changelog for 0.11.2,
6349,fix grammar in DST upgrade snippet (#7985),
6350,Fix typo in changelog,Removes duplicate entry in the change log
6351,Remove Ember server from Storybook startup (#7980),"The presence of Storybook’s preview-head.html file in the repository is a constant annoyance: it’s only needed for Storybook and it changes all the time, producing a lot of Git noise. By making it a separate step to have the Ember CLI server running before starting Storybook, we no longer need to have preview-head in the repository. It needed to be present because there was a race condition where it was sometimes not generated in time for the Storybook parallel startup."
6352,Merge pull request #7982 from hashicorp/mdeggies-remove-appveyor,Windows CircleCI Follow
6353,revert vendored file accidental changes,[ci skip]
6354,quiet unzip,
6355,Predownload image before tests start,
6356,Use an image managed by nomad account,This is a retag of stefanscherer/busybox-windows@sha256:af396324c4c62e369a388ebb38d4efd44211dc7c95a438e6feb62b4ae4194c5b
6357,remove unused gotestsum installation script,
6358,colocate test-windows by darwin target,"Mostly to ease conflict resolution with Enterprise fork, as Enterprise CI doesn't support windows."
6359,Few Windows CI changes:,"Always install go and vault: the check may accidentally use the CircleCI pre-installed go version instead of the cached version. Also, always install from sources without caching.  Go/vault installation is basically a tarball download.  That's equivalent to CirleCI caching without the complexity.  These steps don't add much time either. Lastly, infer the OS when downloading tarball to avoid managing them in the job spec."
6360,Use a pinned tag of stefanscherer/busybox-windows,
6361,makefile to support windows,
6362,Merge pull request #7971 from hashicorp/b-ui/plugin-extend-watchable,UI: Make the Plugin adapter extend Watchable
6363,Caching test,
6364,Update cache,
6365,Adding a fix,
6366,Move appveyor tests to circle,
6367,csi: use a blocking initial connection with timeout (#7965),"The plugin supervisor lazily connects to plugins, but this means we only get ""Unavailable"" back from the gRPC call in cases where the plugin can never be reached (for example, if the Nomad client has the wrong permissions for the socket). This changeset improves the operator experience by switching to a blocking module. It eagerly connects so that we can validate the connection is real and get a ""failed to open"" error in case where Nomad can't establish the initial connection."
6368,csi: support for VolumeContext and VolumeParameters (#7957),"The MVP for CSI in the 0.11.0 release of Nomad did not include support for opaque volume parameters or volume context. This changeset adds support for both. This also moves args for ControllerValidateCapabilities into a struct. The CSI plugin module struct that we turn into a CSI RPC is accumulating arguments, so moving it into a request struct will reduce the churn of this internal API, make the plugin code more readable, and make this method consistent with the other plugin methods in that package."
6369,Merge pull request #7972 from hashicorp/0-11-3-return-to-dev,post-release merge
6370,Merge pull request #7973 from hashicorp/update-webiste-version,update website current version to 0.11.2
6371,update website current version to 0.11.2,
6372,release: prep for 0.11.3 dev cycle,
6373,Make the Plugin adapter extend Watchable,
6374,Protect against making watch requests using adapters that don't extend Watchable,
6375,remove generated files,
6376,Release v0.11.2,
6377,Generate files for 0.11.2 release,
6378,csi: use a blocking initial connection with timeout,"The plugin supervisor lazily connects to plugins, but this means we only get ""Unavailable"" back from the gRPC call in cases where the plugin can never be reached (for example, if the Nomad client has the wrong permissions for the socket). This changeset improves the operator experience by switching to a blocking module. It eagerly connects so that we can validate the connection is real and get a ""failed to open"" error in case where Nomad can't establish the initial connection."
6379,updated changelog with #7959,
6380,Merge remote-tracking branch 'origin/master' into release-0.11.2,
6381,Change exec URL-generation to use Ember get (#7963),This fixes a bug in #7815 where you can’t open an exec window from the allocation overview because accessing module fails across the proxied relationship.
6382,Merge pull request #7961 from hashicorp/b-always-validate-default-scheduler-config,always check module config
6383,always check module config,"Also, avoid early return on validation to avoid masking some validation bugs in dev setup."
6384,"final deps update, fix some anchor link aliases",
6385,"update dependencies, upgrade structure for latest nextjs-scripts, implement custom 404 page",
6386,Add asset size workflow (#7864),This uses a fork of the Ember Asset Size Action to report on changes to the filesizes of the production UI build as a comment to the PR. The fork includes fixes to make it work with a subdirectory (ui/ in our case) and to make it update the PR comment if it exists vs posting repeatedly to the thread.
6387,Merge pull request #7959 from hashicorp/b-deleted-vault-accessors,vault: ensure that token revocation is idempotent
6388,csi: refactor internal client field name to ExternalID (#7958),"The CSI plugins RPCs require the use of the storage provider's volume ID, rather than the user-defined volume ID. Although changing the RPCs to use the field name module risks breaking backwards compatibility, we can use the module name internally for the client and only use module at the RPC boundaries."
6389,vault: ensure that token revocation is idempotent,"This ensures that token revocation is idempotent and can handle when tokens are revoked out of band. Idempotency is important to handle some transient failures and retries. Consider when a single token of a batch fails to be revoked, nomad would retry revoking the entire batch; tokens already revoked should be gracefully handled, otherwise, nomad may retry revoking the same tokens forever."
6390,vault: failing test for repeated revocation,
6391,e2e: upgrade CNI to 0.8.6 (#7956),
6392,prepare for 0.11.2,
6393,Merge pull request #7952 from hashicorp/d/ui-changelog-0.11.2,Changelog additions for bugs and improvements to the UI
6394,Merge pull request #7915 from hashicorp/b-scaling-api-missing-count,the api.ScalingEvent struct was missing the .Count field
6395,Changelog additions for bugs and improvements to the UI,
6396,added changelog entry,
6397,the api.ScalingEvent struct was missing the .Count field,
6398,Merge pull request #7950 from hashicorp/docs-dst,docs: clarify periodic dst behavior
6399,Merge pull request #7948 from hashicorp/changelog_stop_after_client_disconnect,changelog entry for module
6400,changelog entry for module,
6401,changelog entry for aws cpu perf (#7949), changelog entry for module changelog entry for aws cpu perf  Co-authored-by: Tim Gross link
6402,docs for module stanza (#7938),
6403,server: stop after client disconnect (#7939),"  jobspec, api: add stop_after_client_disconnect   nomad/state/state_store: error message typo   structs: alloc methods to support stop_after_client_disconnect   a global AllocStates to track status changes with timestamps. We    need this to track the time at which the alloc became lost    originally.   ShouldClientStop() and WaitClientStop() to actually do the math   scheduler/reconcile_util: delayByStopAfterClientDisconnect   scheduler/reconcile: use delayByStopAfterClientDisconnect   scheduler/util: updateNonTerminalAllocsToLost comments   This was setup to only update allocs to lost if the DesiredStatus had already been set by the scheduler. It seems like the intention was to update the status from any non-terminal state, and not all lost allocs have been marked stop or evict by now   scheduler/testing: AssertEvalStatus just use require   scheduler/generic_sched: don't create a blocked eval if delayed   scheduler/generic_sched_test: several scheduling cases "
6404,docs: clarify periodic dst behavior,
6405,Merge pull request #7945 from hashicorp/docs-cronexpr-dst-fix,Document daylight saving handling
6406,changelog: reordered alphabetically,
6407,Merge pull request #7942 from hashicorp/b-ui/csi-alloc-relationships,"UI: CSI Bug, Imperatively load controller/node plugin allocations"
6408,Merge pull request #7911 from hashicorp/f-ui/csi-availability-gauge,UI: CSI Availability Gauges
6409,update changelog,[ci skip]
6410,Merge pull request #7947 from hashicorp/b-docker-image-cleanup,docker: Fix docker image gc tracking
6411,docker: Fix docker image gc tracking,"This fixes a bug where docker images may not be GCed.  The cause of the bug is that we track the task using module on task start but remove on plain module. This haromize the two paths by using module, as it's unique enough and it's also used in the module path (path when loading an image from a local tarball instead of dockerhub)."
6412,Test coverage for the gauge chart,
6413,Adjust gauge chart stories,
6414,Add gauge charts to the plugin detail page to measure availability,
6415,Bottom aligned columns variant,
6416,Add gauge chart stories,
6417,Style the gauge chart component,
6418,Treat null and undefined equally,
6419,Refactor metrics styles to allow for standalone metrics,
6420,Gauge chart component,
6421,Merge pull request #7946 from hashicorp/ci/pin-golangci-lint,pin golangci-lint dep to 1.24.0
6422,pin golangci-lint dep to 1.24.0,
6423,Merge pull request #7944 from hashicorp/b-health-checks-after-task-health,Allocs are healthy if service checks get healthy before task health
6424,document daylight saving change,
6425,allochealth: Fix when check health preceeds task health,"Fix a bug where if the alloc check becomes healthy before the task health, the alloc may never be considered healthy."
6426,tests: tests for health check sequencing,"Add a failing tests to show that if an alloc checks is marked healthy before the alloc tasks start up, the alloc may be forever considered unhealthy."
6427,Test coverage for the plugin-allocation-row,
6428,Don't double load freshly loaded allocations,
6429,Properly manage the lifecycle of allocations for storage nodes and controllers,
6430,Key allocation rows to prevent unnecessary re-renders,
6431,Merge pull request #7894 from hashicorp/b-cronexpr-dst-fix,Fix Daylight saving transition handling
6432,"vendor: use tagged cronexpr, v1.1.0","Also, update to the version with modification notice"
6433,fix formatting error on preemption docs page,
6434,Merge pull request #7936 from josegonzalez/patch-1,docs: add note that only system job preemption is available in OSS
6435,Update website/pages/docs/internals/scheduling/preemption.mdx,Co-authored-by: Drew Bailey link
6436,docs: add note that only system job preemption is available in OSS,
6437,update changelog (#7934),
6438,Merge pull request #7932 from hashicorp/f-docker-custom-runtimes,Docker runtimes
6439,update tests,
6440,fix typo in changelog (#7930),Fixes a bad link in the changelog
6441,update docs,
6442,use allow_runtimes for consistency,"Other allow lists use allow_ prefix (e.g. allow_caps, allow_privileged)."
6443,Apply suggestions from code review,Co-authored-by: Tim Gross link
6444,more tests,
6445,Add a knob to restrict docker runtimes,
6446,Merge pull request #7928 from hashicorp/license-drop-tags,remove tags from api struct
6447,csi: support Secrets parameter in CSI RPCs (#7923),"CSI plugins can require credentials for some publishing and unpublishing workflow RPCs. Secrets are configured at the time of volume registration, stored in the volume struct, and then passed around as an opaque map by Nomad to the plugins."
6448,remove tags from api struct,
6449,changelog entries for 0.11.2 CSI bugfixes and improvements (#7926),
6450,Add changelog entry for exec ACL-checking (#7925),
6451,Add ACL-checking to turn off exec button (#7919),This closes #7453. It adds an abstraction to handle the common needs of ability-determination.
6452,Merge pull request #7924 from hashicorp/b-codecgen-flags,Clarify Msgpack handling of json tags
6453,Merge pull request #7922 from hashicorp/disable-future-commands,disable license cli commands
6454,"When serializing msgpack, only consider codec tag","When serializing structs with msgpack, only consider type tags of module. Hashicorp/go-msgpack (based on ugorji/go) defaults to interpretting module tag if it's available, but falls to using module if module isn't present. This behavior is surprising in cases where we want to serialize json differently from msgpack, e.g. serializing module."
6455,codec: we use hashicorp/go-msgpack exclusively,No need to maintain two msgpack handles!
6456,disable license cli commands,
6457,Merge pull request #7921 from hashicorp/f-upgrade-e2e-consul,e2e: upgrade consul in packer setup to 1.7.3 from 1.6.1
6458,e2e: upgrade consul in packer setup to 1.7.3 from 1.6.1,There have been a number of bug fixes and features particularly around Connect that will help us in Nomad's e2e tests. Upgrade Consul in our packer builder so e2e can make use of the new version.
6459,Add assertions for title-area buttons (#7836),This closes #7452.
6460,Add tests for running allocation client count (#7906),  Add tests for running allocation client count   remove redundant assertions 
6461,csi: log fallthrough on invalid node IDs for client RPC (#7918),"When a CSI client RPC is given a specific node for a controller but the lookup fails (because the node is gone or is an older version), we fallthrough to select a node from all those available. This adds logging to this case to aid in diagnostics."
6462,Merge pull request #7896 from hashicorp/f-ui/csi-namespace-issue,UI: CSI namespace bugs
6463,volumewatcher: stop watcher goroutines when there's no work (#7909),"The watcher goroutines will be automatically started if a volume has updates, but when idle we shouldn't keep a goroutine running and taking up memory."
6464,Merge pull request #7912 from hashicorp/f-scheduler-algorithm-followup,Scheduler Algorithm Defaults handling and docs
6465,Merge pull request #7913 from hashicorp/deflake-TestTaskTemplateManager_BlockedEvents,Deflake TestTaskTemplateManager_BlockedEvents test
6466,Merge pull request #7914 from hashicorp/b-csi-fix-slice-initialization,Fix slice initialization
6467,Periodic GC for volume claims (#7881),This changeset implements a periodic garbage collection of CSI volumes with missing allocations. This can happen in a scenario where a node update fails partially and the allocation updates are written to raft but the evaluations to GC the volumes are dropped. This feature will cover this edge case and ensure that upgrades from 0.11.0 and 0.11.1 get any stray claims cleaned up.
6468,Merge pull request #7916 from hashicorp/changelog-7903,changelog: add entry for GH-7902
6469,changelog: add entry for GH-7902,
6470,Merge pull request #7903 from hashicorp/b-gh-7902,api: validate scale count value is not negative.
6471,Fix slice initialization,
6472,tests: ease debugging TestClientEndpoint_CreateNodeEvals,"TestClientEndpoint_CreateNodeEvals flakes a bit but its output is very confusing, as module overrides GoString. Here, we emit the entire struct of the evaluation, and hopefully we'll figure out the problem the next time it happens"
6473,avoid logging after a test completes,
6474,Deflake TestTaskTemplateManager_BlockedEvents test,"This change deflakes TestTaskTemplateManager_BlockedEvents test, because it is expecting a number of events without accounting for transitional state. The test TestTaskTemplateManager_BlockedEvents attempts to ensure that a template rendering emits blocked events for missing template ksys. It works by setting a template that requires keys 0,1,2,3,4 and then eventually sets keys 0,1,2,3 and ensures that we get a final event indicating that keys 3 and 4 are still missing. The test waits to get a blocked event for the final state, but it can fail if receives a blocked event for a transitional state (e.g. one reporting 2,3,4,5 are missing). This fixes the test by ensuring that it waits until the final message before assertion. Also, it clarifies the intent of the test with stricter assertions and additional comments."
6475,handle upgrade path and defaults,Ensure that module Scheduler Algorithm gets explicitly set to binpack on upgrades or on API handling when user misses the value. The scheduler already treats module value as binpack.  This PR merely ensures that the operator API returns the effective value.
6476,Document scheduler algorithm,
6477,The active namespace is now shared between jobs and storage,
6478,Changing namespaces now situationally redirects to jobs or volumes,"Changing namespaces can be done anywhere in the app even though many Nomad resources aren't namespace-sensitive (e.g., clients, plugins). A user changing namespaces is an intent to reset context, ""now I want to begin a task that relates to Namespace X"". Where that task begins used to always be the Jobs list, since it was the only namespace sensitive resource. Now with CSI Volumes, ""square 1"" is Volumes if the namespace is changed from a storage page."
6479,Merge pull request #7895 from hashicorp/f-ui/csi-search-and-filter,UI: CSI Searchable volumes and plugins lists
6480,volumewatcher: set maximum batch size for raft update (#7907),"The module has a 250ms batch window so claim updates will not typically be large enough to risk exceeding the maximum raft message size. But large jobs might have enough volume claims that this could be a danger. Set a maximum batch size of 100 messages per batch (roughly 33K), as a very conservative safety/robustness guard. Co-authored-by: Chris Baker link"
6481,Merge pull request #7891 from hashicorp/docs-improve-connect-examples,docs: improve some connect examples
6482,volume_mount doc tweak (#7900),
6483,Merge pull request #7892 from hashicorp/f-e2e-connect-use-expose-service-check,e2e: set an expose service check in connect e2e testcase
6484,api: validate scale count value is not negative.,"An operator could submit a scale request including a negative count value. This negative value caused the Nomad server to panic. The fix adds validation to the submitted count, returning an error to the caller if it is negative."
6485,Introduce shallow to plugin factories to speed up tests,
6486,Searchable plugins,
6487,Searchable volumes,
6488,Update current DST and some code style issues,
6489,Update cronexpr to point to hashicorp/cronexpr,
6490,tests for periodic job scheduling and DST,
6491,e2e: set an expose service check in connect e2e testcase,Make sure exposed checks work in e2e by setting an expose check on the e2e connect test.
6492,docs: replace use of test/test with runnable examples,A few connect examples reference a fake 'test/test' image. By replacing those with module we can turn them into runnable examples.
6493,docs: fix misspelling of countdash example,
6494,CSI volumewatcher testability improvments (#7889)," volumewatcher: remove redundant log fields  The constructor for module already sets a module that includes the volume ID and namespace fields. Remove them from the various trace logs.  volumewatcher: advance state for controller already released  One way of bypassing client RPCs in testing is to set a claim status to controller-detached, but this results in an incorrect claim state when we checkpoint."
6495,docs: mention Connect ACLs guide in jobspec connect docs,"Promote the Connect ACLs guide on the jobspec connect stanza docs page. This was suggested in a ticket after someone got stuck not realizing they needed to enable Consul Intentions for their connect enabled services, which is covered in the guide."
6496,docs: update examples for connect jobspec docs,"Replace the existing top example with something that is directly runnable on a module nomad setup. Add the complete module example at the bottom in the examples section, so that people do not need to go guide-hunting to find a complete example. The hope is people will see more runnable examples and be less afraid of connect."
6497,Merge pull request #7886 from hashicorp/f/csi-missing-prop-for-plugin-list,Add ControllersExpected to the PluginListStub
6498,docs: improve connect expose path examples,"This change replaces the top example for expose path configuration with two new runnable examples. Users should be able to copy and paste those jobs into a job file and run them against a basic connect enabled nomad setup. The example presented first demonstrates use of the service check expose parameter with no dynamic port explicitly defined (new to 0.11.2). This is expected to be the ""90%"" use case of users, and so we should try to emphasise this pattern as best practice. The example presented second demonstrates achieving the same goal as the first exmaple, but utilizing the full plumbing available through the module stanza. This should help readers comprehend what is happening ""under the hood""."
6499,Add ControllersExpected to the PluginListStub,
6500,Merge pull request #7885 from hashicorp/update-license-output,update license output
6501,update license output,
6502,Merge pull request #7781 from hashicorp/demo-countdash-docker,demo: create build scripts for our countdash demo
6503,Merge pull request #7872 from hashicorp/f-ui/csi-phase-2,UI: CSI Plugins Pages
6504,Acceptance test for PluginDetail,
6505,Don't wrap between icons and health text,
6506,Use lazyClick to avoid multiple transitionToRoutes being in flight as once,
6507,Refactor AllocationRow qualifyAllocation,There was a missing edge case where a job is pending. I took the moment to also refactor the code to use async/await which cleaned up the promise chaining.
6508,Plugin detail page object,
6509,Sort allocations on the plugin detail page,
6510,Test coverage for the plugins list page,
6511,Page object for Plugins List,
6512,Correct the table headers for dates on the volume page,
6513,Add a nodes table as well,
6514,Set color in addition to fill for the icon class,"Structure icons have fill set to currentColor hardcored in their markup. This mean setting fill to a color in CSS does nothing, but setting color now does."
6515,Add icons to the plugin alloc row component,
6516,Use the correct plugin property for the breadcrumb,
6517,New PluginAllocationRow derivative of AllocationRow,
6518,Emulate belongsTo relationship in storage fragments,
6519,Add short option to date formatters,
6520,Update storage controller mirage code to accommodate EDMF's lack of relationships,
6521,Refactor AllocationRow to use AllocationStat,
6522,Separate AllocationStat component for containing the multiple states a stat tracker can be in,
6523,Setup the plugin detail page,
6524,Model out the rest of the CSI Plugin properties,
6525,Plugins table on the plugins list page,
6526,Clean up the csi volume page,
6527,"Set up routes, controllers, and template basics for the plugins page",
6528,Add a subnav to the volumes page,
6529,Update plugin model and serializer to match final API,
6530,Add constraints table to the volume detail page,
6531,periodic GC for CSI plugins (#7878),"This changeset implements a periodic garbage collection of unused CSI plugins. Plugins are self-cleaning when the last allocation for a plugin is stopped, but this feature will cover any missing edge cases and ensure that upgrades from 0.11.0 and 0.11.1 get any stray plugins cleaned up."
6532,Migrate page objects away from jQuery (#7843),"This is part of #7834’s jQuery removal goal. It addresses a couple of jQuery-related deprecation warnings and also uses “native events mode” for ember-cli-page-object, which is needed so it doesn’t have to use jQuery via the Ember global."
6533,update to latest nextjs-scripts,
6534,fix some highlighting issues,
6535,update deps,
6536,switch themes,
6537,initial stab at prism highlighting,
6538,UI: Remove Ember Freestyle (#7839),This completes the migration to Storybook by replacing the colour palette and typeface components that I left out.
6539,Merge pull request #7855 from hashicorp/b-ui/alloc-wrong-reserved-resources,UI: Make allocation reference own task group instead of job's task group when job versions don't match
6540,Merge pull request #7874 from hashicorp/b-ui/node-status-running-allocs,ui: only count running allocations in client view
6541,reorder volume claim batch request raft message (#7871),"For backwards compatibility during upgrades, new raft message types need to come at the end of the enum."
6542,ui: only count running allocations in client view,"In the client view list, only show running allocations count for each client, rather than include already completed tasks. This is done for two reasons: First, consitency with the CLI: module only shows running allocs. Second, and more importantly, the count is useful to estimate how loaded the clients are.  Allocs that have completed (but not GCed yet) have very little value to operators."
6543,csi: fix plugin counts on node update (#7844),"In this changeset:  If a Nomad client node is running both a controller and a node   plugin (which is a common case), then if only the controller or the   node is removed, the plugin was not being updated with the correct   counts. The existing test for plugin cleanup didn't go back to the state   store, which normally is ok but is complicated in this case by   denormalization which changes the behavior. This commit makes the   test more comprehensive. Set ""controller required"" when plugin has module. All   known controllers that support module also support   module but we shouldn't assume this. Only create plugins when the allocs for those plugins are   healthy. If we allow a plugin to be created for the first time when   the alloc is not healthy, then we'll recreate deleted plugins when   the job's allocs all get marked terminal. Terminal plugin alloc updates should cleanup the plugin. The client   fingerprint can't tell if the plugin is unhealthy intentionally (for   the case of updates or job stop). Allocations that are   server-terminal should delete themselves from the plugin and trigger   a plugin self-GC, the same as an unused node."
6544,csi: fix mount validation (#7869),"Several of the CSI module methods return pointers, which we were then comparing to pointers in the request rather than dereferencing them and comparing their contents. This changeset does a more fine-grained comparison of the request vs the capabilities, and adds better error messaging."
6545,Merge pull request #7867 from hashicorp/license-command-updates,update license command output to reflect api changes
6546,Fix version typo,
6547,docstring improvements and typo fixes (#7862),
6548,update license command output to reflect api changes,
6549,Run Linux Images (LCOW) and Windows Containers side by side (#7850),Makes it possible to run Linux Containers On Windows with Nomad alongside Windows Containers. Fingerprint prevents only to run Nomad in Windows 10 with Linux Containers
6550,volumewatcher: remove spurious nil-check (#7858),The nil-check here is left-over from an earlier approach that didn't get merged. It doesn't do anything for us now as we can't ever pass it module and if we leave it in the module call it guards will panic anyways.
6551,Merge pull request #7856 from Renerick/patch-1,Fix URL schema in module documentation
6552,Fix URL schema in module documentation,
6553,Merge pull request #7846 from hashicorp/changli0617-patch-1,Update _app.js for Nomad Virtual Day
6554,Add embedded task group to allocation to reference when allocation is historical,
6555,Stabilize job and allocation job versions in fixtures,
6556,Comment why the allocation has to be reloaded,
6557,Merge pull request #7851 from hashicorp/spread-configuration-followup,Follow up fix for spread
6558,missed fixing one invocation,
6559,e2e: csi test can purge target job (#7823),
6560,Merge pull request #7810 from hashicorp/spread-configuration,spread scheduling algorithm
6561,changelog and fix typo,
6562,tests and some clean up,
6563,Wiring algorithm to scheduler calls,
6564,Add SchedulerAlgorithm to SchedulerConfig,
6565,"client/heartbeatstop: don't store client state, use timeout","In order to minimize this change while keeping a simple version of the behavior, we set module to the current time less the intial server connection timeout. If the client starts and never contacts the server, it will stop all configured tasks after the initial server connection grace period, on the assumption that we've been out of touch longer than any configured module. The more complex state behavior might be justified later, but we should learn about failure modes first."
6566,client/heartbeatstop: destroy allocs when disconnected from servers," track lastHeartbeat, the client local time of the last successful   heartbeat round trip track allocations with module configured trigger allocation destroy (which handles cleanup) restore heartbeat/killable allocs tracking when allocs are recovered from disk on client restart, stop those allocs after a grace period if the   servers are still partioned"
6567,Merge pull request #7847 from hashicorp/ent-license-404,temporarily test for 404 until endpoint is ready
6568,temporarily test for 404 until endpoint is ready,
6569,Merge pull request #7778 from hashicorp/license-cli,License cli
6570,Update _app.js,
6571,Merge pull request #7730 from hashicorp/b-reserved-scoring,core: fix node reservation scoring
6572,Merge branch 'master' into b-reserved-scoring,
6573,Update website/pages/docs/upgrade/upgrade-specific.mdx,Co-authored-by: Alex Dadgar link
6574,csi: check returned volume capability validation (#7831),"This changeset corrects handling of the module response:   The CSI spec for the module requires that   plugins only set the module field if they've validated all   capabilities. The Nomad client improperly assumes that the lack of a   module field should be treated as a failure. This breaks the   Azure and Linode block storage plugins, which don't set this   optional field.   The CSI spec also requires that the orchestrator check the validation   responses to guard against older versions of a plugin reporting   ""valid"" for newer fields it doesn't understand. "
6575,csi: restore long timeout for controller plugins (#7840),"During MVP development, we reduced the timeout for controller plugins to avoid long hangs in GC workers. But now that this work has been moved to the volume watcher, we can restore the original timeout which is better suited for the characteristic timescales of some cloud provider APIs and better matches the behavior of k8s."
6576,csi: ensure Read/WriteAllocs aren't released early (#7841),"We should only remove the module/module values for a volume after the claim has entered the ""ready to free"" state. The volume will eventually be released as expected. But querying the volume API will show the volume is released before the controller unpublish has finished and this can cause a race with starting new jobs. Test updates are to cover cases where we're dropping claims but not running through the whole reaping process."
6577,properly format license output,
6578,allow test to check if server is enterprise,
6579,add license reset command to commands,help text formatting remove reset no signed option
6580,test all commands oss err,
6581,hcl fmt from editor,"license cli formatting, license endpoints ent only test oss error type assertions"
6582,license cli commands,"cli changes, formatting"
6583,UI: Add representations for task lifecycles (#7659),"This adds details about task lifecycles to allocations, task groups, and tasks. It includes a live-updating timeline-like chart on allocations."
6584,csi: move volume claim release into volumewatcher (#7794),"This changeset adds a subsystem to run on the leader, similar to the deployment watcher or node drainer. The module performs a blocking query on updates to the module table and triggers reaping of volume claims. This will avoid tying up scheduling workers by immediately sending volume claim workloads into their own loop, rather than blocking the scheduling workers in the core GC job doing things like talking to CSI controllers The volume watcher is enabled on leader step-up and disabled on leader step-down. The volume claim GC mechanism now makes an empty claim RPC for the volume to trigger an index bump. That in turn unblocks the blocking query in the volume watcher so it can assess which claims can be released for a volume."
6585,Merge pull request #7820 from hashicorp/b-ui/ui-log-races,UI: Log streaming bug fix medley
6586,Make the no connection error on the logs page dismissable,
6587,Fix race condition where stdout and stderr requests can cause a no connection error,"This would happen because a no connection error happens after the second request fails, but that's because it's assumed the second request is to a server node. However, if a user clicks stderr fast enough, the first and second requests are both to the client node. This changes the logic to check if the request is to the server before deeming log streaming a total failure."
6588,Clicking stdout/stderr when already on that tab is now a noop,
6589,Abort log fetch request when failing over from client to server,"Typically a failover means that the client can't be reached. However, if the client does eventually return after the timeout period, the log will stream indefinitely. This fixes that using an API that wasn't broadly available at the time this was first written."
6590,"Always pass credential in fetch requests, but also treat options reasonably",Now options can be provided without also having to remember to pass credentials. This is convenient for abort controller signals.
6591,Merge pull request #7828 from hashicorp/b-ec2-speeds,env_aws: use best-effort lookup table for CPU performance in EC2
6592,env_aws: combine 3 log lines into 1,
6593,env_aws: downgrade log line,Co-Authored-By: Mahmood Ali link
6594,env_aws: fixup log line,Co-Authored-By: Mahmood Ali link
6595,csi: read-repair CSI volume claims (#7824),"The module fields were added after 0.11.1, so claims made before that may be missing the value. Repair this when we read the volume out of the state store. The module field was added after 0.11.0, so we need to ensure it's been populated during upgrades from 0.11.0."
6596,UI: Fix exec popup link for job id ≠ name (#7815),This closes #7814. It makes URL-generation more central and changes the exec URL to include job id instead of name.
6597,Merge pull request #7829 from ccn/vendor-go-dockerclient-v1.6.5,Vendor: update fsouza/go-dockerclient to v1.6.5
6598,Remove unused internal subpackages,
6599,Vendor: update fsouza/go-dockerclient to v1.6.5,
6600,env_aws: use best-effort lookup table for CPU performance in EC2,"Fixes #7681 The current behavior of the CPU fingerprinter in AWS is that it reads the current speed from module (module field). This is because the max CPU frequency is not available by reading anything on the EC2 instance itself. Normally on Linux one would look at e.g. module or perhaps parse the values from the module field in module, but those values are not available. Furthermore, no metadata about the CPU is made available in the EC2 metadata service. https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-categories.html Since module cannot determine the max CPU speed it defaults to the current CPU speed, which could be basically any number between 0 and the true max. This is particularly bad on large, powerful reserved instances which often idle at ~800 MHz while Nomad does its fingerprinting (typically IO bound), which Nomad then uses as the max, which results in severe loss of available resources. Since the CPU specification is unavailable programmatically (at least not without sudo) use a best-effort lookup table. This table was generated by going through every instance type in AWS documentation and copy-pasting the numbers. https://aws.amazon.com/ec2/instance-types/ This approach obviously is not ideal as future instance types will need to be added as they are introduced to AWS. However, using the table should only be an improvement over the status quo since right now Nomad miscalculates available CPU resources on all instance types."
6601,Merge pull request #7827 from hashicorp/deps-go-msgpack-v1.1.5,Harmonize go-msgpack/codec/codecgen
6602,Harmonize go-msgpack/codec/codecgen,"Use v1.1.5 of go-msgpack/codec/codecgen, so go-msgpack codecgen matches the library version. We branched off earlier to pick up https://github.com/hashicorp/go-msgpack/commit/f51b5189210768cf0d476580cf287620374d4f02 , but apparently that's not needed as we could customize the package via module argument."
6603,e2e: add helper to Makefile for local file deployments (#7822),
6604,command: deployment status without a prefix lists deployments (#7821),
6605,Merge pull request #7818 from greut/codegen,structs: give codecgen import
6606,UI: update exec styles to match conventions (#7811),
6607,Merge pull request #7816 from hashicorp/b-7789-job-scaling-status-issues,fix issues in Job.ScaleStatus
6608,structs: give codecgen import,Signed-off-by: Yoan Blanc link
6609,nomad: build dynamic port for exposed checks if not specified (#7800),
6610,updated changelog,
6611,modified Job.ScaleStatus to ignore deployments and look directly at the,"allocations, ignoring canaries"
6612,Adding API homepage to sidebar.,
6613,Merge pull request #7801 from hashicorp/d-fix-docker-credhelper-example,[docs] Update credential helper example in docker.mdx
6614,Merge pull request #7809 from greut/typos,api: fix some documentation typos
6615,Merge pull request #7805 from hashicorp/vendor-go-metrics-v0.3.3,Vendor: update armon/go-metrics to v0.3.3
6616,api: fix some documentation typos,Signed-off-by: Yoan Blanc link
6617,Vendor: update armon/go-metrics to v0.3.3,To pick up a lock contention fix in prometheus sink: https://github.com/armon/go-metrics/pull/107 .
6618,Update docker.mdx,
6619,Merge pull request #7792 from angrycub/f-disable_dangling_container_gc,Disable dangling container GC for demo
6620,Merge pull request #7784 from hashicorp/demo-grpc-checks,demo: create a demo service for grpc healthchecks
6621,demo: create a demo service for grpc healthchecks,"Examples for HTTP based task-group service healthchecks are covered by the module demo, but gRPC checks currently have no runnable examples. This PR adds a trivial gRPC enabled application that provides a Service implementing the standard gRPC healthcheck interface."
6622,docs: mention scoring change from #7730,
6623,ci: add a linting check for HCL files (#7791),"Running module runs module, but this isn't checked as part of CI. That makes it possible to merge un-formatted HCL and Nomad jobspecs that later will make for dirty git staging areas when developers pull master. This changeset adds HCL linting to the module target."
6624,Disable dangling container GC for demo,
6625,csi: checkpoint volume claim garbage collection (#7782),Adds a module type to be tracked as current and past claims on a volume. Allows for a client RPC failure during node or controller detachment without having to keep the allocation around after the first garbage collection eval. This changeset lays groundwork for moving the actual detachment RPCs into a volume watching loop outside the GC eval.
6626,website: fix path for spellchecking and correct errors (#7790),
6627,Merge pull request #7788 from hashicorp/b-7716-scaling-policy-parsing,parsing should error if scaling block includes multiple policy blocks
6628,changelog entries for 7772 and 7788,
6629,return parsing error if scaling policy includes more than one policy block,"also, check that parsing a minimal scaling block doesn't throw any errors"
6630,Merge pull request #7689 from hashicorp/ui/plumb-proxy-config-to-proxy,UI Plumb proxy config to proxy
6631,Merge pull request #7785 from hashicorp/b-http-fail-log-level,http: adjust log level for request failure
6632,http: adjust log level for request failure,Failed requests due to API client errors are to be marked as DEBUG. The Error log level should be reserved to signal problems with the cluster and are actionable for nomad system operators.  Logs due to misbehaving API clients don't represent a system level problem and seem spurius to nomad maintainers at best.  These log messages can also be attack vectors for deniel of service attacks by filling servers disk space with spurious log messages.
6633,Merge pull request #7780 from hashicorp/pre-0.11.2-dev-cycle,Pre 0.11.2 dev cycle
6634,demo: create build scripts for our countdash demo,"We use the education team's ""countdash"" demo in many places to showcase Nomad's Consul Connect integration. This change adds a Dockerfile for each of module and module that can be used to build artifacts to publish to Nomad's Docker Hub organization. The recent ""0.0.3"" release of the module demo includes changes we want in order to demo task group service checks."
6635,prep for 0.11.2 dev cycle,
6636,prepare for 0.11.1 and reorder changelog,
6637,Merge pull request #7779 from hashicorp/docs-website-0.11.1,update website for nomad 0.11.1
6638,update release to 0.11.1,
6639,UI: Update ember-fetch to 6.7.2 (#7713),This gets rid of this warning in the console: Browserslist: caniuse-lite is outdated. Please run next command module
6640,Merge pull request #7772 from hashicorp/b-7768-remove-policies-for-stopped-jobs,delete/create autoscaling policies as job is stopped/started
6641,Remove superseded note,This closes #7465.
6642,Disable the proxy when Mirage is enabled,This is to prevent max socket connection errors that can stop the live reload server from responding.
6643,Use existing ember proxy config within our custom proxy,
6644,Merge pull request #7685 from hashicorp/ui/upgrade-lint-staged,UI: Upgrade lint-staged and husky
6645,modify state store so that autoscaling policies are deleted from their,table as job is stopped (and recreated when job is started)
6646,changelog entries for 0.11.1 bugfixes (#7763),
6647,Merge pull request #7762 from hashicorp/b-in-place-update-deviceids,Perserve device ids in in-place alloc updates
6648,add changelog,[ci skip]
6649,Ensure that alloc updates preserve device offers,"When an alloc is updated in-place, ensure that the allocated device are preserved and carried over to new alloc."
6650,test for allocated devices on job in-update update,"When an alloc is updated in-place, test that the allocated devices are preserved in new alloc struct."
6651,Docs: correct search API (#7756),This closes #7718. It corrects some inaccuracies and adds an explanation of the truncations block.
6652,csi: nil-check allocs for VolumeDenormalize and claim methods (#7760),
6653,Use ExternalID in NodeStageVolume RPC (#7754),
6654,fix panic while deleting CSI plugins for missing job (#7758),
6655,Merge pull request #7691 from hashicorp/docs-some-connect-bugs,docs: add bugfix notes for #7690 #7397 #7684 #7683 to changelog
6656,docs: add bugfix notes for #7690 #7397 #7684 #7683 to changelog,
6657,Merge pull request #7690 from hashicorp/b-inspect-proxy-output,two fixes for inspect on connect proxy
6658,Merge pull request #7705 from hashicorp/docs-remove-connect-limitation,fixup references in connect docs
6659,Merge pull request #7704 from hashicorp/b-agent-shutdown-order,agent: shutdown agent http server last
6660,Merge pull request #7748 from hashicorp/b-noisy-http-logs,agent: route http logs through hclog
6661,update changelog,[ci skip]
6662,agent: route http logs through hclog,"Pipe http server log to hclog, so that it uses the same logging format as rest of nomad logs.  Also, supports emitting them as json logs, when json formatting is set. The http server logs are emitted as Trace level, as they are typically repsent HTTP client errors (e.g. failed tls handshakes, invalid headers, etc). Though, Panic logs represent server errors and are relayed as Error level."
6663,Merge pull request #7749 from hashicorp/b-docker-panic,driver/docker: protect against nil container
6664,add changelog,[ci skip]
6665,demo/vagrant/Vagrantfile: Update Nomad version (0.11.0) (#7579),
6666,fix spelling errors (#6985),
6667,label csi as beta from 0.11 release notes (#7745),
6668,docs: update Datadog agent telemetry link to rewritten version.,The Datadog agent was rewritten in Go from version 6. This means the codebase resides in a new GitHub repository. This change updates the Nomad telemetry configuration documentation to point to the latest repo.
6669,driver/docker: protect against nil container,"Protect against a panic when we attempt to start a container with a name that conflicts with an existing one.  If the existing one is being deleted while nomad first attempts to create the container, the createContainer will fail with module, but we get nil container reference from the module lookup, and cause a crash. I'm not certain how we get into the state, except for being very unlucky.  I suspect that this case may be the result of a concurrent restart or the docker engine API not being fully consistent (e.g. an earlier call purged the container, but docker didn't free up resources yet to create a new container with the same name immediately yet). If that's the case, then re-attempting creation will hopefully succeed, or we'd at least fail enough times for the alloc to be rescheduled to another node."
6670,"Fix/improve ""job plan"" messaging (#7580)",
6671,Merge pull request #7741 from hashicorp/yishan/docs-rebased-preemption-update,docs: update preemption page
6672,docs: update preemption page,"This page has not been updated (yet) to reflect that support for all 3 job types (service, batch, system) which shipped in 0.9.2. The current page implies that preemption is only available for system jobs. This is early preparation for Nomad 0.12, where we plan to move Preemption from Enterprise feature suite to OSS for all."
6673,build(deps): bump https-proxy-agent in /scripts/screenshots/src,Bumps link from 2.2.1 to 2.2.4. - link - link Signed-off-by: dependabot[bot] link
6674,Fix get all vault token policies,
6675,docs: add #7730 to changelog,
6676,core: fix node reservation scoring,"The BinPackIter accounted for node reservations twice when scoring nodes which could bias scores toward nodes with reservations. Pseudo-code for previous algorithm: module The node's reserved resources are added to the total resources used by allocations, and then the node's reserved resources are later substracted from the node's overall resources. The new algorithm is: module The node's reserved resources are no longer added to the total resources used by allocations. My guess as to how this bug happened is that the resource utilization variable (module) is calculated and returned by the module function which needs to take reserved resources into account as a basic feasibility check. To avoid re-calculating alloc resource usage (because there may be a large number of allocs), we reused module in the module function. module properly accounts for reserved resources by subtracting them from the node's overall resources. However since module also took reserved resources into account the score would be incorrect. Prior to the fix the added test output: module The scores being 1.0 for both nodes with reserved resources is a good hint something is wrong as they should receive different scores. Upon further inspection the double accounting of reserved resources caused their scores to be >1.0 and clamped. After the fix the added test outputs: module"
6677,Merge pull request #7717 from hashicorp/website-alert,website: Adjust the website alert to point to the blog post
6678,Adjust the website alert to point to the blog post,
6679,Merge pull request #7682 from hashicorp/b-comment-fix,core: fix comment on system stack
6680,structs: fix compatibility between api and nomad/structs proxy definitions,"The field names within the structs representing the Connect proxy definition were not the same (nomad/structs/ vs api/), causing the values to be lost in translation for the 'nomad job inspect' command. Since the field names already shipped in v0.11.0 we cannot simply fix the names. Instead, use the json struct tag on the structs/ structs to remap the name to match the publicly expose api/ package on json encoding. This means existing jobs from v0.11.0 will continue to work, and the JSON API for job submission will remain backwards compatible."
6681,jobspec: correctly parse proxy fields from jobspec,"Before, the proxy stanza did not parse non-object fields module and module from the connect module stanza. This change fixes that."
6682,documents the scaling block in the JSON Job docs (#7706), documents the scaling block in the JSON Job docs  resolves #7656  add task-specific restart to JSON Job docs  companion to #7603   [docs] improved and corrected scaling docs   Update website/pages/api-docs/json-jobs.mdx   Co-Authored-By: Michael Schurter link Co-authored-by: Michael Schurter link
6683,update module documentation (#7603), update module documentation  7288 added support for task-specific module policy. this PR updates the docs to reflect that.   added an explicit example of task-specific restart policy   Update website/pages/docs/job-specification/restart.mdx 
6684,Merge pull request #7663 from hashicorp/b-taskrunner-shutdown_delay,Run task shutdown_delay regardless of service registration
6685,Update CHANGELOG.md,
6686,docs: add a link to the Connect w/ACLs guide,... from the docs/integration/consul-connect page.
6687,docs: update connect limitations (acls & checks now supported),
6688,agent: shutdown agent http server last,"Shutdown http server last, after nomad client/server components terminate. Before this change, if the agent is taking an unexpectedly long time to shutdown, the operator cannot query the http server directly: they cannot access agent specific http endpoints and need to query another agent about the troublesome agent. Unexpectedly long shutdown can happen in normal cases, e.g. a client might hung is if one of the allocs it is running has a long shutdown_delay. Here, we switch to ensuring that the http server is shutdown last. I believe this doesn't require extra care in agent shutting down logic while operators may be able to submit write http requests.  We already need to cope with operators submiting these http requests to another agent or by servers updating the client allocations."
6689,refactor: consolidate private methods for CSI RPC (#7702),"Follow-up for a method missed in the refactor for #7688. The module method is only ever called from the server's module RPC and never the module RPC, so move it into that scope."
6690,e2e: testing reliability (#7701), pin CSI plugin versions ensure failing CSI tests clean up allow NOMAD_SHA env var to override makefile
6691,Merge pull request #7693 from greut/bump-testify,api: testify v1.5.1
6692,api: testify v1.5.1,Signed-off-by: Yoan Blanc link
6693,refactor: make nodeForControllerPlugin private to ClientCSI (#7688),"The current design of module RPC requires that callers in the server know about the free-standing module function. This makes it difficult to send module RPC messages from subpackages of module and adds a bunch of boilerplate to every server-side caller of a controller RPC. This changeset makes it so that the module RPCs will populate and validate the controller's client node ID if it hasn't been passed by the caller, centralizing the logic of picking and validating controller targets into the module struct."
6694,Merge pull request #7684 from hashicorp/b-connect-sidecar-name,connect: enable configuring sidecar_task.name
6695,Merge pull request #7683 from hashicorp/b-no-sidecar-panic,connect: correctly handle missing sidecar_service task stanza
6696,connect: extract common task keys,
6697,changelog,
6698,Run task shutdown_delay regardless of service registration,"task shutdown_delay will currently only run if there are registered services for the task. This implementation detail isn't explicity stated anywhere and is defined outside of the service stanza. This change moves shutdown_delay to be evaluated after prekill hooks are run, outside of any task runner hooks. just use time.sleep"
6699,Remove now superfluous lint-staged arguments,
6700,Upgrade Husky,
6701,Upgrade lint-staged,"Version 10 fixes an issue where if lint-staged fails while linting a partially staged file, all unstaged changes will be removed from the working tree. Now when this happens, unstaged changes will be in the stash."
6702,connect: enable configuring sidecar_task.name,"Before, the submitted jobspec for sidecar_task would pass through 2 key validation steps - once for the subset specific to connect sidecar task definitions, and once again for the set of normal task definition where the task would actually get unmarshalled. The valid keys for the normal task definition did not include ""name"", which is supposed to be configurable for the sidecar task. To fix this, just eliminate the double validation step, and instead pass-in the correct set of keys to validate against to the one generic task parser. Fixes #7680"
6703,connect: correctly deal with nil sidecar_service task stanza,"Before, if the sidecar_service stanza of a connect enabled service was missing, the job submission would cause a panic in the nomad agent. Since the panic was happening in the API handler the agent itself continued running, but this change will the condition more gracefully. By fixing the module method, the API handler now returns the proper error. $ nomad job run foo.nomad Error submitting job: Unexpected response code: 500 (1 error occurred:     * Task group api validation failed: 2 errors occurred:     * Missing tasks for task group     * Task group service validation failed: 1 error occurred:     * Service[0] count-api validation failed: 1 error occurred:     * Consul Connect must be native or use a sidecar service"
6704,core: fix comment on system stack,"This makes me do a double take every time I run into it, so what if we just changed it?"
6705,Merge pull request #7676 from hashicorp/vendor-golang-org-x-20200409,Upgrade all golang.org/x packages
6706,Merge pull request #7678 from hashicorp/docs-connect-config-link-404,docs: fix link to envoy proxy documentation on consul site
6707,docs: fix link to envoy proxy documentation on consul site,
6708,Upgrade all golang.org/x packages,Upgrade all golang.org/x packages to pick up fixes and improvements. Some packages date back to 2018 and so much improvement happened since then!
6709,Merge pull request #7675 from hashicorp/release-post-0110,Prepare for 0.11.1 release
6710,docs: add #7673 to changelog,
6711,Merge pull request #7673 from hashicorp/b-http2-cached-connections,vendor: upgrade golang.org/x/net packages
6712,docs: prep changelog for 0.11.1,
6713,release: bump version to 0.11.1 for development,
6714,Merge pull request #7666 from hashicorp/add-0.11.0-changelog-release-date,changelog: add 0.11.0 release date.
6715,vendor: upgrade golang.org/net/...,"golang.org/net packages are ancient - upgrading them to pick up important fixes, e.g. https://go-review.googlesource.com/c/go/+/87298/"
6716,Merge pull request #7672 from hashicorp/dev-e2e-tweaks-20200409,e2e: add a convenient creation script
6717,fixup! e2e: add a convenient creation script,
6718,e2e: add a convenient creation script,Add a convenience Makefile for creating e2e environment for manual debugging.
6719,changelog: add 0.11.0 release date.,
6720,Merge pull request #7652 from hashicorp/v-gomod-msgpaack,dev: Use go mod for managing hashicorp/go-msgpack
6721,go mod for go-bindata,Use go mod for github.com/hashicorp/go-bindata/go-bindata and github.com/elazarl/go-bindata-assetfs/go-bindata-assetfs but use module to pull the latest master.  These packages don't have release tags so module worksaround it.
6722,Merge pull request #7650 from hashicorp/deflake-set-server-tests,tests: deflake some SetServer related tests
6723,Merge pull request #7658 from hashicorp/docs-0110,docs: update downloads+banner for 0.11.0 GA
6724,dist: make README consistent with service unit (#7648),
6725,Merge pull request #7662 from hashicorp/docs-external-rkt,docs: move rkt to external drivers
6726,change tense,Co-Authored-By: Chris Baker link
6727,docs: move rkt to external drivers,
6728,docs: update downloads+banner for 0.11.0 GA,
6729,Merge pull request #7654 from hashicorp/docs-beta,docs: update changelog/upgrade for 0.11.0
6730,docs: remove 0.11 from scaling docs,Keep beta label for now.
6731,docs: remove beta marker from lifecycle,
6732,Update website/pages/docs/upgrade/upgrade-specific.mdx,Co-Authored-By: Buck Doyle link
6733,Update CHANGELOG.md,Co-Authored-By: Drew Bailey link
6734,docs: update changelog/upgrade for 0.11.0,
6735,build: remove working dir from stack traces (#7653),"Adding module to builds removes the local working directory from the goroutine stack traces, which makes our builds more reproducible and doesn't leak information about our local development workstations or CI environment."
6736,build(deps): bump next from 9.3.1 to 9.3.2 in /website (#7571),Bumps link from 9.3.1 to 9.3.2. - link - link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
6737,dev: Use go mod for managing hashicorp/go-msgpack,
6738,Merge pull request #7651 from hashicorp/docs-0110rc1,docs: add 0.11.0-rc1 to download page
6739,build(deps): bump acorn from 5.7.3 to 5.7.4 in /ui (#7346),Bumps link from 5.7.3 to 5.7.4. - link - link Signed-off-by: dependabot[bot] link Co-authored-by: dependabot[bot] link
6740,docs: add 0.11.0-rc1 to download page,"update banner from ""Beta"" to ""Release Candidate"""
6741,tests: deflake some SetServer related tests,"Some tests assert on numbers on numbers of servers, e.g. TestHTTP_AgentSetServers and TestHTTP_AgentListServers_ACL . Though, in dev and test modes, the agent starts with servers having duplicate entries for advertised and normalized RPC values, then settles with one unique value after Raft/Serf re-sets servers with one single unique value. This leads to flakiness, as the test will fail if assertion runs before Serf update takes effect. Here, we update the inital dev handling so it only adds a unique value if the advertised and normalized values are the same. Sample log lines illustrating the problem: module"
6742,Fix wrong title in sidecar_task stanza docs (#7335),
6743,Improve vault language (#7644),
6744,docs: add warnings for CSI plugin jobspec (#7642), Node/monolith plugins require root privileges and this wasn't being   made super clear. Node/monolith plugins should always be run as system jobs.
6745,e2e: csi: wait for volume write claims to be released before starting read jobs (#7641),
6746,Merge pull request #7643 from hashicorp/b-7537,ar/bridge_networking: ensure cni configuration is loaded
6747,docs: add #7643 to changelog,
6748,ar/bridge: use cni.IsCNINotInitialized helper,
6749,ar/bridge: better cni status err handling,
6750,ar/bridge: ensure cni configuration is always loaded,
6751,Merge pull request #7600 from hashicorp/b-5767,tr/service_hook: prevent Update from running before Poststart finish
6752,docs: fix broken internal link on job plan page (#7640),
6753,Merge pull request #7577 from hashicorp/f-ui/csi-beta-label,UI: Change CSI to Storage and mark it as beta
6754,tr/service_hook: reset initialized flag during deregister,
6755,UI: add exec handling for dead jobs/task states (#7637),This closes #7456. It hides the terminal when the job is dead and displays an error when trying to open an exec session for a task that isn’t running. There’s a skipped test for the latter behaviour that I’ll have to come back for.
6756,UI: add live-updating to exec sidebar (#7499),This closes #7454. It makes use of the existing watchable tools to allow the exec popup sidebar to be live-updating. It also adds alphabetic sorting of task groups and tasks.
6757,Merge pull request #7638 from hashicorp/audit-docs-queryparams,add note about query params for filtering
6758,add note about query params for filtering,
6759,Merge pull request #7618 from hashicorp/b-shutdown-delay-updates,Fixes bug that prevented group shutdown_delay updates
6760,Merge pull request #7630 from hashicorp/f-ui/csi-acceptance-tests,UI: CSI Acceptance Tests
6761,guard against nil maps,
6762,update changelog,
6763,e2e: csi tests can only run on linux (#7635),
6764,test added and removed,
6765,ensure shutdown delay can be removed,
6766,Group shutdown delay fixes,Group shutdown delay updates were not properly handled in Update hook. This commit also ensures that plan output is displayed.
6767,e2e/csi: add waiting for alloc stop,
6768,csi: make volume GC in job deregister safely async,"The module call will block on the client CSI controller RPCs while the alloc still exists on the Nomad client node. So we need to make the volume claim reaping async from the module. This allows module to return immediately. In order to make this work, this changeset changes the volume GC so that the GC jobs are on a by-volume basis rather than a by-job basis; we won't have to query the (possibly deleted) job at the time of volume GC. We smuggle the volume ID and whether it's a purge into the GC eval ID the same way we smuggled the job ID previously."
6769,csi: fix unpublish workflow ID mismatches,"The CSI plugins uses the external volume ID for all operations, but the Client CSI RPCs uses the Nomad volume ID (human-friendly) for the mount paths. Pass the External ID as an arg in the RPC call so that the unpublish workflows have it without calling back to the server to find the external ID. The controller CSI plugins need the CSI node ID (or in other words, the storage provider's view of node ID like the EC2 instance ID), not the Nomad node ID, to determine how to detach the external volume."
6770,scheduler: prevent a reported NPE for CSI (#7633),
6771,Merge pull request #7612 from hashicorp/b-auth-alloc-exec-ws,Authenticate alloc/exec websocket requests
6772,Test coverage for the volume detail page,
6773,Sort allocation tables by modify index,
6774,Update breadcrumb to match side menu,
6775,Fix the allocations page compoent to support multiple prop keys,"It was designed to be used this way, but allocationFor has never worked as intended :facepalm:"
6776,Add page size select tests to volumes list tests,
6777,Acceptance tests for the volumes list page,
6778,Page object for volumes list,
6779,Handle namespaces in the mirage handler for volumes,
6780,Correctly handle the namespace query param and forbidden state,
6781,Annotate volume row and make the tr clickable,
6782,Filter out volumes that don't match the chosen namespace,
6783,"Sort alphabetically, A first",
6784,Merge pull request #7574 from hashicorp/f-ui/configurable-page-sizes,UI Configurable Page Sizes
6785,csi: run volume claim GC on module (#7615),"  nomad/state/state_store: error message copy/paste error   nomad/structs/structs: add a VolumeEval to the JobDeregisterResponse   nomad/job_endpoint: synchronously, volumeClaimReap on job Deregister   nomad/core_sched: make volumeClaimReap available without a CoreSched   nomad/job_endpoint: Deregister return early if the job is missing   nomad/job_endpoint_test: job Deregistion is idempotent   nomad/core_sched: conditionally ignore alloc status in volumeClaimReap   nomad/job_endpoint: volumeClaimReap all allocations, even running   nomad/core_sched_test: extra argument to collectClaimsToGCImpl   nomad/job_endpoint: job deregistration is not idempotent "
6786,Merge pull request #7622 from hashicorp/tests-deflake-TestAutopilot_RollingUpdate,tests: deflake TestAutopilot_RollingUpdate
6787,tests: deflake TestAutopilot_RollingUpdate,"I hypothesize that the flakiness in rolling update is due to shutting down s3 server before s4 is properly added as a voter. The chain of the flakiness is as follows:  Bootstrap with s1, s2, s3 Add s4 Wait for servers to register with 3 voting peers But we already have 3 voters (s1, s2, and s3) s4 is added as a non-voter in Raft v3 and must wait until autopilot promots it Test proceeds without s4 being a voter s3 shutdown cluster changes stall due to leader election and too many pending configuration changes (e.g. removing s3 from raft, promoting s4).  Here, I have the test wait until s4 is marked as a voter before shutting down s3, so we don't have too many configuration changes at once. In https://circleci.com/gh/hashicorp/nomad/57092, I noticed the following events: ``` TestAutopilot_RollingUpdate: autopilot_test.go:204: adding server s4     TestAutopilot_RollingUpdate: testlog.go:34: 2020-04-03T20:08:19.789Z [INFO]  nomad/serf.go:60: nomad: adding server: server=""nomad-137.global (Addr: 127.0.0.1:9177) (DC: dc1)""     TestAutopilot_RollingUpdate: testlog.go:34: 2020-04-03T20:08:19.789Z [INFO]  raft/raft.go:1018: nomad.raft: updating configuration: command=AddNonvoter server-id=c54b5bf4-1159-34f6-032d-56aefeb08425 server-addr=127.0.0.1:9177 servers=""[{Suffrage:Voter ID:df01ba65-d1b2-17a9-f792-a4459b3a7c09 Address:127.0.0.1:9171} {Suffrage:Voter ID:c3337778-811e-2675-87f5-006309888387 Address:127.0.0.1:9173} {Suffrage:Voter ID:186d5e15-c473-e2b3-b5a4-3259a84e10ef Address:127.0.0.1:9169} {Suffrage:Nonvoter ID:c54b5bf4-1159-34f6-032d-56aefeb08425 Address:127.0.0.1:9177}]"" module ``` Note how s3, c3337778, is present in the peers list in the final failure, but s4, c54b5bf4, is added as a Nonvoter and isn't present in the final peers list."
6788,fix encoding/decoding tags for api.Task (#7620),"When module encodes the response, if the decoded JSON from the API doesn't exactly match the API struct, the field value will be omitted even if it has a value. We only want the JSON struct tag to module."
6789,e2e: improve test reliability for CSI (#7616),"This changeset:  adds eval status to the error messages emitted when we have   placement failure in tests. The implementation here isn't quite   perfect but it's a lot better than ""condition not met"". enforces the ordering of teardown of the CSI test doesn't pass the purge flag to one of the two CSI tests, so that we   exercise both code paths."
6790,Rename OCIRuntime to Runtime; allow gpu conflicts is they are the same runtime; add conflict test,
6791,ui: explicit reference to window.localStorage,
6792,fixup! backend: support WS authentication handshake in alloc/exec,
6793,Support custom docker runtimes,This enables customers who want to use gvisor and have it configured on their clients.
6794,Remove redundant step assertion,
6795,Remove redundant pause,
6796,Remove redundant assertions,These are more things that are already covered elsewhere.
6797,Remove redundant assertions from token exec test,"This only needs to check that the token is sent, the rest of the assertions were covered by the previous test."
6798,Remove intermediate storage variable,
6799,Change to setting token directly,"Most tests bypass setting the token via the UI, instead choosing to set it in localStorage directly, because the acceptance tests for the token UI are sufficient to exercise that part of the UI, so this speeds up the test a bit."
6800,Add space,
6801,UI: add handling for exec command-editing keys (#7601),"This is a minimal implementation that closes #7463. It doesn’t include true support for moving around within the command to edit using arrow keys because it gets too complex when managing wrapping at the edge of the terminal. Instead, arrow keys are ignored. It also ignores ^A and ^E, which are cursor manipulations that pose similar problems to arrow keys. It does support ^U, which deletes the entire command. It also allows a command to be pasted, which was previously unsupported. This is accomplished by migrating from Xterm.js’s onKey handler to onData, which is recommended here: https://github.com/xtermjs/xterm.js/issues/2673#issuecomment-574897733 onData is a higher-level handler that issues events with the final interpreted data instead of the individual key events. That means the processing in this PR has changed from inspecting DOM key events to inspecting their ASCII equivalents, which I’ve extracted into a utility dictionary for use in tests and implementation. One consequence of ignoring most control characters is that if you paste a string that includes a control character, that character will be stripped. It’s somewhat strange for compound sequences like arrow keys;  if you run copy('/bin/b' + '\x1b[D' + 'ash') in a Javascript console and paste what’s on the clipboard, you get ""/bin/b[Dash"". That’s because the left arrow key, as in that centre portion of the string, is represented by the escape character and a coded sequence. Stripping the control character leaves the coded sequence as part of the paste. That seems like an acceptable compromise vs either ignoring any pasted string with control characters (confusing UX) or trying to interpret and strip all such compound control sequences (difficult to be exhaustive)."
6802,ui: send authentication ws handshake,Have the UI send the authentication websocket handshake message.
6803,backend: support WS authentication handshake in alloc/exec,"The javascript Websocket API doesn't support setting custom headers (e.g. module).  This change adds support for having an authentication handshake message: clients can set module URL query parameter to true and send a single handshake message with auth token first before any other mssage. This is a backward compatible change: it does not affect nomad CLI path, as it doesn't set module parameter."
6804,Merge pull request #7611 from hashicorp/docs-tls-consul-in-changelog,docs: add connect with TLS consul in changelog
6805,docs: add connect w/ tls consul in changelog,
6806,Merge pull request #7602 from hashicorp/b-connect-bootstrap-tls-config,connect: set consul TLS options on envoy bootstrap
6807,e2e: remove gometa from e2eutils (#7610),
6808,Merge pull request #7494 from hashicorp/update-audit-docs,make placement of filter and sinks stanzas clearer
6809,Merge pull request #7608 from hashicorp/b-config-lower-case,Tweak declared hcl key casing in structs
6810,Update website/pages/docs/configuration/audit.mdx,Co-Authored-By: Mahmood Ali link
6811,make placement of filter and sinks stanzas clearer,
6812,Use lowercase for hcl keys,"This is not a change in behavior, hcl key matching is case insensitive as desmonstrated in module"
6813,agent config parsing tests for scheduler config,
6814,Refactor page-size-select page object into a reusable component,
6815,Merge pull request #7440 from hashicorp/docs-connect-expose,docs: add documentation for proxy.expose configuration
6816,docs: add exposed TG service check examples to expose docs,
6817,Make table foot fields consistent at all breakpoints,This effectively overrides Bulma's default field layout tweaks at different breakpoints. This includes going from flex to block and different font-sizes.
6818,Remove extranneous order property,"The ""default"" order values as set by Bulma are different for different breakpoints. Since this wasn't considering breakpoints, it resulted in the unexpected reordering of pagination elements as different page widths. Turns out removing this property gives us what we want."
6819,csi: internals docs (#7522),Summarizes the internal RFCs for plugins and volume lifecycles.
6820,CSI: move node unmount to server-driven RPCs (#7596),"If a volume-claiming alloc stops and the CSI Node plugin that serves that alloc's volumes is missing, there's no way for the allocrunner hook to send the module and module RPCs. This changeset addresses this issue with a redesign of the client-side for CSI. Rather than unmounting in the alloc runner hook, the alloc runner hook will simply exit. When the server gets the module for the terminal allocation that had a volume claim, it creates a volume claim GC job. This job will made client RPCs to a new node plugin RPC endpoint, and only once that succeeds, move on to making the client RPCs to the controller plugin. If the node plugin is unavailable, the GC job will fail and be requeued."
6821,Apply the page size select behavior to the other pages with the page size selector,
6822,Factor page select tests into their own behavior,
6823,Acceptance tests for the page size selector on the jobs list view,
6824,Repeat new pagination pattern throughout the app,
6825,Reset current page when changing page size,
6826,Replace crusty lt and gt with chevron icons,
6827,Style the page size selector,
6828,Add page size select to the jobs list page,
6829,Page size select component,
6830,New service for storing user settings,
6831,UI: Fix confirmation position for right-aligned TSBs (#7590),"Without this, the confirmation text was extending beyond the edge of the page."
6832,Merge pull request #7594 from hashicorp/f-connect-lifecycle,connect: set task lifecycle config for injected sidecar task
6833,tr/service_hook: update hook fields during update when poststart hasn't finished,
6834,Merge pull request #7592 from hashicorp/b-ui/csi-flaky-test,UI: Fix flaky Volume serializer test
6835,connect: set consul TLS options on envoy bootstrap,"Fixes #6594 #6711 #6714 #7567 e2e testing is still TBD in #6502 Before, we only passed the Nomad agent's configured Consul HTTP address onto the module bootstrap command. This meant any Consul setup with TLS enabled would not work with Nomad's Connect integration. This change now sets CLI args and Environment Variables for configuring TLS options for communicating with Consul when doing the envoy bootstrap, as described in https://www.consul.io/docs/commands/connect/envoy.html#usage"
6836,tr/service_hook: prevent Update from running before Poststart has finished,
6837,e2e: have TF write-out HCL for CSI volume registration (#7599),
6838,csi: volume validate namespace (#7587),  nomad/state/state_store: enforce that the volume namespace exists   nomad/csi_endpoint_test: a couple of broken namespaces now   nomad/csi_endpoint_test: one more test   nomad/node_endpoint_test: use structs.DefaultNamespace   nomad/state/state_store_test: use DefaultNamespace 
6839,lint: gofmt,
6840,connect: set task lifecycle config for injected sidecar task,fixes #7593
6841,Fix flaky serializer test,
6842,Merge pull request #7561 from hashicorp/docs-link2tdguide,[docs] Adding link to learn track
6843,Merge pull request #7591 from hashicorp/website-release-0.11.0-beta2,website: link to 0.11.0-beta2 release
6844,website: link to 0.11.0-beta2 release,
6845,Merge pull request #7572 from hashicorp/f-7422-scaling-events,finalizing scaling API work
6846,Merge pull request #7586 from hashicorp/mw.update-netlify-redirects,website: update Netlify redirects syntax
6847,job_endpoint: fixed bad test,
6848,Add new gutter menu tag pattern to Storybook,
6849,Move beta to a tag,
6850,Merge pull request #7588 from hashicorp/b-unbreak-connect-proxy-nil,connect: fix bug where absent connect.proxy stanza needs default config
6851,Merge branch 'f-7422-scaling-events' of github.com:hashicorp/nomad into f-7422-scaling-events,
6852,"added indices to the job scaling events, so we could properly do",blocking queries on the job scaling status
6853,connect: fix bug where absent connect.proxy stanza needs default config,"In some refactoring, a bug was introduced where if the connect.proxy stanza in a submitted job was nil, the default proxy configuration would not be initialized with default values, effectively breaking Connect. module In contrast, by setting an empty proxy stanza, the config values would be inserted correctly. module This commit restores the original behavior, where having a proxy stanza present is not required. The unit test for this case has also been corrected."
6854,Update nomad/state/state_store.go,Co-Authored-By: Drew Bailey link
6855,Update nomad/state/state_store.go,Co-Authored-By: Drew Bailey link
6856,Update nomad/job_endpoint.go,Co-Authored-By: Drew Bailey link
6857,scaling api: more testing around the scaling events api,
6858,website: update netlify redirects syntax,
6859,CI: add xUnit reporting for UI tests  (#7585),This surfaces test failures more clearly on CircleCI by adding testem-multi-reporter to report both via the default TAP reporter as well as an xUnit reporter whose output is stored as an artefact.
6860,adding raft and state_store support to track job scaling events,"updated ScalingEvent API to record ""message string,error bool"" instead of confusing ""reason,error *string"""
6861,set safe default for CSI plugin MaxVolumes (#7583),
6862,hclfmt test fixtures (#7584),
6863,docs: add documentation for proxy.expose configuration,"This changeset adds documentation changes for the new module stanza as well as the module parameter. The examples are centered around proposed changes for the ""countdash"" module in link. The dashboard service will now serve two additonal endpoints  module module  which should serve nicely as expose-able paths."
6864,UI: Add localStorage persistence of exec command (#7563),This closes #7469. Trivial thanks to localStorageProperty! 🥳
6865,Merge pull request #7558 from hashicorp/b-ensure-correct-plugin-version-mapping,plugin: ensure plugin loader maps correct API version to type.
6866,Merge pull request #7578 from hashicorp/b-fix-structs-generation,fix codegen for ugorji/go
6867,fix codegen for ugorji/go,"When generating ugorji/go package, we should use github.com/hashicorp/go-msgpack/codec instead. Also fix the reference for codegen_generated"
6868,Change CSI to Storage and mark it as beta,
6869,Merge pull request #7575 from hashicorp/b-fix-deps,Use latest go-bindata and go-bindata-assetfs
6870,Use latest go-bindata and go-bindata-assetfs,These dep tools aren't tagged properly so shouldn't be installed with go mod
6871,Merge pull request #7573 from hashicorp/f-connect-expose-checks-percheck,merge changes for expose checks percheck
6872,batch updates of changelog items (#7570), batch updates of changelog items  [ci skip]  Update CHANGELOG.md  Co-Authored-By: Jasmine Dahilig link   add PR to changelog   update ui changelog message   docs: note connect expose paths configuration in changelog   Co-authored-by: Michael Schurter link Co-authored-by: Jasmine Dahilig link Co-authored-by: Seth Hoenig link
6873,Merge pull request #7323 from hashicorp/f-connect-expose-checks,connect: enable proxy.expose configuration
6874,docs: note why check.Expose is not part of chech.Hash,
6875,connect: enable automatic expose paths for individual group service checks,"Part of #6120 Building on the support for enabling connect proxy paths in #7323, this change adds the ability to configure the 'service.check.expose' flag on group-level service check definitions for services that are connect-enabled. This is a slight deviation from the ""magic"" that Consul provides. With Consul, the 'expose' flag exists on the connect.proxy stanza, which will then auto-generate expose paths for every HTTP and gRPC service check associated with that connect-enabled service. A first attempt at providing similar magic for Nomad's Consul Connect integration followed that pattern exactly, as seen in #7396. However, on reviewing the PR we realized having the module flag on the proxy stanza inseperably ties together the automatic path generation with every HTTP/gRPC defined on the service. This makes sense in Consul's context, because a service definition is reasonably associated with a single ""task"". With Nomad's group level service definitions however, there is a reasonable expectation that a service definition is more abstractly representative of multiple services within the task group. In this case, one would want to define checks of that service which concretely make HTTP or gRPC requests to different underlying tasks. Such a model is not possible with the course module flag. Instead, we now have the flag made available within the check definitions themselves. By making the expose feature resolute to each check, it is possible to have some HTTP/gRPC checks which make use of the envoy exposed paths, as well as some HTTP/gRPC checks which make use of some orthongonal port-mapping to do checks on some other task (or even some other bound port of the same task) within the task group. Given this example, group ""server-group"" {   network {     mode = ""bridge""     port ""forchecks"" {       to = -1     }   } service {     name = ""myserver""     port = 2000 module } } Nomad will automatically inject (via job endpoint mutator) the extrapolated expose path configuration, i.e. expose {   path {     path            = ""/classic/responder/health""     protocol        = ""http""     local_path_port = 2000     listener_port   = ""forchecks""   } } Documentation is coming in #7440 (needs updating, doing next) Modifications to the module examples in https://github.com/hashicorp/demo-consul-101/pull/6 which will make the examples in the documentation actually runnable. Will add some e2e tests based on the above when it becomes available."
6876,jobspec: parse multi expose.path instead of explicit slice,
6877,connect: enable proxy.passthrough configuration,"Enable configuration of HTTP and gRPC endpoints which should be exposed by the Connect sidecar proxy. This changeset is the first ""non-magical"" pass that lays the groundwork for enabling Consul service checks for tasks running in a network namespace because they are Connect-enabled. The changes here provide for full configuration of the connect {     sidecar_service {       proxy {         expose {           paths = [{         path =                  protocol =                  local_path_port =                  listener_port =        }, ... ]        }     }   } stanza. Everything from module and below is new, and partially implements the precedent set by Consul:   https://www.consul.io/docs/connect/registration/service-registration.html#expose-paths-configuration-reference Combined with a task-group level network port-mapping in the form: port ""exposeExample"" { to = -1 } it is now possible to ""punch a hole"" through the network namespace to a specific HTTP or gRPC path, with the anticipated use case of creating Consul checks on Connect enabled services. A future PR may introduce more automagic behavior, where we can do things like 1) auto-fill the 'expose.path.local_path_port' with the default value of the    'service.port' value for task-group level connect-enabled services. 2) automatically generate a port-mapping 3) enable an 'expose.checks' flag which automatically creates exposed endpoints    for every compatible consul service check (http/grpc checks on connect    enabled services)."
6878,client: use consistent name for struct receiver parameter,This helps reduce the number of squiggly lines in Goland.
6879,Merge pull request #7569 from acidprime/fix/syntax/codeblock,[docs] Fix syntax error in docs
6880,Fix syntax error in docs,"Prior to this commit, the HCL syntax was invalid. This commit adds a module to make the example pass syntax checks."
6881,csi: use node MaxVolumes during scheduling (#7565),  nomad/state/state_store: CSIVolumesByNodeID ignores namespace   scheduler/scheduler: add CSIVolumesByNodeID to the state interface   scheduler/feasible: check node MaxVolumes   nomad/csi_endpoint: no namespace inn CSIVolumesByNodeID anymore   nomad/state/state_store: avoid DenormalizeAllocationSlice   nomad/state/iterator: clean up SliceIterator Next   scheduler/feasible_test: block with MaxVolumes   nomad/state/state_store_test: fix args to CSIVolumesByNodeID 
6882,csi: add node events to report progress mounting and unmounting volumes (#7547),"  nomad/structs/structs: new NodeEventSubsystemCSI   client/client: pass triggerNodeEvent in the CSIConfig   client/pluginmanager/csimanager/instance: add eventer to instanceManager   client/pluginmanager/csimanager/manager: pass triggerNodeEvent   client/pluginmanager/csimanager/volume: node event on [un]mount   nomad/structs/structs: use storage, not CSI   client/pluginmanager/csimanager/volume: use storage, not CSI   client/pluginmanager/csimanager/volume_test: eventer   client/pluginmanager/csimanager/volume: event on error   client/pluginmanager/csimanager/volume_test: check event on error   command/node_status: remove an extra space in event detail format   client/pluginmanager/csimanager/volume: use snake_case for details   client/pluginmanager/csimanager/volume_test: snake_case details "
6883,UI: Add exec loading template (#7566),"This closes #7460. Before this, there was an incongruous flash of the non-exec UI during loading."
6884,UI: Change exec button to not show on dead jobs (#7548),I still want to add acceptance tests for the existence of these buttons but this change makes the exec button for jobs behave similarly to the others.
6885,Shortening Learn CTA sentence.,
6886,Merge pull request #7554 from benbuzbee/benbuz/fix-seccomp-file,Parse security_opts before sending them to docker daemon
6887,Parse security_opts before sending them to docker daemon,Fixes #6720 Copy the parsing function from the docker CLI. Docker daemon expects to see JSON for seccomp file not a path.
6888,Adding link to learn track,
6889,Merge pull request #7560 from hashicorp/vendor-go-msgpack-v1.1.5,vendor: explicit use of hashicorp/go-msgpack
6890,client: use NewNodeEvent builder for consistency (#7559),
6891,vendor: use tagged hashicorp/go-msgpack,This is to ease go mod migration
6892,fixup! vendor: explicit use of hashicorp/go-msgpack,Signed-off-by: Yoan Blanc link
6893,vendor: explicit use of hashicorp/go-msgpack,Signed-off-by: Yoan Blanc link
6894,Merge pull request #7550 from hashicorp/vendor-fsouza-go-docker-client-20200330,Vendor fsouza/go-docker-client update
6895,Merge pull request #7555 from hashicorp/dev-bootstrap-with-gomod,dev: use go mod to install dev dependencies
6896,plugin: ensure plugin loader maps correct API version to type.,"The plugin loader supplies a version map to ensure the Nomad agent can support the plugins at the version they specify. The map was incorrectly mapping the driver type to the device API supported version identifier. This currently does not cause a bug as both device and driver versions are the same string. This could cause problems in the future, however, if either plugin interface were to change and require version updates."
6897,dev: use go mod to install dev dependencies,"This allows using https download and go mod cache proxies, over using git and downloading entire dependencies git history, hopefully, resulting into a faster installation process."
6898,Merge pull request #7344 from hashicorp/f/volumes-facet,UI: Facet for host volumes
6899,test: assert HostVolumes included in ListNodes,
6900,Tests for the new volumes facet,
6901,Account for an empty string node class,
6902,Add a volume facet to the clients list page,
6903,Add HostVolumes to the NodeListStub,
6904,Merge pull request #7553 from hashicorp/docs-changelog-for-7540,docs: mention #7540 in changelog
6905,Merge pull request #7551 from hashicorp/f-ui/use-new-text-encoder-for-stream-frames,UI: Use new text encoder for stream frames
6906,docs: mention #7540 in changelog,
6907,Merge pull request #7401 from hashicorp/docs-changelog-for-6459,docs: mention #6459 in the changelog
6908,docs: mention #6459 in the changelog,
6909,driver/docker: fix memory swapping,MemorySwappiness can only be set in non-Windows options: https://ci.appveyor.com/project/hashicorp/nomad/builds/31832149 Also fixes https://github.com/hashicorp/nomad/issues/6085
6910,csi: annotate remaining missing cancellation contexts (#7552),
6911,Merge pull request #7508 from greut/docker-drain-timer,docker: drain fingerprint timer
6912,Fix docker/docker compile issue,"Use docker master branch for specific branches, so we can pick up the fix in https://github.com/moby/moby/pull/40021 ."
6913,csi: add grpc retries to client controller RPCs (#7549),"The CSI Specification defines various gRPC Errors and how they may be retried. After auditing all our CSI RPC calls in #6863, this changeset:  adds retries and backoffs to the where they were needed but not implemented annotates those CSI RPCs that do not need retries so that we don't wonder whether it's been left off accidentally added a timeout and cancellation context to the module call, which didn't have one."
6914,Update drivers/docker/fingerprint.go,Co-Authored-By: Mahmood Ali link
6915,Use new text encoder for stream frames,This pattern was introduced with Exec and fixes the multibyte encoding issue that the native window.atob has.
6916,vendor: github.com/containerd/continuity pkgs,
6917,Merge pull request #7524 from hashicorp/docs-consul-acl-minimums,consul: annotate Consul interfaces with ACLs
6918,docs: remove erroneous characters from comment,
6919,vendors: update fsouza/go-docker-client to v.1.6.3,
6920,Merge pull request #7470 from kybin/kybin-patch-1,UI: decode unicode properly in log page
6921,Use scroll-margin with floating navigation (#7528),  Use scroll-margin to offset links when the navigation is sticky   Educate this rule 
6922,vendoring: Update docker packages to v19.03.8,"Also, since github.com/docker/docker is the canonical package names and is transparently forwarded to github.com/moby/moby, I removed the moby/moby references in origin."
6923,e2e: minimize Consul ACL policies used in e2e tests,Issue #7523 documents the Consul ACLs used in each Consul interface used by Nomad. Minimize the policies used in e2e tests so that we are setting a good example.
6924,Merge pull request #7531 from greut/docker-v19.03.8,Docker v19.03.8
6925,Merge pull request #7534 from hashicorp/b-windows-dev-network,windows: support -dev mode
6926,Merge pull request #7542 from jorgemarey/b-fix-lockedUpstreamsUpdate,Add new setUpstreamsLocked function to avoid blocking on Update
6927,consul: annotate Consul interfaces with ACLs,
6928,state: support snapshot of CSI plugin and volume tables (#7546),The module and module tables were missing support for snapshot persist and restore. This means restoring a snapshot would result in missing information for CSI.
6929,Merge pull request #7545 from hashicorp/update-audit-examples,update audit examples to an endpoint that is audited
6930,add a globbed example,
6931,update audit examples to an endpoint that is audited,
6932,Merge pull request #7543 from hashicorp/test-flakiness-20200330_1,Test flakiness fixes - 2020-03-30 Edition
6933,tests: avoid logging after test completion,
6934,avoid logging in draining job watcher,"In tests where the logger is a test logger, emitting a trace log in a background thread while it's shutting down may trigger a panic.  Thus avoid logging Trace if err != nil.  Note that we already log an error when err isn't a trace. This fixes cases where tests panic with a trace like: ``` panic: Log in goroutine after TestAllocGarbageCollector_MakeRoomFor_MaxAllocs has completed goroutine 30 [running]: testing.(common).logDepth(0xc000aa9e60, 0xc000c4a000, 0xab, 0x3)         /usr/local/Cellar/go/1.14/libexec/src/testing/testing.go:680 +0x4d3 testing.(common).log(...)         /usr/local/Cellar/go/1.14/libexec/src/testing/testing.go:662 testing.(common).Logf(0xc000aa9e60, 0x690b941, 0x4, 0xc001366c00, 0x2, 0x2)         /usr/local/Cellar/go/1.14/libexec/src/testing/testing.go:701 +0x7e github.com/hashicorp/nomad/helper/testlog.(writer).Write(0xc000a82a60, 0xc0000b48c0, 0xab, 0x13f, 0x0, 0x0, 0x0)         /Users/notnoop/go/src/github.com/hashicorp/nomad/helper/testlog/testlog.go:34 +0x106 github.com/hashicorp/nomad/vendor/github.com/hashicorp/go-hclog.(writer).Flush(0xc000a80900, 0xbf9870f000000001, 0x20a87556e, 0x8b12bc0)         /Users/notnoop/go/src/github.com/hashicorp/nomad/vendor/github.com/hashicorp/go-hclog/writer.go:29 +0x14f github.com/hashicorp/nomad/vendor/github.com/hashicorp/go-hclog.(intLogger).log(0xc000e2c180, 0xc0003b6880, 0x17, 0x1, 0x6974edc, 0x22, 0xc000db57a0, 0x6, 0x6)         /Users/notnoop/go/src/github.com/hashicorp/nomad/vendor/github.com/hashicorp/go-hclog/intlogger.go:139 +0x15d github.com/hashicorp/nomad/vendor/github.com/hashicorp/go-hclog.(intLogger).Trace(0xc000e2c180, 0x6974edc, 0x22, 0xc000db57a0, 0x6, 0x6)         /Users/notnoop/go/src/github.com/hashicorp/nomad/vendor/github.com/hashicorp/go-hclog/intlogger.go:446 +0x7a github.com/hashicorp/nomad/vendor/github.com/hashicorp/go-hclog.(interceptLogger).Trace(0xc0002f1ad0, 0x6974edc, 0x22, 0xc000db57a0, 0x6, 0x6)         /Users/notnoop/go/src/github.com/hashicorp/nomad/vendor/github.com/hashicorp/go-hclog/interceptlogger.go:48 +0x9c github.com/hashicorp/nomad/nomad/drainer.(*drainingJobWatcher).watch(0xc0002f2380)         /Users/notnoop/go/src/github.com/hashicorp/nomad/nomad/drainer/watch_jobs.go:147 +0x1125 created by github.com/hashicorp/nomad/nomad/drainer.NewDrainingJobWatcher         /Users/notnoop/go/src/github.com/hashicorp/nomad/nomad/drainer/watch_jobs.go:89 +0x1e3 FAIL    github.com/hashicorp/nomad/client       10.605s FAIL ```"
6935,tests: deflake TestAllocGarbageCollector_MakeRoomFor_MaxAllocs,"The test inserts an alloc in the server state, but expect the client to start the alloc runner for it almost immediately. Here, we add a retry loop to check that the client start all expected alloc runners eventually."
6936,tests: add debugging for TestAutopilot_RollingUpdate,
6937,tests: attempt to deflake TestDockerDriver_PidsLimit,This is an attemp to deflake TestDockerDriver_PidsLimit by having one more process and ensuring they run for longer.
6938,Update testify library to v1.5.1,"Pick up a panic fix of https://github.com/stretchr/testify/commit/f1bd0923b8320ddfb0a8a9d919b5aeb8b7a4cc40 Some CirleCI builds fail somewhat mysteriously, e.g. https://circleci.com/gh/hashicorp/nomad/52676 , due to this bug.  The test json file emit the following: module"
6939,tests: remove TestHTTP_NodeDrain_Compat,Nomad 0.11 servers no longer support having pre-0.8 clients.
6940,tests: deflake TestHTTP_NodeDrain,A node may be recognized as not running any allocs and have its drain flag reset before the test queries it.
6941,tests: deflake TestConsul_PeriodicSync,
6942,Merge pull request #7541 from hashicorp/b-7539-persist-snapshot-scaling-policy-table,support for persist/restore snapshot of scaling_policy table
6943,clean up some tests,
6944,Add new setUpstreamsLocked function to avoid lock,
6945,state_store:,"* added method to retrieve all scaling policies for use in snapshotting, plus test * better testing for ScalingPoliciesByNamespace * added scaling policy snapshot persist and restore (and test of restore) manually tested snapshot restore. resolves #7539"
6946,Resolve docker types conflict,"Looks like the latest module expect module rather than module. The two types are identical but live in different packages. Here, we embed module from upstream repo, but with the signature we need."
6947,docker: v19.03.8,Signed-off-by: Yoan Blanc link
6948,windows: support -dev mode,"Support running module in Windows, by setting proper network interface. Prior to this change, module uses module interface but Windows uses ""Loopback Pseudo-Interface 1"" to refer to loopback device interface: https://github.com/golang/go/blob/go1.14.1/src/net/net_windows_test.go#L304-L318 ."
6949,Merge pull request #7530 from greut/go-connections-v0.4.0,vendor: go-connections v0.4.0
6950,vendor: go-connections v0.4.0,Signed-off-by: Yoan Blanc link
6951,update docs-page component to fix jump to section,
6952,add styling to offset permalinks from sticky nav,
6953,Merge pull request #7503 from hashicorp/docs-system-no-deploy,[docs] System scheduler doesn't do deployments.
6954,Merge pull request #7525 from hashicorp/docs-netns-note,docs: improve wording of linux requirement
6955,docs: improve wording of linux requirement,
6956,Merge pull request #7517 from hashicorp/docs-sunset-guides,Sunset /guide folder; Fix links
6957,fix search and replace error,
6958,Merge pull request #7520 from hashicorp/audit-httphandler,wrap http.Handlers
6959,remove auditing for /ui/,
6960,wrap http.Handlers,better comments
6961,Fixed pages with new changes,
6962,Fix double redirects,(cherry picked from commit 5cb4e48571609bf391e8dc0afcf832275990f33e)
6963,Move ui guide redirects above catch-all,(cherry picked from commit 81298e3e5b1110a0f4d15e0641e59aee3514b059)
6964,Fix whitespace,(cherry picked from commit 8e247ac192298ad54743a13b75c30b2572493adc)
6965,Fix ACL redirects; sort,(cherry picked from commit 624c411830a4f81232ae8e9007ba8f6b68b9f47e)
6966,Remove duplicate redirects,links ending with / and links without a terminal / are handled the same according to the netlify redirect documenation (cherry picked from commit 91171c6a1dd74e3396a66e35c27c6ec858c5977f)
6967,more links,(cherry picked from commit 0e39e2e49b0371c246dc1a9b4bb20af0b2f642a0)
6968,fixing links,(cherry picked from commit 575f22e970e2429b8f9871f11b8c3e0924c82dc2)
6969,correcting layout for reparented pages,(cherry picked from commit ce9d9b5e69fe5f47847cc511ffd73f6b43de92e7)
6970,link-fixup; move navigation,
6971,Fix use-cases,(cherry picked from commit ac49040b9caa843fa78ef494baac3c6a08b15d45)
6972,Removing guide folder,reparented some elements to docs. (cherry picked from commit 4fa35e51e0e0d193bf81f4465f4e1ba4caa5b3ca)
6973,Merge pull request #7509 from hashicorp/b-ec2metadata-outside-aws,fingerprint: handle incomplete AWS imitation APIs
6974,csi: plugin deregistration on plugin job GC (#7502),"  nomad/structs/csi: delete just one plugin type from a node   nomad/structs/csi: add DeleteAlloc   nomad/state/state_store: add deleteJobFromPlugin   nomad/state/state_store: use DeleteAlloc not DeleteNodeType   move CreateTestCSIPlugin to state to avoid an import cycle   nomad/state/state_store_test: delete a plugin by deleting its jobs   nomad/*_test: move CreateTestCSIPlugin to state   nomad/state/state_store: update one plugin per transaction   command/plugin_status_test: move CreateTestCSIPlugin   nomad: csi: handle nils CSIPlugin methods, clarity "
6975,Merge pull request #7257 from bbckr/avoid-resolving-dot-in-named-pipe,Avoid resolving dotted segments when host path for volume is named pipe
6976,Anchor Link Fixes (#7287),
6977,Merge pull request #7512 from hashicorp/b-ui/null-host-volumes,UI: Guard against a null value for the HostVolumes hash
6978,Guard against a null value for the HostVolumes hash,"When a node has no host volumes, the API response will have a null value for the HostVolumes attribute, which in turn becomes a null value instead of an empty array in the store. This protects against that, ensuring host volumes is always an array."
6979,csi: make volume registration idempotent (#7490),"If not in use and not changing external ids, it should not be an error to register a volume again.  nomad/state/state_store: make volume registration idempotent"
6980,fixup! tests: Add tests for EC2 Metadata immitation cases,
6981,fixup! tests: Add tests for EC2 Metadata immitation cases,
6982,fingerprint: handle incomplete AWS immitation APIs,"Fix a regression where we accidentally started treating non-AWS environments as AWS environments, resulting in bad networking settings. Two factors some at play: First, in [1], we accidentally switched the ultimate AWS test from checking module to module.  This means that nomad started treating more environments as AWS; e.g. Hetzner implements module but not module. Second, some of these environments return empty values instead of errors!  Hetzner returns empty 200 response for module, resulting into bad networking configuration. This change fix the situation by restoring the check to module and ensuring that we only set network configuration when the ip address is not-empty.  Also, be more defensive around response whitespace input. [1] https://github.com/hashicorp/nomad/pull/6779"
6983,tests: Add tests for EC2 Metadata immitation cases,Test that nomad doesn't set empty/bad network configuration when in an environment that does incomplete immitation of EC2 Metadata API.
6984,fixup! docker: drain fingerprint timer,Signed-off-by: Yoan Blanc link
6985,docker: drain fingerprint timer,Signed-off-by: Yoan Blanc link
6986,csi: nomad/structs: test volume denormalize without plugin (#7472),
6987,Merge pull request #7504 from hashicorp/br.website-master-catchup,website: Miscellaneous cherry-picks from stable-website that was accidentally never pushed to master
6988,Adds .11 Alert Banner,
6989,Update schedulers.mdx,
6990,clean up css styles,
6991,Constrain subnav,
6992,add csi feature content,
6993,"Update website dependencies, fix IE11 (#7345)",
6994,Merge pull request #7488 from hashicorp/mv-noopauditor,allow all build contexts to use noOpAuditor
6995,UI: Fix check for Mirage presence setting up sockets (#7497),"Without this, exec UI doesn’t work at all in the binary. I made an unfortunate error in not copying the environment check from app/utils/fetch.js."
6996,docs: add beta tag to lifecycle stanza (#7496),
6997,UI: Change determination of exec sidebar active tasks (#7491),This closes #7476. The decomposition of computed properties is necessary to avoid nested aggregate dependent keys; the previous dependent key of module will be inadequate when the sidebar becomes live-updating.
6998,docs: lifecycle stanza (#7493),
6999,Merge pull request #7478 from hashicorp/docs-scaling-api,docs: nomad scaling policy api
7000,Merge pull request #7489 from hashicorp/docs-update-website-0.11.0-beta1,Prepare website for 0.11.0-beta1 release
7001,Merge pull request #7492 from hashicorp/doc-fielddiff-comparison-reminder,doc: add a reminder about field order for diff comparisons
7002,doc: add a reminder about field order for diff comparisons,"After spending hours re-learning this lesson more than once, update the jobspec contribution guide with a reminder about how to configure FieldDiff comparisons."
7003,add beta info,
7004,Publish nomad 0.10.5 release,
7005,sync changes made to oss files from ent,
7006,add in change missed from ent,
7007,add auditor,
7008,allow all build contexts to use noOpAuditor,
7009,Merge pull request #7487 from hashicorp/b-xss-oss,agent: prevent XSS by controlling Content-Type
7010,changelog: add 0.10.5 entry,[ci skip]
7011,api: prevent panic if volume has nil allocs (#7486),
7012,remove double negative from comment,Co-Authored-By: Mahmood Ali link
7013,test: assert monitor endpoint sets proper headers,
7014,test: assert fs endpoints are xss safe,
7015,agent: prevent XSS by controlling Content-Type,
7016,Merge pull request #7484 from hashicorp/fix-tests-20200325_1,Some test fixes
7017,UI: Support for CSI (#7446),Closes #7197 #7199 Note: Test coverage is limited to adapter and serializer unit tests. All acceptance tests have been stubbed and all features have been manually tested end-to-end. This represents Phase 1 of #6993 which is the core workflow of CSI in the UI. It includes a couple new pages for viewing all external volumes as well as the allocations associated with each. It also updates existing volume related views on job and allocation pages to handle both Host Volumes and CSI Volumes.
7018,Update website/pages/api-docs/jobs.mdx,Co-Authored-By: James Rasell link
7019,tests: test agent to use a noop auditor,
7020,tests: TestCSIPluginEndpoint_ACLNamespaceAlloc is ent,TestCSIPluginEndpoint_ACLNamespaceAlloc uses namespace features not present in OSS.
7021,tests: relax index checks,"TestStateStore_Indexes specifically tests for module index, but asserts on the exact number of indexes present in the state.  This is fragile and will break almost everytime we add a state index."
7022,Merge pull request #7485 from hashicorp/backfill-changelog,add missing changelog entry for 6975
7023,add missing changelog entry for 6975,
7024,Merge pull request #7383 from hashicorp/b-health-detect-failing-tasks,health: detect failing tasks
7025,Merge pull request #7482 from hashicorp/b-fix-tests-20200324,Fix some flaky tests
7026,tweaks 0.11.0 changelog (#7481),
7027,tests: restart restartpolicy for all tasks in tests,
7028,ci: collect json file,Start collecting raw module output to help with debugging odd CI failures.
7029,tests: populate task restart policy properly,
7030,Merge pull request #7466 from hashicorp/csi_changelog,add changelog entries for 0.11.0
7031,Merge pull request #7480 from hashicorp/docs-ent-fix-typo,fix typo
7032,fix typo,
7033,Merge pull request #7479 from hashicorp/docs-ent-audit,update enterprise audit blurb
7034,update enterprise audit blurb,
7035,UI: add exec terminal (#6697),"This connects Xterm.js to a Nomad exec websocket so people can interact on clients via live sessions. There are buttons on job, allocation, task group, and task detail pages that open a popup that lets them edit their shell command and start a session. More is to come, as recorded in issues."
7036,added documentation for scaling stanza,
7037,Merge pull request #7288 from hashicorp/f-task-restart-policy,Support per-task RestartPolicy
7038,document new scaling APIs in the API section,
7039,tests: fix TestAllocations_GarbageCollect,
7040,tests: update AR task restart policy,
7041,per-task restart policy,
7042,Merge pull request #7474 from hashicorp/f-scaling-changes-from-review,more testing for scaling API
7043,update RPC scaling endpoint tests to use renamed 'scale' policy disposition,
7044,update changelog 0.11 with task dependencies,
7045,"more testing for ScalingPolicy, mainly around parsing and canonicalization for Min/Max",
7046,test coverage for scaling policy min/max parsing,
7047,"csi: return an empty result list from plugins & volumes without module, not an error (#7471)",
7048,Merge pull request #7429 from hashicorp/docs-audit-logging,docs: audit logging
7049,enterprise index page update,
7050,CSI: HTTP API docs (#7435),"HTTP API documentation for the module and module endpoints, to support CSI."
7051,Audit logging documentation,docs for audit logging enterprise only note enterprise page audit blurb add audit to sidebar add general options audit info fix name for docs-navigation link to docs more docs add audit log entry examples fix audit link clean up audit log docs
7052,Job.Scale should not result in job update or eval create if args.Count == nil,plus tests
7053,csi: remove client from plugin on client node update (#7462),"Plugins track the client nodes where they are placed. On client updates, remove the client from the plugin tracking if the client is no longer running an instance of that controller/node plugin. Extends the state store tests to ensure deregistration works as expected and that controllers and nodes are being tracked independently."
7054,batch update with Mahmood's entries,
7055,updated changelog: scaling APIs,
7056,changelog: enterprise audit logging,
7057,Update CHANGELOG.md,Co-Authored-By: James Rasell link
7058,UI: decode unicode properly in log page,
7059,Merge pull request #7409 from hashicorp/scaling-api,Scaling API changes
7060,Update changelog for exec UI,
7061,add changelog entries for CSI,
7062,Documentation for CSI command line and jobspec (#7439),Includes:  changes module and module changes to module block in jobspec new module block in jobspec new module commands new module command
7063,bad conversion between api.ScalingPolicy and structs.ScalingPolicy meant,that we were throwing away .Min if provided
7064,added new int64ToPtr method to api/util to avoid pulling in other packages,
7065,add acl validation to Scaling.ListPolicies and Scaling.GetPolicy,
7066,made count optional during job scaling actions,"added ACL protection in Job.Scale in Job.Scale, only perform a Job.Register if the Count was non-nil"
7067,wip: ACL checking for RPC Job.ScaleStatus,
7068,added new ACL capabilities related to autoscaling:,"- read-job-scaling - scale-job - list-scaling-policies - read-scaling-policy updated the read and right policy dispositions, added the new autoscaler disposition"
7069,csi: volume deregister fails for volumes actively in use (#7445),  nomad/structs/csi: add InUse to CSIVolume   nomad/state/state_store: block volume deregistration for in use vols 
7070,Merge pull request #7450 from hashicorp/b-csi-plugin-health-counts,csi: fix missing health count from volume list stub
7071,"changes to Canonicalize, Validate, and api->struct conversion so that tg.Count, tg.Scaling.Min/Max are well-defined with reasonable defaults."," tg.Count defaults to tg.Scaling.Min if present (falls back on previous default of 1 if Scaling is absent) Validate() enforces tg.Scaling.Min <= tg.Count <= tg.Scaling.Max  modification in ApiScalingPolicyToStructs, api.TaskGroup.Validate so that defaults are handled for TaskGroup.Count and"
7072,scaling api: put api. objects in agreement with structs. objects,
7073,fixed http endpoints for job.register and job.scalestatus,
7074,"finished Job.ScaleStatus RPC, need to work on http endpoint",
7075,"wip: scaling status return, almost done",
7076,scaling: ensure min and max int64s are in toplevel of block.,
7077,wip: some tests still failing,"updating job scaling endpoints to match RFC, cleaning up the API object as well"
7078,"finished refactoring state store, schema, etc",
7079,wip: removed some commented junk from scaling poc,
7080,wip: use testify in job scaling tests,
7081,wip: add tests for job scale method,
7082,wip: add scaling policies methods to the client,
7083,"wip: added Enabled to ScalingPolicyListStub, removed JobID from body of scaling request",
7084,wip: remove PolicyOverride from scaling request,
7085,wip: added tests for client methods around group scaling,
7086,wip: add GET endpoint for job group scaling target,
7087,wip: add job scale endpoint in client,
7088,"wip: added job.scale rpc endpoint, needs explicit test (tested via http now)",
7089,wip: working on job group scaling endpoint,
7090,"wip: added policy get endpoint, added UUID to policy",
7091,wip: test for scaling policy parsing,
7092,wip: was incorrectly parsing ScalingPolicy,
7093,wip: upsert/delete scaling policies on job upsert/delete,
7094,WIP: adding ScalingPolicy to api/structs and state store,
7095,Merge pull request #7414 from hashicorp/b-network-mode-change,Detect network mode change
7096,csi: fix missing health count from volume list stub,
7097,"csi: volume/plugin list should return an empty array, not nil (#7443)","  nomad/csi_endpoint: return an empty list, not nil   nomad/csi_endpoint_test: volume list returns non-nil "
7098,csi: the scheduler allows a job with a volume write claim to be updated (#7438),"  nomad/structs/csi: split CanWrite into health, in use   scheduler/scheduler: expose AllocByID in the state interface   nomad/state/state_store_test   scheduler/stack: SetJobID on the matcher   scheduler/feasible: when a volume writer is in use, check if it's us   scheduler/feasible: remove SetJob   nomad/state/state_store: denormalize allocs before Claim   nomad/structs/csi: return errors on claim, with context   nomad/csi_endpoint_test: new alloc doesn't look like an update   nomad/state/state_store_test: change test reference to CanWrite "
7099,Merge pull request #7444 from hashicorp/rename-auditor,make auditor interface more explicit
7100,rename struct field to auditor,
7101,Merge pull request #7238 from hashicorp/vendor-hcl-20190228,Update github.com/hashicorp/hcl
7102,Merge pull request #7384 from hashicorp/vendoring-tweaks-20200318,Vendor package cleanup
7103,make auditor interface more explicit,
7104,Merge pull request #7417 from hashicorp/f-allocstatus-lifecycle,cli: show lifecycle info in alloc status
7105,vendor golang.org/x/crypto/ed25519/internal/edwards25519,
7106,vendor: remove appengine unused package,
7107,explicitly set github.com/pkg/errors version,
7108,remove unused packages,
7109,update github.com/pkg/errors,
7110,bad package,
7111,cli: show lifecycle info in alloc status,"Display task lifecycle info in module output. I chose to embed it in the Task header and only add it for tasks with lifecycle info. Also, I chose to order the tasks in the following order:  prestart non-sidecar tasks prestart sidecar tasks main tasks  The tasks are sorted lexicographically within each tier. Sample output: ``` $ nomad alloc status 6ec0eb52 ID                  = 6ec0eb52-e6c8-665c-169c-113d6081309b Eval ID             = fb0caa98 Name                = lifecycle.cache[0] [...] Task ""init"" (prestart) is ""dead"" Task Resources CPU        Memory       Disk     Addresses 0/500 MHz  0 B/256 MiB  300 MiB [...] Task ""some-sidecar"" (prestart sidecar) is ""running"" Task Resources CPU        Memory          Disk     Addresses 0/500 MHz  68 KiB/256 MiB  300 MiB [...] Task ""redis"" is ""running"" Task Resources CPU         Memory           Disk     Addresses 10/500 MHz  984 KiB/256 MiB  300 MiB [...] ```"
7112,Merge pull request #7437 from hashicorp/ci-build-darwin,build darwin binaries in CI
7113,ci: fix darwin artifact path,
7114,Merge pull request #7436 from hashicorp/b-fix-compilation,fix compilation with  correct func
7115,fix compilation with  correct func,
7116,Merge pull request #7012 from hashicorp/f-csi-volumes,Container Storage Interface Support
7117,Merge pull request #7419 from hashicorp/f-event-pkg,"Audit config, seams for enterprise audit features"
7118,csi: add mount_options to volumes and volume requests (#7398),"Add mount_options to both the volume definition on registration and to the volume block in the group where the volume is requested. If both are specified, the options provided in the request replace the options defined in the volume. They get passed to the NodePublishVolume, which causes the node plugin to actually mount the volume on the host. Individual tasks just mount bind into the host mounted volume (unchanged behavior). An operator can mount the same volume with different options by specifying it twice in the group context. closes #7007   nomad/structs/volumes: add MountOptions to volume request   jobspec/test-fixtures/basic.hcl: add mount_options to volume block   jobspec/parse_test: add expected MountOptions   api/tasks: add mount_options   jobspec/parse_group: use hcl decode not mapstructure, mount_options   client/allocrunner/csi_hook: pass MountOptions through   client/allocrunner/csi_hook: add a VolumeMountOptions client/allocrunner/csi_hook: drop Options client/allocrunner/csi_hook: use the structs options   client/pluginmanager/csimanager/interface: UsageOptions.MountOptions   client/pluginmanager/csimanager/volume: pass MountOptions in capabilities   plugins/csi/plugin: remove todo 7007 comment   nomad/structs/csi: MountOptions   api/csi: add options to the api for parsing, match structs   plugins/csi/plugin: move VolumeMountOptions to structs   api/csi: use specific type for mount_options   client/allocrunner/csi_hook: merge MountOptions here   rename CSIOptions to CSIMountOptions   client/allocrunner/csi_hook   client/pluginmanager/csimanager/volume   nomad/structs/csi   plugins/csi/fake/client: add PrevVolumeCapability   plugins/csi/plugin   client/pluginmanager/csimanager/volume_test: remove debugging   client/pluginmanager/csimanager/volume: fix odd merging logic   api: rename CSIOptions -> CSIMountOptions   nomad/csi_endpoint: remove a 7007 comment   command/alloc_status: show mount options in the volume list   nomad/structs/csi: include MountOptions in the volume stub   api/csi: add MountOptions to stub   command/volume_status_csi: clean up csiVolMountOption, add it   command/alloc_status: csiVolMountOption lives in volume_csi_status   command/node_status: display mount flags   nomad/structs/volumes: npe   plugins/csi/plugin: npe in ToCSIRepresentation   jobspec/parse_test: expand volume parse test cases   command/agent/job_endpoint: ApiTgToStructsTG needs MountOptions   command/volume_status_csi: copy paste error   jobspec/test-fixtures/basic: hclfmt   command/volume_status_csi: clean up csiVolMountOption "
7119,csi: improve error messages from scheduler (#7426),
7120,csi: stub fingerprint on instance manager shutdown (#7388),Run the plugin fingerprint one last time with a closed client during instance manager shutdown. This will return quickly and will give us a correctly-populated module marked as unhealthy so the Nomad client can update the server about plugin health.
7121,csi: dynamically update plugin registration (#7386),"Allow for faster updates to plugin status when allocations become terminal by listening for register/deregister events from the dynamic plugin registry (which in turn are triggered by the plugin supervisor hook). The deregistration function closures that we pass up to the CSI plugin manager don't properly close over the name and type of the registration, causing monolith-type plugins to deregister only one of their two plugins on alloc shutdown. Rebind plugin supervisor  deregistration targets to fix that. Includes log message and comment improvements"
7122,csi: ACLs for plugin endpoints (#7380),"  acl/policy: add PolicyList for global ACLs   acl/acl: plugin policy   acl/acl: maxPrivilege is required to allow ""list""   nomad/csi_endpoint: enforce plugin access with PolicyPlugin   nomad/csi_endpoint: check job ACL swapped params   nomad/csi_endpoint_test: test alloc filtering   acl/policy: add namespace csi-register-plugin   nomad/job_endpoint: check csi-register-plugin ACL on registration   nomad/job_endpoint_test: add plugin job cases "
7123,csi: implement volume ACLs (#7339),"  acl/policy: add the volume ACL policies   nomad/csi_endpoint: enforce ACLs for volume access   nomad/search_endpoint_oss: volume acls   acl/acl: add plugin read as a global policy   acl/policy: add PluginPolicy global cap type   nomad/csi_endpoint: check the global plugin ACL policy   nomad/mock/acl: PluginPolicy   nomad/csi_endpoint: fix list rebase   nomad/core_sched_test: new test since #7358   nomad/csi_endpoint_test: use correct permissions for list   nomad/csi_endpoint: allowCSIMount keeps ACL checks together   nomad/job_endpoint: check mount permission for jobs   nomad/job_endpoint_test: need plugin read, too "
7124,csi: volume ids are only unique per namespace (#7358),"  nomad/state/schema: use the namespace compound index   scheduler/scheduler: CSIVolumeByID interface signature namespace   scheduler/stack: SetJob on CSIVolumeChecker to capture namespace   scheduler/feasible: pass the captured namespace to CSIVolumeByID   nomad/state/state_store: use namespace in csi_volume index   nomad/fsm: pass namespace to CSIVolumeDeregister & Claim   nomad/core_sched: pass the namespace in volumeClaimReap   nomad/node_endpoint_test: namespaces in Claim testing   nomad/csi_endpoint: pass RequestNamespace to state.*   nomad/csi_endpoint_test: appropriately failed test   command/alloc_status_test: appropriately failed test   node_endpoint_test: avoid notTheNamespace for the job   scheduler/feasible_test: call SetJob to capture the namespace   nomad/csi_endpoint: ACL check the req namespace, query by namespace   nomad/state/state_store: remove deregister namespace check   nomad/state/state_store: remove unused CSIVolumes   scheduler/feasible: CSIVolumeChecker SetJob -> SetNamespace   nomad/csi_endpoint: ACL check   nomad/state/state_store_test: remove call to state.CSIVolumes   nomad/core_sched_test: job namespace match so claim gc works "
7125,volumes: add task environment interpolation to volume_mount (#7364),
7126,csi: implement controller detach RPCs (#7356),This changeset implements the remaining controller detach RPCs: server-to-client and client-to-controller. The tests also uncovered a bug in our RPC for claims which is fixed here; the volume claim RPC is used for both claiming and releasing a claim on a volume. We should only submit a controller publish RPC when the claim is new and not when it's being released.
7127,csi: e2e tests for EBS and EFS plugins (#7343),"This changeset provides two basic e2e tests for CSI plugins targeting common AWS use cases. The EBS test launches the EBS plugin (controller + nodes) and registers an EBS volume as a Nomad CSI volume. We deploy a job that writes to the volume, stop that job, and reuse the volume for another job which should be able to read the data written by the first job. The EFS test launches the EFS plugin (nodes-only) and registers an EFS volume as a Nomad CSI volume. We deploy a job that writes to the volume, stop that job, and reuse the volume for another job which should be able to read the data written by the first job. The writer jobs mount the CSI volume at a location within the alloc dir."
7128,csi: make claims on volumes idempotent for the same alloc (#7328),"Nomad clients will push node updates during client restart which can cause an extra claim for a volume by the same alloc. If an alloc already claims a volume, we can allow it to be treated as a valid claim and continue."
7129,csi: add dynamicplugins registry to client state store (#7330),"In order to correctly fingerprint dynamic plugins on client restarts, we need to persist a handle to the plugin (that is, connection info) to the client state store. The dynamic registry will sync automatically to the client state whenever it receives a register/deregister call."
7130,"csi: use module, when set, to identify volumes for outside RPC calls (#7326)",  nomad/structs/csi: new RemoteID() uses the ExternalID if set   nomad/csi_endpoint: pass RemoteID to volume request types   client/pluginmanager/csimanager/volume: pass RemoteID to NodePublishVolume 
7131,csi: docstring and log message fixups (#7327),Fix some docstring typos and fix noisy log message during client restarts. A log for the common case where the plugin socket isn't ready yet isn't actionable by the operator so having it at info is just noise.
7132,csi: change the API paths to match CLI command layout (#7325),"  command/agent/csi_endpoint: support type filter in volumes & plugins   command/agent/http: use /v1/volume/csi & /v1/plugin/csi   api/csi: use /v1/volume/csi & /v1/plugin/csi   api/nodes: use /v1/volume/csi & /v1/plugin/csi   api/nodes: not /volumes/csi, just /volumes   command/agent/csi_endpoint: fix ot parameter parsing "
7133,csi: volumes listed in module (#7318),  api/allocations: GetTaskGroup finds the taskgroup struct   command/node_status: display CSI volume names   nomad/state/state_store: new CSIVolumesByNodeID   nomad/state/iterator: new SliceIterator type implements memdb.ResultIterator   nomad/csi_endpoint: deal with a slice of volumes   nomad/state/state_store: CSIVolumesByNodeID return a SliceIterator   nomad/structs/csi: CSIVolumeListRequest takes a NodeID   nomad/csi_endpoint: use the return iterator   command/agent/csi_endpoint: parse query params for CSIVolumes.List   api/nodes: new CSIVolumes to list volumes by node   command/node_status: use the new list endpoint to print volumes   nomad/state/state_store: error messages consider the operator   command/node_status: include the Provider 
7134,csi: csi-hostpath plugin unimplemented error on controller publish (#7299),"  client/allocrunner/csi_hook: tag errors   nomad/client_csi_endpoint: tag errors   nomad/client_rpc: remove an unnecessary error tag   nomad/state/state_store: ControllerRequired fix intent   We use ControllerRequired to indicate that a volume should use the publish/unpublish workflow, rather than that it has a controller. We need to check both RequiresControllerPlugin and SupportsAttachDetach from the fingerprint to check that.   nomad/csi_endpoint: tag errors   nomad/csi_endpoint_test: longer error messages, mock fingerprints "
7135,csi: ensure volume query is idempotent (#7303),"We denormalize the module struct when we query it from the state store by getting the plugin and its health. But unless we copy the volume, this denormalization gets synced back to the state store without passing through the fsm (which is invalid)."
7136,csi: ensure GET for plugin is idempotent (#7298),"We denormalize the module struct when we query it from the state store by getting the current set of allocations that provide the plugin. But unless we copy the plugin, this denormalization gets synced back to the state store and each time we query we'll add another copy of the current allocations."
7137,csi: add Provider field to CSI CLIs and APIs (#7285),Derive a provider name and version for plugins (and the volumes that use them) from the CSI identity API module. Expose the vendor name as module in the API and CLI commands.
7138,"csi: CLI for volume status, registration/deregistration and plugin status (#7193)","  command/csi: csi, csi_plugin, csi_volume   helper/funcs: move ExtraKeys from parse_config to UnusedKeys   command/agent/config_parse: use helper.UnusedKeys   api/csi: annotate CSIVolumes with hcl fields   command/csi_plugin: add Synopsis   command/csi_volume_register: use hcl.Decode style parsing   command/csi_volume_list   command/csi_volume_status: list format, cleanup   command/csi_plugin_list   command/csi_plugin_status   command/csi_volume_deregister   command/csi_volume: add Synopsis   api/contexts/contexts: add csi search contexts to the constants   command/commands: register csi commands   api/csi: fix struct tag for linter   command/csi_plugin_list: unused struct vars   command/csi_plugin_status: unused struct vars   command/csi_volume_list: unused struct vars   api/csi: add allocs to CSIPlugin   command/csi_plugin_status: format the allocs   api/allocations: copy Allocation.Stub in from structs   nomad/client_rpc: add some error context with Errorf   api/csi: collapse read & write alloc maps to a stub list   command/csi_volume_status: cleanup allocation display   command/csi_volume_list: use Schedulable instead of Healthy   command/csi_volume_status: use Schedulable instead of Healthy   command/csi_volume_list: sprintf string   command/csi: delete csi.go, csi_plugin.go   command/plugin: refactor csi components to sub-command plugin status   command/plugin: remove csi   command/plugin_status: remove csi   command/volume: remove csi   command/volume_status: split out csi specific   helper/funcs: add RemoveEqualFold   command/agent/config_parse: use helper.RemoveEqualFold   api/csi: do ,unusedKeys right   command/volume: refactor csi components to module   command/volume_register: split out csi specific   command/commands: use the new top level commands   command/volume_deregister: hardwired type csi for now   command/volume_status: csiFormatVolumes rescued from volume_list   command/plugin_status: avoid a panic on no args   command/volume_status: avoid a panic on no args   command/plugin_status: predictVolumeType   command/volume_status: predictVolumeType   nomad/csi_endpoint_test: move CreateTestPlugin to testing   command/plugin_status_test: use CreateTestCSIPlugin   nomad/structs/structs: add CSIPlugins and CSIVolumes search consts   nomad/state/state_store: add CSIPlugins and CSIVolumesByIDPrefix   nomad/search_endpoint: add CSIPlugins and CSIVolumes   command/plugin_status: move the header to the csi specific   command/volume_status: move the header to the csi specific   nomad/state/state_store: CSIPluginByID prefix   command/status: rename the search context to just Plugins/Volumes   command/plugin,volume_status: test return ids now   command/status: rename the search context to just Plugins/Volumes   command/plugin_status: support -json and -t   command/volume_status: support -json and -t   command/plugin_status_csi: comments   command/*_status: clean up text   api/csi: fix stale comments   command/volume: make deregister sound less fearsome   command/plugin_status: set the id length   command/plugin_status_csi: more compact plugin health   command/volume: better error message, comment "
7139,storage: add volumes to 'nomad alloc status' CLI (#7256),"Adds a stanza for both Host Volumes and CSI Volumes to the the CLI output for module. Mostly relies on information already in the API structs, but in the case where there are CSI Volumes we need to make extra API calls to get the volume status. To reduce overhead, these extra calls are hidden behind the module flag."
7140,csi: remove DevDisableBootstrap flag from tests (#7267),"In #7252 we removed the module flag to require tests to honor only module, in order to reduce a source of test flakiness. This changeset applies the same fix to the CSI tests."
7141,csi: volumes use module rather than module (#7250),"  structs: add ControllerRequired, volume.Name, no plug.Type   structs: Healthy -> Schedulable   state_store: Healthy -> Schedulable   api: add ControllerRequired to api data types   api: copy csi structs changes   nomad/structs/csi: include name and external id   api/csi: include Name and ExternalID   nomad/structs/csi: comments for the 3 ids "
7142,csi add allocation context to fingerprinting results (#7133),"  structs: CSIInfo include AllocID, CSIPlugins no Jobs   state_store: eliminate plugin Jobs, delete an empty plugin   nomad/structs/csi: detect empty plugins correctly   client/allocrunner/taskrunner/plugin_supervisor_hook: option AllocID   client/pluginmanager/csimanager/instance: allocID   client/pluginmanager/csimanager/fingerprint: set AllocID   client/node_updater: split controller and node plugins   api/csi: remove Jobs   The CSI Plugin API will map plugins to allocations, which allows plugins to be defined by jobs in many configurations. In particular, multiple plugins can be defined in the same job, and multiple jobs can be used to define a single plugin. Because we now map the allocation context directly from the node, it's no longer necessary to track the jobs associated with a plugin directly.   nomad/csi_endpoint_test: CreateTestPlugin & register via fingerprint   client/dynamicplugins: lift AllocID into the struct from Options   api/csi_test: remove Jobs test   nomad/structs/csi: CSIPlugins has an array of allocs   nomad/state/state_store: implement CSIPluginDenormalize   nomad/state/state_store: CSIPluginDenormalize npe on missing alloc   nomad/csi_endpoint_test: defer deleteNodes for clarity   api/csi_test: disable this test awaiting mocks: https://github.com/hashicorp/nomad/issues/7123 "
7143,csi: VolumeCapabilities for ControllerPublishVolume,This commit introduces support for providing VolumeCapabilities during requests to module as this is a required field.
7144,csi: Fix Controller RPCs,"Currently the handling of CSINode RPCs does not correctly handle forwarding RPCs to Nodes. This commit fixes this by introducing a shim RPC (nomad/client_csi_enpdoint) that will correctly forward the request to the owning node, or submit the RPC to the client. In the process it also cleans up handling a little bit by adding the module embeded struct for required forwarding state. The CSIControllerQuery embeding the requirement of a module also means we could move node targetting into the shim RPC if wanted in the future."
7145,client: Rename ClientCSI -> CSIController,
7146,csi: Add /dev mounts to CSI Plugins,"CSI Plugins that manage devices need not just access to the CSI directory, but also to manage devices inside module. This commit introduces a module mount to the container so that they may do so."
7147,csi: volume claim garbage collection (#7125),"When an alloc is marked terminal (and after node unstage/unpublish have been called), the client syncs the terminal alloc state with the server via module. For each job that has a terminal alloc, the module RPC handler at the server will emit an eval for a new core job to garbage collect CSI volume claims. When this eval is handled on the core scheduler, it will call a module method to release the claims for all terminal allocs on the job. The volume reap will issue a module RPC for any node that has no alloc claiming the volume. Once this returns (or is skipped), the volume reap will send a new module RPC that releases the volume claim for that allocation in the state store, making it available for scheduling again. This same module method will be called from the core job GC, which gives us a second chance to reclaim volumes during GC if there were controller RPC failures."
7148,csimanager/volume: Update MountVolume docstring,
7149,api: Register CSIPlugin before registering a Volume,
7150,hook resources: Init with empty resources during setup,
7151,csi: Claim CSI Volumes during csi_hook.Prerun,This commit is the initial implementation of claiming volumes from the server and passes through any publishContext information as appropriate. There's nothing too fancy here.
7152,"csi_endpoint: Provide AllocID in req, and return Volume","Currently, the client has to ship an entire allocation to the server as part of performing a VolumeClaim, this has a few problems: Firstly, it means the client is sending significantly more data than is required (an allocation contains the entire contents of a Nomad job, alongside other irrelevant state) which has a non-zero (de)serialization cost. Secondly, because the allocation was never re-fetched from the state store, it means that we were potentially open to issues caused by stale state on a misbehaving or malicious client. The change removes both of those issues at the cost of a couple of more state store lookups, but they should be relatively cheap. We also now provide the CSIVolume in the response for a claim, so the client can perform a Claim without first going ahead and fetching all of the volumes."
7153,csi: Basic volume usage tracking,
7154,csi: Add comment to UsageOptions.ToFS(),
7155,csi: Validate Volumes during registration,"This PR implements some intitial support for doing deeper validation of a volume during its registration with the server. This allows us to validate the capabilities before users attempt to use the volumes during most cases, and also prevents registering volumes without first setting up a plugin, which should help to catch typos and the like during registration. This does have the downside of requiring users to wait for (1) instance of a plugin to be running in their cluster before they can register volumes."
7156,client: Implement ClientCSI.ControllerValidateVolume,
7157,plugins/csi: Implement ConvtrollerValidateCapabilities RPC,
7158,csi: Move VolumeCapabilties helper to package,
7159,sched/feasible: Return more detailed CSI Failure messages,
7160,csi: Pass through usage options to the csimanager,"The CSI Spec requires us to attach and stage volumes based on different types of usage information when it may effect how they are bound. Here we pass through some basic usage options in the CSI Hook (specifically the volume aliases ReadOnly field), and the attachment/access mode from the volume. We pass the attachment/access mode seperately from the volume as it simplifies some handling and doesn't necessarily force every attachment to use the same mode should more be supported (I.e if we let each module specify an override in the future)."
7161,csi: Unpublish volumes during ar.Postrun,"This commit introduces initial support for unmounting csi volumes. It takes a relatively simplistic approach to performing NodeUnpublishVolume calls, optimising for cleaning up any leftover state rather than terminating early in the case of errors. This is because it happens during an allocation's shutdown flow and may not always have a corresponding call to module that succeeded."
7162,csiclient: Add grpc.CallOption support to NodeUnpublishVolume,
7163,taskrunner/volume_hook: Cleanup arg order of prepareHostVolumes,
7164,taskrunner/volume_hook: Mounts for CSI Volumes,"This commit implements support for creating driver mounts for CSI Volumes. It works by fetching the created mounts from the allocation resources and then iterates through the volume requests, creating driver mount configs as required. It's a little bit messy primarily because there's so much terminology overlap and it's a bit difficult to follow."
7165,volume_hook: Loosen validation in host volume prep,
7166,allocrunner: Push state from hooks to taskrunners,"This commit is an initial (read: janky) approach to forwarding state from an allocrunner hook to a taskrunner using a similar module approach that tr's use internally. It should eventually probably be replaced with something a little bit more message based, but for things that only come from pre-run hooks, and don't change, it's probably fine for now."
7167,csi_hook: Stage/Mount volumes as required,"This commit introduces the first stage of volume mounting for an allocation. The csimanager.VolumeMounter interface manages the blocking and actual minutia of the CSI implementation allowing this hook to do the minimal work of volume retrieval and creating mount info. In the future the module request should be replaced by module to minimize the number of RPCs and to handle external triggering of a ControllerPublishVolume request as required. We also need to ensure that if pre-run hooks fail, we still get a full unwinding of any publish and staged volumes to ensure that there are no hanging references to volumes. That is not handled in this commit."
7168,client: Pass an RPC Client to AllocRunners,"As part of introducing support for CSI, AllocRunner hooks need to be able to communicate with Nomad Servers for validation of and interaction with storage volumes. Here we create a small RPCer interface and pass the client (rpc client) to the AR in preparation for making these RPCs."
7169,csi: server-to-controller publish/unpublish RPCs (#7124),"Nomad servers need to make requests to CSI controller plugins running on a client for publish/unpublish. The RPC needs to look up the client node based on the plugin, load balancing across controllers, and then perform the required client RPC to that node (via server forwarding if neccessary)."
7170,csi: stub methods for server-to-controller RPC calls (#7117),
7171,csi_endpoint: Support No ACLs and restrict Nodes,This commit refactors the ACL code for the CSI endpoint to support environments that run without acls enabled (e.g developer environments) and also provides an easy way to restrict which endpoints may be accessed with a client's SecretID to limit the blast radius of a malicious client on the state of the environment.
7172,sched/feasible: Validate CSIVolume's correctly,Previously we were looking up plugins based on the Alias Name for a CSI Volume within the context of its task group. Here we first look up a volume based on its identifier and then validate the existence of the plugin based on its module.
7173,csi: Disable validation of volume topology,
7174,api: Parse CSI Volumes,Previously when deserializing volumes we skipped over volumes that were not of type module. This commit ensures that we parse both host and csi volumes correctly.
7175,sched/feasible: CSI - Filter applicable volumes,This commit filters the jobs volumes when setting them on the feasibility checker. This ensures that the rest of the checker does not have to worry about non-csi volumes.
7176,csi: add PublishContext to CSIVolumeClaimResponse (#7113),The module CSI RPC includes the publish context intended to be passed by the orchestrator as an opaque value to the node plugins. This changeset adds it to our response to a volume claim request to proxy the controller's response back to the client node.
7177,csi: implement CSI controller detach request/response (#7107),This changeset implements the minimal structs on the client-side we need to compile the work-in-progress implementation of the server-to-controller RPCs. It doesn't include implementing the module RPC on the client.
7178,csi: Fix broken call to newVolumeManager,
7179,csi: Provide plugin-scoped paths during RPCs,"When providing paths to plugins, the path needs to be in the scope of the plugins container, rather than that of the host. Here we enable that by providing the mount point through the plugin registration and then use it when constructing request target paths."
7180,csimanager: Cleanup volumemanager setup,
7181,csimanager: Instantiate fingerprint manager's csiclient,
7182,csi: implement releasing volume claims for terminal allocs (#7076),"When an alloc is marked terminal, and after node unstage/unpublish have been called, the client will sync the terminal alloc state with the server via module RPC. This changeset implements releasing the volume claim for each volume associated with the terminal alloc. It doesn't yet implement the RPC call we need to make to the module CSI RPC."
7183,csi: implement VolumeClaimRPC (#7048),"When the client receives an allocation which includes a CSI volume, the alloc runner will block its main module loop. The alloc runner will issue a module RPC to the Nomad servers. This changeset implements the portions of the module RPC endpoint that have not been previously completed."
7184,nomad: csi_endpoint send register & deregister requests to raft (#7059),
7185,csi: fix index maintenance for CSIVolume and CSIPlugin tables (#7049),"  state_store: csi volumes/plugins store the index in the txn   nomad: csi_endpoint_test require index checks need uint64()   nomad: other tests using int 0 not uint64(0)   structs: pass index into New, but not other struct methods   state_store: csi plugin indexes, use new struct interface   nomad: csi_endpoint_test check index/query meta (on explicit 0)   structs: NewCSIVolume takes an index arg now   scheduler/test: NewCSIVolume takes an index arg now "
7186,volume_manager: cleanup of mount detection,"No functional changes, but makes ensure.*Dir follow a nicer return style."
7187,volume_manager: Add support for publishing volumes,
7188,csi: Add grpc.CallOption support to NodePublishVolume,
7189,CSI: Scheduler knows about CSI constraints and availability (#6995),"  structs: piggyback csi volumes on host volumes for job specs   state_store: CSIVolumeByID always includes plugins, matches usecase   scheduler/feasible: csi volume checker   scheduler/stack: add csi volumes   contributing: update rpc checklist   scheduler: add volumes to State interface   scheduler/feasible: introduce new checker collection tgAvailable   scheduler/stack: taskGroupCSIVolumes checker is transient   state_store CSIVolumeDenormalizePlugins comment clarity   structs: remote TODO comment in TaskGroup Validate   scheduler/feasible: CSIVolumeChecker hasPlugins improve comment   scheduler/feasible_test: set t.Parallel   Update nomad/state/state_store.go   Co-Authored-By: Danielle link  Update scheduler/feasible.go  Co-Authored-By: Danielle link   structs: lift ControllerRequired to each volume   state_store: store plug.ControllerRequired, use it for volume health   feasible: csi match fast path remove stale host volume copied logic   scheduler/feasible: improve comments   Co-authored-by: Danielle link"
7190,volume_manager: Initial support for unstaging volumes,
7191,csi: Expose gRPC Options on NodeUnstageVolume,
7192,csi: add empty CSI volume publication GC to scheduled core jobs (#7014),This changeset adds a new core job module to the leader's loop for scheduling core job evals. Right now this is an empty method body without even a config file stanza. Later changesets will implement the logic of volume publication GC.
7193,volume_manager: NodeStageVolume Support,This commit introduces support for staging volumes when a plugin implements the STAGE_UNSTAGE_VOLUME capability. See the following for further reference material:  https://github.com/container-storage-interface/spec/blob/4731db0e0bc53238b93850f43ab05d9355df0fd9/spec.md#nodestagevolume
7194,csi: Expose grpc.CallOptions for NodeStageVolume,
7195,volume_manager: Introduce helpers for staging,This commit adds helpers that create and validate the staging directory for a given volume. It is currently missing usage options as the interfaces are not yet in place for those. The staging directory is only required when a volume has the STAGE_UNSTAGE Volume capability and has to live within the plugin root as the plugin needs to be able to create mounts inside it from within the container.
7196,helper/mount: Add mount helper package,"This package introduces some basic abstractions around mount utilties for various platforms. Initially it only supports linux, but the plan is to expand this as CSI expands across to other platforms."
7197,csi: pluginmanager use PluginID instead of Driver,
7198,csi: server-side plugin state tracking and api (#6966),"  structs: CSIPlugin indexes jobs acting as plugins and node updates   schema: csi_plugins table for CSIPlugin   nomad: csi_endpoint use vol.Denormalize, plugin requests   nomad: csi_volume_endpoint: rename to csi_endpoint   agent: add CSI plugin endpoints   state_store_test: use generated ids to avoid t.Parallel conflicts   contributing: add note about registering new RPC structs   command: agent http register plugin lists   api: CSI plugin queries, ControllerHealthy -> ControllersHealthy   state_store: copy on write for volumes and plugins   structs: copy on write for volumes and plugins   state_store: CSIVolumeByID returns an unhealthy volume, denormalize   nomad: csi_endpoint use CSIVolumeDenormalizePlugins   structs: remove struct errors for missing objects   nomad: csi_endpoint return nil for missing objects, not errors   api: return meta from Register to avoid EOF error   state_store: CSIVolumeDenormalize keep allocs in their own maps   state_store: CSIVolumeDeregister error on missing volume   state_store: CSIVolumeRegister set indexes   nomad: csi_endpoint use CSIVolumeDenormalizePlugins tests "
7199,csi: Add VolumeManager (#6920),"This changeset is some pre-requisite boilerplate that is required for introducing CSI volume management for client nodes. It extracts out fingerprinting logic from the csi instance manager. This change is to facilitate reusing the csimanager to also manage the node-local CSI functionality, as it is the easiest place for us to guaruntee health checking and to provide additional visibility into the running operations through the fingerprinter mechanism and goroutine. It also introduces the VolumeMounter interface that will be used to manage staging/publishing unstaging/unpublishing of volumes on the host."
7200,csi: Support for NodeUnpublishVolume RPCs,
7201,csi: Nil check ToCSIRepresentation implementations,
7202,csi: Add NodePublishVolume RPCs,
7203,csi: Add NodeUnstageVolume RPCs to CSIPlugin,
7204,csi: Add NodeUnstageVolume as a CSI Dependency,
7205,csi: Add NodeStageVolume to fake client,
7206,csi: Add NodeStageVolume RPC,
7207,csi: Add csi.NodeStageVolume to the NodeClient,Implements a fake version of NodeStageVolume as a dependency of implementing the client.NodeStageVolume request
7208,csi: Add Nomad Model for VolumeCapabilities,"This commit introduces a nomad model for interacting with CSI VolumeCapabilities as a pre-requisite for implementing NodeStageVolume and NodeMountVolume correctly. These fields have a few special characteristics that I've tried to model here - specificially, we make a basic attempt to avoid printing data that should be redacted during debug logs (additional mount flags), and also attempt to make debuggability of other integer fields easier by implementing the fmt.Stringer and fmt.GoStringer interfaces as necessary. We do not currnetly implement a CSI Protobuf -> Nomad implementation transformation as this is currently not needed by any used RPCs."
7209,csi_volume_endpoint_test: gen uuids to avoid t.Parallel conflicts,
7210,docs contributing: checklist-command,
7211,nomad/rpc: indicate missing region in error message,
7212,agent: csi endpoint,
7213,api: csi,
7214,csi: do not use namespace specific identifiers,
7215,structs: move the content of csi_volumes into csi,
7216,client structs: use nstructs rather than s for nomad/structs,
7217,server: rpc register CSIVolume,
7218,csi volume endpoint: new RPC endpoint for CSI volumes,
7219,"acl: new NamespaceCapabilityCSIAccess, CSICreateVolume",
7220,"state_store: CSIVolume insert, get, delete, claim","state_store: change claim counts state_store: get volumes by all, by driver state_store: process volume claims state_store: csi volume register error on update"
7221,schema: csi_volumes schema,
7222,"fsm: dispatch CSIVolume register, deregister, claim",
7223,docs: update checklist-rpc-endpoint,
7224,structs: eliminate MaxReaders & MaxWriters,
7225,client structs: move CSIVolumeAttachmentMode and CSIVolumeAccessMode,
7226,"structs: new CSIVolume, request types",
7227,csi: Setup gRPC Clients with a logger,
7228,helper: Add initial grpc logging middleware,
7229,node_status: Add CSI Summary info,"This commit introduces two new fields to the basic output of module. 1) ""CSI Controllers"", which displays the names of registered controller plugins. 2) ""CSI Drivers"", which displays the names of registered CSI Node plugins. However, it does not implement support for verbose output, such as including health status or other fingerprinted data."
7230,api: Include CSI metadata on nodes,
7231,csimanager: Fingerprint Node Service capabilities,
7232,csi: Add NodeGetCapabilities RPC,
7233,csimanager: Fingerprint controller capabilities,
7234,plugins_csi: Add GetControllerCapabilities RPC,
7235,client_csi: Validate Access/Attachment modes,
7236,csi: ClientCSIControllerPublish -> ClientCSIControllerAttach,
7237,csi: Model Attachment and Access modes,
7238,client: Setup CSI RPC Endpoint,This commit introduces a new set of endpoints to a Nomad Client: ClientCSI. ClientCSI is responsible for mediating requests from a Nomad Server to a CSI Plugin running on a Nomad Client. It should only really be used to make controller RPCs.
7239,csi: Add initial plumbing for controller rpcs,
7240,CSI Plugin Registration (#6555),"This changeset implements the initial registration and fingerprinting of CSI Plugins as part of #5378. At a high level, it introduces the following:   A module stanza as part of a Nomad task configuration, to   allow a task to expose that it is a plugin.   A new task runner hook: module. This hook does two   things. When the module stanza is detected, it will   automatically configure the plugin task to receive bidirectional   mounts to the CSI intermediary directory. At runtime, it will then   perform an initial heartbeat of the plugin and handle submitting it to   the new module for further use by the client, and   then run a lightweight heartbeat loop that will emit task events   when health changes.   The module for handling plugins that run   as Nomad tasks, in contrast to the existing catalog that requires   module type plugins and to know the plugin configuration in   advance.   The module which fingerprints CSI plugins, in a similar way to   module and module. It currently only fingerprints   the NodeID from the plugin, and assumes that all plugins are   monolithic.   Missing features   We do not use the live updates of the module registry in   the module yet.   We do not deregister the plugins from the client when they shutdown   yet, they just become indefinitely marked as unhealthy. This is   deliberate until we figure out how we should manage deploying new   versions of plugins/transitioning them. "
7241,vendor: Add github.com/grpc-ecosystem/go-grpc-middleware/retry,
7242,vendor: go-hclog 0.10.1 -> 0.11.0,
7243,vendor: Init csi protobufs,
7244,"Audit config, seams for enterprise audit features",allow oss to parse sink duration clean up audit sink parsing ent eventer config reload fix typo SetEnabled to eventer interface client acl test rm dead code fix failing test
7245,ci: use curl,It's installed by default in macOS unlike wget
7246,ci: build darwin on CI,build darwin binaries in CI as a basic check.  Protects against cross compile issues.
7247,Merge pull request #7431 from hashicorp/ci-golang-1.14.1,use golang 14.1
7248,use golang 14.1,
7249,Replace internal DocsPage with @hashicorp/react-docs-page,
7250,Merge pull request #7428 from hashicorp/revert-7416-bump-go-dockerclient,"Revert ""vendor: fsouza/go-docker-client v1.6.3"""
7251,"Revert ""vendor: fsouza/go-docker-client v1.6.3""",
7252,Merge pull request #7416 from greut/bump-go-dockerclient,vendor: fsouza/go-docker-client v1.6.3
7253,govendor sync,Signed-off-by: Yoan Blanc link
7254,vendor: docker/docker -> moby/moby,Signed-off-by: Yoan Blanc link
7255,docker: disable swap in Windows only,Signed-off-by: Yoan Blanc link
7256,Merge pull request #7373 from hashicorp/daneharrigan-patch-1,Update consul-connect.mdx
7257,health tracker: account for group service checks,
7258,health check account for task lifecycle,"In service jobs, lifecycles non-sidecar task tweak health logic a bit: they may terminate successfully without impacting alloc health, but fail the alloc if they fail. Sidecars should be treated just like a normal task."
7259,health: fail health if any task is pending,"Fixes a bug where an allocation is considered healthy if some of the tasks are being restarted and as such, their checks aren't tracked by consul agent client. Here, we fix the immediate case by ensuring that an alloc is healthy only if tasks are running and the registered checks at the time are healthy. Previously, health tracker tracked task ""health"" independently from checks and leads to problems when a task restarts.  Consider the following series of events:  all tasks start running -> module is true one task has unhealthy checks and get restarted remaining checks are healthy -> module is true propagate health status now that module and module.  This change ensures that we accurately use the latest status of tasks and checks regardless of their status changes. Also, ensures that we only consider check health after tasks are considered healthy, otherwise we risk trusting incomplete checks. This approach accomodates task dependencies well.  Service jobs can have prestart short-lived tasks that will terminate before main process runs. These dead tasks that complete successfully will not negate health status."
7260,tests: add a check for failing service checks,Add tests to check for failing or missing service checks in consul update.
7261,vendor: upgrade some parts of docker,Signed-off-by: Yoan Blanc link
7262,fixup! fixup! vendor: fsouza/go-docker-client v1.6.3,Signed-off-by: Yoan Blanc link
7263,fixup! vendor: fsouza/go-docker-client v1.6.3,Signed-off-by: Yoan Blanc link
7264,vendor: fsouza/go-docker-client v1.6.3,Signed-off-by: Yoan Blanc link
7265,Merge pull request #6843 from hashicorp/lifecycle,Task Lifecycle
7266,fix one test usage of BlockUntil,
7267,address review feedback,
7268,tr: proceed to mark other tasks as dead if alloc fails,
7269,fix test,
7270,change jobspec lifecycle stanza to use sidecar attribute instead of,block_until status
7271,fix restart policy for system jobs with no lifecycle,
7272,remove deadline code for now,
7273,refactor TaskHookCoordinator tests to use mock package and add failed init and sidecar test cases,
7274,remove api package dependency on structs package,
7275,mock task hook coordinator in consul integration test,
7276,remove debugging test code from TestAllocRunner_TaskLeader_StopRestoredTG,
7277,fix bug in lifecycle restore tests after refactor,
7278,fix failing ci test: TestTaskRunner_UnregisterConsul_Retries,
7279,fix linting errors,
7280,add task hook coordinator many init tasks test case,
7281,refactor task hook coordinator helper method and tests,
7282,clean up restore test,
7283,partial test for restore functionality,
7284,account for client restarts in task lifecycle hooks,
7285,fix bug in lifecycle scheduler test mocks,
7286,clean up restart conditions and restart tests for task lifecycle,
7287,put lifecycle nil and empty checks in api Canonicalize,
7288,"remove api dependency on structs package, copy lifecycle defaults to api package",
7289,remove logging debug line from cli,
7290,add appropriate lifecycle deadline default of 120s,
7291,add test cases for scheduler alloc placement with lifecycle resources,
7292,add lifecycle job mock,
7293,add allocfit test for lifecycles,
7294,update task hook coordinator tests,
7295,update scheduler to account for hooks,
7296,minor improvement,
7297,add lifecycle info to alloc status short,
7298,add test for lifecycle coordinator,
7299,add canonicalize in the right place,
7300,incorporate lifecycle into restart tracker,
7301,add canonicalization,
7302,add validation tests and more validation,
7303,Add a coordinator for alloc runners,
7304,it's running now,
7305,change TaskLifecycle RunLevel to Hook and add Deadline time duration,
7306,update structs with lifecycle,
7307,add lifecycle to api and parser,
7308,Detect network mode change,Mark job as updated if network mode changed.
7309,Merge pull request #7408 from greut/vault-sdk,vendor: vault api and sdk
7310,fixup! vendor: add golang.org/x/crypto/ed25519,Signed-off-by: Yoan Blanc link
7311,vendor: add golang.org/x/crypto/ed25519,Signed-off-by: Yoan Blanc link
7312,vendor: vault api and sdk,Signed-off-by: Yoan Blanc link
7313,Merge pull request #7407 from greut/runc-v1.0.0-rc7,Runc v1.0.0 rc7
7314,vendor: opencontainrs/runc v1.0.0-rc7,Signed-off-by: Yoan Blanc link
7315,remove all opencontainers/runc,Signed-off-by: Yoan Blanc link
7316,Merge pull request #7403 from hashicorp/tests-deflake-TestRPC_Limits_Streaming,Deflake TestRPC_Limits_Streaming test
7317,Deflake TestRPC_Limits_Streaming test,"The test starts enough connections to hit the limit, then closes the connection and immediately starts one expecting the new one to succeed. We must wait until the server side recognizes the connection closing and free up a limits slot.  The current test attempts to achieve that by waiting to get an error on conn.Read, however, this error is returned from local client without waiting for server update. As such, I change the logic so it retries on connection rejection but force the first non-EOF failure to be a deadline error."
7318,Merge pull request #7402 from hashicorp/km.docker-env-debug,update website docker job to use proper git url
7319,update website docker job to use proper git url,
7320,Merge pull request #7391 from greut/bump-containerd-console,vendor: update containerd/console
7321,vendor: update containerd/console,Signed-off-by: Yoan Blanc link
7322,Merge pull request #7254 from jboero/patch-1,Completed a ppc64le build for testing.
7323,Merge pull request #7385 from greut/direct-vendors,vendors: avoid vendors from docker's vendors
7324,vendors: avoir vendors from docker's vendors,Signed-off-by: Yoan Blanc link
7325,Merge pull request #7379 from hashicorp/b-fix-agent-cmd--dev-connect-help,cli: fix indentation issue with -dev-connect agent help output.
7326,Merge pull request #7369 from DerekStrickland/ambiguous-use-of-filter,clarify log output
7327,Merge pull request #7269 from hashicorp/checklist-jobspec-update,add note to check for job diff
7328,Merge pull request #7313 from hashicorp/docs-gh-7294,docs: explicitly detail IAM instance profile S3 artifact auth.
7329,Merge pull request #7370 from hashicorp/b-leader-forwarding-client-detection,server: node connections must not be forwarded
7330,Protect against args being modified,
7331,cli: fix indentation issue with -dev-connect agent help output.,
7332,Update consul-connect.mdx,HCL grpc key doesn't need quotes
7333,server: node connections must not be forwarded,"This fixes a bug where a forwarded node update request may be assumed to be the actual direct client connection if the server just lost leadership. When a nomad non-leader server receives a Node.UpdateStatus request, it forwards the RPC request to the leader, and holds on the request Yamux connection in a cache to allow for server<->client forwarding. When the leader handles the request, it must differentiate between a forwarded connection vs the actual connection.  This is done in https://github.com/hashicorp/nomad/blob/v0.10.4/nomad/node_endpoint.go#L412 Now, consider if the non-leader server forwards to the connection to a recently deposed nomad leader, which in turn forwards the RPC request to the new leader. Without this change, the deposed leader will mistake the forwarded connection for the actual client connection and cache it mapped to the client ID.  If the server attempts to connect to that client, it will attempt to start a connection/session to the other server instead and the call will hang forever. This change ensures that we only add node connection mapping if the request is not a forwarded request, regardless of circumstances."
7334,update log output to clarify that nodes were filtered out rather than down,
7335,Merge pull request #7342 from hashicorp/docs-acl-link,docs: add some links to the acl guide
7336,Merge pull request #7236 from hashicorp/b-remove-rkt,Remove rkt as a built-in driver
7337,Merge pull request #7353 from hashicorp/website-code-inline,website: Fix bug with new lines in code samples
7338,Use Head Component (#7334),
7339,Merge pull request #7355 from hashicorp/v-gopsutil-macos,Vendor shirou/gopsutil C files
7340,Vendor shirou/gopsutil c files,"This change adds Darwin and FreeBSD C code of gopsutil library, that is needed for these platforms.  module uses some C code that isn't in a go package, so don't get vendored automatically."
7341,Merge pull request #7352 from hashicorp/c-e2e-fs-creation-token,e2e: use unique CSI token
7342,Fix bug with new lines in code samples,Previously we were adding in an invisible space to force a newline here. That is no longer needed.
7343,Merge pull request #7319 from jescalan/nf.swap-guide-icons,Update Icons for Guides
7344,e2e: use unique CSI token,"Use a unique per-cluster efs creation token, as https://www.terraform.io/docs/providers/aws/r/efs_file_system.html#creation_token. Using a static value prevents having multiple test clusters. [ci skip]"
7345,Merge pull request #7350 from greut/docker-18.09.9,docker: v18.09.9
7346,ci: bump consul and vault,Signed-off-by: Yoan Blanc link
7347,bump golang.org/x/sys,Signed-off-by: Yoan Blanc link
7348,Update gopsutil code,"Latest gosutil includes two backward incompatible changes: First, it removed unused Stolen field in https://github.com/shirou/gopsutil/commit/cae8efcffa765c9534442328d385bdd883faf5df#diff-d9747e2da342bdb995f6389533ad1a3d . Second, it updated the Windows cpu stats calculation to be inline with other platforms, where it returns absolate stats rather than percentages.  See https://github.com/shirou/gopsutil/pull/611."
7349,gopsutils: v2.20.2,Signed-off-by: Yoan Blanc link
7350,docker: v18.09.9,Signed-off-by: Yoan Blanc link
7351,Merge pull request #7348 from greut/fix-govendor-sync,vendor: vendor.json cleanup
7352,fixup! vendor: vendor.json cleanup,Signed-off-by: Yoan Blanc link
7353,vendor: vendor.json cleanup,Signed-off-by: Yoan Blanc link
7354,"clarify downloads page error, document version and prerelease flow",
7355,docs: add some links to the acl guide,"ACL APIs already have osme links, but the command and configuration pages did not."
7356,Merge pull request #7337 from hashicorp/cgbaker-patch-1,fix typo in comment
7357,fix typo in comment,
7358,Merge pull request #7331 from hashicorp/c-deflake-deploymentwatcher,tests: deflake deploymentwatcher package
7359,Merge pull request #7304 from hashicorp/c-check-non-vendored-libraries,ci: add a check for non-vendored packages
7360,Merge pull request #7324 from hashicorp/chngelog-entry-5970,Update CHANGELOG.md with #5970 entry.
7361,"Revert ""Merge pull request #7322 from hashicorp/docs-fix-guide-links""","This reverts commit 4311f5e95657a2eb7b231daf326af252e6c75ae7, reversing changes made to 5d5469e6facfc4ab59235d5532664bb95a597728."
7362,Merge pull request #7322 from hashicorp/docs-fix-guide-links,"Working on ""/guides"" links"
7363,"Working on ""/guides"" links",
7364,tests: deflake deploymentwatcher package,"This deflake the tests in the deploymentwatcher package.  The package uses a mock deployment watcher backend, where the watcher in a background goroutine calls UpdateDeploymentStatus .  If the mock isn't configured to expect the call, the background goroutine will fail.  One UpdateDeploymentStatus call is made at the end of the background goroutine, which may occur after the test completes, thus explaining the flakiness."
7365,Added s390x and ppc64le,IBM testing.
7366,Update CHANGELOG.md with #5970 entry.,
7367,Merge pull request #5970 from jrasell/bug-gh-5506,Fix returned EOF error when calling Nodes GC/GcAlloc API
7368,Merge pull request #7301 from hashicorp/daneharrigan-patch-2,Update index.mdx
7369,Merge pull request #7226 from hashicorp/daneharrigan-patch-1,"Fix rendered backslash in group """""
7370,update icons,
7371,Merge pull request #7310 from hashicorp/b-vault-grace,jobspec: fixup vault_grace deprecation
7372,docs: explicitly detail IAM instance profile S3 artifact auth.,Previously the S3 artifact documentation only referenced using options populated with access credentails when pulling from a bucket that required authentication. This change upadtes the doc to also detail using IAM instance profiles.
7373,jobspec: fixup vault_grace deprecation,Followup to #7170  Moved canonicalization of VaultGrace back into module package. Fixed tests. Made docs styling consistent.
7374,Merge pull request #7170 from fredrikhgrelland/consul_template_upgrade,Update consul-template to v0.24.1 and remove deprecated vault grace
7375,ci: add a check for non-vendored packages,This check fails the lint-go CI job if nomad references a package that is not vendored.
7376,Merge pull request #7300 from hashicorp/cgbaker-patch-1,updated /agent/monitor query parameter
7377,Update index.mdx,"Addressing headers not being rendered. Missing space between ""##"" and text."
7378,updated /agent/monitor query parameter,"query param is module, not module"
7379,Merge pull request #7231 from hashicorp/b-alloc-dev-panic,api: fix panic when displaying devices w/o stat
7380,Merge pull request #7286 from hashicorp/deflake-tests-20200306,Deflake TestServer_ReconcileMember and some leadership related tests
7381,tests: wait until leadership loop finishes,Reverts d5c7d6e491e36a11159211f5236c19a41bed4d8e . We actually need to forward the request to ensure that the leader is properly configured and that establishedLeadership completes.
7382,tests: deflake TestServer_ReconcileMember,TestServer_ReconcileMember assumes that S3 isn't the leader: module call would fail when attempting to remove itself!
7383,Merge pull request #7274 from hashicorp/b-exec-tls,api: alloc exec recovers from bad client connection
7384,UI: Remove build-binaries job for UI-only branches (#7273),
7385,api: alloc exec recovers from bad client connection,"If alloc exec fails to connect to the nomad client associated with the alloc, fail over to using a server. The code attempted to special case module for failover to rule out other permanent non-networking errors, by reusing a pattern in the logging handling. But this pattern does not apply here.  module wraps all errors as module that is net.Error.  The websocket doesn't, and instead returns the raw error.  If the raw error isn't a module, like in the case of TLS handshake errors, the api package would fail immediately rather than failover."
7386,Merge pull request #7263 from hashicorp/docs-more-guide-redirects,Add redirects to learn for migrated guides
7387,add note to check for job diff,
7388,e2e: add EBS and EFS volumes for testing CSI (#7266),"This changeset adds volumes but does not mount them to instances so that we can test the mounting (""staging"") via CSI plugins. The CSI plugins themselves will be installed as Nomad jobs. In order to ensure we can always mount the EFS volume, this changeset pins the deployment of the cluster to a specific subnet. In future work we should spread the cluster out among several AZs and test that behavior explicitly."
7389,Merge pull request #7255 from hashicorp/vendor-update-grpc-20200302,update grpc
7390,update bugsnag config (#7261),
7391,Add redirects to learn for migrated guides,
7392,Merge pull request #7252 from hashicorp/b-test-cluster-forming,Simplify Bootstrap logic in tests
7393,fix typo,
7394,Remove argument passing runtime GOOS,
7395,Fix too many arguments,
7396,Merge pull request #7237 from hashicorp/b-config-cnipath-parsing,Honor CNI and bridge related config fields
7397,update grpc,Upgrade grpc to v1.27.1 and protobuf plugins to v1.3.4.
7398,Silly copy pasta tabs vs spaces... 🤦,
7399,Avoid resolving dotted segments when host path for volume is named pipe,
7400,Merge pull request #6930 from JanMa/add-nspawn-driver,docs: add nspawn as external task driver plugin
7401,Completed a ppc64le build for testing.,Ran into this missing target on ppc64le.  Consul had no issue.
7402,Merge pull request #7242 from hashicorp/b-gh-7240,docs: remove Nomad binary size specifics from documentation.
7403,Merge pull request #7247 from hashicorp/build-go1.14,use golang 1.14
7404,Merge pull request #7246 from hashicorp/b-e2e-args-parsing,e2e: avoid parsing Args in pkg init
7405,a couple more updates (#7211),
7406,[website] add print styles (#7182),
7407,changelog,
7408,update protobuf generated files,
7409,downloads page community link correction (#7134),
7410,docs: updating from go1.13 -> 1.14 for 0.11,
7411,"fix subnav css overlap, inconsistent subnav data (#7230)",
7412,e2e: avoid parsing Args in pkg init,"Golang 1.13 introduced a change in test flag parsing:  testing ... Testing flags are now registered in the new Init function, which is invoked by the generated main function for the test. As a result, testing flags are now only registered when running a test binary, and packages that call flag.Parse during package initialization may cause tests to fail.  https://golang.org/doc/go1.13#testing Here, we ensure that e2e framework parsing occur in TestMain, by only initializing Framework at Run invocation."
7413,use golang 1.14,
7414,avoid forwarding leadership checks in tests,The tests only care if a test server recognizes the leader.
7415,Simplify Bootstrap logic in tests,"This change updates tests to honor module exclusively when forming test clusters and removes test only knobs, e.g. module. Background: Test cluster creation is fragile.  Test servers don't follow the BootstapExpected route like production clusters.  Instead they start as single node clusters and then get rejoin and may risk causing brain split or other test flakiness. The test framework expose few knobs to control those (e.g. module and module) that control whether a server should bootstrap the cluster.  These flags are confusing and it's unclear when to use: their usage in multi-node cluster isn't properly documented.  Furthermore, they have some bad side-effects as they don't control Raft library: If module is true, the test server may not immediately attempt to bootstrap a cluster, but after an election timeout (~50ms), Raft may force a leadership election and win it (with only one vote) and cause a split brain. The knobs are also confusing as Bootstrap is an overloaded term.  In BootstrapExpect, we refer to bootstrapping the cluster only after N servers are connected.  But in tests and the knobs above, it refers to whether the server is a single node cluster and shouldn't wait for any other server. Changes: This commit makes two changes: First, it relies on module instead of module and/or module flags.  This change is relatively trivial. Introduce a module flag to track if the cluster is bootstrapped. This allows us to keep module immutable.  Previously, the flag was a config value but it gets set to 0 after cluster bootstrap completes."
7416,docs: remove Nomad binary size specifics from documentation.,
7417,add missing sidebar item,
7418,fix page layout settings,
7419,docs: add nspawn as external task driver plugin,
7420,docs: mention #7231 in changelog,
7421,Update github.com/hashicorp/hcl,"hashicorp/hcl library added some better validation for error and illegal characters.  The diff is primarily improved error reporting.  The parser.go change includes a case where illegal characters were silently dropped, but now get reported as invalid characters."
7422,Honor CNI and bridge related fields,"Nomad agent may silently ignore cni_path and bridge setting, when it merges configs from multiple files (or against default/dev config). This PR ensures that the values are merged properly."
7423,tests: add tests for parsing cni fields,
7424,Fix undefined: getEphemeralPortRange error on FreeBSD.,
7425,Remove rkt as a built-in driver,Rkt has been archived and is no longer an active project: * https://github.com/rkt/rkt * https://github.com/rkt/rkt/issues/4024 The rkt driver will continue to live as an external plugin.
7426,api: fix panic when displaying devices w/o stat,""""" mathces module output"
7427,"Fix rendered backslash in group """"",The module tag contained backslashes and the first backslash was getting rendered. See on live site: https://nomadproject.io/docs/job-specification/job/#inlinecode-group-7
7428,Merge pull request #7222 from jescalan/redesigned-website,website: Homepage redesign & use-cases pages
7429,Fix the line spacing for the codeblock,
7430,Fix indentation,
7431,Remove global mega-nav component,We've temporarily ejected the meganav component to add some custom styling that needed to happen for NomadProject.io
7432,Update website/pages/use-cases/non-containerized-application-orchestration.jsx,Co-Authored-By: Mike Wickett link
7433,Title case consul connect feature,Co-Authored-By: Mike Wickett link
7434,Feature capitalization,Co-Authored-By: Mike Wickett link
7435,Simplify mini-cta optional code,Co-Authored-By: Mike Wickett link
7436,Update consul-template to v0.24.1 and remove deprecated vault_grace (#7170),
7437,Homepage redesign & use-cases pages,
7438,Merge pull request #7163 from hashicorp/b-driver-plugin-recovery,drivermanager: attempt dispense on reattachment failure
7439,Merge pull request #7192 from hashicorp/b-connect-stanza-ignore,consul/connect: in-place update sidecar service registrations on changes
7440,nomad: note why AddressMode is not part of CSD hash,Co-Authored-By: Michael Schurter link
7441,Merge pull request #7207 from hashicorp/b-gh-7203,Fix panic when canonicalizing a jobspec with incorrect job type.
7442,Update CHANGELOG.md,
7443,Fix panic when canonicalizing a jobspec with incorrect job type.,"When canonicalizing the ReschedulePolicy a panic was possible if the passed job type was not valid. This change protects against this possibility, in a verbose way to ensure the code path is clear."
7444,correct analytics traffic pointer (#7212),
7445,Merge pull request #7083 from hashicorp/d-service-lifecycle,Document service lifecycle
7446,Merge pull request #7196 from hashicorp/website-0104,Update website to v0.10.4
7447,api: check response content length before decoding.,"The API decodeBody function will now check the content length before attempting to decode. If the length is zero, and the out interface is nil then it is safe to assume the API call is not returning any data to the user. This allows us to better handle passing nil to API calls in a single place."
7448,Merge pull request #7202 from hashicorp/prep-011-cycle,release: prep for next dev cycle
7449,docs: update to Nomad 0.10.4 in Vagrantfile,
7450,docs: update download page for 0.10.4 final,
7451,Merge pull request #7191 from hashicorp/revert-6979-f/codeowners,"Revert ""Add the digital marketing team as the code owners for the website dir"""
7452,Merge pull request #7164 from pulecp/master,fix port forwarding of TCP/4646
7453,release: prep for next dev cycle,
7454,consul/connect: in-place update sidecar service registrations on changes,Fix a bug where consul service definitions would not be updated if changes were made to the service in the Nomad job. Currently this only fixes the bug for cases where the fix is a matter of updating consul agent's service registration. There is related bug where destructive changes are required (see #6877) which will be fixed in another PR. The enable_tag_override configuration setting for the parent service is applied to the sidecar service. Fixes #6459
7455,Merge pull request #7190 from hashicorp/d-cv-connect-namespace-note,[docs] Add note Nomad Connect requires namespaces...
7456,"Revert ""Add the digital marketing team as the code owners for the website dir""",
7457,Merge pull request #7149 from th0m/tlefebvre/no-pivot-root,client: support no_pivot_root in exec driver configuration
7458,Merge pull request #7187 from hashicorp/guard-for-ent,check if website-docker-image job should run
7459,make config.yml,
7460,refact to remove conditional nesting,
7461,[docs] Add note Nomad Connect requires namespaces...,and can only run on linux oses at the moment.
7462,Merge pull request #7171 from hashicorp/update-autopilot-20200214,Update consul vendor and add MinQuorum flag
7463,docs: mention group service registration,A few minor tweaks and cleanups as well.
7464,website: indent module bullets in network params,
7465,Merge pull request #7146 from hashicorp/doc-fix-cht-references,docs: fix references to consul environment variable
7466,Merge pull request #7143 from hashicorp/doc-cht-filtering,docs: upgrade-specific notes on CHT filtering
7467,Document service lifecycle,
7468,check if website-docker-image job should run,
7469,[website] CircleCI Script Updates (#7145),  circle-ci script updates :tada:   trigger deploy as a test   remove testing items 
7470,[website] a small collection of upgrades (#7162)," update deps, fix logo styles on mobile, preload css and fonts update product downloader"
7471,website: move up nomad intro yt video,- per suggestion from dev-rel
7472,client: support no_pivot_root in exec driver configuration,
7473,deploment -> deployment,
7474,Merge pull request #7176 from hashicorp/http-pro-tag,inlude pro in http_oss.go
7475,inlude pro in http_oss.go,
7476,update rest of consul packages,
7477,implement MinQuorum,
7478,Update consul autopilot dependency,
7479,fix port forwarding of TCP/4646,
7480,drivermanager: attempt dispense on reattachment failure,
7481,Merge pull request #7151 from hashicorp/f-ui/host-volumes,UI: Host Volumes
7482,Remove the question mark from the Volume th,This makes it consistent with other volume columns across the app.
7483,Correct a test and a dependent key,
7484,Merge pull request #7150 from hashicorp/vendor-update-raft-2,Update Raft dependency
7485,Merge pull request #7156 from hashicorp/test-vault,Fix Vault test flakiness
7486,test: explicitly pass vars vs enclosing them,
7487,test: remove errgroup to take advantage of vet,"go vet would have prevented the bug fixed in 6362e32161295fa959ebe46b93cea0ea1a9bdd72 but our use of errgroup prevented that. Rip out errgroup to take advantage of vet, and remove download limiting now that we're downloading far fewer binaries overall."
7488,test: sort vault tests by version,
7489,test: capture url to fix flaky test,
7490,Update checklist-rpc-endpoint.md,Add an ACL bullet point
7491,Merge pull request #7155 from hashicorp/fix-readme-img,"rawgit has reached EOL, point to github blob"
7492,"rawgit has reached EOL, point to github blob",use hashicorp + nomad logo
7493,test: only test latest Z of each X.Y.Z release,
7494,Improve the node serializer tests,
7495,Add assertion for the volume k/v pairs in task rows,
7496,Refactor task row info test to use 'as',
7497,Test coverage for the volume table on the task group page,
7498,Test coverage for the task detail volumes table,
7499,Add volume table to the task detail page,
7500,Add volume requirements table to the task group page,
7501,Add volumes column to the task row component,
7502,Fix a bug where the NodeListStub API response would override existing HostVolumes in the store,
7503,Test coverage for change in resource rows,
7504,Add volume to the client row,
7505,Fix flaky host volumes test,
7506,Add volume column to allocation row,
7507,Add volume column to task group row,
7508,Test coverage for the host volumes table,
7509,Add a Host Volumes table to the client detail page,
7510,Data layer for Host Volumes in the UI,
7511,remove unused dropButLastChannel,
7512,tests: Avoid StartAsLeader raft config flag,It's being deprecated
7513,Use latest raft patterns,
7514,update raft to latest,
7515,Merge pull request #7148 from hashicorp/doc-consul-eto,docs: document enable_tag_override field for service stanzas
7516,docs: document enable_tag_override field for service stanzas,
7517,Merge pull request #7106 from hashicorp/f-ctag-override,client: enable configuring enable_tag_override for services
7518,Merge pull request #7102 from hashicorp/test-limits,Fix some race conditions and flaky tests
7519,Merge pull request #7128 from hashicorp/docs-prior-art-check,docs: explicitly callout checking for prior art
7520,Merge pull request #7044 from hashicorp/f-use-multiplexv2,rpc: Use MultiplexV2 for connections
7521,Merge pull request #7112 from hashicorp/f-include-pro-tag,include pro tag in serveral oss.go files
7522,docs: fix references to consul environment variable,"We mistakenly reference module where we should be using module. There is one case where module is correct - client.mdx there is a list of default filtered environment variables, which for legacy reasons module will always be one."
7523,docs: upgrade-specific notes on CHT filtering,
7524,website: fix 'edit this page' path,
7525,Merge pull request #7092 - New Website,
7526,Merge pull request #7129 from hashicorp/b-consistent-ct-name,command: use consistent CONSUL_HTTP_TOKEN name
7527,Merge pull request #7127 from hashicorp/b-unset-ct,nomad: unset consul token on job register
7528,docs: update changelog mentioning consul token passthrough,
7529,command: use consistent CONSUL_HTTP_TOKEN name,"Consul CLI uses CONSUL_HTTP_TOKEN, so Nomad should use the same. Note that consul-template uses CONSUL_TOKEN, which Nomad also uses, so be careful to preserve any reference to that in the consul-template context."
7530,nomad: assert consul token is unset on job register in tests,
7531,docs: explicitly callout checking for prior art,Also normalize formatting.
7532,nomad: unset consul token on job register,
7533,add changes from #7078,
7534,add release candidate from #7120,
7535,add changes from #7121,
7536,Merge pull request #7122 from hashicorp/pprof/changelog,change log for remote pprof endpoints
7537,change log for remote pprof endpoints,
7538,Merge pull request #7108 from hashicorp/ch-windows-binaries,changelog windows binaries being signed
7539,include pro tag in serveral oss.go files,
7540,fix a couple more links,
7541,css fix,
7542,"add link checker, fix a redirect, remove unused component",
7543,update deps to add minor style fixes,
7544,remove extra redirect file,
7545,changelog windows binaries being signed,"Note that 0.10.4, nomad windows binaries will be signed. [ci skip]"
7546,client: enable configuring enable_tag_override for services,"Consul provides a feature of Service Definitions where the tags associated with a service can be modified through the Catalog API, overriding the value(s) configured in the agent's service configuration. To enable this feature, the flag enable_tag_override must be configured in the service definition. Previously, Nomad did not allow configuring this flag, and thus the default value of false was used. Now, it is configurable. Because Nomad itself acts as a state machine around the the service definitions of the tasks it manages, it's worth describing what happens when this feature is enabled and why. Consider the basic case where there is no Nomad, and your service is provided to consul as a boring JSON file. The ultimate source of truth for the definition of that service is the file, and is stored in the agent. Later, Consul performs ""anti-entropy"" which synchronizes the Catalog (stored only the leaders). Then with enable_tag_override=true, the tags field is available for ""external"" modification through the Catalog API (rather than directly configuring the service definition file, or using the Agent API). The important observation is that if the service definition ever changes (i.e. the file is changed & config reloaded OR the Agent API is used to modify the service), those ""external"" tag values are thrown away, and the new service definition is once again the source of truth. In the Nomad case, Nomad itself is the source of truth over the Agent in the same way the JSON file was the source of truth in the example above. That means any time Nomad sets a new service definition, any externally configured tags are going to be replaced. When does this happen? Only on major lifecycle events, for example when a task is modified because of an updated job spec from the 'nomad job run ' command. Otherwise, Nomad's periodic re-sync's with Consul will now no longer try to restore the externally modified tag values (as long as enable_tag_override=true). Fixes #2057"
7547,test: fix flaky TestHTTP_FreshClientAllocMetrics,
7548,test: fix missing agent shutdowns,
7549,testagent: fix case where agent would retry forever,
7550,test: simplify code,
7551,test: improve error messages when failing,
7552,test: allow goroutine to exit even if test blocks,
7553,test: add timeout to ease debugging,
7554,test: workaround limits race,
7555,test: wait longer than timeout,The 1s timeout raced with the 1s deadline it was trying to detect.
7556,test: fix flaky health test,"Test set Agent.client=nil which prevented the client from being shutdown. This leaked goroutines and could cause panics due to the leaked client goroutines logging after their parent test had finished. Removed ACLs from the server test because I couldn't get it to work with the test agent, and it tested very little."
7557,test: fix race around reused default rpc addr,The default RPC addr was a global which is fine for normal runtime use when it only has a single user. However many tests modify it and cause races. Follow our convention of returning defaults from funcs instead of using globals.
7558,client: fix race accessing Node.status, Call Node.Canonicalize once when Node is created. Lock when accessing fields mutated by node update goroutine
7559,update dependencies,
7560,Merge pull request #7099 from hashicorp/b-ui/mobile-styles-not-full-width,UI: Override the max-width on mobile to avoid losing space due to non-existent gutter menu
7561,Merge pull request #7098 from hashicorp/b-ui/consistent-popover-buttons,UI: Explicit transparent bg on popover actions
7562,Override the max-width on mobile to avoid losing space due to non-existent gutter menu,
7563,Explicit transparent bg on popover actions,
7564,add netlify.toml,
7565,Update helper/pool/pool.go,Co-Authored-By: Michael Schurter link
7566,circle config adjustments,
7567,new website :sparkles:,
7568,e2e: add --quiet flag to s3 copy to reduce log spam (#7085),
7569,Merge pull request #7071 from hashicorp/b-e2e-cacls-wait-longer,e2e: wait 2m rather than 10s after disabling consul acls
7570,Merge pull request #7074 from hashicorp/docs-changelog-6065,"docs: #6065 shipped in v0.10.0, not v0.9.6"
7571,"docs: #6065 shipped in v0.10.0, not v0.9.6",PR #6065 was intended to be backported to v0.9.6 to fix issue #6223. However it appears to have not been backported:  https://github.com/hashicorp/nomad/blob/v0.9.6/client/allocrunner/taskrunner/task_runner.go#L1349-L1351 https://github.com/hashicorp/nomad/blob/v0.9.7/client/allocrunner/taskrunner/task_runner.go#L1349-L1351  The fix was included in v0.10.0:  https://github.com/hashicorp/nomad/blob/v0.10.0/client/allocrunner/taskrunner/task_runner.go#L1363-L1370
7572,Merge pull request #7072 from hashicorp/system-sched-e2e,System sched e2e
7573,"simplify job, better error",
7574,fix check,
7575,rm unused field,
7576,clean up,
7577,"get test passing, new util func to wait for not pending",
7578,add e2e test for system sched ineligible nodes,
7579,e2e: wait 2m rather than 10s after disabling consul acls,"Pretty sure Consul / Nomad clients are often not ready yet after the ConsulACLs test disables ACLs, by the time the next test starts running. Running locally things tend to work, but in TeamCity this seems to be a recurring problem. However, when running locally sometimes I do see that the ""show status"" step after disabling ACLs, some nodes are still initializing, suggesting we're right on the border of not waiting long enough module Going to try waiting a full 2 minutes after disabling ACLs, hopefully that will help things Just Work. In the future, we should probably be parsing the output of the status checks and actually confirming all nodes are ready. Even better, maybe that's something shipyard will have built-in."
7580,e2e: rename linux runner to avoid implicit build tag (#7070),Go implicitly treats files ending with module as build tagged for Linux only. This broke the e2e provisioning framework on macOS once we tried importing it into the module module.
7581,e2e: improve provisioning defaults and documentation (#7062),"This changeset improves the ergonomics of running the Nomad e2e test provisioning process by defaulting to a blank module in the Terraform configuration. By default, a user will now need to pass in one of the Nomad version flags. But they won't have to manually edit the module file for the common case of deploying a released version of Nomad, and won't need to put dummy values for module. Includes general documentation improvements."
7582,Merge pull request #7060 from hashicorp/f-e2e-more-missed-debug,e2e: turn no-ACLs connect tests back on
7583,e2e: turn no-ACLs connect tests back on,Also cleanup more missed debugging things >.>
7584,rpc: Use MultiplexV2 for connections,"MultiplexV2 is a new connection multiplex header that supports multiplex both RPC and streaming requests over the same Yamux connection. MultiplexV2 was added in 0.8.0 as part of https://github.com/hashicorp/nomad/pull/3892 .  So Nomad 0.11 can expect it to be supported.  Though, some more rigorous testing is required before merging this. I want to call out some implementation details: First, the current connection pool reuses the Yamux stream for multiple RPC calls, and doesn't close them until an error is encountered.  This commit doesn't change it, and sets the module byte only at stream creation. Second, the StreamingRPC session gets closed by callers and cannot be reused. Every StreamingRPC opens a new Yamux session."
7585,"docs: fix typo, ordering, & style in changelog",
7586,Merge pull request #7055 from hashicorp/r-dev-tweaks-20200203,Grab bag of dev tweaks
7587,Merge pull request #6975 from hashicorp/b-update-placed-canaries,keep placed canaries aligned in raft store
7588,docs: add link & reorg #6690 in changelog,
7589,add state store test to ensure PlacedCanaries is updated,
7590,"nomad state store must be modified through raft, rm local state change",
7591,keep placed canaries aligned with alloc status,
7592,Merge pull request #7053 from hashicorp/b-client-monitor-acl-panic,Fix panic when monitoring a local client node
7593,docs: fix misspelling,
7594,Merge pull request #6979 from hashicorp/f/codeowners,Add the digital marketing team as the code owners for the website dir
7595,Merge pull request #6996 from hashicorp/system-sched-ineligible-updates,System sched ignore ineligible updates
7596,update changelog,
7597,agent Profile req nil check s.agent.Server(),clean up logic and tests
7598,Fix panic when monitoring a local client node,Fixes a panic when accessing a.agent.Server() when agent is a client instead. This pr removes a redundant ACL check since ACLs are validated at the RPC layer. It also nil checks the agent server and uses Client() when appropriate.
7599,Merge pull request #7045 from hashicorp/b-rpc-fixes,Some fixes to connection pooling
7600,Merge pull request #7054 from hashicorp/f-remove-leftover-debug-line,e2e: remove leftover e2e debug println
7601,pool: Clear connection before releasing,This to be consistent with other connection clean up handler as well as consul's https://github.com/hashicorp/consul/blob/v1.6.3/agent/pool/pool.go#L468-L479 .
7602,make: emit explanation for /api isolation,Emit a slightly helpful message when /api depends on nomad internal packages.
7603,"run ""make hclfmt""",
7604,e2e: remove leftover debug println statement,
7605,dev: Tweaks to cluster dev scripts,"Consolidate all nomad data dir in a single root module.  Eases clean up. Allow running script from any path - don't require devs to cd into module directory first. Also, block while nomad processes are running and prapogate SIGTERM/SIGINT to nomad processes to shutdown."
7606,prehook: fix enterprise repo remote value,
7607,vagrant: disable audio interference,Avoid Vagrant/virtualbox interferring with host audio when the VM boots.
7608,Merge pull request #7051 from hashicorp/b-copy-jobs-oss,sentinel: copy jobs to prevent mutation
7609,update changelog,
7610,comment for filtering reason,
7611,add test for node eligibility,
7612,make diffSystemAllocsForNode aware of eligibility,"diffSystemAllocs -> diffSystemAllocsForNode, this function is only used for diffing system allocations, but lacked awareness of eligible nodes and the node ID that the allocation was going to be placed. This change now ignores a change if its existing allocation is on an ineligible node. For a new allocation, it also checks tainted and ineligible nodes in the same function instead of nil-ing out the diff after computation in diffSystemAllocs"
7613,ignore computed diffs if node is ineligible,"test flakey, add temp sleeps for debugging fix computed class"
7614,sentinel: copy jobs to prevent mutation,"It's unclear whether Sentinel code can mutate values passed to the eval, so ensure it cannot by copying the job."
7615,Merge pull request #7047 from hashicorp/f-ui/node-drain-icons,UI: Node drain status light icons
7616,Merge pull request #7027 from hashicorp/dev-connect-acls,connect acls - rebase all the things
7617,nomad/docs: increment version number to 0.10.4,
7618,docs: update chanagelog to mention connect with acls,
7619,nomad: remove unused default schedular variable,"This is from a merge conflict resolution that went the wrong direction. I assumed the block had been added, but really it had been removed. Now, it is removed once again."
7620,nomad: min cluster version for connect ACLs is now v0.10.4,
7621,tests: set consul token for nomad client for testing SIDS TR hook,
7622,e2e: setup consul ACLs a little more correctly,
7623,e2e: remove redundant extra API call for getting allocs,
7624,e2e: agent token was only being set for server0,
7625,e2e: use hclfmt on consul acls policy config files,
7626,e2e: uncomment test case that is not broken,
7627,e2e: do not use eventually when waiting for allocs,"This test is causing panics. Unlike the other similar tests, this one is using require.Eventually which is doing something bad, and this change replaces it with a for-loop like the other tests. Failure: === RUN   TestE2E/Connect === RUN   TestE2E/Connect/connect.ConnectE2ETest === RUN   TestE2E/Connect/connect.ConnectE2ETest/TestConnectDemo === RUN   TestE2E/Connect/connect.ConnectE2ETest/TestMultiServiceConnect === RUN   TestE2E/Connect/connect.ConnectClientStateE2ETest panic: Fail in goroutine after TestE2E/Connect/*connect.ConnectE2ETest has completed goroutine 38 [running]: testing.(common).Fail(0xc000656500)     /opt/google/go/src/testing/testing.go:565 +0x11e testing.(common).Fail(0xc000656100)     /opt/google/go/src/testing/testing.go:559 +0x96 testing.(common).FailNow(0xc000656100)     /opt/google/go/src/testing/testing.go:587 +0x2b testing.(common).Fatalf(0xc000656100, 0x1512f90, 0x10, 0xc000675f88, 0x1, 0x1)     /opt/google/go/src/testing/testing.go:672 +0x91 github.com/hashicorp/nomad/e2e/connect.(*ConnectE2ETest).TestMultiServiceConnect.func1(0x0)     /home/shoenig/go/src/github.com/hashicorp/nomad/e2e/connect/multi_service.go:72 +0x296 github.com/hashicorp/nomad/vendor/github.com/stretchr/testify/assert.Eventually.func1(0xc0004962a0, 0xc0002338f0)     /home/shoenig/go/src/github.com/hashicorp/nomad/vendor/github.com/stretchr/testify/assert/assertions.go:1494 +0x27 created by github.com/hashicorp/nomad/vendor/github.com/stretchr/testify/assert.Eventually     /home/shoenig/go/src/github.com/hashicorp/nomad/vendor/github.com/stretchr/testify/assert/assertions.go:1493 +0x272 FAIL    github.com/hashicorp/nomad/e2e  21.427s"
7628,e2e: remove forgotten unused field from new struct,
7629,e2e: e2e test for connect with consul acls,"Provide script for managing Consul ACLs on a TF provisioned cluster for e2e testing. Script can be used to 'enable' or 'disable' Consul ACLs, and automatically takes care of the bootstrapping process if necessary. The bootstrapping process takes a long time, so we may need to extend the overall e2e timeout (20 minutes seems fine). Introduces basic tests for Consul Connect with ACLs."
7630,tests: skip some SIDS hook tests if running tests as root,
7631,client: additional test cases around failures in SIDS hook,
7632,client: PR cleanup - improved logging around kill task in SIDS hook,
7633,client: PR cleanup - shadow context variable,
7634,nomad: make TaskGroup.UsesConnect helper a public helper,
7635,nomad: fix leftover missed refactoring in consul policy checking,
7636,client: manage TR kill from parent on SI token derivation failure,"Re-orient the management of the tr.kill to happen in the parent of the spawned goroutine that is doing the actual token derivation. This makes the code a little more straightforward, making it easier to reason about not leaking the worker goroutine."
7637,client: set context timeout around SI token derivation,"The derivation of an SI token needs to be safegaurded by a context timeout, otherwise an unresponsive Consul could cause the siHook to block forever on Prestart."
7638,"nomad,client: apply more comment/style PR tweaks",
7639,"nomad,client: apply smaller PR suggestions","Apply smaller suggestions like doc strings, variable names, etc. Co-Authored-By: Nick Ethier link Co-Authored-By: Michael Schurter link"
7640,comments: cleanup some leftover debug comments and such,
7641,client: skip task SI token file load failure if testing as root,"The TestEnvoyBootstrapHook_maybeLoadSIToken test case only works when running as a non-priveleged user, since it deliberately tries to read an un-readable file to simulate a failure loading the SI token file."
7642,client: remove unused indirection for referencing consul executable,"Was thinking about using the testing pattern where you create executable shell scripts as test resources which ""mock"" the process a bit of code is meant to fork+exec. Turns out that wasn't really necessary in this case."
7643,agent: re-enable the server in dev mode,
7644,nomad: handle SI token revocations concurrently,"Be able to revoke SI token accessors concurrently, and also ratelimit the requests being made to Consul for the various ACL API uses."
7645,nomad: fixup token policy validation,
7646,client: enable envoy bootstrap hook to set SI token,"When creating the envoy bootstrap configuration, we should append the ""-token="" argument in the case where the sidsHook placed the token in the secrets directory."
7647,nomad: proxy requests for Service Identity tokens between Clients and Consul,"Nomad jobs may be configured with a TaskGroup which contains a Service definition that is Consul Connect enabled. These service definitions end up establishing a Consul Connect Proxy Task (e.g. envoy, by default). In the case where Consul ACLs are enabled, a Service Identity token is required for these tasks to run & connect, etc. This changeset enables the Nomad Server to recieve RPC requests for the derivation of SI tokens on behalf of instances of Consul Connect using Tasks. Those tokens are then relayed back to the requesting Client, which then injects the tokens in the secrets directory of the Task."
7648,client: enable nomad client to request and set SI tokens for tasks,"When a job is configured with Consul Connect aware tasks (i.e. sidecar), the Nomad Client should be able to request from Consul (through Nomad Server) Service Identity tokens specific to those tasks."
7649,nomad: ensure a unique ClusterID exists when leader (gh-6702),"Enable any Server to lookup the unique ClusterID. If one has not been generated, and this node is the leader, generate a UUID and attempt to apply it through raft. The value is not yet used anywhere in this changeset, but is a prerequisite for gh-6701."
7650,"command, docs: create and document consul token configuration for connect acls (gh-6716)",This change provides an initial pass at setting up the configuration necessary to enable use of Connect with Consul ACLs. Operators will be able to pass in a Consul Token through module or module in the module and module commands (similar to Vault tokens). These values are not actually used yet in this changeset.
7651,"Call out the 'down' status too, since it's a pretty bad one",
7652,Add an animation for the initializing state,
7653,Redo the node-status-light CSS to be icon-based,
7654,New node initializing icon,
7655,Assign icons to node statuses,
7656,Add an icon inside the node status light,
7657,Allow for an icon within the node status light,
7658,Some fixes to connection pooling,"Pick up some fixes from Consul:  If a stream returns an EOF error, clear session from cache/pool and start a new one. Close the codec when closing StreamClient"
7659,Merge pull request #7043 from hashicorp/b-collection-interval,Pass stats interval colleciton to executor
7660,changelog,
7661,Pass stats interval colleciton to executor,"This fixes a bug where executor based drivers emit stats every second, regardless of user configuration. When serializing the Stats request across grpc, the nomad agent dropped the Interval value, and then executor uses 1s as a default value."
7662,Merge pull request #7028 from hashicorp/f-ui/node-drain-disable,UI: Disable client write actions when ACL token only allows client read
7663,Merge pull request #7041 from tiangolo/patch-1,Use secret ID for NOMAD_TOKEN
7664,Use secret ID for NOMAD_TOKEN,"Use secret ID for NOMAD_TOKEN as the accessor ID doesn't seem to work. I tried with a local micro cluster following the tutorials, and if I do: module Using the accessor ID as in this example, I get an error: module But when using the secret ID in that env var it seems to work correctly."
7665,Acceptance test for disabled node write controls,
7666,Account for disabled ACLs in ability tests,
7667,Handle the case where ACLs aren't enabled in abilities,
7668,"Fix token referencing from the token controller, as well as resetting",
7669,Add an explanatory tooltip to the unauthorized node drain popover,
7670,Update disabled 'Run Job' button to use standard disabled style,
7671,Merge pull request #7010 from hashicorp/doc-bulk-20200129,Docs and Changelog catch up
7672,hclfmt a test jobspec (#7011),
7673,Disable options for popover and drain-popover,
7674,Disabled button styles,
7675,New disabled buttons story,
7676,Refetch all ACL things when the token changes,
7677,Enable the eligibility toggle conditionally based on acls,
7678,Refactor ability tests to use a setup hook for ability lookup,
7679,Add an ability for client permissions,
7680,Merge pull request #7026 from hashicorp/post-0103,Post 0103
7681,docs: add v0.10.3 release to changelog,
7682,docs: bump 0.10.2 -> 0.10.3,
7683,Merge pull request #7023 from hashicorp/b-tls-validation,Validate role and region for mTLS
7684,Merge branch 'master' into b-tls-validation,
7685,Merge pull request #7022 from hashicorp/f-handshake-deadlines-oss,core: add limits to unauthorized connections
7686,Merge pull request #160 from hashicorp/b-mtls-hostname,server: validate role and region for RPC w/ mTLS
7687,docs: document limits,Taken more or less verbatim from Consul.
7688,core: add limits to unauthorized connections,"Introduce limits to prevent unauthorized users from exhausting all ephemeral ports on agents:  module module  The handshake timeout closes connections that have not completed the TLS handshake by the deadline (5s by default). For RPC connections this timeout also separately applies to first byte being read so RPC connections with TLS enabled have module as their deadline. The connection limit per client prevents a single remote TCP peer from exhausting all ephemeral ports. The default is 100, but can be lowered to a minimum of 26. Since streaming RPC connections create a new TCP connection (until MultiplexV2 is used), 20 connections are reserved for Raft and non-streaming RPCs to prevent connection exhaustion due to streaming RPCs. All limits are configurable and may be disabled by setting them to module. This also includes a fix that closes connections that attempt to create TLS RPC connections recursively. While only users with valid mTLS certificates could perform such an operation, it was added as a safeguard to prevent programming errors before they could cause resource exhaustion."
7689,Merge pull request #7018 from hashicorp/f-e2e-specify-suite,e2e: add a -suite flag to e2e.Framework
7690,incorporate review feedback,
7691,batch mahmood's changelog entries,[ci skip]
7692,document docker's disable_log_collection flag,
7693,Document default_scheduler_config option,
7694,Merge pull request #7009 from hashicorp/golang-1.12.16,use golang 1.12.16
7695,e2e: add a -suite flag to e2e.Framework,"This change allows for providing the -suite= flag when running the e2e framework. If set, only the matching e2e/Framework.TestSuite.Component will be run, and all ther suites will be skipped."
7696,Merge pull request #7015 from hashicorp/b-allow-monitor-by-server-id,Allow nomad monitor command to lookup server UUID
7697,"fix tests, update changelog",
7698,Allow nomad monitor command to lookup server UUID,Allows addressing servers with nomad monitor using the servers name or ID. Also unifies logic for addressing servers for client_agent_endpoint commands and makes addressing logic region aware. rpc getServer test
7699,use golang 1.12.16,
7700,Merge pull request #7005 from shantanugadgil/patch-2,canary_meta will be part of 0.10.3 (not 0.10.2)
7701,canary_meta will be part of 0.10.3 (not 0.10.2),I assume this is just an oversight. I tried adding the module stanza to an existing v0.10.2 setup (Nomad v0.10.2 (0d2d6e3dc5a171c21f8f31fa117c8a765eb4fc02) and it did show the error message: module
7702,Merge pull request #6922 from hashicorp/b-alloc-canoncalize,Handle Upgrades and Alloc.TaskResources modification
7703,Merge pull request #6935 from hashicorp/b-default-preemption-flag,scheduler: allow configuring default preemption for system scheduler
7704,tests: run_for is already a string,
7705,Support customizing full scheduler config,
7706,Merge pull request #6977 from hashicorp/b-leadership-flapping-2,Handle Nomad leadership flapping (attempt 2)
7707,client: canonicalize alloc.Job on restore,"There is a case for always canonicalizing alloc.Job field when canonicalizing the alloc.  I'm less certain of implications though, and the job canonicalize hasn't changed for a long time. Here, we special case client restore from database as it's probably the most relevant part.  When receiving an alloc from RPC, the data should be fresh enough."
7708,tests: defer closing shutdownCh,
7709,tweak leadership flapping log messages,
7710,handle channel close signal,Always deliver last value then send close signal.
7711,include test and address review comments,
7712,docs: tweaks,
7713,Merge pull request #6997 from hashicorp/docs-bootstrap-reset,docs: reseting bootstrap doesn't invalidate token
7714,Merge pull request #6690 from hashicorp/f-canary-meta,consul: add support for canary meta
7715,e2e: packer builds should not be public (#6998),
7716,Update website/source/guides/security/acl.html.markdown,Co-Authored-By: Tim Gross link
7717,consul: fix var name from rebase,
7718,docs: reseting bootstrap doesn't invalidate token,
7719,Merge pull request #6938 from hashicorp/e2e-vault,test: download Vault binaries for e2e test
7720,consul: fix var name from rebase,
7721,Merge pull request #6994 from hashicorp/docs-go,docs: add Go versioning policy
7722,docs: add Go versioning policy,
7723,Merge pull request #6918 from hashicorp/vendor-godiscover-7698de1,Update go-discover library
7724,website: add canary meta to api docs,
7725,consul: add support for canary meta,
7726,Merge pull request #6950 from hashicorp/c-golang-1.12.15,Upgrade to using golang 1.12.15
7727,fix comment,
7728,Merge pull request #6819 from hashicorp/f-ui-node-drain,UI: Invoke Node Drains
7729,Replace custom parse-duration implementation with an existing lib,
7730,Update client detail test given change to the compositeStatus property,
7731,Tweak vertical spacing of headings,
7732,Remove superfluous information from the client details ribbon,
7733,Increase the size and spacing of the toggle component,
7734,Use qunit-dom where applicable,
7735,Stack the popover menu under the subnav,
7736,New test coverage for the drain capabilities,
7737,Update existing tests,
7738,PopoverMenu integration tests,
7739,Integration tests for the toggle component,
7740,Update the client detail page object,
7741,Model the notification pattern as a page object component,
7742,Clear all notifications when resetting the controller,
7743,Switch drain popover checkboxes for toggles,
7744,Toggle bugs: focus and multiline alignment,
7745,Swap the eligiblity checkbox out for a toggle,
7746,New toggle component,
7747,Force drain button in the drain info box,
7748,Make outline buttons have a solid white background,
7749,Modifiers to the two-step-button,
7750,Drain stop and update and notifications,
7751,Drain complete notification,
7752,Fill out the metrics and time since values in the drain summary,
7753,Fill in the drain strategy ribbon values,
7754,Stub out all the markup for the new drain strategy view,
7755,Polish for the drain popover,
7756,Refactor parseDuration to support multi-character units,
7757,Test coverage for the parse duration util,
7758,Extract the duration parsing into a util,
7759,Factor out the drain popover and implement its behaviors,
7760,Add triggerClass support to the popover menu,
7761,Let dropdowns assume their full width,
7762,Initial layout of the drain options popover,
7763,More form styles as needed for the drain form,
7764,Multiline modifier for tooltips,
7765,Update the dropdown styles to be more similar to button styles,
7766,PopoverMenu component,
7767,Eligibility toggling behavior,
7768,Update the underlying node model when toggling eligibility in mirage,
7769,Add tooltip to the eligibility control,
7770,Reformat the client detail page to use the two-row header design,
7771,cancelDrain adapter method,
7772,Update drain methods to properly wrap DrainSpec params,
7773,drain and forceDrain adapter methods,
7774,Mock the drain endpoint,
7775,Add isMigrating property to the allocation model,
7776,Implement eligibility toggling in the data layer,
7777,Mock the eligibility endpoint in mirage,
7778,Add the digital marketing team as the code owners for the website dir,
7779,Merge pull request #6953 from TimHiggison/patch-2,Update configuring-tasks.html.md
7780,Merge pull request #6952 from TimHiggison/patch-1,Update ecs.html.md
7781,Merge pull request #6780 from hashicorp/km.intro-video,website: add ‘intro to nomad’ video to /intro
7782,e2e: document e2e provisioning process (#6976),
7783,Handle Nomad leadership flapping,"Fixes a deadlock in leadership handling if leadership flapped. Raft propagates leadership transition to Nomad through a NotifyCh channel. Raft blocks when writing to this channel, so channel must be buffered or aggressively consumed[1]. Otherwise, Raft blocks indefinitely in module until the channel is consumed[1] and does not move on to executing follower related logic (in module). While Raft module defer function blocks, raft cannot process any other raft operations.  For example, module methods consume module, and while runLeader defer is blocked, all raft log applications or config lookup will block indefinitely. Sadly, module and module makes few Raft calls! module attempts to auto-create autopilot/scheduler config [3]; and module attempts to check raft configuration [4].  All of these calls occur without a timeout. Thus, if leadership flapped quickly while module is invoked and hit any of these Raft calls, Raft handler deadlock forever. Depending on how many times it flapped and where exactly we get stuck, I suspect it's possible to get in the following case:  Agent metrics/stats http and RPC calls hang as they check raft.Configurations raft.State remains in Leader state, and server attempts to handle RPC calls   (e.g. node/alloc updates) and these hang as well  As we create goroutines per RPC call, the number of goroutines grow over time and may trigger a out of memory errors in addition to missed updates. [1] https://github.com/hashicorp/raft/blob/d90d6d6bdacf1b35d66940b07be515b074d89e88/config.go#L190-L193 [2] https://github.com/hashicorp/raft/blob/d90d6d6bdacf1b35d66940b07be515b074d89e88/raft.go#L425-L436 [3] https://github.com/hashicorp/nomad/blob/2a89e477465adbe6a88987f0dcb9fe80145d7b2f/nomad/leader.go#L198-L202 [4] https://github.com/hashicorp/nomad/blob/2a89e477465adbe6a88987f0dcb9fe80145d7b2f/nomad/leader.go#L877"
7784,Merge pull request #6968 from hashicorp/b-system-sched-plan-ineligible,Return FailedTGAlloc metric instead of no node err
7785,extract leader step function,
7786,update changelog,
7787,Return FailedTGAlloc metric instead of no node err,"If an existing system allocation is running and the node its running on is marked as ineligible, subsequent plan/applys return an RPC error instead of a more helpful plan result. This change logs the error, and appends a failedTGAlloc for the placement."
7788,e2e: ensure group script check tests interpolation (#6972),"Fixes a bug introduced in 0aa58b9 where we're writing a test file to a taskdir-interpolated location, which works when we module but not in the jobspec for a group script check. This changeset also makes the test safe to run multiple times by namespacing the file with the alloc ID, which has the added bonus of exercising our alloc interpolation code for group script checks."
7789,e2e: update framework to allow deploying Nomad (#6969),"The e2e framework instantiates clients for Nomad/Consul but the provisioning of the actual Nomad cluster is left to Terraform. The Terraform provisioning process uses module to deploy specific versions of Nomad so that we don't have to bake an AMI every time we want to test a new version. But Terraform treats the resulting instances as immutable, so we can't use the same tooling to update the version of Nomad in-place. This is a prerequisite for upgrade testing. This changeset extends the e2e framework to provide the option of deploying Nomad (and, in the future, Consul/Vault) with specific versions to running infrastructure. This initial implementation is focused on deploying to a single cluster via module (because that's our current need), but provides interfaces to hook the test run at the start of the run, the start of each suite, or the start of a given test case. Terraform work includes: * provides Terraform output that written to JSON used by the framework   to configure provisioning via module. * provides Terraform output that can be used by test operators to   configure their shell via module * drops module provisioning steps from Terraform * makes changes to the deployment scripts to ensure they can be run   multiple times w/ different versions against the same host."
7790,UI: Migrate to Storybook (#6507),"I originally planned to add component documentation, but as this dragged on and I found that JSDoc-to-Markdown sometimes needed hand-tuning, I decided to skip it and focus on replicating what was already present in Freestyle. Adding documentation is a finite task that can be revisited in the future. My goal was to migrate everything from Freestyle with as few changes as possible. Some adaptations that I found necessary: • the DelayedArray and DelayedTruth utilities that delay component rendering until slightly after initial render because without them:   ◦ charts were rendering with zero width   ◦ the JSON viewer was rendering with empty content • Storybook in Ember renders components in a routerless/controllerless context by default, so some component stories needed changes:   ◦ table pagination/sorting stories access to query params, which necessitates some reaching into Ember internals to start routing and dynamically generate a Storybook route/controller to render components into   ◦ some stories have a faux controller as part of their Storybook context that hosts setInterval-linked dynamic computed properties • some jiggery-pokery with anchor tags   ◦ inert href='#' had to become href='javascript:;   ◦ links that are actually meant to navigate need target='_parent' so they don’t navigate inside the Storybook iframe Maybe some of these could be addressed by fixes in ember-cli-storybook but I’m wary of digging around in there any more than I already have, as I’ve lost a lot of time to Storybook confusion and frustrations already 😞 The STORYBOOK=true environment variable tweaks some environment settings to get things working as expected in the Storybook context. I chose to: • use angle bracket invocation within stories rather than have to migrate them soon after having moved to Storybook • keep Freestyle around for now for its palette and typeface components"
7791,e2e: use valid jobspec for group check test (#6967),"Group service checks cannot interpolate task fields, because the task fields are not available at the time the script check hook is created for the group service. When f31482a was merged this e2e test began failing because we are now correctly matching the script check ID to the service ID, which revealed this jobspec was invalid."
7792,Update changelog,
7793,ui: Change Run Job availability based on ACLs (#5944),"This builds on API changes in #6017 and #6021 to conditionally turn off the “Run Job” button based on the current token’s capabilities, or the capabilities of the anonymous policy if no token is present. If you try to visit the job-run route directly, it redirects to the job list."
7794,Update configuring-tasks.html.md,
7795,Update ecs.html.md,
7796,Update golang to 1.12.15,
7797,add a script to update golang version,
7798,Avoid unnecessary golang version reference,
7799,e2e: improve reusability of provisioning scripts (#6942),This changeset is part of the work to improve our E2E provisioning process to allow our upgrade tests:   Move more of the setup into the AMI image creation so it's a little  more obvious to provisioning config authors which bits are essential  to deploying a specific version of Nomad.   Make the service file update do a systemd daemon-reload so that we   can update an already-running cluster with the same script we use to   deploy it initially. 
7800,actually always canonicalize alloc.Job,alloc.Job may be stale as well and need to migrate it.  It does cost extra cycles but should be negligible.
7801,address review comments,
7802,test: restore e2e-test target and use -integration,
7803,test: download Vault binaries for e2e test,Modernize Vault integration/e2e test a bit:  Download from releases.hashicorp.com instead of using a hardcoded list Remove old unused make target e2e-test Use NOMAD_E2E env var instead of -integration flag Add a README  On my machine with ~250 Mbps internet it takes ~400s to download all Vault binaries.
7804,Upgrade -> Update,
7805,cli: add system command and subcmds to interact with system API. (#6924),cli: add system command and subcmds to interact with system API.
7806,system CLI documentation fixes based on feedback from @angrycub,
7807,scheduler: allow configuring default preemption for system scheduler,"Some operators want a greater control over when preemption is enabled, especially during an upgrade to limit potential side-effects."
7808,docs: add documentation for system command.,
7809,cli: add system command and subcmds to interact with system API.,The system command includes gc and reconcile-summaries subcommands which covers all currently available system API calls. The help information is largely pulled from the current Nomad website API documentation.
7810,Merge pull request #6841 from hashicorp/f-agent-pprof-acl,Remote agent pprof endpoints
7811,dev: create directories for cluster script (#6927),
7812,GNUmakefile: report failed path on hclfmt error,
7813,canonicalize allocs from plan results too,
7814,Merge pull request #6816 from hashicorp/b-multiple-envoy,connect: configure envoy to support multiple sidecars in the same alloc
7815,refactor api profile methods,comment why we ignore errors parsing params
7816,"adds qc param, address pr feedback",
7817,condense table test,
7818,Rename profile package to pprof,"Address pr feedback, rename profile package to pprof to more accurately describe its purpose. Adds gc param for heap lookup profiles."
7819,address pr feedback,
7820,comments for api usage of agent profile,
7821,leave acl checking to rpc endpoints,fix test expectation test wrapNonJSON
7822,"provide helpful error, cleanup logic",
7823,prevent doubly wrapping with rpc error,
7824,RPC server EnableDebug option,Passes in agent enable_debug config to nomad server and client configs. This allows for rpc endpoints to have more granular control if they should be enabled or not in combination with ACLs. enable debug on client test
7825,api docs for agent/pprof,
7826,"rename forward func, add comment for why we forward",
7827,region forwarding; prevent recursive forwards for impossible requests,"prevent region forwarding loop, backfill tests fix failing test"
7828,move shared structs out of client and into nomad,
7829,api agent endpoints,helper func to return serverPart based off of serverID
7830,test pprof headers and profile methods,"tidy up, add comments clean up seconds param assignment"
7831,warn when enabled debug is on when registering,"m -> a receiver name return codederrors, fix query"
7832,acl and debug test table,rename implementation method
7833,Server request forwarding for Agent.Profile,"Return rpc errors for profile requests, set up remote forwarding to target leader or server id for profile requests. server forwarding, endpoint tests"
7834,test for known pprof endpoints,
7835,agent pprof endpoints,"wip, agent endpoint and client endpoint for pprof profiles agent endpoint test"
7836,upgrade CNI plugins to 0.8.4 (#6921),"When multiple Connect-enabled task groups start on the same client node, a race condition in the CNI plugins for creating iptables chains causes one of the tasks to fail. We upstreamed a patch to CNI plugins to make iptables chain creation idempotent. This changeset updates end-to-end testing, development tooling, and documentation to use 0.8.4 which includes our patch."
7837,client: stop using alloc.TaskResources,"Now that alloc.Canonicalize() is called in all alloc sources in the client (i.e. on state restore and RPC fetching), we no longer need to check alloc.TaskResources. alloc.AllocatedResources is always non-nil through alloc runner. Though, early on, we check for alloc validity, so NewTaskRunner and TaskEnv must still check.  module test validates that behavior."
7838,client: canonicalize alloc runner on RPC,
7839,Migrate old alloc structs on read,This commit ensures that Alloc.AllocatedResources is properly populated when read from persistence stores (namely Raft and client state store). The alloc struct may have been written previously by an arbitrary old version that may only populate Alloc.TaskResources.
7840,commit a hclfmt to eliminate diffs after 'make dev',
7841,changelog for GH-6916,
7842,interpolate environment for services in script checks (#6916),"In 0.10.2 (specifically 387b016) we added interpolation to group service blocks and centralized the logic for task environment interpolation. This wasn't also added to script checks, which caused a regression where the IDs for script checks for services w/ interpolated fields (ex. the service name) didn't match the service ID that was registered with Consul. This changeset calls the same taskenv interpolation logic during module configuration, and adds tests to reduce the risk of future regressions by comparing the IDs of service hook and the check hook."
7843,CLI: protect against AllocatedResources being nil,
7844,Update go-discover library,To pick up go.net change so we can cross compile to arm64
7845,tr: initialize envoybootstrap prestart hook response.Env field,
7846,Merge pull request #6915 from hashicorp/d-consul-warning,[docs] Change consul agent note to callout
7847,Change consul agent note to callout,"Because this is such a common misconfig, it is probably worth highlighting"
7848,Typo fix,Synopsis needs to start with uppercase to match other commands
7849,changelog for GH-6912,
7850,cli: include namespace in output when querying job stauts. (#6912),
7851,Merge pull request #6902 from hashicorp/b-update-tainted-evict-to-lost,Update Evicted allocations to lost when lost
7852,changelog for GH-6907,
7853,Fix error parsing config when setting consul.timeout. (#6907),"When parsing a config file which had the consul.timeout param set, Nomad was reporting an error causing startup to fail. This seems to be caused by the HCL decoder interpreting the timeout type as an int rather than a string. This is caused by the struct TimeoutHCL param having a hcl key of timeout alongside a Timeout struct param of type time.Duration (int). Ensuring the decoder ignores the Timeout struct param ensure the decoder runs correctly."
7854,update changelog,
7855,Update Evicted allocations to lost when lost,"If an alloc is being preempted and marked as evict, but the underlying node is lost before the migration takes place, the allocation currently stays as desired evict, status running forever, or until the node comes back online. This commit updates updateNonTerminalAllocsToLost to check for a destired status of Evict as well as Stop when updating allocations on tainted nodes. switch to table test for lost node cases"
7856,tr: expose envoy sidecar admin port as environment variable,
7857,e2e: add test for multiple sevice sidecars in the same alloc,
7858,connect: configure envoy such that multiple sidecars can run in the same alloc,
7859,Merge pull request #6899 from hashicorp/docs-podman,docs: add podman as an external task driver plugin
7860,docs: add podman as an external task driver plugin,Tested using https://github.com/schmichael/nomad-podman-vagrant
7861,docs: fix lxc anchor link,
7862,docs: fix capitalization,
7863,Merge pull request #6898 from hashicorp/hicks/fix-typo,"Fix typo, Ethier -> Either"
7864,"Fix typo, Ethier -> Either",
7865,Merge pull request #6888 from hashicorp/r-remove-dead-disk-code,nomad/state: remove dead upgrade path code
7866,nomad/state: remove dead upgrade path code,It is uncalled so there hsould be no runtime changes.
7867,Merge pull request #6885 from hashicorp/docs/cv/web-ui-urlfix,docs: Fix bad link to UI Guide track
7868,e2e: give metrics longer to settle (#6884),Increase the shortened timeout after the first loop so that metrics that take longer to come in aren't failing the test unnecessarily. Move the check for empty alloc metrics into the loop so that if the first values we get are empty we don't fail the test too early.
7869,Fix bad link,Corrected link to Nomad UI track from comments in #6876
7870,client: fix trace log message in alloc hook update (#6881),
7871,[docs] Migrating Web-UI and Governance Guides to learn (#6876),  [docs] Migrating Web-UI and Governance Guides to learn   fix 404s caught in checks 
7872,cli: Allow user to specify dest filename for nomad init (#6520), Allow user to specify dest filename for nomad init Create changelog entry for GH-6520
7873,Merge pull request #6879 from hashicorp/update-changelog,Update CHANGELOG.md
7874,Update CHANGELOG.md,
7875,Update CHANGELOG.md,
7876,Merge pull request #6831 from hashicorp/add_inmemory_certificate,Add option to set certificate in-memory
7877,Merge pull request #6746 from hashicorp/f-shutdown-delay-tg,Group shutdown_delay
7878,Merge pull request #6872 from hashicorp/dep-gohclog,update go-hclog to latest release
7879,update go-hclog to latest release,
7880,Making pull activity timeout configurable in Docker,"  Making pull activity timeout configurable in Docker plugin config, first pass   Fixing broken function call   Fixing broken tests   Fixing linter suggestion   Adding documentation on new parameter in Docker plugin config   Adding unit test   Setting min value for pull_activity_timeout, making pull activity duration a private var "
7881,test: quota: relax multierror message matching to Contains,
7882,"test: build quota_apply_test, remove the tests that require ent",
7883,Merge pull request #6865 from hashicorp/b-cli-error-formatting,cli: sequence cli.Ui operations
7884,update changelog for group shutdown_delay,
7885,docs for shutdown delay,"update docs, address pr comments ensure pointer is not nil use pointer for diff tests, set vs unset"
7886,allow only positive shutdown delay,"more explicit test case, remove select statement"
7887,shutdown delay for task groups,copy struct values ensure groupserviceHook implements RunnerPreKillhook run deregister first test that shutdown times are delayed move magic number into variable
7888,cli: sequence cli.Ui operations,"Fixes a bug where if a command flag parsing errors, the resulting error and help usage messages get interleaved in unexpected and non-user friendly way. The reason is that we have flag parsing library effectively writes to ui.Error in a goroutine.  This is problematic: first, we lose the sequencing between help usage and error message; second, cli.Ui methods are not concurrent safe. Here, we introduce a custom error writer that buffers result and calls ui.Error() in the write method and in the same goroutine. For context, we need to wrap ui.Error because it's line-oriented, while flags library expects a io.Writer which is bytes oriented."
7889,env_aws: Disable Retries and set Session cfg (#6860),env_aws: Disable Retries and set Session cfg
7890,Update client/fingerprint/env_aws.go,Co-Authored-By: Mahmood Ali link
7891,Merge pull request #6848 from hashicorp/b-log-less-in-node-drainer,tests: remove trace statements from nodeDrainWatcher.watch
7892,e2e: run client/allocs metrics nightly tests vs Windows (#6850),"Adds Windows targets to the client/allocs metrics tests. Removes the module test, which covers less than these tests and is now redundant. Adds a firewall rule to our Windows instances so that the prometheus server can scrape the Nomad HTTP API for metrics."
7893,Add raw field for ClientCert and ClientKey,
7894,tests: remove trace statements from nodeDrainWatcher.watch,"Avoid logging in the module function as much as possible, since it is not waited on during a server shutdown. When the logger logs after a test passes, it may or may not cause the testing framework to panic. More info in: https://github.com/golang/go/issues/29388#issuecomment-453648436"
7895,Update go mod,
7896,Add option to set certificate in-memory via SDK,
7897,env_aws: Disable Retries and set Session cfg,"Previously, Nomad used hand rolled HTTP requests to interact with the EC2 metadata API. Recently however, we switched to using the AWS SDK for this fingerprinting. The default behaviour of the AWS SDK is to perform retries with exponential backoff when a request fails. This is problematic for Nomad, because interacting with the EC2 API is in our client start path. Here we revert to our pre-existing behaviour of not performing retries in the fast path, as if the metadata service is unavailable, it's likely that nomad is not running in AWS."
7898,Merge pull request #6855 from hashicorp/b-interp-connect-task,connect: canonicalize before adding sidecar
7899,Merge pull request #6820 from hashicorp/f-skip-docker-logging-knob,driver: allow disabling log collection
7900,Merge pull request #6556 from hashicorp/c-vendor-multierror-20191025,Update go-multierror library
7901,address review comments,
7902,tests: fix error format assertion,multierror library changed formatting slightly.
7903,Update changelog with #6817,
7904,Update go-multierror to 72917a1,To pick up https://github.com/hashicorp/go-multierror/pull/28
7905,Fix flapping status light test (#6852),I unintentionally introduced a flapping test in #6817. The draining status of the node will be randomly chosen and that flag takes precedence over eligibility. This forces the draining flag to be false rather than random so the test should no longer flap. See here for an example failure: https://circleci.com/gh/hashicorp/nomad/26368
7906,update changelog,
7907,Merge pull request #6839 from hashicorp/b-cgroup-cleanup,executor: stop joining executor to container cgroup
7908,docs: add #6855 to changelog,"Also make Connect related fixes more consistent in the changelog. I suspect users won't care if a Connect related fix is in the server's admission controller or in the client's groupservice hook or somewhere else, so I think grouping them by module makes the most sense."
7909,connect: canonicalize before adding sidecar,Fixes #6853 Canonicalize jobs first before adding any sidecars. This fixes a bug where sidecar tasks were added without interpolated names and broke validation. Sidecar tasks must be canonicalized independently. Also adds a group network to the mock connect job because it wasn't a valid connect job before!
7910,Merge pull request #6854 from hashicorp/update-changelog,Add notarization details to changelog
7911,Add clarifying update,
7912,Add apple notarization note,
7913,Merge pull request #6849 from hashicorp/b-debug-preemption,Use debug logging for scheduler internals
7914,More error->debug for logging in the bin packing iterator,
7915,driver/pot: Added extra_hosts and args commands (#6577),
7916,UI: Fix client sorting (#6817),"There are two changes here, and some caveats/commentary:   The “State“ table column was actually sorting only by status. The state was not an actual property, just something calculated in each client row, as a product of status, isEligible, and isDraining. This PR adds isDraining as a component of compositeState so it can be used for sorting.   The Sortable mixin declares dependent keys that cause the sort to be live-updating, but only if the members of the array change, such as if a new client is added, but not if any of the sortable properties change. This PR adds a SortableFactory function that generates a mixin whose listSorted computed property includes dependent keys for the sortable properties, so the table will live-update if any of the sortable properties change, not just the array members. There’s a warning if you use SortableFactory without dependent keys and via the original Sortable interface, so we can eventually migrate away from it. "
7917,Merge pull request #6808 from hashicorp/b-ui/unclosed-log-streams,UI: Unclosed log streams
7918,Use debug logging for scheduler internals,We currently log an error if preemption is unable to find a suitable set of allocations to preempt. This commit changes that to debug level since not finding preemptable allocations is not an error condition.
7919,e2e: run client/allocs metrics tests nightly (#6842),Refactor the metrics end-to-end tests so they can be run with our e2e test framework. Runs fabio/prometheus and a collection of jobs that will cause metrics to be measured. We then query Prometheus to ensure we're publishing those allocation metrics and some metrics from the clients as well. Includes adding a placeholder for running the same tests on Windows.
7920,simplify cgroup path lookup,
7921,Merge pull request #6838 from hashicorp/f-parallelize-state-store-tests,tests: parallelize state store tests
7922,executor: stop joining executor to container cgroup,"Stop joining libcontainer executor process into the newly created task container cgroup, to ensure that the cgroups are fully destroyed on shutdown, and to make it consistent with other plugin processes. Previously, executor process is added to the container cgroup so the executor process resources get aggregated along with user processes in our metric aggregation. However, adding executor process to container cgroup adds some complications with much benefits: First, it complicates cleanup.  We must ensure that the executor is removed from container cgroup on shutdown.  Though, we had a bug where we missed removing it from the systemd cgroup.  Because executor uses module on launch, which includes systemd, but module which doesn't. Second, it may have advese side-effects.  When a user process is cpu bound or uses too much memory, executor should remain functioning without risk of being killed (by OOM killer) or throttled. Third, it is inconsistent with other drivers and plugins.  Logmon and DockerLogger processes aren't in the task cgroups.  Neither are containerd processes, though it is equivalent to executor in responsibility. Fourth, in my experience when executor process moves cgroup while it's running, the cgroup aggregation is odd.  The cgroup module doesn't seem to capture the full memory usage of the executor process and becomes a red-harring when investigating memory issues. For all the reasons above, I opted to have executor remain in nomad agent cgroup and we can revisit this when we have a better story for plugin process cgroup management."
7923,drivers/exec: test all cgroups are destroyed,
7924,tests: parallelize state store tests,It has been decided we're going to live in a many core world. Let's take advantage of that and parallelize these state store tests which all run in memory and are largely CPU bound. An unscientific benchmark demonstrating the improvement: [mp state (master)] $ go test PASS ok      github.com/hashicorp/nomad/nomad/state  5.162s [mp state (f-parallelize-state-store-tests)] $ go test PASS ok      github.com/hashicorp/nomad/nomad/state  1.527s
7925,doc: spread is inherited from job to group (#6837),
7926,Merge pull request #6834 from hashicorp/monitor-changelog,add 6828 to changelog
7927,Merge pull request #6833 from hashicorp/sentinel-imports-note,Make note of Sentinel standard imports
7928,Make note of Sentinel standard imports, Sentinel-embedded applications can choose to whitelist or blacklist certain standard imports. Please reference the documentation for the Sentinel-enabled application you're using to determine if all standard imports are available.
7929,add 6828 to changelog,
7930,doc: explain ALLOC_INDEX uniqueness guarantees (#6830),"The module isn't guaranteed to be unique, and this has caused some user confusion. The servers make a best-effort attempt to make this value unique from 0 to count-1 but when you have canaries on the task group, there are reused indexes because you have multiple job versions running at the same time. If a user needs a unique number for interpolating a value in your application, they can get this by combining the job version and the alloc index. Co-Authored-By: Michael Schurter link"
7931,Merge pull request #6828 from hashicorp/b/nomad-monitor-panic,command: error when no node is found for module
7932,command: error when no node is found for module,"Currently module will panic when a node-id does not match any nodes, as there is no empty result bounds checking. Here we return an error to the user when no nodes are found."
7933,client: expose allocated CPU per task (#6784),
7934,Merge pull request #6800 from hashicorp/b-update-freeport,tests: swap lib/freeport for tweaked helper/freeport
7935,Merge pull request #6631 from hashicorp/dependabot/npm_and_yarn/ui/lodash.mergewith-4.6.2,Bump lodash.mergewith from 4.6.1 to 4.6.2 in /ui
7936,Merge pull request #6629 from hashicorp/dependabot/npm_and_yarn/ui/lodash.defaultsdeep-4.6.1,Bump lodash.defaultsdeep from 4.6.0 to 4.6.1 in /ui
7937,tests: swap lib/freeport for tweaked helper/freeport,"Copy the updated version of freeport (sdk/freeport), and tweak it for use in Nomad tests. This means staying below port 10000 to avoid conflicts with the lib/freeport that is still transitively used by the old version of consul that we vendor. Also provide implementations to find ephemeral ports of macOS and Windows environments. Ports acquired through freeport are supposed to be returned to freeport, which this change now also introduces. Many tests are modified to include calls to a cleanup function for Server objects. This should help quite a bit with some flakey tests, but not all of them. Our port problems will not go away completely until we upgrade our vendor version of consul. With Go modules, we'll probably do a 'replace' to swap out other copies of freeport with the one now in 'nomad/helper/freeport'."
7938,Bump lodash.mergewith from 4.6.1 to 4.6.2 in /ui,Bumps link from 4.6.1 to 4.6.2. - link - link Signed-off-by: dependabot[bot] link
7939,Merge pull request #6628 from hashicorp/dependabot/npm_and_yarn/ui/handlebars-4.1.2,Bump handlebars from 4.1.1 to 4.1.2 in /ui
7940,Bump fstream from 1.0.11 to 1.0.12 in /ui (#6630),Bumps link from 1.0.11 to 1.0.12. - link - link Signed-off-by: dependabot[bot] link
7941,Bump lodash.merge from 4.6.1 to 4.6.2 in /ui (#6632),Bumps link from 4.6.1 to 4.6.2. - link - link Signed-off-by: dependabot[bot] link
7942,driver: allow disabling log collection,"Operators commonly have docker logs aggregated using various tools and don't need nomad to manage their docker logs.  Worse, Nomad uses a somewhat heavy docker api call to collect them and it seems to cause problems when a client runs hundreds of log collections. Here we add a knob to disable log aggregation completely for nomad. When log collection is disabled, we avoid running logmon and docker_logger for the docker tasks in this implementation. The downside here is once disabled, module commands and API no longer return logs and operators must corrolate alloc-ids with their aggregated log info. This is meant as a stop gap measure.  Ideally, we'd follow up with at least two changes: First, we should optimize behavior when we can such that operators don't need to disable docker log collection.  Potentially by reverting to using pre-0.9 syslog aggregation in linux environments, though with different trade-offs. Second, when/if logs are disabled, nomad logs endpoints should lookup docker logs api on demand.  This ensures that the cost of log collection is paid sparingly."
7943,Merge pull request #6788 from hashicorp/b-timeout-logmon-stop,logmon: add timeout to RPC operations
7944,Update consensus.html.md (#6813),The url for raft algorithm pdf is no longer valid. Here is correct url - https://raft.github.io/raft.pdf  and website is https://raft.github.io/
7945,Merge pull request #6814 from hashicorp/f-use-golangci-lint,swap gometalint for golangci-lint
7946,Bump lodash.defaultsdeep from 4.6.0 to 4.6.1 in /ui,Bumps link from 4.6.0 to 4.6.1. - link - link Signed-off-by: dependabot[bot] link
7947,Bump handlebars from 4.1.1 to 4.1.2 in /ui,Bumps link from 4.1.1 to 4.1.2. - link - link - link Signed-off-by: dependabot[bot] link
7948,Bump fstream from 1.0.11 to 1.0.12 in /ui,Bumps link from 1.0.11 to 1.0.12. - link - link Signed-off-by: dependabot[bot] link
7949,Added Discuss badge to README (#6695),
7950,Update network.html.md (#6782),"There is an undocumented way of mapping a dynamically allocated port to the container. This is applicable in bridge networking ( necessary for consul connect enabled services ) to expose the service directly. This is needed when using upstream connect services, but you need to expose the service by normal means. By referencing the current documentation you need to use static ports in order to do so. Introduced in #6189 but undocumented"
7951,docs: add jrasell/chemtrail to community resources. (#6798),
7952,spellcheck: add misspell to linter dependencies,"You'd think since golangci-lint embeds misspell we could use that, but it fails to run if it finds no Go source files, which is the case in our website/ directory that we want to check."
7953,spellcheck: Fix spelling of retrieve,
7954,chore: Switch from gometalinter to golangci-lint,"gometalinter has been deprecated, with golangci-lint as its spiritual and recommended successor. Here we switch to using it with an equivalent configuration, albeit with newer versions of some linters. To maintain compatibility with existing settings, we have a couple of things disabled here, specifically:  tests         We have a lot of unused code in our tests that choke deadcode.         We should attempt to clean these up soon so that we can lint our         testcode. govet.check-shadowing = false         This breaks on redefining module which we do all over the nomad         codebase."
7955,Don't initialize variables before you need them,
7956,Merge pull request #6809 from hoh/patch-1,docs: port name requires quotes in hcl
7957,docs: port name requires quotes in hcl,"When trying to run this example, Nomad v0.10.2 raises the following error: module Adding quotes around the port map module fixes the problem and the job works as expected."
7958,Light test coverage for the stream-logger class,
7959,Fix a race condition where a response sent after the logger stops never gets canceled,
7960,Merge pull request #6807 from hashicorp/docs-097,docs: add #6792 backport to 0.9.7 changelog
7961,docs: add #6792 backport to 0.9.7 changelog,
7962,Merge pull request #6805 from hashicorp/release-0102,Release 0102
7963,Merge pull request #6806 from hashicorp/docs-0102,docs: release 0.10.2 and 0.9.7
7964,docs: release 0.10.2 and 0.9.7,
7965,release: prep for 0.10.3 development,
7966,Merge branch 'master' into release-0102,
7967,Merge pull request #6803 from hashicorp/docs-driver-skeleton-reference,docs: add reference to the driver plugin skeleton project
7968,Merge pull request #6804 from hashicorp/docs-cni-version,docs: reference cni-plugins v0.8.3
7969,release: remove 0.10.2 generated files,
7970,docs: reference cni-plugins v0.8.3,
7971,Release v0.10.2,
7972,Generate files for 0.10.2 release,
7973,release: unset prerelease for final release,
7974,Merge pull request #6795 from hashicorp/vendor-update-aws-sdk-v1.25.41,update aws sdk v1.25.41
7975,docs: add reference to the drivir plugin skeleton project,
7976,Merge pull request #6791 from hashicorp/docs/cv/stateful_to_learn,Stateful Workload guides to learn.hashicorp.com
7977,vendor: Update go-discover for AWS SDK change,"Update go-discover to pull in latest AWS SDK change through its vendored path, along with other provider changes."
7978,Merge pull request #6792 from hashicorp/b-propose-panic,scheduler: fix panic when preempting and evicting allocs
7979,Merge pull request #6792 from hashicorp/b-propose-panic,scheduler: fix panic when preempting and evicting allocs
7980,gitignore: only ignore toplevel tags and bin,Primarily don't ignore tags and bin packages in vendored folders
7981,Update AWS SDK library to v1.25.41,Update github.com/aws/aws-sdk-go and github.com/hashicorp/go-discover to pick up support for EC2 Metadata Instance Service v2 changes. Follow up to https://github.com/hashicorp/go-discover/pull/128 .
7982,docs: mention #6787 in upgrade guide,
7983,changelog: node-reschedule-penalty,
7984,scheduler: fix job update placement on prev node penalized (#6781),"Fixes #5856 When the scheduler looks for a placement for an allocation that's replacing another allocation, it's supposed to penalize the previous node if the allocation had been rescheduled or failed. But we're currently always penalizing the node, which leads to unnecessary migrations on job update. This commit leaves in place the existing behavior where if the previous alloc was itself rescheduled, its previous nodes are also penalized. This is conservative but the right behavior especially on larger clusters where a group of hosts might be having correlated trouble (like an AZ failure). Co-Authored-By: Michael Schurter link"
7985,docs: add #6792 to changelog,
7986,scheduler: update tests with modern error helper,
7987,scheduler: fix panic when preempting and evicting,"Fixes #6787 In ProposedAllocs the proposed alloc slice was being copied while its contents were not. Since RemoveAllocs nils elements of the proposed alloc slice and is called twice, it could panic on the second call when erroneously accessing a nil'd alloc. The fix is to not copy the proposed alloc slice and pass the slice returned by the 1st RemoveAllocs call to the 2nd call, thus maintaining the trimmed length."
7988,Stateful Workload guides to learn.hashicorp.com,
7989,Merge pull request #6752 from hashicorp/docs-vault-token_period,docs: vault integration docs should reference new token_period field
7990,Merge pull request #6591 from hashicorp/d-remove-old-ui-guide,Docs: Remove the old UI guide
7991,docs: vault integration docs should reference new token_explicit_max_ttl field,
7992,Fix incorrect page title on the operating a job UI guide,
7993,Remove old UI guide,
7994,Add a redirect rule from the old ui guide to the new ones,
7995,Merge pull request #6779 from hashicorp/r-aws-fingerprint-via-library,Use AWS SDK to access EC2 Metadata
7996,logmon: add timeout to RPC operations,"Add an RPC timeout for logmon.  In https://github.com/hashicorp/nomad/issues/6461#issuecomment-559747758 , module locked up and indefinitely blocked the task runner destroy operation. This is an incremental improvement.  We still need to follow up to understand how we got to that state, and the full impact of locked-up Stop and its link to pending allocations on restart."
7997,website: add ‘intro to nomad’ video to /intro ,- additionally add some css to allow the embedded iframe to respond at lower browser sizes
7998,Merge pull request #6774 from alrs/fix-client-test-goroutine,client: fix use of T.Fatalf() in test goroutine
7999,fingerprint code refactor,Some code cleanup:   Use a field for setting EC2 metadata instead of env-vars in testing; but keep environment variables for backward compatibility reasons   Update tests to use testify 
8000,fingerprint: avoid api query if config overrides it,
8001,fingerprint: use ec2metadata package,
8002,fix plugin launcher SetConfig msgpack params (#6776)," fix plugin launcher SetConfig msgpack params  The plugin launcher tool was passing the wrong byte array into module, resulting in msgpack decoding errors. This was fixed in a949050 (#6725) but accidentally reverted in 6aff18d (#6590). Co-Authored-By: Chris Baker link"
8003,Merge pull request #6773 from xak2000/patch-2,Fix demo vagrant provision hung when libssl asks for confirmation
8004,Merge pull request #6761 from hashicorp/b-acl-anonymous-request-errors,acl_endpoint: permission denied for unauthenticated requests
8005,address feedback review,apply module
8006,e2e: add allocstats test for Windows (#6775),"Extends the BasicAllocStats test to include a test for Windows clients, exercising stats via a powershell module job. Adds module and module utils so that we can scope tests to run only when Linux or Windows clients are available. This prevents waiting on timeouts when running a subset of the tests against a development cluster (vs our nightly test cluster)."
8007,client: fix use of T.Fatal inside TestFS_logsImpl_NoFollow() goroutine.,
8008,plugins device: remove trace level containing config contents,
8009,Merge pull request #6768 from hashicorp/docs/cv/lb_to_learn,Migrating the Load-balancing guides to Nomad
8010,Merge pull request #6713 from alrs/fix-e2e-cli-close-before-error,e2e/cli/command: close after error handling
8011,e2e/cli/command: Wait() after execution,
8012,docs: show /etc/passwd in minimal chroot (#6769),
8013,e2e: add a Windows client to test runner (#6735), Adds a constraint to prevent tests from landing on Windows Improve Terraform output for mixed windows/linux clients Makes some Windows client config fixes from 0.10.2 testing
8014,Merge pull request #6771 from hashicorp/b-deflake-TestHTTP_FreshClientAllocMetrics-test,tests: deflake TestHTTP_FreshClientAllocMetrics
8015,Fix demo vagrant provision hung when libssl asks for confirmation,"The provision shell script tries to install libssl1.1 package as dependency of ca-certificates package. The installing of libssl requires to restart some services, and it asks for confirmation of this. But there are no interactive session at this stage, so Vagrant provisioning just hungs. This commit add a module setting before installing libssl, so it doesn't ask confirmation anymore and the provisioning works again."
8016,tests: deflake TestHTTP_FreshClientAllocMetrics,"The test asserts that alloc counts get reported accurately in metrics by inspecting the metrics endpoint directly.  Sadly, the metrics as collected by module seem to be stateful and may contain info from other tests. This means that the test can fail depending on the order of returned metrics. Inspecting the metrics output of one failing run, you can see the duplicate guage entries but for different node_ids: module"
8017,Merge pull request #6767 from hashicorp/c-ci-tweaks-20191122,Further tweaks to CircleCI build scripts
8018,ci: avoid building binaries in stable-website,This speeds up building and pushing releases
8019,Removed 404 links; pointed to learn.hashicorp.com,
8020,Remove generated 0.10.2-rc1 files,
8021,ci: verify .circleci/config.yml is up to date,
8022,Removed sidenav links for LB guides,
8023,Migrating the Load-balancing guides to Nomad,Added redirects and stub-ified the index page
8024,Release v0.10.2-rc1,
8025,Merge pull request #6765 from hashicorp/docs-connect-bugs,docs: update connect limitations
8026,Generate files for 0.10.2-rc1 release,
8027,release: bump version to 0.10.2-rc1,
8028,Merge pull request #6766 from hashicorp/docs-docker-dangling-containers-followup,docs: address more GH-6762 review comments
8029,docs: address more GH-6762 review comments,Incorporate suggestions in https://github.com/hashicorp/nomad/pull/6762#pullrequestreview-321716747 [ci skip]
8030,docs: update connect limitations,
8031,Merge pull request #6762 from hashicorp/d-docker-dangling-containers,document docker dangling container reaper
8032,address more review comments,
8033,Apply suggestions from code review,Co-Authored-By: Michael Schurter link
8034,ci: avoid paging,
8035,ci: ignore docs only changes,"Skip running backend and UI changes for docs/website updates, as indicated by branch name."
8036,git: only .circleci/config.yml is a generated one,
8037,Merge pull request #6763 from hashicorp/b-handle-initialize-logger,drivers: always initialize taskHandle.logger
8038,Merge pull request #6763 from hashicorp/b-handle-initialize-logger,drivers: always initialize taskHandle.logger
8039,changelog,[ci skip]
8040,drivers: always initialize taskHandle.logger,Looks like the RecoverTask doesn't set taskHandle.logger field causing a panic when the handle attempts to log (e.g. when Shutdown or Signaling fails).
8041,document docker dangling container repeaper,
8042,acl_endpoint: permission denied for unauthenticated requests,"If ACL Request is unauthenticated, we should honor the anonymous token. This PR makes few changes:  module endpoints may return policy if anonymous policy allows it, or return permission denied otherwise. module returns an empty policy list, or one with anonymous policy if one exists.  Without this PR, the we return an incomprehensible error. Before: module After: module"
8043,Merge pull request #6755 from hashicorp/docs-device-plugin-guide,cherry-pick: device plugin authoring guide
8044,"added the device plugin authoring guide, made minor formatting changes to task driver plugin authoring guide.",
8045,Merge pull request #6754 from hashicorp/docs-0.10.2,Changelog updates and download link for 0.10.2-rc1
8046,Merge pull request #6754 from hashicorp/docs-0.10.2,Changelog updates and download link for 0.10.2-rc1
8047,docs: add Nomad v0.10.2-rc1 download link,
8048,docs: reformat changelog for 0.10.2-rc1,
8049,add server-id to -h output,
8050,Merge pull request #6753 from hashicorp/monitor-add-server-id-help,add server-id to -h output
8051,add server-id to -h output,
8052,changelog GH-6580,
8053,docs: vault integration docs should reference new token_period field,
8054,Allows a node uuid prefix to be passed in,
8055,Merge pull request #6750 from hashicorp/nomad-monitor-node-id-prefix,Allows a node uuid prefix to be passed in
8056,Allows a node uuid prefix to be passed in,
8057,CHANGELOG quota network,
8058,Merge pull request #6749 from hashicorp/b-test-tweaks-20191120,CI and Test tweaks
8059,fixup! tests: don't assume eth0 network is available,
8060,ci: match ci timeout to go test timeout,"make test-nomad sets 15 minute time out for build.  Increase the ci timeout to 20m, so we can get meaningful output and goroutine stack traces rather than have test be simply killed by CircleCI. The extra 5 minutes is a buffer for generating-structs and some unnecessary padding."
8061,tests: don't assume eth0 network is available,"TestClient_UpdateNodeFromFingerprintKeepsConfig checks a test node network interface, which is hardcoded to module and is updated asynchronously.  This causes flakiness when eth0 isn't available. Here, we hardcode the value to an arbitrary network interface."
8062,tests: run TestClient_WatchAllocs in non-linux environments,
8063,testS: fix TestClient_RestoreError,"When spinning a second client, ensure that it uses new driver instances, rather than reuse the already shutdown unhealthy drivers from first instance. This speeds up tests significantly, but cutting ~50 seconds or so, the timeout in NewClient until drivers fingerprints.  They never do because drivers were shutdown already."
8064,tests: remove TestClient_RestoreError test,"TestClient_RestoreError is very slow, taking ~81 seconds. It has few problematic patterns.  It's unclear what it tests, it simulates a failure condition where all state db lookup fails and asserts that alloc fails.  Though starting from https://github.com/hashicorp/nomad/pull/6216 , we don't fail allocs in that condition but rather restart them. Also, the drivers used in second client module are the same singleton instances used in module and already shutdown.  We ought to start healthy new driver instances."
8065,Merge pull request #6745 from hashicorp/c-circleci-tweaks-20191120,ci: Revamp CircleCI config
8066,docs: update quota docs to include network limits,
8067,command: quota init writes files with a network limit,
8068,command: quota status reports network usage,
8069,docs: update quota docs to include network limits,
8070,command: quota init writes files with a network limit,
8071,command: quota status reports network usage,
8072,docs: added #6021 to changelog,
8073,Merge pull request #6021 from hashicorp/f-anonymous-policy-access,api: Update policy endpoint to permit anonymous access
8074,Merge pull request #6017 from hashicorp/f-policy-json,api: Add parsed rules to policy response
8075,Merge pull request #6669 from hashicorp/b-cors-allow-credentials,Allow UI to query client directly for task logs/state
8076,simply link to vault .circleci README,
8077,Refactor circleci CI scripts,"This adopts pattern used by Vault, where we split CircleCI yaml config into multiple files that get packed and translated to 2.0. This has two motivations: First, to ease translating config to CircleCI 2.0 so it can run on Enterprise private repository.  Second and most importantly, it also adding Enterprise specific jobs in separate files with reduced config file merging conflict resolution."
8078,build-deps-image no longer runs,"This is a remenant of the time we used a custom hashicorp docker image for CI. Currently, we use the official golang image, so no longer need the job or manage the dockerhub credentials."
8079,Ignore ci workflow in stable-website,"module branch is only meant for updating the nomadproject.io website, and the backend tests are irrelevant.  Also, the ci workflow uses up the plans containers and may delay website deployments by 20 minutes or more while we are cutting a release."
8080,low case references,
8081,ci: add build-binaries job for artifact storage (#6741),
8082,Add gofmt changes,
8083,Add explanatory comment,
8084,Remove extraneous else block,
8085,Remove extraneous whitespace,
8086,Remove merge error,
8087,Merge branch 'master' into f-policy-json,
8088,docs: add #6370 to changelog,
8089,Merge pull request #6370 from pmcatominey/tls-server-name,command: add -tls-server-name flag
8090,docs: changelog entry for #6606,
8091,Merge pull request #6562 from hashicorp/b-ui/codemirror-update,UI: Update ivy-codemirror to unreleased commit
8092,Merge pull request #6606 from hashicorp/r-go1.12.13,release: switch to Go 1.12.13
8093,Merge pull request #6421 from hashicorp/b-acl-bootstrap-codes,api: acl bootstrap errors aren't 500
8094,Update changelog,
8095,Merge pull request #6349 from hashicorp/b-host-stats,client: Return empty values when host stats fail
8096,release: switch to Go 1.12.13,
8097,docker: set default cpu cfs period (#6737), docker: set default cpu cfs period  Co-Authored-By: Michael Schurter link
8098,CLI: Remove duplicated error output (#6738),
8099,Docs: fix broken alloc signal link (#6731),
8100,Docs: add missing exec command to alloc listing (#6730),
8101,changelog GH-6684,
8102,comments and casing,
8103,Merge pull request #6722 from hashicorp/b-always-destroy-executor,Always destroy exec container on cleanup
8104,Merge pull request #6684 from hashicorp/b-nomad-exec-stdout-tty,nomad exec: check stdout for tty as well
8105,changelog,
8106,404 if token isn't found,
8107,api: acl bootstrap errors aren't 500,"Noticed that ACL endpoints return 500 status code for user errors.  This is confusing and can lead to false monitoring alerts. Here, I introduce a concept of RPCCoded errors to be returned by RPC that signal a code in addition to error message.  Codes for now match HTTP codes to ease reasoning. ``` $ nomad acl bootstrap Error bootstrapping: Unexpected response code: 500 (ACL bootstrap already done (reset index: 9)) $ nomad acl bootstrap Error bootstrapping: Unexpected response code: 400 (ACL bootstrap already done (reset index: 9)) ```"
8108,changelog and comment,
8109,Merge pull request #6699 from hashicorp/f-semver-constraints,"Add new ""semver"" constraint"
8110,Merge pull request #6732 from hashicorp/inplace-update-constraint,Removes checking constraints for inplace update
8111,test: assert semvers are not compared lexically,
8112,Removes checking constraints for inplace update,
8113,docs: document semver constraint operator,
8114,Docs: correct that exec task flag is not optional (#6729),"The task is required, not optional, there’s no default as was described."
8115,core: add semver constraint,"The existing version constraint uses logic optimized for package managers, not schedulers, when checking prereleases:  1.3.0-beta1 will not satisfy "">= 0.6.1"" 1.7.0-rc1 will not satisfy "">= 1.6.0-beta1""  This is due to package managers wishing to favor final releases over prereleases. In a scheduler versions more often represent the earliest release all required features/APIs are available in a system. Whether the constraint or the version being evaluated are prereleases has no impact on ordering. This commit adds a new constraint - module - which will use Semver v2.0 ordering when evaluating constraints. Given the above examples:  1.3.0-beta1 satisfies "">= 0.6.1"" using module 1.7.0-rc1 satisfies "">= 1.6.0-beta1"" using module  Since existing jobspecs may rely on the old behavior, a new constraint was added and the implicit Consul Connect and Vault constraints were updated to use it."
8116,vendor: update go-version to include NewSemver,
8117,Infrastructure for Windows e2e testing (#6584),"Includes: * baseline Windows AMI * initial pass at Terraform configurations * OpenSSH for Windows Using OpenSSH is a lot nicer for Nomad developers than winrm would be, plus it lets us avoid passing around the Windows password in the clear. Note that now we're copying up all the provisioning scripts and configs as a zipped bundle because TF's file provisioner dies in the middle of pushing up multiple files (whereas module works fine). We're also running all the provisioning scripts inside the userdata by polling for the zip file to show up (gross!). This is because module provisioners are failing on Windows with the same symptoms as: https://github.com/hashicorp/terraform/issues/17728 If we can't fix this, it'll prevent us from having multiple Windows clients running until TF supports count interpolation in the module, which is planned for a later 0.12 release."
8118,doc: clarify that gcc-go is not supported (#6726),
8119,hclfmt nomad jobspecs (#6724),
8120,Merge pull request #6725 from hashicorp/bug-plugin-launcher-setconfig-error,SetConfig bug in plugin launcher tool
8121,the plugin launcher tool was passing the wrong byte array into,"SetConfig, resulting in msgpack decoding errors"
8122,CHANGELOG: gcs support,
8123,getter: allow the gcs download scheme (#6692),
8124,Merge pull request #6703 from hashicorp/b-affinity-constraint-inplace-update,"Check for changes to affinity, constraints and spread during update"
8125,update changelog,
8126,DOCS: Spread stanza does not exist on task,Fixes documentation inaccuracy for spread stanza placement. Spreads can only exist on the top level job struct or within a group. comment about nil assumption
8127,Check for changes to affinity and constraints,Adds checks for affinity and constraint changes when determining if we should update inplace. refactor to check all levels at once check for spread changes when checking inplace update
8128,always destroy,
8129,Add tests for orphaned processes,
8130,client: improve group service stanza interpolation and check_re… (#6586), client: improve group service stanza interpolation and check_restart support  Interpolation can now be done on group service stanzas. Note that some task runtime specific information that was previously available when the service was registered poststart of a task is no longer available. The check_restart stanza for checks defined on group services will now properly restart the allocation upon check failures if configured.
8131,update CHANGELOG,
8132,Merge pull request #6698 from hashicorp/f-add-drain-start-time,api: add module in module
8133,Merge pull request #6705 from hashicorp/docs-index-redir,Update redirects.txt
8134,a few more redirects,
8135,Update redirects.txt,
8136,api: use the same initial time for all drain properties,
8137,Merge pull request #6691 from hashicorp/f-nomad-monitor-leader,Nomad monitor - target remote servers
8138,serverID to target remote leader or server,"handle the case where we request a server-id which is this current server update docs, error on node and server id params more accurate names for tests use shared no leader err, formatting rm bad comment remove redundant variable"
8139,add server-id to monitor specific server,
8140,Allows monitor to target leader server,Allows user to pass in node-id=leader to forward monitor request to remote a remote leader.
8141,Merge pull request #6693 from hashicorp/update-consul-template-0.22.1,updates consul template deps to v0.22.1
8142,updates consul template deps to v0.22.1,pin to v0.22.1
8143,api: add module in module,
8144,Merge pull request #6696 from alrs/nomad-fix-dropped-test-error,nomad: fix dropped test error
8145,nomad: fix dropped test error,
8146,Merge pull request #6670 from hashicorp/api/fallthrough-test,test rootfallthrough handler
8147,Merge pull request #6688 from hashicorp/docs-fix-constraint-link,[docs] Fix link; discuss meta; lint fixes
8148,command/agent: Prune Dead Code (#6682), remove unused MockPeriodicJob() from tests remove unused getIndex() from tests remove unused checkIndex() from tests remove unused assertIndex() from tests remove unused Agent.findLoopbackDevice()
8149,command: error handling before file close (#6681),
8150,Fix link; discuss meta; lint fixes,
8151,Merge pull request #6687 from hashicorp/f-override-vault-constraint,vault: allow overriding implicit vault constraint
8152,Merge branch 'master' into f-override-vault-constraint,
8153,vault: allow overriding implicit vault constraint,There's a bug in version parsing that breaks this constraint when using a prerelease enterprise version of Vault (eg 1.3.0-beta1+ent). While this does not fix the underlying bug it does provide a workaround for future issues related to the implicit constraint. Like the implicit Connect constraint: all implicit constraints should be overridable to allow users to workaround bugs or other factors should the need arise.
8154,fix so assertions are test case driven,
8155,backfill Mahmood's changelog items,
8156,Merge pull request #6685 from hashicorp/b-api-separation-20191112,remove accidental project leakage in api/ package
8157,nomad exec: check stdout for tty as well,"When inferring whether to use TTY, check both stdin and stdout are terminals. Otherwise, we get failures like the following: module"
8158,tests appear as github.com/hashicorp/nomad/api.test,
8159,Merge pull request #6680 from hashicorp/b-gh-6570-explicit_max_ttl,vault: check token_explicit_max_ttl as well
8160,api: go-uuid is no longer needed,
8161,api: avoid depending on helper internal package,
8162,api: avoid depending on nomad in test files,
8163,vault: check token_explicit_max_ttl as well,Vault 1.2.0 deprecated module in favor of module.
8164,command: fix TestHelpers_LineLimitReader_TimeLimit() goroutine (#6678),
8165,Set OOMScoreAdjust within systemd dist example (#6679),closes #6672
8166,changelog: windows service manager,
8167,Added service wrapper code (#6220),This is the basic code to add the Windows Service Manager hooks to Nomad. Includes vendoring golang.org/x/sys/windows/svc and added Docs: * guide for installing as a windows service. * configuration for logging to file from PR #6429
8168,Merge pull request #6675 from hashicorp/docs-fix-bad-vault-url,there was a bad (localhost) URL in the vault docs (cherry pick of #6674)
8169,there was a bad (localhost) URL in the vault docs,
8170,Update MonitorDrain comment to indicate channel is closed on errors (#6671),Fixes #6645
8171,Merge pull request #6666 from hashicorp/drew-changelog,update changelog
8172,test /ui/ path,
8173,test rootfallthrough handler,
8174,Merge pull request #6668 from hashicorp/docs-firecracker-lint,linter fixes
8175,Allow UI to query client directly,"Nomad web UI currently fails when querying client nodes for allocation state end endpoints, due to CORS policy. The issue is that CORS requests that are marked module need the http server to include a module [1]. But Nomad Task Logs and filesystem requests include authenticating information and thus marked with module[2][3]. It's worth noting that the browser currently sends credentials and authentication token to servers anyway; it's just that the response is not made available to caller nomad ui javascript.  For task logs specifically, nomad ui retries again by querying the web ui address (typically pointing to a nomad server) which will forward the request to the nomad client agent appropriately. [1] https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials [2] https://github.com/hashicorp/nomad/blob/101d0373eec5d58761d05e67e03f38916997a6d2/ui/app/components/task-log.js#L50 [3] https://github.com/hashicorp/nomad/blob/101d0373eec5d58761d05e67e03f38916997a6d2/ui/app/services/token.js#L25-L39"
8176,linter fixes,
8177,command/agent: TestAgent_ServerConfig() fix dropped errors (#6659),
8178,update changelog,
8179,doc: add missing fields to LXC driver documentation (#6640),"The LXC task driver documentation is missing for many of the optional task config fields, and for the recently added module field on the driver configuration."
8180,Merge pull request #6658 from hashicorp/b-404-redirect,return a 404 if not found instead of redirect to ui
8181,Added firecracker-task-driver to community docs (#6654), Added firecracker-task-driver to community docs  Signed-off-by: Carlos Neira link
8182,"better func name, swap conditional",
8183,update test,
8184,Merge pull request #6648 from rjspiker/rj.font-smooth,website - add -moz-osx-font-smoothing for smooth firefox osx fonts
8185,returns a 404 if not found instead of redirect to ui,
8186,nomad: TestEvalBroker_Dequeue_Empty_Timeout() proper goroutine error handling (#6657),
8187,Merge pull request #6650 from hashicorp/b-better-ws-error,decompress response body from websocket error
8188,Merge pull request #6639 from hashicorp/return-after-forward,return after request has been forwarded
8189,update changelog,
8190,switch to uuid helper package,
8191,Remove response body from websocket error,If a websocket connection errors we currently return the error with a copy of the response body. The response body from the websocket can often times be completely illegible so remove it from the error string. make alloc id empty for more reliable failure un-gzip if content encoding header present
8192,TestEvalBroker_Dequeue_Blocked() proper goroutine error handling (#6651),TestEvalBroker_Dequeue_Blocked() improve test readability
8193,Merge pull request #6653 from hashicorp/b-6646,nomad: fix bug that didn't allow for multiple connect services in same tg
8194,update CHANGELOG,
8195,nomad: fix bug that didn't allow for multiple connect services in same tg,
8196,Merge pull request #6647 from hashicorp/b-6644-reschedule-on-device-changes,Consider devices in tasksUpdated
8197,changed all tests to require from t.Fatalf,
8198,TestEvalBroker_PauseResumeNackTimeout() proper goroutine error handling (#6649),TestEvalBroker_PauseResumeNackTimeout() improve test readability
8199,Update CHANGELOG.md,Co-Authored-By: Michael Schurter link
8200,website - add -moz-osx-font-smoothing for smooth firefox osx fonts,
8201,updated CHANGELOG,
8202,"the scheduler checks whether task changes require a restart, this needed",to be updated to consider devices
8203,Merge pull request #6573 from hashicorp/update-cci-consul,updates default consul version to 1.6.1
8204,nomad: TestEvalBroker_EnqueueAll_Dequeue_Fair() proper goroutine error handling (#6636),nomad: TestEvalBroker_EnqueueAll_Dequeue_Fair() improve test readability
8205,update vagrant & packer consul versions,
8206,Escape job ID in API requests (#2411),"Jobs can be created with user-provided IDs containing any character except spaces. The jobId needs to be escaped when used in a request path, otherwise jobs created with names such as ""why?"" can't be managed after they are created."
8207,return after request has been forwarded,
8208,doc: switch README to CircleCI build status badge (#6634),
8209,nomad: fix dropped error in TestJobEndpoint_Deregister_ACL (#6602),
8210,fix broken test expectation from message change (#6635),
8211,Merge pull request #6596 from rjspiker/rj.fonts,website - font and brand update
8212,Bumping freebsd vagrant to 11.3-STABLE (#6500),
8213,Remove trailing dot on drain message to ensure better consistency. (#5956),
8214,Merge pull request #6623 from hashicorp/monitor-docs,Monitor docs
8215,"fix long lines, add possible values",
8216,agent api docs for monitor,update CHANGELOG
8217,Merge pull request #6499 from hashicorp/f-nomad-monitor,Nomad Monitor
8218,"unlock before returning, no need for label","comment, trigger build return length written"
8219,simplify logch goroutine,
8220,wireup plain=true|false query param,
8221,"coordinate closing of doneCh, use interface to simplify callers",comments
8222,log-json -> json,"fix typo command/agent/monitor/monitor.go Co-Authored-By: Chris Baker link Update command/agent/monitor/monitor.go Co-Authored-By: Chris Baker link address feedback, lock to prevent send on closed channel fix lock/unlock for dropped messages"
8223,"address feedback, fix gauge metric name",
8224,simplify assert message,
8225,move forwarded monitor request into helper,
8226,address feedback,
8227,allow more time for streaming message,remove unused struct
8228,monitor command takes no args,"rm extra new line fix lint errors return after close fix, simplify test"
8229,moving endpoints over to frames,
8230,lock in sub select,rm redundant lock wip to use framing wip switch to stream frames
8231,"fix deadlock issue, switch to frames envelope",
8232,return 400 if invalid log_json param is given,Addresses feedback around monitor implementation subselect on stopCh to prevent blocking forever. Set up a separate goroutine to check every 3 seconds for dropped messages. rename returned ch to avoid confusion
8233,"rename function, initialize log level better",underscores instead of dashes for query params
8234,"address feedback, use agent_endpoint instead of monitor",
8235,use channel instead of empty string to determine close,
8236,update go-hclog dep,remove duplicate lock
8237,agent:read acl policy for monitor,
8238,only look up rpchandler for node if we have nodeid,fix some comments and nomad monitor -h output
8239,rpc acl tests for both monitor endpoints,
8240,client monitor endpoint tests,
8241,use intercepting loggers for rpchandlers,
8242,new hclog with standardlogger intercept,
8243,"enable json formatting, use queryoptions",
8244,New monitor pkg for shared monitor functionality,"Adds new package that can be used by client and server RPC endpoints to facilitate monitoring based off of a logger clean up old code small comment about write rm old comment about minsize rename to Monitor Removes connection logic from monitor command Keep connection logic in endpoints, use a channel to send results from monitoring use new multisink logger and interfaces small test for dropped messages update go-hclogger and update sink/intercept logger interfaces"
8245,get local rpc endpoint working,
8246,remove log_writer,"prefix output with proper spacing update gzip handler, adjust first byte flow to allow gzip handler bypass wip, first stab at wiring up rpc endpoint"
8247,Display error when remote side ended monitor,multisink logger remove usage of logwriter
8248,Adds nomad monitor command,"Adds nomad monitor command. Like consul monitor, this command allows you to stream logs from a nomad agent in real time with a a specified log level add endpoint tests Upgrade go-hclog to latest version The current version of go-hclog pads log prefixes to equal lengths so info becomes [INFO ] and debug becomes [DEBUG]. This breaks hashicorp/logutils/level.go Check function. Upgrading to the latest version removes this padding and fixes log filtering that uses logutils Check"
8249,Add Agent Monitor to receive streaming logs,Queries /v1/agent/monitor and receives streaming logs from client
8250,Adds AgentMonitor Endpoint,"AgentMonitor is an endpoint to stream logs for a given agent. It allows callers to pass in a supplied log level, which may be different than the agents config allowing for temporary debugging with lower log levels. Pass in logWriter when setting up Agent"
8251,Update gziphandler to latest version,This version of gziphandler includes a fix that fixes GzipResponseWriter to implement CloseNotifier https://github.com/nytimes/gziphandler/pull/63
8252,feedback updates and some style cleanup,
8253,Merge pull request #6617 from hashicorp/docs-0.10.1,docs: bump website to Nomad 0.10.1
8254,docs: bump website to Nomad 0.10.1,
8255,Merge pull request #6616 from hashicorp/release-0101,Release 0101
8256,Merge branch 'master' into release-0101,
8257,release: prep for 0.10.2-dev,
8258,Merge pull request #6615 from hashicorp/6609-changelog,add bug 6609 to changelog
8259,Release v0.10.1,
8260,add bug 6609 to changelog,
8261,Merge pull request #6609 from hashicorp/b-alloc-status-consistency,Prevent nomad alloc status output inconsistency
8262,Generate files for 0.10.1 release,
8263,docs: update changelog,Remove 0.10.1 release date until finalizing release
8264,Merge pull request #6605 from hashicorp/b-allocres-panic,client: fix panic from 0.8 -> 0.10 upgrade
8265,Merge pull request #6605 from hashicorp/b-allocres-panic,client: fix panic from 0.8 -> 0.10 upgrade
8266,docs: note bridge-nf-call-iptables requirement for Connect (#6607),"The Connect integration uses bridge networking and iptables to send traffic between containers, but the RedHat family of Linux distros sets some of the kernel tunables this requires to be optimized for VMs rather than containers. We can document this behavior for now and consider better operator feedback for pre-flight checking later."
8267,Prevent nomad alloc status output inconsistency,Prevent random map ordering and sort alphabetically better variable name
8268,client: fix panic from 0.8 -> 0.10 upgrade,makeAllocTaskServices did not do a nil check on AllocatedResources which causes a panic when upgrading directly from 0.8 to 0.10. While skipping 0.9 is not supported we intend to fix serious crashers caused by such upgrades to prevent cluster outages. I did a quick audit of the client package and everywhere else that accesses AllocatedResources appears to be properly guarded by a nil check.
8269,docs: prep changelog for 0.10.1 release,
8270,Merge pull request #6575 from hashicorp/b-gh-6571-missing-service-network,Fix some connect connect validation
8271,Merge pull request #6541 from hashicorp/release-0100-net-panic,core: fix panic when AllocatedResources is nil
8272,Merge pull request #6541 from hashicorp/release-0100-net-panic,core: fix panic when AllocatedResources is nil
8273,client/allocwatcher: fix dropped test error (#6592),
8274,nomad: fix test goroutine (#6593),
8275,website - font and brand update,
8276,remove misleading networking log line (#6588),"When a job has a task group network, this log line ends up being misleading if you're trying to debug networking issues. We really only care about this when there's no port map set, in which case we get the error returned anyways."
8277,Merge pull request #6532 from hashicorp/docs-fixup-command,Fixup for command section of website
8278,run 'make hclfmt' so that 'make dev' is idempotent (#6587),
8279,docs: update references,
8280,Merge pull request #6582 from hashicorp/b-vault-createToken-log-msg,nomad: fix vault.CreateToken log message printing wrong error
8281,Merge pull request #6568 from hashicorp/r-vault-deadcode,vault: remove dead lease code
8282,Merge pull request #6047 from hashicorp/b-ignore-server-if-disabled,Only warn against BootstrapExpect set in CLI flag
8283,Merge pull request #6574 from hashicorp/b-gh-6570-vault-role-validation,vault: honor new module in vault token role
8284,nomad: fix vault.CreateToken log message printing wrong error,"Fixes typo in word ""failed"". Fixes bug where incorrect error is printed. The old code would only ever print a nil error, instead of the validationErr which is being created."
8285,core: fix panic when AllocatedResources is nil,Fix for #6540
8286,Merge pull request #6575 from hashicorp/b-gh-6571-missing-service-network,Fix some connect connect validation
8287,Fix admissionValidators,"module doesn't aggregate errors correctly, as it aggregates errors in module reference yet it always returns the nil module. Here, we avoid shadowing module, and move variable declarations to where they are used."
8288,consul connect: do basic validation before mutating job,"module assumes that Networks is a non-empty slice, but TG hasn't been validated yet and validation may depend on mutation results. As such, we do basic check here before dereferencing network slice elements."
8289,add tests for consul connect validation,
8290,"Test with Vault latest, 1.2.3",To ensure we test with latest with latest configuration.
8291,vault: Support new role field module,"Vault 1.2.0 deprecated module field in favor of module in auth role:   Token store roles use new, common token fields for the values    that overlap with other auth backends. module, module, and    module will continue to work, with priority being given to the    module prefixed versions of those parameters. They will also be returned    when doing a read on the role if they were used to provide values initially;    however, in Vault 1.4 if module or module is zero they will no    longer be returned. (module was already not returned if empty.) https://github.com/hashicorp/vault/blob/master/CHANGELOG.md#120-july-30th-2019 "
8292,e2e: refactor Consul configurations (#6559),"Ensure that we're reusing the base configuration between client and servers without the possibility of drift. Reduce the amount of module mangling of the configuration file, and make recommended changes from module for this section of the provisioning script. Fixes some rebase errors on the Nomad config as well."
8293,updates default consul version to 1.6.1,
8294,e2e: refactor Nomad configuration (#6560),Share base configuration for telemetry and consul. Have the server configurations respect the module config. Make changes recommended by module in the provisioning scripts for this section. Switch to OS/arch-tagged release bundles on S3 for compatibility with adding Windows builds in the near future.
8295,vault: remove dead lease code,
8296,e2e: refactor Vault configuration (#6561),Match the configuration directory layout we're using for Consul and other services. Make recommended changes from module for this section of the provisioning script.
8297,separate vars and outputs into their own files and update default link in nomad binary variable to 0.10.0 release (#6550),
8298,e2e: use sockaddr for IP address configuration (#6548),"Update the Consul and Vault configs to take advantage of their included module library for getting the IP addresses we need in a portable way. This particularly avoids problems with ""predictable"" interface names provided by systemd. Also adds the module binary to the Packer build so we can use it in our provisioning scripts."
8299,take out port_map config for traefik and haproxy and add health check to haproxy (#6565),
8300,Update ivy-codemirror to unreleased commit,This addon hasn’t been released in a while but we’d like to get the fix for this bug that’s causing an inability to copy long documents in Firefox: https://github.com/codemirror/CodeMirror/issues/2703 It also includes a deprecation fix: https://github.com/IvyApp/ivy-codemirror/pull/40
8301,add traefik lb guide (#6551),
8302,Update go-multierror library,"Update multierror to latest as of now.  Our version is very old and dates back to Sep 2015[1].  Here, we aim to pick up a panic fix found in n https://github.com/hashicorp/go-multierror/pull/11 (Dec 2016). This is a purely hygiene maintenance change.  I am unaware of any causes of the panic in our current dependencies.  Though, some private internal libraries did rely on the ""recent"" behavior of go-multierror, and I aimed to update here to ease our adoption of other libraries later. [1] https://github.com/hashicorp/go-multierror/commits/d30f09973e19c1dfcd120b2d9c4f168e68d6b5d5"
8303,Merge pull request #6547 from hashicorp/b-docker-task-user,docs: Docker driver supports task user option
8304,fix grammar,
8305,e2e: split Packer build scripts from TF provisioning (#6542),"Make a clear split between Packer and Terraform provisioning steps: the scripts in the module directory are run when we build the AMI whereas the stuff in shared are run at Terraform provisioning time. Merging all runtime provisioning scripts into a single script for each of server/client solves the following:  Userdata scripts can't take arguments, they can only be templated   and that means we have to do TF escaping in bash/powershell scripts. TF provisioning scripts race with userdata scripts."
8306,fix typos (#6552),
8307,docs: Docker driver supports task user option,"Also, add a test case."
8308,Nomad HAProxy load balancing guide (#6534),  add nginx to load balancing nav menu and fix bullets   fill out nginx lb guide   formatting   change Nginx to NGINX   add step to verify load balancer config   update docker image and web app output   add HAProxy lb guide   format haproxy config   add haproxy stats page with screenshot   add note about external load balancer   Update website/source/guides/load-balancing/haproxy.html.md   Co-Authored-By: Chris Baker link  Update website/source/guides/load-balancing/haproxy.html.md  Co-Authored-By: Chris Baker link  Update website/source/guides/load-balancing/haproxy.html.md  Co-Authored-By: Chris Baker link  Update website/source/guides/load-balancing/haproxy.html.md  Co-Authored-By: Chris Baker link  Update website/source/guides/load-balancing/haproxy.html.md  Co-Authored-By: Chris Baker link  Update website/source/guides/load-balancing/haproxy.html.md  Co-Authored-By: Chris Baker link  Update website/source/guides/load-balancing/haproxy.html.md  Co-Authored-By: Chris Baker link  Update website/source/guides/load-balancing/haproxy.html.md  Co-Authored-By: Chris Baker link   add port mapping an static port for haproxy ui + bullet changes   remove extra spaces   Update website/source/guides/load-balancing/haproxy.html.md   Co-Authored-By: Chris Baker link  Update website/source/guides/load-balancing/haproxy.html.md  Co-Authored-By: Chris Baker link  Update website/source/guides/load-balancing/haproxy.html.md  Co-Authored-By: Chris Baker link
8309,Nomad NGINX Load Balancing Guide (#6529),  add nginx to load balancing nav menu and fix bullets   fill out nginx lb guide   formatting   change Nginx to NGINX   add step to verify load balancer config   update docker image and web app output   change Nginx to NGINX in main load balancing page   modify change signal to SIGHUP and add else condition in template stanza to prevent nginx from crashing when no services are available to load balance   add note about external load balancer   clarifications and link to reference architecture 
8310,quota: parse network stanza in quotas (#6511),
8311,Remove inverse block for list-pagination (#6523),"As the angle bracket invocation RFC says:  There is no dedicated syntax for passing an ""else"" block directly. If needed, that can be passed using the named blocks syntax.  https://github.com/emberjs/rfcs/blob/master/text/0311-angle-bracket-invocation.md#block Unfortunately, using a contextual component doesn’t help as the yield inside that component will still result in content rendering that would show when the source isn’t empty. So we decided to change the interface so you have to check whether the source is empty before using it, which aligns with how list-table works."
8312,Merge pull request #6539 from hashicorp/docs-job-volume-no-config,"docs: job volume spec tasks source, not config > source"
8313,"docs: job volume spec tasks source, not config > source",
8314,Merge pull request #6533 from hashicorp/docs-fixup-connect,docs: fix links to connect
8315,Merge pull request #6514 from hashicorp/b-docker-gc-config,driver/docker: ensure that defaults are populated for dangling containers config
8316,Merge pull request #6526 from hashicorp/docs-add-req-vers,Added version requirement to new feature guides
8317,docs: fix links to connect,
8318,Fixup for command section of website, changed list indicator from * -> - moved in-text links to reference links made commands module made command examples module rewrapped text
8319,Merge pull request #6530 from hashicorp/docs-hero-alert-0.10,docs: Added alert to mainpage for new 0.10
8320,Added a markdownlintrc,This will help us more quickly errorcheck the website for non-conforming markdown using https://github.com/igorshubovych/markdownlint-cli
8321,Added alert to mainpage for new 0.10,
8322,Merge pull request #6525 from hashicorp/release-0100,Merge 0.10.0 release branch back into master
8323,Merge pull request #6528 from hashicorp/website-0100,docs: remove link to 0.10.0-rc1
8324,docs: remove link to 0.10.0-rc1,
8325,Update website/source/guides/integrations/consul-connect/index.html.md,Co-Authored-By: Michael Schurter link
8326,Added version requirement to new feature guides,
8327,Merge branch 'master' into release-0100,
8328,Merge pull request #6524 from hashicorp/website-0100,docs: bump to Nomad 0.10.0
8329,cleanup post 0.10.0 release,
8330,docs: bump to Nomad 0.10.0,
8331,Release v0.10.0,
8332,Generate files for 0.10.0 release,
8333,"Revert ""lint: ignore generated windows syscall wrappers""",This reverts commit 482862e6ab0f8db748367bb1eefc2efd11fbe11a.
8334,reorder changelog,
8335,Changelog entry: couple of UI bugs,
8336,Changelog entry: couple of UI bugs,
8337,client: expose group network ports in env vars,Fixes #6375 Intentionally omitted IPs prior to 0.10.0 release to minimize changes and risk.
8338,Merge pull request #6515 from hashicorp/b-expose-group-ports,client: expose group network ports in env vars
8339,client: expose group network ports in env vars,Fixes #6375 Intentionally omitted IPs prior to 0.10.0 release to minimize changes and risk.
8340,Merge pull request #6518 from mre/patch-1,Update link to new blog
8341,Update link to new blog,
8342,client: don't retry fingerprinting on shutdown,"At shutdown, driver manager context expires and the fingerprinting channel closes.  Thus it is undeterministic which clause of The select statement gets executed, and we may keep retrying until the module block is executed. Here, we check always check ctx expiration before retrying again."
8343,driver/docker: ensure that defaults are populated,"Looks like we may need to pass default literal at each layer to be able, so defaults are set properly."
8344,Merge pull request #6325 from hashicorp/b-docker-reconcile-periodically,docker: periodically reconcile containers
8345,add timeouts for docker reconciler docker calls,
8346,only set a single label for now,"Other labels aren't strictly necessary here, and we may follow up with a better way to customize."
8347,Merge pull request #6510 from hashicorp/r-golang-1.12.12,Use golang 1.12.12
8348,Only start reconciler once in main driver,"driver.SetConfig is not appropriate for starting up reconciler goroutine.  Some ephemeral driver instances are created for validating config and we ought not to side-effecting goroutines for those. We currently lack a lifecycle hook to inject these, so I picked the module function for now, and reconciler should only run after fingerprinter started. Use module to ensure that we only start reconciler loop once."
8349,connect: upgrade to envoy 1.11.2 and add sha,Append the Docker image sha to the Envoy image to ensure users default to using the version that Nomad was tested against.
8350,Merge pull request #6509 from hashicorp/f-add-envoy-sha,connect: upgrade to envoy 1.11.2 and add sha
8351,Merge pull request #6510 from hashicorp/r-golang-1.12.12,Use golang 1.12.12
8352,connect: upgrade to envoy 1.11.2 and add sha,Append the Docker image sha to the Envoy image to ensure users default to using the version that Nomad was tested against.
8353,e2e tests assume non-root user,
8354,adjust circleci scripts to use official golang image,
8355,Use golang 1.12.12,"Use use base official golang image in CircleCI, as it gets refreshed more quickly compared to circleci/golang, and we don't benefit from circleci image customizations much."
8356,Merge pull request #6455 from hashicorp/f-set-connect-sidcar-tags-web,docs: document service tags for connect sidecar
8357,Merge pull request #6448 from hashicorp/f-set-connect-sidecar-tags,connect: enable setting tags on consul connect sidecar service in job…
8358,docs: document service tags for connect sidecar,
8359,connect: enable setting tags on consul connect sidecar service in jobspec (#6415),
8360,docker label refactoring and additional tests,
8361,add docker labels,
8362,refactor reconciler code and address comments,
8363,Merge pull request #6422 from hashicorp/c-api-websocket-mod,api: declare websocket as a dependency
8364,address code review comments,
8365,docker: explicit grace period for initial container reconcilation,Ensure we wait for some grace period before killing docker containers that may have launched in earlier nomad restore.
8366,docker: periodically reconcile containers,"When running at scale, it's possible that Docker Engine starts containers successfully but gets wedged in a way where API call fails. The Docker Engine may remain unavailable for arbitrary long time. Here, we introduce a periodic reconcilation process that ensures that any container started by nomad is tracked, and killed if is running unexpectedly. Basically, the periodic job inspects any container that isn't tracked in its handlers.  A creation grace period is used to prevent killing newly created containers that aren't registered yet. Also, we aim to avoid killing unrelated containters started by host or through raw_exec drivers.  The logic is to pattern against containers environment variables and mounts to infer if they are an alloc docker container. Lastly, the periodic job can be disabled to avoid any interference if need be."
8367,remove check for relative url validation (#6504),
8368,Getting started learn redirect (#6460),  redirect getting started section to learn   formatting   move redirects.txt to source directory 
8369,Merge pull request #6434 from hashicorp/docs-add-grpc-info,docs: Added grpc info; small style fixes to connect guide
8370,Merge pull request #6453 from ogadaki/patch-1,fix typo in HCL code
8371,Merge pull request #6491 from hashicorp/support-external-redirects,Support external redirects for website
8372,Merge pull request #6426 from hashicorp/b-dep-go-plugin-8091134,"upgrade go-plugin to latest, 8091134"
8373,Merge pull request #6422 from hashicorp/c-api-websocket-mod,api: declare websocket as a dependency
8374,Merge pull request #6427 from hashicorp/b-fs-endpoint-errors,agent: report fs log errors as http errors
8375,tests: avoid using unnecessary pipe,
8376,Merge pull request #6423 from hashicorp/b-direct-node-failure,cli: recover from client ACL lookup failures
8377,Merge pull request #6498 from hashicorp/docs-security,docs: link to security page on website
8378,Fix grammar (#6486),
8379,docs: link to security page on website,Add link to https://www.nomadproject.io/security.html
8380,UI: Update Ember to 3.12 LTS (#6419),This is mostly deprecation fixes and blueprint changes. There are some dependency updates too; the changes to Ember Basic Dropdown necessitated changing it to angle bracket component invocation. The conversion of the rest of the templates will happen separately.
8381,Use max-width to ensure the width rule is observed in Firefox,
8382,Merge pull request #6466 from hashicorp/b-ui-firefox-log-window-off-screen,Use max-width to ensure the width rule is observed in Firefox
8383,Merge pull request #6425 from hashicorp/f-cli-show-full-ids,cli: show full id for single node or alloc status
8384,Merge pull request #6290 from hashicorp/r-generated-code-refactor,dev: avoid codecgen code in downstream projects
8385,upload external and relative redirects to two dictionaries,
8386,e2e: upgrade terraform to 0.12.x (#6489),
8387,e2e: move remote-exec inline to script (#6488),"A failing script in a module provisioner's module stanza won't fail the provisioning step. This lets us continue on to execute tests against potentially broken deployments, rather than letting us know the provisioning itself failed."
8388,Merge pull request #6331 from hashicorp/dani/f-volume-mount-propagation,volumes: Add support for mount propagation
8389,volumes: Add support for mount propagation,"This commit introduces support for configuring mount propagation when mounting volumes with the module stanza on Linux targets. Similar to Kubernetes, we expose 3 options for configuring mount propagation:   private, which is equivalent to module on Linux, which does not allow the            container to see any new nested mounts after the chroot was created.   host-to-task, which is equivalent to module on Linux, which allows new mounts                 that have been created outside of the container to be visible                 inside the container after the chroot is created.   bidirectional, which is equivalent to module on Linux, which allows both                  the container to see new mounts created on the host, but                  importantly allows the container to create mounts that are                  visible in other containers an don the host   private and host-to-task are safe, but bidirectional mounts can be dangerous, as if the code inside a container creates a mount, and does not clean it up before tearing down the container, it can cause bad things to happen inside the kernel. To add a layer of safety here, we require that the user has ReadWrite permissions on the volume before allowing bidirectional mounts, as a defense in depth / validation case, although creating mounts should also require a priviliged execution environment inside the container."
8390,repoint deploy script to new redirects file location,
8391,generate a _redirects for netlify previews,
8392,move redirects.txt into source/ for netlify previews,
8393,Merge pull request #6396 from hashicorp/d-updated-ui-guides,Docs: Updated UI guides
8394,Merge pull request #6473 from hashicorp/docs-fix-acl-prefix-param,docs: fix ACL module param documentation
8395,docs: fix ACL module param documentation,
8396,Merge pull request #6472 from hashicorp/b-docs-config,docs: Update stateful workloads guide to reflect rc-1 config changes
8397,Merge pull request #6071 from hashicorp/dani/hclfmt,make: Add task for formatting hcl/nomad files
8398,chore: initial hclfmt,
8399,make: Add make task for formatting HCL,
8400,docs: Update stateful workloads guide to reflect rc-1 config changes,
8401,Merge pull request #6429 from hashicorp/f-log-to-file,Add support for logging to a file
8402,Merge pull request #6469 from hashicorp/docs-0100-rc1,docs: 0.10.0-beta1 -> 0.10.0-rc1
8403,Remove 0.10.0-rc1 generated files,
8404,docs: 0.10.0-beta1 -> 0.10.0-rc1,
8405,Merge pull request #6465 from hashicorp/docs-nobeta,docs: remove beta flag from connect
8406,Release v0.10.0-rc1,
8407,Merge pull request #6467 from hashicorp/test-disable-test-rkt,"circleci: disable test-rkt, which is deprecated and often fails"
8408,Generate files for 0.10.0-rc1 release,
8409,release: tag on HEAD not master,
8410,Merge pull request #6468 from hashicorp/release-fix-dist,release: tag on HEAD not master
8411,release: tag on HEAD not master,
8412,Merge pull request #6464 from hashicorp/docs-noraft,docs: drop raft from 0.10.0 upgrade guide
8413,"circleci: disable test-rkt, which is deprecated and often fails",
8414,Use max-width to ensure the width rule is observed in Firefox,
8415,docs: remove beta flag from connect,
8416,docs: drop raft from 0.10.0 upgrade guide,Unforutunately we are not changing the default for 0.10.0 and the 0.8 upgrade docs are more detailed when it comes to manually updating your version.
8417,logging: Correctly track number of written bytes,"Currently this assumes that a short write will never happen. While these are improbable in a case where rotation being off a few bytes would matter, this now correctly tracks the number of written bytes."
8418,logging: Sort files when pruning old logs,"Currently this logging implementation is dependent on the order of files as returned by filepath.Glob, which although internal methods are documented to be lexographical, does not publicly document this. Here we defensively resort."
8419,Update consul.html.md (#6456),"""you may have have"" to ""you may have""."
8420,update Nomad and Consul versions along with Ubuntu vagrant box version (#6451),
8421,fix typo in HCL code,Code contains module instead of module (plural).
8422,Merge pull request #6444 from hashicorp/docs-add-prefix-param-to-acl-endpoints,docs: improve documentation for module param on API endpoints
8423,docs: clarify module API param requirements,
8424,clarify version for new gc config in server stanza,
8425,Merge pull request #6439 from hashicorp/f-docs-clarify-job-gc-interval,clarify version for new gc config in server stanza
8426,Merge pull request #6428 from Norbinsh/master,Docs: remove small duplication
8427,Merge pull request #6447 from hashicorp/contributing-doc-tweaks,contributing: fix typo & append RPC checklist
8428,contributing: fix typo & append RPC checklist,
8429,Merge pull request #6443 from hashicorp/docs-jobspec-checklist,docs: add sidebar to jobspec checklist
8430,UI: Update to Ember 3.8 LTS (#5968),
8431,Merge pull request #6446 from hashicorp/revert-6445-revert-6395-b-missing-vault-sercret,"Revert ""Revert ""Use joint context to cancel prestart hooks"""""
8432,"Revert ""Revert ""Use joint context to cancel prestart hooks""""",
8433,Merge pull request #6445 from hashicorp/revert-6395-b-missing-vault-sercret,"Revert ""Use joint context to cancel prestart hooks"""
8434,"Revert ""Use joint context to cancel prestart hooks""",
8435,docs: add missing module param to the ACL API endpoints,
8436,docs: add sidebar to jobspec checklist,
8437,Merge pull request #6442 from hashicorp/b-alloc-namespace-check,acl: check ACL against object namespace
8438,acl: check ACL against object namespace,"Fix a bug where a millicious user can access or manipulate an alloc in a namespace they don't have access to.  The allocation endpoints perform ACL checks against the request namespace, not the allocation namespace, and performs the allocation lookup independently from namespaces. Here, we check that the requested can access the alloc namespace regardless of the declared request namespace. Ideally, we'd enforce that the declared request namespace matches the actual allocation namespace.  Unfortunately, we haven't documented alloc endpoints as namespaced functions; we suspect starting to enforce this will be very disruptive and inappropriate for a nomad point release.  As such, we maintain current behavior that doesn't require passing the proper namespace in request.  A future major release may start enforcing checking declared namespace."
8439,Merge pull request #6440 from hashicorp/docs-release-096,Update website and changelog with 0.9.6
8440,Merge pull request #6441 from hashicorp/b-agent-token,Redact replication tokens in /agent/self
8441,update CHANGELOG with 0.9.6 changes,
8442,website: Publish release 0.9.6,
8443,clarify version for new gc config in server stanza,
8444,Merge pull request #6435 from hashicorp/doc-host-volume-update,Docs: Updated Host Volumes guide
8445,Updated Host Volumes guide,Added read_only to highlight them Style updates
8446,Upgrade Nomad terraform directory for TF 0.12+ (#6424),  update   fix error   convert server ips in list of string and loop through for output   drop the for loop in outputs and keep the join command   switched to TF 0.12 splat expression 
8447,Added grpc info; small style fixes,
8448,agent: Refactor log setup to support log-to-file,
8449,agent: Introduce File Logger,"This commit introduces a rotating file logger for Nomad Agent Logs. The logger implementation itself is a lift and shift from Consul, with tests updated to fit with the Nomad pattern of using require, and not having a testutil for creating tempdirs cleanly."
8450,config: Add required configuration for logging to a file,
8451,Docs: remove small duplication,
8452,cli: show full id for single node or alloc status,"Show full ID on individual alloc or node status views.  Shortening the ID isn't very helpful in these cases, and makes looking up the full id slightly more complicated when user needs to interact with API. List views are unmodified and show short id unless module flag is passed. Before ``` $ nomad node status -self | head -n2 ID            = 21fc51f9 Name          = mars-2.local $ nomad alloc status 15ae54cd | head -n3 ID                  = 15ae54cd-08dd-3681-03cf-4c23ace7e7c3 Eval ID             = a6b15f86 Name                = example.cache[0] ``` After: ``` $ nomad node status -self | head -n2 ID            = 21fc51f9-fd39-0fa0-fb41-f34c7aa36101 Name          = mars-2.local $ nomad alloc status 15ae54cd | head -n3 ID                  = 15ae54cd-08dd-3681-03cf-4c23ace7e7c3 Eval ID             = a6b15f86-ca8e-e536-b544-4bfb43137ff3 Name                = example.cache[0] ```"
8453,agent: report fs log errors as http errors,"This fixes two bugs: First, FS Logs API endpoint only propagated error back to user if it was encoded with code, which isn't common.  Other errors get suppressed and callers get an empty response with 200 error code.  Now, these endpoints return  a 500 status code along with the error message. Before ``` $ curl -v ""http://127.0.0.1:4646/v1/client/fs/logs/qwerqwera?follow=false&offset=0&origin=start&region=global&task=redis&type=stdout""; echo *   Trying 127.0.0.1... * TCP_NODELAY set * Connected to 127.0.0.1 (127.0.0.1) port 4646 (#0)  GET /v1/client/fs/logs/qwerqwera?follow=false&offset=0&origin=start&region=global&task=redis&type=stdout HTTP/1.1 Host: 127.0.0.1:4646 User-Agent: curl/7.54.0 Accept: / < HTTP/1.1 200 OK < Vary: Accept-Encoding < Vary: Origin < Date: Fri, 04 Oct 2019 19:47:21 GMT < Content-Length: 0 < * Connection #0 to host 127.0.0.1 left intact ```  After ``` $ curl -v ""http://127.0.0.1:4646/v1/client/fs/logs/qwerqwera?follow=false&offset=0&origin=start&region=global&task=redis&type=stdout""; echo *   Trying 127.0.0.1... * TCP_NODELAY set * Connected to 127.0.0.1 (127.0.0.1) port 4646 (#0)  GET /v1/client/fs/logs/qwerqwera?follow=false&offset=0&origin=start&region=global&task=redis&type=stdout HTTP/1.1 Host: 127.0.0.1:4646 User-Agent: curl/7.54.0 Accept: / < HTTP/1.1 500 Internal Server Error < Vary: Accept-Encoding < Vary: Origin < Date: Fri, 04 Oct 2019 19:48:12 GMT < Content-Length: 60 < Content-Type: text/plain; charset=utf-8 < * Connection #0 to host 127.0.0.1 left intact alloc lookup failed: index error: UUID must be 36 characters ```  Second, we return 400 status code for request validation errors. Before ``` $ curl -v ""http://127.0.0.1:4646/v1/client/fs/logs/qwerqwera""; echo *   Trying 127.0.0.1... * TCP_NODELAY set * Connected to 127.0.0.1 (127.0.0.1) port 4646 (#0)  GET /v1/client/fs/logs/qwerqwera HTTP/1.1 Host: 127.0.0.1:4646 User-Agent: curl/7.54.0 Accept: / < HTTP/1.1 500 Internal Server Error < Vary: Accept-Encoding < Vary: Origin < Date: Fri, 04 Oct 2019 19:47:29 GMT < Content-Length: 22 < Content-Type: text/plain; charset=utf-8 < * Connection #0 to host 127.0.0.1 left intact must provide task name ```  After ``` $ curl -v ""http://127.0.0.1:4646/v1/client/fs/logs/qwerqwera""; echo *   Trying 127.0.0.1... * TCP_NODELAY set * Connected to 127.0.0.1 (127.0.0.1) port 4646 (#0)  GET /v1/client/fs/logs/qwerqwera HTTP/1.1 Host: 127.0.0.1:4646 User-Agent: curl/7.54.0 Accept: / < HTTP/1.1 400 Bad Request < Vary: Accept-Encoding < Vary: Origin < Date: Fri, 04 Oct 2019 19:49:18 GMT < Content-Length: 22 < Content-Type: text/plain; charset=utf-8 < * Connection #0 to host 127.0.0.1 left intact must provide task name ```"
8454,"upgrade go-plugin to latest, 8091134",Upgrade go-plugin to latest to pick up Windows fix in https://github.com/hashicorp/go-plugin/pull/125 .
8455,api: declare websocket as a dependency,module was declared in module but not in the API go module manifest.
8456,cli: recover from client ACL lookup failures,"This fixes a bug in the CLI handling of node lookup failures when querying allocation and FS endpoints. Allocation and FS endpoint are handled by the client; one can query the relevant client directly, or query a server to have it forwarded transparently to relevant client.  Querying the client directly is benefecial to avoid loading servers with IO. As an optimization, the CLI attempts to query the client directly, but then falls back to using server forwarding path if it encounters network or connection errors (e.g. clients are locked down or in a separate inaccessible network). Here, we fix a bug where if the CLI fails to find to lookup the client details because it lacks ACL capability or other unexpected reasons, the CLI will not go through fallback path."
8457,UI: Change Mirage data to be stable in development (#6389),"This sets a default-but-query-configurable Faker seed in development, via faker-seed. It also changes uses of Math.random to use Faker’s randomness so auto-generated data remains stable in development."
8458,docs: Add missing double-quote (#6418),The missing quote broke syntax highlighting.
8459,Copy changes from review,
8460,specify token given to consul template as periodic and orphan (#6148),
8461,executor: run exec commands in netns if set (#6405),executor: run exec commands in netns if set
8462,Merge pull request #6395 from hashicorp/b-missing-vault-sercret,Use joint context to cancel prestart hooks
8463,executor: rename wrapNetns to withNetworkIsolation,
8464,simplify logic to check for vault read event,defer shutdown to cleanup after failed run Co-Authored-By: Michael Schurter link update comment to include ctx note for shutdown
8465,Use joint context to cancel prestart hooks,"fixes https://github.com/hashicorp/nomad/issues/6382 The prestart hook for templates blocks while it resolves vault secrets. If the secret is not found it continues to retry. If a task is shutdown during this time, the prestart hook currently does not receive shutdownCtxCancel, causing it to hang. This PR joins the two contexts so either killCtx or shutdownCtx cancel and stop the task."
8466,Merge pull request #6404 from hashicorp/docs-nomad-index,clarify index starting value for blocking queries
8467,comment wrapNetns,
8468,executor: removed unused field from exec_utils.go,
8469,executor: run exec commands in netns if set,
8470,Merge pull request #6397 from shantanugadgil/patch-1,clarify rhel/centos and beta1
8471,clarify index starting value for blocking queries,
8472,UI: Change factories to be more dynamic (#6387),I noticed while working on #6166 that some of the factory properties that used Faker’s randomisation features are using their output rather than a function that would call the randomiser. This means that the randomisation happens once and the value is used for every model generated by the factory. This wraps the randomiser calls in functions so different models can have different values.
8473,clarify rhel/centos and beta1,"Specify RHEL7, RHEL8, CentOS7, CentOS8 Specify beta1 for 0.10 (beta2 coming soon? :wink: )"
8474,Add missing comma to fix the code-in-heading selectors,
8475,Screenshots for the securing ui guide,
8476,Screenshots for the inspecting the cluster guide,
8477,Screenshots for the operating a job guide,
8478,Screenshots for the job submit guide,
8479,Image for the access the page,
8480,Swap out UI guide images,
8481,Change resolution to neatly frame the UI,
8482,Copy for the securing guide,
8483,Content for the inspecting the cluster page,
8484,Content for the operating a job guide,
8485,Edits and links for the submitting a job guide,
8486,Content for the submitting a job guide,
8487,Format line length,
8488,New UI guides structure,
8489,Merge pull request #6391 from hashicorp/b-ns-job-register-check,nomad: defensive check for namespaces in job registration call
8490,Merge pull request #6393 from hashicorp/r-ugorji-go-import-path,Fix hashicorp/go-msgpack import for golang 1.13
8491,Fix hashicorp/go-msgpack import,"Golang 1.13 is pickier with importpaths and aliasing and fails compilation currently. Here, for go-msgpack dependency, we use upstream ugorji/go with a single change https://github.com/ugorji/go/commit/23165f7bc3c2dda1891434ebb9da1511a7bafc1c . For consistency and to ease noticing descripency, I made ugorji/go and hashicorp/go-msgpack reference the same sha. This is a dependency management update and has no functional change to product."
8492,driver/java: pass task network isolation to executor,"Without passing the network isolation configuration to the executor, java tasks are not placed in the same network namespace as the other processes in their task group, which breaks Consul Connect."
8493,"use RequestNamespace(), the canonical way to get namespace",
8494,nomad: defensive check for namespaces in job registration call,"In a job registration request, ensure that the request namespace ""header"" and job namespace field match.  This should be the case already in prod, as http handlers ensures that the values match [1]. This mitigates bugs that exploit bugs where we may check a value but act on another, resulting into bypassing ACL system. [1] https://github.com/hashicorp/nomad/blob/v0.9.5/command/agent/job_endpoint.go#L415-L418"
8495,remove redundant changelog entries,
8496,CHANGELOG remove raft proto 3 update announcement,
8497,doc: clarify driver support for netns/connect (#6357),
8498,UI: Update Mirage to 1.1.2 (#6166),
8499,Merge pull request #6373 from hashicorp/b-raft-proto-upgrade,raft protocol defaults to version 2
8500,docs: autopilot guide additional raft proto upgrade documentation,
8501,UI: Restore proxy tag tests (#6360),"The recurring problem here was that sometimes the factories would generate more than one task, and it was random whether the task with the proxy task would be the first in the list. This ensures that the proxy task is always first so the tests can run again."
8502,Merge pull request #6386 from hashicorp/c-golang-1.12.10,Use golang 1.12.10
8503,Use golang to 1.12.10,To get fix for https://github.com/golang/go/issues/34540 .
8504,doc: clarify command path requirements for exec,
8505,connect: remove proxy socket for restarted client,
8506,client: don't run alloc postrun during shutdown,
8507,driver/networking: don't recreate existing network namespaces,
8508,failing test for #6310,
8509,driver: set correct network isolation caps for exec and java dr… (#6368),
8510,Update CHANGELOG.md,
8511,update changelog,
8512,timeout after 5 seconds when client opens a data directory (#6348),
8513,default raft protocol v2,
8514,nomad/server comments,
8515,script e2e/upgrades: cluster upgrade scripts,
8516,command: add -tls-server-name flag,
8517,utils: add missing error info in case of cmd failure (#6355),
8518,Added documentation for nomad pot driver. (#6369),Added new external driver for Pot to nomad documentation
8519,client/connect: ConsulProxy LocalServicePort/Address (#6358),"Without a module, Connect services will try to use the mapped port even when delivering traffic locally. A user can override this behavior by pinning the port value in the module stanza but this prevents us from using the Consul service name to reach the service. This commits configures the Consul proxy with its module and module fields."
8520,api: Redact tokens in /agent/self,
8521,Fix broken links in README Guide section,"Fix two broken links in the Documentation & Guides section, namely Advanced Job Scheduling on Nomad with Affinities and Increasing Nomad Fault Tolerance with Spread"
8522,api: Redact ACL Replication Token,"Currently when hitting the /v1/agent/self API with ACL Replication enabled results in the token being returned in the API. This commit redacts that information, as it should be treated as a shared secret."
8523,UI: Remove proxy tag tests again (#6359),I thought #6343 would fix the flapping but it didn’t 😞
8524,Merge pull request #6356 from hashicorp/b-cli-job-deployments-all,fixed incorrect CLI module in module
8525,fixed incorrect CLI documentation in module,listed module instead of module
8526,UI: Fix Connect proxy tag (#6343),"This fixes a race condition in the pseudo-relationship between a TaskState and a Task that was causing the Consul Connect proxy tag to sometimes show on the wrong task. There’s no direct Ember Data-style relationship between a TaskState and its Task; instead, it’s determined by searching for a Task with the matching name. The related Task was sometimes stored before everything was ready and not recalculated when the name became known. This ensures the relationship is accurate if the TaskState’s name property changes."
8527,command: Improve metrics fail logging,
8528,client_stats: Always emit client stats,
8529,client: Return empty values when host stats fail,"Currently, there is an issue when running on Windows whereby under some circumstances the Windows stats API's will begin to return errors (such as internal timeouts) when a client is under high load, and potentially other forms of resource contention / system states (and other unknown cases). When an error occurs during this collection, we then short circuit further metrics emission from the client until the next interval. This can be problematic if it happens for a sustained number of intervals, as our metrics aggregator will begin to age out older metrics, and we will eventually stop emitting various types of metrics including module metrics. However, when metrics collection fails on Linux, gopsutil will in many cases (e.g cpu.Times) silently return 0 values, rather than an error. Here, we switch to returning empty metrics in these failures, and logging the error at the source. This brings the behaviour into line with Linux/Unix platforms, and although making aggregation a little sadder on intermittent failures, will result in more desireable overall behaviour of keeping metrics available for further investigation if things look unusual."
8530,Merge pull request #6346 from hashicorp/b-docker-resilient-start,docker: remove containers on creation failures
8531,Merge pull request #6347 from jpellman/patch-1,"Corrected minor typo (""Eslevier"" --> ""Elsevier"")"
8532,Merge pull request #6342 from hashicorp/f-host-volume-e2e,Add Host Volumes E2E test
8533,"Corrected minor typo (""Eslevier"" --> ""Elsevier"")",
8534,e2e: test infra for client node restarts (#6313),Add a test helper that restarts a specific client node running under systemd using a module job.
8535,fix comment typo,
8536,docker: remove containers on creation failures,"The docker creation API calls may fail with http errors (e.g. timeout) even if container was successfully created. Here, we force remove container if we got unexpected failure.  We already do this in some error handlers, and this commit updates all paths. I stopped short from a more aggressive refactoring, as the code is ripe for refactoring and would rather do that in another PR."
8537,Merge pull request #6326 from hashicorp/b-docker-start-failure-handling,Fix bugs around docker start retries
8538,e2e: move consul status check helpers to e2eutil (#6314),
8539,add exponential backoff for docker api calls,
8540,"reduce memory required for logmon, docker_logger and executor p… (#6341)","  reduce memory required for logmon, docker_logger and executor processes   comment early importing "
8541,Merge pull request #6328 from hashicorp/b-gh-6269,cli: emit job version number proper
8542,e2e: init host volumes test,
8543,Merge pull request #6345 from Veraghin/patch-1,Update GNUmakefile
8544,Update GNUmakefile,Cert auth generation echo fixed
8545,e2e: Add Host Volume Configuration,
8546,Merge pull request #6330 from hashicorp/f-host-vols-fail-startup,client: Fail startup if host volumes do not exist
8547,Merge pull request #6338 from hashicorp/d-ui-readme-20190917,Tweaks for UI README
8548,add some ui development tips,
8549,Merge pull request #6327 from hashicorp/b-ui-alloc-no-services,ui: protect against no services
8550,Merge pull request #6274 from hashicorp/f-ui/restore-headless-testing,UI: Restore local headless testing
8551,ui: protect against nil services,"Protect against case where an alloc has no services and avoid dereferencing null. Here, we ensure that the model and test serializers mimic the API by having nil TaskGroup.Services instead of an empty array."
8552,remove resolved TODO from UpdateTTL docstring (#6336),
8553,Merge pull request #6321 from hashicorp/dani/remove-config,Hoist Volume.Config.Source into Volume.Source
8554,docs: Mark module module as required,Co-Authored-By: Michael Schurter link
8555,Merge pull request #6234 from hashicorp/docs-template-split-cert-parts,Added vault PKI example with separate cert files
8556,cli: emit job version number proper,We must emit alloc job number rather than its the field address.
8557,client: Fail startup if host volumes do not exist,"Some drivers will automatically create directories when trying to mount a path into a container, but some will not. To unify this behaviour, this commit requires that host volumes already exist, and can be stat'd by the Nomad Agent during client startup."
8558,retry transient docker errors within function,
8559,docker: defensive against failed starts,"This handles a bug where we may start a container successfully, yet we fail due to retries and startContainer not being idempotent call. Here, we ensure that when starting a container fails with 500 error, the retry succeeds if container was started successfully."
8560,close file handle when FileRotator object will closed. Fixes https://github.com/hashicorp/nomad/issues/6309 (#6323),
8561,client/networking: wrap error message from CNI plugin (#6316),
8562,docs: Remove config from volumes,
8563,config: Hoist volume.config.source into volume,"Currently, using a Volume in a job uses the following configuration: ``` volume ""alias-name"" {   type = ""volume-type""   read_only = true config {     source = ""host_volume_name""   } } ``` This commit migrates to the following: module The original design was based due to being uncertain about the future of storage plugins, and to allow maxium flexibility. However, this causes a few issues, namely: - We frequently need to parse this configuration during submission, scheduling, and mounting - It complicates the configuration from and end users perspective - It complicates the ability to do validation As we understand the problem space of CSI a little more, it has become clear that we won't need the module to be in config, as it will be used in the majority of cases:  Host Volumes: Always need a source Preallocated CSI Volumes: Always needs a source from a volume or claim name Dynamic Persistent CSI Volumes*: Always needs a source to attach the volumes                                    to for managing upgrades and to avoid dangling. Dynamic Ephemeral CSI Volumes: Less thought out, but module will probably point                                   to the plugin name, and a module block will                                   allow you to pass meta to the plugin. Or will                                   point to a pre-configured ephemeral config. If implemented  The new design simplifies this by merging the source into the volume stanza to solve the above issues with usability, performance, and error handling."
8564,Merge pull request #6318 from hashicorp/hicks/fix-upstreams-link,Fix upstreams docs link
8565,Fix upstreams docs link,
8566,Merge pull request #6317 from hashicorp/docs-fix-volume-docs,Fix module attribute in the docs and formatting
8567,docs: fix formatting for module and module doc pages,
8568,docs: replace module with module attribute in module docs,
8569,dev: expose Consul port 8500 in linux-ui Vagrantfile (#6292),
8570,doc: ulimit recommendations for local development (#6311),"The default ulimit for open files on macOS is really small (256), which leads to ""too many open files"" errors during plugin launches if you're running unit tests in module. Recommend setting module."
8571,Merge pull request #6294 from hashicorp/c-vagrant-tweaks-20190906,manage dev deps in vagrant
8572,Merge pull request #6080 from lchayoun/bug-6079,Allow dash in environment variable names
8573,Merge pull request #6260 from hashicorp/c-circleci-tweak-20190903,ci: ignore nested pkgs in GOTEST_PKGS_EXCLUDE
8574,Typo fix,
8575,e2e: fixes for race conditions in testing (#6300)," In script checks, ensure we're running module against the new running   allocation and not the earlier stopped one. In script checks, allow module calls to error due to lack of pty when   we use the exec to kill the task. In module, force query for allocations to wait on   wait index returned by registration call."
8576,test: expand symlink for temp dir for macOS compatibility (#6303),"On macOS, module returns a symlinked path under module which is outside of the directories shared into the VM used for Docker, and that fails tests using Docker that need that mount. If we expand the symlink to get the real path in module, we're in the shared folders and can safely mount them."
8577,Update version,
8578,upgrade notes for 0.9.5,
8579,Merge pull request #6304 from hashicorp/d-ns-quota-api,website: document Quota field in ns payloads
8580,website: document Quota field in ns payloads,
8581,website: fix typo,
8582,Merge pull request #6302 from hashicorp/b-fix-nomad-ns-help,fix 'nomad namespace apply' help message
8583,Convert resources page to Markdown (#6301),The auto-generation of TOC wasn’t working because the “auto-linking header tags” described here doesn’t work if the file isn’t Markdown: https://github.com/hashicorp/middleman-hashicorp#auto-linking-header-tags
8584,fix 'nomad namespace apply' help,Named arguments need to preceed positional arguments.
8585,docs: mark consul connect integration as beta,
8586,Merge pull request #6299 from hashicorp/d-0.10.0-beta1-link,website: Link to 0.10.0-beta1 release
8587,website: Link to 0.10.0-beta1 release,
8588,Merge pull request #6297 from hashicorp/f-group-services-docs,Start of docs for group level service and network stanza.
8589,Merge pull request #6295 from hashicorp/docs-service-tweaks,docs: mention task field for checks
8590,Merge pull request #6298 from hashicorp/docs-add-exec-caps,Docs: Added alloc_exec and alloc_node_exec capabilities
8591,Remove website job for UI branches (#6273),
8592,Added alloc_exec and alloc_node_exec capabilities,These were added in https://github.com/hashicorp/nomad/commit/4f7bd68f5ca9f330a894bfb4375b87f786e1e7a3
8593,Fix formatting,
8594,Start of docs for group level service and network stanza.,
8595,docs: mention task field for checks,Tweak wording in changelog to match other entries.
8596,Merge pull request #6287 from hashicorp/docs-connect-updates,docs: add more detail to connect stanzas
8597,vagrant: install chrome in dev only,
8598,docs: add more detail to connect stanzas,
8599,e2e: tag instances with origin (#6293),"When multiple developers are working on e2e testing, it helps to be able to identify which infrastructure belongs to which Nomad SHA and which developer. This adds tags to the EC2 instances."
8600,remove generated code,
8601,Release v0.10.0-beta1,
8602,vagrant: Install dev tools in dev script only,
8603,Generate files for 0.10.0-beta1 release,
8604,vagrant: Export services without port mapping,"By having an ip address by default, developers can access any service on the Vagrant linux box without needing to setup port maps."
8605,Merge pull request #6252 from hashicorp/f-e2e-script-checks,e2e: script check testing
8606,script checks: Update needs to update Alloc as well (#6291),
8607,script checks: use cat instead of ls for exit code agreement,
8608,e2e: script check testing,
8609,fix typo,Co-Authored-By: Danielle link
8610,dev: avoid codecgen code in downstream projects,"This is an attempt to ease dependency management for external driver plugins, by avoiding requiring them to compile ugorji/go generated files.  Plugin developers reported some pain with the brittleness of ugorji/go dependency in particular, specially when using go mod, the default go mod manager in golang 1.13. Context Nomad uses msgpack to persist and serialize internal structs, using ugorji/go library.  As an optimization, we use ugorji/go code generation to speedup process and aovid the relection-based slow path. We commit these generated files in repository when we cut and tag the release to ease reproducability and debugging old releases.  Thus, downstream projects that depend on release tag, indirectly depends on ugorji/go generated code. Sadly, the generated code is brittle and specific to the version of ugorji/go being used.  When go mod picks another version of ugorji/go then nomad (go mod by default uses release according to semver), downstream projects face compilation errors. Interestingly, downstream projects don't commonly serialize nomad internal structs.  Drivers and device plugins use grpc instead of msgpack for the most part.  In the few cases where they use msgpag (e.g. decoding task config), they do without codegen path as they run on driver specific structs not the nomad internal structs.  Also, the ugorji/go serialization through reflection is generally backward compatible (mod some ugorji/go regression bugs that get introduced every now and then :( ). Proposal The proposal here is to keep committing ugorji/go codec generated files for releases but to use a go tag for them. All nomad development through the makefile, including releasing, CI and dev flow, has the tag enabled. Downstream plugin projects, by default, will skip these files and life proceed as normal for them. The downside is that nomad developers who use generated code but avoid using make must start passing additional go tag argument.  Though this is not a blessed configuration."
8611,Merge pull request #6288 from hashicorp/volume-acl-docs,docs: Add host volume acl docs
8612,Apply suggestions from code review,acl_docs: Stylistic improvements Co-Authored-By: Tim Gross link
8613,Merge pull request #6289 from hashicorp/docs-fix-host-volume-path,Fix host volume path
8614,fix host volume path,
8615,docs: Add host volume acl docs,
8616,Merge pull request #6286 from hashicorp/b-inplaceupdate-bugfix,Fix inplace updates bug with group level networks
8617,update comment,
8618,Fix inplace updates bug with group level networks,"During inplace updates, we should be using network information from the previous allocation being updated."
8619,upgrade guide for 0.10.0 (#6266),
8620,Fix documentation typo (#6285),
8621,UI: Remove Connect proxy tag tests again (#6284),"This semi-reverts #6275, as the tests are intermittently failing in CI."
8622,Merge pull request #6279 from hashicorp/f-connect-docs,Initial placeholder connect docs
8623,Merge pull request #6282 from hashicorp/f-connect-dev-path,connect: check if consul is on PATH
8624,add CNI plugins to Vagrant install (#6280),
8625,UI: Restore Connect proxy tag tests (#6275),These are the tests skipped in #6271.
8626,connect: check if consul is on PATH,Only in -dev-connect mode for now since its valid to install Consul after Nomad has started in production.
8627,Update CHANGELOG.md,
8628,update namespace envvar entry in changelog,
8629,fix changelog message,
8630,Add docs for new kind field,
8631,add validation for job_gc_interval (#6277),
8632,add CNI plugins to Vagrant install,
8633,UI: Move kind property to task (#6271),"I put this property in the wrong place.  I’ve found how to fix the mock API in the tests but they’re failing to pass with headless Chrome only, so they’re skipped for now."
8634,Initial placeholder connect docs,
8635,Merge pull request #6278 from hashicorp/docs-changelog-label,changelog: command/run -> cli prefix
8636,changelog: command/run -> cli prefix,
8637,update changelog for 0.10 (#6270),update changelog for 0.10
8638,docs: Add Persistent Workload using Host Volumes guide  (#6263),"  Added Persistent Workload guide using Host Volumes   Update website/source/guides/stateful-workloads/stateful-workloads.html.md   Co-Authored-By: Danielle link   fix client config and job spec formatting   fix typo in description   fix navigation for both stateful workloads guides   show output from nomad node status to verify host volumes   Add value prop info; info about HA   From feedback, added more information about the value proposition for host volumes (h/t @rkettelerij), and corrected an orphaned bit from the original guide this one was created from."
8639,Consul connect guide update (#6268),  formatting paragraphs   remove reference to consul 1.6-beta and update nomad agent command   remove tech preview status and update limitations   remove beta tag in navigation   add screenshot of count dashboard   update example summary and remove redis references   capitalize Consul   minor corrections   hcl formatting  demo is on localhost not host ip  clarify consul on PATH   mention variable interpolation limitation 
8640,Restore local headless testing,I’ve been unable to use ember test without --server for a while. This brings in the fix from ember-cli/ember-cli#8774
8641,fix typo,
8642,Merge pull request #6211 from hashicorp/f-host-volume-docs,docs: Initial documentation for volume(_mount)
8643,change localhost to host ip,
8644,mention variable interpolation limitation,
8645,minor corrections, hcl formatting demo is on localhost not host ip clarify consul on PATH
8646,client: recreate script checks on Update (#6265),"Splitting the immutable and mutable components of the scriptCheck led to a bug where the environment interpolation wasn't being incorporated into the check's ID, which caused the UpdateTTL to update for a check ID that Consul didn't have (because our Consul client creates the ID from the structs.ServiceCheck each time we update). Task group services don't have access to a task environment at creation, so their checks get registered before the check can be interpolated. Use the original check ID so they can be updated."
8647,update changelog,
8648,capitalize Consul,
8649,update example summary and remove redis references,
8650,Add handling for not-running task filesystem query (#6267),
8651,update changelog,
8652,add screenshot of count dashboard,
8653,remove beta tag in navigation,
8654,remove tech preview status and update limitations,
8655,Add allocation filesystem UI to changelog,
8656,Merge pull request #6254 from hashicorp/test-connect-e2e-demo,e2e: test demo job for connect
8657,remove reference to consul 1.6-beta and update nomad agent command,
8658,formatting paragraphs,
8659,ar: refactor network bridge config to use go-cni lib (#6255),  ar: refactor network bridge config to use go-cni lib   ar: use eth as the iface prefix for bridged network namespaces   vendor: update containerd/go-cni package   ar: update network hook to use TODO contexts when calling configurator   unnecessary conversion 
8660,client: reword error message,
8661,e2e: test demo job for connect,
8662,Merge pull request #6251 from hashicorp/b-port-map-regression,NOMAD_PORT_ regression
8663,volume docs: cleanup,
8664,Merge pull request #6239 from hashicorp/b-32bitmem,Fix memory fingerprinting on 32bit
8665,fingerprint: Add backwards compatibility comment,Co-Authored-By: Michael Schurter link
8666,fix qemu and update docker with tests,
8667,fix portmap envvars in docker driver,
8668,fingerprint: Restore support for legacy memory fingerprint,
8669,UI: add Consul Connect features (#6108),
8670,Merge pull request #6250 from hashicorp/f-raft-protocol-v3,Update default raft protocol to version 3
8671,tests: give up on TestAutopilot_CleanupStaleRaftServer for now,
8672,structs: canonicalize tg Services and Networks (#6257),
8673,tests: attempt to fix TestAutopilot_CleanupStaleRaftServer,Also add a utility function for waiting for stable leadership
8674,tests: update time sensitive tests,Fix tests whose messages seem timing dependent.
8675,tests: disable server auto join by default,"Tests typically call join cluster directly rather than rely on consul discovery.  Worse, consul discovery seems to cause additional leadership transitions when a server is shutdown in tests than tests expect."
8676,address review feedback,
8677,use current nomad version in testing,
8678,Merge pull request #6253 from hashicorp/docs-task-driver-security,docs: task driver resource isolation & security
8679,keep module together,
8680,docs: task driver resource isolation & security,
8681,support script checks for task group services (#6197),"In Nomad prior to Consul Connect, all Consul checks work the same except for Script checks. Because the Task being checked is running in its own container namespaces, the check is executed by Nomad in the Task's context. If the Script check passes, Nomad uses the TTL check feature of Consul to update the check status. This means in order to run a Script check, we need to know what Task to execute it in. To support Consul Connect, we need Group Services, and these need to be registered in Consul along with their checks. We could push the Service down into the Task, but this doesn't work if someone wants to associate a service with a task's ports, but do script checks in another task in the allocation. Because Nomad is handling the Script check and not Consul anyways, this moves the script check handling into the task runner so that the task runner can own the script check's configuration and lifecycle. This will allow us to pass the group service check configuration down into a task without associating the service itself with the task. When tasks are checked for script checks, we walk back through their task group to see if there are script checks associated with the task. If so, we'll spin off script check tasklets for them. The group-level service and any restart behaviors it needs are entirely encapsulated within the group service hook."
8682,Fix raft tests,Wait until leadership stabalizes and all non-voters get promoted before killing leader
8683,Merge pull request #6000 from Iqoqo/docker-convert-host-paths-to-host-native,driver/docker: convert host bind path to os native
8684,"Add node ""status"" and ""scheduling eligibility"" tags to client metrics (#6130)","When summing up the capability of your Nomad fleet for scaling purposes, it's important to exclude draining nodes, as they won't accept new jobs."
8685,connect: add unix socket to proxy grpc for envoy (#6232), connect: add unix socket to proxy grpc for envoy  Fixes #6124 Implement a L4 proxy from a unix socket inside a network namespace to Consul's gRPC endpoint on the host. This allows Envoy to connect to Consul's xDS configuration API.   connect: pointer receiver on structs with mutexes   connect: warn on all proxy errors 
8686,ignore nested pkgs in GOTEST_PKGS_EXCLUDE,"This fixes a bug where some packages tests run twice in CI, because they are subpackages of ones with dedicated jobs.  For example, notice module tests ran in module[1] and module[2] despite them being in the same workflow[3]. [1] https://circleci.com/gh/hashicorp/nomad/5262 [2] https://circleci.com/gh/hashicorp/nomad/5261 [3] https://circleci.com/workflow-run/ee7a9167-8fc7-49a5-897c-6c967e966014"
8687,lint: ignore generated windows syscall wrappers,
8688,lint: ignore protobuf generated code,
8689,Merge branch 'master' into f-policy-json,Conflicts: CHANGELOG.md
8690,Merge pull request #6246 from hashicorp/dani/fix-docker-driver,docker: Fix driver spec
8691,docker: Fix driver spec,"hclspec.NewLiteral does not quote its values, which caused module to be parsed as a nonsensical literal which broke the plugin loader during initialization. By quoting the value here, it starts correctly."
8692,add default update stanza and max_parallel=0 disables deployments (#6191),
8693,Merge pull request #6078 from zhiguangwang/fix-docker-image-delay-default-value,"Add default value ""3m"" to image_delay, making it consistent with docs."
8694,Merge pull request #6240 from EvanErcolano/remove-unused-param-consul-client,Remove unused canary param from MakeTaskServiceID
8695,"Add default value ""3m"" to image_delay, making it consistent with docs.",
8696,Merge pull request #6210 from hashicorp/f-update-node-response,docs: Update /v1/node/{node-id} example response
8697,Merge pull request #6119 from rlewkowicz/master,bumped hadoop version
8698,Merge pull request #6208 from pcgeek86/patch-1,Update AWS logo to current version
8699,Remove unused canary param from MakeTaskServiceID,
8700,ci: Support non amd64 architectures,
8701,client: Fix memory fingerprinting on 32bit,Also introduce regression ci for 32 bit fingerprinting
8702,Merge pull request #6238 from hashicorp/e2e-ami-filters,e2e: filter default AMI by OS
8703,Merge pull request #6233 from hashicorp/chore/more-circle,ci: Migrate remaining jobs to CircleCI
8704,Merge pull request #6237 from hashicorp/f-rkt-deprecated,rkt deprecation notice
8705,e2e: filter default AMI by OS,Add an OS tag to Packer builds of our e2e test AMIs and then filters by this in Terraform.
8706,fix casing,
8707,CHANGELOG go-getter upgrade,
8708,Merge pull request #6236 from hashicorp/b-ignore-connect-services,consul: ignore connect services when syncing
8709,Wording changes,
8710,consul: ignore connect services when syncing,"Consul registers Connect services automatically, however Nomad thinks it owns them due to the _nomad prefix. Since the services are managed by Consul, Nomad needs to explicitly ignore them or otherwies they will be removed."
8711,test: add NOMAD_TEST_LOG_LEVEL env var to tune log levels,
8712,Added vault PKI example with separate cert files,
8713,cli: split -dev and -dev-connect flags,
8714,chore: Remove unused travis scripts,
8715,ci: Migrate remaining jobs to CircleCI,
8716,chore: Update changelog,
8717,Merge pull request #6228 from hashicorp/chore/remove-go-travis,chore: Remove Go Tests from Travis
8718,Merge pull request #6226 from hashicorp/b-defensive-rawexec,raw_exec: be defensive when disabled
8719,tests: enable raw_exec driver,
8720,Merge branch 'master' into f-policy-json,Conflicts: CHANGELOG.md
8721,Update recent entries with consistent tenses,
8722,Change test to use valid HCL for rules,
8723,Change parsing error to set rules to nil,
8724,Deprecation notice for rkt,
8725,ci: require Consul 1.6.0,
8726,dev: bump vagrant consul version to match CI,
8727,Add changelog entry,
8728,Add standard error-handling for parse failure,
8729,Merge branch 'master' into f-policy-json,
8730,Fix the ExecTask function in DriverExecTaskNotSupported (#6145),This fixes the ExecTask definition to match with the DriverPlugin interface.
8731,Merge pull request #6227 from hashicorp/b-drivers-check,schedulers: check all drivers on node
8732,chore: Remove Go Tests from Travis,This commit removes the travis tests that duplicate ones ran in CircleCI.
8733,raw_exec: be defensive when disabled,"Ensure that no raw_exec task can run on a client where it's disabled, even if a flaw lead to client being assigned a raw_exec task unexpectedly."
8734,schedulers: check all drivers on node,"When checking driver feasability for an alloc with multiple drivers, we must check that all drivers are detected and healthy. Nomad 0.9 and 0.8 have a bug where we may check a single driver only, but which driver is dependent on map traversal order, which is unspecified in golang spec."
8735,scheduler: tests for multiple drivers in TG,
8736,update tests to run with v2,
8737,Default raft protocol to version 3,
8738,Merge pull request #6218 from hashicorp/f-consul-defaults,consul: use Consul's defaults and env vars
8739,Merge pull request #6216 from hashicorp/b-recognize-pending-allocs,alloc_runner: wait when starting suspicious allocs
8740,Small typo fixes,
8741,"rename to hasLocalState, and ignore clientstate","The ClientState being pending isn't a good criteria; as an alloc may have been updated in-place before it was completed. Also, updated the logic so we only check for task states.  If an alloc has deployment state but no persisted tasks at all, restore will still fail."
8742,Merge pull request #6219 from hashicorp/c-circleci-upgrade-machine-img,upgrade machine image for most jobs
8743,Merge pull request #6215 from hashicorp/f-upgrade-go-getter,"upgrade go-getter, leave compiled protobuf at version 1.2"
8744,ar: ensure network forwarding is allowed for bridged allocs (#6196),  ar: ensure network forwarding is allowed in iptables for bridged allocs   ensure filter rule exists at setup time 
8745,upgrade machine image for most jobs,"Looks like the host unattended upgrades is interferring with chroot creation.  Here, we upgrade machine image to one without unattended upgrades misconfigured, across the board except for the module job. Docker seems to be misbehaving on that image, and we get some unexpected cgroups errors, e.g. https://circleci.com/gh/hashicorp/nomad/3854 . Sample recent failures of module: https://circleci.com/gh/hashicorp/nomad/3633 https://circleci.com/gh/hashicorp/nomad/3696 https://circleci.com/gh/hashicorp/nomad/3714 https://circleci.com/gh/hashicorp/nomad/3764 https://circleci.com/gh/hashicorp/nomad/3770 https://circleci.com/gh/hashicorp/nomad/3834"
8746,cli: display group ports and address in alloc status command output (#6189),  cli: display group ports and address in alloc status command output   add assertions for port.To = -1 case and convert assertions to testify 
8747,Add environment variables for connect upstreams (#6171),  taskenv: add connect upstream env vars + test   set taskenv upstreams instead of appending   Update client/taskenv/env.go   Co-Authored-By: Michael Schurter link
8748,consul: use Consul's defaults and env vars,Use Consul's API package defaults and env vars as Nomad's defaults.
8749,Alternative approach: avoid restoring,"This uses an alternative approach where we avoid restoring the alloc runner in the first place, if we suspect that the alloc may have been completed already."
8750,match pinned versions for sub-modules,
8751,expose nomad namespace as environment variable in allocation #5692 (#6192),
8752,remove network stanza from job init --short example jobspec (#6179),
8753,alloc_runner: wait when starting suspicious allocs,"This commit aims to help users running with clients suseptible to the destroyed alloc being restrarted bug upgrade to latest.  Without this, such users will have their tasks run unexpectedly on upgrade and only see the bug resolved after subsequent restart. If, on restore, the client sees a pending alloc without any other persisted info, then err on the side that it's an corrupt persisted state of an alloc instead of the client happening to be killed right when alloc is assigned to client. Few reasons motivate this behavior: Statistically speaking, corruption being the cause is more likely.  A long running client will have higher chance of having allocs persisted incorrectly with pending state.  Being killed right when an alloc is about to start is relatively unlikely. Also, delaying starting an alloc that hasn't started (by hopefully seconds) is not as severe as launching too many allocs that may bring client down. More importantly, this helps customers upgrade their clients without risking taking their clients down and destablizing their cluster. We don't want existing users to force triggering the bug while they upgrade and restart cluster."
8754,"govendor fetch github.com/hashicorp/go-getter@f5101da, protobuf 1.2",
8755,Merge pull request #6207 from hashicorp/b-gc-destroyed-allocs-rerun,Don't persist allocs of destroyed alloc runners
8756,init: add generated assets into bindata,
8757,Write to client store while holding lock,"Protect against a race where destroying and persist state goroutines race. The downside is that the database io operation will run while holding the lock and may run indefinitely.  The risk of lock being long held is slow destruction, but slow io has bigger problems."
8758,Merge pull request #6181 from hashicorp/dani/scheduler-vol-ro,scheduler: Implicit constraint on readonly hostvol
8759,Merge pull request #6205 from hashicorp/b-no-golang-29119-workaround,logmon: revert workaround for Windows go1.11 bug
8760,Update middleman-hashicorp container (#6185),
8761,logmon: log stat error to help debugging,
8762,Merge pull request #6204 from hashicorp/c-circleci-tweaks-20190824,ci: use circleci/golang images directly
8763,docs: Sort keys in node response,
8764,docs: Update job specification sidebar,
8765,docs: Add client configuration for host_volume,
8766,docs: Initial documentation for volume(_mount),
8767,docs: Update /v1/node/{node-id} example response,"The nodes api documentation is fairly out of date, here I've updated the entire response based on a local dev agent, rather than explicitly adding new fields to bring us up to the current api shape."
8768,Update AWS logo to current version,
8769,Don't persist allocs of destroyed alloc runners,"This fixes a bug where allocs that have been GCed get re-run again after client is restarted.  A heavily-used client may launch thousands of allocs on startup and get killed. The bug is that an alloc runner that gets destroyed due to GC remains in client alloc runner set.  Periodically, they get persisted until alloc is gced by server.  During that  time, the client db will contain the alloc but not its individual tasks status nor completed state.  On client restart, client assumes that alloc is pending state and re-runs it. Here, we fix it by ensuring that destroyed alloc runners don't persist any alloc to the state DB. This is a short-term fix, as we should consider revamping client state management.  Storing alloc and task information in non-transaction non-atomic concurrently while alloc runner is running and potentially changing state is a recipe for bugs. Fixes https://github.com/hashicorp/nomad/issues/5984 Related to https://github.com/hashicorp/nomad/pull/5890"
8770,logmon: revert workaround for Windows go1.11 bug,"Revert e0126123ab1ba848f72458538bc6118c978245e6 now that we are running with Golang 1.12, and https://github.com/golang/go/issues/29119 is no longer relevant."
8771,Merge pull request #6201 from hashicorp/b-device-stats-interval,initialize device manager stats interval
8772,use circleci/golang images directly,"We currently use an container image for module job only; while all other jobs use machine executor. This allows us to switch golang and protoc verions easily without manually managing Docker images (which requires building them manually on a dev machines, etc).  All that while, we install dependencies on every build in all other jobs.. module now is one of the fastest jobs and isn't a constraint or a bottleneck, so increasing its overhead by few seconds doesn't hurt the overall developer iteration. If we split tests effectively later, we can revisit."
8773,use a new image with proper protoc dependency,Fixes module job
8774,Merge pull request #6146 from hashicorp/b-config-template-copy,clientConfig.Copy() to copy template config too
8775,clientConfig.Copy() to copy template config too,
8776,Merge pull request #5676 from hashicorp/f-b-upgrade-ugorji-dep-20190508,Update ugorji/go to latest
8777,Merge pull request #6203 from hashicorp/b-chroot-setuid-110,exec driver setuid go-getter update
8778,"taskrunner getter set Umask for go-getter, setuid test",
8779,govendor fetch github.com/hashicorp/go-getter@6be654f,
8780,initialize device manager stats interval,"Fixes a bug where we cpu is pigged at 100% due to collecting devices statistics.  The passed stats interval was ignored, and the default zero value causes a very tight loop of stats collection. FWIW, in my testing, it took 2.5-3ms to collect nvidia GPU stats, on a module ec2 instance. The stats interval defaults to 1 second and is user configurable.  I believe this is too frequent as a default, and I may advocate for reducing it to a value closer to 5s or 10s, but keeping it as is for now. Fixes https://github.com/hashicorp/nomad/issues/6057 ."
8781,Merge pull request #6200 from hashicorp/r-golang-1.12.9,Update golang to 1.12.9
8782,agent: -dev=connect mode bind to 0.0.0.0,"The dev mode flag for connect was binding to the default interface's IP, but this makes for a bad user experience for the CLI which will default to 127.0.0.1. If we bind to 0.0.0.0 instead the CLI will work without further configuration by the user."
8783,Consul service meta (#6193),"  adds meta object to service in job spec, sends it to consul   adds tests for service meta   fix tests   adds docs   better hashing for service meta, use helper for copying meta when registering service   tried to be DRY, but looks like it would be more work to use the helper function "
8784,update circleci builds to use  golang 1.12.9,
8785,use  golang 1.12,
8786,ar: fix bridge networking port mapping when port.To is unset (#6190),
8787,Bring 0.9.5 changes to changelog on master branch,
8788,Remove most Netlify configuration (#6194),"This removes the in-repository Netlify configuration. There are now two sites backed by the repository, so we must use the web UI to control the build settings, as having the configuration in-repository overrides the web UI settings. The build settings for the two sites are below, as of this commit. See the extra step in nomad-ui site’s build step that copies the _redirects file to the correct destination so things are properly forwarded when you visit the deployment. nomad-ui: base directory: ui build command: ember build && mkdir -p ui-dist/ui && mv dist/* ui-dist/ui/ && cp ../.netlify/ui-redirects ui-dist/_redirects publish directory: ui/ui-dist nomad-website: base directory: website build command: bundle exec middleman build publish directory: website/build"
8789,Merge pull request #6121 from hashicorp/f-connect-bootstrap,connect: task hook for bootstrapping envoy sidecar
8790,connect: task hook for bootstrapping envoy sidecar,"Fixes #6041 Unlike all other Consul operations, boostrapping requires Consul be available. This PR tries Consul 3 times with a backoff to account for the group services being asynchronously registered with Consul."
8791,Merge pull request #6187 from hashicorp/c-circleci-tweak-20190822,ci: Use more recent base machine executor image for test-rkt
8792,ci: Use more recent base machine executor image,"This fixes a frequent failure in module jobs where dpkg installation fails. The image used currently, circleci/classic:201808-01, has unattended upgrades enabled accidentally, which runs on every build.  This means that tools get modified unexpectedly during builds, and apt-get commands may fail as the unattended upgrade is holding package database lock. This updates module job only because the new image breaks module job (e.g. https://circleci.com/gh/hashicorp/nomad/2641 ), and I punted on investigating test-docker for another day."
8793,UI: Add creation time to evaluations table (#6050),
8794,Merge pull request #6175 from hashicorp/dani/remove-hidden-vols,remove hidden field from host volumes
8795,remove hidden field from host volumes,"We're not shipping support for ""hidden"" volumes in 0.10 any more, I'll convert this to an issue+mini RFC for future enhancement."
8796,Merge pull request #6184 from hashicorp/dani/fix-api,api: Fix definition of HostVolumeInfo
8797,Merge pull request #6183 from hashicorp/dani/fix-multiparse,clientconfig: Fix parsing multiple host volumes
8798,api: Fix definition of HostVolumeInfo,
8799,Merge pull request #6180 from hashicorp/dani/readonly-acl,Fine grained ACLs for Host Volumes
8800,clientconfig: Fix parsing multiple host volumes,
8801,acls: Break mount acl into mount-rw and mount-ro,
8802,scheduler: Implicit constraint on readonly hostvol,"When a Client declares a volume is ReadOnly, we should only schedule it for requests for ReadOnly volumes. This change means that if a host exposes a readonly volume, we then validate that the group level requests for the volume are all read only for that host."
8803,structs: validate no tcp checks for connect services (#6169),
8804,UI: Add CircleCI job (#6125),"This adds a job to test the UI on CircleCI, including the sort of branch pattern-matching from #5839, so .-ui/ branches only have that job and not the non-UI ones. I considered having an entire workflow for UI, which could have separate jobs for linting vs Ember tests, but the lint commands take so little time that it didn’t seem worth it. There’s no use of nvm to change the Node version as the Docker image is what controls that. It’s annoying to have to update the version in multiple places, but probably infrequent."
8805,Merge pull request #6157 from hashicorp/f-connect-register,Register connect enabled group services with Consul
8806,ci: require Consul 1.6.0-rc1,
8807,structs: add taskgroup networks and services to plan diffs,"Adds a check for differences in module so that task group networks and services, including new Consul connect stanzas, show up in the job plan outputs."
8808,connect: register group services with Consul,Fixes #6042 Add new task group service hook for registering group services like Connect-enabled services. Does not yet support checks.
8809,Merge pull request #6152 from dwagin/master,Bump up github.com/hashicorp/go-syslog for better BSD support
8810,Merge pull request #6165 from hashicorp/docs-interpolation-node-region,add node.region to interpolation documentation
8811,add node.region to interpolation documentation to address #6164,
8812,test: require root for linux devmode test,
8813,Merge pull request #5871 from hashicorp/f-ui/alloc-fs,UI: Allocation file system explorer
8814,Remove the temporary allocationFileExplorer mirage scenario,
8815,Merge pull request #6158 from hashicorp/f-ui/alloc-fs-empty-dir-state,UI: Use the standard empty message when an fs dir is empty
8816,Merge pull request #6156 from hashicorp/vendor-testify,vendor: update testify to v1.4.0
8817,Add ability to control Mirage logging via query (#6105),"This lets us turn Mirage logging on without editing any files, which makes it easier to switch between branches."
8818,add optional task field to group service checks,
8819,Merge pull request #5911 from hashicorp/b-rpc-consistent-reads,Block rpc handling until state store is caught up
8820,updated vendor/vendor.json,
8821,added version github.com/hashicorp/go-syslog,
8822,sidecar_task override in connect admission controller (#6140),  structs: use seperate SidecarTask struct for sidecar_task stanza and add merge   nomad: merge SidecarTask into proxy task during connect Mutate hook 
8823,Use the standard empty state when a dir is empty,
8824,vendor: update testify to v1.4.0,
8825,Merge pull request #6149 from hashicorp/docs-cv-prefer-routable,link-local addresses can be fingerprinted
8826,command: add module flag to job init,Adds an example job for Consul Connect integration as well as an annotated example job.
8827,Merge pull request #6048 from hashicorp/f-ui/alloc-fs-files,UI: Alloc FS: File Viewer
8828,Bump up github.com/hashicorp/go-syslog,
8829,Merge pull request #6142 from hashicorp/d-add-discuss-link,Add a link to the discussion forum on the resources page
8830,Rewording based on reviews,
8831,link-local addresses can be fingerprinted,Added note to document that link-local addresses can be fingerprinted in cases where no routable address can be found.  Crosslinked to module because they are somewhat related and it is documented at a reasonable distance from this setting.
8832,Merge pull request #6144 from hashicorp/b-docker-exec,docker: Fix issue where an exec may never timeout
8833,docker: Fix issue where an exec may never timeout,
8834,Add a link to the discussion forum on the resources page,
8835,allow dash in non generated environment variable names - should only clean generate environment variables,
8836,Merge pull request #6138 from hashicorp/docs-fix-data-flag,--payload -> --data for curl; consistent @payload
8837,--payload -> --data for curl; consistent @payload,
8838,Merge pull request #6103 from groovemonkey/master,syntax fix; add example for alloc exec -task
8839,Add NetworkIsolation in TaskConfig (#6135),NetworkIsolation was left out of the task config when using an external task driver plugin
8840,Builtin Admission Controller Framework (#6116),  nomad: add admission controller framework   nomad: add admission controller framework and Consul Connect hooks   run admission controllers before checking permissions   client: add default node meta for connect configurables   nomad: remove validateJob func since it has been moved to admission controller   nomad: use new TaskKind type   client: use consts for connect sidecar image and log level   Apply suggestions from code review   Co-Authored-By: Michael Schurter link   nomad: add job register test with connect sidecar   Update nomad/job_endpoint_hooks.go   Co-Authored-By: Michael Schurter link
8841,changelog: -dev=connect feature,
8842,Encode characters in file paths to ensure proper URIs,
8843,agent: add optional param to -dev flag for connect (#6126),"Consul Connect must route traffic between network namespaces through a public interface (i.e. not localhost). In order to support testing in dev mode, users needed to manually set the interface which doesn't make for a smooth experience. This commit adds a facility for adding optional parameters to the module flag and uses it to add a module flag that binds to a public interface on the host."
8844,ci: add GOMAXPROCS=1 to lint step to avoid OOM,
8845,move module outputs to go-bindata assets,
8846,Fix missing plugin driver capabilities (#6128),NetIsolationModes and MustInitiateNetwork were left out of the driver Capabilities when using an external task driver plugin Signed-off-by: Lucas BEE link
8847,allow dash in non generated environment variable names - should only clean generate environment variables,
8848,Merge pull request #6097 from hashicorp/f-kind-validate,Add validation for kind field if it is a consul connect proxy
8849,Merge pull request #6123 from hashicorp/r-makefile-tweaks-20190513,Ease user customizations of Makefile
8850,Allow per-user local customizations of makefile,Allow users to customize their makefiles by adding custom targets/variables without checking them in.
8851,Honor GO_TAGS env-var,"Allow honoring module environment variable if set.  Currently, users must set variable as a makefile argument e.g. module, and this allows us to use env-var syntax (e.g. module) and make it convenient to set GO_TAGS globally."
8852,Merge pull request #6122 from hashicorp/b-circleci-trs,circleci: fix test reports and some refactoring
8853,parameterize golang version,
8854,website: Add TOC links in page body (#6113),This adds the “Jump to section” feature from Terraform’s documentation.
8855,allow dash in non generated environment variable names,
8856,circleci: fix test reports and some refactoring,
8857,More code review feedback,
8858,Apply suggestions from code review,Co-Authored-By: Michael Schurter link
8859,docker: reword FromSlash(hostPath) comment,
8860,bumped hadoop version,
8861,client/template: configuration for function blacklist and sandboxing,"When rendering a task template, the module function is no longer permitted by default and will raise an error. An operator can opt-in to permitting this function with the new module field in the client configuration. When rendering a task template, path parameters for the module function will be treated as relative to the task directory by default. Relative paths or symlinks that point outside the task directory will raise an error. An operator can opt-out of this protection with the new module field in the client configuration."
8862,update consul-template to latest version,pulls in configuration option for blacklisting template functions from: https://github.com/hashicorp/consul-template/pull/1243 https://github.com/hashicorp/consul-template/pull/1246 pulls in configuration option for file sandboxing from: https://github.com/hashicorp/consul-template/pull/1249 https://github.com/hashicorp/consul-template/pull/1254 pulls in vault KVv2 read fixes from: https://github.com/hashicorp/consul-template/pull/1253
8863,Fix type for kind,
8864,Improve validation logic and add table driven tests,
8865,Add validation for kind field if it is a consul connect proxy,
8866,Merge pull request #5681 from hashicorp/dani/circleci,Add CircleCI Configuration
8867,api requires mount,
8868,Add maketask for manual image builds,
8869,fix paths,
8870,update docker file and switch to go 1.12.7,
8871,ci: Generate structs when testing,
8872,Use script to install protoc,
8873,DRY up config,
8874,makefile: Recover verbose handling,
8875,Don't log env,
8876,Test Rocket,
8877,ci: Migrate to CircleCI,"This commit provides an initial migration of general testing CI infrastructure to CircleCI. It uses CircleCI 2.1 paramereterised jobs to provide two base configurations: a vm based module, and docker based module. Jobs that require root, docker, or other similar features require the machine based jobs, but others should be ran using the module package as they are both cheaper and faster to run."
8878,Update utils.go,
8879,add comment,
8880,driver/docker: convert host bind path to os native,relative mounting can be specified using backslashes or forward slashes. so no prior knowledge of host OS is needed for relative volumes mounting
8881,Merge pull request #6068 from hashicorp/r-always-honor-gotags,make: always honor GO_TAGS in dev
8882,tests: partial revert of splitting-out command pkg tests (#6101),"GOTEST_PKG_EXCLUDE overrides GOTEST_PKG entirely, so having both in the same test run isn't supported and results in a whole lot of extra tests being run."
8883,Merge pull request #6100 from hashicorp/f-host-volumes,Host Volumes Support: Rollup Edition
8884,Copy documentation to api/tasks,
8885,fixup rebase,
8886,job_endpoint: Validate volume permissions,
8887,acl: Add HostVolume ACLs,"This adds an initial implementation of ACLs for HostVolumes. Because HostVolumes are a cluster-wide resource, they cannot be tied to a namespace, thus here we allow similar wildcard definitions based on their names, tied to a set of capabilities. Initially, the only available capabilities are deny, or mount. These may be extended in the future to allow read-fs, mount-readonly and similar capabilities."
8888,command: Cleanup node-status,
8889,cli: Display host volume info in nomad node status,
8890,api: Add HostVolumeInfo to response parsing,
8891,structs: Document VolumeMount,
8892,HostVolumeConfig: Source -> Path,
8893,structs: Unify Volume and VolumeRequest,
8894,Update scheduler/feasible.go,Co-Authored-By: Mahmood Ali link
8895,client: Add volume_hook for mounting volumes,
8896,scheduler: Add a feasability checker for Host Vols,
8897,api: Allow submission of jobs with volumes,
8898,client: Add parsing and registration of HostVolume configuration,
8899,structs: Add declarations of basic structs for volume support,
8900,jobspec: Add Volume and VolumeMount declarations,
8901,allow dash in non generated environment variable names,
8902,Add sidecar_task stanza parsing (#6104),  jobspec: breakup parse.go into smaller files   add sidecar_task parsing to jobspec and api   jobspec: combine service parsing logic for task and group service stanzas   api: use slice of ConsulUpstream values instead of pointers 
8903,syntax fix; add example for alloc exec -task,
8904,"tests: break out command, command/agent on Travis (#6094)","The command and command/agent packages are taking 5+ minutes on Travis and this contributes to build timeouts. While this doesn't address underlying issues, breaking these out can reduce re-runs until that work is done."
8905,Prevent a change in height when switching from a dir to a file,
8906,Merge pull request #6090 from hashicorp/f-task-kind,"Add field ""kind"" to task for use in connect tasks"
8907,Revert CNI auto-download (#6095),Revert CNI auto-download
8908,"Revert ""client: add autofetch for CNI plugins""",This reverts commit 0bd157cc3b04fb090dd0d54affcae71496102ce8.
8909,"Revert ""client: remove debugging lines""",This reverts commit 54ce4d1f7ef4913cb12c03dbc98bcd903f7787c9.
8910,Fix Rkt driver requirements list (#6093),
8911,Limit the width of the right page layout column,"This was causing elements to flow off the page, since the element was assuming 100% but also had a 250px margin for the left column. This had previously been ""fixed"" by setting overflow-x: auto, but that resulted in tooltips from being clipped. This is a better solution to the same problem."
8912,Update changelog with #6087,
8913,Fix navigation via clicking recent allocation row (#6087),"This fixes the recent allocation rows to navigate when clicking within them rather than just on the link, which matches the cursor behaviour."
8914,"Test that the client is contacted correctly, and the server is used as a fallback",
8915,Always preload the alloc node so the client can be dialed first,
8916,Include all client fs endpoints in the hosts block,
8917,"Add field ""kind"" to task for use in connect tasks",
8918,Add additional troublesome characters to the alloc-file name factory,
8919,Make a dedicated fs-breadcrumbs component,
8920,Minor fixes from code review,
8921,Use a data-uri instead of an image for the image-file-test,
8922,remove #6064 from 0.10.0 changelog,
8923,add create and modify timestamps to evaluations (#5881),
8924,changelog: add #6003,
8925,Merge pull request #6003 from pete-woods/add-job-status-metrics,nomad: add job status metrics
8926,Merge pull request #6045 from hashicorp/f-connect-groupservice,consul: add Connect structs
8927,Merge pull request #6082 from hashicorp/b-vault-deadlock,vault: fix deadlock in SetConfig
8928,Merge pull request #6077 from hashicorp/b-vault-revlock,vault: fix race in accessor revocations
8929,vault: ensure SetConfig calls are serialized,This is a defensive measure as SetConfig should only be called serially.
8930,vault: fix deadlock in SetConfig,This seems to be the minimum viable patch for fixing a deadlock between establishConnection and SetConfig. SetConfig calls tomb.Kill+tomb.Wait while holding v.lock. establishConnection needs to acquire v.lock to exit but SetConfig is holding v.lock until tomb.Wait exits. tomb.Wait can't exit until establishConnect does! module
8931,consul: add Connect structs,"Refactor all Consul structs into {api,structs}/services.go because api/tasks.go didn't make sense anymore and structs/structs.go is gigantic."
8932,Remove transition animation from sort arrows (#6067),"It may be an Ember bug: in some circumstances, the ember-transitioning-in class was persisting in table sort links even after the transition completed. This changes the transition animations to be targeted only for breadcrumbs and directory links."
8933,Update env_test.go,
8934,Update funcs_test.go,
8935,Update funcs.go,
8936,update changelog,
8937,vault: fix race in accessor revocations,
8938,Merge pull request #6076 from hashicorp/f-comment-stable-field,Add more comments to clarify job.Stable field
8939,job region defaults to client node region if 'global' or none provided (#6064),
8940,Render consul templates using task env only (#6055),"When rendering a task consul template, ensure that only task environment variables are used. Currently, module always falls back to host process environment variables when key isn't a task env var[1].  Thus, we add an empty entry for each host process env-var not found in task env-vars. [1] https://github.com/hashicorp/consul-template/blob/bfa5d0e133688920afd1e012404f765182e3d5e0/template/funcs.go#L61-L75"
8941,Add more comments to clarify job.Stable field,
8942,make: always honor GO_TAGS in dev,"Our build scripts pass module to module go compile flags, except for module, where module is used.  This change ensures module is inline with the rest of makefile targets. I use the flag primarily to enable the nomad ui using the committed compiled assets without regenerating them, as I find using stale ui satisfactory most of the time."
8943,Merge pull request #6065 from hashicorp/b-nil-driver-exec,Check if driver handle is nil before execing
8944,Check if driver handle is nil before execing,"Defend against tr.getDriverHandle being nil.  Exec handler checks if task is running, but it may be stopped between check and driver handler fetching."
8945,changelog: add #6009 and reorg #6007,
8946,Merge pull request #6009 from hmalphettes/f-update-go-getter,Update go-getter@1.1.0 to fix #3491
8947,Merge pull request #5999 from Iqoqo/use-default-network-for-docker,driver/docker: use default network mode
8948,Merge pull request #6061 from Iqoqo/allow-unix-container-path-in-lcow-2,driver/docker: support unix destination mount path in windows
8949,driver/docker: support unix destination mount path in windows,This reverts commit a6c96eade56f0b8880edbec3c4392934492f09bf.
8950,Add page titles to filesystem routes (#6024),
8951,Fix namespace parameter name (#6056),I missed this in #6051.
8952,api: add follow param to file stream endpoint (#6049),"The module supports tailing a file by writing chunks out as they come in. But not all browsers support streams (ex IE11) so we need to be able to tail a file without streaming. The fs stream and logs endpoint use the same implementation for filesystem streaming under the hood, but the fs stream always passes the module parameter set to true. This adds the same toggle to the fs stream endpoint that we have for logs. It defaults to true for backwards compatibility."
8953,Fix documentation namespace API property (#6051),
8954,driver/docker: use default network mode,fallback to docker default network mode instead of explicit bridge for linux or nat for windows
8955,Merge network namespaces work into master (#6046),Merge network namespaces work into master
8956,Update factory-based fs tests to sort properly,
8957,Remove errant server logging line,
8958,fixup-integrate-file-component,
8959,Only warn against BootstrapExpect set in CLI flag,"If server.enabled is false, we ought to ignore all other values in the server stanza. However, I opted to preserve current error when module is passed to the CLI when server is not enabled, to maintain current behavior."
8960,Merge pull request #6034 from grddev/patch-1,Fix typo in Spreads key in JSON Job Specification
8961,Merge pull request #6035 from jrasell/patch-6,Update example setup to use non-deprecated join
8962,client/cni: updated comments and simplified logic to auto download plugins,
8963,Apply suggestions from code review,Co-Authored-By: Mahmood Ali link
8964,client: remove debugging lines,
8965,client: add autofetch for CNI plugins,
8966,remove unused file,
8967,Code review feedback,
8968,Scheduler changes to support network at task group level,Also includes unit tests for binpacker and preemption. The tests verify that network resources specified at the task group level are properly accounted for
8969,Update website/source/docs/drivers/docker.html.md,Co-Authored-By: Michael Schurter link
8970,scheduler: fix disk constraints,
8971,fix failing tests,
8972,vendor: add cni libs,
8973,docker: allow configuration of infra image,
8974,website: add new networking related client config docs,
8975,ar: plumb client config for networking into the network hook,
8976,networking: Add new bridge networking mode implementation,
8977,structs: deepcopy shared alloc resources,Also DRY up Networks code by using Networks.Copy
8978,api: add missing Networks field to alloc resources,
8979,vendor: update consul/api@v1.5.1 for connect fields,
8980,connect: add group.service stanza support,
8981,executor: cleanup netns handling in executor,
8982,executor: support network namespacing on universal executor,
8983,docker: add nil check on network isolation spec,
8984,docker: fix driver test from changed func args,
8985,docker: add additional commens,
8986,docker: support shared network namespaces,
8987,Driver networking support,Adds support for passing network isolation config into drivers and implements support in the rawexec driver as a proof of concept
8988,ar: fix lint errors,
8989,ar: rearrange network hook to support building on windows,
8990,ar: fix test that failed due to error renaming,
8991,plugins/driver: make DriverNetworkManager interface optional,
8992,ar: plumb error handling into alloc runner hook initialization,
8993,ar: add tests for network hook,
8994,ar: cleanup lint errors,
8995,ar: move linux specific code to it's own file and add tests,
8996,plugin/driver: fix tests and add new dep to vendor,
8997,ar: initial driver based network management,
8998,Add network lifecycle management,Adds a new Prerun and Postrun hooks to manage set up of network namespaces on linux. Work still needs to be done to make the code platform agnostic and support Docker style network initalization.
8999,agent: simplify if block,
9000,structs: refactor network validation to seperate fn,
9001,fix structs comment,Co-Authored-By: nickethier link
9002,structs: Add validations for task group networks,
9003,fix tests from introducing new struct fields,
9004,Add network stanza to group,Adds a network stanza and additional options to the task group level in prep for allowing shared networking between tasks of an alloc.
9005,Add file mocks to every mirage scenario,
9006,Test coverage for task-file component,
9007,Test coverage for streaming file component,
9008,Integration tests for the image-file component,
9009,Refactor existing fs tests to use new mirage factories,
9010,Add unsupported file type state,
9011,Add hollow variation to empty-message,
9012,"cat, stream, and readat mocks for alloc fs",
9013,Use the alloc file factory for the fs stat and fs ls end points,
9014,Mirage factory for file system fixtures,
9015,Fix a bug where tail calls for files weren't getting the correct params,
9016,Integrate the task-file component with the fs explorer pages,
9017,Always escape < and > to avoid inadvertently rendering html,
9018,Custom Log instance to deal with API quirks,
9019,Add a plainText mode,
9020,Refactored and image support of the task-file component,
9021,Markup for the image-file component,
9022,Address WindowResizable refactor,
9023,Styles for the image-file component,
9024,image-file component for showing an image and image metadata,
9025,Extract a streaming-file component from the task-log component,"The new streaming-file component takes an arbitrary logger component along with some mode flags and handles things like polling, DOM updates, and scroll position."
9026,New task-file component,Based on the task-log component. Commonalities will be refactored.
9027,Tweak log window math,
9028,Use the stream decode util and never opt to use the plain query param,
9029,Move common stream frame decoding to a util,
9030,changelog: add #5978,
9031,Merge pull request #5978 from pete-woods/configurable-job-gc-interval,command/agent: allow the job GC interval to be configured
9032,UI: Add IPv6 bracket-wrapping to network serializer (#6007),This addresses the issue raised by @pznamensky in #5966.
9033,Update to latest downloadable release,
9034,remove generated code and change version to 0.10.0,
9035,Release v0.9.4,
9036,Release date in changelog,
9037,Generate files for 0.9.4 release,
9038,Fix broken link,
9039,Add log level reloading to changelog,
9040,Merge pull request #6026 from hashicorp/docs-job-name,docs: job names are unique by region/namespace
9041,Update example setup to use non-deprecated join,
9042,Fix typo in Spreads key in JSON Job Specification,
9043,Merge pull request #6028 from hashicorp/revert-6001-allow-unix-container-path-in-lcow,"Revert ""driver/docker: support unix destination mount path in windows"""
9044,fix typo for link to acl bootstrap reset process (#6032),
9045,Merge pull request #6027 from hashicorp/docs-ref-arch,docs: mention acls & sentinel are multi-region
9046,Service and Batch Job Preemption Guide (#5853),"  fix navigation issue for spread guide   skeleton for preemption guide   background info, challenge, and pre-reqs   steps   rewording of intro   re-wording   adding more detail to intro   clarify use of preemption in intro "
9047,"Revert ""driver/docker: support unix destination mount path in windows""",
9048,Merge pull request #6001 from Iqoqo/allow-unix-container-path-in-lcow,driver/docker: support unix destination mount path in windows
9049,Combine conditionals,
9050,Update assertion to use better failure-reporting,
9051,docs: mention acls & sentinel are multi-region,"The reference architecture neglected to mention ACLs and Sentinel policies are the exception to ""no data is shared between regions."""
9052,docs: job names are unique by region/namespace,"""globally"" is incorrect here unless you're running 1 region or at least only 1 per planet. Sorted link list at the bottom as well."
9053,Change UI changelog entries to be length-sorted,Thanks to @notnoop for letting me know about this: https://github.com/hashicorp/nomad/pull/6007#discussion_r308052454
9054,Merge branch 'master' into f-ui/alloc-fs,Conflicts: ui/app/templates/allocations/allocation/task/index.hbs ui/app/templates/allocations/allocation/task/logs.hbs
9055,Merge pull request #6010 from spuder/patch-1,Clarify encryption keys are shared across datacenters
9056,Update policy endpoint to permit anonymous access,
9057,Add job status metrics,This avoids having to write services to repeatedly hit the jobs API
9058,Allow the job GC interval to be configured from default of 5 minutes,
9059,Merge pull request #5993 from hashicorp/b-appveyor-go1.11,use go1.11 in windows CI
9060,use go1.11 in windows CI,
9061,fix grammar,
9062,Update go-getter to v1.1.0,
9063,docs: cluster -> region,
9064,Add parsed rules to policy response,
9065,Clarify encryption keys are shared across datacenters,5973
9066,Merge pull request #6008 from hashicorp/doc-cgroup-raw-exec,document cgroup raw exec
9067,executor_universal_linux log a link to the docs on cgroup error,
9068,docs for linux raw_exec cgroups,
9069,Merge pull request #5996 from hashicorp/f-reload-log-level,Support for hot reloading log levels
9070,Support for hot reloading log levels,
9071,driver/docker: support unix destination mount path in windows,
9072,UI: Add allocation directory sorting (#5914),"When sorting by size, directories are sorted by name, as size isn’t displayed. This includes a change to the positioning of sort arrows for all tables, moving them closer to the text, because in some cases, the arrows for right-aligned columns were ambiguously positioned."
9073,Update changelog,
9074,UI: Remove unused route (#5925),This is an extraneous addition from #4612.
9075,UI: Remove ember-native-dom-helpers (#5959),This also includes migration of some tests to async.
9076,Add download link for Nomad 0.9.4 rc1,
9077,Merge branch 'master' of github.com:hashicorp/nomad,
9078,remove generated code,
9079,Release v0.9.4-rc1,
9080,Update CHANGELOG.md,
9081,Generate files for 0.9.4-rc1 release,
9082,Merge pull request #5990 from hashicorp/b-hack-goworkaround,logmon: Workaround golang/go#29119
9083,Merge pull request #5991 from hashicorp/b-cgroup-error-non-fatal,executor_universal_linux raw_exec cgroup failure is not fatal
9084,logmon: fix comment formattinglogmon: fix comment formattinglogmon: fix,comment formattinglogmon: fix comment formattinglogmon: fix comment formatting
9085,logmon: ensure errors are still handled properly,...and add a comment to switch back to the old error handling once we switch to Go 1.12.
9086,executor_universal_linux raw_exec cgroup failure is not fatal,
9087,Merge pull request #5985 from hashicorp/b-enterprise-docs-guides-links,Fix links to namespace and quotas guides
9088,logmon: Workaround golang/go#29119,"There's a bug in go1.11 that causes some io operations on windows to return incorrect errors for some cases when Stat-ing files. To avoid upgrading to go1.12 in a point release, here we loosen up the cases where we will attempt to create fifos, and add some logging of underlying stat errors to help with debugging."
9089,Merge pull request #5989 from hashicorp/d-fix-bashism-text,Clarify script checks requiring shell
9090,Clarify script checks requiring shell,Closes https://github.com/hashicorp/nomad/issues/5981
9091,Merge pull request #5987 from hashicorp/dani/format-samples,chore: Format hcl configurations
9092,chore: Format hcl configurations,
9093,Merge pull request #5983 from tariq87/patch-1,Update index.html.md
9094,Fix links to namespace and quotas guides,
9095,update changelog,
9096,add formatting for hcl parsing error messages (#5972),
9097,Merge pull request #5953 from hashicorp/b-job-update-auto_revert-merge,jobs update stanza merging cleanup
9098,changelog: add #5791 and #5975,
9099,Merge pull request #5974 from hashicorp/e2e-terraform-debug,e2e: enable_debug=true for all agents
9100,CHANGELOG client cpu usage,
9101,Merge pull request #5951 from hashicorp/b-cpu-pid-scan,reduce CPU usage running large numbers of clients
9102,CHANGELOG core system jobs blocked,
9103,Update index.html.md,
9104,Merge pull request #5976 from hashicorp/b-consul-template-update-20190718,Update consul-template dependency to latest
9105,Merge pull request #5975 from hashicorp/b-check-watcher-deadlock,consul: fix deadlock in check-based restarts
9106,Merge pull request #5900 from hashicorp/f-system-sched-blocked-evals,System scheduler blocked evals
9107,jobs_test AutoRevert and AutoPromote merged differently,
9108,jobs update stanza canonicalize and default AutoPromote,
9109,tasks_test assert merging behavior around Canonicalize,
9110,consul: add test for check watcher deadlock,
9111,changelog GH-5837 and GH-5948,
9112,default e.getAllPids in executor_basic,
9113,blocked_evals_test disable calls Flush,
9114,worker comment system -> core,
9115,blocked_evals reset system evals on Flush,
9116,blocked_evals_test Test_UnblockNode,
9117,fsm attach UnblockNode on node updates,
9118,system_sched submits failed evals as blocked,
9119,blocked_evals system evals indexed by job and node,
9120,Update command/agent/consul/check_watcher.go,Co-Authored-By: Mahmood Ali link
9121,e2e: debug log level for everyone!,
9122,Update consul-template dependency to latest,To pick up the fix in https://github.com/hashicorp/consul-template/pull/1231 .
9123,consul: fix deadlock in check-based restarts,"Fixes #5395 Alternative to #5957 Make task restarting asynchronous when handling check-based restarts. This matches the pre-0.9 behavior where TaskRunner.Restart was an asynchronous signal. The check-based restarting code was not designed to handle blocking in TaskRunner.Restart. 0.9 made it reentrant and could easily overwhelm the buffered update chan and deadlock. Many thanks to @byronwolfman for his excellent debugging, PR, and reproducer! I created this alternative as changing the functionality of TaskRunner.Restart has a much larger impact. This approach reverts to old known-good behavior and minimizes the number of places changes are made."
9124,e2e: enable_debug=true for all agents,Enables the pprof http endpoint for debugging.
9125,executor_unix and _windows stub getAllPids ByScanning,
9126,executor_universal_linux getAllPids chooses cgroup when available,
9127,executor use e.getAllPids(),
9128,resource_container_linux new getAllPidsByCgroup,
9129,pid_collector getAllPids -> getAllPidsByScanning,
9130,UI: Add page titles (#5924),"This uses ember-page-title to add dynamic page titles throughout the route hierarchy. When there’s more than one region, the current current region is added before the final entry of “- Nomad”."
9131,Merge pull request #5870 from hashicorp/b-nmd-1529-alloc-stop-missing-header,api: return X-Nomad-Index header on allocation stop
9132,Merge pull request #5791 from hashicorp/b-plan-snapshotindex,nomad: include snapshot index when submitting plans
9133,Merge pull request #5948 from hashicorp/b-stats-recover-plugin-shutdown,Collect driver stats when driver plugins are restarted
9134,Merge pull request #5837 from hashicorp/b-consul-restore-sync-2,Avoid de-registering slowly restored services
9135,log unrecoverable errors,
9136,address review feedback,
9137,Merge pull request #5960 from shvar/master,take NodeID from url in api for node eligibility
9138,Add interoperability support line to Nomad Downloads documentation page.,Added line around interoperability to Downloads page.
9139,Added line around interoperability to Nomad Downloads page.,
9140,UI: Add copy button for client/allocation UUIDs (#5926),"The button shows a success icon and tooltip on click, and resets after two seconds."
9141,Merge pull request #5938 from RenaudWasTaken/master,Updated the TensorRT demo to use the official NVIDIA image
9142,Merge pull request #5952 from cneira/jail-task-driver,Added Community task driver for FreeBSD jails
9143,take NodeID from url in api for node eligibility,
9144,sort changelog entries,
9145,changelog GH-5954,
9146,Merge pull request #5954 from hashicorp/b-fix-streaming-rpc-tls,rpc: use tls wrapped connection for streaming rpc
9147,fixup,
9148,Merge branch 'jail-task-driver' of https://github.com/cneira/nomad into jail-task-driver,
9149,fixup,
9150,update changelog,
9151,Update jail-task-driver.html.md,
9152,Fixed LXC reference,
9153,rpc: use tls wrapped connection for streaming rpc,"This ensures that server-to-server streaming RPC calls use the tls wrapped connections. Prior to this, module function uses tls for setting header and invoking the rpc method, but returns unwrapped tls connection. Thus, streaming writes fail with tls errors. This tls streaming bug existed since 0.8.0[1], but PR #5654[2] exacerbated it in 0.9.2.  Prior to PR #5654, nomad client used to shuffle servers at every heartbeat -- module[3] always shuffled servers and was called by heartbeat code[4].  Shuffling servers meant that a nomad client would heartbeat and establish a connection against all nomad servers eventually.  When handling streaming RPC calls, nomad servers used these local connection to communicate directly to the client.  The server-to-server forwarding logic was left mostly unexercised. PR #5654 means that a nomad client may connect to a single server only and caused the server-to-server forward streaming RPC code to get exercised more and unearthed the problem. [1] https://github.com/hashicorp/nomad/blob/v0.8.0/nomad/rpc.go#L501-L515 [2] https://github.com/hashicorp/nomad/pull/5654 [3] https://github.com/hashicorp/nomad/blob/v0.9.1/client/servers/manager.go#L198-L216 [4] https://github.com/hashicorp/nomad/blob/v0.9.1/client/client.go#L1603"
9154,rpc: add positive tests for server streaming RPC,
9155,TF config enable services (#5947),"  enable vault, consul, and nomad services to make them persistent after reboot   update AMI "
9156,Added Community task driver for FreeBSD jails,
9157,Merge pull request #5912 from hashicorp/f-systemd-nofile,systemd: set a high but non-infinite fd limit
9158,client/taskrunner: fix stats stats retry logic,"Previously, if a channel is closed, we retry the Stats call.  But, if that call fails, we go in a backoff loop without calling Stats ever again. Here, we use a utility function for calling driverHandle.Stats call that retries as one expects. I aimed to preserve the logging formats but made small improvements as I saw fit."
9159,Signal plugin shutdown for driver.TaskStats,The driver plugin stub client must call module to handle plugin shutdown similar to other functions.  This ensures that TaskStats returns module when plugin shutdown.
9160,Merge pull request #5784 from hashicorp/b-batch-node-dereg,batch node deregistration
9161,Changelog,
9162,node_endpoint preserve both messages as rpcs and in raft,
9163,core_sched add compat comment for later removal,
9164,"structs drop deprecation warning, revert unnecessary comment change",
9165,NodeDeregisterBatch -> NodeBatchDeregister match JobBatch pattern,
9166,state_store error if called without node_ids,
9167,fsm new NodeDeregisterBatchRequestType sorted at the end of the case,
9168,checklist NodeDeregisterBatchRequestType must go at the end,
9169,structs NodeDeregisterBatchRequestType must go at the end,
9170,fsm label batch_deregister_node metrics explicitly,Co-Authored-By: Mahmood Ali link
9171,new file: contributing/checklist-rpc-endpoint.md,
9172,core_sched use the new rpc names,
9173,fsm support new NodeDeregisterBatchRequest,
9174,node endpoint support new NodeDeregisterBatchRequest,
9175,structs add NodeDeregisterBatchRequest,
9176,node_endpoint argument setup,
9177,fsm return an error on both NodeDeregisterRequest fields set,
9178,fsm variable names for consistency,
9179,"node_endpoint raft store then shutdown, test deprecation",
9180,util simplify partitionAll,
9181,core_sched check ServersMeetMinimumVersion,
9182,fsm honor new and old style NodeDeregisterRequests,
9183,"structs add back NodeDeregisterRequest.NodeID, compatibility",
9184,"core_sched check ServersMeetMinimumVersion, send old node deregister",
9185,"state_store just one index update, test deletion",
9186,node_endpoint improve error messages,
9187,state_store improve error messages,
9188,drainer watch_nodes_test batch of 1,
9189,node_endpoint deregister the batch of nodes,
9190,fsm NodeDeregisterRequest is now a batch,
9191,core_sched batch node deregistration requests,
9192,util partitionAll for paging,
9193,state_store DeleteNode operates on a batch of ids,
9194,struct NodeDeregisterRequest has a batch of NodeIDs,
9195,update changelog,
9196,Test file for detect content type that satisfies linter and encoding,
9197,Merge pull request #5943 from hashicorp/b-allocrunner-killtimeout,Populate task event struct with kill timeout
9198,code review feedback,
9199,Merge pull request #5933 from hashicorp/f-connect-initial-docs,First pass at a Consul Connect example docs
9200,website: link to nick's talk,
9201,website: mention cni plugin requirement,
9202,website: Add link to connect tp download,
9203,Populate task event struct with kill timeout,This makes for a nicer task event message
9204,website: switch to prettier demo,
9205,website: link to consul 1.6 beta,
9206,fix linting failure in test case file,
9207,Remove superfluous test attributes (#5927),"I found while working on #5926 that x-icon already adds assertion-compatible selectors, so these wrappers are unnecessary."
9208,website: minor connect improvements,
9209,Updated tensorrt demo to use the official nvidia image,Signed-off-by: Renaud Gaubert link
9210,website: change consul and nomad start up to reflect changes,
9211,First pass at a Consul Connect example docs,
9212,add module version constraint to e2e/terraform,
9213,Fix typo (#5922),
9214,Merge branch 'master' into f-ui/alloc-fs,
9215,update changelog,
9216,Merge pull request #5846 from hashicorp/f-docker-log-constraints,add log rotation to docker driver log defaults
9217,Merge pull request #5915 from hashicorp/b-fix-json-key-casing,Use consistent casing in the JSON representation of the AllocFileInfo struct
9218,default to json-file log rotation for docker driver,
9219,Use consistent casing in the JSON representation of the AllocFileInfo struct,
9220,Merge remote-tracking branch 'origin/master' into f-ui/alloc-fs, origin/master: (32 commits)   Added additional test cases and fixed go test case   update changelog   Add Mirage-toggling via environment variable (#5899)   changelog: Add entries for windows fixes   fifo: Safer access to Conn   run post-run/post-stop task runner hooks   Fail alloc if alloc runner prestart hooks fail   address review comments   changelog   Missed one revert of backwards compatibility for node drain   Improve test cases for detecting content type   Undo removal of node drain compat changes   Updated with suggestions.   fifo: Close connections and cleanup lock handling   logmon: Add windows compatibility test   client: defensive against getting stale alloc updates   Infer content type in alloc fs stat endpoint   appveyor: Run logmon tests   fifo: Require that fifos do not exist for create   vendor: Use dani fork of go-winio   ...
9221,Merge branch 'master' into f-ui/alloc-fs, master:   make purge parameter lowercase (#5895)   tr: Fetch Wait channel before killTask in restart
9222,UI: Add allocation directory rendering (#5873),This lets users navigate the allocation filesystem. It doesn’t support viewing actual files yet.
9223,Merge pull request #5913 from hashicorp/f-fix-contenttype-tests,Fixed test case for detecting content type
9224,Added additional test cases and fixed go test case,
9225,systemd: set a high but non-infinite fd limit,
9226,update changelog,
9227,Merge pull request #5894 from hashicorp/f-remove-deprecated-code,Remove deprecated code
9228,Add Mirage-toggling via environment variable (#5899),"I’m finding myself having to revert my change to this variable when I switch branches, so this would let me affect the variable without code changes."
9229,Merge pull request #5905 from hashicorp/b-ar-failed-prestart,Fail alloc if alloc runner prestart hooks fail
9230,changelog: Add entries for windows fixes,
9231,Merge pull request #5864 from hashicorp/dani/win-pipe-cleaner,windows: Fix restarts using the raw_exec driver
9232,fifo: Safer access to Conn,
9233,run post-run/post-stop task runner hooks,"Handle when prestart failed while restoring a task, to prevent accidentally leaking consul/logmon processes."
9234,Fail alloc if alloc runner prestart hooks fail,"When an alloc runner prestart hook fails, the task runners aren't invoked and they remain in a pending state. This leads to terrible results, some of which are: * Lockup in GC process as reported in https://github.com/hashicorp/nomad/pull/5861 * Lockup in shutdown process as TR.Shutdown() waits for WaitCh to be closed * Alloc not being restarted/rescheduled to another node (as it's still in   pending state) * Unexpected restart of alloc on a client restart, potentially days/weeks after   alloc expected start time! Here, we treat all tasks to have failed if alloc runner prestart hook fails. This fixes the lockups, and permits the alloc to be rescheduled on another node. While it's desirable to retry alloc runner in such failures, I opted to treat it out of scope.  I'm afraid of some subtles about alloc and task runners and their idempotency that's better handled in a follow up PR. This might be one of the root causes for https://github.com/hashicorp/nomad/issues/5840 ."
9235,Block rpc handling until state store is caught up,"Here, we ensure that when leader only responds to RPC calls when state store is up to date.  At leadership transition or launch with restored state, the server local store might not be caught up with latest raft logs and may return a stale read. The solution here is to have an RPC consistency read gate, enabled when module completes before we respond to RPC calls. module is gated by a module which ensures that all prior raft logs have been applied. Conversely, the gate is disabled when leadership is lost. This is very much inspired by https://github.com/hashicorp/consul/pull/3154/files"
9236,Merge pull request #5890 from hashicorp/b-dont-start-completed-allocs-2,task runner to avoid running task if terminal
9237,address review comments,
9238,Merge pull request #5906 from hashicorp/b-alloc-stale-updates,client: defensive against getting stale alloc updates
9239,changelog,
9240,Merge pull request #5907 from hashicorp/f-infer-contenttype,Infer content type in alloc fs stat endpoint
9241,Missed one revert of backwards compatibility for node drain,
9242,Improve test cases for detecting content type,
9243,Undo removal of node drain compat changes,Decided to remove that in 0.10
9244,Merge pull request #5804 from hashicorp/yishan/revised-enterprise-docs,Revised Nomad Enterprise page
9245,Updated with suggestions.,
9246,fifo: Close connections and cleanup lock handling,
9247,logmon: Add windows compatibility test,
9248,client: defensive against getting stale alloc updates,"When fetching node alloc assignments, be defensive against a stale read before killing local nodes allocs. The bug is when both client and servers are restarting and the client requests the node allocation for the node, it might get stale data as server hasn't finished applying all the restored raft transaction to store. Consequently, client would kill and destroy the alloc locally, just to fetch it again moments later when server store is up to date. The bug can be reproduced quite reliably with single node setup (configured with persistence).  I suspect it's too edge-casey to occur in production cluster with multiple servers, but we may need to examine leader failover scenarios more closely. In this commit, we only remove and destroy allocs if the removal index is more recent than the alloc index. This seems like a cheap resiliency fix we already use for detecting alloc updates. A more proper fix would be to ensure that a nomad server only serves RPC calls when state store is fully restored or up to date in leadership transition cases."
9249,Infer content type in alloc fs stat endpoint,
9250,appveyor: Run logmon tests,
9251,fifo: Require that fifos do not exist for create,"Although this operation is safe on linux, it is not safe on Windows when using the named pipe interface. To provide a ~reasonable common api abstraction, here we switch to returning File exists errors on the unix api."
9252,vendor: Use dani fork of go-winio,
9253,logmon: Refactor fifo access for windows safety,"On unix platforms, it is safe to re-open fifo's for reading after the first creation if the file is already a fifo, however this is not possible on windows where this triggers a permissions error on the socket path, as you cannot recreate it. We can't transparently handle this in the CreateAndRead handle, because the Access Is Denied error is too generic to reliably be an IO error. Instead, we add an explict API for opening a reader to an existing FIFO, and check to see if the fifo already exists inside the calling package (e.g logmon)"
9254,Merge pull request #5902 from hashicorp/b-ui/allocation-magnifying-glass,UI: Account for the search icon within the is-compact modifier
9255,Account for the search icon within the is-compact modifer,
9256,make purge parameter lowercase (#5895),
9257,Merge branch 'master' into f-ui/alloc-fs,
9258,task runner to avoid running task if terminal,"This change fixes a bug where nomad would avoid running alloc tasks if the alloc is client terminal but the server copy on the client isn't marked as running. Here, we fix the case by having task runner uses the allocRunner.shouldRun() instead of only checking the server updated alloc. Here, we preserve much of the invariants such that module is always run, and don't change the overall alloc runner and task runner lifecycles. Fixes https://github.com/hashicorp/nomad/issues/5883"
9259,one more drain test,
9260,remove now unneeded test,
9261,Fix more tests,
9262,Fix node drain test,
9263,Restore accidentally deleted block,
9264,nomad: expand comments on subtle plan apply behaviors,
9265,Merge pull request #5889 from hashicorp/dani/b-task-restart,tr: Fetch Wait channel before killTask in restart
9266,tr: Fetch Wait channel before killTask in restart,"Currently, if killTask results in the termination of a process before calling WaitTask, Restart() will incorrectly return a TaskNotFound error when using the raw_exec driver on Windows."
9267,newline,
9268,Remove compat code associated with many previous versions of nomad,"This removes compat code for namespaces (0.7), Drain(0.8) and other older features from releases older than Nomad 0.7"
9269,nomad: SnapshotAfter -> SnapshotMinIndex,"Rename SnapshotAfter to SnapshotMinIndex. The old name was not technically accurate. SnapshotAtOrAfter is more accurate, but wordy and still lacks context about what precisely it is at or after (the index). SnapshotMinIndex was chosen as it describes the action (snapshot), a constraint (minimum), and the object of the constraint (index)."
9270,nomad: evaluate plans after previous plan index,"The previous commit prevented evaluating plans against a state snapshot which is older than the snapshot at which the plan was created.  This is correct and prevents failures trying to retrieve referenced objects that may not exist until the plan's snapshot. However, this is insufficient to guarantee consistency if the following events occur:  P1, P2, and P3 are enqueued with snapshot @ 100 Leader evaluates and applies Plan P1 with snapshot @ 100 Leader evaluates Plan P2 with snapshot+P1 @ 100 P1 commits @ 101 Leader evaluates applies Plan P3 with snapshot+P2 @ 100  Since only the previous plan is optimistically applied to the state store, the snapshot used to evaluate a plan may not contain the N-2 plan! To ensure plans are evaluated and applied serially we must consider all previous plan's committed indexes when evaluating further plans. Therefore combined with the last PR, the minimum index at which to evaluate a plan is: module"
9271,nomad: include snapshot index when submitting plans,"Plan application should use a state snapshot at or after the Raft index at which the plan was created otherwise it risks being rejected based on stale data. This commit adds a Plan.SnapshotIndex which is set by workers when submitting plan. SnapshotIndex is set to the Raft index of the snapshot the worker used to generate the plan. Plan.SnapshotIndex plays a similar role to PlanResult.RefreshIndex. While RefreshIndex informs workers their StateStore is behind the leader's, SnapshotIndex is a way to prevent the leader from using a StateStore behind the worker's. Plan.SnapshotIndex should be considered the lower bound index for consistently handling plan application. Plans must also be committed serially, so Plan N+1 should use a state snapshot containing Plan N. This is guaranteed for plans after the first plan after a leader election. The Raft barrier on leader election ensures the leader's statestore has caught up to the log index at which it was elected. This guarantees its StateStore is at an index > lastPlanIndex."
9272,Merge pull request #5875 from sarcasticadmin/update-example-config,Update website example config
9273,Update website example config,
9274,api: removed unused AllocID from AllocSignalRequest,
9275,Add ember-qunit-nice-errors (#5869),"This shows the entire assertion that’s failing. This is especially useful in combination with page objects. For an assertion like this: assert.equal(PageLayout.flashMessages.length, 1) The failure displayed normally is just “failed” with the expected of 1 and the result of undefined. With this addon, the expected and result remain the same, but “failed” is replaced with the text of the assertion. The typical way to address this is to supply the optional final argument to the assertion function that customises the failure message. That still works with this addon, but most of the time it becomes unnecessary."
9276,Merge pull request #5866 from hashicorp/f-ui/alloc-fs-routing,UI: Allocation file system explorer: Routing
9277,api: return X-Nomad-Index header on allocation stop,
9278,Merge pull request #5865 from hashicorp/b-alloc-stop-missing-panic,alloc lifecycle: 404 when attempting to stop non-existent allocation
9279,Test support and coverage for fs routing,
9280,Some placeholder templates and routes for new feature,
9281,alloc lifecycle: 404 when attempting to stop non-existent allocation,
9282,Add new menu item to the task subnav,
9283,Add new routes to the router,
9284,Merge pull request #5828 from hashicorp/f-ui/ui-screenshots-script,UI Screenshots script
9285,Also move the make targets to the root,
9286,Moved the ui screenshots script from /website/scripts to /scripts,Having a node package in the website dir is incompatible with the way middleman watches the filesystem.
9287,Give the allTheThings scenario a better name,
9288,Warn about the correct mirage scenario when starting the screenshots script,
9289,Use local package.json instead of inherited one from buildkite/puppeteer container,
9290,New Mirage scenario for puppeteer script to use,
9291,A make target for running the screenshots script locally,
9292,A make target for running the screenshots script in a docker container,
9293,A puppeteer based docker container for running the screenshots script without having to deal with headless chrome,
9294,New script for automatically capturing UI screenshots to use for guides and docs,
9295,[WIP] Add telemetry overview section (#5529),  re-arrange telemetry docs and add overview with navigation   update job and task status section   fix navigation   Update website/source/docs/telemetry/overview.html.md   Co-Authored-By: Chris Baker link  Update website/source/docs/telemetry/overview.html.md  Co-Authored-By: Chris Baker link  Update website/source/docs/telemetry/overview.html.md  Co-Authored-By: Chris Baker link  Update website/source/docs/telemetry/metrics.html.md  Co-Authored-By: Chris Baker link  Update website/source/docs/telemetry/metrics.html.md  Co-Authored-By: Chris Baker link   fix formatting for nomad.plan.evaluate metric   clarifications on collection interval and namespace labell   fix typo   Update website/source/docs/telemetry/overview.html.md   Co-Authored-By: Chris Baker link  Update website/source/docs/telemetry/overview.html.md  Co-Authored-By: Chris Baker link  Update website/source/docs/telemetry/overview.html.md  Co-Authored-By: Chris Baker link
9296,Update 0.9.3 and 0.9.4 changelog formating,to be consistent with other entries
9297,Changelog GH-5844,
9298,Update client list to combine statuses (#5789),"The draining, eligibility, and status fields now all show under a combined state column. Draining takes precedence, then (in)eligibility; if neither of those is true, the status displays."
9299,Merge pull request #5857 from hashicorp/missing-changelogs,Couple of changelog updates
9300,Couple of changelog updates,
9301,Merge pull request #5841 from hashicorp/f-raft-snapshot-metrics,Raft and state store indexes as metrics
9302,Add links to godoc for raft related metrics,
9303,Change interval of raft stats collection to 10s,
9304,Merge pull request #5850 from hashicorp/b-5345-prometheus-metric-label-conflict,metrics: upgraded prometheus http client
9305,Merge branch 'master' into b-5345-prometheus-metric-label-conflict,
9306,Update CHANGELOG.md,
9307,Merge pull request #5844 from hashicorp/b-hcl-parse-unknown-vars,Upgrade hcl2 to validate arrays for unknown values
9308,fixing typos in operator endpoint api docs (#5854),
9309,"update changelog for GH-5726, GH-5811, and GH-5851",
9310,Merge pull request #5811 from cloudbuy/b-win32-volume-split,lift code from docker/volume/mounts for splitting windows volumes
9311,Merge pull request #5726 from hashicorp/b-plugins-via-init,Use init() to handle plugin invocation
9312,comment on use of init() for plugin handlers,
9313,Merge pull request #5851 from hashicorp/b-libcontainer-6cc5158,Update libcontainer to 6cc5158
9314,update logrus and go-windows-terminal-sequences,
9315,Update github.com/opencontainers/selinux,"Or github.com/opencontainers/selinux/go-selinux, a dependency of libcontainer."
9316,Update libcontainer to 6cc5158,To pick up the fix in https://github.com/opencontainers/runc/pull/2023 Fixes https://github.com/hashicorp/nomad/issues/5836
9317,update changelog for GH-5850,
9318,metrics: upgraded prometheus http client to 0.9.4 to address label conflict in Nomad 0.9.x reported in #5345,
9319,Merge pull request #5847 from hashicorp/f-5554-metrics-namespace-label,metrics: add namespace label to allocation metrics
9320,Merge pull request #5849 from hashicorp/roll-back-ami,roll back to previous ami
9321,roll back to previous ami,
9322,update changelog,
9323,cleanup test,
9324,formatting and clarity,
9325,run new file through goimports,
9326,run gofmt over the new file,
9327,drivers/docker: move lifted code out to separate file and link the source & license,
9328,lift code from docker/volume/mounts for splitting windows volumes,Using the API as provided from the module package imposes validation on the module which shouldn't be performed at this time. To workaround that lift the internal code from that library required to only perform the split.
9329,Add exclusion of UI branches for AppVeyor (#5842),"As with #5839 on Travis CI, this skips AppVeyor for UI branches."
9330,docs for new metrics,
9331,Changed name of metric,
9332,metrics: add namespace label to allocation metrics,
9333,Upgrade hcl2 to validate arrays for unknown values,"This upgrades hcl2 library dependency to pick up https://github.com/hashicorp/hcl2/pull/113 . Prior to this change, parsing and decoding array attributes containing invalid errors (e.g. references to unknown variables) are silently dropped, with module being assigned to the bad element.  Rather than showing a type/meaningful error from hcl2, we get a very decrypted error message from msgpack layer trying to handle module. This ensures that we propagate diagnostics correctly and report meaningful errors to users. Fixes https://github.com/hashicorp/nomad/issues/5694 Fixes https://github.com/hashicorp/nomad/issues/5680"
9334,Add a test for unknown variables,
9335,Remove non-UI jobs for branches starting with .-ui (#5839),Branches that follow the UI naming convention will no longer produce non-UI jobs on Travis CI.
9336,Emit metrics with raft commit and apply index and statestore latest index,
9337,Added revised copy from rcgenova to feature paragraphs.,
9338,Update changelog properly,I failed to amend my commit! 😭
9339,Avoid de-registering slowly restored services,"When a nomad client restarts/upgraded, nomad restores state from running task and starts the sync loop.  If sync loop runs early, it may deregister services from Consul prematurely even when Consul has the running service as healthy. This is not ideal, as re-registering the service means potentially waiting a whole service health check interval before declaring the service healthy. We attempt to mitigate this by introducing an initialization probation period.  During this time, we only deregister services and checks that were explicitly deregistered, and leave unrecognized ones alone.  This serves as a grace period for restoring to complete, or for operators to restore should they recognize they restored with the wrong nomad data directory."
9340,Update changelog,
9341,update changelog,
9342,Merge pull request #5790 from hashicorp/b-reschedule-desired-state,Mark rescheduled allocs as stopped.
9343,Merge pull request #5786 from hashicorp/docs-docs,docs: initial attempt at developer docs
9344,Change sort arrow to pass through pointer events (#5833),"Without this, clicking on the sort arrow didn’t change the sort direction."
9345,Merge branch 'master' into docs-docs,
9346,Use init to handle plugin invocation,"Currently, nomad ""plugin"" processes (e.g. executor, logmon, docker_logger) are started as CLI commands to be handled by command CLI framework.  Plugin launchers use module to identify the binary and start it. This has few downsides: The trivial one is that when running tests, one must re-compile the nomad binary as the tests need to invoke the nomad executable to start plugin.  This is frequently overlooked, resulting in puzzlement. The more significant issue with module in particular is in relation to external driver:   Plugin must identify the path of invoking nomad binary, which is not trivial; module now returns the path to the plugin rather than to nomad, preventing external drivers from launching executors.   The external driver may get a different version of executor than it expects (specially if we make a binary incompatible change in future).   This commit addresses both downside by having the plugin invocation handling through an module call, similar to how libcontainer init handler is done in [1] and recommened by libcontainer [2].  module will be invoked and handled properly in tests and external drivers. For external drivers, this change will cause external drivers to launch the executor that's compiled against. There a are a couple of downsides to this approach: * These specific packages (i.e executor, logmon, and dockerlog) need to be careful in use of module, package initializers.  Must avoid having command execution rely on any other init in the package.  I prefixed files with module (golang processes files in lexical order), but ensured we don't depend on order. * The command handling is spread in multiple packages making it a bit less obvious how plugin starts are handled. [1] drivers/shared/executor/libcontainer_nsenter_linux.go [2] https://github.com/opencontainers/runc/tree/eb4aeed24ffbf8e2d740fafea39d91faa0ee84d0/libcontainer#using-libcontainer"
9347,Merge pull request #5831 from hashicorp/golang-1.11.11,Update golang to 1.11.11
9348,Test behavior no reschedule for service/batch jobs,
9349,update changelog,
9350,Merge pull request #5664 from hashicorp/f-http-hcl-region,backfill region from hcl for jobUpdate and jobPlan
9351,backfill region from job hcl in jobUpdate and jobPlan endpoints, updated region in job metadata that gets persisted to nomad datastore fixed many unrelated unit tests that used an invalid region value (they previously passed because hcl wasn't getting picked up and the job would default to global region)
9352,Merge pull request #5801 from jrasell/patch-5,Fix incorrect link to the sample Grafana dashboard
9353,Merge pull request #5829 from hashicorp/dani/b-5819,consul: Include port-label in service registration
9354,Update golang to 1.11.11,It's the latest 1.11 point release as of now
9355,Merge pull request #5830 from hashicorp/docs-go-version-update,Updated minimum development go version
9356,Don't stop rescheduleLater allocations,"When an alloc is due to be rescheduleLater, it goes through the reconciler twice: once to be ignored with a follow up evals, and once again when processing the follow up eval where they appear as rescheduleNow. Here, we ignore them in the first run and mark them as stopped in second iteration; rather than stop them twice."
9357,Updated minimum development go version,
9358,consul: Include port-label in service registration,"It is possible to provide multiple identically named services with different port assignments in a Nomad configuration. We introduced a regression when migrating to stable service identifiers where multiple services with the same name would conflict, and the last definition would take precedence. This commit includes the port label in the stable service identifier to allow the previous behaviour where this was supported, for example providing: ```hcl service {   name = ""redis-cache""   tags = [""global"", ""cache""]   port = ""db""   check {     name     = ""alive""     type     = ""tcp""     interval = ""10s""     timeout  = ""2s""   } } service {   name = ""redis-cache""   tags = [""global"", ""foo""]   port = ""foo"" check {     name     = ""alive""     type     = ""tcp""     port     = ""db""     interval = ""10s""     timeout  = ""2s""   } } service {   name = ""redis-cache""   tags = [""global"", ""bar""]   port = ""bar"" check {     name     = ""alive""     type     = ""tcp""     port     = ""db""     interval = ""10s""     timeout  = ""2s""   } } ``` in a nomad task definition is now completely valid. Each service definition with the same name must still have a unique port label however."
9359,Optional Consul service tags for nomad server and agent services (#5706),Optional Consul service tags for nomad server and agent services
9360,docs: checklists don't support numbered lists,The order didn't really make sense anyway.
9361,update website to link to Nomad 0.9.3,
9362,Prepare for 0.9.4 dev cycle,
9363,Release v0.9.3,
9364,Generate files for 0.9.3 release,
9365,Merge pull request #5815 from hashicorp/f-downgrade-docs,Add warning docs around downgrades
9366,update changelog,
9367,Merge pull request #5820 from hashicorp/r-assorted-changes-20190612_1,Assorted minor changes
9368,Merge pull request #5821 from hashicorp/dani/b-5770,trhooks: Add TaskStopHook interface to services
9369,Merge pull request #5825 from hashicorp/docs-updated-alloc-examples,documentation: fixed incorrect URLs in allocation signal/restart documentation
9370,documentation: fixed incorrect URLs in allocation signal/restart documentation,
9371,Merge pull request #5823 from hashicorp/dani/fix-restart-api,alloc-lifecycle: Fix restart with empty body
9372,trt: Fix test,
9373,Merge pull request #5822 from hashicorp/dani/allocrestartapidocs,docs: Add missing docs for alloc restart api
9374,update changelog,
9375,trhooks: Add TaskStopHook interface to services,"We currently only run cleanup Service Hooks when a task is either Killed, or Exited. However, due to the implementation of a task runner, tasks are only Exited if they every correctly started running, which is not true when you recieve an error early in the task start flow, such as not being able to pull secrets from Vault. This updates the service hook to also call consul deregistration routines during a task Stop lifecycle event, to ensure that any registered checks and services are cleared in such cases. fixes #5770"
9376,alloc-lifecycle: Fix restart with empty body,"Currently when you submit a manual request to the alloc lifecycle API with a version of Curl that will submit empty bodies, the alloc restart api will fail with an EOF error. This behaviour is undesired, as it is reasonable to not submit a body at all when restarting an entire allocation rather than an individual task. This fixes it by ignoring EOF (not unexpected EOF) errors and treating them as entire task restarts."
9377,docs: Add missing docs for alloc restart api,
9378,comment DenormalizeAllocationDiffSlice applies to terminal allocs only,
9379,tests: parsing dir should be equivalent to parsing individual files,
9380,tests: avoid manipulating package variables,
9381,Merge pull request #5818 from hashicorp/b-consul-stanza,fix consul stanza parsing when multiple -config arguments are used
9382,command add comments re: defaults to LoadConfig,
9383,config_parse_test update comment for accuracy,
9384,config_parse get rid of ParseConfigDefault,
9385,"Revert ""config explicitly merge defaults once when using a config directory""",This reverts commit 006a9a1d454739eee21b7d8abb8b7aef1353b648.
9386,correct GH-5812 changelog,
9387,changelog GH-5817,
9388,Merge pull request #5817 from hashicorp/b-consul-stanza,fix consul stanza parsing when a configuration directory is used
9389,agent/testdata add a configuration directory for testing,
9390,config merge maintains *HCL string fields used for duration conversion,
9391,"config_parse_test, handle defaults",
9392,config explicitly merge defaults once when using a config directory,
9393,config_parse split out defaults from ParseConfig,
9394,Change Netlify site id (#5814),The Netlify site now belongs to the Hashicorp organisation rather than the hc-nomad user.
9395,Add warning docs around downgrades,
9396,scripts: use /dev/null when verifying s3,
9397,update changelog for 0.9.3,
9398,Merge pull request #5806 from hashicorp/b-systemd-cgroups-path,drivers/exec: use an independent name=systemd cgroup path
9399,update comment,
9400,Merge pull request #5812 from hashicorp/fix-allocresources-reference,Fallback to module for old allocs
9401,Fallback to module for old allocs,"When a client is running against an old server (e.g. running 0.8), module may be nil, and we need to check the deprecated module instead. Fixes https://github.com/hashicorp/nomad/issues/5810"
9402,Merge pull request #5802 from hashicorp/b-config-meta-parsing,config meta parsing
9403,Merge pull request #5805 from hashicorp/b-tg-rename-panic,Fix a panic related to updating alloc taskgroups
9404,exec: use an independent name=systemd cgroup path,"We aim for containers to be part of a new cgroups hierarchy independent from nomad agent.  However, we've been setting a relative path as libcontainer module, which makes libcontainer concatinate the executor process cgroup with passed cgroup, as set in [1]. By setting an absolute path, we ensure that all cgroups subsystem (including module get a dedicated one).  This matches behavior in Nomad 0.8, and behavior of how Docker and OCI sets CgroupsPath[2] Fixes #5736 [1] https://github.com/hashicorp/nomad/blob/d7edf9b2e42348865908735996359c7869fb16b5/vendor/github.com/opencontainers/runc/libcontainer/cgroups/fs/apply_raw.go#L326-L340 [2] https://github.com/moby/moby/blob/238f8eaa31aa74be843c81703fabf774863ec30c/vendor/github.com/containerd/containerd/oci/spec.go#L229"
9405,client/allocrunner: depend on internal task state,"Alloc runner already tracks tasks associated with alloc.  Here, we become defensive by relying on the alloc runner tracked tasks, rather than depend on server never updating the job unexpectedly."
9406,Stop updating allocs.Job on stopping or preemption,
9407,test that stopped alloc jobs aren't modified,"When an alloc is stopped, test that we don't update the job found in alloc with new job  that is no longer relevent for this alloc."
9408,Revised Nomad Enterprise page, Revised Enterprise content to reflect new pricing & packaging modules Consolidated feature pages into single Enterprise pager Made each feature into its own subsection on the Enterprise page Added direct links to their respective guides below Upleveled all Enterprise features onto the navbar Updated redirects
9409,config parse update hcl with support for decoding bool to string,
9410,config parse_test check for string coercion in client.meta,
9411,Fix incorrect link to the sample Grafana dashboard,closes #5799
9412,changelog GH-5794,
9413,Add PR previews with Netlify (#5787),It would be preferable to only generate these for UI PRs but Netlify appears to not have that flexibility. I tried setting up manual deployments in a Travis environment but gave up the experiment; it could probably eventually work if deployment failures become a nuisance.
9414,Merge pull request #5794 from hashicorp/b-preemption-network-panic,Only preempt for network when there is a network
9415,Only preempt for network when there is a network,"When examining preemption for networks, only consider allocs that have networks. Fixes https://github.com/hashicorp/nomad/issues/5793"
9416,test: add tests for network devices and preemption,
9417,docs: move dev docs to contributing,
9418,"docs: mention ui & website as ""core components""",
9419,docs: require Go 1.11+,
9420,Merge pull request #5776 from hashicorp/b-flaky-e2e-test,flaky e2e test
9421,Stop allocs to be rescheduled,"Currently, when an alloc fails and is rescheduled, the alloc desired state remains as ""run"" and the nomad client may not free the resources. Here, we ensure that an alloc is marked as stopped when it's rescheduled. Notice the Desired Status and Description before and after this change: Before: ``` mars-2:nomad notnoop$ nomad alloc status 02aba49e ID                   = 02aba49e Eval ID              = bb9ed1d2 Name                 = example-reschedule.nodes[0] Node ID              = 5853d547 Node Name            = mars-2.local Job ID               = example-reschedule Job Version          = 0 Client Status        = failed Client Description   = Failed tasks Desired Status       = run Desired Description  =  Created              = 10s ago Modified             = 5s ago Replacement Alloc ID = d6bf872b Task ""payload"" is ""dead"" Task Resources CPU        Memory          Disk     Addresses 0/100 MHz  24 MiB/300 MiB  300 MiB Task Events: Started At     = 2019-06-06T21:12:45Z Finished At    = 2019-06-06T21:12:50Z Total Restarts = 0 Last Restart   = N/A Recent Events: Time                       Type            Description 2019-06-06T17:12:50-04:00  Not Restarting  Policy allows no restarts 2019-06-06T17:12:50-04:00  Terminated      Exit Code: 1 2019-06-06T17:12:45-04:00  Started         Task started by client 2019-06-06T17:12:45-04:00  Task Setup      Building Task Directory 2019-06-06T17:12:45-04:00  Received        Task received by client ``` After: ``` ID                   = 5001ccd1 Eval ID              = 53507a02 Name                 = example-reschedule.nodes[0] Node ID              = a3b04364 Node Name            = mars-2.local Job ID               = example-reschedule Job Version          = 0 Client Status        = failed Client Description   = Failed tasks Desired Status       = stop Desired Description  = alloc was rescheduled because it failed Created              = 13s ago Modified             = 3s ago Replacement Alloc ID = 7ba7ac20 Task ""payload"" is ""dead"" Task Resources CPU         Memory          Disk     Addresses 21/100 MHz  24 MiB/300 MiB  300 MiB Task Events: Started At     = 2019-06-06T21:22:50Z Finished At    = 2019-06-06T21:22:55Z Total Restarts = 0 Last Restart   = N/A Recent Events: Time                       Type            Description 2019-06-06T17:22:55-04:00  Not Restarting  Policy allows no restarts 2019-06-06T17:22:55-04:00  Terminated      Exit Code: 1 2019-06-06T17:22:50-04:00  Started         Task started by client 2019-06-06T17:22:50-04:00  Task Setup      Building Task Directory 2019-06-06T17:22:50-04:00  Received        Task received by client ```"
9422,docs: remove subbullet points,They render ambiguously
9423,docs: CLI -> client,The UI is a client too!
9424,Merge pull request #5788 from hashicorp/b-fix-node-down-test,tests: Migrated allocs aren't lost
9425,tests: Migrated allocs aren't lost,"Fix module for checking that the migrated allocs are actually marked to be stopped. The boolean logic in test made it skip actually checking client status as long as desired status was stop. Here, we mark some jobs for migration while leaving others as running, and we check that lost flag is only set for non-migrated allocs."
9426,docs: initial attempt at developer docs,
9427,Merge pull request #5785 from john-lay/website-link-for-port-host-label,Fix a website link under module
9428,Update the link to point to module,
9429,Fix a website link under module,Under the module the module has a incorrect link.
9430,Merge pull request #5760 from hashicorp/f_improve_tfvars,Proposing new tfvars with additional inline docs
9431,Merge pull request #5747 from hashicorp/b-test-fixes-20190521-1,More test fixes
9432,Merge pull request #5746 from hashicorp/b-no-updating-inmem-node,set node.StatusUpdatedAt in raft
9433,Merge pull request #5737 from fwkz/fix-restart-attempts,Fix restart attempts of module stanza in module mode.
9434,Merge pull request #5781 from hashicorp/b-revert-release-sup,Revert 0.9.2 release super script tags
9435,Update release version to 0.9.2,
9436,remove 0.9.2 rc1 download link,
9437,revert 0.9.2 super script tags,
9438,Prepare for 0.9.3 dev cycle,
9439,Release v0.9.2,
9440,Generate files for 0.9.2 release,
9441,update changelog for GH-5545,
9442,Merge pull request #5778 from hashicorp/b-preempt-off-by-default,nomad: disable service+batch preemption by default
9443,Merge pull request #5779 from hashicorp/d-preemption-ent,Add Enterprise docs for Preemption
9444,Adds Enterprise docs for Preemption,
9445,nomad: disable service+batch preemption by default,Enterprise only. Disable preemption for service and batch jobs by default. Maintain backward compatibility in a x.y.Z release. Consider switching the default for new clusters in the future.
9446,e2e update shell scripts argument quoting,
9447,changelog GH-5728,
9448,Merge pull request #5772 from hashicorp/f-disable-nomad-exec,client config flag to disable remote exec
9449,link to flag from alloc exec doc,
9450,"e2e/deployment DeploymentsForJob fail instead of nil, error passing",
9451,e2e/deployment fail if the second deployment times out,
9452,deployment update website examples to say 'requires manual promotion',
9453,"e2e bin/update and bin/run, README",
9454,"e2e/deployment find the second deployment, use its status",
9455,Merge pull request #5773 from hashicorp/b-revert-planapply-snapshotafter,nomad: revert use of SnapshotAfter in planApply
9456,Merge pull request #5768 from hashicorp/b-nmd-1489-cleanup-docker-images,Cleanup docker images
9457,nomad: revert use of SnapshotAfter in planApply,"Revert plan_apply.go changes from #5411 Since non-Command Raft messages do not update the StateStore index, SnapshotAfter may unnecessarily block and needlessly fail in idle clusters where the last Raft message is a non-Command message. This is trivially reproducible with the dev agent and a job that has 2 tasks, 1 of which fails. The correct logic would be to SnapshotAfter the previous plan's index to ensure consistency. New clusters or newly elected leaders will not have a previous plan, so the index the leader was elected should be used instead."
9458,docker/driver: downgraded log level for error in DestroyTask,
9459,drivers/docker: modify container/image cleanup to be robust to containers removed out of band,
9460,client config flag to disable remote exec,"This exposes a client flag to disable nomad remote exec support in environments where access to tasks ought to be restricted. I used module client flag that defaults to allowing remote exec. Opted for a client config that can be used to disable remote exec globally, or to a subset of the cluster if necessary."
9461,update changelog,
9462,docker/tests:,- modified tests to cleanup now that RemoveContainer isn't in StartTask - fix some broken tests by removing docker images/containers before test
9463,docker: DestroyTask was not cleaning up Docker images because it was erroring early due to an attempt to inspect an image that had already been removed,
9464,changelog exec memory consumption fix,
9465,Merge pull request #5728 from hashicorp/restore-08-caps,drivers/exec: Restore 0.8 capabilities
9466,update changelog for #5557 (#5763),
9467,Fix test comparisons,
9468,Test for expected capabilities specifically,
9469,use /bin/bash,
9470,special case root capabilities,
9471,Proposing new tfvars with additional inline docs,
9472,tests: Fix binary dir permissions,
9473,Merge pull request #5755 from hashicorp/d-tag-0.9.2-rc1-features,Prepare for 0.9.2-rc1
9474,remove 0.9.2-rc1 generated code,
9475,Release v0.9.2-rc1,
9476,docs: Tag all 0.9.2 features,
9477,docs: Link to 0.9.2-rc1,
9478,Generate files for 0.9.2-rc1 release,
9479,Pin node version to v10.15.3,
9480,use Node 10 for releases,
9481,reorder changelog,
9482,Merge pull request #5719 from hashicorp/f-auto-promote-canaries,auto promote canaries
9483,structs check TaskGroup.Update for nil,
9484,comment replace COMPAT 0.7.0 for job.Update with more current info,
9485,structs comment todo DeploymentStatus & DeploymentStatusDescription,
9486,structs job warnings for taskgroup with mixed auto_promote settings,
9487,Update e2e/deployment/deployment.go,Co-Authored-By: Mahmood Ali link
9488,e2e/deployment comment the job files for clarity,
9489,api use job.update as the default for taskgroup.update,
9490,deployment_watcher auto promote iff every task group is auto promotable,
9491,"e2e add deployment to the list of e2e tests, minor fixes",
9492,e2e readme minor changes to command + env val templates and order,
9493,website more explicit auto_promote instructions,
9494,Update website/source/docs/job-specification/update.html.md,Co-Authored-By: Michael Schurter link
9495,api/jobs diff tests expect AutoPromote,
9496,e2e utils remove ineffectual assignment of allocs,
9497,e2e README typo,
9498,CHANGELOG add improvement entry,
9499,structs validate requires Canary for AutoPromote,
9500,log error on autoPromoteDeployment failure,
9501,api/jobs add AutoPromote to Canonicalize,
9502,e2e utils error format arg match,
9503,new e2e deployment test,
9504,"e2e util split new alloc and await placement, new WaitForDeployment",
9505,describe a pending deployment without auto_promote more explicitly,
9506,describe a pending deployment with auto_promote accurately,
9507,website update auto_promote doc,
9508,add update AutoPromote bool,
9509,deployments_watcher_test new TestWatcher_AutoPromoteDeployment,
9510,sched reconcile copy AutoPromote to DeploymentState,
9511,"deployment_watcher when it's ok to autopromote, do so",
9512,deployments_watcher comments,
9513,state_store typo in a comment,
9514,new deploymentwatcher/doc.go for package level documentation,
9515,Merge pull request #5750 from hashicorp/dani/devcluster-standalone,devcluster: Add standalone server
9516,Merge pull request #5731 from hashicorp/b-ignore-dc,client: drop unused DC field from servers list
9517,Merge pull request #5752 from hashicorp/b-client-lock-invalidallocs,client: synchronize client.invalidAllocs access
9518,client: synchronize client.invalidAllocs access,"invalidAllocs may be accessed and manipulated from different goroutines, so must be locked."
9519,Merge pull request #5711 from hashicorp/f-nomad-exec-part-05-cli-docs,Document module command
9520,Merge pull request #5751 from hashicorp/update-changelog-20190522,sort and changelog entries
9521,changelog alloc exec and /api http client changes,
9522,sort changelog entries,"In each section, entries should be sorted by component name (except for core that appears in top), and then by line length."
9523,devcluster: Add standalone server,"This adds a single-node configuration of a dev cluster, for use when testing things that require state restoration or multiple clients, but don't necessarily require a 3+ node cluster."
9524,Merge pull request #5749 from hashicorp/dani/restore-allocs,client: Pass servers contacted ch to allocrunner
9525,client: Pass servers contacted ch to allocrunner,This fixes an issue where batch and service workloads would never be restarted due to indefinitely blocking on a nil channel. It also raises the restoration logging message to module to simplify log analysis.
9526,fix httpClient error handling,"If err is nil, we should use the newly cloned httpClient."
9527,update callers in tests,
9528,UI changelog entries,
9529,Merge pull request #5748 from hashicorp/b-ui/prefix-regex,Include the _ prefix separator in both regexes
9530,Include the _ prefix separator in both regexes,And include all prefix types in the test data
9531,set node.StatusUpdatedAt in raft,"Fix a case where module was manipulated directly in memory. This ensures that StatusUpdatedAt is set in raft layer, and ensures that the field is updated when node drain/eligibility is updated too."
9532,tests: fix some nomad/drainer test data races,
9533,tests: fix deploymentwatcher tests data races,
9534,Merge pull request #5734 from hashicorp/f-ui/allocation-lifecycle,UI: Allocation lifecycle
9535,tests: fix data race in client/allocrunner/taskrunner/template TestTaskTemplateManager_Rerender_Signal,"Given that Signal may be called multiple times, blocking for module isn't sufficient to synchornizing access to Signals field."
9536,Use the TwoStepButton page object for integration testing too,
9537,Acceptance testing for allocation lifecycle,
9538,Restart a single task from the task detail page,
9539,Don't cancel watchers when transitioning to a sub-route,
9540,Watch the next allocation on the allocation index page,
9541,Support task restarting in the allocation adapter,
9542,Add stop and restart buttons to the allocation index page,
9543,Allocation methods for stopping and restarting,
9544,New with-headroom modifier for titles,
9545,Add cancel on click outside and disabled behaviors to two-step-button,
9546,Merge pull request #5739 from hashicorp/r-rm-logmon-syslog-deadcode,logmon: remove syslog server deadcode
9547,Merge pull request #5742 from hashicorp/b-test-fixes-20190520,Grab bag of (primarily race) test fixes
9548,Merge pull request #5740 from hashicorp/b-nomad-exec-term-race,exec: allow drivers to handle stream termination
9549,Merge pull request #5741 from hashicorp/b-alloc-race-20190521,client: synchronize access to module
9550,remove github.com/RackSec/srslog dependency,No longer used
9551,Merge pull request #5732 from hashicorp/b-eval-race,nomad: fix race in BlockedEvals
9552,client: synchronize access to ar.alloc,"module is protected by module, so let's use module helper function to access it."
9553,tests: fix fifo lib race,Accidentally accessed outer module variable inside a goroutine
9554,tests: fix data race in client TestDriverManager_Fingerprint_Periodic,
9555,tests: fix client TestFS_Stream data race,Close is invoked in a different goroutine from test
9556,tests: handle unicode matches,naive implementation should focus on ascii characters only
9557,exec: allow drivers to handle stream termination,"Without this change, alloc_endpoint cancel the context passed to handler when we detect EOF.  This races driver in setting exit code; and we run into a case where the exec process terminates cleanly yet we attempt to mark it as failed with context error. Here, we rely on the driver to handle errors returned from Stream and without racing to set an error."
9558,logmon: remove syslog server deadcode,Remove unused syslog server related code that got replaced by the docker logger in Nomad 0.9
9559,Fix restart attempts of module stanza.,Number of restarts during 2nd interval is off by one.
9560,nomad: fix deadlock in UnblockClassAndQuota,"Previous commit could introduce a deadlock if the capacityChangeCh was full and the receiving side exited before freeing a slot for the sending side could send. Flush would then block forever waiting to acquire the lock just to throw the pending update away. The race is around getting/setting the chan field, not chan operations, so only lock around getting the chan field."
9561,nomad: fix race in BlockedEvals,"I assume the mutex was being released before sending on capacityChangeCh to avoid blocking in the critical section, but:  This is race. capacityChangeCh has a huge buffer (8096). If it's full things    already seem Very Bad, and a little backpressure seems appropriate."
9562,client: drop unused DC field from servers list,See #5730 for details.
9563,Merge pull request #5411 from hashicorp/b-snapshotafter,Block plan application until state store has caught up to raft
9564,fix,
9565,Move addToPath to its own util,
9566,Merge pull request #5721 from hashicorp/f-ui/watchable-cancellation-tokens,UI: Replace the adapter cancellation methods with a cancellation token system
9567,Fix links.,
9568,Add PR link to changelog for #5702,
9569,Fix typo.,
9570,Standardize on Abort over Cancel,
9571,Replace the adapter cancellation methods with a cancellation token system,
9572,drivers/exec: Restore 0.8 capabilities,"Nomad 0.9 incidentally set effective capabilities that is higher than what's expected of a module process, and what's set in 0.8. This change restores the capabilities to ones used in Nomad 0.9."
9573,Merge pull request #5275 from hashicorp/f-api-config-httpclient,api: allow configuring http client
9574,"remove ""incidentally"" exported internal function","module is invoked internally by module and API consumers should not invoke directly. Now that http client is created in module, module makes no sense.  API consumers that call it explicitly can remove the invocation and preserve the behavior."
9575,elaborate on shell interpolation and examples,
9576,Run TestClientAllocations_Restart_ACL test,
9577,nomad: emit more detailed error,Avoid returning context.DeadlineExceeded as it lacks helpful information and is often ignored or handled specially by callers.
9578,nomad: wait for state store to sync in plan apply,Wait for state store to catch up with raft when applying plans.
9579,Vagrant optional (#5724),  specify Vagrant as optional in getting started and installation   edit next steps 
9580,nomad: remove unused NotifyGroup struct,I don't think it's been used for a long time.
9581,nomad: refactor waitForIndex into SnapshotAfter,Generalize wait for index logic in the state store for reuse elsewhere. Also begin plumbing in a context to combine handling of timeouts and shutdown.
9582,api: allow configuring http client,"Allow clients to configure httpClient, e.g. set a pooled/keep-alive client. When caller configures HttpClient explicitly, we aim to use as-is; e.g. we assume it's configured with TLS already.  Expose module to aid api consumers with configuring their http client. Also, removes module call that I believe is internal only and has odd side-effects when called on already created config.  Also deprecates module in preference to the new module."
9583,Merge pull request #5649 from hashicorp/b-lookup-exe-chroot,lookup executables inside chroot
9584,Merge pull request #5722 from hashicorp/f-nomad-exec-escape-try2,escapingio: handle stalled readers
9585,address review feedback,
9586,Restore tty start before emitting errors,"Otherwise, the error message appears indented unexpectedly."
9587,escapingio: handle stalled readers,"Handle stalled readers (e.g. network write got stalled), by having escaping io have a buffer so it looks for escaped characters in the stream. This simplifies the implementation considerably, as we can look for new lines followed by escaped characters directly. Also, we add a test to ensure that any partial results are flushed to readers."
9588,escapingio: thread-safe struct for escaped chars,Use a helper struct for capturing escaped characters that's thread safe.
9589,Merge pull request #5720 from hashicorp/f-nomad-exec-escape,Support escaping sequence for terminating alloc exec
9590,Add preemption to changelog,
9591,avoid printing counts in tests,
9592,Fix typos and comments,Co-Authored-By: Michael Schurter link
9593,Implement escaping chrarcter for alloc exec,
9594,Add a escaping reader that mimics ssh behavior,Adds an escaping reading that mimics ssh handling of input escape sequences. The reader parses chunks to look for \n~
9595,Merge pull request #5709 from jweissig/patch-10,docs: fixed wording
9596,Merge pull request #5717 from hashicorp/b-plan-apply-preemptions,Fix bug in plan applier introduced in PR-5602
9597,changelog: Update for eval-broker fix,
9598,update changelog,
9599,Merge pull request #5702 from hashicorp/f-filter-by-create-index,Filter deployments by create index
9600,Merge branch 'f-filter-by-create-index' of github.com:hashicorp/nomad into f-filter-by-create-index,
9601,Add -all to help text and flags,
9602,remove stray newline,Co-Authored-By: Danielle link
9603,Fix bug in plan applier introduced in PR-5602,This fixes a bug in the state store during plan apply. When denormalizing preempted allocations it incorrectly set the preemptor's job during the update. This eventually causes a panic downstream in the client. Added a test assertion that failed before and passes after this fix
9604,Merge pull request #5699 from hashicorp/dani/b-eval-broker-lifetime,Eval Broker: Prevent redundant enqueue's when a node is not a leader
9605,Merge pull request #5715 from hashicorp/b-precommit-linting,Restore precommit linting
9606,Merge pull request #5714 from hashicorp/b-empty-clients-jobs-facets-alignment,Change clients/jobs facets to always right-align
9607,Restore precommit linting,The two pairs of quotes were causing no files to match.
9608,change GRPC to gRPC (#5712),
9609,Change clients/jobs facets to always right-align,"This changes the templates so the element that contains the search box is always present, instead hiding only the box itself when there’s nothing to search. Keeping the empty element lets it take up its flexbox space so the facets will no longer be in the centre."
9610,update changelog,
9611,Merge pull request #5713 from hashicorp/b-5698-inf-allocation-spread,Fix edge case with spread scoring
9612,Fix comment and assert score in test case,
9613,fix missing brace,
9614,fix typo,
9615,scheduler: add check to prohibit returning inf during spread boost calculation,
9616,Merge pull request #5633 from hashicorp/f-nomad-exec-parts-02-cli,nomad exec part 2: CLI
9617,Document module command,
9618,Handle Terminal Output state in Windows,
9619,Add clarifying comments for negating module or module,
9620,evalbroker: test for no enqueue on disabled,
9621,docs: fixed wording,"Fixed wording: ""as show below""/shown."
9622,Add jrasell/sherpa to resource page and remove Replicator. (#5700),Add jrasell/sherpa to resource page and remove Replicator.
9623,Merge pull request #5707 from hashicorp/b-more-redirects-20190514,More website redirects
9624,Make spark.html the index,
9625,Merge pull request #5669 from hashicorp/b-block-on-servers-4,client: do not restart restored tasks until server is contacted
9626,More redirects for website,I expected redirects to handle directory rewrites without needing to specify every file.
9627,Correct Spark links in redirects.txt,
9628,docs,
9629,Fix one more test set up,
9630,fixup #5172 and rebase against master,
9631,Merge branch 'master' into pr/5172," master: (912 commits)   Update redirects.txt   Added redirect for Spark guide link   client: log when server list changes   docs: mention regression in task config validation   fix update to changelog   update CHANGELOG with datacenter config validation https://github.com/hashicorp/nomad/pull/5665   typo: ""atleast"" -> ""at least""   implement nomad exec for rkt   docs: fixed typo   use pty/tty terminology similar to github.com/kr/pty   vendor github.com/kr/pty   drivers: implement streaming exec for executor based drivers   executors: implement streaming exec   executor: scaffolding for executor grpc handling   client: expose allocated memory per task   client improve a comment in updateNetworks   stalebot: Add 'thinking' as an exempt label (#5684)   Added Sparrow link   update links to use new canonical location   Add redirects for restructing done in GH-5667   ..."
9632,docs: changelog entry for #5669 and fix comment,
9633,client: register before restoring,"Registration and restoring allocs don't share state or depend on each other in any way (syncing allocs with servers is done outside of registration). Since restoring is synchronous, start the registration goroutine first. For nodes with lots of allocs to restore or close to their heartbeat deadline, this could be the difference between becoming ""lost"" or not."
9634,client: do not restart dead tasks until server is contacted (try 2),Refactoring of 104067bc2b2002a4e45ae7b667a476b89addc162 Switch the MarkLive method for a chan that is closed by the client. Thanks to @notnoop for the idea! The old approach called a method on most existing ARs and TRs on every runAllocs call. The new approach does a once.Do call in runAllocs to accomplish the same thing with less work. Able to remove the gate abstraction that did much more than was needed.
9635,drivers/mock: implement InspectTask,
9636,client: do not restart dead tasks until server is contacted,"Fixes #1795 Running restored allocations and pulling what allocations to run from the server happen concurrently. This means that if a client is rebooted, and has its allocations rescheduled, it may restart the dead allocations before it contacts the server and determines they should be dead. This commit makes tasks that fail to reattach on restore wait until the server is contacted before restarting."
9637,e2e: fix nomad service for systemd<230,
9638,Merge pull request #5703 from hashicorp/yishan/corrected-website-redirects,Fixed Spark links in redirects.txt.
9639,Update redirects.txt,Fixed Spark redirects post-website restructuring for the guides.
9640,Merge pull request #5695 from hashicorp/f-squelch-logline,client: log when server list changes
9641,Merge pull request #4590 from hashicorp/d-fix-stagger,docs: fix description of update.stagger
9642,Merge pull request #5693 from hashicorp/docs-task-config,docs: mention regression in task config validation
9643,Merge pull request #5657 from hashicorp/docs-plugin-link,docs: add lots of links to plugin guide
9644,Add jrasell/sherpa to resource page and remove Replicator.,Adds jrasell/sherpa to the resources page under the Integrations section. Replicator is no longer being maintained or has been under active development for well over a year. I have therefore removed this from the resources page.
9645,evalbroker: Simplify nextDelayedEval locking,
9646,evalbroker: No new enqueues when disabled,"Currently when an evalbroker is disabled, it still recieves delayed enqueues via log application in the fsm. This causes an ever growing heap of evaluations that will never be drained, and can cause memory issues in larger clusters, or when left running for an extended period of time without a leader election. This commit prevents the enqueuing of evaluations while we are disabled, and relies on the leader restoreEvals routine to handle reconciling state during a leadership transition. Existing dequeues during an Enabled->Disabled broker state transition are handled by the enqueueLocked function dropping evals."
9647,evalbroker: Flush within update lock,"Primarily a cleanup commit, however, currently there is a potential race condition (that I'm not sure we've ever actually hit) during a flapping SetEnabled/Disabled state where we may never correctly restart the eval broker, if it was being called from multiple routines."
9648,Fix test setup to have correct jobcreateindex for deployments,
9649,"Lookup job only once, and fix tests",
9650,Add flag similar to --all for allocs to be able to filter deployments by latest,
9651,Added redirect for Spark guide link,
9652,client: log when server list changes,Stop logging in the happy path when nothing has changed.
9653,docs: mention regression in task config validation,
9654,Merge pull request #5492 from hashicorp/f-allocated-mem,client: expose allocated memory per task
9655,fix update to changelog,
9656,update CHANGELOG with datacenter config validation https://github.com/hashicorp/nomad/pull/5665,
9657,Merge pull request #5665 from hashicorp/b-empty-datacenters,add non-empty string validation for datacenters
9658,Merge pull request #5668 from hashicorp/flaky-test-20190430,fix flaky test by allowing for call invocation overhead
9659,Merge pull request #5642 from hashicorp/b-network-fingerprinting-ipv4,network fingerprinting multiple IPs on the configured network device
9660,Merge pull request #5690 from hashicorp/f-nomad-exec-part-04-rkt,implement nomad exec for rkt
9661,"typo: ""atleast"" -> ""at least""",
9662,add CLI commands for nomad exec,
9663,implement nomad exec for rkt,Implement the streaming exec handler for the rkt driver
9664,Merge pull request #5685 from jweissig/patch-9,docs: fixed typo
9665,docs: fixed typo,Fixed typo: programatic/programmatic
9666,Merge pull request #5634 from hashicorp/f-nomad-exec-parts-03-executors,nomad exec part 3: executor based drivers
9667,use pty/tty terminology similar to github.com/kr/pty,
9668,vendor github.com/kr/pty,
9669,drivers: implement streaming exec for executor based drivers,These simply delegate call to backend executor.
9670,executors: implement streaming exec,"Implements streamign exec handling in both executors (i.e. universal and libcontainer). For creation of TTY, some incidental complexity leaked in.  The universal executor uses github.com/kr/pty for creation of TTYs. On the other hand, libcontainer expects a console socket and for libcontainer to create the underlying console object on process start.  The caller can then use module to get tty master end. I chose github.com/kr/pty for managing TTYs here.  I tried module package (which is already imported), but the package did not work as expected on macOS."
9671,executor: scaffolding for executor grpc handling,Prepare executor to handle streaming exec API calls that reuse drivers protobuf structs.
9672,Merge pull request #5674 from hashicorp/b-ui/flaky-client-detail-test,UI: Fixed flaky client-detail test
9673,client: expose allocated memory per task,Related to #4280 This PR adds module as a gauge in bytes to metrics to ease calculating how close a task is to OOMing. module
9674,"executor_linux only do path resolution in the taskDir, not local",split out lookPathIn to show it's similarity to exec.LookPath
9675,Merge pull request #5683 from hashicorp/docs-describe-sched-restart,Added Sparrow link
9676,client improve a comment in updateNetworks,
9677,stalebot: Add 'thinking' as an exempt label (#5684),
9678,Merge pull request #5375 from hashicorp/dani/stale-issues,Setup probot/stale
9679,Added Sparrow link,
9680,Added info about scheduler fail and success cases (#5675),"  Added info about scheduler fail and success cases   fix ""and and""; copypasta   Moving links to bottom for consistency   Adopted @schmichael wording "
9681,Merge pull request #5682 from hashicorp/b-fix-website-links-20180510,Fix website links
9682,update links to use new canonical location,
9683,Add redirects for restructing done in GH-5667,https://github.com/hashicorp/nomad/pull/5667 restructured lots of guides; this adds redirects to ensure that old links work.
9684,Merge pull request #5677 from jweissig/patch-8,doc: wording
9685,doc: wording,"Fixed wording: ""as show below"" -> ""as shown below""."
9686,Update ugorji/go to latest,"Our testing so far indicates that ugorji/go/codec maintains backward compatiblity with the version we are using now, for purposes of Nomad serialization. Using latest ugorji/go allows us to get back to using upstream library, get get the optimizations benefits in RPC paths (including code generation optimizations). ugorji/go introduced two significant changes: * time binary format in https://github.com/ugorji/go/commit/debb8e2d2e8bd8cf1e9b6d806cf5e58df86b970c.  Setting module restores old behavior * ugorji/go started honoring module tag as well: v1.1.4 is the latest but has a bug in handling RawString that's fixed in https://github.com/ugorji/go/commit/d09a80c1e0c3162e022a114ab0f037e2596969e6 ."
9687,Merge pull request #5632 from hashicorp/f-nomad-exec-parts-01-base,nomad exec part 1: plumbing and docker driver
9688,add e2e tests for nomad exec,
9689,add api support for nomad exec,"Adds nomad exec support in our API, by hitting the websocket endpoint. We introduce API structs that correspond to the drivers streaming exec structs. For creating the websocket connection, we reuse the transport setting from api http client."
9690,drivers/docker: implement streaming exec,
9691,Add basic drivers conformance tests,Add consolidated testing package to serve as conformance tests for all drivers.
9692,vendor github.com/gorilla/websocket,
9693,agent: add websocket handler for nomad exec,"This adds a websocket endpoint for handling module. The endpoint is a websocket interface, as we require a bi-directional streaming (to handle both input and output), which is not very appropriate for plain HTTP 1.0. Using websocket makes implementing the web ui a bit simpler. I considered using golang http hijack capability to treat http request as a plain connection, but the web interface would be too complicated potentially. Furthermore, the API endpoint operates against the raw core nomad exec streaming datastructures, defined in protobuf, with json serializer.  Our APIs use json interfaces in general, and protobuf generates json friendly golang structs. Reusing the structs here simplify interface and reduce conversion overhead."
9694,server: server forwarding logic for nomad exec endpoint,
9695,implement client endpoint of nomad exec,"Add a client streaming RPC endpoint for processing nomad exec tasks, by invoking the relevant task handler for execution."
9696,drivers/mock: implement nomad exec interface,
9697,implemment streaming exec handling in driver grpc handlers,Also add a helper that converts the adapts the high level interface to the low-level interface of nomad exec interfaces.
9698,Merge pull request #5667 from hashicorp/yishan/revised-nomadproject-structure,Revised NomadProject Structure
9699,Adopted @schmichael wording,
9700,Merge branch 'master' into yishan/revised-nomadproject-structure,
9701,Moving links to bottom for consistency,
9702,"fix ""and and""; copypasta",
9703,Added info about scheduler fail and success cases,
9704,Merge pull request #5660 from hashicorp/b-remove-EmitNodeEventsResponse-index,remove Index field from EmitNodeEventsResponse
9705,Fixed flaky client-detail test,"Since one allocation is preempted, the alloc factory creates a new alloc that wasn't guaranteed to be running. When it is the first alloc row in the table, then the alloc row detail test fails because non-running allocs don't have metrics. The fix was to manually update all the alloc clientStatuses."
9706,"Changed from ""Container Management"" to ""Container Orchestration""",Removed Terraform mention in integrations without existing guide.
9707,changelog: Add missing entry for module,
9708,"copied consts used by jobspec parsing from structs into api package, to avoid referencing structs package in jobspec (#5663)",
9709,changelog: Add changelog entries for consul improvements,
9710,Merge pull request #5536 from hashicorp/dani/consul,Consul Catalog Integration Fixes
9711,consul: Document example check id,
9712,Merge pull request #5666 from hashicorp/docs-querystring,docs: Change querystring -> query string
9713,fix flaky test by allowing for call invocation overhead,
9714,Revised NomadProject Structure," Revised ""What is Nomad"" copy Added ""Key Features"" section with links to task drivers & device plugins with lift-and-shift from README Added ""Who Uses Nomad"" section with users, talks, blog posts Removed Hadoop YARN, Docker Swarm, HTCondor from comparisons Revamped Guides section Inserted ""Installing Nomad"", ""Upgrading"", ""Integrations"" as persistent in Guides navbar Split Installing Nomad into two paths for users (one for Sandbox with ""Quickstart"", one for Production) Surfaced ""Upgrading"" and ""Integrations"" section from documentation Changed ""Job Lifecycle"" section into ""Deploying & Managing Applications"" Reworked ""Operations"" into ""Operating Nomad"" Reworked ""Security"" into ""Securing Nomad"" Segmented Namespaces, Resource Quotas, Sentinel into ""Governance & Policy"" subsection Reworked ""Spark integration"" into its own ""Analytical Workloads"" section"
9715,querystring -> query string,
9716,add unit tests for datacenter non-empty string validation,
9717,update changelog for heartbeat fix,
9718,Merge pull request #5654 from hashicorp/b-hearbeat-lockfix,Remove unnecessary locking and serverlist syncing in heartbeats
9719,Typo fixes (#5661), Typo fixes it's -> its plugable -> pluggable
9720,fix typo and add one more test scenario,
9721,executor_linux_test call lookupTaskBin with an ExecCommand,
9722,executor_linux pass the command to lookupTaskBin to get path,
9723,update changelog For GH-5587 and GH-5629,
9724,reorder CHANGELOG,
9725,remove Index field from EmitNodeEventsResponse,"module is already included as part of module embedding. This is a backward compatible change: Clients never read the field; and Server refernces to module would be using the value in module, which is consistent with other response structs."
9726,code review feedback,
9727,"executor/* Launch log at top of Launch is more explicit, trace",
9728,"move lookupTaskBin to executor_linux, for os dependency clarity",
9729,"driver_test leave cat in the test, but add cat to the chroot",
9730,update changelog to reflect metrics fix,
9731,stale allocation data leads to incorrect (and even negative) metrics (#5637),  client: was not using up-to-date client state in determining which alloc count towards allocated resources   Update client/client.go   Co-Authored-By: cgbaker link
9732,Fixed links in changelog,
9733,Merge pull request #5655 from hashicorp/docs-restarts,docs: fix default restart values
9734,docs: add lots of links to plugin guide,Add links to plugin guide because its buried under Docs -> Internal. At least one user couldn't find it: https://groups.google.com/d/msg/nomad-tool/5sR8MTGZFrM/8bOExpcJAgAJ Link from:  - Devices index  - Devices community page  - Drivers index  - Drivers community page I erred on the side of over-linking because it's just a single concise sentence and I'd hate for people to struggle finding the guide. Also remove some very old (4 years!) and confusing docs from the driver index page.
9735,CHANGELOG,
9736,Merge pull request #5656 from jweissig/patch-7,Fixed Typo
9737,Fixed Typo,Fixed typo: schedular/scheduler.
9738,Merge pull request #5647 from hashicorp/e2e-tf,E2E Test Terraform/Packer Improvements
9739,docs: fix default restart values,
9740,Update changelog,
9741,Merge pull request #5628 from hashicorp/f-preemption-config,Add config to disable preemption for batch/service jobs
9742,Merge pull request #5620 from Mongey/cm-color-ui,Converts ANSI terminal codes to HTML in logs
9743,Remove unnecessary locking and serverlist syncing in heartbeats,This removes an unnecessary shared lock between discovery and heartbeating which was causing heartbeats to be missed upon retries when a single server fails. Also made a drive by fix to call the periodic server shuffler goroutine.
9744,Merge pull request #5646 from hashicorp/some-ugorji-fixes,Codegen codec helpers for all nomad structs
9745,Merge pull request #5601 from hashicorp/b-config-parse-direct-hcl,config parse direct hcl
9746,Merge pull request #5631 from hashicorp/b-system-sched-constraint-errors,fix system sched constraint errors
9747,Merge pull request #5653 from hashicorp/b-s3-virtualbucket-style,docs: update s3 urls to use virtual bucket style
9748,Merge pull request #5651 from hashicorp/f-peers-json-info,Update peers info with new raft config details
9749,docs: update s3 urls to use virtual bucket style,In response to https://forums.aws.amazon.com/ann.jspa?annID=6776
9750,Merge pull request #5652 from jweissig/patch-6,Fix Typo
9751,Fix Typo,Fixed Typo: Behing/Behind.
9752,executor_test cleanup old lookupBin tests,
9753,update changelog,
9754,Merge pull request #5645 from hashicorp/b-deploy-health,Update deployment health on failed allocations only if health is unset
9755,Update peers info with new raft config details,
9756,driver_test StartWait task calls a program inside it's chroot,
9757,"executor lookupTaskBin also does PATH expansion, anchored in taskDIR",
9758,executor_linux_test test PATH lookup inside the container,
9759,Merge pull request #5629 from hbasappa/peersjon,Add support in nomad for supporting raft 3 protocol peers.json
9760,Rename to match system scheduler config.,Also added docs
9761,executor and executor_linux debug launch prep and process start,
9762,executor_linux_test new TestExecutor_EscapeContainer,
9763,executor_test test for more edges of lookupBin behavior,
9764,executor_linux call new lookupTaskBin,
9765,executor split up lookupBin,
9766,Fix comment,Co-Authored-By: preetapan link
9767,Remove unnecessary boolean clause,Co-Authored-By: preetapan link
9768,e2e: explain these scripts are for packer,It took me way too long to figure out these weren't used by TF.
9769,e2e: let the unindex clients do anything...,...and be debugable!
9770,e2e: ssh instructions + remove redundant naming,
9771,e2e: update deps and install nomad in packer,"Nomad on the packer image will be overwritten by the sha specified in the TF var, but including a base version on the packer image makes the image valid for independent use."
9772,e2e: enable systemd units so they start on boot,
9773,add non-empty string validation for datacenters,
9774,Update deployment health on failed allocations only if health is unset,This fixes a confusing UX where a previously successful deployment's healthy/unhealthy count would get updated if any allocations failed after the deployment was already marked as successful.
9775,client fingerprinting can keep multi ips on a device,
9776,client_test new test fingerprinting can keep multi ips on a device,
9777,Return a htmlSafe string rather than use triple curlies,
9778,Converts ANSI terminal codes to HTML in logs,
9779,Merge pull request #5641 from hashicorp/b-task-networks-ports,client: handle 0.8 server network resources
9780,Merge pull request #5640 from hashicorp/b-fix-omitempty,Update hashicorp/go-msgpack/codec
9781,Add support in nomad for supporting raft 3 protocol peers.json,
9782,client: handle 0.8 server network resources,"Fixes https://github.com/hashicorp/nomad/issues/5587 When a nomad 0.9 client is handling an alloc generated by a nomad 0.8 server, we should check the alloc.TaskResources for networking details rather than task.Resources. We check alloc.TaskResources for networking for other tasks in the task group [1], so it's a bit odd that we used the task.Resources struct here.  TaskRunner also uses module[2]. The task.Resources struct in 0.8 was sparsly populated, resulting to storing of 0 in port mapping env vars: module Also, updated the test values to mimic how Nomad 0.8 structs are represented, and made its result match the non compact values in module. [1] https://github.com/hashicorp/nomad/blob/24e9040b18a4f893e2f353288948a0f7cd9d82e4/client/taskenv/env.go#L624-L639 [2] https://github.com/hashicorp/nomad/blob/master/client/allocrunner/taskrunner/task_runner.go#L287-L303"
9783,fix HashiStack eBay resource link,
9784,Update hashicorp/go-msgpack/codec,To pick up the fix in https://github.com/hashicorp/go-msgpack/pull/8 .
9785,consul: Do not deregister external checks,"This commit causes sync to skip deregistering checks that are not managed by nomad, such as service maintenance mode checks.  This is handled in the same way as service registrations - by doing a Nomad specific prefix match."
9786,consul: Use a stable identifier for services,"The current implementation of Service Registration uses a hash of the nomad-internal state of a service to register it with Consul, this means that any update to the service invalidates this name and we then deregister, and recreate the service in Consul. While this behaviour slightly simplifies reasoning about service registration, this becomes problematic when we add consul health checks to a service. When the service is re-registered, so are the checks, which default to failing for at least one check period. This commit migrates us to using a stable identifier based on the allocation, task, and service identifiers, and uses the difference between the remote and local state to decide when to push updates. It uses the existing hashing mechanic to decide when UpdateTask should regenerate service registrations for providing to Sync, but this should be removable as part of a future refactor. It additionally introduces the _nomad-check- prefix for check definitions, to allow for future allowing of consul features like maintenance mode."
9787,Merge pull request #5636 from hashicorp/yishan/website-revised-resources-page,Yishan/website revised resources page
9788,Cleaned spacing for syntax consistency.,
9789,Fixed broken link to Nomad website in README,
9790,"Moved ""Webinars"" section below ""Who Uses Nomad""",
9791,use ugorji/go/codec version that's in vendor.json,
9792,codegen codecs for nomad structs,"module was ignoring any file that ends with module (or any of the letter inside module), including module!"
9793,system_sched & test cleanup comments,
9794,system_sched_test extend the test to check ineligible nodes,
9795,"system_sched when a node is filtered, don't mark failure",
9796,system_sched_test create partially constrained job,
9797,"dev/cluster meta tagged clients, raw_exec",
9798,Updated Resources Page," Rewrote overview description Reformatted ""Community"" scetion for consistency with GitHub Removed IRC (redundant with Gitter) Added ""Community Calls"" section with links to prior sessions Added ""Webinar"" section with links to prior sessions Revised Bug Tracker copy Renamed ""Tools for Provisioning & Experimentation"" to ""How to Install Nomad"" section Bumped up the ""How to Install Nomad"" section right below to second on the list ""Community"" Removed ""Videos"" & ""Blog Posts"" section in favor of accurate segmentation between user talks, webinars, blog posts Added ""Who Uses Nomad"" section in consistency with new GitHub ReadME Removed the ""Trusted By"" section and disclaimer at bottom"
9799,Update main tagline & boilerplate for Nomad,
9800,Merge pull request #5635 from hashicorp/yishan/revised-readme,Added Gitter to Resources + revised Overview in for ReadME.
9801,"Added CircleCI post, Nic's two guides, and imgix Medium post into README",
9802,Corrected installation link via Omar's input + corrected typo,
9803,Fixed link for Installing Nomad for Production,
9804,Merge pull request #5581 from hashicorp/dev-make-boostrap-git-hooks,Dev make boostrap git hooks
9805,Added Gitter to Resources + revised Overview for consistency.,
9806,Merge pull request #5621 from hashicorp/r-release-preflight,Update release/dist script with preflight
9807,add nomad streaming exec core data structures and interfaces,"In this commit, we add two driver interfaces for supporting module invocation:  A high level module, that operates on io reader/writers.   Drivers should prefer using this interface A low level module that operates on the raw stream of   input structs; useful when a driver delegates handling to driver backend (e.g.   across RPC/grpc).  The interfaces are optional for a driver, as module support is opt-in. Existing drivers continue to compile without exec support, until their maintainer add such support. Furthermore, we create protobuf structures to represent exec stream entities: module and module.  We aim to reuse the protobuf generated code as much as possible, without translation to avoid conversion overhead. module abstract fetching and sending stream entities.  It's influenced by the grpc bi-directional stream interface, to avoid needing any adapter.  I considered using channels, but the asynchronisity and concurrency makes buffer reuse too complicated, which would put more pressure on GC and slows exec operation."
9808,Add ACL capabilities for nomad exec,"This adds module capability to allow operator to execute command into a running task.  Furthermore, it adds module capability, required when the alloc task is raw_exec or a driver with no FSIsolation."
9809,drivers/mock: extract command related operations,"Extract command parsing and execution mocking into a separate struct.  Also, allow mocking of different fs_isolation for testing."
9810,test case for 5540 (#5590),  client/metrics: modified metrics to use (updated) client copy of allocation instead of (unupdated) server copy   updated armon/go-metrics to address race condition in DisplayMetrics 
9811,config_parse leave the *HCL strings in place after converting times,
9812,config_parse_test additional config confirmation w/ sample json,
9813,config comment for future changes,
9814,govendor fetch github.com/hashicorp/hcl@99e2f22,
9815,"tag HCL bookkeeping keys with json:""-"" to keep them out of the api",
9816,config_parse_test remove redundant parse direct test,
9817,config_parse remove unused multi-stage parsing via mapstructure,
9818,config_parse_test test direct hcl parsing,
9819,"agent/config, config/* mapstructure tags -> hcl tags",
9820,config_parse add new ParseConfigFileDirectHCL, parse by using hcl.Decode directly handle time.Duration strings in a second pass report unexpected keys in a third pass
9821,test helper for registering jobs with acl,Test helper that allows registration of jobs when ACL is activated.
9822,aux: helper method that returns token as well as ACL policy,"This helper returns the token as well as the ACL policy, to be used in a later commit for logging the token info associated with nomad exec invocation."
9823,Merge pull request #5630 from jweissig/patch-5,Fixed typo
9824,update 0.9.1 changelog,
9825,Merge pull request #5614 from hashicorp/dani/we-released-a-hotfix,Update CHANGELOG and version.go to reflect 0.9.1/0.9.2 split
9826,Update master to reflect 0.9.1/0.9.2 split,
9827,Fixed typo,"Fixed typo: ""dots wil be""/""dots will be""."
9828,Add config to disable preemption for batch/service jobs,
9829,Merge pull request #5618 from hashicorp/yishan/revised-readme,yishan/revised readme
9830,Addressed Dani's comments.,
9831,Update 0.9.1 links in website,
9832,Merge pull request #5623 from jweissig/patch-4,Fixed Typo
9833,Fixed Typo,Fixed typo: scheduilng/scheduling.
9834,Update release/dist script with preflight,Add a preflight check to ensure that AWS credentials is configured before creating tag.
9835,Merge pull request #5622 from hashicorp/b-divest-api-20190427,divest /api from rest of nomad internal packages
9836,divest /api from nomad/structs,"The API package needs to be independent from rest of nomad packages, to avoid leaking internal packages and dependencies (e.g. raft, ugorji, etc)"
9837,check that /api doesn't import internal nomad pkgs,
9838,CHANGELOG.md add fix line for #2619,
9839,Update README.md,
9840,Update README.md,
9841,Update README.md,
9842,Reordered guide lists + formatting with users/content.,
9843,updated hyperlinks.,
9844,Update README.md,
9845,Merge pull request #5553 from hashicorp/b-fingerprinter-manual-config,client fingerprinter doesn't overwrite manual configuration
9846,Merge pull request #5370 from hashicorp/f-windows-volume-binds,drivers/docker: Support volumes field in Windows
9847,Merge pull request #5612 from hashicorp/dani/alloc-signal-docs,Docs for module
9848,Merge pull request #5515 from hashicorp/dani/f-alloc-signal,allocs: Add nomad alloc signal command
9849,alloc_signal: Add autcompletion and cmd tests,
9850,Merge pull request #5616 from hashicorp/b-retry-logmon-start-errs-2,logmon: recover from shutting down call locally
9851,retry grpc unavailable errors even if not shutting down,
9852,try checking process status,
9853,add logging about attempts,
9854,try sleeping for stop signal to take effect,
9855,make bootstrap installs git hooks pre-push by default,
9856,"dev/hooks/pre-push refuses to push to master, still checks oss",
9857,add a test that simulates logmon dying during Start() call,
9858,logmon: retry starting logmon if it exits,"Retry if we detect shutting down during Start() api call is started, locally."
9859,logmon client to handle grpc closing errors,
9860,Update CHANGELOG.md,
9861,driver/docker: Support module field in Windows,"Support Docker module field in Windows.  Previously, volumes parser assumed some Unix-ism (e.g. didn't expect module in mount paths). Here, we use the Docker parser to identify host and container paths. Docker parsers use different validation logic from our previous unix implementation: Docker parser accepts single path as a volume entry (parsing it as a container path with auto-created volume) and enforces additional checks (e.g. validity of mode).  Thereforce, I opted to use Docker parser only for Windows, and keep Nomad's linux parser to preserve current behavior."
9862,vendor docker/docker volume utils,
9863,docs: Fix copy/paste error in alloc-restart docs,
9864,docs: Add nomad alloc signal docs,
9865,Merge pull request #5609 from hashicorp/b-docker-tty-logs,driver/docker: collect tty container logs
9866,allocs: Add nomad alloc signal command,"This command will be used to send a signal to either a single task within an allocation, or all of the tasks if  is omitted. If the sent signal terminates the allocation, it will be treated as if the allocation has crashed, rather than as if it was operator-terminated. Signal validation is currently handled by the driver itself and nomad does not attempt to restrict or validate them."
9867,Merge pull request #5597 from hashicorp/dani/doc-alloc-stop,Documentation for module
9868,driver/docker: collect tty container logs,"Fixes https://github.com/hashicorp/nomad/issues/5475 When container is a tty container, we need to get raw terminal output without any additional processing."
9869,Merge pull request #5602 from hashicorp/normalized-plan,Normalize plan to increase the plan apply throughput
9870,Merge pull request #5607 from ArangoGutierrez/website_singularity,singularity_path -> singularity_cache
9871,Minor typo fix,
9872,Change min version required for plan optimization,
9873,Return error when preempted/stopped alloc doesn't exist during denormalization,
9874,Merge pull request #5594 from hashicorp/f-ui-preemptions,UI: Preemptions
9875,singularity_path -> singularity_cache,Signed-off-by: Eduardo Arango link
9876,Merge pull request #5606 from hashicorp/docs-ea-update-0.9,Docs ea update 0.9
9877,structs_test use testify require.True instead of t.Fatal,
9878,"Add comments to functions, and use require instead of assert",
9879,Remove allowPlanOptimization from schedulers,
9880,Compat tags,
9881,Add tests for plan normalization,
9882,Add code for plan normalization,
9883,update vendor/github.com/hashicorp/hcl,
9884,Merge pull request #5599 from hashicorp/docs-091rc1,docs: add download link to 0.9.1-rc1
9885,docs: add download link to 0.9.1-rc1,
9886,website: add plugin docs (#5501),website: add plugin docs
9887,website: fixs a few errors in new plugin docs,
9888,Merge pull request #5598 from hashicorp/b-dont-forward-logs,fix crash when executor parent nomad process dies
9889,fix crash when executor parent nomad process dies,"Fixes https://github.com/hashicorp/nomad/issues/5593 Executor seems to die unexpectedly after nomad agent dies or is restarted.  The crash seems to occur at the first log message after the nomad agent dies. To ease debugging we forward executor log messages to executor.log as well as to Stderr.  module sets up plugins with Stderr pointing to a pipe being read by plugin client, the nomad agent in our case[1]. When the nomad agent dies, the pipe is closed, and any subsequent executor logs fail with ErrClosedPipe and SIGPIPE signal.  SIGPIPE results into executor process dying. I considered adding a handler to ignore SIGPIPE, but hc-log library currently panics when logging write operation fails[2] This we opt to revert to v0.8 behavior of exclusively writing logs to executor.log, while we investigate alternative options. [1] https://github.com/hashicorp/nomad/blob/v0.9.0/vendor/github.com/hashicorp/go-plugin/client.go#L528-L535 [2] https://github.com/hashicorp/nomad/blob/v0.9.0/vendor/github.com/hashicorp/go-hclog/int.go#L320-L323"
9890,api docs: Add allocation stop,
9891,docs: Add documentation for,
9892,changelog: Update for GH-5512 and GH-5577,
9893,Merge pull request #5512 from hashicorp/dani/f-alloc-stop,alloc-lifecycle: nomad alloc stop
9894,allocs: Add nomad alloc stop,This adds a module command that can be used to stop and force migrate an allocation to a different node. This is built on top of the AllocUpdateDesiredTransitionRequest and explicitly limits the scope of access to that transition to expose it under the alloc-lifecycle ACL. The API returns the follow up eval that can be used as part of monitoring in the CLI or parsed and used in an external tool.
9895,Updated serializer unit tests,
9896,Test coverage for preemption on the client detail page,
9897,Test coverage for preemption on the allocation detail page,
9898,Preemption modeling as page objects,
9899,Integration test for the alloc row icon,
9900,Add preemption properties to Mirage allocation factory,
9901,Show which allocations an allocation preempted on the alloc page,
9902,"Show which alloc, if any, preempted an alloc on the alloc detail page",
9903,Preemptions count and filtering on client detail page,Show the count in the allocations table next to the existing total alloc count badge. Clicking either will filter by all or by preemptions.
9904,Add preempted icon to alloc row,
9905,Make sure tooltips show up over the top of the side bar,
9906,Add wasPreempted bool to allocs,
9907,Show preemptions on the job plan phase of job submission,
9908,Data modeling for preemptions,
9909,Merge pull request #5591 from hashicorp/cgbaker/changelog,changelog: added entry for #5540 fix
9910,Merge pull request #5586 from hashicorp/docs-deploy-ver,docs: bump deployment guide to 0.9.0
9911,changelog: added entry for #5540 fix,
9912,Merge pull request #5541 from hashicorp/b/5540-bad-client-alloc-metrics,client/metrics: fixed stale metrics
9913,Merge pull request #5577 from hashicorp/dani/b-logmon-unrecoverable,logging: Attempt to recover logmon failures
9914,tweak logging level for failed log line,Co-Authored-By: notnoop link
9915,client/metrics: modified metrics to use (updated) client copy of allocation instead of (unupdated) server copy,
9916,tests over setwise equality of fingerprinted parts,
9917,docs: bump deployment guide to 0.9.0,
9918,structs need to keep assert Equal interface implementation for tests,
9919,structs equals use labeled continue for clarity,
9920,struct equals use a working pattern for setwise comparison,
9921,client fingerprinter doesn't overwrite manual configuration,"Revert ""Revert accidental merge of pr #5482"" This reverts commit c45652ab8c113487b9d4fbfb107782cbcf8a85b0."
9922,Merge pull request #5583 from ygersie/fingerprint_nilpointer,fix nil pointer in fingerprinting AWS env leading to crash
9923,Merge pull request #5437 from hashicorp/r-upstream-libcontainer-plain,Use upstream libcontainer package
9924,comment on using init() for libcontainer handling,
9925,comment what  refer to,
9926,Move libcontainer helper to executor package,
9927,vendor upstream opencontainers/runc,
9928,Merge pull request #5585 from hashicorp/b-drivers-node-registration,client: wait for batched driver updates before registering nodes
9929,clarify cryptic log line,
9930,client: log detected driver health state,"Noticed that module log line was misleading - when a driver doesn't fingerprint before timeout, their health status is empty string module which we would mark as detected. Now, we log all drivers along with their state to ease driver fingerprint debugging."
9931,client: avoid registering node twice right away,"I noticed that module almost immediately after module calls module, well after 5 seconds. This call is unnecessary and made debugging a bit harder.  So here, we ensure that we only re-register node for new node events, not for initial registration."
9932,Update CHANGELOG.md,
9933,client: wait for batched driver updated,"Here we retain 0.8.7 behavior of waiting for driver fingerprints before registering a node, with some timeout.  This is needed for system jobs, as system job scheduling for node occur at node registration, and the race might mean that a system job may not get placed on the node because of missing drivers. The timeout isn't strictly necessary, but raising it to 1 minute as it's closer to indefinitely blocked than 1 second.  We need to keep the value high enough to capture as much drivers/devices, but low enough that doesn't risk blocking too long due to misbehaving plugin. Fixes https://github.com/hashicorp/nomad/issues/5579"
9934,fix nil pointer in fingerprinting AWS env leading to crash,HTTP Client returns a nil response if an error has occured. We first   need to check for an error before being able to check the HTTP response   code.
9935,Merge pull request #5580 from hashicorp/f-api-preemption-info,Add preemption related fields to AllocationListStub
9936,Add preemption related fields to AllocationListStub,
9937,Merge pull request #5572 from hashicorp/dani/b-docker-volumes,Switch to pre-0.9 behaviour for handling volumes
9938,Merge pull request #5573 from hashicorp/dani/update-vol-docs,docs: Clarify docker volume behaviour
9939,Switch to pre-0.9 behaviour for handling volumes,"In Nomad 0.9, we made volume driver handling the same for module, and module volumes. Prior to Nomad 0.9 however these had slightly different behaviour for relative paths and named volumes. Prior to 0.9 the empty string would expand relative paths within the task dir, and module volumes that are not absolute paths would be treated as docker named volumes. This commit reverts to the previous behaviour as follows: | Nomad Version | Driver  |   Volume Spec    | Behaviour                 | |------------------------------------------------------------------------- | all           | """"      | testing:/testing | allocdir/testing          | | 0.8.7         | ""local"" | testing:/testing | ""testing"" as named volume | | 0.9.0         | ""local"" | testing:/testing | allocdir/testing          | | 0.9.1         | ""local"" | testing:/testing | ""testing"" as named volume |"
9940,loggging: Attempt to recover logmon failures,"Currently, when logmon fails to reattach, we will retry reattachment to the same pid until the task restart specification is exhausted. Because we cannot clear hook state during error conditions, it is not possible for us to signal to a future restart that it shouldn't attempt to reattach to the plugin. Here we revert to explicitly detecting reattachment seperately from a launch of a new logmon, so we can recover from scenarios where a logmon plugin has failed. This is a net improvement over the current hard failure situation, as it means in the most common case (the pid has gone away), we can recover. Other reattachment failure modes where the plugin may still be running could potentially cause a duplicate process, or a subsequent failure to launch a new plugin. If there was a duplicate process, it could potentially cause duplicate logging. This is better than a production workload outage. If there was a subsequent failure to launch a new plugin, it would fail in the same (retry until restarts are exhausted) as the current failure mode."
9941,Merge pull request #5559 from ArangoGutierrez/website_docs_singularity,list singularity as a community driver
9942,fixed header level,
9943,docs: Clairfy docker volume behaviour,
9944,Merge pull request #5568 from hashicorp/b-nomad-logger-restart,"Fixes #5566 . Fix a case where docker logging process may lock up nomad agent restart. Looks like we have a case where docker logger is started even through logmon isn't. In such case, the fifo writer blocks indefinitely and because the open operation happens in the main goroutine, nomad agent blocks indefinitely. This fixes the issue where the fifo open operation happens in goroutine instead of main goroutine. We should follow up independently to ensure logmon <-> dockerlogger ordering and consider having task recovery happen in non-main goroutine with some sensible timeouts."
9945,resolve merge conflicts,Signed-off-by: Eduardo Arango link
9946,address @cgbaker comments,Signed-off-by: Eduardo Arango link
9947,Merge pull request #5479 from hashicorp/b-vault-renewal,vault: fix renewal time
9948,changelog: add #5479,
9949,vault: fix data races,
9950,vault: fix renewal time,"Renewal time was being calculated as 10s+Intn(lease-10s), so the renewal time could be very rapid or within 1s of the deadline: [10s, lease) This commit fixes the renewal time by calculating it as: module For a lease of 60s this means the renewal will occur in [20s, 40s)."
9951,locking and opening streams in goroutine comment,
9952,open fifo on background goroutine,
9953,Merge pull request #5518 from hashicorp/f-simplify-kill,client: simplify kill logic
9954,Merge pull request #5486 from hashicorp/b-validate-migrate,api: fix migrate stanza initialization
9955,Merge pull request #5565 from hashicorp/dani/alloc-restart-docs,docs: Add docs for nomad-alloc-restart
9956,docs: Add docs for nomad-alloc-restart,
9957,Update singularity.html.md,
9958,Merge pull request #5560 from hashicorp/f-3251-cli-force-periodic,cli: add support for periodic force evaluation
9959,Update CHANGELOG,Add module and module
9960,Merge branch 'website_docs_singularity' of github.com:ArangoGutierrez/nomad into website_docs_singularity,
9961,"address requestec changes, iteration 1",Signed-off-by: Eduardo Arango link
9962,gofmt/goimport and test formatting,
9963,changes to appease gofmt,
9964,minor typographical changes,
9965,cli: add support for periodic force evaluation,resolves #3251
9966,Merge pull request #5558 from hashicorp/b-ui-make-tests-faster,UI: Make tests faster
9967,Merge pull request #5556 from hashicorp/nmd-1403-vault-namespace-task-env,vault namespaces: inject VAULT_NAMESPACE alongside VAULT_TOKEN
9968,list singularity as a community driver,Signed-off-by: Eduardo Arango link
9969,Merge pull request #5545 from hashicorp/f-preemption-scheduler-refactor,Refactor scheduler package to enable preemption for batch/service jobs
9970,Merge pull request #5557 from hashicorp/nmd-1409-cli-acl-token-list,"cli: add module command, documentation"
9971,"cli: add module command, documentation","docs: fix some incorrect acl policy docs (typos, copy-paste errors)"
9972,remove stray new line,
9973,vault namespaces: inject VAULT_NAMESPACE alongside VAULT_TOKEN + documentation,
9974,Speed up slow acceptance tests with shallow jobs and generally less models,
9975,Introduce the concept of 'shallow' job models in Mirage,
9976,Reduce the number of task groups and task events that are made,
9977,Merge pull request #5505 from nfagerlund/mar19_middleman_update,website: Update hashicorp-middleman container to v0.3.39
9978,api: fix migrate stanza initialization,Fixes Migrate to be initialized like RescheduleStrategy. Fixes #5477
9979,Merge pull request #5551 from hashicorp/b-revert-fingerprinter-manual-config,Revert accidental merge of pr #5482
9980,Revert accidental merge of pr #5482,"Revert ""fingerprint Constraints and Affinities have Equals, as set"" This reverts commit 596f16fb5f1a4a6766a57b3311af806d22382609. Revert ""client tests assert the independent handling of interface and speed"" This reverts commit 7857ac5993a578474d0570819f99b7b6e027de40. Revert ""structs missed applying a style change from the review"" This reverts commit 658916e3274efa438beadc2535f47109d0c2f0f2. Revert ""client, structs comments"" This reverts commit be2838d6baa9d382a5013fa80ea016856f28ade2. Revert ""client fingerprint updateNetworks preserves the network configuration"" This reverts commit fc309cb430e62d8e66267a724f006ae9abe1c63c. Revert ""client_test cleanup comments from review"" This reverts commit bc0bf4efb9114e699bc662f50c8f12319b6b3445. Revert ""client Networks Equals is set equality"" This reverts commit f8d432345b54b1953a4a4c719b9269f845e3e573. Revert ""struct cleanup indentation in RequestedDevice Equals"" This reverts commit f4746411cab328215def6508955b160a53452da3. Revert ""struct Equals checks for identity before value checking"" This reverts commit 0767a4665ed30ab8d9586a59a74db75d51fd9226. Revert ""fix client-test, avoid hardwired platform dependecy on lo0"" This reverts commit e89dbb2ab182b6368507dbcd33c3342223eb0ae7. Revert ""refactor error in client fingerprint to include the offending data"" This reverts commit a7fed726c6e0264d42a58410d840adde780a30f5. Revert ""add client updateNodeResources to merge but preserve manual config"" This reverts commit 84bd433c7e1d030193e054ec23474380ff3b9032. Revert ""refactor struts.RequestedDevice to have its own Equals"" This reverts commit 689782524090e51183474516715aa2f34908b8e6. Revert ""refactor structs.Resource.Networks to have its own Equals"" This reverts commit 49e2e6c77bb3eaa4577772b36c62205061c92fa1. Revert ""refactor structs.Resource.Devices to have its own Equals"" This reverts commit 4ede9226bb971ae42cc203560ed0029897aec2c9. Revert ""add COMPAT(0.10): Remove in 0.10 notes to impl for structs.Resources"" This reverts commit 49fbaace5298d5ccf031eb7ebec93906e1d468b5. Revert ""add structs.Resources Equals"" This reverts commit 8528a2a2a6450e4462a1d02741571b5efcb45f0b. Revert ""test that fingerprint resources are updated, net not clobbered"" This reverts commit 8ee02ddd23bafc87b9fce52b60c6026335bb722d."
9981,Merge pull request #5550 from hashicorp/cgbaker/update-terraform,More terraform updates
9982,"terraform: modified default client instance type to a more reasonable t2.medium, left commented GPU instance type",
9983,"terraform/packer: revert name of AMI to generic ""hashistack"" instead of my name",
9984,"fingerprint Constraints and Affinities have Equals, as set",
9985,client tests assert the independent handling of interface and speed,
9986,structs missed applying a style change from the review,
9987,"client, structs comments",
9988,client fingerprint updateNetworks preserves the network configuration,
9989,client_test cleanup comments from review,
9990,client Networks Equals is set equality,
9991,struct cleanup indentation in RequestedDevice Equals,
9992,struct Equals checks for identity before value checking,
9993,"fix client-test, avoid hardwired platform dependecy on lo0",
9994,refactor error in client fingerprint to include the offending data,
9995,add client updateNodeResources to merge but preserve manual config,
9996,refactor struts.RequestedDevice to have its own Equals,
9997,refactor structs.Resource.Networks to have its own Equals,NodeResource.Networks uses the same function
9998,refactor structs.Resource.Devices to have its own Equals,
9999,add COMPAT(0.10): Remove in 0.10 notes to impl for structs.Resources,
10000,add structs.Resources Equals,
10001,"test that fingerprint resources are updated, net not clobbered",
10002,Merge pull request #5548 from hashicorp/cgbaker/update-terraform,"Update terraform, add nvidia example"
10003,Update setup.sh,
10004,example: nvidia tensorrt example using GPU device plugin,
10005,terraform: work on terraform setup,* support for 0.9.0 * ELB for servers * better output * customizable security groups * nvidia-docker support * different server/client instance types
10006,Merge pull request #5502 from hashicorp/dani/f-alloc-restart,alloc-lifecycle: nomad alloc restart
10007,allocs: Add nomad alloc restart,"This adds a module command and api that allows a job operator with the alloc-lifecycle acl to perform an in-place restart of a Nomad allocation, or a given subtask."
10008,Merge pull request #5516 from hashicorp/dani/f-verbose-status,Allow passing -verbose to meta status
10009,status: Allow passing -verbose to meta status,A common issue when using nomad is needing to add in the object verb to a command to include the module flag. This commit allows users to pass module via the module alias by adding a placeholder boolean in the metacommand which allows subcommands to parse the flag.
10010,Merge pull request #5500 from hashicorp/f-acl-alloc-lifecycle,acl: Add alloc-lifecycle namespace capability
10011,Refactor scheduler package to enable preemption for batch/service jobs,
10012,Merge pull request #5544 from hashicorp/f-ui-ember-v3,UI: Ember 2.18 → 3.4 Take two
10013,Force Travis to use node 10,
10014,Upgrade Yarn,
10015,"Upgrade to Node 10, latest LTS",
10016,Don't remove viewBox from svgs as part of svgo,
10017,Upgrade ember-concurrency,
10018,"Major upgrade, ember-cli-sass; swiches to sass-dart",
10019,Upgrade third party packages,
10020,Upgrade eslint to v5,
10021,Upgrade ember addons,
10022,Manually upgrade fringe dependencies,
10023,Update everything to work with the mirage backwards incompat,
10024,Auto-upgrade packages,
10025,Rethink the adapter job unit tests to avoid notifyPropertyChange,
10026,ES5 getters codemod,
10027,Kind of address the sendAction deprecation,
10028,Address the Ember.Logger deprecations,
10029,Address the copy/copyable deprecation,
10030,Commit the deprecation workflow to prevent fixed deprecations from creeping back in,
10031,Address inflector deprecations,
10032,Address test failures,
10033,Address template linting issues,
10034,Override default template lintrc (borrowed this one from vault),
10035,Upgrade miscellaneous packages,
10036,Update ember-data-model-fragments,
10037,Upgrade to Ember 3.4,
10038,Remove all andThen and .then usages (except for integration tests),"Since a future ember version does way with the need to manually making runloop runs, I'm holding off on those tests"
10039,Fix bug in the stats-tracker-frame-mising behavior,
10040,Fix integration tests that had test failures,
10041,Fix page object issues with acceptance tests that couldn't be codemodded,
10042,Adapt the codemirror helper for the hooks model,
10043,Fix scoping issue with the jobs list page object,
10044,Update the test index.html file,
10045,Upgrade ember-power-select,
10046,Update serializer unit tests to use module instead of custom code,
10047,Update adapter tests to use module instead of custom code,
10048,Update test-helper to new testing style,
10049,Update environment to 3.0 conventions,
10050,Critical peer dependency upgrades,
10051,Use mirage test hooks,
10052,Fix a bunch of snowflake situations the codemod missed,
10053,Ember test-helpers codemod,
10054,Ember QUnit Codemod,
10055,Modules codemod + prettier,
10056,Fix eslint error and add lint script to package.json,
10057,Upgrade to Ember 3.0,
10058,Fix deprecations,
10059,add community section under task drivers and sync name with device plugins (#5542),  add community section under task drivers and sync name with device plugins   reword heading 
10060,Merge pull request #5537 from hashicorp/b-nonvidia-flag,Allow compiling without nvidia integration
10061,Update CHANGELOG.md,
10062,Merge pull request #5539 from hashicorp/cgbaker/vault-namespaces-changelog,include vault namespace work in changelog
10063,include vault namespace work in changelog,
10064,Merge pull request #5538 from hashicorp/0.9.1-dev,Merge 0.9.1 dev branch to master
10065,Merge pull request #5534 from hashicorp/r-fix-appveyor-20190409,ci: move docker unix-y test
10066,add .idea (GoLand) directory to .gitignore,
10067,"server vault client: use two vault clients, one with namespace, one without for /sys calls",
10068,agent config: cleaner VAULT_ env lookup,
10069,vault client test: minor formatting,vendor: using upstream circonus-gometrics
10070,Update nomad/structs/config/vault.go,Co-Authored-By: cgbaker link
10071,vault e2e: pass vault version into setup instead of having to infer it from test name,
10072,taskrunner: removed some unecessary config from a test,
10073,e2e/vault: updated e2e vault tests to use version-specific policy creation endpoint (old servers are not compatible with new client),
10074,"docs: -vault-namespace, VAULT_NAMESPACE, and config",agent: added VAULT_NAMESPACE env-based configuration
10075,client: gofmt,
10076,taskrunner: pass configured Vault namespace into TaskTemplateConfig,
10077,vendor: updated consul-template and downstream,consul-template -> v0.20.0 consul/api -> v1.2.1 vault/api -> v1.0.3 go-retryablehttp -> v0.5.2 circonus-gometrics: modified local source for compat with go-retryablehttp
10078,"wip: added config parsing support, CLI flag, still need more testing, VAULT_ var, documentation",
10079,config/docs: added module to vault config,"server/client: process module config, setting on the instantiated vault client"
10080,"""job revert"" command: alphabetized flags",
10081,Update nomad/job_endpoint_test.go,Co-Authored-By: cgbaker link
10082,Update website/source/docs/commands/job/revert.html.md.erb,Co-Authored-By: cgbaker link
10083,Update nomad/job_endpoint.go,Co-Authored-By: cgbaker link
10084,Update api/jobs.go,Co-Authored-By: cgbaker link
10085,"docs: added vault token documentation to module command, documented VaultToken field of api.JobRevertRequest",
10086,cli: plumbed vault token from job revert command through API call,
10087,server/job_endpoint: accept vault token and pass as part of Job.RegisterRequest [#4555],
10088,Replaces .columns with .toolbar on the clients page,
10089,Replace the columns pattern with the new toolbar pattern on the jobs page,
10090,New toolbar CSS component,
10091,Make the search box more elastic," Set a higher max-width Set a min-width Remove the min-width on mobile, including the invisible size=""20"" in    the markup"
10092,Fixes a few minor issues with the multiselect dropdown, Label no longer bleeds into the downward arrow icon The selection number no longer breaks onto its own line Options have a min-width so short labels can't result in small click    targets
10093,Change breakpoints to match Nomad/Bulma widths,
10094,Add the ember-responsive addon,
10095,Improve the search box component to make it fluid and iconed,
10096,Remove redundant assertion and replace regex matches with require,
10097,Don't display node name if output isn't verbose. Add tests.,
10098,Add NodeName to the alloc/job status outputs.,Currently when operators need to log onto a machine where an alloc is running they will need to perform both an alloc/job status call and then a call to discover the node name from the node list. This updates both the job status and alloc status output to include the node name within the information to make operator use easier. Closes #2359 Cloess #1180
10099,Test coverage for clients faceted search,
10100,Implement faceted search on the clients page,
10101,Add nodeClass to the node model,
10102,Refactor qp helpers from the jobs faceted search,
10103,Changes from code review,
10104,Make the facet filter function clearer with more brackets,
10105,Simplify options and selection names,
10106,Test coverage for job list facets,
10107,Model facets in the page object,
10108,Introduce encode/decode for array query params,
10109,Support for the no options case,
10110,Implement the job list filtering based on facet selection,
10111,Implement the dynamic facet lists (datacenters and prefixes),
10112,Scaffold the facets and facet options for the jobs list page,
10113,Remove the includes helper in favor of the contains helper,
10114,Harden dropdown styles to avoid accidental cascading,
10115,Add the right-alignment case to freestyle,
10116,Always left-align the dropdown position to the trigger,
10117,Test coverage for the multi-select-dropdown component,
10118,Tab and keyboard navigation for multi-select,
10119,Round out the freestyle entry,
10120,Multi-select button-bar support,
10121,Color alias for tags,
10122,Persistence and onSelect handler for the multi-select-dropdown,
10123,Templating and styling the multi-select-dropdown component,
10124,Simple includes helper that works like Array#includes,
10125,Freestyle entry for the new multi-select-dropdown component,
10126,Allow compiling without nvidia integration,"nvidia library use of dynamic library seems to conflict with alpine and musl based OSes.  This adds a module tag to allow compiling nomad for alpine images. The nomad releases currently only support glibc based OS environments, so we default to compiling with nvidia."
10127,ci: move docker unix-y test,"Fix AppVeyor failing builds, by moving docker image url test to run on unix systems only.  The used paused image is a linux image only, not available on Windows."
10128,Nomad TLS with Vault (#5454),"  navigation and initial steps of guide   generate certs with appropriate token   configure Nomad to use TLS   add cli keys and certs   add server gossip encryption section   fix mislabeled steps   vault paths formatting   remove bit about cert revocation   add clarification in challenge that we will be securing an existing Nomad cluster   add some comments to consul-template.hcl to help user walk through it   clarifying comments for CLI certs templates   reorganize steps, change permissions on certs, and sub pkill command with systemctl reload nomad   correct step reference   add rpc upgrade mode instructions   correct typo "
10129,website: remove RC note from download page,
10130,Bump website to 0.9.0,
10131,Bump to 0.9.1-dev,
10132,Release v0.9.0,
10133,Generate files for 0.9.0 release,
10134,scripts: better prerelease extractor,
10135,Merge pull request #5524 from hashicorp/docs-remove-beta-tag,Remove beta tags from 0.9 docs
10136,Merge pull request #5523 from hashicorp/upgrade_e2e,scripts for upgrade testing
10137,Remove beta tags from 0.9 docs,
10138,Merge pull request #5521 from hashicorp/b-docker-image-https,drivers/docker: fix image name handleing when prefixed with https://
10139,scripts for upgrade testing,
10140,drivers/docker: fix image name handleing when prefixed with https://,
10141,client: simplify kill logic,Remove runLaunched tracking as Run is always called for killable TaskRunners. TaskRunners which fail before Run can be called (during NewTaskRunner or Restore) are not killable as they're never added to the client's alloc map.
10142,Bump download page to 0.9.0-rc2,
10143,Remove 0.9.0-rc2 generated files,
10144,Release v0.9.0-rc2,
10145,Generate files for 0.9.0-rc2 release,
10146,small tweaks to load test jobs to make them work in Nomad 0.8.7,
10147,Merge pull request #5511 from hashicorp/b-executor-path-executable,"This is a follow up work to https://github.com/hashicorp/nomad/pull/4813 to fix #4809 and fix a regression introduced in 0.9 in marking files in libcontainer executable. 4809 bug is that module uses module when not inspecting task dir files.  module only returns a file if it's already marked as an executable path in https://github.com/golang/go/blob/go1.12.1/src/os/exec/lp_unix.go#L24-L27 .  This affects raw exec as if passed an absolute path to file, module returns an error if file isn't already an executable.  This explains why the error manifests when an absolute interpolated path is used (e.g. module) but not when using a task rel dir (e.g. module) in the above examples used in ticket. PR #4813 remedied this problem for raw exec but inadvertably broke libcontainer executor, as it made module returns the paths to host files rather than ones found inside chroot. This PR reorders the evaluation, so we go back to 0.8 behavior of looking up task directories first, but then check for host paths before using module. This PR is broken into three commits to illustrate evolution and confirming hypothesis: 1. 9adab75ac84b5c2a7b84702fae02c2484abb50ad : Adding a test illustrating how libcontainer executor fails at marking processes as executable in https://travis-ci.org/hashicorp/nomad/jobs/514942694 - note that the test doesn't depend on artifacts or interpolated paths 2. d441cdd52f68912e96dc7ee5baf2dcddb0ac8caa: reverting PR #4809 and showing the test fail now with raw_exec case (as expected) in https://travis-ci.org/hashicorp/nomad/jobs/514944065 2. 244544b735a8dbac0e14e7ee85e12a39780cbbb9: in where we add the check in appropriate place next to module for absolute paths and have a green job in https://travis-ci.org/hashicorp/nomad/jobs/514945024 Future work Inspecting module in 0.8 and 0.9 case, we have a bug in using module for the libcontainer executor case.  We should be looking up paths based on the container chroot and container PATH rather than the host's.  However, this is not a 0.9.0 regression and was present in 0.8; so punting to fix it post 0.9."
10148,an alternative order,
10149,try not without checking stat first,
10150,basic test for #4809,
10151,Merge pull request #5504 from hashicorp/b-exec-path,executor/linux: make chroot binary paths absolute
10152,executor/linux: comment this bizarre code,
10153,"Revert ""executor/linux: add defensive checks to binary path""",This reverts commit cb36f4537e63d53b198c2a87d1e03880895631bd.
10154,Merge pull request #5503 from hashicorp/docs-nomad-oss-debug,Mention nomad-oss-debug in issue template
10155,Mention nomad-oss-debug in issue template,Also reordered the sections to put the logs at the end.
10156,Merge pull request #5510 from hashicorp/b-docker-stats,docker: fix send after close panic in stats
10157,executor/linux: add defensive checks to binary path,
10158,docker: improve stats names and comments,
10159,Update drivers/docker/stats.go comment,Co-Authored-By: schmichael link
10160,docker: fix send after close panic in stats,"destCh was being written to by one goroutine and closed by another goroutine. This panic occurred in Travis: ``` === FAIL: drivers/docker TestDockerCoordinator_ConcurrentPulls (117.66s) === PAUSE TestDockerCoordinator_ConcurrentPulls === CONT  TestDockerCoordinator_ConcurrentPulls panic: send on closed channel goroutine 5358 [running]: github.com/hashicorp/nomad/drivers/docker.dockerStatsCollector(0xc0003a4a20, 0xc0003a49c0, 0x3b9aca00)     /home/travis/gopath/src/github.com/hashicorp/nomad/drivers/docker/stats.go:108 +0x167 created by github.com/hashicorp/nomad/drivers/docker.TestDriver_DockerStatsCollector     /home/travis/gopath/src/github.com/hashicorp/nomad/drivers/docker/stats_test.go:33 +0x1ab ``` The 2 ways to fix this kind of error are to either (1) add extra coordination around multiple goroutines writing to a chan or (2) make it so only one goroutines writes to a chan. I implemented (2) first as it's simpler, but @notnoop pointed out since the same destCh in reused in the stats loop there's now a double close panic possible! So this implements (1) by adding a *usageSender struct for handling concurrent senders and closing."
10161,Merge pull request #5508 from hashicorp/d-docker-force-pull-latest,document force_pull and :latest tag interaction
10162,document force_pull and :latest tag interaction,
10163,added cpu/disk/memory stress jobs for e2e tests,
10164,website: Update hashicorp-middleman container to v0.3.39,This updates some dependencies with known issues. It does not appear to change any website behavior. The Gemfile.lock update is based on what's currently installed in the container. https://github.com/hashicorp/middleman-hashicorp/compare/v0.3.35..v0.3.39
10165,executor/linux: make chroot binary paths absolute,Avoid libcontainer.Process trying to lookup the binary via $PATH as the executor has already found where the binary is located.
10166,Merge pull request #5499 from hashicorp/r-fifo-plain-file,fifo: Use plain fifo file in Unix
10167,comment configureTLogging,
10168,rename fifo methods for clarity,
10169,clarify closeDone blocking and field name,
10170,Added nginx to e2e test,
10171,no requires in a test goroutine,
10172,Merge pull request #5496 from hashicorp/b-ui/reattach-resources-to-stats-trackers,UI: Reattach resources to stats trackers in the event they were destroyed
10173,avoid opening files just to close them,
10174,Add test cases for waiting on children,"Also, make the test use files just like in the non-test case."
10175,log when fifo fails to open,
10176,run fifo tests on Windows,
10177,fifo: Use plain fifo file in Unix,"This PR switches to using plain fifo files instead of golang structs managed by containerd/fifo library. The library main benefit is management of opening fifo files.  In Linux, a reader module request would block until a writer opens the file (and vice-versa).  The library uses goroutines so that it's the first IO operation that blocks. This benefit isn't really useful for us: Given that logmon simply streams output in a separate process, blocking of opening or first read is effectively the same. The library additionally makes further complications for managing state and tracking read/write permission that seems overhead for our use, compared to using a file directly. Looking here, I made the following incidental changes: * document that we do handle if fifo files are already created, as we rely on that behavior for logmon restarts * use type system to lock read vs write: currently, fifo library returns module even if fifo is opened for writing only!"
10178,Merge pull request #5497 from hashicorp/b-exec-cpu-stats,exec: report cpu usage summary stat
10179,Remove unnecessary step in getting node client,All allocation stats are routable from the server
10180,acl: Add alloc-lifecycle namespace capability,"This capability will gate access to features that allow interacting with a running allocation, for example, signalling, stopping, and rescheduling specific allocations."
10181,Merge pull request #5468 from hashicorp/b-test-exec-kill-wait,Adding tests for killing task without grace
10182,Update drivers/shared/executor/executor_test.go,Co-Authored-By: notnoop link
10183,Add e2e test with raw exec job for verifying allocation resource stats,
10184,Simplify proto conversion and handle swap,"Convert all cpu and memory usage fields regardless of stated measured fields, and handle swap fields"
10185,deserialize total ticks,
10186,Always report TotalTicks when percent is measured,"Fix a case where TotalTicks doesn't get serialized across executor grpc calls. Here, I opted to implicit add field, rather than explicitly mark it as a measured field, because it's a derived field and to preserve 0.8 behavior where total ticks aren't explicitly marked as a measured field."
10187,Reattach resources to stats trackers in the event they were destroyed,
10188,Merge pull request #5491 from hashicorp/b-docker-container-name,docker: restore pre-0.9 container names
10189,docker: restore pre-0.9 container names,"As far as I can tell Nomad itself does not use the container name after container creation, so this should be safe. OP: https://groups.google.com/d/topic/nomad-tool/kYkyERfVRXE/discussion v0.8.7 code: https://github.com/hashicorp/nomad/blob/v0.8.7/client/driver/docker.go#L1530-L1531"
10190,Add go.mod/go.sum (#5493),
10191,Divest api/ package of deps elsewhere in the nomad repo. (#5488)," Divest api/ package of deps elsewhere in the nomad repo.  This will allow making api/ a module without then pulling in the external repo, leading to a package name conflict. This required some migration of tests to an apitests/ folder (can be moved anywhere as it has no deps on it). It also required some duplication of code, notably some test helpers from api/ -> apitests/ and part (but not all) of testutil/ -> api/testutil/. Once there's more separation and an e.g. sdk/ folder those can be removed in favor of a dep on the sdk/ folder, provided the sdk/ folder doesn't depend on api/ or /.   Also remove consul dep from api/ package   Fix stupid linters   Some restructuring "
10192,Merge pull request #5480 from hashicorp/docs-centos6,docs: mention support for centos6 is dropped
10193,Merge pull request #5489 from hashicorp/b-plugin-config-bugfix,Fix json parsing bug with plugins that don't provide args
10194,Address review comments,
10195,fix linting,
10196,Fix json parsing bug with plugins that don't provide args,This fixes a bug with JSON agent configuration parsing where the AST for the plugin stanza had unnecessary flattening originating from hcl parsing library. The workaround fixes the AST by popping off the flattened element and wrapping it in a list. The workaround comes from similar code in terraform. There were no existing test cases for json parsing so I added a few.
10197,Merge pull request #5478 from hashicorp/b-e2e_metrics,Use specific url prefix for metrics test
10198,docs: mention support for centos6 is dropped,
10199,Use specific url prefix for metrics test,Also changed the output to show client node IP addresses
10200,Merge pull request #5474 from briancain/fix-mixed-intend,Fixup mixed tabs in script for Vagrantfile demo
10201,Fixup mixed tabs in script for Vagrantfile demo,This commit replaces a hard tab with two spaces to match the intendation of the rest of the defined script
10202,Merge pull request #5473 from hashicorp/f-spread-docs-fix,minor fixes to spread stanza documentation
10203,minor fixes to spread stanza documentation,
10204,fix test setup,
10205,test kill wait,
10206,clarify unknown signal log line (#5466),
10207,Merge pull request #5456 from hashicorp/test-taskenv,tests: port pre-0.9 task env tests
10208,tests: port pre-0.9 task env tests,I chose to make them more of integration tests since there's a lot more plumbing involved. The internal implementation details of how we craft task envs can now change and these tests will still properly assert the task runtime environment is setup properly.
10209,Merge pull request #5460 from hashicorp/test-skip-clientstate,test: properly skip client state in beforeall
10210,Merge pull request #5457 from hashicorp/r-skip-prerelease-check,release: skip check step when cutting release
10211,Update release candidate download link on website,
10212,Bump to dev post-0.9.0-rc1 release,
10213,Release v0.9.0-rc1,
10214,test: properly skip client state in beforeall,
10215,Generate files for 0.9.0-rc1 release,
10216,release: only install deps when installing,Now module no longer requires linters
10217,release: skip check step when cutting release,module runs very intensive linters that slow and seem to behave differently on different machines. Linting is still a part of our CI and we shouldn't be cutting a release when CI isn't green anyway.
10218,allow configurable release target in mac,
10219,Merge pull request #5428 from hashicorp/b-dropped-logs-on-task-restart,client/logmon: restart log collection correctly when a task is restarted
10220,fix TestLogmon_Start_restart,
10221,Merge pull request #5405 from hashicorp/e2e_metrics,Prometheus metrics for the e2e environment
10222,remove stray println,
10223,Merge pull request #5247 from hashicorp/test-state-corruption,Test state corruption
10224,test: skip slow state test without flag,
10225,e2e: add NomadAgent and basic client state test,"The e2e test code is absolutely hideous and leaks processes and files on disk. NomadAgent seems useful, but the clientstate e2e tests are very messy and slow. The last test ""Corrupt"" is probably the most useful as it explicitly corrupts the state file whereas the other tests attempt to reproduce steps thought to cause corruption in earlier releases of Nomad."
10226,logmon: fix test assertion,
10227,logmon: fix logmon handling in driver test harness,
10228,Merge pull request #5443 from hashicorp/f-systemd-fixes,docs: sync systemd unit files; update deploy guide
10229,docs: remove partial sig/checksum verification,"Point users to security doc instead. Right now it takes a lot of explaining to describe to users exactly how to validate the binary and what the output of the tools used means. For example, this is the output when validating according to the instructions in this guide and the linked doc: module There are only two lines that matter in all of that output: module I feel like trying to teach users how to use and interpret these tools in our deployment guide may be as likely to reduce confidence as increase it."
10230,doc: fix tls_cipher_suites type (#5441),"tls_cipher_suites only accept a comma-separated string, as evident in: https://github.com/hashicorp/nomad/blob/0535dfd414214efd14183bf23d1447f679b57af8/nomad/structs/config/tls.go#L61 https://github.com/hashicorp/nomad/blob/d37ed5c193ac8237666b92bd3f3b0b7e0a8ebfd5/helper/tlsutil/config.go#L405"
10231,update some changelog items,
10232,"Don't use ""datacenter"" in a confusing way",Co-Authored-By: schmichael link
10233,Merge pull request #5450 from hashicorp/docs-changelog,docs: add #5381 to changelog
10234,logmon: remove sleeps from tests,
10235,docs: add #5381 to changelog,
10236,Merge pull request #5430 from HashedDan/server-typo,server: inconsistent receiver notation corrected
10237,"Revert ""executor: synchronize exitState accesses"" (#5449)","Reverts hashicorp/nomad#5433 Apparently, channel communications can constitute Happens-Before even for proximate variables, so this syncing isn't necessary.  The closing of a channel happens before a receive that returns a zero value because the channel is closed. https://golang.org/ref/mem#tmp_7"
10238,Merge pull request #5435 from hashicorp/release-scripts-20190318,Scripts for automating binary building
10239,release: Upgrade to use 1.11.6 golang on macOS,To correspond to the Linux scripts in 855761a5dff9b447152e8ea75a410aafa46e66dc
10240,Add some release script comments,
10241,docs: sync systemd unit files; update deploy guide,The systemd configs spread across our repo were fairly out of sync. This should get them on our best practices. The deployment guide also had some strange things like running Nomad as a non-root user. It would be fine for servers but completely breaks clients. For simplicity I simply removed the non-root user references.
10242,Merge pull request #5429 from hashicorp/b-blocking-executor-shutdown,executor: block shutdown on process exiting
10243,logmon: add tests for rotation and open/closing of fifos,
10244,logmon: make Start rpc idempotent and simplify hook,
10245,Merge pull request #5436 from hashicorp/f-vagrant-go1.11.6,vagrant: upgrade to Go 1.11.6
10246,vagrant: upgrade to Go 1.11.6,
10247,logmon:add static check for logmon exited hook,
10248,accept macos host as a env-var with a default,
10249,use bash set long form,
10250,ensure node is present in PATH,
10251,Merge pull request #5433 from hashicorp/b-exit-state-lock,executor: synchronize exitState accesses
10252,scripts: only shellcheck shell scripts,
10253,handle when no files are generated,
10254,initial attempt at building mac,
10255,remove chown,
10256,executor: synchronize exitState accesses,"exitState is set in module goroutine but accessed in a different module goroutine, so accesses must be synchronized by a lock."
10257,Add a Docker release scripts,Also tease out some dev and docker bits from Vagrant scripts to ease sharing with Docker script
10258,Merge pull request #5425 from sarcasticadmin/sa/freebsd-vagrant-fix,Freebsd vagrant fixes
10259,server: inconsistent receiver notation corrected,Signed-off-by: HashedDan link
10260,client/logmon: restart log collection correctly when a task is restarted,
10261,executor: block shutdown on process exiting,
10262,AWS env update (#5423),  update versions of all products and add consul-template   update client and server user_data scripts   modify README.md and terraform.tfvars   fix typo in consul-template system unit file   update AMI id 
10263,Merge pull request #5415 from hashicorp/b-fix-libcontainer-panic,fix possible panic in libcontainer shim init
10264,Portworx guide (#5399),  skeleton   configure portworx   destroy and redeploy mysql with data intact   rename all directories and references from persistent storage to stateful workloads   add considerations and remove references to StorageOS   update wording and headings   create portworx volume externally and modify jobfile to reflect that   fix typo   Update website/source/guides/stateful-workloads/portworx.html.md   Co-Authored-By: Omar-Khawaja link  Update website/source/guides/stateful-workloads/portworx.html.md  Co-Authored-By: Omar-Khawaja link
10265,Update vagrant box to freebsd 11.2 STABLE,"Freebsd 11.1 went EOL 9/30/18: https://lists.freebsd.org/pipermail/freebsd-announce/2018-September/001842.html Was seeing a failure with shared object ""libdl.so.1"" not found which is required for bash"
10266,Handle when cannot fetch docker logs (#5420),"Fix #5418 When using a docker logger that doesn't support log streaming through API, currently docker logger runs a tight loop of Docker API calls unexpectedly. This change ensures we stop fetching logs early. Also, this adds some basic backoff strategy when Docker API logging fails unexpectedly, to avoid accidentally DoSing the docker daemon."
10267,Regenerate Proto files (#5421),"Noticed that the protobuf files are out of sync with ones generated by 1.2.0 protoc go plugin. The cause for these files seem to be related to release processes, e.g. link, and link. This restores the changes to that of the pinned protoc version and fails build if protobuf files are out of sync.  Sample failing Travis job is that of the first commit change: https://travis-ci.org/hashicorp/nomad/jobs/506285085"
10268,Set shell to sh and networking to host dhcp,Set shell to sh which is present by default on freebsd. Also set networking to host dhcp due to limitations with NFS sharing: https://github.com/hashicorp/vagrant/issues/9063
10269,Fix freebsd vagrant priv config for vim-tiny,
10270,Merge pull request #5413 from hashicorp/b-alloc-metrics,Fix bug with score metadata overridden during inplace upgrades
10271,Merge pull request #5416 from hashicorp/b-docker-email,Fix regression with requiring docker auth email
10272,minor review feedback,
10273,Validate all auth fields being empty rather than just email,This fixes a regression in 0.9 beta3 compared to 0.8.7 in validating docker auth config
10274,Dont require email address for docker auth,
10275,Fix bug where scoring metadata would be overridden during an inplace upgrade.,
10276,Merge pull request #5386 from hashicorp/b-logmon-stop,Fix task/logmon leak after crash
10277,client: cleanup and document context uses,Some of the context uses in TR hooks are useless (Killed during Stop never seems meaningful). None of the hooks are interruptable for graceful shutdown which is unfortunate and probably needs fixing.
10278,Merge pull request #5371 from hashicorp/docs-backincompat,Backward compat note about task config validation
10279,fix possible panic in libcontainer shim init,
10280,Merge pull request #5373 from hashicorp/docs-artifact-stanza,artifact stanza documentation
10281,Merge pull request #5401 from hashicorp/doc-rkt-needs-root,Note rkt driver needs Nomad client run as root
10282,Removed use of e2e framework,
10283,prometheus and fabio for metrics,
10284,run TestAllocations_Stats in CI,
10285,use -dev tag until next release,
10286,Merge pull request #5400 from jacekjagiello/5303/logs-view-wdiescreen-support,Logs view - support widescreen format
10287,fix typo,
10288,Note rkt driver needs Nomad client run as root,The rkt driver requires that the Nomad agent to be running as the root user
10289,5303 make logs view full width to better support large screens,
10290,Merge pull request #5380 from quasilyte/patch-1,drivers/shared/executor: fix strings.Replace call
10291,Merge pull request #5381 from hashicorp/b-max-eval-wait-index,nomad: compare current eval when setting WaitIndex
10292,Tweaked deprecation wording for legacy config (#5394),Made small adjustment to make it clear that 0.8.7 would require the legacy syntax and that the deprecation notice was more about the legacy syntax becoming unsupported at some point after v0.9.0
10293,Merge pull request #5392 from hashicorp/yishan-fix-typo-1,Add missing period to sentence.
10294,Support driver config fields being set to nil (#5391),To pick up https://github.com/hashicorp/hcl2/pull/90
10295,Update nomad/eval_endpoint_test.go,Co-Authored-By: schmichael link
10296,Update nomad/eval_endpoint.go,Co-Authored-By: schmichael link
10297,client: emit event and call exited hooks during cleanup,Builds upon earlier commit that cleans up restored handles of terminal allocs by also emitting terminated events and calling exited hooks when appropriate.
10298,Add missing period to sentence.,
10299,Update CHANGELOG.md,Co-Authored-By: schmichael link
10300,nomad: simplify code and improve parameter name,
10301,test: fix NewMemDB API change,
10302,logmon: drop reattach log level as its expected,Logged once per terminal task on agent restart.
10303,client: test logmon cleanup,"The test is sadly quite complicated and peeks into things (logmon's reattach config) AR doesn't normally have access to. However, I couldn't find another way of asserting logmon got cleaned up without resorting to smaller unit tests. Smaller unit tests risk re-implementing dependencies in an unrealistic way, so I opted for an ugly integration test."
10304,Merge pull request #5384 from hashicorp/b-fix-typo,s/mananger/manager/g
10305,s/mananger/manager,
10306,website: add plugin docs,
10307,nomad: compare current eval when setting WaitIndex,"Consider currently dequeued Evaluation's ModifyIndex when determining its WaitIndex. Normally the Evaluation itself would already be in the state store snapshot used to determine the WaitIndex. However, since the FSM applies Raft messages to the state store concurrently with Dequeueing, it's possible the currently dequeued Evaluation won't yet exist in the state store snapshot used by JobsForEval. This can be solved by always considering the current eval's modify index and using it if it is greater than all of the evals returned by the state store."
10308,client: ensure task is cleaned up when terminal,"This commit is a significant change. TR.Run is now always executed, even for terminal allocations. This was changed to allow TR.Run to cleanup (run stop hooks) if a handle was recovered. This is intended to handle the case of Nomad receiving a DesiredStatus=Stop allocation update, persisting it, but crashing before stopping AR/TR. The commit also renames task runner hook data as it was very easy to accidently set state on Requests instead of Responses using the old field names."
10309,drivers/shared/executor: fix strings.Replace call,strings.Replace call with n=0 argument makes no sense as it will do nothing. Probably -1 is intended. Signed-off-by: Iskander Sharipov link
10310,chore: Setup probot/stale,
10311,Merge pull request #5372 from hashicorp/f-docker-logging-driver,drivers/docker: rename logging module to module
10312,artifact docs: modified the leading example and removed a treacherous (but potentially correct) example,
10313,logging.Type over logging.Driver,
10314,drivers/docker: rename logging module to module,"Docker uses the term logging module in its public documentations: in module daemon config[1], module arguments [2] and in docker compose file[3]. Interestingly, docker used module in its API [4] instead of everywhere else. It's unfortunate that Nomad used module modeling after the Docker API rather than the user facing documents.  Nomad using module feels very non-user friendly as it's disconnected from how Docker markets the flag and shows internal representation instead. Here, we rectify the situation by introducing module field and prefering it over module in logging. [1] https://docs.docker.com/config/containers/logging/configure/ [2] https://docs.docker.com/engine/reference/run/#logging-drivers---log-driver [3] https://docs.docker.com/compose/compose-file/#logging [4] https://docs.docker.com/engine/api/v1.39/#operation/ContainerCreate"
10315,Merge pull request #5364 from hashicorp/disable-failing-e2e-tests,tests: disable upgrade e2e tests
10316,Backward compat note about task config validation,
10317,update formatting and add toJSON function with explanation (#5366),  update formatting and add toJSON function with explanation   edit typo   Update website/source/guides/operations/vault-integration/index.html.md   Co-Authored-By: Omar-Khawaja link  fixing clarification bullet explaining the use of toJSON
10318,make root block device size configurable (#5368),
10319,docs: Update beta release link to 0.9.0-beta3 (#5365),
10320,tests: disable upgrade e2e tests,"Upgrade e2e tests are failing and we haven't had bandwith to fix yet. Having them fail makes it easy for us to miss other failures and regressions. As such, skip the upgrade e2e tests until we fix them."
10321,docker: report unhealthy in unsupported Windows (#5356),"On Windows, Nomad only supports Windows containers, so report as unhealthy otherwise."
10322,Remove generated files for 0.9.0-beta3,
10323,Release v0.9.0-beta3,
10324,Fix version.go for 0.9.0-beta3 release,
10325,Generate files for 0.9.0-beta3 release,
10326,Merge pull request #5352 from hashicorp/b-leaked-logmon,logmon fixes
10327,Update changelog for new beta 3 enhancements,
10328,tests: move unix-specific test to its own file,Other logmon tests should be portable.
10329,tests: port some fingerprint tests from 0.8 (#5359),Port some integration tests of driver fingerprinting. Some tests (e.g. module) have been subsituted by more isolated tests in module
10330,Merge pull request #5355 from hashicorp/dani/windows-dockerstats,docker: Support Stats on Windows
10331,client: restart task on logmon failures,This code chooses to be conservative as opposed to optimal: when failing to reattach to logmon simply return a recoverable error instead of immediately trying to restart logmon. The recoverable error will cause the task's restart policy to be applied and a new logmon will be launched upon restart. Trying to do the optimal approach of simply starting a new logmon requires error string comparison and should be tested against a task actively logging to assert the behavior (are writes blocked? dropped?).
10332,Merge pull request #5358 from hashicorp/ar-tests,More alloc runner tests ported from 0.8.7
10333,Merge pull request #5362 from hashicorp/dani/f-fingerprint-undetected,docker: Return undetected before first detection
10334,docker: Return undetected before first detection,"This commit causes the docker driver to return undetected before it first establishes a connection to the docker daemon. This fixes a bug where hosts without docker installed would return as unhealthy, rather than undetected."
10335,client: test logmon_hook,
10336,More alloc runner tests ported from 0.8.7,
10337,Merge pull request #5349 from hashicorp/port-tests-20190221,Port some 0.8.7 alloc runner tests
10338,Merge pull request #5357 from hashicorp/doc-add-coc,Created .github; Added CoC
10339,Merge pull request #5344 from hashicorp/b-nexteval-for-failed-follow-up,Set NextEval when making module evals
10340,emit TaskRestartSignal event on vault restart,"When Vault token expires and task is restarted, emit module similar to v0.8.7"
10341,address review comments,
10342,tests: port TestTaskRunner_VaultManager_Signal,From https://github.com/hashicorp/nomad/blob/v0.8.7/client/task_runner_test.go#L1427
10343,tests: port TestTaskRunner_VaultManager_Restart,From https://github.com/hashicorp/nomad/blob/v0.8.7/client/task_runner_test.go#L1352
10344,tests: port TestTaskRunner_UnregisterConsul_Retries,From https://github.com/hashicorp/nomad/blob/v0.8.7/client/task_runner_test.go#L620
10345,tests: port TestTaskRunner_Template_NewVaultToken,From https://github.com/hashicorp/nomad/blob/v0.8.7/client/task_runner_test.go#L1275
10346,tests: port TestTaskRunner_Template_Artifact,From https://github.com/hashicorp/nomad/blob/v0.8.7/client/task_runner_test.go#L1195
10347,tests: port TestAllocRunner_RetryArtifact,Port TestAllocRunner_RetryArtifact from https://github.com/hashicorp/nomad/blob/v0.8.7/client/alloc_runner_test.go#L610-L672 I changed the test name because it doesn't actually test that artifact hooks is retried
10348,tests: port TestAllocRunner_MoveAllocDir test,
10349,Merge pull request #5350 from hashicorp/b-json-logging-meta,Support json logging for CLI output for agent
10350,fix import order,
10351,Created .github; Added CoC,
10352,Added comments, caller should created eval id prev/next eval used in failed-follow-up
10353,Merge pull request #5325 from hashicorp/test-port-08-2,Do not wrap errors from StartTask as that loses Recoverable
10354,docker: Support stats on Windows,
10355,logmon: fix reattach configuration,"There were multiple bugs here:  Reattach unmarshalling always returned an error because you can't    unmarshal into a nil pointer. The hook data wasn't being saved because it was put on the request    struct, not the response struct. The plugin configuration should only have reattach or a command    set. Not both. Setting Done=true meant the hook was never re-run on agent restart so    reattaching was never attempted."
10356,fingerprint: improve initial fingerpint message,"The initial fingerprint message is actually fairly useful, so I bumped it to Debug and fixed the output formatting."
10357,plugins: squelch context Canceled error logs,As far as I can tell this is the most straightforward and resilient way to skip error logging on context cancellation with grpc streams. You cannot compare the error against context.Canceled directly as it is of type module. The next best solution I found was: module However I think checking ctx.Err() directly makes the code much easier to read and is resilient against grpc API changes.
10358,client: restart on recoverable StartTask errors,Fixes restarting on recoverable errors from StartTask. Ports TestTaskRunner_Run_RecoverableStartError from 0.8 which discovered the bug.
10359,test: port TestTaskRunner_RestartSignalTask_NotRunning from 0.8,
10360,test: port TestTaskRunner_DriverNetwork from 0.8,
10361,Merge pull request #5322 from hashicorp/b-artifact-retries,Fix regression by restarting on artifact download errors
10362,reformat lxc guide (#5339),  reformat lxc guide   reformat lxc guide 
10363,Merge pull request #5348 from hashicorp/docs-env-json,docs: clarify use of toJSON for passwords
10364,Move logger initialization to earlier step,
10365,Merge pull request #5341 from hashicorp/ci-windows-docker,Run Docker tests in Windows AppVeyor CI
10366,docs: clarify use of toJSON for passwords,Fixes #5347
10367,Set NextEval when making module evals,This allows users to locate failed-follow-up evals more easily
10368,Merge pull request #5332 from hashicorp/dani/docker_logger_container_leak,docker: Avoid leaking containers during Reattach
10369,Merge pull request #5336 from hashicorp/test-ar-destroy,tests: port TestAllocRunner_Destroy from 0.8
10370,tests: port TestAllocRunner_Destroy from 0.8,Also add destroy(ar) helper to fix a bunch of shutdown races in AR tests.
10371,docker: Avoid leaking containers during Reattach,"Currently if a docker_logger cannot be reattached to, we will leak the container that was being used. This is problematic if e.g using static ports as it means you can never recover your task, or if a service is expensive to run and will then be running without supervision."
10372,client: don't redownload completed artifacts on retries,"Track the download status of each artifact independently so that if only one of many artifacts fails to download, completed artifacts aren't downloaded again."
10373,Merge pull request #5335 from hashicorp/dani/docker-logger-spawn,Increase resiliency of docker driver logging
10374,Update drivers/docker/docklog/docker_logger.go,Co-Authored-By: dantoml link
10375,docker: Respawn docker logger during recovery,"Sometimes the nomad docker_logger may be killed by a service manager when restarting the client for upgrades or reliability reasons. Currently if this happens, we leak the users container and try to reschedule over it. This commit adds a new step to the recovery process that will spawn a new docker logger process that will fetch logs from the current timestamp. This is to avoid restarting users tasks because our logging sidecar has failed."
10376,client: artifact errors are retry-able,0.9.0beta2 contains a regression where artifact download errors would not cause a task restart and instead immediately fail the task. This restores the pre-0.9 behavior of retrying all artifact errors and adds missing tests.
10377,tests: add new task runner test helper,Adds a new helper and removes a duplicated test.
10378,Merge pull request #5342 from hashicorp/dani/powercolors,Fix colored terminal output on Windows
10379,tests: IsTravis() -> IsCI(),Replace IsTravis() references that is intended for more CI environments rather than for Travis environment specifically.
10380,ci: Run Docker tests on AppVeyor Windows,
10381,ui: Support colored output on Windows,This commit uses the go-colorable library to enable support for coloured UI output on Windows. This acts as a compatibility layer that takes standard unix-y terminal codes and translates them into the requisite windows calls as required.
10382,vendor: Update to latest go-colorable,
10383,driver/docker: Skip failing Windows tests,Skip currently Docker tests that fail on Windows for further investigation.
10384,tests: expect Docker on AppVeyor,Prepare to run docker on AppVeyor Windows environment
10385,Merge pull request #5321 from hashicorp/b-portmap-regression,drivers: restore port_map old json support
10386,driver/docker: use BlockAttrs for storage_opts,storage_opts is a new field in 0.9 cycle and doesn't have backward compatibility constraints.
10387,CVE-2019-5736: Update libcontainer depedencies (#5334)," CVE-2019-5736: Update libcontainer depedencies  Libcontainer is vulnerable to a runc container breakout, that was reported as CVE-2019-5736[1].  Upgrading vendored libcontainer with the fix. The runc changes are captured in https://github.com/hashicorp/runc/commits/369b920277d27630441336775cd728bc0f19e496 . [1] https://seclists.org/oss-sec/2019/q1/119"
10388,cli Ui implementation that logs to a hclogger,This makes it so any messages output to the UI after the agent has started will be logged in json format correctly
10389,adding dropdown nav to external plugins section (#5338),
10390,Merge pull request #5329 from hashicorp/b-health-deadline,client: fix setting alloc unhealthy at deadline
10391,client: fix setting alloc unhealthy at deadline,During the 0.9 client refactor the code to fail a deployment when the deadline was reached was broken. This restores and tests that behavior.
10392,dlogger: Increase resilience to docker api failure,"This commit adds some extra resiliency to the docker logger in the case of API failure from the docker daemon, by restarting the stream from the current point in time if the stream returns and the container is still running."
10393,Warn that module can't be in the jail (#4618),
10394,Fix device.attr typo (#5331),Fix https://github.com/hashicorp/nomad/issues/5315
10395,drivers: restore port_map old json support,"This ensures that module along with other block like attribute declarations (e.g. ulimit, labels, etc) can handle various hcl and json syntax that was supported in 0.8. In 0.8.7, the following declarations are effectively equivalent: ``` // hcl block port_map {   http = 80   https = 443 } // hcl assignment port_map = {   http  = 80   https = 443 } // json single element array of map (default in API response) {""port_map"": [{""http"": 80, ""https"": 443}]} // json array of individual maps (supported accidentally iiuc) {""port_map: [{""http"": 80}, {""https"": 443}]} ``` We achieve compatbility by using module to be serialized to a module wrapper, instead of using module declaration.  The wrapper merges the list of maps automatically, to ease driver development. This approach is closer to how v0.8.7 implemented the fields [1][2], and despite its verbosity, seems to perserve 0.8.7 behavior in hcl2. This is only required for built-in types that have backward compatibility constraints.  External drivers should use module instead, as they see fit. [1] https://github.com/hashicorp/nomad/blob/v0.8.7/client/driver/docker.go#L216 [2] https://github.com/hashicorp/nomad/blob/v0.8.7/client/driver/docker.go#L698-L700"
10396,Merge pull request #5324 from hashicorp/f-nomad-init,expand job init example with spread and affinity
10397,fix indentation,
10398,Fix whitespace,
10399,Update job_init.go,minor
10400,expand job init example with spread and affinity,
10401,Merge pull request #5319 from hashicorp/test-port-08,Fix Consul Service PreKill Hook
10402,Merge pull request #5326 from hashicorp/dani/json-submission,api: Fix compatibility with pre 0.9 API jobs
10403,Update drivers/docker/config_test.go,Co-Authored-By: dantoml link
10404,Merge pull request #5327 from hashicorp/dani/windows-term,drivers/docker: SIGTERM to stop containers
10405,Add regression test for parsing null mounts,
10406,test: improve readability of duration,Co-Authored-By: schmichael link
10407,test: improve failure message,Co-Authored-By: schmichael link
10408,drivers/docker: SIGTERM to stop containers,"Windows Docker daemon does not support SIGINT, SIGTERM is the semantic equivalent that allows for graceful shutdown before being followed up by a SIGKILL."
10409,vendor: Update to latest hcl2, Includes fixes for handling null blocks https://github.com/hashicorp/hcl2/pull/87 Updates go-cty as a newer version is required by hcl2
10410,tests: port TestTaskRunner_Download_List from 0.8,
10411,consul: fix task deregistration hook,Broke ShutdownDelay but the test was timing dependent so it just appeared flaky. Made the test slower so that it should never incorrectly pass.
10412,tests: port TaskRunner_DeriveToken tests from 0.8,
10413,tests: port TestTaskRunner_BlockForVault from 0.8,Also fix race conditions in the mock vault client.
10414,tests: add hcl task driver config parsing tests (#5314), drivers: add config parsing tests  Add basic tests for parsing and encoding task config.   drivers/docker: fix some config declarations   refactor and document config parse helpers 
10415,drivers/java: restore 0.8.7 java version detection (#5317),"Restore 0.8.x behavior where java driver is marked as detected when module exits with 0 but returns unexpected output. Furthermore, we restore behavior when module where we parse the first three lines of module but ignore rest. If module returns less than 3 lines, Nomad 0.8.7 would panic. In this implementation, we'd still mark java as detected but returns empty version. The 0.8.7 logic for detecting java version is found in https://github.com/hashicorp/nomad/blob/v0.8.7/client/driver/java.go#L132-L172 . I punt on revamping how we can be more resilient to java -version syntax, and aimed for preserving existing behavior instead."
10416,Merge pull request #5287 from hashicorp/docs-fix-affinity-examples,docs: fixed some affinity examples
10417,Merge pull request #5297 from hashicorp/b-docker-logging,Docker: Fix logging config parsing
10418,Confirm DG against Nomad 0.9.0-beta2,Change product_version frontmatter to ea_version and increase to 0.9
10419,Confirm RA against Nomad 0.9.0-beta2,Change product_version frontmatter to ea_version and increase to 0.9
10420,docker: Fix volume driver_config options spec (#5309),Fixes #5308
10421,Merge pull request #5307 from mnachury/fix/exe_detection_windows,Fix executable check on windows
10422,Fix executable check on windows,
10423,Merge pull request #5306 from nanoz/patch-1,Issue #4649: Remove the systemd process and threads limit
10424,Remove the systemd process and threads limit,systemd limits the number of process and threads you can create within the cgroup it creates for a given service. This is especially limiting if you have a high number of keys Nomad watches from Consul. Fixes #4649
10425,"remove apostrophe in ""job's""",
10426,restored previous example (it was correct),
10427,docker: fix logging config parsing,Fixes https://groups.google.com/d/topic/nomad-tool/B3Uo6Kns2BI/discussion
10428,plugins: update hclutils test,The test used old local copies of Docker structs and appeared to be testing an outdated approach to task config decoding. Updated to use real Docker structs so we can do end-to-end unit testing of real Docker task configs.
10429,simplify hcl2 parsing helper,No need to pass in the entire eval context
10430,consul: squelch noisy useless logs,Only log when syncing actually did something.
10431,client: log when allocs have been processed,Will hopefully help us catch deadlocks/livelocks/slowdowns in the add/remove allocs pipeline which should be fast.
10432,Merge pull request #5295 from Quasilyte/patch-1,nomad/command: fix strings.Contains args order
10433,nomad/command: fix strings.Contains args order,Swapped call args order to meet the expected behavior. Signed-off-by: Iskander Sharipov link
10434,add some cross-linking for easier reference (#5292),
10435,Merge pull request #5278 from hashicorp/f-ui-absolute-timestamps,UI: Always show an absolute timestamp tooltip when showing relative dates
10436,Merge pull request #5293 from hashicorp/b-dupe-resched,cli: do not duplicate reschedule headers per group
10437,cli: do not duplicate reschedule headers per group,Fixes #5291
10438,Update tests that check time and date formatting,
10439,Apply new date and timestamp helpers e'rywhere,
10440,New helpers to standardize date and timestamp formats,
10441,Remove 0.9.0-beta2 generated files,
10442,Merge pull request #5290 from mre/patch-1,"Fix typo in ""discovery"""
10443,"Fix typo in ""discovery""",
10444,fixed typo in vault integration documentation,
10445,fixed some affinity examples,
10446,Merge pull request #5285 from hashicorp/external-plugins-typo,fix typo
10447,fix typo,
10448,website: update lxc references to 0.1.0-rc2 (#5283),
10449,Merge pull request #5284 from hashicorp/website-0.9,Bump to Nomad 0.8.7 and mention 0.9 beta
10450,Bump to Nomad 0.8.7 and mention 0.9 beta,
10451,Release v0.9.0-beta2,
10452,Generate files for 0.9.0-beta2,
10453,Merge pull request #5281 from hashicorp/f-affinity-weight-int,Change types of weights on spread/affinity
10454,Merge pull request #5282 from hashicorp/website-resources,website/resources: add recent videos/blogs to resources
10455,fix tests,
10456,website/resources: add recent videos/blogs to resources,
10457,remove generated structs,
10458,Merge pull request #5279 from hashicorp/b-fix-external-driver-id-reference,client: fix bug during 0.8 state up grade for external drivers
10459,Update comment on int8ToPtr,
10460,Update comment on int8ToPtr,
10461,Change types of weights on spread/affinity,
10462,client: fix bug during 0.8 state up grade that causes external drivers to fail,
10463,Release v0.9.0-beta1,
10464,version bump,
10465,remove deleting generated code in clean step,
10466,Nomad 0.9.0-beta1 generated code,
10467,Merge pull request #5277 from hashicorp/d-changelog,changelog: minor wording fixes
10468,Merge pull request #5270 from hashicorp/f-install-protoc-gen-go,install specific version of protoc-gen-go
10469,Always show an absolute timestamp tooltip when showing relative dates,
10470,Merge pull request #5273 from hashicorp/dani/nvidia-affinity,docs: Update affinity stanza in device
10471,minor wording fixes,
10472,Merge pull request #5263 from hashicorp/d-upgrade-09,docs: add 0.9 specific upgrade notes
10473,Install versioned release of codecgen,Gets us one step closer to a reproducible build. Also removes the unused vendored version.
10474,fix perms in protoc installer,
10475,install specific version of protoc-gen-go,
10476,docs: fix job json example (#5274),"The internal needs to be long enough to accomodate the attempts. Also, clarify that the input should be a json file rather than an hcl module one."
10477,Merge pull request #5276 from hashicorp/docs_system_Sched,Add link to preemption from schedulers page
10478,Add link to preemption from schedulers page,
10479,docs: Update affinity stanza in device,
10480,Merge pull request #5266 from hashicorp/b-background-dont-fail,ci: ignore background ping errors
10481,ci: ignore background ping errors,"We attempt to kill background ping process twice, and sometimes the second kill fails, e.g. https://travis-ci.org/hashicorp/nomad/jobs/486050357, let's not fail the job."
10482,docs: add 0.9 specific upgrade notes,
10483,fix lxc sidebar,
10484,fix broken link,
10485,Merge pull request #5269 from hashicorp/b_schedconfig_panicfix,Guard operator endpoints for minimum server version
10486,ensure tests run a 0.9 server,
10487,Merge pull request #5268 from hashicorp/b-task-dir-envs,Always populate task dir environment variables
10488,Fix usage of fsi variable,
10489,Guard operator endpoints for minimum server version,
10490,fix typo from plugin_dir to data_dir (#5267),
10491,mention #5261 in changelog,
10492,Merge pull request #5265 from hashicorp/b_schedconfig_panicfix,Make sure that all servers are 0.9 to apply scheduler config
10493,Update CHANGELOG.md,
10494,Always populate task dir environment variables,"Fixes an issue where if a task was restarted after restating the client, the task dir environment variables would not be populated. This PR fixes this for both upgrades from 0.8.X and for normal 0.9 restarts."
10495,LXC driver guide (#5255),  skeleton for external plugins guide section   initial content   add installation and configuration steps   complete steps to deployg lxc workload   update link   correct typo in link   change link name   fix alignment and word wrap at 80   updates   update lxc driver download link and commands in step 3   fix link typo 
10496,add plugin content (docs) (#5186),  call out pluggable drivers in task drivers section and link/add info to plugin stanza   fix hyphenation   removing page and nav that tells users drivers are not pluggable   show new syntax for configuring raw_exec plugin on client   enabled option value for raw_exec is boolean   add plugin options section and mark client options as soon to be deprecated   fix typos   add plugin options for rkt task drivers and place deprecation warning in client options   add some plugin options with plugin configuration example + mark client options as soon to be deprecated   modify deprecation warning   replace colon with - for options   add docker plugin options   update links within docker task driver to point to plugin options   fix typo and clarify config options for lxc task driver   replace raw_exec plugin syntax example with docker example   create external section   restructure lxc docs and add backward incompatibility warning   update lxc driver doc   add redirect for lxc driver doc   call out plugin options and mark client config options for drivers as deprecated   add placeholder for lxc driver binary download   update data_dir/plugins reference with plugin_dir reference   Update website/source/docs/external/lxc.html.md   Co-Authored-By: Omar-Khawaja link   corrections   remove lxc from built-in drivers navigation   reorganize doc structure and fix redirect   add detail about 0.9 changes   implement suggestions/fixes   removed extraneous punctuation   add official lxc driver link 
10497,variable name fix,
10498,Make sure that all servers are 0.9 before applying scheduler config entry,
10499,Merge pull request #5261 from hashicorp/b-server-api-panic,nomad: fix panic when no node conn found
10500,Merge pull request #5256 from hashicorp/r-golang-1.11.5,dev: use golang 1.11.5
10501,nomad: fix panic when no node conn found,A missing return would cause a panic when a server could find no route to a client.
10502,Merge pull request #5252 from hashicorp/beta_tag_docs,Add 0.9 beta superscript to sidebar for all 0.9 features
10503,Merge pull request #5260 from hashicorp/b-driver-stats-timestamp,executor: fix bug and add tests for incorrect stats timestamp reporting
10504,executor: fix bug and add tests for incorrect stats timestamp reporting,
10505,Merge pull request #5259 from hashicorp/b-npe-scheduler,"scheduler: fix NPE when deployment is nil, but placement is a canary"
10506,"scheduler: fix NPE when deployment is nil, but placement is a canary",
10507,Merge pull request #5248 from hashicorp/b-rawexec-leak,Fix leaked executor in raw_exec
10508,Merge pull request #5257 from hashicorp/f-changelog,Nomad 0.9.0 changelog
10509,Update CHANGELOG.md,
10510,Merge pull request #5258 from hashicorp/remove-mac-log-caveats,remove mac logs caveat
10511,add more detail to backwards incompatabilities,
10512,remove mac logs caveat,
10513,rework spread doc intro,
10514,changelog,
10515,dev: use golang 1.11.5,Use latest Golang point release at this time for development.
10516,circbufwritter: add defer to stop ticker in flush loop,
10517,Merge branch 'master' of github.com:hashicorp/nomad,
10518,make nomad upgrade e2e build on non linux,
10519,Merge pull request #5254 from hashicorp/b-website-link-fix,fixed broken link in docs
10520,Merge pull request #5253 from hashicorp/b-template-env,Fix env templates having interpolated destinations
10521,fix link typo,
10522,fixed broken link in docs,
10523,Merge pull request #5245 from hashicorp/b-docker-shutdown,Fix killing non-existant container with a kill timeout
10524,changelog,
10525,Fix env templates having interpolated destinations,Fixes an issue where env templates that had interpolated destinations would not work. Fixes https://github.com/hashicorp/nomad/issues/5250
10526,Don't fall through,
10527,comment,
10528,Merge pull request #5251 from hashicorp/doc-fix-recovery-raft-port,Update port in Raft V3 example.
10529,quota replication bug fix to changelog,
10530,Add 0.9 beta superscript to sidebar for all 0.9 features,
10531,circbufwriter: defer unlock in Write since it will not block,
10532,circbufwriter: Add tests,
10533,Merge pull request #5249 from hashicorp/consul_e2e,Consul e2e tests
10534,Merge pull request #5244 from hashicorp/b-template-restart-count,Fix double restart counting for templates
10535,add circbufwriter package,
10536,Update outage.html.markdown,
10537,Moved in place upgrade canary test over to new e2e framework,
10538,fix typo,
10539,Update CHANGELOG.md,
10540,Update CHANGELOG.md,
10541,Basic consul registration e2e,
10542,Fix broken scheduling links in advanced scheduling guide,
10543,executor: prevent logger from blocking when stderr pipe is detached,
10544,drivermanager: don't store nil reattach configs,
10545,raw_exec: ensure executor is killed after task is stopped,
10546,Fix killing non-existant container with a kill timeout,
10547,Fix double restart counting for templates,This PR fixes an issue where template restarts would count twice since it was emitting a restarting event.
10548,changelog,
10549,Merge pull request #5242 from hashicorp/b-fix-drivers-panic,drivers: pass logger through driver plugin client
10550,Merge pull request #5237 from hashicorp/b-docker-09upgrade-shutdown,drivers/docker: handle shutdown of upgraded tasks correctly
10551,Merge pull request #5243 from hashicorp/b-fix-scheduling-links,website: redirect to new scheduling doc
10552,Merge pull request #5228 from hashicorp/f-vault-err-tweaks,server/vault: tweak error messages
10553,Advanced scheduling guides (affinity + spread) (#5001),  initial structure   add to affinity guide   add to affinity guide   update affinity guide   spread guide   update content   update step 3 to spread stanza   update   add wording to motivate the use of spread and affinity   improve guide description and use clearer wording to distinguish constrain from affinity   clarify challenge to user with specific example   improve wording in the solution section   incorporate rest of suggestions into affinity guide   modify spread guide description   improve wording of spread docs   change instance count from 5 to 10 to more easily show spread   improving spread guide and changing demo architecture   motivate spread a bit more   clarification about spread   fix wording 
10554,server/vault: tweak error messages,Closes #5139
10555,website: redirect to new scheduling doc,
10556,drivers: pass logger through driver plugin client,This fixes a panic whenever driver plugin attempts to log a message.
10557,Merge pull request #5240 from hashicorp/b-docker-bridgeip-logging,docker: only log missing bridge_ip on initial fingerprint
10558,Merge pull request #5239 from hashicorp/b-driver-stats-interval,plugins/drivers: change stats interval to duration type in proto
10559,docker: only log missing bridge_ip on initial fingerprint,
10560,plugins/drivers: change stats interval to duration type in proto,
10561,Merge pull request #5234 from hashicorp/b-preemption-docs,Documentation for preemption
10562,fixed formatting,
10563,Delete intro section which is now in index page,
10564,Merge pull request #5238 from hashicorp/b-spread-docs-fixes,Documentation fixes for affinity and spread
10565,review comments,
10566,more code review comments,
10567,Apply suggestions from code review,Co-Authored-By: preetapan link
10568,improve spread docs,
10569,drivers/docker: handle shutdown of upgraded tasks correctly,
10570,Fix spacing and add links to affinity stanza from various pages,
10571,update to Consul 1.4.0 for e2e tests,
10572,Merge pull request #5223 from hashicorp/f-jobs-list-datacenters,Add Datacenters to the JobListStub struct
10573,e2e/nomad09upgrade: remove test file that is not needed,
10574,Merge pull request #5209 from hashicorp/f-driver-upgradepath-test,e2e tests for upgrade path to driver plugins
10575,Merge branch 'master' into f-driver-upgradepath-test," master: (23 commits)   tests: avoid assertion in goroutine   spell check   ci: run checkscripts   tests: deflake TestRktDriver_StartWaitRecoverWaitStop   drivers/rkt: Remove unused github.com/rkt/rkt   drivers/rkt: allow development on non-linux   cli: Hide module from help output   api: test api and structs are in sync   goimports until make check is happy   nil check node resources to prevent panic   tr: use context in as select statement   move pluginutils -> helper/pluginutils   vet   goimports   gofmt   Split hclspec   move hclutils   Driver tests do not use hcl2/hcl, hclspec, or hclutils   move reattach config   loader and singleton   ..."
10576,e2e: removed unused code in nomade09upgrade suite,
10577,Merge pull request #5231 from hashicorp/d-devices,Document devices
10578,spelling mistakes,
10579,Update devices/gpu/nvidia/README.md,Co-Authored-By: dadgar link
10580,Merge branch 'f-driver-upgradepath-test' of https://github.com/hashicorp/nomad into f-driver-upgradepath-test, 'f-driver-upgradepath-test' of https://github.com/hashicorp/nomad:
10581,Merge pull request #5232 from hashicorp/f-driver-upgradepath-docker,drivers: add docker upgrade path and e2e test
10582,Merge branch 'f-driver-upgradepath-test' of https://github.com/hashicorp/nomad into f-driver-upgradepath-test, 'f-driver-upgradepath-test' of https://github.com/hashicorp/nomad:   Apply suggestions from code review
10583,Add scheduler config docs and link from preemption docs,
10584,Add preemption section to scheduling internals,Also reorganize the docs so that scheduling has subpages in it
10585,Merge pull request #5233 from hashicorp/f-split-slowtests,ci: run seperate build jobs for slower packages
10586,fix package import,
10587,ci: run seperate build jobs for slower packages,
10588,drivers: add docker upgrade path and e2e test,
10589,Merge pull request #5227 from hashicorp/b-client-highcpu-usage,Fix bug related to high cpu usage
10590,Apply suggestions from code review,Co-Authored-By: nickethier link
10591,change example job a bit,
10592,fix docker runtime attribute,
10593,Json job,
10594,nvidia device plugin docs,
10595,convert driver to device for device constraint/attributes,
10596,link to resources page,
10597,Device job stanza,
10598,Merge pull request #5229 from hashicorp/r-grabbag-201901019,Grab bag of small changes
10599,tests: avoid assertion in goroutine,
10600,spell check,
10601,ci: run checkscripts,module contained some bash-ism despite it being invoked with module.
10602,tests: deflake TestRktDriver_StartWaitRecoverWaitStop,
10603,drivers/rkt: Remove unused github.com/rkt/rkt,
10604,drivers/rkt: allow development on non-linux,Avoid depending on OS-specific library for some simple structs.
10605,Merge pull request #5230 from hashicorp/dani/b-hide-docker_logger-command,cli: Hide module from help output
10606,cli: Hide module from help output,
10607,api: test api and structs are in sync,"Add some tests to ensure that api/structs values are in sync. Given that vendoring libraries prune tests by default, test dependencies aren't leaked to clients of the package - so it should be safe to add such dependency without affecting api clients."
10608,Merge pull request #5196 from hashicorp/f-plugin-utils,Make plugins/shared external and make pluginutls/
10609,Merge pull request #5225 from hashicorp/b-notaskevent-terminalallocs,Don't emit task events after alloc is in a terminal DesiredState
10610,Merge pull request #5226 from hashicorp/b-node-status-panic,nil check node resources to prevent panic
10611,goimports until make check is happy,
10612,e2e: remove unused script,
10613,Merge branch 'master' into f-driver-upgradepath-test, master: (91 commits)   increase log level   CHANGELOG: added 0.9 ui changes   test: port TestTaskRunner_CheckWatcher_Restart   test: port RestartTask from 0.8   test: port SignalFailure test from 0.8   Rename TaskKillRequest/Response to TaskPreKillRequest/Response   Fix log comments   Rename TaskKillHook to TaskPreKillHook to more closely match usage   Fix comment   Rename TaskKillHook to TaskPreKillHook to more closely match usage   Update CHANGELOG.md   tests: deflake TestClientAllocations_GarbageCollect_Remote   tests: deflake client TestFS_Logs_TaskPending test   Update CHANGELOG.md   test: fix flaky garbage collect test   drivers: regen proto   api: avoid codegen for syncing   code review comments   revert unintended change   ar: return error from hooks if occured   ...
10614,e2e/nomad09upgrade: add comments,
10615,nil check node resources to prevent panic,
10616,tr: use context in as select statement,
10617,move pluginutils -> helper/pluginutils,"I wanted a different color bikeshed, so I get to paint it"
10618,vet,
10619,goimports,
10620,gofmt,
10621,Split hclspec,
10622,move hclutils,
10623,"Driver tests do not use hcl2/hcl, hclspec, or hclutils",
10624,move reattach config,
10625,loader and singleton,
10626,move catalog + grpcutils,
10627,Use DesiredState to determine whether to stop sending task events,
10628,dont emit events for terminal allocs,
10629,increase log level,
10630,Merge pull request #5211 from hashicorp/test-porting-08,Port some 0.8 TaskRunner tests
10631,Add Datacenters to the JobsListStub struct,So it can be used for filtering the full list of jobs
10632,CHANGELOG: added 0.9 ui changes,
10633,test: port TestTaskRunner_CheckWatcher_Restart,Added ability to adjust the number of events the TaskRunner keeps as there's no way to observe all events otherwise. Task events differ slightly from 0.8 because 0.9 emits Terminated every time a task exits instead of only when it exits on its own (not due to restart or kill). 0.9 does not emit Killing/Killed for restarts like 0.8 which seems fine as module is more descriptive. Original v0.8 events emitted: module
10634,Merge pull request #5207 from hashicorp/b-rename-hooks,Rename TaskKillHook to TaskPreKillHook to more closely match usage
10635,test: port RestartTask from 0.8,
10636,test: port SignalFailure test from 0.8,Also fix signal error handling in mock_driver.
10637,Rename TaskKillRequest/Response to TaskPreKillRequest/Response,
10638,Fix log comments,
10639,Rename TaskKillHook to TaskPreKillHook to more closely match usage,Also added/fixed comments
10640,Fix comment,Co-Authored-By: preetapan link
10641,Rename TaskKillHook to TaskPreKillHook to more closely match usage,Also added/fixed comments
10642,Merge pull request #5216 from hashicorp/b-fix-tests-20180118,tests: deflake client TestFS_Logs_TaskPending test
10643,Update CHANGELOG.md,
10644,tests: deflake TestClientAllocations_GarbageCollect_Remote,Use the same strategy as one in f2f383b07543a09ca989b82738926f7248e1ab28
10645,Merge pull request #5198 from hashicorp/f-driver-upgradepath,0.9 Upgrade path for drivers and executors
10646,tests: deflake client TestFS_Logs_TaskPending test,
10647,Merge pull request #5215 from hashicorp/test-fix-garbagecollect,test: fix flaky garbage collect test
10648,Merge pull request #5213 from hashicorp/b-api-separate,Slimmer /api package
10649,Update CHANGELOG.md,
10650,Merge pull request #5205 from hashicorp/b-queuedallocs-bugfix,Reconcile child summaries correctly
10651,test: fix flaky garbage collect test,"This seems to fix TestClientAllocations_GarbageCollectAll_Remote being flaky. This test confuses me. It joins 2 servers, but then goes out of its way to make sure the test client only interacts with one. There are not enough comments for me to figure out the precise assertions this test is trying to make. A good old fashioned wait-for-the-client-to-register seems to fix the flakiness though. The error was that the node could not be found, so this makes some sense. However, lots of other tests seem to use the same ""wait for node"" logic and don't appear to be flaky, so who knows why waiting fixes this one. Passes with -race."
10652,drivers: regen proto,
10653,api: avoid codegen for syncing,"Given that the values will rarely change, specially considering that any changes would be backward incompatible change.  As such, it's simpler to keep syncing manually in the rare occasion and avoid the syncing code overhead."
10654,code review comments,
10655,revert unintended change,
10656,ar: return error from hooks if occured,
10657,drivers: fix func naming,
10658,drivers: use consts for task handle version,
10659,"drivers: add upgrade path for rawexec, java, rkt and qemu",
10660,drivers: fix test,
10661,cleanup code comments and small fixes from refactor,
10662,driver: add pre09 migration logic,
10663,executor: add pre 0.9 client and wrapper,
10664,Merge pull request #5190 from hashicorp/f-memory-usage,Track Basic Memory Usage as reported by cgroups
10665,Merge pull request #5212 from hashicorp/b-taskrunner-does-not-set-taskgroupname,task_runner does not set TaskGroupName in TaskConfig
10666,api: move formatFloat function,module function is only used in module.  Moving it and marking it as private.  We can re-export it if we find value later.
10667,api: embed pointer conversion functions,Embed pointer conversion functions in the API package to avoid unnecessary package dependency.  module package imports more dependencies relevant for internal use (e.g. module).
10668,set TaskGroupName in task_runner,
10669,documenting test for task runner failure to set TaskGroupName,
10670,"renamed mispelled function, fixed incorrect comment",
10671,api: remove MockJob from exported functions,"module is a test utility, that's only used by module package.  This moves it to the package and removes it from the public API."
10672,api: avoid import nomad/structs pkg,"nomad/structs is an internal package and imports many libraries (e.g. raft, codec) that are not relevant to api clients, and may cause unnecessary dependency pain (e.g. module version is very old now). Here, we add a code generator that imports the relevant constants from module. I considered using this approach for other structs, but didn't find a quick viable way to reduce duplication.  module use values as struct fields (e.g. module), while module uses value pointer (e.g. module) instead.  Also, sometimes, module structs contain deprecated fields or additional documentation, so simple copy-paste doesn't work. For these reasons, I opt to keep the status quo."
10673,Merge pull request #5203 from hashicorp/b-terminated,client: restore Terminated event on every exit
10674,fix vendor entry field name,
10675,Merge pull request #5204 from hashicorp/dani/loader-typo-2,Fix typo in PluginLoader
10676,Merge pull request #5174 from hashicorp/dani/windows,Some Windows fixes and CI
10677,e2e: add tests for nomad driver upgrade path,
10678,Merge pull request #5208 from hashicorp/b-tr-taskresources,Fix one more place that should be using taskResources
10679,Fix one more place that should be using taskResources,taskResources handles new resource fields in a backwards compatible way
10680,fix linting,
10681,Refactor to find jobs with child instances more effeciently,also added unit tests
10682,Use IsParameterized/isPeriodic methods,
10683,pluginloader: typo: s/validePluginConfig/validatePluginConfig,
10684,client: restore Terminated event on every exit,"v0.9.0-dev started emitting a Terminated event every time a task process exited. While this wasn't true in previous versions, it's a useful task event because it's the only place for job operators to view the task's exit code. This behavior is asserted in the e2e/taskevents tests."
10685,Fix bug in reconcile summaries that affects periodic/parameterized jobs,This fixes incorrect parent job summaries by recomputing them in the ReconcileJobSummaries method in the state store
10686,docker: Fix missing import,
10687,plugins: Require an exe extension on windows,
10688,chore: General Cleanup,
10689,Update testutil/vault.go,Co-Authored-By: dantoml link
10690,Update helper/testtask/testtask_windows.go,Co-Authored-By: dantoml link
10691,chore: Stylistic cleanup,Co-Authored-By: dantoml link
10692,appveyor: disable tests on windows again,
10693,allocwatcher: Stat_t is unavailable on win,
10694,docker: Only run Cleanup test on unix os',
10695,chore: goimports exec driver,
10696,fixup: Typo in docker test,
10697,chore: Fix docklog linting,
10698,chore: Fix docker test linting,Due to https://github.com/tsenart/deadcode/issues/3 we can't specify these consts on their own. This moves them into the _platform_test.go files to avoid creating a package that only exposes a couple of values.
10699,drivers/exec: SIGINT unavailable on windows,
10700,rawexec: Fix Exec test on windows,
10701,rawexec: SIGINT is not available on Windows,
10702,docker: Test cleanup for windows," Docker for Windows does not support ulimits Use filepath.ToSlash to test workdir Convert expected mount paths to system style Skip security-opt test on windows Windows does not support seccomp, and it's unclear which options are     available. Skip StartN due to lack of sigint docker: Use api to get image info on windows No bridge on windows Stop hardcoding /bin/"
10703,docker: ExpandPath tests validate slashpath,
10704,chore: Cleanup formatting,
10705,dockerlogger: Fix tests on windows,"Uses the home directory and windows path expansion, as c:\tmp doesn't necessarily exist, and mktemp would involve unnecessarily complicating the commands."
10706,Expand unix build definition,
10707,appveyor: GOMAXPROCS: 1,
10708,client/fs: Skip delete-while-streaming test on win,
10709,client/fs: windows error message for not found,
10710,api: Validate the slash variant of a given path,"This validates the slash variant of a RelativeDest, rather than the platform native version, to support test execution on windows."
10711,appveyor: Add gopath/bin to PATH,
10712,appveyor: Push test results as an artifact,
10713,appveyor: Fix env access?,
10714,plugins: Load plugins on windows,
10715,DROP: disable consul tests on windows,
10716,testutil: Start vault in the same routine as waiting,"This is a workaround for the windows process model. Go os/exec does not pass the parent process handle to the child processes STARTUPINFO struct, this means that unless we wait in the same execution context as Starting the process, the handle will be lost, and we cannot kill it without regaining a handle. A better long term solution would be a higher level process abstraction that uses windows.CreateProcess on windows."
10717,vaultclient: use require for error assertions,
10718,fingerprint: Limit vault shutdown waiting,"When vault is installed through chocolatey, it also installs a shim that will not pass kill signals to the child. This means the process will never actually terminate, and we lose the process handle. Here, rather than waiting forever, we timeout fast."
10719,vaultclient: Update tests for vault 1.0,
10720,fingerprinter: Use HCLogger for windows,
10721,testtask: Build on windows,
10722,chore: Setup appveyor for windows test execution,
10723,Merge pull request #5202 from hashicorp/b-no-gpl-gopsutil,Update shirou/gopsutil dep to use non-GPL code
10724,wip cluster with raw exec enabled,
10725,Update shirou/gopsutil dep to use non-GPL code,"Previously used module[1], used some GPL code [2]. This was somewhat unintentional, and was addressed later [3]. Due to being late in the cycle of Nomad release when this is noticed, and time elapsed since we updated the dependency, we want to be conservative in our package updates. As such, we opted to go with forking the repo to use the previously used version with the GPL removal code commit, done in [4]. [1] https://github.com/shirou/gopsutil/commit/5776ff9c7c5d063d574ef53d740f75c68b448e53 [2] https://github.com/shirou/gopsutil/blob/5776ff9c7c5d063d574ef53d740f75c68b448e53/host/include/smc.c [3] https://github.com/shirou/gopsutil/commit/c95755e4bcd7a62bb8bd33f3a597a7c7f35e2cf3 [4] https://github.com/shirou/gopsutil/commits/62d5761ddb7d04fc475d6316c79ff0eed1e5f96b"
10726,drivers: fix func naming,
10727,drivers: use consts for task handle version,
10728,fix imports,
10729,Merge pull request #5197 from hashicorp/b-rkt-cpu,rkt: revert to pre-0.9 --cpu flag
10730,Merge pull request #5182 from hashicorp/b-docker-fingerprint-log-once,Make driver logging less redundant
10731,clean up read access,
10732,Merge pull request #5193 from hashicorp/dani/logmon-reattach,logmon: Reattach to existing loggers
10733,Refactor logging in drivers to use a tri-state boolean,Changes logging warnings/errors only if the state changes from healthy to unhealthy
10734,"drivers: add upgrade path for rawexec, java, rkt and qemu",
10735,Make docker driver logging less redundant,
10736,Merge pull request #5199 from hashicorp/test-dispatch,test: porting TestTaskRunner_SimpleRun_Dispatch
10737,drivers: fix test,
10738,logmon: Reattach to existing loggers,This commit prevents us from creating duplicate logmon hooks when restoring allocations by persisting the logmon reattach config using HookData.
10739,test: porting TestTaskRunner_SimpleRun_Dispatch,Porting test from 0.8 to 0.9.
10740,Merge pull request #5046 from oleksii-shyman/docker_runtimes,Nvidia runtime
10741,cleanup code comments and small fixes from refactor,
10742,driver: add pre09 migration logic,
10743,executor: add pre 0.9 client and wrapper,
10744,rkt: revert to pre-0.9 --cpu flag,"See https://github.com/hashicorp/nomad/issues/3394#issuecomment-453296121 for details. During 0.9 development we switched to shares, but we'd prefer to maintain backward compat."
10745,Merge pull request #5194 from hashicorp/f-minor-update-docs-tense,docs: updated tense around fixed bug
10746,Add support for docker runtimes," docker fingerprint issues a docker api system info call to get the   list of supported OCI runtimes. OCI runtimes are reported as comma separated list of names docker driver is aware of GPU runtime presence docker driver throws an error when user tries to run container with   GPU, when GPU runtime is not present docker GPU runtime name is configurable"
10747,Update go-dockerclient and docker dependencies," go-dockerclient is updated because of lack of ""runtime"" API field docker/docker is updated because go-dockerclient depends on docker  master branch"
10748,Merge pull request #5195 from hashicorp/d-update-087-date,make change to the 0.8.7 release date
10749,make change to the 0.8.7 release date,
10750,docs: updated tense around fixed bug,
10751,Merge pull request #5192 from hashicorp/dani/executor-close,executor: Always close stdout/stderr fifos
10752,Merge pull request #5184 from hashicorp/dani/b-logmon-reattach,docker: Terminate dockerlogger
10753,executor: Always close stdout/stderr fifos,
10754,Merge pull request #5187 from hashicorp/test-consul,Port a bunch of pre-0.9 Consul tests to 0.9
10755,Merge pull request #5189 from hashicorp/b-fix-executor-logs,propagate logs to executor plugin
10756,docker: Terminate dockerlogger,"Previously, we did not attempt to stop Docker Logger processes until DestroyTask, which means that under many circumstances, we will never successfully close the plugin client. This commit terminates the plugin process when module terminates, or when module is called. Steps to repro: module"
10757,propogate logs to executor plugin,
10758,Merge pull request #5173 from hashicorp/b-log-levels,Plugins use parent loggers
10759,Track Basic Memory Usage as reported by cgroups,"Track current memory usage, module, in addition to module and friends.  This number is closer what Docker reports. Related to https://github.com/hashicorp/nomad/issues/5165 ."
10760,Merge pull request #5018 from hashicorp/f-executor-stats,executor: streaming stats api
10761,test: port some pre-0.9 DeploymentHealth tests,Skipping a failing one as I need to move to some other work and don't want to leave this work orphaned on my machine.
10762,test: assert service interpolation behavior,Ported from pre-0.9 tests.
10763,test: add some extra logging,
10764,Remove old comment; it's been fixed!,
10765,test: assert shutdown delay deregs first,Restore a pre-0.9 test that asserts Consul services are deregistered before a task's shutdown delay.
10766,Update client/allocrunner/taskrunner/stats_hook.go,Co-Authored-By: nickethier link
10767,tr: stop stats collection on Exited hook,
10768,qemu: missing gofmt,
10769,Update drivers/qemu/driver_test.go,use t.Logf instead of fmt.Printf Co-Authored-By: nickethier link
10770,tr: add retry /w backoff to stats_hook failure,
10771,drivers: plumb grpc client logger,
10772,executor: fix failing stats related test,
10773,docker: add test for stats collection,
10774,executor: implement streaming stats API,plugins/driver: update driver interface to support streaming stats client/tr: use streaming stats api TODO:  * how to handle errors and closed channel during stats streaming  * prevent tight loop if Stats(ctx) returns an error drivers: update drivers TaskStats RPC to handle streaming results executor: better error handling in stats rpc docker: better control and error handling of stats rpc driver: allow stats to return a recoverable error
10775,Merge pull request #5164 from hashicorp/b-client-addalloc-errhandle,Handle client initialization errors when adding/restoring allocs
10776,linting fixes,
10777,Make unit test for allocrunner failure much nicer,
10778,Add unit test to simulate alloc runner creation failure,
10779,Only set deployment health if not already set,
10780,Apply suggestions from code review,Co-Authored-By: preetapan link
10781,REfactor statedb factory config to set it directly in client config,
10782,Remove invalid allocs,
10783,Modified destroy failure handling to rely on allocrunner's destroy method,"Added a unit test with custom statedb implementation that errors, to use to verify destroy errors"
10784,Add back code to mark alloc as failed when restore fails,Also modify restore such that any handled errors don't propagate back to the client
10785,Revert code that made an alloc update when restore fails,Restore currently shuts down the client so the alloc update cant always make it to the server
10786,Handle client initialization errors when adding allocs or restoring allocs,We mark the alloc as failed and track failed allocs so that we don't send updates after the first time
10787,Merge pull request #5025 from hashicorp/dani/allocLockCleanup,client: Cleanup allocrunner access
10788,changelog,
10789,Enable json logs,
10790,Update client1.hcl,
10791,fix rkt use of executor,
10792,Plugins use parent loggers,"This PR fixes various instances of plugins being launched without using the parent loggers. This meant that logs would not all go to the same output, break formatting etc."
10793,Merge pull request #5181 from hashicorp/b-spread-weight,Make spread weight a pointer with default value if unset
10794,client: Cleanup allocrunner access,
10795,Make spread weight a pointer with default value if unset,
10796,Merge pull request #5175 from hashicorp/c-re-enable-tests,Re-enable client and java skipped tests
10797,Merge pull request #5179 from hashicorp/b-fix-deprecated-resources,Remove unnecessary usage of alloc.Resource
10798,Merge pull request #5144 from hashicorp/f-spread-docs,Docs for spread stanza
10799,Remove unnecessary usage of alloc.Resource,
10800,Merge pull request #5178 from hashicorp/blalor-patch-1,Oxford comma in variable interpolation summary
10801,Address review comments,
10802,Oxford comma in variable interpolation summary,This improves the readability of this section.
10803,tests: WaitForRunning checks for pending only,"WaitForRunning risks a race condition where the allocation succeeds and completes before WaitForRunning is called (or while it is running). Here, I made the behavior match the function documentation. I considered making it stricter, but callers need to account for allocation terminating immediately after WaitForRunning terminates anyway."
10804,Merge pull request #5176 from hashicorp/r-rm-validation-tests,tests: remove tests for unsupported features
10805,Spread json docs,
10806,Initial spread docs,
10807,tests: remove tests for unsupported features,"With switching to driver plugins, driver validation is quite tricky and we need to do some design thinking before supporting it against."
10808,drivers/java: use libcontainer executor on java linux,
10809,tests: ignore _JAVA_OPTIONS line,"ignore _JAVA_OPTIONS line in module, as it's relevant."
10810,tests: enable and fix tests requiring mock driver,
10811,"Adds optional Consul service tags to nomad server and agent services, gh#4297",
10812,Merge pull request #5158 from hashicorp/f-1157-validate-node-meta-variables,added validation on client metadata keys
10813,Merge pull request #5168 from hashicorp/b-kill-race,Improve Kill handling on task runner
10814,add more comments,
10815,Spelling fix,Co-Authored-By: dadgar link
10816,Merge branch 'master' of github.com:hashicorp/nomad into f-1157-validate-node-meta-variables,
10817,increased config validation coverage for dev mode,
10818,Merge pull request #5045 from hashicorp/b-drivermanager-tests-drain,drain: fix node drain monitoring
10819,Merge pull request #5166 from hashicorp/b-docker-tests-mac,tests: run docker tests in macOS out of box
10820,Merge pull request #5162 from hashicorp/f-extract-lxc,Extract LXC from nomad
10821,Merge pull request #5157 from hashicorp/r-drivers-no-cstructs,drivers: avoid referencing client/structs package
10822,Merge pull request #5167 from hashicorp/e2e-task-events,Add another task events e2e test and fix test helper
10823,Merge pull request #5163 from hashicorp/r-minor-changes-20180108,Fix a panic on node.Deregister fail
10824,fix more cases of logging arity errors,
10825,Merge pull request #5159 from hashicorp/r-macos-tests,Fix Travis MacOS job
10826,Improve Kill handling on task runner,This PR improves how killing a task is handled. Before the kill function directly orchestrated the killing and was only valid while the task was running. The new behavior is to mark the desired state and wait for the task runner to converge to that state.
10827,cli: support hitting pre-0.9 nomad agents,node.NodeResources is nil when operating against pre-0.9.
10828,Merge pull request #4991 from hashicorp/dani/b-fix-leaked-procs,vendor: Update go-plugin
10829,e2e: test task events for a failed sibling task,
10830,e2e: wait for at least N nodes to be ready,Before it was exactly N nodes which limited test portability between clusters.
10831,"move module check into config validation, to support dev-mod",validation in the future
10832,Merge pull request #4888 from hashicorp/f-docs-clarification-on-config-folders,config dir clarification
10833,tests: run docker tests in macOS out of box,"Use module as temporary directory for docker driver tests, so tests can run out of the box without any intervention. macOS sets tempdir as module, which Docker does not whitelist as a path that can be bind-mounted."
10834,fixup! remove unused field,
10835,Merge pull request #5154 from hashicorp/f-revert-exec-devs,drivers/exec: restrict devices exposed to tasks
10836,tests: fix a test job constaints failing in macOS,Allow scheduling mock job when running on MacOS (or Windows) hosts.
10837,drain: fix node drain monitoring,"The whole approach to monitoring drains has ordering issues and lacks state to output useful error messages. AFAICT to get the tests passing reliably I needed to change the behavior of monitoring. Parts of these tests are skipped in CI, and they should be rewritten as e2e tests."
10838,Merge pull request #5151 from hashicorp/b-task-events,Emit Killing task events and add e2e tests
10839,Fix panic on failure,"Error expects an odd number of arguments, and panics otherwise."
10840,remove unused field,
10841,executor: add a comment detailing isolation,
10842,vendor: Update go-plugin,"This fixes a bug related to shutting down of GRPC plugin interfaces (more info: https://github.com/hashicorp/go-plugin/pull/88) This does not yet fix all test cases for subprocess leaking, but is a useful independant change."
10843,run gofmt,
10844,appease linter,
10845,Merge pull request #5035 from hashicorp/test-client,test: re-eanble periodic fingerprint test
10846,client: emit Killing/Killed task events,"We were just emitting Killed/Terminated events before. In v0.8 we emitted Killing/Killed, but lacked Terminated when explicitly stopping a task. This change makes it so Terminated is always included, whether explicitly stopping a task or it exiting on its own. New output: 2019-01-04T14:58:51-08:00  Killed            Task successfully killed 2019-01-04T14:58:51-08:00  Terminated        Exit Code: 130, Signal: 2 2019-01-04T14:58:51-08:00  Killing           Sent interrupt 2019-01-04T14:58:51-08:00  Leader Task Dead  Leader Task in Group dead 2019-01-04T14:58:49-08:00  Started           Task started by client 2019-01-04T14:58:49-08:00  Task Setup        Building Task Directory 2019-01-04T14:58:49-08:00  Received          Task received by client Old (v0.8.6) output: 2019-01-04T22:14:54Z  Killed            Task successfully killed 2019-01-04T22:14:54Z  Killing           Sent interrupt. Waiting 5s before force killing 2019-01-04T22:14:54Z  Leader Task Dead  Leader Task in Group dead 2019-01-04T22:14:53Z  Started           Task started by client 2019-01-04T22:14:53Z  Task Setup        Building Task Directory 2019-01-04T22:14:53Z  Received          Task received by client"
10847,e2e: add task events tests,
10848,"refactored config validation into a new method, modified Meta.Client",tests appropriately
10849,Merge pull request #5034 from hashicorp/test-fix-races,Test fix races
10850,remove unused go-lxc vendored library,
10851,remove lxc references,
10852,Remove some dead code,
10853,drivers: re-export ResourceUsage structs,"Re-export the ResourceUsage structs in drivers package to avoid drivers directly depending on the internal client/structs package directly. I attempted moving the structs to drivers, but that caused some import cycles that was a bit hard to disentagle.  Alternatively, I added an alias here that's sufficient for our purposes of avoiding external drivers depend on internal packages, while allowing us to restructure packages in future without breaking source compatibility."
10854,move cstructs.DeviceNetwork to drivers pkg,
10855,use drivers.FSIsolation,
10856,remove deprecated allocrunner,
10857,remove always false parameter,"Simplify allocDir.Build() function to avoid depending on client/structs, and remove a parameter that's always set to module. The motivation here is to avoid a dependency cycle between drivers/cstructs and alloc_dir."
10858,Merge pull request #5161 from hashicorp/dani/update-net-ctx,deps: Update x/net/context
10859,Merge pull request #5042 from hashicorp/dani/f-shutdowns,plugins: Shutdown internal plugins
10860,drivers: Implement InternalPluginDriver interface,"This implements the InternalPluginDriver interface in each driver, and calls the cancellation fn for their respective eventers. This fixes a per task goroutine leak during test suite execution."
10861,drivers: Add internal interface for Shutdown,"This allows us to correctly terminate internal state during runs of the nomad test suite, e.g closing eventer contexts correctly."
10862,deps: Update x/net/context,This allows std context to be used in place of an x/net/context and unblocks updating to the latest version of go-plugin.
10863,Merge branch 'master' of github.com:hashicorp/nomad into f-1157-validate-node-meta-variables,
10864,moved interp key regex out to a helper function,
10865,Update CHANGELOG.md,Co-Authored-By: cgbaker link
10866,Merge pull request #5152 from hashicorp/f-recover,Task runner recovers from external plugin exiting
10867,Review comments,
10868,Merge pull request #5023 from nrvale0/tf-autojoin-fix,fix for user-specified auto-join tags
10869,vet,
10870,Test recovery,
10871,"Mock driver has recovery, stats",
10872,regenerate protos,
10873,comments,
10874,Fix hooks,
10875,recover,
10876,add docker logger to separate main,
10877,Don't log event error on driver shutdown,
10878,rkt fingerprint logs once,
10879,remove nil logger,
10880,Merge pull request #5043 from hashicorp/b-taskenv-conflicts,taskenv: have maps take precedence over primitives
10881,gofmt to make check happy,
10882,updated CHANGELOG to note backward incompatibility in node metadata validation,
10883,added validation on client metadata keys,
10884,Merge pull request #5148 from hashicorp/dani/f-e2e-consul,e2e: Add consultemplate test
10885,e2e: Add consultemplate test,"This adds a basic test for consul template, that verifies the behaviour of consul-template with task blocking and restarting of tasks"
10886,Merge pull request #5156 from hashicorp/f-standard-driver-health-messages,Standardize driver health description messages for all drivers
10887,tests: busybox only depends on arch,"Busybox is compiled for linux only.  Making the file used in executor tests even for non-linux targets, as having the file present has no side-effects."
10888,tests: helper function for checking docker presense,
10889,Skip tests requiring Docker deamon if not found.,
10890,Standardize driver health description messages for all drivers,
10891,Merge pull request #5155 from hashicorp/b-remove-rkt-logging,remove unnecessary logging in rkt driver fingerprint method
10892,remove unnecessary logging in rkt driver fingerprint method,
10893,drivers/exec: restrict devices exposed to tasks,"We ultimately decided to provide a limited set of devices in exec/java drivers instead of all of host ones.  Pre-0.9, we made all host devices available to exec tasks accidentally, yet most applications only use a small subset, and this choice limits our ability to restrict/isolate GPU and other devices. Starting with 0.9, by default, we only provide the same subset of devices Docker provides, and allow users to provide more devices as needed on case-by-case basis. This reverts commit 5805c64a9f1c3b409693493dfa30e7136b9f547b. This reverts commit ff9a4a17e59388dcab067949e0664f645b2f5bcf."
10894,Merge pull request #5149 from hashicorp/dani/e2e-friendly,e2e: Output setup instructions after terraform
10895,Merge pull request #5150 from hashicorp/b-task-received-event,taskrunner: emit TaskReceived event
10896,taskrunner: emit TaskReceived event,"Preserve pre-0.9, where task runner emits module event on task runner creation."
10897,Merge pull request #5146 from hashicorp/b-1173-log-spam,updated to latest hashicorp/raft and hashicorp/memberlist to pull
10898,Merge branch 'master' of github.com:hashicorp/nomad into b-1173-log-spam,
10899,updated serf along with raft,
10900,e2e: Output setup instructions after terraform,"This adds a message that provides environment setup instructions for running e2e tests after running terraform apply. This allows copy/pasting exports, rather than manually constructing them."
10901,driver/exec: use dedicated /dev mount (#5147),"Use a dedicated /dev mount so we can inject more devices if necessary, and avoid allowing a container to contaminate host /dev. Follow up to https://github.com/hashicorp/nomad/pull/5143 - and fixes master."
10902,Merge branch 'master' of github.com:hashicorp/nomad into b-1173-log-spam,
10903,updated to latest hashicorp/raft and hashicorp/memberlist to pull,upstream fixes for accept-loop error handling
10904,Merge pull request #5143 from hashicorp/b-exec-regressions,Restore some module behavior
10905,goimport file,
10906,Added waiting on client node ready state before running e2e tests,
10907,Update README.md,
10908,Update README.md,
10909,Merge pull request #5038 from hashicorp/b-drivermanager-tests,WIP: fix failing tests caused by async driver manager
10910,Increase alloc wait timeout in e2e test,
10911,drivers/exec: bind mount /dev into rootfs,"Restores pre-0.9 behavior, where Nomad makes /dev available to exec task.  Switching to libcontainer, we accidentally made only a small subset available. Here, we err on the side of preserving behavior of 0.8, instead of going for the sensible route, where only a reasonable subset of devices is mounted by default and user can opt to request more."
10912,drivers/exec: run as module by default,"libcontainer based drivers (e.g. exec, java) should default to running processes as module [1]; but libcontainer treats empty user as module in our case (either because of default or due to module being current user). [1] https://github.com/hashicorp/nomad/blob/94c28a4c6cc45f1b377d50a6bff2017b46c43d18/website/source/docs/job-specification/task.html.md#task-parameters"
10913,Update e2e readme,
10914,Update README.md,
10915,Update README.md,
10916,Merge pull request #5142 from hashicorp/dani/cleanup-allocrunner-logs,allocrunner: Standardised discard logs
10917,Increase timeout in e2e test,
10918,Merge pull request #5140 from hashicorp/dani/b-taskrunner,taskrunner: Persist environment from hooks
10919,Merge pull request #5141 from hashicorp/dani/fix-static-checks,Fix module
10920,allocrunner: Standardised discard logs,Follow up from https://github.com/hashicorp/nomad/pull/5007#pullrequestreview-186739124
10921,e2e: goimports e2eutil/utils.go,
10922,chore: Fix environement->environment typo,
10923,chore: Fix environement->environment typo,
10924,Merge pull request #5041 from hashicorp/dani/b-driver-healt,drivers: Cleanup root user fingerprinting
10925,taskrunner: Persist environment from hooks,https://github.com/hashicorp/nomad/pull/5032 introduced a regression where the origHookState was used in place of the response from the hook.
10926,Merge pull request #5037 from hashicorp/f-e2e-spread,e2e tests for spread stanza
10927,Merge pull request #5032 from hashicorp/f-driver-env,Store device envs separately and pass to drivers
10928,Clean up map update code,
10929,taskenv: have maps take precedence over primitives,"The Bug: You may have seen log lines like this when running 0.9.0-dev: module Not only should we not be erroring on builtin driver attributes, but the results were nondeterministic due to map iteration order! The root cause is that we have an old root attribute for all drivers like: module When attributes were opaque variable names it was fine to also have ""nested"" attributes like: module However in the HCLv2 world the variable names are no longer opaque: they form an object tree. The module object can no longer both hold a value (module) and nested attributes (module). The Fix: Since the old module attribues are useless for task config interpolation, create a new precedence rule for creating the task config evaluation context: Maps take precedence over primitives. This means module will always take precedence over module. The results are determinstic and give users access to the more useful metadata. I made this a general precedence rule instead of special-casing driver attrs because it seemed like better default behavior than spamming WARNings to logs that were likely unactionable by users."
10930,fix test,
10931,command: wait for drivers to be ready before test,
10932,Merge pull request #5036 from hashicorp/b-fix-release-build,client: add proper build flag to allocrunner testing.go
10933,rkt: Return consistent error when not root,
10934,java: Return undetected when not running as root,"This is an unrecoverable error, so we should only do this check once, rather than returning unhealthy constantly."
10935,exec: Return undetected when not running as root,"This is an unrecoverable error, so we should only do this check once, rather than returning unhealthy constantly."
10936,plugins: Add consistent message for requires root,
10937,fix tests,
10938,fix test,
10939,fix tests that fail as a result of async client startup,
10940,Merge pull request #5009 from hashicorp/ci-use-gotestsum,ci: use gotestsum for running tests
10941,"new e2e test for spread, and refactor affinity tests to share util methods",
10942,client: add proper build flag to allocrunner testing.go,
10943,test: re-eanble periodic fingerprint test,
10944,test: copy AR's Alloc before mutating,Fixes a race in client tests
10945,drivermgr: fix race in building driver list,
10946,test: fix race and nil panic in nomad/ tests,Race was test only and due to unlocked map access. Panic was test only and due to checking a field on a struct even when we knew the struct was nil. Race output that was fixed: ``` ================== WARNING: DATA RACE Read at 0x00c000697dd0 by goroutine 768:   runtime.mapaccess2()       /usr/local/go/src/runtime/map.go:439 +0x0   github.com/hashicorp/nomad/nomad.TestLeader_PeriodicDispatcher_Restore_Adds.func8()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/leader_test.go:402 +0xe6   github.com/hashicorp/nomad/testutil.WaitForResultRetries()       /home/schmichael/go/src/github.com/hashicorp/nomad/testutil/wait.go:30 +0x5a   github.com/hashicorp/nomad/testutil.WaitForResult()       /home/schmichael/go/src/github.com/hashicorp/nomad/testutil/wait.go:22 +0x57   github.com/hashicorp/nomad/nomad.TestLeader_PeriodicDispatcher_Restore_Adds()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/leader_test.go:401 +0xb53   testing.tRunner()       /usr/local/go/src/testing/testing.go:827 +0x162 Previous write at 0x00c000697dd0 by goroutine 569:   runtime.mapassign()       /usr/local/go/src/runtime/map.go:549 +0x0   github.com/hashicorp/nomad/nomad.(PeriodicDispatch).Add()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/periodic.go:224 +0x2eb   github.com/hashicorp/nomad/nomad.(Server).restorePeriodicDispatcher()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/leader.go:394 +0x29a   github.com/hashicorp/nomad/nomad.(Server).establishLeadership()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/leader.go:234 +0x593   github.com/hashicorp/nomad/nomad.(Server).leaderLoop()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/leader.go:117 +0x82e   github.com/hashicorp/nomad/nomad.(*Server).monitorLeadership.func1()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/leader.go:72 +0x6c Goroutine 768 (running) created at:   testing.(T).Run()       /usr/local/go/src/testing/testing.go:878 +0x650   testing.runTests.func1()       /usr/local/go/src/testing/testing.go:1119 +0xa8   testing.tRunner()       /usr/local/go/src/testing/testing.go:827 +0x162   testing.runTests()       /usr/local/go/src/testing/testing.go:1117 +0x4ee   testing.(M).Run()       /usr/local/go/src/testing/testing.go:1034 +0x2ee   main.main()       _testmain.go:1150 +0x221 Goroutine 569 (running) created at:   github.com/hashicorp/nomad/nomad.(*Server).monitorLeadership()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/leader.go:70 +0x269 ================== ```
10947,test: fix race in eval broker update chan,Similar to previous commits the delayed eval update chan was set and access from different goroutines causing a race. Passing the chan on the stack resolves the race. Race output from module in nomad/ ``` WARNING: DATA RACE Write at 0x00c000339150 by goroutine 63:   github.com/hashicorp/nomad/nomad.(EvalBroker).flush()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/eval_broker.go:708 +0x3dc   github.com/hashicorp/nomad/nomad.(EvalBroker).SetEnabled()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/eval_broker.go:174 +0xc4   github.com/hashicorp/nomad/nomad.(Server).revokeLeadership()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/leader.go:718 +0x1fd   github.com/hashicorp/nomad/nomad.(Server).leaderLoop()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/leader.go:122 +0x95d   github.com/hashicorp/nomad/nomad.(*Server).monitorLeadership.func1()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/leader.go:72 +0x6c Previous read at 0x00c000339150 by goroutine 73:   github.com/hashicorp/nomad/nomad.(*EvalBroker).runDelayedEvalsWatcher()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/eval_broker.go:771 +0x176 Goroutine 63 (running) created at:   github.com/hashicorp/nomad/nomad.(*Server).monitorLeadership()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/leader.go:70 +0x269 Goroutine 73 (running) created at:   github.com/hashicorp/nomad/nomad.(EvalBroker).SetEnabled()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/eval_broker.go:170 +0x173   github.com/hashicorp/nomad/nomad.(Server).establishLeadership()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/leader.go:207 +0x355   github.com/hashicorp/nomad/nomad.(Server).leaderLoop()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/leader.go:117 +0x82e   github.com/hashicorp/nomad/nomad.(Server).monitorLeadership.func1()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/leader.go:72 +0x6c ================== ```
10948,test: fix race around block eval chans,"Similar to previous commit, stop and change chans were being set and accessed from different goroutines. Passing the chans on the stack resolves the race. Output from `go test -race -run 'Server_RPC$' in nomad/ ``` WARNING: DATA RACE Write at 0x00c0002b4e10 by goroutine 63:   github.com/hashicorp/nomad/nomad.(BlockedEvals).Flush()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/blocked_evals.go:648 +0x32a   github.com/hashicorp/nomad/nomad.(BlockedEvals).SetEnabled()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/blocked_evals.go:149 +0x12b   github.com/hashicorp/nomad/nomad.(Server).revokeLeadership()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/leader.go:721 +0x232   github.com/hashicorp/nomad/nomad.(Server).leaderLoop()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/leader.go:122 +0x95d   github.com/hashicorp/nomad/nomad.(*Server).monitorLeadership.func1()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/leader.go:72 +0x6c Previous read at 0x00c0002b4e10 by goroutine 75:   github.com/hashicorp/nomad/nomad.(*BlockedEvals).watchCapacity()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/blocked_evals.go:483 +0xfe Goroutine 63 (running) created at:   github.com/hashicorp/nomad/nomad.(*Server).monitorLeadership()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/leader.go:70 +0x269 Goroutine 75 (finished) created at:   github.com/hashicorp/nomad/nomad.(BlockedEvals).SetEnabled()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/blocked_evals.go:141 +0xba   github.com/hashicorp/nomad/nomad.(Server).establishLeadership()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/leader.go:210 +0x392   github.com/hashicorp/nomad/nomad.(Server).leaderLoop()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/leader.go:117 +0x82e   github.com/hashicorp/nomad/nomad.(Server).monitorLeadership.func1()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/leader.go:72 +0x6c ================== ================== WARNING: DATA RACE Write at 0x00c0002b4e50 by goroutine 63:   github.com/hashicorp/nomad/nomad.(BlockedEvals).Flush()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/blocked_evals.go:649 +0x388   github.com/hashicorp/nomad/nomad.(BlockedEvals).SetEnabled()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/blocked_evals.go:149 +0x12b   github.com/hashicorp/nomad/nomad.(Server).revokeLeadership()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/leader.go:721 +0x232   github.com/hashicorp/nomad/nomad.(Server).leaderLoop()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/leader.go:122 +0x95d   github.com/hashicorp/nomad/nomad.(*Server).monitorLeadership.func1()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/leader.go:72 +0x6c Previous read at 0x00c0002b4e50 by goroutine 77:   github.com/hashicorp/nomad/nomad.(*BlockedEvals).prune()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/blocked_evals.go:690 +0xae Goroutine 63 (running) created at:   github.com/hashicorp/nomad/nomad.(*Server).monitorLeadership()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/leader.go:70 +0x269 Goroutine 77 (finished) created at:   github.com/hashicorp/nomad/nomad.(BlockedEvals).SetEnabled()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/blocked_evals.go:142 +0xdc   github.com/hashicorp/nomad/nomad.(Server).establishLeadership()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/leader.go:210 +0x392   github.com/hashicorp/nomad/nomad.(Server).leaderLoop()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/leader.go:117 +0x82e   github.com/hashicorp/nomad/nomad.(Server).monitorLeadership.func1()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/leader.go:72 +0x6c ================== ```"
10949,test: fix race around updateCh handling,"PeriodicDispatch.SetEnabled sets updateCh in one goroutine, and PeriodicDispatch.run accesses updateCh in another. The race can be prevented by having SetEnabled pass updateCh to run. Race detector output from module in nomad/ ``` WARNING: DATA RACE Write at 0x00c0001d3f48 by goroutine 75:   github.com/hashicorp/nomad/nomad.(PeriodicDispatch).SetEnabled()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/periodic.go:468 +0x256   github.com/hashicorp/nomad/nomad.(Server).revokeLeadership()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/leader.go:724 +0x267   github.com/hashicorp/nomad/nomad.(Server).leaderLoop.func1()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/leader.go:131 +0x3c   github.com/hashicorp/nomad/nomad.(Server).leaderLoop()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/leader.go:163 +0x4dd   github.com/hashicorp/nomad/nomad.(*Server).monitorLeadership.func1()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/leader.go:72 +0x6c Previous read at 0x00c0001d3f48 by goroutine 515:   github.com/hashicorp/nomad/nomad.(*PeriodicDispatch).run()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/periodic.go:338 +0x177 Goroutine 75 (running) created at:   github.com/hashicorp/nomad/nomad.(*Server).monitorLeadership()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/leader.go:70 +0x269 Goroutine 515 (running) created at:   github.com/hashicorp/nomad/nomad.(PeriodicDispatch).SetEnabled()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/periodic.go:176 +0x1bc   github.com/hashicorp/nomad/nomad.(Server).establishLeadership()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/leader.go:231 +0x582   github.com/hashicorp/nomad/nomad.(Server).leaderLoop()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/leader.go:117 +0x82e   github.com/hashicorp/nomad/nomad.(Server).monitorLeadership.func1()       /home/schmichael/go/src/github.com/hashicorp/nomad/nomad/leader.go:72 +0x6c ================== ```"
10950,Fix spread e2e test,
10951,Initial e2e tests for spread,
10952,Merge pull request #5030 from hashicorp/test-client-statusupdate,client: assert alloc status updates work
10953,Store device envs separately and pass to drivers,
10954,proto,
10955,Merge pull request #5003 from hashicorp/f-state-upgrade,Support upgrading state from
10956,client: assert alloc status updates work,Re-enabling and updating an old test. Able to cut out a ton of extra work by using WaitForRunning which does almost everything this test needs.
10957,add link on monitoring home for easier navigation (#5028),
10958,client/state: missing deploy status isn't an error,Fixes TestClient_SaveRestoreState
10959,tests: implement HasHealth for mock health,
10960,gofmt -s -w upgrade_int_test.go,
10961,client/state: improve upgradeTaskBucket error handling,And add a test
10962,client/state: add context to errors,Unfortunately I don't know how to test these errors. As far as I can tell they should only happen if there was a programming error in the upgrade code or the underlying boltdb was corrupted somehow.
10963,client/state: use 2 as version; test error path,
10964,client/state: support upgrading from 0.8->0.9,Also persist and load DeploymentStatus to avoid rechecking health after client restarts.
10965,client/state: reorg state buckets to ease transition, Prefix task bucket with task- to prevent name conflicts Shorten device manager bucket name Remove commented out outdated var Update layout comment
10966,tr: fix HookState Copy() and Equal() methods,They did not take into account the Env field.
10967,Merge pull request #5027 from hashicorp/dani/b-allocrunner-routine,allocrunner: Close updates routine correctly
10968,allocrunner: Close updates routine correctly,
10969,Make affinity e2e tests wait for leader through Before method,
10970,minor refactoring of affinities tests,
10971,changelog: Add entry for glob namespaces,
10972,Merge pull request #4982 from hashicorp/f-acls-glob-ns,acl: Add support for globbing namespaces
10973,guides: Update for globbed namespace rules,
10974,Merge pull request #4964 from hashicorp/f-drivermananger-part2,client driver manager
10975,devicemanager: fix devicemanager tests,
10976,drivermanager: use correct plugin config types,
10977,drivermanager: attempt to reattach and shutdown driver plugin if blocked by allow/block lists,
10978,drivermanager: use allocID and task name to route task events,
10979,client/pluginmanager: add plugin manager interface to device/driver managers,
10980,client: batch initial fingerprinting in plugin manangers,drivermanager: fix pr comments/feedback
10981,client/drivermananger: fixup issues from rebase and address PR comments,
10982,tr: deregister task handler on cleanup,
10983,client/drivermananger: add driver manager,"The driver manager is modeled after the device manager and is started by the client. It's responsible for handling driver lifecycle and reattachment state, as well as processing the incomming fingerprint and task events from each driver. The mananger exposes a method for registering event handlers for task events that is used by the task runner to update the server when a task has been updated with an event. Since driver fingerprinting has been implemented by the driver manager, it is no longer needed in the fingerprint mananger and has been removed."
10984,Merge pull request #5015 from hashicorp/f-plugin-versions,Add plugin API versioning to plugin loader and plugins
10985,fix docker launching plugins,
10986,lint,
10987,Add plugin API versioning to plugin loader and plugins,
10988,base fixes,
10989,protos,
10990,Merge pull request #5002 from hashicorp/b-task-config-resources,Convert driver resource to AllocatedTaskResource
10991,Merge pull request #5024 from hashicorp/f-affinities-e2e,Affinities e2e tests
10992,Affinities e2e tests,
10993,Merge pull request #5007 from hashicorp/dani/f-allocrunner-async,allocrunner: Async api for shutdown/destroy/update
10994,Fix unit tests + upgrade pathing resources,
10995,Lint,
10996,LinuxResources doesn't use task.Resources,
10997,Drivers,
10998,utilities,
10999,protos,
11000,change retry_join to a map for easier tag handling,
11001,Merge pull request #5021 from hashicorp/dani/rand-tasks,taskrunner: Use a random suffix for Task Config
11002,taskrunner: Use a random suffix for Task Config,"The RestartCount is not really suitable for use as a source of uniqueness within task invocations as it is not monotonic, and interacts with the restart stanza in a users config, so conflates restarts due to task failures, with restarts due to enviromental changes, such as consul template or vault secrets changing. Here we instead use a substring from a uuid, which is more random than we strictly need, but is nicer than rolling our own random string generator here."
11003,client: Update tests for async destroy,
11004,allocrunner: Drop and log updates after closing waitCh,
11005,allocrunner: Documentation for ShutdownCh/DestroyCh,
11006,fixup: Log when we detect out of order updates,
11007,allocrunner: Handle updates asynchronously,"This creates a new buffered channel and goroutine on the allocrunner for serializing updates to allocations. This allows us to take updates off the routine that is used from processing updates from the server, without having complicated machinery for tracking update lifetimes, or other external synchronization. This results in a nice performance improvement and signficantly better throughput on batch changes such as preempting a large number of jobs for a larger placement."
11008,gc: Wait for allocrunners to be destroyed,
11009,client: Async API for shutdown/destroy allocrunners,
11010,allocrunner: Async shutdown and destroy,"This commit reduces the locking required to shutdown or destroy allocrunners, and allows parallel shutdown and destroy of allocrunners during shutdown."
11011,Commenting out dead link to demo.nomadproject.io (#5017),  removing dead link   comment out header and footer to UI demo   adding reference to link back and commenting it out 
11012,Merge pull request #5012 from hashicorp/f-e2e-provisioning,Terraform configs for e2e tests
11013,added readme,
11014,Merge pull request #4981 from hashicorp/b-ui-hide-stats-graphs-for-non-running-resources,UI: Hide stats graphs for non running resources
11015,Merge pull request #5016 from hashicorp/dani/b-docker-delete-task-on-destroy,docker: Delete Task on Destroy
11016,docker: Delete Task on Destroy,"Currently the docker driver does not remove tasks from its state map when destroying the task, which leads to issues when restarting tasks in place, and leaks expired handles over time."
11017,Merge pull request #4994 from hashicorp/b-ui-dots-in-tasks,UI: Bugs around dots in task/task-group/driver names
11018,suggestions from code review,
11019,Terraform configs for e2e tests,
11020,Merge pull request #4989 from hashicorp/dani/b-client-update-race-condition,client: Give a copy of clientconfig to allocrunner
11021,Merge pull request #5004 from hashicorp/dani/f-hook-errors,client: Emit TaskEvents when task hooks fail
11022,taskrunner: Use hook errors for artifacts,
11023,Remove implicit check,I intended to remove this line in 29ef7ecf2372f980d12a9900e1b2a351568dd415 - see my notes there for details.
11024,ci: use gotestsum for running tests,"module has user friendlier output that emits final summary, also it can emit junit xml file for automated analysis instead of current format that should significantly ease automated analysis of CI."
11025,tests: fix rkt command environment (#5011),"The environment variables needed for envoking module command line should include host PATH (to access module). Given that the command runs outside the VM, untrusted task environment variables should NOT be honored here. We do this already with module, but the change is quite subtle to miss when refactoring."
11026,Merge pull request #5008 from hashicorp/b-docker-test-20181214,Fix flakiness in docker tests
11027,tests: avoid implicitly asserting clean shutdown,"The assertion here is causing many spurious failures that aren't actually relevant to the test itself. We are tracking the cause for this failure independently, and it would make more sense to have a dedicated test for clean shutdown."
11028,testes: remove TestDockerDriver_Kill,"We already have two other Kill tests (e.g. TestDockerDriver_Start_Kill_Wait and TestDockerDriver_Start_KillTimeout), so don't need yet another flaky test."
11029,driver/docker: stopping a dead container not error,
11030,tests: assert docker containers start,
11031,tests: try deflake TestDockerDriver_OOMKilled,"Noticed an issue in Docker daemon failing to handle the OOM test case failure in build https://travis-ci.org/hashicorp/nomad/jobs/468027848 , and I suspect it's related to the process dying so quickly, and potentially the way we are starting the task, so added a start up delay and made it more consistent with other tests that don't seem as flaky. The following is the log line showing Docker returning 500 error condition; while we can probably handle it gracefully without retrying, the retry is very cheap in this case and it's more of an optimization that we can handle in follow up PR. module"
11032,tests: pin busybox image to a specific point tag,"Using module tag is typically a cause of pain, as underlying image changes behavior.  Here, I'm switching to using a point release, and re-updating the stored tarballs with it. Sadly, when saving/loading images, the repo digeset is not supported: https://github.com/moby/moby/issues/22011 ; but using point releases should mitigate the problem. The motivation here is that docker tests have some flakiness due to accidental importing of module which has module that no longer supports module: module Looks like older busybox versions (e.g. module do honor module as the test expect, but I would rather update busybox to fix."
11033,Merge pull request #4961 from hashicorp/f-grpc-executor,GRPC Executor
11034,executor: encode mounts and devices correctly when using grpc,
11035,rawexec: fix misleading log,
11036,executor: use int when encoding signal in RPC,
11037,Merge pull request #5005 from hashicorp/dev-update-golang-1.11.3,Upgrade to Golang 1.11.3
11038,dev: expand ... in go get,"workaround a regression in 1.11.3  We are aware of a functionality regression in ""go get"" when executed in GOPATH mode on an import path pattern containing ""..."" (e.g., ""go get github.com/golang/pkg/...""), when downloading packages not already present in the GOPATH workspace. This is issue golang.org/issue/29241. It will be resolved in the next minor patch releases, Go 1.11.4 and Go 1.10.7, which we plan to release soon. We apologize for any disruption."
11039,dev: upgrade go to 1.11.3,
11040,Update changelog (#4993),
11041,Merge branch 'master' into f-grpc-executor, master: (71 commits)   Fix output of 'nomad deployment fail' with no arg   Always create a running allocation when testing task state   tests: ensure exec tests pass valid task resources (#4992)   some changes for more idiomatic code   fix iops related tests   fixed bug in loop delay   gofmt   improved code for readability   client: updateAlloc release lock after read   fixup! device attributes in module   drivers/exec: support device binds and mounts   fix iops bug and increase test matrix coverage   tests: tag image explicitly   changelog   ci: install lxc-templates explicitly   tests: skip checking rdma cgroup   ci: use Ubuntu 16.04 (Xenial) in TravisCI   client: update driver info on new fingerprint   drivers/docker: enforce volumes.enabled (#4983)   client: Style: use fluent style for building loggers   ...
11042,Merge pull request #4999 from hashicorp/blalor-patch-1,Fix output of 'nomad deployment fail' with no arg
11043,Fix output of 'nomad deployment fail' with no arg,
11044,taskrunner: Emit task events when a hook fails,
11045,Don't use Ember.get in conjunction with dynamic strings in the job-plan serializer,
11046,Don't use Ember.get in conjunction with dynamic strings in the allocation serializer,
11047,Don't use Ember.get in conjunction with dynamic strings in the node serializer,
11048,Don't use Ember.get in conjunction with dynamic strings in the deployment serializer,
11049,Don't use Ember.get in conjunction with dynamic strings in the job-summary serializer,
11050,Don't use Ember.get in conjunction with dynamic strings in the evaluation serializer,
11051,Test coverage for resource graph empty states,
11052,Test coverage for allocation rows,
11053,Conditionally show the utilization graphs on the allocation and task detail pages,
11054,Conditionally show utilization metrics on alloc and task rows,
11055,Task isRunning is based on both the task state and the allocation state,
11056,Model isRunning based on the client status of the allocation,
11057,Merge pull request #4998 from hashicorp/b-ui-test-failure,"UI: Fix intermittent test failure ""cannot read property name of undefined"""
11058,Always create a running allocation when testing task state,
11059,Merge pull request #4990 from hashicorp/dani/b-alloc-lock,client: updateAlloc release lock after read
11060,client: Give a copy of clientconfig to allocrunner,"Currently, there is a race condition between creating a taskrunner, and updating node attributes via fingerprinting. This is because the taskenv builder will try to iterate over the clientconfig.Node.Attributes map, which can be concurrently updated by the fingerprinting process, thus causing a panic. This fixes that by providing a copy of the clientconfg to the allocrunner inside the Read lock during config creation."
11061,tests: ensure exec tests pass valid task resources (#4992),"Prior to 97f33bb1537d04905cb84199672bcdf46ebb4e65, executor cgroup validation errors were silently ignored.  Enforcing them reveals test cases that missed them. This doesn't change customer facing contract, as resource struct is is either configured or we default to 100 (much higher than 2)."
11062,Merge pull request #4974 from hashicorp/b-1173-log-spam,rpc accept loop: added backoff on logging
11063,Merge pull request #4978 from hashicorp/f-device-tweaks,Display device attributes in module
11064,some changes for more idiomatic code,
11065,Merge pull request #4969 from hashicorp/f-alloc-hooks,Make alloc health watcher a postrun hook rather than shutdown hook
11066,fix iops related tests,
11067,fixed bug in loop delay,
11068,gofmt,
11069,improved code for readability,
11070,client: updateAlloc release lock after read,"The allocLock is used to synchronize access to the alloc runner map, not to ensure internal consistency of the alloc runners themselves. This updates the updateAlloc process to avoid hanging on to an exclusive lock of the map while applying changes to allocrunners themselves, as they should be internally consistent. This fixes a bug where any client allocation api will block during the shutdown or updating of an allocrunner and its child taskrunners."
11071,fixup! device attributes in module,
11072,fixup: Code Review,
11073,Merge pull request #4962 from hashicorp/f-exec-device-mounts,drivers/exec: Support devices mounts
11074,Merge pull request #4881 from hashicorp/f-device-preemption,Device preemption
11075,Merge pull request #4986 from hashicorp/b-vault-e2e,fix iops bug and increase test matrix coverage
11076,drivers/exec: support device binds and mounts,
11077,fix iops bug and increase test matrix coverage,
11078,Merge pull request #4984 from hashicorp/b-client-update-driver,client: update driver info on new driver fingerprint
11079,Merge pull request #4985 from hashicorp/test-with-xenial,ci: Test with Ubuntu 16.04 in TravisCI
11080,Merge pull request #4975 from hashicorp/fix-master-20181209,Some test fixes and remedies
11081,tests: tag image explicitly,
11082,changelog,
11083,Merge pull request #4970 from hashicorp/f-no-iops,Deprecate IOPS
11084,ci: install lxc-templates explicitly,"LXC package on Ubuntu 16.04 doesn't depend on lxc-template, but we require it in our tests."
11085,tests: skip checking rdma cgroup,rdma was added in most recent kernels and libcontainer/docker don't isolate them by default.
11086,ci: use Ubuntu 16.04 (Xenial) in TravisCI,
11087,client: update driver info on new fingerprint,"Fixes a bug where a driver health and attributes are never updated from their initial status.  If a driver started unhealthy, it may never go into a healthy status."
11088,drivers/docker: enforce volumes.enabled (#4983),"When volumes.enable flag is off in Docker driver, disable all mounts of paths outside alloc dir."
11089,Merge pull request #4963 from hashicorp/dani/f-preempt-alloc-wait,client: Wait for preemptions to terminate
11090,client: Style: use fluent style for building loggers,
11091,"fixup: Correctly sort based on distance, use iradix for ordering",
11092,Early continue after meeting needed count,Also adds another optimization that filters out un-needed allocations as a final filtering step
11093,acl: Add support for globbing namespaces,"This commit adds basic support for globbing namespaces in acl definitions. For concrete definitions, we merge all of the defined policies at load time, and perform a simple lookup later on. If an exact match of a concrete definition is found, we do not attempt to resolve globs. For glob definitions, we merge definitions of exact replicas of a glob. When loading a policy for a glob defintion, we choose the glob that has the closest match to the namespace we are resolving for. We define the closest match as the one with the smallest character difference between the glob and the namespace we are matching."
11094,client: Correctly pass a noop PrevAllocMigrator when restoring,
11095,add a note about busybox license,
11096,tests: no need for buffer channel,
11097,tests: prevent indefinite blocking in some tests,"Noticed few places where tests seem to block indefinitely and panic after the test run reaches the test package timeout. I intend to follow up with the proper fix later, but timing out is much better than indefinitely blocking."
11098,tests: update stop/kill tests with new pattern,Update rawexec and rkt stop/kill tests with the patterns introduced in 7a49e9b68e519050a0c2ef0b67c33503bfbc51be.  This implementation should be more resilient to discrepancy between task stopping and task being marked as exited.
11099,test: fix TestFingerprintManager_Run_Combination,Let's use a fingerprinter that doesn't have values prepopulated in test fixtures.
11100,tests: setup libcontainer rootfs,"Using statically linked busybox binary to setup a basic rootfs for testing, by symlinking it to provide the basic commands used in tests. I considered using a proper rootfs tarball, but the overhead of managing tarfile and expanding it seems significant enough that I went with this implementation."
11101,tests: Lower package runtime,"Lowering the runtime here to pre 7ca535aa90748caff1522468cc0c4ab672a74abb expectations. The longest package at the time module shrunk significantly, and now the longest packages take less than 5 minutes. We do have some long running timed out projects due to a stuck shutdown, but in completed jobs (though they failed), the longest packages took less than 5 minutes.  The longest running packages in https://travis-ci.org/hashicorp/nomad/jobs/464640776 were: module"
11102,allocrunner: Test alloc runners should include a noop migrator,
11103,allocwatcher: Cleanup new migrator/watcher interface,
11104,client: Unify handling of previous and preempted allocs,
11105,Merge pull request #4953 from hashicorp/b-script-context-wrapper,consul: add ScriptExecutor context wrapper
11106,Merge pull request #4952 from hashicorp/b-script-context,consul: fix script checks exiting after 1 run
11107,client: Wait for preempted allocs to terminate,"When starting an allocation that is preempting other allocs, we create a new group allocation watcher, and then wait for the allocations to terminate in the allocation PreRun hooks. If there's no preempted allocations, then we simply provide a NoopAllocWatcher."
11108,allocwatcher: Add Group AllocWatcher,"The Group Alloc watcher is an implementation of a PrevAllocWatcher that can wait for multiple previous allocs before terminating. This is to be used when running an allocation that is preempting upstream allocations, and thus only supports being ran with a local alloc watcher. It also currently requires all of its child watchers to correctly handle context cancellation. Should this be a problem, it should be fairly easy to implement a replacement using channels rather than a waitgroup. It obeys the PrevAllocWatcher interface for convenience, but it may be better to extract Migration capabilities into a seperate interface for greater clarity."
11109,typo,
11110,merge 087 and 090 changelog,
11111,Use max 3 precision in displaying floats,"When formating floats in module, use a maximum precision of 3."
11112,device attributes in module,This reports device attributes like the following: ``` $ nomad node status -self -verbose ID          = f7adb958-29e1-2a5a-2303-9d61ffaab33a Name        = mars.local Class       =  DC          = dc1 Drain       = false Eligibility = eligible Status      = ready Uptime      = 12h40m13s Drivers Driver       Detected  Healthy  Message                               Time docker       true      true     healthy                               2018-12-10T11:47:19-05:00 ... Attributes cpu.arch                      = amd64 cpu.frequency                 = 2200 cpu.modelname                 = Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz cpu.numcores                  = 12 ... Device Group Attributes Device Group = nomad/file/mock block_device = sda1 filesystem   = ext4 size         = 63.2 GB Meta ```
11113,Rename helper_stats -> helper_devices,
11114,devices/nvidia: memory state as the summary stat,
11115,fix dtestutil.NewDriverHarness ref,
11116,Merge pull request #4950 from hashicorp/b-exc-libcontainer-kill,executor: kill all container processes
11117,executor: misspell,
11118,Merge pull request #4973 from emate/recover-filerotator-from-io-errors,Recover from any possible io error when invoking Write on FileRotator
11119,Score combinations of allocs from multiple devices for preemption,
11120,"updated memberlist dependency to latest, which is missing NMD-1173 error",
11121,"nomad/rpc listener: modified to throttle logging on ""permanent"" Accept() errors as well (with a higher delay cap)",
11122,Merge pull request #4965 from hashicorp/b-gc-running,Don't GC running but desired stop allocations
11123,"rpc accept loop: added backoff on logging for failed connections, in case there is a fast fail loop (NMD-1173)",
11124,"executor: don't drop errors when configuring libcontainer cfg, add nil check on resources",
11125,Recover from any possible io error when invoking Write on FileRotator,"As of now, FileRotator uses bufio.Write under the hood to write data to configured output file. Due to the way how bufio handles any occurred io error - saves it into module variable never resetting it automatically - any operation like module, module etc will become a no-op, returning the very same, saved error (eg. Out of disk space) even when the problem is fixed (eg. disk space is available again). That automatically means that FileRotator will stop writing any logs, reporting the same error over and over again, even if it's no longer valid. This PR fixes it by resetting the bufio Writer, which resets any errors and tries to write requested data."
11126,Merge pull request #4933 from hashicorp/f-mount-device,Mount Devices in container based drivers
11127,Vendor libcontainer/devices,
11128,Merge branch 'master' into f-grpc-executor,
11129,executor: fix tests,
11130,executor: fix broken non-linux build,
11131,executor: use drivers.Resources as resource model,
11132,executor: merge plugin shim with executor package,
11133,executor: remove structs package,
11134,Warn if IOPS is being used,
11135,Deprecate IOPS,"IOPS have been modelled as a resource since Nomad 0.1 but has never actually been detected and there is no plan in the short term to add detection. This is because IOPS is a bit simplistic of a unit to define the performance requirements from the underlying storage system. In its current state it adds unnecessary confusion and can be removed without impacting any users. This PR leaves IOPS defined at the jobspec parsing level and in the api/ resources since these are the two public uses of the field. These should be considered deprecated and only exist to allow users to stop using them during the Nomad 0.9.x release. In the future, there should be no expectation that the field will exist."
11136,Merge pull request #4960 from hashicorp/dani/b-gc-tests,Re-enable Client GC tests
11137,Merge pull request #4955 from hashicorp/fix-docker-tests-20181203,Fix docker driver tests
11138,gc: Fix maxallocs integration test,
11139,Use absolute path in example device plugin,"deviceDir is used for specifying mount/device host paths, and those should be absolute paths."
11140,driver/rkt: mount plugin devices,
11141,driver/lxc: mount plugin devices,"Also, LXC requires target paths to be relative.  Container paths in LXC binds should never be absolute paths, so we strip any preceeding module, even if a user sets one."
11142,fixup: add missed docker utils test,
11143,tests: ensure image is loaded as test setup,
11144,Make alloc health watcher a postrun hook rather than shutdown hook,
11145,Merge pull request #4967 from hashicorp/b-ui-stat-charts-can-escape-canvas,UI: Keep line charts in their canvases at all times
11146,client/gc: Replace GC integration test with unit,"The previous integration test was broken during the client refactor, and it seems to be some sort of race with state updating. I'm going to try and construct a replacement test as part of work on performance, but for now, the underlying behaviour is still being tested."
11147,client: Re-enable GC tests,
11148,allocrunner: Basic test alloc runner,
11149,Grow the default 0 to 1 bounds to the domain of the data when necessary,
11150,Merge pull request #4966 from hashicorp/b-failure-event,Fix various bugs with task events
11151,Fix various bugs with task events,Fixes the following: * Emitting events when the task fails to start * Don't double emit events on task shutdown (nomad stop) * Don't emit a OOM kill metric unless actually OOM'd
11152,Don't GC running but desired stop allocations,This PR fixes an edge case where we could GC an allocation that was in a desired stop state but had not terminated yet. This can be hit if the client hasn't shutdown the allocation yet or if the allocation is still shutting down (long kill_timeout). Fixes https://github.com/hashicorp/nomad/issues/4940
11153,executor: update test references,
11154,executor: update driver references,
11155,executor: use grpc instead of netrpc as plugin protocol, Added protobuf spec for executor Seperated executor structs into their own package
11156,driver/docker: honor plugin devices,
11157,refactor device manipulation,
11158,drivers/exec: refactor stop/kill tests,Simplify the tests to do all assertions within the main goroutine and account for status propagation delay.
11159,Merge pull request #4956 from hashicorp/b-vault-client-tweaks-followup,server/vault: Lock Vault expiration tracking
11160,Merge pull request #4959 from hashicorp/fix-rkt-tests-20181204,tests: fix rkt tests
11161,executor: Keep 0.8.6 exit code for wait() failures,0.8.6 uses exit code 1 when module fails: https://github.com/hashicorp/nomad/blob/v0.8.6/client/driver/executor/executor.go#L442
11162,driver/rkt: use rkt environment,The rkt command itself needs an environment with PATH set to find iptables.
11163,Merge pull request #4949 from hashicorp/b-neg-running-summary,Add guards around subtracting summary count
11164,tests: stop integration tests tasks explicitly,Also update the new recommended module subcommands
11165,Add Reference Architecture and Deployment Guide (#4768),"  Add Nomad RA   Add deployment guide and nav   Deployment Guide update   Minor typo fixes   Update diagrams   Fixes for review   Link fixes and typo fix   Edits following review   Update image text from ""zone"" to ""datacenter"" to match Nomad terminology   Clean up text based on Preetha's feedback   Text updates   Based on feedback from Rob   Update diagrams   fixing spelling   Add suggestions from Preetha and Omar "
11166,drivers/rkt: use image isolation for rkt,
11167,tests: don't assert in WaitForResult,WaitForResult expects body to fail and retries few times before giving up.  Assertions inside the testfn body causes it to terminate abruptly without retrying.
11168,server/nomad: Lock Vault expiration tracking,"module field is accessed in multiple goroutines: Stats and renewal, so needs locking. I don't anticipate high contention, so simple mutex suffices."
11169,no t.Parallel() in excutor table driven tests (#4948),"When module is used inside a module sub-set, the closure doesn't behave as expected, and some cases effectively get skipped. More details can be found in https://gist.github.com/posener/92a55c4cd441fc5e5e85f27bca008721"
11170,Update LXC with drivers/testutils changes (#4951),
11171,consul: add ScriptExecutor context wrapper,"Since d335a82859ca2177bc6deda0c2c85b559daf2db3 ScriptExecutors now take a timeout duration instead of a context. This broke the script check removal code which used context cancelation propagation to remove script checks while they were executing. This commit adds a wrapper around ScriptExecutors that obeys context cancelation again. The only downside is that it leaks a goroutine until the underlying Exec call completes or timeouts. Since check removal is relatively rare, check timeouts usually low, and scripts usually fast, the risk of leaking a goroutine seems very small."
11172,Fix docker tests,"Some tests have containers that die almost immediately, and may die and cleaned up before module runs. The causes for container dying seems special for each test: * TestDockerDriver_Cleanup: module image just emits a message and exits immediately * TestDockerDriver_ForcePull_RepoDigest: the busybox image in module test didn't support module argument * TestDockerDriver_Entrypoint: with the entrypoint being module, the command needs to be the entire string; otherwise, it ignores the comments"
11173,consul: fix script checks exiting after 1 run,Fixes a regression caused in d335a82859ca2177bc6deda0c2c85b559daf2db3 The removal of the inner context made the remaining cancels cancel the outer context and cause script checks to exit prematurely.
11174,Kill all container processes on shutdown,"Currently, libcontainer-based executor, upon shutdown, kills the container initial process.  The children of the killed process remain running, and the executor is never marked as terminated until they do. Also, fix a case where we treat processes as successful, when module fails.  In some attempts, I was getting ""waitid no child processes"" errors and such error shouldn't get process to be considered successful."
11175,Test Stopping a multi-process exec,Ensure that exec children processes get killed as well.
11176,Merge pull request #4925 from hashicorp/f-driver-plugins-dani,Third Party Driver Plugins Support
11177,Merge pull request #4947 from githubfoam/update-demo-vagrantfile,no need to double the work
11178,Add guards around subtracting summary count,
11179,libcontainer to manage /dev and /proc (#4945),"libcontainer already manages module, overriding task_dir - so let's use it for module as well and remove deadcode."
11180,use structured logging everywhere consistently,
11181,no need to double the work,
11182,plugins: Add support for serving driver plugins,
11183,plugins: Move driver testing support to subpackage,"this allows us to drop a cyclical import, but is subobptimal as it requires BaseDriver tests to move. This falls firmly into the realm of being a hack. Alternatives welcome."
11184,testfix: Fix import cycle in allocdir tests,
11185,client: Move fingerprint structs to pkg,"This removes a cyclical dependency when importing client/structs from dependencies of the plugin_loader, specifically, drivers. Due to client/config also depending on the plugin_loader. It also better reflects the ownership of fingerprint structs, as they are fairly internal to the fingerprint manager."
11186,Update changelog (#4942),Batch update for the PRs I recently merged.
11187,remove redirects for vault-integration docs (#4943),
11188,Merge pull request #4936 from hashicorp/f-legacy-refactor,Refactor and repackage client/driver
11189,Merge pull request #4926 from hashicorp/f-docker-image-ref,Use user provided image name to launch container
11190,Merge pull request #4924 from hashicorp/f-docker-mounts,Support bind and tmpfs docker mounts
11191,docs: Use valid docker bind propagation field,Co-Authored-By: notnoop link
11192,client: Rename drivers/shared/env => client/taskenv,
11193,Revert accidental changes to vendor/,
11194,executors: Unify go-plugin handshake,
11195,client: Merge driver/shared/structs and client/structs,
11196,client/driver: Remove package,
11197,nomad: Remove on-submission job validation,"With the introduction of driver plugins, we're temporarily relying on run time validation of driver configurations, rather than submission time."
11198,fixup: executorplugin: fix rkt build,
11199,client/driver: Vendor setEnvvars into docker_test,
11200,client: Move executor plugins into own package,
11201,driver: Flatten SetEnvvars into taskdirhook,
11202,command: Remove Extraneous field in nodedrain test,
11203,client: Move driver/logging to logmon/logging,"The logging package is used by logmon and the legacy mock_driver. Because the legacy drivers are going away, I'm moving it here to signify its actual ownership."
11204,client: Migrate DriverStats optout to drivers/shared/structs,
11205,client: Remove test dependency on client/driver,
11206,drivers: Create drivers/shared/structs,This creates a drivers/shared/structs package and moves the buffer size checks into it.
11207,drivers: Move client/drivers/executor to drivers/shared/executor,
11208,drivers: Move client/drivers/env to drivers/shared/env,"As part of deprecating legacy drivers, we're moving the env package to a new drivers/shared tree, as it is used by the modern docker and rkt driver packages, and is useful for 3rd party plugins."
11209,Merge pull request #4906 from hashicorp/f-metric-prefix-master,Port metric prefix filtering to master
11210,nomad: fix hclog usage,
11211,Merge pull request #4938 from hashicorp/b-fix-make,make: Fix invocation of vault e2e test
11212,fix step 5 broken link (#4939),
11213,Merge pull request #4937 from hashicorp/b-vault-panic,"vault: protect against empty Vault secret response Fixes #4921 Sadly, we don't have proper mechanism to mock Vault client, so not sure how to best test this. I inspected the Vault client interactions, specially for cases where returned value is nil even if the error is also nil.  I believe we covered all correctly now: * link - the value is non-nil boolean * link: Capabilities handles empty bodies in link - also the module array is handled with proper fail-safe default. * link handles when module is nil"
11214,make: Fix invocation of vault e2e test,
11215,vault: protect against empty Vault secret response,"Also, fix a case where a successful second attempt of loading token can cause a panic."
11216,Merge pull request #4932 from hashicorp/b-1172-rkt-env-vars,change to testing utilities to fix rkt tests
11217,Merge pull request #4922 from hashicorp/f-drivermananger,add generic plugin manager interface and orchestration
11218,"testing: in MkAllocDir, do not update TaskConfig with All() from the task builder, just with Env() (because it pollutes environment variables with node attributes and fails the rkt tests)",
11219,Merge pull request #4919 from hashicorp/f-fingerprint-attribute-type,Modify fingerprint interface to use typed attribute struct
11220,Fix lxc test panic,
11221,Merge pull request #4894 from hashicorp/f-device-hook,Device hook and devices affect computed node class
11222,Fix failing lxc test,
11223,Fix LXC driver fingerprint to use typedattributes,
11224,Fix docker driver to use new fingerprint typed attributes,
11225,modify fingerprint interface to use typed attribute struct,
11226,client/plugin: remove println from plugin group func,
11227,client/plugin: lint/spelling errors,
11228,client/plugin: add generic plugin mananger interface and orchestration,
11229,Merge pull request #4918 from hashicorp/f-lxc-driver,Add LXC driver
11230,address review comments,
11231,Add Driver Plugin for LXC,
11232,Fixes in old lxc driver,
11233,Update go-lxc library to handle LXC 3.0,
11234,add nil check around task resources in device hook,Looking at NewTaskRunner I'm unsure whether TaskRunner.TaskResources (from which req.TaskResources is set) is intended to be nil at times or if the TODO in NewTaskRunner is intended to ensure it is always non-nil.
11235,assume that slices contain only non-nil items,
11236,client: properly support hook env vars,The old approach was incomplete. Hook env vars are now:  persisted and restored between agent restarts deterministic (LWW if 2 hooks set the same key)
11237,Device hook and devices affect computed node class,This PR introduces a device hook that retrieves the device mount information for an allocation. It also updates the computed node class computation to take into account devices. TODO Fix the task runner unit test. The environment variable is being lost even though it is being properly set in the prestart hook.
11238,gofmt -s -w drivers/rkt/driver_test.go,
11239,Merge pull request #4896 from hashicorp/b-prevalloc-deadlock,Fix deadlock in previous alloc watcher by emitting last alloc update
11240,fix test breakage caused by rebase,
11241,fix mispelings,
11242,Merge pull request #4891 from hashicorp/b-1150-rkt-volume-names,drivers/rkt: fix invalid volumes
11243,change to docs in the driver proto to reflect standard pattern,
11244,Merge pull request #4909 from hashicorp/b-restart-delay,taskrunner: Return the restart delay correctly
11245,client: comment on importance of chan ops ordering,
11246,Update client/structs/broadcaster.go,Co-Authored-By: schmichael link
11247,client: fix send-after-close in broadcaster,
11248,client: check if prev alloc is already terminated,This is a defensive fast-path as 7c6aa0be already fixed the deadlock.
11249,client: emit last sent alloc to new listeners,Fixes a deadlock where the allocwatcher would block forever waiting for an update from a terminal alloc. Made the broadcaster easier to debug as well.
11250,Merge pull request #4883 from hashicorp/f-graceful-shutdown,Support graceful shutdowns in agent
11251,Use user provided image name to launch container,"This allows the container to be tagged with a user friendly image name (e.g. module) rather than the image ID (e.g. module). Useful for human debugging, as well as some debugging and image scanning tools. This risks two bad changes: 1. Discrepancy in image resolution between docker and Nomad's image loader.   * I checked the image creation paths in Nomad, and noticed that we either pulled the image or inspect the image with the user provided name.  A race in image tagging where the tag is modified between image loading and container creation. I, personally, don't think this case is cause for concern, as it is analogous to the task running a bit later.  As long as the image is still present, creating the container should be good."
11252,addresses some code clarity review comments,
11253,Simplify map count update logic,Co-Authored-By: preetapan link
11254,code review suggestion,Co-Authored-By: preetapan link
11255,New Nomad Vault Integration Guide (#4886),  add vault integration guide in guides section and move current vault integration content to docs section   complete guide with image   fix typos   rename step 6 and fix typos   fix typos and awkward phrasing along with links   fix duplicated step #   fix typo   fix links so that pages that pointed to the original vault integration content still point there 
11256,document bind and tmpfs options,
11257,add support for tmpfs,
11258,Support docker bind mounts,
11259,Fix panic in test setup when task does not have resources,This affects exec/rawexec drivers
11260,Fix nil dereference in copy method,
11261,drivers/rkt: updated test to include new AllocID field in TaskConfig,
11262,client: fix races in use of goroutine group,"The group utility struct does not support asynchronously launched goroutines (goroutines-inside-of-goroutines), so switch those uses to a normal go call. This means watchNodeUpdates and watchNodeEvents may not be shutdown when Shutdown() exits. During nomad agent shutdown this does not matter. During tests this means a test may leak those goroutines or be unable to know when those goroutines have exited. Since there's no runtime impact and these goroutines do not affect alloc state syncing it seems ok to risk leaking them."
11263,client: reuse group instead of diy'ing it,
11264,client/ar: remove useless wait ch from runTasks,"Arguably this makes task.WaitCh() useless, but I think exposing a wait chan from TaskRunners is a generically useful API."
11265,client: document how AR/TR Run methods behave,
11266,Move current telemetry page to docs (#4898),  move current telemetry page to docs   fix broken links to telemetry doc 
11267,modified TaskConfig to include AllocID,use this for volume names in drivers/rkt to address #1150
11268,Merge pull request #4917 from hashicorp/r-docker-plugin-followup-1,Fix linter job
11269,Formatting and typo fixes,
11270,Merge pull request #4908 from hashicorp/f-docker-opts-storageopt,Add support for docker storage options
11271,Merge pull request #4844 from hashicorp/f-docker-plugin,Docker driver plugin
11272,docker: sync access to exit result within a handle,
11273,Apply suggestions from code review,Co-Authored-By: nickethier link
11274,Merge pull request #4817 from hashicorp/b-vault-client-tweaks,Vault API Client Tweaks
11275,nil secrets as recoverable to keep renew attempts,
11276,Renew past recorded expiry till unrecoverable error,"Keep attempting to renew Vault token past locally recorded expiry, just in case the token was renewed out of band, e.g. on another Nomad server, until Vault returns an unrecoverable error."
11277,fix typo,
11278,round ttl duration for users,
11279,Track renewal expiration properly,
11280,reconcile interface,
11281,Populate agent-info with vault,Return Vault TTL info to /agent/self API and module command.
11282,Avoid explicit precomputed stats field,Seems like the stats field is a micro-optimization that doesn't justify the complexity it introduces.  Removing it and computing the stats from revoking field directly.
11283,More metrics for Server vault,"Add a gauge to track remaining time-to-live, duration of renewal request API call."
11284,address review comments,
11285,Wrap Vault API api errors for easing debugging,
11286,Emit metric counters for Vault token and renewal failures,
11287,Set a 1s floor for Vault renew operation backoff,
11288,Set User-Agent header when hitting Vault API,
11289,Merge pull request #4911 from hashicorp/add-circleci-master,Add CircleCI configuration for website build
11290,remove packer.json since CircleCI builds the site,
11291,add circleci website build,
11292,document storage opts,
11293,Add support for storage opt,
11294,taskrunner: Return the restart delay correctly,"We were incorrectly returning a 0 duration to the taskrunner when determining when a task should restart. This would cause tasks to be restarted immediately, ignoring the restart {} stanza in a users configuration. This commit causes us to return the restart duration to the task runner so it may correctly delay further execution."
11295,Merge pull request #4857 from hashicorp/f-affinity-docs,docs for affinity
11296,Update CHANGELOG.md,
11297,Merge pull request #4903 from hashicorp/b-delete-versions-mod-while-iter,Fix a panic related to batch GC
11298,Merge pull request #4885 from hashicorp/f-update-consultemplate,Vendor update consul template
11299,changelog: mention #4904,
11300,task_runner: use NodeResources instead of deprecated struct,
11301,task_runner: use task and alloc copies instead of referencing the original pointer,
11302,address review comments,
11303,Remove committed test output and gitignore it,
11304,Merge pull request #4904 from hashicorp/b-vault-panic,vault: fix panic by checking for nil secret
11305,Merge pull request #4905 from sevagh/fix-typo,Fix typo in GNUmakefile
11306,command/agent: additional tests for telemetry config parsing,
11307,nomad: only lookup job is disable_dispatched_job_summary_metrics is set,
11308,nomad: lookup job instead of adding Dispatched to summary,
11309,agent: suppose filter_default telemetry option,
11310,nomad: add flag to disable publishing of job_summary metrics for dispatched jobs,
11311,docker: unexport new coordinator func,
11312,docker: add default blocks for driver plugin config schema,
11313,docker: move config RPCs to config.go,
11314,docker: fix tests,
11315,docker: remove container pointer from task handle,
11316,docker: move volume driver options to seperate block,
11317,docker: group common config into blocks,
11318,Apply suggestions from code review,Co-Authored-By: nickethier link
11319,docker: remove global pull coordinator,
11320,docker: remove call to global metrics instance,
11321,task_runner: emit event on task exit with exit result details,
11322,docker: moved fingerprint code to it's own file,
11323,plugins/driver: remove NodeResources from task Resources and use PercentTicks field for docker driver,
11324,docker: move recoverable error proto to shared structs,
11325,docker: implement recover task logic,
11326,docker: finished porting tests,
11327,drivers: added NodeResources to drivers.TaskConfig,
11328,drivers/docker: more work porting tests from old driver plugin,
11329,drivers: support recoverable errors in the plugin RPC layer,
11330,docker: started work on porting docker driver to new plugin framework,
11331,docker: properly launch docker logger process,
11332,webiste -> website,
11333,add a missing no errorassertion,
11334,Fix a panic related to batch GC,"module does concurrent modifications to iterated items while iterating, by deleting job versions while it's iterating on them,"
11335,Reproduce a panic related to batch GC,"Test case that reproduces a panic with the following stacktrace: ``` panic: runtime error: invalid memory address or nil pointer dereference [recovered]     panic: runtime error: invalid memory address or nil pointer dereference [signal SIGSEGV: segmentation violation code=0x1 addr=0x38 pc=0x1149715] goroutine 35 [running]: testing.tRunner.func1(0xc0001e2200)     /usr/local/Cellar/go/1.11.2/libexec/src/testing/testing.go:792 +0x387 panic(0x167e400, 0x1c43a30)     /usr/local/Cellar/go/1.11.2/libexec/src/runtime/panic.go:513 +0x1b9 github.com/hashicorp/nomad/vendor/github.com/hashicorp/go-immutable-radix.(Iterator).Next(0xc0003a4080, 0x17f7ba0, 0x0, 0xc0002e74a0, 0xc0003a0510, 0xc0003a0530, 0xc0003a0530)     /go/src/github.com/hashicorp/nomad/vendor/github.com/hashicorp/go-immutable-radix/iter.go:81 +0xa5 github.com/hashicorp/nomad/vendor/github.com/hashicorp/go-memdb.(radixIterator).Next(0xc0003a0420, 0x1756059, 0xb)     /go/src/github.com/hashicorp/nomad/vendor/github.com/hashicorp/go-memdb/txn.go:634 +0x2e github.com/hashicorp/nomad/nomad/state.(StateStore).deleteJobVersions(0xc00028f7d0, 0x2711, 0xc0002e7680, 0xc000392100, 0xc0003a4040, 0x0)     /go/src/github.com/hashicorp/nomad/nomad/state/state_store.go:1130 +0x1a1 github.com/hashicorp/nomad/nomad/state.(StateStore).DeleteJobTxn(0xc00028f7d0, 0x2711, 0x175334f, 0x7, 0xc000306810, 0x2f, 0xc000392100, 0x0, 0x0)     /go/src/github.com/hashicorp/nomad/nomad/state/state_store.go:1102 +0x46c github.com/hashicorp/nomad/nomad/state.TestStateStore_DeleteJobTxn_BatchDeletes.func1(0xc000392100, 0x1777ce0, 0xc000392100)     /go/src/github.com/hashicorp/nomad/nomad/state/state_store_test.go:1705 +0x1a2 github.com/hashicorp/nomad/nomad/state.(StateStore).WithWriteTransaction(0xc00028f7d0, 0xc0000d5e48, 0x0, 0x0)     /go/src/github.com/hashicorp/nomad/nomad/state/state_store.go:3953 +0x79 github.com/hashicorp/nomad/nomad/state.TestStateStore_DeleteJobTxn_BatchDeletes(0xc0001e2200)     /go/src/github.com/hashicorp/nomad/nomad/state/state_store_test.go:1703 +0x685 testing.tRunner(0xc0001e2200, 0x1777138)     /usr/local/Cellar/go/1.11.2/libexec/src/testing/testing.go:827 +0xbf created by testing.(T).Run     /usr/local/Cellar/go/1.11.2/libexec/src/testing/testing.go:878 +0x353 ```"
11336,vault: fix panic by checking for nil secret,"Vault's RenewSelf(...) API may return (nil, nil). We failed to check if secret was nil before attempting to use it. RenewSelf: https://github.com/hashicorp/vault/blob/e3eee5b4fb386418d10b6a248252ec6e2e05d980/api/auth_token.go#L138-L155 Calls ParseSecret: https://github.com/hashicorp/vault/blob/e3eee5b4fb386418d10b6a248252ec6e2e05d980/api/secret.go#L309-L311 If anyone has an idea on how to test this I didn't see any options. We use a real Vault service, so there's no opportunity to mock the response."
11337,client.rpc: don't log errors on shutdown,
11338,client: support graceful shutdowns,Client.Shutdown now blocks until all AllocRunners and TaskRunners have exited their Run loops. Tasks are left running.
11339,Merge pull request #4860 from hashicorp/b-ui-allocation-detail-empty-state,UI: Allocation detail empty state
11340,Add an empty state to the allocation detail task list,
11341,Merge pull request #4850 from hashicorp/f-ui-links-on-error-pages,UI: Escape hatch links on error pages
11342,change instrumented webserver job file (#4897),
11343,Fix formatting,
11344,"Fix preemption logic bug, need to group allocations by device first.",This ensures that the set of allocations chosen for preemption all share the same device where ID is 
11345,clarification regarding Nomad client generating token vs retrieving (#4890),
11346,Merge pull request #4884 from hashicorp/f-alloc-devices-cli,Report alloc device statistics in API and CLI
11347,show Device Stats header in alloc status,
11348,Show stable order of device attributes,
11349,address review comments,
11350,Merge pull request #4843 from hashicorp/b-driver-env,client: interpolate driver configurations
11351,Update CHANGELOG.md,
11352,Merge pull request #4889 from hashicorp/f-service-meta,"Pass service metadata ""external-source"" for consul UI integration"
11353,"Pass service metadata ""external-source"" for consul UI integration",
11354,tweak whitespace in device stats output,
11355,Display device stats in module,
11356,Prepare to reuse device resources printing,
11357,Populate alloc stats API with device stats,"This change makes few compromises:   Looks up the devices associated with tasks at look up time.  Given that module is called rarely generally (compared to stats telemetry and general job reporting), it seems fine.  However, the lookup overhead grows bounded by number of module, which can be significant.   module performs the task devices->statistics lookup.  It passes self to alloc/task runners so they can look up the device statistics allocated to them.  Currently alloc/task runners are responsible for constructing the entire RPC response for stats  The alternatives for making task runners device statistics aware don't seem appealing (e.g. having task runners contain reference to hostStats)   On the alloc aggregation resource usage, I did a naive merging of task device statistics.  Personally, I question the value of such aggregation, compared to costs of struct duplication and bloating the response - but opted to be consistent in the API. With naive concatination, device instances from a single device group used by separate tasks in the alloc, would be aggregated in two separate device group statistics."
11358,"config docs: added explicit clarification, that lexicographical ordering",is with respect to files in the specified folder
11359,Merge pull request #4882 from sportebois/f-update-docs-env-stanza-coercion,Change misleading boolean example in env stanza coercion section (#4820)
11360,tests: fix tests post-rebase,
11361,client/tr: add a bit of context to envbuilder errors,
11362,client: remove old proxy references from comments,
11363,client: test more env key variations,
11364,client: add new nested variables to task's hcl ctx,"The error messages are really bad, but it's extremely difficult to produce good error messages without the original HCL."
11365,docs: document new interpolation behavior and options,
11366,client: turn env into nested objects for task configs,
11367,client: interpolate driver configurations,Also add missing SetDriverNetwork calls.
11368,boltdd: return error on use-after-Close,Return the same error as boltdb instead of panic'ing.
11369,gofmt -s -w command/helper_stats_test.go,Fixes the static checks build
11370,update consul template,
11371,Merge pull request #4875 from hashicorp/f-constraints,scheduler: Make != constraints more flexible
11372,Merge pull request #4879 from hashicorp/f-node-devices-cli,Show device stats in nomad CLI
11373,Add changelog entry for != operator,
11374,docs: Add is_set/is_not_set,
11375,scheduler: Add is_set/is_not_set constraints,"This adds constraints for asserting that a given attribute or value exists, or does not exist. This acts as a companion to =, or != operators, e.g: ```hcl constraint {         attribute = ""${attrs.type}""         operator  = ""!=""         value     = ""database"" } constraint {         attribute = ""${attrs.type}""         operator  = ""is_set"" } ```"
11376,fix linting,
11377,Change misleading boolean example in env stanza coercion section,
11378,review comments,
11379,Initial implementation of device preemption,
11380,Display StatsObject nested objects as well,
11381,Use disk display format for devices,
11382,Print verbose device in module,
11383,device stats summary in module,Sample output with a mock device: ``` Host Resource Utilization CPU             Memory          Disk 2651/26400 MHz  9.6 GiB/16 GiB  98 GiB/234 GiB Device Resource Utilization nomad/file/mock[README.md]    511 bytes nomad/file/mock[e2e.go]       239 bytes nomad/file/mock[e2e_test.go]  128 bytes Allocations No allocations placed ```
11384,Merge pull request #4872 from hashicorp/f-devices-client-stats,Expose Device Stats in Clients API
11385,format vendor.json,
11386,Merge pull request #4874 from lunchbag/jen/update-share-img,Update open graph image
11387,Add NodeResource Device types in module package,
11388,Track Node Device attributes and serve them in API,
11389,Add Client Device Stats structs in module package,
11390,Expose Device Stats in /client/stats API endpoint,
11391,Allow nullable fields in StatValues,"In state values, we need to be able to distinguish between zero values (e.g. module) and unset values (e.g. module). We can alternatively use protobuf module and nested map to ensure consistency of fields that are set together, but the golang representation does not represent that well and introducing a mismatch between representations.  Thus, I opted not to use it."
11392,Move Stat{Object|Value} to plugins/shared/structs,Moving them as they may be useful for other packages/plugins besides devices.
11393,Regenerate proto files with protoc-gen-go@v1.2.0,
11394,fix comment typos,
11395,AWS sandbox environment upgrade (#4873),  upgrade Nomad from 0.8.4 to 0.8.6   update deprecated nomad and vault commands   update AMI ID   add ingress rule for default fabio port and fabio UI   upgrade Consul and Vault versions   update AMI ID in README.md and terraform.tfvars 
11396,Merge pull request #4869 from hashicorp/b-executor-stdout,executor: Fix stdout stderr copy/paste
11397,Update open graph image,
11398,scheduler: Allow comparisons of nil values,"This commit allows the ConstraintChecker to test values that do not exist. This is useful when wanting to exclude given nodes from executing a job, for example, if you wanted to give canary nodes an attribute, and not run critical services on them, you may specify something like the below, but not want to tag all other nodes with the inverse. module This also requires all constraint checkers to allow for nil target values, as they will no longer be short circuited by resolving a target."
11399,Merge pull request #4858 from hashicorp/b-fix-master-20181109,Fix some tests in master
11400,Merge pull request #4867 from hashicorp/b-deployment-progress-deadline,Blocked evaluation fixes
11401,Merge pull request #4868 from hashicorp/b-plugin-ctx,Plugin client's handle plugin dying
11402,Ignore apt-get update failures in CI,"We run with ~120 apt sources, and apt-get update fails if any of them is down. True errors would be raised again at install phase as true dependencies fetch would fail. ;"
11403,Use materialized duration fields for driver config,
11404,convert all config durations to strings in tests,
11405,Avoid downloading image if present locally,
11406,Address review comments,
11407,avoid setting resource limit on rkt command,Was accidentally modified in 5b14d24bf4626bab420d00783d92bcf25e0b641e .
11408,fix plugin test,
11409,increase timeout to 30 minutes,"nomad/client take very long and exceed 15m sometimes: In https://travis-ci.org/hashicorp/nomad/jobs/452990197 : ``` panic: test timed out after 15m0s goroutine 4739 [running]: testing.(*M).startAlarm.func1()     /home/travis/.gimme/versions/go1.11.2.linux.amd64/src/testing/testing.go:1296 +0xfd .... goroutine 4665 [select]: github.com/hashicorp/nomad/vendor/google.golang.org/grpc.newClientStream.func5(0xc0003dd500, 0xc000420120, 0x2b3f86295588, 0xc000496810)     /home/travis/gopath/src/github.com/hashicorp/nomad/vendor/google.golang.org/grpc/stream.go:287 +0xd7 created by github.com/hashicorp/nomad/vendor/google.golang.org/grpc.newClientStream     /home/travis/gopath/src/github.com/hashicorp/nomad/vendor/google.golang.org/grpc/stream.go:286 +0x842 FAIL    github.com/hashicorp/nomad/client/driver    900.036s ```"
11410,Fix docker log fetching in tests,We no longer use syslog for tracking logs so tracking them explicitly here
11411,killing should be done with wait client,Incidentally changed in 5b14d24bf4626bab420d00783d92bcf25e0b641e
11412,Prioritize checking consumer context cancellation,Tests expect that as soon as eventer shuts down immediately on context cancellations; but golang does not guarantee priority when multiple pending channels are ready in a select statement.
11413,Set clean config for mock driver,"The default job here contains some exec task config (for setting command and args) that aren't used for mock driver.  Now, the alloc runner seems stricter about validating fields and errors on unexpected fields. Updating configs in tests so we can have an explicit task config whenever driver is set explicitly."
11414,mark and skip failing consul failing tests,
11415,Update Docker name parsing lookup,module function changed in e9f3f2cfee9d729a8642344c4fa4ea70b2d49468 where became module with extra checks.
11416,pull alpine image needed for test,"The test requires the image to be present locally, so importing it as part of setup."
11417,Adjust streaming duration,This test expects 11 repeats of the same message emitted at intervals of 200ms; so we need more than 2 seconds to adjust for time sleep variations and the like.  So raising it to 3s here that should be enough.
11418,Handle time.Duration in mock,"Mock driver config uses module fields but we initialize them inconsistently, as time.Duration sometimes and as duration strings other times.  Previously, module handles it and does the right thing. This is no longer the case with MsgPack.  I could not find a good way to bring back old behavior without too much complexity.  module extended types weren't ideal here as we lose type information (e.g. int64 vs string), and the input is a generic map and not a MsgPack serialization of duration. As such, I went with the simple solution of declaring the config field as duration string, and panicing if the test doesn't pass a valid string. I found this to cause the smallest change in tests, but we can alternatively force all to be int64 instead."
11419,distinguish java driver tests from others,
11420,Fix java driver tests,
11421,Merge pull request #4871 from hashicorp/r-job-rerun-bug-changelog,changelog job re-run fix
11422,Changelog job re-run fix,
11423,executor: Fix stdout stderr copy/paste,
11424,Merge pull request #4861 from hashicorp/b-batch-deregister-transaction,Run job deregistering in a single transaction
11425,Merge pull request #4845 from hashicorp/r-exec-refactor,Update exec driver to match rawexec
11426,Plugin client's handle plugin dying,"This PR plumbs the plugins done ctx through the base and driver plugin clients (device already had it). Further, it adds generic handling of gRPC stream errors."
11427,Handle new eval being the duplicate properly,
11428,Merge pull request #4855 from hashicorp/b-device-scheduling-fixtest,Fixes device scheduling unit tests
11429,Merge pull request #4865 from hashicorp/b-preemption-config,improvements to scheduler config API
11430,change path to v1/scheduler/configuration,
11431,blank line,
11432,Merge pull request #4859 from hashicorp/b-rawexec-cgroups-root,rawexec: Only use cgroups when running as root.
11433,Comment public functions and batch write txn,
11434,Fix logic bug in tracking sum of matched affinity weights,"We need to track the sum of matching weights per device, but only change the final return value if its the highest scoring choice"
11435,Fix failing test,
11436,"Smaller methods, and added tests for RPC layer",
11437,Use response object/querymeta/writemeta in scheduler config API,
11438,rawexec: Only use cgroups when running as root.,"If Nomad is not running as root, we should not try to use cgroups for pid freezing. This originally was implemented pre-driver-support in https://github.com/hashicorp/nomad/blob/v0.8.6/client/driver/raw_exec.go#L120-L130"
11439,Run job deregistering in a single transaction,"Fixes https://github.com/hashicorp/nomad/issues/4299 Upon investigating this case further, we determined the issue to be a race between applying module fsm operation and processing job-deregister evals. Processing job-deregister evals should wait until the FSM log message finishes applying, by using the snapshot index.  However, with module, any single individual job deregistering was applied accidentally incremented the snapshot index and resulted into processing job-deregister evals.  When a Nomad server receives an eval for a job in the batch that is yet to be deleted, we accidentally re-run it depending on the state of allocation. This change ensures that we delete deregister all of the jobs and inserts all evals in a single transactions, thus blocking processing related evals until deregistering complete."
11440,Improve mirage modeling of allocations,Pending allocations never have tasks
11441,Merge pull request #4852 from hashicorp/b-ui-dispatched-job-page,UI: Show the correct template for dispatched jobs
11442,Merge pull request #4833 from hashicorp/b-ui-gracefully-handle-stat-errors,UI: Gracefully handle stat errors
11443,Add missing module dependencies to the node adapter tests,
11444,Get error messages closer to Structure designs,
11445,handle nil resources limits,Config may not express resource constraints on the job!
11446,Update CHANGELOG.md,
11447,Update CHANGELOG.md,
11448,Merge pull request #4839 from hashicorp/b-gc-alloc-jobversion,Remove terminal allocations associated with older job modify index
11449,Use create index as trigger condition to gc old terminal allocs,
11450,Normalize scores correctly,
11451,changelog,
11452,Merge pull request #4847 from hashicorp/b-blocked-eval,Blocked evaluation fixes
11453,Merge pull request #4842 from hashicorp/b-deployment-progress-deadline,Fix multiple bugs with progress deadline handling
11454,typo fix,
11455,Merge pull request #4838 from dantoml/dani/fix-docs-typo,docs: Fix broken link to cloud auto join
11456,shorter health descriptions,
11457,Add a helper functions for checking unix root,
11458,Update exec driver to match rawexec,"Update exec driver with latest patterns used by rawexec, and eliminate accidental diffs."
11459,review fixes,
11460,Fixes device scheduling unit tests,"Also changes the logic for score when there is more than one task requesting a device. Since inter task affinities are already normalized, we take the average of the scores across tasks."
11461,Merge pull request #4851 from pgiles/patch-1,typo fix
11462,Merge pull request #4823 from hashicorp/f-preemption-plan-cli,show preemptions in nomad plan CLI
11463,Fix vet error,
11464,review feedback,
11465,Comments,
11466,Show preemption output in plan CLI,
11467,Show the correct template for parameterized job children,
11468,typo fix,
11469,Correctly mark parameterized children as parameterized: true,
11470,Test coverage for error page escape hatch links,
11471,Add escape hatch links to the error page,
11472,Fix a bug where with-watchers wasn't bubbling the willTransition event,"The impact was the application error was no longer being nulled out, causing the application error to continue to be shown after transitioning. This never happened in apps since it's not possible to transition away from the error screen."
11473,Add support for link in error containers,
11474,Merge pull request #4830 from hashicorp/f-device-manager,Device Manager
11475,fix race,
11476,fix test,
11477,remove unused struct field,
11478,seperate struct and proto generation,
11479,review comments,
11480,Merge pull request #4841 from hashicorp/f-ui-error-handling-on-all-pages,UI: Error handling on all pages
11481,reserve uses donectx,
11482,tests,
11483,Device manager,"Introduce a device manager that manages the lifecycle of device plugins on the client. It fingerprints, collects stats, and forwards Reserve requests to the correct plugin. The manager, also handles device plugins failing and validates their output."
11484,Merge pull request #4802 from hashicorp/f-device-binpack,Schedule Devices
11485,review comments,
11486,allocs fit checks if devices get oversubscribed,
11487,Split device accounter and allocator,
11488,affinities,
11489,assign devices,
11490,Add devices to allocated resources,
11491,Track jobs by namespace,
11492,Duplicate blocked evals cancelling improved,The old logic for cancelling duplicate blocked evaluations by job id had the issue where the newer evaluation could have additional node classes that it is (in)eligible for that we would not capture. This could make it such that cluster state could change such that the job would make progress but no evaluation was unblocked.
11493,Merge pull request #4801 from hashicorp/b-ui-proper-task-group-breadcrumb,UI: Proper task group breadcrumb on the allocation pages
11494,Merge pull request #4837 from hashicorp/b-ui-d3-race-condition,UI: Guard against the line chart element already being destroyed
11495,Make your tests orders of magnitude faster with One Neat Trick™,
11496,Test coverage for frame misses,
11497,Merge pull request #4825 from hashicorp/f-driver-plugin-java,Implement java driver plugin
11498,reconcile java with latest patterns,
11499,driver/java: support non-linux targets,"Java driver supports non-linux targets, so LinuxResources fields isn't guaranteed to be not-nil."
11500,Reconcile with latest master patterns,
11501,register the java plugin,
11502,add java driver tests,
11503,Implement java driver,
11504,Fix failing resource subtraction test,
11505,Merge pull request #4828 from hashicorp/b-restore,Implement client agent restarting
11506,more robust merging of the deployment status when getting updates from the client,
11507,Clean up the remaining routes,
11508,Fix multiple tgs with progress deadline handling,"Fix an issue in which the deployment watcher would fail the deployment based on the earliest progress deadline of the deployment regardless of if the task group has finished. Further fix an issue where the blocked eval optimization would make it so no evals were created to progress the deployment. To reproduce this issue, prior to this commit, you can create a job with two task groups. The first group has count 1 and resources such that it can not be placed. The second group has count 3, max_parallel=1, and can be placed. Run this first and then update the second group to do a deployment. It will place the first of three, but never progress since there exists a blocked eval. However, that doesn't capture the fact that there are two groups being deployed."
11509,Handle the job 404 error case on the other job sub pages,
11510,Handle the job 404 error case in versions,
11511,Handle the job 404 case in the job definition route,
11512,client: update alloc status when terminating,Defensively update alloc status whenever killing all tasks.
11513,More docs for affinities,
11514,Affinity stanza documentation,
11515,client: block on context as well as waitCh,"For lifecycle operations such as Restart and Kill, the client should not expect driver plugins to be well behaved and close their waitCh on context cancelation. Always wait on the passed in context as well as the waitCh."
11516,client: fix tr lifecycle logic and shutdown delay,ShutdownDelay must be honored whenever the task is killed or restarted. Services were not being deregistered prior to restarting.
11517,tests: get consul integration tests building,
11518,client: fix ar and tr tests,
11519,client: do not run terminal allocs,
11520,client: first pass at implementing task restoring,Task restoring works but dead tasks may be restarted
11521,docs: Fix broken link to cloud auto join,
11522,Handle the job 404 case in task group routes,
11523,Guard against the element already being destroyed,"Since DOM code is in a run.next, it's possible that between the DOM code being queued and running the element is destroyed. So the DOM code needs to guard against this using the isDestroyed API."
11524,Merge pull request #4836 from hashicorp/b-preemption-testfix,update preemption tests to use new node resource structs
11525,add comment,
11526,update preemption tests to use new node resource structs,also includes a fix to remove unnecessary subtraction of network mbits
11527,Merge pull request #4794 from hashicorp/f-preemption-systemjobs,Preemption for system jobs
11528,Address more minor code review feedback,
11529,Fix test setup,
11530,dereference safely,
11531,Fix static port preemption to be device aware,
11532,Merge pull request #4835 from thehunt33r/Fix-Reschedule-Doc,Fixing mistake in reschedule doc
11533,Change 1hr to 1h on reschedule doc as 1hr is not supported by nomad,
11534,Merge pull request #4826 from hashicorp/b-driver-exec-tweaks-20181031,Register exec driver plugin among some fixes
11535,Handle static port preemption when there are multiple devices,Also added test case
11536,add plugin config,
11537,Improve client stat simulation and add a chance for requests to error,
11538,Gracefully handle response errors in stat trackers," Check if the response is a 4xx/5xx If it is, skip the append step and track a frame miss If enough frame misses occur in a row, treat it as a pause  A ""pause"" is when a null data frame is added, which shows up as a gap in line charts."
11539,Move jsonWithDefault to a util,
11540,unit test plan apply with preemptions,
11541,Merge pull request #4821 from hashicorp/r-drivers,"Fix driver naming, fingerprint output, races/tests"
11542,rkt: standardize names/code,
11543,rawexec: standardize names/code,
11544,qemu: standardize names/code,
11545,more minor review feedback,
11546,Merge pull request #4829 from hashicorp/f-ui-build-perf,UI: build time performance improvements
11547,Plumb alloc resource cache in a few more places.,also removed now unused method
11548,Remove unused bourbon dependency,
11549,More review comments,
11550,Speed up builds by cutting corners given config and env,
11551,"Cleaner way to exit early, and fixed a couple more places reading from alloc.Resources",
11552,Merge pull request #4822 from hashicorp/b-ui-reset-page-param,UI: Reset page query param on search
11553,review comments,
11554,batch jobs GC removes terminal allocs if job modifyindex is older than running job,
11555,Test coverage for breadcrumb qp change,
11556,Provide the namespace query param to the task group link,
11557,Merge pull request #4827 from hashicorp/ch-gh-4819,Update changelog with GH-4819
11558,Update changelog with GH-4819,
11559,drivers/mock: standardize names/code,
11560,Register exec driver plugin among some fixes,"Namely, remove the module configuration flag, as it's specific to module driver.  Also, pass resource limits to underlying call."
11561,Merge pull request #4819 from hashicorp/b-artifacts-checksum,Allow artifacts checksum interpolation
11562,mock_driver: match other's fingerprint message,
11563,"rkt: fix race, register by default, fix fingerprint",
11564,qemu: fix fingerprint description and handle race,
11565,rawexec: fix fingerprint results and tests,In tests: * always cleanup (Kill) the harness * don't call SetConfig more than once (a race) * avoid cgroups to allow running without being root
11566,rawexec: fix race around h.procState,
11567,plugins: SetConfig shouldn't panic on nil driver configs,
11568,drivers: only log non-cancellation errors,
11569,Test coverage for resetPagination,
11570,drivers: remove stutter from exported driver names,Also fix a comment on the logger that got copy/pasted around.
11571,Merge pull request #4818 from hashicorp/b-affinities-cli-formatting,Fix formatting of allocation score metrics
11572,address review comments,
11573,Add the resetPagination hook to search boxes across the app,
11574,Add a resetPagination method to the searchable mixin,"Searchable can be used without pagination, but reseting pagination is more a function of search than pagination insofar as if you add search to a page, you are also going to want automatic pagination resetting."
11575,Add onChange hook to the search-box component,
11576,Merge pull request #4816 from hashicorp/b-qemu,qemu: fix build and register by default
11577,Allow artifacts checksum interpolation,Fixes https://github.com/hashicorp/nomad/issues/4814
11578,Fix formatting of allocation score metrics,
11579,Fix return type in tests after refactor,
11580,Introduce interface with multiple implementations for resource distance,
11581,Introduce a response object for scheduler configuration,
11582,refactor preemption code to use method recievers and setters for common fields,
11583,more minor cleanup,
11584,More style and readablity fixes from review,
11585,More review comments,
11586,style fixes,
11587,make default config a variable,
11588,Add fsm layer tests,
11589,Restore/Snapshot plus unit tests for scheduler configuration,
11590,Preempted allocations should be removed from proposed allocations,
11591,comments,
11592,fix end to end scheduler test to use new resource structs correctly,
11593,Modify preemption code to use new style of resource structs,
11594,Make preemption config a struct to allow for enabling based on scheduler type,
11595,Use scheduler config from state store to enable/disable preemption,
11596,"Support for new scheduler config API, first use case is to disable preemption",
11597,Fix linting,
11598,Fix linting and better comments,
11599,"Fix logic bug, unit test for plan apply method in state store",
11600,Fix comment,
11601,Implement preemption for system jobs.,This commit implements an allocation selection algorithm for finding allocations to preempt. It currently special cases network resource asks from others (cpu/memory/disk/iops).
11602,structs and API changes to plan and alloc structs needed for preemption,
11603,Add number of evictions to DesiredUpdates struct to use in CLI/API,
11604,REview feedback,
11605,structs and API changes to plan and alloc structs needed for preemption,
11606,qemu: fix build and register by default,API changes had broken the build.
11607,Merge pull request #4765 from jippi/increase-line-scan-limit,fix: increase log rotator line scan limit
11608,Merge pull request #4795 from hashicorp/f-plugin-config,Pass client configuration to plugins through loader
11609,plugins/drivers: nil gaurd driver config when building executor config,
11610,rename NomadConfig to ClientAgentConfig,
11611,Merge pull request #4803 from hashicorp/b-leader-fixes,"AR Fixes: task leader handling, restoring, state updating, AR.Destroy deadlocks"
11612,tests: more fixes due to api changes,
11613,tests: fix usages of TestClient cleanup and mock driver,
11614,Update CHANGELOG.md,
11615,Merge pull request #4813 from hashicorp/b-executor_path_fix,Stat path to binary to handle raw exec driver interpolated binary path
11616,Stat path to binary to handle raw exec driver interpolated binary path,
11617,Fix test linting,
11618,Merge pull request #4800 from hashicorp/f-driver-plugin-qemu,QEMU driver plugin
11619,Merge branch 'f-driver-plugin-qemu' of github.com:hashicorp/nomad into f-driver-plugin-qemu,
11620,remove driver config struct from qemu driver since its not used,
11621,Fix hclog log line formatting,Co-Authored-By: preetapan link
11622,Fix imports,
11623,Fix copy pasted comment,Co-Authored-By: preetapan link
11624,remove newline,Co-Authored-By: preetapan link
11625,update comment,Co-Authored-By: preetapan link
11626,Remove unnecessary return,Co-Authored-By: preetapan link
11627,remove unnecessary return,Co-Authored-By: preetapan link
11628,ar: initialize allocwatcher on restore,"Fixes a panic. Left a comment on how the behavior could be improved, but this is what releases <0.9.0 did."
11629,plugins/drivers: fix panic when copying a nil TaskHandle,
11630,"ar: fix leader handling, state restoring, and destroying unrun ARs", Migrated all of the old leader task tests and got them passing Refactor and consolidate task killing code in AR to always kill leader   tasks first Fixed lots of issues with state restoring Fixed deadlock in AR.Destroy if AR.Run had never been called Added a new in memory statedb for testing
11631,drivers: update SetConfig to handle driver client config,
11632,added driver specific client config struct to plugin configuration,
11633,Merge pull request #4799 from hashicorp/f-hook-logging-tweaks,tr: cleanup hook logs
11634,Update drivers/qemu/driver.go,
11635,cleanup pki docs,
11636,Merge pull request #4785 from rkettelerij/patch-2,[Docs] Make clear Nomad requires leases in Vault for rendering certificates using the template stanza
11637,Merge pull request #4727 from hashicorp/f-ui-improved-stats-charts,UI: Improved stats charts
11638,ar: refactor task killing into 1 method,Update comments and address some PR comments from #4775
11639,tests: explicitly cleanup after clients,
11640,"ar: fix task leader, update, and stop handling",
11641,Merge pull request #4718 from hashicorp/f-ui-a11y-line-chart,UI: Add some simple accessibility labels for line charts
11642,QEMU driver plugin,
11643,tr: cleanup hook logs,
11644,Add more documentation to the format-duration util,
11645,"Be consistent with ""time series"" instead of ""time-series""",
11646,Merge pull request #4726 from hashicorp/f-ui-use-stats-trackers-for-resource-rows,UI: Use stats trackers for resource rows
11647,"Add role=""tooltip"" to tooltips throughout the app",
11648,Merge pull request #4793 from hashicorp/b-no-cty,Do not use cty in drivers
11649,update rkt and exec setconfig funcs,
11650,test for setting NomadConfig in plugin loader,
11651,plumb NomadConfig into plugins,
11652,Merge pull request #4788 from hashicorp/r-clientv2-exec,drivers/exec: add exec implementation
11653,drivers/exec: better fingerprinting and detection on non linux,
11654,drivers/exec: add exec implementation,
11655,Merge pull request #4728 from hashicorp/f-ui-logo-link,UI: Make the global logo link to the jobs page (home page)
11656,rename api TotalShares -> CpuShares,
11657,Do not use cty in drivers,
11658,Merge pull request #4792 from hashicorp/r-clientv2-rebased,AllocRunner v2 Feature Branch PR
11659,tests: get tests building if not yet passing,
11660,templates: fix tests,
11661,fix linter errors,
11662,changelog: add client refactor feature branch merge,
11663,client: remove unused handleproxy,
11664,driver/docker: rename container logger,
11665,tr: remove unused DriverHandle interface,was causing typed nil interface panics and served no purpose
11666,drivers/mock: fix plugin name,"Was mock_driver before plugins, so keep the name."
11667,plugins: msgpack codec should use cty tags,
11668,Address review comments around logging task properly,
11669,Address review comments,
11670,Switch back to using map[string]string for port map,
11671,"fixup comments, logging, and missing method impls",from #4777 comments
11672,register drivers by default,Do not register mock_driver on release builds.
11673,drivers/mock: complete plugin impl,
11674,drivers/mock: start mock driver implementation,
11675,Port client portion of #4392 to new taskrunner,"PR #4392 was merged to master after allocrunnerv2 was branched, so the client-specific portions must be ported from master to arv2."
11676,tr: implement dispatch payload hook,Now passing the TaskDir struct to prestart hooks instead of just the root task dir itself as dispatch needs local/.
11677,make port map a slice of maps to match existing rkt driver,
11678,Review comments,
11679,Stats collection test,
11680,RKT driver plugin and unit tests,
11681,client: log retry during driver fingerprint redispense,
11682,client: add test for driverfailure during fingerprinting,
11683,rkt: start rkt driver plugin,
11684,Get raw exec tests compiling and passing again,
11685,taskrunner: return error on waitCh,
11686,client: simplify driver plugin logic from review comments,
11687,plugin/driver: add Copy funcs,
11688,client: fix broked tests from refactoring,
11689,client: review comments and fixup/skip tests,
11690,docklog: add go-plugin for forwarding of docker logs,
11691,client: refactor post allocrunnerv2 finalization,
11692,client: begin driver plugin integration,client: fingerprint driver plugins
11693,Fix lints,
11694,compile on windows,
11695,more test fixes,
11696,allocrunnerv2 -> allocrunner,
11697,fix test compiling,
11698,skip building deprecated files,
11699,move files around,
11700,drivers/shared: added func comment to eventer,
11701,drivers/shared: move eventer to subpackage under drivers shared package,
11702,drivers/utils: better handling of consumer cleanup in eventer,
11703,plugins/drivers: remove bool to track if eventLoop shutdown and use context instead,
11704,drivers/rawexec: PR comments and feedback,
11705,plugin/drivers: rework eventer and change naming stream -> consumer,
11706,tests: fix missing logger caused by bad merge,
11707,tr: properly comment handle fields,
11708,ar: AllocState should not mutate ar.state,"If ar.state.TaskStates has not been set, set it on the copy of ar.state. That keeps ar.state manipulations in one location and allows AllocState to only acquire read-locks."
11709,tests: test logs endpoint against pending task,Although the really exciting change is making WaitForRunning return the allocations that it started. This should cut down test boilerplate significantly.
11710,tests: make a test client/config easier to generate,Sadly can't move the fingerprint timeout tweak into the helper due to circular imports.
11711,tests: ensure task state is initialized in NewAR,Also expose NoopDB for use in tests.
11712,tests: test via ServeMux so http codes are set,
11713,client: expose task state to client,"The interesting decision in this commit was to expose AR's state and not a fully materialized Allocation struct. AR.clientAlloc builds an Alloc that contains the task state, so I considered simply memoizing and exposing that method. However, that would lead to AR having two awkwardly similar methods:  - Alloc() - which returns the server-sent alloc  - ClientAlloc() - which returns the fully materialized client alloc Since ClientAlloc() could be memoized it would be just as cheap to call as Alloc(), so why not replace Alloc() entirely? Replacing Alloc() entirely would require Update() to immediately materialize the task states on server-sent Allocs as there may have been local task state changes since the server received an Alloc update. This quickly becomes difficult to reason about: should Update hooks use the TaskStates? Are state changes caused by TR Update hooks immediately reflected in the Alloc? Should AR persist its copy of the Alloc? If so, are its TaskStates canonical or the TaskStates on TR? So! Forget that. Let's separate the static Allocation from the dynamic AR & TR state!  AR.Alloc() is for static Allocation access (often for the Job) AR.AllocState() is for the dynamic AR & TR runtime state (deployment    status, task states, etc).  If code needs to know the status of a task: AllocState() If code needs to know the names of tasks: Alloc() It should be very easy for a developer to reason about which method they should call and what they can do with the return values."
11714,client: add comment,
11715,client: fix potentially dropped streaming errors,
11716,tr: remove unneeded lock; chan synchronizes access,
11717,tests: fix races caused by sharing a buffer,"httptest.ResponseRecorder exposes a bytes.Buffer which we were reading and writing concurrently to test streaming log APIs. This is a race, so I wrapped the struct in a lock with some helpers."
11718,tr: fix shutdown/destroy/WaitResult handling,"Multiple receivers raced for the WaitResult when killing tasks which could lead to a deadlock if the ""wrong"" receiver won. Wrap handlers in an ugly little proxy to avoid this. At first I wanted to push this into drivers, but the result is tied to the TR's handle lifecycle -- not the lifecycle of an alloc or task."
11719,client: do not inspect task state to follow logs,"""Ask forgiveness, not permission."" Instead of peaking at TaskStates (which are no longer updated on the AR.Alloc() view of the world) to only read logs for running tasks, just try to read the logs and improve the error handling if they don't exist. This should make log streaming less dependent on AR/TR behavior. Also fixed a race where the log streamer could exit before reading an error. This caused no logs or errors to be displayed sometimes when an error occurred."
11720,mock_driver: close waitCh after exiting,mock_driver wasn't behaving like other driver handles.
11721,client: fix accessing alloc runners, GetClientAlloc() gains nothing from using allAllocs() getAllocatedResources was calling getAllocRunners() twice
11722,tr: remove wip comments,
11723,ar: lock around accessing tasks,Specify that Alloc() does not return updated task states.
11724,extra logging,
11725,Fix client reloading and pass the plugin loaders to server and client,
11726,Plugin loader initialization,
11727,Internal plugin catalog,
11728,drivers/raw_exec: sync access to task state,
11729,drivers/raw_exec: added unix specific tests,
11730,plugin/drivers: plumb in stdout/stderr paths,
11731,raw_exec: move package outside of plugins dir,
11732,fix package references after drivers/base subpackage removed,
11733,driver/raw_exec: port existing raw_exec tests and add some testing utilities,
11734,driver/raw_exec: export driver config fields so they are encoded,
11735,lint: remove unused code and fix spelling,
11736,driver/raw_exec: more tests and bug fixes,added wrapper struct for plugin.ReattachConfig to better handle serialization
11737,driver/raw_exec: initial raw_exec implementation,
11738,clientv2: base driver plugin (#4671),"Driver plugin framework to facilitate development of driver plugins. Implementing plugins only need to implement the DriverPlugin interface. The framework proxies this interface to the go-plugin GRPC interface generated from the driver.proto spec. A testing harness is provided to allow implementing drivers to test the full lifecycle of the driver plugin. An example use: func TestMyDriver(t *testing.T) {     harness := NewDriverHarness(t, &MyDiverPlugin{})     // The harness implements the DriverPlugin interface and can be used as such     taskHandle, err := harness.StartTask(...) }"
11739,tr: add comments and cleanup call signature,From review comments on #4649 left post-merge.
11740,executor v2 (#4656),  client/executor: refactor client to remove interpolation   executor: POC libcontainer based executor   vendor: use hashicorp libcontainer fork   vendor: add libcontainer/nsenter dep   executor: updated executor interface to simplify operations   executor: implement logging pipe   logmon: new logmon plugin to manage task logs   driver/executor: use logmon for log management   executor: fix tests and windows build   executor: fix logging key names   executor: fix test failures   executor: add config field to toggle between using libcontainer and standard executors   logmon: use discover utility to discover nomad executable   executor: only call libcontainer-shim on main in linux   logmon: use seperate path configs for stdout/stderr fifos   executor: windows fixes   executor: created reusable pid stats collection utility that can be used in an executor   executor: update fifo.Open calls   executor: fix build   remove executor from docker driver   executor: Shutdown func to kill and cleanup executor and its children   executor: move linux specific universal executor funcs to seperate file   move logmon initialization to a task runner hook   client: doc fixes and renaming from code review   taskrunner: use shared config struct for logmon fifo fields   taskrunner: logmon only needs to be started once per task 
11741,tr: implement stats collection hook,Tested except for the net/rpc specific error case which may need changing in the gRPC world.
11742,fix build errors post merges,
11743,test: cleanup mock consul service client,Updated to hclog. It exposed fields that required an unexported lock to access. Created a getter methodn instead. Only old allocrunner currently used this feature.
11744,health_hook: simplify locking; test thoroughly,Use doneCh like @dadgar suggested in the original PR. Thoroughly test hook as concurrent Update calls make for a tricky concurrency problem.
11745,add logger back,
11746,fifo: add new fifo package for named pipes (#4665), fifo: add new fifo package for named pipes
11747,client uses passed logger and fix fingerprinters,
11748,Update runc/libcontainer and friends (#4655),  vendor: bump libcontainer and docker to remove Sirupsen imports   vendor: fix bad vendoring of archive package   vendor: fix api changes to cgroups in executor   vendor: fix docker api changes   vendor: update github.com/Azure/go-ansiterm to use non capitalized logrus import 
11749,health_hook: fix panic and add tests,"Still more testing to do, but I want to get this panic fixed ASAP. All new tests pass with -race"
11750,Emit events before long operations,Append when there's nothing blocking between appending and sending an update to the server.
11751,Use a semaphore to block until watcher exits,
11752,ar: use multierror in update hook loop,Make it match TaskRunner update hook behavior
11753,tr: refactor EmitEvents into Emit+Append," UpdateState: set state, append event, persist, update servers EmitEvent: append event, persist, update servers AppendEvent: append event, persist  AppendEvent may not even have to persist, but for the sake of correctness I'm going with that for now."
11754,ar: create health setting shim for health watcher,
11755,fix detection of task transitioning to running,
11756,arv2: implement alloc health watching,Also remove initial alloc from broadcaster as it just caused useless extra processing.
11757,refactor ar hooks into their own files,minimize passed dependencies to ease testing
11758,make AllocBroadcaster easier to use,And test thoroughly.
11759,client: hclog-ify most of the client,Leaving fingerprinters in case that interface changes with plugins.
11760,"implement stopping, destroying, and disk migration", Stopping an alloc is implemented via Updates but update hooks are   not run. Destroying an alloc is a best effort cleanup. AllocRunner destroy hooks implemented. Disk migration and blocking on a previous allocation exiting moved to   its own package to avoid cycles. Now only depends on alloc broadcaster   instead of also using a waitch. AllocBroadcaster now only drops stale allocations and always keeps the   latest version. Made AllocDir safe for concurrent use  Lots of internal contexts that are currently unused. Unsure if they should be used or removed.
11761,lots of comment/log fixes,
11762,keep forgetting lxc,
11763,"persist alloc state on changes, not periodically",Allow alloc and task runners to persist their own state when something changes instead of periodically syncing all state.
11764,wrap boltdb in a write deduplicator,Saves a tiny bit of cpu and some IO. Sadly doesn't prevent all IO on duplicate writes as the transactions are still created and committed. $ go test -bench=. -benchmem goos: linux goarch: amd64 pkg: github.com/hashicorp/nomad/helper/boltdd BenchmarkWriteDeduplication_On-4             500           4059591 ns/op           23736 B/op         56 allocs/op BenchmarkWriteDeduplication_Off-4            300           4115319 ns/op           25942 B/op         55 allocs/op
11765,wip wrap boltdb to get path information,finished but doesn't handle deleting deeply nested buckets
11766,Move all encoding and put deduping into state db,Still WIP as it does not handle deletions.
11767,implement all boltdb interactions behind StateDB,
11768,tr: persist hook state whenever it changes,
11769,artifacts: don't emit event when there's no artifacts,
11770,removing old restoration path before api change,
11771,Implement alloc updates in arv2,Updates are applied asynchronously but sequentially
11772,call handle.Network() instead of storing it,
11773,Add Network method to Handle interface,Should probably be moved to an Inspect method in the Driver Plugin world
11774,consul service hook,Deregistration works but difficult to test due to terminal updates not being fully implemented in the new client/ar/tr.
11775,restore vault client,
11776,log before killing tasks,
11777,no need to TaskStateUpdated to return an error,also updated comments
11778,Update state with server,
11779,Define and thread through state updating interface,
11780,tr: add validate task hook,
11781,missed locking around c.allocs access,
11782,wip,
11783,Fix deadlock,
11784,Remove SetState from interface,
11785,compile,
11786,wip split event emitting and state transitions,
11787,client: implement all-or-nothing alloc restoration,Restoring calls NewAR -> Restore -> Run NewAR now calls NewTR AR.Restore calls TR.Restore AR.Run calls TR.Run
11788,Implement lifecycle hooks on the task runner,
11789,comments,
11790,Hook renames,
11791,remove comment,
11792,Template hook,
11793,address comments,
11794,vault hook,
11795,tr: improve skip log line,
11796,tr: pass context to hooks,
11797,tr: fix setting done in existing hooks,
11798,fix hclog level,
11799,reimplement success state for tr hooks and state persistence,splits apart local and remote persistence removes some locking for now
11800,pass statedb into allocrunnerv2,
11801,remove unused allocrunner shim,
11802,tr: cleanup main loop and shutdown hook impl,
11803,tr: skip error/success saving,All hooks only need to be run once. Since only one hook can fail per run there's no need to track errors on a per hook basis.
11804,tr: don't lock for immutable fields,
11805,tr: start update/shutdown logic,
11806,Copy TR.Config vals to TR,I think I like this pattern better as some Config vals are mutable (Alloc) and some aren't and some are used to derive other values and never used directly. Promoting them onto the TR struct is a little more work but is hopefully more clear as to how each value is used.
11807,"example redis job ""runs"" on arv2! see below","Tons left to do and lots of churn: 1. No state saving 2. No shutdown or gc 3. Removed AR factory for now 4. Made all ""Config"" structs local to the package they configure 5. Added allocID to GC to avoid a lookup Really hating how many things use *structs.Allocation. It's not bad without state saving, but if AllocRunner starts updating its copy things get racy fast."
11808,begin adding AllocRunner.Update,
11809,artifact task hook,
11810,Initial V2 alloc runner,
11811,Merge pull request #4791 from hashicorp/f-fix-resource-type,Change CPU/Disk/MemoryMB to int everywhere in new resource structs
11812,Merge branch 'f-fix-resource-type' of github.com:hashicorp/nomad into f-fix-resource-type,
11813,fix linting,
11814,Merge pull request #4790 from hashicorp/f-block-attrs,Add BlockAttrs
11815,use int64,
11816,Change CPU/Disk/MemoryMB to int everywhere in new resource structs,
11817,Add BlockAttrs,
11818,Merge pull request #4783 from hashicorp/f-device-scheduling,Device constraint checking
11819,review comments,
11820,Merge pull request #4780 from hashicorp/f-device-attributes,Device fingerprinting uses Attribute object
11821,Merge pull request #4779 from hashicorp/f-attributes-typed,Attribute object that supports units and comparison
11822,fix typos,
11823,Merge pull request #4784 from roansong/master,Typo fix
11824,Update template.html.md,
11825,[Docs] Make clear Nomad requires leases in Vault,
11826,Typo fix,
11827,Check constraints on devices,
11828,rework device checker,
11829,Replace attributes map with new Attribute object,
11830,validate constraints/affinities,
11831,add to stack,
11832,Device feasability checker,
11833,node devices,
11834,Use Attribute in device fingerprinting,
11835,Merge pull request #4772 from sportebois/b-fix-missing-ref-in-docs,B fix missing ref in docs
11836,fmt -s,
11837,New parser and comparison,
11838,Units defined and parsing,
11839,Merge pull request #4773 from hashicorp/f-device-pars,parse affinities and constraints on devices
11840,parse affinities and constraints on devices,
11841,Add missing ref for reschedule and migrate in job and group docs,
11842,"Fix  variable interpolation ""active"" state in docs menu",
11843,Update CHANGELOG.md,
11844,Merge pull request #4741 from sportebois/b-fix-task-docs-links,docs: fix links in task job specification
11845,Merge pull request #4762 from hashicorp/f-678-check-broken-links,docs: check website for broken links
11846,website testing: swapped out trap in website testing script for a simpler error catch,
11847,"website testing: minor formatting changes, passing in middleman version from outer Makefile",
11848,Update CHANGELOG.md,
11849,Merge pull request #4764 from hashicorp/b-reconciler-markstop-filterterminal,Allocs already in terminal state do not need to be updated in the reconciler
11850,fix: increase log rotator line scan limit,"In case where gelf/json logging is used, its fairly easy to exceed the 16k limit, resulting in json output being cut up into multiple strings the result is invalid json lines which can create all kind of badness in the logging server This fixes https://github.com/hashicorp/nomad/issues/4699 Signed-off-by: Christian Winther link"
11851,Merge pull request #4763 from hashicorp/f-devices-parse,Parse devices in job spec
11852,Fix the service stanza link in task documentation,Only a single service link target was set for both the service job spec and the Consul-connect integration.
11853,Fix bug in reconciler where terminal allocs on a job already stopped were unnecessarily updated,
11854,Diff,
11855,parse devices,
11856,Define device request structs,
11857,Merge pull request #4750 from hashicorp/f-allocated-resources,Split Resource struct
11858,Merge pull request #4743 from hashicorp/doc-rpc-port-discussion,docs: make explicit the communication pattern on RPC port (4647)
11859,Merge pull request #4755 from hashicorp/f-update-go-version-to-1.11,Vagrant: Update go version to 1.11
11860,docs: broke docs testing out into its own travis stage,
11861,docs: modified docs wget testing to be a little less verbose,
11862,docs: fixed incorrect env var in travis that to enable website testing,
11863,docs: added docs website tests using a simple wget --recursive,
11864,"docs: changed localhost URLs for local UI from hyperlinks to pre-text, they were interfering with bad link detection",
11865,docs: fixed broken links to schedulers page,
11866,Fix example drain API request,
11867,nvidia package restructue + build non-linux,
11868,renamed vagrant script to accurately reflect non-privileged requirement,
11869,vagrant: updated go_version to 1.11 in vagrant-linux go provisioning script,
11870,vagrant: modified UI provisioning script to run as non-privileged,
11871,editing monitoring.html (#4754),
11872,editing lb guide (#4753),
11873,Merge pull request #4638 from oleksii-shyman/nvidia-plugin,WIP :: Nvidia Plugin
11874,renames,
11875,Introduce nvidia-plugin reserve, added reserve functionality that returns OCI compliant env variables   specifying GPU IDs to be injected inside the container
11876,fixing tests,
11877,Monitoring and Alerting Guide with Prometheus [WIP] (#4706),  add prometheus configuration guide   fixing sub navigation issue   Add detail to Next Steps   add alerting component to guide   update   change docker image name and shorten job templates   re-arrange to fix broken links 
11878,Load Balancing with Fabio Guide (#4445),  add load-balancing guide   restructure load balancing section   defining consul lb strategies inline and giving fabio its own bullet point   update docker image name and shorten job template   changing system scheduler link to relative link and moving load balancing navigation link right to right above Web UI 
11879,Introduce Nvidia-plugin stats, created go-nvml wrapper for stats added stats feature to nvidia-plugin
11880,Introduce nvidia-plugin fingerprinting, created go-nvml wrapper for fingerprinting added fingerprinting feature to nvidia-plugin
11881,Scheduler uses allocated resources,
11882,docs: amended description per @dadgar suggestions in https://github.com/hashicorp/nomad/pull/4743,
11883,docs: make explicit the communication pattern on RPC port (4647),
11884,Add missing link to vault in task spec documentation,
11885,allocated resources structs,
11886,Node reserved resources,
11887,Node resources on client,
11888,Override the a11y title and description for the stats time series chart,"Since this is a use case specific chart, we can use use case specific language in our labels."
11889,Add a11y features to the line-chart component," Treat it as an image Add a title and a description Hide the axes, just in case"
11890,Add a longForm option to format-duration,
11891,changelog,
11892,Make the global logo link to the jobs page (home page),
11893,Add utilization stats to the task rows on allocation detail,
11894,Remove no longer used allocation-stats class,
11895,Use the StatsTracker method of getting alloc stats in alloc row,
11896,Merge pull request #4704 from hashicorp/f-ui-applied-stat-charts,UI: Stat charts everywhere
11897,Merge pull request #4723 from hashicorp/b-autopilot-cli,Fix autopilot set enable custom upgrades flag
11898,Fix autopilot set enable custom upgrades flag,
11899,Merge pull request #4720 from hashicorp/b-jet-fixes,Series of scheduler fixes / debugging enhancements
11900,skip e2e/vault if integration isn't set,
11901,Merge pull request #4712 from hashicorp/b-failed-trigger-reason,Add a missing eval trigger reason
11902,fix logging,
11903,Add failed follow up to the list of allowed eval trigger reasons,needs unit test
11904,Added logging around nacked evals in the scheduler worker,
11905,Merge pull request #4717 from barda999/master,changed ${nomad.class} to ${node.class}
11906,changed ${nomad.class} to ${node.class},I guess that was an unintentional mistake
11907,Merge pull request #4698 from hashicorp/t-vault-matrix,Vault test matrix
11908,proper variable capture,
11909,Merge pull request #4716 from hashicorp/f-no-reuse-triggerby,Unique TriggerBy for blocked evals
11910,Merge branch 'b-plan' into b-jet-fixes,
11911,Merge pull request #4709 from hashicorp/b-deployments,Fix deployment watcher index usage
11912,Unique TriggerBy for blocked evals,Give blocked evals a unique triggerby reason to make debugging a chain of evaluations easier.
11913,test allocs fit,
11914,Better comment on snapshotindex,
11915,Denormalize jobs in plan and ignore resources of terminal allocs,"Denormalize jobs in AppendAllocs: AppendAlloc was originally only ever called for inplace upgrades and new allocations. Both these code paths would remove the job from the allocation. Now we use this to also add fields such as FollowupEvalID which did not normalize the job. This is only a performance enhancement. Ignore terminal allocs: Failed allocations are annotated with the followup Eval ID when one is created to replace the failed allocation. However, in the plan applier, when we check if allocations fit, these terminal allocations were not filtered. This could result in the plan being rejected if the node would be overcommited if the terminal allocations resources were considered."
11916,Fix other instances of blocking queries,
11917,update changelog,
11918,Merge pull request #4702 from hashicorp/b-non-voter-boostrap,Do not bootstrap with non voters
11919,always handle failed allocation,
11920,Fix deployment watcher index usage,Fixes three issues: 1. Retrieving the latest evaluation index was not properly selecting the greatest index. This would undermine checks we had to reduce the number of evaluations created when the latest eval index was greater than any alloc change 2. Fix an issue where the blocking query code was using the incorrect index such that the index was higher than necassary. 3. Special case handling of blocked evaluation since the create/snapshot index is no particularly useful since they can be reblocked.
11921,Update stat tracker unit tests,
11922,do not bootstrap with non voters,
11923,Acceptance test coverage for all the pages with resource utilization graphs,
11924,Always return valid dates for timestamps,
11925,Handle the empty data cases,
11926,Unit tests for the stats trackers service,
11927,Integration tests for the primary-metric component,
11928,Merge pull request #4693 from Chaosteil/patch-1,Update federation.md command
11929,build nomad in e2e tests,
11930,vendor vault api for backwards compatibility,
11931,run in matrix,
11932,vet,
11933,test automation,
11934,add a vault test matrix,
11935,fix rpc test,
11936,fix panic,
11937,Update federation.md command,This fixes the documentation to use the most recent syntax for module
11938,Merge pull request #4692 from hashicorp/f-plugin-singleton,Singleton plugin loader
11939,fix documentation of reattach and use testlog,
11940,singleton wrapper,
11941,Add cancelation support to stats trackers,
11942,Gap support for line charts,
11943,Add request throttling to the abstract stats tracker,"This is the best of three options  Users of stats trackers control polling (old method) Stat tracker is stateful and has start/stop methods (like logging) Stat trackers blindly throttle requests  This is the best option because it means N number of concurrent users of a stats tracker can request polling without inundating the tracker with redundant frames (or the network with redundant requests), but they also don't have to coordinate amongst themselves to determine what state a tracker should be in."
11944,Use the new stats tracker service to get stats trackers in primary metric,
11945,Clean up old controller code,
11946,New LRUMap dep,
11947,New service to manage stats trackers,"This solves two problems:  redundant trackers making redundant requests trackers being obliterated as soon as the primary metric component    is destroyed  It introduces a new problem where visiting more and more node and allocation pages adds to an ever-growing list of trackers that can assume lots of memory, but it solves the problem by using a least-recently-used cache to limit the number of trackers tracked."
11948,Merge pull request #4686 from hashicorp/f-logger-deps,Use StandardLogger for Raft/Serf/Memberlist/Yamux
11949,yamux,
11950,vendor yamux,
11951,Serf/Raft/Memberlist logger,
11952,Merge pull request #4682 from hashicorp/f-hc-logger,Plumb hc-logger through everything but client
11953,small fixes,
11954,server,
11955,Add resource utilization graphs to the task index page,
11956,Add resource utilization graphs to the allocation index page,
11957,Use the appropriate methods and types in the stat trackers,
11958,Style the primary-metric pattern,
11959,Handle the length = 0 and length = 1 cases for activeDatum,
11960,"Use the prototype instead of ""private"" property backups",
11961,Merge pull request #4677 from hashicorp/b-tf-vault-config-fix,Corrected vault address and port in client/server hcl
11962,Corrected vault address and port in client/server hcl,
11963,Make rollingArray work with mutable array extension methods,
11964,Remove old stat tracking code from the client page,In favor of the new primary-metric components
11965,Use the new primary-metric component on the client detail page,
11966,New primary-metric component,"It encapsulates all the tracker, polling, and markup for this style of metric."
11967,Full markup for time series metrics,
11968,Add stat charts to the client page,
11969,Use percent for the y-axis binding,
11970,Use addObject to get kvo behaviors,
11971,Merge pull request #4661 from hashicorp/f-ui-line-chart,UI: line chart
11972,Unit test coverage for the stats-time-series chart,
11973,Unit test coverage for the line chart component,
11974,Split the line-chart and stats-time-series freestyle entries,
11975,Updates to the styleguide,
11976,"Use ""global"" gradients via a clipping mask and a rect w/100% height",
11977,Avoid race conditions around showing and hiding the line chart tooltip,
11978,Stats time series,A use-case specific line-chart for showing utilization metrics by percent
11979,Make the tooltip animation snappier for line charts,"When data is coming in live, the tooltip can get bogged down by updates causing the tooltip to never make it under the mouse, which looks like either lag or a bug."
11980,Don't round numbers when the domain is between 0 and 1,
11981,Styleguide entry for the line chart component,
11982,New line chart component,
11983,Merge pull request #4635 from hashicorp/f-ui-stat-trackers,UI: Stats trackers
11984,Update changelog,
11985,agent + consul,
11986,Test coverage for NodeStatsTracker,
11987,Merge pull request #4658 from hashicorp/b-vault-panic,Vendor new Vault API package
11988,vault consts,
11989,Merge pull request #4659 from hashicorp/f-drain-failed-deployment,Failed/paused deployments do not block migrations
11990,remove toplevel vault dependency,
11991,Merge pull request #4654 from hashicorp/f-plugin-factory,Plugin loader
11992,review comments,
11993,Failed/paused deployments do not block migrations,"This PR changes behavior of the scheduler such that a task group with a deployment that is failed or paused will not cause the scheduler to skip migrations. The reason for this change is that it causes a bad UX when draining nodes with allocations that are part of a failed/paused deployment. These operations should not be coupled in any way and this remedies that. Prior behavior was still correct, but required either jobs to transistion to a healthy state or for the node to hit its drain deadline."
11994,Missing vendors,
11995,circonus,
11996,Update retryablehttp,
11997,vendor vault 0.11.1 api,
11998,Update changelog,
11999,Merge pull request #4647 from hashicorp/b-panic-missing-taskgroup,Fix panic when reschedule policy for allocation can't be looked up
12000,Plugin loader,
12001,Merge pull request #4651 from shantanugadgil/patch-1,possible typo about node.class
12002,Add support for non-list tooltips in charts,
12003,Add chart color swatches based on css colors,
12004,Bring in new d3 dependencies,
12005,possible typo about node.class,I was checking up on how to set some metadata and stumbled upon this.
12006,Merge pull request #4613 from hashicorp/b-cert-whitespace,config: accept CA PEM files with extra whitespace
12007,config: accept CA PEM files with extra whitespace,Previously we did a validation pass over CA PEM files before calling Go's CertPool.AppendCertsFromPEM to provide more detailed error messages than the stdlib provides. Unfortunately our validation was overly strict and rejected valid CA files. This is actually the reason the stdlib PEM parser doesn't return meaningful errors: PEM files are extremely permissive and it's difficult to tell the difference between invalid data and valid metadata. This PR removes our custom validation as it would reject valid data and the extra error messages were not useful in diagnosing the error encountered.
12008,Merge pull request #4648 from hashicorp/b-migrate-tls,Set hostname when migrating ephemeral disks over TLS
12009,Add changelog entry for #4648,
12010,fix race around error handling,
12011,client: set host name when migrating over tls,Not setting the host name led the Go HTTP client to expect a certificate with a DNS-resolvable name. Since Nomad uses module names ephemeral dir migrations were broken when TLS was enabled. Added an e2e test to ensure this doesn't break again as it's very difficult to test and the TLS configuration is very easy to get wrong.
12012,Fix panic when reschedule policy for allocation can't be looked up,because its task group changed
12013,Merge pull request #4645 from hashicorp/f-restart-docs-fix,Fix incorrect default mode for restart stanza in docs
12014,Fix incorrect default mode for restart stanza in docs,
12015,Merge pull request #4631 from hashicorp/f-plugin-config,Parse plugin configs
12016,Merge pull request #4642 from hashicorp/b-vet,Fix vet errors and use newer go version in travis
12017,use latest go in travis,
12018,Fix make check errors,
12019,Update CHANGELOG.md,
12020,Fix device launcher ctx cleanup,
12021,Update CHANGELOG.md,
12022,Update changelog,
12023,Merge pull request #4640 from hashicorp/f-affinities-spread,Affinities and spread
12024,Fix more review feedback,
12025,Fix linting,
12026,code review feedback,
12027,Move topk and delay heap to separate packages under lib,
12028,Track top k nodes by norm score rather than top k nodes per scorer,
12029,Fix linting,
12030,Use heap to store top K scoring nodes.,Scoring metadata is now aggregated by scorer type to make it easier to parse when reading it in the CLI.
12031,Min heap to store top K scoring elements,
12032,Parse test for spread,
12033,Parsing and API layer for spread stanza,
12034,fix linting error,
12035,Fix scoring logic for uneven spread to incorporate current alloc count,Also addressed other small code review comments
12036,more cleanup,
12037,added some unit tests for -1 spread score,
12038,comment and formatting cleanup,
12039,fix scoring algorithm when min count == current count,
12040,Remove hardcoded boosts for even spread.,"instead, calculate them based on delta between current and minimum value"
12041,"Implement support for even spread across datacenters, with unit test",
12042,Support implicit spread target to account for remaining desired counts,
12043,fix comments,
12044,"Allow empty spread targets, and validate target percentages.",
12045,validate spread from job/task group validate methods,
12046,Include spreads configured at job level when precomputing weights/desired counts.,
12047,Fix warnings,
12048,Implement spread iterator that scores according to percentage of desired count in each target.,Added this as a new step in the stack and some unit tests
12049,"Validate method, and rename ratio field to percent",
12050,Structs and validation for spread,
12051,Fix test,
12052,Some minor changes from code review,
12053,Fix after rename to ConstraintSetContainsAny,
12054,Fix linting,
12055,Remove unnecessary reset,
12056,"test for setcontainsany, and treat set_contains same as set_contains_all",
12057,Address some review feedback,
12058,Back out changes to propertyset that were not necessary for affinities,
12059,Implement affinity support in generic scheduler,
12060,More review comments,
12061,Fail validation if system job has affinities,
12062,Treat set_contains as a synonym of set_contains_all,
12063,"Include affinities in job and task diff, and more test cases",
12064,"Refactor method to return affinity struct, and add extra test at task level",
12065,Fix Copy method for job and task to include affinities,
12066,Remove unused field,
12067,"Affinity parsing, api and structs",
12068,Update changelog,
12069,Merge pull request #4632 from hashicorp/b-delay-heap-race,Use eval broker lock when reading/modifying delay heap
12070,Merge pull request #4627 from hashicorp/doc-rkt-group,docs: mention rkt group option
12071,Use readlock,
12072,Example usage of the NodeStatsTracker,
12073,A StatsTracker for client-level statistics,
12074,Unit Tests for AllocationStatsTracker,
12075,Unit tests for RollingArray,
12076,Example of usage of the AllocationsStatsTracker,
12077,An implementation of StatsTracker for allocations,It accumulates CPU and Memory usage for the allocation as a whole as well as by task.
12078,An abstract class for capturing nomad stats,"It follows the form of poll -> json parse -> append, Where append is defined in subclasses to add data from the new frame to long-lived rolling arrays of data."
12079,An array subclass that enforces a maxLength,The maxLength is enforced by removing elements from the head of the list.
12080,Merge pull request #4620 from hashicorp/f-optional-race,Add a -race enabled build to Travis
12081,Merge branch 'master' of https://github.com/hashicorp/nomad, 'master' of https://github.com/hashicorp/nomad: (59 commits)   Test coverage for the promote canary feature   Update README.md   launcher readme   Add stats to launcher   Add stats to example plugin   Example device plugin and helpers   Fix the flickering issue with start/stop job   Add a confirmation loading state to the two-step-button component   Switch stop/run job actions to EC tasks   Test coverage for the Start Job behavior   Add Start Job action on the job overview page for when a job is dead   gofmt -s   Update the info message about token storage   Switch token storage to localStorage from sessionStorage   add stats to device interface   Change the latest deployment component to include a Promote Canary button   Support the promote deployment api action   Simplify the data control flow around job.plan()   statistics protos   Acceptance tests for the edit behaviors on the job definition page   ...
12082,add changelog line for npe fix,
12083,Use eval broker lock when reading/modifying delay heap,
12084,Website docs,
12085,plugin dir parsing,
12086,Merge pull request #4600 from hashicorp/f-ui-job-writes,UI: Job Writes
12087,Merge pull request #4615 from hashicorp/f-ui-restart-stopped-job,UI: Restart stopped job
12088,Merge pull request #4616 from hashicorp/f-ui-promote-canary,UI: Promote canary
12089,Test coverage for the promote canary feature,
12090,Plugin config parsing,
12091,Merge pull request #4628 from hashicorp/f-ui-use-ls-not-ss-for-tokens,UI: Use localStorage instead of sessionStorage to store ACL tokens
12092,Update README.md,
12093,launcher readme,
12094,Merge pull request #4598 from hashicorp/f-device-plugin-example,Example device plugin and helpers
12095,Add stats to launcher,
12096,Add stats to example plugin,
12097,Example device plugin and helpers,This PR introduces: * An example device plugin that exposes files as devices for testing. * Helpers for serving a device plugin * A launcher binary that allows interacting with a device plugin without needing a Nomad client.
12098,Merge pull request #4621 from hashicorp/f-device-stats,Device plugins expose device statistics
12099,Fix the flickering issue with start/stop job,"When the server doesn't respond immediately, there is a visible window of time between the action being submitted and the blocking query coming back with the new job status."
12100,Add a confirmation loading state to the two-step-button component,
12101,Switch stop/run job actions to EC tasks,
12102,Test coverage for the Start Job behavior,
12103,Add Start Job action on the job overview page for when a job is dead,
12104,Merge pull request #4612 from hashicorp/f-ui-job-edit,UI: Edit a job
12105,gofmt -s,
12106,Update the info message about token storage,
12107,Switch token storage to localStorage from sessionStorage,
12108,docs: mention rkt group option,
12109,add stats to device interface,
12110,Add a -race enabled build to Travis,Allow it to fail for now with the goal of making it the default build in the future.
12111,Merge pull request #4614 from wyattanderson/wa-eligibility-docs,Add documentation for eligibility toggle endpoint
12112,Merge pull request #4617 from hashicorp/docs-reord,Rebased docs reorg
12113,Minor wording change,
12114,Add redirects and fix broken link in layouts/downloads.erb,
12115,Misc. /guides updates,
12116,Update guides/spark,
12117,Update guides/security,
12118,Update guides/operating-a-job,
12119,Updates to guides/operations,
12120,Misc. changes and fixes to docs/,
12121,Fix broken links in docs/job-specification,
12122,"Link Enterprise in header and footer to Nomad Enterprise docs page instead of marketing page; add ""request more info"" links",
12123,Fix broken links in docs/drivers,
12124,Fix broken links in docs/configuration,
12125,Fix broken links in docs/commands,
12126,Minor updates to intro and vs. content; update use cases,
12127,Fix broken links in API docs,
12128,Re-organize existing docs and guides,
12129,Change the latest deployment component to include a Promote Canary button,"Before it would say the deployment required promotion, now it has a button that triggers the promotion."
12130,Support the promote deployment api action,
12131,Add documentation for eligibility toggle endpoint,
12132,Simplify the data control flow around job.plan(),
12133,Merge pull request #4603 from hashicorp/f-ui-new-job-improved-plan,UI: New job improved plan screen
12134,statistics protos,
12135,Acceptance tests for the edit behaviors on the job definition page,
12136,Rewrite the job run acceptance tests to be about routing,
12137,Test coverage for the job-editor component,Most of this was ported over from the existing job run acceptance tests
12138,lint: fix comment spelling,
12139,driver/base: fix proto pr comments,
12140,driver/base: add size on disk field for task,
12141,driver/base: fixup comments from code review,
12142,driver/base: add task event emitting to proto,
12143,driver/base: Add initial protobuf spec,
12144,Since registerHelper doesn't work in integration tests a new way is needed,This exports a function that returns the pertinent function when given a container. This way it works in registerHelper and in integration tests beforeEach hooks
12145,Introduce job editing to the job definition page,
12146,Support cancellation of editing in the job-editor,
12147,Fix bug where scrolling wasn't using the document,Instead it was using the page-layout is-right div
12148,Handle update job in the model,
12149,fixup-job-editor,
12150,fixup-adapter,
12151,Support different contexts for the job editor,
12152,Support job update in the adapter,
12153,Use the same urlForFindRecord logic for urlForUpdateRecord,
12154,Fix multiple highlight bug in the distribution-bar component,Caused by the re-indexing that occurs to remove zero-value bars.
12155,Fix a blocking queries bug,"The lowest valid blocking query index is 1, but the API will return 0 if there has yet to be an index set (no response). This in conjunction with that 0 being stored as a string made the ""fallback to 1"" guard not work."
12156,Move the bulk of the new job page into a new job editor component,
12157,New job edit page,
12158,Test coverage for scheduler dry-run addition to the plan page,
12159,Fixed bug that prevented non verbose job diffs from printing changed leaf nodes,
12160,Show the scheduler dry-run output on the plan page,
12161,Remove docker only on linux from getting started,
12162,Merge pull request #4591 from hashicorp/f-device-plugin,Initial device go-plugin
12163,Describe public interface of Fingerprint,
12164,Merge pull request #4545 from hashicorp/f-ui-no-leader-error,UI: Specialized No Leader error page
12165,Merge pull request #4599 from hashicorp/f-docker-kill-timeout,Fix kill timeout exceeding 5m on Docker driver
12166,Specialized No Leader error page,
12167,Don't use the verbose diff for job run plan,
12168,Merge pull request #4592 from hashicorp/f-ui-new-job,UI: Run a job from the Web UI
12169,Spiff up the form buttons with type and disabled attributes,
12170,Fix kill timeout exceeding 5m on Docker driver,Fixes an issue where the Docker API client would timeout before the kill timeout was hit.
12171,Acceptance tests for job run page,
12172,Rework job parse mirage request to get the job ID out of the payload,
12173,initial device go-plugin,
12174,docs: fix description of update.stagger,Also add a bunch of links.
12175,New Page Object component for common error formatting,
12176,New PageObject helper for getting and setting CodeMirror values,
12177,New test helper for getting the underlying CodeMirror instance from a dom selector,
12178,Merge pull request #4588 from hashicorp/d-fix-max-parallel-over-group,Clarify module interaction with taskgroups
12179,Clarify max_parallel interaction with taskgroups,Updates are parallelized at the task group level always.  The module attribute controls parallelization over the module allocations of the task group itself.
12180,Acceptance test for the jobs list page,
12181,Use the job name as the job id,This has bit me more than once. It's best just to make Mirage consistent with the API even if it currently means indeterminate job ids
12182,"Support parse, plan, and run endpoints in mirage",
12183,Move the Diff property read out of the template,
12184,Error messages for job submit,
12185,Merge pull request #4565 from hashicorp/b-compare-cert-alg,Error if TLS Certificate signature algorithm isn't supported in cipher suites
12186,fix up test failure due to keyloader instantiated on tls config during parsing,
12187,Run job UI and API workflows,
12188,Remove unused solarized theme configuration,
12189,Fix no allocations error message layout for the recent allocations component,
12190,Parse and Plan API and UI workflows,
12191,Merge pull request #4584 from hashicorp/b-build-fixes,Vendor github.com/golang/protobuf/ptypes/empty
12192,Merge pull request #4577 from hashicorp/b-panic-job-history,Fix for panic when submitting non-existent version for job history CLI command
12193,vendor github.com/golang/protobuf/ptypes/empty,
12194,Add breadcrumb to the run job page,
12195,New job run page and navigation to get there.,
12196,New layout helper for associating two elements vertically,"By default, blocks have a margin of 1.5em to create a consistent vertical rhythm. However, sometimes elements need to be associated with the element above them. In this cases, the gap between elements needs to be tighter. There are many ways to do this, but this approach asks the latter content to be marked as associative. The implication is that the association is with the previous block."
12197,Enforce a min-height for the code editor component,
12198,spelling fix,
12199,Merge pull request #4573 from Xopherus/fix-4413,Close multiplexer when context is cancelled
12200,Merge pull request #4541 from hashicorp/f-ui-new-json-viewer,UI: New JSON viewer
12201,Remove the old json viewer,
12202,"Delete the removed ""depth"" aspect of json viewer from the styleguide",
12203,Theme CodeMirror,Borrowed heavily from Vault
12204,Use ivy-codemirror in the JSON Viewer component,
12205,Introduce ivy-codemirror,
12206,Merge pull request #4572 from hashicorp/f-ui-region-switcher,UI: Region Switcher
12207,Close multiplexer when context is cancelled,"Multiplexer continues to create rpc connections even when the context which is passed to the underlying rpc connections is cancelled by the server. This was causing #4413 - when a SIGHUP causes everything to reload, it uses context to cancel the underlying http/rpc connections so that they may come up with the new configuration. The multiplexer was not being cancelled properly so it would continue to create rpc connections and constantly fail, causing communication issues with other nomad agents. Fixes #4413"
12208,List the new region mirage env var in the environment file,
12209,Use the model hook and setupController hook instead of afterModel,This is a more idiomatic way to handle the QP resetting in the application controller.
12210,Merge pull request #4568 from hashicorp/vendor-fix-blake2b,vendor: fix blake2b on non-amd64 archs
12211,fix panic for job history cli command when used with non-existent job version,
12212,add signature algorithm to error message,
12213,rename signature algorithm type per code review feedback,
12214,extract functionality for determining signature algorithm per code review feedback,
12215,Merge pull request #4570 from hashicorp/b-disable-checkpoint,Skip update checking if DisableUpdateCheck is set to true
12216,Merge pull request #4574 from hashicorp/f-base-go-plugin,Base go-plugin client/server
12217,vet,
12218,Review comments,
12219,Fix typo,
12220,Initial go-plugin,
12221,Acceptance tests for the region switcher,
12222,move protos,
12223,Merge pull request #4571 from hashicorp/f-base-plugin-configs,Convert HCL Interface values to Cty Values
12224,block attr spec,
12225,hcl interface to cty function,
12226,skip update checking if DisableUpdateCheck is set to true,
12227,change string repr of signature algorithms to constants,
12228,remove redundant nil check,
12229,add default case for empty TLS structs,
12230,add comments,
12231,type safety for string keys,
12232,add simple getter for certificate,
12233,refactor to use golang built in api for certs,
12234,add functionality to check if signature algorithm is supported in cipher suites,
12235,change function signature to take entire tls config object,
12236,Unit test coverage for adding the region param to requests,
12237,Properly model regions in Mirage,
12238,Specify the request type for token self,"Without this, the data (query params) get json stringified"
12239,Simplify the control flow around changing namespaces and regions,"The UI will no longer try to redirect to the appropriate namespace or region if one is found in localStorage. Instead, it will assume that the lack of query param means the default namespaces or region is desired."
12240,Update tests to handle region switching,
12241,Handle errors when getting regions or the default regions,"This protects against volatility in the server and, more commonly, ACLs returning forbidden responses."
12242,Address an issue with certain dependent keys,
12243,Only deal with the region param (in the app and in api calls) when necessary,
12244,Get the server's region (aka default region) from the API,The default region shouldn't be used as a qp since no qp means the same thing.
12245,Add the region qp to all requests made through the token service,
12246,The application route doesn't need to fetch namespaces,
12247,Sidestep a transpilation bug.,Default params don't make it into arguments which were being splatted into the call to super.
12248,Repeat the new namespace pattern for region,
12249,Clear up the data flow for namespaces,"This is incredibly tricky with query params, since there is a bundle of timing issues, lifecycle issues, missing features, and all around gotchas with query params. This solution has no observers and no instances of the system service being set from the jobs controller. The upside to this is no observers, much easier to follow logic, no more dependent key chain reactions."
12250,Account for the service:system dependency due to region,
12251,Remove the gutter menu from the allocations page,
12252,Never show the menu divider for the first menu item,
12253,Line breadcrumbs up flush with section content,
12254,Make the dropdown ever so slightly off-white,
12255,Move the region switcher out of the secondary nav and into the gutter when the gutter is collapsed,
12256,Add region switcher to the global header,
12257,Only show the region switcher when there are multiple regions,
12258,Fetch regions and namespaces in the application route,
12259,Harden up the system service for the event of store unloading,
12260,Reset the system service when unloading the store,
12261,Add the region qp to every api request,
12262,Styles for the region switcher,
12263,"Add three-way region property (query param, service, localStorage)",
12264,Bare minimum Mirage support for regions,
12265,Fix protos,
12266,vendor: fix blake2b on non-amd64 archs,The blake2b package only includes an asm implementation for amd64. Other architectures use a generic Go implementation. Unfortunately appengine is one of those architectures and we explicitly ignore appengine when vendoring because it is an unsupported platform for Nomad. Commit 925ec07a4 started ignoring appengine to help trim down the vendor package. We now need to include appengine again - despite not building for it - just to avoid accidently breaking other archs we do support.
12267,Merge pull request #4559 from hashicorp/f-base-plugin,Base/device/hclspec plugin protobufs
12268,SetConfig,
12269,review feedback,
12270,Base and device plugin and hclspec parser,
12271,Vendor conflicts,Vendored the tagged version of protobuf.
12272,Merge pull request #4547 from msvbhat/systemd-unit-restart,Nomad systemd unit - Add restarting on failure
12273,Merge pull request #4551 from hashicorp/f-plugin-dependencies,Upgrade plugin dependencies
12274,Merge pull request #4536 from hashicorp/f-ui-mobile-views,UI: Mobile Views
12275,Align the hamburger menu and ensure that it's full area is clickable,
12276,Remove extra whitespace,
12277,Make the hamburger menu look more traditional,
12278,Test coverage for gutter menu interactions,
12279,"Make it ""feel"" mobile with a backdrop that closes the gutter menu on tap",
12280,Visual treatment for the collapsed gutter menu,
12281,Treat the nomad logo and the hamburger menu as their own css components,
12282,Refactor navbar markup,
12283,Style the hamburber menu icon,
12284,Add open/close functionality to the gutter-menu when it's collapsed,
12285,Hide the gutter menu at low width resolutions,
12286,Undo the responsive styles that come with bulma,
12287,Merge pull request #4529 from hashicorp/f-ui-job-overview-allocs,UI: Recent allocs + job allocs view
12288,Keep the search box around when a search yields no results,
12289,Test coverage for the jobs/:job/allocations page,
12290,Tests for the recent allocations table,
12291,Refactor allocations page as a component,
12292,Add object spread,
12293,Treat filtering on an async relationship as async,
12294,Watch allocations on the job index page,"Since there are no recent allocations, those alloc need to be watched"
12295,Don't use the boxed-section pattern on pages with one section,
12296,Add search to the allocations page,
12297,Link to the allocations page from the recent allocations table,
12298,Use the correct allocation row context in various places,
12299,Use the new taskGroup context for allocation row,
12300,New dedicated allocations page for jobs,
12301,Add recent allocations to relevant job overview pages,
12302,Make sure memory and cpu bars have a consistent size,
12303,Remove the name column and add a created column to allocation rows,
12304,Add createTime to the allocation model,
12305,Merge pull request #4533 from hashicorp/f-ui-refactor-page-chrome,UI: Refactor page chrome
12306,fix up merge,
12307,don't vendor protoc-gen-go,
12308,add note to readme to install protoc for local development,
12309,vendorfmt,
12310,add dev dependency for generating protobufs,
12311,update grpc vendor dependencies,
12312,systemd unit - Do not restart if unit fails 3 times in 10s,Signed-off-by: M S Vishwanath Bhat link
12313,Merge pull request #4553 from hashicorp/vendor-blake2b,vendor: update blake2b and dependencies
12314,vendor: update blake2b and dependencies,All of this just to get something faster than md5... yeesh.
12315,Merge pull request #4503 from hashicorp/f-e2e-cli,E2E: CLI Implementation
12316,e2e/cli: comment fixups,
12317,systemd unit - Wait for Network to be online,This patch configures nomad to start only after the network is up and online. Signed-off-by: M S Vishwanath Bhat link
12318,systemd unit - Restart on failure,Signed-off-by: M S Vishwanath Bhat link
12319,Merge pull request #4552 from hashicorp/f-protoc,Add protoc to project
12320,Remove old protoc installer,
12321,Add protoc to project,
12322,Merge pull request #4543 from hashicorp/f-protoc-vagrant,Bootstrap vagrant development environment with protoc
12323,update to latest protoc version,
12324,correct operating system,
12325,bootstrap vagrant development environment with protoc,
12326,Merge pull request #4540 from hashicorp/f-ui-always-show-latest-deployment,UI: Always show latest deployment
12327,e2e/cli: add -run option to mimic go test,
12328,e2e/cli: add run command usage docs,
12329,"e2e/cli: code review comments, restructing and cleanup",
12330,e2e/cli: fix formatting,
12331,e2e/cli: port logging to use hclog,
12332,vendor: update github.com/hashicorp/go-hclog,
12333,e2e/cli: implemented run logic,
12334,e2e/cli: use discover utility for nomad binary,
12335,e2e/cli: initial cli implementation for nomad-e2e,
12336,e2e/framework: fix linting,
12337,e2e: skip e2e tests during normal go test runs,
12338,Test coverage for the expanded feature set of the latest-deployment component,
12339,Give the running-deployment component a more appropriate name,
12340,Make running-deployment always show the latest deployment,
12341,Correctly model the latestDeployment relationship and the inverse,
12342,Support the /job/:id/deployment endpoint in mirage,
12343,Get the latest deployment for a job by using the appropriate API,
12344,Use page-layout for job routes,
12345,Use page-layout for allocations routes,
12346,Use page-layout for clients routes,
12347,Use page-layout for servers routes,
12348,Use page-layout for the settings routes,
12349,New page-layout component that contains both the header and the gutter menu,
12350,Remove all references to onNamespaceChange,
12351,Redo onNamespaceChange to use the router,
12352,Merge pull request #4539 from hashicorp/b-ui-job-version-mirage,UI: Use the JobID as the Version ID for mirage job versions
12353,Use the JobID as the Version ID for mirage job versions,
12354,Merge pull request #4467 from cbednarski/nomad-vault-template-docs,Added docs on Vault KV API v2 template syntax
12355,Merge pull request #4530 from volym3ad/update-periodic-stanza-documentation,Updated periodic stanza documentation
12356,Merge pull request #4535 from hashicorp/f-keep-docker-container-0.8.4,Option to prevent removal of container on exit
12357,Option to prevent removal of container on exit,
12358,Merge pull request #4518 from hashicorp/f-ui-deployment-deadline-everywhere,UI: Show deployment deadlines everywhere
12359,add #4462 to changelog,
12360,Merge pull request #4462 from omame/omame/cpu_cfs_period,Add support for specifying cpu_cfs_period in the Docker driver
12361,updated periodic stanza documentation,
12362,Merge pull request #4461 from hashicorp/f-e2e-framework,E2E: Initial Framework
12363,e2e/framework: code review fixes,
12364,Merge pull request #4523 from hashicorp/kikitux-patch-1,Update Azure notes for variables
12365,Update README.md,
12366,Update deployment test to reflect new progress-by column,
12367,Show deployment deadlines everywhere,
12368,Merge pull request #4493 from hashicorp/d-http-codes,Document HTTP response codes
12369,clarify 400,
12370,changelog,
12371,Merge pull request #4414 from hashicorp/b-stop-summary,Reset Queued allocs to zero when job stopped
12372,Add test for cpu_cfs_period,
12373,Merge pull request #4502 from hashicorp/allthingsclowd-patch-1,typo - duplication of the word can
12374,Merge pull request #4501 from msvbhat/nomad-contraints-docs,Fix client metadata link in Nomad constraints docs
12375,Merge pull request #4507 from hashicorp/b-ui-dist-bar-corners,UI: Fix the missing pixels issue with distribution-bar
12376,Merge pull request #4504 from hashicorp/f-ui-collapsable-job-summary,UI: Collapsable job summary visualization
12377,Test coverage for summary toggle,
12378,Make job alloc/children summary collapsable (and persist the choice in localStorage),
12379,Add an option to start expanded and an onToggle action to list-accordion,
12380,Compute the correct number of pixels to shave off of bar width,
12381,Create a single-bar example of distribution-bar in the styleguide,
12382,Fix a bug where the wrong index could be used when some bars had no value,
12383,Merge pull request #4497 from hashicorp/f-ui-page-objects,UI: Update acceptance tests to use PageObjects
12384,Merge pull request #4476 from hashicorp/b-dev-tls-reload,Fix reload issue for TLS certificates in dev mode
12385,typo - duplication of the word can,
12386,Fix client metadata link in Nomad constraints docs,Signed-off-by: M S Vishwanath Bhat link
12387,Consistently use PageObjects now that they all exist,
12388,Eslint cleanup,
12389,Use PageObject for task logs tests,
12390,Use PageObject for task detail tests,
12391,Use PageObject for namespace tests,
12392,Use PageObjects for application error tests,
12393,Use PageObject for allocation detail tests,
12394,scheduler: fix missing err assignment,
12395,Use PageObject for task group detail tests,
12396,e2e/framework: add framework.F context,
12397,e2e/framework: move testing.T access to a context framework.F which is scoped to each test,
12398,e2e/framework: strip flag prefix and use testify/require for embedded assertions,
12399,e2e/framework: don't require NOMAD_ADDR and instead rely on defaults,
12400,e2e/framework: remove 'step' naming and wording,
12401,e2e/framework: add missing errorf var,
12402,e2e/framework: cleanup provisioner and more docs,
12403,e2e/framework: additional documentation,
12404,e2e/framework: add consul and vault client detection,
12405,e2e/framework: add minimal godocs,
12406,e2e/framework: initial e2e framework implementation,
12407,Merge pull request #4490 from hashicorp/b-rkt-test-failure,Fix and speedup rkt tests
12408,Use PageObject for job versions tests,
12409,Use PageObject for job evaluations tests,
12410,Fix job subnav,
12411,Update breadcrumbs on job evaluations,
12412,Use PageObject for job deployments,
12413,Wrap a long line,
12414,Use PageObject for job definition tests,
12415,Adds missing test for evaluations tab,
12416,Use PageObjects for job detail tests,
12417,Use PageObject for jobs list tests,
12418,Merge pull request #4474 from hashicorp/b-4463,scheduler: fixed nil panic and clearer error handling
12419,Use PageObject for client detail tests,
12420,Use PageObject for clients list tests,
12421,Use PageObject for tokens test,
12422,Fix bad line-endings due to generator,
12423,Use PageObject for server-detail tests,
12424,Guard against URI encoding,
12425,Use PageObject for servers-list tests,
12426,Rename nodes-list-test to clients-list-test to reflect its new state,
12427,Move servers list tests to their own file,
12428,Add the ember-cli-page-object dependency,
12429,Merge pull request #4458 from hashicorp/f-ui-refactor-breadcrumbs,UI: Refactor breadcrumbs
12430,Merge pull request #4489 from hashicorp/f-ui-mirage-scenarios,UI: Codify common mirage scenarios and make it easy to switch between
12431,Codify common mirage scenarios and make it easy to switch between,
12432,Document HTTP response codes,
12433,bump sprockets,
12434,rkt: revert to redis 3.2 to favor stability,
12435,rkt: speed up tests,Disable networking when it's not needed and improve failure message for UserGroup test by including the full ps output on failure.
12436,rkt: skip retrieving network information when net=none,"Even when net=none we would attempt to retrieve network information from rkt which would spew useless log lines such as: module It would also delay tests for ~60s during the network information retry period. So skip this when net=none. It's unlikely anyone actually uses net=none outside of tests, so I doubt anyone will notice this change. Official docs: https://coreos.com/rkt/docs/latest/networking/overview.html#no-loopback-only-networking"
12437,tests: make alloc id consistent in helper,"It worked, but the old code used a different alloc id for the path than the actual alloc! Use the same alloc id everywhere to prevent confusing test output."
12438,rkt: fix failing TestRktDriver_UserGroup test,Started failing due to the docker redis image switching from Debian jessie to stretch: https://github.com/docker-library/redis/commit/53f86805506b103b503fd392e029929290fe5346#diff-acff46b161a3b7d6ed01ba79a032acc9 Switched from Debian based image to Alpine to get a working module command again (albeit busybox's stripped down implementation)
12439,Merge pull request #4473 from hashicorp/f-osext-vendor-cleanup,Remove osext library
12440,Merge pull request #4481 from hashicorp/f-ui-move-evals-to-tab,UI: Move evals to a tab
12441,Migrate and add test coverage for evaluations page,
12442,Remove old evaluations component tests,
12443,Remove evaluations from the job overview page,
12444,Adds sorting to evaluations,
12445,Initial evaluations page,
12446,Merge pull request #4468 from hashicorp/f-ui-styleguide-progress,UI: Fill out the styleguide
12447,Merge pull request #4480 from hashicorp/f-ui-ember-auto-import,UI: Use ember auto import instead of ember browserify
12448,Update all the awkward browserify imports to plain ol' es6 imports,
12449,Switch ember-browserify out for ember-auto-import,
12450,Integration tests for the breadcrumbs component,
12451,Unit tests for the breadcrumbs service,
12452,Move the global-header up the route hierarchy,"Now that breadcrumbs are a zero config component, the corresponding template can be moved up to parent routes."
12453,Update tests to match new test selectors,
12454,Remove all references to breadcrumbs outside of routes,
12455,Use the new breadcrumb pattern on tasks,
12456,Use the new breadcrumbs pattern for allocations,
12457,Apply new breadcrumbs pattern to task groups,
12458,Support namespaces in job breadcrumbs,
12459,Use the new breadcrumbs pattern in all job templates,
12460,Use the new breadcrumbs pattern on the clients loading page,
12461,Add breadcrumbs to jobs routes,
12462,Recompute breadcrumbs when a model changes but the current route does not,Example: parent job to child job navigation
12463,Support promise proxies as breadcrumbs,
12464,Apply new breadcrumbs pattern to servers and clients,
12465,New breadcrumb service and component for describing breadcrumbs in routes,Works by segmenting the currentRouteName from the router service and walking over each route in the current hierarchy to collect crumbs.
12466,Merge pull request #4475 from hashicorp/b-ui-wrong-ns,UI: Jobs requested with the wrong namespace under the right conditions
12467,Acceptance test for jobs from different namespaces on a single client,
12468,fix reload issue for tls certificates in dev mode,
12469,A test to assert the bug,
12470,Don't put namespace logic in the catch-all buildQuery method,
12471,Remove unused findAllocations method in both job and node,This was replaced with a relationship at some point.
12472,Remove unused job adapter method,
12473,Add an env var to toggle blockingQueries support,Mostly helpful when working with mirage
12474,Added changelog entry,
12475,vendor: remove unused github.com/kardianos/osext,
12476,scheduler: better error handling,
12477,Added docs on vault API v2 template syntax,
12478,Filter out styleguide components from production builds,
12479,Add ember-cli-funnel dependency,
12480,Styleguide entry for two-step button,
12481,Styleguide entry for alerts,
12482,Styleguide entries for accordion,
12483,Outline new components,
12484,Styleguide entry for Progress Bar,
12485,"Styleguide entry for Table, Configuration",
12486,Styleguide entry for tables,
12487,Styleguide entry for Search Box,
12488,Styleguide entry for Page Title,
12489,Styleguide entry for Page Tabs,
12490,Styleguide entry for metrics,
12491,Styleguide entry for Log Stream,
12492,Validate the value of cpu_cfs_period,
12493,scheduler: fix nil pointer exception,
12494,Add documentation for cpu_cfs_period,
12495,Remove an unnecessary conversion,
12496,Add support for specifying cpu_cfs_period in the Docker driver,
12497,Styleguide entry for the JSON Viewer,
12498,Styleguide entry for Inline definitions,
12499,Styleguide entry for header,
12500,Styleguide entry to the gutter menu,
12501,Styleguide entry for the timeline component,
12502,Dropdown entry to the styleguide,
12503,Styleguide entry for the diff-viewer,
12504,Merge pull request #4453 from hashicorp/f-tf-configs-0.8.4,"tf: Bump Vault, Consul, Nomad versions; update AWS AMI"
12505,"bump Vault, Consul, Nomad versions; update AWS AMI",
12506,Merge pull request #4444 from hashicorp/f-changelog-4441,Added info about #4441 to Changelog
12507,Added info about #4441 to Changelog,https://github.com/hashicorp/nomad/pull/4441
12508,Merge pull request #4441 from hashicorp/b-extend-wmiquery-timeout,Extend timeout based on user feedback
12509,Merge pull request #4442 from obitech/master,Fixed dead link to SWIM paper
12510,Merge pull request #1 from obitech/obitech-website-patch-1,Fixed dead link to SWIM paper
12511,Fixed dead link to SWIM paper,
12512,Changelog,
12513,Merge pull request #4440 from hashicorp/f-docs-telemetry-parent-labels,Improve telemetry docs
12514,Merge pull request #4392 from burdandrei/telemetry-parametrized-jobs,Parametrized/periodic jobs per child tagged metric emmision
12515,Merge pull request #3882 from burdandrei/telemetry-add-node-class-tag,Added node class to tagged metrics
12516,Extend timeout based on user feedback,Closes https://github.com/hashicorp/nomad/issues/4439.
12517,Docs about node_class label,
12518,add docs for new labels,
12519,Merge pull request #4432 from burdandrei/hardware-requerements-docs,High load clusters IO requirements
12520,Parametrized/periodic jobs per child tagged metric emmision,
12521,High load clusters IO requeremets,
12522,Update changelog,
12523,Merge pull request #4390 from jrasell/f_gh_4381,Add 'nomad.advertise.address' to client meta via NomadFingerPrint
12524,Merge pull request #4434 from gkrizek/gkrizek/fix-getting-started,Formatting and Typo fixes for Getting Started pages
12525,Merge pull request #4431 from alvin-huang/fix_vendor,bump go-discover to fix Azure provider module file
12526,Formatting and Typo fixes for Getting Started pages,
12527,bump go-discover to fix Azure provider module file,
12528,Merge pull request #4433 from hashicorp/b-fix-removepeer-docs,Fix remove peer docs
12529,Fix remove peer docs,
12530,Merge pull request #4425 from hashicorp/d-warn-impossible-constraint,Added warning about impossible constraints
12531,Merge branch 'master' into f_gh_4381,
12532,Merge pull request #4418 from margueritepd/restart-stanza-docs-update,Clarify defaults and behaviour of mode = fail in restart stanza in documentation
12533,Remove extra linefeed,
12534,Added warning about impossible constraints,This was as a resolution to https://github.com/hashicorp/nomad/issues/4424
12535,Merge pull request #4416 from hashicorp/b-ui-flaky-alloc-detail-test,UI: Actually ensure that the allocation relies on an unhealthy driver
12536,Merge pull request #4417 from dirkkok/patch-1,Fix typo in module help text
12537,Clarify defaults and behaviour of mode = fail in restart stanza,
12538,Merge pull request #4415 from hashicorp/b-ui-clean-up-ed-code,UI: Clean up some ember data code
12539,Fix typo in module help text,"The command module doesn't accept the module option, this should be module."
12540,Merge pull request #4409 from hashicorp/r-client-packages,Refactor client packages
12541,Actually ensure that the allocation relies on an unhealthy driver,
12542,lint,
12543,Fix test using a lot of memory,
12544,Merge pull request #4410 from hashicorp/b-ui-update-vagrant,UI: update vagrant
12545,Tests only use testlog package logger,
12546,Remove hacky code that worked around an Ember Data bug,"The bug is fixed in 2.18, so this can be written in the normal less surprising way."
12547,Dasherize task names in factory,This is to avoid test failures due to url encoding mismatches
12548,Reset Queued allocs to zero when job stopped,"When a job is stopped but not purged, we should set the Queued count to be zero."
12549,Merge pull request #4399 from hashicorp/r-reload-refactor,Refactor logic for dynamic reloading
12550,Merge pull request #4412 from ogham/patch-1,Close unclosed backtick in docs
12551,fixup! more specific test assertion,
12552,Close unclosed backtick in docs,
12553,test fixes,
12554,Add chrome to the ui vagrant machine,It's used for running acceptance tests
12555,Fix gc tests + parallel destroy + small test fixes,
12556,Refactor - wip,
12557,Merge pull request #4407 from hashicorp/b-vault,Fix Vault template test for v2 secret backend
12558,Fix vault template test,
12559,Vagrant,
12560,bump travis version,
12561,Remove phantomjs call from the makefile,
12562,"Update nvm, node, and yarn in vagrant",
12563,Merge pull request #4406 from hashicorp/f-ui-vagrant,Seperate ui vagrant
12564,Seperate ui vagrant,
12565,Merge pull request #4404 from hashicorp/f-move-autopilot-guide,Move autopilot to top level and fix links
12566,make link relative,
12567,Move autopilot to top level and fix links,
12568,Fix broken link,
12569,website bump,
12570,remove structs + bump version,
12571,Release v0.8.4,
12572,bump version + generated files,
12573,Merge pull request #4403 from hashicorp/b-fix-dispatched-optional-meta,Fix dispatched optional meta correctly
12574,Merge pull request #4400 from hashicorp/b-fix-powershell-shutdown,executor: fix Windows blocking on pipe close
12575,nomad: use require pkg for tests,
12576,nomad: code review comments,
12577,nomad/structs: fix job diff test,
12578,client/driver/env: fix optional meta test,
12579,client/driver/env: use 'job.Dispatch' to trigger optional meta logic,
12580,"Revert ""Revert ""client/driver/env: interpolate empty optional meta params as empty strings""""",This reverts commit c17e0fc9dc5fd288935ab2b68fb441b4d25ac189.
12581,nomad: add 'Dispatch' field to Job,New -bash: Dispatch: command not found field is used to denote if the Job is a child dispatched job of a parameterized job.
12582,executor: fix log line formatting,
12583,executor: fix Windows blocking on pipe close,Sending the Ctrl-Break signal to PowerShell <6 causes it to drop into debug mode. Closing its output pipe at that point will block indefinitely and prevent the process from being killed by Nomad. See the upstream powershell issue for details: https://github.com/PowerShell/PowerShell/issues/4254
12584,add tests and improve should reload logic,
12585,add client logic to determine whether TLS RPC connections should reload,
12586,move logic to determine whether to reload tls configuration to tlsutil helper,
12587,remove logic to reload RPC connections from agent,
12588,Add 'nomad.advertise.address' to client meta via NomadFingerPrint,This change removes the addition of the advertise address to the exported task env vars and instead moves this work into the NomadFingerprint.Fingerprint which adds this value to the client attrs. This can then be used within a Nomad job like ${attr.nomad.advertise.address}.
12589,"Revert ""client/driver/env: interpolate empty optional meta params as empty strings""",This reverts commit 84926f759a63a90be7bbcf0fad78deb3f02af23d.
12590,Final UI-related changelog updates for 0.8.4,
12591,Merge pull request #4394 from hashicorp/b-docker-progress-neg-estimate,client/driver: drop docker pull progress estimate if its < 0
12592,Merge pull request #4393 from hashicorp/b-ui-fix-task-row-primary-text,UI: Style tasks on the alloc index page like other tables of resources
12593,test less of the monitor on travis,
12594,docs for tls defaults,
12595,Merge pull request #4396 from hashicorp/f-tls-ciphers-12,Enable more tls 1.2 ciphers
12596,move log line,
12597,Merge pull request #4395 from hashicorp/b-vault-second,Fix for dynamically reloading vault
12598,enable more tls 1.2 ciphers,
12599,fixup! comment and move to always log server reload operation,
12600,changelog,
12601,fix test that now requires different config for test assertions,
12602,move logic for testing equality for vault config,
12603,fix for dynamically reloading vault,
12604,client/driver: drop docker pull progress estimate if its < 0,
12605,Style tasks on the alloc index page like other tables of things,
12606,Merge pull request #4388 from hashicorp/f-ui-show-deployment-deadline,UI: Show deployment deadline for each task group in the running deployment
12607,Add the local clients advertise address to interpolation env vars,This commit adds the Nomad local client advertise address in the form host:port to the environment variables passed to each task.
12608,Merge pull request #4380 from hashicorp/b-drain-monitor,Monitoring non-draining node exits
12609,Show the progress deadline for task groups in a running deployment,
12610,Add new property to factory,
12611,Merge pull request #4387 from hashicorp/b-ui-task-row-link,UI: Make task rows clickable.
12612,Merge pull request #4384 from hashicorp/b-global-log-flags,agent: global logger should use the same flags
12613,code review,
12614,Make task rows clickable.,Right now they are the only tables where the entire row isn't a click-target to drill into the detail page.
12615,Merge pull request #4382 from hashicorp/b-init,Progress deadline included in nomad init
12616,indentation,
12617,Merge pull request #4385 from hashicorp/b-node-status-drain,Handle force draining
12618,Handle force draining,
12619,agent: global logger should use the same flags,Prior to this change logs from the global logger only used seconds: module After this change they properly use the microseconds flag: module They still lack a log level unfortunately.
12620,changelog update,
12621,Merge pull request #4383 from hashicorp/b-node-drain-empty-event,nomad: handle edge case where node drain event shouldn't be emitted
12622,nomad: add error check in test,
12623,nomad: handle edge case where node drain event shouldn't be emitted,
12624,progress deadline init,
12625,Merge pull request #4379 from hashicorp/b-consul-deregister,Fix bug with determining when agent is a client
12626,Monitoring non-draining node exits,
12627,Fix bug with determining when agent is a client,This fixes a bug introduced in commit e27caadca6 that sets a boolean flag when the agent is a client. It incorrectly checked state before initializing the client. This leads to Nomad clients not deregistering any services registered in Consul after allocs are destroyed
12628,Merge pull request #4378 from hashicorp/e2e-progress-deadline,Add more end to end tests for progress deadline and fix flaky test
12629,Update CHANGELOG,
12630,Merge pull request #4377 from hashicorp/b-create-deployment-job-index,Fix reconciler bug with deployment not being created
12631,make test create index clearer,
12632,Add more end to end tests for progress deadline and fix flaky test,
12633,Fix reconciler bug with deployment not being created if job create index is different,This fixes an issue where if a job is purged and resubmitted Nomad does not create a new deployment. Adds unit test that failed before this fix
12634,Merge pull request #4369 from hashicorp/b-ui-use-network-ip,UI: Use the network ip for the task address instead of the node ip
12635,Merge pull request #4375 from listrophy/patch-3,README: newer Vault init command
12636,Merge pull request #4374 from listrophy/patch-2,README: use newer command
12637,README: newer Vault init command,Got a warning message: module
12638,README: use newer command,Got: module
12639,Merge pull request #4373 from listrophy/patch-1,Update README.md
12640,Update README.md,"git-clone'ing doesn't automatically jump you into the dir, so this doc update fixes a missing step"
12641,Remove test for removed behavior,
12642,Merge pull request #4346 from hashicorp/d-10k-nodes,"Update ""Nomad vs. Other Software"" navigation order and reflect 10k node cluster sizes."
12643,Use the network ip as the task address instead of the node ip,
12644,Changelog,
12645,Reorder Other Software alphabetically,
12646,Merge pull request #4185 from jesusvazquez/add-counter-metric-for-oom-killer-events,Add driver.docker counter metric for OOM Killer events
12647,remove generated structs,
12648,Release v0.8.4-rc1,
12649,Merge pull request #4366 from hashicorp/b-exec,Disable Exec on non-linux platforms
12650,fix test message,
12651,changelog,
12652,Disable Exec on non-linux platforms,This PR disables exec on non-linux platforms
12653,bump version/lint/generated files,
12654,changelog,
12655,spelling,
12656,Merge pull request #4365 from hashicorp/b-consul-server-resync,Fix consul server resync when server and client point to the same Consul agent
12657,Fix tests and move isClient to constructor,
12658,dev files,
12659,Fix unnecessary deregistration in consul sync,"This commit fixes an issue where if a nomad client and server shared the same consul instance, the server would deregister any services and checks registered by clients for running tasks."
12660,changelog,
12661,Merge pull request #4350 from hashicorp/b-raw-exec-cgroups,Raw exec can use cgroups to manage PIDs
12662,wait for result,
12663,changelog,
12664,Merge pull request #4277 from hashicorp/f-retry-join-clients,Add go-discover support to Nomad clients
12665,retry-join flag docs,
12666,Comments,
12667,Add test and docs,
12668,Use more appropriate name than cgroup,
12669,Only use freezer/devices when in the basic cgroup only,
12670,Use cgroup when possible,
12671,Merge pull request #4359 from hashicorp/b-tests,test fixes
12672,Fix TestDockerDriver_StartNVersions,
12673,Remove debug logging,
12674,Fix node drain monitor,
12675,spelling,
12676,Force close stdout/stderr after grace,This commit changes the force closing of the stdout/stderr file descriptor from closing immediately to being closed after a grace period. This allows the created process to close its own file and allows copying of the data.
12677,UI changelog entries for 0.8.4,
12678,Actually disable the schedulers,
12679,Fix test setup for FSMSnapshotRestore_Deployments to use a valid job that exists,
12680,test build,
12681,Disable schedulers for TestHTTP_AllocSnapshot_Atomic,
12682,Log more info for TestExecutor_IsolationAndConstraints,
12683,changelog,
12684,Merge pull request #4341 from hashicorp/f-docker-pids,Support Docker Pids Limit
12685,Merge pull request #4354 from hashicorp/b-job-modify,Deployment adds JobSpecModifyIndex
12686,code review fixes,
12687,Fix website,
12688,"Improve validation/defaulting, handle start-join",This commit: * Improves how we combine the old retry-* fields and the new stanza and how it is validated * Handles the new stanza setting start_join * Fixes integration test to not bind to the standard port and instead be randomized. * Simplifies parsing of the old retry_interval * Fixes the errors from retry join being masked * Flags get parsed into new server_join stanza
12689,validation errors,
12690,indentation,
12691,ensure default value of 30s is set for server_join stanza,
12692,ignore default values for retry interval,add additional validation case
12693,add stronger protections for nil pointers in server join merge,
12694,update config parse test,documentation fixes
12695,RetryInterval should be a time.Duration,
12696,fix doc links and other improvements,
12697,links to server_join docs,
12698,update documentation,
12699,set retryInterval and other code feedback,
12700,add to sidebar navidation,clean up styling of new pages
12701,cloud auto join documentation,
12702,add further configuration validation for server_join,
12703,update documentation for server_join,
12704,update server_join naming and improve logging,
12705,add documentation,
12706,add server join info to server and client,
12707,Update CHANGELOG.md,
12708,Merge pull request #4357 from hashicorp/b-compat-drain-eligible,Set node eligibility to true when old client calls disable
12709,Use constant in test,
12710,Add unit test to verify compatibility code for node drains,
12711,Set node eligibility to true when old client calls disable,
12712,Merge pull request #4353 from hashicorp/f-ui-node-drain,UI: Node drain and eligibility
12713,Account for the 0 case in format-duration,
12714,Update CHANGELOG,
12715,Merge pull request #4355 from hashicorp/b-test-fixes,test fixes
12716,Merge pull request #4349 from hashicorp/b-reconcile-raft-upgrade,Remove an unnecessary check in nomad member reconciliation
12717,Fix failing test TestClientStatusRequest,
12718,Fix failing test TestHTTP_AllocAllGC,
12719,changelog,
12720,Merge pull request #4329 from hashicorp/b-leaked-deployments,Clean up leaked deployments on restoration
12721,Merge pull request #4342 from gkrizek/gkrizek/404-update,Update 404 page to match other HashiCorp sites
12722,docs,
12723,test pid limit,
12724,Merge pull request #4352 from hashicorp/b-update-drain-no-drainstrategy,fix bug with node eligibility staying disabled even after drain is disabled
12725,Add section on peers.json new format and upgrading to raft protocol 3,
12726,Merge pull request #4335 from hashicorp/b-ui-safari-log-streaming,UI: Use polling instead of streaming for following logs in Safari
12727,Deployment adds JobSpecModifyIndex,Deployment tracks the Job.JobModifyIndex so that PUTS against /v1/jobs can be more easily coorelated with the created deployment. Fixes https://github.com/hashicorp/nomad/issues/4301
12728,New traits for node states,
12729,Acceptance testing for node drain information,
12730,Display node drain strategy information on the client detail page,
12731,Duration formatting utility,"The cloest Moment.js has is ""homanize"" which isn't precise enough."
12732,Color-code node drain and eligibility in the full client list,This makes it easier to scan for interesting nodes
12733,Add drain and eligibility to the client details strip,
12734,Add ineligibility to the status light,
12735,Update the clients list table to include drain and eligibility,This makes it match the CLI node status output
12736,Data modeling for node drain and scheduling eligibility,
12737,better test comment,
12738,fix bug where disabling a node drain when there is no drain strategy set causes scheduling eligibility to stay ineligible,
12739,Merge pull request #4340 from hashicorp/f-tls-parse-certs,Parse CA certificate to catch more specific errors
12740,Merge branch 'master' into f-tls-parse-certs,
12741,Merge pull request #4338 from hashicorp/tls_prefer_server_cipher_suites,Add support for tls PreferServerCipherSuites
12742,Fix docs for defaults,
12743,Remove checks in member reconcile that was causing servers in protocol 3 to not change their ID in raft forever,
12744,changelog,
12745,fixup! clearify docs and group similar TLS fields,
12746,refactor to remove duplication,
12747,changelog,
12748,handle parsing multiple certificates in a pem file,
12749,remove unnecessary type conversation,
12750,Merge pull request #4336 from hashicorp/b-blocking,Force closing of pipe to child process
12751,Update Kubernetes vs. page to reflect 10k node cluster sizes. Re-order vs. page navigation by relevance.,
12752,Update 404 page,
12753,Support Docker Pids Limit,
12754,parse CA certificate to catch more specific errors,
12755,Merge pull request #4319 from hashicorp/b-ui-errant-acl-error,UI: XHR keys need to include the method as well
12756,Merge pull request #4339 from hashicorp/ui-change-stop-button-style,UI: Switch the stop button style to look mildly dangerous
12757,Merge pull request #4294 from hashicorp/f-ui-driver-health-checking,UI: Driver health checking
12758,Switch the stop button to be mildly dangerous,
12759,Tag node events with the driver when available,
12760,New badge modifiers,
12761,add support for tls PreferServerCipherSuites,add further tests for tls configuration
12762,Merge pull request #4325 from hashicorp/b-ui-placed-canaries,UI: Remodel task-group-deployment-summary to properly use PlacedCanaries
12763,Display driver attributes without the superfluous driver and driver name section,
12764,Acceptance tests for node driver and node events,
12765,Disable visibility behaviors when testing,It results in surprise behaviors.
12766,NodeEvent and NodeDriver modeling in Mirage,
12767,Add driver warning to allocation rows,
12768,Fix narrow table column padding,
12769,Show a warning on task rows on the alloc detail page,The warning shows up when the task's driver is unhealthy on the node the task is running on.
12770,Spread the driver health love throughout job models,
12771,Add driver status accordion section to the client detail page,
12772,New accordion component,Follows the same style as the table and pagination components.
12773,Show a warning icon on client node rows that have unhealthy drivers,
12774,Add a node events section to the node detail page,
12775,Show driver summary on the client detail page,
12776,Data modeling for node events and node drivers,
12777,Remove stale dev code,This was used to get around direct requests to clients. The UI will now automatically route through the server.
12778,Refactor the job xhrKey to use super,
12779,Add a test to assert that canceling GETs can't instead cancel DELETEs,
12780,XHR keys need to include the method as well,The URL alone doesn't guarantee uniqueness
12781,The stream logger should not be supported in Safari,Not until the bugs around https are worked out.
12782,The poll logger needs to handle empty frames.,
12783,Merge pull request #4331 from capone212/b-3595-fix-heartbeat,Fixed #3595
12784,Merge pull request #4308 from rkettelerij/patch-1,[Docs] Improve docs around Consul ACL token
12785,cleanup,
12786,Force closing of pipe to child process,
12787,Incorporated review comments,
12788,Merge pull request #4328 from hashicorp/r-single-tls-config-constructor,Refactor to prefer using NewTLSConfiguration constructor
12789,Merge pull request #4321 from hashicorp/f-network-info,Display bind/advertise addresses on agent startup
12790,Merge pull request #4333 from hashicorp/b-deploy-typo,Fixed typo in deployment help text
12791,Fixed typo in deployment help text,
12792,Merge pull request #4260 from hashicorp/f-cli-node-drain-monitor,command: add '-monitor' flag to node drain
12793,Fixed #3595  (https://github.com/hashicorp/nomad/issues/3595),Stopping heartbeat timer before remove
12794,command: fix node drain monitor case,
12795,api: emit different monitor message if node's drain strategy is never set,
12796,command: add docs for node drain -monitor flag,
12797,command: use 0 as index for monitor request,
12798,command: add '-monitor' flag to node drain,
12799,Clean up leaked deployments on restoration,This PR cancels deployments that are active but do not have a job associated with them. This is a broken invariant that causes issues in the deployment watcher since it will not track them. Thus they are objects that can't be operated on or cleaned up. Fixes https://github.com/hashicorp/nomad/issues/4286
12800,refactor NewTLSConfiguration to pass in verifyIncoming/verifyOutgoing,add missing fields to TLS merge method
12801,Merge pull request #4326 from hashicorp/b-canary-tags,Use Tags when CanaryTags isn't specified
12802,Merge pull request #4327 from hashicorp/d-drain-typo,fix typo: 'ode' to 'node'.
12803,fix typo: 'ode' to 'node'.,
12804,Remodel task-group-deployment-summary to property use PlacedCanaries,
12805,Use Tags when CanaryTags isn't specified,This PR fixes a bug where we weren't defaulting to module when module was empty and adds documentation.
12806,Display bind/advertise addresses on agent startup,Sample outputs from demo/vagrant/(server/client1).hcl and module mode Server: ``` ==> Nomad agent configuration: module ``` Client: ``` ==> Nomad agent configuration: module ``` Dev: ``` ==> Nomad agent configuration: module ```
12807,Merge pull request #4317 from hashicorp/b-no-path,Fix RPC tunneling when running both client/server
12808,changelog,
12809,safety guard,
12810,Unit test for dev agent,
12811,Do not bypass normal RPC codepath when running both client and server at once,
12812,Fix noisy log,
12813,changelog,
12814,Merge pull request #4292 from hashicorp/f-heartbeat,Emit heartbeat and node registration events
12815,Register events,
12816,node heartbeat missed event,
12817,Merge pull request #4291 from hashicorp/f-eligibility,Emit events when node eligibility is set
12818,update error message,
12819,Emit events based on eligibility,
12820,Merge pull request #4284 from hashicorp/f-drain-event,Emit Node Events for draining
12821,update error message,
12822,Merge pull request #4316 from hashicorp/doc-fix-nomad-alloc-logs,change allocation ID used with nomad alloc logs command
12823,Update CHANGELOG.md,
12824,Merge pull request #4303 from hashicorp/b-docker-client-nil-panic,Add nil check before setting timeout on docker client
12825,Update CHANGELOG.md,
12826,Merge pull request #4313 from hashicorp/b-alloc-gc-desiredstate,Check allocation's desired state in GC eligibility logic
12827,Update CHANGELOG.md,
12828,Merge pull request #4274 from hashicorp/f-force-rescheduling,Add CLI and API support for forcing rescheduling of failed allocs
12829,remove extra return,
12830,Merge pull request #4315 from hashicorp/f-upgrade-to-go-1.10.2,Upgrade Nomad to Go 1.10.2
12831,Update jobs.html.md,
12832,Merge pull request #4273 from hashicorp/f-add-autocomplete-to-missing-commands,Add autocomplete to missing commands
12833,Fix docs and method documentation in API,
12834,upgrade nomad to 1.10.2,
12835,Merge pull request #4314 from Omar-Khawaja/allocation-id-typo,changing allocation ID used with nomad alloc status command
12836,changing allocation ID used with nomad alloc status command,
12837,"Add job, task, taskgroup to open method",
12838,Remove allocID from dockerhandle struct,
12839,"Rename labels job, task_group and task",
12840,Remove allocid label from driver.docker.oom counter metric,
12841,Check allocation's desired state in GC eligibility logic in core scheduler,
12842,Merge pull request #4281 from hashicorp/f-leave-on-terminate-docs,Doc updates to clarify leave_on_terminate
12843,Changelog,
12844,Merge pull request #4282 from hashicorp/f-rotator,Avoid splitting log line across two files
12845,Merge pull request #4288 from apenney/add-warning-to-docs,Add a warning not to share consul nodes
12846,Changelog,
12847,Merge pull request #4298 from justenwalker/docker-driver-digest-tags,driver/docker: pull image with digest
12848,Merge pull request #4305 from insanejudge/systemd-killmode-patch-1,set killmode/killsignal in systemd example
12849,Merge pull request #4312 from lcnja/master,Fix a typo
12850,Fix a typo,
12851,Merge pull request #4311 from aymericbeaumet/patch-1,docs: fix typo in json documentation
12852,docs: fix typo in json documentation,
12853,Improve docs around Consul ACL token,If I'm not mistaken the Consul Agent default token is an anonymous token which doesn't allow writes while a Nomad server needs to write to Consul.
12854,Merge remote-tracking branch 'origin' into systemd-killmode-patch-1,
12855,client/driver: use correct repo address when using docker-credential helper (#4266),
12856,driver/docker: add test for dockerImageRef,
12857,driver/docker: fix up TestParseDockerImage,
12858,driver/docker: fix TestDockerDriver_ForcePull_RepoDigest,
12859,client/driver: gaurd authHelper test from running on windows,
12860,driver/docker: cleanup parseDockerImage,
12861,driver/docker: pull image with digest,"GH #4290 Add digest support to the docker driver image config. This commit factors out some common code to print the repo:tag (dockerImageRef) for events/logs as well as parsing the image to retreive the repo,tag (parseDockerImage) so that the results are consistent/sane for both repo:tag and repo@sha256:... references. When pulling an image with a digest, the tag is blank and the repo contains the digest. See: https://github.com/fsouza/go-dockerclient/blob/master/image_test.go#L471"
12862,Merge pull request #4293 from maihde/patch-1,Update minimum Go version.
12863,Update minimum Go version.,In commit 758e1cb7 the module API was used; this isn't available until Go 1.10+
12864,Add nil check before setting timeout on docker client,
12865,Add autocomplete where missing,
12866,change wording around autopilot,
12867,Add new method EvaluateWithOptions to avoid breaking go API client,
12868,Add a warning not to share consul nodes.,
12869,more review feedback,
12870,Add new line test,
12871,Merge pull request #4269 from hashicorp/f-tls-remove-weak-standards,Configurable TLS cipher suites and versions; disallow weak ciphers
12872,add changelog,
12873,Merge pull request #4279 from hashicorp/f-short-init,Add job init '-short' command docs to website
12874,command: add autocomplete for init -short flag,
12875,Merge pull request #4283 from hashicorp/b-fix-vet-warning,Added deferred cancel to prevent context leaks
12876,Drain complete,
12877,Add node event when draining is set/removed/updated,
12878,Plumb event via FSM,
12879,Merge pull request #4254 from hashicorp/f-ui-ss-restart-tracking,UI: Server-side reschedule tracking
12880,Added deferred cancel to prevent context leaks,
12881,Avoid splitting log line across two files,We attempt to avoid splitting a log line between two files by detecting if we are near the file size limit and scanning for new lines and only flushing those. BenchmarkRotator/1KB-8            300000              5613 ns/op BenchmarkRotator/2KB-8            200000              8384 ns/op BenchmarkRotator/4KB-8            100000             14604 ns/op BenchmarkRotator/8KB-8             50000             25002 ns/op BenchmarkRotator/16KB-8            30000             47572 ns/op BenchmarkRotator/32KB-8            20000             92080 ns/op BenchmarkRotator/64KB-8            10000            165883 ns/op BenchmarkRotator/128KB-8            5000            294405 ns/op BenchmarkRotator/256KB-8            2000            572374 ns/op
12882,Benchmark for rotator,BenchmarkRotator/1KB-8            200000              5572 ns/op BenchmarkRotator/2KB-8            200000              8338 ns/op BenchmarkRotator/4KB-8            100000             14246 ns/op BenchmarkRotator/8KB-8             50000             25279 ns/op BenchmarkRotator/16KB-8            30000             48602 ns/op BenchmarkRotator/32KB-8            20000             92159 ns/op BenchmarkRotator/64KB-8            10000            154766 ns/op BenchmarkRotator/128KB-8            5000            296872 ns/op BenchmarkRotator/256KB-8            3000            551793 ns/op
12883,unit test for job eval should detach,
12884,Doc updates to clarify leave_on_terminate,
12885,"Add support for monitoring evals, and -detach/-verbose support",
12886,Code review feedback,
12887,Update CHANGELOG,
12888,Merge pull request #4278 from hashicorp/f-serf-update,Update serf to pick up graceful leave fix
12889,command: remove ephemeral disk from short init jobspec,
12890,website: add job init '-short' option,
12891,Update serf to pick up graceful leave fix,
12892,log error if unable to create TLS configuration,
12893,client/driver: parse repo instead of attempting to pull repo info,
12894,client/driver: add test for docker auth helper,
12895,changelog: ref PR instead of individual issues,
12896,naming of constants,
12897,Merge pull request #4268 from hashicorp/b-extend-win-cpu-fingerprint-timeout,Override 3 sec. WMI timeout in gopsutil
12898,Docs for job eval CLI,
12899,add support for configurable TLS minimum version,
12900,Merge pull request #4272 from jkohrman/master,Add link to privacy policy in website footer
12901,Documentation for evaluate endpoint,
12902,Merge pull request #4271 from hashicorp/f-health-status-node-list,Add driver health information to node list stub
12903,allow configurable cipher suites,disallow 3DES and RC4 ciphers add documentation for tls_cipher_suites
12904,fix test comment,
12905,Merge branch 'master' into b-extend-win-cpu-fingerprint-timeout,
12906,"Added CLI for evaluating job given ID, and modified client API for evaluate to take a request payload",
12907,Keep stream and logs in sync for detecting closed pipe,
12908,Add link to privacy policy in website footer,Added link to updated privacy policy in footer of module for the OSS website.
12909,Addressed review comments,
12910,Merge pull request #4265 from hashicorp/b-fix-cpu-fingerprinter-error-msg,Fix the CPU Information error message
12911,Add unit tests for forced rescheduling,
12912,Add driver health information to node list stub,
12913,Fix logic inversion in force rescheduling,
12914,Work in progress - force rescheduling of failed allocs,
12915,update CHANGELOG,
12916,changelog,
12917,Merge pull request #4259 from hashicorp/f-deployment-improvements,
12918,Override 3 sec. WMI timeout in gopsutil,The default timeout is too short for some overburdened or resource constrained machines to complete the WMI query before the context deadline expires.  This causes them to be unable to fingerprint the CPU properly.
12919,client/driver: use correct repo address when using docker-credential helper,
12920,Fix the CPU Information error message,"The new version of gopsutil introduces a 3 second timeout that could come up as an error here; however, we are outputting the wrong variable and eating the error."
12921,Merge pull request #4179 from hashicorp/f-retry-join,Cloud Auto Join
12922,Merge pull request #4262 from hashicorp/b-3720-optional-meta,client/driver/env: interpolate empty optional meta params as empty strings
12923,client/driver/env: interpolate empty optional meta params as empty strings,
12924,only write error log line on error,
12925,remove log line for empty addresses which could confuse on initalization,
12926,retry until all options are exhausted,
12927,ensure provider= is always the string prefix,
12928,update test for more realistic IP address from go-discover,
12929,remove unused dependencies,
12930,update go-discover,
12931,vendor go-discover,
12932,comments and other fixups,
12933,add go-discover,
12934,refactor to retryJoiner interface,
12935,Merge pull request #4261 from hashicorp/f-docker-progress-detection,client/driver: remove unused const 'dockerPullProgressEmitInterval'
12936,client/driver: remove unused const 'dockerPullProgressEmitInterval',
12937,newlines in test,
12938,Fix deadlock in deadline timer logic when progress deadline is passed and the deployment is updated.,
12939,Fix test set up to set ModifyTime  for alloc,
12940,"Set modify time for allocs in unit test, and define current time in one spot",
12941,Fix panic in deployment watcher when deployment is not in the state store due to a gc,
12942,Fix typo,
12943,Update end to end tests to use shorter progress deadlines,
12944,Fix the initial progress deadline calculation when the alloc is inplace updated to be part of a new deployment,
12945,More e2e test fixes after changes to rescheduling during deployments,
12946,Some test fixes to e2e rescheduling tests,
12947,consul: change hashed canary bytes,
12948,Add test,
12949,Make sure that task group has a deployment state before using it,
12950,clarify comment,
12951,Allow healthy canary deployment to skip progress deadline,
12952,Reschedule when we have canaries properly,
12953,consul: remove services with/without canary tags,Guard against Canary being set to false at the same time as an allocation is being stopped: this could cause RemoveTask to be called with the wrong Canary value and leaking a service. Deleting both Canary values is the safest route.
12954,consul: support canary tags for services,Also refactor Consul ServiceClient to take a struct instead of a massive set of arguments. Meant updating a lot of code but it should be far easier to extend in the future as you will only need to update a single struct instead of every single call site. Adds an e2e test for canary tags.
12955,typo: transistion -> transition,
12956,canary reschedule test,
12957,Test for rescheduling when there are canaries,
12958,Allow canary count greater than desired,
12959,Fix tests,
12960,vendor testify,
12961,remove unnessary merge of DeploymentStatus.Timestamp,
12962,Ensure canaries tags are interpolated,
12963,Canary tags structs,
12964,"Mark canaries on creation, and unmark on promotion",
12965,better comments and remove commented code,
12966,Fix deadlock in deployment watcher when deployment starts with no allocations and eventually has failed allocations,
12967,Only use DesiredTransition.Reschedule in reconciler when its an active deployment,
12968,CLI,
12969,change default to 10m and docs,
12970,Fix not enqueuing eval,
12971,Fix typos,
12972,Add test where deployment is marked as complete when done even with failed allocs,
12973,Test fixes,
12974,fix reconcile tests,
12975,Only reschedule allowed deployment allocs,
12976,Set Reschedule from deployment watcher,
12977,Use UpdateAllocDesiredTransistion instead of UpsertEval but no transistions yet,
12978,rework where time gets set,
12979,small review feedback fixes,
12980,Small test fix,
12981,Drop file,
12982,add latest eval back,
12983,Pass through timestamp,
12984,Handle progressed deployments and tests,
12985,Deployment watcher based on deployment having progress deadline,
12986,Progress deadline in deployment state,
12987,Fix tests,
12988,Initial implementation,
12989,Merge pull request #4192 from hashicorp/f-docker-progress-detection,client/driver: docker progress detection and monitoring
12990,changelog: add changelog entry for docker image pull progress monitoring,
12991,client/driver: add waiting layer status count to pull progress status msg,
12992,client/driver: add seperate handler for emitting pull progress,
12993,client/driver: remove pull timeout due to race condition that can lead to unexpected timeouts,"If two jobs are pulling the same image simultaneously, which ever starts the pull first will set the pull timeout. This can lead to a poor UX where the first job requested a short timeout while the second job requested a longer timeout causing the pull to potentially timeout much sooner than expected by the second job."
12994,client/driver: do accounting on layer pull progress,
12995,client/driver: emit progress to all allocs pulling same image,
12996,client/driver: add image pull progress monitoring,
12997,Merge pull request #4201 from hashicorp/f-ui-fuzzy-job-search,UI: fuzzy and tokenized job search
12998,Clean up computed property by inverting early return,
12999,Integration tests for the various reschedule events timeline permutations,
13000,Turn reschedule events timeline into a component for isolated testing,
13001,Acceptance tests for allocation rescheduling,
13002,Mirage modeling for rescheduling,
13003,Reschedule events timeline for the alloc detail page,
13004,Add WaitUntil and followUpEvaluation,
13005,New reschedule-event-row component,Intended to be used in a timeline view.
13006,Add rescheduled icon to allocation row,
13007,Refactor allocation-row,
13008,Add follow up eval relationship to allocation,
13009,Add shortId properties to reschedule events model,
13010,New is-narrow modifier for slim table cells,"Useful for actions, icons, and checkboxes"
13011,New is-hollow modifer for boxed-sections,An open layout that makes its contents feel less cramped. Useful for large visualizations.
13012,New is-faded modifier for icons,For when the icon should be less prominent than the content around it
13013,Modeling alloc reschedule events,
13014,New icon for showing history/paper trail,layers.svg from Open Iconic
13015,Merge pull request #4251 from hashicorp/f-grpc-checks,Support Consul gRPC Health Checks
13016,Merge pull request #4234 from hashicorp/b-4159,Fix race in StreamFramer and truncation in api/AllocFS.Logs
13017,docs: try to make grpc explanation less confusing,
13018,tests: fix grpc fields in task diff,
13019,docs: document grpc health check support,
13020,consul: make grpc checks more like http checks,
13021,vendor: update consul for grpc,
13022,consul: initial grpc implementation,Needs to be more like http.
13023,Merge pull request #4247 from hashicorp/f-expand-drain-info,Expand drain info for node status command
13024,cli: expand drain info for node status,
13025,Update CHANGELOG.md,
13026,Update CHANGELOG,
13027,Merge pull request #4250 from hashicorp/b-set-modifyindex-next-alloc,Update ModifyIndex of alloc when setting NextAllocation value
13028,Update counter driver.docker.oom labels,
13029,"Initialize dockerhandle with jobname, taskgroupname, taskname and allocid",
13030,"Add Job, taskgroupname, taskname, and allocid to the DockerHandle struct",
13031,Run goimports,
13032,Add driver.docker counter metric for OOM Killer events,
13033,Update ModifyIndex of alloc when setting NextAllocation value,
13034,Merge pull request #4248 from hashicorp/f-short-init,changelog: init -short option
13035,changelogfmt,
13036,changelog: add line for init command -short option,
13037,command: remove all comments from short init jobspec,
13038,Merge pull request #4239 from hashicorp/f-short-init,command: init -short flag
13039,Merge pull request #4235 from portworx/master,Add Portworx Blog link
13040,framer: fix early exit/truncation in framer,
13041,framer: fix race and remove unused error var,In the old code module in the module method shared the Data slice's underlying backing array with its caller. Clearing StreamFrame.Data didn't break the reference from the sent frame to the StreamFramer's data slice.
13042,client: use a bytes.Reader for reading a []byte,
13043,client: squelch errors on cleanly closed pipes,
13044,client: don't spin on read errors,
13045,client: ensure cancel is always called when func exits,
13046,client: give pipe conns meaningful names,
13047,client: reset encoders between uses,"According to go/codec's docs, Reset(...) should be called on Decoders/Encoders before reuse: https://godoc.org/github.com/ugorji/go/codec I could find no evidence that not calling Reset() caused bugs, but might as well do what the docs say?"
13048,api: never return EOF from Logs error chan,Closing the frames chan is the only race-free way to signal to receivers that all frames have been sent and no errors have occurred. If EOF is sent on error chan receivers may not receive the last frame (or frames since the chan is buffered) before receiving the error. Closing frames is the idiomatic way of signaling there is no more data to be read from a chan.
13049,tests: test logs from client<->api package,
13050,Merge pull request #4240 from hashicorp/f-add-reschedule-tracker-allocslist,Add RescheduleTracker to allocs list stub struct
13051,Add RescheduleTracker to allocs list stub struct,
13052,command: add '-short' flag to init command that emits minimal jobspec,
13053,Add Portworx Blog link,
13054,Merge pull request #4225 from cryptomeme/patch-1,Missed change to module from module
13055,version bump and remove generated,
13056,website bump,
13057,Release v0.8.3,
13058,Merge branch 'master' of github.com:hashicorp/nomad,
13059,Merge pull request #4229 from hashicorp/je.bugfix,"Fix js syntax error, resolve fout issues"
13060,generated files,
13061,bump version,
13062,changelog,
13063,Merge pull request #4231 from hashicorp/b-no-node-panic,Fix issue where node connection map wasn't being pruned
13064,small cleanup and logging,
13065,Fix issue where node connection map wasn't being pruned,
13066,"fix js syntax error, resolve fout issues",
13067,Missed change to module from module,
13068,website version,
13069,Remove generated and version bump,
13070,Release v0.8.2,
13071,ignore tags,
13072,generated files,
13073,bump version,
13074,changelog,
13075,Merge pull request #4224 from hashicorp/b-cron-parse,Handle potential panic in cron parsing
13076,docs: add #4170 to changelog,
13077,changelog fmt,
13078,Merge branch 'b-cron-parse' of github.com:hashicorp/nomad into b-cron-parse,
13079,Allow nomad to restore bad periodic job,
13080,add unit tests for panic cron parsing bug,add comments for cron parsing wrapper
13081,Fix command line,
13082,Merge pull request #4220 from hashicorp/b-operator,Generate all structs in structs packages
13083,Changelog,
13084,Keep client simple,
13085,Codecgen full package,
13086,Travis tests binary built with generated files,
13087,UX touchups,
13088,changelog,
13089,Merge pull request #4222 from hashicorp/b-proxy,Track all client connections
13090,handle potential panic in cron parsing,
13091,Add test,
13092,Track all client connections,
13093,Merge pull request #4190 from hashicorp/je.remove-turbolinks,Turbolinks adjustments
13094,Merge pull request #4216 from hashicorp/b-signal-constraints,Sort signals in implicit constraint
13095,changelog,
13096,Sort signals in implicit constraint,Fixes https://github.com/hashicorp/nomad/issues/4212
13097,Merge pull request #4205 from hashicorp/docs-drain-cli,Update docs CLI output for node drain
13098,Merge pull request #4217 from hashicorp/f-govendor-update,Update go-getter to pick up file access time fix
13099,Changelog,
13100,Fix vendor file format,
13101,Update go-getter to pick up file accesstime fix,
13102,Merge pull request #4215 from hashicorp/b-drain,Fix panic draining when alloc on non-existent node
13103,Changelog,
13104,Safety guard,
13105,Fix detecting drain strategy on GC'd node,
13106,UI changes in 0.8.2 added to changelog,
13107,Merge pull request #4209 from herver/patch-1,Fix typo in cap_add whitelisting
13108,Merge pull request #4214 from hashicorp/f-4176-changelog,CHANGELOG: add line for #4176
13109,CHANGELOG: add line for #4176,
13110,Fix typo in cap_add whitelisting,
13111,Merge pull request #4188 from hashicorp/f-rkt-stats,rkt: create parent cgroup to enable stats
13112,Merge pull request #4195 from hashicorp/b-ui-retry-stats-requests,UI: Retry stats requests
13113,docs: add changelog entry for rkt stats #4188,
13114,rkt: test Stats() and always run tests,"Remove the NOMAD_TEST_RKT flag as a guard for rkt tests. Still require Linux, root, and rkt to be installed. Only check for rkt installation once in hopes of speeding up rkt tests a bit."
13115,docs: update cli output for node drain,CLI output changed in #4202
13116,Merge pull request #4202 from jrasell/gh_4183,Update node-drain logging message to be clearer for operators.
13117,Merge pull request #4196 from jvrplmlmn/driverContext/add-taskGroup-job-details,DriverContext: Add the TaskGroup and the Job name
13118,Update node-drain logging message to clearer for operators.,This change updates the console log message when performing a node drain and particulary when a node has marked all allocs for migration. Previously it logged 'drain complete' which was a little confusing to operators as the node is not drained at this point. Closes #4183
13119,Test coverage for the changes to the searchable mixin,
13120,Trim whitespace on the search term,Trailing whitespace messes with tokenization
13121,Add tokenization to fuse search options,
13122,Show how many jobs exist but are being hidden by the serach term,
13123,Apply new search features to the job index page,
13124,Add optional fuzzy search support to the searchable mixin,"This time around fuzzy, exact, and regex can all be toggled. Additionally, each search type gets its own set of keys to search for. This means fuzzy search can only look at name while regex and exact match will still look at ID."
13125,Bring fuse.js back,
13126,docker tests: Fix usage of NewDriverContext,
13127,adjust analytics and scripts for turbolinks,
13128,DriverContext: Add the TaskGroup and the Job name,"Adding this fields to the DriverContext object, will allow us to pass them to the drivers. An use case for this, will be to emit tagged metrics in the drivers, which contain all relevant information: - Job - TaskGroup - Task - ... Ref: https://github.com/hashicorp/nomad/pull/4185"
13129,Merge pull request #4189 from hashicorp/f-ui-stop-job-button,UI: Stop job button
13130,Test coverage for alloc stats retrying,
13131,Move resource generation helper to a common place,
13132,Keep polling for alloc stats when a request fails,
13133,Merge pull request #4178 from hashicorp/f-sort-drivers,cli: sort drivers in module
13134,Merge pull request #4181 from hashicorp/docs-move-operating-guide,Move Operating a Job from /docs/ to /guides/
13135,Merge pull request #4164 from PeterDaveHello/update-demo-vagrantfile,Use CONSUL_VERSION variable in demo Vagrantfile
13136,Add button type to the two-step-button buttons,
13137,Merge pull request #4170 from hashicorp/f-consul-periodic-sync,consul: periodically reconcile services/checks
13138,consul: periodically reconcile services/checks,"Periodically sync services and checks from Nomad to Consul. This is mostly useful when testing with the Consul dev agent which does not persist state across restarts. However, this is a reasonable safety measure to prevent skew between Consul's state and Nomad's services+checks. Also modernized the test suite a bit."
13139,rkt: create parent cgroup to enable stats,Having the Nomad executor create parent cgroups that rkt is launched within allows the stats collection code used for the exec driver to Just Work. The only downside is that now the Nomad executor's resource utilization counts against the cgroups resource limits just as it does for the exec driver.
13140,Move job-page helpers and repeat stop tests on the service type,
13141,Refactor periodic job tests,
13142,New tests for stop job action,
13143,Refactor job-page components to use common title and error parts,
13144,New errorMessage format,
13145,Common error component for job pages,
13146,Move common title parts into a part component,
13147,Test coverage for the two-step-button component,
13148,New two-step-button,For performing an action that requires confirmation
13149,Add new model action for stopping a job,
13150,Merge pull request #4180 from hashicorp/f-update-tf-version,"tf: Bump Nomad to 0.8.1, Hadoop to 2.7.6"
13151,Merge pull request #4138 from hashicorp/i-hcl-json-endpoint,HCL to JSON api endpoint
13152,run goimports,
13153,Merge pull request #4168 from ninoles/b-2117-windows-group-process,B 2117 windows group process
13154,Merge pull request #4176 from hashicorp/i-cli-error-help,Improve help text when invalid arguments are given
13155,command: fix job dispatch arg check,
13156,docs: move operating-a-job to guides,Add redirects from /docs/ -> /guides/ and update old redirects to point to the new location.
13157,Merge pull request #4058 from hashicorp/f-mock-by-default,[Post-0.8] test: build with mock_driver by default
13158,"bump Nomad to 0.8.1, Hadoop to 2.7.6",
13159,Merge pull request #4174 from hashicorp/tests-fix-ar-race,tests: fix race in alloc_runner_test.go
13160,test: build with mock_driver by default,module and module set a module tag to disable enabling the module
13161,cli: sort drivers in module,
13162,Merge pull request #4160 from hashicorp/docs-job-telemetry,Document job telemetry from #3467
13163,"command: use ':' instead of ',' in error msg",
13164,command: update tests to check for new error message,
13165,Merge pull request #4172 from omame/patch-1,Typo fix on a link
13166,command: fix misspelling in comment,
13167,command: improve help text when invalid arguments are given,
13168,Merge pull request #4173 from hashicorp/docs-acl-vault-typos,Fix typos in example commands
13169,Fix typos in example commands in the Vault Integration Configuration section of ACL guide,
13170,tests: fix race in alloc_runner_test.go,I could not reproduce the failure locally even with module eating all the cpu it could on my machine. But I think the race was in one of two places: * The task could restart which could create new events * I think there could be a race between the updater's version of events   and alloc runners as updates are async I fixed both. Here's hoping that fixes this flaky test.
13171,bump vagrant version,
13172,changelog and version,
13173,gofmt -s nomad/structs/structs_test.go,
13174,Merge pull request #4167 from hashicorp/ui-fix-flaky-tests,UI: Fix a couple flaky tests
13175,Typo fix on a link,
13176,Merge branch 'master' into b-2117-windows-group-process,
13177,Update based on PR request.,
13178,Track requests in test mode,This is now necessary in mirage 0.4
13179,Upgrade ember-cli-mirage,
13180,Don't read properties off of null objects,Somehow this controller code runs sometimes when the existing jobs are dematerializing. This makes this.get('model') and array of null
13181,Make sure jobs and task groups have no spaces,Faker hacker nouns can sometimes be two words.
13182,Merge pull request #4166 from hashicorp/b-panic-fix-update,Fixes races accessing node and updating it during fingerprinting
13183,add test for node copy,
13184,Merge pull request #4153 from ninoles/b-2117-windows-group-process,B 2117 windows group process
13185,fix up comments,
13186,minor code review fixes to api/jobs,
13187,Use CONSUL_VERSION variable in demo Vagrantfile,
13188,website: fix type in api/jobs/parse,
13189,add changelog entry for new jobs/parse endpoint,
13190,website: add standard blocking query/ACL table to jobs/parse ep,
13191,command/agent: fix url in jobs parse ep test,
13192,api: add test for canonicalized jobs/parse,
13193,command/agent: fix ptr ref in job endpoint test,
13194,website: add api docs for v1/jobs/parse endpoint,
13195,command/agent: add Canonicalize option to parse args,
13196,command/agent: add HCL mock for parse endpoint,
13197,command/agent: add /v1/jobs/parse endpoint,The parse endpoint accepts a hcl jobspec body within a json object and returns the parsed json object for the job. This allows users to register jobs with the nomad json api without specifically needing a nomad binary to parse their hcl encoded jobspec file.
13198,Cleanup,
13199,Copy the config given to the alloc runner,
13200,fix race node access,
13201,Fix copying drivers,
13202,Operate on copy,
13203,docs: document job telemetry from #3467,
13204,Merge pull request #4155 from hashicorp/f-tf-update-ami,"tf: Update to Nomad 0.8, Consul 1.0.7, and Vault 0.10"
13205,Merge pull request #4156 from PeterDaveHello/fix-console-in-Vagrant-demo,Fix consul download url in Vagrant demo
13206,Merge pull request #4157 from PeterDaveHello/improve-vagrant-cpu-core-detection,Improve CPU core detection in Vagrantfile
13207,Merge pull request #4158 from PeterDaveHello/docs-update-node-status-output,[Docs] Update output message of module
13208,[Docs] Update output message of module,
13209,Improve CPU core detection in Vagrantfile,Use single module with module condition instead of module + module + module
13210,Fix consul download url in Vagrant demo,"This issue was introduced in 07cbe23b8c5bc23a4290a577909f1731de81dc7c ``` $ curl -I https://releases.hashicorp.com/consul/1.0.0/consul_1.0.7_linux_amd64.zip curl: (22) The requested URL returned error: 403 Forbidden $ curl -I https://releases.hashicorp.com/consul/1.0.7/consul_1.0.7_linux_amd64.zip HTTP/1.1 200 OK Cache-Control: max-age=31536000, stale-white-revalidate=86400, stale-if-error=604800, public Content-Disposition: attachment Last-Modified: Fri, 13 Apr 2018 17:21:08 GMT ETag: ""c5ed9baed01b2b3e52a7ecb9850cecc6"" Content-Type: application/zip Strict-Transport-Security: max-age=31536000; includeSubDomains; preload X-XSS-Protection: 1; mode=block X-Content-Type-Options: nosniff X-Frame-Options: sameorigin Content-Length: 12317246 Accept-Ranges: bytes Date: Mon, 16 Apr 2018 07:04:47 GMT Connection: keep-alive ```"
13211,"Update to Nomad 0.8, Consul 1.0.7 and Vault 0.10",
13212,Add changelog.,
13213,, Clean up for windows compilation.   Set CREATE_NEW_PROCESS_GROUP for Windows subprocess.  Ensure we only kill actual process that need to.
13214,Bump versions,
13215,Add changelog entry for #3572,
13216,Merge pull request #3572 from emate/master,Create new process group on process startup.
13217,Merge pull request #4150 from hashicorp/doc-fixes,docs: fix broken links
13218,docs: fix broken links,
13219,Fix more broken links,
13220,Merge pull request #4149 from hashicorp/docs-fixes,Docs fixes
13221,docs: fix broken links,
13222,Fix changelog,
13223,docs: use middleman-hashicorp 0.3.35,
13224,docs: bump version to 0.8.0,
13225,Merge pull request #4145 from hashicorp/docs-drain-upgrade,Add drain upgrade guide docs
13226,Update index.html.md,
13227,docs: link upgrade docs to node drain guide,
13228,docs: only mention what changed with drain,
13229,docs: compare old and new drain methods,
13230,docs: add default migrate stanza to upgrade docs,
13231,docs: add drain upgrade guide,
13232,Merge pull request #4142 from hashicorp/docs-drain-guide,Add Node Drain Guide
13233,bump version,
13234,Remove generated structs,
13235,Release v0.8.0,
13236,dev helper for three node server cluster,
13237,Version bump and generated files,
13238,docs: add eligibility example,
13239,Merge pull request #4147 from hashicorp/b-health,Driver health detection cleanups
13240,docs: prettify node names,
13241,Merge pull request #4148 from hashicorp/f-operating-job-guide,Added section on failure recovery under operating a job
13242,fix spelling,
13243,more examples,
13244,docs: link drain guide from other drain docs,
13245,Move where attribute for driver detection is set,
13246,docs: add multi-dc example to drain guide,
13247,"docs: fix typos, improve wording",
13248,Merge pull request #4144 from hashicorp/docs-drain-api,Add drain API and JSON jobspec docs
13249,address some review comments,
13250,delete driver name from only health check attributes,
13251,Fix tests,
13252,Added section on failure recovery under operating a job with details and examples of different restarts.,
13253,Merge pull request #4146 from hashicorp/d-resources-update,Add items to Resources page
13254,Driver health detection cleanups,"This PR does:  Health message based on detection has format ""Driver XXX detected"" and ""Driver XXX not detected"" Set initial health description based on detection status and don't wait for the first health check. Combine updating attributes on the node, fingerprint and health checking update for drivers into a single call back. Condensed driver info in module only shows detected drivers and make the output less wide by removing spaces."
13255,add resources,
13256,Merge pull request #4143 from hashicorp/d-ent-docs-autopilot,Add Advanced Autopilot to Enterprise docs section
13257,slight rewording,
13258,docs: add drain api and json jobspec,
13259,Non-verbose driver formatting and don't display non-detected,
13260,Add Advanced Autopilot to Enterprise docs section,
13261,Merge pull request #4141 from hashicorp/autopilot-docs,Autopilot docs enchancements
13262,Merge pull request #4140 from hashicorp/d-upgrade,Upgrade guide for CLI and advertise.RPC changes
13263,docs: add drain guide,
13264,New AMI based on bumped dependency versions,
13265,add sentence about non voting servers for increasing scheduling throughput,
13266,Fix broken link in autopilot documentation,
13267,Add link to autopilot guide in operator autopilot CLI help text,
13268,Merge pull request #4139 from hashicorp/b-reschedule-invalid-system-jobs,Make system jobs fail validation if they contain a reschedule stanza
13269,add canonicalize for reschedulepolicy to simplify validation logic,
13270,Upgrade guide for CLI and advertise.RPC changes,Add documentation for upgrading to Nomad 0.8 with regards to the new CLI organization and the changed meaning of the RPC advertise on servers.
13271,dont print reschedule policy in error message,
13272,Fix more tests,
13273,Fix one more failing test,
13274,Merge pull request #4131 from hashicorp/b-rescheduling-fix-gc,Update garbage collection logic to make sure allocs with pending evals are not GCed
13275,Always merge with default reschedule policy if its not nil,
13276,Make test descriptions better,
13277,Make system jobs fail validation if they contain a reschedule stanza,
13278,Merge pull request #4137 from hashicorp/d-vault-guide,Use new Vault CLI commands in guides
13279,Use new Vault CLI commands in guides,
13280,Merge pull request #4136 from hashicorp/f-eval-status-show-waituntil,Show wait until value in eval status if it is set
13281,Show wait until value in eval status if it is set,
13282,Update alloc GC eligility logic to not rely on follow up evals,
13283,Merge pull request #4116 from hashicorp/ga-build-only,Embed Google Analytics only in production
13284,Merge pull request #4135 from hashicorp/b-fix-til,"Changed ""til"" to ""until"""
13285,Merge pull request #4133 from hashicorp/d-update-securing-nomad-guide,Add paragraph to explain rpc_migrate_mode when migrating a cluster
13286,minor spelling/punctuation fixups,
13287,Merge pull request #3954 from hashicorp/je.segment,Switch web analytics to segment
13288,"Changed ""til"" to ""until""","Should be ""till"" or ""until""; chose ""until"" because it is unambiguous as to meaning."
13289,code review rewording recommendations,
13290,add link to rpc_upgrade_mode docs,
13291,add paragraph to explain rpc_migrate_mode when migrating a cluster,Update documentation on dynamically reloading TLS configuration
13292,Added node class to tagged metrics,
13293,Merge pull request #4130 from hashicorp/d-health-check-changelog,Add change log entry for driver health checks
13294,client subsystem; reworded changelog,
13295,Merge pull request #4111 from hashicorp/b-undetected-set-health-to-false,Immediately set driver health status to false when driver moves to undetected
13296,Update CHANGELOG.md,
13297,Merge pull request #4129 from hashicorp/b-vendor-go-getter,Vendored hashicorp/go-getter
13298,Merge pull request #4120 from hashicorp/b-rescheduling-minimize-evals,Batch evals for rescheduling failed allocs correctly
13299,Fix unit test for core scheduler GC,
13300,Merge pull request #4128 from hashicorp/b-uptime,Fix client uptime metric missing client prefix
13301,Simplify and update allocation gc eligibility logic,
13302,Merge pull request #4127 from hashicorp/b-autopilot-removepeer-fixes,Add node id persistence
13303,update comment for when the fingerprinter setting health status,
13304,minor code review fix,
13305,"Add custom status description for rescheduling follow up evals, and make unit test robust",
13306,change log for driver health checks,
13307,fingerprinter should set health check status if health check is not periodic,
13308,add setters for access to the fingerprint manager's node,refactor extracting driver info
13309,guard against overwriting health status,
13310,immediately set healthy to false when driver moves to undetected,
13311,Make leader election test run on all three protocol versions,
13312,Adds a new custom description for update alloc triggered evals to make it easier to unit test.,
13313,Merge pull request #4124 from hashicorp/b-ui-nodes-before-addresses,UI: Defer showing alloc addresses until the node is loaded
13314,Vendored hashicorp/go-getter,Brings in fix for directory permissions when expanding tarballs
13315,Merge pull request #4119 from hashicorp/b-remove-bogus-hint,cli: remove outdated hints
13316,changelog,
13317,Fix client uptime metric missing client prefix,
13318,Dev mode should never persist nodeid,
13319,Merge pull request #4125 from sethvargo/sethvargo/user_agent,Set user-agent when talking to GCE metadata
13320,Defer showing alloc addresses until the node is loaded,The URLs for addresses are meaningless until the node http addr is available.
13321,Lint fixes,
13322,Set user-agent when talking to GCE metadata,
13323,"Use preconfigured nodeID if there isn't a persisted node ID, and persist it if its not persisted.",
13324,Remove debug print statements,
13325,WIP: Not setting node id properlperly,
13326,Merge pull request #4123 from hashicorp/b-vendor-cli,Update vendored mitchellh/cli and transitive dependency
13327,Unit tests for rolling upgrade and killing a leader,
13328,vendor: update mitchellh/cli and transitive deps,
13329,Merge pull request #4122 from hashicorp/b-vendor-safetemp,Vendor in github.com/hashicorp/go-safetemp
13330,vendor: pull in go-safetemp,
13331,vendor go-getter,
13332,Remove duplicate commit,
13333,Merge pull request #4109 from hashicorp/f-shorten-docker-health-timeout,Shorten docker health timeout
13334,cli: remove outdated hints,Hints no longer apply in the 0.8 Node RPC world.
13335,Batch evals for rescheduling failed allocs correctly and group them by job ID,
13336,Merge pull request #4092 from hashicorp/health-check-only-if-detected,Only run health check if driver moves from undetected to detected
13337,Merge pull request #4114 from hashicorp/b-07-rpc-hang,rpc: only attempt NodeRpc for nodes>=0.8
13338,only initialize docker clients if they are nil,
13339,rpc: wrap up old version check in a helper,DRY it up
13340,rpc: give min rpc version variable a better name,
13341,docs: mention some cli backward incompatibility,
13342,rpc: only attempt NodeRpc for nodes>=0.8,"Attempting NodeRpc (or streaming node rpc) for clients that do not support it causes it to hang indefinitely because while the TCP connection exists, the client will never respond."
13343,Merge pull request #4117 from hashicorp/r-node-status-refactor,Correctly initialize array length
13344,Merge pull request #4099 from hashicorp/docs-0.8-upgrade,docs: mention env var changes in upgrade docs
13345,docs: mention . env var change in changelog,
13346,docs: mention env var changes in upgrade docs,Mention the changes from #3760 in the upgrade docs as applications expecting underscores will break.
13347,Merge pull request #4115 from hashicorp/b-ui-duplicate-allocations,UI: Unlink record relationships before unloading them from the store
13348,Removed break inside of links,
13349,fixed link,
13350,correctly initialize array length,
13351,refacotoring simplification from code review,
13352,only run health check if driver moves from undetected to detected,
13353,Embed Google Analytics only in production,This will clean up analytics which currently show non-published pages and an incorrect number of pageviews due to the Google Analytics script being run in development as well as production.
13354,Repeat the relationship unlinking pattern in the serializer,"It also culls for findAll requests, so it too needs to be careful about leaving garbage around."
13355,Unlink record relationships before unloaded them from the store,"When simply unloading a record, references to the record are maintained by the internal relationship state of related models. This causes refetching and duplicate models local to that relationship state."
13356,Fix eval status output for alloc failure,
13357,switch from ga to segment analytics,
13358,Merge pull request #4112 from hashicorp/b-ui-dont-allow-empty-records-in-store,Never respond with an empty object from the adapter
13359,Never respond with an empty object from the adapter,"In production builds only, this will slip into the local store as a record with no ID, which makes for all sorts of bad news."
13360,Merge pull request #4098 from hashicorp/f-driver-health-ux-improvements,Driver health UX improvements
13361,Start rebalance after discovering new servers,
13362,Only mark allocs as part of deployment if deployment is active,
13363,remove stray comma,
13364,Merge pull request #4106 from hashicorp/b-servers,Improved Client handling of failed RPCs
13365,more jitter,
13366,group similar functions; update comments,health check timeout should be 1 minute
13367,remove do once block when creating a new docker client,only set cached connections upon no error
13368,use client with shorter timeouts for health checks,
13369,refactor docker clients method to be able to extend to creating new clients,
13370,Fix ineffectual assignment,
13371,changelog,
13372,Display truncated driver list in non-verbose mode,separate drivers by commas
13373,Handle no leader and faster retries near limit,"Handle the ErrNoLeader case and apply slower retries. Also when we have missed the heartbeat retry aggressively, backing off after we have missed for more than 30 seconds."
13374,Scale heartbeat retrying based on remaining heartbeat time,
13375,Fire retry only when consul discovers new servers,
13376,Updated module tables for consistency,
13377,Merge pull request #4104 from hashicorp/f-update-tf,tf: update services and add tools
13378,tf: update services and add tools,Also use the latest method for installing Docker via: https://docs.docker.com/install/linux/docker-ce/debian/
13379,Merge pull request #4101 from hashicorp/b-rescheduling-edge-fixes,Fixes edge cases around timing/ task finish time being set more than once
13380,remove outdated commented out test code,
13381,Remove old comment,
13382,Moves setting finishedAt to the right place and adds two unit tests.,
13383,Merge pull request #4096 from hashicorp/d-ui-update-docs,Docs: Update UI API and UI Guide
13384,Merge pull request #4108 from hashicorp/t-flaky-jobs-api,Fix flaky api/jobs tests based on index != 0
13385,Merge pull request #4094 from hashicorp/b-drain-panic,drain: fix double-close panic on drain future
13386,Merge pull request #4107 from hashicorp/t-flaky-prettytimediff,fix flaky pretty time test
13387,remove unnecessary check and other fixes from code review,
13388,Spelling error,
13389,Don't assume the read index won't be zero if no jobs have been registered,
13390,fix flaky pretty time test,
13391,RPC Retry Watcher,
13392,Add comment,
13393,randomize servers,
13394,Merge pull request #4100 from hashicorp/b-vault-no-auth,Improve handling of Vault errors
13395,changelog,
13396,Merge pull request #4105 from hashicorp/b-flaky-deadline-tests,Fix flaky deadline tests
13397,Fix flaky deadline tests,
13398,drain: return on first error,"If one error is encountered it is unlikely any further attempts will succeed, so fail fast."
13399,Merge pull request #4103 from ozkatz/testutil-server-consul,Support custom Consul config for TestServer
13400,Fix spelling,
13401,vendor vault/api to get fix from https://github.com/hashicorp/vault/pull/4258,
13402,Support custom Consul config for TestServer,Adds a Consul field to the TestServerConfig that allows passing in non-default values for e.g. consul address. This will allow the TestServer to integrate with Consul's testutil/TestServer.
13403,Merge pull request #4102 from hashicorp/b-drain-upgrade,Correctly handle the upgrade path of a node being drained when applying Raft logs
13404,Correctly handle the upgrade path of a node being drained when applying Raft logs,
13405,Fixes edge cases around timing and task finish time being set more than once,
13406,Improve Vault error handling,
13407,display driver status only in verbose mode or if the driver is unhealthy,
13408,Update the UI guide to add instructions & screenshots for new features,
13409,Remove note about stats being requested from clients,This is no longer true :tada:
13410,Update existing UI guide to include information about live updating views,
13411,Update the UI routes in the API docs,
13412,Remove an extraneous component of the service job page,
13413,drain: improve tests and fix spelling, transistion -> transition don't t.Fatal in goroutines don't mutate global state
13414,drain: refactor batch_future into its own file,aka What If structs.go Wasn't So Big?
13415,drain: fix double-close panic on drain future,
13416,Merge pull request #4093 from hashicorp/f-terraform-naming,Add name variable to AWS Terraform configs
13417,Add variable to enable unique naming of infra components,
13418,fix typo,
13419,remove generated files,
13420,Release v0.8.0-rc1,
13421,Update changelog with UI changes for 0.8.0,
13422,Merge pull request #4085 from hashicorp/docs-node-drain,Initial Node drain docs
13423,Fix prefix output of agent metadata,
13424,docs: grammar fix from pr,
13425,docs: add migrate to example.nomad,
13426,"docs: node drain, eligibility; jobspec migrate",
13427,Generated files,
13428,Nomad v0.8.0-rc1,
13429,Merge pull request #4089 from hashicorp/tls-error-fix,Check for nil for RPC listener; prevent double closing of listener channel
13430,Add drainv2 to changelog,
13431,Merge pull request #4090 from hashicorp/b-decolorify,cli: remove info color on monitored output
13432,cli: remove info color on monitored output,
13433,small cleanup,
13434,Merge pull request #4084 from hashicorp/f-drain-timestamps,drain: add timestamps to cli output
13435,cli: fix drain monitoring formating,
13436,Fix lost handling of not actually down nodes,
13437,prevent double close due to error in creating listener,
13438,cli: remove unreachable drain message,
13439,add further error handling for rpc connection handling,
13440,cli: log if a node goes down during draining,
13441,drain: fix monitor node index handling,
13442,Merge pull request #4087 from hashicorp/b-server-members,Generic handling of server region errors
13443,Merge pull request #4070 from hashicorp/tests-fix-allocrunner,test: don't rely on alloc runner update count
13444,cli: differentiate normal output vs info,
13445,Merge pull request #4086 from hashicorp/b-force,Fix issue where force deadlines weren't respected
13446,Test transistion from both infinite and a future deadline to force,
13447,cli: add color to drain output,
13448,changelog,
13449,Generic handling of server region errors,
13450,drain: add timestamps to cli output,Also toggle eligibility output based on value
13451,drain: fix cli blocking when allocs already stopped,
13452,Fix force deadline notification,
13453,test: don't rely on alloc runner update count,"We were incorrectly relying on the count of alloc updates in a number of tests. Since alloc updates are async, their number is non-determinstic and largely meaningless. This should fix quite a few flaky tests in Travis and prevent future mistaken assumptions in tests."
13454,Integration test,
13455,Another e2e rescheduling test case,
13456,Canonicalize migrate,
13457,Merge pull request #4083 from hashicorp/b-drain-batch,Unset drain when final batch allocs finish
13458,Merge branch 'master' into b-drain-batch,
13459,more e2e rescheduling tests,
13460,Merge pull request #4055 from hashicorp/docs-4008-ports,docs: clarify service.port depends on address_mode
13461,Merge pull request #4069 from hashicorp/f-hashealth,add HasHealth helper for nil checks
13462,Handle upgrade where Node doesn't have eligiblity,This PR handles upgrading a node that has no scheduling eligiblity set.
13463,test handleTaskGroup,
13464,Watch batch jobs,
13465,Merge pull request #4071 from hashicorp/b-handle-missing-finishedat,handle missing finishedAt
13466,Merge pull request #4081 from hashicorp/b-ui-service-breadcrumbs,UI: Service job breadcrumbs + errant open connections
13467,Corrected orphan token issue link,
13468,Track multiple xhrs per URL rather than overriding,"It was possible for a url to be overridden then canceled, leaving the open connection open and forgotten about."
13469,Merge pull request #4013 from hashicorp/node-events-documentation,Add node events to documentation
13470,Integration test for batch complete case,
13471,Merge pull request #4079 from hashicorp/b-filter-desiredstop,Filter desired status stop allocs correctly
13472,Merge pull request #4066 from hashicorp/f-block-drain-cli,drain: block cli until all allocs stop
13473,rename skip->ignore and improve comment formatting,
13474,Autocomplete command aliases,This PR allows aliased commands to be autocompleted but still filters them from the help output.
13475,remove unused,
13476,Use time from task events if task state does not have FinishedAt set,
13477,Merge pull request #4067 from hashicorp/ui-upgrade-ember,UI: Upgrade Ember to LTS + fix job summary issues
13478,Merge pull request #4068 from hashicorp/b-ui-firefox-index-watching,UI: Check for a case-sensitive or lowercase header value
13479,Disallow Update stanza on Batch,
13480,"Refactored for readability, pair programmed with @dadgar",
13481,Always capture the finish time,
13482,update timestamp and format api reference descriptions,
13483,drain: block cli until all allocs stop,"Before the drain CLI would block until the node was marked as completing drain operations. While technically correct, it could lead operators (or more likely: scripts) to shutdown drained nodes before all of its allocations had actually terminated. This change makes the CLI block until all allocations have terminated (unless ignoring system jobs)."
13484,add further driver info; driver name with subsystem,
13485,"Revert ""omit driver key/val from details""",This reverts commit 74fc5543babc85e3fa16c048bce92e71826e53cc.
13486,update events in node api,
13487,More e2e tests,
13488,omit driver key/val from details,
13489,add field reference for node events,
13490,add HasHealth helper for nil checks,"We performed the DeploymentStatus nil checks a couple different ways, so hopefully this helper will consoldiate them and make it more clear what the code is doing."
13491,improve timestamp,
13492,add node events to documentation,
13493,Merge pull request #4065 from hashicorp/emit-node-event-on-first-health-change,Emit first node event after initialization on health status change
13494,add clarifying comment,
13495,Merge pull request #4046 from hashicorp/tls-same-file-reload,Check file contents when determining if agent should reload TLS confi…
13496,"Filter out allocs with DesiredState = stop, and unit tests",
13497,Fix failing test,
13498,If FinishedAt is not set use alloc's modify time for rescheduling logic,
13499,Update rescheduling job specs in integration test,
13500,Unmark drain when nodes hit their deadline and only batch/system left and add all job type integration test,
13501,Merge pull request #4059 from hashicorp/b-drain-health-svc-only,only service allocs should have health watched
13502,Add missing js class for System that extends AbstractJobPage,
13503,only service allocs should have health watched,
13504,make check fix,
13505,Check for a case-sensitive or lowercase header value,
13506,add test to assert invalid files return error,
13507,Remove now unnecessary summary fallback,Ember Data 2.18 fixed the underlying bug
13508,return error when setting checksum; don't reload,
13509,Correctly watch the job summary on the task group page,It changed from being a relationship to a model
13510,Upgrade to Ember 2.18,
13511,Make the job<->job-summary relationship reflective,The job summary needed a JobID
13512,Clear out the localStorage namespace when it's no longer valid,"In the event that a namespace in localStorage is not found in the response for /namespaces, clear the localStorage value and assume the default namespace."
13513,Don't allow the alloc status table cell to word-wrap at the swatch,
13514,output warning for error in creating TLS checksum,
13515,emit first node event,
13516,Merge pull request #4063 from hashicorp/b-ui-display-message,UI: Read the task event message from the DisplayMessage prop
13517,Read the task event message from the DisplayMessage prop,
13518,Merge pull request #4057 from hashicorp/specify-docker-msg,Specify docker name in driver health messages
13519,Update CHANGELOG,
13520,"check for nil, remove unnecessary set checksum call",
13521,Merge pull request #4052 from hashicorp/f-specify-total-memory,Allow to specify total memory on agent configuration
13522,Fix linting,
13523,fix up test for file content changes,
13524,Fix compilation fail in test after rebase,
13525,reformat message,
13526,specify driver health messages,
13527,docs,
13528,Code review feedback and unit test,
13529,set TLS checksum when parsing config,"Refactor checksum comparison, always set checksum if it is empty"
13530,rkt: logging enhancements (#4044),  Added extra debug logging; extended timeout; added jitter.   small log changes   increase timeout   remove unneccessary uuid 
13531,Merge pull request #4054 from hashicorp/b-drainer-index-fix,drainer: reset index when new job registered
13532,Merge pull request #4050 from hashicorp/f-demo-agent-names,demo: give agents unique names
13533,Merge pull request #4034 from hashicorp/b-0-attempt-restarts,client: always mark exited sys/svc allocs as failed
13534,Merge pull request #4053 from hashicorp/b-drain-sys-jobs-2,drain: fix draining of system jobs
13535,Merge pull request #4056 from hashicorp/b-system-eligible,Create evals for system jobs when drain is unset
13536,Create evals for system jobs when drain is unset,This PR creates evals for system jobs when:  Drain is unset and mark eligible is true Eligibility is restored to the node
13537,set server configuration checksum on reload,
13538,docs: clarify service.port depends on address_mode,"Hopefully helps prevent more issues like #3681 and #4008. The port/address_mode logic is really subtle, and it took me a long time to diagnose #4008 despite being the one to have addressed the duplicate issue before! Not to mention I wrote the code! Definitely need to do something to make it more understandable..."
13539,client: always mark exited sys/svc allocs as failed,"When restarts.attempts=0 was set in a jobspec a system or service alloc that exited with 0 status would be marked as module instead of module. Since system and service jobs are intended to run until stopped or updated, they should always be marked as failed when they exit even in cases where the exit code is 0."
13540,demo: give agents unique names,"Give demo agents unique names to improve module output. Since the agents default to the hostname, they all had the same name whether using the root or demo Vagrantfiles."
13541,drain: improve comments,
13542,drain: give cli more time before exiting,May want to bump this a bit more as the drain often completes amidst a flurry of alloc updates.
13543,drain: unittest draining node logic,
13544,test: add mock batch and system allocs,"Since the BatchJob helper had a different task group than the Alloc helper, it was difficult to create a valid batch alloc."
13545,drain: stop sys jobs after drain completes,System allocs should be drained when a node's deadline is hit or when all other allocs on the node have stopped/migrated.
13546,drainer: reset index when new job registered,
13547,Merge pull request #4035 from hashicorp/node-events-timestamps,Properly format node event timestamps
13548,Allow to specify total memory on agent configuration,Allow to set the total memory of an agent in its configuration file. This can be used in case the automatic detection doesn't work or in specific environments when memory overcommit (using swap for example) can be desirable.
13549,Merge pull request #4024 from hashicorp/f-delayed-rescheduling-docs,docs for delayed rescheduling options
13550,more review feedback,
13551,"Replace linear with constant, and other small changes",
13552,Initial docs for new delayed rescheduling options,
13553,fix up to string to use time.Time,
13554,move tests to use time.Time,
13555,use time.Time for node events for compatibility,
13556,properly formatting unix timestamps,
13557,check file contents when determining if agent should reload TLS configuration,
13558,Merge pull request #4049 from hashicorp/b-tunnel,Only track nodes if the conn is from the node
13559,Merge pull request #4051 from hashicorp/b-alloc-stream-snap,Fix alloc watcher snapshot streaming
13560,Fix alloc watcher snapshot streaming,
13561,Merge pull request #4048 from hashicorp/f-system,Correct status desc on draining system allocs
13562,Only track nodes if the conn is from the node,Fixes a bug in which a connection to a Nomad server was treated as a connection to a node because the server forwarded a node specific RPC.
13563,Correct status desc on draining system allocs,
13564,Merge pull request #4025 from hashicorp/reload-http-tls,Allow TLS configurations for HTTP and RPC connections to be reloaded …
13565,Fix too long token test case,
13566,Merge pull request #4045 from hashicorp/f-rename-linear-constant,s/linear/constant/g
13567,s/linear/constant/g,
13568,Merge pull request #4043 from hashicorp/tls-documentation-update,Nomad now closes old connections on reloading a TLS configuration
13569,Merge pull request #4039 from hashicorp/b-reschedule-validate,Adds additional validation for ambiguous settings
13570,Extra test case and better error message for ambiguous config,
13571,Merge pull request #4037 from hashicorp/b-fix-terminal-filtering-service-allocs,Fix edge case in reconciler
13572,one field per line in struct definition,
13573,Merge pull request #4040 from jeloou/fix/vault-stanza-docs,fix typo and remove duplicated text in Vault stanza docs
13574,Merge pull request #4038 from hashicorp/f-deployment,Only create deployment if job changes or no allocs
13575,name and test,
13576,nomad closes connections on reloading a tls configuration,
13577,add test for upgrading only RPC connections,
13578,code review feedback,
13579,website: removed duplicated text,
13580,website: fix typo in Vault stanza docs,
13581,Adds additional validation for ambigous settings (having both unlimited and attempts set),
13582,Don't create unnecessary deployments,
13583,Fix edge case in reconciler where service jobs with ClientstatusComplete were not replaced,
13584,Do not mark an allocation as an inplace update if specification hasn't changed,
13585,Merge pull request #4033 from hashicorp/make-check-fix,Remove unused function
13586,drop stats fetching log,
13587,sort driver output,
13588,remove unused function,
13589,Merge pull request #4030 from hashicorp/health-check-ux,UX improvments to driver health checks
13590,Merge pull request #4032 from hashicorp/b-ui-namespace-breadcrumbs,UI: Namespace related bugs
13591,Work around the dreaded broken relationship ED bug,Summary can unlink from a job when loaded in the wrong order. This guarantees that the summary is bound to the job detail view by falling back to the summary in the store.
13592,"Never duplicate query params, always include query params",A couple more edge cases related to watching URLs with query params
13593,Allow child adapters specify special xhr keys,This is necessary for the namespace query param
13594,Always use the job plain id and job namespace in job links,
13595,Merge pull request #4031 from hashicorp/f-node-driver-info,Driver Info CLI output
13596,Driver Info output,
13597,ux improvments to driver health checks,
13598,Merge pull request #4022 from hashicorp/f-more-executor-logging,executor: increase level for helpful log lines
13599,Merge pull request #4021 from hashicorp/f-travis-go1.10,travis: use go 1.10.x
13600,Fix spelling error,
13601,Merge pull request #4029 from hashicorp/f-ui-poll-for-stats,UI: Poll for allocation stats
13602,Merge pull request #3874 from sepulworld/zmw/fix_vagrant_network_timeout,Fixing Vagrant box timeout issue waiting for interfaces
13603,Merge pull request #3888 from hashicorp/b-acl-name,Increase maximum ACL token length
13604,Merge branch 'master' into b-acl-name,
13605,remove comment,
13606,Poll for allocation stats,
13607,Refactor the way allocation stats are fetched,"No longer treat it as a property for relationship, just ephemeral data that can be fetched on demand."
13608,changelog,
13609,Merge pull request #4027 from hashicorp/f-common,New Command Line Groupings
13610,Merge pull request #4028 from hashicorp/f-checkpoint-oss,Allow separate enterprise config overlay
13611,Allow separate enterprise config overlay,
13612,Fix old references,
13613,Merge pull request #4017 from hashicorp/b-ui-error-message-for-force,Show an error message when forcing a periodic launch is forbidden
13614,Merge pull request #4026 from hashicorp/b-ui-use-native-fetch-in-prod,UI: Use native fetch in production when available
13615,aliases,
13616,redirects,
13617,nested command docs,
13618,travis: use go 1.10.x,
13619,Merge pull request #4023 from hashicorp/b-ui-index-1,"UI: The initial index qp value should be 1, not 0"
13620,mirageEnabled alone doesn't capture whether or not mirage is enabled,Add an isProduction condition to ensure native fetch is used when possible.
13621,Grouped commands help description,
13622,color,
13623,Deprecated commands,
13624,aliases,
13625,rename files,
13626,common commands,
13627,use subcommands,
13628,"Drain cli, api, http",
13629,Merge pull request #4010 from hashicorp/f-drain-rebased2,Drain v2: add controlled draining
13630,eligbile -> eligible,
13631,docs: improve DrainRequest.MarkEligible comment,
13632,test: index no longer guaranteed on job list,Also switch to require and add t.Helper to appropriate funcs.
13633,remove spurious TODOs and FIXMEs,
13634,test: must initialize jobResults with new func,
13635,test: disable node drainer during tests,Node drainer would throw off the index checks
13636,test: disable drain during fsm test,drainer was unsetting drain before fsm could read written value
13637,test: fix by using mock.BatchJob,
13638,test: try to prevent flakiness on travis,
13639,test: don't call t.Fatal from within a goroutine,
13640,tests: use mock.BatchJob to fix tests,
13641,mock: add BatchJob() helper,
13642,alloc_runner: watch health for deployed batch jobs,
13643,api: fix tests to expect default migrate strategy,
13644,Fix linting errors,
13645,rpcapi: remove; unused,
13646,fix race in drain integration tests,
13647,Refactor assertOps into a helper func,
13648,Remove debug prints,
13649,Deregister garbage collected jobs,
13650,JobNs -> NamespacedID,Also drop the New func as it's easy to swap the order of arguments since they're both strings.
13651,drainer: RegisterJob -> RegisterJobs,Test job watcher
13652,Fix deadline heap triggering,Chan must be buffered to avoid skipping triggering altogether Also made timing in a test a bit more lenient
13653,Improve drain log messages,"Also delay ""node complete"" after the node has been marked complete to capture a few more alloc events. There are other ways to implement this that could trade off correctness for responsiveness as technically a node is considered drained when all of its allocs have been marked to stop and not when they've actually stopped (which may not happen for a long time)."
13654,Monitor node drains until completion in CLI,allow -detach like other commands
13655,Add DesiredTransition.ShouldMigrate to api pkg,
13656,Fix node eligibility test,
13657,fix comment,
13658,sharding,
13659,Batch drain update,
13660,Fix deadline handling,
13661,Switch to drainerv2 impl,
13662,Toggle Drain allows resetting eligibility,This PR allows marking a node as eligible for scheduling while toggling drain. By default the module commmand will mark it as eligible but the drainer will maintain in-eligibility.
13663,code review,
13664,spelling fixes,
13665,Comments,
13666,handle empty node case,
13667,integration test and basic fixes,
13668,Drainer,
13669,job watcher,
13670,"Node's being untracked or having updated deadlines, updates the deadliner",
13671,node watcher,
13672,drain heap,
13673,Initial design,
13674,System test runs on mac,
13675,Fix file names,
13676,Correct defaulting,
13677,refactor main drainloop into 2 more methods,
13678,"drainer: refactor newStopAllocs, applyMigrations",
13679,client: don't monitor health of non-service jobs,Also fix system job draining; won't work without deadline fixes
13680,Improve DeadlineTime helper,
13681,drainer: convert fsm errors to go errors,
13682,drainer: factor job & node watchers out of drainer.go,
13683,Restart every time SetEnabled(true) is called,
13684,Remove unused context,
13685,drainer: drainer should shutdown with server,
13686,refactor drainer into a subpkg,
13687,code review,
13688,Small refactor and cleanups,
13689,Fix retaining the drain,
13690,Unblock evals once eligible,
13691,Add eligibility to node view,
13692,node eligibility command,
13693,HTTP and API,
13694,RPC/FSM/State Store for Eligibility,
13695,flag comment,
13696,Upgrade path,
13697,Remove update time,
13698,Fix tests,
13699,"Drain cli, api, http",
13700,Node.Drain takes strategy,
13701,improve drain fsm/statestore tests,
13702,scheduler: migrate non-terminal migrating allocs,filterByTainted node should always migrate non-terminal migrating allocs
13703,switch to new raft DesiredTransition message,
13704,drainer: switch to job based watching,
13705,"RPC, FSM, State Store for marking DesiredTransistion",fix build tag
13706,mock_driver: improve Kill() logging,
13707,testlog: override testlogger with envvar,
13708,drain: initial drainv2 structs and impl,
13709,Merge pull request #3856 from hashicorp/f-client-add-health-checks,Client driver health checks for Docker
13710,Allow TLS configurations for HTTP and RPC connections to be reloaded separately,
13711,Merge pull request #4014 from hashicorp/f-terraform-dynamic-binary,Update Terraform AWS configs to enable Nomad binary substitution
13712,"The initial index value should be 1, not 0",
13713,fix up scheduling test,
13714,Merge pull request #4007 from hashicorp/f-show-rescheduling-cli-job-status,Show a section on upcoming delayed evaluations when applicable
13715,More code review feedback,
13716,always set initial health status for every driver,
13717,set driver to unhealthy once if it cannot be detected in periodic check,
13718,Docker driver doesn't return errors but injects into the DriverInfo,
13719,Only run health check if driver is detected,
13720,fix issue when updating node events,
13721,function rename and re-arrange functions in fingerprint_manager,
13722,improve comments; update watchDriver,
13723,remove unused function,
13724,simplify logic,bump log level
13725,fix up health check logic comparison; add node events to client driver checks,
13726,Code review feedback,
13727,notes from walk through,
13728,improve tests,
13729,refresh driver information for non-health checking drivers periodically,
13730,fix up codereview feedback,
13731,fix up racy tests,
13732,updating comments; locking concurrent node access,
13733,fix up scheduler mocks,
13734,go style; update comments,
13735,fix up gofmt,
13736,fix scheduler driver name; create node structs file,
13737,allow nomad to schedule based on the status of a client driver health check,Slight updates for go style
13738,add concept of health checks to fingerprinters and nodes,fix up feedback from code review add driver info for all drivers to node
13739,Show an error message when forcing a periodic launch is forbidden,This will happen when ACLs allow for reading jobs but not submitting.
13740,Merge pull request #4019 from jrasell/f_gh_4018,Document new Consul checks name config params and CLI flags.
13741,executor: increase level for helpful log lines,Should help with debugging issues like #3971
13742,Fix test,
13743,Update CHANGELOG.md,
13744,Merge pull request #3979 from hashicorp/b_update_compat_delete,Delete compatibility code for job level update stanza
13745,Addressed code review feedback,
13746,Document new Consul checks name config params and CLI flags.,
13747,Merge pull request #4016 from hashicorp/b-ui-job-summary-not-necessary,UI: Bundle o' bug fixes
13748,Add changelog entry for #4003,
13749,Merge pull request #4003 from jrasell/f_gh_3988,Allow Nomads Consul health check names to be configurable.
13750,Perioidic and Parameterized jobs need to watch /jobs for child updates,
13751,Always provide arguments instead of models to job links,"This invoked the model hook, which will load the model and redirect correctly based on permissions"
13752,Guard against undefined properties in cancel requests,
13753,Treat job-summary like a typical relationship rather than a custom link,This way ED doesn't eagerly fetch the job summary even when it's already in the store due to the jobs list endpoint
13754,Job row should denote when a parent job has no children,
13755,Alias the right property,
13756,Merge pull request #4012 from hashicorp/b-ui-extraneous-deployment-watcher,UI: Extraneous deployment watcher
13757,Deployments should only be watched when the job type supports deployments,
13758,Bump Hadoop version in run-time config scripts; update AMI,
13759,Show reschedule policy in addition to when the eval will get rescheduled,
13760,Run yarn silently during make ember-dist,
13761,Enable raw_exec and Docker privileged mode,
13762,Bump Hadoop version,
13763,Support dynamic replacement of the Nomad binary at run-time,
13764,Merge pull request #4011 from hashicorp/v-sockaddr,Support wireless interfaces on Windows
13765,changelog,
13766,vendor gosockaddr,
13767,Update Consul check params from using health-check to check.,
13768,Make raw_exec processes cleanup function more precise.,
13769,Fix errors when trying to kill whole process group.,
13770,Make starting & cleaning process group Windows compatible.,
13771,Create new process group on process startup.,Clean up by sending SIGKILL to the whole process group.
13772,Unit test and linting fix,
13773,Show a section on upcoming delayed evaluations when applicable,
13774,Merge pull request #4006 from hashicorp/b-alloc-status-cli-hide-unlimited-attempts,Hide the number of reschedule attempts for unlimited rescheduling
13775,Merge pull request #4004 from hashicorp/b-rescheduling-fixes,Make suggested interval round to seconds
13776,Fix linting,
13777,Hide the number of reschedule attempts for unlimited rescheduling,
13778,Fix generating static assets,Broke due to a change in go-bindata-assetfs
13779,Remove fake advertise address and fix TestAPI_OperatorAutopilotServerHealth,
13780,"Make suggested interval round to seconds, and more end to end test cases",
13781,Allow Nomads Consul health checks to be configurable.,"This change allows the client HTTP and the server HTTP, Serf and RPC health check names within Consul to be configurable with the defaults as previous. The configuration can be done via either a config file or using CLI flags. Closes #3988"
13782,Merge pull request #4002 from hashicorp/b-reschedule-systemjob-panic,Fix incorrect initialization of reschedule policy for system jobs.
13783,Fix linting,
13784,Fix incorrect initialization of reschedule policy for system jobs.,
13785,Merge pull request #3997 from hashicorp/b-serf-addr,RPC Advertise used exclusively for Clients
13786,relax timing,
13787,Fix ineffectual assignment lint warnings,
13788,Merge pull request #3999 from hashicorp/rescheduling_e2e_fixes,Small tweaks to rescheduling e2e tests
13789,Small tweaks to rescheduling e2e tests,
13790,Merge pull request #3998 from hashicorp/b-fix-linting,Fix linter errors
13791,enable server in test,
13792,clarify comment,
13793,clarify networking docs,
13794,Heartbeat uses client rpc advertise and server defaults server rpc advertise addr,
13795,Separate client and server rpc advertise addresses,
13796,Merge branch 'master' of github.com:hashicorp/nomad,
13797,fix api job tests,
13798,Remove unnecessary conversions,
13799,gofmt -s (simplify) files,
13800,Bump Go to 1.10 in Vagrantfile,
13801,Merge pull request #3989 from hashicorp/f-ui-read-job-summary-from-list-view,UI: Read job summary from Jobs.List
13802,Merge pull request #3984 from hashicorp/f-loosen-consul-skipverify,Replace Consul TLSSkipVerify handling
13803,Merge pull request #3990 from hashicorp/f-rkt-groups,rkt: allow specifying --group
13804,Add changelog entry for #3993,
13805,Merge pull request #3993 from hashicorp/f-retry-volume-errors,docker: make volume errors recoverable
13806,rkt: allow specifying --group,
13807,Merge pull request #3992 from hashicorp/f-vault-orphan,Allow and recommend Orphaned Vault tokens
13808,changelog,
13809,Merge pull request #3982 from hashicorp/b-shard-jobs,Batch Job Garbage Collection
13810,Pull snapshotting out of loop,
13811,changelog,
13812,job gc uses batch endpoint,
13813,Batch Deregister RPC,
13814,docker: make volume errors recoverable,The interface+mock just to test this one little error handling may seem like overkill but there was just no other way to write an automated test around this logic as there's no way to simluate this error with stock Docker.
13815,Allow and recommend Orphaned Vault tokens,This PR removes enforcement that the Vault token role disallows orphaned tokens and recommends orphaned tokens to simplify the bootstrapping/upgrading of Nomad clusters. The requirement that Nomad's Vault token never expire and be shared by all instances of Nomad servers is not operationally friendly.
13816,Merge pull request #3985 from hashicorp/b-ui-missing-task-name,Read task name off of the state rather than the task
13817,Ensure the task group is present whenever an allocation row is rendered,
13818,Update job row to no longer watch job-summary or reload the job,"Now that job summary is pushed into the store from the list request and the task group count is derived from the summary, the detailed job information is no longer needed for a job row."
13819,Use the job-summary information available from the jobs list,
13820,List unblocks on summary changes,
13821,Replace Consul TLSSkipVerify handling,"Instead of checking Consul's version on startup to see if it supports TLSSkipVerify, assume that it does and only log in the job service handler if we discover Consul does not support TLSSkipVerify. The old code would break TLSSkipVerify support if Nomad started before Consul (such as on system boot) as TLSSkipVerify would default to false if Consul wasn't running. Since TLSSkipVerify has been supported since Consul 0.7.2, it's safe to relax our handling."
13822,Drop ACL todo,
13823,Read task name off of the state rather than the task,"It's possible for the task (derived from the job API response) is nil, or has a nil name field. Using the task state instead ensures a name every time."
13824,Merge pull request #3978 from hashicorp/b-core-sched,Always add core scheduler
13825,Update CHANGELOG for rescheduling,
13826,Merge pull request #3981 from hashicorp/f-delayed-scheduling,Delayed rescheduling
13827,Fix linting warning,
13828,fix method comment,
13829,Show reschedule eligibility time in alloc-status when followup evalid is available,
13830,Fix formatting,
13831,Rename DelayCeiling to MaxDelay,
13832,Update comment,
13833,Address more code review feedback,
13834,Avoids unnecessary timer object creation,
13835,Get reschedule policy from the alloc directly,
13836,Update comment about WaitTime,
13837,Cleaner handling of batched evals,
13838,More small review feedback,
13839,"Extra comments, remove unnecessary if condition",
13840,Move delayheap to lib package,
13841,Add parsing test cases,
13842,Address some code review comments,
13843,Remove unnecessary check against 5 second window for determining immediate scheduling eligibility,
13844,"Added a delay heap to track evals with WaitUntil set, and use in eval broker",
13845,Scheduler and Reconciler changes to support delayed rescheduling,
13846,Added FollowupEvalID field and helper methods to calculate reschedule eligibility based on delay,
13847,Add new reschedule stanza fields to list of valid fields,
13848,Fix formatting,
13849,Formatting and linting fixes,
13850,Add new reschedule options to API layer and unit tests,
13851,"New delayed rescheduling options, validation function and unit tests",
13852,Fix spelling in comment,
13853,Update CHANGELOG,
13854,Merge pull request #3980 from hashicorp/f-yamux-update,Update yamux library to pick up memory performance optimization
13855,Merge pull request #3974 from hashicorp/f-ui-allocations-use-job-breadcrumbs,UI: Allocation and task breadcrumbs extend job breadcrumbs
13856,Update yamux library to pick up memory performance optimization,
13857,changelog,
13858,Always add core scheduler and detect invalid schedulers,
13859,Require core scheduler,
13860,fix clearing node events,
13861,lint warning fixed,
13862,Remove compat code for upgrade stanza that copied state from job level update stanza,
13863,better wording in CHANGELOG.md,
13864,Merge pull request #3945 from hashicorp/f-add-node-events,Add node events
13865,Update CHANGELOG.md,
13866,Merge pull request #3968 from hashicorp/f-nicer-vault-error,Make server side error messages from vault more clearer
13867,Fix lint warning,
13868,small cleanup,
13869,nodeevents -> events,
13870,fixes,
13871,code review feedback,
13872,make check fixes,
13873,code review feedback,
13874,keep state store functions in one file,
13875,fix up go check warnings,
13876,add client side emitting of node events,Changelog
13877,batch submitting node events,
13878,code review feedback,
13879,move all structs to structs file,
13880,add node id to tests; check for node events in state store,
13881,Ensure node updates don't strip node events,Add node events to CLI
13882,code review feedback,
13883,move adding node registration event to the state store,
13884,fix up error logging,
13885,"RPC, FSM, state store for Node.EmitEvent",add node event when registering a node for the first time
13886,NodeEvents struct,
13887,Update tests to reflect new breadcrumbs,
13888,Make task page breadcrumbs extend the allocation breadcrumbs,
13889,Make allocation pages extend the job breadcrumb trail,
13890,Fix a bug where job links didn't always include the namespace QP,
13891,QueryParams primitive ported with a helper,"This QueryParams object is defined in Ember source, but it isn't public, which means there is no out of the box way to construct the query params arg for LinkTo in JavaScript"
13892,Correctly wire up job relationships,
13893,Fix incorrect comment,
13894,Address some code review comments,
13895,Return the err from server correctly,
13896,Code review comment,
13897,Remove error wrapping and make vault connection server side errors clearer.,
13898,Slightly better wording on CHANGELOG,
13899,Update CHANGELOG,
13900,Merge pull request #3972 from hashicorp/b-blocked-evals-namespace,Fix bug with not including namespace in indexing blocked evals
13901,Fix bug with not including namespace in indexing blocked evals,
13902,docs: fix typo tls_cert_file -> cert_file,
13903,Merge pull request #3958 from simplesurance/swappiness,fix: disable swap for executor_linux allocations
13904,Add #3958 to changelog,
13905,fix: disable swap for executor_linux allocations,"A comment in the nomad source code states that swapping for executor_linux allocations is disabled but it wasn't. Nomad wrote -1 to the memsw.limit_in_bytes cgroup file to disable swapping. This has the following problems: 1.) Writing -1 to the file does not disable swapping. It sets     the limit for memory and swap to unlimited. 2.) On common Linux distributions like Ubuntu 16.04 LTS the     memsw.limit_in_bytes cgroup file does not exist by default.     The memsw.limit_in_bytes file only exist if the Linux kernel is     build with CONFIG_MEMCG_SWAP=yes and either     CONFIG_MEMCG_SWAP_ENABLED=yes or when the kernel parameter     swapaccount=1 is passed during boot.     Most Linux distributions disable swap accounting by default because     of higher memory usage.     Nomad silently ignores if writing to the memsw.limit_in_bytes file     fails. The allocation succeeds, no message is logged to notify the     user. To ensure that disabling swap works on common Linux kernels, disable swapping by writing 0 to the memory.swappiness file. Using the memory.swappiness file only requires that the kernel is compiled with CONFIG_MEMCG=yes. This is the default in common Linux kernels."
13906,Fix merge change,
13907,changelog,
13908,Merge pull request #3890 from hashicorp/b-heartbeat,Heartbeat improvements and handling failures during establishing leadership
13909,Merge pull request #3966 from hashicorp/b-existent,non-Existent -> nonexistent
13910,non-Existent -> nonexistent,Reverting from #3963 https://www.merriam-webster.com/dictionary/existent
13911,Revert spelling corrections in generated code,
13912,Merge pull request #3963 from jsoref/spelling,Spelling
13913,Merge pull request #3965 from hashicorp/fix_vendoring_ginkgo,Add missing deps needed for ginkgo
13914,Add missing deps needed for ginkgo,
13915,spelling: website,
13916,spelling: version,
13917,spelling: verify,
13918,spelling: variable,
13919,spelling: usually,
13920,spelling: usage,
13921,spelling: update,
13922,spelling: unmarshal,
13923,spelling: unknown,
13924,spelling: unexpected,
13925,spelling: triggered,
13926,spelling: transition,
13927,spelling: thresholds,
13928,spelling: terminated,
13929,spelling: templates,
13930,spelling: system,
13931,spelling: supports,
13932,spelling: summary,
13933,spelling: submitted,
13934,spelling: strategy,
13935,spelling: significantly,
13936,spelling: shutdown,
13937,spelling: severity,
13938,spelling: services,
13939,spelling: service,
13940,spelling: server,
13941,spelling: serialize,
13942,spelling: semantics,
13943,spelling: secrets,
13944,spelling: scheduling,
13945,spelling: sanitize,
13946,spelling: safety,
13947,spelling: routines,
13948,spelling: rolling,
13949,spelling: retrieving,
13950,spelling: retrieved,
13951,spelling: response,
13952,spelling: resource,
13953,spelling: rescheduling,
13954,spelling: reschedule,
13955,spelling: reschedulable,
13956,spelling: requeuing,
13957,spelling: requested,
13958,spelling: request,
13959,spelling: represents,
13960,spelling: replace,
13961,spelling: removes,
13962,spelling: remnants,
13963,spelling: registry,
13964,spelling: registrations,
13965,spelling: referenced,
13966,spelling: queryable,
13967,spelling: purposes,
13968,spelling: propagated,
13969,spelling: programmatically,
13970,spelling: privileged,
13971,spelling: primitive,
13972,spelling: previous,
13973,spelling: preferring,
13974,spelling: preemptively,
13975,spelling: policies,
13976,spelling: periodically,
13977,spelling: periodic,
13978,spelling: passed,
13979,spelling: partitioned,
13980,spelling: parameterized,
13981,spelling: parallelism,
13982,spelling: output,
13983,spelling: otherwise,
13984,spelling: operator,
13985,spelling: only,
13986,spelling: occurring,
13987,spelling: needed,
13988,spelling: namespace,
13989,spelling: mount,
13990,spelling: monotonically,
13991,spelling: missing,
13992,spelling: minimum,
13993,spelling: malicious,
13994,spelling: maintenance,
13995,spelling: largely,
13996,spelling: labels,
13997,spelling: isolation,
13998,spelling: invoke,
13999,spelling: interpolation,
14000,spelling: interface,
14001,spelling: inspect,
14002,spelling: initialization,
14003,spelling: incremented,
14004,spelling: identifying,
14005,spelling: idempotent,
14006,spelling: heartbeating,
14007,spelling: healthy,
14008,spelling: hashicorp,
14009,spelling: fingerprint,
14010,spelling: feasibility,
14011,spelling: expected,
14012,spelling: existent,
14013,spelling: exhausted,
14014,spelling: executor,
14015,spelling: example,
14016,spelling: evaluation,
14017,spelling: evaluate,
14018,spelling: environment,
14019,spelling: enqueuing,
14020,spelling: enforcement,
14021,spelling: encountered,
14022,spelling: eligible,
14023,spelling: each other,
14024,spelling: each,
14025,spelling: down,
14026,spelling: documentation,
14027,spelling: disable,
14028,spelling: directory,
14029,spelling: details,
14030,spelling: destruction,
14031,spelling: destroy,
14032,spelling: describing,
14033,spelling: deregister,
14034,spelling: deployments,
14035,spelling: deployment,
14036,spelling: deferring,
14037,spelling: default,
14038,spelling: current,
14039,spelling: could,
14040,spelling: corresponding,
14041,spelling: correlate,
14042,spelling: cores,
14043,spelling: convenience,
14044,spelling: controls,
14045,spelling: constraints,
14046,spelling: conjunction,
14047,spelling: configurations,
14048,spelling: configuration,
14049,spelling: concatenated,
14050,spelling: commits,
14051,spelling: command,
14052,spelling: cleanup,
14053,spelling: cause,
14054,spelling: captures,
14055,spelling: canonicalize,
14056,spelling: canonical,
14057,spelling: cancelled,
14058,spelling: cancelable,
14059,spelling: campaign,
14060,spelling: breadcrumb,
14061,spelling: bootstrap,
14062,spelling: available,
14063,spelling: autorevert,
14064,spelling: autocompleting,
14065,spelling: authoritative,
14066,spelling: asynchronously,
14067,spelling: assert,
14068,spelling: artifact,
14069,spelling: arguments,
14070,spelling: arbitrary,
14071,spelling: appropriate,
14072,spelling: annotated,
14073,spelling: alternative,
14074,spelling: already,
14075,spelling: allocation,
14076,spelling: alloc,
14077,spelling: advertise,
14078,spelling: admitting,
14079,spelling: address,
14080,spelling: added,
14081,spelling: abandoned,
14082,Merge pull request #3959 from hashicorp/ginkgo-e2e,End to end tests using ginkgo
14083,Add README and other review feedback,
14084,Initial commit of end to end tests integration tests for rescheduling using ginkgo,
14085,Fix error message string in test,
14086,Update CHANGELOG.md,
14087,Merge pull request #3957 from hashicorp/b-vault-retry,Retry validating token from vault till success
14088,Update error message,
14089,update comment,
14090,Always retry on token validation instead of special casing vault sealing,
14091,Merge pull request #3956 from hashicorp/b-ui-placement-failures-persist,Only show the placement failures section if there is a blocked eval
14092,Retry when vault is sealed,
14093,Only show the placement failures section if there is a blocked eval,
14094,Merge pull request #3936 from hashicorp/f-ui-polling,UI: Live updating views
14095,Merge pull request #3953 from hashicorp/f-ui-polling-disconnect,UI: Polling Step 3 - Close connections when tabbing away
14096,Better define mixin contracts,
14097,Merge pull request #3910 from csawyerYumaed/patch-2,"Template docs, add vault PKI integration example."
14098,Add hcl style to template block; fix interpolation,Also sneak in a schmichael -> hashicorp fix in a url
14099,Fix a bug where namespace filter is incorrect for the jobs list,
14100,Don't let aborted requests redirect to error,
14101,Change from the setupController hook to the new startWatchers hook,
14102,Toggle polling in components when switching away from the tab,
14103,Wire up the job summary,
14104,New mixins for managing tab visibility effects,
14105,Merge pull request #3938 from hashicorp/f-ui-polling-everywhere,UI: Polling Step 2 - Polling on all views
14106,Update CHANGELOG.md,
14107,Update CHANGELOG.md,
14108,Merge pull request #3941 from hashicorp/b-server-members-failed-region,Ignore left members when querying regions for leaders
14109,Merge pull request #3946 from hashicorp/d-update-readme-scale,Add Built for Scale and Flexible Workloads sections to README
14110,Oxford comma-ing,
14111,Merge pull request #3947 from hashicorp/je.fixes,A couple small website fixes
14112,add 'HashiCorp' before 'Nomad' on first instance on homepage,also update dependencies and middleman-hashicorp
14113,Revert accidental master pushes,
14114,update dependencies and middleman-hashicorp,
14115,add 'HashiCorp' before 'Nomad' on first instance on homepage,
14116,Add Built for Scale and Flexible Workloads sections to README.,
14117,Merge pull request #3909 from hashicorp/b-node-attributes-concurrent-access,Fingerprinters accessing node information should be thread safe
14118,Merge pull request #3944 from hashicorp/f-vendor-gopsutil,Vendored gopsutil to fix partial vendoring
14119,Merge pull request #3943 from hashicorp/d-add-scale-numbers,Add cluster size scale numbers to Intro page
14120,Vendored gopsutil to fix partial vendoring,
14121,Add note about cluster sizes to Built for Scale section.,
14122,Ignore left members when querying regions for leader in server-members command.,
14123,Incorporate review wording changes,Added text from review comments per @csawyerYumaed.
14124,Patch tests,
14125,Use willTransition instead of deactivate to cancel requests,"deactivate happens after the new route's model hook, which results in the possibility of canceling new requests right after they are made rather than existing open connections"
14126,Watch node and related allocations on the client detail page,
14127,Move node watching to the index page,It doesn't need to impact the entire route hierarchy
14128,Watch the allocation on the allocation and task pages,
14129,"Watch job, job-summary, and job-allocs on the task group page",
14130,Move jobs polling from jobs to jobs.index,"It's only necessary for the list view, not the entire route hierarchy"
14131,Add polling to the deployments page,
14132,Move job watchers to job.index,"They are only for the overview page, not the whole hierarchy"
14133,Cancel a watch request before making an identical one,
14134,Watch job versions,
14135,Fix preexisting bugs that only surfaced once live updating started,
14136,Go through the expected normalization paths when watching relationships,
14137,Watch nodes and allocs on the nodes list page,
14138,Merge pull request #3927 from alvin-huang/pin_assert,pin github.com/stretchr/testify/assert in vendor.json
14139,Merge pull request #3893 from hashicorp/f-ui-polling-foundation,UI: Background Polling Step 1 - Foundational support & jobs
14140,Address headers and ID bugs,
14141,Set slices after merging the selection,
14142,"Json viewer isn't side effect free, so use a copy",
14143,Add tests for findHasMany store culling,
14144,Add tests for findAll store culling,
14145,Tests for watching and canceling requests,
14146,Watchable request helper for Mirage,
14147,Fix existing tests,
14148,Generalized solution for removing records in the local store,When the findAll response from the server no longer has them.
14149,Cancel watch tasks when appropriate,
14150,Watch properties cancel long poll requests,
14151,Track xhrs in the watchable adapter and expose cancellation methods,
14152,Remove stale records from the store for findHasMany requests,
14153,Watch for summary changes in job-row,
14154,Watch all records on the jobs list page,
14155,Remove records from the store when they are no longer in array responses,"Ember Data doesn't do this by default, instead opting to be as non-destructive as possible. However, this is desired behavior."
14156,Blocking query support for findAll requests,
14157,Make the throttle time configurable,
14158,Add a watchAll computed property macro,
14159,Fix distribution-bar bugs found with live data," Key data using datum label   (when something goes from number, to zero, to number again) Retain active and inactive classes across data updates"
14160,Move watch tasks into a utils file,
14161,Prototype watching resources, Service to manage X-Nomad-Index values Adapter method for reloading relationships with additional params Pattern for watching models and model relationships using EC
14162,Re-render chart whenever data changes,
14163,Refactor job summary to a relationship,"Now that blocking queries are going to be in play, We can no longer pretend the two requests are one, since they have independent nomad indices."
14164,Merge pull request #3908 from hashicorp/f-ui-route-client-requests-through-server,UI: Take advantage of client request tunneling
14165,pin github.com/stretchr/testify/assert in vendor.json,
14166,Merge pull request #3873 from hashicorp/r-edge-trigger-node-watcher,Edge trigger node updates
14167,simplify retry logic,
14168,Merge pull request #3917 from jaininshah9/master,changing the formula to correctly pass the CPUQota to docker
14169,adding comments to the change,
14170,Fix go vet errors,
14171,fix up linting,
14172,reset timer after updating node copy,
14173,"In the event the server also times out, show an error message",
14174,changing the formula to correctly pass the CPUQota to docker,
14175,Merge pull request #3912 from maihde/issue-3881,"Update vendor package github.com/shirou/gopsutil/process, resolves #3881"
14176,"add network resources equal method, use time ticker",remove impossible test case
14177,"Update vendor package github.com/shirou/gopsutil/process, resolves #3881",
14178,Merge pull request #3845 from hashicorp/f-ui-node-meta,UI: Add client meta attributes to the client detail page
14179,Cleanup following review,
14180,"use time ticker, update how network resources are compared",
14181,Merge pull request #3889 from hashicorp/f-reconciler-bugfix,Fixes bug in reconciler where previously rescheduled allocs
14182,improved testing; node networks comparison,
14183,"Template docs, add vault PKI integration example.","Update the template documentation, and add a vault PKI integration example."
14184,fingerprinters accessing node information should be thread safe,
14185,Fallback to using the nomad server for log streaming,Only when the client isn't accessible
14186,Get client stats through the server agent,
14187,Merge pull request #3897 from hashicorp/f-docs-command-with-output,Removed text between command and output
14188,Merge pull request #3902 from filipochnik/patch-1,Add missing backticks in cap_add and cap_drop docs
14189,code review fixups,
14190,edge trigger node update,test update config copy trigger
14191,Add missing backticks in cap_add and cap_drop docs,
14192,Removed text between command and output,Removed some low-value text between the example command and the sample output.
14193,Merge pull request #3704 from matosf/patch-1,removed duplicate stats command from output
14194,Removing text between command and output,Per @dadgar's review and @matosf yielding in comments so we can get this correction merged.
14195,Pull in new autopilot,
14196,logging,
14197,Merge branch 'master' of github.com:hashicorp/nomad,
14198,changelog,
14199,Disables verbose mode in travis,
14200,Merge pull request #3892 from hashicorp/f-tunnel,"Client RPC Endpoints, Server Routing and Streaming RPCs"
14201,Merge pull request #3877 from hashicorp/f-tls,Add TLS to streaming RPCs
14202,Fix flaky test,
14203,add a revoke leadership test,
14204,Need to revoke leadership to clean up in case there was a failure during leadership establishment,
14205,Fix leaking time.After function,
14206,timers,
14207,Add escape hatches when non-leader,
14208,Fixes bug in reconciler where previously rescheduled allocs are rescheduled again. Simplified logic and added test case to catch this.,
14209,Increase maximum ACL token length,This mitigates issues when generating Nomad ACL tokens from Vault.
14210,Merge pull request #3867 from c4milo/patch-1,docs: Fix a very small typo
14211,Merge pull request #3887 from johncowen/d-metrics-404-link,Fix erroneous metrics link + code block typo on the metrics page
14212,Fix erroneous metrics link + code block typo on the metrics page,
14213,Registering back to initializing,"Fix a bug in which if the node attributes/meta changed, we would re-register the node in status initializing. This would incorrectly trigger the client to log that it missed its heartbeat. It would change the status of the Node to initializing until the next heartbeat occured."
14214,Show HTTP request method,
14215,vet,
14216,Fix original client server list behavior,
14217,remove tmp file,
14218,Fix autopilot tests,
14219,fix unknown rpc tests,
14220,Client tls,
14221,Server TLS,
14222,doc improvements,
14223,add logging,
14224,improve test,
14225,fix test,
14226,Fix incorrect deletion of node conn,"This PR fixes an issue where if the client has multiple connections to a server, a single connection closing would cause the routing to the node to be lost."
14227,allow setting timeout on any api config,
14228,Update client2.hcl,
14229,Enhance API pkg to utilize Server's Client Tunnel,This PR enhances the API package by having client only RPCs route through the server when they are low cost and for filesystem access to first attempt a direct connection to the node and then falling back to a server routed request.
14230,fix flaky gc tests,
14231,feedback and rebasing,
14232,Use helper for forwarding,
14233,HTTP agent,
14234,Server side impl + touch ups,
14235,client implementation of alloc gc and stats,
14236,Refactor determining the handler for a node id call,
14237,Code review feedback,
14238,clarify force,
14239,Streaming helper,
14240,Respond to comments,
14241,Document server handling of client endpoints,This PR adds API documentation noting the change in 0.8 where servers can handle client endpoints and annotated the endpoints that now have an optional parameter to specify the node_id.
14242,Implement MultiplexV2 RPC handling,Implements and tests the V2 multiplexer. This will not be used until several versions of Nomad have been released to mitigate upgrade concerns.
14243,Add Streaming RPC ack,This PR introduces an ack allowing the receiving end of the streaming RPC to return any error that may have occured during the establishment of the streaming RPC.
14244,remove changes to the demo clients,
14245,vet,
14246,move error,
14247,HTTP and tests,
14248,Server implementation of stream,
14249,Client implementation of stream,
14250,Server stat/list impl,
14251,Client Stat/List impl,
14252,Agent logs,
14253,client tests,
14254,Server tests of logs,
14255,Forwarding,
14256,Refactor client RPCs from server,
14257,Remove logging,
14258,test stream framer,
14259,Server streaming,
14260,Logs over RPC w/ lots to touch up,
14261,New RPC Modes and basic setup for streaming RPC handlers,
14262,wip fs endpoint,
14263,Use in-mem rpc,
14264,Remove circular dependency,
14265,fix lint,
14266,Fix manager tests and make testagent recover from port conflicts,
14267,Fix lint/comments,
14268,Unjankify the pkg,
14269,initial round of comment review,
14270,Plumb config,
14271,Change defaults for min use duration,
14272,SetServer command actually returns an error if given an invalid server,
14273,use server manager,
14274,code review,
14275,Forwarding,
14276,Add RPC for querying for Node connections,
14277,Store connection time,
14278,Remove testing,
14279,Use nomad UUID,
14280,Test http,
14281,Test RPC from server,
14282,Refactor,
14283,Add testing interfaces,
14284,Server can forward ClientStats.Stats,
14285,RPC Listener,
14286,Stats Endpoint,
14287,Pull inmem codec to helper,
14288,Conn Pool can emit new connections to listeners.,This PR enables the client to listen for new connections and then bind an RPC listener to each connection in an upcoming PR.
14289,Store the whole verified certificate chain,
14290,Track client connections,
14291,Improve TLS cluster testing,
14292,Dynamic RPC servers with context,
14293,Helper to populate RPC server endpoints,
14294,Merge pull request #3872 from hashicorp/b-remove-invalid-gitattrs,Remove invalid gitattributes
14295,fixing box timeout issue waiting for interfaces,
14296,Remove invalid gitattributes,alpine.qcow2 is not tracked by LFS so the attribute will cause an error. Remove the attribute and add a note to make sure no one tries to track existing files again.
14297,Merge pull request #3852 from hashicorp/autopilot-cleanup,Clean up some leftover autopilot differences from Consul
14298,Merge pull request #3870 from hashicorp/travis_show_failing_testname,Make tests in travis be verbose
14299,Make tests in travis be verbose,
14300,Merge pull request #3868 from hashicorp/f-server-side-restarts,server side rescheduling
14301,Fix a very small typo,
14302,Merge pull request #3807 from hashicorp/f-client-add-fingerprint-manager,Add fingerprint manager to manage fingerprinting node
14303,extract test helper,lock concurrent accesses to node comment exported method
14304,Merge pull request #3819 from schmichael/qemu-graceful-shutdown-alpine,Test QEMU graceful shutdown
14305,Merge pull request #3864 from hashicorp/improve-check-docs,Clarify that check names are auto generated.
14306,Merge pull request #3853 from hashicorp/docs-datacenter-faq,Clarify Nomad dc vs Consul dc
14307,Improve test logging,
14308,Clarify Nomad dc vs Consul dc,
14309,Nicer names,
14310,Add check names to multiple checks example,
14311,Clarify that check names are auto generated.,
14312,Merge pull request #3824 from hashicorp/f-rescheduling-docs,Docs for rescheduling
14313,Missed reschedule policy documentation in json-jobs page,
14314,Merge pull request #3825 from jaininshah9/master,add a flag for cpu_hard_limit
14315,docker: add cpu_hard_limit docs,
14316,Merge branch 'master' into f-cpu_hard_limit,
14317,Merge pull request #3846 from flyinprogrammer/driverctx,drivers: use ctx.TaskEnv for mount points
14318,changelog,
14319,Merge pull request #3855 from hashicorp/b-cv-vendor-sockaddr,Vendored go-sockaddr and go-sockaddr/template
14320,drivers: use ctx.TaskEnv for mount points,
14321,Clean up some leftover autopilot differences from Consul,
14322,Vendored go-sockaddr and go-sockaddr/template,
14323,More review feedback,
14324,removing underscore in variable name,
14325,code review feedback,
14326,remove dependency on client for fingerprint manager,
14327,add fingerprint manager,
14328,Switches to HashiCorp fork of jteeuwen/go-bindata.,"We make a HashiCorp hard fork of the jteeuwen/go-bindata hard fork that was replaced and diffed the code against a Dec 1, 2015 copy of the original repository we had as a cross-check of that hard fork. This replaces references to jteeuwen/go-bindata to point to the HashiCorp fork."
14329,"clearing the confusion between microsecond,nanosecond and millisecond",
14330,Refactor node meta table, Use existing serializer and components Add acceptance test Add empty state
14331,Meta params table in Client view,
14332,Merge pull request #3829 from hashicorp/f-ui-specialized-job-pages,UI: Specialized Job Detail Pages
14333,using d.node.Resources.CPU as suggested,
14334,Add changelog entry for #3839,
14335,Merge pull request #3839 from circleci/dogstatsd-tags,Add tags option to datadog telemetry
14336,Always shutdown the mirage server,
14337,Inject system so namespace shows up on job detail components,
14338,Integration test for periodic job force launch,
14339,New module-for-job for acceptance testing job detail differences,
14340,Tests for the task groups job page part,
14341,Tests for the summary job page part,
14342,Tests for the placement failures job part,
14343,Running deployment job page part tests,
14344,Job part evaluations test,
14345,Job part children tests,
14346,Integration tests for the body job part,
14347,Update job factory to use traits for specifying job type,
14348,Trim the parent job prefix off the child job names when displaying them,
14349,State periodic or parameterized as the job type when applicable,
14350,Clean up force launch button,
14351,Differentiate between no search matches and no allocs on task group page,
14352,Add ability to force a periodic job launch,
14353,"For now, the system job is identical to the service job",
14354,Payload details for the parameterized child job detail page,
14355,Elastic mode for cli window component,
14356,Breadcrumbs for the periodic child job page,
14357,Bring payload in from the job api response,
14358,Paginated and sortable table for job launches/children jobs,
14359,New job page components for parent jobs and batch jobs,
14360,Fleshing out job page parts and differences,
14361,Recreate the service job detail page using job part components,
14362,Deconstruct the existing job detail page into common parts,This is to later compose job detail page variations
14363,Review feedback,
14364,Add tags option to datadog telemetry,"Expose an global tags option in telemetry config for dogstatsd, for purposes of distinguishing between multiple nomad cluster metrics."
14365,Add paragraph about rescheduling during deployments,
14366,Documentation for reschedule attempts in CLI/API,
14367,Start of documentation for reschedule stanza,
14368,Handle the difference between parameterized on single and list responses,
14369,Computed a template type for a job,"This is a composite of scheduler type, batch variations, and children v. template"
14370,Fix lint-staged paths,"Paths now start from package.json location, not project root."
14371,Use the children summary instead of alloc summary when applicable,
14372,Specialized children-status-bar variant of the allocation-status-bar,
14373,Model the parent/child relationship in jobs,
14374,Filter child jobs out of the root jobs list,
14375,Merge pull request #3777 from johncowen/f-ui-api-task-events-messages,UI: Make task-events use the module from the API rather than hardcoded
14376,Merge pull request #3790 from 42wim/dockerv6,Service registration for IPv6 docker addresses (Fixes #3785)
14377,Add changelog entry for #3790,
14378,docker: Skip IPv6 test if IPv6 disabled,
14379,Fixes nomad validate that broke when changing default values in example.nomad,
14380,Merge pull request #3830 from hashicorp/f-failed-allocs-during-deploy,Reconciler should consider failed allocs when marking deployment as failed
14381,Clarify comment,
14382,Reconciler should consider failed allocs when marking deployment as failed.,
14383,Fix tests broken by default change to RestartPolicy,
14384,Merge pull request #3781 from hashicorp/f-client-fingerprint-refactor,Refactor client fingerprinters to return a diff of node attributes
14385,update log message,
14386,req/resp should be within config locks; rename for detected fingerprints,changelog
14387,Merge pull request #3821 from hashicorp/f-restart-stanza-fail-default,Change the default mode for client side restarts to fail from delay
14388,jobspec not core in changelog,
14389,Fix link,
14390,Add AdvertiseIPv6Address test,
14391,Add IPv6 support to travis docker,
14392,wrapping the line to less than 80 characters,
14393,changes after running go fmt,
14394,add a flag for cpu_hard_limit,
14395,fix up linting,
14396,add detected to more drivers where the driver is found but unusable,
14397,Update documentation,
14398,Skip QEMU graceful shutdown test except on Travis,Hopefully we can reuse the SkipSlow helper elsewhere.
14399,code review fixup,
14400,Test graceful shutdown,"Uses an Alpine image which supports ACPI poweroff signal handling. Handling is only enabled after the VM has booted, so this test blocks until sshd starts before issuing the command."
14401,,Change use_ipv6_address to advertise_ipv6_address. Set autoadvertise to true. Update documentation.
14402,Fix nomad init to use default values for restart stanza,
14403,Update CHANGELOG to add info on restart policy defaults changing,
14404,"Reuse default policy structs in api, and other code review feedback",
14405,update changelog,
14406,add applicable boolean to fingerprint response,public fields and remove getter functions
14407,fix changelog entry,
14408,Change the default mode for client side restarts to fail from delay,
14409,Code review feedback and more test cases,
14410,Consider dead job status and modify unit test setup for correctness,
14411,"Use next alloc id being set, move outside structs package and other code review feedback",
14412,Unit test for alloc struct's GCEligible method,
14413,Make garbage collection be aware of rescheduling info in allocations,
14414,Remove unnecessary newlines,
14415,Unit test for alloc struct's GCEligible method,
14416,Make garbage collection be aware of rescheduling info in allocations,
14417,Code review feedback,
14418,code review feedback,
14419,Flaky contains check replaced with regex,
14420,Always show reschedule tracking and next alloc id in alloc status,
14421,Show info about remaining reschedule attempts relative to alloc modify time,
14422,Add method on API alloc to calculate attempted and remaining reschedule events,
14423,Show some information about rescheduling in alloc-status cli,
14424,Add a field to track the next allocation during a replacement,
14425,"Track previous node id correctly, plus unit test",
14426,Add more clarification in comment,
14427,Preallocate slice for skipped nodes,
14428,Better score threshold,
14429,Add one more unit test,
14430,Limit iterator uses a score threshold and a maxSkip value to be able to skip lower scoring nodes,
14431,Fix logging levels per code review,
14432,Remove unused method,
14433,replace err with warn,
14434,s/assert/require/g,
14435,Remove extra fields set in client allocations during update,
14436,Address code review comments,
14437,Fix linting,
14438,Fix flaky test that fails when there is CPU contention,
14439,Add RescheduleTracker to allocations API struct,
14440,Fix unit test,
14441,"Add reschedule policy to API, and HCL parsing support.",
14442,"Clean up comments, and one more unit test",
14443,Reconcile against reschedule tracker api changes,
14444,Edge trigger evaluation when allocations client status is failed,
14445,Beef up unit test for rescheduling batch jobs,
14446,Address more code review feedback,
14447,Make sure that reschedule trackers are not added for node drain replacements,
14448,Improve reconciler unit tests,
14449,Prevent side effect modification of select options when preferred nodes are set,
14450,"Add helper methods, use require and other code review feedback",
14451,Reconile with changes to structs for reschedule tracking,
14452,"Fix some comments and lint warnings, remove unused method",
14453,Reschedule previous allocs and track their reschedule attempts,
14454,Named fields in unit test and one more test case,
14455,Clean up the copy method + unit test,
14456,Wrap reschedule events in another struct and other review feedback,
14457,Export RescheduleEligible method for accessibility from UpdateAlloc endpoint,
14458,Add comment,
14459,"New structs and methods for reschedule policy, reschedule tracking and unit tests",
14460,Merge pull request #3798 from simar7/qemu-graceful-shutdown-bug,[QEMU] Fixing an unintentional variable shadowing
14461,Merge pull request #3812 from hashicorp/autopilot-config-change,Refactor redundancy_zone/upgrade_version out of client meta
14462,Fix autopilot guide example,
14463,Fix remaining issues with autopilot change,
14464,Add changelog entry for #3773,
14465,Merge pull request #3817 from hashicorp/d-3814-changelog,Changelog for PR #3814
14466,Merge pull request #3773 from mikemccracken/2018-01-18/destroy-container-on-err,lxc: cleanup partially configured containers after errors in Start
14467,changelog for PR 3814,
14468,Merge pull request #3814 from jrasell/f_gh_3806,Update CLI to use ISO_8601 time format.
14469,Merge pull request #3334 from hashicorp/f-vault-acl,Vault Secret Backend
14470,Mention minimum Vault version,
14471,Minor formatting/style updates,
14472,locks for fingerprint reads/writes,
14473,Service registration for IPv6 docker addresses,
14474,Update CLI to use ISO_8601 time format.,This change updates the formatTime CLI helper function to return an ISO_8601 time format which will make CLI time usage more consistent and easier. Previosuly the time format was in US style format which was somewhat confusing to non US users. Closes #3806
14475,Refactor redundancy_zone/upgrade_version out of client meta,
14476,Merge pull request #3684 from jrasell/f_gh_3678,Update module verbose command to include node address.
14477,Merge pull request #3799 from mikemccracken/2018-01-25/lxc-log-outside-container,lxc: move lxc log file out of container-visible alloc dir
14478,remove attributes from periodic fingerprints when state changes,write test for client periodic fingerprinters
14479,changelog,
14480,Merge pull request #3802 from filipochnik/docker-readonly-rootfs,Add ReadonlyRootfs option to the Docker driver
14481,Merge pull request #3809 from hashicorp/cv-docs-unrock-nomad,Changed module to module to align with defaults.  Closes #3808
14482,Merge pull request #3805 from kinvolk/indradhanush/remove-underscores-from-variable-names,rkt_test.go: Remove underscore from variable names
14483,Changed module to module to align with defaults,Should provide cut and paste example for most users. Advanced users should be able to correct URLs to something appropriate.
14484,rkt_test.go: Remove underscore from variable names,
14485,Add ReadonlyRootfs option to the Docker driver,
14486,create safe getters and setters for fingerprint response,
14487,"Remove module, module and module", module and module are safe to remove see https://github.com/hashicorp/nomad/blob/64e9cf9/nomad/structs/structs.go#L3979-L3986
14488,fixups from code review,
14489,qemu: Make the driver debugging output more indicative,Signed-off-by: Simarpreet Singh link
14490,qemu: Fix unintentional shadowing of monitorPath variable,Signed-off-by: Simarpreet Singh link
14491,Merge pull request #1 from hashicorp/master,merging from upstream
14492,lxc: move lxc log file out of container-visible alloc dir,"The LXC runtime's log file is currently written to TaskDir.LogDir, which is mounted as alloc/logs inside the containers in the task group. This file is not intended to be visible to containers, and depending on the log level, may have information about the host that a container should not be allowed to see. Signed-off-by: Michael McCracken link"
14493,fix speling in log,Signed-off-by: Michael McCracken link
14494,add test case for available cgroups,
14495,Merge pull request #3795 from hashicorp/f-next-alloc,Track next allocation
14496,Add test case to verify setting next alloc id correctly,
14497,Add a field to track the next allocation during a replacement,
14498,Link sentinel docs,
14499,refactor Fingerprint to request/response construct,
14500,Merge pull request #3787 from hashicorp/server-health-loop,Move server health loop into autopilot leader actions
14501,review cleanup,"don't export an internal function, and simplify some code Signed-off-by: Michael McCracken link"
14502,changelog,
14503,Merge pull request #3788 from hashicorp/f-entrypoint,Allow overriding an image's entrypoint in Docker
14504,Allow overriding an image's entrypoint in Docker,Fixes https://github.com/hashicorp/nomad/issues/2219
14505,Move server health loop into autopilot leader actions,
14506,changelog,
14507,Merge pull request #3754 from filipochnik/docker-caps,Add an option to add and drop capabilities in the Docker driver
14508,Introducing @schmichael suggestions,
14509,Merge pull request #3492 from hashicorp/f-client-tls-reload,Client/Server TLS dynamic reload
14510,Document the ALL value for docker.caps.whitelist,
14511,add changelog,
14512,Merge branch 'master' of github.com:/hashicorp/nomad into f-vault-acl,
14513,Merge pull request #3682 from hashicorp/b-3681-always-set-driver-ip,Always advertise driver IP when in driver mode
14514,Merge pull request #3760 from angrycub/f-allow-dot-envvar,Allow module in Environment Variable Names
14515,Update changelog for dot env vars,
14516,Update go-envparse to allow dots in env vars,Includes hashicorp/go-envparse#2
14517,Allow module in Environment Variable Names,"From link:  environment (list of objects, optional) represents the app's environment variables (ACE can append). The listed objects must have two key-value pairs: name and value. The name must consist solely of letters, digits, and underscores '_' as outlined in IEEE Std 1003.1-2008, 2016 Edition, with practical considerations dictating that the name may also include periods '.' and hyphens '-'. The value is an arbitrary string. These values are not evaluated in any way, and no substitutions are made.  Dotted environment variables are frequently used as a part of the Spring Boot pattern. (re: ZD-6116) This PR specifically doesn't address the conversion of hyphens (module) due to an issue with rkt link."
14518,Merge pull request #3765 from kinvolk/indradhanush/developing-docs,Docs: Add command consul agent & fix nomad command
14519,specified version of raft should be master,
14520,Docs: Add command consul agent & fix nomad command,module is required to enable other drivers like rkt and java while the module flag enables the agent to run in a standalone mode.
14521,Fix moby package location,
14522,Merge branch 'master' into docker-caps,
14523,Merge branch 'master' into docker-caps,
14524,Finish implementation of the capabilities whitelist,
14525,swap raft layer tls wrapper,
14526,vendor raft to master branch,
14527,Update CHANGELOG.md,
14528,Merge pull request #3670 from hashicorp/autopilot,Add Autopilot feature from Consul
14529,Merge pull request #3769 from johncowen/f-componentize-placement-failures,Component-ize UI for placement failures
14530,Make task-events use the module from the API rather than hardcoded,The api has changed to send through a message for task-events. Use that instead of rendering a message from within js dependent on the task event type
14531,Address PR feedback, Extra whitespace Remove redundant code Remove redundant markup from test placement-failure should be used as an inline component Prefer module polyfill Use new `@ember' org style imports
14532,Add more assertions for basic message checking,
14533,"Add in data-test attrs to hook into, decide on test case granularity",
14534,"Pluralize test name for consistency (for filtering), inc test",
14535,"Move cleanWhitespace to utils, readd data-test attribute for PF's", cleanWhitespace > /test/utils/clean-whitespace.js Missd the data-test attribute for placement failures in previous conflict
14536,"Move placement failures to a component, begin separate integration tests", Simple move of placement-failures template code to a component Start adding integration tests - hit module surprise
14537,Merge pull request #3766 from hashicorp/b-example-service-name,Make example service name make sense
14538,lxc: cleanup partially configured containers after errors in Start,"If there are any errors in container setup after c.Create() in Start(), the container will be left around, with no way to clean it up because the handle will not be created or returned from Start. Added a wrapper that checks for errors and performs appropriate cleanup. Returning a cleanup function from a wrapped function instead of just doing the cleanup before returning the error helps to ensure that future changes that might add or change error exits can't forget to consider a cleanup function. Adds a check to the invalid config test case to check that a container created with an invalid config doesn't get left behind. Signed-off-by: Michael McCracken link"
14539,Add changelog entry for #3682,
14540,Drop log level to TRACE,For people not using driver networks these log lines would just be confusing.
14541,Improve invalid port error message for services,Related to #3681 If a user specifies an invalid port label when using address_mode=driver they'll get an error message about the label being an invalid number which is very confusing. I also added a bunch of testing around Service.AddressMode validation since I was concerned by the linked issue that there were cases I was missing. Unfortunately when address_mode=driver is used there's only so much validation that can be done as structs/structs.go validation never peeks into the driver config which would be needed to verify the port labels/map.
14542,Improve driver network logging,
14543,Fix test,
14544,Always advertise driver IP when in driver mode,Fixes #3681 When in drive address mode Nomad should always advertise the driver's IP in Consul even when no network exists. This matches the 0.6 behavior. When in host address mode Nomad advertises the alloc's network's IP if one exists. Otherwise it lets Consul determine the IP. I also added some much needed logging around Docker's network discovery.
14545,Formatting/test adjustments,
14546,Merge branch 'master' into autopilot,
14547,changelog,
14548,Merge pull request #3687 from mikemccracken/add-lxc-bindmounts,Add volumes config to LXC driver
14549,Merge pull request #3771 from mikemccracken/2018-01-18/fix-json-example,website: fix example json job
14550,Linkify CHANGELOG,
14551,lxc_test: add test for contents of file in bind-mounted dir,Ensure that bind mounting via the volumes config really did work. Signed-off-by: Michael McCracken link
14552,Simplify with gofmt -s,Signed-off-by: Michael McCracken link
14553,lxc: Add documentation for volumes support,Signed-off-by: Michael McCracken link
14554,lxc: add tests for volume support,Signed-off-by: Michael McCracken link
14555,lxc: Add config flag to disable volume support,Signed-off-by: Michael McCracken link
14556,Add volumes config to LXC driver,Allow lxc driver to accept bind mount config similarly to the docker driver. Includes some static sanity checks in Validate step Signed-off-by: Michael McCracken link
14557,website: fix example json job,Can't use the string syntax in json. Also fixes typo in curl example command. Signed-off-by: Michael McCracken link
14558,Merge pull request #3767 from hashicorp/f-update-nokogiri,update middleman-hashicorp
14559,Make example service name make sense,Switch from global-redis-check for the example job's service name to redis-cache. The former name is really confusing and someone finally called us out on it: https://groups.google.com/d/msg/nomad-tool/3RTh6CyYkWk/vEe_Sj7lAAAJ Also specifically mention that the module parameter is what is advertised in Consul.
14560,update middleman-hashicorp,
14561,Merge pull request #3665 from hashicorp/f-ui-upgrade-deps,UI: Upgrade dependencies
14562,Use Node 8,
14563,Add breadcrumbs to the styleguide,
14564,Reorganize the styleguide using components for sections,
14565,Add boxed-section component to the styleguide,
14566,Add basic elements to the styleguide,
14567,Add jumbo distribution bar to the styleguide,
14568,Move distribution bar styleguide material to a component,
14569,Move button styleguide material to a component,
14570,Fix syntax highlighting in the styleguide,
14571,Fix a class name bug in the distribution bar,
14572,A new place to put styles only the styleguide uses,
14573,Update the ember-freestyle dep,
14574,Run prettier on all files,"Since prettier updated, some files have out of date formatting."
14575,Upgrade lint-staged,
14576,Upgrade stale deps,
14577,Remove unused ui travis config,
14578,Add chrome to Travis,
14579,Use ember-test-selectors for integration tests,
14580,Upgrade testing related dependencies,
14581,Switch from phantomjs to headless chrome,
14582,Use data-test- selectors in acceptance tests,
14583,Adds the ember-test-selectors addon,
14584,Upgrade ember-cli-sass,
14585,Strengthen the .tag override selector,"In 0.5.2, Bulma excludes the body element from the selector to work around an issue with Wordpress."
14586,Remap $info to $blue,Bulma defaults $info to $cyan in 0.6.0
14587,Specify color overrides in navbar,Bulma 0.5.2 introduced color modifiers for navbar
14588,Upgrade bulma to latest (0.6.1),
14589,Replace nav with navbar,Bulma introduced navbar while deprecating nav in 0.4.3 Bulma removed deprecated nav in 0.6.0
14590,Replace custom breadcrumbs CSS with new Bulma provided CSS,
14591,Update variable names,
14592,Default to 100% wide tables,Bulma 0.5.0 makes tables auto by default and adds the full-width modifier.
14593,Upgrade Bulma to 5.0,
14594,Shuffle around styles to better organize around net new code and bulma overrides,
14595,allow for similar error messages for closed connections,
14596,Remove the MODEL_FACTORY_INJECTIONS cruft,
14597,Use the new ember modules imports,Generated with a codemode: https://github.com/ember-cli/ember-modules-codemod
14598,Lock down yarn version,
14599,Run ember out of node_modules,This locks the version to what's described in package.json
14600,Update the reason why the router service is still not used,
14601,Upgrade various minor dependencies,
14602,Upgrade ember-browserify to 1.2,
14603,Upgrade Ember CLI Mirage to 0.4.1,
14604,Never use native fetch when mirage is enabled,"Unfortunately, Mirage/Pretender don't support fetch"
14605,Upgrade to Ember Data 2.17,
14606,Upgrade to ember-cli 2.17 and ember 2.17,
14607,Disambiguate what to do with the child task for the task logger,linked tasks are killed when the parent task is killed.
14608,Don't warn intentional errors in tests,It's too noisy
14609,Don't dot twice after an @each,
14610,Never fetch a job with null as the namespace,
14611,fixing up raft reload tests,close second goroutine in raft-net
14612,Fix comments/text referring to consul,
14613,set killmode/killsignal in systemd example,"The default (control-group) kill mode in systemd will kill the associated executors, leading to a commonly seen behavior of nomad client restarts losing all current allocations. setting the KillSignal to SIGINT seems to be a reasonable default, and allows things like leave_on_interrupt to function"
14614,Merge pull request #3718 from hashicorp/b-3713-fix-check-restart,Fix service.check_restart stanza propagation
14615,Merge pull request #3751 from portworx/master,"Docs:  update volume-driver, reflecting a supported driver"
14616,Merge pull request #3761 from hashicorp/d-consul,Actually show Consul config defaults
14617,Update consul.html.md,
14618,Add raft remove by id endpoint/command,
14619,actually show defaults,
14620,feedback from code review,
14621,refactor creating a new tls configuration,
14622,adding additional test assertions; differentiate reloading agent and http server,
14623,Add a sketch of capabilities whitelist logic for the Docker driver,
14624,Add an option to add and drop capabilities in the Docker driver,
14625,Merge pull request #3747 from shantanugadgil/patch-2,'drain' node is a POST rather than a GET
14626,"Update volume-driver, reflecting a supported driver",
14627,Test listener uses freeport instead of static ports,
14628,Remove networking from basic resources,
14629,Merge pull request #3745 from hashicorp/cv-fix-typo-priviledge,Found more priviledge.
14630,'drain' node is a POST rather than a GET,'drain' node is a POST rather than a GET
14631,Found more priviledge.,priviledge -> privilege
14632,Merge pull request #3744 from filipochnik/remove-docs-duplicate,Remove duplicate docs entry for docker privileged option
14633,Remove duplicate docs entry for docker privileged option,
14634,Merge pull request #3742 from hashicorp/vagrant-updates,Update Consul/rkt/Vault in Vagrant
14635,Build all branches on travis,
14636,Use advertise addr not 'unique.network.ip' in verbose node-status,
14637,Merge pull request #3735 from hashicorp/docs-tls-demo,Add demo TLS certificates and configs
14638,changelog,
14639,Merge pull request #3727 from filipochnik/fix-gh-2832,Recognize renewing non-renewable Vault lease as fatal
14640,Merge pull request #3733 from hashicorp/d-merge-community-and-resources,Merge Community and Resources pages
14641,Merge pull request #3734 from hashicorp/f-update-terraform-to-0.7.1,"Update Terraform configs to use latest versions of Consul, Vault and Nomad"
14642,Merge pull request #3736 from ronalexssen/master,remove duplicate typo
14643,Update Consul/rkt/Vault in Vagrant,Needed to update Vault for #3334
14644,Merge pull request #3722 from hashicorp/b-3697,Fix HTTP code for permission denied errors
14645,Fix HTTP code for permission denied errors,"Fixes #3697 The existing code and test case only covered the leader behavior. When querying against non-leaders the error has an ""rpc error: "" prefix. To provide consistency in HTTP error response I also strip the ""rpc error: "" prefix for 403 responses as they offer no beneficial additional information (and in theory disclose a tiny bit of data to unauthorized users, but it would be a pretty weird bit of data to use in a malicious way)."
14646,remove duplicate typo,
14647,"Revert ""Remove mention of check_restart on service""",This reverts commit 758b98685be4a2997bd0bc54f55b73ac3d0365cc.
14648,"Revert ""Missed header mention of server.check_restart""",This reverts commit 8295f81dddf8b53c0b78707be6fddc6e30f95640.
14649,Invert and test CheckRestart merge logic,
14650,Move changelog entry from bug fix to feature,It was never really implemented to begin with
14651,Fix service.check_restart stanza propagation,"There was a bug in jobspec parsing, a bug in CheckRestart merging, and a bug in CheckRestart canonicalization. All are now tested."
14652,"Update AWS scripts and README to reflect latest, pre-built AMI",
14653,Merge pull request #3715 from hashicorp/docs-3685-changelog,Add #3685 to changelog
14654,Add demo TLS certificates and configs,As well as a brief readme and makefile for generating the certificates.
14655,Merge pull request #3723 from hashicorp/b-3702-chown-dirs,chown dirs when migrating ephemeral_disk data
14656,add documentation,
14657,Merge pull request #3730 from hashicorp/cv-typo-privilege,Fix typo
14658,Test streamed directory ownership,
14659,chown dirs when migrating ephemeral_disk data,Fixes #3702 Added missing chown call and made it conditional on running as root and not on Windows as we do with files.
14660,"Use latest versions of Consul, Vault and Nomad",
14661,Merge pull request #3728 from hashicorp/b-3701-fetch-tls,Include credentials in fetch requests
14662,Add new blog post,
14663,Merge pull request #3729 from hashicorp/f-test-log-2,Logger backed by *testing.T
14664,Improve naming and docs,
14665,Add redirect from Community page to Resources page,
14666,Remove Community links from header and footer,
14667,Merge Community page content into Resources page,
14668,fix typo,Priviledge -> privilege
14669,Logger backed by *testing.T,For capturing log output in tests and only displaying them on failure. Pulled out of #3241
14670,Include credentials in fetch requests,Fixes #3701 Relevant spec section: https://fetch.spec.whatwg.org/#concept-request-credentials-mode
14671,reload raft transport layer,fix up linting
14672,Recognize renewing non-renewable Vault lease as fatal,
14673,Merge pull request #3716 from hashicorp/docs-3713-remove,Remove mention of check_restart on service
14674,Merge pull request #3725 from Wintermute1/master,fix(minor typo)
14675,"call reload on agent, client, and server separately",
14676,remove unnecessary nil checks; default case,add tests for TLSConfig object
14677,don't ignore error in http reloading,code review feedback
14678,"refactor rpc listener methods, wait for proper shutdown",
14679,code review fixups,
14680,reloading tls config should be atomic for clients/servers,
14681,check error on generating tls context,
14682,remove code duplication,
14683,"prevent races when reloading, fully shut down raft",
14684,fixups from code review,"Revert ""close raft long-lived connections"" This reverts commit 3ffda28206fcb3d63ad117fd1d27ae6f832b6625. reload raft connections on changing tls"
14685,close raft long-lived connections,
14686,fix up downgrading client to plaintext,add locks around changing server configuration
14687,add ability to upgrade/downgrade nomad agents tls configurations via sighup,
14688,fix(minor typo),
14689,Add a TODO comment around handling peer address for remove peer correctly for raft protocol 3,
14690,Remove consul log line,
14691,Missed header mention of server.check_restart,
14692,Merge pull request #3717 from hashicorp/b-lost-batch,Fix detection of successful batch allocations
14693,gofmt,
14694,add require,
14695,changelog,
14696,Fix detection of successful batch allocations,This PR restores older behavior of detecting successful batch allocations (04d86ffd1006fde9dfb2ca8c1237fe60b995b0e3). This has the side effect that we correctly filter desired status stop but not successful batch allocations and create their replacements.
14697,Remove mention of check_restart on service,This is currently broken and should be removed from docs until a fix is released. See #3713
14698,Merge pull request #3712 from hashicorp/docs-promote-group,Add missing -group=cache to docs
14699,Add #3685 to changelog,
14700,Merge pull request #3685 from filipochnik/abs-path,Prevent absolute URLs in checks paths
14701,Add missing -group=cache to docs,Fixes #3699
14702,Linkify CHANGELOG in one missing place.,
14703,Add changelog formatting to make dev,
14704,Merge pull request #3711 from hashicorp/0.8,Merges recent work from 0.8 branch
14705,Merge branch 'master' into 0.8,
14706,Merge pull request #3683 from hashicorp/f-make-macos-builds-optional,Make macos/osx builds optional in Travis
14707,Merge pull request #3693 from rwaweber/guides_securing_typos,securing guide: small signal typo and argument consistency
14708,Update CHANGELOG.md,
14709,Update CHANGELOG.md ,Mentions min CPU limit change in backward incompatibilities section.
14710,Merge pull request #3706 from simplesurance/revert_min_cpu_limit_change,revert change to increase min. CPU resource value from 20 to 100
14711,Merge pull request #3692 from jaeminsung/master,Add missing token option for nomad run command
14712,Merge pull request #3705 from blixtra/patch-1,Change 'CoreOS rkt' to just 'rkt'
14713,revert change to increase min. CPU resource value from 20 to 100,"In the commit 622d3ddb92ea7e656ef831641c02024cb5a5d6d1 ""Fixed test and moved constants into standalone func"" the minimum CPU resource value for a job was increased from 100 to 20. This can break the nomad setup for people that used lower CPU values and are at the maximum MHz value of the available CPU on a machine. Change the minimum back to 20 MHz to ensure downwards compatibility."
14714,Change 'CoreOS rkt' to just 'rkt',CoreOS initiated the project but it is now under the CNCF banner and includes many contributors and core maintainers that are not at CoreOS.
14715,removed duplicate stats command from output,
14716,small signal typo and argument consistency,
14717,Add missing token option for nomad run command,
14718,Prevent absolute URLs in checks paths,
14719,Update module verbose command to include node address.,This change updates the module command to also include the addreess of the node. This is helpful for cluster administrators to quickly discover information and access nodes when required.
14720,Makes macos/osx builds optional in Travis,
14721,Merge pull request #3680 from hashicorp/b-multi-region-search,Search endpoint forwarding
14722,update changelog,
14723,Fixes #3679,code review fixups; add changelog
14724,search endpoint forwarding,
14725,bump website,
14726,bump version and remove generated structs,
14727,Release v0.7.1,
14728,generated files,
14729,bump version,
14730,Merge pull request #3674 from hashicorp/b-3673-accept-empty-port,Services should not require a port
14731,Strip mocked dynamic port for fsm test,
14732,Fix missing fields in json jobspec docs,
14733,Services should not require a port,Fixes #3673
14734,Merge pull request #3672 from hashicorp/d-spark-guide-updates,Add Spark configuration properties for ACL token and namespace
14735,Merge pull request #3656 from hashicorp/b-skip-tests-require-root,Skip tests that require root when not root
14736,changelog,
14737,Add Spark configuration properties for ACL token and namespace. Remove spark.nomad.job property (deprecated in favor of spark.app.id).,
14738,Merge pull request #3669 from hashicorp/b-planapply-eval-modindex,Update eval modify index as part of plan apply.
14739,Clean up error logging,
14740,Handle upgrade path,
14741,Add autopilot functionality based on Consul's autopilot,
14742,Add autopilot docs,
14743,vendor: add autopilot and flags packages from consul,
14744,Address some code review comments,
14745,Return an error if evaluation doesn't exist in state store at plan apply time.,
14746,Merge pull request #3664 from hashicorp/d-tweak-resources,Minor fixes and additions to Resources page
14747,Update eval modify index as part of plan apply.,
14748,Merge pull request #3663 from hashicorp/specify-node-version-travis,Travis: Lock down nodejs version
14749,minor formatting fixes and new resources,
14750,Lock down nodejs version,The new Travis Trusty image uses node 8 (latest LTS) as the default. Node 8 is incompatible with some modules used for the UI.
14751,Merge pull request #3661 from hashicorp/typos,Fix some typos
14752,Fix some typos,
14753,Lookup euid outside of loop,
14754,Merge pull request #3657 from jrasell/patch-4,Update template.html.md Vault template example
14755,Update template.html.md Vault template example,The change updates the Vault example within the Environment Variables section to use the module notation rather than the module notation. This is because the example is calling a specific secret key and populating an env var with this; meaning the value of the secret is required over the value.
14756,Skip tests that require root when not root,"Also skip Chown on allocdir migration on Windows and when non-root. Windows doesn't support it, and it will always fail as a non-root user."
14757,Merge pull request #3653 from hashicorp/b-clickable-links,clickable links to issues in changelog
14758,Merge pull request #3655 from hashicorp/d-docker-formatting,Fix minor formatting issue on Docker docs page
14759,Merge pull request #3654 from hashicorp/d-resources-formatting,Unbold hyperlinks on Resources page
14760,fix minor formatting/spacing issue,
14761,unbold hyperlinks,
14762,Initial run of make changelogfmt that linkifies all issues in CHANGELOG,
14763,Linkify changelog issues,
14764,Merge branch 'master' into 0.8,
14765,Merge pull request #3652 from hashicorp/vendorfmt,Changes vendor.json to one dependency per line
14766,Add #3551 to 0.7.1 changelog,
14767,Merge pull request #3651 from hashicorp/b-fix-vagrant-setup,chown $GOPATH for vagrant user
14768,Changes vendor.json to one dependency per line,
14769,Merge branch '0.8' of github.com:hashicorp/nomad into 0.8,
14770,Use region instead of datacenter for version checking,
14771,Add missing exist checks and doc line,
14772,Added support for v2 raft APIs and -raft-protocol option,
14773,website,
14774,remove generated structs,
14775,Release v0.7.1-rc1,
14776,generated assets,
14777,Keyify struct,
14778,bump version,
14779,Merge pull request #3650 from hashicorp/b-lowercase-agent-service-id,Use the Service.Hash() method in agent service ids
14780,Merge pull request #3649 from hashicorp/rpc_upgrade_mode-fix,Fix for rpc_upgrade_mode
14781,chown $GOPATH for vagrant user,
14782,Use the Service.Hash() method in agent service ids,"The allocID and taskName parameters are useless for agents, but it's still nice to reuse the same hash method for agent and task services. This brings in the lowercase mode for the agent hash as well."
14783,fix for rpc_upgrade_mode,
14784,Merge pull request #3648 from hashicorp/b-node-status,Node Status output includes new modify time
14785,Update job_status.go,
14786,Node Status output includes new modify time,
14787,Fix upgrade path of modify time,
14788,Merge pull request #3646 from hashicorp/b-periodic-non-leader,Fix followers not creating periodic launch
14789,changelog,
14790,Fix followers not creating periodic launch,Fix an issue in which periodic launches wouldn't be made on followers.
14791,Merge pull request #3619 from hashicorp/f-3380-custom-ports,Allow custom ports for services and checks when using driver address_mode
14792,Merge pull request #3640 from jippi/patch-4,fix hashi-ui link
14793,fix hashi-ui link,
14794,Fix test broken by mock updates,
14795,Lowercase service IDs to prevent eye bleeding,
14796,Fix port labels on mock Alloc/Job/Node,
14797,Improve validation and testing of service/check ports,
14798,Expand port and address_mode docs,
14799,Be more defensive in port checks,
14800,Move service hash logic to Service.Hash method,
14801,Hash fields used in task service IDs,"Fixes #3620 Previously we concatenated tags into task service IDs. This could break deregistration of tag names that contained double //s like some Fabio tags. This change breaks service ID backward compatibility so on upgrade all users services and checks will be removed and re-added with new IDs. This change has the side effect of including all service fields in the ID's hash, so we no longer have to track PortLabel and AddressMode changes independently."
14802,Improve port label validation and diff testing,
14803,Prevent using port 0 with address_mode=driver,
14804,Validate port label for host address mode,"Also skip getting an address for script checks which don't use them. Fixed a weird invalid reserved port in a TaskRunner test helper as well as a problem with our mock Alloc/Job. Hopefully the latter doesn't cause other tests to fail, but we were referencing an invalid PortLabel and just not catching it before."
14805,Add module docs,
14806,Document service/check address_mode/port changes,
14807,Fix interpolation bug with service/check updates,"Previously if only an interpolated variable used in a service or check was changed we interpolated the old and new services and checks with the new variable, so nothing appeared to have changed."
14808,Test Consul from TaskRunner thoroughly,Rely less on the mockConsulServiceClient because the real consul.ServiceClient needs all the testing it can get!
14809,Allow custom ports for services and checks,"Fixes #3380 Adds address_mode to checks (but no auto) and allows services and checks to set literal port numbers when using address_mode=driver. This allows SDNs, overlays, etc to advertise internal and host addresses as well as do checks against either."
14810,Merge pull request #3608 from hashicorp/b-3342-windows-log-leak,Fix bug in log framer only affecting Windows
14811,Merge pull request #3635 from hashicorp/clarify_node_vs_task_vars,Clarify difference between node and task metadata interpolated vars.
14812,Clarify difference between node and task metadata interpolated vars.,
14813,Merge pull request #3630 from hashicorp/b-periodic,Handle race between fingerprinters and registration
14814,Review feedback,
14815,Adds UI changes to the changelog,
14816,Merge pull request #3631 from hashicorp/b-ui-expand-definition,UI Show full job definition by default
14817,Merge pull request #3607 from hashicorp/f-ui-modify-time-over-modify-index,UI Use ModifyTime instead of ModifyIndex in allocation lists
14818,Expand the entire job definition by default,
14819,Merge pull request #3591 from hashicorp/b-1755-stop,Allow controlling the stop signal for drivers
14820,Handle race between fingerprinters and registration,
14821,code review fixes,
14822,Update README.md,
14823,Merge pull request #3628 from hashicorp/b-heartbeat,Add logging around heartbeats
14824,add documention,
14825,Merge pull request #3626 from hashicorp/b-travis-noverbose-tests,Make tests running on Travis not be verbose
14826,add test for kill signal in required signals,update changelog
14827,set default kill signal on executor shutdown,
14828,extend configurable kill signal to java driver,
14829,Drop trace logging,
14830,Add logging around heartbeats,
14831,Removes variable value printer,
14832,change location of default kill signal,
14833,Merge pull request #3624 from hashicorp/v-go-getter,Update go-getter
14834,Merge pull request #3621 from hashicorp/b-ui-timezones,UI: Drop timezones from timestamps
14835,Merge pull request #3623 from hashicorp/f-ui-warn-uncaught-exceptions,UI: Warn uncaught exceptions to console
14836,Merge pull request #3627 from hashicorp/b-ui-logs-horizontal-scrollbar,UI: Make sure the code element within a cli-window takes the full height
14837,code review fixups,
14838,Make sure the code element within a cli-window takes the full height,
14839,fix up test fixture to properly parse,
14840,A short guide for proxying to a different nomad cluster,when developing the UI
14841,use assert library,
14842,Remove newline,
14843,fix up basic test,add conversion for KillSignal for api/struct representation of task
14844,add missing new file,
14845,extract signal helper into utils,
14846,"move kill_signal to task level, extend to docker",
14847,Makes tests on travis not run in verbose mode.,
14848,Update go-getter,
14849,Update README.md,
14850,Warn errors in prod,
14851,Use ModifyTime instead of ModifyIndex,
14852,allow controlling the stop signal in exec/raw_exec,
14853,Update resources.html.erb,
14854,Remove UTC timezone tag,
14855,Merge pull request #3617 from hashicorp/d-resources,Add a Resources page to the website
14856,Fix typo,
14857,Merge pull request #3612 from hashicorp/docker-rkt-user,Set user for rkt tasks
14858,Merge pull request #3618 from hashicorp/b_fix_ns_inspect_test,"Fix Test: Inspect returns json, not cli formatted output"
14859,Merge pull request #3563 from hashicorp/b-snapshot-atomic,Atomic Snapshotting / Sticky Volume Migration
14860,"Inspect returns json, not cli formatted output",
14861,fix up test,
14862,Minor changes and reformatting,
14863,Add Resources page,
14864,remove unused user option,
14865,Merge pull request #3615 from hashicorp/b-rkt-host-ports,rkt: Don't require port_map with host networking
14866,Merge pull request #3555 from PagerDuty/fix-loop-on-sigpipe,Do not emit logs on SIGPIPE since logging service could be unavailable
14867,Merge pull request #3581 from hashicorp/raft-protocol,Added support for v2 raft APIs and -raft-protocol option
14868,Merge pull request #3616 from hashicorp/b-hostname,Emit hostname as a label
14869,drop gas,
14870,Use region instead of datacenter for version checking,
14871,add ability to specify user for rkt,
14872,changelog,
14873,Emit hostname as a label,
14874,Merge pull request #3601 from hashicorp/nomad-stop-timeout,Support StopTimeout for Docker tasks
14875,Update README.md,
14876,Update README.md,
14877,rkt: Don't require port_map with host networking,Also don't try to return a DriverNetwork with host networking. None will ever exist as that's the point of host networking: rkt won't create a network namespace.
14878,Add changelog entry for #3608,
14879,"get KillTimeout in seconds, not nanoseconds",
14880,Merge pull request #3611 from jens-solarisbank/master,Fix typos in metric names. #3610
14881,Fix typos in metric names. #3610,
14882,Add check for Windows ECONNRESET,
14883,Add defensive check to safeguard from future #3342s,"I hate adding ""this should never happen"" checks, but causing a tight loop that OOMs Nomad is just too easy in this code otherwise."
14884,Fix race in framer and improperly returned err,Fixes #3342 Two bugs were fixed:  Closing the StreamFramer's exitCh before setting the error means other   goroutines blocked on exitCh closing could see the error as nil. This   was not observered. parseFramerError on Windows would fall through and return an   improperly captured nil err variable. There's no need for   parseFramerError to be a closure which fixes the confusion.
14885,"Update tail, x/sys, and fsnotify deps",
14886,Merge pull request #3603 from hashicorp/f-ui-placement-failures,UI Placement Failures & Evaluations
14887,Merge pull request #3602 from angrycub/b-namespace-cli-prefix-collision-fix,Handle exact namespace match properly when also matched as prefix
14888,Acceptance tests for evaluations,
14889,Fixes an off by one bug in the ipv6 generator function,Sigh.
14890,Mirage magic for evaluations,
14891,Be clear about what the placment failures number next to task groups is,
14892,List placement failures on the job detail page,
14893,Add a table of evaluations to the job detail page,
14894,"Associate jobs, task groups, and evaluations",
14895,Models evaluation data,
14896,"Revert ""UI Placement failures""""",This reverts commits 141ecd8d9170f56c8302b5c776532e6d287a40e3 d2d838c2de08aac716a9431d9720b5c12bb19ba1 8099db433641429816e8479c6d23116269f744c0 86262b3ceff607627a9c9e0e25eb81b9b5ee739c eb4104ec528982e0ee6ae9a05fb0460e53139f3f 0e0e23e238017815bdb6dcfbc056275b3deaacca 6d45658d77fb4c40760a63cced71b74757356e48 b52a8176e85b9c6f13ec012f7fce2ec3df1c8751
14897,Acceptance tests for evaluations,
14898,Fixes an off by one bug in the ipv6 generator function,Sigh.
14899,Add atomic migrations to changelog and docs,
14900,Add comment and normalize err check ordering,as per PR comments
14901,Check for error file when receiving snapshots,
14902,Destroy partially migrated alloc dirs,Test that snapshot errors don't return a valid tar currently fails.
14903,Handle errors during snapshotting,If an alloc dir is being GC'd (removed) during snapshotting the walk func will be passed an error. Previously we didn't check for an error so a panic would occur when we'd try to use a nil module.
14904,gofmt changes,
14905,Handle exact namespace match properly when also matched as prefix,"This fixes an issue with the nomad namespace inspect and nomad namespace status commands failing to run for namespaces whose names are the start of another namespace's name: for example, foo and foobar. If the argument matches the first possibility returned by prefix exactly, that namespace will be targetted. If no exact match occurs, the behavior is unchanged."
14906,Mirage magic for evaluations,
14907,Be clear about what the placment failures number next to task groups is,
14908,List placement failures on the job detail page,
14909,Add a table of evaluations to the job detail page,
14910,"Associate jobs, task groups, and evaluations",
14911,Models evaluation data,
14912,add changelog,
14913,Support StopTimeout for Docker tasksw,Update github.com/fsouza/go-dockerclient
14914,Merge pull request #3564 from hashicorp/f-ui-log-streaming,UI: Log streaming
14915,Merge pull request #3597 from tbartelmess/b-fix-exhaustion-strings,Changed Superset to only return the resource name
14916,Merge pull request #3598 from jrasell/patch-3,Update community.html.erb to include Levant.
14917,Update community.html.erb to include Levant.,This change requests that Levant be added to the Nomad community page. Levant is an open source templating and deployment tool for HashiCorp Nomad jobs that provides realtime feedback and detailed failure messages upon deployment issues. Further details about Levant can be seen on the link GitHub page.
14918,Changed Superset to only return the resource name,"The Superset method on Resources used to return a string in the format of “[resource name] exhausted”. This was leading to the output in plan/create job API DimensionExhausted to return keys like module This was not anywhere documented, however, one of the examples on the website showed it like this. The other side effect of this is that the CLI formats the strings from the name of the key leading to output like module"
14919,Merge pull request #3596 from tbartelmess/b-min-resource-errors,Fixed error messges for MeetsMinResources
14920,Fixed error messges for MeetsMinResources,
14921,Merge pull request #3583 from neojin/update-docs-api-regions,update API docs for /regions endpoint
14922,Merge pull request #3584 from neojin/update-api-docs-client-gc,"API docs: /client/gc returns text/plain, not json"
14923,Merge pull request #3590 from yurisklar/master,Fix Website Docs for Periodic jobs TimeZone
14924,Add missing exist checks and doc line,
14925,Fix Website Docs for Periodic jobs TimeZone,
14926,"/client/gc returns text/plain, not json",
14927,update API docs for /regions endpoint,
14928,Added support for v2 raft APIs and -raft-protocol option,
14929,Explain the magical logging constant,
14930,Move the stream support check to the stream logger,
14931,Merge pull request #3567 from hashicorp/d-enterprise-docs,Minor tweaks to Enterprise docs
14932,Unit tests for the log util,
14933,Use the b64 log format to track offsets for pause/play support,
14934,Use offset numbers in the polling mechanism,
14935,Fixes intermittent test failures,
14936,Integration tests for the task-log component,
14937,Add CORS headers to client fs endpoints,
14938,Rename allocation-log to task-log,
14939,Acceptance tests for task logs,
14940,Crude log mocking,This will need to get better for testing the offset stitching logic in the polling case.
14941,Prevent using fetch or ReadableStream in tests,"Until they can be mocked, they can't be used"
14942,Microscopic refactor for style reasons,
14943,New eslint rule for ember-concurrency infinite loop pattern,
14944,Let the log component fill all available height,
14945,Updated styles for the cli-window component,
14946,New icons for pausing and playing,
14947,Move logging logic from the controller to a component,
14948,First pass at the logs page,Just verifying the log code works
14949,Log class for interfacing with log APIs,Supports:   - Reading the head of a log   - Reading the tail of a log   - Following a log in one of two ways:     - Streaming the HTTP request (using fetch res.getReader)     - Polling the log endpoint (using EC timeouts)
14950,Provides a slim TextDecoder polyfill for Edge,
14951,Add ember-concurrency dependency,
14952,Add link to the task logs page,
14953,Prefer native fetch,
14954,Guard against null values,
14955,Merge pull request #3557 from hashicorp/f-terraform-azure,Add Packer/Terraform support for Azure
14956,Merge pull request #3578 from hashicorp/b-namespace-jobcreate-fix,namespace jobcreate bug fix
14957,Use request namespace in Register method,
14958,Update index.html.md,
14959,Update index.html.md,
14960,Update index.html.md,
14961,Update index.html.md,
14962,Update CHANGELOG.md,
14963,Merge pull request #3568 from hashicorp/f-docker-sysctl,Rebase and merge of docker sysctl support
14964,Changed permission check to requested namespace,Original code checked to see if the user had submit-job on the default namespace.
14965,Missed assert in one place,
14966,"Better error validation, and added test case for invalid sysctl inputs",
14967,Address some review comments,
14968,Merge pull request #3565 from hashicorp/d-tls-reload-sighup,Update nomad guide for dynamic certificate reloading
14969,Merge pull request #3574 from multani/fix-doc-logs,doc: fix logs size
14970,Merge pull request #3569 from iconara/patch-2,Fix error messages for transitioning jobs to/from periodic
14971,Merge pull request #3570 from neojin/update-docs-api-agent,update API docs for /agent/self from POST to GET
14972,doc: fix logs size,
14973,Remove merge conflict marker from documentation,
14974,update API docs for /agent/self from POST to GET,
14975,Merge pull request #3566 from hashicorp/f-set-modtime-http-endpoints,Populate DisplayMessage in various http endpoints
14976,Shorter comment for SetEventDisplayMessage,
14977,Fix gofmt warnings,
14978,Fix error messages for transitioning jobs to/from periodic,"The error messages are flipped; when you transition a job from not being periodic to being periodic you get the message ""cannot update periodic job to being non-periodic"", and vice versa."
14979,Fix test compilation after rebase,
14980,slight wording changes; add links to Enteprise,
14981,minor wording changes,
14982,update Enterprise language,
14983,review(docker driver): sysctls -> sysctl + ulimits -> ulimit,
14984,bump Terraform version to 0.11.0,
14985,Oops,
14986,doc(docker driver): Adds doc for ulimit and sysctl,
14987,:lipstick:,
14988,test(docker driver): testing sysctls and ulimits,
14989,feat(docker driver): adds sysctls and ulimits configs,
14990,Update CHANGELOG.md,
14991,Update CHANGELOG.md,
14992,"Populate DisplayMessage in various http endpoints that return allocations, plus unit tests.",
14993,Update CHANGELOG.md,
14994,Merge pull request #3558 from hashicorp/b-nomad-validate-with-defaults,Make validate command ignore environment variables in service name
14995,Remove documentation around service name validation,
14996,bump Packer version to 1.1.2,
14997,changelog,
14998,changelog,
14999,Merge pull request #3559 from hashicorp/b-metrics,Don't emit metrics for non-running tasks
15000,update nomad guide for dynamic certificate reloading,
15001,"Change error message to use original name for clarity, rather than the name after substituting env vars with placeholder.",
15002,Rewording for clarity,
15003,Merge pull request #3562 from hashicorp/b-3561-rkt-rm,Remove rkt pods when exiting
15004,Merge pull request #3551 from hashicorp/b-3419-docker-409-bug,Fix Docker name conflict bug by updating dockerclient
15005,Improve rktRemove error message,
15006,Move service validation explanation doc,
15007,Remove rkt pods when exiting,Fixes #3561
15008,Merge pull request #3556 from angrycub/f-fingerprint-log-level,Dropped loglevel for AWS fingerprinter env read misses to DEBUG
15009,Lowered to DEBUG from AD feedback,
15010,Vendor in fixed go-metrics,
15011,Fix flaky test TestPrettyTimeDiff,
15012,Update validate.html.md.erb,
15013,Adding some more explanatory text around validating,
15014,Update README.md,
15015,Update documentation about validation logic for service names.,
15016,Changes service name validation logic to ignore any environment variables first.,
15017,Only publish metric when the task is running and dev mode publishes metrics,
15018,Merge pull request #3546 from hashicorp/f-heuristic,Better interface selection heuristic
15019,changelog,
15020,use revised wording,
15021,add Azure .pem file to .gitignore,
15022,restructure README files; add Azure README,
15023,update provisioning scripts to support both AWS and Azure,
15024,update AWS Terraform configs for consistency,
15025,update Azure Terraform configs,
15026,Use interface attached to default route,
15027,update config files to support systemd and Azure; reorganize Packer file hierarchy; update Vagrantfile to use latest tool versions,
15028,Merge pull request #3502 from hashicorp/b-3420-restore-dead-leader,Handle leader task being dead in RestoreState
15029,Handle leader task being dead in RestoreState,"Fixes the panic mentioned in https://github.com/hashicorp/nomad/issues/3420#issuecomment-341666932 While a leader task dying serially stops all follower tasks, the synchronizing of state is asynchrnous. Nomad can shutdown before all follower tasks have updated their state to dead thus saving the state necessary to hit this panic: have a non-terminal alloc with a dead leader. The actual fix is a simple nil check to not assume non-terminal allocs leader's have a TaskRunner."
15030,Dropped loglevel for AWS fingerprinter env reads,"Certain environments use WARN for serious logging; however, it's very possible to have machines without some of the fingerprinted keys (public-ipv4 and public-hostname specifcally).  Setting log level to INFO seems more consistent with this possibility."
15031,Do not emit logs on SIGPIPE since logging service could be unavailable,This should fix https://github.com/hashicorp/nomad/issues/3554
15032,Update Changelog,
15033,Update CHANGELOG.md to mention consul template version,
15034,Merge pull request #3550 from hashicorp/b-pretty-diff-0s,Handle edge case when allocation create/modify time difference is les…
15035,Declare time.Now once to prevent flakiness,
15036,Nomad agent reload TLS configuration on SIGHUP (#3479),"  Allow server TLS configuration to be reloaded via SIGHUP   dynamic tls reloading for nomad agents   code cleanup and refactoring   ensure keyloader is initialized, add comments   allow downgrading from TLS   initalize keyloader if necessary   integration test for tls reload   fix up test to assert success on reloaded TLS configuration   failure in loading a new TLS config should remain at current   Reload only the config if agent is already using TLS  reload agent configuration before specific server/client  lock keyloader before loading/caching a new certificate   introduce a get-or-set method for keyloader   fixups from code review   fix up linting errors   fixups from code review   add lock for config updates; improve copy of tls config   GetCertificate only reloads certificates dynamically for the server   config updates/copies should be on agent   improve http integration test   simplify agent reloading storing a local copy of config   reuse the same keyloader when reloading   Test that server and client get reloaded but keep keyloader   Keyloader exposes GetClientCertificate as well for outgoing connections   Fix spelling   correct changelog style "
15037,Update go-dockerclient to fix #3419,Includes this workaround: https://github.com/fsouza/go-dockerclient/blob/99ba9a9ff48803e4bf801b025c6be7707d83c421/container.go#L634-L637
15038,Add a test demonstrating the bug,"Fails on Docker 17.09, passes on Docker 17.06 and earlier"
15039,bump go,
15040,Handle edge case when allocation create/modify time difference is less than a second ago.,
15041,Merge pull request #3472 from hashicorp/f-ui-task-hierarchy,Task route hierarchy in the UI
15042,Remold the allocation detail and task detail pages,"Now that there is a task detail page, some of the content from the allocation detail page is better suited there."
15043,Update allocation detail page to look like job and node,
15044,Create a new task route hierarchy,Drilling into a task from an allocation transitions to the task heirarchy.
15045,Merge pull request #3543 from hashicorp/b-consul-template-vendor-update,Vendor update to consul template 0.19.4
15046,Merge pull request #3500 from hashicorp/b-vendor,Clean vendored packages
15047,Better interface selection heuristic,This PR introduces a better interface selection heuristic such that we select interfaces with globally routable unicast addresses over link local addresses. Fixes https://github.com/hashicorp/nomad/issues/3487
15048,Merge pull request #3541 from angrycub/b-makefile-typo,Makefile typos
15049,Merge pull request #3536 from angrycub/b-resource-memory-test-fix,Fixed test and moved constants into standalone func
15050,Vendor update to consul template 0.19.4,
15051,Makefile typos,
15052,Merge pull request #3537 from hashicorp/d-docker-endpoints,Better docs for docker.endpoint option
15053,Merge pull request #3538 from hashicorp/d-serf-name,Clarify Name config
15054,Update CHANGELOG.md,
15055,unix -> Unix,I'm not going to leave a review comment just to uppercase one dumb letter
15056,Clarify Name config,Fixes https://github.com/hashicorp/nomad/issues/3517
15057,Merge pull request #3512 from hashicorp/b-docker-device-option,Add support for passing device into docker driver
15058,Better docs for docker.endpoint option,Fixes https://github.com/hashicorp/nomad/issues/3533
15059,Merge pull request #3535 from hashicorp/b-alloc-status-message-bugfix,Fixes bug with display message logic due to deprecating GenericSource…
15060,fix vault grace docs,
15061,Review feedback + re-add dropped import,
15062,gofmt and goimports nomad/structs/structs.go,
15063,gofmt and goimports,
15064,Fixes bug with display message logic due to deprecating GenericSource. Also added more test cases to cover a bunch more edge cases,
15065,Fixed test and moved constants into standalone func,"In #3520, work was done to true up the defaults for Nomad resource stanzas with the documentation.  This fixes the tests that I accidentally broke in the process.  Some questions were raised about using dynamic elements as part of expects, which is why I opted to copy the MinResources pattern.   During this refactor I also noticed that structs.go had a similar issue and an inconsistent minium for CPU."
15066,Make device mounting unit test verify configuration via docker inspect,
15067,Unit test (linux only) that tests mounting a device in the docker driver,
15068,Add default value for cgroup permissions for device if not set,
15069,Remove unnecessary check since validate method already checks this,
15070,Add support for passing device into docker driver,
15071,Merge pull request #3531 from hashicorp/vault-nomad-docs-update,Updated Troubleshooting section of Vault Integration docs
15072,"Updated Troubleshooting section of Vault Integration docs to mention the policy requirements for certain version combinations of Vault and Nomad, due to changes in Vault default policy and Nomad's vendored Vault lease renewal API.",
15073,Merge pull request #3530 from hashicorp/b-allow-cross-origin-connections-in-ui,Allow cross origin connections in ui
15074,generated UI routes,
15075,Remove the connect-src self restriction for the UI,
15076,Make make dev-ui work as expected,
15077,Clean vendored packages,This PR removes unused packages from the vendor folder.
15078,Merge pull request #3529 from hashicorp/b-env-ct,Handle multiple environment templates
15079,format,
15080,changelog,
15081,Merge pull request #3520 from hashicorp/b-memory-default-incorrect,"module default is 10, not 300"
15082,alway load all templates,
15083,changelog,
15084,Handle multiple environment templates,Fixes https://github.com/hashicorp/nomad/issues/3498
15085,Simplified based on review comments,
15086,Merge pull request #3466 from hashicorp/f-ui-change-nodes-to-clients,Change nodes to clients in the ui
15087,Adopted pattern from LogConfig to handle panic when no resource stanza at all,In testing realized that Resources night not be present at all.  Testing this case caused panic. Added in a means to collect clean defaults in that case.
15088,Canonicalize task and remove merge with MinResources,"The current code would merge the job with the output of MinResources causing the nil to be replaced with MemoryMB=helper.IntToPtr(10).  When later moduled, the 10 would cause the default of 300 not to be applied. Running module on the task itself guarantees that CPU, MemoryMB, and IOPS is set, so we can remove the Merge withMinResources."
15089,Merge pull request #3480 from loomnetwork/fix-jobs-tests,jobs tests were sending invalid jobs
15090,Rolled back documentation change in favor of correcting the default,
15091,"module default is 10, not 300",Verified by creating sample job and removing memory from resources module
15092,Merge pull request #3515 from jrasell/patch-1,Update securing-nomad.html.md address flag example
15093,Changed roles for role as the path changed in Vault,
15094,Update securing-nomad.html.md address flag example,The module command incorrectly used the module flag; whereas the correct flag key is module.
15095,Merge pull request #3505 from multani/fix-typos-guides,"doc: fix some typos in the ""Guides"" documentation"
15096,changelog,
15097,Merge pull request #3504 from james-powis/fix_consul_address,[3503] adding consul-address flag to command.go
15098,Add #3509 to changelog,
15099,Merge pull request #3509 from jrasell/gh_3508,Fix panic on every run of the keyring command.
15100,Fix panic on every run of the keyring command.,This change removes the flag token declaration within keyring.go which caused a flag redefined panic on every command run as the token flag is specified in the command meta.
15101,"doc: fix some typos in the ""Guides"" documentation",
15102,[3503] adding consul-address flag to command.go,
15103,Update deployments API documentation to add clarifying sentence about rollbacks triggering only when job spec is different.,
15104,changelog and website,
15105,Merge pull request #3411 from cheeseprocedure/f-qemu-graceful-shutdown,Qemu driver: graceful shutdown feature
15106,changelog,
15107,Merge pull request #3501 from hashicorp/b-build-log-fixes,Fix git commit build flag and remove unneeded log line
15108,Fix git commit build flag,
15109,Remove noisy log line,Didn't mean to commit this
15110,Qemu driver: clean up logging; fail unsupported features on Windows,
15111,Update CHANGELOG.md,
15112,Merge pull request #3496 from hashicorp/b-auto-revert-stable,Makes auto reverts robust against infinite revert cycles
15113,Adds comment to handleRollbackValidity method and other small test readability fixes.,
15114,fix spelling mistake,
15115,Added more unit tests for testing rollback when job has identical spec to AllocHealth and DeploymentStatus endpoints.,
15116,Check that job version doesn't change when rollback does not occur due to identical spec,
15117,changelog,
15118,Merge pull request #3402 from hashicorp/leader-loop,Applies leader loop fixes from Consul.
15119,"Adds SpecChanged check to alloc health and fail deployment end points, and other code review comments.",
15120,changelog,
15121,Merge pull request #3459 from multani/docker-oom-notification,docker: log that a container has been killed by the OOM killer
15122,Clarify comment about infinite revert cycles,
15123,Qemu driver: tweaks in response to PR feedback,Remove attribute for long qemu monitor path; misc cleanup; update tests
15124,Update CHANGELOG.md,
15125,Merge pull request #3486 from hashicorp/f-event-messages-api,Move event messages logic into task_runner
15126,Fix formatting,
15127,Adds deprecation notice to API struct definition.,
15128,"Remove event GenericSource, and address other code review comments. Also added deprecation info in comments.",
15129,Revert unintentional change to plan_apply.go during rebase,
15130,Address some code review comments,
15131,Unit test for PopulateEventDisplayMessage,
15132,Added explanatory comment,
15133,"Move logic for determinic event display message to task_runner, added two new fields DisplayMessage and Details.",
15134,Add ModifyTime to Allocation and update it both on plan applies and client initiated updates,
15135,Remove extra newline,
15136,"Update rollback test to add a spec change, and add new test for rollback failed status",
15137,"Fixes auto revert to check if the job's spec has changed before reverting. This prevents infinite reverting when reverting to a job version that was previously stable, but not so after attempting a revert.",
15138,Merge pull request #3495 from hashicorp/t-test,Run linter
15139,Merge pull request #3494 from hashicorp/b-ar-metrics-restore,Alloc Runner doesn't panic on restoration.
15140,Run linters,
15141,show env,
15142,Alloc Runner doesn't panic on restoration.,
15143,remove allow failures matrix,
15144,Merge pull request #3493 from hashicorp/f-remove-atlas,Remove Atlas and Scada from codebase
15145,Merge pull request #3490 from hashicorp/f-gc-logging,Make unable-to-gc log level adaptive
15146,"Update CHANGELOG,md, include PR numbers.",
15147,Merge pull request #3061 from hashicorp/f-add-client-metrics,Added metrics to track task/alloc start/restarts/dead events
15148,Updated changelog,
15149,deprecation notice,
15150,Added the node_id as a tag,
15151,Added docs,
15152,remove atlas,
15153,Allow failure,
15154,Make unable-to-gc log level adaptive,WARNing when someone has over 50 non-terminal allocs was just too confusing. Tested manually with module and bumping a job from module to module: module
15155,Added support for tagged metrics,
15156,Incrementing the start counter when we are actually starting a container,
15157,Recording counter for dead allocs properly,
15158,Added metrics to track task/alloc start/restarts/dead events,
15159,Qemu driver: defer cleanup sooner,
15160,Qemu driver: clean up test logging; retry integration test for longer,
15161,Add #3445 to changelog,
15162,Use strings.Replace() instead of custom function,
15163,Qemu driver: basic testing of graceful shutdown feature,
15164,Qemu driver: include PIDs in log output,
15165,Qemu driver: ensure proper cleanup of resources,
15166,Qemu driver: minor logging fixes,
15167,Wrap qemu docs at 80 characters,
15168,Standardize driver.qemu logging prefix,
15169,Qemu driver: add graceful shutdown feature,
15170,Merge pull request #3483 from hashicorp/slackpad-patch-1,Fixes a typo in the check restart doc.
15171,Merge pull request #3484 from hashicorp/b-nomad-0.7.1,merge nomad 0.7.1 branch
15172,update AWS Terraform configs to support multi-cloud changes,
15173,Update build and runtime config scripts to support multiple clouds,
15174,Use per cloud upstart config files,
15175,update Consul config files to use updated retry-join syntax,
15176,"Packer, Terraform configs for Azure",
15177,Update CHANGELOG.md,
15178,remove unnecessary test output print,
15179,reuse client configuration for both acl and non-acl test,
15180,run e2e tests from e2e/migrations folder,
15181,run acl migration test only with integration flag,
15182,refactor for clarity,
15183,Add E2E test for migrations with acls,
15184,connection receives only EOF,
15185,fixups from code review,
15186,update changelog,
15187,document new agent option,
15188,add rpc_upgrade_mode as config option for tls upgrades,
15189,Update docs to include ModifyTime in more places where allocations are returned,
15190,Document modify time in a bunch of places,
15191,Fix regression by returning error on unknown alloc,
15192,Fix race in test,
15193,Trigger GCs after alloc changes,GC much more aggressively by triggering GCs when allocations become terminal as well as after new allocations are added.
15194,Fix GC'd alloc tracking,"The Client.allocs map now contains all AllocRunners again, not just un-GC'd AllocRunners. Client.allocs is only pruned when the server GCs allocs. Also stops logging ""marked for GC"" twice."
15195,Fix node end point test that was failing compilation,
15196,New pretty printer that imitates the short form from time.Duration.String() with approximated values for days and beyond. Used in cli output for allocation create/modify times,
15197,Update CHANGELOG.md,
15198,Merge pull request #3467 from hashicorp/f-publish-job-summary-metrics,Publishing metrics for job summary
15199,Resetting the timer at the beginning of the loop,
15200,Adding support for tagged metrics,
15201,Setting the default stats collection interval,
15202,Publishing metrics for job summary,
15203,"Adds modify time to job/alloc status CLI output, and pretty prints",
15204,"Always set modify time on allocations, and other changes addressing review comments",
15205,Add ModifyTime to Allocation and update it both on plan applies and client initiated updates,
15206,Merge pull request #3477 from hashicorp/verbose_test,Run test with verbose mode and log to a file
15207,Fixes a typo in the check restart doc.,
15208,Remove RC reference,
15209,Merge pull request #3482 from hashicorp/docs-0.7.0,Docs 0.7.0
15210,Mention port mapping auto correction,
15211,Also search for panics and output 10 lines of context around it,
15212,Update site for 0.7.0,
15213,Fix whitespace,
15214,allow failure,
15215,bump version and remove generated,
15216,Release v0.7.0,
15217,Changelog,
15218,generated,
15219,version,
15220,jobs tests were sending invalid jobs,
15221,Merge branch 'master' of github.com:hashicorp/nomad,
15222,use job status,
15223,Merge pull request #3231 from hashicorp/d-add-ui-instructions-to-getting-started,Add UI instructions to getting started
15224,fix tags,
15225,remove generated structs,
15226,bump version,
15227,Release v0.7.0,
15228,spelling error,
15229,Bump version,
15230,guide,
15231,Run test with verbose mode and log to a file,
15232,update consul-lib,
15233,Merge pull request #3468 from hashicorp/d-link-to-demo,Link to Web UI demo site in header and footer
15234,"Change ""Demo"" to ""UI Demo""",
15235,Link to UI demo in header and footer,
15236,Merge pull request #3461 from hashicorp/b-node-race,Node access is done using locked Node copy
15237,fix test,
15238,Update screenshots in the web ui guide,
15239,Rename nodes routes to client routes,
15240,Change app copy to say 'clients' instead of 'nodes',
15241,changelog,
15242,Node access is done using locked Node copy,"Fixes https://github.com/hashicorp/nomad/issues/3454 Reliably reproduced the data race before by having a fingerprinter change the nodes attributes every millisecond and syncing at the same rate. With fix, did not ever panic."
15243,docker: changed OOM killed error message,
15244,changelog + PUT,
15245,Merge pull request #3447 from hashicorp/f-node-purge-api,Added the purge API on node endpoints
15246,Merge pull request #3452 from hashicorp/f-system-gc,GetClientAllocs handles garbage collection events
15247,Changelog + assert,
15248,Merge pull request #3460 from hashicorp/b-param-status,"Bypass status checks for system, periodic, parameterized jobs"
15249,changelog,
15250,"Bypass status checks for system, periodic, parameterized jobs",
15251,docker: log that a container has been killed by the OOM killer,Fix: #2203 (at least for Docker tasks)
15252,Merge pull request #3453 from hashicorp/telemetry-docs-update,Version clarification for /metrics API endpoint
15253,Added clarification to telemetry doc that  API endpoint is available only as of version 0.7 of Nomad.,
15254,GetClientAllocs handles garbage collection events,
15255,Changed the curl command,
15256,Added docs for the purge API,
15257,Added ACLs to the node de-register endpoint,
15258,Merge pull request #3450 from hashicorp/f-release-guide,Document release procedure
15259,Merge branch 'f-release-guide' of github.com:hashicorp/nomad into f-release-guide,
15260,fixes,
15261,Merge pull request #3430 from hashicorp/f-e2e-migration-test,Add e2e test for testing migrations
15262,Correct a small typo,
15263,add assertion for pending,
15264,Update releasing.md,
15265,document release procedure,
15266,Added the purge API on node endpoints,
15267,bump website,
15268,Release v0.7.0-rc3,
15269,bump version,
15270,generated code,
15271,Release v0.7.0-rc2,
15272,add static ui assets,
15273,bump version,
15274,Merge pull request #3435 from hashicorp/f-travis-seperate,seperate linting from testing
15275,Merge pull request #3431 from hashicorp/b-core-gc,Fix garbage collecting nodes/jobs when using ACLs
15276,Merge pull request #3432 from hashicorp/d-ui-guide-naming,Replace 'Nomad UI' with 'Web UI' in UI guide
15277,vendor freeport,
15278,Merge pull request #3436 from hashicorp/b-acl-bootstrap-command-test,Add command test for acl bootstrap
15279,"feedback from code review, improve run script",
15280,exclude integration tests from main build,
15281,add failure test cases,
15282,Merge pull request #3443 from hashicorp/vendor_update_codegen,Updates vendor directory to get code generation working correctly
15283,Merge pull request #3434 from hashicorp/f-flaky,Fix flaky tests
15284,go style vars,
15285,Merge pull request #3428 from hashicorp/b-ui-missed-the-deployment-allocs,Add modified and version headers to deployment allocation table
15286,Merge pull request #3441 from hashicorp/f-ui-differentiate-empty-and-forbidden-states,Differentiate empty and forbidden states on list pages
15287,Updates vendor directory to get code generation working correctly,
15288,fixing up code review feedback,
15289,use testutil helper function,
15290,Update the existing empty state messages to no longer mention tokens,There is no longer a way that these messages could show and tokens be the problem
15291,New test coverage for 403 handling on list pages,
15292,"Apply route-specific 403 handling to jobs, nodes, and servers",
15293,Common code for handling 403s in routes,
15294,Stop gracefully handling findAll 403s in the adapter,
15295,Merge pull request #3439 from hashicorp/b-ui-hide-deployments-tab-based-on-type,Don't show the deployments tab for non-service jobs
15296,Merge pull request #3437 from hashicorp/f-ui-sort-server-tags,Sort server tags
15297,Merge pull request #3433 from hashicorp/b-ui-thread-namespace-qp-throughout,Thread the namespace QP throughout all job pages
15298,Merge pull request #3440 from hashicorp/d-sentinel-doc-fix,fixing small sentinel doc typo
15299,fixing small sentinel doc typo,
15300,Don't show the deployments tab for non-service jobs,"They can't have deployments, so the link makes no sense."
15301,Sort server tags,
15302,add command test for acl bootstrap,
15303,lax timing,
15304,seperate linting from testing,
15305,Build nomad before testing,
15306,fix up goimports,
15307,metrics test,
15308,fix two flaky tests,
15309,"On namespace change on a job detail page, redirect to /jobs",And reload jobs for the new namespace.
15310,Temporarily skip unreliable test due to unloadAll,
15311,Make sure to treat the namespace Name as the ID,
15312,Update acceptance tests now that jobs are different,
15313,Address a couple asynchronicity issues,
15314,Update all job links,
15315,Redo the logic around showing namespaces,Don't show namespaces if the only namespace is module
15316,Treat namespace and job name as a composite primary key,
15317,Don't scroll to top on transition in tests,It's mega annoying
15318,Update job factories and mock endpoints to handle namespaces correctly,
15319,Allow 501s on namespaces because they are necessary for job IDs,
15320,Switch from href-to to link-to for QP persistence,See this issue: https://github.com/intercom/ember-href-to/issues/62
15321,Move the namespace query param up the route hierarchy,This makes it active on all job routes
15322,Make sure to include the namespace qp on all job related resources,
15323,Add query-string as a dependency,
15324,All job requests need to be made with the namespace query param,
15325,move to consul freeport implementation,
15326,fix flaky vault test,
15327,lax timing,
15328,Fix some flaky tests,
15329,Standardize retrieving a free port into a helper package,
15330,don't double parallel,
15331,Highlight web ui demo,
15332,fix namespaces,
15333,Merge pull request #3417 from hashicorp/f-darwin-testing,Darwin testing
15334,respond to comments,
15335,Update Web UI guide to reference the 'Web UI' instead of the 'Nomad UI'. Link to ACL guide and online demo.,
15336,spelling mistake,
15337,clear the token,
15338,thread leader token through core gc and test,
15339,leader acl token,
15340,bump website version,
15341,add polling instead of waits,add instructions for running migrations tests
15342,bump vault and install on darwin,
15343,vendor consul testutil,
15344,Lax blocking query test timing,
15345,clean up unused dependencies,
15346,refactoring cluster setup,
15347,add e2e test for testing migrations,
15348,Merge pull request #3427 from hashicorp/acl-doc-tweaks,Fixes some typos in the ACL guide.
15349,Add the new alloc row headers to the deployment allocations table,
15350,Handle the undefined TotalTicks case,
15351,Handle the not a number case,
15352,Fixes some typos in the ACL guide.,
15353,Skip if no docker,
15354,Only check scripts on linux and don't double lint,
15355,install to local bin,
15356,Rm upgrading go,
15357,split privilidged calls to two scripts,
15358,travis,
15359,Fix on ipv6,
15360,fix flaky java tests,
15361,Undo darwin user setting,
15362,skip running test executables,
15363,Run as user on mac,
15364,sudo docker works,
15365,docker tests,
15366,fix bad links,
15367,rc download,
15368,Release v0.7.0-rc1,
15369,Merge branch 'master' of github.com:hashicorp/nomad,
15370,check lxc properly,
15371,Merge pull request #3426 from hashicorp/docs-lowbar,Prevent _ from causing italics
15372,Prevent _ from causing italics,Fixes #3418
15373,generated,
15374,rc1,
15375,Merge pull request #3423 from hashicorp/b-ui-never-return-null-from-headers,Never return null for adapter headers
15376,Merge pull request #3424 from hashicorp/b-ui-job-version-for-node-allocs,Expect JobVersion in one of two places
15377,Merge pull request #3425 from hashicorp/b-ui-correct-cpu-usage,Don't rely on CpuStats.Percent
15378,Expect JobVersion in one of two places,
15379,Don't rely on CpuStats.Percent,Just do the math client-side with TotalTicks and Reserved
15380,Never return null for adapter headers,Ember Data checks strictly against undefined: https://github.com/emberjs/data/blob/master/addon/adapters/rest.js#L1128
15381,Merge pull request #3414 from hashicorp/f-cors,Support CORS for client endpoints
15382,Merge pull request #3416 from hashicorp/b-ui-provide-acl-token-on-client-requests,Provide ACL token on client requests
15383,Merge pull request #3412 from hashicorp/b-ui-disable-fuzzy-search,Disable fuzzy search
15384,Add the acl token as a header to client requests,
15385,Remove fuse as a dependency,
15386,Merge pull request #3410 from hashicorp/f-ui-add-job-version-to-allocs-table,Add job version to allocation tables
15387,Merge pull request #3413 from hashicorp/b-ui-flush-store-after-acl,Unload all records when a token is set or cleared
15388,Support CORS for client endpoints,Added to /v1/client/stats and /v1/client/allocation/
15389,Unload all records when a token is set or cleared,This guarantees no privileged data is shown to unprivileged credentials
15390,Disable fuzzy search,"It doesn't work well for highly precise values, or small datasets, or prefixes. Which are our three use cases."
15391,Add job version to allocation tables,
15392,Merge pull request #3406 from hashicorp/b-ui-sort-allocs-by-modify-index,Sort allocs by ModifyIndex + bonus content
15393,Update tests for the ModifyIndex column and sort change,
15394,Always provide a valid value for transform,
15395,"Don't double render, also don't render infinitely",See https://github.com/emberjs/ember.js/issues/13948
15396,Use the right footer pagination styles on task group page,
15397,Fix an issue where allocation rows can have a state change in the same frame as a render,
15398,Make ModifyIndex the default sort property for alloc tables,
15399,Add ModifyIndex as a sortable column for alloc tables,
15400,"Sort allocation by status type, not simply alphanumeric",
15401,Merge pull request #3408 from hashicorp/b-docker-bridge-ip,Add logging around moby/moby#32648 bug
15402,Add logging around moby/moby#32648 bug,
15403,Improve acl bootstrap docs,
15404,Merge pull request #3403 from hashicorp/b-policy-validate,Return error for invalid policy
15405,fixup from code review,
15406,Merge pull request #3398 from hashicorp/f-consul-1.0.0,Bump Consul to 1.0.0 in vagrant/travis
15407,Merge pull request #3404 from hashicorp/b-ui-memory-measurements,Use the right math and metrics to measure used Memory
15408,Tests (and bug fixes!) for the format-bytes helper,
15409,Show real usage numbers as tooltips,
15410,Fix the memory usage math," Use RSS, not Cache (shoulda read the source) Convert bytes to megabytes before doing division"
15411,New helper for human-formatting bytes,
15412,"In dev mode, mask the local node port to 4200",This allows for local development with the client end points for the node running on localhost.
15413,No need to leave this commented out code in,
15414,update error message for invalid policy,
15415,policy must specify at least one namespace,
15416,Applies leader loop fixes from Consul.,"There was a deadlock issue we fixed under https://github.com/hashicorp/consul/issues/3230, and then discovered an issue with under https://github.com/hashicorp/consul/issues/3545. This PR ports over those fixes, as well as makes the revoke actions only happen if leadership was established. This brings the Nomad leader loop inline with Consul's."
15417,Merge pull request #3400 from hashicorp/b-quota-guide,Small fix for quota guide
15418,Don't set Interval on TTL health checks,
15419,Merge pull request #3401 from hashicorp/f-docker-build,build scripts
15420,Consul test server fork without porter/rpc.ports,
15421,build scripts,
15422,small guide instruction fix,
15423,Update vendored Consul to 1.0.0,Also install new porter dep
15424,Merge pull request #3393 from hashicorp/b-delete-nonexistent-tokens,Return error if tokens cannot be deleted because they do not exist
15425,Merge pull request #3389 from hashicorp/f-ui-token-v2,Improved ACL Token page
15426,no namespaces in oss test,
15427,Merge pull request #3396 from hashicorp/b-rkt-logging,Squelch repeated rkt version warnings
15428,review feedback,
15429,return error if tokens cannot be deleted because they do not exist,
15430,Bump Consul to 1.0.0 in vagrant/travis,
15431,Properly fail rkt fingerprinting on old vesions,
15432,Merge pull request #3397 from hashicorp/b-fix-build,Fix up spelling in quota guide
15433,fix up spelling in guide,
15434,Order keys consistently for enhanced readability,
15435,Make sure token policy ids are unique,"When they aren't unique, length checks will fail"
15436,Use /acl/token/self instead of /acl/token/:accessor_id,
15437,Redo acceptance testing for ACL tokens,
15438,Mirage factories for tokens and policies,
15439,Redo the tokens page to be a form that validates a token and lists policies,
15440,Data modeling for tokens and policies,
15441,Merge pull request #3377 from hashicorp/b-ui-gracefully-handle-403s,Gracefully handle 403s in the UI
15442,Merge pull request #3395 from hashicorp/d-quota,Document Quotas
15443,review feedback,
15444,Squelch repeated rkt version warnings,
15445,Merge pull request #3385 from hashicorp/f-acl-cli,Policy list and token self commands
15446,Merge branch 'master' into f-acl-cli,
15447,Update acl-tokens.html.md,
15448,guide,
15449,Merge pull request #3387 from hashicorp/f-aclless-health,Agent Health Endpoint
15450,clarify duration,
15451,api,
15452,quota api,
15453,Merge pull request #3375 from hashicorp/b-batch,Allow batch jobs to be rerun if purged
15454,Merge pull request #3384 from hashicorp/f-self-policies,Ability to introspect self token
15455,Add Agent.Health to api package,
15456,Update acl_token_self.go,
15457,List does json/template,
15458,add missing namespace commands,
15459,policy list and token self commands,
15460,Self token lookup,
15461,ListPolicies and GetPolicy work w/o management token,
15462,Better client health check and error handling,
15463,quota command docs,
15464,Merge pull request #3388 from hashicorp/b-migration-fixes,Test fixes from #3383
15465,Test fixes from #3383,
15466,Agent Health Endpoint,
15467,Merge pull request #3386 from hashicorp/f-sync,sync
15468,sync,
15469,Merge pull request #3383 from hashicorp/b-migrate-token,base64 migrate token
15470,Self token lookup,
15471,ListPolicies and GetPolicy work w/o management token,
15472,changelog,
15473,Allow batch jobs to be rerun if purged,This PR allows batch jobs to be rerun if they have been purged.
15474,remove bad test,
15475,Merge pull request #3376 from hashicorp/f-node-acls,Allow Node.SecretID for Node.GetNode and Allocs.GetAlloc
15476,Remove support for pre-0.5 nodes,"Nodes before 0.5 did not have a SecretID. Since SecretID is now a required field and 0.4.x is >2 point releases ago, drop support for it."
15477,base64 migrate token,HTTP header values must be ASCII. Also constant time compare tokens and test the generate and compare helper functions.
15478,vault_grace doc,
15479,rkt remove allocid,
15480,Merge pull request #3382 from sheerun/patch-5,Remove AllocID from ExecutorContext
15481,Fix Request.SecretID -> Request.AuthToken,
15482,Merge pull request #3379 from sheerun/docs-1,Fix typo: job -> task
15483,Remove AllocID from ExecutorContext,
15484,Fix typo: job -> task,
15485,Handle 403s gracefully," When a list 403s, treat it as if it were empty When a single resource 403s, redirect to an application error page   that has a backdoor link to the tokens page"
15486,Handle the case where hash.Members is undefined,
15487,Specialized error for 403s that links to the ACLs page,
15488,Merge pull request #3358 from hashicorp/f-ui-namespaces,UI for Namespaces (enterprise only)
15489,Fix AuthToken use on Node.GetAllocs,
15490,Merge pull request #3374 from hashicorp/f-auth-token,SecretID -> AuthToken
15491,Alloc watcher must send Node.SecretID as AuthToken,An auth token is required if ACLs are enabled
15492,Allow Node.SecretID for GetNode and GetAlloc,
15493,Merge pull request #3372 from hashicorp/b-versions,Fix sorting of job versions
15494,Merge pull request #3373 from hashicorp/f-403,Permission denied results in 403
15495,Handle invalid token as well,
15496,Add StateStore.NodeBySecretID,
15497,Add index to Node.SecretID,
15498,SecretID -> AuthToken,
15499,Merge pull request #3371 from hashicorp/d-sentinel-link,Link to the Sentinel docs from the guide
15500,403 instead of 500 for permission denied,
15501,ACL command options,
15502,changelog,
15503,Fix sorting of job versions,Fixes an issue in which the versions were improperly sorted which would cause pruning of the wrong job version. This essentially meant that job versions above 255 would be dropped from the job version table (note this was due to the prefix walk crossing from the 1-byte to 2-byte threshold). Fixes https://github.com/hashicorp/nomad/issues/3357
15504,Merge pull request #3370 from hashicorp/b-ui-release-error-state-on-transition,Allow users to escape error pages with the back button
15505,Update sentinel-policy.html.markdown,
15506,Allow users to escape error pages with the back button,
15507,Add a generic catch-all error message,
15508,Merge pull request #3362 from hashicorp/b-3326-malformed-consul-resp,Don't panic on unexpeced Consul response
15509,Merge pull request #3361 from hashicorp/d-ui,UI command documentation
15510,Update ui.html.md.erb,
15511,Merge pull request #3353 from hashicorp/f-acl-prefix-search,Prefix Search ACL enforcement
15512,Don't panic on unexpeced Consul response,Fixes #3326
15513,UI command documentation,
15514,Merge pull request #3360 from hashicorp/f-consul-template,Use Vault default grace
15515,fix test,
15516,Merge pull request #3322 from hashicorp/f-authenticated-volumes,Authenticated client volumes
15517,fix test,
15518,Refactor permissions checks into funcs,funcs are in the _oss file to ease creating Enterprise versions which support Quotas and Namespaces.
15519,documentation,
15520,changelog,
15521,vendor consul-template,
15522,Change vault_grace default to match vaults,
15523,Small fixes,This commit:  Fixes the error checking in migration tests now that we are using the canonical ErrPermissionDenied error Guard against NPE when looking up objects to generate the migration token Handle an additional case in ShouldMigrate()
15524,fixups from code review,change creation of a migrate token to be for a previous allocation
15525,fix up build warnings,
15526,adding migration token validation for gc endpoint,
15527,fixing up code review comments,
15528,adding valid case test for http endpoint,
15529,add tests for functionality,
15530,Add functionality for authenticated volumes,
15531,add MigrateTokens to server response for allocs,
15532,Prefix Search ACL enforcement,
15533,Merge pull request #3351 from hashicorp/f-acl-system,System ACL enforcement
15534,Merge pull request #3350 from hashicorp/f-acl-status-members,Status.Members ACL enforcement
15535,Merge pull request #3347 from hashicorp/docs-federated-ports,Mention network connectivity in federation guide
15536,Mention network connectivity in federation guide,
15537,Merge pull request #3339 from hashicorp/f-acl-force-periodic,Force Periodic ACL enforcement
15538,Merge pull request #3359 from hashicorp/d-ui-query-params,Document the query params across all UI pages
15539,Merge pull request #3348 from hashicorp/f-ui,Nomad UI Command
15540,List query params on the API UI docs page,
15541,Removes extraneous search query param from the servers list page,
15542,Remove extraneous search query param from the job index page,
15543,Sync the active namespace as a query param on the jobs list page,
15544,Test coverage for namespaces,
15545,Custom alpha sort with default always on top,
15546,Gracefully handle the 501 case,"Enterprise endpoints return a 501 in the open source build. 5xx errors throw by default, so handle this one since it's expected for things such as namespaces."
15547,Merge pull request #3356 from tgross/master,update docker.auth.helper docs to note hardcoded prefix
15548,Replace simple dropdown namespace switcher with ember-power-select,
15549,Add ember-power-select,
15550,Mock namespaces in mirage,
15551,Make namespace a relationship of job,
15552,Refresh the jobs model on namespace change,
15553,Add a namespace switcher to the gutter menu,
15554,Support non-link menu items,
15555,Consider the namespace query param as required for findAll,
15556,Add namespaces and active namespace to the system service,
15557,New namespaces model,
15558,Make sure to qualify requests made outside of adapters,
15559,Throw errors that cause a redirect to make debugging easier,
15560,update docker.auth.helper to note hardcoded prefix,
15561,Merge pull request #3355 from hashicorp/d-api-metrics-nav,Change Metrics API nav option to 'Metrics'
15562,Update api.erb,
15563,Merge pull request #3338 from hashicorp/f-acl-operator,Operator ACL enforcement
15564,Operator ACL enforcement,
15565,Force Periodic ACL enforcement,
15566,Merge pull request #3332 from hashicorp/b-ui-partial-jobs-on-nodes-view,Ensure the job name and task group name for each allocation is shown in the table
15567,System ACL enforcement,Enforce ACL for System.GarbageCollect and System.ReconcileJobSummaries RPC endpoints.
15568,Status.Members ACL enforcement,Was incorrectly checked on the HTTP API before. Moved to RPC endpoint.
15569,Merge pull request #3346 from hashicorp/b-nil-client-panic,ForceLeave endpoint must use Server.ResolveToken
15570,Merge pull request #3345 from hashicorp/vendor-checkpoint-with-timeout,Updating go-checkpoint lib to have a fixed timeout
15571,Nomad UI Command,
15572,"Fix AgentSelf, AgentMembers, and KeyringOperations",
15573,ForceLeave endpoint must use Server.ResolveToken,"The ForceLeaveRequest endpoint may only be called on servers, but the code was using a Client to resolve tokens. This would cause a panic when an agent wasn't both a Server and a Client."
15574,Updating go-checkpoint lib to have a fixed timeout,
15575,Merge pull request #3336 from hashicorp/f-acl-client-agent,/v1/client/agent/* ACL enforcement
15576,/v1/client/agent/* ACL enforcement,
15577,Merge pull request #3331 from hashicorp/f-acl-client-alloc,"/v1/client/allocation/./{stats,gc} ACL enforcement"
15578,"/v1/client/allocation/./{stats,gc} ACL enforcement",
15579,Merge pull request #3329 from hashicorp/f-acl-client-stats,/v1/client/stats ACL enforcement
15580,/v1/client/stats ACL enforcement,
15581,Merge pull request #3343 from hashicorp/docs-client-gc,Document /v1/client/gc endpoint
15582,Merge pull request #3328 from hashicorp/f-acl-client-fs,FS HTTP API ACL enforcement
15583,Document /v1/client/gc endpoint,
15584,Refactor as there's no need for an ACL helper,
15585,Test all fs endpoints in a loop,
15586,FS HTTP API ACL enforcement,ACL enforcement for the filesystem HTTP APIs on clients.
15587,Merge pull request #3325 from hashicorp/f-acl-client,/v1/client/gc ACL enforcement
15588,/v1/client/gc ACL enforcement,
15589,Move acl helpers from nomad/ into nomad/mock,They're useful in command/agent/ tests.
15590,Update go-testing-interface,Needed for T.Helper and T.Skipf
15591,Rename TestAgent.Token to TestAgent.RootToken,
15592,Support AnonymousACLToken in GetPolicies,
15593,Merge pull request #3290 from hashicorp/f-acl-job-dispatch,Add ACL for dispatch job
15594,Minor cosmetic fix,
15595,Added Vault documentation for integrating with Identity Systems,
15596,New test to assert that lazy loading jobs for allocation rows actually happens,Unfortunately it meant inlining the visit into each test
15597,Fixes issue regarding allocation rows,Sometimes the job name and/or task group name wouldn't show up.
15598,Merge pull request #3323 from hashicorp/f-ui-loading-states,UI Loading states
15599,Merge pull request #3321 from hashicorp/f-ui-error-states,Better error state for allocation stats failure
15600,Merge pull request #3300 from hashicorp/f-ui-404-pages,404 pages for the UI
15601,Simple catch-all route for 404s on pages,
15602,Test coverage for 404s on resources,
15603,Handle allocation 404s,
15604,Handle 404s for agents,
15605,Handle 404s on nodes,
15606,Handle 404s on jobs,
15607,Style error pages,
15608,Handle errors in the application route,This is the only way to preserve the URL in all cases.
15609,changelog,
15610,Merge pull request #3327 from jrasell/f_gh_3304,Update agent CLI to include Consul config option flags.
15611,Update agent CLI to include Consul config option flags.,This update introduces command line flags for all Consul options thus allowing users to both use a config file and CLI options to configure Consul. Website documentation has also been updated. Closes #3304
15612,Add a loading state to job information on allocation row.,"This information is already loaded when traversing to an alloc row from a job, but not when traversing to an alloc row from a node."
15613,Always reload all jobs,"Ember tries to be clever by showing cached jobs instead of a loading spinner in the event that a user starts on nodes, loads a couple jobs through allocation relationships, then visits jobs."
15614,Simple loading state for job details in a job row,
15615,Loading templates in places,
15616,Better error state for allocation stats,
15617,New tooltip scss component,
15618,New loading spinner,Courtesy of SpinKit: https://github.com/tobiasahlin/SpinKit
15619,Eval.Allocations ACL enforcement,
15620,Eval.List ACL enforcement,
15621,Eval.GetEval ACL enforcement,
15622,Add new icon helper and the first icon: warning,
15623,add documentation for dispatch-job,
15624,Merge pull request #3305 from hashicorp/f-ui-empty-states,UI empty states
15625,Merge pull request #3319 from hashicorp/f-acl-deployment-allocs,Deployment.Allocations ACL enforcement
15626,Merge pull request #3318 from hashicorp/f-acl-deployment-list,Deployment.List ACL enforcement
15627,Merge pull request #3317 from hashicorp/f-acl-deployment-setallochealth,Deployment.SetAllocHealth ACL enforcement
15628,Merge pull request #3316 from hashicorp/f-acl-deployment-promote,Deployment.Promote ACL enforcement
15629,Merge pull request #3315 from hashicorp/f-acl-deployment-pause,Deployment.Pause ACL enforcement
15630,Add ember-inline-svg dependencies.,
15631,Merge pull request #3314 from hashicorp/f-acl-deployment-fail,Deployment.Fail ACL enforcement
15632,Deployment.Fail ACL enforcement,
15633,Deployment.Allocations ACL enforcement,
15634,Deployment.List ACL enforcement,
15635,Deployment.SetAllocHealth ACL enforcement,
15636,Merge pull request #3288 from simar7/qemu-improvements,qemu: Add bound checks for memory assignment
15637,Deployment.Promote ACL enforcement,
15638,qemu: Fix lower memory bound to 128M,Signed-off-by: Simarpreet Singh link
15639,Deployment.Pause ACL enforcement,
15640,Deployment.Fail ACL enforcement,
15641,gofmt: format qemu.go and qemu_test.go,Signed-off-by: Simarpreet Singh link
15642,Empty state for allocations search on task group detail,
15643,Empty states for servers,
15644,Empty states for clients,
15645,Add empty states to the job list page,
15646,Expose the token service in all templates for convenience,
15647,Merge pull request #3278 from hashicorp/f-acl-job-getjob,Add ACL for GetJob
15648,Merge pull request #3272 from hashicorp/f-acl-job-stable,Add ACL endpoint for Job Stable
15649,fix up policy test,
15650,Merge pull request #3303 from hashicorp/doc-docker-load,Docker module takes a string not a slice
15651,Merge pull request #3302 from hashicorp/b-remove-structs-from-api,Remove module import from module
15652,Merge pull request #3298 from hashicorp/b-fix-check-restart-plan,Diff CheckRestart objects
15653,Merge pull request #3287 from hashicorp/b-ui-firefox-styles,Fix style discrepancies in Firefox
15654,Docker module takes a string not a slice,
15655,Merge pull request #3293 from hashicorp/f-self-token,Allow querying self token
15656,Merge pull request #3299 from hashicorp/doc-windows-docker,Mention Docker for Windows caveats
15657,Remove module import from module,Goes a step further and removes structs import from api's tests as well by moving GenerateUUID to its own package.
15658,Merge pull request #3280 from hashicorp/b-ui-links-in-tables,Links in table rows should get click priority over table rows
15659,Merge pull request #3286 from hashicorp/b-ui-scroll-to-top-on-transition,Scroll to the top of the page on transition. Like a normal website.
15660,Mention Docker for Windows caveats,
15661,Test Check.Header add/removes,
15662,Fix empty map,
15663,Diff CheckRestart objects,
15664,Merge pull request #3294 from hashicorp/f-acl-job-deregister,Add ACL for job deregister
15665,Merge pull request #3291 from hashicorp/f-acl-get-job-versions,Add ACL for job endpoint GetJobVersions
15666,job dispatch should have dispatch policy,
15667,Merge pull request #3296 from hashicorp/b-win-docker-ip,Properly autodetect Docker IP in Windows
15668,Cleanup versioning doc,
15669,Properly autodetect Docker IP in Windows,Our Docker network plugin autodetection code was erroneously treating Window's default network module as a plugin and defaulting to it instead of the host. Fixes #3218
15670,Merge pull request #3276 from hashicorp/f-acl-job-evaluate,Add read job permissions to evaluate endpoint
15671,Merge pull request #3295 from hashicorp/b-rkt-is-linux-only,Only build rkt driver on linux
15672,add checks for error message,
15673,Only build rkt driver on linux,Build stub for non-linux targets
15674,add documnetation,
15675,Merge pull request #3279 from hashicorp/f-acl-job-allocations,Add ACL to job allocations endpoint
15676,Merge pull request #3283 from hashicorp/f-acl-job-latest-deployment,Add ACL to latest job api
15677,Fixes,
15678,add documentation,
15679,add documentation,
15680,add documentation,
15681,add documentation,
15682,Allow querying self token,This PR allows querying self ACL token when the SecretID is for the AccessorID in question.
15683,Merge pull request #3292 from hashicorp/f-lint-website,Spell check website
15684,acl for job deregister,
15685,Merge pull request #3281 from hashicorp/f-acl-job-evaluations,Add ACL for Job Evaluations endpoint
15686,Merge pull request #3271 from hashicorp/d-oss2ent,Document enterprise upgrade path
15687,Merge pull request #3269 from hashicorp/v-bolt,Update bolt
15688,Spell check website,
15689,add acl for job endpoint GetJobVersions,
15690,Merge pull request #3282 from hashicorp/f-acl-job-deployments,Add ACL for job deployments endpoint
15691,add acl for dispatch job,
15692,fix up comment,
15693,fixups from code review,
15694,fixups from code review,
15695,fixups from code review,
15696,qemu: Add bound checks for memory assignment,Signed-off-by: Simarpreet Singh link
15697,Align the spacer between right-hand nav items,Firefox doesn't assume vertical centering in this case like chrome and safari do.
15698,Use an absolute positioning for narrow chart,"translateY(-50%) doesn't work on svg elements in firefox, apparently?"
15699,Rerender the distribution chart when the window resizes,
15700,Scroll to the top of the page on transition. Like a normal website.,
15701,Merge pull request #3256 from dalegaard/master,Enable rkt driver to use address_mode = 'driver'
15702,Merge pull request #3284 from hashicorp/f-lint,Enable more linters
15703,Enable more linters,
15704,Ignore rkt network failure if container died early,"If the container dies before the network can be read, we now ignore the error coming out of the network information polling loop. Nomad will restart the task regardless, so we might be masking the actual error. The polling loop for the rkt network information, inside the module method, was getting a bit unwieldy. It's been refactored out so it's not a seperate function."
15705,Make rkt port mapping test not exit immediately,"The rkt port mapping test currently starts redis with --version, which obviously makes redis exit again almost immediately. This means that the container exists before the network status can be queried, and so the test fails."
15706,add acl to lastest job api,
15707,add acl for job deployments endpoint,
15708,Add rkt default network to Travis,"The current Travis setup scripts copy in rkt, but do not set up a default container network. Here we copy the container network setup over from the vagrant setup scripts."
15709,add acl for Job Evaluations endpoint,
15710,Improve rkt driver network status poll loop,"The network status poll loop will now report any networks it ignored, as well as a no-networks situations."
15711,Refactor rkt network status loop,"The network status poll loop for the rkt drivers module method was a bit messy, and could not display the last encountered error. Here we clean it up."
15712,Merge pull request #3275 from AlmZ/patch-1,Fix typo in Prometheus Configuration url
15713,Merge pull request #3274 from hsmade/patch-2,Update metrics.html.md
15714,Fix the links in table rows bug,Click events were greedily redirecting to the resource pages instead of first yielding to the anchor tag clicked if an anchor tag was in fact clicked.
15715,Migrate tests over to native helpers as much as possible,
15716,Switch to native dom helpers,
15717,Demonstrate link in action table row bug,
15718,Merge pull request #3277 from hashicorp/b-fix-grace-keyword,grace_period -> grace
15719,add acl to job allocations endpoint,
15720,better test assertions,
15721,add ACL for GetJob endpoint,
15722,Small logging fix in rkt/driver,
15723,grace_period -> grace,
15724,Bump minimum rkt version to 1.27.0.,"The changes introduces in #3256 require at least rkt 1.27.0 because of a bug in the JSON output of module in previous versions. Here we upgrade all references to rkt's minimum version, and also make travis and vagrant use this version when running tests. Finally we add a CHANGELOG notice."
15725,Namespace Quotas -> Resource Quotas,
15726,add read job permissions to evaluate endpoint,
15727,Fix typo in Prometheus Configuration url,
15728,Update metrics.html.md,Fix typo
15729,Update CHANGELOG.md,
15730,Turn rkt network status failure into Start failure,"If the rkt driver cannot get the network status, for a task with a configured port mapping, it will now fail the Start() call and kill the task instead of simply logging. This matches the Docker behavior. If no port map is specified, the warnings will be logged but the task will be allowed to start."
15731,Test for rkt driver setting DriverNetwork,"To test that the rkt driver correctly sets a DriverNetwork, at least when a port mapping is requested, we amend the TestRktDriver_PortsMapping test with a small check."
15732,Discard errors from rkt status and cat-manifest,"Since we don't actually show these errors anywhere, just discard them right away."
15733,Merge pull request #3270 from hashicorp/f-acl-job-revert,Add ACL for job revert endpoint
15734,add ACL endpoint for Job Stable,
15735,Document enterprise upgrade path,
15736,Merge pull request #3264 from hashicorp/f-acl-token-update,Update ACL token
15737,add acl documentation,
15738,Add ACL for Revert Job endpoint,
15739,Update bolt,
15740,Merge pull request #3268 from hashicorp/f-upgrade,Document need to specify network_interface on 0.6
15741,Document need to specify network_interface on 0.6,This PR enhances the upgrade documentation from 0.5.x to 0.6.x Fixes https://github.com/hashicorp/nomad/issues/3236
15742,fixups from code review,
15743,Merge pull request #3265 from hashicorp/f-refactor-emit-client-metrics,Move setGaugeForAllocationStats  to emitClientMetrics
15744,Merge pull request #3266 from hashicorp/f-acl-job-validate,Add ACL for job validate endpoint
15745,Merge pull request #3267 from hashicorp/b-deployment-gc,Run deployment garbage collector on an interval
15746,Run deployment garbage collector on an interval,Fixes https://github.com/hashicorp/nomad/issues/3244
15747,Merge pull request #3260 from hsmade/patch-1,Update network.html.md
15748,fix type,
15749,add acl for job validate endpoint,
15750,Merge pull request #3263 from anubhavmishra/patch-1,update consul version to 0.9.3
15751,Move setGaugeForAllocationStats  to emitClientMetrics,
15752,update acl token,
15753,update consul version to 0.9.3,
15754,Update network.html.md,Fixing #3259
15755,Merge pull request #3258 from DavidCalvert/patch-1,Minor typo on consul.html.md
15756,Minor typo on consul.html.md,
15757,Expose rkt DriverNetwork,"Currently the rkt driver does not expose a DriverNetwork instance after starting the container, which means that address_mode = 'driver' does not work. To get the container network information, we can call module on the UUID of the container and grab the container IP from there. For the port map, we need to grab the pod manifest as it will tell us which ports the container exposes. We then cross-reference the configured port name with the container port names, and use that to create a correct port mapping. To avoid doing a (bad) reimplementation of the appc schema(which rkt uses for its manifest) and rkt apis, we pull those in as vendored dependencies. The versions used are the same ones that rkt use in their glide dependency configuration for version 1.28.0."
15758,Use rkt prepare + run-prepared instead of run.,"The rkt driver currently executes run and asks that the pod UUID is written to a file that is then polled for changes for up to five seconds. Many container fetches will take longer than this, so this method will often not be able to track the pod UUID reliably. To avoid this problem, rkt allows pods to be first prepared, which will return their UUID, and then run as a second invocation. Here we convert the rkt driver's Start method to use this method instead. This way, the UUID will always be tracked correctly."
15759,Merge pull request #3253 from hashicorp/b-make-shellcheck-happy,Fix shellcheck's complaints about find loop
15760,Fix shellcheck's complaints about find loop,
15761,Release v0.7.0-beta1,
15762,generated code,
15763,bump version,
15764,changelog,
15765,fix metalinter checking ui dir,
15766,Merge pull request #3250 from hashicorp/b-logs,Fix gzip encoding
15767,vendor gzip,
15768,always gzip,
15769,handle errors when streaming logs,
15770,Merge pull request #3249 from hashicorp/b-07-upgrade,Upgrade path fixes
15771,fix test,
15772,Fix upgrading from 0.6.x to 0.7.0,
15773,Merge pull request #3248 from hashicorp/f-sync,Sync
15774,sync,
15775,Merge pull request #3232 from hashicorp/d-ui-api-doc,Document each route in the UI for the API docs
15776,Merge pull request #3233 from hashicorp/d-ui-guide,New UI Guide for learning the Nomad UI
15777,Add a beta warning to the ui intro guide.,
15778,Add screenshots to the getting started UI page,
15779,Update the clustering next steps to go to the UI page.,
15780,Add a new step to the intro for inspecting a job via the UI.,
15781,Merge pull request #3105 from hashicorp/f-876-restart-unhealthy,Restart unhealthy tasks
15782,New UI Guide for learning the Nomad UI,
15783,Document each route in the UI for the API docs,
15784,Merge pull request #3240 from hashicorp/d-metrics-guide-fix,Metrics guide fix
15785,add circonus as a metric tool,
15786,enumerate data tools nomad supports,
15787,update links for github,
15788,Merge pull request #3226 from hashicorp/f-acl-cli-info,Add ACL token info
15789,update documentation,
15790,add documentation for token info,
15791,add command to cli,add extra verification test
15792,add acl token info,
15793,Merge pull request #3235 from hashicorp/f-acl_policy_info,ACL policy info
15794,add missing command,
15795,add policy with rules for documentation,
15796,small fixups,
15797,documentation; add to existing commands,
15798,acl policy info,
15799,Changelog,
15800,Merge pull request #3229 from epipho/fix-stats,Fix incorrect docker stats
15801,Merge pull request #3237 from hashicorp/d-metrics-documentation,WIP: Guide to nomad metrics integrations
15802,Merge pull request #3234 from hashicorp/acl_policy_delete,Add ACL policy delete command
15803,guide to nomad metrics with integrations,
15804,fixups,
15805,add acl policy delete command,
15806,Fix incorrect docker stats,
15807,Merge pull request #3224 from hashicorp/f-acl-cli-token-delete,ACL CLI token delete
15808,update documentation,
15809,fix up test data,
15810,fixup helptext for acl cli delete,
15811,add delete command to comamands list,
15812,adds ACL token delete,
15813,Merge pull request #3221 from hashicorp/f-acl-cli,ACL CLI
15814,update comment to use from other commands,
15815,fixups from code review,
15816,add acl token as meta flag,add API test for job ACL
15817,Merge pull request #3219 from hashicorp/f-acl-job-list,Add job list ACL
15818,fix access for health check,
15819,@dadgar is better at words than me,
15820,Fix comments: task -> check,
15821,Minor corrections to check_restart docs,
15822,Test CheckRestart.Validate,
15823,Test converting CheckRestart from api->structs,
15824,Name const after what it represents,
15825,Merge pull request #3222 from hashicorp/f-acl-node,Node ACL enforcement
15826,Cleanup and test restart failure code,
15827,Add comments,
15828,Filter Node.GetAllocs results by readable namespaces,
15829,add documentation for job list acl,
15830,add job list acl,
15831,Merge pull request #3225 from hashicorp/f-acl-cli-comp,ACL CLI for token/policy create
15832,remove unneeded hidden command,
15833,embed acl subcommands,
15834,Merge pull request #3194 from hashicorp/f-grafana-metrics,Grafana metrics
15835,filter acl subcommands,
15836,add link to configuration,
15837,update readme for steps to create,
15838,add a sample grafana dashboard and readme,
15839,Merge pull request #3186 from hashicorp/f-prometheus-dashboard,Prometheus dashboard
15840,reworded prometheus readme,
15841,fix up comments,
15842,fixups from code review,
15843,Check for permission denied errors,
15844,fixups from code review,
15845,website: document token create,
15846,Node.List ACL enforcement,
15847,command: document CLI flags,
15848,command: Adding acl token create,
15849,Node.GetAllocs ACL enforcement,
15850,Fix comments for Node ACL tests,
15851,website: document acl policy apply,
15852,command: Adding intermediate command for help text,
15853,command: Adding acl policy apply test,
15854,Node.GetNode ACL enforcement,
15855,Node.Evaluate ACL enforcement,
15856,Node.UpdateDrain ACL enforcement,
15857,Add NodePolicy test helper,
15858,Merge pull request #3220 from hashicorp/f-allocs-acl,"Alloc.{GetAlloc,List} ACL enforcement"
15859,Alloc.GetAlloc ACL enforcement,
15860,Alloc.List ACL enforcement,
15861,Move check_restart to its own section.,
15862,Add check_restart to jobspec tests,
15863,Fold SetFailure into SetRestartTriggered,
15864,Test check watch updates,
15865,Rename unhealthy var and fix test indeterminism,
15866,DRY up restart handling a bit.,"All 3 error/failure cases share restart logic, but 2 of them have special cased conditions."
15867,Watched -> TriggersRestart,Watched was a silly name
15868,Handle multiple failing checks on a single task,"Before this commit if a task had 2 checks cause restarts at the same time, both would trigger restarts of the task! This change removes all checks for a task whenever one of them is restarted."
15869,RestartDelay isn't needed as checks are re-added on restarts,@dadgar made the excellent observation in #3105 that TaskRunner removes and re-registers checks on restarts. This means checkWatcher doesn't need to do any internal restart tracking. Individual checks can just remove themselves and be re-added when the task restarts.
15870,Simplify from 2 select loops to one,
15871,Wrap check watch updates in a struct,Reusing checkRestart for both adds/removes and the main check restarting logic was confusing.
15872,Canonicalize and Merge CheckRestart in api,
15873,Fix whitespace,
15874,Remove unused lastStart field,
15875,Removed partially implemented allocLock,
15876,Improve check watcher logging and add tests,Also expose a mock Consul Agent to allow testing ServiceClient and checkWatcher from TaskRunner without actually talking to a real Consul.
15877,Add changelog entry for #3105,
15878,Document new check_restart stanza,
15879,Default grace period to 1s,
15880,Add comments and move delay calc to TaskRunner,
15881,on_warning=false -> ignore_warnings=false,Treat warnings as unhealthy by default
15882,Use existing restart policy infrastructure,
15883,Add check watcher for restarting unhealthy tasks,
15884,Nest restart fields in CheckRestart,
15885,Add restart fields,
15886,Merge pull request #3213 from hashicorp/f-acl-job-summary,Add job endpoint ACL
15887,Merge pull request #3217 from hashicorp/b-batch-filter,Fix batch handling of complete allocs/node drains
15888,changelog,
15889,Fix batch handling of complete allocs/node drains,This PR fixes: * An issue in which a node-drain that contains a complete batch alloc would cause a replacement * An issue in which allocations with the same name during a scale down/stop event wouldn't be properly stopped. * An issue in which batch allocations from previous job versions may not have been stopped properly. Fixes https://github.com/hashicorp/nomad/issues/3210
15890,Changelog,
15891,Update CHANGELOG.md,
15892,Merge pull request #3206 from hashicorp/b-eval-index,Worker waits til max ModifyIndex across EvalsByJob
15893,Changelog,
15894,Address feedback,
15895,Worker waits til max ModifyIndex across EvalsByJob,This PR fixes a scheduling race condition in which the plan results from one invocation of the scheduler were not being considered by the next since the Worker was not waiting for the correct index. Fixes https://github.com/hashicorp/nomad/issues/3198
15896,Merge pull request #3214 from hashicorp/f-agent-servers,Sort /v1/agent/servers output
15897,changelog,
15898,use assert,
15899,Sort /v1/agent/servers output,This PR sorts the output of the endpoint since its results are used as part of Consul checks to avoid the value changing unnecessarily. Fixes https://github.com/hashicorp/nomad/issues/3211
15900,Merge pull request #3195 from hashicorp/b-node-locking,Non-locked accessors to common Node fields
15901,changelog and feedback,
15902,Non-locked accessors to common Node fields,"This PR removes locking around commonly accessed node attributes that do not need to be locked. The locking could cause nodes to TTL as the heartbeat code path was acquiring a lock that could be held for an excessively long time. An example of this is when Vault is inaccessible, since the fingerprint is run with a lock held but the Vault fingerprinter makes the API calls with a large timeout. Fixes https://github.com/hashicorp/nomad/issues/2689"
15903,fixups from code review,
15904,use separate response object,
15905,update to use ACL test helpers,
15906,add job endpoint ACL,
15907,update metrics path,
15908,Merge pull request #3209 from dezmodue/patch-1,Adding missing <
15909,changelog,
15910,filter nomad services for only http,
15911,update consul information,
15912,Readme instructions,
15913,add prometheus metrics for configuration with consul and nomad,
15914,Merge pull request #3205 from hashicorp/f-deployment-acl,Deployment.GetDeployment ACL enforcement
15915,review feeback,
15916,fix multierror merge,
15917,changelog,
15918,Merge pull request #3203 from hashicorp/b-search-hyphens,Fix UUID search with hyphens
15919,Merge pull request #3171 from hashicorp/f-prometheus-metrics,Prometheus metrics
15920,vendor go-metrics,
15921,vendor gzip libarary,
15922,fix bug to return prometheus sink,
15923,fixups from code review,
15924,updated documentation,
15925,refactoring prometheus endpoint,
15926,vendor necessary libraries for prometheus metrics,
15927,add documentation for prometheus config option,
15928,enabling prometheus metrics should be a config option,
15929,add endpoint for prometheus,
15930,Merge pull request #3192 from hashicorp/f-acl-cli,Add ACL Bootstrap CLI
15931,Deployment.GetDeployment ACL enforcement,
15932,vendor go-plugin file,
15933,changelog,
15934,Merge pull request #3201 from hashicorp/b-periodic-restore,Fix restoration of stopped periodic jobs
15935,Merge pull request #3204 from hashicorp/f-sync-acl,sync acls
15936,sync acls,
15937,remove f-acl,
15938,Fix UUID search with hyphens,This PR fixes: * UUID lookup with hyphens and odd length. The math was wrong. There is now a test that ranges over all possible values. * Fixes an unreported issue that could be hit when a job has more than 4 hyphens in it as UUID lookup doesn't allow that. Fixes https://github.com/hashicorp/nomad/issues/3141
15939,bump version,
15940,Adding missing <,Missing < for the TaskGroup
15941,Fix restoration of stopped periodic jobs,This PR fixes an issue in which we would add a stopped periodic job to the periodic launcher.
15942,Moved '.' into paragraph,
15943,Merge pull request #3199 from hashicorp/d-acls-guide-description,Update the ACL guide description
15944,Update the ACL guide description,Now it's about ACLs instead of outage recovery.
15945,Merge pull request #3196 from hashicorp/b-fix-vagrant-perms,Fix permissions of $GOPATH in Vagrantfile
15946,Merge pull request #3193 from hashicorp/b-blake2b-386-arch,Vendor blake2b to allow for building on x386 architecture
15947,Fix permissions of $GOPATH in Vagrantfile,"Technically just the true->false is needed. The module was a first attempt that didn't fix the bug, but it's a nice simplification."
15948,bump getting started vagrant,
15949,changelog,
15950,pass in uid to codecgen,
15951,Merge pull request #3191 from hashicorp/b-tagged-metrics-panic,Fix panic in emitting tagged allocation metrics
15952,vendor blake2b to allow for building on 386 architecture,
15953,website: update the bootstrap reset guide,
15954,website: document bootstrap CLI and update ACL guide,
15955,command: Add ACL bootstrap command,
15956,Merge pull request #3185 from hashicorp/f-acl-reset,Add ability to reset ACL bootstrap process
15957,Address @dadgar feedback,
15958,Merge pull request #3177 from hashicorp/f-cli-hidden,Hide non-user commands from autocomplete output
15959,changelog,
15960,Merge pull request #3187 from hashicorp/b-windows-docker,Fix MemorySwappiness on Windows Docker
15961,Merge pull request #3184 from hashicorp/b-docker-logging,Fix docker user specified syslogging
15962,Merge pull request #3190 from jrasell/els_replicator,Add elsevier-core-engineering/replicator to community page.
15963,fix panic in emitting tagged metrics,
15964,Add elsevier-core-engineering/replicator to community page.,
15965,Fix MemorySwappiness on Windows Docker,Fixes https://github.com/hashicorp/nomad/issues/3181
15966,website: document ACL bootstrap reset process,
15967,nomad: support ACL bootstrap reset,
15968,Merge pull request #3167 from hashicorp/b-windows-stats,Fix invalid CPU stats on Windows
15969,Fix invalid CPU stats on Windows,This PR fixes an issue introduced in Nomad 0.6.0 due to https://github.com/shirou/gopsutil/issues/420. The issue arised from the fact that the Windows stats from gopsutil reports CPUs in percentages where we expected ticks.
15970,Fix docker user specified syslogging,
15971,Merge pull request #3175 from jen20/multi-vagrant,build: Rework Vagrant for multiple operating systems; add FreeBSD support
15972,Merge pull request #3174 from hashicorp/doc-tls-upgrade,Expand TLS upgrade guide
15973,"build: Lint shell scripts, and make all shell scripts lint cleanly",
15974,build: Install Go in Vagrant from official release,
15975,build: Fix Travis following Vagrant changes,
15976,build: Rework Vagrant to support multiple OS boxes,"This commit reworks the Vagrantfile for Nomad in order to support straightforward testing on more than one operating system, whilst retaining the ability to stand up a test cluster running Ubuntu. The following changes are made:   Scripts have been extracted from the Vagrantfile into their own shell   script files, in order that editors lint them.   All scripts have been edited to lint with no warnings or errors for   their respective shells.   Scripts are named according to the operating system and privilege   level which they run. We prefer to run a whole shell script as root   versus prefixing (essentially) every command with module or an   equivalent.   The Linux development box has been separated from the test cluster,   removing some of the more gnarly (and less portable) logic. The Linux   development box is still primary and autostarts.   A FreeBSD target has been added. The base box works for both   Virtualbox and VMWare Fusion.   A target is added to the GNUmakefile to stand up a test cluster, using   the default provider, or overriding the provider by setting the PROVIDER   variable in make:  module module    Machines in the test cluster have Avahi configured for zeroconf   discovery. Each machine can ping each other machine at module  for example module, module."
15977,Add links and improve verify_https_client callout,The old wording made it sound like verify_https_client=true broke all https health checks.
15978,Fix typos and reword future direction,Current plan for the future still requires two server restarts.
15979,build: Add build targets for FreeBSD/amd64,
15980,Merge pull request #3179 from jen20/nan-floats,"client: Guard against ""NaN"" values from floats"
15981,"client: Guard against ""NaN"" values from floats",This commit protects against finding module tokens in JSON streams because of infinity representation on serialization.
15982,Merge pull request #3178 from jen20/update-x-sys-unix,"deps: Update golang.org/x/sys/{unix,windows}"
15983,"deps: Update golang.org/x/sys/{unix,windows}",
15984,Hide non-user commands from autocomplete output,This PR hides non-user CLI commands from the list of autocomplete suggestions.
15985,Merge pull request #3173 from hashicorp/f-namespace-sync,Sync namespace changes
15986,Expand tls upgrade guide, Non-trivial clusters risk rescheduling many if not all of their jobs   if they don't adjust their heartbeat configs. Still needs links
15987,vendor filter iterator,
15988,Fix search contexts,
15989,Sync namespace changes,
15990,Merge pull request #3162 from hashicorp/f-tagged-metrics-api,Tagged metrics API
15991,match table names to logged values,docs fixup
15992,Merge pull request #3169 from hashicorp/v-cli,Vendor cli to get exit code 127 on unknown command
15993,Merge pull request #3168 from hashicorp/t-job-deployment,Add testing around nomad job deployments command
15994,Merge pull request #3150 from hashicorp/f-watchctx,WatchCtx propogates context error
15995,update telemetry client metrics for new values,
15996,WatchCtx propogates context error,
15997,changelog,
15998,Vendor cli to get exit code 127 on unknown command,
15999,Add testing around nomad job deployments command,
16000,Merge pull request #3166 from pkrolikowski/fix-panic-deployment-latest,[cli] Fix panic while running latest deployment command witch -latest flag
16001,improve documentation,move metrics to telemetry; copy to client config
16002,Fix panic while running latest deployment command,
16003,tagged metrics config options should be on telemetry config,"better api example, add telemetry documentation"
16004,add documentation for new HTTP metrics endpoint,
16005,add http endpoint for in memory metrics,prevent against flaky test due to timing/initialization issues
16006,Fix Windows AMD64 build architecture,
16007,changelog,
16008,Merge pull request #3148 from clinta/purge-stopped,Always purge stopped containers
16009,Merge pull request #3165 from hashicorp/b-docker-auth,Fix repo name passed to docker credential helpers
16010,Merge pull request #3164 from hashicorp/v-go-getter,Update go-getter
16011,Vendor consul-template (#3153), Vendor consul-template  Fixes https://github.com/hashicorp/nomad/issues/3133  changelog
16012,Fix repo name passed to docker credential helpers,This PR fixes the server url passed to docker credential helpers and fixes stderr capture. Fixes https://github.com/hashicorp/nomad/issues/2957
16013,Update go-getter,Fixes https://github.com/hashicorp/nomad/issues/3154
16014,Merge pull request #3140 from hashicorp/f-round-trip-test,Integration test for round tripping a job.
16015,update test to use assert,
16016,changelog,
16017,Parse Docker mounts correctly (#3163), Parse Docker mounts correctly  This PR fixes the parsing of Docker mounts and adds testing to ensure no regressions. Fixes https://github.com/hashicorp/nomad/issues/3156  Review feedback
16018,Merge pull request #3147 from hashicorp/b-tagged-metrics,Add support for tagged metrics
16019,add changelog,
16020,final code review fixups,
16021,fix up travis test failure via race condition,
16022,fixups from code review,
16023,labels depend on full setup of client beforehand,
16024,update comments,
16025,remove prints during test,
16026,parse config for metrics fields,
16027,refactor to use baseLabels,
16028,pass in commonly used values,
16029,create base labels to be used in every metric,
16030,"emit metrics using labels, add option for backwards compatibility",
16031,add metrics options to client config,
16032,vendor latest version of go-metrics and datadog-go/statsd,
16033,Merge pull request #3160 from hashicorp/f-acl,Initial ACL enforcement framework
16034,Remove generated structs,
16035,nomad: fixing test,
16036,api: Fixing double region merge conflict,
16037,nomad: use hashes for efficient token/policy diffing,
16038,nomad: compute hash for ACL policies and tokens,
16039,api: full CRUD for ACL token API,
16040,api: support token listing,
16041,api: support querying policies,
16042,api: support policy delete,
16043,api: Adding support for ACL tokens,
16044,testutil: Allow enabling ACLs,
16045,Address @dadgar feedback,
16046,nomad: avoid replication consistency issues by setting MinQueryIndex,
16047,ACL RPCs allow stale reads for scalability,
16048,website: add missing space,
16049,agent: fix routing for token-specific request,
16050,website: complete ACL guide,
16051,website: filling in ACL guide,
16052,website: pointing to ACL guide,
16053,website: Document ACL APIs and configuration,
16054,vendoring blake2b,
16055,Adding a comment to address @dadgar,
16056,agent: thread ACLs for Job Register,
16057,nomad: enforce ACLs on job submit,
16058,"nomad: allow getting policies which are subset of token, fixes client resolution",
16059,nomad: adding policy subset check,
16060,client: fixing policy resolution after ACL endpoint enforcement,
16061,nomad: forward DeleteToken requests for global tokens,
16062,nomad: forward UpsertToken requests for global tokens,
16063,agent: thread through token for ACL endpoint tests,
16064,Passthrough replication token for token/policy replication,
16065,nomad: ACL endpoints enforce permissions,
16066,"Add ErrPermissionDenied, rename TokenNotFound",
16067,agent: Adding X-Nomad-Token header parsing,
16068,nomad: Add SecretID to QueryOptions and WriteMeta,
16069,nomad: ACL endpoints check support enabled and redirect to authority,
16070,nomad: adding ACL bootstrapping endpoint,
16071,nomad: adding ACL bootstrap endpoints,
16072,nomad: adding bootstrapping checks,
16073,nomad: adding bootstrap state store method,
16074,Address @dadgar feedback,
16075,nomad: Switch from SHA1 to Blake2 @chelseakomlo,
16076,structs: sort policies to avoid order dependence for caching,
16077,client: adding token resolution logic,
16078,nomad: switch policy/token replication to use batch endpoints,
16079,noamd: Adding batch fetch endpoints for ACL tokens and policies,
16080,nomad: Adding token resolution endpoint,
16081,client: adding token cache for ACL resolution,
16082,nomad: refactor to use CompileACLObject and handle anonymous token,
16083,structs: Adding ACL compilation helper,
16084,structs: cache key helper for policy list,
16085,client: create ACL and Policy cache,
16086,agent: thread ACL config to client,
16087,Address @chelseakomlo comments,
16088,Moving shared ACL objects,
16089,nomad: adding ACL token resolution logic,
16090,acl: Adding IsManagement check,
16091,Address @dadgar feedback,
16092,Fixing intent,
16093,nomad: adding global token replication,
16094,nomad: Adding ability to filter list of tokens to global only,
16095,nomad: adding policy replication support,
16096,agent: thread through ACL config to Server,
16097,agent: Adding ACL block configuration,
16098,Address @dadgar feedback,
16099,"agent: fixing ACL endpoint, return updated tokens",
16100,nomad: generate accessor/secret ID server side,
16101,agent: Adding HTTP endpoints for ACL tokens,
16102,nomad: renambe PublicID to AccessorID for consistency,
16103,nomad: implement ACL token endpoints,
16104,nomad: Add ACL Token snapshot/restore to FSM,
16105,nomad: CRUD methods for ACLTokens,
16106,nomad: adding ACLToken table,
16107,nomad: adding ACLToken struct,
16108,nomad: fixing state store tests due to signature mismatch,
16109,nomad: Adding Validate for ACLPolicy,
16110,nomad: adding validation of policy name and rules,
16111,agent: Adding ACL Policy endpoints,
16112,Addressing @dadgar feedback,
16113,nomad: adding upsert policy endpoint,
16114,nomad: implement policy delete endpoint,
16115,nomad: adding Get/List endpoints for ACL policies,
16116,nomad: update method signature for tests,
16117,Addressing @dadgar review feedback,
16118,nomad: Upsert and Delete ACL policies can take a list,
16119,nomad: adding FSM snapshot/restore of ACL policies,
16120,nomad: Adding CRUD to state store for ACL Policies,
16121,nomad: adding policy table to state store,
16122,acl: adding validation to the namespace name,
16123,acl: Adding compiled ACL object,
16124,acl: Adding policy parsing with tests,
16125,Update Vagrantfile,
16126,Merge pull request #3095 from hashicorp/f-update-go,Update to Go 1.9
16127,Include google compare library,
16128,Update to Go 1.9,
16129,re-ignore generated files,
16130,fix checking of context error,
16131,fix blocking query due to ctx change,
16132,vendor go-memdb,
16133,Always purge stopped containers,
16134,Merge pull request #3142 from hashicorp/f-deployment-watcher,Deployment watcher takes state store
16135,Remove panic from testing,
16136,Merge pull request #3146 from jolexa/patch-1,Update peers.info message for operators
16137,Update peers.info message for operators,
16138,Deployment watcher takes state store,
16139,Integration test for round tripping a job.,This PR adds a test that does: 1) nomad init 2) nomad run example.nomad 3) nomad inspect example 4) Equivalent of `curl -XPUT -d @job.json nomad/v1/job/example
16140,changelog,
16141,Merge pull request #3135 from clinta/docker-log-retry,fix logging re-init
16142,Merge pull request #3137 from hashicorp/b-deployment-ordering,Sort task groups when displaying a deployment
16143,Merge branch 'master' into b-deployment-ordering,
16144,Merge pull request #3139 from hashicorp/b-copied-update,Don't merge empty update from job into task groups
16145,Merge pull request #3138 from hashicorp/b-status-length,Search handles prefix longer than allowed UUIDs
16146,Merge pull request #3136 from hashicorp/b-distinct-host,Allow distinct_host to have L/RTarget set
16147,changelog,
16148,Don't merge empty update from job into task groups,This PR fixes an issue in which we would merge an update stanza from the job into the task groups even if it was empty. This broke round tripping a job (reading from the api and resubmitting as JSON) Fixes https://github.com/hashicorp/nomad/issues/3132
16149,changelog,
16150,Search handles prefix longer than allowed UUIDs,This PR fixes an issue in which the Search endpoint would error if the prefix was longer than the allowed 36 characters of a UUID. Fixes https://github.com/hashicorp/nomad/issues/3134
16151,changelog,
16152,Sort task groups when displaying a deployment,Fixes https://github.com/hashicorp/nomad/issues/3131
16153,changelog,
16154,Allow distinct_host to have L/RTarget set,This PR removes validation that could break job backwards compatibility. The targets are ignored so there is no side effects. Fixes https://github.com/hashicorp/nomad/issues/3130
16155,fix logging re-init,
16156,vendor template,
16157,Merge pull request #3129 from hashicorp/b-zsh-complete,Fix path completions on zsh
16158,changelog,
16159,Fix path completions on zsh,This PR fixes autocompletion of paths that include folders on zsh.
16160,Merge pull request #3124 from hashicorp/b-windows-binary-missing-extension,Add .exe file extensions for windows builds
16161,Merge pull request #3128 from hashicorp/d-all-at-once,Clarify all_at_once parameter
16162,Clarify all_at_once parameter,Fixes https://github.com/hashicorp/nomad/issues/3125
16163,changelog,
16164,Merge pull request #3127 from hashicorp/b-tls-api,Fix TLSServerName for Node API Client
16165,Merge branch 'b-tls-api' of github.com:hashicorp/nomad into b-tls-api,
16166,Address feedback,
16167,Update README.md,
16168,Add readmes,
16169,tls cluster,
16170,Check for errors initializing client for autocomplete,
16171,Node Client doesn't share HTTP client,
16172,add .exe file extensions for windows builds,
16173,Fix TLSServerName for Node API Client,This PR fixes the construction of the TLSServerName when connecting to a node that has TLS enabled and adds tests for all possible permutations. Fixes https://github.com/hashicorp/nomad/issues/3013
16174,Merge pull request #3119 from jippi/patch-3,"Error message for search API does not include the ""all"" option"
16175,changelog,
16176,Merge pull request #3120 from hashicorp/b-multi-match,Fix exact job match when prefix of other job
16177,bump down version,
16178,Merge pull request #3122 from hashicorp/b-even-uuids,status commands handle uuid prefixes with hyphens
16179,add prefix tests,
16180,use helper,
16181,respond to comments,
16182,status commands handle uuid prefixes with hyphens,
16183,Fix even length uuid post hyphen,
16184,Status honors exact match and displays matches when more than one is available,
16185,"Error message for search API does not include the ""all"" option",
16186,bump version,
16187,Release v0.6.2,
16188,bump version,
16189,fix zip structure,
16190,Merge pull request #3116 from hashicorp/b-fix-fs,Fix logs/fs commands
16191,changelog,
16192,Fix logs/fs commands,This PR fixes an assignment to a nil map in the api pkg related to accessing logs and the filesystem of allocations. Fixes https://github.com/hashicorp/nomad/issues/3115
16193,Merge pull request #3114 from hashicorp/f-release-0.6.1,Nomad 0.6.1
16194,Nomad 0.6.1,
16195,Merge pull request #3110 from hashicorp/f-commit-generated,Welcome to the brave new world
16196,Merge pull request #3113 from hashicorp/f-have-appveyor-run-install,Just run go install until we fix tests on Windows
16197,Merge pull request #3112 from hashicorp/b-vendor-windows-dep,Vendor missing windows dep
16198,Just run go install until we fix tests on Windows,
16199,Vendor missing windows dep,
16200,Add #3108 to changelog,
16201,Merge pull request #3111 from hashicorp/d-status,Document new status command
16202,Document new status command,This PR documents the new status and job status command.
16203,Welcome to the brave new world,Committing generated code to help ensure reproducible builds.
16204,Merge branch 'master' of github.com:hashicorp/nomad,
16205,Remove tests checking autocomplete only does 1 arg,
16206,Merge pull request #3108 from hashicorp/b-3013-stats-tls,Fix TLS support in api pkg / cli
16207,Simplify region handling,
16208,Refactor GetNodeClient weirdness, No need to for a pointer to a pointer Properly set and use QueryOptions.Region
16209,cleanup changelog,
16210,don't limit on one arg,
16211,changelog,
16212,Merge pull request #3081 from clinta/maxparallel0,If MaxParallel == 0 default limit to count
16213,Merge pull request #3107 from hashicorp/b-migrate-context-all,"All context should use string context ""all"""
16214,Merge pull request #3109 from hashicorp/f-squelch-usage-logspam,Squelch logspam when unable to get disk usage stats
16215,Merge pull request #3103 from hashicorp/vagrant-install-autocomplete,Automatically install autocomplete for Nomad getting started guide
16216,Merge pull request #3096 from hashicorp/d-all-allocs,Describe the all parameter when listing job allocs
16217,Squelch logspam when unable to get disk usage stats,To reproduce logspam: module
16218,Fix TLS support in api pkg / cli,"Fixes #3013 It's a little weird that Client now has a method for returning a NewClient, but it's a convenient way to dedupe the logic to connect-directly-to-a-node which is nontrivial and had sutble differences between locations."
16219,Reduce startup time on Mac,This PR moves creating the API client into the returned predict function. The creation of the client causes a lookup of all the system certificates and doing that for each command on mac was extremely slow.
16220,migrate all context,
16221,Search respects QueryOptions and returns QueryMeta,@chelseakomlo heads up on this change
16222,Add QueryOptions to SearchRequest,
16223,automatically install autocomplete,
16224,Merge pull request #3102 from hashicorp/b-status-deployment-id,Get status of deployment via status cli command
16225,get status of deployment via status cli command,
16226,Merge pull request #3047 from hashicorp/f-status-autocomplete,Status autocomplete
16227,add global flags to status; re-order functions,
16228,refactor and fixups from code review,
16229,Merge pull request #3097 from hashicorp/d-search-http-documentation,Add HTTP documentation for search api
16230,add changelog,
16231,vendor updated cli and autocomplete dependencies,
16232,cli help and logging formatting,
16233,fix up formatting of error message,fixups from code review
16234,limit argument autocompletion to one,
16235,use existing arg parsing functionality,
16236,small fixups,
16237,fix autocomplete to list all matches,
16238,default to job status if no arguments are provided,
16239,adds any resource autocomplete,defaults to listing jobs if no id is provided
16240,"job names causes errors when searching other contexts, only log but not return this err",
16241,vendor complete library,
16242,alignment and fixups from  code review,
16243,Set MaxParallel default to 1,
16244,add HTTP documentation for search api,
16245,Fix confusing batch job example,
16246,Merge pull request #3091 from jippi/patch-3,Add missing ReconcileSummaries API method
16247,Describe the all parameter when listing job allocs,Fixes https://github.com/hashicorp/nomad/issues/3092
16248,changelog,
16249,Merge pull request #3073 from clinta/docker-500,Allow retry of 500 API errors to be handled by restart policies
16250,changelog,
16251,Merge pull request #3089 from hashicorp/b-link-local,Handle interfaces that only have link-local addrs
16252,Add missing ReconcileSummaries API method,References https://www.nomadproject.io/api/system.html#reconcile-summaries
16253,Fix Golang update in Vagrant provisioner,
16254,Merge pull request #3075 from hashicorp/fix-build-lxc-failure,Root permissions are needed for testing certain functionality
16255,Merge pull request #3087 from hashicorp/f-flag-autocomplete,Enable autocompletion of flags
16256,Root permissions are needed for testing certain functionality,
16257,Merge pull request #3078 from hashicorp/b-remove-make-bin,"Use make release target, remove make bin"
16258,Autocomplete global flags,
16259,small fixes and cleanup,
16260,add global flags to autocomplete,
16261,use PredictAnything when an flag accepts an argument,
16262,fixes for changelog,
16263,update changelog,
16264,enable autocompletion of flags,
16265,Revendor isatty since it is used by mitchellh/cli,
16266,Handle interfaces that only have link-local addrs,"This PR changes the fingerprint handling of network interfaces that only contain link local addresses. The new behavior is to prefer globally routable addresses and if none are detected, to fall back to link local addresses if the operator hasn't disallowed it. This gives us pre 0.6 behavior for interfaces with only link local addresses but 0.6+ behavior for IPv6 interfaces that will always have a link-local address. Fixes https://github.com/hashicorp/nomad/issues/3005 /cc diptanuc"
16267,Merge pull request #3057 from hashicorp/f-tty,Detect STDOUT isn't a TTY and disable color
16268,Change tty detection library,
16269,changelog,
16270,Detect STDOUT isn't a TTY and disable color,This PR disables color output when the STDOUT is not a TTY. This makes running commands under module or other commands nicer.
16271,Merge pull request #3056 from hashicorp/b-auto-revert,Fix purging job versions
16272,Merge pull request #3077 from hashicorp/f-docker-mounts,Clean up docker mounts
16273,resolve feedback,
16274,Merge pull request #3086 from hashicorp/d-deployment,Clarify deployment api docs
16275,bump consul version,
16276,clarify deployment api docs,
16277,Merge pull request #3083 from nicolaevladescu/master,Fix typo Automtic -> Automatic
16278,Fix typo Automtic -> Automatic,
16279,"use make release target, remove make bin",
16280,Clean up docker mounts,
16281,Merge pull request #3076 from hashicorp/f-autocomplete-args,Autocomplete arguments for remaining commands
16282,move autocomplete functions to top for consistency of placement,
16283,flesh out the rest of the job subcommands,
16284,update older autocomplete tests to inject state,
16285,nomad stop,
16286,inspect,
16287,node drain,
16288,logs and fs,
16289,Autocomplete deployment commands,
16290,Allow retry of 500 API errors to be handled by restart policies,
16291,changelog,
16292,Merge pull request #3002 from jrasell/gh_2993,Add the Nomad agent version to the node-status CLI output.
16293,Merge branch 'master' of github.com:hashicorp/nomad,
16294,fix lxc,
16295,fix lxc,
16296,remove printing of GOOS for generate,
16297,Merge pull request #2953 from jen20/gnumake,build: Replace shell scripts with GNUmakefile
16298,changelog,
16299,Merge pull request #3070 from hashicorp/b-rolling,Placing allocs counts towards placement limit
16300,fix test,
16301,Merge pull request #3068 from hashicorp/f-add-deployments-search-api,Add deployments to search api
16302,Merge pull request #3069 from clinta/mount-docs,add docs for mount
16303,changelog,
16304,Placing allocs counts towards placement limit,"This PR makes placing new allocations count towards the limit. We do not restrict how many new placements are made by the limit but we still count towards the limit. This has the nice affect that if you have a group with count = 5 and max_parallel = 1 but only 3 allocs exist for it and a change is made, you will create 2 more at the new version but not destroy one, taking you down to two running as you would have previously. Fixes https://github.com/hashicorp/nomad/issues/3053"
16305,add docs for mount,
16306,Merge pull request #3059 from hashicorp/d-minor-doc-updates-2,Minor doc updates
16307,Merge pull request #3041 from hashicorp/b-3036-update-gopsutil,Update gopsutil to stop calling SetEnv
16308,add deployments to search api,
16309,fix hook,
16310,add bold formatting,
16311,reword for clarity; note that data is not replicated between regions,
16312,Merge pull request #3058 from hashicorp/d-minor-doc-updates,Minor documentation tweaks
16313,Reword long-ish sentence.,
16314,Clarify that it is not required to set a Vault token on the clients.,
16315,Make it explicit that data is not replicated between regions.,
16316,changelog,
16317,Fix purging job versions,This PR fixes an issue in which the job versions weren't properly cleaned when removing a job. Fixes https://github.com/hashicorp/nomad/issues/3052
16318,Merge pull request #3031 from hashicorp/f-2924-consul-headers,Add Header and Method support for HTTP checks
16319,Merge mistake made go fmt fail,
16320,build: Replace shell scripts with GNUmakefile,"This commit replaces the shell script-driven build process for Nomad with one based around GNU Make (note we do use GNU-specific constructs), requiring no additional scripts for common cases of development. The following targets are implemented: Per-OS/arch combinations: module Phony targets: module Note that there are some semantic differences from the previous version.   module is no longer a dependency of module builds. This is because    it causes a rebuild every time, even when no code has changed, since    module does not appear to leave file timestamps alone.    Regardless, it is insufficient to generate on one host OS - it needs    to be run on each target to ensure everything is generated correctly.   module is no longer checked. This should be enabled as a linter once    the module refactoring will pass on the whole code base, in order    to avoid special cased checks versus using go-metalinter.   Example Usages: Make a development build for the current GOOS/GOARCH: module Make release build packages appropriate for the host OS: module Update generated code for the host OS: module Run linting checks: module Build a specific alternative GOOS/GOARCH/tags combination: module"
16321,build acl branch,
16322,Merge pull request #3021 from clinta/docker-mount2,Expose docker mount options
16323,Update to latest upstream gopsutil,
16324,Document check header and method,
16325,Add check header and method changelog entry,
16326,Put header diff in its own function,
16327,Test check header error conditions,
16328,Error should tell user exactly what type to use,
16329,Initializing embedded structs is weird,
16330,Add diff support for ServiceCheck.Header,
16331,Test createCheckReg,
16332,Update and test service/check interpolation,
16333,Add missing consul/testutil/retry pkg,
16334,Add jobspec test for check method/header,
16335,Update Consul to v0.9.2 for Header and Method,
16336,Add Header and Method support for HTTP checks,
16337,Fix broken link,
16338,Add shutdown delay changelog entry,
16339,Merge pull request #3043 from hashicorp/f-2441-shutdown-delay,Add optional shutdown delay to tasks
16340,Lower ShutdownDelay for non-Travis testing,
16341,changelog,
16342,Merge pull request #3051 from hashicorp/b-batcher,Fix race creating EvalFuture
16343,Fix ShutdownDelay diff test,
16344,Lower shutdown delay in test,
16345,Fix race creating EvalFuture,This PR fixes https://github.com/hashicorp/nomad/issues/3044
16346,Add ShutdownDelay to JSON Job docs,
16347,"Make shutdown delay log DEBUG, not INFO",
16348,Merge pull request #3048 from hashicorp/f-pre-push,Add a shared git hooks directory
16349,Add a shared git hooks directory,This PR adds a place to share git hooks.
16350,Merge pull request #3045 from slobo/patch-1,Spelling fix: stana -> stanza
16351,restrict mount to volume type,
16352,Spelling fix: stana -> stanza,
16353,Add optional shutdown delay to tasks,Fixes #2441 Defaults to 0 (no delay) for backward compat and because this feature should be opt-in.
16354,bump version,
16355,Merge pull request #3042 from hashicorp/f-version,Add version package
16356,Add #3041 to changelog,
16357,Fix tests,
16358,Add version package,This PR adds a version package and consolidates version strings into a Version struct.
16359,Update gopsutil to stop calling SetEnv,Fixes #3036
16360,Updates based on feedback provided by dadgar.,
16361,Merge pull request #3037 from hashicorp/b-limit-tab-autocomplete,Tab completion should only happen once
16362,fix http test,
16363,Must be root for TestAllocDir_CreateDir,
16364,tab completion should only happen once,
16365,Merge pull request #3026 from hashicorp/f-autocomplete-job-eval-node,"Add autocomplete for nodes, evals, and jobs"
16366,tests for autocomplete functions,
16367,changelog,
16368,Merge pull request #3023 from hashicorp/b-bitmap,Fix panic occuring from improper bitmap size
16369,fixes,
16370,Merge pull request #3024 from hashicorp/f-no-revert-target,Deployment desc  when no stable job and autorevert
16371,Merge pull request #3025 from hashicorp/f-health-events,Emit task events explaining alloc health
16372,comments,
16373,Merge pull request #3007 from hashicorp/b-blocking-refactor-2,Refactor blocking/migrating allocations
16374,Merge pull request #3027 from jkburges/patch-1,Match example update configuration to comment
16375,Fix formatting,
16376,Match example update configuration to comment,"""two-at-a-time"" == module"
16377,Cleanup comments and return val,
16378,spelling,
16379,Return move errors from local Migrate like remote,Since alloc runner just logs these errors and continues there's no reason not to return it.
16380,Move migrating state into prevAllocWatcher,
16381,"adding autocomplete for nodes, evals, and jobs",
16382,Merge pull request #2995 from hashicorp/f-allocation-autocomplete,"Allocation autocomplete, client api"
16383,Merge pull request #3022 from hashicorp/b-check-validation,Fix timeout validation for script checks
16384,update comment for revised contexts,
16385,fixups from code review,
16386,Fix integration test,
16387,context constants should be in both api and structs pkg,
16388,using contexts constants in replace of string contexts,fix up endpoints
16389,use constants for contexts,
16390,code refactoring and fixups,
16391,change endpoint to /v1/search,
16392,update comments,refactor for simplicity
16393,"even in rounding down for queries, full prefixes are matched against ids","only applies to uuids, not jobs"
16394,rename to cluster search,comment updates
16395,fix failing test assertion,small refactors
16396,autocomplete for allocation ids,
16397,round down odd prefixes,
16398,Add #3022 changelog entry,
16399,Merge pull request #3019 from jen20/import-formatting2,build: Apply goimports formatting to various files
16400,Fix timeout validation for script checks,It appears this was disabled a year ago when defaulting and validation code was probably different: 91bbc5c3c769f4f17134dbc603ec677a178a9e9e Fixes an issue reported via the mailing list: https://groups.google.com/d/msg/nomad-tool/yiPCTfOpYn4/yv7MMPUABQAJ
16401,build: Apply goimports formatting to various files,"The following files were not formatted as the output of goimports(1) would create, causing the goimports linter to fail: command/agent/resources_endpoint.go nomad/resources_endpoint.go nomad/resources_endpoint_test.go"
16402,Deployment desc  when no stable job and autorevert,This PR adds a specialized description when the job has autorevert set and there is no job to revert to.
16403,Fix panic occuring from improper bitmap size,This PR fixes an allignment calculation when determining the bitmap size. Fixes https://github.com/hashicorp/nomad/issues/3008
16404,test,
16405,Merge pull request #3014 from hynek/patch-4,Fix number of primary nouns in Nomad
16406,Refactor health watcher and emit events,
16407,Off by one!,
16408,Merge pull request #2923 from hashicorp/d-tls-guide,TLS Guide
16409,Rename guide from tls to securing-nomad,
16410,Oops! Forgot demo/vagrant/cfssl.json file,
16411,Add openssl rand example; reword intermediate CAs,Thanks @jvoorhis!
16412,Soft fail on migration errors,
16413,Exit if alloc listener closes,"Add test for that case, add comments, remove debug logging"
16414,Update tests for new blocking/migrating code,
16415,Set failed status instead of panic'ing,Fixup some TODOs and formatting left from new prevAllocWatcher code.
16416,switch from alloc blocker to new interface,interface has 3 implementations:  local for blocking and moving data locally remote for blocking and moving data from another node noop for allocs that don't need to block
16417,initial attempt at refactoring blocked/migrating,
16418,Only set alloc status if it's not already terminal,
16419,Merge pull request #3010 from hashicorp/b-vendor-test-deps,Vendor vault test deps
16420,Merge pull request #3011 from hashicorp/b-cv-fix-TestEnvAWSFingerprint_aws,Updated AWS fingerprint test for ami-id
16421,Vendor vault test deps,This is a weird one because module does a module so CI never fails due to missing Vault dependencies. However developer machines will have whatever version of vault they grabbed last time they bootstrapped a new dev environment. This can lead to surprising build issues and different devs testing slightly different code. So let's vendor all test deps to try to keep the Nomad repo self-contained.
16422,Merge pull request #3009 from nicolaevladescu/master,Fix documentation bug on json jobs
16423,changelog,
16424,Merge pull request #2992 from decoomanj/master,Added dnsoptions to the docker driver
16425,Update docker.html.md,
16426,Updated AWS fingerprint test for ami-id,"In https://github.com/hashicorp/nomad/pull/2999, I changed ami-id to non-unique.  This updates the test to reflect that."
16427,added a newline,
16428,Fix navigation highlight for JSON Jobs,
16429,Fix documentation bug,Fix documentation bug: distinct_host -> distinct_hosts
16430,updated message in test,
16431,changelog,
16432,Merge pull request #3006 from hashicorp/b-unmount,Unmount task directories when alloc is terminal
16433,Unmount task directories when alloc is terminal,This PR unmounts directories from tasks when the alloc is terminal rather than when it is garbage collected. /cc @angrycub
16434,changelog,
16435,Merge pull request #2984 from hashicorp/b-tags,Fix alloc health with checks using interpolation
16436,Address comments,
16437,changelog,
16438,Merge pull request #3001 from hashicorp/f-template-events,Template emits events explaining why it is blocked
16439,address comments,
16440,Merge pull request #2998 from hashicorp/f-migrate-nomad-status,Migrate nomad status to nomad job status
16441,Merge pull request #2999 from hashicorp/b-cv-aws-ami-id-nonunique,AMI ID is potentially non-unique
16442,Merge pull request #3004 from adamatan/master,Code highlighting
16443,expose mount options to nomad,
16444,update fsouza/go-dockerclient to 37a1d72,
16445,Code highlighting,
16446,removed empty line,
16447,Add the Nomad agent version to the node-status CLI putput.,
16448,Template emits events explaining why it is blocked,This PR does the following: * Adds a mechanism to emit events in the TaskRunner * Vendors a new version of Consul-Template that allows extraction of missing dependencies * Adds logic to our consul_template.go to determine missing events and emit them in a batched fashion. * Refactors the consul_template code to split the run method and take in a config struct rather than many parameters. Fixes https://github.com/hashicorp/nomad/issues/2578
16449,Vendor new consul-template,
16450,AMI ID is potentally non-unique,Changed the keys map to reflect that.
16451,migrate nomad status to nomad job status,
16452,fixed typo,
16453,added dnsoptions to the docker driver,
16454,Merge branch 'master' of github.com:hashicorp/nomad,
16455,Fix broken Template Diff Test,
16456,Merge pull request #2986 from hashicorp/f-terraform-fixes,Terraform: enable Consul UI and bind Nomad to all interfaces
16457,changelog,
16458,Merge pull request #2988 from jvoorhis/redact-vault-token,Redact Vault.Token from AgentSelf response.
16459,Handle nil values when redacting vault token.,
16460,Merge pull request #2980 from hashicorp/b-doc-missing-node-allocations,Re-added Allocations documentation
16461,Merge pull request #2979 from lfarnell/cleanup,Code cleanup
16462,Merge pull request #2989 from jrasell/patch-1,Update job.html read most recent deployment sample
16463,Update job.html read most recent deployment sample,The sample request incorrectly used module which listed all deployments for the specified job. The sample request has therefore been updated to use the correct endpoint which returns only the jobs most recent deployment.
16464,Redact Vault.Token from AgentSelf response.,"If Config.Vault.Token is defined, /v1/agent/self will return the string module. If the token is not set, This endpoint will continue to return the empty string."
16465,Emit generic task events,
16466,update AMI ID; remove unnecessary output,
16467,Merge pull request #2983 from hashicorp/b-update-raft-atomics2,Update raft to fix atomics alingment on 32bit
16468,changelog,
16469,Merge pull request #2947 from hashicorp/f-vault-grace,Allow template to set Vault grace
16470,Rename runnerConfig,
16471,Fix alloc health with checks using interpolation,Fixes an issue in which the allocation health watcher was checking for allocations health based on un-interpolated services and checks. Change the interface for retrieving check information from Consul to retrieving all registered services and checks by allocation. In the future this will allow us to output nicer messages. Fixes https://github.com/hashicorp/nomad/issues/2969
16472,Update raft to fix atomics alingment on 32bit,Related to #2963 Also pulls in some state file syncing improvements
16473,Added code block styling,
16474,Re-added Allocations documentation,"In a content reorganization, the allocations endpoint documentation was removed.  This just brings it back in and updates the output to match v0.6.0 output"
16475,fixed all spelling mistakes for goreport,
16476,Merge pull request #2964 from hashicorp/f-autocomplete-api,autocomplete api
16477,update changelog,
16478,Merge pull request #2965 from hashicorp/b-2963-fix-arm-atomics,Use int32 for atomic ops to avoid alignment issues
16479,Changelog,
16480,Merge pull request #2959 from hashicorp/b-periodic-dispatcher,"Fix restoration of parameterized, periodic jobs"
16481,Merge pull request #2956 from hashicorp/f-dev,Add module for configs for use by Nomad developers
16482,Resolve comments,
16483,Merge pull request #2974 from nak3/fix-monitoring-docs,docs: fix tiny errors in monitoring spark app
16484,Merge pull request #2975 from nak3/fix-link-hdfs,docs: fix invalid links for hdfs examples
16485,code simplifications and logging,
16486,Update requirements.html.md,Fixes https://github.com/hashicorp/nomad/issues/2976
16487,"max index for any resource, if context is unspecified",
16488,syntax fixups and logging,
16489,docs: fix invalid link for hdfs examples,
16490,docs: fix tiny errors in monitoring spark app,
16491,changelog,
16492,Merge pull request #2972 from hashicorp/d-doc-fixes,Small improvements to docs
16493,Merge pull request #2961 from hashicorp/b-deployment-ttl,Lost allocs replaced even if deployment failed
16494,Small improvements to docs,This PR fixes an incorrect placement of the update stanza in the task and also links from the env stanza into an example of using the template block to generate dynamic environment variables.
16495,further refactoring,
16496,Merge pull request #2968 from hashicorp/d-task-ports,Document  network env vars
16497,"if no context is specified, set maximum index for available contexts",
16498,Document  network env vars,Looks like I accidently dropped them when combining env var listings in PR #2709
16499,fix up tests to intantiate assertion test helper,add http tests for remaining contexts
16500,Merge pull request #2966 from sprutner/patch-3,Update revert.html.md.erb
16501,Update revert.html.md.erb,wrong command
16502,bind Nomad to all interfaces; enable Consul UI,
16503,Use int32 for atomic ops to avoid alignment issues,"From https://golang.org/pkg/sync/atomic/#pkg-note-BUG : On both ARM and x86-32, it is the caller's responsibility to arrange for 64-bit alignment of 64-bit words accessed atomically. The first word in a global variable or in an allocated struct or slice can be relied upon to be 64-bit aligned."
16504,further refactoring,
16505,resources are expected by state store to be plural,
16506,set response index and meta information,add tests for edge cases
16507,add documentation,extract magic number into variable
16508,refactor rpc endpoint and tests,add test for when no prefixes are matched add test for no context at HTTP api
16509,resources list endpoint accepts http POST and PUT,set the index for a resources response
16510,refactor and add error handling for invalid context type,
16511,adding allocations to resouces list endpoint,adding nodes to resources list endpoint
16512,refactor to remove duplication for types of resources,
16513,use upsert as a test helper,
16514,add truncation boolean to response,
16515,adds evaluations,makes context singular
16516,change resources endpoint from http get to post,
16517,"remove resourceliststub, no need for another layer of abstraction",
16518,limit resources results to 20,
16519,refactor test helper,
16520,remove unnecessary validations; these are tested elsewhere,
16521,test resources endpoint will return matching prefixes,
16522,adding test validation that received resources matches requested,
16523,Retrieve job information for resources endpoint,requires further refactoring and logic for more contexts
16524,Merge pull request #2962 from jvoorhis/master,Spelling and grammar fixes for manual bootstrap guide.
16525,Spelling and grammar fixes for bootstrap guide.,
16526,Lost allocs replaced even if deployment failed,This PR allows the scheduler to replace lost allocations even if the job has a failed or paused deployment. The prior behavior was confusing to users. Fixes https://github.com/hashicorp/nomad/issues/2958
16527,Merge pull request #2816 from capone212/fix-pending-state,2563 fixed pending state for allocations with terminal status
16528,Merge branch 'master' into fix-pending-state,
16529,Fix double close and cleanup code,
16530,Don't restore parameterized periodic jobs,
16531,"Revert ""Rename GNUMakefile to Makefile""",This reverts commit 9f2ea92877ed655063a5ecf6bb22b7703bc2cea2.
16532,Rename,
16533,Persistent server config,
16534,slightly clean default client.config,
16535,Add module for configs for use by Nomad developers,This PR adds a folder module which can be used to store helpful commands and configs for use when developing Nomad itself.
16536,Merge pull request #2955 from hashicorp/sethvargo/remove_people,Remove people from community section
16537,Remove people from community section,"This is going to be replaced with dynamic content from our CMS in the future, but we agreed to remove it in the interim."
16538,Merge pull request #2954 from jrxFive/python_nomad_client_library_to_docs,add third party client library link for python
16539,fix wording,
16540,add third party client library link for python,
16541,Merge pull request #2952 from jen20/idea-gitignore,meta: Ignore IntelliJ IDEA/Gogland project files
16542,Merge pull request #2951 from jen20/add-dev-marker,"meta: Set main.VersionPrerelease=""dev"""
16543,Merge pull request #2950 from hashicorp/d-service-discovery-typo,"""it's"" -> ""its"""
16544,Merge pull request #2949 from hashicorp/sethvargo/makefilemv,Rename GNUMakefile to Makefile
16545,meta: Ignore IntelliJ IDEA/Gogland project files,
16546,"meta: Set main.VersionPrerelease=""dev""","For most projects using this versioning system, making a commit bumping the version and re-adding the development tag is part of the release SOP (certainly it was for Terraform!). I'm not sure why it didn't happen here, but without this, all development builds show up as Nomad v0.6.0 with no dirty marker or commit marker."
16547,fix typo.,
16548,Rename GNUMakefile to Makefile,
16549,Add $ prefix to shell examples,
16550,Reflow,
16551,Sort filenames,
16552,Missed a mention of 127.0.0.1 as a SAN,
16553,Lots of fixes from @sethvargo," hclfmt the world 2 space indent make every example well formed with stanzas and comments jsonfmt too mdfmt manually _ instead of * no [links][], only [links][links] ordered lists instead of bullets when possible lots of wording fixes de-contractionization add 127.0.0.1 to SANs -1 on intentional errors -1 on first person"
16554,Merge pull request #2931 from zsluedem/master,add job creating json sample in jobs api doc
16555,Merge pull request #2945 from hashicorp/d-rolling,Document update stanza for system scheduler.
16556,Merge pull request #2946 from hashicorp/f-doc-job-anti-affinity-reflow,Added a sentence about job anti-affinity; Reflowed
16557,changelog,
16558,Merge pull request #2942 from hashicorp/f-distinct-count,Distinct Property supports arbitrary limit
16559,Review fixes,
16560,Allow template to set Vault grace,This PR allows a template to specify the Vault grace duration. Fixes https://github.com/hashicorp/nomad/issues/2922
16561,Review changes,
16562,Merge pull request #2940 from hashicorp/d-purge,Document Purge parameter on deregister request
16563,Added sentence about job anti-affinity; Reflowed,This will create a concrete mention of job anti-affminity in the Nomad documentation. The only place we discuss it currently is in a similar sentence on the website itself.  I borrowed liberally from that sentence in crafting this line.
16564,Merge branch 'master' into b-cv-add-job-anti-affinity-sentence,
16565,vendor vault api,
16566,Update consul-template,
16567,Merge pull request #2867 from hashicorp/b-docs-vi-more-orphan-info,More why for the -orphan flag
16568,More review fixes,
16569,Document update stanza for system scheduler.,This PR adds a note to make it clear the limits of the system schedulers update stanza.
16570,Merge pull request #2943 from domudall/patch-1,Fixing spelling mistake
16571,Fixing spelling mistake,Updating module -> module
16572,changelog,
16573,Distinct Property supports arbitrary limit,This PR enhances the distinct_property constraint such that a limit can be specified in the RTarget/value parameter. This allows constraints such as: module This restricts any given rack from running more than 2 allocations from the task group. Fixes https://github.com/hashicorp/nomad/issues/1146
16574,Merge pull request #2939 from hashicorp/b-distinct,Fix incorrect destructive update with distinct_property constraint
16575,Mention xz support,
16576,Document Purge parameter on deregister request,This PR documents the purge parameter when deregistering a job.
16577,Merge pull request #2926 from hashicorp/d-api-json,Example JSON is submitable
16578,Changelog,
16579,Merge pull request #2928 from hashicorp/b-cli-autocomplete,Fix autocmpleting global flags
16580,changelog,
16581,Merge pull request #2934 from morkot/master,Small fix of markdown format identified by markdownlint
16582,Merge pull request #2929 from hashicorp/b-status-panic,Ensure backwards compatibility between 0.6.X CLI and 0.5.X
16583,Fix incorrect destructive update with distinct_property constraint,This PR fixes an issue in which an update to a task group with a distinct property constraint would result in an incorrect destructive update.
16584,driver/rkt: support read-only volume mounts #2883,
16585,Merge pull request #2883 from kmalec/add-support-for-readonly-mount,rkt driver support for read-only volumes mounts
16586,changelog,
16587,Merge pull request #2933 from jen20/remove-gox,build: Remove gox as a tool dependency
16588,Merge pull request #2937 from hashicorp/b-leak-plugin,Fix leaked plugin files for syslog server
16589,Merge pull request #2936 from jen20/goimports,meta: Fix goimports for command/agent/syslog.go
16590,Fix leaked plugin files for syslog server,This PR fixes a leaking of the unix socket used when launching a syslog server for the Docker driver. Fixes https://github.com/hashicorp/nomad/issues/2844
16591,Added a note about the job anti-affinity rule,We only mention job anti-affinity on the main webpage. This sentence is borrowed from there with minor tweaks to at least introduce it in the docs corpus
16592,meta: Fix goimports for command/agent/syslog.go,
16593,Small fix of markdown format identified by markdownlint,
16594,build: Remove gox as a tool dependency,"gox has not been used since commit 1aec23bb8, so there is no need to install it during bootstrap."
16595,add job creating json sample in jobs api doc,
16596,Addressed Review Feedback,
16597,Ensure backwards compatibility between 0.6.X CLI and 0.5.X,This PR goes through the CLI commands and ensures that a 0.6.X cli gracefully handles interacting with a 0.5.X Nomad Agent. Fixes https://github.com/hashicorp/nomad/issues/2918
16598,Update gopsutil (#2927),  deps: Update github.com/go-ole/go-ole/...   deps: Update github.com/StackExchange/wmi   deps: Update github.com/shirou/gopsutil/...   deps: Update github.com/ugorji/go/codec 
16599,Changelog,
16600,Fix autocmpleting global flags,This PR vendors a change to the CLI package that allows autocompleting global flags at the top level command.
16601,Example JSON is submitable,This PR makes the example JSON job submitable via the HTTP API.
16602,Remove old example tls config,It didn't work in cfssl 1.2 anyway (required building from cfssl master).
16603,Add serf section and clean it up,
16604,Switch to cfssl and get everything working,
16605,Improve verify_https_clients wording,
16606,Merge pull request #2917 from hashicorp/b-grammar,Add word
16607,Merge pull request #2916 from hashicorp/b-fix-typo,Fix typo
16608,Add word,
16609,Fix typo,
16610,WIP tls guide,
16611,Better link output,
16612,Fix broken links,
16613,Fix deploy script,
16614,Merge pull request #2914 from hashicorp/f-terraform-update,Update scripts and AMI to reflect Nomad 0.6
16615,Update scripts and AMI to reflect Nomad 0.6,
16616,Update demo vagrant,
16617,Release v0.6.0,
16618,release notes,
16619,bump version,
16620,"Update operating a job, upgrade guide (#2913)"," Update operating a job, upgrade guide  This PR updates the guide for updating a job to reflect the changes in Nomad 0.6   Feedback changes   Feedback   Feedback "
16621,Fix vet issue,
16622,Getting Started guide updates for 0.6.0 (#2909),"  Add new commands for 0.6   update version in documnetation for 0.6   more information in example.nomad   0.6 additional information for viewing status of a job   0.6 status for alloc-status   changes with 0.6 in modifying a job   status is healthy when consul is running   make new date consistent in   add Latest Deployment and Deployed sections to  output   small changes in status values so that things the user should see as thesame, are the same in the example (e.g. Node ID should be the same in all places we list it in the example)   further information in job status added in 0.6   update  output when changing redis version   make new date consistent in   add Latest Deployment and Deployed sections to  output   small changes in status values so that things the user should see as thesame, are the same in the example (e.g. Node ID should be the same in all places we list it in the example)   Add new commands for 0.6   update version in documnetation for 0.6   more information in example.nomad   0.6 additional information for viewing status of a job   0.6 status for alloc-status   changes with 0.6 in modifying a job   status is healthy when consul is running   further information in job status added in 0.6   evaluation  status for deployment in 0.6   updating client demo config to match website   update output of status for cluster   update  output when changing redis version   update terminal output of adding more redis instances.   small update so id numbers are consistent in example   update ouput for , also stitch up ids from previous lines to match   add  to output when starting server and clients   add  to  output   remove text showing large parts of example.nomad file   Small fixes to stopping and updating a job "
16623,Merge pull request #2899 from hashicorp/d-mention-env-in-init,Mention env templates in nomad init
16624,Test for template envvar validation,
16625,Merge pull request #2892 from hashicorp/f-parallel-nomad,Parallel Nomad pkg tests and more reliable test Vault
16626,Use LookupPath to add the exe extension,
16627,Make test Vault pick random ports,
16628,parallel nomad tests,
16629,Merge pull request #2903 from hashicorp/d-cli,New commands docs and small CLI fixes
16630,Fix indentation,
16631,Missing period,
16632,New commands docs and small fixes,This PR adds the command documentations and has small CLI fixes.
16633,validate,
16634,inspect,
16635,Fix eval-status bug,
16636,alloc-status,
16637,Status command,
16638,Merge pull request #2906 from hashicorp/f-custom-help,Use a custom help output function
16639,Merge pull request #2907 from hashicorp/b-promote-err,Expose FSM errors into deployment watcher and API
16640,Merge pull request #2908 from hashicorp/b-min-healthy-validation,Validate that min_healthy_time < healthy_deadline
16641,Merge pull request #2911 from hashicorp/d-api,Update API and JSON Job Documentation
16642,Merge pull request #2910 from hashicorp/d-upgrading-0.6,Explain change in default advertise behavior
16643,Update API and JSON Job Documentation,This PR updates the api documentation to reflect 0.6 HTTP API and the JSON job specification as well.
16644,Explain change in default advertise behavior,
16645,Merge pull request #2898 from hashicorp/d-config-tasks-env,Mention templates & env vars in configuring tasks
16646,Mention node attrs,
16647,Prevent using env templates with signals,
16648,Validate that min_healthy_time < healthy_deadline,This PR adds a validation check to the update stanza to ensure that the min_healthy_time is feasible.
16649,Mention restart,
16650,Expose FSM errors into deployment watcher and API,This PR exposes errors returned by the FSM to the deployment watcher and thus the API. It also adds an error to handle the case of promoting a deployment that has no eligible canaries.
16651,Merge pull request #2894 from hashicorp/b-2891-consul-shutdown-race,Synchronously deregister agent on shutdown
16652,Merge pull request #2905 from hashicorp/remove-testing-dep,Use go-testing-interface instead of testing
16653,Custom help output,
16654,Use go-testing-interface instead of testing,"This drops the testings stdlib pkg from our dependencies. Saves a whopping 46kb on our binary (was really hoping for more of a win there), but also avoids potential ugliness with how testing sets flags."
16655,Merge pull request #2895 from hashicorp/d-env-example,Use better example for env template
16656,Merge pull request #2901 from hashicorp/sethvargo/subdir,Use a subdirectory for operator commands
16657,Add redirects,
16658,Use a subdirectory for operator commands,
16659,Fix comment,
16660,Forgot to setcmdenv,This would leak a consul agent
16661,Merge pull request #2900 from hashicorp/b-multi-tg,Improve multiple group handling in a deployment
16662,Improve multiple group handling in a deployment,"This PR resolves a bug in which a job with multiple task groups would create new deployment objects each, thus clearing out all other task groups deployment state."
16663,Mention env templates in nomad init,
16664,Mention templates & env vars in configuring tasks,
16665,Write secrets to secrets!,
16666,Use seen more conservatively,
16667,Use better example for env template,
16668,Don't attempt to restore tasks that never sync'd,
16669,Advertise block shouldn't be needed in 0.6,
16670,Always increment failures...,...as it's used in calculating the backoff
16671,Merge pull request #2880 from hashicorp/sethvargo/updatesite,Update website branding
16672,More changes,
16673,Track whether Consul has ever been seen,Need a way to squelch Consul operation errors on shutdown. If it's never been seen don't log errors about deregs failing.
16674,Add Kevin's copy changes,
16675,Update anti-affinity,
16676,Use go not golang,
16677,Lowercase rkt,
16678,Better rolling deploy text,
16679,Mention more than bg,
16680,Synchronously deregister agent on shutdown,"Fixes #2891 Previously the agent services and checks were being asynchrously deregistered on shutdown, so it was a race between the sync goroutine deregistering them and Nomad shutting down. This switches to synchronously deregister agent serivces and checks which doesn't really have a downside since the sync goroutines retry behavior doesn't help on shutdown anyway."
16681,Space file system,
16682,Spark on left,
16683,"Add better images for rolling deploys, bg, and machine failure",
16684,Add rolling upgrades,
16685,Add provider names,
16686,Add colored output to make Alex happy,
16687,Add svg for terminal circles,The HTML bullet is a different size in different browsers :(
16688,Fix broken scrollbars on Safari,
16689,Add Apache Spark logo,
16690,Remove cubes.js,
16691,Update homepage to match,
16692,Update logos and colors,
16693,fix vet,
16694,Remove unneeded consul vendor,
16695,reset travis script,
16696,whats going on,
16697,travis check fixes,
16698,fingerprinters,
16699,fix slow resolve on mac,
16700,drop rkt deadline,
16701,Merge branch 'master' of github.com:hashicorp/nomad,
16702,darwin test fixes,
16703,Parallel client tests (#2890),  alloc_runner   Random tests   parallel task_runner and no exec compatible check   Parallel client   Fail fast and use random ports   Fix docker port mapping   Make concurrent pull less timing dependant   up parallel   Fixes   don't build chroots in parallel on travis   Reduce parallelism on travis with lxc/rkt   make java test app not run forever   drop parallelism a little   use docker ports that are out of the os's ephemeral port range   Limit even more on travis   rkt deadline 
16704,typo,
16705,typo,
16706,small fixes,
16707,Merge pull request #2888 from hashicorp/b-fix-allocrunner-test,Fix TestAllocRunner_TaskLeader_StopTG and unrelated races
16708,faster vaultclient,
16709,remove root requirement on consul integration check,
16710,parallel deploymentwatcher tests,
16711,Merge pull request #2889 from hashicorp/f-parallel-api,Parallel API tests
16712,Parallel,
16713,Fix tr race by not sharing alloc/task,prestart only needs the original alloc/task so pass their pointers in. Task updates may concurrently replace the pointer on tr.
16714,Minor test race fix,
16715,Fix race by not accessing tr.task from ar,
16716,Remove unneeded saveTaskRunnerState method,Collapse it into the one place it's called
16717,Merge pull request #2887 from hashicorp/f-parallel-driver,"Parallel tests: driver, executor, driver/logging"
16718,Remove comment,
16719,Improve shutdown code,
16720,Fix test race by locking around ar.tasks access,
16721,Fix handle race,
16722,Fix more test races,
16723,Fixup a few more even rarer test races,
16724,Always interpolate task before calling with Consul,Also switch to returning a copy of the task to avoid races between altering the Task and persitence.
16725,Fix TestAllocRunner_TaskLeader_StopTG,Also make alloc runner tests less racy. Basically every alloc runner test used to have races with module
16726,vendor,
16727,executor and logging pkg,
16728,Vendor go-plugin,
16729,Parallel,
16730,Merge pull request #2881 from hashicorp/f-parallel-command,Parallel nomad/command pkg tests
16731,Release v0.6.0-rc2,
16732,Forgot to bump version to rc2,
16733,Allow rkt driver to mount volumes read-only,
16734,Force parallelism on travis,
16735,Speed up client startup,
16736,Parallel,
16737,Switch to in-process agent,
16738,Undo verbose and parallel on tests,
16739,Merge pull request #2874 from hashicorp/f-command-agent-tests,Parallelize the command/agent tests and add new test agent
16740,Fix bootstrapping and waiting,
16741,Release v0.6.0-rc2,
16742,Merge pull request #2868 from hashicorp/f-feedback,Variety of UX fixes
16743,Fix test,
16744,changelog,
16745,Multiple matched objects now treated as an error condition.,
16746,Merge pull request #2876 from hashicorp/b-special-case-unix-epoch,Don't display UNIX epoch dates
16747,Mention #2878 in changelog,
16748,Merge pull request #2878 from hashicorp/b-save-state,Fix state handling on restart
16749,Mention #2877 in changelog,
16750,Merge pull request #2875 from hashicorp/b-discount,Handle destructive changes before placements
16751,Merge pull request #2877 from kmalec/add-group-name-env,Pass task group name as NOMAD_GROUP_NAME environment variable
16752,Pass task group name as NOMAD_GROUP_NAME environment variable,
16753,Don't display UNIX epoch dates,"Submitted times are UNIX epoch for jobs created before 0.6 which is confusing in the CLI. Display nothing instead (formatted as """")."
16754,Better comment,
16755,Handle destructive changes before placements,"This PR updates the generic scheduler to handle destructive changes before handling placements. This is important because the destructive change may be due to a lowering of resources. If this is the case, the handling of the destructive changes first may make it possible for the placement to happen. To reason about this imagine there is one node with CPU = 500. If the group originally had: * module * module And then the job was updated such that the group had: * module * module If the original alloc isn't discounted first, nothing would be able to place."
16756,Update full node test to test more advanced case,
16757,Destroy tasks that are part of terminal alloc,
16758,Don't save task runner state if it is destroyed,
16759,verbose and parallel,
16760,More parallel,
16761,New test agent,
16762,Merge branch 'master' of github.com:hashicorp/nomad,
16763,Don't print atlas,
16764,Should not persist state after alloc_runner is garbage collected,
16765,Blue/green and canary docs,
16766,Job promote command,
16767,Merge pull request #2863 from hashicorp/b-skip-err,Skip error log on shutdown
16768,More why for the -orphan flag,Added a little more explanation about the why for creating the nomad service token with module to recusce confusion about the orphan=false in the policy right above the example.
16769,Remove appveyor status from README (for now),
16770,Inspect job at a particular version,
16771,Small fixes and UX changes,
16772,Merge pull request #2866 from hashicorp/f-autocomplete-agent,Agent command autocompletes to hcl/json files
16773,Merge pull request #2861 from hashicorp/f-update-raft-serf,Update vendored raft and serf
16774,Missing hashicorp/serf/serf dep,
16775,Update raft to hashicorp/raft@b3d48f1,Pulls in hashicorp/raft#225
16776,Update serf to hashicorp/serf@bbeddf0,
16777,Too lazy to remember the right formatter for floats,
16778,Fix predictor,
16779,Agent command autocompletes to hcl/json files,
16780,Merge pull request #2862 from hashicorp/b-reconcile-panic,Fix update limit calculation to avoid panic
16781,Skip error log on shutdown,This PR fixes the detection of a shutdown scenario and squelches the error log.
16782,Fix update limit calculation to avoid panic,This PR fixes the rolling update limit calculation to avoid a panic when there are more allocations for a deployment that haven't determined their health than the max_parallel count of the task group. Fixes https://github.com/hashicorp/nomad/issues/2820
16783,Merge pull request #2841 from hashicorp/b-rolling-no-fit,Treat destructive updates atomically
16784,Merge pull request #2858 from hashicorp/b-2849-deploy-json,Implement -json for job deployments
16785,Changelog,
16786,Merge pull request #2859 from hashicorp/f-heartbeat-tunables,Allow tuning of heartbeat ttls
16787,Error -> Errof,
16788,Allow tuning of heartbeat ttls,This PR allows tuning of heartbeat TTLs. An example of very aggressive settings is as follows: module
16789,Changelog,
16790,Merge pull request #2856 from hashicorp/b-port-range,Shrink dynamic port range
16791,Implement -json for job deployments,Fixes #2849
16792,Merge pull request #2854 from hashicorp/b-2827-agent-services,Never remove unknown agent services
16793,Merge pull request #2857 from hashicorp/b-retry-send,Use broadcast send retry logic everywhere
16794,Use broadcast send retry logic everywhere,
16795,Merge pull request #2853 from hashicorp/b-watcher,Improve alloc health watcher
16796,Merge pull request #2855 from hashicorp/f-autocomplete-files,Autocomplete files
16797,Merge pull request #2852 from hashicorp/b-gc-race,Fix deadlock caused by syncing during destroy
16798,docs,
16799,Shrink dynamic port range,This PR shrinks the dynamic port range to not overlap with most operating systems ephemeral port range: https://en.wikipedia.org/wiki/Ephemeral_port
16800,Never remove unknown agent services,"Fixes #2827 This is a tradeoff. The pro is that you can run separate client and server agents on the same node and advertise both. The con is that if a Nomad agent crashes and isn't restarted on that node in the same mode its entry will not be cleaned up. That con scenario seems far less likely to occur than the scenario on the pro side, and even if we do leak an agent entry the checks will be failing so nothing should attempt to use it."
16801,Autocomplete files,"This PR makes run, validate and plan autocomplete their arg to appropriate files."
16802,fix blocking queries in deployment watcher,
16803,Save deployment status,
16804,Small fixes,
16805,Merge pull request #2836 from hashicorp/f-go-getter-xz-support,Update go-getter to get .xz support
16806,Fix deadlock caused by syncing during destroy,"When replacing an alloc the new alloc is blocked until the old alloc is destroyed. This could cause a deadlock:  Destroying the old alloc includes a final sync of its status Syncing status causes a GC A GC looks for terminal allocs to cleanup The GC waits for an alloc to stop completely before GC'ing  If the GC chooses the currently-being-destroyed-alloc to GC, the GC deadlocks. If module deadlocks happen the GC is wedged until the Nomad process is restarted. Performing the final sync asynchronously is an ugly hack but prevents the deadlock by allowing the final sync to occur after the alloc runner has shutdown and been destroyed."
16807,Merge pull request #2838 from hashicorp/b-alloc-dir-fixes,Ensure allocDir is never nil and persisted safely
16808,Mention tls_skip_verify support,
16809,Changelog,
16810,Merge pull request #2848 from hashicorp/f-autocomplete,Add command autocompletion.
16811,Fix deep copy of driver config,
16812,Stop before trying to place,
16813,Test AllocDir.Copy,
16814,Add AllocRunner.allocID for ease-of-use,"Since the AllocRunner.alloc struct can be mutated, most of AllocRunner needs to acquire a lock to get the alloc's ID. Log lines always need to include the alloc ID, so we often skipped acquiring a lock just to grab the ID and accepted the race. Let's make the race detector a little happier by storing the ID in a single assignment field."
16815,Fix log level,
16816,Don't fail if task dirs don't exist on creation,Task dir metadata is created in AllocRunner.Run which may not run before an alloc is sync'd and Nomad exits. There's no reason not to just create task dir metadata on restore if it doesn't exist.
16817,Ensure allocDir is never nil and persisted safely,Fixes #2834
16818,Merge pull request #2830 from hashicorp/b-max-warning,Warn instead of error when max_parallel is greater than count.
16819,Address feedback,
16820,Merge pull request #2839 from hashicorp/b-failed-eval,Fix allocations pointing to unknown deployment
16821,Merge pull request #2842 from hashicorp/d-init,Update init command to show new update stanza.
16822,Add command autocompletion.,This PR adds command autocompletion to the CLI.
16823,Deployment GC ensures no alloc references,
16824,Allow the deployment to not exist and just no-op,
16825,Fix alloc broadcaster panic on double close,
16826,Merge pull request #2846 from hashicorp/f_docs_spelling_units,Spellcheck sweep of website directory
16827,Spellcheck sweep of website directory,Caught some typos.  Made units separate from the numbers 1GHz -> 1 GHz after talking to Nick about questions of style (this has the side effect of making future spell checking easier).
16828,spelling errors,
16829,Merge pull request #2845 from hashicorp/f-version,Allow cli package to handle version.
16830,Allow cli package to handle version.,This PR removes our custom handling of the version flag and updates job history to use a version flag instead of module.
16831,Update init command to show new update stanza.,
16832,Treat destructive updates atomically,
16833,Merge pull request #2837 from hashicorp/b-2835-docker-panic,Fix nil panic in Docker error condition
16834,Add changelog entry,
16835,Fix nil panic in Docker error condition,Fixes #2835 Yet another bug caused by overwriting container and then trying to reference container.ID in the err handling block. Did a quick audit of docker.go and it seems to be the last offender. See #2804 for previous bug.
16836,Update go-getter to get .xz support,
16837,Merge pull request #2833 from hashicorp/f-log-rejection,Log reason a plan gets rejected per node.
16838,Fix typo,
16839,Log reason a plan gets rejected per node.,This PR adds a log explaining why a plan gets rejected. Should help debugging.
16840,Fix log line for gc'ing deployments,
16841,Merge pull request #2831 from hashicorp/d-vault-integration-tokens,Update the module example on the Vault Integration page  to use module
16842,Merge pull request #2826 from abednarik/patch-1,Update README.md
16843,Warn instead of error when max_parallel is greater than count.,Fixes https://github.com/hashicorp/nomad/issues/2819
16844,Update the module example to use module (to prevent revocation if the parent token expires); add note about Vault token hierarchies,
16845,Remove synced folder from demo vagrant,"Demo vagrant isn't intended to be used from a cloned repo, so this was syncing random host folders which is a bit sketchy."
16846,Update README.md,Change Ubuntu version used in Vagrant for development purpose.
16847,Merge pull request #2822 from hashicorp/d-fix-demo-vagrant,Don't require cloned repo for demo vagrant
16848,Don't require cloned repo for demo vagrant,Also update how Docker installed to match the latest upstream instructions.
16849,Merge pull request #2754 from hashicorp/d-spark-guide,Apache Spark Integration Guide
16850,Fix terraform links,
16851,Fix link to Terraform,
16852,Merge pull request #2815 from hashicorp/d-getting-started-terraform,Update Getting Started guide to reference example Terraform configuration
16853,Merge pull request #2738 from hashicorp/f-terraform-config,"Add Packer, Terraform configs to spin up an integrated Nomad, Consul, Vault cluster in AWS"
16854,Move Terraform reference to Next Steps,
16855,update references to build tgz,
16856,Merge branch 'master' into fix-pending-state,
16857,2563 fixed pending state for allocations with terminal status,
16858,Add reference to example Terraform configuration; reframe getting started options as manual vs. automated,
16859,Fix formatting; remove reference to personal S3 bucket,
16860,Remove references to personal S3 bucket,
16861,update AMI,
16862,Replace references to personal S3 bucket,
16863,Release v0.6.0-rc1,
16864,bump version,
16865,Small fixes,
16866,Merge pull request #2807 from hashicorp/f-validate-ports,Prevent port conflicts
16867,changelog,
16868,Handle same task reserving ports twice,
16869,Merge pull request #2806 from hashicorp/d-update-stanza,Document new upgrade stanza
16870,changelog,
16871,Merge pull request #2808 from hashicorp/b-restore-periodic,"When restoring periodic jobs, take into consideration launch time zone"
16872,Merge pull request #2809 from hashicorp/f-scheduling-logs,Basic logs from reconciler
16873,Basic logs,
16874,Merge pull request #2793 from hashicorp/b-2776-ct-vault-servername,Propagate vault.tls_server_name to consul-template
16875,Merge pull request #2794 from hashicorp/f-update-raft,Update raft to get hashicorp/raft#212 fix
16876,Merge pull request #2787 from hashicorp/f-docker-test-mac,Test #2652 - Docker MAC Address option
16877,Merge pull request #2797 from hashicorp/f-2785-docker-bridge-ip,Add driver.docker.bridge_ip node attribute
16878,Remove debug logging,
16879,"When restoring periodic jobs, take into consideration launch time zone",Fixes https://github.com/hashicorp/nomad/issues/2721
16880,Merge pull request #2805 from hashicorp/b-2722-invalid-type,Validate job type
16881,Prevent port conflicts,Validate that no two tasks in the same task group can reserve the same static port.
16882,Document new upgrade stanza,This PR adds documentation and examples for the new update stanza.
16883,Merge pull request #2804 from hashicorp/b-2802-docker-panic,Don't panic in container list/remove/inspect race
16884,Validate job type,Fixes #2722
16885,Don't panic in container list/remove/inspect race,"Fixes #2802 While it's hard to reproduce the theoretical race is:  This goroutine calls ListContainers() Another goroutine removes a container X This goroutine attempts to InspectContainer(X)  However, this bug could be hit in the much simpler case of InspectContainer() timing out. In those cases an error is returned and the old code attempted to wrap the error with the now-nil container.ID. Storing the container ID fixes that panic."
16886,Merge pull request #2801 from hashicorp/f-update-go-winio,Update go-winio to get some fixes
16887,Merge pull request #2803 from hashicorp/f-update-ct,Update consul-template
16888,changelog,
16889,Merge pull request #2799 from hashicorp/f-deployment,Introduce deployments to make rolling updates based on allocation health
16890,Vet and small improvement on watcher failure detection,
16891,Update consul-template,
16892,Update go-winio to get some fixes, Microsoft/go-winio#53 Microsoft/go-winio#54
16893,test fixes,
16894,rewording and minor fixes to various pages,
16895,vendor,
16896,check id method name changed,
16897,Rolling node drains using max_parallel and stagger,This PR adds rolling node drains done at max_parallel and stagger of the update spec. It brings it inline with old behavior.
16898,an user -> a user,
16899,Status description shows requiring promotion,
16900,events,
16901,@jippi Changed my mind! Good suggestion,
16902,deployment status in job status view,
16903,alloc-status,
16904,alloc-list shows version,
16905,Fix JobModifyIndex changing when job is marked stable,
16906,deployment status indicates whether canaries were promoted,
16907,Fix broken things on deployment promote,
16908,"Fix some tests, eval monitor shows deployment id and deployment cancels based on version",
16909,Vendor columnize,
16910,Fix some commands test,
16911,Disallow update stanza on batch jobs,This PR: * disallows update stanzas on batch jobs * undeprecates the stagger field * changes the way warnings are returned
16912,Deployment from inplace updates tracks placed properly.,
16913,add to docs,
16914,Return the reverted job version,
16915,add reverted job version to deployment update response,
16916,feedback,
16917,HTTP API docs for job,
16918,Job stability,
16919,Complete deployments mark jobs as stable,This PR allows jobs to be marked as stable automatically by a successful deployment.
16920,Respond to comments,
16921,Remove canary,
16922,plan apply tests,
16923,Test scheduler's handling of canaries/inplace updates,
16924,Test marking as complete,
16925,Plan apply handles canaries and success is set via update,
16926,Fix handling of failed job,
16927,Attach eval id,
16928,Mark complete,
16929,Change canary handling,
16930,Remove promoted bit from allocation,
16931,vendor file,
16932,Rename CreateDeployments and remove cancelling behavior in state_store,
16933,Warn log,
16934,Client watches for allocation health using task state and Consul checks,This PR adds watching of allocation health at the client. The client can watch for health based on the tasks running on time and also based on the consul checks passing.
16935,watcher per alloc,
16936,Update index,
16937,initial watcher,
16938,Add deployment id to alloc,
16939,Small fixes,
16940,Formatting abilities,
16941,job deployments,
16942,deployment promote,
16943,"fail,pause,resume commands",
16944,deployment status,
16945,deployment list,
16946,small fixes,
16947,job revert,
16948,Show submit time,
16949,job history,
16950,JobVersions returns struct with optional diff,
16951,Deployment GC,This PR implements the garbage collector for deployments. Deployments will by default be garbage collected after 1 hour.
16952,Add config options,
16953,job deployment endpoint + api,
16954,Deployments HTTP docs,
16955,deployment api,
16956,HTTP Endpoints,
16957,more comment fixes,
16958,simplify the batcher's timers,
16959,Remove setters,
16960,comments on watcher,
16961,fix index,
16962,Fix tests,
16963,Tests,
16964,FailDeployment,
16965,fix integration slightly,
16966,Add watcher to server,
16967,comments,
16968,batch test,
16969,Fix unnecessary evals,
16970,more tests,
16971,Deployment watcher tests,
16972,Watcher,
16973,Deployments list,
16974,FSM Tests,
16975,state store tests,
16976,initial impl,
16977,update description of the alloc update factory function,
16978,cleanup limit detection,
16979,SpecChanged doesn't mutate passed job,
16980,Fix canary handling,
16981,Deployment tests,
16982,Non-Canary/Deployment Tests,
16983,Pull out in-place updating into a passed in function; reduce inputs to reconciler,
16984,assign names,
16985,handle batch filtering,
16986,Remove old,
16987,Plan reuses job where possible,
16988,Populate desired state per tg,
16989,Show canaries on plan,
16990,handle annotations,
16991,Todos,
16992,Some comments and cleanup,
16993,Split reconcile file,
16994,Small cleanup,
16995,Only upsert a job if the spec changes and push deployment creation into reconciler,
16996,initial reconciler,
16997,cancel deployments,
16998,update AMI ID,
16999,Document module node attribute,
17000,Add changelog entry for #2797,
17001,Add driver.docker.bridge_ip node attribute,Fixes #2785
17002,remove GOMAXPROCS,
17003,minor formatting fix,
17004,remove custom chroot_env,
17005,Mention #2786,
17006,Add changelog entry,
17007,Update raft to get hashicorp/raft#212 fix,
17008,Propagate vault.tls_server_name to consul-template,Fixes #2776
17009,Merge pull request #2786 from hashicorp/f-docker-auth-soft-fail,Default to auth hard fail but optionally soft fail
17010,Test #2652,Also cleanup docker config opts docs
17011,Merge pull request #2652 from dreh23/master,Added mac address pinning in docker driver
17012,Simplify soft fail doc,
17013,Merge branch 'master' into master,
17014,Default to auth hard fail but optionally soft fail,
17015,Merge pull request #2781 from hashicorp/f-2678-getter-mode,Add support for go-getter modes
17016,Merge pull request #2744 from aep/master,Do not fail when no docker registry auth is available
17017,Fix api endpoint test,
17018,"Improvements, not bug fixes! Also spelttting",
17019,New go-getter test dep,
17020,Update docs and readme,
17021,Update go-getter for minio support,
17022,Add support for go-getter modes,Fixes #2678
17023,Merge pull request #2780 from hashicorp/b-tiny-race-fix,Tiny client race condition fix
17024,Merge pull request #2768 from hashicorp/d-getting-started-consul,Start consul in getting started vagrant
17025,Consistently quote alloc ids in client logs,
17026,Merge pull request #2755 from hashicorp/sethvargo/docs-updates,Update docs notes
17027,Tiny client race condition fix,Plus some logging improvements that may help with #2563
17028,Merge pull request #2769 from hashicorp/b-fix-no-host-uuid,Fix no_host_uuid parsing
17029,Merge pull request #2777 from hashicorp/b-2686-dont-escape-env,rkt: use %s instead of %q when interpolating env
17030,Add #2777 to changelog,
17031,rkt: use %s instead of %q when interpolating env,Fixes #2686
17032,Fix no_host_uuid parsing,Need to pointerify it to default to true since we can't tell false from unset if it's not a pointer.
17033,Start consul in getting started vagrant,Sneak a version bump to consul in as well
17034,Mention #2745,
17035,Merge pull request #2745 from hashicorp/b-2638-cpu_total_compute,Fix cpu_total_compute override
17036,Add #2654 #2695 #2702 #2709 #2729 #2735 #2746 #2750 #2753,
17037,0 compute == error,
17038,Document cpu.totalcompute attribute,
17039,Fix cpu_total_compute override,
17040,Don't fail on first error detecting cpu stats,Since cpu.Counts() never returns an error this doesn't functionally change anything today.
17041,Merge pull request #2750 from hashicorp/b-system-jobs-running,System jobs should be running until stopped
17042,Merge pull request #2732 from hashicorp/b-persist-alloc-updates,Persist Alloc when EvalID changes
17043,Merge pull request #2763 from hashicorp/f-bad-state-help,Add more logging to restore state errors
17044,Merge pull request #2753 from hashicorp/b-leader-dies-first,Destroy task group leader first
17045,Merge pull request #2709 from hashicorp/f-advertise-docker-ips,Advertise driver-specific addresses
17046,Destroy task group leader first,Before this commit all tasks in a task group were destroyed concurrently. This meant logging sidecars might be stopped before the leader task whose logs still need to be shipped. This commit blocks on the leader shutting down before signalling to followers to shutdown.
17047,System jobs without evals are running too,
17048,Merge pull request #2746 from hashicorp/f-validate-job-updates,Validate job updates
17049,Merge pull request #2735 from hashicorp/f-no_host_uuid-true,Default no_host_uuid to true instead of false
17050,Suggest wiping out alloc dir too,
17051,Add more logging to restore state errors,
17052,changelog,
17053,Merge pull request #2762 from alexandredantas/master,Use node name always false
17054,Fixing issue where use_node_name was always been set as false when merging telemetry configurations,
17055,Merge pull request #2743 from JarvusInnovations/master,Update middleman-hashicorp to 0.3.28 for mega nav fixes
17056,Merge pull request #2757 from hashicorp/b-normalize-ipv6,Properly normalize IPv6 addresses
17057,order guides alphabetically; rewrite getting started page; fix typos,
17058,Properly normalize IPv6 addresses,A fix to #2739 instead of forcing IPv6 users to always specify a port as well. Prior to this commit IPv6 advertise addresses which lacked a port would fail instead of having the default port added because module returns a different error than module.
17059,Merge pull request #2748 from hashicorp/d-migrate-needs-sticky,Ephemeral Disks: module requires module
17060,Merge pull request #2749 from hashicorp/d-ephemeral-size-not-enforced,Noted that ephemeral storage module not enforced
17061,Document permissions for agents,Fixes GH-948
17062,Document context of service checks,Fixes GH-1935
17063,Apache Spark Integration guide,
17064,System jobs should be running until stopped,Prior to this commit they would be marked as dead if they had no currently running allocations -- even though they would spring back to life (running) if the cluster state changed such that a new eval+alloc was created.
17065,Noted that ephemeral storage module not enforced,"This value is strictly used in the job placement, but is not enforced like a quota"
17066,Ephemeral Disks: module requires module,The migrate option is a no-op when sticky is set to false
17067,Validate job updates,Incurs a local read-before-write but because validation is transitive there's no need to retry the read-validate-write on concurrent updates.
17068,Do not fail when no docker registry auth is available,this amends the behaviour introduced with #2651 and allows pulling public images when docker.auth.helper is set
17069,Merge pull request #2737 from hashicorp/fix-typo,Remove an errant # from vault policy sample.
17070,Fix test error formats,
17071,Merge pull request #2740 from multani/upgrade-go-sockaddr,Upgrade hashicorp/go-sockaddr/template to latest version + upgrade CHANGELOG
17072,Update middleman-hashicorp to 0.3.28 for mega nav fixes,Fixes detailed at https://github.com/hashicorp/middleman-hashicorp/pull/47
17073,Fix super minor typos,
17074,Minor doc updates,"Oxford comma, links to spark fork, etc"
17075,update AMI,
17076,Upgrade go-sockaddr/template to latest version + upgrade CHANGELOG,
17077,cleanup build/provision shell scripts,
17078,slight tweak to Packer README,
17079,"cleanup Vagrantfile, Terraform configs and Nomad job files",
17080,reformat Packer README,
17081,README formatting,
17082,various script and config file tweaks,
17083,update READMEs,
17084,obscure KEY_NAME,
17085,update READMEs,
17086,update top level README,
17087,add job files and Dockerfiles,
17088,"refactor build and provisioning scripts to support DNS integration, HDFS",
17089,"refactor Terraform module, Packer config; bump tool version #s in Vagrantfile",
17090,Remove an errant # from vault policy sample.,
17091,Fix some tests still expecting reverted behavior,
17092,Default no_host_uuid to true instead of false,The host UUID isn't unique in many virtualized cases and of dubious value even when it is univerally unique. Default to a random UUID.
17093,Remove defunct DRIVER references in docs,Simplifies things greatly!
17094,Style and comments,
17095,Fix spelling & re-add immutable state struct,
17096,Merge pull request #2733 from grossws/patch-1,HCL typo fix
17097,Rename immutable -> alloc,meh; naming is hard
17098,HCL typo fix,
17099,Persist Alloc when EvalID changes,
17100,Remove DRIVER env vars from docs,
17101,Merge pull request #2729 from hashicorp/b-2696-lookup-ip-on-path,Update go-sockaddr to lookup ip on $PATH
17102,Update go-sockaddr to lookup ip on $PATH,Fixes #2696
17103,Fixup example,
17104,Remove DRIVER env vars,Also make NOMAD_ADDR_ use host ip:port for consistency. NOMAD_PORT_ varies based on port map and the driver IP isn't exposed as an env var as the only place it can be used is in script checks anyway.
17105,Have Qemu return PortMap,
17106,Move caonicalization from nomad/structs/ to api/,
17107,Simplify Docker Networks processing,
17108,Bump error log level,
17109,Remove readme,
17110,Add script to demo weave in vagrant,
17111,Remove debug logging,
17112,Fix lxc tests,
17113,Skip DRIVER env vars for labels without a port mapping,
17114,Document address_mode,
17115,Consolidate envvars in a partial template,
17116,Fix Service.AddressMode changes during task updates,
17117,Test driver network advertisement and checks,
17118,Implement DriverNetwork and Service.AddressMode,"Ideally DriverNetwork would be fully populated in Driver.Prestart, but Docker doesn't assign the container's IP until you start the container. However, it's important to setup the port env vars before calling Driver.Start, so Prestart should populate that."
17119,Merge pull request #2724 from hashicorp/b-2701-fix-server-check,Fix path used by Nomad Server HTTP Check
17120,docker should already be installed by services,This package no longer exists so trying to install it broke our build. It has been renamed docker-ce.
17121,Fix path used by Nomad Server HTTP Check,Fixes #2701
17122,Merge pull request #2716 from hynek/master,Explain term signal behavior for Docker tasks
17123,STOPSIGNAL,
17124,Merge pull request #2717 from hashicorp/paddy_typo,Fix typo in job-dispatch docs.
17125,Fix typo in job-dispatch docs.,canidate -> candidate.
17126,tweak top level README,
17127,Merge pull request #2714 from hynek/patch-2,Fix typos
17128,Merge pull request #2713 from hynek/patch-1,Fix documentation of -tail/-f
17129,Explain term signal behavior for Docker tasks,
17130,Fix typos,
17131,Fix documentation of -tail/-f,"Previously, -tail is erroneously documented as -f and -f and -n are not documented at all.  This patch fixes both."
17132,update READMEs,
17133,use appropriate AMI name,
17134,install latest versions of products,
17135,Fix minor syntax issue,
17136,Log PID when sending signals,
17137,Merge pull request #2693 from katiebayes/master,update middleman version 25 to 26
17138,Merge pull request #2697 from hashicorp/b-port-map,Fix port map interpolation for docker
17139,Merge pull request #2702 from hashicorp/add-no-overlay-option,Add no overlay option
17140,Fix bad merge conflict resolution,
17141,Merge branch 'master' into add-no-overlay-option,
17142,fix middleman update to version 26,
17143,changelog,
17144,Merge pull request #2687 from mmickan/issue-2685,Include symlinks in snapshots when migrating disks
17145,Merge branch 'master' into add-no-overlay-option,
17146,Merge pull request #2695 from kmalec/add-selective-insecure-options,Added insecure_options config list
17147,Fix port map interpolation for docker,This PR fixes an issue in which the value of the portmap could not be interpolated. Fixes https://github.com/hashicorp/nomad/issues/2680
17148,Fix backticks in docs; refine --debug comment,
17149,Fix the backticks,
17150,Added insecure_options config list,
17151,update middleman version 25 to 26,
17152,Add a no_overlay option for the rkt task config.,
17153,Merge pull request #2690 from hashicorp/d-remove-atlas-references,Remove Atlas references from docs
17154,Remove Atlas references from docs,
17155,Bump Go to 1.8.3 in Vagrantfile,
17156,Add tests for migrating symlinks in alloc and local directories,
17157,Include symlinks in snapshots when migrating disks,Fixes #2685
17158,Switch to hashicorp/go-envparse,
17159,Merge pull request #2683 from hashicorp/f-template-envparse,Move env file parsing to a library
17160,Update template docs to mention json encoding newlines,
17161,Move env file parsing to a library,
17162,small cleanup,
17163,Merge pull request #2651 from rawler/feature/2334,Implement support for docker-credential-helpers
17164,Merge branch 'master' into feature/2334,
17165,Merge pull request #2681 from hashicorp/b-deadlock,Fix a deadlock relating to blocked allocations
17166,Merge pull request #2672 from eyberg/master,dont throw away errors in log rotation
17167,Fix deadlock,
17168,Cleanup lots of leaked alloc runners in tests,
17169,Implement support for docker-credential-helpers,Solves: #2334
17170,Merge pull request #2677 from hashicorp/sethvargo/api,Update API documentation
17171,Remove links to consistency modes,
17172,Remove consistency modes,
17173,Cleanup links to limit redirects,
17174,Use new bundle,
17175,Add client-side redirects,
17176,Migrate API layouts,
17177,Migrate API index,
17178,Migrate validate APIs,
17179,Migrate system APIs,
17180,Migrate status APIs,
17181,Migrate regions APIs,
17182,Migrate operator APIs,
17183,Migrate nodes APIs,
17184,Add libraries & SDKs page,
17185,Migrate JSON Jobs to new namespace,
17186,Migrate jobs APIs,
17187,Migrate evaluations APIs,
17188,Migrate client APIs,
17189,Migrate allocations APIs,
17190,Migrate agent APIs,
17191,Slightly better expansion on small screens,
17192,Add API section to header and sidebar,
17193,Fix community page formatting,
17194,Bump middleman-hashicorp,
17195,Merge pull request #2649 from hashicorp/b-update-consul-api-vendor,Update consul/api
17196,Merge pull request #2636 from hashicorp/f-gc-alloc-limit,Add new gc_max_allocs tuneable
17197,Add #2636 to changelog,
17198,Update consul-template to fix compat with consul/api,
17199,Update consul/api and comment to custom http.Client,
17200,Update consul/api and fix tls handling,Since I was already fixing consul's tls handling in #2645 I decided to update consul/api and pre-emptively fix our tls handling against the newest consul/api behavior. consul/api's handling of http.Transports has improved but would have broken how we handled tls (again). This would have made for a nasty surprise the next time we updated consul/api.
17201,Merge pull request #2654 from hashicorp/f-env-consul,Add envconsul-like support and refactor environment handling
17202,Mention #2399 in changelog,Don't advertise sockaddr support just yet; focus on the saner advertise default
17203,Merge pull request #2640 from hashicorp/b-remove-auto-advertise,Don't autoadvertise private ip if bind=localhost
17204,Fix Error -> Errorf,
17205,Don't autoadvertise private ip if bind=localhost,"A slight improvement to #2399 - if bind is localhost, return an error instead of advertising a private ip. The advertised ip isn't valid and will just cause errors on use. It's better to fail with an error message instructing users how to fix the problem."
17206,Fix config parsing test,Went overboard before I realized there's only one test case.
17207,Update docs to match gc_max_allocs default,
17208,Update artifact.html.md,
17209,Merge pull request #2679 from jippi/patch-3,correct artifact docs
17210,correct arifact docs,"It's not clear today that module always is a directory, and never a destination file I've been bitten by this multiple times, as the docs today seem like it's possible to download remote file module and put it in dir module and rename the file to module"
17211,Fix diff test,
17212,Fix getter tests,And use an interface for ReplaceEnv since its all getter needs.
17213,Fix executor tests,
17214,Fix template canonicalize test,
17215,Always use PATH-only env for rkt commands,
17216,Test env parsing,
17217,Use custom TaskEnv to provide PATH for rkt,
17218,Let's pretend I never committed this,
17219,Fix and test multi-env-template loading,
17220,changelog,
17221,Merge pull request #2675 from hashicorp/b-perms,Fix perms to just set exec bit
17222,Fix perms to just set exec bit,
17223,dont throw away errors in log rotation,
17224,Fix formatting,
17225,Comment and correct formatting,
17226,Switch tests to mock_driver,
17227,Minor wording updates,
17228,Fail fast on env template failures,
17229,Update template.html.md,
17230,Document env templates,
17231,Add env file test,
17232,Add env testing,
17233,Shrink chroot to avoid timing test failure,
17234,Add env.Builder.UpdateTask for alloc updates,
17235,Fix test data,
17236,"Handle Driver.Prestart returning nil, nil",
17237,Move task env into execcontext,Also inject PATH into rkt commands since we're no longer appending host env vars for it.
17238,Fix env var interpolation and env tests,
17239,Add PortMap to struct returned by Driver.Prestart,Moves env.Builder out of drivers entirely so one less thing to worry about when implementing driver plugins.
17240,Move env template handling into consul_template.go,
17241,Improve PortMap handling and simplify Builder creation,
17242,Move path building to task dir initialization,
17243,Refactor TaskEnvironment into Builder and TaskEnv,
17244,Functional consul template env file support,
17245,Mention #2658 --security-opts,
17246,Merge pull request #2663 from benmoss/master,Update cluster tutorial to generate random client UUIDs
17247,Update cluster tutorial to generate random client UUIDs,
17248,Merge pull request #2662 from benmoss/master,Make example clients generate random HostIDs
17249,Make example clients generate random HostIDs,"The tutorial has you make two clients on the same Vagrant box, so they end up with the same secret ID. Fixes #2661."
17250,Merge pull request #2658 from Evertras/master,Add SecurityOpt as a config field in Docker driver
17251,"Add security_opt to docs, alphabetize section",
17252,Fix for test,
17253,Add SecurityOpt as a config field in Docker driver,
17254,Changelog,
17255,Merge pull request #2634 from hashicorp/f-update-block,New Update block syntax
17256,Merge branch 'master' of github.com:hashicorp/nomad,
17257,Fix nil job on allocation,"The way the copying was happening on the alloc_runner was by temporarily setting the alloc.Job to nil, copying and then restoring it. This created an issue in which when the alloc was shared (which it is in server/client mode and between alloc_runner/task_runner) there were race conditions that could create a panic. Fixes https://github.com/hashicorp/nomad/issues/2605"
17258,Fix readme,
17259,Merge pull request #2591 from hashicorp/b-2180-script-updates,Properly interpolate services on updated tasks
17260,Fixed wrong newline,
17261,Added snippet for mac address in docs,
17262,mac address pinning in docker driver,This commit adds mac address pining to the docker driver.
17263,Use a lock to increment the vault port,
17264,changelog,
17265,Merge pull request #2648 from hashicorp/b-vault-panic,Fix Vault Client panic when given nonexistant role
17266,Fix Vault Client panic when given nonexistant role,The Vault API returns a nil secret and nil error when reading an object that doesn't exist. The old code assumed an error would be returned and thus will panic when trying to validate a non-existant role.
17267,Merge pull request #2646 from derzufall/patch-1,Docu was misleading
17268,Merge pull request #2647 from sixfeetover/patch-1,Small typo fix in vault stanza
17269,Small typo fix in vault stanza,
17270,Docu was misleading,The actual parameter for go-getter is 'sshkey' and not 'sshkeys'. The current docu is wrong here... corrected this. kkthxbai
17271,update READMEs,
17272,Merge branch 'f-terraform-config' of github.com:hashicorp/nomad into f-terraform-config,
17273,update READMEs,
17274,Update README.md,
17275,Update README.md,
17276,terraform README updates,
17277,Merge pull request #2645 from hashicorp/b-fix-consul-verify-ssl,Fix consul.verify_ssl
17278,Fix consul.verify_ssl,Was getting ignored and would have defaulted to false if it wasn't ignored. Now defaults to true as per docs and isn't ignored.
17279,Initial commit for Terraform/AWS support,
17280,gc_max_allocs should include blocked & migrating,
17281,Lower default gc_max_allocs to 50,
17282,Merge pull request #2399 from multani/sockaddr-template,Add support for late binding to IP addresses using go-sockaddr/template
17283,Add new gc_max_allocs tuneable,"More than gc_max_allocs may be running on a node, but terminal allocs will be garbage collected to try to keep the total number below the limit."
17284,Merge branch 'master' of github.com:hashicorp/nomad,
17285,Fix flaky test: TestServer_RPC_MixedTLS,
17286,Merge branch 'master' into f-update-block,
17287,Merge pull request #2621 from hashicorp/f-deployments,Deployment object and new Plan Apply FSM codepath
17288,Fix vet errors,
17289,Fix truncate test,
17290,Plan allows updating the status of deployments,
17291,Use a detected struct to hold deployment status for an allocation,
17292,Easy feedback fixes,
17293,API defaults use structs default,
17294,handle upgrading old update block syntax,
17295,Merge pull request #2632 from hashicorp/jbs-docs-scheduler-types,DOCS: Update Scheduler Types page
17296,DOCS: Update Scheduler Types page, Update grammar Add link to Large-scale cluster management at Google with Borg
17297,Thread through warnings about deprecations,
17298,changelog,
17299,Merge pull request #2610 from hashicorp/f-bolt-db,Client persist state using bolt-db and more efficient write patterns
17300,Merge pull request #2628 from hashicorp/b-ignore-consul-dereg-err,Ignore Consul deregister errors on executors
17301,Fix test,
17302,Ignore Consul deregister errors on executors,Errors here only occur if Consul is not running when Nomad is restarted. Errors here are only an issue if:  * Consul is being used but is down or misbehaving  * The executor is old (<0.6)  * The task has services  * The services hit a pre-0.6 consul.Syncer bug If all of those conditions are met the pre-0.6 bugs will persist for this task until Nomad is restarted.
17303,Merge branch 'master' into f-bolt-db,
17304,Respond to comments,
17305,Merge pull request #2626 from hashicorp/f-remove-win-cgo,Update go-winio to remove cgo on Windows
17306,New update block; still need to handle the upgrade path,
17307,Update go-winio to remove cgo on Windows,Thanks to Microsoft/go-winio#51
17308,Merge pull request #2622 from hashicorp/f-2594-support-consul-unix,Update consul/api to support unix socket addrs
17309,Add #2622 to Changelog,
17310,Update consul/api to support unix socket addrs,Fixes #2594
17311,Fix version constraint example in docs,Thanks @phinze!
17312,Create Deployments through plan application,
17313,Merge pull request #2585 from hashicorp/b-2554-container-exec,Execute exec/java script checks in containers
17314,Merge pull request #2608 from hashicorp/f-test-verify_https_client,Test verify_https_client behavior and skip Consul HTTPS health checks when enabled
17315,Remove extra Travis logging,
17316,Bump Travis to latest Go 1.8.x,
17317,Test pre06ScriptCheck,
17318,"Oops, remove dev logging",
17319,Reuse ExecScript implementation,
17320,Build new env from new alloc before interpolating,
17321,"Deployment struct, state store, fsm persist/restore",
17322,Structs,
17323,Merge pull request #2616 from hashicorp/docs-fix-0.5.5-upgrade,Fix upgrade instructions for docker load option
17324,Typeos,
17325,Merge pull request #2614 from hashicorp/b-2343-windows-panic,Update go-winio to fix Go 1.8 compat
17326,Fix upgrade instructions for docker load option,
17327,Add #2343 docker + windows panic fix to changelog,
17328,changelog,
17329,Merge pull request #2507 from hashicorp/f-task-env-vars,"Add env vars for dc, region"
17330,go-winio now requires cgo which requires mingw,
17331,Merge pull request #2612 from hashicorp/jbs-264,Docs: Update node-status page
17332,Remove evict,
17333,Update go-winio to get Microsoft/go-winio#48,
17334,Update go-winio to Microsoft/go-winio#31,Didn't fix the panic.
17335,Adding logging for Travis,
17336,Fix tests,
17337,Docs: Update node-status page, Add details about Desired Status and Client Status for #264
17338,Don't reuse transport/client,
17339,fix test.,
17340,important word change in docs.,
17341,"responding to feedback on PR: remove Region from Node struct, some grammatical niceties.",
17342,remove periods from things that aren't sentences.,
17343,mention the two newly available env vars in the docs.,
17344,I think I did it.,
17345,"allow region to also be interpolated, like datacenter.",
17346,"just found out dc and region are going to be a bit different, as Region didn't previously exist in the Node struct.",
17347,"add helper functions to set and clear dc, region names.",
17348,add dc and region to task env building function. flipped order of a couple functions to be consistent with the ordering of the rest of that section.,
17349,starting the jelly bean trail for two new env vars,
17350,better change_mode explanation for templates,
17351,Fix tests,
17352,Skip https health check if verify_https_client is true,
17353,Helpful comment,
17354,Fix tests,
17355,Merge pull request #2609 from DAXaholic/fix-typo,Fix typo
17356,Fix typo,
17357,Merge pull request #2599 from DAXaholic/fix-sidebar-item-text,Fix wrong text for 'Guides' item in sidebar
17358,Restore state + upgrade path,
17359,Fix error check for consul skip tls verify support,
17360,Document verify_https_client,
17361,Extensively test verify_https_client behavior,verify_https_client support added in #2587
17362,Merge pull request #2587 from weargoggles/patch-1,Verification options for TLS
17363,Merge pull request #2596 from weargoggles/deregister-before-kill,Clean up consul earlier when destroying a task
17364,"Revert ""metrics""",This reverts commit 4d6a012c6fb6f1fba6c62985d091b1a20c3198e7.
17365,Merge pull request #2602 from devth/patch-1,Update K8S max nodes
17366,Merge pull request #2603 from DAXaholic/fix-sidebar-project-link,Fix wrong link to GitHub project in sidebar
17367,Update K8S max nodes,According to http://blog.kubernetes.io/2017/03/scalability-updates-in-kubernetes-1.6.html
17368,Fix wrong link to GitHub project in sidebar,
17369,fix old arch,
17370,Async and sync saving of client state,
17371,perf,
17372,metrics,
17373,Use batching,
17374,boltDB database for client state,
17375,Don't deepcopy job when retrieving copy of Alloc,This PR removes deepcopying of the job attached to the allocation in the alloc runner. This operation is called very often so removing reflect from the code path and the potentially large number of mallocs need to create a job reduced memory and cpu pressure.
17376,Proper denormalization in optimistic state store,
17377,Changelog,
17378,Merge pull request #2592 from hashicorp/b-gc-race,Protect against nil job in new allocation
17379,Fix tests,
17380,update test,
17381,Fix wrong text for 'Guides' item in sidebar,
17382,address feedback,
17383,reduce to one configuration option,"There should be just one option, verify_https_client, which controls incoming and outgoing validation for the HTTPS wrapper"
17384,address feedback,
17385,clean up consul earlier when destroying a task,
17386,changelog,
17387,Merge pull request #2575 from hashicorp/f-job-revert,Job revert
17388,Swap validation checks,
17389,Protect against nil job in new allocation,
17390,fix config parse test,
17391,Properly interpolate services on updated tasks,Previously was interpolating the original task's services again. Fixes #2180 Also fixes a slight memory leak in the new consul agent. Script check handles weren't being deleted after cancellation.
17392,apply gofmt,
17393,Verification options allowed in TLS config,
17394,Copy TLSConfig verification flags in server create,
17395,Add verification options to TLS config struct,
17396,Merge pull request #2586 from mgagliardo/vagrant_nomad_version,Bumping up Vagrantfile's nomad version
17397,Bumping up NOMAD version to 0.5.6 and adding version as ENV variable,
17398,Test pre-0.6 script check upgrade path,
17399,Test env+cgroups for exec driver checks,
17400,Use Go 1.8.1 in Vagrant,
17401,Merge pull request #2582 from therealbill/patch-1,Update constraint.html.md
17402,Update constraint.html.md,Fix Distinct Constraint header
17403,Change raw_exec to use simplified exec wrapper,
17404,Switch java/exec to use Exec in Executor,
17405,Upgrade go-version to one compatible with Nomad versioning,
17406,Restart tasks on upgrade with script checks and old executors,
17407,docs,
17408,Revert api,
17409,Don't allow revert to current version,
17410,Agent test,
17411,Agent revert,
17412,Revert server endpoint,
17413,Structs,
17414,Merge pull request #2467 from hashicorp/f-consul-refactor,Refactor Consul Syncer into new ServiceClient
17415,Fix consul test build on Windows,
17416,Fix Windows build.,
17417,Thanks go vet!,
17418,Document module,
17419,Skip checks with TLSSkipVerify if it's unsupported,Fixes #2218
17420,Add TLSSkipVerify support to api and parser,
17421,Fix diff test + bonus upgrade to subtests,
17422,Use go-version instead of manual version parsing,
17423,Use spiffy new Go 1.8 subtest feature,
17424,Forgot an important word,
17425,Only register HTTPS agent check when Consul>=0.7.2,Support for TLSSkipVerify in other checks coming soon!
17426,Unregister from Consul when waiting for restart,
17427,Explain weird timer logic,
17428,Metricsify new Consul client,
17429,Always fail script checks when deadline exceeded,
17430,Test script check exit codes,
17431,Follow _testing.go convention for testing tools,
17432,Rework to account for ports not being in IDs,"Previous implementation assumed all struct fields were included in service and check IDs. Service IDs never include port labels and check IDs optionally include port labels, so lots of things had to change. Added a really big test to exercise this."
17433,Remove commits return value,...and still protect against leaking agent entries in Consul on shutdown.
17434,Remove stale comment,
17435,Fix circular test imports,
17436,Backoff on Consul lookup failures,
17437,Explain PortLabel handling in RegisterAgent,
17438,Plumb alloc id + task name into script check logs,
17439,Stop being lazy and just type out struct{}{},
17440,Use nifty testtask sleep command for xplat compat,
17441,Use a DriverAbility to expose Exec functionality,
17442,"Add comments, clarify names, fix PR comments",
17443,Explain cleanup defer in test,
17444,Move removal from Consul into TaskRunner cleanup,
17445,Fix comment to reflect reality,
17446,Move ScriptExecutor to driver,
17447,Fix shutdown when consul is down,
17448,Switch ServiceClient to synchronizing state,Previously it applied a stream of operations. Reconciling state is less complex and error prone at the cost of slightly higher CPU/memory usage.
17449,Add UpdateTask method instead of Remove/Add,
17450,Remove some lies,
17451,Remove unused syncInterval,
17452,Refactor Consul Syncer into new ServiceClient,Fixes #2478 #2474 #1995 #2294 The new client only handles agent and task service advertisement. Server discovery is mostly unchanged. The Nomad client agent now handles all Consul operations instead of the executor handling task related operations. When upgrading from an earlier version of Nomad existing executors will be told to deregister from Consul so that the Nomad agent can re-register the task's services and checks. Drivers - other than qemu - now support an Exec method for executing abritrary commands in a task's environment. This is used to implement script checks. Interfaces are used extensively to avoid interacting with Consul in tests that don't assert any Consul related behavior.
17453,Merge pull request #2553 from hashicorp/b-2552-chown-on-copy,Chown files when copying into chroot
17454,Add #2552 / #2553 to changelog,
17455,changelog,
17456,Merge pull request #2566 from hashicorp/f-job-versions,Track multiple job versions and introduce a stop state for jobs
17457,Respond to review comments,
17458,Fix logos,
17459,Merge pull request #2572 from hashicorp/docs-2571-cli-tls,Mention required cli config when using tls
17460,Mention required cli config when using tls,Fixes #2571
17461,Document fix,
17462,Fix some tests,
17463,Set ownership on directories in chroot,Also support getOwner on all Unixes as they all have module
17464,Don't disable hardlinking!,
17465,Chown files when copying into chroot,Fixes #2552 Not needed when hardlinking. Only adds Linux support but other OS's may be easy.
17466,API Docs,
17467,Diff code fixes,
17468,Status shows type of job,
17469,GC and some fixes,
17470,non-purge deregisters,
17471,Agent API + api package,
17472,GetJobVersions server endpoint,
17473,Histories -> Versions,
17474,Upsert Job Histories,
17475,Job History schema,
17476,changelog,
17477,Merge pull request #2555 from hashicorp/f-nack-delay,Back-pressure on Nacks and ensure scheduling progress on failures
17478,NewEvalBroker comment,
17479,Push to configs,
17480,Easy feedback fixes,
17481,changelog,
17482,Sync allocation state before waiting for a destroy,This change ensures that the client syncs allocation state with the servers before entering its wait loop for the allocation to be destroyed. Fixes https://github.com/hashicorp/nomad/issues/2563
17483,Merge branch 'master' of github.com:hashicorp/nomad,
17484,updated cluster requirements,
17485,Merge pull request #2556 from vrenjith/patch-2,Update java.html.md
17486,Update java.html.md,
17487,vendor new go-memdb,
17488,changelog,
17489,Merge pull request #2524 from hashicorp/v-go-getter,Vendor go-getter
17490,changelog,
17491,Merge pull request #2519 from hashicorp/b-sticky-tmp,Add sticky bit to temp directory
17492,Reaping failed evaluations creates follow up eval,Create a follow up evaluation when reaping failed evaluations. This ensures that a job will still make eventual progress.
17493,Delay Nack re-enqueue,Add a delay when an evaluation is nacked that starts off small but compounds to a larger delay for subsequent Nacks. This creates some back pressure.
17494,Make logging clearer,
17495,changelog,
17496,Merge pull request #2541 from hashicorp/f-stable-distributed-id,Hash host ID so its stable and well distributed
17497,changelog,
17498,Merge pull request #2547 from hashicorp/f-extra-hosts,Add ExtraHosts to Docker driver
17499,Add ExtraHosts to Docker driver,This PR allows job submitters to add extra hosts to the containers /etc/hosts file. Fixes https://github.com/hashicorp/nomad/issues/2546
17500,changelog,
17501,Merge pull request #2544 from hashicorp/b-plan-panic,Fix a panic during plan evaluation
17502,Fix a panic during plan evaluation,This PR fixes a potential source of a panic while evaluating a plan with all_at_once set to true with partial failures. Fixes #2531
17503,small doc change,
17504,Add a comment,
17505,Merge pull request #2536 from hashicorp/f-ipv6-fingerprint,Support IPv6 addresses during fingerprinting
17506,Fixed typo,
17507,Hash host ID so its stable and well distributed,This PR takes the host ID and runs it through a hash so that it is well distributed. This makes it so that machines that report similar host IDs are easily distinguished. Instances of similar IDs occur on EC2 where the ID is prefixed and on motherboards created in the same batch. Fixes https://github.com/hashicorp/nomad/issues/2534
17508,Added docs,
17509,Merge pull request #2538 from sheerun/patch1,Remove unnecessary parameter from NewHTTPServer
17510,Remove unnecessary parameter from NewHTTPServer,
17511,Added a test,
17512,Merge branch 'f-ipv6-fingerprint' of github.com:hashicorp/nomad into f-ipv6-fingerprint,
17513,Fix api.NetworkResource fields,
17514,Removed redundant code,
17515,Merge branch 'master' into f-ipv6-fingerprint,
17516,Ignoring link local addresses,
17517,wording,
17518,changelog,
17519,Merge pull request #2535 from clinta/docker-ip,Allow specifying container IP with docker driver
17520,Update docs to clarify that user defined networks are required,
17521,Fix documentation around ephemeral disk.,Fixes https://github.com/hashicorp/nomad/issues/2530
17522,Mention #2525 was fixed by #2526,
17523,Merge pull request #2526 from hashicorp/b-2525-enforce-rpc-tls,Require TLS for server RPC when enabled
17524,Allow specifying container IP with docker driver,
17525,Create AssertUntil helper func,
17526,Finding the appropriate cidr block,
17527,Import fonts,
17528,Add presskit and styles,
17529,Merge pull request #2529 from hashicorp/mitchellh-patch-1,Update dispatch_payload.html.md
17530,Update dispatch_payload.html.md,
17531,Improve test timings,1234ms was far longer than needed and not sleeping between iterations was just mean.
17532,Require TLS for server RPC when enabled,Fixes #2525 We used to be checking a RequireTLS field that was never set. Instead we can just check the TLSConfig.EnableRPC field and require TLS if it's enabled. Added a few unfortunately slow integration tests to assert the intended behavior of misconfigured RPC TLS. Also disable a lot of noisy test logging when -v isn't specified.
17533,Making the fingerprinter support ipv6 ips,
17534,Vendor go-getter,Fixes two issues: * netrc not being honored * tar files with files listed before their parent directories not being properly untarred.
17535,Merge pull request #2521 from hashicorp/t-windows,Variety of Windows specific test fixes
17536,fix badge,
17537,install with tags,
17538,remove vault main from vendor,
17539,Download specific consul/vault,
17540,vault testutil changes bin name based on OS,
17541,Split driver tests,
17542,Split task runner tests,
17543,set gobin,
17544,Change testserver binary lookup,
17545,README,
17546,version bump,
17547,Merge pull request #2520 from hashicorp/f-appveyor,AppVeyor for Windows Server 2016 CI environment
17548,Drop verbose,
17549,try to get make to work,
17550,Add sticky bit to temp directory,Fixes an issue where the Ruby runtime expects the sticky bit to be set on the temp directory. The sticky bit is commonly set on the temp directory since it is usually shared by many users. This change brings ours in line with that assumption.
17551,Use Nomad's color,
17552,Update Gemfile,
17553,Add favicons,
17554,Release v0.5.6,
17555,version bump,
17556,FinishedAt only records when the task has actually started,
17557,Small format fix,
17558,Changelog,
17559,Merge pull request #2512 from hashicorp/f-logs-startedat,Track task start/finish time & improve logs errors
17560,Track task start/finish time & improve logs errors,This PR adds tracking to when a task starts and finishes and the logs API takes advantage of this and returns better errors when asking for logs that do not exist.
17561,Bump required go,
17562,bump,
17563,Merge pull request #2503 from hashicorp/debug-vault,Fix variable capture and add tests
17564,Fix error checking,
17565,Fix variable capture and add tests,This PR fixes token revocation and adds tests to make sure it is working. The 0.5.6 RC1's token revocation does not work becasue the token's value is captured at the instantiation of the deferred stoprenewal statement rather than its exectution.
17566,Grammar fix.,
17567,Merge pull request #2498 from neumayer/fixtypo,Fix typo and be consistent in naming
17568,Fix typo and be consistent in naming,
17569,Release v0.5.6-rc1,
17570,bump version,
17571,Merge pull request #2497 from hashicorp/v-vendor,Vendor consul & consul-template
17572,Mention #2289 ##2482 in changelog,
17573,Merge pull request #2482 from hashicorp/f-2289-better-artifact-err,Improve artifact download error message
17574,add missing,
17575,Merge pull request #2494 from hashicorp/b-2491-task-env,Don't take a reference a var in a loop
17576,Recoverable struct field must be exported,
17577,Vendor consul,
17578,Consul-template,
17579,Merge pull request #2496 from vrenjith/patch-1,disk is not a supported entry at task level
17580,Update task.html.md,
17581,disk is not a supported entry at task level,Removed the reference to module in the module overview statement
17582,Merge branch 'master' into b-2491-task-env,
17583,changelog and version,
17584,Merge pull request #2495 from hashicorp/b-vault-stop-renew,Stop Vault token renew on task exit
17585,Merge pull request #2489 from hashicorp/b-immediate-periodic,Fix dispatch of periodic job
17586,Merge pull request #2461 from hashicorp/b-groups,Various fixes for setting user/group of task
17587,Merge pull request #2488 from hashicorp/f-node-values-template,Access Node Meta and Attrs in template
17588,feedback,
17589,Merge pull request #2486 from hashicorp/b-periodic-state,Fix periodic job state
17590,Merge pull request #2484 from hashicorp/b-reference-restarts,Proper reference counting through task restarts
17591,Make test more accurate and add changelog entry,
17592,Stop Vault token renew on task exit,This PR fixes an oversight in which the client would attempt to renew a token even after the task exits. Fixes https://github.com/hashicorp/nomad/issues/2475
17593,Don't take a reference a var in a loop,Fixes #2491
17594,Update downloads page,
17595,Add #2290 #2490 to changelog,
17596,remote cli,
17597,Merge pull request #2492 from burdiyan/patch-1,Mention Nomad CLI remote usage
17598,Merge pull request #2490 from hashicorp/b-fix-api-tls,Fix TLS use in AllocFS API and region/dc detection
17599,Remove old variables,
17600,Mention Nomad CLI remote usage,Added information about module environment variable for Nomad CLI remote usage.
17601,Remove overly clever code,
17602,Update styles,
17603,Fix TLS use in AllocFS API and region/dc detection,
17604,Fix dispatch of periodic job,"This PR fixes an issue in which when a periodic and parameterized job was dispatched, an allocation would be immediately created. Fixes https://github.com/hashicorp/nomad/issues/2470"
17605,"Recoverable is a method now, not a field",
17606,Add WrapRecoverable helper,
17607,Access Node Meta and Attrs in template,This PR allows accessing the Node's attributes and metadata as in a template. module
17608,Merge pull request #2483 from hashicorp/docs-artifact-source,Remove incorrect list of supported protocols
17609,Merge branch 'master' of github.com:hashicorp/nomad,
17610,Fix update docs,
17611,Merge pull request #2471 from lnguyen/git_docs,added git docs to artifacts
17612,Merge pull request #2485 from Sonna/patch-1,Fix typo in documentation link
17613,more verbose documentation on role based vault integration,
17614,document attr.unique.network.ip-address in common list,
17615,Fix periodic job state,This PR fixes an issue in which a periodic job would incorrectly transistion to status dead. Fixes https://github.com/hashicorp/nomad/issues/2268
17616,bump vault,
17617,Remove localhost URL in module command link,Remove the reference to module within the Rolling Update strategy documentation and fix the link to the module command documentation.
17618,Merge pull request #2477 from fiddyspence/bug_wrongshell_variable,Wrong shell variable used when changing directory
17619,Proper reference counting through task restarts,This PR fixes an issue in which the reference count on a Docker image would become inflated through task restarts.
17620,Remove incorrect list of supported protocols,The correct list is like 5 lines up
17621,Improve artifact download error message,Fixes #2289 Unfortunately took more RecoverableError hijinx than I would have liked. There might be a better way.
17622,Merge branch 'master' of github.com:hashicorp/nomad,
17623,Changelog,
17624,Merge pull request #2480 from hashicorp/b-restart-panic,Fix panic when restarting non-running task
17625,Fix vet,
17626,Fix panic when restarting non-running task,This PR fixes an issue that is hit when running templates with restart mode in which the client could panic when the handle is not running. Fixes https://github.com/hashicorp/nomad/issues/2479
17627,Wrong shell variable used when changing directory,
17628,added git docs to artifacts,
17629,Merge pull request #2468 from moritzheiber/master,Updated logo in README.md
17630,Updated logo in README.md,The logo file has been moved with link by @sethvargo. Hence the logo reference in the README.md is broken. This PR fixes that.
17631,Update doc to explain support for go-sockaddr/template format,
17632,Changelog,
17633,Merge pull request #2465 from hashicorp/b-plan-diff,Fix diff alignment and remove no change DC
17634,Fix diff alignment and remove no change DC,Old Output: module New Output: module
17635,Fix output alignment and remove no-change DC,Old Output: module New Output: module
17636,Version bump,
17637,Merge pull request #2462 from hashicorp/docs-0.5.5-upgrade,Mention 0.5.5 tool incompat with 0.5.4 agents
17638,Mention 0.5.5 tool incompat with 0.5.4 agents,
17639,Various fixes for setting user/group of task,This PR fixes two issues: * Folder permissions in -dev mode were incorrect and not suitable for running as a particular user. * Was not setting the group membership properly for the launched process. Fixes https://github.com/hashicorp/nomad/issues/2160
17640,Merge pull request #2459 from sprutner/patch-1,Update index.html.md
17641,Update index.html.md,grammar
17642,Merge pull request #2456 from vlm/master,ensuring bin directory exists before copying
17643,ensuring bin directory exists before copying,
17644,changelog,
17645,Merge pull request #2455 from hashicorp/doc-load-upgrade,Mention #2361 in upgrade notes.
17646,Mention #2361 in upgrade notes.,
17647,Merge pull request #2442 from jen20/deps-test-vault,build: Add Vault as an external test dependency
17648,Merge pull request #2452 from jen20/deps-update-gopsutil,deps: Update github.com/shirou/gopsutil/...
17649,Merge pull request #2454 from hashicorp/b-fix-gc-test,Fix test deadlock due to alloc runner not running
17650,Fix test deadlock due to alloc runner not running,Don't actualy call AllocRunner.Run() because that executes so much unneeded code for this test. Manually close the waitCh to simulate Run() exiting.
17651,deps: Update github.com/shirou/gopsutil/...,"This adds support for Illumos for memory and host information, which allows the fingerprinting tests to pass. It also contains fixes for FreeBSD."
17652,Tweak docs to note that a module will wire up both a TCP and UDP port.,
17653,Update the vault config on website,
17654,Merge pull request #2450 from hashicorp/sethvargo/sizing,Broken things fixed
17655,Update container,
17656,Fix monospace font size,
17657,Merge branch 'master' of github.com:hashicorp/nomad,
17658,Fix some website stuff,
17659,Add header links,
17660,Fix test by adding new env vars,
17661,return the recoverable err,
17662,Fix tests that exec nomad,
17663,Release v0.5.5,
17664,Bump version,
17665,Flush logs on err,
17666,rename cpu_total_compute and docs,
17667,changelog,
17668,Merge pull request #2447 from hashicorp/f-arm-misc,F arm misc
17669,Docker doesn't need to init the stats helper,
17670,Various fixes,This PR: * Uses Go 1.8 executable lookup * Stores any err message from stats init method * Allows overriding of Cpu Compute for hosts where it can't be detected
17671,Fix overriding build targets,
17672,changelog,
17673,Merge pull request #2427 from hashicorp/f-gc-limit,Limit parallelism during garbage collection
17674,Review fixes,
17675,Merge pull request #2408 from hashicorp/b-2358-rkt-volume-name,Replace module with module in task names for rkt volumes
17676,Merge pull request #2434 from hashicorp/f-skip-inplace-terminal-batch,Skip inplace update on terminal batch allocation
17677,Merge pull request #2446 from jippi/patch-2,Fix #2445
17678,Fix #2445,Close #2445 - typo in docs
17679,Windows wasn't fixed -- see #2343 for updates,
17680,Merge pull request #2417 from hashicorp/b-fix-build-scripts,[needs testing] make bin creates a release binary for the host arch
17681,build: Add Vault as an external test dependency,Vault is required for the fingerprinting tests but is not currently installed by the build process. This commit adds a new category of external tools for test dependencies and module's them during the bootstrap. We also fix the syntax of the Makefile to use tabs throughout.
17682,Allow to advertise 127.0.0.1 in non-dev mode if explicitly configured,
17683,Default to private IP advertise address in non-dev mode,
17684,Parse template before splitting host/port,Ref: https://github.com/hashicorp/nomad/pull/2399/files/a33af1ca0be07b6be0a884c3a3ea2a402a377de3#r105444568
17685,Merge pull request #2439 from jen20/dep-update-gopsutil,deps: Update github.com/shirou/gopsutil
17686,Merge pull request #2412 from barnardb/agent-self,Return AgentSelf struct from Agent.Self() instead of map
17687,Merge pull request #2440 from jen20/dep-update-docker-system,deps: Update github.com/docker/docker/pkg/system
17688,Merge pull request #2426 from hashicorp/f-tg-port-ip-env-var,"Add NOMAD_{IP,PORT} env vars"
17689,deps: Update github.com/docker/docker/pkg/system,This commit updates the module package of module.
17690,deps: Update github.com/shirou/gopsutil,"This commit updates module to the latest version, which includes CPU info support for Illumos."
17691,Merge pull request #2431 from hashicorp/b-git-ssh,Handle git ssh artifacts
17692,changelog,
17693,Merge pull request #2432 from hashicorp/b-batch-gc,Eval GC will collect allocs from stopped batch job
17694,Merge pull request #2433 from hashicorp/f-distinct-property-misc,Distinct Property Docs and Validation
17695,Update module to latest.,Direct to master given the trivial change.
17696,remove second client1,
17697,Skip inplace update on terminal batch allocation,This PR skips adding an inplace update to a successfully terminal batch job to the plan. This avoids extra data in the plan and avoids triggering updates on all clients that have the terminal allocation. This is matching behavior of the service scheduler. /cc @armon for review
17698,validation errors,
17699,documentation,
17700,Eval GC will collect allocs from stopped batch job,This PR fixes a bug in which allocations from stopped batch jobs could not be garbage collected.
17701,Handle git ssh artifacts,This PR adds handling for downloading git artifacts using ssh with the format git@github.com:hashicorp/go-getter.git Fixes https://github.com/hashicorp/nomad/issues/2430
17702,TODO,
17703,Merge pull request #2424 from jen20/solaris-alloc-dirs,client/allocdir: Add missing functions on Solaris
17704,Merge pull request #2428 from hashicorp/telemetry-docs,Added docs for the collection_interval option in the telemetry block
17705,remove escape,
17706,Added docs for the collection_interval option in the telemetry block,
17707,Limit parallelism during garbage collection,This PR introduces a parallelism limit during garbage collection. This is used to avoid large resource usage spikes if garbage collecting many allocations at once.
17708,Add changelog entry for #2426,
17709,"Add NOMAD_{IP,PORT} env vars",
17710,changelog,
17711,Merge pull request #2418 from hashicorp/f-distinct-property,module constraint
17712,Fix in-place update,
17713,Feedback addressed,
17714,Changelog,
17715,Merge pull request #2425 from hashicorp/f-client-metrics,Add metrics to show allocations on the client
17716,Address comment,
17717,Merge pull request #2416 from hashicorp/b-clean-env-var-2,Round two of env var cleaning
17718,Update documentation now that cleaning is more extensive,
17719,Merge pull request #2423 from jen20/dep-update-go-ps,deps: Update github.com/mitchellh/go-ps
17720,Fix filtering issue and add a test that would catch it,
17721,Refactor,
17722,Add metrics to show allocations on the client,This PR adds the following metrics to the client: client.allocations.migrating client.allocations.blocked client.allocations.pending client.allocations.running client.allocations.terminal Also adds some missing fields to the API version of the evaluation.
17723,client/allocdir: Add missing functions on Solaris,"This commit adds Solaris versions of the following functions:  module module module module  I believe this requires Go 1.8 in order to compile, as the unlink syscall was previously missing."
17724,deps: Update github.com/mitchellh/go-ps,This update pulls in a commit adding support for Solaris.
17725,Split distinct property and host iterator and add iterator to system stack,
17726,Merge pull request #2410 from barnardb/service-name-error-message,Correct error message re length of service name
17727,Merge pull request #2413 from barnardb/remove-duplicate-check,Remove duplicate check
17728,cleanup,
17729,Merge pull request #2414 from hashicorp/website-add-meganav,Website: Add Mega Nav
17730,Property Set,
17731,make bin creates a release binary for the host arch,make dev properly copies the binary into bin/ again. make release still creates binaries for as many archs as possible. Fixes #2407
17732,website: update version of middleman-hashicorp to 0.3.13,
17733,Round two of env var cleaning,"Should bring us into conformance with IEEE Std 1003.1, 2004 Edition: http://pubs.opengroup.org/onlinepubs/009695399/basedefs/xbd_chap08.html 1 alloc/op and ~80ns/op on my machine."
17734,Remove announcement banner and assets,
17735,"Remove ""by"" hashicorp",
17736,Add mega nav :zap:,
17737,Updated version of website,
17738,turbolinks,
17739,Update license,
17740,Update middleman-hashicorp,
17741,Update middleman-hashicorp,
17742,Remove duplicate check,
17743,Return AgentSelf struct from Agent.Self() instead of map,"api.AgentSelf mirrors command.agent.agentSelf, and makes it easier to work with the results of a call to Agent.Self()"
17744,Correct error message re length of service name,The error message had an off-by-one error :)
17745,Unoptimized implementation + testing,
17746,Replace module with module in task names for rkt volumes,Fixes #2358
17747,Merge pull request #2406 from hashicorp/b-2405-dashes-in-env-vars,"Replace ""-"" in port labels with ""_"" for env vars"
17748,Draw attention to env var sanitizing,
17749,Add documentation and changelog entry,
17750,"Replace ""-"" in env var keys with ""_""",Fixes #2405
17751,Merge pull request #2398 from TheBits/master,Remove 'disk space' from docs
17752,Changelog,
17753,Merge pull request #2404 from hashicorp/b-disk,Display Disk resources on CLI
17754,Display Disk resources on CLI,Fixes https://github.com/hashicorp/nomad/issues/2401
17755,Double the anti-affinity for placing same task group on node,
17756,Debug lines,
17757,Remove 'disk space' from docs,
17758,Merge branch 'master' of github.com:hashicorp/nomad,
17759,Remove dead code,
17760,Merge pull request #2396 from hashicorp/f-smoke-test,Small init and validate smoke test
17761,Small init and validate smoke test,
17762,Release v0.5.5-rc2,
17763,auto release,
17764,Fix docs and script,
17765,bump version,
17766,Merge pull request #2397 from hashicorp/b-validate,Make validate work without a Nomad agent
17767,Make validate work without a Nomad agent,
17768,Add #2391 and #2394 to the changelog,
17769,Merge pull request #2394 from hashicorp/b-remount,"Ensure dev/, proc/, and alloc/ are mounted every time a task is run"
17770,Fix lint errors,
17771,Fix TestAllocRunner_SaveRestoreState,
17772,Mkdir -> MkdirAll to avoid error when folder already exists,
17773,Merge branch 'master' into b-remount,
17774,Vendor new cli,
17775,Fix tests broken by API change,
17776,Fix API breaks in tests,
17777,Cleanup comments/names,
17778,"Safely ensure {dev,proc,alloc} are mounted",If they're unmounted by a reboot they'll be properly remounted.
17779,unlinkDir should not error if already unlinked,
17780,Fix typos,
17781,Merge pull request #2391 from hashicorp/b-idempotent-umount,Make sure unmounting the secrets dir is idempotent
17782,Make sure unmounting the secrets dir is idemptoent,
17783,Fix mbits default on website,
17784,Merge pull request #2389 from tmichaud314/2388-docker-driver-auth-file,Fixes docker-driver docker.auth.config processing
17785,Fix canonicalization of services,
17786,changelog,
17787,Merge pull request #2386 from hashicorp/f-go-getter,Update go-getter and add support for git and hg
17788,Fixes docker-driver docker.auth.config processing,
17789,changelog,
17790,Merge pull request #2385 from hashicorp/f-periodic-paramaterized,Handle periodic paramaterized jobs
17791,Fix plan,
17792,Update go-getter and add support for git and hg,Fixes https://github.com/hashicorp/nomad/issues/2042
17793,Merge pull request #2378 from hashicorp/update-docker-deps,"Update Windows, Docker, and other dependencies"
17794,Handle periodic paramaterized jobs,Fixes https://github.com/hashicorp/nomad/issues/2382
17795,Merge pull request #2380 from Daviey/master,Don't exec uname for node attribute kernel.version
17796,Merge pull request #2384 from jonathanio/fix/build-script,Fix spelling error for CGO_ENABLED variable in build script
17797,Fix spelling error for CGO_ENABLED variable in build script,
17798,Enable kernel.version on Windows,"Previously, this value was guarded against running on Windows because it called the module command which is unlikely to be there. This change now sets the value from gopsutil, which might well be an empty string. Signed-off-by: Dave Walker (Daviey) link"
17799,Revert libcontainer to 89ab7f2ccc1,
17800,Merge pull request #2379 from Gerrrr/doc/latest-tag,Add caveat about always pulling latest tag to docker driver docs
17801,"Re-enable soft purging, stale-if-error",
17802,Don't exec uname for node attribute kernel.version,"Previously with client fingerprinting, sys/exec's Command function was being used to execute module and the return string processed into the kernel.version node attribute. This change uses gopsutil/host KernelVersion function instead.  This means we can drop the os/exec, strings and fmt imports... and not execute an external binary. Signed-off-by: Dave Walker (Daviey) link"
17803,Fix caching of pull future,
17804,Add caveat about always pulling latest tag to docker driver docs,
17805,remove leading slash on vault path,
17806,Add lookup-self,
17807,Vendor some missing deps,
17808,Remove unused vendored packages,
17809,Fix Linux build failure due to struct change,
17810,Merge pull request #2377 from hashicorp/sethvargo/cache,Update caching
17811,Update lots of vendored deps,
17812,Update caching,
17813,Hoping updating docker deps will fix panic on Windows,🤞
17814,Changelog,
17815,Merge pull request #2376 from hashicorp/b-fix-restore-errors,Fix two issues during client restore state
17816,Fix two issues during client restore state,This PR fixes two issues: 1) A close of a nil stopCollection channel when restoring and prestart fails. The failure will cause the killCh to be triggered which will close collection before it has been initialized. 2) Fixes a deadlock in which the handleWaitCh is never triggered since it is not initialized when there is an error in prestart and the killCh is triggered. Both fixes are by maintaining the loop invariant that the two channels are valid after there is a handle.
17817,Merge pull request #2373 from jmvacdmon/patch-1,change example to logging docker driver
17818,change example to logging docker driver,
17819,Delete on increment and add a safety guard,
17820,Merge branch 'master' of github.com:hashicorp/nomad,
17821,Fix delete future,
17822,Merge pull request #2372 from hashicorp/f-vet,Fix vet script and fix vet problems
17823,Fix vet script and fix vet problems,This PR fixes our vet script and fixes all the missed vet changes. It also fixes pointers being printed in module and module.
17824,Merge pull request #2371 from crokita/patch-1,Fix syntax of docker.cleanup.image example
17825,Docker open stores image/image ID for next ID,
17826,Allow random UUID,
17827,Fix syntax of docker.cleanup.image example,I found this syntax issue because I copy-pasted the snippet into my config file and attempted to run Nomad with it. Whoops
17828,Changelog,
17829,Merge pull request #2370 from hashicorp/f-gc,Allow specification of eval/job gc threshold
17830,Allow specification of eval/job gc threshold,
17831,Merge pull request #2369 from hashicorp/sethvargo-patch-1,Do not soft purge
17832,Fix typo,
17833,Do not soft purge,"Soft purging is great, but we warm the cache immediately after deploy, and even then, if a user happens to be visiting the site in that few hundred milliseconds, they eat the time of a Fastly-S3 lookup, which is still 100x better than 99% of the websites out there."
17834,More auth docs,
17835,Merge pull request #2368 from hashicorp/sethvargo/missing_asset,Fix missing asset
17836,Fix missing asset,
17837,Merge pull request #2363 from alistanis/fix-readme-typo,changes request to requested
17838,links,
17839,remove sidebar for cluster,
17840,Add support for late binding to IP addresses using go-sockaddr/template,
17841,Merge branch 'master' of github.com:hashicorp/nomad,
17842,Fix pointer dereference for stats,
17843,changes request to requested,
17844,Merge pull request #2362 from scottw/master,add data_dir to server and client configuration
17845,add data_dir to server and client configuration,
17846,Document incompatibility,
17847,Release v0.5.5-rc1,
17848,Merge branch 'master' of github.com:hashicorp/nomad,
17849,fix check,
17850,Change the default display name from the Circonus Instance ID to,module. The display name is already scoped to target/host.
17851,Bump version,
17852,Changelog,
17853,Merge pull request #2361 from hashicorp/f-docker-coordination,Docker Image Coordinator and caching
17854,ensure spec is set,
17855,Docker Image Coordinator,This PR introduces a coordinator for doing CRUD on a Docker image. It should fix racy deletion of images. The issue before was images would be deleted between prestart and start causing an error.
17856,Merge pull request #2336 from hashicorp/b-fix-api-panic,Fix API panic and bad missing port check
17857,Merge pull request #2350 from Crypto89/b-fix-vagrant-goversion,Fix the GO_VERSION in the Vagrantfile
17858,Merge pull request #2353 from hashicorp/b-docker-volume-driver-conf,Put access to Docker volume drivers behind flag
17859,Merge pull request #2357 from hashicorp/b-fix-template-panic,Template.Canonicalize wasn't initializing all fields
17860,Add Canonicalize test mimicing example job + template,
17861,Missed initializing another field in Template!,
17862,Template.Canonicalize wasn't initializing all fields,
17863,Oops! Don't try to build darwin on Linux.,Someday maybe
17864,Put access to Docker volume drivers behind flag,
17865,Fix noisy log,
17866,Allow building specific targets,
17867,Fix Go 1.8 in Vagrantfile,
17868,Mention docker volume drivers #2351,Thanks @pietromenna!
17869,Merge pull request #2351 from pietromenna/docker-volume-drivers,Docker Volume Drivers
17870,Improved documentation for Docker Volume Drivers,Incorporated comments from @schmichael
17871,Docker Volume Drivers,This commit adds the functionality to use Docker Volume Drivers.
17872,Fix the GO_VERSION in the Vagrantfile, Change the GO_VERSION to match the correct upstream version from     (https://storage.googleapis.com/golang/)
17873,Changelog,
17874,Merge pull request #2349 from hashicorp/f-node-status-drivers,Node-status displays drivers
17875,Node-status displays drivers,This PR adds the drivers that are enabled to the output of module
17876,Changelog,
17877,Merge pull request #2344 from hashicorp/b-fix-allocdir-move-test,Fix allocdir Move test and make code more defensive
17878,Merge pull request #2302 from hashicorp/f-task-state-setup,Adding a task event for setup
17879,Merge pull request #2347 from hashicorp/b-parse,Remove defaulting from parse and fix tests
17880,Remove deregister from changelog,
17881,Fix tests and docs,
17882,Adding a task event for setup,
17883,Merge pull request #2348 from hashicorp/revert-2339-b-job-delete,"Revert ""Deregistering non-existant job returns 404"""
17884,"Revert ""Deregistering non-existant job returns 404""",
17885,Merge pull request #2341 from hashicorp/docs-task-timeout-kill,docs: Add note about max_kill_timeout to tasks
17886,Fix wrong types,
17887,Undo demo files,
17888,vendor go-memdb/radix,
17889,Merge branch 'master' of github.com:hashicorp/nomad,
17890,Fix flakey test TestNetworkIndex_AssignNetwork_Dynamic_Contention,
17891,Vendor + test fixes,
17892,Remove defaulting from parse and fix parser tests,"This PR removes defaulting from the parse, fixes some regressions that existed as part of the parser refactor and fixes the tests."
17893,docs: Add note about max_kill_timeout to tasks,This commit makes an explicit note in the documentation for the Nomad task specification about capping of module based on agent configuration as well as task configuration.
17894,Fix allocdir Move test and make code more defensive,"A change in the behavior of module in Go 1.8 brought to light a difference in the logic between module and this test: AllocRunner builds the alloc dir, moves dirs if necessary, and then lets TaskRunner call TaskDir.Build(). This test called module before module, so in Go 1.8 it failed to module the empty {data,local} dirs. I updated the test to behave like the real code, but I defensively added module calls as a subtle change in call order shouldn't break this code. module won't remove a non-empty directory, so it's still safe."
17895,Merge pull request #2342 from hashicorp/b-docker-noswap-on-win,Skip setting MemorySwap on Windows
17896,Add changelog entry,
17897,Fix logo,
17898,Skip setting MemorySwap on Windows,Windows doesn't support this Docker setting. Fixes #2193
17899,Merge pull request #2340 from troyswanson/patch-1,Tiny grammar fix
17900,s/successfully/successful,
17901,changelog,
17902,Merge pull request #2339 from hashicorp/b-job-delete,Deregistering non-existant job returns 404
17903,Deregistering non-existant job returns 404,Fixes https://github.com/hashicorp/nomad/issues/2326
17904,changelog,
17905,Merge pull request #2338 from hashicorp/b-meta,Don't force uppercase meta keys in env vars
17906,Don't force uppercase meta keys in env vars,
17907,changelog,
17908,Merge pull request #2337 from hashicorp/f-driver-errors,Drivers log during fingerprinting
17909,Drivers log during fingerprinting,This PR fixes a regression in which some drivers did not log during fingerprinting.
17910,changelog,
17911,Merge pull request #2315 from hashicorp/f-delimiters,Allow specification of template delimiters
17912,rebase,
17913,Add leader and timezone to conversion,
17914,Merge pull request #2332 from hashicorp/website-typography-updates,Website typography updates
17915,changelog,
17916,Merge pull request #2300 from hashicorp/refactor-parser,Making the API default missing values
17917,fix pointer,
17918,Add defaulting test and fix types on the agent job endpoint tests,
17919,Bump,
17920,Merge branch 'master' into refactor-parser,
17921,Fix API panic and bad missing port check,"The format of the missing port error message changed from Go 1.7 to 1.8. The fix is to just use strings.Contains instead of strings.HasPrefix when looking for the ""missing port"" part. Also add an error return to Client.newRequest as parsing the path processes arbitrary user input and would panic if given an invalid URL. See: https://groups.google.com/d/topic/nomad-tool/gi3-CTE7oXo/discussion"
17922,Keep logo positioned correctly in small mobile view. Clean up.,
17923,Merge pull request #2331 from hashicorp/b-dispatch-response,swap structs
17924,swap structs,
17925,Add updated logotype as sag,
17926,changelog,
17927,Merge pull request #2318 from hashicorp/f-vault-debug,Server side Vault telemetry
17928,changelog,
17929,Merge pull request #2321 from hashicorp/f-timezone,Allow specification of timezones in Periodic Jobs
17930,Remove panic,
17931,Keep Klavika scoped to home page,
17932,Bump go,
17933,changelog,
17934,Merge pull request #2322 from hashicorp/f-escape,Fix escaping of HTML characters
17935,Changelog,
17936,Merge pull request #2329 from hashicorp/f-client-allocated-telemetry,Test fix
17937,Docs,
17938,Merge pull request #2327 from hashicorp/f-client-allocated-telemetry,Add allocated/unallocated metrics to client
17939,Docs,
17940,Add allocated/unallocated metrics to client,
17941,Fix embedded meta in dispatch response,
17942,Downgrading to Go 1.7,
17943,Merge branch 'refactor-parser' of github.com:hashicorp/nomad into refactor-parser,
17944,Fixed cli tests,
17945,Fix CLI handling of parameterized/periodic jobs,
17946,Refactor test and fix them,
17947,Flatmap,
17948,Fix detection of missing port,
17949,Making the job register endpoint use api.Job,
17950,Use RC to see if cause of failure,
17951,Removing un-neccessary conversions,
17952,Fixed the nomad status command,
17953,Added docs,
17954,Added tests,
17955,Making the job spec return api.Job,
17956,Import and typeset Klavika font,
17957,Remove Blanc font and references,
17958,fix test,
17959,Fix diff,
17960,Fix escaping,
17961,Allow specification of timezones,
17962,Revendor docker client,
17963,Fix interval breaking two tests,
17964,Better derive token logging,
17965,Include alloc on server side err/logs,
17966,Add server metrics,
17967,Changelog,
17968,Merge pull request #2310 from hashicorp/f-serf-reap,Handle Serf Reap event
17969,changelog,
17970,Merge pull request #2309 from hashicorp/f-no-root-token,Disallow root policy from being specified
17971,changelog,
17972,Merge pull request #2308 from hashicorp/f-leader-task,Leader task
17973,changelog,
17974,Merge pull request #2305 from hashicorp/f-operator,Add nomad operator command for interacting with Raft configuration
17975,Respond to feedback,
17976,Changelog,
17977,Merge pull request #2311 from hashicorp/f-no-interval,Validate the interval within a restart policy
17978,Merge pull request #2306 from greenboxal/improve-doc,Improve interpolation docs
17979,Validate the interval within a restart policy,This PR ensures that the interval specified is not less than 5 seconds. Fixes https://github.com/hashicorp/nomad/issues/2286
17980,Fix test,
17981,Handle Serf Reap event,This PR adds handling of the Serf member reap event to remove the peer from Raft.
17982,Disallow root policy from being specified,This PR disallows the specification of a root policy by a Nomad task.
17983,Remove old vault status,
17984,Api Leader becomes a pointer,
17985,Documentation,
17986,Improve interpolation docs,
17987,Add Leader support to client,
17988,Add leader task to api and server side,
17989,Update go-cleanhttp,
17990,Merge branch 'master' of github.com:hashicorp/nomad,
17991,Add guard,
17992,Merge pull request #2301 from hashicorp/b-fix-nil-resources,Fix upgrade path for created resources
17993,Remove todos,
17994,Add outage guide and move bootstrapping,
17995,Fix test to assert new never-nil behavior,
17996,Merge branch 'add-guides' into f-operator,
17997,Operator command/endpoint/documentation,
17998,Use getters & setters with nil guards,
17999,Fix upgrade path for created resources,"This might be a fix for #2295 -- I've been unable to reproduce the bug. However, this guard seems wise regardless. I should never be overwriting an intialized created resources with a nil."
18000,Merge pull request #2298 from hashicorp/sethvargo-patch-1,Change cache to 4h
18001,Cache assets longer,
18002,Change cache to 4h,
18003,Merge pull request #2297 from hashicorp/b-fix-arm-build,Fix 32bit arm build
18004,Fix 32bit arm build,Had to use the hack from https://github.com/golang/go/issues/12443
18005,Vendor memberlist fixes,
18006,Merge pull request #2282 from hashicorp/f-raft-v2-stage-one,Update to Raft V2 stage one
18007,Merge pull request #2293 from hashicorp/f-vendor-memdb,Vendor MemDB
18008,Respond to comments,
18009,Fix missing summary restoration,
18010,Add abandon tests and use snapshot for blocking queries,
18011,Update module to reflect module being merged.,
18012,Fix nomad tests,
18013,Tests compile,
18014,Nomad builds,
18015,Fix test,
18016,Fix state store tests,
18017,Merge pull request #2288 from hashicorp/b-lower-hostid,Lowercase NodeID
18018,Unconditionally lowercase the node ID read from disk.,
18019,Update module to shiriou/gopsutil#313 to pull in the lowercase module bits,
18020,Merge pull request #2287 from hashicorp/sethvargo/comments,Fix comments on parameterized jobs
18021,Fix comments on parameterized jobs,
18022,Merge pull request #2284 from tomclegg/patch-1,fix typo
18023,Add windows exe extension,
18024,Fix forwarded recoverable error,
18025,Use watchset on getter methods,
18026,fix typo,
18027,Update state store and blocking query helper,
18028,Update module to reflect shirou/gopsutil#312 being merged.,
18029,Vendor,
18030,reloads,
18031,Changelog,
18032,Merge pull request #2281 from dbresson/fix-reserved-merge-error,avoid a nil pointer dereference
18033,Fix bootstrap tests,
18034,avoid nil pointer dereference,
18035,extend config merge test to test merging to empty config,
18036,Tests build,
18037,Merge pull request #2279 from hashicorp/f-windows-hostid,Add durable HostID generation support to Windows.
18038,Add better verification of a host's HostID.,
18039,Add durable HostID generation support to Windows.,https://github.com/shirou/gopsutil/pull/312
18040,It builds,
18041,Join + Leave peer,
18042,Update setupRaft,
18043,Bump protocol version and update numOtherPeers,
18044,Merge pull request #2273 from hashicorp/config-merge,Merging GC related config values
18045,Merging GC related config values,
18046,Vendor v2 stage one,
18047,Changelog,
18048,Merge pull request #2277 from hashicorp/f-durable-uuid,Reproducible Node ID
18049,Merge branch 'master' of github.com:hashicorp/nomad,
18050,changelog,
18051,Merge pull request #2278 from hashicorp/b-consul-merge,Fix Consul Config Merging/Copying
18052,Changelog,
18053,Merge pull request #2255 from hashicorp/f-vendor-serf-memberlist,Vendor Serf and Memberlist
18054,Merge pull request #2262 from hashicorp/f-permissions,Template destination file permissions.
18055,Merge branch 'f-permissions' of github.com:hashicorp/nomad into f-permissions,
18056,Grammar fix,
18057,Merge pull request #2270 from hashicorp/f-vault-sighup,Vault Client on Server handles SIGHUP
18058,Changelog,
18059,Merge pull request #2271 from hashicorp/f-prep-0.5.5,Prep for 0.5.5 and add changelog entry for #2266
18060,Merge pull request #2275 from hashicorp/b-vault-race,Fix race condition with Deriving vault tokens
18061,Fix Consul Config Merging/Copying,This PR fixes config merging/copying code. Fixes https://github.com/hashicorp/nomad/issues/2264
18062,Update module and remove a bit of cruft.,
18063,Update module,
18064,Update github.com/shirou/gopsutil and friends.,
18065,Update module,
18066,Slight mis-merge: secret-id in dev mode is random and needs to be returned.,
18067,"Generate a durable NodeID if possible, otherwise fall back to a random HostID.",
18068,Update github.com/shirou/gopsutil/host to include HostID update,
18069,"Remove github.com/shiro/gopsutil (leave its child packages, however)",
18070,Merge branch 'master' into f-vendor-serf-memberlist,
18071,Merge branch 'master' into f-permissions,
18072,Merge branch 'master' into f-vault-sighup,
18073,Merge branch 'master' into b-vault-race,
18074,Merge pull request #2269 from hashicorp/gc-test,Checking in updated gc tests
18075,Merge branch 'master' of github.com:hashicorp/nomad,
18076,Add role to merge test,
18077,Fix race condition with Deriving vault tokens,This PR fixes a race condition in which the client was not locked while deriving Vault tokens. This allowed the token to be set which would cause subsequent Vault requests to fail with permission denied because the incorrect Vault token was being used. Further this PR makes the unsetting and unlocking of the client atomic to avoid an even harder to hit race condition (not sure it was ever hit but was still incorrect).
18078,Merge pull request #2274 from hashicorp/doc-rkt-port-map,Expand rkt port_map docs since it confused me
18079,Expand rkt port_map docs since it confused me,(and I wrote it) Fixes #2272
18080,spel dev correktly,
18081,Prep for 0.5.5 and add changelog entry for #2266,
18082,Merge pull request #2267 from BSick7/b/panic-startup,Preventing panics of RecoverableError casts
18083,Vault Client on Server handles SIGHUP,This PR allows the Vault client on the server to handle a SIGHUP. This allows updating the Vault token and any other configuration without downtime.
18084,fmt,
18085,Third time is a charm.,
18086,Checking in updated gc tests,
18087,Properly dealing with non-nil errors.,
18088,Preventing panics of RecoverableError casts,
18089,Merge pull request #2260 from hashicorp/f-circonus-update,Update circonus vendor
18090,Merge pull request #2265 from hashicorp/wat,Bump to 0.5.4
18091,Template destination file permissions.,This PR allows setting the file permissions of the rendered template.
18092,Bump website + demo to 0.5.4,
18093,Release v0.5.4,
18094,Release v0.5.4,
18095,Prep versoin 0.5.4,
18096,Updated changelog,
18097,Merge pull request #2261 from hashicorp/f-gc-threshold,Making GC related fields tunable
18098,Added docs,
18099,Making the GC related fields tunable,
18100,Mention #2256 in 0.5.4 changelog,
18101,Update circonus vendor,
18102,"Revert ""Merge pull request #2258 from hashicorp/f-update-circonus-vendor""","This reverts commit b7417003eb6a6d9197e5e0e3a1d04b70e88b3311, reversing changes made to b51a11c8edd0c91149bea26cc53408e58af19514."
18103,Merge pull request #2258 from hashicorp/f-update-circonus-vendor,Update circonus vendor
18104,Merge pull request #2259 from hashicorp/b-fix-vagrant,Fix vagrant on vbox
18105,Update circonus vendor,
18106,Fix vagrant on vbox,
18107,fixed conflicts,
18108,Merge pull request #2257 from hashicorp/b-nil-resources-panic,Handle createdResourcs=nil
18109,Merge branch 'master' into b-nil-resources-panic,
18110,Fix vagrant ssh,
18111,Handle createdResourcs=nil,Combined with b522c472fdf this fixes #2256 Without these two commits in place upgrades to 0.5.3 panics.
18112,Add nil guard,
18113,Vendor memberlist,
18114,Update serf,
18115,slightly more verbose test,
18116,Comment for clarity,
18117,Optimize responsive nav,this guarantees the nav list fits in this viewport range (there was a very small range where it broke the layout)
18118,version bump,
18119,Fix link,
18120,Release v0.5.3,
18121,bump version,
18122,Release v0.5.3,
18123,changelog,
18124,Release v0.5.3,
18125,Merge pull request #2251 from ryon/master,Add Google Tag Manager #GTM-NR2SD7C
18126,Change box,
18127,Merge pull request #2242 from hashicorp/f-build-cleanup,Refactor Vagrantfiles and release script
18128,Fix some bash; uuuuuuuuuugh,
18129,Make sed macos compatible,Saves a backup file using a gitignored extension.
18130,Upgrade demo vm to xenial/16.04 as well,
18131,Prettify output,
18132,Fix module with a bunch of guards,
18133,Bump rkt version; simplify script,
18134,Upgrade vagrant/release to Ubuntu 16.04 / Go 1.7.5,Switch back to soft-float arm32 as armhf chips are backward compatible.
18135,Split out massive list of cross compile deps+cmds,
18136,Install crosscompile dep to build arm in Vagrant,
18137,Cache build deps prior to running tests,
18138,Split dev build into its own script,"The dev build is far simpler than the release build, so move it to its own shell script. This simplifies the release build script slightly as well at the cost of duplicating the version/tag logic. Also don't even try to check for LXC if not running on Linux. I don't think we want to try to support cross-compiling LXC from non-Linux hosts."
18139,Merge pull request #2252 from hashicorp/d-vault,Update vault docs
18140,Merge branch 'master' into d-vault,
18141,explain the skip,
18142,small fixes,
18143,Merge pull request #2250 from jrasell/master,Update the 'requirements.html.md' cluster docs with 'Ports Used'.
18144,Cleanup and skip test,
18145,Add command line flag for create-from-role,
18146,Add Google Tag Manager #GTM-NR2SD7C,
18147,new vault docs,
18148,Merge pull request #2247 from hashicorp/b-dispatch-gc,Disallow GC of  parameterized jobs
18149,Update the 'requirements.html.md' cluster docs with 'Ports Used'.,This adds a section detailing the ports and protocols used by Nomad in a similar way to the Consul docs which can be seen 'https://www.consul.io/docs/agent/options.html#ports'.
18150,Merge pull request #2244 from taylorchu/TC_fix_verify_ssl,BUGFIX: fix consul verify_ssl merging
18151,Loosen timing a bit on travis,
18152,TWEAK: remove else block in tls handling,
18153,Merge branch 'master' into b-dispatch-gc,
18154,Merge branch 'master' into TC_fix_verify_ssl,
18155,BC warning,
18156,up timing,
18157,Fix typo,
18158,Fix flaky test,
18159,Merge pull request #2245 from hashicorp/d-dispatch,Document parameterized jobs and dispatch command
18160,Disallow GC of  parameterized jobs,This PR makes it so parameterized jobs do not get garbage collected and adds a test.
18161,Respond to comments,
18162,Children api,
18163,Status examples,
18164,move file,
18165,JSON job,
18166,API,
18167,missing tests,
18168,alphabetical,
18169,Rename meta/parsing,
18170,Rename dispatch_input to dispatch_payload,
18171,Fix bad link,
18172,dispatch_payload,
18173,Parameterized page,
18174,Dispatch command,
18175,Fix import,
18176,Fix unreachable function in tests,
18177,BUGFIX: fix consul verify_ssl merging,
18178,Container width override to accommodate nav items,
18179,Wire up nav,
18180,More timing fixes,
18181,"Add guides section, primary nav item",
18182,small env fix,
18183,Release v0.5.3-rc1,
18184,Fix flaky test,
18185,Fix fsm/env test,
18186,Update template json docs,
18187,Merge pull request #2238 from t3hk0d3/bugfix/fix_template_json_doc,Fix template documentation references
18188,Merge pull request #2239 from leonli/patch-1,the alloc-status used wrong allocation id
18189,the alloc-status used wrong allocation id,the alloc-status used wrong allocation id in the cod example.
18190,Add template reference to task object documentation,
18191,Add template to JSON objects documentation,Closes #2237
18192,Merge pull request #2234 from hashicorp/f-doc-template-env-var,Mention nomad's runtime environment being available now
18193,Bumping up version,
18194,Updated changelog,
18195,Try to use more useful example env vars,
18196,changelog,
18197,Merge pull request #2235 from hashicorp/f-http-logs,Logs via a browser
18198,Review feedback,
18199,Fix template test,
18200,Fix test,
18201,docs,
18202,test,
18203,Mention nomad's runtime environment being available now,
18204,Add example of env vars in templates,
18205,disallow follow,
18206,Merge pull request #2223 from hashicorp/f-env-addr,Setting the Addrs of sibling tasks in the env
18207,Added docs,
18208,Merge pull request #2232 from hashicorp/b-clarify-go-getter,"Remove misleading ""any URL as defined by go-getter"" doc"
18209,changelog,
18210,Add more details to the source doc,
18211,Merge pull request #2226 from hashicorp/b-vault,Improve Vault integration and validation
18212,Merge pull request #2222 from hashicorp/b-docker-image-not-found,Making the docker driver retry when an image is not found
18213,Added a comment,
18214,"Remove misleading ""any URL as defined by go-getter"" doc",
18215,changelog,
18216,Merge pull request #2190 from hashicorp/b-docker-auth,Better Docker Auth lookup
18217,Add test and better logs,"This commit adds a test to retrieving auth configurations, use either the auth block in the config or specified via the agent config and adds a log if lookup fails."
18218,fix flaky test,
18219,Prefer looking up using self path and remove checking for default policy,
18220,Close file,
18221,Deprecation notice,
18222,Remove SSL,
18223,undo,
18224,vendor,
18225,Better auth lookup,
18226,WIP,
18227,fix test build,
18228,Changelog,
18229,Merge pull request #2209 from hashicorp/f-consul-template,Rebase consul template and make Nomad environment variables available
18230,vendor to 0.18,
18231,remove xxx,
18232,Finalize,
18233,vendor,
18234,test nomad env,
18235,fix lookup,
18236,vendor,
18237,Clear SSL,
18238,vendor my PR,
18239,rebase,
18240,vendor api,
18241,error pkg,
18242,vendor update,
18243,Merge branch 'master' of github.com:hashicorp/nomad,
18244,Wording,
18245,Merge pull request #2231 from hashicorp/b-close-ch,Locking appropriately before closing the channel to indicate migration
18246,Merge pull request #2228 from iconara/exec-chroot-doc-clarification,Clarify that exec copies all chroot_env directories
18247,Locking appropriately before closing the channel to indicate migration,
18248,Fix blacklist test,
18249,Clarify that exec copies all chroot_env directories,This was not clear to me and is very important to understand since you can quickly fill up your disk if you run batch jobs.
18250,changelog,
18251,fix typo,
18252,remove reference to entrypoint,
18253,changelog,
18254,Merge pull request #2227 from hashicorp/b-template-splay,Actually randomize the splay in the template
18255,Actually randomize the splay,
18256,update website,
18257,Test new functionality,
18258,Fix tests,
18259,Fix index we get allocs by,
18260,verify we can renew ourselves,
18261,Setting the Addrs of sibling tasks in the env,
18262,Fix java tests,
18263,Merge pull request #2216 from hashicorp/b-rootless-raw-exec,Don't link shared alloc dir into task dir for raw_exec
18264,Merge pull request #2215 from hashicorp/b-2211-host-env,Fix image based drivers having host env vars set
18265,Merge pull request #2198 from hashicorp/b-rootless-docker,Stop trying to use mount for image based drivers
18266,Merge pull request #2186 from hashicorp/f-driver-cleanup,Add Cleanup method to Driver interface
18267,Merge pull request #2221 from hashicorp/b-rename-constructor,Rename Constructor -> Parameterized Job
18268,parameterized_job -> parameterized,
18269,Rename Constructor -> Parameterized Job,
18270,Making the docker driver retry when an image is not found,
18271,Cleanup errors/comments,
18272,Test pass,
18273,closer on the tests,
18274,Vendor vault/api,
18275,Update created resources before exiting cleanup,
18276,Exit early when cleanup succeeds,
18277,"Check capabilities, allow creation against  role",Check the capabilities of the Vault token to ensure it is valid and also allow targetting of a role that the token is not from.
18278,Fix incorrect lock usage,
18279,Bump unknown resource to ERR,
18280,Merge pull request #2208 from hashicorp/duplicate-service-name,register service names with duplicate name
18281,Merge pull request #2212 from jasonhancock/nomad_doc_fix,fix a copy/paste error on api.Regions() comment
18282,Merge pull request #2159 from hashicorp/b-consul-config,Fixed merging consul config
18283,Moved functions to helper from structs,
18284,Don't link shared alloc dir into task dir for raw_exec,Fixes running raw_exec tasks when nomad isn't root.
18285,Fix image based drivers having host env vars set,Add detailed tests for GetTaskEnv to avoid this issue happening again! Fixes #2211
18286,fix a copy/paste error on api.Regions() comment,
18287,Add CreatedResources.Remove and use it,
18288,Remove outdated comment,
18289,Updated CreatedResources as images are cleaned,
18290,Remove outdated comment,
18291,Return error from Prestart,
18292,changelog,
18293,Merge pull request #2199 from hashicorp/f-jars,Support setting class_path and class name.
18294,Remove BC note,
18295,Prevent race between alloc runners,Block ar1's periodic syncing which could recreate the state file ar2 was destroying.
18296,Try to get test passing in Travis,
18297,Merge pull request #2192 from hashicorp/f-api-gc,Added the API for GC of allocations and nodes
18298,Ensuring we can register service names with duplicate name but different ports,
18299,Merge pull request #2204 from troyswanson/patch-1,Fix typo in docs
18300,s/acess/access,
18301,Use Image ID instead of Image Name,
18302,Switch to use recoverable errors from Cleanup,TaskRunner handles retrying but Cleanup handles all of CreatedResources.
18303,Support setting class_path and class name.,This PR enhances the java driver to allow setting the class path and class name to run. It also fixes an issue that would make the Java driver attempt to chroot regardless of operating system (this never effected a released version of Nomad).
18304,plain w,
18305,Stop trying to use mount for image based drivers,Fixes #2178 and allows using Docker and other image based drivers even when nomad is run as a non-root user. module tests can be run as a non-root user to ensure this behavior and tests that rely on root or non-root users properly detect their effective user and skip instead of fail.
18306,Add ID to output,
18307,Return errors from cleanup and let TaskRunner retry,
18308,Put the right hostname in /etc/hosts,
18309,Added the API for GC of allocations and nodes,
18310,Merge pull request #2172 from hashicorp/b-executor-log-level,Filter executor log messages
18311,Added executorconfig,
18312,Remove unused code,
18313,Filter executor log messages,
18314,Add local hostname resolution to Vagrantfile,Makes running agents in vagrant without using module work.
18315,Stop being so confusing,
18316,Add Cleanup method to Driver interface,Cleanup can be used for cleaning up resources created by drivers to run a task. Initially the Docker driver is the only user (to remove downloaded images).
18317,Merge pull request #2163 from hashicorp/b-summary,Job Summary: Fix queued accounting and remove in-place state store updates
18318,Changelog,
18319,Merge pull request #2177 from hashicorp/b-blocking-getallocs,GetAllocs uses a blocking query
18320,Random wait,
18321,Review fixes,
18322,Add entry for force_pull #2147,
18323,changelog,
18324,Merge pull request #2147 from novilabs/docker-force-pull,add force_pull to docker driver
18325,Merge pull request #2155 from hashicorp/f-cancel,Cancel blocked evals upon successful one for job
18326,using new ctx instead of getting both params back,
18327,fixing typo in comment,
18328,add force_pull to docker driver,
18329,Merge pull request #2179 from hashicorp/b-panic,Fix nil dereference
18330,Fix nil dereference,
18331,Merge pull request #2174 from hashicorp/b-fix-executor-test,Switch to a less timing dependent test command
18332,Fix missing value in test failure message,
18333,Changelog,
18334,Merge pull request #2173 from hashicorp/b-stats,Don't retrieve Driver Stats if unsupported
18335,GetAllocs uses a blocking query,"This PR makes GetAllocs use a blocking query as well as adding a sanity check to the clients watchAllocation code to ensure it gets the correct allocations. This PR fixes https://github.com/hashicorp/nomad/issues/2119 and https://github.com/hashicorp/nomad/issues/2153. The issue was that the client was talking to two different servers, one to check which allocations to pull and the other to pull those allocations.  However the latter call was not with a blocking query and thus the client would not retreive the allocations it requested. The logging has been improved to make the problem more clear as well."
18336,Switch to a less timing dependent test command,module could produce output very quickly (100s of MBps on my laptop) and therefore could cause log files to roll over. A bash loop with a sleep avoids that issue. The test is slower but should be much more resilient to the massive timing differences between workstations and Travis.
18337,Merge branch 'master' of github.com:hashicorp/nomad,
18338,Add better docs for destination,
18339,Don't retrieve Driver Stats if unsupported,This PR makes us only try to collect stats once if the Driver doesn't support collecting stats. Fixes https://github.com/hashicorp/nomad/issues/1986
18340,Merge pull request #2164 from hashicorp/b-dispatch,Create Task directory structure in the Run method
18341,Merge pull request #2165 from hashicorp/b-driver-events,Send Driver events to servers immediately
18342,Fix adjust test,
18343,Merge pull request #2162 from asvoboda/patch-1,Update network.html.md
18344,Move to Run(),
18345,Changelog,
18346,Create task directory during Prestart(),
18347,Detect newly created allocation's properly,
18348,Store pointer of JobSummary in state store and remove in-place modifications of the object and replace with Copy-Update-Insert operations,
18349,Send Driver events to servers immediately,This PR causes driver events to be sent to the server immediately rather than waiting for Prestart() to finish.
18350,Fix fingerprint tests,
18351,Update network.html.md,Update typo
18352,Merge pull request #2161 from hashicorp/f-cpu-arch,Fixed namespacing for the cpu arch
18353,Fixed namespacing for the cpu arch,
18354,Merge pull request #2132 from hashicorp/f-chrootectomy-4,Move chroot building into TaskRunner
18355,Fix inconsistent task env setting,Consolidate task environment building in GetTaskEnv since it can determine what kind of filesystem isolation is used. This means drivers no longer have to manipulate task environment paths.
18356,Updated docs for /job/allocations endpoint,
18357,Fix executor tests,
18358,Add COMPAT comment,
18359,Driver is now required in test tasks,
18360,Fix tests post rebase,
18361,Add QueuedAllocations to api.Evaluation,
18362,Version bump,
18363,Remove debug logging,
18364,Remove task name prefix from executor logs,
18365,Put a logger in AllocDir/TaskDir,
18366,Add comments to TaskDir,
18367,Fix upgrade path for #2132,"AllocRunner's state dropped the Context struct which needs to be converted to the new AllocDir+TaskDir structs in RestoreState. TaskRunner added a TaskDirBuilt flag, but it's safe to just let that default to module and rebuild all task dirs once on upgrade."
18368,Fail fast on taskdir errors,
18369,Test tasks now require driver name,
18370,Move chroot building into TaskRunner, Refactor AllocDir to have a TaskDir struct per task. Drivers expose filesystem isolation preference Fix lxc mounting of module
18371,Fixed merging consul config,
18372,changelog,
18373,Merge pull request #2128 from hashicorp/f-dispatch,Nomad Constructor Jobs and Dispatch
18374,Merge pull request #2157 from hashicorp/t-client-tests,Fix client tests deadlocking
18375,use helper,
18376,Unlocking if we return before adding a new alloc runner,
18377,Fix TestClient_BlockedAllocations,
18378,Merge pull request #2156 from hashicorp/b-alloc-lock,Fixed how alloc lock is held
18379,Fixed how alloc lock is held,
18380,Fix SaveRestoreState,
18381,Updated changelog,
18382,Merge branch 'f-cancel' of github.com:hashicorp/nomad into f-cancel,
18383,Cancel blocked evals upon successful one for job,This PR causes blocked evaluations to be cancelled if there is a subsequent successful evaluation for the job. This fixes UX problems showing failed placements when there are not any in reality and makes GC possible for these jobs in certain cases. Fixes https://github.com/hashicorp/nomad/issues/2124
18384,Cancel blocked evals upon successful one for job,This PR causes blocked evaluations to be cancelled if there is a subsequent successful evaluation for the job. This fixes UX problems showing failed placements when there are not any in reality and makes GC possible for these jobs in certain cases. Fixes https://github.com/hashicorp/nomad/issues/2124
18385,Merge pull request #2152 from hashicorp/b-fix-dev-shutdown-race,Fix race when shutting down in dev mode
18386,Fix race when shutting down in dev mode,Client.Shutdown holds the allocLock when destroying alloc runners in dev mode. Client.updateAllocStatus can be called during AllocRunner shutdown and calls getAllocRunners which tries to acquire allocLock.RLock. This deadlocks since Client.Shutdown already has the write lock. Switching Client.Shutdown to use getAllocRunners and not hold a lock during AllocRunner shutdown is the solution.
18387,Merge pull request #2151 from hashicorp/d-attr,Fix documentation for interpolating attrs/meta
18388,Fix documentation for interpolating attrs/meta,This PR fixes the website documentation to correctly present the way of specifying constraints on node meta and attributes.
18389,Update commands on website,
18390,vagrant version,
18391,changelog,
18392,Merge pull request #2098 from jorgemarey/f-telemetry-nodename,Allow to set the nodename on telemetry
18393,Merge pull request #2140 from pgporada/master,Add link to CHANGELOG on the Nomad downloads.html page
18394,Update downloads.html.erb,Fixed a nitpick one of the Vault guys had.
18395,Merge pull request #2142 from hashicorp/b-consistent-usage,Fix inconsistencies in usage cli output.
18396,Errant colon in logs usage.,
18397,Fix inconsistencies in usage cli output.,
18398,Takes care request #2 on Nomad GH-2129,
18399,Add option to set nodename instead of hostname on telemetry values,
18400,Merge pull request #2054 from hashicorp/f-prestart,Add Driver.Prestart method
18401,Remove unneeded env building,
18402,Fix tests broken by TaskEnv change,
18403,lxc: Set image local env vars,
18404,Remove unneeded waitClient field,
18405,Added two tests,
18406,Append host env vars on every task env,
18407,Fix formatting of downloading image message,
18408,Use startContainer wrapper,
18409,Fixed a test,
18410,Rename InitializationMessage to DriverMessage,
18411,"Emit ""Downloading image"" event",
18412,Updated changelog and fixed tests,
18413,Merge pull request #2081 from hashicorp/f-gc,Garbage collector for allocations
18414,Updated changelog,
18415,Removing the alloc runner from GC if it is destroyed by the server,
18416,Added comments,
18417,Merge branch 'master' of github.com:hashicorp/nomad,
18418,Changelog,
18419,Merge pull request #2032 from hashicorp/b-allocs,Making the status command return the allocs of currently registered job
18420,Added comments,
18421,Small cleanups,
18422,Merge pull request #1980 from dmexe/network-aliases,Add network_aliases for docker driver
18423,Merge branch 'master' of github.com:hashicorp/nomad,
18424,changelog,
18425,Merge pull request #2130 from hashicorp/b-log-type,Fix Docker Logging Type interpolation
18426,Fix Docker Logging Type interpolation,This PR fixes an issue that made Logging.Type un-interpretable in the docker driver.
18427,Merge pull request #2063 from tmichaud314/fix-docker-driver-auth-interpolation,Fixes docker-driver Auth-config interpolation
18428,Added tests,
18429,missing fix,
18430,Merge pull request #2125 from pgporada/master,Updated docker doc to remove useless word
18431,update eval example,
18432,Fix test,
18433,Fix test and prevent job with payload from being submitted,
18434,ensure file doesn't escape,
18435,Making the gc allocator understand real disk usage,
18436,Require batch,
18437,Client writes payload to disk,
18438,Removed useless word,
18439,Use new combined meta data function in env,
18440,Fix mapstructure tag formatting for lxc driver,
18441,fix tests,
18442,Merge pull request #2122 from hashicorp/b-fix-getting-started,Fix demo vagrant server by making hostname resolve
18443,Remove commented out block from comments,
18444,Scheduler combines meta from job > group > task,
18445,Fix demo vagrant server by making hostname resolve,
18446,JobDiff,
18447,Merge pull request #2121 from justinwalz/jw_alloc_status,show desired status and description for allocation
18448,show desired status and description for allocation,
18449,Use - not _ for lxc enabled build,
18450,Merge pull request #2118 from hashicorp/jbs-alloc-status-text,Help text grammar updates in alloc_status
18451,Help text grammar updates, Grammar change in usage info text Capitalization in stats retrieval error text Typo in outputTaskResources stats comment
18452,Merge pull request #2109 from justinwalz/json_docs_vault,add vault example for JSON api
18453,Children fixes + nomad status outputs summaries,Children object is always initialized instead of lazily. module outputs children summaries and has specialized view for constructor jobs.
18454,add vault example for JSON api,
18455,dispatch help,
18456,Added the stats collector to GC,
18457,Refactored hoststats collector,
18458,GC-ing before we start a new allocation,
18459,Added a garbage collector for allocations,
18460,Rename structs,
18461,Merge pull request #2103 from zanella/patch-1,Added example for the Reserved field
18462,Added example for the Reserved field,https://github.com/zanella/nomad-api/pull/4
18463,summary tests,
18464,changelog,
18465,Release v0.5.2-rc1,
18466,changelog,
18467,Bumping up version,
18468,Merge branch 'master' of github.com:hashicorp/nomad,
18469,Updated changelog,
18470,Merge pull request #2096 from hashicorp/b-addAlloc,Fix race and remove panic
18471,Merge pull request #2097 from hashicorp/b-wait-remote-alloc,cancelling waiting for remote allocation
18472,cancelling waiting for remote allocation if the alloc doesn't need migration,
18473,Fix race and remove panic,
18474,Merge pull request #2095 from hashicorp/jbs-docs-server-members,Docs: remove admonition about server-members command
18475,Merge pull request #2090 from christoe/b-1680-more-resilient-disk-stats,1680: Continue after not being able to stat a mountpoint
18476,Remove admonition about server-members command,
18477,1680: Continue after not being able to stat a mountpoint,
18478,bump dev version,
18479,Update version,
18480,Release v0.5.1,
18481,update hc-releases,
18482,version bump,
18483,Don't modify jobs status inplace,
18484,Merge pull request #2087 from hashicorp/rkt-dns-docs,"Document rkt --dns={host,none}"
18485,"Document rkt --dns={host,none}",
18486,Merge pull request #2075 from samber/patch-1,doc(interpolation): More explicit
18487,Merge pull request #2083 from ksatirli/patch-1,bumps Nomad from 0.4.1 to 0.5.0
18488,bumps Nomad from 0.4.1 to 0.5.0,Noticed that the module still references module of Nomad. Verified this still works by testing it with all steps listed in the link guide.
18489,Release v0.5.1-rc2,
18490,Merge branch 'master' of github.com:hashicorp/nomad,
18491,Updating the version,
18492,Merge pull request #2079 from hashicorp/b-logs,Fix high CPU and FD usage on module
18493,changelog,
18494,comment,
18495,fix high cpu usage + faster encoding,
18496,Benchmark,
18497,Fix FD leak,
18498,doc(interpolation): More explicit,
18499,Merge pull request #2073 from hashicorp/sethvargo/meta,Fix broken meta links
18500,Fix broken meta links,
18501,Client meta is a map[string]string,
18502,Merge pull request #2071 from florianb/patch-2,Fix subsequent IDs
18503,Fix subsequent IDs,
18504,Handle the delete case,
18505,Children summary,
18506,Updated version of Go,
18507,Fixes docker-driver Auth-config interpolation,
18508,Release v0.5.1-rc1,
18509,Add structs,
18510,Updated version,
18511,Updated changelog,
18512,Merge pull request #2061 from hashicorp/b-alloc-dir-perms,Fixed permissions of migrated allocation directories
18513,Setting the appropriate file permissions which un-archiving compressed alloc dir,
18514,Dispatch command,
18515,Merge pull request #2017 from hashicorp/b-sticky,Not moving alloc data when sticky is turned off
18516,Not moving alloc data when sticky is turned off,
18517,Merge pull request #2009 from hashicorp/f-use-embedded-consul,Add a chaos test for consul syncer and fix some races it found
18518,start of the cli command,
18519,Add SyncNow test,
18520,Dispatch tests,
18521,Don't require serf advertise address for clients,
18522,Add Driver.Prestart method,"The Driver.Prestart method currently does very little but lays the foundation for where lifecycle plugins can interleave execution after task environment setup but before the task starts. Currently Prestart does two things:  Any driver specific task environment building Download Docker images  This change also attaches a TaskEvent emitter to Drivers, so they can emit events during task initialization."
18523,agent tests,
18524,Remove paused,
18525,Fix string formatting,
18526,changelog,
18527,Merge pull request #2051 from hashicorp/b-vault-alloc,Disallow stale queries when deriving Vault tokens
18528,Disallow stale queries when deriving Vault tokens,This PR disallows stale queries when deriving a Vault token. Allowing stale queries could result in the allocation not existing on the server that is servicing the request.
18529,Merge pull request #2046 from hashicorp/f-start-recoverable,Make errors starting a container recoverable
18530,Make errors starting a container recoverable,This PR makes errors starting a container recoverable and tries to optimistically handle 500 errors.
18531,Merge pull request #2045 from hashicorp/b-docker-create-container,Returning a container if it exists instead of creating a new one
18532,Returning a container if it exists instead of creating a new one,
18533,Bump timeout on test,
18534,Merge branch 'master' of github.com:hashicorp/nomad,
18535,add debug panic,
18536,Merge pull request #2044 from julienlevasseur/patch-1,Correct a grammar typo
18537,add debugging,
18538,Correct a grammar typo,"a ""the a"" was still on text, certainly after an hesitation from author. Keep the ""a"" form, as it's more general."
18539,Merge pull request #2040 from hashicorp/b-block-allocs,Ensuring allocs are not added multiple times to blocking queue
18540,Ensuring allocs are not added multiple times to blocking queue,
18541,Merge pull request #2037 from hashicorp/b-docker-list-containers,Fixes an issue with purging containers with the same name Nomad is tr…
18542,Fixes an issue with purging containers with the same name Nomad is trying to start,
18543,Decompress,
18544,Mention client level user configs,
18545,Fix module docs,
18546,Add changelog entry for #2028,
18547,rkt: Support host and none dns options,Fixes #2025
18548,Add changelog entry for #2027,
18549,Fix rkt volumes,I forgot to validate the volumes field!
18550,changelog,
18551,Merge pull request #2007 from hashicorp/b-stream-framer-panic,Fixes race on StreamFramer Destroy
18552,changelog,
18553,Merge pull request #2030 from gliptak/missingname1,Improve parsing of job struct
18554,Merge pull request #2029 from gliptak/dockerauth1,Log when lookup in docker.auth.config fails
18555,changelog,
18556,Merge pull request #2033 from hashicorp/b-docker-container-exists,Make container exist errors non-retriable
18557,Merge pull request #2036 from hashicorp/b-fix-host-port-joining,Use net.JoinHostPort instead of fmt.Sprintf
18558,Add changelog entry for #2036,
18559,Use net.JoinHostPort instead of fmt.Sprintf,Using fmt.Sprintf breaks IPv6 addresses.
18560,Snappy + Dispatch name change,Change the generated name to timestamp + 8 characters of UUID Add Snappy compression to the input
18561,Make container exist errors non-retriable,This change makes it so that the task runner does not retry container exists errors and also a sleep is added on the local retry.
18562,dispatch beginning,
18563,Making the status command return the allocs of currently registered job,
18564,Improve parsing of job struct,
18565,Parse,
18566,Log when lookup in docker.auth.config fails,
18567,Dispatch structs,
18568,Merge pull request #2020 from ranjib/template_args_lxc,(bug)Fix error message. Pass on template args
18569,Fix error message. Pass on template args,
18570,version bump,
18571,Merge pull request #2010 from hashicorp/d-typo,Fix typo in telemetry documentation.
18572,Fix typo in telemetry documentation.,Fixes #2008
18573,Remove lie from comment,
18574,Fix incorrect lock usage around consul maps,
18575,Fix SyncNow,
18576,New chaos test to exercise consul syncer,
18577,Fixes race on StreamFramer Destroy,This PR: * Fixes a race in which StreamFramer could panic while closing. * Simplifies the logic of the StreamFramer * Removes a potentially leaked goroutine
18578,Fix duplicate meta description,
18579,Merge pull request #2005 from hashicorp/sethvargo/docs_fix,Make downloads great again
18580,Fix downloads,
18581,Revert custom HTML,
18582,Merge pull request #2004 from hashicorp/sethvargo/docs_fix,Update encryption docs
18583,Align =,
18584,Use list instead of table,
18585,Use shell instead of sh,
18586,Organize examples into section,
18587,Fix JSON spacing,
18588,Move link to bottom,
18589,Update website for 0.5.0 and special lxc download,
18590,Release Nomad 0.5.0,
18591,Merge pull request #1997 from hashicorp/f-tls-docs,Add docs for generating example certificates
18592,Merge pull request #2000 from hashicorp/d-vault-example,Better examples for Vault config for both servers and clients
18593,Better examples,
18594,Fix review comments,
18595,Merge pull request #1999 from hashicorp/d-service-https,Fix example for service using HTTPS check
18596,Fix example,
18597,Add network_aliases for docker driver,
18598,Don't forget localhost!,
18599,Add docs for generating example certificates,
18600,Merge pull request #1993 from hashicorp/b-upgrade-path,Check for Ephemeral Disk being nil
18601,Merge pull request #1996 from hashicorp/t-failing-tests,Fix some failing tests
18602,respond to comment,
18603,Merge pull request #1994 from hashicorp/b-network-speed,Updated AWS speeds and network_speed now overrides
18604,Remove old TODOs,
18605,Fix TestRktDriver_PortsMapping and TestAgent_LoadKeyrings,
18606,Fix TestRetryJoin,
18607,Backwards compatibility notice,
18608,Updated AWS speeds and network_speed now overrides,This PR:  Makes AWS network speeds more granular Makes module an override and not a default Adds a default of 1000 MBits if no network link speed is detected.  Fixes #1985
18609,Switch syncer tests to use embedded consul,
18610,Check for Ephemeral Disk being nil,
18611,Merge pull request #1975 from hashicorp/b-fix-tlsutil-tests,Fix tlsutil tests
18612,Merge pull request #1991 from hashicorp/b-fix-agent-tests,Advertise a non-loopback ip in tests
18613,Advertise a non-loopback ip in tests,
18614,Merge pull request #1989 from bastiaanb/b-doc-template,s/Vault token/rendered template/
18615,s/Vault token/rendered template/,
18616,Merge pull request #1984 from lekum/patch-1,Possible errata
18617,Possible errata,"For what I understand, regions are not meant to be nested (?)"
18618,Fix indent,
18619,Removing QueryMeta from ServerMembersResponse,
18620,Merge branch 'master' of github.com:hashicorp/nomad,
18621,Updated http response for server members,
18622,Merge branch 'master' of github.com:hashicorp/nomad,
18623,changelog,
18624,Merge pull request #1977 from hashicorp/b-volume-mount,Change relative path from joining against the alloc dir to the task's directory.
18625,Remove todo,
18626,Merge pull request #1978 from hashicorp/b-consul-renew,Always disable renew_token for CT config
18627,Always disable renew_token for CT config,"This PR makes Nomad always disable token renewal even if Vault is disabled. The problem was when there was a vault token in the environment variable and Nomad/Vault integration was disabled, the template runner would still try to renew the token."
18628,Changes the relative path from joining against the alloc dir to the,"task's directory. This PR changes the behavior when given a relative host path when mounting docker containers. Prior to this, the behavior was to mount by joining against the alloc/ directory. This PR changes it to be against the task/ directory."
18629,Fix tlsutil tests,
18630,Move parsing of vault token above validation such that it works in dev mode,
18631,Release v0.5.0-rc2,
18632,Release v0.5.0-rc2,
18633,Merge pull request #1972 from hashicorp/b-update-advertise-docs,Update address docs to match behavior in #1955
18634,Bumped up version,
18635,changelog,
18636,Merge pull request #1974 from hashicorp/b-spaces,Do not validate the command does not contain spaces.
18637,Do not validate the command does not contain spaces.,"This PR removes validation that the command string does not contain spaces. This can cause issues where the path contains a folder that includes a space (""C:\Program Files\Python35\python.exe""). Fixes #1737"
18638,Merge pull request #1973 from maier/master,vendor circonus
18639,revert to previous circonusllhist,
18640,Update address docs to match behavior in #1955,
18641,Merge pull request #1955 from hashicorp/b-fix-default-advertise,Choose safer default advertise address
18642,Fix comment,
18643,get tlsutil tests to compile - need to regenerate the certificates,
18644,Merge pull request #1969 from maier/master,Vendor circonus
18645,Merge pull request #1970 from hashicorp/b-fix-rkt-docs,Remove warning since #1862 added ports support
18646,Remove warning since #1862 added ports support,
18647,Fix typo in test,
18648,Update Circonus integration expose Check Display Name and Check Tags,configuration options.
18649,Update module,Update module Update module Update module
18650,Add unit test for missing port helper func,
18651,Addresses are just addresses - no ports,Store address+port in an unexported field for ease-of-use
18652,changelog,
18653,Merge pull request #1949 from carlpett/blacklist-fingerprints-and-drivers,Support blacklisting fingerprinters
18654,Address comments from PR,
18655,Merge pull request #1967 from hashicorp/ephemeral_migrate,Fixing the upgrade path for ephemeral disk
18656,Added a warning message if disk attribute is non zero,
18657,Enable dev mode to allow using localhost in tests,
18658,Fix test that fails now that advertise can't be localhost,
18659,Restore sync/atomic use for consistency,
18660,Normalize configs for agent tests,
18661,Merge branch 'master' of github.com:hashicorp/nomad,
18662,vendor circonus,
18663,Fix int pointer formatting and server config test,
18664,Fixed a test,
18665,Move config normalization into config.go to ease testing,
18666,Updated Changelog,
18667,changelog,
18668,Merge pull request #1952 from hashicorp/b-reserved-ports-aws,Run environmental fingerprinters after host fingerprinters and AWS overrides network
18669,Merge pull request #1965 from hashicorp/b-docker-interpolate,Interpolate all docker driver configs that are strings
18670,Merge pull request #1966 from hashicorp/b-service-interpolate,Interpolate all service/check fields
18671,Match old error messages,
18672,Fixing the upgrade path for ephemeral disk,
18673,Rkt env var,
18674,Interpolate all check related variables,
18675,remove debug,
18676,Interpolate everything that is a string,
18677,Handle missing ports in addresses,
18678,Refactor getAdvertise into a func,
18679,Merge pull request #1963 from hashicorp/fix-test,Fixed a test
18680,Fixed a test,
18681,Merge pull request #1960 from hashicorp/fix-perm-issues,Fixed permission issues on client
18682,Fixed comments,
18683,Merge pull request #1962 from hashicorp/b-env-vars,Fix env vars relating to secretdir
18684,Fix env vars relating to secretdir,
18685,Failure to resolve advertise address isn't fatal,
18686,Choose safer default advertise address, -dev mode defaults bind & advertise to localhost Normal mode defaults bind to 0.0.0.0 & advertise to the resolved   hostname. If the hostname resolves to localhost it will refuse to   start and advertise must be manually set.
18687,Merge pull request #1961 from hashicorp/b-vault,Fix marking unrecoverable errors as recoverable when deriving Vault token
18688,Fix error checking,
18689,Fixed permission issues on client,
18690,Add unrecoverable test,
18691,Merge pull request #1957 from hashicorp/docs-vault-example,~ docs: Vault Example Configuration fixes
18692,Merge pull request #1954 from hashicorp/b-secret-id,Add compatibility code for secret ID while upgrading cluster in both …
18693,Add blacklisting of drivers,
18694,Add blacklisting of fingerprinters,
18695,~ docs: Vault Example Configuration fixes," add module to follow redirect when downloading example config files (file is linked to root, but gets redirected to www). fix role name to match recommendation"
18696,Add compatibility code for secret ID while upgrading cluster in both server/client mode on single nodes,
18697,Merge pull request #1947 from hashicorp/f-server-members-rpc,Add an RPC endpoint for server members
18698,Updated changelog,
18699,Merge pull request #1953 from bastiaanb/b-alloc-runner-nil-pointer,use snap.Alloc.TaskStates only after confirming snap.Alloc is not nil
18700,use snap.Alloc.TaskStates only after confirming snap.Alloc is not nil,
18701,Merge pull request #1921 from hashicorp/f-abs-templ,Allow absolute paths for template sources
18702,Run environmental fingerprinters after host fingerprinters and do an override,
18703,Changing the API to use the new servermember datastructure,
18704,Add an RPC endpoint for server members,
18705,Merge pull request #1931 from hashicorp/rename-vault-config,Rename vault config
18706,Fixed docs,
18707,Merge pull request #1941 from hashicorp/b-complete-transistion,"Task state ""dead"" is terminal"
18708,Test fix,
18709,Merge pull request #1938 from hashicorp/b-docker-reattach,Fix Docker container creation and task runner updating
18710,More precise marking of dead,
18711,Merge pull request #1940 from hashicorp/f-docker-userns-support,Add userns_mode docker config option
18712,Merge pull request #1933 from hashicorp/disable-check-tls,Disable http checks if TLS is enabled
18713,"Task state ""dead"" is terminal",
18714,Add changelog entry for userns_mode,
18715,Add userns_mode docker config option,Fixes #1904
18716,Merge pull request #1937 from hashicorp/remove-timeout,Remove timeout
18717,Merge pull request #1939 from hashicorp/d-stop,Fixes to stop command
18718,Fixes to stop command,
18719,Fix tests,
18720,Remove timeout,
18721,Move the wait result to bottom of methods,
18722,Unique task,
18723,Create container much more robust,
18724,Removed disk from resources docs,
18725,Update vendor for circonus-gometrics to fix a panic.,"Submitted by: vendor, @maier"
18726,Merge pull request #1934 from cabillman/encryption-docs,Escape hostname in agent encryption docs
18727,Use tt instead,
18728,Escape hostname in agent encryption docs,
18729,Disable http checks if TLS is enabled,
18730,Fixed comment,
18731,Making AllowUnauthenticated true by default,
18732,Changed docs,
18733,Renaming TLS related vault config,
18734,Merge pull request #1920 from hashicorp/sethvargo/agent_divorce,Separate agent configuration into its own pages
18735,Remove debug rec,
18736,Address feedback,
18737,Separate agent configuration into its own pages,"I apologize in advance for the rather long PR, but unfortunately there is not an easy way to break this up into smaller chunks. This separates the agent configuration into smaller, more consumable pieces just like the job specification."
18738,Merge pull request #1923 from hashicorp/sethvargo/vault_up,Add Vault stanza everywhere
18739,Address feedback,
18740,Add vault stanza everywhere,
18741,Merge pull request #1922 from hashicorp/f-def-disk,Adding a default ephemeral disk if it's not added by default
18742,Adding a default ephemeral disk if it's not added by default,
18743,Allow absolute paths for template sources,
18744,More recoverable errors,
18745,Merge pull request #1917 from hashicorp/sethvargo/edisk_groups,Document ephemeral_disk under group
18746,Document ephemeral_disk under group,Fixes GH-1915
18747,LXC website,
18748,webfix,
18749,Release v0.5.0-rc1,
18750,Merge pull request #1911 from hashicorp/docs-encryption,Added docs for encryption
18751,Respond to comments,
18752,Version bump,
18753,Add #1754 / #1913 to changelog,
18754,Merge pull request #1913 from hashicorp/b-json-crasher-1754,Update hcl to fix json parsing panic
18755,Update hcl to fix json parsing panic,
18756,Merge pull request #1912 from hashicorp/b-validation,"Change the 0 timeout, interval validation to be more user friendly"
18757,can not -> cannot,
18758,"Change the 0 timeout, interval validation to be more user friendly",
18759,Remove incorrectly committed line and wrong comment,
18760,Added docs for encryption,
18761,Merge branch 'master' of github.com:hashicorp/nomad,
18762,enabled,
18763,Drop in a keyword that an option impacts client-specific metrics only.,
18764,Forgot to flip a bit,
18765,Merge pull request #1909 from hashicorp/region-wrapper,Making Nomad TLS configs region aware
18766,copy,
18767,Merge pull request #1910 from hashicorp/f-vendor-circonus,F vendor circonus
18768,Remove ServerName because we verify based on region,
18769,Merge branch 'master' of github.com:hashicorp/nomad,
18770,Resolve,
18771,Chase required dependency: update module,
18772,Update module.,
18773,Merge pull request #1908 from hashicorp/f-vault-docs,Vault docs
18774,Use nomad-server for retrieving a token,
18775,Read from env,
18776,docs,
18777,Making Nomad TLS configs region aware,
18778,Merge pull request #1907 from hashicorp/f-lxc-docs,Add LXC docs and enable by default for lxc builds
18779,Merge pull request #1905 from hashicorp/sethvargo/faildocs,"Clarify restart mode ""fail"""
18780,Agent,
18781,Update vault_test to use minimal set of policies + start of Vault documentation,
18782,Add LXC docs and enable by default for lxc builds,
18783,Merge pull request #1906 from jussi-kalliokoski/patch-1,Fixed a grammar mistake in template docs.
18784,Fixed a grammar mistake in template docs.,
18785,"Clarify restart mode ""fail""",Fixes GH-1885
18786,Merge pull request #1901 from hashicorp/sethvargo/more_docs,Update init command and add ephemeral_disk docs
18787,Address feedback,
18788,Merge branch 'master' of github.com:hashicorp/nomad,
18789,changelog,
18790,Merge branch 'master' of github.com:hashicorp/nomad,
18791,Pinning go version to 1.7,
18792,Merge pull request #1902 from hashicorp/b-advertise,Allow advertise to not specify port
18793,Merge pull request #1903 from hashicorp/tls-docs,Added conf options for TLS
18794,Added conf options for TLS,
18795,Check that advertise without ports works in test,
18796,Merge branch 'master' of github.com:hashicorp/nomad,
18797,Added the migrate flag to init,
18798,ordering,
18799,Sticky,
18800,Changelog,
18801,Allow advertise to not specify port,
18802,Add ephemeral_disk docs,
18803,Update docs on the sample command,
18804,Merge pull request #1895 from hashicorp/sethvargo/more_docs,Add more documentation
18805,Specify restart policy is not the same as restart behavior,
18806,Fix long lines,
18807,Add multiline string template example,
18808,Fix multiline,
18809,Fix example,
18810,Capital HTTP,
18811,Wrap line,
18812,Add port to service,
18813,To discus and discuss we will begin discussion,
18814,Update service description,
18815,Remove hard vault_token and change task name,
18816,Consuming Secrets,
18817,Discourage setting vault_token directly in job file,
18818,Clarify templates must pre-exist and cannot come from the container,
18819,Fix job example,
18820,Fix typo,
18821,Add service SEO description,
18822,Add vault example,
18823,Add template example,
18824,Alphabetize services,
18825,Update service example in init command,
18826,Give service its own configuration,
18827,Move resources alphabetical,
18828,Update resources example in init command,
18829,Move logs configuration up in init command,
18830,Update logs example in init,
18831,Update artifact example in init command,
18832,Add vault example to init command,
18833,Add template example to init command,
18834,Remove duplicate sentence,
18835,Be consistent,
18836,Merge pull request #1889 from hashicorp/f-migrate-snapshot-tls,Making the client use tls if the node from which migration has to be …
18837,Merge pull request #1900 from hashicorp/b-artifact-template,Download artifacts before templates
18838,Download artifacts before templates,
18839,Changelog,
18840,Merge pull request #1891 from hashicorp/f-driver-start-recoverable,Driver start recoverable
18841,changelog,
18842,Merge pull request #1892 from hashicorp/f-eval-blocking,Implement blocking queries for /v1/job/evaluations
18843,Making the client use tls if the node from which migration has to be made has enabled tls,
18844,Implement blocking queries for /v1/job/evaluations,
18845,Move helper into config (faster loading),
18846,Ensure latest middleman,
18847,Update security text,
18848,Add docker test,
18849,Fix passing of recoverable error from docker pull,
18850,Merge pull request #1887 from hashicorp/b-fixes,Fixes to Consul-Template when file exists + other small stuff
18851,Merge pull request #1888 from hashicorp/b-folder-perms,Change folder permission event when not root
18852,changelog,
18853,Change folder permission event when not root,
18854,Remove thinking,
18855,Consul-template fixes + PreviousAlloc in api,
18856,vendor CT,
18857,Swap log line classifiers to be consistent,
18858,Merge pull request #1886 from hashicorp/lock-logger,Making the executor lock the logger
18859,Wrap source line,
18860,Making the executor lock the logger,
18861,Merge pull request #1883 from hashicorp/sethvargo/docs,Revamp job specification documentation to be more modular and composable
18862,Address feedback,
18863,jobfile -> job file,
18864,Remove orphan list,
18865,Fix broken links,
18866,Use a partial instead,
18867,Revamp job specification documentation to be more modular and composable,
18868,Use new helpers,
18869,Capital C,
18870,Add helpers for generating titles and stuff,
18871,Upgrade docs generator,
18872,Merge pull request #1884 from hashicorp/sethvargo/build_args,Simplify xc script
18873,Simplify xc script,"This is the same set of builds that we currently publish, but it groups them into less magic."
18874,Merge pull request #1879 from hashicorp/b-remote-alloc,Not blocking for remote alloc if the alloc is not sticky
18875,Adding the alloc if we can't find the TG,
18876,Don't delete docker images in test,
18877,Not blocking for remote alloc if the alloc is not sticky,
18878,Fix flaky test,
18879,changelog,
18880,changelog,
18881,Merge pull request #1872 from hashicorp/f-dequeue,Add scheduler version enforcement
18882,Larger delay on mismatch,
18883,Merge pull request #1877 from hashicorp/b-expand-docker-vols,Expand env vars in docker volume paths
18884,Merge pull request #1866 from hashicorp/f-bind-addr,Use bind address for consul checks
18885,Add to valid configs fields,
18886,Merge pull request #1862 from hashicorp/f-rkt-portmap,driver.rkt: support network configuration [waiting]
18887,Expand env vars in docker volume paths,Fixes #1876
18888,Small cleanups,
18889,Never return 0.0.0.0 as a non-bind address,
18890,Add more address selector tests,
18891,Remove old address advertise config code,
18892,Add address selector methods to the agent,
18893,Use bind address for consul healtchecks in nomad client too,
18894,Use bind address for consul service checks,
18895,changelog,
18896,Merge pull request #1806 from hashicorp/f-docker4mac-fixes,A couple fixes to make Docker For Mac work
18897,Merge branch 'master' of github.com:hashicorp/nomad,
18898,Fix inplace update for pre secret node,
18899,Adjust timings to try to get test passing in Travis,
18900,Merge pull request #1874 from hashicorp/fix-nomad-checks,Making the nomad agent checks tcp
18901,Making the nomad agent checks tcp,
18902,Fixed TestMeta_FlagSet test,
18903,Merge pull request #1873 from hashicorp/f-lxc-alt-build,Put lxc support behind a flag
18904,Move tags into variable,Bash quoting is hard
18905,Merge pull request #1871 from hashicorp/b-tls-tests,Fixed a bunch of TLS related failures
18906,Fixed alloc dir move tests,
18907,Fix Validate_UserEnforcement,
18908,Put lxc support behind a flag,Since lxc support requires linking to a C lib at compile and runtime I'm putting it behind a build flag to avoid forcing all nomad users to install liblxc (lxc-dev for development).
18909,Add scheduler version enforcement,
18910,Fixed a bunch of TLS related failures,
18911,Added datadog_address to valid keys,
18912,Merge pull request #1864 from hashicorp/b-allow-empty-resource,Allow omitting resource block entirely
18913,Document missing task resources handling,
18914,Merge pull request #1865 from hashicorp/b-cli-client-tls,Making the cli use TLS if the client has enabled TLS
18915,Making the cli use TLS if the client has enabled TLS,
18916,Allow omitting resource block entirely,
18917,Fix LXC driver interface impls,
18918,Fix panic,
18919,Use rkt port example that Just Works,
18920,Fix tests for rkt port map,
18921,Merge branch 'master' of github.com:hashicorp/nomad,
18922,"Added tls, gossip encryption, LXC support to Changelog",
18923,Merge pull request #1853 from hashicorp/f-rpc-http-tls,TLS support for http and RPC
18924,Moved tlsutil into helpers,
18925,Moving the certs into tlsutil package,
18926,Moving the TLSConfig to structs,
18927,driver.rkt: add documentation about Networking,
18928,driver.rkt: add rkt drriver port mapping test,
18929,driver.rkt: support port mapping with net and port options,
18930,Merge pull request #1699 from hashicorp/f-lxc-driver,LXC Support
18931,Added lxc related dependencies,
18932,Merge pull request #1854 from hashicorp/f-vault-role-validate,Validate the Vault role being used
18933,check period,
18934,changelog,
18935,Merge pull request #1852 from hashicorp/b-service-validation,Interpolate and then validate services
18936,Interpolate and then validate services,
18937,Merge pull request #1850 from hashicorp/f-fs-secret,Disallow fs to read secret directory
18938,Changelog,
18939,Merge pull request #1844 from hashicorp/b-alloc-stats,Don't query for stats if the node is down and handle the errors
18940,address feedback,
18941,Merge pull request #1839 from hashicorp/f-signal-constraints,Signal creates an auto-constraints
18942,Upper case signals,
18943,Add CaPath to Vault config in consul-template,
18944,Enabling TLS on cli,
18945,Fingerprint rkt volume support and make periodic,Fix rkt docs and custom volume mounting
18946,Document relative vs absolute volume paths,
18947,Allow mounting alloc-dir-relative paths in docker,
18948,Enable rkt and docker volume mounting by default,
18949,Make volume name unique,
18950,Bump minimum required rkt version; update docs,Make section names match between docker and rkt
18951,Update rkt script and test rkt in travis,
18952,Fix docker reference in rkt test,
18953,Add arbitrary volume support to rkt,
18954,Fix standard mounts in rkt and tests,
18955,Vault flags,
18956,Fix merge,
18957,Validate the Vault role being used,
18958,Updated the spec definition for tls config,
18959,Merge pull request #1848 from hashicorp/f-vault-error,Thread through whether DeriveToken error is recoverable or not
18960,Remove default,
18961,Changed the way TLS config is parsed,
18962,Merge pull request #1840 from hashicorp/f-kill-fail,Change how we mark tasks as failed and allow consul-template to fail tasks
18963,Disallow fs to read secret directory,
18964,changelog,
18965,Merge pull request #1841 from hashicorp/f-node-meta,Output Node meta in verbose mode
18966,Merge pull request #1842 from hashicorp/f-version-and-id,Print the version and client node ID
18967,Merge pull request #1843 from hashicorp/d-initial-status,document initial status
18968,Merge pull request #1847 from hashicorp/sethvargo/container,Move to container-based build process
18969,Implemented TLS support for http and rpc,
18970,Merge pull request #1845 from hashicorp/f-remove-disk-usage-acct,Remove disk usage enforcement
18971,Fix signal test for docker,
18972,Small fixes,
18973,Thread through whether DeriveToken error is recoverable or not,
18974,Move to container-based build process,
18975,Fix comment form,
18976,Remove disk usage enforcement,"Many thanks to @iverberk for the original PR (#1609), but we ended up not wanting to ship this implementation with 0.5. We'll come back to it after 0.5 and hopefully find a way to leverage filesystem accounting and quotas, so we can skip the expensive polling."
18977,Don't query for node-status if the node is down and handle the errors,
18978,document initial status,
18979,Print the version and client node ID,
18980,Output Node meta in verbose mode,
18981,Change how we mark tasks as failed and allow consul-template to fail tasks,
18982,Add implicit signal constraint and validate that a driver can handle the signal. Also fixes a bug with plan and implicit constraints by adding them to the job being planned,
18983,Forgot to mention #1668 in the changelog,
18984,Merge pull request #1820 from leecalcote/patch-1,Update kubernetes.html.md
18985,Capitalized Docker and Rkt. Corrected typo.,
18986,Advertise signalling abilities,
18987,Add set contains,
18988,Ensuring that ephemeral disk is present before deciding if we should migrate (#1827),
18989,Documenting the port attribute of the check configuration block (#1837),
18990,Merge pull request #1830 from hashicorp/b-docker-local-dir,Mount the local directory into the Docker container
18991,changelog,
18992,Actually mount the local directory,
18993,Merge pull request #1828 from hashicorp/f-vault-options,Vault token renewal errors handled by client
18994,Feedback,
18995,tests,
18996,Comments,
18997,Tests,
18998,Large refactor of task runner and Vault token rehandling,
18999,Struct/api/parsing,
19000,Merge pull request #1801 from hashicorp/f-signals,Consul-template signal change mode
19001,comment,
19002,changelog,
19003,Merge pull request #1816 from jippi/add-datadog-telemetry,Add datadog telemetry
19004,Enable serf encryption (#1791),  Added the keygen command   Added support for gossip encryption   Changed the URL for keyring management   Fixed the cli   Added some tests   Added tests for keyring operations   Added a test for removal of keys   Added some docs   Fixed some docs   Added general options 
19005,Update kubernetes.html.md,Included Kubernetes contributors and rkt compatibility.
19006,document new key,
19007,initial work on datadog telemetry,
19008,Disable lxc by default,
19009,Cleanup comments/whitespace,
19010,Mount secret dir,
19011,throwing an error if stats line can't be converted to k/v pair,
19012,Bind mounting alloc dir into container,
19013,Setting the network type,
19014,Adding cpu resource limits,
19015,Adding lxc dependencies in Vagrant,
19016,Adding lxc-dev,
19017,Install liblxc1 in travisw,
19018,Implemented an LXC Driver,
19019,Add caveat about Docker For Mac in the docs,
19020,Make EvalSymlink errors more verbose,
19021,Disable the syslog logging system on Docker For Mac,"The syslog logging system depends on the ability for a unix socket to be accessed by the docker daemon in the $TMPDIR of the host. This doesn't work on Docker For Mac because the docker daemon is running inside a VM, and while /tmp is accessible, the filesystem used to share them doesn't support unix socket files, and thus it doesn't work."
19022,Resolve alloc/state directories to make Docker For Mac happy," In -dev mode, module is used for the alloc and state directories. module uses module, which os OS X contains a per user directory which is under module. module is actually a symlink to module Docker For Mac validates the directories that are passed to bind and on OS X. That whitelist contains module, but not module. It does not expand the path, and so any paths in module fail the whitelist check.  And thusly, by expanding the alloc/state directories the value passed for binding does contain module and Docker For Mac is happy."
19023,Merge pull request #1807 from hashicorp/f-executor-ctx,Send Executor Ctx separately from Launch commands
19024,add plugin kill,
19025,Send Executor Ctx separately,
19026,Fix spacing on API pages,
19027,Separate job update strategies into different pages,
19028,Merge pull request #1803 from hashicorp/b-vault-parse,Fix Vault Config parsing of booleans
19029,Fix zz,
19030,Merge pull request #1804 from hashicorp/f-job-env-var,Add NOMAD_JOB_NAME to task environment
19031,Merge pull request #1805 from barnardb/documentation-edits,Documentation edits
19032,Tests,
19033,Minor documentation edits for grammar and clarity,These are things I noticed as I read through the documentation. There are a couple of minor substantive corrections as well.
19034,"Replace ""the the"" with ""the"" in documentation and comments",
19035,Add NOMAD_JOB_NAME docs,
19036,Add NOMAD_JOB_NAME to environment,
19037,Changelog,
19038,Merge pull request #1802 from hashicorp/b-ignore-sigpipe,Skip SIGPIPE
19039,Fix Vault parsing of booleans,
19040,Small spell fix,
19041,Ensure templates have different destinations,
19042,Skip SIGPIPE,
19043,Task runner sends signals,
19044,Executor + Java/Raw Exec/Exec,
19045,Rkt,
19046,Docker + Qemu,
19047,Merge pull request #1797 from hashicorp/b-fix-docker-volume-docs,Fix docker docs; add volumes/logging to changelog
19048,Fix titles,
19049,Remove old refs,
19050,Do not red code table and alerts,
19051,Fix fonts and arrangement,
19052,Update operating a job to tell a cohesive story,
19053,Add more examples and links to installation instructions,
19054,Remove armon-specific stuff,
19055,Separate cluster formation into separate documentation pages,
19056,Move to released gem,
19057,Fix ticks,
19058,Add docker volume example,
19059,Add example docker load config,
19060,Merge pull request #1796 from hashicorp/f-task-runner,Task runner integrates with TaskTemplateManager
19061,Fix docker docs; add volumes/logging to changelog,
19062,Merge pull request #1767 from hashicorp/f-docker-volumes-logging,Support Docker Volumes and Logging
19063,Add comment and fix log line code style,
19064,Remove VolumesFrom feature,Since containers are named with alloc ids it's difficult to use safely. Not to mention task scheduling ordering issues could break it as well.
19065,Comments,
19066,Tests,
19067,Fix handling of restart in TaskEvents,
19068,Start of integration,
19069,Merge pull request #1783 from hashicorp/f-consul-template,Consul template manager
19070,Make tests channel based,
19071,Fix diff test,
19072,Bump Vault/Consul version,
19073,more vendoring,
19074,Merge pull request #1786 from hashicorp/b-fs-enforce,Do not allow path to escape the alloc dir for the FS commands
19075,Update syntax,
19076,Merge pull request #1793 from jippi/patch-1,add nomad-ui to community page
19077,Update community.html.erb,
19078,add nomad-ui to community page,I tried to copy-paste for how consul have done this :)
19079,Merge pull request #1787 from hashicorp/sethvargo/docs,Fix formatting on jobspec pages
19080,Merge pull request #1788 from hashicorp/sethvargo/syntax,Add syntax highlighting
19081,Add comments to config key constants,
19082,Add syntax highlighting,
19083,Update to mmhc which supports hcl syntax,
19084,Fix formatting,
19085,Only launch syslog server if container uses syslog,
19086,Put docker volume support behind conf flag,Also add tests and fix bug with logging driver configuration.
19087,Fixed a bug when giving in another logging driver than syslog.,"Before this commit, if the Logging config did not contain a logging option ""syslog-address"", it would definitely insert this option. If then, you decide to take another logdriver than syslog, docker would fail because it received a wrong log option for the selected driver. Now, nomad will only insert the syslog address in a hard way if there are no logging options at all - this way it keeps the default nomad settings."
19088,"Added support to mount host folders into container. For example if you don't want to bake certificates into the container, you can mount them into the directory directly.","Furthermore, I added support for volumes-from. Currently, there is no support to move the data from one container to another, hence: If a container spawns on another host, it is very likely, that the data will not be found."
19089,Added logging options support for docker driver,
19090,Do not allow path to escape the alloc dir for the FS commands,
19091,Restore lost chan inits,
19092,Merge pull request #1785 from hashicorp/sethvargo/docs,Fix formatting and add more examples to driver docs
19093,Fix formatting and add more examples to driver docs,
19094,Merge pull request #1784 from hashicorp/sethvargo/docs,Add more examples and clarify interpreted variables docs
19095,Remove raw-exec example,
19096,Remove exec example,
19097,Update driver docs with constraint examples,
19098,Update docs on interpreted,"Uses ""property"" instead of overloading ""attribute"""
19099,Fix an issue with horizontal docs scrolling,
19100,Fix HCL on interpreted.html,
19101,Merge pull request #1774 from hashicorp/sethvargo/logs_docs,Clarify logs docs
19102,mend,
19103,vendor,
19104,Consul Template Manager,
19105,Fixed vendors.json,
19106,Getting snapshot of allocation from remote node (#1741),  Added the alloc dir move   Moving allocdirs when starting allocations   Added the migrate flag to ephemeral disk   Stopping migration if the allocation doesn't need migration any more   Added the GetAllocDir method   refactored code   Added a test for alloc runner   Incorporated review comments 
19107,Fix formatting,
19108,Clarify logs docs,
19109,Add a small anchor tag to the periodic block.,
19110,Merge pull request #1768 from hashicorp/b-squelch-spammy-consul-errors,Only log consul errors once since last succesful run
19111,Only log consul errors once since last succesful run,
19112,Merge pull request #1763 from hashicorp/sethvargo/docs,Fix docker args docs
19113,Fix docker args docs,
19114,Fixed task group validation tests,
19115,changelog,
19116,Merge pull request #1762 from hashicorp/b-scan-pids,Constant size space tracking of pids
19117,Constant time space tracking of pids,
19118,Merge pull request #1735 from hashicorp/b-bootstrap-flapping,Retry all servers on RPC call failure
19119,Cleanup changelog entries,
19120,Add #1735 related fixes/improvements to changelog,
19121,Remove unused const,
19122,Clarify server-members is server-only (#1761),  Add a note to the CLI that only servers can run this command   Add a callout that this is a server command   Remove the annoying bottom margin on callouts 
19123,Avoiding copying files if they are already present in chrootw (#1753),
19124,Fix lies found in comments by fact checkers,
19125,No need to put reaper ticker on the struct,
19126,Drop clumsy timeout on discovery notifications,It's better to just let goroutines fallback to their longer retry intervals then try to be clever here.
19127,Flip disco chan; clarify method names/comments,
19128,"Return csv of servers from Stats, not just count",
19129,Merge pull request #1752 from hashicorp/f-consul-template,Consul template structs
19130,Parse,
19131,Template diff,
19132,Add template structs,
19133,Test fix,
19134,doDisco -> triggerDiscoveryCh; discovered -> serversDiscoveredCh,Also fix log line formatting
19135,noServers -> noServersErr,
19136,consul -> Consul,
19137,Fix agent server set test,"Test asserted endpoint appendend servers, but the new/desired behavior is for the endpoint to set/overwrite servers."
19138,Merge pull request #1742 from hashicorp/b-text-file-busy,Closing files when files are removed
19139,Merge pull request #1744 from hashicorp/sethvargo/init_format,Update the sample jobfile syntax
19140,Merge pull request #1745 from mwieczorek/windows-named-pipes,Update vendor package github.com/fsouza/go-dockerclient
19141,Merge pull request #1748 from jippi/patch-1,Fix syntax error in JSON example
19142,Merge pull request #1750 from hashicorp/sethvargo/update_hashicorp,Update middleman-hashicorp
19143,Merge pull request #1751 from dvusboy/fix_broken_link,[docs] Add the missing '/' to make the URL path absolute
19144,Add the missing '/' to make the URL path absolute, without that '/' it becomes a relative link and thus it is   broken
19145,Update middleman-hashicorp,
19146,Fix syntax error in JSON example,
19147,Update vendor package github.com/fsouza/go-dockerclient,Added dependencies of updated github.com/fsouza/go-dockerclient: - golang.org/x/net/context/ctxhttp - github.com/docker/engine-api/types/swarm - github.com/Microsoft/go-winio - github.com/docker/engine-api/types/mount
19148,Update the sample jobfile syntax," Uses spaces instead of tabs for the sample job file. Even though Nomad   is written in Go, the HCL style guide uses two spaces for indentation,   and this will match Terraform and Vault in terms of configuration. Locks to redis:3.2 instead of floating latest. Running latest in   production is a bad idea and we shouldn't encourage it even via   example. Removes the linux constraint (native docker exists for both Mac and   Windows now)  Aligns equal signs and stuff as per the HCL formatter   Closes #1743 "
19149,Convert example job file constraint to comment,"This improves the ""getting started"" happy path experience for non-linux users who are running the native Docker tools on their machines. There is no need to constrain this job to linux, since driver detection for docker will already (basically) do this."
19150,Closing files when files are removed,
19151,Not setting a drained node as preferred node (#1740),
19152,Replace periodic handlers with event driven disco,Remove use of periodic consul handlers in the client and just use goroutines. Consul Discovery is now triggered with a chan instead of using a timer and deadline to trigger. Once discovery is complete a chan is ticked so all goroutines waiting for servers will run. Should speed up bootstraping and recovery while decreasing spinning on timers.
19153,Merge pull request #1738 from sandstrom/patch-1,Timestamp changelog
19154,Timestamp changelog,
19155,Retry all servers on RPC call failure,"rpcproxy is refactored into serverlist which prioritizes good servers over servers in a remote DC or who have had a failure. Registration, heartbeating, and alloc status updating will retry faster when new servers are discovered. Consul discovery will be retried more quickly when no servers are available (eg on startup or an outage)."
19156,Adding a snapshot endpoint on the client (#1730),
19157,Handle the various valid root cases,
19158,Merge pull request #1733 from hashicorp/f-vault-renew-root,Renew root tokens where applicable
19159,Renew root tokens where applicable,
19160,Add env,
19161,no -v,
19162,Added logic to ensure scheduler knows job defn has been updated when ephemeral disks has been updated (#1725),
19163,Merge pull request #1727 from kaskavalci/patch-4,Change error message
19164,Merge pull request #1731 from hashicorp/f-vault-diff,Vault diff
19165,Vault diff,
19166,Merge pull request #1729 from hashicorp/f-vault-anywhere,Vault block improvements
19167,tasks updated,
19168,Struct and parse,
19169,Vault defined at all levels,
19170,Fix VaultPolicies returning non-empty map when there are no policies,
19171,Lowercase message,
19172,Change error message,Local Disk -> Ephemeral Disk
19173,Merge pull request #1713 from hashicorp/f-alloc-runner-vault,Vault integration in client
19174,Merge pull request #1677 from hashicorp/f-vault-implicit-constraint,Vault implicit Task Group constraint + allow root tokens
19175,Link to Artifact section.,
19176,Fixed the logic of calculating queued allocation in sys sched (#1724),
19177,Ensuring that we are not emitting stats when handle is nil (#1723),  Ensuring that we are not emitting stats when handle is nil   Updated the changelog 
19178,Merge pull request #1715 from hashicorp/b-dead-system-nodes,Fix bug where dead nodes weren't properly handled by system scheduler
19179,Fix bug in which dead nodes weren't being properly handled by system scheduler,
19180,Fix comment,
19181,Task runner test,
19182,Alloc runner tests,
19183,Handle recovery failure,
19184,Fix token renewal,
19185,Merge pull request #1711 from mlafeldt/job-parent-id,Include parent ID in job info returned by Go API
19186,Include parent ID in job info returned by Go API,"At the moment, this ID is only included when using module, which returns module. With this change, the ID will also be available when using module, which returns module. In fact, module is currently the only field present in module that is not part of module. Note: This has the side effect that module will now include an empty module."
19187,alloc-status,
19188,Clean up vault client,
19189,Merge pull request #1709 from neumayer/log,Log adding of servers at INFO level
19190,Renaming LocalDisk to EphemeralDisk (#1710),Renaming LocalDisk to EphemeralDisk
19191,Vault token threaded,
19192,Log adding of servers at INFO level,
19193,Add changelog entry for #1682,
19194,Merge pull request #1682 from hashicorp/b-sanity-check-state-file,Prevent state file corruption and check state file sanity on save
19195,Merge pull request #1707 from mlafeldt/fix-typo,Fix typo in alloc-status output
19196,Fix typo in alloc-status output,
19197,"Revert ""A nil context isn't an error""",This reverts commit fe9fe4c26259c1ad3bd7e94bd711418aaf819b20.
19198,Merge pull request #1701 from hashicorp/d-kill-timeout,Kill timeout default documentation
19199,kill timeout default documentation,
19200,Merge pull request #1700 from iconara/patch-1,Clarify that the Java driver needs root on Linux
19201,Clarify that the Java driver needs root on Linux,Update the Java task driver docs to clarify that Nomad needs to run as root on Linux.
19202,Merge pull request #1698 from neumayer/typo,Fix typo
19203,Fix typo,Telementry -> Telemetry
19204,Updating go version to 1.7.1,
19205,Merge pull request #1695 from frots/patch-1,Minor typo in bootstrapping.html.md
19206,Minor typo in bootstrapping.html.md,
19207,Merge pull request #1690 from mwieczorek/fix-nomad-run-on-windows,Fix 'nomad run' on windows
19208,Close job temp file,
19209,Merge pull request #1686 from hashicorp/fix-tests,Fixing alloc runner tests
19210,Fixing alloc runner tests,
19211,Merge pull request #1685 from hashicorp/remove-warn-msg,Removing warn msg
19212,Removing warn msg,
19213,Merge pull request #1683 from mwieczorek/enable-syslog-for-windows,Enable syslog for windows
19214,Enable syslog server and universal collector for windows,
19215,A nil context isn't an error,
19216,Don't serialize task states twice in state files,
19217,Lock around saving state,Prevent interleaving state syncs as it could conceivably lead to empty state files as per #1367
19218,Add sanity check to SaveState,Also just reuse the task states snapshot taken by module instead of doing a redundant copy.
19219,changelog,
19220,Merge pull request #1681 from hashicorp/f-secret-dir,Secret dir materialized in alloc/task directory
19221,syscall error,
19222,Secret dir materialized in alloc/task directory,
19223,Merge pull request #1679 from hashicorp/fix-upgrade-alloc,Adding LocalDisk to alloc.Job
19224,Adding LocalDisk to alloc.Job,
19225,Merge pull request #1678 from hashicorp/revert-1671-f-secret-dir2,"Revert ""Introduce a Secret/ directory"""
19226,"Revert ""Introduce a Secret/ directory""",
19227,Vault config flags,
19228,Implicit vault constraint,
19229,small fixes,
19230,Allow root token,
19231,Merge pull request #1675 from hashicorp/f-vault-fingerprint,Fingerprint Vault
19232,Fingerprint,
19233,Changelog,
19234,Merge pull request #1671 from hashicorp/f-secret-dir2,Introduce a Secret/ directory
19235,Symlink on windows,
19236,Address comments and reserve,
19237,Merge pull request #1672 from hashicorp/docs-readat,Added docs for readat
19238,Add changelog entry for #1668 / #1661,
19239,Added docs for readat,
19240,Merge pull request #1668 from hashicorp/b-fix-consul-updates,Fix old services not getting removed from consul on update
19241,Query consul without helpers in test to be safe,
19242,Merge pull request #1659 from hashicorp/f-revoke-accessors,Token revocation and keeping only a single Vault client active among servers
19243,address comments,
19244,Merge pull request #1667 from hashicorp/f-sticky-scheduler,Implemented SetPrefferingNodes in stack
19245,Added some more comments,
19246,Add vendor package github.com/RackSec/srslog,
19247,environment variables,
19248,Added a test,
19249,Merge pull request #1670 from hashicorp/b-telemetry-config,Merging telemetry configs
19250,Added a test,
19251,Merging telemetry configs,
19252,Make comment more precise,
19253,Fix error message when querying consul fails,
19254,Merge pull request #1669 from nborkert/patch-1,Fixed grammar
19255,Assert syncer state is consistent with consul's state,
19256,Fixed grammar,"Changed ""your"" to ""you"" to become ""...what would happen if you ran the updated job:"""
19257,Interface + tests,
19258,Remove extra consul service tracking entirely,Instead just remove all associated services on shutdown.
19259,Fix old services not getting removed from consul on update,Fixes #1661
19260,changelog,
19261,Merge pull request #1666 from dvusboy/update_gopsutil,Update vendor package shirou/gopsutil
19262,Implemented SetPrefferingNodes in stack,
19263,Update vendor package shirou/gopsutil," resolve #1392 pull in the fix for shirou/gopsutil/#249 which updates   the Linux driver for module to set module to the maximum   clock-speed of the CPU, if that's available"
19264,Merge pull request #1606 from hashicorp/f-vault-client,VaultClient for Nomad client's interactions with Vault
19265,Print debug message only when error is non-nil,
19266,Addressed review feedback,
19267,Return only fatal error to renewal error channel,
19268,Fix tests,
19269,tokenDeriver function pointer to derive tokens.,"Remove rpc*, connPool, node and region from vaultclient."
19270,"Secret dir, hello world",
19271,Merge pull request #1654 from hashicorp/f-sticky-spec,Server side changes for sticky volumes
19272,Introducing shared resources in alloc,
19273,Use Job.LookupTaskGroup,
19274,Merge pull request #1660 from mlafeldt/optional-stats,Make alloc-status and node-status work without access to stats
19275,Address review feedback,
19276,Make node-status -short work without node stats,
19277,Make alloc-status -short work without allocation stats,
19278,Make maxSize exported so that it is serialized,
19279,Use tomb to shutdown,Token revocation Remove from the statestore Revoke tokens Don't error when Vault is disabled as this could cause issue if the operator ever goes from enabled to disabled update server interface to allow enable/disable and config loading test the new functions Leader revoke Use active
19280,Merge pull request #1658 from groovemonkey/web-copy-fixes,Web copy fixes
19281,"one last tiny pedantic fix, I swear.",
19282,more tiny doc fixes,
19283,Merge pull request #1657 from groovemonkey/patch-1,small spelling correction
19284,small spelling correction,
19285,Added LocalDisk to diff,
19286,Ensuring resources are re-calculated properly in fsm,
19287,Changing implementation of AllocsFit,
19288,update architecture copy,
19289,Added copy method to LocalDisk,
19290,Remove unused embedded lock on ExecContext,
19291,Add changelog entry for #1558's fix,
19292,Changelog,
19293,Merge pull request #1656 from hashicorp/b-fix-http-timeout,Fix http timeout for Consul check for servers
19294,Increase the timeout to be greater than the RPC hold threshold,
19295,Merge pull request #1653 from hashicorp/b-fix-artifact-retry,Don't fail other tasks when retrying artifact get
19296,Fixed more tests,
19297,Fixed some more tests,
19298,Fixed api tests,
19299,Make sure bad doesn't fail before web runs,
19300,Ensure bad task reaches terminal state within test,
19301,Merge pull request #1655 from hashicorp/f-travis-vault,Update install of Vault
19302,Ensure web task exited successfully,Web task should run to completion successfully while the module task is retrying artifact downloads.
19303,Update install of Vault,
19304,Added scheduler tests to ensure disk constraints are honored,
19305,Don't fail other tasks when retrying artifact get,"The artifact fetching may be retried and succeed, so don't set the task as dead. Fixes #1558"
19306,Merge branch 'master' of github.com:hashicorp/nomad,
19307,bump vault version,
19308,Merge pull request #1652 from hashicorp/b-monitor-alloc-dir,"Monitor the complete alloc directory, not just the shared part."
19309,Fixed some tests,
19310,Small comment fix.,
19311,"Monitor the complete alloc directory, not just the shared part.",
19312,Merge pull request #1651 from hashicorp/b-fix-client-tests,Don't duplicate TaskKilled event and check for TaskSiblingFailed.
19313,Don't duplicate TaskKilled event and check for TaskSiblingFailed.,
19314,Added an upgrade path for existing jobs with no local disk,
19315,Making the scheduler use LocalDisk instead of Resources.DiskMB,
19316,Merge pull request #1613 from nak3/plan255,command.plan: tiny: Fix expect error code message from 1 to 255
19317,Merge pull request #1645 from capone212/failing_cehcks_fix,issue #1636:  start CheckRunner if check exists in consul already
19318,Merge pull request #1648 from nfisher/patch-1,getting-started/running.html.md: update output for nomad 0.4.1.
19319,update pr number,
19320,Implemented job spec parsing for sticky volumes,
19321,Fixed the raw_exec fingerprint test,
19322,fixed the qemu fingerprinter test,
19323,Employ DeriveVaultToken API and flesh-up DeriveToken,
19324,VaultClient for Nomad Client,
19325,Merge pull request #1649 from hashicorp/test-fixes,fixed the exec fingerprinter test
19326,Fixed CR defects,
19327,getting-started/running.html.md: update nomad server-members output to 0.4.1 release.,
19328,"Revert ""Update running.html.md""",This reverts commit deaac26e1a822a45a0473fa4c2b507623f103e66.
19329,Fixed a java test,
19330,fixed the exec fingerprinter test,
19331,Update running.html.md,Update running.html.md for nomad 4.1 output.
19332,Merge pull request #1647 from hoffoo/fix_initial_status_api,api/tasks.go: add check initial_status
19333,api/tasks.go: add check initial_status,
19334,removing driver_mock,
19335,Merge pull request #1646 from hashicorp/docs-metrics,added docs for configuration of telemetry publishing nobs
19336,added docs for configuration of telemetry publishing nobs,
19337,Merge pull request #1629 from hashicorp/f-derive-token,Server Deriving Tokens on behalf of Clients
19338,Fix command tests that wait for client to be registered,
19339,Fix TestDockerDriver_Fingerprint,
19340,Changelog,
19341,Merge pull request #1580 from hashicorp/f-disk-usage-monitoring,Monitor and enforce shared allocation directory disk usage
19342,First attemt to fix issue #1636,
19343,Merge pull request #1638 from hashicorp/fix-alloc-status-test,Attempting to fix alloc status test
19344,Attempting to fix alloc status test,
19345,Merge pull request #1631 from hashicorp/f-block-chained-allocs,Block allocations if their chained allocation hasn't terminated yet
19346,Putting the mock driver behind a build flag,
19347,fix comment,
19348,blocking chained allocations until previous allocation hasn't terminated,
19349,Merge pull request #1637 from hashicorp/install-vault-bin,Instlling the vault binary
19350,Instlling the vault binary,
19351,Merge pull request #1634 from nak3/docker-driver-taskname,driver.docker: tiny: debug messages output task name instead of image name
19352,driver.docker: tiny: debug messages output task name instead of image name,
19353,fixes,
19354,remove debug,
19355,no failures allowed,
19356,Add set -e,
19357,create token tests,
19358,tests,
19359,Commit Vault Accessors to vault and return the response,
19360,"Raft message, fsm and state store table",
19361,Pipeline Vault token creation,
19362,Rate limiting,
19363,Start,
19364,no failures allowed,
19365,format error,
19366,changelog,
19367,Merge pull request #1597 from hashicorp/f-node-secret-id,Nodes generate Secret ID and used retrieving allocations/registering
19368,Enforce serverside secret id match,
19369,changelog,
19370,Merge pull request #1623 from novilabs/alloc-status-created-at,add 'Created At' to nomad alloc-status
19371,Merge pull request #1622 from novilabs/vendor-mitchellh-go-homedir,vendor github.com/mitchellh/go-homedir for osx
19372,Merge pull request #1625 from hashicorp/sethvargo-patch-1,Fix bootstrapping docs error
19373,Fix bootstrapping docs error,This just cost me about 30 minutes of my life...
19374,vendor github.com/mitchellh/go-homedir for osx,
19375,add Created At to nomad alloc-status,
19376,handle the upgrade case,
19377,Merge pull request #1621 from a86c6f7964/patch-1,golang 1.7+ is required now
19378,golang 1.7+ is required now,vault requires golang 1.7+
19379,Update README.md,
19380,Merge branch 'master' of github.com:hashicorp/nomad,
19381,Update community to show gitter,
19382,Merge pull request #1620 from callmeradical/master,"Updating vagrant file for v0.4.1, logs section of tutorial references…"
19383,"Updating vagrant file for v0.4.1, logs section of tutorial references 0.4.1",
19384,Update README.md,
19385,Merge pull request #1619 from gitter-badger/gitter-badge,Add a Gitter chat badge to README.md
19386,Add Gitter badge,
19387,Merge pull request #1618 from hashicorp/disable-vault,Enabling vault if token is present
19388,removing the agent config,
19389,Enabling vault if token is present,
19390,test fixes,
19391,Disk resource monitoring and enforcement,
19392,add import,
19393,Nodes generate Secret ID and used for retrieving allocations and registering,
19394,Test,
19395,Merge pull request #1614 from hashicorp/f-nomad-0.5,F nomad 0.5
19396,command.plan: tiny: Fix expect error code message from 1 to 255,
19397,Disable Vault instead of supplying test token,
19398,Fix a few client tests,
19399,Run command,
19400,Job Register endpoint validates token,
19401,LookupToken,
19402,test renewal,
19403,Token renewal and beginning of tests,
19404,Update vendored Vault,
19405,Renew loop,
19406,Create a Vault interface for the server,
19407,Server has Vault API client,
19408,Test,
19409,install scripts,
19410,updating version,
19411,Update vagrant,
19412,Merge pull request #1612 from hashicorp/diptanu-0-5-branch,Chained Allocs
19413,bump version,
19414,Address field name feedback,
19415,Added mapstructure tag for VaultToken,
19416,Update jobspec parsing to contain vault_token at job level and not task level,
19417,Store the Vault token once per job,
19418,Pass Vault config to client,
19419,Add vault to jobspec,
19420,Add vault struct,
19421,Add enabled field,
19422,Add Vault config to server,
19423,vendor,
19424,small fixes,
19425,Change token/role names,
19426,change config variable names to match vault,
19427,Parse Vault Config,
19428,vendor + api,
19429,Initial config block,
19430,updated the changelog,
19431,Release v0.4.1,
19432,bumping up the version of the website,
19433,bumping up the version,
19434,Merge pull request #1611 from hashicorp/fix-docker-tests,Fixed docker tests
19435,re-using copyimage,
19436,Fixed docker tests,
19437,Changed build script,
19438,changing error statement,
19439,Merge branch 'master' of github.com:hashicorp/nomad,
19440,changelog,
19441,Merge branch 'master' of github.com:hashicorp/nomad,
19442,Fixed the docker script check,
19443,Merge pull request #1610 from kyhavlov/master,Added NOMAD_HTTP_AUTH env var for basic auth
19444,Merge pull request #1594 from hashicorp/f-chained-allocations-server,Marking an allocation chained if we are creating this to replace an o…
19445,Added NOMAD_HTTP_AUTH env var for basic auth,
19446,Fix service validate test,
19447,Fix network dynamic port test,
19448,Fix TaskDiff test,
19449,changelog,
19450,Merge pull request #1511 from nak3/url-jobfile,Support run/plan jobfile via URL location
19451,Merge pull request #1607 from nak3/diff-test-case-num,struct: tiny: output case number of the diff test
19452,struct: tiny: output case number of the diff test,
19453,Fix error messages,
19454,"Fix error message in Test{Plan,Run,Validate}Command_From_URL",
19455,Merge pull request #1604 from hashicorp/f-travis,More advance travis timeout circumvention
19456,More advance travis timeout circumvention,
19457,Add StructJob test with jobfile from HTTP Server,
19458,Update the usage of plan command,
19459,Rename Helper to JobGetter,
19460,Add help and documentation,
19461,Use go-getter to get jobfile by URL,
19462,Add URL location support to validate command,
19463,Support run/plan jobfile via URL location,
19464,fix data format test,
19465,Merge pull request #1601 from hashicorp/b-fix-node-alloc-test,get a free port from the kernel
19466,Merge pull request #1602 from hashicorp/b-fix-job-eval-test,Fixed a test
19467,Fixed a test,
19468,get a free port from the kernel,
19469,Updating go version in Vagrant,
19470,updated the changelog,
19471,Cleaning up some code,
19472,Merge pull request #1599 from hoffoo/initial_check_state,Add support for initial check status
19473,Fix bitmap test and check bitmap bounds,
19474,Merge pull request #1598 from nak3/rkt-fix5,driver.rkt: Remove unnecessary job validation
19475,fix initial status tests,
19476,use tip go,
19477,changelog,
19478,Merge pull request #1593 from hashicorp/f-rereg,Reregister Client on failed heartbeat
19479,Extend the build timeout,
19480,change test script,
19481,Add support for initial check status,
19482,Merge pull request #1596 from ramukima/qemu-extra-args-issue-1588,issue-1588 : Allow extra driver config args as a passthrough for qemu…
19483,Added the chained alloc for system scheduler,
19484,driver.rkt: Remove unnecessary job validation,
19485,"go fmt performed code when copied from another directory got messed up again ? Ok, ran go fmt again",
19486,changelog,
19487,Merge pull request #1540 from novilabs/add-creation-time-to-job-status,Add creation time to job status
19488,issue-1588 : Allow extra driver config args as a passthrough for qemu executable from a task specification,
19489,s/Created/Created At/,
19490,Marking an allocation chained if we are creating this to replace an old one,
19491,"If the client detects that a heartbeat has failed because it is not registered, reregister",
19492,inclusive range,
19493,changelog,
19494,Merge pull request #1581 from nak3/fix-rkt2,Set host environment variables to taskEnv of rkt driver
19495,Merge pull request #1584 from novilabs/stream-framer-order,duplicate check for deep equals of frame order
19496,Merge pull request #1585 from novilabs/fix-test-http-job-evals,"use last job eval if multiple exist, when looking for registration"
19497,Merge pull request #1586 from nak3/rkt-fix3,tiny: Catch error returned from SyncServices in rkt driver
19498,Merge pull request #1587 from nak3/rkt-fix4,rkt.driver: Fix wrong MB calculation
19499,rkt.driver: Fix wrong MB calculation,
19500,tiny: Catch error returned from SyncServices in rkt driver,
19501,"use last job eval if multiple exist, when looking for registration",
19502,duplicate check for deep equals of frame order,
19503,Set host environment variables to taskEnv of rkt driver,
19504,Merge pull request #1578 from novilabs/fix-test-eval-list,allow multiple evals check last one in test
19505,allow multiple evals check last one in test,
19506,Release v0.4.1-rc1,
19507,Enabled cgo,
19508,Updated the build script,
19509,Updated the version,
19510,Updated changelog,
19511,Merge pull request #1562 from dbresson/support-query-strings-in-checks,support query strings in checks
19512,Merge pull request #1572 from hashicorp/fix-docker-test,Fixed docker tests
19513,Fixed a make vet warning,
19514,"Revert ""not running tests in verbose mode""",This reverts commit 3847bbd7559a1b9d2624fe6d2f7030ac66bbc7fa.
19515,Updated the busybox images,
19516,not running tests in verbose mode,
19517,Not running tests parallal,
19518,Update test.sh,
19519,Fixed docker tests,
19520,Merge pull request #1571 from hashicorp/t-logs-tests,Fixing logs tests on travis
19521,revert test script,
19522,Wrap file rotator tests in wait for,
19523,fs uses timed unblocker like logs command,
19524,only use polling,
19525,lock heartbeat,
19526,up timeouts,
19527,only test command/agent,
19528,Add travis multiplier,
19529,Merge pull request #1413 from hashicorp/b-tests,Fix flaky tests
19530,updated changelog,
19531,Update task_runner_test.go,
19532,Merge pull request #1566 from mlafeldt/fix-config-reload,Fix reload of retry_join server addresses on SIGHUP
19533,changelog,
19534,Merge pull request #1568 from hashicorp/b-plan-system-constraints,Plan on system scheduler doesn't count nodes who don't meet constraints
19535,Merge pull request #1569 from hashicorp/fix-network-port-collisions,Fix network port collisions when asking for dyn ports
19536,Fix network port collisions when asking for dyn ports,
19537,Plan on system scheduler doesn't count nodes who don't meet constraints,
19538,Fix core scheduler tests,
19539,Merge pull request #1559 from hashicorp/b-summary-node-down,Ensuring system sched doesn't increment queued count when nodes are f…
19540,Fix task runner test,
19541,Add a test for query string support,
19542,Add error handling to check registration,
19543,Merge pull request #1563 from hashicorp/link-fs,Add link to fs
19544,Add support for query strings in check paths,
19545,Fix reload of retry_join server addresses on SIGHUP,"The current code does not update the actual config, but only the local reference to it."
19546,Merge pull request #1535 from nak3/output-hoststats-collect-error,Output HostStatsCollector's Collect errors
19547,Merge pull request #1564 from nak3/fix-docs,Fix format in fs documentation
19548,Update after the review,
19549,Fix format in fs documentation,
19550,Add link to fs,
19551,Return error when client failed to collect host stats,
19552,Merge pull request #1518 from pubnub/feature/chroot-map-rebase,Add config field to specify chroot mapping for exec driver
19553,Changelog,
19554,Merge pull request #1526 from hashicorp/b-random-ports,Set difference when picking random ports
19555,Fixes plus address feedback,
19556,Merge pull request #1560 from hashicorp/fix-err-msgs,Fixed some error messages
19557,Fixed some error messages,
19558,Merge pull request #1533 from nak3/fix-error-in-client,tiny: Return fmt.Errorf instead of duplicated error messages
19559,Merge pull request #1538 from nak3/output-host-disk-utilization2,node-status outputs volumename instead of 0B utilization when non-physical volume is used
19560,Merge pull request #1539 from hashicorp/docs-summaries,Added docs for job summaries
19561,Added the job summary on getting started,
19562,Ensuring system sched doesn't increment queued count when nodes are filtered,
19563,Try stochastic and fallback to precise,
19564,Merge pull request #1542 from novilabs/fix-test-job-summary,just checked the known values in job summary instead of doing a deep equals
19565,Merge pull request #1552 from hashicorp/b-summary-node-down,Mark allocs as lost which are non terminal on nodes which are down
19566,Added scheduler tests,
19567,Marking allocations which are not terminal and are on down nodes as lost,
19568,consul syncer uses multi-error,
19569,Merge pull request #1543 from nak3/add-rkt-debug,Add debug option to rkt task config
19570,Added a test to ensure summaries are correct when a node goes down,
19571,changelog,
19572,Merge pull request #1503 from nak3/add-printer,Support nomad CLI output with JSON and template format
19573,Merge pull request #1548 from nak3/update-doc-options,docs: Update command options subtitles
19574,docs: Update command options subtitles,
19575,Update after another review,
19576,Add test to check both -json and -t are not specified,
19577,Support JSON and template data output list when no args specified,
19578,Update help and error message,
19579,Add doc about -json and -t options,
19580,Stop using format option and support json and t option,
19581,fix go panic,
19582,Support JSON and template format with nomad CLI,
19583,Update debug option from string to bool,
19584,move formatUnixNanoTime into a utility function,
19585,"remove time flag, and update docs with new column",
19586,Fix ConfigMerge test with chroot config,
19587,Add debug option to rkt task config,
19588,Update after review,
19589,tiny: Return fmt.Errorf instead of duplicated error messages,
19590,node-status outputs volumename instead of 0B utilization with non-physical volume,
19591,Merge pull request #1541 from novilabs/fix-test-job-evals,"it is possible to have more than 1 eval if the eval fails, use the last one"
19592,Fix Linux executor isolation test," Properly expects the hard-coded mounts (alloc, dev, and proc) and hardcoded local directories (local and tmp) Also verifies that etc contains only the requested paths"
19593,Merge pull request #1532 from nak3/fix-fingerprint-cpu-log,tiny: Fix duplicated error message in CPU fingerprint
19594,Merge pull request #1534 from nak3/fix-intask_runner,tiny: print task name and error message for SaveState error
19595,Merge pull request #1536 from nak3/add-cpu-mhz-to-node,tiny: Add MHz to node-status output
19596,Merge pull request #1544 from hashicorp/sethvargo/link,Update links to serf
19597,Update links to serf,
19598,go fmt error,
19599,tiny: Add MHz to node-status output,
19600,Merge pull request #1531 from nak3/update-getartifact,Update GetArtifact by removing unused logger
19601,just checked the known values in job summary instead of doing a deep equals,
19602,"it is possible to have more than 1 eval if the eval fails, use the last one",
19603,Updated the changelog,
19604,add time flag to add created column to allocation,
19605,Added docs for job summaries,
19606,"code cleanup of inconsistent naming, spacing, and duplicate code",
19607,tiny: print task name and error message for the SaveState error in task_runner,
19608,tiny: Fix duplicated error message in CPU fingerprint,
19609,Update GetArtifact by removing unused logger,
19610,Merge pull request #1528 from hashicorp/remove-version-check,Removing the check related to checking version of server before recon…
19611,Removing the check related to checking version of server before reconciling in leader,
19612,Merge pull request #1527 from hashicorp/f-leader-reconcile-summaries,F leader reconcile summaries
19613,Making servers reconcile job summaries when they acquire leadership,
19614,Add a test,
19615,Set difference when picking random ports,
19616,Add documentation for chroot_env client configuration,
19617,Merge pull request #1477 from nak3/add-syslog_server-test,Add Syslog server start shutdown test
19618,changelog + use driver config,
19619,Merge pull request #1493 from nak3/rkt-fix1,Pass command and trust_prefix to the validation of rkt task configuration
19620,changelog,
19621,Merge pull request #1521 from mwieczorek/windows-default-network-type,Set windows containers default network mode to 'nat'
19622,Add Syslog server start shutdown test,
19623,Set windows containers default network mode to 'nat',
19624,Merge pull request #1522 from hashicorp/b-reconcile-summary,Setting job's create index as summary create index during reconciliation
19625,Address review comments, Simplify map length check in Linux Executor Added a module test for config parser Moved module field from ExecutorCommand to ExecutorContext Added a test for module functionality
19626,Setting job's create index as summary create index during reconciliation,
19627,Merge pull request #1501 from hashicorp/f-stats-opt-in,Allow operators to opt into publishing node and alloc metrics
19628,Merge pull request #1520 from hashicorp/f-sort-tg-names-summaries,Sorting the job summaries while displaying
19629,Merge pull request #1475 from mwieczorek/windows-hostIp-portBindings,Empty host ip for windows containers port bindings
19630,Removing the custom sorting logic,
19631,Changelog,
19632,Merge pull request #1519 from vrenjith/master,Remove docker volumes while removing container
19633,Sorting the task group names and not the output of the format list,
19634,changelog,
19635,Merge pull request #1516 from hashicorp/f-lost-state-sched,Make scheduler mark allocations as lost
19636,Merge pull request #1517 from hashicorp/f-reconcile-summaries,Endpoint for reconciling job summaries
19637,Updated tests and comments,
19638,test sched doesn't mark complete as lost + core_sched tests,
19639,Add chroot_env to Java driver (which uses the exec driver internally),
19640,Sorting the job summaries while displaying,
19641,Add TestRktTaskValidate,
19642,Add TestRktTrustPrefix,
19643,Pass command and trust_prefix to the validation of rkt task configuration,
19644,Update docker.go,Remove container volumes
19645,Update checks_test.go,Remove docker volumes while exiting container
19646,Add config field to specify chroot mapping for exec driver," Same format as used by the internal chroot mapping Map: source_path -> dest_path Example HCL:  client {   chroot_env {     ""/etc"" = ""/etc""     ""/lib"" = ""/lib""     ""/opt/projects/foo/bin"" = ""/usr/bin""   } }"
19647,Not updating summary if job is de-registered,
19648,Added an endpoint for users to reconcile job summaries,
19649,Make scheduler mark allocations as lost,
19650,Added a test for restoring the summaries in fsm,
19651,Remove old way of marking lost,
19652,changelog,
19653,Merge pull request #1502 from hashicorp/f-plan-exit-code,Plan exit code map to whether allocations would change + bug fix
19654,Fix tests,
19655,changelog,
19656,Merge pull request #1513 from mlafeldt/workdir,Docker driver: allow to configure working directory
19657,Merge pull request #1491 from nak3/add-format-to-test,Add go fmt before running test in Makefile
19658,Merge pull request #1512 from mlafeldt/restart-policy-link,Job Spec: Link restart policy reference
19659,Test configuration of Docker working directory,
19660,Docker driver: allow to configure working directory,
19661,Job Spec: Link restart policy reference,For easier lookup.
19662,Merge pull request #1509 from hashicorp/fix-accounting,Not updating summary if create index of summary not same as job's cre…
19663,changelog,
19664,using the job associated with the alloc to determine if job is present,
19665,Not updating summary if create index of summary not same as job's create index,
19666,Merge pull request #1508 from hashicorp/b-dont-update-job,Do not update the job of allocations that are being stopped
19667,Do not update the job of allocations that are being stopped,
19668,Merge pull request #1505 from hashicorp/f-fix-summary,Fix the logic for updating summary
19669,changelog,
19670,Merge pull request #1506 from hashicorp/b-priviledge-gate,Handle privileged correctly and don't gate various configs on it
19671,use priviledge of the config,
19672,Updated the logic to update job summary,
19673,"remove gating of ipc, user ns and pidmode based on hosts priviledge mode config",
19674,Updating the summary after we have updated the current allocation when client updates the alloc,
19675,Updating the summary after we have updated the current allocation,
19676,Merge pull request #1504 from mlafeldt/atttempts,Fix typo: atttempts
19677,Fix typo: atttempts,
19678,KillTimeout can be modified in place,
19679,plan returns appropriate exit code,
19680,Updated changelog,
19681,Allow operators to opt into publishing node and alloc metrics,
19682,Add go fmt before running test in Makefile,
19683,Merge pull request #1490 from nak3/fix-gofmt,Fix gofmt in restarts_test.go
19684,Merge pull request #1496 from hashicorp/b-summary,Using the parent transaction to query the allocation while updating s…
19685,Checking if a job is nil before updating the allocation,
19686,Merge pull request #1492 from nak3/fs-update,Add validation of -n and -c options
19687,Using the parnet transaction to query the allocation while updating summary,
19688,Add validation of -n and -c options,
19689,Fix gofmt in restarts_test.go,
19690,Merge pull request #1486 from novilabs/add-intellij-ignore,add intellij iml as an ignored file
19691,Merge pull request #1485 from novilabs/fix-consul-error-log,fix setup consul syncer error message
19692,add intellij iml as an ignored file,
19693,fix setup consul syncer error message,
19694,fix filter logic,
19695,Merge pull request #1483 from hashicorp/b-task-stop,Not updating job summaries if jobs are not present
19696,Merge pull request #1482 from hashicorp/b-fs-http,api.fs uses the api.Client rather than making raw requests
19697,Not updating job summaries if jobs are not present,
19698,Fix nomad inspect output,
19699,Merge branch 'master' of github.com:hashicorp/nomad,
19700,Changelog,
19701,Merge pull request #1471 from hashicorp/b-handle-old-batch-allocs,filterCompleteAllocs filters replaced batch allocs
19702,api.fs uses the api.Client rather than making raw requests,
19703,Merge pull request #1481 from hashicorp/b-summary-accounting,Updated tests and added logic to system sched
19704,Updated tests and added logic to system sched,
19705,Changelog,
19706,Merge pull request #1480 from hashicorp/b-docker-disable-swap,Disable swap on docker driver
19707,Merge pull request #1479 from hashicorp/b-summary-accounting,Setting the queued count as zero if there is nothing to place
19708,fixed a comment,
19709,disable swap,
19710,Setting the queued count as zero if there is nothing to place,
19711,Merge pull request #1476 from hashicorp/b-alloc-migrate,Mark desired state of allocations as stop when nodes goes down
19712,Added a test,
19713,Marking the desired state of an allocation as stop if the node on which it runs disconnects,
19714,Empty host ip for windows containers port bindings,
19715,Copying job summary before mutating it,
19716,Merge pull request #1473 from hashicorp/f-node-status-updated-ts,Added a test
19717,Added a test,
19718,Merge pull request #1472 from hashicorp/f-node-status-updated-ts,Added the status updated at timestamp
19719,filterCompleteAllocs filters replaced batch allocs,
19720,Added the status updated at timestamp,
19721,Merge pull request #1470 from nak3/add-log_levels_test,Add LevelFilter test
19722,Update bootstrapping.html.md,
19723,Add LevelFilter test,
19724,Merge pull request #1455 from hashicorp/f-job-summary,Job Summary - Part 2
19725,Updated some tests,
19726,Running the tests in verbose mode,
19727,Merge pull request #1466 from hashicorp/d-logs,Document logs command and API
19728,Merge pull request #1468 from nak3/add-fs_test,Add TestFSCommand_Fails to fs command
19729,Add TestFSCommand_Fails to fs command,
19730,Fixed a test,
19731,Making the queued allocations bind late,
19732,Setting the right indexes while creating Job Summary,
19733,Reconciling the queued allocations during restore,
19734,Added a test for adjustQueuedAllocations,
19735,Renamed Job.GetJobSummary to Job.Summary,
19736,Fixed more tests,
19737,Initializing the queued allocations late,
19738,Added a test to ensure we record the queued allocations correctly when the plan made partial progress,
19739,Fixed some more tests,
19740,Added test for blocking query of job summary endpoint,
19741,Added a test to ensure failed batch allocations are being added to the number of queued allocations,
19742,Added a test to ensure system scheduler records the correct number of queued allocations,
19743,Added some more tests,
19744,Added code to create missing job summaries,
19745,Review comments,
19746,Fixed some bugs,
19747,Fixed some error messages and conditions,
19748,Displaying the job summary in nomad status command,
19749,Added support for retreiving job summary in api,
19750,Adding the summary to the Job Stub,
19751,Moved the job endpoint around,
19752,Updating the job summary while mutating jobs and allocation objects,
19753,Applying changes to job updates via FSM,
19754,Not setting the desired and client status of an allocation during in-place updates,
19755,Fixed the logic for decrementing the count of queued based on plan result,
19756,Updating the job summary table only if an evaluation has any Queued Allocations,
19757,Added the job summary related endpoints,
19758,Setting the number of queued allocations per task group,
19759,remove unused file,
19760,changelog,
19761,Merge pull request #1465 from 42wim/ipv6-1318,Fix IPv6 advertise addresses
19762,fix job gc tests,
19763,"Revert ""Fix job gc tests""",This reverts commit 4be50ac8c78b09d603d9680064391d449b268436.
19764,Fix job gc tests,
19765,Use net.JoinHostPort,
19766,Removing un-wanted dependencies,
19767,api docs,
19768,Fix IPv6 advertise addresses,
19769,getting started,
19770,logs command docs,
19771,changelog,
19772,Merge pull request #1456 from hashicorp/b-system-job,Node Register handles transistioning to ready and creating evals
19773,add down to up test,
19774,Merge pull request #1452 from hashicorp/d-bootstrap,Bootstrapping a production cluster documentation
19775,Bootstrapping a production cluster documentation,
19776,changelog,
19777,Merge pull request #1444 from hashicorp/f-log-streaming,Nomad logs command to stream task logs
19778,better flush and connection closed handling,
19779,control-c works,
19780,small fixes,
19781,Add logs command test,
19782,Handle skipping indexes,
19783,log tests,
19784,Support non-following logs,
19785,Look up the tasks automatically,
19786,fix indents,
19787,remove file events and last offset,
19788,unblock the readers to add liveness when using -n,
19789,Read from correct offset,
19790,Fix buffer reuse,
19791,tests,
19792,initial api and command,
19793,initial log api impl,
19794,changelog,
19795,Merge pull request #1458 from nak3/plan-stdin,Support nomad plan to take jobfile from stdin
19796,Merge pull request #1463 from micheal/patch-1,Update taskconfig.html.md
19797,Update taskconfig.html.md,Remove references to domain.com. RFC 2606 (https://www.rfc-editor.org/rfc/rfc2606.txt) reserves module for use in documentation. module is a real website.
19798,Support nomad plan to take jobfile from stdin,
19799,changelog,
19800,Merge pull request #1457 from hashicorp/f-kill-event,Add killing event and mark task as not running when killed
19801,changelog,
19802,Merge pull request #1454 from hashicorp/b-blocking-stats,Driver Kill() does not block Stats()
19803,Merge pull request #1453 from hashicorp/d-fs-tail,Documentation for tail and the stream endpoint
19804,changelog,
19805,Merge pull request #1460 from hashicorp/f-validate-stdin,Validate command accepts input from stdin
19806,changelog,
19807,Merge pull request #1443 from mwieczorek/windows-network-linkspeed,Link speed for windows network fingerprinting
19808,Link speed for windows network fingerprinting - tests,
19809,validate from stdin,
19810,changelog,
19811,Merge pull request #1459 from maier/master,Circonus integration for telemetry metrics
19812,Change circonus_broker_search_tag to circonus_broker_select_tag to match option in consul,
19813,Circonus integration for telemetry metrics,
19814,Merge pull request #1438 from nak3/show-cpu-mhz,[tiny] Output MHz to CPU resouces in alloc-status
19815,Add killing event and mark task as not running when killed,
19816,Node.Register handles the case of transistioning to ready and creating evals,
19817,Retrieve task runners in helper,
19818,document endpoint,
19819,Docs,
19820,small cleanup of run command error msg,
19821,Merge pull request #1449 from nak3/fix-syslog-plugin,Return when nomad syslog command has invalid number of argument
19822,Merge pull request #1447 from nak3/fix-error-nomad-run,Fix nomad run parse error
19823,Merge pull request #1445 from dkong/b-docs-exec,Docs: Fix list of chroot directories
19824,Return when nomad syslog command has invalid number of argument,
19825,Fix nomad run parse error,
19826,Docs: Fix list of chroot directories,The chroot list was updated in https://github.com/hashicorp/nomad/commit/be1266e42d9951c746a2b50d6671f4679cf5e7be
19827,changelog,
19828,Merge pull request #1434 from hashicorp/b-nil-empty,Sanitize empty slices/maps in Jobs
19829,fix validation tests,
19830,Merge pull request #1442 from nak3/fix-doc-example,[doc] Fix job example to use system scheduler with count 5
19831,InitFields to Canonicalize,
19832,Sanatize incoming slices/maps,
19833,Link speed for windows network fingerprinting,
19834,Merge pull request #1437 from nak3/fix-init-template,[tiny] Fix an indent in init template
19835,Merge pull request #1429 from nak3/default-resources,Update comments for the DefaultResources and DefaultLogConfig
19836,Merge pull request #1439 from nak3/fix-error-message,Add missed service name of the error message for the invalid port
19837,Merge pull request #1440 from nak3/fix-allocating-ports-example,[docs] Write allocate ports example accurately
19838,Merge pull request #1441 from nak3/remove-index-count,Stop using index in the error message for the task and task group validation
19839,Merge pull request #1436 from nak3/fix-jvm_options-example,[docs] Use array for jvm_options example in JAVA Driver
19840,[doc] Fix job example to use system scheduler with count 5,
19841,Stop using index for task and task group validation,
19842,[docs] Write allocate ports example accurately in the doc of the docker driver,
19843,Add missed service name of the error message for the invalid port,
19844,[tiny] Output MHz to CPU resouces in alloc-status,
19845,[tiny] Fix an indent in init template,
19846,Use array for jvm_options example in JAVA Driver,
19847,Merge pull request #1435 from mlafeldt/remove-code-snippet,Remove unrelated code snippet from docs
19848,Fix indent of args block,
19849,Remove unrelated code snippet from docs,
19850,Update comments for the DefaultResources and DefaultLogConfig,
19851,Merge pull request #1431 from mlafeldt/basic-auth,Add HTTP basic auth support to Nomad client code
19852,Merge pull request #1432 from mlafeldt/fix-typos,Fix typos in documentation and source code
19853,Merge pull request #1321 from mwieczorek/f-windows-binds,Volume binds for windows containers
19854,Fix typos in source code,
19855,Fix typos in documentation,
19856,Add HTTP basic auth support to Nomad client code,"In order to authenticate against protected endpoints, e.g. module Instead of adding username and password to module, this is a rather simple change to the request handler code that passes along any basic auth information."
19857,Merge pull request #1425 from dvusboy/update_constraints_doc,Replace module with module
19858,Replace module with module," while HCL job-spec uses module, JSON uses module module is required, it no longer defaults to module   (@see nomad/structs/structs.go#L2297)"
19859,Merge branch 'master' of github.com:hashicorp/nomad,
19860,Changelog,
19861,Merge pull request #1420 from hashicorp/f-tail-lines,Implement tail -n
19862,Allow following of files when cating and fix offsets,
19863,Changelog,
19864,Merge pull request #1421 from hashicorp/f-system-count-zero,Allow count 0 on system jobs
19865,Add FrameReader test,
19866,Allow count 0 on system jobs,
19867,Merge pull request #1383 from hashicorp/f-job-summary,Job Summary - Part 1
19868,implement -n for tail,
19869,Fixed typos in comments,
19870,Removing the queued state of Job Summary and alloc desired status false,
19871,frames to reader,
19872,Changelog,
19873,Merge pull request #1404 from hashicorp/f-streaming,Implement a streaming API and tail in the fs command
19874,address comments,
19875,Renamed jobsummary to job_summary,
19876,Refactored the test,
19877,Accounting lost state of allocations,
19878,changelog,
19879,Merge pull request #1403 from hashicorp/f-hold-rpc,Gracefully handle short lived outages by holding RPC calls
19880,Added a method for listing jobs whose id matches a prefix,
19881,Added a test to ensure client alloc updates are happening properly,
19882,Updated logic to handle change in desired status of allocation when client status is still pending,
19883,Added test for job summary restore,
19884,Added methods to save and restore job summary snapshots,
19885,handled the logic of task group count going up,
19886,Added a test to ensure correctness of job summary  when client updates alloc,
19887,Added test to make sure summary gets deleted when job gets deleted,
19888,Implemented logic to update the job summary when allocs are inserted,
19889,Implemented job state accounting logic for upsert job,
19890,Added a schema for summarizing status of jobs,
19891,tests wait for the container to start,
19892,Merge pull request #1410 from hashicorp/f-client-lost-state,Changing the state of an allocation to lost if the node on which it w…
19893,Handling allocations with client state pending,
19894,Debug timeout,
19895,Docker host network test,
19896,Address more comments,
19897,Tests and handle conn close behavior better,
19898,version bump,
19899,Merge pull request #1405 from novilabs/delay-on-startup-failure,"do not fail for multiple startup failures, delay instead"
19900,Use anchored regexp for filtering vendored tests,
19901,test policy delay for startup error,
19902,"if policy mode is delay, do not fail for multiple startup failures, delay instead",
19903,Changing the state of an allocation to lost if the node on which it was running was marked as down,
19904,Merge pull request #1409 from hashicorp/f-client-lost-state,Skipping travis tests and not installing rkt on travis
19905,Merge pull request #1408 from hashicorp/b-speedup-unit-tests,Remove xargs(1) from testing and rely on module.
19906,Introduced an env var for rkt tests,
19907,Skipping travis tests and not installing rkt on travis,
19908,"... oh wow.  This is an ""improvement.""",
19909,"When sudo(1)'ing to run the tests, use the abspath of the current user's",go(1) instead of whatever is in root's PATH.
19910,Add debugging to figure out why Travis can't find module when sudo'ing,but xargs(1) could.
19911,Remove xargs(1) from testing and rely on module.,"Tests are approaching 30min largely due to recompiling every package. Out of a ~30min build, only ~5min are actually spent running the tests, the remaining time is spent recompiling."
19912,Merge pull request #1407 from hashicorp/f-resource-isolation-fingerprinter,Conditionalize platform tests
19913,Alpha-sort the build platforms,
19914,Merge branch 'master' into f-resource-isolation-fingerprinter,
19915,Darwin currently has allocdir support.,Pointed out by: @dadgar
19916,Remove cgroup fingerprinter from non-linux systems.,If someone wants to extend or reuse Cgroup detenction in the future they can move module to module and add the relevant build tags. Requested by: @dadgar
19917,Merge pull request #1388 from novilabs/support-docker-syslog-unixformat-and-defaultformat,Support docker syslog unixformat and defaultformat
19918,Get windows to build,
19919,initial comments,
19920,Merge branch 'f-resource-isolation-cleanup' into f-resource-isolation-fingerprinter,
19921,Merge pull request #1402 from hashicorp/f-resource-isolation-cleanup,Resource isolation cleanup
19922,"Rename resourceContainer{,Context} and resCon{,Ctx}.",
19923,Add a comment describing IsolationConfig,
19924,Merge branch 'b-exec-cleanup' into f-resource-isolation-cleanup,
19925,Merge pull request #1400 from hashicorp/b-exec-cleanup,Initialize the list of available fingerprinters per platform.
19926,Improve readability: use of a switch vs two if's,
19927,Skip the network fingerprinter test when offline.,"Conditionalize the network fingerprinter test so that it works when a user is offline.  Similarly, when the network fingerprint test fails in the future pass a HINT to the user to set an env var to allow the test to be skipped in the future."
19928,Fix test for non-Linux platforms.,"The following tests now check a whitelist for whether or not their driver is present or not, or if the OS is supported or not.  module module (module driver) module (module driver) module (module driver)"
19929,Build the Cgroup fingerprinter on only Linux.,"Change the logic from module to an empty build tag so that if another platform picks up Cgroups support they can add themselves to the necessary build tags for this fingerprinter and be on their way. Because this technology isn't inherently Linux-specific and isn't mutually exclusive of other resource isolation containers, resist the urge to rename the Cgroup fingerprinter to something generic like the ResourceContainerFingerprinter."
19930,Merge pull request #1398 from hashicorp/b-check-timeout,Fixed the validation logic for check timeout and interval
19931,StreamFramer tests,
19932,"StreamFramer encapsulates the sending, heartbeating and batching behavior of frames",
19933,"Only initialize watcher once, fix offsetting, implement tail non-follow",
19934,initial command implementation,
19935,Set up for testing,
19936,Flush and use correct buffer size,
19937,initial tail impl,
19938,nomad: modify forward RPC to hold when no known leader,
19939,nomad: Add RPCHoldTimeout to tune RPC hold interval,
19940,Update comments and pushdown a lock into the resource container,
19941,Push down the Linux-specific bits into resourceContainer,
19942,Move unit tests around into per-platform where appropriate.,
19943,Push the Client's cleanup of Cgroups down,
19944,Rename resourceContainer.cleanup() to executorCleanup(),Not to be confused with the imminent ClientCleanup().
19945,Begin cgroup pushdown into platform specific files,
19946,Centralize the fingerprintrs.,Add platform specific fingerprinters per platform. Requested by: @diptanu
19947,Initialize the list of available fingerprinters per platform.,
19948,Fixed a debug message,
19949,Merge pull request #1399 from hashicorp/b-exec-cleanup,WIP: Cleanup exec driver
19950,Consolidate fingerprinters into a single module.,
19951,Added a test,
19952,Fixed the validation logic for check timeout,
19953,Merge pull request #1396 from hashicorp/b-task-host-port,Fixed the host port environment variable
19954,Move all non-Linux Fingerprinter items to the default exec driver,
19955,Fixed tests,
19956,Fixed the client tests,
19957,Merge pull request #1395 from hashicorp/f-check-port,Allowing ports to be overriden in check definitions
19958,Using net.JoinHostPort instead of handcrafting addrs,
19959,Fixed the host port environment variable,
19960,Allowing ports to be overriden in check definitions,
19961,Merge pull request #1394 from rsyabuta/d-update-attr,update docs to use the new hostname attribute
19962,update docs to use the new hostname attribute,
19963,First use of term,"Expand first use of HashiCorp Configuration Language in this page, followed by the abbreviated form"
19964,Minor clarification,Point out that the agent should be back up and running again before proceeding to the run a job step.
19965,Merge pull request #1390 from hashicorp/docs,Added an upgrade guide for the 0.4.0 release
19966,Update the sentence,
19967,Added an upgrade guide for the 0.4.0 release,
19968,"remove the expected leading space, after the colon in syslog",
19969,"get into the hour minute second part of the time before looking for spaces, and then looking for the : seperator",
19970,Fixed the metric names for allocation metrics,
19971,Fixed typo,
19972,Replacing programs with processes,
19973,Merge pull request #1379 from hashicorp/client-telemetry-docs,updated the telemetry docs page to reflect the statistics published b…
19974,Changed the metric name for host cpu core and disk,
19975,Fixed the docs related to allocation stats,
19976,Merge pull request #1380 from hashicorp/d-hcl-only,Document validate works on HCL only
19977,Document HCL only,
19978,Fixed the docs related to client host stats,
19979,Merge pull request #1377 from nkvoll/patch-1,Update Nomad version used in Vagrant demo to 0.4.0
19980,Merge pull request #1373 from hashicorp/d-operating-job,Documentation for operating a job
19981,updated the telemetry docs page to reflect the statistics published by the Nomad client,
19982,Update Nomad version used in Vagrant demo to 0.4.0,
19983,respond to comments,
19984,remove CT example,
19985,Updating,
19986,accessing logs,
19987,Service discovery links to docs,
19988,Merge pull request #1370 from dbresson/Fix-documented-mem-units,Fix units in NOMAD_MEMORY_LIMIT documentation
19989,Fix units in NOMAD_MEMORY_LIMIT documentation,
19990,resource usage,
19991,inspecting state,
19992,Task Configurations,
19993,layout framework,
19994,Add OSs back to build script,
19995,Release v0.4.0,
19996,Merge branch 'master' of github.com:hashicorp/nomad,
19997,Release v0.4.0,
19998,version bump,
19999,Merge pull request #1366 from hashicorp/b-stats-restart,Set running when restoring
20000,Set running when restoring,
20001,Small creating a cluster fixes,
20002,Merge pull request #1361 from hashicorp/cluster-docs,Added docs around bootstrapping a Nomad cluster
20003,Modified docs,
20004,mark that periodic is optional,
20005,Added a section about fedaration of clusters,
20006,Merge pull request #1364 from hashicorp/update-gopsutil,Updated gopsutil
20007,Updated gopsutil,
20008,Merge pull request #1360 from hashicorp/b-gc-batch,Disallow EvalGC to reap batch jobs evals/allocs and make JobGC only oneshot GC everything
20009,comments,
20010,Merge pull request #1363 from wuub/master,Fix docker driver lockup during nomad boot
20011,Fix docker driver lockup during nomad boot  ,Unit mismatch caused docker driver to wait almost indefinitely during boot  (when one or more containers were a bit uncooperative during StopContainer()) This should fix problems described in  #1202
20012,Disallow EvalGC to reap batch jobs evals/allocs and make JobGC only oneshot GCs everything,
20013,Merge branch 'master' of github.com:hashicorp/nomad,
20014,changelog,
20015,Merge pull request #1362 from hashicorp/b-vendor-columnize,Update columnize to include optimized code
20016,update columnize to include optimized code,
20017,Merge pull request #1355 from hashicorp/d-getting-started,Update getting started docs
20018,Merge pull request #1354 from hashicorp/d-client-http,Cleanup Client HTTP API docs
20019,Merge pull request #1358 from novilabs/write-temp-and-rename-state,write state to temp file and then rename
20020,Added docs around bootstrapping a Nomad cluster,
20021,write state to temp file and then rename,
20022,Update getting started,
20023,clean up stats,
20024,Unify the stats http API docs,
20025,Merge pull request #1353 from hashicorp/b-requeue,Properly handle reblocking evaluations by storing the eval token
20026,Reblock test,
20027,Remove requeue because it is a subset of EnqueueAll now,
20028,When enqueuing into eval broker always pass blocked eval's token,
20029,UnblockFailed needs to untrack the job,
20030,Merge pull request #1351 from hashicorp/b-unblockfailed-delete-job,UnblockFailed needs to untrack the job
20031,UnblockFailed needs to untrack the job,
20032,plan api docs,
20033,Merge pull request #1350 from hashicorp/f-updating-tests,Update failing tests
20034,Update failing tests,
20035,Revert changes to build script,
20036,Release v0.4.0-rc2,
20037,Merge pull request #1348 from hashicorp/fix-gopsutil-windows386,Fixed build on windows/386
20038,Fixed build on windows/386,
20039,Merge pull request #1344 from hashicorp/b-consul-service-name,Fixed parsing of consul agent service names
20040,Merge pull request #1347 from hashicorp/f-log-granularity,use microsecond granularity in logs
20041,use microsecond granularity,
20042,Merge pull request #1346 from hashicorp/f-computed-class-cpu,Floor CPU MHz and total compute and mark hostname as unique
20043,Treat float as int,
20044,Floor CPU MHz and total compute and mark hostname as unique,
20045,Merge pull request #1329 from hashicorp/f-read-job-from-stdin,Read Nomad Jobfile from STDIN if specified.
20046,Update website docs,
20047,Fixed parsing of consul agent service names,
20048,refresh index eval id in log,
20049,Merge pull request #1341 from hashicorp/b-dead-job-gc,GC-ing dead batch jobs
20050,Fixed name of a test,
20051,GC-ing dead batch jobs,
20052,changelog,
20053,Merge pull request #1339 from hashicorp/b-wait-index-statestore,"Worker waitForIndex uses StateStore index, not Raft Applied Index"
20054,Do not use snapshot,
20055,tighter index bound when creating GC evals,
20056,"Worker waitForIndex uses StateStore index, not Raft Applied Index",
20057,Add test for reading jobfile from stdin,
20058,Merge branch 'master' of github.com:hashicorp/nomad,
20059,Bumping up the version to rc2,
20060,Merge pull request #1337 from hashicorp/update-memberlist-deps,Updated the memberlist dependency
20061,Updated the memberlist dependency,
20062,Merge pull request #1335 from hashicorp/f-set-docker-timeout,Setting a timeout in the docker client
20063,Merge pull request #1336 from hashicorp/f-default-ssl-docker-registry,Making SSL default
20064,Setting a timeout in the docker client,
20065,Updated docs,
20066,Merge pull request #1332 from Lennie/patch-1,Added note/link to Vagrant installation instructions
20067,Making SSL default,
20068,Added note/link to Vagrant installation instructions,"So I spent an hour or more trying to figure out why Docker did not install, turns out installing vagrant from the Linux distribution is a stupid idea. So hopefully a link will help prevent other people running into this problem."
20069,Formatting updates,
20070,Formatting changes,
20071,Merge pull request #1331 from hashicorp/b-shuffle-remote-dcs,Fix the shuffling of remote datacenters
20072,Code golf,Pointed out by: @dadgar
20073,"Remove debugging, add newline to website docs",
20074,"Update from comments, initial test function",
20075,Fix the shuffling of remote datacenters.,Pointed out by: @ryanuber
20076,vendor go-dockerclient,
20077,Read Nomad Jobfile from STDIN if specified.,"Allows module to read a nomad jobfile from stdin. This allows templating, and in-memory configuration to occur without writing a static Nomad jobfile."
20078,Website update,
20079,Merge pull request #1326 from hashicorp/b-handle-max-plans,Handle max plans evaluation in generic scheduler
20080,test for max plan,
20081,Handle max plans,
20082,Merge pull request #1325 from hashicorp/emit-stats-remove-pids,Not emitting per-pid stats and added the total ticks consumed by a Task
20083,Not emitting per-pid stats and added the total ticks consumed by a Task,
20084,changelog,
20085,Merge pull request #1322 from hashicorp/b-docker-logs-splicing,Make line copy to avoid being overriden by subsequent scans
20086,Make line copy to avoid being overriden by subsequent scans,
20087,Volume binds for windows containers,
20088,Merge pull request #1320 from hashicorp/b-nan,Guard against NaN in disk stats
20089,guard against NaN,
20090,Merge pull request #1319 from hashicorp/b-coarse-lock,finer grain locking on LatestAllocStats
20091,finer grain locking,
20092,Merge pull request #1316 from tbartelmess/patch-1,Fixed a typo
20093,Fixed a typo,
20094,Merge pull request #1314 from hashicorp/f-protect-alloc-nil,Guard against bad restore in alloc runner
20095,remove bind_addr from test config,
20096,Guard against bad restore,
20097,remove resolving client rpc addr,
20098,Driver tests use client default config,
20099,changelog,
20100,Merge pull request #1313 from hashicorp/b-update-gopsutils,Update gopsutils
20101,Improve the error messages when obtaining node and alloc stats,
20102,Lump this fix in with gopsutils: guard against errors from stats.,
20103,Update gopsutils,
20104,Initialize the stats helpers before accessing them for the first time,
20105,Merge pull request #1307 from hashicorp/f-fingerprint-cpus,F fingerprint cpus
20106,Merge pull request #1310 from hashicorp/b-logger,Create and pass only one module object around per Agent
20107,Merge pull request #1309 from hashicorp/b-fix-consul-tls,Teach config.ConsulConfig how to construct a consulapi TLS client.
20108,Memoize the CPU stats.  Error if CPU fingerprinting fails.,
20109,debug message when stopping container,
20110,Record and use only the first Mhz from the CPU fingerprinter.,Assume all cores are the same speed.
20111,Provide module with a default module of module,
20112,Pass a logger arg to module and module,
20113,"Remove the shutdownCh as an argument, it was already present in the receiver",
20114,Remove the FreeBSD exclusion rule.,Other *NIX systems may be eligible for being removed from this list but I am not in a position to support or test them at present.
20115,Improve FreeBSD's CPU detection.  Cherrypicked from shirou/gopsutil#219.,
20116,"In the debug log, split the unit from the measurement",awk(1) friendly is UNIX(tm) friendly.
20117,Warn when we're unable to fingerprint the CPU Mhz,
20118,Explicitly call module to determine the CPU core count,Much safer than counting the number of InfoStat structs returned.
20119,Teach config.ConsulConfig how to construct a consulapi TLS client.,"Said differently, centralize the creation of consul's client config in one place and use it everywhere."
20120,Fix tests,
20121,Update the docs for installing from source,
20122,"Fix tests, don't take the address of DefaultConsulCommand()",
20123,Ignore log files,
20124,Merge pull request #1308 from hashicorp/b-clenaup-consulconfig-defaults,Create config.DefaultConsulConfig()
20125,Create config.DefaultConsulConfig(),
20126,Allow test flags to be overridden from the environment.,
20127,Only register the Client services reaper when module is enabled,
20128,Merge pull request #1306 from hashicorp/b-remove-client-rpc,"Remove client registration of RPC services, only servers have an RPC …"
20129,"Remove client registration of RPC services, only servers have an RPC interface",
20130,Merge pull request #1305 from hashicorp/f-autoreg-checks,F autoreg checks
20131,Use module (vs module).,
20132,"Automatically register service checks for HTTP, RPC, and Serf.",
20133,Whitespace police,
20134,Merge pull request #1304 from hashicorp/d-plan-cli,plan cli docs
20135,plan cli docs,
20136,Merge pull request #1299 from hashicorp/d-node-status,Update node-status docs
20137,module -> module,
20138,Merge pull request #1301 from hashicorp/b-update-hashicorp-raft,Update various moduleed libs with known good fixes.
20139,Merge pull request #1303 from hashicorp/b-client_tests,Fix tests for NewServer() in client mode.
20140,Fix tests for NewServer() in client mode.,Pointy-hat: sean- I'm positive I've done this before.
20141,Merge pull request #1302 from hashicorp/b-typos,Misc typos
20142,Misc typos,
20143,Noop update for hashicorp/yamux,
20144,Update github.com/hasicorp/go-memdb,
20145,Update github.com/hashicorp/serf,
20146,Update github.com/hashicorp/memberlist,
20147,Update github.com/hashicorp/go-immutable-radix,
20148,Noop upgrade for armon/go-radix,
20149,Remove hashicorp/raft/bench,
20150,No updates for hashicorp/raft-boltdb,
20151,Update hashicorp/raft,
20152,Update node-status docs,
20153,Merge pull request #1298 from hashicorp/b-auto-join,Only auto-join clients if module is true
20154,Only auto-join clients if module is true,
20155,Merge pull request #1297 from hashicorp/b-golint,A few linter fixes
20156,Test for errors,
20157,Don't assign to an atomic w/o using atomic setter func,
20158,Changelog++: server autojoin,
20159,Merge pull request #1276 from hashicorp/f-consul-server-autojoin,Teach Nomad servers how to fall back to Consul.
20160,Fix up various error handling,
20161,Merge pull request #1296 from hashicorp/d-status-cli,Update status docs
20162,Immediately query Consul upon initialization if we have no peers.,Also don't attempt to join the Server with itself.
20163,Merge pull request #1295 from hashicorp/remove-stats-config,Removed the stats block from client configuration
20164,Update status docs,
20165,Merge pull request #1285 from hashicorp/fix-selinux-options,Added a client options for setting selinux options
20166,Changed the client options for docker volume selinux labels,
20167,Removed the stats block from client configuration,
20168,Merge branch 'master' of github.com:hashicorp/nomad,
20169,changelog,
20170,Merge pull request #1294 from hashicorp/b-task-runner-panic,Guard against restoring a nil task in task_runner
20171,Rework module to use a timer instead of the peer count.,"It is perfectly viable for an admin to downsize a Nomad Server cluster down to 1, 2, or module (however ill-advised such activities may be).  And instead of using module, use a timeout-based strategy.  If the module hasn't observed a leader in 15s it will fall back to Consul and will poll every ~60s until it sees a leader."
20172,Define module as an module so it can be manipulated atomically.,
20173,Guard against restoring a nil task in task_runner,
20174,Merge pull request #1293 from hashicorp/d-port-map-docks,Correct the dynamic port specification in Docker docs
20175,correct the dynamic port specification,
20176,Use the module verb in log messages (vs module).,
20177,remove consul reference,
20178,remove trace,
20179,increase timeout,
20180,Merge pull request #1289 from hashicorp/f-plan-periodic-launch,Plan displays launch time of periodic jobs
20181,Give relative time,
20182,plan displays launch time of periodic jobs,
20183,Merge pull request #1288 from hashicorp/b-system-sched-failed,Track failed allocations properly in System scheduler
20184,track failed allocations properly,
20185,Use the config's log output,
20186,Namespace the log messages,
20187,Do not consider the number of Serf members when considering falling back to Consul.,
20188,Guard the auto-join functionality behind its module tunable,
20189,Shuffle all datacenters vs only the nearest N datacenters.,"Per discussion, we want to be aggressive about fanning out vs possibly fixating on only local DCs.  With RPC forwarding in place, a random walk may be less optimal from a network latency perspective, but it is guaranteed to eventually result in a converged state because all DCs are candidates during the bootstrapping process."
20190,Bump various Consul search limits,"Client: Search limit increased from 4 random DCs to 8 random DCs, plus nearest. Server: Search factor increased from 3 to 5 times the bootstrap_expect. This should allow for faster convergence in large environments (e.g. sub-5min for 10K Consul DCs)."
20191,Short-circuit the bootstrapFn if we have a leader,
20192,Teach Nomad servers how to fall back to Consul.,
20193,Merge pull request #1287 from hashicorp/f-improve-client-consul-bootstrap,client.consul_bootstrap: Use Status.Peers instead of Status.Ping
20194,Use Status.Peers instead of Status.Ping,
20195,Merge pull request #1273 from hashicorp/docs-stats,Added the docs for the stats http api endpoint
20196,Fixed the nav links to stats APIs,
20197,Added the links to the stats pages on the sidebar,
20198,Merge pull request #1284 from hashicorp/add-warn-message,Added a warn message for deprecated consul options
20199,Updated CHANGELOG,
20200,Added documentation,
20201,Updated changelog,
20202,Added a client options for setting selinux options,
20203,Added a warn message for deprecated consul options,
20204,Merge pull request #1283 from hashicorp/d-consul-configs,Document consul configuration
20205,Fix defaults and updates,
20206,address comments,
20207,Document consul configuration,
20208,Merge pull request #1279 from hashicorp/b-rename-reg-to-advertise,"Disambiguate module from module, rename module to module."
20209,"Disambiguate module from module, rename reg to module.",Provide an option that describes the value to the user vs the operation performed by the software.  Momentarily introducing module
20210,Merge pull request #1278 from hashicorp/f-vagrantcpu-count,Bump the CPU count on the primary box to module on Darwin
20211,Bump the CPU count on the primary box to module on Darwin,
20212,up test timeout,
20213,guide,
20214,bump version,
20215,Merge pull request #1275 from hashicorp/b-disable-syncer-checks,Temporarily disable various syncer checks due to the API changes made…
20216,Temporarily disable various syncer checks due to the API changes made earlier today.,
20217,Merge pull request #1274 from hashicorp/b-validate-interval,Validate interval values in service checks
20218,Fix up validation and allow existing unset timeouts to continue to be unset,
20219,"Upon further review, the Timeout needs to be validate for more than script checks.",This value is used for Consul HTTP and TCP checks.
20220,"Remove diff check for ServiceID, may it R.I.P.",
20221,Guard against an interval and timeout being less than 1s,
20222,Don't export ServiceCheck validate,
20223,vendor hcl,
20224,"There is no ""docker"" check type",
20225,Drive-by comment correction,
20226,Added the docs for the http api endpoint,
20227,Merge pull request #1272 from hashicorp/b-consul-fixes,Fix IDs and domain scoping
20228,address comments,
20229,Fix IDs and domain scoping,
20230,Merge pull request #1271 from hashicorp/b-modfied,Change Modfied to Modified
20231,Change Modfied to Modified,
20232,Removing unwated line of code,
20233,Merge pull request #1268 from hashicorp/fix-service-reconciliation,implemented reconciliation of unwanted services
20234,implemented reconciliation of unwanted services,
20235,Merge pull request #1267 from hashicorp/b-consul-register-checks,Consul.Syncer register checks and starts delegated checks
20236,agent just calls run,
20237,register checks,
20238,Merge pull request #1266 from hashicorp/b-consul-fixes,Do not reconcile in client and cleanup executor a bit
20239,Do not reconcile in client and cleanup executor a bit,
20240,fix test,
20241,Merge pull request #1264 from hashicorp/b-rename-services,Rename ConsulService back to Service
20242,Merge pull request #1265 from hashicorp/remove-initial-delay,Remove initial delay of registering services with consul
20243,Remove initial delay of registering services with consul,
20244,Rename ConsulService back to Service,
20245,Document user only availabe on linux,
20246,use base 1024 for bytes not 1000,
20247,reworked alloc-status command,
20248,unify cli output,
20249,skip docker test if no docker found,
20250,changelog,
20251,Merge pull request #1262 from hashicorp/remove-artifact-check,Removing artifact check for java and qemu drivers
20252,changelog,
20253,Merge pull request #1261 from hashicorp/f-node-status,Improve node-status command
20254,unify units,
20255,show allocation resources seperate from host,
20256,initial refactor and cleanup,
20257,Merge pull request #1260 from hashicorp/f-alloc-stats-struct,Allocation resources returned in a struct
20258,Test fixes,
20259,only support latest and remove ring buffer,
20260,Merge pull request #1263 from hashicorp/fix-driver-ticks,Fix the calculation of total ticks for docker and exec
20261,Fix the calculation of total ticks for docker and exec,
20262,Setting a flag to indicate whether fs isolation is indeed happening,
20263,Not converting the abs path relative to task dir for drivers which enforce FS isolation only in linux,
20264,Removing artifact check for java and qemu drivers,
20265,Allocation resources returned in a struct,
20266,changelog,
20267,Updated changelog,
20268,Add a note re: Nomad Clients auto-joining Nomad Servers,
20269,Merge pull request #1259 from hashicorp/fix-node-ticks,Fixed the calculation of the host node ticks
20270,Removing un-used code,
20271,changelog,
20272,Fixed the calculation of the host node ticks,
20273,Merge pull request #1243 from hashicorp/f-run-modify-index,Add check-index flag to nomad run
20274,Merge pull request #1201 from hashicorp/f-dyn-server-list,Dynamic Server Lists/Client Bootstrapping via consul.
20275,Walk the DCs from nearest to most remote.,
20276,changelog,
20277,Merge pull request #1256 from hashicorp/b-node-gc,Improve partial garbage collection of allocations
20278,"Walk the DCs from nearest to most remote, no limit on the search.",
20279,Prefer module over module in log messages.,
20280,Remove default values and use nil for the executor.  Much better.,
20281,Merge pull request #1258 from hashicorp/fix-statsd-metric-type,Emitting client resource usage metrics as guages instead of k/v pairs
20282,Emitting client resource usage metrics as guages instead of k/v pairs,
20283,Don't require slash for node stats,
20284,Merge pull request #1257 from hashicorp/fix-docker-wait,Using a different client for collecting stats and waiting on containers
20285,Using a different client for collecting stats and waiting on containers,
20286,Merge pull request #1253 from hashicorp/fix-ticks-task,Calculating the cpu ticks in nomad client
20287,Moving the clkspeed code to helper,
20288,Perform a nil-check for Executor's consulServices.,Executors can module before calling module.
20289,goling(1) compliance pass (e.g. Rpc* -> RPC),
20290,Query for the Nomad service across multiple Consul datacenters.,
20291,"Expose rpcproxy's module constructor, module as module",
20292,remove vet,
20293,Partial GC allocations,
20294,Extracted a method for getting clock speed,
20295,Pruning out pids which are no longer present,
20296,Not reset-ing the list of pids if they don't change,
20297,Merge pull request #1255 from hashicorp/b-infinite-requeue,Only unblock if missed class was added after eval snapshot index
20298,test,
20299,Only unblock if missed class was added after eval snapshot index,
20300,Checking in the stats helper package,
20301,Implementing the total ticks per task for the docker driver,
20302,Calculating total ticks consumed in the nomad client,
20303,Merge pull request #1254 from hashicorp/b-parse-artifact-options,Don't create options unless necessary
20304,Fix another unit test not expecting ServiceID,
20305,Restore old behavior and have AddPrimaryServer() return a pointer to the existing server (vs nil when the server already exists).,
20306,Using humanize to convert memory usage to MB,
20307,Calculating the cpu ticks in nomad client,
20308,Prevent duplicate servers being added in AddPrimaryServer.,This logic was already present elsewhere and was missed in this one place.
20309,Always create a consul.Syncer. Use a default Consul Config if necessary.,
20310,Always create a consul.Syncer. Use a default Consul Config if necessary.,
20311,"Commit miss, bump to 5s",
20312,Remove useless statement,
20313,Rename listLock to activatedListLock,
20314,Nomad does not use Serf at the client level.  Use a hard lock.,
20315,golint(1) police,
20316,Formatting nit: remove brackets,
20317,Prefix all log entries in client/rpcproxy with client.rpcproxy,
20318,Fold RaftPeers() into its only call site now,
20319,Style nit: remove module block,
20320,Always pass in a snapshot before calling constructNodeServerInfoResponse(),
20321,Rename module to module,
20322,Stash client and server registration behind consul.auto_register,
20323,"Only return the Client's server addresses, never mix-in server peers",
20324,Properly guard consulPullHeartbeatDeadline behind heartbeatLock,
20325,Move RPCProxy.New() adjacent to its struct definition,
20326,"Hand wave over the syncer tests atm, these will be fixed shortly.",
20327,Don't spam the consul if Consul is not available.,"Log once when Consul goes away, and log when Consul comes back."
20328,Skip nil check for agent's consulSyncer is always not nil,
20329,Properly cover Syncer attributes with the registryLock.,"trackedServices, delegateChecks, trackedChecks, and checkRunners should all be covered.  This lock needs to be reasonably narrow and can't use defer due to possible recursive locking concerns further downstream from the call sites."
20330,Create a consulContext using a client's consul config.,"This is wrong and should be the Agent's Consul Config.  This is a step in the right direction, so committing to mark the necessary future change."
20331,"On Syncer Shutdown, remove all services that match a Syncer's prefix.",
20332,Update the structure of ConsulService to match reality.,ConsulService is the configuration for a Consul Service
20333,Sync checks with Consul by comparing the AgentCheckReg w/ ConsulService,The source of truth is the local Nomad Agent.  Any checks are not local that have a matching prefix are removed.  Changed checks are re-registered and missing checks are re-added.
20334,Sync services with Consul by comparing the AgentServiceReg w/ ConsulService,The source of truth is the local Nomad Agent.  Any services not local that have a matching prefix are removed.  Changed services are re-registered and missing services are re-added.
20335,Populate the RPC Proxy's server list if heartbeat did not include a leader.,"It's possible that a Nomad Client is heartbeating with a Nomad server that has become issolated from the quorum of Nomad Servers.  When 3x the heartbeatTTL has been exceeded, append the Consul server list to the primary primary server list.  When the next RPCProxy rebalance occurs, there is a chance one of the servers discovered from Consul will be in the majority. When client reattaches to a Nomad Server in the majority, it will include a heartbeat and will reset the TTLs AND will clear the primary server list to include only values from the heartbeat."
20336,Generate and sync Consul ServiceIDs consistently,
20337,Rename runChecks to consulAvailable,"Apologies in advance for the variable thrash, the fingerprinter is no longer used to gate whether or not Consul is available any more."
20338,Update Syncer.Run() to call SyncServices().,
20339,"Add ""Service Groups"" to the Syncer.","Now the right way to register services with the Syncer is to call module.  This was required to allow the Syncer to sync either the Client, Server, or Both using a single Syncer."
20340,Initialize Consul for the Nomad Agent in a more uniform way.,"Decompose Client and Server registration into module and module, respectively."
20341,"Per-comment, remove structs.Allocation's Services attribute.",Nuke PopulateServiceIDs() now that it's also no longer needed.
20342,Rename command/agent/consul/sync.go to syncer.go,
20343,Begin leveraging the Agent-level consul.Syncer,
20344,Move the start of the UniversalExecutor's consulSyncer to initialize once,"This should be handled via a sync.Once primative, but I don't want to unpack that atm."
20345,Rename structs.Task's module attribute to module,
20346,Remove Syncer.registerService(),"This call is obsolete by a future commit that changes the canonical source of truth to be consul.AgentServiceRegistration structs, which means it is not necessary to construct AgentServiceRegistration objects every time a registration is made, we just reuse the existing object."
20347,Move package client/consul/sync to command/agent/consul.,"This has been done to allow the Server and Client to reuse the same Syncer because the Agent may be running Client, Server, or both simultaneously and we only want one Syncer object alive in the agent."
20348,Rename Syncer.SetServiceIdentifier to SetServiceRegPrefix(),"This attribute isn't actually an identifier because it can represent a collection of services.  Rename module to `serviceRegPrefix which more accurately conveys the intention of this Syncer attribute. While here, also rename module to module and module to module."
20349,Change the API signature of Syncer.SyncServices().,"SyncServices() immediately attempts to sync whatever information the process has with Consul.  Previously this method would take an argument of the exclusive list of services that should exist, however this is not condusive to having a Nomad Client and Nomad Server share the same consul.Syncer."
20350,Change the signature of the PeriodicCallback to return an error,"I KNEW I should have done this when I wrote it, but didn't want to go back and audit the handlers to include the appropriate return handling, but now that the code is taking shape, make this change."
20351,Rename structs.Services to structs.ConsulServices,
20352,Refine Nomad's Consul module handling.,"Previously this would immediately default to '127.0.0.1' if the config was set to module.  Now it uses the BindAddr if available.  Also, if the module option is set to just a port` number (e.g. '1234'), attempt to parse the port number by itself to allow statically configured ports to work, even when no host is specified."
20353,Rename createCheck() to createDelegatedCheck() for clarity,
20354,Change client/consul.NewSyncer() to accept a shutdown channel,"In addition to the API changing, consul.Syncer can now be signaled to shutdown via the Shutdown() method, which will call the Run()'ing sync task to exit gracefully."
20355,Remove named return parameters,
20356,Collapse server_endpoint_internal_test.go into server_endpoint_test.go,Requested by: @dadgar
20357,Collapse rpcproxy_internal_test.go into rpcproxy_test.go,Requested by: @dadgar
20358,Bump the default Consul client timeout from 500ms to 5s.,Requsted by: @dadgar
20359,Move module block to the top of the file.,Requested by: @dadgar
20360,Ensure that all accesses to Client.alloc are wrapped by allocLock.,
20361,Use client.getAllocRunners() where appropriate.,
20362,Line wrap long line.,
20363,Rename rpcproxy.UpdateFromNodeUpdateResponse to RefreshServerLists,"While breaking the API within this PR, break out the individual arguments to RefreshServerLists.  The servers parameter is reusing module for the time being, but this can be revisited if the needs of the strucutre diverge in the future."
20364,Fix up the comments,Pointed out by: @dadgar
20365,Make the locking protocol more explicit in client.NewClient,"With an over abundance of caution, preevnt future copy/pasta by using the right locks when bootstrapping a Client.  Strictly speaking this is not necessary, but it makes explicit the locking semantics and guards against future concurrent or parallel initialization."
20366,Use the client configCopy and lock appropriately.,
20367,Flesh out the comment re: the client.rpcproxy.Run() task.,Requested by: Alex
20368,Clean up various comments,
20369,Nuke the last of the explicit types in favor of using language idioms,
20370,Rename module to module,Suggested by: @alex
20371,Use a monotonically incrementing number to create unique node names.,"Also remove the space from the ""name"" of the node"
20372,Push down the server list even on node registration and evaluation,Be mindful of the cost of taking a snapshot from the statestore and reuse the snapshot if one has already been taken.
20373,Don't clobber the default consul config in tests,
20374,Fix typo in comment,
20375,Remove unused variable,
20376,Clean up some docs and comments to be more accurate,
20377,Remove unused constants,
20378,Fix test TestClientConfigCommand_UpdateServers(),"Now that hostnames are validated on input, switch to IPs since they bypass DNS resolution."
20379,Only actively test Consul when env module is set,
20380,Update godoc for newServer to reflect DNS and IP-based inputs,Requested by: alex
20381,Pick the right module from the right package.,Overly zealous search && replace at work here.
20382,Add a quick set of client/rpcproxy.ServerEndpoint equality tests,
20383,Fix building tests that used module but didn't pickup the package move.,
20384,Add some trace-level logging for /v1/agent/servers when writing,"This endpoint shouldn't be hit often, but this could be useful in logs down the road."
20385,Fix config_parse_test to reflect that module does not exist.,"module does, but not module."
20386,Fix tests for client.TestAgent_ServerConfig,Add similar logic in Agent module to set up the module the same as module and module.
20387,Fix the client/rpcproxy unit tests.,
20388,Change the endpoint for module and fix tests.,"When an agent is running a server, the list of servers includes the Raft peers.  When the agent is running a client (which is always the case?), include a list of the servers found in the Client's RpcProxy. Dedupe and provide a unique list back to the caller."
20389,Provide a default ConsulConfig for client/config.DefaultConfig(),"Change the unit test to only test if the consul link exists, not the value of the link.  The old test was hostname specific and therefore would always be different based on the environment running the tests."
20390,Move client.DefaultConfig() to client/config.DefaultConfig(),Resolves an import cycle in testing and is more appropriate because the default should reside next to its struct definition.
20391,Fix a comment to be more correct,
20392,Unused code wasn't as unused as I thought.  Restore.,
20393,"Reconcile, clean up, and centralize API version numbers (major and minor).","Reduce future confusion by introducing a minor version that is gossiped out via the module Serf tag (Minor Version Number, module is already being used for to communicate module). Background: hashicorp/consul/issues/1346#issuecomment-151663152"
20394,Register the serf service with the Nomad server service.,This will be unused in this PR.
20395,Update the module default from module to just module.,
20396,Create a weak decoder to parse time.Duration.,Hat tip to Alex for pointing this out (vs patching mapstructure)
20397,Change the constants used to match the struct definitions,
20398,"When clearing the backup servers, set the length to zero.",
20399,Improve language re: fingerprinting,
20400,Remove unused function.,
20401,Clear the backup server list when a Nomad heartbeat arives with servers,"If Nomad is heartbeating during a transition from using backup servers to Nomad servers, make Nomad the canonical source of servers and flush the list of servers populated from Consul."
20402,Nuke a.consulConfig in favor of a.consul.Config,
20403,Nuke trace-level logging in heartbeats,
20404,Invert error handling logic,
20405,Remove types.ShutdownChannel and replace with module,
20406,Fix unit tests,
20407,Pass the datacenter name in the heartbeat,Servers that are part of a different datacenter are added as backup servers instead of primary servers.
20408,Silence unused variable warning,
20409,Invert check definition so the error is first,
20410,Consolidate all consul sync periodic go routines to handlers.,Only one pump and periodic loop now.
20411,Teach Client to reuse an Agent's consulSyncer.,"""There can be only one."""
20412,"Register two services each for clients and servers, http and rpc.","In order to give clients a fighting chance to talk to the right port, differentiate RPC services from HTTP services by registering two services with different tags.  This yields module and module which is immensely more useful to clients attempting to bootstrap their world."
20413,"Advertise the server's RPC endpoint, not its HTTP endpoint.",Rename c.serverRpcAddr to serverRpcAddr.  This will be broken out into in additional set of services in a subsequent commit.
20414,Fix typo in the comment to reflect the actual function name.,
20415,Bump the cluster test minimums to 10min.,"These ranges aren't too useful with the default 600s rebalance, but will be useful if that default ever changes in the future."
20416,s/RpcVersion/RPCVersion/g,
20417,Bump shuffle interval per suggestion from Alex,
20418,Move struct member to reduce diff context,
20419,Fix package name in comments,
20420,Rename the package from module to module,Also rename module to just module to avoid package stutter.
20421,Rename manager_test.go to rpc_proxy_test.go,
20422,Rename RpcProxy's internal filename to match,
20423,Remove unused code,
20424,Reduce all forms of ConsulConfig down to a single struct,nomad/structs/config/consul.go's ConsulConfig is the canonical definition for all things Consul now.
20425,Rebalance Nomad client RPCs among different Nomad servers.,Implement client/rpc_proxy.RpcProxy.
20426,Rename ConsulConfig to ConsulAgentConfig,
20427,Rename consulConfig to consulAgentConfig,
20428,Rename client/config/config's ConsulConfig to ConsulAgentConfig,A follow up commit to the previous rename.  More to come.
20429,Use the correctly typed module variant,
20430,Use module where appropriate,
20431,Centralize the creation of a consul/api.Config struct.,"While documented, the consul.timeout parameter wasn't ever set except one-off in the Consul fingerprinter."
20432,"Rename module to module. Gratuitous, but more correct.",
20433,Reconcile consul's address configuration section.,"There were conflicting directives previously, both consul.addr and consul.address were required to achieve the desired behavior.  The documentation said module was the canonical name for the parameter, so consolidate configuration parameters to module."
20434,Correct a mismerge,Somewhere along the lines when rebasing I mis-merged a patch.
20435,Remove testing for an API that doesn't exist any more.,
20436,Rename RpcProxy's internal filename to match,
20437,Reconcile renamed structures during rebase,
20438,index on f-dyn-server-list: bd38cb4 Remove unused code,
20439,Remove unused code,
20440,Only poll Consul for servers when Nomad heartbeats begin to fail,"When a deadline timer of 2x Server's last requested TTL expires, begin polling Consul for Nomad Servers."
20441,An Agent's consulSyncer is always not nil now.,
20442,Revise Agent.syncAgentServicesWithConsul()'s interface,Reduce down to its lowest common helper function denominator.
20443,Alpha sort config keys for Consul,
20444,s/availble/runChecks/g,
20445,Reduce all forms of ConsulConfig down to a single struct,nomad/structs/config/consul.go's ConsulConfig is the canonical definition for all things Consul now.
20446,Define a type for the PeriodicCallback handlers and ShutdownChannel,
20447,Rebalance Nomad client RPCs among different Nomad servers.,Implement client/rpc_proxy.RpcProxy.
20448,Rename NewConsulService to NewSyncer,
20449,Rename client/consul/sync.PeriodicSync to Run,
20450,Rename client/consul/sync.ConsulService to client/consul/sync.Syncer,Syncer describes the responsibility and actions of the type.
20451,Create a module to break an import cycle.,Flattening and normalizing the various Consul config structures and services has led to an import cycle.  Break this by creating a new package that is intended to be terminal in the import DAG.
20452,Fix copy pasta comment.,"These parameters are used to bootstrap Nomad servers, not Consul servers."
20453,Distill config.Config.ConsulConfig down to config.Config.Consul,The enclosed struct provides the necessary context
20454,Rename ConsulConfig to ConsulAgentConfig,
20455,Rename consulConfig to consulAgentConfig,
20456,Rename client/config/config's ConsulConfig to ConsulAgentConfig,A follow up commit to the previous rename.  More to come.
20457,Rename consul.ConsulConfig to consul.AgentConfig,"There were two module structs running around, one of them needed to go away.  Rely on the package's path to provide context for the type of AgentConfig."
20458,Use the correctly typed module variant,
20459,Seed random once in main,
20460,Fix small typo,
20461,Use module where appropriate,
20462,Use consul/lib's RandomStagger,Removes four redundant copies of the method in the process.
20463,Use consul/lib's RateScaledInterval,
20464,test,
20465,Don't create options unless necessary,
20466,fix types,
20467,Merge pull request #1252 from hashicorp/f-blocked-eval-text,Better placement failure text for blocked evals
20468,Merge pull request #1251 from hashicorp/f-alloc-status-resources,Alloc-status only shows measured statistics and fixes to CPU calculations
20469,use time.Second instead of our own const,
20470,helper,
20471,better placement failure text for blocked evals,
20472,Alloc-status only shows measured statistics and fixes to CPU calculations,
20473,Merge pull request #1248 from hashicorp/fix-node-cpu-usage,Fixed calculation of cpu usage percent in user and sys mode for pids
20474,Fixed merge conflicts,
20475,Using named variables,
20476,Merge pull request #1247 from hashicorp/f-measured-resources,Annotate what statistics are measured
20477,Fixed calculation of cpu usage percent in user and sys mode for pids,
20478,Annotate what is measured,
20479,Merge pull request #1246 from hashicorp/fix-node-cpu-usage,Changed the logic of calculation of node cpu usage
20480,Changed the logic of calculation of node cpu usage,
20481,Merge pull request #1244 from hashicorp/b-eval-reblock-test-hardening,Don't dequeue requeued evals in tests
20482,Add check-index flag to nomad run,
20483,changelog,
20484,Merge pull request #1241 from hashicorp/v-vendor-go-plugin,vendor go-plugin - removes tmp files used to communicate with plugin
20485,Merge pull request #1242 from matthaias/patch-1,Change 'fs ls' cmd to 'fs' cmd
20486,Change 'fs ls' cmd to 'fs' cmd,
20487,Merge pull request #1237 from hashicorp/b-regions,CLI can forward request to different regions
20488,vendor go-plugin - removes tmp files used to communicate with plugin,
20489,Moving the stats error to the bottom of alloc status,
20490,Moving the stats error to the bottom of node status,
20491,Fixed the formating of % in nomad alloc status,
20492,Merge pull request #1229 from hashicorp/update-plugin,Updated go-plugin dependency
20493,Merge pull request #1238 from hashicorp/b-restore-stop-collection,Fix resource collection channel being nil on restore
20494,fix channel being nil on restore,
20495,docs,
20496,Run and plan automatically sets the region,
20497,Add region flag and environment variable,
20498,don't dequeue,
20499,Merge pull request #1227 from hashicorp/upstream-scada-provider,Use upstream high-level SCADA provider
20500,Merge pull request #1234 from joeshaw/patch-1,add module step for source compilation
20501,Fixed the svc id generation scheme while pruning services,
20502,Returning an error if stats collection hasn't started yet for a new docker container,
20503,Merge pull request #1235 from hashicorp/stats-cli,Rework the node-status and alloc-status cli
20504,Indicating which values are percentages,
20505,Getting inodes used percent back,
20506,Showing detailed resource usage stats in alloc-stats,
20507,Showing task resource usage in alloc status,
20508,Showing actual resource usage,
20509,Added the stats flag,
20510,Removing inode percent since it doesn't work in some cases,
20511,removed the stats cli command,
20512,add module step for source compilation,Without this the codecgen tool is missing and compilation fails.
20513,"Revert ""Hack the Travis build""",This reverts commit f5532978c86038580aafe25b6ca81a46de2d204e.
20514,"Revert ""And again""",This reverts commit c7726ff5d6d65f54911145901cc9e634d75aa014.
20515,"Revert ""Scope the test""",This reverts commit 7d018ef1befa1fe9477e6b653a510494e8de5913.
20516,"Revert ""Add verbosity flag""",This reverts commit 9089105e16cd543d87971ceee5e732e4346b7a70.
20517,"Revert ""Scope to one test""",This reverts commit 9e812db94eb1bf0e7bb299273b18f12280dd1bae.
20518,Scope to one test,
20519,Add verbosity flag,
20520,Scope the test,
20521,And again,
20522,Hack the Travis build,
20523,GC Nodes even if they have terminal allocations,
20524,Merge pull request #1232 from hashicorp/f-s3-artifact-examples,Add several more s3 examples to artifact docs
20525,Add s3 examples to json docs as well,
20526,Updated go-plugin,
20527,Handle errors during stats collection,
20528,Merge branch 'master' of github.com:hashicorp/nomad,
20529,changelog,
20530,Merge pull request #1231 from hashicorp/b-fsm-lock,Fix periodic dispatch and blocked evals not releasing lock
20531,Add several more s3 examples to artifact docs,
20532,Fix case in periodic dispatch and blocked evals where lock was not released,
20533,Change eval_endpoint test to not retry but block longer,
20534,up timeout for dequeue in test,
20535,Merge pull request #1226 from hashicorp/f-push-stats,Push Resource Usage stats to remote sinks
20536,Enqueing metrics only if they are not nil,
20537,Update to merged scada-client,
20538,Use upstream high-level SCADA provider,
20539,Sending metrics for tasks as well,
20540,Merge pull request #1221 from hashicorp/b-nil-wait,fix wait result being nil and some panics in the cli
20541,flaky test,
20542,fix wait result being nil and some panics in the cli,
20543,Merge pull request #1220 from hashicorp/f-plan-failure-reasons,plan shows failure reasons and ordered annotations
20544,plan shows failure reasons and ordered annotations,
20545,Merge pull request #1209 from hashicorp/b-blocked-eval-fixes,Fix race condition in which a reblocked evaluation could be dropped
20546,Comments addressed,
20547,changelog,
20548,Merge pull request #1206 from hashicorp/f-eval-status,Introduce eval-status and deprecate eval-monitor
20549,Clean failed placement output,
20550,Pushing host stats,
20551,Merge pull request #1189 from hashicorp/f-alloc-resource-usage,Client APIs for reporting resource usage of host and allocations
20552,Fixed a test,
20553,Merge pull request #1213 from hgontijo/patch-1,Update alloc.html.md
20554,Update alloc.html.md,Updating the Allocation documentation page. Issue: https://github.com/hashicorp/nomad/issues/1190
20555,updated the docker system dependency,
20556,Renamed error message in alloc endpoint,
20557,Added a test to make sure task runner is collecting stats,
20558,Added a test for docker,
20559,Added a test for alloc stats api endpoint,
20560,Added a test for the clients stats endpoint,
20561,Making the cli use new apis,
20562,Changing the api of the stats endpoints,
20563,Implemented the resource usage ts since a time,
20564,Initializing the ring buffer with no cells,
20565,Initializing the ring buffer with no cells,
20566,Fixed the docs for the stats command,
20567,comments,
20568,Stopping the metrics collector timers using defer and starting to collect host stats right away,
20569,Making the call to Stats on a go-routine,
20570,Added a test to validate we are collecting stats,
20571,Fixing the alloc runner tests,
20572,Using the api client for querying nomad client endpoints,
20573,Fixed the node status cli command,
20574,Fixed the compilation on linux,
20575,creating the host cpu percent calculator lazily,
20576,simplified the stats method in basic executor,
20577,Fixed the logic of scanpids,
20578,Added comments,
20579,Refactored the api for NewHostStatsCollector,
20580,Changed signature of Allocation Stats Reporter,
20581,Simplified the docker stats collection,
20582,Incorporated review comments for executor,
20583,Making the stats collection interval and number of data points to keep in memory configurable,
20584,Renamed monitorUsage method,
20585,Changed the signature of ResourceUsageTS,
20586,Acquiring locks before iterating allocations and tasks,
20587,Changed the stats endpoints,
20588,Making task a flag in the stats command,
20589,Added disk usage to node status,
20590,Added uptime to node stats,
20591,Showing host resource usage stats,
20592,Added a stats api for retreiving node stats,
20593,Added pidstats in task resource usage struct,
20594,Renamed CpuUsage to CpuStats,
20595,Added a test for calculating cpu stats,
20596,Stopping stats collection of tasks which has been destroyed,
20597,Fixed the percentage calculation for cgroups,
20598,Added missing vendored dependencies,
20599,Added some docs,
20600,Added locks to RingBuf,
20601,Implemented nomad cpu percentage calculator,
20602,Using humanize for showing memory,
20603,Reporting percentage usage of cpu in nomad stats,
20604,updating the CpuStats api,
20605,Vendoring go-ps,
20606,Implemented cpu stats,
20607,Fixed implementation of the docker stats,
20608,Added the PidStats method on the executor,
20609,Adding a query param to return time series of stats,
20610,Implemented stats for raw_exec,
20611,Added some docs to resource stats endpoint,
20612,Making the conversion to Stats simpler,
20613,Returning nil if peek is called before any value is enqueued,
20614,Added some documentation,
20615,Collecting host stats,
20616,Updated gopsutil,
20617,Reporting time series of stats,
20618,Added a ringbuff datastructure,
20619,Added the nomad stats command,
20620,Added cpu stats,
20621,Added a client API to display resource usage of an allocation,
20622,Add the Stats api to driverhandle,
20623,Merge pull request #1207 from dkerwin/docker_add_shm_size,Add support for shm_size to docker driver
20624,Merge pull request #1212 from kennethzfeng/master,Add reload command to systemd unit file
20625,Add reload command to systemd unit file,
20626,Update to latest go-dockerclient. Fix .gitignore expression to allow,docker/pkg packages.
20627,changelog,
20628,Merge pull request #1210 from hashicorp/b-task-dashes,Validate that tasks don't contain slashes
20629,validate that tasks don't contain slashes,
20630,"Revert ""validate that tasks don't contain slashes""",This reverts commit b3025782d0030a2799242deab95d26b9dd72dcdd.
20631,validate that tasks don't contain slashes,
20632,Fix race condition in which a reblocked evaluation could be dropped,
20633,test fix,
20634,eval-status website docs,
20635,Handle the no allocation case in status,
20636,Fix check of completed next eval,
20637,Show failure reason in status,
20638,Add eval-status and remove eval-monitor,
20639,Merge pull request #1208 from hashicorp/b-blocked-dont-store-metrics,Blocked evals don't store TG alloc metrics
20640,Blocked evals don't store TG alloc metrics,
20641,Fix vendor rootPath,
20642,Add support for shm_size to docker driver. Required update of go-dockerclient,to more recent version (ba4298ecf4cfa216f1cce2befbf653359f62c722).
20643,changelog,
20644,Merge pull request #1199 from hashicorp/f-lighter-blocked-evals,Reuse blocked evaluations and handle unblock events that occurred during scheduling
20645,address comment,
20646,Merge pull request #1204 from hashicorp/fix-server-address,Use Bind Addr as server's IP while registering with consul in the absence of other configuration.
20647,Added a test for generation of the server addr,
20648,test fixes and delete,
20649,Periodically unblock failed evaluations,
20650,Track unblock indexes and check evals on block to see if they missed an update while in the scheduler,
20651,Worker annotates evals with their snapshot index,
20652,Reuse the same evaluation and reblock it until there is no more work to do,
20653,changelog,
20654,Merge pull request #1181 from hashicorp/f-plan-cli,cli: nomad plan command
20655,changelog,
20656,Merge pull request #1188 from hashicorp/f-no-failed-allocs,Failed Allocation Metrics stored in Evaluation
20657,meta flag test,
20658,output and test fix,
20659,vendor colorstring,
20660,changelog,
20661,Merge pull request #1205 from hashicorp/b-drain-restarting-jobs,Do not restart successful batch jobs when the node is tainted (removed/drained)
20662,comment,
20663,rename SpawnedBlockedEval and simplify map safety check,
20664,Add test to verify drain doesn't restart successful batch and add to ignore list,
20665,Using the bind addr as server's IP if advertise addr and addresses.HTTP is not specified,
20666,Dont restart successfully finished batch allocations,
20667,changelog,
20668,Merge pull request #1203 from hashicorp/f-gzip,Compress HTTP API responses
20669,nil protection,
20670,Compress HTTP API responses and have the api client utilize this,
20671,Merge pull request #1200 from hartzell/master,Typo in docs: beings -> begins
20672,Merge pull request #1 from hartzell/hartzell-typo-1,typo: beings -> begins
20673,typo: beings -> begins,
20674,Merge pull request #1195 from hashicorp/fix-docker-test,Fixed docker test
20675,Fixed docker test,
20676,Merge pull request #1192 from hashicorp/yamux-update,Updating yamux
20677,Updating yamux,
20678,changelog,
20679,Merge pull request #1182 from hashicorp/f-json-encoder,Use codegen for json marshalling
20680,print spawned eval in monitor,
20681,Evals track blocked evals they create,
20682,changelog,
20683,Merge pull request #1183 from hashicorp/f-atomic-eval-enqueue,EnqueueAll ensures all evaluations are enqueued before unblocking Dequeue calls
20684,Show task group failures in eval-monitor,
20685,Scheduler no longer produces failed allocations; failed alloc metrics stored in evaluation,
20686,EnqueueAll inserts all evaluations before unblocking dequeue calls,
20687,eval_broker.Enqueue no longer returns an error,
20688,"Use codegen for json marshalling: 20% faster, 12% less bytes allocated, 85% less allocations",
20689,Merge pull request #1174 from hashicorp/f-config-consul-block,Using the auto-register flag
20690,Fix determining whether a job is edited,
20691,inplaceUpdate returns the allocs that were updated in-place,
20692,changelog,
20693,tests,
20694,"comments, refactor and help string",
20695,Alligned properly,
20696,better colors and verify help text,
20697,verbose output,
20698,little better output,
20699,initial implementation of nomad plan,
20700,Merge pull request #1176 from pubnub/bug/http-api-response-headers-config-merge,"Fix ""http_api_response_headers"" config not working"
20701,"Fix ""http_api_response_headers"" config not working","On startup, the agent starts with either a dev or default config.  Extra config files are merged into final config. The HTTPAPIResponseHeaders config was missing from the merge logic therefore it would always result in empty value (regardlesss of any config files specified)."
20702,Filtering out nomad check,
20703,Merge pull request #1168 from hashicorp/f-plan-endpoint,Job.Plan endpoint
20704,Switch to using the harness,
20705,Rename Cas to JobModifyIndex,
20706,improve help message for fs missing input,
20707,changelog,
20708,Merge pull request #1150 from hashicorp/f-fs-command,Refactor fs subcommands into fs command
20709,Update per comments,
20710,Using the auto-register flag,
20711,Speling police,
20712,Merge pull request #1167 from hashicorp/f-config-consul-block,Consul Agent Configuration and Server and Client Auto Registration
20713,Testing if stats is present and it is a map,
20714,Using advertise addr for the http address,
20715,Using a helper method to create service identifiers,
20716,Added some docs,
20717,Merge branches 'master' and 'f-config-consul-block' of github.com:hashicorp/nomad into f-config-consul-block,
20718,Fixes,
20719,Removing addition of the client service while reconciling services,
20720,Making Nomad register services with consul in dev mode,
20721,Remove plan from the response,
20722,Plan api,
20723,Fixed an agent test,
20724,add endpoint tests,
20725,Fixing the client test,
20726,Test task group update annotations,
20727,Removed allocID and task name from consul service,
20728,Using consul config from client config instead of reading from client options,
20729,Implemented registering client and server services,
20730,Fix the unit tests for TestPrettyPrintOff,A different failing test masked that this wasn't even being run. Pointy Hat: sean- for testing first on Travis in a branch vs verifying locally
20731,Undo testing.go,
20732,Merge branch 'master' into f-plan-endpoint,
20733,Merge pull request #1166 from hashicorp/f-job-diff2,Job Diff structure
20734,Fix switching diff structures,
20735,Merge branch 'f-job-diff2' into f-plan-endpoint,
20736,Add service diff,
20737,Added tests for parsing consul client configuration,
20738,Fixed the consul tests,
20739,Refactored the signature of NewConsulService,
20740,Adding logic for checking health of client,
20741,Added a check command,
20742,Added parsing logic for config block,
20743,Fix unit tests for TestPrettyPrintBare,
20744,Merge pull request #1165 from hashicorp/f-append-newline,Append a newline when pretty-printing the response
20745,Merge pull request #1160 from hashicorp/f-freebsd,Stubbed out raw_exec support for *NIX platforms OOB LGTM: @diptanu
20746,Merge pull request #1164 from hashicorp/fix-unmount,Removing directories only if we could successfully unmount them
20747,remove old diff,
20748,Merge branch 'f-job-diff2' into f-plan-endpoint,
20749,changelog,
20750,contextual diff,
20751,Update tests for pretty printing that includes a newline.,"Add a test verifying that pretty printing can be disabled, too."
20752,Job diff using generic structures,
20753,Append a newline when pretty-printing the response,"Instead of typing module to inject a newline into your terminal, now pretty will provide its own newline."
20754,Removing directories only if we could successfully unmount them,
20755,Merge pull request #1153 from hashicorp/b-task-resource-update,Check if network asks have changed when checking task updates
20756,Merge pull request #1161 from hashicorp/d-json-corrections,Json clean up + fixed variable names
20757,Merge pull request #1162 from hashicorp/d-telemetry,Describe key metrics
20758,describe interval,
20759,Json clean up + fixed variable names,
20760,Document key metrics,
20761,Establish a floor of one core for the number of cores.,In most cases the upstream library link needs to be fixed.
20762,Emit various debugging information with the results of the fingerprinter,
20763,cgroups are a decidedly Linux-only feature.  Build and test as such.,
20764,Decrease the log-level from WARN to DEBUG when fingerprinting GCE,This brings the logging here inline with the remaining fingerprinting code
20765,Rename cgroup_universal.go to cgroup_default.go,"Universal implies it is applicable to Linux, whereas default implies the fallthrough for the non-Linux build targets."
20766,Move network detection code to Linux-specific build,Non-Linux build targets get the current default of 0.  This will allow platform specific fingerprinting for network capabilities.
20767,Stub out FreeBSD support for Nomad,"Compiles, but is not functional (yet)."
20768,Merge pull request #1156 from hashicorp/f-x-sys-unix,Use x/sys/unix vs syscall package where appropriate
20769,Rename the windows exec driver file to be the default exec driver.,"No functional difference in practice, but results in a more clean build."
20770,Merge pull request #1159 from capone212/master,Enable consul script checks for raw_exec driver
20771,Added java,
20772,Reverted blank line,
20773,Fixed CR defect,
20774,Update documentation,
20775,Merge https://github.com/capone212/nomad,
20776,Added consul script check support for raw_exec driver,
20777,Bump Go to 1.6.2 for Travis (just added),
20778,Merge pull request #1158 from bodymindarts/patch-1,fix docs for specifying multiple config files
20779,Re-sort functions back to the same ordering as module,
20780,Remove stray debugging fmt.Printf,
20781,Revert making UniversalExecutor.wait() platform specific,
20782,Revert making UniversalExecutor.wait() platform specific,
20783,-config needed to pass multiple config files,When trying the command above with just 1 -config option specified only the config from the first file was picked up.
20784,Revert making UniversalExecutor.wait() platform specific,
20785,Catch up with error message drift in docker,
20786,Bump Go to 1.6.1,
20787,Break out the windows vs UNIX Fingerprinter,cgroup's are applicable to Windows and will require a more specific abstraction.  Stub out the difference.  The NIX exec drivers will likely be broken out over time (e.g. BSD and Solaris).
20788,Fully enumerate build targets,Exclude broken build targets from gox
20789,Fix executor builds on Windows,
20790,Vendor golang.org/x/sys/windows,
20791,Implement a Windows-specific UniversalExecutor module,
20792,Windows needs a stub chroot command,
20793,Build checks per-platform,
20794,Prefer module where appropriate,Favor the module package on *NIX platforms vs the now frozen module package.
20795,Merge pull request #1155 from hashicorp/f-update-install-rkt.sh,Update rkt to 1.5.1
20796,Explicitly enumaret the build targets in _unix,"module was being used as the synonym for module.  While I don't imagine module will be a prime target for Nomad in the near term, favor explicit build targets. List of build targets generated by Go 1.7's dist command: module"
20797,Rename from posix to unix to parallel x/sys/unix,Use the module file suffix to denote *NIX-like semantics in order to parallel the designation given by the package module.
20798,SHA512 rkt downloads,Only extract rkt if it hasn't been.  Only Fetch if it's missing.  Verify SHA512 of the tarball before extracting. Discovered while recreating pathological failure conditions on local vagrant cluster and recreating vagrant clients in a loop over night (read: overnight testing revealed that rkt-1.2.0.tar.gz.723 didn't vary in its contents compared with rkt-1.2.0.tar.gz)
20799,Upgrade rkt from 1.2.0 to 1.5.1,
20800,Ignore rkt installation artifacts used in Vagrant,
20801,pass a copy of the task to the task environment,
20802,Check if network asks have changed when checking task updates,
20803,Merge pull request #1151 from hashicorp/check-debug-logs,Added logs to indicate when checks timeout
20804,Added some docs,
20805,Initial plan endpoint implementation - WIP,
20806,Merge pull request #1152 from hashicorp/f-vagrant-cluster,"Update Vagrantfile to support multiple nodes. Bump Go to 1.6.2. dadgar: ""LGTM"""
20807,Update Vagrantfile to support multiple nodes. Bump Go to 1.6.2.,"module just works and only one VM is spun-up by default, however there are up to 5x VMs available for cluster testing. module and module."
20808,Merge pull request #1149 from hashicorp/f-current-version-checkpoint,Include the current version along side the available version.
20809,Added logs to indicate when checks timeout,
20810,Refactor fs subcommands into fs command,"Refactors module command to eliminate module subcommands. Automatically displays the file, if the path specified is a file; lists the directory if the path is a directory; or displays stat information if the module flag is set. Currently running module to find a file, then running the exact same command with the exception of module instead of module is time consuming and awkward. This allows operational testing to be greatly enhanced, and makes our lives so much better."
20811,When checkpoint emits a log message indicating an agent is out of,"date, include the current version along with the available version according to checkpoint. Inspired by: log output in hashicorp/consul#993"
20812,Merge pull request #1148 from hashicorp/f-govendor,Use govendor
20813,Remove unused packages,module
20814,Update github.com/ugorji/go/codec*,No functional change. module
20815,Begin using govendor for dependency management,
20816,Index fields using a map,
20817,change the packages,
20818,Updated the changelog,
20819,Merge pull request #1144 from hashicorp/unique-service-names,Ensuring check names are unique
20820,"Diff Task Configs, handle the nil cases, better type setting and more tests",
20821,Ensuring check names are unique,
20822,visitor,
20823,Merge pull request #1143 from hashicorp/unique-service-names,Ensuring service names are unique
20824,Merge pull request #1118 from hashicorp/docs-discovery-json,Added docs for json representation of service discovery objects
20825,Merge pull request #1142 from hashicorp/sethvargo/elink,Track enhanced links
20826,flatmap for walking the task config,
20827,Job diff infrastructure,
20828,Ensuring service names are unique,
20829,Track enhanced links,
20830,Merge pull request #1139 from hashicorp/b-typo-force-leave,Fix typo in force-leave docs
20831,Fix typo in force-leave docs,
20832,Changelog and 0.4 version bump,
20833,Merge pull request #1128 from hashicorp/f-restrict-inplace,"Task is not eligible for update if User, Meta, or Resources change"
20834,"Task is not eligible for update if User, Meta, or Resources change",
20835,Merge pull request #1126 from hashicorp/b-fix-label-type,"Docker labels configuration should be of type ""array"" in schema"
20836,"Docker labels configuration should be of type ""array"" in schema",
20837,Merge pull request #1122 from hashicorp/sethvargo/referrer,Do not allow referrer to modify the sender
20838,Do not allow referrer to modify the sender,http://mathiasbynens.github.io/rel-noopener/
20839,Bumping up the version of the website,
20840,Release v0.3.2,
20841,version bump,
20842,changelog,
20843,Merge pull request #1121 from hashicorp/f-server-members,module: Better error handling of no cluster leader in federated clusters
20844,Better error handling,
20845,Merge pull request #1117 from hashicorp/f-docker-timeouts,Timeout docker connections after 1 minute
20846,Added doc for the SSL key of the docker driver config,
20847,Added docs for json representation of service discovery objects,
20848,Timeout docker connections after 1 minute,
20849,changelog,
20850,Merge pull request #1115 from hashicorp/b-fix-env-splitting,Fix splitting on equals to return maximum of two strings
20851,changelog,
20852,Fix splitting on equals to return maximum of two strings,
20853,Minor grammar fix. (#1114),"Added a missing ""is"" to complete the last sentence."
20854,vendor go-getter with potential S3 credential fix,
20855,Release v0.3.2-rc2,
20856,Release v0.3.2-rc2,
20857,rc2 version bump,
20858,Merge pull request #1111 from hashicorp/f-debug-info-scheduler,Scheduler error condition debug messages
20859,vendor,
20860,more debug,
20861,base debugging,
20862,Merge pull request #1105 from hashicorp/b-forked,Put the executor into the cgroup to avoid a fork race
20863,Add debug message on Wait() error,
20864,Fixed the docs around service discovery,
20865,Freeze the cgroup and cleanup around Shutdown,
20866,changelog,
20867,Merge pull request #1097 from hashicorp/service-no-port,Invalidating services when they contain check of type tcp and http bu…
20868,changelog,
20869,Ensure the label exists on checks and small enhancements,
20870,Merge pull request #1106 from hashicorp/b-drain-system-job,Always trigger evals on drain update
20871,Fix missing format variable,
20872,Always trigger evals on drain update,
20873,Put the executor into the cgroup to avoid a fork race,
20874,protect writing to closed channel,
20875,Merge pull request #1073 from hashicorp/http-advertise-addr-docs,Added docs for http advertise addr
20876,Ensuring that the docs says that the advertise block works on both server and client nodes,
20877,Merge pull request #1103 from hashicorp/b-remove-systemd,Remove systemd cgroup manager
20878,remove systemd cgroup manager,
20879,Merge pull request #1100 from troyswanson/patch-1,Make logging more consistent
20880,Make logging more consistent,
20881,changelog,
20882,Merge pull request #1099 from hashicorp/f-ip-port-var,Add IP and PORT environment variables
20883,nomad inspect docs,
20884,Add IP and PORT environment variables,
20885,Clarify blocking query docs,
20886,Invalidating services when they contain check of type tcp and http but no ports,
20887,Merge pull request #1094 from hashicorp/d-json-docs,Improved JSON docs
20888,improved JSON docs,
20889,Release v0.3.2-rc1,
20890,version update,
20891,website,
20892,changelog,
20893,Merge pull request #1012 from hashicorp/f-partition-gc,core: Limit GC size
20894,Address comments,
20895,Remove unused field,
20896,docs,
20897,changelog,
20898,Merge pull request #1092 from hashicorp/service-no-port,Allowing registration of services which don't expose any ports
20899,changelog + docker GC cleanup,
20900,Merge pull request #1071 from hashicorp/b-docker-fix-gc,GC Docker containers and images after the container exits
20901,Allowing registration of services which don't expose any ports,
20902,Modified the test to wait for 3 seconds before inspecting containers,
20903,Merge branch 'master' of github.com:hashicorp/nomad,
20904,changelog,
20905,Merge pull request #1090 from hashicorp/f-inspect-submittable,Make inspect output submittable via HTTP API
20906,changelog,
20907,Merge pull request #1089 from hashicorp/f-validate-driver-on-submit,Validate driver config on job register
20908,Make inspect output submittable,
20909,Lower number of submitted jobs,
20910,check for exact match on job for inspect/stop,
20911,Validate driver config on job register,
20912,changelog,
20913,Merge pull request #1062 from iverberk/f-validate-driver-config,Validate driver configuration
20914,changelog,
20915,Merge pull request #1070 from hashicorp/f-interpret-artifacts,Interpret artifact source
20916,createDriver expects task environment,
20917,changelog,
20918,Merge pull request #1086 from hashicorp/b-many-allocs,Fix drained/batch allocations from continually migrating
20919,Merge branch 'master' of github.com:hashicorp/nomad,
20920,changelog,
20921,Merge pull request #1074 from hashicorp/f-periodic-utc,Periodic jobs always are evaluated in UTC TZ
20922,Merge pull request #1082 from hashicorp/sethvargo/ws_md,Update website push script to fix metadata
20923,Merge pull request #1083 from hashicorp/sethvargo/singlejs,"Only pubish a single, combine js artifact"
20924,Fix drained/batch allocations from continually migrating,
20925,"Only pubish a single, combine js artifact",
20926,Update website push script to fix metadata,
20927,Periodic jobs always are evaluated in UTC TZ,
20928,Added docs for http advertise addr,
20929,Fixing the API call of stopping container,
20930,Added a test to ensure that the docker driver is removing containers after container exits successfully,
20931,Removing container and image once the wait from docker api returns,
20932,Removing extra file,
20933,Merge branch 'master' of github.com:hashicorp/nomad,
20934,interpet the artifact source,
20935,Merge pull request #1069 from hashicorp/fix-read-node-attr,Fix read node attr
20936,Reading consul attr from copy of node attributes,
20937,Merge branch 'master' of github.com:hashicorp/nomad,
20938,changelog,
20939,Merge pull request #1068 from hashicorp/f-node-drain-self,Add -self flag to node-drain
20940,Add -self flag to node-drain,
20941,Add comments and fix a typo,
20942,Merge pull request #1067 from hashicorp/b-add-client-status-to-terminal,add client status to allocation terminal status
20943,filtering failed batch allocs,
20944,Merge pull request #1064 from sandstrom/patch-1,Add dates to changelog
20945,Add dates to changelog,
20946,Add interactive option to the Docker driver configuration schema,
20947,Merge branch 'master' of github.com:hashicorp/nomad,
20948,Updated the consul in Vagrant env,
20949,Add missing comments on exported Validate function,
20950,Implement configuration validation for all task drivers,
20951,Add helper to validate raw configuration data,
20952,Merge pull request #1053 from hashicorp/remove-interfaces,removing interfaces from config
20953,"Revert ""Remove client status from allocation TerminalStatus""",This reverts commit 819e1e4b3967c7029ee8221144666ff460fdd7ed.
20954,Merge pull request #1060 from hashicorp/b-gc-fix,Force GC checks nodes last and fix eval GC to cleanup deregistered batch jobs
20955,Force GC garbage collects nodes last and fix eval GC to cleanup deregistered batch jobs,
20956,Merge pull request #1052 from iverberk/b-fix-panic-on-fs-job-parameter,Fixes a panic when fs commands with a job parameter return zero allocations
20957,Merge pull request #1058 from ketzacoatl/patch-1,"Dropped module from docs, per #675"
20958,Update CHANGELOG.md,
20959,Merge pull request #1059 from hashicorp/phinze/docker-interactive-flag,client/docker: add module option
20960,client/docker: add module option,Equivalent to module - keeps STDIN open. Also adds docs for both module and module docker config.
20961,"Dropped module from docs, per #675","Specifically, see https://github.com/hashicorp/nomad/blob/master/CHANGELOG.md#030  Node ID is no longer specifiable. For users who have set a custom Node ID, the node should be drained before Nomad is updated and the data_dir should be deleted before starting for the first time [GH-675]"
20962,Merge pull request #1054 from hashicorp/missing-deps,Added missing files for go-getter
20963,Added missing files for go-getter,
20964,When reserving ports don't reserve network interface speed,
20965,Sort the task resources in alloc-status,
20966,vendor updated godep,
20967,Make sure we exit on errors,
20968,Removing the interfaces block from docs,
20969,removing interfaces from config,
20970,Fixes a panic when fs commands with a job parameter return zero allocations,
20971,Merge pull request #1051 from hashicorp/phinze/website-mime-types,website: force JS/CSS mime-types on deploy
20972,website: force mime-types for some assets on deploy,Should fix occassional issues with application/octet-stream mime type assets breaking things on the site.
20973,Merge pull request #1047 from hashicorp/b-log-rotator,Fixing race issues in log rotator
20974,Fixing race issues in the log rotator,
20975,Merge branch 'master' of github.com:hashicorp/nomad,
20976,Merge pull request #1044 from hashicorp/f-docker-tty,Added the tty flag to the driverconfig
20977,Logging errors in the file rotator,
20978,Added the tty flag to the driverconfig,
20979,Merge pull request #1034 from hashicorp/f-raft-peers,Adding raft peers in agent info
20980,Merge pull request #1035 from dvusboy/clarify_priority,Clarify how priority is ordered
20981,Clarify how priority is ordered, It wasn't exactly obvious to me that larger values reflect   higher priority.
20982,Adding raft peers in agent info,
20983,Setting check state to critical if check result had an error,
20984,Merge pull request #1032 from cosmopetrich/master,Fix syntax errors in example JSON job spec
20985,Fix syntax errors in example JSON job spec,
20986,Merge pull request #1030 from hashicorp/b-readat,Seeking to offset while doing readAt with non-zero offset
20987,Seeking to offset while doing readAt with non-zero offset,
20988,Adding the raft leader addr to server stats,
20989,Merge branch 'master' of github.com:hashicorp/nomad,
20990,Not logging if consul is unavailable,
20991,Merge pull request #1023 from hashicorp/libcontainer-fixes,Libcontainer fixes
20992,Adding a test to check whether constraints are applied and cgroups are removed,
20993,Moved logrus around,
20994,Checking in logrus,
20995,Setting the cg path after application of pid,
20996,Setting the cgroup config after applying pid,
20997,Using the paths of cgroups to reconstruct the manager,
20998,Updated libcontainer,
20999,Merge pull request #1020 from hashicorp/f-capture-signals,Capturing signals from wait
21000,Adding 128 to exit code when a child was terminated by a signal,
21001,Merge pull request #1017 from hashicorp/f-driver-periodic-fingerprinter,Enabling Periodic fingerprinters for drivers
21002,Merge pull request #1021 from sheldonkwok/patch-1,Update alloc.html.md
21003,Update alloc.html.md,Fix very minor spelling error.
21004,Capturing signals from wait,
21005,Watching for node updates after registration completes,
21006,Logging in fingerprinters only when state changes,
21007,Using the node in the req to unblock evals,
21008,Making driver fingerprinters run periodically and unblocking evals when node registration happens,
21009,Making the drivers fingerprint periodically if they are configured to do so,
21010,Using the command key in nomad spi for script checks,
21011,Merge pull request #1014 from hashicorp/stop-consul-sync,Client not syncing services with consul until fingerprinting succeeds
21012,Merge pull request #1015 from hashicorp/fix-job-status,Showing the status of the first job when it's prefixed matched
21013,Showing the status of the first job when it's prefixed matched and the user input matched exact,
21014,Client not syncing services with consul until fingerprinting succeeds,
21015,Merge pull request #1011 from hashicorp/f-docker-load,Added ability to create image from archive
21016,Making the load a list of strings and added website docs,
21017,Simplified the logic of deciding how to create image,
21018,Added docs,
21019,Add options documentation for go-getter,
21020,Limit GC size,
21021,Added a test,
21022,Added ability to create image from archive,
21023,changelog,
21024,Merge pull request #1009 from hashicorp/b-more-chroot,Chroot all of /usr/
21025,Merge pull request #1007 from mgenov/systemd_config_update,nomad/examples: update systemd config files
21026,nomad/examples: update systemd config files,The existing nomad.service is having minor configuration and this change adds the following:  * Install section that allows nomad to be able enabled in systemd  * Default limit of open files is set to 65536
21027,Merge pull request #1005 from hashicorp/executor-version,Added the Version method to executor
21028,Added version to executor,
21029,Added the Version method to executor,
21030,Merge pull request #1006 from hashicorp/guard-purge-files,Not deleting files if the number of files is less than max files
21031,Fixing comments,
21032,Not deleting files if the number of files is less than max files,
21033,include all of usr,
21034,run -output adds job key,
21035,Merge branch 'master' of github.com:hashicorp/nomad,
21036,changelog,
21037,Merge pull request #1004 from hashicorp/f-node-status-self,node-status -self command and docs
21038,node-status -self command and docs,
21039,Merge pull request #1003 from hashicorp/f-update-memberlist,Updates memberlist to latest.
21040,Updates memberlist to latest.,
21041,Merge branch 'master' of github.com:hashicorp/nomad,
21042,ArtifactDownloaded in task runner state,
21043,Merge pull request #991 from hashicorp/f-service-tags,Interpolating service and checks
21044,"Supporting interpolation in service name, check name/protocol/path",
21045,Added support for interpolation in check cmd and args,
21046,Updated the docs,
21047,Added docs to interpolateServices method,
21048,Interpolating service tags,
21049,Merge branch 'master' of github.com:hashicorp/nomad,
21050,Alloc dir uses MkdirAll,
21051,Merge pull request #992 from hashicorp/f-script-checks-docs,Added docs for script checks
21052,Merge pull request #995 from hashicorp/f-consul-https,Using tls cert and key files while connecting to consul over https
21053,Removing extra chars,
21054,Updated docs,
21055,Merge pull request #998 from hashicorp/check-cmd,Renamed checks cmd to command to be consistent with exec driver config
21056,Merge pull request #997 from hashicorp/fs-cat-api,Added the /fs/cat/ api
21057,Renamed checks cmd to command to be consistent with exec driver config,
21058,Added the /fs/cat/ api,
21059,Merge pull request #994 from hashicorp/fix-node-drain,Fixes the logic for drain and stop command's confirmation prompt
21060,Corrected docs,
21061,Added docs,
21062,Using tls cert and key files while connecting to consul over https,
21063,Fixes the logic for job-stop confirmation prompt,
21064,Fixes the logic for node drain confirmation prompt,
21065,Added docs for script checks,
21066,changelog,
21067,Merge pull request #962 from hashicorp/b-failed-task-kills-tg,"client: When a task fails, kill all other tasks in the task group"
21068,Merge pull request #987 from hashicorp/website-update-middleman-toc,website: update middleman and link to header
21069,changelog,
21070,Merge pull request #990 from hashicorp/f-hcl-to-json,nomad run -output emits the JSON representation of the job
21071,JSON page docs,
21072,nomad run -output emits the JSON representation of the job,
21073,Merge pull request #986 from hashicorp/scripts,Implement script checks
21074,Using latest busybox,
21075,Fixing the exec script check to run within the chroot,
21076,Moved the dockerIsConnected to testutils,
21077,Removing the container after running script check,
21078,Added more tests for the checks,
21079,Merge branch 'master' of github.com:hashicorp/nomad,
21080,changelog,
21081,Merge pull request #989 from hashicorp/b-batch-no-eval-gc,Limit garbage collection of running batch jobs
21082,Limit garbage collection of batch jobs,
21083,Using a single timer to run checks,
21084,changelog,
21085,using switch to determine the state of checks,
21086,Using tickers instead of creating new timers,
21087,Merge pull request #971 from hashicorp/b-terminal-alloc,Remove client status from allocation TerminalStatus
21088,Dead->Complete,
21089,Remove client status from allocation TerminalStatus,
21090,Test task failure killing TG and fix setting the task as received on a restore,
21091,kill tasks in alloc when one fails,
21092,Merge pull request #984 from hashicorp/f-unrecoverable-error,Explain restart decision and display in alloc-status
21093,Explain restart decision and display in alloc-status,
21094,Merge pull request #978 from hashicorp/f-enforce-user,Operator specifiable blacklist for task's using certain users
21095,swap raw_exec and qemu in the blacklist,
21096,Merge pull request #981 from hashicorp/f-eval-force,Deregister creates an eval for a job even if it doesn't exist
21097,small fixes,
21098,Merge pull request #985 from hashicorp/b-interpret-job-tg-meta,client: Add job and task group meta interpretation
21099,Merge pull request #974 from hashicorp/b-remove-gc-field,Remove the GC field on the job and use the job type
21100,Renamed NomadChecks to CheckRunner and a fix for checkrunner start,
21101,Merge pull request #975 from hashicorp/f-rename-complete-alloc,Successful allocations are marked as complete instead of dead
21102,Merge pull request #983 from hashicorp/f-destroy-conf,Confirmation on destructive commands
21103,Fix test,
21104,website: update middleman and link to header,Following up with linking these following https://github.com/hashicorp/middleman-hashicorp/pull/24 being merged.
21105,add test for precedence,
21106,Renamed NomadChecks to CheckRunner,
21107,Vendoring circbuf,
21108,Added some more docs to the executor,
21109,Removing non relevant tests,
21110,Added some docs,
21111,Changing the logic of keep services,
21112,Added an impl for Nomad Checks,
21113,Updated the vendored copy of github.com/fsouza/go-dockerclient,
21114,add job and task group meta,
21115,Added a test for the exec script check,
21116,Creating the docker driver in the executor properly,
21117,Merge pull request #969 from hashicorp/f-cli-output-server-update,Add a log line to the cli output for updating server address list
21118,Introducing ConsulContext,
21119,Fixed merge conflicts,
21120,Enabling script checks,
21121,Running script checks periodically,
21122,Updated consul related dependencies,
21123,Added a check type for consul service to delegate certain checks,
21124,"Added implementation to run checks for docker, exec and raw_exec",
21125,Merge pull request #982 from hashicorp/b-perform-sync,Fixing check registration in perform sync
21126,Changing the log line,
21127,Confirmation on destructive commands,
21128,Fixing check registration in perform sync,
21129,Move update servers cli output to the correct commands location,
21130,deregister creates an eval for a job even if it doesn't exist,
21131,Merge pull request #979 from hashicorp/f-travis-qemu,install qemu on travis
21132,install qemu on travis,
21133,Operator specifiable blacklist for task's using certain users,
21134,Merge pull request #976 from hashicorp/default-resources,wbsite: document default resources
21135,wbsite: document default resources,Pulled this info from https://github.com/hashicorp/nomad/blob/master/nomad/structs/structs.go#L623-L630 and https://github.com/hashicorp/nomad/blob/master/nomad/structs/structs.go#L769.
21136,changelog,
21137,Merge pull request #950 from mssola/raw-exec-user,"client: added the ""user"" option to tasks"
21138,client/driver: added more tests,Signed-off-by: Miquel Sabaté Solà link
21139,Merge pull request #972 from hashicorp/scripts,Moving consul service to executor
21140,Changed a log line,
21141,Added some comments to the keep services method,
21142,Using a helper method to copy taskStates,
21143,Added a note about backward compatibility,
21144,Reworded the log line,
21145,Locking the task states,
21146,Fixed the tests,
21147,Renamed vars and methods,
21148,Renaming the SyncWithConsul method,
21149,Fixing log and statements,
21150,Successful allocations are marked as complete instead of dead,
21151,Closing the shutdown ch on shutdown,
21152,remove the GC field on the job and use the job type,
21153,Locking on alloc runners before syncing with consul,
21154,Using the name of the task and the alloc id in the service name,
21155,removing ids of services and checks on the server side,
21156,Added a test to check whether services get updated,
21157,Added comments,
21158,Fixing the test,
21159,Client sync with consul and removed unwanted services,
21160,Re-syncing task when it's updated,
21161,Syncing consul periodically,
21162,Handling errors during service and check registration,
21163,Merge branch 'master' of github.com:hashicorp/nomad,
21164,changelog,
21165,Merge pull request #970 from hashicorp/f-pass-env,Pass environment variables from host to exec based tasks
21166,Comment and don't override,
21167,Hooking up the executor in all drivers,
21168,Pass environment variables from host to exec based tasks,
21169,Making the docker driver register services and checks,
21170,Fix rkt install in vagrant,
21171,Removing references to old consul services and adding consul config to executor context,
21172,Added a test for the sync,
21173,Add a log line to the cli output for updating server address list,
21174,Added the sync logic,
21175,client/driver: added the module config value,This way Nomad allows to set which user has to run the task. Signed-off-by: Miquel Sabaté Solà link
21176,Added consul sync,
21177,Merge pull request #966 from hashicorp/f-doc-nomad-agent-config,[Docs] Small update to retry join documentation
21178,[Docs] Small update to retry join documentation,
21179,Make artifact escape analysis work on windows,
21180,changelog,
21181,Merge pull request #965 from hashicorp/f-nomad-fingerprinter,client: add nomad fingerprinter
21182,add nomad fingerprinter,
21183,node-status fix panic,
21184,Show error when artifact validation fails in task runner,
21185,Merge pull request #964 from hashicorp/d-clarify-distinct-hosts,docs: Clarify distinct_hosts constraint
21186,clairfy distinct_hosts constraint,
21187,Merge pull request #963 from hashicorp/d-driver-client-options,Clarify client options in drivers
21188,Clarify client options in drivers,
21189,Bumping up the version,
21190,Merge pull request #961 from hashicorp/executor-tests,Making the calls to exit idempotent
21191,Making the calls to exit idempotent,
21192,Clarify log config disk usage message,
21193,Merge pull request #960 from hashicorp/update-bolt,Updating BoltDb to 1.2
21194,Updating BoltDb,
21195,clarify server join,
21196,Merge pull request #959 from hashicorp/d-clarify-operator-equality,Document operator equality
21197,Document operator equality,
21198,Merge branch 'master' of github.com:hashicorp/nomad,
21199,Fix indentation of init file,
21200,Update ISSUE_TEMPLATE.md,
21201,changelog,
21202,Merge pull request #957 from hashicorp/b-near-node-capacity,core: ProposedAllocs dedups in-place updated allocations
21203,ProposedAllocs dedups in-place updated allocations,
21204,Merge branch 'master' of github.com:hashicorp/nomad,
21205,Fixed the qemu driver tests,
21206,Fix copy to distinguish between nil and empty map/structs,
21207,unit-test demonstrating broken behavior,
21208,changelog,
21209,Merge pull request #952 from hashicorp/f-nomad-inspect,cli: Add nomad inspect command
21210,inspect/stop uses prefix search,
21211,Add nomad inspect command,
21212,Merge pull request #941 from hashicorp/f-interface-name,"Use an interface name to find the bind addr for rpc, http and serf components"
21213,Overriding the device configuration if addresses is present,
21214,Added docs for the website,
21215,Added a comment about iteration of ips in a network device,
21216,changelog,
21217,Merge pull request #947 from hashicorp/f-node-status,cli: Less verbose output and show node's total resources
21218,less verbose output and show node's total resources,
21219,Changelog,
21220,Merge pull request #946 from hashicorp/f-reduce-alloc-status-verbosity,Reduce verbosity of alloc-status
21221,hide the fs subcommands,
21222,Reduce verbosity of alloc-status,
21223,Merge pull request #945 from achanda/vagrant-rkt,Setup rkt in vagrant
21224,Setup rkt in vagrant,
21225,changelog,
21226,Merge pull request #944 from hashicorp/f-artifact-location,Download artifacts to relative locations inside the task directory
21227,Validate the artifact client side as well,
21228,Merge branch 'master' into f-artifact-location,
21229,Documentation,
21230,binary lookup path,
21231,Using the interfaces for configuring bind addrs for nomad servers,
21232,Merge pull request #940 from hashicorp/f-docs-minor-interpreted-updates,Minor updates to Interpreted Variables docs
21233,Merge pull request #942 from achanda/update_rkt,Update rkt and docker
21234,Merge pull request #943 from achanda/typo,Fix missing import
21235,Fix missing import,
21236,Setting the ip from the network interface to Addresses,
21237,Update rkt and docker,
21238,Parsing interfaces from the config file,
21239,Using the interface name to find bind address for network services,
21240,Minor updates to Interpreted Variables docs,
21241,Merge pull request #939 from hashicorp/f-docs-upgrade-guide,Add slightly more detail to the Nomad upgrade guide.
21242,Add slightly more detail to the Nomad upgrade guide.,
21243,download to relative destination,
21244,Merge pull request #932 from hashicorp/unified-executor,Unified executor
21245,Added some comments,
21246,Merge pull request #929 from kaskavalci/patch-3,Update confusing terms in scheduling.html.md
21247,Added an interfaces config,
21248,Merge pull request #934 from hashicorp/f-random-job-allocation-fs,Allow fs commands to use job-id
21249,Allow fs commands to use job-id,"Adds module flag argument to module commands to randomly lookup a job's allocation-id to use in an module command. Can be used when debugging a job, where a specific allocation ID is not a strict requirement."
21250,Removing all the destroy logic from wait and calling exit after wait on all drivers,
21251,add destination to artifact block and validate it,
21252,Destroying the plugin if kill wasn't successful,
21253,Introduced a method in executor to launch syslog server,
21254,Typo,Copy & paste isn't the best practice
21255,Rephrase the sentence,
21256,Merge pull request #936 from hashicorp/always-prefix-match,Always defaulting to prefix match
21257,Always defaulting to prefix match,
21258,changelog,
21259,Merge pull request #935 from hashicorp/f-server-members-leader,cli: server-members displays leader per region
21260,display server leaders per region,
21261,Merge pull request #933 from hashicorp/b-go-linker-flag,Go's -X linker flag now requires only one argument
21262,Go's -X linker flag now requires only one argument,
21263,changelog,
21264,Merge pull request #931 from hashicorp/f-count-zero,Allow count zero task groups
21265,Fix validate test,
21266,Allow count zero,
21267,Merge pull request #930 from blalor/patch-1,Remove unnecessary --interactive flag
21268,Remove unnecessary --interactive flag,"Per @achanda, this was added link."
21269,Update confusing terms in scheduling.html.md,I think it creates confusion for new learners to call clients as nodes. A node may not have Nomad agent running and jobs can only be scheduled to clients.
21270,demo client configs,
21271,website: change mid-page headline,Once the banner comes down this will continue pointing to the C1M. cc/ @dadgar
21272,Update announce banner,
21273,fix getting started page,
21274,Merge pull request #916 from hashicorp/jt-bnr,announcement bnr
21275,website: add announcement banner content,
21276,update middleman-hashicorp,
21277,pixel fix,
21278,announcement bnr,
21279,Merge pull request #925 from hashicorp/json-api-docs,Documented the json api for job submission
21280,Documented the json api for job submission,
21281,up vagrant version,
21282,update version,
21283,Merge pull request #924 from hashicorp/d-artifact-docs,document artifact downloading
21284,document artifact downloading,
21285,Fixes example.init,
21286,CHANGELOG,
21287,Merge pull request #910 from hashicorp/f-reserved-resources,Reserve Client Resources + Config Validation
21288,Merge pull request #921 from hashicorp/f-artifact-download,Allow downloading many artifacts and support unarchiving
21289,artifact docs,
21290,Add artifact to init,
21291,Respond to comments and fix test,
21292,Merge pull request #922 from hashicorp/docs-alloc-status,Explanded getting-started and alloc-status
21293,Explanded getting-started and alloc-status,
21294,evict and replace when the artifacts of a task change,
21295,Make user specified tasks executable,
21296,Merge pull request #920 from hashicorp/docs-fs,Added docs for the file system apis
21297,update sidebar. change layout specified in http/index,
21298,Added docs for the file system apis,
21299,validate that java/qemu have artifacts and better artifact validation,
21300,Test task runner downloading artifacts,
21301,Get tests to pass,
21302,Download artifacts and remove old code for drivers,
21303,update the getter,
21304,Go-getter options are generic and validation of checksums,
21305,Switch from string to artifact struct,
21306,Parse artifacts and options,
21307,changelog,
21308,Merge pull request #915 from hashicorp/f-valid-service-names,Require RFC-1123 and RFC-2782 valid service names
21309,Merge pull request #917 from kaskavalci/patch-1,Fixed typo on system.html.md
21310,Merge pull request #919 from onlyjob/codespell,codespell: minor spelling corrections
21311,codespell: minor spelling corrections,Signed-off-by: Dmitry Smirnov link
21312,Fixed typo on system.html.md,
21313,Add two tests for invalid service names,
21314,Restrict the service name to match RFC-1123 and RFC-2782,
21315,Merge branch 'master' of github.com:hashicorp/nomad,
21316,update vendored go-getter,
21317,Update Vagrantfile,
21318,fix docs to reflect that resources are given as MB,
21319,Merge pull request #911 from brimstone/patch-1,Typo in docker.html.md
21320,Typo in docker.html.md,Fixing misspelling in docs.
21321,Remove unused configs,
21322,documentation,
21323,reserve resources on the node,
21324,Get rid of individual network resources,
21325,Custom parsing of Nomad config with validation + Reserved resources block (not used yet),
21326,Merge pull request #907 from hashicorp/f-task-resources,Showing Task Resources in alloc status
21327,Showing Task Resources in alloc status,
21328,Simplified the logic of limit,
21329,changelog,
21330,Merge pull request #906 from hashicorp/b-client-not-pulling-allocs,client: fix bug where pushing allocs is skipped
21331,client: fix bug where pushing allocs is skipped,
21332,Update ISSUE_TEMPLATE.md,
21333,Update ISSUE_TEMPLATE.md,
21334,Create ISSUE_TEMPLATE.md,
21335,Merge branch 'master' of github.com:hashicorp/nomad,
21336,Changelog,
21337,Merge pull request #905 from hashicorp/b-resolvconf,executor: add /run/resolvconf to chroot
21338,executor: add /run/resolvconf to chroot,
21339,Merge branch 'master' of github.com:hashicorp/nomad,
21340,fmt rkt test,
21341,Merge pull request #902 from hashicorp/f-fs-error,Improved the error related to fs commands
21342,Improved the error related to fs commands,
21343,Update CHANGELOG.md,
21344,leader: nodes TTLing log promoted from DEBUG to WARN,
21345,Merge pull request #897 from hashicorp/syslog-addr,Using unix domain sockets for docker syslog collector
21346,changelog,
21347,Merge pull request #900 from iverberk/f-job-config-validate-keys,Validate config keys in the jobspec
21348,Validate config keys,
21349,Changelog,
21350,Merge pull request #892 from achanda/rkt_dns,Enable passing DNS info to the rkt driver
21351,Using unix domain sockets for docker syslog collector,
21352,Update CHANGELOG.md,
21353,Merge pull request #896 from hashicorp/f-task-instance,Add allocation index environment variable
21354,Merge pull request #878 from hashicorp/b-kill-timeout-update,client: Updating kill timeout adheres to operator specified maximum
21355,Add allocation index environment variable,
21356,Fixed an issue around parsing client max and min ports,
21357,up cached connection time,
21358,Enable passing DNS info to the rkt driver,
21359,Updated Changelog,
21360,Merge pull request #893 from hashicorp/docker-fingerprint,Making the docker fingerprinter periodic
21361,Making the docker fingerprinter periodic,
21362,Fix test,
21363,Updated CHANGELOG,
21364,Merge pull request #858 from ErikEvenson/prs/fix-aws-ecr,Fix AWS ECR private repository usage
21365,changelog,
21366,Merge pull request #890 from hashicorp/b-fs-panic,Guard client/ api to ensure the client is running
21367,Guard client/ api to ensure the client is running,
21368,Merge pull request #888 from hashicorp/f-resource-usage-printing,Print resource usage w/ alloc-status + node-status
21369,"Cleanup style, and make cleaner",
21370,Print resource usage w/ alloc-status + node-status,"When alloc-status is called, in it's long form only, print the resource utilization for that single allocation. When node-status is called, in it's long form only, print the TOTAL resource utilization that is occurring on that single node. Nomad Alloc Status: ``` % nomad alloc-status 195d3bf2 ID              = 195d3bf2 Eval ID         = c917e3ee Name            = example.cache[1] Node ID         = 1b2520a7 Job ID          = example Client Status   = running Evaluated Nodes = 1 Filtered Nodes  = 0 Exhausted Nodes = 0 Allocation Time = 17.73µs Failures        = 0 ==> Task ""redis"" is ""running"" Recent Events: Time                   Type      Description 04/03/16 21:20:45 EST  Started   Task started by client 04/03/16 21:20:42 EST  Received  Task received by client ==> Status Allocation ""195d3bf2"" status ""running"" (0/1 nodes filtered)   * Score ""1b2520a7-6714-e78d-a8f7-68467dda6db7.binpack"" = 1.209464   * Score ""1b2520a7-6714-e78d-a8f7-68467dda6db7.job-anti-affinity"" = -10.000000 ==> Resources CPU  MemoryMB  DiskMB  IOPS 500  256       300     0 ``` Nomad Node Status: ``` % nomad node-status 57b3a55a ID         = 57b3a55a Name       = biscuits Class      =  DC         = dc1 Drain      = false Status     = ready Attributes = arch:amd64, cpu.frequency:3753.458875, cpu.modelname:Intel(R) Core(TM) i7-4770K CPU @ 3.50GHz, cpu.numcores:8, cpu.totalcompute:30027.671000, driver.docker:1, driver.docker.version:1.10.2, driver.exec:1, driver.raw_exec:1, hostname:biscuits, kernel.name:linux, kernel.version:4.4.0-9-generic, memory.totalbytes:25208934400, os.name:ubuntu, os.version:16.04, unique.cgroup.mountpoint:/sys/fs/cgroup, unique.network.ip-address:127.0.0.1, unique.storage.bytesfree:219781419008, unique.storage.bytestotal:246059892736, unique.storage.volume:/dev/sdb3 ==> Allocations ID        Eval ID   Job ID   Task Group  Desired Status  Client Status 2c236883  aa11aca8  example  cache       run             running 32f6e3d6  aa11aca8  example  cache       run             running ==> Resource Utilization CPU   MemoryMB  DiskMB  IOPS 1000  512       600     0 ```"
21371,fix test,
21372,moves transform to Init(),
21373,Merge branch 'master' into study/aws-ecr-1,
21374,Merge pull request #886 from hashicorp/f-configurable-heartbeat,agent: Configurable heartbeat grace
21375,Merge pull request #887 from hashicorp/b-nack-timeout,Fix bug introduced with paused nack timers
21376,Remove outstanding reset from plan applier,
21377,Fix bug introduced with paused nack timers,
21378,agent: Configurable heartbeat,
21379,Merge branch 'master' of github.com:hashicorp/nomad,
21380,changelog,
21381,Merge pull request #884 from hashicorp/f-nack-timeout-pausing,core: Pause/Resume Nack timeout while eval is in plan queue
21382,core: Pause NackTimeout while in the plan_queue as progress is being made,
21383,Merge pull request #880 from achanda/docker_update,Test against latest stable docker
21384,Remove documentation about assigning node-id,
21385,Always use the new package config if there is a conflict,
21386,Test against latest stable docker,
21387,Merge pull request #879 from hashicorp/f-add-allocation-output-node-status,Include number of allocations in node-status
21388,Add -allocs to help output,
21389,"Only fetch running allocs, use args, add docs","Only fetch running allocations, not total allocated ids, add documentation, and cleanup things."
21390,Updating kill timeout adheres to operator specified maximum,
21391,Include number of allocations in node-status,"We recently ran into an issue on a small percentage of nomad-clients where the nomad-client was running successfully, but due to a race condition, could not correctly bind to the docker socket. This caused all of our nomad jobs to be allocated to a single nomad-client instead of being spread evenly across our clients. The only way to discover this was to run module and count each job allocation per node. This can lead to a fairly long debugging process if there are several nomad-clients. Including the number of allocations for each node in the module command would save a large amount of debug time. module module"
21392,Merge pull request #768 from achanda/b-rkt,A number of rkt fixes
21393,changelog,
21394,Add /sbin and /usr/sbin/ to chroot,
21395,Merge pull request #874 from hashicorp/b-consul-concurrent-map-access,Remove a concurrent map access
21396,Merge branch 'master' of github.com:hashicorp/nomad,
21397,Killing a docker container that is dead is not an error,
21398,Merge branch 'master' of github.com:hashicorp/nomad,
21399,Updated changelog to contain libcontainer fix,
21400,Changelog,
21401,Fix location of volume mount,Also add a test for mounting alloc dirs
21402,Use NewWaitResult in the wait channel,
21403,Set allocDir in handle,
21404,Run rkt interactively,
21405,Cleanup if the plugin executor crashes.,
21406,A number of cleanups, Removed some unused variables.
21407,Disable ipmasq in the default ptp network,
21408,Change name of the stdout file,
21409,Do not hard-code binary location,
21410,Use the plugin mechanism in the rkt driver,
21411,Defer cleanup,
21412,Change how a result is returned form wait,
21413,Use less resources for containers,
21414,Print rkt and docker versions after installing,
21415,Put docker version in the script,
21416,Add a shebang to docker update script,
21417,Enable running rkt tests in travis, Introduces a travis target in Makefile to update docker and   install rkt
21418,A number of rkt fixes, Reorder rkt arguments to make it work Change a few things in test
21419,Use a host volume to mount alloc and task dirs,host volumes are the preferred way to share data.
21420,Create the task and alloc dirs before proceeding,
21421,Merge pull request #869 from hashicorp/f-alloc-id-env,Add Alloc ID/Name and Task Name to environment variables
21422,Remove a concurrent map access,
21423,Merge pull request #855 from hashicorp/cgroups-pid,Updated logic for creation of cgroup
21424,Added a comment,
21425,Added a test for making sure executor destroy works,
21426,Merge pull request #870 from hashicorp/f-exec-driver-error-doc-update,Add a specific entry for the common error you may see
21427,Fix capitalization of Nomad in doc update,
21428,Add a specific doc entry for the common error you may see when you are,using the exec driver and not running as root.
21429,Not killing the plugin while destroying the cgroup,
21430,Fixed the logic of cgroup creation,
21431,Driver tests,
21432,Add Alloc ID/Name and Task Name to environment variables,
21433,Merge pull request #867 from hashicorp/f-reduce-alloc-update-size,Decrease size of Allocation when serializing
21434,Avoid serializes Allocation.Resources,
21435,Merge pull request #866 from adrianlop/SystemGC_fix_docs,/v1/system/gc - PUT method
21436,/v1/system/gc - PUT method,
21437,changelog,
21438,Merge pull request #859 from hashicorp/f-driver-start-restarts,client: Driver starting is included in restart policy.
21439,Acquire lock around handle,
21440,adds comments and removes redundant false flag setting,
21441,Merge branch 'master' into study/aws-ecr-1,
21442,Update version and add changelog for 0.3.1,
21443,Merge pull request #857 from monder/dash-vars,Allow dashes in var names
21444,Refactor task runner to include driver starting into restart policy and add recoverable errors,
21445,updates docs,
21446,refactors,
21447,allows AWS ECR to work,
21448,Allow dashes in var names,
21449,Updated libcontainer,
21450,Removing unused dependencies,
21451,Merge pull request #818 from achanda/perf,Run a bunch of tests in parallel
21452,Updating the version of the website,
21453,Merge branch 'master' of github.com:hashicorp/nomad,
21454,Drop the permissions of sub directories in the alloc dir,
21455,Setting version to 0.3.0,
21456,Merge pull request #850 from hashicorp/snap-version,Adding version information to snapshots
21457,Merge pull request #852 from hashicorp/d-upgrading,Add upgrading documentation
21458,Merge pull request #851 from hashicorp/logdir,Writing logs to alloc dir
21459,Updated the CHANGELOG,
21460,Merge pull request #849 from hashicorp/d-system-gc,Docs: System gc endpoint and updated log docs
21461,Added a test for AllocDir.LogDir,
21462,Adding version to the DockerHandle test,
21463,Fixed some java tests,
21464,Add upgrading documentation,
21465,Writing logs to alloc dir,
21466,Adding version information to snapshots,
21467,Merge pull request #848 from hashicorp/b-server-panic,core: store the job on allocations that are from stopped jobs
21468,Update CHANGELOG.md,
21469,Update CHANGELOG.md,
21470,Generic Scheduler handles periodic eval type,
21471,client: standardize error logging format,
21472,add documentation for system gc endpoint and update log docs,
21473,Store the job on allocations that are from stopped jobs,
21474,up log level,
21475,Making the build work for windows,
21476,changelog,
21477,driver.test: remove redundant tests,
21478,changelog,
21479,Merge pull request #841 from hashicorp/b-local-file,Client: Only allow downloading from http/s and git
21480,Merge pull request #842 from hashicorp/f-validate-command,drivers: validate that command contains one field
21481,Updated the changelog,
21482,Bumping up the version,
21483,Closing the rotators when the process finishes,
21484,Merge pull request #843 from hashicorp/phinze/travis-remove-gotip-build,travis: remove go tip build
21485,travis: remove go tip build,"Uses up one less Travis builder per commit, makes for faster throughput."
21486,Limit the set of downloaders,
21487,Copy local files,
21488,validate that command contains one field,
21489,Merge pull request #819 from hashicorp/r-syslog-collector,Refactored syslog server and log rotator
21490,Closing the messages channel,
21491,Stoping go-routines in the syslog collector,
21492,Buffering writes to a rotated file,
21493,Merge branch 'master' of github.com:hashicorp/nomad,
21494,client: send correct node id,
21495,nomad: do not skip node plan if we receive an evaluation result,
21496,"Revert ""Debug messages around the plan and plan response""",This reverts commit 7646657e6b8a892210779eaf5708341b94b29b24.
21497,"Revert ""Debug log in plan apply""",This reverts commit 532df0d27e02e0cb30b6e3a28b9c4b5778bd71b3.
21498,"Revert ""err logs in worker and scheduler""",This reverts commit 7befc586521b70eb84013bff367310e4cfa45c27.
21499,Debug messages around the plan and plan response,
21500,Send NodeID when updating client allocation,
21501,Debug log in plan apply,
21502,Made the syslog server use a buffered chan,
21503,Merge branch 'master' of github.com:hashicorp/nomad,
21504,err logs in worker and scheduler,
21505,Merge pull request #831 from hashicorp/b-log-rotation-docs,Added docs for the log rotation
21506,Added docs for the log rotation,
21507,Merge pull request #840 from hashicorp/docker-auth-config,Throwing an error if Nomad can't create a docker auth object
21508,format,
21509,Throwing an error if Nomad can't create an docker auth object,
21510,add debug error if there is a partial apply and refresh index isn't set,
21511,Throwing an error if Nomad can't create an docker auth object,
21512,nomad: Update go-memdb depedency,
21513,nomad: add a sanity check guard,
21514,Merge pull request #839 from hashicorp/f-refreshindex,nomad: cleanup handling of refresh index
21515,nomad: cleanup handling of refresh index,
21516,Merge branch 'master' of github.com:hashicorp/nomad,
21517,Fix progressMade in scheduler,
21518,Merge pull request #838 from hashicorp/go1.6,Removing support for Go 1.5.3
21519,Removing support for Go 1.5.3,
21520,Updating the vendored iradix library,
21521,Merge pull request #835 from hashicorp/f-client-alloc-update,Batch client allocation updates to the server
21522,Merge pull request #834 from hashicorp/f-serverbatch,Batch client updates of allocation status
21523,address feedback,
21524,Fix test,
21525,Batch client allocation updates to the server,
21526,Merge pull request #833 from hashicorp/f-multiupdate,Allow the clients to update status of multiple allocations server side
21527,Fixing comment,
21528,Run a bunch of tests in parallel,
21529,nomad: batch client updates for 50msec,
21530,nomad: alloc update_alloc endpoint to take multiple allocations,
21531,nomad: fixing test name,
21532,nomad: fixing tests,
21533,nomad: FSM supports multiple client updates,
21534,nomad/state: Allow UpdateAllocFromClient to take multiple allocs,
21535,Merge pull request #832 from hashicorp/f-cleanup,Enable job normalization during planning
21536,Address review feedback,
21537,env var for travis,
21538,nomad: normalize job for evictions,
21539,nomad: allow for job normalization,
21540,schedule: deduplicate the jobs,
21541,nomad: allow sharing a single Job in a plan and alloc update request,
21542,nomad: make PopulateServiceIDs more efficient,
21543,Fix envvar,
21544,Vendor envvar in travis,
21545,"Remove LZW changelog, its been reverted",
21546,Merge pull request #830 from hashicorp/f-code-gen,Switch to using go/codec and use code generation
21547,Fix import path to be non-vendored in Makefile,
21548,Merge branch 'f-code-gen' of github.com:hashicorp/nomad into f-code-gen,
21549,Vendoring,
21550,external dep,
21551,Switch to using go/codec and use code generation,
21552,Merge pull request #829 from hashicorp/f-bench-encode,nomad: simple encode/decode benchmark
21553,nomad: simple encode/decode benchmark,
21554,"Revert ""Lzw compress raft entries""","This reverts commit a687ee6df316ffadac5305f4be9cf9a5642cd6af. The LZW compression reduces the file size by ~60%, but increases our encode and decode costs by 2x in a CPU bottlenecked path."
21555,changelog,
21556,Add force node gc,
21557,Merge pull request #828 from hashicorp/f-gc-endpoint,Job GC endpoint
21558,Merge pull request #826 from hashicorp/f-compress-raft,LZW compress raft entries
21559,Merge pull request #823 from hashicorp/f-bitmap,Switch port collision checking to use bitmap instead of map
21560,Merge pull request #827 from hashicorp/f-dynamic-pool,Set the size of the evaluation pool based on cores
21561,nomad: guard against a negative pool size,
21562,Job GC endpoint,
21563,nomad: use CPU count to determine pool size,
21564,nomad: Adding Size to EvaluatePool,
21565,nomad: Allow resize of EvaluatePool,
21566,Merge pull request #825 from hashicorp/f-apply,Introduce a EvaluatePool to parallelize the Plan Applier
21567,nomad: extra comment,
21568,Lzw compress raft entries,
21569,nomad: plan apply uses the EvaluatePool,
21570,Merge pull request #824 from hashicorp/b-reduce-client-ports,Make the client only reserve 512 ports.
21571,nomad: adding a worker pool for plan apply,
21572,nomad: cache bitmaps to avoid GC pressure,
21573,Merge pull request #822 from hashicorp/f-filteralloc,Use compound index on node allocations to include terminal status
21574,nomad: use bitmap for port collision checking,
21575,nomad: adding simple bitmap implementation,
21576,Make the client only reserve 512 ports.,
21577,scheduler: Use AllocsByNodeTerminal to avoid filtering,
21578,nomad: Use AllocsByNodeTerminal in plan apply,
21579,nomad: adding compound index on alloc terminal status,
21580,undo async update,
21581,Added more comments,
21582,Make updating alloc status async,
21583,Reduce alloc lock contention in client,
21584,import,
21585,Merge branch 'master' of github.com:hashicorp/nomad,
21586,Changelog,
21587,Merge pull request #821 from hashicorp/f-client-set-receive,Client stores when it receives a task
21588,Better comment,
21589,Remove debug,
21590,Fixes,
21591,Fixed tests,
21592,Client stores when it receives a task,
21593,Added some docs to the syslog server,
21594,Added some docs to the FileRotator,
21595,Making the log rotator a writer,
21596,Renamed packages,
21597,Implemented file rotator,
21598,Don't re-register as initializing,
21599,Increase Alloc channel buffers,
21600,Merge pull request #816 from hashicorp/b-java-linux,Enabling cgroups and chroot on linux
21601,Fixed the fingerprinter test,
21602,Enabling cgroups and chroot on linux,
21603,Merge pull request #813 from hashicorp/update-cleanhttp,Update go-cleanhttp
21604,Merge pull request #814 from achanda/go,Upgrade go to 1.6
21605,Upgrade go to 1.6,
21606,Update vagrant to Go 1.6,
21607,Implemented a custom syslog server,
21608,Changelog,
21609,Merge pull request #808 from hashicorp/b-seed-rand,Seed the servers random number generator
21610,Merge pull request #812 from hashicorp/f-disable-cores,"Disable half the workers, freeing half the CPUs, on the leader"
21611,Merge pull request #811 from hashicorp/b-heartbeat-loop,Extract the heartbeat and saveState into their own go routines
21612,Merge pull request #809 from hashicorp/b-failed-kill,Killing a driver handle is retried with an exponential backoff
21613,Update go-cleanhttp,
21614,"Disable half the workers, freeing half the CPUs",
21615,Remove blank line,
21616,Use crypto random seed,
21617,Extract the heartbeat and saveState into their own go routines,
21618,fix java test,
21619,Killing a driver handle is retried with an exponential backoff,
21620,Seed the servers random number generator,
21621,Merge pull request #805 from hashicorp/b-http-addr,Construct http addr for clients properly
21622,Testing default http port is being set,
21623,Merge pull request #807 from achanda/format,Separate arguments with a space while writing
21624,Separate arguments with a space while writing,
21625,Added a test for testing that http addr is set properly,
21626,fixing the logic of addr resolution,
21627,lower cpu minimum,
21628,resolveConstraintTargets checks for bracket syntax,
21629,more vendoring,
21630,vendor,
21631,Fixed the go vet to skip vendored files,
21632,Remove updatedeps from vagrant file,
21633,update hashicorp dependencies,
21634,Merge pull request #802 from stigkj/patch-1,Spelling: intepretable --> interpretable
21635,Merge pull request #803 from ggerritsen/master,Update Readme for local dev.
21636,Update Readme for local dev., Make sure to clone first and bootstrap second
21637,Spelling: intepretable --> interpretable,
21638,Bumping up the version,
21639,Merge pull request #799 from hashicorp/b-gnumakefile,Rename Makefile to GNUmakefile
21640,Rename Makefile to GNUmakefile,
21641,Merge branch 'master' of https://github.com/hashicorp/nomad,
21642,Changelog,
21643,Merge branch 'master' of github.com:hashicorp/nomad,
21644,Added stubs for windows,
21645,Merge branch 'master' of https://github.com/hashicorp/nomad,
21646,go vet,
21647,Merge pull request #798 from hashicorp/f-ls-h,Make FS output human readable by default
21648,vendor,
21649,Add human readable output to fs,
21650,Merge pull request #797 from hashicorp/reserve-ports,Reserving ports for client in every platform
21651,Adding comments,
21652,Changing log messages in the docker driver,
21653,Adding vendored code in pkg directories,
21654,Reserving ports for client in every platform,
21655,Update go-plugin,
21656,Merge pull request #796 from hashicorp/godep,Godep
21657,Formatting test,
21658,Fixed the make dev target,
21659,Excluding vendor tests,
21660,Replacing tip with 1.6rc2 in travis,
21661,Using godeps to build,
21662,Merge pull request #795 from hashicorp/b-httpaddr,Merging the value of http advertise addr if user is providing one
21663,Merging the value of http advertise addr if user is providing one,
21664,Bumped up disk requirements in a test,
21665,Fixed some more tests,
21666,Bumping up default disk size,
21667,Fixed tests,
21668,Setting the output for default logger to nomad's logoutput,
21669,Merge pull request #763 from hashicorp/f-logrotator,Implemented log rotation for drivers
21670,Fixed an issue with purge,
21671,Added a validator for log storage,
21672,Added the log config to init example,
21673,Merge pull request #778 from zanella/doc_trailing_commas,Trailing comma typos
21674,Changelog,
21675,Fixed more client executor tests,
21676,Merge pull request #790 from hashicorp/b-eval-broker-delivery-limit,Fix panic when Ack occurs at delivery limit
21677,Merge pull request #789 from hashicorp/f-client-races,Remove data races in the client
21678,Fix panic when Ack occurs at delivery limit,
21679,Fixed the executor test,
21680,Fixed some tests,
21681,Changelog,
21682,Merge pull request #787 from hashicorp/f-scheduler-retries,Improved scheduler retry logic under high contention
21683,Only set eligibility if the eval hasn't escaped,
21684,Copy handles empty case,
21685,Merge pull request #775 from hashicorp/d-interpreted-vars,Documentation for interpreted variables
21686,Unlock in error path,
21687,Initialize the config copy after client init,
21688,Renamed the syslog package to logcollector,
21689,Merge branch 'master' into f-logrotator,
21690,Strip as much copystructure as possible,
21691,Added a LogConfig to the mock tasks,
21692,Added a test to check if file size update catches up with rotation,
21693,Made a DefaultLogConfig method,
21694,Handling errors when client can't re-attach to syslog collector,
21695,Changed the logic of the logrotator to make updates easier,
21696,Sharing the isolationconfig of syslog collector with executor,
21697,Added some comments,
21698,Updating log configs,
21699,"Stripping hostname, timestamps etc from docker syslog messages",
21700,Slightly less node copying,
21701,Fixed more tests,
21702,safe but slow,
21703,Fixing the api tests,
21704,Fixed docker tests,
21705,Fixed the docker handle id test,
21706,Parsing the severity of the log lines,
21707,Adding newlines to loglines,
21708,Updated comments,
21709,Simplified the logic of conversion of interface{} to byte array,
21710,Writing log lines from docker to files,
21711,Fix concurrent r/w to heartbeat time,
21712,Make fingerprinting thread safe,
21713,Reset retry count if progress is made and fail by creating a blocked eval,
21714,Starting the syslog collector along with a docker container,
21715,fix,
21716,Renamed the ExecutorPluginConfig,
21717,Merge branch 'master' into f-logrotator,
21718,Removed unused imports in test,
21719,Merge branch 'master' into f-logrotator,
21720,Merge pull request #759 from hashicorp/r-executor-plugin,Implement executor plugin
21721,Removing the killing executor pid tests,
21722,Removing taskDir from the exechandle,
21723,Merge branch 'r-executor-plugin' of github.com:hashicorp/nomad into r-executor-plugin,
21724,Killing the userpid if the plugin is killed while the client is running,
21725,Don't error killing exited process,
21726,fix pr number,
21727,more time,
21728,Merge pull request #785 from hashicorp/f-plan-apply-time,Store alloc creation time
21729,Store alloc creation time,
21730,Fix eval doc,
21731,Fix min duration,
21732,Fix timeouts between signal and kill,
21733,Fixed a test,
21734,Unmount special directories when task finishes,
21735,Merge branch 'master' into r-executor-plugin,
21736,Added a test for merge,
21737,Moved the destroycgroup method into executor,
21738,removing the prefix of the logger,
21739,Appending names of sub-system before log lines,
21740,Removing pathExists from executor,
21741,Update alloc.html.md,
21742,Unmounting dev and proc when open can't reconnect with the plugin process,
21743,Moving code to mount and unmount chroot into allocdir,
21744,Extracted the cgroup info into isolation struct,
21745,Setting defaults for client max and min port,
21746,Making the plugin server return the same instance of executor rpc server,
21747,Fixed merge conflicts,
21748,Implemented the UpdateLogConfig method,
21749,Destroying the cgroup if we can't to executor in exec and java drivers,
21750,Using net.IsLoopback to determine if ifc is a loopback device,
21751,Isolating the plugin process from the nomad client,
21752,Added the executor to the commands map,
21753,Fixed merged conflict,
21754,Trailing comma typos,WIP - https://github.com/zanella/nomad-api
21755,Installing gox while setting up the VM,
21756,Merge pull request #773 from hashicorp/docker-auth,Reading dockercfg files for authenticating with private registries
21757,Updated the changelog,
21758,changelog,
21759,Merge pull request #766 from hashicorp/f-consul-update,Update the consul service when the task/alloc changes
21760,Precise registration,
21761,Update the consul service when the task/alloc changes,
21762,changelog,
21763,Merge pull request #776 from hashicorp/f-eval-monitor-output,Cleanup eval-monitor output
21764,Shorted eval id and only print waiting if time > 0,
21765,Merge pull request #772 from achanda/travis,Use the CI env variable
21766,Small getting started cleanup,
21767,interpreted variable docs,
21768,Updated the docker auth config,
21769,Reading dockercfg files for authenticating with private registries,
21770,Use the CI env variable,Travis exports this variable to all builds. We don't need out own. A number of other CI systems use this variable too.
21771,Changed a few comments,
21772,Updated comment,
21773,Renamed the plugin log file,
21774,Update README.md,
21775,Merge pull request #771 from hashicorp/d-getting-started,Update getting started with short ids
21776,Update getting started with short ids,
21777,changelog,
21778,Merge pull request #770 from hashicorp/f-service-name-period,Ensure there are no periods in the service name
21779,Merge pull request #769 from zanella/minor_typo_eval_return,Trailing comma typo
21780,Reserving ports on windows,
21781,Merge pull request #765 from hashicorp/f-fs-cli,Display fs in nomad help and list the subcommands when called
21782,Fix ==,
21783,Ensure there are no periods in the service name,
21784,Trailing comma typo,
21785,Entering the plugin pid into the cgroup after creating it,
21786,Using signals to test if proces is alive,
21787,Added a test which shows userpid is killed when plugin can not be re-connected on calling Open,
21788,Added a test which isolates and constraints a process using the executor,
21789,Display fs in nomad help and list the subcommands when called,
21790,Making the java driver apply resource constraints and limits,
21791,Filtered out the executor command,
21792,Corrected comments and making the plugins write to unique log files,
21793,Passing the log rotation parameters to docker daemon,
21794,Putting the plugin in the same cgroup as the user process,
21795,Implemented log rotator for exec based drivers,
21796,Added parsing logic for the logrotator,
21797,Fixing merge conflicts,
21798,changelog,
21799,Merge pull request #760 from hashicorp/f-var-interprelation,Only interpret vars wrapped in braces
21800,Running processes with exec as nobody,
21801,Not syncing stdout and stderr of pluging with client,
21802,Fix tests,
21803,Only interpret vars wrapped in braces,
21804,CHANGELOG,
21805,Merge pull request #756 from hashicorp/f-download-location,"Extract artifacts to the root of the task, not in the local directory"
21806,Merge pull request #757 from hashicorp/f-tmp,Add tmp folder to each task directory
21807,Updated the value of the magic cookie,
21808,Removed using ProcessState when we just want an empty interface,
21809,Added some docs,
21810,Moved packages around,
21811,Added tests for the executor,
21812,Destroying the plugin if we can't connect to it,
21813,Removed duplicate code,
21814,Fixing the id generation logic for the java and qemu drivers,
21815,Fixed the raw_exec_driver tests,
21816,Fixed the kill test,
21817,Fixed creation of the command args,
21818,Fixed the wait rpc server,
21819,Fixed a test related to wait,
21820,Fixed a test,
21821,Fixed a comment,
21822,Fixed the rpc server,
21823,Removed executor and spawn daemon,
21824,Moved qemu to executor plugin,
21825,Moving the java executor to the executor plugin,
21826,Enabling logs and killing the plugin if we couldn't start the job,
21827,Making the wait asynchronous,
21828,Turning on isolation for exec,
21829,Introduced the flag for the user,
21830,Creating the universal executor,
21831,Killing the plugin after wait returns,
21832,Limiting resources on a process,
21833,Fixed the path to the log files,
21834,Implemented the exec functioanlity for linux,
21835,Using the plugin to spawn processes from the raw_exec driver,
21836,Fixed the executor command,
21837,Using a plugin to create the executor,
21838,Add tmp file to each task directory,
21839,Fix java test,
21840,Changelog,
21841,"Extract artifacts to the root of the task, not in the local directory",
21842,Merge pull request #755 from hashicorp/b-alloc-runner-destroy,Fix AllocRunner not capturing destroy signal and tests
21843,Serialize the list of mounted entries in the alloc dir,
21844,Small fixes,
21845,Fix AllocRunner not capturing destroy signal and tests,
21846,changelog,
21847,Merge pull request #751 from hashicorp/b-client-updates,Client handles updates to KillTimeout and Restart Policy
21848,CHANGELOG,
21849,Merge pull request #748 from achanda/docker_version,Update docker before testing
21850,Merge pull request #749 from iverberk/f-fingerprint-update-node,Reregister node when periodic fingerprint changes node properties
21851,Add comments to hasNodeChanged and remove superfluous else block,
21852,Merge pull request #753 from hashicorp/b-computed-class,Fix computed class when the job has multiple task groups
21853,Fix computed class when the job has multiple task groups,
21854,Fix tests,
21855,Client handles updates to KillTimeout and Restart Policy,
21856,Move restart tracker creation into task runner,
21857,Merge branch 'master' of https://github.com/hashicorp/nomad,
21858,changelog,
21859,Merge pull request #750 from hashicorp/b-node-drain,Fix node drain not working properly
21860,test,
21861,Reregister node when periodic fingerprint changes node properties,
21862,Fix node drain,
21863,Update docker before testing,Lifted from https://github.com/fsouza/go-dockerclient
21864,changelog,
21865,Merge pull request #746 from hashicorp/b-replacing-complete-batch-allocs,Only replace batch allocations that have failed
21866,Only replace batch allocations that have failed,
21867,Merge pull request #744 from hashicorp/f-on-restart,Restart on-success shouldn't be user specifiable
21868,Fix test,
21869,Another test fix,
21870,Fix test,
21871,Restart on-success shouldn't be user specifiable,
21872,Merge branch 'master' of https://github.com/hashicorp/nomad,
21873,Zero IOPS by default,
21874,Merge pull request #745 from hashicorp/b-rkt-version-regex,Update Rkt regex to determine version
21875,Merge pull request #742 from hashicorp/b-restart-attempts,Restart policy handling / validation adjustments
21876,update the regex,
21877,structs: more restart policy validation,
21878,client: obey restart policy when attempts == 0,
21879,changelog,
21880,Merge pull request #739 from hashicorp/f-min-resources,Default/Validate resources.
21881,Tests,
21882,Fix test,
21883,Network check,
21884,Validate min resources and default them,
21885,Changelog,
21886,Merge pull request #731 from hashicorp/f-reduce-client-alloc-pulls,Client only pulls update allocations from server
21887,Clean interaction between alloc-runner and task-runner,
21888,Comment on AllocModifyIndex,
21889,Don't share task state with the alloc in the task runner,
21890,Updated the time stamp style,
21891,changelog style,
21892,Merge pull request #726 from hashicorp/f-blocked-evals,Job queue with the introduction of blocked evaluations
21893,Fix locks and use task runners state not alloc state,
21894,Fix double pull with introduction of AllocModifyIndex,
21895,"Remove running, system scheduler, and fix tg overriding eligibility",
21896,Address comments,
21897,Disable blocked eval tracker when leadership is lost,
21898,Leader reaps and cancels duplicate evals,
21899,dedup blocked evals by job id,
21900,Buffered unblock,
21901,Make computed node class a string and add versioning,
21902,Rename counters,
21903,Blocked Eval tracker,
21904,Schedulers create blocked eval if there are failed allocations,
21905,Merge pull request #729 from PagerDuty/fix_allocdir_perms,allow group and others to have executable permissions on allocdir
21906,Merge pull request #730 from PagerDuty/typo_fs,fix typo in fs-* command usage text
21907,fix typo in fs-* command usage text,
21908,allow group and others to have executable permissions,
21909,Small doc rewording,
21910,Merge pull request #722 from iverberk/f-double-alloc-update,Add new RPC call to fetch a lightweight list of allocation information.
21911,remove whitelist from demo,
21912,Add documentation for new clientallocations endpoint,
21913,Add additional API endpoint for requesting client specific node allocations.,
21914,Changelog,
21915,Merge pull request #704 from iverberk/f-env-ports,Pass a combination of ip and port to the task environment.
21916,changelog,
21917,Merge pull request #712 from iverberk/f-cgroup-finterprinter,Add periodic cgroup fingerprinter
21918,Documentation update for the new port environment variables.,
21919,Merge pull request #721 from irobert91/patch-1,"Remove double ""to"" in jobs http docs"
21920,Merge pull request #720 from hashicorp/f-optional-port-update-servers,Allow ports to be optional when adding servers
21921,Add new RPC call to fetch a lightweight list of allocation information.,
21922,Add comments and small improvements to cgroup fingerprinter,
21923,"Remove double ""to"" in jobs http docs",
21924,Use net.JoinHostPort,
21925,Spelling,
21926,Document Agent config as well,
21927,Add in some docs,
21928,Update agent_endpoint_test,
21929,"Updates from comments, fix tests",
21930,Allow ports to be optional when adding servers,"When updating a clients servers, as nomad does not use the gossip protocol over a specified port for clients, it was required to specify ports along with server addresses. Now specifying ports are optional, and if unspecified the default module port is used, reflecting a notice back to the user."
21931,Merge pull request #707 from hashicorp/h-stack-constraint-serialization,Memoized constraint string
21932,Merge pull request #719 from ryanslade/patch-1,"Replace ""delay"" with ""interval"" in Service Discovery docs"
21933,"Replace ""delay"" with ""interval"" in Service Discovery docs","Delay appears to be incorrect.  I was unable to get Consul checks working until I changed it to ""interval"""
21934,Added synopsis of fs sub commands in the docs,
21935,Merge pull request #709 from hashicorp/f-fs-cli,Added the cli for inspecting alloc dir
21936,Updated the changelog,
21937,Not wrapping the stat errors,
21938,Added the docs,
21939,Changing an error message,
21940,Not trying to parse response if the body is not a json,
21941,Moving to subcommands for fs commands,
21942,Changed to fs-ls,
21943,Formatting time to RFC822,
21944,Added more information about files,
21945,Simplified the logic of detecting addrs,
21946,Removing the short option flag,
21947,Limiting the alloc and eval ids based on short/verbose flags,
21948,Added the short and verbose options,
21949,"Changed some comments, cli instructions etc",
21950,Changed the api of the ReadAt API,
21951,Introducing an AllocFileInfo in the api package,
21952,Fixed a comment,
21953,Added the advertise http option to the client,
21954,Using the bindAddr only when user hasn't overrident it,
21955,Added some comments,
21956,Implemented prefix matching,
21957,Added the cli for fs-cat,
21958,Added an impl for stating a file,
21959,Added some comments,
21960,Added the cli for listing alloc dir,
21961,Merge pull request #718 from hashicorp/f-bsd-make-compatibility,Allow compilation on BSD
21962,Allow compilation on BSD,"BSD Make uses module instead of module. BSD and GNU share module though, so it works as a drop in replacement. Also update scripts in module to call module in the shebang, as BSD places module at module instead of module"
21963,standardize on <> for required flags,
21964,Merge pull request #717 from hashicorp/b-status-panic,"Limit length of string, taking into account its length"
21965,"limit length of string, taking into account its length",
21966,Merge pull request #714 from ryanslade/patch-1,Fix a typo
21967,changelog,
21968,Merge pull request #708 from hashicorp/f-feasibility-node-classes,Stack uses computed node class to minimize number of feasibility checks
21969,Fix vet,
21970,Fix a typo,
21971,Fix comment,
21972,Only enable exec driver when cgroups are available,Make the exec driver fingerprinter periodic to disable the driver when cgroups become unavailable.
21973,Add a periodic cgroup fingerprinter,
21974,Merge pull request #710 from hashicorp/b-typos,Cleans up some small typos in the service discovery page.
21975,Cleans up some small typos in the service discovery page.,
21976,Fix GetNode test,
21977,Update the interpretation of node.id/name on the client,
21978,EvalEligibility unit tests and simplify escaped constraint tracking,
21979,Respond to comments,
21980,Add benchmark,
21981,Change the unique namespace on the node,
21982,FeasibilityWrapper uses computed node class eligibility to call feasibility checks minimally,
21983,EvalEligibility in context,
21984,Rebase,
21985,Merge pull request #691 from hashicorp/f-computed-node-class,Computed node class
21986,Respond to comments,
21987,Memoized constraint string,
21988,Update client fingerprinters,
21989,Update to use just unique namespace prefix,
21990,Fix test,
21991,Small cleanup,
21992,Have server store unique attrs in glob format,
21993,ComputedNode classes,
21994,Rename IPPort env variable and add a mapped host port to the env.,
21995,Merge pull request #705 from hashicorp/sethvargo/sdata,Add structured data
21996,Add structured data,
21997,Pass a combination of ip and port to the task environment.,The different labels can be on different IPs.
21998,Merge branch 'master' of https://github.com/hashicorp/nomad,
21999,Have docker use the task environment in the context,
22000,Merge pull request #699 from hashicorp/f-api-response-headers,Allow users to configure arbitrary headers in config
22001,Update CHANGELOG,
22002,Added the docs,
22003,Allow users to configure arbitrary headers in config,
22004,Merge pull request #695 from hashicorp/mitchellh-kubernetes,Update K8S vs from Twitter
22005,Update K8S vs from Twitter,This is an update from the Twitter conversation here: https://twitter.com/asynchio/status/690357014925549568 The changes made should both be based on fact from everyone involved.
22006,Merge pull request #690 from hashicorp/b-fix-root-tests,Fix failing tests running under root
22007,Just check the alloc is not pending,
22008,Document TaskStates,
22009,Use TestMultiplier on all waits,
22010,Chroot documentation,
22011,AllocRunner restore test,
22012,Mark evals from periodic as triggered by a periodic job,
22013,changelog,
22014,Merge pull request #692 from iverberk/f-detect-half-byte-prefix,Detect a half-byte prefix
22015,Handle case that pid is dead in ForceStop,
22016,ordering issue,
22017,Provide a consistent user experience with prefix based lookups., Require at least two characters for identifier Automatically strip off the last character in case of uneven length
22018,changelog,
22019,Remove non-standard CLI element,
22020,Merge pull request #693 from iverberk/f-no-raw-field-names,Remove internal field names from the CLI output
22021,Bump again,
22022,Do not use the exact internal field names in the CLI output,
22023,Time Duration fixes,
22024,Detect a half-byte prefix and display a user-friendly error.,
22025,Merge pull request #685 from hashicorp/f-docker-logs,Log Rotator
22026,Simplied the logic of detecting the currently rotate log file,
22027,Added a comment in the test,
22028,Simplifying a test,
22029,Using tmpdir and tmpfile in tests,
22030,Fix a bunch of tests,Up timeouts trusty travis beta Increase timeouts
22031,Renaming a test,
22032,Changing the logic of purging old rotated files,
22033,Added some comments,
22034,Travis uses sudo/docker and run tests as root,
22035,Fix docker tests,
22036,Changelog,
22037,Merge pull request #675 from nautsio/f-cli-short-ids,Shorten CLI identifiers
22038,Cleanup code and add comments,
22039,Update website documentation,
22040,comments,
22041,changelog,
22042,Merge pull request #668 from hashicorp/f-force-spawn,Force spawn periodic jobs
22043,Missing forward slash,
22044,Move endpoint to be under job,
22045,stating an existing file only once,
22046,Added a comment for bufsize,
22047,Implemented a method to purge files,
22048,Refactoring of full-id argument and id length constants, full-id argument is now called verbose to be more future-proof constants for identifier length are a little more concise
22049,Fix comments,
22050,Fixing tests,
22051,Merge branch 'master' into f-cli-short-ids,
22052,add a logger,
22053,excluding directories before opening file for writing,
22054,Added a test for testing if logrotator creates an empty dir when it starts from scratch,
22055,Fixed the logic of rotating files,
22056,Fixed the test for writing only N amount of bytes as much as capacity,
22057,Merge pull request #676 from hashicorp/f-node-id,Added the node id to agent info
22058,Added the node id to agent info,
22059,Refactoring some comments and test names,
22060,Merge branch 'master' of https://github.com/hashicorp/nomad,
22061,Fix test,
22062,Merge pull request #669 from hashicorp/f-fs-api,Introduce FS API
22063,Added some more comments,
22064,Added some docs and removed a redundant method,
22065,Renamed the tests,
22066,changed the API of the client,
22067,Shorten CLI identifiers, Truncate all UUID identifiers to eight characters by default Refactor the node identifier to an auto-generated UUID Created and updated tests and mocks
22068,Merge branch 'master' of https://github.com/hashicorp/nomad,
22069,Add message to nomad status when there are no jobs,
22070,Returning an error if the list fails,
22071,Added a test for file rotation,
22072,Added an impl for log-rotator,
22073,Merge pull request #672 from MansM/master,changed agent-status to agent-info as agent-status does not exist
22074,Fix missing quote in driver docs,
22075,Merge pull request #673 from ryanslade/patch-1,Update docker.html.md
22076,Update docker.html.md,Add a missing quote.
22077,changed agent-status to agent-info as agent-status does not exist,
22078,Fix asset pipeline,
22079,Merge pull request #671 from hashicorp/sethvargo/deploy,Deploy to S3 instead of Heroku
22080,Add deployment scripts,
22081,Minify javascript,
22082,Always use HTTPS + www.,
22083,Update middleman,
22084,Remove old heroku stuff,
22085,Remove old scripts,
22086,Renamed AllocFile to AllocFileInfo,
22087,Closing the file handler after finishing readat,
22088,Fixed the query for extracting path from stat,
22089,alex: making the readat more efficient,
22090,Refactored the tests,
22091,Writing contents of buffer to writer even if there was an error,
22092,Added a test for the readat api endpoint,
22093,Fixed the logic of extracting alloc,
22094,Docs,
22095,Add force spawn endpoint,
22096,Refactored the code,
22097,Implemeted readAt,
22098,Implemented the Stat API,
22099,Added the Stat API,
22100,Added methods for listing directories inside an alloc,
22101,changelog,
22102,Merge pull request #663 from hashicorp/f-job-status,Populate Job Status
22103,Add JobModifyIndex,
22104,Changelog,
22105,Merge pull request #653 from hashicorp/f-interpret-vars,Interpolate nomad variables in task environment variables
22106,Address comments,
22107,Set job status in state store,
22108,Update JobStatus's,
22109,Documentation,
22110,Fix tests,
22111,Add folder,
22112,merge,
22113,Merge pull request #662 from bastiaanb/f-pid-mode,"Add options ipc_mode, pid_mode and uts_mode to docker driver."
22114,add documentation for ipc_mode and uts_mode,
22115,"Add options ipc_mode, pid_mode and uts_mode to docker driver.",May only be used if priviliged mode is enabled in driver config.
22116,Change status message,
22117,Merge branch 'master' of https://github.com/hashicorp/nomad,
22118,Debug log for skipping overlapping periodic jobs,
22119,Changed error messages of script checks,
22120,Printing error message if check is not valid,
22121,changelog,
22122,Merge pull request #659 from hashicorp/f-periodic-status,Improve nomad status on periodic jobs
22123,Update jobspec with update and periodic block,
22124,changelog,
22125,commnet,
22126,Make monitoring based on prefix optional,
22127,Check parent id of prefix jobs and special case the output if no child job has been launched,
22128,periodic status,
22129,Merge pull request #657 from hashicorp/f-periodic-overlap,Add ProhibitOverlap option to PeriodicConfig
22130,Fix tests,
22131,Remove parent index,
22132,Remove debug message,
22133,Add ProhibitOverlap option to PeriodicConfig,
22134,changelog,
22135,Merge pull request #656 from hashicorp/b-qemu-bugs,Qemu driver uses BasicExecutor
22136,Use basic executor,
22137,Change multiple match cli output,
22138,CHANGELOG,
22139,Merge pull request #575 from nautsio/f-short-ids,Allow lookups based on short identifiers
22140,Improvements for short identifiers, Fix tests Update documentation
22141,Merge pull request #655 from hashicorp/d-update-docs,Improved update docs
22142,Improved update docs,
22143,Merge pull request #651 from hashicorp/b-qemu-port-forwarding,"Adding a , between args to netdav"
22144,"Adding a , between args to netdav",
22145,Merge branch 'master' of https://github.com/hashicorp/nomad,
22146,changelog,
22147,Merge pull request #641 from achanda/tools,Include gocov stuff in tools
22148,Merge pull request #645 from achanda/mount_dirs,Mount task and alloc dirs in the rkt driver
22149,Include gocov stuff in tools,"These two tools are used in the ""cov"" Makefile target, but installing these were not automated. This PR removes the ambiguity where a developer tries to do a module and finds that the tools are not installed."
22150,Mount task and alloc dirs in the rkt driver,rkt docs herer https://coreos.com/rkt/docs/latest/subcommands/run.html#mounting-volumes
22151,Changelog,
22152,Merge pull request #619 from hashicorp/f-dc-empty,Alloc error message when no nodes are in DC
22153,Fix counts,
22154,"Fix bug, add tests, and cli output",
22155,Store the available nodes in the alloc metric,
22156,Changelog,
22157,Merge pull request #624 from hashicorp/f-adjustable-timeout,User specifiable kill timeout and operator configurable max
22158,Validate that the kill timeout is positive,
22159,Add to nomad init,
22160,Bring up-to-date with master,
22161,Documentation updates for short identifiers in the CLI,
22162,Merge pull request #633 from achanda/opts_change,Update the insecure flag
22163,changelog,
22164,Merge pull request #618 from hashicorp/f-node-class-constraint,Add node class to constraints
22165,Merge pull request #637 from kennethzfeng/master,linux/exec: add /usr/share to ChrootEnv
22166,linux/exec: add /usr/share to ChrootEnv,
22167,Update the insecure flag,The current call has been deprecated in https://github.com/coreos/rkt/pull/1738
22168,Fix test (due to merge),
22169,Bring up-to-date with master,
22170,Refactoring continued, Refactor other cli commands to new design Add PrefixList method to api package Add more tests
22171,Test ebug log,
22172,changelog,
22173,Merge pull request #540 from hashicorp/f-periodic,Periodic dispatcher
22174,Only add periodic job insertion time once,
22175,"Simplify periodic nextLaunch, dispatch and run",
22176,Use desired launch time in periodic launch table,
22177,Fix error message,
22178,Always remove periodic jobs in fsm,
22179,Remove parent index,
22180,fix vet,
22181,use conditional index,
22182,Fix deadlock and test,
22183,Make nomad status id aware of periodic jobs,
22184,Unix timestamps not UnixNano,
22185,Always add jobs to periodic tracker,
22186,Remove the periodicRunner interface and pass the server as an interface to the periodicDispatcher,
22187,Simplify run function and add nextLaunch test,
22188,Improve restorePeriodicDispatcher documentation (and bug fix),
22189,Fix test,
22190,fixes from review,
22191,Remove incorrect comment,
22192,Fix nomad run,
22193,Race condition fixed,
22194,Update deregister test,
22195,Snapshot and restore,
22196,move created evals to the test package,
22197,merge,
22198,Small fixes and test fixes,
22199,"Leader election restore, add structs to api jobs",
22200,Add periodic index to job table,
22201,merge,
22202,FSM integration,
22203,Job endpoint handles periodic jobs,
22204,User specifiable kill timeout and operator configurable max,
22205,Refactoring, Reverted changes to get methods Added prefix query parameter Updated node status to use prefix based searching Fixed tests Removed truncation logic
22206,Merge pull request #620 from achanda/consolidate,Consolidate if else conditions
22207,Changelog,
22208,Merge pull request #622 from hashicorp/f-enforce-abs-path,Enforce absolute paths for alloc/state/data directories
22209,Enforce absolute paths for alloc/state/data directories,
22210,Update rkt docs,
22211,Merge pull request #621 from achanda/rkt_docs,Update some rkt docs
22212,Update some rkt docs,
22213,Consolidate if else conditions,
22214,Changelog and version,
22215,Rkt comment and variable name update,
22216,Merge pull request #610 from achanda/isolators,Add support for CPU and memory isolators
22217,Merge pull request #614 from achanda/handle_status,Handle non 200 codes while getting env metadata
22218,"Revert ""On cli node status list print the short Node ID when possible""",This reverts commit 5d3bd1b6f04bb3c0367798d9bb21729f2cf82247.
22219,Bring up-to-date with master,
22220,Handle non 200 codes while getting env metadata,
22221,Move constants to the top,
22222,Add node class to constraints,
22223,Merge pull request #617 from hashicorp/f-agent-info-sort,Sort output of agent-info
22224,Fix append issue,
22225,Merge branch 'agent-info-sort' of https://github.com/zytek/nomad into zytek-agent-info-sort,
22226,Do not allow rkt version less than 0.14.0,
22227,Merge pull request #613 from ChrisHines/windows-restart-test,Allow for low precision time.Now on Windows.
22228,Merge pull request #608 from hashicorp/header,Fixes by HashiCorp logo
22229,Use camelCase for variable names,
22230,Allow for low precision time.Now on Windows.,
22231,Bring up-to-date with master,
22232,Run gofmt,
22233,Support CPU and meory isolators for the rkt driver,The rkt community added supprt for these isolators recently
22234,Add TaskStates to mock.Alloc. Fixes some test race conditions,
22235,clean up footer,
22236,Some comment corrections and additions,
22237,Allow short identifiers for node-drain command,
22238,On cli node status list print the short Node ID when possible,
22239,Allow short job identifiers for stop command,
22240,Hashicorp with capitol C in header,
22241,Short identifiers functionality, Use go-memdb prefix indexer for lookups Add Job lookups Update state store with new ByIDPrefix get methods Call new methods when exact lookup fails or is not applicable
22242,Bring up-to-date with master,
22243,Merge branch 'master' of github.com:hashicorp/nomad,
22244,Fixed the job spec test,
22245,Merge pull request #594 from hashicorp/f-restart-policy,More restart policy options and consolidate batch/service restart tracker
22246,Go vet,
22247,lowercasing err messages,
22248,Fix test because of jitter,
22249,Document jitter,
22250,Add jitter,
22251,Make NewRestartTracker private,
22252,Fix api test,
22253,fix,
22254,Update restart policy in mock,
22255,Fix mock,
22256,merge,
22257,Merge pull request #604 from hashicorp/f-port-err-msg,Throwing an error if ports are not named instead of crashing while parsing a job spec
22258,Changed the error message,
22259,Merge pull request #586 from hashicorp/f-job-gc,Add garbage collection to jobs
22260,Throwing an error if ports are not named,
22261,Added the change to service de-register to CHANGELOG,
22262,Merge pull request #602 from hashicorp/consul-dreg,Moving the de-register once a task moves to DEAD state
22263,Merge branch 'master' of github.com:hashicorp/nomad,
22264,Added unzip to the image,
22265,Moving the de-register once a task moves to DEAD state,
22266,update changelog,
22267,Merge pull request #601 from hashicorp/b-retry-interval,Fix retry interval not applying sleep duration
22268,Fix retry interval not applying sleep duration,
22269,Update changelog,
22270,Merge pull request #600 from hashicorp/b-task-status,Copy the task states from the client update
22271,Copy the task states from the client update,
22272,small refactor,
22273,Added some more deps into the vagrant box,
22274,Setting versions to 0.2.3,
22275,Bumping version to 0.2.3 final,
22276,Merge pull request #598 from hashicorp/dependencies,Removed a broken dependency
22277,Removed a broken dependency,
22278,Merge pull request #596 from hashicorp/b-exec-linux-runc-updates,Executors/Linux: Update Executor config struct
22279,Executors/Linux: Update Executor config struct,
22280,merge,
22281,Use client state,
22282,Small cleanup,
22283,Don't allow users to set gc and make batch gc,
22284,Remove from parser,
22285,Fix test,
22286,Remove user-specifiable gc threshold,
22287,Add garbage collection to jobs,
22288,Merge pull request #592 from jorgemarey/fix-doc-dns-search,Fix dns_search_domains option in the documentation.
22289,Updating the version,
22290,Fix dns_search_domains option in the documentation.,
22291,Merge pull request #591 from hashicorp/cgo,Using cgo dependencies to look up users
22292,Using cgo dependencies to look up users,
22293,Merge pull request #583 from hashicorp/f-consul-service,Making the allocs hold service ids
22294,Added a test to make sure services no longer present are being removed,
22295,Making sure existing ids for services are not re-generated,
22296,Populating service ids only if allocations can be placed for system jobs,
22297,Added a test to prove services are removed from the  map in Alloc if they are removed from the Tasks,
22298,Merge pull request #588 from ChrisHines/config-sort,Sort config files as documented.
22299,Sort config files as documented.,
22300,Changed some comments,
22301,Merge pull request #585 from hashicorp/b-config-oboe,Check length 0 (no configs) instead of 1 (some configs)
22302,Check length 0 (no configs) instead of 1 (some configs),
22303,Fixed the job endpoints test,
22304,Re-initializing the service map for in place updates,
22305,Renamed serviceId to serviceID,
22306,Fixed tests,
22307,Fixed the jobspec tests,
22308,Making the allocs hold service ids,
22309,Merge branch 'master' of github.com:hashicorp/nomad,
22310,Moving to Consul 0.6,
22311,Merge pull request #580 from ChrisHines/windows-agent,Use minimum OS specific path.
22312,Merge pull request #582 from ChrisHines/windows-api-tests,Remove clock granularity sensitive test assertion.
22313,Remove clock granularity sensitive test assertion.,TestRequestTime already verifies that the request time is properly recorded.
22314,Merge pull request #579 from hashicorp/f-consul-service-prefix,Changing the prefix of the service id
22315,Use minimum OS specific path.,"This change ensures LoadConfig and LoadConfigDir report consistent paths to files and those paths use the appropriate path separator for the target OS. Note that LoadConfigDir constructs paths with filepath.Join, which calls filepath.Clean, which calls filepath.FromSlash."
22316,Changing the prefix of the service,
22317,Changing the prefix of the service id,
22318,Allow lookups based on short identifiers,"This change introduces the ability to specify identifiers for jobs, allocs, evals and nodes on the command line with as little as one character, provided that it uniquely identifies the resource. An error with the possible results will be provided when the short identifier has multiple results."
22319,Using Go 1.5.2,
22320,Sort output of agent-info,
22321,Bumping up the version in website,
22322,Updated the changelog to add the 0.2.2 release date,
22323,Removing the pre-release marker,
22324,Fixed log printing logic,
22325,Add lint check for log.Printf usage,
22326,Changelog,
22327,Merge pull request #570 from hashicorp/b-logger,Remove all calls to the default logger
22328,Remove all calls to the default logger,
22329,Formatting tweaks,
22330,Added 0.2.1 release date to changelog,
22331,Formatting,
22332,Merge branch 'master' of https://github.com/hashicorp/nomad,
22333,Updated changelog for 0.2.2,
22334,Merge pull request #568 from hashicorp/f-precise-consul-dereg,Don't deregister services and checks which are not managed by Nomad
22335,Refactored test and added some comments,
22336,Adding the changes to structs,
22337,Exctracted nomad- to a constant,
22338,Removing extra lines,
22339,Making a struct to hold consul service config,
22340,Added a test for the filtering logic of service and clients,
22341,Deregister services and checks which are managed by Nomad,
22342,Merge pull request #567 from hashicorp/r-mute-consul-debug-messages,mute consul debug messages
22343,Renaming constants,
22344,Renaming constants,
22345,Not continuing sync if we couldn't get services and checks from consul,
22346,Merge pull request #569 from ChrisHines/ticker-leak,Avoid leaking a time.Ticker.
22347,Avoid leaking a time.Ticker.,
22348,Printing most of the consul messages only when the agent is available,
22349,Changed the log line in consul fingerprinter,
22350,Print consul debug messages only when the consul agent is available,
22351,Muted the consul debug messages,
22352,Merge pull request #561 from hashicorp/b-consul-sync,"Generate check names, check id and service id on the server side"
22353,Changing naming and debug message schemes,
22354,Copied generated id and names,
22355,CHANGELOG update,
22356,Merge pull request #556 from hashicorp/b-cache-docker-client,Do.Once docker client initialization
22357,Merge branch 'master' of https://github.com/hashicorp/nomad,
22358,CHANGELOG update,
22359,"Generate check names, check id and service id on the server side",
22360,Merge pull request #557 from hashicorp/b-config-test-windows,Fix a failing test on windows because of / vs. \ in string comparison
22361,Merge pull request #558 from hashicorp/b-raw-exec-dev,Enable raw exec in dev mode
22362,Move raw_exec enabled into the DevMode config block,
22363,Merge pull request #559 from cdrage/fix-typo,Fix minor spelling error
22364,Fix minor spelling error,
22365,Use ReadBoolDefault,
22366,Enable raw exec in dev mode,
22367,Do Once docker client initialization,
22368,Use filepath.FromSlash so the test uses platform-specific path separators,
22369,Merge pull request #519 from ChrisHines/windows-storage,client/fingerprint: Use GetDiskFreeSpaceEx instead of parsing output of fsutil on Windows.
22370,Merge branch 'master' of github.com:hashicorp/nomad,
22371,Added some extra log lines,
22372,Updated go version to 1.5.2,
22373,Merge pull request #553 from hashicorp/b-no-configs,Added message when no configuration files are loaded
22374,Added message when no configuration files are loaded,
22375,Improve error messages.,
22376,Merge pull request #527 from asteris-llc/master,Add cluster join command line options and configuration options
22377,Merge pull request #536 from hashicorp/f-log-config-files,Log the list of config files loaded when starting the nomad agent
22378,Merge pull request #535 from hashicorp/f-warn-unused-config,Warn the user when they specify a config file / folder that doesn't add any configuration options
22379,Merge pull request #544 from ChrisHines/windows-scheduler-tests,Skip unreliable time measurement assertions on Windows.
22380,Skip unreliable time measurement assertions on Windows.,
22381,Indicate which configuration option failed to parse properly,
22382,Move retryJoin error channel to Command structure,
22383,demo/digitalocean: add curl,
22384,Bumped up the version,
22385,Merge branch 'master' of github.com:hashicorp/nomad,
22386,Updated the Changelog with #543,
22387,Merge pull request #526 from ChrisHines/windows-agent,command/agent: fix tests on Windows
22388,Merge pull request #523 from ChrisHines/windows-api-tests,api: fix tests on Windows.
22389,Merge pull request #548 from hooklift/x-code-clean-up,Cleans up some code.
22390,Merge pull request #547 from hooklift/b-default-syslog-facility,Sets default syslog facility
22391,Addresses Go lint suggestions,
22392,Sets default syslog facility,As advertised by documentation.
22393,Merge pull request #543 from hashicorp/b-exec-linux-stop,Sending the user process sigint during shutdown on linux
22394,Sending the user process sigint during shutdown on linux,
22395,Merge pull request #541 from hashicorp/b-api-fields,Add Meta field for Node struct
22396,Add Meta field for Node struct,
22397,Fixing some log lines,
22398,Add test to verify order,
22399,Rename ConfigFiles field to Files so there's less stutter when used as config.Files,
22400,Log the list of config files loaded when starting the nomad agent,
22401,Merge pull request #532 from hashicorp/f-dist,Added some example config and init files
22402,Merge pull request #530 from hashicorp/docs-config,Corrected various errors and omissions configuration documentation
22403,Reformatted so we don't have long lines,
22404,Merge pull request #534 from hooklift/b-disables-cgo-build,Fixes #505
22405,Fixes #505,https://github.com/hashicorp/nomad/pull/421 removed the last piece of CGO dependant code. We we can stop building binaries with CGO enabled now.
22406,Merge pull request #533 from ChrisHines/windows-nomad-tests,Fix test to tolerate multiple pending plans with the same time stamp.
22407,Change /usr/local/bin to /usr/bin,
22408,Fix test to tolerate multiple pending plans with the same time stamp.,
22409,Upstart should use .conf extension,
22410,Change references to .conf files to .hcl,
22411,Change .conf extension to .hcl,
22412,Remove reference to _common.conf,
22413,Warn the user when they specify a config file / folder that doesn't add any configuration options,
22414,Corrected various errors and omissions configuration documentation,
22415,Fixed some issues with the example configs; removed _common,
22416,Fixed typo,Fixes #528
22417,Restore AtlasConfig,
22418,module -> module in DefaultConfig,
22419,Fix broken link to module,
22420,Fix links to configuration options,
22421,Add new configuration options to docs,
22422,Set defaults for module and module options,
22423,Add cluster join command line options and configuration options,
22424,Basic configs and init scripts,
22425,Do not leak listeners in test.,
22426,Work around bugs in package module in Go < 1.6.,
22427,Merge pull request #524 from hashicorp/b-user-lookup,Incorporate #421
22428,Added build flag to user-lookup so it does not build on windows,
22429,Merge branch 'user-lookup-nocgo' of https://github.com/carlosdp/nomad into b-user-lookup,
22430,Refactor out userLookup to helper package,Also replaces user.Lookup in exec driver
22431,Test request timing with a server slow enough to measure with low granularity system clocks.,
22432,Merge pull request #521 from hashicorp/f-periodic-parser,Add Periodic config to job
22433,Make testutil.TestServer work correctly on Windows.,
22434,Make golint happy.,
22435,fix perser,
22436,Add IsPeriodic,
22437,Fix validate,
22438,Add Periodic config to job,
22439,Merge pull request #514 from kaskavalci/master,Fixed git vet error on formatting
22440,Fixed typo on variable name,
22441,Merge pull request #520 from hashicorp/f-atlas,agent: apply merges for atlas config
22442,agent: apply merges for atlas config,
22443,Update network docs,
22444,Merge pull request #512 from hashicorp/f-shrink,nomad: shrink the recv buffer of idle streams
22445,Use GetDiskFreeSpaceEx instead of parsing output of fsutil on Windows.,
22446,Merge pull request #513 from bluk/fix_verifyssl_default,Verify Consul SSL by default
22447,Merge pull request #516 from legal90/fix-demo,Bump Nomad version to 0.2.1 in demo Vagrantfile
22448,Make demo Vagrantfile idempotent,
22449,Bump Nomad version to 0.2.1 in demo Vagrantfile,
22450,Fixed git vet error on formatting,
22451,Verify Consul SSL by default, Matches documentation default value and clarifies config
22452,Bump version,
22453,bump version,
22454,nomad: shrink the recv buffer of idle streams,
22455,Merge pull request #508 from cdrage/master,Update rkt docs for > v.0.10.0 of rkt
22456,Merge pull request #509 from hashicorp/f-service-name,"Implemented interpolation of Job, Task group and Task Names in Service Name"
22457,Updated the example nomad job spec to use task group name in the service name,
22458,Fixing the docs,
22459,Fixing the GetJob test,
22460,Added docs and the changelog entry,
22461,Added docs to the ExpandName method,
22462,Making the Job expand all service names during registration,
22463,Added a method to expand service names,
22464,Update rkt docs for > v.0.10.0 of rkt,
22465,Moving the args to helper,
22466,Merge pull request #504 from hashicorp/b-checks,This simplifies the logic of tracking services and checks
22467,Fixed some docs,
22468,Fixing tests,
22469,Added more docs,
22470,Merge pull request #506 from kaskavalci/patch-1,Typo
22471,Typo,"Fixed a typo, ""applies"" was written twice."
22472,Added a mock consul api client,
22473,Fixed a few tests,
22474,Added a test for modifying check,
22475,Fixed merge conflicts,
22476,Added some comments,
22477,Fixed tests,
22478,Merge branch 'master' of https://github.com/hashicorp/nomad,
22479,making the service checks in service pointers,
22480,Changelog update,
22481,Merge pull request #502 from ChrisHines/portable-driver-tests,Portable client/driver tests.
22482,Made the logic to track checks simpler,
22483,Merge,
22484,Update changelog,
22485,Updated Changelog,
22486,Using the service id in check hash,
22487,Merge pull request #503 from hashicorp/f-consul-use-https,Added options for adding more consul configuration
22488,Fixed the alloc runner test,
22489,Removed fingerprint docs from Service Discovery docs,
22490,Fixed the build,
22491,Removed redundant doc,
22492,Moved some docs around,
22493,Fixed some spellings in old docs,
22494,Added docs for consul options,
22495,Added options for adding more consul configuration,
22496,Merge pull request #498 from hashicorp/b-consul-check,Handle updates of Service and Check definitions
22497,Speed up tests by allowing parallel execution.,
22498,Use package testtask and httptest.Server to make client/driver tests OS independent.,
22499,Merge pull request #501 from hashicorp/b-distinct-host-panic,Distinct Host constraint accepts bool or string.
22500,Use package testtask in client/driver/spawn tests.,
22501,Extract bool conversion to method,
22502,Eliminate special case in production code for embedding test binary into chroot.,
22503,Accept string or bool,
22504,Improved tests,
22505,Add consul to Vagrantbox,
22506,Added a test to make sure we are adding a check to a service,
22507,Saving the host and port in tracked service,
22508,Fixing comment and syntax,
22509,Implemented syncing of checks,
22510,Factor portable test task out of client/driver/executor.,
22511,Dried the tests,
22512,Tracking the tasks too,
22513,Merge branch 'master' of https://github.com/hashicorp/nomad,
22514,Update the changelog,
22515,Merge pull request #497 from hashicorp/f-windows-executor-tests,Fix tests for nomad/client/driver/executor package to work on Windows.
22516,Inject the current binary into the chroot in test mode,
22517,Fix Executor_Open_Invalid test for Windows.,
22518,Include Executor_Open_Invalid in test suite.,
22519,Improve names and documentation in test code.,
22520,"Use TestMain to provide portable echo, sleep, and write commands.",
22521,Added a test to re-sync services,
22522,Update CHANGELOG.md,
22523,Merge pull request #495 from hashicorp/f-regions,Add regions endpoint
22524,nomad: sort regions before returning,
22525,api: add regions wrapper,
22526,Renamed consul client to service,
22527,Add Syntax tab under Jobspec,
22528,Update changelog,
22529,Fix casing in jobspec docs,
22530,Doc improvements for fingerprint whitelist and scheduler types,
22531,Merge branch 'master' of https://github.com/hashicorp/nomad,
22532,Standardize log messages in fingerprinters to DEBUG,
22533,Merge pull request #488 from max0d41/patch-1,Disable AWS and GCE fingerprinting via environment variables
22534,Registering Checks independently,
22535,Removing un-used imports,
22536,Generating the sha1 for a check,
22537,Removing a hot debug line,
22538,website: document regions endpoint,
22539,"Client config option ""fingerprint.whitelist""",
22540,nomad: testing region list,
22541,nomad: leader forwarding not needed for regions,
22542,nomad: use a read-only lock,
22543,nomad: support listing regions,
22544,Update changelog,
22545,Merge pull request #493 from hashicorp/f-eval-broker-blocking-dequeue,Make a zero timeout for eval_broker.Dequeue() block
22546,Merge pull request #494 from hashicorp/b-dynamic-port-conflict,Remove shared reference to DynamicPorts across allocs
22547,Remove unnecessary copy,
22548,Remove shared reference to network resources across allocs,
22549,Make a zero timeout for eval_broker.Dequeue() block,
22550,Merge pull request #491 from hashicorp/b-batch-task-restart,Not restarting if a task exited properly
22551,Added the PR number to changelog entry,
22552,Updated changelog,
22553,removing redundant fail(),
22554,Making the restart tracker aware of the exit codes,
22555,Not restarting if a task exited properly,
22556,Merge pull request #487 from hashicorp/b-single-consul-client,Consul fingerprinter only creates one consul client
22557,Clear consul attributes if consul couldn't be fingerprinted,
22558,Fingerprinter only creates one consul client,
22559,Merge pull request #482 from hashicorp/b-eval-broker-nil-timeout,Fix nil-pointer dereference with empty timeout on eval_broker.Dequeue
22560,Merge pull request #483 from BRMatt/patch-1,Fix syntax error in raw_exec config documentation
22561,Fix syntax error in raw_exec config documentation,Keys need to be surrounded by quotes if they contain periods
22562,Merge branch 'master' of github.com:hashicorp/nomad,
22563,Updated Changelog,
22564,Added docker TLS client to changelog,
22565,nil-pointer dereference with empty timeout Dequeue,
22566,Merge pull request #481 from hashicorp/b-vet,Fix some issues caught by go vet
22567,Merge pull request #480 from hashicorp/f-docker-tls-config,Added docker.tls config file options and docs
22568,Fix some issues caught by go vet,
22569,Change println to printf,
22570,Don't show endpoint when we're not using it,
22571,Added docker.tls config file options and docs,
22572,Merge pull request #479 from hashicorp/r-consul-check,Using the service name in the service id so that it's unique
22573,Update changelog,
22574,Merge pull request #442 from ChrisHines/windows-spawn,Fix tests for nomad/client/driver/spawn package to work on Windows.
22575,Updated changelog with docker port fixes,
22576,Merge pull request #476 from hashicorp/b-docker-expose,"Fixed some issues with expose, port mapping, and environment variables"
22577,Merge pull request #473 from hashicorp/f-driver-whitelist,Client Config allows a driver whitelist.
22578,Renamed whitelisted to skipped and update debug line,
22579,Added client checks back to the tests that can't use dockerSetup(),
22580,Using the service name in the service id so that it's uniq,
22581,Merge pull request #477 from carlosdp/fix-docker-auth-typo,Fix small typo in Docker auth docs
22582,Fix small typo in Docker auth docs,
22583,Added nil to network.MapLabelToValues call,
22584,Squash []map[string]type for port_map and labels into map[string]type,
22585,"Fixed some issues with expose, port mapping, and environment variables"," Port mapping now works for reserved ports as well as dynamic ports Environment variables were being set twice in two different ways; now they are only set once Comprehensive tests for exposed ports, forwarded ports, and environment variables Cleaned up / DRYed up a lot of test code"
22586,Docs,
22587,Tests,
22588,Implement the driver whitelist,
22589,Merge pull request #470 from hashicorp/f-containerid,Add ContainerID() method to get the containerID from a handle
22590,Export DockerHandle and change tests to use DockerHandle.ContainerID(),
22591,Add ContainerID() method to get the containerID from a handle,
22592,Merge pull request #466 from fernandezvara/fix-docker-port-mappings,docker port allocation not mapping correctly
22593,fix docker port allocation?,
22594,Fix network fingerprint test,
22595,Update website version,
22596,Fixed the docs related to port map and networking,
22597,Fixing a link on the website,
22598,Update demo vagrant box,
22599,Merge branch 'master' of https://github.com/hashicorp/nomad,
22600,Nomad 0.2.0 changelog,
22601,Bump version,
22602,Merge pull request #464 from hashicorp/f-consul-check,Changing the code comment
22603,Changing the code comment,
22604,Merge pull request #463 from hashicorp/f-consul-check,Nuking the service and registering it so that checks are cleaned up
22605,Nuking the service and registering it so that checks are cleaned up,
22606,Merge pull request #460 from hashicorp/f-consul-check,Making sure we sync the real state of services of a Task with Consul
22607,Merge pull request #461 from hashicorp/f-allow-no-interfaces,Allow no interfaces in network fingerprinter
22608,Allow no interfaces in network fingerprinter,
22609,Triggering the next sync after we have finished the current one,
22610,Merge pull request #459 from ChrisHines/parse-env,Handle additional edge cases when parsing environment variables.
22611,Making sure we sync the real state of services of a Task with Consul,
22612,Handle additional edge cases when parsing environment variables.,
22613,Merge pull request #457 from hashicorp/docs-networking,Documentation for ports and other networking things
22614,Fix some typos,
22615,Merge pull request #458 from hashicorp/f-consul-check,Added a test for consul client and making sure we update service and checks if user updates them
22616,Updating checks and services when allocs are refreshed,
22617,Added a test to ensure invalid services are not registered,
22618,Reformat,
22619,Merge branch 'master' into docs-networking,
22620,Added notes about container name and UDP/TCP,
22621,Updated docker docs with information about port_map and auth options,
22622,Update changelog to reflect backwards incompatibility for ports,
22623,Added networking page,
22624,Merge pull request #456 from hashicorp/revert-454-revert-452-f-arg-list,Make drivers take args as a list rather than as a string
22625,Register gob type and remove slicetype,
22626,remove args from mock,
22627,"Revert ""Revert ""Make drivers take arguments as a list and not as a string""""",
22628,Merge branch 'master' of https://github.com/hashicorp/nomad,
22629,Change quotes to backticks to highlight literal values,
22630,Merge pull request #455 from hashicorp/f-consul-check,Refactor consul check
22631,Added info for default value of check protocol,
22632,Added a check for accpeting protocol information in consul check,
22633,Added a test to check check creation,
22634,Added a test to check check creation,
22635,Changed the http field to path,
22636,Wrap literal strings in backticks so they don't turn into URLs,
22637,Fix formatting issue that made most of the page a pre-formatted block,
22638,Fix errant spaces in frontmatter,
22639,Merge pull request #454 from hashicorp/revert-452-f-arg-list,"Revert ""Make drivers take arguments as a list and not as a string"""
22640,"Revert ""Make drivers take arguments as a list and not as a string""",
22641,Merge pull request #438 from hashicorp/b-makefile,Added some missing dependencies for linux x-compile
22642,Merge pull request #452 from hashicorp/f-arg-list,Make drivers take arguments as a list and not as a string
22643,Merge pull request #451 from hashicorp/f-consul-docs,Added the consul docs
22644,Merge branch 'f-consul-docs' of github.com:hashicorp/nomad into f-consul-docs,
22645,Fixed the sidebar-current,
22646,Merge branch 'f-consul-docs' of https://github.com/hashicorp/nomad into f-consul-docs,
22647,Removed blank lines,
22648,Reformat,
22649,changed the intro,
22650,Use one msgpack codec and have it decode []string in nil interfaces,
22651,Update version to 0.2.0-dev,
22652,Remove returning the error,
22653,More test fixes,
22654,Rebase,
22655,Fix executor tests,
22656,Docs,
22657,Rebase,
22658,Update ParseAndReplace to take a list of args and remove shell style parsing,
22659,More grammer fixes,
22660,Added more explanation to name,
22661,Fixed more typos and changed some sentences,
22662,Fixed some typo,
22663,Added the consul docs,
22664,Merge pull request #450 from ChrisHines/master,Move test code to *_test.go file.
22665,Move test code to *_test.go file.,
22666,Added missing %s to error format string,
22667,"Revert ""Added missing %s to error format string""",This reverts commit f4acdfd035c2ffa196035cc574d8b40a1795abb3.
22668,Added missing %s to error format string,
22669,increased test timeout to 80s so docker tests don't timeout and panic,
22670,Added skeletons for networking and restart policies docs,
22671,Merge pull request #446 from hashicorp/f-consul-client,Register services with Consul
22672,Added a log line to indicate we are registering a service with Consul,
22673,Merge pull request #443 from hashicorp/f-docker-dns-config,Change docker DNS configuration to lists
22674,Merge branch 'master' into f-docker-dns-config,
22675,Removing support for scrpt checks,
22676,Merge pull request #445 from carlosdp/fix-docker-auth,De-nest docker registry auth and reformat related doc
22677,Added a lock around modification of tracked services map,
22678,Added some docs,
22679,Removed a debug log,
22680,Added the option to configure consul address,
22681,Shutting down consul an not trying to de-register the consul service,
22682,Added the logic to retry services which needs to be tracked if consul doesn't respond,
22683,Registering the checks with consul,
22684,Defering calling the de-register from consul call when a service is not running,
22685,Added a logger to consul client,
22686,Fixed the test errors,
22687,Nest Docker driver auth under object,
22688,DRYed the code,
22689,Moving the logic to find port and host inside consul client,
22690,Added the implementation of consul client,
22691,De-nest docker registry auth and reformat related doc,
22692,Merge branch 'master' of https://github.com/hashicorp/nomad,
22693,Add page describing scheduler types,
22694,Updated changelog to include DNS and auth explicitly,
22695,Updated docs to indicate you should use a list,
22696,Change DNS and DNSSearch to use lists; added a test,
22697,Merge branch 'master' into f-docker-dns-config,
22698,Change dns_servers and dns_search_domains from comma-delimited strings to lists,
22699,Merge pull request #439 from hashicorp/b-docker-ports-len,Fix docker port tests and empty port_map
22700,Change error check to contains instead of ==,
22701,Renamed some things so it's more apparent that reserved and dynamic port mapping have very similar code,
22702,Fix docker config option name in docs,
22703,Update qemu docs,
22704,Remove \n since this is added by the logger,
22705,Merge pull request #441 from hashicorp/f-qemu-port-map,Qemu driver takes a port_map to configure host to guest port forwarding
22706,Qemu driver takes a port_map to configure host to guest port forwarding,
22707,Purge existing container during Start(),
22708,Speed up tests by allowing parallel execution.,
22709,Move defer f.Close after error check.,
22710,Use TestMain to provide portable echo and sleep commands.,
22711,Extract code to acquire temp file name and make sure the file is closed so os.Remove works on Windows.,
22712,fix kernel/os attributes,
22713,Log container name and labels,
22714,Added a randomized alloc id for tests so container names don't collide,
22715,Update environment docs regarding ports,
22716,Merge branch 'master' into b-docker-ports-len,
22717,Fix guards for docker port mapping and change dummy dynamic ports to real ports (0 is not a valid port),
22718,Update API docs,
22719,Fix guard for port maps not being specified,
22720,Merge branch 'master' of https://github.com/hashicorp/nomad,
22721,Added network_mode changes to the changelog,
22722,Update jobspec to have restart policy and fix indents on distinctHost,
22723,Added some missing dependencies for linux x-compile,
22724,Merge pull request #434 from hashicorp/f-docker-any-network,Remove restrictions from docker networking mode
22725,Reformat post-merge,
22726,Merge branch 'master' into f-docker-any-network,
22727,Updated docs for networking_mode and also reformat the file,
22728,Merge pull request #425 from hashicorp/f-service-block,Parsing logic for service block
22729,Merge pull request #436 from hashicorp/f-docker-cleanup,Cleanup docker driver
22730,Inline err assignment,
22731,Fixed typo,
22732,Added a test which makes sure parsing fails if more than one service block has non empty names,
22733,Streamline reading boolean values from the driver / job config,
22734,Added missing linebreaks for log.Printf calls,
22735,Adding prefix to user defined name and forcing id to be blank during parsing,
22736,Do Itoa once so line items are simpler,
22737,Merge pull request #437 from hashicorp/f-docker-labels,Support labels for docker containers
22738,Validating that services are named explicitly if there is more than one Service defn,
22739,Autogenerating names of service,
22740,Merge branch 'docker-allow-to-add-labels' of https://github.com/fernandezvara/nomad into f-docker-labels,
22741,Update rkt docs to denote its experimental status,
22742,Update changelog,
22743,Improve phrasing in log messages,
22744,Adding some sanity checks to checks,
22745,Exctacted a method for parsing checks,
22746,Added some docs for the service and servicecheck type,
22747,Added the protocol field for check,
22748,Added validation to the checks,
22749,Exctracted the logic of parsing services in a method,
22750,Added the fields for http and script checks,
22751,Added the service definitions in api structs too,
22752,Added tests for service block parsing,
22753,Added comments,
22754,Added the parsling logic for service blocks,
22755,Added the example for service block,
22756,Merge pull request #389 from achanda/name,Set a name for the container
22757,Clean up extraneous variables,
22758,That's not a declaration,
22759,Remove restrictions from docker networking mode; we assume users know what they are doing,
22760,Merge branch 'master' into f-docker-cleanup,
22761,Move core block to the top,
22762,Reformatted and sorted changelog enties,
22763,Merge pull request #432 from hashicorp/d-changelog-update,Update Changelog
22764,Add components,
22765,Move backwards incompatibilities section to top,
22766,Remove extra space,
22767,Delimit angle brackets,
22768,Update changelog,
22769,Merge pull request #429 from hashicorp/b-batch-restart-policy,Fixed validation logic for restart policy when interval is zero
22770,Merge branch 'master' of https://github.com/hashicorp/nomad,
22771,Avoid calling destroy twice,
22772,Merge pull request #426 from carlosdp/hostname-docker,Add hostname parameter to Docker driver
22773,updating website: docker driver configuration,
22774,allow to set labels on docker containers,
22775,Fixed validation logic for restart policy when interval is zero,
22776,Add note to Docker hostname to explain hostname duplication,
22777,Add hostname parameter to Docker driver,
22778,Merge branch 'master' of github.com:hashicorp/nomad into docker-allow-to-add-labels,
22779,revert previous commit,
22780,Improve logging and DRY some of the port mapping code,
22781,Add missing param and error in the missing case so default will work as expected,
22782,Merge pull request #415 from hashicorp/f-port-labels,Implemented Port Labeling and Driver Configurations
22783,Added config reader for booleans,
22784,Addressed some review comments,
22785,Merge pull request #424 from hashicorp/f-alloc-status-cli,alloc-status displays individual task state
22786,fix arg check,
22787,Review fixes,
22788,Add docs,
22789,Get rid of incorrect length check,
22790,Display task information,
22791,go fmt,
22792,Change logging port as %d to logging port.Value,
22793,Merge branch 'master' into f-port-labels,
22794,Merge pull request #416 from hashicorp/f-task-state,Track Tasks State
22795,Change SetExitMessage from taking a string to an error,
22796,Use loop not recursion,
22797,Fix the capacity,
22798,Change event type to string,
22799,Track Task State in the client and capture Wait results,
22800,Initialize task state in allocation sent by scheduler,
22801,Add TaskState to alloc,
22802,Avoid map[interface{}]interface{} conversions in the msgpack codec,
22803,jobspec: add test for types of nested configs,
22804,Made the code more DRY,
22805,Fixed the docker auth config,
22806,Adding comments to fields in the docker driver config,
22807,mapstructure close quotes,
22808,RawToSting true for structs codec. Needed for encoding strings in nil interfaces,
22809,Fixed the java driver config,
22810,Making sure that there is only one port_map block in the docker driver config,
22811,Fixed the structs test,
22812,Fixed the exec driver config,
22813,Fixed the test related to setting env variables in tasks,
22814,Fixed the allocdir tests,
22815,Fixed compilation issues with driver tests,
22816,Fixed the tests for jobspec,
22817,Fixing the scheduler tests,
22818,Fixed the client tests,
22819,Fixed the api tests,
22820,Fixed the parsing and encoding logic,
22821,Making the config for drivers public,
22822,DRYed the code,
22823,Implemented port labeling and driver configs,
22824,Adding the port hcl object to example,
22825,Remove CGO dependency for user lookup in allocdir,os/user's user.Lookup requires that the artifact be compiled with CGO support enabled. This change instead reads /etc/passwd directly. The code was acquired from docker/docker#1096
22826,Merge pull request #420 from hashicorp/f-rpc-codecs,Update Nomad Client/Server RPC codecs to use custom msgpackHandle
22827,Update Nomad Client/Server RPC codecs to use custom msgpackHandle,
22828,POC: allow to add labels for docker containers from job metadata,
22829,Merge pull request #412 from hashicorp/f-docker-expose,Expose provisioned ports for docker containers
22830,Merge pull request #413 from gjacquet/fix-aws-metadata-url,Fix AWS metadata url
22831,Fix AWS metadata url,Fix URL. It was printing an error message on startup: module By the way is it safe to use latest? Is there a chance that Amazon decides to change the format of the metadata? It could be safer to use something like module
22832,Change this to a valid IP address so docker can bind to it,
22833,Expose mapped ports,
22834,Merge pull request #411 from hashicorp/b-save-tr-state,Saving state of the Task Runner while it's trying to update it
22835,Saving state of the Task Runner while it's trying to update it,
22836,Merge pull request #402 from fernandezvara/fix-api-node-allocations,"api /v1/node//allocations returns an array of Allocation objects,…"
22837,updating docs http node allocations,
22838,Merge pull request #409 from hashicorp/b-restart-policy-validation,Making sure a Task Group has a restart policy
22839,Making sure a Task Group has a restart policy,
22840,Merge pull request #405 from hashicorp/new_header,New header/footer design
22841,Merge pull request #408 from hashicorp/f-client-restore,Client Restore State Fixes
22842,hover color in footer,
22843,Merge pull request #407 from hashicorp/f-docker-host-env,Change Docker ENV behavior
22844,Check for previous embeds at entry level not folder level,
22845,Added some comments to the test to explain why we're doing stuff this way,
22846,Change dockerIs to accept testing.T for logging,
22847,Merge pull request #400 from nak3/fingerprint-test,Update fingerprint test codes
22848,Enable Open tests for Exec/Java,
22849,Enable AllocRunner_SaveRestoreState test,
22850,Update test,
22851,Increase time out,
22852,Guard mounting dev/ and proc/ and TaskRunner_RestoreState test,
22853,Change Docker fingerprinter to INFO and not error when the connection to the daemon fails; we simply assume docker isn't there.,
22854,Client Restore test,
22855,Changed behavior for Docker ENV," Docker ENV variables now work the same way in production, dev, and test Docker ENV variables are ignored if docker.endpoint is present in the Nomad config file Remote tests now work correctly"
22856,Fix alloc_dir mounting through task restarts,
22857,whitespace,
22858,edit this page link placement,
22859,update footer,
22860,Merge pull request #403 from hashicorp/f-snapshot-on-task-update,Updating snapshots of a TaskRunner when status of Task changes
22861,Returning back if alloc runner isn't saved,
22862,Exctracted a method to save the alloc runner state,
22863,Inlining error check,
22864,Refactored Save State of Alloc runner,
22865,Client restores state properly,
22866,Returning once we have an error while saving a task that doesn't exist,
22867,Updating snapshots of a TaskRunner when status of Task changes,
22868,command/agent: use new HCL API,
22869,Merge pull request #401 from hashicorp/b-new-hcl,jobspec: new HCL API
22870,"api /v1/node//allocations returns an array of Allocation objects, not AllocationIndexStub",
22871,jobspec: new HCL API,
22872,Update fingerprint test codes,
22873,style polish,
22874,remove hero translation,
22875,new header in progress;,
22876,Merge branch 'master' of https://github.com/hashicorp/nomad,
22877,Don't set the alloc status twice when not restarting,
22878,Merge pull request #399 from hashicorp/f-windows-networking,Use the same network fingerprinter for *nix and windows
22879,Merge pull request #398 from hashicorp/b-vagrant-docker-restart,Restart docker after upgrades
22880,Merge branch 'master' into f-windows-networking,
22881,Merge pull request #397 from hashicorp/f-spawner-validate,Add Valid command to spawner and make executors check when opening
22882,System jobs use Service restart policy,
22883,Restart docker after upgrades,
22884,Comments on alive,
22885,Add Valid command to spawner and make executors check when opening,
22886,Merge pull request #392 from hashicorp/f-raw-exec-use-exec,RawExec driver uses exec_basic
22887,Merge pull request #394 from hashicorp/f-qemu-use-exec,Qemu Driver uses Executor
22888,merge,
22889,Merge,
22890,Docker privileged checks if host enabled it,
22891,Merge pull request #390 from the-control-group/f-docker-driver-options,Expanded docker driver options
22892,Set a name for the container.,
22893,Merge pull request #391 from hashicorp/f-periodic-fingerprint,Add support for periodic fingerprints and make consul periodic
22894,Merge pull request #395 from hashicorp/f-allocid,Passing in the AllocID to exec context
22895,Make periodic fingerprinting log the error,
22896,Passing in the AllocID to exec context so that it can be used in the drivers,
22897,Fix build,"returned wrong value, and forot a "":"" :/"
22898,Merge pull request #393 from hashicorp/f-client-side-restarts,Part 2 - Client side restarts
22899,Refactored test,
22900,Fixed some tests and refactored logic,
22901,Incremeneting the counter once we calculate next restart,
22902,Added some comments to code,
22903,"Updated module option, added client module option", Added error checking on priviliged mode. Added module to client config/fingerprint
22904,Added the client word to log lines,
22905,Passing restart tracker in the task runner,
22906,Fixing the test,
22907,Cleaned up the logic to calculate restart duration,
22908,Merge pull request #388 from hashicorp/f-basic-exec-use-spawner,Basic executor uses spawner and an executor test harness
22909,Client handles periodic fingerprinters,
22910,Add consul fingerprinter to builtin list; sort list; fix bad error in consul fingerprinter,
22911,Merge fix,
22912,Calling incorrect executor build method,
22913,Update CHANGELOG.md,
22914,Merge pull request #381 from hashicorp/f-getter-refactor,client/drivers: Refactor to use Getter wrapper
22915,Fix typo,
22916,Fixed the log statements,
22917,Added the logic to restart Tasks if possible,
22918,Setting the restart policy to AllocRunner and Task Runners,
22919,Merge pull request #377 from nak3/selinux-docker-driver,Apply SELinux label to allocate directory of docker driver
22920,Merge branch 'master' of https://github.com/hashicorp/nomad into f-docker-driver-options, 'master' of https://github.com/hashicorp/nomad: (59 commits)   Move the executor and spawn package into driver   Remove file watching   Check if the PID is alive instead of heartbeating through modify time   Update CHANGELOG.md   nomad/watch: add a note about the Item struct   go fmt this file   Vet errors   Search path   Update website   Make a basic executor that can be shared and fix some fingerprinting/tests   Small improvements   Use const value for AWS metadata URL   Create Spawn pkg that handles IPC with the spawn-daemon and update exec_linux to use that   Fixed the restart policy syntax   Introducing vars to create default batch and service restart policies   Fixed the tests   Declaring Batch and Service default restart policies   Fixing tests to not create a TG without restart policies   This option only work -> This option only works   leave -> leaving   ...
22921,Added task configuraton options for docker driver, Added module option to task config to allow containers to run in  priviliged mode. Added module option to task config to allow containers to use   custom DNS servers Added module option to task config to allow containers to   use custom dns search domains Added authentication options (under key namespace module) to allow   authentication on a task level for docker remote. Updated site docs to reflect changes
22922,exec_basic uses Spawner; create shared test harness for executors,
22923,"add checksums to tests, formatting after rebase",
22924,remove debug line,
22925,refactor drivers to use new getter,
22926,"add getter package, a thin wrapper of go-getter",
22927,Get rid of exec.cmd struct and setuid file,
22928,Merge pull request #383 from hashicorp/f-driver-restructure,Move the executor and spawn package into driver
22929,Move the executor and spawn package into driver,
22930,Merge pull request #380 from hashicorp/f-daemonize,Improve spawn-daemon and Nomad Client usage of it
22931,Remove file watching,
22932,Apply SELinux label to allocate directory of docker driver,
22933,Check if the PID is alive instead of heartbeating through modify time,
22934,Merge pull request #368 from hashicorp/b-docs,"website: clean up HTTP docs, add blocking queries"
22935,Update CHANGELOG.md,
22936,Merge pull request #366 from hashicorp/f-blocking,Support blocking queries
22937,nomad/watch: add a note about the Item struct,
22938,go fmt this file,
22939,Vet errors,
22940,Search path,
22941,Update website,
22942,Make a basic executor that can be shared and fix some fingerprinting/tests,
22943,Small improvements,
22944,Merge pull request #379 from nak3/const-aws,Use const value for AWS metadata URL
22945,Use const value for AWS metadata URL,
22946,Create Spawn pkg that handles IPC with the spawn-daemon and update exec_linux to use that,
22947,Merge pull request #369 from hashicorp/f-client-side-restarts,Client Side Restarts - Part 1
22948,Fixed the restart policy syntax,
22949,Introducing vars to create default batch and service restart policies,
22950,Fixed the tests,
22951,Declaring Batch and Service default restart policies,
22952,Fixing tests to not create a TG without restart policies,
22953,Merge pull request #372 from charlieok/patch-1,Remove redundant 'all'
22954,Merge pull request #375 from charlieok/patch-3,leave -> leaving
22955,Merge pull request #376 from charlieok/patch-4,This option only work -> This option only works
22956,This option only work -> This option only works,
22957,leave -> leaving,
22958,Merge pull request #374 from charlieok/patch-3,appicable -> applicable
22959,appicable -> applicable,
22960,Remove redundant 'all',
22961,Not validating task groups if it's nil in a job,
22962,Added a RestartPolicy to some mocks,
22963,Fixed grammer of comment,
22964,Added the restart policies to mocks,
22965,Re-using toDuration while figuring out staggertime,
22966,Use the same network fingerprinter for *nix and windows,
22967,Sending restart policies to the Nomad API,
22968,Added support for parsing restart blocks,
22969,"website: clean up HTTP docs, add blocking queries",
22970,nomad/state: subscribe/unsubscribe all watch items while holding the lock,
22971,nomad: cleanup and more tests,
22972,nomad/state: add watch trigger tests,
22973,nomad: more tests,
22974,Merge pull request #365 from hashicorp/dev-config-network-interface,Setting the default network interface for dev mode only in Linux and Darwin
22975,Setting the default network interface for dev mode only in Linux and Darwin,
22976,Merge pull request #356 from hashicorp/network-fingerprint-refactor,Network fingerprint refactor
22977,Merge pull request #352 from hashicorp/f-qemu-windows,Get Qemu to fingerprint and test properly on both windows and linux
22978,Add comment explaining the qemu-img command on windows,
22979,nomad: support blocking queries on eval-specific allocations,
22980,Merge branch 'master' into network-fingerprint-refactor,
22981,Refactored code,
22982,nomad: support blocking queries for single evals,
22983,nomad: support blocking queries on single allocations,
22984,Renamed BasicNetworkInterfaceDetector to DefaultNetworkInterfaceDetector,
22985,nomad: support blocking queries on single nodes,
22986,Merge pull request #362 from gregory-m/node-gc-conf,Configure Node GC Threshold
22987,Comments,
22988,nomad: support blocking queries on job allocations,
22989,"Cleanup exec_linux, force cgroups, check for systemd and update the Open() api",
22990,Fixed a debug message,
22991,Fixed style of a debug log,
22992,Added a test to ensure we are not selecting devices which are not marked as UP or loopback and have no IP addresses,
22993,nomad: support blocking queries on single jobs,
22994,nomad: export watcher to share between rpc and state store,
22995,Merge pull request #361 from gregory-m/lo-iface-name-fix,Fix local interface name on OS X
22996,nomad: add triggering for more types of events,
22997,Merge pull request #363 from hashicorp/sethvargo/releases,Trailing slash
22998,"nomad: move state watcher into its own file, add tests",
22999,Trailing slash,
23000,nomad: deduplicate watch items with a helper,
23001,nomad: unify watcher inputs for reusability,
23002,Added some coments,
23003,Added tests for testing detecting default device,
23004,node_gc_threshold documentation.,
23005,Added node_gc_threshold configuration option,Close #333
23006,Fix local interface name on OS X,
23007,Merge pull request #358 from charlieok/patch-1,should be use -> should be used
23008,should be use -> should be used,
23009,Merge pull request #357 from charlieok/patch-1,Gracefully termination -> Graceful termination
23010,Gracefully termination -> Graceful termination,
23011,nomad: support full table watches for allocations,
23012,nomad: fix node test output,
23013,nomad: support blocking queries on eval list,
23014,nomad/state: move methods so we can sanely find them,
23015,Exec driver only applies on linux as root,
23016,Refactor spawn-daemon so it can be used by all OSes and make it write exit code to a file,
23017,Introduced an interface to detect network devices so that we can mock it for tests,
23018,Refactored the findInterfaces method to make it more clear,
23019,Some coding style changes,
23020,We don't want lo and PPP in production,
23021,Added more information to log,
23022,Adding more information to errors,
23023,Merge pull request #355 from steve-jansen/docs-agent-config-atlas,Update agent config docs on Atlas integration
23024,Update agent config docs on Atlas integration,Provide a pointer to https://github.com/hashicorp/nomad/issues/183 regarding Nomad/Atlas integration
23025,Added more comments,
23026,Merge pull request #350 from hashicorp/b-vagrantfile,Update the vagrant file
23027,"Double the ram, double the fun",
23028,Selecting the ipv4 address if there are ipv4 and ipv6 addresses configured for an interface,
23029,"nomad: job watches return correct response, add tests",
23030,nomad: test all node watch triggers,
23031,nomad: support blocking queries on nodes,
23032,nomad: use a generic full-table watcher,
23033,Exctracted a method to detect network interface,
23034,Use same binary as Fingerprint in the QemuCompatible function,
23035,Merge pull request #351 from hashicorp/f-clean-constraints,Remove weight and hard/soft fields from constraint
23036,Fix merge conflicts,
23037,Merge pull request #353 from nak3/assign-ip,Assign IP address when network device is specified
23038,Assign IP when network device is specified,
23039,"style change, no logic change",
23040,nomad: allow blocking on empty data views,
23041,nomad: initial pass at blocking queries for jobs,
23042,Get Qemu to fingerprint and test properly on both windows and linux,
23043,Remove weight and hard/soft fields from constraint,
23044,Using the Go stdlib APIs to detect IP Address of a device,
23045,Merge branch 'master' into b-vagrantfile,
23046,Merge pull request #334 from nak3/set-default-net-interface,Set default network interface rather than eth0
23047,"Set default network interface rather than eth0 for non-dev mode, and use loopback device for dev mode by default",
23048,Merge pull request #321 from hashicorp/f-unique-constraint,"Add ""distinctHost"" constraint"
23049,Rename Dynamic -> ProposedAllocConstraintIterator,
23050,Cleanup DynamicConstraintIterator,
23051,Merge pull request #340 from hashicorp/sethvargo/releases,Use releases for releases
23052,Merge pull request #345 from charlieok/patch-1,have a the string -> have the string
23053,have a the string -> have the string,
23054,Constants for constraints and renaming to use undescore instead of camel,
23055,Merge pull request #344 from charlieok/patch-1,deregistraion -> deregistration
23056,deregistraion -> deregistration,
23057,Merge pull request #343 from charlieok/patch-1,an option job ID -> an optional job ID
23058,an option job ID -> an optional job ID,
23059,Merge pull request #341 from achanda/gofmt,Run gofmt
23060,Run gofmt,
23061,Merge pull request #327 from hashicorp/b-check-env-var-updates,Check for environment variable updates for tasks
23062,Merge pull request #330 from kikitux/master,list Getting in depth in same order as menu
23063,Use vendored fastly logo,
23064,Update CHANGELOG.md,
23065,Merge pull request #288 from hashicorp/f-go-getter,"Drivers: Use go-getter for artifact retrieval, add artifact support to Exec, Raw Exec drivers"
23066,Use releases for releases,
23067,drivers: Add/Use go-getter to fetch remote binaries,"Updates Qemu, Java drivers to use go-getter to fetch binaries Adds remote artifact support for Exec, Raw Exec drivers"
23068,Merge pull request #339 from charlieok/patch-1,tasks groups -> task groups
23069,tasks groups -> task groups,
23070,Merge pull request #338 from charlieok/patch-3,resources use -> resource use
23071,Merge pull request #336 from charlieok/patch-1,diver -> driver
23072,Merge pull request #337 from charlieok/patch-2,systems -> system's
23073,resources use -> resource use,
23074,systems -> system's,
23075,diver -> driver,
23076,Merge pull request #335 from charlieok/patch-1,will be ran -> will be run
23077,will be ran -> will be run,
23078,Set default network interface rather than eth0,
23079,list Getting in depth in same order as menu,
23080,Merge pull request #325 from hashicorp/f-reset-nack,Reset evaluation Nack timer in response to scheduler operations
23081,"Revert ""dont hard code scheduler type name""",This reverts commit fb0e0dfc2be596ad435a00a2e131a2000146b1f1.
23082,dont hard code scheduler type name,
23083,Merge branch 'master' of https://github.com/hashicorp/nomad,
23084,Format rkt_test,
23085,Merge pull request #322 from achanda/test-cleanup,Test cleanup
23086,Check for environment variable updates for tasks,
23087,Cleanup tests, Consolidate checking if non-windows and if qemu is installed Fix non-windows check
23088,Merge pull request #323 from gregory-m/order-agent-members,Sort server-members output using name and tags
23089,Sort server-members output using name and tags,
23090,nomad: use OutstandingReset in Eval endpoints and Plan apply,
23091,nomad: OutstandingReset returns specific errors,
23092,nomad: Adding OutstandingReset to EvalBroker,
23093,Fix markdown and log messages,
23094,add new test fixture,
23095,"Change ""unique"" to ""distinctHosts""",
23096,Add test fixture,
23097,Fix test and simplify some boolean logic/fix metrics counting,
23098,Documentation and making unique first class in the constraint block,
23099,Add dynamic constraint to generic_scheduler,
23100,DynamicConstraintIterator that implements the unique constraint,
23101,Update the location of cleanhttp,
23102,Merge pull request #313 from achanda/attributes,Show node attribute in node-status
23103,Merge pull request #319 from hashicorp/cleanhttp,Use cleanhttp for truly clean clients and transports.
23104,Merge pull request #314 from achanda/rkt-version,Just put the version as string
23105,Use cleanhttp for truly clean clients and transports.,
23106,Show node attribute in node-status,Adds node attributes to the node-status command when a single node ID is passed
23107,Just put the version as string,
23108,Merge pull request #310 from hashicorp/f-node-up-eval,Create evals for system jobs on node registration
23109,Also create evals from Down -> Ready,
23110,Merge pull request #316 from gregory-m/vet,Make go vet happy
23111,Make go vet happy,
23112,Merge pull request #312 from hashicorp/b-rolling-update,Added the UpdataStrategy struct to the api/jobs struct
23113,Do a full loop of the sys-job iterator before the fast-path check,
23114,Fixed the imports,
23115,Added the UpdataStrategy struct to the api/jobs struct so that we don't loose the information passed on from the cli,
23116,Cleanup system job loop,
23117,UpdateStatus test to ensure system evals are created on state transistion,
23118,Add scheduler type index to jobs table; create evals for system jobs on node init to ready transition,
23119,Merge pull request #308 from poll0rz/patch-1,Update doc with System Scheduler from PR #287
23120,format long line,
23121,Merge pull request #307 from hashicorp/qemu-checkup-doc-update,"driver/qemu: Update docs, we use SHA256 not MD5"
23122,Update cgroup CPU to use int comparison not float,
23123,system scheduler (PR #287),https://github.com/hashicorp/nomad/pull/287
23124,Update schedulers - system (PR #287),https://github.com/hashicorp/nomad/pull/287
23125,"driver/qemu: Update docs, we use SHA256 not MD5",
23126,Check for invalid CPU limit for cgroups,
23127,Merge pull request #299 from charlieok/patch-2,suggested clarification on automatic port mapping
23128,Update docker.html.md,
23129,Merge pull request #300 from charlieok/patch-3,depending how how -> depending on how
23130,depending how how -> depending on how,
23131,suggested clarification on automatic port mapping,
23132,Fix a racy test and increase the raft timeouts to mitigate other racy tests,
23133,Merge pull request #287 from hashicorp/f-system-scheduler,Add System Scheduler that runs tasks on every node
23134,Merge pull request #291 from hashicorp/d-rkt-volume-mounts-blocked,Document that Rkt doesn't support task directory mounting
23135,Merge pull request #297 from achanda/jvm_opts_fix,Actually append jvm opts to the CLI
23136,Remove base nodes from stack constructors,
23137,Unit tests for the refactor scheduler methods,
23138,Actually append jvm opts to the CLI, Also adds a test
23139,Validate task group count on system scheduler,
23140,Refactor task group constraint logic in generic/system stack,
23141,Merge pull request #296 from hashicorp/remove-defaultclient,Remove usage of http.DefaultClient
23142,Remove usage of http.DefaultClient,
23143,Merge pull request #293 from achanda/jvm_opts,Support passing options to the JVM in java driver
23144,Add docs for jvm_options,
23145,No need to pass jvm_options initially,
23146,Some minor style cleanups,
23147,Support passing options to the JVM in java driver,Closes #292
23148,diffResult stores values not pointers,
23149,"Add negative test to DriverIterator, increase system scheduler attempts, and fix evictAndPlace status message",
23150,Fix broken test,
23151,Rkt driver clears task environment variables,
23152,Add clearing to environment variables,
23153,Rename from bug to issue,
23154,Document that Rkt doesn't support task directory mounting,
23155,Merge pull request #290 from hashicorp/f-docker-alloc-mount,Mount task_local and alloc dir to docker containers
23156,Change two helper functions to be methods,
23157,Remove debug lines,
23158,Documentation,
23159,Docker alloc dir tests and test fixes,
23160,Bind alloc dir and task local dir to docker containers and parse args correctly,
23161,Add diffSystemAlloc which gives richer information which node to place a system allocation,
23162,Merge pull request #286 from achanda/version,Trim extra newline from kernel version
23163,Trim extra newline from kernel version,
23164,Refactor shared code between schedulers,
23165,Use valid driver values in test,
23166,System scheduler and system stack,
23167,Merge pull request #279 from hashicorp/edit-this-page,"Add ""Edit this page"" link everywhere except /"
23168,Merge pull request #280 from achanda/docker-gofmt,Run gofmt on the docker driver
23169,Merge pull request #282 from hashicorp/demo-vim,Install vim in demos
23170,Install vim in demos,I'm probably not the only one that reached for module during the getting started guide. Super minor but might safe some apt-get'ing. image
23171,Run gofmt on the docker driver,
23172,website: add 'Edit this page' link everywhere but index,
23173,website: bundle update middleman-hashicorp,
23174,website: add github_slug to config.rb,
23175,website: add makefile and update README,
23176,Merge pull request #267 from achanda/docs,Some docs update
23177,Merge pull request #274 from hashicorp/f-cache-constraint,scheduler: adding regexp and version constraint cache
23178,Clarify that container is an invalid option,
23179,Merge pull request #275 from achanda/docker_config,Do not default to a network mode
23180,Do not default to a network mode,Makes the driver error out when a wrong or un-supported network_mode is used
23181,scheduler: adding regexp and version constraint cache,
23182,Merge pull request #215 from Carevoyance/gce_fingerprint,Add GCE fingerprinting functionality
23183,Merge pull request #247 from hashicorp/f-rkt-enhancements,Rkt Driver Enhancements
23184,More syntax cleanup,
23185,Fix old comments and other syntax cleanup,
23186,Update driver config names for consistency and make the trust_prefix optional,
23187,Merge pull request #272 from hashicorp/f-apply-overlap,Plan queue apply overlaps plan verification with plan application to increase throughput
23188,nomad: comment cleanups,
23189,Log starting command,
23190,Capture Rkt logs,
23191,Separate args from exec command; inject environment variables and general cleanup of Rkt driver,
23192,Merge pull request #236 from hashicorp/sethvargo/travis,Add Travis testing
23193,Merge pull request #271 from hashicorp/f-version-constraint,"Adding support for regexp, version, and lexical ordering constraints"
23194,Do not say the bool is set to true,This will be harmonized across all drivers soon
23195,Merge branch 'master' of https://github.com/hashicorp/nomad,
23196,Change Docker/Rkt to set driver to 1 not true for consistency,
23197,Merge pull request #266 from charlieok/patch-1,Update scheduling.html.md
23198,Merge pull request #268 from charlieok/patch-2,Update index.html.md
23199,nomad: make test more robust,
23200,nomad: make tests more robust,
23201,Merge pull request #269 from charlieok/patch-3,evaulation -> evaluation
23202,Merge pull request #270 from charlieok/patch-4,add 'is'
23203,add 'is',
23204,evaulation -> evaluation,
23205,nomad: test optimistic state update,
23206,nomad: refresh snapshot under error return,
23207,nomad: overlap plan evaluation with apply,
23208,nomad: optimistically apply plan to state snapshot,
23209,nomad: wait for plan to apply async,
23210,nomad: plan apply uses raw Raft future,
23211,nomad: raftApplyFuture does not block for error,
23212,nomad: raftApplyFuture exposes underlying Future,
23213,nomad: make test more robust,
23214,nomad: make tests more robust,
23215,Update index.html.md,
23216,website: document lexical ordering operators,
23217,scheduler: support lexical ordering constraints,
23218,Fix formatting for qemu driver version,
23219,Add details to docker driver docs, The driver sets a bool to module Clarify behavior when module is module
23220,nomad: additional constraint validation,
23221,website: document the regexp constraint,
23222,jobspec: adding sugar for regexp constraint,
23223,scheduler: adding regexp constraints,
23224,website: update the jobspec,
23225,jobspec: adding sugar for version constraint,
23226,scheduler: adding version constraint logic,
23227,Update scheduling.html.md,
23228,Merge pull request #265 from charlieok/patch-1,schedule -> scheduler
23229,schedule -> scheduler,
23230,Merge pull request #258 from charlieok/patch-3,this groups -> this group
23231,Merge pull request #259 from charlieok/patch-4,lets -> let's
23232,Merge pull request #260 from charlieok/patch-5,minor grammar fixes
23233,Merge pull request #261 from charlieok/patch-6,rewording suggestion
23234,Merge pull request #262 from charlieok/patch-7,replace comman with 'and'
23235,Merge pull request #263 from charlieok/patch-8,Add floor characters to math expression
23236,Merge pull request #257 from charlieok/patch-2,minor grammar fixes
23237,Merge pull request #256 from charlieok/patch-1,an skeleton -> a skeleton
23238,Add floor characters to math expression,
23239,replace comman with 'and',
23240,rewording suggestion,have it elect as a leader -> have it elected as a leader Not completely sure if this is correct (maybe “have it elect itself as a leader” is better?)
23241,minor grammar fixes,"the updated -> the update remove redundant 'each time', 'at a time'"
23242,lets -> let's,
23243,this groups -> this group,
23244,minor grammar fixes,overtime -> over time add comma change -> to change
23245,an skeleton -> a skeleton,
23246,Merge pull request #255 from charlieok/patch-1,"is -> is a, it's -> its"
23247,"is -> is a, it's -> its",
23248,Merge pull request #235 from hashicorp/sethvargo/shopt,Add shopt globs to include hidden files
23249,Merge pull request #251 from charlieok/patch-1,change comma to semicolon
23250,Merge pull request #252 from charlieok/patch-2,instead -> instead of
23251,Merge pull request #253 from charlieok/patch-3,virtual the machine -> virtual machine
23252,Merge pull request #254 from charlieok/patch-4,Update install.html.md
23253,Update install.html.md,
23254,virtual the machine -> virtual machine,
23255,instead -> instead of,
23256,change comma to semicolon,
23257,Merge pull request #249 from charlieok/patch-1,Update kubernetes.html.md
23258,Update kubernetes.html.md,
23259,Fix raw exec test race condition,
23260,GCE fingerprinter no longer updates network resources,It has nothing to add that the generic fingerprinters aren't finding on their own already.
23261,Merge pull request #248 from charlieok/patch-1,Update ecs.html.md
23262,Update ecs.html.md,
23263,Merge pull request #237 from hashicorp/f-raw-exec-driver,A raw fork/exec driver that provides no isolation.
23264,Better parsing of raw_exec option and updated docs,
23265,Merge pull request #244 from charlieok/patch-1,side affect -> side effect
23266,Merge pull request #246 from charlieok/patch-3,add space
23267,add space,
23268,side affect -> side effect,
23269,Add a few more GCE-specific attributes:, cpu-platform scheduling.automatic-restart scheduling.on-host-maintenance network.NETWORKNAME=true
23270,Merge pull request #226 from achanda/cover,Print coverage info while running tests
23271,Merge pull request #225 from hashicorp/b-docker-port,Change docker default port to support windows and boot2docker
23272,Add Travis testing,
23273,Merge pull request #240 from crosbymichael/wait,Reap process after sending kill signal
23274,Reap process after sending kill signal,Without waiting on the process after sending a kill will cause zombies and we all know what happens when we have a zombies outbreak. There are other calls to kill in this file but they are done on the main process for the task so they should have the wait method called at sometime in their lifecycle.
23275,Fix go vet format errors in exec_linux,
23276,TestRPC_forwardRegion waits for test servers to join,
23277,Fix race condition in server endpoint tests in which workers would process evals before there status could be asserted,
23278,Use 2 cpus and 1024 ram by default,
23279,"Add more CPUs to the vagrant VM, disable gui, and make ram consistent across providers",
23280,Fix AWS Networking Fingerprint tests failing when actually on AWS,
23281,Use DefaultDockerHost from fsouza upstream,
23282,Documentation,
23283,Actually add the files,
23284,Change name from pexec to raw_exec; hamming distance one seemed like a bad idea,
23285,Privileged exec driver,
23286,Merge pull request #233 from hashicorp/docs-executor,Clarified package documentation for executor
23287,Merge pull request #234 from charlieok/patch-1,Remove redundant 'contains'
23288,Add shopt globs to include hidden files,
23289,Remove redundant 'contains',
23290,Insert missing 'may be' and clean up some other formatting / phrasing,
23291,Added documentation for DOCKER_HOST and docker.endpoint; also filled in docs for docker.cleanup,
23292,Tweak phrasing to be clearer why that's not what we want,
23293,Removed wayward 's',
23294,Clarified package documentation for executor in response to #232,
23295,Merge pull request #165 from achanda/rkt,Add a driver for rkt
23296,Run gofmt,
23297,Add an optional exec parameter to task config,This overrides the default exec command in the ACI
23298,Parse information for all GCE network interface., No longer setting Device name in the network interface since we can't match up the info here with real device names. Add attributes for all external IPs if more than one exists.
23299,Use Run for adding trust prefix,The trust needs to be added before anything can progress
23300,Compact tags and attribute reading code.,
23301,Merge pull request #229 from iverberk/fix_vet_warnings,Fix vet warnings
23302,Fix vet warnings,
23303,TestNetworkFingerprint_notAWS passes even when actually on AWS,
23304,NonXXX tests should pass when actually running in their respective environments.,Fixes #224
23305,Print coverage info while running tests,
23306,Remove panic -- client is nil when there is an error,
23307,Merge branch 'master' into b-docker-port,
23308,Merge pull request #221 from hashicorp/b-docker-tests-osx,Add skip detection for all docker tests
23309,Support boot2docker or VM for dev/test,
23310,Bump version to 0.1.2,
23311,CHANGELOG for 0.1.2,
23312,Update demo Vagrantfile,
23313,Merge branch 'master' into b-docker-port,
23314,Fix alloc_dir error message,
23315,Fingerprint test should now behave correctly when the executor is not installed; fix some go vet issues,
23316,Use docker.NewClient; move dockerClient before it's used,
23317,Use Start to run commands,Run blocks
23318,Add prefix to all message logs for rkt driver,
23319,Fix function call,Make it skip if rkt is not installed
23320,Register rkt as a built in driver,
23321,Add missing import and remove unsued one,
23322,Do not run containers interactively,
23323,Do not register to the metadata service,
23324,Remove a stray comment,
23325,Fix constructing the handle,
23326,Add a test fort he rkt driver,
23327,Fix name of prefix,
23328,Add a driver for rkt,rkt docs here https://github.com/coreos/rkt
23329,Merge pull request #222 from hashicorp/b-runc-throttle-device,Switch from using cgroups BlkioThrottleReadIOpsDevice to BlkioWeight
23330,Switch to using BlkioWeight,
23331,Merge branch 'docker-use-environment' of https://github.com/carlosdp/nomad into b-docker-port,
23332,Updated Throttle Read/Write to match upstream changes in runc; now takes a list of ThrottleDevice structs instead of an int,
23333,Merge branch 'master' of https://github.com/hashicorp/nomad,
23334,OS dependant build dependencies,
23335,Merge pull request #214 from hashicorp/f-dev-alloc-cleanup,Cleanup allocations when in dev mode
23336,Merge pull request #203 from hashicorp/b-init-redis-port,Change to the default redis port and use docker port mapping
23337,This is needed for 1.4.2 compat; not sure what removed it,
23338,Add skip detection for all docker tests,
23339,Merge pull request #218 from hashicorp/ga-id-update,Fix google analytics ID
23340,Update _footer.erb,
23341,Fix long link in CHANGELOG,
23342,CHANGELOG for 0.1.1,
23343,Update demo Vagrantfile,
23344,Remove prerelease for v0.1.1,
23345,OS specific build dependencies,
23346,Consolidate GCEMetadataClient into EnvGCEFingerprint,This allows easier reuse of the same client across multiple functions.
23347,And add a comment to the constant.,
23348,Use a constant for the default GCE metadata URL,
23349,isAWS should return false on GCE,"GCE and AWS both expose metadata servers, and GCE's 404 response includes the URL in the content, which maatches the regex. So, check the response code as well and if a 4xx code comes back, take that to meanit's not AWS."
23350,Fingerprinting code for GCE nodes,This reads the following:  hostname instance id machine-type zone internal IP external IP (if any) tags attributes  Atributes are placed under the platform.gce.attr.* hierarchy. Tags are set up as platform.gce.tag.TagName=true.
23351,Cleanup allocations when in dev mode,
23352,Use environment to connect to Docker by default,Uses the environment definition for docker by default. Docker will default to the unix/tcp socket if the environment is not set.
23353,scheduler: tasks updated should only check if number of dynamic ports is different,
23354,Merge pull request #211 from Carevoyance/website_typo,Fix website typo in jobs.html.md
23355,Typo: singel -> single,
23356,Merge pull request #210 from hashicorp/vs-k8s,Update to versus section
23357,update description,
23358,Merge pull request #195 from errordeveloper/master,Clean-up provisioning output
23359,Clean-up provisioning output,
23360,Merge pull request #206 from hashicorp/f-driver-envvars,Pass environment variables through to drivers
23361,update test to reflect not uppercasing passed env vars,
23362,Removed capitalization of user-defined envvars.,
23363,Updated website documentation.,
23364,Moved the envvars logic to TaskEnvironment and TaskEnvironmentVariables(). Added tests there.,
23365,Forgot to fix my test after testing it.,
23366,Added a jobspec directive to specify envvars. Updated Docker driver to use them accordingly.,
23367,Merge pull request #205 from hashicorp/b-default-link-speed,Add a default link speed
23368,Add debug line when setting link speed to default,
23369,Merges,
23370,Merge pull request #204 from hashicorp/b-options,Parse client options
23371,agent: test options config,
23372,Merge branch 'parse-client-options' of https://github.com/carlosdp/nomad into b-options,
23373,Change to the default redis port and use docker port mapping,
23374,Merge pull request #202 from achanda/doc_fix,Fix network mode
23375,Fix network mode,net is not a valid network mode
23376,Merge pull request #200 from legal90/f-parallels,Add support of Parallels Desktop for Mac
23377,Add support of Parallels Desktop for Mac,
23378,Change to pre-release version,
23379,go-fmt,
23380,Merge pull request #199 from achanda/double_call,Fix two issues where settings were not taking effect
23381,Make sure createHostConfig is called only once,The second call discards any mods to port binding or network type Fixes #185 and #196
23382,Merge pull request #189 from apognu/dev/net-fingerprint,Fingerprint: config parameter for interface and native method for IP address
23383,Merge branch 'master' into dev/net-fingerprint,
23384,Renamed all instances of module to module.,
23385,Merge pull request #184 from achanda/docker_net,Enable setting networking mode for docker
23386,Merge pull request #192 from hashicorp/f-client-agent-cmdline,Fix anchor links and add new agent cli commands
23387,Fix anchor links and add new agent cli commands,
23388,Enable setting networking mode for docker,This patch enables setting networking mode for the docker driver. This does not handle the module mode. Closes #175
23389,Merge pull request #191 from hashicorp/f-client-agent-cmdline,Add parsing of client configuration from the commandline
23390,Don't enfoce that the agent can't be run as both server and client,
23391,Use the known size of meta to initialize the map,
23392,Move declerations to top and use SplitN to be more flexible for Meta values,
23393,Add parsing of client configuration from the commandline,
23394,Merge pull request #190 from hashicorp/docker-brand-guidelines,website: update docker logo to adhere to brand guidelines
23395,website: update docker logo to adhere to brand guidelines,image https://www.docker.com/brand-guidelines
23396,Refactored code.,
23397,Merge pull request #188 from diptanu/master,Upgrading to Go 1.5.1 for building Nomad in developer VM
23398,Comment some undocumented code.,
23399,Merge pull request #153 from aldergren/master,Prevent df on linux from adding line breaks to output
23400,Updated documentation for the module client configuration option.,
23401,Forgot some error checking.,
23402,Client config param added to specify net iface to use for fingerprinting. Added a Golang-native method for determining the interface IP address.,
23403,Upgrading to Go 1.5.1 for building Nomad in developer VM,
23404,Merge pull request #181 from hashicorp/b-discover-path,Correctly scan the CWD for the nomad executable
23405,Correctly scan the CWD for the nomad executable,
23406,command: test init,
23407,"Add release target, package Nomad",
23408,git-ignore pkg directory,
23409,Makefile updates,
23410,website: update advertise configuration option descriptions,
23411,Merge pull request #139 from orivej/improve-link-speed-error-reporting,Improve link speed fingerprint error reporting
23412,Merge pull request #166 from spacejam/master,Fix typo in docs.
23413,Make fixes for OS-specific deps,
23414,Fix typo in docs.,
23415,Update Vagrantfile to download correct binary.,
23416,agent: return empty config for empty config dirs,
23417,Merge pull request #162 from d4v3y0rk/fix-typo,fixes some typos
23418,fixes another typo, Ui should be UI
23419,fixes a typo in the docs,
23420,Update obsolete comments,
23421,"Fix ""ifconfig not found"" warning",
23422,Merge pull request #160 from mrwacky42/patch-1,Link to raw Vagrantfile instead
23423,Link to raw Vagrantfile instead,
23424,Merge pull request #148 from lalyos/idiomatic_bash,use 'idiomatic' bash
23425,Merge pull request #152 from jweissig/patch-1,Added missing period to custom.html.markdown
23426,Merge pull request #154 from jweissig/patch-2,Update avatar url from http to https (fixes ssl warning)
23427,Merge pull request #155 from jweissig/patch-3,Fix sidebar nav highlight for Qemu Driver
23428,use 'idiomatic' bash,
23429,Fix sidebar nav highlight for Qemu Driver,"When you are on the https://www.nomadproject.io/docs/drivers/qemu.html page, the side navbar is not highlighted, minor tweak to fix that issue."
23430,Update avatar url from http to https (fixes ssl warning),
23431,Added missing period to custom.html.markdown,
23432,Prevent df on linux from adding line breaks to output,
23433,Merge pull request #143 from ziporah/master,Changed typo in documentation
23434,Merge pull request #145 from asbjornenge/typo,Typo: Too many Resource(s) for YARN :stuck_out_tongue:
23435,Typo: Too many Resource(s) :stuck_out_tongue:,
23436,Changed typo in documentation,
23437,Add Client config options to docs,
23438,Parse Client config Options,"This adds Options to the agent ClientConfig and fixes the merging logic to include Options, as defined in the docs"
23439,Improve link speed fingerprint error reporting,With disconnected eth0 log output now looks like: [WARN] fingerprint.network: Unable to parse IP in output of '/bin/ifconfig eth0' [WARN] fingerprint.network: Unable to parse Speed in output of '/usr/sbin/ethtool eth0' In a virtual machine: [WARN] fingerprint.network: Unable to parse Speed in output of '/sbin/ethtool eth0' [WARN] fingerprint.network: Unable to read link speed from /sys/class/net/eth0/speed
23440,deploy commit,
23441,website: only show header unless livestream active,
23442,website: remove basic,
23443,typo,
23444,add jt to community,
23445,Merge pull request #137 from hashicorp/live-site,probable final responsive touches
23446,cleanup footer,
23447,cleanup banners,
23448,remove errant green background,
23449,density responsive image,
23450,healing responsive image,
23451,workloads responsive image,
23452,scripts,
23453,Merge pull request #136 from hashicorp/live-site,Hero image
23454,client: fix windows build errors,
23455,scripts,
23456,the cover iamge,
23457,update hero cover image,
23458,website: bintray enabled setting,
23459,bin is a phony,
23460,Fix Makefile,
23461,scripts for release,
23462,Merge pull request #133 from hashicorp/livestream,home: livestream when LIVESTREAM_ACTIVE
23463,Adding a CHANGELOG,
23464,Set version 0.1.0,
23465,Merge pull request #130 from hashicorp/live-site,Polishing Nomad!
23466,responsive partners,
23467,home: livestream when LIVESTREAM_ACTIVE,"This adds some stuff to takeover the whole site with an embedded livestream. Our press goes out at 10am with links to this website embedded in releases, but we don't want to have folks see it until the keynote is concluded. Unsetting LIVESTREAM_ACTIVE and re-deploying will open it up. Also fixed a configuration option. You can test it out with: LIVESTREAM_ACTIVE=true bundle exec middleman server"
23468,responsive footer fix,
23469,responsive style: easily deploy,
23470,website: fixing alloc-status docs,
23471,docker: check for missing unix socket,
23472,Remove timestamp from getting started output,
23473,responsive hero,
23474,Merge pull request #126 from hashicorp/f-arg-parser,Proper parsing of user arguments and Nomad environment variable replacement.
23475,Better Sprintf,
23476,Add environment package,
23477,Fix args in test,
23478,ParseAndReplace args at the executor level,
23479,Check err,
23480,Set the allocdir correctly when using the linux executor,
23481,Pull task environments into their own type to be reusable across drivers and executors,
23482,Remove cruft from rebase,
23483,merge fixes,
23484,getting started cleanup,
23485,clarify versus section on k8s,
23486,tighten up header/hero,
23487,Merge pull request #128 from hashicorp/f-alloc-status,Add alloc-status command
23488,Merge pull request #127 from hashicorp/b-docker-config,Correct implementation of config check for container and image cleanup
23489,command: better test for alloc-status,
23490,website: document alloc-status command,
23491,demo/digitalocean: allow stale queries,
23492,demo/digitalocean: run the servers on larger instances,
23493,command: placeholder for  in kv output,
23494,Correct implementation of config check for container and image cleanup; moved into Start and Open because handle does not have the config object,
23495,command: better output for alloc-status,
23496,Merge branch 'master' of https://github.com/hashicorp/nomad,
23497,Community page,
23498,website: temporary password,
23499,command: first pass at alloc-status command,
23500,make hero bg image seamless/repeating to cover all monitor res,
23501,Merge pull request #125 from hashicorp/f-docker-config-cleanup,Add configuration option for whether Nomad will clean up containers and images when they are no longer used
23502,Merge branch 'master' into f-docker-config-cleanup,
23503,Merge pull request #124 from hashicorp/f-docker-cleanup-config,"Add all containers when searching for images that are still in used, since the container using the image may be stopped"
23504,Merge branch 'master' of https://github.com/hashicorp/nomad into live-site,
23505,Add configuration option for whether Nomad will clean up containers and images when they are no longer used,
23506,"Add all containers when searching for images that are still in used, since the container using the image may be stopped",
23507,website: lowercase examples of dynamic ports,
23508,responsive header css,
23509,docs cleanup,
23510,demo/digitalocean: remove unneeded index,
23511,demo/digitalocean: realistic redis requirements,
23512,demo/digitalocean: tighten bench output,
23513,demo/digitalocean: fix after docker repo change,
23514,demo/digitalocean: easier tuning for demo,
23515,demo/digitalocean: use redis,
23516,demo/digitalocean: move bench.go,
23517,demo/digitalocean: add a demo job,
23518,demo/digitalocean: better benchmark,
23519,demo/digitalocean: add bench app,
23520,Merge pull request #121 from hashicorp/f-docker-native,Docker is now native go
23521,Log an info when an image can't be removed because it's still in use,
23522,"Use env.Get, remove sha256 checks, and change from regexp to strconv to test for int",
23523,Add docker 'command' to docs; cleanup some comments,
23524,Replace docker version and docker ps with native calls; no more exec!,
23525,demo/digitalocean: disable hostname in metrics,
23526,"Docker kill now exits with an error, as expected",
23527,Merge pull request #120 from hashicorp/b-docker-fixes,Improve handling of tagged docker images
23528,Go native for docker API calls,
23529,Actually add the fixture,
23530,Fix case sensitivity issue; also verify we don't get collisions,
23531,Put that back too.,
23532,Put that back!,
23533,Merge branch 'master' into b-docker-fixes,Conflicts:     client/driver/docker_test.go     client/driver/java_test.go     client/driver/qemu_test.go
23534,Improve handling of tagged docker images, Converted Start() to use docker native client throughout Better handling of latest vs. tagged images We can now support multiple versions of an image We will now not download a tag if we already have it  
23535,Merge pull request #107 from hashicorp/f-disk-isolation,Chroot isolation of processes running on linux
23536,Fix client init logging and test,
23537,Small test cleanup,
23538,Added a failing test case for multiple docker tags,
23539,Added docker test to spin up 3 containers at the same time,
23540,website: missing links and copy,
23541,Added guards to tests so we can more gracefully degrade the test suite when thing are not installed,
23542,Fix comments,
23543,Log the alloc and state directory on Client Init(),
23544,Use host file/dir permissions when embedding,
23545,Destroy allocdirs in task runner tests,
23546,Skip non-regular files in embedding and comment on the chrootEnv map,
23547,Change allocdir variable name for clarity,
23548,Windows shouldn't do anything on unmount,
23549,Update CPU limit to be an int,
23550,Only unmount once,
23551,Fix cgroup isolation,
23552,Fix embed non-existent test,
23553,Added errNoResources to executor package; return this when Limit is called with nil argument,
23554,"Added basic resources to exec/java tests so each test has cpu, ram, and network",
23555,Merge qemu test,
23556,"Mount shared alloc dir, modified API and tests",
23557,Linux Embed and AllocDir unit tests,
23558,Fix function header,
23559,Embed interface,
23560,Client init rebase,
23561,Changed file names so it builds correctly,
23562,AllocDirBuilder that creates the alloc directory structure,
23563,Merge pull request #101 from hashicorp/f-qemu-network-update,"driver/qemu: Use Restricted Ports, additional port forwarding"
23564,nomad: fix test race,
23565,fix typo in docs,
23566,nomad: data centers -> datacenters,
23567,agent: all dynamic ports for tests,
23568,Merge pull request #114 from hashicorp/f-clients,Make servers list configurable on clients
23569,website: update docs for command rename,
23570,command: rename client-servers -> client-config,
23571,Added group add command for docker to the docker docs,
23572,Merge pull request #112 from hashicorp/f-validate,command/validate: Adding new command
23573,website: fix wording,
23574,website: fix copy,
23575,Fix bad copy-paste from refactoring,
23576,Merge pull request #113 from hashicorp/docs-docker,Added docker docs; updated isolation notes for QEMU
23577,Add note on configuring the agent; fix some typos,
23578,Merge pull request #109 from hashicorp/f-examples,DigitalOcean Demo
23579,command: fix help,
23580,website: document the client-servers command,
23581,website: document /v1/agent/servers,
23582,command: adding client-servers command,
23583,api: add client server methods,
23584,testutil: fix boostrap mode after flag change,
23585,agent: add HTTP endpoint for querying/modifying the server list,
23586,client: support modifying the servers list,
23587,Lowercase some cases of docker,
23588,Merge pull request #111 from hashicorp/b-h3-size,Change h3 to 24px so it's midway between h2 and h4
23589,Added docker docs; updated isolation notes for QEMU,
23590,command/validate: Adding new command,
23591,Merge pull request #110 from bensojona/b-documentation-fixes,Documentation fixes
23592,Documentation fixes,
23593,Change h3 to 24px so it's midway between h2 and h4; h2 is 30px so it was indistinguishable,
23594,Merge pull request #108 from hashicorp/b-netmap-crash,Fix crash in task_runner tests
23595,All the TestTaskRunner* tests want this,
23596,Initialize reserved ports,
23597,Merge pull request #104 from hashicorp/f-docker-static-ports,Add static (reserved) ports for docker
23598,Missed a set of parens,
23599,Remove this guard since it's likely to hide nasty bugs where nomad should crash,
23600,Initialize reserved ports in task_runner,
23601,Merge pull request #106 from hashicorp/b-doc-cleanup,More doc cleanups
23602,Add exhaustive tests and nil guard to List and Map for NetworkResource,
23603,cleanups,
23604,misc cleanups,
23605,various doc cleanup,
23606,demo/digitalocean: output statsite addr,
23607,Merge branch 'master' of https://github.com/hashicorp/nomad,
23608,Get only one version of a docker container,
23609,demo/digitalocean: install docker,
23610,update docs on port matching for Qemu,
23611,demo/digitalocean: prefix statsite droplets,
23612,re-order the resources check and don't bail if no ports requested,
23613,demo/digitalocean: fix artifact name,
23614,demo/digitalocean: add statsite for servers,
23615,demo/digitalocean: packer updates,
23616,demo/digitalocean: add statsite,
23617,demo/digitalocean: move nomad packer into sub-dir,
23618,demo/digitalocean: 500x 1gb droplets per region,
23619,demo/digitalocean: display server IP's on completion,
23620,Merge pull request #105 from hashicorp/b-doc-cleanup,Various doc cleanups for the Internals section
23621,demo/digitalocean: update fingerprint,
23622,demo/digitalocean: prefix names of droplets with nomad,
23623,demo/digitalocean: fix artifact type,
23624,demo/digitalocean: add Atlas for Terraform,
23625,demo/digitalocean: add Atlas,
23626,fix typo,
23627,minor grammer,
23628,doc updates,
23629,Added Chris to the community page,
23630,Add test case for PopulateEnvironment,
23631,Rename containerConfigForTask to createContainer to mirror the docker api call; other helper functions will follow this convention too,
23632,Rename containerConfig to hostConfig since there are two types of container configs,
23633,Fix some typos,
23634,Added static / reserved port allocations to docker,
23635,Added ListStaticPorts() to get a list of statically-allocated ports from the NetworkResource,
23636,driver/qemu: Setup multiple port forwards,
23637,fix typo,
23638,demo/digitalocean: use the env var to download,
23639,Format as string instead of casting to string,
23640,"demo/digitalocean: server bootstrap works, client join works",
23641,Merge pull request #94 from hashicorp/f-port-configs,"Environment variables for ports, cpu, memory, and meta"
23642,Support mapped ports and labelled ports for docker,
23643,demo/digitalocean: fix terraform,
23644,"demo/digitalocean: packer parent dir must exist, fix upstart",
23645,Add dynamic ports to api resources; copy dynamic ports into offer,
23646,Add docker ports; change to uppercase examples and tests,
23647,demo/digitalocean: fix upstart,
23648,demo/digitalocean: use remote-exec for config files,
23649,demo/digitalocean: fix terraform for ssh keys,
23650,Merge pull request #98 from hashicorp/b-doc-cleanup,Minor doc cleanups
23651,Merge branch 'master' into f-port-configs,
23652,minor doc cleanup / suggestions,
23653,Docs and remove uppercase since it's checked at the config parse step,
23654,Changed to uppercase + numbers + underscores; updated docs,
23655,Ignore terraform files,
23656,demo/digitalocean: join servers together,
23657,Added docs for runtime environment,
23658,demo/digitalocean: terraform works,
23659,Merge branch 'master' into b-doc-cleanup," master:   Basic Qemu docs   clean up some log formatting   start the Qemu docs   Refactor network fingerprinting to be generic, use build flags   prefix warn/error messages   fix casing for ERR logs   don't re-convert mbits   refactoring, docs   fix range error   populate node network resource   Update code for parsing IP address   Move ec2InstanceSpeed to a package variable, convert to string:int map   Consolidate the AWS fingerprinters   Refactor some AWS things, removing fingerprint/network.go   change the naming   Refactor the Network Fingerprinters   Rework client/fingerprint/fingerprint.go to use a slice and enforce ordering   Basic network fingerprinting for Unix type, AWS systems"
23660,minor typo/cleanups,
23661,Merge pull request #97 from hashicorp/f-qemu-driver-docs,Basic Qemu docs
23662,Merge pull request #77 from hashicorp/f-network-fingerprint,Network Fingerprinting
23663,demo/digitalocean: var for image id,
23664,demo/digitalocean: initial terraform,
23665,Merge pull request #95 from hashicorp/f-java-driver-docs,Add some basic docs for the Java Driver
23666,demo/digitalocean: updates,
23667,That method is gone,
23668,Fail parsing a job if the Dynamic Port labels are malformed,
23669,demo/digitalocean: add a default client/server dual config,
23670,demo/digitalocean: add config templates to terraform,
23671,demo/digitalocean: basic packer build works,
23672,Basic Qemu docs,
23673,Changed fmt for CPU to integer,
23674,Update Java docs on how Java is detected,
23675,clean up some log formatting,
23676,start the Qemu docs,
23677,Merge branch 'master' into f-port-configs,
23678,Replaced List with Map,
23679,Merge pull request #96 from hashicorp/f-cpu-int,Change CPU from float64 to int
23680,Change CPU from float64 to int,
23681,some Java driver docs,
23682,Merge branch 'master' into f-java-driver-docs," master: (115 commits)   Ignore common files   demo/vagrant: Adding files for getting started   website: adding clustering to getting started   scheduler: job anti-affinity score should record as negative   scheduler: do not skip job anti-affinity   client: reset response struct to avoid decode errors   client: create dir, handle not exist more gracefully   website: starting cluster section   website: skip HTTP in intro   command/init: tweak constraint   website: typo fixes   command/run: update synopsis   command/run: update help output   website: update 'run' docs   website: getting started   command/init: fixing inconsistencies   command/node-status: removing extra formating input   command/init: reworking behavior and default file   website: getting started   website: getting started   ..."
23683,"Refactor network fingerprinting to be generic, use build flags",
23684,prefix warn/error messages,
23685,fix casing for ERR logs,
23686,Tweak paragraphs so the explanation flows better,
23687,Rewrote the docs for ListDynamicPorts to be clearer,
23688,Fix some printf tokens,
23689,Added environment variables to docker,
23690,Check for nils before accessing data,
23691,Merge pull request #93 from hashicorp/f-getstarted,Getting started guide and various bug fixes and UX cleanups
23692,Ignore common files,
23693,demo/vagrant: Adding files for getting started,
23694,website: adding clustering to getting started,
23695,Added environment variables to Java,
23696,Pass dynamic ports to the exec driver via environment variables,
23697,scheduler: job anti-affinity score should record as negative,
23698,scheduler: do not skip job anti-affinity,
23699,client: reset response struct to avoid decode errors,
23700,"client: create dir, handle not exist more gracefully",
23701,don't re-convert mbits,
23702,"refactoring, docs",
23703,website: starting cluster section,
23704,website: skip HTTP in intro,
23705,command/init: tweak constraint,
23706,website: typo fixes,
23707,command/run: update synopsis,
23708,command/run: update help output,
23709,website: update 'run' docs,
23710,website: getting started,
23711,command/init: fixing inconsistencies,
23712,command/node-status: removing extra formating input,
23713,command/init: reworking behavior and default file,
23714,website: getting started,
23715,website: getting started,
23716,client: fixing stats formating,
23717,website: getting started,
23718,agent: Do not override default log levels,
23719,"scheduler: Allow rolling update, assign eval first.Fixes #91",
23720,fix range error,
23721,populate node network resource,
23722,Update code for parsing IP address,
23723,Merge pull request #79 from hashicorp/f-bootstrap,Add flags for bootstrap modes to CLI
23724,Removed comment that's no longer relevant,
23725,"Move ec2InstanceSpeed to a package variable, convert to string:int map",
23726,agent: json decode directly to structs in api,
23727,Merge pull request #89 from hashicorp/f-root-disable-drivers,Disable drivers based on whether nomad is running as root.
23728,Update package import name,
23729,Merge pull request #90 from hashicorp/b-no-networks,Initialize error 'no networks avaialable' before yielding to find an IP address (maybe there are no IP addresses)
23730,Initialize error 'no networks avaialable' before yielding to find an IP address (maybe there are no IP addresses),
23731,Update website documentation on the fork/exec driver + Vagrantfile fixes,
23732,nomad: fix typo,
23733,Fix qemu check and add debug lines when a driver is disabled,
23734,Update Qemu Fingerprint check,
23735,Guard tests,
23736,Update exec_linux to assume it is running as root,
23737,Disable exec/java/qemu when non-root on non-windows OSes,
23738,Switch to named port config syntax,
23739,Merge pull request #88 from hashicorp/f-init,Init command
23740,Added docs page for init command,
23741,Added init command,
23742,Consolidate the AWS fingerprinters,
23743,website: remove regex from dynamic_ports,
23744,agent: remove explicit Bootstrap option in favor of BootstrapExpect,
23745,Merge pull request #83 from hashicorp/f-named-ports,Added named ports
23746,website: remove bootstrap flag,
23747,"Refactor some AWS things, removing fingerprint/network.go"," move isAWS to env, use in other places fingerprint/network.go is no empty; removed"
23748,Updated jobspec docs for named dynamic ports,
23749,agent: test agent command args,
23750,Lowercase for consistency,
23751,change the naming,
23752,Added named ports,
23753,Refactor the Network Fingerprinters,
23754,command/agent: add bootstrap flags,
23755,Merge pull request #81 from hashicorp/b-test-timeout,Increase test timeout so driver tests are less sensitive slower networks
23756,Increase test timeout so driver tests are less sensitive slower networks,
23757,Rework client/fingerprint/fingerprint.go to use a slice and enforce ordering,
23758,agent: test config parsing,
23759,website: update references to server commands,
23760,website: update layout for command renames,
23761,Merge pull request #78 from hashicorp/f-server-commands,Rename agent commands to server commands
23762,website: update docs for command renames,
23763,command: rename some agent commands to use a server- prefix,
23764,Merge pull request #74 from hashicorp/f-run,Run / Stop commands
23765,command/monitor: set initial status to 'pending',
23766,command: print a warning if we get 0 evaluated nodes,
23767,command: monitor output updates,
23768,command/run: validate job before submission,
23769,website: command updates for output,
23770,command: adjustments to monitor logs,
23771,command: remove unnecessary alloc-status command,
23772,website: command updates for exit codes,
23773,command: return 2 for scheduling failures when using monitor,
23774,website: update run/stop commands,
23775,command: fix alloc-status tests,
23776,command: allocation monitor adjustments,
23777,"command: simplify alloc status, dump during job run",
23778,command/status: don't display node ID in evaluations,
23779,command/monitor: dump info regardless of initial status,
23780,command: spelling,
23781,command: start alloc-status command,
23782,command/status: cleanup,
23783,command/monitor: cleanup,
23784,command/monitor: display scheduling errors,
23785,"website: document run, stop, eval-monitor",
23786,command: enter monitor mode by default,
23787,command/monitor: handle more alloc state changes,
23788,command/monitor: account for updated allocations,
23789,command/monitor: more tests,
23790,command/monitor: tests,
23791,command: only use prefixed UI during monitoring,
23792,command/stop: inital stop command,
23793,api: rename jobs.Delete -> jobs.Deregister,
23794,api: job deregister returns eval ID,
23795,command/monitor: cleanup,
23796,"command: easier exit codes, check if eval is already finished",
23797,command: add prefixed output for monitor commands,
23798,command: adding eval-monitor,
23799,command: monitor allocation client status updates,
23800,command: working on monitor,
23801,command: start implementing eval monitoring for run,
23802,command: add primitive run command,
23803,command: use an empty config instead of default config for cli options,
23804,website: document additional configuration options,
23805,client: persist the node ID,
23806,website: dev mode flag,
23807,Merge pull request #76 from hashicorp/f-agent-docs,Agent CLI options and documentation
23808,"Basic network fingerprinting for Unix type, AWS systems",
23809,command/agent: fix help usage,
23810,website: agent cli arguments,
23811,website: atlas agent config,
23812,website: client agent config,
23813,website: agent server options,
23814,website: lots of agent config docs,
23815,command/agent: more arguments,
23816,command/agent: accept server/client/data-dir,
23817,agent: fix CLI help,
23818,Merge pull request #75 from hashicorp/h-spawn-daemon-build-dep,Make spawn-daemon only defined on linux
23819,Make spawn-daemon only defined on linux,
23820,agnet: fixing inversion of LeaveOnInt,
23821,agent: adding Atlas and Region to output,
23822,website: basic agent docs,
23823,nomad: remove noisy logs,
23824,start java docs,
23825,Merge pull request #68 from hashicorp/cgroups-f-executor,Linux executor with cgroup isolation support
23826,Merge pull request #73 from hashicorp/sethvargo/graphic_fonts,Bump font sizes
23827,Fixed function comment,
23828,"Tests skip based on cgroups, not root",
23829,Update UniversalExecutor to have string identifiers,
23830,Linux executor with cgroup isolation support,
23831,"executor/linux: Add UUID for the name, return error on failure to apply",
23832,exec/linux: move Limit to after Start,
23833,spike on adding cgroups,
23834,add clint to community page,
23835,Bump font sizes,
23836,website: working on docs,
23837,website: agent section,
23838,Merge branch 'f-docs',
23839,website: adding status API endpoints,
23840,website: agent API docs,
23841,website: agent self docs,
23842,website: adding Eval API docs,
23843,website: Alloc API docs,
23844,website: reordering docs,
23845,website: Node API docs,
23846,website: API docs for Jobs,
23847,http: validating job is provided to avoid nil pointer,
23848,"nomad: remove errwrap, directly wrap",
23849,client: optimize initial heartbeat time,
23850,website: HTTP docs,
23851,website: update community,
23852,website: initial http layout,
23853,website: docs layout,
23854,website: improve cross linking,
23855,Merge pull request #65 from hashicorp/b-windows-sysattr-credentials,Fix sysattr cross compilation issue on Windows
23856,website: document exec driver,
23857,website: skeleton drivers,
23858,"website: community. Drop bloomd, add Vault.",
23859,website: jobspec,
23860,jobspec: default count of group to 1 if not specified,
23861,nomad: adding mapstructure tags,
23862,"jobspec: default constraints to hard, parse update configuration",
23863,website: rename jobconf to jobspec,
23864,website: cleanup docs sidebar,
23865,"website: remove concepts, add job conf section",
23866,Merge pull request #69 from hashicorp/sethvargo/website_stuff,Update website diagrams and remove unused pages
23867,Imageoptim,
23868,Update website to remove a lot of copy-paste with Vault + improve images,
23869,s/Vault/Nomad in code comment,
23870,Weird whitespace in the README,
23871,Use = in -X because it's deprecated without,
23872,Merge pull request #67 from hashicorp/sethvargo/specify_ruby,Force Ruby 2.2.2 on Heroku
23873,Merge pull request #66 from hashicorp/sethvargo/faster_deploy,Do not use prefix splitting to deploy
23874,Force Ruby 2.2.2 on Heroku,
23875,Do not use prefix splitting to deploy,
23876,website: custom,
23877,website: YARN,
23878,website: Terraform,
23879,website: Mesos,
23880,website: Kubernetes,
23881,website: HTCondor,
23882,website: finish ECS and Swarm,
23883,website: starting vs section,
23884,website: use cases page,
23885,website: intro page,
23886,website: imageoptim,
23887,website: homepage copy,
23888,website: fixing vagrantfile,
23889,website: homepage,
23890,website: reduce whitespace on home,
23891,website: Add DO logo,
23892,website: use new hero,
23893,website: imageoptim,
23894,website: adding drivers section,
23895,website: cleanup dead docs,
23896,website: cleanup install docs,
23897,website: update scheduling links,
23898,website: add docs on scheduling,
23899,Windows does not support exec.Cmd.SysProcAttr.Credential call; this causes cross-compiltion to fail so it's behind a build flag now,
23900,Fixing build script,
23901,scheduler: ignore allocations in terminal state,
23902,merging doc updates,
23903,website: working on internals documentation,
23904,Merge pull request #57 from hashicorp/f-api-sort,api: sort all list responses
23905,website: fixing repo link,
23906,website: Replace Vault -> Nomad,
23907,website: Working on internal architecture,
23908,api: test job sort,
23909,api: sort all list responses,
23910,Merge pull request #55 from hashicorp/f-hcl-job,jobspec: default job ID also comes from key
23911,jobspec: default job ID also comes from key,
23912,command: fix tests after job validation,
23913,api: composing jobs takes region,
23914,api: fix tests after struct validations,
23915,api: add region to jobs,
23916,Merge pull request #36 from hashicorp/f-executor,"Added executor interface, includes drop privileges for linux"
23917,Support running Linux exec as a non-root user,
23918,Merge branch 'master' into f-executor,
23919,Overhaul the executor code so we use build flags instead of dynamic loading,
23920,Merge pull request #53 from hashicorp/f-executor-factory,Changed Default executor to use a factory
23921,nomad: ensure job ID does not contain space,
23922,website: update output format for status/node-status,
23923,Merge pull request #50 from hashicorp/f-info,Allocs/Evals in status/node-status output
23924,command: final adjustments for list output,
23925,command: helpers for columns,
23926,Changed Default executor to use a factory,
23927,Rename exec package to executor so it works better with goimports; fixes for Java driver,
23928,Merge pull request #47 from hashicorp/f-cli-docs,Base CLI docs
23929,website: cli docs cleanup,
23930,Update Java driver to use Executor,
23931,website: use a helper for general options,
23932,command: output adjustments,
23933,website: update usage and examples for status commands,
23934,Updated exec driver to use nomad/client/exec,
23935,command: testing alloc/eval dump and short mode for status,
23936,"command: add evals/allocs to status command, add -short flag",
23937,nomad: using struct level validations,
23938,nomad: testing the job validations,
23939,command: dump allocations for nodes in node-status,
23940,nomad: fixing tests,
23941,nomad: adding job validation,
23942,Merge pull request #46 from hashicorp/f-job-parser,Job Spec Parser
23943,website: fix agent-members docs,
23944,command: trim a leading 'v' from git tags,
23945,webiste: more docs for commands,
23946,website: add examples to cli docs,
23947,command: separate k/v pairs with an '=',
23948,website: start docs for node-* commands,
23949,website: finish agent-* docs,
23950,website: working on agent docs,
23951,website: start CLI documentation,
23952,website: add note on CLI context,
23953,website: prune some imports,
23954,Use Linux on Linux,
23955,Run as nobody if no user is specified,
23956,jobspec: defaults,
23957,jobspec: validate singletons,
23958,jobspec: parse network resources,
23959,jobspec: parse regions,
23960,jobspec: task level constraints,
23961,jobspec: job-level constraints,
23962,jobspec: parse job-level meta fields,
23963,jobspec: parsing,
23964,Send signal 0 to check whether the process is alive,
23965,Implemented Linux driver with RunAs functionality -- added errors to RunAs and Limit,
23966,SCADA support,
23967,Merge pull request #42 from hashicorp/f-cli,Base CLI
23968,command: tests,
23969,command: guard tests from multiple parallel calls,
23970,api: fixing join tests,
23971,testutil: fix bootstrap on test server,
23972,api: fix agent test,
23973,command: use meta struct for common options,
23974,command: kill AllAtOnce in job list mode,
23975,command: cleanup,
23976,command: add node-drain command,
23977,command: more cli tests,
23978,command: use testutil.TestServer in command tests,
23979,command: cli tests,
23980,command: fix test agent helper,
23981,command: add node-status command,
23982,command: add agent-join command,
23983,api: return the number of nodes joined,
23984,api: fix status type,
23985,command: convert members so we get a descriptive status,
23986,command: adding agent-members command,
23987,command: add agent-force-leave command,
23988,command: tests,
23989,command: add agent-info command,
23990,command: unexport helpers,
23991,command: adjustments for status,
23992,command: basic status command,
23993,command: add helpers,
23994,Merge pull request #37 from hashicorp/vagrant,Add Base Vagrantfile
23995,add note about using Vagrant file to the README,
23996,Merge branch 'master' into vagrant, master: (57 commits)   api: use stub structs   README fillin   nomad: fixing unit tests   scheduler: pass failure reason to ExhaustedNode   nomad: thread alloc fit failure reason through   nomad: rename region1 to global. Fixes #41   client: Use Alloc.TaskResouces to override Task.Resources   scheduler: in-place update should preserve network offer   scheduler: track dimension of exhaustion   schedule: avoid in-place update of task if network resources are different   scheduler: expose reason network offer failed   nomad: adding reason network offer failed   mock: use network resources   scheduler: thread through the TaskResources   nomad: removing old network index lookup methods   nomad: Resource Superset ignores network in favor of NetworkIndex   nomad: update for new AllocsFit API   nomad: remove PortsOvercommited in favor of NetworkIndex   scheduler: use the new network index   nomad: exposing IntContains   ...
23997,small update to remove dupe,
23998,Merge pull request #45 from hashicorp/f-api-updates,API has ListStub's
23999,api: use stub structs,
24000,README fillin,
24001,nomad: fixing unit tests,
24002,scheduler: pass failure reason to ExhaustedNode,
24003,nomad: thread alloc fit failure reason through,
24004,nomad: rename region1 to global. Fixes #41,
24005,client: Use Alloc.TaskResouces to override Task.Resources,
24006,Merge pull request #43 from hashicorp/f-ports,Network offers and Dynamic Ports
24007,scheduler: in-place update should preserve network offer,
24008,scheduler: track dimension of exhaustion,
24009,schedule: avoid in-place update of task if network resources are different,
24010,scheduler: expose reason network offer failed,
24011,nomad: adding reason network offer failed,
24012,mock: use network resources,
24013,scheduler: thread through the TaskResources,
24014,nomad: removing old network index lookup methods,
24015,nomad: Resource Superset ignores network in favor of NetworkIndex,
24016,nomad: update for new AllocsFit API,
24017,nomad: remove PortsOvercommited in favor of NetworkIndex,
24018,scheduler: use the new network index,
24019,nomad: exposing IntContains,
24020,nomad: moving network index,
24021,scheduler: binpacker makes network offers,
24022,"scheduler: expose AddReserved, add test",
24023,nomad: adding copy helpers,
24024,api: run all tests in parallel,
24025,client: always create alloc dir if it is non-empty,
24026,scheduler: adding helper library for network assignments,
24027,nomad: add device name for network,
24028,nomad: removing public field of network,
24029,nomad: aggregate by blank network constraints,
24030,nomad: Support adding NetworkResource by CIDR/IP,
24031,nomad: handle network usage superset by CIDR/IP,
24032,nomad: Adding per-task resources block,
24033,nomad: removing unused job type,
24034,nomad: adding IP to NetworkResource,
24035,scheduler: refactor shared logic,
24036,client: skip init in dev mode,
24037,api: remove unneeded test,
24038,client: init the alloc dir,
24039,agent: remove unreachable code,
24040,api: fix nodes tests,
24041,testutil: enable dev mode using a config flag.,"This flag is not normally supported in Nomad, but we really need to use it for testing to lower the timing values for registration retries et. al. Instead of just enabling it on all tests, we provide a bool flag in the config, which just makes the test server pass the extra CLI arg when true."
24042,testutil: re-enable dev mode for short timing values,
24043,api: correct status leader test,
24044,client: alloc dirs tolerate missing directories,
24045,Merge pull request #39 from hashicorp/f-more-api,Fill missing API endpoint methods
24046,Merge pull request #33 from hashicorp/f-network,Network config
24047,Merge pull request #38 from hashicorp/website,website
24048,api: use strconv,
24049,"Update the interface, add UniversalExecutor, add stub for LinuxExecutor",
24050,api: add status endpoint,
24051,website,
24052,api: add nodes endpoints,
24053,Base Vagrantfile,
24054,Added stub / spec for executor interface,
24055,Merge pull request #35 from hashicorp/b-serfv4,Change serf version to 4 so the entire test suite doesn't fail
24056,agent: add default bind addr and port numbers,
24057,"agent: split out server config parser, add tests",
24058,scheduler: recompute scan limit on SetNodes,
24059,scheduler: Adding SetLimit to LimitIterator,
24060,agent: allow specifying advertise addrs in ip:port format,
24061,Remove todo because there is no serf version 5,
24062,Merge pull request #34 from hashicorp/f-server-logging,Added logging to server startup so we can see where it fails
24063,agent: test listener from config,
24064,Change error to err to be consistent with other usage,
24065,Change debug to info,
24066,Change to use the logger instance defined earlier,
24067,Change serf version to 4 so the entire test suite doesn't fail,
24068,Added logging to server startup so we can see where it fails,
24069,Merge pull request #31 from hashicorp/f-client,API client package
24070,agent: adjust tests,
24071,testutil: test server uses offset ports,
24072,agent: use ports/addresses/advertise_addrs for network config,
24073,agent: addresses and ports are configurable,
24074,Merge pull request #32 from hashicorp/f-config,Config merging
24075,Merge branch 'master' of https://github.com/hashicorp/nomad,
24076,Fix typos,
24077,Merge pull request #28 from hashicorp/f-docker-resource-constraints,Add docker resource constraints for CPU and Memory
24078,Merge pull request #23 from hashicorp/f-driver-config,Added config to drivers; needed for docker driver to get the socket endpoint
24079,"agent: merge telemetry, server, and client configs",
24080,agent: config loading tests,
24081,testutil: server uses dynamic ports,
24082,agent: config merge works + tests,
24083,Change panic to a more helpful message,
24084,Merge branch 'f-driver-config' into f-docker-resource-constraints,
24085,Relax Qemu version regexp to accomodate build identifier in the version command,
24086,api: support force-eval,
24087,Updated Qemu and tests to use DriverContext,
24088,Merge branch 'master' into f-driver-config,Conflicts:     client/driver/driver.go
24089,api: more tests,
24090,"Replace logging and config with DriverContext, which allows us to expand the dependency injection without changing the interface",
24091,Merge pull request #24 from hashicorp/qemu-driver,Basic Qemu driver implementation
24092,api: more tests for jobs,
24093,Merge pull request #29 from hashicorp/b-sigterm,Change SIGINT to SIGTERM
24094,api: working on evaluations,
24095,Add logger to the dockerHandle created by Open(),
24096,Cleanup based on PR feedback, Add validation that Resources.MemoryMB and Resources.CPU have non-zero values Change log calls to use logger whenever possible Change log format to add colon after driver.docker
24097,api: allow query options everywhere,
24098,api: restructure client,
24099,driver/qemu+java: Code cleanups,
24100,driver/qemu: Actually use the requred Memory from the Task,
24101,driver/qemu: Require a memory resource on the task,
24102,Change SIGINT to SIGTERM,
24103,Added preliminary resource constraints for docker; CPU and Memory,
24104,api: structs are composable,
24105,api: add constraints generators,
24106,api: finishing jobs,
24107,api: look up allocations by job ID,
24108,api: allow retrieving jobs by ID,
24109,api: return query meta/write meta,
24110,api: starting on jobs,
24111,api: starting on allocs,
24112,api: finish agent endpoint,
24113,api: agent join api works,
24114,api: allow query parameters in query/write/delete,
24115,driver/qemu: add to builtin drivers,
24116,driver/qemu: Basic lifecycle management of Qemu images,
24117,Added config to drivers; needed for docker driver to get the socket endpoint,
24118,"api: region is queryable, optimize agent caching",
24119,api: datacenter is cached and queryable,
24120,api: allow querying node name from agent,
24121,api: add agent self call,
24122,scripts: fix build warning,
24123,Merge branch 'master' into qemu-driver, master: (66 commits)   Use a single implementation of GenerateUUID   scheduler: use update strategy for rolling updates   nomad: adding helper structs   scheduler: Adding CreateEval to Planner   nomad: worker supports create eval   nomad: guard eval creation based on parent eval   nomad: adding Eval.Create endpoint   nomad: support time wait for evaluations   nomad: adding fields to cause an evaluation to 'wait'   scheduler: support in-place allocation updates   scheduler: util method to diff task groups   nomad: helper struct func   nomad: PopUpdate should minimize plan size   nomad: adding helper to manipulate plans   scheduler: share context and stack   scheduler: allow updating the base nodes   scheduler: allow StaticIterator to update base set   scheduler: pull node shuffle into util   nomad: adding node GC   nomad: using Raft StartAsLeader to make tests faster   ...
24124,Merge pull request #19 from hashicorp/test-resources,Added example python and java apps for testing
24125,Use a single implementation of GenerateUUID,
24126,scheduler: use update strategy for rolling updates,
24127,nomad: adding helper structs,
24128,scheduler: Adding CreateEval to Planner,
24129,nomad: worker supports create eval,
24130,nomad: guard eval creation based on parent eval,
24131,nomad: adding Eval.Create endpoint,
24132,nomad: support time wait for evaluations,
24133,nomad: adding fields to cause an evaluation to 'wait',
24134,scheduler: support in-place allocation updates,
24135,scheduler: util method to diff task groups,
24136,nomad: helper struct func,
24137,nomad: PopUpdate should minimize plan size,
24138,nomad: adding helper to manipulate plans,
24139,scheduler: share context and stack,
24140,scheduler: allow updating the base nodes,
24141,scheduler: allow StaticIterator to update base set,
24142,scheduler: pull node shuffle into util,
24143,nomad: adding node GC,
24144,nomad: using Raft StartAsLeader to make tests faster,
24145,http: list results are never null,
24146,nomad: unifying the state store API,
24147,state: cleanup Get*By,
24148,state: remove unused indexes,
24149,nomad: cleanup API descrepencies,
24150,state: unify the terminology for code clarity,
24151,Rename client endpoint to node endpoint,
24152,nomad: improve error messages at start for dev mode,
24153,http: adding the drain toggle endpoint,
24154,nomad: adding client drain endpoint,
24155,nomad: adding FSM support for node drain update,
24156,state: Adding UpdateNodeDrain,
24157,nomad: adding drain as node property,
24158,http: parsing flags for node drain,
24159,http: adding the agent endpoints,
24160,http: adding status APIs,
24161,nomad: allow region forwarding for status endpoints,
24162,http: complete the eval endpoints,
24163,nomad: adding endpoint for allocations by eval,
24164,http: adding the eval endpoints,
24165,nomad: adding eval list endpoint,
24166,http: adding alloc lookup endpoint,
24167,nomad: adding alloc lookup method,
24168,http: adding allocs list endpoint,
24169,nomad: adding Alloc endpoint,
24170,http: Adding nodes list,
24171,nomad: adding Node list endpoint,
24172,http/node: adding a few node endpoints,
24173,agent: fixing test names,
24174,Merge pull request #22 from hashicorp/f-api,Adding API skeleton
24175,api: Adding basic skeleton,
24176,agent: set default HTTP address,
24177,Merge pull request #21 from hashicorp/f-http,Adding HTTP framework with job endpoints
24178,http/job: complete the job endpoints,
24179,nomad: set the query meta data,
24180,nomad: adding job query endpoints,
24181,state: Adding eval lookup by job,
24182,http/job: support force evaluation endpoint,
24183,http/job: handle register,
24184,http/job: adding update endpoint,
24185,http/job: adding job query endpoint,
24186,agent: make unit tests much faster,
24187,http/job: implement deregister,
24188,http: framework jobs endpoints,
24189,agent: adding basic test,
24190,http: basic framework,
24191,driver/java: Add to builtin list,
24192,Merge remote-tracking branch 'upstream/master' into qemu-driver," upstream/master:   Removed debug logging   Added tests for docker, improved logging, and fixed a few bugs   Added initial implementation for the docker driver; tests pending"
24193,Merge pull request #16 from hashicorp/f-docker,Docker Driver
24194,Added example python and java apps for testing, Java example from @catsby
24195,Removed debug logging,
24196,"Added tests for docker, improved logging, and fixed a few bugs",
24197,driver: Add README.md for docs,
24198,Added initial implementation for the docker driver; tests pending,
24199,Merge pull request #15 from hashicorp/b-java-driver,Rough spike at adding Java driver
24200,driver/java: use filepath.Join instead of simple +,
24201,driver/java: Don't error if Java isn't found; log if error parsing,
24202,clean up orphaned java processes,
24203,driver/java: update Fingerprint for Java driver,
24204,"Spike at a Java driver, runs Java jars",
24205,move test logger to shared file,
24206,Merge pull request #13 from hashicorp/f-consul-fingerprint,Add consul fingerprint
24207,Added test for config.Read and config.ReadDefault,
24208,Delete unused NewConfig function,
24209,Add working test for consul fingerprinter,
24210,Made consul fingerprinter configurable,
24211,Added ReadDefault for supreme laziness,
24212,Added Config.Options so we can support arbitrary key-value configuration,
24213,Add consul data to node.Links,
24214,Added basic consul functionality; currently hard-coded to a test instance,
24215,Merge pull request #14 from hashicorp/aws-env,Spike on AWS ENV fingerprint
24216,"fingerprint/env_aws: Rename ec2-instance link to aws.ec2, drop ami link",
24217,"fingerprint/aws: Add 2 basic links, rename 'env' to 'platform'",
24218,agent: adding stats,
24219,agent: working on setup,
24220,agent: config merging,
24221,nomad: fixing tests,
24222,client: allocate alloc dir and cleanup,
24223,client: more stats,
24224,client: testing state restore,
24225,client: test alloc runner,
24226,client: refactor AllocRunner for testing,
24227,client: testing task runner,
24228,client: remove TaskRunner dependence on AllocRunner,
24229,client: working on state restore,
24230,client: first pass at save/restore of state,
24231,client: adding state save helpers,
24232,mock: make valid mock alloc,
24233,driver/exec: basic implementation,
24234,client: working on runners,
24235,client: test watching allocations,
24236,client: test updating alloc status,
24237,client: test heartbeats,
24238,nomad: parameterize heartbeat configuration,
24239,Merge pull request #12 from hashicorp/b-kernel.name,"Update references to ""os"" to use ""kernel.name"""
24240,cleanups,
24241,spike on AWS ENV fingerprint,
24242,"Update references to ""os"" to use ""kernel.name""","This brings test code and mocks up to date with the fingerprinter. This was a slightly larger change than I anticipated, but I think it's good for two reasons:  More semanitcally correct. module is something like ""Windows 10 Pro"" or ""Ubuntu"", while module is ""windows"" or ""linux"". module and module match these semantics. module is much easier to grep for than module, which is helpful because oracle can't help us with strings."
24243,Merge pull request #11 from hashicorp/b-windows,Windows bug fixes
24244,Drop os fingerprint since this is redundant with host,
24245,Change 'os' to 'kernel.name'; add 'kernel.version' for nix,
24246,Add guard to storage fingerprint so CWD will be used if AllocDir is not specified -- fixes windows tests,
24247,Merge pull request #9 from hashicorp/b-storage-fingerprint,Storage fixes
24248,Add the storage fingerprinter to the list of built-ins,
24249,Change column constraint so this is compatible with darwin and linux,
24250,Merge pull request #7 from hashicorp/memory-fingerprint,Add a memory fingerprint
24251,Merge pull request #8 from hashicorp/b-cpu-accumulation,Get average frequency of all CPUs so we can do average frequency * cores for total compute
24252,"convert to MB for MemoryMB, and update test",
24253,Get average frequency of all CPUs so we can do average frequency * cores for total compute,
24254,Merge remote-tracking branch 'upstream/master' into memory-fingerprint, upstream/master:   Prevent a panic if the df tool output is not in the expected format   Change 'available' to 'free' because it's shorter; also initialize node.Resources.DiskMB as total disk instead of available disk   Changed logs to errors; added data to node.Resources.DiskMB   populate CPU in Node Resources   Fix arity in log call for TCP resolution failure   Add storage fingerprinter
24255,Merge pull request #6 from hashicorp/cpu-resources,populate CPU in Node Resources
24256,"Add a memory fingerprint, just grabs memory",
24257,Merge pull request #4 from hashicorp/f-storage-fingerprint,Add storage fingerprinter
24258,Prevent a panic if the df tool output is not in the expected format,
24259,Change 'available' to 'free' because it's shorter; also initialize node.Resources.DiskMB as total disk instead of available disk,
24260,Changed logs to errors; added data to node.Resources.DiskMB,
24261,populate CPU in Node Resources,
24262,Merge pull request #5 from hashicorp/cpu-fingerprinting,"Add cpu.frequency, cpu.totalcompute"
24263,"Add cpu.frequency, cpu.totalcompute",
24264,Fix arity in log call for TCP resolution failure,
24265,Add storage fingerprinter,"Breaking change: Added ID() to Fingerprint interface. This allows us to assign each fingerprint implementation a unique ID, identify which fingerprinters have been run, and also self-identify in log messages.  Added storage fingerprinter for Windows and *nix Added storage tests under storage_test.go Added test helper functions under fingerprint/fingerprint_test.go Added ID() to existing finterprinters and drivers Added Fingerprint.ID() to log messages via log.SetPrefix()"
24266,Merge pull request #3 from hashicorp/cpu-fingerprinting,"Fingerprint CPU model name, count of cores"
24267,refactor into multiple fingerprints,
24268,"update fingerprint with more cpu, some host info",
24269,"Fingerprint CPU model name, count of cores",
24270,nomad: Adding Client.UpdateAlloc endpoint,
24271,nomad: FSM support for AllocClientUpdateRequestType,
24272,nomad: adding UpdateAllocFromClient for client based updates,
24273,Merge pull request #2 from hashicorp/f-alloc-status,Split the Alloc DesiredStatus from ClientStatus
24274,nomad: updating for new alloc representation,
24275,scheduler: updating for new APIs,
24276,Merge pull request #1 from hashicorp/f-fingerprint-config,Pass agent configuration into fingerprinter
24277,nomad: plan supports more than just evict,
24278,nomad: updating state for split,
24279,Pass config to fingerprints; update tests,
24280,nomad: update mock alloc status,
24281,nomad: splitting alloc desired and client status,
24282,We need a new package for this or we get a circular import between client and client/fingerprint,
24283,agent: adding HTTP server,
24284,agent: basic setup,
24285,client: faster retries in dev mode,
24286,nomad: use fast and slow exponential backoff in worker,
24287,agent: moving functions into helpers,
24288,agent: use the client,
24289,client: making progress,
24290,scheduler: update tests to filter terminal allocs,
24291,client: standardize naming,
24292,client: rename Alloc/TaskContext to Runner,
24293,client: alloc/task context,
24294,client: working on alloc context,
24295,client: working on alloc handling,
24296,client: working with alloc diffs,
24297,client: alloc diffing,
24298,client: state stubs,
24299,nomad: default number of schedulers to number of cores,
24300,nomad: disable one worker when leader,
24301,nomad: track the workers in the pool,
24302,nomad: adding ability to pause a worker,
24303,nomad: plan apply handles update of existing allocation,
24304,client: watch for allocations,
24305,nomad: add client.GetAllocs with blocking query support,
24306,nomad/state: adding watching mechanisms,
24307,nomad: adding evicted state for allocs,
24308,nomad: adding evict state for allocs,
24309,nomad: client does periodic heartbeat,
24310,nomad: Client.UpdateStatus used for heartbeats,
24311,nomad: testing heartbeat resets,
24312,nomad: no heartbeat for nodes in terminal status,
24313,nomad: add rate based scaling util methods,
24314,client: register on start,
24315,client: scan for drivers,
24316,driver: skeleton package,
24317,client: attempt fingerprint of host,
24318,fingerprint: adding arch fingerprint,
24319,fingerprint: adding simple package,
24320,nomad: remove the client implementation,
24321,client: testing RPC,
24322,client: testing RPC,
24323,client: skeleton package,
24324,nomad: expose RuntimeStats,
24325,client: adding skeleton,
24326,nomad: remove magic bytes,
24327,nomad: test client RPC forwarding,
24328,nomad: adding simple client,
24329,nomad: improve test reliability,
24330,nomad: rename client endpoint struct,
24331,agent: boilerplate,
24332,changing default ports,
24333,agent: working on setup,
24334,agent: start basic logging setup,
24335,nomad: reap failed evaluations,
24336,nomad: add delivery limit to eval broker,
24337,scheduler: adding job anti-affinity to the generic stack,
24338,scheduler: adding JobAntiAffinityIterator,
24339,scheduler: move proposed alloc logic to Context,
24340,scheduler: coalesce failures by task group,
24341,scheduler: track sub-scores,
24342,agent: initial skeleton,
24343,command/agent: basic command,
24344,nomad: adding endpoint to force node re-evaluate,
24345,nomad: endpoint to force re-evaluation of job,
24346,nomad: document some potential races,
24347,nomad: Integrate Eval GC with FSM time table,
24348,nomad: integrate time table with FSM,
24349,nomad: test overflow,
24350,nomad: adding timetable to track time to raft index,
24351,nomad: fixing vet errors,
24352,nomad: log error,
24353,nomad: core scheduler will GC evaluations and allocations,
24354,nomad: updating structs,
24355,nomad: Adding Eval.Reap,
24356,nomad: DeleteEval request can take a list of evals and allocations,
24357,nomad: periodic dispatch of eval GC,
24358,scheduler: update status and test retry limit,
24359,nomad: expose UpdateEval as a planner,
24360,nomad: rename to EvalToken,
24361,nomad: adding eval update functionality,
24362,scheduler: create allocs for failed placements,
24363,nomad: thread through failed allocations,
24364,nomad: adding index on EvalID and Status to alloc,
24365,nomad: remove NodesByDatacenterStatus,
24366,nomad: associate alloc with eval,
24367,nomad: adding version API endpoint,
24368,nomad: rename SystemScheduler to CoreScheduler,
24369,nomad: backport Consul pool fix,
24370,scheduler: adding minor specialization for batch,
24371,scheduler: ServiceScheduler is now GenericScheduler with service and batch modes,
24372,nomad: remove unused field,
24373,scheduler: testing job update,
24374,scheduler: test node drain behavior,
24375,scheduler: test job registration,
24376,scheduler: test all the metrics,
24377,scheduler: testing service stack,
24378,scheduler: basic metrics integration,
24379,scheduler: adding tests,
24380,scheduler: simply stack implementation,
24381,scheduler: thread size through,
24382,scheduler: integrate metrics to context,
24383,scheduler: make diff less nasty,
24384,scheduler: remove explicit index,
24385,scheduler: hide the indexing,
24386,scheduler: simplifying,
24387,scheduler: trimming more fat,
24388,schduler: refactor and test,
24389,scheduler: refactor stack out,
24390,scheduler: trying to simplify further,
24391,scheduler: refactor and test,
24392,scheduler: major refactor,
24393,schedulder: handle tainted nodes,
24394,scheduler: determine if any allocations need to be migrated,
24395,nomad: rename util method,
24396,scheduler: simplify eviction logic,
24397,scheduler: testing utility methods,
24398,scheduler: refactor harness location,
24399,scheduler: working on plan submission,
24400,scheduler: support iterator reset,
24401,scheduler: working on node selection,
24402,nomad: tweak structs,
24403,scheduler: allow changing parameters mid-stream,
24404,nomad: adding NodesByDatacenterStatus,
24405,scheduler: testing bin pack scoring,
24406,scheduler: testing basic bin pack,
24407,scheduler: refactor tests,
24408,scheduler: working on bin pack,
24409,scheduler: Adding State to Context,
24410,schedueler: adding best fit scoring,
24411,scheduler: implement basic constraint iterator,
24412,scheduler: implementing driver iterator,
24413,scheduler: testing more iterators,
24414,scheduler: testing select iterators,
24415,nomad: avoid split-brain in plan processing due to leader transition or eval retry,
24416,nomad: avoid split-brain eval handling after leader transition,
24417,scheduler: adding static rank iterator,
24418,scheduler: adding various iterators,
24419,scheduler: adding feasibility iterators,
24420,scheduler: working on job updates,
24421,nomad: adding name to allocation,
24422,scheduler: test job deregister,
24423,nomad: move state and mocks into shared packages,
24424,"scheduler: derp, job deregister should always evict",
24425,scheduler: check node status before evicting,
24426,nomad: planner can fast-path evict-only plans,
24427,scheduler: first pass at job deregister,
24428,nomad: measure invoke time per scheduler,
24429,nomad: Adding AllocsByJob,
24430,scheduler: adding service scheduler definition,
24431,nomad: create system scheduler as needed,
24432,nomad: adding special 'system' scheduler,
24433,nomad: fixing tset for new api,
24434,nomad: client updates generate evaluaitons,
24435,nomad: UpsertEvals can take a list of Evals,
24436,nomad: job deregister creates an evaluation,
24437,nomad: job create/update creates evaluation,
24438,nomad: FSM enqueues evaluations,
24439,nomad: share enqueue logic,
24440,nomad: remove eval broker from state store,
24441,nomad: eval broker serializes by JobID,
24442,nomad: deduplicate enqueue of evaluations,
24443,nomad: restore eval broker on leader transition,
24444,nomad: increase test reliability,
24445,nomad: cleanup stats goroutines,
24446,nomad: add checking if eval broker enabled,
24447,nomad: test leader enables plan queue,
24448,nomad: allow testing if plan queue enabled,
24449,nomad: test worker plan submission,
24450,nomad: make worker more resilient to transient errors,
24451,nomad: use correct nodes index,
24452,nomad: test AllocsByNode,
24453,nomad: testing plan evaluation,
24454,nomad: testing apply plan,
24455,nomad: test evaluation of node plan,
24456,nomad: share alloc fitting test,
24457,nomad: share resource adding,
24458,nomad: share and test superset,
24459,nomad: share port overcommit check,
24460,nomad: testing,
24461,nomad: move and test function,
24462,nomad: move and test max function,
24463,nomad: check for err in test,
24464,nomad: fixing tests,
24465,nomad: add some profiling,
24466,nomad: first pass at plan eval and apply,
24467,nomad: adding the FSM CRUD,
24468,nomad: adding the FSM CRUD,
24469,nomad: state store CRUD for allocations,
24470,structs: working on plan and plan result,
24471,nomad: use plan enqueue time instead of eval create index,
24472,nomad: more worker testing,
24473,nomad: test waitForIndex,
24474,nomad: testing worker acking,
24475,nomad: testing worker dequeue,
24476,nomad: guard against plan during shutdown,
24477,"nomad: improving worker, submit plans",
24478,nomad: enable all builtin schedulers by default,
24479,nomad: integrating worker and scheduler,
24480,scheduler: initial interface,
24481,nomad: test placeholders,
24482,nomad: first pass adding scheduling workers,
24483,nomad: fix Eval.Dequeue forwarding,
24484,nomad: adding plan endpoint,
24485,nomad: fixing plan queue dequeue with no timeout,
24486,nomad: adding skeleton no-op plan evaluator,
24487,nomad: integrate plan queue,
24488,nomad: adding plan queue,
24489,nomad: ensure FIFO dequeue with same priority,
24490,nomad: threading eval broker through fsm and state store,
24491,nomad: emit metrics from the eval broker,
24492,nomad: adding Eval endpoints for Ack and Nack,
24493,nomad: adding Eval.Dequeue endpoint,
24494,nomad: enable/disable eval broker based on leadership,
24495,nomad: method to test if outstanding evaluation,
24496,"nomad: add eval broker, configurable nack timeout",
24497,nomad: testing the eval broker,
24498,nomad: first pass at eval broker,
24499,nomad: adding utility shuffle,
24500,nomad: adding RPC endpoints for fetching Eval,
24501,nomad: adding FSM support for evaluations,
24502,nomad: CRUD for evals in state store,
24503,nomad: Adding Eval model,
24504,nomad: reduce mixed terminology by adding ID to Job,
24505,nomad: Adding the CRUD endpoints for jobs,
24506,nomad: add FSM support for Jobs,
24507,nomad: make struct names more specific to avoid confusion,
24508,nomad: CRUD for jobs in state store,
24509,nomad: support FSM snap/restore of indexes table,
24510,nomad: testing the client endpoint GetNode,
24511,nomad: track the index affecting a table,
24512,nomad: starting client GetNode,
24513,nomad: adding the update status endpoint,
24514,nomad: adding client deregister endpoint,
24515,nomad: expose the raft index on write,
24516,nomad: adding test for client register,
24517,nomad: RPC layer should check for missing region,
24518,nomad: testing fsm snapshot and restore,
24519,nomad: adding methods to snapshot and restore nodes,
24520,nomad: FSM support for node updates,
24521,nomad: adding basic node CRUD,
24522,nomad: adding indexes to structs,
24523,nomad: adding basic test for schema,
24524,nomad: fixing client endpoint,
24525,nomad: adding AllocMetric to track allocation metrics,
24526,nomad: working on allocation schema,
24527,nomad: working on job struct and schema,
24528,nomad: working on the node representation,
24529,nomad: change to use MemDB instead of raw iradix,
24530,memdb: refactor into seperate repo,
24531,memdb: richer testing,
24532,memdb: testing compound index,
24533,memdb: support prefix based iteration,
24534,memdb: support prefix on indexes,
24535,memdb: Adding UUID indexer,
24536,memdb: implement DeleteAll,
24537,memdb: adding very basic index scanning,
24538,"memdb: directly cast, avoid unsafe",
24539,memdb: support object delete,
24540,memdb: Supporting non-unique index values,
24541,memdb: support update of objects,
24542,memdb: insert and first working,
24543,memdb: initialize and more testing,
24544,memdb: testin txn abort and commit,
24545,memdb: testing writer concurrency,
24546,memdb: testing schema validation,
24547,memdb: initial skeleton,
24548,nomad: adding Client endpoint,
24549,nomad: testing RPC forwarding,
24550,nomad: refactor test code,
24551,nomad: adding RPC forwarding methods,
24552,nomad: adding connection pool,
24553,nomad: track local peers,
24554,nomad: track local peers,
24555,nomad: adding response struct,
24556,nomad: first pass at register struct,
24557,nomad: adding basic RPC interfaces,
24558,nomad: increase serf reap to 72h,
24559,nomad: adding raftApply RPC,
24560,structs: adding encode and decode,
24561,nomad: adding utility methods,
24562,nomad: adding more test cases,
24563,nomad: testing leader bridging of serf,
24564,nomad: adding leader logic to add/remove raft peers,
24565,nomad: testing status endpoint,
24566,nomad: adding merge guard for non-nomad servers,
24567,nomad: testing bootstrap expect,
24568,nomad: testing remove peer,
24569,nomad: adding reconcile channel,
24570,nomad: testing serf join,
24571,nomad: working on serf member parsing,
24572,"nomad: expose serf methods, add leave support",
24573,nomad: expose serf stats,
24574,nomad: adding Serf integration,
24575,nomad: more skeleton,
24576,nomad: embed the state store to reduce duplication,
24577,"nomad: adding immutable radix, snapshot support",
24578,nomad: support DevMode configuration,
24579,nomad: adding basic structure for raft,
24580,Adding basic version command,
24581,Adding initial skeleton,
24582,Updated gitignore,
24583,Initial commit,
