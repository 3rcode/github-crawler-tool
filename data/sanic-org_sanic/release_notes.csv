Index,Release Note,Release Note With Abstraction
1,"Features

#2545 Standardize init of exceptions for more consistent control of HTTP responses using exceptions
#2606 Decode headers as UTF-8 also in ASGI
#2646 Separate ASGI request and lifespan callables
#2659 Use FALLBACK_ERROR_FORMAT for handlers that return empty()
#2662 Add basic file browser (HTML page) and auto-index serving
#2667 Nicer traceback formatting (HTML page)
#2668 Smarter error page rendering format selection; more reliant upon header and ""common sense"" defaults
#2680 Check the status of socket before shutting down with SHUT_RDWR
#2687 Refresh Request.accept functionality to be more performant and spec-compliant
#2696 Add header accessors as properties
    Example-Field: Foo, Bar
    Example-Field: Baz
python
    request.headers.example_field == ""Foo, Bar,Baz""

#2700 Simpler CLI targets
sh
$ sanic path.to.module:app          # global app instance
$ sanic path.to.module:create_app   # factory pattern
$ sanic ./path/to/directory/        # simple serve
- #2701 API to define a number of workers in managed processes
- #2704 Add convenience for dynamic changes to routing
- #2706 Add convenience methods for cookie creation and deletion
python
response = text(""..."")
response.add_cookie(""test"", ""It worked!"", domain="".yummy-yummy-cookie.com"")
- #2707 Simplified parse_content_header escaping to be RFC-compliant and remove outdated FF hack
- #2710 Stricter charset handling and escaping of request URLs
- #2711 Consume body on DELETE by default
- #2719 Allow password to be passed to TLS context
- #2720 Skip middleware on RequestCancelled
- #2721 Change access logging format to %s
- #2722 Add CertLoader as application option for directly controlling SSLContext objects
- #2725 Worker sync state tolerance on race condition


Bugfixes

#2651 ASGI websocket to pass thru bytes as is
#2697 Fix comparison between datetime aware and naive in file when using If-Modified-Since

Deprecations and Removals

#2666 Remove deprecated __blueprintname__ property

Improved Documentation

#2712 Improved example using 'https' to create the redirect


New Contributors

@r0x0d made their first contribution in https://github.com/sanic-org/sanic/pull/2666
@deounix made their first contribution in https://github.com/sanic-org/sanic/pull/2680
@mbendiksen made their first contribution in https://github.com/sanic-org/sanic/pull/2712
@stricaud made their first contribution in https://github.com/sanic-org/sanic/pull/2697

Full Changelog: https://github.com/sanic-org/sanic/compare/v22.12.0...v23.3.0","Features
2545 Standardize init of exceptions for more consistent control of HTTP responses using exceptions
2606 Decode headers as UTF-8 also in ASGI
2646 Separate ASGI request and lifespan callables
2659 Use FALLBACK_ERROR_FORMAT for handlers that return empty()
2662 Add basic file browser (HTML page) and auto-index serving
2667 Nicer traceback formatting (HTML page)
2668 Smarter error page rendering format selection; more reliant upon header and ""common sense"" defaults
2680 Check the status of socket before shutting down with SHUT_RDWR
2687 Refresh Request.accept functionality to be more performant and spec-compliant
2696 Add header accessors as properties
module
python
    request.headers.example_field == ""Foo, Bar,Baz""
2700 Simpler CLI targets
sh
$ sanic path.to.module:app          # global app instance
$ sanic path.to.module:create_app   # factory pattern
$ sanic ./path/to/directory/        # simple serve
- #2701 API to define a number of workers in managed processes
- #2704 Add convenience for dynamic changes to routing
- #2706 Add convenience methods for cookie creation and deletion
python
response = text(""..."")
response.add_cookie(""test"", ""It worked!"", domain="".yummy-yummy-cookie.com"")
- #2707 Simplified parse_content_header escaping to be RFC-compliant and remove outdated FF hack
- #2710 Stricter charset handling and escaping of request URLs
- #2711 Consume body on DELETE by default
- #2719 Allow password to be passed to TLS context
- #2720 Skip middleware on RequestCancelled
- #2721 Change access logging format to %s
- #2722 Add CertLoader as application option for directly controlling SSLContext objects
- #2725 Worker sync state tolerance on race condition
Bugfixes
2651 ASGI websocket to pass thru bytes as is
2697 Fix comparison between datetime aware and naive in file when using If-Modified-Since
Deprecations and Removals
2666 Remove deprecated blueprintname property
Improved Documentation
2712 Improved example using 'https' to create the redirect
New Contributors
@r0x0d made their first contribution in link
@deounix made their first contribution in link
@mbendiksen made their first contribution in link
@stricaud made their first contribution in link
Full Changelog: link"
2,"Features

#2569 Add JSONResponse class with some convenient methods when updating a response object
#2598 Change uvloop requirement to >=0.15.0
#2609 Add compatibility with websockets v11.0
#2610 Kill server early on worker error
Raise deadlock timeout to 30s


#2617 Scale number of running server workers
#2621 #2634 Send SIGKILL on subsequent ctrl+c to force worker exit
#2622 Add API to restart all workers from the multiplexer

#2624 Default to spawn for all subprocesses unless specifically set:
    ```python
    from sanic import Sanic
Sanic.start_method = ""fork""
``
- [#2625](https://github.com/sanic-org/sanic/pull/2625) Filename normalisation of form-data/multipart file uploads
- [#2626](https://github.com/sanic-org/sanic/pull/2626) Move to HTTP Inspector:
- Remote access to inspect running Sanic instances
- TLS support for encrypted calls to Inspector
- Authentication to Inspector with API key
- Ability to extend Inspector with custom commands
- [#2632](https://github.com/sanic-org/sanic/pull/2632) Control order of restart operations
- [#2633](https://github.com/sanic-org/sanic/pull/2633) Move reload interval to class variable
- [#2636](https://github.com/sanic-org/sanic/pull/2636) Addprioritytoregister_middlewaremethod
- [#2639](https://github.com/sanic-org/sanic/pull/2639) Addunquotetoadd_routemethod
- [#2640](https://github.com/sanic-org/sanic/pull/2640) ASGI websockets to receivetextorbytes`


Bugfixes

#2607 Force socket shutdown before close to allow rebinding
#2590 Use actual StrEnum in Python 3.11+
#2615 Ensure middleware executes only once per request timeout
#2627 Crash ASGI application on lifespan failure
#2635 Resolve error with low-level server creation on Windows

Deprecations and Removals

#2608 #2630 Signal conditions and triggers saved on signal.extra 
#2626 Move to HTTP Inspector
🚨 BREAKING CHANGE: Moves the Inspector to a Sanic app from a simple TCP socket with a custom protocol
DEPRECATE: The --inspect* commands have been deprecated in favor of inspect ... commands


#2628 Replace deprecated distutils.strtobool

Developer infrastructure

#2612 Add CI testing for Python 3.11


Full Changelog: https://github.com/sanic-org/sanic/compare/v22.9.1...v22.12.0","Features
2569 Add JSONResponse class with some convenient methods when updating a response object
2598 Change uvloop requirement to >=0.15.0
2609 Add compatibility with websockets v11.0
2610 Kill server early on worker error
Raise deadlock timeout to 30s
2617 Scale number of running server workers
2621 #2634 Send SIGKILL on subsequent ctrl+c to force worker exit
2622 Add API to restart all workers from the multiplexer
2624 Default to spawn for all subprocesses unless specifically set:
module
Sanic.start_method = ""fork""
module
Bugfixes
2607 Force socket shutdown before close to allow rebinding
2590 Use actual StrEnum in Python 3.11+
2615 Ensure middleware executes only once per request timeout
2627 Crash ASGI application on lifespan failure
2635 Resolve error with low-level server creation on Windows
Deprecations and Removals
2608 #2630 Signal conditions and triggers saved on signal.extra
2626 Move to HTTP Inspector
🚨 BREAKING CHANGE: Moves the Inspector to a Sanic app from a simple TCP socket with a custom protocol
DEPRECATE: The --inspect* commands have been deprecated in favor of inspect ... commands
2628 Replace deprecated distutils.strtobool
Developer infrastructure
2612 Add CI testing for Python 3.11
Full Changelog: link"
3,"What's Changed

docs: sanic now supports windows by @SaidBySolo in https://github.com/sanic-org/sanic/pull/2582
Upgrade markdown templates to issue forms by @ahopkins in https://github.com/sanic-org/sanic/pull/2588
improve error message if no apps found in registry by @scardozos in https://github.com/sanic-org/sanic/pull/2585
fix: sideeffects created by changing fork to spawn by @SaidBySolo in https://github.com/sanic-org/sanic/pull/2591
22.9 Docs by @ahopkins in https://github.com/sanic-org/sanic/pull/2556
Add interval sleep in reloader by @ahopkins in https://github.com/sanic-org/sanic/pull/2595
Resolve edge case in nested BP Groups by @ahopkins in https://github.com/sanic-org/sanic/pull/2592
Add GenericCreator for loading SSL certs in processes by @ahopkins in https://github.com/sanic-org/sanic/pull/2578

New Contributors

@scardozos made their first contribution in https://github.com/sanic-org/sanic/pull/2585

Full Changelog: https://github.com/sanic-org/sanic/compare/v22.9.0...v22.9.1","What's Changed
docs: sanic now supports windows by @SaidBySolo in link
Upgrade markdown templates to issue forms by @ahopkins in link
improve error message if no apps found in registry by @scardozos in link
fix: sideeffects created by changing fork to spawn by @SaidBySolo in link
22.9 Docs by @ahopkins in link
Add interval sleep in reloader by @ahopkins in link
Resolve edge case in nested BP Groups by @ahopkins in link
Add GenericCreator for loading SSL certs in processes by @ahopkins in link
New Contributors
@scardozos made their first contribution in link
Full Changelog: link"
4,"Features

#2445 Add custom loads function 
#2490 Make WebsocketImplProtocol async iterable
#2499 Sanic Server WorkerManager refactor
#2506 Use pathlib for path resolution (for static file serving)
#2508 Use path.parts instead of match (for static file serving)
#2513 Better request cancel handling
#2516 Add request properties for HTTP method info:
request.is_safe
request.is_idempotent
request.is_cacheable
See MDN docs for more information about when these apply


#2522 Always show server location in ASGI
#2526 Cache control support for static files for returning 304 when appropriate
#2533 Refactor _static_request_handler
#2540 Add signals before and after handler execution
http.handler.before
http.handler.after


#2542 Add [redacted] to CLI :)
#2546 Add deprecation warning filter
#2550 Middleware priority and performance enhancements

Bugfixes

#2495 Prevent directory traversion with static files
#2515 Do not apply double slash to paths in certain static dirs in Blueprints

Deprecations and Removals

#2525 Warn on duplicate route names, will be prevented outright in v23.3
#2537 Raise warning and deprecation notice on duplicate exceptions, will be prevented outright in v23.3

Developer infrastructure

#2504 Cleanup test suite
#2505 Replace Unsupported Python Version Number from the Contributing Doc
#2530 Do not include tests folder in installed package resolver

Improved Documentation

#2502 Fix a few typos
#2517 #2536 Add some type hints


New Contributors

@huntzhan made their first contribution in https://github.com/sanic-org/sanic/pull/2530
@monosans made their first contribution in https://github.com/sanic-org/sanic/pull/2536

Full Changelog: https://github.com/sanic-org/sanic/compare/v22.6.0...v22.9.0","Features
2445 Add custom loads function
2490 Make WebsocketImplProtocol async iterable
2499 Sanic Server WorkerManager refactor
2506 Use pathlib for path resolution (for static file serving)
2508 Use path.parts instead of match (for static file serving)
2513 Better request cancel handling
2516 Add request properties for HTTP method info:
request.is_safe
request.is_idempotent
request.is_cacheable
See MDN docs for more information about when these apply
2522 Always show server location in ASGI
2526 Cache control support for static files for returning 304 when appropriate
2533 Refactor _static_request_handler
2540 Add signals before and after handler execution
http.handler.before
http.handler.after
2542 Add [redacted] to CLI :)
2546 Add deprecation warning filter
2550 Middleware priority and performance enhancements
Bugfixes
2495 Prevent directory traversion with static files
2515 Do not apply double slash to paths in certain static dirs in Blueprints
Deprecations and Removals
2525 Warn on duplicate route names, will be prevented outright in v23.3
2537 Raise warning and deprecation notice on duplicate exceptions, will be prevented outright in v23.3
Developer infrastructure
2504 Cleanup test suite
2505 Replace Unsupported Python Version Number from the Contributing Doc
2530 Do not include tests folder in installed package resolver
Improved Documentation
2502 Fix a few typos
2517 #2536 Add some type hints
New Contributors
@huntzhan made their first contribution in link
@monosans made their first contribution in link
Full Changelog: link"
5,"2522 Always show server location in ASGI
Full Changelog: https://github.com/sanic-org/sanic/compare/v22.6.1...v22.6.2","2522 Always show server location in ASGI
Full Changelog: link"
6,"Resolves #2477 and #2478 
See also #2495 and https://github.com/sanic-org/sanic/security/advisories/GHSA-8cw9-5hmv-77w6
Full Changelog: https://github.com/sanic-org/sanic/compare/v22.6.0...v22.6.1","Resolves #2477 and #2478 
See also #2495 and link
Full Changelog: link"
7,"Resolves #2477 and #2478 
See also #2495 and https://github.com/sanic-org/sanic/security/advisories/GHSA-8cw9-5hmv-77w6
Full Changelog: https://github.com/sanic-org/sanic/compare/v21.12.1...v21.12.2","Resolves #2477 and #2478 
See also #2495 and link
Full Changelog: link"
8,"Resolves #2477 and #2478 
See also #2495 and https://github.com/sanic-org/sanic/security/advisories/GHSA-8cw9-5hmv-77w6
Full Changelog: https://github.com/sanic-org/sanic/compare/v20.12.6...v20.12.7","Resolves #2477 and #2478 
See also #2495 and link
Full Changelog: link"
9,"Features

#2378 Introduce HTTP/3 and autogeneration of TLS certificates in DEBUG mode
👶 EARLY RELEASE FEATURE: Serving Sanic over HTTP/3 is an early release feature. It does not yet fully cover the HTTP/3 spec, but instead aims for feature parity with Sanic's existing HTTP/1.1 server. Websockets, WebTransport, push responses are examples of some features not yet implemented.
📦 EXTRA REQUIREMENT: Not all HTTP clients are capable of interfacing with HTTP/3 servers. You may need to install a HTTP/3 capable client.
📦 EXTRA REQUIREMENT: In order to use TLS autogeneration, you must install either mkcert or trustme.


#2416 Add message to task.cancel
#2420 Add exception aliases for more consistent naming with standard HTTP response types (BadRequest, MethodNotAllowed, RangeNotSatisfiable)
#2432 Expose ASGI scope as a property on the Request object
#2438 Easier access to websocket class for annotation: from sanic import Websocket
#2439 New API for reading form values with options: Request.get_form 
#2445 Add custom loads function
#2447, #2486 Improved API to support setting cache control headers
#2453 Move verbosity filtering to logger
#2475 Expose getter for current request using Request.get_current()

Bugfixes

#2448 Fix to allow running with pythonw.exe or places where there is no sys.stdout
#2451 Trigger http.lifecycle.request signal in ASGI mode
#2455 Resolve typing of stacked route definitions
#2463 Properly catch websocket CancelledError in websocket handler in Python 3.7

Deprecations and Removals

#2487 v22.6 deprecations and changes
Optional application registry
Execution of custom handlers after some part of response was sent
Configuring fallback handlers on the ErrorHandler
Custom LOGO setting
sanic.response.stream
AsyncioServer.init



Developer infrastructure

#2449 Clean up black and isort config
#2479 Fix some flappy tests

Improved Documentation

#2461 Update example to match current application naming standards
#2466 Better type annotation for Extend
#2485 Improved help messages in CLI


New Contributors

@azimovMichael made their first contribution in https://github.com/sanic-org/sanic/pull/2432
@amitay87 made their first contribution in https://github.com/sanic-org/sanic/pull/2461
@zozzz made their first contribution in https://github.com/sanic-org/sanic/pull/2451
@kijk2869 made their first contribution in https://github.com/sanic-org/sanic/pull/2466
@timmo001 made their first contribution in https://github.com/sanic-org/sanic/pull/2448

Full Changelog: https://github.com/sanic-org/sanic/compare/v22.3.1...v22.6.0","Features
2378 Introduce HTTP/3 and autogeneration of TLS certificates in DEBUG mode
👶 EARLY RELEASE FEATURE: Serving Sanic over HTTP/3 is an early release feature. It does not yet fully cover the HTTP/3 spec, but instead aims for feature parity with Sanic's existing HTTP/1.1 server. Websockets, WebTransport, push responses are examples of some features not yet implemented.
📦 EXTRA REQUIREMENT: Not all HTTP clients are capable of interfacing with HTTP/3 servers. You may need to install a HTTP/3 capable client.
📦 EXTRA REQUIREMENT: In order to use TLS autogeneration, you must install either mkcert or trustme.
2416 Add message to task.cancel
2420 Add exception aliases for more consistent naming with standard HTTP response types (BadRequest, MethodNotAllowed, RangeNotSatisfiable)
2432 Expose ASGI scope as a property on the Request object
2438 Easier access to websocket class for annotation: from sanic import Websocket
2439 New API for reading form values with options: Request.get_form
2445 Add custom loads function
2447, #2486 Improved API to support setting cache control headers
2453 Move verbosity filtering to logger
2475 Expose getter for current request using Request.get_current()
Bugfixes
2448 Fix to allow running with pythonw.exe or places where there is no sys.stdout
2451 Trigger http.lifecycle.request signal in ASGI mode
2455 Resolve typing of stacked route definitions
2463 Properly catch websocket CancelledError in websocket handler in Python 3.7
Deprecations and Removals
2487 v22.6 deprecations and changes
Optional application registry
Execution of custom handlers after some part of response was sent
Configuring fallback handlers on the ErrorHandler
Custom LOGO setting
sanic.response.stream
AsyncioServer.init
Developer infrastructure
2449 Clean up black and isort config
2479 Fix some flappy tests
Improved Documentation
2461 Update example to match current application naming standards
2466 Better type annotation for Extend
2485 Improved help messages in CLI
New Contributors
@azimovMichael made their first contribution in link
@amitay87 made their first contribution in link
@zozzz made their first contribution in link
@kijk2869 made their first contribution in link
@timmo001 made their first contribution in link
Full Changelog: link"
10,"Full Changelog: https://github.com/sanic-org/sanic/compare/v22.3.1...v22.3.2

Resolve warning issue with error handler mismatch warning 
https://github.com/sanic-org/sanic/commit/3a1a9f071df24e2fe0ff5aac7d529019034fe898
","Full Changelog: link
Resolve warning issue with error handler mismatch warning 
link"
11,"What's Changed

Add fall back for Windows even loop fetching by @ahopkins in https://github.com/sanic-org/sanic/pull/2421

Full Changelog: https://github.com/sanic-org/sanic/compare/v22.3.0...v22.3.1","What's Changed
Add fall back for Windows even loop fetching by @ahopkins in link
Full Changelog: link"
12,"Version 22.3.0
Features

#2347 API for multi-application server
🚨 BREAKING CHANGE: The old sanic.worker.GunicornWorker has been removed. To run Sanic with gunicorn, you should use it thru uvicorn as described in their docs.
🧁 SIDE EFFECT: Named background tasks are now supported, even in Python 3.7


#2357 Parse Authorization header as Request.credentials
#2361 Add config option to skip Touchup step in application startup
#2372 Updates to CLI help messaging
#2382 Downgrade warnings to backwater debug messages 
#2396 Allow for multidict v0.6
#2401 Upgrade CLI catching for alternative application run types
#2402 Conditionally inject CLI arguments into factory
#2413 Add new start and stop event listeners to reloader process
#2414 Remove loop as required listener arg
#2415 Better exception for bad URL parsing
sanic-routing#47 Add a new extention parameter type: <file:ext>, <file:ext=jpg>, <file:ext=jpg|png|gif|svg>, <file=int:ext>, <file=int:ext=jpg|png|gif|svg>, <file=float:ext=tar.gz>
👶 BETA FEATURE: This feature will not work with path type matching, and is being released as a beta feature only.


sanic-routing#57 Change register_pattern to accept a str or Pattern
sanic-routing#58 Default matching on non-empty strings only, and new strorempty pattern type
🚨 BREAKING CHANGE: Previously a route with a dynamic string parameter (/<foo> or /<foo:str>) would match on any string, including empty strings. It will now only match a non-empty string. To retain the old behavior, you should use the new parameter type: /<foo:strorempty>.



Bugfixes

#2373 Remove error_logger on websockets
#2381 Fix newly assigned None in task registry
sanic-routing#52 Add type casting to regex route matching
sanic-routing#60 Add requirements check on regex routes (this resolves, for example, multiple static directories with differing host values)

Deprecations and Removals

#2362 22.3 Deprecations and changes
debug=True and --debug do NOT automatically run auto_reload
Default error render is with plain text (browsers still get HTML by default because auto looks at headers)
config is required for ErrorHandler.finalize
ErrorHandler.lookup requires two positional args
Unused websocket protocol args removed


#2344 Deprecate loading of lowercase environment variables

Developer infrastructure

#2363 Revert code coverage back to Codecov
#2405 Upgrade tests for sanic-routing changes
sanic-testing#35 Allow for httpx v0.22

Improved Documentation

#2350 Fix link in README for ASGI
#2398 Document middleware on_request and on_response
#2409 Add missing documentation for Request.respond

Miscellaneous

#2376 Fix typing for ListenerMixin.listener
#2383 Clear deprecation warning in asyncio.wait
#2387 Cleanup __slots__ implementations
#2390 Clear deprecation warning in asyncio.get_event_loop
","Version 22.3.0
Features
2347 API for multi-application server
🚨 BREAKING CHANGE: The old sanic.worker.GunicornWorker has been removed. To run Sanic with gunicorn, you should use it thru uvicorn as described in their docs.
🧁 SIDE EFFECT: Named background tasks are now supported, even in Python 3.7
2357 Parse Authorization header as Request.credentials
2361 Add config option to skip Touchup step in application startup
2372 Updates to CLI help messaging
2382 Downgrade warnings to backwater debug messages
2396 Allow for multidict v0.6
2401 Upgrade CLI catching for alternative application run types
2402 Conditionally inject CLI arguments into factory
2413 Add new start and stop event listeners to reloader process
2414 Remove loop as required listener arg
2415 Better exception for bad URL parsing
sanic-routing#47 Add a new extention parameter type: , , , , , 
👶 BETA FEATURE: This feature will not work with path type matching, and is being released as a beta feature only.
sanic-routing#57 Change register_pattern to accept a str or Pattern
sanic-routing#58 Default matching on non-empty strings only, and new strorempty pattern type
🚨 BREAKING CHANGE: Previously a route with a dynamic string parameter (/ or /) would match on any string, including empty strings. It will now only match a non-empty string. To retain the old behavior, you should use the new parameter type: /.
Bugfixes
2373 Remove error_logger on websockets
2381 Fix newly assigned None in task registry
sanic-routing#52 Add type casting to regex route matching
sanic-routing#60 Add requirements check on regex routes (this resolves, for example, multiple static directories with differing host values)
Deprecations and Removals
2362 22.3 Deprecations and changes
debug=True and --debug do NOT automatically run auto_reload
Default error render is with plain text (browsers still get HTML by default because auto looks at headers)
config is required for ErrorHandler.finalize
ErrorHandler.lookup requires two positional args
Unused websocket protocol args removed
2344 Deprecate loading of lowercase environment variables
Developer infrastructure
2363 Revert code coverage back to Codecov
2405 Upgrade tests for sanic-routing changes
sanic-testing#35 Allow for httpx v0.22
Improved Documentation
2350 Fix link in README for ASGI
2398 Document middleware on_request and on_response
2409 Add missing documentation for Request.respond
Miscellaneous
2376 Fix typing for ListenerMixin.listener
2383 Clear deprecation warning in asyncio.wait
2387 Cleanup slots implementations
2390 Clear deprecation warning in asyncio.get_event_loop"
13,"What's Changed

Potential server crash if running Python 3.10 w/ Sanic 20.12  by @ahopkins in https://github.com/sanic-org/sanic/pull/2400

Full Changelog: https://github.com/sanic-org/sanic/compare/v20.12.5...v20.12.6","What's Changed
Potential server crash if running Python 3.10 w/ Sanic 20.12  by @ahopkins in link
Full Changelog: link"
14,2366 Upgrade websockets version - SECURITY UPDATE,2366 Upgrade websockets version - SECURITY UPDATE
15,"
#2349 Only display MOTD on startup
#2354 Add config.update support for all config values
#2355 Ignore name argument in Python 3.7
","2349 Only display MOTD on startup
2354 Add config.update support for all config values
2355 Ignore name argument in Python 3.7"
16,"Features

#2260 Allow early Blueprint registrations to still apply later added objects
#2262 Noisy exceptions - force logging of all exceptions
#2264 Optional uvloop by configuration
#2270 Vhost support using multiple TLS certificates
#2277 Change signal routing for increased consistency
BREAKING CHANGE: If you were manually routing signals there is a breaking change. The signal router's get is no longer 100% determinative. There is now an additional step to loop thru the returned signals for proper matching on the requirements. If signals are being dispatched using app.dispatch or bp.dispatch, there is no change.


#2290 Add contextual exceptions
#2291 Increase join concat performance 
#2295, #2316, #2331 Restructure of CLI and application state with new displays and more command parity with app.run
#2302 Add route context at definition time
#2304 Named tasks and new API for managing background tasks
#2307 On app auto-reload, provide insight of changed files
#2308 Auto extend application with Sanic Extensions if it is installed, and provide first class support for accessing the extensions
#2309 Builtin signals changed to Enum
#2313 Support additional config implementation use case
#2321 Refactor environment variable hydration logic
#2327 Prevent sending multiple or mixed responses on a single request
#2330 Custom type casting on environment variables
#2332 Make all deprecation notices consistent
#2335 Allow underscore to start instance names

Bugfixes

#2273 Replace assignation by typing for websocket_handshake
#2285 Fix IPv6 display in startup logs
#2299 Dispatch http.lifecyle.response from exception handler

Deprecations and Removals

#2306 Removal of deprecated items
Sanic and Blueprint may no longer have arbitrary properties attached to them
Sanic and Blueprint forced to have compliant names
alphanumeric + _ + -
must start with letter or _


load_env keyword argument of Sanic
sanic.exceptions.abort
sanic.views.CompositionView
sanic.response.StreamingHTTPResponse
NOTE: the stream() response method (where you pass a callable streaming function) has been deprecated and will be removed in v22.6. You should upgrade all streaming responses to the new style: https://sanicframework.org/en/guide/advanced/streaming.html#response-streaming




#2320 Remove app instance from Config for error handler setting

Developer infrastructure

#2251 Change dev install command
#2286 Change codeclimate complexity threshold from 5 to 10
#2287 Update host test function names so they are not overwritten
#2292 Fail CI on error
#2311, #2324 Do not run tests for draft PRs
#2336 Remove paths from coverage checks
#2338 Cleanup ports on tests

Improved Documentation

#2269, #2329, #2333 Cleanup typos and fix language

Miscellaneous

#2257, #2294, #2341 Add Python 3.10 support
#2279, #2317, #2322 Add/correct missing type annotations
#2305 Fix examples to use modern implementations
","Features
2260 Allow early Blueprint registrations to still apply later added objects
2262 Noisy exceptions - force logging of all exceptions
2264 Optional uvloop by configuration
2270 Vhost support using multiple TLS certificates
2277 Change signal routing for increased consistency
BREAKING CHANGE: If you were manually routing signals there is a breaking change. The signal router's get is no longer 100% determinative. There is now an additional step to loop thru the returned signals for proper matching on the requirements. If signals are being dispatched using app.dispatch or bp.dispatch, there is no change.
2290 Add contextual exceptions
2291 Increase join concat performance
2295, #2316, #2331 Restructure of CLI and application state with new displays and more command parity with app.run
2302 Add route context at definition time
2304 Named tasks and new API for managing background tasks
2307 On app auto-reload, provide insight of changed files
2308 Auto extend application with Sanic Extensions if it is installed, and provide first class support for accessing the extensions
2309 Builtin signals changed to Enum
2313 Support additional config implementation use case
2321 Refactor environment variable hydration logic
2327 Prevent sending multiple or mixed responses on a single request
2330 Custom type casting on environment variables
2332 Make all deprecation notices consistent
2335 Allow underscore to start instance names
Bugfixes
2273 Replace assignation by typing for websocket_handshake
2285 Fix IPv6 display in startup logs
2299 Dispatch http.lifecyle.response from exception handler
Deprecations and Removals
2306 Removal of deprecated items
Sanic and Blueprint may no longer have arbitrary properties attached to them
Sanic and Blueprint forced to have compliant names
alphanumeric + _ + -
must start with letter or _
load_env keyword argument of Sanic
sanic.exceptions.abort
sanic.views.CompositionView
sanic.response.StreamingHTTPResponse
NOTE: the stream() response method (where you pass a callable streaming function) has been deprecated and will be removed in v22.6. You should upgrade all streaming responses to the new style: link
2320 Remove app instance from Config for error handler setting
Developer infrastructure
2251 Change dev install command
2286 Change codeclimate complexity threshold from 5 to 10
2287 Update host test function names so they are not overwritten
2292 Fail CI on error
2311, #2324 Do not run tests for draft PRs
2336 Remove paths from coverage checks
2338 Cleanup ports on tests
Improved Documentation
2269, #2329, #2333 Cleanup typos and fix language
Miscellaneous
2257, #2294, #2341 Add Python 3.10 support
2279, #2317, #2322 Add/correct missing type annotations
2305 Fix examples to use modern implementations"
17,Rerelease of v21.9.2 with some cleanup,Rerelease of v21.9.2 with some cleanup
18,"

2268 Make HTTP connections start in IDLE stage, avoiding delays and error messages


2310 More consistent config setting with post-FALLBACK_ERROR_FORMAT apply

","2268 Make HTTP connections start in IDLE stage, avoiding delays and error messages
2310 More consistent config setting with post-FALLBACK_ERROR_FORMAT apply"
19,"

2259 Allow non-conforming ErrorHandlers

",2259 Allow non-conforming ErrorHandlers
20,"

2129 Unpin uvloop

",2129 Unpin uvloop
21,"Version 21.9
Release Notes
Features

#2158, #2248 Complete overhaul of I/O to websockets
#2160 Add new 17 signals into server and request lifecycles
#2162 Smarter auto fallback formatting upon exception
#2184 Introduce implementation for copying a Blueprint
#2200 Accept header parsing
#2207 Log remote address if available
#2209 Add convenience methods to BP groups
#2216 Add default messages to SanicExceptions
#2225 Type annotation convenience for annotated handlers with path parameters
#2236 Allow Falsey (but not-None) responses from route handlers
#2238 Add exception decorator to Blueprint Groups
#2244 Explicit static directive for serving file or dir (ex: static(..., resource_type=""file""))
#2245 Close HTTP loop when connection task cancelled

Bugfixes

#2188 Fix the handling of the end of a chunked request
#2195 Resolve unexpected error handling on static requests
#2208 Make blueprint-based exceptions attach and trigger in a more intuitive manner
#2211 Fixed for handling exceptions of asgi app call
#2213 Fix bug where ws exceptions not being logged
#2231 Cleaner closing of tasks by using abort() in strategic places to avoid dangling sockets
#2247 Fix logging of auto-reload status in debug mode
#2246 Account for BP with exception handler but no routes

Developer infrastructure

#2194 HTTP unit tests with raw client
#2199 Switch to codeclimate
#2214 Try Reopening Windows Tests
#2229 Refactor HttpProtocol into a base class
#2230 Refactor server.py into multi-file module

Miscellaneous

#2173 Remove Duplicated Dependencies and PEP 517 Support 
#2193, #2196, #2217 Type annotation changes
","Version 21.9
Release Notes
Features
2158, #2248 Complete overhaul of I/O to websockets
2160 Add new 17 signals into server and request lifecycles
2162 Smarter auto fallback formatting upon exception
2184 Introduce implementation for copying a Blueprint
2200 Accept header parsing
2207 Log remote address if available
2209 Add convenience methods to BP groups
2216 Add default messages to SanicExceptions
2225 Type annotation convenience for annotated handlers with path parameters
2236 Allow Falsey (but not-None) responses from route handlers
2238 Add exception decorator to Blueprint Groups
2244 Explicit static directive for serving file or dir (ex: static(..., resource_type=""file""))
2245 Close HTTP loop when connection task cancelled
Bugfixes
2188 Fix the handling of the end of a chunked request
2195 Resolve unexpected error handling on static requests
2208 Make blueprint-based exceptions attach and trigger in a more intuitive manner
2211 Fixed for handling exceptions of asgi app call
2213 Fix bug where ws exceptions not being logged
2231 Cleaner closing of tasks by using abort() in strategic places to avoid dangling sockets
2247 Fix logging of auto-reload status in debug mode
2246 Account for BP with exception handler but no routes
Developer infrastructure
2194 HTTP unit tests with raw client
2199 Switch to codeclimate
2214 Try Reopening Windows Tests
2229 Refactor HttpProtocol into a base class
2230 Refactor server.py into multi-file module
Miscellaneous
2173 Remove Duplicated Dependencies and PEP 517 Support
2193, #2196, #2217 Type annotation changes"
22,"Bugfixes


2211 Fix handling of exceptions in ASGI app call

","Bugfixes
2211 Fix handling of exceptions in ASGI app call"
23,"Bugfixes


2178 Update sanic-routing to allow for better splitting of complex URI templates


2183 Proper handling of chunked request bodies to resolve phantom 503 in logs


2181 Resolve regression in exception logging


2201 Cleanup request info in pipelined requests

","Bugfixes
2178 Update sanic-routing to allow for better splitting of complex URI templates
2183 Proper handling of chunked request bodies to resolve phantom 503 in logs
2181 Resolve regression in exception logging
2201 Cleanup request info in pipelined requests"
24,"Features


2094 Add response.eof() method for closing a stream in a handler


2097 Allow case-insensitive HTTP Upgrade header


2104 Explicit usage of CIMultiDict getters


2109 Consistent use of error loggers


2114 New client_ip access of connection info instance


2119 Alternatate classes on instantiation for Config and Sanic.ctx


2133 Implement new version of AST router

Proper differentiation between alpha and string param types
Adds a slug param type, example: <foo:slug>
Deprecates <foo:string> in favor of <foo:str>
Deprecates <foo:number> in favor of <foo:float>
Adds a route.uri accessor



2136 CLI improvements with new optional params


2137 Add version_prefix to URL builders


2140 Event autoregistration with EVENT_AUTOREGISTER


2146, #2147 Require stricter names on Sanic() and Blueprint()


2150 Infinitely reusable and nestable Blueprint and BlueprintGroup


2154 Upgrade websockets dependency to min version


2155 Allow for maximum header sizes to be increased: REQUEST_MAX_HEADER_SIZE


2157 Allow app factory pattern in CLI


2165 Change HTTP methods to enums


2167 Allow auto-reloading on additional directories


2168 Add simple HTTP server to CLI


2170 Additional methods for attaching HTTPMethodView


Bugfixes


2091 Fix UserWarning in ASGI mode for missing __slots__


2099 Fix static request handler logging exception on 404


2110 Fix request.args.pop removes parameters inconsistently


2107 Fix type hinting for load_env


2127 Make sure ASGI ws subprotocols is a list


2128 Fix issue where Blueprint exception handlers do not consistently route to proper handler


Deprecations and Removals


2156 Remove config value REQUEST_BUFFER_QUEUE_SIZE


2170 CompositionView deprecated and marked for removal in 21.12


2172 Deprecate StreamingHTTPResponse


Developer infrastructure


2149 Remove Travis CI in favor of GitHub Actions


Improved Documentation


2164 Fix typo in documentation


2100 Remove documentation for non-existent arguments

","Features
2094 Add response.eof() method for closing a stream in a handler
2097 Allow case-insensitive HTTP Upgrade header
2104 Explicit usage of CIMultiDict getters
2109 Consistent use of error loggers
2114 New client_ip access of connection info instance
2119 Alternatate classes on instantiation for Config and Sanic.ctx
2133 Implement new version of AST router
Proper differentiation between alpha and string param types
Adds a slug param type, example: 
Deprecates  in favor of 
Deprecates  in favor of 
Adds a route.uri accessor
2136 CLI improvements with new optional params
2137 Add version_prefix to URL builders
2140 Event autoregistration with EVENT_AUTOREGISTER
2146, #2147 Require stricter names on Sanic() and Blueprint()
2150 Infinitely reusable and nestable Blueprint and BlueprintGroup
2154 Upgrade websockets dependency to min version
2155 Allow for maximum header sizes to be increased: REQUEST_MAX_HEADER_SIZE
2157 Allow app factory pattern in CLI
2165 Change HTTP methods to enums
2167 Allow auto-reloading on additional directories
2168 Add simple HTTP server to CLI
2170 Additional methods for attaching HTTPMethodView
Bugfixes
2091 Fix UserWarning in ASGI mode for missing slots
2099 Fix static request handler logging exception on 404
2110 Fix request.args.pop removes parameters inconsistently
2107 Fix type hinting for load_env
2127 Make sure ASGI ws subprotocols is a list
2128 Fix issue where Blueprint exception handlers do not consistently route to proper handler
Deprecations and Removals
2156 Remove config value REQUEST_BUFFER_QUEUE_SIZE
2170 CompositionView deprecated and marked for removal in 21.12
2172 Deprecate StreamingHTTPResponse
Developer infrastructure
2149 Remove Travis CI in favor of GitHub Actions
Improved Documentation
2164 Fix typo in documentation
2100 Remove documentation for non-existent arguments"
25,"Bugfixes
2117 Add sanic-routing==0.6 with RouteGroup and resolve:


2116 Access logs not properly displaying body size


2103 Request body not automatically loading


2101 ASGI routes not extracting body


2090 Edge case on router with overloading

","Bugfixes
2117 Add sanic-routing==0.6 with RouteGroup and resolve:
2116 Access logs not properly displaying body size
2103 Request body not automatically loading
2101 ASGI routes not extracting body
2090 Edge case on router with overloading"
26,NO RELEASE,NO RELEASE
27,"Bugfixes


2081 Disable response timeout on websocket connections


2085 Make sure that blueprints with no slash is maintained when applied

","Bugfixes
2081 Disable response timeout on websocket connections
2085 Make sure that blueprints with no slash is maintained when applied"
28,"Bugfixes

#2076 Static files inside subfolders are not accessible (404)
","Bugfixes
2076 Static files inside subfolders are not accessible (404)"
29,"Release Notes
Features

#1876 Unified streaming server
#2005 New Request.id property
#2008 Allow Pathlib Path objects to be passed to app.static() helper
#2010 #2031 New startup-optimized router
#2018 #2064 Listeners for main server process
#2032 Add raw header info to request object
#2042 #2060 #2061 Introduce Signals API
#2043 Add __str__ and __repr__ to Sanic and Blueprint
#2047 Enable versioning and strict slash on BlueprintGroup
#2053 Make get_app name argument optional
#2055 JSON encoder change via app
#2063 App and connection level context objects

Bugfixes and issues resolved

Resolve #1420 url_for where strict_slashes are on for a path ending in /
Resolve #1525 Routing is incorrect with some special characters
Resolve #1653 ASGI headers in body
Resolve #1722 Using curl in chunk mode
Resolve #1730 Extra content in ASGI streaming response
Resolve #1749 Restore broken middleware edge cases
Resolve #1785 #1804 Synchronous error handlers
Resolve #1790 Protocol errors did not support async error handlers #1790
Resolve #1824 Timeout on specific methods
Resolve #1875 Response timeout error from all routes after returning several timeouts from a specific route
Resolve #1988 Handling of safe methods with body
#2001 Raise ValueError when cookie max-age is not an integer

Deprecations and Removals

#2007
Config using from_envvar
Config using from_pyfile
Config using from_object


#2009 Remove Sanic test client to its own package
#2036 #2037 Drop Python 3.6 support
Request.endpoint deprecated in favor of Request.name
handler type name prefixes removed (static, websocket, etc)

Developer infrastructure

#1995 Create FUNDING.yml
#2013 Add codeql to CI pipeline
#2038 Codecov configuration updates
#2049 Updated setup.py to use find_packages

Improved Documentation

#1218 Documentation for sanic.log.* is missing
#1608 Add documentation on calver and LTS
#1731 Support mounting application elsewhere than at root path
#2006 Upgraded type annotations and improved docstrings and API documentation
#2052 Fix some examples and docs

Miscellaneous

Request.route property
Better websocket subprotocols support
Resolve bug with middleware in Blueprint Group when passed callable
Moves common logic between Blueprint and Sanic into mixins
Route naming changed to be more consistent
request endpoint is the route name
route names are fully namespaced


Some new convenience decorators:
@app.main_process_start
@app.main_process_stop
@app.before_server_start
@app.after_server_start
@app.before_server_stop
@app.after_server_stop
@app.on_request
@app.on_response


Fixes Allow header that did not include HEAD
Using ""name"" keyword in url_for for a ""static"" route where name does not exist
Cannot have multiple app.static() without using the named param
Using ""filename"" keyword in url_for on a file route
unquote in route def (not automatic)
routes_all is tuples
Handler arguments are kwarg only
request.match_info is now a cached (and not computed) property
Unknown static file mimetype is sent as application/octet-stream
_host keyword in url_for
Add charset default to utf-8 for text and js content types if not specified
Version for a route can be str, float, or int
Route has ctx property
App has routes_static, routes_dynamic, routes_regex
#2044 Code cleanup and refactoring
#2072 Remove BaseSanic metaclass
#2074 Performance adjustments in handle_request_
","Release Notes
Features
1876 Unified streaming server
2005 New Request.id property
2008 Allow Pathlib Path objects to be passed to app.static() helper
2010 #2031 New startup-optimized router
2018 #2064 Listeners for main server process
2032 Add raw header info to request object
2042 #2060 #2061 Introduce Signals API
2043 Add str and repr to Sanic and Blueprint
2047 Enable versioning and strict slash on BlueprintGroup
2053 Make get_app name argument optional
2055 JSON encoder change via app
2063 App and connection level context objects
Bugfixes and issues resolved
Resolve #1420 url_for where strict_slashes are on for a path ending in /
Resolve #1525 Routing is incorrect with some special characters
Resolve #1653 ASGI headers in body
Resolve #1722 Using curl in chunk mode
Resolve #1730 Extra content in ASGI streaming response
Resolve #1749 Restore broken middleware edge cases
Resolve #1785 #1804 Synchronous error handlers
Resolve #1790 Protocol errors did not support async error handlers #1790
Resolve #1824 Timeout on specific methods
Resolve #1875 Response timeout error from all routes after returning several timeouts from a specific route
Resolve #1988 Handling of safe methods with body
2001 Raise ValueError when cookie max-age is not an integer
Deprecations and Removals
2007
Config using from_envvar
Config using from_pyfile
Config using from_object
2009 Remove Sanic test client to its own package
2036 #2037 Drop Python 3.6 support
Request.endpoint deprecated in favor of Request.name
handler type name prefixes removed (static, websocket, etc)
Developer infrastructure
1995 Create FUNDING.yml
2013 Add codeql to CI pipeline
2038 Codecov configuration updates
2049 Updated setup.py to use find_packages
Improved Documentation
1218 Documentation for sanic.log.* is missing
1608 Add documentation on calver and LTS
1731 Support mounting application elsewhere than at root path
2006 Upgraded type annotations and improved docstrings and API documentation
2052 Fix some examples and docs
Miscellaneous
Request.route property
Better websocket subprotocols support
Resolve bug with middleware in Blueprint Group when passed callable
Moves common logic between Blueprint and Sanic into mixins
Route naming changed to be more consistent
request endpoint is the route name
route names are fully namespaced
Some new convenience decorators:
@app.main_process_start
@app.main_process_stop
@app.before_server_start
@app.after_server_start
@app.before_server_stop
@app.after_server_stop
@app.on_request
@app.on_response
Fixes Allow header that did not include HEAD
Using ""name"" keyword in url_for for a ""static"" route where name does not exist
Cannot have multiple app.static() without using the named param
Using ""filename"" keyword in url_for on a file route
unquote in route def (not automatic)
routes_all is tuples
Handler arguments are kwarg only
request.match_info is now a cached (and not computed) property
Unknown static file mimetype is sent as application/octet-stream
_host keyword in url_for
Add charset default to utf-8 for text and js content types if not specified
Version for a route can be str, float, or int
Route has ctx property
App has routes_static, routes_dynamic, routes_regex
2044 Code cleanup and refactoring
2072 Remove BaseSanic metaclass
2074 Performance adjustments in handle_request_"
30,"Version 20.12.3
Bugfixes

#2021 Remove prefix from websocket handler name
","Version 20.12.3
Bugfixes
2021 Remove prefix from websocket handler name"
31,"Dependencies


2026 Fix uvloop to 0.14 because 0.15 drops Python 3.6 support


2029 Remove old chardet requirement, add in hard multidict requirement

","Dependencies
2026 Fix uvloop to 0.14 because 0.15 drops Python 3.6 support
2029 Remove old chardet requirement, add in hard multidict requirement"
32,"Dependencies


2025 Fix uvloop to 0.14 because 0.15 drops Python 3.6 support


2027 Remove old chardet requirement, add in hard multidict requirement

","Dependencies
2025 Fix uvloop to 0.14 because 0.15 drops Python 3.6 support
2027 Remove old chardet requirement, add in hard multidict requirement"
33,"Features


1993 Add disable app registry

","Features
1993 Add disable app registry"
34,"Version 20.12.0
Features

[#1945][] Static route more verbose if file not found
[#1954][] Fix static routes registration on a blueprint
[#1961][] Add Python 3.9 support
[#1962][] Sanic CLI upgrade
[#1967][] Update aiofile version requirements
[#1969][] Update multidict version requirements
[#1970][] Add py.typed file
[#1972][] Speed optimization in request handler
[#1979][] Add app registry and Sanic class level app retrieval

Bugfixes

[#1965][] Fix Chunked Transport-Encoding in ASGI streaming
    response

Deprecations and Removals

[#1981][] Cleanup and remove deprecated code

Developer infrastructure

[#1956][] Fix load module test
[#1973][] Transition Travis from .org to .com
[#1986][] Update tox requirements

Improved Documentation

[#1951][] Documentation improvements
[#1983][] Remove duplicate contents in testing.rst
[#1984][] Fix typo in routing.rst
","Version 20.12.0
Features
[#1945][] Static route more verbose if file not found
[#1954][] Fix static routes registration on a blueprint
[#1961][] Add Python 3.9 support
[#1962][] Sanic CLI upgrade
[#1967][] Update aiofile version requirements
[#1969][] Update multidict version requirements
[#1970][] Add py.typed file
[#1972][] Speed optimization in request handler
[#1979][] Add app registry and Sanic class level app retrieval
Bugfixes
[#1965][] Fix Chunked Transport-Encoding in ASGI streaming
    response
Deprecations and Removals
[#1981][] Cleanup and remove deprecated code
Developer infrastructure
[#1956][] Fix load module test
[#1973][] Transition Travis from .org to .com
[#1986][] Update tox requirements
Improved Documentation
[#1951][] Documentation improvements
[#1983][] Remove duplicate contents in testing.rst
[#1984][] Fix typo in routing.rst"
35,"Bugfixes

#1957 Removes duplicate headers in ASGI streaming body
#1954 Fix static route registration on blueprints
","Bugfixes
1957 Removes duplicate headers in ASGI streaming body
1954 Fix static route registration on blueprints"
36,"Bugfixes

#1959 Removes duplicate headers in ASGI streaming body
","Bugfixes
1959 Removes duplicate headers in ASGI streaming body"
37,"Features

#1887 Pass subprotocols in websockets (both sanic server and ASGI)
#1894 Automatically set test_mode flag on app instance
#1903 Add new unified method for updating app values
#1906, #1909 Adds WEBSOCKET_PING_TIMEOUT and WEBSOCKET_PING_INTERVAL configuration values
#1935 httpx version dependency updated, it is slated for removal as a dependency in v20.12
#1937  Added auto, text, and json fallback error handlers (in v21.3, the default will change form html to auto)

Bugfixes

#1897 Resolves exception from unread bytes in stream

Deprecations and Removals

#1903 config.from_envar, config.from_pyfile, and config.from_object are deprecated and set to be removed in v21.3

Developer infrastructure

#1890, #1891 Update isort calls to be compatible with new API
#1893 Remove version section from setup.cfg
#1924 Adding --strict-markers for pytest

Improved Documentation

#1922 Add explicit ASGI compliance to the README
","Features
1887 Pass subprotocols in websockets (both sanic server and ASGI)
1894 Automatically set test_mode flag on app instance
1903 Add new unified method for updating app values
1906, #1909 Adds WEBSOCKET_PING_TIMEOUT and WEBSOCKET_PING_INTERVAL configuration values
1935 httpx version dependency updated, it is slated for removal as a dependency in v20.12
1937  Added auto, text, and json fallback error handlers (in v21.3, the default will change form html to auto)
Bugfixes
1897 Resolves exception from unread bytes in stream
Deprecations and Removals
1903 config.from_envar, config.from_pyfile, and config.from_object are deprecated and set to be removed in v21.3
Developer infrastructure
1890, #1891 Update isort calls to be compatible with new API
1893 Remove version section from setup.cfg
1924 Adding --strict-markers for pytest
Improved Documentation
1922 Add explicit ASGI compliance to the README"
38,"Bugfixes

#1884 Socket binding implemented properly for IPv6 and UNIX sockets
","Bugfixes
1884 Socket binding implemented properly for IPv6 and UNIX sockets"
39,"Features

#1641 Socket binding implemented properly for IPv6 and UNIX sockets
","Features
1641 Socket binding implemented properly for IPv6 and UNIX sockets"
40,"Features


#1760 Add version parameter to websocket routes


#1866 Add sanic as an entry point command


#1880 Add handler names for websockets for url_for usage 


Bugfixes


#1776 Bug fix for host parameter issue with lists


#1842 Fix static _handler pickling error


#1827 Fix reloader on OSX py38 and Windows


#1848 Reverse named_response_middlware execution order, to match normal response middleware execution order


#1853 Fix pickle error when attempting to pickle an application which contains websocket routes


Deprecations and Removals

#1739 Deprecate body_bytes to merge into body

Developer infrastructure


#1852 Fix naming of CI test env on Python nightlies


#1857 Adjust websockets version to setup.py


#1869 Wrap run()'s ""protocol"" type annotation in Optional[]


Improved Documentation


#1846 Update docs to clarify response middleware execution order


#1865 Fixing rst format issue that was hiding documentation

","Features
1760 Add version parameter to websocket routes
1866 Add sanic as an entry point command
1880 Add handler names for websockets for url_for usage
Bugfixes
1776 Bug fix for host parameter issue with lists
1842 Fix static _handler pickling error
1827 Fix reloader on OSX py38 and Windows
1848 Reverse named_response_middlware execution order, to match normal response middleware execution order
1853 Fix pickle error when attempting to pickle an application which contains websocket routes
Deprecations and Removals
1739 Deprecate body_bytes to merge into body
Developer infrastructure
1852 Fix naming of CI test env on Python nightlies
1857 Adjust websockets version to setup.py
1869 Wrap run()'s ""protocol"" type annotation in Optional[]
Improved Documentation
1846 Update docs to clarify response middleware execution order
1865 Fixing rst format issue that was hiding documentation"
41,ChangeLogs: https://github.com/huge-success/sanic/blob/master/CHANGELOG.rst#version-2030,ChangeLogs: link
42,"Resolve forgotten slot, see #1743 ","Resolve forgotten slot, see #1743 "
43,"19.12.0 LTS
Major changes to bring sanic up to current. Please consult the changelog. There are breaking changes in this release; please continue to use 19.9.X or the previous 18.12.X LTS release which will continued to be supported until December 2021 for stability.","19.12.0 LTS
Major changes to bring sanic up to current. Please consult the changelog. There are breaking changes in this release; please continue to use 19.9.X or the previous 18.12.X LTS release which will continued to be supported until December 2021 for stability."
44,,
45,,
46,,
47,,
48,"Sanic 19.6.0 is a standard release based on the CalVer versioning adopted in 2018.
Changes:
1475 ASGI support (Beta)
1436 Add Configure support from object string
1544 Drop dependency on distutil
1562 Switch to use request-async for test_client from aiohttp
Fixes:
1587 Add missing handler for Expect header.
1560 Allow to disable Transfer-Encoding: chunked.
1558 Fix graceful shutdown.
1594 Fix strict slashes behavior.
Deprecations:
1568 Deprecate route removal.
1562 Drop Python3.5 support.","Sanic 19.6.0 is a standard release based on the CalVer versioning adopted in 2018.
Changes:
1475 ASGI support (Beta)
1436 Add Configure support from object string
1544 Drop dependency on distutil
1562 Switch to use request-async for test_client from aiohttp
Fixes:
1587 Add missing handler for Expect header.
1560 Allow to disable Transfer-Encoding: chunked.
1558 Fix graceful shutdown.
1594 Fix strict slashes behavior.
Deprecations:
1568 Deprecate route removal.
1562 Drop Python3.5 support."
49,A re-do of the 19.03 release ,A re-do of the 19.03 release 
50,"Sanic 19.3 is a standard release based on the CalVer versioning adopted in 2018.
Changes:
1502 Remove current_time prefetch
1499 Add Route Resolution Benchmarking to Unit Test
1497 Recognizes non-ASCII filenames in RFC 2231, and suport filename length is zero for multipart/form-data.
1489 Added ""databases"" (documentation)
1487 Remove deleted repo from extensions list
1484 Enforce Datetime Type for Expires on Set-Cookie
1483 Add sanic-zipkin to extensions list
1482 Add stream support for bp.add_route()
1481 Allow negative int/number in path
1478 Upgrade setuptools version and use native docutils in doc build
1472 Remove unwanted None check for repr in Request class
1470 make Sanic.create_server return an asyncio.Server
Fixes:
1516 Fix typo at the exception documentation
1515 fix linter issue causing travis build failures (fix #1514)
1510 fix typo in Asyncio example
1501 Fix the auto_reloader to work when the executable was launched with a module
1490 Fix python version in doc build
1486 did you mean specific? (documentation typo)
1477 Fix grammar in README.md
1476 add Request.not_grouped_args, deprecation warning Request.raw_args  deprecation idea discussion
1464 Upgrade pytest, and fix caplog unit tests","Sanic 19.3 is a standard release based on the CalVer versioning adopted in 2018.
Changes:
1502 Remove current_time prefetch
1499 Add Route Resolution Benchmarking to Unit Test
1497 Recognizes non-ASCII filenames in RFC 2231, and suport filename length is zero for multipart/form-data.
1489 Added ""databases"" (documentation)
1487 Remove deleted repo from extensions list
1484 Enforce Datetime Type for Expires on Set-Cookie
1483 Add sanic-zipkin to extensions list
1482 Add stream support for bp.add_route()
1481 Allow negative int/number in path
1478 Upgrade setuptools version and use native docutils in doc build
1472 Remove unwanted None check for repr in Request class
1470 make Sanic.create_server return an asyncio.Server
Fixes:
1516 Fix typo at the exception documentation
1515 fix linter issue causing travis build failures (fix #1514)
1510 fix typo in Asyncio example
1501 Fix the auto_reloader to work when the executable was launched with a module
1490 Fix python version in doc build
1486 did you mean specific? (documentation typo)
1477 Fix grammar in README.md
1476 add Request.not_grouped_args, deprecation warning Request.raw_args  deprecation idea discussion
1464 Upgrade pytest, and fix caplog unit tests"
51,"

Changes:

Improved codebase test coverage from 81% to 91%.
Added stream_large_files and host examples in static_file document
Added methods to append and finish body content on Request (#1379)
Integrated with .appveyor.yml for windows ci support
Added documentation for AF_INET6 and AF_UNIX socket usage
Adopt black/isort for codestyle
Cancel task when connection_lost
Simplify request ip and port retrieval logic
Handle config error in load config file.
Integrate with codecov for CI
Add missed documentation for config section.
Deprecate Handler.log
Pinned httptools requirement to version 0.0.10+



Fixes:

Fix remove_entity_headers helper function (#1415)
Fix TypeError when use Blueprint.group() to group blueprint with default url_prefix, Use os.path.normpath to avoid invalid url_prefix like api//v1
f8a6af1 Rename the http module to helpers to prevent conflicts with the built-in Python http library (fixes #1323)
Fix unittests on windows
Fix Namespacing of sanic logger
Fix missing quotes in decorator example
Fix redirect with quoted param
Fix doc for latest blueprint code
Fix build of latex documentation relating to markdown lists
Fix loop exception handling in app.py
Fix content length mismatch in windows and other platform
Fix Range header handling for static files (#1402)
Fix the logger and make it work (#1397)
Fix type pikcle->pickle in multiprocessing test
Fix pickling blueprints Change the string passed in the ""name"" section of the namedtuples in Blueprint to match the name of the Blueprint module attribute name. This allows blueprints to be pickled and unpickled, without errors, which is a requirment of running Sanic in multiprocessing mode in Windows. Added a test for pickling and unpickling blueprints Added a test for pickling and unpickling sanic itself Added a test for enabling multiprocessing on an app with a blueprint (only useful to catch this bug if the tests are run on Windows).
Fix document for logging


","Changes:
Improved codebase test coverage from 81% to 91%.
Added stream_large_files and host examples in static_file document
Added methods to append and finish body content on Request (#1379)
Integrated with .appveyor.yml for windows ci support
Added documentation for AF_INET6 and AF_UNIX socket usage
Adopt black/isort for codestyle
Cancel task when connection_lost
Simplify request ip and port retrieval logic
Handle config error in load config file.
Integrate with codecov for CI
Add missed documentation for config section.
Deprecate Handler.log
Pinned httptools requirement to version 0.0.10+
Fixes:
Fix remove_entity_headers helper function (#1415)
Fix TypeError when use Blueprint.group() to group blueprint with default url_prefix, Use os.path.normpath to avoid invalid url_prefix like api//v1
f8a6af1 Rename the http module to helpers to prevent conflicts with the built-in Python http library (fixes #1323)
Fix unittests on windows
Fix Namespacing of sanic logger
Fix missing quotes in decorator example
Fix redirect with quoted param
Fix doc for latest blueprint code
Fix build of latex documentation relating to markdown lists
Fix loop exception handling in app.py
Fix content length mismatch in windows and other platform
Fix Range header handling for static files (#1402)
Fix the logger and make it work (#1397)
Fix type pikcle->pickle in multiprocessing test
Fix pickling blueprints Change the string passed in the ""name"" section of the namedtuples in Blueprint to match the name of the Blueprint module attribute name. This allows blueprints to be pickled and unpickled, without errors, which is a requirment of running Sanic in multiprocessing mode in Windows. Added a test for pickling and unpickling blueprints Added a test for pickling and unpickling sanic itself Added a test for enabling multiprocessing on an app with a blueprint (only useful to catch this bug if the tests are run on Windows).
Fix document for logging"
52,,
53,"To see the exhaustive list of pull requests included in this release see:
https://github.com/channelcat/sanic/milestone/12?closed=1
Highlights

Fixed a bug where trigger_events didn't actually trigger events in async create_server #885 (Thanks to @yunstanford)
Changed strict_slashes to be True by default #900 (Thanks to @yunstanford)
Changed Unauthorized exception __init__ to be more like the rest of the exceptions #914 (Thanks to @CharAct3)
Added an option to define a name for a route #901 (Thanks to @lixxu)
Made the prefixes for the environment variables configurable #931 (Thanks to @Tim-Erwin)
Fixed windows support where syslog raises an ImportError #947 (Thanks to @lanfon72)
Added support for vhosts in static routes #953 (Thanks to @r0fls)
Split RequestTimeout, ResponseTimeout, and KeepAliveTimeout into different timeouts #939 (Thanks to @ashleysommer)
Fixed Connection lost before response written #965 (Thanks to @samael500)
SanicTestClient now gets its own port #1008 (Thanks to @youknowone)
","To see the exhaustive list of pull requests included in this release see:
link
Highlights
Fixed a bug where trigger_events didn't actually trigger events in async create_server #885 (Thanks to @yunstanford)
Changed strict_slashes to be True by default #900 (Thanks to @yunstanford)
Changed Unauthorized exception init to be more like the rest of the exceptions #914 (Thanks to @CharAct3)
Added an option to define a name for a route #901 (Thanks to @lixxu)
Made the prefixes for the environment variables configurable #931 (Thanks to @Tim-Erwin)
Fixed windows support where syslog raises an ImportError #947 (Thanks to @lanfon72)
Added support for vhosts in static routes #953 (Thanks to @r0fls)
Split RequestTimeout, ResponseTimeout, and KeepAliveTimeout into different timeouts #939 (Thanks to @ashleysommer)
Fixed Connection lost before response written #965 (Thanks to @samael500)
SanicTestClient now gets its own port #1008 (Thanks to @youknowone)"
54,"To see the exhaustive list of pull requests included in this release see:
https://github.com/channelcat/sanic/milestone/10?closed=1
Highlights

Fix error where transport.get_extra_info returned None #717 
Remove uvloop requirement for gunicorn worker #719 
Fix error where request.token() would fail if Authorization headers were not provided #731 
Added an abort function to easily exit out of route handlers #740 
Added a file_stream response handler #733 
Add support for streaming large static files #734 
Added streaming requests #697 
Added websocket max_size and max_queue configuration #748 
Fixed test client not working with HTTP2 #809 
Added match_info property to request class #802 
Added support for recycling the gunicorn worker #800 
Added an Unauthorized exception #813 
Added a Forbidden exception #814 
Added a graceful timeout when shutdown #815 
","To see the exhaustive list of pull requests included in this release see:
link
Highlights
Fix error where transport.get_extra_info returned None #717 
Remove uvloop requirement for gunicorn worker #719 
Fix error where request.token() would fail if Authorization headers were not provided #731 
Added an abort function to easily exit out of route handlers #740 
Added a file_stream response handler #733 
Add support for streaming large static files #734 
Added streaming requests #697 
Added websocket max_size and max_queue configuration #748 
Fixed test client not working with HTTP2 #809 
Added match_info property to request class #802 
Added support for recycling the gunicorn worker #800 
Added an Unauthorized exception #813 
Added a Forbidden exception #814 
Added a graceful timeout when shutdown #815 "
55,"To see the exhaustive list of pull requests included in this release see:
https://github.com/channelcat/sanic/milestone/9?closed=1
If you're wondering why 0.5.3 exists and there's no change-log for it, the release was actually botched by my error.
Consider 0.5.4 the latest and greatest for sanic.
Highlights

Fix ImportError not preserved in __main__.py #665 (Thanks to @pyx)
Removed an un-needed if statement #662 (Thanks to @rsrdesarrollo)
Create an access log #625 (Thanks to @zenixls2)
Correctly kill child processes #668
Added full exception chain rendering #677 (Thanks to @abuckenheimer)
Remove the things we said we were going to remove #681 #686 (Thanks to @38elements)
Actually have the README show up correctly on PyPI (hopefully) (Thanks to @graingert)
","To see the exhaustive list of pull requests included in this release see:
link
If you're wondering why 0.5.3 exists and there's no change-log for it, the release was actually botched by my error.
Consider 0.5.4 the latest and greatest for sanic.
Highlights
Fix ImportError not preserved in main.py #665 (Thanks to @pyx)
Removed an un-needed if statement #662 (Thanks to @rsrdesarrollo)
Create an access log #625 (Thanks to @zenixls2)
Correctly kill child processes #668
Added full exception chain rendering #677 (Thanks to @abuckenheimer)
Remove the things we said we were going to remove #681 #686 (Thanks to @38elements)
Actually have the README show up correctly on PyPI (hopefully) (Thanks to @graingert)"
56,"To see the exhaustive list of pull requests included in this release see:
https://github.com/channelcat/sanic/milestone/8?closed=1
Highlights

New contributing rules are now present for all incoming PR's
Now allow unknown status codes per #643 (Thanks to @aryeh)
Fix absolute path bug for static files #647 
Fix signals being shared amongst multiple Sanic apps #652 (Thanks to @38elements)
Fix duplicate signal settings for gunicorn worker #655 
Update token attribute to function with/without Token: prefix #656 
Allow disabling of keep-alive functionality through config/environment variable. #646 
","To see the exhaustive list of pull requests included in this release see:
link
Highlights
New contributing rules are now present for all incoming PR's
Now allow unknown status codes per #643 (Thanks to @aryeh)
Fix absolute path bug for static files #647 
Fix signals being shared amongst multiple Sanic apps #652 (Thanks to @38elements)
Fix duplicate signal settings for gunicorn worker #655 
Update token attribute to function with/without Token: prefix #656 
Allow disabling of keep-alive functionality through config/environment variable. #646 "
57,Quick release to fix a security flaw found by @yeahx in issue #633 ,Quick release to fix a security flaw found by @yeahx in issue #633 
58,"To see the exhaustive list of pull requests included in this release see:
https://github.com/channelcat/sanic/milestone/6?closed=1
Highlights

Allow a socket to be passed even when not multiprocessing #506 (Thanks to @zenixls2)
Websockets! #469 (Thanks to @miguelgrinberg)
Streaming content handlers #473 (Thanks to @subyraman)
A gunicorn worker! #545 (Thanks to @messense)
Setting configurations through environment variables #573 
Adding a way to pass in a custom request class #622 (Thanks to @aryeh)
","To see the exhaustive list of pull requests included in this release see:
link
Highlights
Allow a socket to be passed even when not multiprocessing #506 (Thanks to @zenixls2)
Websockets! #469 (Thanks to @miguelgrinberg)
Streaming content handlers #473 (Thanks to @subyraman)
A gunicorn worker! #545 (Thanks to @messense)
Setting configurations through environment variables #573 
Adding a way to pass in a custom request class #622 (Thanks to @aryeh)"
59,"Highlights

Fixes issue #492, where users could not install the pip package with older versions of setuptools
Fixes issue #494, where multiple handlers with the same route would not be registered correctly to the router.
","Highlights
Fixes issue #492, where users could not install the pip package with older versions of setuptools
Fixes issue #494, where multiple handlers with the same route would not be registered correctly to the router."
60,"To see the exhaustive list of pull requests included in this release see: 
https://github.com/channelcat/sanic/milestone/5?closed=1
Highlights

Content range (HTTP 1.1 feature) #378 (Thanks to @aquacash5)
Added a loop property to app class for easier access #409 (Thanks to @r0fls)
Middleware decorators now take explicit args #406 (Thanks to @agoose77)
uvloop is now a soft dependency for Windows users #402 (Thanks to @agoose77)
Event listeners (like `before_start, after_start etc.) are now handled through decorators #408 (Thanks to @agoose77)
Ensure future added as a way to ensure execution of functions after an app starts #411 (Thanks to @r0fls)
CompositionView now has tests! #416 (Thanks to @subyraman)
Blueprints now support adding HTTPMethodView as routes #424 (Thanks to @growingdever)
App object now has a flask-like test_client property #431 (Thanks to @subyraman)
Request object now includes app which acts as the currently running app #476

Notes
This release may be a bit short-lived, we have a number of great pull requests that support features like websockets, HTTP pipelining, streaming content, and http2 support so 0.5.0 may come as early as next week.","To see the exhaustive list of pull requests included in this release see: 
link
Highlights
Content range (HTTP 1.1 feature) #378 (Thanks to @aquacash5)
Added a loop property to app class for easier access #409 (Thanks to @r0fls)
Middleware decorators now take explicit args #406 (Thanks to @agoose77)
uvloop is now a soft dependency for Windows users #402 (Thanks to @agoose77)
Event listeners (like `before_start, after_start etc.) are now handled through decorators #408 (Thanks to @agoose77)
Ensure future added as a way to ensure execution of functions after an app starts #411 (Thanks to @r0fls)
CompositionView now has tests! #416 (Thanks to @subyraman)
Blueprints now support adding HTTPMethodView as routes #424 (Thanks to @growingdever)
App object now has a flask-like test_client property #431 (Thanks to @subyraman)
Request object now includes app which acts as the currently running app #476
Notes
This release may be a bit short-lived, we have a number of great pull requests that support features like websockets, HTTP pipelining, streaming content, and http2 support so 0.5.0 may come as early as next week."
61,"To see the exhaustive list of pull requests included in this release see: 
https://github.com/channelcat/sanic/milestone/4?closed=1
Highlights


199 Add methods to load configs from a file (Thanks to @Tim-Erwin)


362 We're on readthedocs! (Thanks to @channelcat)


360 Fixed dynamic route overloading


387 Added url_for method (Thanks to @subyraman)

","To see the exhaustive list of pull requests included in this release see: 
link
Highlights
199 Add methods to load configs from a file (Thanks to @Tim-Erwin)
362 We're on readthedocs! (Thanks to @channelcat)
360 Fixed dynamic route overloading
387 Added url_for method (Thanks to @subyraman)"
62,"New features galore! 
To see the exhaustive list of pull requests included in this release see: https://github.com/channelcat/sanic/milestone/3?closed=1
Highlights

Added in redirect method (#294, thanks to @pcdinh and @subyraman)
Added rich HTML tracebacks for debug mode (#291, thanks to @subyraman)
Fixes a write_error loop that could lead to stack overflows (#309, #307, #241) 
Route overloading! Multiple functions for different methods of routes! (#311, thanks to @youknowone)
Greatly improved documentation along with sphinx compatibility (#229, thanks to @kdelwat)
Function decorators now have `['GET'] as the default method (#316, thanks to @youknowone)
Removed the multidict requirement with our own implementation of CIDict (#302, #328)
Added an async run function to the app (#348)
Removed loop as an argument for the app (#335)
","New features galore! 
To see the exhaustive list of pull requests included in this release see: link
Highlights
Added in redirect method (#294, thanks to @pcdinh and @subyraman)
Added rich HTML tracebacks for debug mode (#291, thanks to @subyraman)
Fixes a write_error loop that could lead to stack overflows (#309, #307, #241) 
Route overloading! Multiple functions for different methods of routes! (#311, thanks to @youknowone)
Greatly improved documentation along with sphinx compatibility (#229, thanks to @kdelwat)
Function decorators now have `['GET'] as the default method (#316, thanks to @youknowone)
Removed the multidict requirement with our own implementation of CIDict (#302, #328)
Added an async run function to the app (#348)
Removed loop as an argument for the app (#335)"
63,"This pull request encompasses a lot of bug fixes among other things.
To see the exhaustive list visit: https://github.com/channelcat/sanic/milestone/2?closed=1
Highlights:

Multiprocessing fix #276 (Thank you to @r0fls)
Updates to class based views to make them thread safe #274 (Thank you to @AntonDnepr)
Adding support for virtual hosts through the main application and blueprints #285, #287 
Added methods to remove routes from api/router #243 (Thanks to @dutradda)

Next up on the table:

Finishing up WSGI compliance (Maybe looking into ASGI compliance as well)
Working to finish up live reload as highlighted in #168 (We have a prototype but it's not as efficient as I'd like it to be)
Moving our documentation to Sphinx and publishing to readthedocs as highlighted in #229 
","This pull request encompasses a lot of bug fixes among other things.
To see the exhaustive list visit: link
Highlights:
Multiprocessing fix #276 (Thank you to @r0fls)
Updates to class based views to make them thread safe #274 (Thank you to @AntonDnepr)
Adding support for virtual hosts through the main application and blueprints #285, #287 
Added methods to remove routes from api/router #243 (Thanks to @dutradda)
Next up on the table:
Finishing up WSGI compliance (Maybe looking into ASGI compliance as well)
Working to finish up live reload as highlighted in #168 (We have a prototype but it's not as efficient as I'd like it to be)
Moving our documentation to Sphinx and publishing to readthedocs as highlighted in #229 "
64,"PR's included in the milestone can be found here: https://github.com/channelcat/sanic/milestone/1?closed=1
Changes:

Addition of Python 3.6 to tox tests and travis tests (We will eventually be using the tox.ini as our main travis testing script as well)
New raising of error if an invalid response is returned
Add in a way to encode objects that are un-encodable in response objects
","PR's included in the milestone can be found here: link
Changes:
Addition of Python 3.6 to tox tests and travis tests (We will eventually be using the tox.ini as our main travis testing script as well)
New raising of error if an invalid response is returned
Add in a way to encode objects that are un-encodable in response objects"
65,"Changelog:

Added HTTPMethodView #167 
Added shared request storage #163 
Changed request timeout process #172 
Provide a default app name #159
","Changelog:
Added HTTPMethodView #167 
Added shared request storage #163 
Changed request timeout process #172 
Provide a default app name #159"
66,"Changelog:
- Static file support
- Lazy Cookie Setting (slight speed improvement when not setting cookies)","Changelog:
- Static file support
- Lazy Cookie Setting (slight speed improvement when not setting cookies)"
67,"Changelog:
- Cookies
- Blueprint listeners and ordering
- Faster Router
- Fix: Incomplete file reads on medium+ sized post requests
Breaking: 
- after_start and before_stop now pass sanic as their first argument.  Current event listeners will need to be updated to accept the new argument","Changelog:
- Cookies
- Blueprint listeners and ordering
- Faster Router
- Fix: Incomplete file reads on medium+ sized post requests
Breaking: 
- after_start and before_stop now pass sanic as their first argument.  Current event listeners will need to be updated to accept the new argument"
